(dp0
(Vinsert
p1
I42
VSimpleName: setHandlers
p2
tp3
I1
s(Vinsert
p4
I7
VAssignment: |=
p5
tp6
I1
s(Vinsert
p7
I42
VSimpleName: Advisor
p8
tp9
I1
s(Vinsert
p10
I42
VSimpleName: connections
p11
tp12
I10
s(Vinsert
p13
I42
VSimpleName: SQLOver
p14
tp15
I5
s(Vinsert
p16
I45
VStringLiteral: "\u005cnLOB (\u005c"DATA\u005c") STORE AS SECUREFILE (TABLESPACE \u005c"USERS\u005c" ENABLE STORAGE IN ROW CHUNK 8192 NOCACHE LOGGING NOCOMPRESS KEEP_DUPLICATES)"
p17
tp18
I2
s(Vinsert
p19
I43
VSimpleType: SQLArrayExpr
p20
tp21
I3
s(Vinsert
p22
I45
VStringLiteral: "col.id = ( \u005cn"
p23
tp24
I1
s(Vinsert
p25
I45
VStringLiteral: "\u005ctc_date date,\u005cn"
p26
tp27
I2
s(Vinsert
p28
I43
VSimpleType: SQLBlockStatement
p29
tp30
I7
s(Vinsert
p31
I42
VSimpleName: setTableMapping
p32
tp33
I1
s(Vinsert
p34
I43
VSimpleType: FileWriter
p35
tp36
I1
s(Vinsert
p37
I42
VSimpleName: resource
p38
tp39
I8
s(Vinsert
p40
I42
VSimpleName: and
p41
tp42
I1
s(Vinsert
p43
I43
VSimpleType: OracleCursorExpr
p44
tp45
I4
s(Vinsert
p46
I42
VSimpleName: Lock
p47
tp48
I4
s(Vinsert
p49
I42
VSimpleName: renderer
p50
tp51
I1
s(Vinsert
p52
I42
VSimpleName: parseOpen
p53
tp54
I1
s(Vinsert
p55
I42
VSimpleName: setReadOnly
p56
tp57
I1
s(Vinsert
p58
I45
VStringLiteral: "openapp_log_d"
p59
tp60
I1
s(Vinsert
p61
I45
VStringLiteral: "\u005ct\u005ct'VerifyMobileCheckCode', \u005cn"
p62
tp63
I1
s(Vinsert
p64
I42
VSimpleName: OracleAlterTableAddConstaint
p65
tp66
I2
s(Vinsert
p67
I42
VSimpleName: MySqlIfStatement
p68
tp69
I1
s(Vinsert
p70
I40
VQualifiedName: FileConfigLoader.PROTOCOL_PREFIX
p71
tp72
I1
s(Vinsert
p73
I42
VSimpleName: getColumns
p74
tp75
I160
s(Vinsert
p76
I45
VStringLiteral: "CREATE SEQUENCE \u005c"AO_4AEACD_WEBHOOK_DAO_ID_SEQ\u005c" START WITH 1 INCREMENT BY 1 NOMAXVALUE MINVALUE 1"
p77
tp78
I1
s(Vinsert
p79
I45
VStringLiteral: " "
p80
tp81
I10
s(Vinsert
p82
I42
VSimpleName: getConditionValue
p83
tp84
I1
s(Vinsert
p85
I43
VSimpleType: ModelRulesClause
p86
tp87
I2
s(Vinsert
p88
I42
VSimpleName: HBaseDriver
p89
tp90
I8
s(Vinsert
p91
I42
VSimpleName: PGSetStatement
p92
tp93
I1
s(Vinsert
p94
I45
VStringLiteral: "SHOW "
p95
tp96
I2
s(Vinsert
p97
I42
VSimpleName: setSavepointName
p98
tp99
I1
s(Vinsert
p100
I45
VStringLiteral: "jdbc:log4jdbc:sqlserver:"
p101
tp102
I1
s(Vinsert
p103
I45
VStringLiteral: "FROM DUAL"
p104
tp105
I1
s(Vinsert
p106
I45
VStringLiteral: "\u005ct, c.promotion_value, c.owner_member_id, c.owner_seq, c.employees_count, c.annual_revenue\u005cn"
p107
tp108
I1
s(Vinsert
p109
I42
VSimpleName: getCreateNanoSpan
p110
tp111
I1
s(Vinsert
p112
I42
VSimpleName: getFieldCount
p113
tp114
I1
s(Vinsert
p115
I45
VStringLiteral: "\u005ct\u005ctAND b.type = p.type\u005cn"
p116
tp117
I1
s(Vinsert
p118
I40
VQualifiedName: words.length
p119
tp120
I1
s(Vinsert
p121
I42
VSimpleName: tenantCallBack
p122
tp123
I1
s(Vinsert
p124
I42
VSimpleName: checkFunctionInTableSource
p125
tp126
I1
s(Vinsert
p127
I42
VSimpleName: setRowCount
p128
tp129
I8
s(Vinsert
p130
I74
VParameterizedType: Map.Entry<String,Entity>
p131
tp132
I2
s(Vinsert
p133
I40
VQualifiedName: Level.WARN
p134
tp135
I1
s(Vinsert
p136
I45
VStringLiteral: "JdbcRollbackCount"
p137
tp138
I1
s(Vinsert
p139
I42
VSimpleName: incrementConnectionCloseCount
p140
tp141
I1
s(Vinsert
p142
I42
VSimpleName: getConnection
p143
tp144
I186
s(Vinsert
p145
I45
VStringLiteral: "SECURITY"
p146
tp147
I1
s(Vinsert
p148
I45
VStringLiteral: "\u005ctAFTER INSERT OR DELETE OR UPDATE\u005cn"
p149
tp150
I1
s(Vinsert
p151
I43
VSimpleType: MySqlShowProcessListStatement
p152
tp153
I4
s(Vinsert
p154
I43
VSimpleType: RuntimeException
p155
tp156
I7
s(Vinsert
p157
I42
VSimpleName: getFunction
p158
tp159
I6
s(Vinsert
p160
I45
VStringLiteral: "vbLLUrKeK2fhZ1JJscqkTZ4s6sZ86o5CkZQ1+fmoCEHRnn2mVV986ixuyTCSREZA25hXQFfU\u005cn"
p161
tp162
I1
s(Vinsert
p163
I45
VStringLiteral: "acc_bal NUMBER(11, 2);\u005cn"
p164
tp165
I1
s(Vinsert
p166
I45
VStringLiteral: "\u005ct\u005ct'VerifyEmail'\u005cn"
p167
tp168
I1
s(Vinsert
p169
I42
VSimpleName: outFile
p170
tp171
I2
s(Vinsert
p172
I40
VQualifiedName: JdbcParameterNull.DECIMAL
p173
tp174
I1
s(Vinsert
p175
I42
VSimpleName: isPrettyFormat
p176
tp177
I5
s(Vinsert
p178
I42
VSimpleName: skipSeparator
p179
tp180
I1
s(Vinsert
p181
I42
VSimpleName: getQueueLength
p182
tp183
I1
s(Vinsert
p184
I45
VStringLiteral: "TO"
p185
tp186
I3
s(Vinsert
p187
I42
VSimpleName: setMustParameterized
p188
tp189
I6
s(Vinsert
p190
I42
VSimpleName: getTableSource
p191
tp192
I15
s(Vinsert
p193
I45
VStringLiteral: "\u005ctBEGIN\u005cn"
p194
tp195
I4
s(Vinsert
p196
I42
VSimpleName: setOutFileColumnsEscaped
p197
tp198
I1
s(Vinsert
p199
I45
VStringLiteral: "stmt enter cache"
p200
tp201
I1
s(Vinsert
p202
I55
VTypeDeclaration
p203
tp204
I55
s(Vinsert
p205
I45
VStringLiteral: "\u005ct\u005ct\u005ctRAISE no_comm;\u005cn"
p206
tp207
I1
s(Vinsert
p208
I42
VSimpleName: a2
p209
tp210
I1
s(Vinsert
p211
I40
VQualifiedName: op.priority
p212
tp213
I1
s(Vinsert
p214
I42
VSimpleName: test_true_subquery_2
p215
tp216
I1
s(Vinsert
p217
I45
VStringLiteral: "GROUPING SETS"
p218
tp219
I2
s(Vinsert
p220
I45
VStringLiteral: "tx_read_only"
p221
tp222
I2
s(Vinsert
p223
I42
VSimpleName: TabularData
p224
tp225
I3
s(Vinsert
p226
I42
VSimpleName: print
p227
tp228
I402
s(Vinsert
p229
I45
VStringLiteral: "ISOLATION LEVEL "
p230
tp231
I1
s(Vinsert
p232
I42
VSimpleName: SQLNotExpr
p233
tp234
I3
s(Vinsert
p235
I42
VSimpleName: statLogger
p236
tp237
I1
s(Vinsert
p238
I74
VParameterizedType: Map<String,String>
p239
tp240
I3
s(Vinsert
p241
I45
VStringLiteral: "druid.config.encryptedPassword"
p242
tp243
I1
s(Vinsert
p244
I45
VStringLiteral: "\u005ctFREELIST GROUPS 1\u005cn"
p245
tp246
I13
s(Vinsert
p247
I42
VSimpleName: prepare
p248
tp249
I1
s(Vinsert
p250
I42
VSimpleName: s
p251
tp252
I19
s(Vinsert
p253
I45
VStringLiteral: "\u005cn\u005ctEND_TIME_ TIMESTAMP(6),"
p254
tp255
I2
s(Vinsert
p256
I42
VSimpleName: createParameterizedOutputVisitor
p257
tp258
I2
s(Vinsert
p259
I42
VSimpleName: set
p260
tp261
I48
s(Vinsert
p262
I43
VSimpleType: HTableInterface
p263
tp264
I2
s(Vinsert
p265
I45
VStringLiteral: "CURRENT_USER"
p266
tp267
I1
s(Vinsert
p268
I45
VStringLiteral: "LEAVE"
p269
tp270
I1
s(Vinsert
p271
I43
VSimpleType: Enumeration
p272
tp273
I3
s(Vinsert
p274
I45
VStringLiteral: "\u005ctFROM d_prov_city_district\u005cn"
p275
tp276
I1
s(Vinsert
p277
I42
VSimpleName: test_setShort
p278
tp279
I1
s(Vinsert
p280
I45
VStringLiteral: "SELECT TOP 10 serviceTag AS \u005c"\u7f16\u53f7\u005c", ip AS \u005c"IP\u5730\u5740\u005c"\u005cnFROM device"
p281
tp282
I2
s(Vinsert
p283
I42
VSimpleName: readOnlyTables
p284
tp285
I1
s(Vinsert
p286
I42
VSimpleName: clob_open
p287
tp288
I1
s(Vinsert
p289
I42
VSimpleName: transactionMillis
p290
tp291
I1
s(Vinsert
p292
I45
VStringLiteral: "\u005ctAND site_id = '17814';"
p293
tp294
I2
s(Vinsert
p295
I42
VSimpleName: entity
p296
tp297
I13
s(Vinsert
p298
I45
VStringLiteral: "druid.configKey"
p299
tp300
I1
s(Vinsert
p301
I42
VSimpleName: DecryptException
p302
tp303
I4
s(Vinsert
p304
I42
VSimpleName: setDefiner
p305
tp306
I2
s(Vinsert
p307
I45
VStringLiteral: "\u005cn\u005ctUPGRADE PARTITIONING"
p308
tp309
I1
s(Vinsert
p310
I42
VSimpleName: getMethodStatData
p311
tp312
I2
s(Vinsert
p313
I42
VSimpleName: getRequestErrorCount
p314
tp315
I1
s(Vinsert
p316
I45
VStringLiteral: "                            3\u005cn"
p317
tp318
I2
s(Vinsert
p319
I45
VStringLiteral: "CREATE VIEW clerk\u005cn"
p320
tp321
I1
s(Vinsert
p322
I45
VStringLiteral: "can'r find class in web container classLoader "
p323
tp324
I1
s(Vinsert
p325
I43
VSimpleType: SwingWorker
p326
tp327
I1
s(Vinsert
p328
I42
VSimpleName: Assert
p329
tp330
I1290
s(Vinsert
p331
I42
VSimpleName: column2
p332
tp333
I6
s(Vinsert
p334
I45
VStringLiteral: "lock table dsdfsdf read local"
p335
tp336
I1
s(Vinsert
p337
I42
VSimpleName: MockResultSet
p338
tp339
I2
s(Vinsert
p340
I42
VSimpleName: MySqlSetTransactionIsolationLevelStatement
p341
tp342
I2
s(Vinsert
p343
I42
VSimpleName: MySqlLoopStatement
p344
tp345
I2
s(Vinsert
p346
I42
VSimpleName: InstantiationException
p347
tp348
I1
s(Vinsert
p349
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION other VALUES (DEFAULT)"
p350
tp351
I2
s(Vinsert
p352
I42
VSimpleName: EvalMethodTest_Char_1
p353
tp354
I1
s(Vinsert
p355
I42
VSimpleName: SQLSelectListCache
p356
tp357
I2
s(Vinsert
p358
I42
VSimpleName: insertRow
p359
tp360
I2
s(Vinsert
p361
I40
VQualifiedName: lexer.stringVal
p362
tp363
I1
s(Vinsert
p364
I42
VSimpleName: userData
p365
tp366
I1
s(Vinsert
p367
I45
VStringLiteral: "snap_id"
p368
tp369
I1
s(Vinsert
p370
I42
VSimpleName: JConsoleContext
p371
tp372
I2
s(Vinsert
p373
I42
VSimpleName: maxExtents
p374
tp375
I1
s(Vinsert
p376
I43
VSimpleType: OracleAnalytic
p377
tp378
I1
s(Vinsert
p379
I42
VSimpleName: setUpBound
p380
tp381
I1
s(Vinsert
p382
I43
VSimpleType: OraclePriorExpr
p383
tp384
I1
s(Vinsert
p385
I45
VStringLiteral: "WHERE id = 3"
p386
tp387
I1
s(Vinsert
p388
I42
VSimpleName: EvalMethodTest_mid
p389
tp390
I1
s(Vinsert
p391
I42
VSimpleName: PGLineSegmentsExpr
p392
tp393
I4
s(Vinsert
p394
I34
VNumberLiteral: 301
p395
tp396
I1
s(Vinsert
p397
I42
VSimpleName: registerOutParameter
p398
tp399
I5
s(Vinsert
p400
I42
VSimpleName: getCount_5_10_minutes
p401
tp402
I1
s(Vinsert
p403
I42
VSimpleName: test_error_1
p404
tp405
I9
s(Vinsert
p406
I42
VSimpleName: histogram_100000_1000000_Updater
p407
tp408
I1
s(Vinsert
p409
I40
VQualifiedName: Token.OR
p410
tp411
I2
s(Vinsert
p412
I45
VStringLiteral: "\u005ct\u005ctAND b.paid_amount > 0\u005cn"
p413
tp414
I1
s(Vinsert
p415
I42
VSimpleName: setInitrans
p416
tp417
I2
s(Vinsert
p418
I42
VSimpleName: setCompressForOltp
p419
tp420
I1
s(Vinsert
p421
I42
VSimpleName: OracleExceptionSorter
p422
tp423
I3
s(Vinsert
p424
I42
VSimpleName: withSubqueryClause
p425
tp426
I1
s(Vinsert
p427
I42
VSimpleName: toUpperCase
p428
tp429
I7
s(Vinsert
p430
I40
VQualifiedName: rightOp.priority
p431
tp432
I1
s(Vinsert
p433
I42
VSimpleName: getLike
p434
tp435
I5
s(Vinsert
p436
I42
VSimpleName: lateralViewTabSrc
p437
tp438
I2
s(Vinsert
p439
I45
VStringLiteral: "EAIREP"
p440
tp441
I1
s(Vinsert
p442
I42
VSimpleName: quick
p443
tp444
I1
s(Vinsert
p445
I45
VStringLiteral: "MIN_ROWS"
p446
tp447
I1
s(Vinsert
p448
I43
VSimpleType: ConcurrentHashMap
p449
tp450
I1
s(Vinsert
p451
I42
VSimpleName: setTableName
p452
tp453
I8
s(Vinsert
p454
I45
VStringLiteral: "\u005cnPARTITION BY KEY () PARTITIONS 2"
p455
tp456
I1
s(Vinsert
p457
I42
VSimpleName: filterConfig
p458
tp459
I1
s(Vinsert
p460
I42
VSimpleName: test_having
p461
tp462
I1
s(Vinsert
p463
I42
VSimpleName: MysqlDeallocatePrepareStatement
p464
tp465
I3
s(Vinsert
p466
I42
VSimpleName: metaData
p467
tp468
I6
s(Vinsert
p469
I42
VSimpleName: DruidLoaderUtils
p470
tp471
I2
s(Vinsert
p472
I43
VSimpleType: MySqlRenameTableStatement
p473
tp474
I1
s(Vinsert
p475
I42
VSimpleName: setLong
p476
tp477
I1
s(Vinsert
p478
I42
VSimpleName: timeZoneValue
p479
tp480
I2
s(Vinsert
p481
I43
VSimpleType: TraceErrorEvent
p482
tp483
I1
s(Vinsert
p484
I45
VStringLiteral: "| c_longblob   | longblob     | NO   |     | NULL                |                             |\u005cn"
p485
tp486
I1
s(Vinsert
p487
I45
VStringLiteral: "\u005ctCHUNK 8192\u005cn"
p488
tp489
I6
s(Vinsert
p490
I40
VQualifiedName: MySqlKillStatement.Type.QUERY
p491
tp492
I2
s(Vinsert
p493
I45
VStringLiteral: "WHERE ROWNUM <= 10"
p494
tp495
I1
s(Vinsert
p496
I42
VSimpleName: SQLAlterTableStatement
p497
tp498
I3
s(Vinsert
p499
I45
VStringLiteral: "\u005cn(280, 'Recreation', DEFAULT, 1700)"
p500
tp501
I2
s(Vinsert
p502
I42
VSimpleName: HMappingColumn
p503
tp504
I4
s(Vinsert
p505
I45
VStringLiteral: "\u005ct\u005ct\u005ctRESULT := '1';\u005cn"
p506
tp507
I1
s(Vinsert
p508
I45
VStringLiteral: "\u005ct\u005ctIF SQLCODE != -2289 THEN\u005cn"
p509
tp510
I1
s(Vinsert
p511
I42
VSimpleName: JSON
p512
tp513
I5
s(Vinsert
p514
I45
VStringLiteral: "\u005ct\u005ctFROM TABLE(SPLIT(STR, SEP));\u005cn"
p515
tp516
I1
s(Vinsert
p517
I42
VSimpleName: resultSet_updateCharacterStream
p518
tp519
I2
s(Vinsert
p520
I45
VStringLiteral: "abs(?)"
p521
tp522
I1
s(Vinsert
p523
I42
VSimpleName: exprTableSource
p524
tp525
I6
s(Vinsert
p526
I42
VSimpleName: getSelectLimit
p527
tp528
I4
s(Vinsert
p529
I42
VSimpleName: addItem
p530
tp531
I16
s(Vinsert
p532
I45
VStringLiteral: "\u005cn union all "
p533
tp534
I2
s(Vinsert
p535
I61
VWhileStatement
p536
tp537
I10
s(Vinsert
p538
I45
VStringLiteral: "\u005cn\u005ctid INT, "
p539
tp540
I1
s(Vinsert
p541
I42
VSimpleName: setForReadOnly
p542
tp543
I1
s(Vinsert
p544
I45
VStringLiteral: "\u005cn\u005ct\u005ctLIMIT 1"
p545
tp546
I1
s(Vinsert
p547
I45
VStringLiteral: "\u005cn\u005ctname VARCHAR(5)"
p548
tp549
I2
s(Vinsert
p550
I42
VSimpleName: createSQLSelectParser
p551
tp552
I8
s(Vinsert
p553
I45
VStringLiteral: "select 'a'"
p554
tp555
I1
s(Vinsert
p556
I40
VQualifiedName: Token.CREATE
p557
tp558
I9
s(Vinsert
p559
I42
VSimpleName: validateConnection
p560
tp561
I1
s(Vinsert
p562
I45
VStringLiteral: "[Order_ID] varchar(255) NOT NULL\u005cn"
p563
tp564
I1
s(Vinsert
p565
I42
VSimpleName: SQLKeep
p566
tp567
I3
s(Vinsert
p568
I42
VSimpleName: getMaxWaitThreadCount
p569
tp570
I2
s(Vinsert
p571
I42
VSimpleName: setIndex
p572
tp573
I3
s(Vinsert
p574
I42
VSimpleName: setRowPrefetch
p575
tp576
I2
s(Vinsert
p577
I45
VStringLiteral: "test3\u005cn"
p578
tp579
I1
s(Vinsert
p580
I45
VStringLiteral: "union select synonym_name"
p581
tp582
I2
s(Vinsert
p583
I45
VStringLiteral: "FROM tb_001 v, tb_002 c\u005cn"
p584
tp585
I1
s(Vinsert
p586
I42
VSimpleName: getFetchDirection
p587
tp588
I1
s(Vinsert
p589
I42
VSimpleName: getEstablishTime
p590
tp591
I1
s(Vinsert
p592
I45
VStringLiteral: "ROLLUP"
p593
tp594
I1
s(Vinsert
p595
I45
VStringLiteral: "\u005ct\u005c"IS_JOIN\u005c" CHAR(1) NOT NULL ENABLE\u005cn"
p596
tp597
I1
s(Vinsert
p598
I80
VMemberValuePair
p599
tp600
I5
s(Vinsert
p601
I42
VSimpleName: setCommentHandler
p602
tp603
I1
s(Vinsert
p604
I42
VSimpleName: isHasConstaint
p605
tp606
I1
s(Vinsert
p607
I42
VSimpleName: test_merge
p608
tp609
I1
s(Vinsert
p610
I42
VSimpleName: OracleConstraint
p611
tp612
I1
s(Vinsert
p613
I42
VSimpleName: directCreateCount
p614
tp615
I1
s(Vinsert
p616
I42
VSimpleName: RelaxedDataBinder
p617
tp618
I1
s(Vinsert
p619
I45
VStringLiteral: "| c_text       | text         | NO   |     | NULL    |       |\u005cn"
p620
tp621
I1
s(Vinsert
p622
I42
VSimpleName: setGlobal
p623
tp624
I3
s(Vinsert
p625
I42
VSimpleName: getConcurrentMax
p626
tp627
I3
s(Vinsert
p628
I45
VStringLiteral: "\u005ct, JOIN, OVER, CONTRACT_TERM, CONTRACT_CASH, EXEC_CASH\u005cn"
p629
tp630
I1
s(Vinsert
p631
I45
VStringLiteral: "ALTER TABLE tnrange"
p632
tp633
I19
s(Vinsert
p634
I40
VQualifiedName: SQLParserFeature.OptimizedForParameterized
p635
tp636
I2
s(Vinsert
p637
I45
VStringLiteral: "RETURN TickerTypeSetPIPELINED \u005cn"
p638
tp639
I1
s(Vinsert
p640
I43
VSimpleType: OdpsSetLabelStatement
p641
tp642
I1
s(Vinsert
p643
I40
VQualifiedName: SQLObjectType.USER
p644
tp645
I1
s(Vinsert
p646
I42
VSimpleName: isMergeAllow
p647
tp648
I1
s(Vinsert
p649
I74
VParameterizedType: Collection<Schema>
p650
tp651
I1
s(Vinsert
p652
I42
VSimpleName: console
p653
tp654
I13
s(Vinsert
p655
I45
VStringLiteral: "true"
p656
tp657
I11
s(Vinsert
p658
I42
VSimpleName: WallProviderStatTimer
p659
tp660
I2
s(Vinsert
p661
I45
VStringLiteral: "    WHERE sample_column_name = 'gmt_modified'\u005cn"
p662
tp663
I1
s(Vinsert
p664
I42
VSimpleName: getSQLDeleteStatement
p665
tp666
I1
s(Vinsert
p667
I45
VStringLiteral: "BOX "
p668
tp669
I1
s(Vinsert
p670
I42
VSimpleName: filters
p671
tp672
I11
s(Vinsert
p673
I42
VSimpleName: setDriverUrl
p674
tp675
I1
s(Vinsert
p676
I45
VStringLiteral: "SELECT * FROM t_user"
p677
tp678
I1
s(Vinsert
p679
I42
VSimpleName: getConnectProperties
p680
tp681
I8
s(Vinsert
p682
I42
VSimpleName: setBeanFactory
p683
tp684
I2
s(Vinsert
p685
I42
VSimpleName: getCreateCount
p686
tp687
I6
s(Vinsert
p688
I42
VSimpleName: setId
p689
tp690
I4
s(Vinsert
p691
I34
VNumberLiteral: 8
p692
tp693
I1
s(Vinsert
p694
I40
VQualifiedName: SchemaResolveVisitor.Context
p695
tp696
I1
s(Vinsert
p697
I20
VEmptyStatement
p698
tp699
I1
s(Vinsert
p700
I45
VStringLiteral: "ids_openapp_dau_d"
p701
tp702
I1
s(Vinsert
p703
I43
VSimpleType: OracleFetchStatement
p704
tp705
I1
s(Vinsert
p706
I43
VSimpleType: DruidPooledResultSet
p707
tp708
I2
s(Vinsert
p709
I43
VSimpleType: SQLServerSchemaStatVisitor
p710
tp711
I55
s(Vinsert
p712
I42
VSimpleName: statement_addBatch
p713
tp714
I1
s(Vinsert
p715
I42
VSimpleName: parseLoop
p716
tp717
I1
s(Vinsert
p718
I45
VStringLiteral: "SETS"
p719
tp720
I1
s(Vinsert
p721
I45
VStringLiteral: "CREATE TABLE locations_demo ("
p722
tp723
I4
s(Vinsert
p724
I40
VQualifiedName: other.operator
p725
tp726
I1
s(Vinsert
p727
I40
VQualifiedName: SQLBinaryOperator.LessThanOrEqual
p728
tp729
I1
s(Vinsert
p730
I43
VSimpleType: PGSetStatement
p731
tp732
I1
s(Vinsert
p733
I45
VStringLiteral: "\u005ct\u005ctFROM graph g, search_graph sg\u005cn"
p734
tp735
I1
s(Vinsert
p736
I45
VStringLiteral: "KEYS"
p737
tp738
I1
s(Vinsert
p739
I40
VQualifiedName: SymbolTable.global
p740
tp741
I2
s(Vinsert
p742
I42
VSimpleName: varItem
p743
tp744
I1
s(Vinsert
p745
I45
VStringLiteral: "SELECT task_id\u005cn"
p746
tp747
I1
s(Vinsert
p748
I42
VSimpleName: tokens
p749
tp750
I1
s(Vinsert
p751
I42
VSimpleName: getRegistry
p752
tp753
I1
s(Vinsert
p754
I42
VSimpleName: rightExprTableSource
p755
tp756
I1
s(Vinsert
p757
I43
VSimpleType: JFrame
p758
tp759
I1
s(Vinsert
p760
I45
VStringLiteral: "druid.wall.updateCheckColumns"
p761
tp762
I1
s(Vinsert
p763
I42
VSimpleName: appStat
p764
tp765
I1
s(Vinsert
p766
I40
VQualifiedName: Token.VALUES
p767
tp768
I1
s(Vinsert
p769
I42
VSimpleName: setFile
p770
tp771
I2
s(Vinsert
p772
I45
VStringLiteral: "                  from bas_user auser, bas_user_role ur"
p773
tp774
I1
s(Vinsert
p775
I42
VSimpleName: setKey
p776
tp777
I5
s(Vinsert
p778
I45
VStringLiteral: "SELECT t.calendar_month_desc, c.cust_state_province, SUM(s.amount_sold) AS sum_sales\u005cn"
p779
tp780
I1
s(Vinsert
p781
I42
VSimpleName: storeIn
p782
tp783
I1
s(Vinsert
p784
I42
VSimpleName: SQLASTOutputVisitorUtils
p785
tp786
I1
s(Vinsert
p787
I45
VStringLiteral: "hint not allow"
p788
tp789
I1
s(Vinsert
p790
I45
VStringLiteral: "\u005ct\u005c"OWNER_MEMBER_SEQ\u005c", \u005cn"
p791
tp792
I1
s(Vinsert
p793
I45
VStringLiteral: "SELECT id, GROUP_ID, IND_BY_ALL, IND_BY_GROUP, OWNER_MEMBER_ID\u005cn"
p794
tp795
I1
s(Vinsert
p796
I50
VSwitchStatement
p797
tp798
I8
s(Vinsert
p799
I45
VStringLiteral: "DELETE SYS_ACCNBAL WHERE ISNULL(AMTN_Y,0)=0 AND ISNULL(AMTN_B,0)=0 AND ISNULL(AMTN_D,0)=0 AND ISNULL(AMTN_C,0)=0"
p800
tp801
I1
s(Vinsert
p802
I45
VStringLiteral: "\u005cn\u005ctf1 string COMMENT 'xxx'"
p803
tp804
I1
s(Vinsert
p805
I40
VQualifiedName: SchemaObject.Type.Sequence
p806
tp807
I1
s(Vinsert
p808
I45
VStringLiteral: "/**/ \u005ct\u005cn\u005cr\u005cn -- \u005cn#\u005cn"
p809
tp810
I1
s(Vinsert
p811
I74
VParameterizedType: ArrayList<SQLObject>
p812
tp813
I32
s(Vinsert
p814
I45
VStringLiteral: "druid.mysql.usePingMethod"
p815
tp816
I1
s(Vinsert
p817
I42
VSimpleName: A
p818
tp819
I1
s(Vinsert
p820
I42
VSimpleName: histogram
p821
tp822
I2
s(Vinsert
p823
I42
VSimpleName: index
p824
tp825
I11
s(Vinsert
p826
I42
VSimpleName: unwrapped
p827
tp828
I3
s(Vinsert
p829
I42
VSimpleName: decodeExpr
p830
tp831
I1
s(Vinsert
p832
I42
VSimpleName: SensitiveParameters
p833
tp834
I5
s(Vinsert
p835
I42
VSimpleName: lastToken
p836
tp837
I1
s(Vinsert
p838
I45
VStringLiteral: "\u005cnwhere name rlike 'xxxx'"
p839
tp840
I1
s(Vinsert
p841
I42
VSimpleName: resultSet_setFetchDirection
p842
tp843
I1
s(Vinsert
p844
I42
VSimpleName: connectionClosed
p845
tp846
I2
s(Vinsert
p847
I42
VSimpleName: getOutputStream
p848
tp849
I1
s(Vinsert
p850
I42
VSimpleName: isBuiltinTable
p851
tp852
I1
s(Vinsert
p853
I42
VSimpleName: activeXid
p854
tp855
I2
s(Vinsert
p856
I45
VStringLiteral: "alias : "
p857
tp858
I1
s(Vinsert
p859
I45
VStringLiteral: "    ) recent_days "
p860
tp861
I1
s(Vinsert
p862
I42
VSimpleName: TeradataIntervalUnit
p863
tp864
I1
s(Vinsert
p865
I45
VStringLiteral: "\u005cn\u005ctcost NUMBER"
p866
tp867
I2
s(Vinsert
p868
I42
VSimpleName: replace
p869
tp870
I3
s(Vinsert
p871
I42
VSimpleName: physicalTableName
p872
tp873
I1
s(Vinsert
p874
I43
VSimpleType: MySqlSetTransactionIsolationLevelStatement
p875
tp876
I1
s(Vinsert
p877
I42
VSimpleName: uk
p878
tp879
I2
s(Vinsert
p880
I42
VSimpleName: setExceptionSorterClassName
p881
tp882
I3
s(Vinsert
p883
I40
VQualifiedName: com.alibaba.druid.logging.Log
p884
tp885
I3
s(Vinsert
p886
I42
VSimpleName: timeBetweenEvictionRunsMillis
p887
tp888
I1
s(Vinsert
p889
I45
VStringLiteral: "W757xtr4B5ICysO43qOCpqYu0laZ;"
p890
tp891
I1
s(Vinsert
p892
I42
VSimpleName: SQLSomeExpr
p893
tp894
I3
s(Vinsert
p895
I43
VSimpleType: SQLCharactorDataType
p896
tp897
I2
s(Vinsert
p898
I45
VStringLiteral: "PASSWORD"
p899
tp900
I1
s(Vinsert
p901
I42
VSimpleName: exec_test
p902
tp903
I3
s(Vinsert
p904
I42
VSimpleName: test_false
p905
tp906
I43
s(Vinsert
p907
I42
VSimpleName: setFor
p908
tp909
I2
s(Vinsert
p910
I40
VQualifiedName: x.release
p911
tp912
I1
s(Vinsert
p913
I42
VSimpleName: Clob
p914
tp915
I11
s(Vinsert
p916
I42
VSimpleName: EvalMethodTest_Elt
p917
tp918
I1
s(Vinsert
p919
I40
VQualifiedName: Token.EOF
p920
tp921
I17
s(Vinsert
p922
I42
VSimpleName: dupCloseCount
p923
tp924
I2
s(Vinsert
p925
I42
VSimpleName: getLastAccessTime
p926
tp927
I1
s(Vinsert
p928
I34
VNumberLiteral: 1
p929
tp930
I639
s(Vinsert
p931
I42
VSimpleName: startWith
p932
tp933
I2
s(Vinsert
p934
I42
VSimpleName: setPreferredTestQuery
p935
tp936
I1
s(Vinsert
p937
I42
VSimpleName: itemCloned
p938
tp939
I2
s(Vinsert
p940
I45
VStringLiteral: "SELECT user_id,user_flag,cat1_id,wireless_client_type,alipay_num,last_buy_time,md5,my_udf_001('t_datax_odps2ots_resource_tcif_dmp_user_topup_d',md5) AS datax_pt FROM mytable_001 WHERE ds='20150819'  DISTRIBUTE BY cast (datax_pt as BIGINT) SORT BY md5,user_id,user_flag,cat1_id,wireless_client_type"
p941
tp942
I1
s(Vinsert
p943
I40
VQualifiedName: com.alibaba.druid.stat.JdbcStatManager
p944
tp945
I17
s(Vinsert
p946
I42
VSimpleName: SQLGrantStatement
p947
tp948
I1
s(Vinsert
p949
I42
VSimpleName: setMaxtrans
p950
tp951
I1
s(Vinsert
p952
I42
VSimpleName: action
p953
tp954
I1
s(Vinsert
p955
I45
VStringLiteral: "create or replace type "
p956
tp957
I1
s(Vinsert
p958
I42
VSimpleName: closed
p959
tp960
I1
s(Vinsert
p961
I42
VSimpleName: read
p962
tp963
I5
s(Vinsert
p964
I45
VStringLiteral: "\u005ctINTO acc_bal\u005cn"
p965
tp966
I1
s(Vinsert
p967
I45
VStringLiteral: "t"
p968
tp969
I2
s(Vinsert
p970
I40
VQualifiedName: other.withTimeZone
p971
tp972
I1
s(Vinsert
p973
I45
VStringLiteral: "\u005ct, c.aboutus_image_path, c.aboutus_image_title, c.chinese_name, c.rowid AS c_rid, v.rowid AS v_rid\u005cn"
p974
tp975
I1
s(Vinsert
p976
I40
VQualifiedName: x.methodName
p977
tp978
I1
s(Vinsert
p979
I45
VStringLiteral: "\u005ctc_char char(10),\u005cn"
p980
tp981
I2
s(Vinsert
p982
I42
VSimpleName: isUpdateAllow
p983
tp984
I1
s(Vinsert
p985
I45
VStringLiteral: "\u005ct\u005ctOR A.DETAILE LIKE ('%' || ? || '%')\u005cn"
p986
tp987
I1
s(Vinsert
p988
I42
VSimpleName: MYSQL
p989
tp990
I2
s(Vinsert
p991
I42
VSimpleName: NClobProxy
p992
tp993
I1
s(Vinsert
p994
I42
VSimpleName: bytes
p995
tp996
I15
s(Vinsert
p997
I42
VSimpleName: recyle
p998
tp999
I1
s(Vinsert
p1000
I40
VQualifiedName: OracleCreateTableStatement.OIDIndex
p1001
tp1002
I2
s(Vinsert
p1003
I42
VSimpleName: paramExpr
p1004
tp1005
I2
s(Vinsert
p1006
I43
VSimpleType: OracleConstraint
p1007
tp1008
I1
s(Vinsert
p1009
I42
VSimpleName: dialog
p1010
tp1011
I4
s(Vinsert
p1012
I42
VSimpleName: SQLLiteralExpr
p1013
tp1014
I3
s(Vinsert
p1015
I42
VSimpleName: getLine
p1016
tp1017
I2
s(Vinsert
p1018
I45
VStringLiteral: "\u005ct\u005ct\u005ct\u005ctFROM itsm_system_menu\u005cn"
p1019
tp1020
I1
s(Vinsert
p1021
I42
VSimpleName: HADataSource
p1022
tp1023
I1
s(Vinsert
p1024
I45
VStringLiteral: "\u005ct\u005ctTABLESPACE \u005c"RDP_DATA\u005c"\u005cn"
p1025
tp1026
I1
s(Vinsert
p1027
I43
VSimpleType: NoLoggingImpl
p1028
tp1029
I5
s(Vinsert
p1030
I42
VSimpleName: addSqlTableStat
p1031
tp1032
I1
s(Vinsert
p1033
I43
VSimpleType: OracleAlterTableAddConstaint
p1034
tp1035
I1
s(Vinsert
p1036
I45
VStringLiteral: "\u005cnWHERE t1.c1 = t2.c1"
p1037
tp1038
I1
s(Vinsert
p1039
I42
VSimpleName: SQLTimestampExpr
p1040
tp1041
I3
s(Vinsert
p1042
I42
VSimpleName: position
p1043
tp1044
I1
s(Vinsert
p1045
I43
VSimpleType: StatViewServlet
p1046
tp1047
I1
s(Vinsert
p1048
I42
VSimpleName: isRegistered
p1049
tp1050
I3
s(Vinsert
p1051
I43
VSimpleType: SQLIntegerExpr
p1052
tp1053
I17
s(Vinsert
p1054
I42
VSimpleName: test_getObject_2
p1055
tp1056
I1
s(Vinsert
p1057
I42
VSimpleName: ShardingRuntimeException
p1058
tp1059
I1
s(Vinsert
p1060
I42
VSimpleName: isCaseSensitive
p1061
tp1062
I1
s(Vinsert
p1063
I42
VSimpleName: FakeLogger
p1064
tp1065
I2
s(Vinsert
p1066
I27
VInfixExpression: >
p1067
tp1068
I73
s(Vinsert
p1069
I42
VSimpleName: V
p1070
tp1071
I5
s(Vinsert
p1072
I45
VStringLiteral: "\u005cnfrom t "
p1073
tp1074
I1
s(Vinsert
p1075
I42
VSimpleName: test_calcite
p1076
tp1077
I1
s(Vinsert
p1078
I42
VSimpleName: parseInt
p1079
tp1080
I13
s(Vinsert
p1081
I45
VStringLiteral: "META-INF/druid-filter-wall-permit-schema-oracle.txt"
p1082
tp1083
I1
s(Vinsert
p1084
I42
VSimpleName: fromTableName
p1085
tp1086
I2
s(Vinsert
p1087
I42
VSimpleName: commitCount
p1088
tp1089
I1
s(Vinsert
p1090
I42
VSimpleName: setFull
p1091
tp1092
I1
s(Vinsert
p1093
I42
VSimpleName: jdbcParam
p1094
tp1095
I3
s(Vinsert
p1096
I45
VStringLiteral: "com.alibaba.druid.support.logging.Log4jImpl"
p1097
tp1098
I1
s(Vinsert
p1099
I42
VSimpleName: getWebAppsPath
p1100
tp1101
I1
s(Vinsert
p1102
I45
VStringLiteral: "CREATE TABLE tnhash ("
p1103
tp1104
I1
s(Vinsert
p1105
I43
VSimpleType: MySqlShowTableStatusStatement
p1106
tp1107
I2
s(Vinsert
p1108
I42
VSimpleName: isNoMaxValue
p1109
tp1110
I2
s(Vinsert
p1111
I45
VStringLiteral: " no_wait"
p1112
tp1113
I1
s(Vinsert
p1114
I13
VCharacterLiteral: '\u005c\u005c'
p1115
tp1116
I2
s(Vinsert
p1117
I43
VSimpleType: JdbcXAConnection
p1118
tp1119
I1
s(Vinsert
p1120
I42
VSimpleName: isSessionStatEnable
p1121
tp1122
I2
s(Vinsert
p1123
I45
VStringLiteral: "\u005ctname, \u005cn"
p1124
tp1125
I1
s(Vinsert
p1126
I42
VSimpleName: parseAggregateExprRest
p1127
tp1128
I1
s(Vinsert
p1129
I45
VStringLiteral: "Invalid IP range"
p1130
tp1131
I1
s(Vinsert
p1132
I45
VStringLiteral: "jdbc:elastic://100.69.202.4:9300/tcbuyer?cluster.name=refund_cluster"
p1133
tp1134
I1
s(Vinsert
p1135
I42
VSimpleName: stmt2
p1136
tp1137
I6
s(Vinsert
p1138
I42
VSimpleName: getDeclaredField
p1139
tp1140
I10
s(Vinsert
p1141
I45
VStringLiteral: "\u005cn\u005ct('a3', 'b3')"
p1142
tp1143
I3
s(Vinsert
p1144
I45
VStringLiteral: "CREATE TABLE test (\u005cn"
p1145
tp1146
I1
s(Vinsert
p1147
I43
VSimpleType: OracleMultiInsertStatement.ConditionalInsertClause
p1148
tp1149
I2
s(Vinsert
p1150
I45
VStringLiteral: "add statistic tbl_shop column_sum shop_name;"
p1151
tp1152
I1
s(Vinsert
p1153
I42
VSimpleName: on
p1154
tp1155
I6
s(Vinsert
p1156
I45
VStringLiteral: "connect setAutoComment "
p1157
tp1158
I2
s(Vinsert
p1159
I42
VSimpleName: identName
p1160
tp1161
I1
s(Vinsert
p1162
I42
VSimpleName: setCacheValue
p1163
tp1164
I1
s(Vinsert
p1165
I42
VSimpleName: HttpServletRequest
p1166
tp1167
I1
s(Vinsert
p1168
I42
VSimpleName: SQLReplaceStatement
p1169
tp1170
I2
s(Vinsert
p1171
I42
VSimpleName: PROP_FILTERS
p1172
tp1173
I2
s(Vinsert
p1174
I42
VSimpleName: SQLServerProvider
p1175
tp1176
I2
s(Vinsert
p1177
I42
VSimpleName: connectedTime
p1178
tp1179
I2
s(Vinsert
p1180
I42
VSimpleName: hashSet
p1181
tp1182
I2
s(Vinsert
p1183
I42
VSimpleName: getUseCount
p1184
tp1185
I1
s(Vinsert
p1186
I45
VStringLiteral: "\u005ct\u005ctNOCOMPRESS\u005cn"
p1187
tp1188
I4
s(Vinsert
p1189
I45
VStringLiteral: "\u005ct\u005ct\u005ctFREELIST GROUPS 1\u005cn"
p1190
tp1191
I6
s(Vinsert
p1192
I45
VStringLiteral: "\u005ct\u005c"IND_BY_GROUP\u005c", \u005cn"
p1193
tp1194
I1
s(Vinsert
p1195
I42
VSimpleName: addFetchRowCount
p1196
tp1197
I1
s(Vinsert
p1198
I42
VSimpleName: parseFunction
p1199
tp1200
I1
s(Vinsert
p1201
I43
VSimpleType: DesDecrypter
p1202
tp1203
I2
s(Vinsert
p1204
I42
VSimpleName: caseItem
p1205
tp1206
I1
s(Vinsert
p1207
I42
VSimpleName: isPermitTable
p1208
tp1209
I1
s(Vinsert
p1210
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITIONS 8,"
p1211
tp1212
I2
s(Vinsert
p1213
I42
VSimpleName: parseConstraint
p1214
tp1215
I1
s(Vinsert
p1216
I45
VStringLiteral: "GRANT REFERENCES(employee_id),"
p1217
tp1218
I1
s(Vinsert
p1219
I42
VSimpleName: PGExceptionSorter
p1220
tp1221
I1
s(Vinsert
p1222
I45
VStringLiteral: "\u005ctindex_in_file,\u005cn"
p1223
tp1224
I1
s(Vinsert
p1225
I42
VSimpleName: getLastError
p1226
tp1227
I1
s(Vinsert
p1228
I45
VStringLiteral: "CALL check_sal(:new.job_id, :new.salary, :new.last_name)"
p1229
tp1230
I1
s(Vinsert
p1231
I45
VStringLiteral: "\u005cn\u005ct\u005ctleft join acduser.vw_sc_kreis_code_lv2 f on e.xzqh = f.short_kreis_code "
p1232
tp1233
I1
s(Vinsert
p1234
I42
VSimpleName: keyFactory
p1235
tp1236
I1
s(Vinsert
p1237
I42
VSimpleName: lastErrorClass
p1238
tp1239
I1
s(Vinsert
p1240
I49
VSwitchCase
p1241
tp1242
I31
s(Vinsert
p1243
I45
VStringLiteral: "FROM t2\u005cn"
p1244
tp1245
I1
s(Vinsert
p1246
I1
VAnonymousClassDeclaration
p1247
tp1248
I28
s(Vinsert
p1249
I42
VSimpleName: isSharePreparedStatements
p1250
tp1251
I3
s(Vinsert
p1252
I42
VSimpleName: test_connectionCustomizerClassName
p1253
tp1254
I1
s(Vinsert
p1255
I45
VStringLiteral: "\u005cnfrom xxxx a-- xxxx"
p1256
tp1257
I1
s(Vinsert
p1258
I42
VSimpleName: createTableStmt
p1259
tp1260
I5
s(Vinsert
p1261
I40
VQualifiedName: other.instanceClass
p1262
tp1263
I1
s(Vinsert
p1264
I42
VSimpleName: SQLAlterTableCheckPartition
p1265
tp1266
I1
s(Vinsert
p1267
I43
VSimpleType: SQLPartitionValue
p1268
tp1269
I4
s(Vinsert
p1270
I42
VSimpleName: getExprParser
p1271
tp1272
I10
s(Vinsert
p1273
I45
VStringLiteral: "END;"
p1274
tp1275
I15
s(Vinsert
p1276
I43
VSimpleType: Option
p1277
tp1278
I4
s(Vinsert
p1279
I74
VParameterizedType: ArrayList<SQLName>
p1280
tp1281
I1
s(Vinsert
p1282
I42
VSimpleName: statementLogEnabled
p1283
tp1284
I1
s(Vinsert
p1285
I42
VSimpleName: getPreparedStatementHolder
p1286
tp1287
I6
s(Vinsert
p1288
I42
VSimpleName: bogusSource
p1289
tp1290
I1
s(Vinsert
p1291
I42
VSimpleName: setDupCloseLogEnable
p1292
tp1293
I1
s(Vinsert
p1294
I45
VStringLiteral: "\u005ct\u005c"KEEP\u005c", \u005cn"
p1295
tp1296
I1
s(Vinsert
p1297
I43
VSimpleType: SQLAllExpr
p1298
tp1299
I2
s(Vinsert
p1300
I45
VStringLiteral: "ENGINE"
p1301
tp1302
I1
s(Vinsert
p1303
I42
VSimpleName: toSQLServerString
p1304
tp1305
I2
s(Vinsert
p1306
I45
VStringLiteral: "\u005cn\u005ctdescription NVARCHAR(255),"
p1307
tp1308
I1
s(Vinsert
p1309
I42
VSimpleName: SQLAlterTableAddPrimaryKey
p1310
tp1311
I3
s(Vinsert
p1312
I42
VSimpleName: engine
p1313
tp1314
I38
s(Vinsert
p1315
I45
VStringLiteral: "minextents "
p1316
tp1317
I1
s(Vinsert
p1318
I45
VStringLiteral: "WRITE"
p1319
tp1320
I1
s(Vinsert
p1321
I13
VCharacterLiteral: ';'
p1322
tp1323
I3
s(Vinsert
p1324
I42
VSimpleName: OracleCommitStatement
p1325
tp1326
I4
s(Vinsert
p1327
I42
VSimpleName: parseOrderBy
p1328
tp1329
I4
s(Vinsert
p1330
I45
VStringLiteral: " OR 1 = 1"
p1331
tp1332
I1
s(Vinsert
p1333
I45
VStringLiteral: " : "
p1334
tp1335
I2
s(Vinsert
p1336
I42
VSimpleName: stats
p1337
tp1338
I9
s(Vinsert
p1339
I42
VSimpleName: getOnDelete
p1340
tp1341
I2
s(Vinsert
p1342
I39
VPrimitiveType: byte
p1343
tp1344
I23
s(Vinsert
p1345
I42
VSimpleName: PGWithQuery
p1346
tp1347
I3
s(Vinsert
p1348
I45
VStringLiteral: "ZdGr2VmJHIw0ZNHBYhDdR+du5U5Yy47a6dJHXFW9eNyxBHtXZDuiWYTUtlnueHQV9iYDwE+r\u005cn"
p1349
tp1350
I1
s(Vinsert
p1351
I45
VStringLiteral: "SELECT gid, kind, mapid, poi_id, telephone\u005cn"
p1352
tp1353
I1
s(Vinsert
p1354
I42
VSimpleName: test_select_1
p1355
tp1356
I1
s(Vinsert
p1357
I40
VQualifiedName: FnvHash.BASIC
p1358
tp1359
I1
s(Vinsert
p1360
I43
VSimpleType: SQLExprTableSource
p1361
tp1362
I35
s(Vinsert
p1363
I42
VSimpleName: getBrowserIE9Count
p1364
tp1365
I1
s(Vinsert
p1366
I42
VSimpleName: providerC
p1367
tp1368
I2
s(Vinsert
p1369
I45
VStringLiteral: "\u005ctWHERE customer_id = acc_no;\u005cn"
p1370
tp1371
I1
s(Vinsert
p1372
I43
VSimpleType: SQLOrderBy
p1373
tp1374
I13
s(Vinsert
p1375
I40
VQualifiedName: FNVUtils.PRIOR
p1376
tp1377
I1
s(Vinsert
p1378
I42
VSimpleName: test_queryTimeout
p1379
tp1380
I2
s(Vinsert
p1381
I45
VStringLiteral: "\u005ctOR job_id = 'SH_CLERK'\u005cn"
p1382
tp1383
I1
s(Vinsert
p1384
I42
VSimpleName: isDescribeAllow
p1385
tp1386
I1
s(Vinsert
p1387
I42
VSimpleName: loadSqlList
p1388
tp1389
I2
s(Vinsert
p1390
I5
VArrayType: int[]
p1391
tp1392
I3
s(Vinsert
p1393
I42
VSimpleName: validateQuery
p1394
tp1395
I2
s(Vinsert
p1396
I43
VSimpleType: MySqlDescribeStatement
p1397
tp1398
I4
s(Vinsert
p1399
I45
VStringLiteral: "FIRST"
p1400
tp1401
I4
s(Vinsert
p1402
I45
VStringLiteral: "        from sys_info.orders "
p1403
tp1404
I1
s(Vinsert
p1405
I42
VSimpleName: resolvedColumn
p1406
tp1407
I4
s(Vinsert
p1408
I45
VStringLiteral: " `sellerId` bigint(20) DEFAULT NULL,"
p1409
tp1410
I1
s(Vinsert
p1411
I45
VStringLiteral: "\u005cn --c_3"
p1412
tp1413
I1
s(Vinsert
p1414
I42
VSimpleName: ThreadLocalRandom
p1415
tp1416
I2
s(Vinsert
p1417
I42
VSimpleName: from
p1418
tp1419
I38
s(Vinsert
p1420
I45
VStringLiteral: "select count(1) from [Tiger_Help] where 1 = 1 and id = 1"
p1421
tp1422
I1
s(Vinsert
p1423
I42
VSimpleName: insertDataCount
p1424
tp1425
I1
s(Vinsert
p1426
I42
VSimpleName: TestCase
p1427
tp1428
I105
s(Vinsert
p1429
I43
VSimpleType: B
p1430
tp1431
I1
s(Vinsert
p1432
I45
VStringLiteral: ":"
p1433
tp1434
I2
s(Vinsert
p1435
I43
VSimpleType: MySqlSelectParser
p1436
tp1437
I4
s(Vinsert
p1438
I45
VStringLiteral: "TABLESPACE \u005c"ECC_CPR_TSP\u005c"\u005cn"
p1439
tp1440
I1
s(Vinsert
p1441
I42
VSimpleName: setLeft
p1442
tp1443
I8
s(Vinsert
p1444
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION s0,"
p1445
tp1446
I1
s(Vinsert
p1447
I45
VStringLiteral: "\u005ctOR b.cp_code IS NULL"
p1448
tp1449
I1
s(Vinsert
p1450
I45
VStringLiteral: "\u005ctSELECT DISTINCT MKTG_PLAN_LVL2_ID AS PID, MKTG_PLAN_LVL4_ID AS SCENE_ID\u005cn"
p1451
tp1452
I1
s(Vinsert
p1453
I40
VQualifiedName: JdbcConstants.KINGBASE_DRIVER
p1454
tp1455
I1
s(Vinsert
p1456
I43
VSimpleType: Array
p1457
tp1458
I1
s(Vinsert
p1459
I40
VQualifiedName: Level.SEVERE
p1460
tp1461
I1
s(Vinsert
p1462
I45
VStringLiteral: "syntax error : "
p1463
tp1464
I2
s(Vinsert
p1465
I45
VStringLiteral: "jdbc:ingres:"
p1466
tp1467
I2
s(Vinsert
p1468
I42
VSimpleName: getIndexName
p1469
tp1470
I4
s(Vinsert
p1471
I42
VSimpleName: DruidPooledPreparedStatement
p1472
tp1473
I5
s(Vinsert
p1474
I43
VSimpleType: MySqlForeignKey
p1475
tp1476
I3
s(Vinsert
p1477
I42
VSimpleName: Array
p1478
tp1479
I1
s(Vinsert
p1480
I45
VStringLiteral: "select "
p1481
tp1482
I3
s(Vinsert
p1483
I45
VStringLiteral: ") ENGINE = InnoDB AUTO_INCREMENT = 1769503 CHARSET = utf8mb4 COMMENT '10000000'"
p1484
tp1485
I1
s(Vinsert
p1486
I45
VStringLiteral: "\u005cnSUBPARTITION BY HASH (TO_DAYS(purchased)) SUBPARTITIONS 2"
p1487
tp1488
I1
s(Vinsert
p1489
I42
VSimpleName: privileged
p1490
tp1491
I1
s(Vinsert
p1492
I42
VSimpleName: getCreateTimespanNano
p1493
tp1494
I1
s(Vinsert
p1495
I45
VStringLiteral: "JdbcUpdateCount"
p1496
tp1497
I1
s(Vinsert
p1498
I45
VStringLiteral: "\u005ct\u005ctvalues\u005cn"
p1499
tp1500
I1
s(Vinsert
p1501
I42
VSimpleName: FileOutputStream
p1502
tp1503
I1
s(Vinsert
p1504
I42
VSimpleName: PROP_INIT
p1505
tp1506
I2
s(Vinsert
p1507
I40
VQualifiedName: com.alibaba.druid.pool.PoolableStatement
p1508
tp1509
I1
s(Vinsert
p1510
I42
VSimpleName: BINARY
p1511
tp1512
I1
s(Vinsert
p1513
I45
VStringLiteral: "violationCount"
p1514
tp1515
I1
s(Vinsert
p1516
I42
VSimpleName: SQLPartitionValue
p1517
tp1518
I1
s(Vinsert
p1519
I42
VSimpleName: rollbackOnFail
p1520
tp1521
I1
s(Vinsert
p1522
I42
VSimpleName: record
p1523
tp1524
I6
s(Vinsert
p1525
I42
VSimpleName: configStream
p1526
tp1527
I2
s(Vinsert
p1528
I40
VQualifiedName: Token.START
p1529
tp1530
I1
s(Vinsert
p1531
I42
VSimpleName: returning
p1532
tp1533
I3
s(Vinsert
p1534
I42
VSimpleName: name
p1535
tp1536
I323
s(Vinsert
p1537
I42
VSimpleName: MySqlSetPasswordStatement
p1538
tp1539
I1
s(Vinsert
p1540
I45
VStringLiteral: "\u005cn\u005ctlname VARCHAR(30), "
p1541
tp1542
I1
s(Vinsert
p1543
I42
VSimpleName: offset
p1544
tp1545
I21
s(Vinsert
p1546
I45
VStringLiteral: "removeAbandonedTimeout"
p1547
tp1548
I1
s(Vinsert
p1549
I45
VStringLiteral: " CHARACTER SET "
p1550
tp1551
I1
s(Vinsert
p1552
I45
VStringLiteral: "\u005ctAND rsi.e_rprsendid = ?\u005cn"
p1553
tp1554
I1
s(Vinsert
p1555
I43
VSimpleType: MySqlSchemaStatVisitor
p1556
tp1557
I447
s(Vinsert
p1558
I43
VSimpleType: OracleBlockStatement
p1559
tp1560
I1
s(Vinsert
p1561
I42
VSimpleName: setWithRollUp
p1562
tp1563
I1
s(Vinsert
p1564
I40
VQualifiedName: x.select
p1565
tp1566
I1
s(Vinsert
p1567
I42
VSimpleName: setTestOnBorrow
p1568
tp1569
I23
s(Vinsert
p1570
I42
VSimpleName: pctthreshold
p1571
tp1572
I1
s(Vinsert
p1573
I42
VSimpleName: conn_5
p1574
tp1575
I1
s(Vinsert
p1576
I74
VParameterizedType: List<WallProvider>
p1577
tp1578
I1
s(Vinsert
p1579
I43
VSimpleType: TeradataLexer
p1580
tp1581
I1
s(Vinsert
p1582
I42
VSimpleName: orderByKey
p1583
tp1584
I1
s(Vinsert
p1585
I45
VStringLiteral: "\u005cn\u005ctactive int,"
p1586
tp1587
I1
s(Vinsert
p1588
I40
VQualifiedName: JdbcUtils.ORACLE
p1589
tp1590
I5
s(Vinsert
p1591
I16
VConditionalExpression
p1592
tp1593
I112
s(Vinsert
p1594
I45
VStringLiteral: " USING ("
p1595
tp1596
I1
s(Vinsert
p1597
I42
VSimpleName: getTableElementList
p1598
tp1599
I3
s(Vinsert
p1600
I42
VSimpleName: defaultReadOnly
p1601
tp1602
I1
s(Vinsert
p1603
I45
VStringLiteral: "\u005ct\u005ct, 'N', NULL, :NEW.deptsale);\u005cn"
p1604
tp1605
I1
s(Vinsert
p1606
I42
VSimpleName: itemB
p1607
tp1608
I1
s(Vinsert
p1609
I45
VStringLiteral: "\u005cn\u005ctSTORAGE (INITIAL 65536 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)"
p1610
tp1611
I1
s(Vinsert
p1612
I45
VStringLiteral: "StatementLastErrorTime"
p1613
tp1614
I1
s(Vinsert
p1615
I40
VQualifiedName: com.alibaba.druid.filter.wall.spi.WallVisitorUtils.loadResource
p1616
tp1617
I2
s(Vinsert
p1618
I45
VStringLiteral: "\u005ct\u005ctFROM ts_polygon\u005cn"
p1619
tp1620
I1
s(Vinsert
p1621
I45
VStringLiteral: "StatementErrorCount"
p1622
tp1623
I1
s(Vinsert
p1624
I45
VStringLiteral: "mytable"
p1625
tp1626
I1
s(Vinsert
p1627
I42
VSimpleName: JdbcSqlStat
p1628
tp1629
I29
s(Vinsert
p1630
I42
VSimpleName: createChain
p1631
tp1632
I7
s(Vinsert
p1633
I42
VSimpleName: parseCreateSequence
p1634
tp1635
I1
s(Vinsert
p1636
I42
VSimpleName: setToType
p1637
tp1638
I1
s(Vinsert
p1639
I45
VStringLiteral: "FROM sup_registration supReg\u005cn"
p1640
tp1641
I1
s(Vinsert
p1642
I45
VStringLiteral: "\u005cn\u005ctPRIMARY KEY (\u005c"ID\u005c")"
p1643
tp1644
I5
s(Vinsert
p1645
I45
VStringLiteral: "apply_goods_fee"
p1646
tp1647
I1
s(Vinsert
p1648
I43
VSimpleType: SQLCreateViewStatement
p1649
tp1650
I1
s(Vinsert
p1651
I45
VStringLiteral: "PCTFREE 5\u005cn"
p1652
tp1653
I1
s(Vinsert
p1654
I42
VSimpleName: mockStatement
p1655
tp1656
I1
s(Vinsert
p1657
I74
VParameterizedType: Map.Entry<String,JdbcSqlStat>
p1658
tp1659
I3
s(Vinsert
p1660
I42
VSimpleName: test_format
p1661
tp1662
I1
s(Vinsert
p1663
I43
VSimpleType: SQLSelectItem
p1664
tp1665
I24
s(Vinsert
p1666
I45
VStringLiteral: "CREATE TABLE k2 ("
p1667
tp1668
I1
s(Vinsert
p1669
I42
VSimpleName: subQueryTableSource
p1670
tp1671
I1
s(Vinsert
p1672
I42
VSimpleName: Item
p1673
tp1674
I3
s(Vinsert
p1675
I42
VSimpleName: getClobOpenCount
p1676
tp1677
I2
s(Vinsert
p1678
I42
VSimpleName: linera
p1679
tp1680
I2
s(Vinsert
p1681
I45
VStringLiteral: "\u005cn\u005ctlocation_id NUMBER(4)  CONSTRAINT loc_id_pk PRIMARY KEY,"
p1682
tp1683
I1
s(Vinsert
p1684
I45
VStringLiteral: "select id from t where id = 3 /*!30000union all select 2*/"
p1685
tp1686
I1
s(Vinsert
p1687
I42
VSimpleName: methodInvokeExpr
p1688
tp1689
I1
s(Vinsert
p1690
I42
VSimpleName: validConnectionCheckerClass
p1691
tp1692
I2
s(Vinsert
p1693
I42
VSimpleName: SpringStatUtils
p1694
tp1695
I2
s(Vinsert
p1696
I45
VStringLiteral: "next value for "
p1697
tp1698
I1
s(Vinsert
p1699
I43
VSimpleType: K
p1700
tp1701
I3
s(Vinsert
p1702
I74
VParameterizedType: AtomicIntegerFieldUpdater<WallTableStat>
p1703
tp1704
I1
s(Vinsert
p1705
I45
VStringLiteral: "UPDATE x1_use_agent t2\u005cn"
p1706
tp1707
I1
s(Vinsert
p1708
I42
VSimpleName: getDeclaredMethod
p1709
tp1710
I1
s(Vinsert
p1711
I45
VStringLiteral: "select 1, 2, 3 from t where id  = ? union select * from t"
p1712
tp1713
I1
s(Vinsert
p1714
I42
VSimpleName: dao_c3p0
p1715
tp1716
I2
s(Vinsert
p1717
I43
VSimpleType: PGWithQuery
p1718
tp1719
I3
s(Vinsert
p1720
I42
VSimpleName: evalExpr
p1721
tp1722
I37
s(Vinsert
p1723
I45
VStringLiteral: "PreparedStatementCacheAccessCount"
p1724
tp1725
I1
s(Vinsert
p1726
I42
VSimpleName: createParser
p1727
tp1728
I1
s(Vinsert
p1729
I42
VSimpleName: partitionSize
p1730
tp1731
I1
s(Vinsert
p1732
I42
VSimpleName: parseBoolean
p1733
tp1734
I1
s(Vinsert
p1735
I42
VSimpleName: getPermitObjects
p1736
tp1737
I4
s(Vinsert
p1738
I45
VStringLiteral: ",   host.reason as reason"
p1739
tp1740
I1
s(Vinsert
p1741
I45
VStringLiteral: "SQLSTATE "
p1742
tp1743
I1
s(Vinsert
p1744
I42
VSimpleName: init
p1745
tp1746
I24
s(Vinsert
p1747
I42
VSimpleName: leftDataType
p1748
tp1749
I2
s(Vinsert
p1750
I43
VSimpleType: OdpsLexer
p1751
tp1752
I3
s(Vinsert
p1753
I42
VSimpleName: RsaDecrypter
p1754
tp1755
I6
s(Vinsert
p1756
I42
VSimpleName: ServletContext
p1757
tp1758
I1
s(Vinsert
p1759
I42
VSimpleName: longValue
p1760
tp1761
I1
s(Vinsert
p1762
I43
VSimpleType: SQLAlterTableItem
p1763
tp1764
I4
s(Vinsert
p1765
I45
VStringLiteral: "cName"
p1766
tp1767
I1
s(Vinsert
p1768
I42
VSimpleName: SLF4JImpl
p1769
tp1770
I1
s(Vinsert
p1771
I42
VSimpleName: ReflectionUtils
p1772
tp1773
I6
s(Vinsert
p1774
I45
VStringLiteral: "\u005ctAND supReg.supType = '0'"
p1775
tp1776
I1
s(Vinsert
p1777
I42
VSimpleName: SQLNCharExpr
p1778
tp1779
I1
s(Vinsert
p1780
I42
VSimpleName: isDeny
p1781
tp1782
I1
s(Vinsert
p1783
I45
VStringLiteral: "\u005cn\u005ct\u005c"DATA\u005c" BLOB,"
p1784
tp1785
I2
s(Vinsert
p1786
I45
VStringLiteral: "values  : "
p1787
tp1788
I1
s(Vinsert
p1789
I42
VSimpleName: incrementAndGetExecuteCount
p1790
tp1791
I1
s(Vinsert
p1792
I43
VSimpleType: SQLDropTableStatement
p1793
tp1794
I1
s(Vinsert
p1795
I42
VSimpleName: preparedStatementFactory
p1796
tp1797
I6
s(Vinsert
p1798
I45
VStringLiteral: "\u005ct\u005c"OS_USER_NAME\u005c", \u005cn"
p1799
tp1800
I1
s(Vinsert
p1801
I42
VSimpleName: item
p1802
tp1803
I187
s(Vinsert
p1804
I42
VSimpleName: MySqlWallTest15
p1805
tp1806
I1
s(Vinsert
p1807
I45
VStringLiteral: "\u005ct, c.recommended, c.country, c.province, c.city, c.address\u005cn"
p1808
tp1809
I1
s(Vinsert
p1810
I45
VStringLiteral: "jdbc:wrap-jdbc:filters=default:name=clobTest:jdbc:derby:memory:clobTestDB;create=true"
p1811
tp1812
I1
s(Vinsert
p1813
I42
VSimpleName: getDeviceAndroidCount
p1814
tp1815
I10
s(Vinsert
p1816
I42
VSimpleName: exceptionSorters
p1817
tp1818
I1
s(Vinsert
p1819
I45
VStringLiteral: "    from sys_info.orders "
p1820
tp1821
I1
s(Vinsert
p1822
I42
VSimpleName: inTransaction
p1823
tp1824
I1
s(Vinsert
p1825
I40
VQualifiedName: ResultSet.TYPE_SCROLL_INSENSITIVE
p1826
tp1827
I1
s(Vinsert
p1828
I74
VParameterizedType: Map.Entry<String,Token>
p1829
tp1830
I1
s(Vinsert
p1831
I40
VQualifiedName: FnvHash.Constants.ISOPEN
p1832
tp1833
I1
s(Vinsert
p1834
I42
VSimpleName: test_read_limit
p1835
tp1836
I1
s(Vinsert
p1837
I42
VSimpleName: assertNull
p1838
tp1839
I13
s(Vinsert
p1840
I42
VSimpleName: setMaxLimit
p1841
tp1842
I2
s(Vinsert
p1843
I45
VStringLiteral: "\u005cn\u005ctREBUILD PARTITION p1"
p1844
tp1845
I1
s(Vinsert
p1846
I45
VStringLiteral: "\u005ct\u005ctRETURN ODCIConst.Success;\u005cn"
p1847
tp1848
I1
s(Vinsert
p1849
I42
VSimpleName: Reader
p1850
tp1851
I5
s(Vinsert
p1852
I45
VStringLiteral: "insert low_priority delayed high_priority ignore into tbl_name (a, b, c)\u005cnvalues (1, 2, 3)"
p1853
tp1854
I1
s(Vinsert
p1855
I43
VSimpleType: DESKeySpec
p1856
tp1857
I2
s(Vinsert
p1858
I42
VSimpleName: connections_A
p1859
tp1860
I1
s(Vinsert
p1861
I42
VSimpleName: readClob
p1862
tp1863
I3
s(Vinsert
p1864
I42
VSimpleName: stat
p1865
tp1866
I80
s(Vinsert
p1867
I42
VSimpleName: MySqlWallTest20
p1868
tp1869
I1
s(Vinsert
p1870
I43
VSimpleType: MySqlShowCharacterSetStatement
p1871
tp1872
I3
s(Vinsert
p1873
I40
VQualifiedName: Types.TIMESTAMP
p1874
tp1875
I2
s(Vinsert
p1876
I42
VSimpleName: ArrayList
p1877
tp1878
I88
s(Vinsert
p1879
I45
VStringLiteral: "\u005cn\u005ctsalary NUMBER(7, 2),"
p1880
tp1881
I6
s(Vinsert
p1882
I42
VSimpleName: release
p1883
tp1884
I1
s(Vinsert
p1885
I45
VStringLiteral: "select * from t whe id = 1"
p1886
tp1887
I1
s(Vinsert
p1888
I42
VSimpleName: setConnectionProperties
p1889
tp1890
I9
s(Vinsert
p1891
I45
VStringLiteral: "select 'x'"
p1892
tp1893
I7
s(Vinsert
p1894
I45
VStringLiteral: "        DROP COLUMN diff_value_1,\u005cn"
p1895
tp1896
I1
s(Vinsert
p1897
I45
VStringLiteral: "\u005cnPARTITION BY HASH (id) PARTITIONS 2"
p1898
tp1899
I1
s(Vinsert
p1900
I45
VStringLiteral: "DISTINCT"
p1901
tp1902
I2
s(Vinsert
p1903
I45
VStringLiteral: "\u005ct\u005ct\u005ct\u005ctAND p.cp_code IS NULL))\u005cn"
p1904
tp1905
I1
s(Vinsert
p1906
I45
VStringLiteral: "syntax error, token: "
p1907
tp1908
I1
s(Vinsert
p1909
I42
VSimpleName: incrementPreparedStatementCount
p1910
tp1911
I6
s(Vinsert
p1912
I42
VSimpleName: encode
p1913
tp1914
I1
s(Vinsert
p1915
I45
VStringLiteral: "\u005cn\u005ctIMPORT PARTITION ALL"
p1916
tp1917
I1
s(Vinsert
p1918
I42
VSimpleName: mySqlLexer
p1919
tp1920
I2
s(Vinsert
p1921
I42
VSimpleName: getConnectionEventListeners
p1922
tp1923
I2
s(Vinsert
p1924
I42
VSimpleName: maxWaitThreadCount
p1925
tp1926
I2
s(Vinsert
p1927
I45
VStringLiteral: "optimize table table1"
p1928
tp1929
I1
s(Vinsert
p1930
I45
VStringLiteral: "\u005cn\u005ctstreet_address VARCHAR2(40),"
p1931
tp1932
I4
s(Vinsert
p1933
I42
VSimpleName: MySqlShowTableStatusStatement
p1934
tp1935
I2
s(Vinsert
p1936
I42
VSimpleName: PGInetExpr
p1937
tp1938
I4
s(Vinsert
p1939
I45
VStringLiteral: "CREATE TABLE divisions ("
p1940
tp1941
I4
s(Vinsert
p1942
I42
VSimpleName: direction
p1943
tp1944
I1
s(Vinsert
p1945
I42
VSimpleName: incrementUpdateCount
p1946
tp1947
I2
s(Vinsert
p1948
I43
VSimpleType: PGCircleExpr
p1949
tp1950
I4
s(Vinsert
p1951
I45
VStringLiteral: "\u005cn\u005ctON \u005c"AO_4AEACD_WEBHOOK_DAO\u005c""
p1952
tp1953
I2
s(Vinsert
p1954
I43
VSimpleType: Iterator
p1955
tp1956
I1
s(Vinsert
p1957
I45
VStringLiteral: " `Extent1`.`AccountantMobile`, "
p1958
tp1959
I1
s(Vinsert
p1960
I42
VSimpleName: isCreate
p1961
tp1962
I1
s(Vinsert
p1963
I42
VSimpleName: expr1
p1964
tp1965
I1
s(Vinsert
p1966
I40
VQualifiedName: Token.ELSE
p1967
tp1968
I1
s(Vinsert
p1969
I42
VSimpleName: array
p1970
tp1971
I10
s(Vinsert
p1972
I45
VStringLiteral: "[1957025290,1,\u005c"2017-10-16 23:34:28.519\u005c",\u005c"2017-10-16 23:34:28.519\u005c",2933220011L,[0,-1],0,20]"
p1973
tp1974
I1
s(Vinsert
p1975
I42
VSimpleName: cmdArray
p1976
tp1977
I4
s(Vinsert
p1978
I42
VSimpleName: property
p1979
tp1980
I40
s(Vinsert
p1981
I42
VSimpleName: getMap
p1982
tp1983
I3
s(Vinsert
p1984
I42
VSimpleName: getDataSourceHolder
p1985
tp1986
I2
s(Vinsert
p1987
I40
VQualifiedName: Token.IS
p1988
tp1989
I1
s(Vinsert
p1990
I43
VSimpleType: MySqlShowEventsStatement
p1991
tp1992
I3
s(Vinsert
p1993
I43
VSimpleType: Short
p1994
tp1995
I2
s(Vinsert
p1996
I42
VSimpleName: isStrictSyntaxCheck
p1997
tp1998
I3
s(Vinsert
p1999
I42
VSimpleName: getIsolationLevel
p2000
tp2001
I1
s(Vinsert
p2002
I43
VSimpleType: SQLASTOutputVisitor
p2003
tp2004
I25
s(Vinsert
p2005
I45
VStringLiteral: "\u005ctWHAT VARCHAR(4000),\u005cn"
p2006
tp2007
I1
s(Vinsert
p2008
I45
VStringLiteral: "com.ingres.jdbc.IngresDriver"
p2009
tp2010
I1
s(Vinsert
p2011
I42
VSimpleName: incrementSelectCount
p2012
tp2013
I4
s(Vinsert
p2014
I42
VSimpleName: getInt
p2015
tp2016
I2
s(Vinsert
p2017
I45
VStringLiteral: "not support function : "
p2018
tp2019
I1
s(Vinsert
p2020
I27
VInfixExpression: ==
p2021
tp2022
I631
s(Vinsert
p2023
I45
VStringLiteral: "insert"
p2024
tp2025
I3
s(Vinsert
p2026
I42
VSimpleName: isWork
p2027
tp2028
I1
s(Vinsert
p2029
I43
VSimpleType: StatFilter
p2030
tp2031
I15
s(Vinsert
p2032
I42
VSimpleName: hint1
p2033
tp2034
I1
s(Vinsert
p2035
I43
VSimpleType: MySqlHintStatement
p2036
tp2037
I3
s(Vinsert
p2038
I42
VSimpleName: TeradataSchemaStatVisitor
p2039
tp2040
I1
s(Vinsert
p2041
I43
VSimpleType: SQLServerSelectQueryBlock
p2042
tp2043
I2
s(Vinsert
p2044
I42
VSimpleName: getXmlPath
p2045
tp2046
I1
s(Vinsert
p2047
I42
VSimpleName: ident_normalized
p2048
tp2049
I1
s(Vinsert
p2050
I45
VStringLiteral: "\u005ctAFTER INSERT\u005cn"
p2051
tp2052
I1
s(Vinsert
p2053
I42
VSimpleName: testEval_5
p2054
tp2055
I1
s(Vinsert
p2056
I42
VSimpleName: getRanges
p2057
tp2058
I1
s(Vinsert
p2059
I45
VStringLiteral: "| c_time       | time         | NO   |     | NULL    |       |\u005cn"
p2060
tp2061
I1
s(Vinsert
p2062
I40
VQualifiedName: com.alibaba.druid.sql.ast.statement.SQLSelectItem
p2063
tp2064
I2
s(Vinsert
p2065
I45
VStringLiteral: "     ELSIF V_COMPARE >= F_NLSSORT('?') AND V_COMPARE <= F_NLSSORT('?') THEN\u005cn"
p2066
tp2067
I1
s(Vinsert
p2068
I42
VSimpleName: NutDao
p2069
tp2070
I1
s(Vinsert
p2071
I42
VSimpleName: RSAPublicKey
p2072
tp2073
I1
s(Vinsert
p2074
I45
VStringLiteral: "\u005cn\u005ctCONSTRAINT product_status_lov_demo CHECK (product_status IN ('orderable', 'planned', 'under development', 'obsolete'))"
p2075
tp2076
I2
s(Vinsert
p2077
I42
VSimpleName: Dao
p2078
tp2079
I1
s(Vinsert
p2080
I45
VStringLiteral: "\u005cn\u005ctlocation VARCHAR2(13)"
p2081
tp2082
I2
s(Vinsert
p2083
I45
VStringLiteral: "\u005ct\u005ctAND outer.file# = file#\u005cn"
p2084
tp2085
I2
s(Vinsert
p2086
I45
VStringLiteral: "WHERE gmt = #{time}::timestamp WITH TIME ZONE"
p2087
tp2088
I1
s(Vinsert
p2089
I42
VSimpleName: getHTable
p2090
tp2091
I2
s(Vinsert
p2092
I42
VSimpleName: setIfNotExiists
p2093
tp2094
I1
s(Vinsert
p2095
I42
VSimpleName: DB2OutputVisitor
p2096
tp2097
I4
s(Vinsert
p2098
I42
VSimpleName: setCluster
p2099
tp2100
I2
s(Vinsert
p2101
I42
VSimpleName: sampleClause
p2102
tp2103
I1
s(Vinsert
p2104
I45
VStringLiteral: "\u005cn\u005ctproduct_description VARCHAR2(2000),"
p2105
tp2106
I2
s(Vinsert
p2107
I42
VSimpleName: dir
p2108
tp2109
I8
s(Vinsert
p2110
I43
VSimpleType: WeakReference
p2111
tp2112
I1
s(Vinsert
p2113
I42
VSimpleName: getContextClassLoader
p2114
tp2115
I6
s(Vinsert
p2116
I45
VStringLiteral: "t_orders.status"
p2117
tp2118
I1
s(Vinsert
p2119
I45
VStringLiteral: "insert overwrite table sale_detail_multi partition (sale_date='2010', region='china' )\u005cn"
p2120
tp2121
I1
s(Vinsert
p2122
I45
VStringLiteral: "DELETE "
p2123
tp2124
I1
s(Vinsert
p2125
I42
VSimpleName: sqlitemap
p2126
tp2127
I2
s(Vinsert
p2128
I45
VStringLiteral: "delete "
p2129
tp2130
I1
s(Vinsert
p2131
I42
VSimpleName: isNotificationEnable
p2132
tp2133
I1
s(Vinsert
p2134
I40
VQualifiedName: ParameterType.IN
p2135
tp2136
I2
s(Vinsert
p2137
I42
VSimpleName: passoword
p2138
tp2139
I1
s(Vinsert
p2140
I42
VSimpleName: delimiters
p2141
tp2142
I1
s(Vinsert
p2143
I42
VSimpleName: toOdpsString
p2144
tp2145
I5
s(Vinsert
p2146
I42
VSimpleName: collate
p2147
tp2148
I4
s(Vinsert
p2149
I42
VSimpleName: test_setClob_2
p2150
tp2151
I1
s(Vinsert
p2152
I45
VStringLiteral: "abcd\u005cn"
p2153
tp2154
I21
s(Vinsert
p2155
I42
VSimpleName: exceptionSorter
p2156
tp2157
I5
s(Vinsert
p2158
I42
VSimpleName: newThread
p2159
tp2160
I1
s(Vinsert
p2161
I45
VStringLiteral: "\u005ctc_bigint bigint(20),\u005cn"
p2162
tp2163
I2
s(Vinsert
p2164
I42
VSimpleName: shrink
p2165
tp2166
I4
s(Vinsert
p2167
I42
VSimpleName: tryImplementation
p2168
tp2169
I1
s(Vinsert
p2170
I42
VSimpleName: getProxyFilters
p2171
tp2172
I17
s(Vinsert
p2173
I42
VSimpleName: contentList
p2174
tp2175
I1
s(Vinsert
p2176
I45
VStringLiteral: "select user0_.id as id0_, user0_.email as email0_, "
p2177
tp2178
I1
s(Vinsert
p2179
I42
VSimpleName: panel
p2180
tp2181
I2
s(Vinsert
p2182
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION s4,"
p2183
tp2184
I1
s(Vinsert
p2185
I42
VSimpleName: isSearchable
p2186
tp2187
I1
s(Vinsert
p2188
I42
VSimpleName: connectingCount
p2189
tp2190
I2
s(Vinsert
p2191
I45
VStringLiteral: "\u005ct\u005ctCOMPUTE STATISTICS\u005cn"
p2192
tp2193
I1
s(Vinsert
p2194
I42
VSimpleName: parseHints
p2195
tp2196
I14
s(Vinsert
p2197
I40
VQualifiedName: other.left
p2198
tp2199
I1
s(Vinsert
p2200
I45
VStringLiteral: "\u005ctFAILURES DECIMAL(38),\u005cn"
p2201
tp2202
I1
s(Vinsert
p2203
I40
VQualifiedName: FnvHash.Constants.NOVALIDATE
p2204
tp2205
I1
s(Vinsert
p2206
I42
VSimpleName: keyStr
p2207
tp2208
I2
s(Vinsert
p2209
I42
VSimpleName: dotRest
p2210
tp2211
I1
s(Vinsert
p2212
I42
VSimpleName: lexer
p2213
tp2214
I765
s(Vinsert
p2215
I43
VSimpleType: WallCheckResult
p2216
tp2217
I14
s(Vinsert
p2218
I43
VSimpleType: ConnectionEventListener
p2219
tp2220
I3
s(Vinsert
p2221
I42
VSimpleName: cstmt
p2222
tp2223
I3
s(Vinsert
p2224
I45
VStringLiteral: "OIDINDEX"
p2225
tp2226
I1
s(Vinsert
p2227
I45
VStringLiteral: "jdbc:log4jdbc:derby://localhost:1527//db-derby-10.2.2.0-bin/databases/MyDatabase"
p2228
tp2229
I1
s(Vinsert
p2230
I42
VSimpleName: permitFunctions
p2231
tp2232
I2
s(Vinsert
p2233
I43
VSimpleType: OracleOrderByItem
p2234
tp2235
I1
s(Vinsert
p2236
I42
VSimpleName: MappingVisitorUtils
p2237
tp2238
I14
s(Vinsert
p2239
I42
VSimpleName: getFetchRowCount
p2240
tp2241
I3
s(Vinsert
p2242
I42
VSimpleName: driverClassName
p2243
tp2244
I4
s(Vinsert
p2245
I42
VSimpleName: MockCallableStatement
p2246
tp2247
I5
s(Vinsert
p2248
I42
VSimpleName: setPreparedStatementFactory
p2249
tp2250
I1
s(Vinsert
p2251
I43
VSimpleType: StdScheduler
p2252
tp2253
I1
s(Vinsert
p2254
I45
VStringLiteral: "\u005ct\u005ctbonus := 50;\u005cn"
p2255
tp2256
I1
s(Vinsert
p2257
I45
VStringLiteral: "jdbc:mysql://172.22.32.5/beidou?useUnicode=true&characterEncoding=UTF-8"
p2258
tp2259
I1
s(Vinsert
p2260
I42
VSimpleName: JdbcConnectionStat
p2261
tp2262
I2
s(Vinsert
p2263
I45
VStringLiteral: "\u005ct\u005ctINITIAL 65536\u005cn"
p2264
tp2265
I3
s(Vinsert
p2266
I42
VSimpleName: MySqlWallTest24
p2267
tp2268
I1
s(Vinsert
p2269
I43
VSimpleType: InetAddress
p2270
tp2271
I1
s(Vinsert
p2272
I42
VSimpleName: sql2
p2273
tp2274
I1
s(Vinsert
p2275
I40
VQualifiedName: Token.DATABASE
p2276
tp2277
I3
s(Vinsert
p2278
I42
VSimpleName: error
p2279
tp2280
I140
s(Vinsert
p2281
I83
VModifier: volatile
p2282
tp2283
I1
s(Vinsert
p2284
I43
VSimpleType: SQLServerWallProvider
p2285
tp2286
I9
s(Vinsert
p2287
I42
VSimpleName: getNameInternal
p2288
tp2289
I1
s(Vinsert
p2290
I42
VSimpleName: HBaseResultSet
p2291
tp2292
I1
s(Vinsert
p2293
I45
VStringLiteral: "\u005cnon a.shop_name = b.shop_name;"
p2294
tp2295
I1
s(Vinsert
p2296
I42
VSimpleName: setAlterCount
p2297
tp2298
I1
s(Vinsert
p2299
I42
VSimpleName: getLog
p2300
tp2301
I24
s(Vinsert
p2302
I42
VSimpleName: MTable
p2303
tp2304
I1
s(Vinsert
p2305
I45
VStringLiteral: "CREATE ALGORITHM = merge\u005cn"
p2306
tp2307
I1
s(Vinsert
p2308
I42
VSimpleName: sortedSql
p2309
tp2310
I2
s(Vinsert
p2311
I42
VSimpleName: putIfAbsent
p2312
tp2313
I4
s(Vinsert
p2314
I42
VSimpleName: getTable
p2315
tp2316
I5
s(Vinsert
p2317
I45
VStringLiteral: "kkk#abc0#aa"
p2318
tp2319
I1
s(Vinsert
p2320
I40
VQualifiedName: SQLBinaryOperator.Is
p2321
tp2322
I1
s(Vinsert
p2323
I42
VSimpleName: MySqlShowEventsStatement
p2324
tp2325
I3
s(Vinsert
p2326
I45
VStringLiteral: "\u005cnLIMIT 100"
p2327
tp2328
I1
s(Vinsert
p2329
I45
VStringLiteral: "REFRESH FAST ON COMMIT\u005cn"
p2330
tp2331
I1
s(Vinsert
p2332
I45
VStringLiteral: "3"
p2333
tp2334
I5
s(Vinsert
p2335
I42
VSimpleName: sin
p2336
tp2337
I1
s(Vinsert
p2338
I42
VSimpleName: denseRank
p2339
tp2340
I1
s(Vinsert
p2341
I45
VStringLiteral: "accounts"
p2342
tp2343
I1
s(Vinsert
p2344
I45
VStringLiteral: "select 123"
p2345
tp2346
I1
s(Vinsert
p2347
I45
VStringLiteral: "dec(19,1)"
p2348
tp2349
I1
s(Vinsert
p2350
I42
VSimpleName: SQLServerRollbackStatement
p2351
tp2352
I1
s(Vinsert
p2353
I42
VSimpleName: debugUnreturnedConnectionStackTraces
p2354
tp2355
I1
s(Vinsert
p2356
I42
VSimpleName: MySqlShowGrantsStatement
p2357
tp2358
I2
s(Vinsert
p2359
I42
VSimpleName: SQLAlterTableEnableConstraint
p2360
tp2361
I3
s(Vinsert
p2362
I45
VStringLiteral: "[Ad_Wait_Stop_Time] varchar(255) NULL,\u005cn"
p2363
tp2364
I1
s(Vinsert
p2365
I45
VStringLiteral: "\u005cn\u005ctCONSTRAINT loc_id_pk PRIMARY KEY (location_id)"
p2366
tp2367
I2
s(Vinsert
p2368
I42
VSimpleName: printSet
p2369
tp2370
I1
s(Vinsert
p2371
I45
VStringLiteral: "CHARSET"
p2372
tp2373
I1
s(Vinsert
p2374
I42
VSimpleName: druidStatInterceptor
p2375
tp2376
I1
s(Vinsert
p2377
I45
VStringLiteral: "SELECT"
p2378
tp2379
I1
s(Vinsert
p2380
I45
VStringLiteral: "HIGH_PRIORITY "
p2381
tp2382
I1
s(Vinsert
p2383
I45
VStringLiteral: "\u005cn\u005ctFROM audit_url_log"
p2384
tp2385
I1
s(Vinsert
p2386
I43
VSimpleType: OracleIntervalExpr
p2387
tp2388
I2
s(Vinsert
p2389
I42
VSimpleName: message
p2390
tp2391
I3
s(Vinsert
p2392
I42
VSimpleName: HBQLVisitor
p2393
tp2394
I2
s(Vinsert
p2395
I42
VSimpleName: stmtsB
p2396
tp2397
I1
s(Vinsert
p2398
I42
VSimpleName: DECLARE
p2399
tp2400
I1
s(Vinsert
p2401
I40
VQualifiedName: com.alibaba.druid.sql.dialect.oracle.ast.OracleHint
p2402
tp2403
I1
s(Vinsert
p2404
I42
VSimpleName: having
p2405
tp2406
I2
s(Vinsert
p2407
I42
VSimpleName: File
p2408
tp2409
I4
s(Vinsert
p2410
I45
VStringLiteral: "insert into\u005cn"
p2411
tp2412
I1
s(Vinsert
p2413
I43
VSimpleType: java.sql.Connection
p2414
tp2415
I2
s(Vinsert
p2416
I45
VStringLiteral: "PARTITIONS"
p2417
tp2418
I2
s(Vinsert
p2419
I42
VSimpleName: hierachicalQueryClause
p2420
tp2421
I1
s(Vinsert
p2422
I42
VSimpleName: selectQueryBlcok
p2423
tp2424
I1
s(Vinsert
p2425
I45
VStringLiteral: "LEFT JOIN dbo.[Order History] AS oh   \u005cn"
p2426
tp2427
I1
s(Vinsert
p2428
I45
VStringLiteral: "IGNORE "
p2429
tp2430
I2
s(Vinsert
p2431
I45
VStringLiteral: "DROP COLUMN "
p2432
tp2433
I1
s(Vinsert
p2434
I45
VStringLiteral: "END"
p2435
tp2436
I1
s(Vinsert
p2437
I42
VSimpleName: clazz_ConnectionImpl
p2438
tp2439
I1
s(Vinsert
p2440
I43
VSimpleType: SQLDropTableSpaceStatement
p2441
tp2442
I3
s(Vinsert
p2443
I42
VSimpleName: getDataSourceList
p2444
tp2445
I8
s(Vinsert
p2446
I42
VSimpleName: append
p2447
tp2448
I103
s(Vinsert
p2449
I34
VNumberLiteral: 0xcbf29ce484222325L
p2450
tp2451
I1
s(Vinsert
p2452
I42
VSimpleName: dataSource
p2453
tp2454
I595
s(Vinsert
p2455
I45
VStringLiteral: "timeBetweenEvictionRunsMillis=10000"
p2456
tp2457
I1
s(Vinsert
p2458
I45
VStringLiteral: "DELAY"
p2459
tp2460
I1
s(Vinsert
p2461
I42
VSimpleName: MySqlShowIndexesStatement
p2462
tp2463
I2
s(Vinsert
p2464
I40
VQualifiedName: com.alibaba.druid.sql.ast.SQLCommentHint
p2465
tp2466
I1
s(Vinsert
p2467
I42
VSimpleName: n
p2468
tp2469
I7
s(Vinsert
p2470
I45
VStringLiteral: "CALL"
p2471
tp2472
I1
s(Vinsert
p2473
I42
VSimpleName: jdbcFetchRowCount
p2474
tp2475
I2
s(Vinsert
p2476
I43
VSimpleType: SQLServerASTVisitor
p2477
tp2478
I12
s(Vinsert
p2479
I42
VSimpleName: toSQL
p2480
tp2481
I5
s(Vinsert
p2482
I45
VStringLiteral: "begin transaction"
p2483
tp2484
I1
s(Vinsert
p2485
I42
VSimpleName: pattern
p2486
tp2487
I5
s(Vinsert
p2488
I42
VSimpleName: execute
p2489
tp2490
I27
s(Vinsert
p2491
I45
VStringLiteral: "\u005ctsnapshot_id,\u005cn"
p2492
tp2493
I1
s(Vinsert
p2494
I42
VSimpleName: maxSize
p2495
tp2496
I2
s(Vinsert
p2497
I42
VSimpleName: isSimpleConstExpr
p2498
tp2499
I1
s(Vinsert
p2500
I42
VSimpleName: notFail
p2501
tp2502
I1
s(Vinsert
p2503
I42
VSimpleName: getAndIncrement
p2504
tp2505
I8
s(Vinsert
p2506
I40
VQualifiedName: Token.ANY
p2507
tp2508
I1
s(Vinsert
p2509
I45
VStringLiteral: "UPDATE goods_detail\u005cn"
p2510
tp2511
I1
s(Vinsert
p2512
I42
VSimpleName: MergeStatFilter
p2513
tp2514
I1
s(Vinsert
p2515
I42
VSimpleName: sessionBefore
p2516
tp2517
I4
s(Vinsert
p2518
I40
VQualifiedName: VisitorFeature.OutputUCase
p2519
tp2520
I1
s(Vinsert
p2521
I42
VSimpleName: length
p2522
tp2523
I80
s(Vinsert
p2524
I45
VStringLiteral: "table : "
p2525
tp2526
I1
s(Vinsert
p2527
I43
VSimpleType: SQLCheck
p2528
tp2529
I2
s(Vinsert
p2530
I42
VSimpleName: getStatementName
p2531
tp2532
I1
s(Vinsert
p2533
I45
VStringLiteral: "username"
p2534
tp2535
I1
s(Vinsert
p2536
I42
VSimpleName: resultSetLoggerName
p2537
tp2538
I3
s(Vinsert
p2539
I42
VSimpleName: printDataSourceData
p2540
tp2541
I2
s(Vinsert
p2542
I45
VStringLiteral: "\u005ctAND `buyer_resource`.`seller_id` = ?\u005cn"
p2543
tp2544
I1
s(Vinsert
p2545
I43
VSimpleType: ClobProxy
p2546
tp2547
I1
s(Vinsert
p2548
I42
VSimpleName: getPrintStream
p2549
tp2550
I3
s(Vinsert
p2551
I42
VSimpleName: SQLCharactorDataType
p2552
tp2553
I2
s(Vinsert
p2554
I43
VSimpleType: Component
p2555
tp2556
I1
s(Vinsert
p2557
I42
VSimpleName: OracleXAException
p2558
tp2559
I1
s(Vinsert
p2560
I42
VSimpleName: log10
p2561
tp2562
I1
s(Vinsert
p2563
I45
VStringLiteral: ",POSTCODE,PHONE,FAX,EMAIL,ADDRESS,FIRST_NAME,LAST_NAME,sex) "
p2564
tp2565
I1
s(Vinsert
p2566
I45
VStringLiteral: "\u005ct\u005ct'VerifyNick', \u005cn"
p2567
tp2568
I1
s(Vinsert
p2569
I43
VSimpleType: SQLServerObjectReferenceExpr
p2570
tp2571
I2
s(Vinsert
p2572
I45
VStringLiteral: ") ENGINE = InnoDB AUTO_INCREMENT = 1769503 CHARSET = utf8mb4 COMMENT = '10000000'"
p2573
tp2574
I3
s(Vinsert
p2575
I42
VSimpleName: HBaseConnection
p2576
tp2577
I2
s(Vinsert
p2578
I42
VSimpleName: binaryA
p2579
tp2580
I4
s(Vinsert
p2581
I42
VSimpleName: join
p2582
tp2583
I6
s(Vinsert
p2584
I42
VSimpleName: SpringStat
p2585
tp2586
I4
s(Vinsert
p2587
I42
VSimpleName: JTable
p2588
tp2589
I1
s(Vinsert
p2590
I13
VCharacterLiteral: '('
p2591
tp2592
I5
s(Vinsert
p2593
I43
VSimpleType: ThreadLocal
p2594
tp2595
I1
s(Vinsert
p2596
I45
VStringLiteral: "CONNECT_BY_ROOT"
p2597
tp2598
I1
s(Vinsert
p2599
I42
VSimpleName: getConnectionInternal
p2600
tp2601
I1
s(Vinsert
p2602
I42
VSimpleName: setInt
p2603
tp2604
I9
s(Vinsert
p2605
I42
VSimpleName: getContext
p2606
tp2607
I7
s(Vinsert
p2608
I42
VSimpleName: assertStatements
p2609
tp2610
I1
s(Vinsert
p2611
I45
VStringLiteral: "\u005ct\u005c"ID\u005c" PRIMARY KEY,\u005cn"
p2612
tp2613
I1
s(Vinsert
p2614
I42
VSimpleName: exceptionsInto
p2615
tp2616
I7
s(Vinsert
p2617
I42
VSimpleName: SQLCreateDatabaseStatement
p2618
tp2619
I3
s(Vinsert
p2620
I43
VSimpleType: DruidDataSourceBuilder
p2621
tp2622
I1
s(Vinsert
p2623
I43
VSimpleType: PoolableStatement
p2624
tp2625
I7
s(Vinsert
p2626
I42
VSimpleName: addDataSource
p2627
tp2628
I1
s(Vinsert
p2629
I42
VSimpleName: parseUnique
p2630
tp2631
I3
s(Vinsert
p2632
I43
VSimpleType: OracleBinaryFloatExpr
p2633
tp2634
I1
s(Vinsert
p2635
I45
VStringLiteral: "end;"
p2636
tp2637
I1
s(Vinsert
p2638
I40
VQualifiedName: com.mysql.jdbc.jdbc2.optional.SuspendableXAConnection
p2639
tp2640
I1
s(Vinsert
p2641
I42
VSimpleName: setObjectType
p2642
tp2643
I2
s(Vinsert
p2644
I42
VSimpleName: getDomainName
p2645
tp2646
I1
s(Vinsert
p2647
I42
VSimpleName: SQLLexer
p2648
tp2649
I3
s(Vinsert
p2650
I45
VStringLiteral: "oracle"
p2651
tp2652
I3
s(Vinsert
p2653
I42
VSimpleName: AGGREGATE_FUNCTIONS
p2654
tp2655
I1
s(Vinsert
p2656
I45
VStringLiteral: "java.lang:type=GarbageCollector,name=Copy"
p2657
tp2658
I2
s(Vinsert
p2659
I43
VSimpleType: Configuration
p2660
tp2661
I1
s(Vinsert
p2662
I42
VSimpleName: test_select
p2663
tp2664
I5
s(Vinsert
p2665
I42
VSimpleName: addUrlPatterns
p2666
tp2667
I1
s(Vinsert
p2668
I42
VSimpleName: await
p2669
tp2670
I9
s(Vinsert
p2671
I42
VSimpleName: environment
p2672
tp2673
I1
s(Vinsert
p2674
I42
VSimpleName: c3
p2675
tp2676
I1
s(Vinsert
p2677
I74
VParameterizedType: ArrayList<Map<String,Object>>
p2678
tp2679
I3
s(Vinsert
p2680
I40
VQualifiedName: Token.IN
p2681
tp2682
I6
s(Vinsert
p2683
I45
VStringLiteral: "| c_bigint     | bigint(20)   | NO   |     | NULL                |                             |\u005cn"
p2684
tp2685
I1
s(Vinsert
p2686
I43
VSimpleType: SQLBinaryExpr
p2687
tp2688
I5
s(Vinsert
p2689
I40
VQualifiedName: AggregateType.Sum
p2690
tp2691
I4
s(Vinsert
p2692
I45
VStringLiteral: "\u005ct) t1\u005cn"
p2693
tp2694
I1
s(Vinsert
p2695
I42
VSimpleName: EvalMethodInstrTest
p2696
tp2697
I1
s(Vinsert
p2698
I42
VSimpleName: MySqlWallTest27
p2699
tp2700
I1
s(Vinsert
p2701
I42
VSimpleName: aI
p2702
tp2703
I1
s(Vinsert
p2704
I43
VSimpleType: SQLParameter
p2705
tp2706
I12
s(Vinsert
p2707
I45
VStringLiteral: " FOR "
p2708
tp2709
I1
s(Vinsert
p2710
I42
VSimpleName: closePreapredStatement
p2711
tp2712
I1
s(Vinsert
p2713
I42
VSimpleName: parameterName
p2714
tp2715
I2
s(Vinsert
p2716
I45
VStringLiteral: "replace into t1 (id, name)\u005cn"
p2717
tp2718
I1
s(Vinsert
p2719
I42
VSimpleName: setWithTimeZone
p2720
tp2721
I1
s(Vinsert
p2722
I45
VStringLiteral: "TODO STORAGE"
p2723
tp2724
I1
s(Vinsert
p2725
I42
VSimpleName: unionRest
p2726
tp2727
I1
s(Vinsert
p2728
I42
VSimpleName: test_false_2
p2729
tp2730
I1
s(Vinsert
p2731
I42
VSimpleName: setSelect
p2732
tp2733
I5
s(Vinsert
p2734
I42
VSimpleName: connection_close
p2735
tp2736
I1
s(Vinsert
p2737
I45
VStringLiteral: "AliOracle"
p2738
tp2739
I1
s(Vinsert
p2740
I42
VSimpleName: PushService
p2741
tp2742
I3
s(Vinsert
p2743
I42
VSimpleName: _decimal
p2744
tp2745
I1
s(Vinsert
p2746
I43
VSimpleType: HttpSession
p2747
tp2748
I1
s(Vinsert
p2749
I42
VSimpleName: relationship
p2750
tp2751
I1
s(Vinsert
p2752
I42
VSimpleName: driverWrapper
p2753
tp2754
I1
s(Vinsert
p2755
I45
VStringLiteral: "SYNONYM "
p2756
tp2757
I1
s(Vinsert
p2758
I42
VSimpleName: setResultSetLogger
p2759
tp2760
I1
s(Vinsert
p2761
I42
VSimpleName: indexNames
p2762
tp2763
I1
s(Vinsert
p2764
I42
VSimpleName: row
p2765
tp2766
I19
s(Vinsert
p2767
I42
VSimpleName: JPanel
p2768
tp2769
I1
s(Vinsert
p2770
I42
VSimpleName: sorter
p2771
tp2772
I13
s(Vinsert
p2773
I43
VSimpleType: OraclePreparedStatement
p2774
tp2775
I2
s(Vinsert
p2776
I42
VSimpleName: NullExceptionSorter
p2777
tp2778
I1
s(Vinsert
p2779
I43
VSimpleType: Runnable
p2780
tp2781
I1
s(Vinsert
p2782
I45
VStringLiteral: "30"
p2783
tp2784
I1
s(Vinsert
p2785
I42
VSimpleName: StatViewServlet
p2786
tp2787
I2
s(Vinsert
p2788
I42
VSimpleName: columnExpr
p2789
tp2790
I2
s(Vinsert
p2791
I42
VSimpleName: getNotEmptyWaitCount
p2792
tp2793
I1
s(Vinsert
p2794
I42
VSimpleName: _eq
p2795
tp2796
I1
s(Vinsert
p2797
I42
VSimpleName: OracleUpdateStatement
p2798
tp2799
I1
s(Vinsert
p2800
I45
VStringLiteral: "\u005cn\u005ct\u005ctCONSTRAINT check_divname CHECK (div_name = UPPER(div_name)) DISABLE,"
p2801
tp2802
I2
s(Vinsert
p2803
I42
VSimpleName: dataSourceHolder
p2804
tp2805
I1
s(Vinsert
p2806
I45
VStringLiteral: "2.0"
p2807
tp2808
I1
s(Vinsert
p2809
I43
VSimpleType: MySqlBlockStatement
p2810
tp2811
I2
s(Vinsert
p2812
I40
VQualifiedName: com.alibaba.druid.proxy.DruidDriver
p2813
tp2814
I15
s(Vinsert
p2815
I42
VSimpleName: SQLASTOutputVisitor
p2816
tp2817
I23
s(Vinsert
p2818
I45
VStringLiteral: "CURRENT"
p2819
tp2820
I1
s(Vinsert
p2821
I45
VStringLiteral: "\u005cttt.ver;"
p2822
tp2823
I1
s(Vinsert
p2824
I43
VSimpleType: Property
p2825
tp2826
I3
s(Vinsert
p2827
I43
VSimpleType: IPRange
p2828
tp2829
I2
s(Vinsert
p2830
I42
VSimpleName: udf
p2831
tp2832
I8
s(Vinsert
p2833
I45
VStringLiteral: "Pf3/wD+9ncRZhp3XxTMUO3yIRvswg+nQ7UhqfHRG2vg+SD7x9XzsDUFWbdwCJVEOLKBBRuH6\u005cn"
p2834
tp2835
I1
s(Vinsert
p2836
I45
VStringLiteral: "\u005cton UT.ad_session = CLK.ad_session\u005cn"
p2837
tp2838
I1
s(Vinsert
p2839
I45
VStringLiteral: "\u005ct\u005ctwhere dt = '${lastday}'\u005cn"
p2840
tp2841
I1
s(Vinsert
p2842
I40
VQualifiedName: JoinType.LEFT_OUTER_JOIN
p2843
tp2844
I1
s(Vinsert
p2845
I42
VSimpleName: FilterChainImpl
p2846
tp2847
I7
s(Vinsert
p2848
I42
VSimpleName: EvalMethodTest_Elt_1
p2849
tp2850
I1
s(Vinsert
p2851
I42
VSimpleName: setReturning
p2852
tp2853
I4
s(Vinsert
p2854
I42
VSimpleName: remoteAddresses
p2855
tp2856
I1
s(Vinsert
p2857
I42
VSimpleName: aggregate
p2858
tp2859
I4
s(Vinsert
p2860
I45
VStringLiteral: "select 15,'version'"
p2861
tp2862
I1
s(Vinsert
p2863
I43
VSimpleType: SQLDropSequenceStatement
p2864
tp2865
I2
s(Vinsert
p2866
I45
VStringLiteral: "\u005ctEXECUTE IMMEDIATE 'DROP SEQUENCE properties_seq';\u005cn"
p2867
tp2868
I1
s(Vinsert
p2869
I45
VStringLiteral: " OF "
p2870
tp2871
I1
s(Vinsert
p2872
I45
VStringLiteral: "FROM"
p2873
tp2874
I6
s(Vinsert
p2875
I45
VStringLiteral: "  customer_name varchar2(50) NOT NULL,\u005cn"
p2876
tp2877
I1
s(Vinsert
p2878
I45
VStringLiteral: "\u005cn\u005ctlast_name VARCHAR2(10),"
p2879
tp2880
I6
s(Vinsert
p2881
I74
VParameterizedType: List<SQLStatement>
p2882
tp2883
I149
s(Vinsert
p2884
I45
VStringLiteral: "JdbcFetchRowCount"
p2885
tp2886
I1
s(Vinsert
p2887
I45
VStringLiteral: "IPC"
p2888
tp2889
I1
s(Vinsert
p2890
I42
VSimpleName: createUpdateBuilder
p2891
tp2892
I1
s(Vinsert
p2893
I42
VSimpleName: callableStatement_setTime
p2894
tp2895
I1
s(Vinsert
p2896
I42
VSimpleName: block
p2897
tp2898
I21
s(Vinsert
p2899
I42
VSimpleName: druid
p2900
tp2901
I1
s(Vinsert
p2902
I42
VSimpleName: accept
p2903
tp2904
I938
s(Vinsert
p2905
I42
VSimpleName: checkResult
p2906
tp2907
I8
s(Vinsert
p2908
I85
VDimension
p2909
tp2910
I51
s(Vinsert
p2911
I43
VSimpleType: Statement
p2912
tp2913
I30
s(Vinsert
p2914
I42
VSimpleName: PoolableWrapper
p2915
tp2916
I3
s(Vinsert
p2917
I42
VSimpleName: query
p2918
tp2919
I45
s(Vinsert
p2920
I42
VSimpleName: acceptsURL
p2921
tp2922
I3
s(Vinsert
p2923
I42
VSimpleName: item1
p2924
tp2925
I2
s(Vinsert
p2926
I42
VSimpleName: SQLInSubQueryExpr
p2927
tp2928
I4
s(Vinsert
p2929
I42
VSimpleName: getResultSetHoldability
p2930
tp2931
I1
s(Vinsert
p2932
I42
VSimpleName: builtInFunctions
p2933
tp2934
I3
s(Vinsert
p2935
I45
VStringLiteral: "pipe row("
p2936
tp2937
I1
s(Vinsert
p2938
I42
VSimpleName: OdpsListStmt
p2939
tp2940
I3
s(Vinsert
p2941
I45
VStringLiteral: "\u005ctp refcur_pkg.refcur_t\u005cn"
p2942
tp2943
I1
s(Vinsert
p2944
I42
VSimpleName: setLabel
p2945
tp2946
I1
s(Vinsert
p2947
I43
VSimpleType: MySqlOrderingExpr
p2948
tp2949
I2
s(Vinsert
p2950
I40
VQualifiedName: FnvHash.Constants.TYPE
p2951
tp2952
I1
s(Vinsert
p2953
I42
VSimpleName: setSnapshotDate
p2954
tp2955
I1
s(Vinsert
p2956
I34
VNumberLiteral: 20
p2957
tp2958
I2
s(Vinsert
p2959
I45
VStringLiteral: "\u005cn\u005ct(a, b)"
p2960
tp2961
I2
s(Vinsert
p2962
I42
VSimpleName: notificationListener
p2963
tp2964
I2
s(Vinsert
p2965
I42
VSimpleName: SQLException
p2966
tp2967
I159
s(Vinsert
p2968
I42
VSimpleName: getCharacterSet
p2969
tp2970
I1
s(Vinsert
p2971
I45
VStringLiteral: "\u005cn\u005ct\u005ctFROM mytable_01"
p2972
tp2973
I1
s(Vinsert
p2974
I42
VSimpleName: Filter
p2975
tp2976
I6
s(Vinsert
p2977
I45
VStringLiteral: "com.mysql.jdbc.Connection"
p2978
tp2979
I1
s(Vinsert
p2980
I43
VSimpleType: MySqlCreateTableStatement
p2981
tp2982
I5
s(Vinsert
p2983
I42
VSimpleName: exprList
p2984
tp2985
I17
s(Vinsert
p2986
I42
VSimpleName: formatOracle
p2987
tp2988
I1
s(Vinsert
p2989
I45
VStringLiteral: "{ call INTERFACE_DATA_EXTRACTION.INVOICE_INFO(?,?,?)}"
p2990
tp2991
I1
s(Vinsert
p2992
I74
VParameterizedType: Enumeration<TableColumn>
p2993
tp2994
I1
s(Vinsert
p2995
I45
VStringLiteral: "\u005cnselect f0, f1, f2"
p2996
tp2997
I2
s(Vinsert
p2998
I42
VSimpleName: preparedStatement_setFloat
p2999
tp3000
I1
s(Vinsert
p3001
I43
VSimpleType: OdpsSchemaStatVisitor
p3002
tp3003
I6
s(Vinsert
p3004
I42
VSimpleName: withQuery
p3005
tp3006
I6
s(Vinsert
p3007
I42
VSimpleName: SQLCreateViewStatement
p3008
tp3009
I1
s(Vinsert
p3010
I42
VSimpleName: SHARE_UPDATE
p3011
tp3012
I1
s(Vinsert
p3013
I45
VStringLiteral: "\u005ct\u005ctTABLESPACE HASH_TS03\u005cn"
p3014
tp3015
I1
s(Vinsert
p3016
I45
VStringLiteral: "SHOW CREATE PROCEDURE "
p3017
tp3018
I1
s(Vinsert
p3019
I42
VSimpleName: JdbcUtils
p3020
tp3021
I41
s(Vinsert
p3022
I43
VSimpleType: DataSourceProxyImpl
p3023
tp3024
I1
s(Vinsert
p3025
I45
VStringLiteral: " GLOBAL QUERY REWRITE"
p3026
tp3027
I1
s(Vinsert
p3028
I45
VStringLiteral: "\u005ct\u005ctAND v.stage = 'new_order')\u005cn"
p3029
tp3030
I1
s(Vinsert
p3031
I42
VSimpleName: findTableSourceWithColumn
p3032
tp3033
I5
s(Vinsert
p3034
I42
VSimpleName: getJdbcUpdateCount
p3035
tp3036
I1
s(Vinsert
p3037
I45
VStringLiteral: "DATABASE"
p3038
tp3039
I1
s(Vinsert
p3040
I45
VStringLiteral: "illegal property 'druid.minIdle'"
p3041
tp3042
I1
s(Vinsert
p3043
I43
VSimpleType: OracleSelectJoin
p3044
tp3045
I1
s(Vinsert
p3046
I45
VStringLiteral: "\u005cn\u005ctCONSTRAINT PK_customfieldoption PRIMARY KEY (ID)"
p3047
tp3048
I1
s(Vinsert
p3049
I43
VSimpleType: TableSpaceOption
p3050
tp3051
I2
s(Vinsert
p3052
I40
VQualifiedName: com.alibaba.druid.logging.LogFactory
p3053
tp3054
I3
s(Vinsert
p3055
I45
VStringLiteral: "-sql"
p3056
tp3057
I3
s(Vinsert
p3058
I42
VSimpleName: isPublic
p3059
tp3060
I1
s(Vinsert
p3061
I42
VSimpleName: test_execute_2
p3062
tp3063
I1
s(Vinsert
p3064
I42
VSimpleName: setParent
p3065
tp3066
I335
s(Vinsert
p3067
I42
VSimpleName: showKeys
p3068
tp3069
I1
s(Vinsert
p3070
I42
VSimpleName: aliases
p3071
tp3072
I2
s(Vinsert
p3073
I42
VSimpleName: Reference
p3074
tp3075
I4
s(Vinsert
p3076
I45
VStringLiteral: "FROM t"
p3077
tp3078
I1
s(Vinsert
p3079
I42
VSimpleName: thread
p3080
tp3081
I8
s(Vinsert
p3082
I42
VSimpleName: setCreate
p3083
tp3084
I2
s(Vinsert
p3085
I42
VSimpleName: setNoWait
p3086
tp3087
I2
s(Vinsert
p3088
I42
VSimpleName: dao_druid
p3089
tp3090
I1
s(Vinsert
p3091
I45
VStringLiteral: "sa"
p3092
tp3093
I1
s(Vinsert
p3094
I42
VSimpleName: getExecuteLastStartTime
p3095
tp3096
I1
s(Vinsert
p3097
I45
VStringLiteral: "jdbc:log4jdbc:mysql://localhost:8066/test"
p3098
tp3099
I2
s(Vinsert
p3100
I42
VSimpleName: autoCommit
p3101
tp3102
I6
s(Vinsert
p3103
I45
VStringLiteral: "\u005ctCONSTRAINT name5_pk PRIMARY KEY (c_bigint)\u005cn"
p3104
tp3105
I1
s(Vinsert
p3106
I45
VStringLiteral: "\u005cndrop view if exists mytables;"
p3107
tp3108
I1
s(Vinsert
p3109
I45
VStringLiteral: ", actual "
p3110
tp3111
I2
s(Vinsert
p3112
I45
VStringLiteral: "\u005ctSCHEMA VARCHAR(20)\u005cn"
p3113
tp3114
I1
s(Vinsert
p3115
I45
VStringLiteral: "[Ad_Work_Stop_Time] varchar(255) NULL,\u005cn"
p3116
tp3117
I1
s(Vinsert
p3118
I45
VStringLiteral: "\u005cn\u005ct\u005ctCONSTRAINT loc_id_pk PRIMARY KEY,"
p3119
tp3120
I1
s(Vinsert
p3121
I42
VSimpleName: isJoinCondition
p3122
tp3123
I1
s(Vinsert
p3124
I13
VCharacterLiteral: ','
p3125
tp3126
I4
s(Vinsert
p3127
I45
VStringLiteral: "\u005ct) p\u005cn"
p3128
tp3129
I1
s(Vinsert
p3130
I43
VSimpleType: CallableStatement
p3131
tp3132
I4
s(Vinsert
p3133
I42
VSimpleName: b2
p3134
tp3135
I1
s(Vinsert
p3136
I42
VSimpleName: test_formatOracle
p3137
tp3138
I1
s(Vinsert
p3139
I42
VSimpleName: InputStream
p3140
tp3141
I5
s(Vinsert
p3142
I42
VSimpleName: MySqlUpdateTableSource
p3143
tp3144
I1
s(Vinsert
p3145
I43
VSimpleType: PoolableConnection
p3146
tp3147
I6
s(Vinsert
p3148
I42
VSimpleName: getDistinctOn
p3149
tp3150
I1
s(Vinsert
p3151
I42
VSimpleName: QueryPartitionClause
p3152
tp3153
I1
s(Vinsert
p3154
I42
VSimpleName: TeradataASTVisitor
p3155
tp3156
I2
s(Vinsert
p3157
I42
VSimpleName: SchemaResolveVisitor
p3158
tp3159
I2
s(Vinsert
p3160
I42
VSimpleName: endPos
p3161
tp3162
I1
s(Vinsert
p3163
I45
VStringLiteral: "\u005cn/*!40101 SET character_set_client = utf8 */;"
p3164
tp3165
I1
s(Vinsert
p3166
I42
VSimpleName: session
p3167
tp3168
I7
s(Vinsert
p3169
I45
VStringLiteral: "ESCROW"
p3170
tp3171
I1
s(Vinsert
p3172
I42
VSimpleName: partitionsCount
p3173
tp3174
I2
s(Vinsert
p3175
I42
VSimpleName: WallConditionContext
p3176
tp3177
I4
s(Vinsert
p3178
I42
VSimpleName: servlet
p3179
tp3180
I5
s(Vinsert
p3181
I42
VSimpleName: backet
p3182
tp3183
I1
s(Vinsert
p3184
I40
VQualifiedName: Token.HINT
p3185
tp3186
I2
s(Vinsert
p3187
I42
VSimpleName: getItems
p3188
tp3189
I37
s(Vinsert
p3190
I45
VStringLiteral: "ALTER TABLE test_lifecycle"
p3191
tp3192
I1
s(Vinsert
p3193
I45
VStringLiteral: "    AND sample_column_table_name = 'product_0096'\u005cn"
p3194
tp3195
I1
s(Vinsert
p3196
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION ch_t"
p3197
tp3198
I2
s(Vinsert
p3199
I45
VStringLiteral: "select case when f1 = 'aaa' then 1 when f1 = 'bbb' then 2 else 3 end from dual"
p3200
tp3201
I1
s(Vinsert
p3202
I40
VQualifiedName: Token.CHECK
p3203
tp3204
I1
s(Vinsert
p3205
I42
VSimpleName: setDbType
p3206
tp3207
I30
s(Vinsert
p3208
I45
VStringLiteral: "'a' REGEXP '^[a-d]'"
p3209
tp3210
I1
s(Vinsert
p3211
I45
VStringLiteral: "connect by prior EmpId = MgrId"
p3212
tp3213
I1
s(Vinsert
p3214
I45
VStringLiteral: "\u005ct\u005ctTABLESPACE \u005c"NIRVANA1M\u005c"\u005cn"
p3215
tp3216
I1
s(Vinsert
p3217
I42
VSimpleName: getViolations
p3218
tp3219
I14
s(Vinsert
p3220
I45
VStringLiteral: "\u005ctINNER JOIN t1 ON t1.col1 = tt1.col1;"
p3221
tp3222
I1
s(Vinsert
p3223
I45
VStringLiteral: "DROP TABLE T"
p3224
tp3225
I1
s(Vinsert
p3226
I45
VStringLiteral: "/"
p3227
tp3228
I3
s(Vinsert
p3229
I42
VSimpleName: union
p3230
tp3231
I9
s(Vinsert
p3232
I42
VSimpleName: MySqlBlockStatement
p3233
tp3234
I3
s(Vinsert
p3235
I42
VSimpleName: test_system_user2
p3236
tp3237
I1
s(Vinsert
p3238
I45
VStringLiteral: "\u005ct\u005ct\u005ctitem_it\u005cn"
p3239
tp3240
I1
s(Vinsert
p3241
I43
VSimpleType: MySqlUpdateTableSource
p3242
tp3243
I1
s(Vinsert
p3244
I42
VSimpleName: isSibings
p3245
tp3246
I1
s(Vinsert
p3247
I42
VSimpleName: System
p3248
tp3249
I55
s(Vinsert
p3250
I42
VSimpleName: PGSchemaStatVisitor
p3251
tp3252
I58
s(Vinsert
p3253
I43
VSimpleType: OracleLockTableStatement
p3254
tp3255
I1
s(Vinsert
p3256
I42
VSimpleName: methodStat
p3257
tp3258
I7
s(Vinsert
p3259
I42
VSimpleName: executeErrorLastTime
p3260
tp3261
I1
s(Vinsert
p3262
I45
VStringLiteral: "\u005ct\u005ctlateral view explode(t1.os) t2 as os\u005cn"
p3263
tp3264
I1
s(Vinsert
p3265
I45
VStringLiteral: "TYPE"
p3266
tp3267
I1
s(Vinsert
p3268
I42
VSimpleName: DruidXADataSource
p3269
tp3270
I1
s(Vinsert
p3271
I45
VStringLiteral: "\u005ct, c.homepage_url, c.reg_address, c.trade_region, c.trade_region_user, c.reg_capital\u005cn"
p3272
tp3273
I1
s(Vinsert
p3274
I42
VSimpleName: getNumBusyConnectionsDefaultUser
p3275
tp3276
I1
s(Vinsert
p3277
I42
VSimpleName: getTransactionManager
p3278
tp3279
I1
s(Vinsert
p3280
I45
VStringLiteral: "CREATE TABLE customer (a INT, b CHAR (20), INDEX (a));"
p3281
tp3282
I1
s(Vinsert
p3283
I42
VSimpleName: userId
p3284
tp3285
I4
s(Vinsert
p3286
I42
VSimpleName: xaConnection
p3287
tp3288
I3
s(Vinsert
p3289
I42
VSimpleName: queryTimeout
p3290
tp3291
I2
s(Vinsert
p3292
I43
VSimpleType: MockConnection
p3293
tp3294
I9
s(Vinsert
p3295
I42
VSimpleName: SQLPropertyExpr
p3296
tp3297
I61
s(Vinsert
p3298
I43
VSimpleType: SQLNumberExpr
p3299
tp3300
I6
s(Vinsert
p3301
I43
VSimpleType: SQLSetStatement.Option
p3302
tp3303
I1
s(Vinsert
p3304
I45
VStringLiteral: "\u005ctEXECUTE IMMEDIATE 'ALTER SESSION SET SQL_TRACE TRUE';\u005cn"
p3305
tp3306
I1
s(Vinsert
p3307
I45
VStringLiteral: "), 'yyyy-mm-dd HH24:mi:ss')\u005cn"
p3308
tp3309
I1
s(Vinsert
p3310
I42
VSimpleName: LogFactory
p3311
tp3312
I10
s(Vinsert
p3313
I42
VSimpleName: cd
p3314
tp3315
I2
s(Vinsert
p3316
I45
VStringLiteral: "WHERE lng > 0\u005cn"
p3317
tp3318
I2
s(Vinsert
p3319
I45
VStringLiteral: "\u005ctlink STRING,\u005cn"
p3320
tp3321
I1
s(Vinsert
p3322
I42
VSimpleName: isRemoveAbandoned
p3323
tp3324
I1
s(Vinsert
p3325
I42
VSimpleName: getPublicKey
p3326
tp3327
I2
s(Vinsert
p3328
I45
VStringLiteral: "bvt/parser/antlr_grammers_v4_plsql/examples-sql-script/"
p3329
tp3330
I1
s(Vinsert
p3331
I40
VQualifiedName: FnvHash.PRIME
p3332
tp3333
I1
s(Vinsert
p3334
I42
VSimpleName: DB2WallProvider
p3335
tp3336
I2
s(Vinsert
p3337
I42
VSimpleName: sqlStat
p3338
tp3339
I47
s(Vinsert
p3340
I45
VStringLiteral: "select * from person where id = '3'/**/union select 0,1,v from (select 1,2,user/*!() as v*/) a where '1'<>''"
p3341
tp3342
I1
s(Vinsert
p3343
I42
VSimpleName: test_parse
p3344
tp3345
I2
s(Vinsert
p3346
I42
VSimpleName: getCreateErrorCount
p3347
tp3348
I1
s(Vinsert
p3349
I42
VSimpleName: aggregateFunctions
p3350
tp3351
I2
s(Vinsert
p3352
I42
VSimpleName: setByte
p3353
tp3354
I2
s(Vinsert
p3355
I42
VSimpleName: isInMemoryMetadata
p3356
tp3357
I1
s(Vinsert
p3358
I40
VQualifiedName: Token.TO
p3359
tp3360
I2
s(Vinsert
p3361
I42
VSimpleName: addStatement
p3362
tp3363
I1
s(Vinsert
p3364
I45
VStringLiteral: "check partition "
p3365
tp3366
I1
s(Vinsert
p3367
I45
VStringLiteral: "\u005ctWHEN new.job_id <> 'AD_VP'\u005cn"
p3368
tp3369
I1
s(Vinsert
p3370
I45
VStringLiteral: ","
p3371
tp3372
I3
s(Vinsert
p3373
I42
VSimpleName: checkSqlExpr
p3374
tp3375
I2
s(Vinsert
p3376
I45
VStringLiteral: "\u005ctLOGGING\u005cn"
p3377
tp3378
I6
s(Vinsert
p3379
I42
VSimpleName: Number
p3380
tp3381
I10
s(Vinsert
p3382
I45
VStringLiteral: "\u005ct\u005c"CONTROLFILE_INCLUDED\u005c", \u005cn"
p3383
tp3384
I1
s(Vinsert
p3385
I42
VSimpleName: getStartTransactionCount
p3386
tp3387
I2
s(Vinsert
p3388
I42
VSimpleName: MySqlShowKeysStatement
p3389
tp3390
I3
s(Vinsert
p3391
I45
VStringLiteral: "inner join ("
p3392
tp3393
I1
s(Vinsert
p3394
I45
VStringLiteral: "SELECT id, login_name, name, password, salt"
p3395
tp3396
I1
s(Vinsert
p3397
I43
VSimpleType: SQLColumnConstraint
p3398
tp3399
I2
s(Vinsert
p3400
I43
VSimpleType: MultiDataSource
p3401
tp3402
I1
s(Vinsert
p3403
I42
VSimpleName: exprObj
p3404
tp3405
I3
s(Vinsert
p3406
I42
VSimpleName: EvalMethodTest_instr
p3407
tp3408
I1
s(Vinsert
p3409
I40
VQualifiedName: Token.LEAVE
p3410
tp3411
I1
s(Vinsert
p3412
I42
VSimpleName: setInto
p3413
tp3414
I5
s(Vinsert
p3415
I45
VStringLiteral: "SELECT `mtk_p_mg`.`id` AS `id`, `mtk_p_mg`.`gmt_create` AS `gmtCreate`, `mtk_p_mg`.`gmt_modified` AS `gmtModified`, `mtk_p_mg`.`target` AS `target`, `mtk_p_mg`.`msg_id` AS `msgId` , `mtk_p_mg`.`uuid` AS `uuid`, `mtk_p_mg`.`app_key` AS `appKey`, `mtk_p_mg`.`utdid` AS `utdid`, `mtk_p_mg`.`digest` AS `digest`, `mtk_p_mg`.`content` AS `content` , `mtk_p_mg`.`user_info` AS `userInfo`, `mtk_p_mg`.`status` AS `status`, `mtk_p_mg`.`mesg_status` AS `mesgStatus`, `mtk_p_mg`.`start_time` AS `startTime`, `mtk_p_mg`.`expired` AS `expired` , `mtk_p_mg`.`online` AS `online`, `mtk_p_mg`.`gmt_commit` AS `gmtCommit`, `mtk_p_mg`.`extra_info` AS `extraInfo`, `mtk_p_mg`.`auto_commit` AS `autoCommit`, `mtk_p_mg`.`task_id` AS `taskId` , `mtk_p_mg`.`msg_type` AS `msgType`, `mtk_p_mg`.`push_user_token` AS `pushUserToken`, `mtk_p_mg`.`tb_app_device_token` AS `tbAppDeviceToken`, `mtk_p_mg`.`sdk_version` AS `sdkVersion`, `mtk_p_mg`.`biz_ext_info` AS `bizExtInfo` FROM"
p3416
tp3417
I1
s(Vinsert
p3418
I42
VSimpleName: setOutputParameters
p3419
tp3420
I1
s(Vinsert
p3421
I45
VStringLiteral: "alter table sale_detail partition (sale_date='201312', region='hangzhou')"
p3422
tp3423
I1
s(Vinsert
p3424
I45
VStringLiteral: "     END IF;\u005cn"
p3425
tp3426
I1
s(Vinsert
p3427
I45
VStringLiteral: "SPATIAL"
p3428
tp3429
I1
s(Vinsert
p3430
I42
VSimpleName: schema
p3431
tp3432
I9
s(Vinsert
p3433
I40
VQualifiedName: com.alibaba.druid.wall.WallSqlStatValue
p3434
tp3435
I1
s(Vinsert
p3436
I42
VSimpleName: rollbackCount
p3437
tp3438
I1
s(Vinsert
p3439
I42
VSimpleName: ResultSetMetaData
p3440
tp3441
I2
s(Vinsert
p3442
I42
VSimpleName: concat
p3443
tp3444
I1
s(Vinsert
p3445
I74
VParameterizedType: Collection<HMappingColumn>
p3446
tp3447
I1
s(Vinsert
p3448
I45
VStringLiteral: "sys_guid()"
p3449
tp3450
I1
s(Vinsert
p3451
I45
VStringLiteral: "\u005cn\u005ctdepartment_id"
p3452
tp3453
I2
s(Vinsert
p3454
I43
VSimpleType: MySqlLoadDataInFileStatement
p3455
tp3456
I1
s(Vinsert
p3457
I45
VStringLiteral: "10"
p3458
tp3459
I2
s(Vinsert
p3460
I42
VSimpleName: setReferencedTableName
p3461
tp3462
I1
s(Vinsert
p3463
I42
VSimpleName: DB2ASTVisitorAdapter
p3464
tp3465
I1
s(Vinsert
p3466
I45
VStringLiteral: " select * from test t with (nolock)"
p3467
tp3468
I1
s(Vinsert
p3469
I42
VSimpleName: getValidConnectionCheckerClassName
p3470
tp3471
I1
s(Vinsert
p3472
I45
VStringLiteral: "7\u005cn"
p3473
tp3474
I1
s(Vinsert
p3475
I45
VStringLiteral: "organization "
p3476
tp3477
I2
s(Vinsert
p3478
I43
VSimpleType: MySqlRenameTableStatement.Item
p3479
tp3480
I7
s(Vinsert
p3481
I45
VStringLiteral: "\u005ct`c_varchar` varchar(10) DEFAULT 'hello' COMMENT 'varchar',\u005cn"
p3482
tp3483
I2
s(Vinsert
p3484
I42
VSimpleName: x1
p3485
tp3486
I1
s(Vinsert
p3487
I42
VSimpleName: getFilterClassNames
p3488
tp3489
I5
s(Vinsert
p3490
I42
VSimpleName: arguments
p3491
tp3492
I14
s(Vinsert
p3493
I40
VQualifiedName: SQLEvalVisitor.EVAL_ERROR
p3494
tp3495
I8
s(Vinsert
p3496
I42
VSimpleName: PublicKey
p3497
tp3498
I1
s(Vinsert
p3499
I45
VStringLiteral: "\u005cn\u005ctFROM ("
p3500
tp3501
I1
s(Vinsert
p3502
I42
VSimpleName: setHasConstaint
p3503
tp3504
I1
s(Vinsert
p3505
I74
VParameterizedType: ThreadLocal<WallConditionContext>
p3506
tp3507
I1
s(Vinsert
p3508
I42
VSimpleName: getTransactionRegistry
p3509
tp3510
I1
s(Vinsert
p3511
I45
VStringLiteral: "@"
p3512
tp3513
I3
s(Vinsert
p3514
I45
VStringLiteral: "\u005ct\u005c"LOCK_MODE\u005c"\u005cn"
p3515
tp3516
I1
s(Vinsert
p3517
I42
VSimpleName: SQLServerObjectReferenceExpr
p3518
tp3519
I2
s(Vinsert
p3520
I42
VSimpleName: getBlobOpenCount
p3521
tp3522
I3
s(Vinsert
p3523
I45
VStringLiteral: " sort"
p3524
tp3525
I1
s(Vinsert
p3526
I40
VQualifiedName: savePoint.stringVal
p3527
tp3528
I1
s(Vinsert
p3529
I42
VSimpleName: addReadBytesLength
p3530
tp3531
I1
s(Vinsert
p3532
I42
VSimpleName: connection_isClosed
p3533
tp3534
I1
s(Vinsert
p3535
I42
VSimpleName: getCompress
p3536
tp3537
I1
s(Vinsert
p3538
I42
VSimpleName: sessionCount
p3539
tp3540
I2
s(Vinsert
p3541
I45
VStringLiteral: "ConnectionCount_Alive_1_3_Day"
p3542
tp3543
I1
s(Vinsert
p3544
I43
VSimpleType: Map
p3545
tp3546
I38
s(Vinsert
p3547
I42
VSimpleName: isUseLocalSessionState
p3548
tp3549
I2
s(Vinsert
p3550
I45
VStringLiteral: "META-INF/druid-filter-wall-permit-object-mysql.txt"
p3551
tp3552
I1
s(Vinsert
p3553
I42
VSimpleName: logWriter
p3554
tp3555
I1
s(Vinsert
p3556
I42
VSimpleName: mark_bp
p3557
tp3558
I1
s(Vinsert
p3559
I42
VSimpleName: PGMacAddrExpr
p3560
tp3561
I4
s(Vinsert
p3562
I42
VSimpleName: addConfigFilter
p3563
tp3564
I1
s(Vinsert
p3565
I42
VSimpleName: isQueryOnPk
p3566
tp3567
I1
s(Vinsert
p3568
I45
VStringLiteral: "DISABLE"
p3569
tp3570
I1
s(Vinsert
p3571
I42
VSimpleName: getParent
p3572
tp3573
I29
s(Vinsert
p3574
I45
VStringLiteral: "\u005ctON hr_structure\u005cn"
p3575
tp3576
I1
s(Vinsert
p3577
I42
VSimpleName: Log4jImpl
p3578
tp3579
I2
s(Vinsert
p3580
I42
VSimpleName: SQLAllExpr
p3581
tp3582
I2
s(Vinsert
p3583
I42
VSimpleName: transformDecode
p3584
tp3585
I1
s(Vinsert
p3586
I45
VStringLiteral: "effectRowCount"
p3587
tp3588
I1
s(Vinsert
p3589
I42
VSimpleName: DruidDataSourceStatValue
p3590
tp3591
I1
s(Vinsert
p3592
I45
VStringLiteral: "\u005cnPARTITION BY HASH (YEAR(hired)) PARTITIONS 4"
p3593
tp3594
I1
s(Vinsert
p3595
I42
VSimpleName: noLoggingImpl
p3596
tp3597
I8
s(Vinsert
p3598
I42
VSimpleName: FrameworkConfig
p3599
tp3600
I1
s(Vinsert
p3601
I42
VSimpleName: relationships
p3602
tp3603
I2
s(Vinsert
p3604
I40
VQualifiedName: type.name_lcase
p3605
tp3606
I1
s(Vinsert
p3607
I42
VSimpleName: setSelectUnionCheck
p3608
tp3609
I3
s(Vinsert
p3610
I43
VSimpleType: SQLServerSetStatement
p3611
tp3612
I1
s(Vinsert
p3613
I45
VStringLiteral: "\u005cn\u005ctDISCARD PARTITION p1"
p3614
tp3615
I1
s(Vinsert
p3616
I42
VSimpleName: hint
p3617
tp3618
I22
s(Vinsert
p3619
I45
VStringLiteral: "\u005ct\u005ctPCTFREE 10\u005cn"
p3620
tp3621
I2
s(Vinsert
p3622
I42
VSimpleName: rowCount
p3623
tp3624
I9
s(Vinsert
p3625
I42
VSimpleName: numExpr
p3626
tp3627
I1
s(Vinsert
p3628
I40
VQualifiedName: JdbcUtils.ELASTIC_SEARCH
p3629
tp3630
I1
s(Vinsert
p3631
I42
VSimpleName: CompositeType
p3632
tp3633
I2
s(Vinsert
p3634
I43
VSimpleType: ProfileEntryReqStat
p3635
tp3636
I1
s(Vinsert
p3637
I40
VQualifiedName: Token.WHERE
p3638
tp3639
I7
s(Vinsert
p3640
I42
VSimpleName: loadDriverClass
p3641
tp3642
I1
s(Vinsert
p3643
I42
VSimpleName: headHints
p3644
tp3645
I1
s(Vinsert
p3646
I45
VStringLiteral: " NO_WAIT"
p3647
tp3648
I1
s(Vinsert
p3649
I42
VSimpleName: desens_Sql
p3650
tp3651
I1
s(Vinsert
p3652
I42
VSimpleName: printContents
p3653
tp3654
I2
s(Vinsert
p3655
I42
VSimpleName: createView
p3656
tp3657
I1
s(Vinsert
p3658
I43
VSimpleType: SQLServerColumnDefinition.Identity
p3659
tp3660
I2
s(Vinsert
p3661
I42
VSimpleName: dropCount
p3662
tp3663
I3
s(Vinsert
p3664
I42
VSimpleName: getJdbcCommitCount
p3665
tp3666
I1
s(Vinsert
p3667
I42
VSimpleName: getOrderBy
p3668
tp3669
I11
s(Vinsert
p3670
I42
VSimpleName: getUrl
p3671
tp3672
I11
s(Vinsert
p3673
I45
VStringLiteral: "-s2"
p3674
tp3675
I1
s(Vinsert
p3676
I45
VStringLiteral: "/*!40101fff*/ select * from t"
p3677
tp3678
I1
s(Vinsert
p3679
I42
VSimpleName: doTran1
p3680
tp3681
I1
s(Vinsert
p3682
I42
VSimpleName: PreparedStatementPool
p3683
tp3684
I2
s(Vinsert
p3685
I45
VStringLiteral: "\u005cninsert overwrite table b partition(ds='20150711')"
p3686
tp3687
I1
s(Vinsert
p3688
I45
VStringLiteral: "\u005ctCONSTRAINT id_pk PRIMARY KEY (emp_id) RELY DIABLE NOVALIDATE\u005cn"
p3689
tp3690
I1
s(Vinsert
p3691
I45
VStringLiteral: "\u005ct\u005ctWHERE employees.employee_id = increase_comm.employee_id;\u005cn"
p3692
tp3693
I1
s(Vinsert
p3694
I40
VQualifiedName: ConditionType.SQLSTATE
p3695
tp3696
I2
s(Vinsert
p3697
I45
VStringLiteral: " INDEX `changed_index` (`changed`)"
p3698
tp3699
I1
s(Vinsert
p3700
I42
VSimpleName: getGroup
p3701
tp3702
I1
s(Vinsert
p3703
I45
VStringLiteral: "CREATE VIEW emp_view\u005cn"
p3704
tp3705
I1
s(Vinsert
p3706
I45
VStringLiteral: "from acct_user user0_ "
p3707
tp3708
I1
s(Vinsert
p3709
I40
VQualifiedName: JdbcConstants.HIVE
p3710
tp3711
I6
s(Vinsert
p3712
I42
VSimpleName: JdbcUtilsTest_for_odps
p3713
tp3714
I1
s(Vinsert
p3715
I42
VSimpleName: selectLimit
p3716
tp3717
I4
s(Vinsert
p3718
I43
VSimpleType: OdpsInsert
p3719
tp3720
I1
s(Vinsert
p3721
I42
VSimpleName: purge
p3722
tp3723
I1
s(Vinsert
p3724
I45
VStringLiteral: ") Mod\u005cn"
p3725
tp3726
I1
s(Vinsert
p3727
I45
VStringLiteral: "CREATE OR REPLACE TYPE histogram_entry_type AUTHID CURRENT_USER AS OBJECT (\u005cn"
p3728
tp3729
I1
s(Vinsert
p3730
I42
VSimpleName: loadResource
p3731
tp3732
I12
s(Vinsert
p3733
I42
VSimpleName: test_now
p3734
tp3735
I1
s(Vinsert
p3736
I42
VSimpleName: createTables
p3737
tp3738
I1
s(Vinsert
p3739
I42
VSimpleName: reusePreparedStatement
p3740
tp3741
I2
s(Vinsert
p3742
I45
VStringLiteral: " as "
p3743
tp3744
I1
s(Vinsert
p3745
I42
VSimpleName: WallContext
p3746
tp3747
I19
s(Vinsert
p3748
I42
VSimpleName: MySqlShowVariantsStatement
p3749
tp3750
I3
s(Vinsert
p3751
I42
VSimpleName: getDenseRank
p3752
tp3753
I1
s(Vinsert
p3754
I45
VStringLiteral: "\u005ct\u005ctLOGGING\u005cn"
p3755
tp3756
I2
s(Vinsert
p3757
I40
VQualifiedName: com.alibaba.druid.sql.visitor.SQLASTVisitor
p3758
tp3759
I1
s(Vinsert
p3760
I42
VSimpleName: parseWith
p3761
tp3762
I3
s(Vinsert
p3763
I45
VStringLiteral: "\u005cn\u005ctPARTITION p1 VALUES LESS THAN (1996),"
p3764
tp3765
I1
s(Vinsert
p3766
I43
VSimpleType: Boolean
p3767
tp3768
I8
s(Vinsert
p3769
I42
VSimpleName: BlowfishDecrypter
p3770
tp3771
I2
s(Vinsert
p3772
I45
VStringLiteral: "\u005cn\u005ctFROM (SELECT *"
p3773
tp3774
I1
s(Vinsert
p3775
I42
VSimpleName: methodName
p3776
tp3777
I14
s(Vinsert
p3778
I45
VStringLiteral: "GROUP BY seller_no, invoice_date\u005cn"
p3779
tp3780
I1
s(Vinsert
p3781
I42
VSimpleName: sql
p3782
tp3783
I798
s(Vinsert
p3784
I42
VSimpleName: alwayTrueCheck
p3785
tp3786
I2
s(Vinsert
p3787
I42
VSimpleName: ReentrantReadWriteLock
p3788
tp3789
I1
s(Vinsert
p3790
I43
VSimpleType: DruidStatProperties
p3791
tp3792
I1
s(Vinsert
p3793
I42
VSimpleName: validConnectionChecker
p3794
tp3795
I8
s(Vinsert
p3796
I42
VSimpleName: test_bug
p3797
tp3798
I1
s(Vinsert
p3799
I42
VSimpleName: jdbcTemplate
p3800
tp3801
I1
s(Vinsert
p3802
I40
VQualifiedName: Types.DECIMAL
p3803
tp3804
I1
s(Vinsert
p3805
I42
VSimpleName: fk
p3806
tp3807
I9
s(Vinsert
p3808
I45
VStringLiteral: "CREATE TRIGGER \u005c"AO_4AEACD_WEBHOOK_D367380484\u005c""
p3809
tp3810
I2
s(Vinsert
p3811
I42
VSimpleName: findSelectItem
p3812
tp3813
I2
s(Vinsert
p3814
I45
VStringLiteral: "DEFAULT DIRECTORY "
p3815
tp3816
I1
s(Vinsert
p3817
I45
VStringLiteral: "\u005ctFROM mod_period_time\u005cn"
p3818
tp3819
I1
s(Vinsert
p3820
I45
VStringLiteral: "\u005ctINITIAL 2097152\u005cn"
p3821
tp3822
I1
s(Vinsert
p3823
I34
VNumberLiteral: 10
p3824
tp3825
I33
s(Vinsert
p3826
I45
VStringLiteral: "partition by range(c3)\u005cn"
p3827
tp3828
I1
s(Vinsert
p3829
I42
VSimpleName: setPasswordCallbackClassName
p3830
tp3831
I2
s(Vinsert
p3832
I45
VStringLiteral: "\u005ct\u005ct\u005ctgroup by prov\u005cn"
p3833
tp3834
I1
s(Vinsert
p3835
I42
VSimpleName: SQLAnyExpr
p3836
tp3837
I3
s(Vinsert
p3838
I42
VSimpleName: destTableName
p3839
tp3840
I1
s(Vinsert
p3841
I34
VNumberLiteral: 50000
p3842
tp3843
I2
s(Vinsert
p3844
I42
VSimpleName: JFrame
p3845
tp3846
I1
s(Vinsert
p3847
I42
VSimpleName: proxy
p3848
tp3849
I3
s(Vinsert
p3850
I45
VStringLiteral: "SELECT name FROM master..syslogins WHERE sysadmin = \u20191\u2032 "
p3851
tp3852
I1
s(Vinsert
p3853
I45
VStringLiteral: "VIEW "
p3854
tp3855
I1
s(Vinsert
p3856
I40
VQualifiedName: Token.MAXTRANS
p3857
tp3858
I3
s(Vinsert
p3859
I42
VSimpleName: ygc
p3860
tp3861
I1
s(Vinsert
p3862
I45
VStringLiteral: "\u005cn\u005ctpromo_end_date DATE,"
p3863
tp3864
I2
s(Vinsert
p3865
I42
VSimpleName: WallUtils
p3866
tp3867
I19
s(Vinsert
p3868
I42
VSimpleName: Properties
p3869
tp3870
I19
s(Vinsert
p3871
I42
VSimpleName: containsAlias
p3872
tp3873
I1
s(Vinsert
p3874
I42
VSimpleName: JdbcParameterDecimal
p3875
tp3876
I1
s(Vinsert
p3877
I45
VStringLiteral: ", ?, ?, NULL, NULL, NULL\u005cn"
p3878
tp3879
I1
s(Vinsert
p3880
I43
VSimpleType: PGSelectStatement
p3881
tp3882
I7
s(Vinsert
p3883
I43
VSimpleType: UserSpecification
p3884
tp3885
I1
s(Vinsert
p3886
I45
VStringLiteral: " RELY"
p3887
tp3888
I1
s(Vinsert
p3889
I43
VSimpleType: SQLServerRollbackStatement
p3890
tp3891
I1
s(Vinsert
p3892
I45
VStringLiteral: "\u005cna.shop_name,"
p3893
tp3894
I1
s(Vinsert
p3895
I42
VSimpleName: setConnectedTimeNano
p3896
tp3897
I2
s(Vinsert
p3898
I42
VSimpleName: isConstArithmetic
p3899
tp3900
I1
s(Vinsert
p3901
I40
VQualifiedName: com.alibaba.druid.sql.ast.statement.SQLInsertStatement.ValuesClause
p3902
tp3903
I1
s(Vinsert
p3904
I74
VParameterizedType: LinkedHashMap<Integer,Object>
p3905
tp3906
I1
s(Vinsert
p3907
I40
VQualifiedName: com.alibaba.druid.util.HexBin
p3908
tp3909
I2
s(Vinsert
p3910
I42
VSimpleName: PGFunctionTableSource
p3911
tp3912
I1
s(Vinsert
p3913
I45
VStringLiteral: "\u005cn\u005ctREMOVE PARTITIONING"
p3914
tp3915
I1
s(Vinsert
p3916
I42
VSimpleName: FileWriter
p3917
tp3918
I1
s(Vinsert
p3919
I40
VQualifiedName: SQLJoinTableSource.JoinType.CROSS_APPLY
p3920
tp3921
I1
s(Vinsert
p3922
I42
VSimpleName: getConnectErrorCount
p3923
tp3924
I2
s(Vinsert
p3925
I42
VSimpleName: OracleUpdateSetValueClause
p3926
tp3927
I1
s(Vinsert
p3928
I42
VSimpleName: endTimeMillis
p3929
tp3930
I5
s(Vinsert
p3931
I42
VSimpleName: WallSqlStat
p3932
tp3933
I10
s(Vinsert
p3934
I42
VSimpleName: getExternalDirectory
p3935
tp3936
I1
s(Vinsert
p3937
I34
VNumberLiteral: 3
p3938
tp3939
I19
s(Vinsert
p3940
I42
VSimpleName: setType
p3941
tp3942
I12
s(Vinsert
p3943
I42
VSimpleName: EvalMethodRandom
p3944
tp3945
I1
s(Vinsert
p3946
I45
VStringLiteral: " comment "
p3947
tp3948
I1
s(Vinsert
p3949
I74
VParameterizedType: AtomicLongFieldUpdater<JdbcSqlStat>
p3950
tp3951
I2
s(Vinsert
p3952
I42
VSimpleName: MySqlSQLColumnDefinition
p3953
tp3954
I2
s(Vinsert
p3955
I45
VStringLiteral: " MAXVALUE "
p3956
tp3957
I1
s(Vinsert
p3958
I43
VSimpleType: SQLStartTransactionStatement
p3959
tp3960
I3
s(Vinsert
p3961
I43
VSimpleType: WindowClause
p3962
tp3963
I1
s(Vinsert
p3964
I42
VSimpleName: createStatement
p3965
tp3966
I35
s(Vinsert
p3967
I45
VStringLiteral: "SHOW CREATE TABLE tblname"
p3968
tp3969
I1
s(Vinsert
p3970
I45
VStringLiteral: "                            1\u005cn"
p3971
tp3972
I2
s(Vinsert
p3973
I42
VSimpleName: getColumnName
p3974
tp3975
I5
s(Vinsert
p3976
I45
VStringLiteral: "-ds"
p3977
tp3978
I2
s(Vinsert
p3979
I45
VStringLiteral: "org.osjava.sj.SimpleContextFactory"
p3980
tp3981
I1
s(Vinsert
p3982
I42
VSimpleName: addSortedByItem
p3983
tp3984
I3
s(Vinsert
p3985
I42
VSimpleName: servletConfig
p3986
tp3987
I1
s(Vinsert
p3988
I42
VSimpleName: setReturnStatus
p3989
tp3990
I1
s(Vinsert
p3991
I45
VStringLiteral: "exchange_market_info"
p3992
tp3993
I2
s(Vinsert
p3994
I42
VSimpleName: option2
p3995
tp3996
I2
s(Vinsert
p3997
I45
VStringLiteral: " BETWEEN "
p3998
tp3999
I1
s(Vinsert
p4000
I40
VQualifiedName: Token.FIRST
p4001
tp4002
I2
s(Vinsert
p4003
I42
VSimpleName: keepAliveCheckCount
p4004
tp4005
I2
s(Vinsert
p4006
I42
VSimpleName: take
p4007
tp4008
I2
s(Vinsert
p4009
I43
VSimpleType: SQLHexExpr
p4010
tp4011
I4
s(Vinsert
p4012
I45
VStringLiteral: "\u005cn\u005ctFOR EACH ROW"
p4013
tp4014
I2
s(Vinsert
p4015
I34
VNumberLiteral: 29276
p4016
tp4017
I1
s(Vinsert
p4018
I42
VSimpleName: createCount
p4019
tp4020
I4
s(Vinsert
p4021
I42
VSimpleName: lowerTable
p4022
tp4023
I1
s(Vinsert
p4024
I45
VStringLiteral: "\u005ctdatestamp STRING\u005cn"
p4025
tp4026
I1
s(Vinsert
p4027
I42
VSimpleName: setIndexName
p4028
tp4029
I3
s(Vinsert
p4030
I42
VSimpleName: SQLForeignKeyImpl
p4031
tp4032
I1
s(Vinsert
p4033
I45
VStringLiteral: "limit 800"
p4034
tp4035
I1
s(Vinsert
p4036
I42
VSimpleName: findById
p4037
tp4038
I2
s(Vinsert
p4039
I43
VSimpleType: MySqlUnique
p4040
tp4041
I3
s(Vinsert
p4042
I42
VSimpleName: SQLExprImpl
p4043
tp4044
I2
s(Vinsert
p4045
I42
VSimpleName: tr
p4046
tp4047
I1
s(Vinsert
p4048
I42
VSimpleName: OdpsValuesTableSource
p4049
tp4050
I1
s(Vinsert
p4051
I45
VStringLiteral: " := "
p4052
tp4053
I2
s(Vinsert
p4054
I45
VStringLiteral: "\u005cn\u005ct\u005ct\u005ct\u005ct)"
p4055
tp4056
I1
s(Vinsert
p4057
I45
VStringLiteral: "\u005ctPCTTHRESHOLD 10"
p4058
tp4059
I1
s(Vinsert
p4060
I45
VStringLiteral: "\u005ctIF :new.id IS NULL THEN\u005cn"
p4061
tp4062
I1
s(Vinsert
p4063
I54
VTryStatement
p4064
tp4065
I158
s(Vinsert
p4066
I45
VStringLiteral: " ("
p4067
tp4068
I4
s(Vinsert
p4069
I42
VSimpleName: setMaxPoolPreparedStatementPerConnectionSize
p4070
tp4071
I3
s(Vinsert
p4072
I43
VSimpleType: SQLLimit
p4073
tp4074
I4
s(Vinsert
p4075
I45
VStringLiteral: "delete force all partitions car_tt\u005cn"
p4076
tp4077
I1
s(Vinsert
p4078
I45
VStringLiteral: "RESTART"
p4079
tp4080
I1
s(Vinsert
p4081
I45
VStringLiteral: "*"
p4082
tp4083
I5
s(Vinsert
p4084
I42
VSimpleName: duplicateKeyUpdate
p4085
tp4086
I2
s(Vinsert
p4087
I42
VSimpleName: isTopNoneFromSelect
p4088
tp4089
I3
s(Vinsert
p4090
I34
VNumberLiteral: 19
p4091
tp4092
I2
s(Vinsert
p4093
I40
VQualifiedName: ErrorCode.UPDATE_NOT_ALLOW
p4094
tp4095
I1
s(Vinsert
p4096
I42
VSimpleName: B
p4097
tp4098
I1
s(Vinsert
p4099
I45
VStringLiteral: "\u005ctTYPE VARCHAR(20),\u005cn"
p4100
tp4101
I1
s(Vinsert
p4102
I42
VSimpleName: Object
p4103
tp4104
I194
s(Vinsert
p4105
I42
VSimpleName: main
p4106
tp4107
I1
s(Vinsert
p4108
I42
VSimpleName: validate
p4109
tp4110
I2
s(Vinsert
p4111
I43
VSimpleType: RSAPublicKey
p4112
tp4113
I1
s(Vinsert
p4114
I45
VStringLiteral: "select * from t where age > 100"
p4115
tp4116
I1
s(Vinsert
p4117
I43
VSimpleType: PhoenixSchemaStatVisitor
p4118
tp4119
I1
s(Vinsert
p4120
I40
VQualifiedName: Token.DISTINCT
p4121
tp4122
I3
s(Vinsert
p4123
I42
VSimpleName: SQLBuilderFactory
p4124
tp4125
I2
s(Vinsert
p4126
I42
VSimpleName: getRelationships
p4127
tp4128
I13
s(Vinsert
p4129
I42
VSimpleName: transactionIsolation
p4130
tp4131
I1
s(Vinsert
p4132
I42
VSimpleName: OracleHint
p4133
tp4134
I4
s(Vinsert
p4135
I42
VSimpleName: getActiveCount
p4136
tp4137
I8
s(Vinsert
p4138
I45
VStringLiteral: "depth"
p4139
tp4140
I1
s(Vinsert
p4141
I43
VSimpleType: MySqlIntervalExpr
p4142
tp4143
I3
s(Vinsert
p4144
I42
VSimpleName: conditionSql
p4145
tp4146
I3
s(Vinsert
p4147
I45
VStringLiteral: "filters"
p4148
tp4149
I2
s(Vinsert
p4150
I42
VSimpleName: JdbcTemplate
p4151
tp4152
I1
s(Vinsert
p4153
I45
VStringLiteral: "\u005cn\u005ctPARTITION p0 VALUES LESS THAN (1991),"
p4154
tp4155
I1
s(Vinsert
p4156
I42
VSimpleName: Record
p4157
tp4158
I1
s(Vinsert
p4159
I43
VSimpleType: TableColumn
p4160
tp4161
I1
s(Vinsert
p4162
I42
VSimpleName: addUndoFile
p4163
tp4164
I1
s(Vinsert
p4165
I45
VStringLiteral: "INSTR"
p4166
tp4167
I1
s(Vinsert
p4168
I45
VStringLiteral: "t_like_count"
p4169
tp4170
I2
s(Vinsert
p4171
I42
VSimpleName: EvalMethodTrimTest
p4172
tp4173
I1
s(Vinsert
p4174
I42
VSimpleName: normalizedOwner
p4175
tp4176
I3
s(Vinsert
p4177
I45
VStringLiteral: "delete none condition not allow"
p4178
tp4179
I1
s(Vinsert
p4180
I42
VSimpleName: setTableSource
p4181
tp4182
I13
s(Vinsert
p4183
I45
VStringLiteral: "                select Distinct t.cunit_code"
p4184
tp4185
I1
s(Vinsert
p4186
I42
VSimpleName: elseIf
p4187
tp4188
I4
s(Vinsert
p4189
I42
VSimpleName: explainToSelectSQLObject
p4190
tp4191
I1
s(Vinsert
p4192
I42
VSimpleName: getMappedStatement
p4193
tp4194
I1
s(Vinsert
p4195
I42
VSimpleName: test_length
p4196
tp4197
I2
s(Vinsert
p4198
I42
VSimpleName: fail
p4199
tp4200
I1
s(Vinsert
p4201
I43
VSimpleType: MySqlSetNamesStatement
p4202
tp4203
I2
s(Vinsert
p4204
I42
VSimpleName: SQLExpr
p4205
tp4206
I226
s(Vinsert
p4207
I42
VSimpleName: x_a
p4208
tp4209
I1
s(Vinsert
p4210
I43
VSimpleType: OracleSelectSubqueryTableSource
p4211
tp4212
I1
s(Vinsert
p4213
I42
VSimpleName: getPermitNames
p4214
tp4215
I6
s(Vinsert
p4216
I42
VSimpleName: features
p4217
tp4218
I10
s(Vinsert
p4219
I45
VStringLiteral: "\u005cnFROM t"
p4220
tp4221
I2
s(Vinsert
p4222
I45
VStringLiteral: " NOSORT"
p4223
tp4224
I1
s(Vinsert
p4225
I45
VStringLiteral: "\u005ctKEY `k_b` (`c_smallint`),\u005cn"
p4226
tp4227
I1
s(Vinsert
p4228
I43
VSimpleType: LocalXAConnectionFactory
p4229
tp4230
I1
s(Vinsert
p4231
I42
VSimpleName: registry
p4232
tp4233
I2
s(Vinsert
p4234
I45
VStringLiteral: "\u005ct\u005ctwhere ds = 20170627\u005cn"
p4235
tp4236
I1
s(Vinsert
p4237
I45
VStringLiteral: "WHERE `team_type` = 'normal' AND 1 = 1 AND `city_id` IN (0,10)"
p4238
tp4239
I1
s(Vinsert
p4240
I42
VSimpleName: HiveCreateTableStatement
p4241
tp4242
I2
s(Vinsert
p4243
I42
VSimpleName: hasNext
p4244
tp4245
I3
s(Vinsert
p4246
I42
VSimpleName: name_lower
p4247
tp4248
I3
s(Vinsert
p4249
I42
VSimpleName: xmlPath
p4250
tp4251
I3
s(Vinsert
p4252
I45
VStringLiteral: "STORAGE (\u005cn"
p4253
tp4254
I13
s(Vinsert
p4255
I45
VStringLiteral: "where not (tt.os = 'all'\u005cn"
p4256
tp4257
I1
s(Vinsert
p4258
I42
VSimpleName: moveToCurrentRow
p4259
tp4260
I1
s(Vinsert
p4261
I43
VSimpleType: HBQLStatementParser
p4262
tp4263
I1
s(Vinsert
p4264
I42
VSimpleName: WallCheckResult
p4265
tp4266
I17
s(Vinsert
p4267
I42
VSimpleName: lastResultSetError
p4268
tp4269
I2
s(Vinsert
p4270
I45
VStringLiteral: "WHERE s.scope='PRJ'"
p4271
tp4272
I1
s(Vinsert
p4273
I42
VSimpleName: name_lcase
p4274
tp4275
I9
s(Vinsert
p4276
I42
VSimpleName: leftResult
p4277
tp4278
I4
s(Vinsert
p4279
I42
VSimpleName: queryForList
p4280
tp4281
I2
s(Vinsert
p4282
I42
VSimpleName: getStatementLoggerName
p4283
tp4284
I1
s(Vinsert
p4285
I45
VStringLiteral: "LINK"
p4286
tp4287
I1
s(Vinsert
p4288
I42
VSimpleName: readAndResetComments
p4289
tp4290
I9
s(Vinsert
p4291
I42
VSimpleName: adapter
p4292
tp4293
I9
s(Vinsert
p4294
I42
VSimpleName: getConstraintName
p4295
tp4296
I3
s(Vinsert
p4297
I45
VStringLiteral: ";"
p4298
tp4299
I1
s(Vinsert
p4300
I42
VSimpleName: SQLBinaryOpExpr
p4301
tp4302
I79
s(Vinsert
p4303
I42
VSimpleName: mbeanServer
p4304
tp4305
I6
s(Vinsert
p4306
I42
VSimpleName: test_getInitStackTrace
p4307
tp4308
I1
s(Vinsert
p4309
I42
VSimpleName: SpringMethodStatValue
p4310
tp4311
I2
s(Vinsert
p4312
I83
VModifier: static
p4313
tp4314
I43
s(Vinsert
p4315
I42
VSimpleName: toString
p4316
tp4317
I63
s(Vinsert
p4318
I45
VStringLiteral: "deprecation"
p4319
tp4320
I1
s(Vinsert
p4321
I45
VStringLiteral: "DROP TABLE a PURGE ;"
p4322
tp4323
I1
s(Vinsert
p4324
I45
VStringLiteral: "SNAP_ID"
p4325
tp4326
I1
s(Vinsert
p4327
I45
VStringLiteral: "select 1 from t1"
p4328
tp4329
I1
s(Vinsert
p4330
I74
VParameterizedType: Class<T>
p4331
tp4332
I1
s(Vinsert
p4333
I42
VSimpleName: JdbcParameter
p4334
tp4335
I4
s(Vinsert
p4336
I45
VStringLiteral: "ALTER TABLE project_measures\u005cn"
p4337
tp4338
I1
s(Vinsert
p4339
I45
VStringLiteral: "\u005cnWHERE (c1, c2, c3) IN ((1, 2, 3), (4, 5, 6))"
p4340
tp4341
I1
s(Vinsert
p4342
I45
VStringLiteral: "abcdefg"
p4343
tp4344
I1
s(Vinsert
p4345
I42
VSimpleName: executeTimeNano
p4346
tp4347
I1
s(Vinsert
p4348
I42
VSimpleName: updateSetItem
p4349
tp4350
I2
s(Vinsert
p4351
I43
VSimpleType: DruidXADataSource
p4352
tp4353
I1
s(Vinsert
p4354
I42
VSimpleName: formatedText
p4355
tp4356
I1
s(Vinsert
p4357
I42
VSimpleName: tab
p4358
tp4359
I2
s(Vinsert
p4360
I43
VSimpleType: SQLSubPartition
p4361
tp4362
I3
s(Vinsert
p4363
I42
VSimpleName: emptySet
p4364
tp4365
I1
s(Vinsert
p4366
I42
VSimpleName: setMaxEvictableIdleTimeMillis
p4367
tp4368
I2
s(Vinsert
p4369
I45
VStringLiteral: "select * from a"
p4370
tp4371
I1
s(Vinsert
p4372
I13
VCharacterLiteral: '\u005c''
p4373
tp4374
I12
s(Vinsert
p4375
I45
VStringLiteral: "\u005cn\u005ctpart_no NUMBER"
p4376
tp4377
I2
s(Vinsert
p4378
I40
VQualifiedName: SQLParserFeature.EnableSQLBinaryOpExprGroup
p4379
tp4380
I1
s(Vinsert
p4381
I45
VStringLiteral: "\u005ct`c_timestamp` timestamp NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'timestamp',\u005cn"
p4382
tp4383
I2
s(Vinsert
p4384
I42
VSimpleName: getLocalPartitions
p4385
tp4386
I1
s(Vinsert
p4387
I45
VStringLiteral: "\u005cnWHERE name LIKE ?"
p4388
tp4389
I1
s(Vinsert
p4390
I42
VSimpleName: StatementConverter
p4391
tp4392
I1
s(Vinsert
p4393
I42
VSimpleName: acceptIdentifier
p4394
tp4395
I32
s(Vinsert
p4396
I45
VStringLiteral: "CREATE TABLE IF NOT EXISTS test_site_data_select_111\u005cn"
p4397
tp4398
I1
s(Vinsert
p4399
I45
VStringLiteral: "uid"
p4400
tp4401
I1
s(Vinsert
p4402
I43
VSimpleType: PGLexer
p4403
tp4404
I2
s(Vinsert
p4405
I42
VSimpleName: getArray
p4406
tp4407
I1
s(Vinsert
p4408
I42
VSimpleName: getTypeName
p4409
tp4410
I4
s(Vinsert
p4411
I42
VSimpleName: setConnectErrorCount
p4412
tp4413
I1
s(Vinsert
p4414
I42
VSimpleName: exportParameter
p4415
tp4416
I2
s(Vinsert
p4417
I45
VStringLiteral: "  UNIQUE KEY `uk_a` (`c_varchar`,`c_mediumint`),\u005cn"
p4418
tp4419
I1
s(Vinsert
p4420
I45
VStringLiteral: "SELECT * from city_list where 2 = case when 2=1 then 1 else 2 END"
p4421
tp4422
I1
s(Vinsert
p4423
I42
VSimpleName: setDomain
p4424
tp4425
I1
s(Vinsert
p4426
I42
VSimpleName: denyCountUpdater
p4427
tp4428
I1
s(Vinsert
p4429
I42
VSimpleName: InvocationTargetException
p4430
tp4431
I1
s(Vinsert
p4432
I42
VSimpleName: createMetaDataId
p4433
tp4434
I2
s(Vinsert
p4435
I43
VSimpleType: DruidPooledPreparedStatement
p4436
tp4437
I5
s(Vinsert
p4438
I45
VStringLiteral: "\u005cnselect 2 from t2"
p4439
tp4440
I1
s(Vinsert
p4441
I45
VStringLiteral: "\u005ct\u005ctOR M.CERTIFICATE LIKE ('%' || ? || '%')\u005cn"
p4442
tp4443
I1
s(Vinsert
p4444
I42
VSimpleName: columnIndex
p4445
tp4446
I10
s(Vinsert
p4447
I45
VStringLiteral: "OUTPUT"
p4448
tp4449
I1
s(Vinsert
p4450
I45
VStringLiteral: "\u005ct, TOTAL_CASH, NOT_CONFIRMED, PRE_RECEIVED, NOT_RECEIVED, CONTRACT_DATE\u005cn"
p4451
tp4452
I1
s(Vinsert
p4453
I42
VSimpleName: AtomicLongFieldUpdater
p4454
tp4455
I11
s(Vinsert
p4456
I43
VSimpleType: MySqlLoopStatement
p4457
tp4458
I2
s(Vinsert
p4459
I42
VSimpleName: serverUrl
p4460
tp4461
I1
s(Vinsert
p4462
I45
VStringLiteral: "CREATE TABLE foo (fooid int, foosubid int, fooname text);"
p4463
tp4464
I1
s(Vinsert
p4465
I42
VSimpleName: isRemoved
p4466
tp4467
I2
s(Vinsert
p4468
I45
VStringLiteral: "\u005ct`c_mediumtext` mediumtext COMMENT 'mediumtext',\u005cn"
p4469
tp4470
I3
s(Vinsert
p4471
I45
VStringLiteral: "show create table "
p4472
tp4473
I1
s(Vinsert
p4474
I45
VStringLiteral: "dt"
p4475
tp4476
I1
s(Vinsert
p4477
I45
VStringLiteral: "Could not retrieve transation read-only status server"
p4478
tp4479
I2
s(Vinsert
p4480
I42
VSimpleName: getMaxExtents
p4481
tp4482
I1
s(Vinsert
p4483
I42
VSimpleName: Statement
p4484
tp4485
I31
s(Vinsert
p4486
I42
VSimpleName: trim_option
p4487
tp4488
I3
s(Vinsert
p4489
I45
VStringLiteral: "GRANT OPTION"
p4490
tp4491
I1
s(Vinsert
p4492
I42
VSimpleName: validIps
p4493
tp4494
I1
s(Vinsert
p4495
I43
VSimpleType: XAResource
p4496
tp4497
I3
s(Vinsert
p4498
I42
VSimpleName: withAlias
p4499
tp4500
I1
s(Vinsert
p4501
I42
VSimpleName: setTenantColumn
p4502
tp4503
I8
s(Vinsert
p4504
I42
VSimpleName: getShort
p4505
tp4506
I1
s(Vinsert
p4507
I45
VStringLiteral: "\u005ct\u005c"ID\u005c", \u005cn"
p4508
tp4509
I1
s(Vinsert
p4510
I42
VSimpleName: OracleSelectParser
p4511
tp4512
I4
s(Vinsert
p4513
I40
VQualifiedName: com.mysql.jdbc.Connection
p4514
tp4515
I5
s(Vinsert
p4516
I43
VSimpleType: MonitorContext
p4517
tp4518
I1
s(Vinsert
p4519
I42
VSimpleName: partitionName
p4520
tp4521
I1
s(Vinsert
p4522
I42
VSimpleName: transactionName
p4523
tp4524
I4
s(Vinsert
p4525
I45
VStringLiteral: "jdbc:h2:"
p4526
tp4527
I1
s(Vinsert
p4528
I42
VSimpleName: Entry
p4529
tp4530
I5
s(Vinsert
p4531
I42
VSimpleName: commentIndex
p4532
tp4533
I1
s(Vinsert
p4534
I43
VSimpleType: com.mysql.jdbc.Connection
p4535
tp4536
I5
s(Vinsert
p4537
I42
VSimpleName: incrementCachedPreparedStatementMissCount
p4538
tp4539
I2
s(Vinsert
p4540
I45
VStringLiteral: "x3"
p4541
tp4542
I1
s(Vinsert
p4543
I42
VSimpleName: setCreateCount
p4544
tp4545
I1
s(Vinsert
p4546
I45
VStringLiteral: "delete from a1, a2 using (t1) as a1"
p4547
tp4548
I1
s(Vinsert
p4549
I40
VQualifiedName: SQLIntervalUnit.YEAR
p4550
tp4551
I1
s(Vinsert
p4552
I42
VSimpleName: setCollectPeriodSeconds
p4553
tp4554
I1
s(Vinsert
p4555
I42
VSimpleName: endOfComment
p4556
tp4557
I2
s(Vinsert
p4558
I42
VSimpleName: setBreakAfterAcquireFailure
p4559
tp4560
I1
s(Vinsert
p4561
I42
VSimpleName: SQLDefaultExpr
p4562
tp4563
I2
s(Vinsert
p4564
I45
VStringLiteral: "create table t (f1 string comment \u005c"xxx\u005c")"
p4565
tp4566
I1
s(Vinsert
p4567
I45
VStringLiteral: "IDENTITY ("
p4568
tp4569
I1
s(Vinsert
p4570
I40
VQualifiedName: Token.NOT
p4571
tp4572
I4
s(Vinsert
p4573
I42
VSimpleName: charExpr
p4574
tp4575
I2
s(Vinsert
p4576
I45
VStringLiteral: "FROM hr_deptemp t1, struct t2\u005cn"
p4577
tp4578
I1
s(Vinsert
p4579
I42
VSimpleName: MockResultSetMetaData
p4580
tp4581
I2
s(Vinsert
p4582
I42
VSimpleName: SQLServerDeclareItem
p4583
tp4584
I1
s(Vinsert
p4585
I45
VStringLiteral: "Tables : "
p4586
tp4587
I121
s(Vinsert
p4588
I45
VStringLiteral: "from sale_detail\u005cn"
p4589
tp4590
I1
s(Vinsert
p4591
I34
VNumberLiteral: 12
p4592
tp4593
I1
s(Vinsert
p4594
I45
VStringLiteral: "\u005cnWHERE t1.c1 = 1"
p4595
tp4596
I1
s(Vinsert
p4597
I8
VBlock
p4598
tp4599
I4787
s(Vinsert
p4600
I45
VStringLiteral: " AND islast=0"
p4601
tp4602
I1
s(Vinsert
p4603
I42
VSimpleName: evaluate
p4604
tp4605
I8
s(Vinsert
p4606
I13
VCharacterLiteral: '`'
p4607
tp4608
I3
s(Vinsert
p4609
I45
VStringLiteral: "FROM "
p4610
tp4611
I1
s(Vinsert
p4612
I42
VSimpleName: ifnull
p4613
tp4614
I1
s(Vinsert
p4615
I34
VNumberLiteral: 1000
p4616
tp4617
I49
s(Vinsert
p4618
I42
VSimpleName: CallableStatementProxy
p4619
tp4620
I2
s(Vinsert
p4621
I76
VWildcardType: ?
p4622
tp4623
I16
s(Vinsert
p4624
I42
VSimpleName: incrementInUseCount
p4625
tp4626
I1
s(Vinsert
p4627
I42
VSimpleName: SQLVariantRefExpr
p4628
tp4629
I10
s(Vinsert
p4630
I40
VQualifiedName: java.sql.Connection
p4631
tp4632
I2
s(Vinsert
p4633
I46
VSuperConstructorInvocation
p4634
tp4635
I11
s(Vinsert
p4636
I42
VSimpleName: key
p4637
tp4638
I22
s(Vinsert
p4639
I45
VStringLiteral: "\u005cn\u005ctseparated DATE NOT NULL DEFAULT '9999-12-31', "
p4640
tp4641
I1
s(Vinsert
p4642
I42
VSimpleName: rset
p4643
tp4644
I2
s(Vinsert
p4645
I45
VStringLiteral: "x2"
p4646
tp4647
I1
s(Vinsert
p4648
I42
VSimpleName: setPrettyFormat
p4649
tp4650
I1
s(Vinsert
p4651
I43
VSimpleType: PreparedStatement
p4652
tp4653
I70
s(Vinsert
p4654
I42
VSimpleName: SQLIfStatement
p4655
tp4656
I1
s(Vinsert
p4657
I45
VStringLiteral: "TODO. "
p4658
tp4659
I3
s(Vinsert
p4660
I42
VSimpleName: isOracle
p4661
tp4662
I2
s(Vinsert
p4663
I42
VSimpleName: BasicDataSource
p4664
tp4665
I9
s(Vinsert
p4666
I5
VArrayType: byte[]
p4667
tp4668
I12
s(Vinsert
p4669
I45
VStringLiteral: "\u005ctID VARCHAR(50)\u005cn"
p4670
tp4671
I1
s(Vinsert
p4672
I42
VSimpleName: statements
p4673
tp4674
I12
s(Vinsert
p4675
I43
VSimpleType: TeradataStatementParser
p4676
tp4677
I1
s(Vinsert
p4678
I40
VQualifiedName: Lexer.CommentHandler
p4679
tp4680
I1
s(Vinsert
p4681
I45
VStringLiteral: "CREATE"
p4682
tp4683
I1
s(Vinsert
p4684
I45
VStringLiteral: "\u005ctORDER BY task_id DESC\u005cn"
p4685
tp4686
I1
s(Vinsert
p4687
I45
VStringLiteral: "SEQUENCE"
p4688
tp4689
I2
s(Vinsert
p4690
I42
VSimpleName: getPartition
p4691
tp4692
I3
s(Vinsert
p4693
I42
VSimpleName: getSqlStatMap
p4694
tp4695
I1
s(Vinsert
p4696
I42
VSimpleName: getUpdateCount
p4697
tp4698
I1
s(Vinsert
p4699
I40
VQualifiedName: JdbcConstants.ORACLE
p4700
tp4701
I78
s(Vinsert
p4702
I45
VStringLiteral: "    ON c.customer_id=oh.customer_id;"
p4703
tp4704
I1
s(Vinsert
p4705
I42
VSimpleName: sessionStat
p4706
tp4707
I2
s(Vinsert
p4708
I74
VParameterizedType: AtomicLongFieldUpdater<WebSessionStat>
p4709
tp4710
I1
s(Vinsert
p4711
I43
VSimpleType: JdbcParameter
p4712
tp4713
I4
s(Vinsert
p4714
I42
VSimpleName: getSqlHash
p4715
tp4716
I2
s(Vinsert
p4717
I45
VStringLiteral: "connection not init"
p4718
tp4719
I1
s(Vinsert
p4720
I42
VSimpleName: DruidDataSourceStatManager
p4721
tp4722
I14
s(Vinsert
p4723
I45
VStringLiteral: "\u005ct\u005ctBUFFER_POOL DEFAULT\u005cn"
p4724
tp4725
I7
s(Vinsert
p4726
I45
VStringLiteral: "\u005ctFROM sys.V_$SESSION a, sys.V_$LOCK b\u005cn"
p4727
tp4728
I1
s(Vinsert
p4729
I42
VSimpleName: STAT_ANNOTATION_PROCESSOR_BEAN_NAME
p4730
tp4731
I1
s(Vinsert
p4732
I42
VSimpleName: offsetCache
p4733
tp4734
I2
s(Vinsert
p4735
I42
VSimpleName: seedValue
p4736
tp4737
I1
s(Vinsert
p4738
I45
VStringLiteral: "DENSE_RANK"
p4739
tp4740
I1
s(Vinsert
p4741
I40
VQualifiedName: Token.WITH
p4742
tp4743
I5
s(Vinsert
p4744
I45
VStringLiteral: "\u005cn\u005ct\u005ctOR d.indkey[9] = a.attnum)"
p4745
tp4746
I1
s(Vinsert
p4747
I42
VSimpleName: procedureName
p4748
tp4749
I1
s(Vinsert
p4750
I42
VSimpleName: orderBySiblings
p4751
tp4752
I3
s(Vinsert
p4753
I42
VSimpleName: fields
p4754
tp4755
I3
s(Vinsert
p4756
I45
VStringLiteral: "  CLOSE cur1;\u005cn"
p4757
tp4758
I1
s(Vinsert
p4759
I42
VSimpleName: parseExplain
p4760
tp4761
I1
s(Vinsert
p4762
I45
VStringLiteral: "mapping.entity"
p4763
tp4764
I1
s(Vinsert
p4765
I40
VQualifiedName: JdbcConstants.INFORMIX
p4766
tp4767
I1
s(Vinsert
p4768
I45
VStringLiteral: "\u005ct, c.zip, c.logo_file, c.email, c.brief_profile, c.domain_id\u005cn"
p4769
tp4770
I1
s(Vinsert
p4771
I42
VSimpleName: sqlLimit
p4772
tp4773
I1
s(Vinsert
p4774
I42
VSimpleName: test_export_conditions
p4775
tp4776
I6
s(Vinsert
p4777
I45
VStringLiteral: "StatementExecuteCount_2000_5000_Millis"
p4778
tp4779
I1
s(Vinsert
p4780
I13
VCharacterLiteral: 'R'
p4781
tp4782
I1
s(Vinsert
p4783
I42
VSimpleName: resetCount
p4784
tp4785
I4
s(Vinsert
p4786
I42
VSimpleName: getConnectionCloseCount
p4787
tp4788
I1
s(Vinsert
p4789
I43
VSimpleType: com.mysql.jdbc.ConnectionImpl
p4790
tp4791
I1
s(Vinsert
p4792
I45
VStringLiteral: ", `attribute`, `attribute_cc`, `sync_version`, `ex1`, `ex2`\u005cn"
p4793
tp4794
I1
s(Vinsert
p4795
I40
VQualifiedName: statValue.clobOpenCount
p4796
tp4797
I1
s(Vinsert
p4798
I42
VSimpleName: isRow
p4799
tp4800
I3
s(Vinsert
p4801
I45
VStringLiteral: "SELECT * FROM AV_INFO WHERE ID = ?"
p4802
tp4803
I1
s(Vinsert
p4804
I42
VSimpleName: isTestOnReturn
p4805
tp4806
I1
s(Vinsert
p4807
I45
VStringLiteral: "\u005ct, utl_raw.cast_to_raw(CONTRACT_SERIAL) AS CONTRACT_SERIAL, IS_MERGED\u005cn"
p4808
tp4809
I1
s(Vinsert
p4810
I42
VSimpleName: CharsetParameter
p4811
tp4812
I2
s(Vinsert
p4813
I42
VSimpleName: explainToSelectSQL
p4814
tp4815
I2
s(Vinsert
p4816
I74
VParameterizedType: PrivilegedAction<T>
p4817
tp4818
I1
s(Vinsert
p4819
I42
VSimpleName: setLevel
p4820
tp4821
I3
s(Vinsert
p4822
I42
VSimpleName: PGSelectStatement
p4823
tp4824
I7
s(Vinsert
p4825
I27
VInfixExpression: %
p4826
tp4827
I3
s(Vinsert
p4828
I42
VSimpleName: extra_len
p4829
tp4830
I1
s(Vinsert
p4831
I42
VSimpleName: afterDataSourceChanged
p4832
tp4833
I1
s(Vinsert
p4834
I42
VSimpleName: addBatch
p4835
tp4836
I1
s(Vinsert
p4837
I42
VSimpleName: setCount
p4838
tp4839
I1
s(Vinsert
p4840
I45
VStringLiteral: "\u005ct\u005c"GMT_JOIN_MEMBER\u005c" DATE, \u005cn"
p4841
tp4842
I1
s(Vinsert
p4843
I45
VStringLiteral: " ignore delete triggers"
p4844
tp4845
I1
s(Vinsert
p4846
I42
VSimpleName: rightResult
p4847
tp4848
I2
s(Vinsert
p4849
I45
VStringLiteral: "\u005cn\u005ctDELETE_REASON_ NVARCHAR2(2000),"
p4850
tp4851
I2
s(Vinsert
p4852
I42
VSimpleName: oldMode
p4853
tp4854
I1
s(Vinsert
p4855
I42
VSimpleName: OracleStorageClause
p4856
tp4857
I2
s(Vinsert
p4858
I45
VStringLiteral: "\u005ct\u005ct\u005ctUPDATE employees\u005cn"
p4859
tp4860
I1
s(Vinsert
p4861
I45
VStringLiteral: "WHERE DO.object_id = lo.object_id"
p4862
tp4863
I1
s(Vinsert
p4864
I43
VSimpleType: SQLServerLexer
p4865
tp4866
I2
s(Vinsert
p4867
I42
VSimpleName: getHEngine
p4868
tp4869
I2
s(Vinsert
p4870
I42
VSimpleName: addJdbcFetchRowCount
p4871
tp4872
I1
s(Vinsert
p4873
I45
VStringLiteral: "deleteDataCount_100_1000"
p4874
tp4875
I1
s(Vinsert
p4876
I45
VStringLiteral: "\u005cn\u005ctdiv_name VARCHAR2(14),"
p4877
tp4878
I2
s(Vinsert
p4879
I42
VSimpleName: startTrans
p4880
tp4881
I1
s(Vinsert
p4882
I45
VStringLiteral: "\u005ctENABLE STORAGE IN ROW\u005cn"
p4883
tp4884
I3
s(Vinsert
p4885
I42
VSimpleName: setWithCube
p4886
tp4887
I1
s(Vinsert
p4888
I42
VSimpleName: URL
p4889
tp4890
I5
s(Vinsert
p4891
I42
VSimpleName: isUnique
p4892
tp4893
I2
s(Vinsert
p4894
I45
VStringLiteral: "SELECT name, '******' password, createTime from user where length(name) = 999999.9 or ascii(substring((database()),1,1))=127"
p4895
tp4896
I1
s(Vinsert
p4897
I42
VSimpleName: setModelClause
p4898
tp4899
I1
s(Vinsert
p4900
I43
VSimpleType: MySqlSQLColumnDefinition
p4901
tp4902
I2
s(Vinsert
p4903
I45
VStringLiteral: "\u005ct\u005ct\u005ctFIELDS TERMINATED BY '|'\u005cn"
p4904
tp4905
I1
s(Vinsert
p4906
I42
VSimpleName: setFetchDirection
p4907
tp4908
I1
s(Vinsert
p4909
I43
VSimpleType: SQLDeclareItem
p4910
tp4911
I4
s(Vinsert
p4912
I45
VStringLiteral: "\u005cn\u005ct\u005c"LOGIN\u005c" VARCHAR2(100 BYTE),"
p4913
tp4914
I2
s(Vinsert
p4915
I42
VSimpleName: groupBy
p4916
tp4917
I18
s(Vinsert
p4918
I45
VStringLiteral: "fields : "
p4919
tp4920
I65
s(Vinsert
p4921
I45
VStringLiteral: "IS\u005cn"
p4922
tp4923
I1
s(Vinsert
p4924
I42
VSimpleName: run
p4925
tp4926
I25
s(Vinsert
p4927
I45
VStringLiteral: "                   and (ur.nrole_id = '1' or ur.nrole_id = '20'))"
p4928
tp4929
I1
s(Vinsert
p4930
I42
VSimpleName: tablespace
p4931
tp4932
I10
s(Vinsert
p4933
I40
VQualifiedName: SQLSequenceExpr.Function.NextVal
p4934
tp4935
I1
s(Vinsert
p4936
I42
VSimpleName: debugCount
p4937
tp4938
I1
s(Vinsert
p4939
I42
VSimpleName: id
p4940
tp4941
I22
s(Vinsert
p4942
I42
VSimpleName: test_getCursorName
p4943
tp4944
I1
s(Vinsert
p4945
I43
VSimpleType: JdbcStatContext
p4946
tp4947
I8
s(Vinsert
p4948
I45
VStringLiteral: "\u005ctc_datetime datetime,\u005cn"
p4949
tp4950
I2
s(Vinsert
p4951
I42
VSimpleName: SQLSelectSubqueryQuery
p4952
tp4953
I1
s(Vinsert
p4954
I42
VSimpleName: endLabel
p4955
tp4956
I3
s(Vinsert
p4957
I42
VSimpleName: test_updateArray
p4958
tp4959
I1
s(Vinsert
p4960
I45
VStringLiteral: "\u005cnSTORAGE (INITIAL 65536 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)"
p4961
tp4962
I1
s(Vinsert
p4963
I43
VSimpleType: OracleRangeExpr
p4964
tp4965
I2
s(Vinsert
p4966
I45
VStringLiteral: "\u005cn\u005ctPARTITION SALES_Q2_2000 VALUES LESS THAN (TO_DATE('01-JUL-2000', 'DD-MON-YYYY'))"
p4967
tp4968
I2
s(Vinsert
p4969
I42
VSimpleName: SQLConstaint
p4970
tp4971
I1
s(Vinsert
p4972
I42
VSimpleName: MySqlUnique
p4973
tp4974
I3
s(Vinsert
p4975
I42
VSimpleName: parseUpsert
p4976
tp4977
I1
s(Vinsert
p4978
I42
VSimpleName: iter
p4979
tp4980
I8
s(Vinsert
p4981
I42
VSimpleName: setArray
p4982
tp4983
I1
s(Vinsert
p4984
I45
VStringLiteral: "    where WEB_USER_ID=2 and EMAIL='1223@123.com'"
p4985
tp4986
I1
s(Vinsert
p4987
I42
VSimpleName: MySqlWallTest12
p4988
tp4989
I1
s(Vinsert
p4990
I42
VSimpleName: setCheckoutTimeout
p4991
tp4992
I1
s(Vinsert
p4993
I42
VSimpleName: Util
p4994
tp4995
I1
s(Vinsert
p4996
I42
VSimpleName: tmp
p4997
tp4998
I4
s(Vinsert
p4999
I45
VStringLiteral: "employees"
p5000
tp5001
I2
s(Vinsert
p5002
I42
VSimpleName: notEmpty
p5003
tp5004
I1
s(Vinsert
p5005
I42
VSimpleName: OdpsASTVisitor
p5006
tp5007
I22
s(Vinsert
p5008
I45
VStringLiteral: "          select   product_id,"
p5009
tp5010
I1
s(Vinsert
p5011
I10
VBreakStatement
p5012
tp5013
I22
s(Vinsert
p5014
I45
VStringLiteral: "\u005ct\u005ctTABLESPACE HASH_TS02, \u005cn"
p5015
tp5016
I1
s(Vinsert
p5017
I42
VSimpleName: setHost
p5018
tp5019
I1
s(Vinsert
p5020
I42
VSimpleName: equals
p5021
tp5022
I176
s(Vinsert
p5023
I42
VSimpleName: resultMap
p5024
tp5025
I3
s(Vinsert
p5026
I45
VStringLiteral: "syntax error. "
p5027
tp5028
I7
s(Vinsert
p5029
I42
VSimpleName: selectItem
p5030
tp5031
I9
s(Vinsert
p5032
I42
VSimpleName: test_prepare
p5033
tp5034
I1
s(Vinsert
p5035
I42
VSimpleName: maxActive
p5036
tp5037
I6
s(Vinsert
p5038
I42
VSimpleName: enum1
p5039
tp5040
I1
s(Vinsert
p5041
I45
VStringLiteral: "jdbc:mock:config-3"
p5042
tp5043
I2
s(Vinsert
p5044
I42
VSimpleName: getLocalIPAddress
p5045
tp5046
I1
s(Vinsert
p5047
I45
VStringLiteral: "                            2\u005cn"
p5048
tp5049
I2
s(Vinsert
p5050
I45
VStringLiteral: "if"
p5051
tp5052
I1
s(Vinsert
p5053
I42
VSimpleName: parseUpdateStatment
p5054
tp5055
I1
s(Vinsert
p5056
I45
VStringLiteral: ", `status`, `type`, `sub_type`, `gmt_create`, `gmt_modified`\u005cn"
p5057
tp5058
I1
s(Vinsert
p5059
I42
VSimpleName: parserParameters
p5060
tp5061
I1
s(Vinsert
p5062
I42
VSimpleName: extended
p5063
tp5064
I1
s(Vinsert
p5065
I42
VSimpleName: paramMap
p5066
tp5067
I2
s(Vinsert
p5068
I42
VSimpleName: columnGroups
p5069
tp5070
I2
s(Vinsert
p5071
I42
VSimpleName: BeanFactoryAware
p5072
tp5073
I2
s(Vinsert
p5074
I45
VStringLiteral: "SELECT * FROM `information_schema`.`columns` WHERE TABLE_NAME='aaaa' AND TABLE_SCHEMA='xxxx'"
p5075
tp5076
I1
s(Vinsert
p5077
I42
VSimpleName: loopStmt
p5078
tp5079
I2
s(Vinsert
p5080
I45
VStringLiteral: "READ WRITE"
p5081
tp5082
I1
s(Vinsert
p5083
I45
VStringLiteral: "\u005cn\u005ctPARTITION p1 VALUES LESS THAN (1000),"
p5084
tp5085
I3
s(Vinsert
p5086
I42
VSimpleName: getPartitionBy
p5087
tp5088
I3
s(Vinsert
p5089
I45
VStringLiteral: "\u005cn\u005ctupdated_date DATETIME,"
p5090
tp5091
I1
s(Vinsert
p5092
I42
VSimpleName: parseUpdateSetItem
p5093
tp5094
I1
s(Vinsert
p5095
I42
VSimpleName: max
p5096
tp5097
I5
s(Vinsert
p5098
I42
VSimpleName: isFirst
p5099
tp5100
I1
s(Vinsert
p5101
I66
VTextElement:  1.0, 2012-3-18
p5102
tp5103
I1
s(Vinsert
p5104
I42
VSimpleName: parseRaise
p5105
tp5106
I2
s(Vinsert
p5107
I42
VSimpleName: lengthData
p5108
tp5109
I2
s(Vinsert
p5110
I45
VStringLiteral: "SELECT * FROM T_PRE_STMT_TEST ORDER BY 2"
p5111
tp5112
I1
s(Vinsert
p5113
I40
VQualifiedName: com.alibaba.druid.stat.TableStat.Mode
p5114
tp5115
I1
s(Vinsert
p5116
I42
VSimpleName: endsWith
p5117
tp5118
I5
s(Vinsert
p5119
I43
VSimpleType: OdpsListStmt
p5120
tp5121
I3
s(Vinsert
p5122
I42
VSimpleName: nextFilter
p5123
tp5124
I4
s(Vinsert
p5125
I42
VSimpleName: sessionStatMap
p5126
tp5127
I4
s(Vinsert
p5128
I42
VSimpleName: collectPeriodSeconds
p5129
tp5130
I3
s(Vinsert
p5131
I42
VSimpleName: parseTop
p5132
tp5133
I1
s(Vinsert
p5134
I43
VSimpleType: MySqlShowGrantsStatement
p5135
tp5136
I2
s(Vinsert
p5137
I42
VSimpleName: MySqlSetNamesStatement
p5138
tp5139
I2
s(Vinsert
p5140
I42
VSimpleName: getStatsMap
p5141
tp5142
I1
s(Vinsert
p5143
I42
VSimpleName: DESKeySpec
p5144
tp5145
I2
s(Vinsert
p5146
I42
VSimpleName: isDefaultAutoCommit
p5147
tp5148
I1
s(Vinsert
p5149
I42
VSimpleName: setOf
p5150
tp5151
I2
s(Vinsert
p5152
I40
VQualifiedName: Token.NONE
p5153
tp5154
I1
s(Vinsert
p5155
I45
VStringLiteral: "\u005ct\u005ct\u005ct, P.COST_PRICE04, P.CONFIRM_ITEM_PARAM, P.CONFIRM_FLAG04, P.OLD_COST, P.LIST_PRICE\u005cn"
p5156
tp5157
I1
s(Vinsert
p5158
I45
VStringLiteral: "\u005cn\u005ctTRUNCATE PARTITION p1"
p5159
tp5160
I1
s(Vinsert
p5161
I40
VQualifiedName: parameters.length
p5162
tp5163
I1
s(Vinsert
p5164
I42
VSimpleName: sqlExpr
p5165
tp5166
I7
s(Vinsert
p5167
I45
VStringLiteral: "\u005ct`c_time` time DEFAULT NULL COMMENT 'time',\u005cn"
p5168
tp5169
I2
s(Vinsert
p5170
I45
VStringLiteral: "WITH CHECK OPTION;"
p5171
tp5172
I2
s(Vinsert
p5173
I42
VSimpleName: PoolableConnection
p5174
tp5175
I9
s(Vinsert
p5176
I45
VStringLiteral: "  PCTFREE 0 PCTUSED 40 INITRANS 1 MAXTRANS 255 \u005cn"
p5177
tp5178
I1
s(Vinsert
p5179
I40
VQualifiedName: val.histogram_1000000_more
p5180
tp5181
I1
s(Vinsert
p5182
I42
VSimpleName: jdbcPoolConnectionOpenCount
p5183
tp5184
I1
s(Vinsert
p5185
I42
VSimpleName: SQLServerWallProvider
p5186
tp5187
I9
s(Vinsert
p5188
I42
VSimpleName: getConfig
p5189
tp5190
I104
s(Vinsert
p5191
I42
VSimpleName: ConfigTools
p5192
tp5193
I1
s(Vinsert
p5194
I42
VSimpleName: getExecuteCount
p5195
tp5196
I10
s(Vinsert
p5197
I45
VStringLiteral: "\u005cn\u005ctORDER BY id"
p5198
tp5199
I2
s(Vinsert
p5200
I42
VSimpleName: mockConnection
p5201
tp5202
I8
s(Vinsert
p5203
I42
VSimpleName: SQLSetStatement
p5204
tp5205
I12
s(Vinsert
p5206
I42
VSimpleName: OracleLockTableStatement
p5207
tp5208
I1
s(Vinsert
p5209
I40
VQualifiedName: JdbcConstants.ELASTIC_SEARCH
p5210
tp5211
I2
s(Vinsert
p5212
I45
VStringLiteral: "\u005ctstart_line,\u005cn"
p5213
tp5214
I1
s(Vinsert
p5215
I43
VSimpleType: WallProviderStatTimer
p5216
tp5217
I1
s(Vinsert
p5218
I42
VSimpleName: isSameRM
p5219
tp5220
I2
s(Vinsert
p5221
I42
VSimpleName: right
p5222
tp5223
I22
s(Vinsert
p5224
I45
VStringLiteral: "false"
p5225
tp5226
I7
s(Vinsert
p5227
I45
VStringLiteral: "create table t(fid varchar(20))"
p5228
tp5229
I1
s(Vinsert
p5230
I45
VStringLiteral: "\u005cn\u005ctcredit_limit number(9, 2)"
p5231
tp5232
I2
s(Vinsert
p5233
I42
VSimpleName: db
p5234
tp5235
I1
s(Vinsert
p5236
I42
VSimpleName: sortedBy
p5237
tp5238
I3
s(Vinsert
p5239
I42
VSimpleName: simpleExpression
p5240
tp5241
I2
s(Vinsert
p5242
I45
VStringLiteral: "CLUSTERED BY (userid)\u005cn"
p5243
tp5244
I1
s(Vinsert
p5245
I45
VStringLiteral: "\u005cn\u005ctfrom ("
p5246
tp5247
I1
s(Vinsert
p5248
I42
VSimpleName: resolveExpr
p5249
tp5250
I1
s(Vinsert
p5251
I42
VSimpleName: testGetDbType
p5252
tp5253
I1
s(Vinsert
p5254
I74
VParameterizedType: ArrayList<SQLSubPartition>
p5255
tp5256
I1
s(Vinsert
p5257
I42
VSimpleName: setContentType
p5258
tp5259
I1
s(Vinsert
p5260
I43
VSimpleType: CompositeData
p5261
tp5262
I5
s(Vinsert
p5263
I42
VSimpleName: GreaterThanOrEqual
p5264
tp5265
I1
s(Vinsert
p5266
I42
VSimpleName: getSelect
p5267
tp5268
I25
s(Vinsert
p5269
I42
VSimpleName: NotificationTraceEventListener
p5270
tp5271
I1
s(Vinsert
p5272
I45
VStringLiteral: "\u005ctinput varchar2\u005cn"
p5273
tp5274
I1
s(Vinsert
p5275
I13
VCharacterLiteral: '?'
p5276
tp5277
I6
s(Vinsert
p5278
I42
VSimpleName: preStmt
p5279
tp5280
I3
s(Vinsert
p5281
I45
VStringLiteral: "\u005ct, extind, avgchn, IFNULL(degree, 1)\u005cn"
p5282
tp5283
I1
s(Vinsert
p5284
I45
VStringLiteral: "\u005ct, bs.start_time, bs.completion_time, abs((bs.completion_time - bs.start_time) * 86400) AS elapsed_seconds, bs.status, bs.controlfile_included\u005cn"
p5285
tp5286
I1
s(Vinsert
p5287
I42
VSimpleName: xaConnectionFactory
p5288
tp5289
I2
s(Vinsert
p5290
I42
VSimpleName: EvalMethodTest_instr_1
p5291
tp5292
I1
s(Vinsert
p5293
I42
VSimpleName: PreparedStatementProxy
p5294
tp5295
I8
s(Vinsert
p5296
I42
VSimpleName: translateOracleToMySql
p5297
tp5298
I4
s(Vinsert
p5299
I42
VSimpleName: DruidPooledResultSet
p5300
tp5301
I2
s(Vinsert
p5302
I42
VSimpleName: JdbcParameterNull
p5303
tp5304
I2
s(Vinsert
p5305
I45
VStringLiteral: "fattable"
p5306
tp5307
I1
s(Vinsert
p5308
I40
VQualifiedName: DruidDataSourceFactory.PROP_INITCONNECTIONSQLS
p5309
tp5310
I1
s(Vinsert
p5311
I42
VSimpleName: JdbcDataSourceStat
p5312
tp5313
I10
s(Vinsert
p5314
I42
VSimpleName: fetchRowIndex
p5315
tp5316
I1
s(Vinsert
p5317
I42
VSimpleName: getWallSelectQueryContext
p5318
tp5319
I1
s(Vinsert
p5320
I40
VQualifiedName: SQLOver.WindowingType.RANGE
p5321
tp5322
I1
s(Vinsert
p5323
I43
VSimpleType: Limit
p5324
tp5325
I2
s(Vinsert
p5326
I45
VStringLiteral: "\u005cn;"
p5327
tp5328
I8
s(Vinsert
p5329
I42
VSimpleName: setProcedureName
p5330
tp5331
I2
s(Vinsert
p5332
I42
VSimpleName: exitImplicitCacheToActive
p5333
tp5334
I1
s(Vinsert
p5335
I42
VSimpleName: getWithQuery
p5336
tp5337
I1
s(Vinsert
p5338
I45
VStringLiteral: "\u005cnSTORAGE (INITIAL 8M MAXSIZE 1G)"
p5339
tp5340
I2
s(Vinsert
p5341
I43
VSimpleType: OracleSelect
p5342
tp5343
I1
s(Vinsert
p5344
I45
VStringLiteral: "ALTER USER"
p5345
tp5346
I1
s(Vinsert
p5347
I43
VSimpleType: MockPreparedStatementFactory
p5348
tp5349
I2
s(Vinsert
p5350
I45
VStringLiteral: "WHERE projectId = ?"
p5351
tp5352
I1
s(Vinsert
p5353
I42
VSimpleName: OracleBinaryFloatExpr
p5354
tp5355
I1
s(Vinsert
p5356
I45
VStringLiteral: "CHECK PARTITION "
p5357
tp5358
I1
s(Vinsert
p5359
I42
VSimpleName: propertyExpr
p5360
tp5361
I12
s(Vinsert
p5362
I45
VStringLiteral: "\u005ctSELECT /*+ no_merge(a) no_merge(b) */ a.username, a.SID, a.row_wait_obj#, a.ROW_WAIT_FILE#, a.ROW_WAIT_BLOCK#\u005cn"
p5363
tp5364
I1
s(Vinsert
p5365
I43
VSimpleType: AesDecrypter
p5366
tp5367
I4
s(Vinsert
p5368
I45
VStringLiteral: " into ("
p5369
tp5370
I1
s(Vinsert
p5371
I42
VSimpleName: OracleFormatTest
p5372
tp5373
I1
s(Vinsert
p5374
I45
VStringLiteral: " DROP ANY MATERIALIZED VIEW,"
p5375
tp5376
I1
s(Vinsert
p5377
I45
VStringLiteral: "CREATE TABLE new_tbl LIKE orig_tbl"
p5378
tp5379
I1
s(Vinsert
p5380
I45
VStringLiteral: "\u005ct1c, \u005cn"
p5381
tp5382
I1
s(Vinsert
p5383
I45
VStringLiteral: " WITH PASSWORD = "
p5384
tp5385
I1
s(Vinsert
p5386
I45
VStringLiteral: "CreatedTime"
p5387
tp5388
I1
s(Vinsert
p5389
I40
VQualifiedName: Token.LIMIT
p5390
tp5391
I3
s(Vinsert
p5392
I42
VSimpleName: getCacheKey
p5393
tp5394
I1
s(Vinsert
p5395
I42
VSimpleName: DruidPooledConnection
p5396
tp5397
I49
s(Vinsert
p5398
I43
VSimpleType: PGAnalytic
p5399
tp5400
I2
s(Vinsert
p5401
I45
VStringLiteral: "NO_WRITE_TO_BINLOG "
p5402
tp5403
I2
s(Vinsert
p5404
I45
VStringLiteral: "\u005ct, salary\u005cn"
p5405
tp5406
I1
s(Vinsert
p5407
I42
VSimpleName: setShort
p5408
tp5409
I3
s(Vinsert
p5410
I45
VStringLiteral: "TODO : "
p5411
tp5412
I3
s(Vinsert
p5413
I42
VSimpleName: defaultExpr
p5414
tp5415
I1
s(Vinsert
p5416
I42
VSimpleName: OraclePreparedStatement
p5417
tp5418
I2
s(Vinsert
p5419
I42
VSimpleName: addViolationEffectRowCount
p5420
tp5421
I3
s(Vinsert
p5422
I42
VSimpleName: SQLNumberExpr
p5423
tp5424
I6
s(Vinsert
p5425
I45
VStringLiteral: "\u005ctEND\u005cn"
p5426
tp5427
I1
s(Vinsert
p5428
I42
VSimpleName: setMaxSize
p5429
tp5430
I1
s(Vinsert
p5431
I42
VSimpleName: tok
p5432
tp5433
I18
s(Vinsert
p5434
I45
VStringLiteral: "INITRANS 1\u005cn"
p5435
tp5436
I11
s(Vinsert
p5437
I42
VSimpleName: test_unwrap
p5438
tp5439
I1
s(Vinsert
p5440
I42
VSimpleName: cachedPreparedStatementMissCount
p5441
tp5442
I3
s(Vinsert
p5443
I45
VStringLiteral: "\u005ct\u005ctOR A.CITY LIKE ('%' || ? || '%')\u005cn"
p5444
tp5445
I1
s(Vinsert
p5446
I43
VSimpleType: OracleWallProvider
p5447
tp5448
I14
s(Vinsert
p5449
I42
VSimpleName: orderingColumn
p5450
tp5451
I1
s(Vinsert
p5452
I45
VStringLiteral: "\u005ct\u005ctFROM employees\u005cn"
p5453
tp5454
I1
s(Vinsert
p5455
I42
VSimpleName: SQLDropIndexStatement
p5456
tp5457
I3
s(Vinsert
p5458
I45
VStringLiteral: ") t2\u005cn"
p5459
tp5460
I1
s(Vinsert
p5461
I45
VStringLiteral: "REF"
p5462
tp5463
I2
s(Vinsert
p5464
I42
VSimpleName: setRedoBufferSize
p5465
tp5466
I1
s(Vinsert
p5467
I42
VSimpleName: updateCounts
p5468
tp5469
I1
s(Vinsert
p5470
I42
VSimpleName: referencedTable
p5471
tp5472
I1
s(Vinsert
p5473
I45
VStringLiteral: "META-INF/druid-filter-wall-permit-name-mysql-default.txt"
p5474
tp5475
I1
s(Vinsert
p5476
I45
VStringLiteral: "+--------------+--------------+------+-----+---------------------+-----------------------------+\u005cn"
p5477
tp5478
I1
s(Vinsert
p5479
I43
VSimpleType: SQLMethodInvokeExpr
p5480
tp5481
I30
s(Vinsert
p5482
I42
VSimpleName: hasAfterComment
p5483
tp5484
I4
s(Vinsert
p5485
I42
VSimpleName: setUsePingMethod
p5486
tp5487
I1
s(Vinsert
p5488
I42
VSimpleName: getTableSpace
p5489
tp5490
I1
s(Vinsert
p5491
I45
VStringLiteral: "\u005ct, bs.input_file_scan_only, decode(keep_options, 0, 'NO', 'YES') AS keep, keep_until, decode(keep_options, 256, 'LOGS', 512, 'NOLOGS', 1024, 'CONSISTENT', NULL) AS keep_options\u005cn"
p5492
tp5493
I1
s(Vinsert
p5494
I42
VSimpleName: SchemaRepository
p5495
tp5496
I2
s(Vinsert
p5497
I45
VStringLiteral: "remove partitioning"
p5498
tp5499
I1
s(Vinsert
p5500
I40
VQualifiedName: JdbcConstants.DB2
p5501
tp5502
I4
s(Vinsert
p5503
I27
VInfixExpression: !=
p5504
tp5505
I753
s(Vinsert
p5506
I45
VStringLiteral: "\u005ctSQL SECURITY = invoker\u005cn"
p5507
tp5508
I1
s(Vinsert
p5509
I43
VSimpleType: PGValuesQuery
p5510
tp5511
I2
s(Vinsert
p5512
I42
VSimpleName: SchemaObject
p5513
tp5514
I3
s(Vinsert
p5515
I42
VSimpleName: publicKeyBytes
p5516
tp5517
I1
s(Vinsert
p5518
I42
VSimpleName: tryCount
p5519
tp5520
I1
s(Vinsert
p5521
I42
VSimpleName: printCreateTable
p5522
tp5523
I1
s(Vinsert
p5524
I42
VSimpleName: incrementCachedPreparedStatementDeleteCount
p5525
tp5526
I1
s(Vinsert
p5527
I42
VSimpleName: o
p5528
tp5529
I2
s(Vinsert
p5530
I42
VSimpleName: setTablespace
p5531
tp5532
I3
s(Vinsert
p5533
I42
VSimpleName: incrementTruncateCount
p5534
tp5535
I1
s(Vinsert
p5536
I42
VSimpleName: incount
p5537
tp5538
I1
s(Vinsert
p5539
I42
VSimpleName: replaceAll
p5540
tp5541
I13
s(Vinsert
p5542
I42
VSimpleName: setDesensitize
p5543
tp5544
I5
s(Vinsert
p5545
I42
VSimpleName: JarURLConnection
p5546
tp5547
I2
s(Vinsert
p5548
I45
VStringLiteral: "f3 F3"
p5549
tp5550
I1
s(Vinsert
p5551
I42
VSimpleName: getBuckets
p5552
tp5553
I1
s(Vinsert
p5554
I45
VStringLiteral: "FULLTEXT "
p5555
tp5556
I1
s(Vinsert
p5557
I42
VSimpleName: isEnable
p5558
tp5559
I7
s(Vinsert
p5560
I43
VSimpleType: OdpsStatisticClause.ExpressionCondition
p5561
tp5562
I1
s(Vinsert
p5563
I42
VSimpleName: isTop
p5564
tp5565
I3
s(Vinsert
p5566
I42
VSimpleName: getWeightRegionEnd
p5567
tp5568
I1
s(Vinsert
p5569
I43
VSimpleType: DB2StatementParser
p5570
tp5571
I1
s(Vinsert
p5572
I45
VStringLiteral: "(WEB_USER_ID,NAME,COUNTRY,PROVINCE,CITY"
p5573
tp5574
I1
s(Vinsert
p5575
I42
VSimpleName: quoteMode
p5576
tp5577
I1
s(Vinsert
p5578
I40
VQualifiedName: JdbcConstants.MYSQL
p5579
tp5580
I55
s(Vinsert
p5581
I45
VStringLiteral: "  CLOSE cur2;\u005cn"
p5582
tp5583
I1
s(Vinsert
p5584
I42
VSimpleName: Bytes
p5585
tp5586
I11
s(Vinsert
p5587
I45
VStringLiteral: "\u005ct\u005ctACCESS PARAMETERS (\u005cn"
p5588
tp5589
I1
s(Vinsert
p5590
I74
VParameterizedType: ArrayList<DruidDataSource>
p5591
tp5592
I1
s(Vinsert
p5593
I74
VParameterizedType: ArrayList<SQLUpdateSetItem>
p5594
tp5595
I1
s(Vinsert
p5596
I43
VSimpleType: ColumnGroup
p5597
tp5598
I1
s(Vinsert
p5599
I40
VQualifiedName: java.util.List
p5600
tp5601
I20
s(Vinsert
p5602
I42
VSimpleName: getMultiDataSource
p5603
tp5604
I1
s(Vinsert
p5605
I45
VStringLiteral: "TIMESTAMP WITH TIME ZONE"
p5606
tp5607
I1
s(Vinsert
p5608
I42
VSimpleName: setCursorName
p5609
tp5610
I9
s(Vinsert
p5611
I42
VSimpleName: transactionLeval
p5612
tp5613
I1
s(Vinsert
p5614
I45
VStringLiteral: "\u005ctKEY VARCHAR(20),\u005cn"
p5615
tp5616
I1
s(Vinsert
p5617
I42
VSimpleName: FilterAdapter
p5618
tp5619
I1
s(Vinsert
p5620
I42
VSimpleName: setPrimaryKey
p5621
tp5622
I1
s(Vinsert
p5623
I45
VStringLiteral: "using default value of database driver"
p5624
tp5625
I1
s(Vinsert
p5626
I42
VSimpleName: eval
p5627
tp5628
I3
s(Vinsert
p5629
I45
VStringLiteral: "} enter cache"
p5630
tp5631
I1
s(Vinsert
p5632
I45
VStringLiteral: "select * from t where id = "
p5633
tp5634
I4
s(Vinsert
p5635
I45
VStringLiteral: "\u005ct\u005c"CONTRACT_SERIAL\u005c", \u005cn"
p5636
tp5637
I1
s(Vinsert
p5638
I43
VSimpleType: Attribute
p5639
tp5640
I1
s(Vinsert
p5641
I42
VSimpleName: MutablePropertyValues
p5642
tp5643
I1
s(Vinsert
p5644
I43
VSimpleType: MySqlCursorCloseStatement
p5645
tp5646
I1
s(Vinsert
p5647
I42
VSimpleName: c5
p5648
tp5649
I1
s(Vinsert
p5650
I42
VSimpleName: Runnable
p5651
tp5652
I1
s(Vinsert
p5653
I42
VSimpleName: error_code
p5654
tp5655
I1
s(Vinsert
p5656
I45
VStringLiteral: "\u005ctKEY `k_c` (`c_mediumint`, `c_int`)\u005cn"
p5657
tp5658
I1
s(Vinsert
p5659
I45
VStringLiteral: "INSERT INTO t"
p5660
tp5661
I2
s(Vinsert
p5662
I45
VStringLiteral: "\u005ct, start_line, end_line\u005cn"
p5663
tp5664
I1
s(Vinsert
p5665
I42
VSimpleName: i
p5666
tp5667
I408
s(Vinsert
p5668
I45
VStringLiteral: "CREATE LOCAL TEMPORARY TABLE "
p5669
tp5670
I1
s(Vinsert
p5671
I45
VStringLiteral: "\u005ct\u005ct\u005ctCONTINUE;\u005cn"
p5672
tp5673
I1
s(Vinsert
p5674
I42
VSimpleName: MonitorCluster
p5675
tp5676
I2
s(Vinsert
p5677
I43
VSimpleType: SQLValuableExpr
p5678
tp5679
I2
s(Vinsert
p5680
I45
VStringLiteral: "f1"
p5681
tp5682
I1
s(Vinsert
p5683
I43
VSimpleType: HMappingColumn
p5684
tp5685
I4
s(Vinsert
p5686
I40
VQualifiedName: com.alibaba.druid.sql.ast.expr.SQLBinaryExpr
p5687
tp5688
I2
s(Vinsert
p5689
I42
VSimpleName: MySqlDropUser
p5690
tp5691
I1
s(Vinsert
p5692
I43
VSimpleType: SQLUtils
p5693
tp5694
I1
s(Vinsert
p5695
I42
VSimpleName: lastError
p5696
tp5697
I2
s(Vinsert
p5698
I42
VSimpleName: getCompositeType
p5699
tp5700
I2
s(Vinsert
p5701
I42
VSimpleName: ConnectionProxy
p5702
tp5703
I5
s(Vinsert
p5704
I42
VSimpleName: setMasterEnable
p5705
tp5706
I1
s(Vinsert
p5707
I45
VStringLiteral: " CHARSET "
p5708
tp5709
I1
s(Vinsert
p5710
I45
VStringLiteral: "\u005ctAND c1.partition_date = :partiondate;"
p5711
tp5712
I1
s(Vinsert
p5713
I42
VSimpleName: isIPAddressInRange
p5714
tp5715
I1
s(Vinsert
p5716
I42
VSimpleName: WallVisitorUtils
p5717
tp5718
I58
s(Vinsert
p5719
I42
VSimpleName: SQLIntervalExpr
p5720
tp5721
I1
s(Vinsert
p5722
I45
VStringLiteral: " WITH ("
p5723
tp5724
I1
s(Vinsert
p5725
I42
VSimpleName: failureDetectFuture
p5726
tp5727
I2
s(Vinsert
p5728
I40
VQualifiedName: x.noCopy
p5729
tp5730
I1
s(Vinsert
p5731
I42
VSimpleName: setWhiteListEnable
p5732
tp5733
I1
s(Vinsert
p5734
I43
VSimpleType: SQLUnaryExpr
p5735
tp5736
I7
s(Vinsert
p5737
I42
VSimpleName: mysqlColumn
p5738
tp5739
I6
s(Vinsert
p5740
I45
VStringLiteral: "-- Create server\u005cn"
p5741
tp5742
I1
s(Vinsert
p5743
I45
VStringLiteral: "\u005cn\u005ctPARTITION p0 VALUES LESS THAN (100),"
p5744
tp5745
I1
s(Vinsert
p5746
I42
VSimpleName: setValues
p5747
tp5748
I4
s(Vinsert
p5749
I42
VSimpleName: MockPreparedStatementFactory
p5750
tp5751
I2
s(Vinsert
p5752
I42
VSimpleName: executeQuery
p5753
tp5754
I28
s(Vinsert
p5755
I45
VStringLiteral: "show columns from test3"
p5756
tp5757
I1
s(Vinsert
p5758
I66
VTextElement:  XAResource.XA_RDONLY if the connection.isReadOnly(); XAResource.XA_OK otherwise
p5759
tp5760
I1
s(Vinsert
p5761
I43
VSimpleType: SQLFetchStatement
p5762
tp5763
I3
s(Vinsert
p5764
I45
VStringLiteral: " `ip` varchar(40) NOT NULL,"
p5765
tp5766
I1
s(Vinsert
p5767
I42
VSimpleName: MultiDataSourceStatManager
p5768
tp5769
I1
s(Vinsert
p5770
I40
VQualifiedName: x.cache
p5771
tp5772
I1
s(Vinsert
p5773
I42
VSimpleName: SQLStatementParser
p5774
tp5775
I20
s(Vinsert
p5776
I45
VStringLiteral: "\u005cn\u005ctPARTITION europe VALUES ('GERMANY', 'ITALY', 'SWITZERLAND'), "
p5777
tp5778
I2
s(Vinsert
p5779
I45
VStringLiteral: "\u005ct\u005ctLOGGING,\u005cn"
p5780
tp5781
I1
s(Vinsert
p5782
I45
VStringLiteral: "\u005ct\u005ct\u005ct, ITEM.ITEM_QUANTITY, SYS_ITEM.CATALOG_SOFTWARE_FLAG, P.COST_PRICE, P.COST_PRICE_PARAMETER, P.CONFIRM_FLAG\u005cn"
p5783
tp5784
I1
s(Vinsert
p5785
I45
VStringLiteral: "\u005cnhh string -- c_2"
p5786
tp5787
I1
s(Vinsert
p5788
I42
VSimpleName: perfMySql
p5789
tp5790
I1
s(Vinsert
p5791
I42
VSimpleName: commentCallBack
p5792
tp5793
I1
s(Vinsert
p5794
I42
VSimpleName: getInUseCount
p5795
tp5796
I1
s(Vinsert
p5797
I42
VSimpleName: writer
p5798
tp5799
I4
s(Vinsert
p5800
I45
VStringLiteral: "VARRAY"
p5801
tp5802
I1
s(Vinsert
p5803
I43
VSimpleType: PreparedStatementKey
p5804
tp5805
I5
s(Vinsert
p5806
I42
VSimpleName: xa_forget
p5807
tp5808
I1
s(Vinsert
p5809
I42
VSimpleName: nullable
p5810
tp5811
I1
s(Vinsert
p5812
I42
VSimpleName: MethodInfo
p5813
tp5814
I1
s(Vinsert
p5815
I43
VSimpleType: OdpsSelectQueryBlock
p5816
tp5817
I1
s(Vinsert
p5818
I42
VSimpleName: MySqlWallTest7
p5819
tp5820
I1
s(Vinsert
p5821
I42
VSimpleName: ifNotExists
p5822
tp5823
I3
s(Vinsert
p5824
I45
VStringLiteral: "DROP SEQUENCE "
p5825
tp5826
I2
s(Vinsert
p5827
I74
VParameterizedType: AtomicLongFieldUpdater<WallDenyStat>
p5828
tp5829
I1
s(Vinsert
p5830
I42
VSimpleName: getSize
p5831
tp5832
I1
s(Vinsert
p5833
I74
VParameterizedType: HashMap<String,String>
p5834
tp5835
I2
s(Vinsert
p5836
I45
VStringLiteral: "alter table test_lifecycle set lifecycle 50;"
p5837
tp5838
I1
s(Vinsert
p5839
I42
VSimpleName: toStatementList
p5840
tp5841
I8
s(Vinsert
p5842
I45
VStringLiteral: "\u005cn\u005ctcatalog_url VARCHAR2(50),"
p5843
tp5844
I2
s(Vinsert
p5845
I45
VStringLiteral: "\u005cthire_date;"
p5846
tp5847
I1
s(Vinsert
p5848
I42
VSimpleName: StackTraceElement
p5849
tp5850
I2
s(Vinsert
p5851
I43
VSimpleType: SQLIntervalExpr
p5852
tp5853
I1
s(Vinsert
p5854
I42
VSimpleName: options
p5855
tp5856
I4
s(Vinsert
p5857
I42
VSimpleName: SQLExistsExpr
p5858
tp5859
I2
s(Vinsert
p5860
I45
VStringLiteral: "\u005ct\u005ctINITIAL 4194304\u005cn"
p5861
tp5862
I2
s(Vinsert
p5863
I42
VSimpleName: afterResolve
p5864
tp5865
I8
s(Vinsert
p5866
I42
VSimpleName: add
p5867
tp5868
I169
s(Vinsert
p5869
I42
VSimpleName: threadNo
p5870
tp5871
I1
s(Vinsert
p5872
I45
VStringLiteral: "        ADD COLUMN variation_value_1 DECIMAL(30, 20) NULL DEFAULT NULL,\u005cn"
p5873
tp5874
I1
s(Vinsert
p5875
I40
VQualifiedName: ErrorCode.NONE_CONDITION
p5876
tp5877
I1
s(Vinsert
p5878
I42
VSimpleName: nestedTable
p5879
tp5880
I4
s(Vinsert
p5881
I42
VSimpleName: test_factory
p5882
tp5883
I1
s(Vinsert
p5884
I74
VParameterizedType: List<SQLPartitionBy>
p5885
tp5886
I1
s(Vinsert
p5887
I42
VSimpleName: clearBlackList
p5888
tp5889
I1
s(Vinsert
p5890
I43
VSimpleType: MergeStatFilter
p5891
tp5892
I1
s(Vinsert
p5893
I42
VSimpleName: getMaxConnectionAge
p5894
tp5895
I1
s(Vinsert
p5896
I45
VStringLiteral: "\u005cn\u005ct\u005ctCONSTRAINT check_divno CHECK (div_no BETWEEN 10 AND 99) DISABLE,"
p5897
tp5898
I2
s(Vinsert
p5899
I45
VStringLiteral: " identified by "
p5900
tp5901
I1
s(Vinsert
p5902
I43
VSimpleType: JSONWriter
p5903
tp5904
I2
s(Vinsert
p5905
I42
VSimpleName: parseCreateDbLink
p5906
tp5907
I1
s(Vinsert
p5908
I42
VSimpleName: lastErrorTimeMillis
p5909
tp5910
I1
s(Vinsert
p5911
I43
VSimpleType: AsOfFlashbackQueryClause
p5912
tp5913
I3
s(Vinsert
p5914
I42
VSimpleName: setParameterized
p5915
tp5916
I20
s(Vinsert
p5917
I40
VQualifiedName: x.quick
p5918
tp5919
I1
s(Vinsert
p5920
I45
VStringLiteral: "bvt/parser/antlr_grammers_v4_mysql/examples/"
p5921
tp5922
I1
s(Vinsert
p5923
I42
VSimpleName: assertFalse
p5924
tp5925
I99
s(Vinsert
p5926
I45
VStringLiteral: "number(12, 0)"
p5927
tp5928
I2
s(Vinsert
p5929
I42
VSimpleName: getBytes
p5930
tp5931
I6
s(Vinsert
p5932
I42
VSimpleName: getFirst
p5933
tp5934
I3
s(Vinsert
p5935
I42
VSimpleName: executeUpdate
p5936
tp5937
I1
s(Vinsert
p5938
I42
VSimpleName: function_lower
p5939
tp5940
I1
s(Vinsert
p5941
I42
VSimpleName: setKeepComments
p5942
tp5943
I1
s(Vinsert
p5944
I42
VSimpleName: parameterStr
p5945
tp5946
I2
s(Vinsert
p5947
I34
VNumberLiteral: 180
p5948
tp5949
I1
s(Vinsert
p5950
I42
VSimpleName: columName
p5951
tp5952
I1
s(Vinsert
p5953
I43
VSimpleType: PGMacAddrExpr
p5954
tp5955
I4
s(Vinsert
p5956
I45
VStringLiteral: "\u005ctUPDATE employees\u005cn"
p5957
tp5958
I1
s(Vinsert
p5959
I45
VStringLiteral: "com.alibaba.druid:type=JdbcStatManager"
p5960
tp5961
I1
s(Vinsert
p5962
I27
VInfixExpression: &&
p5963
tp5964
I150
s(Vinsert
p5965
I45
VStringLiteral: "\u005cn\u005ct\u005ct))"
p5966
tp5967
I1
s(Vinsert
p5968
I42
VSimpleName: statement_getResultSet
p5969
tp5970
I1
s(Vinsert
p5971
I43
VSimpleType: Log4JLogger
p5972
tp5973
I2
s(Vinsert
p5974
I42
VSimpleName: incrementHitCount
p5975
tp5976
I2
s(Vinsert
p5977
I45
VStringLiteral: "-+\u005cn"
p5978
tp5979
I1
s(Vinsert
p5980
I42
VSimpleName: OracleOuterExpr
p5981
tp5982
I2
s(Vinsert
p5983
I45
VStringLiteral: "druid.timeBetweenLogStatsMillis"
p5984
tp5985
I2
s(Vinsert
p5986
I45
VStringLiteral: "INITIAL"
p5987
tp5988
I1
s(Vinsert
p5989
I42
VSimpleName: setOrderBySiblings
p5990
tp5991
I1
s(Vinsert
p5992
I42
VSimpleName: containsValue
p5993
tp5994
I1
s(Vinsert
p5995
I45
VStringLiteral: "\u005cn\u005ctCHECK PARTITION p1"
p5996
tp5997
I1
s(Vinsert
p5998
I45
VStringLiteral: " ON UPDATE "
p5999
tp6000
I2
s(Vinsert
p6001
I45
VStringLiteral: "REPEATABLE READ"
p6002
tp6003
I1
s(Vinsert
p6004
I42
VSimpleName: getMaster
p6005
tp6006
I1
s(Vinsert
p6007
I42
VSimpleName: setStrictSyntaxCheck
p6008
tp6009
I1
s(Vinsert
p6010
I42
VSimpleName: MySqlShowStatement
p6011
tp6012
I1
s(Vinsert
p6013
I40
VQualifiedName: ResultSet.CONCUR_UPDATABLE
p6014
tp6015
I2
s(Vinsert
p6016
I42
VSimpleName: getLoginTimeout
p6017
tp6018
I2
s(Vinsert
p6019
I45
VStringLiteral: "\u005ctCOL NUMBER(8),\u005cn"
p6020
tp6021
I1
s(Vinsert
p6022
I45
VStringLiteral: "14a fb\u005cn"
p6023
tp6024
I1
s(Vinsert
p6025
I42
VSimpleName: emptyList
p6026
tp6027
I20
s(Vinsert
p6028
I45
VStringLiteral: "\u005ct\u005ct\u005ctand mm = 0\u005cn"
p6029
tp6030
I1
s(Vinsert
p6031
I45
VStringLiteral: "SELECT employee_id, last_name, department_id, job_id\u005cn"
p6032
tp6033
I1
s(Vinsert
p6034
I42
VSimpleName: definer
p6035
tp6036
I5
s(Vinsert
p6037
I42
VSimpleName: hash2
p6038
tp6039
I1
s(Vinsert
p6040
I42
VSimpleName: timespan
p6041
tp6042
I2
s(Vinsert
p6043
I45
VStringLiteral: "abcdef"
p6044
tp6045
I1
s(Vinsert
p6046
I43
VSimpleType: Log4jFilter
p6047
tp6048
I1
s(Vinsert
p6049
I45
VStringLiteral: "select shop_name, customer_id, total_price;\u005cn"
p6050
tp6051
I1
s(Vinsert
p6052
I43
VSimpleType: SQLHint
p6053
tp6054
I6
s(Vinsert
p6055
I45
VStringLiteral: "LOGS"
p6056
tp6057
I1
s(Vinsert
p6058
I45
VStringLiteral: "varying"
p6059
tp6060
I1
s(Vinsert
p6061
I42
VSimpleName: getDecrypter
p6062
tp6063
I2
s(Vinsert
p6064
I42
VSimpleName: connectionCloseCount
p6065
tp6066
I2
s(Vinsert
p6067
I42
VSimpleName: rightExp
p6068
tp6069
I3
s(Vinsert
p6070
I42
VSimpleName: dataSource_connect
p6071
tp6072
I4
s(Vinsert
p6073
I5
VArrayType: Object[]
p6074
tp6075
I10
s(Vinsert
p6076
I45
VStringLiteral: "select count(*) from t"
p6077
tp6078
I1
s(Vinsert
p6079
I42
VSimpleName: getTop
p6080
tp6081
I1
s(Vinsert
p6082
I40
VQualifiedName: Token.PERCENT
p6083
tp6084
I1
s(Vinsert
p6085
I45
VStringLiteral: "\u005cn\u005ct\u005ctUNION ALL"
p6086
tp6087
I1
s(Vinsert
p6088
I42
VSimpleName: SQLTransformUtils
p6089
tp6090
I4
s(Vinsert
p6091
I42
VSimpleName: setHeadHints
p6092
tp6093
I1
s(Vinsert
p6094
I42
VSimpleName: connectedTimeNano
p6095
tp6096
I1
s(Vinsert
p6097
I42
VSimpleName: tablePool
p6098
tp6099
I1
s(Vinsert
p6100
I40
VQualifiedName: VisitorFeature.OutputParameterized
p6101
tp6102
I4
s(Vinsert
p6103
I45
VStringLiteral: "WITH READ ONLY;"
p6104
tp6105
I1
s(Vinsert
p6106
I42
VSimpleName: getByte
p6107
tp6108
I1
s(Vinsert
p6109
I66
VTextElement: useful in situations where you want to use Log4J to log iBATIS activity but commons logging is on the classpath.
p6110
tp6111
I1
s(Vinsert
p6112
I40
VQualifiedName: Token.AT
p6113
tp6114
I2
s(Vinsert
p6115
I43
VSimpleType: SqlMapSession
p6116
tp6117
I2
s(Vinsert
p6118
I45
VStringLiteral: "ConnectionAliveMillisMax"
p6119
tp6120
I1
s(Vinsert
p6121
I42
VSimpleName: scaleOrLength
p6122
tp6123
I1
s(Vinsert
p6124
I45
VStringLiteral: "                   and t.ctype = '201'"
p6125
tp6126
I1
s(Vinsert
p6127
I42
VSimpleName: uri
p6128
tp6129
I3
s(Vinsert
p6130
I42
VSimpleName: leftExprTableSource
p6131
tp6132
I1
s(Vinsert
p6133
I42
VSimpleName: MBEAN_NAME
p6134
tp6135
I1
s(Vinsert
p6136
I42
VSimpleName: SQLPartition
p6137
tp6138
I5
s(Vinsert
p6139
I40
VQualifiedName: Token.INTERVAL
p6140
tp6141
I2
s(Vinsert
p6142
I40
VQualifiedName: SQLWithSubqueryClause.Entry
p6143
tp6144
I5
s(Vinsert
p6145
I45
VStringLiteral: "\u005ct\u005ctMAXTRANS 255\u005cn"
p6146
tp6147
I6
s(Vinsert
p6148
I40
VQualifiedName: SQLBinaryOperator.BooleanOr
p6149
tp6150
I2
s(Vinsert
p6151
I45
VStringLiteral: "\u005cnselect *"
p6152
tp6153
I2
s(Vinsert
p6154
I42
VSimpleName: getResultSetType
p6155
tp6156
I1
s(Vinsert
p6157
I42
VSimpleName: MySqlUserName
p6158
tp6159
I1
s(Vinsert
p6160
I45
VStringLiteral: "\u005ct\u005ct\u005ctFREELISTS 1\u005cn"
p6161
tp6162
I6
s(Vinsert
p6163
I42
VSimpleName: test_dupCloseLogEnable
p6164
tp6165
I1
s(Vinsert
p6166
I42
VSimpleName: destroySchedulerFuture
p6167
tp6168
I1
s(Vinsert
p6169
I45
VStringLiteral: " WHERE (`Extent1`.`State` > -1)"
p6170
tp6171
I1
s(Vinsert
p6172
I43
VSimpleType: Scan
p6173
tp6174
I1
s(Vinsert
p6175
I45
VStringLiteral: "PARTITIONED BY (\u005cn"
p6176
tp6177
I1
s(Vinsert
p6178
I43
VSimpleType: SQLServerTop
p6179
tp6180
I4
s(Vinsert
p6181
I42
VSimpleName: isExceptionFatal
p6182
tp6183
I8
s(Vinsert
p6184
I45
VStringLiteral: "SELECT t.calendar_year, p.prod_id, SUM(s.amount_sold) AS sum_sales\u005cn"
p6185
tp6186
I1
s(Vinsert
p6187
I42
VSimpleName: OracleDataTypeIntervalDay
p6188
tp6189
I1
s(Vinsert
p6190
I45
VStringLiteral: "\u005ctMEMBER FUNCTION ODCIAggregateMerge (self IN OUT connstrBycomma, ctx2 IN connstrBycomma) RETURN number\u005cn"
p6191
tp6192
I1
s(Vinsert
p6193
I42
VSimpleName: encryptedPassword
p6194
tp6195
I1
s(Vinsert
p6196
I42
VSimpleName: longVal
p6197
tp6198
I1
s(Vinsert
p6199
I45
VStringLiteral: "\u005ctAS\u005cn"
p6200
tp6201
I1
s(Vinsert
p6202
I42
VSimpleName: scheduleAtFixedRate
p6203
tp6204
I3
s(Vinsert
p6205
I45
VStringLiteral: "lateral view "
p6206
tp6207
I1
s(Vinsert
p6208
I45
VStringLiteral: "\u005cn\u005ctANALYZE PARTITION p1"
p6209
tp6210
I1
s(Vinsert
p6211
I45
VStringLiteral: "select ht.* from t_books ht"
p6212
tp6213
I1
s(Vinsert
p6214
I42
VSimpleName: printOpSpace
p6215
tp6216
I1
s(Vinsert
p6217
I45
VStringLiteral: " WRAPPED "
p6218
tp6219
I1
s(Vinsert
p6220
I42
VSimpleName: maxEvictableIdleTimeMillis
p6221
tp6222
I2
s(Vinsert
p6223
I43
VSimpleType: MyClassLoader
p6224
tp6225
I2
s(Vinsert
p6226
I42
VSimpleName: TraceEvent
p6227
tp6228
I1
s(Vinsert
p6229
I42
VSimpleName: upBound
p6230
tp6231
I1
s(Vinsert
p6232
I42
VSimpleName: xaResource
p6233
tp6234
I2
s(Vinsert
p6235
I45
VStringLiteral: "syntax error, expect DELETE or UPDATE, actual "
p6236
tp6237
I1
s(Vinsert
p6238
I42
VSimpleName: lockType
p6239
tp6240
I4
s(Vinsert
p6241
I42
VSimpleName: parsePartitionValues
p6242
tp6243
I1
s(Vinsert
p6244
I45
VStringLiteral: "\u005cn\u005ctIMPORT PARTITION p1"
p6245
tp6246
I1
s(Vinsert
p6247
I42
VSimpleName: SQLAlterTableDropKey
p6248
tp6249
I1
s(Vinsert
p6250
I45
VStringLiteral: "\u005ct\u005ctSELECT *\u005cn"
p6251
tp6252
I1
s(Vinsert
p6253
I42
VSimpleName: setRight
p6254
tp6255
I4
s(Vinsert
p6256
I42
VSimpleName: JdbcStatManager
p6257
tp6258
I14
s(Vinsert
p6259
I43
VSimpleType: WebSessionStat
p6260
tp6261
I6
s(Vinsert
p6262
I42
VSimpleName: getHaDataSource
p6263
tp6264
I1
s(Vinsert
p6265
I42
VSimpleName: fireEvent
p6266
tp6267
I1
s(Vinsert
p6268
I45
VStringLiteral: "ALTER TABLE trans"
p6269
tp6270
I2
s(Vinsert
p6271
I45
VStringLiteral: "\u005cnLIMIT 10"
p6272
tp6273
I1
s(Vinsert
p6274
I45
VStringLiteral: "\u005cn\u005ctenable lifecycle;"
p6275
tp6276
I1
s(Vinsert
p6277
I47
VSuperFieldAccess
p6278
tp6279
I1
s(Vinsert
p6280
I42
VSimpleName: asList
p6281
tp6282
I4
s(Vinsert
p6283
I43
VSimpleType: NullPointerException
p6284
tp6285
I1
s(Vinsert
p6286
I42
VSimpleName: connectionHoldHistogram
p6287
tp6288
I1
s(Vinsert
p6289
I42
VSimpleName: subPartitionBy
p6290
tp6291
I1
s(Vinsert
p6292
I42
VSimpleName: getSimleName
p6293
tp6294
I1
s(Vinsert
p6295
I34
VNumberLiteral: 5000
p6296
tp6297
I1
s(Vinsert
p6298
I42
VSimpleName: useLocalSessionState
p6299
tp6300
I4
s(Vinsert
p6301
I45
VStringLiteral: "\u005ct\u005c"KEEP_OPTIONS\u005c"\u005cn"
p6302
tp6303
I1
s(Vinsert
p6304
I45
VStringLiteral: "\u005ctAND c1.contract_header_id = :headerid\u005cn"
p6305
tp6306
I1
s(Vinsert
p6307
I42
VSimpleName: idleTimeMillis
p6308
tp6309
I1
s(Vinsert
p6310
I40
VQualifiedName: Token.ROW
p6311
tp6312
I2
s(Vinsert
p6313
I45
VStringLiteral: "CREATE TABLE "
p6314
tp6315
I1
s(Vinsert
p6316
I45
VStringLiteral: "(\u005cn"
p6317
tp6318
I2
s(Vinsert
p6319
I45
VStringLiteral: "alter table myp.table2 drop if exists  partition(ds=20161209) \u005cn"
p6320
tp6321
I1
s(Vinsert
p6322
I42
VSimpleName: HiveASTVisitor
p6323
tp6324
I3
s(Vinsert
p6325
I42
VSimpleName: setConnectCount
p6326
tp6327
I1
s(Vinsert
p6328
I45
VStringLiteral: "FROM t\u005cn"
p6329
tp6330
I4
s(Vinsert
p6331
I42
VSimpleName: selectCount
p6332
tp6333
I1
s(Vinsert
p6334
I45
VStringLiteral: "\u005ctAND v.id = c.id"
p6335
tp6336
I1
s(Vinsert
p6337
I45
VStringLiteral: " PRIMARY KEY (`id`)"
p6338
tp6339
I1
s(Vinsert
p6340
I42
VSimpleName: metaDataIdSeed
p6341
tp6342
I2
s(Vinsert
p6343
I42
VSimpleName: SQLWithSubqueryClause
p6344
tp6345
I5
s(Vinsert
p6346
I42
VSimpleName: write
p6347
tp6348
I6
s(Vinsert
p6349
I42
VSimpleName: checkCondition
p6350
tp6351
I4
s(Vinsert
p6352
I45
VStringLiteral: "\u005cn('a2', 'b2'),"
p6353
tp6354
I2
s(Vinsert
p6355
I43
VSimpleType: Dao
p6356
tp6357
I1
s(Vinsert
p6358
I42
VSimpleName: date
p6359
tp6360
I1
s(Vinsert
p6361
I45
VStringLiteral: "druid.monitor.client.collectWebURIEnable"
p6362
tp6363
I1
s(Vinsert
p6364
I45
VStringLiteral: "SELECT 'Server[@Name=' + quotename(CAST(serverproperty(N'Servername') AS sysname),'''') + ']' + '/Collation[@Name=' + quotename(cl.name,'''') + ']' AS [Urn], cl.name AS [Name], CAST(COLLATIONPROPERTY(name, 'CodePage') AS int) AS [CodePage], CAST(COLLATIONPROPERTY(name, 'LCID') AS int) AS [LocaleID], CAST(COLLATIONPROPERTY(name, 'ComparisonStyle') AS int) AS [ComparisonStyle], cl.description AS [Description], CAST(COLLATIONPROPERTY(name, 'Version') AS int) AS [CollationVersion] FROM sys.fn_helpcollations() cl ORDER BY [Name] ASC"
p6365
tp6366
I1
s(Vinsert
p6367
I45
VStringLiteral: "LEFT OUTER JOIN (\u005cn"
p6368
tp6369
I1
s(Vinsert
p6370
I43
VSimpleType: OracleExportParameterVisitor
p6371
tp6372
I1
s(Vinsert
p6373
I45
VStringLiteral: "\u005cnGROUP BY c1"
p6374
tp6375
I1
s(Vinsert
p6376
I43
VSimpleType: HandlerList
p6377
tp6378
I2
s(Vinsert
p6379
I45
VStringLiteral: "2 <= 2"
p6380
tp6381
I1
s(Vinsert
p6382
I42
VSimpleName: histogram_10_100
p6383
tp6384
I1
s(Vinsert
p6385
I43
VSimpleType: SQLIdentifierExpr
p6386
tp6387
I86
s(Vinsert
p6388
I42
VSimpleName: doPrivileged
p6389
tp6390
I2
s(Vinsert
p6391
I40
VQualifiedName: com.alibaba.druid.sql.SQLUtils
p6392
tp6393
I4
s(Vinsert
p6394
I45
VStringLiteral: " FROM `paybank` AS `Extent1`"
p6395
tp6396
I1
s(Vinsert
p6397
I45
VStringLiteral: "LIMIT 1"
p6398
tp6399
I2
s(Vinsert
p6400
I42
VSimpleName: connImpl
p6401
tp6402
I2
s(Vinsert
p6403
I45
VStringLiteral: "\u005ct\u005c"OWNER_MEMBER_ID\u005c", \u005cn"
p6404
tp6405
I1
s(Vinsert
p6406
I45
VStringLiteral: "\u005cn\u005ct\u005ctOR d.indkey[7] = a.attnum"
p6407
tp6408
I1
s(Vinsert
p6409
I45
VStringLiteral: "\u005ct\u005ctfrom openapp_log_d\u005cn"
p6410
tp6411
I1
s(Vinsert
p6412
I42
VSimpleName: testExpr
p6413
tp6414
I7
s(Vinsert
p6415
I45
VStringLiteral: "JOIN ktv_epm.ktv_eq_rma_header rma ON rma.rma_id = rbi.rma_id \u005cn"
p6416
tp6417
I1
s(Vinsert
p6418
I45
VStringLiteral: "timespan"
p6419
tp6420
I1
s(Vinsert
p6421
I45
VStringLiteral: "\u005cn JOIN fund_base_cv_ad_auction_ocr_pv_tfs_ocr b ON a.tfs = b.tfs"
p6422
tp6423
I2
s(Vinsert
p6424
I45
VStringLiteral: "default directory "
p6425
tp6426
I1
s(Vinsert
p6427
I42
VSimpleName: cachedColumns2
p6428
tp6429
I1
s(Vinsert
p6430
I42
VSimpleName: getAsciiStream
p6431
tp6432
I1
s(Vinsert
p6433
I42
VSimpleName: EvalMethodTest_lcase
p6434
tp6435
I1
s(Vinsert
p6436
I45
VStringLiteral: "com.xxx.a(int)"
p6437
tp6438
I1
s(Vinsert
p6439
I43
VSimpleType: SQLIntervalUnit
p6440
tp6441
I1
s(Vinsert
p6442
I42
VSimpleName: xidHash
p6443
tp6444
I1
s(Vinsert
p6445
I45
VStringLiteral: "explain extended select * from foo"
p6446
tp6447
I1
s(Vinsert
p6448
I45
VStringLiteral: "\u005ct\u005ct\u005ctorder by cnt desc\u005cn"
p6449
tp6450
I1
s(Vinsert
p6451
I45
VStringLiteral: "\u005ct\u005ctAND a.row_wait_obj# <> -1\u005cn"
p6452
tp6453
I1
s(Vinsert
p6454
I45
VStringLiteral: "SELECT XX.*, ROWNUM AS RN"
p6455
tp6456
I2
s(Vinsert
p6457
I42
VSimpleName: PhoenixSchemaStatVisitor
p6458
tp6459
I1
s(Vinsert
p6460
I42
VSimpleName: passwordParam
p6461
tp6462
I1
s(Vinsert
p6463
I45
VStringLiteral: "TABLESPACE \u005c"APP_DATA1K\u005c"\u005cn"
p6464
tp6465
I1
s(Vinsert
p6466
I45
VStringLiteral: "SPLIT"
p6467
tp6468
I1
s(Vinsert
p6469
I42
VSimpleName: setForUpdate
p6470
tp6471
I1
s(Vinsert
p6472
I45
VStringLiteral: "executeErrorCount"
p6473
tp6474
I1
s(Vinsert
p6475
I42
VSimpleName: build
p6476
tp6477
I3
s(Vinsert
p6478
I42
VSimpleName: sessionScope
p6479
tp6480
I3
s(Vinsert
p6481
I42
VSimpleName: MySqlOutFileExpr
p6482
tp6483
I3
s(Vinsert
p6484
I45
VStringLiteral: "\u005ct, CANCELED_CASH, RECEIVERD_CASH, O_S_CASH, utl_raw.cast_to_raw(REMARK) AS REMARK, FENTAN_CHECK\u005cn"
p6485
tp6486
I1
s(Vinsert
p6487
I43
VSimpleType: SQLUnionQuery
p6488
tp6489
I14
s(Vinsert
p6490
I42
VSimpleName: sqlEx
p6491
tp6492
I1
s(Vinsert
p6493
I43
VSimpleType: OracleSelectTableReference
p6494
tp6495
I2
s(Vinsert
p6496
I42
VSimpleName: wallStats
p6497
tp6498
I1
s(Vinsert
p6499
I74
VParameterizedType: ArrayList<WallUpdateCheckItem>
p6500
tp6501
I5
s(Vinsert
p6502
I43
VSimpleType: InvocationTargetException
p6503
tp6504
I1
s(Vinsert
p6505
I43
VSimpleType: OracleDateExpr
p6506
tp6507
I3
s(Vinsert
p6508
I45
VStringLiteral: "department_id"
p6509
tp6510
I1
s(Vinsert
p6511
I42
VSimpleName: setSort
p6512
tp6513
I1
s(Vinsert
p6514
I42
VSimpleName: SQLTableConstraint
p6515
tp6516
I1
s(Vinsert
p6517
I43
VSimpleType: ConfigFilter
p6518
tp6519
I3
s(Vinsert
p6520
I40
VQualifiedName: JdbcUtils.POSTGRESQL
p6521
tp6522
I2
s(Vinsert
p6523
I45
VStringLiteral: "\u005cnWHERE ROWNUM <= 10"
p6524
tp6525
I1
s(Vinsert
p6526
I40
VQualifiedName: PGWallProvider.DEFAULT_CONFIG_DIR
p6527
tp6528
I1
s(Vinsert
p6529
I42
VSimpleName: memoryEnd
p6530
tp6531
I6
s(Vinsert
p6532
I42
VSimpleName: incrementAndGetEffectRowCount
p6533
tp6534
I1
s(Vinsert
p6535
I43
VSimpleType: Method
p6536
tp6537
I24
s(Vinsert
p6538
I42
VSimpleName: queryBlockFromIsNull
p6539
tp6540
I1
s(Vinsert
p6541
I42
VSimpleName: findTableSource
p6542
tp6543
I2
s(Vinsert
p6544
I45
VStringLiteral: "SELECT s1\u005cnFROM t1\u005cnWHERE s1 IN (SELECT s1\u005cn\u005ctFROM t2)"
p6545
tp6546
I1
s(Vinsert
p6547
I45
VStringLiteral: "\u005ct\u005ctOR A.ZIPCODE LIKE ('%' || ? || '%')\u005cn"
p6548
tp6549
I1
s(Vinsert
p6550
I43
VSimpleType: MTable
p6551
tp6552
I1
s(Vinsert
p6553
I42
VSimpleName: parseAlter
p6554
tp6555
I2
s(Vinsert
p6556
I43
VSimpleType: MySqlOutFileExpr
p6557
tp6558
I3
s(Vinsert
p6559
I42
VSimpleName: setFilter
p6560
tp6561
I1
s(Vinsert
p6562
I45
VStringLiteral: "\u005ctr rational := rational_operations.make_rational(numerator * x.denominator + x.numerator * denominator, denominator * x.denominator);\u005cn"
p6563
tp6564
I1
s(Vinsert
p6565
I42
VSimpleName: SqlMapSession
p6566
tp6567
I2
s(Vinsert
p6568
I45
VStringLiteral: "RETURN NUMBER\u005cn"
p6569
tp6570
I1
s(Vinsert
p6571
I13
VCharacterLiteral: '\u005cn'
p6572
tp6573
I1
s(Vinsert
p6574
I42
VSimpleName: getConditionExpr
p6575
tp6576
I2
s(Vinsert
p6577
I42
VSimpleName: selectListCache
p6578
tp6579
I4
s(Vinsert
p6580
I45
VStringLiteral: "jdbc:oracle:thin:@10.20.144.80:1521:orcl"
p6581
tp6582
I1
s(Vinsert
p6583
I42
VSimpleName: setString
p6584
tp6585
I4
s(Vinsert
p6586
I42
VSimpleName: test_setTime
p6587
tp6588
I1
s(Vinsert
p6589
I45
VStringLiteral: "log4j2"
p6590
tp6591
I1
s(Vinsert
p6592
I42
VSimpleName: MultiDataSourceConnection
p6593
tp6594
I1
s(Vinsert
p6595
I45
VStringLiteral: "ALTER COLUMN "
p6596
tp6597
I1
s(Vinsert
p6598
I40
VQualifiedName: SQLBinaryOperator.Assignment
p6599
tp6600
I1
s(Vinsert
p6601
I42
VSimpleName: setInterval
p6602
tp6603
I2
s(Vinsert
p6604
I45
VStringLiteral: "\u005ctFUNCTION VARCHAR(1002),\u005cn"
p6605
tp6606
I2
s(Vinsert
p6607
I42
VSimpleName: EvalMethodTest_lower
p6608
tp6609
I1
s(Vinsert
p6610
I45
VStringLiteral: "[Ad_Wait_Start_Time] varchar(255) NULL,\u005cn"
p6611
tp6612
I1
s(Vinsert
p6613
I45
VStringLiteral: "select 14,13,12,11,10,@@version_compile_os,8,7,6,5,4,3,2,1"
p6614
tp6615
I1
s(Vinsert
p6616
I42
VSimpleName: setValue
p6617
tp6618
I25
s(Vinsert
p6619
I42
VSimpleName: parserContext
p6620
tp6621
I2
s(Vinsert
p6622
I13
VCharacterLiteral: '['
p6623
tp6624
I1
s(Vinsert
p6625
I42
VSimpleName: nameGTEQ
p6626
tp6627
I1
s(Vinsert
p6628
I45
VStringLiteral: "0x"
p6629
tp6630
I1
s(Vinsert
p6631
I40
VQualifiedName: NodeType.DataSource
p6632
tp6633
I1
s(Vinsert
p6634
I42
VSimpleName: getTenantTablePattern
p6635
tp6636
I1
s(Vinsert
p6637
I43
VSimpleType: PGCurrentOfExpr
p6638
tp6639
I1
s(Vinsert
p6640
I45
VStringLiteral: ", driver "
p6641
tp6642
I1
s(Vinsert
p6643
I42
VSimpleName: toJSONString
p6644
tp6645
I3
s(Vinsert
p6646
I42
VSimpleName: PreparedStatementHolder
p6647
tp6648
I12
s(Vinsert
p6649
I45
VStringLiteral: "\u005cn\u005ct\u005c"USER_LOGIN\u005c" VARCHAR2(40 BYTE),"
p6650
tp6651
I2
s(Vinsert
p6652
I45
VStringLiteral: "java.naming.factory.initial"
p6653
tp6654
I1
s(Vinsert
p6655
I42
VSimpleName: TabledDataPrinter
p6656
tp6657
I2
s(Vinsert
p6658
I42
VSimpleName: getNames
p6659
tp6660
I1
s(Vinsert
p6661
I45
VStringLiteral: "IO"
p6662
tp6663
I1
s(Vinsert
p6664
I45
VStringLiteral: " end if;\u005cn"
p6665
tp6666
I1
s(Vinsert
p6667
I42
VSimpleName: lineItemCount
p6668
tp6669
I1
s(Vinsert
p6670
I45
VStringLiteral: "\u005ct\u005c"IS_FROM_MEMBER\u005c" CHAR(1) NOT NULL ENABLE, \u005cn"
p6671
tp6672
I1
s(Vinsert
p6673
I40
VQualifiedName: java.util.concurrent.atomic.AtomicLong
p6674
tp6675
I3
s(Vinsert
p6676
I42
VSimpleName: ThreadLocal
p6677
tp6678
I1
s(Vinsert
p6679
I42
VSimpleName: parseIndexHint
p6680
tp6681
I1
s(Vinsert
p6682
I45
VStringLiteral: "''"
p6683
tp6684
I2
s(Vinsert
p6685
I45
VStringLiteral: "\u005cnFROM (SELECT XX.*, ROWNUM AS RN"
p6686
tp6687
I1
s(Vinsert
p6688
I45
VStringLiteral: "select last_name, employee_id, manager_id, LEVEL\u005cn"
p6689
tp6690
I2
s(Vinsert
p6691
I42
VSimpleName: constructor
p6692
tp6693
I3
s(Vinsert
p6694
I42
VSimpleName: Comparable
p6695
tp6696
I2
s(Vinsert
p6697
I45
VStringLiteral: "\u005ct\u005ctt3.ver\u005cn"
p6698
tp6699
I1
s(Vinsert
p6700
I42
VSimpleName: Violation
p6701
tp6702
I2
s(Vinsert
p6703
I42
VSimpleName: getNumBusyConnections
p6704
tp6705
I1
s(Vinsert
p6706
I43
VSimpleType: Wrapper
p6707
tp6708
I1
s(Vinsert
p6709
I43
VSimpleType: PGBoxExpr
p6710
tp6711
I3
s(Vinsert
p6712
I42
VSimpleName: WindowClause
p6713
tp6714
I1
s(Vinsert
p6715
I42
VSimpleName: setUpdateAllow
p6716
tp6717
I2
s(Vinsert
p6718
I42
VSimpleName: getRawObject
p6719
tp6720
I1
s(Vinsert
p6721
I42
VSimpleName: SchemaObjectImpl
p6722
tp6723
I1
s(Vinsert
p6724
I42
VSimpleName: rsaDecrypter
p6725
tp6726
I2
s(Vinsert
p6727
I45
VStringLiteral: "DELETE FROM t\u005cn"
p6728
tp6729
I1
s(Vinsert
p6730
I45
VStringLiteral: "\u005ct\u005ct)\u005cn"
p6731
tp6732
I7
s(Vinsert
p6733
I42
VSimpleName: setRenameTableAllow
p6734
tp6735
I1
s(Vinsert
p6736
I45
VStringLiteral: "\u005cn\u005ctdiv_no NUMBER(2),"
p6737
tp6738
I2
s(Vinsert
p6739
I45
VStringLiteral: "select * from t where not match('', '') or (c > 0 and d >0)"
p6740
tp6741
I1
s(Vinsert
p6742
I45
VStringLiteral: "STORE AS ORC;"
p6743
tp6744
I1
s(Vinsert
p6745
I42
VSimpleName: getTables
p6746
tp6747
I199
s(Vinsert
p6748
I42
VSimpleName: setOriginColumn
p6749
tp6750
I1
s(Vinsert
p6751
I45
VStringLiteral: ") A\u005cn"
p6752
tp6753
I1
s(Vinsert
p6754
I42
VSimpleName: text
p6755
tp6756
I114
s(Vinsert
p6757
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION ch_c,"
p6758
tp6759
I2
s(Vinsert
p6760
I83
VModifier: private
p6761
tp6762
I29
s(Vinsert
p6763
I45
VStringLiteral: "select * from t_xiaoxi where rowid in(select rid from (select rownum rn,rid from(select rowid rid,cid from t_xiaoxi  order by cid desc) where rownum<10000) where rn>9980) order by cid desc;"
p6764
tp6765
I1
s(Vinsert
p6766
I45
VStringLiteral: "druid.filters"
p6767
tp6768
I1
s(Vinsert
p6769
I45
VStringLiteral: "LOG"
p6770
tp6771
I6
s(Vinsert
p6772
I45
VStringLiteral: "| c_blob       | blob         | NO   |     | NULL                |                             |\u005cn"
p6773
tp6774
I1
s(Vinsert
p6775
I42
VSimpleName: printExpr
p6776
tp6777
I6
s(Vinsert
p6778
I45
VStringLiteral: "  KEY `k_d` (`c_char`,`c_bigint`)\u005cn"
p6779
tp6780
I1
s(Vinsert
p6781
I42
VSimpleName: nclob
p6782
tp6783
I2
s(Vinsert
p6784
I42
VSimpleName: parseTableSourceRest
p6785
tp6786
I2
s(Vinsert
p6787
I45
VStringLiteral: "\u005ctAND p.prod_id = s.prod_id\u005cn"
p6788
tp6789
I1
s(Vinsert
p6790
I42
VSimpleName: loopCount
p6791
tp6792
I1
s(Vinsert
p6793
I42
VSimpleName: statementPool
p6794
tp6795
I3
s(Vinsert
p6796
I45
VStringLiteral: "TRUNCATE TABLE "
p6797
tp6798
I1
s(Vinsert
p6799
I43
VSimpleType: SQLConstaint
p6800
tp6801
I1
s(Vinsert
p6802
I45
VStringLiteral: "\u005cn\u005ctADD PARTITION (PARTITION p3 VALUES LESS THAN (2000))"
p6803
tp6804
I1
s(Vinsert
p6805
I42
VSimpleName: quoteTable
p6806
tp6807
I1
s(Vinsert
p6808
I43
VSimpleType: Schema
p6809
tp6810
I1
s(Vinsert
p6811
I42
VSimpleName: Limit
p6812
tp6813
I2
s(Vinsert
p6814
I40
VQualifiedName: LockType.READ_LOCAL
p6815
tp6816
I1
s(Vinsert
p6817
I45
VStringLiteral: "\u005ct\u005ctCELL_FLASH_CACHE DEFAULT\u005cn"
p6818
tp6819
I5
s(Vinsert
p6820
I42
VSimpleName: SYS_PROP_CONFIG_KEY
p6821
tp6822
I1
s(Vinsert
p6823
I42
VSimpleName: getThreadId
p6824
tp6825
I1
s(Vinsert
p6826
I45
VStringLiteral: ") t3\u005cn"
p6827
tp6828
I1
s(Vinsert
p6829
I42
VSimpleName: methodParams
p6830
tp6831
I1
s(Vinsert
p6832
I45
VStringLiteral: "                   where admin_member_seq = 45654723"
p6833
tp6834
I1
s(Vinsert
p6835
I45
VStringLiteral: "  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\u005cn"
p6836
tp6837
I1
s(Vinsert
p6838
I42
VSimpleName: f_test_proxool
p6839
tp6840
I2
s(Vinsert
p6841
I42
VSimpleName: OracleExtractExpr
p6842
tp6843
I2
s(Vinsert
p6844
I42
VSimpleName: objectName
p6845
tp6846
I17
s(Vinsert
p6847
I40
VQualifiedName: Token.POUNDGT
p6848
tp6849
I1
s(Vinsert
p6850
I42
VSimpleName: client
p6851
tp6852
I6
s(Vinsert
p6853
I42
VSimpleName: getWaitThreadCount
p6854
tp6855
I2
s(Vinsert
p6856
I45
VStringLiteral: "DEALLOCATE PREPARE "
p6857
tp6858
I1
s(Vinsert
p6859
I40
VQualifiedName: JdbcParameterNull.DATE
p6860
tp6861
I1
s(Vinsert
p6862
I42
VSimpleName: Appendable
p6863
tp6864
I4
s(Vinsert
p6865
I42
VSimpleName: createConnectionId
p6866
tp6867
I3
s(Vinsert
p6868
I42
VSimpleName: OracleFunctionDataType
p6869
tp6870
I4
s(Vinsert
p6871
I42
VSimpleName: isIgnoreDeleteTriggers
p6872
tp6873
I1
s(Vinsert
p6874
I43
VSimpleType: PGExprParser
p6875
tp6876
I11
s(Vinsert
p6877
I45
VStringLiteral: "nvarchar2"
p6878
tp6879
I1
s(Vinsert
p6880
I42
VSimpleName: serialVersionUID
p6881
tp6882
I14
s(Vinsert
p6883
I42
VSimpleName: OracleLabelStatement
p6884
tp6885
I1
s(Vinsert
p6886
I40
VQualifiedName: Token.USER
p6887
tp6888
I1
s(Vinsert
p6889
I45
VStringLiteral: "\u005ctINITIAL 81920\u005cn"
p6890
tp6891
I2
s(Vinsert
p6892
I43
VSimpleType: MockConnectionClosedException
p6893
tp6894
I1
s(Vinsert
p6895
I45
VStringLiteral: "RENAME"
p6896
tp6897
I1
s(Vinsert
p6898
I42
VSimpleName: parseInsert0
p6899
tp6900
I3
s(Vinsert
p6901
I45
VStringLiteral: "\u005ct, IFNULL(instances, 1)\u005cn"
p6902
tp6903
I1
s(Vinsert
p6904
I42
VSimpleName: getCharsetExpr
p6905
tp6906
I2
s(Vinsert
p6907
I45
VStringLiteral: "\u005cn\u005ct\u005ctconnect by prior tbek_pk = tbek_parent"
p6908
tp6909
I1
s(Vinsert
p6910
I45
VStringLiteral: "minIdle"
p6911
tp6912
I1
s(Vinsert
p6913
I42
VSimpleName: getConfigLoader
p6914
tp6915
I2
s(Vinsert
p6916
I42
VSimpleName: setRollBackOnFail
p6917
tp6918
I1
s(Vinsert
p6919
I45
VStringLiteral: "PCTFREE 10\u005cn"
p6920
tp6921
I6
s(Vinsert
p6922
I40
VQualifiedName: keys.length
p6923
tp6924
I1
s(Vinsert
p6925
I45
VStringLiteral: "KILL QUERY "
p6926
tp6927
I1
s(Vinsert
p6928
I42
VSimpleName: MySqlAlterUserStatement
p6929
tp6930
I1
s(Vinsert
p6931
I45
VStringLiteral: "\u005ct)\u005cn"
p6932
tp6933
I12
s(Vinsert
p6934
I43
VSimpleType: Put
p6935
tp6936
I1
s(Vinsert
p6937
I42
VSimpleName: DruidPanel
p6938
tp6939
I2
s(Vinsert
p6940
I42
VSimpleName: incrementSessionCount
p6941
tp6942
I1
s(Vinsert
p6943
I42
VSimpleName: COUNT
p6944
tp6945
I4
s(Vinsert
p6946
I42
VSimpleName: getBrowserIE10Count
p6947
tp6948
I9
s(Vinsert
p6949
I42
VSimpleName: MySqlShowCreateTableStatement
p6950
tp6951
I2
s(Vinsert
p6952
I45
VStringLiteral: "msg"
p6953
tp6954
I1
s(Vinsert
p6955
I42
VSimpleName: setTenantValue
p6956
tp6957
I7
s(Vinsert
p6958
I42
VSimpleName: setOutput
p6959
tp6960
I1
s(Vinsert
p6961
I42
VSimpleName: isStatic
p6962
tp6963
I1
s(Vinsert
p6964
I45
VStringLiteral: "+"
p6965
tp6966
I1
s(Vinsert
p6967
I45
VStringLiteral: "\u005cn\u005ct, 20)"
p6968
tp6969
I2
s(Vinsert
p6970
I42
VSimpleName: EvalMethodLengthTest
p6971
tp6972
I1
s(Vinsert
p6973
I45
VStringLiteral: "search_graph"
p6974
tp6975
I1
s(Vinsert
p6976
I42
VSimpleName: getBlobAsBinaryStream
p6977
tp6978
I1
s(Vinsert
p6979
I42
VSimpleName: idleTimeCount
p6980
tp6981
I3
s(Vinsert
p6982
I42
VSimpleName: getObject
p6983
tp6984
I12
s(Vinsert
p6985
I45
VStringLiteral: "SHOW FULL TABLES"
p6986
tp6987
I1
s(Vinsert
p6988
I42
VSimpleName: DruidConnectionHolder
p6989
tp6990
I3
s(Vinsert
p6991
I45
VStringLiteral: "\u005ct\u005c"GROUP_ID\u005c", \u005cn"
p6992
tp6993
I1
s(Vinsert
p6994
I45
VStringLiteral: "\u005ctPARTITION PART03\u005cn"
p6995
tp6996
I1
s(Vinsert
p6997
I42
VSimpleName: SQLParameter
p6998
tp6999
I12
s(Vinsert
p7000
I42
VSimpleName: rowCountExpr
p7001
tp7002
I1
s(Vinsert
p7003
I42
VSimpleName: path
p7004
tp7005
I5
s(Vinsert
p7006
I42
VSimpleName: errorConvert
p7007
tp7008
I1
s(Vinsert
p7009
I42
VSimpleName: parseColumnRest
p7010
tp7011
I2
s(Vinsert
p7012
I45
VStringLiteral: ", `seller_id`, `ext_status`)\u005cn"
p7013
tp7014
I1
s(Vinsert
p7015
I45
VStringLiteral: "TO_CHAR"
p7016
tp7017
I1
s(Vinsert
p7018
I45
VStringLiteral: "\u005ct\u005ct, a.ROW_WAIT_ROW#, b.TYPE\u005cn"
p7019
tp7020
I1
s(Vinsert
p7021
I43
VSimpleType: SQLPropertyExpr
p7022
tp7023
I58
s(Vinsert
p7024
I74
VParameterizedType: AtomicReference<SQLException>
p7025
tp7026
I2
s(Vinsert
p7027
I43
VSimpleType: ConnectionEvent
p7028
tp7029
I2
s(Vinsert
p7030
I42
VSimpleName: getSubSchemaNames
p7031
tp7032
I1
s(Vinsert
p7033
I42
VSimpleName: sequenceService
p7034
tp7035
I2
s(Vinsert
p7036
I42
VSimpleName: computeDataType
p7037
tp7038
I5
s(Vinsert
p7039
I42
VSimpleName: getActivePeakTime
p7040
tp7041
I1
s(Vinsert
p7042
I34
VNumberLiteral: 12299
p7043
tp7044
I1
s(Vinsert
p7045
I43
VSimpleType: IllegalAccessException
p7046
tp7047
I4
s(Vinsert
p7048
I45
VStringLiteral: "\u005ct\u005c"OBJECT_NAME\u005c", \u005cn"
p7049
tp7050
I1
s(Vinsert
p7051
I43
VSimpleType: Properties
p7052
tp7053
I18
s(Vinsert
p7054
I42
VSimpleName: setSearchModifier
p7055
tp7056
I1
s(Vinsert
p7057
I42
VSimpleName: extractColumns
p7058
tp7059
I1
s(Vinsert
p7060
I42
VSimpleName: firstResult
p7061
tp7062
I2
s(Vinsert
p7063
I42
VSimpleName: getLowerName
p7064
tp7065
I1
s(Vinsert
p7066
I42
VSimpleName: isHex
p7067
tp7068
I1
s(Vinsert
p7069
I40
VQualifiedName: segments.length
p7070
tp7071
I1
s(Vinsert
p7072
I45
VStringLiteral: "\u005cn\u005ctVERSION INTEGER,"
p7073
tp7074
I1
s(Vinsert
p7075
I42
VSimpleName: DruidDataSourceStatLogger
p7076
tp7077
I2
s(Vinsert
p7078
I42
VSimpleName: sizeCache
p7079
tp7080
I1
s(Vinsert
p7081
I42
VSimpleName: addEntity
p7082
tp7083
I1
s(Vinsert
p7084
I43
VSimpleType: Appendable
p7085
tp7086
I4
s(Vinsert
p7087
I45
VStringLiteral: "create type "
p7088
tp7089
I1
s(Vinsert
p7090
I45
VStringLiteral: " MAX_QUERIES_PER_HOUR "
p7091
tp7092
I1
s(Vinsert
p7093
I42
VSimpleName: filterClass
p7094
tp7095
I2
s(Vinsert
p7096
I42
VSimpleName: arr
p7097
tp7098
I1
s(Vinsert
p7099
I43
VSimpleType: SQLExistsExpr
p7100
tp7101
I2
s(Vinsert
p7102
I43
VSimpleType: SQLAlterViewStatement
p7103
tp7104
I1
s(Vinsert
p7105
I42
VSimpleName: createSqlStatId
p7106
tp7107
I2
s(Vinsert
p7108
I45
VStringLiteral: "WHERE job_id = 'PU_CLERK'\u005cn"
p7109
tp7110
I1
s(Vinsert
p7111
I42
VSimpleName: countSelectQuery
p7112
tp7113
I1
s(Vinsert
p7114
I42
VSimpleName: explainToDeleteSQLObject
p7115
tp7116
I2
s(Vinsert
p7117
I42
VSimpleName: authid
p7118
tp7119
I4
s(Vinsert
p7120
I42
VSimpleName: c0
p7121
tp7122
I6
s(Vinsert
p7123
I45
VStringLiteral: "\u005cn\u005ctSTART_ACT_ID_ NVARCHAR2(255),"
p7124
tp7125
I2
s(Vinsert
p7126
I42
VSimpleName: SQLFetchStatement
p7127
tp7128
I3
s(Vinsert
p7129
I42
VSimpleName: IllegalArgumentException
p7130
tp7131
I29
s(Vinsert
p7132
I42
VSimpleName: getMaxActive
p7133
tp7134
I2
s(Vinsert
p7135
I42
VSimpleName: w2
p7136
tp7137
I1
s(Vinsert
p7138
I42
VSimpleName: getMaxCatalogNameLength
p7139
tp7140
I1
s(Vinsert
p7141
I42
VSimpleName: jdbcExecuteErrorCount
p7142
tp7143
I2
s(Vinsert
p7144
I42
VSimpleName: matches
p7145
tp7146
I3
s(Vinsert
p7147
I45
VStringLiteral: "\u005cn\u005ctSTART_TIME_ TIMESTAMP(6) NOT NULL,"
p7148
tp7149
I2
s(Vinsert
p7150
I42
VSimpleName: test_abs_error
p7151
tp7152
I1
s(Vinsert
p7153
I43
VSimpleType: XAException
p7154
tp7155
I2
s(Vinsert
p7156
I42
VSimpleName: tableName
p7157
tp7158
I63
s(Vinsert
p7159
I42
VSimpleName: param
p7160
tp7161
I40
s(Vinsert
p7162
I42
VSimpleName: setKeyColumn
p7163
tp7164
I2
s(Vinsert
p7165
I45
VStringLiteral: "value"
p7166
tp7167
I2
s(Vinsert
p7168
I42
VSimpleName: nameStart
p7169
tp7170
I1
s(Vinsert
p7171
I42
VSimpleName: rowInserted
p7172
tp7173
I1
s(Vinsert
p7174
I42
VSimpleName: commitTransaction
p7175
tp7176
I2
s(Vinsert
p7177
I40
VQualifiedName: ResultSet.CLOSE_CURSORS_AT_COMMIT
p7178
tp7179
I3
s(Vinsert
p7180
I42
VSimpleName: getFullGC
p7181
tp7182
I5
s(Vinsert
p7183
I42
VSimpleName: cacheServerConfigurationSet
p7184
tp7185
I1
s(Vinsert
p7186
I42
VSimpleName: passwordBytes
p7187
tp7188
I2
s(Vinsert
p7189
I45
VStringLiteral: "\u005cn\u005ctname text,"
p7190
tp7191
I1
s(Vinsert
p7192
I45
VStringLiteral: "\u005cnfrom table2;"
p7193
tp7194
I1
s(Vinsert
p7195
I43
VSimpleType: FrameworkConfig
p7196
tp7197
I1
s(Vinsert
p7198
I42
VSimpleName: authPlugin
p7199
tp7200
I1
s(Vinsert
p7201
I42
VSimpleName: testOnReturn
p7202
tp7203
I2
s(Vinsert
p7204
I45
VStringLiteral: "NEWLINE"
p7205
tp7206
I1
s(Vinsert
p7207
I42
VSimpleName: methodRest
p7208
tp7209
I1
s(Vinsert
p7210
I45
VStringLiteral: "time-between-eviction-runs-millis=10000"
p7211
tp7212
I1
s(Vinsert
p7213
I45
VStringLiteral: "SELECT \u005c"MY_PK\u005c", \u005c"FK_EMP\u005c", \u005c"FK_DEPT\u005c", \u005c"FK_DUTY\u005c", \u005c"DUTYLEVEL\u005c"\u005cn"
p7214
tp7215
I1
s(Vinsert
p7216
I42
VSimpleName: violation
p7217
tp7218
I3
s(Vinsert
p7219
I45
VStringLiteral: " AND alino = _gbk '2013110900031031001700thfund00163619'"
p7220
tp7221
I1
s(Vinsert
p7222
I42
VSimpleName: renameTo
p7223
tp7224
I7
s(Vinsert
p7225
I42
VSimpleName: isClosed
p7226
tp7227
I12
s(Vinsert
p7228
I42
VSimpleName: rowData
p7229
tp7230
I10
s(Vinsert
p7231
I45
VStringLiteral: "\u005cn\u005ct\u005ctOR d.indkey[4] = a.attnum"
p7232
tp7233
I1
s(Vinsert
p7234
I42
VSimpleName: getTransactionThresholdMillis
p7235
tp7236
I1
s(Vinsert
p7237
I43
VSimpleType: Collection
p7238
tp7239
I3
s(Vinsert
p7240
I42
VSimpleName: brace
p7241
tp7242
I1
s(Vinsert
p7243
I42
VSimpleName: readBytesLength
p7244
tp7245
I2
s(Vinsert
p7246
I42
VSimpleName: bufPos
p7247
tp7248
I4
s(Vinsert
p7249
I42
VSimpleName: remove
p7250
tp7251
I16
s(Vinsert
p7252
I42
VSimpleName: setExceptionsInto
p7253
tp7254
I4
s(Vinsert
p7255
I42
VSimpleName: subqueryTabSrc
p7256
tp7257
I1
s(Vinsert
p7258
I43
VSimpleType: PoolableResultSet
p7259
tp7260
I3
s(Vinsert
p7261
I45
VStringLiteral: "\u005ctINITIAL 65536\u005cn"
p7262
tp7263
I7
s(Vinsert
p7264
I42
VSimpleName: MySqlDeclareStatement
p7265
tp7266
I1
s(Vinsert
p7267
I45
VStringLiteral: "LOCAL"
p7268
tp7269
I2
s(Vinsert
p7270
I45
VStringLiteral: "RELEASE SAVEPOINT "
p7271
tp7272
I2
s(Vinsert
p7273
I42
VSimpleName: DataSourceProperties
p7274
tp7275
I1
s(Vinsert
p7276
I40
VQualifiedName: value.executeCount
p7277
tp7278
I1
s(Vinsert
p7279
I45
VStringLiteral: "jdbc:mock:ha2"
p7280
tp7281
I1
s(Vinsert
p7282
I42
VSimpleName: PGLimit
p7283
tp7284
I6
s(Vinsert
p7285
I42
VSimpleName: sqlSelect
p7286
tp7287
I1
s(Vinsert
p7288
I42
VSimpleName: decimalValue
p7289
tp7290
I2
s(Vinsert
p7291
I42
VSimpleName: dataSourceStatValue
p7292
tp7293
I1
s(Vinsert
p7294
I42
VSimpleName: isInUse
p7295
tp7296
I2
s(Vinsert
p7297
I42
VSimpleName: isGlobal
p7298
tp7299
I1
s(Vinsert
p7300
I45
VStringLiteral: "CHANGE COLUMN "
p7301
tp7302
I1
s(Vinsert
p7303
I40
VQualifiedName: FnvHash.Constants.VALIDPROC
p7304
tp7305
I1
s(Vinsert
p7306
I42
VSimpleName: split
p7307
tp7308
I6
s(Vinsert
p7309
I42
VSimpleName: updateCount_100_1000_Updater
p7310
tp7311
I1
s(Vinsert
p7312
I45
VStringLiteral: "/*!cobar: select,4,ireport.dm_mdm_mem_prod_noeff_sdt0.admin_member_seq=45654723*/ select * from t"
p7313
tp7314
I1
s(Vinsert
p7315
I45
VStringLiteral: "/permit-object-default.txt"
p7316
tp7317
I1
s(Vinsert
p7318
I42
VSimpleName: getTableOptions
p7319
tp7320
I8
s(Vinsert
p7321
I42
VSimpleName: setResolvedTableSource
p7322
tp7323
I1
s(Vinsert
p7324
I42
VSimpleName: createTransactionId
p7325
tp7326
I4
s(Vinsert
p7327
I42
VSimpleName: printlnComments
p7328
tp7329
I2
s(Vinsert
p7330
I45
VStringLiteral: "char"
p7331
tp7332
I3
s(Vinsert
p7333
I42
VSimpleName: getLiteral
p7334
tp7335
I2
s(Vinsert
p7336
I42
VSimpleName: specificInterceptors
p7337
tp7338
I1
s(Vinsert
p7339
I42
VSimpleName: dialectStmt
p7340
tp7341
I1
s(Vinsert
p7342
I45
VStringLiteral: "        ADD COLUMN variation_value_3 DECIMAL(30, 20) NULL DEFAULT NULL,\u005cn"
p7343
tp7344
I1
s(Vinsert
p7345
I43
VSimpleType: CallableStatementProxy
p7346
tp7347
I2
s(Vinsert
p7348
I42
VSimpleName: SQLTruncateStatement
p7349
tp7350
I2
s(Vinsert
p7351
I42
VSimpleName: SQLServerSelectQueryBlock
p7352
tp7353
I2
s(Vinsert
p7354
I42
VSimpleName: getForcePartition
p7355
tp7356
I1
s(Vinsert
p7357
I42
VSimpleName: getConnectionCount_Alive_12_24_Hours
p7358
tp7359
I1
s(Vinsert
p7360
I79
VSingleMemberAnnotation
p7361
tp7362
I3
s(Vinsert
p7363
I42
VSimpleName: keySet
p7364
tp7365
I10
s(Vinsert
p7366
I45
VStringLiteral: "select * from t1 where id > 1"
p7367
tp7368
I2
s(Vinsert
p7369
I42
VSimpleName: nextBoolean
p7370
tp7371
I1
s(Vinsert
p7372
I45
VStringLiteral: "SELECT COUNT(*)\u005cn"
p7373
tp7374
I1
s(Vinsert
p7375
I45
VStringLiteral: "orderBy : "
p7376
tp7377
I11
s(Vinsert
p7378
I45
VStringLiteral: "select f1, f2 from t where id=1 union select 1, 2"
p7379
tp7380
I1
s(Vinsert
p7381
I45
VStringLiteral: "DATE '"
p7382
tp7383
I1
s(Vinsert
p7384
I42
VSimpleName: setAlias
p7385
tp7386
I11
s(Vinsert
p7387
I45
VStringLiteral: "\u005ct\u005ctOR v.service_type = 'cnfm'\u005cn"
p7388
tp7389
I1
s(Vinsert
p7390
I42
VSimpleName: XASupport
p7391
tp7392
I2
s(Vinsert
p7393
I65
VTagElement: @see
p7394
tp7395
I36
s(Vinsert
p7396
I43
VSimpleType: SQLCaseExpr
p7397
tp7398
I4
s(Vinsert
p7399
I43
VSimpleType: MySqlDeclareStatement
p7400
tp7401
I1
s(Vinsert
p7402
I45
VStringLiteral: "jdbc:gbase:"
p7403
tp7404
I1
s(Vinsert
p7405
I42
VSimpleName: unwrap
p7406
tp7407
I48
s(Vinsert
p7408
I42
VSimpleName: setCaseConditionConstAllow
p7409
tp7410
I1
s(Vinsert
p7411
I42
VSimpleName: entryData
p7412
tp7413
I2
s(Vinsert
p7414
I45
VStringLiteral: "\u005ctKEY `k_c` (`c_tinyint`, `c_int`)\u005cn"
p7415
tp7416
I1
s(Vinsert
p7417
I18
VContinueStatement
p7418
tp7419
I31
s(Vinsert
p7420
I45
VStringLiteral: "SHOW KEYS"
p7421
tp7422
I1
s(Vinsert
p7423
I42
VSimpleName: test_resetEnable_empty
p7424
tp7425
I1
s(Vinsert
p7426
I45
VStringLiteral: "LOW_PRIORITY "
p7427
tp7428
I1
s(Vinsert
p7429
I42
VSimpleName: setConditionOpBitwseAllow
p7430
tp7431
I4
s(Vinsert
p7432
I43
VSimpleType: DataSourceInfo
p7433
tp7434
I6
s(Vinsert
p7435
I45
VStringLiteral: "1319"
p7436
tp7437
I1
s(Vinsert
p7438
I45
VStringLiteral: "\u005cnNOCOMPRESS"
p7439
tp7440
I5
s(Vinsert
p7441
I42
VSimpleName: Xid
p7442
tp7443
I3
s(Vinsert
p7444
I45
VStringLiteral: "\u005ctVALUE VARCHAR(400),\u005cn"
p7445
tp7446
I1
s(Vinsert
p7447
I42
VSimpleName: HiveLexer
p7448
tp7449
I2
s(Vinsert
p7450
I34
VNumberLiteral: 30676
p7451
tp7452
I1
s(Vinsert
p7453
I42
VSimpleName: nativeSQL
p7454
tp7455
I1
s(Vinsert
p7456
I42
VSimpleName: LocalVirtualMachine
p7457
tp7458
I1
s(Vinsert
p7459
I42
VSimpleName: OracleRangeExpr
p7460
tp7461
I2
s(Vinsert
p7462
I42
VSimpleName: getMinorVersion
p7463
tp7464
I1
s(Vinsert
p7465
I42
VSimpleName: incrementInsertCount
p7466
tp7467
I3
s(Vinsert
p7468
I45
VStringLiteral: "\u005ctEND LOOP outer_loop;\u005cn"
p7469
tp7470
I1
s(Vinsert
p7471
I45
VStringLiteral: "\u005ctc_longblob longblob\u005cn"
p7472
tp7473
I2
s(Vinsert
p7474
I42
VSimpleName: cache
p7475
tp7476
I7
s(Vinsert
p7477
I45
VStringLiteral: "\u005cnOUTPUT INSERTED.ScrapReasonID, INSERTED.Name, INSERTED.ModifiedDate"
p7478
tp7479
I2
s(Vinsert
p7480
I42
VSimpleName: ip
p7481
tp7482
I3
s(Vinsert
p7483
I42
VSimpleName: EvalMethodReverseTest
p7484
tp7485
I1
s(Vinsert
p7486
I42
VSimpleName: tenantTablePattern
p7487
tp7488
I3
s(Vinsert
p7489
I42
VSimpleName: interval
p7490
tp7491
I8
s(Vinsert
p7492
I42
VSimpleName: setClientEncoding
p7493
tp7494
I1
s(Vinsert
p7495
I45
VStringLiteral: "FROM sc002.test;"
p7496
tp7497
I1
s(Vinsert
p7498
I42
VSimpleName: addConstraint
p7499
tp7500
I1
s(Vinsert
p7501
I40
VQualifiedName: com.alibaba.druid.sql.ast.statement.SQLDropTableStatement
p7502
tp7503
I1
s(Vinsert
p7504
I42
VSimpleName: parseAlterColumn
p7505
tp7506
I2
s(Vinsert
p7507
I42
VSimpleName: savePointString
p7508
tp7509
I1
s(Vinsert
p7510
I42
VSimpleName: test_connectPropertiesChange
p7511
tp7512
I1
s(Vinsert
p7513
I45
VStringLiteral: "\u005ctwhere UT.ad_clk > 0\u005cn"
p7514
tp7515
I1
s(Vinsert
p7516
I45
VStringLiteral: "update t SET fname = 'xx' where FID = ?"
p7517
tp7518
I1
s(Vinsert
p7519
I45
VStringLiteral: "\u005cn from t1"
p7520
tp7521
I2
s(Vinsert
p7522
I45
VStringLiteral: "CLOSE"
p7523
tp7524
I1
s(Vinsert
p7525
I42
VSimpleName: isWritable
p7526
tp7527
I2
s(Vinsert
p7528
I45
VStringLiteral: "DROP TABLE a PURGE;"
p7529
tp7530
I1
s(Vinsert
p7531
I42
VSimpleName: ErrorFilter
p7532
tp7533
I1
s(Vinsert
p7534
I42
VSimpleName: test_decrypt5
p7535
tp7536
I1
s(Vinsert
p7537
I42
VSimpleName: getXAConnection
p7538
tp7539
I1
s(Vinsert
p7540
I42
VSimpleName: dataSourceList
p7541
tp7542
I2
s(Vinsert
p7543
I45
VStringLiteral: "system_user"
p7544
tp7545
I1
s(Vinsert
p7546
I42
VSimpleName: charsetConvert
p7547
tp7548
I2
s(Vinsert
p7549
I43
VSimpleType: SqlServerOutputVisitor
p7550
tp7551
I1
s(Vinsert
p7552
I45
VStringLiteral: "\u005ctFROM orders\u005cn"
p7553
tp7554
I1
s(Vinsert
p7555
I42
VSimpleName: MAPPING_PROPERTY
p7556
tp7557
I2
s(Vinsert
p7558
I45
VStringLiteral: "NONE"
p7559
tp7560
I1
s(Vinsert
p7561
I42
VSimpleName: constraintName
p7562
tp7563
I5
s(Vinsert
p7564
I45
VStringLiteral: "GROUP BY T1.AREA_ID, RTRIM(TO_CHAR(T2.PID))"
p7565
tp7566
I1
s(Vinsert
p7567
I42
VSimpleName: isForUpdate
p7568
tp7569
I1
s(Vinsert
p7570
I45
VStringLiteral: "DATABASE LINK "
p7571
tp7572
I1
s(Vinsert
p7573
I43
VSimpleType: FileOutputStream
p7574
tp7575
I1
s(Vinsert
p7576
I42
VSimpleName: isIgnore
p7577
tp7578
I2
s(Vinsert
p7579
I42
VSimpleName: DataSourceDisableException
p7580
tp7581
I2
s(Vinsert
p7582
I42
VSimpleName: poolPreparedStatements
p7583
tp7584
I1
s(Vinsert
p7585
I45
VStringLiteral: "\u005ctFROM tb_002 bdf, tb_003 bs\u005cn"
p7586
tp7587
I1
s(Vinsert
p7588
I42
VSimpleName: SQLColumnConstraint
p7589
tp7590
I3
s(Vinsert
p7591
I42
VSimpleName: bogusSources
p7592
tp7593
I1
s(Vinsert
p7594
I42
VSimpleName: isEnabled
p7595
tp7596
I10
s(Vinsert
p7597
I45
VStringLiteral: "\u005ctWHERE bdf.bs_key = bs.bs_key\u005cn"
p7598
tp7599
I1
s(Vinsert
p7600
I42
VSimpleName: SQLUtils
p7601
tp7602
I607
s(Vinsert
p7603
I42
VSimpleName: parseCreateFunction
p7604
tp7605
I1
s(Vinsert
p7606
I45
VStringLiteral: "\u005cn\u005ctprice numeric"
p7607
tp7608
I1
s(Vinsert
p7609
I45
VStringLiteral: "\u005cn\u005ctUSING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE \u005c"USERS\u005c" ENABLE"
p7610
tp7611
I5
s(Vinsert
p7612
I42
VSimpleName: test_executeUpdate
p7613
tp7614
I1
s(Vinsert
p7615
I42
VSimpleName: isPoolPreparedStatements
p7616
tp7617
I7
s(Vinsert
p7618
I45
VStringLiteral: "\u005ct\u005c"SOURCE_CODE\u005c" VARCHAR2(32) NOT NULL ENABLE, \u005cn"
p7619
tp7620
I1
s(Vinsert
p7621
I42
VSimpleName: getSequence
p7622
tp7623
I2
s(Vinsert
p7624
I45
VStringLiteral: "DELETE FROM ecc_cpr.ccg_gts_Boardlw AS i\u005cn"
p7625
tp7626
I1
s(Vinsert
p7627
I42
VSimpleName: getKeepAliveCheckCountAndReset
p7628
tp7629
I1
s(Vinsert
p7630
I27
VInfixExpression: <<
p7631
tp7632
I1
s(Vinsert
p7633
I42
VSimpleName: errorText
p7634
tp7635
I5
s(Vinsert
p7636
I45
VStringLiteral: "no sql"
p7637
tp7638
I1
s(Vinsert
p7639
I42
VSimpleName: currentQueryTimeout
p7640
tp7641
I1
s(Vinsert
p7642
I42
VSimpleName: wasNull
p7643
tp7644
I2
s(Vinsert
p7645
I42
VSimpleName: intValue
p7646
tp7647
I12
s(Vinsert
p7648
I43
VSimpleType: OracleCreateSequenceStatement
p7649
tp7650
I2
s(Vinsert
p7651
I42
VSimpleName: isLogViolation
p7652
tp7653
I1
s(Vinsert
p7654
I45
VStringLiteral: "SELECT appsheetserialno FROM app_trans WHERE nodeid = _gbk '619' "
p7655
tp7656
I1
s(Vinsert
p7657
I42
VSimpleName: explainToSQLObject
p7658
tp7659
I2
s(Vinsert
p7660
I42
VSimpleName: OracleTypeDef
p7661
tp7662
I1
s(Vinsert
p7663
I45
VStringLiteral: "TABLESPACE \u005c"RDP_DATA\u005c"\u005cn"
p7664
tp7665
I1
s(Vinsert
p7666
I42
VSimpleName: exceptionSoter
p7667
tp7668
I2
s(Vinsert
p7669
I43
VSimpleType: MockStatement
p7670
tp7671
I3
s(Vinsert
p7672
I42
VSimpleName: jdbcExecuteTimeNano
p7673
tp7674
I2
s(Vinsert
p7675
I42
VSimpleName: isErrorEnabled
p7676
tp7677
I4
s(Vinsert
p7678
I40
VQualifiedName: MySqlKillStatement.Type.CONNECTION
p7679
tp7680
I1
s(Vinsert
p7681
I45
VStringLiteral: "create table t1 (f0 bigint) partitioned by ("
p7682
tp7683
I1
s(Vinsert
p7684
I27
VInfixExpression: >=
p7685
tp7686
I8
s(Vinsert
p7687
I42
VSimpleName: maxValue
p7688
tp7689
I1
s(Vinsert
p7690
I45
VStringLiteral: "\u005cn\u005ctmin_price NUMBER(8, 2),"
p7691
tp7692
I2
s(Vinsert
p7693
I45
VStringLiteral: "id"
p7694
tp7695
I8
s(Vinsert
p7696
I40
VQualifiedName: FnvHash.Constants.SQLCODE
p7697
tp7698
I1
s(Vinsert
p7699
I42
VSimpleName: gtrid
p7700
tp7701
I1
s(Vinsert
p7702
I43
VSimpleType: MySqlShowMasterLogsStatement
p7703
tp7704
I1
s(Vinsert
p7705
I42
VSimpleName: indexName
p7706
tp7707
I9
s(Vinsert
p7708
I42
VSimpleName: dsStat
p7709
tp7710
I2
s(Vinsert
p7711
I45
VStringLiteral: "-detail"
p7712
tp7713
I2
s(Vinsert
p7714
I45
VStringLiteral: "\u005cnFROM t1"
p7715
tp7716
I3
s(Vinsert
p7717
I42
VSimpleName: parseCreateDatabase
p7718
tp7719
I1
s(Vinsert
p7720
I42
VSimpleName: FnvHash
p7721
tp7722
I11
s(Vinsert
p7723
I42
VSimpleName: SQLAlterTableDisableKeys
p7724
tp7725
I2
s(Vinsert
p7726
I45
VStringLiteral: "INDEX IN "
p7727
tp7728
I1
s(Vinsert
p7729
I45
VStringLiteral: "\u005ctTABLESPACE \u005c"APPDATA1M\u005c"\u005cn"
p7730
tp7731
I1
s(Vinsert
p7732
I42
VSimpleName: List
p7733
tp7734
I337
s(Vinsert
p7735
I42
VSimpleName: setParameterizedMergeInList
p7736
tp7737
I3
s(Vinsert
p7738
I42
VSimpleName: buildInsertSql
p7739
tp7740
I1
s(Vinsert
p7741
I43
VSimpleType: PreparedStatementProxy
p7742
tp7743
I8
s(Vinsert
p7744
I45
VStringLiteral: "from (select * from xxx) a"
p7745
tp7746
I1
s(Vinsert
p7747
I42
VSimpleName: unregisterMBean
p7748
tp7749
I1
s(Vinsert
p7750
I42
VSimpleName: StringTokenizer
p7751
tp7752
I1
s(Vinsert
p7753
I43
VSimpleType: Map.Entry
p7754
tp7755
I8
s(Vinsert
p7756
I45
VStringLiteral: "\u005ct`c_blob` blob COMMENT 'blob',\u005cn"
p7757
tp7758
I2
s(Vinsert
p7759
I45
VStringLiteral: "["
p7760
tp7761
I1
s(Vinsert
p7762
I40
VQualifiedName: savepoints.length
p7763
tp7764
I1
s(Vinsert
p7765
I42
VSimpleName: SQLReleaseSavePointStatement
p7766
tp7767
I2
s(Vinsert
p7768
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION s1"
p7769
tp7770
I1
s(Vinsert
p7771
I45
VStringLiteral: "\u005c"HT_TASK_TRADE_HISTORY_NEW\u005c""
p7772
tp7773
I1
s(Vinsert
p7774
I42
VSimpleName: pstmt2
p7775
tp7776
I1
s(Vinsert
p7777
I42
VSimpleName: ParameterizedVisitor
p7778
tp7779
I4
s(Vinsert
p7780
I42
VSimpleName: header
p7781
tp7782
I1
s(Vinsert
p7783
I42
VSimpleName: entryKey
p7784
tp7785
I3
s(Vinsert
p7786
I42
VSimpleName: remoteAddr
p7787
tp7788
I2
s(Vinsert
p7789
I42
VSimpleName: newInstance
p7790
tp7791
I8
s(Vinsert
p7792
I40
VQualifiedName: com.alibaba.druid.util.JdbcUtils
p7793
tp7794
I2
s(Vinsert
p7795
I45
VStringLiteral: "ENABLE QUERY REWRITE\u005cn"
p7796
tp7797
I1
s(Vinsert
p7798
I40
VQualifiedName: Profiler.PROFILE_TYPE_SPRING
p7799
tp7800
I1
s(Vinsert
p7801
I42
VSimpleName: Entity
p7802
tp7803
I16
s(Vinsert
p7804
I42
VSimpleName: DataSourceData
p7805
tp7806
I1
s(Vinsert
p7807
I45
VStringLiteral: "TRIGGERS"
p7808
tp7809
I1
s(Vinsert
p7810
I42
VSimpleName: getProviderWhiteList
p7811
tp7812
I1
s(Vinsert
p7813
I42
VSimpleName: ProxyClient
p7814
tp7815
I1
s(Vinsert
p7816
I45
VStringLiteral: "LIMIT 1000;"
p7817
tp7818
I1
s(Vinsert
p7819
I42
VSimpleName: MySqlWallTest19
p7820
tp7821
I1
s(Vinsert
p7822
I45
VStringLiteral: "values ('1', 'aa'), ('2', 'bb')"
p7823
tp7824
I1
s(Vinsert
p7825
I45
VStringLiteral: "AT"
p7826
tp7827
I1
s(Vinsert
p7828
I42
VSimpleName: charAt
p7829
tp7830
I23
s(Vinsert
p7831
I45
VStringLiteral: "FROM analyzedata.StatTime cs\u005cn"
p7832
tp7833
I1
s(Vinsert
p7834
I45
VStringLiteral: "DROP TABLESPACE "
p7835
tp7836
I1
s(Vinsert
p7837
I42
VSimpleName: param1
p7838
tp7839
I7
s(Vinsert
p7840
I42
VSimpleName: EvalMethodTest_locate_1
p7841
tp7842
I1
s(Vinsert
p7843
I43
VSimpleType: SyntaxErrorViolation
p7844
tp7845
I3
s(Vinsert
p7846
I45
VStringLiteral: "META-INF/druid-filter-wall-permit-schema-mysql.txt"
p7847
tp7848
I1
s(Vinsert
p7849
I45
VStringLiteral: "\u005ct\u005ct\u005ct\u005ctUNION ALL\u005cn"
p7850
tp7851
I1
s(Vinsert
p7852
I42
VSimpleName: statusA
p7853
tp7854
I1
s(Vinsert
p7855
I45
VStringLiteral: "user0_.password as password0_ "
p7856
tp7857
I1
s(Vinsert
p7858
I42
VSimpleName: parseOptions
p7859
tp7860
I5
s(Vinsert
p7861
I45
VStringLiteral: "alter table sale_detail drop if not exists partition (sale_date='201312', region='hangzhou');"
p7862
tp7863
I1
s(Vinsert
p7864
I45
VStringLiteral: "\u005cn\u005ct\u005ctCONSTRAINT fk_oid REFERENCES oe.orders (order_id),"
p7865
tp7866
I2
s(Vinsert
p7867
I42
VSimpleName: next
p7868
tp7869
I19
s(Vinsert
p7870
I43
VSimpleType: MySqlShowMasterStatusStatement
p7871
tp7872
I2
s(Vinsert
p7873
I40
VQualifiedName: Token.DISABLE
p7874
tp7875
I3
s(Vinsert
p7876
I43
VSimpleType: MultiDataSourceConnection
p7877
tp7878
I1
s(Vinsert
p7879
I42
VSimpleName: keyName
p7880
tp7881
I2
s(Vinsert
p7882
I42
VSimpleName: dateExpr
p7883
tp7884
I1
s(Vinsert
p7885
I42
VSimpleName: tableStats
p7886
tp7887
I6
s(Vinsert
p7888
I42
VSimpleName: onConflictTarget
p7889
tp7890
I1
s(Vinsert
p7891
I42
VSimpleName: FieldInfo
p7892
tp7893
I3
s(Vinsert
p7894
I45
VStringLiteral: "\u005ctAND sites.site_id IN (71242000)\u005cn"
p7895
tp7896
I1
s(Vinsert
p7897
I34
VNumberLiteral: 100000
p7898
tp7899
I1
s(Vinsert
p7900
I42
VSimpleName: loader
p7901
tp7902
I3
s(Vinsert
p7903
I42
VSimpleName: setNCharacterStream
p7904
tp7905
I3
s(Vinsert
p7906
I42
VSimpleName: unwrapShardingTable
p7907
tp7908
I2
s(Vinsert
p7909
I42
VSimpleName: setUseOracleImplicitCache
p7910
tp7911
I1
s(Vinsert
p7912
I45
VStringLiteral: "CONTINUE"
p7913
tp7914
I6
s(Vinsert
p7915
I40
VQualifiedName: com.alibaba.druid.util.JMXUtils
p7916
tp7917
I1
s(Vinsert
p7918
I43
VSimpleType: PGArrayExpr
p7919
tp7920
I5
s(Vinsert
p7921
I45
VStringLiteral: "GROUP BY to_char(CreateDate || ' ' || CAST(HourArgment AS VARCHAR) || ':00:00'::TIMESTAMP, 'YYYY-MM-DD HH24')"
p7922
tp7923
I1
s(Vinsert
p7924
I42
VSimpleName: PGASTVisitorAdapter
p7925
tp7926
I1
s(Vinsert
p7927
I45
VStringLiteral: "executeSleep"
p7928
tp7929
I1
s(Vinsert
p7930
I45
VStringLiteral: "CREATE OR REPLACE FORCE VIEW \u005c"CMIS\u005c".\u005c"WFI_AGENT_LOGEND\u005c" (\u005c"INSTANCEID\u005c", \u005c"WFID\u005c", \u005c"WFSIGN\u005c", \u005c"NODEID\u005c", \u005c"NODESTARTTIME\u005c", \u005c"ORIGINALUSER\u005c", \u005c"REPLACER\u005c", \u005c"SYSID\u005c", \u005c"PK_VALUE\u005c", \u005c"APPL_TYPE\u005c", \u005c"WFI_END_ORG\u005c", \u005c"WFI_STATUS\u005c") AS \u005cn"
p7931
tp7932
I1
s(Vinsert
p7933
I45
VStringLiteral: "varchar(2000)"
p7934
tp7935
I1
s(Vinsert
p7936
I42
VSimpleName: getCount_1000_2000_Millis
p7937
tp7938
I1
s(Vinsert
p7939
I42
VSimpleName: setUserObject
p7940
tp7941
I1
s(Vinsert
p7942
I45
VStringLiteral: "BUSINESS_ENTERPRISE_BUSIINFO"
p7943
tp7944
I1
s(Vinsert
p7945
I42
VSimpleName: pos2
p7946
tp7947
I1
s(Vinsert
p7948
I42
VSimpleName: getCollate
p7949
tp7950
I3
s(Vinsert
p7951
I45
VStringLiteral: "dataSource is null"
p7952
tp7953
I1
s(Vinsert
p7954
I43
VSimpleType: Advisor
p7955
tp7956
I1
s(Vinsert
p7957
I42
VSimpleName: setMaxConnectionsPerPartition
p7958
tp7959
I2
s(Vinsert
p7960
I45
VStringLiteral: "ALTER TABLE `test`.`tb1`  ADD INDEX `ix` (`f2` ASC) ;"
p7961
tp7962
I1
s(Vinsert
p7963
I45
VStringLiteral: "'"
p7964
tp7965
I6
s(Vinsert
p7966
I40
VQualifiedName: FNVUtils.CURRENT_TIMESTAMP
p7967
tp7968
I1
s(Vinsert
p7969
I45
VStringLiteral: "PIPE"
p7970
tp7971
I1
s(Vinsert
p7972
I45
VStringLiteral: "User.insert"
p7973
tp7974
I2
s(Vinsert
p7975
I42
VSimpleName: getWidth
p7976
tp7977
I1
s(Vinsert
p7978
I42
VSimpleName: clause
p7979
tp7980
I16
s(Vinsert
p7981
I42
VSimpleName: cipherText
p7982
tp7983
I2
s(Vinsert
p7984
I42
VSimpleName: SQLIntervalUnit
p7985
tp7986
I1
s(Vinsert
p7987
I42
VSimpleName: genKeyPair
p7988
tp7989
I1
s(Vinsert
p7990
I42
VSimpleName: MSSQLValidConnectionChecker
p7991
tp7992
I1
s(Vinsert
p7993
I42
VSimpleName: findTable
p7994
tp7995
I3
s(Vinsert
p7996
I42
VSimpleName: children
p7997
tp7998
I74
s(Vinsert
p7999
I40
VQualifiedName: Option.DATA_SOURCE
p8000
tp8001
I2
s(Vinsert
p8002
I42
VSimpleName: SQLExprTableSource
p8003
tp8004
I37
s(Vinsert
p8005
I45
VStringLiteral: "                union"
p8006
tp8007
I1
s(Vinsert
p8008
I42
VSimpleName: valuesQuery
p8009
tp8010
I1
s(Vinsert
p8011
I42
VSimpleName: protocol
p8012
tp8013
I2
s(Vinsert
p8014
I45
VStringLiteral: "syntax error, expect identifier, but "
p8015
tp8016
I1
s(Vinsert
p8017
I42
VSimpleName: SQLDataException
p8018
tp8019
I1
s(Vinsert
p8020
I42
VSimpleName: getInitialSize
p8021
tp8022
I4
s(Vinsert
p8023
I45
VStringLiteral: "trigger "
p8024
tp8025
I1
s(Vinsert
p8026
I42
VSimpleName: binaryWhere
p8027
tp8028
I2
s(Vinsert
p8029
I42
VSimpleName: nowNano
p8030
tp8031
I1
s(Vinsert
p8032
I42
VSimpleName: stackTrace
p8033
tp8034
I3
s(Vinsert
p8035
I45
VStringLiteral: "6iuxETwA5Pu2mwx3"
p8036
tp8037
I1
s(Vinsert
p8038
I42
VSimpleName: getForXmlOptions
p8039
tp8040
I1
s(Vinsert
p8041
I42
VSimpleName: setDaemon
p8042
tp8043
I1
s(Vinsert
p8044
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION ch_p,"
p8045
tp8046
I2
s(Vinsert
p8047
I42
VSimpleName: MyClassLoader
p8048
tp8049
I2
s(Vinsert
p8050
I45
VStringLiteral: "\u005ctAND c1.enabled_flag = 'Y'\u005cn"
p8051
tp8052
I1
s(Vinsert
p8053
I45
VStringLiteral: "        ADD COLUMN variation_value_4 DECIMAL(30, 20) NULL DEFAULT NULL,\u005cn"
p8054
tp8055
I1
s(Vinsert
p8056
I45
VStringLiteral: "lhwbbs_posts_reply"
p8057
tp8058
I1
s(Vinsert
p8059
I42
VSimpleName: schemaObject
p8060
tp8061
I4
s(Vinsert
p8062
I43
VSimpleType: AtomicLongFieldUpdater
p8063
tp8064
I5
s(Vinsert
p8065
I42
VSimpleName: EvalMethodTest_lpad_1
p8066
tp8067
I1
s(Vinsert
p8068
I42
VSimpleName: getSql
p8069
tp8070
I2
s(Vinsert
p8071
I42
VSimpleName: newUpdater
p8072
tp8073
I12
s(Vinsert
p8074
I43
VSimpleType: WebAppStat
p8075
tp8076
I12
s(Vinsert
p8077
I43
VSimpleType: SQLSelectListCache
p8078
tp8079
I2
s(Vinsert
p8080
I42
VSimpleName: insertStmt
p8081
tp8082
I40
s(Vinsert
p8083
I42
VSimpleName: setConcurrentMax
p8084
tp8085
I1
s(Vinsert
p8086
I42
VSimpleName: segementName
p8087
tp8088
I2
s(Vinsert
p8089
I42
VSimpleName: getPattern
p8090
tp8091
I2
s(Vinsert
p8092
I45
VStringLiteral: "select RANK() OVER (PARTITION BY ui ORDER BY duration DESC) rank from dual"
p8093
tp8094
I1
s(Vinsert
p8095
I42
VSimpleName: SQLPartitionBy
p8096
tp8097
I1
s(Vinsert
p8098
I42
VSimpleName: SQLExprHint
p8099
tp8100
I7
s(Vinsert
p8101
I42
VSimpleName: connectionLogEnabled
p8102
tp8103
I2
s(Vinsert
p8104
I42
VSimpleName: setMaxIdle
p8105
tp8106
I7
s(Vinsert
p8107
I74
VParameterizedType: ArrayList<SQLCreateTableStatement>
p8108
tp8109
I1
s(Vinsert
p8110
I42
VSimpleName: master
p8111
tp8112
I7
s(Vinsert
p8113
I40
VQualifiedName: Token.SEQUENCE
p8114
tp8115
I1
s(Vinsert
p8116
I42
VSimpleName: subPartitionHash
p8117
tp8118
I2
s(Vinsert
p8119
I45
VStringLiteral: "SELECT 1, 2, 3"
p8120
tp8121
I1
s(Vinsert
p8122
I42
VSimpleName: onConflictUpdateSetItems
p8123
tp8124
I2
s(Vinsert
p8125
I45
VStringLiteral: "\u005cn\u005ct\u005c"UPDATED_AT\u005c" TIMESTAMP(6),"
p8126
tp8127
I2
s(Vinsert
p8128
I42
VSimpleName: MySqlWallTest10
p8129
tp8130
I1
s(Vinsert
p8131
I43
VSimpleType: SQLSyntaxErrorException
p8132
tp8133
I1
s(Vinsert
p8134
I42
VSimpleName: SQLASTVisitor
p8135
tp8136
I90
s(Vinsert
p8137
I40
VQualifiedName: SQLSetQuantifier.DISTINCT
p8138
tp8139
I2
s(Vinsert
p8140
I45
VStringLiteral: "integer"
p8141
tp8142
I1
s(Vinsert
p8143
I42
VSimpleName: hostName
p8144
tp8145
I1
s(Vinsert
p8146
I45
VStringLiteral: "select * from t1 union select * from t2"
p8147
tp8148
I3
s(Vinsert
p8149
I42
VSimpleName: DruidDriver
p8150
tp8151
I18
s(Vinsert
p8152
I42
VSimpleName: updateCheckItems
p8153
tp8154
I15
s(Vinsert
p8155
I45
VStringLiteral: "\u005ctSUPPLEMENTAL LOG DATA (FOREIGHN KEY) COLUMNS\u005cn"
p8156
tp8157
I1
s(Vinsert
p8158
I45
VStringLiteral: "\u005ct, `f5`, `f6`, `f7`, `f8`, `f9`\u005cn"
p8159
tp8160
I1
s(Vinsert
p8161
I42
VSimpleName: SQLClientInfoException
p8162
tp8163
I1
s(Vinsert
p8164
I42
VSimpleName: MockConnection
p8165
tp8166
I10
s(Vinsert
p8167
I42
VSimpleName: getBlobAsBytes
p8168
tp8169
I2
s(Vinsert
p8170
I42
VSimpleName: setRemoteAddr
p8171
tp8172
I1
s(Vinsert
p8173
I42
VSimpleName: delta
p8174
tp8175
I10
s(Vinsert
p8176
I40
VQualifiedName: Token.SEGMENT
p8177
tp8178
I1
s(Vinsert
p8179
I45
VStringLiteral: "MATCH ("
p8180
tp8181
I1
s(Vinsert
p8182
I42
VSimpleName: MySqlWallTest25
p8183
tp8184
I1
s(Vinsert
p8185
I45
VStringLiteral: "FORCE ALL PARTITIONS "
p8186
tp8187
I1
s(Vinsert
p8188
I2
VArrayAccess
p8189
tp8190
I59
s(Vinsert
p8191
I42
VSimpleName: MockConnectionClosedException
p8192
tp8193
I1
s(Vinsert
p8194
I45
VStringLiteral: "\u005ctAND T1.SCENE_ID = T2.SCENE_ID\u005cn"
p8195
tp8196
I1
s(Vinsert
p8197
I42
VSimpleName: setIdentifiedBy
p8198
tp8199
I1
s(Vinsert
p8200
I42
VSimpleName: MySqlDescribeStatement
p8201
tp8202
I4
s(Vinsert
p8203
I45
VStringLiteral: "\u005ct\u005ct, ?, ?, ?, ?, ?)"
p8204
tp8205
I1
s(Vinsert
p8206
I45
VStringLiteral: "SELECT 1"
p8207
tp8208
I12
s(Vinsert
p8209
I42
VSimpleName: lastValidIdleMillis
p8210
tp8211
I1
s(Vinsert
p8212
I45
VStringLiteral: "Take Thread"
p8213
tp8214
I1
s(Vinsert
p8215
I42
VSimpleName: setConnectTimeout
p8216
tp8217
I1
s(Vinsert
p8218
I42
VSimpleName: executeErrorLast
p8219
tp8220
I2
s(Vinsert
p8221
I42
VSimpleName: OracleAnalyticWindowing
p8222
tp8223
I1
s(Vinsert
p8224
I42
VSimpleName: subPartitionTemplate
p8225
tp8226
I1
s(Vinsert
p8227
I40
VQualifiedName: JdbcConstants.POSTGRESQL
p8228
tp8229
I3
s(Vinsert
p8230
I42
VSimpleName: getRowId
p8231
tp8232
I1
s(Vinsert
p8233
I45
VStringLiteral: "\u005cn\u005ct, TO_DATE('04-OCT-1992', 'DD-MON-YYYY'), 'SH_CLERK', 3000, NULL, 121"
p8234
tp8235
I2
s(Vinsert
p8236
I45
VStringLiteral: "\u005ct, a.SID AS SID, a.TYPE AS lock_type, a.row_wait_file#, a.row_wait_block#, a.row_wait_row#\u005cn"
p8237
tp8238
I1
s(Vinsert
p8239
I45
VStringLiteral: "\u005ct\u005ctt2.os, \u005cn"
p8240
tp8241
I1
s(Vinsert
p8242
I42
VSimpleName: datasource
p8243
tp8244
I16
s(Vinsert
p8245
I42
VSimpleName: spec
p8246
tp8247
I3
s(Vinsert
p8248
I42
VSimpleName: rewritten
p8249
tp8250
I1
s(Vinsert
p8251
I45
VStringLiteral: "Filters"
p8252
tp8253
I1
s(Vinsert
p8254
I42
VSimpleName: test_http_config
p8255
tp8256
I1
s(Vinsert
p8257
I42
VSimpleName: getPhysicalConnectionUsedCount
p8258
tp8259
I1
s(Vinsert
p8260
I45
VStringLiteral: "SESSION"
p8261
tp8262
I1
s(Vinsert
p8263
I42
VSimpleName: countQueryBlock
p8264
tp8265
I2
s(Vinsert
p8266
I42
VSimpleName: indexFor
p8267
tp8268
I3
s(Vinsert
p8269
I42
VSimpleName: afterInvoke
p8270
tp8271
I1
s(Vinsert
p8272
I40
VQualifiedName: com.alibaba.druid.sql.ast.expr.SQLVariantRefExpr
p8273
tp8274
I1
s(Vinsert
p8275
I42
VSimpleName: EvalMethodTest_insert
p8276
tp8277
I1
s(Vinsert
p8278
I45
VStringLiteral: "where not exists   ("
p8279
tp8280
I1
s(Vinsert
p8281
I42
VSimpleName: getType
p8282
tp8283
I15
s(Vinsert
p8284
I45
VStringLiteral: "\u005ctid bigint,\u005cn"
p8285
tp8286
I1
s(Vinsert
p8287
I43
VSimpleType: LinkedHashMap
p8288
tp8289
I11
s(Vinsert
p8290
I40
VQualifiedName: com.alibaba.druid.wall.WallTableStatValue
p8291
tp8292
I1
s(Vinsert
p8293
I42
VSimpleName: getMessage
p8294
tp8295
I20
s(Vinsert
p8296
I42
VSimpleName: setCommentAllow
p8297
tp8298
I5
s(Vinsert
p8299
I42
VSimpleName: getConnectionLoggerName
p8300
tp8301
I1
s(Vinsert
p8302
I42
VSimpleName: clobFreeCount
p8303
tp8304
I1
s(Vinsert
p8305
I40
VQualifiedName: Token.HAVING
p8306
tp8307
I1
s(Vinsert
p8308
I42
VSimpleName: destroyCount
p8309
tp8310
I1
s(Vinsert
p8311
I40
VQualifiedName: JdbcConstants.ODPS
p8312
tp8313
I11
s(Vinsert
p8314
I42
VSimpleName: setEndTimeMillis
p8315
tp8316
I4
s(Vinsert
p8317
I42
VSimpleName: histo
p8318
tp8319
I3
s(Vinsert
p8320
I45
VStringLiteral: "org.apache.derby.jdbc.EmbeddedDriver"
p8321
tp8322
I1
s(Vinsert
p8323
I45
VStringLiteral: "\u005cn\u005ctlist_price NUMBER(8, 2),"
p8324
tp8325
I2
s(Vinsert
p8326
I42
VSimpleName: getFor
p8327
tp8328
I1
s(Vinsert
p8329
I42
VSimpleName: getDefaultTransactionIsolation
p8330
tp8331
I1
s(Vinsert
p8332
I42
VSimpleName: getPoolingConnectionInfo
p8333
tp8334
I3
s(Vinsert
p8335
I42
VSimpleName: keyNow
p8336
tp8337
I4
s(Vinsert
p8338
I43
VSimpleType: SQLException
p8339
tp8340
I149
s(Vinsert
p8341
I42
VSimpleName: prepareCall
p8342
tp8343
I3
s(Vinsert
p8344
I40
VQualifiedName: Token.DESC
p8345
tp8346
I1
s(Vinsert
p8347
I45
VStringLiteral: "\u005cn\u005ctWHERE tbek_code != ?)"
p8348
tp8349
I1
s(Vinsert
p8350
I42
VSimpleName: findOne
p8351
tp8352
I1
s(Vinsert
p8353
I43
VSimpleType: SchemaResolveVisitor
p8354
tp8355
I2
s(Vinsert
p8356
I42
VSimpleName: rightEvalExpr
p8357
tp8358
I1
s(Vinsert
p8359
I42
VSimpleName: getStackTrace
p8360
tp8361
I3
s(Vinsert
p8362
I42
VSimpleName: SQLColumnCheck
p8363
tp8364
I2
s(Vinsert
p8365
I42
VSimpleName: comment
p8366
tp8367
I18
s(Vinsert
p8368
I13
VCharacterLiteral: '|'
p8369
tp8370
I1
s(Vinsert
p8371
I42
VSimpleName: SQLAlterTableSetComment
p8372
tp8373
I1
s(Vinsert
p8374
I45
VStringLiteral: "tddl5"
p8375
tp8376
I2
s(Vinsert
p8377
I45
VStringLiteral: "parent_id"
p8378
tp8379
I1
s(Vinsert
p8380
I34
VNumberLiteral: 600
p8381
tp8382
I2
s(Vinsert
p8383
I42
VSimpleName: exportParameters
p8384
tp8385
I1
s(Vinsert
p8386
I43
VSimpleType: ConnectionHolder
p8387
tp8388
I3
s(Vinsert
p8389
I43
VSimpleType: OracleSizeExpr
p8390
tp8391
I2
s(Vinsert
p8392
I45
VStringLiteral: "public "
p8393
tp8394
I1
s(Vinsert
p8395
I45
VStringLiteral: "\u005cn\u005ctFROM t"
p8396
tp8397
I2
s(Vinsert
p8398
I45
VStringLiteral: "OPTIONS (USER 'Remote', HOST '192.168.1.106', DATABASE 'test');"
p8399
tp8400
I1
s(Vinsert
p8401
I42
VSimpleName: setVisible
p8402
tp8403
I1
s(Vinsert
p8404
I42
VSimpleName: MBeanServer
p8405
tp8406
I4
s(Vinsert
p8407
I42
VSimpleName: createSqlInfo
p8408
tp8409
I1
s(Vinsert
p8410
I43
VSimpleType: PGLimit
p8411
tp8412
I6
s(Vinsert
p8413
I45
VStringLiteral: "\u005cn\u005ctENABLE LIFECYCLE"
p8414
tp8415
I1
s(Vinsert
p8416
I42
VSimpleName: getFlashback
p8417
tp8418
I1
s(Vinsert
p8419
I45
VStringLiteral: "\u005cn\u005ctDISABLE LIFECYCLE"
p8420
tp8421
I1
s(Vinsert
p8422
I45
VStringLiteral: " AS "
p8423
tp8424
I3
s(Vinsert
p8425
I43
VSimpleType: ParameterizedVisitor
p8426
tp8427
I4
s(Vinsert
p8428
I42
VSimpleName: EvalMethodAsinTest
p8429
tp8430
I1
s(Vinsert
p8431
I42
VSimpleName: PSQLException
p8432
tp8433
I2
s(Vinsert
p8434
I42
VSimpleName: decrementAndGet
p8435
tp8436
I2
s(Vinsert
p8437
I42
VSimpleName: addPrivileges
p8438
tp8439
I1
s(Vinsert
p8440
I45
VStringLiteral: "x1"
p8441
tp8442
I1
s(Vinsert
p8443
I42
VSimpleName: testUnion
p8444
tp8445
I1
s(Vinsert
p8446
I42
VSimpleName: MyPreparedStatement
p8447
tp8448
I2
s(Vinsert
p8449
I42
VSimpleName: sqlStmt
p8450
tp8451
I4
s(Vinsert
p8452
I45
VStringLiteral: "distinct "
p8453
tp8454
I1
s(Vinsert
p8455
I42
VSimpleName: idleList
p8456
tp8457
I1
s(Vinsert
p8458
I42
VSimpleName: cond
p8459
tp8460
I2
s(Vinsert
p8461
I45
VStringLiteral: "\u005ct\u005ctSELECT ITEM.CONTRACT_MODULE_ID AS CONTRACT_MODULE_ID, ITEM.INVENTORY_ITEM_ID, ITEM.CONTRACT_ITEM_ID, SYS_ITEM.DESCRIPTION, SYS_ITEM.ATTRIBUTE1\u005cn"
p8462
tp8463
I1
s(Vinsert
p8464
I45
VStringLiteral: "\u005cn\u005ctPARTITION p0 VALUES LESS THAN (1990),"
p8465
tp8466
I1
s(Vinsert
p8467
I74
VParameterizedType: ArrayList<List<Object>>
p8468
tp8469
I1
s(Vinsert
p8470
I40
VQualifiedName: com.alibaba.druid.sql.ast.SQLDataType
p8471
tp8472
I2
s(Vinsert
p8473
I40
VQualifiedName: Token.WHILE
p8474
tp8475
I1
s(Vinsert
p8476
I40
VQualifiedName: SQLSequenceExpr.Function.CurrVal
p8477
tp8478
I1
s(Vinsert
p8479
I42
VSimpleName: createExportParameterVisitor
p8480
tp8481
I1
s(Vinsert
p8482
I42
VSimpleName: stmtClosedError
p8483
tp8484
I1
s(Vinsert
p8485
I43
VSimpleType: WallProviderStatValue
p8486
tp8487
I2
s(Vinsert
p8488
I42
VSimpleName: MySqlSelectQueryBlock
p8489
tp8490
I51
s(Vinsert
p8491
I42
VSimpleName: wallProvider
p8492
tp8493
I2
s(Vinsert
p8494
I42
VSimpleName: setColumnType
p8495
tp8496
I3
s(Vinsert
p8497
I42
VSimpleName: WallProviderStatValue
p8498
tp8499
I2
s(Vinsert
p8500
I43
VSimpleType: org.apache.tomcat.jdbc.pool.DataSource
p8501
tp8502
I2
s(Vinsert
p8503
I45
VStringLiteral: "continue"
p8504
tp8505
I1
s(Vinsert
p8506
I42
VSimpleName: valueOf
p8507
tp8508
I8
s(Vinsert
p8509
I42
VSimpleName: setMapping
p8510
tp8511
I1
s(Vinsert
p8512
I43
VSimpleType: NotAllowCommentException
p8513
tp8514
I1
s(Vinsert
p8515
I42
VSimpleName: operator
p8516
tp8517
I14
s(Vinsert
p8518
I43
VSimpleType: SQLExecutor
p8519
tp8520
I3
s(Vinsert
p8521
I42
VSimpleName: isSetAllow
p8522
tp8523
I1
s(Vinsert
p8524
I42
VSimpleName: jmxConn
p8525
tp8526
I2
s(Vinsert
p8527
I43
VSimpleType: MockResultSet
p8528
tp8529
I2
s(Vinsert
p8530
I43
VSimpleType: HTableDescriptor
p8531
tp8532
I1
s(Vinsert
p8533
I42
VSimpleName: singleTableQueryExecuetePlan
p8534
tp8535
I1
s(Vinsert
p8536
I45
VStringLiteral: "c4 ae\u005cn"
p8537
tp8538
I1
s(Vinsert
p8539
I42
VSimpleName: parameterMap
p8540
tp8541
I2
s(Vinsert
p8542
I45
VStringLiteral: "\u005cn\u005ctpromo_id NUMBER(6),"
p8543
tp8544
I2
s(Vinsert
p8545
I13
VCharacterLiteral: '.'
p8546
tp8547
I2
s(Vinsert
p8548
I45
VStringLiteral: "\u005ct\u005ctTABLESPACE \u005c"APPINDX1M\u005c"\u005cn"
p8549
tp8550
I1
s(Vinsert
p8551
I42
VSimpleName: getUsers
p8552
tp8553
I3
s(Vinsert
p8554
I40
VQualifiedName: FnvHash.Constants.LEVEL
p8555
tp8556
I1
s(Vinsert
p8557
I42
VSimpleName: test_method
p8558
tp8559
I23
s(Vinsert
p8560
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION s3"
p8561
tp8562
I1
s(Vinsert
p8563
I45
VStringLiteral: "\u005ct\u005ctFROM dual;\u005cn"
p8564
tp8565
I1
s(Vinsert
p8566
I42
VSimpleName: getConnectionProxy
p8567
tp8568
I7
s(Vinsert
p8569
I45
VStringLiteral: " where "
p8570
tp8571
I1
s(Vinsert
p8572
I43
VSimpleType: MockPreparedStatement
p8573
tp8574
I4
s(Vinsert
p8575
I42
VSimpleName: getMinRows
p8576
tp8577
I2
s(Vinsert
p8578
I42
VSimpleName: formatMethod
p8579
tp8580
I4
s(Vinsert
p8581
I45
VStringLiteral: "    and asq.sequence_owner = us.table_owner"
p8582
tp8583
I2
s(Vinsert
p8584
I42
VSimpleName: SQLSelectStatement
p8585
tp8586
I73
s(Vinsert
p8587
I45
VStringLiteral: "LEAVE "
p8588
tp8589
I1
s(Vinsert
p8590
I40
VQualifiedName: Token.INSERT
p8591
tp8592
I3
s(Vinsert
p8593
I43
VSimpleType: SQLDropProcedureStatement
p8594
tp8595
I1
s(Vinsert
p8596
I43
VSimpleType: SQLTruncateStatement
p8597
tp8598
I2
s(Vinsert
p8599
I42
VSimpleName: getDatabase
p8600
tp8601
I6
s(Vinsert
p8602
I42
VSimpleName: setDriverClassName
p8603
tp8604
I5
s(Vinsert
p8605
I40
VQualifiedName: DB2SelectQueryBlock.Isolation.RR
p8606
tp8607
I1
s(Vinsert
p8608
I42
VSimpleName: test
p8609
tp8610
I2
s(Vinsert
p8611
I45
VStringLiteral: "\u005ct\u005ctFREELIST GROUPS 1\u005cn"
p8612
tp8613
I7
s(Vinsert
p8614
I42
VSimpleName: profiletat
p8615
tp8616
I1
s(Vinsert
p8617
I42
VSimpleName: getValuesList
p8618
tp8619
I6
s(Vinsert
p8620
I42
VSimpleName: withSubQuery
p8621
tp8622
I1
s(Vinsert
p8623
I42
VSimpleName: setForceAllPartitions
p8624
tp8625
I2
s(Vinsert
p8626
I43
VSimpleType: PGSchemaStatVisitor
p8627
tp8628
I57
s(Vinsert
p8629
I45
VStringLiteral: "select * from t where id = 3 or id = 5 or id = 7"
p8630
tp8631
I1
s(Vinsert
p8632
I45
VStringLiteral: " INITIAL_SIZE "
p8633
tp8634
I1
s(Vinsert
p8635
I40
VQualifiedName: FnvHash.Constants.HOUR
p8636
tp8637
I1
s(Vinsert
p8638
I42
VSimpleName: setDbLink
p8639
tp8640
I1
s(Vinsert
p8641
I45
VStringLiteral: "\u005cnFROM t1;"
p8642
tp8643
I1
s(Vinsert
p8644
I42
VSimpleName: clob_getSubString
p8645
tp8646
I1
s(Vinsert
p8647
I40
VQualifiedName: SQLServerColumnDefinition.Identity
p8648
tp8649
I2
s(Vinsert
p8650
I45
VStringLiteral: "\u005cn\u005ctDISCARD PARTITION ALL"
p8651
tp8652
I1
s(Vinsert
p8653
I42
VSimpleName: SQLParseException
p8654
tp8655
I3
s(Vinsert
p8656
I45
VStringLiteral: "   from all_synonyms us, all_sequences asq"
p8657
tp8658
I2
s(Vinsert
p8659
I42
VSimpleName: getBean
p8660
tp8661
I2
s(Vinsert
p8662
I42
VSimpleName: multiDataSource
p8663
tp8664
I4
s(Vinsert
p8665
I40
VQualifiedName: entry.hash
p8666
tp8667
I1
s(Vinsert
p8668
I45
VStringLiteral: "jdbc:phoenix:thin:"
p8669
tp8670
I1
s(Vinsert
p8671
I42
VSimpleName: assign
p8672
tp8673
I3
s(Vinsert
p8674
I42
VSimpleName: addAfterComment
p8675
tp8676
I3
s(Vinsert
p8677
I42
VSimpleName: isWarnEnabled
p8678
tp8679
I6
s(Vinsert
p8680
I42
VSimpleName: incrementCachedPreparedStatementHitCount
p8681
tp8682
I1
s(Vinsert
p8683
I42
VSimpleName: savePoint
p8684
tp8685
I2
s(Vinsert
p8686
I40
VQualifiedName: Token.ENABLE
p8687
tp8688
I3
s(Vinsert
p8689
I45
VStringLiteral: "\u005ctEXECUTE IMMEDIATE sql_stmt USING emp_id RETURNNING INTO salary;\u005cn"
p8690
tp8691
I1
s(Vinsert
p8692
I42
VSimpleName: globalPartitions
p8693
tp8694
I1
s(Vinsert
p8695
I42
VSimpleName: TeradataSelectQueryBlock
p8696
tp8697
I2
s(Vinsert
p8698
I45
VStringLiteral: "fulltext "
p8699
tp8700
I1
s(Vinsert
p8701
I45
VStringLiteral: "'a' RLIKE '^[a-d]'"
p8702
tp8703
I1
s(Vinsert
p8704
I45
VStringLiteral: "druid.wall.timer.threadCount"
p8705
tp8706
I1
s(Vinsert
p8707
I45
VStringLiteral: " PARTITION ("
p8708
tp8709
I1
s(Vinsert
p8710
I42
VSimpleName: isWhitespace
p8711
tp8712
I1
s(Vinsert
p8713
I45
VStringLiteral: "jdbc:h2:mem:test"
p8714
tp8715
I1
s(Vinsert
p8716
I45
VStringLiteral: "WHERE T1.THE_DATE = TRUNC(SYSDATE)\u005cn"
p8717
tp8718
I1
s(Vinsert
p8719
I42
VSimpleName: size
p8720
tp8721
I703
s(Vinsert
p8722
I45
VStringLiteral: "REFRESH COMPLETE\u005cn"
p8723
tp8724
I1
s(Vinsert
p8725
I45
VStringLiteral: "\u005cninsert overwrite table c partition(ds='20150711')"
p8726
tp8727
I1
s(Vinsert
p8728
I42
VSimpleName: createConnection
p8729
tp8730
I2
s(Vinsert
p8731
I42
VSimpleName: setFailureDetector
p8732
tp8733
I1
s(Vinsert
p8734
I40
VQualifiedName: JdbcUtils.DB2
p8735
tp8736
I5
s(Vinsert
p8737
I42
VSimpleName: methodSignature
p8738
tp8739
I1
s(Vinsert
p8740
I42
VSimpleName: condition
p8741
tp8742
I19
s(Vinsert
p8743
I45
VStringLiteral: "\u005ct\u005ctgroup by pv_id, \u005cn"
p8744
tp8745
I1
s(Vinsert
p8746
I42
VSimpleName: Iterator
p8747
tp8748
I1
s(Vinsert
p8749
I45
VStringLiteral: "test"
p8750
tp8751
I6
s(Vinsert
p8752
I45
VStringLiteral: "ORGANIZATION "
p8753
tp8754
I2
s(Vinsert
p8755
I45
VStringLiteral: "ORDER BY cq.created_at ASC, cq.id ASC"
p8756
tp8757
I1
s(Vinsert
p8758
I45
VStringLiteral: "druid.globalDbType"
p8759
tp8760
I1
s(Vinsert
p8761
I40
VQualifiedName: com.alibaba.druid.sql.ast.statement.SQLSelect
p8762
tp8763
I1
s(Vinsert
p8764
I42
VSimpleName: setPrecision
p8765
tp8766
I1
s(Vinsert
p8767
I42
VSimpleName: getData
p8768
tp8769
I5
s(Vinsert
p8770
I42
VSimpleName: storage
p8771
tp8772
I8
s(Vinsert
p8773
I42
VSimpleName: topStatementContext
p8774
tp8775
I6
s(Vinsert
p8776
I43
VSimpleType: SQLServerParameter
p8777
tp8778
I3
s(Vinsert
p8779
I42
VSimpleName: getModel
p8780
tp8781
I1
s(Vinsert
p8782
I45
VStringLiteral: " COLLATE "
p8783
tp8784
I1
s(Vinsert
p8785
I27
VInfixExpression: ||
p8786
tp8787
I77
s(Vinsert
p8788
I45
VStringLiteral: "d\u005cn"
p8789
tp8790
I1
s(Vinsert
p8791
I42
VSimpleName: constant
p8792
tp8793
I1
s(Vinsert
p8794
I45
VStringLiteral: "\u005cnfrom table3;--comment2 goes here"
p8795
tp8796
I1
s(Vinsert
p8797
I45
VStringLiteral: "\u005ct) I ON Mod.CONTRACT_MODULE_ID = I.CONTRACT_MODULE_ID "
p8798
tp8799
I1
s(Vinsert
p8800
I42
VSimpleName: DataSourceHolder
p8801
tp8802
I9
s(Vinsert
p8803
I42
VSimpleName: builder
p8804
tp8805
I6
s(Vinsert
p8806
I42
VSimpleName: sessionStatLock
p8807
tp8808
I2
s(Vinsert
p8809
I43
VSimpleType: PGWallProvider
p8810
tp8811
I2
s(Vinsert
p8812
I43
VSimpleType: OracleToMySqlOutputVisitor
p8813
tp8814
I1
s(Vinsert
p8815
I45
VStringLiteral: "\u005cn\u005ctCHECK PARTITION ALL"
p8816
tp8817
I1
s(Vinsert
p8818
I45
VStringLiteral: "\u005ctCONSTRAINT PK_XT_DJ_GN PRIMARY KEY (GNBH),\u005cn"
p8819
tp8820
I1
s(Vinsert
p8821
I42
VSimpleName: jdbcExecuteCount
p8822
tp8823
I2
s(Vinsert
p8824
I42
VSimpleName: sleep
p8825
tp8826
I6
s(Vinsert
p8827
I42
VSimpleName: statementIdSeed
p8828
tp8829
I2
s(Vinsert
p8830
I45
VStringLiteral: "\u005ctcredit\u005cn"
p8831
tp8832
I1
s(Vinsert
p8833
I34
VNumberLiteral: 1.0F
p8834
tp8835
I2
s(Vinsert
p8836
I45
VStringLiteral: "/sql.json"
p8837
tp8838
I1
s(Vinsert
p8839
I45
VStringLiteral: "\u005cn\u005ctpromo_end_date DATE"
p8840
tp8841
I2
s(Vinsert
p8842
I42
VSimpleName: putLong
p8843
tp8844
I1
s(Vinsert
p8845
I42
VSimpleName: addExecuteTime
p8846
tp8847
I1
s(Vinsert
p8848
I45
VStringLiteral: "\u005cnWHERE id = 0"
p8849
tp8850
I5
s(Vinsert
p8851
I42
VSimpleName: withReadOnly
p8852
tp8853
I2
s(Vinsert
p8854
I45
VStringLiteral: "WHERE RID = ? "
p8855
tp8856
I1
s(Vinsert
p8857
I42
VSimpleName: rollUp
p8858
tp8859
I2
s(Vinsert
p8860
I45
VStringLiteral: "\u005ctDBMS_OUTPUT.put_line('Hello World!');\u005cn"
p8861
tp8862
I1
s(Vinsert
p8863
I45
VStringLiteral: "\u005cn\u005ctorder_id NUMBER"
p8864
tp8865
I2
s(Vinsert
p8866
I42
VSimpleName: browserChromeCount
p8867
tp8868
I1
s(Vinsert
p8869
I45
VStringLiteral: "   and ps_perd_no <> 0 group by loan_no) shd on shd.loan_no=loan.loan_no\u005cn"
p8870
tp8871
I1
s(Vinsert
p8872
I45
VStringLiteral: "SELECT * FROM m_sql_const"
p8873
tp8874
I1
s(Vinsert
p8875
I45
VStringLiteral: "select * from t where f0 > 0 -- comment_0"
p8876
tp8877
I1
s(Vinsert
p8878
I42
VSimpleName: callObjectMethod
p8879
tp8880
I5
s(Vinsert
p8881
I42
VSimpleName: flashback
p8882
tp8883
I9
s(Vinsert
p8884
I42
VSimpleName: test01
p8885
tp8886
I1
s(Vinsert
p8887
I45
VStringLiteral: "FOR READ ONLY"
p8888
tp8889
I1
s(Vinsert
p8890
I42
VSimpleName: frame
p8891
tp8892
I1
s(Vinsert
p8893
I45
VStringLiteral: "\u005ctURL VARCHAR(150),\u005cn"
p8894
tp8895
I2
s(Vinsert
p8896
I42
VSimpleName: invoke
p8897
tp8898
I7
s(Vinsert
p8899
I42
VSimpleName: startYGC
p8900
tp8901
I2
s(Vinsert
p8902
I42
VSimpleName: getRawUrl
p8903
tp8904
I1
s(Vinsert
p8905
I74
VParameterizedType: ArrayList<Filter>
p8906
tp8907
I1
s(Vinsert
p8908
I42
VSimpleName: partitions
p8909
tp8910
I11
s(Vinsert
p8911
I42
VSimpleName: getFatalErrorCodes
p8912
tp8913
I2
s(Vinsert
p8914
I42
VSimpleName: parseClose
p8915
tp8916
I1
s(Vinsert
p8917
I42
VSimpleName: parseUpdateStatement
p8918
tp8919
I2
s(Vinsert
p8920
I42
VSimpleName: enableLifeCycle
p8921
tp8922
I1
s(Vinsert
p8923
I43
VSimpleType: OracleBinaryDoubleExpr
p8924
tp8925
I1
s(Vinsert
p8926
I40
VQualifiedName: MySqlSelectQueryBlock.Limit
p8927
tp8928
I1
s(Vinsert
p8929
I42
VSimpleName: not
p8930
tp8931
I5
s(Vinsert
p8932
I42
VSimpleName: createItem
p8933
tp8934
I1
s(Vinsert
p8935
I42
VSimpleName: ManagementFactory
p8936
tp8937
I12
s(Vinsert
p8938
I7
VAssignment: *=
p8939
tp8940
I3
s(Vinsert
p8941
I42
VSimpleName: setStatementLogErrorEnabled
p8942
tp8943
I1
s(Vinsert
p8944
I45
VStringLiteral: "SELECT db.db_key, db.db_id, bs.bs_key, bs.bs_recid AS recid, bs.bs_stamp AS stamp\u005cn"
p8945
tp8946
I1
s(Vinsert
p8947
I43
VSimpleType: OracleRunStatement
p8948
tp8949
I2
s(Vinsert
p8950
I42
VSimpleName: DruidDataSourceBuilder
p8951
tp8952
I4
s(Vinsert
p8953
I42
VSimpleName: lastActiveTimeMillis
p8954
tp8955
I1
s(Vinsert
p8956
I45
VStringLiteral: "LEADING"
p8957
tp8958
I1
s(Vinsert
p8959
I42
VSimpleName: parametersArray
p8960
tp8961
I1
s(Vinsert
p8962
I43
VSimpleType: SQLListExpr
p8963
tp8964
I5
s(Vinsert
p8965
I45
VStringLiteral: "\u005ct\u005ct\u005ct\u005ctSELECT a.menu_id, a.parent_id\u005cn"
p8966
tp8967
I1
s(Vinsert
p8968
I45
VStringLiteral: "\u005ct(\u005cn"
p8969
tp8970
I1
s(Vinsert
p8971
I42
VSimpleName: JdbcTraceManager
p8972
tp8973
I1
s(Vinsert
p8974
I42
VSimpleName: startsWith
p8975
tp8976
I55
s(Vinsert
p8977
I42
VSimpleName: MySqlWallTest5
p8978
tp8979
I1
s(Vinsert
p8980
I42
VSimpleName: whiteSqlMaxSize
p8981
tp8982
I1
s(Vinsert
p8983
I42
VSimpleName: InetAddress
p8984
tp8985
I1
s(Vinsert
p8986
I45
VStringLiteral: "PUBLIC"
p8987
tp8988
I2
s(Vinsert
p8989
I45
VStringLiteral: "CREATE SEQUENCE \u005c"GJS_ZIXUN\u005c".\u005c"FINANCE_EXPLAIN_ID_GENERATOR\u005c" ORDER"
p8990
tp8991
I1
s(Vinsert
p8992
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION east VALUES ('CHINA', 'JAPAN', 'INDIA', 'THAILAND'),"
p8993
tp8994
I2
s(Vinsert
p8995
I42
VSimpleName: parseAlterTableDropPartition
p8996
tp8997
I2
s(Vinsert
p8998
I42
VSimpleName: updateCountMax
p8999
tp9000
I2
s(Vinsert
p9001
I42
VSimpleName: userNameHashCod64
p9002
tp9003
I3
s(Vinsert
p9004
I42
VSimpleName: handlers
p9005
tp9006
I2
s(Vinsert
p9007
I42
VSimpleName: getRawPreparedStatement
p9008
tp9009
I1
s(Vinsert
p9010
I42
VSimpleName: restartDataSource
p9011
tp9012
I4
s(Vinsert
p9013
I42
VSimpleName: SQLLateralViewTableSource
p9014
tp9015
I2
s(Vinsert
p9016
I42
VSimpleName: getRunningCount
p9017
tp9018
I9
s(Vinsert
p9019
I45
VStringLiteral: "start with MgrId is null\u005cn"
p9020
tp9021
I1
s(Vinsert
p9022
I42
VSimpleName: isLoggable
p9023
tp9024
I2
s(Vinsert
p9025
I42
VSimpleName: selectItemHasAllColumn
p9026
tp9027
I1
s(Vinsert
p9028
I42
VSimpleName: subPartition
p9029
tp9030
I3
s(Vinsert
p9031
I43
VSimpleType: SQLBooleanExpr
p9032
tp9033
I3
s(Vinsert
p9034
I42
VSimpleName: xaDataSource
p9035
tp9036
I1
s(Vinsert
p9037
I42
VSimpleName: constaints
p9038
tp9039
I2
s(Vinsert
p9040
I42
VSimpleName: Error
p9041
tp9042
I1
s(Vinsert
p9043
I45
VStringLiteral: "LoginTimeout"
p9044
tp9045
I1
s(Vinsert
p9046
I42
VSimpleName: commit
p9047
tp9048
I3
s(Vinsert
p9049
I42
VSimpleName: getActiveConnectionStackTraceByDataSourceId
p9050
tp9051
I6
s(Vinsert
p9052
I43
VSimpleType: SQLServerOutput
p9053
tp9054
I1
s(Vinsert
p9055
I45
VStringLiteral: " OBJNO "
p9056
tp9057
I1
s(Vinsert
p9058
I45
VStringLiteral: "\u005cn\u005ct\u005ctFROM acduser.vw_kreis_code"
p9059
tp9060
I1
s(Vinsert
p9061
I40
VQualifiedName: lexer.text
p9062
tp9063
I3
s(Vinsert
p9064
I74
VParameterizedType: List<SQLObject>
p9065
tp9066
I9
s(Vinsert
p9067
I45
VStringLiteral: "jdbc:mock:xxx_B"
p9068
tp9069
I1
s(Vinsert
p9070
I42
VSimpleName: firstStmt
p9071
tp9072
I1
s(Vinsert
p9073
I45
VStringLiteral: "SELECT s.id FROM snapshots s "
p9074
tp9075
I1
s(Vinsert
p9076
I45
VStringLiteral: "truncate"
p9077
tp9078
I1
s(Vinsert
p9079
I42
VSimpleName: parse
p9080
tp9081
I9
s(Vinsert
p9082
I45
VStringLiteral: "\u005cn\u005ctDROP IF NOT EXISTS PARTITION (sale_date = '201312', region = 'hangzhou')"
p9083
tp9084
I1
s(Vinsert
p9085
I45
VStringLiteral: "PIPE ROW("
p9086
tp9087
I1
s(Vinsert
p9088
I45
VStringLiteral: "RawDriverClassName"
p9089
tp9090
I1
s(Vinsert
p9091
I42
VSimpleName: all
p9092
tp9093
I2
s(Vinsert
p9094
I43
VSimpleType: MySqlLeaveStatement
p9095
tp9096
I1
s(Vinsert
p9097
I42
VSimpleName: ConfigFilter
p9098
tp9099
I3
s(Vinsert
p9100
I45
VStringLiteral: " AND status='P'"
p9101
tp9102
I1
s(Vinsert
p9103
I43
VSimpleType: SQLAssignItem
p9104
tp9105
I12
s(Vinsert
p9106
I42
VSimpleName: setTraceEnable
p9107
tp9108
I4
s(Vinsert
p9109
I42
VSimpleName: MAPPING_ENTITY
p9110
tp9111
I4
s(Vinsert
p9112
I43
VSimpleType: SQLAlterTableCoalescePartition
p9113
tp9114
I1
s(Vinsert
p9115
I42
VSimpleName: ctor
p9116
tp9117
I1
s(Vinsert
p9118
I42
VSimpleName: getInstance
p9119
tp9120
I72
s(Vinsert
p9121
I42
VSimpleName: result
p9122
tp9123
I181
s(Vinsert
p9124
I42
VSimpleName: txtConnecting
p9125
tp9126
I1
s(Vinsert
p9127
I66
VTextElement: this method you should call it before calling any other iBATIS method.
p9128
tp9129
I1
s(Vinsert
p9130
I42
VSimpleName: scanHexaDecimal
p9131
tp9132
I1
s(Vinsert
p9133
I42
VSimpleName: nanoTime
p9134
tp9135
I5
s(Vinsert
p9136
I45
VStringLiteral: "\u005ctFROM DMN_MKTG_PLAN_TYPE\u005cn"
p9137
tp9138
I2
s(Vinsert
p9139
I45
VStringLiteral: "\u005cn\u005ct\u005ctSELECT tbek_code"
p9140
tp9141
I1
s(Vinsert
p9142
I42
VSimpleName: objectType
p9143
tp9144
I5
s(Vinsert
p9145
I45
VStringLiteral: "\u005cn f1 > 0"
p9146
tp9147
I1
s(Vinsert
p9148
I45
VStringLiteral: " AND NOT EXISTS (select m.id from project_measures m WHERE m.snapshot_id=s.id)"
p9149
tp9150
I1
s(Vinsert
p9151
I42
VSimpleName: setConnectionCustomizerClassName
p9152
tp9153
I1
s(Vinsert
p9154
I42
VSimpleName: HBasePreparedStatement
p9155
tp9156
I1
s(Vinsert
p9157
I42
VSimpleName: printChars
p9158
tp9159
I1
s(Vinsert
p9160
I43
VSimpleType: OracleExtractExpr
p9161
tp9162
I2
s(Vinsert
p9163
I45
VStringLiteral: "0"
p9164
tp9165
I4
s(Vinsert
p9166
I42
VSimpleName: getDenyTables
p9167
tp9168
I1
s(Vinsert
p9169
I43
VSimpleType: DruidPooledConnection
p9170
tp9171
I47
s(Vinsert
p9172
I45
VStringLiteral: "\u005ctLIMIT 1)"
p9173
tp9174
I1
s(Vinsert
p9175
I42
VSimpleName: Closeable
p9176
tp9177
I1
s(Vinsert
p9178
I45
VStringLiteral: "SELECT COL1\u005cn"
p9179
tp9180
I1
s(Vinsert
p9181
I34
VNumberLiteral: 0x811c9dc5
p9182
tp9183
I2
s(Vinsert
p9184
I42
VSimpleName: SQLSyntaxErrorException
p9185
tp9186
I1
s(Vinsert
p9187
I42
VSimpleName: getText
p9188
tp9189
I9
s(Vinsert
p9190
I43
VSimpleType: DruidDataSourceStatJNDIStatStrategy
p9191
tp9192
I1
s(Vinsert
p9193
I43
VSimpleType: MySqlBooleanExpr
p9194
tp9195
I3
s(Vinsert
p9196
I40
VQualifiedName: com.alibaba.druid.filter.wall.spi.WallVisitorUtils
p9197
tp9198
I1
s(Vinsert
p9199
I42
VSimpleName: st
p9200
tp9201
I2
s(Vinsert
p9202
I43
VSimpleType: OracleGotoStatement
p9203
tp9204
I1
s(Vinsert
p9205
I43
VSimpleType: OracleASTVisitor
p9206
tp9207
I65
s(Vinsert
p9208
I42
VSimpleName: _string
p9209
tp9210
I1
s(Vinsert
p9211
I45
VStringLiteral: "Chrome"
p9212
tp9213
I1
s(Vinsert
p9214
I42
VSimpleName: getAccessModel
p9215
tp9216
I1
s(Vinsert
p9217
I45
VStringLiteral: "mysql"
p9218
tp9219
I5
s(Vinsert
p9220
I42
VSimpleName: isAutoIncrement
p9221
tp9222
I1
s(Vinsert
p9223
I43
VSimpleType: JSONArray
p9224
tp9225
I2
s(Vinsert
p9226
I45
VStringLiteral: "\u005ctOR t2.order_id IS NOT NULL\u005cn"
p9227
tp9228
I1
s(Vinsert
p9229
I45
VStringLiteral: "replaceCount"
p9230
tp9231
I1
s(Vinsert
p9232
I42
VSimpleName: nanoSpan
p9233
tp9234
I2
s(Vinsert
p9235
I42
VSimpleName: numFullGroups
p9236
tp9237
I1
s(Vinsert
p9238
I45
VStringLiteral: "\u005cn\u005ctcustomer_id number(6),"
p9239
tp9240
I2
s(Vinsert
p9241
I42
VSimpleName: leftEvalExpr
p9242
tp9243
I1
s(Vinsert
p9244
I42
VSimpleName: current
p9245
tp9246
I19
s(Vinsert
p9247
I45
VStringLiteral: " INHERITS ("
p9248
tp9249
I1
s(Vinsert
p9250
I42
VSimpleName: MySqlOutputVisitor
p9251
tp9252
I1
s(Vinsert
p9253
I42
VSimpleName: setBinaryStream
p9254
tp9255
I1
s(Vinsert
p9256
I43
VSimpleType: SQLSequenceExpr
p9257
tp9258
I6
s(Vinsert
p9259
I42
VSimpleName: getDefaultRowPrefetch
p9260
tp9261
I2
s(Vinsert
p9262
I45
VStringLiteral: "INTERVAL DAY"
p9263
tp9264
I1
s(Vinsert
p9265
I40
VQualifiedName: SQLParameter.ParameterType.INOUT
p9266
tp9267
I2
s(Vinsert
p9268
I43
VSimpleType: SQLPartitionByHash
p9269
tp9270
I2
s(Vinsert
p9271
I45
VStringLiteral: "FROM xxx"
p9272
tp9273
I1
s(Vinsert
p9274
I45
VStringLiteral: "x"
p9275
tp9276
I1
s(Vinsert
p9277
I45
VStringLiteral: "\u005ctNOCACHE\u005cn"
p9278
tp9279
I6
s(Vinsert
p9280
I42
VSimpleName: ctx
p9281
tp9282
I6
s(Vinsert
p9283
I42
VSimpleName: k3
p9284
tp9285
I3
s(Vinsert
p9286
I43
VSimpleType: SQLNotExpr
p9287
tp9288
I3
s(Vinsert
p9289
I42
VSimpleName: getValidproc
p9290
tp9291
I1
s(Vinsert
p9292
I42
VSimpleName: getOptimizeFor
p9293
tp9294
I1
s(Vinsert
p9295
I40
VQualifiedName: columns.length
p9296
tp9297
I1
s(Vinsert
p9298
I42
VSimpleName: getTriggerEvents
p9299
tp9300
I1
s(Vinsert
p9301
I42
VSimpleName: addViolation
p9302
tp9303
I5
s(Vinsert
p9304
I42
VSimpleName: ConfigurationProperties
p9305
tp9306
I1
s(Vinsert
p9307
I42
VSimpleName: getDefaultValue
p9308
tp9309
I5
s(Vinsert
p9310
I40
VQualifiedName: Char.instance
p9311
tp9312
I1
s(Vinsert
p9313
I45
VStringLiteral: "SELECT last_name, salary * 12 AS annual_salary\u005cn"
p9314
tp9315
I1
s(Vinsert
p9316
I42
VSimpleName: histogram_100000_1000000
p9317
tp9318
I1
s(Vinsert
p9319
I45
VStringLiteral: "col2"
p9320
tp9321
I2
s(Vinsert
p9322
I42
VSimpleName: toArray
p9323
tp9324
I4
s(Vinsert
p9325
I42
VSimpleName: txtUrl
p9326
tp9327
I1
s(Vinsert
p9328
I45
VStringLiteral: "SCN"
p9329
tp9330
I1
s(Vinsert
p9331
I42
VSimpleName: provider
p9332
tp9333
I289
s(Vinsert
p9334
I42
VSimpleName: y
p9335
tp9336
I4
s(Vinsert
p9337
I42
VSimpleName: getWith
p9338
tp9339
I3
s(Vinsert
p9340
I42
VSimpleName: getReferencedColumns
p9341
tp9342
I1
s(Vinsert
p9343
I45
VStringLiteral: "select EmpID, EmpName, MgrId, Level\u005cn"
p9344
tp9345
I1
s(Vinsert
p9346
I42
VSimpleName: password
p9347
tp9348
I12
s(Vinsert
p9349
I42
VSimpleName: containsKey
p9350
tp9351
I12
s(Vinsert
p9352
I42
VSimpleName: setMinusAllow
p9353
tp9354
I2
s(Vinsert
p9355
I45
VStringLiteral: "\u005cnSELECT n"
p9356
tp9357
I1
s(Vinsert
p9358
I42
VSimpleName: AtomicIntegerFieldUpdater
p9359
tp9360
I6
s(Vinsert
p9361
I42
VSimpleName: enable
p9362
tp9363
I2
s(Vinsert
p9364
I45
VStringLiteral: "CREATE TABLE students ("
p9365
tp9366
I2
s(Vinsert
p9367
I42
VSimpleName: ch
p9368
tp9369
I28
s(Vinsert
p9370
I42
VSimpleName: ParameterizedOutputVisitorUtils
p9371
tp9372
I24
s(Vinsert
p9373
I45
VStringLiteral: "    select EMAIL"
p9374
tp9375
I1
s(Vinsert
p9376
I45
VStringLiteral: "MINEXTENTS "
p9377
tp9378
I1
s(Vinsert
p9379
I42
VSimpleName: DruidDataSourceFactory
p9380
tp9381
I5
s(Vinsert
p9382
I42
VSimpleName: addSelectItem
p9383
tp9384
I5
s(Vinsert
p9385
I45
VStringLiteral: "\u005ct\u005ct\u005ctj := j + 1;\u005cn"
p9386
tp9387
I1
s(Vinsert
p9388
I42
VSimpleName: Log
p9389
tp9390
I8
s(Vinsert
p9391
I42
VSimpleName: last
p9392
tp9393
I1
s(Vinsert
p9394
I42
VSimpleName: selectList
p9395
tp9396
I8
s(Vinsert
p9397
I43
VSimpleType: MySqlDropTableStatement
p9398
tp9399
I1
s(Vinsert
p9400
I45
VStringLiteral: "trim_option"
p9401
tp9402
I3
s(Vinsert
p9403
I43
VSimpleType: PGSelectBuilderImpl
p9404
tp9405
I2
s(Vinsert
p9406
I42
VSimpleName: rightJoin
p9407
tp9408
I2
s(Vinsert
p9409
I45
VStringLiteral: "\u005cnVALUES ('a1', 'b1'),"
p9410
tp9411
I3
s(Vinsert
p9412
I42
VSimpleName: buckets
p9413
tp9414
I2
s(Vinsert
p9415
I42
VSimpleName: SQLCheck
p9416
tp9417
I4
s(Vinsert
p9418
I42
VSimpleName: modelClause
p9419
tp9420
I1
s(Vinsert
p9421
I42
VSimpleName: setSequence
p9422
tp9423
I1
s(Vinsert
p9424
I42
VSimpleName: fromSysSchema
p9425
tp9426
I2
s(Vinsert
p9427
I45
VStringLiteral: "select * from (select * from t where id > 1 ) where rownum < 1000"
p9428
tp9429
I1
s(Vinsert
p9430
I42
VSimpleName: MySqlExplainStatement
p9431
tp9432
I2
s(Vinsert
p9433
I42
VSimpleName: isRestrictWhenDeleteTriggers
p9434
tp9435
I1
s(Vinsert
p9436
I45
VStringLiteral: "SELECT * FROM T WHERE FID = ? OR FID LIKE 1"
p9437
tp9438
I1
s(Vinsert
p9439
I42
VSimpleName: JSONObject
p9440
tp9441
I2
s(Vinsert
p9442
I42
VSimpleName: setLastError
p9443
tp9444
I1
s(Vinsert
p9445
I42
VSimpleName: SchemaStatVisitor
p9446
tp9447
I62
s(Vinsert
p9448
I45
VStringLiteral: "\u005ct\u005ct\u005ctlimit 5\u005cn"
p9449
tp9450
I1
s(Vinsert
p9451
I42
VSimpleName: bI
p9452
tp9453
I2
s(Vinsert
p9454
I45
VStringLiteral: "\u005cn\u005ct\u005ctORDER BY id"
p9455
tp9456
I1
s(Vinsert
p9457
I45
VStringLiteral: " QUERY REWRITE,"
p9458
tp9459
I1
s(Vinsert
p9460
I42
VSimpleName: inherits
p9461
tp9462
I4
s(Vinsert
p9463
I42
VSimpleName: setProxyFilters
p9464
tp9465
I3
s(Vinsert
p9466
I40
VQualifiedName: FnvHash.Constants.SYSTIMESTAMP
p9467
tp9468
I1
s(Vinsert
p9469
I42
VSimpleName: resolvedTableSource
p9470
tp9471
I5
s(Vinsert
p9472
I45
VStringLiteral: "121 134\u005cn"
p9473
tp9474
I1
s(Vinsert
p9475
I45
VStringLiteral: "select next value for orderId"
p9476
tp9477
I1
s(Vinsert
p9478
I45
VStringLiteral: "\u005cnEND"
p9479
tp9480
I2
s(Vinsert
p9481
I42
VSimpleName: isInsertAllow
p9482
tp9483
I4
s(Vinsert
p9484
I42
VSimpleName: isSupported
p9485
tp9486
I9
s(Vinsert
p9487
I42
VSimpleName: preparedStatement_executeQuery
p9488
tp9489
I3
s(Vinsert
p9490
I45
VStringLiteral: "FROM lineitem\u005cn"
p9491
tp9492
I1
s(Vinsert
p9493
I45
VStringLiteral: "WITH"
p9494
tp9495
I2
s(Vinsert
p9496
I42
VSimpleName: setUseUnfairLock
p9497
tp9498
I1
s(Vinsert
p9499
I42
VSimpleName: setNestedTable
p9500
tp9501
I2
s(Vinsert
p9502
I45
VStringLiteral: "/* 0ab23d3915048393791723851d05b8/9.1.19.1.10176122173.14//8b4757d2/ */SELECT pay_order_id, total_fee, title, alipay_seller_id, alipay_buyer_id, pay_status, out_pay_id, pay_time, end_time, gmt_create, gmt_modified, coupon_fee, actual_total_fee, discount_fee, adjust_fee, closer, point_fee, real_point_fee, obtain_point, refund_fee, confirm_paid_fee, cod_fee, from_group, attributes, attribute_cc, buyer_id, seller_id FROM tc_pay_order_3134 AS tc_pay_order WHERE pay_order_id = 52708022289887078"
p9503
tp9504
I1
s(Vinsert
p9505
I45
VStringLiteral: "AND rsi.e_boardid = rbi.e_boardid \u005cn"
p9506
tp9507
I1
s(Vinsert
p9508
I42
VSimpleName: createTableScript
p9509
tp9510
I2
s(Vinsert
p9511
I42
VSimpleName: applyCount
p9512
tp9513
I1
s(Vinsert
p9514
I45
VStringLiteral: "convert to character set "
p9515
tp9516
I1
s(Vinsert
p9517
I43
VSimpleType: StringUtils
p9518
tp9519
I2
s(Vinsert
p9520
I45
VStringLiteral: "check get driverClassName"
p9521
tp9522
I1
s(Vinsert
p9523
I45
VStringLiteral: "\u005cnrename to partition(sale_date='201313', region='hangzhou');"
p9524
tp9525
I1
s(Vinsert
p9526
I42
VSimpleName: getWeightRegionBegin
p9527
tp9528
I1
s(Vinsert
p9529
I42
VSimpleName: minIdle
p9530
tp9531
I1
s(Vinsert
p9532
I42
VSimpleName: getFields
p9533
tp9534
I12
s(Vinsert
p9535
I42
VSimpleName: guardValueLocal
p9536
tp9537
I1
s(Vinsert
p9538
I45
VStringLiteral: "CREATE TABLE sc001.test STORE AS parquet\u005cn"
p9539
tp9540
I1
s(Vinsert
p9541
I42
VSimpleName: OraclePLSQLCommitStatement
p9542
tp9543
I1
s(Vinsert
p9544
I45
VStringLiteral: "\u005cnVALUES"
p9545
tp9546
I11
s(Vinsert
p9547
I43
VSimpleType: RelaxedDataBinder
p9548
tp9549
I1
s(Vinsert
p9550
I42
VSimpleName: setOffset
p9551
tp9552
I12
s(Vinsert
p9553
I42
VSimpleName: paramMethodExpr
p9554
tp9555
I2
s(Vinsert
p9556
I42
VSimpleName: encrypt
p9557
tp9558
I1
s(Vinsert
p9559
I42
VSimpleName: setStoredAs
p9560
tp9561
I1
s(Vinsert
p9562
I42
VSimpleName: tenantColumn
p9563
tp9564
I4
s(Vinsert
p9565
I42
VSimpleName: getNotEmptyWaitMillis
p9566
tp9567
I1
s(Vinsert
p9568
I42
VSimpleName: getProvider
p9569
tp9570
I3
s(Vinsert
p9571
I42
VSimpleName: mysqlConn
p9572
tp9573
I2
s(Vinsert
p9574
I42
VSimpleName: IOUtils
p9575
tp9576
I4
s(Vinsert
p9577
I45
VStringLiteral: "\u005ctFROM dual\u005cn"
p9578
tp9579
I2
s(Vinsert
p9580
I45
VStringLiteral: "CREATE TRIGGER AUTH.TRG_HR_STRUCTURE_AFTINST\u005cn"
p9581
tp9582
I1
s(Vinsert
p9583
I42
VSimpleName: clearProperty
p9584
tp9585
I2
s(Vinsert
p9586
I42
VSimpleName: SQLConstraintImpl
p9587
tp9588
I1
s(Vinsert
p9589
I42
VSimpleName: executeBefore
p9590
tp9591
I1
s(Vinsert
p9592
I42
VSimpleName: selectParser
p9593
tp9594
I17
s(Vinsert
p9595
I42
VSimpleName: exprC
p9596
tp9597
I28
s(Vinsert
p9598
I43
VSimpleType: ConnectionsPanel
p9599
tp9600
I2
s(Vinsert
p9601
I45
VStringLiteral: "NotEmptyWaitNanos"
p9602
tp9603
I1
s(Vinsert
p9604
I42
VSimpleName: OraclePipeRowStatement
p9605
tp9606
I1
s(Vinsert
p9607
I43
VSimpleType: SQLPartition
p9608
tp9609
I5
s(Vinsert
p9610
I42
VSimpleName: parseLimit
p9611
tp9612
I1
s(Vinsert
p9613
I42
VSimpleName: cloneTo
p9614
tp9615
I13
s(Vinsert
p9616
I45
VStringLiteral: "\u005cnPARTITION BY RANGE (job_code)"
p9617
tp9618
I1
s(Vinsert
p9619
I42
VSimpleName: setDropTableAllow
p9620
tp9621
I3
s(Vinsert
p9622
I42
VSimpleName: bitwise
p9623
tp9624
I3
s(Vinsert
p9625
I42
VSimpleName: SQLDeclareStatement
p9626
tp9627
I1
s(Vinsert
p9628
I45
VStringLiteral: "default"
p9629
tp9630
I1
s(Vinsert
p9631
I40
VQualifiedName: statValue.connectCount
p9632
tp9633
I1
s(Vinsert
p9634
I45
VStringLiteral: "CREATE TABLE KTV.KTV_FUNCTION_ROLE_20151211 (\u005cn"
p9635
tp9636
I2
s(Vinsert
p9637
I40
VQualifiedName: SQLCommentStatement.Type
p9638
tp9639
I1
s(Vinsert
p9640
I42
VSimpleName: startTimeMillis
p9641
tp9642
I2
s(Vinsert
p9643
I45
VStringLiteral: "utf8"
p9644
tp9645
I2
s(Vinsert
p9646
I43
VSimpleType: SQLAlterTableAddForeignKey
p9647
tp9648
I3
s(Vinsert
p9649
I40
VQualifiedName: Token.STORAGE
p9650
tp9651
I1
s(Vinsert
p9652
I45
VStringLiteral: "\u005ct\u005c"IS_MERGED\u005c"\u005cn"
p9653
tp9654
I1
s(Vinsert
p9655
I42
VSimpleName: props
p9656
tp9657
I7
s(Vinsert
p9658
I42
VSimpleName: OracleInsertParser
p9659
tp9660
I1
s(Vinsert
p9661
I42
VSimpleName: newCondition
p9662
tp9663
I3
s(Vinsert
p9664
I45
VStringLiteral: "\u005ctAND (`buyer_resource`.`AVAILABLE_COUNT` IS ?)\u005cn"
p9665
tp9666
I1
s(Vinsert
p9667
I42
VSimpleName: formattedSql
p9668
tp9669
I2
s(Vinsert
p9670
I34
VNumberLiteral: 30
p9671
tp9672
I2
s(Vinsert
p9673
I43
VSimpleType: Clob
p9674
tp9675
I11
s(Vinsert
p9676
I42
VSimpleName: getException
p9677
tp9678
I2
s(Vinsert
p9679
I45
VStringLiteral: "| c_int        | int(11)      | NO   | MUL | NULL                |                             |\u005cn"
p9680
tp9681
I1
s(Vinsert
p9682
I42
VSimpleName: calcFoundRows
p9683
tp9684
I1
s(Vinsert
p9685
I42
VSimpleName: EnvironmentTestUtils
p9686
tp9687
I2
s(Vinsert
p9688
I45
VStringLiteral: "user-"
p9689
tp9690
I2
s(Vinsert
p9691
I45
VStringLiteral: "PIPE ROW(substr(p_string, v_start));"
p9692
tp9693
I1
s(Vinsert
p9694
I42
VSimpleName: SQLAlterTableItem
p9695
tp9696
I4
s(Vinsert
p9697
I42
VSimpleName: oldsqlStatInfo
p9698
tp9699
I2
s(Vinsert
p9700
I42
VSimpleName: compress
p9701
tp9702
I3
s(Vinsert
p9703
I42
VSimpleName: addDataFile
p9704
tp9705
I1
s(Vinsert
p9706
I43
VSimpleType: HttpServletResponse
p9707
tp9708
I1
s(Vinsert
p9709
I45
VStringLiteral: "\u005cnWHERE date_prod >= '2002-01-01'"
p9710
tp9711
I1
s(Vinsert
p9712
I42
VSimpleName: poolableStatement
p9713
tp9714
I4
s(Vinsert
p9715
I28
VInitializer
p9716
tp9717
I2
s(Vinsert
p9718
I42
VSimpleName: notContainsOrderBy
p9719
tp9720
I1
s(Vinsert
p9721
I42
VSimpleName: WallRuntimeException
p9722
tp9723
I1
s(Vinsert
p9724
I43
VSimpleType: InterruptedException
p9725
tp9726
I1
s(Vinsert
p9727
I45
VStringLiteral: "\u005ctON projects\u005cn"
p9728
tp9729
I1
s(Vinsert
p9730
I45
VStringLiteral: "MKTG_H_EXEC_RESULT_FACT"
p9731
tp9732
I2
s(Vinsert
p9733
I42
VSimpleName: getPartitionSize
p9734
tp9735
I1
s(Vinsert
p9736
I45
VStringLiteral: "jdbc:phoenix://"
p9737
tp9738
I1
s(Vinsert
p9739
I40
VQualifiedName: SQLBinaryOperator.Modulus
p9740
tp9741
I1
s(Vinsert
p9742
I42
VSimpleName: extractor
p9743
tp9744
I5
s(Vinsert
p9745
I45
VStringLiteral: "\u005cnwhere kreis_code in (select *"
p9746
tp9747
I1
s(Vinsert
p9748
I40
VQualifiedName: that.sampleClause
p9749
tp9750
I2
s(Vinsert
p9751
I42
VSimpleName: mockPstmt
p9752
tp9753
I2
s(Vinsert
p9754
I42
VSimpleName: Values
p9755
tp9756
I1
s(Vinsert
p9757
I42
VSimpleName: IDENTIFIER
p9758
tp9759
I3
s(Vinsert
p9760
I40
VQualifiedName: javax.management.openmbean.CompositeDataSupport
p9761
tp9762
I1
s(Vinsert
p9763
I45
VStringLiteral: "\u005cn\u005ct\u005ct\u005ct))"
p9764
tp9765
I1
s(Vinsert
p9766
I40
VQualifiedName: Token.EXISTS
p9767
tp9768
I4
s(Vinsert
p9769
I42
VSimpleName: sb
p9770
tp9771
I2
s(Vinsert
p9772
I42
VSimpleName: tableSources
p9773
tp9774
I2
s(Vinsert
p9775
I42
VSimpleName: printWP_ORDERS
p9776
tp9777
I1
s(Vinsert
p9778
I43
VSimpleType: MySqlSelectQueryBlock
p9779
tp9780
I50
s(Vinsert
p9781
I45
VStringLiteral: "select type, count(*) from t group by type"
p9782
tp9783
I1
s(Vinsert
p9784
I42
VSimpleName: scanChar
p9785
tp9786
I2
s(Vinsert
p9787
I42
VSimpleName: perPageCount
p9788
tp9789
I1
s(Vinsert
p9790
I42
VSimpleName: getConnectionConnectAliveMillisMin
p9791
tp9792
I1
s(Vinsert
p9793
I40
VQualifiedName: that.pivot
p9794
tp9795
I2
s(Vinsert
p9796
I42
VSimpleName: getEndLabel
p9797
tp9798
I1
s(Vinsert
p9799
I45
VStringLiteral: "println error"
p9800
tp9801
I1
s(Vinsert
p9802
I42
VSimpleName: setReturningStatement
p9803
tp9804
I1
s(Vinsert
p9805
I45
VStringLiteral: " of "
p9806
tp9807
I1
s(Vinsert
p9808
I42
VSimpleName: holder
p9809
tp9810
I61
s(Vinsert
p9811
I42
VSimpleName: create
p9812
tp9813
I6
s(Vinsert
p9814
I42
VSimpleName: columnMapping
p9815
tp9816
I2
s(Vinsert
p9817
I42
VSimpleName: setLogWriter
p9818
tp9819
I1
s(Vinsert
p9820
I40
VQualifiedName: Token.COLON
p9821
tp9822
I1
s(Vinsert
p9823
I42
VSimpleName: sqlSecurity
p9824
tp9825
I7
s(Vinsert
p9826
I45
VStringLiteral: "id = 3"
p9827
tp9828
I1
s(Vinsert
p9829
I42
VSimpleName: isLinux
p9830
tp9831
I1
s(Vinsert
p9832
I13
VCharacterLiteral: '-'
p9833
tp9834
I3
s(Vinsert
p9835
I45
VStringLiteral: "\u005ct\u005ctSELECT g.id, g.link, g.data, 1\u005cn"
p9836
tp9837
I1
s(Vinsert
p9838
I42
VSimpleName: decrypter
p9839
tp9840
I12
s(Vinsert
p9841
I42
VSimpleName: setConfigLoader
p9842
tp9843
I1
s(Vinsert
p9844
I42
VSimpleName: partitionCount
p9845
tp9846
I5
s(Vinsert
p9847
I42
VSimpleName: balancer
p9848
tp9849
I3
s(Vinsert
p9850
I42
VSimpleName: getLogWriter
p9851
tp9852
I1
s(Vinsert
p9853
I42
VSimpleName: fireEventCount
p9854
tp9855
I1
s(Vinsert
p9856
I43
VSimpleType: SQLInListExpr
p9857
tp9858
I3
s(Vinsert
p9859
I42
VSimpleName: ClobProxyImpl
p9860
tp9861
I1
s(Vinsert
p9862
I42
VSimpleName: dataDirectory
p9863
tp9864
I2
s(Vinsert
p9865
I42
VSimpleName: field
p9866
tp9867
I25
s(Vinsert
p9868
I42
VSimpleName: OdpsInsert
p9869
tp9870
I1
s(Vinsert
p9871
I42
VSimpleName: connection_connect
p9872
tp9873
I1
s(Vinsert
p9874
I45
VStringLiteral: "\u005ct\u005ct\u005ctRECORDS DELIMITED BY NEWLINE\u005cn"
p9875
tp9876
I1
s(Vinsert
p9877
I66
VTextElement: This method will switch the logging implementation to Log4J if Log4J is available on the classpath. This is
p9878
tp9879
I1
s(Vinsert
p9880
I42
VSimpleName: PGSelectBuilderImpl
p9881
tp9882
I2
s(Vinsert
p9883
I43
VSimpleType: FormatOption
p9884
tp9885
I4
s(Vinsert
p9886
I43
VSimpleType: MySqlInsertStatement
p9887
tp9888
I32
s(Vinsert
p9889
I45
VStringLiteral: "\u005cn\u005ctname varchar(20)"
p9890
tp9891
I1
s(Vinsert
p9892
I45
VStringLiteral: "from emp\u005cn"
p9893
tp9894
I1
s(Vinsert
p9895
I45
VStringLiteral: "tenant"
p9896
tp9897
I7
s(Vinsert
p9898
I43
VSimpleType: SQLReturnStatement
p9899
tp9900
I6
s(Vinsert
p9901
I42
VSimpleName: createMappingVisitor
p9902
tp9903
I3
s(Vinsert
p9904
I42
VSimpleName: SQLSelectParser
p9905
tp9906
I3
s(Vinsert
p9907
I45
VStringLiteral: "\u005cn\u005ctINTO @MyTableVar"
p9908
tp9909
I2
s(Vinsert
p9910
I42
VSimpleName: inTransactionCountUpdater
p9911
tp9912
I1
s(Vinsert
p9913
I42
VSimpleName: setExceptionSoters
p9914
tp9915
I2
s(Vinsert
p9916
I42
VSimpleName: classes
p9917
tp9918
I1
s(Vinsert
p9919
I45
VStringLiteral: "\u005ct\u005ctENABLE\u005cn"
p9920
tp9921
I1
s(Vinsert
p9922
I42
VSimpleName: setCreateScheduler
p9923
tp9924
I1
s(Vinsert
p9925
I42
VSimpleName: test_oracle
p9926
tp9927
I3
s(Vinsert
p9928
I40
VQualifiedName: holder.ast
p9929
tp9930
I1
s(Vinsert
p9931
I42
VSimpleName: Column
p9932
tp9933
I16
s(Vinsert
p9934
I42
VSimpleName: HttpServer
p9935
tp9936
I4
s(Vinsert
p9937
I42
VSimpleName: MySqlSubPartitionByKey
p9938
tp9939
I1
s(Vinsert
p9940
I45
VStringLiteral: "\u005ctBUFFER_POOL DEFAULT\u005cn"
p9941
tp9942
I13
s(Vinsert
p9943
I42
VSimpleName: cv
p9944
tp9945
I1
s(Vinsert
p9946
I42
VSimpleName: printDruidStat
p9947
tp9948
I1
s(Vinsert
p9949
I45
VStringLiteral: "\u005ct\u005ctFLASH_CACHE DEFAULT\u005cn"
p9950
tp9951
I5
s(Vinsert
p9952
I42
VSimpleName: cursorName
p9953
tp9954
I18
s(Vinsert
p9955
I42
VSimpleName: getOrderByColumns
p9956
tp9957
I14
s(Vinsert
p9958
I45
VStringLiteral: " else\u005cn"
p9959
tp9960
I1
s(Vinsert
p9961
I42
VSimpleName: w
p9962
tp9963
I3
s(Vinsert
p9964
I45
VStringLiteral: "select ?"
p9965
tp9966
I5
s(Vinsert
p9967
I43
VSimpleType: OracleUpdateStatement
p9968
tp9969
I1
s(Vinsert
p9970
I42
VSimpleName: element
p9971
tp9972
I5
s(Vinsert
p9973
I42
VSimpleName: setProviders
p9974
tp9975
I1
s(Vinsert
p9976
I42
VSimpleName: setSqlSecurity
p9977
tp9978
I2
s(Vinsert
p9979
I45
VStringLiteral: "META-INF/druid-filter-wall-permit-function-mysql.txt"
p9980
tp9981
I1
s(Vinsert
p9982
I42
VSimpleName: running
p9983
tp9984
I1
s(Vinsert
p9985
I45
VStringLiteral: "Druid"
p9986
tp9987
I1
s(Vinsert
p9988
I45
VStringLiteral: "connect by prior employee_id = manager_id\u005cn"
p9989
tp9990
I2
s(Vinsert
p9991
I42
VSimpleName: dispose
p9992
tp9993
I1
s(Vinsert
p9994
I45
VStringLiteral: "| c_text       | text         | NO   |     | NULL                |                             |\u005cn"
p9995
tp9996
I1
s(Vinsert
p9997
I45
VStringLiteral: "org.apache.phoenix.queryserver.client.Driver"
p9998
tp9999
I1
s(Vinsert
p10000
I40
VQualifiedName: Token.RETURN
p10001
tp10002
I1
s(Vinsert
p10003
I45
VStringLiteral: "\u005cn\u005ctPARTITION p1 VALUES LESS THAN (1),"
p10004
tp10005
I1
s(Vinsert
p10006
I45
VStringLiteral: "        ADD COLUMN variation_value_5 DECIMAL(30, 20) NULL DEFAULT NULL"
p10007
tp10008
I1
s(Vinsert
p10009
I42
VSimpleName: SQLDataType
p10010
tp10011
I23
s(Vinsert
p10012
I45
VStringLiteral: "BEGIN TRANSACTION"
p10013
tp10014
I1
s(Vinsert
p10015
I42
VSimpleName: PGUtils
p10016
tp10017
I2
s(Vinsert
p10018
I45
VStringLiteral: "\u005cn\u005ctname person_name,"
p10019
tp10020
I2
s(Vinsert
p10021
I45
VStringLiteral: "\u005cn\u005ctdirectory_name NVARCHAR(255),"
p10022
tp10023
I1
s(Vinsert
p10024
I42
VSimpleName: checkSelelct
p10025
tp10026
I1
s(Vinsert
p10027
I45
VStringLiteral: "TABLESPACE \u005c"SYSTEM\u005c"\u005cn"
p10028
tp10029
I1
s(Vinsert
p10030
I42
VSimpleName: getPtcfree
p10031
tp10032
I2
s(Vinsert
p10033
I42
VSimpleName: MySqlWallTest34
p10034
tp10035
I1
s(Vinsert
p10036
I45
VStringLiteral: "master"
p10037
tp10038
I1
s(Vinsert
p10039
I45
VStringLiteral: "        DROP COLUMN diff_value_2,\u005cn"
p10040
tp10041
I1
s(Vinsert
p10042
I45
VStringLiteral: "\u005cn\u005ct\u005ct\u005ct\u005ctFROM (SELECT *"
p10043
tp10044
I1
s(Vinsert
p10045
I42
VSimpleName: incrementUnionWarnnings
p10046
tp10047
I1
s(Vinsert
p10048
I43
VSimpleType: DruidConnectionHolder
p10049
tp10050
I3
s(Vinsert
p10051
I45
VStringLiteral: "not support visitor type : "
p10052
tp10053
I21
s(Vinsert
p10054
I45
VStringLiteral: "\u005cn\u005ctquantity NUMBER"
p10055
tp10056
I2
s(Vinsert
p10057
I43
VSimpleType: OracleArgumentExpr
p10058
tp10059
I1
s(Vinsert
p10060
I42
VSimpleName: pooledStmt1
p10061
tp10062
I1
s(Vinsert
p10063
I45
VStringLiteral: "\u005cn and -- comment_3"
p10064
tp10065
I1
s(Vinsert
p10066
I42
VSimpleName: p2
p10067
tp10068
I8
s(Vinsert
p10069
I45
VStringLiteral: "druid_test"
p10070
tp10071
I1
s(Vinsert
p10072
I42
VSimpleName: test_wasNull
p10073
tp10074
I1
s(Vinsert
p10075
I45
VStringLiteral: "\u005cn\u005ct\u005ctAND to_char(begin_time, 'yyyy-MM-dd') >= ?"
p10076
tp10077
I1
s(Vinsert
p10078
I45
VStringLiteral: "WHERE object_id = a.row_wait_obj#"
p10079
tp10080
I1
s(Vinsert
p10081
I42
VSimpleName: Put
p10082
tp10083
I1
s(Vinsert
p10084
I45
VStringLiteral: "\u005ct\u005ct'VerifyMobile', \u005cn"
p10085
tp10086
I1
s(Vinsert
p10087
I42
VSimpleName: byHash
p10088
tp10089
I1
s(Vinsert
p10090
I43
VSimpleType: KeyFactory
p10091
tp10092
I1
s(Vinsert
p10093
I43
VSimpleType: MyPreparedStatement
p10094
tp10095
I2
s(Vinsert
p10096
I42
VSimpleName: listFiles
p10097
tp10098
I1
s(Vinsert
p10099
I42
VSimpleName: test_0
p10100
tp10101
I25
s(Vinsert
p10102
I42
VSimpleName: dataSourceA
p10103
tp10104
I1
s(Vinsert
p10105
I45
VStringLiteral: "\u005cn\u005ct\u005ctCONSTRAINT check_cost CHECK (cost > 0)"
p10106
tp10107
I2
s(Vinsert
p10108
I42
VSimpleName: BigDecimal
p10109
tp10110
I8
s(Vinsert
p10111
I42
VSimpleName: param1Value
p10112
tp10113
I1
s(Vinsert
p10114
I45
VStringLiteral: "LockQueueLength"
p10115
tp10116
I1
s(Vinsert
p10117
I42
VSimpleName: ATTR_TRANSACTION
p10118
tp10119
I1
s(Vinsert
p10120
I45
VStringLiteral: "\u005cnSTORAGE ( INITIAL 65536 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)"
p10121
tp10122
I1
s(Vinsert
p10123
I45
VStringLiteral: "                         , \u005cn"
p10124
tp10125
I4
s(Vinsert
p10126
I45
VStringLiteral: "CREATE SERVER s\u005cn"
p10127
tp10128
I1
s(Vinsert
p10129
I42
VSimpleName: propExpr
p10130
tp10131
I9
s(Vinsert
p10132
I45
VStringLiteral: " if (a=10) then\u005cn"
p10133
tp10134
I1
s(Vinsert
p10135
I40
VQualifiedName: Token.NOCACHE
p10136
tp10137
I1
s(Vinsert
p10138
I42
VSimpleName: PGWallTest
p10139
tp10140
I1
s(Vinsert
p10141
I43
VSimpleType: SQLIfStatement
p10142
tp10143
I1
s(Vinsert
p10144
I45
VStringLiteral: "WHERE (v.service_type IN ('gs', 'cgs', 'hkgs', 'twgs')\u005cn"
p10145
tp10146
I1
s(Vinsert
p10147
I40
VQualifiedName: JdbcUtils.ALI_ORACLE
p10148
tp10149
I1
s(Vinsert
p10150
I42
VSimpleName: setEnterOracleImplicitCache
p10151
tp10152
I1
s(Vinsert
p10153
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITIONS 4"
p10154
tp10155
I2
s(Vinsert
p10156
I42
VSimpleName: OracleReturningClause
p10157
tp10158
I2
s(Vinsert
p10159
I43
VSimpleType: SchemaObject
p10160
tp10161
I3
s(Vinsert
p10162
I42
VSimpleName: setList
p10163
tp10164
I4
s(Vinsert
p10165
I42
VSimpleName: sqlStat1
p10166
tp10167
I2
s(Vinsert
p10168
I42
VSimpleName: validIp
p10169
tp10170
I1
s(Vinsert
p10171
I43
VSimpleType: MySqlShowProcedureStatusStatement
p10172
tp10173
I5
s(Vinsert
p10174
I45
VStringLiteral: "hbase.zookeeper.quorum"
p10175
tp10176
I1
s(Vinsert
p10177
I42
VSimpleName: getConstructor
p10178
tp10179
I2
s(Vinsert
p10180
I42
VSimpleName: getIntoOption
p10181
tp10182
I1
s(Vinsert
p10183
I45
VStringLiteral: "\u005cn\u005ct\u005ctCONSTRAINT fk_deptno REFERENCES departments (department_id)"
p10184
tp10185
I2
s(Vinsert
p10186
I42
VSimpleName: sessionValue
p10187
tp10188
I1
s(Vinsert
p10189
I40
VQualifiedName: OracleMultiInsertStatement.InsertIntoClause
p10190
tp10191
I2
s(Vinsert
p10192
I42
VSimpleName: setBlackListEnable
p10193
tp10194
I1
s(Vinsert
p10195
I43
VSimpleType: WebRequestStat
p10196
tp10197
I1
s(Vinsert
p10198
I45
VStringLiteral: "jFn+eZm4jgDcTLTEzfmIVtPDRNhYCY3xhPo7vJeS8M1AvP+4xh9+uO35XsRIsRl1PTFVrGwg\u005cn"
p10199
tp10200
I1
s(Vinsert
p10201
I42
VSimpleName: body
p10202
tp10203
I1
s(Vinsert
p10204
I45
VStringLiteral: "\u005cn\u005ctdepartment_id NUMBER(2),"
p10205
tp10206
I2
s(Vinsert
p10207
I42
VSimpleName: getDouble
p10208
tp10209
I1
s(Vinsert
p10210
I40
VQualifiedName: SQLSetStatement.Option
p10211
tp10212
I1
s(Vinsert
p10213
I42
VSimpleName: setUpdateCheckItems
p10214
tp10215
I1
s(Vinsert
p10216
I45
VStringLiteral: "\u005cn\u005ct) XX"
p10217
tp10218
I2
s(Vinsert
p10219
I45
VStringLiteral: "select * from t where -- comment_xx"
p10220
tp10221
I1
s(Vinsert
p10222
I40
VQualifiedName: args.length
p10223
tp10224
I2
s(Vinsert
p10225
I45
VStringLiteral: "\u005cnFROM ("
p10226
tp10227
I1
s(Vinsert
p10228
I45
VStringLiteral: "\u005ctRETURN RESULT;\u005cn"
p10229
tp10230
I1
s(Vinsert
p10231
I42
VSimpleName: getName
p10232
tp10233
I121
s(Vinsert
p10234
I42
VSimpleName: getPartitionColumns
p10235
tp10236
I1
s(Vinsert
p10237
I42
VSimpleName: MySqlLoadDataInFileStatement
p10238
tp10239
I1
s(Vinsert
p10240
I42
VSimpleName: fnv1a_64_lower
p10241
tp10242
I5
s(Vinsert
p10243
I45
VStringLiteral: "DELETE /*+ INDEX(t1 i1) */ FROM t1"
p10244
tp10245
I1
s(Vinsert
p10246
I42
VSimpleName: setRollbackOnFail
p10247
tp10248
I1
s(Vinsert
p10249
I42
VSimpleName: parseSegmentAttributes
p10250
tp10251
I1
s(Vinsert
p10252
I45
VStringLiteral: "\u005cn WHERE a.ds=20150819 and b.ds=20150819;"
p10253
tp10254
I2
s(Vinsert
p10255
I42
VSimpleName: getOn
p10256
tp10257
I2
s(Vinsert
p10258
I13
VCharacterLiteral: '"'
p10259
tp10260
I6
s(Vinsert
p10261
I45
VStringLiteral: "\u005ctSUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS,\u005cn"
p10262
tp10263
I1
s(Vinsert
p10264
I42
VSimpleName: PreparedStatement
p10265
tp10266
I74
s(Vinsert
p10267
I43
VSimpleType: JdbcConnectionStat.Entry
p10268
tp10269
I2
s(Vinsert
p10270
I24
VForStatement
p10271
tp10272
I89
s(Vinsert
p10273
I45
VStringLiteral: "*           Druid \u52a0\u5bc6\u5de5\u5177            *"
p10274
tp10275
I1
s(Vinsert
p10276
I45
VStringLiteral: "DISTINCT "
p10277
tp10278
I2
s(Vinsert
p10279
I45
VStringLiteral: ", poolingCount "
p10280
tp10281
I1
s(Vinsert
p10282
I5
VArrayType: long[]
p10283
tp10284
I2
s(Vinsert
p10285
I45
VStringLiteral: "CREATE TABLE promotions_var2 ("
p10286
tp10287
I2
s(Vinsert
p10288
I45
VStringLiteral: "\u005ct)"
p10289
tp10290
I1
s(Vinsert
p10291
I42
VSimpleName: paramObject
p10292
tp10293
I1
s(Vinsert
p10294
I42
VSimpleName: str
p10295
tp10296
I9
s(Vinsert
p10297
I45
VStringLiteral: "\u005c\u005cu00"
p10298
tp10299
I1
s(Vinsert
p10300
I45
VStringLiteral: "\u005ct\u005ctGROUP BY st.regid\u005cn"
p10301
tp10302
I1
s(Vinsert
p10303
I42
VSimpleName: test_h2
p10304
tp10305
I1
s(Vinsert
p10306
I42
VSimpleName: setClob
p10307
tp10308
I3
s(Vinsert
p10309
I42
VSimpleName: config_callback
p10310
tp10311
I6
s(Vinsert
p10312
I42
VSimpleName: MySqlUpdateStatement
p10313
tp10314
I5
s(Vinsert
p10315
I34
VNumberLiteral: 4
p10316
tp10317
I8
s(Vinsert
p10318
I43
VSimpleType: SQLExplainStatement
p10319
tp10320
I1
s(Vinsert
p10321
I42
VSimpleName: MySqlWallProvider
p10322
tp10323
I135
s(Vinsert
p10324
I42
VSimpleName: mergedListParams
p10325
tp10326
I1
s(Vinsert
p10327
I42
VSimpleName: druidFilterConfigList
p10328
tp10329
I3
s(Vinsert
p10330
I42
VSimpleName: x_e
p10331
tp10332
I1
s(Vinsert
p10333
I45
VStringLiteral: "outfile"
p10334
tp10335
I1
s(Vinsert
p10336
I42
VSimpleName: next_char
p10337
tp10338
I1
s(Vinsert
p10339
I42
VSimpleName: ParserException
p10340
tp10341
I39
s(Vinsert
p10342
I42
VSimpleName: test_stat
p10343
tp10344
I2
s(Vinsert
p10345
I43
VSimpleType: PSQLException
p10346
tp10347
I2
s(Vinsert
p10348
I45
VStringLiteral: "\u005ctSELECT ECC.GAPM_PROJECT_INFO_SYNC_IOA_S.Nextval\u005cn"
p10349
tp10350
I1
s(Vinsert
p10351
I42
VSimpleName: sqlStatInfoMap
p10352
tp10353
I1
s(Vinsert
p10354
I42
VSimpleName: WallTopStatementContext
p10355
tp10356
I2
s(Vinsert
p10357
I45
VStringLiteral: "ALTER TABLE clients"
p10358
tp10359
I2
s(Vinsert
p10360
I45
VStringLiteral: "SHOW FULL TABLES WHERE Table_type != 'VIEW'"
p10361
tp10362
I1
s(Vinsert
p10363
I45
VStringLiteral: "\u005cn\u005ctPRIMARY KEY (ID_),"
p10364
tp10365
I2
s(Vinsert
p10366
I45
VStringLiteral: "salary"
p10367
tp10368
I1
s(Vinsert
p10369
I45
VStringLiteral: "load validConnectionCheckerClass error : "
p10370
tp10371
I1
s(Vinsert
p10372
I42
VSimpleName: getCount_Alive_30_90_Day
p10373
tp10374
I1
s(Vinsert
p10375
I42
VSimpleName: name2
p10376
tp10377
I2
s(Vinsert
p10378
I43
VSimpleType: SqlMapClientImpl
p10379
tp10380
I4
s(Vinsert
p10381
I42
VSimpleName: getCount_5_10
p10382
tp10383
I1
s(Vinsert
p10384
I45
VStringLiteral: "FETCH "
p10385
tp10386
I2
s(Vinsert
p10387
I45
VStringLiteral: "\u005c""
p10388
tp10389
I3
s(Vinsert
p10390
I42
VSimpleName: setPrior
p10391
tp10392
I1
s(Vinsert
p10393
I43
VSimpleType: DruidDriver
p10394
tp10395
I3
s(Vinsert
p10396
I45
VStringLiteral: "INSERT INTO TABLE a\u005cn"
p10397
tp10398
I1
s(Vinsert
p10399
I42
VSimpleName: partitionClauseRest
p10400
tp10401
I1
s(Vinsert
p10402
I42
VSimpleName: emptyMap
p10403
tp10404
I2
s(Vinsert
p10405
I42
VSimpleName: clearContext
p10406
tp10407
I2
s(Vinsert
p10408
I42
VSimpleName: test_updateObject_1
p10409
tp10410
I1
s(Vinsert
p10411
I42
VSimpleName: paramIndex
p10412
tp10413
I3
s(Vinsert
p10414
I42
VSimpleName: test_log4jdbc_es_1
p10415
tp10416
I1
s(Vinsert
p10417
I43
VSimpleType: OracleHint
p10418
tp10419
I4
s(Vinsert
p10420
I42
VSimpleName: getOutParameter
p10421
tp10422
I2
s(Vinsert
p10423
I45
VStringLiteral: "\u005cn\u005ctREORGANIZE p0 INTO (PARTITION s0 VALUES LESS THAN (1960), PARTITION s1 VALUES LESS THAN (1970))"
p10424
tp10425
I1
s(Vinsert
p10426
I45
VStringLiteral: "\u005cnFROM articles"
p10427
tp10428
I1
s(Vinsert
p10429
I42
VSimpleName: DruidPlugin
p10430
tp10431
I2
s(Vinsert
p10432
I45
VStringLiteral: "CHECK "
p10433
tp10434
I1
s(Vinsert
p10435
I42
VSimpleName: conditionContainsTable
p10436
tp10437
I1
s(Vinsert
p10438
I74
VParameterizedType: ArrayList<Object>
p10439
tp10440
I22
s(Vinsert
p10441
I42
VSimpleName: test_txn
p10442
tp10443
I1
s(Vinsert
p10444
I42
VSimpleName: JdbcStatContext
p10445
tp10446
I8
s(Vinsert
p10447
I43
VSimpleType: PhoenixStatementParser
p10448
tp10449
I1
s(Vinsert
p10450
I43
VSimpleType: IUserDao
p10451
tp10452
I2
s(Vinsert
p10453
I19
VDoStatement
p10454
tp10455
I1
s(Vinsert
p10456
I45
VStringLiteral: "WHERE id = ?"
p10457
tp10458
I1
s(Vinsert
p10459
I43
VSimpleType: JConsoleContext
p10460
tp10461
I2
s(Vinsert
p10462
I42
VSimpleName: enumeration
p10463
tp10464
I2
s(Vinsert
p10465
I42
VSimpleName: setHints
p10466
tp10467
I5
s(Vinsert
p10468
I43
VSimpleType: JSONObject
p10469
tp10470
I2
s(Vinsert
p10471
I45
VStringLiteral: "LastError"
p10472
tp10473
I2
s(Vinsert
p10474
I43
VSimpleType: SQLJoinTableSource
p10475
tp10476
I4
s(Vinsert
p10477
I45
VStringLiteral: "\u005ctMEMBER FUNCTION plus (x rational) RETURN rational\u005cn"
p10478
tp10479
I1
s(Vinsert
p10480
I42
VSimpleName: configLoader
p10481
tp10482
I3
s(Vinsert
p10483
I43
VSimpleType: MockHttpServletRequest
p10484
tp10485
I2
s(Vinsert
p10486
I42
VSimpleName: initializeDataSourceBuilder
p10487
tp10488
I1
s(Vinsert
p10489
I45
VStringLiteral: "instead of"
p10490
tp10491
I1
s(Vinsert
p10492
I42
VSimpleName: getMBeanServerConnection
p10493
tp10494
I1
s(Vinsert
p10495
I42
VSimpleName: SQLAggregateExpr
p10496
tp10497
I6
s(Vinsert
p10498
I42
VSimpleName: getJdbcUrl
p10499
tp10500
I1
s(Vinsert
p10501
I42
VSimpleName: getFilterSize
p10502
tp10503
I1
s(Vinsert
p10504
I43
VSimpleType: MySqlBinaryExpr
p10505
tp10506
I3
s(Vinsert
p10507
I45
VStringLiteral: "\u005cn\u005ctREPAIR PARTITION ALL"
p10508
tp10509
I1
s(Vinsert
p10510
I43
VSimpleType: WallProvider
p10511
tp10512
I120
s(Vinsert
p10513
I42
VSimpleName: Character
p10514
tp10515
I1
s(Vinsert
p10516
I45
VStringLiteral: "java"
p10517
tp10518
I1
s(Vinsert
p10519
I42
VSimpleName: test_single_0
p10520
tp10521
I1
s(Vinsert
p10522
I74
VParameterizedType: ArrayList<String[]>
p10523
tp10524
I1
s(Vinsert
p10525
I42
VSimpleName: withQueryClause
p10526
tp10527
I1
s(Vinsert
p10528
I45
VStringLiteral: "getSessionStatDataList"
p10529
tp10530
I1
s(Vinsert
p10531
I42
VSimpleName: month
p10532
tp10533
I1
s(Vinsert
p10534
I42
VSimpleName: sqlObject
p10535
tp10536
I19
s(Vinsert
p10537
I45
VStringLiteral: "bsvariety"
p10538
tp10539
I1
s(Vinsert
p10540
I42
VSimpleName: family
p10541
tp10542
I2
s(Vinsert
p10543
I42
VSimpleName: ExportParameterVisitor
p10544
tp10545
I6
s(Vinsert
p10546
I43
VSimpleType: IOException
p10547
tp10548
I9
s(Vinsert
p10549
I42
VSimpleName: columnMetaData
p10550
tp10551
I2
s(Vinsert
p10552
I42
VSimpleName: hasBodyBeforeComment
p10553
tp10554
I1
s(Vinsert
p10555
I42
VSimpleName: EvalMethodAsciiTest
p10556
tp10557
I1
s(Vinsert
p10558
I42
VSimpleName: setQueryTimeout
p10559
tp10560
I6
s(Vinsert
p10561
I45
VStringLiteral: "SHOW FULL TABLES IN SUNTEST  LIKE '%DDD%' "
p10562
tp10563
I1
s(Vinsert
p10564
I42
VSimpleName: callableStatement_getClob
p10565
tp10566
I2
s(Vinsert
p10567
I43
VSimpleType: SQLCharExpr
p10568
tp10569
I21
s(Vinsert
p10570
I43
VSimpleType: StatementProxy
p10571
tp10572
I4
s(Vinsert
p10573
I45
VStringLiteral: "| c_longblob   | longblob     | NO   |     | NULL    |       |\u005cn"
p10574
tp10575
I1
s(Vinsert
p10576
I43
VSimpleType: Environment
p10577
tp10578
I2
s(Vinsert
p10579
I42
VSimpleName: cos
p10580
tp10581
I1
s(Vinsert
p10582
I42
VSimpleName: OracleCreateSequenceStatement
p10583
tp10584
I2
s(Vinsert
p10585
I74
VParameterizedType: List<SQLSelectOrderByItem>
p10586
tp10587
I2
s(Vinsert
p10588
I42
VSimpleName: stmtListSize
p10589
tp10590
I1
s(Vinsert
p10591
I42
VSimpleName: integerExpr
p10592
tp10593
I1
s(Vinsert
p10594
I42
VSimpleName: setFilters
p10595
tp10596
I24
s(Vinsert
p10597
I42
VSimpleName: dataSourceHA
p10598
tp10599
I5
s(Vinsert
p10600
I42
VSimpleName: dataTypeName
p10601
tp10602
I9
s(Vinsert
p10603
I42
VSimpleName: VirtualMachineDescriptor
p10604
tp10605
I1
s(Vinsert
p10606
I42
VSimpleName: getParentLogger
p10607
tp10608
I1
s(Vinsert
p10609
I42
VSimpleName: test_fnv_lower
p10610
tp10611
I1
s(Vinsert
p10612
I42
VSimpleName: test_stuff
p10613
tp10614
I7
s(Vinsert
p10615
I45
VStringLiteral: "\u005ct\u005ctEND LOOP inner_loop;\u005cn"
p10616
tp10617
I1
s(Vinsert
p10618
I40
VQualifiedName: java.sql.Time
p10619
tp10620
I4
s(Vinsert
p10621
I42
VSimpleName: setSample
p10622
tp10623
I1
s(Vinsert
p10624
I42
VSimpleName: host
p10625
tp10626
I2
s(Vinsert
p10627
I42
VSimpleName: Attribute
p10628
tp10629
I1
s(Vinsert
p10630
I42
VSimpleName: entrySet
p10631
tp10632
I9
s(Vinsert
p10633
I42
VSimpleName: getBrowserOperaCount
p10634
tp10635
I1
s(Vinsert
p10636
I42
VSimpleName: nameIS
p10637
tp10638
I1
s(Vinsert
p10639
I45
VStringLiteral: "FROM mod_period_time\u005cn"
p10640
tp10641
I1
s(Vinsert
p10642
I45
VStringLiteral: "VALUES (8, 'Loki', 32, 'Hyderabad', 3000);"
p10643
tp10644
I1
s(Vinsert
p10645
I42
VSimpleName: getWallConditionContext
p10646
tp10647
I2
s(Vinsert
p10648
I42
VSimpleName: SQLFlashbackExpr
p10649
tp10650
I1
s(Vinsert
p10651
I42
VSimpleName: clearParameters
p10652
tp10653
I1
s(Vinsert
p10654
I74
VParameterizedType: List<SQLSelectItem>
p10655
tp10656
I3
s(Vinsert
p10657
I42
VSimpleName: ClassLoader
p10658
tp10659
I3
s(Vinsert
p10660
I45
VStringLiteral: "\u005cn\u005ctWHERE ROWNUM <= 20"
p10661
tp10662
I1
s(Vinsert
p10663
I42
VSimpleName: syncClose
p10664
tp10665
I1
s(Vinsert
p10666
I45
VStringLiteral: "\u005cn\u005ctpromo_begin_date DATE,"
p10667
tp10668
I4
s(Vinsert
p10669
I45
VStringLiteral: "Read timed out"
p10670
tp10671
I1
s(Vinsert
p10672
I42
VSimpleName: EvalConcatTest
p10673
tp10674
I1
s(Vinsert
p10675
I42
VSimpleName: proxyClient
p10676
tp10677
I1
s(Vinsert
p10678
I42
VSimpleName: setSchemaCheck
p10679
tp10680
I3
s(Vinsert
p10681
I45
VStringLiteral: "\u005ct, IFNULL(spare1, 0)\u005cn"
p10682
tp10683
I1
s(Vinsert
p10684
I42
VSimpleName: lockMode
p10685
tp10686
I1
s(Vinsert
p10687
I45
VStringLiteral: "REPLACE INTO t1 (id, name)\u005cn"
p10688
tp10689
I1
s(Vinsert
p10690
I42
VSimpleName: dataSourceOne
p10691
tp10692
I3
s(Vinsert
p10693
I42
VSimpleName: usernameParam
p10694
tp10695
I1
s(Vinsert
p10696
I42
VSimpleName: JSONDruidStatService
p10697
tp10698
I1
s(Vinsert
p10699
I42
VSimpleName: test_Date
p10700
tp10701
I2
s(Vinsert
p10702
I25
VIfStatement
p10703
tp10704
I1935
s(Vinsert
p10705
I45
VStringLiteral: "LOCATE"
p10706
tp10707
I1
s(Vinsert
p10708
I42
VSimpleName: measureColumn
p10709
tp10710
I2
s(Vinsert
p10711
I43
VSimpleType: OracleIsSetExpr
p10712
tp10713
I4
s(Vinsert
p10714
I45
VStringLiteral: "\u005cnPARTITION BY LIST (nls_territory)"
p10715
tp10716
I2
s(Vinsert
p10717
I42
VSimpleName: updateCountUpdater
p10718
tp10719
I1
s(Vinsert
p10720
I42
VSimpleName: getOSAndroid41Count
p10721
tp10722
I1
s(Vinsert
p10723
I42
VSimpleName: MySqlCursorOpenStatement
p10724
tp10725
I2
s(Vinsert
p10726
I45
VStringLiteral: "CREATE FUNCTION get_bal (\u005cn"
p10727
tp10728
I1
s(Vinsert
p10729
I34
VNumberLiteral: 1L
p10730
tp10731
I26
s(Vinsert
p10732
I40
VQualifiedName: Token.CONSTRAINT
p10733
tp10734
I3
s(Vinsert
p10735
I45
VStringLiteral: "BEGIN\u005cn"
p10736
tp10737
I6
s(Vinsert
p10738
I45
VStringLiteral: "\u005ctFLASH_CACHE DEFAULT\u005cn"
p10739
tp10740
I5
s(Vinsert
p10741
I45
VStringLiteral: "CONNECT"
p10742
tp10743
I2
s(Vinsert
p10744
I42
VSimpleName: getPhysicalColumn
p10745
tp10746
I4
s(Vinsert
p10747
I45
VStringLiteral: "WHERE a IN (?)\u005cn"
p10748
tp10749
I2
s(Vinsert
p10750
I42
VSimpleName: Prior
p10751
tp10752
I1
s(Vinsert
p10753
I45
VStringLiteral: "\u005cn AS (tfs, control_word, ocr_word, control_type, cates)"
p10754
tp10755
I2
s(Vinsert
p10756
I42
VSimpleName: SQLServerWallTest_2
p10757
tp10758
I1
s(Vinsert
p10759
I40
VQualifiedName: javax.management.ObjectName
p10760
tp10761
I1
s(Vinsert
p10762
I42
VSimpleName: rewriteSelect
p10763
tp10764
I1
s(Vinsert
p10765
I42
VSimpleName: isWithTimeZone
p10766
tp10767
I1
s(Vinsert
p10768
I40
VQualifiedName: SQLColumnDefinition.Identity
p10769
tp10770
I1
s(Vinsert
p10771
I42
VSimpleName: test_for_issue
p10772
tp10773
I1
s(Vinsert
p10774
I43
VSimpleType: MockDriver
p10775
tp10776
I4
s(Vinsert
p10777
I45
VStringLiteral: "      RETURNING sal INTO :2';\u005cn"
p10778
tp10779
I1
s(Vinsert
p10780
I40
VQualifiedName: Token.FOREIGN
p10781
tp10782
I2
s(Vinsert
p10783
I42
VSimpleName: DesDecrypter
p10784
tp10785
I2
s(Vinsert
p10786
I42
VSimpleName: executeErrorCount
p10787
tp10788
I5
s(Vinsert
p10789
I42
VSimpleName: curIndex
p10790
tp10791
I1
s(Vinsert
p10792
I45
VStringLiteral: "select id, login_name, name, password, salt"
p10793
tp10794
I1
s(Vinsert
p10795
I45
VStringLiteral: "null"
p10796
tp10797
I1
s(Vinsert
p10798
I45
VStringLiteral: " \u005cn/*!40101 SET character_set_client = @saved_cs_client */;"
p10799
tp10800
I1
s(Vinsert
p10801
I40
VQualifiedName: Token.CLOSE
p10802
tp10803
I1
s(Vinsert
p10804
I45
VStringLiteral: "syntax error, expect "
p10805
tp10806
I2
s(Vinsert
p10807
I45
VStringLiteral: "`a`"
p10808
tp10809
I1
s(Vinsert
p10810
I45
VStringLiteral: "\u005cnGROUP BY resource_value, http_method"
p10811
tp10812
I1
s(Vinsert
p10813
I43
VSimpleType: MySqlExplainStatement
p10814
tp10815
I1
s(Vinsert
p10816
I43
VSimpleType: A
p10817
tp10818
I1
s(Vinsert
p10819
I42
VSimpleName: getViewCount
p10820
tp10821
I1
s(Vinsert
p10822
I45
VStringLiteral: "PARTITION BY ("
p10823
tp10824
I1
s(Vinsert
p10825
I43
VSimpleType: SQLAlterTableEnableConstraint
p10826
tp10827
I3
s(Vinsert
p10828
I45
VStringLiteral: "\u005ctCOLLECTION_TIME VARCHAR(19)\u005cn"
p10829
tp10830
I1
s(Vinsert
p10831
I42
VSimpleName: addArgument
p10832
tp10833
I4
s(Vinsert
p10834
I45
VStringLiteral: "WHERE "
p10835
tp10836
I2
s(Vinsert
p10837
I42
VSimpleName: isVariantCheck
p10838
tp10839
I1
s(Vinsert
p10840
I43
VSimpleType: MySqlShowStatement
p10841
tp10842
I1
s(Vinsert
p10843
I42
VSimpleName: SQLAllColumnExpr
p10844
tp10845
I5
s(Vinsert
p10846
I45
VStringLiteral: "\u005ct, name\u005cn"
p10847
tp10848
I1
s(Vinsert
p10849
I42
VSimpleName: histogram_0_1_Updater
p10850
tp10851
I1
s(Vinsert
p10852
I42
VSimpleName: executeBatch
p10853
tp10854
I1
s(Vinsert
p10855
I45
VStringLiteral: "values "
p10856
tp10857
I1
s(Vinsert
p10858
I45
VStringLiteral: "\u005ctAND lat > 0\u005cn"
p10859
tp10860
I2
s(Vinsert
p10861
I42
VSimpleName: fieldInfo
p10862
tp10863
I2
s(Vinsert
p10864
I43
VSimpleType: TeradataSchemaStatVisitor
p10865
tp10866
I1
s(Vinsert
p10867
I45
VStringLiteral: ")"
p10868
tp10869
I45
s(Vinsert
p10870
I42
VSimpleName: SQLDropTableSpaceStatement
p10871
tp10872
I3
s(Vinsert
p10873
I40
VQualifiedName: hashField.field
p10874
tp10875
I1
s(Vinsert
p10876
I42
VSimpleName: current_timestamp
p10877
tp10878
I2
s(Vinsert
p10879
I43
VSimpleType: TableStat
p10880
tp10881
I10
s(Vinsert
p10882
I42
VSimpleName: setCharacter
p10883
tp10884
I1
s(Vinsert
p10885
I45
VStringLiteral: "\u005cndrop function if exists mytables;"
p10886
tp10887
I1
s(Vinsert
p10888
I43
VSimpleType: IllegalSQLObjectViolation
p10889
tp10890
I6
s(Vinsert
p10891
I42
VSimpleName: driver
p10892
tp10893
I32
s(Vinsert
p10894
I42
VSimpleName: test_loadClassPath
p10895
tp10896
I1
s(Vinsert
p10897
I42
VSimpleName: DB2StatementParser
p10898
tp10899
I1
s(Vinsert
p10900
I42
VSimpleName: setSubQuery
p10901
tp10902
I7
s(Vinsert
p10903
I42
VSimpleName: hasMoreTokens
p10904
tp10905
I1
s(Vinsert
p10906
I42
VSimpleName: OracleSelectTableReference
p10907
tp10908
I2
s(Vinsert
p10909
I45
VStringLiteral: "select 1 from hhh as select 1"
p10910
tp10911
I1
s(Vinsert
p10912
I43
VSimpleType: PublicKey
p10913
tp10914
I1
s(Vinsert
p10915
I42
VSimpleName: numberString
p10916
tp10917
I1
s(Vinsert
p10918
I42
VSimpleName: entry
p10919
tp10920
I26
s(Vinsert
p10921
I42
VSimpleName: findColumn
p10922
tp10923
I10
s(Vinsert
p10924
I42
VSimpleName: PrivilegedAction
p10925
tp10926
I1
s(Vinsert
p10927
I42
VSimpleName: mysqlSql
p10928
tp10929
I4
s(Vinsert
p10930
I42
VSimpleName: setConstraintName
p10931
tp10932
I5
s(Vinsert
p10933
I34
VNumberLiteral: 10000
p10934
tp10935
I1
s(Vinsert
p10936
I43
VSimpleType: DB2WallProvider
p10937
tp10938
I2
s(Vinsert
p10939
I42
VSimpleName: UnsupportedEncodingException
p10940
tp10941
I1
s(Vinsert
p10942
I45
VStringLiteral: "\u005ctcount NUMBER, \u005cn"
p10943
tp10944
I1
s(Vinsert
p10945
I43
VSimpleType: SQLWithSubqueryClause
p10946
tp10947
I6
s(Vinsert
p10948
I40
VQualifiedName: FnvHash.Constants.CURRVAL
p10949
tp10950
I1
s(Vinsert
p10951
I42
VSimpleName: nanos
p10952
tp10953
I1
s(Vinsert
p10954
I42
VSimpleName: unreturnedConnectionTimeout
p10955
tp10956
I1
s(Vinsert
p10957
I42
VSimpleName: param3
p10958
tp10959
I1
s(Vinsert
p10960
I45
VStringLiteral: "GROUP BY id"
p10961
tp10962
I2
s(Vinsert
p10963
I45
VStringLiteral: "tmall_campaign"
p10964
tp10965
I2
s(Vinsert
p10966
I42
VSimpleName: windowing
p10967
tp10968
I6
s(Vinsert
p10969
I45
VStringLiteral: ") TMP_PAGE\u005cn"
p10970
tp10971
I1
s(Vinsert
p10972
I42
VSimpleName: Log4jFilter
p10973
tp10974
I1
s(Vinsert
p10975
I45
VStringLiteral: "\u005cn\u005ctPRIMARY KEY (\u005c"ID\u005c") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE \u005c"USERS\u005c" ENABLE"
p10976
tp10977
I1
s(Vinsert
p10978
I42
VSimpleName: errorCode
p10979
tp10980
I5
s(Vinsert
p10981
I42
VSimpleName: loadClass
p10982
tp10983
I11
s(Vinsert
p10984
I40
VQualifiedName: com.alibaba.druid.jconsole.SQLPanel
p10985
tp10986
I1
s(Vinsert
p10987
I45
VStringLiteral: "\u005ctcol2\u005cn"
p10988
tp10989
I1
s(Vinsert
p10990
I45
VStringLiteral: "t9"
p10991
tp10992
I1
s(Vinsert
p10993
I42
VSimpleName: isPrintPostSemi
p10994
tp10995
I1
s(Vinsert
p10996
I42
VSimpleName: endVisit
p10997
tp10998
I93
s(Vinsert
p10999
I42
VSimpleName: getPartitions
p11000
tp11001
I10
s(Vinsert
p11002
I45
VStringLiteral: "EXPRESSION_CONDITION "
p11003
tp11004
I1
s(Vinsert
p11005
I40
VQualifiedName: SchemaObjectType.Table
p11006
tp11007
I1
s(Vinsert
p11008
I42
VSimpleName: isLogEnable
p11009
tp11010
I2
s(Vinsert
p11011
I45
VStringLiteral: "COMPRESS\u005cn"
p11012
tp11013
I3
s(Vinsert
p11014
I42
VSimpleName: getCommitCount
p11015
tp11016
I2
s(Vinsert
p11017
I45
VStringLiteral: "\u005ctDBMS_OUTPUT.PUT_LINE(' After loop:  x = ' || TO_CHAR(x));\u005cn"
p11018
tp11019
I1
s(Vinsert
p11020
I42
VSimpleName: getResourceAsStream
p11021
tp11022
I2
s(Vinsert
p11023
I42
VSimpleName: MysqlForeignKey
p11024
tp11025
I2
s(Vinsert
p11026
I45
VStringLiteral: "MAXTRANS"
p11027
tp11028
I1
s(Vinsert
p11029
I43
VSimpleType: SQLCreateProcedureStatement
p11030
tp11031
I2
s(Vinsert
p11032
I42
VSimpleName: getFilter
p11033
tp11034
I2
s(Vinsert
p11035
I45
VStringLiteral: "         order by DCREATE desc)"
p11036
tp11037
I1
s(Vinsert
p11038
I45
VStringLiteral: "ORDER BY 1 NULLS LAST;"
p11039
tp11040
I1
s(Vinsert
p11041
I42
VSimpleName: rightOp
p11042
tp11043
I2
s(Vinsert
p11044
I45
VStringLiteral: "FR8K7jT7X58k8xK9uYlZv5LhV71a7A=="
p11045
tp11046
I1
s(Vinsert
p11047
I42
VSimpleName: getKey
p11048
tp11049
I6
s(Vinsert
p11050
I42
VSimpleName: setLogName
p11051
tp11052
I1
s(Vinsert
p11053
I45
VStringLiteral: "DROP SESSION"
p11054
tp11055
I1
s(Vinsert
p11056
I42
VSimpleName: searchClause
p11057
tp11058
I4
s(Vinsert
p11059
I42
VSimpleName: collectSql
p11060
tp11061
I1
s(Vinsert
p11062
I45
VStringLiteral: "\u005ct\u005ctOR A.COUNTY LIKE ('%' || ? || '%')\u005cn"
p11063
tp11064
I1
s(Vinsert
p11065
I43
VSimpleType: WallSqlStatValue
p11066
tp11067
I2
s(Vinsert
p11068
I45
VStringLiteral: "\u005ct\u005ctTABLESPACE HASH_TS01, \u005cn"
p11069
tp11070
I1
s(Vinsert
p11071
I42
VSimpleName: resolveTableName
p11072
tp11073
I6
s(Vinsert
p11074
I43
VSimpleType: OdpsStatementParser
p11075
tp11076
I14
s(Vinsert
p11077
I42
VSimpleName: getGlobalTransactionId
p11078
tp11079
I1
s(Vinsert
p11080
I42
VSimpleName: IPRange
p11081
tp11082
I2
s(Vinsert
p11083
I45
VStringLiteral: " COMMENT "
p11084
tp11085
I4
s(Vinsert
p11086
I45
VStringLiteral: "\u005ctUNION\u005cn"
p11087
tp11088
I2
s(Vinsert
p11089
I45
VStringLiteral: "\u005cnPARTITION BY RANGE (YEAR(purchased))"
p11090
tp11091
I1
s(Vinsert
p11092
I45
VStringLiteral: " `Extent1`.`BankAccount`, "
p11093
tp11094
I1
s(Vinsert
p11095
I45
VStringLiteral: "create definer = 'ivan'@'%' event testevent1 on schedule every 1 hour ends '2016-11-05 23:59:00'\u005cn"
p11096
tp11097
I1
s(Vinsert
p11098
I42
VSimpleName: top
p11099
tp11100
I4
s(Vinsert
p11101
I42
VSimpleName: setDatabase
p11102
tp11103
I13
s(Vinsert
p11104
I45
VStringLiteral: "\u005cn\u005ctcust_last_name varchar2(20),"
p11105
tp11106
I2
s(Vinsert
p11107
I45
VStringLiteral: "SELECT *"
p11108
tp11109
I5
s(Vinsert
p11110
I42
VSimpleName: testWhileIdle
p11111
tp11112
I5
s(Vinsert
p11113
I42
VSimpleName: existsMethod
p11114
tp11115
I2
s(Vinsert
p11116
I43
VSimpleType: DB2ValuesStatement
p11117
tp11118
I1
s(Vinsert
p11119
I42
VSimpleName: select
p11120
tp11121
I119
s(Vinsert
p11122
I42
VSimpleName: SqlHolder
p11123
tp11124
I1
s(Vinsert
p11125
I45
VStringLiteral: "usergroups"
p11126
tp11127
I2
s(Vinsert
p11128
I45
VStringLiteral: "CREATE TABLE test_site_data_select_111\u005cn"
p11129
tp11130
I1
s(Vinsert
p11131
I43
VSimpleType: ReturnRowsClause
p11132
tp11133
I1
s(Vinsert
p11134
I42
VSimpleName: q
p11135
tp11136
I3
s(Vinsert
p11137
I42
VSimpleName: contextLocal
p11138
tp11139
I1
s(Vinsert
p11140
I42
VSimpleName: rightRational
p11141
tp11142
I1
s(Vinsert
p11143
I42
VSimpleName: setReferencedTable
p11144
tp11145
I1
s(Vinsert
p11146
I45
VStringLiteral: "NOSORT"
p11147
tp11148
I1
s(Vinsert
p11149
I40
VQualifiedName: TeradataAnalyticWindowing.Type.RANGE
p11150
tp11151
I1
s(Vinsert
p11152
I45
VStringLiteral: "\u005ctEXECUTE IMMEDIATE 'DELETE FROM dept WHERE deptno = :num' USING dept_id;\u005cn"
p11153
tp11154
I1
s(Vinsert
p11155
I42
VSimpleName: WallUpdateCheckItem
p11156
tp11157
I7
s(Vinsert
p11158
I40
VQualifiedName: Token.EXCEPTIONS
p11159
tp11160
I1
s(Vinsert
p11161
I42
VSimpleName: notOp
p11162
tp11163
I1
s(Vinsert
p11164
I42
VSimpleName: clear
p11165
tp11166
I13
s(Vinsert
p11167
I42
VSimpleName: Bean
p11168
tp11169
I2
s(Vinsert
p11170
I34
VNumberLiteral: 79757
p11171
tp11172
I1
s(Vinsert
p11173
I45
VStringLiteral: "F2"
p11174
tp11175
I1
s(Vinsert
p11176
I45
VStringLiteral: "\u005ctMINEXTENTS 1\u005cn"
p11177
tp11178
I3
s(Vinsert
p11179
I45
VStringLiteral: "pt_dragoon_test"
p11180
tp11181
I1
s(Vinsert
p11182
I42
VSimpleName: getNativePreparedStatement
p11183
tp11184
I6
s(Vinsert
p11185
I43
VSimpleType: DaemonThreadFactory
p11186
tp11187
I2
s(Vinsert
p11188
I43
VSimpleType: FilterChainImpl
p11189
tp11190
I8
s(Vinsert
p11191
I45
VStringLiteral: "\u005cn --c_2"
p11192
tp11193
I1
s(Vinsert
p11194
I42
VSimpleName: ConcurrentHashMap
p11195
tp11196
I1
s(Vinsert
p11197
I42
VSimpleName: getSelectCount
p11198
tp11199
I2
s(Vinsert
p11200
I45
VStringLiteral: "ConnectionCount_Alive_12_24_Hours"
p11201
tp11202
I1
s(Vinsert
p11203
I42
VSimpleName: createContext
p11204
tp11205
I1
s(Vinsert
p11206
I42
VSimpleName: GenericServlet
p11207
tp11208
I2
s(Vinsert
p11209
I42
VSimpleName: hash_lower
p11210
tp11211
I6
s(Vinsert
p11212
I42
VSimpleName: MySqlWallTest16
p11213
tp11214
I1
s(Vinsert
p11215
I42
VSimpleName: getBlackListHitCount
p11216
tp11217
I1
s(Vinsert
p11218
I42
VSimpleName: loadFromFile
p11219
tp11220
I3
s(Vinsert
p11221
I45
VStringLiteral: "col.id = dist.sample_column_dist_column_id and \u005cn"
p11222
tp11223
I1
s(Vinsert
p11224
I42
VSimpleName: parameterized
p11225
tp11226
I1
s(Vinsert
p11227
I42
VSimpleName: SystemException
p11228
tp11229
I1
s(Vinsert
p11230
I42
VSimpleName: pivotIn
p11231
tp11232
I1
s(Vinsert
p11233
I52
VThisExpression
p11234
tp11235
I972
s(Vinsert
p11236
I42
VSimpleName: getTenantColumn
p11237
tp11238
I1
s(Vinsert
p11239
I42
VSimpleName: XAException
p11240
tp11241
I2
s(Vinsert
p11242
I42
VSimpleName: character
p11243
tp11244
I3
s(Vinsert
p11245
I42
VSimpleName: setWithCascaded
p11246
tp11247
I1
s(Vinsert
p11248
I42
VSimpleName: getInitStackTrace
p11249
tp11250
I1
s(Vinsert
p11251
I45
VStringLiteral: " `Extent1`.`State`, "
p11252
tp11253
I1
s(Vinsert
p11254
I42
VSimpleName: match
p11255
tp11256
I33
s(Vinsert
p11257
I45
VStringLiteral: "user-5"
p11258
tp11259
I1
s(Vinsert
p11260
I42
VSimpleName: getConnectionCount_Alive_3_more_Day
p11261
tp11262
I1
s(Vinsert
p11263
I45
VStringLiteral: "\u005c"C0\u005c""
p11264
tp11265
I1
s(Vinsert
p11266
I40
VQualifiedName: entry.value
p11267
tp11268
I1
s(Vinsert
p11269
I42
VSimpleName: MySqlWallTest23
p11270
tp11271
I1
s(Vinsert
p11272
I42
VSimpleName: rtnVal
p11273
tp11274
I1
s(Vinsert
p11275
I43
VSimpleType: SQLSelectOrderByItem
p11276
tp11277
I26
s(Vinsert
p11278
I42
VSimpleName: xid
p11279
tp11280
I5
s(Vinsert
p11281
I42
VSimpleName: EVAL_EXPR
p11282
tp11283
I1
s(Vinsert
p11284
I42
VSimpleName: StatAnnotationAdvisor
p11285
tp11286
I2
s(Vinsert
p11287
I42
VSimpleName: Arrays
p11288
tp11289
I10
s(Vinsert
p11290
I42
VSimpleName: User
p11291
tp11292
I6
s(Vinsert
p11293
I45
VStringLiteral: "\u005cnselect 3 from t3"
p11294
tp11295
I1
s(Vinsert
p11296
I42
VSimpleName: TestUtils
p11297
tp11298
I8
s(Vinsert
p11299
I45
VStringLiteral: "app_customer_license"
p11300
tp11301
I1
s(Vinsert
p11302
I40
VQualifiedName: AsOfFlashbackQueryClause.Type.SCN
p11303
tp11304
I1
s(Vinsert
p11305
I40
VQualifiedName: holder.lastActiveTimeMillis
p11306
tp11307
I1
s(Vinsert
p11308
I42
VSimpleName: SqlServerOutputVisitor
p11309
tp11310
I1
s(Vinsert
p11311
I42
VSimpleName: getHeader
p11312
tp11313
I2
s(Vinsert
p11314
I42
VSimpleName: days
p11315
tp11316
I2
s(Vinsert
p11317
I45
VStringLiteral: "CREATE DATABASE "
p11318
tp11319
I1
s(Vinsert
p11320
I74
VParameterizedType: HashSet<String>
p11321
tp11322
I5
s(Vinsert
p11323
I45
VStringLiteral: "\u005cn\u005ctEND_ACT_ID_ NVARCHAR2(255),"
p11324
tp11325
I2
s(Vinsert
p11326
I42
VSimpleName: HashMap
p11327
tp11328
I11
s(Vinsert
p11329
I42
VSimpleName: getPercent
p11330
tp11331
I1
s(Vinsert
p11332
I45
VStringLiteral: "CREATE LOGFILE GROUP lg1 ADD UNDOFILE 'undo.dat' INITIAL_SIZE = 10M ENGINE = InnoDB;"
p11333
tp11334
I1
s(Vinsert
p11335
I45
VStringLiteral: "\u005cn\u005ctBEFORE INSERT"
p11336
tp11337
I2
s(Vinsert
p11338
I45
VStringLiteral: "\u005ct\u005ct\u005ctCELL_FLASH_CACHE DEFAULT\u005cn"
p11339
tp11340
I3
s(Vinsert
p11341
I42
VSimpleName: expr2
p11342
tp11343
I2
s(Vinsert
p11344
I83
VModifier: final
p11345
tp11346
I55
s(Vinsert
p11347
I45
VStringLiteral: "\u005cnwhere name rlike 'kk';"
p11348
tp11349
I1
s(Vinsert
p11350
I40
VQualifiedName: Token.RESTART
p11351
tp11352
I1
s(Vinsert
p11353
I43
VSimpleType: JdbcConnectionStat
p11354
tp11355
I2
s(Vinsert
p11356
I45
VStringLiteral: "CLOSE "
p11357
tp11358
I1
s(Vinsert
p11359
I45
VStringLiteral: "\u005c\u005c\u005c""
p11360
tp11361
I1
s(Vinsert
p11362
I42
VSimpleName: distributeBy
p11363
tp11364
I1
s(Vinsert
p11365
I45
VStringLiteral: "ROW EXCLUSIVE"
p11366
tp11367
I1
s(Vinsert
p11368
I45
VStringLiteral: "\u005ct\u005ctELSE\u005cn"
p11369
tp11370
I3
s(Vinsert
p11371
I42
VSimpleName: parseDeleteStatement
p11372
tp11373
I4
s(Vinsert
p11374
I42
VSimpleName: isAdminOption
p11375
tp11376
I1
s(Vinsert
p11377
I45
VStringLiteral: " partition ("
p11378
tp11379
I1
s(Vinsert
p11380
I42
VSimpleName: getUnit
p11381
tp11382
I2
s(Vinsert
p11383
I40
VQualifiedName: LayoutCharacters.EOI
p11384
tp11385
I1
s(Vinsert
p11386
I42
VSimpleName: filterName
p11387
tp11388
I2
s(Vinsert
p11389
I42
VSimpleName: writeString
p11390
tp11391
I2
s(Vinsert
p11392
I42
VSimpleName: setRecursive
p11393
tp11394
I1
s(Vinsert
p11395
I42
VSimpleName: WebAppStatUtils
p11396
tp11397
I5
s(Vinsert
p11398
I45
VStringLiteral: "SELECT id, name, gender, salary FROM test_user where id = 3 or id = ?"
p11399
tp11400
I1
s(Vinsert
p11401
I45
VStringLiteral: "/*+"
p11402
tp11403
I1
s(Vinsert
p11404
I45
VStringLiteral: "APPLY"
p11405
tp11406
I1
s(Vinsert
p11407
I42
VSimpleName: Connection
p11408
tp11409
I100
s(Vinsert
p11410
I42
VSimpleName: Function
p11411
tp11412
I6
s(Vinsert
p11413
I45
VStringLiteral: "\u005cn\u005ct\u005c"DASHBOARD_ID\u005c" NUMBER(38, 0) NOT NULL ENABLE,"
p11414
tp11415
I1
s(Vinsert
p11416
I43
VSimpleType: SQLTimestampExpr
p11417
tp11418
I3
s(Vinsert
p11419
I45
VStringLiteral: "from employee\u005cn"
p11420
tp11421
I1
s(Vinsert
p11422
I42
VSimpleName: SQLCreateFunctionStatement
p11423
tp11424
I2
s(Vinsert
p11425
I37
VPostfixExpression: ++
p11426
tp11427
I33
s(Vinsert
p11428
I40
VQualifiedName: StatementType.SELECT
p11429
tp11430
I1
s(Vinsert
p11431
I45
VStringLiteral: "\u005cn\u005ctSUPER_PROCESS_INSTANCE_ID_ NVARCHAR2(64),"
p11432
tp11433
I2
s(Vinsert
p11434
I42
VSimpleName: ValidTask
p11435
tp11436
I1
s(Vinsert
p11437
I45
VStringLiteral: "\u005cn\u005ct\u005ctCONSTRAINT check_office CHECK (office IN ('DALLAS', 'BOSTON', 'PARIS', 'TOKYO')) DISABLE"
p11438
tp11439
I2
s(Vinsert
p11440
I42
VSimpleName: addSqlFunctionStat
p11441
tp11442
I1
s(Vinsert
p11443
I45
VStringLiteral: "escrow_trade"
p11444
tp11445
I1
s(Vinsert
p11446
I45
VStringLiteral: "    ) seller_nick using(buyer_nick) "
p11447
tp11448
I1
s(Vinsert
p11449
I42
VSimpleName: getLeft
p11450
tp11451
I33
s(Vinsert
p11452
I42
VSimpleName: targetList
p11453
tp11454
I3
s(Vinsert
p11455
I45
VStringLiteral: "\u005cn\u005ctdisable lifecycle;"
p11456
tp11457
I1
s(Vinsert
p11458
I45
VStringLiteral: "| c_date       | date         | NO   |     | 0000-00-00          |                             |\u005cn"
p11459
tp11460
I1
s(Vinsert
p11461
I42
VSimpleName: first
p11462
tp11463
I9
s(Vinsert
p11464
I42
VSimpleName: incrementBusySkipCount
p11465
tp11466
I1
s(Vinsert
p11467
I45
VStringLiteral: "\u005ct\u005c"SQL_ACTIONS\u005c", \u005cn"
p11468
tp11469
I1
s(Vinsert
p11470
I45
VStringLiteral: " min_rows "
p11471
tp11472
I1
s(Vinsert
p11473
I45
VStringLiteral: "\u005cnSTORE IN (tbs_01, tbs_02, tbs_03, tbs_04)"
p11474
tp11475
I2
s(Vinsert
p11476
I45
VStringLiteral: "not support token:"
p11477
tp11478
I2
s(Vinsert
p11479
I45
VStringLiteral: "\u005ct\u005c"COUNT\u005c" VARCHAR(102)\u005cn"
p11480
tp11481
I2
s(Vinsert
p11482
I42
VSimpleName: recordFetchRowCount
p11483
tp11484
I1
s(Vinsert
p11485
I42
VSimpleName: setCollectWebURIEnable
p11486
tp11487
I1
s(Vinsert
p11488
I42
VSimpleName: AtomicReference
p11489
tp11490
I2
s(Vinsert
p11491
I45
VStringLiteral: "CREATE OR REPLACE PROCEDURE proc_helloworld\u005cn"
p11492
tp11493
I1
s(Vinsert
p11494
I42
VSimpleName: getColName
p11495
tp11496
I4
s(Vinsert
p11497
I45
VStringLiteral: "\u005cn\u005ctPARTITION SALES_Q4_2000 VALUES LESS THAN (MAXVALUE)"
p11498
tp11499
I2
s(Vinsert
p11500
I42
VSimpleName: setUnderlyingReadOnly
p11501
tp11502
I1
s(Vinsert
p11503
I42
VSimpleName: clazz
p11504
tp11505
I20
s(Vinsert
p11506
I42
VSimpleName: executeAndResultHoldTimeHistogram
p11507
tp11508
I1
s(Vinsert
p11509
I42
VSimpleName: output
p11510
tp11511
I176
s(Vinsert
p11512
I42
VSimpleName: getResources
p11513
tp11514
I1
s(Vinsert
p11515
I40
VQualifiedName: Color.lightGray
p11516
tp11517
I1
s(Vinsert
p11518
I45
VStringLiteral: " WORKITEMID VARCHAR(40) NOT NULL,\u005cn"
p11519
tp11520
I1
s(Vinsert
p11521
I42
VSimpleName: updateDataCount_1_10
p11522
tp11523
I1
s(Vinsert
p11524
I42
VSimpleName: getResourceURL
p11525
tp11526
I1
s(Vinsert
p11527
I42
VSimpleName: PGCurrentOfExpr
p11528
tp11529
I1
s(Vinsert
p11530
I42
VSimpleName: getVersionNumber
p11531
tp11532
I2
s(Vinsert
p11533
I42
VSimpleName: setOperator
p11534
tp11535
I1
s(Vinsert
p11536
I42
VSimpleName: setEndExpr
p11537
tp11538
I1
s(Vinsert
p11539
I42
VSimpleName: beforeComments
p11540
tp11541
I5
s(Vinsert
p11542
I42
VSimpleName: CharTypes
p11543
tp11544
I3
s(Vinsert
p11545
I42
VSimpleName: WallSqlStatValue
p11546
tp11547
I2
s(Vinsert
p11548
I45
VStringLiteral: "\u005ctPCTINCREASE 0\u005cn"
p11549
tp11550
I3
s(Vinsert
p11551
I42
VSimpleName: getConnectionHolder
p11552
tp11553
I8
s(Vinsert
p11554
I42
VSimpleName: ping_1000
p11555
tp11556
I2
s(Vinsert
p11557
I45
VStringLiteral: "\u005ct\u005ctSELECT menu_id\u005cn"
p11558
tp11559
I1
s(Vinsert
p11560
I45
VStringLiteral: " ON "
p11561
tp11562
I2
s(Vinsert
p11563
I45
VStringLiteral: "\u005cn\u005ct\u005ctAND name.last_name IS NOT NULL)"
p11564
tp11565
I2
s(Vinsert
p11566
I45
VStringLiteral: "druid.resetStatEnable"
p11567
tp11568
I1
s(Vinsert
p11569
I7
VAssignment: =
p11570
tp11571
I663
s(Vinsert
p11572
I45
VStringLiteral: "create tablespace tblsp1 add datafile 'tblsp_work1' use logfile group lg_1 initial_size = 4G engine MYISAM;"
p11573
tp11574
I1
s(Vinsert
p11575
I45
VStringLiteral: "CREATE OR REPLACE TYPE \u005c"VARRAY_DEPT_TYPE\u005c" VARRAY (7000) OF NUMBER(10)"
p11576
tp11577
I1
s(Vinsert
p11578
I45
VStringLiteral: "OSAndroid41Count"
p11579
tp11580
I1
s(Vinsert
p11581
I45
VStringLiteral: "StartTransactionCount"
p11582
tp11583
I1
s(Vinsert
p11584
I40
VQualifiedName: Token.RPAREN
p11585
tp11586
I16
s(Vinsert
p11587
I45
VStringLiteral: "select min(id) from wx_interact where activityid=1008 group by true_name,mobile having rand()<1"
p11588
tp11589
I1
s(Vinsert
p11590
I40
VQualifiedName: parentCtx.object
p11591
tp11592
I1
s(Vinsert
p11593
I45
VStringLiteral: "\u005cnselect * from table2;;select * from table3;"
p11594
tp11595
I1
s(Vinsert
p11596
I42
VSimpleName: setProperty
p11597
tp11598
I17
s(Vinsert
p11599
I42
VSimpleName: names
p11600
tp11601
I17
s(Vinsert
p11602
I42
VSimpleName: shardingSupport
p11603
tp11604
I2
s(Vinsert
p11605
I42
VSimpleName: histogram_100_1000
p11606
tp11607
I1
s(Vinsert
p11608
I43
VSimpleType: TableStat.Column
p11609
tp11610
I4
s(Vinsert
p11611
I40
VQualifiedName: Types.FLOAT
p11612
tp11613
I1
s(Vinsert
p11614
I45
VStringLiteral: "\u005ct\u005ctFROM TPC_CPR.TPC_CPR_ITEMS ITEM, TPC_CPR.TPC_CPR_SYSTEM_ITEMS SYS_ITEM, TPC_CPR.TPC_CPR_PRICE P\u005cn"
p11615
tp11616
I1
s(Vinsert
p11617
I45
VStringLiteral: "WHERE gmt = #{time}::timestamp WITHOUT TIME ZONE"
p11618
tp11619
I1
s(Vinsert
p11620
I42
VSimpleName: functionName
p11621
tp11622
I1
s(Vinsert
p11623
I42
VSimpleName: parent
p11624
tp11625
I50
s(Vinsert
p11626
I42
VSimpleName: setBeforeExistingAdvisors
p11627
tp11628
I1
s(Vinsert
p11629
I42
VSimpleName: EVAL_ERROR
p11630
tp11631
I1
s(Vinsert
p11632
I42
VSimpleName: addInsertDataCount
p11633
tp11634
I1
s(Vinsert
p11635
I45
VStringLiteral: "SHARE ROW EXCLUSIVE"
p11636
tp11637
I1
s(Vinsert
p11638
I45
VStringLiteral: "select * from a full outer join b on a.id=b.id"
p11639
tp11640
I1
s(Vinsert
p11641
I45
VStringLiteral: "minEvictableIdleTimeMillis=12345"
p11642
tp11643
I1
s(Vinsert
p11644
I42
VSimpleName: subParamExpr
p11645
tp11646
I1
s(Vinsert
p11647
I42
VSimpleName: TableSpaceOption
p11648
tp11649
I2
s(Vinsert
p11650
I45
VStringLiteral: "jdbc:mysql://localhost:3306/druid-monitor"
p11651
tp11652
I1
s(Vinsert
p11653
I43
VSimpleType: SQLParseException
p11654
tp11655
I3
s(Vinsert
p11656
I40
VQualifiedName: Token.FROM
p11657
tp11658
I12
s(Vinsert
p11659
I42
VSimpleName: getLabelName
p11660
tp11661
I1
s(Vinsert
p11662
I45
VStringLiteral: "SELECT id, value FROM m_sql_const"
p11663
tp11664
I1
s(Vinsert
p11665
I40
VQualifiedName: com.alibaba.druid.stat.TableStat.Column
p11666
tp11667
I2
s(Vinsert
p11668
I42
VSimpleName: WallFilter
p11669
tp11670
I2
s(Vinsert
p11671
I45
VStringLiteral: "\u005cn\u005ctdiv_name VARCHAR2(9)"
p11672
tp11673
I2
s(Vinsert
p11674
I42
VSimpleName: SQLListExpr
p11675
tp11676
I7
s(Vinsert
p11677
I42
VSimpleName: getColumn
p11678
tp11679
I9
s(Vinsert
p11680
I43
VSimpleType: JarURLConnection
p11681
tp11682
I2
s(Vinsert
p11683
I40
VQualifiedName: x.argumentName
p11684
tp11685
I1
s(Vinsert
p11686
I45
VStringLiteral: "\u005ctlast_name, \u005cn"
p11687
tp11688
I1
s(Vinsert
p11689
I45
VStringLiteral: " AND apserialno = _gbk '201405120002300002170013205458'"
p11690
tp11691
I1
s(Vinsert
p11692
I42
VSimpleName: isFail
p11693
tp11694
I1
s(Vinsert
p11695
I42
VSimpleName: constraint
p11696
tp11697
I13
s(Vinsert
p11698
I43
VSimpleType: TargetSource
p11699
tp11700
I1
s(Vinsert
p11701
I42
VSimpleName: OracleGotoStatement
p11702
tp11703
I1
s(Vinsert
p11704
I42
VSimpleName: userAgent
p11705
tp11706
I6
s(Vinsert
p11707
I45
VStringLiteral: "selelct 1"
p11708
tp11709
I1
s(Vinsert
p11710
I40
VQualifiedName: Token.KEY.name
p11711
tp11712
I1
s(Vinsert
p11713
I42
VSimpleName: setBackground
p11714
tp11715
I2
s(Vinsert
p11716
I45
VStringLiteral: "\u005ct\u005ct\u005ct('4254cc14-1c83-4eaf-95ae-59438dd0cc17', '5fd20fa9-7659-4f8b-a4c2-2021a48317d8', now(),now(),null,null)"
p11717
tp11718
I1
s(Vinsert
p11719
I45
VStringLiteral: "\u005ct, `destination`, `start_standard`, `start_fee`, `add_standard`, `add_fee`\u005cn"
p11720
tp11721
I1
s(Vinsert
p11722
I43
VSimpleType: PGFunctionTableSource
p11723
tp11724
I1
s(Vinsert
p11725
I42
VSimpleName: druidDataSourceStatManagerClass
p11726
tp11727
I1
s(Vinsert
p11728
I42
VSimpleName: getDeclaredConstructor
p11729
tp11730
I1
s(Vinsert
p11731
I40
VQualifiedName: Type.GLOBAL_TEMPORARY
p11732
tp11733
I1
s(Vinsert
p11734
I42
VSimpleName: setParamType
p11735
tp11736
I4
s(Vinsert
p11737
I42
VSimpleName: setOnCommitDeleteRows
p11738
tp11739
I1
s(Vinsert
p11740
I45
VStringLiteral: "com.alibaba.druid.filter.stat.StatFilter"
p11741
tp11742
I1
s(Vinsert
p11743
I42
VSimpleName: setCollectTimeMillis
p11744
tp11745
I1
s(Vinsert
p11746
I43
VSimpleType: SQLGrantStatement
p11747
tp11748
I1
s(Vinsert
p11749
I42
VSimpleName: resultSetLogger
p11750
tp11751
I1
s(Vinsert
p11752
I45
VStringLiteral: "CREATE TABLE HASH_TABLE (\u005cn"
p11753
tp11754
I1
s(Vinsert
p11755
I42
VSimpleName: ColumnMetaData
p11756
tp11757
I7
s(Vinsert
p11758
I42
VSimpleName: lastDenyTimeMillis
p11759
tp11760
I1
s(Vinsert
p11761
I42
VSimpleName: isKeepComments
p11762
tp11763
I13
s(Vinsert
p11764
I45
VStringLiteral: "LastErrorTime"
p11765
tp11766
I1
s(Vinsert
p11767
I42
VSimpleName: parseDataTypeRest
p11768
tp11769
I1
s(Vinsert
p11770
I45
VStringLiteral: "DISTRIBUTE BY "
p11771
tp11772
I1
s(Vinsert
p11773
I45
VStringLiteral: "\u005ctemail UNIQUE, \u005cn"
p11774
tp11775
I1
s(Vinsert
p11776
I45
VStringLiteral: "META-INF/druid-filter-wall-permit-function-oracle.txt"
p11777
tp11778
I1
s(Vinsert
p11779
I45
VStringLiteral: "/user/{id}"
p11780
tp11781
I1
s(Vinsert
p11782
I42
VSimpleName: setWrite
p11783
tp11784
I1
s(Vinsert
p11785
I42
VSimpleName: initStatement
p11786
tp11787
I2
s(Vinsert
p11788
I42
VSimpleName: preparedStatement_setDouble
p11789
tp11790
I1
s(Vinsert
p11791
I43
VSimpleType: NoSuchMethodError
p11792
tp11793
I1
s(Vinsert
p11794
I42
VSimpleName: LITERAL_ALIAS
p11795
tp11796
I1
s(Vinsert
p11797
I42
VSimpleName: NullsOrderType
p11798
tp11799
I1
s(Vinsert
p11800
I40
VQualifiedName: SQLBinaryOperator.NotEqual
p11801
tp11802
I2
s(Vinsert
p11803
I42
VSimpleName: valueClause
p11804
tp11805
I2
s(Vinsert
p11806
I42
VSimpleName: clearCache
p11807
tp11808
I3
s(Vinsert
p11809
I45
VStringLiteral: "\u005cnFROM user"
p11810
tp11811
I1
s(Vinsert
p11812
I45
VStringLiteral: "\u005cn("
p11813
tp11814
I12
s(Vinsert
p11815
I42
VSimpleName: toPGString
p11816
tp11817
I30
s(Vinsert
p11818
I45
VStringLiteral: "port"
p11819
tp11820
I1
s(Vinsert
p11821
I40
VQualifiedName: _aggregateFunctions.length
p11822
tp11823
I1
s(Vinsert
p11824
I42
VSimpleName: fillCount
p11825
tp11826
I3
s(Vinsert
p11827
I42
VSimpleName: setTimeBetweenEvictionRunsMillis
p11828
tp11829
I6
s(Vinsert
p11830
I42
VSimpleName: updateStmt
p11831
tp11832
I1
s(Vinsert
p11833
I42
VSimpleName: MySqlExtractExpr
p11834
tp11835
I3
s(Vinsert
p11836
I42
VSimpleName: getObjno
p11837
tp11838
I2
s(Vinsert
p11839
I43
VSimpleType: PreparedStatementHolder
p11840
tp11841
I11
s(Vinsert
p11842
I45
VStringLiteral: "BLOCK "
p11843
tp11844
I1
s(Vinsert
p11845
I45
VStringLiteral: "\u005cn\u005ct\u005ctOR d.indkey[2] = a.attnum"
p11846
tp11847
I1
s(Vinsert
p11848
I45
VStringLiteral: "\u005ctCONSTRAINT idx_ALI_KTV_LEADS_AREA_FIX_TBD_PK0 PRIMARY KEY (ID)\u005cn"
p11849
tp11850
I1
s(Vinsert
p11851
I45
VStringLiteral: "= "
p11852
tp11853
I1
s(Vinsert
p11854
I45
VStringLiteral: "5''TW'"
p11855
tp11856
I1
s(Vinsert
p11857
I42
VSimpleName: forget
p11858
tp11859
I1
s(Vinsert
p11860
I45
VStringLiteral: "?"
p11861
tp11862
I5
s(Vinsert
p11863
I43
VSimpleType: InputStream
p11864
tp11865
I4
s(Vinsert
p11866
I45
VStringLiteral: "jdbc:mock:xx"
p11867
tp11868
I3
s(Vinsert
p11869
I45
VStringLiteral: "\u005ct\u005ct  \u005cn"
p11870
tp11871
I1
s(Vinsert
p11872
I42
VSimpleName: getInterval
p11873
tp11874
I1
s(Vinsert
p11875
I45
VStringLiteral: "\u005ctFROM TEST\u005cn"
p11876
tp11877
I2
s(Vinsert
p11878
I45
VStringLiteral: "SELECT name, '******' password, createTime from user "
p11879
tp11880
I1
s(Vinsert
p11881
I45
VStringLiteral: "CREATE TABLE order_detail ("
p11882
tp11883
I2
s(Vinsert
p11884
I43
VSimpleType: MySqlASTVisitor
p11885
tp11886
I105
s(Vinsert
p11887
I42
VSimpleName: idleMillis
p11888
tp11889
I1
s(Vinsert
p11890
I42
VSimpleName: alias
p11891
tp11892
I42
s(Vinsert
p11893
I42
VSimpleName: LITERAL_CHARS
p11894
tp11895
I2
s(Vinsert
p11896
I45
VStringLiteral: "\u005cnwhere status = '20' -- comment xxx"
p11897
tp11898
I1
s(Vinsert
p11899
I42
VSimpleName: setLimitZeroAllow
p11900
tp11901
I2
s(Vinsert
p11902
I42
VSimpleName: rightValue
p11903
tp11904
I2
s(Vinsert
p11905
I42
VSimpleName: deleteRow
p11906
tp11907
I1
s(Vinsert
p11908
I45
VStringLiteral: "\u005ctAND `buyer_resource`.`END_TIME` >= ?\u005cn"
p11909
tp11910
I1
s(Vinsert
p11911
I42
VSimpleName: rightDataType
p11912
tp11913
I1
s(Vinsert
p11914
I45
VStringLiteral: "\u005cnPARTITION BY RANGE (id)"
p11915
tp11916
I1
s(Vinsert
p11917
I45
VStringLiteral: "tid"
p11918
tp11919
I1
s(Vinsert
p11920
I40
VQualifiedName: com.alibaba.druid.util.IOUtils
p11921
tp11922
I1
s(Vinsert
p11923
I44
VSingleVariableDeclaration
p11924
tp11925
I1343
s(Vinsert
p11926
I45
VStringLiteral: "\u005ct);"
p11927
tp11928
I1
s(Vinsert
p11929
I42
VSimpleName: setBeginExpr
p11930
tp11931
I2
s(Vinsert
p11932
I42
VSimpleName: m
p11933
tp11934
I10
s(Vinsert
p11935
I45
VStringLiteral: "bsh"
p11936
tp11937
I1
s(Vinsert
p11938
I45
VStringLiteral: "        ADD COLUMN variation_value_2 DECIMAL(30, 20) NULL DEFAULT NULL,\u005cn"
p11939
tp11940
I1
s(Vinsert
p11941
I42
VSimpleName: OracleSchemaStatVisitor
p11942
tp11943
I404
s(Vinsert
p11944
I42
VSimpleName: isLogical
p11945
tp11946
I3
s(Vinsert
p11947
I45
VStringLiteral: "DEBUG"
p11948
tp11949
I1
s(Vinsert
p11950
I45
VStringLiteral: "\u005cn\u005ctFROM DUAL;"
p11951
tp11952
I2
s(Vinsert
p11953
I42
VSimpleName: getRef
p11954
tp11955
I1
s(Vinsert
p11956
I42
VSimpleName: DataSourceProxyImpl
p11957
tp11958
I2
s(Vinsert
p11959
I42
VSimpleName: insert
p11960
tp11961
I4
s(Vinsert
p11962
I42
VSimpleName: transfer
p11963
tp11964
I1
s(Vinsert
p11965
I42
VSimpleName: SQLHexExpr
p11966
tp11967
I4
s(Vinsert
p11968
I43
VSimpleType: OracleDropSequenceStatement
p11969
tp11970
I1
s(Vinsert
p11971
I42
VSimpleName: MySqlMatchAgainstExpr
p11972
tp11973
I2
s(Vinsert
p11974
I45
VStringLiteral: "\u005cnFROM t1, t2"
p11975
tp11976
I1
s(Vinsert
p11977
I42
VSimpleName: incrementRunningCount
p11978
tp11979
I1
s(Vinsert
p11980
I42
VSimpleName: _aggregateFunctions
p11981
tp11982
I1
s(Vinsert
p11983
I42
VSimpleName: getTargetList
p11984
tp11985
I2
s(Vinsert
p11986
I42
VSimpleName: getWindowingType
p11987
tp11988
I1
s(Vinsert
p11989
I45
VStringLiteral: "ascii"
p11990
tp11991
I1
s(Vinsert
p11992
I45
VStringLiteral: "ContextPath"
p11993
tp11994
I1
s(Vinsert
p11995
I42
VSimpleName: setLabelName
p11996
tp11997
I1
s(Vinsert
p11998
I42
VSimpleName: getDataSourceName
p11999
tp12000
I1
s(Vinsert
p12001
I42
VSimpleName: getLockType
p12002
tp12003
I3
s(Vinsert
p12004
I45
VStringLiteral: "B"
p12005
tp12006
I1
s(Vinsert
p12007
I43
VSimpleType: PGUpdateStatement
p12008
tp12009
I2
s(Vinsert
p12010
I43
VSimpleType: OdpsSelectParser
p12011
tp12012
I1
s(Vinsert
p12013
I45
VStringLiteral: "\u005ctc1_2\u005cn"
p12014
tp12015
I1
s(Vinsert
p12016
I42
VSimpleName: initCheck
p12017
tp12018
I2
s(Vinsert
p12019
I43
VSimpleType: java.sql.Timestamp
p12020
tp12021
I2
s(Vinsert
p12022
I45
VStringLiteral: "\u005ct\u005ct\u005ctEXIT outer_loop WHEN i * j > 15;\u005cn"
p12023
tp12024
I1
s(Vinsert
p12025
I42
VSimpleName: osWindows8Count
p12026
tp12027
I1
s(Vinsert
p12028
I45
VStringLiteral: "\u005ctSELECT DISTINCT MKTG_PLAN_LVL3_ID AS PID, MKTG_PLAN_LVL4_ID AS SCENE_ID\u005cn"
p12029
tp12030
I1
s(Vinsert
p12031
I42
VSimpleName: setLinear
p12032
tp12033
I1
s(Vinsert
p12034
I42
VSimpleName: globalConnection
p12035
tp12036
I1
s(Vinsert
p12037
I40
VQualifiedName: com.alibaba.druid.pool.PoolableConnection
p12038
tp12039
I1
s(Vinsert
p12040
I45
VStringLiteral: "yyyy-MM-dd HH:mm:ss"
p12041
tp12042
I3
s(Vinsert
p12043
I42
VSimpleName: root
p12044
tp12045
I1
s(Vinsert
p12046
I45
VStringLiteral: "\u005cn('a1', 'b1'),"
p12047
tp12048
I2
s(Vinsert
p12049
I45
VStringLiteral: "from employees\u005cn"
p12050
tp12051
I2
s(Vinsert
p12052
I42
VSimpleName: ps
p12053
tp12054
I3
s(Vinsert
p12055
I42
VSimpleName: updateDataCount_10_100
p12056
tp12057
I1
s(Vinsert
p12058
I42
VSimpleName: HTableInterface
p12059
tp12060
I2
s(Vinsert
p12061
I42
VSimpleName: HResultSetMetaData
p12062
tp12063
I2
s(Vinsert
p12064
I43
VSimpleType: InsertIntoClause
p12065
tp12066
I1
s(Vinsert
p12067
I40
VQualifiedName: org.junit.Assert
p12068
tp12069
I2
s(Vinsert
p12070
I42
VSimpleName: NullsLast
p12071
tp12072
I1
s(Vinsert
p12073
I40
VQualifiedName: val.resultSetHoldTimeNano
p12074
tp12075
I1
s(Vinsert
p12076
I42
VSimpleName: partitionBy
p12077
tp12078
I3
s(Vinsert
p12079
I42
VSimpleName: setDelay
p12080
tp12081
I1
s(Vinsert
p12082
I43
VSimpleType: SQLConstraintImpl
p12083
tp12084
I1
s(Vinsert
p12085
I42
VSimpleName: wallConditionContext
p12086
tp12087
I3
s(Vinsert
p12088
I45
VStringLiteral: "select id from t"
p12089
tp12090
I1
s(Vinsert
p12091
I40
VQualifiedName: com.alibaba.druid.sql.ast.SQLOrderBy
p12092
tp12093
I1
s(Vinsert
p12094
I42
VSimpleName: MySqlWallTest3
p12095
tp12096
I1
s(Vinsert
p12097
I45
VStringLiteral: "GRANT CREATE ANY MATERIALIZED VIEW,"
p12098
tp12099
I1
s(Vinsert
p12100
I40
VQualifiedName: Types.DOUBLE
p12101
tp12102
I1
s(Vinsert
p12103
I42
VSimpleName: setWithinGroup
p12104
tp12105
I1
s(Vinsert
p12106
I42
VSimpleName: scale
p12107
tp12108
I2
s(Vinsert
p12109
I42
VSimpleName: xa_close
p12110
tp12111
I1
s(Vinsert
p12112
I45
VStringLiteral: "\u005ctINITIAL 1048576\u005cn"
p12113
tp12114
I2
s(Vinsert
p12115
I45
VStringLiteral: "PoolingCount"
p12116
tp12117
I1
s(Vinsert
p12118
I40
VQualifiedName: OracleMultiInsertStatement.ConditionalInsertClause
p12119
tp12120
I2
s(Vinsert
p12121
I43
VSimpleType: Timestamp
p12122
tp12123
I1
s(Vinsert
p12124
I45
VStringLiteral: "set identity_insert tb_coupon OFF"
p12125
tp12126
I1
s(Vinsert
p12127
I45
VStringLiteral: "CONVERT TO CHARACTER SET "
p12128
tp12129
I1
s(Vinsert
p12130
I34
VNumberLiteral: 50
p12131
tp12132
I2
s(Vinsert
p12133
I45
VStringLiteral: "DAY"
p12134
tp12135
I1
s(Vinsert
p12136
I42
VSimpleName: SQLObjectType
p12137
tp12138
I1
s(Vinsert
p12139
I42
VSimpleName: toMySqlString
p12140
tp12141
I119
s(Vinsert
p12142
I42
VSimpleName: parseForeignKey
p12143
tp12144
I1
s(Vinsert
p12145
I40
VQualifiedName: Token.PARTITION
p12146
tp12147
I2
s(Vinsert
p12148
I45
VStringLiteral: " `created` datetime NOT NULL DEFAULT '1000-01-01 00:00:00',"
p12149
tp12150
I1
s(Vinsert
p12151
I42
VSimpleName: tableReference
p12152
tp12153
I6
s(Vinsert
p12154
I42
VSimpleName: matchOwner
p12155
tp12156
I1
s(Vinsert
p12157
I42
VSimpleName: idStr
p12158
tp12159
I2
s(Vinsert
p12160
I43
VSimpleType: Object
p12161
tp12162
I186
s(Vinsert
p12163
I42
VSimpleName: getPivot
p12164
tp12165
I2
s(Vinsert
p12166
I42
VSimpleName: EvalMethodTest_substring_1
p12167
tp12168
I1
s(Vinsert
p12169
I45
VStringLiteral: "jdbc:cobar://localhost:8066/test"
p12170
tp12171
I1
s(Vinsert
p12172
I42
VSimpleName: connectErrorCount
p12173
tp12174
I2
s(Vinsert
p12175
I40
VQualifiedName: other.value
p12176
tp12177
I2
s(Vinsert
p12178
I42
VSimpleName: getClob
p12179
tp12180
I2
s(Vinsert
p12181
I42
VSimpleName: b
p12182
tp12183
I18
s(Vinsert
p12184
I45
VStringLiteral: "select upper(*) from aa order by now()"
p12185
tp12186
I1
s(Vinsert
p12187
I45
VStringLiteral: ",   host.creator_id as creatorId"
p12188
tp12189
I1
s(Vinsert
p12190
I45
VStringLiteral: "\u005ctKEY `k_c` (`c_int`),\u005cn"
p12191
tp12192
I2
s(Vinsert
p12193
I45
VStringLiteral: "AGGREGATE\u005cn"
p12194
tp12195
I1
s(Vinsert
p12196
I42
VSimpleName: addUpdateCount
p12197
tp12198
I4
s(Vinsert
p12199
I42
VSimpleName: HINT
p12200
tp12201
I2
s(Vinsert
p12202
I45
VStringLiteral: "<tr><td>LogicConnectCount</td><td>"
p12203
tp12204
I1
s(Vinsert
p12205
I40
VQualifiedName: Isnull.instance
p12206
tp12207
I1
s(Vinsert
p12208
I42
VSimpleName: webAppStat
p12209
tp12210
I3
s(Vinsert
p12211
I42
VSimpleName: getCharset
p12212
tp12213
I2
s(Vinsert
p12214
I42
VSimpleName: incrementDropIndexCount
p12215
tp12216
I1
s(Vinsert
p12217
I43
VSimpleType: PoolableWrapper
p12218
tp12219
I2
s(Vinsert
p12220
I45
VStringLiteral: " PCTFREE "
p12221
tp12222
I1
s(Vinsert
p12223
I45
VStringLiteral: "\u005ctSELECT region_id, lvl2region_id AS city_id\u005cn"
p12224
tp12225
I1
s(Vinsert
p12226
I40
VQualifiedName: Token.OUT
p12227
tp12228
I2
s(Vinsert
p12229
I45
VStringLiteral: "ALTER TABLE db_manage.zcy_gpcatalog_node_t ADD INDEX index_code USING BTREE (code);"
p12230
tp12231
I1
s(Vinsert
p12232
I45
VStringLiteral: "                select Distinct auser.cunit_code"
p12233
tp12234
I1
s(Vinsert
p12235
I43
VSimpleType: SQLColumnCheck
p12236
tp12237
I2
s(Vinsert
p12238
I42
VSimpleName: form
p12239
tp12240
I5
s(Vinsert
p12241
I45
VStringLiteral: "\u005ct\u005ctAND D.CONTRACT_DEVICE_ID = S.CONTRACT_DEVICE_ID\u005cn"
p12242
tp12243
I1
s(Vinsert
p12244
I42
VSimpleName: getItem
p12245
tp12246
I2
s(Vinsert
p12247
I42
VSimpleName: parseAssignItems
p12248
tp12249
I1
s(Vinsert
p12250
I42
VSimpleName: updateDataCount_100_1000
p12251
tp12252
I1
s(Vinsert
p12253
I42
VSimpleName: recycleCount
p12254
tp12255
I1
s(Vinsert
p12256
I43
VSimpleType: DruidLobCreator
p12257
tp12258
I2
s(Vinsert
p12259
I42
VSimpleName: test_touch
p12260
tp12261
I1
s(Vinsert
p12262
I45
VStringLiteral: "STARTING"
p12263
tp12264
I1
s(Vinsert
p12265
I34
VNumberLiteral: 100
p12266
tp12267
I8
s(Vinsert
p12268
I42
VSimpleName: mode
p12269
tp12270
I2
s(Vinsert
p12271
I42
VSimpleName: test_dbType_error
p12272
tp12273
I1
s(Vinsert
p12274
I43
VSimpleType: OdpsASTVisitor
p12275
tp12276
I22
s(Vinsert
p12277
I42
VSimpleName: primaryKey
p12278
tp12279
I6
s(Vinsert
p12280
I42
VSimpleName: createErrorCount
p12281
tp12282
I1
s(Vinsert
p12283
I42
VSimpleName: test_builtin_dataTypes
p12284
tp12285
I1
s(Vinsert
p12286
I42
VSimpleName: validproc
p12287
tp12288
I5
s(Vinsert
p12289
I42
VSimpleName: setDeleteWhereAlwayTrueCheck
p12290
tp12291
I1
s(Vinsert
p12292
I38
VPrefixExpression: --
p12293
tp12294
I1
s(Vinsert
p12295
I43
VSimpleType: SQLDeleteStatement
p12296
tp12297
I5
s(Vinsert
p12298
I42
VSimpleName: getExpr
p12299
tp12300
I49
s(Vinsert
p12301
I45
VStringLiteral: "ONLY "
p12302
tp12303
I2
s(Vinsert
p12304
I45
VStringLiteral: "FROM CUSTOMER\u005cn"
p12305
tp12306
I1
s(Vinsert
p12307
I45
VStringLiteral: "\u005cn\u005ct) XXX"
p12308
tp12309
I1
s(Vinsert
p12310
I42
VSimpleName: setIsolation
p12311
tp12312
I3
s(Vinsert
p12313
I43
VSimpleType: MySqlStatementParser
p12314
tp12315
I200
s(Vinsert
p12316
I42
VSimpleName: transactionIdSeed
p12317
tp12318
I2
s(Vinsert
p12319
I42
VSimpleName: MySqlBooleanExpr
p12320
tp12321
I3
s(Vinsert
p12322
I42
VSimpleName: SQLOrderBy
p12323
tp12324
I13
s(Vinsert
p12325
I42
VSimpleName: SQLJoinTableSource
p12326
tp12327
I6
s(Vinsert
p12328
I42
VSimpleName: clearResultSet
p12329
tp12330
I1
s(Vinsert
p12331
I43
VSimpleType: Calendar
p12332
tp12333
I2
s(Vinsert
p12334
I42
VSimpleName: setDebugUnreturnedConnectionStackTraces
p12335
tp12336
I1
s(Vinsert
p12337
I45
VStringLiteral: "owner"
p12338
tp12339
I1
s(Vinsert
p12340
I42
VSimpleName: getGroupBy
p12341
tp12342
I4
s(Vinsert
p12343
I43
VSimpleType: HEngine
p12344
tp12345
I2
s(Vinsert
p12346
I43
VSimpleType: CharsetParameter
p12347
tp12348
I2
s(Vinsert
p12349
I42
VSimpleName: cause
p12350
tp12351
I9
s(Vinsert
p12352
I45
VStringLiteral: "select * from ("
p12353
tp12354
I1
s(Vinsert
p12355
I42
VSimpleName: incrementClosedPreparedStatementCount
p12356
tp12357
I1
s(Vinsert
p12358
I42
VSimpleName: getUnderlyingTransactionIsolation
p12359
tp12360
I1
s(Vinsert
p12361
I42
VSimpleName: line1
p12362
tp12363
I1
s(Vinsert
p12364
I42
VSimpleName: item2
p12365
tp12366
I13
s(Vinsert
p12367
I42
VSimpleName: setParseCompleteValues
p12368
tp12369
I2
s(Vinsert
p12370
I42
VSimpleName: getCause
p12371
tp12372
I4
s(Vinsert
p12373
I34
VNumberLiteral: 0L
p12374
tp12375
I2
s(Vinsert
p12376
I42
VSimpleName: aliasLocal
p12377
tp12378
I7
s(Vinsert
p12379
I42
VSimpleName: SQLAssignItem
p12380
tp12381
I14
s(Vinsert
p12382
I45
VStringLiteral: "\u005cn\u005ctPARTITION p3 VALUES LESS THAN (21)"
p12383
tp12384
I1
s(Vinsert
p12385
I42
VSimpleName: getPrincipal
p12386
tp12387
I1
s(Vinsert
p12388
I45
VStringLiteral: "| c_time       | time         | NO   |     | NULL                |                             |\u005cn"
p12389
tp12390
I1
s(Vinsert
p12391
I42
VSimpleName: getOffset
p12392
tp12393
I3
s(Vinsert
p12394
I45
VStringLiteral: " STORAGE "
p12395
tp12396
I1
s(Vinsert
p12397
I42
VSimpleName: connectionFactory
p12398
tp12399
I3
s(Vinsert
p12400
I42
VSimpleName: columnClone
p12401
tp12402
I1
s(Vinsert
p12403
I45
VStringLiteral: "show not allow"
p12404
tp12405
I1
s(Vinsert
p12406
I42
VSimpleName: getConnectionStat
p12407
tp12408
I4
s(Vinsert
p12409
I74
VParameterizedType: List<VirtualMachineDescriptor>
p12410
tp12411
I1
s(Vinsert
p12412
I42
VSimpleName: GroupingSetExpr
p12413
tp12414
I5
s(Vinsert
p12415
I43
VSimpleType: SQLRollbackStatement
p12416
tp12417
I3
s(Vinsert
p12418
I45
VStringLiteral: "CREATE TRIGGER salary_check\u005cn"
p12419
tp12420
I1
s(Vinsert
p12421
I45
VStringLiteral: "org.osjava.sj.root"
p12422
tp12423
I1
s(Vinsert
p12424
I42
VSimpleName: statMap
p12425
tp12426
I3
s(Vinsert
p12427
I45
VStringLiteral: "\u005cn and -- comment_1"
p12428
tp12429
I1
s(Vinsert
p12430
I45
VStringLiteral: "/*hello \u005cnworld*/"
p12431
tp12432
I1
s(Vinsert
p12433
I23
VFieldDeclaration
p12434
tp12435
I28
s(Vinsert
p12436
I42
VSimpleName: setValidationQueryTimeout
p12437
tp12438
I1
s(Vinsert
p12439
I40
VQualifiedName: com.alibaba.druid.sql.dialect.mysql.ast.expr.MySqlCharExpr
p12440
tp12441
I1
s(Vinsert
p12442
I45
VStringLiteral: "NOLOGGING\u005cn"
p12443
tp12444
I3
s(Vinsert
p12445
I42
VSimpleName: k2
p12446
tp12447
I2
s(Vinsert
p12448
I42
VSimpleName: setComment
p12449
tp12450
I6
s(Vinsert
p12451
I42
VSimpleName: startTransactionCount
p12452
tp12453
I2
s(Vinsert
p12454
I42
VSimpleName: subList
p12455
tp12456
I1
s(Vinsert
p12457
I42
VSimpleName: dbType
p12458
tp12459
I122
s(Vinsert
p12460
I13
VCharacterLiteral: '@'
p12461
tp12462
I1
s(Vinsert
p12463
I42
VSimpleName: getNString
p12464
tp12465
I1
s(Vinsert
p12466
I40
VQualifiedName: com.alibaba.druid.sql.ast.SQLOrderingSpecification
p12467
tp12468
I1
s(Vinsert
p12469
I45
VStringLiteral: "log4j"
p12470
tp12471
I4
s(Vinsert
p12472
I45
VStringLiteral: "SELECT * FROM T"
p12473
tp12474
I1
s(Vinsert
p12475
I45
VStringLiteral: "WHERE ID = 1"
p12476
tp12477
I1
s(Vinsert
p12478
I43
VSimpleType: ValidConnectionCheckerAdapter
p12479
tp12480
I2
s(Vinsert
p12481
I62
VInstanceofExpression
p12482
tp12483
I156
s(Vinsert
p12484
I45
VStringLiteral: "\u005cn\u005ctUNIQUE (PROC_INST_ID_)"
p12485
tp12486
I2
s(Vinsert
p12487
I45
VStringLiteral: "CURSOR("
p12488
tp12489
I1
s(Vinsert
p12490
I45
VStringLiteral: "\u005ctDBMS_OUTPUT.PUT_LINE('The sum of products equals: ' || TO_CHAR(s));\u005cn"
p12491
tp12492
I1
s(Vinsert
p12493
I42
VSimpleName: EOF
p12494
tp12495
I1
s(Vinsert
p12496
I42
VSimpleName: getCount_20000_more_Millis
p12497
tp12498
I1
s(Vinsert
p12499
I45
VStringLiteral: "WHERE rbi.rma_id > ?\u005cn"
p12500
tp12501
I1
s(Vinsert
p12502
I42
VSimpleName: columnConsumer
p12503
tp12504
I1
s(Vinsert
p12505
I42
VSimpleName: SQLAlterTableCoalescePartition
p12506
tp12507
I2
s(Vinsert
p12508
I40
VQualifiedName: bytes.length
p12509
tp12510
I1
s(Vinsert
p12511
I42
VSimpleName: rightList
p12512
tp12513
I2
s(Vinsert
p12514
I43
VSimpleType: SchemaRepository
p12515
tp12516
I2
s(Vinsert
p12517
I42
VSimpleName: getRight
p12518
tp12519
I32
s(Vinsert
p12520
I42
VSimpleName: assertThat
p12521
tp12522
I5
s(Vinsert
p12523
I45
VStringLiteral: "e1Yq3QQJoEoNKIeJlbgLoLdSgogwgxDcf8vWfHSKbuowFOXFKoj9MqYGqWyRxeeCUVqNVIO1\u005cn"
p12524
tp12525
I1
s(Vinsert
p12526
I42
VSimpleName: EncodingConvertFilter
p12527
tp12528
I1
s(Vinsert
p12529
I42
VSimpleName: setLocal
p12530
tp12531
I3
s(Vinsert
p12532
I45
VStringLiteral: "SELECT 'x' FROM DUAL"
p12533
tp12534
I1
s(Vinsert
p12535
I42
VSimpleName: itemSize
p12536
tp12537
I1
s(Vinsert
p12538
I45
VStringLiteral: "ORDER BY public.v_poi.geom <-> st_point(?, ?)\u005cn"
p12539
tp12540
I1
s(Vinsert
p12541
I45
VStringLiteral: "c1"
p12542
tp12543
I2
s(Vinsert
p12544
I40
VQualifiedName: row.length
p12545
tp12546
I1
s(Vinsert
p12547
I42
VSimpleName: stmt
p12548
tp12549
I1482
s(Vinsert
p12550
I42
VSimpleName: OutputStreamWriter
p12551
tp12552
I1
s(Vinsert
p12553
I40
VQualifiedName: Connection.TRANSACTION_NONE
p12554
tp12555
I1
s(Vinsert
p12556
I42
VSimpleName: test_coalesce
p12557
tp12558
I1
s(Vinsert
p12559
I42
VSimpleName: permitNames
p12560
tp12561
I2
s(Vinsert
p12562
I42
VSimpleName: data
p12563
tp12564
I23
s(Vinsert
p12565
I42
VSimpleName: Base64
p12566
tp12567
I2
s(Vinsert
p12568
I42
VSimpleName: dataSourceLog
p12569
tp12570
I8
s(Vinsert
p12571
I42
VSimpleName: containsTable
p12572
tp12573
I1
s(Vinsert
p12574
I43
VSimpleType: SchemaStatVisitor
p12575
tp12576
I50
s(Vinsert
p12577
I42
VSimpleName: IbatisUtils
p12578
tp12579
I1
s(Vinsert
p12580
I42
VSimpleName: NotNullConstraint
p12581
tp12582
I1
s(Vinsert
p12583
I43
VSimpleType: DruidDataSourceProperties
p12584
tp12585
I1
s(Vinsert
p12586
I43
VSimpleType: ProfileStat
p12587
tp12588
I1
s(Vinsert
p12589
I45
VStringLiteral: "com.mysql.jdbc.RowDataDynamic"
p12590
tp12591
I1
s(Vinsert
p12592
I45
VStringLiteral: "1.6"
p12593
tp12594
I1
s(Vinsert
p12595
I42
VSimpleName: TableColumn
p12596
tp12597
I1
s(Vinsert
p12598
I42
VSimpleName: CompareOp
p12599
tp12600
I1
s(Vinsert
p12601
I42
VSimpleName: EvalMethodTest_insert_2
p12602
tp12603
I1
s(Vinsert
p12604
I45
VStringLiteral: " rows between "
p12605
tp12606
I1
s(Vinsert
p12607
I45
VStringLiteral: "\u005ct\u005ctAND (b.cp_code = p.cp_code\u005cn"
p12608
tp12609
I1
s(Vinsert
p12610
I45
VStringLiteral: "\u005ct\u005ct'SendMobileCheckcode', \u005cn"
p12611
tp12612
I1
s(Vinsert
p12613
I45
VStringLiteral: "RR"
p12614
tp12615
I1
s(Vinsert
p12616
I42
VSimpleName: PGArrayExpr
p12617
tp12618
I5
s(Vinsert
p12619
I43
VSimpleType: DB2ASTVisitor
p12620
tp12621
I2
s(Vinsert
p12622
I42
VSimpleName: input
p12623
tp12624
I9
s(Vinsert
p12625
I42
VSimpleName: prepareStatement
p12626
tp12627
I90
s(Vinsert
p12628
I40
VQualifiedName: Token.ASC
p12629
tp12630
I2
s(Vinsert
p12631
I43
VSimpleType: MySqlLexer
p12632
tp12633
I6
s(Vinsert
p12634
I42
VSimpleName: methodInfo
p12635
tp12636
I1
s(Vinsert
p12637
I45
VStringLiteral: "\u005ct\u005ct\u005ctEXIT inner_loop WHEN j > 5;\u005cn"
p12638
tp12639
I1
s(Vinsert
p12640
I40
VQualifiedName: statValue.transactionHistogram
p12641
tp12642
I1
s(Vinsert
p12643
I42
VSimpleName: setSeed
p12644
tp12645
I1
s(Vinsert
p12646
I45
VStringLiteral: "Error : "
p12647
tp12648
I1
s(Vinsert
p12649
I40
VQualifiedName: Token.INTO
p12650
tp12651
I2
s(Vinsert
p12652
I42
VSimpleName: test_mapping_pg
p12653
tp12654
I6
s(Vinsert
p12655
I45
VStringLiteral: "force all partitions "
p12656
tp12657
I1
s(Vinsert
p12658
I42
VSimpleName: startHintSp
p12659
tp12660
I8
s(Vinsert
p12661
I42
VSimpleName: connection
p12662
tp12663
I24
s(Vinsert
p12664
I42
VSimpleName: SQLAlterTableRenameColumn
p12665
tp12666
I3
s(Vinsert
p12667
I42
VSimpleName: getAsExpr
p12668
tp12669
I2
s(Vinsert
p12670
I42
VSimpleName: rightColumn
p12671
tp12672
I2
s(Vinsert
p12673
I42
VSimpleName: filterSize
p12674
tp12675
I4
s(Vinsert
p12676
I45
VStringLiteral: "\u005ctON b.objid = p.objid\u005cn"
p12677
tp12678
I1
s(Vinsert
p12679
I45
VStringLiteral: "\u005ct\u005ctlateral view explode(t1.ver) t3 as ver\u005cn"
p12680
tp12681
I1
s(Vinsert
p12682
I42
VSimpleName: methodNameHashCode64
p12683
tp12684
I1
s(Vinsert
p12685
I45
VStringLiteral: "\u005cnWHERE RN > 10"
p12686
tp12687
I1
s(Vinsert
p12688
I42
VSimpleName: wrap
p12689
tp12690
I7
s(Vinsert
p12691
I45
VStringLiteral: "\u005ctFROM DMN_MKTG_PLAN_TYPE_TWO\u005cn"
p12692
tp12693
I1
s(Vinsert
p12694
I40
VQualifiedName: SQLBinaryOperator.Multiply
p12695
tp12696
I2
s(Vinsert
p12697
I45
VStringLiteral: "\u005ctGROUP BY ID\u005cn"
p12698
tp12699
I1
s(Vinsert
p12700
I45
VStringLiteral: "\u005cn\u005ct\u005ctCONSTRAINT nn_qty NOT NULL"
p12701
tp12702
I2
s(Vinsert
p12703
I42
VSimpleName: informix
p12704
tp12705
I1
s(Vinsert
p12706
I42
VSimpleName: startLatch
p12707
tp12708
I14
s(Vinsert
p12709
I45
VStringLiteral: "USING StockPivotImpl;"
p12710
tp12711
I1
s(Vinsert
p12712
I42
VSimpleName: strValue
p12713
tp12714
I2
s(Vinsert
p12715
I42
VSimpleName: exprA
p12716
tp12717
I5
s(Vinsert
p12718
I42
VSimpleName: InitErrorDriver
p12719
tp12720
I1
s(Vinsert
p12721
I42
VSimpleName: pos
p12722
tp12723
I13
s(Vinsert
p12724
I42
VSimpleName: SQLMethodInvokeExpr
p12725
tp12726
I32
s(Vinsert
p12727
I45
VStringLiteral: "DROP TABLE "
p12728
tp12729
I1
s(Vinsert
p12730
I45
VStringLiteral: "config"
p12731
tp12732
I1
s(Vinsert
p12733
I42
VSimpleName: toLong
p12734
tp12735
I2
s(Vinsert
p12736
I42
VSimpleName: p
p12737
tp12738
I10
s(Vinsert
p12739
I42
VSimpleName: binaryOpWhere
p12740
tp12741
I2
s(Vinsert
p12742
I42
VSimpleName: setTestExpr
p12743
tp12744
I1
s(Vinsert
p12745
I45
VStringLiteral: "\u005cn\u005ct\u005ctOR d.indkey[3] = a.attnum"
p12746
tp12747
I1
s(Vinsert
p12748
I43
VSimpleType: ClobProxyImpl
p12749
tp12750
I1
s(Vinsert
p12751
I42
VSimpleName: getAutoCommit
p12752
tp12753
I2
s(Vinsert
p12754
I40
VQualifiedName: x.constraints
p12755
tp12756
I1
s(Vinsert
p12757
I34
VNumberLiteral: 32
p12758
tp12759
I2
s(Vinsert
p12760
I42
VSimpleName: closedPreparedStatementCount
p12761
tp12762
I1
s(Vinsert
p12763
I40
VQualifiedName: DruidDataSourceFactory.PROP_USERNAME
p12764
tp12765
I1
s(Vinsert
p12766
I45
VStringLiteral: "\u005ctDBMS_OUTPUT.PUT_LINE('bonus = ' || bonus);\u005cn"
p12767
tp12768
I1
s(Vinsert
p12769
I43
VSimpleType: ReentrantReadWriteLock
p12770
tp12771
I1
s(Vinsert
p12772
I45
VStringLiteral: "len('44') > 0"
p12773
tp12774
I1
s(Vinsert
p12775
I42
VSimpleName: QUES
p12776
tp12777
I2
s(Vinsert
p12778
I42
VSimpleName: LPAREN
p12779
tp12780
I1
s(Vinsert
p12781
I42
VSimpleName: stmtDropIdx
p12782
tp12783
I1
s(Vinsert
p12784
I45
VStringLiteral: "CREATE TABLE test_pg_wall (col_int INT NOT NULL, col_double_x DOUBLE PRECISION NOT NULL DEFAULT 0, col_varchar VARCHAR(200) NULL)"
p12785
tp12786
I1
s(Vinsert
p12787
I42
VSimpleName: acceptView
p12788
tp12789
I1
s(Vinsert
p12790
I42
VSimpleName: currentThread
p12791
tp12792
I22
s(Vinsert
p12793
I42
VSimpleName: addColumn
p12794
tp12795
I15
s(Vinsert
p12796
I42
VSimpleName: containsColumn
p12797
tp12798
I29
s(Vinsert
p12799
I42
VSimpleName: chain
p12800
tp12801
I34
s(Vinsert
p12802
I42
VSimpleName: signalAll
p12803
tp12804
I1
s(Vinsert
p12805
I45
VStringLiteral: "file_name"
p12806
tp12807
I1
s(Vinsert
p12808
I42
VSimpleName: SQLShowTablesStatement
p12809
tp12810
I1
s(Vinsert
p12811
I42
VSimpleName: activeConnections
p12812
tp12813
I1
s(Vinsert
p12814
I45
VStringLiteral: "INSTEAD OF"
p12815
tp12816
I2
s(Vinsert
p12817
I43
VSimpleType: OracleSelectTableSource
p12818
tp12819
I1
s(Vinsert
p12820
I45
VStringLiteral: "\u005ctAND cs.CreateDate >= to_date('2017-08-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS')\u005cn"
p12821
tp12822
I1
s(Vinsert
p12823
I45
VStringLiteral: "4YeykduDwWpKI7JeaWrDQ5SWiVgwg5n0dLhcWvou/6GX6rh0K6W/m8Ayy8xQjwlppZmB8L8z\u005cn"
p12824
tp12825
I1
s(Vinsert
p12826
I42
VSimpleName: maxRows
p12827
tp12828
I4
s(Vinsert
p12829
I45
VStringLiteral: "SELECT id, name, x, y, city_code FROM `geo_poi_raw_data` `geo_poi_raw_data` WHERE 1 = 1 AND `id` > ? ORDER BY `id`"
p12830
tp12831
I1
s(Vinsert
p12832
I45
VStringLiteral: "LOOP"
p12833
tp12834
I1
s(Vinsert
p12835
I40
VQualifiedName: JdbcConstants.H2
p12836
tp12837
I6
s(Vinsert
p12838
I42
VSimpleName: tearDown
p12839
tp12840
I41
s(Vinsert
p12841
I45
VStringLiteral: "CREATE VIEW revenue0\u005cn"
p12842
tp12843
I1
s(Vinsert
p12844
I45
VStringLiteral: "INTO 256 BUCKETS\u005cn"
p12845
tp12846
I1
s(Vinsert
p12847
I42
VSimpleName: ident
p12848
tp12849
I35
s(Vinsert
p12850
I42
VSimpleName: HMapping
p12851
tp12852
I1
s(Vinsert
p12853
I40
VQualifiedName: Token.CURSOR
p12854
tp12855
I1
s(Vinsert
p12856
I45
VStringLiteral: "RESULT_CACHE"
p12857
tp12858
I1
s(Vinsert
p12859
I45
VStringLiteral: "\u005ct\u005ct\u005ct\u005ctSELECT menu_id, parent_id\u005cn"
p12860
tp12861
I1
s(Vinsert
p12862
I45
VStringLiteral: "\u005cn\u005ctid int PRIMARY KEY, "
p12863
tp12864
I1
s(Vinsert
p12865
I40
VQualifiedName: com.alibaba.druid.DruidRuntimeException
p12866
tp12867
I1
s(Vinsert
p12868
I42
VSimpleName: keyColumn
p12869
tp12870
I6
s(Vinsert
p12871
I40
VQualifiedName: SQLUnionOperator.MINUS
p12872
tp12873
I1
s(Vinsert
p12874
I45
VStringLiteral: "WHERE last_name = 'Smith';"
p12875
tp12876
I1
s(Vinsert
p12877
I45
VStringLiteral: "\u005cn\u005ct\u005ctSELECT n + 1"
p12878
tp12879
I1
s(Vinsert
p12880
I42
VSimpleName: ProfileStat
p12881
tp12882
I1
s(Vinsert
p12883
I45
VStringLiteral: "\u005cn\u005ctcust_email VARCHAR2(40)"
p12884
tp12885
I2
s(Vinsert
p12886
I42
VSimpleName: getMinIdle
p12887
tp12888
I2
s(Vinsert
p12889
I40
VQualifiedName: rangeCounters.length
p12890
tp12891
I2
s(Vinsert
p12892
I42
VSimpleName: objType
p12893
tp12894
I1
s(Vinsert
p12895
I43
VSimpleType: MonitorClient
p12896
tp12897
I1
s(Vinsert
p12898
I43
VSimpleType: SQLWithSubqueryClause.Entry
p12899
tp12900
I4
s(Vinsert
p12901
I43
VSimpleType: MySqlDropUser
p12902
tp12903
I1
s(Vinsert
p12904
I42
VSimpleName: statementStat
p12905
tp12906
I1
s(Vinsert
p12907
I42
VSimpleName: tokenizer
p12908
tp12909
I1
s(Vinsert
p12910
I42
VSimpleName: setForcePartition
p12911
tp12912
I3
s(Vinsert
p12913
I42
VSimpleName: getDbType
p12914
tp12915
I21
s(Vinsert
p12916
I43
VSimpleType: SQLAlterTableRenameColumn
p12917
tp12918
I3
s(Vinsert
p12919
I42
VSimpleName: Driver
p12920
tp12921
I2
s(Vinsert
p12922
I45
VStringLiteral: "\u005ct\u005ctAND status IN ('master_appointed', 'trade_complete', 'trade_close')\u005cn"
p12923
tp12924
I1
s(Vinsert
p12925
I42
VSimpleName: test_builtin
p12926
tp12927
I1
s(Vinsert
p12928
I45
VStringLiteral: "\u005ctON employees\u005cn"
p12929
tp12930
I1
s(Vinsert
p12931
I42
VSimpleName: getConnectionCount_Alive_10_30_Minutes
p12932
tp12933
I1
s(Vinsert
p12934
I42
VSimpleName: localPartitionIndex
p12935
tp12936
I1
s(Vinsert
p12937
I42
VSimpleName: left
p12938
tp12939
I43
s(Vinsert
p12940
I45
VStringLiteral: "sub_part"
p12941
tp12942
I1
s(Vinsert
p12943
I42
VSimpleName: endLatch
p12944
tp12945
I1
s(Vinsert
p12946
I45
VStringLiteral: ") hd"
p12947
tp12948
I1
s(Vinsert
p12949
I42
VSimpleName: incrementStartTransactionCount
p12950
tp12951
I1
s(Vinsert
p12952
I42
VSimpleName: isRoot
p12953
tp12954
I2
s(Vinsert
p12955
I43
VSimpleType: Log4jImpl
p12956
tp12957
I2
s(Vinsert
p12958
I45
VStringLiteral: "XMLSCHEMA"
p12959
tp12960
I1
s(Vinsert
p12961
I43
VSimpleType: OracleReturningClause
p12962
tp12963
I2
s(Vinsert
p12964
I45
VStringLiteral: "SET COMMENT "
p12965
tp12966
I1
s(Vinsert
p12967
I74
VParameterizedType: ArrayList<SQLSelectOrderByItem>
p12968
tp12969
I2
s(Vinsert
p12970
I45
VStringLiteral: "end"
p12971
tp12972
I1
s(Vinsert
p12973
I42
VSimpleName: setResetStatEnable
p12974
tp12975
I1
s(Vinsert
p12976
I42
VSimpleName: incrementReusedCount
p12977
tp12978
I1
s(Vinsert
p12979
I42
VSimpleName: removed
p12980
tp12981
I1
s(Vinsert
p12982
I34
VNumberLiteral: 3L
p12983
tp12984
I1
s(Vinsert
p12985
I42
VSimpleName: setTimestamp
p12986
tp12987
I2
s(Vinsert
p12988
I43
VSimpleType: JMException
p12989
tp12990
I2
s(Vinsert
p12991
I43
VSimpleType: PGASTVisitorAdapter
p12992
tp12993
I1
s(Vinsert
p12994
I42
VSimpleName: assertEquals
p12995
tp12996
I1115
s(Vinsert
p12997
I45
VStringLiteral: "SELECT cq.uuid FROM ce_queue cq "
p12998
tp12999
I1
s(Vinsert
p13000
I45
VStringLiteral: "for xml "
p13001
tp13002
I1
s(Vinsert
p13003
I66
VTextElement: Note that this method is only effective for log classes obtained after calling this method. If you intend to use
p13004
tp13005
I1
s(Vinsert
p13006
I45
VStringLiteral: "\u005cn\u005ctBUSINESS_KEY_ NVARCHAR2(255),"
p13007
tp13008
I2
s(Vinsert
p13009
I42
VSimpleName: o2
p13010
tp13011
I2
s(Vinsert
p13012
I42
VSimpleName: getBlackList
p13013
tp13014
I1
s(Vinsert
p13015
I45
VStringLiteral: "--"
p13016
tp13017
I1
s(Vinsert
p13018
I42
VSimpleName: res
p13019
tp13020
I1
s(Vinsert
p13021
I42
VSimpleName: testOracle
p13022
tp13023
I3
s(Vinsert
p13024
I45
VStringLiteral: "select 1;select 1"
p13025
tp13026
I1
s(Vinsert
p13027
I45
VStringLiteral: "SYNONYM"
p13028
tp13029
I2
s(Vinsert
p13030
I42
VSimpleName: histogram_1_10
p13031
tp13032
I1
s(Vinsert
p13033
I45
VStringLiteral: "\u005cn\u005ctemployee_id NUMBER(4),"
p13034
tp13035
I4
s(Vinsert
p13036
I42
VSimpleName: recordFormat
p13037
tp13038
I1
s(Vinsert
p13039
I45
VStringLiteral: "INTEGER"
p13040
tp13041
I1
s(Vinsert
p13042
I40
VQualifiedName: com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlCreateTableStatement
p13043
tp13044
I1
s(Vinsert
p13045
I45
VStringLiteral: "FROM ktv_epm.ktv_eq_rprboarditem rbi\u005cn"
p13046
tp13047
I1
s(Vinsert
p13048
I42
VSimpleName: getForeignKey
p13049
tp13050
I1
s(Vinsert
p13051
I42
VSimpleName: OdpsSelectParser
p13052
tp13053
I3
s(Vinsert
p13054
I42
VSimpleName: WebAppStatManager
p13055
tp13056
I2
s(Vinsert
p13057
I45
VStringLiteral: "  KEY `k_c` (`c_tinyint`,`c_int`),\u005cn"
p13058
tp13059
I1
s(Vinsert
p13060
I45
VStringLiteral: "select 2,null,'4225',null,'beijing','','1','','1223@123.com','beijing','booking','test',null "
p13061
tp13062
I1
s(Vinsert
p13063
I42
VSimpleName: StringBuffer
p13064
tp13065
I70
s(Vinsert
p13066
I42
VSimpleName: MySqlWallTest21
p13067
tp13068
I1
s(Vinsert
p13069
I40
VQualifiedName: x.subPartition
p13070
tp13071
I1
s(Vinsert
p13072
I42
VSimpleName: setRawUrl
p13073
tp13074
I3
s(Vinsert
p13075
I42
VSimpleName: getOption
p13076
tp13077
I7
s(Vinsert
p13078
I42
VSimpleName: toTeradataString
p13079
tp13080
I1
s(Vinsert
p13081
I45
VStringLiteral: "CREATE TABLE ZEUS.USER_LOGIN (\u005cn"
p13082
tp13083
I1
s(Vinsert
p13084
I42
VSimpleName: test_true
p13085
tp13086
I46
s(Vinsert
p13087
I45
VStringLiteral: "YEAR"
p13088
tp13089
I1
s(Vinsert
p13090
I45
VStringLiteral: " and s.qualifier IN ('TRK', 'BRC')"
p13091
tp13092
I1
s(Vinsert
p13093
I42
VSimpleName: paren
p13094
tp13095
I5
s(Vinsert
p13096
I42
VSimpleName: setWhen
p13097
tp13098
I1
s(Vinsert
p13099
I45
VStringLiteral: "\u005ct`c_datetime` datetime DEFAULT '0000-00-00 00:00:00' COMMENT 'datetime',\u005cn"
p13100
tp13101
I2
s(Vinsert
p13102
I42
VSimpleName: OracleIsSetExpr
p13103
tp13104
I4
s(Vinsert
p13105
I34
VNumberLiteral: 9
p13106
tp13107
I2
s(Vinsert
p13108
I42
VSimpleName: maxPoolSize
p13109
tp13110
I8
s(Vinsert
p13111
I45
VStringLiteral: "druid.useGloalDataSourceStat"
p13112
tp13113
I3
s(Vinsert
p13114
I45
VStringLiteral: "\u005ct\u005ct(com_code, CODE, NAME, status, sjcode\u005cn"
p13115
tp13116
I1
s(Vinsert
p13117
I42
VSimpleName: returnVal
p13118
tp13119
I2
s(Vinsert
p13120
I43
VSimpleType: OracleStatementParser
p13121
tp13122
I55
s(Vinsert
p13123
I42
VSimpleName: getProperty
p13124
tp13125
I37
s(Vinsert
p13126
I45
VStringLiteral: "\u005ctID VARCHAR(200) NOT NULL,\u005cn"
p13127
tp13128
I1
s(Vinsert
p13129
I42
VSimpleName: connectProperties
p13130
tp13131
I6
s(Vinsert
p13132
I45
VStringLiteral: "\u005ctIS\u005cn"
p13133
tp13134
I3
s(Vinsert
p13135
I45
VStringLiteral: " with password = "
p13136
tp13137
I1
s(Vinsert
p13138
I45
VStringLiteral: "executeCount"
p13139
tp13140
I1
s(Vinsert
p13141
I42
VSimpleName: setPivot
p13142
tp13143
I2
s(Vinsert
p13144
I42
VSimpleName: isEndOfCommit
p13145
tp13146
I2
s(Vinsert
p13147
I43
VSimpleType: OracleSQLObject
p13148
tp13149
I1
s(Vinsert
p13150
I42
VSimpleName: fractionalSeconds
p13151
tp13152
I1
s(Vinsert
p13153
I43
VSimpleType: MySqlRepeatStatement
p13154
tp13155
I1
s(Vinsert
p13156
I42
VSimpleName: isSelelctAllow
p13157
tp13158
I1
s(Vinsert
p13159
I42
VSimpleName: getIndex
p13160
tp13161
I1
s(Vinsert
p13162
I45
VStringLiteral: "constraint "
p13163
tp13164
I1
s(Vinsert
p13165
I42
VSimpleName: getExceptionSorter
p13166
tp13167
I1
s(Vinsert
p13168
I42
VSimpleName: startFailureDetectScheduleTask
p13169
tp13170
I1
s(Vinsert
p13171
I42
VSimpleName: getColumnModel
p13172
tp13173
I1
s(Vinsert
p13174
I45
VStringLiteral: "    from T01_CHECKIN_CUSTOMER"
p13175
tp13176
I1
s(Vinsert
p13177
I42
VSimpleName: parseTableSource
p13178
tp13179
I6
s(Vinsert
p13180
I42
VSimpleName: InterruptedException
p13181
tp13182
I1
s(Vinsert
p13183
I45
VStringLiteral: "FROM db, bs\u005cn"
p13184
tp13185
I1
s(Vinsert
p13186
I42
VSimpleName: explain
p13187
tp13188
I1
s(Vinsert
p13189
I42
VSimpleName: log
p13190
tp13191
I21
s(Vinsert
p13192
I42
VSimpleName: SQLHint
p13193
tp13194
I6
s(Vinsert
p13195
I42
VSimpleName: setCurrentTable
p13196
tp13197
I2
s(Vinsert
p13198
I43
VSimpleType: ShardingRuntimeException
p13199
tp13200
I1
s(Vinsert
p13201
I43
VSimpleType: ElseIf
p13202
tp13203
I2
s(Vinsert
p13204
I42
VSimpleName: psql
p13205
tp13206
I13
s(Vinsert
p13207
I42
VSimpleName: createSQLXML
p13208
tp13209
I1
s(Vinsert
p13210
I42
VSimpleName: orderByItem
p13211
tp13212
I3
s(Vinsert
p13213
I42
VSimpleName: advice
p13214
tp13215
I2
s(Vinsert
p13216
I42
VSimpleName: getUpdateClause
p13217
tp13218
I1
s(Vinsert
p13219
I43
VSimpleType: MappingEngine
p13220
tp13221
I4
s(Vinsert
p13222
I45
VStringLiteral: "\u005cn\u005ctpromo_cost NUMBER(10, 2),"
p13223
tp13224
I4
s(Vinsert
p13225
I40
VQualifiedName: SerializerFeature.UseISO8601DateFormat
p13226
tp13227
I1
s(Vinsert
p13228
I42
VSimpleName: Exception
p13229
tp13230
I628
s(Vinsert
p13231
I45
VStringLiteral: "\u005cnset yyy=123;"
p13232
tp13233
I1
s(Vinsert
p13234
I45
VStringLiteral: "---------------------------"
p13235
tp13236
I2
s(Vinsert
p13237
I42
VSimpleName: MySqlIntervalUnit
p13238
tp13239
I1
s(Vinsert
p13240
I42
VSimpleName: setIfNotExists
p13241
tp13242
I1
s(Vinsert
p13243
I42
VSimpleName: SQLUnionQuery
p13244
tp13245
I14
s(Vinsert
p13246
I42
VSimpleName: renameStmt
p13247
tp13248
I1
s(Vinsert
p13249
I45
VStringLiteral: "select @@version_compile_os"
p13250
tp13251
I1
s(Vinsert
p13252
I42
VSimpleName: timer
p13253
tp13254
I1
s(Vinsert
p13255
I42
VSimpleName: openConnection
p13256
tp13257
I2
s(Vinsert
p13258
I34
VNumberLiteral: 13
p13259
tp13260
I7
s(Vinsert
p13261
I42
VSimpleName: parenthesized
p13262
tp13263
I2
s(Vinsert
p13264
I45
VStringLiteral: "\u005ct\u005ct\u005ct\u005ctFROM itsm_system_menu a\u005cn"
p13265
tp13266
I1
s(Vinsert
p13267
I42
VSimpleName: setAt
p13268
tp13269
I1
s(Vinsert
p13270
I42
VSimpleName: SQLBinaryOperator
p13271
tp13272
I4
s(Vinsert
p13273
I45
VStringLiteral: "\u005ctINF VARCHAR2(100)\u005cn"
p13274
tp13275
I1
s(Vinsert
p13276
I45
VStringLiteral: "test2\u005cn"
p13277
tp13278
I1
s(Vinsert
p13279
I42
VSimpleName: parseConstaint
p13280
tp13281
I2
s(Vinsert
p13282
I43
VSimpleType: GroupingSetExpr
p13283
tp13284
I5
s(Vinsert
p13285
I42
VSimpleName: addReadOnlyTable
p13286
tp13287
I1
s(Vinsert
p13288
I45
VStringLiteral: "alter table trans"
p13289
tp13290
I2
s(Vinsert
p13291
I42
VSimpleName: getAliasMap
p13292
tp13293
I6
s(Vinsert
p13294
I42
VSimpleName: requestCount
p13295
tp13296
I2
s(Vinsert
p13297
I42
VSimpleName: parseStatementListDialect
p13298
tp13299
I2
s(Vinsert
p13300
I45
VStringLiteral: "CREATE TABLE customers_demo ("
p13301
tp13302
I2
s(Vinsert
p13303
I42
VSimpleName: OdpsSelectQueryBlock
p13304
tp13305
I1
s(Vinsert
p13306
I42
VSimpleName: statementLogger
p13307
tp13308
I9
s(Vinsert
p13309
I42
VSimpleName: setUppCase
p13310
tp13311
I4
s(Vinsert
p13312
I42
VSimpleName: incrementAndGet
p13313
tp13314
I29
s(Vinsert
p13315
I42
VSimpleName: incrementIndent
p13316
tp13317
I11
s(Vinsert
p13318
I45
VStringLiteral: "ON"
p13319
tp13320
I1
s(Vinsert
p13321
I43
VSimpleType: WebURIStat
p13322
tp13323
I2
s(Vinsert
p13324
I42
VSimpleName: setSource
p13325
tp13326
I1
s(Vinsert
p13327
I42
VSimpleName: setCollate
p13328
tp13329
I2
s(Vinsert
p13330
I43
VSimpleType: SQLServerUseStatement
p13331
tp13332
I1
s(Vinsert
p13333
I45
VStringLiteral: "+--------------+--------------+------+-----+---------+-------+\u005cn"
p13334
tp13335
I1
s(Vinsert
p13336
I45
VStringLiteral: "EXCEPTION\u005cn"
p13337
tp13338
I2
s(Vinsert
p13339
I43
VSimpleType: Certificate
p13340
tp13341
I1
s(Vinsert
p13342
I45
VStringLiteral: "SKIP "
p13343
tp13344
I1
s(Vinsert
p13345
I45
VStringLiteral: "-- http://dev.mysql.com/doc/refman/5.6/en/create-server.html\u005cn"
p13346
tp13347
I1
s(Vinsert
p13348
I42
VSimpleName: segments
p13349
tp13350
I1
s(Vinsert
p13351
I34
VNumberLiteral: 0x100000001b3L
p13352
tp13353
I3
s(Vinsert
p13354
I42
VSimpleName: setErrorLogs
p13355
tp13356
I1
s(Vinsert
p13357
I74
VParameterizedType: List<OracleHint>
p13358
tp13359
I3
s(Vinsert
p13360
I42
VSimpleName: decrementExecutingCount
p13361
tp13362
I1
s(Vinsert
p13363
I42
VSimpleName: findParameter
p13364
tp13365
I1
s(Vinsert
p13366
I42
VSimpleName: getSessionStatData
p13367
tp13368
I4
s(Vinsert
p13369
I45
VStringLiteral: " IN_MEMORY_METADATA"
p13370
tp13371
I1
s(Vinsert
p13372
I45
VStringLiteral: "   and setl_ind = 'N'\u005cn"
p13373
tp13374
I1
s(Vinsert
p13375
I40
VQualifiedName: rangeValues.length
p13376
tp13377
I1
s(Vinsert
p13378
I42
VSimpleName: SQLDeclareItem
p13379
tp13380
I3
s(Vinsert
p13381
I42
VSimpleName: contextLoader
p13382
tp13383
I1
s(Vinsert
p13384
I45
VStringLiteral: "create table t1 (f0 bigint) partitioned by (ds string, hh string);"
p13385
tp13386
I1
s(Vinsert
p13387
I40
VQualifiedName: ConfigFilter.SYS_PROP_CONFIG_FILE
p13388
tp13389
I1
s(Vinsert
p13390
I42
VSimpleName: using
p13391
tp13392
I12
s(Vinsert
p13393
I42
VSimpleName: MySqlCursorCloseStatement
p13394
tp13395
I1
s(Vinsert
p13396
I42
VSimpleName: printStackTrace
p13397
tp13398
I9
s(Vinsert
p13399
I42
VSimpleName: getFrom
p13400
tp13401
I17
s(Vinsert
p13402
I42
VSimpleName: setOpaque
p13403
tp13404
I1
s(Vinsert
p13405
I40
VQualifiedName: Token.UNDO
p13406
tp13407
I2
s(Vinsert
p13408
I45
VStringLiteral: "file://"
p13409
tp13410
I2
s(Vinsert
p13411
I42
VSimpleName: JSONArray
p13412
tp13413
I3
s(Vinsert
p13414
I42
VSimpleName: XAConnection
p13415
tp13416
I1
s(Vinsert
p13417
I42
VSimpleName: MySqlShowCreateProcedureStatement
p13418
tp13419
I5
s(Vinsert
p13420
I42
VSimpleName: getStatData
p13421
tp13422
I2
s(Vinsert
p13423
I74
VParameterizedType: WeakReference<Thread>
p13424
tp13425
I1
s(Vinsert
p13426
I42
VSimpleName: bitXorRest
p13427
tp13428
I2
s(Vinsert
p13429
I40
VQualifiedName: x.chain
p13430
tp13431
I1
s(Vinsert
p13432
I45
VStringLiteral: "PRIOR "
p13433
tp13434
I1
s(Vinsert
p13435
I45
VStringLiteral: "\u005ct\u005ctFREELISTS 1\u005cn"
p13436
tp13437
I7
s(Vinsert
p13438
I40
VQualifiedName: SQLParserFeature.UseInsertColumnsCache
p13439
tp13440
I1
s(Vinsert
p13441
I42
VSimpleName: initWallTopStatementContext
p13442
tp13443
I8
s(Vinsert
p13444
I40
VQualifiedName: Ascii.instance
p13445
tp13446
I1
s(Vinsert
p13447
I40
VQualifiedName: Token.MERGE
p13448
tp13449
I1
s(Vinsert
p13450
I43
VSimpleType: Long
p13451
tp13452
I12
s(Vinsert
p13453
I42
VSimpleName: setNumber
p13454
tp13455
I4
s(Vinsert
p13456
I42
VSimpleName: expr
p13457
tp13458
I327
s(Vinsert
p13459
I42
VSimpleName: checkInsert
p13460
tp13461
I1
s(Vinsert
p13462
I42
VSimpleName: sqlList
p13463
tp13464
I11
s(Vinsert
p13465
I42
VSimpleName: setStatisticClause
p13466
tp13467
I1
s(Vinsert
p13468
I42
VSimpleName: isRemovePatiting
p13469
tp13470
I1
s(Vinsert
p13471
I42
VSimpleName: statData
p13472
tp13473
I3
s(Vinsert
p13474
I40
VQualifiedName: SQLBinaryOperator.IsNot
p13475
tp13476
I1
s(Vinsert
p13477
I42
VSimpleName: isUseGloalDataSourceStat
p13478
tp13479
I1
s(Vinsert
p13480
I42
VSimpleName: items
p13481
tp13482
I34
s(Vinsert
p13483
I45
VStringLiteral: "23 = 23"
p13484
tp13485
I1
s(Vinsert
p13486
I40
VQualifiedName: ErrorCode.INSERT_NOT_ALLOW
p13487
tp13488
I1
s(Vinsert
p13489
I45
VStringLiteral: ") T2\u005cn"
p13490
tp13491
I1
s(Vinsert
p13492
I42
VSimpleName: destroyScheduler
p13493
tp13494
I1
s(Vinsert
p13495
I42
VSimpleName: setBitwise
p13496
tp13497
I2
s(Vinsert
p13498
I45
VStringLiteral: "\u005cn\u005ctpromo_category VARCHAR2(15),"
p13499
tp13500
I4
s(Vinsert
p13501
I42
VSimpleName: Test
p13502
tp13503
I4
s(Vinsert
p13504
I42
VSimpleName: className
p13505
tp13506
I7
s(Vinsert
p13507
I42
VSimpleName: resetCountUpdater
p13508
tp13509
I1
s(Vinsert
p13510
I42
VSimpleName: clearStatementCache
p13511
tp13512
I2
s(Vinsert
p13513
I42
VSimpleName: pattDirs
p13514
tp13515
I1
s(Vinsert
p13516
I45
VStringLiteral: "\u005cn\u005ctcategory_id NUMBER(2),"
p13517
tp13518
I2
s(Vinsert
p13519
I42
VSimpleName: test_config
p13520
tp13521
I3
s(Vinsert
p13522
I43
VSimpleType: GenericServlet
p13523
tp13524
I2
s(Vinsert
p13525
I42
VSimpleName: EvalCaseThen
p13526
tp13527
I1
s(Vinsert
p13528
I45
VStringLiteral: "FROM TB_001, (\u005cn"
p13529
tp13530
I1
s(Vinsert
p13531
I45
VStringLiteral: "WHERE department_id = 20;"
p13532
tp13533
I1
s(Vinsert
p13534
I45
VStringLiteral: "\u005cn\u005ct) e"
p13535
tp13536
I1
s(Vinsert
p13537
I42
VSimpleName: SQLBinaryExpr
p13538
tp13539
I6
s(Vinsert
p13540
I34
VNumberLiteral: 6.0f
p13541
tp13542
I1
s(Vinsert
p13543
I42
VSimpleName: resultSetHoldTimeNanoUpdater
p13544
tp13545
I1
s(Vinsert
p13546
I40
VQualifiedName: SQLBinaryOperator.BooleanAnd
p13547
tp13548
I2
s(Vinsert
p13549
I40
VQualifiedName: dataSource.driver
p13550
tp13551
I1
s(Vinsert
p13552
I45
VStringLiteral: "SELECT F1, F2 FROM ABC --test"
p13553
tp13554
I1
s(Vinsert
p13555
I42
VSimpleName: getParentName
p13556
tp13557
I1
s(Vinsert
p13558
I45
VStringLiteral: "OVER ("
p13559
tp13560
I1
s(Vinsert
p13561
I42
VSimpleName: traceEnable
p13562
tp13563
I2
s(Vinsert
p13564
I43
VSimpleType: SQLObjectType
p13565
tp13566
I1
s(Vinsert
p13567
I45
VStringLiteral: "\u005ctTABLESPACE \u005c"USERS\u005c"\u005cn"
p13568
tp13569
I1
s(Vinsert
p13570
I45
VStringLiteral: " TO "
p13571
tp13572
I1
s(Vinsert
p13573
I43
VSimpleType: SQLDefaultExpr
p13574
tp13575
I2
s(Vinsert
p13576
I45
VStringLiteral: "SELECT c from sbtest where id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0"
p13577
tp13578
I1
s(Vinsert
p13579
I42
VSimpleName: isRef
p13580
tp13581
I1
s(Vinsert
p13582
I45
VStringLiteral: "select id as 39dd"
p13583
tp13584
I1
s(Vinsert
p13585
I42
VSimpleName: stmt3
p13586
tp13587
I1
s(Vinsert
p13588
I43
VSimpleType: ValuesClause
p13589
tp13590
I5
s(Vinsert
p13591
I42
VSimpleName: getSession
p13592
tp13593
I2
s(Vinsert
p13594
I42
VSimpleName: commentDeniedStat
p13595
tp13596
I1
s(Vinsert
p13597
I42
VSimpleName: PrintStream
p13598
tp13599
I2
s(Vinsert
p13600
I45
VStringLiteral: "\u005ct\u005ct\u005ctCLOSE VALUECURSOR;\u005cn"
p13601
tp13602
I1
s(Vinsert
p13603
I45
VStringLiteral: "TABLESPACE \u005c"ZEUS_IND\u005c"\u005cn"
p13604
tp13605
I1
s(Vinsert
p13606
I42
VSimpleName: timeZone
p13607
tp13608
I4
s(Vinsert
p13609
I42
VSimpleName: setAutoCommit
p13610
tp13611
I3
s(Vinsert
p13612
I40
VQualifiedName: Token.EQ
p13613
tp13614
I16
s(Vinsert
p13615
I42
VSimpleName: acceptChild
p13616
tp13617
I135
s(Vinsert
p13618
I42
VSimpleName: Primary
p13619
tp13620
I1
s(Vinsert
p13621
I45
VStringLiteral: "\u005ct\u005ctand UT.item_id = CLK.item_id\u005cn"
p13622
tp13623
I1
s(Vinsert
p13624
I45
VStringLiteral: "\u005cnFROM t2"
p13625
tp13626
I1
s(Vinsert
p13627
I42
VSimpleName: Mode
p13628
tp13629
I1
s(Vinsert
p13630
I42
VSimpleName: groupList
p13631
tp13632
I3
s(Vinsert
p13633
I42
VSimpleName: getAttribute
p13634
tp13635
I15
s(Vinsert
p13636
I45
VStringLiteral: "SELECT fund_base_cv_creative_ocr_judge_control_words_1422189630695(a.tfs, b.ocr_text, a.cates)"
p13637
tp13638
I2
s(Vinsert
p13639
I42
VSimpleName: setShardingSupport
p13640
tp13641
I1
s(Vinsert
p13642
I42
VSimpleName: test_basic
p13643
tp13644
I1
s(Vinsert
p13645
I42
VSimpleName: parseStorage
p13646
tp13647
I1
s(Vinsert
p13648
I45
VStringLiteral: "\u005ct\u005ctdenominator := denominator / gcd;\u005cn"
p13649
tp13650
I1
s(Vinsert
p13651
I42
VSimpleName: OracleSelectForUpdate
p13652
tp13653
I1
s(Vinsert
p13654
I45
VStringLiteral: "\u005ct\u005ctWHERE type IN (?)\u005cn"
p13655
tp13656
I1
s(Vinsert
p13657
I45
VStringLiteral: "AS OF "
p13658
tp13659
I1
s(Vinsert
p13660
I42
VSimpleName: x_b
p13661
tp13662
I1
s(Vinsert
p13663
I43
VSimpleType: SQLAlterTableAlterColumn
p13664
tp13665
I4
s(Vinsert
p13666
I42
VSimpleName: addBodyBeforeComment
p13667
tp13668
I1
s(Vinsert
p13669
I40
VQualifiedName: other.name
p13670
tp13671
I4
s(Vinsert
p13672
I45
VStringLiteral: "ENABLE CONSTRAINT "
p13673
tp13674
I1
s(Vinsert
p13675
I43
VSimpleType: EncodingConvertFilter
p13676
tp13677
I1
s(Vinsert
p13678
I42
VSimpleName: httpRequest
p13679
tp13680
I2
s(Vinsert
p13681
I42
VSimpleName: getEventType
p13682
tp13683
I1
s(Vinsert
p13684
I45
VStringLiteral: "\u005ct, admincode, x, y, zipcode, name\u005cn"
p13685
tp13686
I1
s(Vinsert
p13687
I42
VSimpleName: SQLServerParameter
p13688
tp13689
I3
s(Vinsert
p13690
I42
VSimpleName: toFactionalSecondsPrecision
p13691
tp13692
I1
s(Vinsert
p13693
I45
VStringLiteral: "\u005cn\u005ctPARTITION p2 VALUES LESS THAN MAXVALUE"
p13694
tp13695
I5
s(Vinsert
p13696
I42
VSimpleName: Frameworks
p13697
tp13698
I1
s(Vinsert
p13699
I42
VSimpleName: function
p13700
tp13701
I7
s(Vinsert
p13702
I42
VSimpleName: getTableCellRendererComponent
p13703
tp13704
I1
s(Vinsert
p13705
I42
VSimpleName: holdabilityUnsupported
p13706
tp13707
I3
s(Vinsert
p13708
I45
VStringLiteral: "TABLE OF "
p13709
tp13710
I1
s(Vinsert
p13711
I40
VQualifiedName: SQLBinaryOperator.Equality
p13712
tp13713
I2
s(Vinsert
p13714
I42
VSimpleName: target
p13715
tp13716
I21
s(Vinsert
p13717
I45
VStringLiteral: "\u005ctON employee\u005cn"
p13718
tp13719
I1
s(Vinsert
p13720
I42
VSimpleName: updater
p13721
tp13722
I2
s(Vinsert
p13723
I45
VStringLiteral: "\u005ct\u005ct\u005ctWHERE ITEM = I;\u005cn"
p13724
tp13725
I1
s(Vinsert
p13726
I43
VSimpleType: WallDenyStat
p13727
tp13728
I1
s(Vinsert
p13729
I43
VSimpleType: MonitorDaoJdbcImpl
p13730
tp13731
I2
s(Vinsert
p13732
I42
VSimpleName: SQLPrintableVisitor
p13733
tp13734
I1
s(Vinsert
p13735
I42
VSimpleName: assertNotNull
p13736
tp13737
I100
s(Vinsert
p13738
I45
VStringLiteral: "SELECT ts#, file#, block#, cols\u005cn"
p13739
tp13740
I1
s(Vinsert
p13741
I45
VStringLiteral: "StatementExecuteUpdateError"
p13742
tp13743
I1
s(Vinsert
p13744
I42
VSimpleName: Long
p13745
tp13746
I18
s(Vinsert
p13747
I42
VSimpleName: visitor
p13748
tp13749
I2177
s(Vinsert
p13750
I42
VSimpleName: setLogAbandoned
p13751
tp13752
I2
s(Vinsert
p13753
I45
VStringLiteral: "skip "
p13754
tp13755
I1
s(Vinsert
p13756
I42
VSimpleName: EvalSelectTest
p13757
tp13758
I1
s(Vinsert
p13759
I45
VStringLiteral: "5"
p13760
tp13761
I2
s(Vinsert
p13762
I74
VParameterizedType: List<SQLParameter>
p13763
tp13764
I1
s(Vinsert
p13765
I45
VStringLiteral: "\u005ct\u005ctEXIT WHEN x = 5;\u005cn"
p13766
tp13767
I1
s(Vinsert
p13768
I45
VStringLiteral: "FORCE"
p13769
tp13770
I2
s(Vinsert
p13771
I42
VSimpleName: MySqlBinaryExpr
p13772
tp13773
I3
s(Vinsert
p13774
I42
VSimpleName: HEngine
p13775
tp13776
I2
s(Vinsert
p13777
I45
VStringLiteral: "t1"
p13778
tp13779
I2
s(Vinsert
p13780
I42
VSimpleName: setMaxWidth
p13781
tp13782
I1
s(Vinsert
p13783
I74
VParameterizedType: List<String>
p13784
tp13785
I7
s(Vinsert
p13786
I45
VStringLiteral: "\u005ct\u005ctDBMS_OUTPUT.PUT_LINE('Inside loop, after CONTINUE:  x = ' || TO_CHAR(x));\u005cn"
p13787
tp13788
I1
s(Vinsert
p13789
I43
VSimpleType: Token
p13790
tp13791
I14
s(Vinsert
p13792
I42
VSimpleName: providerB
p13793
tp13794
I2
s(Vinsert
p13795
I42
VSimpleName: queryExpr
p13796
tp13797
I2
s(Vinsert
p13798
I42
VSimpleName: SQLDetailDialog
p13799
tp13800
I2
s(Vinsert
p13801
I42
VSimpleName: getObjectInstance
p13802
tp13803
I2
s(Vinsert
p13804
I42
VSimpleName: transactionId
p13805
tp13806
I2
s(Vinsert
p13807
I42
VSimpleName: getStatementPool
p13808
tp13809
I6
s(Vinsert
p13810
I42
VSimpleName: xx
p13811
tp13812
I1
s(Vinsert
p13813
I45
VStringLiteral: "select 1 from mysql.user"
p13814
tp13815
I1
s(Vinsert
p13816
I42
VSimpleName: setIdleConnectionTestPeriod
p13817
tp13818
I1
s(Vinsert
p13819
I42
VSimpleName: notification
p13820
tp13821
I1
s(Vinsert
p13822
I42
VSimpleName: hierachical
p13823
tp13824
I1
s(Vinsert
p13825
I42
VSimpleName: exportParameterVisitor
p13826
tp13827
I1
s(Vinsert
p13828
I42
VSimpleName: isMustParameterized
p13829
tp13830
I1
s(Vinsert
p13831
I42
VSimpleName: incrementDeleteCount
p13832
tp13833
I1
s(Vinsert
p13834
I42
VSimpleName: ValuesClause
p13835
tp13836
I7
s(Vinsert
p13837
I42
VSimpleName: classLoader
p13838
tp13839
I3
s(Vinsert
p13840
I45
VStringLiteral: "HT_TASK_TRADE_HISTORY_NEW"
p13841
tp13842
I1
s(Vinsert
p13843
I40
VQualifiedName: Token.SET
p13844
tp13845
I1
s(Vinsert
p13846
I42
VSimpleName: nameRest
p13847
tp13848
I1
s(Vinsert
p13849
I40
VQualifiedName: Token.IDENTIFIED
p13850
tp13851
I1
s(Vinsert
p13852
I45
VStringLiteral: " `vars` mediumtext NOT NULL,"
p13853
tp13854
I1
s(Vinsert
p13855
I43
VSimpleType: StringBuilder
p13856
tp13857
I62
s(Vinsert
p13858
I40
VQualifiedName: x.parameters
p13859
tp13860
I1
s(Vinsert
p13861
I42
VSimpleName: setJdbcUrl
p13862
tp13863
I5
s(Vinsert
p13864
I45
VStringLiteral: "10.20.153.63"
p13865
tp13866
I1
s(Vinsert
p13867
I45
VStringLiteral: "WHERE invoice_date < CURRENT_DATE\u005cn"
p13868
tp13869
I1
s(Vinsert
p13870
I43
VSimpleType: WallFunctionStatValue
p13871
tp13872
I2
s(Vinsert
p13873
I45
VStringLiteral: "\u005ctEND IF;\u005cn"
p13874
tp13875
I4
s(Vinsert
p13876
I42
VSimpleName: dupCloseLogEnable
p13877
tp13878
I2
s(Vinsert
p13879
I43
VSimpleType: Mode
p13880
tp13881
I2
s(Vinsert
p13882
I42
VSimpleName: put
p13883
tp13884
I316
s(Vinsert
p13885
I42
VSimpleName: PGASTVisitor
p13886
tp13887
I23
s(Vinsert
p13888
I42
VSimpleName: EVAL_VALUE_NULL
p13889
tp13890
I1
s(Vinsert
p13891
I42
VSimpleName: executeTimeNanosUpdater
p13892
tp13893
I1
s(Vinsert
p13894
I42
VSimpleName: Histogram
p13895
tp13896
I1
s(Vinsert
p13897
I45
VStringLiteral: "Test2"
p13898
tp13899
I1
s(Vinsert
p13900
I42
VSimpleName: getFactionalSecondsPrecision
p13901
tp13902
I2
s(Vinsert
p13903
I42
VSimpleName: transactionRegistry
p13904
tp13905
I1
s(Vinsert
p13906
I45
VStringLiteral: "Int"
p13907
tp13908
I1
s(Vinsert
p13909
I42
VSimpleName: blobOpenCount
p13910
tp13911
I4
s(Vinsert
p13912
I42
VSimpleName: wallContext
p13913
tp13914
I2
s(Vinsert
p13915
I45
VStringLiteral: "b"
p13916
tp13917
I1
s(Vinsert
p13918
I42
VSimpleName: getSetClause
p13919
tp13920
I1
s(Vinsert
p13921
I42
VSimpleName: test_3
p13922
tp13923
I1
s(Vinsert
p13924
I53
VThrowStatement
p13925
tp13926
I91
s(Vinsert
p13927
I42
VSimpleName: oracleConnection
p13928
tp13929
I1
s(Vinsert
p13930
I45
VStringLiteral: ",   host.modifier_id as modifierId"
p13931
tp13932
I1
s(Vinsert
p13933
I42
VSimpleName: isResetEnable
p13934
tp13935
I1
s(Vinsert
p13936
I43
VSimpleType: SQLCommentHint
p13937
tp13938
I11
s(Vinsert
p13939
I42
VSimpleName: ResultSetMetaDataProxyImpl
p13940
tp13941
I1
s(Vinsert
p13942
I42
VSimpleName: objIndex
p13943
tp13944
I1
s(Vinsert
p13945
I40
VQualifiedName: com.mysql.jdbc.ConnectionImpl
p13946
tp13947
I1
s(Vinsert
p13948
I43
VSimpleType: Blob
p13949
tp13950
I2
s(Vinsert
p13951
I42
VSimpleName: handle
p13952
tp13953
I4
s(Vinsert
p13954
I42
VSimpleName: createSqlStat
p13955
tp13956
I2
s(Vinsert
p13957
I45
VStringLiteral: ",   user.nick_name as nickName   "
p13958
tp13959
I1
s(Vinsert
p13960
I42
VSimpleName: scanDigit
p13961
tp13962
I1
s(Vinsert
p13963
I42
VSimpleName: Blob
p13964
tp13965
I2
s(Vinsert
p13966
I42
VSimpleName: getDataSourceConnectCount
p13967
tp13968
I1
s(Vinsert
p13969
I42
VSimpleName: deleteWhere
p13970
tp13971
I2
s(Vinsert
p13972
I42
VSimpleName: setMaximumConnectionCount
p13973
tp13974
I1
s(Vinsert
p13975
I45
VStringLiteral: "SELECT a.* FROM vote_info a where FID = ? AND 1=1"
p13976
tp13977
I1
s(Vinsert
p13978
I42
VSimpleName: getBrowserSafariCount
p13979
tp13980
I1
s(Vinsert
p13981
I43
VSimpleType: SocketTimeoutException
p13982
tp13983
I3
s(Vinsert
p13984
I45
VStringLiteral: "druid.username"
p13985
tp13986
I1
s(Vinsert
p13987
I45
VStringLiteral: " FOR QUERY "
p13988
tp13989
I1
s(Vinsert
p13990
I42
VSimpleName: defaultQueryTimeout
p13991
tp13992
I2
s(Vinsert
p13993
I45
VStringLiteral: "low_priority "
p13994
tp13995
I1
s(Vinsert
p13996
I42
VSimpleName: beanInfo
p13997
tp13998
I2
s(Vinsert
p13999
I43
VSimpleType: DruidDataSourceStatValue
p14000
tp14001
I1
s(Vinsert
p14002
I42
VSimpleName: checkParameterize
p14003
tp14004
I18
s(Vinsert
p14005
I42
VSimpleName: rightOwnerName
p14006
tp14007
I1
s(Vinsert
p14008
I42
VSimpleName: setMinConnectionsPerPartition
p14009
tp14010
I1
s(Vinsert
p14011
I42
VSimpleName: getAliasList
p14012
tp14013
I1
s(Vinsert
p14014
I45
VStringLiteral: "SET gd_number = gd_number - gdnumber\u005cn"
p14015
tp14016
I1
s(Vinsert
p14017
I42
VSimpleName: isPooled
p14018
tp14019
I2
s(Vinsert
p14020
I42
VSimpleName: acceptCreate
p14021
tp14022
I2
s(Vinsert
p14023
I45
VStringLiteral: "  SELECT INSTANCEID,WFID,WFSIGN,NODEID,NODESTARTTIME,ORIGINALUSER,REPLACER,SYSID,PK_VALUE,APPL_TYPE,WFI_END_ORG,WFI_STATUS FROM (SELECT ROWID ROWIDTMP, AA.* FROM (SELECT A.INSTANCEID INSTANCEID,A.WFID WFID,A.WFSIGN WFSIGN,A.NODEID NODEID,A.NODESTARTTIME NODESTARTTIME,A.ORIGINALUSER ORIGINALUSER,A.REPLACER REPLACER,A.SYSID SYSID,B.PK_VALUE PK_VALUE,B.APPL_TYPE APPL_TYPE,B.WFI_END_ORG WFI_END_ORG,B.WFI_STATUS WFI_STATUS FROM WF_AGENT_LOG A, WFI_JOIN_HIS B WHERE A.INSTANCEID=B.INSTANCEID) AA) WHERE ROWIDTMP IN (SELECT ROWIDMAX FROM ( SELECT MAX(ROWID) ROWIDMAX,INSTANCEID FROM(SELECT A.INSTANCEID INSTANCEID FROM WF_AGENT_LOG A, WFI_JOIN_HIS B WHERE A.INSTANCEID=B.INSTANCEID) AA GROUP BY  INSTANCEID ))\u005cn"
p14024
tp14025
I1
s(Vinsert
p14026
I45
VStringLiteral: "\u005cnFROM tnhash PARTITION (p0)"
p14027
tp14028
I1
s(Vinsert
p14029
I42
VSimpleName: binaryExpr
p14030
tp14031
I4
s(Vinsert
p14032
I42
VSimpleName: sqlTemplate
p14033
tp14034
I1
s(Vinsert
p14035
I42
VSimpleName: MySqlWallTest28
p14036
tp14037
I1
s(Vinsert
p14038
I42
VSimpleName: notZeroLen
p14039
tp14040
I1
s(Vinsert
p14041
I42
VSimpleName: isBSD
p14042
tp14043
I1
s(Vinsert
p14044
I43
VSimpleType: MySqlSubPartitionByKey
p14045
tp14046
I1
s(Vinsert
p14047
I42
VSimpleName: DB2SchemaStatVisitor
p14048
tp14049
I50
s(Vinsert
p14050
I42
VSimpleName: Schema
p14051
tp14052
I1
s(Vinsert
p14053
I42
VSimpleName: executeType
p14054
tp14055
I2
s(Vinsert
p14056
I45
VStringLiteral: "\u005cn FROM fund_base_cv_ad_auction_ocr_pv_tfs a"
p14057
tp14058
I3
s(Vinsert
p14059
I42
VSimpleName: setLoggerName
p14060
tp14061
I1
s(Vinsert
p14062
I45
VStringLiteral: "\u005cn\u005ctPARTITION p1 VALUES LESS THAN (11),"
p14063
tp14064
I2
s(Vinsert
p14065
I42
VSimpleName: assignment
p14066
tp14067
I1
s(Vinsert
p14068
I42
VSimpleName: getSegementName
p14069
tp14070
I1
s(Vinsert
p14071
I43
VSimpleType: Lexer
p14072
tp14073
I2
s(Vinsert
p14074
I45
VStringLiteral: " SQLSTATE "
p14075
tp14076
I1
s(Vinsert
p14077
I40
VQualifiedName: threads.length
p14078
tp14079
I1
s(Vinsert
p14080
I42
VSimpleName: EvalMethodTest_len
p14081
tp14082
I1
s(Vinsert
p14083
I42
VSimpleName: unique
p14084
tp14085
I9
s(Vinsert
p14086
I43
VSimpleType: SQLCallStatement
p14087
tp14088
I2
s(Vinsert
p14089
I45
VStringLiteral: "\u005cn('a3', 'b3')"
p14090
tp14091
I2
s(Vinsert
p14092
I42
VSimpleName: initByClassLoader
p14093
tp14094
I1
s(Vinsert
p14095
I45
VStringLiteral: "hbase.master"
p14096
tp14097
I1
s(Vinsert
p14098
I27
VInfixExpression: +
p14099
tp14100
I596
s(Vinsert
p14101
I45
VStringLiteral: "http://www.baidu.com/"
p14102
tp14103
I1
s(Vinsert
p14104
I42
VSimpleName: test_setPasswordCallbackClassName
p14105
tp14106
I1
s(Vinsert
p14107
I42
VSimpleName: busySkipCount
p14108
tp14109
I1
s(Vinsert
p14110
I42
VSimpleName: PGCidrExpr
p14111
tp14112
I6
s(Vinsert
p14113
I42
VSimpleName: tan
p14114
tp14115
I1
s(Vinsert
p14116
I42
VSimpleName: handleEndTransaction
p14117
tp14118
I1
s(Vinsert
p14119
I42
VSimpleName: makeHistogram
p14120
tp14121
I1
s(Vinsert
p14122
I43
VSimpleType: Throwable
p14123
tp14124
I16
s(Vinsert
p14125
I42
VSimpleName: errorHolder
p14126
tp14127
I1
s(Vinsert
p14128
I42
VSimpleName: setFileBlockSize
p14129
tp14130
I1
s(Vinsert
p14131
I45
VStringLiteral: "\u005ct\u005ct\u005ctINITIAL 83886080\u005cn"
p14132
tp14133
I1
s(Vinsert
p14134
I42
VSimpleName: valuesList
p14135
tp14136
I12
s(Vinsert
p14137
I45
VStringLiteral: "\u005cnWHERE ROWNUM < 10"
p14138
tp14139
I1
s(Vinsert
p14140
I42
VSimpleName: isOracleDriver10
p14141
tp14142
I1
s(Vinsert
p14143
I42
VSimpleName: Byte
p14144
tp14145
I2
s(Vinsert
p14146
I45
VStringLiteral: "select * from t where len(fname) = 2"
p14147
tp14148
I1
s(Vinsert
p14149
I42
VSimpleName: v1
p14150
tp14151
I3
s(Vinsert
p14152
I40
VQualifiedName: Token.PRIOR
p14153
tp14154
I1
s(Vinsert
p14155
I45
VStringLiteral: "\u005ctINITIAL 50331648\u005cn"
p14156
tp14157
I1
s(Vinsert
p14158
I45
VStringLiteral: "\u005cn\u005ctPARTITION east VALUES ('INDIA'), "
p14159
tp14160
I2
s(Vinsert
p14161
I45
VStringLiteral: "\u005ct\u005ctWHERE ITEM.INVENTORY_ITEM_ID = P.INVENTORY_ITEM_ID\u005cn"
p14162
tp14163
I1
s(Vinsert
p14164
I43
VSimpleType: DruidDataSourceStatLogger
p14165
tp14166
I2
s(Vinsert
p14167
I83
VModifier: protected
p14168
tp14169
I204
s(Vinsert
p14170
I42
VSimpleName: methodOrBinary
p14171
tp14172
I2
s(Vinsert
p14173
I42
VSimpleName: setExportTables
p14174
tp14175
I1
s(Vinsert
p14176
I42
VSimpleName: getFieldNames
p14177
tp14178
I1
s(Vinsert
p14179
I74
VParameterizedType: List<DruidDataSource>
p14180
tp14181
I1
s(Vinsert
p14182
I42
VSimpleName: EvalMethodAtanTest
p14183
tp14184
I1
s(Vinsert
p14185
I42
VSimpleName: OracleUpdateSetListClause
p14186
tp14187
I1
s(Vinsert
p14188
I40
VQualifiedName: x.statements
p14189
tp14190
I1
s(Vinsert
p14191
I42
VSimpleName: test_true_5
p14192
tp14193
I1
s(Vinsert
p14194
I43
VSimpleType: SQLPrimaryKey
p14195
tp14196
I1
s(Vinsert
p14197
I45
VStringLiteral: " wrapped "
p14198
tp14199
I1
s(Vinsert
p14200
I42
VSimpleName: FetchClause
p14201
tp14202
I1
s(Vinsert
p14203
I45
VStringLiteral: "polygon "
p14204
tp14205
I1
s(Vinsert
p14206
I45
VStringLiteral: "JdbcCommitCount"
p14207
tp14208
I1
s(Vinsert
p14209
I45
VStringLiteral: "Error"
p14210
tp14211
I1
s(Vinsert
p14212
I43
VSimpleType: OracleCreateTableStatement.Organization
p14213
tp14214
I1
s(Vinsert
p14215
I45
VStringLiteral: "select * from (select * from test t order by id desc) z limit 100"
p14216
tp14217
I1
s(Vinsert
p14218
I45
VStringLiteral: "select id, name from t order by id"
p14219
tp14220
I3
s(Vinsert
p14221
I42
VSimpleName: PreparedStatementProxyImpl
p14222
tp14223
I8
s(Vinsert
p14224
I42
VSimpleName: SecretKeySpec
p14225
tp14226
I2
s(Vinsert
p14227
I42
VSimpleName: formatOdps
p14228
tp14229
I47
s(Vinsert
p14230
I34
VNumberLiteral: 1001L
p14231
tp14232
I1
s(Vinsert
p14233
I45
VStringLiteral: "\u005ct\u005ct\u005ctINNER JOIN sys_org so ON st.orgid = so.orgid \u005cn"
p14234
tp14235
I1
s(Vinsert
p14236
I42
VSimpleName: isLocal
p14237
tp14238
I2
s(Vinsert
p14239
I42
VSimpleName: parseLong
p14240
tp14241
I4
s(Vinsert
p14242
I42
VSimpleName: MySqlWallTest14
p14243
tp14244
I1
s(Vinsert
p14245
I42
VSimpleName: user
p14246
tp14247
I29
s(Vinsert
p14248
I43
VSimpleType: Function
p14249
tp14250
I6
s(Vinsert
p14251
I45
VStringLiteral: "CREATE SEQUENCE \u005c"GJS_ZIXUN\u005c".\u005c"FINANCE_EXPLAIN_ID_GENERATOR\u005c" CACHE 2"
p14252
tp14253
I1
s(Vinsert
p14254
I45
VStringLiteral: " `Extent1`.`CreateTime`, "
p14255
tp14256
I1
s(Vinsert
p14257
I45
VStringLiteral: "alter table sale_detail"
p14258
tp14259
I1
s(Vinsert
p14260
I42
VSimpleName: SQLStatement
p14261
tp14262
I782
s(Vinsert
p14263
I42
VSimpleName: clobOpenCount
p14264
tp14265
I3
s(Vinsert
p14266
I40
VQualifiedName: connections.length
p14267
tp14268
I1
s(Vinsert
p14269
I42
VSimpleName: ConnectionEventListener
p14270
tp14271
I3
s(Vinsert
p14272
I45
VStringLiteral: "out_order_id"
p14273
tp14274
I1
s(Vinsert
p14275
I42
VSimpleName: isIfExists
p14276
tp14277
I3
s(Vinsert
p14278
I40
VQualifiedName: Token.LOOP
p14279
tp14280
I1
s(Vinsert
p14281
I42
VSimpleName: beforeInvoke
p14282
tp14283
I1
s(Vinsert
p14284
I42
VSimpleName: privilege
p14285
tp14286
I5
s(Vinsert
p14287
I45
VStringLiteral: "@@session"
p14288
tp14289
I2
s(Vinsert
p14290
I45
VStringLiteral: "\u005cn(N'Operator error', GETDATE())"
p14291
tp14292
I2
s(Vinsert
p14293
I42
VSimpleName: parseColumn
p14294
tp14295
I2
s(Vinsert
p14296
I45
VStringLiteral: "select c.COLUMN_NAME, COLUMNPROPERTY(is_member(c.TABLE_SCHEMA + '.' + c.TABLE_NAME), c.COLUMN_NAME, 'IsIdentity') from INFORMATION_SCHEMA.KEY_COLUMN_USAGE c join INFORMATION_SCHEMA.TABLE_CONSTRAINTS p on p.CONSTRAINT_NAME = c.CONSTRAINT_NAME where c.TABLE_NAME = @p1 and c.TABLE_SCHEMA = @p2 and p.TABLE_SCHEMA = @p2 and p.CONSTRAINT_TYPE = 'PRIMARY KEY'"
p14297
tp14298
I1
s(Vinsert
p14299
I43
VSimpleType: HiveStatementParser
p14300
tp14301
I1
s(Vinsert
p14302
I43
VSimpleType: SQLUpdateBuilder
p14303
tp14304
I1
s(Vinsert
p14305
I42
VSimpleName: ClassNotFoundException
p14306
tp14307
I1
s(Vinsert
p14308
I42
VSimpleName: setQualifyClause
p14309
tp14310
I1
s(Vinsert
p14311
I45
VStringLiteral: "minIdle greater than maxActive, "
p14312
tp14313
I1
s(Vinsert
p14314
I42
VSimpleName: methodStats
p14315
tp14316
I4
s(Vinsert
p14317
I42
VSimpleName: setBlock
p14318
tp14319
I1
s(Vinsert
p14320
I45
VStringLiteral: "\u005ctELSE\u005cn"
p14321
tp14322
I1
s(Vinsert
p14323
I74
VParameterizedType: Map<Integer,JdbcParameter>
p14324
tp14325
I3
s(Vinsert
p14326
I42
VSimpleName: getPoolingCount
p14327
tp14328
I5
s(Vinsert
p14329
I42
VSimpleName: createDataSource
p14330
tp14331
I2
s(Vinsert
p14332
I42
VSimpleName: intResult
p14333
tp14334
I1
s(Vinsert
p14335
I40
VQualifiedName: joinType.name_lcase
p14336
tp14337
I1
s(Vinsert
p14338
I45
VStringLiteral: "\u005ctSELECT 1\u005cn"
p14339
tp14340
I1
s(Vinsert
p14341
I45
VStringLiteral: "EXECUTE"
p14342
tp14343
I1
s(Vinsert
p14344
I45
VStringLiteral: "\u005ctAND rsi.e_boardid IN (?)\u005cn"
p14345
tp14346
I1
s(Vinsert
p14347
I42
VSimpleName: table
p14348
tp14349
I56
s(Vinsert
p14350
I42
VSimpleName: getCachedPreparedStatementAccessCount
p14351
tp14352
I2
s(Vinsert
p14353
I43
VSimpleType: RSAPrivateKeySpec
p14354
tp14355
I2
s(Vinsert
p14356
I42
VSimpleName: isSelectIntoOutfileAllow
p14357
tp14358
I1
s(Vinsert
p14359
I40
VQualifiedName: Token.CONNECT
p14360
tp14361
I2
s(Vinsert
p14362
I42
VSimpleName: value
p14363
tp14364
I157
s(Vinsert
p14365
I42
VSimpleName: getHistogram
p14366
tp14367
I1
s(Vinsert
p14368
I45
VStringLiteral: "USING"
p14369
tp14370
I8
s(Vinsert
p14371
I42
VSimpleName: resultSql
p14372
tp14373
I2
s(Vinsert
p14374
I42
VSimpleName: MySqlShowMasterLogsStatement
p14375
tp14376
I1
s(Vinsert
p14377
I42
VSimpleName: tableHashCode
p14378
tp14379
I1
s(Vinsert
p14380
I45
VStringLiteral: "\u005cnb.total_price"
p14381
tp14382
I1
s(Vinsert
p14383
I45
VStringLiteral: "INSERT INTO t (a, b)"
p14384
tp14385
I3
s(Vinsert
p14386
I45
VStringLiteral: "concat"
p14387
tp14388
I1
s(Vinsert
p14389
I34
VNumberLiteral: 14
p14390
tp14391
I3
s(Vinsert
p14392
I42
VSimpleName: getAlias
p14393
tp14394
I19
s(Vinsert
p14395
I42
VSimpleName: jdbcResultSetOpenCount
p14396
tp14397
I2
s(Vinsert
p14398
I43
VSimpleType: OracleConnection
p14399
tp14400
I11
s(Vinsert
p14401
I11
VCastExpression
p14402
tp14403
I541
s(Vinsert
p14404
I42
VSimpleName: setTableSpace
p14405
tp14406
I1
s(Vinsert
p14407
I42
VSimpleName: setParentName
p14408
tp14409
I1
s(Vinsert
p14410
I42
VSimpleName: setUseGloalDataSourceStat
p14411
tp14412
I2
s(Vinsert
p14413
I45
VStringLiteral: "grouping sets"
p14414
tp14415
I1
s(Vinsert
p14416
I42
VSimpleName: forExpr
p14417
tp14418
I3
s(Vinsert
p14419
I40
VQualifiedName: array.length
p14420
tp14421
I1
s(Vinsert
p14422
I42
VSimpleName: userService
p14423
tp14424
I1
s(Vinsert
p14425
I45
VStringLiteral: "\u005cn\u005ct\u005ctCHECK (price > 0)"
p14426
tp14427
I1
s(Vinsert
p14428
I42
VSimpleName: compareTo
p14429
tp14430
I2
s(Vinsert
p14431
I45
VStringLiteral: "pid"
p14432
tp14433
I1
s(Vinsert
p14434
I45
VStringLiteral: "stat"
p14435
tp14436
I8
s(Vinsert
p14437
I42
VSimpleName: setDataType
p14438
tp14439
I2
s(Vinsert
p14440
I45
VStringLiteral: "\u005ctFROM _result;\u005cn"
p14441
tp14442
I1
s(Vinsert
p14443
I42
VSimpleName: expect
p14444
tp14445
I1
s(Vinsert
p14446
I40
VQualifiedName: JdbcConstants.PHOENIX_DRIVER
p14447
tp14448
I1
s(Vinsert
p14449
I42
VSimpleName: getActivePeak
p14450
tp14451
I1
s(Vinsert
p14452
I42
VSimpleName: Collections
p14453
tp14454
I36
s(Vinsert
p14455
I42
VSimpleName: setMaxWait
p14456
tp14457
I5
s(Vinsert
p14458
I40
VQualifiedName: Token.DROP
p14459
tp14460
I1
s(Vinsert
p14461
I42
VSimpleName: aliveNanoMax
p14462
tp14463
I2
s(Vinsert
p14464
I45
VStringLiteral: "\u005cn\u005ctemployee_id NUMBER(4) PRIMARY KEY,"
p14465
tp14466
I2
s(Vinsert
p14467
I45
VStringLiteral: "jdbc:wrap-jdbc:filters=default:name=com.alibaba.dragoon.master:jdbc:mysql:"
p14468
tp14469
I1
s(Vinsert
p14470
I42
VSimpleName: metaRs
p14471
tp14472
I1
s(Vinsert
p14473
I42
VSimpleName: SQLSelect
p14474
tp14475
I31
s(Vinsert
p14476
I42
VSimpleName: setIfExists
p14477
tp14478
I3
s(Vinsert
p14479
I42
VSimpleName: addAndGet
p14480
tp14481
I13
s(Vinsert
p14482
I45
VStringLiteral: "(select count(*) from t) > 0"
p14483
tp14484
I2
s(Vinsert
p14485
I45
VStringLiteral: "ingres"
p14486
tp14487
I1
s(Vinsert
p14488
I40
VQualifiedName: SQLUtils.DEFAULT_LCASE_FORMAT_OPTION
p14489
tp14490
I47
s(Vinsert
p14491
I40
VQualifiedName: AGGREGATE_FUNCTIONS_CODES.length
p14492
tp14493
I6
s(Vinsert
p14494
I43
VSimpleType: StatementExecuteType
p14495
tp14496
I1
s(Vinsert
p14497
I42
VSimpleName: getClass
p14498
tp14499
I167
s(Vinsert
p14500
I43
VSimpleType: WallContext
p14501
tp14502
I6
s(Vinsert
p14503
I45
VStringLiteral: "CONSTRAINT PRIMARY_WORKTASK PRIMARY KEY (WORKITEMID)\u005cn"
p14504
tp14505
I2
s(Vinsert
p14506
I42
VSimpleName: loggerName
p14507
tp14508
I2
s(Vinsert
p14509
I45
VStringLiteral: " on update "
p14510
tp14511
I1
s(Vinsert
p14512
I40
VQualifiedName: Token.CONCAT
p14513
tp14514
I2
s(Vinsert
p14515
I45
VStringLiteral: "\u005cn\u005ct\u005ct\u005ct\u005ctFROM t4"
p14516
tp14517
I1
s(Vinsert
p14518
I43
VSimpleType: BasicDataSource
p14519
tp14520
I9
s(Vinsert
p14521
I40
VQualifiedName: other.method
p14522
tp14523
I1
s(Vinsert
p14524
I45
VStringLiteral: "\u005ctWHERE employee_id = emp_id;\u005cn"
p14525
tp14526
I1
s(Vinsert
p14527
I42
VSimpleName: initrans
p14528
tp14529
I3
s(Vinsert
p14530
I42
VSimpleName: Short
p14531
tp14532
I2
s(Vinsert
p14533
I42
VSimpleName: setTransactionIsolation
p14534
tp14535
I2
s(Vinsert
p14536
I45
VStringLiteral: "drop key "
p14537
tp14538
I1
s(Vinsert
p14539
I42
VSimpleName: instances
p14540
tp14541
I2
s(Vinsert
p14542
I43
VSimpleType: MutablePropertyValues
p14543
tp14544
I1
s(Vinsert
p14545
I42
VSimpleName: nextChar
p14546
tp14547
I1
s(Vinsert
p14548
I45
VStringLiteral: "200"
p14549
tp14550
I2
s(Vinsert
p14551
I45
VStringLiteral: "\u005cndrop table if exists mytables;"
p14552
tp14553
I1
s(Vinsert
p14554
I43
VSimpleType: DataSourceHolder
p14555
tp14556
I9
s(Vinsert
p14557
I43
VSimpleType: Reader
p14558
tp14559
I5
s(Vinsert
p14560
I42
VSimpleName: addValueCause
p14561
tp14562
I2
s(Vinsert
p14563
I45
VStringLiteral: "\u005ct\u005ct\u005ctRAISE;\u005cn"
p14564
tp14565
I1
s(Vinsert
p14566
I42
VSimpleName: NotAllowCommentException
p14567
tp14568
I1
s(Vinsert
p14569
I43
VSimpleType: OracleCreateTableStatement
p14570
tp14571
I1
s(Vinsert
p14572
I42
VSimpleName: DB2Lexer
p14573
tp14574
I2
s(Vinsert
p14575
I45
VStringLiteral: "?>0 && ?>0"
p14576
tp14577
I1
s(Vinsert
p14578
I45
VStringLiteral: "SHARE"
p14579
tp14580
I2
s(Vinsert
p14581
I43
VSimpleType: ArrayList
p14582
tp14583
I87
s(Vinsert
p14584
I45
VStringLiteral: "5'CN'"
p14585
tp14586
I1
s(Vinsert
p14587
I42
VSimpleName: EvalMethodAbsTest
p14588
tp14589
I1
s(Vinsert
p14590
I42
VSimpleName: javaCallSpec
p14591
tp14592
I2
s(Vinsert
p14593
I42
VSimpleName: selectStmt
p14594
tp14595
I11
s(Vinsert
p14596
I43
VSimpleType: SQLSetStatement
p14597
tp14598
I9
s(Vinsert
p14599
I40
VQualifiedName: JdbcUtils.SQL_SERVER
p14600
tp14601
I1
s(Vinsert
p14602
I42
VSimpleName: getConnections
p14603
tp14604
I1
s(Vinsert
p14605
I42
VSimpleName: cachedPreparedStatementCount
p14606
tp14607
I2
s(Vinsert
p14608
I42
VSimpleName: getFile
p14609
tp14610
I2
s(Vinsert
p14611
I43
VSimpleType: SQLDetailDialog
p14612
tp14613
I1
s(Vinsert
p14614
I42
VSimpleName: getClassFromWebContainerOrCurrentClassLoader
p14615
tp14616
I1
s(Vinsert
p14617
I45
VStringLiteral: "group by process, \u005cn"
p14618
tp14619
I1
s(Vinsert
p14620
I45
VStringLiteral: "select * from dede_admin where id=1 order by if((ascii(substr(user(),1,1))>95),1,2);"
p14621
tp14622
I1
s(Vinsert
p14623
I45
VStringLiteral: "\u005ct, `region_fee_standard`, `region_fee_add`, `cell_fee`, `way_day`, `version`)\u005cn"
p14624
tp14625
I1
s(Vinsert
p14626
I39
VPrimitiveType: long
p14627
tp14628
I134
s(Vinsert
p14629
I42
VSimpleName: testInitInvalidDecrypt
p14630
tp14631
I1
s(Vinsert
p14632
I42
VSimpleName: setDistributeBy
p14633
tp14634
I1
s(Vinsert
p14635
I42
VSimpleName: getOperator
p14636
tp14637
I31
s(Vinsert
p14638
I42
VSimpleName: checkHaving
p14639
tp14640
I2
s(Vinsert
p14641
I42
VSimpleName: testDatabaseOperations
p14642
tp14643
I1
s(Vinsert
p14644
I45
VStringLiteral: "alter table test_lifecycle touch;"
p14645
tp14646
I1
s(Vinsert
p14647
I43
VSimpleType: SQLLexer
p14648
tp14649
I2
s(Vinsert
p14650
I42
VSimpleName: referencedTables
p14651
tp14652
I1
s(Vinsert
p14653
I42
VSimpleName: tagetString
p14654
tp14655
I2
s(Vinsert
p14656
I43
VSimpleType: SQLOrderingSpecification
p14657
tp14658
I2
s(Vinsert
p14659
I45
VStringLiteral: "StatementExecuteCount_20000_more_Millis"
p14660
tp14661
I1
s(Vinsert
p14662
I43
VSimpleType: PhoenixLexer
p14663
tp14664
I1
s(Vinsert
p14665
I45
VStringLiteral: "\u005cn\u005ctTRUNCATE PARTITION ALL"
p14666
tp14667
I1
s(Vinsert
p14668
I42
VSimpleName: EvalMethodTest_ltrim
p14669
tp14670
I1
s(Vinsert
p14671
I40
VQualifiedName: Token.LINE_COMMENT
p14672
tp14673
I1
s(Vinsert
p14674
I42
VSimpleName: SQLDropDatabaseStatement
p14675
tp14676
I3
s(Vinsert
p14677
I42
VSimpleName: mappingRule
p14678
tp14679
I1
s(Vinsert
p14680
I45
VStringLiteral: "\u005cn\u005ctcust_last_name VARCHAR2(20),"
p14681
tp14682
I2
s(Vinsert
p14683
I57
VTypeLiteral
p14684
tp14685
I76
s(Vinsert
p14686
I42
VSimpleName: getIdentifiedBy
p14687
tp14688
I2
s(Vinsert
p14689
I42
VSimpleName: slave
p14690
tp14691
I6
s(Vinsert
p14692
I45
VStringLiteral: "DATA DIRECTORY"
p14693
tp14694
I1
s(Vinsert
p14695
I14
VClassInstanceCreation
p14696
tp14697
I1871
s(Vinsert
p14698
I42
VSimpleName: connectionIdSeed
p14699
tp14700
I7
s(Vinsert
p14701
I45
VStringLiteral: "www.5-nb.com"
p14702
tp14703
I1
s(Vinsert
p14704
I43
VSimpleType: FilterAdapter
p14705
tp14706
I1
s(Vinsert
p14707
I43
VSimpleType: MySqlIgnoreIndexHint
p14708
tp14709
I2
s(Vinsert
p14710
I42
VSimpleName: getHints
p14711
tp14712
I18
s(Vinsert
p14713
I42
VSimpleName: MonitorClient
p14714
tp14715
I1
s(Vinsert
p14716
I42
VSimpleName: getOptionHints
p14717
tp14718
I1
s(Vinsert
p14719
I42
VSimpleName: isWait
p14720
tp14721
I1
s(Vinsert
p14722
I43
VSimpleType: BigDecimal
p14723
tp14724
I8
s(Vinsert
p14725
I45
VStringLiteral: "\u005cn\u005ctdepartment_id,"
p14726
tp14727
I2
s(Vinsert
p14728
I42
VSimpleName: isAssignableFrom
p14729
tp14730
I5
s(Vinsert
p14731
I42
VSimpleName: dataSourceStatList
p14732
tp14733
I1
s(Vinsert
p14734
I45
VStringLiteral: "FOREIGN DATA WRAPPER mysql\u005cn"
p14735
tp14736
I1
s(Vinsert
p14737
I40
VQualifiedName: com.alibaba.druid.sql.dialect.db2.ast.stmt.DB2SelectQueryBlock
p14738
tp14739
I2
s(Vinsert
p14740
I42
VSimpleName: PathVariable
p14741
tp14742
I1
s(Vinsert
p14743
I42
VSimpleName: DruidAbstractDataSource
p14744
tp14745
I7
s(Vinsert
p14746
I45
VStringLiteral: "SELECT TOP 10 ID FROM dbo.jiraissue WHERE PROJECT IN (?) ORDER BY UPDATED DESC"
p14747
tp14748
I1
s(Vinsert
p14749
I42
VSimpleName: e2
p14750
tp14751
I4
s(Vinsert
p14752
I42
VSimpleName: setPassword
p14753
tp14754
I9
s(Vinsert
p14755
I45
VStringLiteral: "5''CN'"
p14756
tp14757
I1
s(Vinsert
p14758
I42
VSimpleName: Savepoint
p14759
tp14760
I1
s(Vinsert
p14761
I42
VSimpleName: HMappingDefaultImpl
p14762
tp14763
I3
s(Vinsert
p14764
I40
VQualifiedName: JdbcUtils.HBASE
p14765
tp14766
I2
s(Vinsert
p14767
I45
VStringLiteral: "PROFILE"
p14768
tp14769
I1
s(Vinsert
p14770
I42
VSimpleName: slowParameters
p14771
tp14772
I1
s(Vinsert
p14773
I43
VSimpleType: IllegalArgumentException
p14774
tp14775
I30
s(Vinsert
p14776
I40
VQualifiedName: x.tableElementList
p14777
tp14778
I1
s(Vinsert
p14779
I40
VQualifiedName: oracle.jdbc.internal.OracleConnection
p14780
tp14781
I2
s(Vinsert
p14782
I42
VSimpleName: validationQueryTimeout
p14783
tp14784
I2
s(Vinsert
p14785
I45
VStringLiteral: "\u005ct, c.ownership_type, c.established_year, c.principal, c.annual_purchase, c.certification\u005cn"
p14786
tp14787
I1
s(Vinsert
p14788
I42
VSimpleName: pivot
p14789
tp14790
I6
s(Vinsert
p14791
I45
VStringLiteral: "\u005ct\u005ctSELECT unnest(ARRAY[4275]) AS gdid, unnest(ARRAY[1]) AS gdnumber\u005cn"
p14792
tp14793
I1
s(Vinsert
p14794
I42
VSimpleName: symbolTable
p14795
tp14796
I5
s(Vinsert
p14797
I43
VSimpleType: MySqlShowRelayLogEventsStatement
p14798
tp14799
I2
s(Vinsert
p14800
I42
VSimpleName: pooledConnection
p14801
tp14802
I2
s(Vinsert
p14803
I42
VSimpleName: OracleMultiInsertStatement
p14804
tp14805
I3
s(Vinsert
p14806
I42
VSimpleName: getExecuteErrorLast
p14807
tp14808
I1
s(Vinsert
p14809
I42
VSimpleName: WallTableStat
p14810
tp14811
I8
s(Vinsert
p14812
I45
VStringLiteral: "remove statistic tbl_shop column_sum shop_name;"
p14813
tp14814
I1
s(Vinsert
p14815
I45
VStringLiteral: "select * from t --abc"
p14816
tp14817
I1
s(Vinsert
p14818
I45
VStringLiteral: "CREATE OR REPLACE TYPE "
p14819
tp14820
I1
s(Vinsert
p14821
I42
VSimpleName: isTestWhileIdle
p14822
tp14823
I2
s(Vinsert
p14824
I42
VSimpleName: getDate
p14825
tp14826
I2
s(Vinsert
p14827
I45
VStringLiteral: "\u005ct\u005ctSTORAGE (\u005cn"
p14828
tp14829
I6
s(Vinsert
p14830
I42
VSimpleName: parseShow
p14831
tp14832
I1
s(Vinsert
p14833
I42
VSimpleName: getTargetAffectRow
p14834
tp14835
I1
s(Vinsert
p14836
I43
VSimpleType: OracleSelectQueryBlock
p14837
tp14838
I7
s(Vinsert
p14839
I42
VSimpleName: beforeExecute
p14840
tp14841
I4
s(Vinsert
p14842
I42
VSimpleName: sqlState
p14843
tp14844
I1
s(Vinsert
p14845
I45
VStringLiteral: "select 1, 2, 3 from t where id  = 7"
p14846
tp14847
I1
s(Vinsert
p14848
I45
VStringLiteral: "do begin select * from test.t2; end; -- //"
p14849
tp14850
I1
s(Vinsert
p14851
I45
VStringLiteral: "\u005ctFROM person_test"
p14852
tp14853
I1
s(Vinsert
p14854
I42
VSimpleName: getPhysicalCloseCount
p14855
tp14856
I2
s(Vinsert
p14857
I42
VSimpleName: sheet
p14858
tp14859
I2
s(Vinsert
p14860
I42
VSimpleName: test_wall
p14861
tp14862
I1
s(Vinsert
p14863
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION west VALUES ('AMERICA', 'GERMANY', 'ITALY', 'SWITZERLAND'),"
p14864
tp14865
I2
s(Vinsert
p14866
I45
VStringLiteral: "LOCK TABLES "
p14867
tp14868
I1
s(Vinsert
p14869
I42
VSimpleName: WebURIStat
p14870
tp14871
I3
s(Vinsert
p14872
I42
VSimpleName: MySqlUtils
p14873
tp14874
I2
s(Vinsert
p14875
I45
VStringLiteral: "Histogram"
p14876
tp14877
I1
s(Vinsert
p14878
I45
VStringLiteral: "GROUP BY t.calendar_month_desc, c.cust_state_province;"
p14879
tp14880
I1
s(Vinsert
p14881
I45
VStringLiteral: "\u005ctSET salary = salary + bonus\u005cn"
p14882
tp14883
I1
s(Vinsert
p14884
I45
VStringLiteral: "\u005ct\u005ct\u005ctfrom mock_app.adl_mock_v_fct\u005cn"
p14885
tp14886
I1
s(Vinsert
p14887
I40
VQualifiedName: Token.IF
p14888
tp14889
I3
s(Vinsert
p14890
I42
VSimpleName: words
p14891
tp14892
I3
s(Vinsert
p14893
I40
VQualifiedName: Token.LPAREN
p14894
tp14895
I45
s(Vinsert
p14896
I45
VStringLiteral: "    select distinct buyer_nick "
p14897
tp14898
I1
s(Vinsert
p14899
I40
VQualifiedName: Connection.TRANSACTION_REPEATABLE_READ
p14900
tp14901
I1
s(Vinsert
p14902
I42
VSimpleName: andRest
p14903
tp14904
I1
s(Vinsert
p14905
I45
VStringLiteral: ",   host.gmt_modify as gmtModify"
p14906
tp14907
I1
s(Vinsert
p14908
I45
VStringLiteral: "\u005ct, pctused$, initrans, maxtrans, hashkeys, func\u005cn"
p14909
tp14910
I1
s(Vinsert
p14911
I43
VSimpleType: DruidDataSourceFactory
p14912
tp14913
I4
s(Vinsert
p14914
I45
VStringLiteral: "test5\u005cn"
p14915
tp14916
I1
s(Vinsert
p14917
I42
VSimpleName: test_getWallStatMap
p14918
tp14919
I1
s(Vinsert
p14920
I40
VQualifiedName: SQLBinaryOperator.LessThan
p14921
tp14922
I1
s(Vinsert
p14923
I45
VStringLiteral: "\u005cn\u005ctCONSTRAINT fk_deptno FOREIGN KEY (department_id) REFERENCES departments (department_id)"
p14924
tp14925
I2
s(Vinsert
p14926
I42
VSimpleName: createStatementId
p14927
tp14928
I2
s(Vinsert
p14929
I42
VSimpleName: hash
p14930
tp14931
I29
s(Vinsert
p14932
I45
VStringLiteral: "SELECT count(*) FROM T1, (SELECT DISTINCT parent_id AS parentId FROM T2 a1 WHERE FSEQ IN (?) AND NOT order_from = ? AND status IN (?) ) b WHERE ID = b.parentId AND GMT_CREATE >= to_date(?, ?) AND GMT_CREATE <= to_date(?, ?)"
p14933
tp14934
I1
s(Vinsert
p14935
I45
VStringLiteral: "net.sourceforge.jtds.jdbc.Driver"
p14936
tp14937
I1
s(Vinsert
p14938
I42
VSimpleName: MySqlBinlogStatement
p14939
tp14940
I2
s(Vinsert
p14941
I42
VSimpleName: setLoginTimeout
p14942
tp14943
I2
s(Vinsert
p14944
I45
VStringLiteral: "\u005ct\u005ctOR M.MERCHANT_NAME LIKE ('%' || ? || '%')\u005cn"
p14945
tp14946
I2
s(Vinsert
p14947
I42
VSimpleName: getIgnoreLinesNumber
p14948
tp14949
I1
s(Vinsert
p14950
I45
VStringLiteral: "FROM employees;"
p14951
tp14952
I1
s(Vinsert
p14953
I42
VSimpleName: formatedSql
p14954
tp14955
I3
s(Vinsert
p14956
I40
VQualifiedName: Token.QUESAMP
p14957
tp14958
I1
s(Vinsert
p14959
I45
VStringLiteral: "QUERY"
p14960
tp14961
I1
s(Vinsert
p14962
I45
VStringLiteral: "\u005cn WHERE ds=20150819"
p14963
tp14964
I1
s(Vinsert
p14965
I45
VStringLiteral: " `Extent1`.`IsPublic`"
p14966
tp14967
I1
s(Vinsert
p14968
I42
VSimpleName: AtomicLong
p14969
tp14970
I38
s(Vinsert
p14971
I45
VStringLiteral: "\u005cn\u005ct)"
p14972
tp14973
I8
s(Vinsert
p14974
I42
VSimpleName: setTop
p14975
tp14976
I1
s(Vinsert
p14977
I42
VSimpleName: columnNameHash
p14978
tp14979
I3
s(Vinsert
p14980
I42
VSimpleName: PGBoxExpr
p14981
tp14982
I3
s(Vinsert
p14983
I45
VStringLiteral: "Count_10_20"
p14984
tp14985
I1
s(Vinsert
p14986
I43
VSimpleType: InputStreamReader
p14987
tp14988
I2
s(Vinsert
p14989
I45
VStringLiteral: "oidindex"
p14990
tp14991
I1
s(Vinsert
p14992
I42
VSimpleName: latch
p14993
tp14994
I9
s(Vinsert
p14995
I42
VSimpleName: logging
p14996
tp14997
I1
s(Vinsert
p14998
I43
VSimpleType: MysqlDeallocatePrepareStatement
p14999
tp15000
I3
s(Vinsert
p15001
I42
VSimpleName: MySqlStatementParser
p15002
tp15003
I279
s(Vinsert
p15004
I45
VStringLiteral: "validationQuery not set"
p15005
tp15006
I1
s(Vinsert
p15007
I45
VStringLiteral: "OSAndroid43Count"
p15008
tp15009
I1
s(Vinsert
p15010
I42
VSimpleName: wallConditionContextLocal
p15011
tp15012
I3
s(Vinsert
p15013
I42
VSimpleName: setSelectWhereAlwayTrueCheck
p15014
tp15015
I1
s(Vinsert
p15016
I45
VStringLiteral: "onFatalError"
p15017
tp15018
I1
s(Vinsert
p15019
I42
VSimpleName: addReaderOpenCount
p15020
tp15021
I1
s(Vinsert
p15022
I42
VSimpleName: dropIndexCount
p15023
tp15024
I2
s(Vinsert
p15025
I42
VSimpleName: getPinGlobalTxToPhysicalConnection
p15026
tp15027
I1
s(Vinsert
p15028
I42
VSimpleName: MySqlOrderingExpr
p15029
tp15030
I2
s(Vinsert
p15031
I43
VSimpleType: ExportParameterVisitor
p15032
tp15033
I6
s(Vinsert
p15034
I45
VStringLiteral: "INTO "
p15035
tp15036
I1
s(Vinsert
p15037
I42
VSimpleName: tableStmt
p15038
tp15039
I1
s(Vinsert
p15040
I45
VStringLiteral: "\u005cn\u005ctCHECK (name.first_name IS NOT NULL"
p15041
tp15042
I2
s(Vinsert
p15043
I42
VSimpleName: setTime
p15044
tp15045
I4
s(Vinsert
p15046
I42
VSimpleName: runningCount
p15047
tp15048
I1
s(Vinsert
p15049
I42
VSimpleName: removeLocal
p15050
tp15051
I1
s(Vinsert
p15052
I42
VSimpleName: doInBackground
p15053
tp15054
I5
s(Vinsert
p15055
I34
VNumberLiteral: 7
p15056
tp15057
I2
s(Vinsert
p15058
I13
VCharacterLiteral: '{'
p15059
tp15060
I1
s(Vinsert
p15061
I42
VSimpleName: getMethodName
p15062
tp15063
I12
s(Vinsert
p15064
I43
VSimpleType: DB2SchemaStatVisitor
p15065
tp15066
I50
s(Vinsert
p15067
I42
VSimpleName: fnv1a_64
p15068
tp15069
I3
s(Vinsert
p15070
I42
VSimpleName: indexTo
p15071
tp15072
I2
s(Vinsert
p15073
I42
VSimpleName: setSlave
p15074
tp15075
I2
s(Vinsert
p15076
I42
VSimpleName: matchTableName
p15077
tp15078
I1
s(Vinsert
p15079
I42
VSimpleName: getLogger
p15080
tp15081
I3
s(Vinsert
p15082
I40
VQualifiedName: Token.TRUE
p15083
tp15084
I1
s(Vinsert
p15085
I43
VSimpleType: java.sql.Date
p15086
tp15087
I1
s(Vinsert
p15088
I42
VSimpleName: setDataSource
p15089
tp15090
I8
s(Vinsert
p15091
I42
VSimpleName: statementTrace
p15092
tp15093
I1
s(Vinsert
p15094
I45
VStringLiteral: "REPLACE INTO mytable (`user_id`, `c_level`, `l_level`, `t_level`, `v_level`, `tag`)\u005cn"
p15095
tp15096
I1
s(Vinsert
p15097
I45
VStringLiteral: ";;select 123"
p15098
tp15099
I1
s(Vinsert
p15100
I42
VSimpleName: parseValueClause
p15101
tp15102
I1
s(Vinsert
p15103
I42
VSimpleName: EvalMethodTest_substring_3
p15104
tp15105
I1
s(Vinsert
p15106
I42
VSimpleName: getRawDriverClassName
p15107
tp15108
I3
s(Vinsert
p15109
I42
VSimpleName: setUser
p15110
tp15111
I7
s(Vinsert
p15112
I42
VSimpleName: getDefaultSchema
p15113
tp15114
I2
s(Vinsert
p15115
I40
VQualifiedName: Token.LITERAL_NCHARS
p15116
tp15117
I1
s(Vinsert
p15118
I45
VStringLiteral: "\u005ctCOMMENTS VARCHAR(100),\u005cn"
p15119
tp15120
I1
s(Vinsert
p15121
I42
VSimpleName: onConflictConstraint
p15122
tp15123
I1
s(Vinsert
p15124
I45
VStringLiteral: "RENAME COLUMN "
p15125
tp15126
I1
s(Vinsert
p15127
I42
VSimpleName: lowWater
p15128
tp15129
I1
s(Vinsert
p15130
I43
VSimpleType: HBasePreparedStatement
p15131
tp15132
I1
s(Vinsert
p15133
I42
VSimpleName: exSorter
p15134
tp15135
I1
s(Vinsert
p15136
I42
VSimpleName: incrementReplaceCount
p15137
tp15138
I2
s(Vinsert
p15139
I42
VSimpleName: OracleSelectQueryBlock
p15140
tp15141
I8
s(Vinsert
p15142
I42
VSimpleName: test_permitFunction01
p15143
tp15144
I1
s(Vinsert
p15145
I42
VSimpleName: toChar
p15146
tp15147
I1
s(Vinsert
p15148
I42
VSimpleName: test_true_subquery
p15149
tp15150
I1
s(Vinsert
p15151
I42
VSimpleName: test_resultSet_metadata
p15152
tp15153
I1
s(Vinsert
p15154
I42
VSimpleName: FilterEventAdapter
p15155
tp15156
I2
s(Vinsert
p15157
I45
VStringLiteral: "error"
p15158
tp15159
I3
s(Vinsert
p15160
I42
VSimpleName: request
p15161
tp15162
I11
s(Vinsert
p15163
I45
VStringLiteral: "MODE"
p15164
tp15165
I1
s(Vinsert
p15166
I42
VSimpleName: setConditionOpXorAllow
p15167
tp15168
I1
s(Vinsert
p15169
I45
VStringLiteral: "alter table test1 drop column c_decimal;"
p15170
tp15171
I1
s(Vinsert
p15172
I42
VSimpleName: setUsername
p15173
tp15174
I7
s(Vinsert
p15175
I42
VSimpleName: resultSet_updateSQLXML
p15176
tp15177
I1
s(Vinsert
p15178
I45
VStringLiteral: "\u005cn\u005ctPARTITION p2 VALUES LESS THAN (16),"
p15179
tp15180
I2
s(Vinsert
p15181
I45
VStringLiteral: "GROUP BY t1.member_id, \u005cn"
p15182
tp15183
I1
s(Vinsert
p15184
I45
VStringLiteral: "10.16.200.0/24"
p15185
tp15186
I1
s(Vinsert
p15187
I42
VSimpleName: getInteger
p15188
tp15189
I2
s(Vinsert
p15190
I42
VSimpleName: NClob
p15191
tp15192
I1
s(Vinsert
p15193
I42
VSimpleName: hintExpr
p15194
tp15195
I1
s(Vinsert
p15196
I45
VStringLiteral: "\u005ctSELECT to_char(SYSDATE + INTERVAL '1' YEAR, 'yyyy-mm-dd HH24:mi:ss')\u005cn"
p15197
tp15198
I1
s(Vinsert
p15199
I42
VSimpleName: getSQLUpdateStatement
p15200
tp15201
I2
s(Vinsert
p15202
I42
VSimpleName: JVM_16
p15203
tp15204
I1
s(Vinsert
p15205
I42
VSimpleName: incrementWarnnings
p15206
tp15207
I2
s(Vinsert
p15208
I42
VSimpleName: setTo
p15209
tp15210
I6
s(Vinsert
p15211
I45
VStringLiteral: "wrh$_tempfile"
p15212
tp15213
I2
s(Vinsert
p15214
I45
VStringLiteral: "08"
p15215
tp15216
I1
s(Vinsert
p15217
I42
VSimpleName: np
p15218
tp15219
I7
s(Vinsert
p15220
I43
VSimpleType: SQLClientInfoException
p15221
tp15222
I1
s(Vinsert
p15223
I42
VSimpleName: PreparedStatementKey
p15224
tp15225
I6
s(Vinsert
p15226
I45
VStringLiteral: "\u005cnlimit ? offset ?"
p15227
tp15228
I1
s(Vinsert
p15229
I43
VSimpleType: PGInetExpr
p15230
tp15231
I4
s(Vinsert
p15232
I42
VSimpleName: identity
p15233
tp15234
I2
s(Vinsert
p15235
I42
VSimpleName: chars
p15236
tp15237
I4
s(Vinsert
p15238
I42
VSimpleName: rowIndex
p15239
tp15240
I1
s(Vinsert
p15241
I42
VSimpleName: setDistionOption
p15242
tp15243
I1
s(Vinsert
p15244
I45
VStringLiteral: ") ENGINE=InnoDB AUTO_INCREMENT=1769503 DEFAULT CHARSET=utf8mb4 COMMENT='10000000'"
p15245
tp15246
I1
s(Vinsert
p15247
I45
VStringLiteral: "\u005cn\u005ctpostal_code VARCHAR2(12),"
p15248
tp15249
I4
s(Vinsert
p15250
I40
VQualifiedName: joinType.name
p15251
tp15252
I1
s(Vinsert
p15253
I42
VSimpleName: OdpsSetLabelStatement
p15254
tp15255
I1
s(Vinsert
p15256
I40
VQualifiedName: Token.LBRACE
p15257
tp15258
I1
s(Vinsert
p15259
I45
VStringLiteral: "%g"
p15260
tp15261
I1
s(Vinsert
p15262
I45
VStringLiteral: "druid.parameterized.shardingSupport"
p15263
tp15264
I2
s(Vinsert
p15265
I42
VSimpleName: transaction
p15266
tp15267
I2
s(Vinsert
p15268
I42
VSimpleName: getSortedBy
p15269
tp15270
I2
s(Vinsert
p15271
I42
VSimpleName: outputVisitor
p15272
tp15273
I1
s(Vinsert
p15274
I42
VSimpleName: isAndroid
p15275
tp15276
I2
s(Vinsert
p15277
I45
VStringLiteral: "   ) ON COMMIT DELETE ROWS    "
p15278
tp15279
I1
s(Vinsert
p15280
I43
VSimpleType: ServletHolder
p15281
tp15282
I1
s(Vinsert
p15283
I42
VSimpleName: isSlaveFail
p15284
tp15285
I1
s(Vinsert
p15286
I43
VSimpleType: ServletContextEvent
p15287
tp15288
I1
s(Vinsert
p15289
I42
VSimpleName: setExecuteCount
p15290
tp15291
I3
s(Vinsert
p15292
I45
VStringLiteral: "\u005cn\u005ctcreated_date DATETIME,"
p15293
tp15294
I1
s(Vinsert
p15295
I42
VSimpleName: setAlgorithm
p15296
tp15297
I5
s(Vinsert
p15298
I45
VStringLiteral: "WITH "
p15299
tp15300
I1
s(Vinsert
p15301
I43
VSimpleType: SQLInsertStatement
p15302
tp15303
I29
s(Vinsert
p15304
I42
VSimpleName: print0
p15305
tp15306
I79
s(Vinsert
p15307
I43
VSimpleType: SQLAlterTableSetComment
p15308
tp15309
I1
s(Vinsert
p15310
I45
VStringLiteral: "\u005cn\u005ctPROC_DEF_ID_ NVARCHAR2(64) NOT NULL,"
p15311
tp15312
I2
s(Vinsert
p15313
I45
VStringLiteral: " `Extent1`.`Zone`, "
p15314
tp15315
I1
s(Vinsert
p15316
I42
VSimpleName: getLocalSqlMapSessionWrapper
p15317
tp15318
I1
s(Vinsert
p15319
I42
VSimpleName: keyColumns
p15320
tp15321
I1
s(Vinsert
p15322
I42
VSimpleName: option
p15323
tp15324
I34
s(Vinsert
p15325
I45
VStringLiteral: "\u005cn f1 > 1 -- comment_2"
p15326
tp15327
I1
s(Vinsert
p15328
I42
VSimpleName: bracket
p15329
tp15330
I2
s(Vinsert
p15331
I45
VStringLiteral: "\u005ct\u005ctCLOSE VALUECURSOR;\u005cn"
p15332
tp15333
I1
s(Vinsert
p15334
I42
VSimpleName: SQLObject
p15335
tp15336
I75
s(Vinsert
p15337
I45
VStringLiteral: " SET DEFAULT "
p15338
tp15339
I1
s(Vinsert
p15340
I42
VSimpleName: nextValue
p15341
tp15342
I2
s(Vinsert
p15343
I45
VStringLiteral: "unknown"
p15344
tp15345
I1
s(Vinsert
p15346
I43
VSimpleType: OracleInsertStatement
p15347
tp15348
I7
s(Vinsert
p15349
I45
VStringLiteral: "ELSE"
p15350
tp15351
I1
s(Vinsert
p15352
I42
VSimpleName: statement_executeBatch
p15353
tp15354
I1
s(Vinsert
p15355
I42
VSimpleName: withClause
p15356
tp15357
I1
s(Vinsert
p15358
I42
VSimpleName: setWindowing
p15359
tp15360
I2
s(Vinsert
p15361
I42
VSimpleName: getInitParameter
p15362
tp15363
I3
s(Vinsert
p15364
I42
VSimpleName: setErrorLogging
p15365
tp15366
I1
s(Vinsert
p15367
I42
VSimpleName: blockStatement
p15368
tp15369
I2
s(Vinsert
p15370
I42
VSimpleName: decimalB
p15371
tp15372
I2
s(Vinsert
p15373
I45
VStringLiteral: "\u005ct\u005ctt_temp (processId,resultId,gmt_create,gmt_modified,result_content,result_number)\u005cn"
p15374
tp15375
I1
s(Vinsert
p15376
I45
VStringLiteral: "\u005cnORDER BY SUM(c2)"
p15377
tp15378
I1
s(Vinsert
p15379
I42
VSimpleName: getTo
p15380
tp15381
I2
s(Vinsert
p15382
I45
VStringLiteral: " IDENTIFIED BY "
p15383
tp15384
I3
s(Vinsert
p15385
I40
VQualifiedName: that.joinType
p15386
tp15387
I1
s(Vinsert
p15388
I42
VSimpleName: getAopPatterns
p15389
tp15390
I1
s(Vinsert
p15391
I42
VSimpleName: setLimit
p15392
tp15393
I4
s(Vinsert
p15394
I42
VSimpleName: mockConn
p15395
tp15396
I2
s(Vinsert
p15397
I42
VSimpleName: latch_0
p15398
tp15399
I1
s(Vinsert
p15400
I42
VSimpleName: exprRest
p15401
tp15402
I5
s(Vinsert
p15403
I45
VStringLiteral: ", not false"
p15404
tp15405
I1
s(Vinsert
p15406
I45
VStringLiteral: " UNION ALL SELECT 2 FROM dual "
p15407
tp15408
I1
s(Vinsert
p15409
I45
VStringLiteral: "\u005ct\u005ctIF x < 3 THEN\u005cn"
p15410
tp15411
I1
s(Vinsert
p15412
I42
VSimpleName: getPlatformMBeanServer
p15413
tp15414
I7
s(Vinsert
p15415
I42
VSimpleName: dsStmt
p15416
tp15417
I1
s(Vinsert
p15418
I42
VSimpleName: mysqlVisitor
p15419
tp15420
I2
s(Vinsert
p15421
I43
VSimpleType: SQLUseStatement
p15422
tp15423
I4
s(Vinsert
p15424
I45
VStringLiteral: "\u005ct, DECODE(locked_mode, 1, 'NULL', 2, 'SS - SUB SHARE', 3, 'SX - SUB EXCLUSIVE', 4, 'S - SHARE', 5, 'SSX - SHARE/SUB EXCLUSIVE', 6, 'X - EXCLUSIVE') AS Lock_mode\u005cn"
p15425
tp15426
I1
s(Vinsert
p15427
I45
VStringLiteral: "bvt/parser/oracle-8.txt"
p15428
tp15429
I1
s(Vinsert
p15430
I42
VSimpleName: hash1
p15431
tp15432
I1
s(Vinsert
p15433
I40
VQualifiedName: x.expr
p15434
tp15435
I1
s(Vinsert
p15436
I42
VSimpleName: relationalRest
p15437
tp15438
I1
s(Vinsert
p15439
I45
VStringLiteral: "\u005cnb.customer_id,"
p15440
tp15441
I1
s(Vinsert
p15442
I40
VQualifiedName: Token.GROUP
p15443
tp15444
I2
s(Vinsert
p15445
I45
VStringLiteral: "\u005cn\u005ctcommission_pct NUMBER(7, 2),"
p15446
tp15447
I6
s(Vinsert
p15448
I42
VSimpleName: formatMySql
p15449
tp15450
I4
s(Vinsert
p15451
I43
VSimpleType: SpringStat
p15452
tp15453
I3
s(Vinsert
p15454
I42
VSimpleName: getWild
p15455
tp15456
I1
s(Vinsert
p15457
I43
VSimpleType: HResultSetMetaData
p15458
tp15459
I2
s(Vinsert
p15460
I42
VSimpleName: generateConnectionId
p15461
tp15462
I2
s(Vinsert
p15463
I45
VStringLiteral: "ALTER TABLE abc_dev.tdl_mytable_xx MERGE SMALLFILES;"
p15464
tp15465
I1
s(Vinsert
p15466
I42
VSimpleName: getUnresolveList
p15467
tp15468
I3
s(Vinsert
p15469
I45
VStringLiteral: "ExecuteCount"
p15470
tp15471
I1
s(Vinsert
p15472
I42
VSimpleName: TeradataAnalyticWindowing
p15473
tp15474
I1
s(Vinsert
p15475
I45
VStringLiteral: "show tables"
p15476
tp15477
I1
s(Vinsert
p15478
I42
VSimpleName: Trans
p15479
tp15480
I1
s(Vinsert
p15481
I45
VStringLiteral: "The value is "
p15482
tp15483
I2
s(Vinsert
p15484
I45
VStringLiteral: "jdbc:log4jdbc:oracle:"
p15485
tp15486
I1
s(Vinsert
p15487
I42
VSimpleName: ex
p15488
tp15489
I81
s(Vinsert
p15490
I45
VStringLiteral: "select sequence_name from all_sequences  "
p15491
tp15492
I2
s(Vinsert
p15493
I45
VStringLiteral: " FIRST"
p15494
tp15495
I1
s(Vinsert
p15496
I43
VSimpleType: SpringMethodStat
p15497
tp15498
I1
s(Vinsert
p15499
I45
VStringLiteral: "mergeStat"
p15500
tp15501
I2
s(Vinsert
p15502
I42
VSimpleName: MySqlAlterTableChangeColumn
p15503
tp15504
I1
s(Vinsert
p15505
I40
VQualifiedName: SQLIfStatement.ElseIf
p15506
tp15507
I3
s(Vinsert
p15508
I45
VStringLiteral: "com.alibaba.jdbc.AlibabaDriver"
p15509
tp15510
I1
s(Vinsert
p15511
I42
VSimpleName: parameter
p15512
tp15513
I15
s(Vinsert
p15514
I45
VStringLiteral: "os.name"
p15515
tp15516
I1
s(Vinsert
p15517
I45
VStringLiteral: "language java name '"
p15518
tp15519
I1
s(Vinsert
p15520
I45
VStringLiteral: "SELECT CAST(duplications_index_seq.NEXTVAL AS NUMBER(38)) AS \u005c"ID\u005c", project_snapshot_id, snapshot_id, hash, index_in_file\u005cn"
p15521
tp15522
I1
s(Vinsert
p15523
I45
VStringLiteral: "INTERVAL YEAR"
p15524
tp15525
I1
s(Vinsert
p15526
I45
VStringLiteral: "TODO "
p15527
tp15528
I12
s(Vinsert
p15529
I45
VStringLiteral: "publicKey"
p15530
tp15531
I1
s(Vinsert
p15532
I45
VStringLiteral: "nvarchar"
p15533
tp15534
I1
s(Vinsert
p15535
I45
VStringLiteral: " FROM notice_close_node host left join sys_user user on user.id = host.modifier_id"
p15536
tp15537
I1
s(Vinsert
p15538
I42
VSimpleName: setValidproc
p15539
tp15540
I1
s(Vinsert
p15541
I43
VSimpleType: SQLQueryExpr
p15542
tp15543
I10
s(Vinsert
p15544
I45
VStringLiteral: "queue_on_pk "
p15545
tp15546
I1
s(Vinsert
p15547
I42
VSimpleName: physicalConn
p15548
tp15549
I2
s(Vinsert
p15550
I42
VSimpleName: setColumnNames
p15551
tp15552
I1
s(Vinsert
p15553
I42
VSimpleName: stmt_1_B
p15554
tp15555
I1
s(Vinsert
p15556
I42
VSimpleName: primaryRest
p15557
tp15558
I4
s(Vinsert
p15559
I45
VStringLiteral: "ADD "
p15560
tp15561
I2
s(Vinsert
p15562
I43
VSimpleType: SQLExprParser
p15563
tp15564
I9
s(Vinsert
p15565
I40
VQualifiedName: Token.DOT
p15566
tp15567
I2
s(Vinsert
p15568
I42
VSimpleName: getMaxWait
p15569
tp15570
I1
s(Vinsert
p15571
I42
VSimpleName: r
p15572
tp15573
I5
s(Vinsert
p15574
I42
VSimpleName: clearWarnings
p15575
tp15576
I1
s(Vinsert
p15577
I42
VSimpleName: SESSION_USER_KEY
p15578
tp15579
I2
s(Vinsert
p15580
I42
VSimpleName: test_insertRow
p15581
tp15582
I1
s(Vinsert
p15583
I42
VSimpleName: MySqlInsertStatement
p15584
tp15585
I37
s(Vinsert
p15586
I42
VSimpleName: period
p15587
tp15588
I2
s(Vinsert
p15589
I42
VSimpleName: methodParam
p15590
tp15591
I1
s(Vinsert
p15592
I45
VStringLiteral: "\u005cnPARTITION BY RANGE (credit_limit)"
p15593
tp15594
I2
s(Vinsert
p15595
I45
VStringLiteral: "LOCK TABLES `m_rpt_adgroupeffect` READ /*!32311 LOCAL */"
p15596
tp15597
I1
s(Vinsert
p15598
I42
VSimpleName: reset
p15599
tp15600
I36
s(Vinsert
p15601
I42
VSimpleName: proExpr
p15602
tp15603
I4
s(Vinsert
p15604
I45
VStringLiteral: "="
p15605
tp15606
I1
s(Vinsert
p15607
I45
VStringLiteral: "OPTIMIZE "
p15608
tp15609
I1
s(Vinsert
p15610
I42
VSimpleName: getUpdateCountMax
p15611
tp15612
I1
s(Vinsert
p15613
I42
VSimpleName: JSONUtils
p15614
tp15615
I7
s(Vinsert
p15616
I45
VStringLiteral: "\u005cn\u005ctweight_class NUMBER(1),"
p15617
tp15618
I2
s(Vinsert
p15619
I43
VSimpleType: FieldInfo
p15620
tp15621
I2
s(Vinsert
p15622
I42
VSimpleName: executeHandler
p15623
tp15624
I3
s(Vinsert
p15625
I42
VSimpleName: test_distribute_by
p15626
tp15627
I4
s(Vinsert
p15628
I45
VStringLiteral: "WHERE cq.status = ? AND NOT EXISTS (SELECT ? FROM ce_queue cq2 WHERE cq.component_uuid = cq2.component_uuid AND cq2.status <> ?) "
p15629
tp15630
I1
s(Vinsert
p15631
I42
VSimpleName: getSchemas
p15632
tp15633
I1
s(Vinsert
p15634
I45
VStringLiteral: "\u005ctSELECT *\u005cn"
p15635
tp15636
I2
s(Vinsert
p15637
I42
VSimpleName: autoGeneratedKeys
p15638
tp15639
I1
s(Vinsert
p15640
I42
VSimpleName: incrementExecuteCount
p15641
tp15642
I1
s(Vinsert
p15643
I42
VSimpleName: isEmpty
p15644
tp15645
I17
s(Vinsert
p15646
I45
VStringLiteral: "\u005cn\u005ct),"
p15647
tp15648
I4
s(Vinsert
p15649
I42
VSimpleName: initialSize
p15650
tp15651
I4
s(Vinsert
p15652
I45
VStringLiteral: "\u005ct\u005ct\u005ctSET commission_pct = commission_pct + comm_incr;\u005cn"
p15653
tp15654
I1
s(Vinsert
p15655
I43
VSimpleType: MethodInfo
p15656
tp15657
I1
s(Vinsert
p15658
I43
VSimpleType: NotNullConstraint
p15659
tp15660
I1
s(Vinsert
p15661
I42
VSimpleName: vms
p15662
tp15663
I1
s(Vinsert
p15664
I45
VStringLiteral: "t1.f0"
p15665
tp15666
I1
s(Vinsert
p15667
I42
VSimpleName: unit
p15668
tp15669
I6
s(Vinsert
p15670
I42
VSimpleName: getNotEmptySignalCount
p15671
tp15672
I1
s(Vinsert
p15673
I45
VStringLiteral: "\u005cn --c_1"
p15674
tp15675
I1
s(Vinsert
p15676
I43
VSimpleType: MySqlLockTableStatement
p15677
tp15678
I2
s(Vinsert
p15679
I42
VSimpleName: unaryExpr
p15680
tp15681
I1
s(Vinsert
p15682
I42
VSimpleName: getParamType
p15683
tp15684
I3
s(Vinsert
p15685
I42
VSimpleName: getMethodStatDataList
p15686
tp15687
I1
s(Vinsert
p15688
I42
VSimpleName: OdpsShowGrantsStmt
p15689
tp15690
I1
s(Vinsert
p15691
I42
VSimpleName: getStatements
p15692
tp15693
I9
s(Vinsert
p15694
I45
VStringLiteral: "OFFSET"
p15695
tp15696
I2
s(Vinsert
p15697
I45
VStringLiteral: " UNION ALL SELECT  a  from tt "
p15698
tp15699
I1
s(Vinsert
p15700
I42
VSimpleName: setContextClassLoader
p15701
tp15702
I1
s(Vinsert
p15703
I45
VStringLiteral: "parts"
p15704
tp15705
I1
s(Vinsert
p15706
I45
VStringLiteral: "deallocate prepare "
p15707
tp15708
I1
s(Vinsert
p15709
I40
VQualifiedName: Token.TABLESPACE
p15710
tp15711
I2
s(Vinsert
p15712
I45
VStringLiteral: " select /* + mapjoin(a) */"
p15713
tp15714
I1
s(Vinsert
p15715
I42
VSimpleName: setAccessible
p15716
tp15717
I8
s(Vinsert
p15718
I43
VSimpleType: CommunicationsException
p15719
tp15720
I1
s(Vinsert
p15721
I45
VStringLiteral: ") xx"
p15722
tp15723
I1
s(Vinsert
p15724
I45
VStringLiteral: "[[1200000,1250000]]"
p15725
tp15726
I1
s(Vinsert
p15727
I42
VSimpleName: eq
p15728
tp15729
I5
s(Vinsert
p15730
I45
VStringLiteral: ", ?"
p15731
tp15732
I1
s(Vinsert
p15733
I40
VQualifiedName: x.constant
p15734
tp15735
I1
s(Vinsert
p15736
I43
VSimpleType: SQLScriptCommitStatement
p15737
tp15738
I1
s(Vinsert
p15739
I42
VSimpleName: h2
p15740
tp15741
I4
s(Vinsert
p15742
I42
VSimpleName: stmtProxy
p15743
tp15744
I1
s(Vinsert
p15745
I45
VStringLiteral: "\u005ct\u005ctFROM graph g\u005cn"
p15746
tp15747
I1
s(Vinsert
p15748
I42
VSimpleName: HiveStatementParser
p15749
tp15750
I1
s(Vinsert
p15751
I9
VBooleanLiteral: true
p15752
tp15753
I180
s(Vinsert
p15754
I43
VSimpleType: OracleAnalyticWindowing
p15755
tp15756
I1
s(Vinsert
p15757
I45
VStringLiteral: "REMOVE STATISTIC tbl_shop COLUMN_SUM shop_name"
p15758
tp15759
I1
s(Vinsert
p15760
I43
VSimpleType: SybaseExceptionSorter
p15761
tp15762
I2
s(Vinsert
p15763
I42
VSimpleName: percent
p15764
tp15765
I1
s(Vinsert
p15766
I58
VVariableDeclarationExpression
p15767
tp15768
I59
s(Vinsert
p15769
I45
VStringLiteral: "com/alibaba/druid/jmx/spring_stat_export.xml"
p15770
tp15771
I1
s(Vinsert
p15772
I42
VSimpleName: dataSourceDataMap
p15773
tp15774
I2
s(Vinsert
p15775
I40
VQualifiedName: Token.BEGIN
p15776
tp15777
I3
s(Vinsert
p15778
I42
VSimpleName: count
p15779
tp15780
I31
s(Vinsert
p15781
I74
VParameterizedType: ConcurrentHashMap<String,DruidDataSource>
p15782
tp15783
I1
s(Vinsert
p15784
I45
VStringLiteral: "analyze table t partition(pt='1') compute statistics"
p15785
tp15786
I1
s(Vinsert
p15787
I42
VSimpleName: x0
p15788
tp15789
I1
s(Vinsert
p15790
I42
VSimpleName: hasConstaint
p15791
tp15792
I1
s(Vinsert
p15793
I42
VSimpleName: pattIdxEnd
p15794
tp15795
I1
s(Vinsert
p15796
I42
VSimpleName: T
p15797
tp15798
I8
s(Vinsert
p15799
I42
VSimpleName: parameterizeHash
p15800
tp15801
I1
s(Vinsert
p15802
I42
VSimpleName: test_false_1
p15803
tp15804
I3
s(Vinsert
p15805
I42
VSimpleName: getLastException
p15806
tp15807
I1
s(Vinsert
p15808
I42
VSimpleName: column
p15809
tp15810
I141
s(Vinsert
p15811
I42
VSimpleName: incrementCachedPreparedStatementCount
p15812
tp15813
I2
s(Vinsert
p15814
I42
VSimpleName: Option
p15815
tp15816
I9
s(Vinsert
p15817
I42
VSimpleName: setRenameTo
p15818
tp15819
I2
s(Vinsert
p15820
I43
VSimpleType: WallConditionContext
p15821
tp15822
I4
s(Vinsert
p15823
I42
VSimpleName: EvalLikeTest
p15824
tp15825
I1
s(Vinsert
p15826
I42
VSimpleName: getConnectCount
p15827
tp15828
I5
s(Vinsert
p15829
I42
VSimpleName: getSqlMapClient
p15830
tp15831
I2
s(Vinsert
p15832
I40
VQualifiedName: OdpsStatisticClause.ExpressionCondition
p15833
tp15834
I1
s(Vinsert
p15835
I42
VSimpleName: test_mergeCall_oracle
p15836
tp15837
I1
s(Vinsert
p15838
I45
VStringLiteral: "\u005cn\u005ct\u005ctOR d.indkey[6] = a.attnum"
p15839
tp15840
I1
s(Vinsert
p15841
I42
VSimpleName: openProxySession
p15842
tp15843
I1
s(Vinsert
p15844
I42
VSimpleName: prefix
p15845
tp15846
I1
s(Vinsert
p15847
I42
VSimpleName: K
p15848
tp15849
I3
s(Vinsert
p15850
I42
VSimpleName: fill
p15851
tp15852
I1
s(Vinsert
p15853
I39
VPrimitiveType: double
p15854
tp15855
I2
s(Vinsert
p15856
I42
VSimpleName: map2
p15857
tp15858
I1
s(Vinsert
p15859
I42
VSimpleName: properties
p15860
tp15861
I62
s(Vinsert
p15862
I45
VStringLiteral: "\u005ct\u005ctIF I <= T_COUNT THEN\u005cn"
p15863
tp15864
I1
s(Vinsert
p15865
I42
VSimpleName: getFactoring
p15866
tp15867
I1
s(Vinsert
p15868
I42
VSimpleName: PGExtractExpr
p15869
tp15870
I5
s(Vinsert
p15871
I45
VStringLiteral: "\u005ct\u005ct\u005ctFLASH_CACHE DEFAULT\u005cn"
p15872
tp15873
I3
s(Vinsert
p15874
I42
VSimpleName: addr
p15875
tp15876
I3
s(Vinsert
p15877
I45
VStringLiteral: "group by tt.os, \u005cn"
p15878
tp15879
I1
s(Vinsert
p15880
I42
VSimpleName: matchAgainstExpr
p15881
tp15882
I1
s(Vinsert
p15883
I42
VSimpleName: indexIn
p15884
tp15885
I3
s(Vinsert
p15886
I43
VSimpleType: Constructor
p15887
tp15888
I1
s(Vinsert
p15889
I42
VSimpleName: PGSQLStatementParser
p15890
tp15891
I9
s(Vinsert
p15892
I42
VSimpleName: OracleSelect
p15893
tp15894
I1
s(Vinsert
p15895
I45
VStringLiteral: "\u005c", CachedStatementCount:"
p15896
tp15897
I1
s(Vinsert
p15898
I74
VParameterizedType: List<Object>
p15899
tp15900
I11
s(Vinsert
p15901
I40
VQualifiedName: Token.ERROR
p15902
tp15903
I2
s(Vinsert
p15904
I42
VSimpleName: setRightComponent
p15905
tp15906
I2
s(Vinsert
p15907
I42
VSimpleName: parseCreateProcedure
p15908
tp15909
I2
s(Vinsert
p15910
I42
VSimpleName: OracleASTVisitor
p15911
tp15912
I66
s(Vinsert
p15913
I42
VSimpleName: preparedStatement_executeUpdate
p15914
tp15915
I1
s(Vinsert
p15916
I42
VSimpleName: getPreparedStatementFactory
p15917
tp15918
I1
s(Vinsert
p15919
I45
VStringLiteral: "\u005cn\u005ctstate_province VARCHAR2(25),"
p15920
tp15921
I4
s(Vinsert
p15922
I45
VStringLiteral: "druid.testOnBorrow"
p15923
tp15924
I1
s(Vinsert
p15925
I42
VSimpleName: errorLogs
p15926
tp15927
I2
s(Vinsert
p15928
I45
VStringLiteral: "\u005cn\u005ctPARTITION rest VALUES (DEFAULT)"
p15929
tp15930
I2
s(Vinsert
p15931
I45
VStringLiteral: "\u005ct\u005ctAND CAST(b.paid_date AS varchar(10)) <= '2017-06-30'\u005cn"
p15932
tp15933
I1
s(Vinsert
p15934
I43
VSimpleType: OracleMethodInvokeStatement
p15935
tp15936
I1
s(Vinsert
p15937
I43
VSimpleType: SQLStatementParser
p15938
tp15939
I16
s(Vinsert
p15940
I42
VSimpleName: MonitorDaoJdbcImpl
p15941
tp15942
I2
s(Vinsert
p15943
I42
VSimpleName: SQLAlterTableAddForeignKey
p15944
tp15945
I3
s(Vinsert
p15946
I42
VSimpleName: parserManager
p15947
tp15948
I1
s(Vinsert
p15949
I45
VStringLiteral: "WHERE"
p15950
tp15951
I4
s(Vinsert
p15952
I42
VSimpleName: SQLSelectGroupByClause
p15953
tp15954
I9
s(Vinsert
p15955
I40
VQualifiedName: join.right
p15956
tp15957
I1
s(Vinsert
p15958
I45
VStringLiteral: "\u005cn\u005ct\u005c"ORDER_INDEX\u005c" NUMBER(38, 0),"
p15959
tp15960
I2
s(Vinsert
p15961
I42
VSimpleName: computeUserAgent
p15962
tp15963
I2
s(Vinsert
p15964
I42
VSimpleName: updateFloat
p15965
tp15966
I1
s(Vinsert
p15967
I43
VSimpleType: MonitorCluster
p15968
tp15969
I2
s(Vinsert
p15970
I42
VSimpleName: tableSource
p15971
tp15972
I70
s(Vinsert
p15973
I42
VSimpleName: parser
p15974
tp15975
I901
s(Vinsert
p15976
I45
VStringLiteral: "| c_mediumtext | mediumtext   | NO   |     | NULL                |                             |\u005cn"
p15977
tp15978
I1
s(Vinsert
p15979
I45
VStringLiteral: "coditions : "
p15980
tp15981
I16
s(Vinsert
p15982
I42
VSimpleName: getMockConnection
p15983
tp15984
I1
s(Vinsert
p15985
I42
VSimpleName: assertTrue
p15986
tp15987
I234
s(Vinsert
p15988
I42
VSimpleName: range
p15989
tp15990
I2
s(Vinsert
p15991
I45
VStringLiteral: "\u005ct\u005ctOR A.COUNTRY LIKE ('%' || ? || '%')\u005cn"
p15992
tp15993
I1
s(Vinsert
p15994
I42
VSimpleName: addPartition
p15995
tp15996
I13
s(Vinsert
p15997
I45
VStringLiteral: "\u005cn\u005ctPARTITION p3 VALUES LESS THAN MAXVALUE"
p15998
tp15999
I2
s(Vinsert
p16000
I42
VSimpleName: fieldNames
p16001
tp16002
I2
s(Vinsert
p16003
I45
VStringLiteral: "\u005ctand prov in (select prov\u005cn"
p16004
tp16005
I1
s(Vinsert
p16006
I45
VStringLiteral: "INSERT INTO T01_CHECKIN_CUSTOMER"
p16007
tp16008
I1
s(Vinsert
p16009
I43
VSimpleType: ConnectionProxy
p16010
tp16011
I5
s(Vinsert
p16012
I42
VSimpleName: MultiDataSourceStatement
p16013
tp16014
I2
s(Vinsert
p16015
I42
VSimpleName: stmtList
p16016
tp16017
I244
s(Vinsert
p16018
I42
VSimpleName: SQLDropTableStatement
p16019
tp16020
I1
s(Vinsert
p16021
I42
VSimpleName: parseMerge
p16022
tp16023
I1
s(Vinsert
p16024
I42
VSimpleName: setUnit
p16025
tp16026
I1
s(Vinsert
p16027
I42
VSimpleName: pid
p16028
tp16029
I5
s(Vinsert
p16030
I43
VSimpleType: SQLAllColumnExpr
p16031
tp16032
I4
s(Vinsert
p16033
I45
VStringLiteral: " initial_size "
p16034
tp16035
I1
s(Vinsert
p16036
I42
VSimpleName: connection_setSavepoint
p16037
tp16038
I1
s(Vinsert
p16039
I42
VSimpleName: literal
p16040
tp16041
I2
s(Vinsert
p16042
I42
VSimpleName: connectionLog
p16043
tp16044
I2
s(Vinsert
p16045
I43
VSimpleType: MySqlUnionQuery
p16046
tp16047
I1
s(Vinsert
p16048
I40
VQualifiedName: x.type
p16049
tp16050
I3
s(Vinsert
p16051
I45
VStringLiteral: "\u005cn\u005ctINTO :NEW.\u005c"ID\u005c""
p16052
tp16053
I2
s(Vinsert
p16054
I43
VSimpleType: OracleStorageClause
p16055
tp16056
I2
s(Vinsert
p16057
I43
VSimpleType: PGExtractExpr
p16058
tp16059
I5
s(Vinsert
p16060
I45
VStringLiteral: "        where 1=1  and created > '2013-07-28' "
p16061
tp16062
I1
s(Vinsert
p16063
I42
VSimpleName: getDruidDataSourceInstances
p16064
tp16065
I8
s(Vinsert
p16066
I42
VSimpleName: binaryString
p16067
tp16068
I1
s(Vinsert
p16069
I42
VSimpleName: toName
p16070
tp16071
I1
s(Vinsert
p16072
I43
VSimpleType: LocalVirtualMachine
p16073
tp16074
I1
s(Vinsert
p16075
I45
VStringLiteral: "LastAccessTime"
p16076
tp16077
I1
s(Vinsert
p16078
I42
VSimpleName: startFGC
p16079
tp16080
I2
s(Vinsert
p16081
I45
VStringLiteral: "CREATE OR REPLACE DEFINER = 'ivan'@'%'\u005cn"
p16082
tp16083
I1
s(Vinsert
p16084
I42
VSimpleName: NullsFirst
p16085
tp16086
I2
s(Vinsert
p16087
I45
VStringLiteral: "DROP INDEX "
p16088
tp16089
I1
s(Vinsert
p16090
I42
VSimpleName: passwordCallbackClassName
p16091
tp16092
I1
s(Vinsert
p16093
I42
VSimpleName: DB2ValuesStatement
p16094
tp16095
I1
s(Vinsert
p16096
I42
VSimpleName: isUpdateWhereNoneCheck
p16097
tp16098
I1
s(Vinsert
p16099
I42
VSimpleName: strategyList
p16100
tp16101
I1
s(Vinsert
p16102
I42
VSimpleName: Fnv64_lower_test
p16103
tp16104
I1
s(Vinsert
p16105
I34
VNumberLiteral: 11
p16106
tp16107
I1
s(Vinsert
p16108
I45
VStringLiteral: "\u005cn\u005ctcust_address CUST_ADDRESS_TYP,"
p16109
tp16110
I2
s(Vinsert
p16111
I42
VSimpleName: file
p16112
tp16113
I6
s(Vinsert
p16114
I42
VSimpleName: OracleDropSequenceStatement
p16115
tp16116
I1
s(Vinsert
p16117
I40
VQualifiedName: SQLBinaryOperator.Subtract
p16118
tp16119
I1
s(Vinsert
p16120
I42
VSimpleName: EvalMethodTest_left
p16121
tp16122
I1
s(Vinsert
p16123
I42
VSimpleName: isDropDefault
p16124
tp16125
I1
s(Vinsert
p16126
I42
VSimpleName: toLowerCase
p16127
tp16128
I29
s(Vinsert
p16129
I42
VSimpleName: getRowPrefetch
p16130
tp16131
I1
s(Vinsert
p16132
I42
VSimpleName: addInitParameter
p16133
tp16134
I1
s(Vinsert
p16135
I42
VSimpleName: ATTR_SQL_STAT
p16136
tp16137
I1
s(Vinsert
p16138
I45
VStringLiteral: "\u005ctplsql_block := 'BEGIN emp_pkg.raise_salary(:id, :amt); END;';\u005cn"
p16139
tp16140
I1
s(Vinsert
p16141
I45
VStringLiteral: "INDEX DIRECTORY"
p16142
tp16143
I1
s(Vinsert
p16144
I42
VSimpleName: getServletPath
p16145
tp16146
I1
s(Vinsert
p16147
I42
VSimpleName: threadId
p16148
tp16149
I5
s(Vinsert
p16150
I42
VSimpleName: SpringMethodInfo
p16151
tp16152
I1
s(Vinsert
p16153
I42
VSimpleName: HttpServletResponse
p16154
tp16155
I1
s(Vinsert
p16156
I42
VSimpleName: signal
p16157
tp16158
I1
s(Vinsert
p16159
I42
VSimpleName: getStatDataForMBean
p16160
tp16161
I1
s(Vinsert
p16162
I74
VParameterizedType: AtomicIntegerFieldUpdater<DruidAbstractDataSource>
p16163
tp16164
I1
s(Vinsert
p16165
I42
VSimpleName: instance
p16166
tp16167
I1
s(Vinsert
p16168
I42
VSimpleName: selectQuery
p16169
tp16170
I4
s(Vinsert
p16171
I42
VSimpleName: openStream
p16172
tp16173
I1
s(Vinsert
p16174
I42
VSimpleName: prop
p16175
tp16176
I5
s(Vinsert
p16177
I42
VSimpleName: allawTrueWhere
p16178
tp16179
I1
s(Vinsert
p16180
I42
VSimpleName: getErrorLastTime
p16181
tp16182
I1
s(Vinsert
p16183
I42
VSimpleName: quote
p16184
tp16185
I8
s(Vinsert
p16186
I42
VSimpleName: startIndex
p16187
tp16188
I1
s(Vinsert
p16189
I42
VSimpleName: getUrlPattern
p16190
tp16191
I4
s(Vinsert
p16192
I45
VStringLiteral: ")\u005cn"
p16193
tp16194
I19
s(Vinsert
p16195
I42
VSimpleName: shortValue
p16196
tp16197
I1
s(Vinsert
p16198
I45
VStringLiteral: "java.specification.version"
p16199
tp16200
I1
s(Vinsert
p16201
I45
VStringLiteral: "SET last_name = 'Anderson'\u005cn"
p16202
tp16203
I1
s(Vinsert
p16204
I42
VSimpleName: getBeforeCommentsDirect
p16205
tp16206
I2
s(Vinsert
p16207
I42
VSimpleName: SQLNumericLiteralExpr
p16208
tp16209
I9
s(Vinsert
p16210
I42
VSimpleName: activeCount
p16211
tp16212
I2
s(Vinsert
p16213
I42
VSimpleName: ORACLE
p16214
tp16215
I1
s(Vinsert
p16216
I42
VSimpleName: SQLPrimaryKey
p16217
tp16218
I2
s(Vinsert
p16219
I43
VSimpleType: HttpURLConnection
p16220
tp16221
I1
s(Vinsert
p16222
I45
VStringLiteral: "version"
p16223
tp16224
I1
s(Vinsert
p16225
I42
VSimpleName: getParameterTypes
p16226
tp16227
I2
s(Vinsert
p16228
I40
VQualifiedName: x.logging
p16229
tp16230
I1
s(Vinsert
p16231
I42
VSimpleName: logType
p16232
tp16233
I2
s(Vinsert
p16234
I45
VStringLiteral: "\u005cn\u005ctage INTEGER,"
p16235
tp16236
I2
s(Vinsert
p16237
I45
VStringLiteral: "conditions : "
p16238
tp16239
I1
s(Vinsert
p16240
I40
VQualifiedName: Token.COLUMN
p16241
tp16242
I1
s(Vinsert
p16243
I42
VSimpleName: getMasterUrl
p16244
tp16245
I1
s(Vinsert
p16246
I42
VSimpleName: violationCount
p16247
tp16248
I2
s(Vinsert
p16249
I42
VSimpleName: isRegisterToSystemProperty
p16250
tp16251
I1
s(Vinsert
p16252
I42
VSimpleName: partitionByRange
p16253
tp16254
I2
s(Vinsert
p16255
I45
VStringLiteral: " MIN_ROWS "
p16256
tp16257
I1
s(Vinsert
p16258
I34
VNumberLiteral: 0
p16259
tp16260
I714
s(Vinsert
p16261
I42
VSimpleName: ConnectionsPanel
p16262
tp16263
I2
s(Vinsert
p16264
I42
VSimpleName: oracleConn
p16265
tp16266
I16
s(Vinsert
p16267
I45
VStringLiteral: "RESTRICT"
p16268
tp16269
I3
s(Vinsert
p16270
I42
VSimpleName: exprParser
p16271
tp16272
I135
s(Vinsert
p16273
I42
VSimpleName: getUpdate
p16274
tp16275
I2
s(Vinsert
p16276
I42
VSimpleName: insertStatement
p16277
tp16278
I7
s(Vinsert
p16279
I43
VSimpleType: ColumnMetaData
p16280
tp16281
I7
s(Vinsert
p16282
I42
VSimpleName: setOption
p16283
tp16284
I3
s(Vinsert
p16285
I42
VSimpleName: fetchRowSize
p16286
tp16287
I1
s(Vinsert
p16288
I42
VSimpleName: decrypt
p16289
tp16290
I4
s(Vinsert
p16291
I43
VSimpleType: Column
p16292
tp16293
I16
s(Vinsert
p16294
I42
VSimpleName: alias_lcase
p16295
tp16296
I1
s(Vinsert
p16297
I42
VSimpleName: doFinal
p16298
tp16299
I1
s(Vinsert
p16300
I42
VSimpleName: getModulus
p16301
tp16302
I1
s(Vinsert
p16303
I34
VNumberLiteral: 0.0D
p16304
tp16305
I1
s(Vinsert
p16306
I40
VQualifiedName: x.pctthreshold
p16307
tp16308
I1
s(Vinsert
p16309
I45
VStringLiteral: "| c_char       | char(10)     | NO   |     | NULL    |       |\u005cn"
p16310
tp16311
I1
s(Vinsert
p16312
I42
VSimpleName: OracleValidConnectionChecker
p16313
tp16314
I2
s(Vinsert
p16315
I42
VSimpleName: setCompress
p16316
tp16317
I1
s(Vinsert
p16318
I42
VSimpleName: getObjectName
p16319
tp16320
I2
s(Vinsert
p16321
I42
VSimpleName: columnHash
p16322
tp16323
I1
s(Vinsert
p16324
I42
VSimpleName: getSQLState
p16325
tp16326
I1
s(Vinsert
p16327
I45
VStringLiteral: "\u005cn--comment1 goes here"
p16328
tp16329
I1
s(Vinsert
p16330
I43
VSimpleType: PGShowStatement
p16331
tp16332
I3
s(Vinsert
p16333
I42
VSimpleName: selectQueryBlock
p16334
tp16335
I3
s(Vinsert
p16336
I42
VSimpleName: getNotificationListener
p16337
tp16338
I1
s(Vinsert
p16339
I40
VQualifiedName: SQLParserFeature.KeepInsertValueClauseOriginalString
p16340
tp16341
I2
s(Vinsert
p16342
I45
VStringLiteral: "\u005cn\u005ctCONSTRAINT PK_cwd_directory PRIMARY KEY (ID)"
p16343
tp16344
I1
s(Vinsert
p16345
I42
VSimpleName: isHighPriority
p16346
tp16347
I1
s(Vinsert
p16348
I45
VStringLiteral: "\u005cn\u005ctUSING INDEX PCTFREE 20 TABLESPACE stocks"
p16349
tp16350
I2
s(Vinsert
p16351
I42
VSimpleName: tables
p16352
tp16353
I4
s(Vinsert
p16354
I45
VStringLiteral: "UNIQUE "
p16355
tp16356
I2
s(Vinsert
p16357
I42
VSimpleName: setQuery
p16358
tp16359
I7
s(Vinsert
p16360
I42
VSimpleName: ProfileEntry
p16361
tp16362
I1
s(Vinsert
p16363
I43
VSimpleType: SQLBinaryOpExpr
p16364
tp16365
I76
s(Vinsert
p16366
I45
VStringLiteral: "\u005ct\u005ctOR A.PROVINCE LIKE ('%' || ? || '%')\u005cn"
p16367
tp16368
I1
s(Vinsert
p16369
I45
VStringLiteral: "\u005ctc_blob blob,\u005cn"
p16370
tp16371
I2
s(Vinsert
p16372
I42
VSimpleName: OracleSelectJoin
p16373
tp16374
I1
s(Vinsert
p16375
I42
VSimpleName: classForName
p16376
tp16377
I1
s(Vinsert
p16378
I43
VSimpleType: OracleCreateSynonymStatement
p16379
tp16380
I2
s(Vinsert
p16381
I45
VStringLiteral: " `Extent1`.`OpeningBank`, "
p16382
tp16383
I1
s(Vinsert
p16384
I45
VStringLiteral: "START"
p16385
tp16386
I2
s(Vinsert
p16387
I42
VSimpleName: ElseIf
p16388
tp16389
I2
s(Vinsert
p16390
I45
VStringLiteral: "select distinct a.col1,a.col2 from test a"
p16391
tp16392
I1
s(Vinsert
p16393
I45
VStringLiteral: "\u005ctVIEW my_view2 (\u005cn"
p16394
tp16395
I1
s(Vinsert
p16396
I42
VSimpleName: exceptionClass
p16397
tp16398
I1
s(Vinsert
p16399
I45
VStringLiteral: "ROLLBACK"
p16400
tp16401
I2
s(Vinsert
p16402
I42
VSimpleName: createSchemaStatVisitor
p16403
tp16404
I98
s(Vinsert
p16405
I45
VStringLiteral: "\u005ctWHERE MKTG_PLAN_LVL3_ID <> MKTG_PLAN_LVL4_ID\u005cn"
p16406
tp16407
I1
s(Vinsert
p16408
I42
VSimpleName: statVisitor
p16409
tp16410
I9
s(Vinsert
p16411
I42
VSimpleName: test_mapping_createTable_oracle
p16412
tp16413
I3
s(Vinsert
p16414
I42
VSimpleName: eventListener
p16415
tp16416
I1
s(Vinsert
p16417
I42
VSimpleName: stmt1
p16418
tp16419
I1
s(Vinsert
p16420
I40
VQualifiedName: JdbcConstants.MARIADB
p16421
tp16422
I1
s(Vinsert
p16423
I42
VSimpleName: getObjectType
p16424
tp16425
I6
s(Vinsert
p16426
I42
VSimpleName: getFetchSize
p16427
tp16428
I1
s(Vinsert
p16429
I42
VSimpleName: createStmtList
p16430
tp16431
I1
s(Vinsert
p16432
I42
VSimpleName: isNaN
p16433
tp16434
I1
s(Vinsert
p16435
I42
VSimpleName: isUpgradePatiting
p16436
tp16437
I1
s(Vinsert
p16438
I45
VStringLiteral: "INSERT INTO employees@remote"
p16439
tp16440
I2
s(Vinsert
p16441
I42
VSimpleName: errorMessage
p16442
tp16443
I1
s(Vinsert
p16444
I40
VQualifiedName: Insert.instance
p16445
tp16446
I1
s(Vinsert
p16447
I45
VStringLiteral: "INSERT OVERWRITE TABLE ff PARTITION (c='c', d='d')\u005cn"
p16448
tp16449
I1
s(Vinsert
p16450
I40
VQualifiedName: x.sqlSecurity
p16451
tp16452
I1
s(Vinsert
p16453
I42
VSimpleName: defaultRowPretch
p16454
tp16455
I1
s(Vinsert
p16456
I42
VSimpleName: OracleForStatement
p16457
tp16458
I1
s(Vinsert
p16459
I42
VSimpleName: startNano
p16460
tp16461
I2
s(Vinsert
p16462
I45
VStringLiteral: "\u005ct\u005ct\u005ctINITIAL 65536\u005cn"
p16463
tp16464
I2
s(Vinsert
p16465
I45
VStringLiteral: "CREATE MATERIALIZED VIEW sales_by_month_by_state\u005cn"
p16466
tp16467
I1
s(Vinsert
p16468
I45
VStringLiteral: "\u005cn\u005ctUSERNAME VARCHAR(255)"
p16469
tp16470
I1
s(Vinsert
p16471
I45
VStringLiteral: "DROP TRIGGER \u005c"AO_4AEACD_WEBHOOK_D367380484\u005c""
p16472
tp16473
I1
s(Vinsert
p16474
I42
VSimpleName: lowBound
p16475
tp16476
I4
s(Vinsert
p16477
I45
VStringLiteral: "\u005ct\u005ct\u005ctand hh = 0\u005cn"
p16478
tp16479
I1
s(Vinsert
p16480
I45
VStringLiteral: ",\u005c"StackTrace\u005c":"
p16481
tp16482
I1
s(Vinsert
p16483
I42
VSimpleName: Throwable
p16484
tp16485
I16
s(Vinsert
p16486
I43
VSimpleType: BufferedReader
p16487
tp16488
I1
s(Vinsert
p16489
I42
VSimpleName: test_ascii
p16490
tp16491
I3
s(Vinsert
p16492
I45
VStringLiteral: "INTERVAL "
p16493
tp16494
I2
s(Vinsert
p16495
I42
VSimpleName: stmt_1_A
p16496
tp16497
I1
s(Vinsert
p16498
I45
VStringLiteral: ", lastValidIdleMillis "
p16499
tp16500
I1
s(Vinsert
p16501
I42
VSimpleName: getParametersSize
p16502
tp16503
I1
s(Vinsert
p16504
I42
VSimpleName: SQLParserFeature
p16505
tp16506
I6
s(Vinsert
p16507
I45
VStringLiteral: "/*test sql*/select age from user where name = 'xx';"
p16508
tp16509
I1
s(Vinsert
p16510
I42
VSimpleName: getConn
p16511
tp16512
I1
s(Vinsert
p16513
I42
VSimpleName: setHaving
p16514
tp16515
I2
s(Vinsert
p16516
I40
VQualifiedName: SQLCaseStatement.Item
p16517
tp16518
I3
s(Vinsert
p16519
I42
VSimpleName: SQLEvalVisitorUtils
p16520
tp16521
I62
s(Vinsert
p16522
I42
VSimpleName: getLock
p16523
tp16524
I1
s(Vinsert
p16525
I42
VSimpleName: socketReadTimeout
p16526
tp16527
I1
s(Vinsert
p16528
I42
VSimpleName: triggerTypeName
p16529
tp16530
I3
s(Vinsert
p16531
I42
VSimpleName: getSignature
p16532
tp16533
I1
s(Vinsert
p16534
I42
VSimpleName: addUrlMappings
p16535
tp16536
I1
s(Vinsert
p16537
I42
VSimpleName: name_0
p16538
tp16539
I1
s(Vinsert
p16540
I43
VSimpleType: StringWriter
p16541
tp16542
I5
s(Vinsert
p16543
I45
VStringLiteral: "SEMI"
p16544
tp16545
I1
s(Vinsert
p16546
I42
VSimpleName: SQLBooleanExpr
p16547
tp16548
I3
s(Vinsert
p16549
I42
VSimpleName: loadDefault
p16550
tp16551
I2
s(Vinsert
p16552
I42
VSimpleName: initInternal
p16553
tp16554
I1
s(Vinsert
p16555
I45
VStringLiteral: "SELECT c from sbtest where id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 or id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0"
p16556
tp16557
I1
s(Vinsert
p16558
I40
VQualifiedName: lexer.token
p16559
tp16560
I14
s(Vinsert
p16561
I40
VQualifiedName: Token.END
p16562
tp16563
I2
s(Vinsert
p16564
I42
VSimpleName: getConfigLoadPeriodMillis
p16565
tp16566
I1
s(Vinsert
p16567
I45
VStringLiteral: "session_user"
p16568
tp16569
I1
s(Vinsert
p16570
I42
VSimpleName: JdbcTraceManagerTest
p16571
tp16572
I1
s(Vinsert
p16573
I42
VSimpleName: XADataSource
p16574
tp16575
I1
s(Vinsert
p16576
I42
VSimpleName: withTies
p16577
tp16578
I1
s(Vinsert
p16579
I42
VSimpleName: paramCount
p16580
tp16581
I1
s(Vinsert
p16582
I42
VSimpleName: toCharArray
p16583
tp16584
I2
s(Vinsert
p16585
I42
VSimpleName: sqlStatInfo
p16586
tp16587
I2
s(Vinsert
p16588
I40
VQualifiedName: Token.SHARE
p16589
tp16590
I2
s(Vinsert
p16591
I45
VStringLiteral: "relationships : "
p16592
tp16593
I7
s(Vinsert
p16594
I42
VSimpleName: getInherits
p16595
tp16596
I2
s(Vinsert
p16597
I42
VSimpleName: getNameAsString
p16598
tp16599
I1
s(Vinsert
p16600
I42
VSimpleName: JdbcUtilsTest2
p16601
tp16602
I1
s(Vinsert
p16603
I40
VQualifiedName: Token.CONTINUE
p16604
tp16605
I5
s(Vinsert
p16606
I42
VSimpleName: rightTableSource
p16607
tp16608
I2
s(Vinsert
p16609
I42
VSimpleName: callableStatement_getObject
p16610
tp16611
I2
s(Vinsert
p16612
I45
VStringLiteral: "\u005ctEND;\u005cn"
p16613
tp16614
I3
s(Vinsert
p16615
I42
VSimpleName: fnv_64_lower_normalized
p16616
tp16617
I7
s(Vinsert
p16618
I42
VSimpleName: Field
p16619
tp16620
I9
s(Vinsert
p16621
I42
VSimpleName: refreshRow
p16622
tp16623
I1
s(Vinsert
p16624
I45
VStringLiteral: "\u005c"ESCROW\u005c""
p16625
tp16626
I1
s(Vinsert
p16627
I45
VStringLiteral: "\u005cn\u005ctconstraint PK_cwd_directory primary key (ID)"
p16628
tp16629
I1
s(Vinsert
p16630
I45
VStringLiteral: "tk"
p16631
tp16632
I2
s(Vinsert
p16633
I43
VSimpleType: Date
p16634
tp16635
I10
s(Vinsert
p16636
I43
VSimpleType: WallTableStat
p16637
tp16638
I8
s(Vinsert
p16639
I43
VSimpleType: SQLAlterTableAddPrimaryKey
p16640
tp16641
I3
s(Vinsert
p16642
I40
VQualifiedName: dataSource.minIdle
p16643
tp16644
I1
s(Vinsert
p16645
I42
VSimpleName: columnsTerminatedBy
p16646
tp16647
I1
s(Vinsert
p16648
I42
VSimpleName: testConnection
p16649
tp16650
I1
s(Vinsert
p16651
I42
VSimpleName: getSqlMapClientTemplate
p16652
tp16653
I2
s(Vinsert
p16654
I42
VSimpleName: identityHashCode
p16655
tp16656
I2
s(Vinsert
p16657
I42
VSimpleName: connHolder
p16658
tp16659
I3
s(Vinsert
p16660
I42
VSimpleName: subSelect
p16661
tp16662
I1
s(Vinsert
p16663
I45
VStringLiteral: "B'"
p16664
tp16665
I1
s(Vinsert
p16666
I45
VStringLiteral: "    ORDER BY id DESC LIMIT 1 \u005cn"
p16667
tp16668
I1
s(Vinsert
p16669
I42
VSimpleName: temp
p16670
tp16671
I2
s(Vinsert
p16672
I45
VStringLiteral: "\u005ct, sum(salary) over (partition by department_id order by last_name, \u005cn"
p16673
tp16674
I1
s(Vinsert
p16675
I42
VSimpleName: connection_rollback
p16676
tp16677
I1
s(Vinsert
p16678
I43
VSimpleType: OracleForeignKey
p16679
tp16680
I1
s(Vinsert
p16681
I45
VStringLiteral: "select count(*) from messages a where a.id in (2 and 1 AND 9881=IF((ORD(MID((IFNULL(CAST(DATABASE() AS CHAR),0x20)),6,1))>117),SLEEP(5),9881)) and a.message <> 'hello' and a.message like 'Little'"
p16682
tp16683
I1
s(Vinsert
p16684
I45
VStringLiteral: "INSERT INTO qrtz_JOB_DETAILS (SCHED_NAME, JOB_NAME, JOB_GROUP, DESCRIPTION, JOB_CLASS_NAME, IS_DURABLE, IS_NONCONCURRENT, IS_UPDATE_DATA, REQUESTS_RECOVERY, JOB_DATA)  VALUES('DefaultQuartzScheduler', 'taobao.item.recommend.delete_368815794_2_35391685928', 'tasks', null, 'cn.agooo.job.TasksJob', 0, 0, 0, 0, x
p16685
tp16686
I1
s(Vinsert
p16687
I42
VSimpleName: getMajorVersion
p16688
tp16689
I7
s(Vinsert
p16690
I45
VStringLiteral: "\u005ct\u005ctFROM menuTemp\u005cn"
p16691
tp16692
I1
s(Vinsert
p16693
I40
VQualifiedName: Token.INDEX
p16694
tp16695
I4
s(Vinsert
p16696
I42
VSimpleName: of
p16697
tp16698
I6
s(Vinsert
p16699
I42
VSimpleName: NoLoggingImpl
p16700
tp16701
I5
s(Vinsert
p16702
I42
VSimpleName: nextTokenValue
p16703
tp16704
I1
s(Vinsert
p16705
I45
VStringLiteral: "\u005ct, utl_raw.cast_to_raw(OWNER_1) AS OWNER_1, AREA_ID_1, utl_raw.cast_to_raw(FIRST_OWNER) AS FIRST_OWNER, FIRST_AREA_ID, utl_raw.cast_to_raw(CONTRACT_ID) AS CONTRACT_ID\u005cn"
p16706
tp16707
I1
s(Vinsert
p16708
I42
VSimpleName: getDefaultExpr
p16709
tp16710
I2
s(Vinsert
p16711
I45
VStringLiteral: "DESCRIBE"
p16712
tp16713
I1
s(Vinsert
p16714
I42
VSimpleName: WeakReference
p16715
tp16716
I1
s(Vinsert
p16717
I45
VStringLiteral: " WITH TIME ZONE "
p16718
tp16719
I1
s(Vinsert
p16720
I42
VSimpleName: ksql
p16721
tp16722
I1
s(Vinsert
p16723
I42
VSimpleName: is
p16724
tp16725
I8
s(Vinsert
p16726
I42
VSimpleName: CallableStatement
p16727
tp16728
I4
s(Vinsert
p16729
I45
VStringLiteral: "PARALLEL_ENABLE\u005cn"
p16730
tp16731
I1
s(Vinsert
p16732
I40
VQualifiedName: CompareOp.LESS_OR_EQUAL
p16733
tp16734
I1
s(Vinsert
p16735
I45
VStringLiteral: "encoding"
p16736
tp16737
I1
s(Vinsert
p16738
I42
VSimpleName: getAndSet
p16739
tp16740
I7
s(Vinsert
p16741
I45
VStringLiteral: "CREATE TRIGGER employee_trigger\u005cn"
p16742
tp16743
I1
s(Vinsert
p16744
I42
VSimpleName: setGuardValue
p16745
tp16746
I1
s(Vinsert
p16747
I42
VSimpleName: getInvokeCount
p16748
tp16749
I2
s(Vinsert
p16750
I45
VStringLiteral: "thread-"
p16751
tp16752
I4
s(Vinsert
p16753
I42
VSimpleName: mapping
p16754
tp16755
I14
s(Vinsert
p16756
I42
VSimpleName: moveToInsertRow
p16757
tp16758
I1
s(Vinsert
p16759
I43
VSimpleType: SQLAnyExpr
p16760
tp16761
I3
s(Vinsert
p16762
I40
VQualifiedName: Token.USE
p16763
tp16764
I2
s(Vinsert
p16765
I42
VSimpleName: MySqlSchemaStatVisitor
p16766
tp16767
I450
s(Vinsert
p16768
I42
VSimpleName: setXmlPath
p16769
tp16770
I1
s(Vinsert
p16771
I45
VStringLiteral: "AS"
p16772
tp16773
I1
s(Vinsert
p16774
I45
VStringLiteral: "KEY"
p16775
tp16776
I3
s(Vinsert
p16777
I42
VSimpleName: setSavepointId
p16778
tp16779
I1
s(Vinsert
p16780
I42
VSimpleName: SQLReturnStatement
p16781
tp16782
I6
s(Vinsert
p16783
I42
VSimpleName: getReturning
p16784
tp16785
I4
s(Vinsert
p16786
I45
VStringLiteral: "\u005ctROLE VARCHAR(100),\u005cn"
p16787
tp16788
I2
s(Vinsert
p16789
I43
VSimpleType: SQLSelectParser
p16790
tp16791
I2
s(Vinsert
p16792
I42
VSimpleName: load
p16793
tp16794
I3
s(Vinsert
p16795
I42
VSimpleName: conn_4
p16796
tp16797
I1
s(Vinsert
p16798
I42
VSimpleName: validDataSourceCheckPeriodMillis
p16799
tp16800
I2
s(Vinsert
p16801
I42
VSimpleName: alterColumn
p16802
tp16803
I3
s(Vinsert
p16804
I42
VSimpleName: Log4JLogger
p16805
tp16806
I2
s(Vinsert
p16807
I45
VStringLiteral: "\u005ct\u005ctTYPE ORACLE_LOADER\u005cn"
p16808
tp16809
I1
s(Vinsert
p16810
I42
VSimpleName: getMinExtents
p16811
tp16812
I1
s(Vinsert
p16813
I43
VSimpleType: SQLIfStatement.ElseIf
p16814
tp16815
I3
s(Vinsert
p16816
I45
VStringLiteral: "CREATE TABLE dbo.AO_B9A0F0_APPLIED_TEMPLATE ( ID INTEGER IDENTITY(1,1) NOT NULL, PROJECT_ID BIGINT CONSTRAINT df_AO_B9A0F0_APPLIED_TEMPLATE_PROJECT_ID DEFAULT 0, PROJECT_TEMPLATE_MODULE_KEY VARCHAR(255), PROJECT_TEMPLATE_WEB_ITEM_KEY VARCHAR(255), CONSTRAINT pk_AO_B9A0F0_APPLIED_TEMPLATE_ID PRIMARY KEY(ID) )"
p16817
tp16818
I1
s(Vinsert
p16819
I42
VSimpleName: SQLSelectItem
p16820
tp16821
I26
s(Vinsert
p16822
I42
VSimpleName: sortBy
p16823
tp16824
I2
s(Vinsert
p16825
I45
VStringLiteral: "OUTFILE"
p16826
tp16827
I1
s(Vinsert
p16828
I42
VSimpleName: exists
p16829
tp16830
I1
s(Vinsert
p16831
I45
VStringLiteral: "\u005ctFOREIGN KEY (GNDM) REFERENCES XT_DM_GN (GNDM)\u005cn"
p16832
tp16833
I1
s(Vinsert
p16834
I42
VSimpleName: scan
p16835
tp16836
I3
s(Vinsert
p16837
I42
VSimpleName: setPoolPreparedStatements
p16838
tp16839
I12
s(Vinsert
p16840
I45
VStringLiteral: "\u005ct\u005ctDEFAULT DIRECTORY \u005c"DIR_MQ\u005c"\u005cn"
p16841
tp16842
I1
s(Vinsert
p16843
I42
VSimpleName: substring
p16844
tp16845
I20
s(Vinsert
p16846
I40
VQualifiedName: Token.DELETE
p16847
tp16848
I4
s(Vinsert
p16849
I42
VSimpleName: infoCount
p16850
tp16851
I4
s(Vinsert
p16852
I42
VSimpleName: OracleDbLinkExpr
p16853
tp16854
I4
s(Vinsert
p16855
I45
VStringLiteral: "jdbc:mock:xxx"
p16856
tp16857
I13
s(Vinsert
p16858
I45
VStringLiteral: "departments"
p16859
tp16860
I1
s(Vinsert
p16861
I74
VParameterizedType: ConcurrentMap<Long,JdbcConnectionStat.Entry>
p16862
tp16863
I1
s(Vinsert
p16864
I42
VSimpleName: MySqlShowProcessListStatement
p16865
tp16866
I4
s(Vinsert
p16867
I42
VSimpleName: test_issue_1
p16868
tp16869
I2
s(Vinsert
p16870
I45
VStringLiteral: "test1\u005cn"
p16871
tp16872
I1
s(Vinsert
p16873
I43
VSimpleType: WallUpdateCheckItem
p16874
tp16875
I7
s(Vinsert
p16876
I42
VSimpleName: returnning
p16877
tp16878
I1
s(Vinsert
p16879
I45
VStringLiteral: "\u005cnTABLESPACE \u005c"USERS\u005c""
p16880
tp16881
I5
s(Vinsert
p16882
I45
VStringLiteral: ") tt\u005cn"
p16883
tp16884
I1
s(Vinsert
p16885
I13
VCharacterLiteral: ' '
p16886
tp16887
I27
s(Vinsert
p16888
I45
VStringLiteral: " INTO ("
p16889
tp16890
I1
s(Vinsert
p16891
I42
VSimpleName: VirtualMachine
p16892
tp16893
I1
s(Vinsert
p16894
I27
VInfixExpression: -
p16895
tp16896
I43
s(Vinsert
p16897
I42
VSimpleName: getResultSetRaw
p16898
tp16899
I1
s(Vinsert
p16900
I42
VSimpleName: isRequireAuth
p16901
tp16902
I1
s(Vinsert
p16903
I45
VStringLiteral: ") /*!40000 ENGINE=INNODB */ /*!40101 CHARACTER SET utf8 COLLATE utf8_general_ci */ "
p16904
tp16905
I1
s(Vinsert
p16906
I45
VStringLiteral: "\u005cn(280, 'Recreation', 121, 1700)"
p16907
tp16908
I2
s(Vinsert
p16909
I45
VStringLiteral: "GROUPING"
p16910
tp16911
I1
s(Vinsert
p16912
I42
VSimpleName: filterArray
p16913
tp16914
I1
s(Vinsert
p16915
I40
VQualifiedName: Integer.MIN_VALUE
p16916
tp16917
I1
s(Vinsert
p16918
I45
VStringLiteral: "FROM employees\u005cn"
p16919
tp16920
I2
s(Vinsert
p16921
I42
VSimpleName: Thread
p16922
tp16923
I44
s(Vinsert
p16924
I42
VSimpleName: Integer
p16925
tp16926
I40
s(Vinsert
p16927
I45
VStringLiteral: " maxvalue "
p16928
tp16929
I1
s(Vinsert
p16930
I45
VStringLiteral: "\u005ctAND osg.quantity > 0\u005cn"
p16931
tp16932
I1
s(Vinsert
p16933
I42
VSimpleName: getValues
p16934
tp16935
I9
s(Vinsert
p16936
I42
VSimpleName: NetworkInterface
p16937
tp16938
I1
s(Vinsert
p16939
I34
VNumberLiteral: 12L
p16940
tp16941
I2
s(Vinsert
p16942
I45
VStringLiteral: "RETURN"
p16943
tp16944
I1
s(Vinsert
p16945
I42
VSimpleName: SQLCastExpr
p16946
tp16947
I5
s(Vinsert
p16948
I42
VSimpleName: EvalMethodTest_lpad
p16949
tp16950
I1
s(Vinsert
p16951
I42
VSimpleName: mock
p16952
tp16953
I1
s(Vinsert
p16954
I34
VNumberLiteral: 1001
p16955
tp16956
I2
s(Vinsert
p16957
I40
VQualifiedName: ErrorCode.DELETE_NOT_ALLOW
p16958
tp16959
I1
s(Vinsert
p16960
I42
VSimpleName: withinGroup
p16961
tp16962
I4
s(Vinsert
p16963
I45
VStringLiteral: " ROWS"
p16964
tp16965
I1
s(Vinsert
p16966
I45
VStringLiteral: "SELECT * FROM `my_crons` WHERE 1 OR nextrun = '0' "
p16967
tp16968
I1
s(Vinsert
p16969
I4
VArrayInitializer
p16970
tp16971
I14
s(Vinsert
p16972
I40
VQualifiedName: Token.PROCEDURE
p16973
tp16974
I2
s(Vinsert
p16975
I42
VSimpleName: obj
p16976
tp16977
I123
s(Vinsert
p16978
I42
VSimpleName: lastSlowParameters
p16979
tp16980
I1
s(Vinsert
p16981
I42
VSimpleName: test_true_7
p16982
tp16983
I1
s(Vinsert
p16984
I42
VSimpleName: userName
p16985
tp16986
I3
s(Vinsert
p16987
I42
VSimpleName: SQLDropTypeStatement
p16988
tp16989
I1
s(Vinsert
p16990
I45
VStringLiteral: "LIMIT "
p16991
tp16992
I1
s(Vinsert
p16993
I42
VSimpleName: targetAffectRow
p16994
tp16995
I3
s(Vinsert
p16996
I43
VSimpleType: SQLAlterTableDisableKeys
p16997
tp16998
I2
s(Vinsert
p16999
I42
VSimpleName: createSyntaxException
p17000
tp17001
I2
s(Vinsert
p17002
I42
VSimpleName: timeout
p17003
tp17004
I1
s(Vinsert
p17005
I42
VSimpleName: statementParser
p17006
tp17007
I1
s(Vinsert
p17008
I42
VSimpleName: setConstArithmeticAllow
p17009
tp17010
I2
s(Vinsert
p17011
I45
VStringLiteral: "SELECT F1, F2 FROM ALL_ALL_TABLES"
p17012
tp17013
I2
s(Vinsert
p17014
I42
VSimpleName: Update
p17015
tp17016
I1
s(Vinsert
p17017
I45
VStringLiteral: "\u005cn\u005ctdirectory_type NVARCHAR(60),"
p17018
tp17019
I1
s(Vinsert
p17020
I42
VSimpleName: startFullGC
p17021
tp17022
I2
s(Vinsert
p17023
I40
VQualifiedName: Token.SAVEPOINT
p17024
tp17025
I1
s(Vinsert
p17026
I43
VSimpleType: Filter
p17027
tp17028
I6
s(Vinsert
p17029
I42
VSimpleName: attrComments
p17030
tp17031
I4
s(Vinsert
p17032
I42
VSimpleName: setAuthid
p17033
tp17034
I1
s(Vinsert
p17035
I42
VSimpleName: ds
p17036
tp17037
I11
s(Vinsert
p17038
I42
VSimpleName: htable
p17039
tp17040
I1
s(Vinsert
p17041
I42
VSimpleName: OracleForeignKey
p17042
tp17043
I1
s(Vinsert
p17044
I74
VParameterizedType: Map.Entry<ProfileEntryKey,ProfileEntryStat>
p17045
tp17046
I1
s(Vinsert
p17047
I45
VStringLiteral: "order siblings by last_name"
p17048
tp17049
I2
s(Vinsert
p17050
I42
VSimpleName: ucase
p17051
tp17052
I79
s(Vinsert
p17053
I42
VSimpleName: setFrom
p17054
tp17055
I4
s(Vinsert
p17056
I45
VStringLiteral: "  from V v\u005cn"
p17057
tp17058
I1
s(Vinsert
p17059
I40
VQualifiedName: SQLParameter.ParameterType.IN
p17060
tp17061
I2
s(Vinsert
p17062
I43
VSimpleType: SQLCreateTableStatement
p17063
tp17064
I20
s(Vinsert
p17065
I45
VStringLiteral: "\u005ctWHERE MKTG_PLAN_LVL2_ID <> MKTG_PLAN_LVL4_ID\u005cn"
p17066
tp17067
I1
s(Vinsert
p17068
I43
VSimpleType: SQLUpdateStatement
p17069
tp17070
I14
s(Vinsert
p17071
I43
VSimpleType: FakeLogger
p17072
tp17073
I1
s(Vinsert
p17074
I42
VSimpleName: SQLLimit
p17075
tp17076
I6
s(Vinsert
p17077
I42
VSimpleName: MySqlPartitionByKey
p17078
tp17079
I4
s(Vinsert
p17080
I42
VSimpleName: checkUnion
p17081
tp17082
I2
s(Vinsert
p17083
I45
VStringLiteral: "\u005cn\u005ctPARTITION p2 VALUES LESS THAN (2500),"
p17084
tp17085
I2
s(Vinsert
p17086
I42
VSimpleName: fieldName
p17087
tp17088
I3
s(Vinsert
p17089
I43
VSimpleType: SQLPartitionBy
p17090
tp17091
I1
s(Vinsert
p17092
I42
VSimpleName: test_error
p17093
tp17094
I1
s(Vinsert
p17095
I45
VStringLiteral: "\u005cn\u005ctSTART_USER_ID_ NVARCHAR2(255),"
p17096
tp17097
I2
s(Vinsert
p17098
I42
VSimpleName: SQLForeignKeyConstraint
p17099
tp17100
I1
s(Vinsert
p17101
I45
VStringLiteral: "\u005ctcol1, \u005cn"
p17102
tp17103
I1
s(Vinsert
p17104
I40
VQualifiedName: org.apache.tomcat.jdbc.pool.DataSource
p17105
tp17106
I2
s(Vinsert
p17107
I42
VSimpleName: isValidConnection
p17108
tp17109
I2
s(Vinsert
p17110
I45
VStringLiteral: " ALTER ANY MATERIALIZED VIEW,"
p17111
tp17112
I1
s(Vinsert
p17113
I40
VQualifiedName: x.alias
p17114
tp17115
I1
s(Vinsert
p17116
I42
VSimpleName: parseFetch
p17117
tp17118
I1
s(Vinsert
p17119
I45
VStringLiteral: "SECOND"
p17120
tp17121
I1
s(Vinsert
p17122
I45
VStringLiteral: "System doesn't support MD5 algorithm."
p17123
tp17124
I1
s(Vinsert
p17125
I42
VSimpleName: getRemoveAbandonedTimeout
p17126
tp17127
I1
s(Vinsert
p17128
I45
VStringLiteral: "passwordCallback Error"
p17129
tp17130
I1
s(Vinsert
p17131
I42
VSimpleName: call
p17132
tp17133
I1
s(Vinsert
p17134
I45
VStringLiteral: "select * from(select * from test t limit 3) x"
p17135
tp17136
I1
s(Vinsert
p17137
I45
VStringLiteral: "\u005ct\u005ctINITRANS 1\u005cn"
p17138
tp17139
I3
s(Vinsert
p17140
I42
VSimpleName: maxWaitMillis
p17141
tp17142
I2
s(Vinsert
p17143
I48
VSuperMethodInvocation
p17144
tp17145
I21
s(Vinsert
p17146
I42
VSimpleName: TAEWallTest
p17147
tp17148
I1
s(Vinsert
p17149
I42
VSimpleName: Wrapper
p17150
tp17151
I1
s(Vinsert
p17152
I45
VStringLiteral: "group by bucket_id;"
p17153
tp17154
I1
s(Vinsert
p17155
I42
VSimpleName: OraclePriorExpr
p17156
tp17157
I2
s(Vinsert
p17158
I42
VSimpleName: setStatementLogger
p17159
tp17160
I1
s(Vinsert
p17161
I42
VSimpleName: isKeyword
p17162
tp17163
I1
s(Vinsert
p17164
I42
VSimpleName: rightLiteral
p17165
tp17166
I2
s(Vinsert
p17167
I45
VStringLiteral: "SELECT 0 bSomething"
p17168
tp17169
I1
s(Vinsert
p17170
I42
VSimpleName: getDistionOption
p17171
tp17172
I4
s(Vinsert
p17173
I45
VStringLiteral: "CREATE OR REPLACE FUNCTION STRCAT (\u005cn"
p17174
tp17175
I1
s(Vinsert
p17176
I42
VSimpleName: normalizeName
p17177
tp17178
I1
s(Vinsert
p17179
I40
VQualifiedName: fields.length
p17180
tp17181
I1
s(Vinsert
p17182
I45
VStringLiteral: "CREATE FUNCTION StockPivot (\u005cn"
p17183
tp17184
I1
s(Vinsert
p17185
I40
VQualifiedName: Token.OF
p17186
tp17187
I4
s(Vinsert
p17188
I42
VSimpleName: required
p17189
tp17190
I1
s(Vinsert
p17191
I42
VSimpleName: setConnection
p17192
tp17193
I1
s(Vinsert
p17194
I45
VStringLiteral: "XML"
p17195
tp17196
I1
s(Vinsert
p17197
I45
VStringLiteral: "\u005cn\u005ctdisabled NVARCHAR(60),"
p17198
tp17199
I1
s(Vinsert
p17200
I45
VStringLiteral: "    RETURN V_RETURN;\u005cn"
p17201
tp17202
I1
s(Vinsert
p17203
I45
VStringLiteral: "\u005cn\u005ct\u005ctCONSTRAINT check_qty CHECK (quantity > 0),"
p17204
tp17205
I2
s(Vinsert
p17206
I42
VSimpleName: treePanel
p17207
tp17208
I1
s(Vinsert
p17209
I34
VNumberLiteral: 1000L
p17210
tp17211
I1
s(Vinsert
p17212
I43
VSimpleType: OracleDatetimeExpr
p17213
tp17214
I3
s(Vinsert
p17215
I43
VSimpleType: ClassLoader
p17216
tp17217
I3
s(Vinsert
p17218
I42
VSimpleName: setOn
p17219
tp17220
I3
s(Vinsert
p17221
I43
VSimpleType: SQLKeep
p17222
tp17223
I3
s(Vinsert
p17224
I45
VStringLiteral: "VALUES (?, ?, ?, ?, ?\u005cn"
p17225
tp17226
I3
s(Vinsert
p17227
I43
VSimpleType: SQLExprHint
p17228
tp17229
I7
s(Vinsert
p17230
I42
VSimpleName: setMaxActive
p17231
tp17232
I11
s(Vinsert
p17233
I42
VSimpleName: getNotEmptyWaitNanos
p17234
tp17235
I2
s(Vinsert
p17236
I42
VSimpleName: findTableOrView
p17237
tp17238
I1
s(Vinsert
p17239
I43
VSimpleType: PGTruncateStatement
p17240
tp17241
I1
s(Vinsert
p17242
I42
VSimpleName: isPermitSchema
p17243
tp17244
I3
s(Vinsert
p17245
I42
VSimpleName: MySqlLexer
p17246
tp17247
I6
s(Vinsert
p17248
I42
VSimpleName: getTypes
p17249
tp17250
I2
s(Vinsert
p17251
I42
VSimpleName: getJdbcFetchRowCount
p17252
tp17253
I1
s(Vinsert
p17254
I42
VSimpleName: getURIStatData
p17255
tp17256
I2
s(Vinsert
p17257
I42
VSimpleName: lowerName
p17258
tp17259
I2
s(Vinsert
p17260
I45
VStringLiteral: "druid.connectProperties"
p17261
tp17262
I1
s(Vinsert
p17263
I43
VSimpleType: Set
p17264
tp17265
I6
s(Vinsert
p17266
I45
VStringLiteral: "SELECT ID, GMT_CREATE, utl_raw.cast_to_raw(CREATOR) AS CREATOR, GMT_MODIFIED, utl_raw.cast_to_raw(MODIFIER) AS MODIFIER\u005cn"
p17267
tp17268
I1
s(Vinsert
p17269
I42
VSimpleName: hint2
p17270
tp17271
I1
s(Vinsert
p17272
I42
VSimpleName: precision
p17273
tp17274
I3
s(Vinsert
p17275
I42
VSimpleName: preparedStatement_setDate
p17276
tp17277
I1
s(Vinsert
p17278
I42
VSimpleName: resultSetType
p17279
tp17280
I1
s(Vinsert
p17281
I45
VStringLiteral: "\u005ct\u005ct\u005ctselect prov\u005cn"
p17282
tp17283
I1
s(Vinsert
p17284
I45
VStringLiteral: "\u005ct\u005c"SESSION_ID\u005c", \u005cn"
p17285
tp17286
I1
s(Vinsert
p17287
I40
VQualifiedName: com.alibaba.druid.sql.dialect.phoenix.parser.PhoenixStatementParser
p17288
tp17289
I1
s(Vinsert
p17290
I42
VSimpleName: setUpdateWhereNoneCheck
p17291
tp17292
I1
s(Vinsert
p17293
I45
VStringLiteral: "LEFT JOIN erp_zte.zte_kx_osg3_items kx ON osg.osg_item_id = kx.osg_item_id , tcp_cpr.con_sites sites, tcp_cpr.system_bom b4\u005cn"
p17294
tp17295
I1
s(Vinsert
p17296
I45
VStringLiteral: "Windows NT 6.2"
p17297
tp17298
I1
s(Vinsert
p17299
I42
VSimpleName: test_types
p17300
tp17301
I1
s(Vinsert
p17302
I42
VSimpleName: SQLUniqueConstraint
p17303
tp17304
I2
s(Vinsert
p17305
I43
VSimpleType: PGUtils
p17306
tp17307
I1
s(Vinsert
p17308
I42
VSimpleName: transactionThresholdMillis
p17309
tp17310
I1
s(Vinsert
p17311
I42
VSimpleName: seed
p17312
tp17313
I2
s(Vinsert
p17314
I42
VSimpleName: endExpr
p17315
tp17316
I2
s(Vinsert
p17317
I45
VStringLiteral: "\u005cn\u005ctADD PARTITION PARTITIONS 18"
p17318
tp17319
I1
s(Vinsert
p17320
I43
VSimpleType: ClassNotFoundException
p17321
tp17322
I1
s(Vinsert
p17323
I45
VStringLiteral: "\u005ct\u005ct"
p17324
tp17325
I4
s(Vinsert
p17326
I45
VStringLiteral: " nosort"
p17327
tp17328
I1
s(Vinsert
p17329
I42
VSimpleName: unmodifiableList
p17330
tp17331
I1
s(Vinsert
p17332
I42
VSimpleName: getProxyDataSources
p17333
tp17334
I18
s(Vinsert
p17335
I43
VSimpleType: SQLCurrentOfCursorExpr
p17336
tp17337
I2
s(Vinsert
p17338
I42
VSimpleName: PrintWriter
p17339
tp17340
I1
s(Vinsert
p17341
I42
VSimpleName: visit
p17342
tp17343
I499
s(Vinsert
p17344
I45
VStringLiteral: "\u005cn\u005ct\u005c"CREATED_AT\u005c" TIMESTAMP(6),"
p17345
tp17346
I2
s(Vinsert
p17347
I40
VQualifiedName: Token.OPEN
p17348
tp17349
I3
s(Vinsert
p17350
I45
VStringLiteral: "apply_carriage_fee"
p17351
tp17352
I1
s(Vinsert
p17353
I42
VSimpleName: conn
p17354
tp17355
I385
s(Vinsert
p17356
I43
VSimpleType: MySqlShowKeysStatement
p17357
tp17358
I3
s(Vinsert
p17359
I42
VSimpleName: setMaxPoolSize
p17360
tp17361
I2
s(Vinsert
p17362
I42
VSimpleName: src
p17363
tp17364
I3
s(Vinsert
p17365
I43
VSimpleType: SQLName
p17366
tp17367
I131
s(Vinsert
p17368
I40
VQualifiedName: x.calcFoundRows
p17369
tp17370
I1
s(Vinsert
p17371
I45
VStringLiteral: "| c_mediumint  | mediumint(9) | NO   |     | NULL                |                             |\u005cn"
p17372
tp17373
I1
s(Vinsert
p17374
I45
VStringLiteral: "select * from order"
p17375
tp17376
I1
s(Vinsert
p17377
I42
VSimpleName: MySqlKillStatement
p17378
tp17379
I1
s(Vinsert
p17380
I42
VSimpleName: getWebAppStat
p17381
tp17382
I1
s(Vinsert
p17383
I42
VSimpleName: mysql_driver_version_6
p17384
tp17385
I3
s(Vinsert
p17386
I45
VStringLiteral: "SET t2.start_time = to_date((\u005cn"
p17387
tp17388
I1
s(Vinsert
p17389
I42
VSimpleName: invokeCount
p17390
tp17391
I1
s(Vinsert
p17392
I42
VSimpleName: PREFIX
p17393
tp17394
I3
s(Vinsert
p17395
I43
VSimpleType: HiveLexer
p17396
tp17397
I2
s(Vinsert
p17398
I42
VSimpleName: WallFunctionStatValue
p17399
tp17400
I2
s(Vinsert
p17401
I40
VQualifiedName: Token.ALTER
p17402
tp17403
I4
s(Vinsert
p17404
I42
VSimpleName: rtrim
p17405
tp17406
I2
s(Vinsert
p17407
I42
VSimpleName: queryRest
p17408
tp17409
I2
s(Vinsert
p17410
I42
VSimpleName: resultSetTrace
p17411
tp17412
I12
s(Vinsert
p17413
I45
VStringLiteral: "USE "
p17414
tp17415
I2
s(Vinsert
p17416
I45
VStringLiteral: "8\u005cn"
p17417
tp17418
I1
s(Vinsert
p17419
I42
VSimpleName: setUpdateClause
p17420
tp17421
I1
s(Vinsert
p17422
I42
VSimpleName: getDiscardCount
p17423
tp17424
I1
s(Vinsert
p17425
I42
VSimpleName: delete
p17426
tp17427
I3
s(Vinsert
p17428
I42
VSimpleName: savepoint
p17429
tp17430
I2
s(Vinsert
p17431
I45
VStringLiteral: "dup close"
p17432
tp17433
I1
s(Vinsert
p17434
I42
VSimpleName: mysql5ConnectionClass
p17435
tp17436
I3
s(Vinsert
p17437
I45
VStringLiteral: " FROM "
p17438
tp17439
I4
s(Vinsert
p17440
I45
VStringLiteral: "                         }'\u005cn"
p17441
tp17442
I2
s(Vinsert
p17443
I45
VStringLiteral: "USING "
p17444
tp17445
I2
s(Vinsert
p17446
I42
VSimpleName: normalizedName
p17447
tp17448
I1
s(Vinsert
p17449
I45
VStringLiteral: "com.alibaba.druid:type=DruidDataSource,id="
p17450
tp17451
I1
s(Vinsert
p17452
I42
VSimpleName: OracleSQLObject
p17453
tp17454
I1
s(Vinsert
p17455
I42
VSimpleName: FilterChain
p17456
tp17457
I1
s(Vinsert
p17458
I42
VSimpleName: WebSessionStat
p17459
tp17460
I6
s(Vinsert
p17461
I42
VSimpleName: MySqlUnionQuery
p17462
tp17463
I2
s(Vinsert
p17464
I45
VStringLiteral: "show create table test1"
p17465
tp17466
I1
s(Vinsert
p17467
I42
VSimpleName: setParenthesized
p17468
tp17469
I1
s(Vinsert
p17470
I43
VSimpleType: NoSuchAlgorithmException
p17471
tp17472
I1
s(Vinsert
p17473
I42
VSimpleName: getWhere
p17474
tp17475
I33
s(Vinsert
p17476
I45
VStringLiteral: ") a\u005cn"
p17477
tp17478
I1
s(Vinsert
p17479
I83
VModifier: synchronized
p17480
tp17481
I2
s(Vinsert
p17482
I42
VSimpleName: test_permitTable
p17483
tp17484
I2
s(Vinsert
p17485
I40
VQualifiedName: x.right
p17486
tp17487
I1
s(Vinsert
p17488
I45
VStringLiteral: "\u005cn\u005ctproduct_no integer,"
p17489
tp17490
I1
s(Vinsert
p17491
I42
VSimpleName: OracleTimestampExpr
p17492
tp17493
I1
s(Vinsert
p17494
I42
VSimpleName: MySqlIgnoreIndexHint
p17495
tp17496
I2
s(Vinsert
p17497
I43
VSimpleType: ResultSetProxy
p17498
tp17499
I4
s(Vinsert
p17500
I42
VSimpleName: toInt
p17501
tp17502
I2
s(Vinsert
p17503
I74
VParameterizedType: Set<String>
p17504
tp17505
I2
s(Vinsert
p17506
I45
VStringLiteral: "RULES"
p17507
tp17508
I1
s(Vinsert
p17509
I38
VPrefixExpression: !
p17510
tp17511
I81
s(Vinsert
p17512
I43
VSimpleType: TabularData
p17513
tp17514
I2
s(Vinsert
p17515
I45
VStringLiteral: "\u005ctc_text text,\u005cn"
p17516
tp17517
I2
s(Vinsert
p17518
I42
VSimpleName: argumentName
p17519
tp17520
I1
s(Vinsert
p17521
I42
VSimpleName: in
p17522
tp17523
I6
s(Vinsert
p17524
I74
VParameterizedType: AtomicIntegerFieldUpdater<WebSessionStat>
p17525
tp17526
I1
s(Vinsert
p17527
I42
VSimpleName: test_sub
p17528
tp17529
I1
s(Vinsert
p17530
I45
VStringLiteral: "read sale_detail 10"
p17531
tp17532
I1
s(Vinsert
p17533
I42
VSimpleName: checkConnection
p17534
tp17535
I1
s(Vinsert
p17536
I42
VSimpleName: getComment
p17537
tp17538
I8
s(Vinsert
p17539
I42
VSimpleName: getReferencingColumns
p17540
tp17541
I3
s(Vinsert
p17542
I45
VStringLiteral: "\u005cn\u005ctSELECT *"
p17543
tp17544
I1
s(Vinsert
p17545
I42
VSimpleName: tableElementList
p17546
tp17547
I10
s(Vinsert
p17548
I42
VSimpleName: getWallTopStatementContext
p17549
tp17550
I2
s(Vinsert
p17551
I45
VStringLiteral: "\u005cn -- comment_1"
p17552
tp17553
I1
s(Vinsert
p17554
I40
VQualifiedName: FnvHash.Constants.NEXTVAL
p17555
tp17556
I1
s(Vinsert
p17557
I42
VSimpleName: getMaxPoolPreparedStatementPerConnectionSize
p17558
tp17559
I3
s(Vinsert
p17560
I45
VStringLiteral: "WHERE 1 = 1\u005cn"
p17561
tp17562
I1
s(Vinsert
p17563
I42
VSimpleName: SQLSubPartitionByList
p17564
tp17565
I2
s(Vinsert
p17566
I42
VSimpleName: indexOf
p17567
tp17568
I29
s(Vinsert
p17569
I45
VStringLiteral: "SELECT owner AS obj_owner, object_name AS obj_name, object_type AS obj_type, dbms_rowid.rowid_create(1, row_wait_obj#, ROW_WAIT_FILE#, ROW_WAIT_BLOCK#, ROW_WAIT_ROW#) AS obj_rowid, a.username AS db_user\u005cn"
p17570
tp17571
I1
s(Vinsert
p17572
I40
VQualifiedName: java.sql.SQLFeatureNotSupportedException
p17573
tp17574
I1
s(Vinsert
p17575
I43
VSimpleType: SQLDropDatabaseStatement
p17576
tp17577
I3
s(Vinsert
p17578
I42
VSimpleName: testWall
p17579
tp17580
I1
s(Vinsert
p17581
I45
VStringLiteral: "select last_batch,spid=cast(spid as varchar(20)),(SELECT text FROM sys.dm_exec_sql_text(sql_handle)) AS query_text,(SELECT text FROM sys.dm_exec_sql_text(context_info)) AS query_text1,* from master..sysprocesses where dbid=db_id('heecerp') order by master..sysprocesses.last_batch desc"
p17582
tp17583
I1
s(Vinsert
p17584
I45
VStringLiteral: "\u005ctPARTITION PART02\u005cn"
p17585
tp17586
I1
s(Vinsert
p17587
I40
VQualifiedName: Token.COMMENT
p17588
tp17589
I2
s(Vinsert
p17590
I42
VSimpleName: synchronizedMap
p17591
tp17592
I1
s(Vinsert
p17593
I43
VSimpleType: NutDao
p17594
tp17595
I1
s(Vinsert
p17596
I42
VSimpleName: getJdbcPoolConnectionOpenCount
p17597
tp17598
I1
s(Vinsert
p17599
I42
VSimpleName: execMySql
p17600
tp17601
I2
s(Vinsert
p17602
I42
VSimpleName: rs
p17603
tp17604
I81
s(Vinsert
p17605
I45
VStringLiteral: "\u005cnwhere name like ?"
p17606
tp17607
I1
s(Vinsert
p17608
I45
VStringLiteral: "\u005cn\u005ct\u005ctOR d.indkey[5] = a.attnum"
p17609
tp17610
I1
s(Vinsert
p17611
I40
VQualifiedName: SQLSetStatement.Option.PASSWORD
p17612
tp17613
I1
s(Vinsert
p17614
I42
VSimpleName: appender
p17615
tp17616
I1
s(Vinsert
p17617
I42
VSimpleName: purgeImplicitCache
p17618
tp17619
I1
s(Vinsert
p17620
I42
VSimpleName: increment
p17621
tp17622
I2
s(Vinsert
p17623
I42
VSimpleName: varList
p17624
tp17625
I2
s(Vinsert
p17626
I42
VSimpleName: nameHashCode64
p17627
tp17628
I12
s(Vinsert
p17629
I45
VStringLiteral: "UNDO"
p17630
tp17631
I2
s(Vinsert
p17632
I42
VSimpleName: copyOf
p17633
tp17634
I2
s(Vinsert
p17635
I42
VSimpleName: originalContext
p17636
tp17637
I3
s(Vinsert
p17638
I45
VStringLiteral: "MAXVALUE"
p17639
tp17640
I2
s(Vinsert
p17641
I45
VStringLiteral: "\u005cn\u005ctCONSTRAINT promo_id_u UNIQUE (promo_id)"
p17642
tp17643
I2
s(Vinsert
p17644
I42
VSimpleName: setBytes
p17645
tp17646
I1
s(Vinsert
p17647
I45
VStringLiteral: " ROWS BETWEEN "
p17648
tp17649
I1
s(Vinsert
p17650
I42
VSimpleName: minPoolSize
p17651
tp17652
I1
s(Vinsert
p17653
I42
VSimpleName: ProfileEntryStatValue
p17654
tp17655
I2
s(Vinsert
p17656
I45
VStringLiteral: "( customer_id number(10) NOT NULL,\u005cn"
p17657
tp17658
I1
s(Vinsert
p17659
I42
VSimpleName: addTableSource
p17660
tp17661
I5
s(Vinsert
p17662
I42
VSimpleName: reverse
p17663
tp17664
I1
s(Vinsert
p17665
I42
VSimpleName: pseudoColumnHashCodes
p17666
tp17667
I1
s(Vinsert
p17668
I42
VSimpleName: stmtsA
p17669
tp17670
I1
s(Vinsert
p17671
I45
VStringLiteral: "@@"
p17672
tp17673
I3
s(Vinsert
p17674
I45
VStringLiteral: "<<"
p17675
tp17676
I1
s(Vinsert
p17677
I42
VSimpleName: scanner
p17678
tp17679
I1
s(Vinsert
p17680
I45
VStringLiteral: "connectTime"
p17681
tp17682
I1
s(Vinsert
p17683
I42
VSimpleName: getValidate
p17684
tp17685
I1
s(Vinsert
p17686
I42
VSimpleName: poolalbeConnection
p17687
tp17688
I2
s(Vinsert
p17689
I45
VStringLiteral: "\u005ctc1, \u005cn"
p17690
tp17691
I1
s(Vinsert
p17692
I45
VStringLiteral: "(partition part1 values less than (to_date('2010-01-01','YYYY-MM-DD')),\u005cn"
p17693
tp17694
I1
s(Vinsert
p17695
I42
VSimpleName: setDbName
p17696
tp17697
I1
s(Vinsert
p17698
I45
VStringLiteral: "druid.testWhileIdle"
p17699
tp17700
I1
s(Vinsert
p17701
I42
VSimpleName: violations
p17702
tp17703
I11
s(Vinsert
p17704
I42
VSimpleName: x509KeySpec
p17705
tp17706
I1
s(Vinsert
p17707
I45
VStringLiteral: "BOTH"
p17708
tp17709
I1
s(Vinsert
p17710
I43
VSimpleType: List
p17711
tp17712
I263
s(Vinsert
p17713
I42
VSimpleName: selectStatement
p17714
tp17715
I1
s(Vinsert
p17716
I42
VSimpleName: SQLUpdateStatement
p17717
tp17718
I15
s(Vinsert
p17719
I42
VSimpleName: bogusPattern
p17720
tp17721
I1
s(Vinsert
p17722
I45
VStringLiteral: "| c_blob       | blob         | NO   |     | NULL    |       |\u005cn"
p17723
tp17724
I1
s(Vinsert
p17725
I42
VSimpleName: useUnfairLock
p17726
tp17727
I1
s(Vinsert
p17728
I42
VSimpleName: PGTruncateStatement
p17729
tp17730
I1
s(Vinsert
p17731
I42
VSimpleName: getMaxQueriesPerHour
p17732
tp17733
I1
s(Vinsert
p17734
I45
VStringLiteral: "druid.oracle.fatalErrorCodes=1,2,3,a,"
p17735
tp17736
I1
s(Vinsert
p17737
I42
VSimpleName: Property
p17738
tp17739
I3
s(Vinsert
p17740
I45
VStringLiteral: " sqlstate "
p17741
tp17742
I1
s(Vinsert
p17743
I42
VSimpleName: getAfterColumn
p17744
tp17745
I1
s(Vinsert
p17746
I45
VStringLiteral: "sqlserver"
p17747
tp17748
I1
s(Vinsert
p17749
I42
VSimpleName: getEntities
p17750
tp17751
I7
s(Vinsert
p17752
I45
VStringLiteral: "NO SQL"
p17753
tp17754
I1
s(Vinsert
p17755
I42
VSimpleName: functionStatValue
p17756
tp17757
I1
s(Vinsert
p17758
I45
VStringLiteral: "PACKAGE"
p17759
tp17760
I1
s(Vinsert
p17761
I45
VStringLiteral: "ORDER SIBLINGS BY "
p17762
tp17763
I1
s(Vinsert
p17764
I45
VStringLiteral: "AGE > 5"
p17765
tp17766
I1
s(Vinsert
p17767
I45
VStringLiteral: "LOGGING"
p17768
tp17769
I1
s(Vinsert
p17770
I42
VSimpleName: TraceErrorEvent
p17771
tp17772
I2
s(Vinsert
p17773
I40
VQualifiedName: SQLUtils.FormatOption
p17774
tp17775
I10
s(Vinsert
p17776
I42
VSimpleName: SQLCreateTableStatement
p17777
tp17778
I19
s(Vinsert
p17779
I45
VStringLiteral: "GROUPING SETS ("
p17780
tp17781
I1
s(Vinsert
p17782
I42
VSimpleName: SQLAlterTableConvertCharSet
p17783
tp17784
I1
s(Vinsert
p17785
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION s2,"
p17786
tp17787
I1
s(Vinsert
p17788
I43
VSimpleType: OracleMultiInsertStatement
p17789
tp17790
I3
s(Vinsert
p17791
I42
VSimpleName: printComment
p17792
tp17793
I2
s(Vinsert
p17794
I45
VStringLiteral: "FROM TABLE\u005cn"
p17795
tp17796
I1
s(Vinsert
p17797
I42
VSimpleName: MySqlShowProcedureStatusStatement
p17798
tp17799
I5
s(Vinsert
p17800
I42
VSimpleName: deaultValue
p17801
tp17802
I1
s(Vinsert
p17803
I42
VSimpleName: test_getObjectInstance_1
p17804
tp17805
I1
s(Vinsert
p17806
I42
VSimpleName: setDriver
p17807
tp17808
I13
s(Vinsert
p17809
I42
VSimpleName: preparedStatement_execute
p17810
tp17811
I1
s(Vinsert
p17812
I45
VStringLiteral: "FROM customers\u005cn"
p17813
tp17814
I2
s(Vinsert
p17815
I45
VStringLiteral: " PARTITION \u005c"AUTO_P_2013_03_01\u005c"  VALUES LESS THAN (TO_DATE(' 2013-03-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN')) \u005cn"
p17816
tp17817
I1
s(Vinsert
p17818
I45
VStringLiteral: "\u005ct, IFNULL(flags, 0)\u005cn"
p17819
tp17820
I1
s(Vinsert
p17821
I42
VSimpleName: getOSAndroid42Count
p17822
tp17823
I1
s(Vinsert
p17824
I42
VSimpleName: unlock
p17825
tp17826
I3
s(Vinsert
p17827
I42
VSimpleName: getConnectionDirect
p17828
tp17829
I1
s(Vinsert
p17830
I43
VSimpleType: SQLVariantRefExpr
p17831
tp17832
I12
s(Vinsert
p17833
I78
VMarkerAnnotation
p17834
tp17835
I337
s(Vinsert
p17836
I42
VSimpleName: intervalExpr
p17837
tp17838
I3
s(Vinsert
p17839
I45
VStringLiteral: "WHERE supReg.status IN (2, 3, 4)\u005cn"
p17840
tp17841
I1
s(Vinsert
p17842
I42
VSimpleName: updateCountArray
p17843
tp17844
I1
s(Vinsert
p17845
I42
VSimpleName: buildCondition
p17846
tp17847
I1
s(Vinsert
p17848
I42
VSimpleName: getOnConflictConstraint
p17849
tp17850
I1
s(Vinsert
p17851
I43
VSimpleType: SQLSubPartitionByList
p17852
tp17853
I2
s(Vinsert
p17854
I42
VSimpleName: group
p17855
tp17856
I5
s(Vinsert
p17857
I42
VSimpleName: NullPointerException
p17858
tp17859
I1
s(Vinsert
p17860
I42
VSimpleName: isAfterSemi
p17861
tp17862
I2
s(Vinsert
p17863
I45
VStringLiteral: "\u005ct\u005ctAND CAST(b.paid_date AS varchar(10)) >= '2016-01-01'\u005cn"
p17864
tp17865
I1
s(Vinsert
p17866
I45
VStringLiteral: "alter index idx_t1 rebuild"
p17867
tp17868
I1
s(Vinsert
p17869
I42
VSimpleName: blackSql_1
p17870
tp17871
I1
s(Vinsert
p17872
I43
VSimpleType: IllegalStateException
p17873
tp17874
I3
s(Vinsert
p17875
I45
VStringLiteral: "org.apache.log4j.Logger"
p17876
tp17877
I1
s(Vinsert
p17878
I42
VSimpleName: createTable
p17879
tp17880
I7
s(Vinsert
p17881
I45
VStringLiteral: "\u005cn\u005ctsupplier_id NUMBER(6),"
p17882
tp17883
I2
s(Vinsert
p17884
I45
VStringLiteral: "syntax error, expect ')', "
p17885
tp17886
I1
s(Vinsert
p17887
I45
VStringLiteral: "unchecked"
p17888
tp17889
I3
s(Vinsert
p17890
I42
VSimpleName: OracleWallTest2
p17891
tp17892
I1
s(Vinsert
p17893
I42
VSimpleName: b1
p17894
tp17895
I2
s(Vinsert
p17896
I45
VStringLiteral: "DROP CONSTRAINT "
p17897
tp17898
I1
s(Vinsert
p17899
I74
VParameterizedType: List<WallUpdateCheckItem>
p17900
tp17901
I2
s(Vinsert
p17902
I40
VQualifiedName: com.alibaba.druid.sql.dialect.teradata.visitor.TeradataSchemaStatVisitor
p17903
tp17904
I1
s(Vinsert
p17905
I43
VSimpleType: JdbcDataSourceStat
p17906
tp17907
I7
s(Vinsert
p17908
I45
VStringLiteral: "FROM sel\u005cn"
p17909
tp17910
I1
s(Vinsert
p17911
I45
VStringLiteral: "select * from db_00.t_00_00 where id > 1;"
p17912
tp17913
I1
s(Vinsert
p17914
I40
VQualifiedName: System.out
p17915
tp17916
I492
s(Vinsert
p17917
I42
VSimpleName: setTemporary
p17918
tp17919
I2
s(Vinsert
p17920
I42
VSimpleName: test_drop_function
p17921
tp17922
I4
s(Vinsert
p17923
I45
VStringLiteral: "java.runtime.version"
p17924
tp17925
I1
s(Vinsert
p17926
I42
VSimpleName: SQLCreateProcedureStatement
p17927
tp17928
I2
s(Vinsert
p17929
I40
VQualifiedName: SQLBinaryOperator.GreaterThanOrEqual
p17930
tp17931
I1
s(Vinsert
p17932
I42
VSimpleName: funcName
p17933
tp17934
I6
s(Vinsert
p17935
I45
VStringLiteral: "\u005cnPARTITION BY HASH (product_id) PARTITIONS 4"
p17936
tp17937
I2
s(Vinsert
p17938
I45
VStringLiteral: "FROM duplications_index"
p17939
tp17940
I1
s(Vinsert
p17941
I45
VStringLiteral: "WHERE db.db_key = bs.db_key"
p17942
tp17943
I1
s(Vinsert
p17944
I45
VStringLiteral: "10.20.153.63:60000"
p17945
tp17946
I1
s(Vinsert
p17947
I45
VStringLiteral: "\u005ctINDEX name_idx(c_char, c_date)\u005cn"
p17948
tp17949
I1
s(Vinsert
p17950
I45
VStringLiteral: "FOR XML "
p17951
tp17952
I1
s(Vinsert
p17953
I42
VSimpleName: checker
p17954
tp17955
I1
s(Vinsert
p17956
I45
VStringLiteral: "nchar"
p17957
tp17958
I2
s(Vinsert
p17959
I42
VSimpleName: SQLServerInsertStatement
p17960
tp17961
I8
s(Vinsert
p17962
I42
VSimpleName: JMException
p17963
tp17964
I2
s(Vinsert
p17965
I42
VSimpleName: setHintAllow
p17966
tp17967
I3
s(Vinsert
p17968
I42
VSimpleName: storageClause
p17969
tp17970
I3
s(Vinsert
p17971
I42
VSimpleName: filter
p17972
tp17973
I40
s(Vinsert
p17974
I40
VQualifiedName: Token.COMMIT
p17975
tp17976
I1
s(Vinsert
p17977
I42
VSimpleName: cursorIndex
p17978
tp17979
I3
s(Vinsert
p17980
I45
VStringLiteral: "WHERE l_shipdate >= DATE '1993-01-01'\u005cn"
p17981
tp17982
I1
s(Vinsert
p17983
I42
VSimpleName: setCatalog
p17984
tp17985
I1
s(Vinsert
p17986
I42
VSimpleName: whiteMergedList
p17987
tp17988
I3
s(Vinsert
p17989
I45
VStringLiteral: ");"
p17990
tp17991
I3
s(Vinsert
p17992
I42
VSimpleName: createTransactionInfo
p17993
tp17994
I1
s(Vinsert
p17995
I42
VSimpleName: MySqlIntervalExpr
p17996
tp17997
I3
s(Vinsert
p17998
I45
VStringLiteral: "SELECT is_srvrolemember(\u2018sysadmin\u2019, \u2018sa\u2019); "
p17999
tp18000
I1
s(Vinsert
p18001
I42
VSimpleName: c2
p18002
tp18003
I12
s(Vinsert
p18004
I42
VSimpleName: OracleArgumentExpr
p18005
tp18006
I1
s(Vinsert
p18007
I45
VStringLiteral: "change column "
p18008
tp18009
I1
s(Vinsert
p18010
I42
VSimpleName: containsBeanDefinition
p18011
tp18012
I1
s(Vinsert
p18013
I42
VSimpleName: f
p18014
tp18015
I2
s(Vinsert
p18016
I42
VSimpleName: requestStat
p18017
tp18018
I1
s(Vinsert
p18019
I45
VStringLiteral: "PUBLIC "
p18020
tp18021
I2
s(Vinsert
p18022
I42
VSimpleName: value2
p18023
tp18024
I1
s(Vinsert
p18025
I45
VStringLiteral: "\u005ct\u005ct\u005ct\u005ct\u005ctINNER JOIN menuTemp b ON a.parent_id = b.menu_id\u005cn"
p18026
tp18027
I1
s(Vinsert
p18028
I45
VStringLiteral: "\u005ctc_timestamp timestamp,\u005cn"
p18029
tp18030
I2
s(Vinsert
p18031
I42
VSimpleName: thisObject
p18032
tp18033
I1
s(Vinsert
p18034
I42
VSimpleName: getNumber
p18035
tp18036
I9
s(Vinsert
p18037
I45
VStringLiteral: "TABLESPACE \u005c"USERS\u005c""
p18038
tp18039
I1
s(Vinsert
p18040
I42
VSimpleName: getNetworkInterfaces
p18041
tp18042
I1
s(Vinsert
p18043
I42
VSimpleName: RegexpMethodPointcutAdvisor
p18044
tp18045
I1
s(Vinsert
p18046
I42
VSimpleName: iterator
p18047
tp18048
I1
s(Vinsert
p18049
I42
VSimpleName: resolve
p18050
tp18051
I7
s(Vinsert
p18052
I42
VSimpleName: sqlFunctionStat
p18053
tp18054
I2
s(Vinsert
p18055
I42
VSimpleName: PoolableCallableStatement
p18056
tp18057
I1
s(Vinsert
p18058
I42
VSimpleName: driverHasPingMethod
p18059
tp18060
I1
s(Vinsert
p18061
I42
VSimpleName: getPrimaryKey
p18062
tp18063
I1
s(Vinsert
p18064
I42
VSimpleName: TransactionInfo
p18065
tp18066
I2
s(Vinsert
p18067
I42
VSimpleName: threadCount
p18068
tp18069
I1
s(Vinsert
p18070
I45
VStringLiteral: "ignore "
p18071
tp18072
I1
s(Vinsert
p18073
I42
VSimpleName: jdbcUrl
p18074
tp18075
I12
s(Vinsert
p18076
I42
VSimpleName: MySqlLockTableStatement
p18077
tp18078
I2
s(Vinsert
p18079
I42
VSimpleName: MonitorContext
p18080
tp18081
I1
s(Vinsert
p18082
I42
VSimpleName: parseTableSourceQueryTableExpr
p18083
tp18084
I2
s(Vinsert
p18085
I45
VStringLiteral: "CREATE TABLE tt ("
p18086
tp18087
I1
s(Vinsert
p18088
I42
VSimpleName: close
p18089
tp18090
I150
s(Vinsert
p18091
I45
VStringLiteral: "\u005cn\u005ctdiv_no NUMBER"
p18092
tp18093
I2
s(Vinsert
p18094
I45
VStringLiteral: "\u005ct\u005ct\u005ctINITIAL 8388608\u005cn"
p18095
tp18096
I1
s(Vinsert
p18097
I43
VSimpleType: AtomicIntegerFieldUpdater
p18098
tp18099
I3
s(Vinsert
p18100
I45
VStringLiteral: "\u005ctacc_no IN NUMBER\u005cn"
p18101
tp18102
I1
s(Vinsert
p18103
I42
VSimpleName: OracleAnalytic
p18104
tp18105
I1
s(Vinsert
p18106
I45
VStringLiteral: "desc"
p18107
tp18108
I1
s(Vinsert
p18109
I42
VSimpleName: SQLDeleteStatement
p18110
tp18111
I5
s(Vinsert
p18112
I43
VSimpleType: SQLServerInsertStatement
p18113
tp18114
I8
s(Vinsert
p18115
I42
VSimpleName: Deprecated
p18116
tp18117
I2
s(Vinsert
p18118
I42
VSimpleName: treatExpr
p18119
tp18120
I1
s(Vinsert
p18121
I45
VStringLiteral: "select id, name from t"
p18122
tp18123
I1
s(Vinsert
p18124
I45
VStringLiteral: "test1"
p18125
tp18126
I1
s(Vinsert
p18127
I45
VStringLiteral: "INSERT INTO departments"
p18128
tp18129
I5
s(Vinsert
p18130
I42
VSimpleName: unwrapType
p18131
tp18132
I1
s(Vinsert
p18133
I42
VSimpleName: sz
p18134
tp18135
I1
s(Vinsert
p18136
I42
VSimpleName: subQuery
p18137
tp18138
I26
s(Vinsert
p18139
I45
VStringLiteral: "ON t1.order_id = t2.order_id\u005cn"
p18140
tp18141
I1
s(Vinsert
p18142
I42
VSimpleName: setDefaultAutoCommit
p18143
tp18144
I1
s(Vinsert
p18145
I40
VQualifiedName: Token.COLONCOLON
p18146
tp18147
I3
s(Vinsert
p18148
I42
VSimpleName: isSqlModified
p18149
tp18150
I1
s(Vinsert
p18151
I45
VStringLiteral: "\u005ctAND cs.CreateDate <= to_date('2017-08-31 23:00:00', 'YYYY-MM-DD HH24:MI:SS')\u005cn"
p18152
tp18153
I1
s(Vinsert
p18154
I43
VSimpleType: TeradataSelectQueryBlock
p18155
tp18156
I2
s(Vinsert
p18157
I42
VSimpleName: ALI_ORACLE_DRIVER
p18158
tp18159
I1
s(Vinsert
p18160
I42
VSimpleName: isBuiltinFunction
p18161
tp18162
I1
s(Vinsert
p18163
I42
VSimpleName: propertyValues
p18164
tp18165
I2
s(Vinsert
p18166
I42
VSimpleName: ResultSetProxy
p18167
tp18168
I5
s(Vinsert
p18169
I42
VSimpleName: MySqlWallTest6
p18170
tp18171
I1
s(Vinsert
p18172
I42
VSimpleName: getIdentity
p18173
tp18174
I2
s(Vinsert
p18175
I42
VSimpleName: findFunction
p18176
tp18177
I1
s(Vinsert
p18178
I42
VSimpleName: requestIntervalHistogram_10000000_more_Updater
p18179
tp18180
I1
s(Vinsert
p18181
I45
VStringLiteral: "    AND sample_column_table_schema = 'SC_PRODUCT_03'\u005cn"
p18182
tp18183
I1
s(Vinsert
p18184
I40
VQualifiedName: com.alibaba.druid.stat.JdbcSqlStat
p18185
tp18186
I2
s(Vinsert
p18187
I42
VSimpleName: ROW_EXCLUSIVE
p18188
tp18189
I1
s(Vinsert
p18190
I45
VStringLiteral: "\u005cn\u005ctOPTIMIZE PARTITION ALL"
p18191
tp18192
I1
s(Vinsert
p18193
I45
VStringLiteral: "on completion preserve do begin insert into test.t1 values (33), (111);select * from test.t1; end; -- //"
p18194
tp18195
I1
s(Vinsert
p18196
I42
VSimpleName: unmodifiableCollection
p18197
tp18198
I2
s(Vinsert
p18199
I42
VSimpleName: Scan
p18200
tp18201
I1
s(Vinsert
p18202
I42
VSimpleName: update
p18203
tp18204
I13
s(Vinsert
p18205
I42
VSimpleName: getKeyword
p18206
tp18207
I2
s(Vinsert
p18208
I45
VStringLiteral: "SELECT wm_concat(article_id) OVER ()"
p18209
tp18210
I1
s(Vinsert
p18211
I42
VSimpleName: resultSet_insertRow
p18212
tp18213
I1
s(Vinsert
p18214
I43
VSimpleType: SQLColumnDefinition
p18215
tp18216
I18
s(Vinsert
p18217
I42
VSimpleName: PGTypeCastExpr
p18218
tp18219
I5
s(Vinsert
p18220
I42
VSimpleName: columnSize
p18221
tp18222
I1
s(Vinsert
p18223
I74
VParameterizedType: ConcurrentMap<String,DataSourceProxyImpl>
p18224
tp18225
I1
s(Vinsert
p18226
I45
VStringLiteral: "select * from t1; ;select * from t2;"
p18227
tp18228
I1
s(Vinsert
p18229
I45
VStringLiteral: "Global"
p18230
tp18231
I2
s(Vinsert
p18232
I43
VSimpleType: OracleDbLinkExpr
p18233
tp18234
I4
s(Vinsert
p18235
I42
VSimpleName: setOutParameter
p18236
tp18237
I1
s(Vinsert
p18238
I42
VSimpleName: SQLSelectQuery
p18239
tp18240
I4
s(Vinsert
p18241
I45
VStringLiteral: "\u005ctemp_id, \u005cn"
p18242
tp18243
I1
s(Vinsert
p18244
I42
VSimpleName: rawUrl
p18245
tp18246
I13
s(Vinsert
p18247
I42
VSimpleName: JSONWriter
p18248
tp18249
I2
s(Vinsert
p18250
I45
VStringLiteral: "                   from ireport.dm_mdm_mem_prod_noeff_sdt0"
p18251
tp18252
I1
s(Vinsert
p18253
I45
VStringLiteral: "| c_timestamp  | timestamp    | NO   |     | NULL                | on update CURRENT_TIMESTAMP |\u005cn"
p18254
tp18255
I1
s(Vinsert
p18256
I45
VStringLiteral: "update x"
p18257
tp18258
I1
s(Vinsert
p18259
I42
VSimpleName: leftColumn
p18260
tp18261
I2
s(Vinsert
p18262
I42
VSimpleName: histogram_10000_100000
p18263
tp18264
I1
s(Vinsert
p18265
I42
VSimpleName: EvalMethodTest_substring_4
p18266
tp18267
I1
s(Vinsert
p18268
I40
VQualifiedName: e.next
p18269
tp18270
I2
s(Vinsert
p18271
I43
VSimpleType: SQLUnique
p18272
tp18273
I4
s(Vinsert
p18274
I45
VStringLiteral: "test4\u005cn"
p18275
tp18276
I1
s(Vinsert
p18277
I45
VStringLiteral: ");\u005cn"
p18278
tp18279
I1
s(Vinsert
p18280
I42
VSimpleName: jdbcUpdateCount
p18281
tp18282
I1
s(Vinsert
p18283
I45
VStringLiteral: "\u005cn\u005ctID NUMERIC not null,"
p18284
tp18285
I1
s(Vinsert
p18286
I42
VSimpleName: handler
p18287
tp18288
I3
s(Vinsert
p18289
I45
VStringLiteral: "\u005cn\u005ct\u005ctCONSTRAINT promo_id_u UNIQUE,"
p18290
tp18291
I1
s(Vinsert
p18292
I42
VSimpleName: checkState
p18293
tp18294
I2
s(Vinsert
p18295
I45
VStringLiteral: "\u005cn\u005ct\u005c"USER_ID\u005c" NUMBER(38, 0),"
p18296
tp18297
I2
s(Vinsert
p18298
I43
VSimpleType: PGIntervalExpr
p18299
tp18300
I6
s(Vinsert
p18301
I42
VSimpleName: getCommandType
p18302
tp18303
I1
s(Vinsert
p18304
I74
VParameterizedType: List<MySqlPartitioningDef>
p18305
tp18306
I1
s(Vinsert
p18307
I42
VSimpleName: preparedStatementCount
p18308
tp18309
I1
s(Vinsert
p18310
I42
VSimpleName: text2
p18311
tp18312
I1
s(Vinsert
p18313
I40
VQualifiedName: FnvHash.Constants.PACKAGE
p18314
tp18315
I1
s(Vinsert
p18316
I42
VSimpleName: getUserName
p18317
tp18318
I1
s(Vinsert
p18319
I42
VSimpleName: countFilter
p18320
tp18321
I3
s(Vinsert
p18322
I42
VSimpleName: SQLServerTop
p18323
tp18324
I6
s(Vinsert
p18325
I42
VSimpleName: Collection
p18326
tp18327
I3
s(Vinsert
p18328
I42
VSimpleName: EvalMethodLeftTest
p18329
tp18330
I1
s(Vinsert
p18331
I34
VNumberLiteral: 25425
p18332
tp18333
I1
s(Vinsert
p18334
I42
VSimpleName: hasMoreElements
p18335
tp18336
I1
s(Vinsert
p18337
I42
VSimpleName: WrapperProxy
p18338
tp18339
I3
s(Vinsert
p18340
I42
VSimpleName: getDataSource
p18341
tp18342
I26
s(Vinsert
p18343
I42
VSimpleName: lowerCaseName
p18344
tp18345
I2
s(Vinsert
p18346
I45
VStringLiteral: "init"
p18347
tp18348
I1
s(Vinsert
p18349
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION ch_s,"
p18350
tp18351
I2
s(Vinsert
p18352
I43
VSimpleType: SQLDropIndexStatement
p18353
tp18354
I3
s(Vinsert
p18355
I42
VSimpleName: binaryEpr
p18356
tp18357
I1
s(Vinsert
p18358
I42
VSimpleName: SqlMapClientImpl
p18359
tp18360
I4
s(Vinsert
p18361
I43
VSimpleType: SQLAlterTableConvertCharSet
p18362
tp18363
I1
s(Vinsert
p18364
I40
VQualifiedName: Token.VARIANT
p18365
tp18366
I3
s(Vinsert
p18367
I45
VStringLiteral: "NAMES"
p18368
tp18369
I2
s(Vinsert
p18370
I42
VSimpleName: flag3
p18371
tp18372
I2
s(Vinsert
p18373
I45
VStringLiteral: "CREATE TABLE promotions_var1 ("
p18374
tp18375
I2
s(Vinsert
p18376
I45
VStringLiteral: "\u005cthash,\u005cn"
p18377
tp18378
I1
s(Vinsert
p18379
I40
VQualifiedName: SearchModifier.IN_BOOLEAN_MODE
p18380
tp18381
I1
s(Vinsert
p18382
I43
VSimpleType: JLabel
p18383
tp18384
I2
s(Vinsert
p18385
I42
VSimpleName: connect
p18386
tp18387
I7
s(Vinsert
p18388
I45
VStringLiteral: "VMoRHfX6apzfyMkvWhzQLCYvAcq6Zu7++E7PrXNxUJzk/FZW8P9eRgyyyMFnDj53aP1cDje9\u005cn"
p18389
tp18390
I1
s(Vinsert
p18391
I42
VSimpleName: getCount_10_20
p18392
tp18393
I1
s(Vinsert
p18394
I42
VSimpleName: targetSql
p18395
tp18396
I1
s(Vinsert
p18397
I42
VSimpleName: addSymbol
p18398
tp18399
I8
s(Vinsert
p18400
I42
VSimpleName: updateClause
p18401
tp18402
I4
s(Vinsert
p18403
I45
VStringLiteral: "SHOW PARTITIONS "
p18404
tp18405
I1
s(Vinsert
p18406
I45
VStringLiteral: "alter view view_name rename to new_view_name;"
p18407
tp18408
I1
s(Vinsert
p18409
I42
VSimpleName: procedureDataType
p18410
tp18411
I1
s(Vinsert
p18412
I43
VSimpleType: BlowfishDecrypter
p18413
tp18414
I2
s(Vinsert
p18415
I42
VSimpleName: MySqlWallTest30
p18416
tp18417
I1
s(Vinsert
p18418
I45
VStringLiteral: "abcdefg1234567890"
p18419
tp18420
I1
s(Vinsert
p18421
I43
VSimpleType: Violation
p18422
tp18423
I3
s(Vinsert
p18424
I42
VSimpleName: fomatSQL
p18425
tp18426
I2
s(Vinsert
p18427
I45
VStringLiteral: "PCTUSED 40\u005cn"
p18428
tp18429
I8
s(Vinsert
p18430
I45
VStringLiteral: "rawtypes"
p18431
tp18432
I1
s(Vinsert
p18433
I40
VQualifiedName: propertyExpr.name
p18434
tp18435
I1
s(Vinsert
p18436
I45
VStringLiteral: "? IN (1, 2, 3)"
p18437
tp18438
I1
s(Vinsert
p18439
I45
VStringLiteral: "A"
p18440
tp18441
I3
s(Vinsert
p18442
I45
VStringLiteral: "  END LOOP;\u005cn"
p18443
tp18444
I1
s(Vinsert
p18445
I40
VQualifiedName: Token.ON
p18446
tp18447
I1
s(Vinsert
p18448
I42
VSimpleName: READ
p18449
tp18450
I1
s(Vinsert
p18451
I42
VSimpleName: foreignKey
p18452
tp18453
I1
s(Vinsert
p18454
I42
VSimpleName: jmx
p18455
tp18456
I2
s(Vinsert
p18457
I45
VStringLiteral: "CREATE TABLE `session` ("
p18458
tp18459
I1
s(Vinsert
p18460
I42
VSimpleName: isStatementExecutableSqlLogEnable
p18461
tp18462
I2
s(Vinsert
p18463
I42
VSimpleName: readLock
p18464
tp18465
I4
s(Vinsert
p18466
I42
VSimpleName: setParseValuesSize
p18467
tp18468
I1
s(Vinsert
p18469
I40
VQualifiedName: Types.INTEGER
p18470
tp18471
I2
s(Vinsert
p18472
I42
VSimpleName: exceptionSoters
p18473
tp18474
I1
s(Vinsert
p18475
I42
VSimpleName: getClassLoader
p18476
tp18477
I4
s(Vinsert
p18478
I42
VSimpleName: toBytes
p18479
tp18480
I10
s(Vinsert
p18481
I42
VSimpleName: getWebAppStatSet
p18482
tp18483
I2
s(Vinsert
p18484
I42
VSimpleName: values
p18485
tp18486
I39
s(Vinsert
p18487
I42
VSimpleName: afterExecute
p18488
tp18489
I4
s(Vinsert
p18490
I45
VStringLiteral: "  PRIMARY KEY (`id`,`c_tinyint`),\u005cn"
p18491
tp18492
I1
s(Vinsert
p18493
I43
VSimpleType: RegexpMethodPointcutAdvisor
p18494
tp18495
I1
s(Vinsert
p18496
I42
VSimpleName: divide
p18497
tp18498
I1
s(Vinsert
p18499
I42
VSimpleName: pow
p18500
tp18501
I2
s(Vinsert
p18502
I42
VSimpleName: addEnvironment
p18503
tp18504
I2
s(Vinsert
p18505
I42
VSimpleName: aliasMap
p18506
tp18507
I31
s(Vinsert
p18508
I42
VSimpleName: raw
p18509
tp18510
I5
s(Vinsert
p18511
I42
VSimpleName: test_byte_1
p18512
tp18513
I4
s(Vinsert
p18514
I42
VSimpleName: needRetry
p18515
tp18516
I2
s(Vinsert
p18517
I42
VSimpleName: EvalMethodModTest
p18518
tp18519
I1
s(Vinsert
p18520
I40
VQualifiedName: Types.VARCHAR
p18521
tp18522
I1
s(Vinsert
p18523
I45
VStringLiteral: "                   and t.ccounty_code = 'CP'"
p18524
tp18525
I1
s(Vinsert
p18526
I45
VStringLiteral: "TIME"
p18527
tp18528
I1
s(Vinsert
p18529
I42
VSimpleName: t
p18530
tp18531
I1
s(Vinsert
p18532
I42
VSimpleName: getBoolean
p18533
tp18534
I4
s(Vinsert
p18535
I45
VStringLiteral: "\u005cn\u005ctimpl_class NVARCHAR(255),"
p18536
tp18537
I1
s(Vinsert
p18538
I45
VStringLiteral: "\u005ctPARTITION PART01\u005cn"
p18539
tp18540
I1
s(Vinsert
p18541
I42
VSimpleName: flag
p18542
tp18543
I1
s(Vinsert
p18544
I42
VSimpleName: apply
p18545
tp18546
I3
s(Vinsert
p18547
I42
VSimpleName: forName
p18548
tp18549
I11
s(Vinsert
p18550
I45
VStringLiteral: "_result"
p18551
tp18552
I1
s(Vinsert
p18553
I45
VStringLiteral: "USER "
p18554
tp18555
I1
s(Vinsert
p18556
I42
VSimpleName: recycleFilterChain
p18557
tp18558
I1
s(Vinsert
p18559
I43
VSimpleType: FilterEventAdapter
p18560
tp18561
I2
s(Vinsert
p18562
I42
VSimpleName: requestNumber
p18563
tp18564
I2
s(Vinsert
p18565
I43
VSimpleType: Exception
p18566
tp18567
I583
s(Vinsert
p18568
I45
VStringLiteral: "select * from "
p18569
tp18570
I1
s(Vinsert
p18571
I45
VStringLiteral: "STATISTIC"
p18572
tp18573
I1
s(Vinsert
p18574
I45
VStringLiteral: "?/?"
p18575
tp18576
I1
s(Vinsert
p18577
I42
VSimpleName: connectionId
p18578
tp18579
I1
s(Vinsert
p18580
I39
VPrimitiveType: char
p18581
tp18582
I25
s(Vinsert
p18583
I45
VStringLiteral: "jdbc:mock:x1"
p18584
tp18585
I1
s(Vinsert
p18586
I42
VSimpleName: getCreatedTime
p18587
tp18588
I2
s(Vinsert
p18589
I42
VSimpleName: SQLSubPartitionByRange
p18590
tp18591
I1
s(Vinsert
p18592
I42
VSimpleName: SQLRollbackStatement
p18593
tp18594
I3
s(Vinsert
p18595
I45
VStringLiteral: "BUILD IMMEDIATE\u005cn"
p18596
tp18597
I2
s(Vinsert
p18598
I42
VSimpleName: get
p18599
tp18600
I581
s(Vinsert
p18601
I13
VCharacterLiteral: '^'
p18602
tp18603
I1
s(Vinsert
p18604
I74
VParameterizedType: List<SQLCommentHint>
p18605
tp18606
I1
s(Vinsert
p18607
I42
VSimpleName: setFlashback
p18608
tp18609
I1
s(Vinsert
p18610
I45
VStringLiteral: "FROM clu$\u005cn"
p18611
tp18612
I1
s(Vinsert
p18613
I42
VSimpleName: charsetExpr
p18614
tp18615
I1
s(Vinsert
p18616
I42
VSimpleName: sp
p18617
tp18618
I10
s(Vinsert
p18619
I42
VSimpleName: StatFilter
p18620
tp18621
I15
s(Vinsert
p18622
I40
VQualifiedName: x.ignore
p18623
tp18624
I1
s(Vinsert
p18625
I45
VStringLiteral: "ANALYZE "
p18626
tp18627
I1
s(Vinsert
p18628
I42
VSimpleName: domain
p18629
tp18630
I1
s(Vinsert
p18631
I43
VSimpleType: Log
p18632
tp18633
I8
s(Vinsert
p18634
I42
VSimpleName: getMinValue
p18635
tp18636
I1
s(Vinsert
p18637
I42
VSimpleName: isInited
p18638
tp18639
I1
s(Vinsert
p18640
I45
VStringLiteral: "{\u005c"\u005c\u005cu0006\u005c":\u005c"123\u005c"}"
p18641
tp18642
I1
s(Vinsert
p18643
I42
VSimpleName: JdbcSqlStatValue
p18644
tp18645
I1
s(Vinsert
p18646
I40
VQualifiedName: other.parameters
p18647
tp18648
I1
s(Vinsert
p18649
I74
VParameterizedType: List<Filter>
p18650
tp18651
I2
s(Vinsert
p18652
I45
VStringLiteral: "QUEUE_ON_PK "
p18653
tp18654
I1
s(Vinsert
p18655
I42
VSimpleName: columnLabel
p18656
tp18657
I7
s(Vinsert
p18658
I42
VSimpleName: save
p18659
tp18660
I1
s(Vinsert
p18661
I40
VQualifiedName: statValue.connectionHoldTimeHistogram
p18662
tp18663
I1
s(Vinsert
p18664
I43
VSimpleType: SQLParserFeature
p18665
tp18666
I5
s(Vinsert
p18667
I45
VStringLiteral: "\u005ctproject_snapshot_id,\u005cn"
p18668
tp18669
I1
s(Vinsert
p18670
I42
VSimpleName: database
p18671
tp18672
I15
s(Vinsert
p18673
I42
VSimpleName: exec
p18674
tp18675
I2
s(Vinsert
p18676
I45
VStringLiteral: "to "
p18677
tp18678
I1
s(Vinsert
p18679
I45
VStringLiteral: "\u005ct\u005ctAND a.acct_day = '03')\u005cn"
p18680
tp18681
I1
s(Vinsert
p18682
I45
VStringLiteral: "\u005ctCELL_FLASH_CACHE DEFAULT\u005cn"
p18683
tp18684
I5
s(Vinsert
p18685
I40
VQualifiedName: Initially.DEFERRED
p18686
tp18687
I1
s(Vinsert
p18688
I43
VSimpleType: SensitiveParameters
p18689
tp18690
I5
s(Vinsert
p18691
I45
VStringLiteral: "\u005cnMAXTRANS 255"
p18692
tp18693
I5
s(Vinsert
p18694
I45
VStringLiteral: "\u005cn\u005ct\u005ctCONSTRAINT fk_pno REFERENCES oe.product_information (product_id),"
p18695
tp18696
I2
s(Vinsert
p18697
I45
VStringLiteral: ") b    Order by       product_id desc  ) a limit 25 offset (1-1)*20"
p18698
tp18699
I1
s(Vinsert
p18700
I5
VArrayType: String[]
p18701
tp18702
I7
s(Vinsert
p18703
I42
VSimpleName: OracleSizeExpr
p18704
tp18705
I2
s(Vinsert
p18706
I42
VSimpleName: SYS_PROP_CONFIG_ENCRYPTED_PASSWORD
p18707
tp18708
I1
s(Vinsert
p18709
I42
VSimpleName: InputStreamReader
p18710
tp18711
I2
s(Vinsert
p18712
I42
VSimpleName: var
p18713
tp18714
I9
s(Vinsert
p18715
I42
VSimpleName: parseLeave
p18716
tp18717
I1
s(Vinsert
p18718
I45
VStringLiteral: "jdbc:log4jdbc:microsoft:"
p18719
tp18720
I1
s(Vinsert
p18721
I42
VSimpleName: getElseIfList
p18722
tp18723
I1
s(Vinsert
p18724
I42
VSimpleName: threads
p18725
tp18726
I2
s(Vinsert
p18727
I42
VSimpleName: getStatement
p18728
tp18729
I17
s(Vinsert
p18730
I42
VSimpleName: symbol
p18731
tp18732
I4
s(Vinsert
p18733
I42
VSimpleName: FactoryBean
p18734
tp18735
I3
s(Vinsert
p18736
I42
VSimpleName: handleResponseMessage
p18737
tp18738
I1
s(Vinsert
p18739
I42
VSimpleName: getInstances
p18740
tp18741
I1
s(Vinsert
p18742
I42
VSimpleName: SHARE_ROW_EXCLUSIVE
p18743
tp18744
I1
s(Vinsert
p18745
I40
VQualifiedName: TableStat.Name
p18746
tp18747
I4
s(Vinsert
p18748
I42
VSimpleName: formatSql
p18749
tp18750
I7
s(Vinsert
p18751
I43
VSimpleType: ResultSetMetaData
p18752
tp18753
I2
s(Vinsert
p18754
I42
VSimpleName: decrementIndent
p18755
tp18756
I9
s(Vinsert
p18757
I45
VStringLiteral: "from runoob_tbl\u005cn"
p18758
tp18759
I2
s(Vinsert
p18760
I40
VQualifiedName: that.autoGeneratedKeys
p18761
tp18762
I1
s(Vinsert
p18763
I45
VStringLiteral: "\u005cn\u005ctjob_id VARCHAR2(9),"
p18764
tp18765
I6
s(Vinsert
p18766
I40
VQualifiedName: java.util.concurrent.locks.ReentrantLock
p18767
tp18768
I3
s(Vinsert
p18769
I45
VStringLiteral: "\u005cnORDER BY i.relname"
p18770
tp18771
I1
s(Vinsert
p18772
I42
VSimpleName: hashArray
p18773
tp18774
I1
s(Vinsert
p18775
I42
VSimpleName: toDB2String
p18776
tp18777
I4
s(Vinsert
p18778
I45
VStringLiteral: "\u005ctc_mediumtext mediumtext,\u005cn"
p18779
tp18780
I2
s(Vinsert
p18781
I42
VSimpleName: sum
p18782
tp18783
I1
s(Vinsert
p18784
I42
VSimpleName: connectionEventListeners
p18785
tp18786
I1
s(Vinsert
p18787
I45
VStringLiteral: "Syntax error"
p18788
tp18789
I1
s(Vinsert
p18790
I42
VSimpleName: getOwnernName
p18791
tp18792
I9
s(Vinsert
p18793
I42
VSimpleName: setDataDirectory
p18794
tp18795
I1
s(Vinsert
p18796
I40
VQualifiedName: Token.BANG
p18797
tp18798
I2
s(Vinsert
p18799
I42
VSimpleName: SQLServerUseStatement
p18800
tp18801
I1
s(Vinsert
p18802
I45
VStringLiteral: "\u005ctFULLTEXT INDEX name4_idx_c_longblob(c_longblob),\u005cn"
p18803
tp18804
I1
s(Vinsert
p18805
I42
VSimpleName: getSeed
p18806
tp18807
I2
s(Vinsert
p18808
I42
VSimpleName: DEFAULT_FORMAT_OPTION
p18809
tp18810
I2
s(Vinsert
p18811
I45
VStringLiteral: " `Extent1`.`BankAccountName`, "
p18812
tp18813
I1
s(Vinsert
p18814
I45
VStringLiteral: "\u005ctand name != 'none'\u005cn"
p18815
tp18816
I1
s(Vinsert
p18817
I45
VStringLiteral: "ENABLE"
p18818
tp18819
I1
s(Vinsert
p18820
I42
VSimpleName: EvalMethodPITest
p18821
tp18822
I1
s(Vinsert
p18823
I42
VSimpleName: readLine
p18824
tp18825
I1
s(Vinsert
p18826
I43
VSimpleType: MySqlSelectQueryBlock.Limit
p18827
tp18828
I1
s(Vinsert
p18829
I42
VSimpleName: isNumber
p18830
tp18831
I1
s(Vinsert
p18832
I42
VSimpleName: getPhysicalConnectCount
p18833
tp18834
I1
s(Vinsert
p18835
I43
VSimpleType: MySQLException
p18836
tp18837
I1
s(Vinsert
p18838
I42
VSimpleName: dataSourcesList
p18839
tp18840
I2
s(Vinsert
p18841
I42
VSimpleName: startMillis
p18842
tp18843
I7
s(Vinsert
p18844
I40
VQualifiedName: value.physicalConnectErrorCount
p18845
tp18846
I1
s(Vinsert
p18847
I43
VSimpleType: HMapping
p18848
tp18849
I1
s(Vinsert
p18850
I45
VStringLiteral: ""
p18851
tp18852
I20
s(Vinsert
p18853
I45
VStringLiteral: "bvt/parser/oracle-10.txt"
p18854
tp18855
I1
s(Vinsert
p18856
I40
VQualifiedName: Token.ORDER
p18857
tp18858
I5
s(Vinsert
p18859
I42
VSimpleName: setDelimitedBy
p18860
tp18861
I1
s(Vinsert
p18862
I42
VSimpleName: getSpringStatSet
p18863
tp18864
I1
s(Vinsert
p18865
I45
VStringLiteral: "select t.a,t.b from t where cast(t.statdate as decimal) >=20160626"
p18866
tp18867
I1
s(Vinsert
p18868
I43
VSimpleType: WrapperProxy
p18869
tp18870
I3
s(Vinsert
p18871
I45
VStringLiteral: "\u005cn\u005ctREORGANIZE s0, s1, p1, p2, p3 INTO (PARTITION m0 VALUES LESS THAN (1980), PARTITION m1 VALUES LESS THAN (2000))"
p18872
tp18873
I1
s(Vinsert
p18874
I42
VSimpleName: getLastSlowParameters
p18875
tp18876
I1
s(Vinsert
p18877
I42
VSimpleName: validationQuery
p18878
tp18879
I1
s(Vinsert
p18880
I45
VStringLiteral: "\u005cn\u005ctlocation_id NUMBER(4),"
p18881
tp18882
I2
s(Vinsert
p18883
I40
VQualifiedName: JdbcUtils.H2
p18884
tp18885
I2
s(Vinsert
p18886
I42
VSimpleName: toSQLString
p18887
tp18888
I184
s(Vinsert
p18889
I45
VStringLiteral: "\u005cn\u005cnCREATE INDEX "
p18890
tp18891
I1
s(Vinsert
p18892
I42
VSimpleName: closeStatement
p18893
tp18894
I1
s(Vinsert
p18895
I74
VParameterizedType: List<ValuesClause>
p18896
tp18897
I2
s(Vinsert
p18898
I42
VSimpleName: SQLParserUtils
p18899
tp18900
I40
s(Vinsert
p18901
I42
VSimpleName: url_0
p18902
tp18903
I1
s(Vinsert
p18904
I42
VSimpleName: clone
p18905
tp18906
I106
s(Vinsert
p18907
I43
VSimpleType: MySqlKillStatement
p18908
tp18909
I1
s(Vinsert
p18910
I42
VSimpleName: setDefaultCatalog
p18911
tp18912
I1
s(Vinsert
p18913
I42
VSimpleName: SQLSelectQueryBlock
p18914
tp18915
I41
s(Vinsert
p18916
I43
VSimpleType: TeradataASTVisitor
p18917
tp18918
I2
s(Vinsert
p18919
I42
VSimpleName: statementName
p18920
tp18921
I4
s(Vinsert
p18922
I42
VSimpleName: OracleSelectSubqueryTableSource
p18923
tp18924
I2
s(Vinsert
p18925
I42
VSimpleName: MockStatement
p18926
tp18927
I3
s(Vinsert
p18928
I45
VStringLiteral: "\u005ct\u005c"TEMP_TABLE_NAME\u005c" VARCHAR2(50)\u005cn"
p18929
tp18930
I1
s(Vinsert
p18931
I42
VSimpleName: DruidDataSourceStatJNDIStatStrategy
p18932
tp18933
I1
s(Vinsert
p18934
I45
VStringLiteral: "\u005ct\u005ct'VerifyScrollCheckcode', \u005cn"
p18935
tp18936
I1
s(Vinsert
p18937
I42
VSimpleName: exit
p18938
tp18939
I1
s(Vinsert
p18940
I45
VStringLiteral: "CREATE TABLE `snapshot_data` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `snapshot_id` integer, `resource_id` integer, `snapshot_data` mediumtext, `data_type` varchar(50), `created_at` datetime, `updated_at` datetime) ENGINE=InnoDB CHARACTER SET utf8 COLLATE utf8_bin"
p18941
tp18942
I1
s(Vinsert
p18943
I42
VSimpleName: ispPivileged
p18944
tp18945
I2
s(Vinsert
p18946
I45
VStringLiteral: "INSERT INTO mycart.`member_cart_0172` (`cart_id`, `sku_id`, `item_id`, `quantity`, `user_id`\u005cn"
p18947
tp18948
I1
s(Vinsert
p18949
I42
VSimpleName: ast
p18950
tp18951
I1
s(Vinsert
p18952
I40
VQualifiedName: Statement.NO_GENERATED_KEYS
p18953
tp18954
I1
s(Vinsert
p18955
I45
VStringLiteral: "CREATE OR REPLACE TRIGGER ECC.GAPM_PROJECT_INFO_SYNC_IOA_t\u005cn"
p18956
tp18957
I1
s(Vinsert
p18958
I45
VStringLiteral: "\u005ct\u005ctAND a.SID = b.SID\u005cn"
p18959
tp18960
I1
s(Vinsert
p18961
I43
VSimpleType: ActionDesc
p18962
tp18963
I1
s(Vinsert
p18964
I42
VSimpleName: MapHandler
p18965
tp18966
I1
s(Vinsert
p18967
I42
VSimpleName: ServletContextEvent
p18968
tp18969
I1
s(Vinsert
p18970
I42
VSimpleName: isBlock
p18971
tp18972
I1
s(Vinsert
p18973
I40
VQualifiedName: oracle.jdbc.OraclePreparedStatement
p18974
tp18975
I3
s(Vinsert
p18976
I42
VSimpleName: addSubPartition
p18977
tp18978
I1
s(Vinsert
p18979
I45
VStringLiteral: "\u005ct\u005ctSELECT projects_seq.NEXTVAL\u005cn"
p18980
tp18981
I1
s(Vinsert
p18982
I43
VSimpleType: SystemException
p18983
tp18984
I1
s(Vinsert
p18985
I42
VSimpleName: SQLServerStatementParser
p18986
tp18987
I91
s(Vinsert
p18988
I42
VSimpleName: setRemoveAbandonedTimeoutMillis
p18989
tp18990
I1
s(Vinsert
p18991
I42
VSimpleName: getCreateTableScript
p18992
tp18993
I2
s(Vinsert
p18994
I40
VQualifiedName: Token.TRUNCATE
p18995
tp18996
I1
s(Vinsert
p18997
I40
VQualifiedName: x.columns
p18998
tp18999
I3
s(Vinsert
p19000
I42
VSimpleName: printSelectList
p19001
tp19002
I1
s(Vinsert
p19003
I42
VSimpleName: entryIndex
p19004
tp19005
I1
s(Vinsert
p19006
I40
VQualifiedName: On.UPDATE
p19007
tp19008
I1
s(Vinsert
p19009
I42
VSimpleName: Map
p19010
tp19011
I39
s(Vinsert
p19012
I42
VSimpleName: SQLPanel
p19013
tp19014
I2
s(Vinsert
p19015
I42
VSimpleName: setUpdateWhereAlayTrueCheck
p19016
tp19017
I1
s(Vinsert
p19018
I43
VSimpleType: HiveCreateTableStatement
p19019
tp19020
I2
s(Vinsert
p19021
I43
VSimpleType: MySqlUserName
p19022
tp19023
I1
s(Vinsert
p19024
I42
VSimpleName: mockStmt
p19025
tp19026
I6
s(Vinsert
p19027
I42
VSimpleName: isModifiesSqlData
p19028
tp19029
I1
s(Vinsert
p19030
I40
VQualifiedName: x.items
p19031
tp19032
I3
s(Vinsert
p19033
I42
VSimpleName: LogManager
p19034
tp19035
I1
s(Vinsert
p19036
I42
VSimpleName: isNoWriteToBinlog
p19037
tp19038
I2
s(Vinsert
p19039
I42
VSimpleName: getMasterWeightRegionEnd
p19040
tp19041
I1
s(Vinsert
p19042
I42
VSimpleName: setHasSessionBefore
p19043
tp19044
I1
s(Vinsert
p19045
I45
VStringLiteral: "\u005ctSELECT to_char(SYSDATE, 'yyyy-mm-dd HH24:mi:ss')\u005cn"
p19046
tp19047
I1
s(Vinsert
p19048
I42
VSimpleName: getAliveMillisMax
p19049
tp19050
I1
s(Vinsert
p19051
I43
VSimpleType: OracleLexer
p19052
tp19053
I1
s(Vinsert
p19054
I45
VStringLiteral: "-id"
p19055
tp19056
I3
s(Vinsert
p19057
I40
VQualifiedName: com.alibaba.druid.stat.JdbcDataSourceStat
p19058
tp19059
I2
s(Vinsert
p19060
I42
VSimpleName: getPoolingPeakTime
p19061
tp19062
I1
s(Vinsert
p19063
I42
VSimpleName: setIndexIn
p19064
tp19065
I1
s(Vinsert
p19066
I42
VSimpleName: getHaving
p19067
tp19068
I3
s(Vinsert
p19069
I42
VSimpleName: MySqlHintStatement
p19070
tp19071
I3
s(Vinsert
p19072
I42
VSimpleName: getDuplicateKeyUpdate
p19073
tp19074
I1
s(Vinsert
p19075
I45
VStringLiteral: "select coalesce(f1,f2) from dual"
p19076
tp19077
I1
s(Vinsert
p19078
I42
VSimpleName: getSqlStat
p19079
tp19080
I10
s(Vinsert
p19081
I42
VSimpleName: hints
p19082
tp19083
I34
s(Vinsert
p19084
I42
VSimpleName: pstmt
p19085
tp19086
I61
s(Vinsert
p19087
I42
VSimpleName: transInfo
p19088
tp19089
I1
s(Vinsert
p19090
I42
VSimpleName: setInvokeCount
p19091
tp19092
I1
s(Vinsert
p19093
I40
VQualifiedName: FnvHash.Constants.VALIDATE
p19094
tp19095
I1
s(Vinsert
p19096
I40
VQualifiedName: java.util.Collections
p19097
tp19098
I16
s(Vinsert
p19099
I42
VSimpleName: unionWarnnings
p19100
tp19101
I1
s(Vinsert
p19102
I45
VStringLiteral: "\u005cn\u005ctPARTITION p1 VALUES LESS THAN (5001)"
p19103
tp19104
I2
s(Vinsert
p19105
I42
VSimpleName: PhoenixLexer
p19106
tp19107
I1
s(Vinsert
p19108
I45
VStringLiteral: "jdbc:sqlite:"
p19109
tp19110
I1
s(Vinsert
p19111
I42
VSimpleName: ColumnStatisticClause
p19112
tp19113
I1
s(Vinsert
p19114
I40
VQualifiedName: com.alibaba.druid.stat.JdbcStatContext
p19115
tp19116
I2
s(Vinsert
p19117
I45
VStringLiteral: "DELETE FROM customers\u005cn"
p19118
tp19119
I1
s(Vinsert
p19120
I42
VSimpleName: createShardingVisitor
p19121
tp19122
I1
s(Vinsert
p19123
I42
VSimpleName: test_BigInteger
p19124
tp19125
I5
s(Vinsert
p19126
I42
VSimpleName: setWallContext
p19127
tp19128
I1
s(Vinsert
p19129
I45
VStringLiteral: "select *"
p19130
tp19131
I5
s(Vinsert
p19132
I42
VSimpleName: setTableOf
p19133
tp19134
I1
s(Vinsert
p19135
I42
VSimpleName: HashSet
p19136
tp19137
I5
s(Vinsert
p19138
I42
VSimpleName: SQLExprParser
p19139
tp19140
I17
s(Vinsert
p19141
I42
VSimpleName: getParameterClassName
p19142
tp19143
I1
s(Vinsert
p19144
I42
VSimpleName: sqlStatIdSeed
p19145
tp19146
I2
s(Vinsert
p19147
I42
VSimpleName: SQLDeleteBuilder
p19148
tp19149
I1
s(Vinsert
p19150
I45
VStringLiteral: "execute s using @version, @increment"
p19151
tp19152
I1
s(Vinsert
p19153
I45
VStringLiteral: "t3"
p19154
tp19155
I1
s(Vinsert
p19156
I42
VSimpleName: isReferenced
p19157
tp19158
I1
s(Vinsert
p19159
I42
VSimpleName: setCharacterSet
p19160
tp19161
I1
s(Vinsert
p19162
I43
VSimpleType: MockResultSetMetaData
p19163
tp19164
I2
s(Vinsert
p19165
I42
VSimpleName: getHitCount
p19166
tp19167
I4
s(Vinsert
p19168
I42
VSimpleName: keys
p19169
tp19170
I2
s(Vinsert
p19171
I45
VStringLiteral: "FROM `tasks`\u005cn"
p19172
tp19173
I1
s(Vinsert
p19174
I42
VSimpleName: getLexer
p19175
tp19176
I7
s(Vinsert
p19177
I42
VSimpleName: getWaitTime
p19178
tp19179
I1
s(Vinsert
p19180
I42
VSimpleName: selectSubqueryTableSource
p19181
tp19182
I2
s(Vinsert
p19183
I34
VNumberLiteral: 2
p19184
tp19185
I59
s(Vinsert
p19186
I42
VSimpleName: lastAccessTimeMillis
p19187
tp19188
I3
s(Vinsert
p19189
I45
VStringLiteral: "{conn-"
p19190
tp19191
I2
s(Vinsert
p19192
I45
VStringLiteral: "select total_day_cnt * EXP(-datediff(to_date('20150819', 'yyyymmdd'), last_time, 'dd') / 60) from dual"
p19193
tp19194
I2
s(Vinsert
p19195
I45
VStringLiteral: "      V_RETURN := V_RETURN || 'Z';\u005cn"
p19196
tp19197
I1
s(Vinsert
p19198
I42
VSimpleName: requestErrorCount
p19199
tp19200
I1
s(Vinsert
p19201
I40
VQualifiedName: sqlOver.windowingBetweenEndFollowing
p19202
tp19203
I1
s(Vinsert
p19204
I42
VSimpleName: initialize
p19205
tp19206
I2
s(Vinsert
p19207
I42
VSimpleName: ALI_ORACLE
p19208
tp19209
I1
s(Vinsert
p19210
I40
VQualifiedName: Level.INFO
p19211
tp19212
I2
s(Vinsert
p19213
I42
VSimpleName: AtomicInteger
p19214
tp19215
I5
s(Vinsert
p19216
I74
VParameterizedType: HashMap<String,Token>
p19217
tp19218
I3
s(Vinsert
p19219
I45
VStringLiteral: "create table t as select * from dual;"
p19220
tp19221
I1
s(Vinsert
p19222
I42
VSimpleName: pooledStmt2
p19223
tp19224
I1
s(Vinsert
p19225
I42
VSimpleName: out
p19226
tp19227
I63
s(Vinsert
p19228
I42
VSimpleName: setExternalRejectLimit
p19229
tp19230
I1
s(Vinsert
p19231
I45
VStringLiteral: "\u005cn\u005cthired DATE NOT NULL DEFAULT '1970-01-01', "
p19232
tp19233
I1
s(Vinsert
p19234
I43
VSimpleType: SQLUtils.FormatOption
p19235
tp19236
I10
s(Vinsert
p19237
I45
VStringLiteral: "\u005ctINNER JOIN (\u005cn"
p19238
tp19239
I1
s(Vinsert
p19240
I31
VMethodDeclaration
p19241
tp19242
I1009
s(Vinsert
p19243
I42
VSimpleName: getContentPane
p19244
tp19245
I1
s(Vinsert
p19246
I45
VStringLiteral: "MAXTRANS 255\u005cn"
p19247
tp19248
I11
s(Vinsert
p19249
I42
VSimpleName: val
p19250
tp19251
I15
s(Vinsert
p19252
I42
VSimpleName: setReferenceOn
p19253
tp19254
I1
s(Vinsert
p19255
I42
VSimpleName: SQLServerLexer
p19256
tp19257
I2
s(Vinsert
p19258
I42
VSimpleName: orderBy
p19259
tp19260
I43
s(Vinsert
p19261
I42
VSimpleName: restart
p19262
tp19263
I2
s(Vinsert
p19264
I42
VSimpleName: dataSourceB
p19265
tp19266
I6
s(Vinsert
p19267
I42
VSimpleName: test_genKeys1024
p19268
tp19269
I1
s(Vinsert
p19270
I42
VSimpleName: parseTruncate
p19271
tp19272
I1
s(Vinsert
p19273
I45
VStringLiteral: ",   user.name as creator"
p19274
tp19275
I1
s(Vinsert
p19276
I45
VStringLiteral: "5'TW'"
p19277
tp19278
I1
s(Vinsert
p19279
I45
VStringLiteral: "\u005cn\u005ct\u005c"ID\u005c" NUMBER(38, 0) NOT NULL ENABLE,"
p19280
tp19281
I1
s(Vinsert
p19282
I45
VStringLiteral: "\u005ctLEFT JOIN (\u005cn"
p19283
tp19284
I1
s(Vinsert
p19285
I45
VStringLiteral: "syntax error, illegal charset. "
p19286
tp19287
I1
s(Vinsert
p19288
I43
VSimpleType: MockCallableStatement
p19289
tp19290
I5
s(Vinsert
p19291
I42
VSimpleName: NumberFormatException
p19292
tp19293
I2
s(Vinsert
p19294
I42
VSimpleName: PGAnalytic
p19295
tp19296
I2
s(Vinsert
p19297
I42
VSimpleName: getPermitFunctions
p19298
tp19299
I4
s(Vinsert
p19300
I43
VSimpleType: OracleValidConnectionChecker
p19301
tp19302
I1
s(Vinsert
p19303
I42
VSimpleName: setConnectionInitSqls
p19304
tp19305
I1
s(Vinsert
p19306
I42
VSimpleName: SQLAlterTableDropConstraint
p19307
tp19308
I7
s(Vinsert
p19309
I42
VSimpleName: callStmt
p19310
tp19311
I8
s(Vinsert
p19312
I45
VStringLiteral: "\u005cn\u005ctproduct_status VARCHAR2(20),"
p19313
tp19314
I2
s(Vinsert
p19315
I42
VSimpleName: PoolablePreparedStatement
p19316
tp19317
I2
s(Vinsert
p19318
I45
VStringLiteral: "alter table sale_detail add if not exists partition (sale_date='201312', region='hangzhou');"
p19319
tp19320
I1
s(Vinsert
p19321
I42
VSimpleName: MySqlRepeatStatement
p19322
tp19323
I1
s(Vinsert
p19324
I45
VStringLiteral: "stat,trace"
p19325
tp19326
I1
s(Vinsert
p19327
I43
VSimpleType: PGExceptionSorter
p19328
tp19329
I1
s(Vinsert
p19330
I43
VSimpleType: MultiConnectionHolder
p19331
tp19332
I1
s(Vinsert
p19333
I42
VSimpleName: clob
p19334
tp19335
I9
s(Vinsert
p19336
I45
VStringLiteral: "                 where auser.cuser_code = ur.cuser_code"
p19337
tp19338
I1
s(Vinsert
p19339
I42
VSimpleName: offsetQueryBlock
p19340
tp19341
I1
s(Vinsert
p19342
I42
VSimpleName: SQLBetweenExpr
p19343
tp19344
I1
s(Vinsert
p19345
I42
VSimpleName: declares
p19346
tp19347
I2
s(Vinsert
p19348
I40
VQualifiedName: JdbcUtils.PHOENIX
p19349
tp19350
I2
s(Vinsert
p19351
I45
VStringLiteral: "\u005cn\u005ctcust_first_name varchar2(20),"
p19352
tp19353
I2
s(Vinsert
p19354
I42
VSimpleName: hashCode
p19355
tp19356
I33
s(Vinsert
p19357
I42
VSimpleName: setLowBound
p19358
tp19359
I2
s(Vinsert
p19360
I42
VSimpleName: stringToInteger
p19361
tp19362
I1
s(Vinsert
p19363
I42
VSimpleName: initedLatch
p19364
tp19365
I1
s(Vinsert
p19366
I42
VSimpleName: rowType
p19367
tp19368
I3
s(Vinsert
p19369
I42
VSimpleName: SQLArrayExpr
p19370
tp19371
I3
s(Vinsert
p19372
I45
VStringLiteral: "CREATE TABLE \u005c"SONAR\u005c".\u005c"AUTHORS\u005c" ("
p19373
tp19374
I1
s(Vinsert
p19375
I45
VStringLiteral: "\u005cnBEGIN"
p19376
tp19377
I2
s(Vinsert
p19378
I45
VStringLiteral: " PRIMARY KEY(`sess_id`),"
p19379
tp19380
I1
s(Vinsert
p19381
I45
VStringLiteral: "ANTI"
p19382
tp19383
I1
s(Vinsert
p19384
I74
VParameterizedType: AtomicLongFieldUpdater<WallSqlStat>
p19385
tp19386
I1
s(Vinsert
p19387
I45
VStringLiteral: "\u005ctPRIMARY KEY (`id`),\u005cn"
p19388
tp19389
I1
s(Vinsert
p19390
I42
VSimpleName: addCondition
p19391
tp19392
I8
s(Vinsert
p19393
I40
VQualifiedName: com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlUnionQuery
p19394
tp19395
I1
s(Vinsert
p19396
I45
VStringLiteral: "ConnectionConnectCount"
p19397
tp19398
I1
s(Vinsert
p19399
I40
VQualifiedName: Concat.instance
p19400
tp19401
I1
s(Vinsert
p19402
I42
VSimpleName: isUseOracleImplicitCache
p19403
tp19404
I1
s(Vinsert
p19405
I45
VStringLiteral: ", collectTime datetime NOT NULL"
p19406
tp19407
I1
s(Vinsert
p19408
I45
VStringLiteral: " `id` bigint(20) unsigned NOT NULL, "
p19409
tp19410
I1
s(Vinsert
p19411
I45
VStringLiteral: "\u005ctGROUP BY order_id\u005cn"
p19412
tp19413
I1
s(Vinsert
p19414
I45
VStringLiteral: "privateKey:"
p19415
tp19416
I1
s(Vinsert
p19417
I42
VSimpleName: Utils
p19418
tp19419
I13
s(Vinsert
p19420
I43
VSimpleType: CompareOp
p19421
tp19422
I1
s(Vinsert
p19423
I42
VSimpleName: testCount
p19424
tp19425
I2
s(Vinsert
p19426
I42
VSimpleName: createXAConnection
p19427
tp19428
I1
s(Vinsert
p19429
I42
VSimpleName: token
p19430
tp19431
I398
s(Vinsert
p19432
I42
VSimpleName: sign
p19433
tp19434
I1
s(Vinsert
p19435
I42
VSimpleName: getYoungGC
p19436
tp19437
I4
s(Vinsert
p19438
I42
VSimpleName: typeExpr
p19439
tp19440
I2
s(Vinsert
p19441
I45
VStringLiteral: "\u005ctAND s.cust_id = c.cust_id\u005cn"
p19442
tp19443
I1
s(Vinsert
p19444
I45
VStringLiteral: "\u005ctend_line\u005cn"
p19445
tp19446
I1
s(Vinsert
p19447
I42
VSimpleName: isAbandonded
p19448
tp19449
I1
s(Vinsert
p19450
I40
VQualifiedName: SQLCreateTableStatement.Type.GLOBAL_TEMPORARY
p19451
tp19452
I1
s(Vinsert
p19453
I45
VStringLiteral: "\u005ct\u005ctINITIAL 1048576\u005cn"
p19454
tp19455
I2
s(Vinsert
p19456
I45
VStringLiteral: "CREATE OR REPLACE DEFINER = current_user\u005cn"
p19457
tp19458
I1
s(Vinsert
p19459
I43
VSimpleType: ReentrantLock
p19460
tp19461
I9
s(Vinsert
p19462
I45
VStringLiteral: "\u005ct\u005ctINTO :new.id\u005cn"
p19463
tp19464
I1
s(Vinsert
p19465
I45
VStringLiteral: "\u005cn f2 > 2 -- comment_4"
p19466
tp19467
I1
s(Vinsert
p19468
I42
VSimpleName: noCopy
p19469
tp19470
I1
s(Vinsert
p19471
I43
VSimpleType: MultiDataSourceStatement
p19472
tp19473
I2
s(Vinsert
p19474
I45
VStringLiteral: "update none condition"
p19475
tp19476
I1
s(Vinsert
p19477
I45
VStringLiteral: "ICqJa3yPr6e7z8GZpMH3J0Cx0uQ0B1JuysymdNDlzfTvb7QWsrLU4jGs3h8Mm49/L9nyO4Xh\u005cn"
p19478
tp19479
I1
s(Vinsert
p19480
I42
VSimpleName: getConnectionCount_Alive_1_3_Day
p19481
tp19482
I1
s(Vinsert
p19483
I42
VSimpleName: show
p19484
tp19485
I20
s(Vinsert
p19486
I43
VSimpleType: Driver
p19487
tp19488
I2
s(Vinsert
p19489
I42
VSimpleName: methodInvoke
p19490
tp19491
I1
s(Vinsert
p19492
I45
VStringLiteral: "\u005ct, address, street, number, geom\u005cn"
p19493
tp19494
I1
s(Vinsert
p19495
I42
VSimpleName: getLockQueueLength
p19496
tp19497
I3
s(Vinsert
p19498
I45
VStringLiteral: " ) ENGINE=InnoDB DEFAULT CHARSET=utf8;"
p19499
tp19500
I1
s(Vinsert
p19501
I43
VSimpleType: SQLReplaceStatement
p19502
tp19503
I2
s(Vinsert
p19504
I43
VSimpleType: HBQLVisitor
p19505
tp19506
I2
s(Vinsert
p19507
I42
VSimpleName: isFirstStmt
p19508
tp19509
I1
s(Vinsert
p19510
I42
VSimpleName: isForBrowse
p19511
tp19512
I1
s(Vinsert
p19513
I40
VQualifiedName: com.alibaba.druid.sql.dialect.hive.parser.HiveStatementParser
p19514
tp19515
I1
s(Vinsert
p19516
I13
VCharacterLiteral: ']'
p19517
tp19518
I2
s(Vinsert
p19519
I42
VSimpleName: parseFetchClause
p19520
tp19521
I1
s(Vinsert
p19522
I45
VStringLiteral: "\u005ct\u005ctnumerator := numerator / gcd;\u005cn"
p19523
tp19524
I1
s(Vinsert
p19525
I45
VStringLiteral: "\u005ctDBID DECIMAL(38),\u005cn"
p19526
tp19527
I1
s(Vinsert
p19528
I42
VSimpleName: getLastErrorTimeMillis
p19529
tp19530
I1
s(Vinsert
p19531
I42
VSimpleName: DataSourceInfo
p19532
tp19533
I7
s(Vinsert
p19534
I42
VSimpleName: getTableStat
p19535
tp19536
I18
s(Vinsert
p19537
I45
VStringLiteral: "ConnectionConnectErrorLastStackTrace"
p19538
tp19539
I1
s(Vinsert
p19540
I42
VSimpleName: recursive
p19541
tp19542
I1
s(Vinsert
p19543
I42
VSimpleName: getQueryBlock
p19544
tp19545
I1
s(Vinsert
p19546
I42
VSimpleName: SQLCaseExpr
p19547
tp19548
I4
s(Vinsert
p19549
I43
VSimpleType: MySqlShowIndexesStatement
p19550
tp19551
I2
s(Vinsert
p19552
I42
VSimpleName: MySqlExportParameterVisitor
p19553
tp19554
I3
s(Vinsert
p19555
I42
VSimpleName: WebRequestStat
p19556
tp19557
I2
s(Vinsert
p19558
I42
VSimpleName: testDecrypt
p19559
tp19560
I3
s(Vinsert
p19561
I45
VStringLiteral: "OSWindows8Count"
p19562
tp19563
I1
s(Vinsert
p19564
I45
VStringLiteral: "\u005cnFROM t_nds_web_article"
p19565
tp19566
I1
s(Vinsert
p19567
I45
VStringLiteral: "\u005ct\u005c"INPUT_FILE_SCAN_ONLY\u005c", \u005cn"
p19568
tp19569
I1
s(Vinsert
p19570
I42
VSimpleName: OracleConnection
p19571
tp19572
I11
s(Vinsert
p19573
I42
VSimpleName: dataSourceInfo
p19574
tp19575
I5
s(Vinsert
p19576
I42
VSimpleName: getWhiteListHitCount
p19577
tp19578
I3
s(Vinsert
p19579
I42
VSimpleName: currentTimeMillis
p19580
tp19581
I27
s(Vinsert
p19582
I45
VStringLiteral: "BASICFILE "
p19583
tp19584
I1
s(Vinsert
p19585
I42
VSimpleName: incrementReplaceCunt
p19586
tp19587
I3
s(Vinsert
p19588
I42
VSimpleName: Constructor
p19589
tp19590
I1
s(Vinsert
p19591
I42
VSimpleName: isDigit
p19592
tp19593
I2
s(Vinsert
p19594
I42
VSimpleName: getDefaultRowPretch
p19595
tp19596
I2
s(Vinsert
p19597
I42
VSimpleName: setMaxFieldSize
p19598
tp19599
I2
s(Vinsert
p19600
I42
VSimpleName: ReentrantLock
p19601
tp19602
I9
s(Vinsert
p19603
I45
VStringLiteral: " TO dw_manager"
p19604
tp19605
I1
s(Vinsert
p19606
I40
VQualifiedName: Token.UPDATE
p19607
tp19608
I5
s(Vinsert
p19609
I45
VStringLiteral: "\u005cnLOGGING"
p19610
tp19611
I5
s(Vinsert
p19612
I42
VSimpleName: param3Value
p19613
tp19614
I1
s(Vinsert
p19615
I42
VSimpleName: getCharSetName
p19616
tp19617
I1
s(Vinsert
p19618
I45
VStringLiteral: "\u005ctSELECT ID, COUNT(*)\u005cn"
p19619
tp19620
I1
s(Vinsert
p19621
I45
VStringLiteral: "druid.name"
p19622
tp19623
I1
s(Vinsert
p19624
I45
VStringLiteral: "\u005ct\u005ctELSE IF self.currentstr IS NULL THEN\u005cn"
p19625
tp19626
I1
s(Vinsert
p19627
I42
VSimpleName: addStringReadLength
p19628
tp19629
I1
s(Vinsert
p19630
I45
VStringLiteral: "connection is null"
p19631
tp19632
I1
s(Vinsert
p19633
I45
VStringLiteral: "\u005cn\u005ctinner join t2 a2\u005cnwhere a1.id = a2.id"
p19634
tp19635
I1
s(Vinsert
p19636
I42
VSimpleName: leftBinary
p19637
tp19638
I1
s(Vinsert
p19639
I42
VSimpleName: parseHint
p19640
tp19641
I1
s(Vinsert
p19642
I42
VSimpleName: edges
p19643
tp19644
I1
s(Vinsert
p19645
I45
VStringLiteral: "create table sales (f1 bigint)"
p19646
tp19647
I1
s(Vinsert
p19648
I42
VSimpleName: errorLogging
p19649
tp19650
I3
s(Vinsert
p19651
I42
VSimpleName: OracleDateExpr
p19652
tp19653
I3
s(Vinsert
p19654
I43
VSimpleType: PGPolygonExpr
p19655
tp19656
I5
s(Vinsert
p19657
I45
VStringLiteral: "SELECT COALESCE(("
p19658
tp19659
I1
s(Vinsert
p19660
I74
VParameterizedType: SwingWorker<?,?>
p19661
tp19662
I1
s(Vinsert
p19663
I42
VSimpleName: equalsIgoreOrder
p19664
tp19665
I2
s(Vinsert
p19666
I42
VSimpleName: ignore
p19667
tp19668
I1
s(Vinsert
p19669
I42
VSimpleName: test_limit
p19670
tp19671
I1
s(Vinsert
p19672
I45
VStringLiteral: "privateKey"
p19673
tp19674
I1
s(Vinsert
p19675
I45
VStringLiteral: "ds string, -- c_1"
p19676
tp19677
I1
s(Vinsert
p19678
I45
VStringLiteral: "\u005cnPARTITION BY RANGE (credit_limit) INTERVAL 1000"
p19679
tp19680
I2
s(Vinsert
p19681
I42
VSimpleName: PGLexer
p19682
tp19683
I2
s(Vinsert
p19684
I43
VSimpleType: Error
p19685
tp19686
I1
s(Vinsert
p19687
I42
VSimpleName: getForQuery
p19688
tp19689
I2
s(Vinsert
p19690
I45
VStringLiteral: " select region from sale_detail distribute by region sort by f1 asc;"
p19691
tp19692
I1
s(Vinsert
p19693
I45
VStringLiteral: "\u005ct, \u005c"LEADER\u005c", \u005c"DEPT\u005c", \u005c"STORENO\u005c", \u005c"AREA\u005c", \u005c"TYPE\u005c"\u005cn"
p19694
tp19695
I1
s(Vinsert
p19696
I42
VSimpleName: setConditionAndAlwayTrueAllow
p19697
tp19698
I4
s(Vinsert
p19699
I42
VSimpleName: addDeleteDataCount
p19700
tp19701
I1
s(Vinsert
p19702
I45
VStringLiteral: "connectionHoldTimeHistogram"
p19703
tp19704
I1
s(Vinsert
p19705
I42
VSimpleName: SQLServerOutput
p19706
tp19707
I1
s(Vinsert
p19708
I42
VSimpleName: countSelect
p19709
tp19710
I1
s(Vinsert
p19711
I42
VSimpleName: itemExpr
p19712
tp19713
I1
s(Vinsert
p19714
I45
VStringLiteral: "\u005ctAND b4.system_bom_id = c1.system_bom_id\u005cn"
p19715
tp19716
I1
s(Vinsert
p19717
I42
VSimpleName: deniedSchemas
p19718
tp19719
I2
s(Vinsert
p19720
I45
VStringLiteral: "SELECT COUNT(1) AS count FROM `team` "
p19721
tp19722
I1
s(Vinsert
p19723
I45
VStringLiteral: "\u005ct\u005ctFROM sup_task st\u005cn"
p19724
tp19725
I1
s(Vinsert
p19726
I45
VStringLiteral: "informix"
p19727
tp19728
I1
s(Vinsert
p19729
I45
VStringLiteral: " foreign data wrapper "
p19730
tp19731
I1
s(Vinsert
p19732
I43
VSimpleType: SQLSelectQuery
p19733
tp19734
I3
s(Vinsert
p19735
I42
VSimpleName: setOnConflictConstraint
p19736
tp19737
I1
s(Vinsert
p19738
I45
VStringLiteral: "STATUS"
p19739
tp19740
I1
s(Vinsert
p19741
I42
VSimpleName: leftValue
p19742
tp19743
I4
s(Vinsert
p19744
I42
VSimpleName: hashCodes
p19745
tp19746
I1
s(Vinsert
p19747
I42
VSimpleName: getRowCount
p19748
tp19749
I6
s(Vinsert
p19750
I42
VSimpleName: statementLog
p19751
tp19752
I1
s(Vinsert
p19753
I45
VStringLiteral: "druid.initialSize"
p19754
tp19755
I1
s(Vinsert
p19756
I43
VSimpleType: SQLExprImpl
p19757
tp19758
I2
s(Vinsert
p19759
I42
VSimpleName: sorted
p19760
tp19761
I1
s(Vinsert
p19762
I42
VSimpleName: colData
p19763
tp19764
I2
s(Vinsert
p19765
I42
VSimpleName: PoolableResultSet
p19766
tp19767
I3
s(Vinsert
p19768
I45
VStringLiteral: "SELECT *\u005cn"
p19769
tp19770
I17
s(Vinsert
p19771
I45
VStringLiteral: "FROM (t1 tt1, t2 tt2)\u005cn"
p19772
tp19773
I1
s(Vinsert
p19774
I42
VSimpleName: singletonList
p19775
tp19776
I9
s(Vinsert
p19777
I42
VSimpleName: test_distribute_by_2
p19778
tp19779
I1
s(Vinsert
p19780
I42
VSimpleName: setMaxRows
p19781
tp19782
I2
s(Vinsert
p19783
I42
VSimpleName: currentMaxFieldSize
p19784
tp19785
I1
s(Vinsert
p19786
I42
VSimpleName: allow
p19787
tp19788
I2
s(Vinsert
p19789
I42
VSimpleName: error_text
p19790
tp19791
I2
s(Vinsert
p19792
I42
VSimpleName: ReturnRowsClause
p19793
tp19794
I1
s(Vinsert
p19795
I42
VSimpleName: getCachedPreparedStatementMissCount
p19796
tp19797
I1
s(Vinsert
p19798
I42
VSimpleName: getTableSources
p19799
tp19800
I1
s(Vinsert
p19801
I45
VStringLiteral: "\u005ct\u005ct\u005ct\u005ct, sum(cnt) as cnt\u005cn"
p19802
tp19803
I1
s(Vinsert
p19804
I43
VSimpleType: SQLDropEventStatement
p19805
tp19806
I1
s(Vinsert
p19807
I42
VSimpleName: StatementProxy
p19808
tp19809
I4
s(Vinsert
p19810
I45
VStringLiteral: "\u005cn\u005ctPARTITION p2 VALUES LESS THAN (2001),"
p19811
tp19812
I1
s(Vinsert
p19813
I45
VStringLiteral: "spring.datasource.druid.StatViewServlet.enabled"
p19814
tp19815
I1
s(Vinsert
p19816
I42
VSimpleName: DaemonThreadFactory
p19817
tp19818
I2
s(Vinsert
p19819
I42
VSimpleName: DruidLobCreator
p19820
tp19821
I2
s(Vinsert
p19822
I43
VSimpleType: SQLAlterTableDropColumnItem
p19823
tp19824
I7
s(Vinsert
p19825
I42
VSimpleName: sequence
p19826
tp19827
I1
s(Vinsert
p19828
I42
VSimpleName: newStat
p19829
tp19830
I1
s(Vinsert
p19831
I42
VSimpleName: deleteDataCount_1000_10000_Updater
p19832
tp19833
I1
s(Vinsert
p19834
I40
VQualifiedName: ResultSet.FETCH_REVERSE
p19835
tp19836
I1
s(Vinsert
p19837
I42
VSimpleName: createTableSql
p19838
tp19839
I1
s(Vinsert
p19840
I42
VSimpleName: itemA
p19841
tp19842
I2
s(Vinsert
p19843
I45
VStringLiteral: "\u005cn\u005ctCONSTRAINT pk_od PRIMARY KEY (order_id, part_no),"
p19844
tp19845
I2
s(Vinsert
p19846
I42
VSimpleName: decode
p19847
tp19848
I2
s(Vinsert
p19849
I45
VStringLiteral: "stmtList size : "
p19850
tp19851
I1
s(Vinsert
p19852
I42
VSimpleName: CHARACTER
p19853
tp19854
I1
s(Vinsert
p19855
I45
VStringLiteral: "SET autocommit=1"
p19856
tp19857
I1
s(Vinsert
p19858
I42
VSimpleName: app
p19859
tp19860
I3
s(Vinsert
p19861
I42
VSimpleName: getStatementList
p19862
tp19863
I6
s(Vinsert
p19864
I45
VStringLiteral: " OVER ("
p19865
tp19866
I1
s(Vinsert
p19867
I42
VSimpleName: MySqlShowErrorsStatement
p19868
tp19869
I1
s(Vinsert
p19870
I43
VSimpleType: CompositeType
p19871
tp19872
I2
s(Vinsert
p19873
I45
VStringLiteral: "sqlstate "
p19874
tp19875
I1
s(Vinsert
p19876
I27
VInfixExpression: <=
p19877
tp19878
I8
s(Vinsert
p19879
I45
VStringLiteral: "CREATE TABLE pageviews (\u005cn"
p19880
tp19881
I1
s(Vinsert
p19882
I42
VSimpleName: handleSleep
p19883
tp19884
I5
s(Vinsert
p19885
I42
VSimpleName: updateDouble
p19886
tp19887
I1
s(Vinsert
p19888
I42
VSimpleName: arg
p19889
tp19890
I8
s(Vinsert
p19891
I74
VParameterizedType: Class<?>
p19892
tp19893
I8
s(Vinsert
p19894
I27
VInfixExpression: /
p19895
tp19896
I2
s(Vinsert
p19897
I42
VSimpleName: MySqlSetCharSetStatement
p19898
tp19899
I1
s(Vinsert
p19900
I42
VSimpleName: ExportParameterVisitorUtils
p19901
tp19902
I7
s(Vinsert
p19903
I42
VSimpleName: getSubQuery
p19904
tp19905
I10
s(Vinsert
p19906
I40
VQualifiedName: junit.framework.TestCase
p19907
tp19908
I1
s(Vinsert
p19909
I45
VStringLiteral: "CommitCount"
p19910
tp19911
I1
s(Vinsert
p19912
I42
VSimpleName: isWithNoCheck
p19913
tp19914
I1
s(Vinsert
p19915
I74
VParameterizedType: Iterator<Map.Entry<String,JdbcSqlStat>>
p19916
tp19917
I1
s(Vinsert
p19918
I42
VSimpleName: setTransactionName
p19919
tp19920
I2
s(Vinsert
p19921
I43
VSimpleType: Dimension
p19922
tp19923
I1
s(Vinsert
p19924
I42
VSimpleName: alias_hash
p19925
tp19926
I4
s(Vinsert
p19927
I45
VStringLiteral: "| c_mediumtext | mediumtext   | NO   |     | NULL    |       |\u005cn"
p19928
tp19929
I1
s(Vinsert
p19930
I42
VSimpleName: resultSetConcurrency
p19931
tp19932
I1
s(Vinsert
p19933
I43
VSimpleType: WallSqlStat
p19934
tp19935
I10
s(Vinsert
p19936
I40
VQualifiedName: com.alibaba.druid.pool.DruidDataSourceFactory
p19937
tp19938
I1
s(Vinsert
p19939
I42
VSimpleName: getGlobalPartitions
p19940
tp19941
I2
s(Vinsert
p19942
I45
VStringLiteral: "\u005cnFROM films"
p19943
tp19944
I1
s(Vinsert
p19945
I45
VStringLiteral: "\u005cn\u005ctwarranty_period INTERVAL YEAR TO MONTH,"
p19946
tp19947
I2
s(Vinsert
p19948
I45
VStringLiteral: "create table b(\u005cn"
p19949
tp19950
I1
s(Vinsert
p19951
I45
VStringLiteral: "\u005ctWHEN OTHERS THEN\u005cn"
p19952
tp19953
I2
s(Vinsert
p19954
I27
VInfixExpression: >>
p19955
tp19956
I1
s(Vinsert
p19957
I45
VStringLiteral: "jdbc:mock:config-1"
p19958
tp19959
I1
s(Vinsert
p19960
I42
VSimpleName: getTime
p19961
tp19962
I5
s(Vinsert
p19963
I45
VStringLiteral: "RSA"
p19964
tp19965
I1
s(Vinsert
p19966
I45
VStringLiteral: "partition part2 values less than (to_date('2010-02-01','YYYY-MM-DD'))\u005cn"
p19967
tp19968
I1
s(Vinsert
p19969
I42
VSimpleName: binaryLeft
p19970
tp19971
I2
s(Vinsert
p19972
I42
VSimpleName: test_true_1
p19973
tp19974
I5
s(Vinsert
p19975
I43
VSimpleType: ConcurrentMap
p19976
tp19977
I4
s(Vinsert
p19978
I42
VSimpleName: isValidateMySql
p19979
tp19980
I23
s(Vinsert
p19981
I42
VSimpleName: OracleWithSubqueryEntry
p19982
tp19983
I1
s(Vinsert
p19984
I45
VStringLiteral: "    SELECT id FROM sample_columns col \u005cn"
p19985
tp19986
I1
s(Vinsert
p19987
I72
VEnumConstantDeclaration
p19988
tp19989
I4
s(Vinsert
p19990
I43
VSimpleType: MySqlExceptionSorter
p19991
tp19992
I7
s(Vinsert
p19993
I43
VSimpleType: DruidDataSource
p19994
tp19995
I69
s(Vinsert
p19996
I43
VSimpleType: SQLCreateDatabaseStatement
p19997
tp19998
I3
s(Vinsert
p19999
I42
VSimpleName: cer
p20000
tp20001
I2
s(Vinsert
p20002
I42
VSimpleName: assertSame
p20003
tp20004
I11
s(Vinsert
p20005
I42
VSimpleName: poolableResultSet
p20006
tp20007
I2
s(Vinsert
p20008
I43
VSimpleType: OracleTimestampExpr
p20009
tp20010
I1
s(Vinsert
p20011
I42
VSimpleName: test_add_4
p20012
tp20013
I1
s(Vinsert
p20014
I45
VStringLiteral: "drop view if exists view_name;"
p20015
tp20016
I1
s(Vinsert
p20017
I42
VSimpleName: MySqlWallTest18
p20018
tp20019
I1
s(Vinsert
p20020
I42
VSimpleName: cluster
p20021
tp20022
I4
s(Vinsert
p20023
I45
VStringLiteral: "LEFT OUTER JOIN"
p20024
tp20025
I1
s(Vinsert
p20026
I45
VStringLiteral: "\u005ctEXECUTE IMMEDIATE plsql_block USING 7788, 500;\u005cn"
p20027
tp20028
I1
s(Vinsert
p20029
I45
VStringLiteral: "vmid argument is not a integer!"
p20030
tp20031
I1
s(Vinsert
p20032
I43
VSimpleType: PGCidrExpr
p20033
tp20034
I6
s(Vinsert
p20035
I45
VStringLiteral: "    where 1=1  and seller_nick in ('\u521b\u7ef4\u5b98\u65b9\u65d7\u8230\u5e97') "
p20036
tp20037
I1
s(Vinsert
p20038
I43
VSimpleType: Comparable
p20039
tp20040
I2
s(Vinsert
p20041
I42
VSimpleName: plainString
p20042
tp20043
I2
s(Vinsert
p20044
I42
VSimpleName: test_fill_1
p20045
tp20046
I1
s(Vinsert
p20047
I42
VSimpleName: isDebugEnabled
p20048
tp20049
I4
s(Vinsert
p20050
I45
VStringLiteral: "root"
p20051
tp20052
I2
s(Vinsert
p20053
I45
VStringLiteral: "NotEmptyWaitMillis"
p20054
tp20055
I1
s(Vinsert
p20056
I42
VSimpleName: PARAM_NAME_DENY
p20057
tp20058
I1
s(Vinsert
p20059
I40
VQualifiedName: java.sql.Date
p20060
tp20061
I1
s(Vinsert
p20062
I42
VSimpleName: getReusedCount
p20063
tp20064
I1
s(Vinsert
p20065
I43
VSimpleType: SQLAlterTableDisableConstraint
p20066
tp20067
I3
s(Vinsert
p20068
I42
VSimpleName: pk
p20069
tp20070
I2
s(Vinsert
p20071
I42
VSimpleName: parseCreateTableSupplementalLogingProps
p20072
tp20073
I2
s(Vinsert
p20074
I42
VSimpleName: getLong
p20075
tp20076
I1
s(Vinsert
p20077
I42
VSimpleName: list
p20078
tp20079
I25
s(Vinsert
p20080
I42
VSimpleName: organization
p20081
tp20082
I2
s(Vinsert
p20083
I45
VStringLiteral: "MERGE INTO CUSTOMER KEY (ID)\u005cn"
p20084
tp20085
I1
s(Vinsert
p20086
I74
VParameterizedType: Map.Entry<K,V>
p20087
tp20088
I1
s(Vinsert
p20089
I42
VSimpleName: must
p20090
tp20091
I1
s(Vinsert
p20092
I42
VSimpleName: removeTrace
p20093
tp20094
I1
s(Vinsert
p20095
I42
VSimpleName: whiteList
p20096
tp20097
I2
s(Vinsert
p20098
I45
VStringLiteral: "OUTPUT "
p20099
tp20100
I1
s(Vinsert
p20101
I43
VSimpleType: MySqlStartTransactionStatement
p20102
tp20103
I2
s(Vinsert
p20104
I42
VSimpleName: schemaName
p20105
tp20106
I2
s(Vinsert
p20107
I42
VSimpleName: dataSourceStat
p20108
tp20109
I9
s(Vinsert
p20110
I42
VSimpleName: windowingBetweenEndFollowing
p20111
tp20112
I1
s(Vinsert
p20113
I42
VSimpleName: OracleRunStatement
p20114
tp20115
I2
s(Vinsert
p20116
I42
VSimpleName: numTestsPerEvictionRun
p20117
tp20118
I2
s(Vinsert
p20119
I45
VStringLiteral: "INDEX "
p20120
tp20121
I1
s(Vinsert
p20122
I40
VQualifiedName: java.util.Date
p20123
tp20124
I3
s(Vinsert
p20125
I42
VSimpleName: getNCharacterStream
p20126
tp20127
I1
s(Vinsert
p20128
I45
VStringLiteral: "SUPPLEMENTAL"
p20129
tp20130
I1
s(Vinsert
p20131
I42
VSimpleName: RESULT_CODE_SUCCESS
p20132
tp20133
I1
s(Vinsert
p20134
I45
VStringLiteral: "SUBPARTITION "
p20135
tp20136
I1
s(Vinsert
p20137
I42
VSimpleName: sqlExec
p20138
tp20139
I3
s(Vinsert
p20140
I42
VSimpleName: paramSize
p20141
tp20142
I2
s(Vinsert
p20143
I42
VSimpleName: MySqlExceptionSorter
p20144
tp20145
I7
s(Vinsert
p20146
I42
VSimpleName: getURIStatDataList
p20147
tp20148
I2
s(Vinsert
p20149
I45
VStringLiteral: "SELECT /*+ topk(90 1000) */ SUM(c2), c1"
p20150
tp20151
I1
s(Vinsert
p20152
I43
VSimpleType: SQLSelectGroupByClause
p20153
tp20154
I8
s(Vinsert
p20155
I45
VStringLiteral: "\u005ct\u005ctAND outer.db_key = bdf.db_key\u005cn"
p20156
tp20157
I1
s(Vinsert
p20158
I42
VSimpleName: MySqlASTVisitor
p20159
tp20160
I106
s(Vinsert
p20161
I45
VStringLiteral: "   FOR hr.locations;create table hr.locations(fid varchar(200));"
p20162
tp20163
I1
s(Vinsert
p20164
I42
VSimpleName: parseUse
p20165
tp20166
I1
s(Vinsert
p20167
I42
VSimpleName: SQLDropProcedureStatement
p20168
tp20169
I1
s(Vinsert
p20170
I40
VQualifiedName: Token.IDENTIFIER
p20171
tp20172
I17
s(Vinsert
p20173
I42
VSimpleName: createExprParser
p20174
tp20175
I25
s(Vinsert
p20176
I42
VSimpleName: invokeRes
p20177
tp20178
I1
s(Vinsert
p20179
I45
VStringLiteral: "END emp_mgmt;"
p20180
tp20181
I1
s(Vinsert
p20182
I42
VSimpleName: jsonString
p20183
tp20184
I1
s(Vinsert
p20185
I42
VSimpleName: sqlHash
p20186
tp20187
I7
s(Vinsert
p20188
I42
VSimpleName: isInstance
p20189
tp20190
I11
s(Vinsert
p20191
I42
VSimpleName: oracleStmt
p20192
tp20193
I3
s(Vinsert
p20194
I43
VSimpleType: SQLSelectQueryBlock
p20195
tp20196
I33
s(Vinsert
p20197
I42
VSimpleName: parsePrimaryKey
p20198
tp20199
I2
s(Vinsert
p20200
I42
VSimpleName: context
p20201
tp20202
I39
s(Vinsert
p20203
I43
VSimpleType: MySqlCursorOpenStatement
p20204
tp20205
I2
s(Vinsert
p20206
I42
VSimpleName: TeradataStatementParser
p20207
tp20208
I1
s(Vinsert
p20209
I45
VStringLiteral: "                 where t.ccounty_code = us.carea_code"
p20210
tp20211
I1
s(Vinsert
p20212
I43
VSimpleType: SQLDropTypeStatement
p20213
tp20214
I1
s(Vinsert
p20215
I43
VSimpleType: PGSelectParser
p20216
tp20217
I1
s(Vinsert
p20218
I45
VStringLiteral: "BIGINT"
p20219
tp20220
I1
s(Vinsert
p20221
I42
VSimpleName: LOG
p20222
tp20223
I54
s(Vinsert
p20224
I42
VSimpleName: nameEquals
p20225
tp20226
I18
s(Vinsert
p20227
I42
VSimpleName: bp
p20228
tp20229
I8
s(Vinsert
p20230
I42
VSimpleName: MySqlShowProfileStatement
p20231
tp20232
I2
s(Vinsert
p20233
I45
VStringLiteral: "WHERE obj# = '633'"
p20234
tp20235
I1
s(Vinsert
p20236
I45
VStringLiteral: ") "
p20237
tp20238
I1
s(Vinsert
p20239
I42
VSimpleName: setSearchClause
p20240
tp20241
I1
s(Vinsert
p20242
I40
VQualifiedName: statValue.sqlList
p20243
tp20244
I1
s(Vinsert
p20245
I43
VSimpleType: SpringMethodInfo
p20246
tp20247
I1
s(Vinsert
p20248
I45
VStringLiteral: "spring.datasource.druid.filters"
p20249
tp20250
I1
s(Vinsert
p20251
I43
VSimpleType: DataSource
p20252
tp20253
I4
s(Vinsert
p20254
I42
VSimpleName: getBigDecimal
p20255
tp20256
I4
s(Vinsert
p20257
I45
VStringLiteral: "\u005ct, OWNER_MEMBER_SEQ, gmt_modified\u005cn"
p20258
tp20259
I1
s(Vinsert
p20260
I42
VSimpleName: s2
p20261
tp20262
I3
s(Vinsert
p20263
I42
VSimpleName: milliSecond
p20264
tp20265
I1
s(Vinsert
p20266
I42
VSimpleName: getReusePreparedStatement
p20267
tp20268
I1
s(Vinsert
p20269
I40
VQualifiedName: Token.LBRACKET
p20270
tp20271
I2
s(Vinsert
p20272
I42
VSimpleName: getRawConnection
p20273
tp20274
I1
s(Vinsert
p20275
I42
VSimpleName: charset
p20276
tp20277
I4
s(Vinsert
p20278
I42
VSimpleName: MySqlWallTest13
p20279
tp20280
I1
s(Vinsert
p20281
I42
VSimpleName: entities
p20282
tp20283
I3
s(Vinsert
p20284
I42
VSimpleName: exception
p20285
tp20286
I3
s(Vinsert
p20287
I45
VStringLiteral: "\u005ct\u005ctOR M.OWNER LIKE ('%' || ? || '%')\u005cn"
p20288
tp20289
I1
s(Vinsert
p20290
I45
VStringLiteral: "\u005cn\u005ct('a2', 'b2'),"
p20291
tp20292
I3
s(Vinsert
p20293
I42
VSimpleName: tableSourceExpr
p20294
tp20295
I1
s(Vinsert
p20296
I42
VSimpleName: renamePartition
p20297
tp20298
I1
s(Vinsert
p20299
I45
VStringLiteral: "DROP SEQUENCE oe.customers_seq"
p20300
tp20301
I1
s(Vinsert
p20302
I42
VSimpleName: usingIndex
p20303
tp20304
I1
s(Vinsert
p20305
I42
VSimpleName: test_if
p20306
tp20307
I9
s(Vinsert
p20308
I42
VSimpleName: permitObjects
p20309
tp20310
I2
s(Vinsert
p20311
I45
VStringLiteral: "CONSTANT"
p20312
tp20313
I1
s(Vinsert
p20314
I42
VSimpleName: PGPolygonExpr
p20315
tp20316
I5
s(Vinsert
p20317
I42
VSimpleName: username
p20318
tp20319
I3
s(Vinsert
p20320
I40
VQualifiedName: JdbcUtils.HIVE
p20321
tp20322
I1
s(Vinsert
p20323
I42
VSimpleName: IGNORE
p20324
tp20325
I1
s(Vinsert
p20326
I42
VSimpleName: setSql
p20327
tp20328
I1
s(Vinsert
p20329
I45
VStringLiteral: "\u005cnHAVING COUNT(resource_value) >= ?"
p20330
tp20331
I1
s(Vinsert
p20332
I45
VStringLiteral: "a"
p20333
tp20334
I2
s(Vinsert
p20335
I42
VSimpleName: test_error_3
p20336
tp20337
I1
s(Vinsert
p20338
I42
VSimpleName: entryStat
p20339
tp20340
I2
s(Vinsert
p20341
I42
VSimpleName: MySqlWallTest26
p20342
tp20343
I1
s(Vinsert
p20344
I40
VQualifiedName: com.alibaba.druid.sql.ast.expr.SQLAllColumnExpr
p20345
tp20346
I3
s(Vinsert
p20347
I42
VSimpleName: getBlock
p20348
tp20349
I2
s(Vinsert
p20350
I42
VSimpleName: setObjectName
p20351
tp20352
I1
s(Vinsert
p20353
I42
VSimpleName: PGSelectParser
p20354
tp20355
I1
s(Vinsert
p20356
I42
VSimpleName: getId
p20357
tp20358
I8
s(Vinsert
p20359
I42
VSimpleName: setClosed
p20360
tp20361
I2
s(Vinsert
p20362
I42
VSimpleName: setErrorEnabled
p20363
tp20364
I3
s(Vinsert
p20365
I45
VStringLiteral: "COLLATE"
p20366
tp20367
I2
s(Vinsert
p20368
I43
VSimpleType: TransactionInfo
p20369
tp20370
I2
s(Vinsert
p20371
I42
VSimpleName: parseDataType
p20372
tp20373
I3
s(Vinsert
p20374
I45
VStringLiteral: "CREATE TABLE dept_20 ("
p20375
tp20376
I6
s(Vinsert
p20377
I42
VSimpleName: assertNotSame
p20378
tp20379
I2
s(Vinsert
p20380
I45
VStringLiteral: "ALGORITHM"
p20381
tp20382
I1
s(Vinsert
p20383
I45
VStringLiteral: "SELECT id from T where 1=1 and 1!=1 union select user;"
p20384
tp20385
I1
s(Vinsert
p20386
I43
VSimpleType: DB2ASTVisitorAdapter
p20387
tp20388
I1
s(Vinsert
p20389
I42
VSimpleName: setParam
p20390
tp20391
I1
s(Vinsert
p20392
I45
VStringLiteral: "\u005cn\u005ctdirectory_position NUMERIC,"
p20393
tp20394
I2
s(Vinsert
p20395
I40
VQualifiedName: Keywords.DEFAULT_KEYWORDS
p20396
tp20397
I1
s(Vinsert
p20398
I42
VSimpleName: URLConnectionConfigLoader
p20399
tp20400
I2
s(Vinsert
p20401
I42
VSimpleName: getDynamicSql
p20402
tp20403
I1
s(Vinsert
p20404
I45
VStringLiteral: "UPDATE customers\u005cn"
p20405
tp20406
I1
s(Vinsert
p20407
I40
VQualifiedName: FNVUtils.CONNECT
p20408
tp20409
I1
s(Vinsert
p20410
I45
VStringLiteral: "\u005ct\u005ct'preCheckMobile', \u005cn"
p20411
tp20412
I1
s(Vinsert
p20413
I42
VSimpleName: msg
p20414
tp20415
I4
s(Vinsert
p20416
I42
VSimpleName: hashCode64
p20417
tp20418
I28
s(Vinsert
p20419
I42
VSimpleName: accept0
p20420
tp20421
I334
s(Vinsert
p20422
I45
VStringLiteral: "GRANT CREATE SESSION TO hr"
p20423
tp20424
I1
s(Vinsert
p20425
I45
VStringLiteral: "STORED"
p20426
tp20427
I1
s(Vinsert
p20428
I42
VSimpleName: makeInsertToTableSql
p20429
tp20430
I1
s(Vinsert
p20431
I42
VSimpleName: requestStatsMap
p20432
tp20433
I1
s(Vinsert
p20434
I42
VSimpleName: labelName
p20435
tp20436
I5
s(Vinsert
p20437
I40
VQualifiedName: java.util.Set
p20438
tp20439
I1
s(Vinsert
p20440
I74
VParameterizedType: Enumeration<ColumnGroup>
p20441
tp20442
I1
s(Vinsert
p20443
I40
VQualifiedName: OracleCreateTableStatement.Organization
p20444
tp20445
I2
s(Vinsert
p20446
I45
VStringLiteral: "\u005ctFROM dual;\u005cn"
p20447
tp20448
I1
s(Vinsert
p20449
I42
VSimpleName: WebAppStat
p20450
tp20451
I12
s(Vinsert
p20452
I45
VStringLiteral: "\u005ctAND c1.layer = 4\u005cn"
p20453
tp20454
I1
s(Vinsert
p20455
I42
VSimpleName: originColumn
p20456
tp20457
I3
s(Vinsert
p20458
I43
VSimpleType: HBaseResultSet
p20459
tp20460
I1
s(Vinsert
p20461
I42
VSimpleName: wr
p20462
tp20463
I2
s(Vinsert
p20464
I43
VSimpleType: OracleSelectParser
p20465
tp20466
I4
s(Vinsert
p20467
I43
VSimpleType: SQLServerSelect
p20468
tp20469
I1
s(Vinsert
p20470
I42
VSimpleName: parameters
p20471
tp20472
I98
s(Vinsert
p20473
I42
VSimpleName: deleteDataCount
p20474
tp20475
I1
s(Vinsert
p20476
I42
VSimpleName: wallFilter
p20477
tp20478
I1
s(Vinsert
p20479
I42
VSimpleName: getOSAndroid43Count
p20480
tp20481
I1
s(Vinsert
p20482
I45
VStringLiteral: "\u005ctINTO :New.PROJECT_SYN_ID\u005cn"
p20483
tp20484
I1
s(Vinsert
p20485
I45
VStringLiteral: "SELECT /*+ INDEX(t1 i1) , INDEX(t2 i2)*/ *"
p20486
tp20487
I1
s(Vinsert
p20488
I74
VParameterizedType: ArrayList<String>
p20489
tp20490
I3
s(Vinsert
p20491
I42
VSimpleName: maxIdle
p20492
tp20493
I2
s(Vinsert
p20494
I45
VStringLiteral: "WHERE menu_id IN (\u005cn"
p20495
tp20496
I1
s(Vinsert
p20497
I42
VSimpleName: getChildren
p20498
tp20499
I26
s(Vinsert
p20500
I42
VSimpleName: castToInteger
p20501
tp20502
I1
s(Vinsert
p20503
I45
VStringLiteral: "not support oracle driver "
p20504
tp20505
I1
s(Vinsert
p20506
I40
VQualifiedName: SQLUnaryOperator.Plus
p20507
tp20508
I2
s(Vinsert
p20509
I42
VSimpleName: OptionParseException
p20510
tp20511
I1
s(Vinsert
p20512
I42
VSimpleName: X509EncodedKeySpec
p20513
tp20514
I2
s(Vinsert
p20515
I42
VSimpleName: threadIds
p20516
tp20517
I1
s(Vinsert
p20518
I45
VStringLiteral: "\u005ct\u005ct\u005ct, SYS_ITEM.ITEM_CODE, P.CONFIRM_COST_PRICE04, SYS_ITEM.ITEM_ID AS PROD_ATTRIBUTE_ID, SYS_ITEM.ITEM_CHIP\u005cn"
p20519
tp20520
I1
s(Vinsert
p20521
I45
VStringLiteral: "{name="
p20522
tp20523
I2
s(Vinsert
p20524
I42
VSimpleName: getPartitionedBy
p20525
tp20526
I2
s(Vinsert
p20527
I42
VSimpleName: into
p20528
tp20529
I13
s(Vinsert
p20530
I45
VStringLiteral: " WITH"
p20531
tp20532
I1
s(Vinsert
p20533
I45
VStringLiteral: "sqlite"
p20534
tp20535
I1
s(Vinsert
p20536
I43
VSimpleType: HttpServer
p20537
tp20538
I4
s(Vinsert
p20539
I45
VStringLiteral: "\u005cn\u005ct("
p20540
tp20541
I5
s(Vinsert
p20542
I42
VSimpleName: concurrentMax
p20543
tp20544
I6
s(Vinsert
p20545
I43
VSimpleType: BeanFactoryAware
p20546
tp20547
I2
s(Vinsert
p20548
I43
VSimpleType: HMappingDefaultImpl
p20549
tp20550
I3
s(Vinsert
p20551
I42
VSimpleName: test_kingbase
p20552
tp20553
I1
s(Vinsert
p20554
I43
VSimpleType: oracle.jdbc.internal.OracleConnection
p20555
tp20556
I2
s(Vinsert
p20557
I43
VSimpleType: OracleUpdateSetListClause
p20558
tp20559
I1
s(Vinsert
p20560
I42
VSimpleName: label
p20561
tp20562
I10
s(Vinsert
p20563
I42
VSimpleName: checkInst
p20564
tp20565
I1
s(Vinsert
p20566
I42
VSimpleName: getHeight
p20567
tp20568
I1
s(Vinsert
p20569
I42
VSimpleName: getInto
p20570
tp20571
I3
s(Vinsert
p20572
I45
VStringLiteral: "FETCH FIRST "
p20573
tp20574
I1
s(Vinsert
p20575
I45
VStringLiteral: "\u005cnPARTITION BY RANGE (YEAR(separated))"
p20576
tp20577
I1
s(Vinsert
p20578
I42
VSimpleName: asciiStream
p20579
tp20580
I1
s(Vinsert
p20581
I45
VStringLiteral: "\u005cn\u005ct\u005ctCONNECT BY PRIOR tbek_pk = tbek_parent"
p20582
tp20583
I1
s(Vinsert
p20584
I45
VStringLiteral: " TIME "
p20585
tp20586
I1
s(Vinsert
p20587
I45
VStringLiteral: "ALL"
p20588
tp20589
I3
s(Vinsert
p20590
I45
VStringLiteral: "MERGE INTO person KEY (id)\u005cn"
p20591
tp20592
I1
s(Vinsert
p20593
I45
VStringLiteral: "\u005ctJOIN (\u005cn"
p20594
tp20595
I1
s(Vinsert
p20596
I42
VSimpleName: level
p20597
tp20598
I8
s(Vinsert
p20599
I40
VQualifiedName: com.alibaba.druid.sql.ast.expr.SQLQueryExpr
p20600
tp20601
I4
s(Vinsert
p20602
I42
VSimpleName: getSchemaObject
p20603
tp20604
I4
s(Vinsert
p20605
I42
VSimpleName: betweenExpr
p20606
tp20607
I2
s(Vinsert
p20608
I45
VStringLiteral: "\u005cn/*!40101 SET @saved_cs_client     = @@character_set_client */;"
p20609
tp20610
I1
s(Vinsert
p20611
I45
VStringLiteral: "FROM b\u005cn"
p20612
tp20613
I1
s(Vinsert
p20614
I42
VSimpleName: endTransaction
p20615
tp20616
I2
s(Vinsert
p20617
I42
VSimpleName: setLockMode
p20618
tp20619
I1
s(Vinsert
p20620
I45
VStringLiteral: "META-INF/druid-filter-wall-permit-object-oracle.txt"
p20621
tp20622
I1
s(Vinsert
p20623
I42
VSimpleName: OracleFetchStatement
p20624
tp20625
I1
s(Vinsert
p20626
I42
VSimpleName: setRef
p20627
tp20628
I1
s(Vinsert
p20629
I45
VStringLiteral: "can'r find class in current thread context classLoader "
p20630
tp20631
I1
s(Vinsert
p20632
I42
VSimpleName: setOwner
p20633
tp20634
I5
s(Vinsert
p20635
I45
VStringLiteral: "and tt.ver <> 'all')\u005cn"
p20636
tp20637
I1
s(Vinsert
p20638
I42
VSimpleName: createMockCallableStatement
p20639
tp20640
I3
s(Vinsert
p20641
I42
VSimpleName: normalize
p20642
tp20643
I10
s(Vinsert
p20644
I42
VSimpleName: setRunningCount
p20645
tp20646
I2
s(Vinsert
p20647
I40
VQualifiedName: x.dbType
p20648
tp20649
I1
s(Vinsert
p20650
I45
VStringLiteral: "VERSIONS"
p20651
tp20652
I1
s(Vinsert
p20653
I42
VSimpleName: map
p20654
tp20655
I143
s(Vinsert
p20656
I39
VPrimitiveType: short
p20657
tp20658
I3
s(Vinsert
p20659
I42
VSimpleName: OracleSelectTableSource
p20660
tp20661
I1
s(Vinsert
p20662
I45
VStringLiteral: "TestWhileIdle"
p20663
tp20664
I1
s(Vinsert
p20665
I45
VStringLiteral: ", pstmt-"
p20666
tp20667
I1
s(Vinsert
p20668
I42
VSimpleName: leftBinaryExpr
p20669
tp20670
I2
s(Vinsert
p20671
I45
VStringLiteral: "PARTITION"
p20672
tp20673
I1
s(Vinsert
p20674
I45
VStringLiteral: "        DROP COLUMN diff_value_3,\u005cn"
p20675
tp20676
I1
s(Vinsert
p20677
I40
VQualifiedName: com.alibaba.druid.pool.DruidDataSource
p20678
tp20679
I1
s(Vinsert
p20680
I42
VSimpleName: setOver
p20681
tp20682
I2
s(Vinsert
p20683
I42
VSimpleName: sqrt
p20684
tp20685
I1
s(Vinsert
p20686
I45
VStringLiteral: "\u005cn\u005ctCONSTRAINT check_sal CHECK (salary * commission_pct <= 5000)"
p20687
tp20688
I2
s(Vinsert
p20689
I42
VSimpleName: functions
p20690
tp20691
I15
s(Vinsert
p20692
I43
VSimpleType: UnsupportedEncodingException
p20693
tp20694
I1
s(Vinsert
p20695
I45
VStringLiteral: "\u005ct\u005ct\u005ct\u005ctWHERE menu_id IN ('M00006')\u005cn"
p20696
tp20697
I1
s(Vinsert
p20698
I42
VSimpleName: parameterize
p20699
tp20700
I14
s(Vinsert
p20701
I42
VSimpleName: parseReturningClause
p20702
tp20703
I1
s(Vinsert
p20704
I42
VSimpleName: linear
p20705
tp20706
I1
s(Vinsert
p20707
I42
VSimpleName: parseCreateType
p20708
tp20709
I1
s(Vinsert
p20710
I45
VStringLiteral: "\u005cn\u005ctCOALESCE PARTITION 6"
p20711
tp20712
I1
s(Vinsert
p20713
I42
VSimpleName: LoggerFactory
p20714
tp20715
I1
s(Vinsert
p20716
I45
VStringLiteral: "IN "
p20717
tp20718
I2
s(Vinsert
p20719
I45
VStringLiteral: "DISCARD"
p20720
tp20721
I1
s(Vinsert
p20722
I43
VSimpleType: SQLTableConstraint
p20723
tp20724
I1
s(Vinsert
p20725
I45
VStringLiteral: "FROM public.v_poi\u005cn"
p20726
tp20727
I1
s(Vinsert
p20728
I42
VSimpleName: SQLEvalVisitor
p20729
tp20730
I2
s(Vinsert
p20731
I43
VSimpleType: SQLSubPartitionByHash
p20732
tp20733
I4
s(Vinsert
p20734
I45
VStringLiteral: "getURIStatDataList"
p20735
tp20736
I1
s(Vinsert
p20737
I42
VSimpleName: setScale
p20738
tp20739
I1
s(Vinsert
p20740
I42
VSimpleName: SQLServerSelect
p20741
tp20742
I1
s(Vinsert
p20743
I42
VSimpleName: setDriverClass
p20744
tp20745
I2
s(Vinsert
p20746
I42
VSimpleName: EVAL_VALUE
p20747
tp20748
I5
s(Vinsert
p20749
I40
VQualifiedName: java.sql.Timestamp
p20750
tp20751
I2
s(Vinsert
p20752
I42
VSimpleName: setLastSlowParameters
p20753
tp20754
I1
s(Vinsert
p20755
I43
VSimpleType: OracleCreateTableStatement.OIDIndex
p20756
tp20757
I2
s(Vinsert
p20758
I45
VStringLiteral: " from "
p20759
tp20760
I1
s(Vinsert
p20761
I40
VQualifiedName: Token.XOR
p20762
tp20763
I2
s(Vinsert
p20764
I42
VSimpleName: println
p20765
tp20766
I582
s(Vinsert
p20767
I45
VStringLiteral: "wl_ship_order"
p20768
tp20769
I1
s(Vinsert
p20770
I42
VSimpleName: getRow
p20771
tp20772
I1
s(Vinsert
p20773
I42
VSimpleName: register
p20774
tp20775
I1
s(Vinsert
p20776
I42
VSimpleName: subSchemas
p20777
tp20778
I1
s(Vinsert
p20779
I42
VSimpleName: OracleToMySqlOutputVisitor
p20780
tp20781
I1
s(Vinsert
p20782
I42
VSimpleName: config
p20783
tp20784
I157
s(Vinsert
p20785
I42
VSimpleName: setLike
p20786
tp20787
I4
s(Vinsert
p20788
I45
VStringLiteral: "\u005cn\u005ct\u005ct\u005ct\u005ct\u005ct) t5"
p20789
tp20790
I1
s(Vinsert
p20791
I40
VQualifiedName: SQLJoinTableSource.JoinType.LEFT_SEMI_JOIN
p20792
tp20793
I1
s(Vinsert
p20794
I42
VSimpleName: valueClauseList
p20795
tp20796
I2
s(Vinsert
p20797
I42
VSimpleName: openSession
p20798
tp20799
I2
s(Vinsert
p20800
I42
VSimpleName: PROP_PHY_TIMEOUT_MILLIS
p20801
tp20802
I1
s(Vinsert
p20803
I40
VQualifiedName: x.bracket
p20804
tp20805
I2
s(Vinsert
p20806
I45
VStringLiteral: "DESCRIBE "
p20807
tp20808
I1
s(Vinsert
p20809
I42
VSimpleName: TRUE
p20810
tp20811
I1
s(Vinsert
p20812
I42
VSimpleName: OracleCreateTableStatement
p20813
tp20814
I1
s(Vinsert
p20815
I34
VNumberLiteral: 300
p20816
tp20817
I3
s(Vinsert
p20818
I45
VStringLiteral: "\u005cn(departments_seq.nextval, 'Entertainment', 162, 1400)"
p20819
tp20820
I1
s(Vinsert
p20821
I42
VSimpleName: rightExpr
p20822
tp20823
I1
s(Vinsert
p20824
I42
VSimpleName: markBp
p20825
tp20826
I6
s(Vinsert
p20827
I42
VSimpleName: algorithm
p20828
tp20829
I6
s(Vinsert
p20830
I45
VStringLiteral: "\u005cn\u005ctDROP PARTITION p1"
p20831
tp20832
I1
s(Vinsert
p20833
I42
VSimpleName: setValidate
p20834
tp20835
I1
s(Vinsert
p20836
I43
VSimpleType: MySqlExprParser
p20837
tp20838
I10
s(Vinsert
p20839
I45
VStringLiteral: "GROUP BY l_suppkey"
p20840
tp20841
I1
s(Vinsert
p20842
I42
VSimpleName: mainSplit
p20843
tp20844
I4
s(Vinsert
p20845
I45
VStringLiteral: "\u005ctvalue NUMBER(5)\u005cn"
p20846
tp20847
I1
s(Vinsert
p20848
I42
VSimpleName: constaintName
p20849
tp20850
I1
s(Vinsert
p20851
I42
VSimpleName: charType
p20852
tp20853
I1
s(Vinsert
p20854
I42
VSimpleName: StdScheduler
p20855
tp20856
I1
s(Vinsert
p20857
I42
VSimpleName: startTransaction
p20858
tp20859
I3
s(Vinsert
p20860
I43
VSimpleType: SQLNCharExpr
p20861
tp20862
I1
s(Vinsert
p20863
I42
VSimpleName: getResultSetConcurrency
p20864
tp20865
I1
s(Vinsert
p20866
I42
VSimpleName: elements
p20867
tp20868
I1
s(Vinsert
p20869
I43
VSimpleType: SQLTableElement
p20870
tp20871
I3
s(Vinsert
p20872
I45
VStringLiteral: "\u005ct\u005ct\u005cts := s + i * j;\u005cn"
p20873
tp20874
I1
s(Vinsert
p20875
I42
VSimpleName: setBlob
p20876
tp20877
I3
s(Vinsert
p20878
I42
VSimpleName: skipFirstHintsOrMultiCommentAndNextToken
p20879
tp20880
I1
s(Vinsert
p20881
I42
VSimpleName: ClobProxy
p20882
tp20883
I1
s(Vinsert
p20884
I42
VSimpleName: testSkipSeparator
p20885
tp20886
I1
s(Vinsert
p20887
I42
VSimpleName: connection_getWarnings
p20888
tp20889
I1
s(Vinsert
p20890
I45
VStringLiteral: "\u005ct\u005ctWHERE g.id = sg.link\u005cn"
p20891
tp20892
I1
s(Vinsert
p20893
I42
VSimpleName: resultSetIdSeed
p20894
tp20895
I3
s(Vinsert
p20896
I42
VSimpleName: putAliasMap
p20897
tp20898
I1
s(Vinsert
p20899
I42
VSimpleName: test_true_11
p20900
tp20901
I1
s(Vinsert
p20902
I42
VSimpleName: sharePreparedStatements
p20903
tp20904
I2
s(Vinsert
p20905
I42
VSimpleName: EvalMethodBitLengthTest
p20906
tp20907
I1
s(Vinsert
p20908
I42
VSimpleName: Token
p20909
tp20910
I15
s(Vinsert
p20911
I45
VStringLiteral: "PARTITION "
p20912
tp20913
I2
s(Vinsert
p20914
I42
VSimpleName: addPartitionColumn
p20915
tp20916
I3
s(Vinsert
p20917
I45
VStringLiteral: "CURRENT_TIMESTAMP"
p20918
tp20919
I1
s(Vinsert
p20920
I42
VSimpleName: args
p20921
tp20922
I3
s(Vinsert
p20923
I45
VStringLiteral: "\u005ct\u005ct) top)\u005cn"
p20924
tp20925
I1
s(Vinsert
p20926
I42
VSimpleName: IllegalSQLObjectViolation
p20927
tp20928
I6
s(Vinsert
p20929
I42
VSimpleName: buf
p20930
tp20931
I175
s(Vinsert
p20932
I42
VSimpleName: cipher
p20933
tp20934
I1
s(Vinsert
p20935
I40
VQualifiedName: dataSource.timeBetweenEvictionRunsMillis
p20936
tp20937
I1
s(Vinsert
p20938
I42
VSimpleName: c4
p20939
tp20940
I2
s(Vinsert
p20941
I45
VStringLiteral: "LANGUAGE JAVA NAME '"
p20942
tp20943
I1
s(Vinsert
p20944
I45
VStringLiteral: "SELECT id, SUM(uv[1]) AS uv1, SUM(uv[2]) AS uv2\u005cn"
p20945
tp20946
I2
s(Vinsert
p20947
I42
VSimpleName: connection_prepareStatement
p20948
tp20949
I1
s(Vinsert
p20950
I42
VSimpleName: isCount
p20951
tp20952
I1
s(Vinsert
p20953
I45
VStringLiteral: "\u005cn\u005ctPARTITION SALES_Q3_2000 VALUES LESS THAN (TO_DATE('01-OCT-2000', 'DD-MON-YYYY'))"
p20954
tp20955
I2
s(Vinsert
p20956
I42
VSimpleName: closedThreadRef
p20957
tp20958
I2
s(Vinsert
p20959
I40
VQualifiedName: Boolean.FALSE
p20960
tp20961
I2
s(Vinsert
p20962
I45
VStringLiteral: "stat.tx"
p20963
tp20964
I1
s(Vinsert
p20965
I42
VSimpleName: h
p20966
tp20967
I7
s(Vinsert
p20968
I45
VStringLiteral: "\u005cn\u005ctPARTITION p1 VALUES LESS THAN (2000),"
p20969
tp20970
I2
s(Vinsert
p20971
I42
VSimpleName: Math
p20972
tp20973
I9
s(Vinsert
p20974
I43
VSimpleType: SQLLiteralExpr
p20975
tp20976
I3
s(Vinsert
p20977
I34
VNumberLiteral: 512
p20978
tp20979
I1
s(Vinsert
p20980
I45
VStringLiteral: "\u005ct\u005ctINITRANS 2\u005cn"
p20981
tp20982
I1
s(Vinsert
p20983
I34
VNumberLiteral: 0.75f
p20984
tp20985
I1
s(Vinsert
p20986
I42
VSimpleName: mergeStatement
p20987
tp20988
I2
s(Vinsert
p20989
I42
VSimpleName: intVal
p20990
tp20991
I2
s(Vinsert
p20992
I45
VStringLiteral: "TABLESPACE \u005c"APPDATA1M\u005c"\u005cn"
p20993
tp20994
I2
s(Vinsert
p20995
I42
VSimpleName: getCloseCount
p20996
tp20997
I4
s(Vinsert
p20998
I45
VStringLiteral: "BUSINESS_ORDER"
p20999
tp21000
I2
s(Vinsert
p21001
I42
VSimpleName: PROP_EXCEPTION_SORTER
p21002
tp21003
I1
s(Vinsert
p21004
I42
VSimpleName: isEqualTo
p21005
tp21006
I2
s(Vinsert
p21007
I43
VSimpleType: Class
p21008
tp21009
I11
s(Vinsert
p21010
I42
VSimpleName: compositeData
p21011
tp21012
I2
s(Vinsert
p21013
I45
VStringLiteral: "\u005ct\u005ct, :NEW.isdept, :NEW.type, :NEW.selfcode, :NEW.POS, SYSDATE\u005cn"
p21014
tp21015
I1
s(Vinsert
p21016
I42
VSimpleName: sqlStatMap
p21017
tp21018
I7
s(Vinsert
p21019
I45
VStringLiteral: "GENERAL"
p21020
tp21021
I1
s(Vinsert
p21022
I42
VSimpleName: sqlStatValue
p21023
tp21024
I2
s(Vinsert
p21025
I42
VSimpleName: variants
p21026
tp21027
I1
s(Vinsert
p21028
I45
VStringLiteral: ", ?, ?, ?, ?, ?\u005cn"
p21029
tp21030
I1
s(Vinsert
p21031
I45
VStringLiteral: "\u005ctVALUES (:NEW.com_code, :NEW.CODE, :NEW.NAME, :NEW.status, :NEW.sjcode\u005cn"
p21032
tp21033
I1
s(Vinsert
p21034
I43
VSimpleType: SchemaResolveVisitor.Context
p21035
tp21036
I1
s(Vinsert
p21037
I45
VStringLiteral: "SHARE UPDATE"
p21038
tp21039
I1
s(Vinsert
p21040
I42
VSimpleName: SQLServerSetStatement
p21041
tp21042
I1
s(Vinsert
p21043
I45
VStringLiteral: "\u005ctEND REPEAT;\u005cn"
p21044
tp21045
I1
s(Vinsert
p21046
I45
VStringLiteral: "search.retl_table_config_search"
p21047
tp21048
I1
s(Vinsert
p21049
I42
VSimpleName: XAResource
p21050
tp21051
I3
s(Vinsert
p21052
I42
VSimpleName: lobCreator
p21053
tp21054
I1
s(Vinsert
p21055
I45
VStringLiteral: "unregister mbean failed. url "
p21056
tp21057
I1
s(Vinsert
p21058
I42
VSimpleName: procedureArgumentList
p21059
tp21060
I1
s(Vinsert
p21061
I42
VSimpleName: seqExpr
p21062
tp21063
I2
s(Vinsert
p21064
I42
VSimpleName: lastIndexOf
p21065
tp21066
I1
s(Vinsert
p21067
I45
VStringLiteral: "FROM TEST\u005cn"
p21068
tp21069
I1
s(Vinsert
p21070
I42
VSimpleName: Boolean
p21071
tp21072
I13
s(Vinsert
p21073
I45
VStringLiteral: "SELECT brand, size, sum(sales) FROM items_sold GROUP BY GROUPING SETS ((brand), (size), ());"
p21074
tp21075
I1
s(Vinsert
p21076
I42
VSimpleName: resultSetMetaData_getSchemaName
p21077
tp21078
I1
s(Vinsert
p21079
I42
VSimpleName: PGCircleExpr
p21080
tp21081
I4
s(Vinsert
p21082
I42
VSimpleName: getStartTransactionTimeMillis
p21083
tp21084
I1
s(Vinsert
p21085
I42
VSimpleName: setIndexType
p21086
tp21087
I4
s(Vinsert
p21088
I42
VSimpleName: PGOutputVisitor
p21089
tp21090
I1
s(Vinsert
p21091
I42
VSimpleName: tableSourceMap
p21092
tp21093
I1
s(Vinsert
p21094
I45
VStringLiteral: "\u005ctMAXTRANS 255\u005cn"
p21095
tp21096
I1
s(Vinsert
p21097
I42
VSimpleName: filterConfigList
p21098
tp21099
I2
s(Vinsert
p21100
I42
VSimpleName: setInitialPoolSize
p21101
tp21102
I1
s(Vinsert
p21103
I42
VSimpleName: MockDriver
p21104
tp21105
I4
s(Vinsert
p21106
I45
VStringLiteral: "NOCHECK"
p21107
tp21108
I1
s(Vinsert
p21109
I45
VStringLiteral: "com.mysql.jdbc.Util"
p21110
tp21111
I1
s(Vinsert
p21112
I45
VStringLiteral: "\u005cnfrom shop a join sale_detail b"
p21113
tp21114
I1
s(Vinsert
p21115
I42
VSimpleName: MySqlWallTest4
p21116
tp21117
I1
s(Vinsert
p21118
I43
VSimpleType: SQLDataException
p21119
tp21120
I1
s(Vinsert
p21121
I43
VSimpleType: DB2Lexer
p21122
tp21123
I2
s(Vinsert
p21124
I42
VSimpleName: initUnderlyHoldability
p21125
tp21126
I1
s(Vinsert
p21127
I45
VStringLiteral: "circe"
p21128
tp21129
I1
s(Vinsert
p21130
I43
VSimpleType: SQLEvalVisitor
p21131
tp21132
I2
s(Vinsert
p21133
I45
VStringLiteral: "updateCount_10_100"
p21134
tp21135
I1
s(Vinsert
p21136
I42
VSimpleName: MySqlStartTransactionStatement
p21137
tp21138
I2
s(Vinsert
p21139
I43
VSimpleType: SQLInSubQueryExpr
p21140
tp21141
I4
s(Vinsert
p21142
I45
VStringLiteral: "), 'yyyy-mm-dd HH24:mi:ss'), t2.end_time = to_date((\u005cn"
p21143
tp21144
I1
s(Vinsert
p21145
I40
VQualifiedName: OracleIntervalType.DAY
p21146
tp21147
I1
s(Vinsert
p21148
I42
VSimpleName: DataSource
p21149
tp21150
I5
s(Vinsert
p21151
I45
VStringLiteral: "THE_DATE"
p21152
tp21153
I1
s(Vinsert
p21154
I42
VSimpleName: setEngine
p21155
tp21156
I2
s(Vinsert
p21157
I45
VStringLiteral: "select * from t1 where f1 in ('1', '2', '3', '4', '5', '6', '7', '8', '9', '10')"
p21158
tp21159
I1
s(Vinsert
p21160
I42
VSimpleName: JdbcXAConnection
p21161
tp21162
I1
s(Vinsert
p21163
I45
VStringLiteral: "\u005cn\u005ct\u005ctOR d.indkey[8] = a.attnum"
p21164
tp21165
I1
s(Vinsert
p21166
I42
VSimpleName: getAfterCommentsDirect
p21167
tp21168
I2
s(Vinsert
p21169
I45
VStringLiteral: "\u005ct\u005ctAND outer.stamp < bs.stamp\u005cn"
p21170
tp21171
I1
s(Vinsert
p21172
I42
VSimpleName: MappingEngine
p21173
tp21174
I4
s(Vinsert
p21175
I43
VSimpleType: MySqlPartitioningDef
p21176
tp21177
I2
s(Vinsert
p21178
I42
VSimpleName: UNKNOWN_TRANSACTIONISOLATION
p21179
tp21180
I1
s(Vinsert
p21181
I40
VQualifiedName: TableStat.Relationship
p21182
tp21183
I1
s(Vinsert
p21184
I40
VQualifiedName: JdbcConstants.ALIYUN_ADS
p21185
tp21186
I1
s(Vinsert
p21187
I42
VSimpleName: mark
p21188
tp21189
I4
s(Vinsert
p21190
I42
VSimpleName: denyMessage
p21191
tp21192
I1
s(Vinsert
p21193
I45
VStringLiteral: "\u005ctUNION ALL\u005cn"
p21194
tp21195
I2
s(Vinsert
p21196
I42
VSimpleName: IUserDao
p21197
tp21198
I2
s(Vinsert
p21199
I42
VSimpleName: SQLUnaryExpr
p21200
tp21201
I7
s(Vinsert
p21202
I42
VSimpleName: getMaxRowSize
p21203
tp21204
I2
s(Vinsert
p21205
I45
VStringLiteral: "WHERE t2.attr2 = 'ZB201708311440560'"
p21206
tp21207
I1
s(Vinsert
p21208
I42
VSimpleName: Enumeration
p21209
tp21210
I3
s(Vinsert
p21211
I42
VSimpleName: a
p21212
tp21213
I20
s(Vinsert
p21214
I42
VSimpleName: isSelect
p21215
tp21216
I1
s(Vinsert
p21217
I43
VSimpleType: SQLFeatureNotSupportedException
p21218
tp21219
I3
s(Vinsert
p21220
I42
VSimpleName: setRemoveAbandoned
p21221
tp21222
I3
s(Vinsert
p21223
I42
VSimpleName: outputOracle
p21224
tp21225
I2
s(Vinsert
p21226
I45
VStringLiteral: "SHOW COUNT(*) WARNINGS"
p21227
tp21228
I1
s(Vinsert
p21229
I45
VStringLiteral: "SUBPARTITIONS"
p21230
tp21231
I1
s(Vinsert
p21232
I42
VSimpleName: loadConfig
p21233
tp21234
I1
s(Vinsert
p21235
I45
VStringLiteral: "\u005ctcame_from STRING\u005cn"
p21236
tp21237
I1
s(Vinsert
p21238
I45
VStringLiteral: "\u005ct\u005ct'register', \u005cn"
p21239
tp21240
I1
s(Vinsert
p21241
I42
VSimpleName: eventBody
p21242
tp21243
I1
s(Vinsert
p21244
I45
VStringLiteral: "\u005cn\u005ctSUBPARTITION TEMPLATE ("
p21245
tp21246
I2
s(Vinsert
p21247
I13
VCharacterLiteral: ')'
p21248
tp21249
I6
s(Vinsert
p21250
I45
VStringLiteral: "update t set a=1,b=2 where a > 1"
p21251
tp21252
I1
s(Vinsert
p21253
I45
VStringLiteral: "INSERT INTO Production.ScrapReason"
p21254
tp21255
I2
s(Vinsert
p21256
I42
VSimpleName: asyncCloseEnable
p21257
tp21258
I1
s(Vinsert
p21259
I43
VSimpleType: DB2SelectQueryBlock
p21260
tp21261
I3
s(Vinsert
p21262
I42
VSimpleName: getPassword
p21263
tp21264
I8
s(Vinsert
p21265
I42
VSimpleName: getDirectDataSource
p21266
tp21267
I4
s(Vinsert
p21268
I42
VSimpleName: addBeforeComment
p21269
tp21270
I7
s(Vinsert
p21271
I45
VStringLiteral: "filename"
p21272
tp21273
I1
s(Vinsert
p21274
I45
VStringLiteral: "ALTER TABLE trans  DISABLE LIFECYCLE;"
p21275
tp21276
I1
s(Vinsert
p21277
I42
VSimpleName: resetStat
p21278
tp21279
I6
s(Vinsert
p21280
I45
VStringLiteral: "IF"
p21281
tp21282
I1
s(Vinsert
p21283
I42
VSimpleName: keywords
p21284
tp21285
I1
s(Vinsert
p21286
I42
VSimpleName: opt
p21287
tp21288
I7
s(Vinsert
p21289
I42
VSimpleName: casNext
p21290
tp21291
I1
s(Vinsert
p21292
I45
VStringLiteral: "\u005ct, supReg.analysed, supReg.feedbackWay, t.note, COUNT(DISTINCT supReg.regId) OVER () AS TOTALCOUNT\u005cn"
p21293
tp21294
I1
s(Vinsert
p21295
I42
VSimpleName: refColumns
p21296
tp21297
I2
s(Vinsert
p21298
I42
VSimpleName: updateTime
p21299
tp21300
I2
s(Vinsert
p21301
I42
VSimpleName: MBeanServerFactoryBean
p21302
tp21303
I2
s(Vinsert
p21304
I42
VSimpleName: ObjectName
p21305
tp21306
I13
s(Vinsert
p21307
I42
VSimpleName: showCreateTableStmt
p21308
tp21309
I2
s(Vinsert
p21310
I42
VSimpleName: netInterfaces
p21311
tp21312
I1
s(Vinsert
p21313
I43
VSimpleType: MySqlShowDatabasesStatement
p21314
tp21315
I1
s(Vinsert
p21316
I42
VSimpleName: test_float_zero
p21317
tp21318
I1
s(Vinsert
p21319
I40
VQualifiedName: Token.COLONEQ
p21320
tp21321
I1
s(Vinsert
p21322
I43
VSimpleType: PoolableCallableStatement
p21323
tp21324
I1
s(Vinsert
p21325
I45
VStringLiteral: "\u005ctVIEW my_view4 (\u005cn"
p21326
tp21327
I1
s(Vinsert
p21328
I45
VStringLiteral: "DELETE FROM t"
p21329
tp21330
I5
s(Vinsert
p21331
I42
VSimpleName: stringVal
p21332
tp21333
I88
s(Vinsert
p21334
I45
VStringLiteral: "\u005cnINTO films_recent"
p21335
tp21336
I1
s(Vinsert
p21337
I43
VSimpleType: SQLAlterTableDropConstraint
p21338
tp21339
I7
s(Vinsert
p21340
I45
VStringLiteral: "CONCAT"
p21341
tp21342
I2
s(Vinsert
p21343
I42
VSimpleName: getContextPath
p21344
tp21345
I3
s(Vinsert
p21346
I43
VSimpleType: NClob
p21347
tp21348
I1
s(Vinsert
p21349
I43
VSimpleType: VirtualMachineDescriptor
p21350
tp21351
I1
s(Vinsert
p21352
I42
VSimpleName: SQLBlockStatement
p21353
tp21354
I8
s(Vinsert
p21355
I45
VStringLiteral: "\u005ct\u005ctAND S.SITE_ID = M.SITE_ID\u005cn"
p21356
tp21357
I1
s(Vinsert
p21358
I42
VSimpleName: SQLStatementImpl
p21359
tp21360
I1
s(Vinsert
p21361
I45
VStringLiteral: "STATS_PERSISTENT"
p21362
tp21363
I1
s(Vinsert
p21364
I45
VStringLiteral: "SELECT * "
p21365
tp21366
I1
s(Vinsert
p21367
I45
VStringLiteral: "initialSize"
p21368
tp21369
I1
s(Vinsert
p21370
I42
VSimpleName: ownerThread
p21371
tp21372
I2
s(Vinsert
p21373
I45
VStringLiteral: "handleFatalError"
p21374
tp21375
I1
s(Vinsert
p21376
I42
VSimpleName: info
p21377
tp21378
I62
s(Vinsert
p21379
I45
VStringLiteral: "length"
p21380
tp21381
I1
s(Vinsert
p21382
I42
VSimpleName: MySqlShowPluginsStatement
p21383
tp21384
I3
s(Vinsert
p21385
I45
VStringLiteral: "\u005cnLIMIT ? OFFSET ?"
p21386
tp21387
I1
s(Vinsert
p21388
I42
VSimpleName: isIdentifierChar
p21389
tp21390
I2
s(Vinsert
p21391
I40
VQualifiedName: Token.AS
p21392
tp21393
I6
s(Vinsert
p21394
I42
VSimpleName: savepoints
p21395
tp21396
I1
s(Vinsert
p21397
I42
VSimpleName: getDriverClassName
p21398
tp21399
I7
s(Vinsert
p21400
I42
VSimpleName: addUser
p21401
tp21402
I5
s(Vinsert
p21403
I42
VSimpleName: varExpr
p21404
tp21405
I1
s(Vinsert
p21406
I42
VSimpleName: publicKey
p21407
tp21408
I2
s(Vinsert
p21409
I42
VSimpleName: getUpdateDataCount
p21410
tp21411
I1
s(Vinsert
p21412
I45
VStringLiteral: "insert overwrite table ff partition (c='c',d='d') select /*+mapjoin(tt)*/ id,name from tt"
p21413
tp21414
I1
s(Vinsert
p21415
I42
VSimpleName: setMultiStatementAllow
p21416
tp21417
I1
s(Vinsert
p21418
I45
VStringLiteral: "   and rownum < 1000"
p21419
tp21420
I1
s(Vinsert
p21421
I42
VSimpleName: testQ
p21422
tp21423
I1
s(Vinsert
p21424
I40
VQualifiedName: Map.Entry
p21425
tp21426
I9
s(Vinsert
p21427
I42
VSimpleName: getSqlStatById
p21428
tp21429
I3
s(Vinsert
p21430
I42
VSimpleName: commentVal
p21431
tp21432
I1
s(Vinsert
p21433
I43
VSimpleType: FilterChain
p21434
tp21435
I1
s(Vinsert
p21436
I45
VStringLiteral: "sharding rule violation, insert's values clause is null"
p21437
tp21438
I1
s(Vinsert
p21439
I42
VSimpleName: arraycopy
p21440
tp21441
I2
s(Vinsert
p21442
I45
VStringLiteral: "CREATE TYPE "
p21443
tp21444
I1
s(Vinsert
p21445
I42
VSimpleName: setExecuteErrorCount
p21446
tp21447
I1
s(Vinsert
p21448
I45
VStringLiteral: "LOB (\u005c"CONTENT\u005c") STORE AS (\u005cn"
p21449
tp21450
I1
s(Vinsert
p21451
I45
VStringLiteral: "RETURN varchar2\u005cn"
p21452
tp21453
I1
s(Vinsert
p21454
I39
VPrimitiveType: int
p21455
tp21456
I193
s(Vinsert
p21457
I42
VSimpleName: varName
p21458
tp21459
I9
s(Vinsert
p21460
I42
VSimpleName: isUnderlyingAutoCommit
p21461
tp21462
I3
s(Vinsert
p21463
I42
VSimpleName: createDeleteBuilder
p21464
tp21465
I1
s(Vinsert
p21466
I42
VSimpleName: keepComments
p21467
tp21468
I8
s(Vinsert
p21469
I40
VQualifiedName: com.alibaba.druid.sql.dialect.sqlserver.ast.SQLServerTop
p21470
tp21471
I1
s(Vinsert
p21472
I42
VSimpleName: k1
p21473
tp21474
I2
s(Vinsert
p21475
I42
VSimpleName: ProxoolDataSource
p21476
tp21477
I4
s(Vinsert
p21478
I40
VQualifiedName: Token.UNIQUE
p21479
tp21480
I3
s(Vinsert
p21481
I45
VStringLiteral: "DROP KEY "
p21482
tp21483
I1
s(Vinsert
p21484
I43
VSimpleType: AtomicLong
p21485
tp21486
I33
s(Vinsert
p21487
I43
VSimpleType: DataSourceDisableException
p21488
tp21489
I2
s(Vinsert
p21490
I42
VSimpleName: v
p21491
tp21492
I15
s(Vinsert
p21493
I42
VSimpleName: syntaxError
p21494
tp21495
I5
s(Vinsert
p21496
I45
VStringLiteral: "\u005ct) CLK\u005cn"
p21497
tp21498
I1
s(Vinsert
p21499
I45
VStringLiteral: "select * from t where id = 101 and age = 102 or name = 'wenshao'"
p21500
tp21501
I1
s(Vinsert
p21502
I43
VSimpleType: DB2OutputVisitor
p21503
tp21504
I4
s(Vinsert
p21505
I42
VSimpleName: response
p21506
tp21507
I3
s(Vinsert
p21508
I42
VSimpleName: classObject
p21509
tp21510
I2
s(Vinsert
p21511
I42
VSimpleName: ContainsUser
p21512
tp21513
I1
s(Vinsert
p21514
I42
VSimpleName: dataType
p21515
tp21516
I34
s(Vinsert
p21517
I45
VStringLiteral: " LINES"
p21518
tp21519
I1
s(Vinsert
p21520
I45
VStringLiteral: "set "
p21521
tp21522
I2
s(Vinsert
p21523
I40
VQualifiedName: Token.BY
p21524
tp21525
I6
s(Vinsert
p21526
I42
VSimpleName: PGWallTest1
p21527
tp21528
I1
s(Vinsert
p21529
I45
VStringLiteral: "load managed jdbc driver event listener error. "
p21530
tp21531
I2
s(Vinsert
p21532
I42
VSimpleName: computeTotalWeight
p21533
tp21534
I3
s(Vinsert
p21535
I42
VSimpleName: MySqlPartitioningDef
p21536
tp21537
I2
s(Vinsert
p21538
I42
VSimpleName: SQLName
p21539
tp21540
I138
s(Vinsert
p21541
I42
VSimpleName: MySqlCreateTableStatement
p21542
tp21543
I5
s(Vinsert
p21544
I45
VStringLiteral: "\u005cn\u005ctcountry_id CHAR(2)"
p21545
tp21546
I2
s(Vinsert
p21547
I42
VSimpleName: test_byte
p21548
tp21549
I1
s(Vinsert
p21550
I42
VSimpleName: computeHashCode64
p21551
tp21552
I2
s(Vinsert
p21553
I42
VSimpleName: addJdbcExecuteErrorCount
p21554
tp21555
I1
s(Vinsert
p21556
I42
VSimpleName: getCount_10_30_minutes
p21557
tp21558
I1
s(Vinsert
p21559
I45
VStringLiteral: "not support : "
p21560
tp21561
I1
s(Vinsert
p21562
I42
VSimpleName: tableSrc
p21563
tp21564
I2
s(Vinsert
p21565
I40
VQualifiedName: Token.LITERAL_ALIAS
p21566
tp21567
I5
s(Vinsert
p21568
I42
VSimpleName: subPartitionsCount
p21569
tp21570
I8
s(Vinsert
p21571
I45
VStringLiteral: "\u005ctON ECC.GAPM_PROJECT_INFO_SYNC_IOA\u005cn"
p21572
tp21573
I1
s(Vinsert
p21574
I40
VQualifiedName: type.name
p21575
tp21576
I1
s(Vinsert
p21577
I43
VSimpleType: PreparedStatementPool
p21578
tp21579
I2
s(Vinsert
p21580
I42
VSimpleName: setMetaData
p21581
tp21582
I1
s(Vinsert
p21583
I45
VStringLiteral: "\u005cn\u005ct\u005ct{reuseCount:"
p21584
tp21585
I1
s(Vinsert
p21586
I42
VSimpleName: ColumnGroup
p21587
tp21588
I1
s(Vinsert
p21589
I45
VStringLiteral: "\u005ct\u005c"GMT_MODIFIED\u005c"\u005cn"
p21590
tp21591
I1
s(Vinsert
p21592
I42
VSimpleName: toHexString
p21593
tp21594
I3
s(Vinsert
p21595
I42
VSimpleName: where
p21596
tp21597
I48
s(Vinsert
p21598
I42
VSimpleName: ValidConnectionCheckerAdapter
p21599
tp21600
I2
s(Vinsert
p21601
I42
VSimpleName: cancel
p21602
tp21603
I3
s(Vinsert
p21604
I45
VStringLiteral: "\u005ct\u005ctSELECT commission_pct\u005cn"
p21605
tp21606
I1
s(Vinsert
p21607
I42
VSimpleName: MySqlShowMasterStatusStatement
p21608
tp21609
I2
s(Vinsert
p21610
I45
VStringLiteral: "numtodsinterval(1, 'day')"
p21611
tp21612
I1
s(Vinsert
p21613
I42
VSimpleName: SQLUpdateBuilder
p21614
tp21615
I1
s(Vinsert
p21616
I45
VStringLiteral: "ARRAY["
p21617
tp21618
I1
s(Vinsert
p21619
I42
VSimpleName: EvalMethodTest_insert_1
p21620
tp21621
I1
s(Vinsert
p21622
I45
VStringLiteral: "start with employee_id = 100\u005cn"
p21623
tp21624
I2
s(Vinsert
p21625
I42
VSimpleName: getQuery
p21626
tp21627
I51
s(Vinsert
p21628
I45
VStringLiteral: "PCTFREE 0\u005cn"
p21629
tp21630
I1
s(Vinsert
p21631
I42
VSimpleName: rightBinary
p21632
tp21633
I2
s(Vinsert
p21634
I45
VStringLiteral: "_statement_"
p21635
tp21636
I1
s(Vinsert
p21637
I42
VSimpleName: setOrderBy
p21638
tp21639
I10
s(Vinsert
p21640
I74
VParameterizedType: ConcurrentMap<String,JdbcDataSourceStat>
p21641
tp21642
I2
s(Vinsert
p21643
I33
VNullLiteral
p21644
tp21645
I1159
s(Vinsert
p21646
I42
VSimpleName: OracleOrderByItem
p21647
tp21648
I1
s(Vinsert
p21649
I42
VSimpleName: getWallStatValue
p21650
tp21651
I1
s(Vinsert
p21652
I43
VSimpleType: Item
p21653
tp21654
I3
s(Vinsert
p21655
I42
VSimpleName: defaultHoldability
p21656
tp21657
I1
s(Vinsert
p21658
I45
VStringLiteral: "insert overwrite table ttt partition (ds='20150710',hh='07') select tt_split(content, 60) as (f0, f1, f2, f3,f4,f5,f6) from xxx;"
p21659
tp21660
I1
s(Vinsert
p21661
I42
VSimpleName: toCompareOp
p21662
tp21663
I1
s(Vinsert
p21664
I45
VStringLiteral: "\u005cnPCTFREE 10"
p21665
tp21666
I5
s(Vinsert
p21667
I42
VSimpleName: SQLColumnDefinition
p21668
tp21669
I17
s(Vinsert
p21670
I43
VSimpleType: MySqlShowProfileStatement
p21671
tp21672
I2
s(Vinsert
p21673
I42
VSimpleName: setCache
p21674
tp21675
I2
s(Vinsert
p21676
I45
VStringLiteral: "\u005cn\u005ct\u005c"PERSON_ID\u005c" NUMBER(38, 0) NOT NULL ENABLE,"
p21677
tp21678
I2
s(Vinsert
p21679
I42
VSimpleName: invocation
p21680
tp21681
I1
s(Vinsert
p21682
I45
VStringLiteral: "select * from t where id  != id + 3"
p21683
tp21684
I1
s(Vinsert
p21685
I42
VSimpleName: firstItem
p21686
tp21687
I1
s(Vinsert
p21688
I42
VSimpleName: OracleExportParameterVisitor
p21689
tp21690
I1
s(Vinsert
p21691
I43
VSimpleType: MySqlShowVariantsStatement
p21692
tp21693
I3
s(Vinsert
p21694
I42
VSimpleName: Certificate
p21695
tp21696
I1
s(Vinsert
p21697
I42
VSimpleName: returnJSONBasicStat
p21698
tp21699
I3
s(Vinsert
p21700
I40
VQualifiedName: MethodType.M1
p21701
tp21702
I5
s(Vinsert
p21703
I42
VSimpleName: getStatementProxy
p21704
tp21705
I5
s(Vinsert
p21706
I43
VSimpleType: VERSION
p21707
tp21708
I1
s(Vinsert
p21709
I42
VSimpleName: resultSet_getObject
p21710
tp21711
I2
s(Vinsert
p21712
I42
VSimpleName: to
p21713
tp21714
I21
s(Vinsert
p21715
I42
VSimpleName: exprB
p21716
tp21717
I6
s(Vinsert
p21718
I42
VSimpleName: test_get_0
p21719
tp21720
I1
s(Vinsert
p21721
I45
VStringLiteral: "VALUES "
p21722
tp21723
I2
s(Vinsert
p21724
I45
VStringLiteral: "\u005ct, supReg.Feedbackdate, supReg.Feedbackperoid, supReg.Feedbackday, supReg.dateSend, supReg.status\u005cn"
p21725
tp21726
I1
s(Vinsert
p21727
I42
VSimpleName: parseFrom
p21728
tp21729
I1
s(Vinsert
p21730
I45
VStringLiteral: "\u005ctlanguage, \u005cn"
p21731
tp21732
I1
s(Vinsert
p21733
I42
VSimpleName: objec
p21734
tp21735
I1
s(Vinsert
p21736
I42
VSimpleName: comments
p21737
tp21738
I16
s(Vinsert
p21739
I42
VSimpleName: OracleStatementParser
p21740
tp21741
I55
s(Vinsert
p21742
I45
VStringLiteral: "interval(numtoyminterval (1,'month'))\u005cn"
p21743
tp21744
I1
s(Vinsert
p21745
I42
VSimpleName: cascade
p21746
tp21747
I2
s(Vinsert
p21748
I42
VSimpleName: lastResultSet
p21749
tp21750
I2
s(Vinsert
p21751
I40
VQualifiedName: Token.MATCHED
p21752
tp21753
I2
s(Vinsert
p21754
I42
VSimpleName: markChar
p21755
tp21756
I6
s(Vinsert
p21757
I43
VSimpleType: SQLServerProvider
p21758
tp21759
I2
s(Vinsert
p21760
I45
VStringLiteral: "\u005ct, utl_raw.cast_to_raw(IS_RENEW_UPGRADE) AS IS_RENEW_UPGRADE, CATEGORY_ID_1, CATEGORY_ID_2, FIRST_RECEIPT_DATE, utl_raw.cast_to_raw(RECEIPT_REMARK) AS RECEIPT_REMARK\u005cn"
p21761
tp21762
I1
s(Vinsert
p21763
I43
VSimpleType: XAConnection
p21764
tp21765
I1
s(Vinsert
p21766
I42
VSimpleName: constArithmetic
p21767
tp21768
I2
s(Vinsert
p21769
I42
VSimpleName: MySqlShowDatabasesStatement
p21770
tp21771
I1
s(Vinsert
p21772
I42
VSimpleName: PGExprParser
p21773
tp21774
I11
s(Vinsert
p21775
I42
VSimpleName: OracleWallProvider
p21776
tp21777
I14
s(Vinsert
p21778
I34
VNumberLiteral: 31
p21779
tp21780
I4
s(Vinsert
p21781
I42
VSimpleName: functionStats
p21782
tp21783
I3
s(Vinsert
p21784
I42
VSimpleName: OracleCreateSynonymStatement
p21785
tp21786
I2
s(Vinsert
p21787
I42
VSimpleName: sql_c
p21788
tp21789
I27
s(Vinsert
p21790
I45
VStringLiteral: "javax.sql.DataSource"
p21791
tp21792
I1
s(Vinsert
p21793
I42
VSimpleName: getExceptionSoter
p21794
tp21795
I1
s(Vinsert
p21796
I45
VStringLiteral: "WHERE sites.site_id = c1.site_id\u005cn"
p21797
tp21798
I1
s(Vinsert
p21799
I42
VSimpleName: SQLIdentifierExpr
p21800
tp21801
I89
s(Vinsert
p21802
I45
VStringLiteral: " FIRST "
p21803
tp21804
I1
s(Vinsert
p21805
I42
VSimpleName: getKeepAliveCheckCount
p21806
tp21807
I1
s(Vinsert
p21808
I42
VSimpleName: method
p21809
tp21810
I37
s(Vinsert
p21811
I42
VSimpleName: tempN
p21812
tp21813
I1
s(Vinsert
p21814
I42
VSimpleName: UnsupportedOperationException
p21815
tp21816
I8
s(Vinsert
p21817
I45
VStringLiteral: "\u005cn\u005ctwhere tbek_code != ?)"
p21818
tp21819
I1
s(Vinsert
p21820
I45
VStringLiteral: "abc"
p21821
tp21822
I1
s(Vinsert
p21823
I42
VSimpleName: SQLServerSchemaStatVisitor
p21824
tp21825
I55
s(Vinsert
p21826
I43
VSimpleType: Entry
p21827
tp21828
I5
s(Vinsert
p21829
I42
VSimpleName: executeCountUpdater
p21830
tp21831
I2
s(Vinsert
p21832
I42
VSimpleName: printAndAccept
p21833
tp21834
I24
s(Vinsert
p21835
I43
VSimpleType: SQLStatement
p21836
tp21837
I753
s(Vinsert
p21838
I45
VStringLiteral: " `changed` datetime NOT NULL DEFAULT '1000-01-01 00:00:00',"
p21839
tp21840
I1
s(Vinsert
p21841
I42
VSimpleName: setGroupBy
p21842
tp21843
I1
s(Vinsert
p21844
I42
VSimpleName: currentTableLocal
p21845
tp21846
I6
s(Vinsert
p21847
I42
VSimpleName: getEndTimeMillis
p21848
tp21849
I1
s(Vinsert
p21850
I45
VStringLiteral: "FROM sys.V_$LOCKED_OBJECT lo, TB_002 DO\u005cn"
p21851
tp21852
I1
s(Vinsert
p21853
I42
VSimpleName: outFileIgnoreLinesNumber
p21854
tp21855
I1
s(Vinsert
p21856
I42
VSimpleName: setSavepoint
p21857
tp21858
I2
s(Vinsert
p21859
I40
VQualifiedName: com.alibaba.druid.sql.PagerUtils
p21860
tp21861
I1
s(Vinsert
p21862
I45
VStringLiteral: "SELECT pageid, adid FROM pageAds LATERAL VIEW explode(adid_list) adTable AS adid;"
p21863
tp21864
I1
s(Vinsert
p21865
I34
VNumberLiteral: 800
p21866
tp21867
I1
s(Vinsert
p21868
I42
VSimpleName: createConnectionCount
p21869
tp21870
I1
s(Vinsert
p21871
I45
VStringLiteral: "\u005ctREJECT LIMIT UNLIMITED"
p21872
tp21873
I1
s(Vinsert
p21874
I42
VSimpleName: SyntaxErrorViolation
p21875
tp21876
I3
s(Vinsert
p21877
I42
VSimpleName: addAll
p21878
tp21879
I9
s(Vinsert
p21880
I45
VStringLiteral: "select last_name\u005cn"
p21881
tp21882
I1
s(Vinsert
p21883
I40
VQualifiedName: buf.length
p21884
tp21885
I1
s(Vinsert
p21886
I74
VParameterizedType: List<Map<String,Object>>
p21887
tp21888
I8
s(Vinsert
p21889
I43
VSimpleType: HBaseConnection
p21890
tp21891
I2
s(Vinsert
p21892
I42
VSimpleName: statement
p21893
tp21894
I143
s(Vinsert
p21895
I45
VStringLiteral: "ALTER TABLE trans  ENABLE LIFECYCLE;"
p21896
tp21897
I1
s(Vinsert
p21898
I45
VStringLiteral: "CREATE MATERIALIZED VIEW sales_mv\u005cn"
p21899
tp21900
I1
s(Vinsert
p21901
I42
VSimpleName: setPartitionCount
p21902
tp21903
I2
s(Vinsert
p21904
I45
VStringLiteral: "\u005ct\u005ctIF curr_comm IS NULL THEN\u005cn"
p21905
tp21906
I1
s(Vinsert
p21907
I43
VSimpleType: OracleOuterExpr
p21908
tp21909
I2
s(Vinsert
p21910
I42
VSimpleName: MySqlShowColumnsStatement
p21911
tp21912
I2
s(Vinsert
p21913
I43
VSimpleType: DruidAbstractDataSource
p21914
tp21915
I6
s(Vinsert
p21916
I45
VStringLiteral: "COMMENT"
p21917
tp21918
I2
s(Vinsert
p21919
I42
VSimpleName: abs
p21920
tp21921
I1
s(Vinsert
p21922
I42
VSimpleName: parseSelectList
p21923
tp21924
I1
s(Vinsert
p21925
I43
VSimpleType: JoinType
p21926
tp21927
I1
s(Vinsert
p21928
I43
VSimpleType: WallSqlFunctionStat
p21929
tp21930
I2
s(Vinsert
p21931
I42
VSimpleName: SQLServerASTVisitor
p21932
tp21933
I12
s(Vinsert
p21934
I45
VStringLiteral: "STORAGE"
p21935
tp21936
I2
s(Vinsert
p21937
I42
VSimpleName: createMockPreparedStatement
p21938
tp21939
I1
s(Vinsert
p21940
I45
VStringLiteral: "SELECT /*+ no_merge(lo) */ DO.object_name, lo.SESSION_ID, lo.oracle_username, lo.OS_USER_NAME, DECODE(locked_mode, 1, 'SELECT', 2, 'SELECT FOR UPDATE / LOCK ROW SHARE', 3, 'INSERT/UPDATE/DELETE/LOCK ROW EXCLUSIVE', 4, 'CREATE INDEX/LOCK SHARE', 5, 'LOCK SHARE ROW EXCLUSIVE', 6, 'ALTER TABLE/DROP TABLE/DROP INDEX/TRUNCATE TABLE/LOCK EXCLUSIVE') AS sql_actions\u005cn"
p21941
tp21942
I1
s(Vinsert
p21943
I42
VSimpleName: COLLATE2
p21944
tp21945
I3
s(Vinsert
p21946
I42
VSimpleName: putAttribute
p21947
tp21948
I13
s(Vinsert
p21949
I42
VSimpleName: getEngine
p21950
tp21951
I2
s(Vinsert
p21952
I42
VSimpleName: getReadStringLength
p21953
tp21954
I1
s(Vinsert
p21955
I45
VStringLiteral: "\u005ct\u005ctAND outer.stamp < stamp\u005cn"
p21956
tp21957
I1
s(Vinsert
p21958
I42
VSimpleName: getConditions
p21959
tp21960
I46
s(Vinsert
p21961
I42
VSimpleName: pat
p21962
tp21963
I1
s(Vinsert
p21964
I45
VStringLiteral: "FROM t3;"
p21965
tp21966
I1
s(Vinsert
p21967
I42
VSimpleName: setColumn
p21968
tp21969
I6
s(Vinsert
p21970
I42
VSimpleName: getParameters
p21971
tp21972
I61
s(Vinsert
p21973
I42
VSimpleName: methodNameHashCod64
p21974
tp21975
I3
s(Vinsert
p21976
I42
VSimpleName: dataSource2
p21977
tp21978
I1
s(Vinsert
p21979
I45
VStringLiteral: "\u005ctMACHINE VARCHAR(50),\u005cn"
p21980
tp21981
I1
s(Vinsert
p21982
I42
VSimpleName: other
p21983
tp21984
I1
s(Vinsert
p21985
I43
VSimpleType: SQLNumericLiteralExpr
p21986
tp21987
I9
s(Vinsert
p21988
I42
VSimpleName: EvalMethodTest_locate
p21989
tp21990
I1
s(Vinsert
p21991
I42
VSimpleName: SQLAlterCharacter
p21992
tp21993
I1
s(Vinsert
p21994
I42
VSimpleName: getNotFail
p21995
tp21996
I1
s(Vinsert
p21997
I42
VSimpleName: object
p21998
tp21999
I10
s(Vinsert
p22000
I45
VStringLiteral: "\u005ct, bs.set_stamp, bs.set_count, bs.bck_type AS backup_type, bs.incr_level AS incremental_level, bs.pieces\u005cn"
p22001
tp22002
I1
s(Vinsert
p22003
I42
VSimpleName: SQLSequenceExpr
p22004
tp22005
I6
s(Vinsert
p22006
I42
VSimpleName: sut
p22007
tp22008
I2
s(Vinsert
p22009
I45
VStringLiteral: ". id "
p22010
tp22011
I2
s(Vinsert
p22012
I45
VStringLiteral: "create view v1 as select * from v0; create view v0 as select * from t;"
p22013
tp22014
I1
s(Vinsert
p22015
I45
VStringLiteral: " null;\u005cn"
p22016
tp22017
I2
s(Vinsert
p22018
I42
VSimpleName: inited
p22019
tp22020
I2
s(Vinsert
p22021
I42
VSimpleName: parseSelect
p22022
tp22023
I2
s(Vinsert
p22024
I45
VStringLiteral: "FROM xxxxx\u005cn"
p22025
tp22026
I2
s(Vinsert
p22027
I42
VSimpleName: o1
p22028
tp22029
I2
s(Vinsert
p22030
I42
VSimpleName: getRemoveAbandonedCount
p22031
tp22032
I1
s(Vinsert
p22033
I45
VStringLiteral: "\u005ct\u005ctWITH RECURSIVE menuTemp (menu_id, parent_id) AS (\u005cn"
p22034
tp22035
I1
s(Vinsert
p22036
I45
VStringLiteral: "\u005ct\u005ct\u005ctBUFFER_POOL DEFAULT\u005cn"
p22037
tp22038
I6
s(Vinsert
p22039
I45
VStringLiteral: "SAVEPOINT"
p22040
tp22041
I2
s(Vinsert
p22042
I45
VStringLiteral: "\u005cn\u005ctlower_impl_class NVARCHAR(255),"
p22043
tp22044
I1
s(Vinsert
p22045
I42
VSimpleName: targetSource
p22046
tp22047
I2
s(Vinsert
p22048
I45
VStringLiteral: " set default "
p22049
tp22050
I1
s(Vinsert
p22051
I43
VSimpleType: SQLTableSource
p22052
tp22053
I26
s(Vinsert
p22054
I42
VSimpleName: isEnabledFor
p22055
tp22056
I2
s(Vinsert
p22057
I40
VQualifiedName: com.alibaba.druid.sql.ast.statement.SQLUseStatement
p22058
tp22059
I1
s(Vinsert
p22060
I40
VQualifiedName: Integer.MAX_VALUE
p22061
tp22062
I1
s(Vinsert
p22063
I42
VSimpleName: Lexer
p22064
tp22065
I3
s(Vinsert
p22066
I13
VCharacterLiteral: 'T'
p22067
tp22068
I1
s(Vinsert
p22069
I43
VSimpleType: SQLSubqueryTableSource
p22070
tp22071
I18
s(Vinsert
p22072
I40
VQualifiedName: SQLObjectType.ROLE
p22073
tp22074
I1
s(Vinsert
p22075
I45
VStringLiteral: "\u005ct\u005c"KEEP_UNTIL\u005c", \u005cn"
p22076
tp22077
I1
s(Vinsert
p22078
I42
VSimpleName: getDataType
p22079
tp22080
I5
s(Vinsert
p22081
I45
VStringLiteral: "syntax error"
p22082
tp22083
I1
s(Vinsert
p22084
I42
VSimpleName: setBigDecimal
p22085
tp22086
I2
s(Vinsert
p22087
I42
VSimpleName: keyString
p22088
tp22089
I2
s(Vinsert
p22090
I45
VStringLiteral: "\u005cnfrom user"
p22091
tp22092
I1
s(Vinsert
p22093
I42
VSimpleName: preparedStatement_setClob
p22094
tp22095
I1
s(Vinsert
p22096
I42
VSimpleName: rtnValue
p22097
tp22098
I2
s(Vinsert
p22099
I43
VSimpleType: Reference
p22100
tp22101
I4
s(Vinsert
p22102
I42
VSimpleName: setConstraint
p22103
tp22104
I1
s(Vinsert
p22105
I42
VSimpleName: getOf
p22106
tp22107
I2
s(Vinsert
p22108
I42
VSimpleName: propertyValue
p22109
tp22110
I1
s(Vinsert
p22111
I42
VSimpleName: setLockType
p22112
tp22113
I3
s(Vinsert
p22114
I40
VQualifiedName: FnvHash.Constants.NEXT
p22115
tp22116
I1
s(Vinsert
p22117
I42
VSimpleName: renameColumn
p22118
tp22119
I4
s(Vinsert
p22120
I42
VSimpleName: isUseAllow
p22121
tp22122
I1
s(Vinsert
p22123
I42
VSimpleName: SQLUpdateSetItem
p22124
tp22125
I3
s(Vinsert
p22126
I45
VStringLiteral: "insert overwrite table sale_detail_multi partition (sale_date='2011', region='china' )\u005cn"
p22127
tp22128
I1
s(Vinsert
p22129
I43
VSimpleType: ProxoolDataSource
p22130
tp22131
I4
s(Vinsert
p22132
I42
VSimpleName: MySqlRenameTableStatement
p22133
tp22134
I1
s(Vinsert
p22135
I42
VSimpleName: isConnectionLogEnabled
p22136
tp22137
I1
s(Vinsert
p22138
I32
VMethodInvocation
p22139
tp22140
I14800
s(Vinsert
p22141
I42
VSimpleName: setWith
p22142
tp22143
I3
s(Vinsert
p22144
I42
VSimpleName: isCursorSpecificSegment
p22145
tp22146
I1
s(Vinsert
p22147
I43
VSimpleType: User
p22148
tp22149
I6
s(Vinsert
p22150
I45
VStringLiteral: "OLTP"
p22151
tp22152
I1
s(Vinsert
p22153
I45
VStringLiteral: "\u005ct\u005ctTABLESPACE \u005c"APP_DATA1K\u005c"\u005cn"
p22154
tp22155
I1
s(Vinsert
p22156
I45
VStringLiteral: "\u005ct\u005ctSELECT st.regid, to_char(wmsys.WM_CONCAT(DISTINCT so.orgname)) AS note\u005cn"
p22157
tp22158
I1
s(Vinsert
p22159
I45
VStringLiteral: "SELLER_SEQ"
p22160
tp22161
I1
s(Vinsert
p22162
I42
VSimpleName: statMapC
p22163
tp22164
I2
s(Vinsert
p22165
I42
VSimpleName: tableObject
p22166
tp22167
I8
s(Vinsert
p22168
I42
VSimpleName: ch0
p22169
tp22170
I1
s(Vinsert
p22171
I43
VSimpleType: PGPointExpr
p22172
tp22173
I2
s(Vinsert
p22174
I45
VStringLiteral: "\u005ct\u005ct\u005ctself.currentstr := self.currentstr;\u005cn"
p22175
tp22176
I1
s(Vinsert
p22177
I45
VStringLiteral: "format.body_before_comment"
p22178
tp22179
I1
s(Vinsert
p22180
I42
VSimpleName: NoSuchAlgorithmException
p22181
tp22182
I1
s(Vinsert
p22183
I40
VQualifiedName: b.next
p22184
tp22185
I1
s(Vinsert
p22186
I45
VStringLiteral: "jdbc:mysql://10.232.36.171:45447/"
p22187
tp22188
I1
s(Vinsert
p22189
I42
VSimpleName: groupingSet
p22190
tp22191
I2
s(Vinsert
p22192
I42
VSimpleName: natural
p22193
tp22194
I2
s(Vinsert
p22195
I42
VSimpleName: DruidStatService
p22196
tp22197
I2
s(Vinsert
p22198
I42
VSimpleName: getErrorCompositeData
p22199
tp22200
I2
s(Vinsert
p22201
I42
VSimpleName: simplify
p22202
tp22203
I2
s(Vinsert
p22204
I42
VSimpleName: StatementExecuteType
p22205
tp22206
I1
s(Vinsert
p22207
I45
VStringLiteral: "SELECT * FROM T WHERE ID IS NULL"
p22208
tp22209
I1
s(Vinsert
p22210
I42
VSimpleName: requestIntervalHistogram
p22211
tp22212
I1
s(Vinsert
p22213
I3
VArrayCreation
p22214
tp22215
I9
s(Vinsert
p22216
I42
VSimpleName: MySqlShowPrivilegesStatement
p22217
tp22218
I2
s(Vinsert
p22219
I42
VSimpleName: pooledStmt0
p22220
tp22221
I2
s(Vinsert
p22222
I42
VSimpleName: sessionId
p22223
tp22224
I5
s(Vinsert
p22225
I45
VStringLiteral: "SHOW EVENTS"
p22226
tp22227
I1
s(Vinsert
p22228
I45
VStringLiteral: "x.sql.Statement"
p22229
tp22230
I1
s(Vinsert
p22231
I45
VStringLiteral: "varchar"
p22232
tp22233
I1
s(Vinsert
p22234
I42
VSimpleName: decryptedBytes
p22235
tp22236
I1
s(Vinsert
p22237
I43
VSimpleType: Condition
p22238
tp22239
I1
s(Vinsert
p22240
I42
VSimpleName: users
p22241
tp22242
I2
s(Vinsert
p22243
I42
VSimpleName: Result
p22244
tp22245
I2
s(Vinsert
p22246
I42
VSimpleName: check
p22247
tp22248
I35
s(Vinsert
p22249
I42
VSimpleName: test_1
p22250
tp22251
I3
s(Vinsert
p22252
I42
VSimpleName: updateDataCount_1000_10000
p22253
tp22254
I1
s(Vinsert
p22255
I43
VSimpleType: HashMap
p22256
tp22257
I11
s(Vinsert
p22258
I42
VSimpleName: refObject
p22259
tp22260
I2
s(Vinsert
p22261
I45
VStringLiteral: "VALUES ('1', 'aa'), ('2', 'bb')"
p22262
tp22263
I1
s(Vinsert
p22264
I42
VSimpleName: returnDataType
p22265
tp22266
I2
s(Vinsert
p22267
I45
VStringLiteral: "SELECT UMID, HWID, MAC, GUID, RID , GMT_CREATE, GMT_MODIFIED FROM umid_rid "
p22268
tp22269
I1
s(Vinsert
p22270
I45
VStringLiteral: "\u005ct\u005ctCOMPRESS\u005cn"
p22271
tp22272
I1
s(Vinsert
p22273
I42
VSimpleName: SQLDropEventStatement
p22274
tp22275
I1
s(Vinsert
p22276
I42
VSimpleName: getArguments
p22277
tp22278
I8
s(Vinsert
p22279
I42
VSimpleName: state
p22280
tp22281
I3
s(Vinsert
p22282
I42
VSimpleName: test_reverse
p22283
tp22284
I20
s(Vinsert
p22285
I43
VSimpleType: StringTokenizer
p22286
tp22287
I1
s(Vinsert
p22288
I40
VQualifiedName: Token.LIKE
p22289
tp22290
I1
s(Vinsert
p22291
I45
VStringLiteral: "CREATE MATERIALIZED VIEW sales_summary\u005cn"
p22292
tp22293
I1
s(Vinsert
p22294
I43
VSimpleType: Record
p22295
tp22296
I1
s(Vinsert
p22297
I42
VSimpleName: getSchema
p22298
tp22299
I5
s(Vinsert
p22300
I42
VSimpleName: addTrace
p22301
tp22302
I3
s(Vinsert
p22303
I42
VSimpleName: getOwner
p22304
tp22305
I9
s(Vinsert
p22306
I45
VStringLiteral: "SELECT DISTINCT type\u005cnFROM dbmis2_databases"
p22307
tp22308
I1
s(Vinsert
p22309
I45
VStringLiteral: "\u005ctJOIN ktv_epm.ktv_eq_rprsenditem rsi ON rsi.e_rprboardid = rbi.e_rprboardid\u005cn"
p22310
tp22311
I1
s(Vinsert
p22312
I45
VStringLiteral: "_connection_"
p22313
tp22314
I1
s(Vinsert
p22315
I45
VStringLiteral: "KEEP"
p22316
tp22317
I1
s(Vinsert
p22318
I42
VSimpleName: booleanValue
p22319
tp22320
I5
s(Vinsert
p22321
I40
VQualifiedName: com.alibaba.druid.sql.ast.expr.SQLNullExpr
p22322
tp22323
I6
s(Vinsert
p22324
I43
VSimpleType: MySqlShowColumnsStatement
p22325
tp22326
I2
s(Vinsert
p22327
I42
VSimpleName: parseStaticClause
p22328
tp22329
I1
s(Vinsert
p22330
I42
VSimpleName: dao
p22331
tp22332
I8
s(Vinsert
p22333
I42
VSimpleName: SQLIntegerExpr
p22334
tp22335
I17
s(Vinsert
p22336
I43
VSimpleType: SQLAggregateExpr
p22337
tp22338
I6
s(Vinsert
p22339
I45
VStringLiteral: "\u005cn) PCTFREE 10 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING TABLESPACE \u005c"USERS\u005c""
p22340
tp22341
I1
s(Vinsert
p22342
I42
VSimpleName: feature
p22343
tp22344
I3
s(Vinsert
p22345
I40
VQualifiedName: TableStat.Column
p22346
tp22347
I4
s(Vinsert
p22348
I45
VStringLiteral: "\u005ct\u005ctfirst_name range 90 preceding) as department_total\u005cn"
p22349
tp22350
I1
s(Vinsert
p22351
I42
VSimpleName: getResetCount
p22352
tp22353
I1
s(Vinsert
p22354
I42
VSimpleName: isLogAbandoned
p22355
tp22356
I1
s(Vinsert
p22357
I42
VSimpleName: matcher
p22358
tp22359
I3
s(Vinsert
p22360
I42
VSimpleName: resolveVisitor
p22361
tp22362
I2
s(Vinsert
p22363
I45
VStringLiteral: "select * from emp a,dmp b;"
p22364
tp22365
I1
s(Vinsert
p22366
I42
VSimpleName: MySqlShowRelayLogEventsStatement
p22367
tp22368
I3
s(Vinsert
p22369
I45
VStringLiteral: "FROM postman_trace_info_one\u005cn"
p22370
tp22371
I2
s(Vinsert
p22372
I43
VSimpleType: OracleLabelStatement
p22373
tp22374
I1
s(Vinsert
p22375
I45
VStringLiteral: "XXX"
p22376
tp22377
I1
s(Vinsert
p22378
I43
VSimpleType: ServletContext
p22379
tp22380
I1
s(Vinsert
p22381
I42
VSimpleName: staticLock
p22382
tp22383
I2
s(Vinsert
p22384
I45
VStringLiteral: "<td class='td_lable' width='130'>MaxTimespanOccurTime</td>"
p22385
tp22386
I1
s(Vinsert
p22387
I45
VStringLiteral: "blackListHitCount"
p22388
tp22389
I1
s(Vinsert
p22390
I45
VStringLiteral: "SET "
p22391
tp22392
I3
s(Vinsert
p22393
I42
VSimpleName: connection_abort
p22394
tp22395
I2
s(Vinsert
p22396
I42
VSimpleName: isNoSql
p22397
tp22398
I1
s(Vinsert
p22399
I45
VStringLiteral: "perPageCount"
p22400
tp22401
I1
s(Vinsert
p22402
I45
VStringLiteral: "\u005ctKEY name5_idx (c_bigint),\u005cn"
p22403
tp22404
I1
s(Vinsert
p22405
I42
VSimpleName: CycleClause
p22406
tp22407
I1
s(Vinsert
p22408
I42
VSimpleName: ConnectionHolder
p22409
tp22410
I3
s(Vinsert
p22411
I42
VSimpleName: udpateStatement
p22412
tp22413
I3
s(Vinsert
p22414
I45
VStringLiteral: "\u005cn\u005ctdrop if not exists partition (sale_date = '201312', region = 'hangzhou');"
p22415
tp22416
I1
s(Vinsert
p22417
I40
VQualifiedName: Token.QUES
p22418
tp22419
I2
s(Vinsert
p22420
I42
VSimpleName: setConnectBy
p22421
tp22422
I2
s(Vinsert
p22423
I42
VSimpleName: PGIntervalExpr
p22424
tp22425
I6
s(Vinsert
p22426
I45
VStringLiteral: "\u005ctRETURN T_STR;\u005cn"
p22427
tp22428
I1
s(Vinsert
p22429
I42
VSimpleName: SQLScriptCommitStatement
p22430
tp22431
I1
s(Vinsert
p22432
I42
VSimpleName: PagerUtils
p22433
tp22434
I24
s(Vinsert
p22435
I42
VSimpleName: mysqlSpecial
p22436
tp22437
I1
s(Vinsert
p22438
I42
VSimpleName: SQLCharExpr
p22439
tp22440
I20
s(Vinsert
p22441
I45
VStringLiteral: "Count_5_10"
p22442
tp22443
I1
s(Vinsert
p22444
I42
VSimpleName: DB2SelectQueryBlock
p22445
tp22446
I3
s(Vinsert
p22447
I34
VNumberLiteral: 5
p22448
tp22449
I11
s(Vinsert
p22450
I45
VStringLiteral: "\u005ct\u005ctAND b.TYPE IN ('TX', 'TM')\u005cn"
p22451
tp22452
I1
s(Vinsert
p22453
I45
VStringLiteral: "Unable to enlist connection the transaction"
p22454
tp22455
I1
s(Vinsert
p22456
I45
VStringLiteral: "jdbc:wrap-jdbc:jdbc:mock:xxx"
p22457
tp22458
I1
s(Vinsert
p22459
I42
VSimpleName: SQLExecutor
p22460
tp22461
I3
s(Vinsert
p22462
I43
VSimpleType: MySqlCharExpr
p22463
tp22464
I3
s(Vinsert
p22465
I45
VStringLiteral: "IN DATABASE "
p22466
tp22467
I1
s(Vinsert
p22468
I40
VQualifiedName: x.name
p22469
tp22470
I1
s(Vinsert
p22471
I43
VSimpleType: MappingRuleEntry
p22472
tp22473
I1
s(Vinsert
p22474
I42
VSimpleName: getTarget
p22475
tp22476
I3
s(Vinsert
p22477
I40
VQualifiedName: Token.SHOW
p22478
tp22479
I1
s(Vinsert
p22480
I45
VStringLiteral: "  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)\u005cn"
p22481
tp22482
I1
s(Vinsert
p22483
I42
VSimpleName: getMasterWeightRegionBegin
p22484
tp22485
I1
s(Vinsert
p22486
I45
VStringLiteral: "illegal alias. "
p22487
tp22488
I1
s(Vinsert
p22489
I40
VQualifiedName: val.inTransactionCount
p22490
tp22491
I1
s(Vinsert
p22492
I43
VSimpleType: SQLLateralViewTableSource
p22493
tp22494
I2
s(Vinsert
p22495
I42
VSimpleName: updateObject
p22496
tp22497
I5
s(Vinsert
p22498
I42
VSimpleName: removeConnectionEventListener
p22499
tp22500
I1
s(Vinsert
p22501
I43
VSimpleType: JPanel
p22502
tp22503
I1
s(Vinsert
p22504
I45
VStringLiteral: ", "
p22505
tp22506
I21
s(Vinsert
p22507
I42
VSimpleName: SQLInListExpr
p22508
tp22509
I3
s(Vinsert
p22510
I42
VSimpleName: outParameters
p22511
tp22512
I2
s(Vinsert
p22513
I42
VSimpleName: getCharacterStream
p22514
tp22515
I1
s(Vinsert
p22516
I42
VSimpleName: getDeleteWhere
p22517
tp22518
I3
s(Vinsert
p22519
I42
VSimpleName: createSelectQueryBlock
p22520
tp22521
I1
s(Vinsert
p22522
I45
VStringLiteral: "requestIntervalHistogram_1000000_10000000"
p22523
tp22524
I1
s(Vinsert
p22525
I42
VSimpleName: applyDropColumn
p22526
tp22527
I2
s(Vinsert
p22528
I40
VQualifiedName: JSplitPane.LEFT
p22529
tp22530
I1
s(Vinsert
p22531
I45
VStringLiteral: "\u005ctRETENTION\u005cn"
p22532
tp22533
I3
s(Vinsert
p22534
I45
VStringLiteral: "WHERE t1.FK_DEPT = t2.dept"
p22535
tp22536
I1
s(Vinsert
p22537
I42
VSimpleName: updateDataCount_0_1
p22538
tp22539
I1
s(Vinsert
p22540
I43
VSimpleType: ProfileEntry
p22541
tp22542
I1
s(Vinsert
p22543
I42
VSimpleName: TestFilter
p22544
tp22545
I2
s(Vinsert
p22546
I45
VStringLiteral: "\u005ctNEXT 1048576\u005cn"
p22547
tp22548
I3
s(Vinsert
p22549
I42
VSimpleName: StringWriter
p22550
tp22551
I5
s(Vinsert
p22552
I42
VSimpleName: executeErrorLastMessage
p22553
tp22554
I1
s(Vinsert
p22555
I42
VSimpleName: FNVUtils
p22556
tp22557
I14
s(Vinsert
p22558
I45
VStringLiteral: "varchar2(10000)"
p22559
tp22560
I1
s(Vinsert
p22561
I42
VSimpleName: isJdbc4
p22562
tp22563
I1
s(Vinsert
p22564
I45
VStringLiteral: "select 2"
p22565
tp22566
I2
s(Vinsert
p22567
I42
VSimpleName: TeradataOutputVisitor
p22568
tp22569
I2
s(Vinsert
p22570
I45
VStringLiteral: "\u005ct\u005ctor CLK.clk > 0\u005cn"
p22571
tp22572
I1
s(Vinsert
p22573
I42
VSimpleName: shutdownNow
p22574
tp22575
I1
s(Vinsert
p22576
I40
VQualifiedName: Token.SESSION
p22577
tp22578
I3
s(Vinsert
p22579
I45
VStringLiteral: "\u005cn\u005ctoffice VARCHAR2(10)"
p22580
tp22581
I2
s(Vinsert
p22582
I45
VStringLiteral: "bvt/parser/antlr_grammers_v4_plsql/examples/"
p22583
tp22584
I1
s(Vinsert
p22585
I42
VSimpleName: setConnectedTime
p22586
tp22587
I1
s(Vinsert
p22588
I43
VSimpleType: StatAnnotationAdvisor
p22589
tp22590
I2
s(Vinsert
p22591
I45
VStringLiteral: "\u005ct\u005ct\u005ctINITIAL 1048576\u005cn"
p22592
tp22593
I2
s(Vinsert
p22594
I42
VSimpleName: test_odps
p22595
tp22596
I1
s(Vinsert
p22597
I45
VStringLiteral: " `sess_id` varchar(128) NOT NULL,"
p22598
tp22599
I1
s(Vinsert
p22600
I43
VSimpleType: MySqlShowCreateProcedureStatement
p22601
tp22602
I5
s(Vinsert
p22603
I45
VStringLiteral: "CREATE TABLE products ("
p22604
tp22605
I1
s(Vinsert
p22606
I45
VStringLiteral: "\u005ctWHERE a.username IS NOT NULL\u005cn"
p22607
tp22608
I1
s(Vinsert
p22609
I45
VStringLiteral: "ErrorCount"
p22610
tp22611
I3
s(Vinsert
p22612
I42
VSimpleName: over
p22613
tp22614
I6
s(Vinsert
p22615
I43
VSimpleType: SQLAlterTableDropKey
p22616
tp22617
I1
s(Vinsert
p22618
I42
VSimpleName: lastExecuteStartNano
p22619
tp22620
I1
s(Vinsert
p22621
I45
VStringLiteral: "   and ps_od_ind = 'Y'\u005cn"
p22622
tp22623
I1
s(Vinsert
p22624
I42
VSimpleName: setStorageClause
p22625
tp22626
I1
s(Vinsert
p22627
I42
VSimpleName: getProfiletat
p22628
tp22629
I4
s(Vinsert
p22630
I45
VStringLiteral: "\u005ctBEFORE INSERT OR UPDATE salary job_id\u005cn"
p22631
tp22632
I1
s(Vinsert
p22633
I42
VSimpleName: writeLock
p22634
tp22635
I6
s(Vinsert
p22636
I45
VStringLiteral: "INITRANS"
p22637
tp22638
I1
s(Vinsert
p22639
I42
VSimpleName: test_prepare4
p22640
tp22641
I1
s(Vinsert
p22642
I42
VSimpleName: getReplaceCount
p22643
tp22644
I2
s(Vinsert
p22645
I42
VSimpleName: returningStatement
p22646
tp22647
I2
s(Vinsert
p22648
I43
VSimpleType: OracleOutputVisitor
p22649
tp22650
I7
s(Vinsert
p22651
I42
VSimpleName: propValue
p22652
tp22653
I1
s(Vinsert
p22654
I42
VSimpleName: DataSourcePanel
p22655
tp22656
I1
s(Vinsert
p22657
I45
VStringLiteral: "error : "
p22658
tp22659
I1
s(Vinsert
p22660
I43
VSimpleType: SpringMethodStatValue
p22661
tp22662
I1
s(Vinsert
p22663
I42
VSimpleName: getBodyBeforeCommentsDirect
p22664
tp22665
I1
s(Vinsert
p22666
I42
VSimpleName: resultSet
p22667
tp22668
I30
s(Vinsert
p22669
I45
VStringLiteral: "\u005ct`c_char` char(10) DEFAULT NULL COMMENT 'char',\u005cn"
p22670
tp22671
I2
s(Vinsert
p22672
I45
VStringLiteral: "| c_varchar    | varchar(10)  | NO   |     | NULL    |       |\u005cn"
p22673
tp22674
I1
s(Vinsert
p22675
I42
VSimpleName: isAll
p22676
tp22677
I3
s(Vinsert
p22678
I45
VStringLiteral: "create definer = current_user event if not exists someevent on schedule at current_timestamp + interval 30 minute\u005cn"
p22679
tp22680
I1
s(Vinsert
p22681
I45
VStringLiteral: "f2"
p22682
tp22683
I1
s(Vinsert
p22684
I42
VSimpleName: MappingRuleEntry
p22685
tp22686
I1
s(Vinsert
p22687
I45
VStringLiteral: " AND ((`Extent1`.`Zone`) = (CASE WHEN (1 IS  NULL) THEN (1)  ELSE (1) END))"
p22688
tp22689
I1
s(Vinsert
p22690
I34
VNumberLiteral: 1024
p22691
tp22692
I1
s(Vinsert
p22693
I42
VSimpleName: setUseAllow
p22694
tp22695
I1
s(Vinsert
p22696
I42
VSimpleName: jdbcSqlStat
p22697
tp22698
I4
s(Vinsert
p22699
I42
VSimpleName: valueExpr
p22700
tp22701
I7
s(Vinsert
p22702
I42
VSimpleName: plainText
p22703
tp22704
I2
s(Vinsert
p22705
I42
VSimpleName: eldest
p22706
tp22707
I3
s(Vinsert
p22708
I42
VSimpleName: incrementJdbcResultSetOpenCount
p22709
tp22710
I1
s(Vinsert
p22711
I45
VStringLiteral: "jdbc:h2:mem:test;"
p22712
tp22713
I1
s(Vinsert
p22714
I45
VStringLiteral: "\u005ctMAXEXTENTS 2147483645\u005cn"
p22715
tp22716
I3
s(Vinsert
p22717
I42
VSimpleName: test_2
p22718
tp22719
I1
s(Vinsert
p22720
I45
VStringLiteral: "SELECT `mtk_p_mg`.`id` AS `id`, `mtk_p_mg`.`gmt_create` AS `gmtCreate`, `mtk_p_mg`.`gmt_modified` AS `gmtModified`, `mtk_p_mg`.`target` AS `target`, `mtk_p_mg`.`msg_id` AS `msgId` , `mtk_p_mg`.`uuid` AS `uuid`, `mtk_p_mg`.`app_key` AS `appKey`, `mtk_p_mg`.`utdid` AS `utdid`, `mtk_p_mg`.`digest` AS `digest`, `mtk_p_mg`.`content` AS `content` , `mtk_p_mg`.`user_info` AS `userInfo`, `mtk_p_mg`.`status` AS `status`, `mtk_p_mg`.`mesg_status` AS `mesgStatus`, `mtk_p_mg`.`start_time` AS `startTime`, `mtk_p_mg`.`expired` AS `expired` , `mtk_p_mg`.`online` AS `online`, `mtk_p_mg`.`gmt_commit` AS `gmtCommit`, `mtk_p_mg`.`extra_info` AS `extraInfo`, `mtk_p_mg`.`auto_commit` AS `autoCommit`, `mtk_p_mg`.`task_id` AS `taskId` , `mtk_p_mg`.`msg_type` AS `msgType`, `mtk_p_mg`.`push_user_token` AS `pushUserToken`, `mtk_p_mg`.`tb_app_device_token` AS `tbAppDeviceToken`, `mtk_p_mg`.`sdk_version` AS `sdkVersion`, `mtk_p_mg`.`biz_ext_info` AS `bizExtInfo` FROM mtk_p_mg `mtk_p_mg` FORCE INDEX (idx_targetid) WHERE `mtk_p_mg`.`target` = ? ORDER BY `mtk_p_mg`.`id` DESC LIMIT ?, ?"
p22721
tp22722
I1
s(Vinsert
p22723
I45
VStringLiteral: "getMaxRows error"
p22724
tp22725
I1
s(Vinsert
p22726
I45
VStringLiteral: "admin"
p22727
tp22728
I2
s(Vinsert
p22729
I45
VStringLiteral: "as"
p22730
tp22731
I1
s(Vinsert
p22732
I42
VSimpleName: createIfNotExists
p22733
tp22734
I3
s(Vinsert
p22735
I45
VStringLiteral: "\u005ct\u005ct, isdept, type, selfcode, POS, createdate\u005cn"
p22736
tp22737
I1
s(Vinsert
p22738
I42
VSimpleName: EvalMethodBinTest
p22739
tp22740
I1
s(Vinsert
p22741
I42
VSimpleName: getLastErrorTime
p22742
tp22743
I1
s(Vinsert
p22744
I42
VSimpleName: incrementMergeCount
p22745
tp22746
I1
s(Vinsert
p22747
I45
VStringLiteral: "DROP USER "
p22748
tp22749
I1
s(Vinsert
p22750
I42
VSimpleName: myStmt
p22751
tp22752
I1
s(Vinsert
p22753
I42
VSimpleName: getReferencedTableName
p22754
tp22755
I1
s(Vinsert
p22756
I43
VSimpleType: X509EncodedKeySpec
p22757
tp22758
I2
s(Vinsert
p22759
I43
VSimpleType: PrivilegedAction
p22760
tp22761
I1
s(Vinsert
p22762
I42
VSimpleName: setWhere
p22763
tp22764
I9
s(Vinsert
p22765
I45
VStringLiteral: "\u005cn\u005ctjob_code INT, "
p22766
tp22767
I1
s(Vinsert
p22768
I45
VStringLiteral: "ORGANIZATION"
p22769
tp22770
I1
s(Vinsert
p22771
I42
VSimpleName: getConnectionCount_Alive_6_12_Hours
p22772
tp22773
I1
s(Vinsert
p22774
I42
VSimpleName: setLastActiveTimeMillis
p22775
tp22776
I1
s(Vinsert
p22777
I43
VSimpleType: PoolablePreparedStatement
p22778
tp22779
I2
s(Vinsert
p22780
I42
VSimpleName: MySqlShowOpenTablesStatement
p22781
tp22782
I2
s(Vinsert
p22783
I42
VSimpleName: PGValuesQuery
p22784
tp22785
I3
s(Vinsert
p22786
I42
VSimpleName: subString
p22787
tp22788
I3
s(Vinsert
p22789
I45
VStringLiteral: "META-INF/druid-filter-wall-permit-name-oracle-default.txt"
p22790
tp22791
I1
s(Vinsert
p22792
I42
VSimpleName: Environment
p22793
tp22794
I2
s(Vinsert
p22795
I42
VSimpleName: conn_8
p22796
tp22797
I1
s(Vinsert
p22798
I42
VSimpleName: fractionalSecondsPrecision
p22799
tp22800
I2
s(Vinsert
p22801
I42
VSimpleName: setDropDataFile
p22802
tp22803
I1
s(Vinsert
p22804
I42
VSimpleName: firstVar
p22805
tp22806
I2
s(Vinsert
p22807
I45
VStringLiteral: "SELECT cust_last_name, nls_language, credit_limit\u005cn"
p22808
tp22809
I1
s(Vinsert
p22810
I42
VSimpleName: SuppressWarnings
p22811
tp22812
I3
s(Vinsert
p22813
I42
VSimpleName: indexList
p22814
tp22815
I1
s(Vinsert
p22816
I42
VSimpleName: testOnBorrow
p22817
tp22818
I2
s(Vinsert
p22819
I42
VSimpleName: excludesPattern
p22820
tp22821
I3
s(Vinsert
p22822
I40
VQualifiedName: SQLCommentStatement.Type.TABLE
p22823
tp22824
I1
s(Vinsert
p22825
I43
VSimpleType: JdbcSqlStat
p22826
tp22827
I27
s(Vinsert
p22828
I40
VQualifiedName: lexer.mark
p22829
tp22830
I2
s(Vinsert
p22831
I42
VSimpleName: remoteAddressHeader
p22832
tp22833
I1
s(Vinsert
p22834
I45
VStringLiteral: "FROM search_graph;"
p22835
tp22836
I1
s(Vinsert
p22837
I42
VSimpleName: setLastSql
p22838
tp22839
I1
s(Vinsert
p22840
I42
VSimpleName: param2Value
p22841
tp22842
I1
s(Vinsert
p22843
I45
VStringLiteral: "count(*) cnt"
p22844
tp22845
I1
s(Vinsert
p22846
I42
VSimpleName: defaultMaxFieldSize
p22847
tp22848
I1
s(Vinsert
p22849
I42
VSimpleName: SQLFeatureNotSupportedException
p22850
tp22851
I3
s(Vinsert
p22852
I42
VSimpleName: isTableCheck
p22853
tp22854
I5
s(Vinsert
p22855
I9
VBooleanLiteral: false
p22856
tp22857
I191
s(Vinsert
p22858
I42
VSimpleName: SQLValuableExpr
p22859
tp22860
I2
s(Vinsert
p22861
I42
VSimpleName: maxLimit
p22862
tp22863
I1
s(Vinsert
p22864
I42
VSimpleName: getConnectionstat
p22865
tp22866
I1
s(Vinsert
p22867
I42
VSimpleName: listExpr
p22868
tp22869
I4
s(Vinsert
p22870
I42
VSimpleName: getStatValueAndReset
p22871
tp22872
I1
s(Vinsert
p22873
I43
VSimpleType: JdbcTemplate
p22874
tp22875
I1
s(Vinsert
p22876
I45
VStringLiteral: "GRANT INHERIT PRIVILEGES ON USER sh TO hr"
p22877
tp22878
I1
s(Vinsert
p22879
I45
VStringLiteral: "hex"
p22880
tp22881
I1
s(Vinsert
p22882
I40
VQualifiedName: com.alibaba.druid.hbase.hbql.parser.HBQLStatementParser
p22883
tp22884
I1
s(Vinsert
p22885
I42
VSimpleName: SQLStartTransactionStatement
p22886
tp22887
I3
s(Vinsert
p22888
I40
VQualifiedName: com.alibaba.druid.wall.WallProviderStatValue
p22889
tp22890
I1
s(Vinsert
p22891
I40
VQualifiedName: Token.KEY
p22892
tp22893
I3
s(Vinsert
p22894
I45
VStringLiteral: ", timeBetweenEvictionRunsMillis "
p22895
tp22896
I1
s(Vinsert
p22897
I45
VStringLiteral: "1000"
p22898
tp22899
I1
s(Vinsert
p22900
I74
VParameterizedType: List<SQLExpr>
p22901
tp22902
I3
s(Vinsert
p22903
I45
VStringLiteral: "\u005ct\u005ctOR A.STREET_AREA LIKE ('%' || ? || '%')\u005cn"
p22904
tp22905
I1
s(Vinsert
p22906
I42
VSimpleName: debug
p22907
tp22908
I17
s(Vinsert
p22909
I43
VSimpleType: PGTypeCastExpr
p22910
tp22911
I5
s(Vinsert
p22912
I45
VStringLiteral: "\u005cn\u005ctcountry_id CHAR(2),"
p22913
tp22914
I2
s(Vinsert
p22915
I42
VSimpleName: OracleUtilsTest
p22916
tp22917
I1
s(Vinsert
p22918
I42
VSimpleName: Resources
p22919
tp22920
I1
s(Vinsert
p22921
I42
VSimpleName: setSubPartitionsCount
p22922
tp22923
I1
s(Vinsert
p22924
I45
VStringLiteral: "\u005cn\u005ctANALYZE PARTITION ALL"
p22925
tp22926
I1
s(Vinsert
p22927
I43
VSimpleType: HiveOutputVisitor
p22928
tp22929
I2
s(Vinsert
p22930
I45
VStringLiteral: "\u005ct, first_name\u005cn"
p22931
tp22932
I1
s(Vinsert
p22933
I45
VStringLiteral: "\u005ct\u005ct\u005ctAND ITEM.INVENTORY_ITEM_ID = SYS_ITEM.INVENTORY_ITEM_ID\u005cn"
p22934
tp22935
I1
s(Vinsert
p22936
I42
VSimpleName: physicalNames
p22937
tp22938
I1
s(Vinsert
p22939
I43
VSimpleType: AtomicInteger
p22940
tp22941
I4
s(Vinsert
p22942
I42
VSimpleName: MockPreparedStatement
p22943
tp22944
I5
s(Vinsert
p22945
I42
VSimpleName: pushService
p22946
tp22947
I1
s(Vinsert
p22948
I42
VSimpleName: getViolationCount
p22949
tp22950
I2
s(Vinsert
p22951
I42
VSimpleName: incrementCreateCount
p22952
tp22953
I2
s(Vinsert
p22954
I42
VSimpleName: DB2ASTVisitor
p22955
tp22956
I2
s(Vinsert
p22957
I42
VSimpleName: getDistributeBy
p22958
tp22959
I2
s(Vinsert
p22960
I40
VQualifiedName: JdbcConnectionStat.Entry
p22961
tp22962
I2
s(Vinsert
p22963
I45
VStringLiteral: "\u005ctsel\u005cn"
p22964
tp22965
I1
s(Vinsert
p22966
I42
VSimpleName: getSubString
p22967
tp22968
I1
s(Vinsert
p22969
I45
VStringLiteral: "format.before_comment"
p22970
tp22971
I1
s(Vinsert
p22972
I42
VSimpleName: getServletContext
p22973
tp22974
I1
s(Vinsert
p22975
I42
VSimpleName: getMetaData
p22976
tp22977
I5
s(Vinsert
p22978
I45
VStringLiteral: "select * from t"
p22979
tp22980
I1
s(Vinsert
p22981
I42
VSimpleName: isNoWait
p22982
tp22983
I1
s(Vinsert
p22984
I43
VSimpleType: StringBuffer
p22985
tp22986
I68
s(Vinsert
p22987
I45
VStringLiteral: "  TABLESPACE \u005c"BISYNC1M\u005c" NOCOM"
p22988
tp22989
I1
s(Vinsert
p22990
I42
VSimpleName: MySqlWallTest31
p22991
tp22992
I1
s(Vinsert
p22993
I42
VSimpleName: isWrapperFor
p22994
tp22995
I3
s(Vinsert
p22996
I42
VSimpleName: majorVersion
p22997
tp22998
I1
s(Vinsert
p22999
I45
VStringLiteral: " < "
p23000
tp23001
I1
s(Vinsert
p23002
I42
VSimpleName: doubleValue
p23003
tp23004
I1
s(Vinsert
p23005
I42
VSimpleName: restartMaster
p23006
tp23007
I1
s(Vinsert
p23008
I42
VSimpleName: forUpdate
p23009
tp23010
I2
s(Vinsert
p23011
I45
VStringLiteral: "\u005ct\u005ctAND outer.dbinc_key = dbinc_key\u005cn"
p23012
tp23013
I1
s(Vinsert
p23014
I42
VSimpleName: initCause
p23015
tp23016
I1
s(Vinsert
p23017
I42
VSimpleName: ModelRulesClause
p23018
tp23019
I2
s(Vinsert
p23020
I42
VSimpleName: getDruidDataSourceById
p23021
tp23022
I4
s(Vinsert
p23023
I42
VSimpleName: JMXUtils
p23024
tp23025
I3
s(Vinsert
p23026
I42
VSimpleName: setValidationQuery
p23027
tp23028
I7
s(Vinsert
p23029
I42
VSimpleName: buildNewCondition
p23030
tp23031
I1
s(Vinsert
p23032
I43
VSimpleType: DecryptException
p23033
tp23034
I4
s(Vinsert
p23035
I45
VStringLiteral: "| c_varchar    | varchar(10)  | NO   |     | hello               |                             |\u005cn"
p23036
tp23037
I1
s(Vinsert
p23038
I40
VQualifiedName: com.alibaba.druid.sql.dialect.db2.visitor.DB2SchemaStatVisitor
p23039
tp23040
I1
s(Vinsert
p23041
I42
VSimpleName: alter
p23042
tp23043
I1
s(Vinsert
p23044
I40
VQualifiedName: com.alibaba.druid.filter.FilterAdapter
p23045
tp23046
I1
s(Vinsert
p23047
I40
VQualifiedName: Token.ONLY
p23048
tp23049
I2
s(Vinsert
p23050
I45
VStringLiteral: "\u005ct\u005ct\u005ctINTO T_STR\u005cn"
p23051
tp23052
I1
s(Vinsert
p23053
I40
VQualifiedName: Token.DEFAULT
p23054
tp23055
I1
s(Vinsert
p23056
I45
VStringLiteral: "\u005ct\u005ct\u005ctOR (b.cp_code IS NULL\u005cn"
p23057
tp23058
I1
s(Vinsert
p23059
I42
VSimpleName: getProperties
p23060
tp23061
I4
s(Vinsert
p23062
I43
VSimpleType: WallSQLException
p23063
tp23064
I2
s(Vinsert
p23065
I43
VSimpleType: URL
p23066
tp23067
I4
s(Vinsert
p23068
I42
VSimpleName: setColumnLabel
p23069
tp23070
I1
s(Vinsert
p23071
I45
VStringLiteral: "LIST "
p23072
tp23073
I1
s(Vinsert
p23074
I42
VSimpleName: OracleIntervalExpr
p23075
tp23076
I2
s(Vinsert
p23077
I42
VSimpleName: uriStatDataList
p23078
tp23079
I2
s(Vinsert
p23080
I42
VSimpleName: param0
p23081
tp23082
I20
s(Vinsert
p23083
I42
VSimpleName: EvalMethodTest_locate_2
p23084
tp23085
I1
s(Vinsert
p23086
I43
VSimpleType: SQLExpr
p23087
tp23088
I213
s(Vinsert
p23089
I42
VSimpleName: EvalMethodTest_Char
p23090
tp23091
I1
s(Vinsert
p23092
I42
VSimpleName: SQLSubqueryTableSource
p23093
tp23094
I18
s(Vinsert
p23095
I42
VSimpleName: getTableNames
p23096
tp23097
I8
s(Vinsert
p23098
I42
VSimpleName: getReferenceOn
p23099
tp23100
I2
s(Vinsert
p23101
I42
VSimpleName: getColumnClassName
p23102
tp23103
I1
s(Vinsert
p23104
I42
VSimpleName: ProfileEntryStat
p23105
tp23106
I2
s(Vinsert
p23107
I45
VStringLiteral: "<tr><td>LogicCloseCount</td><td>"
p23108
tp23109
I1
s(Vinsert
p23110
I42
VSimpleName: MySQLException
p23111
tp23112
I1
s(Vinsert
p23113
I42
VSimpleName: recordDataType
p23114
tp23115
I1
s(Vinsert
p23116
I45
VStringLiteral: "\u005cn\u005ctPARTITION west VALUES ('AMERICA'), "
p23117
tp23118
I2
s(Vinsert
p23119
I42
VSimpleName: getPermitTables
p23120
tp23121
I4
s(Vinsert
p23122
I45
VStringLiteral: "SELECT @@GLOBAL.sql_mode"
p23123
tp23124
I1
s(Vinsert
p23125
I70
VEnhancedForStatement
p23126
tp23127
I166
s(Vinsert
p23128
I43
VSimpleType: TestFilter
p23129
tp23130
I2
s(Vinsert
p23131
I42
VSimpleName: cal
p23132
tp23133
I3
s(Vinsert
p23134
I42
VSimpleName: connectStackTrace
p23135
tp23136
I2
s(Vinsert
p23137
I45
VStringLiteral: "? * 11"
p23138
tp23139
I1
s(Vinsert
p23140
I45
VStringLiteral: "SELECT * FROM dbo.Customers AS c   \u005cn"
p23141
tp23142
I1
s(Vinsert
p23143
I42
VSimpleName: NoSuchMethodError
p23144
tp23145
I1
s(Vinsert
p23146
I42
VSimpleName: isSelectUnionCheck
p23147
tp23148
I1
s(Vinsert
p23149
I45
VStringLiteral: "-----------------------"
p23150
tp23151
I1
s(Vinsert
p23152
I42
VSimpleName: setAutomaticTestTable
p23153
tp23154
I1
s(Vinsert
p23155
I45
VStringLiteral: "columns : "
p23156
tp23157
I1
s(Vinsert
p23158
I45
VStringLiteral: "select * from table1;--comment1 goes here"
p23159
tp23160
I1
s(Vinsert
p23161
I43
VSimpleType: PGParameter
p23162
tp23163
I2
s(Vinsert
p23164
I43
VSimpleType: Number
p23165
tp23166
I10
s(Vinsert
p23167
I34
VNumberLiteral: 102
p23168
tp23169
I2
s(Vinsert
p23170
I42
VSimpleName: getReference
p23171
tp23172
I1
s(Vinsert
p23173
I45
VStringLiteral: "sin(1)"
p23174
tp23175
I1
s(Vinsert
p23176
I42
VSimpleName: JLabel
p23177
tp23178
I2
s(Vinsert
p23179
I45
VStringLiteral: "CONSTRAINT "
p23180
tp23181
I6
s(Vinsert
p23182
I42
VSimpleName: TestUtil
p23183
tp23184
I3
s(Vinsert
p23185
I45
VStringLiteral: "\u005cn\u005ctPARTITION p2 VALUES LESS THAN (10000)"
p23186
tp23187
I1
s(Vinsert
p23188
I42
VSimpleName: getStartWith
p23189
tp23190
I1
s(Vinsert
p23191
I42
VSimpleName: numPos
p23192
tp23193
I1
s(Vinsert
p23194
I45
VStringLiteral: "WHERE task_id IN (SELECT task_id AS b\u005cn"
p23195
tp23196
I1
s(Vinsert
p23197
I42
VSimpleName: updateCount
p23198
tp23199
I10
s(Vinsert
p23200
I45
VStringLiteral: "\u005cn);"
p23201
tp23202
I1
s(Vinsert
p23203
I42
VSimpleName: getClassName
p23204
tp23205
I2
s(Vinsert
p23206
I42
VSimpleName: v2
p23207
tp23208
I2
s(Vinsert
p23209
I45
VStringLiteral: "\u005cn\u005ct\u005ctSELECT project_deduct_mandays"
p23210
tp23211
I1
s(Vinsert
p23212
I43
VSimpleType: Field
p23213
tp23214
I9
s(Vinsert
p23215
I43
VSimpleType: SQLSomeExpr
p23216
tp23217
I3
s(Vinsert
p23218
I45
VStringLiteral: "DBA_HIST_SYSTEM_EVENT"
p23219
tp23220
I1
s(Vinsert
p23221
I45
VStringLiteral: "select 1"
p23222
tp23223
I5
s(Vinsert
p23224
I42
VSimpleName: typeName
p23225
tp23226
I5
s(Vinsert
p23227
I42
VSimpleName: createEvalVisitor
p23228
tp23229
I1
s(Vinsert
p23230
I42
VSimpleName: countStmt
p23231
tp23232
I1
s(Vinsert
p23233
I42
VSimpleName: identExpr
p23234
tp23235
I19
s(Vinsert
p23236
I42
VSimpleName: op
p23237
tp23238
I8
s(Vinsert
p23239
I42
VSimpleName: notForReplication
p23240
tp23241
I1
s(Vinsert
p23242
I42
VSimpleName: HiveSchemaStatVisitor
p23243
tp23244
I14
s(Vinsert
p23245
I42
VSimpleName: WallSqlTableStat
p23246
tp23247
I1
s(Vinsert
p23248
I45
VStringLiteral: "\u005ctAND l_shipdate < DATE '1993-01-01' + INTERVAL '3' MONTH\u005cn"
p23249
tp23250
I1
s(Vinsert
p23251
I42
VSimpleName: base64toInt
p23252
tp23253
I1
s(Vinsert
p23254
I45
VStringLiteral: "\u005ct\u005ct'VerifyPasswordFormat', \u005cn"
p23255
tp23256
I1
s(Vinsert
p23257
I42
VSimpleName: getMethod
p23258
tp23259
I10
s(Vinsert
p23260
I42
VSimpleName: requestURI
p23261
tp23262
I1
s(Vinsert
p23263
I43
VSimpleType: MySqlSetPasswordStatement
p23264
tp23265
I1
s(Vinsert
p23266
I42
VSimpleName: getLimit
p23267
tp23268
I7
s(Vinsert
p23269
I42
VSimpleName: SQLGroupingSetExpr
p23270
tp23271
I1
s(Vinsert
p23272
I42
VSimpleName: OracleMethodInvokeStatement
p23273
tp23274
I1
s(Vinsert
p23275
I45
VStringLiteral: "                   noeff_days               "
p23276
tp23277
I1
s(Vinsert
p23278
I42
VSimpleName: getSavepointName
p23279
tp23280
I1
s(Vinsert
p23281
I42
VSimpleName: setJmxOption
p23282
tp23283
I1
s(Vinsert
p23284
I45
VStringLiteral: "  city varchar2(50)\u005cn"
p23285
tp23286
I1
s(Vinsert
p23287
I42
VSimpleName: SQLDropSequenceStatement
p23288
tp23289
I2
s(Vinsert
p23290
I45
VStringLiteral: "\u005ct\u005ct\u005ct\u005ctFROM TABLE(SPLIT(STR, SEP))\u005cn"
p23291
tp23292
I1
s(Vinsert
p23293
I42
VSimpleName: isValidateOracle
p23294
tp23295
I3
s(Vinsert
p23296
I42
VSimpleName: setReturnDataType
p23297
tp23298
I3
s(Vinsert
p23299
I42
VSimpleName: setAllowComment
p23300
tp23301
I2
s(Vinsert
p23302
I42
VSimpleName: isWithCube
p23303
tp23304
I1
s(Vinsert
p23305
I42
VSimpleName: wraaper
p23306
tp23307
I3
s(Vinsert
p23308
I40
VQualifiedName: Token.LITERAL_CHARS
p23309
tp23310
I3
s(Vinsert
p23311
I43
VSimpleType: SQLAlterTableDropPartition
p23312
tp23313
I1
s(Vinsert
p23314
I42
VSimpleName: warn
p23315
tp23316
I11
s(Vinsert
p23317
I42
VSimpleName: format
p23318
tp23319
I27
s(Vinsert
p23320
I45
VStringLiteral: "\u005ct\u005ct, ?, ?, ?, ?, ?\u005cn"
p23321
tp23322
I2
s(Vinsert
p23323
I45
VStringLiteral: "trunc(CURRENT_TIMESTAMP)"
p23324
tp23325
I1
s(Vinsert
p23326
I42
VSimpleName: SQLUnique
p23327
tp23328
I4
s(Vinsert
p23329
I42
VSimpleName: columnn
p23330
tp23331
I2
s(Vinsert
p23332
I42
VSimpleName: isAllowDoPrivileged
p23333
tp23334
I3
s(Vinsert
p23335
I43
VSimpleType: NotificationTraceEventListener
p23336
tp23337
I1
s(Vinsert
p23338
I42
VSimpleName: recode
p23339
tp23340
I1
s(Vinsert
p23341
I43
VSimpleType: PrintStream
p23342
tp23343
I1
s(Vinsert
p23344
I42
VSimpleName: MySqlWallTest11
p23345
tp23346
I1
s(Vinsert
p23347
I45
VStringLiteral: "\u005ct\u005ctIF VALUECURSOR % ISOPEN THEN\u005cn"
p23348
tp23349
I1
s(Vinsert
p23350
I40
VQualifiedName: Token.VIEW
p23351
tp23352
I1
s(Vinsert
p23353
I42
VSimpleName: LinkedHashMap
p23354
tp23355
I11
s(Vinsert
p23356
I45
VStringLiteral: "ROWS"
p23357
tp23358
I1
s(Vinsert
p23359
I43
VSimpleType: Thread
p23360
tp23361
I17
s(Vinsert
p23362
I42
VSimpleName: advisor
p23363
tp23364
I3
s(Vinsert
p23365
I42
VSimpleName: prettyFormat
p23366
tp23367
I4
s(Vinsert
p23368
I74
VParameterizedType: Set<DruidDataSource>
p23369
tp23370
I1
s(Vinsert
p23371
I17
VConstructorInvocation
p23372
tp23373
I17
s(Vinsert
p23374
I45
VStringLiteral: "("
p23375
tp23376
I9
s(Vinsert
p23377
I42
VSimpleName: intoExpr
p23378
tp23379
I1
s(Vinsert
p23380
I74
VParameterizedType: HashMap<String,JdbcSqlStat>
p23381
tp23382
I1
s(Vinsert
p23383
I42
VSimpleName: transcationInfo
p23384
tp23385
I3
s(Vinsert
p23386
I42
VSimpleName: setIgnoreDeleteTriggers
p23387
tp23388
I1
s(Vinsert
p23389
I42
VSimpleName: authenticatedPassword
p23390
tp23391
I1
s(Vinsert
p23392
I45
VStringLiteral: "SELECT * FROM WS_OFFER WHERE ROWNUM <= ?"
p23393
tp23394
I1
s(Vinsert
p23395
I40
VQualifiedName: java.util.Arrays
p23396
tp23397
I1
s(Vinsert
p23398
I40
VQualifiedName: SQLSetQuantifier.UNIQUE
p23399
tp23400
I2
s(Vinsert
p23401
I42
VSimpleName: start
p23402
tp23403
I15
s(Vinsert
p23404
I42
VSimpleName: SQLCommentHint
p23405
tp23406
I12
s(Vinsert
p23407
I43
VSimpleType: SQLPrintableVisitor
p23408
tp23409
I1
s(Vinsert
p23410
I42
VSimpleName: isUppCase
p23411
tp23412
I1
s(Vinsert
p23413
I42
VSimpleName: test_null
p23414
tp23415
I1
s(Vinsert
p23416
I45
VStringLiteral: "values"
p23417
tp23418
I1
s(Vinsert
p23419
I43
VSimpleType: SQLServerStatementParser
p23420
tp23421
I52
s(Vinsert
p23422
I45
VStringLiteral: "\u005ctTYPE VARCHAR(200),\u005cn"
p23423
tp23424
I1
s(Vinsert
p23425
I45
VStringLiteral: "druid.oracle.pingTimeout"
p23426
tp23427
I1
s(Vinsert
p23428
I42
VSimpleName: trim
p23429
tp23430
I14
s(Vinsert
p23431
I42
VSimpleName: xaResources
p23432
tp23433
I1
s(Vinsert
p23434
I45
VStringLiteral: "-- xxx"
p23435
tp23436
I3
s(Vinsert
p23437
I42
VSimpleName: WallConfig
p23438
tp23439
I64
s(Vinsert
p23440
I43
VSimpleType: XAConnectionFactory
p23441
tp23442
I1
s(Vinsert
p23443
I42
VSimpleName: setAccessModel
p23444
tp23445
I1
s(Vinsert
p23446
I43
VSimpleType: OracleExprParser
p23447
tp23448
I22
s(Vinsert
p23449
I45
VStringLiteral: "{"
p23450
tp23451
I1
s(Vinsert
p23452
I43
VSimpleType: SchemaObjectImpl
p23453
tp23454
I1
s(Vinsert
p23455
I42
VSimpleName: setTenantTablePattern
p23456
tp23457
I1
s(Vinsert
p23458
I42
VSimpleName: registrationBean
p23459
tp23460
I3
s(Vinsert
p23461
I45
VStringLiteral: "LATERAL VIEW "
p23462
tp23463
I1
s(Vinsert
p23464
I42
VSimpleName: getSqlList
p23465
tp23466
I5
s(Vinsert
p23467
I42
VSimpleName: executeCount
p23468
tp23469
I5
s(Vinsert
p23470
I42
VSimpleName: setConfig
p23471
tp23472
I1
s(Vinsert
p23473
I45
VStringLiteral: "\u005cn\u005ctREPAIR PARTITION p1"
p23474
tp23475
I1
s(Vinsert
p23476
I42
VSimpleName: isSlaveEnable
p23477
tp23478
I1
s(Vinsert
p23479
I40
VQualifiedName: x.not
p23480
tp23481
I4
s(Vinsert
p23482
I13
VCharacterLiteral: 'E'
p23483
tp23484
I1
s(Vinsert
p23485
I43
VSimpleType: SQLUniqueConstraint
p23486
tp23487
I2
s(Vinsert
p23488
I42
VSimpleName: getStorage
p23489
tp23490
I2
s(Vinsert
p23491
I45
VStringLiteral: "MATCHED"
p23492
tp23493
I2
s(Vinsert
p23494
I45
VStringLiteral: "\u005cnwhere id > 0;"
p23495
tp23496
I1
s(Vinsert
p23497
I42
VSimpleName: SQLArgument
p23498
tp23499
I2
s(Vinsert
p23500
I45
VStringLiteral: "WHERE s.time_id = t.time_id\u005cn"
p23501
tp23502
I1
s(Vinsert
p23503
I40
VQualifiedName: SQLBinaryOperator.Add
p23504
tp23505
I2
s(Vinsert
p23506
I42
VSimpleName: meta
p23507
tp23508
I4
s(Vinsert
p23509
I43
VSimpleType: T
p23510
tp23511
I5
s(Vinsert
p23512
I42
VSimpleName: createSynonym
p23513
tp23514
I2
s(Vinsert
p23515
I42
VSimpleName: createSQLStatementParser
p23516
tp23517
I23
s(Vinsert
p23518
I42
VSimpleName: second
p23519
tp23520
I1
s(Vinsert
p23521
I45
VStringLiteral: "  where asq.sequence_name = us.table_name"
p23522
tp23523
I2
s(Vinsert
p23524
I45
VStringLiteral: "StatementExecuteCount_0_1_Millis"
p23525
tp23526
I1
s(Vinsert
p23527
I42
VSimpleName: getRows
p23528
tp23529
I1
s(Vinsert
p23530
I45
VStringLiteral: "AUTO_INCREMENT"
p23531
tp23532
I1
s(Vinsert
p23533
I42
VSimpleName: toFormalString
p23534
tp23535
I1
s(Vinsert
p23536
I45
VStringLiteral: "CREATE SYNONYM offices \u005cn"
p23537
tp23538
I1
s(Vinsert
p23539
I42
VSimpleName: getWallStatMap
p23540
tp23541
I2
s(Vinsert
p23542
I38
VPrefixExpression: -
p23543
tp23544
I20
s(Vinsert
p23545
I42
VSimpleName: OdpsStatementParser
p23546
tp23547
I26
s(Vinsert
p23548
I42
VSimpleName: PoolableStatement
p23549
tp23550
I7
s(Vinsert
p23551
I45
VStringLiteral: "\u005cn)"
p23552
tp23553
I68
s(Vinsert
p23554
I42
VSimpleName: sql_2
p23555
tp23556
I1
s(Vinsert
p23557
I45
VStringLiteral: "BEGIN"
p23558
tp23559
I1
s(Vinsert
p23560
I45
VStringLiteral: "\u005ct`c_text` text COMMENT 'text',\u005cn"
p23561
tp23562
I3
s(Vinsert
p23563
I74
VParameterizedType: List<SQLHint>
p23564
tp23565
I2
s(Vinsert
p23566
I45
VStringLiteral: "support/monitor/resources"
p23567
tp23568
I1
s(Vinsert
p23569
I42
VSimpleName: getResolvedColumn
p23570
tp23571
I5
s(Vinsert
p23572
I42
VSimpleName: connectionErrorOccurred
p23573
tp23574
I1
s(Vinsert
p23575
I42
VSimpleName: initStackTrace
p23576
tp23577
I1
s(Vinsert
p23578
I42
VSimpleName: pgVisitor
p23579
tp23580
I2
s(Vinsert
p23581
I42
VSimpleName: DecrypterFactory
p23582
tp23583
I2
s(Vinsert
p23584
I45
VStringLiteral: "FROM (\u005cn"
p23585
tp23586
I1
s(Vinsert
p23587
I42
VSimpleName: JdbcStatementStat
p23588
tp23589
I1
s(Vinsert
p23590
I42
VSimpleName: mockResultSet
p23591
tp23592
I1
s(Vinsert
p23593
I40
VQualifiedName: Token.UNION
p23594
tp23595
I1
s(Vinsert
p23596
I45
VStringLiteral: "where name like 'admin%' "
p23597
tp23598
I1
s(Vinsert
p23599
I42
VSimpleName: mergeEqual
p23600
tp23601
I1
s(Vinsert
p23602
I42
VSimpleName: MySqlShowCharacterSetStatement
p23603
tp23604
I3
s(Vinsert
p23605
I42
VSimpleName: isMatched
p23606
tp23607
I2
s(Vinsert
p23608
I45
VStringLiteral: "\u005ctgcd NUMBER := integer_operations.greatest_common_divisor(numerator, denominator);\u005cn"
p23609
tp23610
I1
s(Vinsert
p23611
I42
VSimpleName: keep
p23612
tp23613
I5
s(Vinsert
p23614
I45
VStringLiteral: "\u005cn\u005ctpromo_id NUMBER(6)"
p23615
tp23616
I1
s(Vinsert
p23617
I43
VSimpleType: MysqlForeignKey
p23618
tp23619
I2
s(Vinsert
p23620
I42
VSimpleName: initWallProvider
p23621
tp23622
I8
s(Vinsert
p23623
I45
VStringLiteral: "\u005cn(8002, 'Juan', 'Fernandez', 'juanf@example.com', NULL"
p23624
tp23625
I2
s(Vinsert
p23626
I42
VSimpleName: Component
p23627
tp23628
I1
s(Vinsert
p23629
I42
VSimpleName: strings
p23630
tp23631
I7
s(Vinsert
p23632
I45
VStringLiteral: "SELECT /*+ parallel(5) */ COUNT(*)"
p23633
tp23634
I1
s(Vinsert
p23635
I42
VSimpleName: getValueExpr
p23636
tp23637
I2
s(Vinsert
p23638
I42
VSimpleName: getIsolation
p23639
tp23640
I1
s(Vinsert
p23641
I45
VStringLiteral: "\u005ct\u005ctRETURN r;\u005cn"
p23642
tp23643
I1
s(Vinsert
p23644
I45
VStringLiteral: "CREATE TABLE xxx\u005cn"
p23645
tp23646
I1
s(Vinsert
p23647
I45
VStringLiteral: ", not true"
p23648
tp23649
I1
s(Vinsert
p23650
I40
VQualifiedName: Token.INITRANS
p23651
tp23652
I2
s(Vinsert
p23653
I45
VStringLiteral: "connectionId"
p23654
tp23655
I1
s(Vinsert
p23656
I45
VStringLiteral: "\u005cnSELECT *"
p23657
tp23658
I1
s(Vinsert
p23659
I45
VStringLiteral: "update t set name = 'x' where id < 100 limit 10"
p23660
tp23661
I1
s(Vinsert
p23662
I42
VSimpleName: blackMergedList
p23663
tp23664
I1
s(Vinsert
p23665
I45
VStringLiteral: "\u005ct_, \u005cn"
p23666
tp23667
I1
s(Vinsert
p23668
I45
VStringLiteral: "\u005ctVIEW my_view3\u005cn"
p23669
tp23670
I1
s(Vinsert
p23671
I45
VStringLiteral: "</td></tr>"
p23672
tp23673
I1
s(Vinsert
p23674
I45
VStringLiteral: "SELECT "
p23675
tp23676
I1
s(Vinsert
p23677
I42
VSimpleName: SimpleDateFormat
p23678
tp23679
I6
s(Vinsert
p23680
I42
VSimpleName: columnNames
p23681
tp23682
I2
s(Vinsert
p23683
I42
VSimpleName: factory
p23684
tp23685
I5
s(Vinsert
p23686
I42
VSimpleName: SpringMethodStat
p23687
tp23688
I2
s(Vinsert
p23689
I42
VSimpleName: changed
p23690
tp23691
I2
s(Vinsert
p23692
I45
VStringLiteral: "\u005cn\u005cthire_date DATE,"
p23693
tp23694
I4
s(Vinsert
p23695
I42
VSimpleName: forStatement
p23696
tp23697
I1
s(Vinsert
p23698
I42
VSimpleName: osName
p23699
tp23700
I2
s(Vinsert
p23701
I42
VSimpleName: statContext
p23702
tp23703
I2
s(Vinsert
p23704
I42
VSimpleName: SQLDropViewStatement
p23705
tp23706
I3
s(Vinsert
p23707
I42
VSimpleName: JoinType
p23708
tp23709
I1
s(Vinsert
p23710
I83
VModifier: public
p23711
tp23712
I1036
s(Vinsert
p23713
I45
VStringLiteral: " DROP DEFAULT"
p23714
tp23715
I1
s(Vinsert
p23716
I43
VSimpleType: ProxyClient
p23717
tp23718
I1
s(Vinsert
p23719
I43
VSimpleType: MySqlBinlogStatement
p23720
tp23721
I1
s(Vinsert
p23722
I42
VSimpleName: oidIndex
p23723
tp23724
I1
s(Vinsert
p23725
I43
VSimpleType: OracleCommitStatement
p23726
tp23727
I4
s(Vinsert
p23728
I45
VStringLiteral: "from dual "
p23729
tp23730
I1
s(Vinsert
p23731
I45
VStringLiteral: " `Extent1`.`UpdateTime`, "
p23732
tp23733
I1
s(Vinsert
p23734
I42
VSimpleName: getCommentCount
p23735
tp23736
I1
s(Vinsert
p23737
I45
VStringLiteral: "druid.useUnfairLock"
p23738
tp23739
I1
s(Vinsert
p23740
I42
VSimpleName: beforeFirst
p23741
tp23742
I1
s(Vinsert
p23743
I42
VSimpleName: SQLTableElement
p23744
tp23745
I4
s(Vinsert
p23746
I42
VSimpleName: contextClassLoader
p23747
tp23748
I1
s(Vinsert
p23749
I42
VSimpleName: getParameter
p23750
tp23751
I5
s(Vinsert
p23752
I42
VSimpleName: setClientImpl
p23753
tp23754
I1
s(Vinsert
p23755
I42
VSimpleName: getActive
p23756
tp23757
I2
s(Vinsert
p23758
I45
VStringLiteral: "AS\u005cn"
p23759
tp23760
I22
s(Vinsert
p23761
I42
VSimpleName: executor
p23762
tp23763
I7
s(Vinsert
p23764
I42
VSimpleName: autoRegisterToGlobalTimer
p23765
tp23766
I2
s(Vinsert
p23767
I7
VAssignment: +=
p23768
tp23769
I8
s(Vinsert
p23770
I45
VStringLiteral: "PRIVILEGES"
p23771
tp23772
I1
s(Vinsert
p23773
I45
VStringLiteral: "stat,wall"
p23774
tp23775
I1
s(Vinsert
p23776
I42
VSimpleName: addrs
p23777
tp23778
I1
s(Vinsert
p23779
I45
VStringLiteral: "TINYINT"
p23780
tp23781
I1
s(Vinsert
p23782
I42
VSimpleName: test_column_comment
p23783
tp23784
I10
s(Vinsert
p23785
I42
VSimpleName: locate
p23786
tp23787
I2
s(Vinsert
p23788
I45
VStringLiteral: "DISABLE CONSTRAINT "
p23789
tp23790
I1
s(Vinsert
p23791
I42
VSimpleName: statValue
p23792
tp23793
I17
s(Vinsert
p23794
I42
VSimpleName: ProfileEntryKey
p23795
tp23796
I2
s(Vinsert
p23797
I43
VSimpleType: StackTraceElement
p23798
tp23799
I2
s(Vinsert
p23800
I42
VSimpleName: servletPath
p23801
tp23802
I1
s(Vinsert
p23803
I45
VStringLiteral: "\u005cn\u005ctCONSTRAINT pk_AO_E8B6CC_ISSUE_MAPPING_V2_ID PRIMARY KEY (ID)"
p23804
tp23805
I1
s(Vinsert
p23806
I42
VSimpleName: setRemoveAbandonedTimeout
p23807
tp23808
I2
s(Vinsert
p23809
I40
VQualifiedName: Isolation.RR
p23810
tp23811
I1
s(Vinsert
p23812
I42
VSimpleName: MAX_RECORD_SQL_COUNT
p23813
tp23814
I1
s(Vinsert
p23815
I45
VStringLiteral: "\u005cn\u005ctpromo_id NUMBER(6)  CONSTRAINT promo_id_u UNIQUE,"
p23816
tp23817
I1
s(Vinsert
p23818
I43
VSimpleType: PreparedStatementProxyImpl
p23819
tp23820
I7
s(Vinsert
p23821
I42
VSimpleName: HexBin
p23822
tp23823
I3
s(Vinsert
p23824
I45
VStringLiteral: "\u005cn\u005ct\u005ctFROM t"
p23825
tp23826
I2
s(Vinsert
p23827
I43
VSimpleType: Savepoint
p23828
tp23829
I1
s(Vinsert
p23830
I45
VStringLiteral: "when "
p23831
tp23832
I1
s(Vinsert
p23833
I42
VSimpleName: aValue
p23834
tp23835
I1
s(Vinsert
p23836
I42
VSimpleName: isForReadOnly
p23837
tp23838
I1
s(Vinsert
p23839
I42
VSimpleName: hasXor
p23840
tp23841
I1
s(Vinsert
p23842
I42
VSimpleName: isLocalTransaction
p23843
tp23844
I1
s(Vinsert
p23845
I42
VSimpleName: compareAndSet
p23846
tp23847
I2
s(Vinsert
p23848
I42
VSimpleName: getNestedTable
p23849
tp23850
I1
s(Vinsert
p23851
I45
VStringLiteral: "\u005ctTABLESPACE \u005c"ZEUS_IND\u005c"\u005cn"
p23852
tp23853
I1
s(Vinsert
p23854
I40
VQualifiedName: Token.WHEN
p23855
tp23856
I2
s(Vinsert
p23857
I42
VSimpleName: checkValid
p23858
tp23859
I21
s(Vinsert
p23860
I42
VSimpleName: psql1
p23861
tp23862
I1
s(Vinsert
p23863
I5
VArrayType: char[]
p23864
tp23865
I2
s(Vinsert
p23866
I43
VSimpleType: OptionParseException
p23867
tp23868
I1
s(Vinsert
p23869
I45
VStringLiteral: "WHERE b.cp_code = ?\u005cn"
p23870
tp23871
I1
s(Vinsert
p23872
I43
VSimpleType: FactoryBean
p23873
tp23874
I3
s(Vinsert
p23875
I42
VSimpleName: parseCreateTable
p23876
tp23877
I48
s(Vinsert
p23878
I43
VSimpleType: MySqlAlterTableChangeColumn
p23879
tp23880
I1
s(Vinsert
p23881
I42
VSimpleName: setDefaultReadOnly
p23882
tp23883
I2
s(Vinsert
p23884
I42
VSimpleName: isDirectory
p23885
tp23886
I1
s(Vinsert
p23887
I42
VSimpleName: driverClass
p23888
tp23889
I15
s(Vinsert
p23890
I45
VStringLiteral: "select distinct id from t order by id"
p23891
tp23892
I1
s(Vinsert
p23893
I42
VSimpleName: spStatement
p23894
tp23895
I1
s(Vinsert
p23896
I45
VStringLiteral: "CREATE SYNONYM"
p23897
tp23898
I1
s(Vinsert
p23899
I42
VSimpleName: permitSchemas
p23900
tp23901
I4
s(Vinsert
p23902
I42
VSimpleName: setKeyOrIndex
p23903
tp23904
I1
s(Vinsert
p23905
I42
VSimpleName: filePath
p23906
tp23907
I1
s(Vinsert
p23908
I43
VSimpleType: ProfileEntryStatValue
p23909
tp23910
I2
s(Vinsert
p23911
I42
VSimpleName: setCheckSelectAlwayTrueCondition
p23912
tp23913
I1
s(Vinsert
p23914
I42
VSimpleName: full
p23915
tp23916
I1
s(Vinsert
p23917
I42
VSimpleName: getDeclaringClass
p23918
tp23919
I1
s(Vinsert
p23920
I45
VStringLiteral: "com.alibaba.druid.support.logging.SLF4JImpl"
p23921
tp23922
I1
s(Vinsert
p23923
I42
VSimpleName: statementLoggerName
p23924
tp23925
I3
s(Vinsert
p23926
I45
VStringLiteral: "\u005ctSUPPLEMENTAL LOG GROUP \u005c"GGS_15754\u005c" (\u005c"GROUP_NAME\u005c", \u005c"GROUP_KEY\u005c", \u005c"LOG_CMPLT_CSN\u005c", \u005c"LOG_CMPLT_XIDS_SEQ\u005c") ALWAYS,\u005cn"
p23927
tp23928
I1
s(Vinsert
p23929
I34
VNumberLiteral: 6
p23930
tp23931
I5
s(Vinsert
p23932
I42
VSimpleName: setUrl
p23933
tp23934
I37
s(Vinsert
p23935
I42
VSimpleName: types
p23936
tp23937
I3
s(Vinsert
p23938
I42
VSimpleName: OracleLexer
p23939
tp23940
I2
s(Vinsert
p23941
I43
VSimpleType: OracleMultiInsertStatement.InsertIntoClause
p23942
tp23943
I2
s(Vinsert
p23944
I42
VSimpleName: SQLPartitionByHash
p23945
tp23946
I2
s(Vinsert
p23947
I42
VSimpleName: socket
p23948
tp23949
I1
s(Vinsert
p23950
I42
VSimpleName: connectByRoot
p23951
tp23952
I2
s(Vinsert
p23953
I43
VSimpleType: PushService
p23954
tp23955
I1
s(Vinsert
p23956
I42
VSimpleName: setDefaultRowPretch
p23957
tp23958
I1
s(Vinsert
p23959
I42
VSimpleName: dataSources
p23960
tp23961
I14
s(Vinsert
p23962
I42
VSimpleName: setResultSetType
p23963
tp23964
I2
s(Vinsert
p23965
I42
VSimpleName: createResolveVisitor
p23966
tp23967
I1
s(Vinsert
p23968
I45
VStringLiteral: " character set "
p23969
tp23970
I1
s(Vinsert
p23971
I42
VSimpleName: numberCount
p23972
tp23973
I2
s(Vinsert
p23974
I42
VSimpleName: jsonStrz
p23975
tp23976
I1
s(Vinsert
p23977
I45
VStringLiteral: "\u005cn\u005ct\u005ct\u005ct\u005ctUNION"
p23978
tp23979
I1
s(Vinsert
p23980
I42
VSimpleName: SQLInsertStatement
p23981
tp23982
I32
s(Vinsert
p23983
I45
VStringLiteral: "all"
p23984
tp23985
I1
s(Vinsert
p23986
I45
VStringLiteral: "REPLACE"
p23987
tp23988
I2
s(Vinsert
p23989
I45
VStringLiteral: "DROP DATABASE "
p23990
tp23991
I1
s(Vinsert
p23992
I42
VSimpleName: originalTable
p23993
tp23994
I3
s(Vinsert
p23995
I42
VSimpleName: parseInsert
p23996
tp23997
I2
s(Vinsert
p23998
I42
VSimpleName: timestamp
p23999
tp24000
I1
s(Vinsert
p24001
I45
VStringLiteral: "| c_datetime   | datetime     | NO   |     | 0000-00-00 00:00:00 |                             |\u005cn"
p24002
tp24003
I1
s(Vinsert
p24004
I45
VStringLiteral: "\u005cn\u005ctcity VARCHAR2(30),"
p24005
tp24006
I4
s(Vinsert
p24007
I42
VSimpleName: contextInitialized
p24008
tp24009
I1
s(Vinsert
p24010
I42
VSimpleName: c6
p24011
tp24012
I1
s(Vinsert
p24013
I45
VStringLiteral: "\u005ct, c.certification_2, c.contact_manufacturing, c.years_oem, v.stage AS create_type, c.video_path\u005cn"
p24014
tp24015
I1
s(Vinsert
p24016
I42
VSimpleName: connectCount
p24017
tp24018
I1
s(Vinsert
p24019
I42
VSimpleName: isIntited
p24020
tp24021
I1
s(Vinsert
p24022
I74
VParameterizedType: Map<String,Object>
p24023
tp24024
I26
s(Vinsert
p24025
I45
VStringLiteral: "relationShip : "
p24026
tp24027
I1
s(Vinsert
p24028
I42
VSimpleName: j
p24029
tp24030
I10
s(Vinsert
p24031
I42
VSimpleName: cacheValue
p24032
tp24033
I3
s(Vinsert
p24034
I42
VSimpleName: class_MysqlIO
p24035
tp24036
I2
s(Vinsert
p24037
I42
VSimpleName: parameterIndex
p24038
tp24039
I10
s(Vinsert
p24040
I42
VSimpleName: type
p24041
tp24042
I18
s(Vinsert
p24043
I42
VSimpleName: methodExpr
p24044
tp24045
I4
s(Vinsert
p24046
I42
VSimpleName: blackSqlMaxSize
p24047
tp24048
I1
s(Vinsert
p24049
I42
VSimpleName: aggregateExpr
p24050
tp24051
I5
s(Vinsert
p24052
I42
VSimpleName: printPostSemi
p24053
tp24054
I2
s(Vinsert
p24055
I45
VStringLiteral: "ccbuauto"
p24056
tp24057
I1
s(Vinsert
p24058
I45
VStringLiteral: "\u005ctFOR EACH ROW\u005cn"
p24059
tp24060
I5
s(Vinsert
p24061
I42
VSimpleName: histogram_1000000_more_Updater
p24062
tp24063
I1
s(Vinsert
p24064
I42
VSimpleName: wallUpdateCheckItems
p24065
tp24066
I1
s(Vinsert
p24067
I43
VSimpleType: File
p24068
tp24069
I4
s(Vinsert
p24070
I45
VStringLiteral: "UNSIGNED"
p24071
tp24072
I1
s(Vinsert
p24073
I42
VSimpleName: setEnable
p24074
tp24075
I4
s(Vinsert
p24076
I42
VSimpleName: basic
p24077
tp24078
I1
s(Vinsert
p24079
I42
VSimpleName: getErrorCode
p24080
tp24081
I2
s(Vinsert
p24082
I42
VSimpleName: loadExtend
p24083
tp24084
I2
s(Vinsert
p24085
I45
VStringLiteral: ".+\u005c\u005c[[0-9]+\u005c\u005c]"
p24086
tp24087
I1
s(Vinsert
p24088
I42
VSimpleName: getWallProvider
p24089
tp24090
I2
s(Vinsert
p24091
I42
VSimpleName: mergeCount
p24092
tp24093
I2
s(Vinsert
p24094
I42
VSimpleName: MySqlForeignKey
p24095
tp24096
I3
s(Vinsert
p24097
I45
VStringLiteral: "where user0_.login_name=? limit ?"
p24098
tp24099
I1
s(Vinsert
p24100
I42
VSimpleName: newConfigBuilder
p24101
tp24102
I1
s(Vinsert
p24103
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION ch_i,"
p24104
tp24105
I2
s(Vinsert
p24106
I45
VStringLiteral: "order siblings by "
p24107
tp24108
I1
s(Vinsert
p24109
I43
VSimpleType: SQLAlterCharacter
p24110
tp24111
I1
s(Vinsert
p24112
I45
VStringLiteral: "select sum(if(a > 0, 1, 0)) from t1"
p24113
tp24114
I1
s(Vinsert
p24115
I45
VStringLiteral: "\u005cn\u005ctmanager_id NUMBER(4),"
p24116
tp24117
I6
s(Vinsert
p24118
I42
VSimpleName: SpringApplication
p24119
tp24120
I1
s(Vinsert
p24121
I43
VSimpleType: SQLDataType
p24122
tp24123
I21
s(Vinsert
p24124
I42
VSimpleName: setColumnName
p24125
tp24126
I2
s(Vinsert
p24127
I45
VStringLiteral: "CHARACTER SET"
p24128
tp24129
I2
s(Vinsert
p24130
I60
VVariableDeclarationStatement
p24131
tp24132
I3059
s(Vinsert
p24133
I42
VSimpleName: fetchRowCount
p24134
tp24135
I4
s(Vinsert
p24136
I45
VStringLiteral: "CASCADED"
p24137
tp24138
I1
s(Vinsert
p24139
I42
VSimpleName: secondsFraction
p24140
tp24141
I2
s(Vinsert
p24142
I42
VSimpleName: entryValue
p24143
tp24144
I1
s(Vinsert
p24145
I45
VStringLiteral: "DOUBLE"
p24146
tp24147
I1
s(Vinsert
p24148
I42
VSimpleName: dataSourceStats
p24149
tp24150
I2
s(Vinsert
p24151
I45
VStringLiteral: "f1 like '%'"
p24152
tp24153
I1
s(Vinsert
p24154
I42
VSimpleName: getResource
p24155
tp24156
I2
s(Vinsert
p24157
I42
VSimpleName: test_delete
p24158
tp24159
I5
s(Vinsert
p24160
I40
VQualifiedName: com.alibaba.druid.sql.dialect.db2.parser.DB2StatementParser
p24161
tp24162
I1
s(Vinsert
p24163
I45
VStringLiteral: "? * ?"
p24164
tp24165
I1
s(Vinsert
p24166
I42
VSimpleName: connectionsPanel
p24167
tp24168
I2
s(Vinsert
p24169
I42
VSimpleName: errorCount
p24170
tp24171
I3
s(Vinsert
p24172
I42
VSimpleName: SQLExplainStatement
p24173
tp24174
I1
s(Vinsert
p24175
I42
VSimpleName: clearWallTopStatementContext
p24176
tp24177
I7
s(Vinsert
p24178
I42
VSimpleName: PGParameter
p24179
tp24180
I2
s(Vinsert
p24181
I42
VSimpleName: Set
p24182
tp24183
I7
s(Vinsert
p24184
I45
VStringLiteral: "FULLTEXT"
p24185
tp24186
I2
s(Vinsert
p24187
I22
VFieldAccess
p24188
tp24189
I488
s(Vinsert
p24190
I42
VSimpleName: scheduler
p24191
tp24192
I4
s(Vinsert
p24193
I42
VSimpleName: SQLCurrentOfCursorExpr
p24194
tp24195
I2
s(Vinsert
p24196
I42
VSimpleName: MySqlWallTest2
p24197
tp24198
I1
s(Vinsert
p24199
I45
VStringLiteral: "CREATE VIEW emp_sal (\u005cn"
p24200
tp24201
I1
s(Vinsert
p24202
I45
VStringLiteral: "OSAndroid42Count"
p24203
tp24204
I1
s(Vinsert
p24205
I42
VSimpleName: test_like
p24206
tp24207
I1
s(Vinsert
p24208
I42
VSimpleName: getDisableError
p24209
tp24210
I1
s(Vinsert
p24211
I45
VStringLiteral: "\u005cn -- comment_0"
p24212
tp24213
I1
s(Vinsert
p24214
I45
VStringLiteral: "date '"
p24215
tp24216
I1
s(Vinsert
p24217
I45
VStringLiteral: "\u005cn\u005ct\u005ct\u005ct\u005ctSELECT 50, 77"
p24218
tp24219
I1
s(Vinsert
p24220
I45
VStringLiteral: "TestOnReturn"
p24221
tp24222
I1
s(Vinsert
p24223
I45
VStringLiteral: "\u005ct\u005ctSELECT g.id, g.link, g.data, sg.depth + 1\u005cn"
p24224
tp24225
I1
s(Vinsert
p24226
I42
VSimpleName: checkList
p24227
tp24228
I1
s(Vinsert
p24229
I43
VSimpleType: NullExceptionSorter
p24230
tp24231
I1
s(Vinsert
p24232
I42
VSimpleName: OracleExprParser
p24233
tp24234
I40
s(Vinsert
p24235
I42
VSimpleName: replaceCount
p24236
tp24237
I1
s(Vinsert
p24238
I42
VSimpleName: SQLOrderingSpecification
p24239
tp24240
I2
s(Vinsert
p24241
I42
VSimpleName: denyStat
p24242
tp24243
I1
s(Vinsert
p24244
I43
VSimpleType: SQLDropViewStatement
p24245
tp24246
I3
s(Vinsert
p24247
I43
VSimpleType: DataSourceData
p24248
tp24249
I1
s(Vinsert
p24250
I42
VSimpleName: SQLAlterTableDropPartition
p24251
tp24252
I1
s(Vinsert
p24253
I42
VSimpleName: String
p24254
tp24255
I897
s(Vinsert
p24256
I7
VAssignment: ^=
p24257
tp24258
I2
s(Vinsert
p24259
I40
VQualifiedName: Token.IMMEDIATE
p24260
tp24261
I1
s(Vinsert
p24262
I42
VSimpleName: partition
p24263
tp24264
I55
s(Vinsert
p24265
I43
VSimpleType: SQLOver
p24266
tp24267
I3
s(Vinsert
p24268
I42
VSimpleName: HBQLStatementParser
p24269
tp24270
I1
s(Vinsert
p24271
I45
VStringLiteral: "\u005ctSTORAGE (\u005cn"
p24272
tp24273
I7
s(Vinsert
p24274
I42
VSimpleName: connecttimeMillis
p24275
tp24276
I1
s(Vinsert
p24277
I42
VSimpleName: parser3
p24278
tp24279
I2
s(Vinsert
p24280
I42
VSimpleName: transformOracleToPostgresql
p24281
tp24282
I5
s(Vinsert
p24283
I42
VSimpleName: c
p24284
tp24285
I16
s(Vinsert
p24286
I42
VSimpleName: Method
p24287
tp24288
I27
s(Vinsert
p24289
I43
VSimpleType: SQLCastExpr
p24290
tp24291
I5
s(Vinsert
p24292
I42
VSimpleName: PARAM_NAME_USERNAME
p24293
tp24294
I1
s(Vinsert
p24295
I42
VSimpleName: maxWait
p24296
tp24297
I1
s(Vinsert
p24298
I42
VSimpleName: parseSelectOrderByItem
p24299
tp24300
I2
s(Vinsert
p24301
I45
VStringLiteral: " LIKE "
p24302
tp24303
I3
s(Vinsert
p24304
I42
VSimpleName: equalsIgnoreCase
p24305
tp24306
I38
s(Vinsert
p24307
I43
VSimpleType: WallConfig
p24308
tp24309
I58
s(Vinsert
p24310
I42
VSimpleName: getMaxValue
p24311
tp24312
I1
s(Vinsert
p24313
I42
VSimpleName: getFloat
p24314
tp24315
I1
s(Vinsert
p24316
I42
VSimpleName: parseStatements
p24317
tp24318
I96
s(Vinsert
p24319
I45
VStringLiteral: " SORT"
p24320
tp24321
I1
s(Vinsert
p24322
I42
VSimpleName: cidr
p24323
tp24324
I2
s(Vinsert
p24325
I45
VStringLiteral: "\u005ct\u005ctPCTUSED 40\u005cn"
p24326
tp24327
I2
s(Vinsert
p24328
I42
VSimpleName: joinType
p24329
tp24330
I7
s(Vinsert
p24331
I42
VSimpleName: mergedList
p24332
tp24333
I3
s(Vinsert
p24334
I42
VSimpleName: handleException
p24335
tp24336
I3
s(Vinsert
p24337
I45
VStringLiteral: "GROUP BY t.calendar_year, p.prod_id;"
p24338
tp24339
I1
s(Vinsert
p24340
I42
VSimpleName: indexType
p24341
tp24342
I3
s(Vinsert
p24343
I45
VStringLiteral: "\u005ctc_time time,\u005cn"
p24344
tp24345
I2
s(Vinsert
p24346
I45
VStringLiteral: "TRAILING"
p24347
tp24348
I1
s(Vinsert
p24349
I40
VQualifiedName: ConfigFilter.CONFIG_FILE
p24350
tp24351
I2
s(Vinsert
p24352
I42
VSimpleName: FormatOption
p24353
tp24354
I4
s(Vinsert
p24355
I40
VQualifiedName: x.denseRank
p24356
tp24357
I1
s(Vinsert
p24358
I42
VSimpleName: setSelectHavingAlwayTrueCheck
p24359
tp24360
I1
s(Vinsert
p24361
I42
VSimpleName: Condition
p24362
tp24363
I1
s(Vinsert
p24364
I42
VSimpleName: murmurhash2_64
p24365
tp24366
I2
s(Vinsert
p24367
I45
VStringLiteral: "\u005ct\u005ctAND b.state = 1\u005cn"
p24368
tp24369
I1
s(Vinsert
p24370
I42
VSimpleName: TableStat
p24371
tp24372
I10
s(Vinsert
p24373
I42
VSimpleName: ResultSet
p24374
tp24375
I35
s(Vinsert
p24376
I42
VSimpleName: mergeSql
p24377
tp24378
I2
s(Vinsert
p24379
I45
VStringLiteral: "CLUSTER \u005c"SEARCHTEST\u005c".\u005c"CLUSTER_PRODUCT_COMPANY_ID\u005c" (\u005c"COMPANY_ID\u005c")"
p24380
tp24381
I1
s(Vinsert
p24382
I42
VSimpleName: physical_connection_connect
p24383
tp24384
I1
s(Vinsert
p24385
I34
VNumberLiteral: 103
p24386
tp24387
I2
s(Vinsert
p24388
I42
VSimpleName: isValue
p24389
tp24390
I1
s(Vinsert
p24391
I43
VSimpleType: URLConnectionConfigLoader
p24392
tp24393
I2
s(Vinsert
p24394
I43
VSimpleType: ObjectName
p24395
tp24396
I13
s(Vinsert
p24397
I42
VSimpleName: outputProperty
p24398
tp24399
I4
s(Vinsert
p24400
I45
VStringLiteral: "\u005ctINSERT INTO hr_structure_temp\u005cn"
p24401
tp24402
I1
s(Vinsert
p24403
I42
VSimpleName: skipComment
p24404
tp24405
I1
s(Vinsert
p24406
I45
VStringLiteral: "LENGTH"
p24407
tp24408
I1
s(Vinsert
p24409
I40
VQualifiedName: SQLCreateViewStatement.Column
p24410
tp24411
I1
s(Vinsert
p24412
I42
VSimpleName: KeyFactory
p24413
tp24414
I2
s(Vinsert
p24415
I43
VSimpleType: OracleInsertParser
p24416
tp24417
I1
s(Vinsert
p24418
I43
VSimpleType: OracleSchemaStatVisitor
p24419
tp24420
I404
s(Vinsert
p24421
I43
VSimpleType: ResultSet
p24422
tp24423
I32
s(Vinsert
p24424
I42
VSimpleName: setExpr
p24425
tp24426
I48
s(Vinsert
p24427
I42
VSimpleName: isMultiStatementAllow
p24428
tp24429
I1
s(Vinsert
p24430
I42
VSimpleName: invalidateGlobalIndexes
p24431
tp24432
I2
s(Vinsert
p24433
I43
VSimpleType: MySqlShowErrorsStatement
p24434
tp24435
I1
s(Vinsert
p24436
I42
VSimpleName: ConcurrentMap
p24437
tp24438
I4
s(Vinsert
p24439
I42
VSimpleName: isSequence
p24440
tp24441
I1
s(Vinsert
p24442
I45
VStringLiteral: " AS ("
p24443
tp24444
I2
s(Vinsert
p24445
I45
VStringLiteral: "Null CompositeData"
p24446
tp24447
I1
s(Vinsert
p24448
I42
VSimpleName: getLabel
p24449
tp24450
I3
s(Vinsert
p24451
I42
VSimpleName: setSqlStat
p24452
tp24453
I1
s(Vinsert
p24454
I45
VStringLiteral: "WHERE i.contract_header_id = ?"
p24455
tp24456
I1
s(Vinsert
p24457
I42
VSimpleName: afterConnectionClosed
p24458
tp24459
I2
s(Vinsert
p24460
I45
VStringLiteral: "TABLESPACE \u005c"TBS_JWGZPT\u005c"\u005cn"
p24461
tp24462
I2
s(Vinsert
p24463
I42
VSimpleName: pool
p24464
tp24465
I3
s(Vinsert
p24466
I42
VSimpleName: returnStatus
p24467
tp24468
I3
s(Vinsert
p24469
I42
VSimpleName: Notification
p24470
tp24471
I2
s(Vinsert
p24472
I42
VSimpleName: url
p24473
tp24474
I29
s(Vinsert
p24475
I42
VSimpleName: test_httpServer
p24476
tp24477
I2
s(Vinsert
p24478
I42
VSimpleName: getTablespace
p24479
tp24480
I1
s(Vinsert
p24481
I42
VSimpleName: removeEldestEntry
p24482
tp24483
I1
s(Vinsert
p24484
I42
VSimpleName: server
p24485
tp24486
I7
s(Vinsert
p24487
I42
VSimpleName: getResultSetMetaDataRaw
p24488
tp24489
I8
s(Vinsert
p24490
I74
VParameterizedType: IdentityHashMap<Object,ObjectName>
p24491
tp24492
I1
s(Vinsert
p24493
I42
VSimpleName: countExpr
p24494
tp24495
I1
s(Vinsert
p24496
I42
VSimpleName: parenFlag
p24497
tp24498
I1
s(Vinsert
p24499
I45
VStringLiteral: "\u005ct\u005ct\u005ct\u005ctSELECT ROWNUM AS ITEM, COLUMN_VALUE AS STR\u005cn"
p24500
tp24501
I1
s(Vinsert
p24502
I42
VSimpleName: integerValue
p24503
tp24504
I6
s(Vinsert
p24505
I42
VSimpleName: histogram_1000_10000
p24506
tp24507
I1
s(Vinsert
p24508
I45
VStringLiteral: "REMOVE PARTITIONING"
p24509
tp24510
I1
s(Vinsert
p24511
I42
VSimpleName: annotation
p24512
tp24513
I2
s(Vinsert
p24514
I45
VStringLiteral: "CALL \u005c"test.redisson.h2cluster.trigger.ClusterTrigger\u005c"()"
p24515
tp24516
I1
s(Vinsert
p24517
I34
VNumberLiteral: 24
p24518
tp24519
I1
s(Vinsert
p24520
I42
VSimpleName: queryBlock
p24521
tp24522
I82
s(Vinsert
p24523
I45
VStringLiteral: "t_like_count_0057"
p24524
tp24525
I1
s(Vinsert
p24526
I43
VSimpleType: OracleUnique
p24527
tp24528
I1
s(Vinsert
p24529
I42
VSimpleName: getDupCloseCount
p24530
tp24531
I1
s(Vinsert
p24532
I42
VSimpleName: orderByExpr
p24533
tp24534
I2
s(Vinsert
p24535
I42
VSimpleName: setMergeSql
p24536
tp24537
I2
s(Vinsert
p24538
I42
VSimpleName: setFirst
p24539
tp24540
I2
s(Vinsert
p24541
I45
VStringLiteral: "insert into table a select * from b limit 1"
p24542
tp24543
I1
s(Vinsert
p24544
I42
VSimpleName: objects
p24545
tp24546
I2
s(Vinsert
p24547
I42
VSimpleName: setTargetAffectRow
p24548
tp24549
I1
s(Vinsert
p24550
I42
VSimpleName: DriverManager
p24551
tp24552
I7
s(Vinsert
p24553
I42
VSimpleName: EvalMethodNowTest
p24554
tp24555
I1
s(Vinsert
p24556
I43
VSimpleType: SQLNullExpr
p24557
tp24558
I11
s(Vinsert
p24559
I42
VSimpleName: setPublicKeyFile
p24560
tp24561
I1
s(Vinsert
p24562
I42
VSimpleName: savepointIdSeed
p24563
tp24564
I1
s(Vinsert
p24565
I45
VStringLiteral: "use huaianapp"
p24566
tp24567
I1
s(Vinsert
p24568
I42
VSimpleName: OracleUtils
p24569
tp24570
I3
s(Vinsert
p24571
I42
VSimpleName: decimalA
p24572
tp24573
I1
s(Vinsert
p24574
I42
VSimpleName: x
p24575
tp24576
I1185
s(Vinsert
p24577
I42
VSimpleName: contextPath
p24578
tp24579
I1
s(Vinsert
p24580
I42
VSimpleName: setRemoved
p24581
tp24582
I2
s(Vinsert
p24583
I42
VSimpleName: StringBuilder
p24584
tp24585
I63
s(Vinsert
p24586
I45
VStringLiteral: "select secods:ip_region('192.168.1.1', 'city') from dual"
p24587
tp24588
I1
s(Vinsert
p24589
I42
VSimpleName: assignItem
p24590
tp24591
I2
s(Vinsert
p24592
I42
VSimpleName: getFamily
p24593
tp24594
I2
s(Vinsert
p24595
I45
VStringLiteral: "ExceptionSorterClassName"
p24596
tp24597
I1
s(Vinsert
p24598
I43
VSimpleType: Lock
p24599
tp24600
I4
s(Vinsert
p24601
I45
VStringLiteral: " WITH READ ONLY"
p24602
tp24603
I1
s(Vinsert
p24604
I45
VStringLiteral: "\u005ctUNIQUE `uk_a` (`c_tinyint`),\u005cn"
p24605
tp24606
I1
s(Vinsert
p24607
I42
VSimpleName: setMaxValue
p24608
tp24609
I1
s(Vinsert
p24610
I42
VSimpleName: parseArray
p24611
tp24612
I1
s(Vinsert
p24613
I45
VStringLiteral: "NOCOMPRESS\u005cn"
p24614
tp24615
I8
s(Vinsert
p24616
I42
VSimpleName: getConnectionErrorRetryAttempts
p24617
tp24618
I1
s(Vinsert
p24619
I45
VStringLiteral: "EffectedRowCount"
p24620
tp24621
I1
s(Vinsert
p24622
I42
VSimpleName: multiDataSourceConnection
p24623
tp24624
I1
s(Vinsert
p24625
I42
VSimpleName: ranges
p24626
tp24627
I1
s(Vinsert
p24628
I45
VStringLiteral: " where  v.u_id in (select id from U where wx_b = 1)\u005cn"
p24629
tp24630
I1
s(Vinsert
p24631
I42
VSimpleName: getCursorName
p24632
tp24633
I5
s(Vinsert
p24634
I45
VStringLiteral: "\u005ctc_varchar varchar(10),\u005cn"
p24635
tp24636
I2
s(Vinsert
p24637
I45
VStringLiteral: " milliseconds)"
p24638
tp24639
I1
s(Vinsert
p24640
I43
VSimpleType: SecretKeySpec
p24641
tp24642
I2
s(Vinsert
p24643
I42
VSimpleName: CompositeData
p24644
tp24645
I5
s(Vinsert
p24646
I42
VSimpleName: getExecuteErrorCount
p24647
tp24648
I1
s(Vinsert
p24649
I42
VSimpleName: setClause
p24650
tp24651
I1
s(Vinsert
p24652
I42
VSimpleName: CheckOption
p24653
tp24654
I2
s(Vinsert
p24655
I40
VQualifiedName: Token.LITERAL_INT
p24656
tp24657
I3
s(Vinsert
p24658
I74
VParameterizedType: ArrayList<SQLStatement>
p24659
tp24660
I2
s(Vinsert
p24661
I45
VStringLiteral: "phyTimeoutMillis"
p24662
tp24663
I1
s(Vinsert
p24664
I45
VStringLiteral: "SHOW INDEX FROM tblname"
p24665
tp24666
I1
s(Vinsert
p24667
I45
VStringLiteral: "SELECT to_char(CreateDate || ' ' || CAST(HourArgment AS VARCHAR) || ':00:00'::TIMESTAMP, 'YYYY-MM-DD HH24') AS \u005c"intoTime \u005c"\u005cn"
p24668
tp24669
I1
s(Vinsert
p24670
I42
VSimpleName: getForeignDataWrapper
p24671
tp24672
I1
s(Vinsert
p24673
I40
VQualifiedName: com.alibaba.druid.sql.ast.expr.SQLHexExpr
p24674
tp24675
I2
s(Vinsert
p24676
I42
VSimpleName: OracleInsertStatement
p24677
tp24678
I8
s(Vinsert
p24679
I42
VSimpleName: getAlterCount
p24680
tp24681
I1
s(Vinsert
p24682
I45
VStringLiteral: " rely"
p24683
tp24684
I1
s(Vinsert
p24685
I43
VSimpleType: Integer
p24686
tp24687
I22
s(Vinsert
p24688
I42
VSimpleName: setDebug
p24689
tp24690
I1
s(Vinsert
p24691
I45
VStringLiteral: "STR_TO_DATE"
p24692
tp24693
I2
s(Vinsert
p24694
I42
VSimpleName: passwordCallback
p24695
tp24696
I1
s(Vinsert
p24697
I42
VSimpleName: limit
p24698
tp24699
I58
s(Vinsert
p24700
I45
VStringLiteral: "TIMESTAMP"
p24701
tp24702
I1
s(Vinsert
p24703
I42
VSimpleName: caseStmt
p24704
tp24705
I1
s(Vinsert
p24706
I42
VSimpleName: setParameters
p24707
tp24708
I3
s(Vinsert
p24709
I42
VSimpleName: prime
p24710
tp24711
I18
s(Vinsert
p24712
I42
VSimpleName: poolableConn
p24713
tp24714
I1
s(Vinsert
p24715
I45
VStringLiteral: "left join cs_coln coln on loan.loan_no = coln.loan_no\u005cn"
p24716
tp24717
I1
s(Vinsert
p24718
I45
VStringLiteral: "FROM times t, products p, sales s\u005cn"
p24719
tp24720
I1
s(Vinsert
p24721
I42
VSimpleName: getFieldType
p24722
tp24723
I3
s(Vinsert
p24724
I42
VSimpleName: tableNames
p24725
tp24726
I3
s(Vinsert
p24727
I43
VSimpleType: SQLSelectStatement
p24728
tp24729
I71
s(Vinsert
p24730
I42
VSimpleName: lastCreateErrorTimeMillis
p24731
tp24732
I1
s(Vinsert
p24733
I42
VSimpleName: StringUtils
p24734
tp24735
I8
s(Vinsert
p24736
I42
VSimpleName: counter
p24737
tp24738
I2
s(Vinsert
p24739
I42
VSimpleName: MySqlDropTableStatement
p24740
tp24741
I1
s(Vinsert
p24742
I45
VStringLiteral: "\u005ct\u005ctAND scanned = 'YES'\u005cn"
p24743
tp24744
I1
s(Vinsert
p24745
I45
VStringLiteral: "select * from t where ds='20160303' and hour in ('18') "
p24746
tp24747
I1
s(Vinsert
p24748
I42
VSimpleName: firstValue
p24749
tp24750
I1
s(Vinsert
p24751
I42
VSimpleName: getJdbcRollbackCount
p24752
tp24753
I1
s(Vinsert
p24754
I42
VSimpleName: testORACLE
p24755
tp24756
I1
s(Vinsert
p24757
I45
VStringLiteral: "insert overwrite table ttt partition (ds='20150710',hh='07') select tt_split(content, 60) as (f0, f1, f2, f3) from xxx;"
p24758
tp24759
I1
s(Vinsert
p24760
I42
VSimpleName: configLoadPeriodMillis
p24761
tp24762
I1
s(Vinsert
p24763
I43
VSimpleType: InstantiationException
p24764
tp24765
I1
s(Vinsert
p24766
I45
VStringLiteral: "WHERE t1.add_date = '${date_minus_1}'\u005cn"
p24767
tp24768
I1
s(Vinsert
p24769
I45
VStringLiteral: "FROM invoice\u005cn"
p24770
tp24771
I1
s(Vinsert
p24772
I42
VSimpleName: denyCount
p24773
tp24774
I2
s(Vinsert
p24775
I42
VSimpleName: Select
p24776
tp24777
I1
s(Vinsert
p24778
I45
VStringLiteral: "pyson"
p24779
tp24780
I2
s(Vinsert
p24781
I45
VStringLiteral: "TRUE"
p24782
tp24783
I1
s(Vinsert
p24784
I43
VSimpleType: PGASTVisitor
p24785
tp24786
I23
s(Vinsert
p24787
I42
VSimpleName: isSlaveWritable
p24788
tp24789
I1
s(Vinsert
p24790
I43
VSimpleType: SQLObject
p24791
tp24792
I76
s(Vinsert
p24793
I42
VSimpleName: SQLAlterTableAlterColumn
p24794
tp24795
I4
s(Vinsert
p24796
I42
VSimpleName: number
p24797
tp24798
I17
s(Vinsert
p24799
I40
VQualifiedName: holder.dataSource
p24800
tp24801
I1
s(Vinsert
p24802
I45
VStringLiteral: "\u005ctsql_stmt := 'UPDATE emp SET sal = 2000 WHERE empno = :1\u005cn"
p24803
tp24804
I1
s(Vinsert
p24805
I45
VStringLiteral: "select * from T where fid = ?"
p24806
tp24807
I1
s(Vinsert
p24808
I42
VSimpleName: compactValues
p24809
tp24810
I3
s(Vinsert
p24811
I36
VParenthesizedExpression
p24812
tp24813
I242
s(Vinsert
p24814
I42
VSimpleName: test_error_10
p24815
tp24816
I1
s(Vinsert
p24817
I42
VSimpleName: setDefaultExpr
p24818
tp24819
I2
s(Vinsert
p24820
I42
VSimpleName: commentHandler
p24821
tp24822
I8
s(Vinsert
p24823
I42
VSimpleName: setExceptionSoter
p24824
tp24825
I1
s(Vinsert
p24826
I42
VSimpleName: resultMetaData
p24827
tp24828
I3
s(Vinsert
p24829
I42
VSimpleName: SQLSelectOrderByItem
p24830
tp24831
I27
s(Vinsert
p24832
I42
VSimpleName: setMinEvictableIdleTimeMillis
p24833
tp24834
I7
s(Vinsert
p24835
I45
VStringLiteral: " NOMAXVALUE"
p24836
tp24837
I1
s(Vinsert
p24838
I45
VStringLiteral: "create database super default character set utf8 collate = utf8_bin character set utf8 collate utf8_bin;"
p24839
tp24840
I1
s(Vinsert
p24841
I45
VStringLiteral: "    END LOOP;\u005cn"
p24842
tp24843
I1
s(Vinsert
p24844
I42
VSimpleName: MySqlCharExpr
p24845
tp24846
I3
s(Vinsert
p24847
I43
VSimpleType: SimpleDateFormat
p24848
tp24849
I6
s(Vinsert
p24850
I42
VSimpleName: wallConfig
p24851
tp24852
I1
s(Vinsert
p24853
I45
VStringLiteral: "sys.dba_data_files"
p24854
tp24855
I1
s(Vinsert
p24856
I42
VSimpleName: setName
p24857
tp24858
I52
s(Vinsert
p24859
I42
VSimpleName: primary
p24860
tp24861
I8
s(Vinsert
p24862
I45
VStringLiteral: " WITH ADMIN OPTION"
p24863
tp24864
I1
s(Vinsert
p24865
I45
VStringLiteral: "\u005ct\u005ctTABLESPACE \u005c"USERS\u005c"\u005cn"
p24866
tp24867
I1
s(Vinsert
p24868
I42
VSimpleName: cachedPreparedStatementDeleteCount
p24869
tp24870
I2
s(Vinsert
p24871
I42
VSimpleName: getCount_2000_5000_Millis
p24872
tp24873
I1
s(Vinsert
p24874
I40
VQualifiedName: x.field
p24875
tp24876
I1
s(Vinsert
p24877
I42
VSimpleName: PGShowStatement
p24878
tp24879
I3
s(Vinsert
p24880
I43
VSimpleType: MySqlMatchAgainstExpr
p24881
tp24882
I2
s(Vinsert
p24883
I45
VStringLiteral: " as ("
p24884
tp24885
I1
s(Vinsert
p24886
I42
VSimpleName: HTableDescriptor
p24887
tp24888
I1
s(Vinsert
p24889
I42
VSimpleName: setPartition
p24890
tp24891
I4
s(Vinsert
p24892
I43
VSimpleType: MySqlShowCreateTableStatement
p24893
tp24894
I2
s(Vinsert
p24895
I40
VQualifiedName: If.instance
p24896
tp24897
I1
s(Vinsert
p24898
I42
VSimpleName: like
p24899
tp24900
I10
s(Vinsert
p24901
I42
VSimpleName: parametersSize
p24902
tp24903
I3
s(Vinsert
p24904
I42
VSimpleName: MySqlTableIndex
p24905
tp24906
I2
s(Vinsert
p24907
I42
VSimpleName: stmtCloned
p24908
tp24909
I2
s(Vinsert
p24910
I42
VSimpleName: port
p24911
tp24912
I1
s(Vinsert
p24913
I45
VStringLiteral: "/login.html"
p24914
tp24915
I2
s(Vinsert
p24916
I42
VSimpleName: setBracket
p24917
tp24918
I1
s(Vinsert
p24919
I45
VStringLiteral: "ORDER BY seller_no, invoice_date;"
p24920
tp24921
I1
s(Vinsert
p24922
I42
VSimpleName: txtTestOnBorrow
p24923
tp24924
I1
s(Vinsert
p24925
I42
VSimpleName: params
p24926
tp24927
I12
s(Vinsert
p24928
I42
VSimpleName: hasComment
p24929
tp24930
I10
s(Vinsert
p24931
I42
VSimpleName: ConnectionEvent
p24932
tp24933
I3
s(Vinsert
p24934
I45
VStringLiteral: "FROM TB_002"
p24935
tp24936
I1
s(Vinsert
p24937
I42
VSimpleName: getExprList
p24938
tp24939
I1
s(Vinsert
p24940
I42
VSimpleName: toOracleString
p24941
tp24942
I44
s(Vinsert
p24943
I45
VStringLiteral: "TABLESPACE example\u005cn"
p24944
tp24945
I1
s(Vinsert
p24946
I45
VStringLiteral: "\u005cn\u005ct\u005ct\u005ct\u005ct\u005ctFROM t5"
p24947
tp24948
I1
s(Vinsert
p24949
I43
VSimpleType: DataSourceProperties
p24950
tp24951
I1
s(Vinsert
p24952
I42
VSimpleName: getStatementStat
p24953
tp24954
I9
s(Vinsert
p24955
I43
VSimpleType: SQLDeleteBuilder
p24956
tp24957
I1
s(Vinsert
p24958
I42
VSimpleName: listeners
p24959
tp24960
I4
s(Vinsert
p24961
I45
VStringLiteral: "CREATE VIEW customer_ro (\u005cn"
p24962
tp24963
I1
s(Vinsert
p24964
I45
VStringLiteral: "create index index1 on t1(col1) comment 'test index' comment 'some test' using btree;"
p24965
tp24966
I1
s(Vinsert
p24967
I45
VStringLiteral: "\u005ct\u005ct\u005ct)\u005cn"
p24968
tp24969
I2
s(Vinsert
p24970
I42
VSimpleName: setConditionExpr
p24971
tp24972
I1
s(Vinsert
p24973
I42
VSimpleName: ActionDesc
p24974
tp24975
I1
s(Vinsert
p24976
I42
VSimpleName: SocketTimeoutException
p24977
tp24978
I3
s(Vinsert
p24979
I45
VStringLiteral: " ON hr.employees TO oe"
p24980
tp24981
I1
s(Vinsert
p24982
I42
VSimpleName: exportParamterAndAccept
p24983
tp24984
I5
s(Vinsert
p24985
I42
VSimpleName: removeAbandoned
p24986
tp24987
I1
s(Vinsert
p24988
I45
VStringLiteral: "\u005cn\u005ct\u005ctfrom acduser.vw_kreis_code"
p24989
tp24990
I1
s(Vinsert
p24991
I43
VSimpleType: SQLASTVisitor
p24992
tp24993
I89
s(Vinsert
p24994
I45
VStringLiteral: "ADD"
p24995
tp24996
I2
s(Vinsert
p24997
I45
VStringLiteral: "MD5"
p24998
tp24999
I1
s(Vinsert
p25000
I45
VStringLiteral: "WHERE NID = ANY(ARRAY[1, 2, 3])"
p25001
tp25002
I1
s(Vinsert
p25003
I42
VSimpleName: lastStatementError
p25004
tp25005
I2
s(Vinsert
p25006
I42
VSimpleName: PhoenixStatementParser
p25007
tp25008
I1
s(Vinsert
p25009
I42
VSimpleName: SQLNullExpr
p25010
tp25011
I12
s(Vinsert
p25012
I45
VStringLiteral: "logger can not be null"
p25013
tp25014
I2
s(Vinsert
p25015
I40
VQualifiedName: SpringLayout.EAST
p25016
tp25017
I1
s(Vinsert
p25018
I42
VSimpleName: contains
p25019
tp25020
I22
s(Vinsert
p25021
I40
VQualifiedName: Token.USING
p25022
tp25023
I2
s(Vinsert
p25024
I42
VSimpleName: setOrReplace
p25025
tp25026
I3
s(Vinsert
p25027
I45
VStringLiteral: " IGNORE DELETE TRIGGERS"
p25028
tp25029
I1
s(Vinsert
p25030
I74
VParameterizedType: HashMap<String,Object>
p25031
tp25032
I3
s(Vinsert
p25033
I45
VStringLiteral: "select id, name from \u005c"mytable\u005c" where id = 3"
p25034
tp25035
I1
s(Vinsert
p25036
I42
VSimpleName: setCondition
p25037
tp25038
I3
s(Vinsert
p25039
I42
VSimpleName: stmtHolder
p25040
tp25041
I11
s(Vinsert
p25042
I45
VStringLiteral: "\u005ctDROP TABLE _tmp;\u005cn"
p25043
tp25044
I1
s(Vinsert
p25045
I42
VSimpleName: hex
p25046
tp25047
I1
s(Vinsert
p25048
I42
VSimpleName: writeObject
p25049
tp25050
I2
s(Vinsert
p25051
I43
VSimpleType: RsaDecrypter
p25052
tp25053
I6
s(Vinsert
p25054
I42
VSimpleName: setOnly
p25055
tp25056
I1
s(Vinsert
p25057
I45
VStringLiteral: "\u005ctCOMPRESS\u005cn"
p25058
tp25059
I1
s(Vinsert
p25060
I42
VSimpleName: rangeValues
p25061
tp25062
I1
s(Vinsert
p25063
I45
VStringLiteral: "WAIT"
p25064
tp25065
I1
s(Vinsert
p25066
I45
VStringLiteral: "=test1"
p25067
tp25068
I1
s(Vinsert
p25069
I45
VStringLiteral: "select top 1 (CAST(OriganID AS VARCHAR(20)) + ',' + MobilePhoneUrl) FROM T"
p25070
tp25071
I1
s(Vinsert
p25072
I40
VQualifiedName: Token.SELECT
p25073
tp25074
I6
s(Vinsert
p25075
I45
VStringLiteral: "\u005cnfrom table1;"
p25076
tp25077
I1
s(Vinsert
p25078
I42
VSimpleName: LOOP_COUNT
p25079
tp25080
I2
s(Vinsert
p25081
I42
VSimpleName: directCreateCountUpdater
p25082
tp25083
I1
s(Vinsert
p25084
I45
VStringLiteral: "logAbandoned"
p25085
tp25086
I1
s(Vinsert
p25087
I45
VStringLiteral: "identity ("
p25088
tp25089
I1
s(Vinsert
p25090
I42
VSimpleName: rows
p25091
tp25092
I4
s(Vinsert
p25093
I45
VStringLiteral: "\u005cn\u005ctlower_directory_name NVARCHAR(255),"
p25094
tp25095
I1
s(Vinsert
p25096
I42
VSimpleName: OracleDateTimeUnit
p25097
tp25098
I1
s(Vinsert
p25099
I42
VSimpleName: WallSqlFunctionStat
p25100
tp25101
I2
s(Vinsert
p25102
I42
VSimpleName: catalog
p25103
tp25104
I1
s(Vinsert
p25105
I45
VStringLiteral: "LIMIT ?, ?"
p25106
tp25107
I2
s(Vinsert
p25108
I45
VStringLiteral: "select * from t where id  = ? ORDER BY 1"
p25109
tp25110
I1
s(Vinsert
p25111
I42
VSimpleName: owner
p25112
tp25113
I24
s(Vinsert
p25114
I45
VStringLiteral: "\u005ctSELECT NULL, COUNT(*)\u005cn"
p25115
tp25116
I1
s(Vinsert
p25117
I42
VSimpleName: entries
p25118
tp25119
I4
s(Vinsert
p25120
I42
VSimpleName: checkOpen
p25121
tp25122
I1
s(Vinsert
p25123
I40
VQualifiedName: Token.FUNCTION
p25124
tp25125
I1
s(Vinsert
p25126
I42
VSimpleName: getFirstEntity
p25127
tp25128
I5
s(Vinsert
p25129
I42
VSimpleName: rest
p25130
tp25131
I2
s(Vinsert
p25132
I45
VStringLiteral: "UNIQUE CLUSTERED"
p25133
tp25134
I1
s(Vinsert
p25135
I45
VStringLiteral: "syntax error, illegal values clause"
p25136
tp25137
I1
s(Vinsert
p25138
I45
VStringLiteral: "(select count(*) from t) < 0"
p25139
tp25140
I1
s(Vinsert
p25141
I42
VSimpleName: ProfileEntryReqStat
p25142
tp25143
I1
s(Vinsert
p25144
I45
VStringLiteral: "\u005cn\u005ctSELECT \u005c"AO_4AEACD_WEBHOOK_DAO_ID_SEQ\u005c".NEXTVAL"
p25145
tp25146
I2
s(Vinsert
p25147
I43
VSimpleType: MySqlWallProvider
p25148
tp25149
I135
s(Vinsert
p25150
I45
VStringLiteral: "\u005cn\u005ctTOUCH"
p25151
tp25152
I1
s(Vinsert
p25153
I42
VSimpleName: holer
p25154
tp25155
I1
s(Vinsert
p25156
I42
VSimpleName: setTable
p25157
tp25158
I10
s(Vinsert
p25159
I42
VSimpleName: test_concat
p25160
tp25161
I1
s(Vinsert
p25162
I42
VSimpleName: getReturnStatus
p25163
tp25164
I1
s(Vinsert
p25165
I42
VSimpleName: attributes
p25166
tp25167
I7
s(Vinsert
p25168
I45
VStringLiteral: "\u005ctFOREIGN KEY (XTBH) REFERENCES XT_DJ_XT (XTBH),\u005cn"
p25169
tp25170
I1
s(Vinsert
p25171
I42
VSimpleName: TargetSource
p25172
tp25173
I1
s(Vinsert
p25174
I42
VSimpleName: bogusPatterns
p25175
tp25176
I1
s(Vinsert
p25177
I74
VParameterizedType: Set<Object>
p25178
tp25179
I3
s(Vinsert
p25180
I42
VSimpleName: incrementSelectIntoCount
p25181
tp25182
I1
s(Vinsert
p25183
I42
VSimpleName: SQLAlterTableDisableConstraint
p25184
tp25185
I3
s(Vinsert
p25186
I45
VStringLiteral: "META-INF/druid-filter-wall-permit-schema-mysql-default.txt"
p25187
tp25188
I1
s(Vinsert
p25189
I42
VSimpleName: Date
p25190
tp25191
I11
s(Vinsert
p25192
I40
VQualifiedName: TriggerEvent.INSERT
p25193
tp25194
I1
s(Vinsert
p25195
I42
VSimpleName: parseObject
p25196
tp25197
I2
s(Vinsert
p25198
I42
VSimpleName: tableSpace
p25199
tp25200
I3
s(Vinsert
p25201
I45
VStringLiteral: "EXPLAIN\u005cn"
p25202
tp25203
I1
s(Vinsert
p25204
I45
VStringLiteral: "EXPLAIN"
p25205
tp25206
I1
s(Vinsert
p25207
I45
VStringLiteral: "\u005cn\u005ct\u005c"ACTIVE_RULE_ID\u005c" NUMBER(38, 0),"
p25208
tp25209
I2
s(Vinsert
p25210
I42
VSimpleName: generateCertificate
p25211
tp25212
I1
s(Vinsert
p25213
I42
VSimpleName: AesDecrypter
p25214
tp25215
I4
s(Vinsert
p25216
I43
VSimpleType: MySqlExtractExpr
p25217
tp25218
I3
s(Vinsert
p25219
I42
VSimpleName: getFilters
p25220
tp25221
I3
s(Vinsert
p25222
I42
VSimpleName: createPhysicalXAConnetion
p25223
tp25224
I1
s(Vinsert
p25225
I42
VSimpleName: SpringStatManager
p25226
tp25227
I2
s(Vinsert
p25228
I45
VStringLiteral: "\u005cn\u005ct\u005ctAND to_char(begin_time, 'yyyy-MM-dd') <= ?"
p25229
tp25230
I1
s(Vinsert
p25231
I42
VSimpleName: setMinExtents
p25232
tp25233
I1
s(Vinsert
p25234
I42
VSimpleName: impl
p25235
tp25236
I17
s(Vinsert
p25237
I42
VSimpleName: conditionValue
p25238
tp25239
I3
s(Vinsert
p25240
I45
VStringLiteral: "WHEN "
p25241
tp25242
I1
s(Vinsert
p25243
I43
VSimpleType: SQLSelect
p25244
tp25245
I31
s(Vinsert
p25246
I45
VStringLiteral: "runningCount "
p25247
tp25248
I1
s(Vinsert
p25249
I43
VSimpleType: Lexer.CommentHandler
p25250
tp25251
I1
s(Vinsert
p25252
I42
VSimpleName: getPermitSchemas
p25253
tp25254
I4
s(Vinsert
p25255
I40
VQualifiedName: Connection.TRANSACTION_SERIALIZABLE
p25256
tp25257
I1
s(Vinsert
p25258
I42
VSimpleName: NotEqual
p25259
tp25260
I1
s(Vinsert
p25261
I42
VSimpleName: setParameter
p25262
tp25263
I1
s(Vinsert
p25264
I42
VSimpleName: EvalMethodAtan2Test
p25265
tp25266
I1
s(Vinsert
p25267
I42
VSimpleName: createSelectParser
p25268
tp25269
I2
s(Vinsert
p25270
I45
VStringLiteral: "\u005cn, f2 -- bbb"
p25271
tp25272
I1
s(Vinsert
p25273
I45
VStringLiteral: "\u005cn\u005ctSTORAGE (INITIAL 8M)"
p25274
tp25275
I2
s(Vinsert
p25276
I45
VStringLiteral: "trace"
p25277
tp25278
I2
s(Vinsert
p25279
I42
VSimpleName: base64ToByteArray
p25280
tp25281
I2
s(Vinsert
p25282
I42
VSimpleName: Double
p25283
tp25284
I1
s(Vinsert
p25285
I45
VStringLiteral: "SELECT seller_no, invoice_date, SUM(invoice_amt) AS sales_amt\u005cn"
p25286
tp25287
I1
s(Vinsert
p25288
I42
VSimpleName: nextTokenComma
p25289
tp25290
I2
s(Vinsert
p25291
I42
VSimpleName: currentLocal
p25292
tp25293
I2
s(Vinsert
p25294
I42
VSimpleName: getSessionStatDataList
p25295
tp25296
I1
s(Vinsert
p25297
I45
VStringLiteral: "\u005cn --c_0"
p25298
tp25299
I1
s(Vinsert
p25300
I43
VSimpleType: TableStat.Relationship
p25301
tp25302
I1
s(Vinsert
p25303
I45
VStringLiteral: ".id = "
p25304
tp25305
I1
s(Vinsert
p25306
I45
VStringLiteral: "ConnectionCount_Alive_3_more_Day"
p25307
tp25308
I1
s(Vinsert
p25309
I42
VSimpleName: insertDataCountUpdater
p25310
tp25311
I1
s(Vinsert
p25312
I42
VSimpleName: repository
p25313
tp25314
I22
s(Vinsert
p25315
I42
VSimpleName: utilClass
p25316
tp25317
I2
s(Vinsert
p25318
I45
VStringLiteral: "\u005ct\u005c"ORACLE_USERNAME\u005c", \u005cn"
p25319
tp25320
I1
s(Vinsert
p25321
I43
VSimpleType: MSSQLValidConnectionChecker
p25322
tp25323
I1
s(Vinsert
p25324
I42
VSimpleName: updateSQLXML
p25325
tp25326
I1
s(Vinsert
p25327
I45
VStringLiteral: "\u005ct\u005ctAND outer.dbinc_key = bdf.dbinc_key\u005cn"
p25328
tp25329
I1
s(Vinsert
p25330
I43
VSimpleType: VisitorFeature
p25331
tp25332
I1
s(Vinsert
p25333
I42
VSimpleName: setNull
p25334
tp25335
I1
s(Vinsert
p25336
I42
VSimpleName: aliasHashCode64
p25337
tp25338
I1
s(Vinsert
p25339
I42
VSimpleName: deleteStatement
p25340
tp25341
I5
s(Vinsert
p25342
I45
VStringLiteral: "\u005ct, c.is_pass_av, c.keywords, c.provide_products, c.purchase_products, c.brand_name\u005cn"
p25343
tp25344
I1
s(Vinsert
p25345
I42
VSimpleName: when
p25346
tp25347
I4
s(Vinsert
p25348
I42
VSimpleName: limitSql
p25349
tp25350
I2
s(Vinsert
p25351
I74
VParameterizedType: Entry<PreparedStatementKey,PreparedStatementHolder>
p25352
tp25353
I1
s(Vinsert
p25354
I42
VSimpleName: totalWeight
p25355
tp25356
I1
s(Vinsert
p25357
I42
VSimpleName: wrappedSource
p25358
tp25359
I1
s(Vinsert
p25360
I45
VStringLiteral: "SELECT employee_id, last_name, email\u005cn"
p25361
tp25362
I1
s(Vinsert
p25363
I42
VSimpleName: setAddUndoFile
p25364
tp25365
I1
s(Vinsert
p25366
I45
VStringLiteral: "WHERE gd_id = gdid"
p25367
tp25368
I1
s(Vinsert
p25369
I42
VSimpleName: providers
p25370
tp25371
I2
s(Vinsert
p25372
I42
VSimpleName: PGPointExpr
p25373
tp25374
I2
s(Vinsert
p25375
I42
VSimpleName: setInitially
p25376
tp25377
I1
s(Vinsert
p25378
I42
VSimpleName: sqlType
p25379
tp25380
I1
s(Vinsert
p25381
I40
VQualifiedName: SQLBinaryOperator.GreaterThan
p25382
tp25383
I1
s(Vinsert
p25384
I45
VStringLiteral: "LIMIT 10"
p25385
tp25386
I1
s(Vinsert
p25387
I43
VSimpleType: Connection
p25388
tp25389
I94
s(Vinsert
p25390
I40
VQualifiedName: Boolean.TRUE
p25391
tp25392
I21
s(Vinsert
p25393
I43
VSimpleType: SQLCreateViewStatement.Column
p25394
tp25395
I1
s(Vinsert
p25396
I45
VStringLiteral: "OPTION"
p25397
tp25398
I1
s(Vinsert
p25399
I45
VStringLiteral: ",   user.name as modifier"
p25400
tp25401
I1
s(Vinsert
p25402
I42
VSimpleName: wordIndex
p25403
tp25404
I1
s(Vinsert
p25405
I42
VSimpleName: MySqlSelectParser
p25406
tp25407
I4
s(Vinsert
p25408
I40
VQualifiedName: JdbcConstants.SQL_SERVER
p25409
tp25410
I7
s(Vinsert
p25411
I42
VSimpleName: modelRulesClause
p25412
tp25413
I1
s(Vinsert
p25414
I45
VStringLiteral: "evil hints"
p25415
tp25416
I1
s(Vinsert
p25417
I40
VQualifiedName: VisitorFeature.OutputPrettyFormat
p25418
tp25419
I1
s(Vinsert
p25420
I42
VSimpleName: setAutoCommitOnClose
p25421
tp25422
I1
s(Vinsert
p25423
I42
VSimpleName: preSelectItem
p25424
tp25425
I1
s(Vinsert
p25426
I42
VSimpleName: WallProvider
p25427
tp25428
I140
s(Vinsert
p25429
I42
VSimpleName: mergedSql
p25430
tp25431
I2
s(Vinsert
p25432
I42
VSimpleName: hasResource
p25433
tp25434
I2
s(Vinsert
p25435
I42
VSimpleName: additiveRest
p25436
tp25437
I1
s(Vinsert
p25438
I45
VStringLiteral: "\u005ctAND sites.contract_header_id = :headerid\u005cn"
p25439
tp25440
I1
s(Vinsert
p25441
I45
VStringLiteral: "\u005ct\u005ctIF ctx2.currentstr IS NULL THEN\u005cn"
p25442
tp25443
I1
s(Vinsert
p25444
I42
VSimpleName: BufferedReader
p25445
tp25446
I1
s(Vinsert
p25447
I42
VSimpleName: realName
p25448
tp25449
I2
s(Vinsert
p25450
I45
VStringLiteral: "delete force partition 'pt001' car_tt\u005cn"
p25451
tp25452
I1
s(Vinsert
p25453
I43
VSimpleType: NumberFormatException
p25454
tp25455
I2
s(Vinsert
p25456
I45
VStringLiteral: "\u005cn\u005ct\u005ctselect tbek_code"
p25457
tp25458
I1
s(Vinsert
p25459
I42
VSimpleName: druidDatasource
p25460
tp25461
I12
s(Vinsert
p25462
I45
VStringLiteral: "WITH (SNAPSHOT)   \u005cn"
p25463
tp25464
I1
s(Vinsert
p25465
I42
VSimpleName: incrementAlterCount
p25466
tp25467
I1
s(Vinsert
p25468
I42
VSimpleName: SQLTableSource
p25469
tp25470
I27
s(Vinsert
p25471
I45
VStringLiteral: "\u005cn\u005ctOPTIMIZE PARTITION p1"
p25472
tp25473
I1
s(Vinsert
p25474
I42
VSimpleName: getObjectInternal
p25475
tp25476
I2
s(Vinsert
p25477
I43
VSimpleType: MapHandler
p25478
tp25479
I1
s(Vinsert
p25480
I42
VSimpleName: TeradataLexer
p25481
tp25482
I1
s(Vinsert
p25483
I43
VSimpleType: PGLineSegmentsExpr
p25484
tp25485
I4
s(Vinsert
p25486
I42
VSimpleName: HandlerList
p25487
tp25488
I2
s(Vinsert
p25489
I43
VSimpleType: MySqlShowOpenTablesStatement
p25490
tp25491
I2
s(Vinsert
p25492
I45
VStringLiteral: "\u005cn -- yyy"
p25493
tp25494
I3
s(Vinsert
p25495
I42
VSimpleName: sce
p25496
tp25497
I1
s(Vinsert
p25498
I45
VStringLiteral: "\u005ctRETURN acc_bal;\u005cn"
p25499
tp25500
I1
s(Vinsert
p25501
I45
VStringLiteral: "WITH\u005cn"
p25502
tp25503
I1
s(Vinsert
p25504
I45
VStringLiteral: "\u005cn\u005ctDURATION_ NUMBER(19, 0),"
p25505
tp25506
I2
s(Vinsert
p25507
I42
VSimpleName: getKeywords
p25508
tp25509
I6
s(Vinsert
p25510
I45
VStringLiteral: ", minIdle "
p25511
tp25512
I1
s(Vinsert
p25513
I42
VSimpleName: THREAD_COUNT
p25514
tp25515
I1
s(Vinsert
p25516
I42
VSimpleName: disableError
p25517
tp25518
I1
s(Vinsert
p25519
I43
VSimpleType: QueryPartitionClause
p25520
tp25521
I1
s(Vinsert
p25522
I42
VSimpleName: getYoungGCTime
p25523
tp25524
I2
s(Vinsert
p25525
I42
VSimpleName: parseDropSequece
p25526
tp25527
I2
s(Vinsert
p25528
I45
VStringLiteral: "\u005ct, department_id\u005cn"
p25529
tp25530
I1
s(Vinsert
p25531
I42
VSimpleName: inputParameters
p25532
tp25533
I1
s(Vinsert
p25534
I42
VSimpleName: identifierEquals
p25535
tp25536
I106
s(Vinsert
p25537
I42
VSimpleName: clusteredBy
p25538
tp25539
I1
s(Vinsert
p25540
I45
VStringLiteral: "Ae06nawFpOJIAYpBf9wBVC+ZrjU/nuEtokBqCce6HWIoF6rYgz0V0W/47x5KpOnQ2i7X3kFe\u005cn"
p25541
tp25542
I1
s(Vinsert
p25543
I42
VSimpleName: cursor
p25544
tp25545
I1
s(Vinsert
p25546
I42
VSimpleName: sendRedirect
p25547
tp25548
I1
s(Vinsert
p25549
I42
VSimpleName: ConstantArithmeticCheckTest
p25550
tp25551
I1
s(Vinsert
p25552
I42
VSimpleName: updateDataCount_10000_more
p25553
tp25554
I1
s(Vinsert
p25555
I42
VSimpleName: setUp
p25556
tp25557
I18
s(Vinsert
p25558
I45
VStringLiteral: "/* 72582af814768580067726386d39b6/0// */ select id,uid from mytable"
p25559
tp25560
I1
s(Vinsert
p25561
I43
VSimpleType: SQLCaseStatement.Item
p25562
tp25563
I3
s(Vinsert
p25564
I40
VQualifiedName: aggregateFunctions.length
p25565
tp25566
I2
s(Vinsert
p25567
I42
VSimpleName: getMethodInfo
p25568
tp25569
I1
s(Vinsert
p25570
I40
VQualifiedName: com.alibaba.druid.support.logging.Log
p25571
tp25572
I6
s(Vinsert
p25573
I42
VSimpleName: testLoadConfigBySystemProperty
p25574
tp25575
I1
s(Vinsert
p25576
I42
VSimpleName: getString
p25577
tp25578
I5
s(Vinsert
p25579
I45
VStringLiteral: "DELAYED "
p25580
tp25581
I1
s(Vinsert
p25582
I42
VSimpleName: notTarget
p25583
tp25584
I2
s(Vinsert
p25585
I42
VSimpleName: getCachedPreparedStatementCount
p25586
tp25587
I1
s(Vinsert
p25588
I43
VSimpleType: ValidTask
p25589
tp25590
I1
s(Vinsert
p25591
I45
VStringLiteral: "select cid,title,id,img,fan from duoduo_mall where cid = cid and 1=1 order by sort desc limit 17 "
p25592
tp25593
I1
s(Vinsert
p25594
I42
VSimpleName: getKeyName
p25595
tp25596
I1
s(Vinsert
p25597
I45
VStringLiteral: "\u005ctDISABLE STORAGE IN ROW\u005cn"
p25598
tp25599
I1
s(Vinsert
p25600
I42
VSimpleName: test_setBinaryStream
p25601
tp25602
I1
s(Vinsert
p25603
I45
VStringLiteral: "SELECT * FROM t where a=1 #this is comment \u005cn and b=1"
p25604
tp25605
I1
s(Vinsert
p25606
I42
VSimpleName: clientImplWrapper
p25607
tp25608
I4
s(Vinsert
p25609
I45
VStringLiteral: "\u005cnSUBPARTITION BY HASH (nls_territory)"
p25610
tp25611
I2
s(Vinsert
p25612
I42
VSimpleName: class_MysqlIO_Error
p25613
tp25614
I1
s(Vinsert
p25615
I42
VSimpleName: MySqlLeaveStatement
p25616
tp25617
I1
s(Vinsert
p25618
I74
VParameterizedType: Constructor<ConnectionImpl>
p25619
tp25620
I1
s(Vinsert
p25621
I41
VReturnStatement
p25622
tp25623
I796
s(Vinsert
p25624
I43
VSimpleType: DruidPanel
p25625
tp25626
I2
s(Vinsert
p25627
I42
VSimpleName: getConnectionId
p25628
tp25629
I1
s(Vinsert
p25630
I45
VStringLiteral: "    AND 8600=CONVERT(INT,(SELECT CHAR(113)+CHAR(118)+CHAR(100)+CHAR(114)+CHAR(113)+(SELECT (CASE WHEN (8600=8600) THEN CHAR(49) ELSE CHAR(48) END))+CHAR(113)+CHAR(118)+CHAR(98)+CHAR(97)+CHAR(113))) AND '%'=''"
p25631
tp25632
I1
s(Vinsert
p25633
I42
VSimpleName: setConnectionTestStatement
p25634
tp25635
I1
s(Vinsert
p25636
I42
VSimpleName: test_trim
p25637
tp25638
I1
s(Vinsert
p25639
I42
VSimpleName: argument
p25640
tp25641
I6
s(Vinsert
p25642
I45
VStringLiteral: "\u005cn\u005ct\u005ct\u005ct\u005ctSELECT 50, 11 * s1"
p25643
tp25644
I1
s(Vinsert
p25645
I42
VSimpleName: test_eval_then
p25646
tp25647
I1
s(Vinsert
p25648
I27
VInfixExpression: <
p25649
tp25650
I128
s(Vinsert
p25651
I42
VSimpleName: IllegalStateException
p25652
tp25653
I3
s(Vinsert
p25654
I45
VStringLiteral: "FETCH"
p25655
tp25656
I1
s(Vinsert
p25657
I42
VSimpleName: getDriver
p25658
tp25659
I4
s(Vinsert
p25660
I42
VSimpleName: isBuiltinDataType
p25661
tp25662
I1
s(Vinsert
p25663
I42
VSimpleName: setDefaultTransactionIsolation
p25664
tp25665
I2
s(Vinsert
p25666
I45
VStringLiteral: "console_stb_ipstatus"
p25667
tp25668
I1
s(Vinsert
p25669
I40
VQualifiedName: com.alibaba.druid.sql.ast.statement.SQLCreateViewStatement
p25670
tp25671
I1
s(Vinsert
p25672
I42
VSimpleName: result_lcase
p25673
tp25674
I5
s(Vinsert
p25675
I40
VQualifiedName: Token.PRIMARY
p25676
tp25677
I4
s(Vinsert
p25678
I45
VStringLiteral: "com.mysql.jdbc.Driver"
p25679
tp25680
I4
s(Vinsert
p25681
I43
VSimpleType: TestCase
p25682
tp25683
I99
s(Vinsert
p25684
I45
VStringLiteral: "IDENTITY"
p25685
tp25686
I1
s(Vinsert
p25687
I43
VSimpleType: OdpsShowPartitionsStmt
p25688
tp25689
I1
s(Vinsert
p25690
I34
VNumberLiteral: 123
p25691
tp25692
I2
s(Vinsert
p25693
I42
VSimpleName: getEntries
p25694
tp25695
I3
s(Vinsert
p25696
I45
VStringLiteral: "\u005cn\u005ctWHERE project_id = ?"
p25697
tp25698
I1
s(Vinsert
p25699
I42
VSimpleName: DruidStat
p25700
tp25701
I1
s(Vinsert
p25702
I45
VStringLiteral: "\u005cnINITRANS 1"
p25703
tp25704
I5
s(Vinsert
p25705
I42
VSimpleName: setStatement
p25706
tp25707
I1
s(Vinsert
p25708
I42
VSimpleName: IdentityHashMap
p25709
tp25710
I1
s(Vinsert
p25711
I42
VSimpleName: MockHttpServletRequest
p25712
tp25713
I2
s(Vinsert
p25714
I42
VSimpleName: env
p25715
tp25716
I2
s(Vinsert
p25717
I45
VStringLiteral: "\u005ct`c_longblob` longblob COMMENT 'longblob',\u005cn"
p25718
tp25719
I4
s(Vinsert
p25720
I42
VSimpleName: invokeService
p25721
tp25722
I2
s(Vinsert
p25723
I45
VStringLiteral: "INNER JOIN tcp_cpr.con_osg3a_headers osg ON c1.contract_config_id = osg.parent_id \u005cn"
p25724
tp25725
I1
s(Vinsert
p25726
I40
VQualifiedName: dataSources.length
p25727
tp25728
I1
s(Vinsert
p25729
I74
VParameterizedType: Enumeration<?>
p25730
tp25731
I1
s(Vinsert
p25732
I45
VStringLiteral: "\u005cn\u005ctPROFILE_PICTURE_URI VARCHAR(767),"
p25733
tp25734
I1
s(Vinsert
p25735
I42
VSimpleName: DruidDataSource
p25736
tp25737
I79
s(Vinsert
p25738
I45
VStringLiteral: "limit "
p25739
tp25740
I1
s(Vinsert
p25741
I45
VStringLiteral: "\u005cnWHERE MATCH (title, body) AGAINST ('database' IN NATURAL LANGUAGE MODE)"
p25742
tp25743
I1
s(Vinsert
p25744
I45
VStringLiteral: "SELECT /*+mapjoin(tt)*/ id\u005cn"
p25745
tp25746
I1
s(Vinsert
p25747
I12
VCatchClause
p25748
tp25749
I74
s(Vinsert
p25750
I42
VSimpleName: MultiConnectionHolder
p25751
tp25752
I1
s(Vinsert
p25753
I45
VStringLiteral: "\u005ct\u005ctEND IF;\u005cn"
p25754
tp25755
I7
s(Vinsert
p25756
I42
VSimpleName: externalRejectLimit
p25757
tp25758
I3
s(Vinsert
p25759
I42
VSimpleName: getInfoCount
p25760
tp25761
I4
s(Vinsert
p25762
I40
VQualifiedName: Token.YEAR
p25763
tp25764
I1
s(Vinsert
p25765
I13
VCharacterLiteral: '#'
p25766
tp25767
I1
s(Vinsert
p25768
I42
VSimpleName: e
p25769
tp25770
I107
s(Vinsert
p25771
I42
VSimpleName: on_ab_binaryOpExpr
p25772
tp25773
I1
s(Vinsert
p25774
I42
VSimpleName: setLifecycle
p25775
tp25776
I2
s(Vinsert
p25777
I42
VSimpleName: getWhiteList
p25778
tp25779
I2
s(Vinsert
p25780
I42
VSimpleName: isPrimaryKey
p25781
tp25782
I1
s(Vinsert
p25783
I42
VSimpleName: getPhysicalConnectErrorCount
p25784
tp25785
I2
s(Vinsert
p25786
I42
VSimpleName: strVal
p25787
tp25788
I3
s(Vinsert
p25789
I42
VSimpleName: IllegalAccessException
p25790
tp25791
I4
s(Vinsert
p25792
I45
VStringLiteral: "UNKOWN TRANSACTION LEVEL : "
p25793
tp25794
I1
s(Vinsert
p25795
I45
VStringLiteral: "OPEN"
p25796
tp25797
I1
s(Vinsert
p25798
I45
VStringLiteral: "not support multi-statement :"
p25799
tp25800
I2
s(Vinsert
p25801
I42
VSimpleName: PushServiceTest
p25802
tp25803
I1
s(Vinsert
p25804
I42
VSimpleName: pgDataType
p25805
tp25806
I3
s(Vinsert
p25807
I45
VStringLiteral: "SELECT account_no, name\u005cn"
p25808
tp25809
I1
s(Vinsert
p25810
I45
VStringLiteral: "\u005ct\u005ct\u005ctFROM (\u005cn"
p25811
tp25812
I1
s(Vinsert
p25813
I42
VSimpleName: tableNameExpr
p25814
tp25815
I1
s(Vinsert
p25816
I43
VSimpleType: MySqlExportParameterVisitor
p25817
tp25818
I3
s(Vinsert
p25819
I42
VSimpleName: Configuration
p25820
tp25821
I1
s(Vinsert
p25822
I43
VSimpleType: WallSqlTableStat
p25823
tp25824
I1
s(Vinsert
p25825
I42
VSimpleName: getEventFiredCount
p25826
tp25827
I1
s(Vinsert
p25828
I42
VSimpleName: setTarget
p25829
tp25830
I2
s(Vinsert
p25831
I42
VSimpleName: RSAPrivateKeySpec
p25832
tp25833
I2
s(Vinsert
p25834
I45
VStringLiteral: "{addContact:[{\u005c"address\u005c":\u005c"=\u005c\u005c\u005c\u005c\u005c\u005c\u005c\u005c\u005c\u005c\u005c'\u005c'\u005c\u005c&quot;);|]*{%0d%0a&lt;%00\u005c"}]}"
p25835
tp25836
I1
s(Vinsert
p25837
I45
VStringLiteral: "select shop_name, customer_id, total_price\u005cn"
p25838
tp25839
I1
s(Vinsert
p25840
I42
VSimpleName: getUser
p25841
tp25842
I7
s(Vinsert
p25843
I45
VStringLiteral: "\u005ct\u005ctfrom (\u005cn"
p25844
tp25845
I1
s(Vinsert
p25846
I43
VSimpleType: TableStat.Name
p25847
tp25848
I4
s(Vinsert
p25849
I42
VSimpleName: GT
p25850
tp25851
I1
s(Vinsert
p25852
I45
VStringLiteral: "\u005ct\u005ctfrom alimama_algo.fund_mlr_n_chicago_offline_click\u005cn"
p25853
tp25854
I1
s(Vinsert
p25855
I40
VQualifiedName: java.io.Reader
p25856
tp25857
I1
s(Vinsert
p25858
I45
VStringLiteral: "select * from t where NOT(UNHEX(HEX(FNAME)) != FNAME)"
p25859
tp25860
I1
s(Vinsert
p25861
I45
VStringLiteral: "begin\u005cn"
p25862
tp25863
I2
s(Vinsert
p25864
I43
VSimpleType: FetchClause
p25865
tp25866
I1
s(Vinsert
p25867
I45
VStringLiteral: "\u005ct, hire_date\u005cn"
p25868
tp25869
I1
s(Vinsert
p25870
I43
VSimpleType: java.io.Reader
p25871
tp25872
I1
s(Vinsert
p25873
I42
VSimpleName: logSlowSql
p25874
tp25875
I1
s(Vinsert
p25876
I42
VSimpleName: HttpURLConnection
p25877
tp25878
I1
s(Vinsert
p25879
I42
VSimpleName: elseItem
p25880
tp25881
I1
s(Vinsert
p25882
I43
VSimpleType: IdentityHashMap
p25883
tp25884
I1
s(Vinsert
p25885
I42
VSimpleName: setLastExecuteStartNano
p25886
tp25887
I3
s(Vinsert
p25888
I42
VSimpleName: ServletHolder
p25889
tp25890
I2
s(Vinsert
p25891
I42
VSimpleName: WallSQLException
p25892
tp25893
I2
s(Vinsert
p25894
I42
VSimpleName: setFunctionCheck
p25895
tp25896
I1
s(Vinsert
p25897
I40
VQualifiedName: StatementExecuteType.ExecuteQuery
p25898
tp25899
I1
s(Vinsert
p25900
I42
VSimpleName: rangeCounters
p25901
tp25902
I9
s(Vinsert
p25903
I43
VSimpleType: SQLBetweenExpr
p25904
tp25905
I1
s(Vinsert
p25906
I43
VSimpleType: SQLUpdateSetItem
p25907
tp25908
I3
s(Vinsert
p25909
I74
VParameterizedType: ArrayList<PoolablePreparedStatement>
p25910
tp25911
I1
s(Vinsert
p25912
I45
VStringLiteral: "jdbc:druid-hbase:"
p25913
tp25914
I1
s(Vinsert
p25915
I42
VSimpleName: addValue
p25916
tp25917
I1
s(Vinsert
p25918
I45
VStringLiteral: "READ"
p25919
tp25920
I1
s(Vinsert
p25921
I42
VSimpleName: sqe
p25922
tp25923
I1
s(Vinsert
p25924
I45
VStringLiteral: "order by cnt desc\u005cn"
p25925
tp25926
I1
s(Vinsert
p25927
I42
VSimpleName: SQLSubPartitionByHash
p25928
tp25929
I4
s(Vinsert
p25930
I45
VStringLiteral: "bvt/parser/oracle-7.txt"
p25931
tp25932
I1
s(Vinsert
p25933
I45
VStringLiteral: "\u005ct\u005ct\u005ctself.currentstr := self.currentstr || currentseprator || ctx2.currentstr;\u005cn"
p25934
tp25935
I1
s(Vinsert
p25936
I45
VStringLiteral: "WaitThreadCount"
p25937
tp25938
I1
s(Vinsert
p25939
I43
VSimpleType: OutputStreamWriter
p25940
tp25941
I1
s(Vinsert
p25942
I45
VStringLiteral: "WHERE customer_id = 5000;"
p25943
tp25944
I1
s(Vinsert
p25945
I45
VStringLiteral: "/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */"
p25946
tp25947
I1
s(Vinsert
p25948
I42
VSimpleName: webStat
p25949
tp25950
I14
s(Vinsert
p25951
I42
VSimpleName: as
p25952
tp25953
I1
s(Vinsert
p25954
I45
VStringLiteral: "NAME"
p25955
tp25956
I1
s(Vinsert
p25957
I42
VSimpleName: decrementActiveCountWithLock
p25958
tp25959
I1
s(Vinsert
p25960
I43
VSimpleType: Byte
p25961
tp25962
I2
s(Vinsert
p25963
I45
VStringLiteral: "select * from t1;select * from t2;"
p25964
tp25965
I1
s(Vinsert
p25966
I45
VStringLiteral: "LOB (\u005c"C\u005c") STORE AS (\u005cn"
p25967
tp25968
I1
s(Vinsert
p25969
I45
VStringLiteral: "PARTITION BY KEY ("
p25970
tp25971
I2
s(Vinsert
p25972
I42
VSimpleName: dblink
p25973
tp25974
I3
s(Vinsert
p25975
I45
VStringLiteral: "CUBE"
p25976
tp25977
I1
s(Vinsert
p25978
I42
VSimpleName: compareOp
p25979
tp25980
I2
s(Vinsert
p25981
I45
VStringLiteral: "\u005ctEND LOOP;\u005cn"
p25982
tp25983
I1
s(Vinsert
p25984
I45
VStringLiteral: "TABLESPACE \u005c"PERFSTAT\u005c"\u005cn"
p25985
tp25986
I1
s(Vinsert
p25987
I45
VStringLiteral: "\u005ct\u005ctINTO curr_comm\u005cn"
p25988
tp25989
I1
s(Vinsert
p25990
I42
VSimpleName: RuntimeException
p25991
tp25992
I7
s(Vinsert
p25993
I45
VStringLiteral: "NOVALIDATE"
p25994
tp25995
I1
s(Vinsert
p25996
I45
VStringLiteral: "\u005ctSUPPLEMENTAL LOG DATA (UNIQUE INDEX) COLUMNS,\u005cn"
p25997
tp25998
I1
s(Vinsert
p25999
I45
VStringLiteral: "\u005ct`c_bigint` bigint(20) DEFAULT NULL COMMENT 'bigint',\u005cn"
p26000
tp26001
I1
s(Vinsert
p26002
I42
VSimpleName: printlnAndAccept
p26003
tp26004
I4
s(Vinsert
p26005
I45
VStringLiteral: "illegal property 'druid.minEvictableIdleTimeMillis'"
p26006
tp26007
I1
s(Vinsert
p26008
I43
VSimpleType: SQLAlterTableStatement
p26009
tp26010
I4
s(Vinsert
p26011
I42
VSimpleName: SQLUseStatement
p26012
tp26013
I3
s(Vinsert
p26014
I42
VSimpleName: tableMapping
p26015
tp26016
I4
s(Vinsert
p26017
I40
VQualifiedName: Token.FOR
p26018
tp26019
I2
s(Vinsert
p26020
I42
VSimpleName: MySqlWallTest33
p26021
tp26022
I1
s(Vinsert
p26023
I42
VSimpleName: formatted
p26024
tp26025
I1
s(Vinsert
p26026
I42
VSimpleName: whiteSql_1
p26027
tp26028
I1
s(Vinsert
p26029
I42
VSimpleName: source
p26030
tp26031
I2
s(Vinsert
p26032
I42
VSimpleName: msgDigest
p26033
tp26034
I1
s(Vinsert
p26035
I45
VStringLiteral: "\u005cn\u005ctlocation_id NUMBER(4)"
p26036
tp26037
I1
s(Vinsert
p26038
I74
VParameterizedType: ArrayList<FieldInfo>
p26039
tp26040
I1
s(Vinsert
p26041
I42
VSimpleName: seconds
p26042
tp26043
I5
s(Vinsert
p26044
I43
VSimpleType: ConnectionImpl
p26045
tp26046
I4
s(Vinsert
p26047
I42
VSimpleName: EvalMethodRightTest
p26048
tp26049
I1
s(Vinsert
p26050
I45
VStringLiteral: "\u005cnPARTITION BY RANGE (store_id)"
p26051
tp26052
I2
s(Vinsert
p26053
I42
VSimpleName: updateLong
p26054
tp26055
I1
s(Vinsert
p26056
I42
VSimpleName: transactionInfo
p26057
tp26058
I6
s(Vinsert
p26059
I45
VStringLiteral: "\u005cn--comment2 goes here"
p26060
tp26061
I1
s(Vinsert
p26062
I43
VSimpleType: MySqlPartitionByKey
p26063
tp26064
I4
s(Vinsert
p26065
I43
VSimpleType: MBeanServer
p26066
tp26067
I4
s(Vinsert
p26068
I45
VStringLiteral: "TABLESPACE \u005c"USERS\u005c"\u005cn"
p26069
tp26070
I2
s(Vinsert
p26071
I42
VSimpleName: isDupCloseLogEnable
p26072
tp26073
I1
s(Vinsert
p26074
I42
VSimpleName: setKeep
p26075
tp26076
I2
s(Vinsert
p26077
I42
VSimpleName: columns
p26078
tp26079
I41
s(Vinsert
p26080
I42
VSimpleName: HiveOutputVisitor
p26081
tp26082
I2
s(Vinsert
p26083
I42
VSimpleName: millis
p26084
tp26085
I8
s(Vinsert
p26086
I42
VSimpleName: SQLAlterTableDropColumnItem
p26087
tp26088
I7
s(Vinsert
p26089
I45
VStringLiteral: "x.sql.Connection"
p26090
tp26091
I1
s(Vinsert
p26092
I42
VSimpleName: createOutputVisitor
p26093
tp26094
I24
s(Vinsert
p26095
I42
VSimpleName: getPreferredTestQuery
p26096
tp26097
I1
s(Vinsert
p26098
I42
VSimpleName: child
p26099
tp26100
I2
s(Vinsert
p26101
I42
VSimpleName: userDao
p26102
tp26103
I2
s(Vinsert
p26104
I45
VStringLiteral: "*                                    *"
p26105
tp26106
I2
s(Vinsert
p26107
I42
VSimpleName: conn_7
p26108
tp26109
I1
s(Vinsert
p26110
I42
VSimpleName: param2
p26111
tp26112
I3
s(Vinsert
p26113
I42
VSimpleName: servletPatternPrefix
p26114
tp26115
I1
s(Vinsert
p26116
I42
VSimpleName: CASE
p26117
tp26118
I1
s(Vinsert
p26119
I42
VSimpleName: selectLog4JLogging
p26120
tp26121
I2
s(Vinsert
p26122
I42
VSimpleName: UserSpecification
p26123
tp26124
I1
s(Vinsert
p26125
I45
VStringLiteral: "where loan.LOAN_OD_IND='Y' and loan.LOAN_STS='ACTV'"
p26126
tp26127
I1
s(Vinsert
p26128
I45
VStringLiteral: "RunningCount"
p26129
tp26130
I2
s(Vinsert
p26131
I42
VSimpleName: bracketIndex
p26132
tp26133
I1
s(Vinsert
p26134
I42
VSimpleName: testMySql
p26135
tp26136
I8
s(Vinsert
p26137
I42
VSimpleName: PGUpdateStatement
p26138
tp26139
I2
s(Vinsert
p26140
I42
VSimpleName: registerMBean
p26141
tp26142
I3
s(Vinsert
p26143
I42
VSimpleName: ConnectionImpl
p26144
tp26145
I4
s(Vinsert
p26146
I45
VStringLiteral: "ALTER TABLE members"
p26147
tp26148
I3
s(Vinsert
p26149
I42
VSimpleName: getGlobal
p26150
tp26151
I1
s(Vinsert
p26152
I43
VSimpleType: MySqlUpdateStatement
p26153
tp26154
I5
s(Vinsert
p26155
I42
VSimpleName: Profiler
p26156
tp26157
I1
s(Vinsert
p26158
I42
VSimpleName: MySqlWallTest29
p26159
tp26160
I1
s(Vinsert
p26161
I45
VStringLiteral: "\u005ct, ?)"
p26162
tp26163
I1
s(Vinsert
p26164
I45
VStringLiteral: "\u005cnand flag & 127 > 0 -- comment kkkkk"
p26165
tp26166
I1
s(Vinsert
p26167
I42
VSimpleName: Timestamp
p26168
tp26169
I1
s(Vinsert
p26170
I42
VSimpleName: keywods
p26171
tp26172
I2
s(Vinsert
p26173
I42
VSimpleName: setFirstColumn
p26174
tp26175
I1
s(Vinsert
p26176
I45
VStringLiteral: "druid.validationQuery"
p26177
tp26178
I1
s(Vinsert
p26179
I45
VStringLiteral: "\u005cn\u005ct\u005ct) XX"
p26180
tp26181
I1
s(Vinsert
p26182
I45
VStringLiteral: "LOGGING\u005cn"
p26183
tp26184
I10
s(Vinsert
p26185
I42
VSimpleName: resetAllStat
p26186
tp26187
I2
s(Vinsert
p26188
I43
VSimpleType: TraceEvent
p26189
tp26190
I1
s(Vinsert
p26191
I42
VSimpleName: OracleBlockStatement
p26192
tp26193
I1
s(Vinsert
p26194
I42
VSimpleName: SybaseExceptionSorter
p26195
tp26196
I2
s(Vinsert
p26197
I45
VStringLiteral: "\u005ctt3.city_id"
p26198
tp26199
I1
s(Vinsert
p26200
I45
VStringLiteral: "/opt/mytest"
p26201
tp26202
I1
s(Vinsert
p26203
I42
VSimpleName: computeAlias
p26204
tp26205
I1
s(Vinsert
p26206
I27
VInfixExpression: *
p26207
tp26208
I43
s(Vinsert
p26209
I45
VStringLiteral: "\u005cn\u005ctREBUILD PARTITION ALL"
p26210
tp26211
I1
s(Vinsert
p26212
I39
VPrimitiveType: void
p26213
tp26214
I1013
s(Vinsert
p26215
I42
VSimpleName: deleteDataCountUpdater
p26216
tp26217
I1
s(Vinsert
p26218
I42
VSimpleName: getRestartIdentity
p26219
tp26220
I1
s(Vinsert
p26221
I43
VSimpleType: OracleWithSubqueryEntry
p26222
tp26223
I1
s(Vinsert
p26224
I42
VSimpleName: MonitorClientServlet
p26225
tp26226
I1
s(Vinsert
p26227
I43
VSimpleType: SQLPanel
p26228
tp26229
I2
s(Vinsert
p26230
I42
VSimpleName: parseStatementList
p26231
tp26232
I462
s(Vinsert
p26233
I42
VSimpleName: histogram_1000000_more
p26234
tp26235
I1
s(Vinsert
p26236
I40
VQualifiedName: Token.KEEP
p26237
tp26238
I1
s(Vinsert
p26239
I43
VSimpleType: HADataSource
p26240
tp26241
I1
s(Vinsert
p26242
I42
VSimpleName: beginExpr
p26243
tp26244
I3
s(Vinsert
p26245
I45
VStringLiteral: "UTF-8"
p26246
tp26247
I1
s(Vinsert
p26248
I42
VSimpleName: wrapper
p26249
tp26250
I10
s(Vinsert
p26251
I42
VSimpleName: restartSlave
p26252
tp26253
I1
s(Vinsert
p26254
I42
VSimpleName: setInitialSize
p26255
tp26256
I12
s(Vinsert
p26257
I42
VSimpleName: OracleCursorExpr
p26258
tp26259
I5
s(Vinsert
p26260
I42
VSimpleName: configFromProperties
p26261
tp26262
I6
s(Vinsert
p26263
I43
VSimpleType: PGSQLStatementParser
p26264
tp26265
I7
s(Vinsert
p26266
I42
VSimpleName: end
p26267
tp26268
I5
s(Vinsert
p26269
I42
VSimpleName: fromIndex
p26270
tp26271
I1
s(Vinsert
p26272
I45
VStringLiteral: "name"
p26273
tp26274
I6
s(Vinsert
p26275
I42
VSimpleName: definition
p26276
tp26277
I1
s(Vinsert
p26278
I40
VQualifiedName: TimeUnit.MILLISECONDS
p26279
tp26280
I1
s(Vinsert
p26281
I42
VSimpleName: executeErrorCountUpdater
p26282
tp26283
I1
s(Vinsert
p26284
I42
VSimpleName: referencedTableName
p26285
tp26286
I1
s(Vinsert
p26287
I42
VSimpleName: DruidStatProperties
p26288
tp26289
I1
s(Vinsert
p26290
I42
VSimpleName: EvalMethodTest_substring
p26291
tp26292
I1
s(Vinsert
p26293
I45
VStringLiteral: "forwarder_service"
p26294
tp26295
I1
s(Vinsert
p26296
I39
VPrimitiveType: boolean
p26297
tp26298
I249
s(Vinsert
p26299
I42
VSimpleName: work
p26300
tp26301
I7
s(Vinsert
p26302
I42
VSimpleName: SQLSubPartition
p26303
tp26304
I4
s(Vinsert
p26305
I42
VSimpleName: getHoldability
p26306
tp26307
I2
s(Vinsert
p26308
I42
VSimpleName: connectBy
p26309
tp26310
I4
s(Vinsert
p26311
I42
VSimpleName: lock
p26312
tp26313
I40
s(Vinsert
p26314
I45
VStringLiteral: "USING strcat_type;"
p26315
tp26316
I1
s(Vinsert
p26317
I42
VSimpleName: SQLServerWallTest_1
p26318
tp26319
I1
s(Vinsert
p26320
I42
VSimpleName: Is
p26321
tp26322
I1
s(Vinsert
p26323
I42
VSimpleName: postfixed_cnt
p26324
tp26325
I1
s(Vinsert
p26326
I42
VSimpleName: name_hash_lower
p26327
tp26328
I6
s(Vinsert
p26329
I42
VSimpleName: arround
p26330
tp26331
I1
s(Vinsert
p26332
I42
VSimpleName: setUseGlobalDataSourceStat
p26333
tp26334
I1
s(Vinsert
p26335
I42
VSimpleName: getTableName
p26336
tp26337
I9
s(Vinsert
p26338
I42
VSimpleName: getSelectList
p26339
tp26340
I14
s(Vinsert
p26341
I42
VSimpleName: VisitorFeature
p26342
tp26343
I4
s(Vinsert
p26344
I42
VSimpleName: dataTypes
p26345
tp26346
I2
s(Vinsert
p26347
I45
VStringLiteral: "SELECT rbi.rma_id, rbi.last_update_time\u005cn"
p26348
tp26349
I1
s(Vinsert
p26350
I42
VSimpleName: clazzName
p26351
tp26352
I1
s(Vinsert
p26353
I59
VVariableDeclarationFragment
p26354
tp26355
I4248
s(Vinsert
p26356
I40
VQualifiedName: Token.COMMA
p26357
tp26358
I11
s(Vinsert
p26359
I42
VSimpleName: incrementKeepAliveCheckCount
p26360
tp26361
I1
s(Vinsert
p26362
I40
VQualifiedName: Token.LOGGING
p26363
tp26364
I1
s(Vinsert
p26365
I42
VSimpleName: MySqlWallTest17
p26366
tp26367
I1
s(Vinsert
p26368
I42
VSimpleName: addParameter
p26369
tp26370
I5
s(Vinsert
p26371
I42
VSimpleName: resultset_hiddenColumn
p26372
tp26373
I1
s(Vinsert
p26374
I43
VSimpleType: UnsupportedOperationException
p26375
tp26376
I8
s(Vinsert
p26377
I40
VQualifiedName: JdbcConstants.TERADATA
p26378
tp26379
I2
s(Vinsert
p26380
I42
VSimpleName: MySqlUtils_1_builtin_dataTypes
p26381
tp26382
I1
s(Vinsert
p26383
I42
VSimpleName: effectRowCountUpdater
p26384
tp26385
I1
s(Vinsert
p26386
I42
VSimpleName: dataMap
p26387
tp26388
I8
s(Vinsert
p26389
I42
VSimpleName: getSearchModifier
p26390
tp26391
I1
s(Vinsert
p26392
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION s5"
p26393
tp26394
I1
s(Vinsert
p26395
I42
VSimpleName: getAttributes
p26396
tp26397
I12
s(Vinsert
p26398
I42
VSimpleName: statment3
p26399
tp26400
I1
s(Vinsert
p26401
I45
VStringLiteral: "\u005cn\u005ct\u005ctstart with tbek_code = ?"
p26402
tp26403
I1
s(Vinsert
p26404
I42
VSimpleName: getEntity
p26405
tp26406
I4
s(Vinsert
p26407
I42
VSimpleName: userSpec
p26408
tp26409
I1
s(Vinsert
p26410
I45
VStringLiteral: "/*"
p26411
tp26412
I2
s(Vinsert
p26413
I43
VSimpleType: CheckOption
p26414
tp26415
I2
s(Vinsert
p26416
I42
VSimpleName: assertNotEquals
p26417
tp26418
I1
s(Vinsert
p26419
I45
VStringLiteral: ", ?, ?)\u005cn"
p26420
tp26421
I1
s(Vinsert
p26422
I42
VSimpleName: MySqlWallTest22
p26423
tp26424
I1
s(Vinsert
p26425
I45
VStringLiteral: "\u005ct\u005c"PRI_KEY\u005c" VARCHAR2(50),\u005cn"
p26426
tp26427
I1
s(Vinsert
p26428
I42
VSimpleName: histogram_0_1
p26429
tp26430
I1
s(Vinsert
p26431
I40
VQualifiedName: com.alibaba.druid.util.Utils
p26432
tp26433
I1
s(Vinsert
p26434
I45
VStringLiteral: "\u005cn\u005ctPARTITION p3 VALUES LESS THAN (MAXVALUE)"
p26435
tp26436
I2
s(Vinsert
p26437
I43
VSimpleType: SQLForeignKeyImpl
p26438
tp26439
I1
s(Vinsert
p26440
I42
VSimpleName: desc
p26441
tp26442
I2
s(Vinsert
p26443
I42
VSimpleName: subPartitionByClause
p26444
tp26445
I1
s(Vinsert
p26446
I42
VSimpleName: listener
p26447
tp26448
I6
s(Vinsert
p26449
I42
VSimpleName: putContext
p26450
tp26451
I2
s(Vinsert
p26452
I42
VSimpleName: free
p26453
tp26454
I1
s(Vinsert
p26455
I45
VStringLiteral: " NOT BETWEEN "
p26456
tp26457
I1
s(Vinsert
p26458
I42
VSimpleName: parseLateralView
p26459
tp26460
I1
s(Vinsert
p26461
I45
VStringLiteral: " UPDATE(employee_id, salary, commission_pct)"
p26462
tp26463
I1
s(Vinsert
p26464
I45
VStringLiteral: "select * from t where id  = (3 + 5 - 2 - 1)"
p26465
tp26466
I1
s(Vinsert
p26467
I42
VSimpleName: event
p26468
tp26469
I7
s(Vinsert
p26470
I42
VSimpleName: getStatContext
p26471
tp26472
I1
s(Vinsert
p26473
I42
VSimpleName: getMemoryMXBean
p26474
tp26475
I6
s(Vinsert
p26476
I42
VSimpleName: json
p26477
tp26478
I5
s(Vinsert
p26479
I45
VStringLiteral: "jdbc:mysql://100.69.167.129:3906/"
p26480
tp26481
I1
s(Vinsert
p26482
I43
VSimpleType: MySqlAlterUserStatement
p26483
tp26484
I1
s(Vinsert
p26485
I42
VSimpleName: readFromResource
p26486
tp26487
I2
s(Vinsert
p26488
I45
VStringLiteral: "WHERE customer_id > 5000;"
p26489
tp26490
I1
s(Vinsert
p26491
I43
VSimpleType: HBaseDriver
p26492
tp26493
I8
s(Vinsert
p26494
I42
VSimpleName: BLOCK
p26495
tp26496
I1
s(Vinsert
p26497
I42
VSimpleName: constructNano
p26498
tp26499
I2
s(Vinsert
p26500
I45
VStringLiteral: "CREATE SEQUENCE \u005c"GJS_ZIXUN\u005c".\u005c"FINANCE_EXPLAIN_ID_GENERATOR\u005c" NOORDER"
p26501
tp26502
I1
s(Vinsert
p26503
I43
VSimpleType: V
p26504
tp26505
I3
s(Vinsert
p26506
I42
VSimpleName: Dimension
p26507
tp26508
I1
s(Vinsert
p26509
I42
VSimpleName: setTestWhileIdle
p26510
tp26511
I13
s(Vinsert
p26512
I42
VSimpleName: VERSION
p26513
tp26514
I1
s(Vinsert
p26515
I45
VStringLiteral: "<table cellpadding='5' cellspacing='1' width='99%'>"
p26516
tp26517
I2
s(Vinsert
p26518
I45
VStringLiteral: "\u005ct\u005ctDBMS_OUTPUT.PUT_LINE(SQLERRM);\u005cn"
p26519
tp26520
I1
s(Vinsert
p26521
I42
VSimpleName: charValue
p26522
tp26523
I1
s(Vinsert
p26524
I45
VStringLiteral: "\u005cn\u005ct, roles, register_date"
p26525
tp26526
I2
s(Vinsert
p26527
I45
VStringLiteral: "1"
p26528
tp26529
I7
s(Vinsert
p26530
I40
VQualifiedName: JdbcUtils.MYSQL
p26531
tp26532
I9
s(Vinsert
p26533
I45
VStringLiteral: "FROM times t, sales s, customers c\u005cn"
p26534
tp26535
I1
s(Vinsert
p26536
I45
VStringLiteral: "select *\u005cn"
p26537
tp26538
I1
s(Vinsert
p26539
I45
VStringLiteral: "\u005ct\u005ctUNION ALL\u005cn"
p26540
tp26541
I1
s(Vinsert
p26542
I45
VStringLiteral: "\u005ctTYPE varchar(20)\u005cn"
p26543
tp26544
I1
s(Vinsert
p26545
I42
VSimpleName: parseStatement
p26546
tp26547
I18
s(Vinsert
p26548
I42
VSimpleName: ownerName
p26549
tp26550
I2
s(Vinsert
p26551
I43
VSimpleType: ProfileEntryKey
p26552
tp26553
I1
s(Vinsert
p26554
I42
VSimpleName: conditions
p26555
tp26556
I2
s(Vinsert
p26557
I40
VQualifiedName: MySqlRenameTableStatement.Item
p26558
tp26559
I7
s(Vinsert
p26560
I43
VSimpleType: SQLReleaseSavePointStatement
p26561
tp26562
I2
s(Vinsert
p26563
I42
VSimpleName: SQLCallStatement
p26564
tp26565
I2
s(Vinsert
p26566
I42
VSimpleName: getPartitionCount
p26567
tp26568
I2
s(Vinsert
p26569
I42
VSimpleName: getExecuteMillisMax
p26570
tp26571
I1
s(Vinsert
p26572
I45
VStringLiteral: "UPDATE m_sql_const SET flag = 1, value2 = ? WHERE id = ?"
p26573
tp26574
I1
s(Vinsert
p26575
I45
VStringLiteral: "\u005ctAND ta -> 'taAge' ?| '{  \u005cn"
p26576
tp26577
I2
s(Vinsert
p26578
I40
VQualifiedName: MySqlLexer.DEFAULT_MYSQL_KEYWORDS
p26579
tp26580
I1
s(Vinsert
p26581
I42
VSimpleName: totalLen
p26582
tp26583
I1
s(Vinsert
p26584
I45
VStringLiteral: " where rownum <= 30"
p26585
tp26586
I1
s(Vinsert
p26587
I45
VStringLiteral: "jdbc:druid-hbase:10.20.153.63"
p26588
tp26589
I1
s(Vinsert
p26590
I45
VStringLiteral: "parse error. detail message is :\u005cn"
p26591
tp26592
I1
s(Vinsert
p26593
I42
VSimpleName: getDataSources
p26594
tp26595
I6
s(Vinsert
p26596
I40
VQualifiedName: Token.REPLACE
p26597
tp26598
I2
s(Vinsert
p26599
I42
VSimpleName: MAX_RETRY
p26600
tp26601
I2
s(Vinsert
p26602
I42
VSimpleName: fnv_64_lower
p26603
tp26604
I12
s(Vinsert
p26605
I42
VSimpleName: createStruct
p26606
tp26607
I1
s(Vinsert
p26608
I45
VStringLiteral: "\u005ctSELECT order_total\u005cn"
p26609
tp26610
I1
s(Vinsert
p26611
I42
VSimpleName: withTimeZone
p26612
tp26613
I2
s(Vinsert
p26614
I42
VSimpleName: readerOpenCount
p26615
tp26616
I2
s(Vinsert
p26617
I42
VSimpleName: webAppStats
p26618
tp26619
I1
s(Vinsert
p26620
I42
VSimpleName: setMaxOpenPreparedStatements
p26621
tp26622
I2
s(Vinsert
p26623
I43
VSimpleType: HiveASTVisitor
p26624
tp26625
I3
s(Vinsert
p26626
I45
VStringLiteral: "XOR"
p26627
tp26628
I2
s(Vinsert
p26629
I45
VStringLiteral: "CREATE OR REPLEACE TRIGGER projects_idt\u005cn"
p26630
tp26631
I1
s(Vinsert
p26632
I42
VSimpleName: EvalIsNullTest
p26633
tp26634
I1
s(Vinsert
p26635
I45
VStringLiteral: "\u005ct\u005ctTABLESPACE \u005c"APPDATA1M\u005c"\u005cn"
p26636
tp26637
I1
s(Vinsert
p26638
I42
VSimpleName: DruidStatServiceUtils
p26639
tp26640
I1
s(Vinsert
p26641
I45
VStringLiteral: "syntax error, expect READ or WRITE, actual "
p26642
tp26643
I1
s(Vinsert
p26644
I45
VStringLiteral: "update"
p26645
tp26646
I1
s(Vinsert
p26647
I42
VSimpleName: compareToIgnoreCase
p26648
tp26649
I3
s(Vinsert
p26650
I45
VStringLiteral: "\u005cnFROM (SELECT *"
p26651
tp26652
I2
s(Vinsert
p26653
I42
VSimpleName: MySqlCreateServerStatement
p26654
tp26655
I1
s(Vinsert
p26656
I43
VSimpleType: OracleFunctionDataType
p26657
tp26658
I4
s(Vinsert
p26659
I42
VSimpleName: reuseSettings
p26660
tp26661
I2
s(Vinsert
p26662
I40
VQualifiedName: other.query
p26663
tp26664
I1
s(Vinsert
p26665
I43
VSimpleType: SQLCreateFunctionStatement
p26666
tp26667
I2
s(Vinsert
p26668
I45
VStringLiteral: "\u005ct) t ON t.regid = supReg.regid \u005cn"
p26669
tp26670
I1
s(Vinsert
p26671
I45
VStringLiteral: "ADD STATISTIC tbl_shop COLUMN_SUM shop_name"
p26672
tp26673
I1
s(Vinsert
p26674
I42
VSimpleName: setResultSetConcurrency
p26675
tp26676
I1
s(Vinsert
p26677
I45
VStringLiteral: "\u005ctOR job_id = 'ST_CLERK'\u005cn"
p26678
tp26679
I1
s(Vinsert
p26680
I43
VSimpleType: TeradataOutputVisitor
p26681
tp26682
I2
s(Vinsert
p26683
I42
VSimpleName: SQLQueryExpr
p26684
tp26685
I10
s(Vinsert
p26686
I42
VSimpleName: getReaderContext
p26687
tp26688
I1
s(Vinsert
p26689
I45
VStringLiteral: " select * from brandinfo where 1=1 and brandid > 100 order by brandid asc"
p26690
tp26691
I1
s(Vinsert
p26692
I42
VSimpleName: data1
p26693
tp26694
I2
s(Vinsert
p26695
I42
VSimpleName: test_random
p26696
tp26697
I1
s(Vinsert
p26698
I42
VSimpleName: test_setBytes
p26699
tp26700
I1
s(Vinsert
p26701
I45
VStringLiteral: "ConnectionCount_Alive_6_12_Hours"
p26702
tp26703
I1
s(Vinsert
p26704
I42
VSimpleName: isTestOnBorrow
p26705
tp26706
I2
s(Vinsert
p26707
I45
VStringLiteral: "\u005cn\u005ct\u005ctSTART WITH tbek_code = ?"
p26708
tp26709
I1
s(Vinsert
p26710
I45
VStringLiteral: "select * from `user_0000` `user`"
p26711
tp26712
I1
s(Vinsert
p26713
I42
VSimpleName: pattIdxStart
p26714
tp26715
I1
s(Vinsert
p26716
I42
VSimpleName: uriStat
p26717
tp26718
I3
s(Vinsert
p26719
I42
VSimpleName: setObject
p26720
tp26721
I3
s(Vinsert
p26722
I42
VSimpleName: reader
p26723
tp26724
I8
s(Vinsert
p26725
I42
VSimpleName: testDB2
p26726
tp26727
I1
s(Vinsert
p26728
I45
VStringLiteral: "\u005cn\u005ctPARTITION asia VALUES ('CHINA', 'THAILAND'), "
p26729
tp26730
I2
s(Vinsert
p26731
I42
VSimpleName: getMapping
p26732
tp26733
I3
s(Vinsert
p26734
I42
VSimpleName: connection_getMetaData
p26735
tp26736
I1
s(Vinsert
p26737
I45
VStringLiteral: "dbType"
p26738
tp26739
I1
s(Vinsert
p26740
I45
VStringLiteral: "isnull"
p26741
tp26742
I1
s(Vinsert
p26743
I42
VSimpleName: getTriggerType
p26744
tp26745
I2
s(Vinsert
p26746
I42
VSimpleName: OdpsShowPartitionsStmt
p26747
tp26748
I1
s(Vinsert
p26749
I45
VStringLiteral: "   and not exists (select 1 from M where code = v.code)\u005cn"
p26750
tp26751
I1
s(Vinsert
p26752
I42
VSimpleName: alias2
p26753
tp26754
I1
s(Vinsert
p26755
I42
VSimpleName: incrementFunctionInvoke
p26756
tp26757
I1
s(Vinsert
p26758
I42
VSimpleName: OracleWallTest
p26759
tp26760
I1
s(Vinsert
p26761
I43
VSimpleType: MySqlShowPluginsStatement
p26762
tp26763
I3
s(Vinsert
p26764
I45
VStringLiteral: "\u005ct\u005ct\u005ctSELECT STR\u005cn"
p26765
tp26766
I1
s(Vinsert
p26767
I42
VSimpleName: variantIndex
p26768
tp26769
I1
s(Vinsert
p26770
I45
VStringLiteral: "CREATE TABLE KTV.ALI_KTV_LEADS_AREA_FIX_TBD (\u005cn"
p26771
tp26772
I1
s(Vinsert
p26773
I42
VSimpleName: columnName
p26774
tp26775
I21
s(Vinsert
p26776
I74
VParameterizedType: SwingWorker<Object,Object>
p26777
tp26778
I1
s(Vinsert
p26779
I42
VSimpleName: foot
p26780
tp26781
I2
s(Vinsert
p26782
I42
VSimpleName: setLockOption
p26783
tp26784
I1
s(Vinsert
p26785
I42
VSimpleName: showTables
p26786
tp26787
I2
s(Vinsert
p26788
I42
VSimpleName: AsOfFlashbackQueryClause
p26789
tp26790
I3
s(Vinsert
p26791
I42
VSimpleName: getOSWindows8Count
p26792
tp26793
I1
s(Vinsert
p26794
I42
VSimpleName: columnDef
p26795
tp26796
I1
s(Vinsert
p26797
I45
VStringLiteral: "Profiles"
p26798
tp26799
I1
s(Vinsert
p26800
I45
VStringLiteral: "FOR UPDATE(rbi.rma_id)"
p26801
tp26802
I1
s(Vinsert
p26803
I45
VStringLiteral: "\u005ct\u005ct\u005ctAND st_intersects(st_transform(ST_GeomFromText(?, 4326), 26986), st_transform(polygon, 26986))\u005cn"
p26804
tp26805
I1
s(Vinsert
p26806
I42
VSimpleName: getExceptionSorterClassName
p26807
tp26808
I2
s(Vinsert
p26809
I45
VStringLiteral: "\u005cn\u005ctstore_id INT"
p26810
tp26811
I1
s(Vinsert
p26812
I45
VStringLiteral: "where runoob_id = 3;"
p26813
tp26814
I2
s(Vinsert
p26815
I45
VStringLiteral: "META-INF/druid-filter-wall-permit-schema-oracle-default.txt"
p26816
tp26817
I1
s(Vinsert
p26818
I42
VSimpleName: callerFQCN
p26819
tp26820
I2
s(Vinsert
p26821
I45
VStringLiteral: "\u005ctc_int int(11),\u005cn"
p26822
tp26823
I2
s(Vinsert
p26824
I42
VSimpleName: SQLAlterViewStatement
p26825
tp26826
I1
s(Vinsert
p26827
I42
VSimpleName: getKeyOrIndex
p26828
tp26829
I1
s(Vinsert
p26830
I42
VSimpleName: isValidateSqlServer
p26831
tp26832
I8
s(Vinsert
p26833
I42
VSimpleName: paramsArray
p26834
tp26835
I1
s(Vinsert
p26836
I42
VSimpleName: parseDropProcedure
p26837
tp26838
I1
s(Vinsert
p26839
I42
VSimpleName: setText
p26840
tp26841
I1
s(Vinsert
p26842
I42
VSimpleName: MultiDataSource
p26843
tp26844
I1
s(Vinsert
p26845
I45
VStringLiteral: "StatementExecuteCount_10_30_Minutes"
p26846
tp26847
I1
s(Vinsert
p26848
I42
VSimpleName: hasUnorderedLimit
p26849
tp26850
I5
s(Vinsert
p26851
I45
VStringLiteral: "bfile"
p26852
tp26853
I1
s(Vinsert
p26854
I42
VSimpleName: setResultSetHoldability
p26855
tp26856
I1
s(Vinsert
p26857
I42
VSimpleName: OdpsSchemaStatVisitor
p26858
tp26859
I6
s(Vinsert
p26860
I42
VSimpleName: binaryOpExpr
p26861
tp26862
I20
s(Vinsert
p26863
I45
VStringLiteral: "order by department_id, \u005cn"
p26864
tp26865
I1
s(Vinsert
p26866
I45
VStringLiteral: "number(*)"
p26867
tp26868
I1
s(Vinsert
p26869
I42
VSimpleName: test_instance
p26870
tp26871
I1
s(Vinsert
p26872
I42
VSimpleName: content
p26873
tp26874
I9
s(Vinsert
p26875
I45
VStringLiteral: "DefaultAutoCommit"
p26876
tp26877
I1
s(Vinsert
p26878
I42
VSimpleName: ENGINE
p26879
tp26880
I2
s(Vinsert
p26881
I42
VSimpleName: afterSemi
p26882
tp26883
I1
s(Vinsert
p26884
I40
VQualifiedName: ErrorCode.EVIL_HINTS
p26885
tp26886
I2
s(Vinsert
p26887
I42
VSimpleName: indexFrom
p26888
tp26889
I2
s(Vinsert
p26890
I42
VSimpleName: getRuntimeMXBean
p26891
tp26892
I1
s(Vinsert
p26893
I42
VSimpleName: OracleOutputVisitor
p26894
tp26895
I8
s(Vinsert
p26896
I42
VSimpleName: wallStatValue
p26897
tp26898
I1
s(Vinsert
p26899
I42
VSimpleName: setAllowDoPrivileged
p26900
tp26901
I1
s(Vinsert
p26902
I42
VSimpleName: test_adapter
p26903
tp26904
I1
s(Vinsert
p26905
I42
VSimpleName: getSimpleName
p26906
tp26907
I9
s(Vinsert
p26908
I42
VSimpleName: line
p26909
tp26910
I1
s(Vinsert
p26911
I40
VQualifiedName: FnvHash.Constants.DEFERRABLE
p26912
tp26913
I2
s(Vinsert
p26914
I42
VSimpleName: registerFunction
p26915
tp26916
I1
s(Vinsert
p26917
I42
VSimpleName: nextToken
p26918
tp26919
I363
s(Vinsert
p26920
I40
VQualifiedName: com.alibaba.druid.sql.ast.SQLExprImpl
p26921
tp26922
I1
s(Vinsert
p26923
I45
VStringLiteral: "\u005ctgroup by t1.uid, \u005cn"
p26924
tp26925
I1
s(Vinsert
p26926
I45
VStringLiteral: "select split(val, ',')[1] from dual"
p26927
tp26928
I1
s(Vinsert
p26929
I45
VStringLiteral: "alter table sale_detail set comment 'new coments for table sale_detail';"
p26930
tp26931
I1
s(Vinsert
p26932
I74
VParameterizedType: ArrayList<SQLExpr>
p26933
tp26934
I3
s(Vinsert
p26935
I42
VSimpleName: qualifier
p26936
tp26937
I2
s(Vinsert
p26938
I45
VStringLiteral: "ORGANIZATION EXTERNAL (\u005cn"
p26939
tp26940
I1
s(Vinsert
p26941
I42
VSimpleName: OracleDatetimeExpr
p26942
tp26943
I3
s(Vinsert
p26944
I42
VSimpleName: isStatementLogErrorEnabled
p26945
tp26946
I1
s(Vinsert
p26947
I42
VSimpleName: iface
p26948
tp26949
I38
s(Vinsert
p26950
I45
VStringLiteral: "\u005ctvalue5"
p26951
tp26952
I1
s(Vinsert
p26953
I45
VStringLiteral: "\u005ct\u005ct\u005ctwhere ds = 20160920\u005cn"
p26954
tp26955
I1
s(Vinsert
p26956
I42
VSimpleName: getResultSet
p26957
tp26958
I2
s(Vinsert
p26959
I43
VSimpleType: JTable
p26960
tp26961
I1
s(Vinsert
p26962
I42
VSimpleName: MySqlWallTest9
p26963
tp26964
I1
s(Vinsert
p26965
I42
VSimpleName: methodInvokeExp
p26966
tp26967
I2
s(Vinsert
p26968
I43
VSimpleType: SQLArgument
p26969
tp26970
I1
s(Vinsert
p26971
I42
VSimpleName: containsPermitSchema
p26972
tp26973
I1
s(Vinsert
p26974
I43
VSimpleType: ResultSetMetaDataProxyImpl
p26975
tp26976
I1
s(Vinsert
p26977
I42
VSimpleName: ConnectByRoot
p26978
tp26979
I1
s(Vinsert
p26980
I45
VStringLiteral: "Socket closed"
p26981
tp26982
I1
s(Vinsert
p26983
I45
VStringLiteral: "PARTITION BY HASH (COL) (\u005cn"
p26984
tp26985
I1
s(Vinsert
p26986
I45
VStringLiteral: "\u005ct, IFNULL(size$, -1), pctfree$\u005cn"
p26987
tp26988
I1
s(Vinsert
p26989
I45
VStringLiteral: "INSERT"
p26990
tp26991
I3
s(Vinsert
p26992
I42
VSimpleName: druidDataSourceStatStrategy
p26993
tp26994
I4
s(Vinsert
p26995
I74
VParameterizedType: LinkedHashMap<String,Object>
p26996
tp26997
I10
s(Vinsert
p26998
I45
VStringLiteral: "SELECT l_suppkey AS supplier_no, SUM(l_extendedprice * (1 - l_discount)) AS total_revenue\u005cn"
p26999
tp27000
I1
s(Vinsert
p27001
I42
VSimpleName: logger
p27002
tp27003
I8
s(Vinsert
p27004
I45
VStringLiteral: "\u005cn\u005ctPARTITION p0 VALUES LESS THAN (6),"
p27005
tp27006
I2
s(Vinsert
p27007
I42
VSimpleName: nodeInfo
p27008
tp27009
I6
s(Vinsert
p27010
I45
VStringLiteral: "\u005ctFREELISTS 1\u005cn"
p27011
tp27012
I13
s(Vinsert
p27013
I42
VSimpleName: statementList
p27014
tp27015
I1095
s(Vinsert
p27016
I74
VParameterizedType: ArrayList<DataSourceInfo>
p27017
tp27018
I1
s(Vinsert
p27019
I45
VStringLiteral: "ONLY"
p27020
tp27021
I4
s(Vinsert
p27022
I45
VStringLiteral: "SHOW PROCEDURE STATUS"
p27023
tp27024
I1
s(Vinsert
p27025
I43
VSimpleType: Notification
p27026
tp27027
I2
s(Vinsert
p27028
I42
VSimpleName: parseCrateTable
p27029
tp27030
I1
s(Vinsert
p27031
I43
VSimpleType: AtomicReference
p27032
tp27033
I2
s(Vinsert
p27034
I43
VSimpleType: Entity
p27035
tp27036
I15
s(Vinsert
p27037
I43
VSimpleType: WallFilter
p27038
tp27039
I2
s(Vinsert
p27040
I42
VSimpleName: test_abs_error_1
p27041
tp27042
I3
s(Vinsert
p27043
I45
VStringLiteral: "select f1 -- aaa"
p27044
tp27045
I1
s(Vinsert
p27046
I45
VStringLiteral: "\u005cn\u005ctnls_territory VARCHAR2(30),"
p27047
tp27048
I2
s(Vinsert
p27049
I42
VSimpleName: rang
p27050
tp27051
I2
s(Vinsert
p27052
I45
VStringLiteral: "node"
p27053
tp27054
I1
s(Vinsert
p27055
I45
VStringLiteral: "ON t1.region_id = t3.region_id\u005cn"
p27056
tp27057
I1
s(Vinsert
p27058
I42
VSimpleName: moreRows
p27059
tp27060
I1
s(Vinsert
p27061
I43
VSimpleType: WallRuntimeException
p27062
tp27063
I1
s(Vinsert
p27064
I42
VSimpleName: isLinear
p27065
tp27066
I2
s(Vinsert
p27067
I45
VStringLiteral: "ALTER TABLE sale_detail"
p27068
tp27069
I1
s(Vinsert
p27070
I45
VStringLiteral: "    order by type, quantileno)"
p27071
tp27072
I1
s(Vinsert
p27073
I42
VSimpleName: parseCreatePackage
p27074
tp27075
I1
s(Vinsert
p27076
I40
VQualifiedName: Token.ALL
p27077
tp27078
I1
s(Vinsert
p27079
I42
VSimpleName: putAll
p27080
tp27081
I4
s(Vinsert
p27082
I43
VSimpleType: JdbcStatementStat
p27083
tp27084
I1
s(Vinsert
p27085
I42
VSimpleName: setSimpleExpression
p27086
tp27087
I1
s(Vinsert
p27088
I45
VStringLiteral: "\u005ctuserid VARCHAR(64),\u005cn"
p27089
tp27090
I1
s(Vinsert
p27091
I42
VSimpleName: CommunicationsException
p27092
tp27093
I1
s(Vinsert
p27094
I45
VStringLiteral: "\u005ct\u005c"IND_BY_ALL\u005c", \u005cn"
p27095
tp27096
I1
s(Vinsert
p27097
I42
VSimpleName: rsaPublicKey
p27098
tp27099
I2
s(Vinsert
p27100
I42
VSimpleName: setPooling
p27101
tp27102
I1
s(Vinsert
p27103
I45
VStringLiteral: " select * from test t"
p27104
tp27105
I2
s(Vinsert
p27106
I45
VStringLiteral: "                  from bas_unit t, bas_area us"
p27107
tp27108
I1
s(Vinsert
p27109
I42
VSimpleName: entrie
p27110
tp27111
I3
s(Vinsert
p27112
I42
VSimpleName: SQLDateExpr
p27113
tp27114
I1
s(Vinsert
p27115
I42
VSimpleName: test_getTimestamp_1
p27116
tp27117
I1
s(Vinsert
p27118
I42
VSimpleName: setMinIdle
p27119
tp27120
I9
s(Vinsert
p27121
I42
VSimpleName: isFull
p27122
tp27123
I1
s(Vinsert
p27124
I45
VStringLiteral: "LIST"
p27125
tp27126
I1
s(Vinsert
p27127
I43
VSimpleType: HiveSchemaStatVisitor
p27128
tp27129
I14
s(Vinsert
p27130
I34
VNumberLiteral: 45
p27131
tp27132
I2
s(Vinsert
p27133
I42
VSimpleName: dbLink
p27134
tp27135
I3
s(Vinsert
p27136
I45
VStringLiteral: "WHERE t.time_id = s.time_id\u005cn"
p27137
tp27138
I1
s(Vinsert
p27139
I42
VSimpleName: subQueryMap
p27140
tp27141
I1
s(Vinsert
p27142
I42
VSimpleName: stringReadLength
p27143
tp27144
I2
s(Vinsert
p27145
I43
VSimpleType: SQLBinaryOperator
p27146
tp27147
I4
s(Vinsert
p27148
I42
VSimpleName: getCompositeData
p27149
tp27150
I1
s(Vinsert
p27151
I45
VStringLiteral: "FROM tt"
p27152
tp27153
I1
s(Vinsert
p27154
I42
VSimpleName: getAbsolutePath
p27155
tp27156
I2
s(Vinsert
p27157
I45
VStringLiteral: "\u005c"SYS\u005c".SYS_TEMP_0FD9D66FD_93E068F3"
p27158
tp27159
I1
s(Vinsert
p27160
I45
VStringLiteral: "\u005ct, IS_DELETED, utl_raw.cast_to_raw(CONTRACT_PARTY) AS CONTRACT_PARTY, utl_raw.cast_to_raw(COMPANY_NAME) AS COMPANY_NAME, utl_raw.cast_to_raw(PRODUCT_TYPE) AS PRODUCT_TYPE, utl_raw.cast_to_raw(PERIOD) AS PERIOD\u005cn"
p27161
tp27162
I1
s(Vinsert
p27163
I42
VSimpleName: configFilter
p27164
tp27165
I2
s(Vinsert
p27166
I45
VStringLiteral: "EXPIRE"
p27167
tp27168
I1
s(Vinsert
p27169
I42
VSimpleName: addEntry
p27170
tp27171
I1
s(Vinsert
p27172
I45
VStringLiteral: "\u005ct\u005ct\u005ctAND ITEM.ENABLED_FLAG = 'Y'\u005cn"
p27173
tp27174
I1
s(Vinsert
p27175
I42
VSimpleName: tableStat
p27176
tp27177
I19
s(Vinsert
p27178
I43
VSimpleType: MySqlShowPrivilegesStatement
p27179
tp27180
I2
s(Vinsert
p27181
I42
VSimpleName: statemen
p27182
tp27183
I292
s(Vinsert
p27184
I42
VSimpleName: param0Value
p27185
tp27186
I7
s(Vinsert
p27187
I42
VSimpleName: pathMatcher
p27188
tp27189
I2
s(Vinsert
p27190
I42
VSimpleName: afterConnectionClose
p27191
tp27192
I1
s(Vinsert
p27193
I42
VSimpleName: getErrorCount
p27194
tp27195
I9
s(Vinsert
p27196
I42
VSimpleName: now
p27197
tp27198
I1
s(Vinsert
p27199
I45
VStringLiteral: "spring.datasource.druid.one"
p27200
tp27201
I1
s(Vinsert
p27202
I42
VSimpleName: qualify
p27203
tp27204
I3
s(Vinsert
p27205
I42
VSimpleName: rawSql
p27206
tp27207
I1
s(Vinsert
p27208
I42
VSimpleName: subViewName
p27209
tp27210
I1
s(Vinsert
p27211
I45
VStringLiteral: "select c1 from t1 t where t.c2=1 and (t.c3=1 or t.c3=5)"
p27212
tp27213
I1
s(Vinsert
p27214
I42
VSimpleName: OracleWallTest1
p27215
tp27216
I1
s(Vinsert
p27217
I42
VSimpleName: test_log4jdbc_mysql
p27218
tp27219
I1
s(Vinsert
p27220
I45
VStringLiteral: "user0_.login_name as login3_0_, user0_.name as name0_, "
p27221
tp27222
I1
s(Vinsert
p27223
I42
VSimpleName: getOnUpdate
p27224
tp27225
I2
s(Vinsert
p27226
I45
VStringLiteral: "\u005cn"
p27227
tp27228
I8
s(Vinsert
p27229
I42
VSimpleName: comp
p27230
tp27231
I1
s(Vinsert
p27232
I42
VSimpleName: getFirstQueryBlock
p27233
tp27234
I6
s(Vinsert
p27235
I42
VSimpleName: len
p27236
tp27237
I7
s(Vinsert
p27238
I43
VSimpleType: NClobProxy
p27239
tp27240
I1
s(Vinsert
p27241
I42
VSimpleName: getUsing
p27242
tp27243
I11
s(Vinsert
p27244
I42
VSimpleName: OracleUnique
p27245
tp27246
I2
s(Vinsert
p27247
I42
VSimpleName: clearDefines
p27248
tp27249
I1
s(Vinsert
p27250
I45
VStringLiteral: "syntax error, expect TABLES or TABLE, actual "
p27251
tp27252
I1
s(Vinsert
p27253
I42
VSimpleName: HttpSession
p27254
tp27255
I1
s(Vinsert
p27256
I43
VSimpleType: java.sql.Time
p27257
tp27258
I4
s(Vinsert
p27259
I42
VSimpleName: getValidationQuery
p27260
tp27261
I3
s(Vinsert
p27262
I45
VStringLiteral: "Unable to resolve pingDatabase method:"
p27263
tp27264
I1
s(Vinsert
p27265
I42
VSimpleName: isWithReadLock
p27266
tp27267
I1
s(Vinsert
p27268
I45
VStringLiteral: "\u005ct\u005ctLOCATION ('retl-table.cfg')\u005cn"
p27269
tp27270
I1
s(Vinsert
p27271
I45
VStringLiteral: "? between 1 and 3"
p27272
tp27273
I1
s(Vinsert
p27274
I42
VSimpleName: createClob
p27275
tp27276
I2
s(Vinsert
p27277
I45
VStringLiteral: "create table"
p27278
tp27279
I1
s(Vinsert
p27280
I40
VQualifiedName: Token.DAY
p27281
tp27282
I1
s(Vinsert
p27283
I42
VSimpleName: data2
p27284
tp27285
I1
s(Vinsert
p27286
I42
VSimpleName: toSQLExpr
p27287
tp27288
I12
s(Vinsert
p27289
I40
VQualifiedName: Token.BETWEEN
p27290
tp27291
I1
s(Vinsert
p27292
I42
VSimpleName: EvalMethodTest_substring_2
p27293
tp27294
I1
s(Vinsert
p27295
I45
VStringLiteral: "\u005cnCREATE TABLE `item_similarity` ("
p27296
tp27297
I1
s(Vinsert
p27298
I43
VSimpleType: String
p27299
tp27300
I825
s(Vinsert
p27301
I42
VSimpleName: setUsing
p27302
tp27303
I6
s(Vinsert
p27304
I42
VSimpleName: conditionExpr
p27305
tp27306
I1
s(Vinsert
p27307
I42
VSimpleName: c1
p27308
tp27309
I3
s(Vinsert
p27310
I42
VSimpleName: evictList
p27311
tp27312
I2
s(Vinsert
p27313
I45
VStringLiteral: " FOREIGN DATA WRAPPER "
p27314
tp27315
I1
s(Vinsert
p27316
I45
VStringLiteral: "cacheServerConfiguration"
p27317
tp27318
I1
s(Vinsert
p27319
I42
VSimpleName: RETRY_COUNT
p27320
tp27321
I1
s(Vinsert
p27322
I42
VSimpleName: parseCase
p27323
tp27324
I1
s(Vinsert
p27325
I42
VSimpleName: OdpsLexer
p27326
tp27327
I3
s(Vinsert
p27328
I43
VSimpleType: Xid
p27329
tp27330
I3
s(Vinsert
p27331
I42
VSimpleName: extract
p27332
tp27333
I3
s(Vinsert
p27334
I42
VSimpleName: Calendar
p27335
tp27336
I2
s(Vinsert
p27337
I45
VStringLiteral: "synonym "
p27338
tp27339
I1
s(Vinsert
p27340
I42
VSimpleName: isSubPartition
p27341
tp27342
I1
s(Vinsert
p27343
I42
VSimpleName: refactor
p27344
tp27345
I9
s(Vinsert
p27346
I42
VSimpleName: itemStmt
p27347
tp27348
I1
s(Vinsert
p27349
I42
VSimpleName: statDataList
p27350
tp27351
I1
s(Vinsert
p27352
I42
VSimpleName: nvl
p27353
tp27354
I1
s(Vinsert
p27355
I43
VSimpleType: MySqlTableIndex
p27356
tp27357
I2
s(Vinsert
p27358
I45
VStringLiteral: "AREA_ID"
p27359
tp27360
I1
s(Vinsert
p27361
I42
VSimpleName: getChars
p27362
tp27363
I1
s(Vinsert
p27364
I43
VSimpleType: oracle.jdbc.OraclePreparedStatement
p27365
tp27366
I3
s(Vinsert
p27367
I45
VStringLiteral: "NULL"
p27368
tp27369
I1
s(Vinsert
p27370
I45
VStringLiteral: "RS"
p27371
tp27372
I1
s(Vinsert
p27373
I42
VSimpleName: part
p27374
tp27375
I3
s(Vinsert
p27376
I42
VSimpleName: countDown
p27377
tp27378
I9
s(Vinsert
p27379
I42
VSimpleName: MySqlExprParser
p27380
tp27381
I14
s(Vinsert
p27382
I42
VSimpleName: Class
p27383
tp27384
I22
s(Vinsert
p27385
I42
VSimpleName: sort
p27386
tp27387
I8
s(Vinsert
p27388
I34
VNumberLiteral: 101
p27389
tp27390
I2
s(Vinsert
p27391
I42
VSimpleName: setObjno
p27392
tp27393
I1
s(Vinsert
p27394
I42
VSimpleName: unresolveList
p27395
tp27396
I3
s(Vinsert
p27397
I40
VQualifiedName: s.next
p27398
tp27399
I1
s(Vinsert
p27400
I45
VStringLiteral: "ResultSetLastErrorMessage"
p27401
tp27402
I1
s(Vinsert
p27403
I42
VSimpleName: isHintAllow
p27404
tp27405
I1
s(Vinsert
p27406
I45
VStringLiteral: "set xxx=aaa;--ssss"
p27407
tp27408
I2
s(Vinsert
p27409
I40
VQualifiedName: FnvHash.Constants.MERGE
p27410
tp27411
I1
s(Vinsert
p27412
I42
VSimpleName: isInfoEnabled
p27413
tp27414
I7
s(Vinsert
p27415
I42
VSimpleName: encoded
p27416
tp27417
I6
s(Vinsert
p27418
I42
VSimpleName: Override
p27419
tp27420
I337
s(Vinsert
p27421
I43
VSimpleType: MySqlOutputVisitor
p27422
tp27423
I1
s(Vinsert
p27424
I45
VStringLiteral: "\u005ct\u005ct, issync, syncdate, deptsale)\u005cn"
p27425
tp27426
I1
s(Vinsert
p27427
I42
VSimpleName: test_true_3
p27428
tp27429
I1
s(Vinsert
p27430
I45
VStringLiteral: "<tr>"
p27431
tp27432
I2
s(Vinsert
p27433
I42
VSimpleName: flush
p27434
tp27435
I1
s(Vinsert
p27436
I45
VStringLiteral: "PARALLEL 4\u005cn"
p27437
tp27438
I1
s(Vinsert
p27439
I42
VSimpleName: setSchemaObject
p27440
tp27441
I3
s(Vinsert
p27442
I42
VSimpleName: OracleBinaryDoubleExpr
p27443
tp27444
I1
s(Vinsert
p27445
I40
VQualifiedName: FileConfigLoader.SYS_PROP_CONFIG_FILE
p27446
tp27447
I1
s(Vinsert
p27448
I42
VSimpleName: getHintsSize
p27449
tp27450
I5
s(Vinsert
p27451
I38
VPrefixExpression: ++
p27452
tp27453
I88
s(Vinsert
p27454
I42
VSimpleName: WallDenyStat
p27455
tp27456
I1
s(Vinsert
p27457
I42
VSimpleName: IOException
p27458
tp27459
I9
s(Vinsert
p27460
I42
VSimpleName: d1
p27461
tp27462
I3
s(Vinsert
p27463
I42
VSimpleName: with
p27464
tp27465
I14
s(Vinsert
p27466
I45
VStringLiteral: "\u005ct\u005ct'CheckMobileConflict', \u005cn"
p27467
tp27468
I1
s(Vinsert
p27469
I42
VSimpleName: fileName
p27470
tp27471
I1
s(Vinsert
p27472
I45
VStringLiteral: "TABLESPACE \u005c"BOPSDATATS\u005c"\u005cn"
p27473
tp27474
I1
s(Vinsert
p27475
I42
VSimpleName: getID
p27476
tp27477
I2
s(Vinsert
p27478
I42
VSimpleName: LocalXAConnectionFactory
p27479
tp27480
I1
s(Vinsert
p27481
I42
VSimpleName: setTestOnReturn
p27482
tp27483
I6
s(Vinsert
p27484
I42
VSimpleName: line0
p27485
tp27486
I1
s(Vinsert
p27487
I42
VSimpleName: getDataSourceStat
p27488
tp27489
I16
s(Vinsert
p27490
I43
VSimpleType: OracleExceptionSorter
p27491
tp27492
I3
s(Vinsert
p27493
I74
VParameterizedType: HashMap<Long,SQLDeclareItem>
p27494
tp27495
I1
s(Vinsert
p27496
I42
VSimpleName: getResolvedTableSource
p27497
tp27498
I2
s(Vinsert
p27499
I42
VSimpleName: ExportConditions
p27500
tp27501
I6
s(Vinsert
p27502
I42
VSimpleName: OracleCreateProcedureStatement
p27503
tp27504
I1
s(Vinsert
p27505
I45
VStringLiteral: "QUEUE_ON_PK"
p27506
tp27507
I1
s(Vinsert
p27508
I42
VSimpleName: hasBeforeComment
p27509
tp27510
I3
s(Vinsert
p27511
I42
VSimpleName: getXAConnectionID
p27512
tp27513
I1
s(Vinsert
p27514
I45
VStringLiteral: "org.h2.Driver"
p27515
tp27516
I1
s(Vinsert
p27517
I26
VImportDeclaration
p27518
tp27519
I104
s(Vinsert
p27520
I45
VStringLiteral: "on"
p27521
tp27522
I1
s(Vinsert
p27523
I42
VSimpleName: getValue
p27524
tp27525
I43
s(Vinsert
p27526
I45
VStringLiteral: "\u005ct\u005ct\u005ctself.currentstr := ctx2.currentstr;\u005cn"
p27527
tp27528
I1
s(Vinsert
p27529
I42
VSimpleName: isReadOnly
p27530
tp27531
I2
s(Vinsert
p27532
I42
VSimpleName: nameCount
p27533
tp27534
I1
s(Vinsert
p27535
I42
VSimpleName: setColName
p27536
tp27537
I1
s(Vinsert
p27538
I42
VSimpleName: setNumTestsPerEvictionRun
p27539
tp27540
I1
s(Vinsert
p27541
I42
VSimpleName: isShowAllow
p27542
tp27543
I1
s(Vinsert
p27544
I42
VSimpleName: test_wrap
p27545
tp27546
I2
s(Vinsert
p27547
I42
VSimpleName: PGWallProvider
p27548
tp27549
I2
s(Vinsert
p27550
I42
VSimpleName: getSessionStat
p27551
tp27552
I1
s(Vinsert
p27553
I42
VSimpleName: filterItem
p27554
tp27555
I1
s(Vinsert
p27556
I40
VQualifiedName: MySqlShowProfileStatement.Type.CPU
p27557
tp27558
I1
s(Vinsert
p27559
I45
VStringLiteral: ") b using(buyer_nick)"
p27560
tp27561
I1
s(Vinsert
p27562
I43
VSimpleType: OracleCreateProcedureStatement
p27563
tp27564
I1
s(Vinsert
p27565
I43
VSimpleType: ProfileEntryStat
p27566
tp27567
I2
s(Vinsert
p27568
I42
VSimpleName: stmts
p27569
tp27570
I1
s(Vinsert
p27571
I43
VSimpleType: ParserException
p27572
tp27573
I37
s(Vinsert
p27574
I43
VSimpleType: HttpServletRequest
p27575
tp27576
I1
s(Vinsert
p27577
I42
VSimpleName: privateKey
p27578
tp27579
I1
s(Vinsert
p27580
I42
VSimpleName: SQLXML
p27581
tp27582
I1
s(Vinsert
p27583
I45
VStringLiteral: "\u005cn\u005ctpromo_name VARCHAR2(20),"
p27584
tp27585
I4
s(Vinsert
p27586
I45
VStringLiteral: "ESCAPED"
p27587
tp27588
I1
s(Vinsert
p27589
I21
VExpressionStatement
p27590
tp27591
I7063
s(Vinsert
p27592
I43
VSimpleType: HashSet
p27593
tp27594
I5
s(Vinsert
p27595
I45
VStringLiteral: "(supplier_id, supplier_name)\u005cn"
p27596
tp27597
I1
s(Vinsert
p27598
I42
VSimpleName: ref
p27599
tp27600
I5
s(Vinsert
p27601
I45
VStringLiteral: "\u005ctBEFORE INSERT\u005cn"
p27602
tp27603
I2
s(Vinsert
p27604
I42
VSimpleName: setStorage
p27605
tp27606
I2
s(Vinsert
p27607
I45
VStringLiteral: "\u005ct`c_date` date DEFAULT '0000-00-00' COMMENT 'date',\u005cn"
p27608
tp27609
I2
s.