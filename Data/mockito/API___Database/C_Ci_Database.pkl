(dp0
(Vinsert
p1
I42
VSimpleName: cast
p2
Vinsert
p3
I42
VSimpleName: impl
p4
tp5
I1
s(Vinsert
p6
I42
VSimpleName: valueFor
p7
Vinsert
p8
I83
VModifier: public
p9
tp10
I3
s(Vinsert
p11
I42
VSimpleName: getClassName
p12
Vinsert
p13
I40
VQualifiedName: trace.length
p14
tp15
I1
s(Vinsert
p16
I42
VSimpleName: trim
p17
Vinsert
p18
I32
VMethodInvocation
p19
tp20
I2
s(Vinsert
p21
I42
VSimpleName: merge
p22
Vinsert
p23
I43
VSimpleType: MockitoStackTraceMerger
p24
tp25
I2
s(Vinsert
p26
I42
VSimpleName: getGenericSuperclass
p27
Vinsert
p28
I32
VMethodInvocation
p29
tp30
I1
s(Vinsert
p31
I42
VSimpleName: toReturn
p32
Vinsert
p33
I39
VPrimitiveType: void
p34
tp35
I3
s(Vinsert
p36
I42
VSimpleName: read
p37
Vinsert
p38
I85
VDimension
p39
tp40
I1
s(Vinsert
p41
I42
VSimpleName: isValidReturnType
p42
Vinsert
p43
I32
VMethodInvocation
p44
tp45
I5
s(Vinsert
p46
I42
VSimpleName: isLarger
p47
Vinsert
p48
I9
VBooleanLiteral: false
p49
tp50
I1
s(Vinsert
p51
I42
VSimpleName: removeAll
p52
Vinsert
p53
I42
VSimpleName: insns
p54
tp55
I1
s(Vinsert
p56
I42
VSimpleName: framework
p57
Vinsert
p58
I42
VSimpleName: Invocation
p59
tp60
I2
s(Vinsert
p61
I42
VSimpleName: sleep
p62
Vinsert
p63
I42
VSimpleName: InvocationOnMock
p64
tp65
I1
s(g1
I42
g2
Vinsert
p66
I42
VSimpleName: MockSettingsImpl
p67
tp68
I2
s(Vinsert
p69
I42
VSimpleName: isMock
p70
Vinsert
p71
I9
VBooleanLiteral: true
p72
tp73
I1
s(Vinsert
p74
I42
VSimpleName: info
p75
Vinsert
p76
I42
VSimpleName: LOG
p77
tp78
I3
s(Vinsert
p79
I42
VSimpleName: getLocation
p80
Vinsert
p81
I7
VAssignment: +=
p82
tp83
I1
s(Vinsert
p84
I42
VSimpleName: add
p85
Vinsert
p86
I41
VReturnStatement
p87
tp88
I5
s(Vinsert
p89
I42
VSimpleName: recordInvocation
p90
Vinsert
p91
I32
VMethodInvocation
p92
tp93
I3
s(Vinsert
p94
I42
VSimpleName: initMocks
p95
Vinsert
p96
I8
VBlock
p97
tp98
I33
s(Vinsert
p99
I42
VSimpleName: getDescription
p100
Vinsert
p101
I42
VSimpleName: runnerImpl
p102
tp103
I2
s(Vinsert
p104
I42
VSimpleName: getMock
p105
Vinsert
p106
I42
VSimpleName: verificationMode
p107
tp108
I2
s(Vinsert
p109
I42
VSimpleName: currentTimeMillis
p110
Vinsert
p111
I83
VModifier: static
p112
tp113
I1
s(Vinsert
p114
I42
VSimpleName: getHandler
p115
Vinsert
p116
I42
VSimpleName: getMockitoMock
p117
tp118
I1
s(Vinsert
p119
I42
VSimpleName: getAll
p120
Vinsert
p121
I32
VMethodInvocation
p122
tp123
I1
s(Vinsert
p124
I42
VSimpleName: getIncludedFiles
p125
Vinsert
p126
I5
VArrayType: String[]
p127
tp128
I1
s(Vinsert
p129
I42
VSimpleName: getArgumentMatcherStorage
p130
Vinsert
p131
I42
VSimpleName: matcher
p132
tp133
I1
s(Vinsert
p134
I42
VSimpleName: getObjectType
p135
Vinsert
p136
I21
VExpressionStatement
p137
tp138
I1
s(Vinsert
p139
I42
VSimpleName: add
p140
Vinsert
p141
I43
VSimpleType: MockitoMatcher
p142
tp143
I1
s(Vinsert
p144
I42
VSimpleName: validateIndexWithinInvocationRange
p145
Vinsert
p146
I43
VSimpleType: Invocation
p147
tp148
I1
s(Vinsert
p149
I42
VSimpleName: longObjectReturningMethod
p150
Vinsert
p151
I14
VClassInstanceCreation
p152
tp153
I1
s(Vinsert
p154
I42
VSimpleName: getGenericType
p155
Vinsert
p156
I42
VSimpleName: generic
p157
tp158
I1
s(Vinsert
p159
I42
VSimpleName: isNotNull
p160
Vinsert
p161
I43
VSimpleType: Exception
p162
tp163
I2
s(Vinsert
p164
I42
VSimpleName: indexOf
p165
Vinsert
p166
I61
VWhileStatement
p167
tp168
I1
s(Vinsert
p169
I42
VSimpleName: overrideReturnValues
p170
Vinsert
p171
I42
VSimpleName: shouldReadConfigurationClassFromClassPath
p172
tp173
I1
s(Vinsert
p174
I42
VSimpleName: iterableArgMethod
p175
Vinsert
p176
I42
VSimpleName: iterableArgMethod
p177
tp178
I1
s(Vinsert
p179
I42
VSimpleName: isEmpty
p180
Vinsert
p181
I60
VVariableDeclarationStatement
p182
tp183
I4
s(Vinsert
p184
I42
VSimpleName: atLeast
p185
Vinsert
p186
I43
VSimpleType: VerificationMode
p187
tp188
I1
s(Vinsert
p189
I42
VSimpleName: run
p190
Vinsert
p191
I42
VSimpleName: Test
p192
tp193
I2
s(Vinsert
p194
I42
VSimpleName: verify
p195
Vinsert
p196
I42
VSimpleName: VerificationAssertionError
p197
tp198
I1
s(Vinsert
p199
I42
VSimpleName: forName
p200
Vinsert
p201
I42
VSimpleName: Callable
p202
tp203
I1
s(Vinsert
p204
I42
VSimpleName: appendWarnings
p205
Vinsert
p206
I43
VSimpleType: Failure
p207
tp208
I2
s(Vinsert
p209
I42
VSimpleName: getName
p210
Vinsert
p211
I27
VInfixExpression: &&
p212
tp213
I3
s(Vinsert
p214
I42
VSimpleName: threeArgumentMethodWithStrings
p215
Vinsert
p216
I42
VSimpleName: i
p217
tp218
I1
s(Vinsert
p219
I42
VSimpleName: getClass
p220
Vinsert
p221
I5
VArrayType: Method[]
p222
tp223
I2
s(Vinsert
p224
I42
VSimpleName: say
p225
Vinsert
p226
I42
VSimpleName: message
p227
tp228
I2
s(Vinsert
p229
I42
VSimpleName: list
p230
Vinsert
p231
I42
VSimpleName: List
p232
tp233
I1
s(Vinsert
p234
I42
VSimpleName: visitLdcInsn
p235
Vinsert
p236
I8
VBlock
p237
tp238
I1
s(Vinsert
p239
I42
VSimpleName: toByteArray
p240
Vinsert
p241
I7
VAssignment: =
p242
tp243
I1
s(g224
I42
g225
Vinsert
p244
I83
VModifier: private
p245
tp246
I1
s(Vinsert
p247
I42
VSimpleName: getMethod
p248
Vinsert
p249
I38
VPrefixExpression: !
p250
tp251
I1
s(Vinsert
p252
I42
VSimpleName: argumentsMatch
p253
Vinsert
p254
I11
VCastExpression
p255
tp256
I1
s(Vinsert
p257
I42
VSimpleName: get
p258
Vinsert
p259
I42
VSimpleName: invocationSequenceNumber
p260
tp261
I1
s(Vinsert
p262
I42
VSimpleName: getRawType
p263
Vinsert
p264
I11
VCastExpression
p265
tp266
I4
s(Vinsert
p267
I42
VSimpleName: isExplicit
p268
Vinsert
p269
I42
VSimpleName: VerificationMode
p270
tp271
I1
s(Vinsert
p272
I42
VSimpleName: getClassLoader
p273
Vinsert
p274
I33
VNullLiteral
p275
tp276
I2
s(Vinsert
p277
I42
VSimpleName: compare
p278
Vinsert
p279
I34
VNumberLiteral: 1
p280
tp281
I1
s(Vinsert
p282
I42
VSimpleName: handle
p283
Vinsert
p284
I42
VSimpleName: Throwable
p285
tp286
I1
s(Vinsert
p287
I42
VSimpleName: getMockMaker
p288
Vinsert
p289
I32
VMethodInvocation
p290
tp291
I2
s(Vinsert
p292
I42
VSimpleName: run
p293
Vinsert
p294
I43
VSimpleType: DummyTest
p295
tp296
I1
s(Vinsert
p297
I42
VSimpleName: getClass
p298
Vinsert
p299
I42
VSimpleName: SomeInterface
p300
tp301
I1
s(Vinsert
p302
I42
VSimpleName: getDeclaredFields
p303
Vinsert
p304
I42
VSimpleName: HashSet
p305
tp306
I2
s(Vinsert
p307
I42
VSimpleName: isNotNull
p308
Vinsert
p309
I42
VSimpleName: SimpleSerializationUtil
p310
tp311
I1
s(Vinsert
p312
I42
VSimpleName: nextBoolean
p313
Vinsert
p314
I32
VMethodInvocation
p315
tp316
I2
s(Vinsert
p317
I42
VSimpleName: append
p318
Vinsert
p319
I42
VSimpleName: appendTo
p320
tp321
I1
s(Vinsert
p322
I42
VSimpleName: subList
p323
Vinsert
p324
I42
VSimpleName: mock
p325
tp326
I1
s(Vinsert
p327
I42
VSimpleName: times
p328
Vinsert
p329
I54
VTryStatement
p330
tp331
I1
s(Vinsert
p332
I42
VSimpleName: endsWith
p333
Vinsert
p334
I45
VStringLiteral: "\u005cnshould be at the end of:\u005cn"
p335
tp336
I1
s(Vinsert
p337
I42
VSimpleName: println
p338
Vinsert
p339
I32
VMethodInvocation
p340
tp341
I16
s(Vinsert
p342
I42
VSimpleName: write
p343
Vinsert
p344
I8
VBlock
p345
tp346
I1
s(Vinsert
p347
I42
VSimpleName: isResolved
p348
Vinsert
p349
I40
VQualifiedName: MethodGraph.Node
p350
tp351
I1
s(Vinsert
p352
I42
VSimpleName: getStubbingArgMismatches
p353
Vinsert
p354
I41
VReturnStatement
p355
tp356
I1
s(Vinsert
p357
I42
VSimpleName: getConstructors
p358
Vinsert
p359
I42
VSimpleName: AssertionError
p360
tp361
I2
s(Vinsert
p362
I42
VSimpleName: put
p363
Vinsert
p364
I39
VPrimitiveType: void
p365
tp366
I3
s(Vinsert
p367
I42
VSimpleName: pullStubbedInvocations
p368
Vinsert
p369
I31
VMethodDeclaration
p370
tp371
I1
s(Vinsert
p372
I42
VSimpleName: doAnswer
p373
Vinsert
p374
I43
VSimpleType: StubberFoo
p375
tp376
I1
s(Vinsert
p377
I42
VSimpleName: getMockSettings
p378
Vinsert
p379
I42
VSimpleName: delegate
p380
tp381
I1
s(g56
I42
g57
Vinsert
p382
I42
VSimpleName: differentArg
p383
tp384
I2
s(Vinsert
p385
I42
VSimpleName: get
p386
Vinsert
p387
I42
VSimpleName: ticketIds
p388
tp389
I1
s(Vinsert
p390
I42
VSimpleName: getClassName
p391
Vinsert
p392
I43
VSimpleType: StringBuffer
p393
tp394
I2
s(Vinsert
p395
I42
VSimpleName: duration
p396
Vinsert
p397
I42
VSimpleName: verificationMode
p398
tp399
I1
s(Vinsert
p400
I42
VSimpleName: run
p401
Vinsert
p402
I42
VSimpleName: fromRev
p403
tp404
I1
s(Vinsert
p405
I42
VSimpleName: checkNotNull
p406
Vinsert
p407
I21
VExpressionStatement
p408
tp409
I1
s(Vinsert
p410
I42
VSimpleName: invokingWithException
p411
Vinsert
p412
I42
VSimpleName: listener
p413
tp414
I4
s(Vinsert
p415
I42
VSimpleName: getTypeToMock
p416
Vinsert
p417
I42
VSimpleName: handler
p418
tp419
I1
s(Vinsert
p420
I42
VSimpleName: getFirstUnverifiedInvocationChunk
p421
Vinsert
p422
I42
VSimpleName: InvocationsCalculator
p423
tp424
I1
s(g79
I42
g80
Vinsert
p425
I45
VStringLiteral: ". "
p426
tp427
I1
s(Vinsert
p428
I42
VSimpleName: isInstanceOf
p429
Vinsert
p430
I40
VQualifiedName: org.mockito.Mockito.withSettings
p431
tp432
I1
s(Vinsert
p433
I42
VSimpleName: when
p434
Vinsert
p435
I42
VSimpleName: unfinishedStubbingThrowsException
p436
tp437
I1
s(Vinsert
p438
I42
VSimpleName: length
p439
Vinsert
p440
I42
VSimpleName: lines
p441
tp442
I1
s(Vinsert
p443
I42
VSimpleName: copyToMock
p444
Vinsert
p445
I42
VSimpleName: to
p446
tp447
I1
s(Vinsert
p448
I42
VSimpleName: voidReturningMethod
p449
Vinsert
p450
I78
VMarkerAnnotation
p451
tp452
I1
s(Vinsert
p453
I42
VSimpleName: getLastStackTrace
p454
Vinsert
p455
I42
VSimpleName: shouldGetLastStackTrace
p456
tp457
I1
s(Vinsert
p458
I42
VSimpleName: addListener
p459
Vinsert
p460
I42
VSimpleName: Test
p461
tp462
I1
s(Vinsert
p463
I42
VSimpleName: visitLabel
p464
Vinsert
p465
I83
VModifier: final
p466
tp467
I1
s(Vinsert
p468
I42
VSimpleName: hasMoreElements
p469
Vinsert
p470
I42
VSimpleName: LinkedList
p471
tp472
I1
s(Vinsert
p473
I42
VSimpleName: setStubbingListener
p474
Vinsert
p475
I43
VSimpleType: UnnecessaryStubbingsReporter
p476
tp477
I2
s(Vinsert
p478
I42
VSimpleName: simpleMethod
p479
Vinsert
p480
I45
VStringLiteral: "bar"
p481
tp482
I2
s(Vinsert
p483
I42
VSimpleName: typeMatches
p484
Vinsert
p485
I36
VParenthesizedExpression
p486
tp487
I1
s(Vinsert
p488
I42
VSimpleName: when
p489
Vinsert
p490
I43
VSimpleType: Class
p491
tp492
I1
s(Vinsert
p493
I42
VSimpleName: oneArg
p494
Vinsert
p495
I43
VSimpleType: Character
p496
tp497
I1
s(Vinsert
p498
I42
VSimpleName: extraInterfacesDoesNotAcceptNullParameters
p499
Vinsert
p500
I42
VSimpleName: Class
p501
tp502
I1
s(Vinsert
p503
I42
VSimpleName: get
p504
Vinsert
p505
I42
VSimpleName: List
p506
tp507
I4
s(Vinsert
p508
I42
VSimpleName: run
p509
Vinsert
p510
I42
VSimpleName: previousUser
p511
tp512
I1
s(Vinsert
p513
I42
VSimpleName: iterator
p514
Vinsert
p515
I74
VParameterizedType: Iterator<T>
p516
tp517
I1
s(Vinsert
p518
I42
VSimpleName: size
p519
Vinsert
p520
I42
VSimpleName: answer
p521
tp522
I2
s(Vinsert
p523
I42
VSimpleName: load
p524
Vinsert
p525
I83
VModifier: static
p526
tp527
I1
s(Vinsert
p528
I42
VSimpleName: expect
p529
Vinsert
p530
I42
VSimpleName: callAsyncWithDelay
p531
tp532
I2
s(Vinsert
p533
I42
VSimpleName: get
p534
Vinsert
p535
I42
VSimpleName: put
p536
tp537
I1
s(Vinsert
p538
I42
VSimpleName: getMessage
p539
Vinsert
p540
I42
VSimpleName: MockitoException
p541
tp542
I9
s(Vinsert
p543
I42
VSimpleName: getEnclosingClass
p544
Vinsert
p545
I42
VSimpleName: join
p546
tp547
I1
s(Vinsert
p548
I42
VSimpleName: getExtraInterfaces
p549
Vinsert
p550
I42
VSimpleName: settings
p551
tp552
I2
s(Vinsert
p553
I42
VSimpleName: getCause
p554
Vinsert
p555
I45
VStringLiteral: "    \u005c"this is very long string\u005c","
p556
tp557
I1
s(Vinsert
p558
I42
VSimpleName: put
p559
Vinsert
p560
I45
VStringLiteral: "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider"
p561
tp562
I1
s(Vinsert
p563
I42
VSimpleName: getClass
p564
Vinsert
p565
I34
VNumberLiteral: 0
p566
tp567
I4
s(Vinsert
p568
I42
VSimpleName: process
p569
Vinsert
p570
I43
VSimpleType: OngoingMockInjection
p571
tp572
I1
s(Vinsert
p573
I42
VSimpleName: visitTryCatchBlock
p574
Vinsert
p575
I42
VSimpleName: mv
p576
tp577
I3
s(Vinsert
p578
I42
VSimpleName: toNanos
p579
Vinsert
p580
I42
VSimpleName: TimeUnit
p581
tp582
I1
s(Vinsert
p583
I42
VSimpleName: getStackTrace
p584
Vinsert
p585
I42
VSimpleName: verify
p586
tp587
I1
s(Vinsert
p588
I42
VSimpleName: finalMethod
p589
Vinsert
p590
I42
VSimpleName: verify
p591
tp592
I1
s(Vinsert
p593
I42
VSimpleName: doReturn
p594
Vinsert
p595
I42
VSimpleName: BDDStubberImpl
p596
tp597
I1
s(Vinsert
p598
I42
VSimpleName: getMockSettings
p599
Vinsert
p600
I43
VSimpleType: Object
p601
tp602
I1
s(Vinsert
p603
I42
VSimpleName: mock
p604
Vinsert
p605
I43
VSimpleType: List
p606
tp607
I1
s(Vinsert
p608
I42
VSimpleName: visit
p609
Vinsert
p610
I14
VClassInstanceCreation
p611
tp612
I1
s(Vinsert
p613
I42
VSimpleName: getSimpleName
p614
Vinsert
p615
I42
VSimpleName: WrongTypeOfReturnValue
p616
tp617
I1
s(Vinsert
p618
I42
VSimpleName: atMost
p619
Vinsert
p620
I42
VSimpleName: verify
p621
tp622
I1
s(Vinsert
p623
I42
VSimpleName: strictMode
p624
Vinsert
p625
I27
VInfixExpression: ||
p626
tp627
I1
s(Vinsert
p628
I42
VSimpleName: getAnnotationEngine
p629
Vinsert
p630
I42
VSimpleName: DefaultMockitoConfiguration
p631
tp632
I2
s(Vinsert
p633
I42
VSimpleName: differentMethod
p634
Vinsert
p635
I8
VBlock
p636
tp637
I2
s(Vinsert
p638
I42
VSimpleName: size
p639
Vinsert
p640
I42
VSimpleName: mocks
p641
tp642
I1
s(Vinsert
p643
I42
VSimpleName: iterator
p644
Vinsert
p645
I42
VSimpleName: Test
p646
tp647
I1
s(Vinsert
p648
I42
VSimpleName: andReturn
p649
Vinsert
p650
I21
VExpressionStatement
p651
tp652
I1
s(Vinsert
p653
I42
VSimpleName: removeLast
p654
Vinsert
p655
I38
VPrefixExpression: !
p656
tp657
I1
s(Vinsert
p658
I42
VSimpleName: getBounds
p659
Vinsert
p660
I2
VArrayAccess
p661
tp662
I1
s(Vinsert
p663
I42
VSimpleName: simpleMethod
p664
Vinsert
p665
I42
VSimpleName: shouldNeverBreakMethodStringWhenNoArgsInMethod
p666
tp667
I1
s(Vinsert
p668
I42
VSimpleName: contains
p669
Vinsert
p670
I83
VModifier: private
p671
tp672
I1
s(Vinsert
p673
I42
VSimpleName: matcher
p674
Vinsert
p675
I42
VSimpleName: match
p676
tp677
I2
s(g79
I42
g80
Vinsert
p678
I27
VInfixExpression: +
p679
tp680
I2
s(Vinsert
p681
I42
VSimpleName: implementing
p682
Vinsert
p683
I85
VDimension
p684
tp685
I1
s(Vinsert
p686
I42
VSimpleName: getNameButDelegateToMethodThatThrows
p687
Vinsert
p688
I43
VSimpleType: RuntimeException
p689
tp690
I1
s(g219
I42
g220
Vinsert
p691
I42
VSimpleName: methods
p692
tp693
I2
s(Vinsert
p694
I42
VSimpleName: getAddress
p695
Vinsert
p696
I42
VSimpleName: shouldStubbingBasicallyWorkFine
p697
tp698
I1
s(Vinsert
p699
I42
VSimpleName: append
p700
Vinsert
p701
I1
VAnonymousClassDeclaration
p702
tp703
I1
s(Vinsert
p704
I42
VSimpleName: createStrictStubs
p705
Vinsert
p706
I14
VClassInstanceCreation
p707
tp708
I2
s(Vinsert
p709
I42
VSimpleName: replace
p710
Vinsert
p711
I42
VSimpleName: r
p712
tp713
I1
s(g119
I42
g120
Vinsert
p714
I42
VSimpleName: List
p715
tp716
I1
s(Vinsert
p717
I42
VSimpleName: actualTypeArguments
p718
Vinsert
p719
I42
VSimpleName: actualTypeArguments
p720
tp721
I1
s(Vinsert
p722
I42
VSimpleName: notifyVerificationStarted
p723
Vinsert
p724
I11
VCastExpression
p725
tp726
I1
s(Vinsert
p727
I42
VSimpleName: validateDefaultAnswerReturnedValue
p728
Vinsert
p729
I42
VSimpleName: AnswersValidator
p730
tp731
I1
s(Vinsert
p732
I42
VSimpleName: isVerified
p733
Vinsert
p734
I42
VSimpleName: isUnverified
p735
tp736
I2
s(Vinsert
p737
I42
VSimpleName: valueFor
p738
Vinsert
p739
I42
VSimpleName: defaultValueFor
p740
tp741
I2
s(Vinsert
p742
I42
VSimpleName: addAll
p743
Vinsert
p744
I42
VSimpleName: mocks
p745
tp746
I1
s(Vinsert
p747
I42
VSimpleName: forClass
p748
Vinsert
p749
I42
VSimpleName: String
p750
tp751
I1
s(g89
I42
g90
Vinsert
p752
I42
VSimpleName: InvocationBuilder
p753
tp754
I1
s(Vinsert
p755
I42
VSimpleName: isAssignableFrom
p756
Vinsert
p757
I42
VSimpleName: Object
p758
tp759
I1
s(Vinsert
p760
I42
VSimpleName: getTestHeader
p761
Vinsert
p762
I32
VMethodInvocation
p763
tp764
I1
s(Vinsert
p765
I42
VSimpleName: checkForWrongNumberOfInvocations
p766
Vinsert
p767
I78
VMarkerAnnotation
p768
tp769
I1
s(Vinsert
p770
I42
VSimpleName: isVerified
p771
Vinsert
p772
I42
VSimpleName: invocation
p773
tp774
I5
s(g94
I42
g95
Vinsert
p775
I45
VStringLiteral: "You should augment the visibility of this inner class"
p776
tp777
I1
s(Vinsert
p778
I42
VSimpleName: visitField
p779
Vinsert
p780
I8
VBlock
p781
tp782
I1
s(Vinsert
p783
I42
VSimpleName: find
p784
Vinsert
p785
I42
VSimpleName: find
p786
tp787
I1
s(Vinsert
p788
I42
VSimpleName: visitInnerClass
p789
Vinsert
p790
I83
VModifier: final
p791
tp792
I1
s(g239
I42
g240
Vinsert
p793
I42
VSimpleName: out
p794
tp795
I1
s(Vinsert
p796
I42
VSimpleName: invokeMethod
p797
Vinsert
p798
I42
VSimpleName: Object
p799
tp800
I2
s(Vinsert
p801
I42
VSimpleName: appendList
p802
Vinsert
p803
I42
VSimpleName: result
p804
tp805
I4
s(Vinsert
p806
I42
VSimpleName: getMethods
p807
Vinsert
p808
I5
VArrayType: Method[]
p809
tp810
I1
s(Vinsert
p811
I42
VSimpleName: getModifiers
p812
Vinsert
p813
I42
VSimpleName: isFinal
p814
tp815
I1
s(Vinsert
p816
I42
VSimpleName: assertMocksNotEmpty
p817
Vinsert
p818
I42
VSimpleName: MockitoCore
p819
tp820
I5
s(Vinsert
p821
I42
VSimpleName: getMethod
p822
Vinsert
p823
I42
VSimpleName: registeredInvocation
p824
tp825
I1
s(Vinsert
p826
I42
VSimpleName: isVerified
p827
Vinsert
p828
I44
VSingleVariableDeclaration
p829
tp830
I4
s(Vinsert
p831
I42
VSimpleName: findStrictlyUnverifiedInvocations
p832
Vinsert
p833
I43
VSimpleType: List
p834
tp835
I1
s(Vinsert
p836
I42
VSimpleName: setMock
p837
Vinsert
p838
I42
VSimpleName: Set
p839
tp840
I1
s(Vinsert
p841
I42
VSimpleName: stubber
p842
Vinsert
p843
I42
VSimpleName: toBeReturnedNext
p844
tp845
I1
s(Vinsert
p846
I42
VSimpleName: toInvocation
p847
Vinsert
p848
I41
VReturnStatement
p849
tp850
I1
s(Vinsert
p851
I42
VSimpleName: setCustomReturnValues
p852
Vinsert
p853
I42
VSimpleName: foo
p854
tp855
I1
s(Vinsert
p856
I42
VSimpleName: hashCode
p857
Vinsert
p858
I7
VAssignment: =
p859
tp860
I1
s(Vinsert
p861
I42
VSimpleName: join
p862
Vinsert
p863
I45
VStringLiteral: " - b"
p864
tp865
I1
s(Vinsert
p866
I42
VSimpleName: verify
p867
Vinsert
p868
I42
VSimpleName: verifier
p869
tp870
I9
s(Vinsert
p871
I42
VSimpleName: wasUsed
p872
Vinsert
p873
I42
VSimpleName: Stubbing
p874
tp875
I2
s(Vinsert
p876
I42
VSimpleName: findAllMatchingUnverifiedChunks
p877
Vinsert
p878
I32
VMethodInvocation
p879
tp880
I3
s(Vinsert
p881
I42
VSimpleName: nameForMock
p882
Vinsert
p883
I42
VSimpleName: invocation
p884
tp885
I1
s(Vinsert
p886
I42
VSimpleName: resolveGenericReturnType
p887
Vinsert
p888
I42
VSimpleName: NoSuchMethodException
p889
tp890
I1
s(Vinsert
p891
I42
VSimpleName: toString
p892
Vinsert
p893
I43
VSimpleType: NeverWantedButInvoked
p894
tp895
I1
s(Vinsert
p896
I42
VSimpleName: toByteArray
p897
Vinsert
p898
I42
VSimpleName: ClassNotFoundException
p899
tp900
I2
s(Vinsert
p901
I42
VSimpleName: getInvocationListener
p902
Vinsert
p903
I32
VMethodInvocation
p904
tp905
I1
s(Vinsert
p906
I42
VSimpleName: isPrivate
p907
Vinsert
p908
I76
VWildcardType: ?
p909
tp910
I2
s(Vinsert
p911
I42
VSimpleName: twoArgumentMethod
p912
Vinsert
p913
I42
VSimpleName: mock
p914
tp915
I3
s(Vinsert
p916
I42
VSimpleName: createMockFor
p917
Vinsert
p918
I42
VSimpleName: Object
p919
tp920
I1
s(Vinsert
p921
I42
VSimpleName: wasUsed
p922
Vinsert
p923
I59
VVariableDeclarationFragment
p924
tp925
I1
s(Vinsert
p926
I42
VSimpleName: getStackTrace
p927
Vinsert
p928
I42
VSimpleName: targetType
p929
tp930
I1
s(Vinsert
p931
I42
VSimpleName: name
p932
Vinsert
p933
I43
VSimpleType: AbstractThing
p934
tp935
I2
s(Vinsert
p936
I42
VSimpleName: visitVarInsn
p937
Vinsert
p938
I42
VSimpleName: mv
p939
tp940
I2
s(Vinsert
p941
I42
VSimpleName: mockClass
p942
Vinsert
p943
I42
VSimpleName: Class
p944
tp945
I1
s(Vinsert
p946
I42
VSimpleName: isMultiline
p947
Vinsert
p948
I43
VSimpleType: MatchersPrinter
p949
tp950
I2
s(Vinsert
p951
I42
VSimpleName: mockedTypeIsInconsistentWithDelegatedInstanceType
p952
Vinsert
p953
I42
VSimpleName: classToMock
p954
tp955
I1
s(Vinsert
p956
I42
VSimpleName: throwsException
p957
Vinsert
p958
I14
VClassInstanceCreation
p959
tp960
I1
s(Vinsert
p961
I42
VSimpleName: set
p962
Vinsert
p963
I54
VTryStatement
p964
tp965
I1
s(Vinsert
p966
I42
VSimpleName: thenCallRealMethod
p967
Vinsert
p968
I43
VSimpleType: T
p969
tp970
I2
s(Vinsert
p971
I42
VSimpleName: arrayReturningMethod
p972
Vinsert
p973
I32
VMethodInvocation
p974
tp975
I5
s(Vinsert
p976
I42
VSimpleName: getMethod
p977
Vinsert
p978
I43
VSimpleType: Long
p979
tp980
I1
s(Vinsert
p981
I42
VSimpleName: forName
p982
Vinsert
p983
I43
VSimpleType: Throwable
p984
tp985
I1
s(Vinsert
p986
I42
VSimpleName: visitInsn
p987
Vinsert
p988
I42
VSimpleName: accept
p989
tp990
I1
s(Vinsert
p991
I42
VSimpleName: length
p992
Vinsert
p993
I42
VSimpleName: name
p994
tp995
I2
s(Vinsert
p996
I42
VSimpleName: mockingStarted
p997
Vinsert
p998
I42
VSimpleName: MockSettingsImpl
p999
tp1000
I1
s(Vinsert
p1001
I42
VSimpleName: add
p1002
Vinsert
p1003
I42
VSimpleName: matchingStubbings
p1004
tp1005
I2
s(Vinsert
p1006
I42
VSimpleName: toString
p1007
Vinsert
p1008
I40
VQualifiedName: filtered.length
p1009
tp1010
I1
s(Vinsert
p1011
I42
VSimpleName: wantedInvocationDiffersFromActual
p1012
Vinsert
p1013
I42
VSimpleName: ExpectedInvocation
p1014
tp1015
I1
s(g327
I42
g328
Vinsert
p1016
I42
VSimpleName: verify
p1017
tp1018
I1
s(Vinsert
p1019
I42
VSimpleName: initialize
p1020
Vinsert
p1021
I54
VTryStatement
p1022
tp1023
I1
s(Vinsert
p1024
I42
VSimpleName: read
p1025
Vinsert
p1026
I42
VSimpleName: fieldReader
p1027
tp1028
I1
s(Vinsert
p1029
I42
VSimpleName: add
p1030
Vinsert
p1031
I42
VSimpleName: argType
p1032
tp1033
I1
s(Vinsert
p1034
I42
VSimpleName: size
p1035
Vinsert
p1036
I42
VSimpleName: filtered
p1037
tp1038
I1
s(Vinsert
p1039
I42
VSimpleName: singleton
p1040
Vinsert
p1041
I42
VSimpleName: Field
p1042
tp1043
I1
s(Vinsert
p1044
I42
VSimpleName: only
p1045
Vinsert
p1046
I65
VTagElement: @return
p1047
tp1048
I1
s(Vinsert
p1049
I42
VSimpleName: getConstructor
p1050
Vinsert
p1051
I76
VWildcardType: ?
p1052
tp1053
I1
s(Vinsert
p1054
I42
VSimpleName: returnMyObject
p1055
Vinsert
p1056
I42
VSimpleName: ordinaryMock
p1057
tp1058
I1
s(Vinsert
p1059
I42
VSimpleName: getLocation
p1060
Vinsert
p1061
I42
VSimpleName: location
p1062
tp1063
I2
s(Vinsert
p1064
I42
VSimpleName: get
p1065
Vinsert
p1066
I39
VPrimitiveType: boolean
p1067
tp1068
I1
s(Vinsert
p1069
I42
VSimpleName: getFirst
p1070
Vinsert
p1071
I43
VSimpleType: Answer
p1072
tp1073
I1
s(Vinsert
p1074
I42
VSimpleName: forObject
p1075
Vinsert
p1076
I33
VNullLiteral
p1077
tp1078
I1
s(Vinsert
p1079
I42
VSimpleName: visitMultiANewArrayInsn
p1080
Vinsert
p1081
I31
VMethodDeclaration
p1082
tp1083
I1
s(g588
I42
g589
Vinsert
p1084
I42
VSimpleName: shouldSayUnfinishedVerificationButNotInvalidUseOfMatchers
p1085
tp1086
I1
s(Vinsert
p1087
I42
VSimpleName: exactNumberOfInvocationsMode
p1088
Vinsert
p1089
I42
VSimpleName: exactNumberOfInvocationsMode
p1090
tp1091
I3
s(Vinsert
p1092
I42
VSimpleName: size
p1093
Vinsert
p1094
I42
VSimpleName: wantedCount
p1095
tp1096
I1
s(g307
I42
g308
Vinsert
p1097
I21
VExpressionStatement
p1098
tp1099
I4
s(Vinsert
p1100
I42
VSimpleName: thenCallRealMethod
p1101
Vinsert
p1102
I57
VTypeLiteral
p1103
tp1104
I1
s(Vinsert
p1105
I42
VSimpleName: setTypeToMock
p1106
Vinsert
p1107
I42
VSimpleName: mockSettings
p1108
tp1109
I4
s(Vinsert
p1110
I42
VSimpleName: add
p1111
Vinsert
p1112
I36
VParenthesizedExpression
p1113
tp1114
I1
s(Vinsert
p1115
I42
VSimpleName: getClasses
p1116
Vinsert
p1117
I33
VNullLiteral
p1118
tp1119
I1
s(g826
I42
g827
Vinsert
p1120
I42
VSimpleName: candidate
p1121
tp1122
I2
s(g722
I42
g723
Vinsert
p1123
I59
VVariableDeclarationFragment
p1124
tp1125
I1
s(g26
I42
g27
Vinsert
p1126
I42
VSimpleName: currentExploredClass
p1127
tp1128
I4
s(Vinsert
p1129
I42
VSimpleName: verifyingStarted
p1130
Vinsert
p1131
I32
VMethodInvocation
p1132
tp1133
I5
s(Vinsert
p1134
I42
VSimpleName: getMock
p1135
Vinsert
p1136
I42
VSimpleName: delegateMethod
p1137
tp1138
I1
s(Vinsert
p1139
I42
VSimpleName: verify
p1140
Vinsert
p1141
I42
VSimpleName: DetectsInvalidState
p1142
tp1143
I1
s(Vinsert
p1144
I42
VSimpleName: getDeclaredConstructor
p1145
Vinsert
p1146
I43
VSimpleType: T
p1147
tp1148
I1
s(Vinsert
p1149
I42
VSimpleName: print
p1150
Vinsert
p1151
I43
VSimpleType: M
p1152
tp1153
I1
s(Vinsert
p1154
I42
VSimpleName: getMockName
p1155
Vinsert
p1156
I42
VSimpleName: mock
p1157
tp1158
I2
s(Vinsert
p1159
I42
VSimpleName: varargsbyte
p1160
Vinsert
p1161
I31
VMethodDeclaration
p1162
tp1163
I1
s(Vinsert
p1164
I42
VSimpleName: withObjectVarargs
p1165
Vinsert
p1166
I42
VSimpleName: shouldVerifyObjectVarargs
p1167
tp1168
I1
s(Vinsert
p1169
I42
VSimpleName: reset
p1170
Vinsert
p1171
I43
VSimpleType: RuntimeException
p1172
tp1173
I1
s(Vinsert
p1174
I42
VSimpleName: mock
p1175
Vinsert
p1176
I42
VSimpleName: derivedMock
p1177
tp1178
I2
s(Vinsert
p1179
I42
VSimpleName: add
p1180
Vinsert
p1181
I42
VSimpleName: methodDoesNotAcceptNullParameters
p1182
tp1183
I1
s(Vinsert
p1184
I42
VSimpleName: approximateSize
p1185
Vinsert
p1186
I39
VPrimitiveType: int
p1187
tp1188
I1
s(Vinsert
p1189
I42
VSimpleName: toReturn
p1190
Vinsert
p1191
I42
VSimpleName: shouldAcceptHamcrestMatcher
p1192
tp1193
I1
s(Vinsert
p1194
I42
VSimpleName: booleanObjectReturningMethod
p1195
Vinsert
p1196
I8
VBlock
p1197
tp1198
I1
s(Vinsert
p1199
I42
VSimpleName: equals
p1200
Vinsert
p1201
I9
VBooleanLiteral: false
p1202
tp1203
I7
s(Vinsert
p1204
I42
VSimpleName: isUp
p1205
Vinsert
p1206
I42
VSimpleName: generate_time_from_past
p1207
tp1208
I1
s(Vinsert
p1209
I42
VSimpleName: classNameForMock
p1210
Vinsert
p1211
I27
VInfixExpression: +
p1212
tp1213
I1
s(Vinsert
p1214
I42
VSimpleName: getStubbingInfo
p1215
Vinsert
p1216
I45
VStringLiteral: "[Mockito] Unused stubbing due to argument mismatch (is stubbing correct in the test?):\u005cn"
p1217
tp1218
I1
s(Vinsert
p1219
I42
VSimpleName: getMock
p1220
Vinsert
p1221
I42
VSimpleName: Stubbing
p1222
tp1223
I1
s(Vinsert
p1224
I42
VSimpleName: getClass
p1225
Vinsert
p1226
I42
VSimpleName: createInfo
p1227
tp1228
I2
s(Vinsert
p1229
I42
VSimpleName: println
p1230
Vinsert
p1231
I42
VSimpleName: set
p1232
tp1233
I1
s(Vinsert
p1234
I42
VSimpleName: getTypeToMock
p1235
Vinsert
p1236
I14
VClassInstanceCreation
p1237
tp1238
I3
s(Vinsert
p1239
I42
VSimpleName: isValidException
p1240
Vinsert
p1241
I32
VMethodInvocation
p1242
tp1243
I1
s(Vinsert
p1244
I42
VSimpleName: classes
p1245
Vinsert
p1246
I42
VSimpleName: getConfig
p1247
tp1248
I2
s(Vinsert
p1249
I42
VSimpleName: filter
p1250
Vinsert
p1251
I31
VMethodDeclaration
p1252
tp1253
I4
s(Vinsert
p1254
I42
VSimpleName: trimSuspendParameterTypes
p1255
Vinsert
p1256
I42
VSimpleName: Class
p1257
tp1258
I1
s(Vinsert
p1259
I42
VSimpleName: forEachMatcherAndArgument
p1260
Vinsert
p1261
I39
VPrimitiveType: boolean
p1262
tp1263
I1
s(Vinsert
p1264
I42
VSimpleName: build
p1265
Vinsert
p1266
I42
VSimpleName: invocation
p1267
tp1268
I1
s(Vinsert
p1269
I42
VSimpleName: getUnusedStubbings
p1270
Vinsert
p1271
I59
VVariableDeclarationFragment
p1272
tp1273
I1
s(Vinsert
p1274
I42
VSimpleName: capture
p1275
Vinsert
p1276
I59
VVariableDeclarationFragment
p1277
tp1278
I2
s(g961
I42
g962
Vinsert
p1279
I11
VCastExpression
p1280
tp1281
I1
s(Vinsert
p1282
I42
VSimpleName: rule
p1283
Vinsert
p1284
I42
VSimpleName: mockito
p1285
tp1286
I1
s(Vinsert
p1287
I42
VSimpleName: mockingStarted
p1288
Vinsert
p1289
I33
VNullLiteral
p1290
tp1291
I1
s(Vinsert
p1292
I42
VSimpleName: reportAnd
p1293
Vinsert
p1294
I83
VModifier: static
p1295
tp1296
I2
s(Vinsert
p1297
I42
VSimpleName: run
p1298
Vinsert
p1299
I45
VStringLiteral: ".callUnstubbedMethodThatQualifiesForWarning("
p1300
tp1301
I1
s(Vinsert
p1302
I42
VSimpleName: indexOfNextPair
p1303
Vinsert
p1304
I21
VExpressionStatement
p1305
tp1306
I2
s(Vinsert
p1307
I42
VSimpleName: getIt
p1308
Vinsert
p1309
I42
VSimpleName: GlobalConfiguration
p1310
tp1311
I1
s(Vinsert
p1312
I42
VSimpleName: getClassLoader
p1313
Vinsert
p1314
I57
VTypeLiteral
p1315
tp1316
I1
s(Vinsert
p1317
I42
VSimpleName: instance
p1318
Vinsert
p1319
I43
VSimpleType: InvocationOnMock
p1320
tp1321
I1
s(Vinsert
p1322
I42
VSimpleName: getJavaMethod
p1323
Vinsert
p1324
I40
VQualifiedName: org.mockito.internal.matchers.ArrayEquals
p1325
tp1326
I1
s(Vinsert
p1327
I42
VSimpleName: createMock
p1328
Vinsert
p1329
I42
VSimpleName: extraInterfacesValidated
p1330
tp1331
I1
s(Vinsert
p1332
I42
VSimpleName: genericTypeOfMatcher
p1333
Vinsert
p1334
I66
VTextElement: </pre>
p1335
tp1336
I1
s(Vinsert
p1337
I42
VSimpleName: invocationListeners
p1338
Vinsert
p1339
I57
VTypeLiteral
p1340
tp1341
I3
s(Vinsert
p1342
I42
VSimpleName: join
p1343
Vinsert
p1344
I42
VSimpleName: join_singleLine
p1345
tp1346
I1
s(Vinsert
p1347
I42
VSimpleName: getMockHandler
p1348
Vinsert
p1349
I42
VSimpleName: mock
p1350
tp1351
I5
s(Vinsert
p1352
I42
VSimpleName: setMock
p1353
Vinsert
p1354
I40
VQualifiedName: VerificationStartedNotifier.Event
p1355
tp1356
I4
s(Vinsert
p1357
I42
VSimpleName: returnValueFor
p1358
Vinsert
p1359
I42
VSimpleName: assertEquals
p1360
tp1361
I2
s(Vinsert
p1362
I42
VSimpleName: addType
p1363
Vinsert
p1364
I32
VMethodInvocation
p1365
tp1366
I3
s(Vinsert
p1367
I42
VSimpleName: answer
p1368
Vinsert
p1369
I60
VVariableDeclarationStatement
p1370
tp1371
I1
s(Vinsert
p1372
I42
VSimpleName: run
p1373
Vinsert
p1374
I57
VTypeLiteral
p1375
tp1376
I2
s(g21
I42
g22
Vinsert
p1377
I14
VClassInstanceCreation
p1378
tp1379
I1
s(Vinsert
p1380
I42
VSimpleName: getMessage
p1381
Vinsert
p1382
I45
VStringLiteral: "However, there are legit scenarios when this exception generates false negative signal:\u005cn"
p1383
tp1384
I1
s(g573
I42
g574
Vinsert
p1385
I83
VModifier: public
p1386
tp1387
I1
s(Vinsert
p1388
I42
VSimpleName: fail
p1389
Vinsert
p1390
I54
VTryStatement
p1391
tp1392
I1
s(Vinsert
p1393
I42
VSimpleName: isTrue
p1394
Vinsert
p1395
I42
VSimpleName: matches
p1396
tp1397
I1
s(Vinsert
p1398
I42
VSimpleName: defaultAnswer
p1399
Vinsert
p1400
I42
VSimpleName: deep_stubbed
p1401
tp1402
I1
s(Vinsert
p1403
I42
VSimpleName: doCallRealMethod
p1404
Vinsert
p1405
I45
VStringLiteral: "A"
p1406
tp1407
I1
s(g816
I42
g817
Vinsert
p1408
I8
VBlock
p1409
tp1410
I2
s(Vinsert
p1411
I42
VSimpleName: getAllInvocations
p1412
Vinsert
p1413
I44
VSingleVariableDeclaration
p1414
tp1415
I4
s(Vinsert
p1416
I42
VSimpleName: substring
p1417
Vinsert
p1418
I42
VSimpleName: prefix
p1419
tp1420
I3
s(Vinsert
p1421
I42
VSimpleName: validateFor
p1422
Vinsert
p1423
I43
VSimpleType: MockitoException
p1424
tp1425
I1
s(Vinsert
p1426
I42
VSimpleName: info
p1427
Vinsert
p1428
I43
VSimpleType: Logger
p1429
tp1430
I1
s(Vinsert
p1431
I42
VSimpleName: toArray
p1432
Vinsert
p1433
I42
VSimpleName: toTraceList
p1434
tp1435
I1
s(g124
I42
g125
Vinsert
p1436
I42
VSimpleName: getDirectoryScanner
p1437
tp1438
I1
s(Vinsert
p1439
I42
VSimpleName: visit
p1440
Vinsert
p1441
I42
VSimpleName: visit
p1442
tp1443
I1
s(Vinsert
p1444
I42
VSimpleName: add
p1445
Vinsert
p1446
I40
VQualifiedName: classes.length
p1447
tp1448
I1
s(Vinsert
p1449
I42
VSimpleName: allValues
p1450
Vinsert
p1451
I32
VMethodInvocation
p1452
tp1453
I4
s(g61
I42
g62
Vinsert
p1454
I83
VModifier: final
p1455
tp1456
I1
s(Vinsert
p1457
I42
VSimpleName: method
p1458
Vinsert
p1459
I42
VSimpleName: ThrowsException
p1460
tp1461
I1
s(Vinsert
p1462
I42
VSimpleName: getLocation
p1463
Vinsert
p1464
I25
VIfStatement
p1465
tp1466
I1
s(Vinsert
p1467
I42
VSimpleName: add
p1468
Vinsert
p1469
I42
VSimpleName: addUnstubbedInvocation
p1470
tp1471
I1
s(Vinsert
p1472
I42
VSimpleName: getMock
p1473
Vinsert
p1474
I42
VSimpleName: MockitoGenericMetadata
p1475
tp1476
I1
s(Vinsert
p1477
I42
VSimpleName: listReturningMethod
p1478
Vinsert
p1479
I41
VReturnStatement
p1480
tp1481
I1
s(Vinsert
p1482
I42
VSimpleName: findActualInvocation
p1483
Vinsert
p1484
I42
VSimpleName: InvocationMatcher
p1485
tp1486
I1
s(g770
I42
g771
Vinsert
p1487
I42
VSimpleName: InvocationMatcher
p1488
tp1489
I1
s(g1154
I42
g1155
Vinsert
p1490
I42
VSimpleName: getMockHandler
p1491
tp1492
I1
s(Vinsert
p1493
I42
VSimpleName: cannotStubWithNullThrowable
p1494
Vinsert
p1495
I21
VExpressionStatement
p1496
tp1497
I3
s(Vinsert
p1498
I42
VSimpleName: onVerificationStarted
p1499
Vinsert
p1500
I42
VSimpleName: setMock
p1501
tp1502
I1
s(Vinsert
p1503
I42
VSimpleName: getCause
p1504
Vinsert
p1505
I21
VExpressionStatement
p1506
tp1507
I9
s(Vinsert
p1508
I42
VSimpleName: reset
p1509
Vinsert
p1510
I42
VSimpleName: After
p1511
tp1512
I1
s(Vinsert
p1513
I42
VSimpleName: getFailure
p1514
Vinsert
p1515
I42
VSimpleName: mocks
p1516
tp1517
I1
s(Vinsert
p1518
I42
VSimpleName: getModifiers
p1519
Vinsert
p1520
I42
VSimpleName: Object
p1521
tp1522
I1
s(Vinsert
p1523
I42
VSimpleName: validateState
p1524
Vinsert
p1525
I42
VSimpleName: ThreadSafeMockingProgress
p1526
tp1527
I2
s(Vinsert
p1528
I42
VSimpleName: description
p1529
Vinsert
p1530
I34
VNumberLiteral: 1
p1531
tp1532
I1
s(Vinsert
p1533
I42
VSimpleName: println
p1534
Vinsert
p1535
I42
VSimpleName: unusedStubs
p1536
tp1537
I1
s(Vinsert
p1538
I42
VSimpleName: getMethodName
p1539
Vinsert
p1540
I45
VStringLiteral: "."
p1541
tp1542
I1
s(Vinsert
p1543
I42
VSimpleName: doThrow
p1544
Vinsert
p1545
I43
VSimpleType: Class
p1546
tp1547
I1
s(Vinsert
p1548
I42
VSimpleName: warnForVM
p1549
Vinsert
p1550
I42
VSimpleName: Platform
p1551
tp1552
I2
s(Vinsert
p1553
I42
VSimpleName: compile
p1554
Vinsert
p1555
I45
VStringLiteral: "[a-z]+\u005c\u005cd\u005c\u005cd"
p1556
tp1557
I1
s(Vinsert
p1558
I42
VSimpleName: getType
p1559
Vinsert
p1560
I41
VReturnStatement
p1561
tp1562
I2
s(Vinsert
p1563
I42
VSimpleName: stubbingCompleted
p1564
Vinsert
p1565
I42
VSimpleName: mockitoState
p1566
tp1567
I1
s(Vinsert
p1568
I42
VSimpleName: join
p1569
Vinsert
p1570
I54
VTryStatement
p1571
tp1572
I1
s(Vinsert
p1573
I42
VSimpleName: wantedButNotInvokedInOrder
p1574
Vinsert
p1575
I27
VInfixExpression: ==
p1576
tp1577
I1
s(Vinsert
p1578
I42
VSimpleName: getAllUnusedStubs
p1579
Vinsert
p1580
I40
VQualifiedName: System.out
p1581
tp1582
I2
s(g558
I42
g559
Vinsert
p1583
I57
VTypeLiteral
p1584
tp1585
I4
s(Vinsert
p1586
I42
VSimpleName: declare_field
p1587
Vinsert
p1588
I42
VSimpleName: v
p1589
tp1590
I1
s(Vinsert
p1591
I42
VSimpleName: isStubOnly
p1592
Vinsert
p1593
I31
VMethodDeclaration
p1594
tp1595
I2
s(g946
I42
g947
Vinsert
p1596
I32
VMethodInvocation
p1597
tp1598
I1
s(Vinsert
p1599
I42
VSimpleName: thenAnswer
p1600
Vinsert
p1601
I44
VSingleVariableDeclaration
p1602
tp1603
I1
s(Vinsert
p1604
I42
VSimpleName: clear
p1605
Vinsert
p1606
I43
VSimpleType: ArrayList
p1607
tp1608
I2
s(Vinsert
p1609
I42
VSimpleName: asList
p1610
Vinsert
p1611
I43
VSimpleType: StackTraceElement
p1612
tp1613
I4
s(Vinsert
p1614
I42
VSimpleName: clearListeners
p1615
Vinsert
p1616
I8
VBlock
p1617
tp1618
I1
s(Vinsert
p1619
I42
VSimpleName: isMock
p1620
Vinsert
p1621
I42
VSimpleName: mockingDetails
p1622
tp1623
I2
s(g390
I42
g391
Vinsert
p1624
I14
VClassInstanceCreation
p1625
tp1626
I1
s(Vinsert
p1627
I42
VSimpleName: recordAsyncCall
p1628
Vinsert
p1629
I42
VSimpleName: DelayedExecution
p1630
tp1631
I2
s(Vinsert
p1632
I42
VSimpleName: filter
p1633
Vinsert
p1634
I42
VSimpleName: toThrowable
p1635
tp1636
I1
s(Vinsert
p1637
I42
VSimpleName: typeMatches
p1638
Vinsert
p1639
I43
VSimpleType: LocalizedMatcher
p1640
tp1641
I2
s(Vinsert
p1642
I42
VSimpleName: getInvocation
p1643
Vinsert
p1644
I43
VSimpleType: Stubbing
p1645
tp1646
I1
s(g578
I42
g579
Vinsert
p1647
I39
VPrimitiveType: long
p1648
tp1649
I2
s(Vinsert
p1650
I42
VSimpleName: method
p1651
Vinsert
p1652
I42
VSimpleName: Throwable
p1653
tp1654
I1
s(Vinsert
p1655
I42
VSimpleName: isCompareToMethod
p1656
Vinsert
p1657
I57
VTypeLiteral
p1658
tp1659
I1
s(Vinsert
p1660
I42
VSimpleName: getModifiers
p1661
Vinsert
p1662
I27
VInfixExpression: &
p1663
tp1664
I4
s(Vinsert
p1665
I42
VSimpleName: add
p1666
Vinsert
p1667
I42
VSimpleName: MockSettings
p1668
tp1669
I1
s(Vinsert
p1670
I42
VSimpleName: markVerified
p1671
Vinsert
p1672
I43
VSimpleType: InOrderContext
p1673
tp1674
I1
s(Vinsert
p1675
I42
VSimpleName: getMockHandler
p1676
Vinsert
p1677
I74
VParameterizedType: Collection<Invocation>
p1678
tp1679
I1
s(g1538
I42
g1539
Vinsert
p1680
I32
VMethodInvocation
p1681
tp1682
I6
s(Vinsert
p1683
I42
VSimpleName: loadClass
p1684
Vinsert
p1685
I43
VSimpleType: A
p1686
tp1687
I1
s(Vinsert
p1688
I42
VSimpleName: doAnswer
p1689
Vinsert
p1690
I8
VBlock
p1691
tp1692
I4
s(g778
I42
g779
Vinsert
p1693
I42
VSimpleName: ClassVisitor
p1694
tp1695
I1
s(Vinsert
p1696
I42
VSimpleName: get
p1697
Vinsert
p1698
I74
VParameterizedType: WeakKey<?>
p1699
tp1700
I1
s(Vinsert
p1701
I42
VSimpleName: oneArg
p1702
Vinsert
p1703
I45
VStringLiteral: "1"
p1704
tp1705
I2
s(Vinsert
p1706
I42
VSimpleName: getDefaultPluginClass
p1707
Vinsert
p1708
I42
VSimpleName: provides_plugins
p1709
tp1710
I1
s(Vinsert
p1711
I42
VSimpleName: get
p1712
Vinsert
p1713
I42
VSimpleName: shouldAllowInlineMockCreation
p1714
tp1715
I1
s(Vinsert
p1716
I42
VSimpleName: add
p1717
Vinsert
p1718
I42
VSimpleName: unpackAsList
p1719
tp1720
I1
s(Vinsert
p1721
I42
VSimpleName: clear
p1722
Vinsert
p1723
I42
VSimpleName: unfinishedStubbingVoid
p1724
tp1725
I1
s(Vinsert
p1726
I42
VSimpleName: getToken
p1727
Vinsert
p1728
I42
VSimpleName: DefaultImprovements
p1729
tp1730
I2
s(Vinsert
p1731
I42
VSimpleName: add
p1732
Vinsert
p1733
I42
VSimpleName: map
p1734
tp1735
I3
s(g154
I42
g155
Vinsert
p1736
I42
VSimpleName: Field
p1737
tp1738
I1
s(Vinsert
p1739
I42
VSimpleName: bindMatchers
p1740
Vinsert
p1741
I32
VMethodInvocation
p1742
tp1743
I2
s(g26
I42
g27
Vinsert
p1744
I60
VVariableDeclarationStatement
p1745
tp1746
I1
s(g1650
I42
g1651
Vinsert
p1747
I42
VSimpleName: abstractMethod
p1748
tp1749
I1
s(Vinsert
p1750
I42
VSimpleName: toString
p1751
Vinsert
p1752
I43
VSimpleType: Location
p1753
tp1754
I2
s(Vinsert
p1755
I42
VSimpleName: get
p1756
Vinsert
p1757
I39
VPrimitiveType: int
p1758
tp1759
I2
s(Vinsert
p1760
I42
VSimpleName: defineField
p1761
Vinsert
p1762
I42
VSimpleName: FieldGetter
p1763
tp1764
I1
s(Vinsert
p1765
I42
VSimpleName: equals
p1766
Vinsert
p1767
I74
VParameterizedType: List<Field>
p1768
tp1769
I1
s(Vinsert
p1770
I42
VSimpleName: getExceptionTypes
p1771
Vinsert
p1772
I5
VArrayType: Class[]
p1773
tp1774
I1
s(Vinsert
p1775
I42
VSimpleName: isInstance
p1776
Vinsert
p1777
I43
VSimpleType: Throwable
p1778
tp1779
I1
s(Vinsert
p1780
I42
VSimpleName: getExceptionTypes
p1781
Vinsert
p1782
I83
VModifier: public
p1783
tp1784
I2
s(Vinsert
p1785
I42
VSimpleName: threeArgumentMethod
p1786
Vinsert
p1787
I42
VSimpleName: will
p1788
tp1789
I1
s(Vinsert
p1790
I42
VSimpleName: setStatus
p1791
Vinsert
p1792
I42
VSimpleName: importType
p1793
tp1794
I2
s(Vinsert
p1795
I42
VSimpleName: getFailures
p1796
Vinsert
p1797
I42
VSimpleName: assertThat
p1798
tp1799
I1
s(Vinsert
p1800
I42
VSimpleName: print
p1801
Vinsert
p1802
I42
VSimpleName: scenarioPrinter
p1803
tp1804
I2
s(Vinsert
p1805
I42
VSimpleName: times
p1806
Vinsert
p1807
I60
VVariableDeclarationStatement
p1808
tp1809
I1
s(Vinsert
p1810
I42
VSimpleName: isTypeMockable
p1811
Vinsert
p1812
I42
VSimpleName: mockUtil
p1813
tp1814
I2
s(Vinsert
p1815
I42
VSimpleName: setClassLoader
p1816
Vinsert
p1817
I42
VSimpleName: filterConstructors
p1818
tp1819
I1
s(Vinsert
p1820
I42
VSimpleName: getMethod
p1821
Vinsert
p1822
I42
VSimpleName: equals
p1823
tp1824
I1
s(Vinsert
p1825
I42
VSimpleName: getType
p1826
Vinsert
p1827
I43
VSimpleType: Type
p1828
tp1829
I1
s(g770
I42
g771
Vinsert
p1830
I34
VNumberLiteral: 1
p1831
tp1832
I1
s(Vinsert
p1833
I42
VSimpleName: getMessage
p1834
Vinsert
p1835
I42
VSimpleName: ArgumentsAreDifferent
p1836
tp1837
I1
s(Vinsert
p1838
I42
VSimpleName: beforeTest
p1839
Vinsert
p1840
I8
VBlock
p1841
tp1842
I2
s(Vinsert
p1843
I42
VSimpleName: newInstance
p1844
Vinsert
p1845
I42
VSimpleName: entry
p1846
tp1847
I2
s(Vinsert
p1848
I42
VSimpleName: newInstance
p1849
Vinsert
p1850
I42
VSimpleName: t2
p1851
tp1852
I1
s(Vinsert
p1853
I42
VSimpleName: visitLineNumber
p1854
Vinsert
p1855
I21
VExpressionStatement
p1856
tp1857
I1
s(Vinsert
p1858
I42
VSimpleName: contains
p1859
Vinsert
p1860
I27
VInfixExpression: +
p1861
tp1862
I6
s(Vinsert
p1863
I42
VSimpleName: getArguments
p1864
Vinsert
p1865
I43
VSimpleType: String
p1866
tp1867
I1
s(g1416
I42
g1417
Vinsert
p1868
I7
VAssignment: =
p1869
tp1870
I1
s(Vinsert
p1871
I42
VSimpleName: returnsPrimitive
p1872
Vinsert
p1873
I32
VMethodInvocation
p1874
tp1875
I4
s(Vinsert
p1876
I42
VSimpleName: getValue
p1877
Vinsert
p1878
I42
VSimpleName: entry
p1879
tp1880
I2
s(Vinsert
p1881
I42
VSimpleName: initMocks
p1882
Vinsert
p1883
I42
VSimpleName: getAList
p1884
tp1885
I1
s(Vinsert
p1886
I42
VSimpleName: newUTF8
p1887
Vinsert
p1888
I8
VBlock
p1889
tp1890
I3
s(Vinsert
p1891
I42
VSimpleName: add
p1892
Vinsert
p1893
I42
VSimpleName: InvocationMatcher
p1894
tp1895
I2
s(Vinsert
p1896
I42
VSimpleName: filter
p1897
Vinsert
p1898
I42
VSimpleName: filter
p1899
tp1900
I17
s(Vinsert
p1901
I42
VSimpleName: getReturnValues
p1902
Vinsert
p1903
I42
VSimpleName: set
p1904
tp1905
I1
s(Vinsert
p1906
I42
VSimpleName: equals
p1907
Vinsert
p1908
I85
VDimension
p1909
tp1910
I2
s(g717
I42
g718
Vinsert
p1911
I42
VSimpleName: isEmpty
p1912
tp1913
I1
s(Vinsert
p1914
I42
VSimpleName: in
p1915
Vinsert
p1916
I42
VSimpleName: String
p1917
tp1918
I1
s(Vinsert
p1919
I42
VSimpleName: stubInfo
p1920
Vinsert
p1921
I27
VInfixExpression: !=
p1922
tp1923
I1
s(Vinsert
p1924
I42
VSimpleName: identityHashCode
p1925
Vinsert
p1926
I40
VQualifiedName: that.mockInstance
p1927
tp1928
I1
s(Vinsert
p1929
I42
VSimpleName: isEmpty
p1930
Vinsert
p1931
I42
VSimpleName: stripCommentAndWhitespace
p1932
tp1933
I1
s(Vinsert
p1934
I42
VSimpleName: getSuperclass
p1935
Vinsert
p1936
I8
VBlock
p1937
tp1938
I6
s(Vinsert
p1939
I42
VSimpleName: setSuperclass
p1940
Vinsert
p1941
I42
VSimpleName: Enhancer
p1942
tp1943
I2
s(Vinsert
p1944
I42
VSimpleName: isEmpty
p1945
Vinsert
p1946
I42
VSimpleName: findAllMatchingUnverifiedChunks
p1947
tp1948
I1
s(Vinsert
p1949
I42
VSimpleName: tooLittleActualInvocations
p1950
Vinsert
p1951
I83
VModifier: public
p1952
tp1953
I2
s(Vinsert
p1954
I42
VSimpleName: isAssignableFrom
p1955
Vinsert
p1956
I42
VSimpleName: mockClass
p1957
tp1958
I2
s(g961
I42
g962
Vinsert
p1959
I42
VSimpleName: selfCallInfo
p1960
tp1961
I1
s(Vinsert
p1962
I42
VSimpleName: callAsync
p1963
Vinsert
p1964
I8
VBlock
p1965
tp1966
I1
s(Vinsert
p1967
I42
VSimpleName: setInvocationForPotentialStubbing
p1968
Vinsert
p1969
I59
VVariableDeclarationFragment
p1970
tp1971
I3
s(Vinsert
p1972
I42
VSimpleName: simpleMethod
p1973
Vinsert
p1974
I42
VSimpleName: Mockito
p1975
tp1976
I1
s(Vinsert
p1977
I42
VSimpleName: threeArgumentMethod
p1978
Vinsert
p1979
I78
VMarkerAnnotation
p1980
tp1981
I3
s(Vinsert
p1982
I42
VSimpleName: log
p1983
Vinsert
p1984
I43
VSimpleType: Throwable
p1985
tp1986
I1
s(Vinsert
p1987
I42
VSimpleName: getWarnings
p1988
Vinsert
p1989
I43
VSimpleType: Exception
p1990
tp1991
I1
s(Vinsert
p1992
I42
VSimpleName: getMessage
p1993
Vinsert
p1994
I42
VSimpleName: details
p1995
tp1996
I1
s(g1393
I42
g1394
Vinsert
p1997
I43
VSimpleType: Double
p1998
tp1999
I2
s(Vinsert
p2000
I42
VSimpleName: isInterface
p2001
Vinsert
p2002
I42
VSimpleName: Class
p2003
tp2004
I1
s(Vinsert
p2005
I42
VSimpleName: intArgumentReturningInt
p2006
Vinsert
p2007
I21
VExpressionStatement
p2008
tp2009
I1
s(Vinsert
p2010
I42
VSimpleName: appliesTo
p2011
Vinsert
p2012
I8
VBlock
p2013
tp2014
I2
s(g1472
I42
g1473
Vinsert
p2015
I42
VSimpleName: actualParameterizedType
p2016
tp2017
I1
s(Vinsert
p2018
I42
VSimpleName: format
p2019
Vinsert
p2020
I43
VSimpleType: String
p2021
tp2022
I4
s(g16
I42
g17
Vinsert
p2023
I42
VSimpleName: runner
p2024
tp2025
I3
s(Vinsert
p2026
I42
VSimpleName: forClass
p2027
Vinsert
p2028
I21
VExpressionStatement
p2029
tp2030
I1
s(Vinsert
p2031
I42
VSimpleName: endsWith
p2032
Vinsert
p2033
I40
VQualifiedName: Opcodes.ACC_SUPER
p2034
tp2035
I1
s(Vinsert
p2036
I42
VSimpleName: getMessage
p2037
Vinsert
p2038
I45
VStringLiteral: "IMethods.twoArgumentMethod(3, 3)"
p2039
tp2040
I1
s(Vinsert
p2041
I42
VSimpleName: print
p2042
Vinsert
p2043
I9
VBooleanLiteral: true
p2044
tp2045
I1
s(Vinsert
p2046
I42
VSimpleName: forwardTo
p2047
Vinsert
p2048
I8
VBlock
p2049
tp2050
I1
s(g1312
I42
g1313
Vinsert
p2051
I42
VSimpleName: Exception
p2052
tp2053
I1
s(Vinsert
p2054
I42
VSimpleName: getInvocationContainer
p2055
Vinsert
p2056
I42
VSimpleName: getMockHandler
p2057
tp2058
I2
s(Vinsert
p2059
I42
VSimpleName: sleep
p2060
Vinsert
p2061
I14
VClassInstanceCreation
p2062
tp2063
I1
s(g788
I42
g789
Vinsert
p2064
I8
VBlock
p2065
tp2066
I1
s(g11
I42
g12
Vinsert
p2067
I34
VNumberLiteral: 0
p2068
tp2069
I1
s(Vinsert
p2070
I42
VSimpleName: markVerified
p2071
Vinsert
p2072
I83
VModifier: final
p2073
tp2074
I3
s(Vinsert
p2075
I42
VSimpleName: get
p2076
Vinsert
p2077
I42
VSimpleName: when
p2078
tp2079
I8
s(Vinsert
p2080
I42
VSimpleName: compareTo
p2081
Vinsert
p2082
I57
VTypeLiteral
p2083
tp2084
I1
s(Vinsert
p2085
I42
VSimpleName: put
p2086
Vinsert
p2087
I14
VClassInstanceCreation
p2088
tp2089
I3
s(Vinsert
p2090
I42
VSimpleName: filter
p2091
Vinsert
p2092
I42
VSimpleName: Exception
p2093
tp2094
I1
s(Vinsert
p2095
I42
VSimpleName: set
p2096
Vinsert
p2097
I42
VSimpleName: someBean
p2098
tp2099
I1
s(Vinsert
p2100
I42
VSimpleName: getMessage
p2101
Vinsert
p2102
I43
VSimpleType: AssertionError
p2103
tp2104
I2
s(Vinsert
p2105
I42
VSimpleName: getContextClassLoader
p2106
Vinsert
p2107
I42
VSimpleName: getClassLoader
p2108
tp2109
I1
s(g936
I42
g937
Vinsert
p2110
I8
VBlock
p2111
tp2112
I1
s(Vinsert
p2113
I42
VSimpleName: tooLittleActualInvocations
p2114
Vinsert
p2115
I27
VInfixExpression: ||
p2116
tp2117
I1
s(Vinsert
p2118
I42
VSimpleName: isAssignableFromWrapper
p2119
Vinsert
p2120
I42
VSimpleName: assertThat
p2121
tp2122
I2
s(Vinsert
p2123
I42
VSimpleName: isNotNull
p2124
Vinsert
p2125
I42
VSimpleName: verify_mocks_are_initialized
p2126
tp2127
I1
s(g906
I42
g907
Vinsert
p2128
I42
VSimpleName: Exception
p2129
tp2130
I2
s(Vinsert
p2131
I42
VSimpleName: toMatchingInvocation
p2132
Vinsert
p2133
I43
VSimpleType: InvocationBuilder
p2134
tp2135
I1
s(g1307
I42
g1308
Vinsert
p2136
I83
VModifier: static
p2137
tp2138
I1
s(Vinsert
p2139
I42
VSimpleName: isValid
p2140
Vinsert
p2141
I42
VSimpleName: verify
p2142
tp2143
I1
s(g79
I42
g80
Vinsert
p2144
I42
VSimpleName: x
p2145
tp2146
I1
s(Vinsert
p2147
I42
VSimpleName: addAnswerForVoidMethod
p2148
Vinsert
p2149
I43
VSimpleType: Throwable
p2150
tp2151
I2
s(Vinsert
p2152
I42
VSimpleName: resetCustomReturnValues
p2153
Vinsert
p2154
I31
VMethodDeclaration
p2155
tp2156
I1
s(Vinsert
p2157
I42
VSimpleName: getMessage
p2158
Vinsert
p2159
I42
VSimpleName: AbstractMessage
p2160
tp2161
I2
s(Vinsert
p2162
I42
VSimpleName: getAllValues
p2163
Vinsert
p2164
I42
VSimpleName: n
p2165
tp2166
I1
s(g1901
I42
g1902
Vinsert
p2167
I1
VAnonymousClassDeclaration
p2168
tp2169
I1
s(Vinsert
p2170
I42
VSimpleName: getInterfaces
p2171
Vinsert
p2172
I27
VInfixExpression: ==
p2173
tp2174
I1
s(Vinsert
p2175
I42
VSimpleName: should
p2176
Vinsert
p2177
I42
VSimpleName: NotAMockException
p2178
tp2179
I1
s(Vinsert
p2180
I42
VSimpleName: bark
p2181
Vinsert
p2182
I42
VSimpleName: given
p2183
tp2184
I1
s(Vinsert
p2185
I42
VSimpleName: next
p2186
Vinsert
p2187
I43
VSimpleType: MethodInfo
p2188
tp2189
I2
s(Vinsert
p2190
I42
VSimpleName: size
p2191
Vinsert
p2192
I42
VSimpleName: matchers
p2193
tp2194
I4
s(Vinsert
p2195
I42
VSimpleName: mock
p2196
Vinsert
p2197
I42
VSimpleName: annotation
p2198
tp2199
I5
s(Vinsert
p2200
I42
VSimpleName: create
p2201
Vinsert
p2202
I32
VMethodInvocation
p2203
tp2204
I11
s(Vinsert
p2205
I42
VSimpleName: getAuthorName
p2206
Vinsert
p2207
I42
VSimpleName: equals
p2208
tp2209
I1
s(g16
I42
g17
Vinsert
p2210
I59
VVariableDeclarationFragment
p2211
tp2212
I1
s(g673
I42
g674
Vinsert
p2213
I42
VSimpleName: Matcher
p2214
tp2215
I2
s(g1670
I42
g1671
Vinsert
p2216
I42
VSimpleName: InOrderContextImpl
p2217
tp2218
I1
s(g1591
I42
g1592
Vinsert
p2219
I25
VIfStatement
p2220
tp2221
I1
s(Vinsert
p2222
I42
VSimpleName: forName
p2223
Vinsert
p2224
I43
VSimpleType: Class
p2225
tp2226
I5
s(Vinsert
p2227
I42
VSimpleName: addConsecutiveReturnValue
p2228
Vinsert
p2229
I42
VSimpleName: value
p2230
tp2231
I1
s(Vinsert
p2232
I42
VSimpleName: simpleMethod
p2233
Vinsert
p2234
I42
VSimpleName: shouldFailBecauseMethodWasInvokedTwice
p2235
tp2236
I1
s(Vinsert
p2237
I42
VSimpleName: willReturn
p2238
Vinsert
p2239
I42
VSimpleName: willAnswer
p2240
tp2241
I1
s(g699
I42
g700
Vinsert
p2242
I43
VSimpleType: MockitoLogger
p2243
tp2244
I1
s(g686
I42
g687
Vinsert
p2245
I42
VSimpleName: doThrow
p2246
tp2247
I1
s(Vinsert
p2248
I42
VSimpleName: getStubbingLookUpListeners
p2249
Vinsert
p2250
I44
VSingleVariableDeclaration
p2251
tp2252
I2
s(g287
I42
g288
Vinsert
p2253
I8
VBlock
p2254
tp2255
I1
s(Vinsert
p2256
I42
VSimpleName: add
p2257
Vinsert
p2258
I42
VSimpleName: Throwable
p2259
tp2260
I2
s(Vinsert
p2261
I42
VSimpleName: doSomething
p2262
Vinsert
p2263
I42
VSimpleName: Foo
p2264
tp2265
I5
s(Vinsert
p2266
I42
VSimpleName: identifyGenericReturnType
p2267
Vinsert
p2268
I83
VModifier: public
p2269
tp2270
I1
s(Vinsert
p2271
I42
VSimpleName: cast
p2272
Vinsert
p2273
I32
VMethodInvocation
p2274
tp2275
I4
s(Vinsert
p2276
I42
VSimpleName: isPrimitive
p2277
Vinsert
p2278
I46
VSuperConstructorInvocation
p2279
tp2280
I1
s(Vinsert
p2281
I42
VSimpleName: getConstructorArgs
p2282
Vinsert
p2283
I42
VSimpleName: Object
p2284
tp2285
I1
s(Vinsert
p2286
I42
VSimpleName: getAnnotationEngine
p2287
Vinsert
p2288
I66
VTextElement:  if no
p2289
tp2290
I1
s(Vinsert
p2291
I42
VSimpleName: getCause
p2292
Vinsert
p2293
I45
VStringLiteral: "Too little invocations:"
p2294
tp2295
I1
s(Vinsert
p2296
I42
VSimpleName: forEachMatcherAndArgument
p2297
Vinsert
p2298
I31
VMethodDeclaration
p2299
tp2300
I1
s(Vinsert
p2301
I42
VSimpleName: objectReturningMethodNoArgs
p2302
Vinsert
p2303
I43
VSimpleType: IMethods
p2304
tp2305
I3
s(Vinsert
p2306
I42
VSimpleName: markVerified
p2307
Vinsert
p2308
I42
VSimpleName: markVerified
p2309
tp2310
I1
s(Vinsert
p2311
I42
VSimpleName: getUnfilteredStackTrace
p2312
Vinsert
p2313
I42
VSimpleName: assertThat
p2314
tp2315
I1
s(Vinsert
p2316
I42
VSimpleName: oneArg
p2317
Vinsert
p2318
I43
VSimpleType: AnyBoolean
p2319
tp2320
I1
s(Vinsert
p2321
I42
VSimpleName: toInvocation
p2322
Vinsert
p2323
I43
VSimpleType: IMethods
p2324
tp2325
I3
s(Vinsert
p2326
I42
VSimpleName: mark
p2327
Vinsert
p2328
I53
VThrowStatement
p2329
tp2330
I1
s(Vinsert
p2331
I42
VSimpleName: times
p2332
Vinsert
p2333
I42
VSimpleName: After
p2334
tp2335
I1
s(Vinsert
p2336
I42
VSimpleName: noMoreInteractionsWanted
p2337
Vinsert
p2338
I32
VMethodInvocation
p2339
tp2340
I2
s(g1934
I42
g1935
Vinsert
p2341
I42
VSimpleName: Class
p2342
tp2343
I3
s(Vinsert
p2344
I42
VSimpleName: value
p2345
Vinsert
p2346
I43
VSimpleType: GenericSubClass
p2347
tp2348
I1
s(Vinsert
p2349
I42
VSimpleName: simpleMethod
p2350
Vinsert
p2351
I42
VSimpleName: verify_excludeMe_x
p2352
tp2353
I1
s(Vinsert
p2354
I42
VSimpleName: add
p2355
Vinsert
p2356
I74
VParameterizedType: HashSet<Matcher>
p2357
tp2358
I2
s(Vinsert
p2359
I42
VSimpleName: simpleMethod
p2360
Vinsert
p2361
I43
VSimpleType: InvocationBuilder
p2362
tp2363
I4
s(Vinsert
p2364
I42
VSimpleName: remove
p2365
Vinsert
p2366
I78
VMarkerAnnotation
p2367
tp2368
I1
s(Vinsert
p2369
I42
VSimpleName: willReturn
p2370
Vinsert
p2371
I43
VSimpleType: Integer
p2372
tp2373
I1
s(Vinsert
p2374
I42
VSimpleName: thenReturn
p2375
Vinsert
p2376
I9
VBooleanLiteral: true
p2377
tp2378
I4
s(g1482
I42
g1483
Vinsert
p2379
I43
VSimpleType: Invocation
p2380
tp2381
I1
s(g686
I42
g687
Vinsert
p2382
I32
VMethodInvocation
p2383
tp2384
I3
s(Vinsert
p2385
I42
VSimpleName: toString
p2386
Vinsert
p2387
I42
VSimpleName: join
p2388
tp2389
I6
s(Vinsert
p2390
I42
VSimpleName: visitOuterClass
p2391
Vinsert
p2392
I44
VSingleVariableDeclaration
p2393
tp2394
I4
s(g2152
I42
g2153
Vinsert
p2395
I39
VPrimitiveType: void
p2396
tp2397
I1
s(Vinsert
p2398
I42
VSimpleName: getState
p2399
Vinsert
p2400
I43
VSimpleType: Spec
p2401
tp2402
I1
s(Vinsert
p2403
I42
VSimpleName: get
p2404
Vinsert
p2405
I42
VSimpleName: getCount
p2406
tp2407
I1
s(Vinsert
p2408
I42
VSimpleName: currentThread
p2409
Vinsert
p2410
I85
VDimension
p2411
tp2412
I1
s(Vinsert
p2413
I42
VSimpleName: getStackTrace
p2414
Vinsert
p2415
I42
VSimpleName: toInvocation
p2416
tp2417
I1
s(g727
I42
g728
Vinsert
p2418
I26
VImportDeclaration
p2419
tp2420
I5
s(g367
I42
g368
Vinsert
p2421
I43
VSimpleType: Invocation
p2422
tp2423
I1
s(Vinsert
p2424
I42
VSimpleName: verify
p2425
Vinsert
p2426
I42
VSimpleName: actual
p2427
tp2428
I2
s(Vinsert
p2429
I42
VSimpleName: setInvocationForPotentialStubbing
p2430
Vinsert
p2431
I42
VSimpleName: should_return_invoked_mock_stub_only
p2432
tp2433
I1
s(Vinsert
p2434
I42
VSimpleName: equals
p2435
Vinsert
p2436
I43
VSimpleType: Equals
p2437
tp2438
I2
s(Vinsert
p2439
I42
VSimpleName: name
p2440
Vinsert
p2441
I43
VSimpleType: MockCreationListener
p2442
tp2443
I1
s(Vinsert
p2444
I42
VSimpleName: isConfigurationMethod
p2445
Vinsert
p2446
I83
VModifier: private
p2447
tp2448
I1
s(g2349
I42
g2350
Vinsert
p2449
I83
VModifier: private
p2450
tp2451
I3
s(Vinsert
p2452
I42
VSimpleName: readObject
p2453
Vinsert
p2454
I42
VSimpleName: filename
p2455
tp2456
I1
s(Vinsert
p2457
I42
VSimpleName: parseTickets
p2458
Vinsert
p2459
I22
VFieldAccess
p2460
tp2461
I1
s(Vinsert
p2462
I42
VSimpleName: getClass
p2463
Vinsert
p2464
I42
VSimpleName: theField
p2465
tp2466
I1
s(Vinsert
p2467
I42
VSimpleName: getMockSettings
p2468
Vinsert
p2469
I59
VVariableDeclarationFragment
p2470
tp2471
I1
s(Vinsert
p2472
I42
VSimpleName: hasTestMethods
p2473
Vinsert
p2474
I42
VSimpleName: assertTrue
p2475
tp2476
I1
s(g856
I42
g857
Vinsert
p2477
I27
VInfixExpression: +
p2478
tp2479
I3
s(Vinsert
p2480
I42
VSimpleName: getMock
p2481
Vinsert
p2482
I42
VSimpleName: Set
p2483
tp2484
I2
s(Vinsert
p2485
I42
VSimpleName: getFirstUnverifiedInvocationChunk
p2486
Vinsert
p2487
I39
VPrimitiveType: void
p2488
tp2489
I1
s(Vinsert
p2490
I42
VSimpleName: evaluate
p2491
Vinsert
p2492
I27
VInfixExpression: >
p2493
tp2494
I1
s(g2429
I42
g2430
Vinsert
p2495
I31
VMethodDeclaration
p2496
tp2497
I2
s(Vinsert
p2498
I42
VSimpleName: perform
p2499
Vinsert
p2500
I42
VSimpleName: String
p2501
tp2502
I1
s(Vinsert
p2503
I42
VSimpleName: beginMethod
p2504
Vinsert
p2505
I42
VSimpleName: declare_field
p2506
tp2507
I1
s(Vinsert
p2508
I42
VSimpleName: setTarget
p2509
Vinsert
p2510
I44
VSingleVariableDeclaration
p2511
tp2512
I1
s(Vinsert
p2513
I42
VSimpleName: getMessage
p2514
Vinsert
p2515
I42
VSimpleName: Exception
p2516
tp2517
I2
s(Vinsert
p2518
I42
VSimpleName: toAnswer
p2519
Vinsert
p2520
I43
VSimpleType: B
p2521
tp2522
I1
s(g2311
I42
g2312
Vinsert
p2523
I42
VSimpleName: StackTraceElement
p2524
tp2525
I1
s(Vinsert
p2526
I42
VSimpleName: captureFrom
p2527
Vinsert
p2528
I42
VSimpleName: matchers
p2529
tp2530
I1
s(Vinsert
p2531
I42
VSimpleName: validateSerializable
p2532
Vinsert
p2533
I42
VSimpleName: MockitoException
p2534
tp2535
I1
s(Vinsert
p2536
I42
VSimpleName: getDeclaringClass
p2537
Vinsert
p2538
I2
VArrayAccess
p2539
tp2540
I1
s(Vinsert
p2541
I42
VSimpleName: iterator
p2542
Vinsert
p2543
I43
VSimpleType: FindingsListener
p2544
tp2545
I1
s(g931
I42
g932
Vinsert
p2546
I57
VTypeLiteral
p2547
tp2548
I1
s(g2180
I42
g2181
Vinsert
p2549
I42
VSimpleName: Dog
p2550
tp2551
I1
s(Vinsert
p2552
I42
VSimpleName: getValue
p2553
Vinsert
p2554
I42
VSimpleName: invoking
p2555
tp2556
I1
s(Vinsert
p2557
I42
VSimpleName: equals
p2558
Vinsert
p2559
I42
VSimpleName: Contribution
p2560
tp2561
I1
s(g41
I42
g42
Vinsert
p2562
I59
VVariableDeclarationFragment
p2563
tp2564
I4
s(Vinsert
p2565
I42
VSimpleName: findFirstUnverifiedInOrder
p2566
Vinsert
p2567
I32
VMethodInvocation
p2568
tp2569
I4
s(Vinsert
p2570
I42
VSimpleName: sleep
p2571
Vinsert
p2572
I42
VSimpleName: Override
p2573
tp2574
I1
s(Vinsert
p2575
I42
VSimpleName: resolveTypeInstances
p2576
Vinsert
p2577
I59
VVariableDeclarationFragment
p2578
tp2579
I2
s(Vinsert
p2580
I42
VSimpleName: simpleMethod
p2581
Vinsert
p2582
I42
VSimpleName: mockOne
p2583
tp2584
I6
s(Vinsert
p2585
I42
VSimpleName: getArgument
p2586
Vinsert
p2587
I42
VSimpleName: argumentValue
p2588
tp2589
I1
s(Vinsert
p2590
I42
VSimpleName: getClass
p2591
Vinsert
p2592
I42
VSimpleName: SimplePerRealmReloadingClassLoader
p2593
tp2594
I1
s(g1886
I42
g1887
Vinsert
p2595
I27
VInfixExpression: !=
p2596
tp2597
I2
s(g1924
I42
g1925
Vinsert
p2598
I42
VSimpleName: o
p2599
tp2600
I1
s(Vinsert
p2601
I42
VSimpleName: getMockHandler
p2602
Vinsert
p2603
I11
VCastExpression
p2604
tp2605
I1
s(Vinsert
p2606
I42
VSimpleName: assertThat
p2607
Vinsert
p2608
I42
VSimpleName: method
p2609
tp2610
I1
s(Vinsert
p2611
I42
VSimpleName: visitTypeInsn
p2612
Vinsert
p2613
I8
VBlock
p2614
tp2615
I1
s(Vinsert
p2616
I42
VSimpleName: with
p2617
Vinsert
p2618
I42
VSimpleName: ClassLoadingStrategy
p2619
tp2620
I1
s(Vinsert
p2621
I42
VSimpleName: toString
p2622
Vinsert
p2623
I42
VSimpleName: Test
p2624
tp2625
I3
s(Vinsert
p2626
I42
VSimpleName: reset
p2627
Vinsert
p2628
I73
VTypeParameter
p2629
tp2630
I2
s(Vinsert
p2631
I42
VSimpleName: findFirstMatchingUnverifiedInvocation
p2632
Vinsert
p2633
I42
VSimpleName: next
p2634
tp2635
I1
s(g548
I42
g549
Vinsert
p2636
I59
VVariableDeclarationFragment
p2637
tp2638
I1
s(g1342
I42
g1343
Vinsert
p2639
I78
VMarkerAnnotation
p2640
tp2641
I1
s(Vinsert
p2642
I42
VSimpleName: of
p2643
Vinsert
p2644
I78
VMarkerAnnotation
p2645
tp2646
I5
s(Vinsert
p2647
I42
VSimpleName: add
p2648
Vinsert
p2649
I42
VSimpleName: enabled
p2650
tp2651
I1
s(Vinsert
p2652
I42
VSimpleName: findNewInstance
p2653
Vinsert
p2654
I14
VClassInstanceCreation
p2655
tp2656
I1
s(Vinsert
p2657
I42
VSimpleName: visitMaxs
p2658
Vinsert
p2659
I39
VPrimitiveType: void
p2660
tp2661
I1
s(Vinsert
p2662
I42
VSimpleName: voidReturningMethod
p2663
Vinsert
p2664
I7
VAssignment: =
p2665
tp2666
I1
s(Vinsert
p2667
I42
VSimpleName: maybeVerifyLazily
p2668
Vinsert
p2669
I22
VFieldAccess
p2670
tp2671
I1
s(Vinsert
p2672
I42
VSimpleName: classes
p2673
Vinsert
p2674
I42
VSimpleName: hasOnlyThoseClassesInStackTrace
p2675
tp2676
I1
s(Vinsert
p2677
I42
VSimpleName: putShort
p2678
Vinsert
p2679
I32
VMethodInvocation
p2680
tp2681
I3
s(Vinsert
p2682
I42
VSimpleName: matchesActualCount
p2683
Vinsert
p2684
I32
VMethodInvocation
p2685
tp2686
I6
s(g553
I42
g554
Vinsert
p2687
I45
VStringLiteral: "IMethods.varargs("
p2688
tp2689
I1
s(Vinsert
p2690
I42
VSimpleName: verify
p2691
Vinsert
p2692
I42
VSimpleName: map
p2693
tp2694
I2
s(Vinsert
p2695
I42
VSimpleName: filter
p2696
Vinsert
p2697
I7
VAssignment: =
p2698
tp2699
I2
s(Vinsert
p2700
I42
VSimpleName: notifyVerificationStarted
p2701
Vinsert
p2702
I42
VSimpleName: VerificationStartedNotifier
p2703
tp2704
I2
s(Vinsert
p2705
I42
VSimpleName: sort
p2706
Vinsert
p2707
I14
VClassInstanceCreation
p2708
tp2709
I3
s(Vinsert
p2710
I42
VSimpleName: value
p2711
Vinsert
p2712
I42
VSimpleName: NonPackagePrivateSubClass
p2713
tp2714
I1
s(g1297
I42
g1298
Vinsert
p2715
I42
VSimpleName: shouldLogStubCalledWithDifferentArgumentsWhenTestFails
p2716
tp2717
I1
s(Vinsert
p2718
I42
VSimpleName: verifyInOrder
p2719
Vinsert
p2720
I77
VNormalAnnotation
p2721
tp2722
I1
s(Vinsert
p2723
I42
VSimpleName: matches
p2724
Vinsert
p2725
I43
VSimpleType: Invocation
p2726
tp2727
I9
s(Vinsert
p2728
I42
VSimpleName: getReturnType
p2729
Vinsert
p2730
I43
VSimpleType: Method
p2731
tp2732
I1
s(Vinsert
p2733
I42
VSimpleName: createMock
p2734
Vinsert
p2735
I43
VSimpleType: MockHandler
p2736
tp2737
I1
s(Vinsert
p2738
I42
VSimpleName: setAccessible
p2739
Vinsert
p2740
I59
VVariableDeclarationFragment
p2741
tp2742
I1
s(Vinsert
p2743
I42
VSimpleName: getSuspiciouslyNotMatchingArgsIndexes
p2744
Vinsert
p2745
I32
VMethodInvocation
p2746
tp2747
I1
s(Vinsert
p2748
I42
VSimpleName: args
p2749
Vinsert
p2750
I45
VStringLiteral: "twoArgumentMethod"
p2751
tp2752
I1
s(Vinsert
p2753
I42
VSimpleName: append
p2754
Vinsert
p2755
I44
VSingleVariableDeclaration
p2756
tp2757
I14
s(g239
I42
g240
Vinsert
p2758
I22
VFieldAccess
p2759
tp2760
I1
s(g643
I42
g644
Vinsert
p2761
I42
VSimpleName: Assert
p2762
tp2763
I1
s(g282
I42
g283
Vinsert
p2764
I42
VSimpleName: superMethod
p2765
tp2766
I1
s(g1244
I42
g1245
Vinsert
p2767
I42
VSimpleName: ConfigurationAccess
p2768
tp2769
I2
s(Vinsert
p2770
I42
VSimpleName: mocksHaveToBePassedAsArguments
p2771
Vinsert
p2772
I42
VSimpleName: Exceptions
p2773
tp2774
I1
s(Vinsert
p2775
I42
VSimpleName: wasSuccessful
p2776
Vinsert
p2777
I43
VSimpleType: PointingStackTraceToActualInvocationTest
p2778
tp2779
I1
s(Vinsert
p2780
I42
VSimpleName: extraInterfaces
p2781
Vinsert
p2782
I43
VSimpleType: IMethods
p2783
tp2784
I10
s(g796
I42
g797
Vinsert
p2785
I42
VSimpleName: Whitebox
p2786
tp2787
I1
s(Vinsert
p2788
I42
VSimpleName: size
p2789
Vinsert
p2790
I27
VInfixExpression: +
p2791
tp2792
I7
s(g2403
I42
g2404
Vinsert
p2793
I42
VSimpleName: chunks
p2794
tp2795
I2
s(Vinsert
p2796
I42
VSimpleName: moreFun
p2797
Vinsert
p2798
I39
VPrimitiveType: void
p2799
tp2800
I1
s(g1591
I42
g1592
Vinsert
p2801
I42
VSimpleName: InvocationMatcher
p2802
tp2803
I1
s(Vinsert
p2804
I42
VSimpleName: when
p2805
Vinsert
p2806
I42
VSimpleName: assertThat
p2807
tp2808
I3
s(g2585
I42
g2586
Vinsert
p2809
I42
VSimpleName: Class
p2810
tp2811
I1
s(g1755
I42
g1756
Vinsert
p2812
I43
VSimpleType: Object
p2813
tp2814
I6
s(Vinsert
p2815
I42
VSimpleName: lastElement
p2816
Vinsert
p2817
I60
VVariableDeclarationStatement
p2818
tp2819
I1
s(g2200
I42
g2201
Vinsert
p2820
I42
VSimpleName: message
p2821
tp2822
I1
s(g1159
I42
g1160
Vinsert
p2823
I39
VPrimitiveType: byte
p2824
tp2825
I1
s(Vinsert
p2826
I42
VSimpleName: foo
p2827
Vinsert
p2828
I42
VSimpleName: withFinal
p2829
tp2830
I2
s(g1024
I42
g1025
Vinsert
p2831
I42
VSimpleName: field
p2832
tp2833
I1
s(Vinsert
p2834
I42
VSimpleName: print
p2835
Vinsert
p2836
I43
VSimpleType: ClassUseDerivedInterface
p2837
tp2838
I2
s(Vinsert
p2839
I42
VSimpleName: getControl
p2840
Vinsert
p2841
I42
VSimpleName: List
p2842
tp2843
I1
s(Vinsert
p2844
I42
VSimpleName: getSuspiciouslyNotMatchingArgs
p2845
Vinsert
p2846
I42
VSimpleName: Matcher
p2847
tp2848
I1
s(g109
I42
g110
Vinsert
p2849
I32
VMethodInvocation
p2850
tp2851
I5
s(g1214
I42
g1215
Vinsert
p2852
I45
VStringLiteral: "[Mockito] BUT called with different args at com.Foo:120"
p2853
tp2854
I1
s(g2331
I42
g2332
Vinsert
p2855
I42
VSimpleName: millis
p2856
tp2857
I2
s(g916
I42
g917
Vinsert
p2858
I42
VSimpleName: getAnnotationEngine
p2859
tp2860
I1
s(Vinsert
p2861
I42
VSimpleName: getConfig
p2862
Vinsert
p2863
I40
VQualifiedName: org.junit.After
p2864
tp2865
I1
s(Vinsert
p2866
I42
VSimpleName: getArguments
p2867
Vinsert
p2868
I27
VInfixExpression: ==
p2869
tp2870
I1
s(Vinsert
p2871
I42
VSimpleName: isPrivate
p2872
Vinsert
p2873
I41
VReturnStatement
p2874
tp2875
I1
s(Vinsert
p2876
I42
VSimpleName: startsWith
p2877
Vinsert
p2878
I43
VSimpleType: File
p2879
tp2880
I1
s(Vinsert
p2881
I42
VSimpleName: wantedCount
p2882
Vinsert
p2883
I32
VMethodInvocation
p2884
tp2885
I5
s(Vinsert
p2886
I42
VSimpleName: validateFor
p2887
Vinsert
p2888
I42
VSimpleName: Returns
p2889
tp2890
I2
s(g543
I42
g544
Vinsert
p2891
I14
VClassInstanceCreation
p2892
tp2893
I1
s(g1954
I42
g1955
Vinsert
p2894
I42
VSimpleName: Class
p2895
tp2896
I1
s(Vinsert
p2897
I42
VSimpleName: toOperation
p2898
Vinsert
p2899
I31
VMethodDeclaration
p2900
tp2901
I1
s(g2844
I42
g2845
Vinsert
p2902
I85
VDimension
p2903
tp2904
I1
s(g2344
I42
g2345
Vinsert
p2905
I42
VSimpleName: GenericSubClass
p2906
tp2907
I1
s(Vinsert
p2908
I42
VSimpleName: setTimeZone
p2909
Vinsert
p2910
I43
VSimpleType: SimpleDateFormat
p2911
tp2912
I2
s(g1815
I42
g1816
Vinsert
p2913
I42
VSimpleName: Class
p2914
tp2915
I1
s(Vinsert
p2916
I42
VSimpleName: contains
p2917
Vinsert
p2918
I42
VSimpleName: toReturn
p2919
tp2920
I1
s(Vinsert
p2921
I42
VSimpleName: getTestClassInstance
p2922
Vinsert
p2923
I83
VModifier: static
p2924
tp2925
I1
s(g1269
I42
g1270
Vinsert
p2926
I60
VVariableDeclarationStatement
p2927
tp2928
I1
s(Vinsert
p2929
I42
VSimpleName: validateMockedType
p2930
Vinsert
p2931
I31
VMethodDeclaration
p2932
tp2933
I1
s(Vinsert
p2934
I42
VSimpleName: addListener
p2935
Vinsert
p2936
I8
VBlock
p2937
tp2938
I6
s(Vinsert
p2939
I42
VSimpleName: put12
p2940
Vinsert
p2941
I11
VCastExpression
p2942
tp2943
I1
s(Vinsert
p2944
I42
VSimpleName: in
p2945
Vinsert
p2946
I42
VSimpleName: assertThat
p2947
tp2948
I1
s(Vinsert
p2949
I42
VSimpleName: getMethodName
p2950
Vinsert
p2951
I42
VSimpleName: ENABLED
p2952
tp2953
I1
s(Vinsert
p2954
I42
VSimpleName: willCallRealMethod
p2955
Vinsert
p2956
I42
VSimpleName: willReturn
p2957
tp2958
I1
s(Vinsert
p2959
I42
VSimpleName: otherMethod
p2960
Vinsert
p2961
I8
VBlock
p2962
tp2963
I1
s(g1184
I42
g1185
Vinsert
p2964
I66
VTextElement: Returns the approximate size of this set where the returned number is at least as big as the actual number of entries.
p2965
tp2966
I1
s(g56
I42
g57
Vinsert
p2967
I33
VNullLiteral
p2968
tp2969
I2
s(g473
I42
g474
Vinsert
p2970
I32
VMethodInvocation
p2971
tp2972
I7
s(Vinsert
p2973
I42
VSimpleName: isFinal
p2974
Vinsert
p2975
I42
VSimpleName: toMock
p2976
tp2977
I1
s(Vinsert
p2978
I42
VSimpleName: get
p2979
Vinsert
p2980
I43
VSimpleType: Task
p2981
tp2982
I1
s(Vinsert
p2983
I42
VSimpleName: contains
p2984
Vinsert
p2985
I42
VSimpleName: defaultAnswer
p2986
tp2987
I1
s(Vinsert
p2988
I42
VSimpleName: getSuperclass
p2989
Vinsert
p2990
I57
VTypeLiteral
p2991
tp2992
I4
s(Vinsert
p2993
I42
VSimpleName: getLoggedInfo
p2994
Vinsert
p2995
I42
VSimpleName: stubbings
p2996
tp2997
I1
s(Vinsert
p2998
I42
VSimpleName: visitLocalVariable
p2999
Vinsert
p3000
I43
VSimpleType: MethodVisitor
p3001
tp3002
I1
s(g2682
I42
g2683
Vinsert
p3003
I42
VSimpleName: getObjects
p3004
tp3005
I1
s(Vinsert
p3006
I42
VSimpleName: isEqualsMethod
p3007
Vinsert
p3008
I42
VSimpleName: IMethods
p3009
tp3010
I1
s(Vinsert
p3011
I42
VSimpleName: valueOf
p3012
Vinsert
p3013
I42
VSimpleName: Invocation
p3014
tp3015
I2
s(Vinsert
p3016
I42
VSimpleName: openStream
p3017
Vinsert
p3018
I8
VBlock
p3019
tp3020
I5
s(Vinsert
p3021
I42
VSimpleName: mock
p3022
Vinsert
p3023
I42
VSimpleName: wrongArg
p3024
tp3025
I1
s(Vinsert
p3026
I42
VSimpleName: isValidReturnType
p3027
Vinsert
p3028
I42
VSimpleName: returnedValue
p3029
tp3030
I2
s(Vinsert
p3031
I42
VSimpleName: startMocking
p3032
Vinsert
p3033
I33
VNullLiteral
p3034
tp3035
I3
s(Vinsert
p3036
I42
VSimpleName: emptyReturnValueFor
p3037
Vinsert
p3038
I25
VIfStatement
p3039
tp3040
I1
s(g2472
I42
g2473
Vinsert
p3041
I83
VModifier: public
p3042
tp3043
I1
s(g778
I42
g779
Vinsert
p3044
I60
VVariableDeclarationStatement
p3045
tp3046
I1
s(Vinsert
p3047
I42
VSimpleName: invoking
p3048
Vinsert
p3049
I40
VQualifiedName: listener.printStream
p3050
tp3051
I1
s(g229
I42
g230
Vinsert
p3052
I43
VSimpleType: CollectionsServer
p3053
tp3054
I1
s(Vinsert
p3055
I42
VSimpleName: returnNull
p3056
Vinsert
p3057
I8
VBlock
p3058
tp3059
I4
s(Vinsert
p3060
I42
VSimpleName: log
p3061
Vinsert
p3062
I32
VMethodInvocation
p3063
tp3064
I6
s(g2070
I42
g2071
Vinsert
p3065
I26
VImportDeclaration
p3066
tp3067
I3
s(Vinsert
p3068
I42
VSimpleName: getModifiers
p3069
Vinsert
p3070
I39
VPrimitiveType: int
p3071
tp3072
I1
s(Vinsert
p3073
I42
VSimpleName: printsVerbosely
p3074
Vinsert
p3075
I42
VSimpleName: PrintSettings
p3076
tp3077
I2
s(Vinsert
p3078
I42
VSimpleName: contains
p3079
Vinsert
p3080
I43
VSimpleType: String
p3081
tp3082
I8
s(Vinsert
p3083
I42
VSimpleName: getUnfilteredStackTrace
p3084
Vinsert
p3085
I21
VExpressionStatement
p3086
tp3087
I2
s(g528
I42
g529
Vinsert
p3088
I42
VSimpleName: MILLISECONDS
p3089
tp3090
I1
s(Vinsert
p3091
I42
VSimpleName: printInvocations
p3092
Vinsert
p3093
I42
VSimpleName: filterLineNo
p3094
tp3095
I2
s(Vinsert
p3096
I42
VSimpleName: create
p3097
Vinsert
p3098
I42
VSimpleName: VerboseRunner
p3099
tp3100
I2
s(Vinsert
p3101
I42
VSimpleName: stubbingStarted
p3102
Vinsert
p3103
I43
VSimpleType: T
p3104
tp3105
I2
s(Vinsert
p3106
I42
VSimpleName: captureArgumentsFrom
p3107
Vinsert
p3108
I70
VEnhancedForStatement
p3109
tp3110
I1
s(Vinsert
p3111
I42
VSimpleName: countNumberOfRelatedArticles
p3112
Vinsert
p3113
I42
VSimpleName: mockCalculator
p3114
tp3115
I1
s(Vinsert
p3116
I42
VSimpleName: addListener
p3117
Vinsert
p3118
I43
VSimpleType: Exception
p3119
tp3120
I1
s(Vinsert
p3121
I42
VSimpleName: concat
p3122
Vinsert
p3123
I53
VThrowStatement
p3124
tp3125
I2
s(Vinsert
p3126
I42
VSimpleName: getTreshhold
p3127
Vinsert
p3128
I8
VBlock
p3129
tp3130
I2
s(Vinsert
p3131
I42
VSimpleName: hasNext
p3132
Vinsert
p3133
I42
VSimpleName: unusedStubs
p3134
tp3135
I1
s(Vinsert
p3136
I42
VSimpleName: get
p3137
Vinsert
p3138
I42
VSimpleName: SoftReference
p3139
tp3140
I2
s(g1069
I42
g1070
Vinsert
p3141
I39
VPrimitiveType: void
p3142
tp3143
I1
s(Vinsert
p3144
I42
VSimpleName: fails
p3145
Vinsert
p3146
I42
VSimpleName: expectedException
p3147
tp3148
I2
s(g2321
I42
g2322
Vinsert
p3149
I43
VSimpleType: Returns
p3150
tp3151
I1
s(g2281
I42
g2282
Vinsert
p3152
I52
VThisExpression
p3153
tp3154
I1
s(Vinsert
p3155
I42
VSimpleName: isPrimitiveWrapper
p3156
Vinsert
p3157
I42
VSimpleName: clazz
p3158
tp3159
I1
s(Vinsert
p3160
I42
VSimpleName: accept
p3161
Vinsert
p3162
I42
VSimpleName: exceptions
p3163
tp3164
I1
s(Vinsert
p3165
I42
VSimpleName: serializable
p3166
Vinsert
p3167
I42
VSimpleName: mockSettings
p3168
tp3169
I3
s(Vinsert
p3170
I42
VSimpleName: getObject
p3171
Vinsert
p3172
I43
VSimpleType: Localized
p3173
tp3174
I2
s(g876
I42
g877
Vinsert
p3175
I42
VSimpleName: chunk
p3176
tp3177
I1
s(Vinsert
p3178
I42
VSimpleName: objectArgMethod
p3179
Vinsert
p3180
I83
VModifier: public
p3181
tp3182
I3
s(Vinsert
p3183
I42
VSimpleName: setAccessible
p3184
Vinsert
p3185
I70
VEnhancedForStatement
p3186
tp3187
I1
s(g1079
I42
g1080
Vinsert
p3188
I41
VReturnStatement
p3189
tp3190
I1
s(Vinsert
p3191
I42
VSimpleName: getClass
p3192
Vinsert
p3193
I42
VSimpleName: genericTypeOf
p3194
tp3195
I1
s(g2886
I42
g2887
Vinsert
p3196
I34
VNumberLiteral: 1
p3197
tp3198
I1
s(Vinsert
p3199
I42
VSimpleName: verify
p3200
Vinsert
p3201
I61
VWhileStatement
p3202
tp3203
I2
s(Vinsert
p3204
I42
VSimpleName: getClass
p3205
Vinsert
p3206
I42
VSimpleName: ObjectMethodsGuru
p3207
tp3208
I2
s(Vinsert
p3209
I42
VSimpleName: of
p3210
Vinsert
p3211
I21
VExpressionStatement
p3212
tp3213
I2
s(Vinsert
p3214
I42
VSimpleName: visitIntInsn
p3215
Vinsert
p3216
I44
VSingleVariableDeclaration
p3217
tp3218
I1
s(Vinsert
p3219
I42
VSimpleName: pop
p3220
Vinsert
p3221
I36
VParenthesizedExpression
p3222
tp3223
I1
s(Vinsert
p3224
I42
VSimpleName: resultFor
p3225
Vinsert
p3226
I42
VSimpleName: assertEquals
p3227
tp3228
I1
s(Vinsert
p3229
I42
VSimpleName: clearMockitoListeners
p3230
Vinsert
p3231
I32
VMethodInvocation
p3232
tp3233
I1
s(Vinsert
p3234
I42
VSimpleName: isEmpty
p3235
Vinsert
p3236
I43
VSimpleType: Exception
p3237
tp3238
I1
s(g1034
I42
g1035
Vinsert
p3239
I44
VSingleVariableDeclaration
p3240
tp3241
I4
s(Vinsert
p3242
I42
VSimpleName: accept
p3243
Vinsert
p3244
I31
VMethodDeclaration
p3245
tp3246
I1
s(Vinsert
p3247
I42
VSimpleName: getException
p3248
Vinsert
p3249
I42
VSimpleName: expectedException
p3250
tp3251
I2
s(Vinsert
p3252
I42
VSimpleName: equals
p3253
Vinsert
p3254
I42
VSimpleName: getSignature
p3255
tp3256
I1
s(Vinsert
p3257
I42
VSimpleName: getGenericInterfaces
p3258
Vinsert
p3259
I32
VMethodInvocation
p3260
tp3261
I9
s(Vinsert
p3262
I42
VSimpleName: atMost
p3263
Vinsert
p3264
I39
VPrimitiveType: int
p3265
tp3266
I1
s(Vinsert
p3267
I42
VSimpleName: getArgs
p3268
Vinsert
p3269
I45
VStringLiteral: "    3rd: 3\u005cn"
p3270
tp3271
I1
s(g1039
I42
g1040
Vinsert
p3272
I83
VModifier: private
p3273
tp3274
I1
s(Vinsert
p3275
I42
VSimpleName: toArray
p3276
Vinsert
p3277
I42
VSimpleName: i
p3278
tp3279
I2
s(Vinsert
p3280
I42
VSimpleName: addListener
p3281
Vinsert
p3282
I42
VSimpleName: MockitoListener
p3283
tp3284
I1
s(g717
I42
g718
Vinsert
p3285
I42
VSimpleName: keySet
p3286
tp3287
I1
s(Vinsert
p3288
I42
VSimpleName: isVerified
p3289
Vinsert
p3290
I42
VSimpleName: assertFalse
p3291
tp3292
I1
s(Vinsert
p3293
I42
VSimpleName: checkDesc
p3294
Vinsert
p3295
I8
VBlock
p3296
tp3297
I1
s(Vinsert
p3298
I42
VSimpleName: canImposterise
p3299
Vinsert
p3300
I43
VSimpleType: Class
p3301
tp3302
I1
s(Vinsert
p3303
I42
VSimpleName: getstatic
p3304
Vinsert
p3305
I42
VSimpleName: PROVIDER_GET_NAMES
p3306
tp3307
I1
s(Vinsert
p3308
I42
VSimpleName: handle
p3309
Vinsert
p3310
I42
VSimpleName: Invocation
p3311
tp3312
I2
s(Vinsert
p3313
I42
VSimpleName: verboseLogging
p3314
Vinsert
p3315
I42
VSimpleName: baos
p3316
tp3317
I1
s(Vinsert
p3318
I42
VSimpleName: getLoggedInfo
p3319
Vinsert
p3320
I45
VStringLiteral: "[MockitoHint] MyTest.myTestMethod (see javadoc for MockitoHint):\u005cn"
p3321
tp3322
I1
s(g3275
I42
g3276
Vinsert
p3323
I42
VSimpleName: suspicious
p3324
tp3325
I2
s(Vinsert
p3326
I42
VSimpleName: giveMeSomeString
p3327
Vinsert
p3328
I78
VMarkerAnnotation
p3329
tp3330
I1
s(Vinsert
p3331
I42
VSimpleName: cannotCreateTimerWithNegativeDurationTime
p3332
Vinsert
p3333
I27
VInfixExpression: <
p3334
tp3335
I1
s(Vinsert
p3336
I42
VSimpleName: setCallback
p3337
Vinsert
p3338
I42
VSimpleName: settings
p3339
tp3340
I1
s(Vinsert
p3341
I42
VSimpleName: asList
p3342
Vinsert
p3343
I43
VSimpleType: InvocationMatcher
p3344
tp3345
I2
s(Vinsert
p3346
I42
VSimpleName: appendText
p3347
Vinsert
p3348
I42
VSimpleName: argument
p3349
tp3350
I2
s(g3073
I42
g3074
Vinsert
p3351
I42
VSimpleName: settings
p3352
tp3353
I2
s(Vinsert
p3354
I42
VSimpleName: varargs
p3355
Vinsert
p3356
I42
VSimpleName: ArgumentCaptor
p3357
tp3358
I2
s(Vinsert
p3359
I42
VSimpleName: doSomething
p3360
Vinsert
p3361
I23
VFieldDeclaration
p3362
tp3363
I2
s(Vinsert
p3364
I42
VSimpleName: thenReturn
p3365
Vinsert
p3366
I42
VSimpleName: anyMatcher
p3367
tp3368
I1
s(Vinsert
p3369
I42
VSimpleName: thenTry
p3370
Vinsert
p3371
I9
VBooleanLiteral: false
p3372
tp3373
I1
s(Vinsert
p3374
I42
VSimpleName: add
p3375
Vinsert
p3376
I42
VSimpleName: veryCoolSpy
p3377
tp3378
I2
s(Vinsert
p3379
I42
VSimpleName: mockitoSession
p3380
Vinsert
p3381
I42
VSimpleName: mockitoSession
p3382
tp3383
I2
s(g861
I42
g862
Vinsert
p3384
I42
VSimpleName: joins_with_line_prefix
p3385
tp3386
I1
s(g209
I42
g210
Vinsert
p3387
I25
VIfStatement
p3388
tp3389
I4
s(Vinsert
p3390
I42
VSimpleName: apply
p3391
Vinsert
p3392
I43
VSimpleType: Object
p3393
tp3394
I1
s(Vinsert
p3395
I42
VSimpleName: getClassLoader
p3396
Vinsert
p3397
I45
VStringLiteral: "', loaded by classloader : '"
p3398
tp3399
I1
s(Vinsert
p3400
I42
VSimpleName: getLocation
p3401
Vinsert
p3402
I42
VSimpleName: invocation
p3403
tp3404
I2
s(g2205
I42
g2206
Vinsert
p3405
I44
VSingleVariableDeclaration
p3406
tp3407
I1
s(Vinsert
p3408
I42
VSimpleName: size
p3409
Vinsert
p3410
I43
VSimpleType: IArgumentMatcher
p3411
tp3412
I1
s(Vinsert
p3413
I42
VSimpleName: clear
p3414
Vinsert
p3415
I42
VSimpleName: String
p3416
tp3417
I1
s(g1896
I42
g1897
Vinsert
p3418
I32
VMethodInvocation
p3419
tp3420
I20
s(Vinsert
p3421
I42
VSimpleName: put
p3422
Vinsert
p3423
I66
VTextElement: Returns the boxed default value for a primitive or a primitive wrapper.
p3424
tp3425
I1
s(Vinsert
p3426
I42
VSimpleName: tooLittleActualInvocations
p3427
Vinsert
p3428
I21
VExpressionStatement
p3429
tp3430
I5
s(Vinsert
p3431
I42
VSimpleName: useDelimiter
p3432
Vinsert
p3433
I40
VQualifiedName: java.util.Scanner
p3434
tp3435
I2
s(Vinsert
p3436
I42
VSimpleName: getClass
p3437
Vinsert
p3438
I42
VSimpleName: SecurityException
p3439
tp3440
I1
s(Vinsert
p3441
I42
VSimpleName: charAt
p3442
Vinsert
p3443
I42
VSimpleName: name
p3444
tp3445
I1
s(g1254
I42
g1255
Vinsert
p3446
I21
VExpressionStatement
p3447
tp3448
I1
s(g2147
I42
g2148
Vinsert
p3449
I42
VSimpleName: mockitoStubber
p3450
tp3451
I2
s(g1919
I42
g1920
Vinsert
p3452
I42
VSimpleName: throwable
p3453
tp3454
I1
s(Vinsert
p3455
I42
VSimpleName: equals
p3456
Vinsert
p3457
I43
VSimpleType: String
p3458
tp3459
I2
s(Vinsert
p3460
I42
VSimpleName: validateMockitoUsage
p3461
Vinsert
p3462
I54
VTryStatement
p3463
tp3464
I1
s(g1982
I42
g1983
Vinsert
p3465
I12
VCatchClause
p3466
tp3467
I1
s(Vinsert
p3468
I42
VSimpleName: addAll
p3469
Vinsert
p3470
I76
VWildcardType: ?
p3471
tp3472
I2
s(Vinsert
p3473
I42
VSimpleName: getExpectedNumberOfInvocations
p3474
Vinsert
p3475
I8
VBlock
p3476
tp3477
I1
s(Vinsert
p3478
I42
VSimpleName: isEmpty
p3479
Vinsert
p3480
I42
VSimpleName: hasData
p3481
tp3482
I1
s(Vinsert
p3483
I42
VSimpleName: capture
p3484
Vinsert
p3485
I42
VSimpleName: Byte
p3486
tp3487
I1
s(Vinsert
p3488
I42
VSimpleName: simpleMethod
p3489
Vinsert
p3490
I78
VMarkerAnnotation
p3491
tp3492
I41
s(Vinsert
p3493
I42
VSimpleName: withExtraTypeInfo
p3494
Vinsert
p3495
I21
VExpressionStatement
p3496
tp3497
I2
s(Vinsert
p3498
I42
VSimpleName: valueFor
p3499
Vinsert
p3500
I43
VSimpleType: HasPrimitiveMethods
p3501
tp3502
I1
s(g3047
I42
g3048
Vinsert
p3503
I43
VSimpleType: PrintStream
p3504
tp3505
I1
s(g89
I42
g90
Vinsert
p3506
I42
VSimpleName: recorder
p3507
tp3508
I1
s(Vinsert
p3509
I42
VSimpleName: isMock
p3510
Vinsert
p3511
I42
VSimpleName: Mock
p3512
tp3513
I1
s(g976
I42
g977
Vinsert
p3514
I39
VPrimitiveType: long
p3515
tp3516
I2
s(Vinsert
p3517
I42
VSimpleName: forClass
p3518
Vinsert
p3519
I43
VSimpleType: Integer
p3520
tp3521
I1
s(Vinsert
p3522
I42
VSimpleName: setTypeToMock
p3523
Vinsert
p3524
I43
VSimpleType: T
p3525
tp3526
I2
s(Vinsert
p3527
I42
VSimpleName: visitJumpInsn
p3528
Vinsert
p3529
I21
VExpressionStatement
p3530
tp3531
I1
s(Vinsert
p3532
I42
VSimpleName: perform
p3533
Vinsert
p3534
I45
VStringLiteral: "Cleaning up after step '"
p3535
tp3536
I1
s(Vinsert
p3537
I42
VSimpleName: getDeclaredFields
p3538
Vinsert
p3539
I83
VModifier: public
p3540
tp3541
I1
s(Vinsert
p3542
I42
VSimpleName: getSimpleName
p3543
Vinsert
p3544
I53
VThrowStatement
p3545
tp3546
I7
s(g1919
I42
g1920
Vinsert
p3547
I32
VMethodInvocation
p3548
tp3549
I1
s(Vinsert
p3550
I42
VSimpleName: instance
p3551
Vinsert
p3552
I40
VQualifiedName: org.mockito.internal.MockitoState
p3553
tp3554
I1
s(Vinsert
p3555
I42
VSimpleName: objectReturningMethod
p3556
Vinsert
p3557
I42
VSimpleName: when
p3558
tp3559
I1
s(Vinsert
p3560
I42
VSimpleName: isEqualTo
p3561
Vinsert
p3562
I42
VSimpleName: tryConstructorInjection
p3563
tp3564
I1
s(Vinsert
p3565
I42
VSimpleName: isMemberClass
p3566
Vinsert
p3567
I42
VSimpleName: checkNotInner
p3568
tp3569
I1
s(Vinsert
p3570
I42
VSimpleName: typeVarWithTypeParams
p3571
Vinsert
p3572
I60
VVariableDeclarationStatement
p3573
tp3574
I1
s(Vinsert
p3575
I42
VSimpleName: get
p3576
Vinsert
p3577
I42
VSimpleName: Equals
p3578
tp3579
I1
s(Vinsert
p3580
I42
VSimpleName: toOperation
p3581
Vinsert
p3582
I8
VBlock
p3583
tp3584
I2
s(Vinsert
p3585
I42
VSimpleName: redefineMockNameIfSurrogate
p3586
Vinsert
p3587
I66
VTextElement: Actually the preparation of mocks consists only in defining a MockName if not already set.
p3588
tp3589
I1
s(Vinsert
p3590
I42
VSimpleName: simpleMethod
p3591
Vinsert
p3592
I42
VSimpleName: DummyException
p3593
tp3594
I1
s(g3016
I42
g3017
Vinsert
p3595
I59
VVariableDeclarationFragment
p3596
tp3597
I2
s(g722
I42
g723
Vinsert
p3598
I42
VSimpleName: mock
p3599
tp3600
I2
s(Vinsert
p3601
I42
VSimpleName: allowedMethod
p3602
Vinsert
p3603
I42
VSimpleName: shouldFailBecauseDisallowedMethodWasCalled
p3604
tp3605
I1
s(Vinsert
p3606
I42
VSimpleName: createInvocation
p3607
Vinsert
p3608
I8
VBlock
p3609
tp3610
I2
s(Vinsert
p3611
I42
VSimpleName: getMockHandler
p3612
Vinsert
p3613
I42
VSimpleName: when
p3614
tp3615
I1
s(Vinsert
p3616
I42
VSimpleName: currentTimeMillis
p3617
Vinsert
p3618
I42
VSimpleName: start
p3619
tp3620
I1
s(Vinsert
p3621
I42
VSimpleName: visitAnnotation
p3622
Vinsert
p3623
I7
VAssignment: =
p3624
tp3625
I1
s(g2616
I42
g2617
Vinsert
p3626
I83
VModifier: public
p3627
tp3628
I1
s(Vinsert
p3629
I42
VSimpleName: copy
p3630
Vinsert
p3631
I42
VSimpleName: assertEquals
p3632
tp3633
I1
s(g3318
I42
g3319
Vinsert
p3634
I45
VStringLiteral: "[MockitoHint]  ...args ok? -> at A.java\u005cn"
p3635
tp3636
I1
s(Vinsert
p3637
I42
VSimpleName: size
p3638
Vinsert
p3639
I43
VSimpleType: URL
p3640
tp3641
I1
s(g297
I42
g298
Vinsert
p3642
I42
VSimpleName: MockName
p3643
tp3644
I1
s(g2565
I42
g2566
Vinsert
p3645
I42
VSimpleName: context
p3646
tp3647
I2
s(g1001
I42
g1002
Vinsert
p3648
I42
VSimpleName: LinkedList
p3649
tp3650
I7
s(g1287
I42
g1288
Vinsert
p3651
I62
VInstanceofExpression
p3652
tp3653
I1
s(Vinsert
p3654
I42
VSimpleName: answer
p3655
Vinsert
p3656
I42
VSimpleName: FooImpl
p3657
tp3658
I1
s(Vinsert
p3659
I42
VSimpleName: getMethodProxy
p3660
Vinsert
p3661
I43
VSimpleType: Serializable
p3662
tp3663
I1
s(Vinsert
p3664
I42
VSimpleName: handle
p3665
Vinsert
p3666
I42
VSimpleName: SOME_LOCATION
p3667
tp3668
I1
s(g876
I42
g877
Vinsert
p3669
I42
VSimpleName: actualCount
p3670
tp3671
I1
s(Vinsert
p3672
I42
VSimpleName: isVerified
p3673
Vinsert
p3674
I27
VInfixExpression: &&
p3675
tp3676
I1
s(g2738
I42
g2739
Vinsert
p3677
I42
VSimpleName: wasAccessible
p3678
tp3679
I2
s(Vinsert
p3680
I42
VSimpleName: add
p3681
Vinsert
p3682
I43
VSimpleType: ArrayList
p3683
tp3684
I3
s(g1011
I42
g1012
Vinsert
p3685
I8
VBlock
p3686
tp3687
I1
s(Vinsert
p3688
I42
VSimpleName: when
p3689
Vinsert
p3690
I31
VMethodDeclaration
p3691
tp3692
I5
s(g2281
I42
g2282
Vinsert
p3693
I21
VExpressionStatement
p3694
tp3695
I1
s(g1755
I42
g1756
Vinsert
p3696
I42
VSimpleName: executeSystem
p3697
tp3698
I1
s(Vinsert
p3699
I42
VSimpleName: assertTrue
p3700
Vinsert
p3701
I34
VNumberLiteral: 1
p3702
tp3703
I1
s(Vinsert
p3704
I42
VSimpleName: getPropertyName
p3705
Vinsert
p3706
I60
VVariableDeclarationStatement
p3707
tp3708
I1
s(Vinsert
p3709
I42
VSimpleName: getInternalState
p3710
Vinsert
p3711
I43
VSimpleType: NamingPolicy
p3712
tp3713
I2
s(Vinsert
p3714
I42
VSimpleName: toInvocation
p3715
Vinsert
p3716
I7
VAssignment: =
p3717
tp3718
I4
s(g3460
I42
g3461
Vinsert
p3719
I42
VSimpleName: description
p3720
tp3721
I2
s(g1115
I42
g1116
Vinsert
p3722
I49
VSwitchCase
p3723
tp3724
I2
s(Vinsert
p3725
I42
VSimpleName: processInjection
p3726
Vinsert
p3727
I43
VSimpleType: Object
p3728
tp3729
I1
s(Vinsert
p3730
I42
VSimpleName: ofThisVm
p3731
Vinsert
p3732
I42
VSimpleName: assumeTrue
p3733
tp3734
I2
s(Vinsert
p3735
I42
VSimpleName: createProxyClass
p3736
Vinsert
p3737
I42
VSimpleName: MockitoMockObjectOutputStream
p3738
tp3739
I3
s(g224
I42
g225
Vinsert
p3740
I42
VSimpleName: Object
p3741
tp3742
I1
s(Vinsert
p3743
I42
VSimpleName: explicitMode
p3744
Vinsert
p3745
I38
VPrefixExpression: !
p3746
tp3747
I1
s(Vinsert
p3748
I42
VSimpleName: serializable
p3749
Vinsert
p3750
I43
VSimpleType: MockSettingsImpl
p3751
tp3752
I2
s(Vinsert
p3753
I42
VSimpleName: set
p3754
Vinsert
p3755
I43
VSimpleType: MockitoControl
p3756
tp3757
I1
s(Vinsert
p3758
I42
VSimpleName: verify
p3759
Vinsert
p3760
I42
VSimpleName: InvocationMatcher
p3761
tp3762
I1
s(g2439
I42
g2440
Vinsert
p3763
I42
VSimpleName: addListener
p3764
tp3765
I1
s(Vinsert
p3766
I42
VSimpleName: getDeclaredConstructor
p3767
Vinsert
p3768
I59
VVariableDeclarationFragment
p3769
tp3770
I3
s(g3390
I42
g3391
Vinsert
p3771
I60
VVariableDeclarationStatement
p3772
tp3773
I2
s(g1739
I42
g1740
Vinsert
p3774
I42
VSimpleName: mockitoState
p3775
tp3776
I1
s(Vinsert
p3777
I42
VSimpleName: add
p3778
Vinsert
p3779
I42
VSimpleName: settings
p3780
tp3781
I2
s(Vinsert
p3782
I42
VSimpleName: framework
p3783
Vinsert
p3784
I42
VSimpleName: strictness
p3785
tp3786
I1
s(Vinsert
p3787
I42
VSimpleName: toString
p3788
Vinsert
p3789
I45
VStringLiteral: "Mockito cannot mock final classes like: "
p3790
tp3791
I1
s(Vinsert
p3792
I42
VSimpleName: excludingClassLoader
p3793
Vinsert
p3794
I42
VSimpleName: getMockMaker
p3795
tp3796
I1
s(Vinsert
p3797
I42
VSimpleName: getConfig
p3798
Vinsert
p3799
I78
VMarkerAnnotation
p3800
tp3801
I3
s(Vinsert
p3802
I42
VSimpleName: getName
p3803
Vinsert
p3804
I45
VStringLiteral: ""
p3805
tp3806
I2
s(Vinsert
p3807
I42
VSimpleName: enableClassCache
p3808
Vinsert
p3809
I14
VClassInstanceCreation
p3810
tp3811
I2
s(Vinsert
p3812
I42
VSimpleName: getParameterTypes
p3813
Vinsert
p3814
I42
VSimpleName: args
p3815
tp3816
I3
s(Vinsert
p3817
I42
VSimpleName: simpleMethod
p3818
Vinsert
p3819
I42
VSimpleName: makeStackTracesClean
p3820
tp3821
I1
s(Vinsert
p3822
I42
VSimpleName: getMessage
p3823
Vinsert
p3824
I60
VVariableDeclarationStatement
p3825
tp3826
I4
s(g1765
I42
g1766
Vinsert
p3827
I70
VEnhancedForStatement
p3828
tp3829
I2
s(Vinsert
p3830
I42
VSimpleName: getParameterTypes
p3831
Vinsert
p3832
I57
VTypeLiteral
p3833
tp3834
I1
s(Vinsert
p3835
I42
VSimpleName: wasSuccessful
p3836
Vinsert
p3837
I43
VSimpleType: InvalidUseOfMatchersTest
p3838
tp3839
I1
s(g796
I42
g797
Vinsert
p3840
I5
VArrayType: Object[]
p3841
tp3842
I1
s(Vinsert
p3843
I42
VSimpleName: contains
p3844
Vinsert
p3845
I1
VAnonymousClassDeclaration
p3846
tp3847
I1
s(g2876
I42
g2877
Vinsert
p3848
I43
VSimpleType: String
p3849
tp3850
I3
s(Vinsert
p3851
I42
VSimpleName: countDown
p3852
Vinsert
p3853
I83
VModifier: final
p3854
tp3855
I1
s(Vinsert
p3856
I42
VSimpleName: expectThrowable
p3857
Vinsert
p3858
I76
VWildcardType: ? extends Throwable
p3859
tp3860
I2
s(g2439
I42
g2440
Vinsert
p3861
I42
VSimpleName: MockCreationListener
p3862
tp3863
I1
s(Vinsert
p3864
I42
VSimpleName: visitMethodInsn
p3865
Vinsert
p3866
I32
VMethodInvocation
p3867
tp3868
I3
s(g347
I42
g348
Vinsert
p3869
I43
VSimpleType: TypeDescription.ForLoadedType
p3870
tp3871
I1
s(g3542
I42
g3543
Vinsert
p3872
I42
VSimpleName: f
p3873
tp3874
I1
s(Vinsert
p3875
I42
VSimpleName: initMocks
p3876
Vinsert
p3877
I42
VSimpleName: hasConstructorInvokingMethod
p3878
tp3879
I2
s(Vinsert
p3880
I42
VSimpleName: getMethodInfo
p3881
Vinsert
p3882
I62
VInstanceofExpression
p3883
tp3884
I1
s(Vinsert
p3885
I42
VSimpleName: bar
p3886
Vinsert
p3887
I14
VClassInstanceCreation
p3888
tp3889
I1
s(g3331
I42
g3332
Vinsert
p3890
I21
VExpressionStatement
p3891
tp3892
I1
s(g1352
I42
g1353
Vinsert
p3893
I43
VSimpleType: VerificationStartedNotifier.Event
p3894
tp3895
I4
s(Vinsert
p3896
I42
VSimpleName: never
p3897
Vinsert
p3898
I39
VPrimitiveType: void
p3899
tp3900
I1
s(g613
I42
g614
Vinsert
p3901
I42
VSimpleName: actualType
p3902
tp3903
I2
s(Vinsert
p3904
I42
VSimpleName: forName
p3905
Vinsert
p3906
I7
VAssignment: =
p3907
tp3908
I1
s(Vinsert
p3909
I42
VSimpleName: simpleMethod
p3910
Vinsert
p3911
I42
VSimpleName: times
p3912
tp3913
I3
s(Vinsert
p3914
I42
VSimpleName: compareTo
p3915
Vinsert
p3916
I31
VMethodDeclaration
p3917
tp3918
I1
s(Vinsert
p3919
I42
VSimpleName: methods
p3920
Vinsert
p3921
I32
VMethodInvocation
p3922
tp3923
I3
s(Vinsert
p3924
I42
VSimpleName: verifyingStarted
p3925
Vinsert
p3926
I42
VSimpleName: mock
p3927
tp3928
I1
s(g1011
I42
g1012
Vinsert
p3929
I42
VSimpleName: Invocation
p3930
tp3931
I1
s(g3155
I42
g3156
Vinsert
p3932
I32
VMethodInvocation
p3933
tp3934
I1
s(Vinsert
p3935
I42
VSimpleName: getInstantiatorProvider
p3936
Vinsert
p3937
I8
VBlock
p3938
tp3939
I1
s(g3293
I42
g3294
Vinsert
p3940
I83
VModifier: final
p3941
tp3942
I2
s(Vinsert
p3943
I42
VSimpleName: remove
p3944
Vinsert
p3945
I43
VSimpleType: ByteBuddyAgent
p3946
tp3947
I1
s(Vinsert
p3948
I42
VSimpleName: captureFrom
p3949
Vinsert
p3950
I42
VSimpleName: capturingMatcher
p3951
tp3952
I1
s(Vinsert
p3953
I42
VSimpleName: newInstance
p3954
Vinsert
p3955
I60
VVariableDeclarationStatement
p3956
tp3957
I4
s(g2480
I42
g2481
Vinsert
p3958
I42
VSimpleName: thenReturn
p3959
tp3960
I1
s(Vinsert
p3961
I42
VSimpleName: getMessage
p3962
Vinsert
p3963
I45
VStringLiteral: "  2. -> at org.mockitousage.junitrule.StrictJUnitRuleTest.unused_stubs_with_multiple_mocks(StrictJUnitRuleTest.java:0)\u005cn"
p3964
tp3965
I1
s(g3224
I42
g3225
Vinsert
p3966
I32
VMethodInvocation
p3967
tp3968
I3
s(Vinsert
p3969
I42
VSimpleName: verify
p3970
Vinsert
p3971
I42
VSimpleName: missingInvocation
p3972
tp3973
I3
s(g2162
I42
g2163
Vinsert
p3974
I42
VSimpleName: stringArgumentCaptor
p3975
tp3976
I2
s(Vinsert
p3977
I42
VSimpleName: stringReturningMethod
p3978
Vinsert
p3979
I32
VMethodInvocation
p3980
tp3981
I3
s(g149
I42
g150
Vinsert
p3982
I32
VMethodInvocation
p3983
tp3984
I3
s(g1388
I42
g1389
Vinsert
p3985
I39
VPrimitiveType: void
p3986
tp3987
I1
s(g1886
I42
g1887
Vinsert
p3988
I42
VSimpleName: attr
p3989
tp3990
I2
s(Vinsert
p3991
I42
VSimpleName: toTraceArray
p3992
Vinsert
p3993
I5
VArrayType: StackTraceElement[]
p3994
tp3995
I2
s(Vinsert
p3996
I42
VSimpleName: getVerboseVariant
p3997
Vinsert
p3998
I8
VBlock
p3999
tp4000
I2
s(Vinsert
p4001
I42
VSimpleName: hasRootCauseInstanceOf
p4002
Vinsert
p4003
I44
VSingleVariableDeclaration
p4004
tp4005
I1
s(Vinsert
p4006
I42
VSimpleName: asList
p4007
Vinsert
p4008
I43
VSimpleType: Field
p4009
tp4010
I2
s(g3943
I42
g3944
Vinsert
p4011
I26
VImportDeclaration
p4012
tp4013
I2
s(g1079
I42
g1080
Vinsert
p4014
I8
VBlock
p4015
tp4016
I1
s(Vinsert
p4017
I42
VSimpleName: get
p4018
Vinsert
p4019
I42
VSimpleName: RETURNS_DEEP_STUBS
p4020
tp4021
I1
s(Vinsert
p4022
I42
VSimpleName: getTypeToMock
p4023
Vinsert
p4024
I42
VSimpleName: CachingBytecodeGenerator
p4025
tp4026
I1
s(Vinsert
p4027
I42
VSimpleName: iterator
p4028
Vinsert
p4029
I42
VSimpleName: e
p4030
tp4031
I1
s(g2949
I42
g2950
Vinsert
p4032
I83
VModifier: public
p4033
tp4034
I1
s(g3280
I42
g3281
Vinsert
p4035
I42
VSimpleName: mockingProgress
p4036
tp4037
I1
s(Vinsert
p4038
I42
VSimpleName: doubleToLongBits
p4039
Vinsert
p4040
I52
VThisExpression
p4041
tp4042
I1
s(Vinsert
p4043
I42
VSimpleName: verifyNoMoreInteractions
p4044
Vinsert
p4045
I60
VVariableDeclarationStatement
p4046
tp4047
I1
s(g1219
I42
g1220
Vinsert
p4048
I33
VNullLiteral
p4049
tp4050
I3
s(Vinsert
p4051
I42
VSimpleName: isToString
p4052
Vinsert
p4053
I43
VSimpleType: ObjectMethodsGuru
p4054
tp4055
I2
s(g1805
I42
g1806
Vinsert
p4056
I43
VSimpleType: HasStackTrace
p4057
tp4058
I1
s(Vinsert
p4059
I42
VSimpleName: print
p4060
Vinsert
p4061
I42
VSimpleName: Reporter
p4062
tp4063
I1
s(g1039
I42
g1040
Vinsert
p4064
I42
VSimpleName: fieldOwner
p4065
tp4066
I1
s(Vinsert
p4067
I42
VSimpleName: getType
p4068
Vinsert
p4069
I43
VSimpleType: Object
p4070
tp4071
I3
s(Vinsert
p4072
I42
VSimpleName: booleanReturningMethod
p4073
Vinsert
p4074
I42
VSimpleName: assertOngoingStubbingIsReset
p4075
tp4076
I1
s(Vinsert
p4077
I42
VSimpleName: say
p4078
Vinsert
p4079
I74
VParameterizedType: Super<String>
p4080
tp4081
I1
s(Vinsert
p4082
I42
VSimpleName: isEmpty
p4083
Vinsert
p4084
I42
VSimpleName: Runnable
p4085
tp4086
I1
s(Vinsert
p4087
I42
VSimpleName: append
p4088
Vinsert
p4089
I66
VTextElement:  the Field name
p4090
tp4091
I1
s(g1906
I42
g1907
Vinsert
p4092
I42
VSimpleName: dummyMethod
p4093
tp4094
I2
s(g26
I42
g27
Vinsert
p4095
I59
VVariableDeclarationFragment
p4096
tp4097
I1
s(Vinsert
p4098
I42
VSimpleName: captureArgumentsFrom
p4099
Vinsert
p4100
I40
VQualifiedName: AnyVararg.ANY_VARARG
p4101
tp4102
I1
s(g1642
I42
g1643
Vinsert
p4103
I42
VSimpleName: convert
p4104
tp4105
I1
s(Vinsert
p4106
I42
VSimpleName: describeTo
p4107
Vinsert
p4108
I43
VSimpleType: StringDescription
p4109
tp4110
I4
s(Vinsert
p4111
I42
VSimpleName: mockingDetails
p4112
Vinsert
p4113
I42
VSimpleName: Object
p4114
tp4115
I1
s(g2677
I42
g2678
Vinsert
p4116
I27
VInfixExpression: !=
p4117
tp4118
I1
s(g2147
I42
g2148
Vinsert
p4119
I74
VParameterizedType: VoidMethodStubbable<T>
p4120
tp4121
I2
s(g1780
I42
g1781
Vinsert
p4122
I8
VBlock
p4123
tp4124
I2
s(Vinsert
p4125
I42
VSimpleName: clear
p4126
Vinsert
p4127
I26
VImportDeclaration
p4128
tp4129
I2
s(g2606
I42
g2607
Vinsert
p4130
I45
VStringLiteral: "method"
p4131
tp4132
I1
s(Vinsert
p4133
I42
VSimpleName: seq
p4134
Vinsert
p4135
I43
VSimpleType: InvocationBuilder
p4136
tp4137
I1
s(Vinsert
p4138
I42
VSimpleName: testFailure
p4139
Vinsert
p4140
I42
VSimpleName: TestFailOnInitialization
p4141
tp4142
I1
s(Vinsert
p4143
I42
VSimpleName: isVerifiedInOrder
p4144
Vinsert
p4145
I21
VExpressionStatement
p4146
tp4147
I2
s(Vinsert
p4148
I42
VSimpleName: process
p4149
Vinsert
p4150
I42
VSimpleName: String
p4151
tp4152
I1
s(Vinsert
p4153
I42
VSimpleName: isEmpty
p4154
Vinsert
p4155
I74
VParameterizedType: SoftReference<Class<?>>
p4156
tp4157
I1
s(Vinsert
p4158
I42
VSimpleName: tooLittleActualInvocations
p4159
Vinsert
p4160
I42
VSimpleName: shouldLetPassingNullLastActualStackTrace
p4161
tp4162
I1
s(Vinsert
p4163
I42
VSimpleName: isLastStackElementToRemove
p4164
Vinsert
p4165
I42
VSimpleName: unfilteredStackTrace
p4166
tp4167
I2
s(Vinsert
p4168
I42
VSimpleName: visitFieldInsn
p4169
Vinsert
p4170
I43
VSimpleType: MethodVisitor
p4171
tp4172
I1
s(Vinsert
p4173
I42
VSimpleName: get
p4174
Vinsert
p4175
I42
VSimpleName: LabelNode
p4176
tp4177
I2
s(g1426
I42
g1427
Vinsert
p4178
I42
VSimpleName: LoggerFactory
p4179
tp4180
I1
s(g826
I42
g827
Vinsert
p4181
I43
VSimpleType: Invocation
p4182
tp4183
I7
s(Vinsert
p4184
I42
VSimpleName: or
p4185
Vinsert
p4186
I8
VBlock
p4187
tp4188
I1
s(Vinsert
p4189
I42
VSimpleName: createMockType
p4190
Vinsert
p4191
I42
VSimpleName: interfaces
p4192
tp4193
I1
s(Vinsert
p4194
I42
VSimpleName: simpleMethod
p4195
Vinsert
p4196
I1
VAnonymousClassDeclaration
p4197
tp4198
I3
s(Vinsert
p4199
I42
VSimpleName: append
p4200
Vinsert
p4201
I45
VStringLiteral: "byte"
p4202
tp4203
I1
s(Vinsert
p4204
I42
VSimpleName: extraInterfaces
p4205
Vinsert
p4206
I42
VSimpleName: mockSettingsImpl
p4207
tp4208
I2
s(g3136
I42
g3137
Vinsert
p4209
I42
VSimpleName: graphs
p4210
tp4211
I1
s(Vinsert
p4212
I42
VSimpleName: toUpperCase
p4213
Vinsert
p4214
I59
VVariableDeclarationFragment
p4215
tp4216
I1
s(g2921
I42
g2922
Vinsert
p4217
I32
VMethodInvocation
p4218
tp4219
I3
s(g2385
I42
g2386
Vinsert
p4220
I45
VStringLiteral: "Verification in order failure"
p4221
tp4222
I1
s(g2390
I42
g2391
Vinsert
p4223
I42
VSimpleName: owner
p4224
tp4225
I2
s(Vinsert
p4226
I42
VSimpleName: print
p4227
Vinsert
p4228
I60
VVariableDeclarationStatement
p4229
tp4230
I6
s(Vinsert
p4231
I42
VSimpleName: add
p4232
Vinsert
p4233
I2
VArrayAccess
p4234
tp4235
I1
s(g2723
I42
g2724
Vinsert
p4236
I70
VEnhancedForStatement
p4237
tp4238
I7
s(g2131
I42
g2132
Vinsert
p4239
I32
VMethodInvocation
p4240
tp4241
I2
s(Vinsert
p4242
I42
VSimpleName: startMocking
p4243
Vinsert
p4244
I42
VSimpleName: ArgumentMismatch
p4245
tp4246
I1
s(Vinsert
p4247
I42
VSimpleName: getSample
p4248
Vinsert
p4249
I42
VSimpleName: getNumber
p4250
tp4251
I1
s(g1332
I42
g1333
Vinsert
p4252
I66
VTextElement: import static org.mockito.hamcrest.MockitoHamcrest.argThat;
p4253
tp4254
I1
s(g367
I42
g368
Vinsert
p4255
I41
VReturnStatement
p4256
tp4257
I1
s(Vinsert
p4258
I42
VSimpleName: getMethod
p4259
Vinsert
p4260
I27
VInfixExpression: !=
p4261
tp4262
I1
s(Vinsert
p4263
I42
VSimpleName: verifyingStarted
p4264
Vinsert
p4265
I42
VSimpleName: pullControlToBeStubbed
p4266
tp4267
I1
s(g1810
I42
g1811
Vinsert
p4268
I43
VSimpleType: FinalClass
p4269
tp4270
I1
s(g2876
I42
g2877
Vinsert
p4271
I42
VSimpleName: input
p4272
tp4273
I1
s(g2988
I42
g2989
Vinsert
p4274
I42
VSimpleName: Object
p4275
tp4276
I4
s(Vinsert
p4277
I42
VSimpleName: clear
p4278
Vinsert
p4279
I45
VStringLiteral: "add"
p4280
tp4281
I1
s(Vinsert
p4282
I42
VSimpleName: setConstructorsAccessible
p4283
Vinsert
p4284
I42
VSimpleName: CreationSettings
p4285
tp4286
I1
s(g224
I42
g225
Vinsert
p4287
I8
VBlock
p4288
tp4289
I3
s(Vinsert
p4290
I42
VSimpleName: getClass
p4291
Vinsert
p4292
I32
VMethodInvocation
p4293
tp4294
I104
s(Vinsert
p4295
I42
VSimpleName: bark
p4296
Vinsert
p4297
I43
VSimpleType: Object
p4298
tp4299
I1
s(Vinsert
p4300
I42
VSimpleName: identifyGenericReturnType
p4301
Vinsert
p4302
I43
VSimpleType: MapNumberString
p4303
tp4304
I2
s(Vinsert
p4305
I42
VSimpleName: println
p4306
Vinsert
p4307
I42
VSimpleName: invoking
p4308
tp4309
I1
s(g3522
I42
g3523
Vinsert
p4310
I74
VParameterizedType: MockSettingsImpl<T>
p4311
tp4312
I1
s(g2557
I42
g2558
Vinsert
p4313
I43
VSimpleType: Commit
p4314
tp4315
I1
s(g1650
I42
g1651
Vinsert
p4316
I39
VPrimitiveType: void
p4317
tp4318
I5
s(g851
I42
g852
Vinsert
p4319
I42
VSimpleName: MockitoConfiguration
p4320
tp4321
I1
s(Vinsert
p4322
I42
VSimpleName: add
p4323
Vinsert
p4324
I43
VSimpleType: Class
p4325
tp4326
I5
s(g2390
I42
g2391
Vinsert
p4327
I42
VSimpleName: desc
p4328
tp4329
I2
s(Vinsert
p4330
I42
VSimpleName: simpleMethod
p4331
Vinsert
p4332
I42
VSimpleName: value
p4333
tp4334
I1
s(Vinsert
p4335
I42
VSimpleName: floatToRawIntBits
p4336
Vinsert
p4337
I8
VBlock
p4338
tp4339
I1
s(g3935
I42
g3936
Vinsert
p4340
I42
VSimpleName: registry
p4341
tp4342
I1
s(g4295
I42
g4296
Vinsert
p4343
I43
VSimpleType: Foo
p4344
tp4345
I1
s(Vinsert
p4346
I42
VSimpleName: RETURN_PARAMETER
p4347
Vinsert
p4348
I8
VBlock
p4349
tp4350
I1
s(g1924
I42
g1925
Vinsert
p4351
I41
VReturnStatement
p4352
tp4353
I2
s(Vinsert
p4354
I42
VSimpleName: bar
p4355
Vinsert
p4356
I60
VVariableDeclarationStatement
p4357
tp4358
I2
s(g3704
I42
g3705
Vinsert
p4359
I42
VSimpleName: declare_field
p4360
tp4361
I1
s(Vinsert
p4362
I42
VSimpleName: readPluginClass
p4363
Vinsert
p4364
I42
VSimpleName: assertNull
p4365
tp4366
I1
s(Vinsert
p4367
I42
VSimpleName: toInvocation
p4368
Vinsert
p4369
I42
VSimpleName: actualInvocation
p4370
tp4371
I1
s(Vinsert
p4372
I42
VSimpleName: getName
p4373
Vinsert
p4374
I27
VInfixExpression: +
p4375
tp4376
I7
s(Vinsert
p4377
I42
VSimpleName: getStackTrace
p4378
Vinsert
p4379
I41
VReturnStatement
p4380
tp4381
I3
s(Vinsert
p4382
I42
VSimpleName: getArguments
p4383
Vinsert
p4384
I43
VSimpleType: ArrayList
p4385
tp4386
I1
s(g1493
I42
g1494
Vinsert
p4387
I25
VIfStatement
p4388
tp4389
I3
s(g861
I42
g862
Vinsert
p4390
I8
VBlock
p4391
tp4392
I6
s(Vinsert
p4393
I42
VSimpleName: resolveGenericReturnType
p4394
Vinsert
p4395
I42
VSimpleName: inferFrom
p4396
tp4397
I3
s(g2557
I42
g2558
Vinsert
p4398
I42
VSimpleName: authorId
p4399
tp4400
I1
s(Vinsert
p4401
I42
VSimpleName: getValue
p4402
Vinsert
p4403
I45
VStringLiteral: "Wes"
p4404
tp4405
I1
s(g2934
I42
g2935
Vinsert
p4406
I43
VSimpleType: Runnable
p4407
tp4408
I1
s(Vinsert
p4409
I42
VSimpleName: newRow
p4410
Vinsert
p4411
I42
VSimpleName: table
p4412
tp4413
I4
s(g2718
I42
g2719
Vinsert
p4414
I83
VModifier: public
p4415
tp4416
I1
s(g2723
I42
g2724
Vinsert
p4417
I42
VSimpleName: removeVerifiedInOrder
p4418
tp4419
I1
s(Vinsert
p4420
I42
VSimpleName: compare
p4421
Vinsert
p4422
I43
VSimpleType: InvocationComparator
p4423
tp4424
I1
s(Vinsert
p4425
I42
VSimpleName: capture
p4426
Vinsert
p4427
I42
VSimpleName: mock
p4428
tp4429
I1
s(g1914
I42
g1915
Vinsert
p4430
I43
VSimpleType: String
p4431
tp4432
I1
s(g3532
I42
g3533
Vinsert
p4433
I27
VInfixExpression: +
p4434
tp4435
I1
s(Vinsert
p4436
I42
VSimpleName: run
p4437
Vinsert
p4438
I42
VSimpleName: loggerStub
p4439
tp4440
I1
s(Vinsert
p4441
I42
VSimpleName: process
p4442
Vinsert
p4443
I76
VWildcardType: ?
p4444
tp4445
I1
s(Vinsert
p4446
I42
VSimpleName: getType
p4447
Vinsert
p4448
I54
VTryStatement
p4449
tp4450
I2
s(Vinsert
p4451
I42
VSimpleName: verify
p4452
Vinsert
p4453
I42
VSimpleName: shouldFailVerificationOfNonFirstChunk
p4454
tp4455
I1
s(Vinsert
p4456
I42
VSimpleName: getTargetException
p4457
Vinsert
p4458
I44
VSingleVariableDeclaration
p4459
tp4460
I1
s(Vinsert
p4461
I42
VSimpleName: countNumberOfRelatedArticles
p4462
Vinsert
p4463
I70
VEnhancedForStatement
p4464
tp4465
I1
s(Vinsert
p4466
I42
VSimpleName: describedAs
p4467
Vinsert
p4468
I32
VMethodInvocation
p4469
tp4470
I5
s(g3288
I42
g3289
Vinsert
p4471
I42
VSimpleName: toInvocation
p4472
tp4473
I1
s(Vinsert
p4474
I42
VSimpleName: getInvocationContainer
p4475
Vinsert
p4476
I43
VSimpleType: MockUtil
p4477
tp4478
I1
s(Vinsert
p4479
I42
VSimpleName: find
p4480
Vinsert
p4481
I61
VWhileStatement
p4482
tp4483
I1
s(Vinsert
p4484
I42
VSimpleName: addAll
p4485
Vinsert
p4486
I74
VParameterizedType: LinkedList<String>
p4487
tp4488
I1
s(g4173
I42
g4174
Vinsert
p4489
I83
VModifier: final
p4490
tp4491
I1
s(Vinsert
p4492
I42
VSimpleName: getJavaMethod
p4493
Vinsert
p4494
I43
VSimpleType: Method
p4495
tp4496
I2
s(Vinsert
p4497
I42
VSimpleName: foo
p4498
Vinsert
p4499
I8
VBlock
p4500
tp4501
I2
s(Vinsert
p4502
I42
VSimpleName: matches
p4503
Vinsert
p4504
I45
VStringLiteral: "1"
p4505
tp4506
I1
s(g3336
I42
g3337
Vinsert
p4507
I44
VSingleVariableDeclaration
p4508
tp4509
I1
s(Vinsert
p4510
I42
VSimpleName: create
p4511
Vinsert
p4512
I43
VSimpleType: Object
p4513
tp4514
I1
s(g2390
I42
g2391
Vinsert
p4515
I42
VSimpleName: String
p4516
tp4517
I5
s(Vinsert
p4518
I42
VSimpleName: get
p4519
Vinsert
p4520
I42
VSimpleName: byLabel
p4521
tp4522
I1
s(Vinsert
p4523
I42
VSimpleName: getInvocationForStubbing
p4524
Vinsert
p4525
I42
VSimpleName: getStubbedInvocations
p4526
tp4527
I1
s(g114
I42
g115
Vinsert
p4528
I42
VSimpleName: MockitoMock
p4529
tp4530
I2
s(g3621
I42
g3622
Vinsert
p4531
I33
VNullLiteral
p4532
tp4533
I1
s(Vinsert
p4534
I42
VSimpleName: size
p4535
Vinsert
p4536
I42
VSimpleName: firstBad
p4537
tp4538
I1
s(Vinsert
p4539
I42
VSimpleName: getStubbingLookupListeners
p4540
Vinsert
p4541
I42
VSimpleName: mock
p4542
tp4543
I1
s(g1411
I42
g1412
Vinsert
p4544
I74
VParameterizedType: List<Invocation>
p4545
tp4546
I6
s(Vinsert
p4547
I42
VSimpleName: size
p4548
Vinsert
p4549
I42
VSimpleName: mock
p4550
tp4551
I3
s(g453
I42
g454
Vinsert
p4552
I59
VVariableDeclarationFragment
p4553
tp4554
I1
s(Vinsert
p4555
I42
VSimpleName: answer
p4556
Vinsert
p4557
I39
VPrimitiveType: short
p4558
tp4559
I2
s(Vinsert
p4560
I42
VSimpleName: append
p4561
Vinsert
p4562
I42
VSimpleName: appendString
p4563
tp4564
I1
s(g806
I42
g807
Vinsert
p4565
I8
VBlock
p4566
tp4567
I1
s(g1477
I42
g1478
Vinsert
p4568
I43
VSimpleType: IMethods
p4569
tp4570
I1
s(g144
I42
g145
Vinsert
p4571
I8
VBlock
p4572
tp4573
I1
s(g2248
I42
g2249
Vinsert
p4574
I42
VSimpleName: Invocation
p4575
tp4576
I1
s(Vinsert
p4577
I42
VSimpleName: removeLast
p4578
Vinsert
p4579
I42
VSimpleName: Answer
p4580
tp4581
I2
s(g3318
I42
g3319
Vinsert
p4582
I32
VMethodInvocation
p4583
tp4584
I7
s(Vinsert
p4585
I42
VSimpleName: markVerifiedInOrder
p4586
Vinsert
p4587
I83
VModifier: private
p4588
tp4589
I2
s(Vinsert
p4590
I42
VSimpleName: isAnnotationPresent
p4591
Vinsert
p4592
I66
VTextElement: If the field is not initialized, will try to initialize it, with a no-arg constructor.
p4593
tp4594
I1
s(Vinsert
p4595
I42
VSimpleName: timesNow
p4596
Vinsert
p4597
I32
VMethodInvocation
p4598
tp4599
I1
s(Vinsert
p4600
I42
VSimpleName: arrayReturningMethod
p4601
Vinsert
p4602
I39
VPrimitiveType: void
p4603
tp4604
I1
s(g3313
I42
g3314
Vinsert
p4605
I57
VTypeLiteral
p4606
tp4607
I1
s(g1896
I42
g1897
Vinsert
p4608
I42
VSimpleName: containsOnly
p4609
tp4610
I2
s(Vinsert
p4611
I42
VSimpleName: doSomething
p4612
Vinsert
p4613
I60
VVariableDeclarationStatement
p4614
tp4615
I1
s(Vinsert
p4616
I42
VSimpleName: doSomething
p4617
Vinsert
p4618
I42
VSimpleName: withSettings
p4619
tp4620
I1
s(g1398
I42
g1399
Vinsert
p4621
I43
VSimpleType: ListContainer
p4622
tp4623
I2
s(Vinsert
p4624
I42
VSimpleName: instance
p4625
Vinsert
p4626
I43
VSimpleType: RunNotifier
p4627
tp4628
I1
s(g2631
I42
g2632
Vinsert
p4629
I42
VSimpleName: finder
p4630
tp4631
I1
s(g971
I42
g972
Vinsert
p4632
I45
VStringLiteral: "] serializing now"
p4633
tp4634
I1
s(g3565
I42
g3566
Vinsert
p4635
I42
VSimpleName: type
p4636
tp4637
I2
s(Vinsert
p4638
I42
VSimpleName: getBarWithParams
p4639
Vinsert
p4640
I32
VMethodInvocation
p4641
tp4642
I3
s(g89
I42
g90
Vinsert
p4643
I59
VVariableDeclarationFragment
p4644
tp4645
I1
s(Vinsert
p4646
I42
VSimpleName: pullOngoingStubbing
p4647
Vinsert
p4648
I8
VBlock
p4649
tp4650
I1
s(g3590
I42
g3591
Vinsert
p4651
I43
VSimpleType: RuntimeException
p4652
tp4653
I4
s(g234
I42
g235
Vinsert
p4654
I42
VSimpleName: mv
p4655
tp4656
I2
s(Vinsert
p4657
I42
VSimpleName: getLength
p4658
Vinsert
p4659
I42
VSimpleName: o1
p4660
tp4661
I1
s(Vinsert
p4662
I42
VSimpleName: should
p4663
Vinsert
p4664
I42
VSimpleName: person
p4665
tp4666
I3
s(g1498
I42
g1499
Vinsert
p4667
I8
VBlock
p4668
tp4669
I1
s(Vinsert
p4670
I42
VSimpleName: currentThread
p4671
Vinsert
p4672
I42
VSimpleName: getContextClassLoader
p4673
tp4674
I2
s(Vinsert
p4675
I42
VSimpleName: clear
p4676
Vinsert
p4677
I42
VSimpleName: Invocation
p4678
tp4679
I2
s(Vinsert
p4680
I42
VSimpleName: toString
p4681
Vinsert
p4682
I43
VSimpleType: TooLittleInvocations
p4683
tp4684
I1
s(g1024
I42
g1025
Vinsert
p4685
I43
VSimpleType: Object
p4686
tp4687
I1
s(Vinsert
p4688
I42
VSimpleName: fieldWasInitializedUsingContructorArgs
p4689
Vinsert
p4690
I42
VSimpleName: assertFalse
p4691
tp4692
I3
s(g3346
I42
g3347
Vinsert
p4693
I9
VBooleanLiteral: true
p4694
tp4695
I1
s(Vinsert
p4696
I42
VSimpleName: currentTimeMillis
p4697
Vinsert
p4698
I43
VSimpleType: MockitoAssertionError
p4699
tp4700
I1
s(g282
I42
g283
Vinsert
p4701
I43
VSimpleType: Object
p4702
tp4703
I2
s(Vinsert
p4704
I42
VSimpleName: contains
p4705
Vinsert
p4706
I42
VSimpleName: setMultiline
p4707
tp4708
I1
s(Vinsert
p4709
I42
VSimpleName: addAll
p4710
Vinsert
p4711
I43
VSimpleType: MockSettings
p4712
tp4713
I1
s(Vinsert
p4714
I42
VSimpleName: getInternalState
p4715
Vinsert
p4716
I42
VSimpleName: MethodProxy
p4717
tp4718
I2
s(Vinsert
p4719
I42
VSimpleName: isVarArgs
p4720
Vinsert
p4721
I31
VMethodDeclaration
p4722
tp4723
I1
s(g2485
I42
g2486
Vinsert
p4724
I59
VVariableDeclarationFragment
p4725
tp4726
I1
s(g3725
I42
g3726
Vinsert
p4727
I74
VParameterizedType: Set<Object>
p4728
tp4729
I1
s(Vinsert
p4730
I42
VSimpleName: getGenericType
p4731
Vinsert
p4732
I42
VSimpleName: Exception
p4733
tp4734
I1
s(Vinsert
p4735
I42
VSimpleName: invokeSuper
p4736
Vinsert
p4737
I8
VBlock
p4738
tp4739
I5
s(Vinsert
p4740
I42
VSimpleName: getLocation
p4741
Vinsert
p4742
I42
VSimpleName: StubInfo
p4743
tp4744
I1
s(Vinsert
p4745
I42
VSimpleName: process
p4746
Vinsert
p4747
I21
VExpressionStatement
p4748
tp4749
I3
s(Vinsert
p4750
I42
VSimpleName: args
p4751
Vinsert
p4752
I59
VVariableDeclarationFragment
p4753
tp4754
I1
s(Vinsert
p4755
I42
VSimpleName: getInlineMockMaker
p4756
Vinsert
p4757
I83
VModifier: public
p4758
tp4759
I1
s(g861
I42
g862
Vinsert
p4760
I32
VMethodInvocation
p4761
tp4762
I10
s(Vinsert
p4763
I42
VSimpleName: missingMethodInOrderMode
p4764
Vinsert
p4765
I42
VSimpleName: missingMethodInOrderMode
p4766
tp4767
I1
s(Vinsert
p4768
I42
VSimpleName: getMockSettings
p4769
Vinsert
p4770
I42
VSimpleName: handler
p4771
tp4772
I2
s(g3303
I42
g3304
Vinsert
p4773
I32
VMethodInvocation
p4774
tp4775
I1
s(Vinsert
p4776
I42
VSimpleName: addThrowable
p4777
Vinsert
p4778
I21
VExpressionStatement
p4779
tp4780
I2
s(g1815
I42
g1816
Vinsert
p4781
I43
VSimpleType: Class
p4782
tp4783
I1
s(Vinsert
p4784
I42
VSimpleName: serializable
p4785
Vinsert
p4786
I21
VExpressionStatement
p4787
tp4788
I1
s(Vinsert
p4789
I42
VSimpleName: update
p4790
Vinsert
p4791
I42
VSimpleName: observer
p4792
tp4793
I1
s(g174
I42
g175
Vinsert
p4794
I21
VExpressionStatement
p4795
tp4796
I1
s(g2944
I42
g2945
Vinsert
p4797
I45
VStringLiteral: "c.C"
p4798
tp4799
I2
s(Vinsert
p4800
I42
VSimpleName: resetMock
p4801
Vinsert
p4802
I43
VSimpleType: SampleClass
p4803
tp4804
I1
s(g1074
I42
g1075
Vinsert
p4805
I45
VStringLiteral: "matched"
p4806
tp4807
I1
s(g337
I42
g338
Vinsert
p4808
I43
VSimpleType: Exception
p4809
tp4810
I2
s(g4372
I42
g4373
Vinsert
p4811
I42
VSimpleName: Throwable
p4812
tp4813
I1
s(g2266
I42
g2267
Vinsert
p4814
I43
VSimpleType: Exception
p4815
tp4816
I1
s(Vinsert
p4817
I42
VSimpleName: differentMethod
p4818
Vinsert
p4819
I42
VSimpleName: differentMethod
p4820
tp4821
I1
s(Vinsert
p4822
I42
VSimpleName: willReturn
p4823
Vinsert
p4824
I42
VSimpleName: MockHandlerImpl
p4825
tp4826
I2
s(Vinsert
p4827
I42
VSimpleName: getMethod
p4828
Vinsert
p4829
I43
VSimpleType: Method
p4830
tp4831
I4
s(g2369
I42
g2370
Vinsert
p4832
I43
VSimpleType: ArrayList
p4833
tp4834
I1
s(Vinsert
p4835
I42
VSimpleName: add
p4836
Vinsert
p4837
I42
VSimpleName: step
p4838
tp4839
I1
s(Vinsert
p4840
I42
VSimpleName: getStackTraceCleanerProvider
p4841
Vinsert
p4842
I32
VMethodInvocation
p4843
tp4844
I1
s(g1619
I42
g1620
Vinsert
p4845
I42
VSimpleName: isMock
p4846
tp4847
I4
s(Vinsert
p4848
I42
VSimpleName: get
p4849
Vinsert
p4850
I43
VSimpleType: Exception
p4851
tp4852
I1
s(Vinsert
p4853
I42
VSimpleName: argThat
p4854
Vinsert
p4855
I42
VSimpleName: add
p4856
tp4857
I1
s(g1259
I42
g1260
Vinsert
p4858
I14
VClassInstanceCreation
p4859
tp4860
I1
s(Vinsert
p4861
I42
VSimpleName: getUnusedStubbingsByLocation
p4862
Vinsert
p4863
I59
VVariableDeclarationFragment
p4864
tp4865
I1
s(Vinsert
p4866
I42
VSimpleName: simpleMethod
p4867
Vinsert
p4868
I43
VSimpleType: StubbingInBeforeUnused
p4869
tp4870
I2
s(Vinsert
p4871
I42
VSimpleName: isAbstract
p4872
Vinsert
p4873
I43
VSimpleType: InvocationOnMock
p4874
tp4875
I1
s(g3214
I42
g3215
Vinsert
p4876
I42
VSimpleName: accept
p4877
tp4878
I1
s(g4305
I42
g4306
Vinsert
p4879
I42
VSimpleName: InvocationOnMock
p4880
tp4881
I1
s(Vinsert
p4882
I42
VSimpleName: getMethod
p4883
Vinsert
p4884
I42
VSimpleName: exceptions
p4885
tp4886
I1
s(Vinsert
p4887
I42
VSimpleName: andThrows
p4888
Vinsert
p4889
I42
VSimpleName: stub
p4890
tp4891
I1
s(g3229
I42
g3230
Vinsert
p4892
I42
VSimpleName: TestBase
p4893
tp4894
I1
s(Vinsert
p4895
I42
VSimpleName: assertWantedIsVerifiable
p4896
Vinsert
p4897
I74
VParameterizedType: LinkedList<Invocation>
p4898
tp4899
I1
s(Vinsert
p4900
I42
VSimpleName: find
p4901
Vinsert
p4902
I42
VSimpleName: unused
p4903
tp4904
I1
s(g2439
I42
g2440
Vinsert
p4905
I42
VSimpleName: framework
p4906
tp4907
I1
s(g3083
I42
g3084
Vinsert
p4908
I45
VStringLiteral: "throwIt"
p4909
tp4910
I2
s(Vinsert
p4911
I42
VSimpleName: invoke
p4912
Vinsert
p4913
I44
VSingleVariableDeclaration
p4914
tp4915
I1
s(Vinsert
p4916
I42
VSimpleName: verify
p4917
Vinsert
p4918
I45
VStringLiteral: "of using matchers"
p4919
tp4920
I2
s(g2973
I42
g2974
Vinsert
p4921
I43
VSimpleType: T
p4922
tp4923
I1
s(Vinsert
p4924
I42
VSimpleName: getMethod
p4925
Vinsert
p4926
I42
VSimpleName: optional
p4927
tp4928
I2
s(Vinsert
p4929
I42
VSimpleName: findStubbings
p4930
Vinsert
p4931
I42
VSimpleName: stubInfo
p4932
tp4933
I1
s(Vinsert
p4934
I42
VSimpleName: getInstance
p4935
Vinsert
p4936
I42
VSimpleName: AnnotationVisitor
p4937
tp4938
I1
s(Vinsert
p4939
I42
VSimpleName: hasMessageContaining
p4940
Vinsert
p4941
I45
VStringLiteral: "Expected a MockitoException"
p4942
tp4943
I1
s(Vinsert
p4944
I42
VSimpleName: append
p4945
Vinsert
p4946
I45
VStringLiteral: ". "
p4947
tp4948
I2
s(g1388
I42
g1389
Vinsert
p4949
I42
VSimpleName: should_throw_friendly_reminder_exception_when_duration_is_negative
p4950
tp4951
I1
s(Vinsert
p4952
I42
VSimpleName: getDelay
p4953
Vinsert
p4954
I43
VSimpleType: VerificationMode
p4955
tp4956
I2
s(g2601
I42
g2602
Vinsert
p4957
I43
VSimpleType: MockUtil
p4958
tp4959
I5
s(g1765
I42
g1766
Vinsert
p4960
I43
VSimpleType: List
p4961
tp4962
I1
s(Vinsert
p4963
I42
VSimpleName: handle
p4964
Vinsert
p4965
I43
VSimpleType: Exception
p4966
tp4967
I2
s(Vinsert
p4968
I42
VSimpleName: getMethod
p4969
Vinsert
p4970
I14
VClassInstanceCreation
p4971
tp4972
I3
s(Vinsert
p4973
I42
VSimpleName: getActualMatcher
p4974
Vinsert
p4975
I11
VCastExpression
p4976
tp4977
I1
s(g2575
I42
g2576
Vinsert
p4978
I43
VSimpleType: Object
p4979
tp4980
I1
s(Vinsert
p4981
I42
VSimpleName: plugin
p4982
Vinsert
p4983
I42
VSimpleName: PluginLoader
p4984
tp4985
I1
s(Vinsert
p4986
I42
VSimpleName: mock
p4987
Vinsert
p4988
I43
VSimpleType: HardCodedReturnValues
p4989
tp4990
I1
s(Vinsert
p4991
I42
VSimpleName: forObject
p4992
Vinsert
p4993
I42
VSimpleName: mock
p4994
tp4995
I3
s(g2311
I42
g2312
Vinsert
p4996
I43
VSimpleType: StackTraceElement
p4997
tp4998
I1
s(Vinsert
p4999
I42
VSimpleName: getClass
p5000
Vinsert
p5001
I42
VSimpleName: args
p5002
tp5003
I2
s(g1362
I42
g1363
Vinsert
p5004
I42
VSimpleName: TOP
p5005
tp5006
I1
s(Vinsert
p5007
I42
VSimpleName: setAccessible
p5008
Vinsert
p5009
I34
VNumberLiteral: 0
p5010
tp5011
I1
s(Vinsert
p5012
I42
VSimpleName: getMockHandler
p5013
Vinsert
p5014
I38
VPrefixExpression: !
p5015
tp5016
I1
s(Vinsert
p5017
I42
VSimpleName: createMockitoMethod
p5018
Vinsert
p5019
I42
VSimpleName: methodProxy
p5020
tp5021
I1
s(Vinsert
p5022
I42
VSimpleName: isVoid
p5023
Vinsert
p5024
I42
VSimpleName: InvocationBuilder
p5025
tp5026
I1
s(g1049
I42
g1050
Vinsert
p5027
I54
VTryStatement
p5028
tp5029
I1
s(g941
I42
g942
Vinsert
p5030
I44
VSingleVariableDeclaration
p5031
tp5032
I1
s(Vinsert
p5033
I42
VSimpleName: isEmpty
p5034
Vinsert
p5035
I52
VThisExpression
p5036
tp5037
I1
s(g991
I42
g992
Vinsert
p5038
I34
VNumberLiteral: 1
p5039
tp5040
I1
s(g2728
I42
g2729
Vinsert
p5041
I42
VSimpleName: Method
p5042
tp5043
I1
s(g1159
I42
g1160
Vinsert
p5044
I85
VDimension
p5045
tp5046
I1
s(Vinsert
p5047
I42
VSimpleName: isEmpty
p5048
Vinsert
p5049
I42
VSimpleName: assertEquals
p5050
tp5051
I1
s(Vinsert
p5052
I42
VSimpleName: getCanonicalName
p5053
Vinsert
p5054
I42
VSimpleName: proxyClass
p5055
tp5056
I1
s(Vinsert
p5057
I42
VSimpleName: getCause
p5058
Vinsert
p5059
I43
VSimpleType: InvocationTargetException
p5060
tp5061
I5
s(Vinsert
p5062
I42
VSimpleName: stubbingStarted
p5063
Vinsert
p5064
I42
VSimpleName: MethodSelector
p5065
tp5066
I1
s(Vinsert
p5067
I42
VSimpleName: atLeastOnce
p5068
Vinsert
p5069
I39
VPrimitiveType: int
p5070
tp5071
I1
s(g2575
I42
g2576
Vinsert
p5072
I42
VSimpleName: resolvedInstance
p5073
tp5074
I1
s(g4133
I42
g4134
Vinsert
p5075
I43
VSimpleType: Invocation
p5076
tp5077
I1
s(Vinsert
p5078
I42
VSimpleName: pluralize
p5079
Vinsert
p5080
I32
VMethodInvocation
p5081
tp5082
I4
s(Vinsert
p5083
I42
VSimpleName: simpleMethod
p5084
Vinsert
p5085
I53
VThrowStatement
p5086
tp5087
I2
s(g4300
I42
g4301
Vinsert
p5088
I42
VSimpleName: assertEquals
p5089
tp5090
I2
s(g139
I42
g140
Vinsert
p5091
I42
VSimpleName: MockitoMatcher
p5092
tp5093
I1
s(g1269
I42
g1270
Vinsert
p5094
I45
VStringLiteral: "1"
p5095
tp5096
I1
s(g3229
I42
g3230
Vinsert
p5097
I83
VModifier: public
p5098
tp5099
I1
s(Vinsert
p5100
I42
VSimpleName: return_value
p5101
Vinsert
p5102
I42
VSimpleName: load_arg
p5103
tp5104
I1
s(Vinsert
p5105
I42
VSimpleName: strictOrderVerifier
p5106
Vinsert
p5107
I39
VPrimitiveType: void
p5108
tp5109
I1
s(g1765
I42
g1766
Vinsert
p5110
I42
VSimpleName: otherCandidateField
p5111
tp5112
I1
s(Vinsert
p5113
I42
VSimpleName: size
p5114
Vinsert
p5115
I42
VSimpleName: objects
p5116
tp5117
I2
s(Vinsert
p5118
I42
VSimpleName: varargs
p5119
Vinsert
p5120
I31
VMethodDeclaration
p5121
tp5122
I1
s(Vinsert
p5123
I42
VSimpleName: blah
p5124
Vinsert
p5125
I57
VTypeLiteral
p5126
tp5127
I1
s(Vinsert
p5128
I42
VSimpleName: add
p5129
Vinsert
p5130
I40
VQualifiedName: finderStub.actualToReturn
p5131
tp5132
I1
s(Vinsert
p5133
I42
VSimpleName: visitFrame
p5134
Vinsert
p5135
I50
VSwitchStatement
p5136
tp5137
I1
s(Vinsert
p5138
I42
VSimpleName: visitParameterType
p5139
Vinsert
p5140
I42
VSimpleName: v
p5141
tp5142
I1
s(g2085
I42
g2086
Vinsert
p5143
I42
VSimpleName: HashMap
p5144
tp5145
I1
s(Vinsert
p5146
I42
VSimpleName: getMessage
p5147
Vinsert
p5148
I45
VStringLiteral: "Argument passed to when() method is not a mock"
p5149
tp5150
I1
s(Vinsert
p5151
I42
VSimpleName: resolveGenericReturnType
p5152
Vinsert
p5153
I42
VSimpleName: from
p5154
tp5155
I2
s(g4420
I42
g4421
Vinsert
p5156
I41
VReturnStatement
p5157
tp5158
I2
s(Vinsert
p5159
I42
VSimpleName: reflectionEquals
p5160
Vinsert
p5161
I42
VSimpleName: actual
p5162
tp5163
I1
s(Vinsert
p5164
I42
VSimpleName: fillInStackTrace
p5165
Vinsert
p5166
I42
VSimpleName: InvocationOnMock
p5167
tp5168
I1
s(Vinsert
p5169
I42
VSimpleName: inSequence
p5170
Vinsert
p5171
I42
VSimpleName: Object
p5172
tp5173
I2
s(g1134
I42
g1135
Vinsert
p5174
I14
VClassInstanceCreation
p5175
tp5176
I2
s(g4577
I42
g4578
Vinsert
p5177
I44
VSingleVariableDeclaration
p5178
tp5179
I2
s(Vinsert
p5180
I42
VSimpleName: someMethod
p5181
Vinsert
p5182
I42
VSimpleName: root
p5183
tp5184
I1
s(g2662
I42
g2663
Vinsert
p5185
I42
VSimpleName: getLastInvocation
p5186
tp5187
I1
s(g2248
I42
g2249
Vinsert
p5188
I42
VSimpleName: mockSettings
p5189
tp5190
I1
s(Vinsert
p5191
I42
VSimpleName: getName
p5192
Vinsert
p5193
I42
VSimpleName: Source
p5194
tp5195
I2
s(Vinsert
p5196
I42
VSimpleName: validateState
p5197
Vinsert
p5198
I42
VSimpleName: mockingProgress
p5199
tp5200
I5
s(Vinsert
p5201
I42
VSimpleName: getInt
p5202
Vinsert
p5203
I42
VSimpleName: stub
p5204
tp5205
I1
s(Vinsert
p5206
I42
VSimpleName: size
p5207
Vinsert
p5208
I43
VSimpleType: CodeEmitter
p5209
tp5210
I1
s(Vinsert
p5211
I42
VSimpleName: twoArgumentMethod
p5212
Vinsert
p5213
I42
VSimpleName: shouldPrintFirstUnexpectedInvocationWhenVerifyingZeroInteractions
p5214
tp5215
I1
s(Vinsert
p5216
I42
VSimpleName: getActualTypeArguments
p5217
Vinsert
p5218
I42
VSimpleName: ParameterizedType
p5219
tp5220
I2
s(Vinsert
p5221
I42
VSimpleName: simpleMethod
p5222
Vinsert
p5223
I42
VSimpleName: mockThree
p5224
tp5225
I2
s(Vinsert
p5226
I42
VSimpleName: getList
p5227
Vinsert
p5228
I42
VSimpleName: List
p5229
tp5230
I1
s(g169
I42
g170
Vinsert
p5231
I39
VPrimitiveType: void
p5232
tp5233
I1
s(g4973
I42
g4974
Vinsert
p5234
I42
VSimpleName: MatcherDecorator
p5235
tp5236
I2
s(Vinsert
p5237
I42
VSimpleName: mockingProgress
p5238
Vinsert
p5239
I43
VSimpleType: StubbingListener
p5240
tp5241
I1
s(g1105
I42
g1106
Vinsert
p5242
I32
VMethodInvocation
p5243
tp5244
I2
s(Vinsert
p5245
I42
VSimpleName: fillInStackTrace
p5246
Vinsert
p5247
I83
VModifier: static
p5248
tp5249
I1
s(g2326
I42
g2327
Vinsert
p5250
I43
VSimpleType: IllegalStateException
p5251
tp5252
I1
s(g976
I42
g977
Vinsert
p5253
I42
VSimpleName: count
p5254
tp5255
I1
s(Vinsert
p5256
I42
VSimpleName: append
p5257
Vinsert
p5258
I42
VSimpleName: out
p5259
tp5260
I4
s(g3116
I42
g3117
Vinsert
p5261
I59
VVariableDeclarationFragment
p5262
tp5263
I1
s(Vinsert
p5264
I42
VSimpleName: verify
p5265
Vinsert
p5266
I43
VSimpleType: StrictVerificationError
p5267
tp5268
I1
s(Vinsert
p5269
I42
VSimpleName: callAsync
p5270
Vinsert
p5271
I34
VNumberLiteral: 30
p5272
tp5273
I1
s(Vinsert
p5274
I42
VSimpleName: add
p5275
Vinsert
p5276
I42
VSimpleName: HashCodeAndEqualsSafeSet
p5277
tp5278
I2
s(g2642
I42
g2643
Vinsert
p5279
I31
VMethodDeclaration
p5280
tp5281
I5
s(Vinsert
p5282
I42
VSimpleName: orderOfInvocationsMatters
p5283
Vinsert
p5284
I42
VSimpleName: mode
p5285
tp5286
I2
s(g2626
I42
g2627
Vinsert
p5287
I83
VModifier: static
p5288
tp5289
I2
s(Vinsert
p5290
I42
VSimpleName: addAll
p5291
Vinsert
p5292
I33
VNullLiteral
p5293
tp5294
I1
s(Vinsert
p5295
I42
VSimpleName: primitiveTypeOf
p5296
Vinsert
p5297
I25
VIfStatement
p5298
tp5299
I1
s(Vinsert
p5300
I42
VSimpleName: getName
p5301
Vinsert
p5302
I42
VSimpleName: exceptionFactory
p5303
tp5304
I1
s(Vinsert
p5305
I42
VSimpleName: getDeclaredMethods
p5306
Vinsert
p5307
I32
VMethodInvocation
p5308
tp5309
I2
s(g4367
I42
g4368
Vinsert
p5310
I42
VSimpleName: toString
p5311
tp5312
I1
s(g3431
I42
g3432
Vinsert
p5313
I66
VTextElement: Closes the target. Does nothing when target is null. Is not silent, throws exception on IOException.
p5314
tp5315
I1
s(Vinsert
p5316
I42
VSimpleName: run
p5317
Vinsert
p5318
I42
VSimpleName: TestCreationListener
p5319
tp5320
I1
s(Vinsert
p5321
I42
VSimpleName: resolveGenericReturnType
p5322
Vinsert
p5323
I42
VSimpleName: genericMetadata
p5324
tp5325
I3
s(g3688
I42
g3689
Vinsert
p5326
I43
VSimpleType: FrameworkMethod
p5327
tp5328
I1
s(g1034
I42
g1035
Vinsert
p5329
I25
VIfStatement
p5330
tp5331
I10
s(g2462
I42
g2463
Vinsert
p5332
I43
VSimpleType: SomeBeanWithJustAGetter
p5333
tp5334
I2
s(Vinsert
p5335
I42
VSimpleName: evaluate
p5336
Vinsert
p5337
I43
VSimpleType: FrameworkMethod
p5338
tp5339
I1
s(g5226
I42
g5227
Vinsert
p5340
I42
VSimpleName: mockTwo
p5341
tp5342
I1
s(g4148
I42
g4149
Vinsert
p5343
I42
VSimpleName: chain
p5344
tp5345
I2
s(g1029
I42
g1030
Vinsert
p5346
I42
VSimpleName: argTypes
p5347
tp5348
I1
s(g1110
I42
g1111
Vinsert
p5349
I27
VInfixExpression: !=
p5350
tp5351
I2
s(Vinsert
p5352
I42
VSimpleName: inOrder
p5353
Vinsert
p5354
I60
VVariableDeclarationStatement
p5355
tp5356
I1
s(g2485
I42
g2486
Vinsert
p5357
I42
VSimpleName: List
p5358
tp5359
I1
s(Vinsert
p5360
I42
VSimpleName: potentialStubbingProblemByJUnitRule
p5361
Vinsert
p5362
I42
VSimpleName: argMismatchStubbings
p5363
tp5364
I2
s(g1706
I42
g1707
Vinsert
p5365
I45
VStringLiteral: "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker"
p5366
tp5367
I1
s(Vinsert
p5368
I42
VSimpleName: isAssignableFrom
p5369
Vinsert
p5370
I27
VInfixExpression: ==
p5371
tp5372
I1
s(Vinsert
p5373
I42
VSimpleName: clear
p5374
Vinsert
p5375
I42
VSimpleName: initMocks
p5376
tp5377
I1
s(Vinsert
p5378
I42
VSimpleName: getDisplayName
p5379
Vinsert
p5380
I31
VMethodDeclaration
p5381
tp5382
I1
s(Vinsert
p5383
I42
VSimpleName: getMockHandler
p5384
Vinsert
p5385
I43
VSimpleType: List
p5386
tp5387
I1
s(Vinsert
p5388
I42
VSimpleName: add
p5389
Vinsert
p5390
I43
VSimpleType: InvocationChunk
p5391
tp5392
I2
s(Vinsert
p5393
I42
VSimpleName: equals
p5394
Vinsert
p5395
I22
VFieldAccess
p5396
tp5397
I3
s(Vinsert
p5398
I42
VSimpleName: returnFor
p5399
Vinsert
p5400
I42
VSimpleName: Test
p5401
tp5402
I1
s(Vinsert
p5403
I42
VSimpleName: getClass
p5404
Vinsert
p5405
I45
VStringLiteral: "test"
p5406
tp5407
I1
s(Vinsert
p5408
I42
VSimpleName: getStrategy
p5409
Vinsert
p5410
I14
VClassInstanceCreation
p5411
tp5412
I1
s(g2374
I42
g2375
Vinsert
p5413
I41
VReturnStatement
p5414
tp5415
I1
s(Vinsert
p5416
I42
VSimpleName: doCallRealMethod
p5417
Vinsert
p5418
I42
VSimpleName: BDDStubberImpl
p5419
tp5420
I1
s(Vinsert
p5421
I42
VSimpleName: forCollection
p5422
Vinsert
p5423
I42
VSimpleName: forCollection
p5424
tp5425
I1
s(Vinsert
p5426
I42
VSimpleName: isArray
p5427
Vinsert
p5428
I42
VSimpleName: features
p5429
tp5430
I1
s(Vinsert
p5431
I42
VSimpleName: getRawArguments
p5432
Vinsert
p5433
I42
VSimpleName: regularArgumentsSize
p5434
tp5435
I1
s(g4027
I42
g4028
Vinsert
p5436
I42
VSimpleName: filePath1
p5437
tp5438
I1
s(Vinsert
p5439
I42
VSimpleName: compile
p5440
Vinsert
p5441
I60
VVariableDeclarationStatement
p5442
tp5443
I2
s(g2503
I42
g2504
Vinsert
p5444
I42
VSimpleName: impl
p5445
tp5446
I1
s(g4295
I42
g4296
Vinsert
p5447
I44
VSingleVariableDeclaration
p5448
tp5449
I1
s(g3601
I42
g3602
Vinsert
p5450
I59
VVariableDeclarationFragment
p5451
tp5452
I1
s(g129
I42
g130
Vinsert
p5453
I11
VCastExpression
p5454
tp5455
I1
s(Vinsert
p5456
I42
VSimpleName: isPrimitive
p5457
Vinsert
p5458
I42
VSimpleName: type
p5459
tp5460
I9
s(Vinsert
p5461
I42
VSimpleName: getProperty
p5462
Vinsert
p5463
I42
VSimpleName: OS_NAME
p5464
tp5465
I1
s(Vinsert
p5466
I42
VSimpleName: replaceAll
p5467
Vinsert
p5468
I65
VTagElement
p5469
tp5470
I1
s(g5123
I42
g5124
Vinsert
p5471
I43
VSimpleType: Foo
p5472
tp5473
I2
s(g5078
I42
g5079
Vinsert
p5474
I42
VSimpleName: getPluralizedWantedCount
p5475
tp5476
I2
s(g5305
I42
g5306
Vinsert
p5477
I59
VVariableDeclarationFragment
p5478
tp5479
I1
s(Vinsert
p5480
I42
VSimpleName: add
p5481
Vinsert
p5482
I42
VSimpleName: never
p5483
tp5484
I3
s(g5456
I42
g5457
Vinsert
p5485
I42
VSimpleName: nonMockableReason
p5486
tp5487
I2
s(g6
I42
g7
Vinsert
p5488
I41
VReturnStatement
p5489
tp5490
I4
s(Vinsert
p5491
I42
VSimpleName: atLeast
p5492
Vinsert
p5493
I43
VSimpleType: Exception
p5494
tp5495
I1
s(Vinsert
p5496
I42
VSimpleName: add
p5497
Vinsert
p5498
I34
VNumberLiteral: 2
p5499
tp5500
I3
s(Vinsert
p5501
I42
VSimpleName: append
p5502
Vinsert
p5503
I39
VPrimitiveType: char
p5504
tp5505
I1
s(g1871
I42
g1872
Vinsert
p5506
I42
VSimpleName: isVoid
p5507
tp5508
I1
s(g543
I42
g544
Vinsert
p5509
I27
VInfixExpression: +
p5510
tp5511
I2
s(Vinsert
p5512
I42
VSimpleName: allAsyncCallsStarted
p5513
Vinsert
p5514
I42
VSimpleName: executor
p5515
tp5516
I1
s(Vinsert
p5517
I42
VSimpleName: validateState
p5518
Vinsert
p5519
I42
VSimpleName: validateFrameworkState
p5520
tp5521
I1
s(Vinsert
p5522
I42
VSimpleName: getClassLoader
p5523
Vinsert
p5524
I43
VSimpleType: ClassLoader
p5525
tp5526
I3
s(g5067
I42
g5068
Vinsert
p5527
I14
VClassInstanceCreation
p5528
tp5529
I2
s(Vinsert
p5530
I42
VSimpleName: getConstructor
p5531
Vinsert
p5532
I59
VVariableDeclarationFragment
p5533
tp5534
I2
s(g732
I42
g733
Vinsert
p5535
I42
VSimpleName: wantedMethodName
p5536
tp5537
I3
s(g2408
I42
g2409
Vinsert
p5538
I52
VThisExpression
p5539
tp5540
I1
s(g2095
I42
g2096
Vinsert
p5541
I43
VSimpleType: UUID
p5542
tp5543
I1
s(Vinsert
p5544
I42
VSimpleName: newInstance
p5545
Vinsert
p5546
I42
VSimpleName: type
p5547
tp5548
I1
s(Vinsert
p5549
I42
VSimpleName: returnsNormalType
p5550
Vinsert
p5551
I42
VSimpleName: Exception
p5552
tp5553
I1
s(Vinsert
p5554
I42
VSimpleName: addAll
p5555
Vinsert
p5556
I74
VParameterizedType: LinkedList<Invocation>
p5557
tp5558
I1
s(g74
I42
g75
Vinsert
p5559
I59
VVariableDeclarationFragment
p5560
tp5561
I2
s(Vinsert
p5562
I42
VSimpleName: findStubbings
p5563
Vinsert
p5564
I11
VCastExpression
p5565
tp5566
I1
s(g5062
I42
g5063
Vinsert
p5567
I83
VModifier: static
p5568
tp5569
I1
s(Vinsert
p5570
I42
VSimpleName: toStringWithArgumentTypes
p5571
Vinsert
p5572
I8
VBlock
p5573
tp5574
I1
s(Vinsert
p5575
I42
VSimpleName: onlyIf
p5576
Vinsert
p5577
I44
VSingleVariableDeclaration
p5578
tp5579
I1
s(g986
I42
g987
Vinsert
p5580
I42
VSimpleName: mv
p5581
tp5582
I3
s(Vinsert
p5583
I42
VSimpleName: from
p5584
Vinsert
p5585
I42
VSimpleName: MockitoGenericMetadata
p5586
tp5587
I2
s(g463
I42
g464
Vinsert
p5588
I42
VSimpleName: accept
p5589
tp5590
I1
s(Vinsert
p5591
I42
VSimpleName: initMocks
p5592
Vinsert
p5593
I42
VSimpleName: createTest
p5594
tp5595
I6
s(g4111
I42
g4112
Vinsert
p5596
I42
VSimpleName: toInspect
p5597
tp5598
I1
s(Vinsert
p5599
I42
VSimpleName: add
p5600
Vinsert
p5601
I42
VSimpleName: visitAttribute
p5602
tp5603
I1
s(Vinsert
p5604
I42
VSimpleName: returnZero
p5605
Vinsert
p5606
I32
VMethodInvocation
p5607
tp5608
I2
s(Vinsert
p5609
I42
VSimpleName: isMock
p5610
Vinsert
p5611
I65
VTagElement
p5612
tp5613
I2
s(Vinsert
p5614
I42
VSimpleName: get
p5615
Vinsert
p5616
I42
VSimpleName: only
p5617
tp5618
I2
s(g1543
I42
g1544
Vinsert
p5619
I32
VMethodInvocation
p5620
tp5621
I8
s(Vinsert
p5622
I42
VSimpleName: getParameterTypes
p5623
Vinsert
p5624
I27
VInfixExpression: ==
p5625
tp5626
I3
s(g352
I42
g353
Vinsert
p5627
I42
VSimpleName: StubbingArgMismatches
p5628
tp5629
I1
s(g3436
I42
g3437
Vinsert
p5630
I42
VSimpleName: methodProxy
p5631
tp5632
I5
s(g2498
I42
g2499
Vinsert
p5633
I43
VSimpleType: String
p5634
tp5635
I1
s(Vinsert
p5636
I42
VSimpleName: stub
p5637
Vinsert
p5638
I32
VMethodInvocation
p5639
tp5640
I5
s(g1513
I42
g1514
Vinsert
p5641
I42
VSimpleName: TestFinishedEvent
p5642
tp5643
I1
s(g4991
I42
g4992
Vinsert
p5644
I8
VBlock
p5645
tp5646
I1
s(Vinsert
p5647
I42
VSimpleName: getDescription
p5648
Vinsert
p5649
I42
VSimpleName: attempted
p5650
tp5651
I1
s(g3364
I42
g3365
Vinsert
p5652
I42
VSimpleName: forObject
p5653
tp5654
I1
s(Vinsert
p5655
I42
VSimpleName: initMocks
p5656
Vinsert
p5657
I42
VSimpleName: beforeTest
p5658
tp5659
I1
s(Vinsert
p5660
I42
VSimpleName: thenReturn
p5661
Vinsert
p5662
I42
VSimpleName: mock3
p5663
tp5664
I2
s(Vinsert
p5665
I42
VSimpleName: get
p5666
Vinsert
p5667
I42
VSimpleName: createInfoField
p5668
tp5669
I2
s(g755
I42
g756
Vinsert
p5670
I43
VSimpleType: Object
p5671
tp5672
I1
s(g3426
I42
g3427
Vinsert
p5673
I34
VNumberLiteral: 1
p5674
tp5675
I4
s(g3369
I42
g3370
Vinsert
p5676
I42
VSimpleName: Object
p5677
tp5678
I1
s(Vinsert
p5679
I42
VSimpleName: booleanObjectReturningMethod
p5680
Vinsert
p5681
I45
VStringLiteral: "foo"
p5682
tp5683
I1
s(g1675
I42
g1676
Vinsert
p5684
I31
VMethodDeclaration
p5685
tp5686
I1
s(g1573
I42
g1574
Vinsert
p5687
I59
VVariableDeclarationFragment
p5688
tp5689
I1
s(Vinsert
p5690
I42
VSimpleName: defaultValue
p5691
Vinsert
p5692
I42
VSimpleName: value
p5693
tp5694
I2
s(g51
I42
g52
Vinsert
p5695
I42
VSimpleName: first
p5696
tp5697
I2
s(g1780
I42
g1781
Vinsert
p5698
I42
VSimpleName: toStringMethod
p5699
tp5700
I1
s(g4168
I42
g4169
Vinsert
p5701
I42
VSimpleName: accept
p5702
tp5703
I1
s(Vinsert
p5704
I42
VSimpleName: verify
p5705
Vinsert
p5706
I42
VSimpleName: anyInt
p5707
tp5708
I6
s(g2452
I42
g2453
Vinsert
p5709
I43
VSimpleType: ObjectInputStream
p5710
tp5711
I1
s(Vinsert
p5712
I42
VSimpleName: put
p5713
Vinsert
p5714
I42
VSimpleName: i
p5715
tp5716
I3
s(Vinsert
p5717
I42
VSimpleName: threeArgumentMethod
p5718
Vinsert
p5719
I31
VMethodDeclaration
p5720
tp5721
I1
s(g1144
I42
g1145
Vinsert
p5722
I25
VIfStatement
p5723
tp5724
I1
s(Vinsert
p5725
I42
VSimpleName: simpleMethod
p5726
Vinsert
p5727
I42
VSimpleName: objectReturningMethod
p5728
tp5729
I1
s(g4231
I42
g4232
Vinsert
p5730
I59
VVariableDeclarationFragment
p5731
tp5732
I22
s(Vinsert
p5733
I42
VSimpleName: clear
p5734
Vinsert
p5735
I43
VSimpleType: List
p5736
tp5737
I1
s(g1513
I42
g1514
Vinsert
p5738
I43
VSimpleType: TestFinishedEvent
p5739
tp5740
I1
s(g4952
I42
g4953
Vinsert
p5741
I32
VMethodInvocation
p5742
tp5743
I1
s(Vinsert
p5744
I42
VSimpleName: call
p5745
Vinsert
p5746
I42
VSimpleName: callable
p5747
tp5748
I1
s(g2359
I42
g2360
Vinsert
p5749
I60
VVariableDeclarationStatement
p5750
tp5751
I8
s(Vinsert
p5752
I42
VSimpleName: matchesActualCount
p5753
Vinsert
p5754
I42
VSimpleName: Exception
p5755
tp5756
I1
s(g1619
I42
g1620
Vinsert
p5757
I31
VMethodDeclaration
p5758
tp5759
I4
s(Vinsert
p5760
I42
VSimpleName: getDeclaredConstructor
p5761
Vinsert
p5762
I42
VSimpleName: classToMock
p5763
tp5764
I2
s(g961
I42
g962
Vinsert
p5765
I42
VSimpleName: previous
p5766
tp5767
I1
s(Vinsert
p5768
I42
VSimpleName: getArgument
p5769
Vinsert
p5770
I43
VSimpleType: Throwable
p5771
tp5772
I1
s(g1642
I42
g1643
Vinsert
p5773
I8
VBlock
p5774
tp5775
I1
s(Vinsert
p5776
I42
VSimpleName: start
p5777
Vinsert
p5778
I42
VSimpleName: waitAndExerciseMock
p5779
tp5780
I4
s(Vinsert
p5781
I42
VSimpleName: framework
p5782
Vinsert
p5783
I43
VSimpleType: MockitoFramework
p5784
tp5785
I1
s(g4600
I42
g4601
Vinsert
p5786
I22
VFieldAccess
p5787
tp5788
I1
s(Vinsert
p5789
I42
VSimpleName: cannotInitializeForInjectMocksAnnotation
p5790
Vinsert
p5791
I44
VSingleVariableDeclaration
p5792
tp5793
I1
s(Vinsert
p5794
I42
VSimpleName: apply
p5795
Vinsert
p5796
I42
VSimpleName: assertAccepted
p5797
tp5798
I1
s(g3229
I42
g3230
Vinsert
p5799
I43
VSimpleType: StateMaster
p5800
tp5801
I1
s(g337
I42
g338
Vinsert
p5802
I12
VCatchClause
p5803
tp5804
I2
s(Vinsert
p5805
I42
VSimpleName: createSocket
p5806
Vinsert
p5807
I45
VStringLiteral: "google.com"
p5808
tp5809
I1
s(Vinsert
p5810
I42
VSimpleName: setInternalState
p5811
Vinsert
p5812
I32
VMethodInvocation
p5813
tp5814
I1
s(g189
I42
g190
Vinsert
p5815
I45
VStringLiteral: "f"
p5816
tp5817
I1
s(g5522
I42
g5523
Vinsert
p5818
I31
VMethodDeclaration
p5819
tp5820
I3
s(Vinsert
p5821
I42
VSimpleName: isOut
p5822
Vinsert
p5823
I44
VSingleVariableDeclaration
p5824
tp5825
I1
s(g1614
I42
g1615
Vinsert
p5826
I39
VPrimitiveType: void
p5827
tp5828
I1
s(Vinsert
p5829
I42
VSimpleName: isVerified
p5830
Vinsert
p5831
I41
VReturnStatement
p5832
tp5833
I3
s(Vinsert
p5834
I42
VSimpleName: usingConstructorWithFancySerializable
p5835
Vinsert
p5836
I8
VBlock
p5837
tp5838
I2
s(Vinsert
p5839
I42
VSimpleName: getDeclaringClass
p5840
Vinsert
p5841
I83
VModifier: private
p5842
tp5843
I1
s(g4624
I42
g4625
Vinsert
p5844
I42
VSimpleName: notifier
p5845
tp5846
I2
s(Vinsert
p5847
I42
VSimpleName: getMessage
p5848
Vinsert
p5849
I42
VSimpleName: value
p5850
tp5851
I3
s(g2590
I42
g2591
Vinsert
p5852
I5
VArrayType: byte[]
p5853
tp5854
I1
s(g99
I42
g100
Vinsert
p5855
I42
VSimpleName: getDescription
p5856
tp5857
I3
s(Vinsert
p5858
I42
VSimpleName: getTestClass
p5859
Vinsert
p5860
I42
VSimpleName: method
p5861
tp5862
I1
s(g2429
I42
g2430
Vinsert
p5863
I42
VSimpleName: Test
p5864
tp5865
I2
s(g3570
I42
g3571
Vinsert
p5866
I43
VSimpleType: Comparable
p5867
tp5868
I1
s(Vinsert
p5869
I42
VSimpleName: getDeclaredFields
p5870
Vinsert
p5871
I27
VInfixExpression: +
p5872
tp5873
I1
s(Vinsert
p5874
I42
VSimpleName: objectReturningMethod
p5875
Vinsert
p5876
I42
VSimpleName: reset
p5877
tp5878
I1
s(Vinsert
p5879
I42
VSimpleName: start
p5880
Vinsert
p5881
I42
VSimpleName: runnables
p5882
tp5883
I1
s(g1924
I42
g1925
Vinsert
p5884
I42
VSimpleName: mockInstance
p5885
tp5886
I1
s(Vinsert
p5887
I42
VSimpleName: getExtraInterfaces
p5888
Vinsert
p5889
I42
VSimpleName: mockSettings
p5890
tp5891
I2
s(Vinsert
p5892
I42
VSimpleName: getInvocations
p5893
Vinsert
p5894
I26
VImportDeclaration
p5895
tp5896
I2
s(Vinsert
p5897
I42
VSimpleName: getClass
p5898
Vinsert
p5899
I36
VParenthesizedExpression
p5900
tp5901
I1
s(Vinsert
p5902
I42
VSimpleName: toString
p5903
Vinsert
p5904
I21
VExpressionStatement
p5905
tp5906
I18
s(g5821
I42
g5822
Vinsert
p5907
I42
VSimpleName: filter
p5908
tp5909
I1
s(g4436
I42
g4437
Vinsert
p5910
I34
VNumberLiteral: 1
p5911
tp5912
I2
s(g1159
I42
g1160
Vinsert
p5913
I39
VPrimitiveType: void
p5914
tp5915
I1
s(Vinsert
p5916
I42
VSimpleName: simpleMethodWithArgument
p5917
Vinsert
p5918
I45
VStringLiteral: "2"
p5919
tp5920
I1
s(Vinsert
p5921
I42
VSimpleName: doThrow
p5922
Vinsert
p5923
I42
VSimpleName: shouldAllowChainedStubbingWithExceptionClass
p5924
tp5925
I1
s(Vinsert
p5926
I42
VSimpleName: newInstance
p5927
Vinsert
p5928
I42
VSimpleName: IMockitoConfiguration
p5929
tp5930
I1
s(g583
I42
g584
Vinsert
p5931
I42
VSimpleName: invocations
p5932
tp5933
I1
s(Vinsert
p5934
I42
VSimpleName: getLocation
p5935
Vinsert
p5936
I27
VInfixExpression: ==
p5937
tp5938
I1
s(Vinsert
p5939
I42
VSimpleName: println
p5940
Vinsert
p5941
I42
VSimpleName: printFooter
p5942
tp5943
I1
s(g4367
I42
g4368
Vinsert
p5944
I40
VQualifiedName: calculatorStub.actualCountToReturn
p5945
tp5946
I1
s(g3219
I42
g3220
Vinsert
p5947
I59
VVariableDeclarationFragment
p5948
tp5949
I1
s(Vinsert
p5950
I42
VSimpleName: mock
p5951
Vinsert
p5952
I43
VSimpleType: Mock
p5953
tp5954
I1
s(g3621
I42
g3622
Vinsert
p5955
I42
VSimpleName: av
p5956
tp5957
I2
s(g1164
I42
g1165
Vinsert
p5958
I44
VSingleVariableDeclaration
p5959
tp5960
I1
s(Vinsert
p5961
I42
VSimpleName: isReturnOnSuccess
p5962
Vinsert
p5963
I42
VSimpleName: VerificationOverTimeImpl
p5964
tp5965
I3
s(g558
I42
g559
Vinsert
p5966
I43
VSimpleType: StackTraceCleanerProvider
p5967
tp5968
I1
s(g673
I42
g674
Vinsert
p5969
I8
VBlock
p5970
tp5971
I2
s(g36
I42
g37
Vinsert
p5972
I5
VArrayType: byte[]
p5973
tp5974
I1
s(Vinsert
p5975
I42
VSimpleName: mock
p5976
Vinsert
p5977
I42
VSimpleName: Foo
p5978
tp5979
I1
s(g2921
I42
g2922
Vinsert
p5980
I43
VSimpleType: TestFinishedEvent
p5981
tp5982
I1
s(g1380
I42
g1381
Vinsert
p5983
I45
VStringLiteral: "  - stubbing the same method multiple times using 'given' or 'when' syntax\u005cn"
p5984
tp5985
I1
s(Vinsert
p5986
I42
VSimpleName: getWanted
p5987
Vinsert
p5988
I59
VVariableDeclarationFragment
p5989
tp5990
I1
s(g3055
I42
g3056
Vinsert
p5991
I32
VMethodInvocation
p5992
tp5993
I13
s(Vinsert
p5994
I42
VSimpleName: getClass
p5995
Vinsert
p5996
I42
VSimpleName: shouldFilterTestMethodsCorrectly
p5997
tp5998
I2
s(g951
I42
g952
Vinsert
p5999
I41
VReturnStatement
p6000
tp6001
I1
s(g3611
I42
g3612
Vinsert
p6002
I73
VTypeParameter
p6003
tp6004
I1
s(g3155
I42
g3156
Vinsert
p6005
I42
VSimpleName: Class
p6006
tp6007
I1
s(Vinsert
p6008
I42
VSimpleName: getArgumentsLine
p6009
Vinsert
p6010
I78
VMarkerAnnotation
p6011
tp6012
I1
s(Vinsert
p6013
I42
VSimpleName: getAddress
p6014
Vinsert
p6015
I32
VMethodInvocation
p6016
tp6017
I18
s(g2908
I42
g2909
Vinsert
p6018
I42
VSimpleName: HumanReadable
p6019
tp6020
I1
s(g239
I42
g240
Vinsert
p6021
I42
VSimpleName: serializedMock
p6022
tp6023
I1
s(Vinsert
p6024
I42
VSimpleName: answer
p6025
Vinsert
p6026
I42
VSimpleName: delegate
p6027
tp6028
I2
s(g941
I42
g942
Vinsert
p6029
I43
VSimpleType: Set
p6030
tp6031
I1
s(g2983
I42
g2984
Vinsert
p6032
I42
VSimpleName: serializable
p6033
tp6034
I1
s(Vinsert
p6035
I42
VSimpleName: getInternalState
p6036
Vinsert
p6037
I43
VSimpleType: Integer
p6038
tp6039
I1
s(g3659
I42
g3660
Vinsert
p6040
I83
VModifier: static
p6041
tp6042
I1
s(Vinsert
p6043
I42
VSimpleName: isEnabled
p6044
Vinsert
p6045
I52
VThisExpression
p6046
tp6047
I1
s(Vinsert
p6048
I42
VSimpleName: put
p6049
Vinsert
p6050
I42
VSimpleName: wrapperReturnValues
p6051
tp6052
I4
s(g2839
I42
g2840
Vinsert
p6053
I32
VMethodInvocation
p6054
tp6055
I6
s(Vinsert
p6056
I42
VSimpleName: getMock
p6057
Vinsert
p6058
I42
VSimpleName: should_provide_original_mock
p6059
tp6060
I1
s(g4492
I42
g4493
Vinsert
p6061
I8
VBlock
p6062
tp6063
I3
s(Vinsert
p6064
I42
VSimpleName: getState
p6065
Vinsert
p6066
I44
VSingleVariableDeclaration
p6067
tp6068
I1
s(Vinsert
p6069
I42
VSimpleName: createMock
p6070
Vinsert
p6071
I8
VBlock
p6072
tp6073
I4
s(g2472
I42
g2473
Vinsert
p6074
I14
VClassInstanceCreation
p6075
tp6076
I1
s(Vinsert
p6077
I42
VSimpleName: copyOperation
p6078
Vinsert
p6079
I42
VSimpleName: value1
p6080
tp6081
I1
s(Vinsert
p6082
I42
VSimpleName: simpleMethod
p6083
Vinsert
p6084
I42
VSimpleName: UnfinishedVerificationException
p6085
tp6086
I1
s(g2444
I42
g2445
Vinsert
p6087
I44
VSingleVariableDeclaration
p6088
tp6089
I2
s(g2385
I42
g2386
Vinsert
p6090
I42
VSimpleName: cause
p6091
tp6092
I3
s(Vinsert
p6093
I42
VSimpleName: get
p6094
Vinsert
p6095
I42
VSimpleName: CURRENT
p6096
tp6097
I1
s(Vinsert
p6098
I42
VSimpleName: pullUnstubbedInvocations
p6099
Vinsert
p6100
I42
VSimpleName: MockitoLoggerImpl
p6101
tp6102
I1
s(Vinsert
p6103
I42
VSimpleName: inOrderMode
p6104
Vinsert
p6105
I27
VInfixExpression: &&
p6106
tp6107
I1
s(g5522
I42
g5523
Vinsert
p6108
I42
VSimpleName: create
p6109
tp6110
I1
s(Vinsert
p6111
I42
VSimpleName: parseType
p6112
Vinsert
p6113
I23
VFieldDeclaration
p6114
tp6115
I1
s(Vinsert
p6116
I42
VSimpleName: getAllCommits
p6117
Vinsert
p6118
I43
VSimpleType: Commit
p6119
tp6120
I1
s(g3699
I42
g3700
Vinsert
p6121
I42
VSimpleName: e
p6122
tp6123
I1
s(Vinsert
p6124
I42
VSimpleName: newInstance
p6125
Vinsert
p6126
I42
VSimpleName: ConstructorInstantiator
p6127
tp6128
I4
s(g3021
I42
g3022
Vinsert
p6129
I45
VStringLiteral: "bar"
p6130
tp6131
I1
s(g1337
I42
g1338
Vinsert
p6132
I42
VSimpleName: container
p6133
tp6134
I1
s(g1820
I42
g1821
Vinsert
p6135
I42
VSimpleName: getMock
p6136
tp6137
I2
s(Vinsert
p6138
I42
VSimpleName: initMocks
p6139
Vinsert
p6140
I42
VSimpleName: shouldFailIfTypeIsAbstract
p6141
tp6142
I1
s(Vinsert
p6143
I42
VSimpleName: addInvocation
p6144
Vinsert
p6145
I42
VSimpleName: invocationWithMatchers
p6146
tp6147
I1
s(Vinsert
p6148
I42
VSimpleName: getRawType
p6149
Vinsert
p6150
I14
VClassInstanceCreation
p6151
tp6152
I1
s(g4001
I42
g4002
Vinsert
p6153
I42
VSimpleName: e
p6154
tp6155
I2
s(g1914
I42
g1915
Vinsert
p6156
I74
VParameterizedType: Set<String>
p6157
tp6158
I1
s(g21
I42
g22
Vinsert
p6159
I59
VVariableDeclarationFragment
p6160
tp6161
I1
s(Vinsert
p6162
I42
VSimpleName: visitSubroutine
p6163
Vinsert
p6164
I40
VQualifiedName: Label.JSR
p6165
tp6166
I1
s(g5393
I42
g5394
Vinsert
p6167
I42
VSimpleName: equals
p6168
tp6169
I3
s(Vinsert
p6170
I42
VSimpleName: getStackTrace
p6171
Vinsert
p6172
I43
VSimpleType: Object
p6173
tp6174
I1
s(g488
I42
g489
Vinsert
p6175
I21
VExpressionStatement
p6176
tp6177
I14
s(g801
I42
g802
Vinsert
p6178
I14
VClassInstanceCreation
p6179
tp6180
I2
s(g3961
I42
g3962
Vinsert
p6181
I45
VStringLiteral: "Please remove unnecessary stubbings or use 'silent' option. More info: javadoc for UnnecessaryStubbingException class."
p6182
tp6183
I1
s(Vinsert
p6184
I42
VSimpleName: getStackTrace
p6185
Vinsert
p6186
I42
VSimpleName: unverified
p6187
tp6188
I3
s(g5609
I42
g5610
Vinsert
p6189
I42
VSimpleName: delegate
p6190
tp6191
I4
s(g5316
I42
g5317
Vinsert
p6192
I42
VSimpleName: LegacyJUnitRunner
p6193
tp6194
I1
s(Vinsert
p6195
I42
VSimpleName: toString
p6196
Vinsert
p6197
I42
VSimpleName: i
p6198
tp6199
I4
s(g5466
I42
g5467
Vinsert
p6200
I42
VSimpleName: filterLineNo
p6201
tp6202
I1
s(g4367
I42
g4368
Vinsert
p6203
I40
VQualifiedName: reporterStub.wanted
p6204
tp6205
I1
s(g4189
I42
g4190
Vinsert
p6206
I42
VSimpleName: serializableMode
p6207
tp6208
I1
s(g2248
I42
g2249
Vinsert
p6209
I42
VSimpleName: listener
p6210
tp6211
I1
s(Vinsert
p6212
I42
VSimpleName: getAllMocksToBeVerifiedInSequence
p6213
Vinsert
p6214
I42
VSimpleName: comparison
p6215
tp6216
I4
s(Vinsert
p6217
I42
VSimpleName: paramTypeWithTypeParams
p6218
Vinsert
p6219
I59
VVariableDeclarationFragment
p6220
tp6221
I1
s(g3812
I42
g3813
Vinsert
p6222
I39
VPrimitiveType: int
p6223
tp6224
I2
s(g2753
I42
g2754
Vinsert
p6225
I39
VPrimitiveType: void
p6226
tp6227
I6
s(Vinsert
p6228
I42
VSimpleName: thenThrow
p6229
Vinsert
p6230
I7
VAssignment: =
p6231
tp6232
I10
s(Vinsert
p6233
I42
VSimpleName: getLastVarargs
p6234
Vinsert
p6235
I42
VSimpleName: getVarargsValues
p6236
tp6237
I1
s(g1214
I42
g1215
Vinsert
p6238
I21
VExpressionStatement
p6239
tp6240
I1
s(g1380
I42
g1381
Vinsert
p6241
I42
VSimpleName: throwable
p6242
tp6243
I2
s(g1962
I42
g1963
Vinsert
p6244
I32
VMethodInvocation
p6245
tp6246
I7
s(Vinsert
p6247
I42
VSimpleName: foo
p6248
Vinsert
p6249
I42
VSimpleName: when
p6250
tp6251
I1
s(Vinsert
p6252
I42
VSimpleName: setLength
p6253
Vinsert
p6254
I44
VSingleVariableDeclaration
p6255
tp6256
I2
s(g1642
I42
g1643
Vinsert
p6257
I83
VModifier: public
p6258
tp6259
I1
s(Vinsert
p6260
I42
VSimpleName: findPluginClass
p6261
Vinsert
p6262
I32
VMethodInvocation
p6263
tp6264
I4
s(g5226
I42
g5227
Vinsert
p6265
I60
VVariableDeclarationStatement
p6266
tp6267
I1
s(Vinsert
p6268
I42
VSimpleName: simpleMethod
p6269
Vinsert
p6270
I42
VSimpleName: shouldReturnMultipleValues
p6271
tp6272
I1
s(g5196
I42
g5197
Vinsert
p6273
I44
VSingleVariableDeclaration
p6274
tp6275
I2
s(Vinsert
p6276
I42
VSimpleName: initMocks
p6277
Vinsert
p6278
I43
VSimpleType: MockitoException
p6279
tp6280
I2
s(g1403
I42
g1404
Vinsert
p6281
I59
VVariableDeclarationFragment
p6282
tp6283
I1
s(g3083
I42
g3084
Vinsert
p6284
I12
VCatchClause
p6285
tp6286
I2
s(Vinsert
p6287
I42
VSimpleName: thenReturn
p6288
Vinsert
p6289
I42
VSimpleName: anyLong
p6290
tp6291
I1
s(g5829
I42
g5830
Vinsert
p6292
I42
VSimpleName: Override
p6293
tp6294
I1
s(Vinsert
p6295
I42
VSimpleName: invocationListeners
p6296
Vinsert
p6297
I42
VSimpleName: List
p6298
tp6299
I4
s(Vinsert
p6300
I42
VSimpleName: checkIfMockIsInjected
p6301
Vinsert
p6302
I31
VMethodDeclaration
p6303
tp6304
I1
s(g1269
I42
g1270
Vinsert
p6305
I32
VMethodInvocation
p6306
tp6307
I2
s(g4835
I42
g4836
Vinsert
p6308
I42
VSimpleName: description
p6309
tp6310
I2
s(Vinsert
p6311
I42
VSimpleName: booleanReturningMethod
p6312
Vinsert
p6313
I34
VNumberLiteral: 14
p6314
tp6315
I3
s(Vinsert
p6316
I42
VSimpleName: eraseLastInvocation
p6317
Vinsert
p6318
I42
VSimpleName: Answer
p6319
tp6320
I1
s(Vinsert
p6321
I42
VSimpleName: method
p6322
Vinsert
p6323
I43
VSimpleType: ReturnsArgumentAt
p6324
tp6325
I2
s(Vinsert
p6326
I42
VSimpleName: toInvocation
p6327
Vinsert
p6328
I31
VMethodDeclaration
p6329
tp6330
I2
s(g1129
I42
g1130
Vinsert
p6331
I83
VModifier: public
p6332
tp6333
I2
s(Vinsert
p6334
I42
VSimpleName: load
p6335
Vinsert
p6336
I42
VSimpleName: reader
p6337
tp6338
I2
s(Vinsert
p6339
I42
VSimpleName: forCurrentJavaVersion
p6340
Vinsert
p6341
I21
VExpressionStatement
p6342
tp6343
I1
s(g4595
I42
g4596
Vinsert
p6344
I42
VSimpleName: VerificationModeFactory
p6345
tp6346
I1
s(g1
I42
g2
Vinsert
p6347
I59
VVariableDeclarationFragment
p6348
tp6349
I1
s(Vinsert
p6350
I42
VSimpleName: updateArticleCounters
p6351
Vinsert
p6352
I42
VSimpleName: calculator
p6353
tp6354
I1
s(Vinsert
p6355
I42
VSimpleName: oneArg
p6356
Vinsert
p6357
I42
VSimpleName: verifier
p6358
tp6359
I2
s(g1962
I42
g1963
Vinsert
p6360
I42
VSimpleName: delayedExecution
p6361
tp6362
I3
s(Vinsert
p6363
I42
VSimpleName: setStubbingListener
p6364
Vinsert
p6365
I31
VMethodDeclaration
p6366
tp6367
I3
s(Vinsert
p6368
I42
VSimpleName: getAllInvocations
p6369
Vinsert
p6370
I42
VSimpleName: VerificationData
p6371
tp6372
I2
s(g3735
I42
g3736
Vinsert
p6373
I69
VMethodRefParameter
p6374
tp6375
I1
s(g1848
I42
g1849
Vinsert
p6376
I42
VSimpleName: ClassReader
p6377
tp6378
I1
s(Vinsert
p6379
I42
VSimpleName: readerToLines
p6380
Vinsert
p6381
I45
VStringLiteral: ""
p6382
tp6383
I1
s(g31
I42
g32
Vinsert
p6384
I42
VSimpleName: mock
p6385
tp6386
I5
s(Vinsert
p6387
I42
VSimpleName: build
p6388
Vinsert
p6389
I42
VSimpleName: MockAccess
p6390
tp6391
I1
s(Vinsert
p6392
I42
VSimpleName: add
p6393
Vinsert
p6394
I45
VStringLiteral: "five"
p6395
tp6396
I2
s(g1034
I42
g1035
Vinsert
p6397
I70
VEnhancedForStatement
p6398
tp6399
I1
s(g4425
I42
g4426
Vinsert
p6400
I42
VSimpleName: String
p6401
tp6402
I3
s(Vinsert
p6403
I42
VSimpleName: setMock
p6404
Vinsert
p6405
I43
VSimpleType: VerificationStartedEvent
p6406
tp6407
I1
s(g1074
I42
g1075
Vinsert
p6408
I42
VSimpleName: any
p6409
tp6410
I1
s(Vinsert
p6411
I42
VSimpleName: get
p6412
Vinsert
p6413
I42
VSimpleName: Class
p6414
tp6415
I4
s(Vinsert
p6416
I42
VSimpleName: nullPassedToVerifyNoMoreInteractions
p6417
Vinsert
p6418
I33
VNullLiteral
p6419
tp6420
I2
s(Vinsert
p6421
I42
VSimpleName: asList
p6422
Vinsert
p6423
I42
VSimpleName: InvocationsMarker
p6424
tp6425
I2
s(g169
I42
g170
Vinsert
p6426
I8
VBlock
p6427
tp6428
I1
s(g3431
I42
g3432
Vinsert
p6429
I65
VTagElement: @param
p6430
tp6431
I1
s(g4638
I42
g4639
Vinsert
p6432
I42
VSimpleName: foo
p6433
tp6434
I3
s(Vinsert
p6435
I42
VSimpleName: getFailures
p6436
Vinsert
p6437
I34
VNumberLiteral: 1
p6438
tp6439
I1
s(g2311
I42
g2312
Vinsert
p6440
I45
VStringLiteral: "shouldFilterStacktraceOnUnfinishedVerification"
p6441
tp6442
I1
s(g5256
I42
g5257
Vinsert
p6443
I60
VVariableDeclarationStatement
p6444
tp6445
I6
s(Vinsert
p6446
I42
VSimpleName: objectReturningMethodNoArgs
p6447
Vinsert
p6448
I5
VArrayType: byte[]
p6449
tp6450
I1
s(g6111
I42
g6112
Vinsert
p6451
I83
VModifier: final
p6452
tp6453
I1
s(g3121
I42
g3122
Vinsert
p6454
I43
VSimpleType: String
p6455
tp6456
I1
s(Vinsert
p6457
I42
VSimpleName: getDescription
p6458
Vinsert
p6459
I42
VSimpleName: JUnit44RunnerImpl
p6460
tp6461
I1
s(g1876
I42
g1877
Vinsert
p6462
I42
VSimpleName: sortByValue
p6463
tp6464
I1
s(g5575
I42
g5576
Vinsert
p6465
I42
VSimpleName: Callable
p6466
tp6467
I1
s(Vinsert
p6468
I42
VSimpleName: mock
p6469
Vinsert
p6470
I42
VSimpleName: Test
p6471
tp6472
I15
s(g5057
I42
g5058
Vinsert
p6473
I42
VSimpleName: e
p6474
tp6475
I17
s(Vinsert
p6476
I42
VSimpleName: addPreparedMocks
p6477
Vinsert
p6478
I42
VSimpleName: mockDependentFields
p6479
tp6480
I1
s(g262
I42
g263
Vinsert
p6481
I41
VReturnStatement
p6482
tp6483
I2
s(g312
I42
g313
Vinsert
p6484
I39
VPrimitiveType: boolean
p6485
tp6486
I1
s(g901
I42
g902
Vinsert
p6487
I42
VSimpleName: mockSettings
p6488
tp6489
I1
s(g3654
I42
g3655
Vinsert
p6490
I59
VVariableDeclarationFragment
p6491
tp6492
I5
s(g1498
I42
g1499
Vinsert
p6493
I42
VSimpleName: listeners
p6494
tp6495
I1
s(g1219
I42
g1220
Vinsert
p6496
I42
VSimpleName: invocation
p6497
tp6498
I11
s(g826
I42
g827
Vinsert
p6499
I42
VSimpleName: i
p6500
tp6501
I4
s(Vinsert
p6502
I42
VSimpleName: stringMethod
p6503
Vinsert
p6504
I31
VMethodDeclaration
p6505
tp6506
I1
s(g3336
I42
g3337
Vinsert
p6507
I11
VCastExpression
p6508
tp6509
I1
s(Vinsert
p6510
I42
VSimpleName: method
p6511
Vinsert
p6512
I43
VSimpleType: Verifier
p6513
tp6514
I1
s(g5456
I42
g5457
Vinsert
p6515
I31
VMethodDeclaration
p6516
tp6517
I2
s(g5321
I42
g5322
Vinsert
p6518
I39
VPrimitiveType: void
p6519
tp6520
I1
s(g4263
I42
g4264
Vinsert
p6521
I43
VSimpleType: VerifyingMode
p6522
tp6523
I2
s(g3047
I42
g3048
Vinsert
p6524
I42
VSimpleName: LogInvocationsToStdOutListener
p6525
tp6526
I1
s(Vinsert
p6527
I42
VSimpleName: getMessage
p6528
Vinsert
p6529
I42
VSimpleName: NoInteractionsWanted
p6530
tp6531
I1
s(g916
I42
g917
Vinsert
p6532
I43
VSimpleType: Object
p6533
tp6534
I1
s(Vinsert
p6535
I42
VSimpleName: safelyDisableAccess
p6536
Vinsert
p6537
I42
VSimpleName: AccessibilityChanger
p6538
tp6539
I1
s(g2949
I42
g2950
Vinsert
p6540
I25
VIfStatement
p6541
tp6542
I1
s(g2180
I42
g2181
Vinsert
p6543
I42
VSimpleName: bark
p6544
tp6545
I1
s(g3036
I42
g3037
Vinsert
p6546
I42
VSimpleName: ToTypeMappings
p6547
tp6548
I1
s(g6435
I42
g6436
Vinsert
p6549
I42
VSimpleName: Failure
p6550
tp6551
I1
s(g4038
I42
g4039
Vinsert
p6552
I39
VPrimitiveType: double
p6553
tp6554
I1
s(g6300
I42
g6301
Vinsert
p6555
I43
VSimpleType: Issue421
p6556
tp6557
I1
s(g4189
I42
g4190
Vinsert
p6558
I76
VWildcardType: ?
p6559
tp6560
I1
s(Vinsert
p6561
I42
VSimpleName: doFun
p6562
Vinsert
p6563
I42
VSimpleName: mockFun
p6564
tp6565
I2
s(Vinsert
p6566
I42
VSimpleName: forClass
p6567
Vinsert
p6568
I8
VBlock
p6569
tp6570
I1
s(g1482
I42
g1483
Vinsert
p6571
I59
VVariableDeclarationFragment
p6572
tp6573
I1
s(Vinsert
p6574
I42
VSimpleName: getDeclaredField
p6575
Vinsert
p6576
I59
VVariableDeclarationFragment
p6577
tp6578
I1
s(g5321
I42
g5322
Vinsert
p6579
I43
VSimpleType: GenericsSelfReference
p6580
tp6581
I1
s(Vinsert
p6582
I42
VSimpleName: getException
p6583
Vinsert
p6584
I43
VSimpleType: ExceptionIncludingMockitoWarnings
p6585
tp6586
I1
s(Vinsert
p6587
I42
VSimpleName: getSequenceNumber
p6588
Vinsert
p6589
I44
VSingleVariableDeclaration
p6590
tp6591
I2
s(g3488
I42
g3489
Vinsert
p6592
I42
VSimpleName: unused_stubbed_is_not_implicitly_verified
p6593
tp6594
I1
s(g6387
I42
g6388
Vinsert
p6595
I43
VSimpleType: MockMethodInterceptor
p6596
tp6597
I1
s(Vinsert
p6598
I42
VSimpleName: getWriteMethod
p6599
Vinsert
p6600
I7
VAssignment: =
p6601
tp6602
I1
s(g573
I42
g574
Vinsert
p6603
I32
VMethodInvocation
p6604
tp6605
I1
s(Vinsert
p6606
I42
VSimpleName: framework
p6607
Vinsert
p6608
I62
VInstanceofExpression
p6609
tp6610
I1
s(g1115
I42
g1116
Vinsert
p6611
I27
VInfixExpression: ==
p6612
tp6613
I1
s(Vinsert
p6614
I42
VSimpleName: isSynthetic
p6615
Vinsert
p6616
I44
VSingleVariableDeclaration
p6617
tp6618
I1
s(g307
I42
g308
Vinsert
p6619
I42
VSimpleName: SerializableClass
p6620
tp6621
I1
s(g4523
I42
g4524
Vinsert
p6622
I42
VSimpleName: stubbedInvocations
p6623
tp6624
I2
s(g209
I42
g210
Vinsert
p6625
I34
VNumberLiteral: 0
p6626
tp6627
I1
s(g5052
I42
g5053
Vinsert
p6628
I45
VStringLiteral: "  imposterizing class : '"
p6629
tp6630
I1
s(g3170
I42
g3171
Vinsert
p6631
I41
VReturnStatement
p6632
tp6633
I1
s(Vinsert
p6634
I42
VSimpleName: startMocking
p6635
Vinsert
p6636
I42
VSimpleName: IMethods
p6637
tp6638
I2
s(g876
I42
g877
Vinsert
p6639
I42
VSimpleName: atLeastOnceMode
p6640
tp6641
I1
s(Vinsert
p6642
I42
VSimpleName: isFinal
p6643
Vinsert
p6644
I66
VTextElement:  returns true if clazz is final
p6645
tp6646
I1
s(Vinsert
p6647
I42
VSimpleName: equals
p6648
Vinsert
p6649
I40
VQualifiedName: commit.email
p6650
tp6651
I1
s(g6093
I42
g6094
Vinsert
p6652
I65
VTagElement
p6653
tp6654
I2
s(g1115
I42
g1116
Vinsert
p6655
I42
VSimpleName: ReflectUtils
p6656
tp6657
I1
s(Vinsert
p6658
I42
VSimpleName: isEqualTo
p6659
Vinsert
p6660
I42
VSimpleName: put
p6661
tp6662
I1
s(g6056
I42
g6057
Vinsert
p6663
I78
VMarkerAnnotation
p6664
tp6665
I1
s(g4456
I42
g4457
Vinsert
p6666
I8
VBlock
p6667
tp6668
I1
s(Vinsert
p6669
I42
VSimpleName: getAList
p6670
Vinsert
p6671
I78
VMarkerAnnotation
p6672
tp6673
I1
s(g583
I42
g584
Vinsert
p6674
I42
VSimpleName: invocation
p6675
tp6676
I1
s(Vinsert
p6677
I42
VSimpleName: getGenericInterfaces
p6678
Vinsert
p6679
I42
VSimpleName: genericInterfaces
p6680
tp6681
I1
s(g5368
I42
g5369
Vinsert
p6682
I57
VTypeLiteral
p6683
tp6684
I2
s(Vinsert
p6685
I42
VSimpleName: matches
p6686
Vinsert
p6687
I42
VSimpleName: item
p6688
tp6689
I2
s(Vinsert
p6690
I42
VSimpleName: simpleMethod
p6691
Vinsert
p6692
I42
VSimpleName: testInjectMocks
p6693
tp6694
I1
s(Vinsert
p6695
I42
VSimpleName: entrySet
p6696
Vinsert
p6697
I43
VSimpleType: Number
p6698
tp6699
I1
s(Vinsert
p6700
I42
VSimpleName: size
p6701
Vinsert
p6702
I42
VSimpleName: findAllMatchingUnverifiedChunks
p6703
tp6704
I1
s(g1282
I42
g1283
Vinsert
p6705
I55
VTypeDeclaration
p6706
tp6707
I1
s(g673
I42
g674
Vinsert
p6708
I43
VSimpleType: String
p6709
tp6710
I4
s(Vinsert
p6711
I42
VSimpleName: getProcessRunner
p6712
Vinsert
p6713
I42
VSimpleName: Exec
p6714
tp6715
I1
s(g1287
I42
g1288
Vinsert
p6716
I11
VCastExpression
p6717
tp6718
I1
s(g673
I42
g674
Vinsert
p6719
I44
VSingleVariableDeclaration
p6720
tp6721
I2
s(g4492
I42
g4493
Vinsert
p6722
I42
VSimpleName: Object
p6723
tp6724
I1
s(Vinsert
p6725
I42
VSimpleName: callback
p6726
Vinsert
p6727
I42
VSimpleName: expected
p6728
tp6729
I1
s(g5834
I42
g5835
Vinsert
p6730
I43
VSimpleType: Reporter
p6731
tp6732
I1
s(g4981
I42
g4982
Vinsert
p6733
I45
VStringLiteral: "org.mockito.internal.creation.cglib.CglibMockMaker"
p6734
tp6735
I1
s(Vinsert
p6736
I42
VSimpleName: findInvocations
p6737
Vinsert
p6738
I43
VSimpleType: List
p6739
tp6740
I1
s(g4087
I42
g4088
Vinsert
p6741
I66
VTextElement:  Setter name.
p6742
tp6743
I1
s(Vinsert
p6744
I42
VSimpleName: wantedCount
p6745
Vinsert
p6746
I42
VSimpleName: VerificationModeImpl
p6747
tp6748
I1
s(g1843
I42
g1844
Vinsert
p6749
I11
VCastExpression
p6750
tp6751
I4
s(Vinsert
p6752
I42
VSimpleName: cannotInitializeForSpyAnnotation
p6753
Vinsert
p6754
I42
VSimpleName: Reporter
p6755
tp6756
I1
s(g139
I42
g140
Vinsert
p6757
I42
VSimpleName: LocalizedMatcher
p6758
tp6759
I2
s(g2621
I42
g2622
Vinsert
p6760
I78
VMarkerAnnotation
p6761
tp6762
I5
s(Vinsert
p6763
I42
VSimpleName: filterStackTrace
p6764
Vinsert
p6765
I42
VSimpleName: trace
p6766
tp6767
I1
s(g5647
I42
g5648
Vinsert
p6768
I42
VSimpleName: step
p6769
tp6770
I1
s(Vinsert
p6771
I42
VSimpleName: getDebuggingInfo
p6772
Vinsert
p6773
I42
VSimpleName: DebuggingInfo
p6774
tp6775
I1
s(Vinsert
p6776
I42
VSimpleName: simpleMethod
p6777
Vinsert
p6778
I42
VSimpleName: otherMethod
p6779
tp6780
I2
s(Vinsert
p6781
I42
VSimpleName: markVerifiedStrictly
p6782
Vinsert
p6783
I42
VSimpleName: Test
p6784
tp6785
I1
s(Vinsert
p6786
I42
VSimpleName: withCurrentCodeSourceUrls
p6787
Vinsert
p6788
I43
VSimpleType: Exception
p6789
tp6790
I1
s(Vinsert
p6791
I42
VSimpleName: put
p6792
Vinsert
p6793
I43
VSimpleType: PluginLoader
p6794
tp6795
I1
s(Vinsert
p6796
I42
VSimpleName: getSimpleName
p6797
Vinsert
p6798
I44
VSingleVariableDeclaration
p6799
tp6800
I6
s(Vinsert
p6801
I42
VSimpleName: contains
p6802
Vinsert
p6803
I42
VSimpleName: target
p6804
tp6805
I3
s(g3621
I42
g3622
Vinsert
p6806
I22
VFieldAccess
p6807
tp6808
I1
s(g588
I42
g589
Vinsert
p6809
I83
VModifier: public
p6810
tp6811
I1
s(g628
I42
g629
Vinsert
p6812
I25
VIfStatement
p6813
tp6814
I1
s(Vinsert
p6815
I42
VSimpleName: startMocking
p6816
Vinsert
p6817
I43
VSimpleType: DefaultMockitoSessionBuilder
p6818
tp6819
I2
s(Vinsert
p6820
I42
VSimpleName: getRegisteredInvocations
p6821
Vinsert
p6822
I8
VBlock
p6823
tp6824
I1
s(g1274
I42
g1275
Vinsert
p6825
I60
VVariableDeclarationStatement
p6826
tp6827
I1
s(Vinsert
p6828
I42
VSimpleName: toString
p6829
Vinsert
p6830
I59
VVariableDeclarationFragment
p6831
tp6832
I10
s(Vinsert
p6833
I42
VSimpleName: maybeVerifyLazily
p6834
Vinsert
p6835
I42
VSimpleName: strategy
p6836
tp6837
I1
s(g6642
I42
g6643
Vinsert
p6838
I65
VTagElement: @return
p6839
tp6840
I1
s(Vinsert
p6841
I42
VSimpleName: getCount
p6842
Vinsert
p6843
I60
VVariableDeclarationStatement
p6844
tp6845
I1
s(Vinsert
p6846
I42
VSimpleName: begin_class
p6847
Vinsert
p6848
I21
VExpressionStatement
p6849
tp6850
I1
s(g3483
I42
g3484
Vinsert
p6851
I42
VSimpleName: assertNotNull
p6852
tp6853
I1
s(Vinsert
p6854
I42
VSimpleName: getMockName
p6855
Vinsert
p6856
I42
VSimpleName: name
p6857
tp6858
I1
s(Vinsert
p6859
I42
VSimpleName: run
p6860
Vinsert
p6861
I48
VSuperMethodInvocation
p6862
tp6863
I1
s(g443
I42
g444
Vinsert
p6864
I21
VExpressionStatement
p6865
tp6866
I4
s(Vinsert
p6867
I42
VSimpleName: getMock
p6868
Vinsert
p6869
I42
VSimpleName: findFirstUnverified
p6870
tp6871
I1
s(Vinsert
p6872
I42
VSimpleName: currentTimeMillis
p6873
Vinsert
p6874
I41
VReturnStatement
p6875
tp6876
I1
s(Vinsert
p6877
I42
VSimpleName: hasPrevious
p6878
Vinsert
p6879
I41
VReturnStatement
p6880
tp6881
I1
s(Vinsert
p6882
I42
VSimpleName: generateMockClass
p6883
Vinsert
p6884
I42
VSimpleName: Class
p6885
tp6886
I1
s(g4382
I42
g4383
Vinsert
p6887
I70
VEnhancedForStatement
p6888
tp6889
I1
s(Vinsert
p6890
I42
VSimpleName: invoke_static_this
p6891
Vinsert
p6892
I21
VExpressionStatement
p6893
tp6894
I2
s(g1332
I42
g1333
Vinsert
p6895
I66
VTextElement: <pre>
p6896
tp6897
I1
s(Vinsert
p6898
I42
VSimpleName: getCause
p6899
Vinsert
p6900
I42
VSimpleName: ite
p6901
tp6902
I1
s(g395
I42
g396
Vinsert
p6903
I83
VModifier: public
p6904
tp6905
I1
s(Vinsert
p6906
I42
VSimpleName: get
p6907
Vinsert
p6908
I42
VSimpleName: mock2
p6909
tp6910
I2
s(g36
I42
g37
Vinsert
p6911
I42
VSimpleName: instr
p6912
tp6913
I1
s(Vinsert
p6914
I42
VSimpleName: matches
p6915
Vinsert
p6916
I32
VMethodInvocation
p6917
tp6918
I29
s(Vinsert
p6919
I42
VSimpleName: assertThat
p6920
Vinsert
p6921
I42
VSimpleName: NoInteractionsWanted
p6922
tp6923
I1
s(Vinsert
p6924
I42
VSimpleName: getMethodProxy
p6925
Vinsert
p6926
I21
VExpressionStatement
p6927
tp6928
I1
s(g438
I42
g439
Vinsert
p6929
I42
VSimpleName: stripCommentAndWhitespace
p6930
tp6931
I1
s(g362
I42
g363
Vinsert
p6932
I42
VSimpleName: newStubbing
p6933
tp6934
I2
s(Vinsert
p6935
I42
VSimpleName: getMessage
p6936
Vinsert
p6937
I42
VSimpleName: withSettings
p6938
tp6939
I1
s(g4887
I42
g4888
Vinsert
p6940
I32
VMethodInvocation
p6941
tp6942
I3
s(Vinsert
p6943
I42
VSimpleName: add
p6944
Vinsert
p6945
I43
VSimpleType: IArgumentMatcher
p6946
tp6947
I1
s(Vinsert
p6948
I42
VSimpleName: verify
p6949
Vinsert
p6950
I42
VSimpleName: list
p6951
tp6952
I1
s(g6658
I42
g6659
Vinsert
p6953
I45
VStringLiteral: "3.14f"
p6954
tp6955
I1
s(g1362
I42
g1363
Vinsert
p6956
I27
VInfixExpression: |
p6957
tp6958
I1
s(g2031
I42
g2032
Vinsert
p6959
I40
VQualifiedName: Opcodes.ACC_ENUM
p6960
tp6961
I1
s(Vinsert
p6962
I42
VSimpleName: callMe
p6963
Vinsert
p6964
I42
VSimpleName: ReturnsString
p6965
tp6966
I2
s(g4497
I42
g4498
Vinsert
p6967
I42
VSimpleName: m
p6968
tp6969
I3
s(g4087
I42
g4088
Vinsert
p6970
I42
VSimpleName: fieldName
p6971
tp6972
I1
s(Vinsert
p6973
I42
VSimpleName: setStackTrace
p6974
Vinsert
p6975
I33
VNullLiteral
p6976
tp6977
I1
s(Vinsert
p6978
I42
VSimpleName: get
p6979
Vinsert
p6980
I42
VSimpleName: stubbingModeLocal
p6981
tp6982
I2
s(Vinsert
p6983
I42
VSimpleName: framework
p6984
Vinsert
p6985
I42
VSimpleName: invocation
p6986
tp6987
I1
s(Vinsert
p6988
I42
VSimpleName: getFirstUnverified
p6989
Vinsert
p6990
I42
VSimpleName: markVerified
p6991
tp6992
I2
s(g372
I42
g373
Vinsert
p6993
I42
VSimpleName: doAnswer
p6994
tp6995
I1
s(Vinsert
p6996
I42
VSimpleName: verify
p6997
Vinsert
p6998
I45
VStringLiteral: "two"
p6999
tp7000
I5
s(g41
I42
g42
Vinsert
p7001
I42
VSimpleName: invocationInfo
p7002
tp7003
I5
s(Vinsert
p7004
I42
VSimpleName: get
p7005
Vinsert
p7006
I42
VSimpleName: invocationOf
p7007
tp7008
I1
s(g851
I42
g852
Vinsert
p7009
I42
VSimpleName: MyObject
p7010
tp7011
I2
s(Vinsert
p7012
I42
VSimpleName: asList
p7013
Vinsert
p7014
I41
VReturnStatement
p7015
tp7016
I7
s(Vinsert
p7017
I42
VSimpleName: invoke
p7018
Vinsert
p7019
I60
VVariableDeclarationStatement
p7020
tp7021
I3
s(Vinsert
p7022
I42
VSimpleName: enableAccess
p7023
Vinsert
p7024
I59
VVariableDeclarationFragment
p7025
tp7026
I3
s(g463
I42
g464
Vinsert
p7027
I32
VMethodInvocation
p7028
tp7029
I1
s(Vinsert
p7030
I42
VSimpleName: readFromFile
p7031
Vinsert
p7032
I59
VVariableDeclarationFragment
p7033
tp7034
I3
s(g3318
I42
g3319
Vinsert
p7035
I42
VSimpleName: format
p7036
tp7037
I2
s(g4789
I42
g4790
Vinsert
p7038
I42
VSimpleName: misplacedBooleanArgumentMatcher
p7039
tp7040
I1
s(Vinsert
p7041
I42
VSimpleName: unfinishedVerificationException
p7042
Vinsert
p7043
I8
VBlock
p7044
tp7045
I2
s(g1716
I42
g1717
Vinsert
p7046
I74
VParameterizedType: List<T>
p7047
tp7048
I1
s(Vinsert
p7049
I42
VSimpleName: toString
p7050
Vinsert
p7051
I33
VNullLiteral
p7052
tp7053
I1
s(g3570
I42
g3571
Vinsert
p7054
I43
VSimpleType: GenericsNest
p7055
tp7056
I1
s(Vinsert
p7057
I42
VSimpleName: isEmpty
p7058
Vinsert
p7059
I43
VSimpleType: ReleaseStep
p7060
tp7061
I2
s(Vinsert
p7062
I42
VSimpleName: intArgumentMethod
p7063
Vinsert
p7064
I21
VExpressionStatement
p7065
tp7066
I5
s(g6311
I42
g6312
Vinsert
p7067
I45
VStringLiteral: "hundred"
p7068
tp7069
I2
s(g4474
I42
g4475
Vinsert
p7070
I42
VSimpleName: m
p7071
tp7072
I2
s(g3953
I42
g3954
Vinsert
p7073
I59
VVariableDeclarationFragment
p7074
tp7075
I4
s(Vinsert
p7076
I42
VSimpleName: next
p7077
Vinsert
p7078
I43
VSimpleType: InvocationMatcher
p7079
tp7080
I1
s(Vinsert
p7081
I42
VSimpleName: invokingWithException
p7082
Vinsert
p7083
I60
VVariableDeclarationStatement
p7084
tp7085
I1
s(Vinsert
p7086
I42
VSimpleName: get
p7087
Vinsert
p7088
I42
VSimpleName: classHashMap
p7089
tp7090
I1
s(Vinsert
p7091
I42
VSimpleName: size
p7092
Vinsert
p7093
I42
VSimpleName: additionalMatcherName
p7094
tp7095
I1
s(Vinsert
p7096
I42
VSimpleName: equals
p7097
Vinsert
p7098
I42
VSimpleName: method
p7099
tp7100
I2
s(Vinsert
p7101
I42
VSimpleName: verify
p7102
Vinsert
p7103
I42
VSimpleName: shouldNotVerifyEquals
p7104
tp7105
I1
s(g2205
I42
g2206
Vinsert
p7106
I42
VSimpleName: c
p7107
tp7108
I1
s(g1380
I42
g1381
Vinsert
p7109
I45
VStringLiteral: "    Please use willReturn/doReturn API for stubbing\u005cn"
p7110
tp7111
I1
s(g1901
I42
g1902
Vinsert
p7112
I59
VVariableDeclarationFragment
p7113
tp7114
I1
s(g342
I42
g343
Vinsert
p7115
I42
VSimpleName: p
p7116
tp7117
I2
s(g337
I42
g338
Vinsert
p7118
I42
VSimpleName: Exception
p7119
tp7120
I2
s(g573
I42
g574
Vinsert
p7121
I21
VExpressionStatement
p7122
tp7123
I1
s(Vinsert
p7124
I42
VSimpleName: evaluate
p7125
Vinsert
p7126
I31
VMethodDeclaration
p7127
tp7128
I1
s(Vinsert
p7129
I42
VSimpleName: voidMethod
p7130
Vinsert
p7131
I42
VSimpleName: willThrow
p7132
tp7133
I1
s(g3748
I42
g3749
Vinsert
p7134
I42
VSimpleName: shouldCreateSerializableMethodIfIsSerializableMock
p7135
tp7136
I1
s(g1553
I42
g1554
Vinsert
p7137
I42
VSimpleName: oneArg
p7138
tp7139
I1
s(g1790
I42
g1791
Vinsert
p7140
I42
VSimpleName: importLogBean
p7141
tp7142
I2
s(Vinsert
p7143
I42
VSimpleName: getSimpleName
p7144
Vinsert
p7145
I54
VTryStatement
p7146
tp7147
I1
s(g3229
I42
g3230
Vinsert
p7148
I31
VMethodDeclaration
p7149
tp7150
I1
s(g458
I42
g459
Vinsert
p7151
I80
VMemberValuePair
p7152
tp7153
I1
s(g6796
I42
g6797
Vinsert
p7154
I42
VSimpleName: type
p7155
tp7156
I1
s(g1462
I42
g1463
Vinsert
p7157
I42
VSimpleName: firstUndesired
p7158
tp7159
I1
s(g6124
I42
g6125
Vinsert
p7160
I21
VExpressionStatement
p7161
tp7162
I4
s(g6056
I42
g6057
Vinsert
p7163
I42
VSimpleName: mockingDetails
p7164
tp7165
I2
s(Vinsert
p7166
I42
VSimpleName: simpleName
p7167
Vinsert
p7168
I60
VVariableDeclarationStatement
p7169
tp7170
I1
s(g56
I42
g57
Vinsert
p7171
I8
VBlock
p7172
tp7173
I4
s(g6882
I42
g6883
Vinsert
p7174
I8
VBlock
p7175
tp7176
I2
s(Vinsert
p7177
I42
VSimpleName: create
p7178
Vinsert
p7179
I14
VClassInstanceCreation
p7180
tp7181
I13
s(g410
I42
g411
Vinsert
p7182
I43
VSimpleType: Exception
p7183
tp7184
I1
s(Vinsert
p7185
I42
VSimpleName: toInvocation
p7186
Vinsert
p7187
I42
VSimpleName: Mock
p7188
tp7189
I2
s(Vinsert
p7190
I42
VSimpleName: forIterable
p7191
Vinsert
p7192
I42
VSimpleName: String
p7193
tp7194
I1
s(Vinsert
p7195
I42
VSimpleName: when
p7196
Vinsert
p7197
I42
VSimpleName: Executors
p7198
tp7199
I1
s(Vinsert
p7200
I42
VSimpleName: replaceAll
p7201
Vinsert
p7202
I42
VSimpleName: text
p7203
tp7204
I2
s(g7091
I42
g7092
Vinsert
p7205
I45
VStringLiteral: " !"
p7206
tp7207
I1
s(Vinsert
p7208
I42
VSimpleName: getClass
p7209
Vinsert
p7210
I42
VSimpleName: Override
p7211
tp7212
I1
s(Vinsert
p7213
I42
VSimpleName: validate
p7214
Vinsert
p7215
I33
VNullLiteral
p7216
tp7217
I1
s(g2748
I42
g2749
Vinsert
p7218
I57
VTypeLiteral
p7219
tp7220
I2
s(Vinsert
p7221
I42
VSimpleName: lock
p7222
Vinsert
p7223
I43
VSimpleType: Lock
p7224
tp7225
I2
s(g1159
I42
g1160
Vinsert
p7226
I42
VSimpleName: Test
p7227
tp7228
I1
s(g347
I42
g348
Vinsert
p7229
I43
VSimpleType: MethodGraph.Node
p7230
tp7231
I1
s(g1129
I42
g1130
Vinsert
p7232
I42
VSimpleName: pullStubable
p7233
tp7234
I1
s(Vinsert
p7235
I42
VSimpleName: getModifiers
p7236
Vinsert
p7237
I42
VSimpleName: AbstractAwareMethod
p7238
tp7239
I1
s(g4719
I42
g4720
Vinsert
p7240
I8
VBlock
p7241
tp7242
I2
s(Vinsert
p7243
I42
VSimpleName: strictMode
p7244
Vinsert
p7245
I42
VSimpleName: Object
p7246
tp7247
I1
s(Vinsert
p7248
I42
VSimpleName: getSignature
p7249
Vinsert
p7250
I43
VSimpleType: Type
p7251
tp7252
I1
s(Vinsert
p7253
I42
VSimpleName: replaceFirst
p7254
Vinsert
p7255
I32
VMethodInvocation
p7256
tp7257
I1
s(Vinsert
p7258
I42
VSimpleName: getString
p7259
Vinsert
p7260
I21
VExpressionStatement
p7261
tp7262
I1
s(Vinsert
p7263
I42
VSimpleName: imposterise
p7264
Vinsert
p7265
I42
VSimpleName: expected
p7266
tp7267
I1
s(g483
I42
g484
Vinsert
p7268
I11
VCastExpression
p7269
tp7270
I1
s(g229
I42
g230
Vinsert
p7271
I42
VSimpleName: list
p7272
tp7273
I1
s(Vinsert
p7274
I42
VSimpleName: getLocation
p7275
Vinsert
p7276
I45
VStringLiteral: "But found this interaction:"
p7277
tp7278
I1
s(g778
I42
g779
Vinsert
p7279
I32
VMethodInvocation
p7280
tp7281
I1
s(Vinsert
p7282
I42
VSimpleName: info
p7283
Vinsert
p7284
I42
VSimpleName: String
p7285
tp7286
I3
s(Vinsert
p7287
I42
VSimpleName: valueFor
p7288
Vinsert
p7289
I43
VSimpleType: DefaultReturnValues
p7290
tp7291
I3
s(Vinsert
p7292
I42
VSimpleName: markVerified
p7293
Vinsert
p7294
I38
VPrefixExpression: !
p7295
tp7296
I1
s(Vinsert
p7297
I42
VSimpleName: toInvocation
p7298
Vinsert
p7299
I40
VQualifiedName: finderStub.actualToReturn
p7300
tp7301
I1
s(Vinsert
p7302
I42
VSimpleName: mockitoSession
p7303
Vinsert
p7304
I78
VMarkerAnnotation
p7305
tp7306
I2
s(g415
I42
g416
Vinsert
p7307
I76
VWildcardType: ? extends T
p7308
tp7309
I1
s(g6355
I42
g6356
Vinsert
p7310
I59
VVariableDeclarationFragment
p7311
tp7312
I1
s(Vinsert
p7313
I42
VSimpleName: rawExtraInterfaces
p7314
Vinsert
p7315
I42
VSimpleName: GenericMetadataSupport
p7316
tp7317
I1
s(g623
I42
g624
Vinsert
p7318
I42
VSimpleName: VerificationModeImpl
p7319
tp7320
I1
s(Vinsert
p7321
I42
VSimpleName: concat
p7322
Vinsert
p7323
I43
VSimpleType: ArrayUtils
p7324
tp7325
I2
s(g6781
I42
g6782
Vinsert
p7326
I42
VSimpleName: isEmpty
p7327
tp7328
I1
s(Vinsert
p7329
I42
VSimpleName: ignoreStubs
p7330
Vinsert
p7331
I32
VMethodInvocation
p7332
tp7333
I1
s(g1805
I42
g1806
Vinsert
p7334
I42
VSimpleName: firstUndesired
p7335
tp7336
I1
s(Vinsert
p7337
I42
VSimpleName: isVoid
p7338
Vinsert
p7339
I43
VSimpleType: InvocationInfo
p7340
tp7341
I2
s(g478
I42
g479
Vinsert
p7342
I42
VSimpleName: anyString
p7343
tp7344
I1
s(g1214
I42
g1215
Vinsert
p7345
I45
VStringLiteral: "[Mockito] stubbed with those args here   at com.FooTest:21\u005cn"
p7346
tp7347
I1
s(g4466
I42
g4467
Vinsert
p7348
I42
VSimpleName: isNull
p7349
tp7350
I1
s(Vinsert
p7351
I42
VSimpleName: isAbstract
p7352
Vinsert
p7353
I42
VSimpleName: e
p7354
tp7355
I1
s(Vinsert
p7356
I42
VSimpleName: sleep
p7357
Vinsert
p7358
I42
VSimpleName: Runnable
p7359
tp7360
I1
s(Vinsert
p7361
I42
VSimpleName: isPrimitive
p7362
Vinsert
p7363
I39
VPrimitiveType: boolean
p7364
tp7365
I3
s(Vinsert
p7366
I42
VSimpleName: atLeastOnceMode
p7367
Vinsert
p7368
I42
VSimpleName: get
p7369
tp7370
I1
s(Vinsert
p7371
I42
VSimpleName: getLastVarargs
p7372
Vinsert
p7373
I43
VSimpleType: Object
p7374
tp7375
I1
s(g3542
I42
g3543
Vinsert
p7376
I42
VSimpleName: AssertionError
p7377
tp7378
I1
s(Vinsert
p7379
I42
VSimpleName: clear
p7380
Vinsert
p7381
I14
VClassInstanceCreation
p7382
tp7383
I2
s(g5105
I42
g5106
Vinsert
p7384
I8
VBlock
p7385
tp7386
I1
s(g4497
I42
g4498
Vinsert
p7387
I37
VPostfixExpression: ++
p7388
tp7389
I1
s(Vinsert
p7390
I42
VSimpleName: checkcast
p7391
Vinsert
p7392
I34
VNumberLiteral: 0
p7393
tp7394
I1
s(Vinsert
p7395
I42
VSimpleName: accept
p7396
Vinsert
p7397
I42
VSimpleName: filter
p7398
tp7399
I2
s(g109
I42
g110
Vinsert
p7400
I83
VModifier: public
p7401
tp7402
I4
s(Vinsert
p7403
I42
VSimpleName: visitIincInsn
p7404
Vinsert
p7405
I32
VMethodInvocation
p7406
tp7407
I1
s(Vinsert
p7408
I42
VSimpleName: methodName
p7409
Vinsert
p7410
I42
VSimpleName: Exception
p7411
tp7412
I1
s(g443
I42
g444
Vinsert
p7413
I42
VSimpleName: privateInherited
p7414
tp7415
I2
s(Vinsert
p7416
I42
VSimpleName: nullInvocationListenerAdded
p7417
Vinsert
p7418
I57
VTypeLiteral
p7419
tp7420
I1
s(g2631
I42
g2632
Vinsert
p7421
I42
VSimpleName: wantedCount
p7422
tp7423
I1
s(g4866
I42
g4867
Vinsert
p7424
I42
VSimpleName: assertEquals
p7425
tp7426
I12
s(g357
I42
g358
Vinsert
p7427
I2
VArrayAccess
p7428
tp7429
I1
s(g4510
I42
g4511
Vinsert
p7430
I60
VVariableDeclarationStatement
p7431
tp7432
I3
s(g4585
I42
g4586
Vinsert
p7433
I43
VSimpleType: InvocationMarker
p7434
tp7435
I4
s(Vinsert
p7436
I42
VSimpleName: simpleMethod
p7437
Vinsert
p7438
I42
VSimpleName: shouldAllowCapturingArguments
p7439
tp7440
I1
s(Vinsert
p7441
I42
VSimpleName: getClass
p7442
Vinsert
p7443
I9
VBooleanLiteral: false
p7444
tp7445
I3
s(Vinsert
p7446
I42
VSimpleName: getActual
p7447
Vinsert
p7448
I32
VMethodInvocation
p7449
tp7450
I4
s(Vinsert
p7451
I42
VSimpleName: framework
p7452
Vinsert
p7453
I38
VPrefixExpression: !
p7454
tp7455
I1
s(g3659
I42
g3660
Vinsert
p7456
I32
VMethodInvocation
p7457
tp7458
I3
s(g5712
I42
g5713
Vinsert
p7459
I42
VSimpleName: TypeVariable
p7460
tp7461
I1
s(Vinsert
p7462
I42
VSimpleName: append
p7463
Vinsert
p7464
I42
VSimpleName: label
p7465
tp7466
I1
s(Vinsert
p7467
I42
VSimpleName: toString
p7468
Vinsert
p7469
I42
VSimpleName: hasJUnit
p7470
tp7471
I1
s(Vinsert
p7472
I42
VSimpleName: validateMockedType
p7473
Vinsert
p7474
I42
VSimpleName: validator
p7475
tp7476
I4
s(g4001
I42
g4002
Vinsert
p7477
I43
VSimpleType: MockitoException
p7478
tp7479
I1
s(g4853
I42
g4854
Vinsert
p7480
I43
VSimpleType: T
p7481
tp7482
I1
s(g628
I42
g629
Vinsert
p7483
I14
VClassInstanceCreation
p7484
tp7485
I2
s(g3550
I42
g3551
Vinsert
p7486
I42
VSimpleName: requireValidState
p7487
tp7488
I1
s(g5201
I42
g5202
Vinsert
p7489
I39
VPrimitiveType: void
p7490
tp7491
I1
s(g6260
I42
g6261
Vinsert
p7492
I42
VSimpleName: tmp
p7493
tp7494
I1
s(Vinsert
p7495
I42
VSimpleName: hasJUnit
p7496
Vinsert
p7497
I25
VIfStatement
p7498
tp7499
I1
s(g4456
I42
g4457
Vinsert
p7500
I43
VSimpleType: CodeGenerationException
p7501
tp7502
I2
s(g3242
I42
g3243
Vinsert
p7503
I52
VThisExpression
p7504
tp7505
I1
s(g5858
I42
g5859
Vinsert
p7506
I32
VMethodInvocation
p7507
tp7508
I3
s(g3326
I42
g3327
Vinsert
p7509
I42
VSimpleName: mock
p7510
tp7511
I3
s(g648
I42
g649
Vinsert
p7512
I42
VSimpleName: Article
p7513
tp7514
I2
s(g548
I42
g549
Vinsert
p7515
I42
VSimpleName: ancillaryTypes
p7516
tp7517
I1
s(g2485
I42
g2486
Vinsert
p7518
I42
VSimpleName: shouldGetFirstUnverifiedInvocationChunk
p7519
tp7520
I1
s(Vinsert
p7521
I42
VSimpleName: validate
p7522
Vinsert
p7523
I43
VSimpleType: MockitoException
p7524
tp7525
I1
s(Vinsert
p7526
I42
VSimpleName: beginTask
p7527
Vinsert
p7528
I32
VMethodInvocation
p7529
tp7530
I2
s(g5614
I42
g5615
Vinsert
p7531
I34
VNumberLiteral: 0
p7532
tp7533
I4
s(Vinsert
p7534
I42
VSimpleName: initMocks
p7535
Vinsert
p7536
I42
VSimpleName: base
p7537
tp7538
I2
s(Vinsert
p7539
I42
VSimpleName: getReturnType
p7540
Vinsert
p7541
I42
VSimpleName: desc
p7542
tp7543
I1
s(Vinsert
p7544
I42
VSimpleName: nullPassedToWhenMethod
p7545
Vinsert
p7546
I74
VParameterizedType: Answer<?>
p7547
tp7548
I1
s(g2876
I42
g2877
Vinsert
p7549
I42
VSimpleName: File
p7550
tp7551
I1
s(g1632
I42
g1633
Vinsert
p7552
I42
VSimpleName: TraceBuilder
p7553
tp7554
I1
s(g3219
I42
g3220
Vinsert
p7555
I8
VBlock
p7556
tp7557
I1
s(g3488
I42
g3489
Vinsert
p7558
I42
VSimpleName: mock
p7559
tp7560
I104
s(g420
I42
g421
Vinsert
p7561
I42
VSimpleName: chunker
p7562
tp7563
I6
s(Vinsert
p7564
I42
VSimpleName: noMoreInteractions
p7565
Vinsert
p7566
I42
VSimpleName: VerificationMode
p7567
tp7568
I2
s(g6502
I42
g6503
Vinsert
p7569
I21
VExpressionStatement
p7570
tp7571
I1
s(Vinsert
p7572
I42
VSimpleName: getReturnType
p7573
Vinsert
p7574
I41
VReturnStatement
p7575
tp7576
I5
s(Vinsert
p7577
I42
VSimpleName: getParameterTypes
p7578
Vinsert
p7579
I42
VSimpleName: ArrayList
p7580
tp7581
I2
s(Vinsert
p7582
I42
VSimpleName: times
p7583
Vinsert
p7584
I42
VSimpleName: VerificationMode
p7585
tp7586
I1
s(Vinsert
p7587
I42
VSimpleName: printInvocations
p7588
Vinsert
p7589
I54
VTryStatement
p7590
tp7591
I1
s(g7337
I42
g7338
Vinsert
p7592
I14
VClassInstanceCreation
p7593
tp7594
I3
s(g7403
I42
g7404
Vinsert
p7595
I83
VModifier: public
p7596
tp7597
I1
s(g4817
I42
g4818
Vinsert
p7598
I43
VSimpleType: Invocation
p7599
tp7600
I2
s(g89
I42
g90
Vinsert
p7601
I42
VSimpleName: Invocation
p7602
tp7603
I1
s(g6339
I42
g6340
Vinsert
p7604
I42
VSimpleName: ClassFileVersion
p7605
tp7606
I1
s(g3262
I42
g3263
Vinsert
p7607
I44
VSingleVariableDeclaration
p7608
tp7609
I1
s(g2180
I42
g2181
Vinsert
p7610
I42
VSimpleName: assertEquals
p7611
tp7612
I1
s(g1426
I42
g1427
Vinsert
p7613
I83
VModifier: static
p7614
tp7615
I1
s(g6598
I42
g6599
Vinsert
p7616
I42
VSimpleName: writeMethod
p7617
tp7618
I1
s(Vinsert
p7619
I42
VSimpleName: sendEmailTo
p7620
Vinsert
p7621
I59
VVariableDeclarationFragment
p7622
tp7623
I1
s(g2508
I42
g2509
Vinsert
p7624
I21
VExpressionStatement
p7625
tp7626
I1
s(g4226
I42
g4227
Vinsert
p7627
I42
VSimpleName: String
p7628
tp7629
I3
s(g395
I42
g396
Vinsert
p7630
I42
VSimpleName: timer
p7631
tp7632
I1
s(Vinsert
p7633
I42
VSimpleName: mockVerificationScenario
p7634
Vinsert
p7635
I43
VSimpleType: Exception
p7636
tp7637
I1
s(Vinsert
p7638
I42
VSimpleName: getDefaultVerificationStrategy
p7639
Vinsert
p7640
I42
VSimpleName: assertLazily
p7641
tp7642
I1
s(Vinsert
p7643
I42
VSimpleName: instance
p7644
Vinsert
p7645
I39
VPrimitiveType: byte
p7646
tp7647
I1
s(g4991
I42
g4992
Vinsert
p7648
I42
VSimpleName: compareToIntVsString
p7649
tp7650
I1
s(g7587
I42
g7588
Vinsert
p7651
I42
VSimpleName: Object
p7652
tp7653
I1
s(g3735
I42
g3736
Vinsert
p7654
I11
VCastExpression
p7655
tp7656
I1
s(Vinsert
p7657
I42
VSimpleName: log
p7658
Vinsert
p7659
I42
VSimpleName: SimpleMockitoLogger
p7660
tp7661
I2
s(g3601
I42
g3602
Vinsert
p7662
I21
VExpressionStatement
p7663
tp7664
I1
s(Vinsert
p7665
I42
VSimpleName: verify
p7666
Vinsert
p7667
I31
VMethodDeclaration
p7668
tp7669
I9
s(g3144
I42
g3145
Vinsert
p7670
I42
VSimpleName: methodName
p7671
tp7672
I1
s(g7321
I42
g7322
Vinsert
p7673
I42
VSimpleName: ancillaryTypes
p7674
tp7675
I1
s(g3637
I42
g3638
Vinsert
p7676
I3
VArrayCreation
p7677
tp7678
I1
s(g36
I42
g37
Vinsert
p7679
I42
VSimpleName: nread
p7680
tp7681
I1
s(Vinsert
p7682
I42
VSimpleName: getClassLoader
p7683
Vinsert
p7684
I42
VSimpleName: iface
p7685
tp7686
I2
s(g5216
I42
g5217
Vinsert
p7687
I8
VBlock
p7688
tp7689
I1
s(g3637
I42
g3638
Vinsert
p7690
I43
VSimpleType: LocalIsolatedURLClassLoader
p7691
tp7692
I1
s(g2005
I42
g2006
Vinsert
p7693
I31
VMethodDeclaration
p7694
tp7695
I1
s(Vinsert
p7696
I42
VSimpleName: writeObject
p7697
Vinsert
p7698
I43
VSimpleType: Exception
p7699
tp7700
I1
s(g4087
I42
g4088
Vinsert
p7701
I42
VSimpleName: SET_PREFIX
p7702
tp7703
I1
s(Vinsert
p7704
I42
VSimpleName: close
p7705
Vinsert
p7706
I42
VSimpleName: input
p7707
tp7708
I1
s(Vinsert
p7709
I42
VSimpleName: toInvocation
p7710
Vinsert
p7711
I42
VSimpleName: shouldMarkInvocationsAsVerified
p7712
tp7713
I2
s(Vinsert
p7714
I42
VSimpleName: print
p7715
Vinsert
p7716
I42
VSimpleName: unstubbedInvocations
p7717
tp7718
I1
s(g6781
I42
g6782
Vinsert
p7719
I83
VModifier: public
p7720
tp7721
I1
s(g3953
I42
g3954
Vinsert
p7722
I42
VSimpleName: InvocationOnMock
p7723
tp7724
I1
s(Vinsert
p7725
I42
VSimpleName: getClass
p7726
Vinsert
p7727
I45
VStringLiteral: "Mocked type must be the same as the type of your spied instance."
p7728
tp7729
I1
s(Vinsert
p7730
I42
VSimpleName: extraInterfacesCannotContainMockedType
p7731
Vinsert
p7732
I32
VMethodInvocation
p7733
tp7734
I1
s(Vinsert
p7735
I42
VSimpleName: visitMethod
p7736
Vinsert
p7737
I85
VDimension
p7738
tp7739
I2
s(g6642
I42
g6643
Vinsert
p7740
I43
VSimpleType: Class
p7741
tp7742
I2
s(g7495
I42
g7496
Vinsert
p7743
I44
VSingleVariableDeclaration
p7744
tp7745
I2
s(g4916
I42
g4917
Vinsert
p7746
I42
VSimpleName: eq
p7747
tp7748
I4
s(g4616
I42
g4617
Vinsert
p7749
I42
VSimpleName: listener2
p7750
tp7751
I1
s(Vinsert
p7752
I42
VSimpleName: howMuchDidYouInherit
p7753
Vinsert
p7754
I31
VMethodDeclaration
p7755
tp7756
I1
s(g7619
I42
g7620
Vinsert
p7757
I14
VClassInstanceCreation
p7758
tp7759
I1
s(g2248
I42
g2249
Vinsert
p7760
I70
VEnhancedForStatement
p7761
tp7762
I1
s(Vinsert
p7763
I42
VSimpleName: size
p7764
Vinsert
p7765
I42
VSimpleName: subList
p7766
tp7767
I1
s(g1472
I42
g1473
Vinsert
p7768
I42
VSimpleName: genericReturnType
p7769
tp7770
I1
s(g6124
I42
g6125
Vinsert
p7771
I83
VModifier: public
p7772
tp7773
I5
s(g7657
I42
g7658
Vinsert
p7774
I60
VVariableDeclarationStatement
p7775
tp7776
I1
s(g1322
I42
g1323
Vinsert
p7777
I40
VQualifiedName: org.mockito.internal.util.ObjectMethodsGuru
p7778
tp7779
I1
s(Vinsert
p7780
I42
VSimpleName: create
p7781
Vinsert
p7782
I42
VSimpleName: klass
p7783
tp7784
I3
s(Vinsert
p7785
I42
VSimpleName: getParameterTypes
p7786
Vinsert
p7787
I42
VSimpleName: params2
p7788
tp7789
I1
s(Vinsert
p7790
I42
VSimpleName: remove
p7791
Vinsert
p7792
I43
VSimpleType: Object
p7793
tp7794
I1
s(g2369
I42
g2370
Vinsert
p7795
I21
VExpressionStatement
p7796
tp7797
I3
s(Vinsert
p7798
I42
VSimpleName: call
p7799
Vinsert
p7800
I42
VSimpleName: file1
p7801
tp7802
I2
s(g1573
I42
g1574
Vinsert
p7803
I21
VExpressionStatement
p7804
tp7805
I1
s(Vinsert
p7806
I42
VSimpleName: contains
p7807
Vinsert
p7808
I42
VSimpleName: add
p7809
tp7810
I2
s(g6416
I42
g6417
Vinsert
p7811
I21
VExpressionStatement
p7812
tp7813
I2
s(g337
I42
g338
Vinsert
p7814
I34
VNumberLiteral: 1
p7815
tp7816
I1
s(Vinsert
p7817
I42
VSimpleName: markVerified
p7818
Vinsert
p7819
I42
VSimpleName: shouldFindSimilarInvocationByGettingFirstUnverified
p7820
tp7821
I1
s(g1229
I42
g1230
Vinsert
p7822
I78
VMarkerAnnotation
p7823
tp7824
I1
s(Vinsert
p7825
I42
VSimpleName: currentThread
p7826
Vinsert
p7827
I42
VSimpleName: currentThread
p7828
tp7829
I1
s(g926
I42
g927
Vinsert
p7830
I43
VSimpleType: StackTraceElement
p7831
tp7832
I6
s(g5383
I42
g5384
Vinsert
p7833
I42
VSimpleName: StubbedInvocationMatcher
p7834
tp7835
I1
s(Vinsert
p7836
I42
VSimpleName: returnInt
p7837
Vinsert
p7838
I32
VMethodInvocation
p7839
tp7840
I4
s(Vinsert
p7841
I42
VSimpleName: verify
p7842
Vinsert
p7843
I34
VNumberLiteral: 3
p7844
tp7845
I1
s(g357
I42
g358
Vinsert
p7846
I45
VStringLiteral: "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent"
p7847
tp7848
I1
s(Vinsert
p7849
I42
VSimpleName: isMock
p7850
Vinsert
p7851
I66
VTextElement:  whether the object is a mock.
p7852
tp7853
I1
s(Vinsert
p7854
I42
VSimpleName: println
p7855
Vinsert
p7856
I42
VSimpleName: asList
p7857
tp7858
I1
s(Vinsert
p7859
I42
VSimpleName: fieldWasInitialized
p7860
Vinsert
p7861
I42
VSimpleName: assertTrue
p7862
tp7863
I1
s(g2046
I42
g2047
Vinsert
p7864
I42
VSimpleName: Exception
p7865
tp7866
I1
s(Vinsert
p7867
I42
VSimpleName: toString
p7868
Vinsert
p7869
I27
VInfixExpression: !=
p7870
tp7871
I2
s(Vinsert
p7872
I42
VSimpleName: toString
p7873
Vinsert
p7874
I43
VSimpleType: IMethods
p7875
tp7876
I4
s(g272
I42
g273
Vinsert
p7877
I53
VThrowStatement
p7878
tp7879
I1
s(g5604
I42
g5605
Vinsert
p7880
I42
VSimpleName: shortThat
p7881
tp7882
I1
s(Vinsert
p7883
I42
VSimpleName: differentMethod
p7884
Vinsert
p7885
I43
VSimpleType: Exception
p7886
tp7887
I1
s(Vinsert
p7888
I42
VSimpleName: findInvocations
p7889
Vinsert
p7890
I7
VAssignment: =
p7891
tp7892
I2
s(Vinsert
p7893
I42
VSimpleName: indexOf
p7894
Vinsert
p7895
I60
VVariableDeclarationStatement
p7896
tp7897
I2
s(Vinsert
p7898
I42
VSimpleName: setStackTrace
p7899
Vinsert
p7900
I42
VSimpleName: join
p7901
tp7902
I5
s(g1982
I42
g1983
Vinsert
p7903
I44
VSingleVariableDeclaration
p7904
tp7905
I3
s(Vinsert
p7906
I42
VSimpleName: apply
p7907
Vinsert
p7908
I42
VSimpleName: Statement
p7909
tp7910
I2
s(Vinsert
p7911
I42
VSimpleName: setStackTrace
p7912
Vinsert
p7913
I42
VSimpleName: FirstUndesiredInvocation
p7914
tp7915
I2
s(g2185
I42
g2186
Vinsert
p7916
I42
VSimpleName: it
p7917
tp7918
I2
s(g2326
I42
g2327
Vinsert
p7919
I7
VAssignment: =
p7920
tp7921
I1
s(g686
I42
g687
Vinsert
p7922
I14
VClassInstanceCreation
p7923
tp7924
I1
s(g7081
I42
g7082
Vinsert
p7925
I39
VPrimitiveType: void
p7926
tp7927
I1
s(g653
I42
g654
Vinsert
p7928
I42
VSimpleName: invocations
p7929
tp7930
I5
s(Vinsert
p7931
I42
VSimpleName: doAnswer
p7932
Vinsert
p7933
I43
VSimpleType: Stubber
p7934
tp7935
I2
s(g2642
I42
g2643
Vinsert
p7936
I42
VSimpleName: Test
p7937
tp7938
I2
s(Vinsert
p7939
I42
VSimpleName: equals
p7940
Vinsert
p7941
I42
VSimpleName: wanted
p7942
tp7943
I1
s(g7129
I42
g7130
Vinsert
p7944
I57
VTypeLiteral
p7945
tp7946
I1
s(g7221
I42
g7222
Vinsert
p7947
I83
VModifier: final
p7948
tp7949
I1
s(g2531
I42
g2532
Vinsert
p7950
I42
VSimpleName: should_not_allow_serializable_with_Object_that_dont_implement_Serializable
p7951
tp7952
I1
s(g448
I42
g449
Vinsert
p7953
I31
VMethodDeclaration
p7954
tp7955
I1
s(Vinsert
p7956
I42
VSimpleName: when
p7957
Vinsert
p7958
I42
VSimpleName: shouldAllowStubbingWhenTypesMatchSignature
p7959
tp7960
I1
s(Vinsert
p7961
I42
VSimpleName: getMethod
p7962
Vinsert
p7963
I21
VExpressionStatement
p7964
tp7965
I2
s(Vinsert
p7966
I42
VSimpleName: boo
p7967
Vinsert
p7968
I42
VSimpleName: foo
p7969
tp7970
I2
s(g4492
I42
g4493
Vinsert
p7971
I43
VSimpleType: Object
p7972
tp7973
I1
s(g6614
I42
g6615
Vinsert
p7974
I42
VSimpleName: instanceField
p7975
tp7976
I2
s(g2662
I42
g2663
Vinsert
p7977
I42
VSimpleName: voidMethod
p7978
tp7979
I1
s(g4077
I42
g4078
Vinsert
p7980
I43
VSimpleType: String
p7981
tp7982
I2
s(g239
I42
g240
Vinsert
p7983
I42
VSimpleName: mockSettings
p7984
tp7985
I1
s(g7582
I42
g7583
Vinsert
p7986
I42
VSimpleName: copySelfWithNewVerificationMode
p7987
tp7988
I1
s(g3792
I42
g3793
Vinsert
p7989
I42
VSimpleName: classLoader_without_JUnit
p7990
tp7991
I1
s(Vinsert
p7992
I42
VSimpleName: create
p7993
Vinsert
p7994
I43
VSimpleType: Runner
p7995
tp7996
I1
s(g1019
I42
g1020
Vinsert
p7997
I59
VVariableDeclarationFragment
p7998
tp7999
I1
s(g1513
I42
g1514
Vinsert
p8000
I44
VSingleVariableDeclaration
p8001
tp8002
I1
s(Vinsert
p8003
I42
VSimpleName: equals
p8004
Vinsert
p8005
I42
VSimpleName: ClassNotFoundException
p8006
tp8007
I1
s(g1449
I42
g1450
Vinsert
p8008
I74
VParameterizedType: List<Person>
p8009
tp8010
I1
s(Vinsert
p8011
I42
VSimpleName: getLocation
p8012
Vinsert
p8013
I42
VSimpleName: InvocationMatcher
p8014
tp8015
I1
s(Vinsert
p8016
I42
VSimpleName: otherMethod
p8017
Vinsert
p8018
I42
VSimpleName: verify
p8019
tp8020
I1
s(g2844
I42
g2845
Vinsert
p8021
I5
VArrayType: Matcher[]
p8022
tp8023
I1
s(g352
I42
g353
Vinsert
p8024
I42
VSimpleName: getStubbingArgMismatches
p8025
tp8026
I1
s(g6736
I42
g6737
Vinsert
p8027
I44
VSingleVariableDeclaration
p8028
tp8029
I1
s(Vinsert
p8030
I42
VSimpleName: asList
p8031
Vinsert
p8032
I42
VSimpleName: getVerifiers
p8033
tp8034
I3
s(g2844
I42
g2845
Vinsert
p8035
I32
VMethodInvocation
p8036
tp8037
I1
s(Vinsert
p8038
I42
VSimpleName: isEmpty
p8039
Vinsert
p8040
I74
VParameterizedType: List<? extends Object>
p8041
tp8042
I1
s(g704
I42
g705
Vinsert
p8043
I46
VSuperConstructorInvocation
p8044
tp8045
I1
s(g2770
I42
g2771
Vinsert
p8046
I42
VSimpleName: mocks
p8047
tp8048
I1
s(g6170
I42
g6171
Vinsert
p8049
I42
VSimpleName: Object
p8050
tp8051
I1
s(Vinsert
p8052
I42
VSimpleName: compile
p8053
Vinsert
p8054
I31
VMethodDeclaration
p8055
tp8056
I1
s(Vinsert
p8057
I42
VSimpleName: getMessage
p8058
Vinsert
p8059
I1
VAnonymousClassDeclaration
p8060
tp8061
I2
s(Vinsert
p8062
I42
VSimpleName: store_local
p8063
Vinsert
p8064
I42
VSimpleName: push
p8065
tp8066
I1
s(g1919
I42
g1920
Vinsert
p8067
I43
VSimpleType: String
p8068
tp8069
I1
s(g1194
I42
g1195
Vinsert
p8070
I77
VNormalAnnotation
p8071
tp8072
I1
s(g4322
I42
g4323
Vinsert
p8073
I42
VSimpleName: pluginClass
p8074
tp8075
I1
s(g7867
I42
g7868
Vinsert
p8076
I34
VNumberLiteral: 0
p8077
tp8078
I6
s(g5196
I42
g5197
Vinsert
p8079
I42
VSimpleName: Object
p8080
tp8081
I1
s(Vinsert
p8082
I42
VSimpleName: newStubbing
p8083
Vinsert
p8084
I42
VSimpleName: newStubbing
p8085
tp8086
I1
s(g6752
I42
g6753
Vinsert
p8087
I44
VSingleVariableDeclaration
p8088
tp8089
I1
s(Vinsert
p8090
I42
VSimpleName: simpleMethod
p8091
Vinsert
p8092
I42
VSimpleName: getArgument
p8093
tp8094
I1
s(Vinsert
p8095
I42
VSimpleName: getCause
p8096
Vinsert
p8097
I43
VSimpleType: String
p8098
tp8099
I3
s(g4247
I42
g4248
Vinsert
p8100
I42
VSimpleName: when
p8101
tp8102
I1
s(Vinsert
p8103
I42
VSimpleName: simpleMethod
p8104
Vinsert
p8105
I42
VSimpleName: mock2
p8106
tp8107
I2
s(g1642
I42
g1643
Vinsert
p8108
I32
VMethodInvocation
p8109
tp8110
I1
s(g2934
I42
g2935
Vinsert
p8111
I42
VSimpleName: assertThat
p8112
tp8113
I1
s(g5847
I42
g5848
Vinsert
p8114
I42
VSimpleName: field
p8115
tp8116
I1
s(g468
I42
g469
Vinsert
p8117
I42
VSimpleName: in
p8118
tp8119
I1
s(g46
I42
g47
Vinsert
p8120
I42
VSimpleName: assertEquals
p8121
tp8122
I1
s(g5636
I42
g5637
Vinsert
p8123
I42
VSimpleName: Mockito
p8124
tp8125
I3
s(Vinsert
p8126
I42
VSimpleName: isInstanceOf
p8127
Vinsert
p8128
I32
VMethodInvocation
p8129
tp8130
I6
s(Vinsert
p8131
I42
VSimpleName: forMap
p8132
Vinsert
p8133
I42
VSimpleName: String
p8134
tp8135
I2
s(Vinsert
p8136
I42
VSimpleName: toReturn
p8137
Vinsert
p8138
I42
VSimpleName: anyBoolean
p8139
tp8140
I1
s(Vinsert
p8141
I42
VSimpleName: verify
p8142
Vinsert
p8143
I42
VSimpleName: message
p8144
tp8145
I1
s(Vinsert
p8146
I42
VSimpleName: annotateType
p8147
Vinsert
p8148
I7
VAssignment: =
p8149
tp8150
I1
s(g2616
I42
g2617
Vinsert
p8151
I42
VSimpleName: getStrategy
p8152
tp8153
I1
s(g1627
I42
g1628
Vinsert
p8154
I42
VSimpleName: executor
p8155
tp8156
I1
s(g1853
I42
g1854
Vinsert
p8157
I83
VModifier: public
p8158
tp8159
I1
s(Vinsert
p8160
I42
VSimpleName: getSomething
p8161
Vinsert
p8162
I57
VTypeLiteral
p8163
tp8164
I1
s(g252
I42
g253
Vinsert
p8165
I42
VSimpleName: invocation
p8166
tp8167
I1
s(g5660
I42
g5661
Vinsert
p8168
I42
VSimpleName: IMethods
p8169
tp8170
I4
s(Vinsert
p8171
I42
VSimpleName: verify
p8172
Vinsert
p8173
I7
VAssignment: =
p8174
tp8175
I2
s(Vinsert
p8176
I42
VSimpleName: toInvocationMatcher
p8177
Vinsert
p8178
I42
VSimpleName: LoggingListener
p8179
tp8180
I1
s(g4611
I42
g4612
Vinsert
p8181
I42
VSimpleName: thenReturn
p8182
tp8183
I1
s(Vinsert
p8184
I42
VSimpleName: varargsObject
p8185
Vinsert
p8186
I42
VSimpleName: String
p8187
tp8188
I1
s(g1853
I42
g1854
Vinsert
p8189
I43
VSimpleType: MethodVisitor
p8190
tp8191
I1
s(g7416
I42
g7417
Vinsert
p8192
I32
VMethodInvocation
p8193
tp8194
I1
s(Vinsert
p8195
I42
VSimpleName: getClass
p8196
Vinsert
p8197
I42
VSimpleName: Throwable
p8198
tp8199
I1
s(Vinsert
p8200
I42
VSimpleName: getMessage
p8201
Vinsert
p8202
I42
VSimpleName: validateType
p8203
tp8204
I1
s(Vinsert
p8205
I42
VSimpleName: invokeSuper
p8206
Vinsert
p8207
I42
VSimpleName: target
p8208
tp8209
I3
s(Vinsert
p8210
I42
VSimpleName: getClass
p8211
Vinsert
p8212
I45
VStringLiteral: "Type meta-data for this Type ("
p8213
tp8214
I1
s(g1214
I42
g1215
Vinsert
p8215
I45
VStringLiteral: "at com.Foo:120"
p8216
tp8217
I1
s(Vinsert
p8218
I42
VSimpleName: getFailures
p8219
Vinsert
p8220
I42
VSimpleName: sb
p8221
tp8222
I2
s(g4577
I42
g4578
Vinsert
p8223
I43
VSimpleType: NewOngoingStubbing
p8224
tp8225
I2
s(Vinsert
p8226
I42
VSimpleName: returnValueFor
p8227
Vinsert
p8228
I42
VSimpleName: values
p8229
tp8230
I3
s(g493
I42
g494
Vinsert
p8231
I42
VSimpleName: nullable_matcher
p8232
tp8233
I1
s(g8210
I42
g8211
Vinsert
p8234
I43
VSimpleType: ParameterizedType
p8235
tp8236
I1
s(Vinsert
p8237
I42
VSimpleName: getCanonicalName
p8238
Vinsert
p8239
I45
VStringLiteral: "ClassCastException occurred while creating the mockito mock :"
p8240
tp8241
I1
s(Vinsert
p8242
I42
VSimpleName: getValue
p8243
Vinsert
p8244
I43
VSimpleType: MockMethodInterceptor
p8245
tp8246
I1
s(g1790
I42
g1791
Vinsert
p8247
I21
VExpressionStatement
p8248
tp8249
I1
s(Vinsert
p8250
I42
VSimpleName: add
p8251
Vinsert
p8252
I42
VSimpleName: var
p8253
tp8254
I1
s(Vinsert
p8255
I42
VSimpleName: create
p8256
Vinsert
p8257
I43
VSimpleType: Exception
p8258
tp8259
I1
s(g2606
I42
g2607
Vinsert
p8260
I42
VSimpleName: Assertions
p8261
tp8262
I8
s(g7582
I42
g7583
Vinsert
p8263
I43
VSimpleType: VerificationMode
p8264
tp8265
I1
s(g7451
I42
g7452
Vinsert
p8266
I25
VIfStatement
p8267
tp8268
I2
s(g1449
I42
g1450
Vinsert
p8269
I42
VSimpleName: allValues
p8270
tp8271
I1
s(g5961
I42
g5962
Vinsert
p8272
I32
VMethodInvocation
p8273
tp8274
I1
s(Vinsert
p8275
I42
VSimpleName: returningNonMockableNestedGeneric
p8276
Vinsert
p8277
I42
VSimpleName: mock
p8278
tp8279
I1
s(g2921
I42
g2922
Vinsert
p8280
I42
VSimpleName: TestFinishedEvent
p8281
tp8282
I1
s(Vinsert
p8283
I42
VSimpleName: getSample
p8284
Vinsert
p8285
I11
VCastExpression
p8286
tp8287
I1
s(Vinsert
p8288
I42
VSimpleName: join
p8289
Vinsert
p8290
I14
VClassInstanceCreation
p8291
tp8292
I2
s(g2949
I42
g2950
Vinsert
p8293
I8
VBlock
p8294
tp8295
I1
s(g1044
I42
g1045
Vinsert
p8296
I43
VSimpleType: VerificationMode
p8297
tp8298
I1
s(g3953
I42
g3954
Vinsert
p8299
I42
VSimpleName: ObjenesisHelper
p8300
tp8301
I2
s(g2723
I42
g2724
Vinsert
p8302
I42
VSimpleName: invocations
p8303
tp8304
I4
s(g801
I42
g802
Vinsert
p8305
I43
VSimpleType: Description
p8306
tp8307
I2
s(g5575
I42
g5576
Vinsert
p8308
I8
VBlock
p8309
tp8310
I1
s(g3488
I42
g3489
Vinsert
p8311
I42
VSimpleName: given
p8312
tp8313
I4
s(Vinsert
p8314
I42
VSimpleName: isSpy
p8315
Vinsert
p8316
I43
VSimpleType: Class
p8317
tp8318
I1
s(Vinsert
p8319
I42
VSimpleName: atLeastOnce
p8320
Vinsert
p8321
I42
VSimpleName: VerifyingMode
p8322
tp8323
I2
s(Vinsert
p8324
I42
VSimpleName: assertThat
p8325
Vinsert
p8326
I40
VQualifiedName: org.fest.assertions.Assertions
p8327
tp8328
I1
s(Vinsert
p8329
I42
VSimpleName: hasJUnit45OrHigher
p8330
Vinsert
p8331
I42
VSimpleName: assertTrue
p8332
tp8333
I1
s(g3298
I42
g3299
Vinsert
p8334
I44
VSingleVariableDeclaration
p8335
tp8336
I1
s(Vinsert
p8337
I42
VSimpleName: containsIgnoringCase
p8338
Vinsert
p8339
I12
VCatchClause
p8340
tp8341
I1
s(g5393
I42
g5394
Vinsert
p8342
I59
VVariableDeclarationFragment
p8343
tp8344
I9
s(g1244
I42
g1245
Vinsert
p8345
I43
VSimpleType: Throwable
p8346
tp8347
I2
s(Vinsert
p8348
I42
VSimpleName: matches
p8349
Vinsert
p8350
I42
VSimpleName: matches
p8351
tp8352
I5
s(Vinsert
p8353
I42
VSimpleName: extraInterfaces
p8354
Vinsert
p8355
I42
VSimpleName: Map
p8356
tp8357
I1
s(Vinsert
p8358
I42
VSimpleName: getMessage
p8359
Vinsert
p8360
I42
VSimpleName: errorWithPrependedMessage
p8361
tp8362
I2
s(g4059
I42
g4060
Vinsert
p8363
I45
VStringLiteral: "  Received parameter: "
p8364
tp8365
I1
s(g312
I42
g313
Vinsert
p8366
I42
VSimpleName: doesIt
p8367
tp8368
I1
s(g1573
I42
g1574
Vinsert
p8369
I33
VNullLiteral
p8370
tp8371
I1
s(Vinsert
p8372
I42
VSimpleName: captureArgumentsFrom
p8373
Vinsert
p8374
I43
VSimpleType: LocalizedMatcher
p8375
tp8376
I1
s(g7966
I42
g7967
Vinsert
p8377
I42
VSimpleName: SMART_NULLS
p8378
tp8379
I1
s(g4840
I42
g4841
Vinsert
p8380
I41
VReturnStatement
p8381
tp8382
I1
s(Vinsert
p8383
I42
VSimpleName: set
p8384
Vinsert
p8385
I31
VMethodDeclaration
p8386
tp8387
I2
s(Vinsert
p8388
I42
VSimpleName: lastIndexOf
p8389
Vinsert
p8390
I42
VSimpleName: append
p8391
tp8392
I2
s(Vinsert
p8393
I42
VSimpleName: toArray
p8394
Vinsert
p8395
I42
VSimpleName: Collection
p8396
tp8397
I1
s(g7931
I42
g7932
Vinsert
p8398
I76
VWildcardType: ? extends Throwable
p8399
tp8400
I1
s(Vinsert
p8401
I42
VSimpleName: getInvocations
p8402
Vinsert
p8403
I83
VModifier: public
p8404
tp8405
I4
s(g3817
I42
g3818
Vinsert
p8406
I42
VSimpleName: cleanUpStackTraces
p8407
tp8408
I1
s(Vinsert
p8409
I42
VSimpleName: simpleMethod
p8410
Vinsert
p8411
I45
VStringLiteral: "two"
p8412
tp8413
I1
s(Vinsert
p8414
I42
VSimpleName: countArticles
p8415
Vinsert
p8416
I43
VSimpleType: IllegalArgumentException
p8417
tp8418
I1
s(g4497
I42
g4498
Vinsert
p8419
I39
VPrimitiveType: int
p8420
tp8421
I1
s(g6877
I42
g6878
Vinsert
p8422
I42
VSimpleName: listIterator
p8423
tp8424
I1
s(g7221
I42
g7222
Vinsert
p8425
I42
VSimpleName: readLock
p8426
tp8427
I2
s(g1144
I42
g1145
Vinsert
p8428
I42
VSimpleName: outerClassInstance
p8429
tp8430
I1
s(g2271
I42
g2272
Vinsert
p8431
I8
VBlock
p8432
tp8433
I3
s(Vinsert
p8434
I42
VSimpleName: isSerializable
p8435
Vinsert
p8436
I44
VSingleVariableDeclaration
p8437
tp8438
I3
s(Vinsert
p8439
I42
VSimpleName: say
p8440
Vinsert
p8441
I42
VSimpleName: setMockWithDowncast
p8442
tp8443
I1
s(g6350
I42
g6351
Vinsert
p8444
I42
VSimpleName: when
p8445
tp8446
I1
s(g4929
I42
g4930
Vinsert
p8447
I27
VInfixExpression: !=
p8448
tp8449
I1
s(g5575
I42
g5576
Vinsert
p8450
I42
VSimpleName: rollback
p8451
tp8452
I1
s(g2485
I42
g2486
Vinsert
p8453
I8
VBlock
p8454
tp8455
I1
s(g7859
I42
g7860
Vinsert
p8456
I43
VSimpleType: FieldInitializationReport
p8457
tp8458
I1
s(Vinsert
p8459
I42
VSimpleName: enableAccess
p8460
Vinsert
p8461
I7
VAssignment: =
p8462
tp8463
I2
s(g7441
I42
g7442
Vinsert
p8464
I39
VPrimitiveType: boolean
p8465
tp8466
I1
s(Vinsert
p8467
I42
VSimpleName: visitMethod
p8468
Vinsert
p8469
I43
VSimpleType: MethodVisitor
p8470
tp8471
I1
s(g1962
I42
g1963
Vinsert
p8472
I42
VSimpleName: run
p8473
tp8474
I1
s(g272
I42
g273
Vinsert
p8475
I45
VStringLiteral: "The MockMethodDispatcher must not be loaded manually but must be injected into the bootstrap class loader."
p8476
tp8477
I1
s(Vinsert
p8478
I42
VSimpleName: getClass
p8479
Vinsert
p8480
I43
VSimpleType: InstanceFactory
p8481
tp8482
I1
s(Vinsert
p8483
I42
VSimpleName: toThrow
p8484
Vinsert
p8485
I54
VTryStatement
p8486
tp8487
I1
s(Vinsert
p8488
I42
VSimpleName: hashCode
p8489
Vinsert
p8490
I42
VSimpleName: DummyInterface
p8491
tp8492
I1
s(Vinsert
p8493
I42
VSimpleName: cleansStackTrace
p8494
Vinsert
p8495
I43
VSimpleType: GlobalConfiguration
p8496
tp8497
I1
s(g2718
I42
g2719
Vinsert
p8498
I80
VMemberValuePair
p8499
tp8500
I1
s(g6043
I42
g6044
Vinsert
p8501
I22
VFieldAccess
p8502
tp8503
I1
s(Vinsert
p8504
I42
VSimpleName: concat
p8505
Vinsert
p8506
I42
VSimpleName: endsWith
p8507
tp8508
I1
s(Vinsert
p8509
I42
VSimpleName: getSimpleName
p8510
Vinsert
p8511
I42
VSimpleName: describe
p8512
tp8513
I1
s(g2336
I42
g2337
Vinsert
p8514
I43
VSimpleType: Reporter
p8515
tp8516
I1
s(Vinsert
p8517
I42
VSimpleName: getMessage
p8518
Vinsert
p8519
I45
VStringLiteral: "Should throw exception"
p8520
tp8521
I1
s(g5282
I42
g5283
Vinsert
p8522
I60
VVariableDeclarationStatement
p8523
tp8524
I1
s(g5549
I42
g5550
Vinsert
p8525
I32
VMethodInvocation
p8526
tp8527
I1
s(Vinsert
p8528
I42
VSimpleName: get
p8529
Vinsert
p8530
I42
VSimpleName: MockHandler
p8531
tp8532
I1
s(Vinsert
p8533
I42
VSimpleName: reportMatcher
p8534
Vinsert
p8535
I42
VSimpleName: state
p8536
tp8537
I1
s(g7129
I42
g7130
Vinsert
p8538
I42
VSimpleName: given
p8539
tp8540
I1
s(g36
I42
g37
Vinsert
p8541
I8
VBlock
p8542
tp8543
I5
s(g7200
I42
g7201
Vinsert
p8544
I8
VBlock
p8545
tp8546
I2
s(g463
I42
g464
Vinsert
p8547
I42
VSimpleName: MethodVisitor
p8548
tp8549
I1
s(g2677
I42
g2678
Vinsert
p8550
I40
VQualifiedName: sourceDebug.data
p8551
tp8552
I1
s(Vinsert
p8553
I42
VSimpleName: setNamingPolicy
p8554
Vinsert
p8555
I41
VReturnStatement
p8556
tp8557
I1
s(g8016
I42
g8017
Vinsert
p8558
I42
VSimpleName: InOrder
p8559
tp8560
I1
s(Vinsert
p8561
I42
VSimpleName: returnsNull
p8562
Vinsert
p8563
I42
VSimpleName: answer
p8564
tp8565
I1
s(Vinsert
p8566
I42
VSimpleName: objectReturningMethodNoArgs
p8567
Vinsert
p8568
I42
VSimpleName: isEqualTo
p8569
tp8570
I1
s(Vinsert
p8571
I42
VSimpleName: get
p8572
Vinsert
p8573
I45
VStringLiteral: "1 again"
p8574
tp8575
I1
s(g239
I42
g240
Vinsert
p8576
I21
VExpressionStatement
p8577
tp8578
I2
s(g1421
I42
g1422
Vinsert
p8579
I42
VSimpleName: DoesNothing
p8580
tp8581
I1
s(g4853
I42
g4854
Vinsert
p8582
I42
VSimpleName: T
p8583
tp8584
I1
s(g2657
I42
g2658
Vinsert
p8585
I44
VSingleVariableDeclaration
p8586
tp8587
I2
s(Vinsert
p8588
I42
VSimpleName: defaultValue
p8589
Vinsert
p8590
I57
VTypeLiteral
p8591
tp8592
I2
s(Vinsert
p8593
I42
VSimpleName: getType
p8594
Vinsert
p8595
I42
VSimpleName: mock
p8596
tp8597
I1
s(g2385
I42
g2386
Vinsert
p8598
I42
VSimpleName: TooLittleInvocations
p8599
tp8600
I2
s(g5159
I42
g5160
Vinsert
p8601
I43
VSimpleType: Object
p8602
tp8603
I1
s(Vinsert
p8604
I42
VSimpleName: emptyValueFor
p8605
Vinsert
p8606
I42
VSimpleName: LinkedHashSet
p8607
tp8608
I2
s(g7472
I42
g7473
Vinsert
p8609
I42
VSimpleName: validateType
p8610
tp8611
I1
s(g851
I42
g852
Vinsert
p8612
I83
VModifier: public
p8613
tp8614
I1
s(g488
I42
g489
Vinsert
p8615
I11
VCastExpression
p8616
tp8617
I1
s(g1357
I42
g1358
Vinsert
p8618
I39
VPrimitiveType: char
p8619
tp8620
I1
s(g2170
I42
g2171
Vinsert
p8621
I42
VSimpleName: mock
p8622
tp8623
I2
s(g5821
I42
g5822
Vinsert
p8624
I43
VSimpleType: T
p8625
tp8626
I2
s(g3699
I42
g3700
Vinsert
p8627
I42
VSimpleName: FriendlyReminderException
p8628
tp8629
I1
s(g1393
I42
g1394
Vinsert
p8630
I42
VSimpleName: InstanceOf
p8631
tp8632
I1
s(g1011
I42
g1012
Vinsert
p8633
I43
VSimpleType: Invocation
p8634
tp8635
I1
s(g5105
I42
g5106
Vinsert
p8636
I42
VSimpleName: Test
p8637
tp8638
I1
s(g1760
I42
g1761
Vinsert
p8639
I42
VSimpleName: InterceptionDispatcher
p8640
tp8641
I1
s(Vinsert
p8642
I42
VSimpleName: addInvocation
p8643
Vinsert
p8644
I42
VSimpleName: Object
p8645
tp8646
I1
s(Vinsert
p8647
I42
VSimpleName: withClassDefinition
p8648
Vinsert
p8649
I42
VSimpleName: ClassLoader
p8650
tp8651
I3
s(g5105
I42
g5106
Vinsert
p8652
I83
VModifier: public
p8653
tp8654
I1
s(Vinsert
p8655
I42
VSimpleName: getClassLoader
p8656
Vinsert
p8657
I42
VSimpleName: ConcurrentHashMap
p8658
tp8659
I1
s(g7195
I42
g7196
Vinsert
p8660
I42
VSimpleName: AtomicInteger
p8661
tp8662
I2
s(Vinsert
p8663
I42
VSimpleName: isFailed
p8664
Vinsert
p8665
I42
VSimpleName: numberOfThreads
p8666
tp8667
I2
s(g3807
I42
g3808
Vinsert
p8668
I42
VSimpleName: objenesis
p8669
tp8670
I1
s(g1388
I42
g1389
Vinsert
p8671
I42
VSimpleName: Assert
p8672
tp8673
I1
s(g1307
I42
g1308
Vinsert
p8674
I43
VSimpleType: GlobalConfiguration
p8675
tp8676
I1
s(Vinsert
p8677
I42
VSimpleName: getOpcode
p8678
Vinsert
p8679
I42
VSimpleName: size
p8680
tp8681
I1
s(Vinsert
p8682
I42
VSimpleName: isEmpty
p8683
Vinsert
p8684
I83
VModifier: private
p8685
tp8686
I4
s(g6815
I42
g6816
Vinsert
p8687
I21
VExpressionStatement
p8688
tp8689
I2
s(g1538
I42
g1539
Vinsert
p8690
I45
VStringLiteral: "Wanted 100 times:"
p8691
tp8692
I1
s(g5461
I42
g5462
Vinsert
p8693
I23
VFieldDeclaration
p8694
tp8695
I1
s(Vinsert
p8696
I42
VSimpleName: next
p8697
Vinsert
p8698
I42
VSimpleName: Invocation
p8699
tp8700
I2
s(g4817
I42
g4818
Vinsert
p8701
I42
VSimpleName: Invocation
p8702
tp8703
I2
s(g3924
I42
g3925
Vinsert
p8704
I43
VSimpleType: T
p8705
tp8706
I2
s(g7030
I42
g7031
Vinsert
p8707
I42
VSimpleName: reader
p8708
tp8709
I3
s(g7292
I42
g7293
Vinsert
p8710
I27
VInfixExpression: ||
p8711
tp8712
I1
s(g2733
I42
g2734
Vinsert
p8713
I14
VClassInstanceCreation
p8714
tp8715
I2
s(Vinsert
p8716
I42
VSimpleName: spiedInstance
p8717
Vinsert
p8718
I42
VSimpleName: mock
p8719
tp8720
I1
s(g1706
I42
g1707
Vinsert
p8721
I43
VSimpleType: Exception
p8722
tp8723
I1
s(Vinsert
p8724
I42
VSimpleName: toByteArray
p8725
Vinsert
p8726
I42
VSimpleName: generateClass
p8727
tp8728
I1
s(Vinsert
p8729
I42
VSimpleName: getTestName
p8730
Vinsert
p8731
I83
VModifier: public
p8732
tp8733
I1
s(g8337
I42
g8338
Vinsert
p8734
I21
VExpressionStatement
p8735
tp8736
I1
s(g3060
I42
g3061
Vinsert
p8737
I42
VSimpleName: isAndroidMockMakerRequired
p8738
tp8739
I1
s(g7854
I42
g7855
Vinsert
p8740
I42
VSimpleName: getAllInvocations
p8741
tp8742
I1
s(g7041
I42
g7042
Vinsert
p8743
I42
VSimpleName: Exceptions
p8744
tp8745
I1
s(Vinsert
p8746
I42
VSimpleName: contains
p8747
Vinsert
p8748
I42
VSimpleName: isVerified
p8749
tp8750
I1
s(g6421
I42
g6422
Vinsert
p8751
I42
VSimpleName: verifiers
p8752
tp8753
I1
s(g99
I42
g100
Vinsert
p8754
I78
VMarkerAnnotation
p8755
tp8756
I2
s(Vinsert
p8757
I42
VSimpleName: expectMessage
p8758
Vinsert
p8759
I43
VSimpleType: AbstractCollection
p8760
tp8761
I1
s(Vinsert
p8762
I42
VSimpleName: appendText
p8763
Vinsert
p8764
I43
VSimpleType: Object
p8765
tp8766
I1
s(g3725
I42
g3726
Vinsert
p8767
I41
VReturnStatement
p8768
tp8769
I1
s(Vinsert
p8770
I42
VSimpleName: getMessage
p8771
Vinsert
p8772
I42
VSimpleName: BulkBeanException
p8773
tp8774
I1
s(g5879
I42
g5880
Vinsert
p8775
I8
VBlock
p8776
tp8777
I5
s(Vinsert
p8778
I42
VSimpleName: canImposterise
p8779
Vinsert
p8780
I8
VBlock
p8781
tp8782
I2
s(g1939
I42
g1940
Vinsert
p8783
I43
VSimpleType: Enhancer
p8784
tp8785
I2
s(g7022
I42
g7023
Vinsert
p8786
I43
VSimpleType: AccessibilityChanger
p8787
tp8788
I6
s(g1039
I42
g1040
Vinsert
p8789
I42
VSimpleName: Object
p8790
tp8791
I1
s(g2472
I42
g2473
Vinsert
p8792
I8
VBlock
p8793
tp8794
I2
s(g3131
I42
g3132
Vinsert
p8795
I39
VPrimitiveType: void
p8796
tp8797
I1
s(Vinsert
p8798
I42
VSimpleName: arg
p8799
Vinsert
p8800
I7
VAssignment: =
p8801
tp8802
I1
s(Vinsert
p8803
I42
VSimpleName: instance
p8804
Vinsert
p8805
I74
VParameterizedType: CustomMatcher<?>
p8806
tp8807
I1
s(Vinsert
p8808
I42
VSimpleName: getDescriptor
p8809
Vinsert
p8810
I59
VVariableDeclarationFragment
p8811
tp8812
I1
s(g7287
I42
g7288
Vinsert
p8813
I42
VSimpleName: DefaultReturnValues
p8814
tp8815
I3
s(g5057
I42
g5058
Vinsert
p8816
I42
VSimpleName: realCause
p8817
tp8818
I2
s(g2090
I42
g2091
Vinsert
p8819
I85
VDimension
p8820
tp8821
I3
s(Vinsert
p8822
I42
VSimpleName: simpleMethod
p8823
Vinsert
p8824
I42
VSimpleName: unfinishedStubbingHere
p8825
tp8826
I1
s(Vinsert
p8827
I42
VSimpleName: mock
p8828
Vinsert
p8829
I43
VSimpleType: Invocation
p8830
tp8831
I1
s(g3436
I42
g3437
Vinsert
p8832
I42
VSimpleName: MethodProxy
p8833
tp8834
I2
s(g4763
I42
g4764
Vinsert
p8835
I32
VMethodInvocation
p8836
tp8837
I5
s(g3977
I42
g3978
Vinsert
p8838
I42
VSimpleName: IMethods
p8839
tp8840
I2
s(Vinsert
p8841
I42
VSimpleName: initMocks
p8842
Vinsert
p8843
I43
VSimpleType: ThrowingConstructor
p8844
tp8845
I2
s(Vinsert
p8846
I42
VSimpleName: get
p8847
Vinsert
p8848
I42
VSimpleName: getRegisteredInvocations
p8849
tp8850
I1
s(g2261
I42
g2262
Vinsert
p8851
I54
VTryStatement
p8852
tp8853
I2
s(Vinsert
p8854
I42
VSimpleName: getArguments
p8855
Vinsert
p8856
I42
VSimpleName: method
p8857
tp8858
I2
s(g2390
I42
g2391
Vinsert
p8859
I21
VExpressionStatement
p8860
tp8861
I2
s(Vinsert
p8862
I42
VSimpleName: charAt
p8863
Vinsert
p8864
I60
VVariableDeclarationStatement
p8865
tp8866
I3
s(Vinsert
p8867
I42
VSimpleName: answer
p8868
Vinsert
p8869
I42
VSimpleName: findMatch
p8870
tp8871
I1
s(g7682
I42
g7683
Vinsert
p8872
I22
VFieldAccess
p8873
tp8874
I2
s(Vinsert
p8875
I42
VSimpleName: size
p8876
Vinsert
p8877
I42
VSimpleName: ArrayList
p8878
tp8879
I2
s(g272
I42
g273
Vinsert
p8880
I45
VStringLiteral: "The dispatcher class was already loaded by: "
p8881
tp8882
I1
s(g1609
I42
g1610
Vinsert
p8883
I45
VStringLiteral: "Mockito"
p8884
tp8885
I1
s(g219
I42
g220
Vinsert
p8886
I85
VDimension
p8887
tp8888
I7
s(Vinsert
p8889
I42
VSimpleName: isTypeMockable
p8890
Vinsert
p8891
I42
VSimpleName: Observable
p8892
tp8893
I1
s(Vinsert
p8894
I42
VSimpleName: test
p8895
Vinsert
p8896
I42
VSimpleName: mock
p8897
tp8898
I1
s(Vinsert
p8899
I42
VSimpleName: getAnnotationEngine
p8900
Vinsert
p8901
I42
VSimpleName: Exception
p8902
tp8903
I1
s(g5180
I42
g5181
Vinsert
p8904
I8
VBlock
p8905
tp8906
I1
s(g2611
I42
g2612
Vinsert
p8907
I43
VSimpleType: MethodVisitor
p8908
tp8909
I1
s(g1780
I42
g1781
Vinsert
p8910
I32
VMethodInvocation
p8911
tp8912
I4
s(g4111
I42
g4112
Vinsert
p8913
I83
VModifier: static
p8914
tp8915
I1
s(Vinsert
p8916
I42
VSimpleName: createMock
p8917
Vinsert
p8918
I42
VSimpleName: factory
p8919
tp8920
I2
s(Vinsert
p8921
I42
VSimpleName: print
p8922
Vinsert
p8923
I31
VMethodDeclaration
p8924
tp8925
I2
s(Vinsert
p8926
I42
VSimpleName: get
p8927
Vinsert
p8928
I42
VSimpleName: types
p8929
tp8930
I2
s(Vinsert
p8931
I42
VSimpleName: foundUnstubbed
p8932
Vinsert
p8933
I42
VSimpleName: listener
p8934
tp8935
I2
s(g5752
I42
g5753
Vinsert
p8936
I39
VPrimitiveType: void
p8937
tp8938
I1
s(g1472
I42
g1473
Vinsert
p8939
I11
VCastExpression
p8940
tp8941
I3
s(g5164
I42
g5165
Vinsert
p8942
I43
VSimpleType: Throwable
p8943
tp8944
I2
s(g2162
I42
g2163
Vinsert
p8945
I42
VSimpleName: assertEquals
p8946
tp8947
I2
s(g61
I42
g62
Vinsert
p8948
I43
VSimpleType: Object
p8949
tp8950
I1
s(Vinsert
p8951
I42
VSimpleName: initMocks
p8952
Vinsert
p8953
I42
VSimpleName: candidate2
p8954
tp8955
I1
s(g4409
I42
g4410
Vinsert
p8956
I32
VMethodInvocation
p8957
tp8958
I6
s(g717
I42
g718
Vinsert
p8959
I42
VSimpleName: assertThat
p8960
tp8961
I1
s(g8854
I42
g8855
Vinsert
p8962
I42
VSimpleName: getMethod
p8963
tp8964
I1
s(Vinsert
p8965
I42
VSimpleName: matches
p8966
Vinsert
p8967
I42
VSimpleName: Number
p8968
tp8969
I2
s(g4848
I42
g4849
Vinsert
p8970
I42
VSimpleName: parentMockField
p8971
tp8972
I1
s(Vinsert
p8973
I42
VSimpleName: oneArg
p8974
Vinsert
p8975
I42
VSimpleName: is
p8976
tp8977
I1
s(Vinsert
p8978
I42
VSimpleName: run
p8979
Vinsert
p8980
I45
VStringLiteral: "foo"
p8981
tp8982
I3
s(g3318
I42
g3319
Vinsert
p8983
I21
VExpressionStatement
p8984
tp8985
I4
s(Vinsert
p8986
I42
VSimpleName: addAll
p8987
Vinsert
p8988
I61
VWhileStatement
p8989
tp8990
I1
s(Vinsert
p8991
I42
VSimpleName: getStackTrace
p8992
Vinsert
p8993
I42
VSimpleName: stackTraceHolder
p8994
tp8995
I1
s(g6116
I42
g6117
Vinsert
p8996
I42
VSimpleName: String
p8997
tp8998
I1
s(g5300
I42
g5301
Vinsert
p8999
I60
VVariableDeclarationStatement
p9000
tp9001
I3
s(g4163
I42
g4164
Vinsert
p9002
I42
VSimpleName: trace
p9003
tp9004
I2
s(Vinsert
p9005
I42
VSimpleName: when
p9006
Vinsert
p9007
I45
VStringLiteral: "Argument passed to when() is not a mock"
p9008
tp9009
I1
s(g5012
I42
g5013
Vinsert
p9010
I42
VSimpleName: isMock
p9011
tp9012
I1
s(g5151
I42
g5152
Vinsert
p9013
I42
VSimpleName: GenericsNest
p9014
tp9015
I2
s(Vinsert
p9016
I42
VSimpleName: oneArg
p9017
Vinsert
p9018
I42
VSimpleName: times
p9019
tp9020
I1
s(Vinsert
p9021
I42
VSimpleName: rawType
p9022
Vinsert
p9023
I42
VSimpleName: Class
p9024
tp9025
I2
s(Vinsert
p9026
I42
VSimpleName: resetOngoingStubbing
p9027
Vinsert
p9028
I43
VSimpleType: T
p9029
tp9030
I1
s(g6111
I42
g6112
Vinsert
p9031
I42
VSimpleName: Type
p9032
tp9033
I1
s(g7371
I42
g7372
Vinsert
p9034
I85
VDimension
p9035
tp9036
I1
s(Vinsert
p9037
I42
VSimpleName: append
p9038
Vinsert
p9039
I42
VSimpleName: what
p9040
tp9041
I3
s(g3293
I42
g3294
Vinsert
p9042
I43
VSimpleType: String
p9043
tp9044
I1
s(Vinsert
p9045
I42
VSimpleName: equals
p9046
Vinsert
p9047
I42
VSimpleName: SourceValue
p9048
tp9049
I2
s(g2227
I42
g2228
Vinsert
p9050
I83
VModifier: public
p9051
tp9052
I1
s(Vinsert
p9053
I42
VSimpleName: matches
p9054
Vinsert
p9055
I42
VSimpleName: Test
p9056
tp9057
I1
s(g1599
I42
g1600
Vinsert
p9058
I42
VSimpleName: Returns
p9059
tp9060
I1
s(g498
I42
g499
Vinsert
p9061
I14
VClassInstanceCreation
p9062
tp9063
I1
s(g2000
I42
g2001
Vinsert
p9064
I27
VInfixExpression: &&
p9065
tp9066
I1
s(g3606
I42
g3607
Vinsert
p9067
I14
VClassInstanceCreation
p9068
tp9069
I2
s(g5269
I42
g5270
Vinsert
p9070
I42
VSimpleName: MILLISECONDS
p9071
tp9072
I2
s(g5879
I42
g5880
Vinsert
p9073
I59
VVariableDeclarationFragment
p9074
tp9075
I7
s(g6013
I42
g6014
Vinsert
p9076
I42
VSimpleName: person
p9077
tp9078
I5
s(Vinsert
p9079
I42
VSimpleName: add
p9080
Vinsert
p9081
I40
VQualifiedName: settings.verboseMatchers
p9082
tp9083
I1
s(g1886
I42
g1887
Vinsert
p9084
I34
VNumberLiteral: 0
p9085
tp9086
I2
s(Vinsert
p9087
I42
VSimpleName: isEmpty
p9088
Vinsert
p9089
I27
VInfixExpression: ==
p9090
tp9091
I1
s(g5614
I42
g5615
Vinsert
p9092
I42
VSimpleName: verify
p9093
tp9094
I2
s(Vinsert
p9095
I42
VSimpleName: getClass
p9096
Vinsert
p9097
I42
VSimpleName: e
p9098
tp9099
I2
s(Vinsert
p9100
I42
VSimpleName: contains
p9101
Vinsert
p9102
I42
VSimpleName: keySet
p9103
tp9104
I1
s(Vinsert
p9105
I42
VSimpleName: putIfAbsent
p9106
Vinsert
p9107
I42
VSimpleName: INSTANCE
p9108
tp9109
I1
s(g2046
I42
g2047
Vinsert
p9110
I42
VSimpleName: methods
p9111
tp9112
I1
s(g3904
I42
g3905
Vinsert
p9113
I42
VSimpleName: configClass
p9114
tp9115
I2
s(g3083
I42
g3084
Vinsert
p9116
I2
VArrayAccess
p9117
tp9118
I2
s(g6647
I42
g6648
Vinsert
p9119
I21
VExpressionStatement
p9120
tp9121
I9
s(g1858
I42
g1859
Vinsert
p9122
I45
VStringLiteral: "should NOT be inside of:"
p9123
tp9124
I1
s(Vinsert
p9125
I42
VSimpleName: toReturn
p9126
Vinsert
p9127
I42
VSimpleName: stubVoid
p9128
tp9129
I1
s(g5067
I42
g5068
Vinsert
p9130
I8
VBlock
p9131
tp9132
I1
s(g5290
I42
g5291
Vinsert
p9133
I43
VSimpleType: ArrayList
p9134
tp9135
I1
s(g2152
I42
g2153
Vinsert
p9136
I42
VSimpleName: resetDefaultReturnValues
p9137
tp9138
I1
s(Vinsert
p9139
I42
VSimpleName: verify
p9140
Vinsert
p9141
I43
VSimpleType: InOrder
p9142
tp9143
I7
s(g3293
I42
g3294
Vinsert
p9144
I32
VMethodInvocation
p9145
tp9146
I2
s(Vinsert
p9147
I42
VSimpleName: pluralize
p9148
Vinsert
p9149
I14
VClassInstanceCreation
p9150
tp9151
I1
s(g5491
I42
g5492
Vinsert
p9152
I42
VSimpleName: Exception
p9153
tp9154
I1
s(g8372
I42
g8373
Vinsert
p9155
I34
VNumberLiteral: 1
p9156
tp9157
I1
s(g6786
I42
g6787
Vinsert
p9158
I42
VSimpleName: cl
p9159
tp9160
I1
s(g6276
I42
g6277
Vinsert
p9161
I42
VSimpleName: expected
p9162
tp9163
I2
s(g1775
I42
g1776
Vinsert
p9164
I76
VWildcardType: ? extends Throwable
p9165
tp9166
I1
s(g3856
I42
g3857
Vinsert
p9167
I21
VExpressionStatement
p9168
tp9169
I3
s(g4409
I42
g4410
Vinsert
p9170
I42
VSimpleName: newRow
p9171
tp9172
I2
s(g760
I42
g761
Vinsert
p9173
I42
VSimpleName: failure
p9174
tp9175
I2
s(g6379
I42
g6380
Vinsert
p9176
I32
VMethodInvocation
p9177
tp9178
I3
s(Vinsert
p9179
I42
VSimpleName: toTraceArray
p9180
Vinsert
p9181
I45
VStringLiteral: "org.test.MockitoSampleTest"
p9182
tp9183
I2
s(g7208
I42
g7209
Vinsert
p9184
I42
VSimpleName: loggerStub
p9185
tp9186
I1
s(g6587
I42
g6588
Vinsert
p9187
I60
VVariableDeclarationStatement
p9188
tp9189
I2
s(g7780
I42
g7781
Vinsert
p9190
I44
VSingleVariableDeclaration
p9191
tp9192
I1
s(g2998
I42
g2999
Vinsert
p9193
I8
VBlock
p9194
tp9195
I1
s(Vinsert
p9196
I42
VSimpleName: toInvocation
p9197
Vinsert
p9198
I42
VSimpleName: Test
p9199
tp9200
I4
s(g3131
I42
g3132
Vinsert
p9201
I42
VSimpleName: reportUsedStub
p9202
tp9203
I1
s(g6566
I42
g6567
Vinsert
p9204
I32
VMethodInvocation
p9205
tp9206
I8
s(Vinsert
p9207
I42
VSimpleName: getDescription
p9208
Vinsert
p9209
I31
VMethodDeclaration
p9210
tp9211
I2
s(g1204
I42
g1205
Vinsert
p9212
I43
VSimpleType: Timer
p9213
tp9214
I1
s(g618
I42
g619
Vinsert
p9215
I42
VSimpleName: mock
p9216
tp9217
I1
s(g1421
I42
g1422
Vinsert
p9218
I42
VSimpleName: should_fail_when_non_void_method_does_nothing
p9219
tp9220
I1
s(g4817
I42
g4818
Vinsert
p9221
I43
VSimpleType: InvocationBuilder
p9222
tp9223
I3
s(Vinsert
p9224
I42
VSimpleName: getBoolean
p9225
Vinsert
p9226
I8
VBlock
p9227
tp9228
I1
s(Vinsert
p9229
I42
VSimpleName: intercept
p9230
Vinsert
p9231
I43
VSimpleType: Object
p9232
tp9233
I1
s(Vinsert
p9234
I42
VSimpleName: addAllInterfaces
p9235
Vinsert
p9236
I24
VForStatement
p9237
tp9238
I1
s(Vinsert
p9239
I42
VSimpleName: toInvocation
p9240
Vinsert
p9241
I5
VArrayType: String[]
p9242
tp9243
I1
s(g6771
I42
g6772
Vinsert
p9244
I43
VSimpleType: ThreadSafeMockingProgress
p9245
tp9246
I1
s(Vinsert
p9247
I42
VSimpleName: get
p9248
Vinsert
p9249
I29
VJavadoc
p9250
tp9251
I1
s(Vinsert
p9252
I42
VSimpleName: createThrowResult
p9253
Vinsert
p9254
I42
VSimpleName: filterStub
p9255
tp9256
I1
s(g5665
I42
g5666
Vinsert
p9257
I42
VSimpleName: setAccessible
p9258
tp9259
I1
s(Vinsert
p9260
I42
VSimpleName: size
p9261
Vinsert
p9262
I39
VPrimitiveType: boolean
p9263
tp9264
I1
s(g5078
I42
g5079
Vinsert
p9265
I8
VBlock
p9266
tp9267
I5
s(g598
I42
g599
Vinsert
p9268
I42
VSimpleName: Object
p9269
tp9270
I1
s(Vinsert
p9271
I42
VSimpleName: extraInterfaces
p9272
Vinsert
p9273
I42
VSimpleName: mockitoMock
p9274
tp9275
I1
s(g1498
I42
g1499
Vinsert
p9276
I70
VEnhancedForStatement
p9277
tp9278
I1
s(g1619
I42
g1620
Vinsert
p9279
I83
VModifier: public
p9280
tp9281
I4
s(g5461
I42
g5462
Vinsert
p9282
I42
VSimpleName: getProperty
p9283
tp9284
I1
s(g5549
I42
g5550
Vinsert
p9285
I14
VClassInstanceCreation
p9286
tp9287
I1
s(g3460
I42
g3461
Vinsert
p9288
I42
VSimpleName: Description
p9289
tp9290
I1
s(g4479
I42
g4480
Vinsert
p9291
I42
VSimpleName: deCameled
p9292
tp9293
I1
s(g5421
I42
g5422
Vinsert
p9294
I45
VStringLiteral: "x"
p9295
tp9296
I3
s(g6535
I42
g6536
Vinsert
p9297
I32
VMethodInvocation
p9298
tp9299
I1
s(g7366
I42
g7367
Vinsert
p9300
I34
VNumberLiteral: 0
p9301
tp9302
I1
s(g1144
I42
g1145
Vinsert
p9303
I8
VBlock
p9304
tp9305
I3
s(Vinsert
p9306
I42
VSimpleName: getAllInvocations
p9307
Vinsert
p9308
I25
VIfStatement
p9309
tp9310
I1
s(g154
I42
g155
Vinsert
p9311
I43
VSimpleType: Type
p9312
tp9313
I1
s(g8205
I42
g8206
Vinsert
p9314
I42
VSimpleName: invokeSuper
p9315
tp9316
I2
s(g174
I42
g175
Vinsert
p9317
I43
VSimpleType: String
p9318
tp9319
I1
s(g377
I42
g378
Vinsert
p9320
I42
VSimpleName: Override
p9321
tp9322
I1
s(Vinsert
p9323
I42
VSimpleName: missingMethodMode
p9324
Vinsert
p9325
I42
VSimpleName: assertTrue
p9326
tp9327
I2
s(g3436
I42
g3437
Vinsert
p9328
I43
VSimpleType: SecurityException
p9329
tp9330
I1
s(g5169
I42
g5170
Vinsert
p9331
I14
VClassInstanceCreation
p9332
tp9333
I1
s(Vinsert
p9334
I42
VSimpleName: getName
p9335
Vinsert
p9336
I45
VStringLiteral: "Cannot instantiate field \u005c""
p9337
tp9338
I1
s(Vinsert
p9339
I42
VSimpleName: toIntWrapper
p9340
Vinsert
p9341
I42
VSimpleName: toIntPrimitive
p9342
tp9343
I1
s(Vinsert
p9344
I42
VSimpleName: apply
p9345
Vinsert
p9346
I42
VSimpleName: UnsupportedOperationException
p9347
tp9348
I1
s(Vinsert
p9349
I42
VSimpleName: oneArg
p9350
Vinsert
p9351
I45
VStringLiteral: "6"
p9352
tp9353
I1
s(Vinsert
p9354
I42
VSimpleName: getType
p9355
Vinsert
p9356
I42
VSimpleName: type
p9357
tp9358
I1
s(g7564
I42
g7565
Vinsert
p9359
I59
VVariableDeclarationFragment
p9360
tp9361
I1
s(g5665
I42
g5666
Vinsert
p9362
I42
VSimpleName: getDeclaredField
p9363
tp9364
I1
s(g6217
I42
g6218
Vinsert
p9365
I43
VSimpleType: Cloneable
p9366
tp9367
I1
s(g214
I42
g215
Vinsert
p9368
I45
VStringLiteral: "answered"
p9369
tp9370
I1
s(g3267
I42
g3268
Vinsert
p9371
I59
VVariableDeclarationFragment
p9372
tp9373
I1
s(Vinsert
p9374
I42
VSimpleName: getAddress
p9375
Vinsert
p9376
I42
VSimpleName: getAddress
p9377
tp9378
I1
s(g6786
I42
g6787
Vinsert
p9379
I42
VSimpleName: ClassLoader
p9380
tp9381
I1
s(Vinsert
p9382
I42
VSimpleName: getName
p9383
Vinsert
p9384
I42
VSimpleName: ArgumentCaptor
p9385
tp9386
I1
s(g5403
I42
g5404
Vinsert
p9387
I42
VSimpleName: Dummy
p9388
tp9389
I1
s(Vinsert
p9390
I42
VSimpleName: getClass
p9391
Vinsert
p9392
I60
VVariableDeclarationStatement
p9393
tp9394
I16
s(Vinsert
p9395
I42
VSimpleName: getClass
p9396
Vinsert
p9397
I43
VSimpleType: InvocationListener
p9398
tp9399
I1
s(g277
I42
g278
Vinsert
p9400
I40
VQualifiedName: PropertyAndSetterInjection.FieldTypeAndNameComparator
p9401
tp9402
I1
s(Vinsert
p9403
I42
VSimpleName: withStringVarargs
p9404
Vinsert
p9405
I42
VSimpleName: withStringVarargs
p9406
tp9407
I1
s(Vinsert
p9408
I42
VSimpleName: setCallbackType
p9409
Vinsert
p9410
I8
VBlock
p9411
tp9412
I1
s(Vinsert
p9413
I42
VSimpleName: withSettings
p9414
Vinsert
p9415
I39
VPrimitiveType: void
p9416
tp9417
I2
s(g6247
I42
g6248
Vinsert
p9418
I42
VSimpleName: objects
p9419
tp9420
I1
s(g3252
I42
g3253
Vinsert
p9421
I42
VSimpleName: MethodInfo
p9422
tp9423
I1
s(Vinsert
p9424
I42
VSimpleName: newInstance
p9425
Vinsert
p9426
I25
VIfStatement
p9427
tp9428
I1
s(Vinsert
p9429
I42
VSimpleName: isEmpty
p9430
Vinsert
p9431
I42
VSimpleName: mock
p9432
tp9433
I3
s(Vinsert
p9434
I42
VSimpleName: copyToRealObject
p9435
Vinsert
p9436
I43
VSimpleType: SomeObject
p9437
tp9438
I1
s(g4991
I42
g4992
Vinsert
p9439
I32
VMethodInvocation
p9440
tp9441
I8
s(g9053
I42
g9054
Vinsert
p9442
I42
VSimpleName: assertTrue
p9443
tp9444
I1
s(g1234
I42
g1235
Vinsert
p9445
I8
VBlock
p9446
tp9447
I3
s(g4425
I42
g4426
Vinsert
p9448
I14
VClassInstanceCreation
p9449
tp9450
I2
s(g239
I42
g240
Vinsert
p9451
I42
VSimpleName: MockUtil
p9452
tp9453
I1
s(g9390
I42
g9391
Vinsert
p9454
I42
VSimpleName: IMockitoConfiguration
p9455
tp9456
I1
s(g7577
I42
g7578
Vinsert
p9457
I43
VSimpleType: List
p9458
tp9459
I2
s(Vinsert
p9460
I42
VSimpleName: getName
p9461
Vinsert
p9462
I45
VStringLiteral: "java."
p9463
tp9464
I1
s(Vinsert
p9465
I42
VSimpleName: equals
p9466
Vinsert
p9467
I42
VSimpleName: assertFalse
p9468
tp9469
I4
s(g61
I42
g62
Vinsert
p9470
I21
VExpressionStatement
p9471
tp9472
I7
s(Vinsert
p9473
I42
VSimpleName: setType
p9474
Vinsert
p9475
I59
VVariableDeclarationFragment
p9476
tp9477
I1
s(Vinsert
p9478
I42
VSimpleName: simpleMethod
p9479
Vinsert
p9480
I42
VSimpleName: when
p9481
tp9482
I30
s(Vinsert
p9483
I42
VSimpleName: filter
p9484
Vinsert
p9485
I74
VParameterizedType: LinkedList<Invocation>
p9486
tp9487
I1
s(g2621
I42
g2622
Vinsert
p9488
I42
VSimpleName: better_toString_for_matchers
p9489
tp9490
I1
s(Vinsert
p9491
I42
VSimpleName: toMultilineString
p9492
Vinsert
p9493
I52
VThisExpression
p9494
tp9495
I2
s(g8136
I42
g8137
Vinsert
p9496
I42
VSimpleName: toReturn
p9497
tp9498
I1
s(Vinsert
p9499
I42
VSimpleName: serializable
p9500
Vinsert
p9501
I43
VSimpleType: AlreadySerializable
p9502
tp9503
I2
s(Vinsert
p9504
I42
VSimpleName: getMockName
p9505
Vinsert
p9506
I45
VStringLiteral: "Mockito couldn't inject mock dependency '"
p9507
tp9508
I1
s(g3421
I42
g3422
Vinsert
p9509
I66
VTextElement:  The type to lookup the default value
p9510
tp9511
I1
s(g2390
I42
g2391
Vinsert
p9512
I43
VSimpleType: String
p9513
tp9514
I5
s(Vinsert
p9515
I42
VSimpleName: newInstance
p9516
Vinsert
p9517
I2
VArrayAccess
p9518
tp9519
I1
s(Vinsert
p9520
I42
VSimpleName: isMock
p9521
Vinsert
p9522
I23
VFieldDeclaration
p9523
tp9524
I1
s(g1184
I42
g1185
Vinsert
p9525
I42
VSimpleName: clear
p9526
tp9527
I1
s(g8716
I42
g8717
Vinsert
p9528
I57
VTypeLiteral
p9529
tp9530
I1
s(g5052
I42
g5053
Vinsert
p9531
I45
VStringLiteral: "  class to imposterize : '"
p9532
tp9533
I1
s(g1805
I42
g1806
Vinsert
p9534
I42
VSimpleName: registered
p9535
tp9536
I1
s(g119
I42
g120
Vinsert
p9537
I42
VSimpleName: invocationForStubbing
p9538
tp9539
I1
s(g5138
I42
g5139
Vinsert
p9540
I27
VInfixExpression: ==
p9541
tp9542
I1
s(Vinsert
p9543
I42
VSimpleName: captureFrom
p9544
Vinsert
p9545
I42
VSimpleName: actualMatcher
p9546
tp9547
I2
s(g2152
I42
g2153
Vinsert
p9548
I32
VMethodInvocation
p9549
tp9550
I2
s(g8011
I42
g8012
Vinsert
p9551
I42
VSimpleName: unused
p9552
tp9553
I1
s(g2374
I42
g2375
Vinsert
p9554
I39
VPrimitiveType: boolean
p9555
tp9556
I1
s(g6948
I42
g6949
Vinsert
p9557
I42
VSimpleName: assertNotSame
p9558
tp9559
I1
s(Vinsert
p9560
I42
VSimpleName: doFun
p9561
Vinsert
p9562
I42
VSimpleName: captor
p9563
tp9564
I1
s(g3919
I42
g3920
Vinsert
p9565
I83
VModifier: public
p9566
tp9567
I1
s(g5690
I42
g5691
Vinsert
p9568
I42
VSimpleName: Primitives
p9569
tp9570
I5
s(Vinsert
p9571
I42
VSimpleName: strict
p9572
Vinsert
p9573
I83
VModifier: public
p9574
tp9575
I2
s(Vinsert
p9576
I42
VSimpleName: getTreshhold
p9577
Vinsert
p9578
I42
VSimpleName: atLeastOnce
p9579
tp9580
I1
s(g8176
I42
g8177
Vinsert
p9581
I42
VSimpleName: foundUnstubbed
p9582
tp9583
I1
s(Vinsert
p9584
I42
VSimpleName: argThat
p9585
Vinsert
p9586
I43
VSimpleType: Object
p9587
tp9588
I1
s(g3426
I42
g3427
Vinsert
p9589
I32
VMethodInvocation
p9590
tp9591
I17
s(g5636
I42
g5637
Vinsert
p9592
I42
VSimpleName: stub
p9593
tp9594
I1
s(g6815
I42
g6816
Vinsert
p9595
I78
VMarkerAnnotation
p9596
tp9597
I3
s(g3229
I42
g3230
Vinsert
p9598
I21
VExpressionStatement
p9599
tp9600
I1
s(Vinsert
p9601
I42
VSimpleName: returnMap
p9602
Vinsert
p9603
I43
VSimpleType: V
p9604
tp9605
I1
s(Vinsert
p9606
I42
VSimpleName: toInvocation
p9607
Vinsert
p9608
I43
VSimpleType: List
p9609
tp9610
I2
s(g199
I42
g200
Vinsert
p9611
I42
VSimpleName: call
p9612
tp9613
I1
s(Vinsert
p9614
I42
VSimpleName: description
p9615
Vinsert
p9616
I42
VSimpleName: Override
p9617
tp9618
I11
s(g7451
I42
g7452
Vinsert
p9619
I27
VInfixExpression: &&
p9620
tp9621
I1
s(g7337
I42
g7338
Vinsert
p9622
I43
VSimpleType: InvocationOnMock
p9623
tp9624
I1
s(g4624
I42
g4625
Vinsert
p9625
I42
VSimpleName: run
p9626
tp9627
I2
s(g1264
I42
g1265
Vinsert
p9628
I42
VSimpleName: Mockito
p9629
tp9630
I1
s(g1838
I42
g1839
Vinsert
p9631
I44
VSingleVariableDeclaration
p9632
tp9633
I1
s(g1
I42
g2
Vinsert
p9634
I45
VStringLiteral: "At the moment, you cannot provide your own implementations that class."
p9635
tp9636
I1
s(g2743
I42
g2744
Vinsert
p9637
I42
VSimpleName: ArgumentMatchingTool
p9638
tp9639
I1
s(g6614
I42
g6615
Vinsert
p9640
I42
VSimpleName: isOut
p9641
tp9642
I1
s(g2095
I42
g2096
Vinsert
p9643
I39
VPrimitiveType: boolean
p9644
tp9645
I1
s(g6841
I42
g6842
Vinsert
p9646
I34
VNumberLiteral: 1
p9647
tp9648
I1
s(Vinsert
p9649
I42
VSimpleName: public_method
p9650
Vinsert
p9651
I21
VExpressionStatement
p9652
tp9653
I1
s(g287
I42
g288
Vinsert
p9654
I42
VSimpleName: Plugins
p9655
tp9656
I1
s(g6024
I42
g6025
Vinsert
p9657
I42
VSimpleName: ReturnsEmptyValues
p9658
tp9659
I1
s(g1977
I42
g1978
Vinsert
p9660
I42
VSimpleName: shouldPrintMethodNameAndArguments
p9661
tp9662
I1
s(g6143
I42
g6144
Vinsert
p9663
I42
VSimpleName: mockitoState
p9664
tp9665
I1
s(Vinsert
p9666
I42
VSimpleName: get
p9667
Vinsert
p9668
I42
VSimpleName: IllegalAccessException
p9669
tp9670
I1
s(g3580
I42
g3581
Vinsert
p9671
I7
VAssignment: =
p9672
tp9673
I2
s(g6846
I42
g6847
Vinsert
p9674
I42
VSimpleName: ClassEmitter
p9675
tp9676
I2
s(g9229
I42
g9230
Vinsert
p9677
I42
VSimpleName: ret
p9678
tp9679
I1
s(g8250
I42
g8251
Vinsert
p9680
I83
VModifier: final
p9681
tp9682
I3
s(g21
I42
g22
Vinsert
p9683
I32
VMethodInvocation
p9684
tp9685
I1
s(g6677
I42
g6678
Vinsert
p9686
I43
VSimpleType: Class
p9687
tp9688
I1
s(g3664
I42
g3665
Vinsert
p9689
I42
VSimpleName: createInvocationWithStubbingLocation
p9690
tp9691
I1
s(Vinsert
p9692
I42
VSimpleName: simpleMethod
p9693
Vinsert
p9694
I34
VNumberLiteral: 4
p9695
tp9696
I1
s(g6582
I42
g6583
Vinsert
p9697
I42
VSimpleName: appendWarnings
p9698
tp9699
I1
s(g1493
I42
g1494
Vinsert
p9700
I42
VSimpleName: reporter
p9701
tp9702
I3
s(g1848
I42
g1849
Vinsert
p9703
I43
VSimpleType: ClassReader
p9704
tp9705
I1
s(Vinsert
p9706
I42
VSimpleName: toString
p9707
Vinsert
p9708
I42
VSimpleName: StringDescription
p9709
tp9710
I2
s(Vinsert
p9711
I42
VSimpleName: simpleMethod
p9712
Vinsert
p9713
I42
VSimpleName: unused_stubbing_1
p9714
tp9715
I1
s(Vinsert
p9716
I42
VSimpleName: return_value
p9717
Vinsert
p9718
I42
VSimpleName: sig
p9719
tp9720
I1
s(Vinsert
p9721
I42
VSimpleName: getPollingPeriod
p9722
Vinsert
p9723
I42
VSimpleName: pollingPeriod
p9724
tp9725
I2
s(g3126
I42
g3127
Vinsert
p9726
I42
VSimpleName: Override
p9727
tp9728
I2
s(Vinsert
p9729
I42
VSimpleName: simpleMethod
p9730
Vinsert
p9731
I42
VSimpleName: atLeastOnce
p9732
tp9733
I4
s(Vinsert
p9734
I42
VSimpleName: getMessage
p9735
Vinsert
p9736
I42
VSimpleName: ioe
p9737
tp9738
I1
s(Vinsert
p9739
I42
VSimpleName: getMessage
p9740
Vinsert
p9741
I44
VSingleVariableDeclaration
p9742
tp9743
I35
s(g7446
I42
g7447
Vinsert
p9744
I42
VSimpleName: printer
p9745
tp9746
I2
s(Vinsert
p9747
I42
VSimpleName: getReportedThrowable
p9748
Vinsert
p9749
I8
VBlock
p9750
tp9751
I1
s(g5744
I42
g5745
Vinsert
p9752
I54
VTryStatement
p9753
tp9754
I1
s(g2374
I42
g2375
Vinsert
p9755
I42
VSimpleName: ArgumentMatcher
p9756
tp9757
I1
s(Vinsert
p9758
I42
VSimpleName: extraInterfaces
p9759
Vinsert
p9760
I42
VSimpleName: annotation
p9761
tp9762
I1
s(g6435
I42
g6436
Vinsert
p9763
I42
VSimpleName: fails
p9764
tp9765
I1
s(g7836
I42
g7837
Vinsert
p9766
I42
VSimpleName: assertThat
p9767
tp9768
I1
s(g778
I42
g779
Vinsert
p9769
I39
VPrimitiveType: void
p9770
tp9771
I1
s(g6973
I42
g6974
Vinsert
p9772
I43
VSimpleType: TooLittleInvocations
p9773
tp9774
I1
s(g2557
I42
g2558
Vinsert
p9775
I42
VSimpleName: Commit
p9776
tp9777
I1
s(g9408
I42
g9409
Vinsert
p9778
I32
VMethodInvocation
p9779
tp9780
I2
s(Vinsert
p9781
I42
VSimpleName: println
p9782
Vinsert
p9783
I83
VModifier: static
p9784
tp9785
I1
s(g8504
I42
g8505
Vinsert
p9786
I41
VReturnStatement
p9787
tp9788
I1
s(Vinsert
p9789
I42
VSimpleName: or
p9790
Vinsert
p9791
I42
VSimpleName: getMessage
p9792
tp9793
I1
s(g7030
I42
g7031
Vinsert
p9794
I45
VStringLiteral: "this is my message to you"
p9795
tp9796
I3
s(g8353
I42
g8354
Vinsert
p9797
I42
VSimpleName: compatibleMock
p9798
tp9799
I1
s(g262
I42
g263
Vinsert
p9800
I42
VSimpleName: ParameterizedType
p9801
tp9802
I3
s(g2113
I42
g2114
Vinsert
p9803
I43
VSimpleType: HasStackTrace
p9804
tp9805
I1
s(g1302
I42
g1303
Vinsert
p9806
I32
VMethodInvocation
p9807
tp9808
I4
s(g8894
I42
g8895
Vinsert
p9809
I21
VExpressionStatement
p9810
tp9811
I1
s(g3055
I42
g3056
Vinsert
p9812
I42
VSimpleName: Object
p9813
tp9814
I1
s(g9408
I42
g9409
Vinsert
p9815
I43
VSimpleType: MethodInterceptorFilter
p9816
tp9817
I1
s(g783
I42
g784
Vinsert
p9818
I42
VSimpleName: createdMocks
p9819
tp9820
I1
s(Vinsert
p9821
I42
VSimpleName: doPrivileged
p9822
Vinsert
p9823
I8
VBlock
p9824
tp9825
I1
s(g6457
I42
g6458
Vinsert
p9826
I43
VSimpleType: JUnit44RunnerImpl
p9827
tp9828
I1
s(g2796
I42
g2797
Vinsert
p9829
I32
VMethodInvocation
p9830
tp9831
I3
s(Vinsert
p9832
I42
VSimpleName: defaultAnswer
p9833
Vinsert
p9834
I43
VSimpleType: T
p9835
tp9836
I1
s(g31
I42
g32
Vinsert
p9837
I43
VSimpleType: Exception
p9838
tp9839
I2
s(g332
I42
g333
Vinsert
p9840
I42
VSimpleName: assertValue
p9841
tp9842
I1
s(g8478
I42
g8479
Vinsert
p9843
I45
VStringLiteral: "  instance creation by : '"
p9844
tp9845
I1
s(g2705
I42
g2706
Vinsert
p9846
I42
VSimpleName: sort
p9847
tp9848
I1
s(Vinsert
p9849
I42
VSimpleName: getStackTrace
p9850
Vinsert
p9851
I42
VSimpleName: filtered
p9852
tp9853
I1
s(g493
I42
g494
Vinsert
p9854
I8
VBlock
p9855
tp9856
I5
s(g1337
I42
g1338
Vinsert
p9857
I43
VSimpleType: Foo
p9858
tp9859
I2
s(Vinsert
p9860
I42
VSimpleName: getClass
p9861
Vinsert
p9862
I42
VSimpleName: mockMethod
p9863
tp9864
I1
s(Vinsert
p9865
I42
VSimpleName: asSingletonList
p9866
Vinsert
p9867
I42
VSimpleName: withSpy
p9868
tp9869
I2
s(Vinsert
p9870
I42
VSimpleName: length
p9871
Vinsert
p9872
I42
VSimpleName: sub
p9873
tp9874
I2
s(g2113
I42
g2114
Vinsert
p9875
I42
VSimpleName: wantedCount
p9876
tp9877
I1
s(g6725
I42
g6726
Vinsert
p9878
I39
VPrimitiveType: void
p9879
tp9880
I1
s(g1987
I42
g1988
Vinsert
p9881
I42
VSimpleName: WarningsCollector
p9882
tp9883
I1
s(Vinsert
p9884
I42
VSimpleName: addVoidMethodForThrowable
p9885
Vinsert
p9886
I42
VSimpleName: Exception
p9887
tp9888
I1
s(g6295
I42
g6296
Vinsert
p9889
I43
VSimpleType: List
p9890
tp9891
I4
s(g9849
I42
g9850
Vinsert
p9892
I1
VAnonymousClassDeclaration
p9893
tp9894
I1
s(g6077
I42
g6078
Vinsert
p9895
I42
VSimpleName: push
p9896
tp9897
I2
s(g8867
I42
g8868
Vinsert
p9898
I33
VNullLiteral
p9899
tp9900
I1
s(Vinsert
p9901
I42
VSimpleName: isPrivate
p9902
Vinsert
p9903
I43
VSimpleType: Class
p9904
tp9905
I1
s(g4446
I42
g4447
Vinsert
p9906
I42
VSimpleName: biggestConstructor
p9907
tp9908
I1
s(g8388
I42
g8389
Vinsert
p9909
I42
VSimpleName: lastBreak
p9910
tp9911
I1
s(Vinsert
p9912
I42
VSimpleName: mock
p9913
Vinsert
p9914
I42
VSimpleName: AClassWithPrivateNoArgConstructor
p9915
tp9916
I1
s(g3006
I42
g3007
Vinsert
p9917
I43
VSimpleType: IMethods
p9918
tp9919
I1
s(g8724
I42
g8725
Vinsert
p9920
I42
VSimpleName: transform
p9921
tp9922
I2
s(g7836
I42
g7837
Vinsert
p9923
I57
VTypeLiteral
p9924
tp9925
I1
s(g8729
I42
g8730
Vinsert
p9926
I42
VSimpleName: testFinished
p9927
tp9928
I1
s(Vinsert
p9929
I42
VSimpleName: thenReturn
p9930
Vinsert
p9931
I45
VStringLiteral: "huh?"
p9932
tp9933
I1
s(Vinsert
p9934
I42
VSimpleName: openStream
p9935
Vinsert
p9936
I42
VSimpleName: in
p9937
tp9938
I2
s(g1292
I42
g1293
Vinsert
p9939
I66
VTextElement:  <code>0</code>.
p9940
tp9941
I2
s(Vinsert
p9942
I42
VSimpleName: matches
p9943
Vinsert
p9944
I42
VSimpleName: lastMatching
p9945
tp9946
I1
s(g6786
I42
g6787
Vinsert
p9947
I42
VSimpleName: Exception
p9948
tp9949
I1
s(Vinsert
p9950
I42
VSimpleName: forDouble
p9951
Vinsert
p9952
I43
VSimpleType: Character
p9953
tp9954
I1
s(g1675
I42
g1676
Vinsert
p9955
I83
VModifier: public
p9956
tp9957
I2
s(g1219
I42
g1220
Vinsert
p9958
I43
VSimpleType: Stubbing
p9959
tp9960
I1
s(g2738
I42
g2739
Vinsert
p9961
I43
VSimpleType: Captor
p9962
tp9963
I1
s(g5744
I42
g5745
Vinsert
p9964
I43
VSimpleType: Throwable
p9965
tp9966
I1
s(Vinsert
p9967
I42
VSimpleName: appendText
p9968
Vinsert
p9969
I42
VSimpleName: Description
p9970
tp9971
I6
s(g4461
I42
g4462
Vinsert
p9972
I32
VMethodInvocation
p9973
tp9974
I4
s(g1179
I42
g1180
Vinsert
p9975
I45
VStringLiteral: "null listeners"
p9976
tp9977
I1
s(g8889
I42
g8890
Vinsert
p9978
I44
VSingleVariableDeclaration
p9979
tp9980
I1
s(g322
I42
g323
Vinsert
p9981
I74
VParameterizedType: FakeList<>
p9982
tp9983
I1
s(g4840
I42
g4841
Vinsert
p9984
I42
VSimpleName: StackTraceCleanerProvider
p9985
tp9986
I1
s(g6771
I42
g6772
Vinsert
p9987
I42
VSimpleName: debuggingInfo
p9988
tp9989
I1
s(Vinsert
p9990
I42
VSimpleName: or
p9991
Vinsert
p9992
I42
VSimpleName: ignoreAlso
p9993
tp9994
I1
s(g6890
I42
g6891
Vinsert
p9995
I32
VMethodInvocation
p9996
tp9997
I2
s(g3091
I42
g3092
Vinsert
p9998
I27
VInfixExpression: +
p9999
tp10000
I1
s(g4600
I42
g4601
Vinsert
p10001
I42
VSimpleName: assertTrue
p10002
tp10003
I1
s(g1553
I42
g1554
Vinsert
p10004
I42
VSimpleName: compile
p10005
tp10006
I1
s(g1
I42
g2
Vinsert
p10007
I42
VSimpleName: getClass
p10008
tp10009
I1
s(Vinsert
p10010
I42
VSimpleName: invokeSuper
p10011
Vinsert
p10012
I42
VSimpleName: InvocationOnMock
p10013
tp10014
I2
s(Vinsert
p10015
I42
VSimpleName: toInvocationMatcher
p10016
Vinsert
p10017
I42
VSimpleName: third
p10018
tp10019
I1
s(g1553
I42
g1554
Vinsert
p10020
I45
VStringLiteral: "1"
p10021
tp10022
I1
s(g4595
I42
g4596
Vinsert
p10023
I43
VSimpleType: VerificationMode
p10024
tp10025
I1
s(g1853
I42
g1854
Vinsert
p10026
I42
VSimpleName: accept
p10027
tp10028
I1
s(g8867
I42
g8868
Vinsert
p10029
I44
VSingleVariableDeclaration
p10030
tp10031
I1
s(Vinsert
p10032
I42
VSimpleName: writeText
p10033
Vinsert
p10034
I42
VSimpleName: when
p10035
tp10036
I1
s(Vinsert
p10037
I42
VSimpleName: simpleMethod
p10038
Vinsert
p10039
I34
VNumberLiteral: 3
p10040
tp10041
I2
s(g628
I42
g629
Vinsert
p10042
I27
VInfixExpression: !=
p10043
tp10044
I1
s(g7403
I42
g7404
Vinsert
p10045
I42
VSimpleName: IINC_INSN
p10046
tp10047
I1
s(Vinsert
p10048
I42
VSimpleName: isNull
p10049
Vinsert
p10050
I31
VMethodDeclaration
p10051
tp10052
I1
s(Vinsert
p10053
I42
VSimpleName: equals
p10054
Vinsert
p10055
I42
VSimpleName: assertTrue
p10056
tp10057
I1
s(g7248
I42
g7249
Vinsert
p10058
I42
VSimpleName: classInit
p10059
tp10060
I1
s(g9087
I42
g9088
Vinsert
p10061
I42
VSimpleName: warnings
p10062
tp10063
I3
s(g4125
I42
g4126
Vinsert
p10064
I40
VQualifiedName: org.mockito.Mockito
p10065
tp10066
I1
s(g6914
I42
g6915
Vinsert
p10067
I76
VWildcardType: ?
p10068
tp10069
I4
s(g6867
I42
g6868
Vinsert
p10070
I42
VSimpleName: isUnverified
p10071
tp10072
I1
s(Vinsert
p10073
I42
VSimpleName: getMessage
p10074
Vinsert
p10075
I43
VSimpleType: WantedButNotInvoked
p10076
tp10077
I1
s(g3326
I42
g3327
Vinsert
p10078
I83
VModifier: public
p10079
tp10080
I1
s(Vinsert
p10081
I42
VSimpleName: writeObject
p10082
Vinsert
p10083
I43
VSimpleType: ObjectOutputStream
p10084
tp10085
I4
s(Vinsert
p10086
I42
VSimpleName: should
p10087
Vinsert
p10088
I21
VExpressionStatement
p10089
tp10090
I6
s(Vinsert
p10091
I42
VSimpleName: getName
p10092
Vinsert
p10093
I42
VSimpleName: sig
p10094
tp10095
I2
s(g352
I42
g353
Vinsert
p10096
I8
VBlock
p10097
tp10098
I1
s(g405
I42
g406
Vinsert
p10099
I43
VSimpleType: Exception
p10100
tp10101
I1
s(g876
I42
g877
Vinsert
p10102
I38
VPrefixExpression: !
p10103
tp10104
I1
s(g2518
I42
g2519
Vinsert
p10105
I43
VSimpleType: C
p10106
tp10107
I1
s(g851
I42
g852
Vinsert
p10108
I8
VBlock
p10109
tp10110
I1
s(g8899
I42
g8900
Vinsert
p10111
I43
VSimpleType: Exception
p10112
tp10113
I1
s(g7030
I42
g7031
Vinsert
p10114
I32
VMethodInvocation
p10115
tp10116
I9
s(g8696
I42
g8697
Vinsert
p10117
I42
VSimpleName: method
p10118
tp10119
I2
s(g4451
I42
g4452
Vinsert
p10120
I43
VSimpleType: VerifcationInOrderFailed
p10121
tp10122
I1
s(g2677
I42
g2678
Vinsert
p10123
I25
VIfStatement
p10124
tp10125
I1
s(Vinsert
p10126
I42
VSimpleName: assertElapsedTimeIsMoreThan
p10127
Vinsert
p10128
I42
VSimpleName: callAsyncWithDelay
p10129
tp10130
I3
s(g4305
I42
g4306
Vinsert
p10131
I42
VSimpleName: invocation
p10132
tp10133
I1
s(g7638
I42
g7639
Vinsert
p10134
I54
VTryStatement
p10135
tp10136
I1
s(g4555
I42
g4556
Vinsert
p10137
I42
VSimpleName: HasPrimitiveMethods
p10138
tp10139
I2
s(g272
I42
g273
Vinsert
p10140
I42
VSimpleName: getClassLoader
p10141
tp10142
I1
s(g7395
I42
g7396
Vinsert
p10143
I5
VArrayType: String[]
p10144
tp10145
I2
s(g3909
I42
g3910
Vinsert
p10146
I42
VSimpleName: shouldNotPointStackTracesToRunnersCode
p10147
tp10148
I1
s(g8663
I42
g8664
Vinsert
p10149
I42
VSimpleName: t
p10150
tp10151
I1
s(g6815
I42
g6816
Vinsert
p10152
I31
VMethodDeclaration
p10153
tp10154
I1
s(g1660
I42
g1661
Vinsert
p10155
I40
VQualifiedName: java.lang.reflect.Modifier
p10156
tp10157
I2
s(g149
I42
g150
Vinsert
p10158
I42
VSimpleName: integerReturningMethod
p10159
tp10160
I1
s(g6935
I42
g6936
Vinsert
p10161
I43
VSimpleType: Message
p10162
tp10163
I1
s(Vinsert
p10164
I42
VSimpleName: getReturnedValue
p10165
Vinsert
p10166
I36
VParenthesizedExpression
p10167
tp10168
I1
s(g2503
I42
g2504
Vinsert
p10169
I42
VSimpleName: getName
p10170
tp10171
I1
s(g2390
I42
g2391
Vinsert
p10172
I42
VSimpleName: cv
p10173
tp10174
I1
s(Vinsert
p10175
I42
VSimpleName: getClass
p10176
Vinsert
p10177
I52
VThisExpression
p10178
tp10179
I7
s(Vinsert
p10180
I42
VSimpleName: forName
p10181
Vinsert
p10182
I42
VSimpleName: actual
p10183
tp10184
I1
s(Vinsert
p10185
I42
VSimpleName: of
p10186
Vinsert
p10187
I42
VSimpleName: toString
p10188
tp10189
I3
s(g2677
I42
g2678
Vinsert
p10190
I8
VBlock
p10191
tp10192
I1
s(g9139
I42
g9140
Vinsert
p10193
I43
VSimpleType: VerificationMode
p10194
tp10195
I3
s(g5916
I42
g5917
Vinsert
p10196
I9
VBooleanLiteral: true
p10197
tp10198
I1
s(g3601
I42
g3602
Vinsert
p10199
I57
VTypeLiteral
p10200
tp10201
I1
s(g4466
I42
g4467
Vinsert
p10202
I42
VSimpleName: mock
p10203
tp10204
I2
s(g8921
I42
g8922
Vinsert
p10205
I43
VSimpleType: Message
p10206
tp10207
I5
s(g385
I42
g386
Vinsert
p10208
I43
VSimpleType: Issue
p10209
tp10210
I1
s(g7825
I42
g7826
Vinsert
p10211
I59
VVariableDeclarationFragment
p10212
tp10213
I2
s(g6924
I42
g6925
Vinsert
p10214
I42
VSimpleName: ExposedInvocation
p10215
tp10216
I1
s(g3725
I42
g3726
Vinsert
p10217
I42
VSimpleName: Set
p10218
tp10219
I1
s(g5164
I42
g5165
Vinsert
p10220
I8
VBlock
p10221
tp10222
I2
s(g8867
I42
g8868
Vinsert
p10223
I43
VSimpleType: Invocation
p10224
tp10225
I1
s(Vinsert
p10226
I42
VSimpleName: method
p10227
Vinsert
p10228
I78
VMarkerAnnotation
p10229
tp10230
I1
s(g3408
I42
g3409
Vinsert
p10231
I42
VSimpleName: IArgumentMatcher
p10232
tp10233
I1
s(Vinsert
p10234
I42
VSimpleName: simpleMethod
p10235
Vinsert
p10236
I42
VSimpleName: IllegalArgumentException
p10237
tp10238
I2
s(g906
I42
g907
Vinsert
p10239
I25
VIfStatement
p10240
tp10241
I2
s(Vinsert
p10242
I42
VSimpleName: initMocks
p10243
Vinsert
p10244
I42
VSimpleName: DaoB
p10245
tp10246
I1
s(Vinsert
p10247
I42
VSimpleName: getClass
p10248
Vinsert
p10249
I9
VBooleanLiteral: true
p10250
tp10251
I3
s(Vinsert
p10252
I42
VSimpleName: isNotNull
p10253
Vinsert
p10254
I42
VSimpleName: observer
p10255
tp10256
I2
s(Vinsert
p10257
I42
VSimpleName: simpleMethod
p10258
Vinsert
p10259
I43
VSimpleType: IllegalStateException
p10260
tp10261
I1
s(g8372
I42
g8373
Vinsert
p10262
I43
VSimpleType: List
p10263
tp10264
I2
s(Vinsert
p10265
I42
VSimpleName: mock
p10266
Vinsert
p10267
I42
VSimpleName: Class
p10268
tp10269
I2
s(g5752
I42
g5753
Vinsert
p10270
I78
VMarkerAnnotation
p10271
tp10272
I1
s(g4226
I42
g4227
Vinsert
p10273
I42
VSimpleName: out
p10274
tp10275
I2
s(g901
I42
g902
Vinsert
p10276
I44
VSingleVariableDeclaration
p10277
tp10278
I2
s(Vinsert
p10279
I42
VSimpleName: verify
p10280
Vinsert
p10281
I45
VStringLiteral: "listener1"
p10282
tp10283
I1
s(g4952
I42
g4953
Vinsert
p10284
I41
VReturnStatement
p10285
tp10286
I1
s(g5151
I42
g5152
Vinsert
p10287
I42
VSimpleName: Test
p10288
tp10289
I1
s(g9832
I42
g9833
Vinsert
p10290
I43
VSimpleType: Answer
p10291
tp10292
I1
s(g395
I42
g396
Vinsert
p10293
I42
VSimpleName: copyWithVerificationMode
p10294
tp10295
I1
s(g831
I42
g832
Vinsert
p10296
I42
VSimpleName: strictMode
p10297
tp10298
I1
s(g5986
I42
g5987
Vinsert
p10299
I43
VSimpleType: InvocationMatcher
p10300
tp10301
I1
s(g5022
I42
g5023
Vinsert
p10302
I42
VSimpleName: assertThat
p10303
tp10304
I1
s(g8798
I42
g8799
Vinsert
p10305
I8
VBlock
p10306
tp10307
I2
s(g7939
I42
g7940
Vinsert
p10308
I42
VSimpleName: sameMethods
p10309
tp10310
I1
s(Vinsert
p10311
I42
VSimpleName: getList
p10312
Vinsert
p10313
I32
VMethodInvocation
p10314
tp10315
I8
s(g7356
I42
g7357
Vinsert
p10316
I1
VAnonymousClassDeclaration
p10317
tp10318
I3
s(Vinsert
p10319
I42
VSimpleName: read
p10320
Vinsert
p10321
I21
VExpressionStatement
p10322
tp10323
I1
s(Vinsert
p10324
I42
VSimpleName: getInvocationContainer
p10325
Vinsert
p10326
I59
VVariableDeclarationFragment
p10327
tp10328
I2
s(g2075
I42
g2076
Vinsert
p10329
I42
VSimpleName: Test
p10330
tp10331
I5
s(g1543
I42
g1544
Vinsert
p10332
I42
VSimpleName: toBeThrown
p10333
tp10334
I1
s(g3313
I42
g3314
Vinsert
p10335
I42
VSimpleName: foo
p10336
tp10337
I1
s(g9739
I42
g9740
Vinsert
p10338
I83
VModifier: public
p10339
tp10340
I5
s(Vinsert
p10341
I42
VSimpleName: toString
p10342
Vinsert
p10343
I42
VSimpleName: test
p10344
tp10345
I1
s(Vinsert
p10346
I42
VSimpleName: iMethodsReturningMethod
p10347
Vinsert
p10348
I42
VSimpleName: reset
p10349
tp10350
I1
s(g6446
I42
g6447
Vinsert
p10351
I42
VSimpleName: assertThat
p10352
tp10353
I2
s(Vinsert
p10354
I42
VSimpleName: reportMatcher
p10355
Vinsert
p10356
I39
VPrimitiveType: short
p10357
tp10358
I1
s(g1129
I42
g1130
Vinsert
p10359
I43
VSimpleType: OngoingVerifyingMode
p10360
tp10361
I1
s(g4952
I42
g4953
Vinsert
p10362
I42
VSimpleName: copySelfWithNewVerificationMode
p10363
tp10364
I1
s(g2631
I42
g2632
Vinsert
p10365
I32
VMethodInvocation
p10366
tp10367
I1
s(Vinsert
p10368
I42
VSimpleName: entrySet
p10369
Vinsert
p10370
I70
VEnhancedForStatement
p10371
tp10372
I1
s(g3191
I42
g3192
Vinsert
p10373
I42
VSimpleName: assertEquals
p10374
tp10375
I2
s(g971
I42
g972
Vinsert
p10376
I45
VStringLiteral: "["
p10377
tp10378
I1
s(g7867
I42
g7868
Vinsert
p10379
I32
VMethodInvocation
p10380
tp10381
I79
s(g5159
I42
g5160
Vinsert
p10382
I39
VPrimitiveType: boolean
p10383
tp10384
I1
s(Vinsert
p10385
I42
VSimpleName: compare
p10386
Vinsert
p10387
I42
VSimpleName: i
p10388
tp10389
I1
s(g3885
I42
g3886
Vinsert
p10390
I42
VSimpleName: foo
p10391
tp10392
I2
s(Vinsert
p10393
I42
VSimpleName: oneArg
p10394
Vinsert
p10395
I34
VNumberLiteral: 0
p10396
tp10397
I1
s(g1901
I42
g1902
Vinsert
p10398
I60
VVariableDeclarationStatement
p10399
tp10400
I1
s(Vinsert
p10401
I42
VSimpleName: getDeclaredFields
p10402
Vinsert
p10403
I42
VSimpleName: mock
p10404
tp10405
I1
s(g5810
I42
g5811
Vinsert
p10406
I43
VSimpleType: DummyClassForTests
p10407
tp10408
I2
s(g2374
I42
g2375
Vinsert
p10409
I31
VMethodDeclaration
p10410
tp10411
I2
s(g1523
I42
g1524
Vinsert
p10412
I39
VPrimitiveType: void
p10413
tp10414
I2
s(Vinsert
p10415
I42
VSimpleName: getDeclaredFields
p10416
Vinsert
p10417
I42
VSimpleName: Object
p10418
tp10419
I3
s(g3293
I42
g3294
Vinsert
p10420
I42
VSimpleName: desc
p10421
tp10422
I1
s(g9207
I42
g9208
Vinsert
p10423
I42
VSimpleName: expectedDescription
p10424
tp10425
I1
s(g6854
I42
g6855
Vinsert
p10426
I23
VFieldDeclaration
p10427
tp10428
I1
s(g84
I42
g85
Vinsert
p10429
I43
VSimpleType: Improvement
p10430
tp10431
I1
s(g1411
I42
g1412
Vinsert
p10432
I43
VSimpleType: Invocation
p10433
tp10434
I7
s(g4646
I42
g4647
Vinsert
p10435
I59
VVariableDeclarationFragment
p10436
tp10437
I1
s(g2743
I42
g2744
Vinsert
p10438
I42
VSimpleName: Integer
p10439
tp10440
I1
s(g9789
I42
g9790
Vinsert
p10441
I42
VSimpleName: Exception
p10442
tp10443
I1
s(g1054
I42
g1055
Vinsert
p10444
I21
VExpressionStatement
p10445
tp10446
I1
s(g3659
I42
g3660
Vinsert
p10447
I59
VVariableDeclarationFragment
p10448
tp10449
I1
s(g2585
I42
g2586
Vinsert
p10450
I2
VArrayAccess
p10451
tp10452
I1
s(g8242
I42
g8243
Vinsert
p10453
I43
VSimpleType: Callable
p10454
tp10455
I1
s(g5583
I42
g5584
Vinsert
p10456
I21
VExpressionStatement
p10457
tp10458
I1
s(g5180
I42
g5181
Vinsert
p10459
I32
VMethodInvocation
p10460
tp10461
I1
s(g9105
I42
g9106
Vinsert
p10462
I8
VBlock
p10463
tp10464
I1
s(Vinsert
p10465
I42
VSimpleName: iterator
p10466
Vinsert
p10467
I42
VSimpleName: List
p10468
tp10469
I3
s(Vinsert
p10470
I42
VSimpleName: isVoid
p10471
Vinsert
p10472
I42
VSimpleName: answer
p10473
tp10474
I1
s(g5118
I42
g5119
Vinsert
p10475
I42
VSimpleName: Ignore
p10476
tp10477
I1
s(g1100
I42
g1101
Vinsert
p10478
I42
VSimpleName: foo
p10479
tp10480
I1
s(g653
I42
g654
Vinsert
p10481
I39
VPrimitiveType: void
p10482
tp10483
I2
s(g3935
I42
g3936
Vinsert
p10484
I65
VTagElement: @link
p10485
tp10486
I2
s(g5583
I42
g5584
Vinsert
p10487
I32
VMethodInvocation
p10488
tp10489
I1
s(Vinsert
p10490
I42
VSimpleName: markVerified
p10491
Vinsert
p10492
I33
VNullLiteral
p10493
tp10494
I1
s(g4895
I42
g4896
Vinsert
p10495
I33
VNullLiteral
p10496
tp10497
I1
s(g2444
I42
g2445
Vinsert
p10498
I43
VSimpleType: ITestResult
p10499
tp10500
I1
s(g6387
I42
g6388
Vinsert
p10501
I42
VSimpleName: DispatcherDefaultingToRealMethod
p10502
tp10503
I1
s(g9147
I42
g9148
Vinsert
p10504
I42
VSimpleName: Test
p10505
tp10506
I1
s(Vinsert
p10507
I42
VSimpleName: throwSomething
p10508
Vinsert
p10509
I32
VMethodInvocation
p10510
tp10511
I1
s(Vinsert
p10512
I42
VSimpleName: mock
p10513
Vinsert
p10514
I42
VSimpleName: setup
p10515
tp10516
I1
s(g287
I42
g288
Vinsert
p10517
I21
VExpressionStatement
p10518
tp10519
I1
s(Vinsert
p10520
I42
VSimpleName: setAccessible
p10521
Vinsert
p10522
I43
VSimpleType: Field
p10523
tp10524
I1
s(g8642
I42
g8643
Vinsert
p10525
I43
VSimpleType: Invocation
p10526
tp10527
I1
s(g4944
I42
g4945
Vinsert
p10528
I42
VSimpleName: stubbings
p10529
tp10530
I4
s(Vinsert
p10531
I42
VSimpleName: assertThat
p10532
Vinsert
p10533
I14
VClassInstanceCreation
p10534
tp10535
I1
s(g5388
I42
g5389
Vinsert
p10536
I42
VSimpleName: InvocationChunk
p10537
tp10538
I2
s(Vinsert
p10539
I42
VSimpleName: arraycopy
p10540
Vinsert
p10541
I5
VArrayType: Class[]
p10542
tp10543
I1
s(g7730
I42
g7731
Vinsert
p10544
I43
VSimpleType: Reporter
p10545
tp10546
I1
s(g7867
I42
g7868
Vinsert
p10547
I42
VSimpleName: loggedInfo
p10548
tp10549
I2
s(g1477
I42
g1478
Vinsert
p10550
I8
VBlock
p10551
tp10552
I1
s(Vinsert
p10553
I42
VSimpleName: appendText
p10554
Vinsert
p10555
I42
VSimpleName: getMessage
p10556
tp10557
I1
s(g5383
I42
g5384
Vinsert
p10558
I74
VParameterizedType: List<StubbedInvocationMatcher>
p10559
tp10560
I1
s(g4346
I42
g4347
Vinsert
p10561
I43
VSimpleType: Throwable
p10562
tp10563
I1
s(g3792
I42
g3793
Vinsert
p10564
I43
VSimpleType: ClassLoader
p10565
tp10566
I1
s(Vinsert
p10567
I42
VSimpleName: returnSet
p10568
Vinsert
p10569
I8
VBlock
p10570
tp10571
I2
s(Vinsert
p10572
I42
VSimpleName: clearInvocations
p10573
Vinsert
p10574
I42
VSimpleName: T
p10575
tp10576
I2
s(g1688
I42
g1689
Vinsert
p10577
I42
VSimpleName: answer
p10578
tp10579
I2
s(g9666
I42
g9667
Vinsert
p10580
I42
VSimpleName: Field
p10581
tp10582
I1
s(g7521
I42
g7522
Vinsert
p10583
I83
VModifier: public
p10584
tp10585
I2
s(Vinsert
p10586
I42
VSimpleName: when
p10587
Vinsert
p10588
I42
VSimpleName: basicCheck
p10589
tp10590
I1
s(g26
I42
g27
Vinsert
p10591
I83
VModifier: private
p10592
tp10593
I1
s(g1683
I42
g1684
Vinsert
p10594
I42
VSimpleName: cache
p10595
tp10596
I1
s(g2336
I42
g2337
Vinsert
p10597
I43
VSimpleType: Invocation
p10598
tp10599
I1
s(g6828
I42
g6829
Vinsert
p10600
I22
VFieldAccess
p10601
tp10602
I3
s(g4670
I42
g4671
Vinsert
p10603
I21
VExpressionStatement
p10604
tp10605
I2
s(g5752
I42
g5753
Vinsert
p10606
I34
VNumberLiteral: 0
p10607
tp10608
I1
s(Vinsert
p10609
I42
VSimpleName: contains
p10610
Vinsert
p10611
I39
VPrimitiveType: boolean
p10612
tp10613
I6
s(g2929
I42
g2930
Vinsert
p10614
I43
VSimpleType: Exception
p10615
tp10616
I1
s(g7633
I42
g7634
Vinsert
p10617
I42
VSimpleName: mockitoState
p10618
tp10619
I2
s(g174
I42
g175
Vinsert
p10620
I42
VSimpleName: assertEquals
p10621
tp10622
I1
s(Vinsert
p10623
I42
VSimpleName: getDeclaredFields
p10624
Vinsert
p10625
I14
VClassInstanceCreation
p10626
tp10627
I3
s(g2585
I42
g2586
Vinsert
p10628
I42
VSimpleName: argumentType
p10629
tp10630
I1
s(g7313
I42
g7314
Vinsert
p10631
I60
VVariableDeclarationStatement
p10632
tp10633
I1
s(Vinsert
p10634
I42
VSimpleName: add
p10635
Vinsert
p10636
I42
VSimpleName: array
p10637
tp10638
I1
s(g3611
I42
g3612
Vinsert
p10639
I42
VSimpleName: T
p10640
tp10641
I3
s(g6184
I42
g6185
Vinsert
p10642
I25
VIfStatement
p10643
tp10644
I1
s(g473
I42
g474
Vinsert
p10645
I43
VSimpleType: MockitoJUnitListener
p10646
tp10647
I4
s(g9196
I42
g9197
Vinsert
p10648
I39
VPrimitiveType: void
p10649
tp10650
I10
s(Vinsert
p10651
I42
VSimpleName: oneArray
p10652
Vinsert
p10653
I57
VTypeLiteral
p10654
tp10655
I1
s(g6510
I42
g6511
Vinsert
p10656
I42
VSimpleName: Verifier
p10657
tp10658
I1
s(Vinsert
p10659
I42
VSimpleName: initMocks
p10660
Vinsert
p10661
I60
VVariableDeclarationStatement
p10662
tp10663
I4
s(g2804
I42
g2805
Vinsert
p10664
I45
VStringLiteral: "mock.simpleMethod(123);"
p10665
tp10666
I1
s(Vinsert
p10667
I42
VSimpleName: getMessage
p10668
Vinsert
p10669
I42
VSimpleName: Commit
p10670
tp10671
I2
s(Vinsert
p10672
I42
VSimpleName: getArguments
p10673
Vinsert
p10674
I42
VSimpleName: arguments
p10675
tp10676
I2
s(g4502
I42
g4503
Vinsert
p10677
I5
VArrayType: Object[]
p10678
tp10679
I1
s(Vinsert
p10680
I42
VSimpleName: get
p10681
Vinsert
p10682
I85
VDimension
p10683
tp10684
I1
s(g8991
I42
g8992
Vinsert
p10685
I52
VThisExpression
p10686
tp10687
I3
s(Vinsert
p10688
I42
VSimpleName: returnValueFor
p10689
Vinsert
p10690
I60
VVariableDeclarationStatement
p10691
tp10692
I1
s(g6170
I42
g6171
Vinsert
p10693
I42
VSimpleName: firstMethodOnStack
p10694
tp10695
I1
s(Vinsert
p10696
I42
VSimpleName: isJava8BelowUpdate45
p10697
Vinsert
p10698
I42
VSimpleName: MockitoException
p10699
tp10700
I1
s(g1688
I42
g1689
Vinsert
p10701
I42
VSimpleName: Answer
p10702
tp10703
I2
s(g4226
I42
g4227
Vinsert
p10704
I42
VSimpleName: sp
p10705
tp10706
I1
s(g2770
I42
g2771
Vinsert
p10707
I27
VInfixExpression: ==
p10708
tp10709
I1
s(g4714
I42
g4715
Vinsert
p10710
I44
VSingleVariableDeclaration
p10711
tp10712
I2
s(g3083
I42
g3084
Vinsert
p10713
I42
VSimpleName: assertEquals
p10714
tp10715
I2
s(g2881
I42
g2882
Vinsert
p10716
I59
VVariableDeclarationFragment
p10717
tp10718
I3
s(g3413
I42
g3414
Vinsert
p10719
I42
VSimpleName: failureMessage
p10720
tp10721
I2
s(g6276
I42
g6277
Vinsert
p10722
I42
VSimpleName: shouldProvideDecentExceptionWhenInjectMockInstanceIsNull
p10723
tp10724
I1
s(g3293
I42
g3294
Vinsert
p10725
I21
VExpressionStatement
p10726
tp10727
I2
s(g1144
I42
g1145
Vinsert
p10728
I27
VInfixExpression: !=
p10729
tp10730
I1
s(g1627
I42
g1628
Vinsert
p10731
I60
VVariableDeclarationStatement
p10732
tp10733
I1
s(g10572
I42
g10573
Vinsert
p10734
I21
VExpressionStatement
p10735
tp10736
I1
s(g7302
I42
g7303
Vinsert
p10737
I42
VSimpleName: IMethods
p10738
tp10739
I2
s(Vinsert
p10740
I42
VSimpleName: getStackTrace
p10741
Vinsert
p10742
I42
VSimpleName: logger
p10743
tp10744
I2
s(g2364
I42
g2365
Vinsert
p10745
I39
VPrimitiveType: void
p10746
tp10747
I1
s(g1726
I42
g1727
Vinsert
p10748
I32
VMethodInvocation
p10749
tp10750
I2
s(Vinsert
p10751
I42
VSimpleName: verify
p10752
Vinsert
p10753
I42
VSimpleName: shouldVerifyOnlyWhenModeIsExplicit
p10754
tp10755
I1
s(g1482
I42
g1483
Vinsert
p10756
I44
VSingleVariableDeclaration
p10757
tp10758
I1
s(g5887
I42
g5888
Vinsert
p10759
I42
VSimpleName: extraInterfaces
p10760
tp10761
I1
s(Vinsert
p10762
I42
VSimpleName: value
p10763
Vinsert
p10764
I45
VStringLiteral: "sampleMethod"
p10765
tp10766
I1
s(Vinsert
p10767
I42
VSimpleName: simpleMethod
p10768
Vinsert
p10769
I42
VSimpleName: captor
p10770
tp10771
I1
s(Vinsert
p10772
I42
VSimpleName: appendTo
p10773
Vinsert
p10774
I42
VSimpleName: IArgumentMatcher
p10775
tp10776
I2
s(Vinsert
p10777
I42
VSimpleName: getSort
p10778
Vinsert
p10779
I42
VSimpleName: e
p10780
tp10781
I1
s(g1179
I42
g1180
Vinsert
p10782
I32
VMethodInvocation
p10783
tp10784
I114
s(g9666
I42
g9667
Vinsert
p10785
I42
VSimpleName: value
p10786
tp10787
I1
s(g5360
I42
g5361
Vinsert
p10788
I25
VIfStatement
p10789
tp10790
I1
s(g199
I42
g200
Vinsert
p10791
I43
VSimpleType: Object
p10792
tp10793
I1
s(Vinsert
p10794
I42
VSimpleName: hasSameMethod
p10795
Vinsert
p10796
I42
VSimpleName: wanted
p10797
tp10798
I1
s(g1914
I42
g1915
Vinsert
p10799
I43
VSimpleType: Set
p10800
tp10801
I1
s(Vinsert
p10802
I42
VSimpleName: createFrom
p10803
Vinsert
p10804
I42
VSimpleName: out
p10805
tp10806
I1
s(g1696
I42
g1697
Vinsert
p10807
I27
VInfixExpression: ==
p10808
tp10809
I5
s(g7416
I42
g7417
Vinsert
p10810
I42
VSimpleName: Exception
p10811
tp10812
I1
s(g9584
I42
g9585
Vinsert
p10813
I42
VSimpleName: Person
p10814
tp10815
I1
s(g3336
I42
g3337
Vinsert
p10816
I42
VSimpleName: mock
p10817
tp10818
I1
s(g1675
I42
g1676
Vinsert
p10819
I42
VSimpleName: getInvocations
p10820
tp10821
I1
s(g9758
I42
g9759
Vinsert
p10822
I42
VSimpleName: MockSettings
p10823
tp10824
I1
s(g4887
I42
g4888
Vinsert
p10825
I14
VClassInstanceCreation
p10826
tp10827
I1
s(g7572
I42
g7573
Vinsert
p10828
I25
VIfStatement
p10829
tp10830
I1
s(g7911
I42
g7912
Vinsert
p10831
I45
VStringLiteral: "First undesired invocation:"
p10832
tp10833
I1
s(g5609
I42
g5610
Vinsert
p10834
I66
VTextElement: Find out whether the object is a mock.
p10835
tp10836
I2
s(g3864
I42
g3865
Vinsert
p10837
I21
VExpressionStatement
p10838
tp10839
I3
s(g6815
I42
g6816
Vinsert
p10840
I42
VSimpleName: Exception
p10841
tp10842
I1
s(g199
I42
g200
Vinsert
p10843
I83
VModifier: static
p10844
tp10845
I1
s(Vinsert
p10846
I42
VSimpleName: setPair
p10847
Vinsert
p10848
I43
VSimpleType: Closure
p10849
tp10850
I2
s(Vinsert
p10851
I42
VSimpleName: emptyOptionalLong
p10852
Vinsert
p10853
I42
VSimpleName: equals
p10854
tp10855
I1
s(g10324
I42
g10325
Vinsert
p10856
I42
VSimpleName: mockHandler
p10857
tp10858
I1
s(g856
I42
g857
Vinsert
p10859
I42
VSimpleName: prime
p10860
tp10861
I1
s(g3527
I42
g3528
Vinsert
p10862
I83
VModifier: public
p10863
tp10864
I1
s(g4719
I42
g4720
Vinsert
p10865
I42
VSimpleName: getReturnType
p10866
tp10867
I2
s(g6316
I42
g6317
Vinsert
p10868
I44
VSingleVariableDeclaration
p10869
tp10870
I1
s(g3996
I42
g3997
Vinsert
p10871
I43
VSimpleType: HasVerboseVariant
p10872
tp10873
I2
s(g493
I42
g494
Vinsert
p10874
I11
VCastExpression
p10875
tp10876
I2
s(g61
I42
g62
Vinsert
p10877
I8
VBlock
p10878
tp10879
I9
s(g5180
I42
g5181
Vinsert
p10880
I59
VVariableDeclarationFragment
p10881
tp10882
I1
s(g5794
I42
g5795
Vinsert
p10883
I39
VPrimitiveType: void
p10884
tp10885
I1
s(g3843
I42
g3844
Vinsert
p10886
I42
VSimpleName: qualifiedName
p10887
tp10888
I2
s(Vinsert
p10889
I42
VSimpleName: getBounds
p10890
Vinsert
p10891
I22
VFieldAccess
p10892
tp10893
I2
s(Vinsert
p10894
I42
VSimpleName: isMock
p10895
Vinsert
p10896
I43
VSimpleType: Object
p10897
tp10898
I1
s(Vinsert
p10899
I42
VSimpleName: setStackTrace
p10900
Vinsert
p10901
I42
VSimpleName: cause1
p10902
tp10903
I3
s(g6260
I42
g6261
Vinsert
p10904
I42
VSimpleName: IOUtil
p10905
tp10906
I1
s(g4072
I42
g4073
Vinsert
p10907
I43
VSimpleType: IMethods
p10908
tp10909
I1
s(g2978
I42
g2979
Vinsert
p10910
I42
VSimpleName: Task
p10911
tp10912
I1
s(g3542
I42
g3543
Vinsert
p10913
I45
VStringLiteral: "' did not fail with: "
p10914
tp10915
I1
s(Vinsert
p10916
I42
VSimpleName: doThrow
p10917
Vinsert
p10918
I42
VSimpleName: Test
p10919
tp10920
I1
s(Vinsert
p10921
I42
VSimpleName: getClassName
p10922
Vinsert
p10923
I42
VSimpleName: StackTraceElement
p10924
tp10925
I4
s(g643
I42
g644
Vinsert
p10926
I39
VPrimitiveType: void
p10927
tp10928
I1
s(Vinsert
p10929
I42
VSimpleName: iterator
p10930
Vinsert
p10931
I42
VSimpleName: methods
p10932
tp10933
I4
s(g9491
I42
g9492
Vinsert
p10934
I42
VSimpleName: toMultilineString
p10935
tp10936
I1
s(g4827
I42
g4828
Vinsert
p10937
I42
VSimpleName: Method
p10938
tp10939
I4
s(g1548
I42
g1549
Vinsert
p10940
I42
VSimpleName: assertThat
p10941
tp10942
I1
s(g2306
I42
g2307
Vinsert
p10943
I42
VSimpleName: mock
p10944
tp10945
I1
s(g8509
I42
g8510
Vinsert
p10946
I60
VVariableDeclarationStatement
p10947
tp10948
I3
s(Vinsert
p10949
I42
VSimpleName: matches
p10950
Vinsert
p10951
I27
VInfixExpression: ||
p10952
tp10953
I1
s(g79
I42
g80
Vinsert
p10954
I42
VSimpleName: i
p10955
tp10956
I2
s(g164
I42
g165
Vinsert
p10957
I59
VVariableDeclarationFragment
p10958
tp10959
I3
s(g1632
I42
g1633
Vinsert
p10960
I45
VStringLiteral: "org.test.MockitoSampleTest"
p10961
tp10962
I1
s(Vinsert
p10963
I42
VSimpleName: matches
p10964
Vinsert
p10965
I42
VSimpleName: asList
p10966
tp10967
I1
s(g1760
I42
g1761
Vinsert
p10968
I42
VSimpleName: to
p10969
tp10970
I1
s(Vinsert
p10971
I42
VSimpleName: add
p10972
Vinsert
p10973
I40
VQualifiedName: Strictness.SILENT
p10974
tp10975
I1
s(Vinsert
p10976
I42
VSimpleName: append
p10977
Vinsert
p10978
I42
VSimpleName: visitDouble
p10979
tp10980
I1
s(g8553
I42
g8554
Vinsert
p10981
I42
VSimpleName: getTag
p10982
tp10983
I1
s(g3996
I42
g3997
Vinsert
p10984
I42
VSimpleName: getVerboseVariant
p10985
tp10986
I1
s(Vinsert
p10987
I42
VSimpleName: createInvocation
p10988
Vinsert
p10989
I53
VThrowStatement
p10990
tp10991
I1
s(Vinsert
p10992
I42
VSimpleName: mockingDetails
p10993
Vinsert
p10994
I43
VSimpleType: IMethods
p10995
tp10996
I1
s(g4001
I42
g4002
Vinsert
p10997
I42
VSimpleName: assertThat
p10998
tp10999
I1
s(g428
I42
g429
Vinsert
p11000
I40
VQualifiedName: org.mockito.Mockito.when
p11001
tp11002
I1
s(g3483
I42
g3484
Vinsert
p11003
I43
VSimpleType: Byte
p11004
tp11005
I1
s(g8571
I42
g8572
Vinsert
p11006
I42
VSimpleName: toReturn
p11007
tp11008
I2
s(g3537
I42
g3538
Vinsert
p11009
I42
VSimpleName: just_for_information_fields_are_read_in_declaration_order_see_Service
p11010
tp11011
I1
s(Vinsert
p11012
I42
VSimpleName: getException
p11013
Vinsert
p11014
I31
VMethodDeclaration
p11015
tp11016
I1
s(g4153
I42
g4154
Vinsert
p11017
I74
VParameterizedType: Class<?>
p11018
tp11019
I1
s(Vinsert
p11020
I42
VSimpleName: getMockHandler
p11021
Vinsert
p11022
I42
VSimpleName: Throwable
p11023
tp11024
I1
s(g8126
I42
g8127
Vinsert
p11025
I42
VSimpleName: fail
p11026
tp11027
I1
s(g3060
I42
g3061
Vinsert
p11028
I43
VSimpleType: ConsoleMockitoLogger
p11029
tp11030
I1
s(g5604
I42
g5605
Vinsert
p11031
I42
VSimpleName: reportMatcher
p11032
tp11033
I1
s(g2498
I42
g2499
Vinsert
p11034
I39
VPrimitiveType: void
p11035
tp11036
I1
s(g4466
I42
g4467
Vinsert
p11037
I42
VSimpleName: varargs
p11038
tp11039
I2
s(g4479
I42
g4480
Vinsert
p11040
I43
VSimpleType: StringBuilder
p11041
tp11042
I2
s(Vinsert
p11043
I42
VSimpleName: getPlugins
p11044
Vinsert
p11045
I41
VReturnStatement
p11046
tp11047
I1
s(g7893
I42
g7894
Vinsert
p11048
I42
VSimpleName: insns
p11049
tp11050
I1
s(g6379
I42
g6380
Vinsert
p11051
I42
VSimpleName: Arrays
p11052
tp11053
I1
s(g277
I42
g278
Vinsert
p11054
I43
VSimpleType: PropertyAndSetterInjection.FieldTypeAndNameComparator
p11055
tp11056
I1
s(g3758
I42
g3759
Vinsert
p11057
I42
VSimpleName: wanted
p11058
tp11059
I1
s(g3851
I42
g3852
Vinsert
p11060
I21
VExpressionStatement
p11061
tp11062
I1
s(g2531
I42
g2532
Vinsert
p11063
I43
VSimpleType: MockitoException
p11064
tp11065
I1
s(Vinsert
p11066
I42
VSimpleName: classes
p11067
Vinsert
p11068
I8
VBlock
p11069
tp11070
I2
s(g9950
I42
g9951
Vinsert
p11071
I42
VSimpleName: when
p11072
tp11073
I1
s(Vinsert
p11074
I42
VSimpleName: call
p11075
Vinsert
p11076
I42
VSimpleName: perform
p11077
tp11078
I1
s(g2929
I42
g2930
Vinsert
p11079
I83
VModifier: public
p11080
tp11081
I1
s(g4840
I42
g4841
Vinsert
p11082
I65
VTagElement
p11083
tp11084
I1
s(g3468
I42
g3469
Vinsert
p11085
I42
VSimpleName: Class
p11086
tp11087
I2
s(g9390
I42
g9391
Vinsert
p11088
I42
VSimpleName: configuration
p11089
tp11090
I2
s(g5975
I42
g5976
Vinsert
p11091
I42
VSimpleName: anyObject
p11092
tp11093
I1
s(Vinsert
p11094
I42
VSimpleName: getDeclaredFields
p11095
Vinsert
p11096
I74
VParameterizedType: HashSet<Object>
p11097
tp11098
I1
s(Vinsert
p11099
I42
VSimpleName: getStackTrace
p11100
Vinsert
p11101
I21
VExpressionStatement
p11102
tp11103
I9
s(g9706
I42
g9707
Vinsert
p11104
I83
VModifier: static
p11105
tp11106
I2
s(Vinsert
p11107
I42
VSimpleName: doAnswer
p11108
Vinsert
p11109
I66
VTextElement: doCallRealMethod().when(mock).someVoidMethod();
p11110
tp11111
I1
s(Vinsert
p11112
I42
VSimpleName: equals
p11113
Vinsert
p11114
I41
VReturnStatement
p11115
tp11116
I14
s(g1543
I42
g1544
Vinsert
p11117
I41
VReturnStatement
p11118
tp11119
I1
s(g2490
I42
g2491
Vinsert
p11120
I42
VSimpleName: attempts
p11121
tp11122
I1
s(g7143
I42
g7144
Vinsert
p11123
I42
VSimpleName: InstantationException
p11124
tp11125
I1
s(g6093
I42
g6094
Vinsert
p11126
I42
VSimpleName: AbstractClassGenerator
p11127
tp11128
I2
s(g3436
I42
g3437
Vinsert
p11129
I43
VSimpleType: MethodProxy
p11130
tp11131
I2
s(g10073
I42
g10074
Vinsert
p11132
I45
VStringLiteral: "<Capturing argument>"
p11133
tp11134
I1
s(g1006
I42
g1007
Vinsert
p11135
I27
VInfixExpression: ==
p11136
tp11137
I1
s(g4973
I42
g4974
Vinsert
p11138
I43
VSimpleType: MatcherDecorator
p11139
tp11140
I2
s(Vinsert
p11141
I42
VSimpleName: intArgumentMethod
p11142
Vinsert
p11143
I42
VSimpleName: argument
p11144
tp11145
I1
s(g9429
I42
g9430
Vinsert
p11146
I42
VSimpleName: when
p11147
tp11148
I2
s(g5408
I42
g5409
Vinsert
p11149
I42
VSimpleName: SubclassInjectionLoader
p11150
tp11151
I1
s(Vinsert
p11152
I42
VSimpleName: classNameForMock
p11153
Vinsert
p11154
I42
VSimpleName: toInstanceName
p11155
tp11156
I1
s(g1199
I42
g1200
Vinsert
p11157
I62
VInstanceofExpression
p11158
tp11159
I2
s(g8467
I42
g8468
Vinsert
p11160
I42
VSimpleName: MethodVisitor
p11161
tp11162
I1
s(g8986
I42
g8987
Vinsert
p11163
I43
VSimpleType: Object
p11164
tp11165
I2
s(g7004
I42
g7005
Vinsert
p11166
I54
VTryStatement
p11167
tp11168
I3
s(g69
I42
g70
Vinsert
p11169
I42
VSimpleName: Exception
p11170
tp11171
I1
s(Vinsert
p11172
I42
VSimpleName: returnNull
p11173
Vinsert
p11174
I40
VQualifiedName: AnyVararg.ANY_VARARG
p11175
tp11176
I1
s(Vinsert
p11177
I42
VSimpleName: validateMockitoUsage
p11178
Vinsert
p11179
I42
VSimpleName: testFailure
p11180
tp11181
I2
s(g871
I42
g872
Vinsert
p11182
I32
VMethodInvocation
p11183
tp11184
I2
s(g9739
I42
g9740
Vinsert
p11185
I32
VMethodInvocation
p11186
tp11187
I138
s(g3977
I42
g3978
Vinsert
p11188
I42
VSimpleName: RETURNS_SMART_NULLS
p11189
tp11190
I1
s(g6252
I42
g6253
Vinsert
p11191
I43
VSimpleType: String
p11192
tp11193
I1
s(g6116
I42
g6117
Vinsert
p11194
I42
VSimpleName: commit
p11195
tp11196
I1
s(g686
I42
g687
Vinsert
p11197
I42
VSimpleName: when
p11198
tp11199
I1
s(g981
I42
g982
Vinsert
p11200
I42
VSimpleName: Throwable
p11201
tp11202
I1
s(g5530
I42
g5531
Vinsert
p11203
I43
VSimpleType: Constructor
p11204
tp11205
I2
s(Vinsert
p11206
I42
VSimpleName: keySet
p11207
Vinsert
p11208
I42
VSimpleName: getInvocation
p11209
tp11210
I2
s(g10354
I42
g10355
Vinsert
p11211
I8
VBlock
p11212
tp11213
I4
s(Vinsert
p11214
I42
VSimpleName: replace
p11215
Vinsert
p11216
I39
VPrimitiveType: byte
p11217
tp11218
I1
s(g8889
I42
g8890
Vinsert
p11219
I42
VSimpleName: mockable
p11220
tp11221
I1
s(g3460
I42
g3461
Vinsert
p11222
I42
VSimpleName: Exception
p11223
tp11224
I1
s(g2429
I42
g2430
Vinsert
p11225
I43
VSimpleType: Exception
p11226
tp11227
I3
s(g3101
I42
g3102
Vinsert
p11228
I42
VSimpleName: MOCKING_PROGRESS
p11229
tp11230
I2
s(g3527
I42
g3528
Vinsert
p11231
I44
VSingleVariableDeclaration
p11232
tp11233
I1
s(g4247
I42
g4248
Vinsert
p11234
I21
VExpressionStatement
p11235
tp11236
I2
s(g1513
I42
g1514
Vinsert
p11237
I27
VInfixExpression: ==
p11238
tp11239
I1
s(g618
I42
g619
Vinsert
p11240
I42
VSimpleName: shouldDisableTimeout
p11241
tp11242
I1
s(Vinsert
p11243
I42
VSimpleName: m1
p11244
Vinsert
p11245
I43
VSimpleType: Throwable
p11246
tp11247
I1
s(g3165
I42
g3166
Vinsert
p11248
I42
VSimpleName: parentMockSettings
p11249
tp11250
I1
s(g4001
I42
g4002
Vinsert
p11251
I32
VMethodInvocation
p11252
tp11253
I3
s(g4189
I42
g4190
Vinsert
p11254
I42
VSimpleName: SerializableMode
p11255
tp11256
I1
s(g9105
I42
g9106
Vinsert
p11257
I83
VModifier: static
p11258
tp11259
I1
s(g1352
I42
g1353
Vinsert
p11260
I60
VVariableDeclarationStatement
p11261
tp11262
I2
s(Vinsert
p11263
I42
VSimpleName: getMockitoMock
p11264
Vinsert
p11265
I21
VExpressionStatement
p11266
tp11267
I1
s(g1287
I42
g1288
Vinsert
p11268
I27
VInfixExpression: !=
p11269
tp11270
I1
s(g10762
I42
g10763
Vinsert
p11271
I32
VMethodInvocation
p11272
tp11273
I12
s(g2180
I42
g2181
Vinsert
p11274
I32
VMethodInvocation
p11275
tp11276
I6
s(g6098
I42
g6099
Vinsert
p11277
I42
VSimpleName: debuggingHelper
p11278
tp11279
I1
s(g10265
I42
g10266
Vinsert
p11280
I41
VReturnStatement
p11281
tp11282
I5
s(Vinsert
p11283
I42
VSimpleName: getClass
p11284
Vinsert
p11285
I42
VSimpleName: from
p11286
tp11287
I3
s(g5226
I42
g5227
Vinsert
p11288
I42
VSimpleName: stub
p11289
tp11290
I1
s(g1029
I42
g1030
Vinsert
p11291
I76
VWildcardType: ?
p11292
tp11293
I1
s(g415
I42
g416
Vinsert
p11294
I42
VSimpleName: Class
p11295
tp11296
I1
s(g5305
I42
g5306
Vinsert
p11297
I42
VSimpleName: name
p11298
tp11299
I1
s(g10346
I42
g10347
Vinsert
p11300
I42
VSimpleName: mock
p11301
tp11302
I3
s(g4111
I42
g4112
Vinsert
p11303
I43
VSimpleType: MockingDetails
p11304
tp11305
I1
s(Vinsert
p11306
I42
VSimpleName: size
p11307
Vinsert
p11308
I76
VWildcardType: ?
p11309
tp11310
I1
s(g2753
I42
g2754
Vinsert
p11311
I42
VSimpleName: Object
p11312
tp11313
I4
s(Vinsert
p11314
I42
VSimpleName: withPrivateCopyOf
p11315
Vinsert
p11316
I42
VSimpleName: Objenesis
p11317
tp11318
I1
s(g4043
I42
g4044
Vinsert
p11319
I42
VSimpleName: inOrder
p11320
tp11321
I3
s(g433
I42
g434
Vinsert
p11322
I8
VBlock
p11323
tp11324
I10
s(Vinsert
p11325
I42
VSimpleName: get
p11326
Vinsert
p11327
I42
VSimpleName: emptySet
p11328
tp11329
I1
s(g1164
I42
g1165
Vinsert
p11330
I42
VSimpleName: MockVerificationAssertionError
p11331
tp11332
I1
s(g7361
I42
g7362
Vinsert
p11333
I76
VWildcardType: ?
p11334
tp11335
I3
s(Vinsert
p11336
I42
VSimpleName: submit
p11337
Vinsert
p11338
I21
VExpressionStatement
p11339
tp11340
I1
s(g8528
I42
g8529
Vinsert
p11341
I42
VSimpleName: handler
p11342
tp11343
I1
s(g7243
I42
g7244
Vinsert
p11344
I42
VSimpleName: times
p11345
tp11346
I1
s(g6677
I42
g6678
Vinsert
p11347
I42
VSimpleName: onClass
p11348
tp11349
I2
s(g164
I42
g165
Vinsert
p11350
I34
VNumberLiteral: 1
p11351
tp11352
I1
s(Vinsert
p11353
I42
VSimpleName: typeMatches
p11354
Vinsert
p11355
I59
VVariableDeclarationFragment
p11356
tp11357
I3
s(g229
I42
g230
Vinsert
p11358
I43
VSimpleType: List
p11359
tp11360
I1
s(g8978
I42
g8979
Vinsert
p11361
I42
VSimpleName: verify
p11362
tp11363
I2
s(g9901
I42
g9902
Vinsert
p11364
I42
VSimpleName: mockedType
p11365
tp11366
I1
s(g5647
I42
g5648
Vinsert
p11367
I21
VExpressionStatement
p11368
tp11369
I2
s(Vinsert
p11370
I42
VSimpleName: init
p11371
Vinsert
p11372
I32
VMethodInvocation
p11373
tp11374
I1
s(g5052
I42
g5053
Vinsert
p11375
I42
VSimpleName: mockedType
p11376
tp11377
I2
s(g3704
I42
g3705
Vinsert
p11378
I42
VSimpleName: property
p11379
tp11380
I1
s(g6116
I42
g6117
Vinsert
p11381
I70
VEnhancedForStatement
p11382
tp11383
I1
s(g10586
I42
g10587
Vinsert
p11384
I42
VSimpleName: extendedFactory
p11385
tp11386
I1
s(Vinsert
p11387
I42
VSimpleName: run
p11388
Vinsert
p11389
I83
VModifier: private
p11390
tp11391
I1
s(g1586
I42
g1587
Vinsert
p11392
I40
VQualifiedName: Constants.SOURCE_FILE
p11393
tp11394
I1
s(g5897
I42
g5898
Vinsert
p11395
I3
VArrayCreation
p11396
tp11397
I2
s(g6300
I42
g6301
Vinsert
p11398
I42
VSimpleName: issue421
p11399
tp11400
I2
s(g3267
I42
g3268
Vinsert
p11401
I42
VSimpleName: assertEquals
p11402
tp11403
I1
s(Vinsert
p11404
I42
VSimpleName: asList
p11405
Vinsert
p11406
I59
VVariableDeclarationFragment
p11407
tp11408
I11
s(g6116
I42
g6117
Vinsert
p11409
I43
VSimpleType: String
p11410
tp11411
I1
s(g2311
I42
g2312
Vinsert
p11412
I42
VSimpleName: unfilteredStackTrace
p11413
tp11414
I1
s(g8588
I42
g8589
Vinsert
p11415
I21
VExpressionStatement
p11416
tp11417
I2
s(Vinsert
p11418
I42
VSimpleName: create
p11419
Vinsert
p11420
I11
VCastExpression
p11421
tp11422
I1
s(Vinsert
p11423
I42
VSimpleName: getConfig
p11424
Vinsert
p11425
I33
VNullLiteral
p11426
tp11427
I1
s(g1954
I42
g1955
Vinsert
p11428
I44
VSingleVariableDeclaration
p11429
tp11430
I2
s(g6228
I42
g6229
Vinsert
p11431
I42
VSimpleName: thenThrow
p11432
tp11433
I5
s(Vinsert
p11434
I42
VSimpleName: getMock
p11435
Vinsert
p11436
I42
VSimpleName: verify
p11437
tp11438
I1
s(g2276
I42
g2277
Vinsert
p11439
I42
VSimpleName: MockSettingsImpl
p11440
tp11441
I1
s(g3183
I42
g3184
Vinsert
p11442
I57
VTypeLiteral
p11443
tp11444
I2
s(g2190
I42
g2191
Vinsert
p11445
I27
VInfixExpression: <
p11446
tp11447
I3
s(g10572
I42
g10573
Vinsert
p11448
I42
VSimpleName: clearInvocations
p11449
tp11450
I1
s(g6069
I42
g6070
Vinsert
p11451
I42
VSimpleName: SomeClass
p11452
tp11453
I1
s(g7258
I42
g7259
Vinsert
p11454
I42
VSimpleName: mock
p11455
tp11456
I1
s(g9950
I42
g9951
Vinsert
p11457
I42
VSimpleName: forCharacter
p11458
tp11459
I1
s(Vinsert
p11460
I42
VSimpleName: put
p11461
Vinsert
p11462
I43
VSimpleType: Boolean
p11463
tp11464
I1
s(g2770
I42
g2771
Vinsert
p11465
I85
VDimension
p11466
tp11467
I1
s(g6339
I42
g6340
Vinsert
p11468
I42
VSimpleName: Exception
p11469
tp11470
I1
s(g5211
I42
g5212
Vinsert
p11471
I45
VStringLiteral: "\u005cn"
p11472
tp11473
I1
s(g2565
I42
g2566
Vinsert
p11474
I42
VSimpleName: assertNull
p11475
tp11476
I1
s(g7221
I42
g7222
Vinsert
p11477
I32
VMethodInvocation
p11478
tp11479
I3
s(g583
I42
g584
Vinsert
p11480
I42
VSimpleName: assertEquals
p11481
tp11482
I2
s(g6988
I42
g6989
Vinsert
p11483
I42
VSimpleName: getFirstUnverified
p11484
tp11485
I1
s(g7825
I42
g7826
Vinsert
p11486
I43
VSimpleType: ClassLoader
p11487
tp11488
I1
s(g1538
I42
g1539
Vinsert
p11489
I42
VSimpleName: exception
p11490
tp11491
I1
s(g2157
I42
g2158
Vinsert
p11492
I42
VSimpleName: mock
p11493
tp11494
I3
s(g1362
I42
g1363
Vinsert
p11495
I42
VSimpleName: cw
p11496
tp11497
I1
s(Vinsert
p11498
I42
VSimpleName: mock
p11499
Vinsert
p11500
I42
VSimpleName: MockSettings
p11501
tp11502
I1
s(g4657
I42
g4658
Vinsert
p11503
I42
VSimpleName: o2
p11504
tp11505
I1
s(g7790
I42
g7791
Vinsert
p11506
I42
VSimpleName: injected
p11507
tp11508
I1
s(Vinsert
p11509
I42
VSimpleName: validateFor
p11510
Vinsert
p11511
I42
VSimpleName: toInvocation
p11512
tp11513
I1
s(Vinsert
p11514
I42
VSimpleName: remove
p11515
Vinsert
p11516
I43
VSimpleType: String
p11517
tp11518
I1
s(Vinsert
p11519
I42
VSimpleName: join
p11520
Vinsert
p11521
I42
VSimpleName: methodOne
p11522
tp11523
I1
s(Vinsert
p11524
I42
VSimpleName: answer
p11525
Vinsert
p11526
I42
VSimpleName: given
p11527
tp11528
I1
s(g3247
I42
g3248
Vinsert
p11529
I53
VThrowStatement
p11530
tp11531
I2
s(g7752
I42
g7753
Vinsert
p11532
I21
VExpressionStatement
p11533
tp11534
I1
s(g7030
I42
g7031
Vinsert
p11535
I42
VSimpleName: filename
p11536
tp11537
I3
s(Vinsert
p11538
I42
VSimpleName: getRuntimeMXBean
p11539
Vinsert
p11540
I59
VVariableDeclarationFragment
p11541
tp11542
I1
s(g1896
I42
g1897
Vinsert
p11543
I45
VStringLiteral: "a"
p11544
tp11545
I1
s(g114
I42
g115
Vinsert
p11546
I14
VClassInstanceCreation
p11547
tp11548
I1
s(g4981
I42
g4982
Vinsert
p11549
I59
VVariableDeclarationFragment
p11550
tp11551
I1
s(Vinsert
p11552
I42
VSimpleName: getName
p11553
Vinsert
p11554
I42
VSimpleName: stack
p11555
tp11556
I1
s(g2606
I42
g2607
Vinsert
p11557
I57
VTypeLiteral
p11558
tp11559
I3
s(g11243
I42
g11244
Vinsert
p11560
I41
VReturnStatement
p11561
tp11562
I1
s(g3856
I42
g3857
Vinsert
p11563
I44
VSingleVariableDeclaration
p11564
tp11565
I2
s(g6796
I42
g6797
Vinsert
p11566
I40
VQualifiedName: org.mockito.internal.creation.instance.InstantiationException
p11567
tp11568
I1
s(g4714
I42
g4715
Vinsert
p11569
I60
VVariableDeclarationStatement
p11570
tp11571
I5
s(Vinsert
p11572
I42
VSimpleName: getPropertyMethods
p11573
Vinsert
p11574
I44
VSingleVariableDeclaration
p11575
tp11576
I1
s(g991
I42
g992
Vinsert
p11577
I42
VSimpleName: end
p11578
tp11579
I1
s(Vinsert
p11580
I42
VSimpleName: isEmpty
p11581
Vinsert
p11582
I43
VSimpleType: VerifyingMode
p11583
tp11584
I1
s(g3782
I42
g3783
Vinsert
p11585
I43
VSimpleType: UniversalTestListener
p11586
tp11587
I1
s(g453
I42
g454
Vinsert
p11588
I39
VPrimitiveType: void
p11589
tp11590
I1
s(g352
I42
g353
Vinsert
p11591
I42
VSimpleName: Object
p11592
tp11593
I1
s(g2531
I42
g2532
Vinsert
p11594
I8
VBlock
p11595
tp11596
I1
s(g3991
I42
g3992
Vinsert
p11597
I43
VSimpleType: TraceBuilder
p11598
tp11599
I3
s(g971
I42
g972
Vinsert
p11600
I42
VSimpleName: println
p11601
tp11602
I1
s(g3431
I42
g3432
Vinsert
p11603
I66
VTextElement:  the target, may be null
p11604
tp11605
I1
s(g5994
I42
g5995
Vinsert
p11606
I39
VPrimitiveType: void
p11607
tp11608
I3
s(g10319
I42
g10320
Vinsert
p11609
I43
VSimpleType: FileInputStream
p11610
tp11611
I2
s(Vinsert
p11612
I42
VSimpleName: getWanted
p11613
Vinsert
p11614
I7
VAssignment: =
p11615
tp11616
I1
s(g2647
I42
g2648
Vinsert
p11617
I77
VNormalAnnotation
p11618
tp11619
I2
s(g5067
I42
g5068
Vinsert
p11620
I42
VSimpleName: VerificationModeFactory
p11621
tp11622
I1
s(g2978
I42
g2979
Vinsert
p11623
I74
VParameterizedType: Map<String,Task>
p11624
tp11625
I1
s(Vinsert
p11626
I42
VSimpleName: resolveTypeInstances
p11627
Vinsert
p11628
I43
VSimpleType: ConstructorArgumentResolver
p11629
tp11630
I2
s(g7190
I42
g7191
Vinsert
p11631
I33
VNullLiteral
p11632
tp11633
I1
s(g4670
I42
g4671
Vinsert
p11634
I32
VMethodInvocation
p11635
tp11636
I12
s(g3969
I42
g3970
Vinsert
p11637
I27
VInfixExpression: ==
p11638
tp11639
I5
s(Vinsert
p11640
I42
VSimpleName: get
p11641
Vinsert
p11642
I42
VSimpleName: checkForUnfinishedVerification
p11643
tp11644
I2
s(Vinsert
p11645
I42
VSimpleName: toString
p11646
Vinsert
p11647
I45
VStringLiteral: ""
p11648
tp11649
I1
s(g747
I42
g748
Vinsert
p11650
I42
VSimpleName: argumentCaptor
p11651
tp11652
I1
s(g9967
I42
g9968
Vinsert
p11653
I42
VSimpleName: Equals
p11654
tp11655
I1
s(g4510
I42
g4511
Vinsert
p11656
I59
VVariableDeclarationFragment
p11657
tp11658
I5
s(Vinsert
p11659
I42
VSimpleName: toInvocation
p11660
Vinsert
p11661
I42
VSimpleName: method
p11662
tp11663
I1
s(g5057
I42
g5058
Vinsert
p11664
I60
VVariableDeclarationStatement
p11665
tp11666
I6
s(Vinsert
p11667
I42
VSimpleName: getCause
p11668
Vinsert
p11669
I42
VSimpleName: ExecutionException
p11670
tp11671
I1
s(g4768
I42
g4769
Vinsert
p11672
I43
VSimpleType: MockHandler
p11673
tp11674
I1
s(g5794
I42
g5795
Vinsert
p11675
I44
VSingleVariableDeclaration
p11676
tp11677
I3
s(Vinsert
p11678
I42
VSimpleName: call
p11679
Vinsert
p11680
I42
VSimpleName: left
p11681
tp11682
I6
s(g3672
I42
g3673
Vinsert
p11683
I42
VSimpleName: getName
p11684
tp11685
I1
s(Vinsert
p11686
I42
VSimpleName: reset
p11687
Vinsert
p11688
I8
VBlock
p11689
tp11690
I7
s(Vinsert
p11691
I42
VSimpleName: imposterise
p11692
Vinsert
p11693
I42
VSimpleName: shouldCreateClassByConstructor
p11694
tp11695
I1
s(g5138
I42
g5139
Vinsert
p11696
I43
VSimpleType: SignatureVisitor
p11697
tp11698
I1
s(Vinsert
p11699
I42
VSimpleName: getRawArguments
p11700
Vinsert
p11701
I36
VParenthesizedExpression
p11702
tp11703
I1
s(g2000
I42
g2001
Vinsert
p11704
I42
VSimpleName: classToMock
p11705
tp11706
I2
s(g8255
I42
g8256
Vinsert
p11707
I42
VSimpleName: Exception
p11708
tp11709
I1
s(g8655
I42
g8656
Vinsert
p11710
I43
VSimpleType: WeakReference
p11711
tp11712
I1
s(Vinsert
p11713
I42
VSimpleName: append
p11714
Vinsert
p11715
I42
VSimpleName: PrintableInvocation
p11716
tp11717
I1
s(Vinsert
p11718
I42
VSimpleName: withSettings
p11719
Vinsert
p11720
I59
VVariableDeclarationFragment
p11721
tp11722
I2
s(g6339
I42
g6340
Vinsert
p11723
I42
VSimpleName: assumeTrue
p11724
tp11725
I1
s(g5712
I42
g5713
Vinsert
p11726
I43
VSimpleType: TypeVariable
p11727
tp11728
I1
s(g4577
I42
g4578
Vinsert
p11729
I42
VSimpleName: answer
p11730
tp11731
I2
s(g10772
I42
g10773
Vinsert
p11732
I42
VSimpleName: matcher
p11733
tp11734
I2
s(g3812
I42
g3813
Vinsert
p11735
I44
VSingleVariableDeclaration
p11736
tp11737
I2
s(Vinsert
p11738
I42
VSimpleName: objectArgMethod
p11739
Vinsert
p11740
I45
VStringLiteral: "one"
p11741
tp11742
I1
s(g4709
I42
g4710
Vinsert
p11743
I42
VSimpleName: MockSettings
p11744
tp11745
I1
s(g5810
I42
g5811
Vinsert
p11746
I21
VExpressionStatement
p11747
tp11748
I1
s(Vinsert
p11749
I42
VSimpleName: hashCode
p11750
Vinsert
p11751
I43
VSimpleType: ObjectMethodsOverriddenSubclass
p11752
tp11753
I1
s(g6056
I42
g6057
Vinsert
p11754
I21
VExpressionStatement
p11755
tp11756
I4
s(Vinsert
p11757
I42
VSimpleName: print
p11758
Vinsert
p11759
I42
VSimpleName: sb
p11760
tp11761
I1
s(g2826
I42
g2827
Vinsert
p11762
I42
VSimpleName: shouldFailWithUnfinishedVerification
p11763
tp11764
I1
s(g6077
I42
g6078
Vinsert
p11765
I42
VSimpleName: copyOperation
p11766
tp11767
I1
s(Vinsert
p11768
I42
VSimpleName: getRawArguments
p11769
Vinsert
p11770
I42
VSimpleName: isVarArgs
p11771
tp11772
I1
s(g4800
I42
g4801
Vinsert
p11773
I42
VSimpleName: handler
p11774
tp11775
I1
s(g10802
I42
g10803
Vinsert
p11776
I42
VSimpleName: List
p11777
tp11778
I1
s(g8798
I42
g8799
Vinsert
p11779
I32
VMethodInvocation
p11780
tp11781
I9
s(g7564
I42
g7565
Vinsert
p11782
I39
VPrimitiveType: void
p11783
tp11784
I1
s(g8160
I42
g8161
Vinsert
p11785
I32
VMethodInvocation
p11786
tp11787
I2
s(g2369
I42
g2370
Vinsert
p11788
I42
VSimpleName: getCollection
p11789
tp11790
I1
s(Vinsert
p11791
I42
VSimpleName: getLowerBounds
p11792
Vinsert
p11793
I66
VTextElement:  The first bound, either a type or a reference to a TypeVariable
p11794
tp11795
I1
s(g5583
I42
g5584
Vinsert
p11796
I42
VSimpleName: mockitoGenericMetadata
p11797
tp11798
I2
s(g9950
I42
g9951
Vinsert
p11799
I32
VMethodInvocation
p11800
tp11801
I4
s(g5151
I42
g5152
Vinsert
p11802
I43
VSimpleType: Exception
p11803
tp11804
I2
s(g1750
I42
g1751
Vinsert
p11805
I42
VSimpleName: StackTraceElement
p11806
tp11807
I2
s(g6752
I42
g6753
Vinsert
p11808
I42
VSimpleName: instance
p11809
tp11810
I1
s(g3570
I42
g3571
Vinsert
p11811
I76
VWildcardType: ?
p11812
tp11813
I1
s(g5416
I42
g5417
Vinsert
p11814
I41
VReturnStatement
p11815
tp11816
I1
s(g4138
I42
g4139
Vinsert
p11817
I42
VSimpleName: supplier
p11818
tp11819
I1
s(g3753
I42
g3754
Vinsert
p11820
I42
VSimpleName: mockitoControl
p11821
tp11822
I1
s(Vinsert
p11823
I42
VSimpleName: add
p11824
Vinsert
p11825
I42
VSimpleName: unusedStubs
p11826
tp11827
I1
s(Vinsert
p11828
I42
VSimpleName: append
p11829
Vinsert
p11830
I42
VSimpleName: linesToBreak
p11831
tp11832
I2
s(g1239
I42
g1240
Vinsert
p11833
I43
VSimpleType: Error
p11834
tp11835
I1
s(g1498
I42
g1499
Vinsert
p11836
I42
VSimpleName: event
p11837
tp11838
I1
s(Vinsert
p11839
I42
VSimpleName: oneArg
p11840
Vinsert
p11841
I42
VSimpleName: stub
p11842
tp11843
I5
s(Vinsert
p11844
I42
VSimpleName: append
p11845
Vinsert
p11846
I27
VInfixExpression: +
p11847
tp11848
I2
s(g4840
I42
g4841
Vinsert
p11849
I43
VSimpleType: PluginRegistry
p11850
tp11851
I1
s(g10846
I42
g10847
Vinsert
p11852
I42
VSimpleName: right
p11853
tp11854
I2
s(Vinsert
p11855
I42
VSimpleName: filterStackTrace
p11856
Vinsert
p11857
I42
VSimpleName: MockitoStackTraceFilter
p11858
tp11859
I2
s(g1001
I42
g1002
Vinsert
p11860
I43
VSimpleType: LinkedList
p11861
tp11862
I7
s(g760
I42
g761
Vinsert
p11863
I42
VSimpleName: DebuggingInfo
p11864
tp11865
I2
s(Vinsert
p11866
I42
VSimpleName: newInstance
p11867
Vinsert
p11868
I42
VSimpleName: x
p11869
tp11870
I1
s(g5760
I42
g5761
Vinsert
p11871
I43
VSimpleType: Class
p11872
tp11873
I1
s(g8978
I42
g8979
Vinsert
p11874
I45
VStringLiteral: "excluded"
p11875
tp11876
I1
s(Vinsert
p11877
I42
VSimpleName: getAllValues
p11878
Vinsert
p11879
I42
VSimpleName: m
p11880
tp11881
I2
s(g7351
I42
g7352
Vinsert
p11882
I42
VSimpleName: TypeUtils
p11883
tp11884
I1
s(g941
I42
g942
Vinsert
p11885
I8
VBlock
p11886
tp11887
I1
s(g9334
I42
g9335
Vinsert
p11888
I42
VSimpleName: e
p11889
tp11890
I3
s(g4409
I42
g4410
Vinsert
p11891
I21
VExpressionStatement
p11892
tp11893
I4
s(g3704
I42
g3705
Vinsert
p11894
I42
VSimpleName: callback
p11895
tp11896
I1
s(Vinsert
p11897
I42
VSimpleName: getStackTrace
p11898
Vinsert
p11899
I42
VSimpleName: Arrays
p11900
tp11901
I1
s(g352
I42
g353
Vinsert
p11902
I31
VMethodDeclaration
p11903
tp11904
I1
s(g8200
I42
g8201
Vinsert
p11905
I57
VTypeLiteral
p11906
tp11907
I2
s(g8205
I42
g8206
Vinsert
p11908
I42
VSimpleName: methodProxy
p11909
tp11910
I6
s(g2390
I42
g2391
Vinsert
p11911
I83
VModifier: final
p11912
tp11913
I2
s(g11370
I42
g11371
Vinsert
p11914
I66
VTextElement: <p>
p11915
tp11916
I2
s(g2804
I42
g2805
Vinsert
p11917
I45
VStringLiteral: ".unusedStubbingThatQualifiesForWarning("
p11918
tp11919
I1
s(g3016
I42
g3017
Vinsert
p11920
I32
VMethodInvocation
p11921
tp11922
I3
s(g5690
I42
g5691
Vinsert
p11923
I33
VNullLiteral
p11924
tp11925
I2
s(Vinsert
p11926
I42
VSimpleName: withCodeSourceUrls
p11927
Vinsert
p11928
I32
VMethodInvocation
p11929
tp11930
I8
s(g4051
I42
g4052
Vinsert
p11931
I14
VClassInstanceCreation
p11932
tp11933
I2
s(Vinsert
p11934
I42
VSimpleName: verify
p11935
Vinsert
p11936
I42
VSimpleName: otherMethod
p11937
tp11938
I1
s(g395
I42
g396
Vinsert
p11939
I44
VSingleVariableDeclaration
p11940
tp11941
I1
s(Vinsert
p11942
I42
VSimpleName: remove
p11943
Vinsert
p11944
I42
VSimpleName: classes
p11945
tp11946
I3
s(g1886
I42
g1887
Vinsert
p11947
I59
VVariableDeclarationFragment
p11948
tp11949
I2
s(g4393
I42
g4394
Vinsert
p11950
I39
VPrimitiveType: int
p11951
tp11952
I1
s(g11626
I42
g11627
Vinsert
p11953
I42
VSimpleName: mock
p11954
tp11955
I1
s(Vinsert
p11956
I42
VSimpleName: isEqualTo
p11957
Vinsert
p11958
I42
VSimpleName: assertThat
p11959
tp11960
I2
s(Vinsert
p11961
I42
VSimpleName: isSurrogate
p11962
Vinsert
p11963
I32
VMethodInvocation
p11964
tp11965
I2
s(g21
I42
g22
Vinsert
p11966
I8
VBlock
p11967
tp11968
I1
s(g3991
I42
g3992
Vinsert
p11969
I32
VMethodInvocation
p11970
tp11971
I6
s(g11667
I42
g11668
Vinsert
p11972
I53
VThrowStatement
p11973
tp11974
I1
s(g9706
I42
g9707
Vinsert
p11975
I42
VSimpleName: SelfDescribing
p11976
tp11977
I2
s(g2113
I42
g2114
Vinsert
p11978
I42
VSimpleName: HasStackTrace
p11979
tp11980
I1
s(g9239
I42
g9240
Vinsert
p11981
I85
VDimension
p11982
tp11983
I1
s(Vinsert
p11984
I42
VSimpleName: concat
p11985
Vinsert
p11986
I5
VArrayType: Class<?>[]
p11987
tp11988
I1
s(g1780
I42
g1781
Vinsert
p11989
I42
VSimpleName: shouldBeAbleToRetrieveMethodExceptionTypes
p11990
tp11991
I1
s(g1327
I42
g1328
Vinsert
p11992
I42
VSimpleName: MockUtil
p11993
tp11994
I4
s(Vinsert
p11995
I42
VSimpleName: args
p11996
Vinsert
p11997
I34
VNumberLiteral: 2
p11998
tp11999
I1
s(Vinsert
p12000
I42
VSimpleName: isInstance
p12001
Vinsert
p12002
I44
VSingleVariableDeclaration
p12003
tp12004
I2
s(g10053
I42
g10054
Vinsert
p12005
I42
VSimpleName: equal
p12006
tp12007
I1
s(g926
I42
g927
Vinsert
p12008
I54
VTryStatement
p12009
tp12010
I1
s(g4968
I42
g4969
Vinsert
p12011
I42
VSimpleName: MockitoMethod
p12012
tp12013
I1
s(g3293
I42
g3294
Vinsert
p12014
I44
VSingleVariableDeclaration
p12015
tp12016
I1
s(Vinsert
p12017
I42
VSimpleName: add
p12018
Vinsert
p12019
I42
VSimpleName: atLeast
p12020
tp12021
I5
s(g2118
I42
g2119
Vinsert
p12022
I42
VSimpleName: Primitives
p12023
tp12024
I2
s(g8057
I42
g8058
Vinsert
p12025
I42
VSimpleName: doAssert
p12026
tp12027
I1
s(g1372
I42
g1373
Vinsert
p12028
I42
VSimpleName: StrictStubsPassing
p12029
tp12030
I1
s(g5180
I42
g5181
Vinsert
p12031
I83
VModifier: private
p12032
tp12033
I1
s(g9224
I42
g9225
Vinsert
p12034
I39
VPrimitiveType: boolean
p12035
tp12036
I1
s(g8011
I42
g8012
Vinsert
p12037
I45
VStringLiteral: "stubbed with those args here:   "
p12038
tp12039
I1
s(g11336
I42
g11337
Vinsert
p12040
I59
VVariableDeclarationFragment
p12041
tp12042
I1
s(g5879
I42
g5880
Vinsert
p12043
I42
VSimpleName: t
p12044
tp12045
I8
s(Vinsert
p12046
I42
VSimpleName: hasNext
p12047
Vinsert
p12048
I42
VSimpleName: i
p12049
tp12050
I5
s(g159
I42
g160
Vinsert
p12051
I42
VSimpleName: ensure_annotated_fields_are_instantiated
p12052
tp12053
I1
s(g1493
I42
g1494
Vinsert
p12054
I11
VCastExpression
p12055
tp12056
I1
s(g6334
I42
g6335
Vinsert
p12057
I32
VMethodInvocation
p12058
tp12059
I2
s(g2095
I42
g2096
Vinsert
p12060
I34
VNumberLiteral: 0L
p12061
tp12062
I2
s(g7282
I42
g7283
Vinsert
p12063
I42
VSimpleName: toRevision
p12064
tp12065
I1
s(Vinsert
p12066
I42
VSimpleName: getMessage
p12067
Vinsert
p12068
I42
VSimpleName: assertThat
p12069
tp12070
I10
s(Vinsert
p12071
I42
VSimpleName: contains
p12072
Vinsert
p12073
I42
VSimpleName: substring
p12074
tp12075
I1
s(g10180
I42
g10181
Vinsert
p12076
I43
VSimpleType: String
p12077
tp12078
I1
s(g1548
I42
g1549
Vinsert
p12079
I21
VExpressionStatement
p12080
tp12081
I1
s(g4017
I42
g4018
Vinsert
p12082
I42
VSimpleName: anotherListOfInteger
p12083
tp12084
I2
s(g9734
I42
g9735
Vinsert
p12085
I42
VSimpleName: join
p12086
tp12087
I2
s(g10777
I42
g10778
Vinsert
p12088
I83
VModifier: static
p12089
tp12090
I1
s(g1044
I42
g1045
Vinsert
p12091
I42
VSimpleName: VerificationModeFactory
p12092
tp12093
I1
s(g11612
I42
g11613
Vinsert
p12094
I14
VClassInstanceCreation
p12095
tp12096
I1
s(Vinsert
p12097
I42
VSimpleName: notAMockPassedToVerifyNoMoreInteractions
p12098
Vinsert
p12099
I12
VCatchClause
p12100
tp12101
I1
s(g3621
I42
g3622
Vinsert
p12102
I11
VCastExpression
p12103
tp12104
I1
s(g1380
I42
g1381
Vinsert
p12105
I45
VStringLiteral: "  2. mock.simpleMethod(30);\u005cn"
p12106
tp12107
I1
s(Vinsert
p12108
I42
VSimpleName: run
p12109
Vinsert
p12110
I60
VVariableDeclarationStatement
p12111
tp12112
I2
s(g7004
I42
g7005
Vinsert
p12113
I45
VStringLiteral: "oompa"
p12114
tp12115
I1
s(g2753
I42
g2754
Vinsert
p12116
I45
VStringLiteral: " (see javadoc for MockitoHint):"
p12117
tp12118
I1
s(g5768
I42
g5769
Vinsert
p12119
I43
VSimpleType: A
p12120
tp12121
I1
s(Vinsert
p12122
I42
VSimpleName: format
p12123
Vinsert
p12124
I45
VStringLiteral: "The method %1$s.%2$s is probably private or protected and cannot be mocked."
p12125
tp12126
I1
s(g12046
I42
g12047
Vinsert
p12127
I42
VSimpleName: objectsLength
p12128
tp12129
I2
s(g4184
I42
g4185
Vinsert
p12130
I42
VSimpleName: clazz
p12131
tp12132
I1
s(Vinsert
p12133
I42
VSimpleName: add
p12134
Vinsert
p12135
I43
VSimpleType: V
p12136
tp12137
I1
s(Vinsert
p12138
I42
VSimpleName: length
p12139
Vinsert
p12140
I42
VSimpleName: ByteVector
p12141
tp12142
I1
s(g8358
I42
g8359
Vinsert
p12143
I45
VStringLiteral: "new message\u005cnoriginal message"
p12144
tp12145
I1
s(g11177
I42
g11178
Vinsert
p12146
I42
VSimpleName: mocks
p12147
tp12148
I1
s(Vinsert
p12149
I42
VSimpleName: getSuperclass
p12150
Vinsert
p12151
I42
VSimpleName: InstantationException
p12152
tp12153
I1
s(Vinsert
p12154
I42
VSimpleName: returnFor
p12155
Vinsert
p12156
I42
VSimpleName: Class
p12157
tp12158
I1
s(g11956
I42
g11957
Vinsert
p12159
I42
VSimpleName: bar
p12160
tp12161
I1
s(g10185
I42
g10186
Vinsert
p12162
I42
VSimpleName: Override
p12163
tp12164
I3
s(g806
I42
g807
Vinsert
p12165
I42
VSimpleName: methods
p12166
tp12167
I1
s(g2815
I42
g2816
Vinsert
p12168
I42
VSimpleName: Or
p12169
tp12170
I1
s(g5305
I42
g5306
Vinsert
p12171
I42
VSimpleName: desc
p12172
tp12173
I1
s(g6867
I42
g6868
Vinsert
p12174
I42
VSimpleName: methodNameEquals
p12175
tp12176
I1
s(g2657
I42
g2658
Vinsert
p12177
I42
VSimpleName: maxStack
p12178
tp12179
I1
s(g10921
I42
g10922
Vinsert
p12180
I42
VSimpleName: trace
p12181
tp12182
I3
s(Vinsert
p12183
I42
VSimpleName: isSerializable
p12184
Vinsert
p12185
I42
VSimpleName: MethodProxy
p12186
tp12187
I1
s(Vinsert
p12188
I42
VSimpleName: initMocks
p12189
Vinsert
p12190
I7
VAssignment: =
p12191
tp12192
I3
s(Vinsert
p12193
I42
VSimpleName: getName
p12194
Vinsert
p12195
I29
VJavadoc
p12196
tp12197
I1
s(g1637
I42
g1638
Vinsert
p12198
I40
VQualifiedName: Any.ANY
p12199
tp12200
I1
s(g1039
I42
g1040
Vinsert
p12201
I43
VSimpleType: Object
p12202
tp12203
I1
s(g7806
I42
g7807
Vinsert
p12204
I27
VInfixExpression: ==
p12205
tp12206
I1
s(g4461
I42
g4462
Vinsert
p12207
I42
VSimpleName: Article
p12208
tp12209
I4
s(g4696
I42
g4697
Vinsert
p12210
I42
VSimpleName: VerificationData
p12211
tp12212
I2
s(Vinsert
p12213
I42
VSimpleName: addAll
p12214
Vinsert
p12215
I43
VSimpleType: ReachableClassesFinder
p12216
tp12217
I1
s(g5431
I42
g5432
Vinsert
p12218
I22
VFieldAccess
p12219
tp12220
I1
s(Vinsert
p12221
I42
VSimpleName: isAnnotationPresent
p12222
Vinsert
p12223
I43
VSimpleType: Field
p12224
tp12225
I1
s(Vinsert
p12226
I42
VSimpleName: add
p12227
Vinsert
p12228
I42
VSimpleName: To
p12229
tp12230
I1
s(Vinsert
p12231
I42
VSimpleName: getType
p12232
Vinsert
p12233
I42
VSimpleName: field
p12234
tp12235
I5
s(g4204
I42
g4205
Vinsert
p12236
I42
VSimpleName: Test
p12237
tp12238
I4
s(g5321
I42
g5322
Vinsert
p12239
I83
VModifier: public
p12240
tp12241
I1
s(g10651
I42
g10652
Vinsert
p12242
I8
VBlock
p12243
tp12244
I1
s(Vinsert
p12245
I42
VSimpleName: isNull
p12246
Vinsert
p12247
I8
VBlock
p12248
tp12249
I4
s(g2652
I42
g2653
Vinsert
p12250
I60
VVariableDeclarationStatement
p12251
tp12252
I1
s(g6217
I42
g6218
Vinsert
p12253
I32
VMethodInvocation
p12254
tp12255
I3
s(Vinsert
p12256
I42
VSimpleName: mock
p12257
Vinsert
p12258
I42
VSimpleName: HasPrivateConstructor
p12259
tp12260
I1
s(g7379
I42
g7380
Vinsert
p12261
I60
VVariableDeclarationStatement
p12262
tp12263
I2
s(g6791
I42
g6792
Vinsert
p12264
I42
VSimpleName: withAlias
p12265
tp12266
I1
s(Vinsert
p12267
I42
VSimpleName: append
p12268
Vinsert
p12269
I42
VSimpleName: access
p12270
tp12271
I1
s(g7091
I42
g7092
Vinsert
p12272
I45
VStringLiteral: " sub matchers expected, "
p12273
tp12274
I1
s(g3812
I42
g3813
Vinsert
p12275
I42
VSimpleName: method
p12276
tp12277
I7
s(g10851
I42
g10852
Vinsert
p12278
I8
VBlock
p12279
tp12280
I1
s(g10226
I42
g10227
Vinsert
p12281
I42
VSimpleName: Test
p12282
tp12283
I1
s(g5921
I42
g5922
Vinsert
p12284
I43
VSimpleType: IllegalArgumentException
p12285
tp12286
I2
s(Vinsert
p12287
I42
VSimpleName: lastThrowable
p12288
Vinsert
p12289
I42
VSimpleName: run
p12290
tp12291
I1
s(g1431
I42
g1432
Vinsert
p12292
I74
VParameterizedType: List<StackTraceElement>
p12293
tp12294
I1
s(g2271
I42
g2272
Vinsert
p12295
I31
VMethodDeclaration
p12296
tp12297
I1
s(g3331
I42
g3332
Vinsert
p12298
I43
VSimpleType: Reporter
p12299
tp12300
I1
s(g9390
I42
g9391
Vinsert
p12301
I42
VSimpleName: get
p12302
tp12303
I2
s(Vinsert
p12304
I42
VSimpleName: asList
p12305
Vinsert
p12306
I42
VSimpleName: Boolean
p12307
tp12308
I2
s(g5975
I42
g5976
Vinsert
p12309
I42
VSimpleName: shouldVerifyWithNullVarArgArray
p12310
tp12311
I1
s(g1
I42
g2
Vinsert
p12312
I60
VVariableDeclarationStatement
p12313
tp12314
I1
s(g7057
I42
g7058
Vinsert
p12315
I74
VParameterizedType: LinkedList<ReleaseStep>
p12316
tp12317
I1
s(Vinsert
p12318
I42
VSimpleName: toString
p12319
Vinsert
p12320
I42
VSimpleName: Arrays
p12321
tp12322
I4
s(g352
I42
g353
Vinsert
p12323
I74
VParameterizedType: LinkedList<Object>
p12324
tp12325
I1
s(Vinsert
p12326
I42
VSimpleName: emptyList
p12327
Vinsert
p12328
I43
VSimpleType: List
p12329
tp12330
I1
s(g8255
I42
g8256
Vinsert
p12331
I53
VThrowStatement
p12332
tp12333
I1
s(g5305
I42
g5306
Vinsert
p12334
I42
VSimpleName: exceptions
p12335
tp12336
I1
s(Vinsert
p12337
I42
VSimpleName: objectArgMethod
p12338
Vinsert
p12339
I42
VSimpleName: mock
p12340
tp12341
I6
s(g4981
I42
g4982
Vinsert
p12342
I42
VSimpleName: StackTraceCleanerProvider
p12343
tp12344
I1
s(g8746
I42
g8747
Vinsert
p12345
I42
VSimpleName: Invocation
p12346
tp12347
I1
s(g10393
I42
g10394
Vinsert
p12348
I2
VArrayAccess
p12349
tp12350
I1
s(g4817
I42
g4818
Vinsert
p12351
I43
VSimpleType: Returns
p12352
tp12353
I1
s(Vinsert
p12354
I42
VSimpleName: visitMethodInsn
p12355
Vinsert
p12356
I83
VModifier: public
p12357
tp12358
I1
s(g5544
I42
g5545
Vinsert
p12359
I44
VSingleVariableDeclaration
p12360
tp12361
I9
s(Vinsert
p12362
I42
VSimpleName: getJavaMethod
p12363
Vinsert
p12364
I31
VMethodDeclaration
p12365
tp12366
I1
s(g9721
I42
g9722
Vinsert
p12367
I43
VSimpleType: VerificationMode
p12368
tp12369
I1
s(Vinsert
p12370
I42
VSimpleName: getMethodProxy
p12371
Vinsert
p12372
I43
VSimpleType: MethodProxy
p12373
tp12374
I1
s(g6077
I42
g6078
Vinsert
p12375
I32
VMethodInvocation
p12376
tp12377
I4
s(g262
I42
g263
Vinsert
p12378
I36
VParenthesizedExpression
p12379
tp12380
I2
s(g7931
I42
g7932
Vinsert
p12381
I42
VSimpleName: doThrow
p12382
tp12383
I1
s(g7931
I42
g7932
Vinsert
p12384
I42
VSimpleName: Class
p12385
tp12386
I1
s(g6403
I42
g6404
Vinsert
p12387
I1
VAnonymousClassDeclaration
p12388
tp12389
I1
s(Vinsert
p12390
I42
VSimpleName: format
p12391
Vinsert
p12392
I8
VBlock
p12393
tp12394
I1
s(g3144
I42
g3145
Vinsert
p12395
I43
VSimpleType: String
p12396
tp12397
I1
s(g3493
I42
g3494
Vinsert
p12398
I45
VStringLiteral: "\u005c"(String) x\u005c""
p12399
tp12400
I1
s(g5078
I42
g5079
Vinsert
p12401
I39
VPrimitiveType: int
p12402
tp12403
I2
s(g169
I42
g170
Vinsert
p12404
I78
VMarkerAnnotation
p12405
tp12406
I1
s(g891
I42
g892
Vinsert
p12407
I42
VSimpleName: createUndesiredInvocationCause
p12408
tp12409
I1
s(g267
I42
g268
Vinsert
p12410
I42
VSimpleName: wanted
p12411
tp12412
I1
s(g3421
I42
g3422
Vinsert
p12413
I29
VJavadoc
p12414
tp12415
I1
s(g5986
I42
g5987
Vinsert
p12416
I42
VSimpleName: data
p12417
tp12418
I2
s(g10992
I42
g10993
Vinsert
p12419
I59
VVariableDeclarationFragment
p12420
tp12421
I1
s(Vinsert
p12422
I42
VSimpleName: filter
p12423
Vinsert
p12424
I42
VSimpleName: ListUtil
p12425
tp12426
I3
s(Vinsert
p12427
I42
VSimpleName: getSort
p12428
Vinsert
p12429
I36
VParenthesizedExpression
p12430
tp12431
I1
s(g292
I42
g293
Vinsert
p12432
I43
VSimpleType: Exception
p12433
tp12434
I2
s(g4611
I42
g4612
Vinsert
p12435
I42
VSimpleName: mixedVarargs
p12436
tp12437
I2
s(g6669
I42
g6670
Vinsert
p12438
I31
VMethodDeclaration
p12439
tp12440
I1
s(g946
I42
g947
Vinsert
p12441
I14
VClassInstanceCreation
p12442
tp12443
I1
s(Vinsert
p12444
I42
VSimpleName: useConstructor
p12445
Vinsert
p12446
I42
VSimpleName: u
p12447
tp12448
I1
s(Vinsert
p12449
I42
VSimpleName: add
p12450
Vinsert
p12451
I39
VPrimitiveType: char
p12452
tp12453
I1
s(g3864
I42
g3865
Vinsert
p12454
I42
VSimpleName: mv
p12455
tp12456
I3
s(g4305
I42
g4306
Vinsert
p12457
I59
VVariableDeclarationFragment
p12458
tp12459
I1
s(g568
I42
g569
Vinsert
p12460
I43
VSimpleType: SpyOnInjectedFieldsHandler
p12461
tp12462
I1
s(g6882
I42
g6883
Vinsert
p12463
I74
VParameterizedType: Set<Class>
p12464
tp12465
I1
s(g5660
I42
g5661
Vinsert
p12466
I59
VVariableDeclarationFragment
p12467
tp12468
I2
s(g4330
I42
g4331
Vinsert
p12469
I42
VSimpleName: control
p12470
tp12471
I1
s(g1234
I42
g1235
Vinsert
p12472
I42
VSimpleName: getModifiers
p12473
tp12474
I1
s(g3743
I42
g3744
Vinsert
p12475
I44
VSingleVariableDeclaration
p12476
tp12477
I2
s(g6148
I42
g6149
Vinsert
p12478
I42
VSimpleName: can_get_raw_type
p12479
tp12480
I1
s(g4730
I42
g4731
Vinsert
p12481
I42
VSimpleName: Set
p12482
tp12483
I1
s(g5921
I42
g5922
Vinsert
p12484
I42
VSimpleName: IllegalArgumentException
p12485
tp12486
I2
s(g5622
I42
g5623
Vinsert
p12487
I42
VSimpleName: getName
p12488
tp12489
I1
s(g2536
I42
g2537
Vinsert
p12490
I59
VVariableDeclarationFragment
p12491
tp12492
I1
s(g9614
I42
g9615
Vinsert
p12493
I31
VMethodDeclaration
p12494
tp12495
I11
s(g9884
I42
g9885
Vinsert
p12496
I14
VClassInstanceCreation
p12497
tp12498
I1
s(g3400
I42
g3401
Vinsert
p12499
I42
VSimpleName: contains
p12500
tp12501
I2
s(g5480
I42
g5481
Vinsert
p12502
I42
VSimpleName: verify
p12503
tp12504
I10
s(g3743
I42
g3744
Vinsert
p12505
I42
VSimpleName: InvocationMatcher
p12506
tp12507
I1
s(Vinsert
p12508
I42
VSimpleName: returnSet
p12509
Vinsert
p12510
I66
VTextElement:  empty Set
p12511
tp12512
I1
s(g5512
I42
g5513
Vinsert
p12513
I59
VVariableDeclarationFragment
p12514
tp12515
I1
s(g3924
I42
g3925
Vinsert
p12516
I42
VSimpleName: mode
p12517
tp12518
I1
s(g1189
I42
g1190
Vinsert
p12519
I43
VSimpleType: ContainsX
p12520
tp12521
I1
s(g5305
I42
g5306
Vinsert
p12522
I42
VSimpleName: MethodList
p12523
tp12524
I1
s(g9139
I42
g9140
Vinsert
p12525
I42
VSimpleName: T
p12526
tp12527
I7
s(Vinsert
p12528
I42
VSimpleName: get
p12529
Vinsert
p12530
I42
VSimpleName: globalConfiguration
p12531
tp12532
I4
s(g9721
I42
g9722
Vinsert
p12533
I42
VSimpleName: VerificationMode
p12534
tp12535
I1
s(Vinsert
p12536
I42
VSimpleName: when
p12537
Vinsert
p12538
I60
VVariableDeclarationStatement
p12539
tp12540
I3
s(g94
I42
g95
Vinsert
p12541
I39
VPrimitiveType: void
p12542
tp12543
I20
s(g2336
I42
g2337
Vinsert
p12544
I8
VBlock
p12545
tp12546
I1
s(g4590
I42
g4591
Vinsert
p12547
I66
VTextElement: The injection engine will handle this specific case.
p12548
tp12549
I1
s(g5916
I42
g5917
Vinsert
p12550
I32
VMethodInvocation
p12551
tp12552
I2
s(Vinsert
p12553
I42
VSimpleName: put
p12554
Vinsert
p12555
I42
VSimpleName: callback
p12556
tp12557
I1
s(g3570
I42
g3571
Vinsert
p12558
I42
VSimpleName: comparable_bound_of_typevar_K_referenced_by_typevar_O
p12559
tp12560
I1
s(Vinsert
p12561
I42
VSimpleName: getAllMocksToBeVerifiedInSequence
p12562
Vinsert
p12563
I52
VThisExpression
p12564
tp12565
I1
s(Vinsert
p12566
I42
VSimpleName: getName
p12567
Vinsert
p12568
I42
VSimpleName: mockCandidates
p12569
tp12570
I3
s(g8724
I42
g8725
Vinsert
p12571
I41
VReturnStatement
p12572
tp12573
I1
s(Vinsert
p12574
I42
VSimpleName: get
p12575
Vinsert
p12576
I42
VSimpleName: AnnotationEngine
p12577
tp12578
I1
s(g8210
I42
g8211
Vinsert
p12579
I42
VSimpleName: ParameterizedType
p12580
tp12581
I1
s(g608
I42
g609
Vinsert
p12582
I32
VMethodInvocation
p12583
tp12584
I3
s(g6988
I42
g6989
Vinsert
p12585
I42
VSimpleName: simpleMethodInvocationTwo
p12586
tp12587
I1
s(g11514
I42
g11515
Vinsert
p12588
I42
VSimpleName: List
p12589
tp12590
I1
s(g1115
I42
g1116
Vinsert
p12591
I42
VSimpleName: classes
p12592
tp12593
I2
s(g1292
I42
g1293
Vinsert
p12594
I83
VModifier: public
p12595
tp12596
I2
s(g6582
I42
g6583
Vinsert
p12597
I42
VSimpleName: hacker
p12598
tp12599
I1
s(g10415
I42
g10416
Vinsert
p12600
I42
VSimpleName: Field
p12601
tp12602
I8
s(g8226
I42
g8227
Vinsert
p12603
I42
VSimpleName: Iterable
p12604
tp12605
I1
s(Vinsert
p12606
I42
VSimpleName: onVerification
p12607
Vinsert
p12608
I42
VSimpleName: event
p12609
tp12610
I1
s(g3542
I42
g3543
Vinsert
p12611
I43
VSimpleType: AssertionError
p12612
tp12613
I1
s(g7526
I42
g7527
Vinsert
p12614
I60
VVariableDeclarationStatement
p12615
tp12616
I1
s(g5201
I42
g5202
Vinsert
p12617
I32
VMethodInvocation
p12618
tp12619
I2
s(g9334
I42
g9335
Vinsert
p12620
I43
VSimpleType: InvocationTargetException
p12621
tp12622
I1
s(g1069
I42
g1070
Vinsert
p12623
I42
VSimpleName: stubbed
p12624
tp12625
I1
s(g8126
I42
g8127
Vinsert
p12626
I42
VSimpleName: e
p12627
tp12628
I2
s(g9224
I42
g9225
Vinsert
p12629
I40
VQualifiedName: Locale.US
p12630
tp12631
I1
s(g2000
I42
g2001
Vinsert
p12632
I42
VSimpleName: validateSerializable
p12633
tp12634
I1
s(Vinsert
p12635
I42
VSimpleName: asList
p12636
Vinsert
p12637
I42
VSimpleName: Long
p12638
tp12639
I1
s(g4638
I42
g4639
Vinsert
p12640
I42
VSimpleName: Bar
p12641
tp12642
I2
s(g548
I42
g549
Vinsert
p12643
I42
VSimpleName: getReturnValues
p12644
tp12645
I1
s(g6468
I42
g6469
Vinsert
p12646
I78
VMarkerAnnotation
p12647
tp12648
I21
s(Vinsert
p12649
I42
VSimpleName: floatValue
p12650
Vinsert
p12651
I41
VReturnStatement
p12652
tp12653
I1
s(g4981
I42
g4982
Vinsert
p12654
I42
VSimpleName: stackTraceCleanerProvider
p12655
tp12656
I1
s(g801
I42
g802
Vinsert
p12657
I60
VVariableDeclarationStatement
p12658
tp12659
I2
s(Vinsert
p12660
I42
VSimpleName: initMocks
p12661
Vinsert
p12662
I42
VSimpleName: getMessage
p12663
tp12664
I1
s(Vinsert
p12665
I42
VSimpleName: reportMatcher
p12666
Vinsert
p12667
I83
VModifier: static
p12668
tp12669
I2
s(g5439
I42
g5440
Vinsert
p12670
I74
VParameterizedType: LinkedHashSet<String>
p12671
tp12672
I1
s(g12635
I42
g12636
Vinsert
p12673
I42
VSimpleName: matchers
p12674
tp12675
I1
s(g737
I42
g738
Vinsert
p12676
I83
VModifier: static
p12677
tp12678
I2
s(g563
I42
g564
Vinsert
p12679
I41
VReturnStatement
p12680
tp12681
I13
s(g1739
I42
g1740
Vinsert
p12682
I42
VSimpleName: Invocation
p12683
tp12684
I2
s(g7619
I42
g7620
Vinsert
p12685
I42
VSimpleName: Person
p12686
tp12687
I2
s(g5335
I42
g5336
Vinsert
p12688
I42
VSimpleName: evaluate
p12689
tp12690
I2
s(g8528
I42
g8529
Vinsert
p12691
I25
VIfStatement
p12692
tp12693
I10
s(Vinsert
p12694
I42
VSimpleName: withClassDefinition
p12695
Vinsert
p12696
I43
VSimpleType: Object
p12697
tp12698
I1
s(g3308
I42
g3309
Vinsert
p12699
I42
VSimpleName: invocation
p12700
tp12701
I2
s(g2743
I42
g2744
Vinsert
p12702
I43
VSimpleType: ArgumentMatchingTool
p12703
tp12704
I1
s(Vinsert
p12705
I42
VSimpleName: entrySet
p12706
Vinsert
p12707
I42
VSimpleName: Iterator
p12708
tp12709
I1
s(Vinsert
p12710
I42
VSimpleName: getMethod
p12711
Vinsert
p12712
I43
VSimpleType: CallsRealMethods
p12713
tp12714
I1
s(Vinsert
p12715
I42
VSimpleName: createMock
p12716
Vinsert
p12717
I42
VSimpleName: mockMaker
p12718
tp12719
I5
s(g11214
I42
g11215
Vinsert
p12720
I44
VSingleVariableDeclaration
p12721
tp12722
I1
s(g6924
I42
g6925
Vinsert
p12723
I42
VSimpleName: methodProxy
p12724
tp12725
I1
s(Vinsert
p12726
I42
VSimpleName: reportInvocation
p12727
Vinsert
p12728
I42
VSimpleName: invocation
p12729
tp12730
I1
s(g568
I42
g569
Vinsert
p12731
I42
VSimpleName: postInjectionStrategies
p12732
tp12733
I1
s(g2611
I42
g2612
Vinsert
p12734
I83
VModifier: public
p12735
tp12736
I1
s(Vinsert
p12737
I42
VSimpleName: foo
p12738
Vinsert
p12739
I43
VSimpleType: CallingSuperMethodClass
p12740
tp12741
I1
s(g12635
I42
g12636
Vinsert
p12742
I34
VNumberLiteral: 20
p12743
tp12744
I1
s(g1508
I42
g1509
Vinsert
p12745
I42
VSimpleName: Before
p12746
tp12747
I1
s(g89
I42
g90
Vinsert
p12748
I42
VSimpleName: simpleMethod
p12749
tp12750
I2
s(g543
I42
g544
Vinsert
p12751
I45
VStringLiteral: "  outer class: '"
p12752
tp12753
I1
s(g7564
I42
g7565
Vinsert
p12754
I32
VMethodInvocation
p12755
tp12756
I1
s(g4577
I42
g4578
Vinsert
p12757
I43
VSimpleType: Answer
p12758
tp12759
I2
s(g4138
I42
g4139
Vinsert
p12760
I32
VMethodInvocation
p12761
tp12762
I4
s(g8283
I42
g8284
Vinsert
p12763
I42
VSimpleName: SampleClass
p12764
tp12765
I2
s(g10539
I42
g10540
Vinsert
p12766
I43
VSimpleType: Class
p12767
tp12768
I1
s(Vinsert
p12769
I42
VSimpleName: getClass
p12770
Vinsert
p12771
I44
VSingleVariableDeclaration
p12772
tp12773
I10
s(g1347
I42
g1348
Vinsert
p12774
I42
VSimpleName: mocks
p12775
tp12776
I4
s(Vinsert
p12777
I42
VSimpleName: interfaceBounds
p12778
Vinsert
p12779
I42
VSimpleName: length
p12780
tp12781
I1
s(Vinsert
p12782
I42
VSimpleName: lock
p12783
Vinsert
p12784
I54
VTryStatement
p12785
tp12786
I1
s(g10265
I42
g10266
Vinsert
p12787
I42
VSimpleName: classToSpy
p12788
tp12789
I1
s(g2237
I42
g2238
Vinsert
p12790
I57
VTypeLiteral
p12791
tp12792
I1
s(g468
I42
g469
Vinsert
p12793
I42
VSimpleName: T
p12794
tp12795
I2
s(g119
I42
g120
Vinsert
p12796
I83
VModifier: public
p12797
tp12798
I1
s(Vinsert
p12799
I42
VSimpleName: isDirectory
p12800
Vinsert
p12801
I60
VVariableDeclarationStatement
p12802
tp12803
I1
s(Vinsert
p12804
I42
VSimpleName: assumeTrue
p12805
Vinsert
p12806
I42
VSimpleName: only_if_CglibMockMaker
p12807
tp12808
I1
s(Vinsert
p12809
I42
VSimpleName: getBytes
p12810
Vinsert
p12811
I83
VModifier: private
p12812
tp12813
I1
s(g1011
I42
g1012
Vinsert
p12814
I32
VMethodInvocation
p12815
tp12816
I1
s(g6379
I42
g6380
Vinsert
p12817
I8
VBlock
p12818
tp12819
I1
s(g3006
I42
g3007
Vinsert
p12820
I42
VSimpleName: getMethod
p12821
tp12822
I1
s(g2978
I42
g2979
Vinsert
p12823
I42
VSimpleName: String
p12824
tp12825
I7
s(g3812
I42
g3813
Vinsert
p12826
I85
VDimension
p12827
tp12828
I4
s(g1906
I42
g1907
Vinsert
p12829
I4
VArrayInitializer
p12830
tp12831
I2
s(Vinsert
p12832
I42
VSimpleName: verify
p12833
Vinsert
p12834
I42
VSimpleName: NotAMockException
p12835
tp12836
I1
s(g312
I42
g313
Vinsert
p12837
I7
VAssignment: =
p12838
tp12839
I1
s(g7798
I42
g7799
Vinsert
p12840
I42
VSimpleName: Result
p12841
tp12842
I1
s(g3935
I42
g3936
Vinsert
p12843
I83
VModifier: public
p12844
tp12845
I1
s(Vinsert
p12846
I42
VSimpleName: getReturnType
p12847
Vinsert
p12848
I2
VArrayAccess
p12849
tp12850
I1
s(g11757
I42
g11758
Vinsert
p12851
I21
VExpressionStatement
p12852
tp12853
I7
s(g4730
I42
g4731
Vinsert
p12854
I43
VSimpleType: Exception
p12855
tp12856
I1
s(g9271
I42
g9272
Vinsert
p12857
I40
VQualifiedName: VerificationStartedNotifier.Event
p12858
tp12859
I2
s(g5211
I42
g5212
Vinsert
p12860
I45
VStringLiteral: "No more interactions expected on IMethods but found: IMethods.oneArg(false)"
p12861
tp12862
I1
s(g1838
I42
g1839
Vinsert
p12863
I54
VTryStatement
p12864
tp12865
I1
s(g996
I42
g997
Vinsert
p12866
I57
VTypeLiteral
p12867
tp12868
I1
s(g8504
I42
g8505
Vinsert
p12869
I42
VSimpleName: zeroBasedIndex
p12870
tp12871
I1
s(Vinsert
p12872
I42
VSimpleName: withLong
p12873
Vinsert
p12874
I42
VSimpleName: boo
p12875
tp12876
I4
s(Vinsert
p12877
I42
VSimpleName: mock
p12878
Vinsert
p12879
I42
VSimpleName: ref
p12880
tp12881
I1
s(g3413
I42
g3414
Vinsert
p12882
I32
VMethodInvocation
p12883
tp12884
I25
s(Vinsert
p12885
I42
VSimpleName: extraInterfaces
p12886
Vinsert
p12887
I43
VSimpleType: MockSettingsImpl
p12888
tp12889
I1
s(Vinsert
p12890
I42
VSimpleName: instanceFields
p12891
Vinsert
p12892
I42
VSimpleName: filter
p12893
tp12894
I1
s(g12777
I42
g12778
Vinsert
p12895
I42
VSimpleName: boundedType
p12896
tp12897
I2
s(g709
I42
g710
Vinsert
p12898
I54
VTryStatement
p12899
tp12900
I1
s(g9781
I42
g9782
Vinsert
p12901
I42
VSimpleName: Logger
p12902
tp12903
I1
s(g3509
I42
g3510
Vinsert
p12904
I44
VSingleVariableDeclaration
p12905
tp12906
I3
s(g9179
I42
g9180
Vinsert
p12907
I45
VStringLiteral: "org.mockito.runners.Runner"
p12908
tp12909
I1
s(g7096
I42
g7097
Vinsert
p12910
I27
VInfixExpression: !=
p12911
tp12912
I2
s(g12256
I42
g12257
Vinsert
p12913
I83
VModifier: private
p12914
tp12915
I1
s(g3408
I42
g3409
Vinsert
p12916
I43
VSimpleType: InvalidUseOfMatchersException
p12917
tp12918
I1
s(g7735
I42
g7736
Vinsert
p12919
I42
VSimpleName: signature
p12920
tp12921
I2
s(Vinsert
p12922
I42
VSimpleName: contains
p12923
Vinsert
p12924
I42
VSimpleName: containsInvocationListener
p12925
tp12926
I1
s(g12566
I42
g12567
Vinsert
p12927
I7
VAssignment: =
p12928
tp12929
I1
s(g2552
I42
g2553
Vinsert
p12930
I42
VSimpleName: captor
p12931
tp12932
I4
s(Vinsert
p12933
I42
VSimpleName: println
p12934
Vinsert
p12935
I42
VSimpleName: Foo
p12936
tp12937
I1
s(g6725
I42
g6726
Vinsert
p12938
I8
VBlock
p12939
tp12940
I1
s(Vinsert
p12941
I42
VSimpleName: equals
p12942
Vinsert
p12943
I42
VSimpleName: toString
p12944
tp12945
I1
s(g2131
I42
g2132
Vinsert
p12946
I43
VSimpleType: Stubber
p12947
tp12948
I2
s(g5408
I42
g5409
Vinsert
p12949
I43
VSimpleType: SubclassInjectionLoader
p12950
tp12951
I1
s(g3341
I42
g3342
Vinsert
p12952
I42
VSimpleName: invocationMatcher
p12953
tp12954
I1
s(Vinsert
p12955
I42
VSimpleName: validate
p12956
Vinsert
p12957
I31
VMethodDeclaration
p12958
tp12959
I1
s(Vinsert
p12960
I42
VSimpleName: simpleMethod
p12961
Vinsert
p12962
I42
VSimpleName: getName
p12963
tp12964
I1
s(g709
I42
g710
Vinsert
p12965
I40
VQualifiedName: java.io.InputStream
p12966
tp12967
I1
s(g7572
I42
g7573
Vinsert
p12968
I9
VBooleanLiteral: false
p12969
tp12970
I1
s(g6587
I42
g6588
Vinsert
p12971
I32
VMethodInvocation
p12972
tp12973
I4
s(g6195
I42
g6196
Vinsert
p12974
I42
VSimpleName: obj
p12975
tp12976
I1
s(Vinsert
p12977
I42
VSimpleName: toInvocation
p12978
Vinsert
p12979
I42
VSimpleName: shouldScreamWhenCallingRealMethodOnInterface
p12980
tp12981
I1
s(g9901
I42
g9902
Vinsert
p12982
I42
VSimpleName: e
p12983
tp12984
I1
s(g124
I42
g125
Vinsert
p12985
I85
VDimension
p12986
tp12987
I1
s(g1179
I42
g1180
Vinsert
p12988
I21
VExpressionStatement
p12989
tp12990
I80
s(g12508
I42
g12509
Vinsert
p12991
I42
VSimpleName: Matchers
p12992
tp12993
I1
s(Vinsert
p12994
I42
VSimpleName: verify
p12995
Vinsert
p12996
I42
VSimpleName: Override
p12997
tp12998
I2
s(g2031
I42
g2032
Vinsert
p12999
I32
VMethodInvocation
p13000
tp13001
I3
s(g4853
I42
g4854
Vinsert
p13002
I41
VReturnStatement
p13003
tp13004
I1
s(g9601
I42
g9602
Vinsert
p13005
I32
VMethodInvocation
p13006
tp13007
I2
s(g4755
I42
g4756
Vinsert
p13008
I42
VSimpleName: framework
p13009
tp13010
I1
s(g4973
I42
g4974
Vinsert
p13011
I21
VExpressionStatement
p13012
tp13013
I1
s(g2677
I42
g2678
Vinsert
p13014
I42
VSimpleName: enclosingMethodOwner
p13015
tp13016
I1
s(g9601
I42
g9602
Vinsert
p13017
I42
VSimpleName: Class
p13018
tp13019
I1
s(g5360
I42
g5361
Vinsert
p13020
I21
VExpressionStatement
p13021
tp13022
I1
s(Vinsert
p13023
I42
VSimpleName: enableAccess
p13024
Vinsert
p13025
I43
VSimpleType: IllegalAccessException
p13026
tp13027
I1
s(Vinsert
p13028
I42
VSimpleName: addListener
p13029
Vinsert
p13030
I42
VSimpleName: notifier
p13031
tp13032
I4
s(g2531
I42
g2532
Vinsert
p13033
I21
VExpressionStatement
p13034
tp13035
I1
s(g4372
I42
g4373
Vinsert
p13036
I45
VStringLiteral: "Cannot instantiate @InjectMocks field named '"
p13037
tp13038
I1
s(g3885
I42
g3886
Vinsert
p13039
I42
VSimpleName: shouldUseAssertor
p13040
tp13041
I1
s(Vinsert
p13042
I42
VSimpleName: getInvocations
p13043
Vinsert
p13044
I54
VTryStatement
p13045
tp13046
I2
s(g9252
I42
g9253
Vinsert
p13047
I59
VVariableDeclarationFragment
p13048
tp13049
I2
s(g12536
I42
g12537
Vinsert
p13050
I42
VSimpleName: exceptionMessage
p13051
tp13052
I1
s(Vinsert
p13053
I42
VSimpleName: asList
p13054
Vinsert
p13055
I52
VThisExpression
p13056
tp13057
I1
s(g10772
I42
g10773
Vinsert
p13058
I8
VBlock
p13059
tp13060
I1
s(g10368
I42
g10369
Vinsert
p13061
I43
VSimpleType: String
p13062
tp13063
I1
s(g10963
I42
g10964
Vinsert
p13064
I42
VSimpleName: InvocationMatcher
p13065
tp13066
I1
s(g1954
I42
g1955
Vinsert
p13067
I27
VInfixExpression: &&
p13068
tp13069
I1
s(g3224
I42
g3225
Vinsert
p13070
I45
VStringLiteral: "simpleMethod"
p13071
tp13072
I1
s(g7817
I42
g7818
Vinsert
p13073
I42
VSimpleName: Exception
p13074
tp13075
I2
s(g7780
I42
g7781
Vinsert
p13076
I43
VSimpleType: InvocationTargetException
p13077
tp13078
I4
s(Vinsert
p13079
I42
VSimpleName: reportMatcher
p13080
Vinsert
p13081
I42
VSimpleName: eq
p13082
tp13083
I1
s(g4474
I42
g4475
Vinsert
p13084
I14
VClassInstanceCreation
p13085
tp13086
I1
s(g946
I42
g947
Vinsert
p13087
I42
VSimpleName: MatchersPrinter
p13088
tp13089
I2
s(g1292
I42
g1293
Vinsert
p13090
I32
VMethodInvocation
p13091
tp13092
I2
s(g5604
I42
g5605
Vinsert
p13093
I42
VSimpleName: matcher
p13094
tp13095
I2
s(g9491
I42
g9492
Vinsert
p13096
I7
VAssignment: =
p13097
tp13098
I2
s(g5583
I42
g5584
Vinsert
p13099
I33
VNullLiteral
p13100
tp13101
I1
s(g1049
I42
g1050
Vinsert
p13102
I42
VSimpleName: runnerClass
p13103
tp13104
I1
s(g8434
I42
g8435
Vinsert
p13105
I42
VSimpleName: Method
p13106
tp13107
I2
s(g2526
I42
g2527
Vinsert
p13108
I43
VSimpleType: CapturesArguments
p13109
tp13110
I4
s(g4895
I42
g4896
Vinsert
p13111
I21
VExpressionStatement
p13112
tp13113
I1
s(Vinsert
p13114
I42
VSimpleName: find
p13115
Vinsert
p13116
I43
VSimpleType: Invocation
p13117
tp13118
I3
s(g6077
I42
g6078
Vinsert
p13119
I42
VSimpleName: value2
p13120
tp13121
I1
s(g4087
I42
g4088
Vinsert
p13122
I65
VTagElement: @param
p13123
tp13124
I1
s(g3996
I42
g3997
Vinsert
p13125
I41
VReturnStatement
p13126
tp13127
I1
s(g159
I42
g160
Vinsert
p13128
I42
VSimpleName: Test
p13129
tp13130
I2
s(g11699
I42
g11700
Vinsert
p13131
I32
VMethodInvocation
p13132
tp13133
I3
s(Vinsert
p13134
I42
VSimpleName: getMock
p13135
Vinsert
p13136
I42
VSimpleName: Invocation
p13137
tp13138
I2
s(Vinsert
p13139
I42
VSimpleName: returnNull
p13140
Vinsert
p13141
I40
VQualifiedName: NotNull.NOT_NULL
p13142
tp13143
I1
s(g5810
I42
g5811
Vinsert
p13144
I42
VSimpleName: shouldGetInternalStateFromHierarchy
p13145
tp13146
I1
s(g5316
I42
g5317
Vinsert
p13147
I43
VSimpleType: TestCreationListener
p13148
tp13149
I1
s(g5105
I42
g5106
Vinsert
p13150
I57
VTypeLiteral
p13151
tp13152
I1
s(Vinsert
p13153
I42
VSimpleName: simpleMethod
p13154
Vinsert
p13155
I40
VQualifiedName: org.mockito.RequiresValidState
p13156
tp13157
I1
s(g2881
I42
g2882
Vinsert
p13158
I8
VBlock
p13159
tp13160
I2
s(Vinsert
p13161
I42
VSimpleName: openStream
p13162
Vinsert
p13163
I42
VSimpleName: improvements
p13164
tp13165
I1
s(g3935
I42
g3936
Vinsert
p13166
I40
VQualifiedName: org.mockito.plugins.InstantiatorProvider
p13167
tp13168
I1
s(g1518
I42
g1519
Vinsert
p13169
I43
VSimpleType: Object
p13170
tp13171
I1
s(Vinsert
p13172
I42
VSimpleName: get
p13173
Vinsert
p13174
I42
VSimpleName: lastArguments
p13175
tp13176
I1
s(g1528
I42
g1529
Vinsert
p13177
I42
VSimpleName: times
p13178
tp13179
I1
s(g9758
I42
g9759
Vinsert
p13180
I8
VBlock
p13181
tp13182
I12
s(g12726
I42
g12727
Vinsert
p13183
I83
VModifier: public
p13184
tp13185
I1
s(Vinsert
p13186
I42
VSimpleName: hash
p13187
Vinsert
p13188
I59
VVariableDeclarationFragment
p13189
tp13190
I2
s(g7041
I42
g7042
Vinsert
p13191
I21
VExpressionStatement
p13192
tp13193
I2
s(g1105
I42
g1106
Vinsert
p13194
I43
VSimpleType: Set
p13195
tp13196
I2
s(g1087
I42
g1088
Vinsert
p13197
I32
VMethodInvocation
p13198
tp13199
I12
s(g1513
I42
g1514
Vinsert
p13200
I42
VSimpleName: Collection
p13201
tp13202
I1
s(g11691
I42
g11692
Vinsert
p13203
I60
VVariableDeclarationStatement
p13204
tp13205
I1
s(g2237
I42
g2238
Vinsert
p13206
I42
VSimpleName: IMethods
p13207
tp13208
I1
s(g4143
I42
g4144
Vinsert
p13209
I32
VMethodInvocation
p13210
tp13211
I4
s(g6854
I42
g6855
Vinsert
p13212
I40
VQualifiedName: java.util.SortedMap
p13213
tp13214
I1
s(g2652
I42
g2653
Vinsert
p13215
I42
VSimpleName: newInstance
p13216
tp13217
I1
s(Vinsert
p13218
I42
VSimpleName: validateExtraInterfaces
p13219
Vinsert
p13220
I21
VExpressionStatement
p13221
tp13222
I1
s(g3006
I42
g3007
Vinsert
p13223
I45
VStringLiteral: "equals"
p13224
tp13225
I1
s(g1393
I42
g1394
Vinsert
p13226
I34
VNumberLiteral: 1000.1
p13227
tp13228
I1
s(g4638
I42
g4639
Vinsert
p13229
I42
VSimpleName: smartNull
p13230
tp13231
I2
s(g4231
I42
g4232
Vinsert
p13232
I60
VVariableDeclarationStatement
p13233
tp13234
I10
s(g6924
I42
g6925
Vinsert
p13235
I44
VSingleVariableDeclaration
p13236
tp13237
I1
s(g2200
I42
g2201
Vinsert
p13238
I83
VModifier: static
p13239
tp13240
I1
s(g2205
I42
g2206
Vinsert
p13241
I40
VQualifiedName: c.authorEmail
p13242
tp13243
I1
s(g4441
I42
g4442
Vinsert
p13244
I61
VWhileStatement
p13245
tp13246
I1
s(g4184
I42
g4185
Vinsert
p13247
I44
VSingleVariableDeclaration
p13248
tp13249
I1
s(g10242
I42
g10243
Vinsert
p13250
I42
VSimpleName: Before
p13251
tp13252
I3
s(g1044
I42
g1045
Vinsert
p13253
I41
VReturnStatement
p13254
tp13255
I1
s(g1660
I42
g1661
Vinsert
p13256
I78
VMarkerAnnotation
p13257
tp13258
I2
s(g2775
I42
g2776
Vinsert
p13259
I42
VSimpleName: VerificationInOrderFromMultipleThreadsTest
p13260
tp13261
I1
s(g2616
I42
g2617
Vinsert
p13262
I43
VSimpleType: ClassLoadingStrategy
p13263
tp13264
I1
s(g3969
I42
g3970
Vinsert
p13265
I42
VSimpleName: wantedInvocationCount
p13266
tp13267
I1
s(g3672
I42
g3673
Vinsert
p13268
I42
VSimpleName: registeredInvocationName
p13269
tp13270
I2
s(g11243
I42
g11244
Vinsert
p13271
I42
VSimpleName: InvocationOnMock
p13272
tp13273
I1
s(g8808
I42
g8809
Vinsert
p13274
I42
VSimpleName: writeMethodSig
p13275
tp13276
I1
s(g3753
I42
g3754
Vinsert
p13277
I41
VReturnStatement
p13278
tp13279
I1
s(g4590
I42
g4591
Vinsert
p13280
I66
VTextElement: </p>
p13281
tp13282
I3
s(g1034
I42
g1035
Vinsert
p13283
I8
VBlock
p13284
tp13285
I13
s(g443
I42
g444
Vinsert
p13286
I42
VSimpleName: from
p13287
tp13288
I1
s(g9403
I42
g9404
Vinsert
p13289
I32
VMethodInvocation
p13290
tp13291
I2
s(g7258
I42
g7259
Vinsert
p13292
I42
VSimpleName: First
p13293
tp13294
I2
s(g8553
I42
g8554
Vinsert
p13295
I42
VSimpleName: Override
p13296
tp13297
I1
s(g5810
I42
g5811
Vinsert
p13298
I8
VBlock
p13299
tp13300
I1
s(g12885
I42
g12886
Vinsert
p13301
I42
VSimpleName: MockSettingsImpl
p13302
tp13303
I1
s(Vinsert
p13304
I42
VSimpleName: add
p13305
Vinsert
p13306
I11
VCastExpression
p13307
tp13308
I1
s(g1194
I42
g1195
Vinsert
p13309
I42
VSimpleName: shouldFailWhenMockHadUnwantedInteractions
p13310
tp13311
I1
s(g8528
I42
g8529
Vinsert
p13312
I43
VSimpleType: MockHandler
p13313
tp13314
I1
s(g297
I42
g298
Vinsert
p13315
I42
VSimpleName: anonymousInstance
p13316
tp13317
I1
s(g10688
I42
g10689
Vinsert
p13318
I42
VSimpleName: Object
p13319
tp13320
I1
s(g9912
I42
g9913
Vinsert
p13321
I42
VSimpleName: mockWithPrivateConstructor
p13322
tp13323
I1
s(g7041
I42
g7042
Vinsert
p13324
I42
VSimpleName: validateState
p13325
tp13326
I1
s(g5934
I42
g5935
Vinsert
p13327
I83
VModifier: public
p13328
tp13329
I1
s(g1184
I42
g1185
Vinsert
p13330
I8
VBlock
p13331
tp13332
I1
s(g7057
I42
g7058
Vinsert
p13333
I61
VWhileStatement
p13334
tp13335
I1
s(g4510
I42
g4511
Vinsert
p13336
I42
VSimpleName: should_scream_when_enhanced_but_not_a_mock_passed
p13337
tp13338
I1
s(g906
I42
g907
Vinsert
p13339
I42
VSimpleName: Modifier
p13340
tp13341
I2
s(g6614
I42
g6615
Vinsert
p13342
I31
VMethodDeclaration
p13343
tp13344
I1
s(Vinsert
p13345
I42
VSimpleName: log
p13346
Vinsert
p13347
I42
VSimpleName: warningsCollector
p13348
tp13349
I1
s(g3935
I42
g3936
Vinsert
p13350
I42
VSimpleName: InstantiatorProvider
p13351
tp13352
I1
s(g9390
I42
g9391
Vinsert
p13353
I59
VVariableDeclarationFragment
p13354
tp13355
I21
s(g8770
I42
g8771
Vinsert
p13356
I42
VSimpleName: Throwable
p13357
tp13358
I2
s(g114
I42
g115
Vinsert
p13359
I44
VSingleVariableDeclaration
p13360
tp13361
I2
s(g3178
I42
g3179
Vinsert
p13362
I8
VBlock
p13363
tp13364
I3
s(g10507
I42
g10508
Vinsert
p13365
I44
VSingleVariableDeclaration
p13366
tp13367
I1
s(g7258
I42
g7259
Vinsert
p13368
I42
VSimpleName: first
p13369
tp13370
I2
s(g5282
I42
g5283
Vinsert
p13371
I42
VSimpleName: OngoingVerifyingMode
p13372
tp13373
I1
s(g438
I42
g439
Vinsert
p13374
I42
VSimpleName: line
p13375
tp13376
I2
s(g11107
I42
g11108
Vinsert
p13377
I66
VTextElement:  stubber - to select a method for stubbing
p13378
tp13379
I1
s(g5169
I42
g5170
Vinsert
p13380
I42
VSimpleName: VerifyingMode
p13381
tp13382
I1
s(Vinsert
p13383
I42
VSimpleName: varargsString
p13384
Vinsert
p13385
I34
VNumberLiteral: 10
p13386
tp13387
I1
s(g332
I42
g333
Vinsert
p13388
I8
VBlock
p13389
tp13390
I1
s(g5480
I42
g5481
Vinsert
p13391
I42
VSimpleName: assertThat
p13392
tp13393
I1
s(g3426
I42
g3427
Vinsert
p13394
I42
VSimpleName: times
p13395
tp13396
I4
s(g6566
I42
g6567
Vinsert
p13397
I60
VVariableDeclarationStatement
p13398
tp13399
I3
s(g4143
I42
g4144
Vinsert
p13400
I42
VSimpleName: invocation
p13401
tp13402
I2
s(g3654
I42
g3655
Vinsert
p13403
I43
VSimpleType: ForwardsInvocations
p13404
tp13405
I1
s(g10415
I42
g10416
Vinsert
p13406
I74
VParameterizedType: Set<Object>
p13407
tp13408
I1
s(g8827
I42
g8828
Vinsert
p13409
I45
VStringLiteral: "mockOne"
p13410
tp13411
I1
s(g6316
I42
g6317
Vinsert
p13412
I42
VSimpleName: T
p13413
tp13414
I2
s(g2723
I42
g2724
Vinsert
p13415
I42
VSimpleName: context
p13416
tp13417
I2
s(g247
I42
g248
Vinsert
p13418
I42
VSimpleName: actualArgumentIndex
p13419
tp13420
I1
s(g3224
I42
g3225
Vinsert
p13421
I14
VClassInstanceCreation
p13422
tp13423
I1
s(g3178
I42
g3179
Vinsert
p13424
I31
VMethodDeclaration
p13425
tp13426
I3
s(Vinsert
p13427
I42
VSimpleName: drive
p13428
Vinsert
p13429
I42
VSimpleName: Person
p13430
tp13431
I1
s(g5282
I42
g5283
Vinsert
p13432
I74
VParameterizedType: List<Invocation>
p13433
tp13434
I1
s(g9832
I42
g9833
Vinsert
p13435
I42
VSimpleName: classToMock
p13436
tp13437
I2
s(g1398
I42
g1399
Vinsert
p13438
I42
VSimpleName: withSettings
p13439
tp13440
I2
s(g7582
I42
g7583
Vinsert
p13441
I31
VMethodDeclaration
p13442
tp13443
I1
s(g1609
I42
g1610
Vinsert
p13444
I42
VSimpleName: cause
p13445
tp13446
I1
s(Vinsert
p13447
I42
VSimpleName: forwardTo
p13448
Vinsert
p13449
I42
VSimpleName: String
p13450
tp13451
I1
s(g4986
I42
g4987
Vinsert
p13452
I43
VSimpleType: ReturnValues
p13453
tp13454
I1
s(g1403
I42
g1404
Vinsert
p13455
I42
VSimpleName: MethodsImpl
p13456
tp13457
I2
s(g8926
I42
g8927
Vinsert
p13458
I2
VArrayAccess
p13459
tp13460
I2
s(Vinsert
p13461
I42
VSimpleName: add
p13462
Vinsert
p13463
I74
VParameterizedType: Class<? extends Throwable>
p13464
tp13465
I1
s(g1688
I42
g1689
Vinsert
p13466
I32
VMethodInvocation
p13467
tp13468
I4
s(g8160
I42
g8161
Vinsert
p13469
I42
VSimpleName: the_deep_stub
p13470
tp13471
I1
s(g7302
I42
g7303
Vinsert
p13472
I23
VFieldDeclaration
p13473
tp13474
I3
s(g10762
I42
g10763
Vinsert
p13475
I42
VSimpleName: SampleAnnotation
p13476
tp13477
I1
s(g3390
I42
g3391
Vinsert
p13478
I42
VSimpleName: argument
p13479
tp13480
I1
s(g9929
I42
g9930
Vinsert
p13481
I42
VSimpleName: asList
p13482
tp13483
I1
s(g12000
I42
g12001
Vinsert
p13484
I21
VExpressionStatement
p13485
tp13486
I1
s(g5575
I42
g5576
Vinsert
p13487
I42
VSimpleName: SpecAdapter
p13488
tp13489
I1
s(g4420
I42
g4421
Vinsert
p13490
I42
VSimpleName: o1
p13491
tp13492
I1
s(Vinsert
p13493
I42
VSimpleName: objectArgMethod
p13494
Vinsert
p13495
I83
VModifier: final
p13496
tp13497
I1
s(g4497
I42
g4498
Vinsert
p13498
I58
VVariableDeclarationExpression
p13499
tp13500
I1
s(g1528
I42
g1529
Vinsert
p13501
I44
VSingleVariableDeclaration
p13502
tp13503
I12
s(g1209
I42
g1210
Vinsert
p13504
I42
VSimpleName: isToString
p13505
tp13506
I1
s(g2672
I42
g2673
Vinsert
p13507
I42
VSimpleName: assertThat
p13508
tp13509
I1
s(g931
I42
g932
Vinsert
p13510
I42
VSimpleName: when
p13511
tp13512
I1
s(g3606
I42
g3607
Vinsert
p13513
I60
VVariableDeclarationStatement
p13514
tp13515
I1
s(g4163
I42
g4164
Vinsert
p13516
I42
VSimpleName: i
p13517
tp13518
I2
s(g9349
I42
g9350
Vinsert
p13519
I39
VPrimitiveType: long
p13520
tp13521
I1
s(g8517
I42
g8518
Vinsert
p13522
I45
VStringLiteral: "Statement exception"
p13523
tp13524
I1
s(g7253
I42
g7254
Vinsert
p13525
I8
VBlock
p13526
tp13527
I1
s(g3856
I42
g3857
Vinsert
p13528
I42
VSimpleName: expected
p13529
tp13530
I2
s(g2296
I42
g2297
Vinsert
p13531
I8
VBlock
p13532
tp13533
I1
s(g10311
I42
g10312
Vinsert
p13534
I39
VPrimitiveType: void
p13535
tp13536
I2
s(g7253
I42
g7254
Vinsert
p13537
I44
VSingleVariableDeclaration
p13538
tp13539
I1
s(Vinsert
p13540
I42
VSimpleName: isEmpty
p13541
Vinsert
p13542
I65
VTagElement: @param
p13543
tp13544
I2
s(g8275
I42
g8276
Vinsert
p13545
I32
VMethodInvocation
p13546
tp13547
I7
s(g11757
I42
g11758
Vinsert
p13548
I43
VSimpleType: StringBuilder
p13549
tp13550
I2
s(g6711
I42
g6712
Vinsert
p13551
I42
VSimpleName: gitTool
p13552
tp13553
I2
s(g9504
I42
g9505
Vinsert
p13554
I42
VSimpleName: details
p13555
tp13556
I1
s(g8655
I42
g8656
Vinsert
p13557
I43
VSimpleType: ConcurrentHashMap
p13558
tp13559
I1
s(g5810
I42
g5811
Vinsert
p13560
I14
VClassInstanceCreation
p13561
tp13562
I1
s(g4510
I42
g4511
Vinsert
p13563
I42
VSimpleName: Object
p13564
tp13565
I1
s(g9721
I42
g9722
Vinsert
p13566
I39
VPrimitiveType: int
p13567
tp13568
I1
s(g5456
I42
g5457
Vinsert
p13569
I14
VClassInstanceCreation
p13570
tp13571
I3
s(g11572
I42
g11573
Vinsert
p13572
I8
VBlock
p13573
tp13574
I1
s(g3199
I42
g3200
Vinsert
p13575
I42
VSimpleName: MockitoAssertionError
p13576
tp13577
I2
s(g3580
I42
g3581
Vinsert
p13578
I21
VExpressionStatement
p13579
tp13580
I2
s(g4212
I42
g4213
Vinsert
p13581
I41
VReturnStatement
p13582
tp13583
I1
s(g7274
I42
g7275
Vinsert
p13584
I43
VSimpleType: VerificationInOrderFailure
p13585
tp13586
I1
s(g1144
I42
g1145
Vinsert
p13587
I42
VSimpleName: T
p13588
tp13589
I1
s(g292
I42
g293
Vinsert
p13590
I42
VSimpleName: DummyTest
p13591
tp13592
I1
s(g7337
I42
g7338
Vinsert
p13593
I42
VSimpleName: invocation
p13594
tp13595
I4
s(Vinsert
p13596
I42
VSimpleName: getInterfaces
p13597
Vinsert
p13598
I34
VNumberLiteral: 0
p13599
tp13600
I1
s(g1591
I42
g1592
Vinsert
p13601
I42
VSimpleName: mockSettings
p13602
tp13603
I4
s(g3055
I42
g3056
Vinsert
p13604
I42
VSimpleName: Short
p13605
tp13606
I1
s(g2700
I42
g2701
Vinsert
p13607
I21
VExpressionStatement
p13608
tp13609
I2
s(g3991
I42
g3992
Vinsert
p13610
I60
VVariableDeclarationStatement
p13611
tp13612
I2
s(g1660
I42
g1661
Vinsert
p13613
I36
VParenthesizedExpression
p13614
tp13615
I7
s(g12354
I42
g12355
Vinsert
p13616
I42
VSimpleName: accept
p13617
tp13618
I1
s(g2113
I42
g2114
Vinsert
p13619
I25
VIfStatement
p13620
tp13621
I1
s(Vinsert
p13622
I42
VSimpleName: get
p13623
Vinsert
p13624
I43
VSimpleType: ReturnValues
p13625
tp13626
I2
s(g6387
I42
g6388
Vinsert
p13627
I43
VSimpleType: DispatcherDefaultingToRealMethod
p13628
tp13629
I1
s(g13053
I42
g13054
Vinsert
p13630
I27
VInfixExpression: &&
p13631
tp13632
I1
s(g1054
I42
g1055
Vinsert
p13633
I42
VSimpleName: assertNotNull
p13634
tp13635
I1
s(g686
I42
g687
Vinsert
p13636
I54
VTryStatement
p13637
tp13638
I1
s(g3293
I42
g3294
Vinsert
p13639
I42
VSimpleName: CheckMethodAdapter
p13640
tp13641
I1
s(g9434
I42
g9435
Vinsert
p13642
I14
VClassInstanceCreation
p13643
tp13644
I1
s(g1054
I42
g1055
Vinsert
p13645
I42
VSimpleName: mock
p13646
tp13647
I1
s(g1204
I42
g1205
Vinsert
p13648
I59
VVariableDeclarationFragment
p13649
tp13650
I2
s(g2934
I42
g2935
Vinsert
p13651
I42
VSimpleName: Runnable
p13652
tp13653
I1
s(g8319
I42
g8320
Vinsert
p13654
I59
VVariableDeclarationFragment
p13655
tp13656
I2
s(g4968
I42
g4969
Vinsert
p13657
I83
VModifier: static
p13658
tp13659
I1
s(g2301
I42
g2302
Vinsert
p13660
I42
VSimpleName: IMethods
p13661
tp13662
I4
s(g4420
I42
g4421
Vinsert
p13663
I8
VBlock
p13664
tp13665
I2
s(Vinsert
p13666
I42
VSimpleName: isValidReturnType
p13667
Vinsert
p13668
I42
VSimpleName: methodInfo
p13669
tp13670
I2
s(g5501
I42
g5502
Vinsert
p13671
I42
VSimpleName: descriptor
p13672
tp13673
I1
s(g9224
I42
g9225
Vinsert
p13674
I42
VSimpleName: contains
p13675
tp13676
I1
s(g8493
I42
g8494
Vinsert
p13677
I59
VVariableDeclarationFragment
p13678
tp13679
I1
s(Vinsert
p13680
I42
VSimpleName: getMock
p13681
Vinsert
p13682
I42
VSimpleName: i
p13683
tp13684
I1
s(g6781
I42
g6782
Vinsert
p13685
I8
VBlock
p13686
tp13687
I1
s(g6988
I42
g6989
Vinsert
p13688
I42
VSimpleName: calculator
p13689
tp13690
I1
s(g6598
I42
g6599
Vinsert
p13691
I42
VSimpleName: propertyTypeMatchFieldType
p13692
tp13693
I1
s(Vinsert
p13694
I42
VSimpleName: cleansStackTrace
p13695
Vinsert
p13696
I42
VSimpleName: throwable
p13697
tp13698
I1
s(g4611
I42
g4612
Vinsert
p13699
I45
VStringLiteral: "goodbye"
p13700
tp13701
I2
s(g11404
I42
g11405
Vinsert
p13702
I42
VSimpleName: List
p13703
tp13704
I13
s(Vinsert
p13705
I42
VSimpleName: get
p13706
Vinsert
p13707
I42
VSimpleName: MockitoConfiguration
p13708
tp13709
I1
s(g5858
I42
g5859
Vinsert
p13710
I42
VSimpleName: ITestResult
p13711
tp13712
I1
s(g7395
I42
g7396
Vinsert
p13713
I42
VSimpleName: String
p13714
tp13715
I4
s(g209
I42
g210
Vinsert
p13716
I59
VVariableDeclarationFragment
p13717
tp13718
I6
s(g11626
I42
g11627
Vinsert
p13719
I57
VTypeLiteral
p13720
tp13721
I1
s(g1760
I42
g1761
Vinsert
p13722
I42
VSimpleName: install
p13723
tp13724
I1
s(g966
I42
g967
Vinsert
p13725
I42
VSimpleName: BDDOngoingStubbingImpl
p13726
tp13727
I1
s(g4646
I42
g4647
Vinsert
p13728
I11
VCastExpression
p13729
tp13730
I1
s(g1209
I42
g1210
Vinsert
p13731
I42
VSimpleName: method
p13732
tp13733
I1
s(g395
I42
g396
Vinsert
p13734
I14
VClassInstanceCreation
p13735
tp13736
I1
s(g2770
I42
g2771
Vinsert
p13737
I8
VBlock
p13738
tp13739
I2
s(g4822
I42
g4823
Vinsert
p13740
I59
VVariableDeclarationFragment
p13741
tp13742
I1
s(g234
I42
g235
Vinsert
p13743
I44
VSingleVariableDeclaration
p13744
tp13745
I1
s(g11404
I42
g11405
Vinsert
p13746
I42
VSimpleName: line
p13747
tp13748
I1
s(g2775
I42
g2776
Vinsert
p13749
I25
VIfStatement
p13750
tp13751
I2
s(g1352
I42
g1353
Vinsert
p13752
I59
VVariableDeclarationFragment
p13753
tp13754
I2
s(Vinsert
p13755
I42
VSimpleName: getReturnType
p13756
Vinsert
p13757
I42
VSimpleName: visitInsn
p13758
tp13759
I1
s(Vinsert
p13760
I42
VSimpleName: run
p13761
Vinsert
p13762
I45
VStringLiteral: "bar"
p13763
tp13764
I1
s(g3379
I42
g3380
Vinsert
p13765
I42
VSimpleName: strictness
p13766
tp13767
I2
s(g6035
I42
g6036
Vinsert
p13768
I42
VSimpleName: assertEquals
p13769
tp13770
I1
s(g8889
I42
g8890
Vinsert
p13771
I40
VQualifiedName: MockMaker.TypeMockability
p13772
tp13773
I1
s(g553
I42
g554
Vinsert
p13774
I45
VStringLiteral: "  );"
p13775
tp13776
I1
s(g2222
I42
g2223
Vinsert
p13777
I74
VParameterizedType: Class<?>
p13778
tp13779
I3
s(g11699
I42
g11700
Vinsert
p13780
I5
VArrayType: Object[]
p13781
tp13782
I2
s(g6143
I42
g6144
Vinsert
p13783
I21
VExpressionStatement
p13784
tp13785
I2
s(g1843
I42
g1844
Vinsert
p13786
I43
VSimpleType: Object
p13787
tp13788
I6
s(g342
I42
g343
Vinsert
p13789
I21
VExpressionStatement
p13790
tp13791
I2
s(g84
I42
g85
Vinsert
p13792
I42
VSimpleName: improvements
p13793
tp13794
I1
s(g12922
I42
g12923
Vinsert
p13795
I42
VSimpleName: invocationListeners
p13796
tp13797
I2
s(Vinsert
p13798
I42
VSimpleName: returnFor
p13799
Vinsert
p13800
I8
VBlock
p13801
tp13802
I3
s(g986
I42
g987
Vinsert
p13803
I39
VPrimitiveType: void
p13804
tp13805
I1
s(g3864
I42
g3865
Vinsert
p13806
I42
VSimpleName: name
p13807
tp13808
I2
s(Vinsert
p13809
I42
VSimpleName: add
p13810
Vinsert
p13811
I42
VSimpleName: visibleAnnotations
p13812
tp13813
I3
s(g10234
I42
g10235
Vinsert
p13814
I42
VSimpleName: expected
p13815
tp13816
I1
s(g1614
I42
g1615
Vinsert
p13817
I68
VMethodRef
p13818
tp13819
I1
s(g3096
I42
g3097
Vinsert
p13820
I43
VSimpleType: VerboseRunner
p13821
tp13822
I2
s(g317
I42
g318
Vinsert
p13823
I42
VSimpleName: builder
p13824
tp13825
I2
s(g2256
I42
g2257
Vinsert
p13826
I43
VSimpleType: Throwable
p13827
tp13828
I2
s(g3977
I42
g3978
Vinsert
p13829
I57
VTypeLiteral
p13830
tp13831
I1
s(g8095
I42
g8096
Vinsert
p13832
I31
VMethodDeclaration
p13833
tp13834
I1
s(g8195
I42
g8196
Vinsert
p13835
I42
VSimpleName: CodeGenerationException
p13836
tp13837
I1
s(g523
I42
g524
Vinsert
p13838
I42
VSimpleName: mockMaker
p13839
tp13840
I1
s(g3313
I42
g3314
Vinsert
p13841
I60
VVariableDeclarationStatement
p13842
tp13843
I1
s(g3359
I42
g3360
Vinsert
p13844
I42
VSimpleName: AbstractSystem
p13845
tp13846
I2
s(g8038
I42
g8039
Vinsert
p13847
I43
VSimpleType: Object
p13848
tp13849
I2
s(Vinsert
p13850
I42
VSimpleName: getMethod
p13851
Vinsert
p13852
I42
VSimpleName: result
p13853
tp13854
I1
s(Vinsert
p13855
I42
VSimpleName: add
p13856
Vinsert
p13857
I42
VSimpleName: event
p13858
tp13859
I1
s(g1508
I42
g1509
Vinsert
p13860
I42
VSimpleName: resetState
p13861
tp13862
I1
s(g3943
I42
g3944
Vinsert
p13863
I45
VStringLiteral: "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker"
p13864
tp13865
I1
s(g5939
I42
g5940
Vinsert
p13866
I42
VSimpleName: printHeader
p13867
tp13868
I1
s(g11866
I42
g11867
Vinsert
p13869
I31
VMethodDeclaration
p13870
tp13871
I4
s(g179
I42
g180
Vinsert
p13872
I38
VPrefixExpression: !
p13873
tp13874
I10
s(g1184
I42
g1185
Vinsert
p13875
I31
VMethodDeclaration
p13876
tp13877
I1
s(g3303
I42
g3304
Vinsert
p13878
I8
VBlock
p13879
tp13880
I1
s(Vinsert
p13881
I42
VSimpleName: keySet
p13882
Vinsert
p13883
I43
VSimpleType: String
p13884
tp13885
I2
s(g8011
I42
g8012
Vinsert
p13886
I42
VSimpleName: log
p13887
tp13888
I1
s(Vinsert
p13889
I42
VSimpleName: verify
p13890
Vinsert
p13891
I42
VSimpleName: NoMoreInvocationsVerifier
p13892
tp13893
I2
s(g94
I42
g95
Vinsert
p13894
I31
VMethodDeclaration
p13895
tp13896
I15
s(Vinsert
p13897
I42
VSimpleName: of
p13898
Vinsert
p13899
I74
VParameterizedType: Set<Object>
p13900
tp13901
I1
s(g3996
I42
g3997
Vinsert
p13902
I42
VSimpleName: HasVerboseVariant
p13903
tp13904
I2
s(Vinsert
p13905
I42
VSimpleName: getControl
p13906
Vinsert
p13907
I70
VEnhancedForStatement
p13908
tp13909
I1
s(g4163
I42
g4164
Vinsert
p13910
I39
VPrimitiveType: int
p13911
tp13912
I2
s(g8401
I42
g8402
Vinsert
p13913
I42
VSimpleName: mock
p13914
tp13915
I2
s(Vinsert
p13916
I42
VSimpleName: getMockHandler
p13917
Vinsert
p13918
I42
VSimpleName: InvocationContainer
p13919
tp13920
I1
s(g1069
I42
g1070
Vinsert
p13921
I83
VModifier: public
p13922
tp13923
I1
s(g2682
I42
g2683
Vinsert
p13924
I42
VSimpleName: addAll
p13925
tp13926
I1
s(g7931
I42
g7932
Vinsert
p13927
I42
VSimpleName: MOCKITO_CORE
p13928
tp13929
I2
s(g12553
I42
g12554
Vinsert
p13930
I42
VSimpleName: size
p13931
tp13932
I1
s(g3280
I42
g3281
Vinsert
p13933
I42
VSimpleName: assertNotNull
p13934
tp13935
I1
s(Vinsert
p13936
I42
VSimpleName: loadClass
p13937
Vinsert
p13938
I43
VSimpleType: Mockito
p13939
tp13940
I1
s(g7763
I42
g7764
Vinsert
p13941
I42
VSimpleName: lastStartingIndexOfSubList
p13942
tp13943
I2
s(g10921
I42
g10922
Vinsert
p13944
I8
VBlock
p13945
tp13946
I4
s(g8808
I42
g8809
Vinsert
p13947
I42
VSimpleName: CodeEmitter
p13948
tp13949
I1
s(Vinsert
p13950
I42
VSimpleName: getHandler
p13951
Vinsert
p13952
I78
VMarkerAnnotation
p13953
tp13954
I1
s(g7302
I42
g7303
Vinsert
p13955
I59
VVariableDeclarationFragment
p13956
tp13957
I4
s(g2518
I42
g2519
Vinsert
p13958
I8
VBlock
p13959
tp13960
I1
s(g1578
I42
g1579
Vinsert
p13961
I42
VSimpleName: finder
p13962
tp13963
I1
s(g1044
I42
g1045
Vinsert
p13964
I42
VSimpleName: VerificationMode
p13965
tp13966
I1
s(Vinsert
p13967
I42
VSimpleName: mock
p13968
Vinsert
p13969
I42
VSimpleName: testVarargStubbing
p13970
tp13971
I1
s(g10490
I42
g10491
Vinsert
p13972
I42
VSimpleName: i
p13973
tp13974
I4
s(Vinsert
p13975
I42
VSimpleName: add
p13976
Vinsert
p13977
I42
VSimpleName: IMethods
p13978
tp13979
I2
s(Vinsert
p13980
I42
VSimpleName: get
p13981
Vinsert
p13982
I42
VSimpleName: MockFeatures
p13983
tp13984
I1
s(g4038
I42
g4039
Vinsert
p13985
I32
VMethodInvocation
p13986
tp13987
I2
s(g8647
I42
g8648
Vinsert
p13988
I32
VMethodInvocation
p13989
tp13990
I6
s(g5105
I42
g5106
Vinsert
p13991
I77
VNormalAnnotation
p13992
tp13993
I1
s(g3178
I42
g3179
Vinsert
p13994
I39
VPrimitiveType: void
p13995
tp13996
I3
s(g8757
I42
g8758
Vinsert
p13997
I21
VExpressionStatement
p13998
tp13999
I2
s(g11791
I42
g11792
Vinsert
p14000
I5
VArrayType: Type[]
p14001
tp14002
I1
s(Vinsert
p14003
I42
VSimpleName: simpleMethod
p14004
Vinsert
p14005
I54
VTryStatement
p14006
tp14007
I21
s(g8242
I42
g8243
Vinsert
p14008
I43
VSimpleType: Throwable
p14009
tp14010
I1
s(g12337
I42
g12338
Vinsert
p14011
I42
VSimpleName: when
p14012
tp14013
I2
s(Vinsert
p14014
I42
VSimpleName: getStackTrace
p14015
Vinsert
p14016
I42
VSimpleName: actualCount
p14017
tp14018
I1
s(g3331
I42
g3332
Vinsert
p14019
I8
VBlock
p14020
tp14021
I2
s(g3792
I42
g3793
Vinsert
p14022
I42
VSimpleName: Plugins
p14023
tp14024
I1
s(g144
I42
g145
Vinsert
p14025
I43
VSimpleType: ReturnsIdentity
p14026
tp14027
I1
s(g10680
I42
g10681
Vinsert
p14028
I5
VArrayType: byte[]
p14029
tp14030
I1
s(g12231
I42
g12232
Vinsert
p14031
I40
VQualifiedName: Mockito.CALLS_REAL_METHODS
p14032
tp14033
I1
s(g1591
I42
g1592
Vinsert
p14034
I44
VSingleVariableDeclaration
p14035
tp14036
I3
s(g4991
I42
g4992
Vinsert
p14037
I78
VMarkerAnnotation
p14038
tp14039
I1
s(g7177
I42
g7178
Vinsert
p14040
I43
VSimpleType: InitializationError
p14041
tp14042
I1
s(g7213
I42
g7214
Vinsert
p14043
I42
VSimpleName: toInvocation
p14044
tp14045
I1
s(g3441
I42
g3442
Vinsert
p14046
I42
VSimpleName: inner
p14047
tp14048
I1
s(g5690
I42
g5691
Vinsert
p14049
I32
VMethodInvocation
p14050
tp14051
I11
s(g2743
I42
g2744
Vinsert
p14052
I42
VSimpleName: indicesOfSimilarMatchingArguments
p14053
tp14054
I1
s(g179
I42
g180
Vinsert
p14055
I42
VSimpleName: argMismatchStubbings
p14056
tp14057
I2
s(g2306
I42
g2307
Vinsert
p14058
I42
VSimpleName: invocations
p14059
tp14060
I1
s(g11956
I42
g11957
Vinsert
p14061
I42
VSimpleName: delegatesTo
p14062
tp14063
I1
s(g5164
I42
g5165
Vinsert
p14064
I42
VSimpleName: answer
p14065
tp14066
I1
s(g448
I42
g449
Vinsert
p14067
I42
VSimpleName: Test
p14068
tp14069
I1
s(g1660
I42
g1661
Vinsert
p14070
I32
VMethodInvocation
p14071
tp14072
I7
s(g6890
I42
g6891
Vinsert
p14073
I33
VNullLiteral
p14074
tp14075
I1
s(g2886
I42
g2887
Vinsert
p14076
I32
VMethodInvocation
p14077
tp14078
I5
s(g10572
I42
g10573
Vinsert
p14079
I39
VPrimitiveType: void
p14080
tp14081
I1
s(g1760
I42
g1761
Vinsert
p14082
I40
VQualifiedName: FieldProxy.Binder
p14083
tp14084
I1
s(g13596
I42
g13597
Vinsert
p14085
I27
VInfixExpression: <
p14086
tp14087
I1
s(g1553
I42
g1554
Vinsert
p14088
I42
VSimpleName: thenReturn
p14089
tp14090
I1
s(g11214
I42
g11215
Vinsert
p14091
I43
VSimpleType: String
p14092
tp14093
I2
s(g1457
I42
g1458
Vinsert
p14094
I42
VSimpleName: throwableToRaise
p14095
tp14096
I1
s(g1159
I42
g1160
Vinsert
p14097
I42
VSimpleName: isNotNull
p14098
tp14099
I1
s(g986
I42
g987
Vinsert
p14100
I21
VExpressionStatement
p14101
tp14102
I1
s(g10164
I42
g10165
Vinsert
p14103
I60
VVariableDeclarationStatement
p14104
tp14105
I1
s(g8038
I42
g8039
Vinsert
p14106
I42
VSimpleName: mocksToBeVerifiedInOrder
p14107
tp14108
I2
s(g3611
I42
g3612
Vinsert
p14109
I43
VSimpleType: T
p14110
tp14111
I2
s(g8808
I42
g8809
Vinsert
p14112
I42
VSimpleName: type
p14113
tp14114
I2
s(g13186
I42
g13187
Vinsert
p14115
I85
VDimension
p14116
tp14117
I1
s(g5017
I42
g5018
Vinsert
p14118
I42
VSimpleName: MockitoMethod
p14119
tp14120
I1
s(g5636
I42
g5637
Vinsert
p14121
I42
VSimpleName: anyString
p14122
tp14123
I1
s(g2041
I42
g2042
Vinsert
p14124
I43
VSimpleType: WarningsPrinterImpl
p14125
tp14126
I1
s(g4247
I42
g4248
Vinsert
p14127
I42
VSimpleName: getSample
p14128
tp14129
I1
s(g7577
I42
g7578
Vinsert
p14130
I42
VSimpleName: c
p14131
tp14132
I2
s(Vinsert
p14133
I42
VSimpleName: add
p14134
Vinsert
p14135
I42
VSimpleName: o
p14136
tp14137
I1
s(g5466
I42
g5467
Vinsert
p14138
I83
VModifier: protected
p14139
tp14140
I1
s(g7451
I42
g7452
Vinsert
p14141
I27
VInfixExpression: !=
p14142
tp14143
I1
s(g5378
I42
g5379
Vinsert
p14144
I32
VMethodInvocation
p14145
tp14146
I2
s(g26
I42
g27
Vinsert
p14147
I8
VBlock
p14148
tp14149
I2
s(Vinsert
p14150
I42
VSimpleName: get
p14151
Vinsert
p14152
I42
VSimpleName: Set
p14153
tp14154
I1
s(Vinsert
p14155
I42
VSimpleName: verify
p14156
Vinsert
p14157
I42
VSimpleName: VerificationError
p14158
tp14159
I1
s(g7867
I42
g7868
Vinsert
p14160
I14
VClassInstanceCreation
p14161
tp14162
I8
s(g7213
I42
g7214
Vinsert
p14163
I42
VSimpleName: InvocationBuilder
p14164
tp14165
I1
s(g3864
I42
g3865
Vinsert
p14166
I8
VBlock
p14167
tp14168
I3
s(g8509
I42
g8510
Vinsert
p14169
I42
VSimpleName: className
p14170
tp14171
I3
s(g6854
I42
g6855
Vinsert
p14172
I42
VSimpleName: mockUtil
p14173
tp14174
I2
s(g7091
I42
g7092
Vinsert
p14175
I45
VStringLiteral: "Invalid use of argument matchers inside additional matcher "
p14176
tp14177
I1
s(g2374
I42
g2375
Vinsert
p14178
I42
VSimpleName: String
p14179
tp14180
I2
s(g11995
I42
g11996
Vinsert
p14181
I42
VSimpleName: seq
p14182
tp14183
I2
s(g3354
I42
g3355
Vinsert
p14184
I43
VSimpleType: String
p14185
tp14186
I2
s(g8348
I42
g8349
Vinsert
p14187
I42
VSimpleName: Object
p14188
tp14189
I6
s(g9950
I42
g9951
Vinsert
p14190
I42
VSimpleName: thenReturn
p14191
tp14192
I1
s(g9053
I42
g9054
Vinsert
p14193
I8
VBlock
p14194
tp14195
I18
s(g6846
I42
g6847
Vinsert
p14196
I14
VClassInstanceCreation
p14197
tp14198
I1
s(g4763
I42
g4764
Vinsert
p14199
I42
VSimpleName: assertTrue
p14200
tp14201
I1
s(g13897
I42
g13898
Vinsert
p14202
I41
VReturnStatement
p14203
tp14204
I4
s(g770
I42
g771
Vinsert
p14205
I42
VSimpleName: asList
p14206
tp14207
I1
s(g6446
I42
g6447
Vinsert
p14208
I34
VNumberLiteral: 12L
p14209
tp14210
I1
s(g234
I42
g235
Vinsert
p14211
I41
VReturnStatement
p14212
tp14213
I1
s(g8588
I42
g8589
Vinsert
p14214
I39
VPrimitiveType: char
p14215
tp14216
I2
s(g9021
I42
g9022
Vinsert
p14217
I42
VSimpleName: rawType
p14218
tp14219
I1
s(g1393
I42
g1394
Vinsert
p14220
I32
VMethodInvocation
p14221
tp14222
I3
s(Vinsert
p14223
I42
VSimpleName: put
p14224
Vinsert
p14225
I6
VAssertStatement
p14226
tp14227
I1
s(g6435
I42
g6436
Vinsert
p14228
I32
VMethodInvocation
p14229
tp14230
I14
s(Vinsert
p14231
I42
VSimpleName: getSimpleName
p14232
Vinsert
p14233
I42
VSimpleName: klass
p14234
tp14235
I2
s(g4822
I42
g4823
Vinsert
p14236
I42
VSimpleName: mockSettings
p14237
tp14238
I2
s(g164
I42
g165
Vinsert
p14239
I39
VPrimitiveType: int
p14240
tp14241
I2
s(g8003
I42
g8004
Vinsert
p14242
I43
VSimpleType: IOException
p14243
tp14244
I1
s(Vinsert
p14245
I42
VSimpleName: toString
p14246
Vinsert
p14247
I83
VModifier: protected
p14248
tp14249
I1
s(Vinsert
p14250
I42
VSimpleName: getAllInvocations
p14251
Vinsert
p14252
I42
VSimpleName: invocations
p14253
tp14254
I6
s(g1523
I42
g1524
Vinsert
p14255
I60
VVariableDeclarationStatement
p14256
tp14257
I2
s(g9912
I42
g9913
Vinsert
p14258
I42
VSimpleName: private_constructor_currently_not_supported_at_the_moment_at_deserialization_time
p14259
tp14260
I1
s(g10048
I42
g10049
Vinsert
p14261
I21
VExpressionStatement
p14262
tp14263
I1
s(Vinsert
p14264
I42
VSimpleName: get
p14265
Vinsert
p14266
I42
VSimpleName: BeforeMethod
p14267
tp14268
I1
s(Vinsert
p14269
I42
VSimpleName: simpleMethod
p14270
Vinsert
p14271
I42
VSimpleName: eq
p14272
tp14273
I1
s(g395
I42
g396
Vinsert
p14274
I42
VSimpleName: VerificationOverTimeImpl
p14275
tp14276
I2
s(g5206
I42
g5207
Vinsert
p14277
I42
VSimpleName: CodeEmitter
p14278
tp14279
I1
s(Vinsert
p14280
I42
VSimpleName: setInvocationForPotentialStubbing
p14281
Vinsert
p14282
I42
VSimpleName: shouldFinishStubbingBeforeValidatingThrowable
p14283
tp14284
I1
s(g3580
I42
g3581
Vinsert
p14285
I32
VMethodInvocation
p14286
tp14287
I2
s(g5057
I42
g5058
Vinsert
p14288
I59
VVariableDeclarationFragment
p14289
tp14290
I9
s(g10672
I42
g10673
Vinsert
p14291
I85
VDimension
p14292
tp14293
I2
s(g4555
I42
g4556
Vinsert
p14294
I57
VTypeLiteral
p14295
tp14296
I3
s(g6148
I42
g6149
Vinsert
p14297
I42
VSimpleName: ClassEnhancedToParameterizedType
p14298
tp14299
I1
s(g1716
I42
g1717
Vinsert
p14300
I42
VSimpleName: varArgArray
p14301
tp14302
I1
s(Vinsert
p14303
I42
VSimpleName: spy
p14304
Vinsert
p14305
I42
VSimpleName: spy
p14306
tp14307
I1
s(g9560
I42
g9561
Vinsert
p14308
I83
VModifier: public
p14309
tp14310
I1
s(Vinsert
p14311
I42
VSimpleName: returnFor
p14312
Vinsert
p14313
I42
VSimpleName: assertThat
p14314
tp14315
I1
s(g9234
I42
g9235
Vinsert
p14316
I42
VSimpleName: ReflectUtils
p14317
tp14318
I1
s(Vinsert
p14319
I42
VSimpleName: getRawType
p14320
Vinsert
p14321
I42
VSimpleName: actual
p14322
tp14323
I2
s(g7129
I42
g7130
Vinsert
p14324
I42
VSimpleName: mock
p14325
tp14326
I1
s(g9649
I42
g9650
Vinsert
p14327
I42
VSimpleName: ImplementsGenericMethodOfAbstract
p14328
tp14329
I1
s(g5821
I42
g5822
Vinsert
p14330
I42
VSimpleName: t
p14331
tp14332
I1
s(g8867
I42
g8868
Vinsert
p14333
I42
VSimpleName: invocation
p14334
tp14335
I3
s(Vinsert
p14336
I42
VSimpleName: giveMeSomeString
p14337
Vinsert
p14338
I42
VSimpleName: name
p14339
tp14340
I2
s(Vinsert
p14341
I42
VSimpleName: foo
p14342
Vinsert
p14343
I42
VSimpleName: MyObject
p14344
tp14345
I3
s(g3565
I42
g3566
Vinsert
p14346
I25
VIfStatement
p14347
tp14348
I1
s(g9571
I42
g9572
Vinsert
p14349
I32
VMethodInvocation
p14350
tp14351
I1
s(Vinsert
p14352
I42
VSimpleName: isSpy
p14353
Vinsert
p14354
I42
VSimpleName: spiedInstance
p14355
tp14356
I1
s(g4492
I42
g4493
Vinsert
p14357
I42
VSimpleName: Throwable
p14358
tp14359
I1
s(g2503
I42
g2504
Vinsert
p14360
I59
VVariableDeclarationFragment
p14361
tp14362
I1
s(g5604
I42
g5605
Vinsert
p14363
I39
VPrimitiveType: short
p14364
tp14365
I1
s(Vinsert
p14366
I42
VSimpleName: unmodifiableSet
p14367
Vinsert
p14368
I42
VSimpleName: keys
p14369
tp14370
I1
s(g12777
I42
g12778
Vinsert
p14371
I34
VNumberLiteral: 0
p14372
tp14373
I1
s(g7854
I42
g7855
Vinsert
p14374
I45
VStringLiteral: "********************************"
p14375
tp14376
I1
s(g2839
I42
g2840
Vinsert
p14377
I43
VSimpleType: List
p14378
tp14379
I1
s(g9721
I42
g9722
Vinsert
p14380
I8
VBlock
p14381
tp14382
I1
s(g10777
I42
g10778
Vinsert
p14383
I42
VSimpleName: hash_primitive
p14384
tp14385
I1
s(g4168
I42
g4169
Vinsert
p14386
I44
VSingleVariableDeclaration
p14387
tp14388
I1
s(g9224
I42
g9225
Vinsert
p14389
I42
VSimpleName: isAndroidMockMakerRequired
p14390
tp14391
I1
s(Vinsert
p14392
I42
VSimpleName: get
p14393
Vinsert
p14394
I34
VNumberLiteral: 1
p14395
tp14396
I3
s(g13980
I42
g13981
Vinsert
p14397
I42
VSimpleName: mockFeatures
p14398
tp14399
I1
s(g6295
I42
g6296
Vinsert
p14400
I42
VSimpleName: mockedList
p14401
tp14402
I2
s(g3354
I42
g3355
Vinsert
p14403
I42
VSimpleName: String
p14404
tp14405
I2
s(g7730
I42
g7731
Vinsert
p14406
I14
VClassInstanceCreation
p14407
tp14408
I1
s(g901
I42
g902
Vinsert
p14409
I70
VEnhancedForStatement
p14410
tp14411
I1
s(Vinsert
p14412
I42
VSimpleName: reportInvocation
p14413
Vinsert
p14414
I70
VEnhancedForStatement
p14415
tp14416
I1
s(g673
I42
g674
Vinsert
p14417
I42
VSimpleName: className
p14418
tp14419
I2
s(Vinsert
p14420
I42
VSimpleName: put
p14421
Vinsert
p14422
I42
VSimpleName: value
p14423
tp14424
I2
s(g5839
I42
g5840
Vinsert
p14425
I43
VSimpleType: Method
p14426
tp14427
I3
s(g8889
I42
g8890
Vinsert
p14428
I60
VVariableDeclarationStatement
p14429
tp14430
I1
s(g119
I42
g120
Vinsert
p14431
I43
VSimpleType: Invocation
p14432
tp14433
I1
s(Vinsert
p14434
I42
VSimpleName: were_exactly_x_interactions
p14435
Vinsert
p14436
I21
VExpressionStatement
p14437
tp14438
I2
s(g1144
I42
g1145
Vinsert
p14439
I33
VNullLiteral
p14440
tp14441
I1
s(g9339
I42
g9340
Vinsert
p14442
I42
VSimpleName: returnsFirstArg
p14443
tp14444
I1
s(g11667
I42
g11668
Vinsert
p14445
I42
VSimpleName: T
p14446
tp14447
I3
s(g7030
I42
g7031
Vinsert
p14448
I42
VSimpleName: message
p14449
tp14450
I3
s(g3802
I42
g3803
Vinsert
p14451
I38
VPrefixExpression: -
p14452
tp14453
I1
s(Vinsert
p14454
I42
VSimpleName: getCause
p14455
Vinsert
p14456
I43
VSimpleType: Object
p14457
tp14458
I1
s(g4153
I42
g4154
Vinsert
p14459
I16
VConditionalExpression
p14460
tp14461
I1
s(g5821
I42
g5822
Vinsert
p14462
I42
VSimpleName: list
p14463
tp14464
I1
s(g2871
I42
g2872
Vinsert
p14465
I42
VSimpleName: signature
p14466
tp14467
I1
s(g4646
I42
g4647
Vinsert
p14468
I60
VVariableDeclarationStatement
p14469
tp14470
I1
s(g5274
I42
g5275
Vinsert
p14471
I43
VSimpleType: HashCodeAndEqualsSafeSet
p14472
tp14473
I2
s(g1726
I42
g1727
Vinsert
p14474
I42
VSimpleName: authToken
p14475
tp14476
I3
s(g518
I42
g519
Vinsert
p14477
I43
VSimpleType: InvocationOnMock
p14478
tp14479
I2
s(g1179
I42
g1180
Vinsert
p14480
I42
VSimpleName: listener
p14481
tp14482
I4
s(Vinsert
p14483
I42
VSimpleName: getAddress
p14484
Vinsert
p14485
I31
VMethodDeclaration
p14486
tp14487
I1
s(g5138
I42
g5139
Vinsert
p14488
I60
VVariableDeclarationStatement
p14489
tp14490
I1
s(Vinsert
p14491
I42
VSimpleName: getName
p14492
Vinsert
p14493
I43
VSimpleType: Comparable
p14494
tp14495
I1
s(g1739
I42
g1740
Vinsert
p14496
I42
VSimpleName: invocationMatcher
p14497
tp14498
I1
s(g4745
I42
g4746
Vinsert
p14499
I32
VMethodInvocation
p14500
tp14501
I8
s(g4675
I42
g4676
Vinsert
p14502
I42
VSimpleName: LinkedList
p14503
tp14504
I1
s(g3006
I42
g3007
Vinsert
p14505
I42
VSimpleName: isEqualsMethod
p14506
tp14507
I1
s(g6476
I42
g6477
Vinsert
p14508
I14
VClassInstanceCreation
p14509
tp14510
I2
s(g3991
I42
g3992
Vinsert
p14511
I42
VSimpleName: t
p14512
tp14513
I3
s(g5805
I42
g5806
Vinsert
p14514
I42
VSimpleName: createSocket
p14515
tp14516
I1
s(g2041
I42
g2042
Vinsert
p14517
I42
VSimpleName: spy
p14518
tp14519
I1
s(g881
I42
g882
Vinsert
p14520
I45
VStringLiteral: "Mock for "
p14521
tp14522
I1
s(g1780
I42
g1781
Vinsert
p14523
I42
VSimpleName: mockMethod
p14524
tp14525
I1
s(g6411
I42
g6412
Vinsert
p14526
I8
VBlock
p14527
tp14528
I41
s(g1159
I42
g1160
Vinsert
p14529
I21
VExpressionStatement
p14530
tp14531
I1
s(g4547
I42
g4548
Vinsert
p14532
I42
VSimpleName: clone
p14533
tp14534
I1
s(g4981
I42
g4982
Vinsert
p14535
I43
VSimpleType: StackTraceCleanerProvider
p14536
tp14537
I1
s(Vinsert
p14538
I42
VSimpleName: concreteMethod
p14539
Vinsert
p14540
I42
VSimpleName: mock
p14541
tp14542
I1
s(g8393
I42
g8394
Vinsert
p14543
I74
VParameterizedType: Collection<Class>
p14544
tp14545
I1
s(Vinsert
p14546
I42
VSimpleName: verify
p14547
Vinsert
p14548
I42
VSimpleName: shouldFailOnWrongOrder
p14549
tp14550
I1
s(g618
I42
g619
Vinsert
p14551
I21
VExpressionStatement
p14552
tp14553
I2
s(g11066
I42
g11067
Vinsert
p14554
I42
VSimpleName: TraceBuilder
p14555
tp14556
I3
s(g3011
I42
g3012
Vinsert
p14557
I32
VMethodInvocation
p14558
tp14559
I2
s(g1929
I42
g1930
Vinsert
p14560
I42
VSimpleName: line
p14561
tp14562
I1
s(g10623
I42
g10624
Vinsert
p14563
I60
VVariableDeclarationStatement
p14564
tp14565
I6
s(Vinsert
p14566
I42
VSimpleName: expect
p14567
Vinsert
p14568
I39
VPrimitiveType: void
p14569
tp14570
I2
s(g7893
I42
g7894
Vinsert
p14571
I40
VQualifiedName: subroutine.callers
p14572
tp14573
I1
s(g2695
I42
g2696
Vinsert
p14574
I42
VSimpleName: ConditionalStackTraceFilter
p14575
tp14576
I2
s(g10175
I42
g10176
Vinsert
p14577
I42
VSimpleName: text
p14578
tp14579
I1
s(g6339
I42
g6340
Vinsert
p14580
I78
VMarkerAnnotation
p14581
tp14582
I1
s(g6988
I42
g6989
Vinsert
p14583
I42
VSimpleName: differentMethodInvocation
p14584
tp14585
I1
s(g8146
I42
g8147
Vinsert
p14586
I22
VFieldAccess
p14587
tp14588
I1
s(g12782
I42
g12783
Vinsert
p14589
I34
VNumberLiteral: 0
p14590
tp14591
I1
s(g2682
I42
g2683
Vinsert
p14592
I8
VBlock
p14593
tp14594
I2
s(g2429
I42
g2430
Vinsert
p14595
I8
VBlock
p14596
tp14597
I4
s(g6093
I42
g6094
Vinsert
p14598
I43
VSimpleType: AbstractClassGenerator
p14599
tp14600
I2
s(g4600
I42
g4601
Vinsert
p14601
I42
VSimpleName: mock
p14602
tp14603
I1
s(g3275
I42
g3276
Vinsert
p14604
I2
VArrayAccess
p14605
tp14606
I1
s(g8561
I42
g8562
Vinsert
p14607
I42
VSimpleName: getMethodName
p14608
tp14609
I1
s(g10324
I42
g10325
Vinsert
p14610
I43
VSimpleType: List
p14611
tp14612
I1
s(g1949
I42
g1950
Vinsert
p14613
I42
VSimpleName: assertFalse
p14614
tp14615
I3
s(g7441
I42
g7442
Vinsert
p14616
I42
VSimpleName: matches
p14617
tp14618
I1
s(g5994
I42
g5995
Vinsert
p14619
I42
VSimpleName: MockitoJUnit44Runner
p14620
tp14621
I2
s(g4163
I42
g4164
Vinsert
p14622
I60
VVariableDeclarationStatement
p14623
tp14624
I2
s(Vinsert
p14625
I42
VSimpleName: toInvocation
p14626
Vinsert
p14627
I74
VParameterizedType: LinkedList<Invocation>
p14628
tp14629
I1
s(g483
I42
g484
Vinsert
p14630
I25
VIfStatement
p14631
tp14632
I1
s(g6962
I42
g6963
Vinsert
p14633
I57
VTypeLiteral
p14634
tp14635
I1
s(g11370
I42
g11371
Vinsert
p14636
I66
VTextElement: SmartNull gives nicer exception message than NPE because it points out the line where unstubbed method was called. You just click on the stack trace.
p14637
tp14638
I1
s(g11306
I42
g11307
Vinsert
p14639
I42
VSimpleName: list
p14640
tp14641
I2
s(Vinsert
p14642
I42
VSimpleName: wantedCount
p14643
Vinsert
p14644
I42
VSimpleName: registeredInvocations
p14645
tp14646
I1
s(g6476
I42
g6477
Vinsert
p14647
I42
VSimpleName: clazz
p14648
tp14649
I2
s(g9849
I42
g9850
Vinsert
p14650
I42
VSimpleName: HasFilterableStackTrace
p14651
tp14652
I1
s(g11839
I42
g11840
Vinsert
p14653
I39
VPrimitiveType: void
p14654
tp14655
I3
s(g8393
I42
g8394
Vinsert
p14656
I44
VSingleVariableDeclaration
p14657
tp14658
I1
s(g5869
I42
g5870
Vinsert
p14659
I42
VSimpleName: fieldsFrom
p14660
tp14661
I1
s(g10507
I42
g10508
Vinsert
p14662
I85
VDimension
p14663
tp14664
I1
s(g1307
I42
g1308
Vinsert
p14665
I41
VReturnStatement
p14666
tp14667
I1
s(g3144
I42
g3145
Vinsert
p14668
I42
VSimpleName: expectedFailureCount
p14669
tp14670
I1
s(g2354
I42
g2355
Vinsert
p14671
I42
VSimpleName: set
p14672
tp14673
I6
s(g7696
I42
g7697
Vinsert
p14674
I39
VPrimitiveType: void
p14675
tp14676
I1
s(g6069
I42
g6070
Vinsert
p14677
I83
VModifier: public
p14678
tp14679
I2
s(g3247
I42
g3248
Vinsert
p14680
I43
VSimpleType: AssertionError
p14681
tp14682
I2
s(g5834
I42
g5835
Vinsert
p14683
I42
VSimpleName: mode
p14684
tp14685
I2
s(Vinsert
p14686
I42
VSimpleName: add
p14687
Vinsert
p14688
I42
VSimpleName: lines
p14689
tp14690
I3
s(g13427
I42
g13428
Vinsert
p14691
I43
VSimpleType: Person
p14692
tp14693
I1
s(g4835
I42
g4836
Vinsert
p14694
I42
VSimpleName: DefaultReleaseStep
p14695
tp14696
I2
s(g31
I42
g32
Vinsert
p14697
I8
VBlock
p14698
tp14699
I3
s(g1949
I42
g1950
Vinsert
p14700
I42
VSimpleName: atLeast
p14701
tp14702
I1
s(g10889
I42
g10890
Vinsert
p14703
I42
VSimpleName: arraycopy
p14704
tp14705
I1
s(g4929
I42
g4930
Vinsert
p14706
I43
VSimpleType: Stubbing
p14707
tp14708
I2
s(g4133
I42
g4134
Vinsert
p14709
I42
VSimpleName: i
p14710
tp14711
I1
s(g8677
I42
g8678
Vinsert
p14712
I60
VVariableDeclarationStatement
p14713
tp14714
I1
s(g4871
I42
g4872
Vinsert
p14715
I39
VPrimitiveType: void
p14716
tp14717
I1
s(g1239
I42
g1240
Vinsert
p14718
I43
VSimpleType: InvocationInfo
p14719
tp14720
I1
s(Vinsert
p14721
I42
VSimpleName: getNested
p14722
Vinsert
p14723
I42
VSimpleName: mock
p14724
tp14725
I1
s(g5159
I42
g5160
Vinsert
p14726
I44
VSingleVariableDeclaration
p14727
tp14728
I1
s(g717
I42
g718
Vinsert
p14729
I21
VExpressionStatement
p14730
tp14731
I1
s(g9413
I42
g9414
Vinsert
p14732
I31
VMethodDeclaration
p14733
tp14734
I1
s(Vinsert
p14735
I42
VSimpleName: method
p14736
Vinsert
p14737
I42
VSimpleName: method
p14738
tp14739
I1
s(g4051
I42
g4052
Vinsert
p14740
I33
VNullLiteral
p14741
tp14742
I1
s(g11404
I42
g11405
Vinsert
p14743
I42
VSimpleName: Arrays
p14744
tp14745
I16
s(Vinsert
p14746
I42
VSimpleName: createMock
p14747
Vinsert
p14748
I42
VSimpleName: Object
p14749
tp14750
I1
s(g6276
I42
g6277
Vinsert
p14751
I80
VMemberValuePair
p14752
tp14753
I2
s(Vinsert
p14754
I42
VSimpleName: getClassName
p14755
Vinsert
p14756
I43
VSimpleType: StackTraceFilter
p14757
tp14758
I2
s(g2472
I42
g2473
Vinsert
p14759
I21
VExpressionStatement
p14760
tp14761
I1
s(g911
I42
g912
Vinsert
p14762
I34
VNumberLiteral: 1
p14763
tp14764
I2
s(g5712
I42
g5713
Vinsert
p14765
I42
VSimpleName: allActualTypeParameters
p14766
tp14767
I1
s(g3766
I42
g3767
Vinsert
p14768
I43
VSimpleType: Constructor
p14769
tp14770
I2
s(g5169
I42
g5170
Vinsert
p14771
I32
VMethodInvocation
p14772
tp14773
I1
s(g6725
I42
g6726
Vinsert
p14774
I21
VExpressionStatement
p14775
tp14776
I1
s(g1431
I42
g1432
Vinsert
p14777
I14
VClassInstanceCreation
p14778
tp14779
I1
s(g5794
I42
g5795
Vinsert
p14780
I21
VExpressionStatement
p14781
tp14782
I1
s(g8647
I42
g8648
Vinsert
p14783
I60
VVariableDeclarationStatement
p14784
tp14785
I2
s(g8798
I42
g8799
Vinsert
p14786
I21
VExpressionStatement
p14787
tp14788
I2
s(g2886
I42
g2887
Vinsert
p14789
I45
VStringLiteral: "one"
p14790
tp14791
I1
s(Vinsert
p14792
I42
VSimpleName: append
p14793
Vinsert
p14794
I42
VSimpleName: unnecessaryStubbings
p14795
tp14796
I2
s(g5368
I42
g5369
Vinsert
p14797
I42
VSimpleName: Throwable
p14798
tp14799
I2
s(g11791
I42
g11792
Vinsert
p14800
I42
VSimpleName: wildcard
p14801
tp14802
I1
s(g7564
I42
g7565
Vinsert
p14803
I8
VBlock
p14804
tp14805
I1
s(g9239
I42
g9240
Vinsert
p14806
I3
VArrayCreation
p14807
tp14808
I1
s(g6148
I42
g6149
Vinsert
p14809
I21
VExpressionStatement
p14810
tp14811
I1
s(g3743
I42
g3744
Vinsert
p14812
I42
VSimpleName: VerificationModeImpl
p14813
tp14814
I1
s(g4853
I42
g4854
Vinsert
p14815
I31
VMethodDeclaration
p14816
tp14817
I1
s(g12665
I42
g12666
Vinsert
p14818
I42
VSimpleName: String
p14819
tp14820
I2
s(g5501
I42
g5502
Vinsert
p14821
I13
VCharacterLiteral: '^'
p14822
tp14823
I1
s(Vinsert
p14824
I42
VSimpleName: matches
p14825
Vinsert
p14826
I42
VSimpleName: string
p14827
tp14828
I2
s(g229
I42
g230
Vinsert
p14829
I42
VSimpleName: mock
p14830
tp14831
I3
s(g5530
I42
g5531
Vinsert
p14832
I42
VSimpleName: Constructor
p14833
tp14834
I2
s(g11961
I42
g11962
Vinsert
p14835
I42
VSimpleName: Object
p14836
tp14837
I1
s(g3436
I42
g3437
Vinsert
p14838
I42
VSimpleName: cglibMethodProxyClass
p14839
tp14840
I2
s(g5834
I42
g5835
Vinsert
p14841
I32
VMethodInvocation
p14842
tp14843
I1
s(g1054
I42
g1055
Vinsert
p14844
I59
VVariableDeclarationFragment
p14845
tp14846
I1
s(g2472
I42
g2473
Vinsert
p14847
I42
VSimpleName: TestMethodsFinder
p14848
tp14849
I1
s(g7906
I42
g7907
Vinsert
p14850
I83
VModifier: final
p14851
tp14852
I1
s(g7564
I42
g7565
Vinsert
p14853
I42
VSimpleName: mode
p14854
tp14855
I1
s(g8434
I42
g8435
Vinsert
p14856
I42
VSimpleName: MockitoMethod
p14857
tp14858
I2
s(g5398
I42
g5399
Vinsert
p14859
I39
VPrimitiveType: void
p14860
tp14861
I1
s(g4212
I42
g4213
Vinsert
p14862
I32
VMethodInvocation
p14863
tp14864
I2
s(g11509
I42
g11510
Vinsert
p14865
I45
VStringLiteral: "integerReturningMethod"
p14866
tp14867
I1
s(Vinsert
p14868
I42
VSimpleName: run
p14869
Vinsert
p14870
I40
VQualifiedName: System.out
p14871
tp14872
I1
s(g7730
I42
g7731
Vinsert
p14873
I42
VSimpleName: extraInterfaces
p14874
tp14875
I1
s(g4981
I42
g4982
Vinsert
p14876
I83
VModifier: private
p14877
tp14878
I1
s(g1254
I42
g1255
Vinsert
p14879
I52
VThisExpression
p14880
tp14881
I1
s(g6233
I42
g6234
Vinsert
p14882
I52
VThisExpression
p14883
tp14884
I1
s(g704
I42
g705
Vinsert
p14885
I43
VSimpleType: InvocationTargetException
p14886
tp14887
I1
s(Vinsert
p14888
I42
VSimpleName: toString
p14889
Vinsert
p14890
I42
VSimpleName: namedAndReturningMocks
p14891
tp14892
I1
s(g1563
I42
g1564
Vinsert
p14893
I83
VModifier: private
p14894
tp14895
I1
s(g8226
I42
g8227
Vinsert
p14896
I8
VBlock
p14897
tp14898
I2
s(g12066
I42
g12067
Vinsert
p14899
I43
VSimpleType: WrongTypeOfReturnValue
p14900
tp14901
I2
s(Vinsert
p14902
I42
VSimpleName: simpleMethod
p14903
Vinsert
p14904
I42
VSimpleName: mock3
p14905
tp14906
I2
s(g6093
I42
g6094
Vinsert
p14907
I42
VSimpleName: getCurrent
p14908
tp14909
I1
s(g1688
I42
g1689
Vinsert
p14910
I41
VReturnStatement
p14911
tp14912
I4
s(g493
I42
g494
Vinsert
p14913
I33
VNullLiteral
p14914
tp14915
I2
s(g3570
I42
g3571
Vinsert
p14916
I59
VVariableDeclarationFragment
p14917
tp14918
I1
s(g1655
I42
g1656
Vinsert
p14919
I43
VSimpleType: Date
p14920
tp14921
I1
s(g2753
I42
g2754
Vinsert
p14922
I42
VSimpleName: hint
p14923
tp14924
I1
s(g941
I42
g942
Vinsert
p14925
I74
VParameterizedType: Class<?>
p14926
tp14927
I1
s(Vinsert
p14928
I42
VSimpleName: withSettings
p14929
Vinsert
p14930
I11
VCastExpression
p14931
tp14932
I1
s(g4646
I42
g4647
Vinsert
p14933
I42
VSimpleName: mockingProgress
p14934
tp14935
I1
s(g12635
I42
g12636
Vinsert
p14936
I74
VParameterizedType: List<Matcher>
p14937
tp14938
I1
s(g1317
I42
g1318
Vinsert
p14939
I42
VSimpleName: invocation
p14940
tp14941
I1
s(g1229
I42
g1230
Vinsert
p14942
I42
VSimpleName: test2
p14943
tp14944
I1
s(g7351
I42
g7352
Vinsert
p14945
I48
VSuperMethodInvocation
p14946
tp14947
I1
s(g2700
I42
g2701
Vinsert
p14948
I39
VPrimitiveType: void
p14949
tp14950
I1
s(g13383
I42
g13384
Vinsert
p14951
I32
VMethodInvocation
p14952
tp14953
I3
s(g10696
I42
g10697
Vinsert
p14954
I27
VInfixExpression: +
p14955
tp14956
I1
s(g1987
I42
g1988
Vinsert
p14957
I44
VSingleVariableDeclaration
p14958
tp14959
I1
s(g2839
I42
g2840
Vinsert
p14960
I42
VSimpleName: mocks
p14961
tp14962
I2
s(g12221
I42
g12222
Vinsert
p14963
I42
VSimpleName: isAnnotationPresent
p14964
tp14965
I1
s(g6820
I42
g6821
Vinsert
p14966
I42
VSimpleName: List
p14967
tp14968
I1
s(g2871
I42
g2872
Vinsert
p14969
I42
VSimpleName: exceptions
p14970
tp14971
I1
s(Vinsert
p14972
I42
VSimpleName: isSerializable
p14973
Vinsert
p14974
I42
VSimpleName: Exception
p14975
tp14976
I1
s(g956
I42
g957
Vinsert
p14977
I1
VAnonymousClassDeclaration
p14978
tp14979
I1
s(g5622
I42
g5623
Vinsert
p14980
I45
VStringLiteral: "equals"
p14981
tp14982
I1
s(g7022
I42
g7023
Vinsert
p14983
I21
VExpressionStatement
p14984
tp14985
I6
s(g4189
I42
g4190
Vinsert
p14986
I43
VSimpleType: SerializableMode
p14987
tp14988
I1
s(g9234
I42
g9235
Vinsert
p14989
I42
VSimpleName: i
p14990
tp14991
I3
s(g5760
I42
g5761
Vinsert
p14992
I42
VSimpleName: noArgConstructorOf
p14993
tp14994
I1
s(g6820
I42
g6821
Vinsert
p14995
I83
VModifier: public
p14996
tp14997
I1
s(g12422
I42
g12423
Vinsert
p14998
I41
VReturnStatement
p14999
tp15000
I1
s(g8746
I42
g8747
Vinsert
p15001
I42
VSimpleName: IdentitySet
p15002
tp15003
I1
s(g3709
I42
g3710
Vinsert
p15004
I42
VSimpleName: NamingPolicy
p15005
tp15006
I2
s(g13881
I42
g13882
Vinsert
p15007
I60
VVariableDeclarationStatement
p15008
tp15009
I1
s(g1765
I42
g1766
Vinsert
p15010
I25
VIfStatement
p15011
tp15012
I11
s(g4354
I42
g4355
Vinsert
p15013
I21
VExpressionStatement
p15014
tp15015
I2
s(g6736
I42
g6737
Vinsert
p15016
I43
VSimpleType: Invocation
p15017
tp15018
I1
s(Vinsert
p15019
I42
VSimpleName: isSerializable
p15020
Vinsert
p15021
I42
VSimpleName: DelegatingMockitoMethodProxy
p15022
tp15023
I1
s(g8226
I42
g8227
Vinsert
p15024
I43
VSimpleType: Exception
p15025
tp15026
I1
s(g9821
I42
g9822
Vinsert
p15027
I31
VMethodDeclaration
p15028
tp15029
I1
s(Vinsert
p15030
I42
VSimpleName: appendList
p15031
Vinsert
p15032
I42
VSimpleName: matchers
p15033
tp15034
I1
s(g1199
I42
g1200
Vinsert
p15035
I42
VSimpleName: getType
p15036
tp15037
I1
s(g11678
I42
g11679
Vinsert
p15038
I42
VSimpleName: String
p15039
tp15040
I2
s(g11659
I42
g11660
Vinsert
p15041
I42
VSimpleName: MockSettingsImpl
p15042
tp15043
I1
s(g5496
I42
g5497
Vinsert
p15044
I42
VSimpleName: clear
p15045
tp15046
I2
s(g906
I42
g907
Vinsert
p15047
I42
VSimpleName: generationFailed
p15048
tp15049
I1
s(g4924
I42
g4925
Vinsert
p15050
I59
VVariableDeclarationFragment
p15051
tp15052
I20
s(Vinsert
p15053
I42
VSimpleName: printStackTrace
p15054
Vinsert
p15055
I43
VSimpleType: ByteArrayOutputStream
p15056
tp15057
I2
s(g5408
I42
g5409
Vinsert
p15058
I7
VAssignment: =
p15059
tp15060
I1
s(g3797
I42
g3798
Vinsert
p15061
I32
VMethodInvocation
p15062
tp15063
I10
s(g15053
I42
g15054
Vinsert
p15064
I42
VSimpleName: out
p15065
tp15066
I1
s(g2118
I42
g2119
Vinsert
p15067
I57
VTypeLiteral
p15068
tp15069
I2
s(g5821
I42
g5822
Vinsert
p15070
I43
VSimpleType: LinkedList
p15071
tp15072
I1
s(g3106
I42
g3107
Vinsert
p15073
I8
VBlock
p15074
tp15075
I2
s(g2718
I42
g2719
Vinsert
p15076
I42
VSimpleName: Test
p15077
tp15078
I1
s(g12726
I42
g12727
Vinsert
p15079
I78
VMarkerAnnotation
p15080
tp15081
I1
s(g8348
I42
g8349
Vinsert
p15082
I42
VSimpleName: matcher
p15083
tp15084
I8
s(g5934
I42
g5935
Vinsert
p15085
I41
VReturnStatement
p15086
tp15087
I1
s(g46
I42
g47
Vinsert
p15088
I59
VVariableDeclarationFragment
p15089
tp15090
I1
s(Vinsert
p15091
I42
VSimpleName: simpleMethod
p15092
Vinsert
p15093
I42
VSimpleName: shouldPrintInvocations
p15094
tp15095
I1
s(g11961
I42
g11962
Vinsert
p15096
I42
VSimpleName: String
p15097
tp15098
I1
s(g8729
I42
g8730
Vinsert
p15099
I43
VSimpleType: String
p15100
tp15101
I1
s(g8867
I42
g8868
Vinsert
p15102
I42
VSimpleName: getResultFor
p15103
tp15104
I1
s(g12737
I42
g12738
Vinsert
p15105
I42
VSimpleName: createMock
p15106
tp15107
I1
s(g3326
I42
g3327
Vinsert
p15108
I42
VSimpleName: Exception
p15109
tp15110
I1
s(g473
I42
g474
Vinsert
p15111
I42
VSimpleName: UnnecessaryStubbingsReporter
p15112
tp15113
I2
s(g5191
I42
g5192
Vinsert
p15114
I43
VSimpleType: BulkBean
p15115
tp15116
I1
s(g5169
I42
g5170
Vinsert
p15117
I43
VSimpleType: LinkedList
p15118
tp15119
I1
s(g4038
I42
g4039
Vinsert
p15120
I42
VSimpleName: rhs
p15121
tp15122
I1
s(g1858
I42
g1859
Vinsert
p15123
I42
VSimpleName: assertFalse
p15124
tp15125
I2
s(g3896
I42
g3897
Vinsert
p15126
I42
VSimpleName: shouldDisableTimeoutForNever
p15127
tp15128
I1
s(g3590
I42
g3591
Vinsert
p15129
I55
VTypeDeclaration
p15130
tp15131
I1
s(g8337
I42
g8338
Vinsert
p15132
I8
VBlock
p15133
tp15134
I1
s(g5926
I42
g5927
Vinsert
p15135
I42
VSimpleName: ClassNotFoundException
p15136
tp15137
I1
s(g2580
I42
g2581
Vinsert
p15138
I34
VNumberLiteral: 100
p15139
tp15140
I1
s(g2743
I42
g2744
Vinsert
p15141
I42
VSimpleName: similar
p15142
tp15143
I1
s(g2834
I42
g2835
Vinsert
p15144
I42
VSimpleName: superDerived
p15145
tp15146
I2
s(Vinsert
p15147
I42
VSimpleName: print
p15148
Vinsert
p15149
I43
VSimpleType: InvocationMatcher
p15150
tp15151
I1
s(g11572
I42
g11573
Vinsert
p15152
I31
VMethodDeclaration
p15153
tp15154
I1
s(g9252
I42
g9253
Vinsert
p15155
I42
VSimpleName: result
p15156
tp15157
I1
s(g831
I42
g832
Vinsert
p15158
I42
VSimpleName: Invocation
p15159
tp15160
I1
s(g1317
I42
g1318
Vinsert
p15161
I43
VSimpleType: Object
p15162
tp15163
I1
s(g9504
I42
g9505
Vinsert
p15164
I42
VSimpleName: join
p15165
tp15166
I1
s(g7564
I42
g7565
Vinsert
p15167
I60
VVariableDeclarationStatement
p15168
tp15169
I1
s(g1660
I42
g1661
Vinsert
p15170
I31
VMethodDeclaration
p15171
tp15172
I3
s(g1790
I42
g1791
Vinsert
p15173
I8
VBlock
p15174
tp15175
I1
s(g5033
I42
g5034
Vinsert
p15176
I42
VSimpleName: qualifiedName
p15177
tp15178
I1
s(Vinsert
p15179
I42
VSimpleName: iMethodsReturningMethod
p15180
Vinsert
p15181
I21
VExpressionStatement
p15182
tp15183
I5
s(g6898
I42
g6899
Vinsert
p15184
I42
VSimpleName: MockitoException
p15185
tp15186
I1
s(Vinsert
p15187
I42
VSimpleName: getClass
p15188
Vinsert
p15189
I42
VSimpleName: arg
p15190
tp15191
I2
s(g9382
I42
g9383
Vinsert
p15192
I43
VSimpleType: ArgumentCaptor
p15193
tp15194
I1
s(g1881
I42
g1882
Vinsert
p15195
I42
VSimpleName: shouldNotInjectIfNotAnnotated
p15196
tp15197
I1
s(Vinsert
p15198
I42
VSimpleName: getType
p15199
Vinsert
p15200
I42
VSimpleName: field2Type
p15201
tp15202
I1
s(Vinsert
p15203
I42
VSimpleName: getClass
p15204
Vinsert
p15205
I45
VStringLiteral: "Expected array but got object of type: "
p15206
tp15207
I1
s(g1675
I42
g1676
Vinsert
p15208
I42
VSimpleName: Invocation
p15209
tp15210
I1
s(g16
I42
g17
Vinsert
p15211
I42
VSimpleName: String
p15212
tp15213
I1
s(Vinsert
p15214
I42
VSimpleName: getArguments
p15215
Vinsert
p15216
I42
VSimpleName: Throwable
p15217
tp15218
I3
s(Vinsert
p15219
I42
VSimpleName: copyToMock
p15220
Vinsert
p15221
I40
VQualifiedName: first.privateTransientField
p15222
tp15223
I1
s(g4539
I42
g4540
Vinsert
p15224
I42
VSimpleName: MockCreationSettings
p15225
tp15226
I1
s(g10623
I42
g10624
Vinsert
p15227
I85
VDimension
p15228
tp15229
I5
s(g4853
I42
g4854
Vinsert
p15230
I83
VModifier: public
p15231
tp15232
I1
s(g8655
I42
g8656
Vinsert
p15233
I41
VReturnStatement
p15234
tp15235
I5
s(g6252
I42
g6253
Vinsert
p15236
I8
VBlock
p15237
tp15238
I1
s(g1034
I42
g1035
Vinsert
p15239
I66
VTextElement: Basically removes all bad from the middle.
p15240
tp15241
I1
s(g3183
I42
g3184
Vinsert
p15242
I42
VSimpleName: clazz
p15243
tp15244
I1
s(Vinsert
p15245
I42
VSimpleName: append
p15246
Vinsert
p15247
I42
VSimpleName: improvements
p15248
tp15249
I1
s(g2452
I42
g2453
Vinsert
p15250
I42
VSimpleName: ObjectInputStream
p15251
tp15252
I1
s(g1307
I42
g1308
Vinsert
p15253
I8
VBlock
p15254
tp15255
I1
s(g7390
I42
g7391
Vinsert
p15256
I42
VSimpleName: BEAN_MAP_GET
p15257
tp15258
I1
s(g3664
I42
g3665
Vinsert
p15259
I42
VSimpleName: SOME_ERROR
p15260
tp15261
I1
s(g6162
I42
g6163
Vinsert
p15262
I40
VQualifiedName: e.successor
p15263
tp15264
I1
s(Vinsert
p15265
I42
VSimpleName: classes
p15266
Vinsert
p15267
I9
VBooleanLiteral: false
p15268
tp15269
I1
s(g5456
I42
g5457
Vinsert
p15270
I8
VBlock
p15271
tp15272
I5
s(g6962
I42
g6963
Vinsert
p15273
I43
VSimpleType: ReturnsString
p15274
tp15275
I2
s(g4330
I42
g4331
Vinsert
p15276
I42
VSimpleName: what
p15277
tp15278
I1
s(g6948
I42
g6949
Vinsert
p15279
I42
VSimpleName: inAnotherOrder
p15280
tp15281
I2
s(g7361
I42
g7362
Vinsert
p15282
I44
VSingleVariableDeclaration
p15283
tp15284
I3
s(g2959
I42
g2960
Vinsert
p15285
I31
VMethodDeclaration
p15286
tp15287
I1
s(g362
I42
g363
Vinsert
p15288
I1
VAnonymousClassDeclaration
p15289
tp15290
I3
s(g7806
I42
g7807
Vinsert
p15291
I38
VPrefixExpression: !
p15292
tp15293
I1
s(g6321
I42
g6322
Vinsert
p15294
I43
VSimpleType: InvocationBuilder
p15295
tp15296
I10
s(g5335
I42
g5336
Vinsert
p15297
I52
VThisExpression
p15298
tp15299
I1
s(g11177
I42
g11178
Vinsert
p15300
I21
VExpressionStatement
p15301
tp15302
I3
s(Vinsert
p15303
I42
VSimpleName: isVerified
p15304
Vinsert
p15305
I42
VSimpleName: registeredInvocations
p15306
tp15307
I1
s(g14721
I42
g14722
Vinsert
p15308
I42
VSimpleName: MyClass1
p15309
tp15310
I1
s(Vinsert
p15311
I42
VSimpleName: arg
p15312
Vinsert
p15313
I45
VStringLiteral: "Argument(s) are different! Wanted:"
p15314
tp15315
I1
s(Vinsert
p15316
I42
VSimpleName: invokeSuper
p15317
Vinsert
p15318
I83
VModifier: public
p15319
tp15320
I3
s(g4346
I42
g4347
Vinsert
p15321
I42
VSimpleName: should_be_able_to_return_the_specified_parameter
p15322
tp15323
I1
s(g6642
I42
g6643
Vinsert
p15324
I41
VReturnStatement
p15325
tp15326
I1
s(g7495
I42
g7496
Vinsert
p15327
I43
VSimpleType: String
p15328
tp15329
I2
s(g5022
I42
g5023
Vinsert
p15330
I43
VSimpleType: InvocationBuilder
p15331
tp15332
I1
s(g6043
I42
g6044
Vinsert
p15333
I44
VSingleVariableDeclaration
p15334
tp15335
I1
s(g2677
I42
g2678
Vinsert
p15336
I42
VSimpleName: out
p15337
tp15338
I2
s(g14888
I42
g14889
Vinsert
p15339
I45
VStringLiteral: "i have a name"
p15340
tp15341
I1
s(g1967
I42
g1968
Vinsert
p15342
I60
VVariableDeclarationStatement
p15343
tp15344
I2
s(g10015
I42
g10016
Vinsert
p15345
I42
VSimpleName: second
p15346
tp15347
I1
s(g1650
I42
g1651
Vinsert
p15348
I43
VSimpleType: Invocation
p15349
tp15350
I5
s(Vinsert
p15351
I42
VSimpleName: verificationStarted
p15352
Vinsert
p15353
I14
VClassInstanceCreation
p15354
tp15355
I1
s(Vinsert
p15356
I42
VSimpleName: removeLast
p15357
Vinsert
p15358
I83
VModifier: public
p15359
tp15360
I1
s(g219
I42
g220
Vinsert
p15361
I43
VSimpleType: ArgumentMatcher
p15362
tp15363
I2
s(g4346
I42
g4347
Vinsert
p15364
I32
VMethodInvocation
p15365
tp15366
I3
s(g74
I42
g75
Vinsert
p15367
I60
VVariableDeclarationStatement
p15368
tp15369
I1
s(g727
I42
g728
Vinsert
p15370
I40
VQualifiedName: org.mockito.internal.stubbing.OngoingStubbingImpl
p15371
tp15372
I1
s(g5874
I42
g5875
Vinsert
p15373
I42
VSimpleName: assertNull
p15374
tp15375
I1
s(g6217
I42
g6218
Vinsert
p15376
I57
VTypeLiteral
p15377
tp15378
I1
s(Vinsert
p15379
I42
VSimpleName: method
p15380
Vinsert
p15381
I42
VSimpleName: shouldKnowValidThrowables
p15382
tp15383
I2
s(g36
I42
g37
Vinsert
p15384
I34
VNumberLiteral: 4096
p15385
tp15386
I1
s(g1001
I42
g1002
Vinsert
p15387
I43
VSimpleType: List
p15388
tp15389
I6
s(g4502
I42
g4503
Vinsert
p15390
I42
VSimpleName: Equals
p15391
tp15392
I1
s(g6882
I42
g6883
Vinsert
p15393
I43
VSimpleType: Class
p15394
tp15395
I1
s(Vinsert
p15396
I42
VSimpleName: toString
p15397
Vinsert
p15398
I45
VStringLiteral: "shouldLocationNotContainGetStackTraceMethod"
p15399
tp15400
I1
s(g4638
I42
g4639
Vinsert
p15401
I42
VSimpleName: String
p15402
tp15403
I1
s(Vinsert
p15404
I42
VSimpleName: getMessage
p15405
Vinsert
p15406
I45
VStringLiteral: "Unable to create mock instance of type 'HasConstructor'"
p15407
tp15408
I1
s(g5609
I42
g5610
Vinsert
p15409
I29
VJavadoc
p15410
tp15411
I2
s(g11206
I42
g11207
Vinsert
p15412
I42
VSimpleName: invocationWithMatchers
p15413
tp15414
I1
s(g8899
I42
g8900
Vinsert
p15415
I42
VSimpleName: defaultEngine
p15416
tp15417
I1
s(g2780
I42
g2781
Vinsert
p15418
I42
VSimpleName: IMethods
p15419
tp15420
I10
s(g618
I42
g619
Vinsert
p15421
I8
VBlock
p15422
tp15423
I3
s(Vinsert
p15424
I42
VSimpleName: containsKey
p15425
Vinsert
p15426
I42
VSimpleName: config
p15427
tp15428
I6
s(Vinsert
p15429
I42
VSimpleName: iterator
p15430
Vinsert
p15431
I42
VSimpleName: invocations
p15432
tp15433
I6
s(g11206
I42
g11207
Vinsert
p15434
I8
VBlock
p15435
tp15436
I1
s(g4789
I42
g4790
Vinsert
p15437
I43
VSimpleType: Observer
p15438
tp15439
I1
s(g7351
I42
g7352
Vinsert
p15440
I43
VSimpleType: CodeEmitter
p15441
tp15442
I1
s(g13053
I42
g13054
Vinsert
p15443
I42
VSimpleName: Serializable
p15444
tp15445
I1
s(g1416
I42
g1417
Vinsert
p15446
I45
VStringLiteral: "$$"
p15447
tp15448
I1
s(g1675
I42
g1676
Vinsert
p15449
I42
VSimpleName: Collection
p15450
tp15451
I1
s(g8218
I42
g8219
Vinsert
p15452
I45
VStringLiteral: "There were "
p15453
tp15454
I2
s(g234
I42
g235
Vinsert
p15455
I21
VExpressionStatement
p15456
tp15457
I1
s(g3214
I42
g3215
Vinsert
p15458
I42
VSimpleName: mv
p15459
tp15460
I2
s(g1011
I42
g1012
Vinsert
p15461
I42
VSimpleName: Exceptions
p15462
tp15463
I1
s(Vinsert
p15464
I42
VSimpleName: varargs
p15465
Vinsert
p15466
I42
VSimpleName: Object
p15467
tp15468
I4
s(g10081
I42
g10082
Vinsert
p15469
I42
VSimpleName: oos
p15470
tp15471
I2
s(g7403
I42
g7404
Vinsert
p15472
I83
VModifier: final
p15473
tp15474
I1
s(g2000
I42
g2001
Vinsert
p15475
I25
VIfStatement
p15476
tp15477
I1
s(Vinsert
p15478
I42
VSimpleName: getInvocationFactory
p15479
Vinsert
p15480
I42
VSimpleName: getInvocationFactory
p15481
tp15482
I7
s(g6252
I42
g6253
Vinsert
p15483
I21
VExpressionStatement
p15484
tp15485
I1
s(g1642
I42
g1643
Vinsert
p15486
I1
VAnonymousClassDeclaration
p15487
tp15488
I1
s(g1154
I42
g1155
Vinsert
p15489
I43
VSimpleType: String
p15490
tp15491
I1
s(g770
I42
g771
Vinsert
p15492
I14
VClassInstanceCreation
p15493
tp15494
I2
s(g2723
I42
g2724
Vinsert
p15495
I25
VIfStatement
p15496
tp15497
I7
s(Vinsert
p15498
I42
VSimpleName: getMethod
p15499
Vinsert
p15500
I42
VSimpleName: InvocationOnMock
p15501
tp15502
I5
s(g6711
I42
g6712
Vinsert
p15503
I26
VImportDeclaration
p15504
tp15505
I2
s(Vinsert
p15506
I42
VSimpleName: equals
p15507
Vinsert
p15508
I42
VSimpleName: extractRawTypeOf
p15509
tp15510
I1
s(g8488
I42
g8489
Vinsert
p15511
I45
VStringLiteral: "Mock for DummyInterface, hashCode: "
p15512
tp15513
I1
s(g7441
I42
g7442
Vinsert
p15514
I42
VSimpleName: description
p15515
tp15516
I1
s(g3996
I42
g3997
Vinsert
p15517
I32
VMethodInvocation
p15518
tp15519
I1
s(g1115
I42
g1116
Vinsert
p15520
I10
VBreakStatement
p15521
tp15522
I1
s(Vinsert
p15523
I42
VSimpleName: getClass
p15524
Vinsert
p15525
I45
VStringLiteral: "Mocked type must be the same as the type of your delegated instance."
p15526
tp15527
I1
s(g4158
I42
g4159
Vinsert
p15528
I42
VSimpleName: NumberOfInvocationsError
p15529
tp15530
I1
s(g9147
I42
g9148
Vinsert
p15531
I42
VSimpleName: shouldGetPluralizedNumber
p15532
tp15533
I1
s(Vinsert
p15534
I42
VSimpleName: createMock
p15535
Vinsert
p15536
I42
VSimpleName: createMockType
p15537
tp15538
I1
s(Vinsert
p15539
I42
VSimpleName: newInstance
p15540
Vinsert
p15541
I42
VSimpleName: creates_instances_of_inner_classes
p15542
tp15543
I1
s(g3224
I42
g3225
Vinsert
p15544
I21
VExpressionStatement
p15545
tp15546
I2
s(g8965
I42
g8966
Vinsert
p15547
I42
VSimpleName: expected
p15548
tp15549
I2
s(g7416
I42
g7417
Vinsert
p15550
I83
VModifier: public
p15551
tp15552
I1
s(g2944
I42
g2945
Vinsert
p15553
I21
VExpressionStatement
p15554
tp15555
I1
s(g12809
I42
g12810
Vinsert
p15556
I42
VSimpleName: String
p15557
tp15558
I1
s(g4282
I42
g4283
Vinsert
p15559
I43
VSimpleType: InstantiatorProvider
p15560
tp15561
I1
s(g1219
I42
g1220
Vinsert
p15562
I60
VVariableDeclarationStatement
p15563
tp15564
I6
s(g5180
I42
g5181
Vinsert
p15565
I42
VSimpleName: Test
p15566
tp15567
I1
s(g4518
I42
g4519
Vinsert
p15568
I42
VSimpleName: labels
p15569
tp15570
I2
s(g14412
I42
g14413
Vinsert
p15571
I8
VBlock
p15572
tp15573
I4
s(g6316
I42
g6317
Vinsert
p15574
I8
VBlock
p15575
tp15576
I1
s(g8951
I42
g8952
Vinsert
p15577
I42
VSimpleName: A
p15578
tp15579
I1
s(g2748
I42
g2749
Vinsert
p15580
I42
VSimpleName: argTypes
p15581
tp15582
I1
s(g7282
I42
g7283
Vinsert
p15583
I8
VBlock
p15584
tp15585
I1
s(g2271
I42
g2272
Vinsert
p15586
I42
VSimpleName: pluginType
p15587
tp15588
I1
s(g9229
I42
g9230
Vinsert
p15589
I43
VSimpleType: MethodsImpl
p15590
tp15591
I2
s(g1987
I42
g1988
Vinsert
p15592
I42
VSimpleName: testStarted
p15593
tp15594
I1
s(g144
I42
g145
Vinsert
p15595
I83
VModifier: private
p15596
tp15597
I1
s(g4199
I42
g4200
Vinsert
p15598
I13
VCharacterLiteral: 'J'
p15599
tp15600
I1
s(Vinsert
p15601
I42
VSimpleName: setStackTrace
p15602
Vinsert
p15603
I42
VSimpleName: throwable
p15604
tp15605
I1
s(g9649
I42
g9650
Vinsert
p15606
I14
VClassInstanceCreation
p15607
tp15608
I1
s(g6387
I42
g6388
Vinsert
p15609
I42
VSimpleName: MockMethodInterceptor
p15610
tp15611
I1
s(g104
I42
g105
Vinsert
p15612
I62
VInstanceofExpression
p15613
tp15614
I1
s(g9229
I42
g9230
Vinsert
p15615
I59
VVariableDeclarationFragment
p15616
tp15617
I2
s(g104
I42
g105
Vinsert
p15618
I43
VSimpleType: MockAwareVerificationMode
p15619
tp15620
I2
s(g3178
I42
g3179
Vinsert
p15621
I43
VSimpleType: AssertionError
p15622
tp15623
I1
s(g7017
I42
g7018
Vinsert
p15624
I32
VMethodInvocation
p15625
tp15626
I5
s(g7351
I42
g7352
Vinsert
p15627
I27
VInfixExpression: ||
p15628
tp15629
I1
s(g7817
I42
g7818
Vinsert
p15630
I42
VSimpleName: assertSame
p15631
tp15632
I2
s(g5562
I42
g5563
Vinsert
p15633
I43
VSimpleType: Collection
p15634
tp15635
I2
s(g856
I42
g857
Vinsert
p15636
I59
VVariableDeclarationFragment
p15637
tp15638
I3
s(g3478
I42
g3479
Vinsert
p15639
I9
VBooleanLiteral: false
p15640
tp15641
I1
s(g6877
I42
g6878
Vinsert
p15642
I43
VSimpleType: ITestResult
p15643
tp15644
I1
s(g4082
I42
g4083
Vinsert
p15645
I42
VSimpleName: expectSuccess
p15646
tp15647
I1
s(g5237
I42
g5238
Vinsert
p15648
I83
VModifier: public
p15649
tp15650
I1
s(g2916
I42
g2917
Vinsert
p15651
I42
VSimpleName: stub
p15652
tp15653
I2
s(Vinsert
p15654
I42
VSimpleName: add
p15655
Vinsert
p15656
I43
VSimpleType: Set
p15657
tp15658
I1
s(g4194
I42
g4195
Vinsert
p15659
I42
VSimpleName: Runnable
p15660
tp15661
I1
s(g4212
I42
g4213
Vinsert
p15662
I25
VIfStatement
p15663
tp15664
I1
s(g1901
I42
g1902
Vinsert
p15665
I83
VModifier: public
p15666
tp15667
I1
s(Vinsert
p15668
I42
VSimpleName: of
p15669
Vinsert
p15670
I42
VSimpleName: nonMock
p15671
tp15672
I1
s(g4934
I42
g4935
Vinsert
p15673
I83
VModifier: public
p15674
tp15675
I1
s(g5282
I42
g5283
Vinsert
p15676
I42
VSimpleName: invocations
p15677
tp15678
I1
s(Vinsert
p15679
I42
VSimpleName: markVerified
p15680
Vinsert
p15681
I42
VSimpleName: differentMethodInvocation
p15682
tp15683
I1
s(g14566
I42
g14567
Vinsert
p15684
I32
VMethodInvocation
p15685
tp15686
I6
s(g15601
I42
g15602
Vinsert
p15687
I60
VVariableDeclarationStatement
p15688
tp15689
I6
s(g1977
I42
g1978
Vinsert
p15690
I39
VPrimitiveType: void
p15691
tp15692
I2
s(g2190
I42
g2191
Vinsert
p15693
I58
VVariableDeclarationExpression
p15694
tp15695
I3
s(g322
I42
g323
Vinsert
p15696
I59
VVariableDeclarationFragment
p15697
tp15698
I2
s(g12267
I42
g12268
Vinsert
p15699
I42
VSimpleName: name
p15700
tp15701
I1
s(g5282
I42
g5283
Vinsert
p15702
I8
VBlock
p15703
tp15704
I1
s(g1558
I42
g1559
Vinsert
p15705
I42
VSimpleName: Type
p15706
tp15707
I3
s(g7638
I42
g7639
Vinsert
p15708
I8
VBlock
p15709
tp15710
I2
s(Vinsert
p15711
I42
VSimpleName: add
p15712
Vinsert
p15713
I42
VSimpleName: objects
p15714
tp15715
I1
s(g2770
I42
g2771
Vinsert
p15716
I53
VThrowStatement
p15717
tp15718
I1
s(Vinsert
p15719
I42
VSimpleName: then
p15720
Vinsert
p15721
I43
VSimpleType: Answer
p15722
tp15723
I1
s(g10385
I42
g10386
Vinsert
p15724
I31
VMethodDeclaration
p15725
tp15726
I1
s(g199
I42
g200
Vinsert
p15727
I42
VSimpleName: Exception
p15728
tp15729
I1
s(g2005
I42
g2006
Vinsert
p15730
I42
VSimpleName: when
p15731
tp15732
I1
s(Vinsert
p15733
I42
VSimpleName: getClass
p15734
Vinsert
p15735
I42
VSimpleName: invocation
p15736
tp15737
I1
s(g4924
I42
g4925
Vinsert
p15738
I42
VSimpleName: streamType
p15739
tp15740
I6
s(g5300
I42
g5301
Vinsert
p15741
I42
VSimpleName: loadClass
p15742
tp15743
I1
s(g13161
I42
g13162
Vinsert
p15744
I42
VSimpleName: IOException
p15745
tp15746
I1
s(Vinsert
p15747
I42
VSimpleName: run
p15748
Vinsert
p15749
I42
VSimpleName: JunitTestBody
p15750
tp15751
I1
s(g4840
I42
g4841
Vinsert
p15752
I31
VMethodDeclaration
p15753
tp15754
I1
s(Vinsert
p15755
I42
VSimpleName: getAllInvocations
p15756
Vinsert
p15757
I14
VClassInstanceCreation
p15758
tp15759
I5
s(g593
I42
g594
Vinsert
p15760
I41
VReturnStatement
p15761
tp15762
I1
s(g1538
I42
g1539
Vinsert
p15763
I45
VStringLiteral: "-> at "
p15764
tp15765
I1
s(g9758
I42
g9759
Vinsert
p15766
I22
VFieldAccess
p15767
tp15768
I1
s(g5916
I42
g5917
Vinsert
p15769
I45
VStringLiteral: "exception expected"
p15770
tp15771
I1
s(g13897
I42
g13898
Vinsert
p15772
I44
VSingleVariableDeclaration
p15773
tp15774
I1
s(g1204
I42
g1205
Vinsert
p15775
I42
VSimpleName: timeFromPast
p15776
tp15777
I1
s(g7086
I42
g7087
Vinsert
p15778
I42
VSimpleName: findClass
p15779
tp15780
I1
s(g5057
I42
g5058
Vinsert
p15781
I42
VSimpleName: getCause
p15782
tp15783
I2
s(g1239
I42
g1240
Vinsert
p15784
I62
VInstanceofExpression
p15785
tp15786
I1
s(g8337
I42
g8338
Vinsert
p15787
I42
VSimpleName: e
p15788
tp15789
I2
s(g10680
I42
g10681
Vinsert
p15790
I42
VSimpleName: ClassNotFoundException
p15791
tp15792
I1
s(g3758
I42
g3759
Vinsert
p15793
I43
VSimpleType: OrderOfInvocationsVerifier
p15794
tp15795
I1
s(g6736
I42
g6737
Vinsert
p15796
I42
VSimpleName: finder
p15797
tp15798
I2
s(Vinsert
p15799
I42
VSimpleName: initMocks
p15800
Vinsert
p15801
I42
VSimpleName: shouldScreamWhenWrongTypeForCaptor
p15802
tp15803
I1
s(Vinsert
p15804
I42
VSimpleName: createThrowingAnswer
p15805
Vinsert
p15806
I31
VMethodDeclaration
p15807
tp15808
I1
s(g1780
I42
g1781
Vinsert
p15809
I42
VSimpleName: getExceptionTypes
p15810
tp15811
I2
s(g357
I42
g358
Vinsert
p15812
I43
VSimpleType: AssertionError
p15813
tp15814
I2
s(g5100
I42
g5101
Vinsert
p15815
I42
VSimpleName: putfield
p15816
tp15817
I1
s(g10567
I42
g10568
Vinsert
p15818
I42
VSimpleName: T
p15819
tp15820
I1
s(g11263
I42
g11264
Vinsert
p15821
I42
VSimpleName: getMock
p15822
tp15823
I1
s(g2647
I42
g2648
Vinsert
p15824
I42
VSimpleName: Exception
p15825
tp15826
I4
s(g846
I42
g847
Vinsert
p15827
I42
VSimpleName: Invocation
p15828
tp15829
I13
s(g5033
I42
g5034
Vinsert
p15830
I42
VSimpleName: isMultiline
p15831
tp15832
I1
s(g2227
I42
g2228
Vinsert
p15833
I42
VSimpleName: toReturn
p15834
tp15835
I1
s(Vinsert
p15836
I42
VSimpleName: getClass
p15837
Vinsert
p15838
I57
VTypeLiteral
p15839
tp15840
I3
s(Vinsert
p15841
I42
VSimpleName: invoke
p15842
Vinsert
p15843
I42
VSimpleName: Method
p15844
tp15845
I1
s(g6379
I42
g6380
Vinsert
p15846
I42
VSimpleName: assertEquals
p15847
tp15848
I1
s(g1906
I42
g1907
Vinsert
p15849
I5
VArrayType: Object[]
p15850
tp15851
I2
s(g7544
I42
g7545
Vinsert
p15852
I43
VSimpleType: Reporter
p15853
tp15854
I1
s(g11552
I42
g11553
Vinsert
p15855
I42
VSimpleName: targetType
p15856
tp15857
I1
s(g2796
I42
g2797
Vinsert
p15858
I42
VSimpleName: shouldAutoboxAllPrimitives
p15859
tp15860
I1
s(g12000
I42
g12001
Vinsert
p15861
I43
VSimpleType: Class
p15862
tp15863
I2
s(g5916
I42
g5917
Vinsert
p15864
I42
VSimpleName: simpleMethodWithArgument
p15865
tp15866
I1
s(Vinsert
p15867
I42
VSimpleName: getArguments
p15868
Vinsert
p15869
I42
VSimpleName: assertTrue
p15870
tp15871
I1
s(g1650
I42
g1651
Vinsert
p15872
I42
VSimpleName: Invocation
p15873
tp15874
I5
s(g1543
I42
g1544
Vinsert
p15875
I76
VWildcardType: ? extends Throwable
p15876
tp15877
I1
s(g7395
I42
g7396
Vinsert
p15878
I8
VBlock
p15879
tp15880
I3
s(Vinsert
p15881
I42
VSimpleName: append
p15882
Vinsert
p15883
I42
VSimpleName: sb
p15884
tp15885
I8
s(g2695
I42
g2696
Vinsert
p15886
I60
VVariableDeclarationStatement
p15887
tp15888
I6
s(g10567
I42
g10568
Vinsert
p15889
I32
VMethodInvocation
p15890
tp15891
I4
s(g10354
I42
g10355
Vinsert
p15892
I21
VExpressionStatement
p15893
tp15894
I5
s(g1815
I42
g1816
Vinsert
p15895
I32
VMethodInvocation
p15896
tp15897
I1
s(g2261
I42
g2262
Vinsert
p15898
I32
VMethodInvocation
p15899
tp15900
I17
s(g5062
I42
g5063
Vinsert
p15901
I43
VSimpleType: Throwable
p15902
tp15903
I1
s(g8493
I42
g8494
Vinsert
p15904
I26
VImportDeclaration
p15905
tp15906
I1
s(g3991
I42
g3992
Vinsert
p15907
I42
VSimpleName: TraceBuilder
p15908
tp15909
I3
s(g5439
I42
g5440
Vinsert
p15910
I42
VSimpleName: LinkedHashSet
p15911
tp15912
I1
s(Vinsert
p15913
I42
VSimpleName: log
p15914
Vinsert
p15915
I42
VSimpleName: i1
p15916
tp15917
I1
s(g9491
I42
g9492
Vinsert
p15918
I22
VFieldAccess
p15919
tp15920
I2
s(g5352
I42
g5353
Vinsert
p15921
I42
VSimpleName: shouldVerifyInOrder
p15922
tp15923
I1
s(g7124
I42
g7125
Vinsert
p15924
I1
VAnonymousClassDeclaration
p15925
tp15926
I1
s(g2316
I42
g2317
Vinsert
p15927
I14
VClassInstanceCreation
p15928
tp15929
I1
s(g1660
I42
g1661
Vinsert
p15930
I39
VPrimitiveType: boolean
p15931
tp15932
I4
s(g4675
I42
g4676
Vinsert
p15933
I42
VSimpleName: List
p15934
tp15935
I3
s(g4585
I42
g4586
Vinsert
p15936
I42
VSimpleName: InvocationMarker
p15937
tp15938
I4
s(Vinsert
p15939
I42
VSimpleName: simpleMethod
p15940
Vinsert
p15941
I42
VSimpleName: validate
p15942
tp15943
I1
s(g4887
I42
g4888
Vinsert
p15944
I43
VSimpleType: ExceptionThree
p15945
tp15946
I1
s(Vinsert
p15947
I42
VSimpleName: mock
p15948
Vinsert
p15949
I55
VTypeDeclaration
p15950
tp15951
I3
s(Vinsert
p15952
I42
VSimpleName: verify
p15953
Vinsert
p15954
I42
VSimpleName: one
p15955
tp15956
I3
s(g3704
I42
g3705
Vinsert
p15957
I42
VSimpleName: value
p15958
tp15959
I1
s(g6056
I42
g6057
Vinsert
p15960
I42
VSimpleName: foo
p15961
tp15962
I1
s(g15498
I42
g15499
Vinsert
p15963
I42
VSimpleName: Throwable
p15964
tp15965
I3
s(g3565
I42
g3566
Vinsert
p15966
I59
VVariableDeclarationFragment
p15967
tp15968
I1
s(g2536
I42
g2537
Vinsert
p15969
I42
VSimpleName: methods
p15970
tp15971
I1
s(Vinsert
p15972
I42
VSimpleName: getName
p15973
Vinsert
p15974
I43
VSimpleType: Person
p15975
tp15976
I1
s(g10180
I42
g10181
Vinsert
p15977
I42
VSimpleName: String
p15978
tp15979
I1
s(g704
I42
g705
Vinsert
p15980
I42
VSimpleName: klass
p15981
tp15982
I1
s(g2881
I42
g2882
Vinsert
p15983
I39
VPrimitiveType: int
p15984
tp15985
I2
s(g9739
I42
g9740
Vinsert
p15986
I42
VSimpleName: throwsMessage
p15987
tp15988
I1
s(g6111
I42
g6112
Vinsert
p15989
I83
VModifier: public
p15990
tp15991
I1
s(g981
I42
g982
Vinsert
p15992
I42
VSimpleName: constructorParam
p15993
tp15994
I1
s(g1706
I42
g1707
Vinsert
p15995
I42
VSimpleName: Test
p15996
tp15997
I1
s(g14412
I42
g14413
Vinsert
p15998
I42
VSimpleName: InvocationListener
p15999
tp16000
I1
s(g851
I42
g852
Vinsert
p16001
I78
VMarkerAnnotation
p16002
tp16003
I1
s(Vinsert
p16004
I42
VSimpleName: getClass
p16005
Vinsert
p16006
I45
VStringLiteral: "The mock maker in use was: "
p16007
tp16008
I1
s(g2147
I42
g2148
Vinsert
p16009
I42
VSimpleName: throwable
p16010
tp16011
I2
s(g5879
I42
g5880
Vinsert
p16012
I14
VClassInstanceCreation
p16013
tp16014
I3
s(g8136
I42
g8137
Vinsert
p16015
I42
VSimpleName: forByte
p16016
tp16017
I1
s(g1805
I42
g1806
Vinsert
p16018
I43
VSimpleType: ExpectedInvocation
p16019
tp16020
I1
s(g588
I42
g589
Vinsert
p16021
I45
VStringLiteral: "Misplaced argument matcher"
p16022
tp16023
I1
s(g3637
I42
g3638
Vinsert
p16024
I5
VArrayType: URL[]
p16025
tp16026
I1
s(g2954
I42
g2955
Vinsert
p16027
I45
VStringLiteral: "foo"
p16028
tp16029
I1
s(g765
I42
g766
Vinsert
p16030
I54
VTryStatement
p16031
tp16032
I1
s(g1209
I42
g1210
Vinsert
p16033
I25
VIfStatement
p16034
tp16035
I2
s(g3359
I42
g3360
Vinsert
p16036
I83
VModifier: public
p16037
tp16038
I2
s(g1780
I42
g1781
Vinsert
p16039
I42
VSimpleName: Test
p16040
tp16041
I1
s(g2993
I42
g2994
Vinsert
p16042
I45
VStringLiteral: ""
p16043
tp16044
I1
s(g3943
I42
g3944
Vinsert
p16045
I42
VSimpleName: pureMockitoAPIClasses
p16046
tp16047
I1
s(Vinsert
p16048
I42
VSimpleName: println
p16049
Vinsert
p16050
I43
VSimpleType: String
p16051
tp16052
I3
s(Vinsert
p16053
I42
VSimpleName: addConsecutiveAnswer
p16054
Vinsert
p16055
I42
VSimpleName: thenAnswer
p16056
tp16057
I3
s(g13855
I42
g13856
Vinsert
p16058
I83
VModifier: public
p16059
tp16060
I17
s(g7806
I42
g7807
Vinsert
p16061
I42
VSimpleName: isEmpty
p16062
tp16063
I1
s(g15668
I42
g15669
Vinsert
p16064
I14
VClassInstanceCreation
p16065
tp16066
I4
s(Vinsert
p16067
I42
VSimpleName: setStackTrace
p16068
Vinsert
p16069
I43
VSimpleType: HasStackTrace
p16070
tp16071
I1
s(g13427
I42
g13428
Vinsert
p16072
I21
VExpressionStatement
p16073
tp16074
I1
s(g410
I42
g411
Vinsert
p16075
I8
VBlock
p16076
tp16077
I3
s(g8288
I42
g8289
Vinsert
p16078
I42
VSimpleName: listenerThrowable
p16079
tp16080
I1
s(g704
I42
g705
Vinsert
p16081
I42
VSimpleName: StrictRunner
p16082
tp16083
I1
s(g4991
I42
g4992
Vinsert
p16084
I31
VMethodDeclaration
p16085
tp16086
I1
s(g3313
I42
g3314
Vinsert
p16087
I42
VSimpleName: withSettings
p16088
tp16089
I1
s(g8921
I42
g8922
Vinsert
p16090
I43
VSimpleType: BaseMessage
p16091
tp16092
I1
s(Vinsert
p16093
I42
VSimpleName: mock
p16094
Vinsert
p16095
I42
VSimpleName: MockitoCore
p16096
tp16097
I1
s(g1688
I42
g1689
Vinsert
p16098
I42
VSimpleName: BDDStubberImpl
p16099
tp16100
I1
s(g10346
I42
g10347
Vinsert
p16101
I42
VSimpleName: IMethods
p16102
tp16103
I1
s(g2657
I42
g2658
Vinsert
p16104
I83
VModifier: public
p16105
tp16106
I1
s(Vinsert
p16107
I42
VSimpleName: valueFor
p16108
Vinsert
p16109
I42
VSimpleName: getReturnType
p16110
tp16111
I1
s(g1039
I42
g1040
Vinsert
p16112
I32
VMethodInvocation
p16113
tp16114
I1
s(g8095
I42
g8096
Vinsert
p16115
I27
VInfixExpression: ==
p16116
tp16117
I1
s(g1264
I42
g1265
Vinsert
p16118
I42
VSimpleName: createInvocation
p16119
tp16120
I1
s(g8176
I42
g8177
Vinsert
p16121
I9
VBooleanLiteral: true
p16122
tp16123
I1
s(g7521
I42
g7522
Vinsert
p16124
I80
VMemberValuePair
p16125
tp16126
I1
s(g7544
I42
g7545
Vinsert
p16127
I43
VSimpleType: Answer
p16128
tp16129
I1
s(g5655
I42
g5656
Vinsert
p16130
I42
VSimpleName: testClassInstance
p16131
tp16132
I1
s(g7872
I42
g7873
Vinsert
p16133
I42
VSimpleName: mock
p16134
tp16135
I3
s(g8778
I42
g8779
Vinsert
p16136
I32
VMethodInvocation
p16137
tp16138
I5
s(g8604
I42
g8605
Vinsert
p16139
I21
VExpressionStatement
p16140
tp16141
I2
s(g9571
I42
g9572
Vinsert
p16142
I42
VSimpleName: VerificationModeBuilder
p16143
tp16144
I1
s(g2585
I42
g2586
Vinsert
p16145
I32
VMethodInvocation
p16146
tp16147
I3
s(g3991
I42
g3992
Vinsert
p16148
I14
VClassInstanceCreation
p16149
tp16150
I3
s(g2490
I42
g2491
Vinsert
p16151
I59
VVariableDeclarationFragment
p16152
tp16153
I1
s(Vinsert
p16154
I42
VSimpleName: isSpy
p16155
Vinsert
p16156
I42
VSimpleName: spy
p16157
tp16158
I2
s(g10465
I42
g10466
Vinsert
p16159
I43
VSimpleType: List
p16160
tp16161
I3
s(g7696
I42
g7697
Vinsert
p16162
I42
VSimpleName: Test
p16163
tp16164
I1
s(g871
I42
g872
Vinsert
p16165
I43
VSimpleType: String
p16166
tp16167
I1
s(g856
I42
g857
Vinsert
p16168
I39
VPrimitiveType: int
p16169
tp16170
I1
s(g1006
I42
g1007
Vinsert
p16171
I45
VStringLiteral: "-> at "
p16172
tp16173
I1
s(g14538
I42
g14539
Vinsert
p16174
I42
VSimpleName: Thread
p16175
tp16176
I1
s(g7564
I42
g7565
Vinsert
p16177
I42
VSimpleName: shouldNotMarkInvocationsAsVerifiedWhenModeIsNotExplicit
p16178
tp16179
I1
s(g2147
I42
g2148
Vinsert
p16180
I42
VSimpleName: toThrow
p16181
tp16182
I2
s(g7177
I42
g7178
Vinsert
p16183
I42
VSimpleName: InvocationTargetException
p16184
tp16185
I5
s(g9344
I42
g9345
Vinsert
p16186
I42
VSimpleName: matchesTypeSafe
p16187
tp16188
I1
s(Vinsert
p16189
I42
VSimpleName: newRow
p16190
Vinsert
p16191
I45
VStringLiteral: "bar"
p16192
tp16193
I1
s(g11678
I42
g11679
Vinsert
p16194
I22
VFieldAccess
p16195
tp16196
I4
s(g3537
I42
g3538
Vinsert
p16197
I43
VSimpleType: Service
p16198
tp16199
I1
s(g10696
I42
g10697
Vinsert
p16200
I14
VClassInstanceCreation
p16201
tp16202
I1
s(g224
I42
g225
Vinsert
p16203
I42
VSimpleName: say
p16204
tp16205
I2
s(g5256
I42
g5257
Vinsert
p16206
I42
VSimpleName: appendArray
p16207
tp16208
I1
s(g1403
I42
g1404
Vinsert
p16209
I42
VSimpleName: doReturn
p16210
tp16211
I1
s(g5789
I42
g5790
Vinsert
p16212
I43
VSimpleType: Reporter
p16213
tp16214
I1
s(Vinsert
p16215
I42
VSimpleName: getUnfilteredStackTrace
p16216
Vinsert
p16217
I42
VSimpleName: MockitoException
p16218
tp16219
I1
s(g7888
I42
g7889
Vinsert
p16220
I21
VExpressionStatement
p16221
tp16222
I2
s(g3036
I42
g3037
Vinsert
p16223
I32
VMethodInvocation
p16224
tp16225
I4
s(g5416
I42
g5417
Vinsert
p16226
I83
VModifier: public
p16227
tp16228
I1
s(g2175
I42
g2176
Vinsert
p16229
I45
VStringLiteral: "notMock"
p16230
tp16231
I1
s(Vinsert
p16232
I42
VSimpleName: valueFor
p16233
Vinsert
p16234
I11
VCastExpression
p16235
tp16236
I1
s(g7572
I42
g7573
Vinsert
p16237
I83
VModifier: public
p16238
tp16239
I5
s(Vinsert
p16240
I42
VSimpleName: getEnclosingClass
p16241
Vinsert
p16242
I27
VInfixExpression: !=
p16243
tp16244
I1
s(g15952
I42
g15953
Vinsert
p16245
I45
VStringLiteral: "Strict verification failure"
p16246
tp16247
I1
s(g4670
I42
g4671
Vinsert
p16248
I45
VStringLiteral: "java.lang.String"
p16249
tp16250
I1
s(g5549
I42
g5550
Vinsert
p16251
I60
VVariableDeclarationStatement
p16252
tp16253
I1
s(g9021
I42
g9022
Vinsert
p16254
I42
VSimpleName: genericArrayType
p16255
tp16256
I1
s(g643
I42
g644
Vinsert
p16257
I83
VModifier: public
p16258
tp16259
I1
s(g12777
I42
g12778
Vinsert
p16260
I39
VPrimitiveType: int
p16261
tp16262
I1
s(g8588
I42
g8589
Vinsert
p16263
I42
VSimpleName: defaultValue
p16264
tp16265
I2
s(g6184
I42
g6185
Vinsert
p16266
I42
VSimpleName: getFirstUnverified
p16267
tp16268
I1
s(Vinsert
p16269
I42
VSimpleName: getModifiers
p16270
Vinsert
p16271
I7
VAssignment: =
p16272
tp16273
I1
s(g453
I42
g454
Vinsert
p16274
I32
VMethodInvocation
p16275
tp16276
I1
s(g12231
I42
g12232
Vinsert
p16277
I42
VSimpleName: defaultAnswer
p16278
tp16279
I1
s(g2010
I42
g2011
Vinsert
p16280
I60
VVariableDeclarationStatement
p16281
tp16282
I1
s(Vinsert
p16283
I42
VSimpleName: captureFrom
p16284
Vinsert
p16285
I59
VVariableDeclarationFragment
p16286
tp16287
I2
s(g13114
I42
g13115
Vinsert
p16288
I43
VSimpleType: List
p16289
tp16290
I3
s(Vinsert
p16291
I42
VSimpleName: expect
p16292
Vinsert
p16293
I42
VSimpleName: Inner
p16294
tp16295
I1
s(g1962
I42
g1963
Vinsert
p16296
I42
VSimpleName: Override
p16297
tp16298
I1
s(g4763
I42
g4764
Vinsert
p16299
I42
VSimpleName: inOrder
p16300
tp16301
I1
s(g7243
I42
g7244
Vinsert
p16302
I42
VSimpleName: asList
p16303
tp16304
I1
s(g5237
I42
g5238
Vinsert
p16305
I43
VSimpleType: MockitoFramework
p16306
tp16307
I1
s(g307
I42
g308
Vinsert
p16308
I32
VMethodInvocation
p16309
tp16310
I9
s(g10490
I42
g10491
Vinsert
p16311
I8
VBlock
p16312
tp16313
I5
s(Vinsert
p16314
I42
VSimpleName: toString
p16315
Vinsert
p16316
I42
VSimpleName: start
p16317
tp16318
I1
s(g7062
I42
g7063
Vinsert
p16319
I42
VSimpleName: intArgumentMethod
p16320
tp16321
I2
s(g4952
I42
g4953
Vinsert
p16322
I42
VSimpleName: VerificationMode
p16323
tp16324
I2
s(g1619
I42
g1620
Vinsert
p16325
I32
VMethodInvocation
p16326
tp16327
I12
s(Vinsert
p16328
I42
VSimpleName: assertThat
p16329
Vinsert
p16330
I42
VSimpleName: invocationListeners
p16331
tp16332
I1
s(g6098
I42
g6099
Vinsert
p16333
I83
VModifier: final
p16334
tp16335
I1
s(g3016
I42
g3017
Vinsert
p16336
I54
VTryStatement
p16337
tp16338
I2
s(g7208
I42
g7209
Vinsert
p16339
I42
VSimpleName: notifier
p16340
tp16341
I1
s(g1431
I42
g1432
Vinsert
p16342
I43
VSimpleType: HasStackTraceStub
p16343
tp16344
I1
s(g7854
I42
g7855
Vinsert
p16345
I42
VSimpleName: println
p16346
tp16347
I1
s(Vinsert
p16348
I42
VSimpleName: when
p16349
Vinsert
p16350
I45
VStringLiteral: "foo"
p16351
tp16352
I4
s(g124
I42
g125
Vinsert
p16353
I42
VSimpleName: String
p16354
tp16355
I1
s(Vinsert
p16356
I42
VSimpleName: isEmpty
p16357
Vinsert
p16358
I42
VSimpleName: StubbedInvocationMatcher
p16359
tp16360
I1
s(g16356
I42
g16357
Vinsert
p16361
I42
VSimpleName: add
p16362
tp16363
I1
s(g5461
I42
g5462
Vinsert
p16364
I59
VVariableDeclarationFragment
p16365
tp16366
I1
s(g4696
I42
g4697
Vinsert
p16367
I60
VVariableDeclarationStatement
p16368
tp16369
I3
s(g10772
I42
g10773
Vinsert
p16370
I70
VEnhancedForStatement
p16371
tp16372
I1
s(g9323
I42
g9324
Vinsert
p16373
I34
VNumberLiteral: 1
p16374
tp16375
I1
s(g1815
I42
g1816
Vinsert
p16376
I42
VSimpleName: sc
p16377
tp16378
I1
s(g10164
I42
g10165
Vinsert
p16379
I27
VInfixExpression: ==
p16380
tp16381
I1
s(g6355
I42
g6356
Vinsert
p16382
I42
VSimpleName: inOrder
p16383
tp16384
I1
s(g5206
I42
g5207
Vinsert
p16385
I42
VSimpleName: METHOD_GET_INDEX
p16386
tp16387
I1
s(g778
I42
g779
Vinsert
p16388
I43
VSimpleType: ClassVisitor
p16389
tp16390
I1
s(g9929
I42
g9930
Vinsert
p16391
I45
VStringLiteral: "hello"
p16392
tp16393
I1
s(g10252
I42
g10253
Vinsert
p16394
I42
VSimpleName: make_sure_mock_is_initialized
p16395
tp16396
I1
s(g6776
I42
g6777
Vinsert
p16397
I42
VSimpleName: booleanReturningMethod
p16398
tp16399
I1
s(g11206
I42
g11207
Vinsert
p16400
I43
VSimpleType: InvocationWithMatchers
p16401
tp16402
I1
s(g3493
I42
g3494
Vinsert
p16403
I42
VSimpleName: m
p16404
tp16405
I4
s(g2256
I42
g2257
Vinsert
p16406
I42
VSimpleName: toBeThrown
p16407
tp16408
I3
s(g9252
I42
g9253
Vinsert
p16409
I43
VSimpleType: StackTraceFilterStub
p16410
tp16411
I2
s(g10520
I42
g10521
Vinsert
p16412
I44
VSingleVariableDeclaration
p16413
tp16414
I1
s(g2036
I42
g2037
Vinsert
p16415
I42
VSimpleName: getCause
p16416
tp16417
I1
s(Vinsert
p16418
I42
VSimpleName: getParameterTypes
p16419
Vinsert
p16420
I42
VSimpleName: existingHasBetterParam
p16421
tp16422
I1
s(g6841
I42
g6842
Vinsert
p16423
I42
VSimpleName: assertEquals
p16424
tp16425
I1
s(g1558
I42
g1559
Vinsert
p16426
I42
VSimpleName: DRETURN
p16427
tp16428
I1
s(Vinsert
p16429
I42
VSimpleName: put
p16430
Vinsert
p16431
I43
VSimpleType: CapturesArgumensFromInvocation
p16432
tp16433
I1
s(g2175
I42
g2176
Vinsert
p16434
I83
VModifier: public
p16435
tp16436
I1
s(g1871
I42
g1872
Vinsert
p16437
I53
VThrowStatement
p16438
tp16439
I1
s(g4696
I42
g4697
Vinsert
p16440
I59
VVariableDeclarationFragment
p16441
tp16442
I3
s(g11214
I42
g11215
Vinsert
p16443
I42
VSimpleName: makeMarkerInterface
p16444
tp16445
I1
s(g16328
I42
g16329
Vinsert
p16446
I43
VSimpleType: Exception
p16447
tp16448
I2
s(Vinsert
p16449
I42
VSimpleName: readLine
p16450
Vinsert
p16451
I32
VMethodInvocation
p16452
tp16453
I1
s(Vinsert
p16454
I42
VSimpleName: clear
p16455
Vinsert
p16456
I42
VSimpleName: shouldDetectUnverifiedInMarkInteractionsAsVerified
p16457
tp16458
I1
s(g3369
I42
g3370
Vinsert
p16459
I21
VExpressionStatement
p16460
tp16461
I1
s(g16291
I42
g16292
Vinsert
p16462
I40
VQualifiedName: Outer.Inner
p16463
tp16464
I1
s(g3078
I42
g3079
Vinsert
p16465
I42
VSimpleName: warnMessage2
p16466
tp16467
I1
s(g10889
I42
g10890
Vinsert
p16468
I34
VNumberLiteral: 0
p16469
tp16470
I1
s(g3977
I42
g3978
Vinsert
p16471
I21
VExpressionStatement
p16472
tp16473
I1
s(g7243
I42
g7244
Vinsert
p16474
I34
VNumberLiteral: 1
p16475
tp16476
I1
s(g10311
I42
g10312
Vinsert
p16477
I78
VMarkerAnnotation
p16478
tp16479
I1
s(g2467
I42
g2468
Vinsert
p16480
I74
VParameterizedType: MockHandlerInterface<T>
p16481
tp16482
I1
s(g8011
I42
g8012
Vinsert
p16483
I45
VStringLiteral: ""
p16484
tp16485
I1
s(g6763
I42
g6764
Vinsert
p16486
I43
VSimpleType: HasStackTraceStub
p16487
tp16488
I2
s(g2642
I42
g2643
Vinsert
p16489
I59
VVariableDeclarationFragment
p16490
tp16491
I2
s(g4226
I42
g4227
Vinsert
p16492
I42
VSimpleName: InvocationBuilder
p16493
tp16494
I1
s(g3303
I42
g3304
Vinsert
p16495
I42
VSimpleName: CodeEmitter
p16496
tp16497
I1
s(g9711
I42
g9712
Vinsert
p16498
I59
VVariableDeclarationFragment
p16499
tp16500
I19
s(g1269
I42
g1270
Vinsert
p16501
I43
VSimpleType: UnusedStubbings
p16502
tp16503
I1
s(g12890
I42
g12891
Vinsert
p16504
I42
VSimpleName: InstanceField
p16505
tp16506
I1
s(g5017
I42
g5018
Vinsert
p16507
I42
VSimpleName: mockitoMethod
p16508
tp16509
I1
s(g3262
I42
g3263
Vinsert
p16510
I66
VTextElement:  verification mode
p16511
tp16512
I1
s(Vinsert
p16513
I42
VSimpleName: getSuperclass
p16514
Vinsert
p16515
I42
VSimpleName: mockedProxyType
p16516
tp16517
I1
s(g8991
I42
g8992
Vinsert
p16518
I42
VSimpleName: stackTraceFilter
p16519
tp16520
I2
s(g5647
I42
g5648
Vinsert
p16521
I42
VSimpleName: println
p16522
tp16523
I1
s(Vinsert
p16524
I42
VSimpleName: unmodifiableSet
p16525
Vinsert
p16526
I22
VFieldAccess
p16527
tp16528
I2
s(g2195
I42
g2196
Vinsert
p16529
I42
VSimpleName: Object
p16530
tp16531
I1
s(g61
I42
g62
Vinsert
p16532
I83
VModifier: public
p16533
tp16534
I4
s(g5501
I42
g5502
Vinsert
p16535
I52
VThisExpression
p16536
tp16537
I1
s(g4231
I42
g4232
Vinsert
p16538
I42
VSimpleName: element
p16539
tp16540
I1
s(g9860
I42
g9861
Vinsert
p16541
I45
VStringLiteral: ", but was: "
p16542
tp16543
I1
s(g3369
I42
g3370
Vinsert
p16544
I42
VSimpleName: mockCandidates
p16545
tp16546
I1
s(g11012
I42
g11013
Vinsert
p16547
I44
VSingleVariableDeclaration
p16548
tp16549
I1
s(g4745
I42
g4746
Vinsert
p16550
I42
VSimpleName: createMockFor
p16551
tp16552
I1
s(g5196
I42
g5197
Vinsert
p16553
I42
VSimpleName: InOrderContext
p16554
tp16555
I1
s(g851
I42
g852
Vinsert
p16556
I31
VMethodDeclaration
p16557
tp16558
I2
s(g1599
I42
g1600
Vinsert
p16559
I42
VSimpleName: stubbing
p16560
tp16561
I2
s(Vinsert
p16562
I42
VSimpleName: add
p16563
Vinsert
p16564
I40
VQualifiedName: keys.length
p16565
tp16566
I1
s(g5530
I42
g5531
Vinsert
p16567
I74
VParameterizedType: Constructor<Foo>
p16568
tp16569
I1
s(g13161
I42
g13162
Vinsert
p16570
I43
VSimpleType: IOException
p16571
tp16572
I1
s(g15601
I42
g15602
Vinsert
p16573
I42
VSimpleName: newMessage
p16574
tp16575
I1
s(g2026
I42
g2027
Vinsert
p16576
I42
VSimpleName: assertEquals
p16577
tp16578
I1
s(Vinsert
p16579
I42
VSimpleName: longArg
p16580
Vinsert
p16581
I78
VMarkerAnnotation
p16582
tp16583
I1
s(g8916
I42
g8917
Vinsert
p16584
I74
VParameterizedType: MockFactory<ClassWithDodgyConstructor>
p16585
tp16586
I1
s(Vinsert
p16587
I42
VSimpleName: getMethod
p16588
Vinsert
p16589
I43
VSimpleType: RealMethod
p16590
tp16591
I1
s(Vinsert
p16592
I42
VSimpleName: filterStackTrace
p16593
Vinsert
p16594
I42
VSimpleName: filter
p16595
tp16596
I7
s(g7403
I42
g7404
Vinsert
p16597
I42
VSimpleName: MethodVisitor
p16598
tp16599
I1
s(g1352
I42
g1353
Vinsert
p16600
I54
VTryStatement
p16601
tp16602
I3
s(g2429
I42
g2430
Vinsert
p16603
I42
VSimpleName: Exception
p16604
tp16605
I3
s(g15356
I42
g15357
Vinsert
p16606
I42
VSimpleName: invocation
p16607
tp16608
I2
s(g8062
I42
g8063
Vinsert
p16609
I32
VMethodInvocation
p16610
tp16611
I3
s(g3996
I42
g3997
Vinsert
p16612
I42
VSimpleName: actualMatcher
p16613
tp16614
I2
s(g717
I42
g718
Vinsert
p16615
I42
VSimpleName: StringList
p16616
tp16617
I2
s(g3704
I42
g3705
Vinsert
p16618
I43
VSimpleType: String
p16619
tp16620
I1
s(g4290
I42
g4291
Vinsert
p16621
I33
VNullLiteral
p16622
tp16623
I12
s(g6566
I42
g6567
Vinsert
p16624
I74
VParameterizedType: ArgumentCaptor<List>
p16625
tp16626
I1
s(g1750
I42
g1751
Vinsert
p16627
I43
VSimpleType: StackTraceElement
p16628
tp16629
I2
s(g4600
I42
g4601
Vinsert
p16630
I27
VInfixExpression: ==
p16631
tp16632
I1
s(g7966
I42
g7967
Vinsert
p16633
I8
VBlock
p16634
tp16635
I1
s(g7371
I42
g7372
Vinsert
p16636
I4
VArrayInitializer
p16637
tp16638
I1
s(g2944
I42
g2945
Vinsert
p16639
I42
VSimpleName: SimpleClassGenerator
p16640
tp16641
I1
s(g5549
I42
g5550
Vinsert
p16642
I43
VSimpleType: ReturnsGenericDeepStubs
p16643
tp16644
I1
s(g704
I42
g705
Vinsert
p16645
I43
VSimpleType: RunnerFactory
p16646
tp16647
I1
s(g3488
I42
g3489
Vinsert
p16648
I42
VSimpleName: Test
p16649
tp16650
I37
s(g5439
I42
g5440
Vinsert
p16651
I42
VSimpleName: tickets
p16652
tp16653
I1
s(g11206
I42
g11207
Vinsert
p16654
I42
VSimpleName: registeredInvocation
p16655
tp16656
I1
s(g5196
I42
g5197
Vinsert
p16657
I42
VSimpleName: mocks
p16658
tp16659
I1
s(g4817
I42
g4818
Vinsert
p16660
I45
VStringLiteral: "simpleMethod"
p16661
tp16662
I1
s(Vinsert
p16663
I42
VSimpleName: toString
p16664
Vinsert
p16665
I42
VSimpleName: append
p16666
tp16667
I2
s(g3787
I42
g3788
Vinsert
p16668
I43
VSimpleType: MockitoException
p16669
tp16670
I1
s(g342
I42
g343
Vinsert
p16671
I54
VTryStatement
p16672
tp16673
I1
s(g2306
I42
g2307
Vinsert
p16674
I42
VSimpleName: toInvocation
p16675
tp16676
I1
s(Vinsert
p16677
I42
VSimpleName: getValue
p16678
Vinsert
p16679
I42
VSimpleName: Test
p16680
tp16681
I1
s(g1599
I42
g1600
Vinsert
p16682
I43
VSimpleType: Returns
p16683
tp16684
I1
s(g15952
I42
g15953
Vinsert
p16685
I45
VStringLiteral: "\u005cn"
p16686
tp16687
I1
s(g765
I42
g766
Vinsert
p16688
I32
VMethodInvocation
p16689
tp16690
I1
s(g9344
I42
g9345
Vinsert
p16691
I39
VPrimitiveType: boolean
p16692
tp16693
I1
s(g3199
I42
g3200
Vinsert
p16694
I27
VInfixExpression: <=
p16695
tp16696
I2
s(g1069
I42
g1070
Vinsert
p16697
I32
VMethodInvocation
p16698
tp16699
I6
s(g12444
I42
g12445
Vinsert
p16700
I59
VVariableDeclarationFragment
p16701
tp16702
I2
s(g2998
I42
g2999
Vinsert
p16703
I21
VExpressionStatement
p16704
tp16705
I1
s(g3570
I42
g3571
Vinsert
p16706
I42
VSimpleName: Comparable
p16707
tp16708
I1
s(Vinsert
p16709
I42
VSimpleName: getWantedArgs
p16710
Vinsert
p16711
I45
VStringLiteral: "    1: class java.lang.Object"
p16712
tp16713
I1
s(g10688
I42
g10689
Vinsert
p16714
I43
VSimpleType: Object
p16715
tp16716
I1
s(g9087
I42
g9088
Vinsert
p16717
I41
VReturnStatement
p16718
tp16719
I4
s(g3943
I42
g3944
Vinsert
p16720
I42
VSimpleName: ByteBuddyAgent
p16721
tp16722
I1
s(g3303
I42
g3304
Vinsert
p16723
I48
VSuperMethodInvocation
p16724
tp16725
I1
s(g14928
I42
g14929
Vinsert
p16726
I42
VSimpleName: shouldStartingMockSettingsContainDefaultBehavior
p16727
tp16728
I1
s(g11580
I42
g11581
Vinsert
p16729
I42
VSimpleName: exactNumberOfInvocations
p16730
tp16731
I1
s(g14341
I42
g14342
Vinsert
p16732
I42
VSimpleName: returned
p16733
tp16734
I1
s(g2929
I42
g2930
Vinsert
p16735
I8
VBlock
p16736
tp16737
I2
s(g8383
I42
g8384
Vinsert
p16738
I42
VSimpleName: mockitoState
p16739
tp16740
I2
s(g9339
I42
g9340
Vinsert
p16741
I42
VSimpleName: iMethods
p16742
tp16743
I2
s(Vinsert
p16744
I42
VSimpleName: newInstance
p16745
Vinsert
p16746
I42
VSimpleName: INSTANCE
p16747
tp16748
I2
s(Vinsert
p16749
I42
VSimpleName: withExtraTypeInfo
p16750
Vinsert
p16751
I40
VQualifiedName: Any.ANY
p16752
tp16753
I1
s(g3078
I42
g3079
Vinsert
p16754
I42
VSimpleName: String
p16755
tp16756
I8
s(g9606
I42
g9607
Vinsert
p16757
I42
VSimpleName: i
p16758
tp16759
I2
s(Vinsert
p16760
I42
VSimpleName: reset
p16761
Vinsert
p16762
I39
VPrimitiveType: void
p16763
tp16764
I4
s(g1992
I42
g1993
Vinsert
p16765
I45
VStringLiteral: "However, I failed because: "
p16766
tp16767
I1
s(g3155
I42
g3156
Vinsert
p16768
I42
VSimpleName: T
p16769
tp16770
I3
s(Vinsert
p16771
I42
VSimpleName: simpleMethod
p16772
Vinsert
p16773
I42
VSimpleName: toReturn
p16774
tp16775
I1
s(g2876
I42
g2877
Vinsert
p16776
I70
VEnhancedForStatement
p16777
tp16778
I2
s(g6124
I42
g6125
Vinsert
p16779
I9
VBooleanLiteral: false
p16780
tp16781
I1
s(g8509
I42
g8510
Vinsert
p16782
I66
VTextElement: verification failures are reported).
p16783
tp16784
I1
s(g3961
I42
g3962
Vinsert
p16785
I45
VStringLiteral: "Clean & maintainable test code requires zero unnecessary code.\u005cn"
p16786
tp16787
I1
s(g2876
I42
g2877
Vinsert
p16788
I44
VSingleVariableDeclaration
p16789
tp16790
I3
s(g11514
I42
g11515
Vinsert
p16791
I43
VSimpleType: List
p16792
tp16793
I1
s(g14491
I42
g14492
Vinsert
p16794
I42
VSimpleName: Comparable
p16795
tp16796
I1
s(g6056
I42
g6057
Vinsert
p16797
I42
VSimpleName: Test
p16798
tp16799
I1
s(g653
I42
g654
Vinsert
p16800
I25
VIfStatement
p16801
tp16802
I1
s(g3792
I42
g3793
Vinsert
p16803
I59
VVariableDeclarationFragment
p16804
tp16805
I1
s(g1219
I42
g1220
Vinsert
p16806
I59
VVariableDeclarationFragment
p16807
tp16808
I6
s(g2485
I42
g2486
Vinsert
p16809
I43
VSimpleType: Exception
p16810
tp16811
I1
s(g4456
I42
g4457
Vinsert
p16812
I12
VCatchClause
p16813
tp16814
I1
s(g15719
I42
g15720
Vinsert
p16815
I42
VSimpleName: BDDOngoingStubbingImpl
p16816
tp16817
I1
s(Vinsert
p16818
I42
VSimpleName: getMessage
p16819
Vinsert
p16820
I45
VStringLiteral: "Not invoked: DerivedInterface.print(Message)"
p16821
tp16822
I1
s(Vinsert
p16823
I42
VSimpleName: withLongAndInt
p16824
Vinsert
p16825
I8
VBlock
p16826
tp16827
I1
s(g8867
I42
g8868
Vinsert
p16828
I42
VSimpleName: Invocation
p16829
tp16830
I1
s(g1337
I42
g1338
Vinsert
p16831
I42
VSimpleName: foo
p16832
tp16833
I1
s(g1755
I42
g1756
Vinsert
p16834
I83
VModifier: private
p16835
tp16836
I2
s(g2344
I42
g2345
Vinsert
p16837
I42
VSimpleName: MockHandlerImpl
p16838
tp16839
I2
s(g10164
I42
g10165
Vinsert
p16840
I42
VSimpleName: getThrowable
p16841
tp16842
I1
s(g9478
I42
g9479
Vinsert
p16843
I41
VReturnStatement
p16844
tp16845
I5
s(g2248
I42
g2249
Vinsert
p16846
I43
VSimpleType: StubbedInvocationMatcher
p16847
tp16848
I1
s(g5961
I42
g5962
Vinsert
p16849
I25
VIfStatement
p16850
tp16851
I1
s(g6233
I42
g6234
Vinsert
p16852
I8
VBlock
p16853
tp16854
I1
s(g12097
I42
g12098
Vinsert
p16855
I8
VBlock
p16856
tp16857
I2
s(g8205
I42
g8206
Vinsert
p16858
I85
VDimension
p16859
tp16860
I3
s(g9354
I42
g9355
Vinsert
p16861
I42
VSimpleName: cls
p16862
tp16863
I2
s(g5879
I42
g5880
Vinsert
p16864
I21
VExpressionStatement
p16865
tp16866
I5
s(g3659
I42
g3660
Vinsert
p16867
I83
VModifier: private
p16868
tp16869
I1
s(g598
I42
g599
Vinsert
p16870
I42
VSimpleName: getMockSettings
p16871
tp16872
I1
s(g3006
I42
g3007
Vinsert
p16873
I43
VSimpleType: String
p16874
tp16875
I1
s(g4163
I42
g4164
Vinsert
p16876
I25
VIfStatement
p16877
tp16878
I2
s(g10393
I42
g10394
Vinsert
p16879
I42
VSimpleName: unfilteredStackTrace
p16880
tp16881
I1
s(g14014
I42
g14015
Vinsert
p16882
I43
VSimpleType: Location
p16883
tp16884
I2
s(g2467
I42
g2468
Vinsert
p16885
I43
VSimpleType: MatchersBinder
p16886
tp16887
I1
s(g8808
I42
g8809
Vinsert
p16888
I43
VSimpleType: CodeEmitter
p16889
tp16890
I1
s(g247
I42
g248
Vinsert
p16891
I42
VSimpleName: argumentIndexInRange
p16892
tp16893
I1
s(g4290
I42
g4291
Vinsert
p16894
I42
VSimpleName: constructorArgs
p16895
tp16896
I2
s(Vinsert
p16897
I42
VSimpleName: getMock
p16898
Vinsert
p16899
I42
VSimpleName: M
p16900
tp16901
I3
s(Vinsert
p16902
I42
VSimpleName: implement
p16903
Vinsert
p16904
I42
VSimpleName: filter
p16905
tp16906
I1
s(Vinsert
p16907
I42
VSimpleName: size
p16908
Vinsert
p16909
I42
VSimpleName: i
p16910
tp16911
I4
s(g5575
I42
g5576
Vinsert
p16912
I43
VSimpleType: Callable
p16913
tp16914
I1
s(g362
I42
g363
Vinsert
p16915
I42
VSimpleName: StubbingListener
p16916
tp16917
I2
s(g1901
I42
g1902
Vinsert
p16918
I42
VSimpleName: globalConfiguration
p16919
tp16920
I1
s(g5352
I42
g5353
Vinsert
p16921
I42
VSimpleName: recorder
p16922
tp16923
I1
s(g3121
I42
g3122
Vinsert
p16924
I14
VClassInstanceCreation
p16925
tp16926
I4
s(g3659
I42
g3660
Vinsert
p16927
I38
VPrefixExpression: -
p16928
tp16929
I1
s(g648
I42
g649
Vinsert
p16930
I42
VSimpleName: countNumberOfRelatedArticles
p16931
tp16932
I1
s(g3364
I42
g3365
Vinsert
p16933
I42
VSimpleName: any
p16934
tp16935
I1
s(g7274
I42
g7275
Vinsert
p16936
I45
VStringLiteral: "No interactions wanted here:"
p16937
tp16938
I1
s(g3455
I42
g3456
Vinsert
p16939
I42
VSimpleName: str
p16940
tp16941
I2
s(g986
I42
g987
Vinsert
p16942
I65
VTagElement: @param
p16943
tp16944
I1
s(g2185
I42
g2186
Vinsert
p16945
I42
VSimpleName: hasNext
p16946
tp16947
I2
s(g4714
I42
g4715
Vinsert
p16948
I42
VSimpleName: info
p16949
tp16950
I4
s(g10899
I42
g10900
Vinsert
p16951
I42
VSimpleName: setStackTrace
p16952
tp16953
I1
s(g6587
I42
g6588
Vinsert
p16954
I39
VPrimitiveType: int
p16955
tp16956
I2
s(g6771
I42
g6772
Vinsert
p16957
I59
VVariableDeclarationFragment
p16958
tp16959
I2
s(g1944
I42
g1945
Vinsert
p16960
I42
VSimpleName: wanted
p16961
tp16962
I1
s(Vinsert
p16963
I42
VSimpleName: extraInterfaces
p16964
Vinsert
p16965
I54
VTryStatement
p16966
tp16967
I3
s(g10415
I42
g10416
Vinsert
p16968
I32
VMethodInvocation
p16969
tp16970
I8
s(g6771
I42
g6772
Vinsert
p16971
I42
VSimpleName: MockingProgress
p16972
tp16973
I1
s(Vinsert
p16974
I42
VSimpleName: add
p16975
Vinsert
p16976
I42
VSimpleName: fake
p16977
tp16978
I1
s(Vinsert
p16979
I42
VSimpleName: atLeast
p16980
Vinsert
p16981
I34
VNumberLiteral: 200
p16982
tp16983
I1
s(g8561
I42
g8562
Vinsert
p16984
I42
VSimpleName: reporter
p16985
tp16986
I1
s(g3527
I42
g3528
Vinsert
p16987
I83
VModifier: final
p16988
tp16989
I1
s(g16
I42
g17
Vinsert
p16990
I42
VSimpleName: currentLocalUser
p16991
tp16992
I1
s(g4231
I42
g4232
Vinsert
p16993
I43
VSimpleType: StackTraceElement
p16994
tp16995
I1
s(g2281
I42
g2282
Vinsert
p16996
I83
VModifier: private
p16997
tp16998
I1
s(g5604
I42
g5605
Vinsert
p16999
I42
VSimpleName: Short
p17000
tp17001
I1
s(g4133
I42
g4134
Vinsert
p17002
I42
VSimpleName: InvocationBuilder
p17003
tp17004
I1
s(g4585
I42
g4586
Vinsert
p17005
I23
VFieldDeclaration
p17006
tp17007
I2
s(g15804
I42
g15805
Vinsert
p17008
I83
VModifier: public
p17009
tp17010
I1
s(g1444
I42
g1445
Vinsert
p17011
I42
VSimpleName: trace
p17012
tp17013
I1
s(Vinsert
p17014
I42
VSimpleName: getClass
p17015
Vinsert
p17016
I45
VStringLiteral: "Argument passed to Mockito.mockingDetails() should be a mock, but is an instance of "
p17017
tp17018
I1
s(g5926
I42
g5927
Vinsert
p17019
I43
VSimpleType: ClassNotFoundException
p17020
tp17021
I1
s(g6598
I42
g6599
Vinsert
p17022
I27
VInfixExpression: &&
p17023
tp17024
I1
s(g31
I42
g32
Vinsert
p17025
I21
VExpressionStatement
p17026
tp17027
I4
s(g13304
I42
g13305
Vinsert
p17028
I43
VSimpleType: Exception
p17029
tp17030
I4
s(g2336
I42
g2337
Vinsert
p17031
I59
VVariableDeclarationFragment
p17032
tp17033
I1
s(g9413
I42
g9414
Vinsert
p17034
I42
VSimpleName: shows_clean_exception_when_null_listener_passed
p17035
tp17036
I1
s(g16356
I42
g16357
Vinsert
p17037
I42
VSimpleName: throwable
p17038
tp17039
I1
s(Vinsert
p17040
I42
VSimpleName: isEmpty
p17041
Vinsert
p17042
I42
VSimpleName: format
p17043
tp17044
I1
s(Vinsert
p17045
I42
VSimpleName: getName
p17046
Vinsert
p17047
I43
VSimpleType: Method
p17048
tp17049
I1
s(g9026
I42
g9027
Vinsert
p17050
I32
VMethodInvocation
p17051
tp17052
I3
s(g3601
I42
g3602
Vinsert
p17053
I8
VBlock
p17054
tp17055
I1
s(g12422
I42
g12423
Vinsert
p17056
I42
VSimpleName: copiedList
p17057
tp17058
I2
s(g5245
I42
g5246
Vinsert
p17059
I41
VReturnStatement
p17060
tp17061
I1
s(g1982
I42
g1983
Vinsert
p17062
I42
VSimpleName: Throwable
p17063
tp17064
I1
s(g1274
I42
g1275
Vinsert
p17065
I11
VCastExpression
p17066
tp17067
I1
s(g11757
I42
g11758
Vinsert
p17068
I42
VSimpleName: hasData
p17069
tp17070
I1
s(g15534
I42
g15535
Vinsert
p17071
I42
VSimpleName: emptySet
p17072
tp17073
I1
s(g7076
I42
g7077
Vinsert
p17074
I42
VSimpleName: unstubbed
p17075
tp17076
I1
s(g12877
I42
g12878
Vinsert
p17077
I7
VAssignment: =
p17078
tp17079
I5
s(g4168
I42
g4169
Vinsert
p17080
I39
VPrimitiveType: void
p17081
tp17082
I1
s(g10667
I42
g10668
Vinsert
p17083
I39
VPrimitiveType: boolean
p17084
tp17085
I1
s(g16449
I42
g16450
Vinsert
p17086
I42
VSimpleName: String
p17087
tp17088
I1
s(g11498
I42
g11499
Vinsert
p17089
I43
VSimpleType: MockSettings
p17090
tp17091
I1
s(g119
I42
g120
Vinsert
p17092
I42
VSimpleName: Invocation
p17093
tp17094
I1
s(g8003
I42
g8004
Vinsert
p17095
I42
VSimpleName: Object
p17096
tp17097
I6
s(g6435
I42
g6436
Vinsert
p17098
I59
VVariableDeclarationFragment
p17099
tp17100
I3
s(g2508
I42
g2509
Vinsert
p17101
I8
VBlock
p17102
tp17103
I1
s(g11956
I42
g11957
Vinsert
p17104
I45
VStringLiteral: "baz"
p17105
tp17106
I1
s(g10672
I42
g10673
Vinsert
p17107
I60
VVariableDeclarationStatement
p17108
tp17109
I4
s(g17040
I42
g17041
Vinsert
p17110
I42
VSimpleName: MockitoLogger
p17111
tp17112
I1
s(g10226
I42
g10227
Vinsert
p17113
I7
VAssignment: =
p17114
tp17115
I1
s(g6260
I42
g6261
Vinsert
p17116
I42
VSimpleName: writeText
p17117
tp17118
I1
s(g1204
I42
g1205
Vinsert
p17119
I42
VSimpleName: duration
p17120
tp17121
I1
s(g12955
I42
g12956
Vinsert
p17122
I42
VSimpleName: shouldPassProperCheckedException
p17123
tp17124
I1
s(g5961
I42
g5962
Vinsert
p17125
I42
VSimpleName: verificationOverTime
p17126
tp17127
I2
s(g12231
I42
g12232
Vinsert
p17128
I42
VSimpleName: withSettings
p17129
tp17130
I1
s(g5416
I42
g5417
Vinsert
p17131
I32
VMethodInvocation
p17132
tp17133
I6
s(g10802
I42
g10803
Vinsert
p17134
I14
VClassInstanceCreation
p17135
tp17136
I1
s(g36
I42
g37
Vinsert
p17137
I9
VBooleanLiteral: true
p17138
tp17139
I1
s(g6736
I42
g6737
Vinsert
p17140
I32
VMethodInvocation
p17141
tp17142
I4
s(g1100
I42
g1101
Vinsert
p17143
I32
VMethodInvocation
p17144
tp17145
I7
s(g347
I42
g348
Vinsert
p17146
I32
VMethodInvocation
p17147
tp17148
I3
s(g543
I42
g544
Vinsert
p17149
I45
VStringLiteral: "@Spy annotation can't initialize private abstract inner classes."
p17150
tp17151
I1
s(g2095
I42
g2096
Vinsert
p17152
I9
VBooleanLiteral: true
p17153
tp17154
I1
s(g7898
I42
g7899
Vinsert
p17155
I43
VSimpleType: WantedAnywhereAfterFollowingInteraction
p17156
tp17157
I1
s(g10609
I42
g10610
Vinsert
p17158
I42
VSimpleName: item
p17159
tp17160
I2
s(g4784
I42
g4785
Vinsert
p17161
I57
VTypeLiteral
p17162
tp17163
I2
s(g9234
I42
g9235
Vinsert
p17164
I58
VVariableDeclarationExpression
p17165
tp17166
I1
s(g996
I42
g997
Vinsert
p17167
I42
VSimpleName: mockingProgress
p17168
tp17169
I1
s(g1881
I42
g1882
Vinsert
p17170
I42
VSimpleName: assertSame
p17171
tp17172
I1
s(g3725
I42
g3726
Vinsert
p17173
I27
VInfixExpression: !=
p17174
tp17175
I1
s(g7714
I42
g7715
Vinsert
p17176
I44
VSingleVariableDeclaration
p17177
tp17178
I3
s(g10368
I42
g10369
Vinsert
p17179
I8
VBlock
p17180
tp17181
I1
s(Vinsert
p17182
I42
VSimpleName: mockingStarted
p17183
Vinsert
p17184
I43
VSimpleType: MockSettings
p17185
tp17186
I1
s(g11738
I42
g11739
Vinsert
p17187
I42
VSimpleName: Exception
p17188
tp17189
I1
s(g1924
I42
g1925
Vinsert
p17190
I42
VSimpleName: hashCode
p17191
tp17192
I1
s(g10992
I42
g10993
Vinsert
p17193
I42
VSimpleName: Mock
p17194
tp17195
I1
s(g4675
I42
g4676
Vinsert
p17196
I42
VSimpleName: ret
p17197
tp17198
I1
s(g7577
I42
g7578
Vinsert
p17199
I14
VClassInstanceCreation
p17200
tp17201
I2
s(g14264
I42
g14265
Vinsert
p17202
I42
VSimpleName: map
p17203
tp17204
I6
s(g11823
I42
g11824
Vinsert
p17205
I42
VSimpleName: test
p17206
tp17207
I1
s(g911
I42
g912
Vinsert
p17208
I42
VSimpleName: shouldPrintActualAndUnverifiedExpectedWhenTheDifferenceIsAboutArguments
p17209
tp17210
I1
s(g11206
I42
g11207
Vinsert
p17211
I42
VSimpleName: InvocationWithMatchers
p17212
tp17213
I1
s(g1006
I42
g1007
Vinsert
p17214
I7
VAssignment: =
p17215
tp17216
I1
s(g6736
I42
g6737
Vinsert
p17217
I42
VSimpleName: actualInvocations
p17218
tp17219
I3
s(g6502
I42
g6503
Vinsert
p17220
I39
VPrimitiveType: void
p17221
tp17222
I1
s(g322
I42
g323
Vinsert
p17223
I43
VSimpleType: String
p17224
tp17225
I1
s(g13755
I42
g13756
Vinsert
p17226
I42
VSimpleName: getIndex
p17227
tp17228
I1
s(g6815
I42
g6816
Vinsert
p17229
I83
VModifier: public
p17230
tp17231
I1
s(Vinsert
p17232
I42
VSimpleName: size
p17233
Vinsert
p17234
I42
VSimpleName: findFirstStrictlyUnverified
p17235
tp17236
I1
s(g4133
I42
g4134
Vinsert
p17237
I42
VSimpleName: n
p17238
tp17239
I1
s(Vinsert
p17240
I42
VSimpleName: convertDate
p17241
Vinsert
p17242
I42
VSimpleName: SuppressWarnings
p17243
tp17244
I1
s(g6411
I42
g6412
Vinsert
p17245
I74
VParameterizedType: Class<T>
p17246
tp17247
I1
s(g2748
I42
g2749
Vinsert
p17248
I42
VSimpleName: invocationOnInterface
p17249
tp17250
I1
s(g10976
I42
g10977
Vinsert
p17251
I42
VSimpleName: v
p17252
tp17253
I1
s(g4043
I42
g4044
Vinsert
p17254
I54
VTryStatement
p17255
tp17256
I1
s(g6669
I42
g6670
Vinsert
p17257
I8
VBlock
p17258
tp17259
I1
s(g267
I42
g268
Vinsert
p17260
I42
VSimpleName: mode
p17261
tp17262
I2
s(g1760
I42
g1761
Vinsert
p17263
I32
VMethodInvocation
p17264
tp17265
I2
s(g2585
I42
g2586
Vinsert
p17266
I59
VVariableDeclarationFragment
p17267
tp17268
I2
s(g1079
I42
g1080
Vinsert
p17269
I42
VSimpleName: MULTIANEWARRAY_INSN
p17270
tp17271
I1
s(g5164
I42
g5165
Vinsert
p17272
I42
VSimpleName: invocation
p17273
tp17274
I1
s(g11699
I42
g11700
Vinsert
p17275
I40
VQualifiedName: org.mockito.invocation.Invocation
p17276
tp17277
I1
s(g8894
I42
g8895
Vinsert
p17278
I60
VVariableDeclarationStatement
p17279
tp17280
I1
s(g12133
I42
g12134
Vinsert
p17281
I43
VSimpleType: LinkedHashSet
p17282
tp17283
I2
s(g709
I42
g710
Vinsert
p17284
I27
VInfixExpression: +
p17285
tp17286
I1
s(g7395
I42
g7396
Vinsert
p17287
I32
VMethodInvocation
p17288
tp17289
I4
s(g4709
I42
g4710
Vinsert
p17290
I52
VThisExpression
p17291
tp17292
I5
s(g4887
I42
g4888
Vinsert
p17293
I42
VSimpleName: on
p17294
tp17295
I1
s(g2662
I42
g2663
Vinsert
p17296
I57
VTypeLiteral
p17297
tp17298
I2
s(Vinsert
p17299
I42
VSimpleName: start
p17300
Vinsert
p17301
I42
VSimpleName: shouldFailVerificationWithWrongTimes
p17302
tp17303
I1
s(g4372
I42
g4373
Vinsert
p17304
I53
VThrowStatement
p17305
tp17306
I4
s(g9105
I42
g9106
Vinsert
p17307
I32
VMethodInvocation
p17308
tp17309
I1
s(g14420
I42
g14421
Vinsert
p17310
I33
VNullLiteral
p17311
tp17312
I2
s(g1337
I42
g1338
Vinsert
p17313
I42
VSimpleName: mock
p17314
tp17315
I3
s(g11538
I42
g11539
Vinsert
p17316
I42
VSimpleName: ManagementFactory
p17317
tp17318
I1
s(g7129
I42
g7130
Vinsert
p17319
I42
VSimpleName: RuntimeException
p17320
tp17321
I1
s(g8604
I42
g8605
Vinsert
p17322
I32
VMethodInvocation
p17323
tp17324
I6
s(g5403
I42
g5404
Vinsert
p17325
I43
VSimpleType: Dummy
p17326
tp17327
I1
s(g12304
I42
g12305
Vinsert
p17328
I43
VSimpleType: Queue
p17329
tp17330
I1
s(g13079
I42
g13080
Vinsert
p17331
I66
VTextElement: the given value.
p17332
tp17333
I1
s(g12326
I42
g12327
Vinsert
p17334
I42
VSimpleName: List
p17335
tp17336
I1
s(g8439
I42
g8440
Vinsert
p17337
I42
VSimpleName: sub
p17338
tp17339
I2
s(g7467
I42
g7468
Vinsert
p17340
I40
VQualifiedName: org.mockito.exceptions.verification.junit.JUnitTool
p17341
tp17342
I1
s(g4981
I42
g4982
Vinsert
p17343
I32
VMethodInvocation
p17344
tp17345
I1
s(Vinsert
p17346
I42
VSimpleName: verify
p17347
Vinsert
p17348
I42
VSimpleName: VerifyingMode
p17349
tp17350
I1
s(g7022
I42
g7023
Vinsert
p17351
I60
VVariableDeclarationStatement
p17352
tp17353
I3
s(g2886
I42
g2887
Vinsert
p17354
I43
VSimpleType: Throwable
p17355
tp17356
I2
s(g5057
I42
g5058
Vinsert
p17357
I43
VSimpleType: Throwable
p17358
tp17359
I4
s(g214
I42
g215
Vinsert
p17360
I42
VSimpleName: s2
p17361
tp17362
I1
s(g6725
I42
g6726
Vinsert
p17363
I42
VSimpleName: mockSettingsImpl
p17364
tp17365
I1
s(g7544
I42
g7545
Vinsert
p17366
I8
VBlock
p17367
tp17368
I2
s(g17040
I42
g17041
Vinsert
p17369
I42
VSimpleName: testName
p17370
tp17371
I1
s(g3743
I42
g3744
Vinsert
p17372
I8
VBlock
p17373
tp17374
I1
s(g5052
I42
g5053
Vinsert
p17375
I45
VStringLiteral: "'"
p17376
tp17377
I1
s(g12553
I42
g12554
Vinsert
p17378
I42
VSimpleName: index
p17379
tp17380
I1
s(g1019
I42
g1020
Vinsert
p17381
I42
VSimpleName: FieldInitializer
p17382
tp17383
I1
s(Vinsert
p17384
I42
VSimpleName: setInvocationForPotentialStubbing
p17385
Vinsert
p17386
I42
VSimpleName: should_tell_if_has_invocation_for_potential_stubbing
p17387
tp17388
I1
s(g7436
I42
g7437
Vinsert
p17389
I42
VSimpleName: Mock
p17390
tp17391
I3
s(g1563
I42
g1564
Vinsert
p17392
I43
VSimpleType: ExpectedInvocation
p17393
tp17394
I1
s(g7371
I42
g7372
Vinsert
p17395
I3
VArrayCreation
p17396
tp17397
I1
s(g1675
I42
g1676
Vinsert
p17398
I41
VReturnStatement
p17399
tp17400
I1
s(g2652
I42
g2653
Vinsert
p17401
I42
VSimpleName: ce
p17402
tp17403
I1
s(g4153
I42
g4154
Vinsert
p17404
I42
VSimpleName: weak
p17405
tp17406
I1
s(g4895
I42
g4896
Vinsert
p17407
I43
VSimpleType: VerificationDataImpl
p17408
tp17409
I1
s(g7351
I42
g7352
Vinsert
p17410
I42
VSimpleName: access
p17411
tp17412
I1
s(g4258
I42
g4259
Vinsert
p17413
I42
VSimpleName: valueFor
p17414
tp17415
I2
s(g4887
I42
g4888
Vinsert
p17416
I21
VExpressionStatement
p17417
tp17418
I1
s(g9865
I42
g9866
Vinsert
p17419
I32
VMethodInvocation
p17420
tp17421
I2
s(g3136
I42
g3137
Vinsert
p17422
I32
VMethodInvocation
p17423
tp17424
I123
s(Vinsert
p17425
I42
VSimpleName: asList
p17426
Vinsert
p17427
I42
VSimpleName: elements
p17428
tp17429
I1
s(g6647
I42
g6648
Vinsert
p17430
I42
VSimpleName: author
p17431
tp17432
I1
s(g593
I42
g594
Vinsert
p17433
I44
VSingleVariableDeclaration
p17434
tp17435
I1
s(g6300
I42
g6301
Vinsert
p17436
I59
VVariableDeclarationFragment
p17437
tp17438
I1
s(g5100
I42
g5101
Vinsert
p17439
I42
VSimpleName: load_this
p17440
tp17441
I1
s(g3336
I42
g3337
Vinsert
p17442
I43
VSimpleType: Factory
p17443
tp17444
I1
s(g2175
I42
g2176
Vinsert
p17445
I42
VSimpleName: expected
p17446
tp17447
I1
s(g2677
I42
g2678
Vinsert
p17448
I34
VNumberLiteral: 2
p17449
tp17450
I1
s(g8003
I42
g8004
Vinsert
p17451
I45
VStringLiteral: "MockitoProxyMarker"
p17452
tp17453
I1
s(g1357
I42
g1358
Vinsert
p17454
I34
VNumberLiteral: 0
p17455
tp17456
I2
s(g3331
I42
g3332
Vinsert
p17457
I42
VSimpleName: durationMillis
p17458
tp17459
I2
s(g1249
I42
g1250
Vinsert
p17460
I42
VSimpleName: runner
p17461
tp17462
I5
s(g8655
I42
g8656
Vinsert
p17463
I42
VSimpleName: mockedType
p17464
tp17465
I1
s(g8030
I42
g8031
Vinsert
p17466
I42
VSimpleName: Verifier
p17467
tp17468
I4
s(g41
I42
g42
Vinsert
p17469
I42
VSimpleName: invocation
p17470
tp17471
I5
s(g10680
I42
g10681
Vinsert
p17472
I42
VSimpleName: name
p17473
tp17474
I1
s(g6658
I42
g6659
Vinsert
p17475
I34
VNumberLiteral: 0x01
p17476
tp17477
I1
s(Vinsert
p17478
I42
VSimpleName: start
p17479
Vinsert
p17480
I42
VSimpleName: workDir
p17481
tp17482
I2
s(g518
I42
g519
Vinsert
p17483
I42
VSimpleName: InvocationOnMock
p17484
tp17485
I2
s(g886
I42
g887
Vinsert
p17486
I42
VSimpleName: MyClass2
p17487
tp17488
I1
s(g8095
I42
g8096
Vinsert
p17489
I25
VIfStatement
p17490
tp17491
I1
s(Vinsert
p17492
I42
VSimpleName: getMessage
p17493
Vinsert
p17494
I42
VSimpleName: assertTrue
p17495
tp17496
I1
s(g12561
I42
g12562
Vinsert
p17497
I42
VSimpleName: mocks
p17498
tp17499
I1
s(Vinsert
p17500
I42
VSimpleName: isToString
p17501
Vinsert
p17502
I42
VSimpleName: method
p17503
tp17504
I1
s(g8226
I42
g8227
Vinsert
p17505
I36
VParenthesizedExpression
p17506
tp17507
I1
s(g8062
I42
g8063
Vinsert
p17508
I42
VSimpleName: e
p17509
tp17510
I3
s(Vinsert
p17511
I42
VSimpleName: mock
p17512
Vinsert
p17513
I25
VIfStatement
p17514
tp17515
I2
s(g2480
I42
g2481
Vinsert
p17516
I9
VBooleanLiteral: false
p17517
tp17518
I1
s(g5834
I42
g5835
Vinsert
p17519
I40
VQualifiedName: SerializableMode.ACROSS_CLASSLOADERS
p17520
tp17521
I1
s(g3275
I42
g3276
Vinsert
p17522
I42
VSimpleName: add
p17523
tp17524
I1
s(g2010
I42
g2011
Vinsert
p17525
I42
VSimpleName: wanted
p17526
tp17527
I1
s(g3165
I42
g3166
Vinsert
p17528
I42
VSimpleName: propagateSerializationSettings
p17529
tp17530
I1
s(g4555
I42
g4556
Vinsert
p17531
I42
VSimpleName: answer
p17532
tp17533
I6
s(Vinsert
p17534
I42
VSimpleName: rule
p17535
Vinsert
p17536
I42
VSimpleName: MockitoJUnitRunner
p17537
tp17538
I1
s(g400
I42
g401
Vinsert
p17539
I44
VSingleVariableDeclaration
p17540
tp17541
I6
s(g8011
I42
g8012
Vinsert
p17542
I45
VStringLiteral: " *** Stubbing warnings from Mockito: *** "
p17543
tp17544
I1
s(g513
I42
g514
Vinsert
p17545
I8
VBlock
p17546
tp17547
I9
s(g12444
I42
g12445
Vinsert
p17548
I42
VSimpleName: UsesTwoBases
p17549
tp17550
I2
s(g9053
I42
g9054
Vinsert
p17551
I83
VModifier: public
p17552
tp17553
I6
s(g4611
I42
g4612
Vinsert
p17554
I33
VNullLiteral
p17555
tp17556
I1
s(Vinsert
p17557
I42
VSimpleName: getInjected
p17558
Vinsert
p17559
I42
VSimpleName: injected
p17560
tp17561
I6
s(g2606
I42
g2607
Vinsert
p17562
I42
VSimpleName: mock
p17563
tp17564
I1
s(g11423
I42
g11424
Vinsert
p17565
I42
VSimpleName: GlobalConfiguration
p17566
tp17567
I2
s(g3659
I42
g3660
Vinsert
p17568
I40
VQualifiedName: org.mockito.internal.creation.MockitoMethodProxy
p17569
tp17570
I1
s(g7587
I42
g7588
Vinsert
p17571
I42
VSimpleName: fails_when_printin_invocations_from_non_mock
p17572
tp17573
I1
s(Vinsert
p17574
I42
VSimpleName: getFirst
p17575
Vinsert
p17576
I42
VSimpleName: IAnswer
p17577
tp17578
I1
s(Vinsert
p17579
I42
VSimpleName: assertTrue
p17580
Vinsert
p17581
I34
VNumberLiteral: 3
p17582
tp17583
I1
s(Vinsert
p17584
I42
VSimpleName: createMock
p17585
Vinsert
p17586
I74
VParameterizedType: Class<T>
p17587
tp17588
I1
s(g8808
I42
g8809
Vinsert
p17589
I42
VSimpleName: name
p17590
tp17591
I1
s(g2170
I42
g2171
Vinsert
p17592
I42
VSimpleName: nameForMock
p17593
tp17594
I1
s(g1716
I42
g1717
Vinsert
p17595
I42
VSimpleName: vararg
p17596
tp17597
I1
s(g11353
I42
g11354
Vinsert
p17598
I14
VClassInstanceCreation
p17599
tp17600
I3
s(g2113
I42
g2114
Vinsert
p17601
I42
VSimpleName: Exceptions
p17602
tp17603
I2
s(g282
I42
g283
Vinsert
p17604
I41
VReturnStatement
p17605
tp17606
I1
s(g8393
I42
g8394
Vinsert
p17607
I43
VSimpleType: Class
p17608
tp17609
I1
s(g3856
I42
g3857
Vinsert
p17610
I8
VBlock
p17611
tp17612
I4
s(g5570
I42
g5571
Vinsert
p17613
I42
VSimpleName: toStringWithArgumentTypes
p17614
tp17615
I1
s(Vinsert
p17616
I42
VSimpleName: getCause
p17617
Vinsert
p17618
I42
VSimpleName: error
p17619
tp17620
I1
s(g881
I42
g882
Vinsert
p17621
I42
VSimpleName: MockNamer
p17622
tp17623
I1
s(g16823
I42
g16824
Vinsert
p17624
I34
VNumberLiteral: 100
p17625
tp17626
I1
s(g2839
I42
g2840
Vinsert
p17627
I8
VBlock
p17628
tp17629
I2
s(g8951
I42
g8952
Vinsert
p17630
I83
VModifier: private
p17631
tp17632
I3
s(g2490
I42
g2491
Vinsert
p17633
I42
VSimpleName: remainingAttempts
p17634
tp17635
I3
s(g17014
I42
g17015
Vinsert
p17636
I42
VSimpleName: toInspect
p17637
tp17638
I1
s(Vinsert
p17639
I42
VSimpleName: equals
p17640
Vinsert
p17641
I39
VPrimitiveType: void
p17642
tp17643
I1
s(g10185
I42
g10186
Vinsert
p17644
I43
VSimpleType: RemoveFirstLine
p17645
tp17646
I3
s(g11768
I42
g11769
Vinsert
p17647
I42
VSimpleName: actual
p17648
tp17649
I2
s(g2026
I42
g2027
Vinsert
p17650
I14
VClassInstanceCreation
p17651
tp17652
I1
s(g4484
I42
g4485
Vinsert
p17653
I42
VSimpleName: Collection
p17654
tp17655
I1
s(g6846
I42
g6847
Vinsert
p17656
I42
VSimpleName: Type
p17657
tp17658
I1
s(g209
I42
g210
Vinsert
p17659
I27
VInfixExpression: >
p17660
tp17661
I2
s(g1548
I42
g1549
Vinsert
p17662
I42
VSimpleName: warnForVM
p17663
tp17664
I1
s(g8677
I42
g8678
Vinsert
p17665
I32
VMethodInvocation
p17666
tp17667
I1
s(g11314
I42
g11315
Vinsert
p17668
I43
VSimpleType: Mockito
p17669
tp17670
I1
s(g2452
I42
g2453
Vinsert
p17671
I42
VSimpleName: is
p17672
tp17673
I1
s(g6882
I42
g6883
Vinsert
p17674
I42
VSimpleName: mockedType
p17675
tp17676
I1
s(g10081
I42
g10082
Vinsert
p17677
I9
VBooleanLiteral: false
p17678
tp17679
I1
s(g3621
I42
g3622
Vinsert
p17680
I42
VSimpleName: fv
p17681
tp17682
I2
s(g2959
I42
g2960
Vinsert
p17683
I42
VSimpleName: mock
p17684
tp17685
I5
s(g9207
I42
g9208
Vinsert
p17686
I60
VVariableDeclarationStatement
p17687
tp17688
I1
s(g1034
I42
g1035
Vinsert
p17689
I43
VSimpleType: StackTraceElement
p17690
tp17691
I1
s(g10324
I42
g10325
Vinsert
p17692
I42
VSimpleName: Stubbing
p17693
tp17694
I1
s(g1219
I42
g1220
Vinsert
p17695
I25
VIfStatement
p17696
tp17697
I3
s(g4547
I42
g4548
Vinsert
p17698
I42
VSimpleName: verifyNoMoreInteractions
p17699
tp17700
I1
s(g139
I42
g140
Vinsert
p17701
I40
VQualifiedName: java.util.LinkedList
p17702
tp17703
I1
s(Vinsert
p17704
I42
VSimpleName: toString
p17705
Vinsert
p17706
I45
VStringLiteral: "\u005cn"
p17707
tp17708
I2
s(g1011
I42
g1012
Vinsert
p17709
I42
VSimpleName: actualInvocation
p17710
tp17711
I1
s(g6138
I42
g6139
Vinsert
p17712
I43
VSimpleType: AbstractList
p17713
tp17714
I1
s(g4776
I42
g4777
Vinsert
p17715
I42
VSimpleName: addVoidMethodForThrowable
p17716
tp17717
I1
s(g8353
I42
g8354
Vinsert
p17718
I42
VSimpleName: withSettings
p17719
tp17720
I7
s(g1987
I42
g1988
Vinsert
p17721
I42
VSimpleName: Description
p17722
tp17723
I1
s(g2444
I42
g2445
Vinsert
p17724
I39
VPrimitiveType: void
p17725
tp17726
I1
s(g4986
I42
g4987
Vinsert
p17727
I42
VSimpleName: returnsCheddar
p17728
tp17729
I1
s(Vinsert
p17730
I42
VSimpleName: getInternalState
p17731
Vinsert
p17732
I42
VSimpleName: MockitoMethodProxy
p17733
tp17734
I1
s(g189
I42
g190
Vinsert
p17735
I78
VMarkerAnnotation
p17736
tp17737
I3
s(g1274
I42
g1275
Vinsert
p17738
I8
VBlock
p17739
tp17740
I1
s(g6771
I42
g6772
Vinsert
p17741
I42
VSimpleName: ThreadSafeMockingProgress
p17742
tp17743
I1
s(g3672
I42
g3673
Vinsert
p17744
I42
VSimpleName: registered
p17745
tp17746
I4
s(g2531
I42
g2532
Vinsert
p17747
I9
VBooleanLiteral: true
p17748
tp17749
I1
s(g5456
I42
g5457
Vinsert
p17750
I42
VSimpleName: Override
p17751
tp17752
I2
s(g1660
I42
g1661
Vinsert
p17753
I41
VReturnStatement
p17754
tp17755
I4
s(g164
I42
g165
Vinsert
p17756
I34
VNumberLiteral: 0
p17757
tp17758
I1
s(g8894
I42
g8895
Vinsert
p17759
I42
VSimpleName: ext
p17760
tp17761
I2
s(g831
I42
g832
Vinsert
p17762
I7
VAssignment: =
p17763
tp17764
I1
s(g1199
I42
g1200
Vinsert
p17765
I43
VSimpleType: ClassInfo
p17766
tp17767
I1
s(g3919
I42
g3920
Vinsert
p17768
I42
VSimpleName: exception
p17769
tp17770
I1
s(Vinsert
p17771
I42
VSimpleName: extraInterfaces
p17772
Vinsert
p17773
I42
VSimpleName: shouldScreamWhenExtraInterfacesIsANullArray
p17774
tp17775
I1
s(g1274
I42
g1275
Vinsert
p17776
I32
VMethodInvocation
p17777
tp17778
I10
s(g2046
I42
g2047
Vinsert
p17779
I32
VMethodInvocation
p17780
tp17781
I6
s(g2200
I42
g2201
Vinsert
p17782
I21
VExpressionStatement
p17783
tp17784
I3
s(g2046
I42
g2047
Vinsert
p17785
I42
VSimpleName: IMethods
p17786
tp17787
I2
s(g9016
I42
g9017
Vinsert
p17788
I42
VSimpleName: mock
p17789
tp17790
I17
s(g14972
I42
g14973
Vinsert
p17791
I39
VPrimitiveType: void
p17792
tp17793
I1
s(g4595
I42
g4596
Vinsert
p17794
I42
VSimpleName: timesNow
p17795
tp17796
I1
s(g13186
I42
g13187
Vinsert
p17797
I42
VSimpleName: leftHash
p17798
tp17799
I1
s(g229
I42
g230
Vinsert
p17800
I60
VVariableDeclarationStatement
p17801
tp17802
I1
s(Vinsert
p17803
I42
VSimpleName: run
p17804
Vinsert
p17805
I42
VSimpleName: progress
p17806
tp17807
I1
s(g6363
I42
g6364
Vinsert
p17808
I42
VSimpleName: mockingProgress
p17809
tp17810
I1
s(g11552
I42
g11553
Vinsert
p17811
I42
VSimpleName: current
p17812
tp17813
I1
s(Vinsert
p17814
I42
VSimpleName: getClass
p17815
Vinsert
p17816
I42
VSimpleName: describe
p17817
tp17818
I1
s(g8696
I42
g8697
Vinsert
p17819
I42
VSimpleName: proxy
p17820
tp17821
I1
s(g8986
I42
g8987
Vinsert
p17822
I27
VInfixExpression: !=
p17823
tp17824
I2
s(g1573
I42
g1574
Vinsert
p17825
I42
VSimpleName: wanted
p17826
tp17827
I1
s(g2105
I42
g2106
Vinsert
p17828
I42
VSimpleName: addIfNewElement
p17829
tp17830
I2
s(g623
I42
g624
Vinsert
p17831
I43
VSimpleType: VerificationModeImpl
p17832
tp17833
I1
s(g5439
I42
g5440
Vinsert
p17834
I14
VClassInstanceCreation
p17835
tp17836
I1
s(g2662
I42
g2663
Vinsert
p17837
I43
VSimpleType: IMethods
p17838
tp17839
I2
s(g5057
I42
g5058
Vinsert
p17840
I42
VSimpleName: Throwable
p17841
tp17842
I4
s(g12154
I42
g12155
Vinsert
p17843
I42
VSimpleName: T
p17844
tp17845
I1
s(Vinsert
p17846
I42
VSimpleName: simpleMethod
p17847
Vinsert
p17848
I43
VSimpleType: IMethods
p17849
tp17850
I19
s(g1503
I42
g1504
Vinsert
p17851
I12
VCatchClause
p17852
tp17853
I1
s(g6287
I42
g6288
Vinsert
p17854
I42
VSimpleName: timer
p17855
tp17856
I2
s(g5388
I42
g5389
Vinsert
p17857
I42
VSimpleName: chunk
p17858
tp17859
I2
s(Vinsert
p17860
I42
VSimpleName: instance
p17861
Vinsert
p17862
I25
VIfStatement
p17863
tp17864
I1
s(g13114
I42
g13115
Vinsert
p17865
I42
VSimpleName: mocks
p17866
tp17867
I1
s(g2222
I42
g2223
Vinsert
p17868
I76
VWildcardType: ?
p17869
tp17870
I4
s(g498
I42
g499
Vinsert
p17871
I43
VSimpleType: Reporter
p17872
tp17873
I1
s(Vinsert
p17874
I42
VSimpleName: isEmpty
p17875
Vinsert
p17876
I42
VSimpleName: given
p17877
tp17878
I1
s(g4657
I42
g4658
Vinsert
p17879
I41
VReturnStatement
p17880
tp17881
I1
s(g312
I42
g313
Vinsert
p17882
I31
VMethodDeclaration
p17883
tp17884
I1
s(g6217
I42
g6218
Vinsert
p17885
I43
VSimpleType: GenericsNest
p17886
tp17887
I1
s(g17500
I42
g17501
Vinsert
p17888
I42
VSimpleName: toString
p17889
tp17890
I2
s(Vinsert
p17891
I42
VSimpleName: verify
p17892
Vinsert
p17893
I42
VSimpleName: max
p17894
tp17895
I1
s(g7213
I42
g7214
Vinsert
p17896
I42
VSimpleName: validator
p17897
tp17898
I3
s(g4714
I42
g4715
Vinsert
p17899
I59
VVariableDeclarationFragment
p17900
tp17901
I5
s(g7243
I42
g7244
Vinsert
p17902
I42
VSimpleName: assertFalse
p17903
tp17904
I1
s(g3885
I42
g3886
Vinsert
p17905
I8
VBlock
p17906
tp17907
I1
s(g9950
I42
g9951
Vinsert
p17908
I42
VSimpleName: Character
p17909
tp17910
I1
s(g7564
I42
g7565
Vinsert
p17911
I78
VMarkerAnnotation
p17912
tp17913
I1
s(g5159
I42
g5160
Vinsert
p17914
I42
VSimpleName: matches
p17915
tp17916
I1
s(g11509
I42
g11510
Vinsert
p17917
I42
VSimpleName: InvocationBuilder
p17918
tp17919
I1
s(Vinsert
p17920
I42
VSimpleName: returnString
p17921
Vinsert
p17922
I32
VMethodInvocation
p17923
tp17924
I7
s(g4362
I42
g4363
Vinsert
p17925
I14
VClassInstanceCreation
p17926
tp17927
I2
s(g951
I42
g952
Vinsert
p17928
I42
VSimpleName: Reporter
p17929
tp17930
I1
s(g717
I42
g718
Vinsert
p17931
I32
VMethodInvocation
p17932
tp17933
I5
s(Vinsert
p17934
I42
VSimpleName: asList
p17935
Vinsert
p17936
I34
VNumberLiteral: 1
p17937
tp17938
I1
s(g981
I42
g982
Vinsert
p17939
I42
VSimpleName: runnerClass
p17940
tp17941
I1
s(g10623
I42
g10624
Vinsert
p17942
I5
VArrayType: Field[]
p17943
tp17944
I5
s(g6711
I42
g6712
Vinsert
p17945
I42
VSimpleName: Git
p17946
tp17947
I1
s(g4474
I42
g4475
Vinsert
p17948
I43
VSimpleType: InvocationContainer
p17949
tp17950
I1
s(g395
I42
g396
Vinsert
p17951
I8
VBlock
p17952
tp17953
I1
s(g11713
I42
g11714
Vinsert
p17954
I45
VStringLiteral: "\u005cnHowever, there were other interactions with this mock:\u005cn"
p17955
tp17956
I1
s(g7379
I42
g7380
Vinsert
p17957
I42
VSimpleName: withSpy
p17958
tp17959
I1
s(g1224
I42
g1225
Vinsert
p17960
I42
VSimpleName: namingPolicyField
p17961
tp17962
I1
s(g1444
I42
g1445
Vinsert
p17963
I40
VQualifiedName: methods.length
p17964
tp17965
I1
s(g588
I42
g589
Vinsert
p17966
I39
VPrimitiveType: void
p17967
tp17968
I1
s(g3935
I42
g3936
Vinsert
p17969
I66
VTextElement:  extension exists or is visible in the current classpath.</p>
p17970
tp17971
I1
s(g8210
I42
g8211
Vinsert
p17972
I42
VSimpleName: FromParameterizedTypeMockitoGenericMetadata
p17973
tp17974
I1
s(g2498
I42
g2499
Vinsert
p17975
I31
VMethodDeclaration
p17976
tp17977
I1
s(g9147
I42
g9148
Vinsert
p17978
I39
VPrimitiveType: void
p17979
tp17980
I1
s(g6212
I42
g6213
Vinsert
p17981
I42
VSimpleName: allMocksToBeVerifiedInOrder
p17982
tp17983
I2
s(g10279
I42
g10280
Vinsert
p17984
I60
VVariableDeclarationStatement
p17985
tp17986
I13
s(Vinsert
p17987
I42
VSimpleName: atMost
p17988
Vinsert
p17989
I34
VNumberLiteral: 50
p17990
tp17991
I1
s(g638
I42
g639
Vinsert
p17992
I74
VParameterizedType: ArrayList<Object>
p17993
tp17994
I1
s(g8931
I42
g8932
Vinsert
p17995
I42
VSimpleName: foundStubCalledWithDifferentArgs
p17996
tp17997
I1
s(g3318
I42
g3319
Vinsert
p17998
I45
VStringLiteral: "[MockitoHint] 1. Unused... -> at B.java\u005cn"
p17999
tp18000
I1
s(g1159
I42
g1160
Vinsert
p18001
I42
VSimpleName: shouldMatchVarArgs_oneArgIsNotNull
p18002
tp18003
I1
s(g10651
I42
g10652
Vinsert
p18004
I42
VSimpleName: verify
p18005
tp18006
I1
s(g1503
I42
g1504
Vinsert
p18007
I42
VSimpleName: createTest
p18008
tp18009
I1
s(g4001
I42
g4002
Vinsert
p18010
I42
VSimpleName: CALLS_REAL_METHODS
p18011
tp18012
I1
s(Vinsert
p18013
I42
VSimpleName: cannotStubWithNullThrowable
p18014
Vinsert
p18015
I42
VSimpleName: Throwable
p18016
tp18017
I2
s(g9037
I42
g9038
Vinsert
p18018
I42
VSimpleName: loggedInfo
p18019
tp18020
I2
s(g7752
I42
g7753
Vinsert
p18021
I32
VMethodInvocation
p18022
tp18023
I3
s(g4817
I42
g4818
Vinsert
p18024
I42
VSimpleName: InvocationBuilder
p18025
tp18026
I3
s(g21
I42
g22
Vinsert
p18027
I60
VVariableDeclarationStatement
p18028
tp18029
I1
s(g1992
I42
g1993
Vinsert
p18030
I42
VSimpleName: fieldName
p18031
tp18032
I1
s(g10889
I42
g10890
Vinsert
p18033
I32
VMethodInvocation
p18034
tp18035
I5
s(g4393
I42
g4394
Vinsert
p18036
I45
VStringLiteral: "get"
p18037
tp18038
I1
s(g287
I42
g288
Vinsert
p18039
I43
VSimpleType: Exception
p18040
tp18041
I1
s(g15719
I42
g15720
Vinsert
p18042
I14
VClassInstanceCreation
p18043
tp18044
I1
s(g9434
I42
g9435
Vinsert
p18045
I42
VSimpleName: SomeObject
p18046
tp18047
I1
s(g16760
I42
g16761
Vinsert
p18048
I42
VSimpleName: StateMaster
p18049
tp18050
I3
s(g7062
I42
g7063
Vinsert
p18051
I32
VMethodInvocation
p18052
tp18053
I8
s(g2000
I42
g2001
Vinsert
p18054
I32
VMethodInvocation
p18055
tp18056
I2
s(g7539
I42
g7540
Vinsert
p18057
I42
VSimpleName: getReturnType
p18058
tp18059
I2
s(g8533
I42
g8534
Vinsert
p18060
I59
VVariableDeclarationFragment
p18061
tp18062
I1
s(g357
I42
g358
Vinsert
p18063
I42
VSimpleName: forName
p18064
tp18065
I1
s(g3298
I42
g3299
Vinsert
p18066
I43
VSimpleType: T
p18067
tp18068
I1
s(g8528
I42
g8529
Vinsert
p18069
I43
VSimpleType: MockCreationSettings
p18070
tp18071
I1
s(g11897
I42
g11898
Vinsert
p18072
I42
VSimpleName: HasStackTrace
p18073
tp18074
I2
s(g2718
I42
g2719
Vinsert
p18075
I57
VTypeLiteral
p18076
tp18077
I1
s(g11612
I42
g11613
Vinsert
p18078
I43
VSimpleType: SyncingPrinter
p18079
tp18080
I1
s(g3036
I42
g3037
Vinsert
p18081
I42
VSimpleName: getResult
p18082
tp18083
I1
s(g69
I42
g70
Vinsert
p18084
I42
VSimpleName: gork
p18085
tp18086
I1
s(g7022
I42
g7023
Vinsert
p18087
I8
VBlock
p18088
tp18089
I3
s(g2518
I42
g2519
Vinsert
p18090
I42
VSimpleName: A
p18091
tp18092
I1
s(g12846
I42
g12847
Vinsert
p18093
I42
VSimpleName: equals
p18094
tp18095
I1
s(Vinsert
p18096
I42
VSimpleName: willReturn
p18097
Vinsert
p18098
I85
VDimension
p18099
tp18100
I2
s(g6846
I42
g6847
Vinsert
p18101
I42
VSimpleName: getType
p18102
tp18103
I1
s(g5522
I42
g5523
Vinsert
p18104
I42
VSimpleName: targetClass
p18105
tp18106
I2
s(g159
I42
g160
Vinsert
p18107
I78
VMarkerAnnotation
p18108
tp18109
I3
s(Vinsert
p18110
I42
VSimpleName: simpleMethod
p18111
Vinsert
p18112
I43
VSimpleType: Exception
p18113
tp18114
I19
s(g4247
I42
g4248
Vinsert
p18115
I42
VSimpleName: thenReturn
p18116
tp18117
I1
s(g6561
I42
g6562
Vinsert
p18118
I42
VSimpleName: mock
p18119
tp18120
I1
s(g498
I42
g499
Vinsert
p18121
I42
VSimpleName: i
p18122
tp18123
I2
s(g4133
I42
g4134
Vinsert
p18124
I60
VVariableDeclarationStatement
p18125
tp18126
I1
s(g367
I42
g368
Vinsert
p18127
I42
VSimpleName: pullStubbedInvocations
p18128
tp18129
I1
s(g5839
I42
g5840
Vinsert
p18130
I42
VSimpleName: getDelegateMethod
p18131
tp18132
I1
s(g12809
I42
g12810
Vinsert
p18133
I8
VBlock
p18134
tp18135
I1
s(g1209
I42
g1210
Vinsert
p18136
I45
VStringLiteral: "SmartNull for "
p18137
tp18138
I1
s(g7539
I42
g7540
Vinsert
p18139
I42
VSimpleName: String
p18140
tp18141
I2
s(g9821
I42
g9822
Vinsert
p18142
I41
VReturnStatement
p18143
tp18144
I1
s(g7091
I42
g7092
Vinsert
p18145
I42
VSimpleName: expectedSubMatchersCount
p18146
tp18147
I1
s(g10520
I42
g10521
Vinsert
p18148
I42
VSimpleName: Field
p18149
tp18150
I1
s(g8184
I42
g8185
Vinsert
p18151
I42
VSimpleName: assertNotSame
p18152
tp18153
I1
s(g4539
I42
g4540
Vinsert
p18154
I43
VSimpleType: MockCreationSettings
p18155
tp18156
I1
s(g2472
I42
g2473
Vinsert
p18157
I42
VSimpleName: Test
p18158
tp18159
I1
s(g12221
I42
g12222
Vinsert
p18160
I25
VIfStatement
p18161
tp18162
I1
s(g3224
I42
g3225
Vinsert
p18163
I42
VSimpleName: IllegalStateException
p18164
tp18165
I1
s(g61
I42
g62
Vinsert
p18166
I44
VSingleVariableDeclaration
p18167
tp18168
I1
s(g10048
I42
g10049
Vinsert
p18169
I42
VSimpleName: Test
p18170
tp18171
I1
s(g15719
I42
g15720
Vinsert
p18172
I74
VParameterizedType: Answer<?>
p18173
tp18174
I1
s(g2000
I42
g2001
Vinsert
p18175
I43
VSimpleType: Class
p18176
tp18177
I1
s(g7780
I42
g7781
Vinsert
p18178
I43
VSimpleType: Class
p18179
tp18180
I3
s(g10015
I42
g10016
Vinsert
p18181
I42
VSimpleName: buildSimpleMethod
p18182
tp18183
I2
s(g11325
I42
g11326
Vinsert
p18184
I42
VSimpleName: cachingMockBytecodeGenerator
p18185
tp18186
I2
s(g4077
I42
g4078
Vinsert
p18187
I42
VSimpleName: String
p18188
tp18189
I2
s(g1039
I42
g1040
Vinsert
p18190
I42
VSimpleName: OngoingMockInjection
p18191
tp18192
I1
s(g4740
I42
g4741
Vinsert
p18193
I7
VAssignment: =
p18194
tp18195
I1
s(g2631
I42
g2632
Vinsert
p18196
I8
VBlock
p18197
tp18198
I1
s(g6468
I42
g6469
Vinsert
p18199
I31
VMethodDeclaration
p18200
tp18201
I13
s(g1919
I42
g1920
Vinsert
p18202
I8
VBlock
p18203
tp18204
I1
s(g2611
I42
g2612
Vinsert
p18205
I42
VSimpleName: TYPE_INSN
p18206
tp18207
I1
s(g9950
I42
g9951
Vinsert
p18208
I42
VSimpleName: mock
p18209
tp18210
I2
s(g9860
I42
g9861
Vinsert
p18211
I45
VStringLiteral: "Check that the instance passed to delegatesTo() is of the correct type or contains compatible methods"
p18212
tp18213
I1
s(g3483
I42
g3484
Vinsert
p18214
I57
VTypeLiteral
p18215
tp18216
I2
s(g10987
I42
g10988
Vinsert
p18217
I45
VStringLiteral: "not implemented yet"
p18218
tp18219
I1
s(g503
I42
g504
Vinsert
p18220
I22
VFieldAccess
p18221
tp18222
I1
s(g1322
I42
g1323
Vinsert
p18223
I40
VQualifiedName: java.util.ArrayList
p18224
tp18225
I1
s(g2266
I42
g2267
Vinsert
p18226
I42
VSimpleName: Set
p18227
tp18228
I1
s(g583
I42
g584
Vinsert
p18229
I42
VSimpleName: verifier
p18230
tp18231
I1
s(g2080
I42
g2081
Vinsert
p18232
I42
VSimpleName: mock
p18233
tp18234
I3
s(g9339
I42
g9340
Vinsert
p18235
I32
VMethodInvocation
p18236
tp18237
I6
s(g463
I42
g464
Vinsert
p18238
I42
VSimpleName: cv
p18239
tp18240
I2
s(g16291
I42
g16292
Vinsert
p18241
I43
VSimpleType: Outer.Inner
p18242
tp18243
I1
s(g6820
I42
g6821
Vinsert
p18244
I42
VSimpleName: nextSequenceNumber
p18245
tp18246
I1
s(g2170
I42
g2171
Vinsert
p18247
I44
VSingleVariableDeclaration
p18248
tp18249
I1
s(g154
I42
g155
Vinsert
p18250
I42
VSimpleName: Class
p18251
tp18252
I1
s(g2652
I42
g2653
Vinsert
p18253
I32
VMethodInvocation
p18254
tp18255
I1
s(g3896
I42
g3897
Vinsert
p18256
I34
VNumberLiteral: 30000
p18257
tp18258
I1
s(g5022
I42
g5023
Vinsert
p18259
I45
VStringLiteral: "voidMethod"
p18260
tp18261
I1
s(g5530
I42
g5531
Vinsert
p18262
I43
VSimpleType: Foo
p18263
tp18264
I2
s(g7730
I42
g7731
Vinsert
p18265
I21
VExpressionStatement
p18266
tp18267
I1
s(Vinsert
p18268
I42
VSimpleName: matches
p18269
Vinsert
p18270
I42
VSimpleName: firstChunk
p18271
tp18272
I1
s(g1
I42
g2
Vinsert
p18273
I45
VStringLiteral: "'\u005cn"
p18274
tp18275
I1
s(g9016
I42
g9017
Vinsert
p18276
I42
VSimpleName: verify
p18277
tp18278
I4
s(g2113
I42
g2114
Vinsert
p18279
I42
VSimpleName: mode
p18280
tp18281
I1
s(Vinsert
p18282
I42
VSimpleName: simpleMethod
p18283
Vinsert
p18284
I42
VSimpleName: shouldProvideExtraPointOfFailure
p18285
tp18286
I1
s(g3326
I42
g3327
Vinsert
p18287
I8
VBlock
p18288
tp18289
I3
s(Vinsert
p18290
I42
VSimpleName: return_value
p18291
Vinsert
p18292
I42
VSimpleName: getType
p18293
tp18294
I1
s(g12872
I42
g12873
Vinsert
p18295
I42
VSimpleName: mock
p18296
tp18297
I2
s(g7200
I42
g7201
Vinsert
p18298
I65
VTagElement: @return
p18299
tp18300
I1
s(g11112
I42
g11113
Vinsert
p18301
I78
VMarkerAnnotation
p18302
tp18303
I5
s(g9832
I42
g9833
Vinsert
p18304
I41
VReturnStatement
p18305
tp18306
I1
s(g2200
I42
g2201
Vinsert
p18307
I54
VTryStatement
p18308
tp18309
I3
s(g8808
I42
g8809
Vinsert
p18310
I32
VMethodInvocation
p18311
tp18312
I2
s(g11012
I42
g11013
Vinsert
p18313
I83
VModifier: public
p18314
tp18315
I1
s(g9990
I42
g9991
Vinsert
p18316
I32
VMethodInvocation
p18317
tp18318
I10
s(g3914
I42
g3915
Vinsert
p18319
I21
VExpressionStatement
p18320
tp18321
I2
s(g11336
I42
g11337
Vinsert
p18322
I34
VNumberLiteral: 0
p18323
tp18324
I1
s(g1362
I42
g1363
Vinsert
p18325
I21
VExpressionStatement
p18326
tp18327
I2
s(g2939
I42
g2940
Vinsert
p18328
I60
VVariableDeclarationStatement
p18329
tp18330
I1
s(Vinsert
p18331
I42
VSimpleName: getMessage
p18332
Vinsert
p18333
I43
VSimpleType: NoClassDefFoundError
p18334
tp18335
I1
s(g10672
I42
g10673
Vinsert
p18336
I59
VVariableDeclarationFragment
p18337
tp18338
I5
s(g12226
I42
g12227
Vinsert
p18339
I42
VSimpleName: collection
p18340
tp18341
I1
s(g453
I42
g454
Vinsert
p18342
I43
VSimpleType: HasStackTrace
p18343
tp18344
I1
s(g2866
I42
g2867
Vinsert
p18345
I16
VConditionalExpression
p18346
tp18347
I1
s(g8388
I42
g8389
Vinsert
p18348
I45
VStringLiteral: "\u005cn"
p18349
tp18350
I1
s(g15913
I42
g15914
Vinsert
p18351
I42
VSimpleName: thisStubWasNotUsed
p18352
tp18353
I1
s(g826
I42
g827
Vinsert
p18354
I25
VIfStatement
p18355
tp18356
I4
s(g9429
I42
g9430
Vinsert
p18357
I43
VSimpleType: Set
p18358
tp18359
I5
s(g7817
I42
g7818
Vinsert
p18360
I39
VPrimitiveType: void
p18361
tp18362
I2
s(g9832
I42
g9833
Vinsert
p18363
I44
VSingleVariableDeclaration
p18364
tp18365
I1
s(Vinsert
p18366
I42
VSimpleName: newInstance
p18367
Vinsert
p18368
I83
VModifier: static
p18369
tp18370
I2
s(g6195
I42
g6196
Vinsert
p18371
I58
VVariableDeclarationExpression
p18372
tp18373
I1
s(g5237
I42
g5238
Vinsert
p18374
I31
VMethodDeclaration
p18375
tp18376
I1
s(Vinsert
p18377
I42
VSimpleName: getStubbingLookupListeners
p18378
Vinsert
p18379
I42
VSimpleName: listeners
p18380
tp18381
I1
s(g5733
I42
g5734
Vinsert
p18382
I42
VSimpleName: shouldVerifyAtLeastOnce
p18383
tp18384
I1
s(g9413
I42
g9414
Vinsert
p18385
I43
VSimpleType: Exception
p18386
tp18387
I2
s(g6877
I42
g6878
Vinsert
p18388
I16
VConditionalExpression
p18389
tp18390
I1
s(g9789
I42
g9790
Vinsert
p18391
I42
VSimpleName: mock
p18392
tp18393
I1
s(g3021
I42
g3022
Vinsert
p18394
I43
VSimpleType: InvocationMatcher
p18395
tp18396
I1
s(g7752
I42
g7753
Vinsert
p18397
I42
VSimpleName: Test
p18398
tp18399
I1
s(g673
I42
g674
Vinsert
p18400
I42
VSimpleName: String
p18401
tp18402
I4
s(g12799
I42
g12800
Vinsert
p18403
I42
VSimpleName: zip
p18404
tp18405
I1
s(g5902
I42
g5903
Vinsert
p18406
I45
VStringLiteral: "foo.get()"
p18407
tp18408
I1
s(g332
I42
g333
Vinsert
p18409
I83
VModifier: public
p18410
tp18411
I1
s(g51
I42
g52
Vinsert
p18412
I40
VQualifiedName: insns.first
p18413
tp18414
I1
s(g6841
I42
g6842
Vinsert
p18415
I34
VNumberLiteral: 0
p18416
tp18417
I1
s(g5216
I42
g5217
Vinsert
p18418
I2
VArrayAccess
p18419
tp18420
I1
s(g10767
I42
g10768
Vinsert
p18421
I74
VParameterizedType: ArgumentCaptor<String>
p18422
tp18423
I1
s(g9758
I42
g9759
Vinsert
p18424
I42
VSimpleName: Mockito
p18425
tp18426
I1
s(g9560
I42
g9561
Vinsert
p18427
I42
VSimpleName: fun
p18428
tp18429
I1
s(g8991
I42
g8992
Vinsert
p18430
I22
VFieldAccess
p18431
tp18432
I3
s(Vinsert
p18433
I42
VSimpleName: getMethod
p18434
Vinsert
p18435
I42
VSimpleName: returnByDefault
p18436
tp18437
I1
s(g16356
I42
g16357
Vinsert
p18438
I42
VSimpleName: invocationForStubbing
p18439
tp18440
I1
s(g5138
I42
g5139
Vinsert
p18441
I32
VMethodInvocation
p18442
tp18443
I1
s(g7577
I42
g7578
Vinsert
p18444
I74
VParameterizedType: ArrayList<Object>
p18445
tp18446
I2
s(g337
I42
g338
Vinsert
p18447
I18
VContinueStatement
p18448
tp18449
I1
s(g806
I42
g807
Vinsert
p18450
I74
VParameterizedType: Class<?>
p18451
tp18452
I1
s(g15245
I42
g15246
Vinsert
p18453
I45
VStringLiteral: "* No notable improvements. See the commits for detailed changes."
p18454
tp18455
I1
s(g17045
I42
g17046
Vinsert
p18456
I42
VSimpleName: Method
p18457
tp18458
I1
s(g2398
I42
g2399
Vinsert
p18459
I43
VSimpleType: Task
p18460
tp18461
I2
s(Vinsert
p18462
I42
VSimpleName: getSimpleName
p18463
Vinsert
p18464
I45
VStringLiteral: "extraInterfaces() accepts only interfaces."
p18465
tp18466
I1
s(g10507
I42
g10508
Vinsert
p18467
I42
VSimpleName: target
p18468
tp18469
I1
s(g2775
I42
g2776
Vinsert
p18470
I38
VPrefixExpression: !
p18471
tp18472
I2
s(g4986
I42
g4987
Vinsert
p18473
I42
VSimpleName: ReturnValues
p18474
tp18475
I1
s(g7544
I42
g7545
Vinsert
p18476
I21
VExpressionStatement
p18477
tp18478
I1
s(g3822
I42
g3823
Vinsert
p18479
I42
VSimpleName: NumberOfInvocationsError
p18480
tp18481
I1
s(g12221
I42
g12222
Vinsert
p18482
I42
VSimpleName: declaredFields
p18483
tp18484
I1
s(g2526
I42
g2527
Vinsert
p18485
I8
VBlock
p18486
tp18487
I5
s(g2657
I42
g2658
Vinsert
p18488
I42
VSimpleName: mv
p18489
tp18490
I1
s(g3483
I42
g3484
Vinsert
p18491
I43
VSimpleType: Character
p18492
tp18493
I1
s(g6669
I42
g6670
Vinsert
p18494
I42
VSimpleName: shouldIInjectMocksInSpy
p18495
tp18496
I1
s(Vinsert
p18497
I42
VSimpleName: simpleMethod
p18498
Vinsert
p18499
I42
VSimpleName: methods
p18500
tp18501
I5
s(g11012
I42
g11013
Vinsert
p18502
I42
VSimpleName: Exception
p18503
tp18504
I1
s(g1785
I42
g1786
Vinsert
p18505
I42
VSimpleName: given
p18506
tp18507
I1
s(g6801
I42
g6802
Vinsert
p18508
I42
VSimpleName: expectedSubstring
p18509
tp18510
I1
s(g3308
I42
g3309
Vinsert
p18511
I59
VVariableDeclarationFragment
p18512
tp18513
I4
s(g109
I42
g110
Vinsert
p18514
I27
VInfixExpression: >
p18515
tp18516
I1
s(g4204
I42
g4205
Vinsert
p18517
I21
VExpressionStatement
p18518
tp18519
I6
s(g8483
I42
g8484
Vinsert
p18520
I43
VSimpleType: RuntimeException
p18521
tp18522
I1
s(g1179
I42
g1180
Vinsert
p18523
I8
VBlock
p18524
tp18525
I53
s(g11791
I42
g11792
Vinsert
p18526
I32
VMethodInvocation
p18527
tp18528
I1
s(g8493
I42
g8494
Vinsert
p18529
I23
VFieldDeclaration
p18530
tp18531
I1
s(g3601
I42
g3602
Vinsert
p18532
I42
VSimpleName: SomeMethods
p18533
tp18534
I2
s(g5491
I42
g5492
Vinsert
p18535
I42
VSimpleName: TestBase
p18536
tp18537
I1
s(g3935
I42
g3936
Vinsert
p18538
I66
VTextElement:  if no
p18539
tp18540
I1
s(g61
I42
g62
Vinsert
p18541
I32
VMethodInvocation
p18542
tp18543
I7
s(g6642
I42
g6643
Vinsert
p18544
I76
VWildcardType: ?
p18545
tp18546
I1
s(g7416
I42
g7417
Vinsert
p18547
I42
VSimpleName: shouldThrowCorrectExceptionForNullInvocationListener
p18548
tp18549
I1
s(g1144
I42
g1145
Vinsert
p18550
I42
VSimpleName: cls
p18551
tp18552
I1
s(g7462
I42
g7463
Vinsert
p18553
I42
VSimpleName: ltab
p18554
tp18555
I1
s(Vinsert
p18556
I42
VSimpleName: intArgumentMethod
p18557
Vinsert
p18558
I42
VSimpleName: shouldNotThrowNPEWhenIntegerPassed
p18559
tp18560
I1
s(g99
I42
g100
Vinsert
p18561
I41
VReturnStatement
p18562
tp18563
I3
s(g199
I42
g200
Vinsert
p18564
I42
VSimpleName: PrepareMockito
p18565
tp18566
I1
s(g9147
I42
g9148
Vinsert
p18567
I43
VSimpleType: Pluralizer
p18568
tp18569
I1
s(g15147
I42
g15148
Vinsert
p18570
I42
VSimpleName: InvocationMatcher
p18571
tp18572
I1
s(g11961
I42
g11962
Vinsert
p18573
I8
VBlock
p18574
tp18575
I1
s(g1264
I42
g1265
Vinsert
p18576
I60
VVariableDeclarationStatement
p18577
tp18578
I1
s(g7361
I42
g7362
Vinsert
p18579
I43
VSimpleType: Class
p18580
tp18581
I3
s(g1457
I42
g1458
Vinsert
p18582
I45
VStringLiteral: "should_fill_in_exception_stacktrace"
p18583
tp18584
I1
s(g428
I42
g429
Vinsert
p18585
I42
VSimpleName: Assertions
p18586
tp18587
I1
s(g11141
I42
g11142
Vinsert
p18588
I43
VSimpleType: ArgumentCaptor
p18589
tp18590
I2
s(Vinsert
p18591
I42
VSimpleName: toString
p18592
Vinsert
p18593
I43
VSimpleType: VerificationError
p18594
tp18595
I1
s(Vinsert
p18596
I42
VSimpleName: filter
p18597
Vinsert
p18598
I40
VQualifiedName: org.junit.runner.manipulation.NoTestsRemainException
p18599
tp18600
I1
s(g367
I42
g368
Vinsert
p18601
I8
VBlock
p18602
tp18603
I1
s(g911
I42
g912
Vinsert
p18604
I32
VMethodInvocation
p18605
tp18606
I3
s(Vinsert
p18607
I42
VSimpleName: getParameterTypes
p18608
Vinsert
p18609
I70
VEnhancedForStatement
p18610
tp18611
I1
s(g770
I42
g771
Vinsert
p18612
I42
VSimpleName: assertThat
p18613
tp18614
I1
s(g5789
I42
g5790
Vinsert
p18615
I43
VSimpleType: MockitoException
p18616
tp18617
I1
s(g6983
I42
g6984
Vinsert
p18618
I42
VSimpleName: handle
p18619
tp18620
I1
s(g6260
I42
g6261
Vinsert
p18621
I42
VSimpleName: f
p18622
tp18623
I2
s(g7714
I42
g7715
Vinsert
p18624
I70
VEnhancedForStatement
p18625
tp18626
I1
s(Vinsert
p18627
I42
VSimpleName: when
p18628
Vinsert
p18629
I45
VStringLiteral: "TODO"
p18630
tp18631
I1
s(g405
I42
g406
Vinsert
p18632
I42
VSimpleName: checkNotNull_not_null
p18633
tp18634
I1
s(g6535
I42
g6536
Vinsert
p18635
I45
VStringLiteral: "should be run only when -ea is passed to the VM"
p18636
tp18637
I1
s(g12846
I42
g12847
Vinsert
p18638
I40
VQualifiedName: types.length
p18639
tp18640
I1
s(g10889
I42
g10890
Vinsert
p18641
I42
VSimpleName: System
p18642
tp18643
I1
s(g2147
I42
g2148
Vinsert
p18644
I42
VSimpleName: T
p18645
tp18646
I2
s(g4492
I42
g4493
Vinsert
p18647
I42
VSimpleName: Method
p18648
tp18649
I2
s(g7057
I42
g7058
Vinsert
p18650
I43
VSimpleType: LinkedList
p18651
tp18652
I1
s(g6587
I42
g6588
Vinsert
p18653
I42
VSimpleName: o1
p18654
tp18655
I4
s(g7790
I42
g7791
Vinsert
p18656
I42
VSimpleName: mocks
p18657
tp18658
I1
s(g4027
I42
g4028
Vinsert
p18659
I42
VSimpleName: set2
p18660
tp18661
I1
s(g15429
I42
g15430
Vinsert
p18662
I42
VSimpleName: Invocation
p18663
tp18664
I7
s(g2834
I42
g2835
Vinsert
p18665
I45
VStringLiteral: "Shake it baby"
p18666
tp18667
I2
s(Vinsert
p18668
I42
VSimpleName: matches
p18669
Vinsert
p18670
I1
VAnonymousClassDeclaration
p18671
tp18672
I1
s(g1886
I42
g1887
Vinsert
p18673
I42
VSimpleName: size
p18674
tp18675
I2
s(g11074
I42
g11075
Vinsert
p18676
I42
VSimpleName: Operation
p18677
tp18678
I1
s(g9344
I42
g9345
Vinsert
p18679
I43
VSimpleType: UnsupportedOperationException
p18680
tp18681
I1
s(g1614
I42
g1615
Vinsert
p18682
I83
VModifier: public
p18683
tp18684
I1
s(g2700
I42
g2701
Vinsert
p18685
I42
VSimpleName: Test
p18686
tp18687
I1
s(g653
I42
g654
Vinsert
p18688
I42
VSimpleName: isEmpty
p18689
tp18690
I1
s(g3060
I42
g3061
Vinsert
p18691
I42
VSimpleName: Platform
p18692
tp18693
I2
s(g4059
I42
g4060
Vinsert
p18694
I42
VSimpleName: getName
p18695
tp18696
I1
s(g2152
I42
g2153
Vinsert
p18697
I42
VSimpleName: setCustomReturnValues
p18698
tp18699
I1
s(g1347
I42
g1348
Vinsert
p18700
I42
VSimpleName: MockUtil
p18701
tp18702
I9
s(g951
I42
g952
Vinsert
p18703
I14
VClassInstanceCreation
p18704
tp18705
I1
s(g1871
I42
g1872
Vinsert
p18706
I42
VSimpleName: getMethodName
p18707
tp18708
I1
s(g12960
I42
g12961
Vinsert
p18709
I45
VStringLiteral: "simpleMethod"
p18710
tp18711
I1
s(g7544
I42
g7545
Vinsert
p18712
I76
VWildcardType: ?
p18713
tp18714
I1
s(g1599
I42
g1600
Vinsert
p18715
I32
VMethodInvocation
p18716
tp18717
I1
s(g8393
I42
g8394
Vinsert
p18718
I41
VReturnStatement
p18719
tp18720
I3
s(g3262
I42
g3263
Vinsert
p18721
I43
VSimpleType: VerificationMode
p18722
tp18723
I1
s(g11667
I42
g11668
Vinsert
p18724
I8
VBlock
p18725
tp18726
I7
s(g7213
I42
g7214
Vinsert
p18727
I45
VStringLiteral: "objectReturningMethodNoArgs"
p18728
tp18729
I1
s(g7534
I42
g7535
Vinsert
p18730
I42
VSimpleName: Throwable
p18731
tp18732
I2
s(g134
I42
g135
Vinsert
p18733
I42
VSimpleName: expected1
p18734
tp18735
I1
s(g3580
I42
g3581
Vinsert
p18736
I42
VSimpleName: Closure
p18737
tp18738
I2
s(g8663
I42
g8664
Vinsert
p18739
I42
VSimpleName: failed
p18740
tp18741
I3
s(g6828
I42
g6829
Vinsert
p18742
I52
VThisExpression
p18743
tp18744
I3
s(g3031
I42
g3032
Vinsert
p18745
I42
VSimpleName: finishMocking
p18746
tp18747
I1
s(g3413
I42
g3414
Vinsert
p18748
I8
VBlock
p18749
tp18750
I9
s(g2026
I42
g2027
Vinsert
p18751
I9
VBooleanLiteral: false
p18752
tp18753
I1
s(g7313
I42
g7314
Vinsert
p18754
I59
VVariableDeclarationFragment
p18755
tp18756
I1
s(g1087
I42
g1088
Vinsert
p18757
I42
VSimpleName: assertTrue
p18758
tp18759
I4
s(g11423
I42
g11424
Vinsert
p18760
I41
VReturnStatement
p18761
tp18762
I1
s(g13493
I42
g13494
Vinsert
p18763
I60
VVariableDeclarationStatement
p18764
tp18765
I1
s(g2175
I42
g2176
Vinsert
p18766
I39
VPrimitiveType: void
p18767
tp18768
I1
s(g3787
I42
g3788
Vinsert
p18769
I76
VWildcardType: ?
p18770
tp18771
I1
s(g3509
I42
g3510
Vinsert
p18772
I42
VSimpleName: Field
p18773
tp18774
I1
s(g1553
I42
g1554
Vinsert
p18775
I32
VMethodInvocation
p18776
tp18777
I7
s(g8052
I42
g8053
Vinsert
p18778
I42
VSimpleName: releaseNotesContent
p18779
tp18780
I2
s(g5105
I42
g5106
Vinsert
p18781
I31
VMethodDeclaration
p18782
tp18783
I1
s(g4929
I42
g4930
Vinsert
p18784
I25
VIfStatement
p18785
tp18786
I1
s(g189
I42
g190
Vinsert
p18787
I42
VSimpleName: when
p18788
tp18789
I1
s(g352
I42
g353
Vinsert
p18790
I43
VSimpleType: StubbingArgMismatches
p18791
tp18792
I1
s(g16189
I42
g16190
Vinsert
p18793
I42
VSimpleName: shouldVerifyCorrectlyWithVarargs
p18794
tp18795
I1
s(g3919
I42
g3920
Vinsert
p18796
I39
VPrimitiveType: void
p18797
tp18798
I1
s(g11791
I42
g11792
Vinsert
p18799
I83
VModifier: public
p18800
tp18801
I1
s(g1472
I42
g1473
Vinsert
p18802
I42
VSimpleName: mockitoGenericMetadata
p18803
tp18804
I1
s(g2526
I42
g2527
Vinsert
p18805
I11
VCastExpression
p18806
tp18807
I2
s(g9005
I42
g9006
Vinsert
p18808
I42
VSimpleName: getMessage
p18809
tp18810
I1
s(g14566
I42
g14567
Vinsert
p18811
I78
VMarkerAnnotation
p18812
tp18813
I2
s(Vinsert
p18814
I42
VSimpleName: setStubbingListener
p18815
Vinsert
p18816
I40
VQualifiedName: org.mockito.listeners.StubbingListener
p18817
tp18818
I1
s(g1129
I42
g1130
Vinsert
p18819
I8
VBlock
p18820
tp18821
I2
s(g4789
I42
g4790
Vinsert
p18822
I57
VTypeLiteral
p18823
tp18824
I1
s(g4425
I42
g4426
Vinsert
p18825
I42
VSimpleName: argument
p18826
tp18827
I3
s(g11749
I42
g11750
Vinsert
p18828
I42
VSimpleName: mock
p18829
tp18830
I2
s(g14003
I42
g14004
Vinsert
p18831
I11
VCastExpression
p18832
tp18833
I1
s(g9374
I42
g9375
Vinsert
p18834
I42
VSimpleName: verify
p18835
tp18836
I1
s(g1477
I42
g1478
Vinsert
p18837
I40
VQualifiedName: Mockito.SMART_NULLS
p18838
tp18839
I1
s(Vinsert
p18840
I42
VSimpleName: getName
p18841
Vinsert
p18842
I83
VModifier: static
p18843
tp18844
I2
s(g1632
I42
g1633
Vinsert
p18845
I42
VSimpleName: classes
p18846
tp18847
I1
s(g5017
I42
g5018
Vinsert
p18848
I32
VMethodInvocation
p18849
tp18850
I2
s(g2503
I42
g2504
Vinsert
p18851
I42
VSimpleName: ce
p18852
tp18853
I1
s(g13694
I42
g13695
Vinsert
p18854
I44
VSingleVariableDeclaration
p18855
tp18856
I1
s(g4539
I42
g4540
Vinsert
p18857
I8
VBlock
p18858
tp18859
I1
s(g3354
I42
g3355
Vinsert
p18860
I42
VSimpleName: argumentCaptor
p18861
tp18862
I1
s(g11524
I42
g11525
Vinsert
p18863
I42
VSimpleName: StubbedInvocationMatcher
p18864
tp18865
I2
s(g12256
I42
g12257
Vinsert
p18866
I42
VSimpleName: shouldCreateMockWhenConstructorIsPrivate
p18867
tp18868
I1
s(g17040
I42
g17041
Vinsert
p18869
I43
VSimpleType: MockitoLogger
p18870
tp18871
I1
s(g17240
I42
g17241
Vinsert
p18872
I21
VExpressionStatement
p18873
tp18874
I1
s(g1706
I42
g1707
Vinsert
p18875
I42
VSimpleName: assertEquals
p18876
tp18877
I1
s(g4456
I42
g4457
Vinsert
p18878
I32
VMethodInvocation
p18879
tp18880
I1
s(g563
I42
g564
Vinsert
p18881
I42
VSimpleName: Primitives
p18882
tp18883
I1
s(g458
I42
g459
Vinsert
p18884
I42
VSimpleName: IllegalArgumentException
p18885
tp18886
I1
s(g9413
I42
g9414
Vinsert
p18887
I83
VModifier: public
p18888
tp18889
I2
s(g1632
I42
g1633
Vinsert
p18890
I45
VStringLiteral: "org.mockito.Mockito"
p18891
tp18892
I1
s(g184
I42
g185
Vinsert
p18893
I39
VPrimitiveType: int
p18894
tp18895
I1
s(g342
I42
g343
Vinsert
p18896
I42
VSimpleName: target
p18897
tp18898
I1
s(g891
I42
g892
Vinsert
p18899
I42
VSimpleName: firstUndesired
p18900
tp18901
I1
s(g1159
I42
g1160
Vinsert
p18902
I42
VSimpleName: mock
p18903
tp18904
I1
s(g4300
I42
g4301
Vinsert
p18905
I40
VQualifiedName: Map.Entry
p18906
tp18907
I1
s(g10971
I42
g10972
Vinsert
p18908
I40
VQualifiedName: Strictness.STRICT_STUBS
p18909
tp18910
I1
s(g114
I42
g115
Vinsert
p18911
I41
VReturnStatement
p18912
tp18913
I2
s(Vinsert
p18914
I42
VSimpleName: addAnswer
p18915
Vinsert
p18916
I43
VSimpleType: ThrowsException
p18917
tp18918
I2
s(g11699
I42
g11700
Vinsert
p18919
I42
VSimpleName: Object
p18920
tp18921
I2
s(g16291
I42
g16292
Vinsert
p18922
I42
VSimpleName: WithSpy
p18923
tp18924
I1
s(g6535
I42
g6536
Vinsert
p18925
I8
VBlock
p18926
tp18927
I1
s(g2408
I42
g2409
Vinsert
p18928
I42
VSimpleName: stackTrace
p18929
tp18930
I1
s(g12922
I42
g12923
Vinsert
p18931
I42
VSimpleName: invocationListener
p18932
tp18933
I1
s(g174
I42
g175
Vinsert
p18934
I32
VMethodInvocation
p18935
tp18936
I3
s(g2010
I42
g2011
Vinsert
p18937
I32
VMethodInvocation
p18938
tp18939
I1
s(Vinsert
p18940
I42
VSimpleName: isLastStackElementToRemove
p18941
Vinsert
p18942
I42
VSimpleName: filter
p18943
tp18944
I1
s(g11043
I42
g11044
Vinsert
p18945
I31
VMethodDeclaration
p18946
tp18947
I1
s(g2988
I42
g2989
Vinsert
p18948
I21
VExpressionStatement
p18949
tp18950
I4
s(g7872
I42
g7873
Vinsert
p18951
I57
VTypeLiteral
p18952
tp18953
I4
s(g6098
I42
g6099
Vinsert
p18954
I74
VParameterizedType: List<Invocation>
p18955
tp18956
I1
s(g7806
I42
g7807
Vinsert
p18957
I42
VSimpleName: registeredTypes
p18958
tp18959
I1
s(g2575
I42
g2576
Vinsert
p18960
I5
VArrayType: Object[]
p18961
tp18962
I1
s(g7867
I42
g7868
Vinsert
p18963
I53
VThrowStatement
p18964
tp18965
I7
s(Vinsert
p18966
I42
VSimpleName: getClass
p18967
Vinsert
p18968
I42
VSimpleName: type
p18969
tp18970
I5
s(g528
I42
g529
Vinsert
p18971
I42
VSimpleName: exception
p18972
tp18973
I2
s(g46
I42
g47
Vinsert
p18974
I42
VSimpleName: BaseClass
p18975
tp18976
I2
s(g8517
I42
g8518
Vinsert
p18977
I45
VStringLiteral: "Correct message"
p18978
tp18979
I1
s(g3293
I42
g3294
Vinsert
p18980
I39
VPrimitiveType: boolean
p18981
tp18982
I1
s(g8588
I42
g8589
Vinsert
p18983
I42
VSimpleName: assertThat
p18984
tp18985
I4
s(g5789
I42
g5790
Vinsert
p18986
I14
VClassInstanceCreation
p18987
tp18988
I1
s(g3654
I42
g3655
Vinsert
p18989
I42
VSimpleName: ForwardsInvocations
p18990
tp18991
I2
s(g4577
I42
g4578
Vinsert
p18992
I42
VSimpleName: thenAnswer
p18993
tp18994
I2
s(Vinsert
p18995
I42
VSimpleName: instance
p18996
Vinsert
p18997
I43
VSimpleType: TestBase
p18998
tp18999
I1
s(g1184
I42
g1185
Vinsert
p19000
I42
VSimpleName: target
p19001
tp19002
I2
s(g10346
I42
g10347
Vinsert
p19003
I42
VSimpleName: assertNotNull
p19004
tp19005
I1
s(g7806
I42
g7807
Vinsert
p19006
I61
VWhileStatement
p19007
tp19008
I1
s(Vinsert
p19009
I42
VSimpleName: add
p19010
Vinsert
p19011
I42
VSimpleName: InnerClassNode
p19012
tp19013
I2
s(g7166
I42
g7167
Vinsert
p19014
I42
VSimpleName: verificationErrorMessage
p19015
tp19016
I1
s(g7898
I42
g7899
Vinsert
p19017
I42
VSimpleName: cause
p19018
tp19019
I13
s(g10180
I42
g10181
Vinsert
p19020
I42
VSimpleName: clazz
p19021
tp19022
I1
s(g3766
I42
g3767
Vinsert
p19023
I42
VSimpleName: Constructor
p19024
tp19025
I3
s(Vinsert
p19026
I42
VSimpleName: add
p19027
Vinsert
p19028
I45
VStringLiteral: "foo"
p19029
tp19030
I6
s(Vinsert
p19031
I42
VSimpleName: add
p19032
Vinsert
p19033
I83
VModifier: private
p19034
tp19035
I3
s(g2682
I42
g2683
Vinsert
p19036
I42
VSimpleName: chunk
p19037
tp19038
I1
s(g7521
I42
g7522
Vinsert
p19039
I8
VBlock
p19040
tp19041
I3
s(g468
I42
g469
Vinsert
p19042
I59
VVariableDeclarationFragment
p19043
tp19044
I1
s(g11012
I42
g11013
Vinsert
p19045
I32
VMethodInvocation
p19046
tp19047
I11
s(g5226
I42
g5227
Vinsert
p19048
I33
VNullLiteral
p19049
tp19050
I1
s(g14420
I42
g14421
Vinsert
p19051
I8
VBlock
p19052
tp19053
I7
s(g4133
I42
g4134
Vinsert
p19054
I14
VClassInstanceCreation
p19055
tp19056
I2
s(g1462
I42
g1463
Vinsert
p19057
I42
VSimpleName: chunk
p19058
tp19059
I1
s(g3880
I42
g3881
Vinsert
p19060
I43
VSimpleType: Object
p19061
tp19062
I1
s(g3777
I42
g3778
Vinsert
p19063
I42
VSimpleName: mocks
p19064
tp19065
I3
s(Vinsert
p19066
I42
VSimpleName: set
p19067
Vinsert
p19068
I44
VSingleVariableDeclaration
p19069
tp19070
I2
s(g593
I42
g594
Vinsert
p19071
I42
VSimpleName: toBeReturned
p19072
tp19073
I1
s(Vinsert
p19074
I42
VSimpleName: iterator
p19075
Vinsert
p19076
I42
VSimpleName: matchingMock
p19077
tp19078
I1
s(g6791
I42
g6792
Vinsert
p19079
I42
VSimpleName: type
p19080
tp19081
I1
s(g7221
I42
g7222
Vinsert
p19082
I23
VFieldDeclaration
p19083
tp19084
I2
s(Vinsert
p19085
I42
VSimpleName: getMockName
p19086
Vinsert
p19087
I43
VSimpleType: T
p19088
tp19089
I2
s(Vinsert
p19090
I42
VSimpleName: verify
p19091
Vinsert
p19092
I42
VSimpleName: shouldPrintStrictVerificationError
p19093
tp19094
I1
s(g3914
I42
g3915
Vinsert
p19095
I32
VMethodInvocation
p19096
tp19097
I7
s(g12649
I42
g12650
Vinsert
p19098
I42
VSimpleName: charValue
p19099
tp19100
I1
s(g5151
I42
g5152
Vinsert
p19101
I42
VSimpleName: Exception
p19102
tp19103
I2
s(g10851
I42
g10852
Vinsert
p19104
I42
VSimpleName: type
p19105
tp19106
I1
s(g15187
I42
g15188
Vinsert
p19107
I42
VSimpleName: add
p19108
tp19109
I1
s(g2286
I42
g2287
Vinsert
p19110
I8
VBlock
p19111
tp19112
I3
s(Vinsert
p19113
I42
VSimpleName: getClass
p19114
Vinsert
p19115
I42
VSimpleName: fieldClass
p19116
tp19117
I1
s(g2344
I42
g2345
Vinsert
p19118
I74
VParameterizedType: MockHandlerImpl<GenericSubClass>
p19119
tp19120
I1
s(g16093
I42
g16094
Vinsert
p19121
I42
VSimpleName: shouldResetOngoingStubbingWhenAsked
p19122
tp19123
I1
s(g3527
I42
g3528
Vinsert
p19124
I39
VPrimitiveType: void
p19125
tp19126
I1
s(g12737
I42
g12738
Vinsert
p19127
I32
VMethodInvocation
p19128
tp19129
I12
s(g1149
I42
g1150
Vinsert
p19130
I42
VSimpleName: M
p19131
tp19132
I1
s(g10311
I42
g10312
Vinsert
p19133
I42
VSimpleName: Test
p19134
tp19135
I2
s(Vinsert
p19136
I42
VSimpleName: getLength
p19137
Vinsert
p19138
I59
VVariableDeclarationFragment
p19139
tp19140
I2
s(g17934
I42
g17935
Vinsert
p19141
I42
VSimpleName: Equals
p19142
tp19143
I1
s(Vinsert
p19144
I42
VSimpleName: has
p19145
Vinsert
p19146
I42
VSimpleName: has
p19147
tp19148
I6
s(g4153
I42
g4154
Vinsert
p19149
I42
VSimpleName: SoftReference
p19150
tp19151
I1
s(g2105
I42
g2106
Vinsert
p19152
I42
VSimpleName: loaders
p19153
tp19154
I2
s(g10470
I42
g10471
Vinsert
p19155
I43
VSimpleType: ReturnsVoid
p19156
tp19157
I1
s(g3961
I42
g3962
Vinsert
p19158
I27
VInfixExpression: +
p19159
tp19160
I14
s(g8677
I42
g8678
Vinsert
p19161
I83
VModifier: final
p19162
tp19163
I1
s(g4051
I42
g4052
Vinsert
p19164
I60
VVariableDeclarationStatement
p19165
tp19166
I1
s(g1609
I42
g1610
Vinsert
p19167
I34
VNumberLiteral: 90
p19168
tp19169
I1
s(g658
I42
g659
Vinsert
p19170
I3
VArrayCreation
p19171
tp19172
I1
s(g2876
I42
g2877
Vinsert
p19173
I32
VMethodInvocation
p19174
tp19175
I3
s(g16454
I42
g16455
Vinsert
p19176
I42
VSimpleName: Exception
p19177
tp19178
I5
s(Vinsert
p19179
I42
VSimpleName: getCause
p19180
Vinsert
p19181
I45
VStringLiteral: "First undesired invocation:"
p19182
tp19183
I1
s(g51
I42
g52
Vinsert
p19184
I21
VExpressionStatement
p19185
tp19186
I4
s(g6872
I42
g6873
Vinsert
p19187
I39
VPrimitiveType: boolean
p19188
tp19189
I1
s(g89
I42
g90
Vinsert
p19190
I43
VSimpleType: Invocation
p19191
tp19192
I1
s(g2157
I42
g2158
Vinsert
p19193
I42
VSimpleName: spy
p19194
tp19195
I1
s(g5398
I42
g5399
Vinsert
p19196
I42
VSimpleName: Double
p19197
tp19198
I1
s(g6872
I42
g6873
Vinsert
p19199
I44
VSingleVariableDeclaration
p19200
tp19201
I2
s(g10916
I42
g10917
Vinsert
p19202
I42
VSimpleName: expected
p19203
tp19204
I1
s(g405
I42
g406
Vinsert
p19205
I45
VStringLiteral: "abc"
p19206
tp19207
I1
s(g15972
I42
g15973
Vinsert
p19208
I42
VSimpleName: Person
p19209
tp19210
I1
s(g1164
I42
g1165
Vinsert
p19211
I42
VSimpleName: e
p19212
tp19213
I1
s(g12606
I42
g12607
Vinsert
p19214
I42
VSimpleName: VerificationListener
p19215
tp19216
I1
s(Vinsert
p19217
I42
VSimpleName: verify
p19218
Vinsert
p19219
I21
VExpressionStatement
p19220
tp19221
I84
s(g169
I42
g170
Vinsert
p19222
I42
VSimpleName: Test
p19223
tp19224
I1
s(g11243
I42
g11244
Vinsert
p19225
I43
VSimpleType: Object
p19226
tp19227
I1
s(g4479
I42
g4480
Vinsert
p19228
I42
VSimpleName: matcher
p19229
tp19230
I1
s(g3532
I42
g3533
Vinsert
p19231
I32
VMethodInvocation
p19232
tp19233
I6
s(g4646
I42
g4647
Vinsert
p19234
I42
VSimpleName: ongoingStubbing
p19235
tp19236
I1
s(g6502
I42
g6503
Vinsert
p19237
I42
VSimpleName: injected
p19238
tp19239
I1
s(g1372
I42
g1373
Vinsert
p19240
I32
VMethodInvocation
p19241
tp19242
I32
s(g3336
I42
g3337
Vinsert
p19243
I42
VSimpleName: MockitoInvocationHandler
p19244
tp19245
I1
s(g483
I42
g484
Vinsert
p19246
I41
VReturnStatement
p19247
tp19248
I1
s(g10032
I42
g10033
Vinsert
p19249
I42
VSimpleName: anyString
p19250
tp19251
I1
s(Vinsert
p19252
I42
VSimpleName: initMocks
p19253
Vinsert
p19254
I42
VSimpleName: List
p19255
tp19256
I2
s(Vinsert
p19257
I42
VSimpleName: toInvocation
p19258
Vinsert
p19259
I42
VSimpleName: shouldReturnAllChunksWhenModeIsAtLeastOnce
p19260
tp19261
I1
s(g8770
I42
g8771
Vinsert
p19262
I39
VPrimitiveType: int
p19263
tp19264
I1
s(g4290
I42
g4291
Vinsert
p19265
I27
VInfixExpression: ==
p19266
tp19267
I8
s(g2472
I42
g2473
Vinsert
p19268
I39
VPrimitiveType: void
p19269
tp19270
I1
s(g1924
I42
g1925
Vinsert
p19271
I31
VMethodDeclaration
p19272
tp19273
I1
s(Vinsert
p19274
I42
VSimpleName: isSpy
p19275
Vinsert
p19276
I42
VSimpleName: ArrayList
p19277
tp19278
I1
s(g6872
I42
g6873
Vinsert
p19279
I42
VSimpleName: durationMillis
p19280
tp19281
I2
s(g3580
I42
g3581
Vinsert
p19282
I42
VSimpleName: cleanup
p19283
tp19284
I2
s(g12994
I42
g12995
Vinsert
p19285
I44
VSingleVariableDeclaration
p19286
tp19287
I13
s(g7714
I42
g7715
Vinsert
p19288
I43
VSimpleType: MockitoLogger
p19289
tp19290
I1
s(g14483
I42
g14484
Vinsert
p19291
I78
VMarkerAnnotation
p19292
tp19293
I1
s(g2424
I42
g2425
Vinsert
p19294
I42
VSimpleName: toInvocation
p19295
tp19296
I1
s(g5352
I42
g5353
Vinsert
p19297
I42
VSimpleName: OngoingVerifyingMode
p19298
tp19299
I2
s(g5522
I42
g5523
Vinsert
p19300
I83
VModifier: protected
p19301
tp19302
I3
s(g3199
I42
g3200
Vinsert
p19303
I42
VSimpleName: delegate
p19304
tp19305
I2
s(g3473
I42
g3474
Vinsert
p19306
I59
VVariableDeclarationFragment
p19307
tp19308
I2
s(g12528
I42
g12529
Vinsert
p19309
I42
VSimpleName: getDefaultAnswer
p19310
tp19311
I1
s(g3426
I42
g3427
Vinsert
p19312
I42
VSimpleName: assertTrue
p19313
tp19314
I1
s(g18377
I42
g18378
Vinsert
p19315
I74
VParameterizedType: List<StubbingLookupListener>
p19316
tp19317
I1
s(g9821
I42
g9822
Vinsert
p19318
I5
VArrayType: byte[]
p19319
tp19320
I2
s(g5421
I42
g5422
Vinsert
p19321
I42
VSimpleName: assertEquals
p19322
tp19323
I2
s(g17557
I42
g17558
Vinsert
p19324
I42
VSimpleName: assertNotNull
p19325
tp19326
I6
s(g14824
I42
g14825
Vinsert
p19327
I36
VParenthesizedExpression
p19328
tp19329
I1
s(g2374
I42
g2375
Vinsert
p19330
I8
VBlock
p19331
tp19332
I5
s(g5164
I42
g5165
Vinsert
p19333
I42
VSimpleName: throwable
p19334
tp19335
I1
s(g448
I42
g449
Vinsert
p19336
I8
VBlock
p19337
tp19338
I1
s(g9247
I42
g9248
Vinsert
p19339
I42
VSimpleName: Configuration
p19340
tp19341
I1
s(g3835
I42
g3836
Vinsert
p19342
I43
VSimpleType: NiceMessagesOnStrictOrderErrorsTest
p19343
tp19344
I1
s(g2139
I42
g2140
Vinsert
p19345
I42
VSimpleName: ClassForMocking
p19346
tp19347
I2
s(g14888
I42
g14889
Vinsert
p19348
I43
VSimpleType: Exception
p19349
tp19350
I1
s(g18096
I42
g18097
Vinsert
p19351
I42
VSimpleName: anyVararg
p19352
tp19353
I2
s(g2753
I42
g2754
Vinsert
p19354
I42
VSimpleName: appendLine
p19355
tp19356
I1
s(g1871
I42
g1872
Vinsert
p19357
I8
VBlock
p19358
tp19359
I1
s(g11659
I42
g11660
Vinsert
p19360
I42
VSimpleName: withSettings
p19361
tp19362
I1
s(g916
I42
g917
Vinsert
p19363
I42
VSimpleName: mock
p19364
tp19365
I1
s(g709
I42
g710
Vinsert
p19366
I42
VSimpleName: name
p19367
tp19368
I1
s(Vinsert
p19369
I42
VSimpleName: getMethod
p19370
Vinsert
p19371
I42
VSimpleName: clz
p19372
tp19373
I1
s(g1209
I42
g1210
Vinsert
p19374
I32
VMethodInvocation
p19375
tp19376
I4
s(g6642
I42
g6643
Vinsert
p19377
I32
VMethodInvocation
p19378
tp19379
I2
s(g4168
I42
g4169
Vinsert
p19380
I41
VReturnStatement
p19381
tp19382
I1
s(Vinsert
p19383
I42
VSimpleName: capture
p19384
Vinsert
p19385
I74
VParameterizedType: Argument<String>
p19386
tp19387
I1
s(g169
I42
g170
Vinsert
p19388
I31
VMethodDeclaration
p19389
tp19390
I1
s(g2248
I42
g2249
Vinsert
p19391
I8
VBlock
p19392
tp19393
I1
s(g1059
I42
g1060
Vinsert
p19394
I43
VSimpleType: String
p19395
tp19396
I2
s(g3896
I42
g3897
Vinsert
p19397
I42
VSimpleName: verify
p19398
tp19399
I1
s(Vinsert
p19400
I42
VSimpleName: getMessage
p19401
Vinsert
p19402
I45
VStringLiteral: "Unable to create mock instance of type 'InnerClass'"
p19403
tp19404
I1
s(Vinsert
p19405
I42
VSimpleName: simpleMethod
p19406
Vinsert
p19407
I42
VSimpleName: three
p19408
tp19409
I2
s(g996
I42
g997
Vinsert
p19410
I42
VSimpleName: List
p19411
tp19412
I1
s(g1919
I42
g1920
Vinsert
p19413
I33
VNullLiteral
p19414
tp19415
I1
s(g8561
I42
g8562
Vinsert
p19416
I38
VPrefixExpression: !
p19417
tp19418
I1
s(g8414
I42
g8415
Vinsert
p19419
I83
VModifier: public
p19420
tp19421
I1
s(g8862
I42
g8863
Vinsert
p19422
I39
VPrimitiveType: int
p19423
tp19424
I1
s(Vinsert
p19425
I42
VSimpleName: get
p19426
Vinsert
p19427
I42
VSimpleName: chunked
p19428
tp19429
I2
s(g7081
I42
g7082
Vinsert
p19430
I59
VVariableDeclarationFragment
p19431
tp19432
I1
s(g10341
I42
g10342
Vinsert
p19433
I42
VSimpleName: Object
p19434
tp19435
I1
s(g2336
I42
g2337
Vinsert
p19436
I42
VSimpleName: Invocation
p19437
tp19438
I1
s(g12561
I42
g12562
Vinsert
p19439
I43
VSimpleType: OngoingVerifyingMode
p19440
tp19441
I1
s(g6820
I42
g6821
Vinsert
p19442
I43
VSimpleType: List
p19443
tp19444
I1
s(g1518
I42
g1519
Vinsert
p19445
I27
VInfixExpression: ==
p19446
tp19447
I1
s(g6634
I42
g6635
Vinsert
p19448
I42
VSimpleName: UnfinishedMocking
p19449
tp19450
I1
s(g717
I42
g718
Vinsert
p19451
I42
VSimpleName: inferFrom
p19452
tp19453
I1
s(g7213
I42
g7214
Vinsert
p19454
I43
VSimpleType: Returns
p19455
tp19456
I1
s(g8353
I42
g8354
Vinsert
p19457
I60
VVariableDeclarationStatement
p19458
tp19459
I8
s(g5105
I42
g5106
Vinsert
p19460
I32
VMethodInvocation
p19461
tp19462
I1
s(g12046
I42
g12047
Vinsert
p19463
I42
VSimpleName: iterator
p19464
tp19465
I2
s(g4133
I42
g4134
Vinsert
p19466
I42
VSimpleName: Invocation
p19467
tp19468
I1
s(Vinsert
p19469
I42
VSimpleName: assertThat
p19470
Vinsert
p19471
I34
VNumberLiteral: 0
p19472
tp19473
I1
s(g11152
I42
g11153
Vinsert
p19474
I27
VInfixExpression: !=
p19475
tp19476
I1
s(g1347
I42
g1348
Vinsert
p19477
I42
VSimpleName: InternalMockHandler
p19478
tp19479
I2
s(g9395
I42
g9396
Vinsert
p19480
I42
VSimpleName: clazz
p19481
tp19482
I3
s(g4968
I42
g4969
Vinsert
p19483
I83
VModifier: private
p19484
tp19485
I1
s(g19217
I42
g19218
Vinsert
p19486
I42
VSimpleName: methods
p19487
tp19488
I1
s(g8255
I42
g8256
Vinsert
p19489
I42
VSimpleName: factory
p19490
tp19491
I5
s(g8467
I42
g8468
Vinsert
p19492
I59
VVariableDeclarationFragment
p19493
tp19494
I1
s(g8854
I42
g8855
Vinsert
p19495
I42
VSimpleName: ret
p19496
tp19497
I1
s(g1282
I42
g1283
Vinsert
p19498
I42
VSimpleName: Rule
p19499
tp19500
I2
s(g4719
I42
g4720
Vinsert
p19501
I76
VWildcardType: ?
p19502
tp19503
I1
s(g5570
I42
g5571
Vinsert
p19504
I21
VExpressionStatement
p19505
tp19506
I2
s(g15498
I42
g15499
Vinsert
p19507
I42
VSimpleName: invocation
p19508
tp19509
I22
s(Vinsert
p19510
I42
VSimpleName: getTypedDescription
p19511
Vinsert
p19512
I42
VSimpleName: descStr
p19513
tp19514
I1
s(g4776
I42
g4777
Vinsert
p19515
I42
VSimpleName: invocationForStubbing
p19516
tp19517
I1
s(g6647
I42
g6648
Vinsert
p19518
I33
VNullLiteral
p19519
tp19520
I10
s(g8358
I42
g8359
Vinsert
p19521
I45
VStringLiteral: "new message"
p19522
tp19523
I1
s(g608
I42
g609
Vinsert
p19524
I42
VSimpleName: IllegalArgumentException
p19525
tp19526
I1
s(g6043
I42
g6044
Vinsert
p19527
I38
VPrefixExpression: !
p19528
tp19529
I1
s(Vinsert
p19530
I42
VSimpleName: isInterface
p19531
Vinsert
p19532
I41
VReturnStatement
p19533
tp19534
I4
s(g6334
I42
g6335
Vinsert
p19535
I42
VSimpleName: versionFile
p19536
tp19537
I1
s(g523
I42
g524
Vinsert
p19538
I66
VTextElement: mockito to run on alternative platforms like Android.
p19539
tp19540
I1
s(g13596
I42
g13597
Vinsert
p19541
I58
VVariableDeclarationExpression
p19542
tp19543
I1
s(g6468
I42
g6469
Vinsert
p19544
I83
VModifier: public
p19545
tp19546
I19
s(g1079
I42
g1080
Vinsert
p19547
I83
VModifier: public
p19548
tp19549
I1
s(g5805
I42
g5806
Vinsert
p19550
I21
VExpressionStatement
p19551
tp19552
I1
s(g1614
I42
g1615
Vinsert
p19553
I42
VSimpleName: clearMockitoListeners
p19554
tp19555
I1
s(g13218
I42
g13219
Vinsert
p19556
I42
VSimpleName: CreationValidator
p19557
tp19558
I2
s(g5378
I42
g5379
Vinsert
p19559
I39
VPrimitiveType: boolean
p19560
tp19561
I1
s(g6786
I42
g6787
Vinsert
p19562
I42
VSimpleName: isolatedClassLoader
p19563
tp19564
I1
s(g8921
I42
g8922
Vinsert
p19565
I83
VModifier: private
p19566
tp19567
I1
s(g410
I42
g411
Vinsert
p19568
I21
VExpressionStatement
p19569
tp19570
I2
s(g2743
I42
g2744
Vinsert
p19571
I14
VClassInstanceCreation
p19572
tp19573
I1
s(g8329
I42
g8330
Vinsert
p19574
I32
VMethodInvocation
p19575
tp19576
I2
s(g12149
I42
g12150
Vinsert
p19577
I42
VSimpleName: proxyClass
p19578
tp19579
I1
s(g4555
I42
g4556
Vinsert
p19580
I42
VSimpleName: invocationOf
p19581
tp19582
I2
s(g3055
I42
g3056
Vinsert
p19583
I43
VSimpleType: T
p19584
tp19585
I5
s(g11263
I42
g11264
Vinsert
p19586
I59
VVariableDeclarationFragment
p19587
tp19588
I1
s(g4098
I42
g4099
Vinsert
p19589
I42
VSimpleName: invocation
p19590
tp19591
I5
s(g1688
I42
g1689
Vinsert
p19592
I43
VSimpleType: BDDStubberImpl
p19593
tp19594
I1
s(g11243
I42
g11244
Vinsert
p19595
I42
VSimpleName: invocation
p19596
tp19597
I1
s(g6906
I42
g6907
Vinsert
p19598
I42
VSimpleName: clear
p19599
tp19600
I2
s(g12422
I42
g12423
Vinsert
p19601
I43
VSimpleType: Invocation
p19602
tp19603
I2
s(Vinsert
p19604
I42
VSimpleName: run
p19605
Vinsert
p19606
I7
VAssignment: =
p19607
tp19608
I3
s(g4067
I42
g4068
Vinsert
p19609
I42
VSimpleName: testClass
p19610
tp19611
I1
s(Vinsert
p19612
I42
VSimpleName: getList
p19613
Vinsert
p19614
I42
VSimpleName: assertNotNull
p19615
tp19616
I1
s(g8242
I42
g8243
Vinsert
p19617
I42
VSimpleName: superCall
p19618
tp19619
I1
s(g11691
I42
g11692
Vinsert
p19620
I78
VMarkerAnnotation
p19621
tp19622
I1
s(g1810
I42
g1811
Vinsert
p19623
I21
VExpressionStatement
p19624
tp19625
I2
s(g400
I42
g401
Vinsert
p19626
I42
VSimpleName: format
p19627
tp19628
I1
s(g1770
I42
g1771
Vinsert
p19629
I11
VCastExpression
p19630
tp19631
I1
s(g16449
I42
g16450
Vinsert
p19632
I42
VSimpleName: r
p19633
tp19634
I1
s(g10226
I42
g10227
Vinsert
p19635
I42
VSimpleName: shouldPrintArray
p19636
tp19637
I1
s(g7258
I42
g7259
Vinsert
p19638
I43
VSimpleType: First
p19639
tp19640
I2
s(g11314
I42
g11315
Vinsert
p19641
I57
VTypeLiteral
p19642
tp19643
I3
s(g2336
I42
g2337
Vinsert
p19644
I42
VSimpleName: Reporter
p19645
tp19646
I1
s(g7451
I42
g7452
Vinsert
p19647
I42
VSimpleName: mockitoTestListener
p19648
tp19649
I1
s(g1853
I42
g1854
Vinsert
p19650
I42
VSimpleName: mv
p19651
tp19652
I2
s(g851
I42
g852
Vinsert
p19653
I42
VSimpleName: configureDefaultReturnValues
p19654
tp19655
I1
s(g7302
I42
g7303
Vinsert
p19656
I43
VSimpleType: IMethods
p19657
tp19658
I2
s(g2434
I42
g2435
Vinsert
p19659
I34
VNumberLiteral: 2
p19660
tp19661
I1
s(Vinsert
p19662
I42
VSimpleName: append
p19663
Vinsert
p19664
I42
VSimpleName: toString
p19665
tp19666
I1
s(g6582
I42
g6583
Vinsert
p19667
I57
VTypeLiteral
p19668
tp19669
I1
s(g3144
I42
g3145
Vinsert
p19670
I32
VMethodInvocation
p19671
tp19672
I2
s(g307
I42
g308
Vinsert
p19673
I42
VSimpleName: serializeAndBack
p19674
tp19675
I1
s(g3555
I42
g3556
Vinsert
p19676
I42
VSimpleName: localMock
p19677
tp19678
I2
s(g811
I42
g812
Vinsert
p19679
I44
VSingleVariableDeclaration
p19680
tp19681
I2
s(g8588
I42
g8589
Vinsert
p19682
I13
VCharacterLiteral: '\u005cu0000'
p19683
tp19684
I2
s(g991
I42
g992
Vinsert
p19685
I27
VInfixExpression: ==
p19686
tp19687
I2
s(g3219
I42
g3220
Vinsert
p19688
I43
VSimpleType: MockitoException
p19689
tp19690
I1
s(g5017
I42
g5018
Vinsert
p19691
I42
VSimpleName: mockHandler
p19692
tp19693
I2
s(g1987
I42
g1988
Vinsert
p19694
I14
VClassInstanceCreation
p19695
tp19696
I1
s(g548
I42
g549
Vinsert
p19697
I42
VSimpleName: Class
p19698
tp19699
I1
s(g4420
I42
g4421
Vinsert
p19700
I43
VSimpleType: Stubbing
p19701
tp19702
I2
s(g1462
I42
g1463
Vinsert
p19703
I42
VSimpleName: Location
p19704
tp19705
I3
s(g2916
I42
g2917
Vinsert
p19706
I42
VSimpleName: spy
p19707
tp19708
I2
s(Vinsert
p19709
I42
VSimpleName: getHandler
p19710
Vinsert
p19711
I39
VPrimitiveType: void
p19712
tp19713
I1
s(g4295
I42
g4296
Vinsert
p19714
I42
VSimpleName: Object
p19715
tp19716
I1
s(g6587
I42
g6588
Vinsert
p19717
I59
VVariableDeclarationFragment
p19718
tp19719
I2
s(g936
I42
g937
Vinsert
p19720
I83
VModifier: final
p19721
tp19722
I1
s(g61
I42
g62
Vinsert
p19723
I40
VQualifiedName: TimeUnit.MILLISECONDS
p19724
tp19725
I1
s(g2839
I42
g2840
Vinsert
p19726
I42
VSimpleName: Object
p19727
tp19728
I2
s(g9354
I42
g9355
Vinsert
p19729
I22
VFieldAccess
p19730
tp19731
I2
s(g3527
I42
g3528
Vinsert
p19732
I42
VSimpleName: accept
p19733
tp19734
I1
s(g5491
I42
g5492
Vinsert
p19735
I42
VSimpleName: shouldNotAllowNegativeNumberOfMinimumInvocations
p19736
tp19737
I1
s(g3704
I42
g3705
Vinsert
p19738
I42
VSimpleName: type
p19739
tp19740
I1
s(g7235
I42
g7236
Vinsert
p19741
I43
VSimpleType: AbstractAwareMethod
p19742
tp19743
I1
s(g12694
I42
g12695
Vinsert
p19744
I42
VSimpleName: WeakHashMap
p19745
tp19746
I1
s(g17814
I42
g17815
Vinsert
p19747
I42
VSimpleName: describeTo
p19748
tp19749
I1
s(g5305
I42
g5306
Vinsert
p19750
I42
VSimpleName: signature
p19751
tp19752
I1
s(g8875
I42
g8876
Vinsert
p19753
I42
VSimpleName: String
p19754
tp19755
I2
s(g15534
I42
g15535
Vinsert
p19756
I76
VWildcardType: ?
p19757
tp19758
I1
s(g1302
I42
g1303
Vinsert
p19759
I42
VSimpleName: indexOfNextPair
p19760
tp19761
I1
s(g16760
I42
g16761
Vinsert
p19762
I83
VModifier: public
p19763
tp19764
I4
s(g14392
I42
g14393
Vinsert
p19765
I42
VSimpleName: i
p19766
tp19767
I7
s(g14721
I42
g14722
Vinsert
p19768
I21
VExpressionStatement
p19769
tp19770
I1
s(g7012
I42
g7013
Vinsert
p19771
I42
VSimpleName: Type
p19772
tp19773
I1
s(Vinsert
p19774
I42
VSimpleName: thenReturn
p19775
Vinsert
p19776
I7
VAssignment: =
p19777
tp19778
I1
s(Vinsert
p19779
I42
VSimpleName: initMocks
p19780
Vinsert
p19781
I42
VSimpleName: init
p19782
tp19783
I1
s(g548
I42
g549
Vinsert
p19784
I42
VSimpleName: classToMock
p19785
tp19786
I1
s(g6379
I42
g6380
Vinsert
p19787
I42
VSimpleName: IOException
p19788
tp19789
I1
s(g1838
I42
g1839
Vinsert
p19790
I42
VSimpleName: listener
p19791
tp19792
I1
s(Vinsert
p19793
I42
VSimpleName: getName
p19794
Vinsert
p19795
I42
VSimpleName: add
p19796
tp19797
I1
s(g11961
I42
g11962
Vinsert
p19798
I42
VSimpleName: mock
p19799
tp19800
I2
s(Vinsert
p19801
I42
VSimpleName: simpleMethod
p19802
Vinsert
p19803
I42
VSimpleName: some_unused_stubbings
p19804
tp19805
I1
s(g986
I42
g987
Vinsert
p19806
I43
VSimpleType: MethodVisitor
p19807
tp19808
I1
s(g7735
I42
g7736
Vinsert
p19809
I44
VSingleVariableDeclaration
p19810
tp19811
I3
s(g7337
I42
g7338
Vinsert
p19812
I42
VSimpleName: InvocationInfo
p19813
tp19814
I2
s(g3654
I42
g3655
Vinsert
p19815
I42
VSimpleName: assertEquals
p19816
tp19817
I3
s(g13218
I42
g13219
Vinsert
p19818
I32
VMethodInvocation
p19819
tp19820
I1
s(g10164
I42
g10165
Vinsert
p19821
I42
VSimpleName: type
p19822
tp19823
I1
s(g6566
I42
g6567
Vinsert
p19824
I43
VSimpleType: ArgumentCaptor
p19825
tp19826
I4
s(g8337
I42
g8338
Vinsert
p19827
I44
VSingleVariableDeclaration
p19828
tp19829
I1
s(g503
I42
g504
Vinsert
p19830
I42
VSimpleName: getAll
p19831
tp19832
I1
s(g5897
I42
g5898
Vinsert
p19833
I42
VSimpleName: returnValueFor
p19834
tp19835
I1
s(g16979
I42
g16980
Vinsert
p19836
I42
VSimpleName: mock
p19837
tp19838
I1
s(g12726
I42
g12727
Vinsert
p19839
I43
VSimpleType: NotifiedMethodInvocationReport
p19840
tp19841
I1
s(g3047
I42
g3048
Vinsert
p19842
I7
VAssignment: =
p19843
tp19844
I1
s(g10696
I42
g10697
Vinsert
p19845
I32
VMethodInvocation
p19846
tp19847
I2
s(g6233
I42
g6234
Vinsert
p19848
I32
VMethodInvocation
p19849
tp19850
I4
s(g2983
I42
g2984
Vinsert
p19851
I21
VExpressionStatement
p19852
tp19853
I7
s(g9747
I42
g9748
Vinsert
p19854
I60
VVariableDeclarationStatement
p19855
tp19856
I1
s(g3585
I42
g3586
Vinsert
p19857
I32
VMethodInvocation
p19858
tp19859
I1
s(g7366
I42
g7367
Vinsert
p19860
I42
VSimpleName: getInvocation
p19861
tp19862
I1
s(g15464
I42
g15465
Vinsert
p19863
I4
VArrayInitializer
p19864
tp19865
I2
s(g16004
I42
g16005
Vinsert
p19866
I42
VSimpleName: cce
p19867
tp19868
I1
s(g12665
I42
g12666
Vinsert
p19869
I66
VTextElement:  <code>null</code>.
p19870
tp19871
I1
s(g18110
I42
g18111
Vinsert
p19872
I42
VSimpleName: Exception
p19873
tp19874
I23
s(g5794
I42
g5795
Vinsert
p19875
I83
VModifier: private
p19876
tp19877
I1
s(g3935
I42
g3936
Vinsert
p19878
I41
VReturnStatement
p19879
tp19880
I1
s(g5665
I42
g5666
Vinsert
p19881
I9
VBooleanLiteral: true
p19882
tp19883
I4
s(g2954
I42
g2955
Vinsert
p19884
I59
VVariableDeclarationFragment
p19885
tp19886
I1
s(g8647
I42
g8648
Vinsert
p19887
I42
VSimpleName: inMemoryClassLoader
p19888
tp19889
I2
s(g9504
I42
g9505
Vinsert
p19890
I27
VInfixExpression: +
p19891
tp19892
I1
s(g9716
I42
g9717
Vinsert
p19893
I42
VSimpleName: METHOD_INTERCEPTOR
p19894
tp19895
I1
s(g267
I42
g268
Vinsert
p19896
I42
VSimpleName: InvocationMatcher
p19897
tp19898
I1
s(g1591
I42
g1592
Vinsert
p19899
I32
VMethodInvocation
p19900
tp19901
I3
s(g10567
I42
g10568
Vinsert
p19902
I40
VQualifiedName: Any.ANY
p19903
tp19904
I2
s(g17987
I42
g17988
Vinsert
p19905
I43
VSimpleType: Only
p19906
tp19907
I1
s(g3851
I42
g3852
Vinsert
p19908
I43
VSimpleType: CountDownLatch
p19909
tp19910
I2
s(g10242
I42
g10243
Vinsert
p19911
I42
VSimpleName: daoFromSub
p19912
tp19913
I1
s(g4611
I42
g4612
Vinsert
p19914
I42
VSimpleName: result
p19915
tp19916
I1
s(g9434
I42
g9435
Vinsert
p19917
I7
VAssignment: =
p19918
tp19919
I2
s(g9601
I42
g9602
Vinsert
p19920
I44
VSingleVariableDeclaration
p19921
tp19922
I1
s(g204
I42
g205
Vinsert
p19923
I42
VSimpleName: Failure
p19924
tp19925
I2
s(g7911
I42
g7912
Vinsert
p19926
I43
VSimpleType: FirstUndesiredInvocation
p19927
tp19928
I2
s(g1234
I42
g1235
Vinsert
p19929
I42
VSimpleName: getTypeToMock
p19930
tp19931
I2
s(g7017
I42
g7018
Vinsert
p19932
I5
VArrayType: Object[]
p19933
tp19934
I3
s(g12362
I42
g12363
Vinsert
p19935
I42
VSimpleName: mock
p19936
tp19937
I1
s(g4051
I42
g4052
Vinsert
p19938
I42
VSimpleName: ObjectMethodsGuru
p19939
tp19940
I2
s(g15311
I42
g15312
Vinsert
p19941
I45
VStringLiteral: "mock.intArgumentMethod(2222);"
p19942
tp19943
I1
s(g7337
I42
g7338
Vinsert
p19944
I39
VPrimitiveType: void
p19945
tp19946
I1
s(g367
I42
g368
Vinsert
p19947
I42
VSimpleName: threadSafely
p19948
tp19949
I1
s(g8319
I42
g8320
Vinsert
p19950
I42
VSimpleName: inOrder
p19951
tp19952
I1
s(g3961
I42
g3962
Vinsert
p19953
I45
VStringLiteral: "  1. -> at org.mockitousage.junitrule.StrictJUnitRuleTest.unused_stubs_with_multiple_mocks(StrictJUnitRuleTest.java:0)\u005cn"
p19954
tp19955
I1
s(g15913
I42
g15914
Vinsert
p19956
I42
VSimpleName: InvocationMatcher
p19957
tp19958
I1
s(g16004
I42
g16005
Vinsert
p19959
I14
VClassInstanceCreation
p19960
tp19961
I14
s(g8348
I42
g8349
Vinsert
p19962
I42
VSimpleName: argument
p19963
tp19964
I2
s(g8846
I42
g8847
Vinsert
p19965
I42
VSimpleName: behavior
p19966
tp19967
I1
s(g7292
I42
g7293
Vinsert
p19968
I43
VSimpleType: Invocation
p19969
tp19970
I1
s(g9247
I42
g9248
Vinsert
p19971
I42
VSimpleName: instance
p19972
tp19973
I1
s(g811
I42
g812
Vinsert
p19974
I42
VSimpleName: object
p19975
tp19976
I2
s(Vinsert
p19977
I42
VSimpleName: typeMatches
p19978
Vinsert
p19979
I42
VSimpleName: assertTrue
p19980
tp19981
I1
s(g8553
I42
g8554
Vinsert
p19982
I83
VModifier: protected
p19983
tp19984
I1
s(g119
I42
g120
Vinsert
p19985
I74
VParameterizedType: List<Invocation>
p19986
tp19987
I1
s(g2897
I42
g2898
Vinsert
p19988
I42
VSimpleName: rollback
p19989
tp19990
I3
s(g443
I42
g444
Vinsert
p19991
I22
VFieldAccess
p19992
tp19993
I1
s(g5897
I42
g5898
Vinsert
p19994
I42
VSimpleName: rv
p19995
tp19996
I1
s(g6077
I42
g6078
Vinsert
p19997
I42
VSimpleName: insn
p19998
tp19999
I2
s(g1347
I42
g1348
Vinsert
p20000
I60
VVariableDeclarationStatement
p20001
tp20002
I6
s(g3106
I42
g3107
Vinsert
p20003
I42
VSimpleName: wanted
p20004
tp20005
I1
s(g6421
I42
g6422
Vinsert
p20006
I42
VSimpleName: marker
p20007
tp20008
I1
s(g12606
I42
g12607
Vinsert
p20009
I43
VSimpleType: VerificationEvent
p20010
tp20011
I1
s(Vinsert
p20012
I42
VSimpleName: getSimpleName
p20013
Vinsert
p20014
I42
VSimpleName: classToMock
p20015
tp20016
I2
s(g2359
I42
g2360
Vinsert
p20017
I42
VSimpleName: Invocation
p20018
tp20019
I3
s(g1982
I42
g1983
Vinsert
p20020
I43
VSimpleType: WarningsCollector
p20021
tp20022
I1
s(g2626
I42
g2627
Vinsert
p20023
I42
VSimpleName: MOCKING_PROGRESS
p20024
tp20025
I2
s(g16418
I42
g16419
Vinsert
p20026
I42
VSimpleName: Class
p20027
tp20028
I3
s(g623
I42
g624
Vinsert
p20029
I8
VBlock
p20030
tp20031
I1
s(g12799
I42
g12800
Vinsert
p20032
I42
VSimpleName: getBytes
p20033
tp20034
I1
s(g1347
I42
g1348
Vinsert
p20035
I42
VSimpleName: handler
p20036
tp20037
I3
s(g3242
I42
g3243
Vinsert
p20038
I42
VSimpleName: r
p20039
tp20040
I1
s(g7263
I42
g7264
Vinsert
p20041
I43
VSimpleType: IllegalStateException
p20042
tp20043
I1
s(g8770
I42
g8771
Vinsert
p20044
I42
VSimpleName: cause
p20045
tp20046
I2
s(g2557
I42
g2558
Vinsert
p20047
I42
VSimpleName: commits
p20048
tp20049
I2
s(g5316
I42
g5317
Vinsert
p20050
I42
VSimpleName: test
p20051
tp20052
I1
s(g3390
I42
g3391
Vinsert
p20053
I42
VSimpleName: action
p20054
tp20055
I1
s(g5237
I42
g5238
Vinsert
p20056
I44
VSingleVariableDeclaration
p20057
tp20058
I1
s(g2444
I42
g2445
Vinsert
p20059
I42
VSimpleName: reinitCaptors
p20060
tp20061
I1
s(g4900
I42
g4901
Vinsert
p20062
I42
VSimpleName: UnusedStubsFinder
p20063
tp20064
I2
s(g11283
I42
g11284
Vinsert
p20065
I42
VSimpleName: copy
p20066
tp20067
I1
s(Vinsert
p20068
I42
VSimpleName: append
p20069
Vinsert
p20070
I42
VSimpleName: setLength
p20071
tp20072
I2
s(g3743
I42
g3744
Vinsert
p20073
I43
VSimpleType: InvocationMatcher
p20074
tp20075
I1
s(g443
I42
g444
Vinsert
p20076
I43
VSimpleType: InheritMe
p20077
tp20078
I2
s(g16562
I42
g16563
Vinsert
p20079
I27
VInfixExpression: <
p20080
tp20081
I1
s(g7467
I42
g7468
Vinsert
p20082
I45
VStringLiteral: "Argument(s) are different! Wanted:"
p20083
tp20084
I1
s(Vinsert
p20085
I42
VSimpleName: parseInt
p20086
Vinsert
p20087
I53
VThrowStatement
p20088
tp20089
I2
s(g3527
I42
g3528
Vinsert
p20090
I43
VSimpleType: MethodVisitor
p20091
tp20092
I1
s(Vinsert
p20093
I42
VSimpleName: run
p20094
Vinsert
p20095
I42
VSimpleName: Runnable
p20096
tp20097
I2
s(g11678
I42
g11679
Vinsert
p20098
I43
VSimpleType: String
p20099
tp20100
I2
s(g8757
I42
g8758
Vinsert
p20101
I43
VSimpleType: MockitoException
p20102
tp20103
I1
s(g568
I42
g569
Vinsert
p20104
I41
VReturnStatement
p20105
tp20106
I1
s(Vinsert
p20107
I42
VSimpleName: oneArg
p20108
Vinsert
p20109
I40
VQualifiedName: org.mockito.Mockito.when
p20110
tp20111
I1
s(g12213
I42
g12214
Vinsert
p20112
I42
VSimpleName: String
p20113
tp20114
I3
s(g7041
I42
g7042
Vinsert
p20115
I39
VPrimitiveType: void
p20116
tp20117
I1
s(g12097
I42
g12098
Vinsert
p20118
I42
VSimpleName: NotAMockException
p20119
tp20120
I1
s(Vinsert
p20121
I42
VSimpleName: setStubbingListener
p20122
Vinsert
p20123
I43
VSimpleType: ThreadSafeMockingProgress
p20124
tp20125
I1
s(g17579
I42
g17580
Vinsert
p20126
I42
VSimpleName: argument
p20127
tp20128
I3
s(g573
I42
g574
Vinsert
p20129
I83
VModifier: final
p20130
tp20131
I1
s(g3542
I42
g3543
Vinsert
p20132
I42
VSimpleName: getException
p20133
tp20134
I1
s(g4300
I42
g4301
Vinsert
p20135
I32
VMethodInvocation
p20136
tp20137
I4
s(g5426
I42
g5427
Vinsert
p20138
I38
VPrefixExpression: !
p20139
tp20140
I1
s(g4981
I42
g4982
Vinsert
p20141
I42
VSimpleName: MockMaker
p20142
tp20143
I1
s(g2908
I42
g2909
Vinsert
p20144
I42
VSimpleName: format
p20145
tp20146
I2
s(g10976
I42
g10977
Vinsert
p20147
I42
VSimpleName: appendComa
p20148
tp20149
I1
s(g1292
I42
g1293
Vinsert
p20150
I39
VPrimitiveType: float
p20151
tp20152
I6
s(g7329
I42
g7330
Vinsert
p20153
I85
VDimension
p20154
tp20155
I1
s(g4670
I42
g4671
Vinsert
p20156
I42
VSimpleName: describedAs
p20157
tp20158
I1
s(g4595
I42
g4596
Vinsert
p20159
I8
VBlock
p20160
tp20161
I1
s(g46
I42
g47
Vinsert
p20162
I32
VMethodInvocation
p20163
tp20164
I2
s(g4510
I42
g4511
Vinsert
p20165
I83
VModifier: public
p20166
tp20167
I1
s(g2503
I42
g2504
Vinsert
p20168
I42
VSimpleName: METHOD
p20169
tp20170
I1
s(g6411
I42
g6412
Vinsert
p20171
I43
VSimpleType: Class
p20172
tp20173
I3
s(g10586
I42
g10587
Vinsert
p20174
I42
VSimpleName: ExtendedFactory
p20175
tp20176
I1
s(g1876
I42
g1877
Vinsert
p20177
I42
VSimpleName: DefaultContribution
p20178
tp20179
I1
s(g14538
I42
g14539
Vinsert
p20180
I2
VArrayAccess
p20181
tp20182
I1
s(g11141
I42
g11142
Vinsert
p20183
I74
VParameterizedType: ArgumentCaptor<Integer>
p20184
tp20185
I1
s(g6867
I42
g6868
Vinsert
p20186
I42
VSimpleName: mockIsTheSame
p20187
tp20188
I1
s(g1254
I42
g1255
Vinsert
p20189
I59
VVariableDeclarationFragment
p20190
tp20191
I1
s(g7763
I42
g7764
Vinsert
p20192
I18
VContinueStatement
p20193
tp20194
I1
s(g18377
I42
g18378
Vinsert
p20195
I43
VSimpleType: StubbingLookupListener
p20196
tp20197
I1
s(g12660
I42
g12661
Vinsert
p20198
I42
VSimpleName: assertThat
p20199
tp20200
I1
s(g16314
I42
g16315
Vinsert
p20201
I41
VReturnStatement
p20202
tp20203
I10
s(g19604
I42
g19605
Vinsert
p20204
I42
VSimpleName: klass
p20205
tp20206
I2
s(g1079
I42
g1080
Vinsert
p20207
I83
VModifier: final
p20208
tp20209
I1
s(g3055
I42
g3056
Vinsert
p20210
I14
VClassInstanceCreation
p20211
tp20212
I1
s(Vinsert
p20213
I42
VSimpleName: size
p20214
Vinsert
p20215
I42
VSimpleName: size
p20216
tp20217
I2
s(g11370
I42
g11371
Vinsert
p20218
I66
VTextElement: SmartNullReturnValues first tries to return ordinary return values (see 
p20219
tp20220
I1
s(g6252
I42
g6253
Vinsert
p20221
I32
VMethodInvocation
p20222
tp20223
I1
s(g14538
I42
g14539
Vinsert
p20224
I42
VSimpleName: getStackTrace
p20225
tp20226
I1
s(g2949
I42
g2950
Vinsert
p20227
I42
VSimpleName: candidate
p20228
tp20229
I2
s(Vinsert
p20230
I42
VSimpleName: getClassName
p20231
Vinsert
p20232
I39
VPrimitiveType: boolean
p20233
tp20234
I4
s(g13950
I42
g13951
Vinsert
p20235
I42
VSimpleName: getHandler
p20236
tp20237
I1
s(g8242
I42
g8243
Vinsert
p20238
I59
VVariableDeclarationFragment
p20239
tp20240
I2
s(g3483
I42
g3484
Vinsert
p20241
I42
VSimpleName: capture
p20242
tp20243
I1
s(g12108
I42
g12109
Vinsert
p20244
I42
VSimpleName: infoToken
p20245
tp20246
I1
s(g7906
I42
g7907
Vinsert
p20247
I42
VSimpleName: base
p20248
tp20249
I1
s(g6846
I42
g6847
Vinsert
p20250
I43
VSimpleType: ClassEmitter
p20251
tp20252
I2
s(g1234
I42
g1235
Vinsert
p20253
I42
VSimpleName: join
p20254
tp20255
I2
s(g13218
I42
g13219
Vinsert
p20256
I14
VClassInstanceCreation
p20257
tp20258
I1
s(g14686
I42
g14687
Vinsert
p20259
I74
VParameterizedType: LinkedList<String>
p20260
tp20261
I1
s(g8459
I42
g8460
Vinsert
p20262
I42
VSimpleName: field
p20263
tp20264
I2
s(g13427
I42
g13428
Vinsert
p20265
I43
VSimpleType: InOrder
p20266
tp20267
I1
s(g8647
I42
g8648
Vinsert
p20268
I42
VSimpleName: classloader_with_life_shorter_than_cache
p20269
tp20270
I1
s(g5335
I42
g5336
Vinsert
p20271
I8
VBlock
p20272
tp20273
I4
s(g184
I42
g185
Vinsert
p20274
I66
VTextElement:  verification mode
p20275
tp20276
I1
s(g9224
I42
g9225
Vinsert
p20277
I83
VModifier: static
p20278
tp20279
I1
s(g8372
I42
g8373
Vinsert
p20280
I42
VSimpleName: LocalizedMatcher
p20281
tp20282
I1
s(g1929
I42
g1930
Vinsert
p20283
I42
VSimpleName: name
p20284
tp20285
I2
s(g9865
I42
g9866
Vinsert
p20286
I59
VVariableDeclarationFragment
p20287
tp20288
I1
s(g1563
I42
g1564
Vinsert
p20289
I42
VSimpleName: Invocation
p20290
tp20291
I1
s(g2939
I42
g2940
Vinsert
p20292
I59
VVariableDeclarationFragment
p20293
tp20294
I1
s(g9706
I42
g9707
Vinsert
p20295
I44
VSingleVariableDeclaration
p20296
tp20297
I3
s(g6634
I42
g6635
Vinsert
p20298
I42
VSimpleName: Mock
p20299
tp20300
I2
s(g3527
I42
g3528
Vinsert
p20301
I8
VBlock
p20302
tp20303
I1
s(g4022
I42
g4023
Vinsert
p20304
I43
VSimpleType: CachingBytecodeGenerator
p20305
tp20306
I2
s(g1863
I42
g1864
Vinsert
p20307
I41
VReturnStatement
p20308
tp20309
I1
s(g4973
I42
g4974
Vinsert
p20310
I42
VSimpleName: actualMatcher
p20311
tp20312
I3
s(g7682
I42
g7683
Vinsert
p20313
I52
VThisExpression
p20314
tp20315
I2
s(g9721
I42
g9722
Vinsert
p20316
I42
VSimpleName: verificationMode
p20317
tp20318
I2
s(g13427
I42
g13428
Vinsert
p20319
I42
VSimpleName: mock
p20320
tp20321
I1
s(Vinsert
p20322
I42
VSimpleName: getAnswer
p20323
Vinsert
p20324
I44
VSingleVariableDeclaration
p20325
tp20326
I1
s(g6350
I42
g6351
Vinsert
p20327
I42
VSimpleName: thenThrow
p20328
tp20329
I1
s(g18995
I42
g18996
Vinsert
p20330
I78
VMarkerAnnotation
p20331
tp20332
I2
s(g5431
I42
g5432
Vinsert
p20333
I83
VModifier: private
p20334
tp20335
I1
s(g16418
I42
g16419
Vinsert
p20336
I74
VParameterizedType: Class<?>
p20337
tp20338
I2
s(g15601
I42
g15602
Vinsert
p20339
I43
VSimpleType: ExceptionIncludingMockitoWarnings
p20340
tp20341
I2
s(g13186
I42
g13187
Vinsert
p20342
I42
VSimpleName: hasher
p20343
tp20344
I1
s(g7124
I42
g7125
Vinsert
p20345
I42
VSimpleName: statementEvaluated
p20346
tp20347
I1
s(g7785
I42
g7786
Vinsert
p20348
I5
VArrayType: Class[]
p20349
tp20350
I1
s(g5295
I42
g5296
Vinsert
p20351
I8
VBlock
p20352
tp20353
I2
s(g6212
I42
g6213
Vinsert
p20354
I27
VInfixExpression: !=
p20355
tp20356
I2
s(Vinsert
p20357
I42
VSimpleName: expect
p20358
Vinsert
p20359
I43
VSimpleType: MockitoAssertionError
p20360
tp20361
I2
s(g4022
I42
g4023
Vinsert
p20362
I42
VSimpleName: settings
p20363
tp20364
I2
s(g1034
I42
g1035
Vinsert
p20365
I85
VDimension
p20366
tp20367
I2
s(g12304
I42
g12305
Vinsert
p20368
I42
VSimpleName: sequence
p20369
tp20370
I1
s(g2531
I42
g2532
Vinsert
p20371
I42
VSimpleName: validator
p20372
tp20373
I1
s(g4346
I42
g4347
Vinsert
p20374
I39
VPrimitiveType: void
p20375
tp20376
I1
s(g6634
I42
g6635
Vinsert
p20377
I42
VSimpleName: Mockito
p20378
tp20379
I2
s(g15719
I42
g15720
Vinsert
p20380
I8
VBlock
p20381
tp20382
I1
s(g4484
I42
g4485
Vinsert
p20383
I59
VVariableDeclarationFragment
p20384
tp20385
I3
s(Vinsert
p20386
I42
VSimpleName: verify
p20387
Vinsert
p20388
I42
VSimpleName: wantedCount
p20389
tp20390
I4
s(g5300
I42
g5301
Vinsert
p20391
I74
VParameterizedType: Class<?>
p20392
tp20393
I2
s(g3880
I42
g3881
Vinsert
p20394
I42
VSimpleName: transform
p20395
tp20396
I1
s(Vinsert
p20397
I42
VSimpleName: getMethod
p20398
Vinsert
p20399
I5
VArrayType: Class<?>[]
p20400
tp20401
I2
s(g11243
I42
g11244
Vinsert
p20402
I43
VSimpleType: InvocationOnMock
p20403
tp20404
I1
s(g15711
I42
g15712
Vinsert
p20405
I42
VSimpleName: current
p20406
tp20407
I1
s(g4848
I42
g4849
Vinsert
p20408
I42
VSimpleName: Exception
p20409
tp20410
I1
s(g3055
I42
g3056
Vinsert
p20411
I42
VSimpleName: InstanceOf
p20412
tp20413
I1
s(g1164
I42
g1165
Vinsert
p20414
I8
VBlock
p20415
tp20416
I2
s(g10324
I42
g10325
Vinsert
p20417
I74
VParameterizedType: List<? extends Stubbing>
p20418
tp20419
I1
s(g1573
I42
g1574
Vinsert
p20420
I42
VSimpleName: invocations
p20421
tp20422
I1
s(g533
I42
g534
Vinsert
p20423
I42
VSimpleName: source
p20424
tp20425
I1
s(g9571
I42
g9572
Vinsert
p20426
I26
VImportDeclaration
p20427
tp20428
I1
s(g10032
I42
g10033
Vinsert
p20429
I42
VSimpleName: f2
p20430
tp20431
I1
s(g21
I42
g22
Vinsert
p20432
I42
VSimpleName: invocationStackTrace
p20433
tp20434
I1
s(g9079
I42
g9080
Vinsert
p20435
I42
VSimpleName: Matcher
p20436
tp20437
I1
s(g16283
I42
g16284
Vinsert
p20438
I42
VSimpleName: CapturingMatcher
p20439
tp20440
I3
s(g7544
I42
g7545
Vinsert
p20441
I42
VSimpleName: mock
p20442
tp20443
I1
s(g13897
I42
g13898
Vinsert
p20444
I42
VSimpleName: mocks
p20445
tp20446
I1
s(g16004
I42
g16005
Vinsert
p20447
I43
VSimpleType: MockitoSerializationIssue
p20448
tp20449
I1
s(g2331
I42
g2332
Vinsert
p20450
I43
VSimpleType: VerificationAfterDelay
p20451
tp20452
I1
s(Vinsert
p20453
I42
VSimpleName: getClass
p20454
Vinsert
p20455
I42
VSimpleName: returnFor
p20456
tp20457
I1
s(Vinsert
p20458
I42
VSimpleName: createMock
p20459
Vinsert
p20460
I42
VSimpleName: spy
p20461
tp20462
I1
s(g1688
I42
g1689
Vinsert
p20463
I42
VSimpleName: BDDStubber
p20464
tp20465
I1
s(g11066
I42
g11067
Vinsert
p20466
I39
VPrimitiveType: void
p20467
tp20468
I2
s(g9021
I42
g9022
Vinsert
p20469
I32
VMethodInvocation
p20470
tp20471
I1
s(g267
I42
g268
Vinsert
p20472
I44
VSingleVariableDeclaration
p20473
tp20474
I2
s(g483
I42
g484
Vinsert
p20475
I62
VInstanceofExpression
p20476
tp20477
I1
s(g9247
I42
g9248
Vinsert
p20478
I43
VSimpleType: Configuration
p20479
tp20480
I1
s(g3659
I42
g3660
Vinsert
p20481
I39
VPrimitiveType: long
p20482
tp20483
I1
s(g3101
I42
g3102
Vinsert
p20484
I21
VExpressionStatement
p20485
tp20486
I2
s(g2398
I42
g2399
Vinsert
p20487
I83
VModifier: public
p20488
tp20489
I2
s(g3036
I42
g3037
Vinsert
p20490
I42
VSimpleName: answer
p20491
tp20492
I1
s(g1785
I42
g1786
Vinsert
p20493
I42
VSimpleName: anyObject
p20494
tp20495
I1
s(g11749
I42
g11750
Vinsert
p20496
I42
VSimpleName: Mockito
p20497
tp20498
I1
s(g2152
I42
g2153
Vinsert
p20499
I8
VBlock
p20500
tp20501
I1
s(g7403
I42
g7404
Vinsert
p20502
I39
VPrimitiveType: void
p20503
tp20504
I1
s(g2921
I42
g2922
Vinsert
p20505
I44
VSingleVariableDeclaration
p20506
tp20507
I1
s(Vinsert
p20508
I42
VSimpleName: oneArg
p20509
Vinsert
p20510
I54
VTryStatement
p20511
tp20512
I1
s(Vinsert
p20513
I42
VSimpleName: arraycopy
p20514
Vinsert
p20515
I40
VQualifiedName: result.start
p20516
tp20517
I1
s(g84
I42
g85
Vinsert
p20518
I42
VSimpleName: Improvement
p20519
tp20520
I1
s(g5398
I42
g5399
Vinsert
p20521
I43
VSimpleType: Exception
p20522
tp20523
I1
s(g6535
I42
g6536
Vinsert
p20524
I42
VSimpleName: safelyDisableAccess_should_fail_when_enableAccess_not_called
p20525
tp20526
I1
s(g3606
I42
g3607
Vinsert
p20527
I40
VQualifiedName: InterceptedInvocation.RealMethod.FromCallable
p20528
tp20529
I2
s(g5305
I42
g5306
Vinsert
p20530
I43
VSimpleType: MethodList
p20531
tp20532
I1
s(g15867
I42
g15868
Vinsert
p20533
I21
VExpressionStatement
p20534
tp20535
I1
s(g16902
I42
g16903
Vinsert
p20536
I32
VMethodInvocation
p20537
tp20538
I3
s(g3792
I42
g3793
Vinsert
p20539
I42
VSimpleName: getSimpleName
p20540
tp20541
I1
s(g12231
I42
g12232
Vinsert
p20542
I27
VInfixExpression: &&
p20543
tp20544
I2
s(g19709
I42
g19710
Vinsert
p20545
I11
VCastExpression
p20546
tp20547
I1
s(g1184
I42
g1185
Vinsert
p20548
I65
VTagElement
p20549
tp20550
I1
s(g12994
I42
g12995
Vinsert
p20551
I39
VPrimitiveType: void
p20552
tp20553
I17
s(g6468
I42
g6469
Vinsert
p20554
I39
VPrimitiveType: void
p20555
tp20556
I17
s(g9224
I42
g9225
Vinsert
p20557
I45
VStringLiteral: ""
p20558
tp20559
I1
s(g7859
I42
g7860
Vinsert
p20560
I59
VVariableDeclarationFragment
p20561
tp20562
I1
s(g3036
I42
g3037
Vinsert
p20563
I42
VSimpleName: matches
p20564
tp20565
I1
s(Vinsert
p20566
I42
VSimpleName: getName
p20567
Vinsert
p20568
I42
VSimpleName: Test
p20569
tp20570
I1
s(g861
I42
g862
Vinsert
p20571
I42
VSimpleName: StringUtil
p20572
tp20573
I2
s(g56
I42
g57
Vinsert
p20574
I59
VVariableDeclarationFragment
p20575
tp20576
I4
s(g4111
I42
g4112
Vinsert
p20577
I8
VBlock
p20578
tp20579
I1
s(g623
I42
g624
Vinsert
p20580
I38
VPrefixExpression: !
p20581
tp20582
I1
s(g1332
I42
g1333
Vinsert
p20583
I42
VSimpleName: MatcherGenericTypeExtractor
p20584
tp20585
I1
s(g11306
I42
g11307
Vinsert
p20586
I42
VSimpleName: when
p20587
tp20588
I1
s(g2876
I42
g2877
Vinsert
p20589
I8
VBlock
p20590
tp20591
I3
s(g3078
I42
g3079
Vinsert
p20592
I44
VSingleVariableDeclaration
p20593
tp20594
I10
s(g5335
I42
g5336
Vinsert
p20595
I43
VSimpleType: Throwable
p20596
tp20597
I2
s(g5305
I42
g5306
Vinsert
p20598
I42
VSimpleName: methodList
p20599
tp20600
I1
s(g1949
I42
g1950
Vinsert
p20601
I42
VSimpleName: Test
p20602
tp20603
I2
s(g6035
I42
g6036
Vinsert
p20604
I42
VSimpleName: Integer
p20605
tp20606
I1
s(g508
I42
g509
Vinsert
p20607
I45
VStringLiteral: "config"
p20608
tp20609
I1
s(g6013
I42
g6014
Vinsert
p20610
I43
VSimpleType: Exception
p20611
tp20612
I3
s(g7906
I42
g7907
Vinsert
p20613
I42
VSimpleName: jUnitRule
p20614
tp20615
I1
s(g2518
I42
g2519
Vinsert
p20616
I74
VParameterizedType: AnswerFunctionalInterfaces.VoidAnswer3<A,B,C>
p20617
tp20618
I1
s(g5378
I42
g5379
Vinsert
p20619
I42
VSimpleName: Override
p20620
tp20621
I1
s(g8288
I42
g8289
Vinsert
p20622
I43
VSimpleType: InvocationListener
p20623
tp20624
I1
s(g1987
I42
g1988
Vinsert
p20625
I8
VBlock
p20626
tp20627
I1
s(g6252
I42
g6253
Vinsert
p20628
I42
VSimpleName: visitAnnotation
p20629
tp20630
I1
s(g10634
I42
g10635
Vinsert
p20631
I42
VSimpleName: signature
p20632
tp20633
I1
s(g8854
I42
g8855
Vinsert
p20634
I42
VSimpleName: invoke
p20635
tp20636
I1
s(g9789
I42
g9790
Vinsert
p20637
I42
VSimpleName: e
p20638
tp20639
I2
s(g19469
I42
g19470
Vinsert
p20640
I42
VSimpleName: List
p20641
tp20642
I1
s(g1357
I42
g1358
Vinsert
p20643
I40
VQualifiedName: Character.TYPE
p20644
tp20645
I1
s(g6252
I42
g6253
Vinsert
p20646
I42
VSimpleName: desc
p20647
tp20648
I1
s(g3191
I42
g3192
Vinsert
p20649
I43
VSimpleType: Base
p20650
tp20651
I1
s(Vinsert
p20652
I42
VSimpleName: strictlyMissingMethodMode
p20653
Vinsert
p20654
I32
VMethodInvocation
p20655
tp20656
I5
s(g7730
I42
g7731
Vinsert
p20657
I25
VIfStatement
p20658
tp20659
I1
s(g5575
I42
g5576
Vinsert
p20660
I42
VSimpleName: allower
p20661
tp20662
I2
s(g4022
I42
g4023
Vinsert
p20663
I42
VSimpleName: throwable
p20664
tp20665
I1
s(g6890
I42
g6891
Vinsert
p20666
I42
VSimpleName: staticInit
p20667
tp20668
I1
s(g13694
I42
g13695
Vinsert
p20669
I8
VBlock
p20670
tp20671
I1
s(g6535
I42
g6536
Vinsert
p20672
I42
VSimpleName: Ignore
p20673
tp20674
I1
s(g6
I42
g7
Vinsert
p20675
I42
VSimpleName: answer
p20676
tp20677
I1
s(g3178
I42
g3179
Vinsert
p20678
I42
VSimpleName: Test
p20679
tp20680
I3
s(g19085
I42
g19086
Vinsert
p20681
I42
VSimpleName: oldMockHandler
p20682
tp20683
I1
s(g1393
I42
g1394
Vinsert
p20684
I57
VTypeLiteral
p20685
tp20686
I1
s(g1282
I42
g1283
Vinsert
p20687
I42
VSimpleName: MockitoRule
p20688
tp20689
I2
s(g2026
I42
g2027
Vinsert
p20690
I42
VSimpleName: printer
p20691
tp20692
I1
s(g1987
I42
g1988
Vinsert
p20693
I7
VAssignment: =
p20694
tp20695
I1
s(g2162
I42
g2163
Vinsert
p20696
I42
VSimpleName: getAllValues
p20697
tp20698
I1
s(g6642
I42
g6643
Vinsert
p20699
I44
VSingleVariableDeclaration
p20700
tp20701
I2
s(g12287
I42
g12288
Vinsert
p20702
I42
VSimpleName: assertThat
p20703
tp20704
I1
s(g6043
I42
g6044
Vinsert
p20705
I7
VAssignment: =
p20706
tp20707
I1
s(g420
I42
g421
Vinsert
p20708
I83
VModifier: public
p20709
tp20710
I1
s(g267
I42
g268
Vinsert
p20711
I43
VSimpleType: VerificationMode
p20712
tp20713
I1
s(g20322
I42
g20323
Vinsert
p20714
I42
VSimpleName: throwable
p20715
tp20716
I2
s(Vinsert
p20717
I42
VSimpleName: get
p20718
Vinsert
p20719
I42
VSimpleName: isVerifiedInOrder
p20720
tp20721
I1
s(Vinsert
p20722
I42
VSimpleName: getInterfaces
p20723
Vinsert
p20724
I32
VMethodInvocation
p20725
tp20726
I6
s(g742
I42
g743
Vinsert
p20727
I42
VSimpleName: finder
p20728
tp20729
I1
s(g2200
I42
g2201
Vinsert
p20730
I39
VPrimitiveType: boolean
p20731
tp20732
I1
s(g5934
I42
g5935
Vinsert
p20733
I42
VSimpleName: lastInvocation
p20734
tp20735
I2
s(g961
I42
g962
Vinsert
p20736
I42
VSimpleName: mockMethodDispatcher
p20737
tp20738
I1
s(g3758
I42
g3759
Vinsert
p20739
I42
VSimpleName: OngoingVerifyingMode
p20740
tp20741
I1
s(g12154
I42
g12155
Vinsert
p20742
I42
VSimpleName: clazz
p20743
tp20744
I3
s(g7619
I42
g7620
Vinsert
p20745
I32
VMethodInvocation
p20746
tp20747
I3
s(g10889
I42
g10890
Vinsert
p20748
I42
VSimpleName: getBounds
p20749
tp20750
I2
s(g8729
I42
g8730
Vinsert
p20751
I42
VSimpleName: TestFinishedEvent
p20752
tp20753
I1
s(g26
I42
g27
Vinsert
p20754
I31
VMethodDeclaration
p20755
tp20756
I1
s(g4895
I42
g4896
Vinsert
p20757
I43
VSimpleType: LinkedList
p20758
tp20759
I1
s(g6098
I42
g6099
Vinsert
p20760
I43
VSimpleType: Invocation
p20761
tp20762
I1
s(g3178
I42
g3179
Vinsert
p20763
I42
VSimpleName: shouldNotThrowNPEWhenNullPassedToSame
p20764
tp20765
I1
s(g12183
I42
g12184
Vinsert
p20766
I42
VSimpleName: SerializableMockitoMethod
p20767
tp20768
I1
s(g4204
I42
g4205
Vinsert
p20769
I83
VModifier: public
p20770
tp20771
I6
s(Vinsert
p20772
I42
VSimpleName: toString
p20773
Vinsert
p20774
I45
VStringLiteral: "\u005cnExpected: "
p20775
tp20776
I1
s(g8677
I42
g8678
Vinsert
p20777
I43
VSimpleType: Value
p20778
tp20779
I1
s(g14566
I42
g14567
Vinsert
p20780
I31
VMethodDeclaration
p20781
tp20782
I1
s(g14868
I42
g14869
Vinsert
p20783
I36
VParenthesizedExpression
p20784
tp20785
I1
s(g16154
I42
g16155
Vinsert
p20786
I42
VSimpleName: annotatedSpy
p20787
tp20788
I1
s(g1528
I42
g1529
Vinsert
p20789
I83
VModifier: static
p20790
tp20791
I1
s(g3204
I42
g3205
Vinsert
p20792
I42
VSimpleName: matcher
p20793
tp20794
I1
s(g15711
I42
g15712
Vinsert
p20795
I42
VSimpleName: chunks
p20796
tp20797
I1
s(g6846
I42
g6847
Vinsert
p20798
I32
VMethodInvocation
p20799
tp20800
I1
s(g6988
I42
g6989
Vinsert
p20801
I21
VExpressionStatement
p20802
tp20803
I3
s(g7992
I42
g7993
Vinsert
p20804
I42
VSimpleName: Runner
p20805
tp20806
I1
s(g13028
I42
g13029
Vinsert
p20807
I43
VSimpleType: RunNotifier
p20808
tp20809
I2
s(g6914
I42
g6915
Vinsert
p20810
I42
VSimpleName: m1
p20811
tp20812
I2
s(Vinsert
p20813
I42
VSimpleName: neverWantedButInvoked
p20814
Vinsert
p20815
I42
VSimpleName: atLeastOnce
p20816
tp20817
I1
s(g4111
I42
g4112
Vinsert
p20818
I65
VTagElement: @since
p20819
tp20820
I1
s(g12809
I42
g12810
Vinsert
p20821
I14
VClassInstanceCreation
p20822
tp20823
I1
s(g9483
I42
g9484
Vinsert
p20824
I42
VSimpleName: LinkedList
p20825
tp20826
I2
s(g946
I42
g947
Vinsert
p20827
I60
VVariableDeclarationStatement
p20828
tp20829
I1
s(g788
I42
g789
Vinsert
p20830
I65
VTagElement: @param
p20831
tp20832
I1
s(g12427
I42
g12428
Vinsert
p20833
I27
VInfixExpression: ||
p20834
tp20835
I1
s(g1169
I42
g1170
Vinsert
p20836
I7
VAssignment: =
p20837
tp20838
I1
s(g7030
I42
g7031
Vinsert
p20839
I42
VSimpleName: when
p20840
tp20841
I3
s(g15799
I42
g15800
Vinsert
p20842
I42
VSimpleName: wrongType
p20843
tp20844
I1
s(g16897
I42
g16898
Vinsert
p20845
I42
VSimpleName: getMock
p20846
tp20847
I4
s(g19510
I42
g19511
Vinsert
p20848
I60
VVariableDeclarationStatement
p20849
tp20850
I1
s(g4163
I42
g4164
Vinsert
p20851
I44
VSingleVariableDeclaration
p20852
tp20853
I2
s(g13114
I42
g13115
Vinsert
p20854
I74
VParameterizedType: List<Invocation>
p20855
tp20856
I3
s(g10341
I42
g10342
Vinsert
p20857
I43
VSimpleType: Throwable
p20858
tp20859
I1
s(g13881
I42
g13882
Vinsert
p20860
I85
VDimension
p20861
tp20862
I2
s(g13304
I42
g13305
Vinsert
p20863
I43
VSimpleType: MockitoException
p20864
tp20865
I1
s(Vinsert
p20866
I42
VSimpleName: close
p20867
Vinsert
p20868
I27
VInfixExpression: !=
p20869
tp20870
I2
s(g1563
I42
g1564
Vinsert
p20871
I41
VReturnStatement
p20872
tp20873
I1
s(g11263
I42
g11264
Vinsert
p20874
I32
VMethodInvocation
p20875
tp20876
I2
s(g3629
I42
g3630
Vinsert
p20877
I42
VSimpleName: second
p20878
tp20879
I1
s(g9429
I42
g9430
Vinsert
p20880
I42
VSimpleName: mockedSet
p20881
tp20882
I1
s(g4258
I42
g4259
Vinsert
p20883
I33
VNullLiteral
p20884
tp20885
I2
s(g12000
I42
g12001
Vinsert
p20886
I32
VMethodInvocation
p20887
tp20888
I6
s(g5789
I42
g5790
Vinsert
p20889
I32
VMethodInvocation
p20890
tp20891
I1
s(g19274
I42
g19275
Vinsert
p20892
I42
VSimpleName: mockUtil
p20893
tp20894
I6
s(g7790
I42
g7791
Vinsert
p20895
I43
VSimpleType: Class
p20896
tp20897
I1
s(g7704
I42
g7705
Vinsert
p20898
I27
VInfixExpression: +
p20899
tp20900
I1
s(g2871
I42
g2872
Vinsert
p20901
I43
VSimpleType: String
p20902
tp20903
I2
s(g2271
I42
g2272
Vinsert
p20904
I42
VSimpleName: DEFAULT_MOCK_MAKER_CLASS
p20905
tp20906
I1
s(g10572
I42
g10573
Vinsert
p20907
I42
VSimpleName: MOCKITO_CORE
p20908
tp20909
I1
s(g10341
I42
g10342
Vinsert
p20910
I42
VSimpleName: answer
p20911
tp20912
I1
s(g9196
I42
g9197
Vinsert
p20913
I42
VSimpleName: invocation
p20914
tp20915
I5
s(g3326
I42
g3327
Vinsert
p20916
I42
VSimpleName: given
p20917
tp20918
I1
s(g8483
I42
g8484
Vinsert
p20919
I14
VClassInstanceCreation
p20920
tp20921
I1
s(g20813
I42
g20814
Vinsert
p20922
I42
VSimpleName: times
p20923
tp20924
I1
s(g4362
I42
g4363
Vinsert
p20925
I45
VStringLiteral: " \u005cn "
p20926
tp20927
I1
s(g2531
I42
g2532
Vinsert
p20928
I57
VTypeLiteral
p20929
tp20930
I1
s(g951
I42
g952
Vinsert
p20931
I21
VExpressionStatement
p20932
tp20933
I1
s(Vinsert
p20934
I42
VSimpleName: getSimpleName
p20935
Vinsert
p20936
I43
VSimpleType: InstantiationException
p20937
tp20938
I1
s(g13596
I42
g13597
Vinsert
p20939
I22
VFieldAccess
p20940
tp20941
I2
s(g4051
I42
g4052
Vinsert
p20942
I32
VMethodInvocation
p20943
tp20944
I5
s(g1100
I42
g1101
Vinsert
p20945
I43
VSimpleType: Foo
p20946
tp20947
I1
s(g1184
I42
g1185
Vinsert
p20948
I41
VReturnStatement
p20949
tp20950
I1
s(g6077
I42
g6078
Vinsert
p20951
I42
VSimpleName: interpreter
p20952
tp20953
I2
s(g9424
I42
g9425
Vinsert
p20954
I42
VSimpleName: classProvider
p20955
tp20956
I1
s(g5839
I42
g5840
Vinsert
p20957
I8
VBlock
p20958
tp20959
I2
s(g7329
I42
g7330
Vinsert
p20960
I83
VModifier: public
p20961
tp20962
I1
s(g3478
I42
g3479
Vinsert
p20963
I42
VSimpleName: collectingData
p20964
tp20965
I1
s(g15351
I42
g15352
Vinsert
p20966
I59
VVariableDeclarationFragment
p20967
tp20968
I1
s(g2667
I42
g2668
Vinsert
p20969
I31
VMethodDeclaration
p20970
tp20971
I2
s(g7321
I42
g7322
Vinsert
p20972
I42
VSimpleName: getSpiedInstance
p20973
tp20974
I1
s(g8716
I42
g8717
Vinsert
p20975
I42
VSimpleName: withSettings
p20976
tp20977
I1
s(g1683
I42
g1684
Vinsert
p20978
I42
VSimpleName: A
p20979
tp20980
I1
s(g5609
I42
g5610
Vinsert
p20981
I66
VTextElement:  true if the object is a mock or a spy.
p20982
tp20983
I1
s(g1785
I42
g1786
Vinsert
p20984
I34
VNumberLiteral: 0
p20985
tp20986
I1
s(g7408
I42
g7409
Vinsert
p20987
I57
VTypeLiteral
p20988
tp20989
I1
s(g17814
I42
g17815
Vinsert
p20990
I43
VSimpleType: SelfDescribing
p20991
tp20992
I1
s(g12665
I42
g12666
Vinsert
p20993
I65
VTagElement
p20994
tp20995
I1
s(g13114
I42
g13115
Vinsert
p20996
I76
VWildcardType: ?
p20997
tp20998
I1
s(g906
I42
g907
Vinsert
p20999
I8
VBlock
p21000
tp21001
I3
s(g12977
I42
g12978
Vinsert
p21002
I42
VSimpleName: invocationOnInterface
p21003
tp21004
I1
s(g6321
I42
g6322
Vinsert
p21005
I8
VBlock
p21006
tp21007
I10
s(g906
I42
g907
Vinsert
p21008
I44
VSingleVariableDeclaration
p21009
tp21010
I5
s(g9349
I42
g9350
Vinsert
p21011
I42
VSimpleName: gt
p21012
tp21013
I1
s(g9560
I42
g9561
Vinsert
p21014
I42
VSimpleName: shouldAutoboxSafely
p21015
tp21016
I1
s(g420
I42
g421
Vinsert
p21017
I21
VExpressionStatement
p21018
tp21019
I1
s(g6791
I42
g6792
Vinsert
p21020
I42
VSimpleName: alias
p21021
tp21022
I1
s(g1632
I42
g1633
Vinsert
p21023
I43
VSimpleType: TraceBuilder
p21024
tp21025
I1
s(g1614
I42
g1615
Vinsert
p21026
I65
VTagElement: @link
p21027
tp21028
I1
s(g936
I42
g937
Vinsert
p21029
I39
VPrimitiveType: void
p21030
tp21031
I1
s(g139
I42
g140
Vinsert
p21032
I42
VSimpleName: lastMatchers
p21033
tp21034
I1
s(g765
I42
g766
Vinsert
p21035
I34
VNumberLiteral: 0
p21036
tp21037
I1
s(g7619
I42
g7620
Vinsert
p21038
I43
VSimpleType: Person
p21039
tp21040
I1
s(g9739
I42
g9740
Vinsert
p21041
I43
VSimpleType: String
p21042
tp21043
I9
s(g13139
I42
g13140
Vinsert
p21044
I42
VSimpleName: clazz
p21045
tp21046
I1
s(g367
I42
g368
Vinsert
p21047
I74
VParameterizedType: List<Invocation>
p21048
tp21049
I1
s(g941
I42
g942
Vinsert
p21050
I42
VSimpleName: interfaces
p21051
tp21052
I1
s(g13967
I42
g13968
Vinsert
p21053
I42
VSimpleName: VarargMethod
p21054
tp21055
I1
s(g3431
I42
g3432
Vinsert
p21056
I42
VSimpleName: closeable
p21057
tp21058
I1
s(g2205
I42
g2206
Vinsert
p21059
I70
VEnhancedForStatement
p21060
tp21061
I1
s(g17500
I42
g17501
Vinsert
p21062
I42
VSimpleName: toInvocation
p21063
tp21064
I1
s(g8393
I42
g8394
Vinsert
p21065
I42
VSimpleName: interceptor
p21066
tp21067
I1
s(g3204
I42
g3205
Vinsert
p21068
I43
VSimpleType: ObjectMethodsGuru
p21069
tp21070
I2
s(g1670
I42
g1671
Vinsert
p21071
I59
VVariableDeclarationFragment
p21072
tp21073
I6
s(g8126
I42
g8127
Vinsert
p21074
I42
VSimpleName: newInstance
p21075
tp21076
I1
s(g3807
I42
g3808
Vinsert
p21077
I32
VMethodInvocation
p21078
tp21079
I1
s(g2939
I42
g2940
Vinsert
p21080
I85
VDimension
p21081
tp21082
I2
s(Vinsert
p21083
I42
VSimpleName: verify
p21084
Vinsert
p21085
I42
VSimpleName: createStrictOrderVerifier
p21086
tp21087
I9
s(g3413
I42
g3414
Vinsert
p21088
I21
VExpressionStatement
p21089
tp21090
I16
s(g1462
I42
g1463
Vinsert
p21091
I43
VSimpleType: Location
p21092
tp21093
I3
s(Vinsert
p21094
I42
VSimpleName: sleep
p21095
Vinsert
p21096
I45
VStringLiteral: "1"
p21097
tp21098
I1
s(g19469
I42
g19470
Vinsert
p21099
I5
VArrayType: Class[]
p21100
tp21101
I1
s(g159
I42
g160
Vinsert
p21102
I42
VSimpleName: list
p21103
tp21104
I1
s(g8593
I42
g8594
Vinsert
p21105
I43
VSimpleType: ArrayList
p21106
tp21107
I1
s(g3807
I42
g3808
Vinsert
p21108
I42
VSimpleName: InstanceFactory
p21109
tp21110
I1
s(g3426
I42
g3427
Vinsert
p21111
I42
VSimpleName: tooLittleActualInvocations
p21112
tp21113
I2
s(g2690
I42
g2691
Vinsert
p21114
I45
VStringLiteral: "one"
p21115
tp21116
I1
s(g2139
I42
g2140
Vinsert
p21117
I57
VTypeLiteral
p21118
tp21119
I1
s(g9390
I42
g9391
Vinsert
p21120
I42
VSimpleName: GLOBAL_CONFIGURATION
p21121
tp21122
I1
s(g1688
I42
g1689
Vinsert
p21123
I43
VSimpleType: BDDStubber
p21124
tp21125
I1
s(g11107
I42
g11108
Vinsert
p21126
I42
VSimpleName: doCallRealMethod
p21127
tp21128
I1
s(g6725
I42
g6726
Vinsert
p21129
I43
VSimpleType: MockitoException
p21130
tp21131
I1
s(g6781
I42
g6782
Vinsert
p21132
I42
VSimpleName: actual
p21133
tp21134
I1
s(g12705
I42
g12706
Vinsert
p21135
I42
VSimpleName: iterator
p21136
tp21137
I1
s(g4895
I42
g4896
Vinsert
p21138
I59
VVariableDeclarationFragment
p21139
tp21140
I1
s(g11839
I42
g11840
Vinsert
p21141
I78
VMarkerAnnotation
p21142
tp21143
I5
s(g17240
I42
g17241
Vinsert
p21144
I83
VModifier: public
p21145
tp21146
I1
s(g12370
I42
g12371
Vinsert
p21147
I31
VMethodDeclaration
p21148
tp21149
I1
s(g2934
I42
g2935
Vinsert
p21150
I78
VMarkerAnnotation
p21151
tp21152
I3
s(g1871
I42
g1872
Vinsert
p21153
I27
VInfixExpression: &&
p21154
tp21155
I1
s(g1586
I42
g1587
Vinsert
p21156
I42
VSimpleName: targetType
p21157
tp21158
I1
s(g13383
I42
g13384
Vinsert
p21159
I21
VExpressionStatement
p21160
tp21161
I2
s(g8324
I42
g8325
Vinsert
p21162
I45
VStringLiteral: "constructor"
p21163
tp21164
I1
s(g6368
I42
g6369
Vinsert
p21165
I43
VSimpleType: VerificationData
p21166
tp21167
I1
s(g3267
I42
g3268
Vinsert
p21168
I45
VStringLiteral: "    5th: 5"
p21169
tp21170
I1
s(g17182
I42
g17183
Vinsert
p21171
I44
VSingleVariableDeclaration
p21172
tp21173
I2
s(g10507
I42
g10508
Vinsert
p21174
I5
VArrayType: Object[]
p21175
tp21176
I1
s(g13023
I42
g13024
Vinsert
p21177
I43
VSimpleType: java.lang.reflect.InvocationTargetException
p21178
tp21179
I1
s(g11404
I42
g11405
Vinsert
p21180
I43
VSimpleType: String
p21181
tp21182
I1
s(g8176
I42
g8177
Vinsert
p21183
I14
VClassInstanceCreation
p21184
tp21185
I2
s(g5007
I42
g5008
Vinsert
p21186
I42
VSimpleName: i
p21187
tp21188
I4
s(g19469
I42
g19470
Vinsert
p21189
I43
VSimpleType: Class
p21190
tp21191
I1
s(g6914
I42
g6915
Vinsert
p21192
I7
VAssignment: =
p21193
tp21194
I2
s(g7472
I42
g7473
Vinsert
p21195
I42
VSimpleName: source
p21196
tp21197
I1
s(g568
I42
g569
Vinsert
p21198
I42
VSimpleName: OngoingMockInjection
p21199
tp21200
I1
s(g8160
I42
g8161
Vinsert
p21201
I59
VVariableDeclarationFragment
p21202
tp21203
I1
s(g204
I42
g205
Vinsert
p21204
I42
VSimpleName: RuntimeException
p21205
tp21206
I1
s(g6828
I42
g6829
Vinsert
p21207
I42
VSimpleName: builder
p21208
tp21209
I1
s(g7495
I42
g7496
Vinsert
p21210
I42
VSimpleName: String
p21211
tp21212
I3
s(g16053
I42
g16054
Vinsert
p21213
I8
VBlock
p21214
tp21215
I3
s(g5408
I42
g5409
Vinsert
p21216
I42
VSimpleName: matcher
p21217
tp21218
I1
s(g8218
I42
g8219
Vinsert
p21219
I14
VClassInstanceCreation
p21220
tp21221
I2
s(g7248
I42
g7249
Vinsert
p21222
I45
VStringLiteral: " is not static"
p21223
tp21224
I1
s(g6914
I42
g6915
Vinsert
p21225
I27
VInfixExpression: &&
p21226
tp21227
I1
s(g8827
I42
g8828
Vinsert
p21228
I42
VSimpleName: seq
p21229
tp21230
I1
s(g3550
I42
g3551
Vinsert
p21231
I55
VTypeDeclaration
p21232
tp21233
I1
s(g6587
I42
g6588
Vinsert
p21234
I8
VBlock
p21235
tp21236
I2
s(g10680
I42
g10681
Vinsert
p21237
I42
VSimpleName: inMemoryClassObjects
p21238
tp21239
I1
s(g10987
I42
g10988
Vinsert
p21240
I83
VModifier: public
p21241
tp21242
I1
s(g7825
I42
g7826
Vinsert
p21243
I60
VVariableDeclarationStatement
p21244
tp21245
I2
s(g61
I42
g62
Vinsert
p21246
I42
VSimpleName: Object
p21247
tp21248
I1
s(g4502
I42
g4503
Vinsert
p21249
I85
VDimension
p21250
tp21251
I1
s(g3478
I42
g3479
Vinsert
p21252
I9
VBooleanLiteral: true
p21253
tp21254
I1
s(g4939
I42
g4940
Vinsert
p21255
I12
VCatchClause
p21256
tp21257
I1
s(g13596
I42
g13597
Vinsert
p21258
I42
VSimpleName: Class
p21259
tp21260
I1
s(g1477
I42
g1478
Vinsert
p21261
I83
VModifier: public
p21262
tp21263
I1
s(g12046
I42
g12047
Vinsert
p21264
I37
VPostfixExpression: ++
p21265
tp21266
I1
s(g861
I42
g862
Vinsert
p21267
I83
VModifier: public
p21268
tp21269
I3
s(g11877
I42
g11878
Vinsert
p21270
I74
VParameterizedType: Iterator<String>
p21271
tp21272
I1
s(g7282
I42
g7283
Vinsert
p21273
I43
VSimpleType: String
p21274
tp21275
I3
s(g6854
I42
g6855
Vinsert
p21276
I40
VQualifiedName: java.util.SortedSet
p21277
tp21278
I1
s(g3812
I42
g3813
Vinsert
p21279
I60
VVariableDeclarationStatement
p21280
tp21281
I4
s(g7166
I42
g7167
Vinsert
p21282
I45
VStringLiteral: "Zero interactions expected"
p21283
tp21284
I1
s(g204
I42
g205
Vinsert
p21285
I42
VSimpleName: hacker
p21286
tp21287
I1
s(g4168
I42
g4169
Vinsert
p21288
I42
VSimpleName: FIELD_INSN
p21289
tp21290
I1
s(g2575
I42
g2576
Vinsert
p21291
I42
VSimpleName: TreeSet
p21292
tp21293
I1
s(g1914
I42
g1915
Vinsert
p21294
I42
VSimpleName: pureMockitoAPIClasses
p21295
tp21296
I1
s(g10651
I42
g10652
Vinsert
p21297
I21
VExpressionStatement
p21298
tp21299
I2
s(g13694
I42
g13695
Vinsert
p21300
I42
VSimpleName: filter
p21301
tp21302
I1
s(g7248
I42
g7249
Vinsert
p21303
I60
VVariableDeclarationStatement
p21304
tp21305
I1
s(g4745
I42
g4746
Vinsert
p21306
I42
VSimpleName: registerAnnotationProcessor
p21307
tp21308
I1
s(g19009
I42
g19010
Vinsert
p21309
I42
VSimpleName: outerName
p21310
tp21311
I1
s(g5100
I42
g5101
Vinsert
p21312
I34
VNumberLiteral: 0
p21313
tp21314
I1
s(g7096
I42
g7097
Vinsert
p21315
I43
VSimpleType: DelegatingMethod
p21316
tp21317
I3
s(g4784
I42
g4785
Vinsert
p21318
I42
VSimpleName: serializeMock
p21319
tp21320
I1
s(g13079
I42
g13080
Vinsert
p21321
I66
VTextElement:  <code>0</code>.
p21322
tp21323
I1
s(g9390
I42
g9391
Vinsert
p21324
I40
VQualifiedName: org.mockito.plugins.AnnotationEngine
p21325
tp21326
I1
s(g16579
I42
g16580
Vinsert
p21327
I14
VClassInstanceCreation
p21328
tp21329
I1
s(Vinsert
p21330
I42
VSimpleName: verify
p21331
Vinsert
p21332
I34
VNumberLiteral: 4
p21333
tp21334
I1
s(g13186
I42
g13187
Vinsert
p21335
I14
VClassInstanceCreation
p21336
tp21337
I1
s(g15947
I42
g15948
Vinsert
p21338
I21
VExpressionStatement
p21339
tp21340
I11
s(g588
I42
g589
Vinsert
p21341
I42
VSimpleName: Test
p21342
tp21343
I1
s(g6854
I42
g6855
Vinsert
p21344
I43
VSimpleType: MockUtil
p21345
tp21346
I2
s(g13705
I42
g13706
Vinsert
p21347
I14
VClassInstanceCreation
p21348
tp21349
I3
s(g9354
I42
g9355
Vinsert
p21350
I42
VSimpleName: generator
p21351
tp21352
I2
s(g12606
I42
g12607
Vinsert
p21353
I32
VMethodInvocation
p21354
tp21355
I1
s(g10794
I42
g10795
Vinsert
p21356
I42
VSimpleName: firstSimilar
p21357
tp21358
I2
s(g1282
I42
g1283
Vinsert
p21359
I78
VMarkerAnnotation
p21360
tp21361
I2
s(g17240
I42
g17241
Vinsert
p21362
I42
VSimpleName: stub
p21363
tp21364
I1
s(g3977
I42
g3978
Vinsert
p21365
I43
VSimpleType: IMethods
p21366
tp21367
I1
s(g5439
I42
g5440
Vinsert
p21368
I43
VSimpleType: Pattern
p21369
tp21370
I2
s(g17182
I42
g17183
Vinsert
p21371
I42
VSimpleName: mockSettings
p21372
tp21373
I1
s(g2444
I42
g2445
Vinsert
p21374
I42
VSimpleName: method
p21375
tp21376
I2
s(g6379
I42
g6380
Vinsert
p21377
I21
VExpressionStatement
p21378
tp21379
I1
s(g16
I42
g17
Vinsert
p21380
I45
VStringLiteral: "--local"
p21381
tp21382
I1
s(g2921
I42
g2922
Vinsert
p21383
I27
VInfixExpression: +
p21384
tp21385
I1
s(g8647
I42
g8648
Vinsert
p21386
I83
VModifier: public
p21387
tp21388
I1
s(g2054
I42
g2055
Vinsert
p21389
I44
VSingleVariableDeclaration
p21390
tp21391
I1
s(g199
I42
g200
Vinsert
p21392
I31
VMethodDeclaration
p21393
tp21394
I1
s(Vinsert
p21395
I42
VSimpleName: getClass
p21396
Vinsert
p21397
I5
VArrayType: Field[]
p21398
tp21399
I1
s(g3390
I42
g3391
Vinsert
p21400
I42
VSimpleName: get
p21401
tp21402
I1
s(g2095
I42
g2096
Vinsert
p21403
I42
VSimpleName: injected
p21404
tp21405
I1
s(g3851
I42
g3852
Vinsert
p21406
I14
VClassInstanceCreation
p21407
tp21408
I1
s(g3369
I42
g3370
Vinsert
p21409
I42
VSimpleName: nextStrategy
p21410
tp21411
I2
s(g5916
I42
g5917
Vinsert
p21412
I21
VExpressionStatement
p21413
tp21414
I2
s(g10324
I42
g10325
Vinsert
p21415
I42
VSimpleName: stubbings
p21416
tp21417
I1
s(g7931
I42
g7932
Vinsert
p21418
I42
VSimpleName: toBeThrown
p21419
tp21420
I1
s(g3369
I42
g3370
Vinsert
p21421
I33
VNullLiteral
p21422
tp21423
I1
s(g14366
I42
g14367
Vinsert
p21424
I42
VSimpleName: set
p21425
tp21426
I1
s(g4800
I42
g4801
Vinsert
p21427
I59
VVariableDeclarationFragment
p21428
tp21429
I1
s(g12444
I42
g12445
Vinsert
p21430
I57
VTypeLiteral
p21431
tp21432
I2
s(g1688
I42
g1689
Vinsert
p21433
I42
VSimpleName: mockitoStubber
p21434
tp21435
I1
s(g16979
I42
g16980
Vinsert
p21436
I21
VExpressionStatement
p21437
tp21438
I3
s(g4393
I42
g4394
Vinsert
p21439
I32
VMethodInvocation
p21440
tp21441
I16
s(g1675
I42
g1676
Vinsert
p21442
I43
VSimpleType: Collection
p21443
tp21444
I1
s(g19510
I42
g19511
Vinsert
p21445
I39
VPrimitiveType: void
p21446
tp21447
I1
s(g4163
I42
g4164
Vinsert
p21448
I34
VNumberLiteral: 0
p21449
tp21450
I2
s(g6024
I42
g6025
Vinsert
p21451
I42
VSimpleName: clz
p21452
tp21453
I1
s(g1347
I42
g1348
Vinsert
p21454
I43
VSimpleType: Object
p21455
tp21456
I5
s(g6260
I42
g6261
Vinsert
p21457
I42
VSimpleName: assertNull
p21458
tp21459
I1
s(g11738
I42
g11739
Vinsert
p21460
I42
VSimpleName: shouldUseSmartEqualsForPrimitiveArrays
p21461
tp21462
I1
s(g20357
I42
g20358
Vinsert
p21463
I42
VSimpleName: should_throw_mockito_assertion_error
p21464
tp21465
I1
s(g385
I42
g386
Vinsert
p21466
I45
VStringLiteral: " #{}"
p21467
tp21468
I1
s(g134
I42
g135
Vinsert
p21469
I42
VSimpleName: insn
p21470
tp21471
I1
s(g12777
I42
g12778
Vinsert
p21472
I32
VMethodInvocation
p21473
tp21474
I2
s(g12226
I42
g12227
Vinsert
p21475
I70
VEnhancedForStatement
p21476
tp21477
I11
s(g2743
I42
g2744
Vinsert
p21478
I59
VVariableDeclarationFragment
p21479
tp21480
I1
s(g2626
I42
g2627
Vinsert
p21481
I42
VSimpleName: reset
p21482
tp21483
I2
s(g2266
I42
g2267
Vinsert
p21484
I8
VBlock
p21485
tp21486
I1
s(g5123
I42
g5124
Vinsert
p21487
I21
VExpressionStatement
p21488
tp21489
I1
s(g3560
I42
g3561
Vinsert
p21490
I42
VSimpleName: withMocks
p21491
tp21492
I1
s(g1655
I42
g1656
Vinsert
p21493
I42
VSimpleName: isCompareToMethod
p21494
tp21495
I1
s(Vinsert
p21496
I42
VSimpleName: getMessage
p21497
Vinsert
p21498
I42
VSimpleName: UnsupportedOperationException
p21499
tp21500
I1
s(g5398
I42
g5399
Vinsert
p21501
I83
VModifier: public
p21502
tp21503
I1
s(g5393
I42
g5394
Vinsert
p21504
I11
VCastExpression
p21505
tp21506
I5
s(g2147
I42
g2148
Vinsert
p21507
I44
VSingleVariableDeclaration
p21508
tp21509
I2
s(g14014
I42
g14015
Vinsert
p21510
I42
VSimpleName: Location
p21511
tp21512
I2
s(g4425
I42
g4426
Vinsert
p21513
I42
VSimpleName: simpleMethod
p21514
tp21515
I1
s(g5105
I42
g5106
Vinsert
p21516
I21
VExpressionStatement
p21517
tp21518
I1
s(g3060
I42
g3061
Vinsert
p21519
I21
VExpressionStatement
p21520
tp21521
I5
s(g11099
I42
g11100
Vinsert
p21522
I2
VArrayAccess
p21523
tp21524
I4
s(g1543
I42
g1544
Vinsert
p21525
I74
VParameterizedType: Class<? extends Throwable>
p21526
tp21527
I1
s(g4755
I42
g4756
Vinsert
p21528
I78
VMarkerAnnotation
p21529
tp21530
I1
s(g3468
I42
g3469
Vinsert
p21531
I14
VClassInstanceCreation
p21532
tp21533
I4
s(g9571
I42
g9572
Vinsert
p21534
I42
VSimpleName: strict
p21535
tp21536
I1
s(Vinsert
p21537
I42
VSimpleName: matches
p21538
Vinsert
p21539
I42
VSimpleName: elements
p21540
tp21541
I1
s(g8176
I42
g8177
Vinsert
p21542
I42
VSimpleName: listener
p21543
tp21544
I2
s(g10490
I42
g10491
Vinsert
p21545
I25
VIfStatement
p21546
tp21547
I2
s(g2682
I42
g2683
Vinsert
p21548
I42
VSimpleName: firstMatching
p21549
tp21550
I1
s(g956
I42
g957
Vinsert
p21551
I39
VPrimitiveType: void
p21552
tp21553
I1
s(g13596
I42
g13597
Vinsert
p21554
I42
VSimpleName: i
p21555
tp21556
I2
s(g6435
I42
g6436
Vinsert
p21557
I60
VVariableDeclarationStatement
p21558
tp21559
I3
s(g765
I42
g766
Vinsert
p21560
I8
VBlock
p21561
tp21562
I2
s(g2147
I42
g2148
Vinsert
p21563
I21
VExpressionStatement
p21564
tp21565
I2
s(g12737
I42
g12738
Vinsert
p21566
I42
VSimpleName: proxy
p21567
tp21568
I1
s(g262
I42
g263
Vinsert
p21569
I42
VSimpleName: Class
p21570
tp21571
I2
s(g1533
I42
g1534
Vinsert
p21572
I42
VSimpleName: logger
p21573
tp21574
I2
s(g19425
I42
g19426
Vinsert
p21575
I42
VSimpleName: collectionHasExactlyInOrder
p21576
tp21577
I1
s(g1482
I42
g1483
Vinsert
p21578
I42
VSimpleName: registeredInvocations
p21579
tp21580
I2
s(g367
I42
g368
Vinsert
p21581
I42
VSimpleName: invocation
p21582
tp21583
I2
s(g8459
I42
g8460
Vinsert
p21584
I42
VSimpleName: target
p21585
tp21586
I2
s(g4887
I42
g4888
Vinsert
p21587
I42
VSimpleName: toThrow
p21588
tp21589
I1
s(g926
I42
g927
Vinsert
p21590
I85
VDimension
p21591
tp21592
I6
s(g1129
I42
g1130
Vinsert
p21593
I21
VExpressionStatement
p21594
tp21595
I2
s(g7893
I42
g7894
Vinsert
p21596
I42
VSimpleName: call
p21597
tp21598
I1
s(g7057
I42
g7058
Vinsert
p21599
I42
VSimpleName: LinkedList
p21600
tp21601
I2
s(g16823
I42
g16824
Vinsert
p21602
I21
VExpressionStatement
p21603
tp21604
I2
s(g5869
I42
g5870
Vinsert
p21605
I27
VInfixExpression: ==
p21606
tp21607
I1
s(g2331
I42
g2332
Vinsert
p21608
I43
VSimpleType: After
p21609
tp21610
I1
s(g4646
I42
g4647
Vinsert
p21611
I43
VSimpleType: OngoingStubbingImpl
p21612
tp21613
I2
s(g4789
I42
g4790
Vinsert
p21614
I42
VSimpleName: misplacedArgumentMatcher
p21615
tp21616
I1
s(g234
I42
g235
Vinsert
p21617
I42
VSimpleName: MethodVisitor
p21618
tp21619
I1
s(g204
I42
g205
Vinsert
p21620
I32
VMethodInvocation
p21621
tp21622
I1
s(g1019
I42
g1020
Vinsert
p21623
I7
VAssignment: =
p21624
tp21625
I1
s(g11897
I42
g11898
Vinsert
p21626
I11
VCastExpression
p21627
tp21628
I2
s(g5378
I42
g5379
Vinsert
p21629
I43
VSimpleType: Description
p21630
tp21631
I1
s(g16513
I42
g16514
Vinsert
p21632
I14
VClassInstanceCreation
p21633
tp21634
I2
s(g770
I42
g771
Vinsert
p21635
I32
VMethodInvocation
p21636
tp21637
I27
s(g7366
I42
g7367
Vinsert
p21638
I42
VSimpleName: reportStrictOrderDiscrepancy
p21639
tp21640
I1
s(g5245
I42
g5246
Vinsert
p21641
I11
VCastExpression
p21642
tp21643
I1
s(g468
I42
g469
Vinsert
p21644
I61
VWhileStatement
p21645
tp21646
I1
s(g3473
I42
g3474
Vinsert
p21647
I60
VVariableDeclarationStatement
p21648
tp21649
I2
s(g831
I42
g832
Vinsert
p21650
I43
VSimpleType: Invocation
p21651
tp21652
I1
s(g11691
I42
g11692
Vinsert
p21653
I42
VSimpleName: OtherClass
p21654
tp21655
I1
s(g6082
I42
g6083
Vinsert
p21656
I42
VSimpleName: shouldDetectUnfinishedStubbing
p21657
tp21658
I1
s(g2170
I42
g2171
Vinsert
p21659
I42
VSimpleName: String
p21660
tp21661
I1
s(g4168
I42
g4169
Vinsert
p21662
I32
VMethodInvocation
p21663
tp21664
I1
s(g18607
I42
g18608
Vinsert
p21665
I42
VSimpleName: aClass
p21666
tp21667
I1
s(g17574
I42
g17575
Vinsert
p21668
I16
VConditionalExpression
p21669
tp21670
I1
s(g6763
I42
g6764
Vinsert
p21671
I42
VSimpleName: second
p21672
tp21673
I1
s(g1599
I42
g1600
Vinsert
p21674
I21
VExpressionStatement
p21675
tp21676
I1
s(g2978
I42
g2979
Vinsert
p21677
I42
VSimpleName: config
p21678
tp21679
I2
s(Vinsert
p21680
I42
VSimpleName: equals
p21681
Vinsert
p21682
I42
VSimpleName: mock
p21683
tp21684
I3
s(g14303
I42
g14304
Vinsert
p21685
I43
VSimpleType: LinkedList
p21686
tp21687
I1
s(g2503
I42
g2504
Vinsert
p21688
I60
VVariableDeclarationStatement
p21689
tp21690
I1
s(Vinsert
p21691
I42
VSimpleName: arraycopy
p21692
Vinsert
p21693
I43
VSimpleType: Object
p21694
tp21695
I1
s(g896
I42
g897
Vinsert
p21696
I60
VVariableDeclarationStatement
p21697
tp21698
I2
s(g20934
I42
g20935
Vinsert
p21699
I14
VClassInstanceCreation
p21700
tp21701
I8
s(g10081
I42
g10082
Vinsert
p21702
I14
VClassInstanceCreation
p21703
tp21704
I8
s(g2866
I42
g2867
Vinsert
p21705
I22
VFieldAccess
p21706
tp21707
I1
s(g8062
I42
g8063
Vinsert
p21708
I42
VSimpleName: make_local
p21709
tp21710
I1
s(g8921
I42
g8922
Vinsert
p21711
I42
VSimpleName: BaseMessage
p21712
tp21713
I1
s(g13161
I42
g13162
Vinsert
p21714
I44
VSingleVariableDeclaration
p21715
tp21716
I2
s(g921
I42
g922
Vinsert
p21717
I34
VNumberLiteral: 1
p21718
tp21719
I1
s(g13053
I42
g13054
Vinsert
p21720
I27
VInfixExpression: !=
p21721
tp21722
I1
s(g2908
I42
g2909
Vinsert
p21723
I59
VVariableDeclarationFragment
p21724
tp21725
I1
s(g1209
I42
g1210
Vinsert
p21726
I41
VReturnStatement
p21727
tp21728
I3
s(g13798
I42
g13799
Vinsert
p21729
I14
VClassInstanceCreation
p21730
tp21731
I2
s(g1482
I42
g1483
Vinsert
p21732
I42
VSimpleName: RegisteredInvocations
p21733
tp21734
I1
s(g9271
I42
g9272
Vinsert
p21735
I43
VSimpleType: VerificationStartedNotifier.Event
p21736
tp21737
I2
s(g8528
I42
g8529
Vinsert
p21738
I27
VInfixExpression: !=
p21739
tp21740
I5
s(g648
I42
g649
Vinsert
p21741
I42
VSimpleName: mockCalculator
p21742
tp21743
I1
s(g3714
I42
g3715
Vinsert
p21744
I21
VExpressionStatement
p21745
tp21746
I6
s(g16053
I42
g16054
Vinsert
p21747
I74
VParameterizedType: Answer<?>
p21748
tp21749
I3
s(g1219
I42
g1220
Vinsert
p21750
I27
VInfixExpression: ==
p21751
tp21752
I4
s(g17574
I42
g17575
Vinsert
p21753
I42
VSimpleName: add
p21754
tp21755
I1
s(g8011
I42
g8012
Vinsert
p21756
I42
VSimpleName: logger
p21757
tp21758
I1
s(g7143
I42
g7144
Vinsert
p21759
I43
VSimpleType: Exception
p21760
tp21761
I1
s(g16093
I42
g16094
Vinsert
p21762
I43
VSimpleType: MockitoCore
p21763
tp21764
I1
s(Vinsert
p21765
I42
VSimpleName: mock
p21766
Vinsert
p21767
I42
VSimpleName: shouldStubAndLetBeCalledAnyTimes
p21768
tp21769
I1
s(g7495
I42
g7496
Vinsert
p21770
I42
VSimpleName: message
p21771
tp21772
I1
s(g1750
I42
g1751
Vinsert
p21773
I42
VSimpleName: Location
p21774
tp21775
I2
s(g9614
I42
g9615
Vinsert
p21776
I42
VSimpleName: VerificationModeFactory
p21777
tp21778
I11
s(g3331
I42
g3332
Vinsert
p21779
I14
VClassInstanceCreation
p21780
tp21781
I1
s(Vinsert
p21782
I42
VSimpleName: asList
p21783
Vinsert
p21784
I5
VArrayType: Integer[]
p21785
tp21786
I1
s(g1431
I42
g1432
Vinsert
p21787
I42
VSimpleName: StackTraceElement
p21788
tp21789
I1
s(g4492
I42
g4493
Vinsert
p21790
I43
VSimpleType: Throwable
p21791
tp21792
I1
s(g19510
I42
g19511
Vinsert
p21793
I43
VSimpleType: String
p21794
tp21795
I1
s(g6642
I42
g6643
Vinsert
p21796
I74
VParameterizedType: Class<?>
p21797
tp21798
I1
s(g11844
I42
g11845
Vinsert
p21799
I42
VSimpleName: j
p21800
tp21801
I1
s(g3488
I42
g3489
Vinsert
p21802
I42
VSimpleName: Throwable
p21803
tp21804
I3
s(g2682
I42
g2683
Vinsert
p21805
I42
VSimpleName: chunkSizeMatches
p21806
tp21807
I1
s(g2642
I42
g2643
Vinsert
p21808
I8
VBlock
p21809
tp21810
I7
s(g14746
I42
g14747
Vinsert
p21811
I42
VSimpleName: SuppressWarnings
p21812
tp21813
I1
s(g15379
I42
g15380
Vinsert
p21814
I43
VSimpleType: Exception
p21815
tp21816
I3
s(Vinsert
p21817
I42
VSimpleName: getLastInvocation
p21818
Vinsert
p21819
I14
VClassInstanceCreation
p21820
tp21821
I1
s(Vinsert
p21822
I42
VSimpleName: simpleMethod
p21823
Vinsert
p21824
I42
VSimpleName: shouldLogUnusedStubbingWarningWhenTestFails
p21825
tp21826
I1
s(g11961
I42
g11962
Vinsert
p21827
I42
VSimpleName: getMockName
p21828
tp21829
I1
s(g7836
I42
g7837
Vinsert
p21830
I43
VSimpleType: Builder
p21831
tp21832
I1
s(g15351
I42
g15352
Vinsert
p21833
I43
VSimpleType: Exception
p21834
tp21835
I1
s(g3101
I42
g3102
Vinsert
p21836
I8
VBlock
p21837
tp21838
I2
s(g3083
I42
g3084
Vinsert
p21839
I8
VBlock
p21840
tp21841
I2
s(g1886
I42
g1887
Vinsert
p21842
I21
VExpressionStatement
p21843
tp21844
I2
s(g342
I42
g343
Vinsert
p21845
I14
VClassInstanceCreation
p21846
tp21847
I2
s(g17478
I42
g17479
Vinsert
p21848
I42
VSimpleName: process
p21849
tp21850
I2
s(g20866
I42
g20867
Vinsert
p21851
I43
VSimpleType: Closeable
p21852
tp21853
I2
s(g9374
I42
g9375
Vinsert
p21854
I42
VSimpleName: getStreet
p21855
tp21856
I1
s(g12890
I42
g12891
Vinsert
p21857
I59
VVariableDeclarationFragment
p21858
tp21859
I1
s(g8388
I42
g8389
Vinsert
p21860
I42
VSimpleName: toString
p21861
tp21862
I1
s(g4611
I42
g4612
Vinsert
p21863
I43
VSimpleType: String
p21864
tp21865
I1
s(g19793
I42
g19794
Vinsert
p21866
I42
VSimpleName: codeSourceUrls
p21867
tp21868
I1
s(g4523
I42
g4524
Vinsert
p21869
I25
VIfStatement
p21870
tp21871
I1
s(g4934
I42
g4935
Vinsert
p21872
I43
VSimpleType: String
p21873
tp21874
I1
s(g5216
I42
g5217
Vinsert
p21875
I42
VSimpleName: actual
p21876
tp21877
I1
s(g2316
I42
g2317
Vinsert
p21878
I42
VSimpleName: booleanThatIs
p21879
tp21880
I1
s(g16818
I42
g16819
Vinsert
p21881
I45
VStringLiteral: "But found: DerivedInterface.print(BaseMessage)"
p21882
tp21883
I1
s(g608
I42
g609
Vinsert
p21884
I43
VSimpleType: IllegalArgumentException
p21885
tp21886
I1
s(g174
I42
g175
Vinsert
p21887
I42
VSimpleName: mock
p21888
tp21889
I2
s(g628
I42
g629
Vinsert
p21890
I43
VSimpleType: DefaultMockitoConfiguration
p21891
tp21892
I2
s(g7371
I42
g7372
Vinsert
p21893
I45
VStringLiteral: "bard"
p21894
tp21895
I1
s(g578
I42
g579
Vinsert
p21896
I32
VMethodInvocation
p21897
tp21898
I2
s(g3178
I42
g3179
Vinsert
p21899
I42
VSimpleName: expected
p21900
tp21901
I1
s(g385
I42
g386
Vinsert
p21902
I42
VSimpleName: LOG
p21903
tp21904
I1
s(g1815
I42
g1816
Vinsert
p21905
I83
VModifier: protected
p21906
tp21907
I1
s(g16291
I42
g16292
Vinsert
p21908
I55
VTypeDeclaration
p21909
tp21910
I1
s(g5609
I42
g5610
Vinsert
p21911
I41
VReturnStatement
p21912
tp21913
I4
s(g2031
I42
g2032
Vinsert
p21914
I42
VSimpleName: name
p21915
tp21916
I2
s(g11667
I42
g11668
Vinsert
p21917
I43
VSimpleType: ExecutionException
p21918
tp21919
I1
s(g3106
I42
g3107
Vinsert
p21920
I42
VSimpleName: Invocation
p21921
tp21922
I1
s(g5744
I42
g5745
Vinsert
p21923
I41
VReturnStatement
p21924
tp21925
I4
s(g2000
I42
g2001
Vinsert
p21926
I39
VPrimitiveType: boolean
p21927
tp21928
I1
s(g16744
I42
g16745
Vinsert
p21929
I42
VSimpleName: newInstance
p21930
tp21931
I4
s(g3735
I42
g3736
Vinsert
p21932
I42
VSimpleName: ByteBuddyMockMaker
p21933
tp21934
I1
s(g8604
I42
g8605
Vinsert
p21935
I42
VSimpleName: values
p21936
tp21937
I1
s(g6446
I42
g6447
Vinsert
p21938
I3
VArrayCreation
p21939
tp21940
I1
s(g1805
I42
g1806
Vinsert
p21941
I42
VSimpleName: getFirstUndesiredInvocationStackTrace
p21942
tp21943
I1
s(g15747
I42
g15748
Vinsert
p21944
I42
VSimpleName: junitTestBody
p21945
tp21946
I2
s(g31
I42
g32
Vinsert
p21947
I42
VSimpleName: simpleMethod
p21948
tp21949
I2
s(g1914
I42
g1915
Vinsert
p21950
I45
VStringLiteral: "junit"
p21951
tp21952
I1
s(g9434
I42
g9435
Vinsert
p21953
I45
VStringLiteral: "protectedInherited"
p21954
tp21955
I1
s(g20213
I42
g20214
Vinsert
p21956
I43
VSimpleType: Collection
p21957
tp21958
I3
s(g5256
I42
g5257
Vinsert
p21959
I41
VReturnStatement
p21960
tp21961
I2
s(g15424
I42
g15425
Vinsert
p21962
I27
VInfixExpression: >
p21963
tp21964
I2
s(g4585
I42
g4586
Vinsert
p21965
I59
VVariableDeclarationFragment
p21966
tp21967
I2
s(g3570
I42
g3571
Vinsert
p21968
I57
VTypeLiteral
p21969
tp21970
I1
s(g3326
I42
g3327
Vinsert
p21971
I39
VPrimitiveType: void
p21972
tp21973
I3
s(g8642
I42
g8643
Vinsert
p21974
I43
VSimpleType: Object
p21975
tp21976
I1
s(Vinsert
p21977
I42
VSimpleName: getLastInvocation
p21978
Vinsert
p21979
I42
VSimpleName: Date
p21980
tp21981
I3
s(Vinsert
p21982
I42
VSimpleName: perform
p21983
Vinsert
p21984
I42
VSimpleName: rollback
p21985
tp21986
I2
s(g13897
I42
g13898
Vinsert
p21987
I42
VSimpleName: Set
p21988
tp21989
I1
s(g8329
I42
g8330
Vinsert
p21990
I42
VSimpleName: Exception
p21991
tp21992
I1
s(g1642
I42
g1643
Vinsert
p21993
I44
VSingleVariableDeclaration
p21994
tp21995
I1
s(g3165
I42
g3166
Vinsert
p21996
I8
VBlock
p21997
tp21998
I5
s(g15478
I42
g15479
Vinsert
p21999
I32
VMethodInvocation
p22000
tp22001
I8
s(g5196
I42
g5197
Vinsert
p22002
I21
VExpressionStatement
p22003
tp22004
I3
s(g4087
I42
g4088
Vinsert
p22005
I66
VTextElement: .</p>
p22006
tp22007
I1
s(g3116
I42
g3117
Vinsert
p22008
I60
VVariableDeclarationStatement
p22009
tp22010
I1
s(g7371
I42
g7372
Vinsert
p22011
I5
VArrayType: Object[]
p22012
tp22013
I1
s(g3560
I42
g3561
Vinsert
p22014
I45
VStringLiteral: "withConstructor"
p22015
tp22016
I1
s(g6098
I42
g6099
Vinsert
p22017
I59
VVariableDeclarationFragment
p22018
tp22019
I1
s(g6350
I42
g6351
Vinsert
p22020
I42
VSimpleName: countArticles
p22021
tp22022
I1
s(g1696
I42
g1697
Vinsert
p22023
I43
VSimpleType: WeakKey
p22024
tp22025
I1
s(g11370
I42
g11371
Vinsert
p22026
I42
VSimpleName: GlobalConfiguration
p22027
tp22028
I1
s(g7893
I42
g7894
Vinsert
p22029
I42
VSimpleName: get
p22030
tp22031
I1
s(g6973
I42
g6974
Vinsert
p22032
I45
VStringLiteral: "Too little invocations:"
p22033
tp22034
I1
s(g6233
I42
g6234
Vinsert
p22035
I83
VModifier: public
p22036
tp22037
I1
s(g8401
I42
g8402
Vinsert
p22038
I42
VSimpleName: Test
p22039
tp22040
I3
s(g3777
I42
g3778
Vinsert
p22041
I42
VSimpleName: MockCreationSettings
p22042
tp22043
I1
s(g901
I42
g902
Vinsert
p22044
I83
VModifier: private
p22045
tp22046
I1
s(g7329
I42
g7330
Vinsert
p22047
I43
VSimpleType: Object
p22048
tp22049
I2
s(g10319
I42
g10320
Vinsert
p22050
I14
VClassInstanceCreation
p22051
tp22052
I1
s(g3743
I42
g3744
Vinsert
p22053
I32
VMethodInvocation
p22054
tp22055
I1
s(g10507
I42
g10508
Vinsert
p22056
I42
VSimpleName: Object
p22057
tp22058
I1
s(g2344
I42
g2345
Vinsert
p22059
I21
VExpressionStatement
p22060
tp22061
I2
s(g3797
I42
g3798
Vinsert
p22062
I31
VMethodDeclaration
p22063
tp22064
I3
s(g7966
I42
g7967
Vinsert
p22065
I60
VVariableDeclarationStatement
p22066
tp22067
I1
s(g11177
I42
g11178
Vinsert
p22068
I8
VBlock
p22069
tp22070
I4
s(g4446
I42
g4447
Vinsert
p22071
I8
VBlock
p22072
tp22073
I5
s(g4719
I42
g4720
Vinsert
p22074
I83
VModifier: public
p22075
tp22076
I1
s(g262
I42
g263
Vinsert
p22077
I74
VParameterizedType: Class<?>
p22078
tp22079
I1
s(g6898
I42
g6899
Vinsert
p22080
I43
VSimpleType: MockitoException
p22081
tp22082
I1
s(g7408
I42
g7409
Vinsert
p22083
I32
VMethodInvocation
p22084
tp22085
I6
s(Vinsert
p22086
I42
VSimpleName: getClass
p22087
Vinsert
p22088
I42
VSimpleName: spy
p22089
tp22090
I2
s(g8926
I42
g8927
Vinsert
p22091
I42
VSimpleName: names
p22092
tp22093
I1
s(g14003
I42
g14004
Vinsert
p22094
I42
VSimpleName: verify
p22095
tp22096
I23
s(g5544
I42
g5545
Vinsert
p22097
I43
VSimpleType: Class
p22098
tp22099
I4
s(g19383
I42
g19384
Vinsert
p22100
I42
VSimpleName: Argument
p22101
tp22102
I2
s(g2485
I42
g2486
Vinsert
p22103
I43
VSimpleType: Invocation
p22104
tp22105
I1
s(g129
I42
g130
Vinsert
p22106
I8
VBlock
p22107
tp22108
I1
s(g1011
I42
g1012
Vinsert
p22109
I42
VSimpleName: reportDiscrepancy
p22110
tp22111
I1
s(g14412
I42
g14413
Vinsert
p22112
I21
VExpressionStatement
p22113
tp22114
I2
s(g11678
I42
g11679
Vinsert
p22115
I52
VThisExpression
p22116
tp22117
I8
s(g13153
I42
g13154
Vinsert
p22118
I26
VImportDeclaration
p22119
tp22120
I2
s(g7638
I42
g7639
Vinsert
p22121
I42
VSimpleName: mockingProgress
p22122
tp22123
I1
s(g2237
I42
g2238
Vinsert
p22124
I42
VSimpleName: mock
p22125
tp22126
I1
s(g4492
I42
g4493
Vinsert
p22127
I42
VSimpleName: method
p22128
tp22129
I2
s(g11519
I42
g11520
Vinsert
p22130
I42
VSimpleName: run
p22131
tp22132
I1
s(g1825
I42
g1826
Vinsert
p22133
I43
VSimpleType: BasicValue
p22134
tp22135
I1
s(Vinsert
p22136
I42
VSimpleName: filter
p22137
Vinsert
p22138
I8
VBlock
p22139
tp22140
I10
s(g10507
I42
g10508
Vinsert
p22141
I14
VClassInstanceCreation
p22142
tp22143
I1
s(g941
I42
g942
Vinsert
p22144
I32
VMethodInvocation
p22145
tp22146
I1
s(g10393
I42
g10394
Vinsert
p22147
I42
VSimpleName: shouldFilterStackTraceOnVerifyNoMoreInteractions
p22148
tp22149
I1
s(g10572
I42
g10573
Vinsert
p22150
I44
VSingleVariableDeclaration
p22151
tp22152
I1
s(g16592
I42
g16593
Vinsert
p22153
I14
VClassInstanceCreation
p22154
tp22155
I4
s(Vinsert
p22156
I42
VSimpleName: instance
p22157
Vinsert
p22158
I42
VSimpleName: longThat
p22159
tp22160
I1
s(g9016
I42
g9017
Vinsert
p22161
I43
VSimpleType: String
p22162
tp22163
I1
s(g2844
I42
g2845
Vinsert
p22164
I43
VSimpleType: ArgumentMatchingTool
p22165
tp22166
I1
s(g1838
I42
g1839
Vinsert
p22167
I70
VEnhancedForStatement
p22168
tp22169
I1
s(g2296
I42
g2297
Vinsert
p22170
I60
VVariableDeclarationStatement
p22171
tp22172
I2
s(g8205
I42
g8206
Vinsert
p22173
I5
VArrayType: Object[]
p22174
tp22175
I3
s(g941
I42
g942
Vinsert
p22176
I42
VSimpleName: SerializableMode
p22177
tp22178
I1
s(g5744
I42
g5745
Vinsert
p22179
I31
VMethodDeclaration
p22180
tp22181
I6
s(g1578
I42
g1579
Vinsert
p22182
I7
VAssignment: =
p22183
tp22184
I1
s(g204
I42
g205
Vinsert
p22185
I42
VSimpleName: failure
p22186
tp22187
I1
s(g10234
I42
g10235
Vinsert
p22188
I44
VSingleVariableDeclaration
p22189
tp22190
I6
s(g9520
I42
g9521
Vinsert
p22191
I14
VClassInstanceCreation
p22192
tp22193
I2
s(Vinsert
p22194
I42
VSimpleName: when
p22195
Vinsert
p22196
I43
VSimpleType: ClassForMocking
p22197
tp22198
I4
s(g3473
I42
g3474
Vinsert
p22199
I32
VMethodInvocation
p22200
tp22201
I2
s(g7564
I42
g7565
Vinsert
p22202
I42
VSimpleName: Test
p22203
tp22204
I1
s(g19217
I42
g19218
Vinsert
p22205
I32
VMethodInvocation
p22206
tp22207
I183
s(g2261
I42
g2262
Vinsert
p22208
I42
VSimpleName: mock
p22209
tp22210
I2
s(g2611
I42
g2612
Vinsert
p22211
I42
VSimpleName: mv
p22212
tp22213
I2
s(g5393
I42
g5394
Vinsert
p22214
I7
VAssignment: =
p22215
tp22216
I3
s(g1292
I42
g1293
Vinsert
p22217
I42
VSimpleName: second
p22218
tp22219
I2
s(Vinsert
p22220
I42
VSimpleName: add
p22221
Vinsert
p22222
I34
VNumberLiteral: 4
p22223
tp22224
I1
s(g6502
I42
g6503
Vinsert
p22225
I42
VSimpleName: Exception
p22226
tp22227
I2
s(g16154
I42
g16155
Vinsert
p22228
I32
VMethodInvocation
p22229
tp22230
I20
s(g4848
I42
g4849
Vinsert
p22231
I43
VSimpleType: ParentTest
p22232
tp22233
I1
s(g2147
I42
g2148
Vinsert
p22234
I32
VMethodInvocation
p22235
tp22236
I2
s(g4688
I42
g4689
Vinsert
p22237
I21
VExpressionStatement
p22238
tp22239
I2
s(g8642
I42
g8643
Vinsert
p22240
I42
VSimpleName: Invocation
p22241
tp22242
I1
s(g9520
I42
g9521
Vinsert
p22243
I40
VQualifiedName: org.mockito.internal.util.MockUtil
p22244
tp22245
I2
s(g4098
I42
g4099
Vinsert
p22246
I11
VCastExpression
p22247
tp22248
I1
s(g5282
I42
g5283
Vinsert
p22249
I43
VSimpleType: Invocation
p22250
tp22251
I1
s(g1503
I42
g1504
Vinsert
p22252
I42
VSimpleName: testAborted
p22253
tp22254
I1
s(g19074
I42
g19075
Vinsert
p22255
I42
VSimpleName: size
p22256
tp22257
I1
s(g1518
I42
g1519
Vinsert
p22258
I43
VSimpleType: Member
p22259
tp22260
I3
s(g13596
I42
g13597
Vinsert
p22261
I42
VSimpleName: targetBaseInterface
p22262
tp22263
I1
s(g1863
I42
g1864
Vinsert
p22264
I42
VSimpleName: String
p22265
tp22266
I1
s(g10507
I42
g10508
Vinsert
p22267
I42
VSimpleName: Foo
p22268
tp22269
I1
s(g4059
I42
g4060
Vinsert
p22270
I45
VStringLiteral: "  Required type: "
p22271
tp22272
I1
s(g11172
I42
g11173
Vinsert
p22273
I73
VTypeParameter
p22274
tp22275
I1
s(g12046
I42
g12047
Vinsert
p22276
I25
VIfStatement
p22277
tp22278
I1
s(g4646
I42
g4647
Vinsert
p22279
I42
VSimpleName: getLastInvocation
p22280
tp22281
I1
s(g20230
I42
g20231
Vinsert
p22282
I32
VMethodInvocation
p22283
tp22284
I14
s(g453
I42
g454
Vinsert
p22285
I78
VMarkerAnnotation
p22286
tp22287
I1
s(g4372
I42
g4373
Vinsert
p22288
I44
VSingleVariableDeclaration
p22289
tp22290
I2
s(g2541
I42
g2542
Vinsert
p22291
I42
VSimpleName: FindingsListener
p22292
tp22293
I1
s(g12955
I42
g12956
Vinsert
p22294
I42
VSimpleName: e
p22295
tp22296
I1
s(g3060
I42
g3061
Vinsert
p22297
I42
VSimpleName: ConsoleMockitoLogger
p22298
tp22299
I1
s(g302
I42
g303
Vinsert
p22300
I42
VSimpleName: fields
p22301
tp22302
I3
s(g3797
I42
g3798
Vinsert
p22303
I42
VSimpleName: cleanStackTrace
p22304
tp22305
I1
s(g8329
I42
g8330
Vinsert
p22306
I60
VVariableDeclarationStatement
p22307
tp22308
I1
s(g5012
I42
g5013
Vinsert
p22309
I25
VIfStatement
p22310
tp22311
I1
s(g1352
I42
g1353
Vinsert
p22312
I21
VExpressionStatement
p22313
tp22314
I3
s(g2413
I42
g2414
Vinsert
p22315
I42
VSimpleName: Invocation
p22316
tp22317
I2
s(g1274
I42
g1275
Vinsert
p22318
I42
VSimpleName: returned
p22319
tp22320
I1
s(g1372
I42
g1373
Vinsert
p22321
I31
VMethodDeclaration
p22322
tp22323
I8
s(g6334
I42
g6335
Vinsert
p22324
I59
VVariableDeclarationFragment
p22325
tp22326
I1
s(g4929
I42
g4930
Vinsert
p22327
I33
VNullLiteral
p22328
tp22329
I1
s(g9100
I42
g9101
Vinsert
p22330
I42
VSimpleName: UnsupportedOperationException
p22331
tp22332
I1
s(g7292
I42
g7293
Vinsert
p22333
I70
VEnhancedForStatement
p22334
tp22335
I1
s(g1307
I42
g1308
Vinsert
p22336
I42
VSimpleName: MockitoConfiguration
p22337
tp22338
I2
s(g2170
I42
g2171
Vinsert
p22339
I25
VIfStatement
p22340
tp22341
I1
s(g390
I42
g391
Vinsert
p22342
I42
VSimpleName: ARRAY
p22343
tp22344
I1
s(g3527
I42
g3528
Vinsert
p22345
I32
VMethodInvocation
p22346
tp22347
I1
s(g6736
I42
g6737
Vinsert
p22348
I60
VVariableDeclarationStatement
p22349
tp22350
I1
s(g6148
I42
g6149
Vinsert
p22351
I42
VSimpleName: Exception
p22352
tp22353
I1
s(g16760
I42
g16761
Vinsert
p22354
I14
VClassInstanceCreation
p22355
tp22356
I1
s(g12370
I42
g12371
Vinsert
p22357
I41
VReturnStatement
p22358
tp22359
I1
s(g6820
I42
g6821
Vinsert
p22360
I42
VSimpleName: getRegisteredInvocations
p22361
tp22362
I1
s(g438
I42
g439
Vinsert
p22363
I32
VMethodInvocation
p22364
tp22365
I5
s(g13304
I42
g13305
Vinsert
p22366
I42
VSimpleName: shouldNotAllowNullExceptionType
p22367
tp22368
I1
s(g16154
I42
g16155
Vinsert
p22369
I57
VTypeLiteral
p22370
tp22371
I2
s(g1568
I42
g1569
Vinsert
p22372
I42
VSimpleName: e
p22373
tp22374
I1
s(g16454
I42
g16455
Vinsert
p22375
I78
VMarkerAnnotation
p22376
tp22377
I7
s(g4887
I42
g4888
Vinsert
p22378
I42
VSimpleName: clear
p22379
tp22380
I1
s(g13596
I42
g13597
Vinsert
p22381
I59
VVariableDeclarationFragment
p22382
tp22383
I1
s(g12304
I42
g12305
Vinsert
p22384
I42
VSimpleName: LinkedList
p22385
tp22386
I2
s(g6143
I42
g6144
Vinsert
p22387
I60
VVariableDeclarationStatement
p22388
tp22389
I1
s(g12804
I42
g12805
Vinsert
p22390
I40
VQualifiedName: org.junit.Assume
p22391
tp22392
I1
s(g5335
I42
g5336
Vinsert
p22393
I57
VTypeLiteral
p22394
tp22395
I1
s(g94
I42
g95
Vinsert
p22396
I42
VSimpleName: Test
p22397
tp22398
I10
s(g9429
I42
g9430
Vinsert
p22399
I42
VSimpleName: Set
p22400
tp22401
I5
s(g5033
I42
g5034
Vinsert
p22402
I42
VSimpleName: matchers
p22403
tp22404
I2
s(g2733
I42
g2734
Vinsert
p22405
I74
VParameterizedType: MockHandler<T>
p22406
tp22407
I1
s(g8160
I42
g8161
Vinsert
p22408
I39
VPrimitiveType: void
p22409
tp22410
I1
s(g2139
I42
g2140
Vinsert
p22411
I43
VSimpleType: ClassForMocking
p22412
tp22413
I2
s(g16154
I42
g16155
Vinsert
p22414
I14
VClassInstanceCreation
p22415
tp22416
I2
s(g4827
I42
g4828
Vinsert
p22417
I45
VStringLiteral: "java.util.stream.Stream"
p22418
tp22419
I1
s(g41
I42
g42
Vinsert
p22420
I43
VSimpleType: Class
p22421
tp22422
I1
s(g6828
I42
g6829
Vinsert
p22423
I42
VSimpleName: numberOfFailures
p22424
tp22425
I1
s(g3060
I42
g3061
Vinsert
p22426
I7
VAssignment: =
p22427
tp22428
I2
s(g1342
I42
g1343
Vinsert
p22429
I42
VSimpleName: assertThat
p22430
tp22431
I1
s(g4657
I42
g4658
Vinsert
p22432
I8
VBlock
p22433
tp22434
I1
s(g1332
I42
g1333
Vinsert
p22435
I66
VTextElement: Example:
p22436
tp22437
I1
s(g4675
I42
g4676
Vinsert
p22438
I43
VSimpleType: LinkedList
p22439
tp22440
I1
s(g2227
I42
g2228
Vinsert
p22441
I43
VSimpleType: OngoingStubbing
p22442
tp22443
I1
s(g668
I42
g669
Vinsert
p22444
I31
VMethodDeclaration
p22445
tp22446
I4
s(g1462
I42
g1463
Vinsert
p22447
I27
VInfixExpression: <
p22448
tp22449
I1
s(g6561
I42
g6562
Vinsert
p22450
I42
VSimpleName: Fun
p22451
tp22452
I2
s(g16004
I42
g16005
Vinsert
p22453
I42
VSimpleName: ClassCastException
p22454
tp22455
I1
s(g18013
I42
g18014
Vinsert
p22456
I44
VSingleVariableDeclaration
p22457
tp22458
I2
s(g2036
I42
g2037
Vinsert
p22459
I45
VStringLiteral: "IMethods.twoArgumentMethod(3, 1000)"
p22460
tp22461
I1
s(g8250
I42
g8251
Vinsert
p22462
I42
VSimpleName: instructions
p22463
tp22464
I1
s(g653
I42
g654
Vinsert
p22465
I32
VMethodInvocation
p22466
tp22467
I6
s(g6143
I42
g6144
Vinsert
p22468
I59
VVariableDeclarationFragment
p22469
tp22470
I1
s(g9734
I42
g9735
Vinsert
p22471
I45
VStringLiteral: "'"
p22472
tp22473
I1
s(g5180
I42
g5181
Vinsert
p22474
I31
VMethodDeclaration
p22475
tp22476
I1
s(g3031
I42
g3032
Vinsert
p22477
I42
VSimpleName: startMocking
p22478
tp22479
I1
s(g4895
I42
g4896
Vinsert
p22480
I42
VSimpleName: Invocation
p22481
tp22482
I1
s(g5264
I42
g5265
Vinsert
p22483
I42
VSimpleName: shouldFailOnSecondMethodBecauseDifferentMethodExpected
p22484
tp22485
I1
s(g9821
I42
g9822
Vinsert
p22486
I42
VSimpleName: superName
p22487
tp22488
I1
s(g8414
I42
g8415
Vinsert
p22489
I21
VExpressionStatement
p22490
tp22491
I1
s(Vinsert
p22492
I42
VSimpleName: subList
p22493
Vinsert
p22494
I8
VBlock
p22495
tp22496
I1
s(Vinsert
p22497
I42
VSimpleName: getBarWithParams
p22498
Vinsert
p22499
I57
VTypeLiteral
p22500
tp22501
I1
s(Vinsert
p22502
I42
VSimpleName: get
p22503
Vinsert
p22504
I42
VSimpleName: MockitoAnnotations
p22505
tp22506
I1
s(g6056
I42
g6057
Vinsert
p22507
I43
VSimpleType: Exception
p22508
tp22509
I1
s(g11214
I42
g11215
Vinsert
p22510
I59
VVariableDeclarationFragment
p22511
tp22512
I3
s(g951
I42
g952
Vinsert
p22513
I42
VSimpleName: delegatedInstance
p22514
tp22515
I1
s(g2667
I42
g2668
Vinsert
p22516
I32
VMethodInvocation
p22517
tp22518
I3
s(g4911
I42
g4912
Vinsert
p22519
I41
VReturnStatement
p22520
tp22521
I1
s(g1169
I42
g1170
Vinsert
p22522
I12
VCatchClause
p22523
tp22524
I1
s(g6574
I42
g6575
Vinsert
p22525
I42
VSimpleName: reader
p22526
tp22527
I1
s(g3919
I42
g3920
Vinsert
p22528
I78
VMarkerAnnotation
p22529
tp22530
I1
s(g3585
I42
g3586
Vinsert
p22531
I42
VSimpleName: clazz
p22532
tp22533
I1
s(g10490
I42
g10491
Vinsert
p22534
I42
VSimpleName: verified
p22535
tp22536
I2
s(g12994
I42
g12995
Vinsert
p22537
I42
VSimpleName: data
p22538
tp22539
I2
s(g3303
I42
g3304
Vinsert
p22540
I42
VSimpleName: e
p22541
tp22542
I2
s(g17920
I42
g17921
Vinsert
p22543
I42
VSimpleName: reportMatcher
p22544
tp22545
I4
s(g11325
I42
g11326
Vinsert
p22546
I42
VSimpleName: other_mock_type
p22547
tp22548
I1
s(g831
I42
g832
Vinsert
p22549
I32
VMethodInvocation
p22550
tp22551
I2
s(g4059
I42
g4060
Vinsert
p22552
I42
VSimpleName: ValuePrinter
p22553
tp22554
I1
s(g1380
I42
g1381
Vinsert
p22555
I45
VStringLiteral: "In order to streamline debugging tests Mockito fails early in this scenario.\u005cn"
p22556
tp22557
I1
s(Vinsert
p22558
I42
VSimpleName: asList
p22559
Vinsert
p22560
I42
VSimpleName: trace
p22561
tp22562
I1
s(g16524
I42
g16525
Vinsert
p22563
I7
VAssignment: =
p22564
tp22565
I4
s(g5062
I42
g5063
Vinsert
p22566
I42
VSimpleName: toBeReturned
p22567
tp22568
I1
s(g13186
I42
g13187
Vinsert
p22569
I43
VSimpleType: FileHasher
p22570
tp22571
I2
s(g8808
I42
g8809
Vinsert
p22572
I40
VQualifiedName: Constants.ACC_PUBLIC
p22573
tp22574
I1
s(g2498
I42
g2499
Vinsert
p22575
I42
VSimpleName: description
p22576
tp22577
I1
s(g1838
I42
g1839
Vinsert
p22578
I59
VVariableDeclarationFragment
p22579
tp22580
I2
s(g4911
I42
g4912
Vinsert
p22581
I42
VSimpleName: target
p22582
tp22583
I1
s(g5133
I42
g5134
Vinsert
p22584
I44
VSingleVariableDeclaration
p22585
tp22586
I1
s(g826
I42
g827
Vinsert
p22587
I70
VEnhancedForStatement
p22588
tp22589
I3
s(g12354
I42
g12355
Vinsert
p22590
I41
VReturnStatement
p22591
tp22592
I1
s(g13916
I42
g13917
Vinsert
p22593
I43
VSimpleType: InvocationContainer
p22594
tp22595
I1
s(g6363
I42
g6364
Vinsert
p22596
I43
VSimpleType: StubbingListener
p22597
tp22598
I3
s(g2429
I42
g2430
Vinsert
p22599
I21
VExpressionStatement
p22600
tp22601
I4
s(g8383
I42
g8384
Vinsert
p22602
I42
VSimpleName: INSTANCE
p22603
tp22604
I2
s(g11141
I42
g11142
Vinsert
p22605
I14
VClassInstanceCreation
p22606
tp22607
I1
s(g10126
I42
g10127
Vinsert
p22608
I13
VCharacterLiteral: '1'
p22609
tp22610
I7
s(g3699
I42
g3700
Vinsert
p22611
I8
VBlock
p22612
tp22613
I1
s(g9576
I42
g9577
Vinsert
p22614
I43
VSimpleType: VerificationWithTimeout
p22615
tp22616
I1
s(Vinsert
p22617
I42
VSimpleName: get
p22618
Vinsert
p22619
I42
VSimpleName: props
p22620
tp22621
I1
s(g3704
I42
g3705
Vinsert
p22622
I42
VSimpleName: upperFirst
p22623
tp22624
I1
s(g16348
I42
g16349
Vinsert
p22625
I42
VSimpleName: List
p22626
tp22627
I2
s(g1179
I42
g1180
Vinsert
p22628
I42
VSimpleName: container
p22629
tp22630
I2
s(g3047
I42
g3048
Vinsert
p22631
I42
VSimpleName: PrintStream
p22632
tp22633
I1
s(g6138
I42
g6139
Vinsert
p22634
I42
VSimpleName: AbstractList
p22635
tp22636
I1
s(Vinsert
p22637
I42
VSimpleName: captureArgumentsFrom
p22638
Vinsert
p22639
I42
VSimpleName: ThreadSafeMockingProgress
p22640
tp22641
I1
s(g2804
I42
g2805
Vinsert
p22642
I42
VSimpleName: loggedInfo
p22643
tp22644
I2
s(g7208
I42
g7209
Vinsert
p22645
I42
VSimpleName: run
p22646
tp22647
I1
s(g633
I42
g634
Vinsert
p22648
I83
VModifier: public
p22649
tp22650
I1
s(g7390
I42
g7391
Vinsert
p22651
I33
VNullLiteral
p22652
tp22653
I1
s(g14566
I42
g14567
Vinsert
p22654
I83
VModifier: public
p22655
tp22656
I1
s(g3011
I42
g3012
Vinsert
p22657
I8
VBlock
p22658
tp22659
I1
s(g9571
I42
g9572
Vinsert
p22660
I42
VSimpleName: VerificationMode
p22661
tp22662
I2
s(g681
I42
g682
Vinsert
p22663
I43
VSimpleType: Class
p22664
tp22665
I1
s(g4059
I42
g4060
Vinsert
p22666
I45
VStringLiteral: "parameter which is not the same type as the original mock.\u005cn"
p22667
tp22668
I1
s(g10465
I42
g10466
Vinsert
p22669
I43
VSimpleType: Field
p22670
tp22671
I2
s(g357
I42
g358
Vinsert
p22672
I60
VVariableDeclarationStatement
p22673
tp22674
I1
s(g1503
I42
g1504
Vinsert
p22675
I42
VSimpleName: notifier
p22676
tp22677
I1
s(g4523
I42
g4524
Vinsert
p22678
I32
VMethodInvocation
p22679
tp22680
I3
s(g8401
I42
g8402
Vinsert
p22681
I42
VSimpleName: manipulating_invocations_is_safe
p22682
tp22683
I1
s(g3336
I42
g3337
Vinsert
p22684
I43
VSimpleType: MockitoInvocationHandler
p22685
tp22686
I1
s(g1431
I42
g1432
Vinsert
p22687
I43
VSimpleType: StackTraceElement
p22688
tp22689
I1
s(g5744
I42
g5745
Vinsert
p22690
I32
VMethodInvocation
p22691
tp22692
I6
s(g841
I42
g842
Vinsert
p22693
I8
VBlock
p22694
tp22695
I1
s(g2180
I42
g2181
Vinsert
p22696
I42
VSimpleName: dog
p22697
tp22698
I2
s(g3585
I42
g3586
Vinsert
p22699
I66
VTextElement:  A prepared set of mock
p22700
tp22701
I1
s(g19009
I42
g19010
Vinsert
p22702
I42
VSimpleName: icn
p22703
tp22704
I1
s(g9424
I42
g9425
Vinsert
p22705
I45
VStringLiteral: "org.mockito.internal.runners.MockitoJUnit45AndUpRunner"
p22706
tp22707
I1
s(g19252
I42
g19253
Vinsert
p22708
I43
VSimpleType: List
p22709
tp22710
I1
s(g2939
I42
g2940
Vinsert
p22711
I21
VExpressionStatement
p22712
tp22713
I1
s(g3782
I42
g3783
Vinsert
p22714
I52
VThisExpression
p22715
tp22716
I1
s(g2954
I42
g2955
Vinsert
p22717
I32
VMethodInvocation
p22718
tp22719
I5
s(g2983
I42
g2984
Vinsert
p22720
I42
VSimpleName: withSettings
p22721
tp22722
I1
s(g22637
I42
g22638
Vinsert
p22723
I42
VSimpleName: MockSettingsImpl
p22724
tp22725
I1
s(g2788
I42
g2789
Vinsert
p22726
I34
VNumberLiteral: 2
p22727
tp22728
I1
s(g16004
I42
g16005
Vinsert
p22729
I43
VSimpleType: ClassCastException
p22730
tp22731
I1
s(g2131
I42
g2132
Vinsert
p22732
I42
VSimpleName: Stubber
p22733
tp22734
I2
s(g9408
I42
g9409
Vinsert
p22735
I42
VSimpleName: enhancer
p22736
tp22737
I2
s(g8991
I42
g8992
Vinsert
p22738
I14
VClassInstanceCreation
p22739
tp22740
I6
s(g7337
I42
g7338
Vinsert
p22741
I42
VSimpleName: validateFor
p22742
tp22743
I1
s(g4555
I42
g4556
Vinsert
p22744
I34
VNumberLiteral: 0
p22745
tp22746
I2
s(g2871
I42
g2872
Vinsert
p22747
I27
VInfixExpression: &&
p22748
tp22749
I1
s(g9465
I42
g9466
Vinsert
p22750
I42
VSimpleName: expected
p22751
tp22752
I2
s(g2354
I42
g2355
Vinsert
p22753
I43
VSimpleType: HashSet
p22754
tp22755
I5
s(g2844
I42
g2845
Vinsert
p22756
I43
VSimpleType: Matcher
p22757
tp22758
I1
s(g6935
I42
g6936
Vinsert
p22759
I42
VSimpleName: useConstructor
p22760
tp22761
I1
s(g881
I42
g882
Vinsert
p22762
I42
VSimpleName: mock
p22763
tp22764
I1
s(g15804
I42
g15805
Vinsert
p22765
I42
VSimpleName: factory
p22766
tp22767
I1
s(g6695
I42
g6696
Vinsert
p22768
I43
VSimpleType: Cloneable
p22769
tp22770
I1
s(g13383
I42
g13384
Vinsert
p22771
I45
VStringLiteral: "two"
p22772
tp22773
I1
s(g9179
I42
g9180
Vinsert
p22774
I45
VStringLiteral: "junit.stuff"
p22775
tp22776
I1
s(g4929
I42
g4930
Vinsert
p22777
I8
VBlock
p22778
tp22779
I2
s(g9478
I42
g9479
Vinsert
p22780
I33
VNullLiteral
p22781
tp22782
I6
s(g5295
I42
g5296
Vinsert
p22783
I32
VMethodInvocation
p22784
tp22785
I4
s(g11538
I42
g11539
Vinsert
p22786
I32
VMethodInvocation
p22787
tp22788
I2
s(Vinsert
p22789
I42
VSimpleName: getMockHandler
p22790
Vinsert
p22791
I74
VParameterizedType: MockHandlerInterface<Object>
p22792
tp22793
I1
s(g11509
I42
g11510
Vinsert
p22794
I43
VSimpleType: InvocationBuilder
p22795
tp22796
I1
s(g4595
I42
g4596
Vinsert
p22797
I83
VModifier: static
p22798
tp22799
I1
s(Vinsert
p22800
I42
VSimpleName: getName
p22801
Vinsert
p22802
I42
VSimpleName: println
p22803
tp22804
I1
s(g1372
I42
g1373
Vinsert
p22805
I42
VSimpleName: put
p22806
tp22807
I1
s(g79
I42
g80
Vinsert
p22808
I21
VExpressionStatement
p22809
tp22810
I3
s(g15733
I42
g15734
Vinsert
p22811
I45
VStringLiteral: "has thrown: "
p22812
tp22813
I1
s(g13755
I42
g13756
Vinsert
p22814
I21
VExpressionStatement
p22815
tp22816
I1
s(g11423
I42
g11424
Vinsert
p22817
I45
VStringLiteral: "deprecation"
p22818
tp22819
I1
s(g5398
I42
g5399
Vinsert
p22820
I31
VMethodDeclaration
p22821
tp22822
I1
s(g742
I42
g743
Vinsert
p22823
I42
VSimpleName: Invocation
p22824
tp22825
I3
s(g15179
I42
g15180
Vinsert
p22826
I32
VMethodInvocation
p22827
tp22828
I6
s(g1523
I42
g1524
Vinsert
p22829
I83
VModifier: static
p22830
tp22831
I2
s(g681
I42
g682
Vinsert
p22832
I42
VSimpleName: ancillaryTypes
p22833
tp22834
I2
s(g6919
I42
g6920
Vinsert
p22835
I42
VSimpleName: e
p22836
tp22837
I4
s(g15053
I42
g15054
Vinsert
p22838
I8
VBlock
p22839
tp22840
I1
s(g3601
I42
g3602
Vinsert
p22841
I42
VSimpleName: someMethods
p22842
tp22843
I2
s(g558
I42
g559
Vinsert
p22844
I42
VSimpleName: DEFAULT_PLUGINS
p22845
tp22846
I2
s(g2626
I42
g2627
Vinsert
p22847
I31
VMethodDeclaration
p22848
tp22849
I2
s(g10015
I42
g10016
Vinsert
p22850
I32
VMethodInvocation
p22851
tp22852
I6
s(g6276
I42
g6277
Vinsert
p22853
I42
VSimpleName: MockitoException
p22854
tp22855
I2
s(g6828
I42
g6829
Vinsert
p22856
I42
VSimpleName: String
p22857
tp22858
I10
s(g287
I42
g288
Vinsert
p22859
I78
VMarkerAnnotation
p22860
tp22861
I1
s(g395
I42
g396
Vinsert
p22862
I43
VSimpleType: VerificationOverTimeImpl
p22863
tp22864
I2
s(g1770
I42
g1771
Vinsert
p22865
I41
VReturnStatement
p22866
tp22867
I1
s(g8746
I42
g8747
Vinsert
p22868
I78
VMarkerAnnotation
p22869
tp22870
I1
s(g6311
I42
g6312
Vinsert
p22871
I45
VStringLiteral: "x"
p22872
tp22873
I3
s(g4709
I42
g4710
Vinsert
p22874
I42
VSimpleName: verificationStartedListeners
p22875
tp22876
I2
s(g8862
I42
g8863
Vinsert
p22877
I59
VVariableDeclarationFragment
p22878
tp22879
I5
s(Vinsert
p22880
I42
VSimpleName: append
p22881
Vinsert
p22882
I42
VSimpleName: cst
p22883
tp22884
I2
s(g5636
I42
g5637
Vinsert
p22885
I42
VSimpleName: getInt
p22886
tp22887
I1
s(g12097
I42
g12098
Vinsert
p22888
I43
VSimpleType: NotAMockException
p22889
tp22890
I1
s(g11074
I42
g11075
Vinsert
p22891
I14
VClassInstanceCreation
p22892
tp22893
I1
s(g11353
I42
g11354
Vinsert
p22894
I43
VSimpleType: Equals
p22895
tp22896
I2
s(g5360
I42
g5361
Vinsert
p22897
I38
VPrefixExpression: !
p22898
tp22899
I1
s(g6233
I42
g6234
Vinsert
p22900
I43
VSimpleType: List
p22901
tp22902
I1
s(g2205
I42
g2206
Vinsert
p22903
I42
VSimpleName: contributions
p22904
tp22905
I1
s(g10242
I42
g10243
Vinsert
p22906
I43
VSimpleType: DaoB
p22907
tp22908
I1
s(g8553
I42
g8554
Vinsert
p22909
I78
VMarkerAnnotation
p22910
tp22911
I1
s(g4840
I42
g4841
Vinsert
p22912
I83
VModifier: public
p22913
tp22914
I1
s(g12726
I42
g12727
Vinsert
p22915
I39
VPrimitiveType: void
p22916
tp22917
I1
s(g3126
I42
g3127
Vinsert
p22918
I41
VReturnStatement
p22919
tp22920
I2
s(g5986
I42
g5987
Vinsert
p22921
I83
VModifier: public
p22922
tp22923
I1
s(g2390
I42
g2391
Vinsert
p22924
I42
VSimpleName: name
p22925
tp22926
I2
s(g3298
I42
g3299
Vinsert
p22927
I25
VIfStatement
p22928
tp22929
I1
s(g4638
I42
g4639
Vinsert
p22930
I59
VVariableDeclarationFragment
p22931
tp22932
I4
s(g1044
I42
g1045
Vinsert
p22933
I66
VTextElement: See examples in javadoc for 
p22934
tp22935
I1
s(Vinsert
p22936
I42
VSimpleName: getTypeToMock
p22937
Vinsert
p22938
I45
VStringLiteral: "Mockito cannot mock arrays: "
p22939
tp22940
I1
s(g3996
I42
g3997
Vinsert
p22941
I25
VIfStatement
p22942
tp22943
I1
s(g6890
I42
g6891
Vinsert
p22944
I42
VSimpleName: exceptions
p22945
tp22946
I1
s(g5017
I42
g5018
Vinsert
p22947
I42
VSimpleName: mockitoMethodProxy
p22948
tp22949
I1
s(g5245
I42
g5246
Vinsert
p22950
I43
VSimpleType: Error
p22951
tp22952
I3
s(g1357
I42
g1358
Vinsert
p22953
I42
VSimpleName: returnValueFor
p22954
tp22955
I1
s(g770
I42
g771
Vinsert
p22956
I42
VSimpleName: invocationTwo
p22957
tp22958
I2
s(g4466
I42
g4467
Vinsert
p22959
I21
VExpressionStatement
p22960
tp22961
I1
s(g7730
I42
g7731
Vinsert
p22962
I42
VSimpleName: i
p22963
tp22964
I2
s(g204
I42
g205
Vinsert
p22965
I40
VQualifiedName: Description.EMPTY
p22966
tp22967
I1
s(g3493
I42
g3494
Vinsert
p22968
I42
VSimpleName: e
p22969
tp22970
I1
s(g16240
I42
g16241
Vinsert
p22971
I8
VBlock
p22972
tp22973
I1
s(g5583
I42
g5584
Vinsert
p22974
I52
VThisExpression
p22975
tp22976
I1
s(g8677
I42
g8678
Vinsert
p22977
I8
VBlock
p22978
tp22979
I1
s(g4087
I42
g4088
Vinsert
p22980
I65
VTagElement: @return
p22981
tp22982
I1
s(g12890
I42
g12891
Vinsert
p22983
I43
VSimpleType: Captor
p22984
tp22985
I1
s(g8160
I42
g8161
Vinsert
p22986
I60
VVariableDeclarationStatement
p22987
tp22988
I1
s(g3565
I42
g3566
Vinsert
p22989
I74
VParameterizedType: Class<?>
p22990
tp22991
I1
s(g1049
I42
g1050
Vinsert
p22992
I45
VStringLiteral: "Bear in mind that you can still enjoy all features of the framework without using runners (they are completely optional).\u005cn"
p22993
tp22994
I1
s(g4446
I42
g4447
Vinsert
p22995
I21
VExpressionStatement
p22996
tp22997
I4
s(g1523
I42
g1524
Vinsert
p22998
I43
VSimpleType: ThreadSafeMockingProgress
p22999
tp23000
I2
s(g806
I42
g807
Vinsert
p23001
I85
VDimension
p23002
tp23003
I1
s(g164
I42
g165
Vinsert
p23004
I27
VInfixExpression: !=
p23005
tp23006
I1
s(g20652
I42
g20653
Vinsert
p23007
I34
VNumberLiteral: 10
p23008
tp23009
I1
s(g906
I42
g907
Vinsert
p23010
I42
VSimpleName: prettifyFailure
p23011
tp23012
I1
s(g11791
I42
g11792
Vinsert
p23013
I42
VSimpleName: firstBound
p23014
tp23015
I1
s(g10846
I42
g10847
Vinsert
p23016
I32
VMethodInvocation
p23017
tp23018
I2
s(g5512
I42
g5513
Vinsert
p23019
I42
VSimpleName: delayedExecution
p23020
tp23021
I2
s(g15804
I42
g15805
Vinsert
p23022
I33
VNullLiteral
p23023
tp23024
I1
s(g6815
I42
g6816
Vinsert
p23025
I42
VSimpleName: requires_finish_mocking
p23026
tp23027
I1
s(g11791
I42
g11792
Vinsert
p23028
I42
VSimpleName: lowerBounds
p23029
tp23030
I1
s(g4290
I42
g4291
Vinsert
p23031
I2
VArrayAccess
p23032
tp23033
I5
s(g10567
I42
g10568
Vinsert
p23034
I74
VParameterizedType: Class<T>
p23035
tp23036
I1
s(Vinsert
p23037
I42
VSimpleName: describeTo
p23038
Vinsert
p23039
I42
VSimpleName: matcher
p23040
tp23041
I2
s(g5939
I42
g5940
Vinsert
p23042
I42
VSimpleName: ctrOfInteractions
p23043
tp23044
I1
s(g3935
I42
g3936
Vinsert
p23045
I42
VSimpleName: getInstantiatorProvider
p23046
tp23047
I1
s(g5636
I42
g5637
Vinsert
p23048
I21
VExpressionStatement
p23049
tp23050
I1
s(Vinsert
p23051
I42
VSimpleName: expectThrowable
p23052
Vinsert
p23053
I83
VModifier: public
p23054
tp23055
I1
s(g3144
I42
g3145
Vinsert
p23056
I42
VSimpleName: String
p23057
tp23058
I1
s(g6877
I42
g6878
Vinsert
p23059
I42
VSimpleName: failedTestResults
p23060
tp23061
I2
s(g1204
I42
g1205
Vinsert
p23062
I42
VSimpleName: timer
p23063
tp23064
I1
s(g10346
I42
g10347
Vinsert
p23065
I43
VSimpleType: IMethods
p23066
tp23067
I1
s(g11336
I42
g11337
Vinsert
p23068
I8
VBlock
p23069
tp23070
I1
s(g8561
I42
g8562
Vinsert
p23071
I42
VSimpleName: invocation
p23072
tp23073
I2
s(g4456
I42
g4457
Vinsert
p23074
I42
VSimpleName: e
p23075
tp23076
I3
s(g3864
I42
g3865
Vinsert
p23077
I42
VSimpleName: String
p23078
tp23079
I5
s(g12427
I42
g12428
Vinsert
p23080
I27
VInfixExpression: &&
p23081
tp23082
I1
s(g1954
I42
g1955
Vinsert
p23083
I41
VReturnStatement
p23084
tp23085
I1
s(g4006
I42
g4007
Vinsert
p23086
I43
VSimpleType: ArrayList
p23087
tp23088
I2
s(g7337
I42
g7338
Vinsert
p23089
I38
VPrefixExpression: !
p23090
tp23091
I2
s(g8210
I42
g8211
Vinsert
p23092
I43
VSimpleType: FromParameterizedTypeMockitoGenericMetadata
p23093
tp23094
I1
s(g8647
I42
g8648
Vinsert
p23095
I8
VBlock
p23096
tp23097
I1
s(g1586
I42
g1587
Vinsert
p23098
I33
VNullLiteral
p23099
tp23100
I1
s(g2642
I42
g2643
Vinsert
p23101
I83
VModifier: public
p23102
tp23103
I5
s(Vinsert
p23104
I42
VSimpleName: getMessage
p23105
Vinsert
p23106
I42
VSimpleName: loadClass
p23107
tp23108
I2
s(g8803
I42
g8804
Vinsert
p23109
I42
VSimpleName: booleanThatIs
p23110
tp23111
I1
s(g7704
I42
g7705
Vinsert
p23112
I8
VBlock
p23113
tp23114
I9
s(g89
I42
g90
Vinsert
p23115
I14
VClassInstanceCreation
p23116
tp23117
I1
s(g21691
I42
g21692
Vinsert
p23118
I5
VArrayType: Object[]
p23119
tp23120
I1
s(g6008
I42
g6009
Vinsert
p23121
I32
VMethodInvocation
p23122
tp23123
I1
s(g568
I42
g569
Vinsert
p23124
I42
VSimpleName: thenTry
p23125
tp23126
I1
s(g6781
I42
g6782
Vinsert
p23127
I42
VSimpleName: differentMethodInvocation
p23128
tp23129
I1
s(g5201
I42
g5202
Vinsert
p23130
I7
VAssignment: =
p23131
tp23132
I1
s(g4968
I42
g4969
Vinsert
p23133
I43
VSimpleType: MockitoMethod
p23134
tp23135
I1
s(g5164
I42
g5165
Vinsert
p23136
I42
VSimpleName: Throwable
p23137
tp23138
I2
s(g12183
I42
g12184
Vinsert
p23139
I42
VSimpleName: methodProxy
p23140
tp23141
I2
s(g5133
I42
g5134
Vinsert
p23142
I40
VQualifiedName: Opcodes.F_FULL
p23143
tp23144
I1
s(Vinsert
p23145
I42
VSimpleName: thenReturn
p23146
Vinsert
p23147
I42
VSimpleName: anySetOf
p23148
tp23149
I1
s(g19405
I42
g19406
Vinsert
p23150
I45
VStringLiteral: "three again"
p23151
tp23152
I1
s(g1538
I42
g1539
Vinsert
p23153
I42
VSimpleName: testName
p23154
tp23155
I1
s(g342
I42
g343
Vinsert
p23156
I42
VSimpleName: PrintWriter
p23157
tp23158
I1
s(g6677
I42
g6678
Vinsert
p23159
I60
VVariableDeclarationStatement
p23160
tp23161
I1
s(g10015
I42
g10016
Vinsert
p23162
I42
VSimpleName: invocations
p23163
tp23164
I1
s(g2364
I42
g2365
Vinsert
p23165
I42
VSimpleName: Exception
p23166
tp23167
I1
s(g5300
I42
g5301
Vinsert
p23168
I43
VSimpleType: Class
p23169
tp23170
I2
s(g4335
I42
g4336
Vinsert
p23171
I42
VSimpleName: type
p23172
tp23173
I1
s(g7243
I42
g7244
Vinsert
p23174
I42
VSimpleName: strictMode
p23175
tp23176
I1
s(g10415
I42
g10416
Vinsert
p23177
I42
VSimpleName: mocks
p23178
tp23179
I2
s(g8082
I42
g8083
Vinsert
p23180
I32
VMethodInvocation
p23181
tp23182
I1
s(g1627
I42
g1628
Vinsert
p23183
I34
VNumberLiteral: 20
p23184
tp23185
I1
s(g8716
I42
g8717
Vinsert
p23186
I14
VClassInstanceCreation
p23187
tp23188
I1
s(g6321
I42
g6322
Vinsert
p23189
I34
VNumberLiteral: 0
p23190
tp23191
I1
s(g9234
I42
g9235
Vinsert
p23192
I40
VQualifiedName: classes.length
p23193
tp23194
I1
s(g1924
I42
g1925
Vinsert
p23195
I8
VBlock
p23196
tp23197
I1
s(g15351
I42
g15352
Vinsert
p23198
I21
VExpressionStatement
p23199
tp23200
I1
s(g16454
I42
g16455
Vinsert
p23201
I43
VSimpleType: Exception
p23202
tp23203
I5
s(g8353
I42
g8354
Vinsert
p23204
I42
VSimpleName: mock
p23205
tp23206
I13
s(g6476
I42
g6477
Vinsert
p23207
I43
VSimpleType: MockScanner
p23208
tp23209
I1
s(g16677
I42
g16678
Vinsert
p23210
I42
VSimpleName: when
p23211
tp23212
I1
s(g1403
I42
g1404
Vinsert
p23213
I21
VExpressionStatement
p23214
tp23215
I1
s(g7012
I42
g7013
Vinsert
p23216
I74
VParameterizedType: List<Type>
p23217
tp23218
I1
s(g7081
I42
g7082
Vinsert
p23219
I42
VSimpleName: createListenerWithMockedStream
p23220
tp23221
I1
s(g15841
I42
g15842
Vinsert
p23222
I42
VSimpleName: type
p23223
tp23224
I1
s(g3743
I42
g3744
Vinsert
p23225
I42
VSimpleName: wanted
p23226
tp23227
I1
s(g1254
I42
g1255
Vinsert
p23228
I7
VAssignment: =
p23229
tp23230
I1
s(g6943
I42
g6944
Vinsert
p23231
I42
VSimpleName: getArguments
p23232
tp23233
I1
s(g13950
I42
g13951
Vinsert
p23234
I31
VMethodDeclaration
p23235
tp23236
I1
s(g3585
I42
g3586
Vinsert
p23237
I42
VSimpleName: mockUtil
p23238
tp23239
I1
s(g9606
I42
g9607
Vinsert
p23240
I42
VSimpleName: List
p23241
tp23242
I2
s(g7806
I42
g7807
Vinsert
p23243
I42
VSimpleName: typesToRegister
p23244
tp23245
I1
s(g1209
I42
g1210
Vinsert
p23246
I40
VQualifiedName: org.mockito.internal.invocation.Invocation
p23247
tp23248
I1
s(g8696
I42
g8697
Vinsert
p23249
I14
VClassInstanceCreation
p23250
tp23251
I1
s(g5290
I42
g5291
Vinsert
p23252
I25
VIfStatement
p23253
tp23254
I1
s(g19113
I42
g19114
Vinsert
p23255
I42
VSimpleName: fieldInstance
p23256
tp23257
I2
s(Vinsert
p23258
I42
VSimpleName: toString
p23259
Vinsert
p23260
I42
VSimpleName: Override
p23261
tp23262
I2
s(g1462
I42
g1463
Vinsert
p23263
I42
VSimpleName: wantedCount
p23264
tp23265
I2
s(g1650
I42
g1651
Vinsert
p23266
I43
VSimpleType: Throwable
p23267
tp23268
I1
s(g89
I42
g90
Vinsert
p23269
I42
VSimpleName: toInvocation
p23270
tp23271
I1
s(g134
I42
g135
Vinsert
p23272
I7
VAssignment: =
p23273
tp23274
I1
s(g6
I42
g7
Vinsert
p23275
I8
VBlock
p23276
tp23277
I8
s(g14792
I42
g14793
Vinsert
p23278
I42
VSimpleName: u
p23279
tp23280
I2
s(g11691
I42
g11692
Vinsert
p23281
I42
VSimpleName: mock
p23282
tp23283
I1
s(Vinsert
p23284
I42
VSimpleName: extraInterfaces
p23285
Vinsert
p23286
I42
VSimpleName: Serializable
p23287
tp23288
I1
s(g3011
I42
g3012
Vinsert
p23289
I41
VReturnStatement
p23290
tp23291
I1
s(Vinsert
p23292
I42
VSimpleName: valueFor
p23293
Vinsert
p23294
I59
VVariableDeclarationFragment
p23295
tp23296
I7
s(g20772
I42
g20773
Vinsert
p23297
I42
VSimpleName: traceElements
p23298
tp23299
I1
s(g8275
I42
g8276
Vinsert
p23300
I42
VSimpleName: listOfInteger
p23301
tp23302
I1
s(g1184
I42
g1185
Vinsert
p23303
I29
VJavadoc
p23304
tp23305
I1
s(g5776
I42
g5777
Vinsert
p23306
I42
VSimpleName: shouldNotAllowTimeoutVerificationInOrderWrappingWithIncorrectClass
p23307
tp23308
I1
s(g22194
I42
g22195
Vinsert
p23309
I54
VTryStatement
p23310
tp23311
I3
s(g9601
I42
g9602
Vinsert
p23312
I43
VSimpleType: Class
p23313
tp23314
I1
s(g15804
I42
g15805
Vinsert
p23315
I43
VSimpleType: Throwable
p23316
tp23317
I1
s(g1059
I42
g1060
Vinsert
p23318
I43
VSimpleType: Invocation
p23319
tp23320
I3
s(g337
I42
g338
Vinsert
p23321
I21
VExpressionStatement
p23322
tp23323
I15
s(g2480
I42
g2481
Vinsert
p23324
I42
VSimpleName: when
p23325
tp23326
I1
s(g4991
I42
g4992
Vinsert
p23327
I42
VSimpleName: Exception
p23328
tp23329
I1
s(g2565
I42
g2566
Vinsert
p23330
I42
VSimpleName: differentMethodInvocation
p23331
tp23332
I1
s(g8729
I42
g8730
Vinsert
p23333
I43
VSimpleType: TestFinishedEvent
p23334
tp23335
I1
s(Vinsert
p23336
I42
VSimpleName: getMessage
p23337
Vinsert
p23338
I42
VSimpleName: MockitoAssertionError
p23339
tp23340
I3
s(g9967
I42
g9968
Vinsert
p23341
I43
VSimpleType: Description
p23342
tp23343
I6
s(g262
I42
g263
Vinsert
p23344
I62
VInstanceofExpression
p23345
tp23346
I2
s(g9053
I42
g9054
Vinsert
p23347
I31
VMethodDeclaration
p23348
tp23349
I5
s(g4111
I42
g4112
Vinsert
p23350
I43
VSimpleType: Object
p23351
tp23352
I1
s(g10234
I42
g10235
Vinsert
p23353
I43
VSimpleType: IllegalArgumentException
p23354
tp23355
I2
s(g2408
I42
g2409
Vinsert
p23356
I42
VSimpleName: StackTraceElement
p23357
tp23358
I1
s(g6574
I42
g6575
Vinsert
p23359
I42
VSimpleName: Foo
p23360
tp23361
I2
s(g1795
I42
g1796
Vinsert
p23362
I42
VSimpleName: run
p23363
tp23364
I1
s(g4755
I42
g4756
Vinsert
p23365
I42
VSimpleName: getPlugins
p23366
tp23367
I1
s(g4441
I42
g4442
Vinsert
p23368
I43
VSimpleType: Class
p23369
tp23370
I1
s(g5196
I42
g5197
Vinsert
p23371
I42
VSimpleName: List
p23372
tp23373
I1
s(g3807
I42
g3808
Vinsert
p23374
I83
VModifier: private
p23375
tp23376
I1
s(g3580
I42
g3581
Vinsert
p23377
I22
VFieldAccess
p23378
tp23379
I1
s(g5408
I42
g5409
Vinsert
p23380
I43
VSimpleType: SubclassLoader
p23381
tp23382
I1
s(g6446
I42
g6447
Vinsert
p23383
I32
VMethodInvocation
p23384
tp23385
I19
s(g10802
I42
g10803
Vinsert
p23386
I42
VSimpleName: InvocationMatcher
p23387
tp23388
I2
s(Vinsert
p23389
I42
VSimpleName: add
p23390
Vinsert
p23391
I42
VSimpleName: stub
p23392
tp23393
I1
s(g214
I42
g215
Vinsert
p23394
I42
VSimpleName: s1
p23395
tp23396
I1
s(g12737
I42
g12738
Vinsert
p23397
I42
VSimpleName: CallingSuperMethodClass
p23398
tp23399
I1
s(g9584
I42
g9585
Vinsert
p23400
I83
VModifier: private
p23401
tp23402
I1
s(g17045
I42
g17046
Vinsert
p23403
I42
VSimpleName: getJavaMethod
p23404
tp23405
I1
s(g23389
I42
g23390
Vinsert
p23406
I42
VSimpleName: shouldNotAllowSettingInvalidCheckedException
p23407
tp23408
I1
s(g2398
I42
g2399
Vinsert
p23409
I1
VAnonymousClassDeclaration
p23410
tp23411
I2
s(g20107
I42
g20108
Vinsert
p23412
I26
VImportDeclaration
p23413
tp23414
I4
s(g13218
I42
g13219
Vinsert
p23415
I42
VSimpleName: validator
p23416
tp23417
I2
s(g4043
I42
g4044
Vinsert
p23418
I42
VSimpleName: InOrder
p23419
tp23420
I1
s(g10368
I42
g10369
Vinsert
p23421
I42
VSimpleName: versions
p23422
tp23423
I2
s(g11699
I42
g11700
Vinsert
p23424
I43
VSimpleType: Invocation
p23425
tp23426
I2
s(g6339
I42
g6340
Vinsert
p23427
I8
VBlock
p23428
tp23429
I1
s(g3026
I42
g3027
Vinsert
p23430
I42
VSimpleName: InvocationInfo
p23431
tp23432
I4
s(g16449
I42
g16450
Vinsert
p23433
I43
VSimpleType: String
p23434
tp23435
I1
s(g2934
I42
g2935
Vinsert
p23436
I14
VClassInstanceCreation
p23437
tp23438
I2
s(g10354
I42
g10355
Vinsert
p23439
I42
VSimpleName: not
p23440
tp23441
I2
s(Vinsert
p23442
I42
VSimpleName: equals
p23443
Vinsert
p23444
I38
VPrefixExpression: ++
p23445
tp23446
I1
s(g1302
I42
g1303
Vinsert
p23447
I42
VSimpleName: LoggingListener
p23448
tp23449
I2
s(g6846
I42
g6847
Vinsert
p23450
I42
VSimpleName: ce
p23451
tp23452
I2
s(Vinsert
p23453
I42
VSimpleName: mock
p23454
Vinsert
p23455
I42
VSimpleName: inherit_public_method_from_interface
p23456
tp23457
I1
s(g12231
I42
g12232
Vinsert
p23458
I32
VMethodInvocation
p23459
tp23460
I17
s(g7992
I42
g7993
Vinsert
p23461
I42
VSimpleName: runner
p23462
tp23463
I1
s(g7200
I42
g7201
Vinsert
p23464
I83
VModifier: static
p23465
tp23466
I1
s(g2770
I42
g2771
Vinsert
p23467
I34
VNumberLiteral: 0
p23468
tp23469
I1
s(g8329
I42
g8330
Vinsert
p23470
I21
VExpressionStatement
p23471
tp23472
I1
s(g881
I42
g882
Vinsert
p23473
I60
VVariableDeclarationStatement
p23474
tp23475
I1
s(g3341
I42
g3342
Vinsert
p23476
I42
VSimpleName: invocation
p23477
tp23478
I1
s(g15053
I42
g15054
Vinsert
p23479
I42
VSimpleName: Throwable
p23480
tp23481
I1
s(g12267
I42
g12268
Vinsert
p23482
I42
VSimpleName: ACCESS_FIELD
p23483
tp23484
I1
s(g11336
I42
g11337
Vinsert
p23485
I42
VSimpleName: i
p23486
tp23487
I3
s(g508
I42
g509
Vinsert
p23488
I45
VStringLiteral: "--local"
p23489
tp23490
I1
s(g1462
I42
g1463
Vinsert
p23491
I42
VSimpleName: actualCount
p23492
tp23493
I1
s(g8798
I42
g8799
Vinsert
p23494
I45
VStringLiteral: "mock.differentMethod();"
p23495
tp23496
I1
s(g4510
I42
g4511
Vinsert
p23497
I39
VPrimitiveType: void
p23498
tp23499
I1
s(g15179
I42
g15180
Vinsert
p23500
I42
VSimpleName: linkedListReturningMethod
p23501
tp23502
I1
s(g4900
I42
g4901
Vinsert
p23503
I42
VSimpleName: getWarnings
p23504
tp23505
I1
s(g513
I42
g514
Vinsert
p23506
I43
VSimpleType: T
p23507
tp23508
I2
s(g633
I42
g634
Vinsert
p23509
I42
VSimpleName: unstubbedInvocation
p23510
tp23511
I1
s(g881
I42
g882
Vinsert
p23512
I43
VSimpleType: String
p23513
tp23514
I1
s(g2871
I42
g2872
Vinsert
p23515
I42
VSimpleName: String
p23516
tp23517
I2
s(g22637
I42
g22638
Vinsert
p23518
I42
VSimpleName: MatchersBinder
p23519
tp23520
I1
s(g1105
I42
g1106
Vinsert
p23521
I14
VClassInstanceCreation
p23522
tp23523
I2
s(g1189
I42
g1190
Vinsert
p23524
I42
VSimpleName: argThat
p23525
tp23526
I1
s(g109
I42
g110
Vinsert
p23527
I57
VTypeLiteral
p23528
tp23529
I1
s(g69
I42
g70
Vinsert
p23530
I43
VSimpleType: Exception
p23531
tp23532
I1
s(g1307
I42
g1308
Vinsert
p23533
I32
VMethodInvocation
p23534
tp23535
I1
s(g7582
I42
g7583
Vinsert
p23536
I42
VSimpleName: wantedNumberOfInvocations
p23537
tp23538
I1
s(g2682
I42
g2683
Vinsert
p23539
I60
VVariableDeclarationStatement
p23540
tp23541
I1
s(g6
I42
g7
Vinsert
p23542
I32
VMethodInvocation
p23543
tp23544
I17
s(g4934
I42
g4935
Vinsert
p23545
I42
VSimpleName: visible
p23546
tp23547
I1
s(g6247
I42
g6248
Vinsert
p23548
I78
VMarkerAnnotation
p23549
tp23550
I1
s(g770
I42
g771
Vinsert
p23551
I43
VSimpleType: InvocationMatcher
p23552
tp23553
I1
s(g12726
I42
g12727
Vinsert
p23554
I42
VSimpleName: Test
p23555
tp23556
I1
s(g9789
I42
g9790
Vinsert
p23557
I45
VStringLiteral: "Misplaced argument matcher detected here"
p23558
tp23559
I1
s(g4153
I42
g4154
Vinsert
p23560
I43
VSimpleType: Class
p23561
tp23562
I1
s(g3664
I42
g3665
Vinsert
p23563
I54
VTryStatement
p23564
tp23565
I1
s(g21680
I42
g21681
Vinsert
p23566
I42
VSimpleName: other
p23567
tp23568
I1
s(Vinsert
p23569
I42
VSimpleName: isInstance
p23570
Vinsert
p23571
I40
VQualifiedName: params.length
p23572
tp23573
I1
s(g4518
I42
g4519
Vinsert
p23574
I42
VSimpleName: label
p23575
tp23576
I2
s(g10899
I42
g10900
Vinsert
p23577
I45
VStringLiteral: "Actual invocation in order:"
p23578
tp23579
I1
s(g3224
I42
g3225
Vinsert
p23580
I42
VSimpleName: InvocationMatcher
p23581
tp23582
I1
s(g6614
I42
g6615
Vinsert
p23583
I32
VMethodInvocation
p23584
tp23585
I1
s(g10572
I42
g10573
Vinsert
p23586
I73
VTypeParameter
p23587
tp23588
I1
s(g10415
I42
g10416
Vinsert
p23589
I70
VEnhancedForStatement
p23590
tp23591
I2
s(g262
I42
g263
Vinsert
p23592
I32
VMethodInvocation
p23593
tp23594
I5
s(g5321
I42
g5322
Vinsert
p23595
I59
VVariableDeclarationFragment
p23596
tp23597
I3
s(g6711
I42
g6712
Vinsert
p23598
I42
VSimpleName: GitTool
p23599
tp23600
I1
s(g8647
I42
g8648
Vinsert
p23601
I43
VSimpleType: ClassLoader
p23602
tp23603
I3
s(g4082
I42
g4083
Vinsert
p23604
I43
VSimpleType: Runnable
p23605
tp23606
I1
s(g10279
I42
g10280
Vinsert
p23607
I42
VSimpleName: reportInvocation
p23608
tp23609
I1
s(g5768
I42
g5769
Vinsert
p23610
I8
VBlock
p23611
tp23612
I1
s(g7030
I42
g7031
Vinsert
p23613
I21
VExpressionStatement
p23614
tp23615
I3
s(g21765
I42
g21766
Vinsert
p23616
I42
VSimpleName: DummyInterface
p23617
tp23618
I1
s(Vinsert
p23619
I42
VSimpleName: getMessage
p23620
Vinsert
p23621
I45
VStringLiteral: "IMethods.simpleMethod(999)"
p23622
tp23623
I2
s(g21982
I42
g21983
Vinsert
p23624
I42
VSimpleName: perform
p23625
tp23626
I2
s(g219
I42
g220
Vinsert
p23627
I42
VSimpleName: ArgumentMatcher
p23628
tp23629
I2
s(g2518
I42
g2519
Vinsert
p23630
I44
VSingleVariableDeclaration
p23631
tp23632
I1
s(g11961
I42
g11962
Vinsert
p23633
I44
VSingleVariableDeclaration
p23634
tp23635
I2
s(g17579
I42
g17580
Vinsert
p23636
I34
VNumberLiteral: 2
p23637
tp23638
I1
s(g7302
I42
g7303
Vinsert
p23639
I43
VSimpleType: MockitoSession
p23640
tp23641
I2
s(g2983
I42
g2984
Vinsert
p23642
I42
VSimpleName: map
p23643
tp23644
I1
s(g2959
I42
g2960
Vinsert
p23645
I59
VVariableDeclarationFragment
p23646
tp23647
I2
s(g2871
I42
g2872
Vinsert
p23648
I38
VPrefixExpression: !
p23649
tp23650
I1
s(g3817
I42
g3818
Vinsert
p23651
I42
VSimpleName: shouldAnyBeActualAliasToAnyObject
p23652
tp23653
I1
s(g16283
I42
g16284
Vinsert
p23654
I43
VSimpleType: CapturingMatcher
p23655
tp23656
I3
s(g1011
I42
g1012
Vinsert
p23657
I43
VSimpleType: ExpectedInvocation
p23658
tp23659
I1
s(g7587
I42
g7588
Vinsert
p23660
I83
VModifier: public
p23661
tp23662
I1
s(Vinsert
p23663
I42
VSimpleName: getMethod
p23664
Vinsert
p23665
I83
VModifier: public
p23666
tp23667
I2
s(g4776
I42
g4777
Vinsert
p23668
I42
VSimpleName: invocationWithMatchers
p23669
tp23670
I2
s(Vinsert
p23671
I42
VSimpleName: filterStackTrace
p23672
Vinsert
p23673
I7
VAssignment: =
p23674
tp23675
I2
s(g11749
I42
g11750
Vinsert
p23676
I43
VSimpleType: Object
p23677
tp23678
I1
s(g11066
I42
g11067
Vinsert
p23679
I85
VDimension
p23680
tp23681
I1
s(g5690
I42
g5691
Vinsert
p23682
I25
VIfStatement
p23683
tp23684
I1
s(g10341
I42
g10342
Vinsert
p23685
I42
VSimpleName: Throwable
p23686
tp23687
I1
s(g229
I42
g230
Vinsert
p23688
I42
VSimpleName: Mockito
p23689
tp23690
I1
s(g6326
I42
g6327
Vinsert
p23691
I42
VSimpleName: strict
p23692
tp23693
I1
s(g3400
I42
g3401
Vinsert
p23694
I42
VSimpleName: assertThat
p23695
tp23696
I1
s(g5810
I42
g5811
Vinsert
p23697
I42
VSimpleName: DummyClassForTests
p23698
tp23699
I2
s(g12769
I42
g12770
Vinsert
p23700
I42
VSimpleName: testClassInstance
p23701
tp23702
I2
s(g5591
I42
g5592
Vinsert
p23703
I48
VSuperMethodInvocation
p23704
tp23705
I3
s(g109
I42
g110
Vinsert
p23706
I55
VTypeDeclaration
p23707
tp23708
I1
s(g1967
I42
g1968
Vinsert
p23709
I42
VSimpleName: Object
p23710
tp23711
I1
s(g36
I42
g37
Vinsert
p23712
I39
VPrimitiveType: byte
p23713
tp23714
I1
s(g17771
I42
g17772
Vinsert
p23715
I78
VMarkerAnnotation
p23716
tp23717
I3
s(g1838
I42
g1839
Vinsert
p23718
I42
VSimpleName: listeners
p23719
tp23720
I1
s(g5690
I42
g5691
Vinsert
p23721
I42
VSimpleName: T
p23722
tp23723
I1
s(g7366
I42
g7367
Vinsert
p23724
I25
VIfStatement
p23725
tp23726
I1
s(Vinsert
p23727
I42
VSimpleName: when
p23728
Vinsert
p23729
I43
VSimpleType: T
p23730
tp23731
I2
s(g1513
I42
g1514
Vinsert
p23732
I43
VSimpleType: Collection
p23733
tp23734
I1
s(Vinsert
p23735
I42
VSimpleName: getMethod
p23736
Vinsert
p23737
I42
VSimpleName: m
p23738
tp23739
I1
s(g6
I42
g7
Vinsert
p23740
I42
VSimpleName: invocation
p23741
tp23742
I7
s(g11686
I42
g11687
Vinsert
p23743
I25
VIfStatement
p23744
tp23745
I1
s(g7714
I42
g7715
Vinsert
p23746
I42
VSimpleName: i
p23747
tp23748
I1
s(g3298
I42
g3299
Vinsert
p23749
I38
VPrefixExpression: !
p23750
tp23751
I1
s(Vinsert
p23752
I42
VSimpleName: startsWith
p23753
Vinsert
p23754
I42
VSimpleName: name
p23755
tp23756
I2
s(g1599
I42
g1600
Vinsert
p23757
I42
VSimpleName: values
p23758
tp23759
I1
s(g443
I42
g444
Vinsert
p23760
I32
VMethodInvocation
p23761
tp23762
I3
s(g806
I42
g807
Vinsert
p23763
I60
VVariableDeclarationStatement
p23764
tp23765
I1
s(g7076
I42
g7077
Vinsert
p23766
I42
VSimpleName: InvocationMatcher
p23767
tp23768
I1
s(g9504
I42
g9505
Vinsert
p23769
I53
VThrowStatement
p23770
tp23771
I1
s(g2718
I42
g2719
Vinsert
p23772
I8
VBlock
p23773
tp23774
I1
s(g8205
I42
g8206
Vinsert
p23775
I43
VSimpleType: Object
p23776
tp23777
I9
s(g154
I42
g155
Vinsert
p23778
I43
VSimpleType: Class
p23779
tp23780
I1
s(g4999
I42
g5000
Vinsert
p23781
I42
VSimpleName: types
p23782
tp23783
I1
s(g22637
I42
g22638
Vinsert
p23784
I42
VSimpleName: stubbedInvocation
p23785
tp23786
I1
s(g8488
I42
g8489
Vinsert
p23787
I45
VStringLiteral: "Mock for DummyClass, hashCode: "
p23788
tp23789
I1
s(g13905
I42
g13906
Vinsert
p23790
I44
VSingleVariableDeclaration
p23791
tp23792
I1
s(g16454
I42
g16455
Vinsert
p23793
I42
VSimpleName: clear
p23794
tp23795
I2
s(g4895
I42
g4896
Vinsert
p23796
I42
VSimpleName: v
p23797
tp23798
I2
s(g6815
I42
g6816
Vinsert
p23799
I42
VSimpleName: Test
p23800
tp23801
I1
s(g3016
I42
g3017
Vinsert
p23802
I7
VAssignment: =
p23803
tp23804
I2
s(g6124
I42
g6125
Vinsert
p23805
I43
VSimpleType: ConstructorInstantiator
p23806
tp23807
I4
s(g2934
I42
g2935
Vinsert
p23808
I1
VAnonymousClassDeclaration
p23809
tp23810
I1
s(g3488
I42
g3489
Vinsert
p23811
I39
VPrimitiveType: void
p23812
tp23813
I55
s(g15147
I42
g15148
Vinsert
p23814
I42
VSimpleName: asList
p23815
tp23816
I2
s(Vinsert
p23817
I42
VSimpleName: doSomething
p23818
Vinsert
p23819
I42
VSimpleName: doSomething
p23820
tp23821
I2
s(g8808
I42
g8809
Vinsert
p23822
I48
VSuperMethodInvocation
p23823
tp23824
I1
s(g3257
I42
g3258
Vinsert
p23825
I42
VSimpleName: GenericsNest
p23826
tp23827
I1
s(g2113
I42
g2114
Vinsert
p23828
I42
VSimpleName: atLeastOnceMode
p23829
tp23830
I1
s(g8875
I42
g8876
Vinsert
p23831
I43
VSimpleType: ArrayList
p23832
tp23833
I2
s(g13755
I42
g13756
Vinsert
p23834
I42
VSimpleName: return_value
p23835
tp23836
I1
s(g1548
I42
g1549
Vinsert
p23837
I45
VStringLiteral: "Java HotSpot(TM) 64-Bit Server VM"
p23838
tp23839
I1
s(Vinsert
p23840
I42
VSimpleName: doSomething
p23841
Vinsert
p23842
I42
VSimpleName: when
p23843
tp23844
I2
s(g5986
I42
g5987
Vinsert
p23845
I42
VSimpleName: target
p23846
tp23847
I1
s(Vinsert
p23848
I42
VSimpleName: getMethod
p23849
Vinsert
p23850
I54
VTryStatement
p23851
tp23852
I1
s(g415
I42
g416
Vinsert
p23853
I43
VSimpleType: T
p23854
tp23855
I1
s(g5216
I42
g5217
Vinsert
p23856
I43
VSimpleType: Type
p23857
tp23858
I1
s(g7297
I42
g7298
Vinsert
p23859
I42
VSimpleName: times
p23860
tp23861
I1
s(g7190
I42
g7191
Vinsert
p23862
I42
VSimpleName: HashSet
p23863
tp23864
I1
s(g5269
I42
g5270
Vinsert
p23865
I42
VSimpleName: callAsync
p23866
tp23867
I1
s(g2998
I42
g2999
Vinsert
p23868
I65
VTagElement: @param
p23869
tp23870
I1
s(g3116
I42
g3117
Vinsert
p23871
I42
VSimpleName: Exception
p23872
tp23873
I1
s(g2364
I42
g2365
Vinsert
p23874
I42
VSimpleName: After
p23875
tp23876
I1
s(g2601
I42
g2602
Vinsert
p23877
I14
VClassInstanceCreation
p23878
tp23879
I5
s(g4082
I42
g4083
Vinsert
p23880
I42
VSimpleName: assertTrue
p23881
tp23882
I2
s(g20085
I42
g20086
Vinsert
p23883
I45
VStringLiteral: "Unsupported version: '"
p23884
tp23885
I2
s(g10520
I42
g10521
Vinsert
p23886
I33
VNullLiteral
p23887
tp23888
I1
s(g15424
I42
g15425
Vinsert
p23889
I34
VNumberLiteral: 1
p23890
tp23891
I2
s(g778
I42
g779
Vinsert
p23892
I44
VSingleVariableDeclaration
p23893
tp23894
I1
s(g23442
I42
g23443
Vinsert
p23895
I27
VInfixExpression: <
p23896
tp23897
I1
s(g468
I42
g469
Vinsert
p23898
I42
VSimpleName: out
p23899
tp23900
I1
s(g2457
I42
g2458
Vinsert
p23901
I32
VMethodInvocation
p23902
tp23903
I1
s(g1234
I42
g1235
Vinsert
p23904
I27
VInfixExpression: +
p23905
tp23906
I2
s(g11370
I42
g11371
Vinsert
p23907
I21
VExpressionStatement
p23908
tp23909
I1
s(g681
I42
g682
Vinsert
p23910
I5
VArrayType: Class<?>[]
p23911
tp23912
I1
s(g11877
I42
g11878
Vinsert
p23913
I42
VSimpleName: captureFrom
p23914
tp23915
I1
s(g4204
I42
g4205
Vinsert
p23916
I42
VSimpleName: expected
p23917
tp23918
I2
s(g2408
I42
g2409
Vinsert
p23919
I5
VArrayType: StackTraceElement[]
p23920
tp23921
I1
s(g1901
I42
g1902
Vinsert
p23922
I32
VMethodInvocation
p23923
tp23924
I3
s(g1134
I42
g1135
Vinsert
p23925
I40
VQualifiedName: org.mockito.internal.util.Primitives
p23926
tp23927
I1
s(g9323
I42
g9324
Vinsert
p23928
I8
VBlock
p23929
tp23930
I1
s(g8965
I42
g8966
Vinsert
p23931
I42
VSimpleName: assertThat
p23932
tp23933
I2
s(g1426
I42
g1427
Vinsert
p23934
I42
VSimpleName: Logger
p23935
tp23936
I1
s(g2349
I42
g2350
Vinsert
p23937
I45
VStringLiteral: "verify_excludeMe_x"
p23938
tp23939
I1
s(g13936
I42
g13937
Vinsert
p23940
I42
VSimpleName: withCodeSourceUrlOf
p23941
tp23942
I1
s(g4199
I42
g4200
Vinsert
p23943
I45
VStringLiteral: "long"
p23944
tp23945
I1
s(g8604
I42
g8605
Vinsert
p23946
I36
VParenthesizedExpression
p23947
tp23948
I2
s(g322
I42
g323
Vinsert
p23949
I32
VMethodInvocation
p23950
tp23951
I2
s(g3354
I42
g3355
Vinsert
p23952
I42
VSimpleName: forClass
p23953
tp23954
I1
s(g12154
I42
g12155
Vinsert
p23955
I43
VSimpleType: HandyReturnValues
p23956
tp23957
I1
s(g4072
I42
g4073
Vinsert
p23958
I8
VBlock
p23959
tp23960
I1
s(g19469
I42
g19470
Vinsert
p23961
I42
VSimpleName: Class
p23962
tp23963
I1
s(g2616
I42
g2617
Vinsert
p23964
I8
VBlock
p23965
tp23966
I1
s(g7129
I42
g7130
Vinsert
p23967
I8
VBlock
p23968
tp23969
I1
s(g4051
I42
g4052
Vinsert
p23970
I8
VBlock
p23971
tp23972
I1
s(g12188
I42
g12189
Vinsert
p23973
I42
VSimpleName: listener
p23974
tp23975
I2
s(g5133
I42
g5134
Vinsert
p23976
I40
VQualifiedName: Opcodes.F_NEW
p23977
tp23978
I1
s(g16189
I42
g16190
Vinsert
p23979
I45
VStringLiteral: "qux"
p23980
tp23981
I1
s(g6148
I42
g6149
Vinsert
p23982
I43
VSimpleType: ClassEnhancedToParameterizedType
p23983
tp23984
I1
s(g3856
I42
g3857
Vinsert
p23985
I43
VSimpleType: Throwable
p23986
tp23987
I3
s(g6124
I42
g6125
Vinsert
p23988
I14
VClassInstanceCreation
p23989
tp23990
I5
s(g12922
I42
g12923
Vinsert
p23991
I43
VSimpleType: InvocationListener
p23992
tp23993
I1
s(g307
I42
g308
Vinsert
p23994
I59
VVariableDeclarationFragment
p23995
tp23996
I2
s(g10015
I42
g10016
Vinsert
p23997
I7
VAssignment: =
p23998
tp23999
I2
s(Vinsert
p24000
I42
VSimpleName: initMocks
p24001
Vinsert
p24002
I42
VSimpleName: Spy
p24003
tp24004
I2
s(g2170
I42
g2171
Vinsert
p24005
I43
VSimpleType: Object
p24006
tp24007
I1
s(g5426
I42
g5427
Vinsert
p24008
I43
VSimpleType: MockFeatures
p24009
tp24010
I1
s(g7817
I42
g7818
Vinsert
p24011
I43
VSimpleType: Exception
p24012
tp24013
I2
s(g21395
I42
g21396
Vinsert
p24014
I45
VStringLiteral: "testClass cannot be null. For info how to use @Mock annotations see examples in javadoc for MockitoAnnotations"
p24015
tp24016
I1
s(g5887
I42
g5888
Vinsert
p24017
I21
VExpressionStatement
p24018
tp24019
I2
s(g16524
I42
g16525
Vinsert
p24020
I52
VThisExpression
p24021
tp24022
I2
s(g23848
I42
g23849
Vinsert
p24023
I5
VArrayType: Class[]
p24024
tp24025
I1
s(g8288
I42
g8289
Vinsert
p24026
I42
VSimpleName: StringJoiner
p24027
tp24028
I2
s(g17384
I42
g17385
Vinsert
p24029
I42
VSimpleName: aT
p24030
tp24031
I1
s(g2480
I42
g2481
Vinsert
p24032
I42
VSimpleName: isEmpty
p24033
tp24034
I1
s(g1523
I42
g1524
Vinsert
p24035
I42
VSimpleName: validateMockitoUsage
p24036
tp24037
I1
s(g16240
I42
g16241
Vinsert
p24038
I27
VInfixExpression: &&
p24039
tp24040
I1
s(g8746
I42
g8747
Vinsert
p24041
I42
VSimpleName: Override
p24042
tp24043
I1
s(g1317
I42
g1318
Vinsert
p24044
I42
VSimpleName: valueFor
p24045
tp24046
I1
s(Vinsert
p24047
I42
VSimpleName: simpleMethod
p24048
Vinsert
p24049
I42
VSimpleName: stub
p24050
tp24051
I7
s(g1100
I42
g1101
Vinsert
p24052
I42
VSimpleName: anyString
p24053
tp24054
I2
s(g1642
I42
g1643
Vinsert
p24055
I41
VReturnStatement
p24056
tp24057
I1
s(Vinsert
p24058
I42
VSimpleName: getGenericType
p24059
Vinsert
p24060
I43
VSimpleType: String
p24061
tp24062
I1
s(g15379
I42
g15380
Vinsert
p24063
I42
VSimpleName: Exception
p24064
tp24065
I3
s(g2700
I42
g2701
Vinsert
p24066
I43
VSimpleType: Exception
p24067
tp24068
I1
s(g8082
I42
g8083
Vinsert
p24069
I42
VSimpleName: stubbing
p24070
tp24071
I1
s(g18591
I42
g18592
Vinsert
p24072
I42
VSimpleName: message
p24073
tp24074
I2
s(g876
I42
g877
Vinsert
p24075
I42
VSimpleName: finder
p24076
tp24077
I1
s(g9515
I42
g9516
Vinsert
p24078
I42
VSimpleName: arguments
p24079
tp24080
I1
s(g11572
I42
g11573
Vinsert
p24081
I42
VSimpleName: Method
p24082
tp24083
I1
s(g199
I42
g200
Vinsert
p24084
I43
VSimpleType: Callable
p24085
tp24086
I1
s(g3359
I42
g3360
Vinsert
p24087
I42
VSimpleName: SomeService
p24088
tp24089
I2
s(g19136
I42
g19137
Vinsert
p24090
I27
VInfixExpression: <
p24091
tp24092
I1
s(g5986
I42
g5987
Vinsert
p24093
I43
VSimpleType: VerificationData
p24094
tp24095
I1
s(g4590
I42
g4591
Vinsert
p24096
I42
VSimpleName: field
p24097
tp24098
I1
s(g12804
I42
g12805
Vinsert
p24099
I8
VBlock
p24100
tp24101
I1
s(g12561
I42
g12562
Vinsert
p24102
I60
VVariableDeclarationStatement
p24103
tp24104
I3
s(g14336
I42
g14337
Vinsert
p24105
I59
VVariableDeclarationFragment
p24106
tp24107
I2
s(Vinsert
p24108
I42
VSimpleName: getMock
p24109
Vinsert
p24110
I42
VSimpleName: container
p24111
tp24112
I1
s(g14420
I42
g14421
Vinsert
p24113
I60
VVariableDeclarationStatement
p24114
tp24115
I2
s(g10415
I42
g10416
Vinsert
p24116
I42
VSimpleName: Set
p24117
tp24118
I1
s(g7390
I42
g7391
Vinsert
p24119
I59
VVariableDeclarationFragment
p24120
tp24121
I1
s(g8566
I42
g8567
Vinsert
p24122
I54
VTryStatement
p24123
tp24124
I1
s(g2508
I42
g2509
Vinsert
p24125
I32
VMethodInvocation
p24126
tp24127
I1
s(g906
I42
g907
Vinsert
p24128
I32
VMethodInvocation
p24129
tp24130
I3
s(g5530
I42
g5531
Vinsert
p24131
I32
VMethodInvocation
p24132
tp24133
I2
s(g1939
I42
g1940
Vinsert
p24134
I85
VDimension
p24135
tp24136
I1
s(g6820
I42
g6821
Vinsert
p24137
I31
VMethodDeclaration
p24138
tp24139
I1
s(g1421
I42
g1422
Vinsert
p24140
I43
VSimpleType: DoesNothing
p24141
tp24142
I1
s(g573
I42
g574
Vinsert
p24143
I43
VSimpleType: MethodVisitor
p24144
tp24145
I1
s(g1416
I42
g1417
Vinsert
p24146
I60
VVariableDeclarationStatement
p24147
tp24148
I1
s(g1924
I42
g1925
Vinsert
p24149
I27
VInfixExpression: ==
p24150
tp24151
I1
s(g10175
I42
g10176
Vinsert
p24152
I42
VSimpleName: removeLineNo
p24153
tp24154
I1
s(g3242
I42
g3243
Vinsert
p24155
I39
VPrimitiveType: void
p24156
tp24157
I1
s(g5712
I42
g5713
Vinsert
p24158
I2
VArrayAccess
p24159
tp24160
I2
s(g15219
I42
g15220
Vinsert
p24161
I8
VBlock
p24162
tp24163
I1
s(g10794
I42
g10795
Vinsert
p24164
I33
VNullLiteral
p24165
tp24166
I1
s(g2518
I42
g2519
Vinsert
p24167
I42
VSimpleName: B
p24168
tp24169
I1
s(Vinsert
p24170
I42
VSimpleName: initMocks
p24171
Vinsert
p24172
I42
VSimpleName: target
p24173
tp24174
I3
s(g11572
I42
g11573
Vinsert
p24175
I83
VModifier: protected
p24176
tp24177
I1
s(g8319
I42
g8320
Vinsert
p24178
I60
VVariableDeclarationStatement
p24179
tp24180
I2
s(Vinsert
p24181
I42
VSimpleName: contains
p24182
Vinsert
p24183
I45
VStringLiteral: "should be inside of:"
p24184
tp24185
I1
s(g10992
I42
g10993
Vinsert
p24186
I21
VExpressionStatement
p24187
tp24188
I1
s(g9929
I42
g9930
Vinsert
p24189
I42
VSimpleName: translate
p24190
tp24191
I1
s(g18995
I42
g18996
Vinsert
p24192
I42
VSimpleName: TestBase
p24193
tp24194
I1
s(g1731
I42
g1732
Vinsert
p24195
I42
VSimpleName: Map
p24196
tp24197
I1
s(g2331
I42
g2332
Vinsert
p24198
I83
VModifier: static
p24199
tp24200
I1
s(g11314
I42
g11315
Vinsert
p24201
I43
VSimpleType: Objenesis
p24202
tp24203
I1
s(g15429
I42
g15430
Vinsert
p24204
I24
VForStatement
p24205
tp24206
I7
s(g1269
I42
g1270
Vinsert
p24207
I21
VExpressionStatement
p24208
tp24209
I1
s(g11897
I42
g11898
Vinsert
p24210
I43
VSimpleType: HasStackTrace
p24211
tp24212
I2
s(g4446
I42
g4447
Vinsert
p24213
I42
VSimpleName: constructor
p24214
tp24215
I2
s(g1129
I42
g1130
Vinsert
p24216
I42
VSimpleName: OngoingVerifyingMode
p24217
tp24218
I1
s(g9252
I42
g9253
Vinsert
p24219
I32
VMethodInvocation
p24220
tp24221
I1
s(g3421
I42
g3422
Vinsert
p24222
I65
VTagElement
p24223
tp24224
I1
s(g15719
I42
g15720
Vinsert
p24225
I42
VSimpleName: Answer
p24226
tp24227
I1
s(g12221
I42
g12222
Vinsert
p24228
I27
VInfixExpression: ||
p24229
tp24230
I1
s(g648
I42
g649
Vinsert
p24231
I59
VVariableDeclarationFragment
p24232
tp24233
I1
s(Vinsert
p24234
I42
VSimpleName: useConstructor
p24235
Vinsert
p24236
I43
VSimpleType: InnerClass
p24237
tp24238
I2
s(g4853
I42
g4854
Vinsert
p24239
I42
VSimpleName: Mockito
p24240
tp24241
I2
s(g1393
I42
g1394
Vinsert
p24242
I42
VSimpleName: Double
p24243
tp24244
I2
s(g9224
I42
g9225
Vinsert
p24245
I45
VStringLiteral: "android"
p24246
tp24247
I1
s(g3570
I42
g3571
Vinsert
p24248
I42
VSimpleName: mock
p24249
tp24250
I1
s(Vinsert
p24251
I42
VSimpleName: booleanReturningMethod
p24252
Vinsert
p24253
I13
VCharacterLiteral: '\u005cu0000'
p24254
tp24255
I1
s(g109
I42
g110
Vinsert
p24256
I40
VQualifiedName: MockitoJUnitRunner.Silent
p24257
tp24258
I1
s(g673
I42
g674
Vinsert
p24259
I42
VSimpleName: CAPS
p24260
tp24261
I2
s(g17240
I42
g17241
Vinsert
p24262
I32
VMethodInvocation
p24263
tp24264
I3
s(g1939
I42
g1940
Vinsert
p24265
I60
VVariableDeclarationStatement
p24266
tp24267
I1
s(g1962
I42
g1963
Vinsert
p24268
I14
VClassInstanceCreation
p24269
tp24270
I1
s(g4539
I42
g4540
Vinsert
p24271
I11
VCastExpression
p24272
tp24273
I2
s(g3026
I42
g3027
Vinsert
p24274
I43
VSimpleType: InvocationInfo
p24275
tp24276
I3
s(Vinsert
p24277
I42
VSimpleName: getClass
p24278
Vinsert
p24279
I43
VSimpleType: MockitoJUnitRunner
p24280
tp24281
I2
s(g5398
I42
g5399
Vinsert
p24282
I42
VSimpleName: shouldNotReturnNullForPrimitives
p24283
tp24284
I1
s(g4451
I42
g4452
Vinsert
p24285
I42
VSimpleName: expected
p24286
tp24287
I3
s(g6260
I42
g6261
Vinsert
p24288
I21
VExpressionStatement
p24289
tp24290
I2
s(g1790
I42
g1791
Vinsert
p24291
I7
VAssignment: =
p24292
tp24293
I1
s(g13172
I42
g13173
Vinsert
p24294
I42
VSimpleName: INSTANCE
p24295
tp24296
I1
s(g5491
I42
g5492
Vinsert
p24297
I39
VPrimitiveType: void
p24298
tp24299
I1
s(g4590
I42
g4591
Vinsert
p24300
I66
VTextElement: <p>This engine will fail, if the field is also annotated with incompatible Mockito annotations.
p24301
tp24302
I1
s(g3924
I42
g3925
Vinsert
p24303
I83
VModifier: static
p24304
tp24305
I1
s(g7735
I42
g7736
Vinsert
p24306
I42
VSimpleName: desc
p24307
tp24308
I1
s(g4125
I42
g4126
Vinsert
p24309
I40
VQualifiedName: org.mockito.InOrder
p24310
tp24311
I1
s(g4776
I42
g4777
Vinsert
p24312
I22
VFieldAccess
p24313
tp24314
I1
s(g1627
I42
g1628
Vinsert
p24315
I59
VVariableDeclarationFragment
p24316
tp24317
I1
s(g8991
I42
g8992
Vinsert
p24318
I31
VMethodDeclaration
p24319
tp24320
I4
s(g5047
I42
g5048
Vinsert
p24321
I42
VSimpleName: spiedList
p24322
tp24323
I2
s(g8729
I42
g8730
Vinsert
p24324
I8
VBlock
p24325
tp24326
I1
s(g12000
I42
g12001
Vinsert
p24327
I38
VPrefixExpression: !
p24328
tp24329
I4
s(g12737
I42
g12738
Vinsert
p24330
I42
VSimpleName: settings
p24331
tp24332
I2
s(g337
I42
g338
Vinsert
p24333
I7
VAssignment: +=
p24334
tp24335
I1
s(g1533
I42
g1534
Vinsert
p24336
I42
VSimpleName: MockitoLogger
p24337
tp24338
I2
s(g17803
I42
g17804
Vinsert
p24339
I43
VSimpleType: DebuggingInfo
p24340
tp24341
I1
s(g10634
I42
g10635
Vinsert
p24342
I42
VSimpleName: superName
p24343
tp24344
I1
s(g8931
I42
g8932
Vinsert
p24345
I21
VExpressionStatement
p24346
tp24347
I2
s(g9483
I42
g9484
Vinsert
p24348
I42
VSimpleName: wanted
p24349
tp24350
I1
s(g10987
I42
g10988
Vinsert
p24351
I42
VSimpleName: RuntimeException
p24352
tp24353
I1
s(g3735
I42
g3736
Vinsert
p24354
I68
VMethodRef
p24355
tp24356
I1
s(g144
I42
g145
Vinsert
p24357
I42
VSimpleName: invocation
p24358
tp24359
I1
s(g9832
I42
g9833
Vinsert
p24360
I42
VSimpleName: T
p24361
tp24362
I1
s(g4043
I42
g4044
Vinsert
p24363
I21
VExpressionStatement
p24364
tp24365
I1
s(g5768
I42
g5769
Vinsert
p24366
I42
VSimpleName: Throwable
p24367
tp24368
I1
s(g3875
I42
g3876
Vinsert
p24369
I59
VVariableDeclarationFragment
p24370
tp24371
I15
s(g11370
I42
g11371
Vinsert
p24372
I66
VTextElement: SmartNullReturnValues will be probably the default return values strategy in Mockito 2.0 
p24373
tp24374
I1
s(g6321
I42
g6322
Vinsert
p24375
I42
VSimpleName: InvocationBuilder
p24376
tp24377
I10
s(Vinsert
p24378
I42
VSimpleName: println
p24379
Vinsert
p24380
I42
VSimpleName: what
p24381
tp24382
I1
s(g3214
I42
g3215
Vinsert
p24383
I31
VMethodDeclaration
p24384
tp24385
I1
s(g1347
I42
g1348
Vinsert
p24386
I43
VSimpleType: InternalMockHandler
p24387
tp24388
I2
s(g5660
I42
g5661
Vinsert
p24389
I42
VSimpleName: simpleMethod
p24390
tp24391
I2
s(g3242
I42
g3243
Vinsert
p24392
I42
VSimpleName: generateClass
p24393
tp24394
I1
s(g6919
I42
g6920
Vinsert
p24395
I42
VSimpleName: fail
p24396
tp24397
I2
s(g4952
I42
g4953
Vinsert
p24398
I42
VSimpleName: verificationMode
p24399
tp24400
I1
s(g2998
I42
g2999
Vinsert
p24401
I44
VSingleVariableDeclaration
p24402
tp24403
I1
s(g2408
I42
g2409
Vinsert
p24404
I43
VSimpleType: StackTraceElement
p24405
tp24406
I1
s(g2222
I42
g2223
Vinsert
p24407
I60
VVariableDeclarationStatement
p24408
tp24409
I3
s(Vinsert
p24410
I42
VSimpleName: getClassLoader
p24411
Vinsert
p24412
I42
VSimpleName: getClass
p24413
tp24414
I1
s(g2753
I42
g2754
Vinsert
p24415
I31
VMethodDeclaration
p24416
tp24417
I6
s(g2973
I42
g2974
Vinsert
p24418
I83
VModifier: private
p24419
tp24420
I1
s(g5549
I42
g5550
Vinsert
p24421
I43
VSimpleType: Exception
p24422
tp24423
I1
s(g1039
I42
g1040
Vinsert
p24424
I17
VConstructorInvocation
p24425
tp24426
I1
s(Vinsert
p24427
I42
VSimpleName: clear
p24428
Vinsert
p24429
I42
VSimpleName: shouldVerify
p24430
tp24431
I1
s(g9207
I42
g9208
Vinsert
p24432
I42
VSimpleName: description
p24433
tp24434
I1
s(g8899
I42
g8900
Vinsert
p24435
I59
VVariableDeclarationFragment
p24436
tp24437
I1
s(g438
I42
g439
Vinsert
p24438
I43
VSimpleType: String
p24439
tp24440
I4
s(g6962
I42
g6963
Vinsert
p24441
I32
VMethodInvocation
p24442
tp24443
I4
s(g11866
I42
g11867
Vinsert
p24444
I43
VSimpleType: String
p24445
tp24446
I1
s(g5211
I42
g5212
Vinsert
p24447
I27
VInfixExpression: +
p24448
tp24449
I1
s(g8553
I42
g8554
Vinsert
p24450
I42
VSimpleName: enhancer
p24451
tp24452
I1
s(Vinsert
p24453
I42
VSimpleName: addAll
p24454
Vinsert
p24455
I74
VParameterizedType: List<Improvement>
p24456
tp24457
I1
s(g11538
I42
g11539
Vinsert
p24458
I42
VSimpleName: List
p24459
tp24460
I1
s(g3126
I42
g3127
Vinsert
p24461
I42
VSimpleName: minNumberOfInvocations
p24462
tp24463
I2
s(g11612
I42
g11613
Vinsert
p24464
I42
VSimpleName: printer
p24465
tp24466
I2
s(Vinsert
p24467
I42
VSimpleName: toInvocation
p24468
Vinsert
p24469
I42
VSimpleName: toInvocation
p24470
tp24471
I2
s(g2222
I42
g2223
Vinsert
p24472
I83
VModifier: final
p24473
tp24474
I1
s(g796
I42
g797
Vinsert
p24475
I85
VDimension
p24476
tp24477
I1
s(g9045
I42
g9046
Vinsert
p24478
I42
VSimpleName: value
p24479
tp24480
I1
s(g10081
I42
g10082
Vinsert
p24481
I21
VExpressionStatement
p24482
tp24483
I5
s(g1352
I42
g1353
Vinsert
p24484
I32
VMethodInvocation
p24485
tp24486
I3
s(g7798
I42
g7799
Vinsert
p24487
I42
VSimpleName: compareFiles
p24488
tp24489
I1
s(g6446
I42
g6447
Vinsert
p24490
I85
VDimension
p24491
tp24492
I1
s(g3743
I42
g3744
Vinsert
p24493
I42
VSimpleName: mode
p24494
tp24495
I2
s(g11768
I42
g11769
Vinsert
p24496
I42
VSimpleName: getMethod
p24497
tp24498
I1
s(g2682
I42
g2683
Vinsert
p24499
I39
VPrimitiveType: boolean
p24500
tp24501
I1
s(g7366
I42
g7367
Vinsert
p24502
I42
VSimpleName: chunks
p24503
tp24504
I1
s(g4038
I42
g4039
Vinsert
p24505
I8
VBlock
p24506
tp24507
I2
s(g1079
I42
g1080
Vinsert
p24508
I42
VSimpleName: mv
p24509
tp24510
I2
s(g11749
I42
g11750
Vinsert
p24511
I42
VSimpleName: Object
p24512
tp24513
I1
s(g12890
I42
g12891
Vinsert
p24514
I32
VMethodInvocation
p24515
tp24516
I4
s(g7472
I42
g7473
Vinsert
p24517
I21
VExpressionStatement
p24518
tp24519
I3
s(g8926
I42
g8927
Vinsert
p24520
I7
VAssignment: =
p24521
tp24522
I3
s(g134
I42
g135
Vinsert
p24523
I42
VSimpleName: FieldInsnNode
p24524
tp24525
I2
s(g7366
I42
g7367
Vinsert
p24526
I32
VMethodInvocation
p24527
tp24528
I4
s(g16348
I42
g16349
Vinsert
p24529
I43
VSimpleType: List
p24530
tp24531
I2
s(g16449
I42
g16450
Vinsert
p24532
I27
VInfixExpression: !=
p24533
tp24534
I1
s(g3199
I42
g3200
Vinsert
p24535
I42
VSimpleName: timeout
p24536
tp24537
I1
s(g362
I42
g363
Vinsert
p24538
I42
VSimpleName: Invocation
p24539
tp24540
I3
s(g7790
I42
g7791
Vinsert
p24541
I42
VSimpleName: Class
p24542
tp24543
I1
s(g9865
I42
g9866
Vinsert
p24544
I21
VExpressionStatement
p24545
tp24546
I1
s(g20458
I42
g20459
Vinsert
p24547
I83
VModifier: static
p24548
tp24549
I1
s(g961
I42
g962
Vinsert
p24550
I42
VSimpleName: Object
p24551
tp24552
I2
s(g13540
I42
g13541
Vinsert
p24553
I25
VIfStatement
p24554
tp24555
I11
s(g8798
I42
g8799
Vinsert
p24556
I45
VStringLiteral: "mock.simpleMethod()"
p24557
tp24558
I1
s(g7961
I42
g7962
Vinsert
p24559
I42
VSimpleName: shouldKnowHashCodeMethod
p24560
tp24561
I1
s(g12138
I42
g12139
Vinsert
p24562
I42
VSimpleName: putUTF8
p24563
tp24564
I1
s(g7867
I42
g7868
Vinsert
p24565
I43
VSimpleType: AssertionError
p24566
tp24567
I1
s(g5316
I42
g5317
Vinsert
p24568
I42
VSimpleName: legacyRunner
p24569
tp24570
I1
s(g5789
I42
g5790
Vinsert
p24571
I8
VBlock
p24572
tp24573
I2
s(g5461
I42
g5462
Vinsert
p24574
I42
VSimpleName: OS_VERSION
p24575
tp24576
I1
s(g3570
I42
g3571
Vinsert
p24577
I14
VClassInstanceCreation
p24578
tp24579
I1
s(g3111
I42
g3112
Vinsert
p24580
I21
VExpressionStatement
p24581
tp24582
I1
s(g10987
I42
g10988
Vinsert
p24583
I43
VSimpleType: Exception
p24584
tp24585
I1
s(g2271
I42
g2272
Vinsert
p24586
I40
VQualifiedName: org.mockito.internal.creation.CglibMockMaker
p24587
tp24588
I1
s(g9929
I42
g9930
Vinsert
p24589
I42
VSimpleName: Arrays
p24590
tp24591
I1
s(g6311
I42
g6312
Vinsert
p24592
I34
VNumberLiteral: 2
p24593
tp24594
I1
s(g2788
I42
g2789
Vinsert
p24595
I42
VSimpleName: add
p24596
tp24597
I2
s(g5604
I42
g5605
Vinsert
p24598
I44
VSingleVariableDeclaration
p24599
tp24600
I1
s(g16240
I42
g16241
Vinsert
p24601
I43
VSimpleType: Class
p24602
tp24603
I1
s(g9706
I42
g9707
Vinsert
p24604
I42
VSimpleName: object
p24605
tp24606
I1
s(g9224
I42
g9225
Vinsert
p24607
I42
VSimpleName: toLowerCase
p24608
tp24609
I1
s(g21977
I42
g21978
Vinsert
p24610
I42
VSimpleName: Invocation
p24611
tp24612
I2
s(g1563
I42
g1564
Vinsert
p24613
I32
VMethodInvocation
p24614
tp24615
I1
s(Vinsert
p24616
I42
VSimpleName: oneArg
p24617
Vinsert
p24618
I13
VCharacterLiteral: 'x'
p24619
tp24620
I1
s(g1449
I42
g1450
Vinsert
p24621
I21
VExpressionStatement
p24622
tp24623
I1
s(g4934
I42
g4935
Vinsert
p24624
I8
VBlock
p24625
tp24626
I1
s(g4853
I42
g4854
Vinsert
p24627
I42
VSimpleName: capture
p24628
tp24629
I2
s(g473
I42
g474
Vinsert
p24630
I59
VVariableDeclarationFragment
p24631
tp24632
I2
s(g7258
I42
g7259
Vinsert
p24633
I42
VSimpleName: assertNull
p24634
tp24635
I1
s(g19066
I42
g19067
Vinsert
p24636
I83
VModifier: public
p24637
tp24638
I2
s(g2508
I42
g2509
Vinsert
p24639
I83
VModifier: public
p24640
tp24641
I1
s(g5892
I42
g5893
Vinsert
p24642
I40
VQualifiedName: java.util.List
p24643
tp24644
I1
s(g6195
I42
g6196
Vinsert
p24645
I27
VInfixExpression: <
p24646
tp24647
I1
s(g5986
I42
g5987
Vinsert
p24648
I8
VBlock
p24649
tp24650
I1
s(g5530
I42
g5531
Vinsert
p24651
I60
VVariableDeclarationStatement
p24652
tp24653
I2
s(g14868
I42
g14869
Vinsert
p24654
I45
VStringLiteral: "[DelayedExecution] exec delay = "
p24655
tp24656
I1
s(g4595
I42
g4596
Vinsert
p24657
I42
VSimpleName: wantedNumberOfInvocations
p24658
tp24659
I1
s(g1805
I42
g1806
Vinsert
p24660
I42
VSimpleName: ExpectedInvocation
p24661
tp24662
I1
s(g9473
I42
g9474
Vinsert
p24663
I21
VExpressionStatement
p24664
tp24665
I1
s(g1604
I42
g1605
Vinsert
p24666
I42
VSimpleName: ArrayList
p24667
tp24668
I2
s(Vinsert
p24669
I42
VSimpleName: expectThrowable
p24670
Vinsert
p24671
I43
VSimpleType: String
p24672
tp24673
I1
s(g648
I42
g649
Vinsert
p24674
I14
VClassInstanceCreation
p24675
tp24676
I1
s(g3688
I42
g3689
Vinsert
p24677
I42
VSimpleName: After
p24678
tp24679
I1
s(g6786
I42
g6787
Vinsert
p24680
I42
VSimpleName: isolated_class_loader_cannot_load_classes_if_prefix_excluded
p24681
tp24682
I1
s(g4290
I42
g4291
Vinsert
p24683
I16
VConditionalExpression
p24684
tp24685
I4
s(g8082
I42
g8083
Vinsert
p24686
I51
VSynchronizedStatement
p24687
tp24688
I1
s(g1292
I42
g1293
Vinsert
p24689
I42
VSimpleName: and
p24690
tp24691
I2
s(g209
I42
g210
Vinsert
p24692
I27
VInfixExpression: -
p24693
tp24694
I2
s(g747
I42
g748
Vinsert
p24695
I43
VSimpleType: IMethods
p24696
tp24697
I2
s(g3413
I42
g3414
Vinsert
p24698
I42
VSimpleName: mock
p24699
tp24700
I16
s(g8716
I42
g8717
Vinsert
p24701
I42
VSimpleName: List
p24702
tp24703
I1
s(g846
I42
g847
Vinsert
p24704
I8
VBlock
p24705
tp24706
I12
s(g4763
I42
g4764
Vinsert
p24707
I21
VExpressionStatement
p24708
tp24709
I1
s(g6685
I42
g6686
Vinsert
p24710
I42
VSimpleName: _dont_implement_Matcher___instead_extend_BaseMatcher_
p24711
tp24712
I1
s(g755
I42
g756
Vinsert
p24713
I76
VWildcardType: ?
p24714
tp24715
I1
s(g8655
I42
g8656
Vinsert
p24716
I43
VSimpleType: MockKey
p24717
tp24718
I1
s(g2508
I42
g2509
Vinsert
p24719
I42
VSimpleName: Exception
p24720
tp24721
I1
s(Vinsert
p24722
I42
VSimpleName: createMock
p24723
Vinsert
p24724
I42
VSimpleName: optionalInstance
p24725
tp24726
I1
s(g1513
I42
g1514
Vinsert
p24727
I32
VMethodInvocation
p24728
tp24729
I1
s(g11956
I42
g11957
Vinsert
p24730
I14
VClassInstanceCreation
p24731
tp24732
I1
s(g7859
I42
g7860
Vinsert
p24733
I32
VMethodInvocation
p24734
tp24735
I3
s(Vinsert
p24736
I42
VSimpleName: appendText
p24737
Vinsert
p24738
I32
VMethodInvocation
p24739
tp24740
I8
s(g6212
I42
g6213
Vinsert
p24741
I42
VSimpleName: Object
p24742
tp24743
I2
s(g6195
I42
g6196
Vinsert
p24744
I24
VForStatement
p24745
tp24746
I1
s(g2276
I42
g2277
Vinsert
p24747
I42
VSimpleName: getMockMaker
p24748
tp24749
I1
s(g12193
I42
g12194
Vinsert
p24750
I31
VMethodDeclaration
p24751
tp24752
I6
s(g282
I42
g283
Vinsert
p24753
I43
VSimpleType: Throwable
p24754
tp24755
I1
s(g1194
I42
g1195
Vinsert
p24756
I32
VMethodInvocation
p24757
tp24758
I7
s(g9543
I42
g9544
Vinsert
p24759
I42
VSimpleName: argument
p24760
tp24761
I1
s(g2046
I42
g2047
Vinsert
p24762
I57
VTypeLiteral
p24763
tp24764
I2
s(g3229
I42
g3230
Vinsert
p24765
I42
VSimpleName: StateMaster
p24766
tp24767
I1
s(g4822
I42
g4823
Vinsert
p24768
I42
VSimpleName: handler
p24769
tp24770
I1
s(g4420
I42
g4421
Vinsert
p24771
I14
VClassInstanceCreation
p24772
tp24773
I2
s(g4944
I42
g4945
Vinsert
p24774
I21
VExpressionStatement
p24775
tp24776
I32
s(g5961
I42
g5962
Vinsert
p24777
I42
VSimpleName: verificationMode
p24778
tp24779
I1
s(g1586
I42
g1587
Vinsert
p24780
I32
VMethodInvocation
p24781
tp24782
I3
s(g5300
I42
g5301
Vinsert
p24783
I42
VSimpleName: Class
p24784
tp24785
I2
s(g1533
I42
g1534
Vinsert
p24786
I43
VSimpleType: MockitoLogger
p24787
tp24788
I2
s(g16
I42
g17
Vinsert
p24789
I45
VStringLiteral: "git"
p24790
tp24791
I1
s(g10794
I42
g10795
Vinsert
p24792
I25
VIfStatement
p24793
tp24794
I2
s(g17478
I42
g17479
Vinsert
p24795
I42
VSimpleName: commandLine
p24796
tp24797
I2
s(g593
I42
g594
Vinsert
p24798
I8
VBlock
p24799
tp24800
I1
s(Vinsert
p24801
I42
VSimpleName: get
p24802
Vinsert
p24803
I42
VSimpleName: last
p24804
tp24805
I1
s(g179
I42
g180
Vinsert
p24806
I42
VSimpleName: potentialArgMismatches
p24807
tp24808
I1
s(g7752
I42
g7753
Vinsert
p24809
I42
VSimpleName: spy
p24810
tp24811
I1
s(g1239
I42
g1240
Vinsert
p24812
I38
VPrefixExpression: !
p24813
tp24814
I1
s(g663
I42
g664
Vinsert
p24815
I42
VSimpleName: veeeeeeeeeeeeeeeeeeeeeeeerylongNameMock
p24816
tp24817
I1
s(g199
I42
g200
Vinsert
p24818
I43
VSimpleType: Exception
p24819
tp24820
I1
s(g8899
I42
g8900
Vinsert
p24821
I42
VSimpleName: shouldInjectMocksIfThereIsNoUserDefinedEngine
p24822
tp24823
I1
s(g6476
I42
g6477
Vinsert
p24824
I42
VSimpleName: InjectMocksScanner
p24825
tp24826
I1
s(g13694
I42
g13695
Vinsert
p24827
I83
VModifier: public
p24828
tp24829
I1
s(g15719
I42
g15720
Vinsert
p24830
I42
VSimpleName: answer
p24831
tp24832
I1
s(g618
I42
g619
Vinsert
p24833
I42
VSimpleName: timeout
p24834
tp24835
I1
s(g15351
I42
g15352
Vinsert
p24836
I32
VMethodInvocation
p24837
tp24838
I1
s(Vinsert
p24839
I42
VSimpleName: clear
p24840
Vinsert
p24841
I42
VSimpleName: shouldFailVerificationInOrder
p24842
tp24843
I1
s(g5378
I42
g5379
Vinsert
p24844
I83
VModifier: public
p24845
tp24846
I1
s(g7446
I42
g7447
Vinsert
p24847
I40
VQualifiedName: reporterStub.wantedString
p24848
tp24849
I1
s(g3977
I42
g3978
Vinsert
p24850
I42
VSimpleName: assertEquals
p24851
tp24852
I1
s(g2444
I42
g2445
Vinsert
p24853
I42
VSimpleName: testResult
p24854
tp24855
I1
s(g2090
I42
g2091
Vinsert
p24856
I42
VSimpleName: shouldReturnEmptyArrayWhenInputIsEmpty
p24857
tp24858
I1
s(g2070
I42
g2071
Vinsert
p24859
I40
VQualifiedName: org.mockito.internal.invocation.InvocationMarker
p24860
tp24861
I3
s(g3802
I42
g3803
Vinsert
p24862
I43
VSimpleType: SampleInterface
p24863
tp24864
I1
s(Vinsert
p24865
I42
VSimpleName: getInvocations
p24866
Vinsert
p24867
I42
VSimpleName: Object
p24868
tp24869
I1
s(g921
I42
g922
Vinsert
p24870
I42
VSimpleName: candidate
p24871
tp24872
I2
s(g17803
I42
g17804
Vinsert
p24873
I42
VSimpleName: getDebuggingInfo
p24874
tp24875
I1
s(g3101
I42
g3102
Vinsert
p24876
I42
VSimpleName: T
p24877
tp24878
I3
s(g7633
I42
g7634
Vinsert
p24879
I42
VSimpleName: VerifyingMode
p24880
tp24881
I1
s(g21
I42
g22
Vinsert
p24882
I42
VSimpleName: merger
p24883
tp24884
I2
s(g4861
I42
g4862
Vinsert
p24885
I32
VMethodInvocation
p24886
tp24887
I1
s(g3797
I42
g3798
Vinsert
p24888
I40
VQualifiedName: org.junit.Before
p24889
tp24890
I2
s(g15147
I42
g15148
Vinsert
p24891
I42
VSimpleName: Invocation
p24892
tp24893
I2
s(g5544
I42
g5545
Vinsert
p24894
I41
VReturnStatement
p24895
tp24896
I9
s(g5426
I42
g5427
Vinsert
p24897
I42
VSimpleName: subclassingRequired
p24898
tp24899
I2
s(g16429
I42
g16430
Vinsert
p24900
I42
VSimpleName: CapturesArgumensFromInvocation
p24901
tp24902
I1
s(g5768
I42
g5769
Vinsert
p24903
I21
VExpressionStatement
p24904
tp24905
I1
s(g405
I42
g406
Vinsert
p24906
I42
VSimpleName: Exception
p24907
tp24908
I1
s(g179
I42
g180
Vinsert
p24909
I43
VSimpleType: List
p24910
tp24911
I6
s(g19066
I42
g19067
Vinsert
p24912
I42
VSimpleName: set
p24913
tp24914
I1
s(g3111
I42
g3112
Vinsert
p24915
I42
VSimpleName: articleThree
p24916
tp24917
I1
s(g14311
I42
g14312
Vinsert
p24918
I34
VNumberLiteral: 0
p24919
tp24920
I1
s(g3616
I42
g3617
Vinsert
p24921
I42
VSimpleName: startTime
p24922
tp24923
I4
s(g623
I42
g624
Vinsert
p24924
I42
VSimpleName: InvocationMatcher
p24925
tp24926
I1
s(g2296
I42
g2297
Vinsert
p24927
I43
VSimpleType: MatcherApplicationStrategy
p24928
tp24929
I1
s(Vinsert
p24930
I42
VSimpleName: simpleMethod
p24931
Vinsert
p24932
I42
VSimpleName: smartMock
p24933
tp24934
I4
s(g2672
I42
g2673
Vinsert
p24935
I78
VMarkerAnnotation
p24936
tp24937
I1
s(g10846
I42
g10847
Vinsert
p24938
I43
VSimpleType: String
p24939
tp24940
I4
s(g1472
I42
g1473
Vinsert
p24941
I42
VSimpleName: mock
p24942
tp24943
I4
s(g6566
I42
g6567
Vinsert
p24944
I42
VSimpleName: argument
p24945
tp24946
I2
s(g13881
I42
g13882
Vinsert
p24947
I42
VSimpleName: props
p24948
tp24949
I1
s(g4968
I42
g4969
Vinsert
p24950
I42
VSimpleName: Serializable
p24951
tp24952
I1
s(g3214
I42
g3215
Vinsert
p24953
I42
VSimpleName: INT_INSN
p24954
tp24955
I1
s(g5456
I42
g5457
Vinsert
p24956
I25
VIfStatement
p24957
tp24958
I2
s(g17511
I42
g17512
Vinsert
p24959
I43
VSimpleType: SmartMock
p24960
tp24961
I1
s(g6093
I42
g6094
Vinsert
p24962
I83
VModifier: static
p24963
tp24964
I2
s(g1462
I42
g1463
Vinsert
p24965
I59
VVariableDeclarationFragment
p24966
tp24967
I3
s(g2662
I42
g2663
Vinsert
p24968
I42
VSimpleName: mock
p24969
tp24970
I4
s(g5282
I42
g5283
Vinsert
p24971
I42
VSimpleName: List
p24972
tp24973
I1
s(g433
I42
g434
Vinsert
p24974
I42
VSimpleName: Exception
p24975
tp24976
I4
s(g1637
I42
g1638
Vinsert
p24977
I42
VSimpleName: LocalizedMatcher
p24978
tp24979
I2
s(g1815
I42
g1816
Vinsert
p24980
I44
VSingleVariableDeclaration
p24981
tp24982
I2
s(g22637
I42
g22638
Vinsert
p24983
I43
VSimpleType: MockSettingsImpl
p24984
tp24985
I1
s(g21691
I42
g21692
Vinsert
p24986
I3
VArrayCreation
p24987
tp24988
I3
s(g20012
I42
g20013
Vinsert
p24989
I45
VStringLiteral: "You are using the setting 'withSettings().serializable()' however the type you are trying to mock '"
p24990
tp24991
I1
s(g6363
I42
g6364
Vinsert
p24992
I42
VSimpleName: setStubbingListener
p24993
tp24994
I3
s(g8757
I42
g8758
Vinsert
p24995
I42
VSimpleName: expect
p24996
tp24997
I1
s(g966
I42
g967
Vinsert
p24998
I42
VSimpleName: T
p24999
tp25000
I2
s(g11263
I42
g11264
Vinsert
p25001
I60
VVariableDeclarationStatement
p25002
tp25003
I1
s(g4022
I42
g4023
Vinsert
p25004
I42
VSimpleName: cachingBytecodeGenerator
p25005
tp25006
I3
s(g12326
I42
g12327
Vinsert
p25007
I33
VNullLiteral
p25008
tp25009
I1
s(g317
I42
g318
Vinsert
p25010
I42
VSimpleName: ArgumentMatcher
p25011
tp25012
I1
s(g4595
I42
g4596
Vinsert
p25013
I42
VSimpleName: VerificationMode
p25014
tp25015
I1
s(g11984
I42
g11985
Vinsert
p25016
I76
VWildcardType: ?
p25017
tp25018
I1
s(g3616
I42
g3617
Vinsert
p25019
I66
VTextElement: Starts the timer count down.
p25020
tp25021
I1
s(g332
I42
g333
Vinsert
p25022
I45
VStringLiteral: "This substring: \u005cn"
p25023
tp25024
I1
s(g2908
I42
g2909
Vinsert
p25025
I21
VExpressionStatement
p25026
tp25027
I1
s(g2195
I42
g2196
Vinsert
p25028
I42
VSimpleName: Field
p25029
tp25030
I2
s(g6859
I42
g6860
Vinsert
p25031
I42
VSimpleName: littleRunner
p25032
tp25033
I2
s(g16749
I42
g16750
Vinsert
p25034
I42
VSimpleName: assertSame
p25035
tp25036
I1
s(g2983
I42
g2984
Vinsert
p25037
I42
VSimpleName: Mockito
p25038
tp25039
I1
s(g6339
I42
g6340
Vinsert
p25040
I32
VMethodInvocation
p25041
tp25042
I3
s(g17803
I42
g17804
Vinsert
p25043
I42
VSimpleName: beforeRun
p25044
tp25045
I2
s(Vinsert
p25046
I42
VSimpleName: getMessage
p25047
Vinsert
p25048
I43
VSimpleType: UnfinishedVerificationException
p25049
tp25050
I2
s(g6614
I42
g6615
Vinsert
p25051
I8
VBlock
p25052
tp25053
I1
s(g2070
I42
g2071
Vinsert
p25054
I83
VModifier: private
p25055
tp25056
I3
s(g5821
I42
g5822
Vinsert
p25057
I70
VEnhancedForStatement
p25058
tp25059
I1
s(g134
I42
g135
Vinsert
p25060
I59
VVariableDeclarationFragment
p25061
tp25062
I1
s(g1683
I42
g1684
Vinsert
p25063
I42
VSimpleName: Class
p25064
tp25065
I1
s(g6736
I42
g6737
Vinsert
p25066
I42
VSimpleName: List
p25067
tp25068
I1
s(g6658
I42
g6659
Vinsert
p25069
I45
VStringLiteral: "[1, 2]"
p25070
tp25071
I1
s(g4163
I42
g4164
Vinsert
p25072
I52
VThisExpression
p25073
tp25074
I1
s(Vinsert
p25075
I42
VSimpleName: simpleMethod
p25076
Vinsert
p25077
I42
VSimpleName: shouldPointOutMisplacedMatcher
p25078
tp25079
I1
s(g8921
I42
g8922
Vinsert
p25080
I39
VPrimitiveType: void
p25081
tp25082
I2
s(g6048
I42
g6049
Vinsert
p25083
I42
VSimpleName: Character
p25084
tp25085
I2
s(g4929
I42
g4930
Vinsert
p25086
I42
VSimpleName: i
p25087
tp25088
I1
s(g8136
I42
g8137
Vinsert
p25089
I42
VSimpleName: anyByte
p25090
tp25091
I1
s(g11877
I42
g11878
Vinsert
p25092
I45
VStringLiteral: "concurrent access"
p25093
tp25094
I1
s(g2866
I42
g2867
Vinsert
p25095
I39
VPrimitiveType: int
p25096
tp25097
I1
s(g951
I42
g952
Vinsert
p25098
I43
VSimpleType: Reporter
p25099
tp25100
I1
s(g10667
I42
g10668
Vinsert
p25101
I42
VSimpleName: isTrue
p25102
tp25103
I1
s(g11897
I42
g11898
Vinsert
p25104
I42
VSimpleName: asList
p25105
tp25106
I2
s(g9734
I42
g9735
Vinsert
p25107
I42
VSimpleName: mockName
p25108
tp25109
I1
s(g8604
I42
g8605
Vinsert
p25110
I42
VSimpleName: TreeSet
p25111
tp25112
I1
s(g11177
I42
g11178
Vinsert
p25113
I25
VIfStatement
p25114
tp25115
I1
s(g377
I42
g378
Vinsert
p25116
I42
VSimpleName: getMockHandler
p25117
tp25118
I2
s(g4861
I42
g4862
Vinsert
p25119
I43
VSimpleType: UnusedStubbingsFinder
p25120
tp25121
I1
s(g16709
I42
g16710
Vinsert
p25122
I45
VStringLiteral: "    1: \u005c"test\u005c""
p25123
tp25124
I1
s(g966
I42
g967
Vinsert
p25125
I42
VSimpleName: willCallRealMethod
p25126
tp25127
I1
s(g2018
I42
g2019
Vinsert
p25128
I32
VMethodInvocation
p25129
tp25130
I4
s(Vinsert
p25131
I42
VSimpleName: isSpy
p25132
Vinsert
p25133
I45
VStringLiteral: "i mock a mock"
p25134
tp25135
I1
s(g15424
I42
g15425
Vinsert
p25136
I27
VInfixExpression: ||
p25137
tp25138
I4
s(g4755
I42
g4756
Vinsert
p25139
I31
VMethodDeclaration
p25140
tp25141
I1
s(g788
I42
g789
Vinsert
p25142
I32
VMethodInvocation
p25143
tp25144
I1
s(g19604
I42
g19605
Vinsert
p25145
I43
VSimpleType: Runner
p25146
tp25147
I2
s(g9560
I42
g9561
Vinsert
p25148
I21
VExpressionStatement
p25149
tp25150
I2
s(g1891
I42
g1892
Vinsert
p25151
I43
VSimpleType: InvocationMatcher
p25152
tp25153
I2
s(g3267
I42
g3268
Vinsert
p25154
I42
VSimpleName: String
p25155
tp25156
I1
s(g3083
I42
g3084
Vinsert
p25157
I43
VSimpleType: MockitoAssertionError
p25158
tp25159
I1
s(g17511
I42
g17512
Vinsert
p25160
I62
VInstanceofExpression
p25161
tp25162
I3
s(g3170
I42
g3171
Vinsert
p25163
I27
VInfixExpression: ==
p25164
tp25165
I1
s(g9884
I42
g9885
Vinsert
p25166
I43
VSimpleType: Exception
p25167
tp25168
I1
s(g5201
I42
g5202
Vinsert
p25169
I42
VSimpleName: shouldStubbingBeTreatedAsInteraction
p25170
tp25171
I1
s(g12872
I42
g12873
Vinsert
p25172
I59
VVariableDeclarationFragment
p25173
tp25174
I2
s(g4680
I42
g4681
Vinsert
p25175
I42
VSimpleName: TooLittleActualInvocations
p25176
tp25177
I1
s(g22136
I42
g22137
Vinsert
p25178
I14
VClassInstanceCreation
p25179
tp25180
I4
s(g8393
I42
g8394
Vinsert
p25181
I42
VSimpleName: imposterise
p25182
tp25183
I1
s(g1858
I42
g1859
Vinsert
p25184
I42
VSimpleName: string
p25185
tp25186
I6
s(Vinsert
p25187
I42
VSimpleName: isInstance
p25188
Vinsert
p25189
I42
VSimpleName: type
p25190
tp25191
I1
s(g1785
I42
g1786
Vinsert
p25192
I42
VSimpleName: eq
p25193
tp25194
I1
s(g5583
I42
g5584
Vinsert
p25195
I7
VAssignment: =
p25196
tp25197
I1
s(g2248
I42
g2249
Vinsert
p25198
I42
VSimpleName: StubbingLookUpListener
p25199
tp25200
I1
s(g513
I42
g514
Vinsert
p25201
I42
VSimpleName: Iterator
p25202
tp25203
I9
s(g3006
I42
g3007
Vinsert
p25204
I21
VExpressionStatement
p25205
tp25206
I1
s(g971
I42
g972
Vinsert
p25207
I42
VSimpleName: await
p25208
tp25209
I1
s(g9465
I42
g9466
Vinsert
p25210
I42
VSimpleName: assertNotEquals
p25211
tp25212
I1
s(g377
I42
g378
Vinsert
p25213
I32
VMethodInvocation
p25214
tp25215
I10
s(g9721
I42
g9722
Vinsert
p25216
I34
VNumberLiteral: 10
p25217
tp25218
I1
s(g12183
I42
g12184
Vinsert
p25219
I42
VSimpleName: MockitoMethodProxy
p25220
tp25221
I1
s(g4077
I42
g4078
Vinsert
p25222
I59
VVariableDeclarationFragment
p25223
tp25224
I2
s(g11667
I42
g11668
Vinsert
p25225
I44
VSingleVariableDeclaration
p25226
tp25227
I4
s(g3885
I42
g3886
Vinsert
p25228
I39
VPrimitiveType: void
p25229
tp25230
I1
s(g2452
I42
g2453
Vinsert
p25231
I32
VMethodInvocation
p25232
tp25233
I1
s(g2070
I42
g2071
Vinsert
p25234
I42
VSimpleName: invocationMarker
p25235
tp25236
I6
s(g5047
I42
g5048
Vinsert
p25237
I34
VNumberLiteral: 10
p25238
tp25239
I2
s(g1444
I42
g1445
Vinsert
p25240
I42
VSimpleName: classes
p25241
tp25242
I1
s(g11263
I42
g11264
Vinsert
p25243
I42
VSimpleName: mock
p25244
tp25245
I1
s(g463
I42
g464
Vinsert
p25246
I83
VModifier: public
p25247
tp25248
I1
s(g10126
I42
g10127
Vinsert
p25249
I42
VSimpleName: MILLISECONDS
p25250
tp25251
I1
s(g3797
I42
g3798
Vinsert
p25252
I21
VExpressionStatement
p25253
tp25254
I3
s(g1372
I42
g1373
Vinsert
p25255
I21
VExpressionStatement
p25256
tp25257
I21
s(g10091
I42
g10092
Vinsert
p25258
I48
VSuperMethodInvocation
p25259
tp25260
I1
s(g1449
I42
g1450
Vinsert
p25261
I42
VSimpleName: email
p25262
tp25263
I1
s(g20230
I42
g20231
Vinsert
p25264
I42
VSimpleName: e
p25265
tp25266
I6
s(g19510
I42
g19511
Vinsert
p25267
I43
VSimpleType: Equals
p25268
tp25269
I1
s(g282
I42
g283
Vinsert
p25270
I42
VSimpleName: handler
p25271
tp25272
I4
s(g9560
I42
g9561
Vinsert
p25273
I42
VSimpleName: Test
p25274
tp25275
I1
s(g4646
I42
g4647
Vinsert
p25276
I42
VSimpleName: Invocation
p25277
tp25278
I1
s(g20322
I42
g20323
Vinsert
p25279
I42
VSimpleName: DontThrow
p25280
tp25281
I2
s(g533
I42
g534
Vinsert
p25282
I42
VSimpleName: it
p25283
tp25284
I1
s(g3303
I42
g3304
Vinsert
p25285
I42
VSimpleName: getNames
p25286
tp25287
I1
s(g10777
I42
g10778
Vinsert
p25288
I44
VSingleVariableDeclaration
p25289
tp25290
I2
s(g23051
I42
g23052
Vinsert
p25291
I78
VMarkerAnnotation
p25292
tp25293
I1
s(g10992
I42
g10993
Vinsert
p25294
I42
VSimpleName: assertTrue
p25295
tp25296
I1
s(Vinsert
p25297
I42
VSimpleName: equals
p25298
Vinsert
p25299
I42
VSimpleName: type
p25300
tp25301
I2
s(g1332
I42
g1333
Vinsert
p25302
I66
VTextElement: //stubbing
p25303
tp25304
I1
s(g11509
I42
g11510
Vinsert
p25305
I42
VSimpleName: validateFor
p25306
tp25307
I1
s(g11434
I42
g11435
Vinsert
p25308
I42
VSimpleName: MockitoMatcher
p25309
tp25310
I1
s(Vinsert
p25311
I42
VSimpleName: getClass
p25312
Vinsert
p25313
I45
VStringLiteral: "Wanted 2 times but was 3"
p25314
tp25315
I1
s(g8965
I42
g8966
Vinsert
p25316
I43
VSimpleType: Number
p25317
tp25318
I2
s(g12782
I42
g12783
Vinsert
p25319
I42
VSimpleName: ReentrantLock
p25320
tp25321
I1
s(g3165
I42
g3166
Vinsert
p25322
I41
VReturnStatement
p25323
tp25324
I1
s(g4461
I42
g4462
Vinsert
p25325
I39
VPrimitiveType: int
p25326
tp25327
I1
s(g8255
I42
g8256
Vinsert
p25328
I42
VSimpleName: RuntimeException
p25329
tp25330
I1
s(g2326
I42
g2327
Vinsert
p25331
I27
VInfixExpression: !=
p25332
tp25333
I1
s(g2286
I42
g2287
Vinsert
p25334
I41
VReturnStatement
p25335
tp25336
I1
s(g4523
I42
g4524
Vinsert
p25337
I44
VSingleVariableDeclaration
p25338
tp25339
I1
s(Vinsert
p25340
I42
VSimpleName: declaredFieldsOf
p25341
Vinsert
p25342
I43
VSimpleType: ValuedFields
p25343
tp25344
I2
s(g1939
I42
g1940
Vinsert
p25345
I42
VSimpleName: Class
p25346
tp25347
I1
s(g3969
I42
g3970
Vinsert
p25348
I42
VSimpleName: numberOfInvocations
p25349
tp25350
I1
s(g14434
I42
g14435
Vinsert
p25351
I42
VSimpleName: assertEquals
p25352
tp25353
I2
s(g1074
I42
g1075
Vinsert
p25354
I42
VSimpleName: assertEquals
p25355
tp25356
I1
s(g6744
I42
g6745
Vinsert
p25357
I43
VSimpleType: T
p25358
tp25359
I1
s(g9560
I42
g9561
Vinsert
p25360
I42
VSimpleName: ArgumentCaptor
p25361
tp25362
I1
s(g6008
I42
g6009
Vinsert
p25363
I83
VModifier: public
p25364
tp25365
I1
s(g4929
I42
g4930
Vinsert
p25366
I44
VSingleVariableDeclaration
p25367
tp25368
I1
s(g229
I42
g230
Vinsert
p25369
I57
VTypeLiteral
p25370
tp25371
I1
s(g11066
I42
g11067
Vinsert
p25372
I5
VArrayType: StackTraceElement[]
p25373
tp25374
I1
s(g2054
I42
g2055
Vinsert
p25375
I42
VSimpleName: Object
p25376
tp25377
I1
s(g2908
I42
g2909
Vinsert
p25378
I42
VSimpleName: SimpleDateFormat
p25379
tp25380
I2
s(g4189
I42
g4190
Vinsert
p25381
I43
VSimpleType: Set
p25382
tp25383
I1
s(g282
I42
g283
Vinsert
p25384
I32
VMethodInvocation
p25385
tp25386
I7
s(g4226
I42
g4227
Vinsert
p25387
I42
VSimpleName: unverified
p25388
tp25389
I1
s(g17478
I42
g17479
Vinsert
p25390
I42
VSimpleName: ProcessBuilder
p25391
tp25392
I2
s(g9390
I42
g9391
Vinsert
p25393
I43
VSimpleType: IMockitoConfiguration
p25394
tp25395
I1
s(g4973
I42
g4974
Vinsert
p25396
I62
VInstanceofExpression
p25397
tp25398
I1
s(g31
I42
g32
Vinsert
p25399
I42
VSimpleName: Test
p25400
tp25401
I1
s(g20813
I42
g20814
Vinsert
p25402
I42
VSimpleName: assertFalse
p25403
tp25404
I2
s(g16215
I42
g16216
Vinsert
p25405
I43
VSimpleType: MockitoException
p25406
tp25407
I1
s(g12138
I42
g12139
Vinsert
p25408
I83
VModifier: final
p25409
tp25410
I1
s(g2485
I42
g2486
Vinsert
p25411
I42
VSimpleName: chunk
p25412
tp25413
I1
s(g22086
I42
g22087
Vinsert
p25414
I42
VSimpleName: List
p25415
tp25416
I1
s(g3532
I42
g3533
Vinsert
p25417
I21
VExpressionStatement
p25418
tp25419
I5
s(g508
I42
g509
Vinsert
p25420
I45
VStringLiteral: "git"
p25421
tp25422
I1
s(g4750
I42
g4751
Vinsert
p25423
I42
VSimpleName: Invocation
p25424
tp25425
I1
s(g8414
I42
g8415
Vinsert
p25426
I32
VMethodInvocation
p25427
tp25428
I3
s(Vinsert
p25429
I42
VSimpleName: toString
p25430
Vinsert
p25431
I48
VSuperMethodInvocation
p25432
tp25433
I1
s(g1790
I42
g1791
Vinsert
p25434
I42
VSimpleName: isOkToImport
p25435
tp25436
I1
s(g6
I42
g7
Vinsert
p25437
I42
VSimpleName: Throwable
p25438
tp25439
I1
s(g21691
I42
g21692
Vinsert
p25440
I21
VExpressionStatement
p25441
tp25442
I5
s(g252
I42
g253
Vinsert
p25443
I43
VSimpleType: InvocationMatcher
p25444
tp25445
I1
s(g9434
I42
g9435
Vinsert
p25446
I40
VQualifiedName: from.protectedInherited
p25447
tp25448
I1
s(g7403
I42
g7404
Vinsert
p25449
I8
VBlock
p25450
tp25451
I1
s(Vinsert
p25452
I42
VSimpleName: getCause
p25453
Vinsert
p25454
I42
VSimpleName: assertEquals
p25455
tp25456
I9
s(g8095
I42
g8096
Vinsert
p25457
I43
VSimpleType: Exception
p25458
tp25459
I1
s(g1627
I42
g1628
Vinsert
p25460
I42
VSimpleName: delayedExecution
p25461
tp25462
I2
s(g7062
I42
g7063
Vinsert
p25463
I42
VSimpleName: shouldNotThrowNPEWhenIntegerPassedToSame
p25464
tp25465
I1
s(g277
I42
g278
Vinsert
p25466
I42
VSimpleName: assertThat
p25467
tp25468
I1
s(g6252
I42
g6253
Vinsert
p25469
I42
VSimpleName: visible
p25470
tp25471
I1
s(g12799
I42
g12800
Vinsert
p25472
I42
VSimpleName: getNextEntry
p25473
tp25474
I1
s(g2826
I42
g2827
Vinsert
p25475
I7
VAssignment: =
p25476
tp25477
I1
s(Vinsert
p25478
I42
VSimpleName: getMessage
p25479
Vinsert
p25480
I45
VStringLiteral: "cannot verify"
p25481
tp25482
I1
s(g287
I42
g288
Vinsert
p25483
I42
VSimpleName: plugin_type_should_be_inline
p25484
tp25485
I1
s(g20397
I42
g20398
Vinsert
p25486
I85
VDimension
p25487
tp25488
I4
s(g11926
I42
g11927
Vinsert
p25489
I42
VSimpleName: build
p25490
tp25491
I1
s(g8862
I42
g8863
Vinsert
p25492
I32
VMethodInvocation
p25493
tp25494
I2
s(g11686
I42
g11687
Vinsert
p25495
I78
VMarkerAnnotation
p25496
tp25497
I5
s(g1726
I42
g1727
Vinsert
p25498
I21
VExpressionStatement
p25499
tp25500
I1
s(g1770
I42
g1771
Vinsert
p25501
I42
VSimpleName: Constructor
p25502
tp25503
I1
s(g956
I42
g957
Vinsert
p25504
I32
VMethodInvocation
p25505
tp25506
I2
s(g6162
I42
g6163
Vinsert
p25507
I27
VInfixExpression: &
p25508
tp25509
I1
s(g3055
I42
g3056
Vinsert
p25510
I11
VCastExpression
p25511
tp25512
I3
s(g2677
I42
g2678
Vinsert
p25513
I34
VNumberLiteral: 0
p25514
tp25515
I1
s(g13042
I42
g13043
Vinsert
p25516
I42
VSimpleName: toString
p25517
tp25518
I1
s(Vinsert
p25519
I42
VSimpleName: instance
p25520
Vinsert
p25521
I42
VSimpleName: LastArguments
p25522
tp25523
I5
s(g4295
I42
g4296
Vinsert
p25524
I8
VBlock
p25525
tp25526
I1
s(g1563
I42
g1564
Vinsert
p25527
I21
VExpressionStatement
p25528
tp25529
I1
s(g12370
I42
g12371
Vinsert
p25530
I42
VSimpleName: getMethodProxy
p25531
tp25532
I1
s(g1670
I42
g1671
Vinsert
p25533
I60
VVariableDeclarationStatement
p25534
tp25535
I2
s(g4730
I42
g4731
Vinsert
p25536
I83
VModifier: public
p25537
tp25538
I1
s(g2281
I42
g2282
Vinsert
p25539
I59
VVariableDeclarationFragment
p25540
tp25541
I1
s(g3488
I42
g3489
Vinsert
p25542
I21
VExpressionStatement
p25543
tp25544
I114
s(g861
I42
g862
Vinsert
p25545
I42
VSimpleName: assertEquals
p25546
tp25547
I1
s(g5226
I42
g5227
Vinsert
p25548
I42
VSimpleName: Sub
p25549
tp25550
I1
s(g4466
I42
g4467
Vinsert
p25551
I33
VNullLiteral
p25552
tp25553
I1
s(g8798
I42
g8799
Vinsert
p25554
I45
VStringLiteral: "However, there were other interactions with this mock:"
p25555
tp25556
I1
s(g14303
I42
g14304
Vinsert
p25557
I42
VSimpleName: list
p25558
tp25559
I1
s(g5839
I42
g5840
Vinsert
p25560
I42
VSimpleName: NoSuchMethodException
p25561
tp25562
I1
s(g10531
I42
g10532
Vinsert
p25563
I42
VSimpleName: MockitoException
p25564
tp25565
I1
s(g4911
I42
g4912
Vinsert
p25566
I42
VSimpleName: realMethod
p25567
tp25568
I1
s(g194
I42
g195
Vinsert
p25569
I42
VSimpleName: e
p25570
tp25571
I3
s(g18433
I42
g18434
Vinsert
p25572
I42
VSimpleName: defaultReturnValues
p25573
tp25574
I1
s(g4393
I42
g4394
Vinsert
p25575
I42
VSimpleName: AnotherListOfNumbers
p25576
tp25577
I1
s(g8593
I42
g8594
Vinsert
p25578
I70
VEnhancedForStatement
p25579
tp25580
I1
s(g12508
I42
g12509
Vinsert
p25581
I65
VTagElement: @return
p25582
tp25583
I1
s(g2398
I42
g2399
Vinsert
p25584
I42
VSimpleName: task
p25585
tp25586
I2
s(g12977
I42
g12978
Vinsert
p25587
I42
VSimpleName: Throwable
p25588
tp25589
I1
s(g15679
I42
g15680
Vinsert
p25590
I42
VSimpleName: shouldNotFindActualInvocationBecauseAllAreVerified
p25591
tp25592
I1
s(g11112
I42
g11113
Vinsert
p25593
I40
VQualifiedName: java.util.Arrays
p25594
tp25595
I1
s(g2949
I42
g2950
Vinsert
p25596
I44
VSingleVariableDeclaration
p25597
tp25598
I1
s(g24108
I42
g24109
Vinsert
p25599
I42
VSimpleName: setInvocationForPotentialStubbing
p25600
tp25601
I1
s(g760
I42
g761
Vinsert
p25602
I42
VSimpleName: debuggingInfo
p25603
tp25604
I1
s(g12326
I42
g12327
Vinsert
p25605
I42
VSimpleName: invocation
p25606
tp25607
I1
s(g19793
I42
g19794
Vinsert
p25608
I42
VSimpleName: classes
p25609
tp25610
I1
s(g19774
I42
g19775
Vinsert
p25611
I14
VClassInstanceCreation
p25612
tp25613
I1
s(g41
I42
g42
Vinsert
p25614
I42
VSimpleName: Class
p25615
tp25616
I1
s(g3606
I42
g3607
Vinsert
p25617
I32
VMethodInvocation
p25618
tp25619
I2
s(g4346
I42
g4347
Vinsert
p25620
I42
VSimpleName: Throwable
p25621
tp25622
I1
s(g11678
I42
g11679
Vinsert
p25623
I39
VPrimitiveType: boolean
p25624
tp25625
I2
s(g114
I42
g115
Vinsert
p25626
I43
VSimpleType: MockitoMock
p25627
tp25628
I2
s(g4077
I42
g4078
Vinsert
p25629
I42
VSimpleName: mock
p25630
tp25631
I2
s(g7253
I42
g7254
Vinsert
p25632
I42
VSimpleName: string
p25633
tp25634
I1
s(g9095
I42
g9096
Vinsert
p25635
I43
VSimpleType: Exception
p25636
tp25637
I4
s(g7371
I42
g7372
Vinsert
p25638
I42
VSimpleName: Object
p25639
tp25640
I1
s(g4461
I42
g4462
Vinsert
p25641
I42
VSimpleName: article
p25642
tp25643
I1
s(g1398
I42
g1399
Vinsert
p25644
I59
VVariableDeclarationFragment
p25645
tp25646
I1
s(g17934
I42
g17935
Vinsert
p25647
I34
VNumberLiteral: 2
p25648
tp25649
I1
s(g9666
I42
g9667
Vinsert
p25650
I42
VSimpleName: field
p25651
tp25652
I2
s(g24722
I42
g24723
Vinsert
p25653
I42
VSimpleName: T
p25654
tp25655
I6
s(g9021
I42
g9022
Vinsert
p25656
I43
VSimpleType: Class
p25657
tp25658
I2
s(g1
I42
g2
Vinsert
p25659
I57
VTypeLiteral
p25660
tp25661
I1
s(g5760
I42
g5761
Vinsert
p25662
I74
VParameterizedType: Class<?>
p25663
tp25664
I1
s(g3532
I42
g3533
Vinsert
p25665
I8
VBlock
p25666
tp25667
I5
s(g5892
I42
g5893
Vinsert
p25668
I74
VParameterizedType: List<Invocation>
p25669
tp25670
I1
s(g17574
I42
g17575
Vinsert
p25671
I42
VSimpleName: size
p25672
tp25673
I1
s(g4484
I42
g4485
Vinsert
p25674
I42
VSimpleName: tickets
p25675
tp25676
I2
s(g10623
I42
g10624
Vinsert
p25677
I74
VParameterizedType: ArrayList<InstanceField>
p25678
tp25679
I1
s(g214
I42
g215
Vinsert
p25680
I32
VMethodInvocation
p25681
tp25682
I4
s(g6387
I42
g6388
Vinsert
p25683
I57
VTypeLiteral
p25684
tp25685
I5
s(g13855
I42
g13856
Vinsert
p25686
I44
VSingleVariableDeclaration
p25687
tp25688
I30
s(g4027
I42
g4028
Vinsert
p25689
I7
VAssignment: +=
p25690
tp25691
I1
s(g20085
I42
g20086
Vinsert
p25692
I60
VVariableDeclarationStatement
p25693
tp25694
I2
s(g10772
I42
g10773
Vinsert
p25695
I43
VSimpleType: IArgumentMatcher
p25696
tp25697
I2
s(g1750
I42
g1751
Vinsert
p25698
I42
VSimpleName: loc
p25699
tp25700
I1
s(g14303
I42
g14304
Vinsert
p25701
I32
VMethodInvocation
p25702
tp25703
I1
s(g1901
I42
g1902
Vinsert
p25704
I43
VSimpleType: ReturnValues
p25705
tp25706
I1
s(g20866
I42
g20867
Vinsert
p25707
I25
VIfStatement
p25708
tp25709
I2
s(g56
I42
g57
Vinsert
p25710
I43
VSimpleType: Invocation
p25711
tp25712
I2
s(g13855
I42
g13856
Vinsert
p25713
I39
VPrimitiveType: void
p25714
tp25715
I16
s(g1939
I42
g1940
Vinsert
p25716
I8
VBlock
p25717
tp25718
I1
s(g5335
I42
g5336
Vinsert
p25719
I42
VSimpleName: Throwable
p25720
tp25721
I2
s(g342
I42
g343
Vinsert
p25722
I43
VSimpleType: PrintWriter
p25723
tp25724
I1
s(g7854
I42
g7855
Vinsert
p25725
I42
VSimpleName: invocations
p25726
tp25727
I1
s(g12304
I42
g12305
Vinsert
p25728
I43
VSimpleType: Boolean
p25729
tp25730
I2
s(g20085
I42
g20086
Vinsert
p25731
I45
VStringLiteral: "'. Examples of supported versions: 1.0.0, 1.20.123, 1.0.10-beta"
p25732
tp25733
I2
s(g1
I42
g2
Vinsert
p25734
I42
VSimpleName: getCanonicalName
p25735
tp25736
I1
s(g23569
I42
g23570
Vinsert
p25737
I42
VSimpleName: types
p25738
tp25739
I1
s(g4646
I42
g4647
Vinsert
p25740
I42
VSimpleName: OngoingStubbingImpl
p25741
tp25742
I2
s(g6695
I42
g6696
Vinsert
p25743
I76
VWildcardType: ? extends Cloneable
p25744
tp25745
I1
s(g327
I42
g328
Vinsert
p25746
I42
VSimpleName: never
p25747
tp25748
I1
s(g7544
I42
g7545
Vinsert
p25749
I25
VIfStatement
p25750
tp25751
I1
s(g4425
I42
g4426
Vinsert
p25752
I42
VSimpleName: when
p25753
tp25754
I1
s(g3725
I42
g3726
Vinsert
p25755
I33
VNullLiteral
p25756
tp25757
I1
s(g25297
I42
g25298
Vinsert
p25758
I54
VTryStatement
p25759
tp25760
I1
s(g428
I42
g429
Vinsert
p25761
I43
VSimpleType: Object
p25762
tp25763
I1
s(g24736
I42
g24737
Vinsert
p25764
I31
VMethodDeclaration
p25765
tp25766
I7
s(g2005
I42
g2006
Vinsert
p25767
I32
VMethodInvocation
p25768
tp25769
I3
s(g2105
I42
g2106
Vinsert
p25770
I42
VSimpleName: currentThread
p25771
tp25772
I1
s(g12769
I42
g12770
Vinsert
p25773
I42
VSimpleName: Object
p25774
tp25775
I7
s(g14538
I42
g14539
Vinsert
p25776
I32
VMethodInvocation
p25777
tp25778
I4
s(g13680
I42
g13681
Vinsert
p25779
I27
VInfixExpression: ||
p25780
tp25781
I1
s(g109
I42
g110
Vinsert
p25782
I25
VIfStatement
p25783
tp25784
I1
s(Vinsert
p25785
I42
VSimpleName: addAll
p25786
Vinsert
p25787
I42
VSimpleName: answers
p25788
tp25789
I1
s(g4184
I42
g4185
Vinsert
p25790
I42
VSimpleName: AdditionalMatchers
p25791
tp25792
I2
s(g1006
I42
g1007
Vinsert
p25793
I42
VSimpleName: where
p25794
tp25795
I2
s(g19400
I42
g19401
Vinsert
p25796
I45
VStringLiteral: "foo"
p25797
tp25798
I1
s(g851
I42
g852
Vinsert
p25799
I39
VPrimitiveType: void
p25800
tp25801
I1
s(Vinsert
p25802
I42
VSimpleName: getAllInvocations
p25803
Vinsert
p25804
I42
VSimpleName: InvocationMatcher
p25805
tp25806
I1
s(g5461
I42
g5462
Vinsert
p25807
I43
VSimpleType: String
p25808
tp25809
I1
s(g951
I42
g952
Vinsert
p25810
I25
VIfStatement
p25811
tp25812
I1
s(g8553
I42
g8554
Vinsert
p25813
I45
VStringLiteral: "ByMockitoWithCGLIB"
p25814
tp25815
I1
s(g8493
I42
g8494
Vinsert
p25816
I43
VSimpleType: IMockitoConfiguration
p25817
tp25818
I1
s(g21977
I42
g21978
Vinsert
p25819
I57
VTypeLiteral
p25820
tp25821
I1
s(g498
I42
g499
Vinsert
p25822
I42
VSimpleName: extraInterfaces
p25823
tp25824
I1
s(g22156
I42
g22157
Vinsert
p25825
I74
VParameterizedType: CustomMatcher<Long>
p25826
tp25827
I1
s(g7638
I42
g7639
Vinsert
p25828
I42
VSimpleName: MockingProgressImpl
p25829
tp25830
I1
s(g737
I42
g738
Vinsert
p25831
I65
VTagElement: @return
p25832
tp25833
I2
s(g6212
I42
g6213
Vinsert
p25834
I42
VSimpleName: List
p25835
tp25836
I2
s(g6574
I42
g6575
Vinsert
p25837
I57
VTypeLiteral
p25838
tp25839
I1
s(g2503
I42
g2504
Vinsert
p25840
I42
VSimpleName: context
p25841
tp25842
I1
s(g4600
I42
g4601
Vinsert
p25843
I42
VSimpleName: Test
p25844
tp25845
I1
s(g11353
I42
g11354
Vinsert
p25846
I34
VNumberLiteral: 10
p25847
tp25848
I2
s(Vinsert
p25849
I42
VSimpleName: isVerified
p25850
Vinsert
p25851
I42
VSimpleName: simpleMethodInvocation
p25852
tp25853
I1
s(g14392
I42
g14393
Vinsert
p25854
I42
VSimpleName: j
p25855
tp25856
I3
s(g1982
I42
g1983
Vinsert
p25857
I42
VSimpleName: logger
p25858
tp25859
I6
s(g4840
I42
g4841
Vinsert
p25860
I43
VSimpleType: StackTraceCleanerProvider
p25861
tp25862
I1
s(g16418
I42
g16419
Vinsert
p25863
I39
VPrimitiveType: boolean
p25864
tp25865
I1
s(g5858
I42
g5859
Vinsert
p25866
I42
VSimpleName: IInvokedMethod
p25867
tp25868
I1
s(g1962
I42
g1963
Vinsert
p25869
I78
VMarkerAnnotation
p25870
tp25871
I1
s(g5480
I42
g5481
Vinsert
p25872
I42
VSimpleName: get
p25873
tp25874
I1
s(g2881
I42
g2882
Vinsert
p25875
I44
VSingleVariableDeclaration
p25876
tp25877
I3
s(g2844
I42
g2845
Vinsert
p25878
I59
VVariableDeclarationFragment
p25879
tp25880
I2
s(g4204
I42
g4205
Vinsert
p25881
I77
VNormalAnnotation
p25882
tp25883
I1
s(g3313
I42
g3314
Vinsert
p25884
I59
VVariableDeclarationFragment
p25885
tp25886
I1
s(g493
I42
g494
Vinsert
p25887
I42
VSimpleName: oneArg
p25888
tp25889
I6
s(g2005
I42
g2006
Vinsert
p25890
I42
VSimpleName: supports_non_generic_matchers
p25891
tp25892
I1
s(g3116
I42
g3117
Vinsert
p25893
I43
VSimpleType: JUnitCore
p25894
tp25895
I2
s(g796
I42
g797
Vinsert
p25896
I60
VVariableDeclarationStatement
p25897
tp25898
I1
s(g6435
I42
g6436
Vinsert
p25899
I42
VSimpleName: expectedException
p25900
tp25901
I1
s(g9434
I42
g9435
Vinsert
p25902
I32
VMethodInvocation
p25903
tp25904
I1
s(g12890
I42
g12891
Vinsert
p25905
I42
VSimpleName: instanceFields
p25906
tp25907
I1
s(g6890
I42
g6891
Vinsert
p25908
I25
VIfStatement
p25909
tp25910
I1
s(g3390
I42
g3391
Vinsert
p25911
I42
VSimpleName: matchers
p25912
tp25913
I1
s(g8210
I42
g8211
Vinsert
p25914
I43
VSimpleType: MockitoException
p25915
tp25916
I4
s(g6781
I42
g6782
Vinsert
p25917
I78
VMarkerAnnotation
p25918
tp25919
I1
s(g3580
I42
g3581
Vinsert
p25920
I42
VSimpleName: Operations
p25921
tp25922
I2
s(g410
I42
g411
Vinsert
p25923
I42
VSimpleName: exception
p25924
tp25925
I1
s(g633
I42
g634
Vinsert
p25926
I42
VSimpleName: Test
p25927
tp25928
I1
s(g1164
I42
g1165
Vinsert
p25929
I21
VExpressionStatement
p25930
tp25931
I1
s(g12362
I42
g12363
Vinsert
p25932
I42
VSimpleName: getMock
p25933
tp25934
I1
s(g7704
I42
g7705
Vinsert
p25935
I14
VClassInstanceCreation
p25936
tp25937
I2
s(g16760
I42
g16761
Vinsert
p25938
I60
VVariableDeclarationStatement
p25939
tp25940
I1
s(g896
I42
g897
Vinsert
p25941
I43
VSimpleType: ClassNotFoundException
p25942
tp25943
I2
s(g4981
I42
g4982
Vinsert
p25944
I43
VSimpleType: MockMaker
p25945
tp25946
I1
s(g4111
I42
g4112
Vinsert
p25947
I42
VSimpleName: MockingDetails
p25948
tp25949
I1
s(g1482
I42
g1483
Vinsert
p25950
I43
VSimpleType: RegisteredInvocations
p25951
tp25952
I1
s(g6752
I42
g6753
Vinsert
p25953
I12
VCatchClause
p25954
tp25955
I1
s(g1411
I42
g1412
Vinsert
p25956
I32
VMethodInvocation
p25957
tp25958
I10
s(g4835
I42
g4836
Vinsert
p25959
I43
VSimpleType: DefaultReleaseStep
p25960
tp25961
I2
s(g5549
I42
g5550
Vinsert
p25962
I42
VSimpleName: n
p25963
tp25964
I1
s(g8131
I42
g8132
Vinsert
p25965
I45
VStringLiteral: "map"
p25966
tp25967
I2
s(g4106
I42
g4107
Vinsert
p25968
I42
VSimpleName: m
p25969
tp25970
I2
s(g15198
I42
g15199
Vinsert
p25971
I42
VSimpleName: field1Type
p25972
tp25973
I1
s(g727
I42
g728
Vinsert
p25974
I40
VQualifiedName: org.mockito.internal.stubbing.InvocationContainerImpl
p25975
tp25976
I1
s(g4800
I42
g4801
Vinsert
p25977
I60
VVariableDeclarationStatement
p25978
tp25979
I1
s(g19709
I42
g19710
Vinsert
p25980
I42
VSimpleName: mockHandler
p25981
tp25982
I1
s(g1696
I42
g1697
Vinsert
p25983
I76
VWildcardType: ?
p25984
tp25985
I3
s(g2667
I42
g2668
Vinsert
p25986
I83
VModifier: public
p25987
tp25988
I2
s(g6695
I42
g6696
Vinsert
p25989
I74
VParameterizedType: Set<Number>
p25990
tp25991
I1
s(g8729
I42
g8730
Vinsert
p25992
I42
VSimpleName: testName
p25993
tp25994
I1
s(g2908
I42
g2909
Vinsert
p25995
I32
VMethodInvocation
p25996
tp25997
I1
s(Vinsert
p25998
I42
VSimpleName: varargs
p25999
Vinsert
p26000
I42
VSimpleName: verify
p26001
tp26002
I1
s(g916
I42
g917
Vinsert
p26003
I42
VSimpleName: Annotation
p26004
tp26005
I1
s(g13755
I42
g13756
Vinsert
p26006
I40
VQualifiedName: state.sig
p26007
tp26008
I1
s(g1886
I42
g1887
Vinsert
p26009
I61
VWhileStatement
p26010
tp26011
I1
s(g16902
I42
g16903
Vinsert
p26012
I43
VSimpleType: MethodInterceptor
p26013
tp26014
I2
s(g16592
I42
g16593
Vinsert
p26015
I42
VSimpleName: StackTraceFilter
p26016
tp26017
I4
s(g1924
I42
g1925
Vinsert
p26018
I39
VPrimitiveType: int
p26019
tp26020
I1
s(g1239
I42
g1240
Vinsert
p26021
I42
VSimpleName: InvocationInfo
p26022
tp26023
I1
s(g936
I42
g937
Vinsert
p26024
I44
VSingleVariableDeclaration
p26025
tp26026
I1
s(Vinsert
p26027
I42
VSimpleName: equals
p26028
Vinsert
p26029
I42
VSimpleName: invocationOf
p26030
tp26031
I1
s(g21691
I42
g21692
Vinsert
p26032
I85
VDimension
p26033
tp26034
I5
s(g1775
I42
g1776
Vinsert
p26035
I39
VPrimitiveType: void
p26036
tp26037
I1
s(g1765
I42
g1766
Vinsert
p26038
I27
VInfixExpression: &&
p26039
tp26040
I4
s(g7313
I42
g7314
Vinsert
p26041
I8
VBlock
p26042
tp26043
I1
s(g7221
I42
g7222
Vinsert
p26044
I59
VVariableDeclarationFragment
p26045
tp26046
I2
s(g1159
I42
g1160
Vinsert
p26047
I83
VModifier: public
p26048
tp26049
I1
s(g337
I42
g338
Vinsert
p26050
I40
VQualifiedName: System.out
p26051
tp26052
I9
s(g3155
I42
g3156
Vinsert
p26053
I8
VBlock
p26054
tp26055
I1
s(g7337
I42
g7338
Vinsert
p26056
I83
VModifier: public
p26057
tp26058
I1
s(g1199
I42
g1200
Vinsert
p26059
I36
VParenthesizedExpression
p26060
tp26061
I2
s(g488
I42
g489
Vinsert
p26062
I45
VStringLiteral: "Exception type cannot be null"
p26063
tp26064
I1
s(g901
I42
g902
Vinsert
p26065
I42
VSimpleName: listener
p26066
tp26067
I1
s(g1954
I42
g1955
Vinsert
p26068
I43
VSimpleType: Class
p26069
tp26070
I1
s(g20213
I42
g20214
Vinsert
p26071
I31
VMethodDeclaration
p26072
tp26073
I2
s(g1795
I42
g1796
Vinsert
p26074
I43
VSimpleType: NullPointerException
p26075
tp26076
I1
s(g3170
I42
g3171
Vinsert
p26077
I42
VSimpleName: Localized
p26078
tp26079
I1
s(g1204
I42
g1205
Vinsert
p26080
I60
VVariableDeclarationStatement
p26081
tp26082
I2
s(g3688
I42
g3689
Vinsert
p26083
I59
VVariableDeclarationFragment
p26084
tp26085
I8
s(g4362
I42
g4363
Vinsert
p26086
I32
VMethodInvocation
p26087
tp26088
I3
s(g4502
I42
g4503
Vinsert
p26089
I34
VNumberLiteral: 2
p26090
tp26091
I1
s(g5892
I42
g5893
Vinsert
p26092
I43
VSimpleType: List
p26093
tp26094
I1
s(g209
I42
g210
Vinsert
p26095
I32
VMethodInvocation
p26096
tp26097
I44
s(g921
I42
g922
Vinsert
p26098
I42
VSimpleName: unused
p26099
tp26100
I1
s(g6162
I42
g6163
Vinsert
p26101
I40
VQualifiedName: successors.next
p26102
tp26103
I1
s(g6566
I42
g6567
Vinsert
p26104
I42
VSimpleName: List
p26105
tp26106
I1
s(g3178
I42
g3179
Vinsert
p26107
I80
VMemberValuePair
p26108
tp26109
I1
s(g1513
I42
g1514
Vinsert
p26110
I8
VBlock
p26111
tp26112
I1
s(g11336
I42
g11337
Vinsert
p26113
I32
VMethodInvocation
p26114
tp26115
I1
s(g2921
I42
g2922
Vinsert
p26116
I42
VSimpleName: getTestName
p26117
tp26118
I1
s(g3468
I42
g3469
Vinsert
p26119
I42
VSimpleName: Set
p26120
tp26121
I1
s(g3856
I42
g3857
Vinsert
p26122
I39
VPrimitiveType: void
p26123
tp26124
I2
s(g871
I42
g872
Vinsert
p26125
I42
VSimpleName: stubbings
p26126
tp26127
I1
s(g11423
I42
g11424
Vinsert
p26128
I42
VSimpleName: getConfig
p26129
tp26130
I1
s(g12390
I42
g12391
Vinsert
p26131
I43
VSimpleType: NoSuchMethodException
p26132
tp26133
I1
s(g3856
I42
g3857
Vinsert
p26134
I83
VModifier: final
p26135
tp26136
I2
s(g18331
I42
g18332
Vinsert
p26137
I42
VSimpleName: NoClassDefFoundError
p26138
tp26139
I1
s(g3257
I42
g3258
Vinsert
p26140
I2
VArrayAccess
p26141
tp26142
I1
s(g6111
I42
g6112
Vinsert
p26143
I59
VVariableDeclarationFragment
p26144
tp26145
I1
s(g618
I42
g619
Vinsert
p26146
I39
VPrimitiveType: void
p26147
tp26148
I1
s(g14303
I42
g14304
Vinsert
p26149
I42
VSimpleName: Mockito
p26150
tp26151
I1
s(g5781
I42
g5782
Vinsert
p26152
I42
VSimpleName: RememberingListener
p26153
tp26154
I2
s(g1954
I42
g1955
Vinsert
p26155
I42
VSimpleName: MockitoSpy
p26156
tp26157
I1
s(g1642
I42
g1643
Vinsert
p26158
I42
VSimpleName: Stubbing
p26159
tp26160
I1
s(g717
I42
g718
Vinsert
p26161
I43
VSimpleType: StringList
p26162
tp26163
I1
s(g5717
I42
g5718
Vinsert
p26164
I42
VSimpleName: e
p26165
tp26166
I1
s(g7129
I42
g7130
Vinsert
p26167
I39
VPrimitiveType: void
p26168
tp26169
I1
s(g9649
I42
g9650
Vinsert
p26170
I42
VSimpleName: spy
p26171
tp26172
I3
s(g9053
I42
g9054
Vinsert
p26173
I43
VSimpleType: Contains
p26174
tp26175
I1
s(g2788
I42
g2789
Vinsert
p26176
I42
VSimpleName: unusedStubs
p26177
tp26178
I2
s(g6815
I42
g6816
Vinsert
p26179
I42
VSimpleName: DefaultMockitoSessionBuilder
p26180
tp26181
I2
s(g3326
I42
g3327
Vinsert
p26182
I42
VSimpleName: shouldDetectUnusedStubbingWhenPrinting
p26183
tp26184
I1
s(g8160
I42
g8161
Vinsert
p26185
I42
VSimpleName: RETURNS_DEEP_STUBS
p26186
tp26187
I1
s(g7329
I42
g7330
Vinsert
p26188
I44
VSingleVariableDeclaration
p26189
tp26190
I1
s(g5017
I42
g5018
Vinsert
p26191
I59
VVariableDeclarationFragment
p26192
tp26193
I2
s(g3896
I42
g3897
Vinsert
p26194
I42
VSimpleName: timeout
p26195
tp26196
I1
s(g8655
I42
g8656
Vinsert
p26197
I43
VSimpleType: Class
p26198
tp26199
I1
s(g498
I42
g499
Vinsert
p26200
I76
VWildcardType: ?
p26201
tp26202
I1
s(g2175
I42
g2176
Vinsert
p26203
I43
VSimpleType: NotAMockException
p26204
tp26205
I1
s(g2775
I42
g2776
Vinsert
p26206
I43
VSimpleType: ReturnsGenericDeepStubsTest
p26207
tp26208
I1
s(g2518
I42
g2519
Vinsert
p26209
I32
VMethodInvocation
p26210
tp26211
I1
s(g946
I42
g947
Vinsert
p26212
I42
VSimpleName: matchersPrinter
p26213
tp26214
I2
s(g8862
I42
g8863
Vinsert
p26215
I42
VSimpleName: c
p26216
tp26217
I2
s(g11099
I42
g11100
Vinsert
p26218
I42
VSimpleName: matches
p26219
tp26220
I1
s(g10802
I42
g10803
Vinsert
p26221
I59
VVariableDeclarationFragment
p26222
tp26223
I1
s(g22136
I42
g22137
Vinsert
p26224
I43
VSimpleType: ConditionalStackTraceFilter
p26225
tp26226
I3
s(g628
I42
g629
Vinsert
p26227
I42
VSimpleName: fields
p26228
tp26229
I1
s(g19217
I42
g19218
Vinsert
p26230
I43
VSimpleType: IMethods
p26231
tp26232
I3
s(g488
I42
g489
Vinsert
p26233
I33
VNullLiteral
p26234
tp26235
I2
s(g6350
I42
g6351
Vinsert
p26236
I32
VMethodInvocation
p26237
tp26238
I4
s(Vinsert
p26239
I42
VSimpleName: toTraceArray
p26240
Vinsert
p26241
I45
VStringLiteral: "org.mockito.internal.runners.Runner"
p26242
tp26243
I1
s(g8195
I42
g8196
Vinsert
p26244
I43
VSimpleType: Throwable
p26245
tp26246
I1
s(g7633
I42
g7634
Vinsert
p26247
I32
VMethodInvocation
p26248
tp26249
I4
s(g1670
I42
g1671
Vinsert
p26250
I32
VMethodInvocation
p26251
tp26252
I12
s(g2457
I42
g2458
Vinsert
p26253
I7
VAssignment: =
p26254
tp26255
I1
s(g5744
I42
g5745
Vinsert
p26256
I83
VModifier: public
p26257
tp26258
I3
s(g2070
I42
g2071
Vinsert
p26259
I21
VExpressionStatement
p26260
tp26261
I10
s(g4590
I42
g4591
Vinsert
p26262
I66
VTextElement: Will try transform the field in a spy as with <code>Mockito.spy()</code>.
p26263
tp26264
I1
s(g10851
I42
g10852
Vinsert
p26265
I25
VIfStatement
p26266
tp26267
I1
s(g3308
I42
g3309
Vinsert
p26268
I43
VSimpleType: Invocation
p26269
tp26270
I2
s(g7221
I42
g7222
Vinsert
p26271
I42
VSimpleName: lock
p26272
tp26273
I1
s(g10311
I42
g10312
Vinsert
p26274
I42
VSimpleName: list
p26275
tp26276
I3
s(g4382
I42
g4383
Vinsert
p26277
I14
VClassInstanceCreation
p26278
tp26279
I1
s(g4282
I42
g4283
Vinsert
p26280
I42
VSimpleName: InstantiatorProvider
p26281
tp26282
I1
s(g2296
I42
g2297
Vinsert
p26283
I42
VSimpleName: strategy
p26284
tp26285
I2
s(g16823
I42
g16824
Vinsert
p26286
I43
VSimpleType: Boo
p26287
tp26288
I1
s(g5067
I42
g5068
Vinsert
p26289
I43
VSimpleType: FluentVerificationMode
p26290
tp26291
I1
s(g5544
I42
g5545
Vinsert
p26292
I42
VSimpleName: Class
p26293
tp26294
I4
s(g941
I42
g942
Vinsert
p26295
I43
VSimpleType: Class
p26296
tp26297
I1
s(g3919
I42
g3920
Vinsert
p26298
I42
VSimpleName: testShouldRemoveCommonStackTracePart
p26299
tp26300
I1
s(g593
I42
g594
Vinsert
p26301
I42
VSimpleName: mockitoStubber
p26302
tp26303
I1
s(g12193
I42
g12194
Vinsert
p26304
I42
VSimpleName: field
p26305
tp26306
I6
s(g2147
I42
g2148
Vinsert
p26307
I8
VBlock
p26308
tp26309
I2
s(g4835
I42
g4836
Vinsert
p26310
I42
VSimpleName: steps
p26311
tp26312
I1
s(g16328
I42
g16329
Vinsert
p26313
I42
VSimpleName: Exception
p26314
tp26315
I2
s(g8011
I42
g8012
Vinsert
p26316
I42
VSimpleName: unstubbed
p26317
tp26318
I1
s(g2866
I42
g2867
Vinsert
p26319
I34
VNumberLiteral: 1
p26320
tp26321
I1
s(g9821
I42
g9822
Vinsert
p26322
I85
VDimension
p26323
tp26324
I2
s(g1919
I42
g1920
Vinsert
p26325
I42
VSimpleName: String
p26326
tp26327
I1
s(g14420
I42
g14421
Vinsert
p26328
I42
VSimpleName: get
p26329
tp26330
I1
s(g4354
I42
g4355
Vinsert
p26331
I59
VVariableDeclarationFragment
p26332
tp26333
I2
s(g11572
I42
g11573
Vinsert
p26334
I43
VSimpleType: Method
p26335
tp26336
I1
s(g11718
I42
g11719
Vinsert
p26337
I43
VSimpleType: List
p26338
tp26339
I1
s(g322
I42
g323
Vinsert
p26340
I43
VSimpleType: FakeList
p26341
tp26342
I1
s(g3714
I42
g3715
Vinsert
p26343
I42
VSimpleName: shouldPrintArgumentsInMultilinesWhenGetsTooBig
p26344
tp26345
I1
s(g302
I42
g303
Vinsert
p26346
I74
VParameterizedType: HashSet<Field>
p26347
tp26348
I1
s(g2775
I42
g2776
Vinsert
p26349
I42
VSimpleName: ReturnsGenericDeepStubsTest
p26350
tp26351
I1
s(g1716
I42
g1717
Vinsert
p26352
I42
VSimpleName: arguments
p26353
tp26354
I1
s(g1259
I42
g1260
Vinsert
p26355
I42
VSimpleName: getMatcherApplicationStrategyFor
p26356
tp26357
I1
s(g7221
I42
g7222
Vinsert
p26358
I21
VExpressionStatement
p26359
tp26360
I2
s(g12213
I42
g12214
Vinsert
p26361
I42
VSimpleName: qualifiedNameSubstring
p26362
tp26363
I2
s(g114
I42
g115
Vinsert
p26364
I8
VBlock
p26365
tp26366
I2
s(g23619
I42
g23620
Vinsert
p26367
I45
VStringLiteral: "Invocation differs from actual:"
p26368
tp26369
I1
s(g89
I42
g90
Vinsert
p26370
I43
VSimpleType: InvocationBuilder
p26371
tp26372
I1
s(g6098
I42
g6099
Vinsert
p26373
I42
VSimpleName: Invocation
p26374
tp26375
I1
s(g6781
I42
g6782
Vinsert
p26376
I42
VSimpleName: shouldSearchAndFindOnlyAfterLastStrictlyVerified
p26377
tp26378
I1
s(g5067
I42
g5068
Vinsert
p26379
I44
VSingleVariableDeclaration
p26380
tp26381
I1
s(g5821
I42
g5822
Vinsert
p26382
I38
VPrefixExpression: !
p26383
tp26384
I1
s(g1665
I42
g1666
Vinsert
p26385
I42
VSimpleName: toBeFilled
p26386
tp26387
I1
s(g1024
I42
g1025
Vinsert
p26388
I42
VSimpleName: instance
p26389
tp26390
I1
s(g4817
I42
g4818
Vinsert
p26391
I59
VVariableDeclarationFragment
p26392
tp26393
I3
s(Vinsert
p26394
I42
VSimpleName: toString
p26395
Vinsert
p26396
I40
VQualifiedName: types.length
p26397
tp26398
I1
s(g1164
I42
g1165
Vinsert
p26399
I32
VMethodInvocation
p26400
tp26401
I1
s(g12769
I42
g12770
Vinsert
p26402
I7
VAssignment: =
p26403
tp26404
I6
s(g5067
I42
g5068
Vinsert
p26405
I32
VMethodInvocation
p26406
tp26407
I2
s(g1393
I42
g1394
Vinsert
p26408
I14
VClassInstanceCreation
p26409
tp26410
I2
s(g6276
I42
g6277
Vinsert
p26411
I57
VTypeLiteral
p26412
tp26413
I2
s(g15733
I42
g15734
Vinsert
p26414
I42
VSimpleName: printCommonInfos
p26415
tp26416
I1
s(g2227
I42
g2228
Vinsert
p26417
I42
VSimpleName: OngoingStubbing
p26418
tp26419
I1
s(g6411
I42
g6412
Vinsert
p26420
I44
VSingleVariableDeclaration
p26421
tp26422
I8
s(g17860
I42
g17861
Vinsert
p26423
I42
VSimpleName: getReturnValues
p26424
tp26425
I1
s(g6935
I42
g6936
Vinsert
p26426
I42
VSimpleName: Message
p26427
tp26428
I1
s(g5138
I42
g5139
Vinsert
p26429
I42
VSimpleName: sv
p26430
tp26431
I2
s(g2881
I42
g2882
Vinsert
p26432
I42
VSimpleName: atLeastMode
p26433
tp26434
I1
s(g16587
I42
g16588
Vinsert
p26435
I42
VSimpleName: type
p26436
tp26437
I2
s(g312
I42
g313
Vinsert
p26438
I42
VSimpleName: someMethod
p26439
tp26440
I2
s(g10929
I42
g10930
Vinsert
p26441
I42
VSimpleName: Context
p26442
tp26443
I2
s(g6321
I42
g6322
Vinsert
p26444
I32
VMethodInvocation
p26445
tp26446
I29
s(g3812
I42
g3813
Vinsert
p26447
I5
VArrayType: Object[]
p26448
tp26449
I1
s(g2281
I42
g2282
Vinsert
p26450
I22
VFieldAccess
p26451
tp26452
I1
s(g5393
I42
g5394
Vinsert
p26453
I32
VMethodInvocation
p26454
tp26455
I47
s(g1523
I42
g1524
Vinsert
p26456
I14
VClassInstanceCreation
p26457
tp26458
I2
s(g1706
I42
g1707
Vinsert
p26459
I42
VSimpleName: Exception
p26460
tp26461
I1
s(Vinsert
p26462
I42
VSimpleName: filter
p26463
Vinsert
p26464
I42
VSimpleName: Override
p26465
tp26466
I1
s(g18914
I42
g18915
Vinsert
p26467
I45
VStringLiteral: "simpleMethod"
p26468
tp26469
I1
s(g16592
I42
g16593
Vinsert
p26470
I60
VVariableDeclarationStatement
p26471
tp26472
I4
s(g10279
I42
g10280
Vinsert
p26473
I42
VSimpleName: orderedVerify
p26474
tp26475
I1
s(g2866
I42
g2867
Vinsert
p26476
I42
VSimpleName: actualIndex
p26477
tp26478
I1
s(g20357
I42
g20358
Vinsert
p26479
I60
VVariableDeclarationStatement
p26480
tp26481
I1
s(g866
I42
g867
Vinsert
p26482
I42
VSimpleName: mockOne
p26483
tp26484
I5
s(g9306
I42
g9307
Vinsert
p26485
I42
VSimpleName: VerificationModeDecoder
p26486
tp26487
I1
s(g10091
I42
g10092
Vinsert
p26488
I43
VSimpleType: CodeEmitter
p26489
tp26490
I1
s(g4168
I42
g4169
Vinsert
p26491
I83
VModifier: public
p26492
tp26493
I1
s(g6988
I42
g6989
Vinsert
p26494
I42
VSimpleName: simpleMethodInvocation
p26495
tp26496
I1
s(g12715
I42
g12716
Vinsert
p26497
I42
VSimpleName: proxy
p26498
tp26499
I2
s(g4577
I42
g4578
Vinsert
p26500
I76
VWildcardType: ?
p26501
tp26502
I2
s(g8483
I42
g8484
Vinsert
p26503
I8
VBlock
p26504
tp26505
I1
s(g7817
I42
g7818
Vinsert
p26506
I83
VModifier: public
p26507
tp26508
I2
s(g3298
I42
g3299
Vinsert
p26509
I39
VPrimitiveType: void
p26510
tp26511
I1
s(g5416
I42
g5417
Vinsert
p26512
I42
VSimpleName: willCallRealMethod
p26513
tp26514
I2
s(g4497
I42
g4498
Vinsert
p26515
I34
VNumberLiteral: 1
p26516
tp26517
I1
s(g20230
I42
g20231
Vinsert
p26518
I60
VVariableDeclarationStatement
p26519
tp26520
I3
s(g6502
I42
g6503
Vinsert
p26521
I32
VMethodInvocation
p26522
tp26523
I2
s(g12553
I42
g12554
Vinsert
p26524
I42
VSimpleName: indexes
p26525
tp26526
I1
s(g3537
I42
g3538
Vinsert
p26527
I57
VTypeLiteral
p26528
tp26529
I1
s(Vinsert
p26530
I42
VSimpleName: close
p26531
Vinsert
p26532
I42
VSimpleName: ByteArrayOutputStream
p26533
tp26534
I1
s(g9560
I42
g9561
Vinsert
p26535
I59
VVariableDeclarationFragment
p26536
tp26537
I2
s(g8894
I42
g8895
Vinsert
p26538
I57
VTypeLiteral
p26539
tp26540
I1
s(g109
I42
g110
Vinsert
p26541
I42
VSimpleName: RunWith
p26542
tp26543
I1
s(g6
I42
g7
Vinsert
p26544
I43
VSimpleType: InvocationOnMock
p26545
tp26546
I6
s(g15804
I42
g15805
Vinsert
p26547
I42
VSimpleName: Test
p26548
tp26549
I1
s(Vinsert
p26550
I42
VSimpleName: verify
p26551
Vinsert
p26552
I42
VSimpleName: exactNumberOfInvocations
p26553
tp26554
I1
s(g19009
I42
g19010
Vinsert
p26555
I42
VSimpleName: name
p26556
tp26557
I1
s(g6711
I42
g6712
Vinsert
p26558
I59
VVariableDeclarationFragment
p26559
tp26560
I1
s(Vinsert
p26561
I42
VSimpleName: verify
p26562
Vinsert
p26563
I43
VSimpleType: Exception
p26564
tp26565
I4
s(g9354
I42
g9355
Vinsert
p26566
I52
VThisExpression
p26567
tp26568
I2
s(g468
I42
g469
Vinsert
p26569
I14
VClassInstanceCreation
p26570
tp26571
I1
s(g3782
I42
g3783
Vinsert
p26572
I42
VSimpleName: logger
p26573
tp26574
I1
s(g6468
I42
g6469
Vinsert
p26575
I43
VSimpleType: CloneableInterface
p26576
tp26577
I2
s(g9053
I42
g9054
Vinsert
p26578
I78
VMarkerAnnotation
p26579
tp26580
I1
s(g18840
I42
g18841
Vinsert
p26581
I43
VSimpleType: String
p26582
tp26583
I5
s(g4585
I42
g4586
Vinsert
p26584
I40
VQualifiedName: org.mockito.internal.invocation.InvocationMarker
p26585
tp26586
I2
s(g17574
I42
g17575
Vinsert
p26587
I42
VSimpleName: answers
p26588
tp26589
I2
s(g9721
I42
g9722
Vinsert
p26590
I44
VSingleVariableDeclaration
p26591
tp26592
I2
s(g2271
I42
g2272
Vinsert
p26593
I54
VTryStatement
p26594
tp26595
I1
s(g2815
I42
g2816
Vinsert
p26596
I59
VVariableDeclarationFragment
p26597
tp26598
I2
s(g11214
I42
g11215
Vinsert
p26599
I8
VBlock
p26600
tp26601
I2
s(g11686
I42
g11687
Vinsert
p26602
I27
VInfixExpression: ==
p26603
tp26604
I1
s(g1853
I42
g1854
Vinsert
p26605
I41
VReturnStatement
p26606
tp26607
I1
s(g6013
I42
g6014
Vinsert
p26608
I42
VSimpleName: Exception
p26609
tp26610
I3
s(g24736
I42
g24737
Vinsert
p26611
I8
VBlock
p26612
tp26613
I7
s(g508
I42
g509
Vinsert
p26614
I42
VSimpleName: isEmpty
p26615
tp26616
I1
s(Vinsert
p26617
I42
VSimpleName: add
p26618
Vinsert
p26619
I42
VSimpleName: MockitoListener
p26620
tp26621
I3
s(g681
I42
g682
Vinsert
p26622
I3
VArrayCreation
p26623
tp26624
I1
s(g6008
I42
g6009
Vinsert
p26625
I43
VSimpleType: String
p26626
tp26627
I1
s(g16269
I42
g16270
Vinsert
p26628
I23
VFieldDeclaration
p26629
tp26630
I1
s(g7472
I42
g7473
Vinsert
p26631
I42
VSimpleName: getExtraInterfaces
p26632
tp26633
I1
s(g26561
I42
g26562
Vinsert
p26634
I42
VSimpleName: shouldReportWantedButNotInvoked
p26635
tp26636
I1
s(g3688
I42
g3689
Vinsert
p26637
I40
VQualifiedName: org.mockito.Mockito.mock
p26638
tp26639
I1
s(g9706
I42
g9707
Vinsert
p26640
I43
VSimpleType: SelfDescribing
p26641
tp26642
I2
s(g6162
I42
g6163
Vinsert
p26643
I27
VInfixExpression: ||
p26644
tp26645
I1
s(g4393
I42
g4394
Vinsert
p26646
I42
VSimpleName: assertThat
p26647
tp26648
I2
s(g9100
I42
g9101
Vinsert
p26649
I43
VSimpleType: UnsupportedOperationException
p26650
tp26651
I1
s(g14150
I42
g14151
Vinsert
p26652
I42
VSimpleName: out
p26653
tp26654
I1
s(g553
I42
g554
Vinsert
p26655
I45
VStringLiteral: "\u005cn"
p26656
tp26657
I12
s(g2723
I42
g2724
Vinsert
p26658
I42
VSimpleName: Invocation
p26659
tp26660
I10
s(g3165
I42
g3166
Vinsert
p26661
I42
VSimpleName: MockCreationSettings
p26662
tp26663
I1
s(Vinsert
p26664
I42
VSimpleName: getSimpleName
p26665
Vinsert
p26666
I74
VParameterizedType: Class<?>
p26667
tp26668
I2
s(g3468
I42
g3469
Vinsert
p26669
I43
VSimpleType: HashSet
p26670
tp26671
I2
s(g10963
I42
g10964
Vinsert
p26672
I42
VSimpleName: match
p26673
tp26674
I1
s(g16291
I42
g16292
Vinsert
p26675
I59
VVariableDeclarationFragment
p26676
tp26677
I2
s(g3078
I42
g3079
Vinsert
p26678
I42
VSimpleName: vmName2
p26679
tp26680
I1
s(g901
I42
g902
Vinsert
p26681
I42
VSimpleName: Invocation
p26682
tp26683
I1
s(g6677
I42
g6678
Vinsert
p26684
I74
VParameterizedType: Class<?>
p26685
tp26686
I1
s(g3570
I42
g3571
Vinsert
p26687
I42
VSimpleName: ReturnsGenericDeepStubs
p26688
tp26689
I1
s(g5335
I42
g5336
Vinsert
p26690
I53
VThrowStatement
p26691
tp26692
I1
s(g8388
I42
g8389
Vinsert
p26693
I42
VSimpleName: line
p26694
tp26695
I1
s(g3308
I42
g3309
Vinsert
p26696
I60
VVariableDeclarationStatement
p26697
tp26698
I4
s(g5717
I42
g5718
Vinsert
p26699
I43
VSimpleType: MockVerificationAssertionError
p26700
tp26701
I1
s(g262
I42
g263
Vinsert
p26702
I8
VBlock
p26703
tp26704
I3
s(g24000
I42
g24001
Vinsert
p26705
I56
VTypeDeclarationStatement
p26706
tp26707
I2
s(g5378
I42
g5379
Vinsert
p26708
I42
VSimpleName: shouldRun
p26709
tp26710
I1
s(g6363
I42
g6364
Vinsert
p26711
I42
VSimpleName: Incubating
p26712
tp26713
I1
s(g14792
I42
g14793
Vinsert
p26714
I34
VNumberLiteral: 1
p26715
tp26716
I4
s(g10651
I42
g10652
Vinsert
p26717
I43
VSimpleType: IMethods
p26718
tp26719
I1
s(g11423
I42
g11424
Vinsert
p26720
I79
VSingleMemberAnnotation
p26721
tp26722
I1
s(g8353
I42
g8354
Vinsert
p26723
I83
VModifier: final
p26724
tp26725
I1
s(Vinsert
p26726
I42
VSimpleName: newInstance
p26727
Vinsert
p26728
I42
VSimpleName: method
p26729
tp26730
I1
s(g593
I42
g594
Vinsert
p26731
I32
VMethodInvocation
p26732
tp26733
I2
s(g1760
I42
g1761
Vinsert
p26734
I43
VSimpleType: FieldGetter
p26735
tp26736
I1
s(g4231
I42
g4232
Vinsert
p26737
I42
VSimpleName: list
p26738
tp26739
I15
s(g7258
I42
g7259
Vinsert
p26740
I59
VVariableDeclarationFragment
p26741
tp26742
I1
s(g21537
I42
g21538
Vinsert
p26743
I43
VSimpleType: T
p26744
tp26745
I3
s(g1642
I42
g1643
Vinsert
p26746
I42
VSimpleName: s
p26747
tp26748
I2
s(g3395
I42
g3396
Vinsert
p26749
I27
VInfixExpression: ==
p26750
tp26751
I1
s(g405
I42
g406
Vinsert
p26752
I8
VBlock
p26753
tp26754
I1
s(g5810
I42
g5811
Vinsert
p26755
I59
VVariableDeclarationFragment
p26756
tp26757
I1
s(g8160
I42
g8161
Vinsert
p26758
I42
VSimpleName: should_not_raise_a_mockito_exception_about_serialization_when_accessing_deep_stub
p26759
tp26760
I1
s(g1079
I42
g1080
Vinsert
p26761
I32
VMethodInvocation
p26762
tp26763
I1
s(g6247
I42
g6248
Vinsert
p26764
I42
VSimpleName: Object
p26765
tp26766
I1
s(g11066
I42
g11067
Vinsert
p26767
I32
VMethodInvocation
p26768
tp26769
I11
s(g16067
I42
g16068
Vinsert
p26770
I42
VSimpleName: HasStackTrace
p26771
tp26772
I1
s(g3178
I42
g3179
Vinsert
p26773
I42
VSimpleName: AssertionError
p26774
tp26775
I1
s(g7329
I42
g7330
Vinsert
p26776
I42
VSimpleName: Object
p26777
tp26778
I2
s(g12694
I42
g12695
Vinsert
p26779
I42
VSimpleName: short_lived_classloader
p26780
tp26781
I1
s(g4944
I42
g4945
Vinsert
p26782
I45
VStringLiteral: "  "
p26783
tp26784
I2
s(g13540
I42
g13541
Vinsert
p26785
I44
VSingleVariableDeclaration
p26786
tp26787
I9
s(g6801
I42
g6802
Vinsert
p26788
I45
VStringLiteral: "\u005cnshould exist somewhere here:\u005cn"
p26789
tp26790
I1
s(g8388
I42
g8389
Vinsert
p26791
I60
VVariableDeclarationStatement
p26792
tp26793
I1
s(g6316
I42
g6317
Vinsert
p26794
I42
VSimpleName: OngoingStubbing
p26795
tp26796
I1
s(g6124
I42
g6125
Vinsert
p26797
I32
VMethodInvocation
p26798
tp26799
I25
s(g11877
I42
g11878
Vinsert
p26800
I60
VVariableDeclarationStatement
p26801
tp26802
I1
s(g12665
I42
g12666
Vinsert
p26803
I42
VSimpleName: suffix
p26804
tp26805
I1
s(g4709
I42
g4710
Vinsert
p26806
I42
VSimpleName: VerificationStartedListener
p26807
tp26808
I1
s(g2369
I42
g2370
Vinsert
p26809
I14
VClassInstanceCreation
p26810
tp26811
I2
s(g3011
I42
g3012
Vinsert
p26812
I42
VSimpleName: o1
p26813
tp26814
I1
s(g23051
I42
g23052
Vinsert
p26815
I42
VSimpleName: Test
p26816
tp26817
I1
s(g13053
I42
g13054
Vinsert
p26818
I40
VQualifiedName: java.io.Serializable
p26819
tp26820
I1
s(g7785
I42
g7786
Vinsert
p26821
I42
VSimpleName: params1
p26822
tp26823
I1
s(g3441
I42
g3442
Vinsert
p26824
I7
VAssignment: =
p26825
tp26826
I1
s(g2190
I42
g2191
Vinsert
p26827
I24
VForStatement
p26828
tp26829
I3
s(g8414
I42
g8415
Vinsert
p26830
I57
VTypeLiteral
p26831
tp26832
I1
s(g8226
I42
g8227
Vinsert
p26833
I42
VSimpleName: assertFalse
p26834
tp26835
I1
s(g2248
I42
g2249
Vinsert
p26836
I32
VMethodInvocation
p26837
tp26838
I1
s(g518
I42
g519
Vinsert
p26839
I42
VSimpleName: elements
p26840
tp26841
I2
s(g8237
I42
g8238
Vinsert
p26842
I27
VInfixExpression: +
p26843
tp26844
I3
s(g1688
I42
g1689
Vinsert
p26845
I43
VSimpleType: Answer
p26846
tp26847
I2
s(g2118
I42
g2119
Vinsert
p26848
I21
VExpressionStatement
p26849
tp26850
I1
s(g3131
I42
g3132
Vinsert
p26851
I60
VVariableDeclarationStatement
p26852
tp26853
I1
s(g11243
I42
g11244
Vinsert
p26854
I42
VSimpleName: Throwable
p26855
tp26856
I1
s(g6184
I42
g6185
Vinsert
p26857
I42
VSimpleName: Exceptions
p26858
tp26859
I1
s(g12226
I42
g12227
Vinsert
p26860
I42
VSimpleName: f
p26861
tp26862
I1
s(g1790
I42
g1791
Vinsert
p26863
I25
VIfStatement
p26864
tp26865
I1
s(g2286
I42
g2287
Vinsert
p26866
I40
VQualifiedName: org.mockito.plugins.AnnotationEngine
p26867
tp26868
I1
s(g8030
I42
g8031
Vinsert
p26869
I74
VParameterizedType: List<Verifier>
p26870
tp26871
I4
s(g3914
I42
g3915
Vinsert
p26872
I78
VMarkerAnnotation
p26873
tp26874
I1
s(g4638
I42
g4639
Vinsert
p26875
I43
VSimpleType: String
p26876
tp26877
I1
s(g15881
I42
g15882
Vinsert
p26878
I45
VStringLiteral: "\u005cn"
p26879
tp26880
I4
s(g1059
I42
g1060
Vinsert
p26881
I44
VSingleVariableDeclaration
p26882
tp26883
I3
s(g11757
I42
g11758
Vinsert
p26884
I8
VBlock
p26885
tp26886
I4
s(g11043
I42
g11044
Vinsert
p26887
I42
VSimpleName: getPlugins
p26888
tp26889
I1
s(g7321
I42
g7322
Vinsert
p26890
I25
VIfStatement
p26891
tp26892
I2
s(g12427
I42
g12428
Vinsert
p26893
I32
VMethodInvocation
p26894
tp26895
I2
s(g5426
I42
g5427
Vinsert
p26896
I8
VBlock
p26897
tp26898
I1
s(g1059
I42
g1060
Vinsert
p26899
I42
VSimpleName: Invocation
p26900
tp26901
I5
s(g8916
I42
g8917
Vinsert
p26902
I42
VSimpleName: MockFactory
p26903
tp26904
I1
s(g11956
I42
g11957
Vinsert
p26905
I45
VStringLiteral: "45"
p26906
tp26907
I1
s(Vinsert
p26908
I42
VSimpleName: verify
p26909
Vinsert
p26910
I42
VSimpleName: Ignore
p26911
tp26912
I1
s(g8593
I42
g8594
Vinsert
p26913
I42
VSimpleName: ArrayList
p26914
tp26915
I1
s(g5159
I42
g5160
Vinsert
p26916
I8
VBlock
p26917
tp26918
I1
s(g12809
I42
g12810
Vinsert
p26919
I32
VMethodInvocation
p26920
tp26921
I1
s(g21982
I42
g21983
Vinsert
p26922
I25
VIfStatement
p26923
tp26924
I1
s(g11243
I42
g11244
Vinsert
p26925
I32
VMethodInvocation
p26926
tp26927
I1
s(g15719
I42
g15720
Vinsert
p26928
I32
VMethodInvocation
p26929
tp26930
I1
s(g4924
I42
g4925
Vinsert
p26931
I42
VSimpleName: mock
p26932
tp26933
I2
s(g400
I42
g401
Vinsert
p26934
I42
VSimpleName: String
p26935
tp26936
I5
s(g1444
I42
g1445
Vinsert
p26937
I42
VSimpleName: clazz
p26938
tp26939
I1
s(g1380
I42
g1381
Vinsert
p26940
I45
VStringLiteral: "    Please use 'default' or 'silent' JUnit Rule.\u005cn"
p26941
tp26942
I1
s(g4523
I42
g4524
Vinsert
p26943
I42
VSimpleName: StubbedInvocationMatcher
p26944
tp26945
I1
s(g568
I42
g569
Vinsert
p26946
I52
VThisExpression
p26947
tp26948
I1
s(g1421
I42
g1422
Vinsert
p26949
I42
VSimpleName: MockitoException
p26950
tp26951
I1
s(g2467
I42
g2468
Vinsert
p26952
I42
VSimpleName: MatchersBinder
p26953
tp26954
I1
s(g4590
I42
g4591
Vinsert
p26955
I27
VInfixExpression: &&
p26956
tp26957
I1
s(g12422
I42
g12423
Vinsert
p26958
I42
VSimpleName: invocations
p26959
tp26960
I1
s(g3896
I42
g3897
Vinsert
p26961
I83
VModifier: public
p26962
tp26963
I1
s(Vinsert
p26964
I42
VSimpleName: isVerified
p26965
Vinsert
p26966
I42
VSimpleName: get
p26967
tp26968
I1
s(g2374
I42
g2375
Vinsert
p26969
I42
VSimpleName: argument
p26970
tp26971
I1
s(g7297
I42
g7298
Vinsert
p26972
I34
VNumberLiteral: 0
p26973
tp26974
I2
s(g7587
I42
g7588
Vinsert
p26975
I8
VBlock
p26976
tp26977
I2
s(g24801
I42
g24802
Vinsert
p26978
I42
VSimpleName: invocations
p26979
tp26980
I6
s(g15711
I42
g15712
Vinsert
p26981
I42
VSimpleName: previous
p26982
tp26983
I1
s(g3219
I42
g3220
Vinsert
p26984
I42
VSimpleName: lastMatcherLocation
p26985
tp26986
I1
s(g15836
I42
g15837
Vinsert
p26987
I40
VQualifiedName: org.junit.Assume.assumeTrue
p26988
tp26989
I2
s(g410
I42
g411
Vinsert
p26990
I44
VSingleVariableDeclaration
p26991
tp26992
I2
s(g8434
I42
g8435
Vinsert
p26993
I25
VIfStatement
p26994
tp26995
I3
s(g11580
I42
g11581
Vinsert
p26996
I42
VSimpleName: mocksToBeVerifiedInSequence
p26997
tp26998
I1
s(g2677
I42
g2678
Vinsert
p26999
I42
VSimpleName: putByteArray
p27000
tp27001
I1
s(g7361
I42
g7362
Vinsert
p27002
I27
VInfixExpression: &&
p27003
tp27004
I4
s(g1332
I42
g1333
Vinsert
p27005
I32
VMethodInvocation
p27006
tp27007
I1
s(g796
I42
g797
Vinsert
p27008
I59
VVariableDeclarationFragment
p27009
tp27010
I1
s(g1362
I42
g1363
Vinsert
p27011
I10
VBreakStatement
p27012
tp27013
I1
s(g5067
I42
g5068
Vinsert
p27014
I42
VSimpleName: Timeout
p27015
tp27016
I1
s(g3493
I42
g3494
Vinsert
p27017
I42
VSimpleName: describe
p27018
tp27019
I1
s(g5604
I42
g5605
Vinsert
p27020
I43
VSimpleType: Short
p27021
tp27022
I1
s(g6658
I42
g6659
Vinsert
p27023
I45
VStringLiteral: "int passed as hex"
p27024
tp27025
I1
s(g2200
I42
g2201
Vinsert
p27026
I42
VSimpleName: create
p27027
tp27028
I1
s(Vinsert
p27029
I42
VSimpleName: getAllInvocations
p27030
Vinsert
p27031
I42
VSimpleName: mockOne
p27032
tp27033
I1
s(g10265
I42
g10266
Vinsert
p27034
I42
VSimpleName: MOCKITO_CORE
p27035
tp27036
I2
s(g2286
I42
g2287
Vinsert
p27037
I42
VSimpleName: AnnotationEngine
p27038
tp27039
I2
s(g6642
I42
g6643
Vinsert
p27040
I42
VSimpleName: Modifier
p27041
tp27042
I2
s(g8146
I42
g8147
Vinsert
p27043
I52
VThisExpression
p27044
tp27045
I1
s(g277
I42
g278
Vinsert
p27046
I45
VStringLiteral: "numberA"
p27047
tp27048
I1
s(g8978
I42
g8979
Vinsert
p27049
I42
VSimpleName: Child
p27050
tp27051
I4
s(g9520
I42
g9521
Vinsert
p27052
I59
VVariableDeclarationFragment
p27053
tp27054
I1
s(g10032
I42
g10033
Vinsert
p27055
I42
VSimpleName: tmp
p27056
tp27057
I1
s(g1274
I42
g1275
Vinsert
p27058
I42
VSimpleName: T
p27059
tp27060
I2
s(g5821
I42
g5822
Vinsert
p27061
I25
VIfStatement
p27062
tp27063
I1
s(g19801
I42
g19802
Vinsert
p27064
I42
VSimpleName: mock1
p27065
tp27066
I2
s(g4784
I42
g4785
Vinsert
p27067
I54
VTryStatement
p27068
tp27069
I1
s(g7366
I42
g7367
Vinsert
p27070
I27
VInfixExpression: &&
p27071
tp27072
I1
s(g3782
I42
g3783
Vinsert
p27073
I14
VClassInstanceCreation
p27074
tp27075
I2
s(g3555
I42
g3556
Vinsert
p27076
I21
VExpressionStatement
p27077
tp27078
I3
s(g4871
I42
g4872
Vinsert
p27079
I42
VSimpleName: invocation
p27080
tp27081
I2
s(g6435
I42
g6436
Vinsert
p27082
I21
VExpressionStatement
p27083
tp27084
I2
s(g13161
I42
g13162
Vinsert
p27085
I42
VSimpleName: url
p27086
tp27087
I1
s(Vinsert
p27088
I42
VSimpleName: verify
p27089
Vinsert
p27090
I42
VSimpleName: shouldVerifyWhenExpectedNumberOfInvocationIsZero
p27091
tp27092
I1
s(g1411
I42
g1412
Vinsert
p27093
I42
VSimpleName: VerificationDataInOrder
p27094
tp27095
I2
s(g1838
I42
g1839
Vinsert
p27096
I14
VClassInstanceCreation
p27097
tp27098
I1
s(g598
I42
g599
Vinsert
p27099
I42
VSimpleName: MockCreationSettings
p27100
tp27101
I1
s(g7004
I42
g7005
Vinsert
p27102
I43
VSimpleType: Foo
p27103
tp27104
I1
s(g11141
I42
g11142
Vinsert
p27105
I43
VSimpleType: Integer
p27106
tp27107
I2
s(g2266
I42
g2267
Vinsert
p27108
I39
VPrimitiveType: void
p27109
tp27110
I1
s(g20085
I42
g20086
Vinsert
p27111
I42
VSimpleName: version
p27112
tp27113
I2
s(g17346
I42
g17347
Vinsert
p27114
I43
VSimpleType: VerifyingMode
p27115
tp27116
I1
s(g15203
I42
g15204
Vinsert
p27117
I42
VSimpleName: array
p27118
tp27119
I2
s(g12267
I42
g12268
Vinsert
p27120
I27
VInfixExpression: |
p27121
tp27122
I1
s(g5083
I42
g5084
Vinsert
p27123
I42
VSimpleName: MockitoJUnit
p27124
tp27125
I1
s(g8057
I42
g8058
Vinsert
p27126
I43
VSimpleType: SafeJUnitRule.FailureAssert
p27127
tp27128
I1
s(g4346
I42
g4347
Vinsert
p27129
I42
VSimpleName: assertThat
p27130
tp27131
I1
s(g2748
I42
g2749
Vinsert
p27132
I42
VSimpleName: InvocationBuilder
p27133
tp27134
I2
s(g15311
I42
g15312
Vinsert
p27135
I45
VStringLiteral: "Actual invocation has different arguments:"
p27136
tp27137
I1
s(g61
I42
g62
Vinsert
p27138
I42
VSimpleName: Throwable
p27139
tp27140
I1
s(g13493
I42
g13494
Vinsert
p27141
I42
VSimpleName: assertThat
p27142
tp27143
I1
s(g2398
I42
g2399
Vinsert
p27144
I42
VSimpleName: Task
p27145
tp27146
I2
s(g8226
I42
g8227
Vinsert
p27147
I42
VSimpleName: Exception
p27148
tp27149
I1
s(g6043
I42
g6044
Vinsert
p27150
I42
VSimpleName: PluginSwitcher
p27151
tp27152
I1
s(g5083
I42
g5084
Vinsert
p27153
I45
VStringLiteral: "foo"
p27154
tp27155
I8
s(g9196
I42
g9197
Vinsert
p27156
I78
VMarkerAnnotation
p27157
tp27158
I5
s(g11306
I42
g11307
Vinsert
p27159
I42
VSimpleName: spy
p27160
tp27161
I1
s(g352
I42
g353
Vinsert
p27162
I43
VSimpleType: LinkedList
p27163
tp27164
I1
s(g179
I42
g180
Vinsert
p27165
I42
VSimpleName: invocation
p27166
tp27167
I1
s(g8082
I42
g8083
Vinsert
p27168
I43
VSimpleType: Invocation
p27169
tp27170
I1
s(g5760
I42
g5761
Vinsert
p27171
I54
VTryStatement
p27172
tp27173
I1
s(g6233
I42
g6234
Vinsert
p27174
I42
VSimpleName: List
p27175
tp27176
I1
s(g12705
I42
g12706
Vinsert
p27177
I74
VParameterizedType: Map.Entry<?,?>
p27178
tp27179
I1
s(g941
I42
g942
Vinsert
p27180
I76
VWildcardType: ?
p27181
tp27182
I1
s(g7859
I42
g7860
Vinsert
p27183
I42
VSimpleName: initialize
p27184
tp27185
I1
s(g3725
I42
g3726
Vinsert
p27186
I27
VInfixExpression: &&
p27187
tp27188
I1
s(g6013
I42
g6014
Vinsert
p27189
I42
VSimpleName: when
p27190
tp27191
I1
s(g8571
I42
g8572
Vinsert
p27192
I45
VStringLiteral: "1"
p27193
tp27194
I2
s(g10185
I42
g10186
Vinsert
p27195
I42
VSimpleName: RemoveFirstLine
p27196
tp27197
I3
s(g2631
I42
g2632
Vinsert
p27198
I43
VSimpleType: Invocation
p27199
tp27200
I1
s(g458
I42
g459
Vinsert
p27201
I43
VSimpleType: IllegalArgumentException
p27202
tp27203
I1
s(g6056
I42
g6057
Vinsert
p27204
I32
VMethodInvocation
p27205
tp27206
I32
s(g9865
I42
g9866
Vinsert
p27207
I42
VSimpleName: SpyAbstractClass
p27208
tp27209
I1
s(g7961
I42
g7962
Vinsert
p27210
I42
VSimpleName: guru
p27211
tp27212
I1
s(g5398
I42
g5399
Vinsert
p27213
I42
VSimpleName: assertNotNull
p27214
tp27215
I1
s(g4616
I42
g4617
Vinsert
p27216
I42
VSimpleName: ThirdPartyException
p27217
tp27218
I2
s(g2429
I42
g2430
Vinsert
p27219
I42
VSimpleName: InvocationContainerImpl
p27220
tp27221
I1
s(Vinsert
p27222
I42
VSimpleName: getInternalState
p27223
Vinsert
p27224
I42
VSimpleName: mockitoMethodProxy
p27225
tp27226
I1
s(g25075
I42
g25076
Vinsert
p27227
I42
VSimpleName: misplacedArgumentMatcher
p27228
tp27229
I1
s(g4991
I42
g4992
Vinsert
p27230
I83
VModifier: public
p27231
tp27232
I1
s(g10772
I42
g10773
Vinsert
p27233
I43
VSimpleType: List
p27234
tp27235
I1
s(g4800
I42
g4801
Vinsert
p27236
I42
VSimpleName: mockMaker
p27237
tp27238
I1
s(g5360
I42
g5361
Vinsert
p27239
I42
VSimpleName: potentialArgMismatches
p27240
tp27241
I1
s(g13596
I42
g13597
Vinsert
p27242
I42
VSimpleName: sourceClass
p27243
tp27244
I1
s(g1034
I42
g1035
Vinsert
p27245
I83
VModifier: final
p27246
tp27247
I1
s(g61
I42
g62
Vinsert
p27248
I43
VSimpleType: InvocationOnMock
p27249
tp27250
I1
s(g5456
I42
g5457
Vinsert
p27251
I42
VSimpleName: TypeMockability
p27252
tp27253
I2
s(g4346
I42
g4347
Vinsert
p27254
I21
VExpressionStatement
p27255
tp27256
I1
s(g3704
I42
g3705
Vinsert
p27257
I42
VSimpleName: access
p27258
tp27259
I1
s(g14721
I42
g14722
Vinsert
p27260
I42
VSimpleName: RETURNS_DEEP_STUBS
p27261
tp27262
I1
s(g7696
I42
g7697
Vinsert
p27263
I42
VSimpleName: Exception
p27264
tp27265
I1
s(g3555
I42
g3556
Vinsert
p27266
I32
VMethodInvocation
p27267
tp27268
I9
s(g681
I42
g682
Vinsert
p27269
I74
VParameterizedType: Class<?>
p27270
tp27271
I1
s(g25452
I42
g25453
Vinsert
p27272
I42
VSimpleName: TooLittleInvocations
p27273
tp27274
I1
s(g1573
I42
g1574
Vinsert
p27275
I42
VSimpleName: reporter
p27276
tp27277
I1
s(g5794
I42
g5795
Vinsert
p27278
I42
VSimpleName: className
p27279
tp27280
I1
s(g2575
I42
g2576
Vinsert
p27281
I42
VSimpleName: resolver
p27282
tp27283
I2
s(g727
I42
g728
Vinsert
p27284
I40
VQualifiedName: org.mockito.internal.stubbing.answers.AnswersValidator
p27285
tp27286
I1
s(g801
I42
g802
Vinsert
p27287
I32
VMethodInvocation
p27288
tp27289
I2
s(g9403
I42
g9404
Vinsert
p27290
I45
VStringLiteral: "3"
p27291
tp27292
I1
s(g7931
I42
g7932
Vinsert
p27293
I74
VParameterizedType: Class<? extends Throwable>
p27294
tp27295
I1
s(g2010
I42
g2011
Vinsert
p27296
I25
VIfStatement
p27297
tp27298
I1
s(g2939
I42
g2940
Vinsert
p27299
I5
VArrayType: long[]
p27300
tp27301
I2
s(g3880
I42
g3881
Vinsert
p27302
I43
VSimpleType: Method
p27303
tp27304
I1
s(g4924
I42
g4925
Vinsert
p27305
I42
VSimpleName: stream
p27306
tp27307
I3
s(g7091
I42
g7092
Vinsert
p27308
I45
VStringLiteral: ""
p27309
tp27310
I1
s(g1891
I42
g1892
Vinsert
p27311
I42
VSimpleName: out
p27312
tp27313
I1
s(g17500
I42
g17501
Vinsert
p27314
I42
VSimpleName: InvocationBuilder
p27315
tp27316
I1
s(g25297
I42
g25298
Vinsert
p27317
I74
VParameterizedType: Class<?>
p27318
tp27319
I2
s(g3498
I42
g3499
Vinsert
p27320
I42
VSimpleName: HasPrimitiveMethods
p27321
tp27322
I1
s(g12715
I42
g12716
Vinsert
p27323
I42
VSimpleName: settingsFor
p27324
tp27325
I2
s(g3659
I42
g3660
Vinsert
p27326
I26
VImportDeclaration
p27327
tp27328
I1
s(g327
I42
g328
Vinsert
p27329
I42
VSimpleName: mock
p27330
tp27331
I1
s(g1239
I42
g1240
Vinsert
p27332
I41
VReturnStatement
p27333
tp27334
I1
s(g16513
I42
g16514
Vinsert
p27335
I43
VSimpleType: org.mockito.internal.creation.instance.InstantiationException
p27336
tp27337
I1
s(g10531
I42
g10532
Vinsert
p27338
I42
VSimpleName: ATest
p27339
tp27340
I1
s(g4484
I42
g4485
Vinsert
p27341
I43
VSimpleType: Collection
p27342
tp27343
I1
s(g7366
I42
g7367
Vinsert
p27344
I38
VPrefixExpression: !
p27345
tp27346
I1
s(g12193
I42
g12194
Vinsert
p27347
I66
VTextElement:  instance.
p27348
tp27349
I1
s(g2118
I42
g2119
Vinsert
p27350
I32
VMethodInvocation
p27351
tp27352
I3
s(g1044
I42
g1045
Vinsert
p27353
I8
VBlock
p27354
tp27355
I1
s(g24251
I42
g24252
Vinsert
p27356
I34
VNumberLiteral: 0.0D
p27357
tp27358
I1
s(g1726
I42
g1727
Vinsert
p27359
I60
VVariableDeclarationStatement
p27360
tp27361
I1
s(g1411
I42
g1412
Vinsert
p27362
I60
VVariableDeclarationStatement
p27363
tp27364
I6
s(g3426
I42
g3427
Vinsert
p27365
I34
VNumberLiteral: 10
p27366
tp27367
I2
s(g4523
I42
g4524
Vinsert
p27368
I43
VSimpleType: StubbedInvocationMatcher
p27369
tp27370
I1
s(g523
I42
g524
Vinsert
p27371
I66
VTextElement: the classpath to find a mock maker plugin if one is available, allowing
p27372
tp27373
I1
s(g18591
I42
g18592
Vinsert
p27374
I42
VSimpleName: unexpected
p27375
tp27376
I1
s(g1528
I42
g1529
Vinsert
p27377
I32
VMethodInvocation
p27378
tp27379
I13
s(g6582
I42
g6583
Vinsert
p27380
I42
VSimpleName: assertEquals
p27381
tp27382
I1
s(g6771
I42
g6772
Vinsert
p27383
I60
VVariableDeclarationStatement
p27384
tp27385
I2
s(g10415
I42
g10416
Vinsert
p27386
I42
VSimpleName: field
p27387
tp27388
I2
s(g9491
I42
g9492
Vinsert
p27389
I32
VMethodInvocation
p27390
tp27391
I2
s(g2326
I42
g2327
Vinsert
p27392
I14
VClassInstanceCreation
p27393
tp27394
I1
s(g18840
I42
g18841
Vinsert
p27395
I66
VTextElement: </p>
p27396
tp27397
I1
s(g277
I42
g278
Vinsert
p27398
I42
VSimpleName: field
p27399
tp27400
I1
s(g7521
I42
g7522
Vinsert
p27401
I57
VTypeLiteral
p27402
tp27403
I1
s(g11336
I42
g11337
Vinsert
p27404
I27
VInfixExpression: <
p27405
tp27406
I1
s(g420
I42
g421
Vinsert
p27407
I7
VAssignment: =
p27408
tp27409
I1
s(g6311
I42
g6312
Vinsert
p27410
I42
VSimpleName: stub
p27411
tp27412
I1
s(g4963
I42
g4964
Vinsert
p27413
I42
VSimpleName: mockHandler
p27414
tp27415
I1
s(g9929
I42
g9930
Vinsert
p27416
I32
VMethodInvocation
p27417
tp27418
I33
s(g6411
I42
g6412
Vinsert
p27419
I42
VSimpleName: className
p27420
tp27421
I1
s(g4377
I42
g4378
Vinsert
p27422
I42
VSimpleName: getStackTrace
p27423
tp27424
I3
s(g8509
I42
g8510
Vinsert
p27425
I59
VVariableDeclarationFragment
p27426
tp27427
I3
s(g926
I42
g927
Vinsert
p27428
I32
VMethodInvocation
p27429
tp27430
I27
s(g7195
I42
g7196
Vinsert
p27431
I42
VSimpleName: newCachedThreadPool
p27432
tp27433
I1
s(g4043
I42
g4044
Vinsert
p27434
I32
VMethodInvocation
p27435
tp27436
I2
s(g15841
I42
g15842
Vinsert
p27437
I43
VSimpleType: Method
p27438
tp27439
I1
s(g1416
I42
g1417
Vinsert
p27440
I45
VStringLiteral: "$"
p27441
tp27442
I1
s(g4929
I42
g4930
Vinsert
p27443
I42
VSimpleName: Stubbing
p27444
tp27445
I2
s(Vinsert
p27446
I42
VSimpleName: of
p27447
Vinsert
p27448
I42
VSimpleName: MethodCallReport
p27449
tp27450
I5
s(g10696
I42
g10697
Vinsert
p27451
I45
VStringLiteral: "If you're not sure why you're getting this error, please report to the mailing list."
p27452
tp27453
I1
s(g3400
I42
g3401
Vinsert
p27454
I42
VSimpleName: printed
p27455
tp27456
I1
s(g16048
I42
g16049
Vinsert
p27457
I42
VSimpleName: out
p27458
tp27459
I1
s(g2364
I42
g2365
Vinsert
p27460
I40
VQualifiedName: MyMockMaker.explosive
p27461
tp27462
I1
s(g3390
I42
g3391
Vinsert
p27463
I59
VVariableDeclarationFragment
p27464
tp27465
I2
s(g174
I42
g175
Vinsert
p27466
I57
VTypeLiteral
p27467
tp27468
I1
s(g8372
I42
g8373
Vinsert
p27469
I43
VSimpleType: Equals
p27470
tp27471
I1
s(g41
I42
g42
Vinsert
p27472
I42
VSimpleName: argumentPosition
p27473
tp27474
I1
s(g6435
I42
g6436
Vinsert
p27475
I42
VSimpleName: f
p27476
tp27477
I1
s(g1054
I42
g1055
Vinsert
p27478
I42
VSimpleName: MyObject
p27479
tp27480
I2
s(g1785
I42
g1786
Vinsert
p27481
I42
VSimpleName: returnsSecondArg
p27482
tp27483
I1
s(g10609
I42
g10610
Vinsert
p27484
I83
VModifier: public
p27485
tp27486
I5
s(g26726
I42
g26727
Vinsert
p27487
I42
VSimpleName: KEY_FACTORY
p27488
tp27489
I1
s(g2908
I42
g2909
Vinsert
p27490
I60
VVariableDeclarationStatement
p27491
tp27492
I1
s(g2031
I42
g2032
Vinsert
p27493
I40
VQualifiedName: Opcodes.ACC_ANNOTATION
p27494
tp27495
I1
s(g9747
I42
g9748
Vinsert
p27496
I42
VSimpleName: simpleMethod
p27497
tp27498
I1
s(g1194
I42
g1195
Vinsert
p27499
I39
VPrimitiveType: void
p27500
tp27501
I1
s(g5256
I42
g5257
Vinsert
p27502
I43
VSimpleType: String
p27503
tp27504
I7
s(g2369
I42
g2370
Vinsert
p27505
I74
VParameterizedType: ArrayList<Integer>
p27506
tp27507
I1
s(g12799
I42
g12800
Vinsert
p27508
I85
VDimension
p27509
tp27510
I1
s(g3313
I42
g3314
Vinsert
p27511
I43
VSimpleType: Foo
p27512
tp27513
I2
s(g3331
I42
g3332
Vinsert
p27514
I42
VSimpleName: Reporter
p27515
tp27516
I1
s(g7030
I42
g7031
Vinsert
p27517
I45
VStringLiteral: "/some/non/random/path"
p27518
tp27519
I3
s(g6744
I42
g6745
Vinsert
p27520
I42
VSimpleName: verify
p27521
tp27522
I1
s(g22637
I42
g22638
Vinsert
p27523
I43
VSimpleType: ThreadSafeMockingProgress
p27524
tp27525
I1
s(g2296
I42
g2297
Vinsert
p27526
I59
VVariableDeclarationFragment
p27527
tp27528
I2
s(g1019
I42
g1020
Vinsert
p27529
I42
VSimpleName: Object
p27530
tp27531
I1
s(g5744
I42
g5745
Vinsert
p27532
I42
VSimpleName: invoke
p27533
tp27534
I1
s(g5810
I42
g5811
Vinsert
p27535
I42
VSimpleName: dummy
p27536
tp27537
I1
s(g7371
I42
g7372
Vinsert
p27538
I42
VSimpleName: captureFrom
p27539
tp27540
I1
s(g3136
I42
g3137
Vinsert
p27541
I42
VSimpleName: MethodGraph
p27542
tp27543
I2
s(g12390
I42
g12391
Vinsert
p27544
I42
VSimpleName: NoSuchMethodException
p27545
tp27546
I1
s(g1069
I42
g1070
Vinsert
p27547
I42
VSimpleName: invocationForStubbing
p27548
tp27549
I1
s(g11691
I42
g11692
Vinsert
p27550
I31
VMethodDeclaration
p27551
tp27552
I2
s(g8210
I42
g8211
Vinsert
p27553
I42
VSimpleName: MockitoException
p27554
tp27555
I4
s(g21094
I42
g21095
Vinsert
p27556
I42
VSimpleName: mock
p27557
tp27558
I2
s(g2301
I42
g2302
Vinsert
p27559
I42
VSimpleName: when
p27560
tp27561
I2
s(g6736
I42
g6737
Vinsert
p27562
I8
VBlock
p27563
tp27564
I3
s(g282
I42
g283
Vinsert
p27565
I42
VSimpleName: arguments
p27566
tp27567
I1
s(Vinsert
p27568
I42
VSimpleName: exactNumberOfInvocationsMode
p27569
Vinsert
p27570
I34
VNumberLiteral: 0
p27571
tp27572
I1
s(g1876
I42
g1877
Vinsert
p27573
I42
VSimpleName: Contribution
p27574
tp27575
I1
s(g7258
I42
g7259
Vinsert
p27576
I57
VTypeLiteral
p27577
tp27578
I1
s(g846
I42
g847
Vinsert
p27579
I32
VMethodInvocation
p27580
tp27581
I39
s(g17478
I42
g17479
Vinsert
p27582
I42
VSimpleName: redirectErrorStream
p27583
tp27584
I2
s(g26394
I42
g26395
Vinsert
p27585
I27
VInfixExpression: -
p27586
tp27587
I1
s(g1790
I42
g1791
Vinsert
p27588
I32
VMethodInvocation
p27589
tp27590
I3
s(g19709
I42
g19710
Vinsert
p27591
I42
VSimpleName: resetMock
p27592
tp27593
I1
s(g16823
I42
g16824
Vinsert
p27594
I42
VSimpleName: boo
p27595
tp27596
I2
s(g10696
I42
g10697
Vinsert
p27597
I45
VStringLiteral: "Mockito cannot mock this class: "
p27598
tp27599
I1
s(g12804
I42
g12805
Vinsert
p27600
I40
VQualifiedName: org.junit.Before
p27601
tp27602
I1
s(g7730
I42
g7731
Vinsert
p27603
I43
VSimpleType: Class
p27604
tp27605
I1
s(g6752
I42
g6753
Vinsert
p27606
I8
VBlock
p27607
tp27608
I2
s(g11243
I42
g11244
Vinsert
p27609
I42
VSimpleName: Object
p27610
tp27611
I1
s(g4963
I42
g4964
Vinsert
p27612
I21
VExpressionStatement
p27613
tp27614
I2
s(g19085
I42
g19086
Vinsert
p27615
I74
VParameterizedType: MockHandler<T>
p27616
tp27617
I2
s(g543
I42
g544
Vinsert
p27618
I45
VStringLiteral: "'"
p27619
tp27620
I1
s(g1548
I42
g1549
Vinsert
p27621
I45
VStringLiteral: "hotspot warning"
p27622
tp27623
I2
s(g415
I42
g416
Vinsert
p27624
I42
VSimpleName: T
p27625
tp27626
I1
s(g10164
I42
g10165
Vinsert
p27627
I59
VVariableDeclarationFragment
p27628
tp27629
I1
s(g4871
I42
g4872
Vinsert
p27630
I42
VSimpleName: InvocationInfo
p27631
tp27632
I1
s(g11107
I42
g11108
Vinsert
p27633
I65
VTagElement: @return
p27634
tp27635
I1
s(g214
I42
g215
Vinsert
p27636
I42
VSimpleName: threeArgumentMethodWithStrings
p27637
tp27638
I1
s(g2667
I42
g2668
Vinsert
p27639
I44
VSingleVariableDeclaration
p27640
tp27641
I2
s(g15198
I42
g15199
Vinsert
p27642
I42
VSimpleName: getType
p27643
tp27644
I1
s(g1134
I42
g1135
Vinsert
p27645
I42
VSimpleName: Object
p27646
tp27647
I2
s(g5052
I42
g5053
Vinsert
p27648
I45
VStringLiteral: "', loaded by classloader : '"
p27649
tp27650
I1
s(g26027
I42
g26028
Vinsert
p27651
I42
VSimpleName: smartNull
p27652
tp27653
I1
s(g3214
I42
g3215
Vinsert
p27654
I39
VPrimitiveType: void
p27655
tp27656
I1
s(g8358
I42
g8359
Vinsert
p27657
I59
VVariableDeclarationFragment
p27658
tp27659
I10
s(g8003
I42
g8004
Vinsert
p27660
I42
VSimpleName: notMarkedAsAMockitoMock
p27661
tp27662
I1
s(g7867
I42
g7868
Vinsert
p27663
I8
VBlock
p27664
tp27665
I23
s(g1775
I42
g1776
Vinsert
p27666
I42
VSimpleName: exceptionType
p27667
tp27668
I2
s(g3629
I42
g3630
Vinsert
p27669
I34
VNumberLiteral: 200
p27670
tp27671
I2
s(g788
I42
g789
Vinsert
p27672
I44
VSingleVariableDeclaration
p27673
tp27674
I1
s(g2871
I42
g2872
Vinsert
p27675
I85
VDimension
p27676
tp27677
I1
s(g2398
I42
g2399
Vinsert
p27678
I8
VBlock
p27679
tp27680
I2
s(g1944
I42
g1945
Vinsert
p27681
I42
VSimpleName: chunk
p27682
tp27683
I2
s(g2839
I42
g2840
Vinsert
p27684
I43
VSimpleType: Invocation
p27685
tp27686
I1
s(g5829
I42
g5830
Vinsert
p27687
I42
VSimpleName: isVerified
p27688
tp27689
I3
s(g3219
I42
g3220
Vinsert
p27690
I42
VSimpleName: matcherStack
p27691
tp27692
I2
s(g1269
I42
g1270
Vinsert
p27693
I42
VSimpleName: finder
p27694
tp27695
I1
s(g603
I42
g604
Vinsert
p27696
I45
VStringLiteral: "newName"
p27697
tp27698
I1
s(g760
I42
g761
Vinsert
p27699
I14
VClassInstanceCreation
p27700
tp27701
I1
s(g8146
I42
g8147
Vinsert
p27702
I42
VSimpleName: readReplace
p27703
tp27704
I2
s(g1949
I42
g1950
Vinsert
p27705
I43
VSimpleType: Exception
p27706
tp27707
I2
s(g3914
I42
g3915
Vinsert
p27708
I45
VStringLiteral: "stringString_that_matches_field"
p27709
tp27710
I1
s(g23727
I42
g23728
Vinsert
p27711
I42
VSimpleName: T
p27712
tp27713
I3
s(g11353
I42
g11354
Vinsert
p27714
I42
VSimpleName: Equals
p27715
tp27716
I2
s(g648
I42
g649
Vinsert
p27717
I43
VSimpleType: Article
p27718
tp27719
I2
s(g2647
I42
g2648
Vinsert
p27720
I80
VMemberValuePair
p27721
tp27722
I2
s(g9021
I42
g9022
Vinsert
p27723
I76
VWildcardType: ?
p27724
tp27725
I2
s(g36
I42
g37
Vinsert
p27726
I59
VVariableDeclarationFragment
p27727
tp27728
I3
s(g8642
I42
g8643
Vinsert
p27729
I3
VArrayCreation
p27730
tp27731
I1
s(g2152
I42
g2153
Vinsert
p27732
I78
VMarkerAnnotation
p27733
tp27734
I1
s(g2748
I42
g2749
Vinsert
p27735
I43
VSimpleType: InvocationBuilder
p27736
tp27737
I3
s(g51
I42
g52
Vinsert
p27738
I42
VSimpleName: cache
p27739
tp27740
I1
s(Vinsert
p27741
I42
VSimpleName: verify
p27742
Vinsert
p27743
I42
VSimpleName: timer
p27744
tp27745
I2
s(g12566
I42
g12567
Vinsert
p27746
I42
VSimpleName: selectMockCandidateOnName
p27747
tp27748
I1
s(g1179
I42
g1180
Vinsert
p27749
I42
VSimpleName: T
p27750
tp27751
I3
s(g12705
I42
g12706
Vinsert
p27752
I60
VVariableDeclarationStatement
p27753
tp27754
I1
s(g2248
I42
g2249
Vinsert
p27755
I42
VSimpleName: invocation
p27756
tp27757
I1
s(g681
I42
g682
Vinsert
p27758
I76
VWildcardType: ?
p27759
tp27760
I1
s(g3331
I42
g3332
Vinsert
p27761
I39
VPrimitiveType: long
p27762
tp27763
I1
s(g12737
I42
g12738
Vinsert
p27764
I43
VSimpleType: MockHandlerImpl
p27765
tp27766
I1
s(Vinsert
p27767
I42
VSimpleName: getStackTrace
p27768
Vinsert
p27769
I42
VSimpleName: stackTrace
p27770
tp27771
I2
s(g8383
I42
g8384
Vinsert
p27772
I7
VAssignment: =
p27773
tp27774
I1
s(g8388
I42
g8389
Vinsert
p27775
I59
VVariableDeclarationFragment
p27776
tp27777
I1
s(g17240
I42
g17241
Vinsert
p27778
I78
VMarkerAnnotation
p27779
tp27780
I1
s(g428
I42
g429
Vinsert
p27781
I40
VQualifiedName: org.mockito.Mockito.verify
p27782
tp27783
I1
s(g5360
I42
g5361
Vinsert
p27784
I32
VMethodInvocation
p27785
tp27786
I3
s(g4662
I42
g4663
Vinsert
p27787
I42
VSimpleName: bike
p27788
tp27789
I2
s(g1815
I42
g1816
Vinsert
p27790
I42
VSimpleName: constructors
p27791
tp27792
I1
s(g10368
I42
g10369
Vinsert
p27793
I42
VSimpleName: Boolean
p27794
tp27795
I2
s(g7274
I42
g7275
Vinsert
p27796
I42
VSimpleName: undesired
p27797
tp27798
I2
s(g4827
I42
g4828
Vinsert
p27799
I76
VWildcardType: ?
p27800
tp27801
I9
s(g16418
I42
g16419
Vinsert
p27802
I76
VWildcardType: ?
p27803
tp27804
I2
s(g1312
I42
g1313
Vinsert
p27805
I21
VExpressionStatement
p27806
tp27807
I2
s(g1249
I42
g1250
Vinsert
p27808
I43
VSimpleType: Filter
p27809
tp27810
I5
s(g6024
I42
g6025
Vinsert
p27811
I42
VSimpleName: MockCreationValidator
p27812
tp27813
I1
s(g2457
I42
g2458
Vinsert
p27814
I42
VSimpleName: String
p27815
tp27816
I1
s(g5245
I42
g5246
Vinsert
p27817
I42
VSimpleName: Error
p27818
tp27819
I3
s(g7062
I42
g7063
Vinsert
p27820
I8
VBlock
p27821
tp27822
I2
s(g4768
I42
g4769
Vinsert
p27823
I42
VSimpleName: given
p27824
tp27825
I1
s(g8483
I42
g8484
Vinsert
p27826
I32
VMethodInvocation
p27827
tp27828
I4
s(g352
I42
g353
Vinsert
p27829
I43
VSimpleType: Object
p27830
tp27831
I1
s(g23104
I42
g23105
Vinsert
p27832
I43
VSimpleType: ClassNotFoundException
p27833
tp27834
I1
s(g453
I42
g454
Vinsert
p27835
I43
VSimpleType: Exception
p27836
tp27837
I1
s(g12561
I42
g12562
Vinsert
p27838
I42
VSimpleName: mode
p27839
tp27840
I4
s(g1558
I42
g1559
Vinsert
p27841
I42
VSimpleName: GETFIELD
p27842
tp27843
I1
s(g3121
I42
g3122
Vinsert
p27844
I42
VSimpleName: IllegalArgumentException
p27845
tp27846
I2
s(g267
I42
g268
Vinsert
p27847
I8
VBlock
p27848
tp27849
I1
s(g357
I42
g358
Vinsert
p27850
I42
VSimpleName: throwable
p27851
tp27852
I1
s(g14972
I42
g14973
Vinsert
p27853
I8
VBlock
p27854
tp27855
I4
s(g420
I42
g421
Vinsert
p27856
I32
VMethodInvocation
p27857
tp27858
I2
s(g4479
I42
g4480
Vinsert
p27859
I42
VSimpleName: className
p27860
tp27861
I1
s(g12606
I42
g12607
Vinsert
p27862
I8
VBlock
p27863
tp27864
I2
s(g3262
I42
g3263
Vinsert
p27865
I42
VSimpleName: atMost
p27866
tp27867
I1
s(g5335
I42
g5336
Vinsert
p27868
I42
VSimpleName: FrameworkMethod
p27869
tp27870
I1
s(g9344
I42
g9345
Vinsert
p27871
I42
VSimpleName: v
p27872
tp27873
I1
s(g1049
I42
g1050
Vinsert
p27874
I42
VSimpleName: t
p27875
tp27876
I1
s(g3280
I42
g3281
Vinsert
p27877
I42
VSimpleName: addListener
p27878
tp27879
I1
s(Vinsert
p27880
I42
VSimpleName: mock
p27881
Vinsert
p27882
I42
VSimpleName: DefaultStrictness2
p27883
tp27884
I1
s(g961
I42
g962
Vinsert
p27885
I59
VVariableDeclarationFragment
p27886
tp27887
I2
s(g312
I42
g313
Vinsert
p27888
I41
VReturnStatement
p27889
tp27890
I1
s(g13680
I42
g13681
Vinsert
p27891
I42
VSimpleName: invocations
p27892
tp27893
I1
s(g6217
I42
g6218
Vinsert
p27894
I42
VSimpleName: cloneable1
p27895
tp27896
I1
s(g11572
I42
g11573
Vinsert
p27897
I43
VSimpleType: Class
p27898
tp27899
I1
s(g144
I42
g145
Vinsert
p27900
I44
VSingleVariableDeclaration
p27901
tp27902
I2
s(g11768
I42
g11769
Vinsert
p27903
I42
VSimpleName: rawArgs
p27904
tp27905
I1
s(g2738
I42
g2739
Vinsert
p27906
I42
VSimpleName: Captor
p27907
tp27908
I1
s(g7704
I42
g7705
Vinsert
p27909
I21
VExpressionStatement
p27910
tp27911
I6
s(g8729
I42
g8730
Vinsert
p27912
I44
VSingleVariableDeclaration
p27913
tp27914
I1
s(g1591
I42
g1592
Vinsert
p27915
I42
VSimpleName: InvocationContainerImpl
p27916
tp27917
I1
s(g10634
I42
g10635
Vinsert
p27918
I85
VDimension
p27919
tp27920
I1
s(g4247
I42
g4248
Vinsert
p27921
I42
VSimpleName: sampleClass
p27922
tp27923
I1
s(g4082
I42
g4083
Vinsert
p27924
I8
VBlock
p27925
tp27926
I12
s(g18995
I42
g18996
Vinsert
p27927
I42
VSimpleName: shouldNotAllowConfiguringWithNullReturnValues
p27928
tp27929
I1
s(g8862
I42
g8863
Vinsert
p27930
I42
VSimpleName: desc
p27931
tp27932
I1
s(g7408
I42
g7409
Vinsert
p27933
I42
VSimpleName: assertThat
p27934
tp27935
I1
s(g139
I42
g140
Vinsert
p27936
I43
VSimpleType: LocalizedMatcher
p27937
tp27938
I2
s(Vinsert
p27939
I42
VSimpleName: otherMethod
p27940
Vinsert
p27941
I45
VStringLiteral: "foo"
p27942
tp27943
I1
s(Vinsert
p27944
I42
VSimpleName: getStackTrace
p27945
Vinsert
p27946
I42
VSimpleName: assertValue
p27947
tp27948
I1
s(g6212
I42
g6213
Vinsert
p27949
I34
VNumberLiteral: 0
p27950
tp27951
I2
s(g8642
I42
g8643
Vinsert
p27952
I14
VClassInstanceCreation
p27953
tp27954
I1
s(g5321
I42
g5322
Vinsert
p27955
I42
VSimpleName: typeVariable_of_self_type
p27956
tp27957
I1
s(g41
I42
g42
Vinsert
p27958
I42
VSimpleName: inferredArgumentType
p27959
tp27960
I1
s(g8827
I42
g8828
Vinsert
p27961
I34
VNumberLiteral: 1
p27962
tp27963
I1
s(g7403
I42
g7404
Vinsert
p27964
I43
VSimpleType: MethodVisitor
p27965
tp27966
I1
s(Vinsert
p27967
I42
VSimpleName: isEmpty
p27968
Vinsert
p27969
I42
VSimpleName: Integer
p27970
tp27971
I1
s(Vinsert
p27972
I42
VSimpleName: getConfig
p27973
Vinsert
p27974
I42
VSimpleName: setupCleanStackTraces
p27975
tp27976
I1
s(g2973
I42
g2974
Vinsert
p27977
I74
VParameterizedType: Class<T>
p27978
tp27979
I1
s(g3421
I42
g3422
Vinsert
p27980
I66
VTextElement:  The boxed default values as defined in Java Language Specification,
p27981
tp27982
I1
s(g4944
I42
g4945
Vinsert
p27983
I42
VSimpleName: count
p27984
tp27985
I3
s(g4168
I42
g4169
Vinsert
p27986
I8
VBlock
p27987
tp27988
I1
s(g11263
I42
g11264
Vinsert
p27989
I43
VSimpleType: MockitoMock
p27990
tp27991
I1
s(g10567
I42
g10568
Vinsert
p27992
I42
VSimpleName: clazz
p27993
tp27994
I1
s(g16823
I42
g16824
Vinsert
p27995
I42
VSimpleName: verify
p27996
tp27997
I1
s(g3247
I42
g3248
Vinsert
p27998
I42
VSimpleName: getException
p27999
tp28000
I2
s(g2718
I42
g2719
Vinsert
p28001
I42
VSimpleName: NumberOfInvocationsAssertionError
p28002
tp28003
I1
s(g6148
I42
g6149
Vinsert
p28004
I57
VTypeLiteral
p28005
tp28006
I1
s(g307
I42
g308
Vinsert
p28007
I60
VVariableDeclarationStatement
p28008
tp28009
I1
s(g9849
I42
g9850
Vinsert
p28010
I43
VSimpleType: HasFilterableStackTrace
p28011
tp28012
I1
s(g20652
I42
g20653
Vinsert
p28013
I42
VSimpleName: asList
p28014
tp28015
I2
s(g3606
I42
g3607
Vinsert
p28016
I42
VSimpleName: MockMethodInterceptor
p28017
tp28018
I2
s(g2369
I42
g2370
Vinsert
p28019
I42
VSimpleName: testCollectionSourceProvider
p28020
tp28021
I1
s(g10846
I42
g10847
Vinsert
p28022
I74
VParameterizedType: Closure<String>
p28023
tp28024
I2
s(g3441
I42
g3442
Vinsert
p28025
I42
VSimpleName: visited
p28026
tp28027
I1
s(g6763
I42
g6764
Vinsert
p28028
I42
VSimpleName: HasStackTraceStub
p28029
tp28030
I2
s(g24865
I42
g24866
Vinsert
p28031
I14
VClassInstanceCreation
p28032
tp28033
I1
s(g14888
I42
g14889
Vinsert
p28034
I42
VSimpleName: shouldInitMocksWithGivenSettings
p28035
tp28036
I1
s(g6890
I42
g6891
Vinsert
p28037
I42
VSimpleName: staticHook
p28038
tp28039
I1
s(g488
I42
g489
Vinsert
p28040
I42
VSimpleName: exception
p28041
tp28042
I1
s(g9865
I42
g9866
Vinsert
p28043
I42
VSimpleName: initMocks
p28044
tp28045
I1
s(Vinsert
p28046
I42
VSimpleName: thenReturn
p28047
Vinsert
p28048
I54
VTryStatement
p28049
tp28050
I1
s(g1795
I42
g1796
Vinsert
p28051
I42
VSimpleName: NullPointerException
p28052
tp28053
I1
s(g6854
I42
g6855
Vinsert
p28054
I40
VQualifiedName: java.util.TreeSet
p28055
tp28056
I1
s(g10265
I42
g10266
Vinsert
p28057
I44
VSingleVariableDeclaration
p28058
tp28059
I6
s(g3101
I42
g3102
Vinsert
p28060
I42
VSimpleName: NewOngoingStubbing
p28061
tp28062
I1
s(g936
I42
g937
Vinsert
p28063
I42
VSimpleName: accept
p28064
tp28065
I1
s(g1614
I42
g1615
Vinsert
p28066
I43
VSimpleType: MockitoListener
p28067
tp28068
I1
s(g3616
I42
g3617
Vinsert
p28069
I38
VPrefixExpression: -
p28070
tp28071
I1
s(g8854
I42
g8855
Vinsert
p28072
I42
VSimpleName: delegatedObject
p28073
tp28074
I1
s(g653
I42
g654
Vinsert
p28075
I51
VSynchronizedStatement
p28076
tp28077
I1
s(g2385
I42
g2386
Vinsert
p28078
I42
VSimpleName: createTooLittleInvocationsCause
p28079
tp28080
I2
s(g9739
I42
g9740
Vinsert
p28081
I8
VBlock
p28082
tp28083
I34
s(g1696
I42
g1697
Vinsert
p28084
I42
VSimpleName: get
p28085
tp28086
I8
s(g3126
I42
g3127
Vinsert
p28087
I43
VSimpleType: Timeout
p28088
tp28089
I1
s(Vinsert
p28090
I42
VSimpleName: simpleMethod
p28091
Vinsert
p28092
I42
VSimpleName: serialVersionUID
p28093
tp28094
I1
s(Vinsert
p28095
I42
VSimpleName: simpleMethod
p28096
Vinsert
p28097
I42
VSimpleName: headline
p28098
tp28099
I2
s(g694
I42
g695
Vinsert
p28100
I42
VSimpleName: given
p28101
tp28102
I1
s(g1477
I42
g1478
Vinsert
p28103
I42
VSimpleName: unstubbedMethodInvokedHere
p28104
tp28105
I1
s(g9571
I42
g9572
Vinsert
p28106
I43
VSimpleType: VerificationMode
p28107
tp28108
I1
s(g1287
I42
g1288
Vinsert
p28109
I8
VBlock
p28110
tp28111
I2
s(g4295
I42
g4296
Vinsert
p28112
I42
VSimpleName: target
p28113
tp28114
I1
s(g2536
I42
g2537
Vinsert
p28115
I60
VVariableDeclarationStatement
p28116
tp28117
I1
s(g5352
I42
g5353
Vinsert
p28118
I42
VSimpleName: recordInvocation
p28119
tp28120
I1
s(g14686
I42
g14687
Vinsert
p28121
I42
VSimpleName: String
p28122
tp28123
I5
s(g1929
I42
g1930
Vinsert
p28124
I42
VSimpleName: in
p28125
tp28126
I1
s(Vinsert
p28127
I42
VSimpleName: isStubOnly
p28128
Vinsert
p28129
I42
VSimpleName: createRegisteredInvocations
p28130
tp28131
I2
s(g10311
I42
g10312
Vinsert
p28132
I21
VExpressionStatement
p28133
tp28134
I4
s(g2621
I42
g2622
Vinsert
p28135
I45
VStringLiteral: "<Matcher without description>"
p28136
tp28137
I1
s(g21977
I42
g21978
Vinsert
p28138
I59
VVariableDeclarationFragment
p28139
tp28140
I2
s(g2385
I42
g2386
Vinsert
p28141
I42
VSimpleName: lastActualStackTrace
p28142
tp28143
I1
s(Vinsert
p28144
I42
VSimpleName: appendText
p28145
Vinsert
p28146
I78
VMarkerAnnotation
p28147
tp28148
I2
s(g1586
I42
g1587
Vinsert
p28149
I40
VQualifiedName: Constants.ACC_PUBLIC
p28150
tp28151
I1
s(g9739
I42
g9740
Vinsert
p28152
I42
VSimpleName: reportedException
p28153
tp28154
I1
s(g9649
I42
g9650
Vinsert
p28155
I43
VSimpleType: Number
p28156
tp28157
I1
s(g8931
I42
g8932
Vinsert
p28158
I45
VStringLiteral: "at com.Foo:100"
p28159
tp28160
I1
s(g4106
I42
g4107
Vinsert
p28161
I8
VBlock
p28162
tp28163
I1
s(g7190
I42
g7191
Vinsert
p28164
I21
VExpressionStatement
p28165
tp28166
I1
s(g17478
I42
g17479
Vinsert
p28167
I42
VSimpleName: directory
p28168
tp28169
I2
s(g1660
I42
g1661
Vinsert
p28170
I26
VImportDeclaration
p28171
tp28172
I2
s(g7361
I42
g7362
Vinsert
p28173
I38
VPrefixExpression: !
p28174
tp28175
I4
s(g4173
I42
g4174
Vinsert
p28176
I43
VSimpleType: LabelNode
p28177
tp28178
I2
s(g1871
I42
g1872
Vinsert
p28179
I25
VIfStatement
p28180
tp28181
I1
s(g13850
I42
g13851
Vinsert
p28182
I42
VSimpleName: delegate
p28183
tp28184
I1
s(g996
I42
g997
Vinsert
p28185
I42
VSimpleName: verify
p28186
tp28187
I1
s(g3943
I42
g3944
Vinsert
p28188
I42
VSimpleName: checkDependency
p28189
tp28190
I1
s(g7534
I42
g7535
Vinsert
p28191
I43
VSimpleType: Throwable
p28192
tp28193
I2
s(g7939
I42
g7940
Vinsert
p28194
I42
VSimpleName: getInvocation
p28195
tp28196
I1
s(g10368
I42
g10369
Vinsert
p28197
I42
VSimpleName: String
p28198
tp28199
I1
s(g3170
I42
g3171
Vinsert
p28200
I74
VParameterizedType: Localized<VerificationMode>
p28201
tp28202
I1
s(g19136
I42
g19137
Vinsert
p28203
I24
VForStatement
p28204
tp28205
I1
s(g1087
I42
g1088
Vinsert
p28206
I42
VSimpleName: times
p28207
tp28208
I3
s(g5245
I42
g5246
Vinsert
p28209
I42
VSimpleName: filterStackTrace
p28210
tp28211
I1
s(g24000
I42
g24001
Vinsert
p28212
I42
VSimpleName: FailingSpy
p28213
tp28214
I2
s(g2444
I42
g2445
Vinsert
p28215
I32
VMethodInvocation
p28216
tp28217
I1
s(g6056
I42
g6057
Vinsert
p28218
I42
VSimpleName: assertEquals
p28219
tp28220
I2
s(g673
I42
g674
Vinsert
p28221
I42
VSimpleName: decamelizeClassName
p28222
tp28223
I2
s(g16053
I42
g16054
Vinsert
p28224
I21
VExpressionStatement
p28225
tp28226
I3
s(g16524
I42
g16525
Vinsert
p28227
I32
VMethodInvocation
p28228
tp28229
I2
s(g2861
I42
g2862
Vinsert
p28230
I42
VSimpleName: After
p28231
tp28232
I1
s(g4138
I42
g4139
Vinsert
p28233
I42
VSimpleName: runListener
p28234
tp28235
I2
s(g2959
I42
g2960
Vinsert
p28236
I42
VSimpleName: Test
p28237
tp28238
I1
s(g11074
I42
g11075
Vinsert
p28239
I39
VPrimitiveType: void
p28240
tp28241
I1
s(g8467
I42
g8468
Vinsert
p28242
I42
VSimpleName: cv1
p28243
tp28244
I1
s(g7395
I42
g7396
Vinsert
p28245
I42
VSimpleName: superName
p28246
tp28247
I1
s(g633
I42
g634
Vinsert
p28248
I42
VSimpleName: InvocationMatcher
p28249
tp28250
I1
s(g9026
I42
g9027
Vinsert
p28251
I21
VExpressionStatement
p28252
tp28253
I3
s(g7371
I42
g7372
Vinsert
p28254
I42
VSimpleName: assertThat
p28255
tp28256
I1
s(g2886
I42
g2887
Vinsert
p28257
I39
VPrimitiveType: void
p28258
tp28259
I2
s(g1843
I42
g1844
Vinsert
p28260
I5
VArrayType: Object[]
p28261
tp28262
I2
s(g4539
I42
g4540
Vinsert
p28263
I43
VSimpleType: CreationSettings
p28264
tp28265
I2
s(g17579
I42
g17580
Vinsert
p28266
I21
VExpressionStatement
p28267
tp28268
I5
s(g6725
I42
g6726
Vinsert
p28269
I31
VMethodDeclaration
p28270
tp28271
I1
s(g1655
I42
g1656
Vinsert
p28272
I45
VStringLiteral: "toString"
p28273
tp28274
I1
s(g971
I42
g972
Vinsert
p28275
I40
VQualifiedName: System.out
p28276
tp28277
I1
s(g7441
I42
g7442
Vinsert
p28278
I42
VSimpleName: o
p28279
tp28280
I6
s(g9601
I42
g9602
Vinsert
p28281
I40
VQualifiedName: Any.ANY
p28282
tp28283
I1
s(g8696
I42
g8697
Vinsert
p28284
I59
VVariableDeclarationFragment
p28285
tp28286
I3
s(g2748
I42
g2749
Vinsert
p28287
I39
VPrimitiveType: int
p28288
tp28289
I2
s(g8324
I42
g8325
Vinsert
p28290
I45
VStringLiteral: "threw an exception"
p28291
tp28292
I1
s(g4199
I42
g4200
Vinsert
p28293
I49
VSwitchCase
p28294
tp28295
I2
s(g1011
I42
g1012
Vinsert
p28296
I21
VExpressionStatement
p28297
tp28298
I1
s(g6043
I42
g6044
Vinsert
p28299
I25
VIfStatement
p28300
tp28301
I1
s(g8663
I42
g8664
Vinsert
p28302
I9
VBooleanLiteral: false
p28303
tp28304
I1
s(g3996
I42
g3997
Vinsert
p28305
I11
VCastExpression
p28306
tp28307
I1
s(g15719
I42
g15720
Vinsert
p28308
I76
VWildcardType: ?
p28309
tp28310
I1
s(g1493
I42
g1494
Vinsert
p28311
I33
VNullLiteral
p28312
tp28313
I3
s(g961
I42
g962
Vinsert
p28314
I22
VFieldAccess
p28315
tp28316
I1
s(g727
I42
g728
Vinsert
p28317
I14
VClassInstanceCreation
p28318
tp28319
I1
s(g22086
I42
g22087
Vinsert
p28320
I43
VSimpleType: List
p28321
tp28322
I1
s(Vinsert
p28323
I42
VSimpleName: newInstance
p28324
Vinsert
p28325
I43
VSimpleType: ConstructorInstantiatorTest
p28326
tp28327
I1
s(g473
I42
g474
Vinsert
p28328
I21
VExpressionStatement
p28329
tp28330
I5
s(g23663
I42
g23664
Vinsert
p28331
I42
VSimpleName: isToString
p28332
tp28333
I1
s(g806
I42
g807
Vinsert
p28334
I42
VSimpleName: Class
p28335
tp28336
I1
s(g4212
I42
g4213
Vinsert
p28337
I42
VSimpleName: authorName
p28338
tp28339
I1
s(g8250
I42
g8251
Vinsert
p28340
I42
VSimpleName: increment
p28341
tp28342
I1
s(g12226
I42
g12227
Vinsert
p28343
I42
VSimpleName: converted
p28344
tp28345
I1
s(g25187
I42
g25188
Vinsert
p28346
I42
VSimpleName: enclosing
p28347
tp28348
I3
s(g8808
I42
g8809
Vinsert
p28349
I60
VVariableDeclarationStatement
p28350
tp28351
I1
s(g1134
I42
g1135
Vinsert
p28352
I43
VSimpleType: Object
p28353
tp28354
I2
s(g1105
I42
g1106
Vinsert
p28355
I74
VParameterizedType: MockSettingsImpl<Set>
p28356
tp28357
I1
s(g3016
I42
g3017
Vinsert
p28358
I42
VSimpleName: InputStream
p28359
tp28360
I3
s(g2886
I42
g2887
Vinsert
p28361
I42
VSimpleName: should_succeed_when_contained_answer_should_succeed
p28362
tp28363
I1
s(g3807
I42
g3808
Vinsert
p28364
I42
VSimpleName: GlobalConfiguration
p28365
tp28366
I1
s(g12705
I42
g12706
Vinsert
p28367
I43
VSimpleType: Iterator
p28368
tp28369
I1
s(g174
I42
g175
Vinsert
p28370
I42
VSimpleName: thenReturn
p28371
tp28372
I1
s(g4590
I42
g4591
Vinsert
p28373
I66
VTextElement: If the field is also annotated with the <strong>compatible</strong> &#64;InjectMocks then the field will be ignored,
p28374
tp28375
I1
s(g8899
I42
g8900
Vinsert
p28376
I60
VVariableDeclarationStatement
p28377
tp28378
I1
s(g14366
I42
g14367
Vinsert
p28379
I40
VQualifiedName: keys.length
p28380
tp28381
I1
s(g3766
I42
g3767
Vinsert
p28382
I42
VSimpleName: usingClassCacheConstructor
p28383
tp28384
I1
s(g20085
I42
g20086
Vinsert
p28385
I42
VSimpleName: IllegalArgumentException
p28386
tp28387
I2
s(g4163
I42
g4164
Vinsert
p28388
I43
VSimpleType: StackTraceElement
p28389
tp28390
I2
s(g18377
I42
g18378
Vinsert
p28391
I42
VSimpleName: mockSettings
p28392
tp28393
I1
s(g19136
I42
g19137
Vinsert
p28394
I58
VVariableDeclarationExpression
p28395
tp28396
I1
s(g1426
I42
g1427
Vinsert
p28397
I43
VSimpleType: ZipCompare
p28398
tp28399
I1
s(g10802
I42
g10803
Vinsert
p28400
I42
VSimpleName: toInvocation
p28401
tp28402
I1
s(g3699
I42
g3700
Vinsert
p28403
I42
VSimpleName: fail
p28404
tp28405
I1
s(g1411
I42
g1412
Vinsert
p28406
I42
VSimpleName: Invocation
p28407
tp28408
I7
s(g8205
I42
g8206
Vinsert
p28409
I42
VSimpleName: arguments
p28410
tp28411
I3
s(g16454
I42
g16455
Vinsert
p28412
I42
VSimpleName: Test
p28413
tp28414
I6
s(g2575
I42
g2576
Vinsert
p28415
I85
VDimension
p28416
tp28417
I1
s(g4750
I42
g4751
Vinsert
p28418
I7
VAssignment: =
p28419
tp28420
I1
s(g22492
I42
g22493
Vinsert
p28421
I42
VSimpleName: length
p28422
tp28423
I1
s(g11314
I42
g11315
Vinsert
p28424
I42
VSimpleName: ByteBuddy
p28425
tp28426
I1
s(g1805
I42
g1806
Vinsert
p28427
I42
VSimpleName: simpleMethodInvocation
p28428
tp28429
I1
s(g1871
I42
g1872
Vinsert
p28430
I42
VSimpleName: cannotStubVoidMethodWithAReturnValue
p28431
tp28432
I1
s(g10311
I42
g10312
Vinsert
p28433
I83
VModifier: public
p28434
tp28435
I2
s(g13798
I42
g13799
Vinsert
p28436
I42
VSimpleName: assertNull
p28437
tp28438
I2
s(g8483
I42
g8484
Vinsert
p28439
I21
VExpressionStatement
p28440
tp28441
I1
s(g12804
I42
g12805
Vinsert
p28442
I78
VMarkerAnnotation
p28443
tp28444
I1
s(g3864
I42
g3865
Vinsert
p28445
I42
VSimpleName: desc
p28446
tp28447
I2
s(g2286
I42
g2287
Vinsert
p28448
I43
VSimpleType: AnnotationEngine
p28449
tp28450
I2
s(g2439
I42
g2440
Vinsert
p28451
I42
VSimpleName: MockSettings
p28452
tp28453
I1
s(g2988
I42
g2989
Vinsert
p28454
I43
VSimpleType: Object
p28455
tp28456
I4
s(g9229
I42
g9230
Vinsert
p28457
I42
VSimpleName: Object
p28458
tp28459
I1
s(g1683
I42
g1684
Vinsert
p28460
I14
VClassInstanceCreation
p28461
tp28462
I2
s(g12318
I42
g12319
Vinsert
p28463
I42
VSimpleName: issue
p28464
tp28465
I1
s(g14366
I42
g14367
Vinsert
p28466
I42
VSimpleName: size
p28467
tp28468
I1
s(g7185
I42
g7186
Vinsert
p28469
I42
VSimpleName: toInvocationMatcher
p28470
tp28471
I1
s(g16093
I42
g16094
Vinsert
p28472
I14
VClassInstanceCreation
p28473
tp28474
I4
s(g5083
I42
g5084
Vinsert
p28475
I42
VSimpleName: rule
p28476
tp28477
I1
s(Vinsert
p28478
I42
VSimpleName: objectReturningMethodNoArgs
p28479
Vinsert
p28480
I42
VSimpleName: assertEquals
p28481
tp28482
I2
s(g2222
I42
g2223
Vinsert
p28483
I54
VTryStatement
p28484
tp28485
I3
s(g8889
I42
g8890
Vinsert
p28486
I43
VSimpleType: Observable
p28487
tp28488
I1
s(g3395
I42
g3396
Vinsert
p28489
I45
VStringLiteral: "null"
p28490
tp28491
I1
s(g3802
I42
g3803
Vinsert
p28492
I42
VSimpleName: SampleInterface
p28493
tp28494
I1
s(g10490
I42
g10491
Vinsert
p28495
I42
VSimpleName: method
p28496
tp28497
I1
s(g7337
I42
g7338
Vinsert
p28498
I42
VSimpleName: InvocationOnMock
p28499
tp28500
I1
s(g12066
I42
g12067
Vinsert
p28501
I42
VSimpleName: WrongTypeOfReturnValue
p28502
tp28503
I2
s(g1393
I42
g1394
Vinsert
p28504
I42
VSimpleName: assertThat
p28505
tp28506
I1
s(g20107
I42
g20108
Vinsert
p28507
I42
VSimpleName: when
p28508
tp28509
I1
s(g14491
I42
g14492
Vinsert
p28510
I42
VSimpleName: isAssignableFrom
p28511
tp28512
I2
s(g5123
I42
g5124
Vinsert
p28513
I42
VSimpleName: foo
p28514
tp28515
I2
s(g6771
I42
g6772
Vinsert
p28516
I32
VMethodInvocation
p28517
tp28518
I1
s(g1115
I42
g1116
Vinsert
p28519
I7
VAssignment: =
p28520
tp28521
I1
s(g593
I42
g594
Vinsert
p28522
I42
VSimpleName: nextToBeReturned
p28523
tp28524
I1
s(g24722
I42
g24723
Vinsert
p28525
I42
VSimpleName: ReturnValues
p28526
tp28527
I1
s(g2248
I42
g2249
Vinsert
p28528
I43
VSimpleType: StubbingLookUpListener
p28529
tp28530
I1
s(g6677
I42
g6678
Vinsert
p28531
I76
VWildcardType: ?
p28532
tp28533
I1
s(g498
I42
g499
Vinsert
p28534
I25
VIfStatement
p28535
tp28536
I1
s(g3131
I42
g3132
Vinsert
p28537
I83
VModifier: public
p28538
tp28539
I1
s(g498
I42
g499
Vinsert
p28540
I27
VInfixExpression: ==
p28541
tp28542
I1
s(g2998
I42
g2999
Vinsert
p28543
I42
VSimpleName: MethodVisitor
p28544
tp28545
I1
s(g3996
I42
g3997
Vinsert
p28546
I62
VInstanceofExpression
p28547
tp28548
I1
s(g1239
I42
g1240
Vinsert
p28549
I42
VSimpleName: throwable
p28550
tp28551
I1
s(g5466
I42
g5467
Vinsert
p28552
I66
VTextElement: Filters out unwanted line numbers from provided stack trace String.
p28553
tp28554
I1
s(g3812
I42
g3813
Vinsert
p28555
I8
VBlock
p28556
tp28557
I4
s(g19066
I42
g19067
Vinsert
p28558
I43
VSimpleType: FieldSetter
p28559
tp28560
I1
s(g503
I42
g504
Vinsert
p28561
I42
VSimpleName: lastInvocation
p28562
tp28563
I1
s(Vinsert
p28564
I42
VSimpleName: has
p28565
Vinsert
p28566
I40
VQualifiedName: org.mockito.Mockito.verifyNoMoreInteractions
p28567
tp28568
I1
s(g1044
I42
g1045
Vinsert
p28569
I42
VSimpleName: Mockito
p28570
tp28571
I1
s(g2113
I42
g2114
Vinsert
p28572
I27
VInfixExpression: <
p28573
tp28574
I1
s(g3725
I42
g3726
Vinsert
p28575
I42
VSimpleName: mockCandidates
p28576
tp28577
I1
s(g16592
I42
g16593
Vinsert
p28578
I59
VVariableDeclarationFragment
p28579
tp28580
I4
s(g19510
I42
g19511
Vinsert
p28581
I43
VSimpleType: Exception
p28582
tp28583
I1
s(g7243
I42
g7244
Vinsert
p28584
I42
VSimpleName: strict
p28585
tp28586
I1
s(g2200
I42
g2201
Vinsert
p28587
I8
VBlock
p28588
tp28589
I10
s(Vinsert
p28590
I42
VSimpleName: isEmpty
p28591
Vinsert
p28592
I42
VSimpleName: getLastSafely
p28593
tp28594
I2
s(g3318
I42
g3319
Vinsert
p28595
I42
VSimpleName: assertEquals
p28596
tp28597
I2
s(g8226
I42
g8227
Vinsert
p28598
I21
VExpressionStatement
p28599
tp28600
I2
s(g12528
I42
g12529
Vinsert
p28601
I42
VSimpleName: SuppressWarnings
p28602
tp28603
I1
s(g2467
I42
g2468
Vinsert
p28604
I43
VSimpleType: ThreadSafeMockingProgress
p28605
tp28606
I1
s(g14538
I42
g14539
Vinsert
p28607
I42
VSimpleName: currentThread
p28608
tp28609
I1
s(g3659
I42
g3660
Vinsert
p28610
I42
VSimpleName: serialVersionUID
p28611
tp28612
I1
s(g6411
I42
g6412
Vinsert
p28613
I42
VSimpleName: T
p28614
tp28615
I5
s(g3126
I42
g3127
Vinsert
p28616
I14
VClassInstanceCreation
p28617
tp28618
I2
s(g4290
I42
g4291
Vinsert
p28619
I42
VSimpleName: argPos
p28620
tp28621
I1
s(g10963
I42
g10964
Vinsert
p28622
I11
VCastExpression
p28623
tp28624
I2
s(g1670
I42
g1671
Vinsert
p28625
I14
VClassInstanceCreation
p28626
tp28627
I4
s(g7849
I42
g7850
Vinsert
p28628
I42
VSimpleName: MockUtil
p28629
tp28630
I4
s(g1543
I42
g1544
Vinsert
p28631
I43
VSimpleType: BDDStubberImpl
p28632
tp28633
I1
s(g247
I42
g248
Vinsert
p28634
I9
VBooleanLiteral: false
p28635
tp28636
I1
s(g9520
I42
g9521
Vinsert
p28637
I83
VModifier: private
p28638
tp28639
I1
s(g2237
I42
g2238
Vinsert
p28640
I42
VSimpleName: ignore
p28641
tp28642
I1
s(g25340
I42
g25341
Vinsert
p28643
I14
VClassInstanceCreation
p28644
tp28645
I1
s(g2667
I42
g2668
Vinsert
p28646
I42
VSimpleName: maybeVerifyLazily
p28647
tp28648
I2
s(g2626
I42
g2627
Vinsert
p28649
I42
VSimpleName: T
p28650
tp28651
I4
s(g443
I42
g444
Vinsert
p28652
I42
VSimpleName: tool
p28653
tp28654
I2
s(g1848
I42
g1849
Vinsert
p28655
I43
VSimpleType: ClassTransformer
p28656
tp28657
I2
s(g3948
I42
g3949
Vinsert
p28658
I43
VSimpleType: LocalizedMatcher
p28659
tp28660
I2
s(g2326
I42
g2327
Vinsert
p28661
I42
VSimpleName: IllegalStateException
p28662
tp28663
I1
s(g10672
I42
g10673
Vinsert
p28664
I5
VArrayType: Object[]
p28665
tp28666
I2
s(g3116
I42
g3117
Vinsert
p28667
I42
VSimpleName: runner
p28668
tp28669
I2
s(g15198
I42
g15199
Vinsert
p28670
I42
VSimpleName: field1
p28671
tp28672
I1
s(g3766
I42
g3767
Vinsert
p28673
I42
VSimpleName: Class
p28674
tp28675
I2
s(g5067
I42
g5068
Vinsert
p28676
I83
VModifier: static
p28677
tp28678
I1
s(g16579
I42
g16580
Vinsert
p28679
I32
VMethodInvocation
p28680
tp28681
I1
s(g7253
I42
g7254
Vinsert
p28682
I66
VTextElement:  to have the first line removed
p28683
tp28684
I1
s(g13345
I42
g13346
Vinsert
p28685
I78
VMarkerAnnotation
p28686
tp28687
I1
s(g4871
I42
g4872
Vinsert
p28688
I42
VSimpleName: Override
p28689
tp28690
I1
s(g14014
I42
g14015
Vinsert
p28691
I42
VSimpleName: firstUndesired
p28692
tp28693
I1
s(g4461
I42
g4462
Vinsert
p28694
I42
VSimpleName: articles
p28695
tp28696
I1
s(g1586
I42
g1587
Vinsert
p28697
I42
VSimpleName: begin_class
p28698
tp28699
I1
s(g6914
I42
g6915
Vinsert
p28700
I21
VExpressionStatement
p28701
tp28702
I6
s(g831
I42
g832
Vinsert
p28703
I42
VSimpleName: mode
p28704
tp28705
I2
s(g7012
I42
g7013
Vinsert
p28706
I43
VSimpleType: IllegalStateException
p28707
tp28708
I1
s(g8467
I42
g8468
Vinsert
p28709
I42
VSimpleName: mv1
p28710
tp28711
I1
s(g5570
I42
g5571
Vinsert
p28712
I42
VSimpleName: wantedInvocation
p28713
tp28714
I2
s(g10354
I42
g10355
Vinsert
p28715
I42
VSimpleName: first
p28716
tp28717
I1
s(g5491
I42
g5492
Vinsert
p28718
I31
VMethodDeclaration
p28719
tp28720
I1
s(g821
I42
g822
Vinsert
p28721
I42
VSimpleName: InvocationWithMatchers
p28722
tp28723
I1
s(g6069
I42
g6070
Vinsert
p28724
I39
VPrimitiveType: void
p28725
tp28726
I1
s(g2611
I42
g2612
Vinsert
p28727
I21
VExpressionStatement
p28728
tp28729
I1
s(g4295
I42
g4296
Vinsert
p28730
I85
VDimension
p28731
tp28732
I1
s(g3637
I42
g3638
Vinsert
p28733
I42
VSimpleName: LocalIsolatedURLClassLoader
p28734
tp28735
I1
s(g11691
I42
g11692
Vinsert
p28736
I8
VBlock
p28737
tp28738
I2
s(g1380
I42
g1381
Vinsert
p28739
I45
VStringLiteral: "For more information see javadoc for PotentialStubbingProblem class."
p28740
tp28741
I1
s(Vinsert
p28742
I42
VSimpleName: getMessage
p28743
Vinsert
p28744
I45
VStringLiteral: "Method requires arguments."
p28745
tp28746
I1
s(g3313
I42
g3314
Vinsert
p28747
I42
VSimpleName: Foo
p28748
tp28749
I2
s(g2105
I42
g2106
Vinsert
p28750
I32
VMethodInvocation
p28751
tp28752
I5
s(g4755
I42
g4756
Vinsert
p28753
I42
VSimpleName: assertNotNull
p28754
tp28755
I1
s(g1871
I42
g1872
Vinsert
p28756
I42
VSimpleName: invocationInfo
p28757
tp28758
I3
s(g3413
I42
g3414
Vinsert
p28759
I59
VVariableDeclarationFragment
p28760
tp28761
I5
s(g5105
I42
g5106
Vinsert
p28762
I42
VSimpleName: shouldValidateMockWhenEnablingStrictChecking
p28763
tp28764
I1
s(g841
I42
g842
Vinsert
p28765
I42
VSimpleName: toBeReturned
p28766
tp28767
I1
s(g5604
I42
g5605
Vinsert
p28768
I74
VParameterizedType: Matcher<Short>
p28769
tp28770
I1
s(g3688
I42
g3689
Vinsert
p28771
I83
VModifier: private
p28772
tp28773
I1
s(g2385
I42
g2386
Vinsert
p28774
I42
VSimpleName: wanted
p28775
tp28776
I4
s(g4148
I42
g4149
Vinsert
p28777
I42
VSimpleName: then
p28778
tp28779
I1
s(g668
I42
g669
Vinsert
p28780
I45
VStringLiteral: "$$EnhancerByMockitoWithCGLIB$$"
p28781
tp28782
I1
s(g6457
I42
g6458
Vinsert
p28783
I14
VClassInstanceCreation
p28784
tp28785
I1
s(g14303
I42
g14304
Vinsert
p28786
I42
VSimpleName: LinkedList
p28787
tp28788
I1
s(g6379
I42
g6380
Vinsert
p28789
I45
VStringLiteral: "a"
p28790
tp28791
I1
s(g1322
I42
g1323
Vinsert
p28792
I26
VImportDeclaration
p28793
tp28794
I6
s(g901
I42
g902
Vinsert
p28795
I8
VBlock
p28796
tp28797
I1
s(g2631
I42
g2632
Vinsert
p28798
I33
VNullLiteral
p28799
tp28800
I1
s(g4952
I42
g4953
Vinsert
p28801
I8
VBlock
p28802
tp28803
I1
s(g3914
I42
g3915
Vinsert
p28804
I42
VSimpleName: Test
p28805
tp28806
I1
s(g14231
I42
g14232
Vinsert
p28807
I45
VStringLiteral: "No tests found in "
p28808
tp28809
I1
s(Vinsert
p28810
I42
VSimpleName: simpleMethod
p28811
Vinsert
p28812
I42
VSimpleName: getStubbings
p28813
tp28814
I1
s(g17384
I42
g17385
Vinsert
p28815
I42
VSimpleName: t
p28816
tp28817
I1
s(g9413
I42
g9414
Vinsert
p28818
I8
VBlock
p28819
tp28820
I4
s(g747
I42
g748
Vinsert
p28821
I74
VParameterizedType: ArgumentCaptor<String>
p28822
tp28823
I1
s(g4133
I42
g4134
Vinsert
p28824
I42
VSimpleName: NoMoreInteractions
p28825
tp28826
I1
s(g11099
I42
g11100
Vinsert
p28827
I42
VSimpleName: actualMethodAtIndex
p28828
tp28829
I1
s(g2723
I42
g2724
Vinsert
p28830
I42
VSimpleName: invocation
p28831
tp28832
I2
s(g2775
I42
g2776
Vinsert
p28833
I57
VTypeLiteral
p28834
tp28835
I6
s(g4148
I42
g4149
Vinsert
p28836
I60
VVariableDeclarationStatement
p28837
tp28838
I1
s(g956
I42
g957
Vinsert
p28839
I83
VModifier: public
p28840
tp28841
I1
s(g936
I42
g937
Vinsert
p28842
I41
VReturnStatement
p28843
tp28844
I1
s(g3204
I42
g3205
Vinsert
p28845
I42
VSimpleName: cls
p28846
tp28847
I1
s(g3924
I42
g3925
Vinsert
p28848
I42
VSimpleName: T
p28849
tp28850
I3
s(g9408
I42
g9409
Vinsert
p28851
I42
VSimpleName: toMock
p28852
tp28853
I2
s(g12890
I42
g12891
Vinsert
p28854
I42
VSimpleName: Captor
p28855
tp28856
I1
s(g10015
I42
g10016
Vinsert
p28857
I21
VExpressionStatement
p28858
tp28859
I2
s(g12809
I42
g12810
Vinsert
p28860
I43
VSimpleType: InputStream
p28861
tp28862
I1
s(g26617
I42
g26618
Vinsert
p28863
I43
VSimpleType: MockitoListener
p28864
tp28865
I3
s(g901
I42
g902
Vinsert
p28866
I43
VSimpleType: Invocation
p28867
tp28868
I1
s(g12444
I42
g12445
Vinsert
p28869
I8
VBlock
p28870
tp28871
I1
s(g12809
I42
g12810
Vinsert
p28872
I42
VSimpleName: InputStream
p28873
tp28874
I1
s(g7166
I42
g7167
Vinsert
p28875
I44
VSingleVariableDeclaration
p28876
tp28877
I1
s(g7190
I42
g7191
Vinsert
p28878
I32
VMethodInvocation
p28879
tp28880
I3
s(g4059
I42
g4060
Vinsert
p28881
I45
VStringLiteral: "VerificationStartedEvent.setMock"
p28882
tp28883
I1
s(g5461
I42
g5462
Vinsert
p28884
I83
VModifier: public
p28885
tp28886
I1
s(g760
I42
g761
Vinsert
p28887
I59
VVariableDeclarationFragment
p28888
tp28889
I1
s(g2998
I42
g2999
Vinsert
p28890
I83
VModifier: public
p28891
tp28892
I1
s(g2467
I42
g2468
Vinsert
p28893
I42
VSimpleName: ThreadSafeMockingProgress
p28894
tp28895
I1
s(g4704
I42
g4705
Vinsert
p28896
I59
VVariableDeclarationFragment
p28897
tp28898
I1
s(g2059
I42
g2060
Vinsert
p28899
I43
VSimpleType: Thread
p28900
tp28901
I2
s(g7129
I42
g7130
Vinsert
p28902
I42
VSimpleName: shouldStubVoidWithExceptionClass
p28903
tp28904
I1
s(g12715
I42
g12716
Vinsert
p28905
I32
VMethodInvocation
p28906
tp28907
I15
s(g1548
I42
g1549
Vinsert
p28908
I32
VMethodInvocation
p28909
tp28910
I3
s(g6988
I42
g6989
Vinsert
p28911
I32
VMethodInvocation
p28912
tp28913
I4
s(g257
I42
g258
Vinsert
p28914
I43
VSimpleType: Integer
p28915
tp28916
I1
s(g8095
I42
g8096
Vinsert
p28917
I42
VSimpleName: String
p28918
tp28919
I4
s(g1024
I42
g1025
Vinsert
p28920
I43
VSimpleType: Spy
p28921
tp28922
I1
s(g7539
I42
g7540
Vinsert
p28923
I43
VSimpleType: String
p28924
tp28925
I2
s(g1194
I42
g1195
Vinsert
p28926
I57
VTypeLiteral
p28927
tp28928
I1
s(g18840
I42
g18841
Vinsert
p28929
I42
VSimpleName: IMockitoConfiguration
p28930
tp28931
I1
s(g8409
I42
g8410
Vinsert
p28932
I42
VSimpleName: verifyZeroInteractions
p28933
tp28934
I1
s(g5717
I42
g5718
Vinsert
p28935
I42
VSimpleName: MockVerificationAssertionError
p28936
tp28937
I1
s(g881
I42
g882
Vinsert
p28938
I42
VSimpleName: String
p28939
tp28940
I1
s(g18096
I42
g18097
Vinsert
p28941
I43
VSimpleType: Class
p28942
tp28943
I2
s(g2733
I42
g2734
Vinsert
p28944
I74
VParameterizedType: MethodInterceptorFilter<MockHandler<T>>
p28945
tp28946
I1
s(g8358
I42
g8359
Vinsert
p28947
I42
VSimpleName: original
p28948
tp28949
I1
s(g8030
I42
g8031
Vinsert
p28950
I42
VSimpleName: verification
p28951
tp28952
I3
s(g267
I42
g268
Vinsert
p28953
I25
VIfStatement
p28954
tp28955
I1
s(g796
I42
g797
Vinsert
p28956
I34
VNumberLiteral: 0
p28957
tp28958
I1
s(g23037
I42
g23038
Vinsert
p28959
I42
VSimpleName: WEIRDO1
p28960
tp28961
I1
s(g11791
I42
g11792
Vinsert
p28962
I59
VVariableDeclarationFragment
p28963
tp28964
I1
s(g6561
I42
g6562
Vinsert
p28965
I43
VSimpleType: Fun
p28966
tp28967
I2
s(g377
I42
g378
Vinsert
p28968
I8
VBlock
p28969
tp28970
I3
s(g573
I42
g574
Vinsert
p28971
I42
VSimpleName: MethodVisitor
p28972
tp28973
I1
s(g3532
I42
g3533
Vinsert
p28974
I40
VQualifiedName: System.out
p28975
tp28976
I1
s(Vinsert
p28977
I42
VSimpleName: simpleMethod
p28978
Vinsert
p28979
I42
VSimpleName: passing_test
p28980
tp28981
I1
s(g12561
I42
g12562
Vinsert
p28982
I22
VFieldAccess
p28983
tp28984
I1
s(g4148
I42
g4149
Vinsert
p28985
I42
VSimpleName: result
p28986
tp28987
I1
s(g11418
I42
g11419
Vinsert
p28988
I43
VSimpleType: MethodProxy
p28989
tp28990
I1
s(g3629
I42
g3630
Vinsert
p28991
I21
VExpressionStatement
p28992
tp28993
I2
s(g12737
I42
g12738
Vinsert
p28994
I74
VParameterizedType: MockHandlerImpl<CallingSuperMethodClass>
p28995
tp28996
I1
s(g2041
I42
g2042
Vinsert
p28997
I42
VSimpleName: finder
p28998
tp28999
I1
s(g1074
I42
g1075
Vinsert
p29000
I42
VSimpleName: oneArg
p29001
tp29002
I1
s(g7177
I42
g7178
Vinsert
p29003
I42
VSimpleName: StrictRunner
p29004
tp29005
I2
s(g2462
I42
g2463
Vinsert
p29006
I42
VSimpleName: SomeBeanWithJustAGetter
p29007
tp29008
I2
s(g10751
I42
g10752
Vinsert
p29009
I42
VSimpleName: MissingInvocationVerifier
p29010
tp29011
I2
s(g1578
I42
g1579
Vinsert
p29012
I42
VSimpleName: println
p29013
tp29014
I2
s(g14972
I42
g14973
Vinsert
p29015
I42
VSimpleName: shouldKnowIfIsSerializable
p29016
tp29017
I1
s(g2000
I42
g2001
Vinsert
p29018
I44
VSingleVariableDeclaration
p29019
tp29020
I2
s(g5118
I42
g5119
Vinsert
p29021
I39
VPrimitiveType: void
p29022
tp29023
I1
s(g19400
I42
g19401
Vinsert
p29024
I42
VSimpleName: CALLS_REAL_METHODS
p29025
tp29026
I2
s(g24736
I42
g24737
Vinsert
p29027
I39
VPrimitiveType: void
p29028
tp29029
I7
s(g1462
I42
g1463
Vinsert
p29030
I60
VVariableDeclarationStatement
p29031
tp29032
I3
s(g2949
I42
g2950
Vinsert
p29033
I31
VMethodDeclaration
p29034
tp29035
I1
s(g5256
I42
g5257
Vinsert
p29036
I14
VClassInstanceCreation
p29037
tp29038
I12
s(g3016
I42
g3017
Vinsert
p29039
I42
VSimpleName: resources
p29040
tp29041
I2
s(g15091
I42
g15092
Vinsert
p29042
I42
VSimpleName: verified
p29043
tp29044
I1
s(Vinsert
p29045
I42
VSimpleName: filter
p29046
Vinsert
p29047
I42
VSimpleName: list
p29048
tp29049
I1
s(g7200
I42
g7201
Vinsert
p29050
I44
VSingleVariableDeclaration
p29051
tp29052
I2
s(g1614
I42
g1615
Vinsert
p29053
I32
VMethodInvocation
p29054
tp29055
I2
s(g10572
I42
g10573
Vinsert
p29056
I83
VModifier: static
p29057
tp29058
I1
s(g6103
I42
g6104
Vinsert
p29059
I42
VSimpleName: mode
p29060
tp29061
I3
s(g4861
I42
g4862
Vinsert
p29062
I74
VParameterizedType: Collection<Invocation>
p29063
tp29064
I1
s(g3606
I42
g3607
Vinsert
p29065
I42
VSimpleName: superMethod
p29066
tp29067
I1
s(Vinsert
p29068
I42
VSimpleName: simpleMethod
p29069
Vinsert
p29070
I34
VNumberLiteral: 2
p29071
tp29072
I5
s(g6116
I42
g6117
Vinsert
p29073
I59
VVariableDeclarationFragment
p29074
tp29075
I1
s(g4939
I42
g4940
Vinsert
p29076
I8
VBlock
p29077
tp29078
I1
s(g3247
I42
g3248
Vinsert
p29079
I27
VInfixExpression: +
p29080
tp29081
I2
s(Vinsert
p29082
I42
VSimpleName: method
p29083
Vinsert
p29084
I34
VNumberLiteral: 1
p29085
tp29086
I1
s(g2631
I42
g2632
Vinsert
p29087
I60
VVariableDeclarationStatement
p29088
tp29089
I1
s(g15179
I42
g15180
Vinsert
p29090
I34
VNumberLiteral: 2
p29091
tp29092
I1
s(g3155
I42
g3156
Vinsert
p29093
I43
VSimpleType: Class
p29094
tp29095
I1
s(g3060
I42
g3061
Vinsert
p29096
I8
VBlock
p29097
tp29098
I7
s(g19425
I42
g19426
Vinsert
p29099
I42
VSimpleName: getObjects
p29100
tp29101
I1
s(g4719
I42
g4720
Vinsert
p29102
I42
VSimpleName: method
p29103
tp29104
I2
s(g7017
I42
g7018
Vinsert
p29105
I42
VSimpleName: Object
p29106
tp29107
I5
s(g11404
I42
g11405
Vinsert
p29108
I60
VVariableDeclarationStatement
p29109
tp29110
I8
s(g846
I42
g847
Vinsert
p29111
I14
VClassInstanceCreation
p29112
tp29113
I24
s(g4680
I42
g4681
Vinsert
p29114
I43
VSimpleType: TooLittleActualInvocations
p29115
tp29116
I1
s(g149
I42
g150
Vinsert
p29117
I42
VSimpleName: assertEquals
p29118
tp29119
I1
s(g5360
I42
g5361
Vinsert
p29120
I8
VBlock
p29121
tp29122
I1
s(g9860
I42
g9861
Vinsert
p29123
I42
VSimpleName: delegate
p29124
tp29125
I1
s(g1939
I42
g1940
Vinsert
p29126
I42
VSimpleName: interfaces
p29127
tp29128
I1
s(g14223
I42
g14224
Vinsert
p29129
I42
VSimpleName: invocation
p29130
tp29131
I1
s(g5216
I42
g5217
Vinsert
p29132
I60
VVariableDeclarationStatement
p29133
tp29134
I1
s(g367
I42
g368
Vinsert
p29135
I43
VSimpleType: List
p29136
tp29137
I1
s(g6416
I42
g6417
Vinsert
p29138
I25
VIfStatement
p29139
tp29140
I1
s(g9504
I42
g9505
Vinsert
p29141
I42
VSimpleName: MockitoException
p29142
tp29143
I1
s(g3473
I42
g3474
Vinsert
p29144
I43
VSimpleType: Integer
p29145
tp29146
I1
s(g4853
I42
g4854
Vinsert
p29147
I42
VSimpleName: argument
p29148
tp29149
I1
s(g2031
I42
g2032
Vinsert
p29150
I27
VInfixExpression: ||
p29151
tp29152
I1
s(g9260
I42
g9261
Vinsert
p29153
I42
VSimpleName: mode
p29154
tp29155
I2
s(g2336
I42
g2337
Vinsert
p29156
I33
VNullLiteral
p29157
tp29158
I1
s(g1688
I42
g1689
Vinsert
p29159
I83
VModifier: public
p29160
tp29161
I3
s(g11749
I42
g11750
Vinsert
p29162
I42
VSimpleName: otherMock
p29163
tp29164
I3
s(g7282
I42
g7283
Vinsert
p29165
I42
VSimpleName: getNotes
p29166
tp29167
I1
s(g8889
I42
g8890
Vinsert
p29168
I43
VSimpleType: MockMaker.TypeMockability
p29169
tp29170
I1
s(g4072
I42
g4073
Vinsert
p29171
I39
VPrimitiveType: void
p29172
tp29173
I1
s(g1372
I42
g1373
Vinsert
p29174
I43
VSimpleType: StrictStubsPassing
p29175
tp29176
I1
s(g755
I42
g756
Vinsert
p29177
I42
VSimpleName: clazz
p29178
tp29179
I1
s(g3555
I42
g3556
Vinsert
p29180
I42
VSimpleName: objectReturningMethod
p29181
tp29182
I2
s(g5829
I42
g5830
Vinsert
p29183
I39
VPrimitiveType: boolean
p29184
tp29185
I6
s(g25297
I42
g25298
Vinsert
p29186
I42
VSimpleName: Class
p29187
tp29188
I2
s(g2054
I42
g2055
Vinsert
p29189
I43
VSimpleType: Object
p29190
tp29191
I1
s(g16093
I42
g16094
Vinsert
p29192
I42
VSimpleName: core
p29193
tp29194
I1
s(g1977
I42
g1978
Vinsert
p29195
I83
VModifier: public
p29196
tp29197
I2
s(g10572
I42
g10573
Vinsert
p29198
I83
VModifier: public
p29199
tp29200
I1
s(g8393
I42
g8394
Vinsert
p29201
I43
VSimpleType: Collection
p29202
tp29203
I1
s(g267
I42
g268
Vinsert
p29204
I32
VMethodInvocation
p29205
tp29206
I1
s(g568
I42
g569
Vinsert
p29207
I42
VSimpleName: SpyOnInjectedFieldsHandler
p29208
tp29209
I1
s(g10164
I42
g10165
Vinsert
p29210
I32
VMethodInvocation
p29211
tp29212
I2
s(g956
I42
g957
Vinsert
p29213
I42
VSimpleName: assertThat
p29214
tp29215
I1
s(g405
I42
g406
Vinsert
p29216
I39
VPrimitiveType: void
p29217
tp29218
I1
s(g2344
I42
g2345
Vinsert
p29219
I42
VSimpleName: settings
p29220
tp29221
I4
s(g4968
I42
g4969
Vinsert
p29222
I23
VFieldDeclaration
p29223
tp29224
I1
s(g856
I42
g857
Vinsert
p29225
I60
VVariableDeclarationStatement
p29226
tp29227
I3
s(g28810
I42
g28811
Vinsert
p29228
I42
VSimpleName: provides_stubbings_of_mock
p29229
tp29230
I1
s(g8195
I42
g8196
Vinsert
p29231
I42
VSimpleName: cause
p29232
tp29233
I3
s(g22637
I42
g22638
Vinsert
p29234
I43
VSimpleType: StubbedInvocationMatcher
p29235
tp29236
I1
s(g7351
I42
g7352
Vinsert
p29237
I42
VSimpleName: exceptions
p29238
tp29239
I1
s(g9374
I42
g9375
Vinsert
p29240
I40
VQualifiedName: Locale.ITALIAN
p29241
tp29242
I1
s(g8160
I42
g8161
Vinsert
p29243
I43
VSimpleType: NotSerializableShouldBeMocked
p29244
tp29245
I1
s(g5062
I42
g5063
Vinsert
p29246
I83
VModifier: public
p29247
tp29248
I1
s(g2175
I42
g2176
Vinsert
p29249
I57
VTypeLiteral
p29250
tp29251
I1
s(g811
I42
g812
Vinsert
p29252
I42
VSimpleName: Modifier
p29253
tp29254
I1
s(g1282
I42
g1283
Vinsert
p29255
I83
VModifier: static
p29256
tp29257
I2
s(g3441
I42
g3442
Vinsert
p29258
I42
VSimpleName: String
p29259
tp29260
I1
s(g16579
I42
g16580
Vinsert
p29261
I59
VVariableDeclarationFragment
p29262
tp29263
I1
s(g1431
I42
g1432
Vinsert
p29264
I42
VSimpleName: trace
p29265
tp29266
I2
s(g19074
I42
g19075
Vinsert
p29267
I42
VSimpleName: mocks
p29268
tp29269
I2
s(g856
I42
g857
Vinsert
p29270
I34
VNumberLiteral: 1
p29271
tp29272
I1
s(g159
I42
g160
Vinsert
p29273
I42
VSimpleName: captor
p29274
tp29275
I1
s(g12449
I42
g12450
Vinsert
p29276
I42
VSimpleName: invocations
p29277
tp29278
I2
s(g1810
I42
g1811
Vinsert
p29279
I57
VTypeLiteral
p29280
tp29281
I1
s(g415
I42
g416
Vinsert
p29282
I74
VParameterizedType: Class<? extends T>
p29283
tp29284
I1
s(g7022
I42
g7023
Vinsert
p29285
I42
VSimpleName: accessibilityChanger
p29286
tp29287
I2
s(g79
I42
g80
Vinsert
p29288
I42
VSimpleName: line
p29289
tp29290
I1
s(g8478
I42
g8479
Vinsert
p29291
I42
VSimpleName: Factory
p29292
tp29293
I1
s(g6024
I42
g6025
Vinsert
p29294
I43
VSimpleType: ReturnsEmptyValues
p29295
tp29296
I1
s(g1449
I42
g1450
Vinsert
p29297
I34
VNumberLiteral: 12
p29298
tp29299
I1
s(g5712
I42
g5713
Vinsert
p29300
I42
VSimpleName: typeParameter
p29301
tp29302
I1
s(g1982
I42
g1983
Vinsert
p29303
I42
VSimpleName: WarningsCollector
p29304
tp29305
I1
s(g2606
I42
g2607
Vinsert
p29306
I42
VSimpleName: AnnotationWithCustomValue
p29307
tp29308
I1
s(g11243
I42
g11244
Vinsert
p29309
I44
VSingleVariableDeclaration
p29310
tp29311
I1
s(g25340
I42
g25341
Vinsert
p29312
I59
VVariableDeclarationFragment
p29313
tp29314
I1
s(g15913
I42
g15914
Vinsert
p29315
I43
VSimpleType: InvocationMatcher
p29316
tp29317
I1
s(g8082
I42
g8083
Vinsert
p29318
I42
VSimpleName: delegate
p29319
tp29320
I1
s(g5805
I42
g5806
Vinsert
p29321
I42
VSimpleName: assertSame
p29322
tp29323
I1
s(g8414
I42
g8415
Vinsert
p29324
I8
VBlock
p29325
tp29326
I1
s(g6457
I42
g6458
Vinsert
p29327
I42
VSimpleName: klass
p29328
tp29329
I1
s(g119
I42
g120
Vinsert
p29330
I42
VSimpleName: getInvocations
p29331
tp29332
I1
s(g12154
I42
g12155
Vinsert
p29333
I7
VAssignment: =
p29334
tp29335
I1
s(g653
I42
g654
Vinsert
p29336
I42
VSimpleName: removeLast
p29337
tp29338
I2
s(g5123
I42
g5124
Vinsert
p29339
I42
VSimpleName: mock
p29340
tp29341
I1
s(g6316
I42
g6317
Vinsert
p29342
I32
VMethodInvocation
p29343
tp29344
I1
s(g18462
I42
g18463
Vinsert
p29345
I76
VWildcardType: ?
p29346
tp29347
I3
s(g5226
I42
g5227
Vinsert
p29348
I59
VVariableDeclarationFragment
p29349
tp29350
I1
s(g2444
I42
g2445
Vinsert
p29351
I42
VSimpleName: ITestResult
p29352
tp29353
I1
s(g5062
I42
g5063
Vinsert
p29354
I43
VSimpleType: MethodSelector
p29355
tp29356
I1
s(g11336
I42
g11337
Vinsert
p29357
I37
VPostfixExpression: ++
p29358
tp29359
I1
s(g6098
I42
g6099
Vinsert
p29360
I14
VClassInstanceCreation
p29361
tp29362
I1
s(g3060
I42
g3061
Vinsert
p29363
I42
VSimpleName: isAndroid
p29364
tp29365
I1
s(g2195
I42
g2196
Vinsert
p29366
I43
VSimpleType: Object
p29367
tp29368
I1
s(g9473
I42
g9474
Vinsert
p29369
I40
VQualifiedName: FastClass.Generator
p29370
tp29371
I2
s(g56
I42
g57
Vinsert
p29372
I42
VSimpleName: realMethod
p29373
tp29374
I2
s(g12536
I42
g12537
Vinsert
p29375
I42
VSimpleName: error
p29376
tp29377
I2
s(g2753
I42
g2754
Vinsert
p29378
I42
VSimpleName: elements
p29379
tp29380
I1
s(g5300
I42
g5301
Vinsert
p29381
I42
VSimpleName: classLoaderWithoutJUnit
p29382
tp29383
I1
s(g1599
I42
g1600
Vinsert
p29384
I42
VSimpleName: v
p29385
tp29386
I1
s(g841
I42
g842
Vinsert
p29387
I44
VSingleVariableDeclaration
p29388
tp29389
I2
s(g9037
I42
g9038
Vinsert
p29390
I42
VSimpleName: log
p29391
tp29392
I3
s(g16356
I42
g16357
Vinsert
p29393
I42
VSimpleName: stubbed
p29394
tp29395
I1
s(g2157
I42
g2158
Vinsert
p29396
I45
VStringLiteral: "hey!"
p29397
tp29398
I2
s(g28095
I42
g28096
Vinsert
p29399
I42
VSimpleName: shouldUseCustomCharMatcher1
p29400
tp29401
I2
s(g15755
I42
g15756
Vinsert
p29402
I42
VSimpleName: AllInvocationsFinder
p29403
tp29404
I4
s(g11243
I42
g11244
Vinsert
p29405
I9
VBooleanLiteral: false
p29406
tp29407
I1
s(Vinsert
p29408
I42
VSimpleName: matches
p29409
Vinsert
p29410
I39
VPrimitiveType: int
p29411
tp29412
I1
s(g926
I42
g927
Vinsert
p29413
I42
VSimpleName: stack
p29414
tp29415
I1
s(g267
I42
g268
Vinsert
p29416
I43
VSimpleType: InvocationMatcher
p29417
tp29418
I1
s(g3812
I42
g3813
Vinsert
p29419
I22
VFieldAccess
p29420
tp29421
I5
s(g10126
I42
g10127
Vinsert
p29422
I21
VExpressionStatement
p29423
tp29424
I2
s(g4153
I42
g4154
Vinsert
p29425
I43
VSimpleType: SoftReference
p29426
tp29427
I1
s(g6725
I42
g6726
Vinsert
p29428
I57
VTypeLiteral
p29429
tp29430
I1
s(g5368
I42
g5369
Vinsert
p29431
I43
VSimpleType: Throwable
p29432
tp29433
I2
s(g871
I42
g872
Vinsert
p29434
I70
VEnhancedForStatement
p29435
tp29436
I2
s(g3856
I42
g3857
Vinsert
p29437
I74
VParameterizedType: Class<? extends Throwable>
p29438
tp29439
I1
s(Vinsert
p29440
I42
VSimpleName: equals
p29441
Vinsert
p29442
I42
VSimpleName: protectedField
p29443
tp29444
I2
s(g8889
I42
g8890
Vinsert
p29445
I59
VVariableDeclarationFragment
p29446
tp29447
I1
s(g4539
I42
g4540
Vinsert
p29448
I21
VExpressionStatement
p29449
tp29450
I1
s(g9207
I42
g9208
Vinsert
p29451
I42
VSimpleName: Description
p29452
tp29453
I3
s(g16749
I42
g16750
Vinsert
p29454
I60
VVariableDeclarationStatement
p29455
tp29456
I1
s(g24251
I42
g24252
Vinsert
p29457
I9
VBooleanLiteral: false
p29458
tp29459
I1
s(g2667
I42
g2668
Vinsert
p29460
I42
VSimpleName: VerificationMode
p29461
tp29462
I4
s(Vinsert
p29463
I42
VSimpleName: simpleMethod
p29464
Vinsert
p29465
I42
VSimpleName: should_stub_even_if_some_methods_called_after_serialization
p29466
tp29467
I1
s(g6711
I42
g6712
Vinsert
p29468
I40
VQualifiedName: org.mockito.release.git.Git
p29469
tp29470
I1
s(g390
I42
g391
Vinsert
p29471
I42
VSimpleName: getElementType
p29472
tp29473
I1
s(Vinsert
p29474
I42
VSimpleName: getName
p29475
Vinsert
p29476
I42
VSimpleName: alreadyAssigned
p29477
tp29478
I2
s(g916
I42
g917
Vinsert
p29479
I60
VVariableDeclarationStatement
p29480
tp29481
I1
s(g1234
I42
g1235
Vinsert
p29482
I42
VSimpleName: MockitoException
p29483
tp29484
I2
s(g6069
I42
g6070
Vinsert
p29485
I42
VSimpleName: Test
p29486
tp29487
I1
s(g4991
I42
g4992
Vinsert
p29488
I21
VExpressionStatement
p29489
tp29490
I2
s(g2237
I42
g2238
Vinsert
p29491
I43
VSimpleType: IMethods
p29492
tp29493
I1
s(g2959
I42
g2960
Vinsert
p29494
I42
VSimpleName: when
p29495
tp29496
I3
s(g5335
I42
g5336
Vinsert
p29497
I39
VPrimitiveType: void
p29498
tp29499
I2
s(g1655
I42
g1656
Vinsert
p29500
I42
VSimpleName: assertFalse
p29501
tp29502
I2
s(g12133
I42
g12134
Vinsert
p29503
I42
VSimpleName: LinkedHashSet
p29504
tp29505
I2
s(g966
I42
g967
Vinsert
p29506
I43
VSimpleType: BDDMyOngoingStubbing
p29507
tp29508
I1
s(g796
I42
g797
Vinsert
p29509
I32
VMethodInvocation
p29510
tp29511
I1
s(g901
I42
g902
Vinsert
p29512
I42
VSimpleName: notifyInvocationListener
p29513
tp29514
I1
s(g9504
I42
g9505
Vinsert
p29515
I43
VSimpleType: MockitoException
p29516
tp29517
I1
s(g10667
I42
g10668
Vinsert
p29518
I43
VSimpleType: Commit
p29519
tp29520
I2
s(g5033
I42
g5034
Vinsert
p29521
I27
VInfixExpression: &&
p29522
tp29523
I1
s(g18377
I42
g18378
Vinsert
p29524
I42
VSimpleName: StubbingLookupListener
p29525
tp29526
I1
s(g6820
I42
g6821
Vinsert
p29527
I42
VSimpleName: mockitoState
p29528
tp29529
I1
s(g13540
I42
g13541
Vinsert
p29530
I42
VSimpleName: String
p29531
tp29532
I4
s(g8126
I42
g8127
Vinsert
p29533
I12
VCatchClause
p29534
tp29535
I1
s(g1543
I42
g1544
Vinsert
p29536
I8
VBlock
p29537
tp29538
I3
s(g29440
I42
g29441
Vinsert
p29539
I40
VQualifiedName: other.protectedField
p29540
tp29541
I1
s(Vinsert
p29542
I42
VSimpleName: toInvocation
p29543
Vinsert
p29544
I42
VSimpleName: IllegalArgumentException
p29545
tp29546
I1
s(g628
I42
g629
Vinsert
p29547
I42
VSimpleName: Field
p29548
tp29549
I1
s(g2718
I42
g2719
Vinsert
p29550
I42
VSimpleName: shouldFailOnExactNumberOfInvocations
p29551
tp29552
I1
s(g7836
I42
g7837
Vinsert
p29553
I42
VSimpleName: Builder
p29554
tp29555
I2
s(g9026
I42
g9027
Vinsert
p29556
I42
VSimpleName: reset
p29557
tp29558
I1
s(g5794
I42
g5795
Vinsert
p29559
I42
VSimpleName: String
p29560
tp29561
I1
s(g7200
I42
g7201
Vinsert
p29562
I83
VModifier: public
p29563
tp29564
I1
s(g3267
I42
g3268
Vinsert
p29565
I45
VStringLiteral: "    4th: 4\u005cn"
p29566
tp29567
I1
s(g2205
I42
g2206
Vinsert
p29568
I25
VIfStatement
p29569
tp29570
I1
s(g5052
I42
g5053
Vinsert
p29571
I42
VSimpleName: getClassLoader
p29572
tp29573
I1
s(g11995
I42
g11996
Vinsert
p29574
I42
VSimpleName: toInvocation
p29575
tp29576
I2
s(g9739
I42
g9740
Vinsert
p29577
I42
VSimpleName: exceptionMessage
p29578
tp29579
I2
s(g1760
I42
g1761
Vinsert
p29580
I42
VSimpleName: FieldSetter
p29581
tp29582
I1
s(g4441
I42
g4442
Vinsert
p29583
I27
VInfixExpression: !=
p29584
tp29585
I1
s(g17478
I42
g17479
Vinsert
p29586
I43
VSimpleType: Process
p29587
tp29588
I2
s(g1977
I42
g1978
Vinsert
p29589
I8
VBlock
p29590
tp29591
I4
s(g14003
I42
g14004
Vinsert
p29592
I43
VSimpleType: String
p29593
tp29594
I8
s(g1665
I42
g1666
Vinsert
p29595
I43
VSimpleType: MockSettings
p29596
tp29597
I1
s(g6124
I42
g6125
Vinsert
p29598
I42
VSimpleName: creates_instances_with_primitive_arguments
p29599
tp29600
I1
s(g1024
I42
g1025
Vinsert
p29601
I42
VSimpleName: Object
p29602
tp29603
I1
s(g8057
I42
g8058
Vinsert
p29604
I40
VQualifiedName: SafeJUnitRule.FailureAssert
p29605
tp29606
I1
s(Vinsert
p29607
I42
VSimpleName: simpleMethod
p29608
Vinsert
p29609
I43
VSimpleType: RunNotifier
p29610
tp29611
I1
s(g12799
I42
g12800
Vinsert
p29612
I33
VNullLiteral
p29613
tp29614
I1
s(g961
I42
g962
Vinsert
p29615
I8
VBlock
p29616
tp29617
I6
s(g3629
I42
g3630
Vinsert
p29618
I43
VSimpleType: SomeObject
p29619
tp29620
I1
s(g14420
I42
g14421
Vinsert
p29621
I25
VIfStatement
p29622
tp29623
I1
s(g11206
I42
g11207
Vinsert
p29624
I42
VSimpleName: results
p29625
tp29626
I1
s(g25519
I42
g25520
Vinsert
p29627
I39
VPrimitiveType: void
p29628
tp29629
I4
s(g10846
I42
g10847
Vinsert
p29630
I42
VSimpleName: left
p29631
tp29632
I2
s(g6103
I42
g6104
Vinsert
p29633
I22
VFieldAccess
p29634
tp29635
I1
s(g1739
I42
g1740
Vinsert
p29636
I59
VVariableDeclarationFragment
p29637
tp29638
I1
s(g11519
I42
g11520
Vinsert
p29639
I42
VSimpleName: threadOne
p29640
tp29641
I2
s(g2621
I42
g2622
Vinsert
p29642
I83
VModifier: public
p29643
tp29644
I8
s(g11877
I42
g11878
Vinsert
p29645
I42
VSimpleName: iterator
p29646
tp29647
I1
s(g2131
I42
g2132
Vinsert
p29648
I14
VClassInstanceCreation
p29649
tp29650
I2
s(g5744
I42
g5745
Vinsert
p29651
I42
VSimpleName: Object
p29652
tp29653
I1
s(g5986
I42
g5987
Vinsert
p29654
I44
VSingleVariableDeclaration
p29655
tp29656
I1
s(g214
I42
g215
Vinsert
p29657
I42
VSimpleName: iMethods
p29658
tp29659
I1
s(g9716
I42
g9717
Vinsert
p29660
I42
VSimpleName: unbox_or_zero
p29661
tp29662
I1
s(g19217
I42
g19218
Vinsert
p29663
I42
VSimpleName: IMethods
p29664
tp29665
I3
s(g1871
I42
g1872
Vinsert
p29666
I42
VSimpleName: returnsNull
p29667
tp29668
I1
s(g9016
I42
g9017
Vinsert
p29669
I57
VTypeLiteral
p29670
tp29671
I1
s(g13889
I42
g13890
Vinsert
p29672
I42
VSimpleName: shouldNeverVerifyWhenVerificationIsExplicit
p29673
tp29674
I1
s(g871
I42
g872
Vinsert
p29675
I43
VSimpleType: HashSet
p29676
tp29677
I1
s(g3953
I42
g3954
Vinsert
p29678
I42
VSimpleName: throwable
p29679
tp29680
I1
s(g2642
I42
g2643
Vinsert
p29681
I42
VSimpleName: isNotEqualWhenContentIsDifferent
p29682
tp29683
I1
s(g16154
I42
g16155
Vinsert
p29684
I42
VSimpleName: TestClass
p29685
tp29686
I1
s(g5655
I42
g5656
Vinsert
p29687
I42
VSimpleName: Object
p29688
tp29689
I11
s(g1848
I42
g1849
Vinsert
p29690
I42
VSimpleName: t
p29691
tp29692
I1
s(g5916
I42
g5917
Vinsert
p29693
I45
VStringLiteral: "1"
p29694
tp29695
I1
s(g8030
I42
g8031
Vinsert
p29696
I31
VMethodDeclaration
p29697
tp29698
I4
s(g2652
I42
g2653
Vinsert
p29699
I42
VSimpleName: ReflectUtils
p29700
tp29701
I1
s(g23752
I42
g23753
Vinsert
p29702
I42
VSimpleName: excludedPrefixes
p29703
tp29704
I1
s(g69
I42
g70
Vinsert
p29705
I42
VSimpleName: assertEquals
p29706
tp29707
I1
s(g1282
I42
g1283
Vinsert
p29708
I42
VSimpleName: LenientByDefault
p29709
tp29710
I1
s(g2796
I42
g2797
Vinsert
p29711
I42
VSimpleName: fun
p29712
tp29713
I1
s(g1398
I42
g1399
Vinsert
p29714
I57
VTypeLiteral
p29715
tp29716
I1
s(g1254
I42
g1255
Vinsert
p29717
I76
VWildcardType: ?
p29718
tp29719
I1
s(g5133
I42
g5134
Vinsert
p29720
I83
VModifier: final
p29721
tp29722
I1
s(g3408
I42
g3409
Vinsert
p29723
I42
VSimpleName: InvalidUseOfMatchersException
p29724
tp29725
I1
s(g10010
I42
g10011
Vinsert
p29726
I42
VSimpleName: invocation
p29727
tp29728
I4
s(g10341
I42
g10342
Vinsert
p29729
I43
VSimpleType: Object
p29730
tp29731
I1
s(g8184
I42
g8185
Vinsert
p29732
I42
VSimpleName: textTwo
p29733
tp29734
I2
s(g1439
I42
g1440
Vinsert
p29735
I42
VSimpleName: value
p29736
tp29737
I2
s(g4189
I42
g4190
Vinsert
p29738
I32
VMethodInvocation
p29739
tp29740
I1
s(g3560
I42
g3561
Vinsert
p29741
I52
VThisExpression
p29742
tp29743
I1
s(g9473
I42
g9474
Vinsert
p29744
I42
VSimpleName: g
p29745
tp29746
I2
s(g886
I42
g887
Vinsert
p29747
I43
VSimpleType: SecurityException
p29748
tp29749
I1
s(g1194
I42
g1195
Vinsert
p29750
I42
VSimpleName: mock
p29751
tp29752
I3
s(g9729
I42
g9730
Vinsert
p29753
I42
VSimpleName: shouldPointToActualInvocation
p29754
tp29755
I1
s(g8493
I42
g8494
Vinsert
p29756
I42
VSimpleName: GlobalConfiguration
p29757
tp29758
I1
s(g3585
I42
g3586
Vinsert
p29759
I65
VTagElement: @return
p29760
tp29761
I1
s(g3359
I42
g3360
Vinsert
p29762
I42
VSimpleName: someService
p29763
tp29764
I4
s(g2667
I42
g2668
Vinsert
p29765
I41
VReturnStatement
p29766
tp29767
I2
s(Vinsert
p29768
I42
VSimpleName: mock
p29769
Vinsert
p29770
I42
VSimpleName: reproduce_CCE_by_creating_a_mock_with_IMethods_before
p29771
tp29772
I1
s(g7657
I42
g7658
Vinsert
p29773
I42
VSimpleName: shouldLog
p29774
tp29775
I1
s(g12122
I42
g12123
Vinsert
p29776
I42
VSimpleName: declaringClass
p29777
tp29778
I1
s(g1815
I42
g1816
Vinsert
p29779
I42
VSimpleName: List
p29780
tp29781
I1
s(g267
I42
g268
Vinsert
p29782
I43
VSimpleType: InvocationsCalculator
p29783
tp29784
I1
s(Vinsert
p29785
I42
VSimpleName: getMethod
p29786
Vinsert
p29787
I42
VSimpleName: method
p29788
tp29789
I4
s(g1906
I42
g1907
Vinsert
p29790
I45
VStringLiteral: ""
p29791
tp29792
I4
s(g8126
I42
g8127
Vinsert
p29793
I8
VBlock
p29794
tp29795
I1
s(g7371
I42
g7372
Vinsert
p29796
I42
VSimpleName: m
p29797
tp29798
I1
s(g7030
I42
g7031
Vinsert
p29799
I60
VVariableDeclarationStatement
p29800
tp29801
I3
s(g5986
I42
g5987
Vinsert
p29802
I39
VPrimitiveType: void
p29803
tp29804
I1
s(g5373
I42
g5374
Vinsert
p29805
I52
VThisExpression
p29806
tp29807
I1
s(g3144
I42
g3145
Vinsert
p29808
I43
VSimpleType: Class
p29809
tp29810
I1
s(g7012
I42
g7013
Vinsert
p29811
I42
VSimpleName: IllegalStateException
p29812
tp29813
I1
s(g15219
I42
g15220
Vinsert
p29814
I34
VNumberLiteral: 1000
p29815
tp29816
I2
s(g5934
I42
g5935
Vinsert
p29817
I16
VConditionalExpression
p29818
tp29819
I1
s(g6833
I42
g6834
Vinsert
p29820
I42
VSimpleName: threadSafely
p29821
tp29822
I1
s(g12046
I42
g12047
Vinsert
p29823
I8
VBlock
p29824
tp29825
I2
s(g1901
I42
g1902
Vinsert
p29826
I42
VSimpleName: getConfig
p29827
tp29828
I1
s(g18366
I42
g18367
Vinsert
p29829
I42
VSimpleName: create
p29830
tp29831
I3
s(g6598
I42
g6599
Vinsert
p29832
I32
VMethodInvocation
p29833
tp29834
I3
s(g11418
I42
g11419
Vinsert
p29835
I42
VSimpleName: methodProxy
p29836
tp29837
I1
s(g3131
I42
g3132
Vinsert
p29838
I31
VMethodDeclaration
p29839
tp29840
I1
s(g20213
I42
g20214
Vinsert
p29841
I42
VSimpleName: Collection
p29842
tp29843
I3
s(g25297
I42
g25298
Vinsert
p29844
I19
VDoStatement
p29845
tp29846
I1
s(g19530
I42
g19531
Vinsert
p29847
I42
VSimpleName: exceptionTypes
p29848
tp29849
I1
s(g347
I42
g348
Vinsert
p29850
I27
VInfixExpression: &&
p29851
tp29852
I1
s(g239
I42
g240
Vinsert
p29853
I59
VVariableDeclarationFragment
p29854
tp29855
I3
s(g2929
I42
g2930
Vinsert
p29856
I14
VClassInstanceCreation
p29857
tp29858
I2
s(g16709
I42
g16710
Vinsert
p29859
I42
VSimpleName: getWantedArgs
p29860
tp29861
I1
s(g6574
I42
g6575
Vinsert
p29862
I60
VVariableDeclarationStatement
p29863
tp29864
I1
s(g15601
I42
g15602
Vinsert
p29865
I21
VExpressionStatement
p29866
tp29867
I9
s(g991
I42
g992
Vinsert
p29868
I16
VConditionalExpression
p29869
tp29870
I1
s(Vinsert
p29871
I42
VSimpleName: simpleMethod
p29872
Vinsert
p29873
I42
VSimpleName: i
p29874
tp29875
I1
s(g26726
I42
g26727
Vinsert
p29876
I43
VSimpleType: Method
p29877
tp29878
I1
s(g5216
I42
g5217
Vinsert
p29879
I42
VSimpleName: generic
p29880
tp29881
I1
s(g3047
I42
g3048
Vinsert
p29882
I57
VTypeLiteral
p29883
tp29884
I1
s(Vinsert
p29885
I42
VSimpleName: when
p29886
Vinsert
p29887
I43
VSimpleType: RuntimeException
p29888
tp29889
I1
s(g463
I42
g464
Vinsert
p29890
I41
VReturnStatement
p29891
tp29892
I1
s(g5033
I42
g5034
Vinsert
p29893
I36
VParenthesizedExpression
p29894
tp29895
I1
s(g3395
I42
g3396
Vinsert
p29896
I42
VSimpleName: getCanonicalName
p29897
tp29898
I1
s(g1362
I42
g1363
Vinsert
p29899
I49
VSwitchCase
p29900
tp29901
I1
s(Vinsert
p29902
I42
VSimpleName: simpleMethod
p29903
Vinsert
p29904
I42
VSimpleName: shouldNotCollectWhenNoJUnitRunner
p29905
tp29906
I1
s(g5245
I42
g5246
Vinsert
p29907
I42
VSimpleName: e
p29908
tp29909
I2
s(g7619
I42
g7620
Vinsert
p29910
I42
VSimpleName: when
p29911
tp29912
I1
s(Vinsert
p29913
I42
VSimpleName: initMocks
p29914
Vinsert
p29915
I42
VSimpleName: shouldFailIfCaptorHasWrongType
p29916
tp29917
I1
s(g5426
I42
g5427
Vinsert
p29918
I32
VMethodInvocation
p29919
tp29920
I1
s(g1683
I42
g1684
Vinsert
p29921
I43
VSimpleType: WeakReference
p29922
tp29923
I1
s(g1287
I42
g1288
Vinsert
p29924
I42
VSimpleName: MockingStartedListener
p29925
tp29926
I2
s(g648
I42
g649
Vinsert
p29927
I32
VMethodInvocation
p29928
tp29929
I3
s(g1992
I42
g1993
Vinsert
p29930
I45
VStringLiteral: "Cannot instianate @InjectMocks field named '"
p29931
tp29932
I1
s(g234
I42
g235
Vinsert
p29933
I83
VModifier: final
p29934
tp29935
I1
s(g7451
I42
g7452
Vinsert
p29936
I78
VMarkerAnnotation
p29937
tp29938
I1
s(g109
I42
g110
Vinsert
p29939
I42
VSimpleName: FailsInConstructor
p29940
tp29941
I1
s(g144
I42
g145
Vinsert
p29942
I42
VSimpleName: returnsIdentity
p29943
tp29944
I2
s(g6582
I42
g6583
Vinsert
p29945
I42
VSimpleName: ExceptionIncludingMockitoWarnings
p29946
tp29947
I1
s(Vinsert
p29948
I42
VSimpleName: initMocks
p29949
Vinsert
p29950
I42
VSimpleName: ConstructorCharsetHolder
p29951
tp29952
I1
s(g17860
I42
g17861
Vinsert
p29953
I41
VReturnStatement
p29954
tp29955
I3
s(g8517
I42
g8518
Vinsert
p29956
I42
VSimpleName: RuntimeException
p29957
tp29958
I2
s(g24722
I42
g24723
Vinsert
p29959
I42
VSimpleName: String
p29960
tp29961
I2
s(g2657
I42
g2658
Vinsert
p29962
I42
VSimpleName: maxLocals
p29963
tp29964
I1
s(g10762
I42
g10763
Vinsert
p29965
I42
VSimpleName: proxy
p29966
tp29967
I3
s(g7730
I42
g7731
Vinsert
p29968
I42
VSimpleName: Class
p29969
tp29970
I1
s(g1660
I42
g1661
Vinsert
p29971
I83
VModifier: public
p29972
tp29973
I3
s(g1024
I42
g1025
Vinsert
p29974
I42
VSimpleName: Spy
p29975
tp29976
I1
s(g10385
I42
g10386
Vinsert
p29977
I39
VPrimitiveType: int
p29978
tp29979
I3
s(g3864
I42
g3865
Vinsert
p29980
I83
VModifier: final
p29981
tp29982
I3
s(g415
I42
g416
Vinsert
p29983
I42
VSimpleName: getOrMakeMock
p29984
tp29985
I1
s(g17557
I42
g17558
Vinsert
p29986
I45
VStringLiteral: "Object created"
p29987
tp29988
I3
s(g1416
I42
g1417
Vinsert
p29989
I59
VVariableDeclarationFragment
p29990
tp29991
I1
s(g9339
I42
g9340
Vinsert
p29992
I21
VExpressionStatement
p29993
tp29994
I1
s(g8337
I42
g8338
Vinsert
p29995
I32
VMethodInvocation
p29996
tp29997
I5
s(g19217
I42
g19218
Vinsert
p29998
I42
VSimpleName: never
p29999
tp30000
I2
s(g3802
I42
g3803
Vinsert
p30001
I42
VSimpleName: StackTraceElement
p30002
tp30003
I2
s(g22136
I42
g22137
Vinsert
p30004
I42
VSimpleName: t
p30005
tp30006
I2
s(g3359
I42
g3360
Vinsert
p30007
I31
VMethodDeclaration
p30008
tp30009
I2
s(g12705
I42
g12706
Vinsert
p30010
I76
VWildcardType: ? extends Map.Entry<?,?>
p30011
tp30012
I1
s(g1573
I42
g1574
Vinsert
p30013
I42
VSimpleName: findPreviousInOrder
p30014
tp30015
I1
s(g5138
I42
g5139
Vinsert
p30016
I42
VSimpleName: state
p30017
tp30018
I1
s(g234
I42
g235
Vinsert
p30019
I42
VSimpleName: LDC_INSN
p30020
tp30021
I1
s(g9196
I42
g9197
Vinsert
p30022
I60
VVariableDeclarationStatement
p30023
tp30024
I11
s(g2718
I42
g2719
Vinsert
p30025
I43
VSimpleType: NumberOfInvocationsAssertionError
p30026
tp30027
I1
s(g9483
I42
g9484
Vinsert
p30028
I42
VSimpleName: InvocationMatcher
p30029
tp30030
I1
s(g27967
I42
g27968
Vinsert
p30031
I42
VSimpleName: mocksToBeVerifiedStrictly
p30032
tp30033
I2
s(g12872
I42
g12873
Vinsert
p30034
I21
VExpressionStatement
p30035
tp30036
I2
s(g742
I42
g743
Vinsert
p30037
I42
VSimpleName: allInvocationsInOrder
p30038
tp30039
I2
s(g11718
I42
g11719
Vinsert
p30040
I43
VSimpleType: MockCreationSettings
p30041
tp30042
I1
s(g3413
I42
g3414
Vinsert
p30043
I43
VSimpleType: String
p30044
tp30045
I1
s(Vinsert
p30046
I42
VSimpleName: verify
p30047
Vinsert
p30048
I9
VBooleanLiteral: true
p30049
tp30050
I3
s(g124
I42
g125
Vinsert
p30051
I60
VVariableDeclarationStatement
p30052
tp30053
I1
s(g1174
I42
g1175
Vinsert
p30054
I42
VSimpleName: setMock
p30055
tp30056
I1
s(g19136
I42
g19137
Vinsert
p30057
I42
VSimpleName: Array
p30058
tp30059
I2
s(g12304
I42
g12305
Vinsert
p30060
I43
VSimpleType: LinkedList
p30061
tp30062
I2
s(g2200
I42
g2201
Vinsert
p30063
I42
VSimpleName: actual
p30064
tp30065
I1
s(g6379
I42
g6380
Vinsert
p30066
I45
VStringLiteral: "c"
p30067
tp30068
I1
s(g2518
I42
g2519
Vinsert
p30069
I42
VSimpleName: C
p30070
tp30071
I1
s(g861
I42
g862
Vinsert
p30072
I42
VSimpleName: Exception
p30073
tp30074
I2
s(g4714
I42
g4715
Vinsert
p30075
I43
VSimpleType: Object
p30076
tp30077
I4
s(Vinsert
p30078
I42
VSimpleName: append
p30079
Vinsert
p30080
I42
VSimpleName: result
p30081
tp30082
I4
s(g4072
I42
g4073
Vinsert
p30083
I42
VSimpleName: IMethods
p30084
tp30085
I1
s(g986
I42
g987
Vinsert
p30086
I42
VSimpleName: MethodVisitor
p30087
tp30088
I1
s(g3155
I42
g3156
Vinsert
p30089
I42
VSimpleName: returnFor
p30090
tp30091
I1
s(g2321
I42
g2322
Vinsert
p30092
I9
VBooleanLiteral: false
p30093
tp30094
I1
s(g1069
I42
g1070
Vinsert
p30095
I42
VSimpleName: addConsecutiveAnswer
p30096
tp30097
I1
s(g5725
I42
g5726
Vinsert
p30098
I42
VSimpleName: smartNull
p30099
tp30100
I1
s(g12149
I42
g12150
Vinsert
p30101
I43
VSimpleType: InstantationException
p30102
tp30103
I1
s(g11509
I42
g11510
Vinsert
p30104
I42
VSimpleName: method
p30105
tp30106
I1
s(g25785
I42
g25786
Vinsert
p30107
I43
VSimpleType: Answer
p30108
tp30109
I1
s(g3106
I42
g3107
Vinsert
p30110
I44
VSingleVariableDeclaration
p30111
tp30112
I1
s(g10368
I42
g10369
Vinsert
p30113
I74
VParameterizedType: Map.Entry<String,Boolean>
p30114
tp30115
I1
s(g29948
I42
g29949
Vinsert
p30116
I42
VSimpleName: constructorCharsetHolder
p30117
tp30118
I1
s(g4072
I42
g4073
Vinsert
p30119
I78
VMarkerAnnotation
p30120
tp30121
I1
s(g5118
I42
g5119
Vinsert
p30122
I83
VModifier: public
p30123
tp30124
I1
s(g19136
I42
g19137
Vinsert
p30125
I2
VArrayAccess
p30126
tp30127
I1
s(g6468
I42
g6469
Vinsert
p30128
I59
VVariableDeclarationFragment
p30129
tp30130
I16
s(g9576
I42
g9577
Vinsert
p30131
I42
VSimpleName: VerificationMode
p30132
tp30133
I1
s(g3896
I42
g3897
Vinsert
p30134
I8
VBlock
p30135
tp30136
I2
s(g25519
I42
g25520
Vinsert
p30137
I21
VExpressionStatement
p30138
tp30139
I9
s(g7780
I42
g7781
Vinsert
p30140
I42
VSimpleName: Class
p30141
tp30142
I3
s(g2467
I42
g2468
Vinsert
p30143
I23
VFieldDeclaration
p30144
tp30145
I1
s(g6535
I42
g6536
Vinsert
p30146
I39
VPrimitiveType: void
p30147
tp30148
I1
s(g6098
I42
g6099
Vinsert
p30149
I42
VSimpleName: logger
p30150
tp30151
I1
s(g3078
I42
g3079
Vinsert
p30152
I25
VIfStatement
p30153
tp30154
I2
s(g17579
I42
g17580
Vinsert
p30155
I42
VSimpleName: Assert
p30156
tp30157
I3
s(g6882
I42
g6883
Vinsert
p30158
I54
VTryStatement
p30159
tp30160
I1
s(g5159
I42
g5160
Vinsert
p30161
I41
VReturnStatement
p30162
tp30163
I1
s(g8200
I42
g8201
Vinsert
p30164
I39
VPrimitiveType: long
p30165
tp30166
I1
s(Vinsert
p30167
I42
VSimpleName: mock
p30168
Vinsert
p30169
I83
VModifier: final
p30170
tp30171
I1
s(g5151
I42
g5152
Vinsert
p30172
I43
VSimpleType: GenericsNest
p30173
tp30174
I2
s(g2321
I42
g2322
Vinsert
p30175
I57
VTypeLiteral
p30176
tp30177
I1
s(g16823
I42
g16824
Vinsert
p30178
I34
VNumberLiteral: 200
p30179
tp30180
I1
s(g2743
I42
g2744
Vinsert
p30181
I5
VArrayType: Integer[]
p30182
tp30183
I1
s(Vinsert
p30184
I42
VSimpleName: size
p30185
Vinsert
p30186
I42
VSimpleName: wantedMatcher
p30187
tp30188
I1
s(g2480
I42
g2481
Vinsert
p30189
I43
VSimpleType: Set
p30190
tp30191
I1
s(g2452
I42
g2453
Vinsert
p30192
I42
VSimpleName: FileInputStream
p30193
tp30194
I1
s(g3532
I42
g3533
Vinsert
p30195
I33
VNullLiteral
p30196
tp30197
I3
s(g2804
I42
g2805
Vinsert
p30198
I42
VSimpleName: contains
p30199
tp30200
I3
s(g9990
I42
g9991
Vinsert
p30201
I42
VSimpleName: isPackagePrivate
p30202
tp30203
I2
s(g911
I42
g912
Vinsert
p30204
I39
VPrimitiveType: void
p30205
tp30206
I2
s(g13218
I42
g13219
Vinsert
p30207
I60
VVariableDeclarationStatement
p30208
tp30209
I1
s(g3183
I42
g3184
Vinsert
p30210
I21
VExpressionStatement
p30211
tp30212
I4
s(g2921
I42
g2922
Vinsert
p30213
I8
VBlock
p30214
tp30215
I1
s(g4017
I42
g4018
Vinsert
p30216
I42
VSimpleName: AnotherListOfInteger
p30217
tp30218
I2
s(g1914
I42
g1915
Vinsert
p30219
I42
VSimpleName: Set
p30220
tp30221
I1
s(g2364
I42
g2365
Vinsert
p30222
I42
VSimpleName: e
p30223
tp30224
I1
s(g5113
I42
g5114
Vinsert
p30225
I42
VSimpleName: getSize
p30226
tp30227
I1
s(g8889
I42
g8890
Vinsert
p30228
I43
VSimpleType: Object
p30229
tp30230
I1
s(g1416
I42
g1417
Vinsert
p30231
I32
VMethodInvocation
p30232
tp30233
I1
s(g4184
I42
g4185
Vinsert
p30234
I42
VSimpleName: T
p30235
tp30236
I3
s(g10091
I42
g10092
Vinsert
p30237
I42
VSimpleName: begin_method
p30238
tp30239
I1
s(Vinsert
p30240
I42
VSimpleName: getMethod
p30241
Vinsert
p30242
I42
VSimpleName: shouldNotBeSimilarIfIsOverloadedButUsedWithTheSameArg
p30243
tp30244
I1
s(g23727
I42
g23728
Vinsert
p30245
I42
VSimpleName: given
p30246
tp30247
I1
s(g12390
I42
g12391
Vinsert
p30248
I42
VSimpleName: e
p30249
tp30250
I2
s(g16902
I42
g16903
Vinsert
p30251
I57
VTypeLiteral
p30252
tp30253
I2
s(g7966
I42
g7967
Vinsert
p30254
I21
VExpressionStatement
p30255
tp30256
I1
s(g12694
I42
g12695
Vinsert
p30257
I42
VSimpleName: Object
p30258
tp30259
I1
s(g1939
I42
g1940
Vinsert
p30260
I42
VSimpleName: e
p30261
tp30262
I2
s(g69
I42
g70
Vinsert
p30263
I42
VSimpleName: should_check_that_a_spy_is_also_a_mock
p30264
tp30265
I1
s(g14336
I42
g14337
Vinsert
p30266
I44
VSingleVariableDeclaration
p30267
tp30268
I2
s(g765
I42
g766
Vinsert
p30269
I21
VExpressionStatement
p30270
tp30271
I1
s(Vinsert
p30272
I42
VSimpleName: assertThat
p30273
Vinsert
p30274
I54
VTryStatement
p30275
tp30276
I1
s(g7313
I42
g7314
Vinsert
p30277
I27
VInfixExpression: >
p30278
tp30279
I1
s(g755
I42
g756
Vinsert
p30280
I43
VSimpleType: Collection
p30281
tp30282
I1
s(g7200
I42
g7201
Vinsert
p30283
I32
VMethodInvocation
p30284
tp30285
I2
s(g12154
I42
g12155
Vinsert
p30286
I52
VThisExpression
p30287
tp30288
I1
s(g15719
I42
g15720
Vinsert
p30289
I43
VSimpleType: BDDOngoingStubbingImpl
p30290
tp30291
I1
s(g13694
I42
g13695
Vinsert
p30292
I38
VPrefixExpression: !
p30293
tp30294
I2
s(g1403
I42
g1404
Vinsert
p30295
I57
VTypeLiteral
p30296
tp30297
I1
s(Vinsert
p30298
I42
VSimpleName: newUTF8
p30299
Vinsert
p30300
I25
VIfStatement
p30301
tp30302
I1
s(g5408
I42
g5409
Vinsert
p30303
I52
VThisExpression
p30304
tp30305
I1
s(g347
I42
g348
Vinsert
p30306
I40
VQualifiedName: MethodDescription.ForLoadedMethod
p30307
tp30308
I1
s(g6820
I42
g6821
Vinsert
p30309
I32
VMethodInvocation
p30310
tp30311
I2
s(g17574
I42
g17575
Vinsert
p30312
I42
VSimpleName: result
p30313
tp30314
I1
s(g2606
I42
g2607
Vinsert
p30315
I43
VSimpleType: AnnotationWithCustomValue
p30316
tp30317
I1
s(g1254
I42
g1255
Vinsert
p30318
I42
VSimpleName: SuspendMethod
p30319
tp30320
I1
s(g493
I42
g494
Vinsert
p30321
I42
VSimpleName: Character
p30322
tp30323
I1
s(g5305
I42
g5306
Vinsert
p30324
I76
VWildcardType: ?
p30325
tp30326
I1
s(g1482
I42
g1483
Vinsert
p30327
I42
VSimpleName: wanted
p30328
tp30329
I1
s(g6725
I42
g6726
Vinsert
p30330
I42
VSimpleName: shouldNotAllowNullListener
p30331
tp30332
I1
s(g5636
I42
g5637
Vinsert
p30333
I34
VNumberLiteral: 100
p30334
tp30335
I1
s(g3091
I42
g3092
Vinsert
p30336
I42
VSimpleName: assertEquals
p30337
tp30338
I1
s(g17492
I42
g17493
Vinsert
p30339
I42
VSimpleName: assertValue
p30340
tp30341
I1
s(g4382
I42
g4383
Vinsert
p30342
I42
VSimpleName: argument
p30343
tp30344
I1
s(g134
I42
g135
Vinsert
p30345
I43
VSimpleType: FieldInsnNode
p30346
tp30347
I2
s(g9408
I42
g9409
Vinsert
p30348
I21
VExpressionStatement
p30349
tp30350
I1
s(Vinsert
p30351
I42
VSimpleName: mock
p30352
Vinsert
p30353
I42
VSimpleName: DummyClass
p30354
tp30355
I1
s(g99
I42
g100
Vinsert
p30356
I43
VSimpleType: Description
p30357
tp30358
I4
s(g12370
I42
g12371
Vinsert
p30359
I42
VSimpleName: MethodProxy
p30360
tp30361
I1
s(g2385
I42
g2386
Vinsert
p30362
I42
VSimpleName: VerifcationInOrderFailure
p30363
tp30364
I1
s(g2748
I42
g2749
Vinsert
p30365
I14
VClassInstanceCreation
p30366
tp30367
I4
s(g5717
I42
g5718
Vinsert
p30368
I42
VSimpleName: shouldVerifyUsingMixedMatchers
p30369
tp30370
I1
s(g2601
I42
g2602
Vinsert
p30371
I43
VSimpleType: CreationSettings
p30372
tp30373
I2
s(g4840
I42
g4841
Vinsert
p30374
I83
VModifier: static
p30375
tp30376
I1
s(g2131
I42
g2132
Vinsert
p30377
I21
VExpressionStatement
p30378
tp30379
I1
s(g3224
I42
g3225
Vinsert
p30380
I42
VSimpleName: differentMethod
p30381
tp30382
I1
s(g3308
I42
g3309
Vinsert
p30383
I42
VSimpleName: result
p30384
tp30385
I1
s(g2005
I42
g2006
Vinsert
p30386
I8
VBlock
p30387
tp30388
I2
s(g12574
I42
g12575
Vinsert
p30389
I42
VSimpleName: DefaultMockitoConfiguration
p30390
tp30391
I1
s(g2944
I42
g2945
Vinsert
p30392
I42
VSimpleName: makeMarkerInterface
p30393
tp30394
I1
s(g8553
I42
g8554
Vinsert
p30395
I43
VSimpleType: String
p30396
tp30397
I1
s(g16449
I42
g16450
Vinsert
p30398
I8
VBlock
p30399
tp30400
I1
s(g8275
I42
g8276
Vinsert
p30401
I42
VSimpleName: RETURNS_DEEP_STUBS
p30402
tp30403
I1
s(g1896
I42
g1897
Vinsert
p30404
I45
VStringLiteral: "static_a"
p30405
tp30406
I1
s(g3782
I42
g3783
Vinsert
p30407
I7
VAssignment: =
p30408
tp30409
I1
s(g11572
I42
g11573
Vinsert
p30410
I42
VSimpleName: getMethods
p30411
tp30412
I1
s(g14352
I42
g14353
Vinsert
p30413
I42
VSimpleName: Exception
p30414
tp30415
I1
s(g966
I42
g967
Vinsert
p30416
I42
VSimpleName: BDDMyOngoingStubbing
p30417
tp30418
I1
s(g4763
I42
g4764
Vinsert
p30419
I45
VStringLiteral: "mock"
p30420
tp30421
I2
s(g936
I42
g937
Vinsert
p30422
I31
VMethodDeclaration
p30423
tp30424
I1
s(g5164
I42
g5165
Vinsert
p30425
I43
VSimpleType: InvocationOnMock
p30426
tp30427
I1
s(g11686
I42
g11687
Vinsert
p30428
I21
VExpressionStatement
p30429
tp30430
I7
s(g10667
I42
g10668
Vinsert
p30431
I42
VSimpleName: commit
p30432
tp30433
I2
s(g6339
I42
g6340
Vinsert
p30434
I83
VModifier: public
p30435
tp30436
I1
s(g11686
I42
g11687
Vinsert
p30437
I32
VMethodInvocation
p30438
tp30439
I9
s(g3275
I42
g3276
Vinsert
p30440
I21
VExpressionStatement
p30441
tp30442
I2
s(g6658
I42
g6659
Vinsert
p30443
I21
VExpressionStatement
p30444
tp30445
I3
s(g1977
I42
g1978
Vinsert
p30446
I42
VSimpleName: verify
p30447
tp30448
I1
s(g24378
I42
g24379
Vinsert
p30449
I43
VSimpleType: Object
p30450
tp30451
I1
s(g5994
I42
g5995
Vinsert
p30452
I42
VSimpleName: runner
p30453
tp30454
I4
s(g8770
I42
g8771
Vinsert
p30455
I42
VSimpleName: index
p30456
tp30457
I2
s(g2988
I42
g2989
Vinsert
p30458
I27
VInfixExpression: !=
p30459
tp30460
I3
s(g12245
I42
g12246
Vinsert
p30461
I44
VSingleVariableDeclaration
p30462
tp30463
I1
s(g1332
I42
g1333
Vinsert
p30464
I66
VTextElement: when(mock.giveMe(argThat(new MyHamcrestMatcher())));
p30465
tp30466
I1
s(g3170
I42
g3171
Vinsert
p30467
I32
VMethodInvocation
p30468
tp30469
I1
s(g578
I42
g579
Vinsert
p30470
I42
VSimpleName: expectedNanos
p30471
tp30472
I1
s(g5128
I42
g5129
Vinsert
p30473
I43
VSimpleType: InvocationBuilder
p30474
tp30475
I2
s(g9323
I42
g9324
Vinsert
p30476
I21
VExpressionStatement
p30477
tp30478
I2
s(g5282
I42
g5283
Vinsert
p30479
I59
VVariableDeclarationFragment
p30480
tp30481
I1
s(g468
I42
g469
Vinsert
p30482
I42
VSimpleName: List
p30483
tp30484
I1
s(g12318
I42
g12319
Vinsert
p30485
I42
VSimpleName: getUnfilteredStackTrace
p30486
tp30487
I1
s(g2503
I42
g2504
Vinsert
p30488
I42
VSimpleName: e
p30489
tp30490
I1
s(g20934
I42
g20935
Vinsert
p30491
I42
VSimpleName: cls
p30492
tp30493
I3
s(g2222
I42
g2223
Vinsert
p30494
I42
VSimpleName: Class
p30495
tp30496
I11
s(g3835
I42
g3836
Vinsert
p30497
I43
VSimpleType: StackTrackeFilteringTest
p30498
tp30499
I1
s(g8401
I42
g8402
Vinsert
p30500
I42
VSimpleName: simpleMethod
p30501
tp30502
I1
s(g3183
I42
g3184
Vinsert
p30503
I42
VSimpleName: mocks
p30504
tp30505
I1
s(Vinsert
p30506
I42
VSimpleName: getMessage
p30507
Vinsert
p30508
I45
VStringLiteral: "InvalidStateDetectionTest.unfinishedVerificationHere"
p30509
tp30510
I1
s(g4456
I42
g4457
Vinsert
p30511
I42
VSimpleName: InvocationTargetException
p30512
tp30513
I1
s(g11956
I42
g11957
Vinsert
p30514
I42
VSimpleName: FooImpl
p30515
tp30516
I1
s(g2621
I42
g2622
Vinsert
p30517
I42
VSimpleName: assertEquals
p30518
tp30519
I3
s(g6846
I42
g6847
Vinsert
p30520
I59
VVariableDeclarationFragment
p30521
tp30522
I1
s(g20213
I42
g20214
Vinsert
p30523
I42
VSimpleName: collection
p30524
tp30525
I4
s(g17182
I42
g17183
Vinsert
p30526
I43
VSimpleType: Class
p30527
tp30528
I1
s(g14014
I42
g14015
Vinsert
p30529
I42
VSimpleName: pluralize
p30530
tp30531
I1
s(g14420
I42
g14421
Vinsert
p30532
I42
VSimpleName: T
p30533
tp30534
I1
s(g10185
I42
g10186
Vinsert
p30535
I42
VSimpleName: String
p30536
tp30537
I3
s(g5926
I42
g5927
Vinsert
p30538
I42
VSimpleName: configClass
p30539
tp30540
I1
s(g5180
I42
g5181
Vinsert
p30541
I21
VExpressionStatement
p30542
tp30543
I1
s(g13897
I42
g13898
Vinsert
p30544
I43
VSimpleType: Object
p30545
tp30546
I2
s(g12071
I42
g12072
Vinsert
p30547
I45
VStringLiteral: "This substring: \u005cn"
p30548
tp30549
I1
s(g3354
I42
g3355
Vinsert
p30550
I59
VVariableDeclarationFragment
p30551
tp30552
I2
s(g513
I42
g514
Vinsert
p30553
I42
VSimpleName: iterator
p30554
tp30555
I5
s(g3421
I42
g3422
Vinsert
p30556
I65
VTagElement: @return
p30557
tp30558
I2
s(g12606
I42
g12607
Vinsert
p30559
I42
VSimpleName: listeners
p30560
tp30561
I1
s(g2770
I42
g2771
Vinsert
p30562
I43
VSimpleType: Object
p30563
tp30564
I1
s(g1919
I42
g1920
Vinsert
p30565
I41
VReturnStatement
p30566
tp30567
I1
s(g438
I42
g439
Vinsert
p30568
I42
VSimpleName: String
p30569
tp30570
I4
s(g16291
I42
g16292
Vinsert
p30571
I42
VSimpleName: inner
p30572
tp30573
I1
s(g2973
I42
g2974
Vinsert
p30574
I39
VPrimitiveType: void
p30575
tp30576
I1
s(g2723
I42
g2724
Vinsert
p30577
I42
VSimpleName: wanted
p30578
tp30579
I5
s(g801
I42
g802
Vinsert
p30580
I43
VSimpleType: PrintSettings
p30581
tp30582
I1
s(g7495
I42
g7496
Vinsert
p30583
I42
VSimpleName: detecter
p30584
tp30585
I1
s(g1169
I42
g1170
Vinsert
p30586
I42
VSimpleName: RuntimeException
p30587
tp30588
I1
s(Vinsert
p30589
I42
VSimpleName: getCause
p30590
Vinsert
p30591
I45
VStringLiteral: "No more interactions wanted"
p30592
tp30593
I1
s(g1770
I42
g1771
Vinsert
p30594
I43
VSimpleType: Constructor
p30595
tp30596
I1
s(g229
I42
g230
Vinsert
p30597
I42
VSimpleName: CollectionsServer
p30598
tp30599
I1
s(g1029
I42
g1030
Vinsert
p30600
I42
VSimpleName: argumentInstances
p30601
tp30602
I1
s(g2090
I42
g2091
Vinsert
p30603
I43
VSimpleType: StackTraceElement
p30604
tp30605
I3
s(g312
I42
g313
Vinsert
p30606
I42
VSimpleName: Random
p30607
tp30608
I1
s(g272
I42
g273
Vinsert
p30609
I42
VSimpleName: MockitoException
p30610
tp30611
I1
s(g10971
I42
g10972
Vinsert
p30612
I40
VQualifiedName: Strictness.WARN
p30613
tp30614
I1
s(Vinsert
p30615
I42
VSimpleName: initMocks
p30616
Vinsert
p30617
I42
VSimpleName: Override
p30618
tp30619
I2
s(g9229
I42
g9230
Vinsert
p30620
I14
VClassInstanceCreation
p30621
tp30622
I1
s(g4900
I42
g4901
Vinsert
p30623
I43
VSimpleType: UnusedStubsFinder
p30624
tp30625
I1
s(g7253
I42
g7254
Vinsert
p30626
I42
VSimpleName: String
p30627
tp30628
I2
s(Vinsert
p30629
I42
VSimpleName: get
p30630
Vinsert
p30631
I42
VSimpleName: OngoingStubbing
p30632
tp30633
I1
s(g12635
I42
g12636
Vinsert
p30634
I43
VSimpleType: Matcher
p30635
tp30636
I1
s(g4750
I42
g4751
Vinsert
p30637
I42
VSimpleName: newStringObjectShouldNotBeEqual
p30638
tp30639
I2
s(g15316
I42
g15317
Vinsert
p30640
I31
VMethodDeclaration
p30641
tp30642
I3
s(g5879
I42
g5880
Vinsert
p30643
I43
VSimpleType: Thread
p30644
tp30645
I6
s(g252
I42
g253
Vinsert
p30646
I42
VSimpleName: match
p30647
tp30648
I1
s(g6973
I42
g6974
Vinsert
p30649
I42
VSimpleName: lastActualInvocationStackTrace
p30650
tp30651
I1
s(g6233
I42
g6234
Vinsert
p30652
I42
VSimpleName: varargCapturingMatcher
p30653
tp30654
I1
s(g3257
I42
g3258
Vinsert
p30655
I43
VSimpleType: GenericsNest
p30656
tp30657
I1
s(g8604
I42
g8605
Vinsert
p30658
I42
VSimpleName: isEmpty
p30659
tp30660
I2
s(g16513
I42
g16514
Vinsert
p30661
I53
VThrowStatement
p30662
tp30663
I2
s(g24467
I42
g24468
Vinsert
p30664
I23
VFieldDeclaration
p30665
tp30666
I1
s(g2452
I42
g2453
Vinsert
p30667
I42
VSimpleName: returnObject
p30668
tp30669
I1
s(g10015
I42
g10016
Vinsert
p30670
I42
VSimpleName: asList
p30671
tp30672
I1
s(g3709
I42
g3710
Vinsert
p30673
I45
VStringLiteral: "createInfo"
p30674
tp30675
I1
s(g7313
I42
g7314
Vinsert
p30676
I42
VSimpleName: returnTypeGenericMetadata
p30677
tp30678
I2
s(g342
I42
g343
Vinsert
p30679
I43
VSimpleType: FileWriter
p30680
tp30681
I1
s(g8867
I42
g8868
Vinsert
p30682
I31
VMethodDeclaration
p30683
tp30684
I1
s(g9344
I42
g9345
Vinsert
p30685
I43
VSimpleType: Void
p30686
tp30687
I1
s(g12606
I42
g12607
Vinsert
p30688
I42
VSimpleName: VerificationEvent
p30689
tp30690
I1
s(g25187
I42
g25188
Vinsert
p30691
I59
VVariableDeclarationFragment
p30692
tp30693
I2
s(g17704
I42
g17705
Vinsert
p30694
I42
VSimpleName: toMultilineString
p30695
tp30696
I1
s(g11074
I42
g11075
Vinsert
p30697
I21
VExpressionStatement
p30698
tp30699
I1
s(g7221
I42
g7222
Vinsert
p30700
I83
VModifier: private
p30701
tp30702
I2
s(g704
I42
g705
Vinsert
p30703
I42
VSimpleName: Class
p30704
tp30705
I1
s(g8383
I42
g8384
Vinsert
p30706
I42
VSimpleName: reset
p30707
tp30708
I1
s(g4675
I42
g4676
Vinsert
p30709
I42
VSimpleName: stubbedInvocations
p30710
tp30711
I2
s(g26726
I42
g26727
Vinsert
p30712
I42
VSimpleName: Method
p30713
tp30714
I1
s(g27741
I42
g27742
Vinsert
p30715
I42
VSimpleName: start
p30716
tp30717
I1
s(g3183
I42
g3184
Vinsert
p30718
I32
VMethodInvocation
p30719
tp30720
I7
s(g1477
I42
g1478
Vinsert
p30721
I32
VMethodInvocation
p30722
tp30723
I1
s(g966
I42
g967
Vinsert
p30724
I74
VParameterizedType: BDDOngoingStubbingImpl<T>
p30725
tp30726
I1
s(g3055
I42
g3056
Vinsert
p30727
I57
VTypeLiteral
p30728
tp30729
I1
s(g3354
I42
g3355
Vinsert
p30730
I57
VTypeLiteral
p30731
tp30732
I1
s(g1765
I42
g1766
Vinsert
p30733
I42
VSimpleName: List
p30734
tp30735
I1
s(g12326
I42
g12327
Vinsert
p30736
I83
VModifier: public
p30737
tp30738
I1
s(g2526
I42
g2527
Vinsert
p30739
I42
VSimpleName: CapturesArguments
p30740
tp30741
I4
s(g3136
I42
g3137
Vinsert
p30742
I74
VParameterizedType: SoftReference<MethodGraph>
p30743
tp30744
I2
s(g13881
I42
g13882
Vinsert
p30745
I42
VSimpleName: String
p30746
tp30747
I2
s(g11552
I42
g11553
Vinsert
p30748
I42
VSimpleName: skip
p30749
tp30750
I1
s(g16004
I42
g16005
Vinsert
p30751
I45
VStringLiteral: "A Byte Buddy-generated mock cannot be deserialized into a non-Byte Buddy generated mock class"
p30752
tp30753
I1
s(g4585
I42
g4586
Vinsert
p30754
I14
VClassInstanceCreation
p30755
tp30756
I2
s(g3904
I42
g3905
Vinsert
p30757
I33
VNullLiteral
p30758
tp30759
I1
s(g11757
I42
g11758
Vinsert
p30760
I25
VIfStatement
p30761
tp30762
I1
s(g4077
I42
g4078
Vinsert
p30763
I21
VExpressionStatement
p30764
tp30765
I6
s(g1853
I42
g1854
Vinsert
p30766
I39
VPrimitiveType: void
p30767
tp30768
I1
s(g17240
I42
g17241
Vinsert
p30769
I42
VSimpleName: sorter
p30770
tp30771
I1
s(g1523
I42
g1524
Vinsert
p30772
I59
VVariableDeclarationFragment
p30773
tp30774
I2
s(g6116
I42
g6117
Vinsert
p30775
I32
VMethodInvocation
p30776
tp30777
I1
s(Vinsert
p30778
I42
VSimpleName: getDeclaredFields
p30779
Vinsert
p30780
I42
VSimpleName: testClass
p30781
tp30782
I1
s(g453
I42
g454
Vinsert
p30783
I42
VSimpleName: last
p30784
tp30785
I1
s(g119
I42
g120
Vinsert
p30786
I42
VSimpleName: registeredInvocations
p30787
tp30788
I1
s(g15804
I42
g15805
Vinsert
p30789
I32
VMethodInvocation
p30790
tp30791
I1
s(g199
I42
g200
Vinsert
p30792
I21
VExpressionStatement
p30793
tp30794
I2
s(g4510
I42
g4511
Vinsert
p30795
I42
VSimpleName: MockUtil
p30796
tp30797
I1
s(g2775
I42
g2776
Vinsert
p30798
I43
VSimpleType: VerificationInOrderFromMultipleThreadsTest
p30799
tp30800
I1
s(g12941
I42
g12942
Vinsert
p30801
I42
VSimpleName: next
p30802
tp30803
I1
s(g22789
I42
g22790
Vinsert
p30804
I42
VSimpleName: MockHandlerInterface
p30805
tp30806
I1
s(g2949
I42
g2950
Vinsert
p30807
I43
VSimpleType: StackTraceElement
p30808
tp30809
I1
s(g9021
I42
g9022
Vinsert
p30810
I74
VParameterizedType: Class<?>
p30811
tp30812
I2
s(g533
I42
g534
Vinsert
p30813
I42
VSimpleName: target
p30814
tp30815
I1
s(g4853
I42
g4854
Vinsert
p30816
I42
VSimpleName: arguments
p30817
tp30818
I1
s(g5879
I42
g5880
Vinsert
p30819
I42
VSimpleName: r
p30820
tp30821
I2
s(g7704
I42
g7705
Vinsert
p30822
I42
VSimpleName: s
p30823
tp30824
I1
s(g2667
I42
g2668
Vinsert
p30825
I42
VSimpleName: verificationStrategy
p30826
tp30827
I1
s(g4502
I42
g4503
Vinsert
p30828
I4
VArrayInitializer
p30829
tp30830
I1
s(g19400
I42
g19401
Vinsert
p30831
I42
VSimpleName: defaultAnswer
p30832
tp30833
I2
s(g3822
I42
g3823
Vinsert
p30834
I42
VSimpleName: actualMessage
p30835
tp30836
I3
s(g10311
I42
g10312
Vinsert
p30837
I42
VSimpleName: assertSame
p30838
tp30839
I2
s(g3083
I42
g3084
Vinsert
p30840
I42
VSimpleName: e
p30841
tp30842
I4
s(g3787
I42
g3788
Vinsert
p30843
I43
VSimpleType: Class
p30844
tp30845
I1
s(g16902
I42
g16903
Vinsert
p30846
I42
VSimpleName: MethodDelegation
p30847
tp30848
I1
s(g4600
I42
g4601
Vinsert
p30849
I78
VMarkerAnnotation
p30850
tp30851
I2
s(g6162
I42
g6163
Vinsert
p30852
I25
VIfStatement
p30853
tp30854
I1
s(g9781
I42
g9782
Vinsert
p30855
I42
VSimpleName: message
p30856
tp30857
I1
s(g10623
I42
g10624
Vinsert
p30858
I42
VSimpleName: InstanceField
p30859
tp30860
I1
s(g347
I42
g348
Vinsert
p30861
I14
VClassInstanceCreation
p30862
tp30863
I2
s(g1019
I42
g1020
Vinsert
p30864
I14
VClassInstanceCreation
p30865
tp30866
I1
s(g7297
I42
g7298
Vinsert
p30867
I42
VSimpleName: mode
p30868
tp30869
I1
s(g8553
I42
g8554
Vinsert
p30870
I31
VMethodDeclaration
p30871
tp30872
I1
s(g6316
I42
g6317
Vinsert
p30873
I42
VSimpleName: toAnswer
p30874
tp30875
I1
s(g6535
I42
g6536
Vinsert
p30876
I40
VQualifiedName: java.lang.AssertionError
p30877
tp30878
I1
s(g19009
I42
g19010
Vinsert
p30879
I42
VSimpleName: innerClasses
p30880
tp30881
I1
s(Vinsert
p30882
I42
VSimpleName: append
p30883
Vinsert
p30884
I42
VSimpleName: invocations
p30885
tp30886
I2
s(g2908
I42
g2909
Vinsert
p30887
I14
VClassInstanceCreation
p30888
tp30889
I1
s(g10963
I42
g10964
Vinsert
p30890
I43
VSimpleType: InvocationMatcher
p30891
tp30892
I1
s(g4282
I42
g4283
Vinsert
p30893
I21
VExpressionStatement
p30894
tp30895
I1
s(g11514
I42
g11515
Vinsert
p30896
I45
VStringLiteral: "one"
p30897
tp30898
I1
s(g8131
I42
g8132
Vinsert
p30899
I21
VExpressionStatement
p30900
tp30901
I1
s(g1006
I42
g1007
Vinsert
p30902
I2
VArrayAccess
p30903
tp30904
I2
s(g179
I42
g180
Vinsert
p30905
I42
VSimpleName: List
p30906
tp30907
I6
s(g10415
I42
g10416
Vinsert
p30908
I43
VSimpleType: Object
p30909
tp30910
I3
s(g28090
I42
g28091
Vinsert
p30911
I34
VNumberLiteral: 1L
p30912
tp30913
I1
s(g966
I42
g967
Vinsert
p30914
I41
VReturnStatement
p30915
tp30916
I1
s(g473
I42
g474
Vinsert
p30917
I42
VSimpleName: MockitoJUnitListener
p30918
tp30919
I4
s(Vinsert
p30920
I42
VSimpleName: getMessage
p30921
Vinsert
p30922
I45
VStringLiteral: "Wanted but not invoked:"
p30923
tp30924
I1
s(g453
I42
g454
Vinsert
p30925
I42
VSimpleName: Test
p30926
tp30927
I1
s(g8561
I42
g8562
Vinsert
p30928
I42
VSimpleName: printMethodReturnType
p30929
tp30930
I1
s(g1573
I42
g1574
Vinsert
p30931
I32
VMethodInvocation
p30932
tp30933
I2
s(g10762
I42
g10763
Vinsert
p30934
I43
VSimpleType: SampleAnnotation
p30935
tp30936
I1
s(g3680
I42
g3681
Vinsert
p30937
I43
VSimpleType: Object
p30938
tp30939
I7
s(g14311
I42
g14312
Vinsert
p30940
I21
VExpressionStatement
p30941
tp30942
I5
s(g1292
I42
g1293
Vinsert
p30943
I21
VExpressionStatement
p30944
tp30945
I2
s(g5821
I42
g5822
Vinsert
p30946
I32
VMethodInvocation
p30947
tp30948
I1
s(g2205
I42
g2206
Vinsert
p30949
I27
VInfixExpression: ||
p30950
tp30951
I1
s(g18814
I42
g18815
Vinsert
p30952
I42
VSimpleName: threadSafely
p30953
tp30954
I1
s(g6677
I42
g6678
Vinsert
p30955
I8
VBlock
p30956
tp30957
I1
s(g12154
I42
g12155
Vinsert
p30958
I42
VSimpleName: HandyReturnValues
p30959
tp30960
I1
s(g12649
I42
g12650
Vinsert
p30961
I42
VSimpleName: doubleValue
p30962
tp30963
I1
s(g12508
I42
g12509
Vinsert
p30964
I42
VSimpleName: anySet
p30965
tp30966
I1
s(g8724
I42
g8725
Vinsert
p30967
I42
VSimpleName: getClassWriter
p30968
tp30969
I1
s(g8160
I42
g8161
Vinsert
p30970
I42
VSimpleName: ToBeDeepStubbed
p30971
tp30972
I1
s(g10772
I42
g10773
Vinsert
p30973
I42
VSimpleName: matchers
p30974
tp30975
I2
s(g18290
I42
g18291
Vinsert
p30976
I42
VSimpleName: load_args
p30977
tp30978
I1
s(g1307
I42
g1308
Vinsert
p30979
I14
VClassInstanceCreation
p30980
tp30981
I1
s(g1154
I42
g1155
Vinsert
p30982
I42
VSimpleName: Object
p30983
tp30984
I1
s(g9865
I42
g9866
Vinsert
p30985
I60
VVariableDeclarationStatement
p30986
tp30987
I1
s(g9649
I42
g9650
Vinsert
p30988
I32
VMethodInvocation
p30989
tp30990
I4
s(g4231
I42
g4232
Vinsert
p30991
I42
VSimpleName: elements
p30992
tp30993
I4
s(g252
I42
g253
Vinsert
p30994
I59
VVariableDeclarationFragment
p30995
tp30996
I1
s(g1891
I42
g1892
Vinsert
p30997
I74
VParameterizedType: LinkedList<InvocationMatcher>
p30998
tp30999
I2
s(g14491
I42
g14492
Vinsert
p31000
I42
VSimpleName: getDeclaringClass
p31001
tp31002
I1
s(g10048
I42
g10049
Vinsert
p31003
I78
VMarkerAnnotation
p31004
tp31005
I1
s(g13666
I42
g13667
Vinsert
p31006
I42
VSimpleName: MethodInfo
p31007
tp31008
I2
s(g7274
I42
g7275
Vinsert
p31009
I53
VThrowStatement
p31010
tp31011
I1
s(Vinsert
p31012
I42
VSimpleName: verify
p31013
Vinsert
p31014
I42
VSimpleName: strictly
p31015
tp31016
I35
s(g19252
I42
g19253
Vinsert
p31017
I42
VSimpleName: shouldNotAllowMockAndInjectMock
p31018
tp31019
I1
s(g327
I42
g328
Vinsert
p31020
I42
VSimpleName: clear
p31021
tp31022
I1
s(g11926
I42
g11927
Vinsert
p31023
I42
VSimpleName: isolatedClassLoader
p31024
tp31025
I2
s(g8561
I42
g8562
Vinsert
p31026
I27
VInfixExpression: &&
p31027
tp31028
I1
s(g6103
I42
g6104
Vinsert
p31029
I83
VModifier: public
p31030
tp31031
I1
s(g13042
I42
g13043
Vinsert
p31032
I42
VSimpleName: fails_when_getting_invocations_when_null
p31033
tp31034
I1
s(g3797
I42
g3798
Vinsert
p31035
I42
VSimpleName: Before
p31036
tp31037
I2
s(g5768
I42
g5769
Vinsert
p31038
I11
VCastExpression
p31039
tp31040
I1
s(g10164
I42
g10165
Vinsert
p31041
I42
VSimpleName: methodInvocationReport
p31042
tp31043
I3
s(g3234
I42
g3235
Vinsert
p31044
I42
VSimpleName: shouldAllowInlineMockCreation
p31045
tp31046
I1
s(g11718
I42
g11719
Vinsert
p31047
I42
VSimpleName: settings
p31048
tp31049
I2
s(g2815
I42
g2816
Vinsert
p31050
I42
VSimpleName: LocalizedMatcher
p31051
tp31052
I2
s(g12660
I42
g12661
Vinsert
p31053
I42
VSimpleName: contains
p31054
tp31055
I1
s(g4696
I42
g4697
Vinsert
p31056
I42
VSimpleName: data
p31057
tp31058
I2
s(g6476
I42
g6477
Vinsert
p31059
I43
VSimpleType: InjectMocksScanner
p31060
tp31061
I1
s(g5169
I42
g5170
Vinsert
p31062
I42
VSimpleName: LinkedList
p31063
tp31064
I1
s(g3267
I42
g3268
Vinsert
p31065
I45
VStringLiteral: "    1st: \u005c"1\u005c"\u005cn"
p31066
tp31067
I1
s(g1115
I42
g1116
Vinsert
p31068
I8
VBlock
p31069
tp31070
I1
s(g14336
I42
g14337
Vinsert
p31071
I42
VSimpleName: businessLogicWithAsking
p31072
tp31073
I2
s(g608
I42
g609
Vinsert
p31074
I8
VBlock
p31075
tp31076
I3
s(g3091
I42
g3092
Vinsert
p31077
I42
VSimpleName: InvocationsPrinter
p31078
tp31079
I1
s(g2185
I42
g2186
Vinsert
p31080
I42
VSimpleName: iterator
p31081
tp31082
I2
s(g12370
I42
g12371
Vinsert
p31083
I42
VSimpleName: HasCGLIBMethodProxy
p31084
tp31085
I3
s(g2631
I42
g2632
Vinsert
p31086
I42
VSimpleName: lastLocation
p31087
tp31088
I1
s(g3509
I42
g3510
Vinsert
p31089
I42
VSimpleName: FieldReader
p31090
tp31091
I1
s(g871
I42
g872
Vinsert
p31092
I44
VSingleVariableDeclaration
p31093
tp31094
I2
s(g5133
I42
g5134
Vinsert
p31095
I49
VSwitchCase
p31096
tp31097
I2
s(g24453
I42
g24454
Vinsert
p31098
I42
VSimpleName: addAll
p31099
tp31100
I1
s(g6890
I42
g6891
Vinsert
p31101
I42
VSimpleName: access
p31102
tp31103
I1
s(g1006
I42
g1007
Vinsert
p31104
I45
VStringLiteral: "-> at <<unknown line>>"
p31105
tp31106
I1
s(g6069
I42
g6070
Vinsert
p31107
I31
VMethodDeclaration
p31108
tp31109
I1
s(g10086
I42
g10087
Vinsert
p31110
I32
VMethodInvocation
p31111
tp31112
I12
s(g11206
I42
g11207
Vinsert
p31113
I70
VEnhancedForStatement
p31114
tp31115
I1
s(g17860
I42
g17861
Vinsert
p31116
I27
VInfixExpression: ==
p31117
tp31118
I1
s(g2457
I42
g2458
Vinsert
p31119
I59
VVariableDeclarationFragment
p31120
tp31121
I1
s(g18096
I42
g18097
Vinsert
p31122
I42
VSimpleName: Class
p31123
tp31124
I2
s(g2733
I42
g2734
Vinsert
p31125
I42
VSimpleName: MockHandler
p31126
tp31127
I1
s(g3242
I42
g3243
Vinsert
p31128
I42
VSimpleName: ClassVisitor
p31129
tp31130
I1
s(g3777
I42
g3778
Vinsert
p31131
I42
VSimpleName: mock
p31132
tp31133
I20
s(g8677
I42
g8678
Vinsert
p31134
I42
VSimpleName: insn
p31135
tp31136
I1
s(g2271
I42
g2272
Vinsert
p31137
I42
VSimpleName: findPlatformStackTraceCleanerProvider
p31138
tp31139
I2
s(g1573
I42
g1574
Vinsert
p31140
I42
VSimpleName: previousInOrder
p31141
tp31142
I2
s(g1214
I42
g1215
Vinsert
p31143
I45
VStringLiteral: "[Mockito] Additional stubbing information (see javadoc for StubbingInfo class):\u005cn"
p31144
tp31145
I1
s(g12097
I42
g12098
Vinsert
p31146
I42
VSimpleName: e
p31147
tp31148
I1
s(g9560
I42
g9561
Vinsert
p31149
I43
VSimpleType: Double
p31150
tp31151
I1
s(Vinsert
p31152
I42
VSimpleName: matches
p31153
Vinsert
p31154
I42
VSimpleName: location
p31155
tp31156
I1
s(g8916
I42
g8917
Vinsert
p31157
I43
VSimpleType: MockFactory
p31158
tp31159
I1
s(g7841
I42
g7842
Vinsert
p31160
I42
VSimpleName: three
p31161
tp31162
I2
s(g1327
I42
g1328
Vinsert
p31163
I42
VSimpleName: CreationValidatorStub
p31164
tp31165
I1
s(g498
I42
g499
Vinsert
p31166
I42
VSimpleName: Reporter
p31167
tp31168
I1
s(g5744
I42
g5745
Vinsert
p31169
I42
VSimpleName: Throwable
p31170
tp31171
I1
s(g9584
I42
g9585
Vinsert
p31172
I43
VSimpleType: Capture
p31173
tp31174
I1
s(g821
I42
g822
Vinsert
p31175
I42
VSimpleName: expectedInvocation
p31176
tp31177
I1
s(g22497
I42
g22498
Vinsert
p31178
I43
VSimpleType: Foo
p31179
tp31180
I1
s(g2286
I42
g2287
Vinsert
p31181
I32
VMethodInvocation
p31182
tp31183
I5
s(g19217
I42
g19218
Vinsert
p31184
I42
VSimpleName: verify
p31185
tp31186
I21
s(g1169
I42
g1170
Vinsert
p31187
I42
VSimpleName: e
p31188
tp31189
I1
s(g19604
I42
g19605
Vinsert
p31190
I22
VFieldAccess
p31191
tp31192
I1
s(g1194
I42
g1195
Vinsert
p31193
I31
VMethodDeclaration
p31194
tp31195
I1
s(g12877
I42
g12878
Vinsert
p31196
I42
VSimpleName: should_not_fail_when_instantiating
p31197
tp31198
I1
s(g6008
I42
g6009
Vinsert
p31199
I42
VSimpleName: shouldGetVerboseArguments
p31200
tp31201
I1
s(g1683
I42
g1684
Vinsert
p31202
I32
VMethodInvocation
p31203
tp31204
I6
s(g14303
I42
g14304
Vinsert
p31205
I59
VVariableDeclarationFragment
p31206
tp31207
I2
s(g13218
I42
g13219
Vinsert
p31208
I8
VBlock
p31209
tp31210
I1
s(g2364
I42
g2365
Vinsert
p31211
I83
VModifier: public
p31212
tp31213
I1
s(g961
I42
g962
Vinsert
p31214
I36
VParenthesizedExpression
p31215
tp31216
I1
s(g4789
I42
g4790
Vinsert
p31217
I21
VExpressionStatement
p31218
tp31219
I4
s(g24170
I42
g24171
Vinsert
p31220
I42
VSimpleName: method
p31221
tp31222
I3
s(g5216
I42
g5217
Vinsert
p31223
I36
VParenthesizedExpression
p31224
tp31225
I1
s(g9408
I42
g9409
Vinsert
p31226
I60
VVariableDeclarationStatement
p31227
tp31228
I1
s(g2374
I42
g2375
Vinsert
p31229
I43
VSimpleType: Object
p31230
tp31231
I1
s(g951
I42
g952
Vinsert
p31232
I42
VSimpleName: isAssignableFrom
p31233
tp31234
I1
s(g861
I42
g862
Vinsert
p31235
I43
VSimpleType: Exception
p31236
tp31237
I2
s(g16107
I42
g16108
Vinsert
p31238
I42
VSimpleName: type
p31239
tp31240
I2
s(g17040
I42
g17041
Vinsert
p31241
I42
VSimpleName: logger
p31242
tp31243
I1
s(g7931
I42
g7932
Vinsert
p31244
I43
VSimpleType: Class
p31245
tp31246
I1
s(g4745
I42
g4746
Vinsert
p31247
I42
VSimpleName: annotation
p31248
tp31249
I1
s(g14336
I42
g14337
Vinsert
p31250
I43
VSimpleType: String
p31251
tp31252
I4
s(g3359
I42
g3360
Vinsert
p31253
I39
VPrimitiveType: void
p31254
tp31255
I2
s(g6781
I42
g6782
Vinsert
p31256
I43
VSimpleType: Exception
p31257
tp31258
I1
s(g5789
I42
g5790
Vinsert
p31259
I42
VSimpleName: MockitoException
p31260
tp31261
I1
s(g3413
I42
g3414
Vinsert
p31262
I42
VSimpleName: description
p31263
tp31264
I1
s(g3585
I42
g3586
Vinsert
p31265
I66
VTextElement: </p>
p31266
tp31267
I1
s(g20934
I42
g20935
Vinsert
p31268
I32
VMethodInvocation
p31269
tp31270
I16
s(g16709
I42
g16710
Vinsert
p31271
I32
VMethodInvocation
p31272
tp31273
I6
s(g3229
I42
g3230
Vinsert
p31274
I78
VMarkerAnnotation
p31275
tp31276
I1
s(g17934
I42
g17935
Vinsert
p31277
I43
VSimpleType: Equals
p31278
tp31279
I1
s(g2248
I42
g2249
Vinsert
p31280
I42
VSimpleName: StubbedInvocationMatcher
p31281
tp31282
I1
s(Vinsert
p31283
I42
VSimpleName: simpleMethod
p31284
Vinsert
p31285
I43
VSimpleType: MockitoException
p31286
tp31287
I1
s(Vinsert
p31288
I42
VSimpleName: isVerified
p31289
Vinsert
p31290
I42
VSimpleName: getFirstUnverified
p31291
tp31292
I2
s(g9747
I42
g9748
Vinsert
p31293
I42
VSimpleName: willReturn
p31294
tp31295
I1
s(g9403
I42
g9404
Vinsert
p31296
I21
VExpressionStatement
p31297
tp31298
I2
s(g8160
I42
g8161
Vinsert
p31299
I8
VBlock
p31300
tp31301
I1
s(g4934
I42
g4935
Vinsert
p31302
I41
VReturnStatement
p31303
tp31304
I1
s(g4776
I42
g4777
Vinsert
p31305
I32
VMethodInvocation
p31306
tp31307
I1
s(g8566
I42
g8567
Vinsert
p31308
I42
VSimpleName: objectReturningMethodNoArgs
p31309
tp31310
I3
s(g1914
I42
g1915
Vinsert
p31311
I60
VVariableDeclarationStatement
p31312
tp31313
I1
s(g3616
I42
g3617
Vinsert
p31314
I21
VExpressionStatement
p31315
tp31316
I1
s(g4393
I42
g4394
Vinsert
p31317
I42
VSimpleName: getMethod
p31318
tp31319
I1
s(g7572
I42
g7573
Vinsert
p31320
I31
VMethodDeclaration
p31321
tp31322
I4
s(g25849
I42
g25850
Vinsert
p31323
I42
VSimpleName: simpleMethodInvocationTwo
p31324
tp31325
I1
s(g15030
I42
g15031
Vinsert
p31326
I43
VSimpleType: Matcher
p31327
tp31328
I1
s(g51
I42
g52
Vinsert
p31329
I40
VQualifiedName: elem.next
p31330
tp31331
I1
s(g8288
I42
g8289
Vinsert
p31332
I42
VSimpleName: MockitoException
p31333
tp31334
I2
s(g976
I42
g977
Vinsert
p31335
I42
VSimpleName: values
p31336
tp31337
I1
s(g16524
I42
g16525
Vinsert
p31338
I8
VBlock
p31339
tp31340
I2
s(g272
I42
g273
Vinsert
p31341
I42
VSimpleName: dispatcher
p31342
tp31343
I1
s(g3478
I42
g3479
Vinsert
p31344
I42
VSimpleName: stubbedInvocations
p31345
tp31346
I1
s(g9499
I42
g9500
Vinsert
p31347
I59
VVariableDeclarationFragment
p31348
tp31349
I2
s(g5622
I42
g5623
Vinsert
p31350
I27
VInfixExpression: &&
p31351
tp31352
I4
s(g5378
I42
g5379
Vinsert
p31353
I41
VReturnStatement
p31354
tp31355
I1
s(g6882
I42
g6883
Vinsert
p31356
I42
VSimpleName: Set
p31357
tp31358
I1
s(g6043
I42
g6044
Vinsert
p31359
I43
VSimpleType: PluginSwitcher
p31360
tp31361
I1
s(g4456
I42
g4457
Vinsert
p31362
I14
VClassInstanceCreation
p31363
tp31364
I1
s(g1134
I42
g1135
Vinsert
p31365
I42
VSimpleName: delegatedMethodHasWrongReturnType
p31366
tp31367
I1
s(g4939
I42
g4940
Vinsert
p31368
I32
VMethodInvocation
p31369
tp31370
I4
s(g6841
I42
g6842
Vinsert
p31371
I43
VSimpleType: InvocationChunk
p31372
tp31373
I1
s(g18995
I42
g18996
Vinsert
p31374
I54
VTryStatement
p31375
tp31376
I1
s(g10740
I42
g10741
Vinsert
p31377
I45
VStringLiteral: "Click here to see it in your code:"
p31378
tp31379
I1
s(g27446
I42
g27447
Vinsert
p31380
I40
VQualifiedName: org.mockito.invocation.MethodCallReport
p31381
tp31382
I1
s(g3262
I42
g3263
Vinsert
p31383
I65
VTagElement: @return
p31384
tp31385
I1
s(g2959
I42
g2960
Vinsert
p31386
I42
VSimpleName: mockTwo
p31387
tp31388
I1
s(g7859
I42
g7860
Vinsert
p31389
I42
VSimpleName: FieldInitializationReport
p31390
tp31391
I1
s(g17182
I42
g17183
Vinsert
p31392
I42
VSimpleName: threadSafely
p31393
tp31394
I1
s(g2349
I42
g2350
Vinsert
p31395
I42
VSimpleName: trace
p31396
tp31397
I1
s(g19793
I42
g19794
Vinsert
p31398
I42
VSimpleName: clazz
p31399
tp31400
I2
s(g458
I42
g459
Vinsert
p31401
I77
VNormalAnnotation
p31402
tp31403
I1
s(g1254
I42
g1255
Vinsert
p31404
I22
VFieldAccess
p31405
tp31406
I1
s(g4822
I42
g4823
Vinsert
p31407
I43
VSimpleType: MockHandlerImpl
p31408
tp31409
I1
s(g6574
I42
g6575
Vinsert
p31410
I14
VClassInstanceCreation
p31411
tp31412
I2
s(g169
I42
g170
Vinsert
p31413
I32
VMethodInvocation
p31414
tp31415
I2
s(g755
I42
g756
Vinsert
p31416
I42
VSimpleName: objects
p31417
tp31418
I2
s(g11612
I42
g11613
Vinsert
p31419
I42
VSimpleName: assertEquals
p31420
tp31421
I1
s(g6247
I42
g6248
Vinsert
p31422
I42
VSimpleName: foo
p31423
tp31424
I1
s(g1655
I42
g1656
Vinsert
p31425
I42
VSimpleName: guru
p31426
tp31427
I2
s(g21977
I42
g21978
Vinsert
p31428
I52
VThisExpression
p31429
tp31430
I2
s(g17478
I42
g17479
Vinsert
p31431
I43
VSimpleType: ProcessBuilder
p31432
tp31433
I2
s(g3318
I42
g3319
Vinsert
p31434
I45
VStringLiteral: "MyTest.myTestMethod"
p31435
tp31436
I2
s(g8131
I42
g8132
Vinsert
p31437
I42
VSimpleName: anyMapOf
p31438
tp31439
I1
s(g2180
I42
g2181
Vinsert
p31440
I21
VExpressionStatement
p31441
tp31442
I2
s(g5211
I42
g5212
Vinsert
p31443
I31
VMethodDeclaration
p31444
tp31445
I1
s(g10672
I42
g10673
Vinsert
p31446
I32
VMethodInvocation
p31447
tp31448
I12
s(g14231
I42
g14232
Vinsert
p31449
I42
VSimpleName: hasTestMethods
p31450
tp31451
I1
s(g1110
I42
g1111
Vinsert
p31452
I42
VSimpleName: result
p31453
tp31454
I2
s(g27939
I42
g27940
Vinsert
p31455
I34
VNumberLiteral: 1
p31456
tp31457
I2
s(g4382
I42
g4383
Vinsert
p31458
I43
VSimpleType: Matcher
p31459
tp31460
I1
s(g12362
I42
g12363
Vinsert
p31461
I78
VMarkerAnnotation
p31462
tp31463
I1
s(g1760
I42
g1761
Vinsert
p31464
I43
VSimpleType: InterceptionDispatcher
p31465
tp31466
I1
s(g2590
I42
g2591
Vinsert
p31467
I39
VPrimitiveType: byte
p31468
tp31469
I1
s(Vinsert
p31470
I42
VSimpleName: getMessage
p31471
Vinsert
p31472
I45
VStringLiteral: "verifyNoMoreInteractions() requires arguments."
p31473
tp31474
I1
s(g5305
I42
g5306
Vinsert
p31475
I42
VSimpleName: access
p31476
tp31477
I1
s(g2876
I42
g2877
Vinsert
p31478
I42
VSimpleName: splitPathList
p31479
tp31480
I1
s(g13980
I42
g13981
Vinsert
p31481
I42
VSimpleName: createProxyClass
p31482
tp31483
I1
s(g1604
I42
g1605
Vinsert
p31484
I57
VTypeLiteral
p31485
tp31486
I2
s(g1843
I42
g1844
Vinsert
p31487
I18
VContinueStatement
p31488
tp31489
I1
s(g12809
I42
g12810
Vinsert
p31490
I43
VSimpleType: String
p31491
tp31492
I1
s(g7643
I42
g7644
Vinsert
p31493
I42
VSimpleName: eq
p31494
tp31495
I1
s(g390
I42
g391
Vinsert
p31496
I49
VSwitchCase
p31497
tp31498
I1
s(Vinsert
p31499
I42
VSimpleName: extraInterfaces
p31500
Vinsert
p31501
I39
VPrimitiveType: void
p31502
tp31503
I7
s(g3812
I42
g3813
Vinsert
p31504
I59
VVariableDeclarationFragment
p31505
tp31506
I8
s(g881
I42
g882
Vinsert
p31507
I32
VMethodInvocation
p31508
tp31509
I2
s(g1372
I42
g1373
Vinsert
p31510
I39
VPrimitiveType: void
p31511
tp31512
I7
s(g4952
I42
g4953
Vinsert
p31513
I42
VSimpleName: After
p31514
tp31515
I1
s(g12777
I42
g12778
Vinsert
p31516
I42
VSimpleName: interfaceBounds
p31517
tp31518
I1
s(g9344
I42
g9345
Vinsert
p31519
I14
VClassInstanceCreation
p31520
tp31521
I1
s(g23442
I42
g23443
Vinsert
p31522
I42
VSimpleName: attrs
p31523
tp31524
I1
s(g14754
I42
g14755
Vinsert
p31525
I31
VMethodDeclaration
p31526
tp31527
I2
s(g1586
I42
g1587
Vinsert
p31528
I42
VSimpleName: getClassName
p31529
tp31530
I1
s(g4184
I42
g4185
Vinsert
p31531
I74
VParameterizedType: Class<T>
p31532
tp31533
I1
s(g14434
I42
g14435
Vinsert
p31534
I45
VStringLiteral: "were exactly 0 interactions"
p31535
tp31536
I1
s(g5426
I42
g5427
Vinsert
p31537
I42
VSimpleName: T
p31538
tp31539
I1
s(g2031
I42
g2032
Vinsert
p31540
I40
VQualifiedName: Opcodes.ACC_INTERFACE
p31541
tp31542
I1
s(g742
I42
g743
Vinsert
p31543
I42
VSimpleName: allInvocations
p31544
tp31545
I1
s(g1044
I42
g1045
Vinsert
p31546
I66
VTextElement:  verification mode
p31547
tp31548
I1
s(g7096
I42
g7097
Vinsert
p31549
I42
VSimpleName: DelegatingMethod
p31550
tp31551
I4
s(g12941
I42
g12942
Vinsert
p31552
I42
VSimpleName: fields
p31553
tp31554
I1
s(g4006
I42
g4007
Vinsert
p31555
I42
VSimpleName: Field
p31556
tp31557
I2
s(g23292
I42
g23293
Vinsert
p31558
I14
VClassInstanceCreation
p31559
tp31560
I5
s(g9950
I42
g9951
Vinsert
p31561
I57
VTypeLiteral
p31562
tp31563
I1
s(g7446
I42
g7447
Vinsert
p31564
I21
VExpressionStatement
p31565
tp31566
I2
s(g14538
I42
g14539
Vinsert
p31567
I42
VSimpleName: thenReturn
p31568
tp31569
I1
s(g8926
I42
g8927
Vinsert
p31570
I42
VSimpleName: Type
p31571
tp31572
I2
s(g3699
I42
g3700
Vinsert
p31573
I43
VSimpleType: FriendlyReminderException
p31574
tp31575
I1
s(g5269
I42
g5270
Vinsert
p31576
I34
VNumberLiteral: 10
p31577
tp31578
I1
s(g1204
I42
g1205
Vinsert
p31579
I42
VSimpleName: isTimeUp
p31580
tp31581
I1
s(Vinsert
p31582
I42
VSimpleName: setStackTrace
p31583
Vinsert
p31584
I8
VBlock
p31585
tp31586
I4
s(g18591
I42
g18592
Vinsert
p31587
I42
VSimpleName: VerificationError
p31588
tp31589
I1
s(g12846
I42
g12847
Vinsert
p31590
I40
VQualifiedName: Constants.TYPE_OBJECT
p31591
tp31592
I1
s(g6796
I42
g6797
Vinsert
p31593
I12
VCatchClause
p31594
tp31595
I2
s(g3262
I42
g3263
Vinsert
p31596
I42
VSimpleName: VerificationModeFactory
p31597
tp31598
I1
s(g3073
I42
g3074
Vinsert
p31599
I43
VSimpleType: PrintSettings
p31600
tp31601
I1
s(g347
I42
g348
Vinsert
p31602
I42
VSimpleName: origin
p31603
tp31604
I1
s(g11
I42
g12
Vinsert
p31605
I27
VInfixExpression: <
p31606
tp31607
I1
s(g5961
I42
g5962
Vinsert
p31608
I11
VCastExpression
p31609
tp31610
I1
s(g841
I42
g842
Vinsert
p31611
I43
VSimpleType: Object
p31612
tp31613
I2
s(g8991
I42
g8992
Vinsert
p31614
I42
VSimpleName: toString
p31615
tp31616
I1
s(g2738
I42
g2739
Vinsert
p31617
I60
VVariableDeclarationStatement
p31618
tp31619
I1
s(g458
I42
g459
Vinsert
p31620
I42
VSimpleName: prevents_adding_null_listener
p31621
tp31622
I1
s(g4212
I42
g4213
Vinsert
p31623
I27
VInfixExpression: !=
p31624
tp31625
I1
s(g9005
I42
g9006
Vinsert
p31626
I42
VSimpleName: e
p31627
tp31628
I1
s(g1411
I42
g1412
Vinsert
p31629
I59
VVariableDeclarationFragment
p31630
tp31631
I6
s(g22558
I42
g22559
Vinsert
p31632
I42
VSimpleName: toStackTraceList
p31633
tp31634
I1
s(g8242
I42
g8243
Vinsert
p31635
I60
VVariableDeclarationStatement
p31636
tp31637
I2
s(g6962
I42
g6963
Vinsert
p31638
I42
VSimpleName: when
p31639
tp31640
I1
s(g6561
I42
g6562
Vinsert
p31641
I42
VSimpleName: when
p31642
tp31643
I1
s(g3659
I42
g3660
Vinsert
p31644
I40
VQualifiedName: java.io.Serializable
p31645
tp31646
I1
s(g1726
I42
g1727
Vinsert
p31647
I52
VThisExpression
p31648
tp31649
I1
s(g5408
I42
g5409
Vinsert
p31650
I42
VSimpleName: loader
p31651
tp31652
I3
s(g2626
I42
g2627
Vinsert
p31653
I42
VSimpleName: mock
p31654
tp31655
I3
s(g7725
I42
g7726
Vinsert
p31656
I42
VSimpleName: spiedInstance
p31657
tp31658
I2
s(g4420
I42
g4421
Vinsert
p31659
I42
VSimpleName: o2
p31660
tp31661
I1
s(g18013
I42
g18014
Vinsert
p31662
I42
VSimpleName: Invocation
p31663
tp31664
I2
s(g4158
I42
g4159
Vinsert
p31665
I57
VTypeLiteral
p31666
tp31667
I1
s(g1642
I42
g1643
Vinsert
p31668
I31
VMethodDeclaration
p31669
tp31670
I1
s(g322
I42
g323
Vinsert
p31671
I42
VSimpleName: FakeList
p31672
tp31673
I1
s(g9105
I42
g9106
Vinsert
p31674
I44
VSingleVariableDeclaration
p31675
tp31676
I2
s(g1159
I42
g1160
Vinsert
p31677
I78
VMarkerAnnotation
p31678
tp31679
I1
s(g2642
I42
g2643
Vinsert
p31680
I60
VVariableDeclarationStatement
p31681
tp31682
I2
s(g7379
I42
g7380
Vinsert
p31683
I42
VSimpleName: never
p31684
tp31685
I1
s(g1533
I42
g1534
Vinsert
p31686
I42
VSimpleName: i
p31687
tp31688
I1
s(g4409
I42
g4410
Vinsert
p31689
I45
VStringLiteral: "baz"
p31690
tp31691
I2
s(g19066
I42
g19067
Vinsert
p31692
I39
VPrimitiveType: void
p31693
tp31694
I3
s(g1209
I42
g1210
Vinsert
p31695
I42
VSimpleName: Invocation
p31696
tp31697
I1
s(g3359
I42
g3360
Vinsert
p31698
I43
VSimpleType: SomeService
p31699
tp31700
I2
s(g4335
I42
g4336
Vinsert
p31701
I22
VFieldAccess
p31702
tp31703
I2
s(g14735
I42
g14736
Vinsert
p31704
I52
VThisExpression
p31705
tp31706
I2
s(g5431
I42
g5432
Vinsert
p31707
I41
VReturnStatement
p31708
tp31709
I2
s(g4346
I42
g4347
Vinsert
p31710
I83
VModifier: public
p31711
tp31712
I1
s(g7253
I42
g7254
Vinsert
p31713
I41
VReturnStatement
p31714
tp31715
I1
s(g956
I42
g957
Vinsert
p31716
I42
VSimpleName: run
p31717
tp31718
I1
s(g9473
I42
g9474
Vinsert
p31719
I60
VVariableDeclarationStatement
p31720
tp31721
I1
s(g9560
I42
g9561
Vinsert
p31722
I39
VPrimitiveType: void
p31723
tp31724
I1
s(g1775
I42
g1776
Vinsert
p31725
I74
VParameterizedType: Class<? extends Throwable>
p31726
tp31727
I1
s(g4001
I42
g4002
Vinsert
p31728
I42
VSimpleName: fail
p31729
tp31730
I1
s(g8388
I42
g8389
Vinsert
p31731
I42
VSimpleName: out
p31732
tp31733
I2
s(g99
I42
g100
Vinsert
p31734
I22
VFieldAccess
p31735
tp31736
I1
s(g7049
I42
g7050
Vinsert
p31737
I43
VSimpleType: ObjectLikeInterface
p31738
tp31739
I1
s(g463
I42
g464
Vinsert
p31740
I42
VSimpleName: label
p31741
tp31742
I1
s(g13905
I42
g13906
Vinsert
p31743
I21
VExpressionStatement
p31744
tp31745
I1
s(g10851
I42
g10852
Vinsert
p31746
I42
VSimpleName: JavaEightUtil
p31747
tp31748
I2
s(g22194
I42
g22195
Vinsert
p31749
I57
VTypeLiteral
p31750
tp31751
I4
s(g1967
I42
g1968
Vinsert
p31752
I42
VSimpleName: ongoingStubbing
p31753
tp31754
I2
s(g11580
I42
g11581
Vinsert
p31755
I42
VSimpleName: orderOfInvocationsMatters
p31756
tp31757
I1
s(g2944
I42
g2945
Vinsert
p31758
I45
VStringLiteral: "a.b.B"
p31759
tp31760
I1
s(g4138
I42
g4139
Vinsert
p31761
I43
VSimpleType: TestFailOnInitialization
p31762
tp31763
I1
s(g4646
I42
g4647
Vinsert
p31764
I36
VParenthesizedExpression
p31765
tp31766
I1
s(g234
I42
g235
Vinsert
p31767
I31
VMethodDeclaration
p31768
tp31769
I1
s(g4555
I42
g4556
Vinsert
p31770
I45
VStringLiteral: "byteMethod"
p31771
tp31772
I2
s(g4929
I42
g4930
Vinsert
p31773
I18
VContinueStatement
p31774
tp31775
I1
s(g12941
I42
g12942
Vinsert
p31776
I42
VSimpleName: iterator
p31777
tp31778
I1
s(g26462
I42
g26463
Vinsert
p31779
I78
VMarkerAnnotation
p31780
tp31781
I1
s(g1239
I42
g1240
Vinsert
p31782
I42
VSimpleName: invocation
p31783
tp31784
I1
s(g3275
I42
g3276
Vinsert
p31785
I42
VSimpleName: arguments
p31786
tp31787
I1
s(g2271
I42
g2272
Vinsert
p31788
I41
VReturnStatement
p31789
tp31790
I1
s(g5604
I42
g5605
Vinsert
p31791
I43
VSimpleType: Matcher
p31792
tp31793
I1
s(g169
I42
g170
Vinsert
p31794
I83
VModifier: public
p31795
tp31796
I1
s(g9499
I42
g9500
Vinsert
p31797
I60
VVariableDeclarationStatement
p31798
tp31799
I2
s(g598
I42
g599
Vinsert
p31800
I44
VSingleVariableDeclaration
p31801
tp31802
I2
s(g8682
I42
g8683
Vinsert
p31803
I42
VSimpleName: additionalMatcherName
p31804
tp31805
I2
s(g1139
I42
g1140
Vinsert
p31806
I42
VSimpleName: detect
p31807
tp31808
I1
s(g15804
I42
g15805
Vinsert
p31809
I8
VBlock
p31810
tp31811
I2
s(g6634
I42
g6635
Vinsert
p31812
I43
VSimpleType: MockitoMocking
p31813
tp31814
I2
s(g15498
I42
g15499
Vinsert
p31815
I43
VSimpleType: Throwable
p31816
tp31817
I2
s(g30046
I42
g30047
Vinsert
p31818
I9
VBooleanLiteral: false
p31819
tp31820
I1
s(g10265
I42
g10266
Vinsert
p31821
I42
VSimpleName: T
p31822
tp31823
I4
s(g4510
I42
g4511
Vinsert
p31824
I42
VSimpleName: Enhancer
p31825
tp31826
I1
s(g24108
I42
g24109
Vinsert
p31827
I43
VSimpleType: InvocationMatcher
p31828
tp31829
I1
s(g24453
I42
g24454
Vinsert
p31830
I43
VSimpleType: Improvement
p31831
tp31832
I1
s(g7893
I42
g7894
Vinsert
p31833
I42
VSimpleName: Object
p31834
tp31835
I1
s(g11043
I42
g11044
Vinsert
p31836
I43
VSimpleType: MockitoPlugins
p31837
tp31838
I1
s(g16823
I42
g16824
Vinsert
p31839
I54
VTryStatement
p31840
tp31841
I1
s(g5373
I42
g5374
Vinsert
p31842
I42
VSimpleName: shouldInitMocks
p31843
tp31844
I1
s(g2839
I42
g2840
Vinsert
p31845
I42
VSimpleName: mock
p31846
tp31847
I2
s(g1
I42
g2
Vinsert
p31848
I43
VSimpleType: MockSettingsImpl
p31849
tp31850
I2
s(g1513
I42
g1514
Vinsert
p31851
I42
VSimpleName: Object
p31852
tp31853
I1
s(g12422
I42
g12423
Vinsert
p31854
I42
VSimpleName: List
p31855
tp31856
I3
s(g1388
I42
g1389
Vinsert
p31857
I42
VSimpleName: Test
p31858
tp31859
I1
s(g16513
I42
g16514
Vinsert
p31860
I27
VInfixExpression: +
p31861
tp31862
I2
s(g573
I42
g574
Vinsert
p31863
I8
VBlock
p31864
tp31865
I1
s(g26561
I42
g26562
Vinsert
p31866
I42
VSimpleName: assertTrue
p31867
tp31868
I1
s(g1421
I42
g1422
Vinsert
p31869
I42
VSimpleName: expected
p31870
tp31871
I1
s(g174
I42
g175
Vinsert
p31872
I42
VSimpleName: String
p31873
tp31874
I1
s(g272
I42
g273
Vinsert
p31875
I45
VStringLiteral: ""
p31876
tp31877
I1
s(g7704
I42
g7705
Vinsert
p31878
I45
VStringLiteral: "Problems reading file: "
p31879
tp31880
I1
s(g4372
I42
g4373
Vinsert
p31881
I42
VSimpleName: MockitoException
p31882
tp31883
I4
s(g2826
I42
g2827
Vinsert
p31884
I42
VSimpleName: verify
p31885
tp31886
I1
s(g2796
I42
g2797
Vinsert
p31887
I8
VBlock
p31888
tp31889
I1
s(g104
I42
g105
Vinsert
p31890
I42
VSimpleName: MockAwareVerificationMode
p31891
tp31892
I2
s(g164
I42
g165
Vinsert
p31893
I42
VSimpleName: lastIndex
p31894
tp31895
I2
s(g5575
I42
g5576
Vinsert
p31896
I32
VMethodInvocation
p31897
tp31898
I1
s(g673
I42
g674
Vinsert
p31899
I43
VSimpleType: Matcher
p31900
tp31901
I2
s(g7190
I42
g7191
Vinsert
p31902
I14
VClassInstanceCreation
p31903
tp31904
I1
s(g16154
I42
g16155
Vinsert
p31905
I42
VSimpleName: mockingDetails
p31906
tp31907
I1
s(Vinsert
p31908
I42
VSimpleName: simpleMethod
p31909
Vinsert
p31910
I42
VSimpleName: shouldFailToVerifyNoMoreInteractionsInOrderWithMultipleMocks
p31911
tp31912
I1
s(g2621
I42
g2622
Vinsert
p31913
I31
VMethodDeclaration
p31914
tp31915
I9
s(g9721
I42
g9722
Vinsert
p31916
I32
VMethodInvocation
p31917
tp31918
I1
s(g21822
I42
g21823
Vinsert
p31919
I42
VSimpleName: Ignore
p31920
tp31921
I3
s(g573
I42
g574
Vinsert
p31922
I39
VPrimitiveType: void
p31923
tp31924
I1
s(g2657
I42
g2658
Vinsert
p31925
I42
VSimpleName: visitMaxs
p31926
tp31927
I1
s(g2200
I42
g2201
Vinsert
p31928
I83
VModifier: private
p31929
tp31930
I1
s(g11141
I42
g11142
Vinsert
p31931
I42
VSimpleName: Integer
p31932
tp31933
I2
s(g14735
I42
g14736
Vinsert
p31934
I83
VModifier: public
p31935
tp31936
I2
s(g523
I42
g524
Vinsert
p31937
I42
VSimpleName: IMockMaker
p31938
tp31939
I2
s(g2954
I42
g2955
Vinsert
p31940
I57
VTypeLiteral
p31941
tp31942
I1
s(g9990
I42
g9991
Vinsert
p31943
I7
VAssignment: =
p31944
tp31945
I1
s(g10393
I42
g10394
Vinsert
p31946
I42
VSimpleName: getMethodName
p31947
tp31948
I1
s(Vinsert
p31949
I42
VSimpleName: method
p31950
Vinsert
p31951
I42
VSimpleName: shouldNotRecordToStringMethod
p31952
tp31953
I1
s(g643
I42
g644
Vinsert
p31954
I42
VSimpleName: assertNotNull
p31955
tp31956
I1
s(g7221
I42
g7222
Vinsert
p31957
I42
VSimpleName: Lock
p31958
tp31959
I2
s(g956
I42
g957
Vinsert
p31960
I42
VSimpleName: mock
p31961
tp31962
I1
s(g6527
I42
g6528
Vinsert
p31963
I45
VStringLiteral: "list of all invocations"
p31964
tp31965
I1
s(g5921
I42
g5922
Vinsert
p31966
I42
VSimpleName: doReturn
p31967
tp31968
I1
s(g3047
I42
g3048
Vinsert
p31969
I42
VSimpleName: listener
p31970
tp31971
I2
s(g12213
I42
g12214
Vinsert
p31972
I42
VSimpleName: ReachableClassesFinder
p31973
tp31974
I1
s(g7859
I42
g7860
Vinsert
p31975
I42
VSimpleName: fieldInitializer
p31976
tp31977
I1
s(g8478
I42
g8479
Vinsert
p31978
I42
VSimpleName: factory
p31979
tp31980
I5
s(g1115
I42
g1116
Vinsert
p31981
I42
VSimpleName: STYLE_BEANS
p31982
tp31983
I1
s(g1164
I42
g1165
Vinsert
p31984
I42
VSimpleName: mock
p31985
tp31986
I1
s(g16004
I42
g16005
Vinsert
p31987
I42
VSimpleName: join
p31988
tp31989
I3
s(g1337
I42
g1338
Vinsert
p31990
I42
VSimpleName: Foo
p31991
tp31992
I2
s(g921
I42
g922
Vinsert
p31993
I38
VPrefixExpression: !
p31994
tp31995
I1
s(g1154
I42
g1155
Vinsert
p31996
I83
VModifier: static
p31997
tp31998
I1
s(g13042
I42
g13043
Vinsert
p31999
I33
VNullLiteral
p32000
tp32001
I1
s(g8184
I42
g8185
Vinsert
p32002
I32
VMethodInvocation
p32003
tp32004
I3
s(g5052
I42
g5053
Vinsert
p32005
I42
VSimpleName: getCanonicalName
p32006
tp32007
I1
s(g7696
I42
g7697
Vinsert
p32008
I8
VBlock
p32009
tp32010
I1
s(g3896
I42
g3897
Vinsert
p32011
I54
VTryStatement
p32012
tp32013
I1
s(g6711
I42
g6712
Vinsert
p32014
I40
VQualifiedName: org.mockito.release.git.GitTool
p32015
tp32016
I1
s(g16283
I42
g16284
Vinsert
p32017
I43
VSimpleType: Exception
p32018
tp32019
I1
s(g856
I42
g857
Vinsert
p32020
I21
VExpressionStatement
p32021
tp32022
I1
s(g6387
I42
g6388
Vinsert
p32023
I43
VSimpleType: MockMethodInterceptor.ForHashCode
p32024
tp32025
I1
s(g1259
I42
g1260
Vinsert
p32026
I42
VSimpleName: Equals
p32027
tp32028
I1
s(g1726
I42
g1727
Vinsert
p32029
I59
VVariableDeclarationFragment
p32030
tp32031
I1
s(g14538
I42
g14539
Vinsert
p32032
I45
VStringLiteral: ""
p32033
tp32034
I1
s(g5939
I42
g5940
Vinsert
p32035
I31
VMethodDeclaration
p32036
tp32037
I6
s(g1675
I42
g1676
Vinsert
p32038
I42
VSimpleName: delegate
p32039
tp32040
I1
s(g11738
I42
g11739
Vinsert
p32041
I4
VArrayInitializer
p32042
tp32043
I1
s(g18814
I42
g18815
Vinsert
p32044
I42
VSimpleName: stubbingListener
p32045
tp32046
I1
s(g3961
I42
g3962
Vinsert
p32047
I45
VStringLiteral: "Following stubbings are unnecessary (click to navigate to relevant line of code):\u005cn"
p32048
tp32049
I1
s(g8388
I42
g8389
Vinsert
p32050
I32
VMethodInvocation
p32051
tp32052
I4
s(g405
I42
g406
Vinsert
p32053
I42
VSimpleName: assertEquals
p32054
tp32055
I1
s(g2374
I42
g2375
Vinsert
p32056
I44
VSingleVariableDeclaration
p32057
tp32058
I1
s(g4853
I42
g4854
Vinsert
p32059
I21
VExpressionStatement
p32060
tp32061
I2
s(g4999
I42
g5000
Vinsert
p32062
I37
VPostfixExpression: ++
p32063
tp32064
I2
s(g2508
I42
g2509
Vinsert
p32065
I39
VPrimitiveType: void
p32066
tp32067
I1
s(g7564
I42
g7565
Vinsert
p32068
I43
VSimpleType: VerificationMode
p32069
tp32070
I1
s(g4189
I42
g4190
Vinsert
p32071
I74
VParameterizedType: Class<?>
p32072
tp32073
I1
s(g9884
I42
g9885
Vinsert
p32074
I32
VMethodInvocation
p32075
tp32076
I2
s(g9584
I42
g9585
Vinsert
p32077
I42
VSimpleName: capturedArgument
p32078
tp32079
I1
s(g5461
I42
g5462
Vinsert
p32080
I45
VStringLiteral: "os.name"
p32081
tp32082
I1
s(g1533
I42
g1534
Vinsert
p32083
I70
VEnhancedForStatement
p32084
tp32085
I1
s(g1553
I42
g1554
Vinsert
p32086
I42
VSimpleName: when
p32087
tp32088
I1
s(g1019
I42
g1020
Vinsert
p32089
I33
VNullLiteral
p32090
tp32091
I1
s(g2010
I42
g2011
Vinsert
p32092
I59
VVariableDeclarationFragment
p32093
tp32094
I1
s(g2738
I42
g2739
Vinsert
p32095
I43
VSimpleType: org.mockito.MockitoAnnotations.Mock
p32096
tp32097
I1
s(g4740
I42
g4741
Vinsert
p32098
I52
VThisExpression
p32099
tp32100
I1
s(g7836
I42
g7837
Vinsert
p32101
I42
VSimpleName: mock
p32102
tp32103
I1
s(g5690
I42
g5691
Vinsert
p32104
I43
VSimpleType: Equals
p32105
tp32106
I1
s(g4800
I42
g4801
Vinsert
p32107
I21
VExpressionStatement
p32108
tp32109
I1
s(g4282
I42
g4283
Vinsert
p32110
I43
VSimpleType: CreationSettings
p32111
tp32112
I1
s(g11418
I42
g11419
Vinsert
p32113
I42
VSimpleName: mockHanlder
p32114
tp32115
I1
s(g1388
I42
g1389
Vinsert
p32116
I78
VMarkerAnnotation
p32117
tp32118
I1
s(g12960
I42
g12961
Vinsert
p32119
I45
VStringLiteral: "Hello"
p32120
tp32121
I1
s(g3777
I42
g3778
Vinsert
p32122
I43
VSimpleType: MockCreationSettings
p32123
tp32124
I2
s(g2349
I42
g2350
Vinsert
p32125
I42
VSimpleName: assertContains
p32126
tp32127
I1
s(g2866
I42
g2867
Vinsert
p32128
I38
VPrefixExpression: -
p32129
tp32130
I1
s(g10772
I42
g10773
Vinsert
p32131
I32
VMethodInvocation
p32132
tp32133
I1
s(g5530
I42
g5531
Vinsert
p32134
I43
VSimpleType: Throwable
p32135
tp32136
I1
s(g1307
I42
g1308
Vinsert
p32137
I11
VCastExpression
p32138
tp32139
I1
s(g8566
I42
g8567
Vinsert
p32140
I8
VBlock
p32141
tp32142
I1
s(g881
I42
g882
Vinsert
p32143
I59
VVariableDeclarationFragment
p32144
tp32145
I2
s(g483
I42
g484
Vinsert
p32146
I43
VSimpleType: CanDescribeVerbosely
p32147
tp32148
I3
s(Vinsert
p32149
I42
VSimpleName: simpleMethod
p32150
Vinsert
p32151
I42
VSimpleName: willReturn
p32152
tp32153
I3
s(g2733
I42
g2734
Vinsert
p32154
I42
VSimpleName: proxyFactory
p32155
tp32156
I1
s(g11325
I42
g11326
Vinsert
p32157
I74
VParameterizedType: Class<?>
p32158
tp32159
I2
s(g9016
I42
g9017
Vinsert
p32160
I42
VSimpleName: ArgumentCaptor
p32161
tp32162
I1
s(g8353
I42
g8354
Vinsert
p32163
I57
VTypeLiteral
p32164
tp32165
I12
s(g6468
I42
g6469
Vinsert
p32166
I42
VSimpleName: CloneableInterface
p32167
tp32168
I2
s(g12769
I42
g12770
Vinsert
p32169
I8
VBlock
p32170
tp32171
I33
s(g8682
I42
g8683
Vinsert
p32172
I42
VSimpleName: assertIncorrectUseOfAdditionalMatchers
p32173
tp32174
I1
s(g6695
I42
g6696
Vinsert
p32175
I42
VSimpleName: nextEntry
p32176
tp32177
I1
s(g1683
I42
g1684
Vinsert
p32178
I74
VParameterizedType: WeakReference<Class>
p32179
tp32180
I1
s(g74
I42
g75
Vinsert
p32181
I32
VMethodInvocation
p32182
tp32183
I3
s(g6056
I42
g6057
Vinsert
p32184
I39
VPrimitiveType: void
p32185
tp32186
I1
s(g11667
I42
g11668
Vinsert
p32187
I11
VCastExpression
p32188
tp32189
I3
s(g20085
I42
g20086
Vinsert
p32190
I32
VMethodInvocation
p32191
tp32192
I2
s(g29885
I42
g29886
Vinsert
p32193
I42
VSimpleName: RuntimeException
p32194
tp32195
I1
s(g5118
I42
g5119
Vinsert
p32196
I8
VBlock
p32197
tp32198
I3
s(g31582
I42
g31583
Vinsert
p32199
I43
VSimpleType: UndesiredInvocation
p32200
tp32201
I4
s(g2815
I42
g2816
Vinsert
p32202
I42
VSimpleName: or
p32203
tp32204
I2
s(g8434
I42
g8435
Vinsert
p32205
I42
VSimpleName: method
p32206
tp32207
I4
s(g3436
I42
g3437
Vinsert
p32208
I43
VSimpleType: NoSuchFieldException
p32209
tp32210
I2
s(g4853
I42
g4854
Vinsert
p32211
I32
VMethodInvocation
p32212
tp32213
I2
s(g9747
I42
g9748
Vinsert
p32214
I59
VVariableDeclarationFragment
p32215
tp32216
I1
s(g5403
I42
g5404
Vinsert
p32217
I4
VArrayInitializer
p32218
tp32219
I1
s(g124
I42
g125
Vinsert
p32220
I59
VVariableDeclarationFragment
p32221
tp32222
I2
s(g4600
I42
g4601
Vinsert
p32223
I8
VBlock
p32224
tp32225
I1
s(g8841
I42
g8842
Vinsert
p32226
I23
VFieldDeclaration
p32227
tp32228
I3
s(g6403
I42
g6404
Vinsert
p32229
I83
VModifier: public
p32230
tp32231
I1
s(g3036
I42
g3037
Vinsert
p32232
I42
VSimpleName: wanted
p32233
tp32234
I1
s(g2085
I42
g2086
Vinsert
p32235
I43
VSimpleType: Object
p32236
tp32237
I1
s(g3766
I42
g3767
Vinsert
p32238
I60
VVariableDeclarationStatement
p32239
tp32240
I2
s(g5191
I42
g5192
Vinsert
p32241
I42
VSimpleName: SOURCE
p32242
tp32243
I1
s(g28564
I42
g28565
Vinsert
p32244
I40
VQualifiedName: org.mockito.Mockito.verifyZeroInteractions
p32245
tp32246
I1
s(g7243
I42
g7244
Vinsert
p32247
I34
VNumberLiteral: 0
p32248
tp32249
I1
s(g4346
I42
g4347
Vinsert
p32250
I42
VSimpleName: String
p32251
tp32252
I1
s(g4231
I42
g4232
Vinsert
p32253
I40
VQualifiedName: elements.length
p32254
tp32255
I1
s(g6403
I42
g6404
Vinsert
p32256
I44
VSingleVariableDeclaration
p32257
tp32258
I1
s(g3144
I42
g3145
Vinsert
p32259
I41
VReturnStatement
p32260
tp32261
I1
s(g5335
I42
g5336
Vinsert
p32262
I42
VSimpleName: IllegalArgumentException
p32263
tp32264
I1
s(g3369
I42
g3370
Vinsert
p32265
I25
VIfStatement
p32266
tp32267
I1
s(g20772
I42
g20773
Vinsert
p32268
I45
VStringLiteral: "Number of classes does not match."
p32269
tp32270
I1
s(g896
I42
g897
Vinsert
p32271
I43
VSimpleType: InputStream
p32272
tp32273
I2
s(g12528
I42
g12529
Vinsert
p32274
I45
VStringLiteral: "deprecation"
p32275
tp32276
I1
s(g26027
I42
g26028
Vinsert
p32277
I57
VTypeLiteral
p32278
tp32279
I1
s(g3060
I42
g3061
Vinsert
p32280
I42
VSimpleName: delegate
p32281
tp32282
I1
s(g2336
I42
g2337
Vinsert
p32283
I42
VSimpleName: unverified
p32284
tp32285
I2
s(g1591
I42
g1592
Vinsert
p32286
I42
VSimpleName: invocationContainerImpl
p32287
tp32288
I1
s(g5416
I42
g5417
Vinsert
p32289
I42
VSimpleName: BDDStubber
p32290
tp32291
I2
s(g16677
I42
g16678
Vinsert
p32292
I42
VSimpleName: callInternalMethod
p32293
tp32294
I1
s(g8931
I42
g8932
Vinsert
p32295
I42
VSimpleName: invocationMatcherAt
p32296
tp32297
I1
s(g7906
I42
g7907
Vinsert
p32298
I42
VSimpleName: Description
p32299
tp32300
I1
s(g16004
I42
g16005
Vinsert
p32301
I42
VSimpleName: MockitoSerializationIssue
p32302
tp32303
I1
s(g12574
I42
g12575
Vinsert
p32304
I42
VSimpleName: getAnnotationEngine
p32305
tp32306
I1
s(g12017
I42
g12018
Vinsert
p32307
I45
VStringLiteral: "one"
p32308
tp32309
I3
s(g2575
I42
g2576
Vinsert
p32310
I42
VSimpleName: HashMap
p32311
tp32312
I1
s(g5164
I42
g5165
Vinsert
p32313
I32
VMethodInvocation
p32314
tp32315
I2
s(g12872
I42
g12873
Vinsert
p32316
I43
VSimpleType: Boo
p32317
tp32318
I4
s(g5295
I42
g5296
Vinsert
p32319
I27
VInfixExpression: &&
p32320
tp32321
I1
s(g4082
I42
g4083
Vinsert
p32322
I42
VSimpleName: run
p32323
tp32324
I1
s(g8894
I42
g8895
Vinsert
p32325
I59
VVariableDeclarationFragment
p32326
tp32327
I1
s(g24453
I42
g24454
Vinsert
p32328
I43
VSimpleType: List
p32329
tp32330
I4
s(g15429
I42
g15430
Vinsert
p32331
I74
VParameterizedType: Iterator<Invocation>
p32332
tp32333
I4
s(g2374
I42
g2375
Vinsert
p32334
I83
VModifier: public
p32335
tp32336
I3
s(Vinsert
p32337
I42
VSimpleName: getClass
p32338
Vinsert
p32339
I42
VSimpleName: obj
p32340
tp32341
I6
s(g9087
I42
g9088
Vinsert
p32342
I39
VPrimitiveType: boolean
p32343
tp32344
I2
s(Vinsert
p32345
I42
VSimpleName: getName
p32346
Vinsert
p32347
I42
VSimpleName: iface
p32348
tp32349
I2
s(g20934
I42
g20935
Vinsert
p32350
I43
VSimpleType: T
p32351
tp32352
I1
s(g5295
I42
g5296
Vinsert
p32353
I42
VSimpleName: Primitives
p32354
tp32355
I1
s(g788
I42
g789
Vinsert
p32356
I21
VExpressionStatement
p32357
tp32358
I1
s(g23292
I42
g23293
Vinsert
p32359
I9
VBooleanLiteral: false
p32360
tp32361
I1
s(g2565
I42
g2566
Vinsert
p32362
I42
VSimpleName: findFirstUnverifiedInOrder
p32363
tp32364
I1
s(g13053
I42
g13054
Vinsert
p32365
I42
VSimpleName: extraInterfaces
p32366
tp32367
I2
s(g4497
I42
g4498
Vinsert
p32368
I34
VNumberLiteral: 2
p32369
tp32370
I1
s(g14412
I42
g14413
Vinsert
p32371
I43
VSimpleType: InvocationListener
p32372
tp32373
I1
s(g1327
I42
g1328
Vinsert
p32374
I11
VCastExpression
p32375
tp32376
I1
s(g28323
I42
g28324
Vinsert
p32377
I43
VSimpleType: ChildOfThis
p32378
tp32379
I1
s(g2296
I42
g2297
Vinsert
p32380
I78
VMarkerAnnotation
p32381
tp32382
I2
s(g12138
I42
g12139
Vinsert
p32383
I42
VSimpleName: s
p32384
tp32385
I2
s(g1312
I42
g1313
Vinsert
p32386
I42
VSimpleName: assertThat
p32387
tp32388
I1
s(g1493
I42
g1494
Vinsert
p32389
I42
VSimpleName: getThrowable
p32390
tp32391
I1
s(g2369
I42
g2370
Vinsert
p32392
I42
VSimpleName: ArrayList
p32393
tp32394
I1
s(Vinsert
p32395
I42
VSimpleName: isValidReturnType
p32396
Vinsert
p32397
I42
VSimpleName: validateIndexWithinInvocationRange
p32398
tp32399
I1
s(g25311
I42
g25312
Vinsert
p32400
I45
VStringLiteral: "IMethods.simpleMethod(2)"
p32401
tp32402
I1
s(g4714
I42
g4715
Vinsert
p32403
I42
VSimpleName: Whitebox
p32404
tp32405
I7
s(g4539
I42
g4540
Vinsert
p32406
I36
VParenthesizedExpression
p32407
tp32408
I2
s(g2949
I42
g2950
Vinsert
p32409
I42
VSimpleName: isOut
p32410
tp32411
I1
s(g9990
I42
g9991
Vinsert
p32412
I42
VSimpleName: returns
p32413
tp32414
I1
s(g21691
I42
g21692
Vinsert
p32415
I42
VSimpleName: nonVarArgsCount
p32416
tp32417
I1
s(g2536
I42
g2537
Vinsert
p32418
I42
VSimpleName: m
p32419
tp32420
I2
s(g12922
I42
g12923
Vinsert
p32421
I52
VThisExpression
p32422
tp32423
I1
s(g6828
I42
g6829
Vinsert
p32424
I42
VSimpleName: error
p32425
tp32426
I1
s(g6098
I42
g6099
Vinsert
p32427
I32
VMethodInvocation
p32428
tp32429
I1
s(g16709
I42
g16710
Vinsert
p32430
I21
VExpressionStatement
p32431
tp32432
I1
s(g3606
I42
g3607
Vinsert
p32433
I42
VSimpleName: realMethod
p32434
tp32435
I1
s(g2743
I42
g2744
Vinsert
p32436
I8
VBlock
p32437
tp32438
I1
s(g20934
I42
g20935
Vinsert
p32439
I42
VSimpleName: T
p32440
tp32441
I1
s(g74
I42
g75
Vinsert
p32442
I21
VExpressionStatement
p32443
tp32444
I2
s(g2621
I42
g2622
Vinsert
p32445
I39
VPrimitiveType: void
p32446
tp32447
I4
s(g23104
I42
g23105
Vinsert
p32448
I45
VStringLiteral: "not.Defined"
p32449
tp32450
I1
s(g9483
I42
g9484
Vinsert
p32451
I43
VSimpleType: LinkedList
p32452
tp32453
I2
s(g2728
I42
g2729
Vinsert
p32454
I27
VInfixExpression: ==
p32455
tp32456
I1
s(g3943
I42
g3944
Vinsert
p32457
I21
VExpressionStatement
p32458
tp32459
I7
s(g11043
I42
g11044
Vinsert
p32460
I32
VMethodInvocation
p32461
tp32462
I1
s(g618
I42
g619
Vinsert
p32463
I34
VNumberLiteral: 30000
p32464
tp32465
I1
s(g3111
I42
g3112
Vinsert
p32466
I14
VClassInstanceCreation
p32467
tp32468
I1
s(g6008
I42
g6009
Vinsert
p32469
I8
VBlock
p32470
tp32471
I1
s(g204
I42
g205
Vinsert
p32472
I42
VSimpleName: ex
p32473
tp32474
I1
s(g7195
I42
g7196
Vinsert
p32475
I34
VNumberLiteral: 2
p32476
tp32477
I1
s(g11404
I42
g11405
Vinsert
p32478
I8
VBlock
p32479
tp32480
I5
s(g16562
I42
g16563
Vinsert
p32481
I39
VPrimitiveType: int
p32482
tp32483
I3
s(g5201
I42
g5202
Vinsert
p32484
I42
VSimpleName: Test
p32485
tp32486
I1
s(g7313
I42
g7314
Vinsert
p32487
I16
VConditionalExpression
p32488
tp32489
I1
s(g3101
I42
g3102
Vinsert
p32490
I43
VSimpleType: NewOngoingStubbing
p32491
tp32492
I1
s(g2311
I42
g2312
Vinsert
p32493
I85
VDimension
p32494
tp32495
I1
s(g5118
I42
g5119
Vinsert
p32496
I42
VSimpleName: Test
p32497
tp32498
I1
s(g19469
I42
g19470
Vinsert
p32499
I85
VDimension
p32500
tp32501
I1
s(g806
I42
g807
Vinsert
p32502
I43
VSimpleType: Method
p32503
tp32504
I1
s(g7030
I42
g7031
Vinsert
p32505
I83
VModifier: final
p32506
tp32507
I3
s(g3011
I42
g3012
Vinsert
p32508
I42
VSimpleName: Integer
p32509
tp32510
I1
s(g8642
I42
g8643
Vinsert
p32511
I85
VDimension
p32512
tp32513
I1
s(g9224
I42
g9225
Vinsert
p32514
I83
VModifier: public
p32515
tp32516
I1
s(g3498
I42
g3499
Vinsert
p32517
I34
VNumberLiteral: 0
p32518
tp32519
I1
s(g2190
I42
g2191
Vinsert
p32520
I42
VSimpleName: Object
p32521
tp32522
I5
s(g61
I42
g62
Vinsert
p32523
I42
VSimpleName: invocation
p32524
tp32525
I1
s(g14311
I42
g14312
Vinsert
p32526
I42
VSimpleName: h
p32527
tp32528
I5
s(g438
I42
g439
Vinsert
p32529
I60
VVariableDeclarationStatement
p32530
tp32531
I3
s(g4827
I42
g4828
Vinsert
p32532
I42
VSimpleName: Class
p32533
tp32534
I10
s(g5426
I42
g5427
Vinsert
p32535
I40
VQualifiedName: features.mockedType
p32536
tp32537
I1
s(g2413
I42
g2414
Vinsert
p32538
I42
VSimpleName: second
p32539
tp32540
I2
s(g2973
I42
g2974
Vinsert
p32541
I42
VSimpleName: T
p32542
tp32543
I1
s(g20934
I42
g20935
Vinsert
p32544
I27
VInfixExpression: +
p32545
tp32546
I9
s(g30882
I42
g30883
Vinsert
p32547
I34
VNumberLiteral: 0
p32548
tp32549
I3
s(g4335
I42
g4336
Vinsert
p32550
I42
VSimpleName: floatVal
p32551
tp32552
I1
s(g20566
I42
g20567
Vinsert
p32553
I78
VMarkerAnnotation
p32554
tp32555
I1
s(g2611
I42
g2612
Vinsert
p32556
I83
VModifier: final
p32557
tp32558
I1
s(g6695
I42
g6696
Vinsert
p32559
I42
VSimpleName: Number
p32560
tp32561
I1
s(g4866
I42
g4867
Vinsert
p32562
I42
VSimpleName: StubbingInBeforeUnused
p32563
tp32564
I2
s(g2227
I42
g2228
Vinsert
p32565
I8
VBlock
p32566
tp32567
I1
s(g836
I42
g837
Vinsert
p32568
I43
VSimpleType: Set
p32569
tp32570
I1
s(g12922
I42
g12923
Vinsert
p32571
I42
VSimpleName: listener
p32572
tp32573
I1
s(g2616
I42
g2617
Vinsert
p32574
I74
VParameterizedType: Class<?>
p32575
tp32576
I1
s(g6841
I42
g6842
Vinsert
p32577
I42
VSimpleName: InvocationChunk
p32578
tp32579
I1
s(Vinsert
p32580
I42
VSimpleName: toInvocation
p32581
Vinsert
p32582
I74
VParameterizedType: List<Invocation>
p32583
tp32584
I1
s(g1416
I42
g1417
Vinsert
p32585
I27
VInfixExpression: +
p32586
tp32587
I2
s(g6056
I42
g6057
Vinsert
p32588
I83
VModifier: public
p32589
tp32590
I3
s(g94
I42
g95
Vinsert
p32591
I83
VModifier: public
p32592
tp32593
I19
s(g11572
I42
g11573
Vinsert
p32594
I42
VSimpleName: type
p32595
tp32596
I1
s(g13916
I42
g13917
Vinsert
p32597
I42
VSimpleName: m
p32598
tp32599
I1
s(g6744
I42
g6745
Vinsert
p32600
I41
VReturnStatement
p32601
tp32602
I1
s(g16979
I42
g16980
Vinsert
p32603
I42
VSimpleName: n
p32604
tp32605
I2
s(g1194
I42
g1195
Vinsert
p32606
I43
VSimpleType: NoInteractionsWanted
p32607
tp32608
I1
s(g6295
I42
g6296
Vinsert
p32609
I42
VSimpleName: InvocationListener
p32610
tp32611
I2
s(g26
I42
g27
Vinsert
p32612
I44
VSingleVariableDeclaration
p32613
tp32614
I1
s(g8677
I42
g8678
Vinsert
p32615
I44
VSingleVariableDeclaration
p32616
tp32617
I1
s(g12221
I42
g12222
Vinsert
p32618
I43
VSimpleType: Mock
p32619
tp32620
I1
s(g7185
I42
g7186
Vinsert
p32621
I83
VModifier: private
p32622
tp32623
I2
s(g3714
I42
g3715
Vinsert
p32624
I42
VSimpleName: args
p32625
tp32626
I2
s(g1609
I42
g1610
Vinsert
p32627
I42
VSimpleName: StackTraceElement
p32628
tp32629
I5
s(g15396
I42
g15397
Vinsert
p32630
I42
VSimpleName: shouldLocationNotContainGetStackTraceMethod
p32631
tp32632
I1
s(g6300
I42
g6301
Vinsert
p32633
I83
VModifier: public
p32634
tp32635
I1
s(g15719
I42
g15720
Vinsert
p32636
I42
VSimpleName: mockitoOngoingStubbing
p32637
tp32638
I1
s(g7124
I42
g7125
Vinsert
p32639
I7
VAssignment: =
p32640
tp32641
I1
s(g8348
I42
g8349
Vinsert
p32642
I44
VSingleVariableDeclaration
p32643
tp32644
I11
s(g1553
I42
g1554
Vinsert
p32645
I42
VSimpleName: matches
p32646
tp32647
I1
s(g10696
I42
g10697
Vinsert
p32648
I40
VQualifiedName: mockFeatures.mockedType
p32649
tp32650
I1
s(g9306
I42
g9307
Vinsert
p32651
I43
VSimpleType: VerificationModeDecoder
p32652
tp32653
I1
s(g3011
I42
g3012
Vinsert
p32654
I42
VSimpleName: o2
p32655
tp32656
I1
s(g16902
I42
g16903
Vinsert
p32657
I45
VStringLiteral: "mockitoInterceptor"
p32658
tp32659
I1
s(g5164
I42
g5165
Vinsert
p32660
I44
VSingleVariableDeclaration
p32661
tp32662
I2
s(g5647
I42
g5648
Vinsert
p32663
I36
VParenthesizedExpression
p32664
tp32665
I1
s(g32345
I42
g32346
Vinsert
p32666
I43
VSimpleType: MulticastDelegate
p32667
tp32668
I2
s(g14434
I42
g14435
Vinsert
p32669
I45
VStringLiteral: "was exactly 1 interaction"
p32670
tp32671
I1
s(g12326
I42
g12327
Vinsert
p32672
I41
VReturnStatement
p32673
tp32674
I1
s(g498
I42
g499
Vinsert
p32675
I21
VExpressionStatement
p32676
tp32677
I1
s(g1001
I42
g1002
Vinsert
p32678
I42
VSimpleName: List
p32679
tp32680
I6
s(g4231
I42
g4232
Vinsert
p32681
I42
VSimpleName: i
p32682
tp32683
I9
s(g2467
I42
g2468
Vinsert
p32684
I42
VSimpleName: T
p32685
tp32686
I1
s(g15179
I42
g15180
Vinsert
p32687
I10
VBreakStatement
p32688
tp32689
I2
s(g2657
I42
g2658
Vinsert
p32690
I32
VMethodInvocation
p32691
tp32692
I1
s(g20934
I42
g20935
Vinsert
p32693
I41
VReturnStatement
p32694
tp32695
I2
s(g13218
I42
g13219
Vinsert
p32696
I59
VVariableDeclarationFragment
p32697
tp32698
I1
s(g10470
I42
g10471
Vinsert
p32699
I42
VSimpleName: Invocation
p32700
tp32701
I1
s(g16314
I42
g16315
Vinsert
p32702
I42
VSimpleName: sb
p32703
tp32704
I2
s(g7966
I42
g7967
Vinsert
p32705
I54
VTryStatement
p32706
tp32707
I1
s(g8242
I42
g8243
Vinsert
p32708
I74
VParameterizedType: Callable<?>
p32709
tp32710
I1
s(g4523
I42
g4524
Vinsert
p32711
I8
VBlock
p32712
tp32713
I1
s(g2929
I42
g2930
Vinsert
p32714
I43
VSimpleType: ArrayList
p32715
tp32716
I1
s(g2705
I42
g2706
Vinsert
p32717
I32
VMethodInvocation
p32718
tp32719
I3
s(g2954
I42
g2955
Vinsert
p32720
I42
VSimpleName: MethodsImpl
p32721
tp32722
I2
s(g17860
I42
g17861
Vinsert
p32723
I31
VMethodDeclaration
p32724
tp32725
I6
s(g21680
I42
g21681
Vinsert
p32726
I52
VThisExpression
p32727
tp32728
I1
s(g5416
I42
g5417
Vinsert
p32729
I14
VClassInstanceCreation
p32730
tp32731
I1
s(g3709
I42
g3710
Vinsert
p32732
I42
VSimpleName: namingPolicy
p32733
tp32734
I1
s(g926
I42
g927
Vinsert
p32735
I59
VVariableDeclarationFragment
p32736
tp32737
I5
s(g5180
I42
g5181
Vinsert
p32738
I43
VSimpleType: Root
p32739
tp32740
I1
s(g4006
I42
g4007
Vinsert
p32741
I14
VClassInstanceCreation
p32742
tp32743
I9
s(g15534
I42
g15535
Vinsert
p32744
I40
VQualifiedName: SerializableMode.ACROSS_CLASSLOADERS
p32745
tp32746
I1
s(g11626
I42
g11627
Vinsert
p32747
I42
VSimpleName: ConstructorArgumentResolver
p32748
tp32749
I2
s(g4934
I42
g4935
Vinsert
p32750
I42
VSimpleName: desc
p32751
tp32752
I1
s(g4362
I42
g4363
Vinsert
p32753
I45
VStringLiteral: "  # foo  "
p32754
tp32755
I1
s(g5690
I42
g5691
Vinsert
p32756
I43
VSimpleType: T
p32757
tp32758
I1
s(g1528
I42
g1529
Vinsert
p32759
I43
VSimpleType: VerificationMode
p32760
tp32761
I12
s(g2331
I42
g2332
Vinsert
p32762
I41
VReturnStatement
p32763
tp32764
I2
s(g13980
I42
g13981
Vinsert
p32765
I43
VSimpleType: MockFeatures
p32766
tp32767
I1
s(g10963
I42
g10964
Vinsert
p32768
I42
VSimpleName: invocationMatcher
p32769
tp32770
I1
s(g1184
I42
g1185
Vinsert
p32771
I65
VTagElement: @return
p32772
tp32773
I1
s(g4072
I42
g4073
Vinsert
p32774
I83
VModifier: public
p32775
tp32776
I1
s(g6669
I42
g6670
Vinsert
p32777
I21
VExpressionStatement
p32778
tp32779
I2
s(g1115
I42
g1116
Vinsert
p32780
I21
VExpressionStatement
p32781
tp32782
I1
s(g8696
I42
g8697
Vinsert
p32783
I60
VVariableDeclarationStatement
p32784
tp32785
I3
s(g14223
I42
g14224
Vinsert
p32786
I42
VSimpleName: invocationForStubbing
p32787
tp32788
I2
s(Vinsert
p32789
I42
VSimpleName: enableAccess
p32790
Vinsert
p32791
I42
VSimpleName: Object
p32792
tp32793
I1
s(g1049
I42
g1050
Vinsert
p32794
I45
VStringLiteral: "If you get this error despite using JUnit 4.4 or higher then please report this error to the mockito mailing list.\u005cn"
p32795
tp32796
I1
s(g453
I42
g454
Vinsert
p32797
I8
VBlock
p32798
tp32799
I1
s(g4704
I42
g4705
Vinsert
p32800
I42
VSimpleName: contains
p32801
tp32802
I2
s(g3026
I42
g3027
Vinsert
p32803
I27
VInfixExpression: &&
p32804
tp32805
I2
s(g307
I42
g308
Vinsert
p32806
I42
VSimpleName: serialized
p32807
tp32808
I2
s(g3257
I42
g3258
Vinsert
p32809
I21
VExpressionStatement
p32810
tp32811
I1
s(g23817
I42
g23818
Vinsert
p32812
I42
VSimpleName: SOME_STRING_VALUE
p32813
tp32814
I1
s(g9139
I42
g9140
Vinsert
p32815
I42
VSimpleName: should
p32816
tp32817
I1
s(g6642
I42
g6643
Vinsert
p32818
I42
VSimpleName: clazz
p32819
tp32820
I2
s(g4638
I42
g4639
Vinsert
p32821
I45
VStringLiteral: "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum."
p32822
tp32823
I1
s(g11509
I42
g11510
Vinsert
p32824
I34
VNumberLiteral: 1L
p32825
tp32826
I1
s(g5393
I42
g5394
Vinsert
p32827
I42
VSimpleName: serializableMode
p32828
tp32829
I2
s(g144
I42
g145
Vinsert
p32830
I39
VPrimitiveType: void
p32831
tp32832
I1
s(g10851
I42
g10852
Vinsert
p32833
I45
VStringLiteral: "java.util.OptionalLong"
p32834
tp32835
I1
s(g3835
I42
g3836
Vinsert
p32836
I42
VSimpleName: StackTrackeFilteringTest
p32837
tp32838
I1
s(g3298
I42
g3299
Vinsert
p32839
I42
VSimpleName: Class
p32840
tp32841
I1
s(g7351
I42
g7352
Vinsert
p32842
I60
VVariableDeclarationStatement
p32843
tp32844
I1
s(g3629
I42
g3630
Vinsert
p32845
I32
VMethodInvocation
p32846
tp32847
I2
s(g4800
I42
g4801
Vinsert
p32848
I32
VMethodInvocation
p32849
tp32850
I1
s(g7321
I42
g7322
Vinsert
p32851
I27
VInfixExpression: !=
p32852
tp32853
I1
s(g10777
I42
g10778
Vinsert
p32854
I43
VSimpleType: Type
p32855
tp32856
I1
s(g9271
I42
g9272
Vinsert
p32857
I42
VSimpleName: differentTypeMock
p32858
tp32859
I1
s(g8136
I42
g8137
Vinsert
p32860
I45
VStringLiteral: "3"
p32861
tp32862
I1
s(g15939
I42
g15940
Vinsert
p32863
I42
VSimpleName: ReturnsVoid
p32864
tp32865
I1
s(g1665
I42
g1666
Vinsert
p32866
I42
VSimpleName: mockSettings
p32867
tp32868
I1
s(g2871
I42
g2872
Vinsert
p32869
I42
VSimpleName: TypeUtils
p32870
tp32871
I1
s(g3016
I42
g3017
Vinsert
p32872
I21
VExpressionStatement
p32873
tp32874
I2
s(g6035
I42
g6036
Vinsert
p32875
I21
VExpressionStatement
p32876
tp32877
I1
s(g5544
I42
g5545
Vinsert
p32878
I43
VSimpleType: T
p32879
tp32880
I7
s(g6411
I42
g6412
Vinsert
p32881
I42
VSimpleName: pluginType
p32882
tp32883
I1
s(g8647
I42
g8648
Vinsert
p32884
I59
VVariableDeclarationFragment
p32885
tp32886
I2
s(g5062
I42
g5063
Vinsert
p32887
I42
VSimpleName: doThrow
p32888
tp32889
I1
s(g3441
I42
g3442
Vinsert
p32890
I43
VSimpleType: String
p32891
tp32892
I1
s(g4204
I42
g4205
Vinsert
p32893
I80
VMemberValuePair
p32894
tp32895
I2
s(g926
I42
g927
Vinsert
p32896
I8
VBlock
p32897
tp32898
I11
s(g1675
I42
g1676
Vinsert
p32899
I43
VSimpleType: Invocation
p32900
tp32901
I1
s(g18556
I42
g18557
Vinsert
p32902
I42
VSimpleName: Test
p32903
tp32904
I1
s(g5164
I42
g5165
Vinsert
p32905
I42
VSimpleName: filtered
p32906
tp32907
I1
s(g4800
I42
g4801
Vinsert
p32908
I42
VSimpleName: MockHandlerImpl
p32909
tp32910
I1
s(g21083
I42
g21084
Vinsert
p32911
I43
VSimpleType: Strictly
p32912
tp32913
I6
s(g7049
I42
g7050
Vinsert
p32914
I42
VSimpleName: equals
p32915
tp32916
I1
s(g5456
I42
g5457
Vinsert
p32917
I78
VMarkerAnnotation
p32918
tp32919
I2
s(g4861
I42
g4862
Vinsert
p32920
I42
VSimpleName: RunNotifier
p32921
tp32922
I1
s(g428
I42
g429
Vinsert
p32923
I40
VQualifiedName: org.mockito.Mockito.times
p32924
tp32925
I1
s(g13798
I42
g13799
Vinsert
p32926
I43
VSimpleType: Object
p32927
tp32928
I1
s(g6791
I42
g6792
Vinsert
p32929
I42
VSimpleName: PluginLoader
p32930
tp32931
I1
s(g1011
I42
g1012
Vinsert
p32932
I42
VSimpleName: wantedInvocation
p32933
tp32934
I1
s(g2261
I42
g2262
Vinsert
p32935
I42
VSimpleName: RuntimeExceptionVerificationMode
p32936
tp32937
I1
s(Vinsert
p32938
I42
VSimpleName: getClass
p32939
Vinsert
p32940
I42
VSimpleName: Type
p32941
tp32942
I2
s(g6882
I42
g6883
Vinsert
p32943
I42
VSimpleName: T
p32944
tp32945
I1
s(g12188
I42
g12189
Vinsert
p32946
I41
VReturnStatement
p32947
tp32948
I1
s(g9434
I42
g9435
Vinsert
p32949
I21
VExpressionStatement
p32950
tp32951
I3
s(g7817
I42
g7818
Vinsert
p32952
I42
VSimpleName: Test
p32953
tp32954
I2
s(g16979
I42
g16980
Vinsert
p32955
I42
VSimpleName: after
p32956
tp32957
I1
s(g9584
I42
g9585
Vinsert
p32958
I43
VSimpleType: Person
p32959
tp32960
I1
s(g21
I42
g22
Vinsert
p32961
I17
VConstructorInvocation
p32962
tp32963
I1
s(g11012
I42
g11013
Vinsert
p32964
I42
VSimpleName: testFailure
p32965
tp32966
I1
s(g1627
I42
g1628
Vinsert
p32967
I21
VExpressionStatement
p32968
tp32969
I1
s(g15245
I42
g15246
Vinsert
p32970
I45
VStringLiteral: "* Improvements: "
p32971
tp32972
I1
s(g4577
I42
g4578
Vinsert
p32973
I42
VSimpleName: T
p32974
tp32975
I2
s(g12362
I42
g12363
Vinsert
p32976
I41
VReturnStatement
p32977
tp32978
I2
s(g4322
I42
g4323
Vinsert
p32979
I42
VSimpleName: Class
p32980
tp32981
I5
s(g1619
I42
g1620
Vinsert
p32982
I21
VExpressionStatement
p32983
tp32984
I3
s(g10567
I42
g10568
Vinsert
p32985
I41
VReturnStatement
p32986
tp32987
I2
s(g4420
I42
g4421
Vinsert
p32988
I32
VMethodInvocation
p32989
tp32990
I6
s(g1843
I42
g1844
Vinsert
p32991
I85
VDimension
p32992
tp32993
I2
s(g3585
I42
g3586
Vinsert
p32994
I21
VExpressionStatement
p32995
tp32996
I1
s(g10794
I42
g10795
Vinsert
p32997
I32
VMethodInvocation
p32998
tp32999
I2
s(g11514
I42
g11515
Vinsert
p33000
I42
VSimpleName: String
p33001
tp33002
I1
s(g7521
I42
g7522
Vinsert
p33003
I43
VSimpleType: Throwable
p33004
tp33005
I2
s(g3242
I42
g3243
Vinsert
p33006
I83
VModifier: public
p33007
tp33008
I1
s(g9234
I42
g9235
Vinsert
p33009
I32
VMethodInvocation
p33010
tp33011
I1
s(g558
I42
g559
Vinsert
p33012
I42
VSimpleName: InstantiatorProvider
p33013
tp33014
I1
s(g307
I42
g308
Vinsert
p33015
I42
VSimpleName: assertThat
p33016
tp33017
I4
s(g598
I42
g599
Vinsert
p33018
I43
VSimpleType: MockCreationSettings
p33019
tp33020
I1
s(g2311
I42
g2312
Vinsert
p33021
I60
VVariableDeclarationStatement
p33022
tp33023
I1
s(g3395
I42
g3396
Vinsert
p33024
I16
VConditionalExpression
p33025
tp33026
I1
s(g2552
I42
g2553
Vinsert
p33027
I42
VSimpleName: capture
p33028
tp33029
I1
s(g3493
I42
g3494
Vinsert
p33030
I11
VCastExpression
p33031
tp33032
I1
s(g6048
I42
g6049
Vinsert
p33033
I34
VNumberLiteral: 0
p33034
tp33035
I1
s(g5655
I42
g5656
Vinsert
p33036
I42
VSimpleName: testMethodName
p33037
tp33038
I1
s(g12287
I42
g12288
Vinsert
p33039
I32
VMethodInvocation
p33040
tp33041
I6
s(g16663
I42
g16664
Vinsert
p33042
I42
VSimpleName: value
p33043
tp33044
I1
s(g219
I42
g220
Vinsert
p33045
I42
VSimpleName: argumentMatcher
p33046
tp33047
I4
s(g11214
I42
g11215
Vinsert
p33048
I60
VVariableDeclarationStatement
p33049
tp33050
I2
s(g9413
I42
g9414
Vinsert
p33051
I78
VMarkerAnnotation
p33052
tp33053
I1
s(g10279
I42
g10280
Vinsert
p33054
I59
VVariableDeclarationFragment
p33055
tp33056
I19
s(g2631
I42
g2632
Vinsert
p33057
I59
VVariableDeclarationFragment
p33058
tp33059
I2
s(g5921
I42
g5922
Vinsert
p33060
I39
VPrimitiveType: void
p33061
tp33062
I2
s(g19662
I42
g19663
Vinsert
p33063
I42
VSimpleName: String
p33064
tp33065
I7
s(g16232
I42
g16233
Vinsert
p33066
I42
VSimpleName: Foo
p33067
tp33068
I2
s(g1239
I42
g1240
Vinsert
p33069
I14
VClassInstanceCreation
p33070
tp33071
I1
s(g2403
I42
g2404
Vinsert
p33072
I42
VSimpleName: expected
p33073
tp33074
I1
s(g831
I42
g832
Vinsert
p33075
I8
VBlock
p33076
tp33077
I1
s(g10346
I42
g10347
Vinsert
p33078
I42
VSimpleName: RETURNS_MOCKS
p33079
tp33080
I1
s(g458
I42
g459
Vinsert
p33081
I42
VSimpleName: expected
p33082
tp33083
I1
s(g10688
I42
g10689
Vinsert
p33084
I42
VSimpleName: mock
p33085
tp33086
I2
s(g513
I42
g514
Vinsert
p33087
I42
VSimpleName: iterable
p33088
tp33089
I4
s(g1421
I42
g1422
Vinsert
p33090
I83
VModifier: public
p33091
tp33092
I1
s(g2359
I42
g2360
Vinsert
p33093
I43
VSimpleType: Invocation
p33094
tp33095
I3
s(g3055
I42
g3056
Vinsert
p33096
I42
VSimpleName: reportMatcher
p33097
tp33098
I4
s(g10688
I42
g10689
Vinsert
p33099
I27
VInfixExpression: ==
p33100
tp33101
I1
s(g8275
I42
g8276
Vinsert
p33102
I57
VTypeLiteral
p33103
tp33104
I1
s(Vinsert
p33105
I42
VSimpleName: currentTimeMillis
p33106
Vinsert
p33107
I42
VSimpleName: verify
p33108
tp33109
I1
s(g1642
I42
g1643
Vinsert
p33110
I43
VSimpleType: Invocation
p33111
tp33112
I1
s(g4709
I42
g4710
Vinsert
p33113
I22
VFieldAccess
p33114
tp33115
I4
s(g109
I42
g110
Vinsert
p33116
I43
VSimpleType: MockitoJUnitRunner.Silent
p33117
tp33118
I1
s(g7321
I42
g7322
Vinsert
p33119
I21
VExpressionStatement
p33120
tp33121
I1
s(g1670
I42
g1671
Vinsert
p33122
I42
VSimpleName: allMatching
p33123
tp33124
I1
s(g124
I42
g125
Vinsert
p33125
I42
VSimpleName: srcFiles
p33126
tp33127
I1
s(g5062
I42
g5063
Vinsert
p33128
I42
VSimpleName: Throwable
p33129
tp33130
I1
s(g5368
I42
g5369
Vinsert
p33131
I38
VPrefixExpression: !
p33132
tp33133
I1
s(g10651
I42
g10652
Vinsert
p33134
I7
VAssignment: =
p33135
tp33136
I1
s(g11418
I42
g11419
Vinsert
p33137
I42
VSimpleName: MockSettingsImpl
p33138
tp33139
I1
s(g991
I42
g992
Vinsert
p33140
I27
VInfixExpression: ||
p33141
tp33142
I1
s(g6476
I42
g6477
Vinsert
p33143
I42
VSimpleName: addTo
p33144
tp33145
I1
s(g4929
I42
g4930
Vinsert
p33146
I32
VMethodInvocation
p33147
tp33148
I3
s(g4646
I42
g4647
Vinsert
p33149
I32
VMethodInvocation
p33150
tp33151
I1
s(g12799
I42
g12800
Vinsert
p33152
I39
VPrimitiveType: byte
p33153
tp33154
I1
s(g2462
I42
g2463
Vinsert
p33155
I42
VSimpleName: Field
p33156
tp33157
I3
s(g4354
I42
g4355
Vinsert
p33158
I43
VSimpleType: Foo
p33159
tp33160
I4
s(g12193
I42
g12194
Vinsert
p33161
I41
VReturnStatement
p33162
tp33163
I6
s(g20107
I42
g20108
Vinsert
p33164
I40
VQualifiedName: java.util.ArrayList
p33165
tp33166
I1
s(g14566
I42
g14567
Vinsert
p33167
I8
VBlock
p33168
tp33169
I2
s(g13186
I42
g13187
Vinsert
p33170
I39
VPrimitiveType: byte
p33171
tp33172
I1
s(g2881
I42
g2882
Vinsert
p33173
I39
VPrimitiveType: boolean
p33174
tp33175
I1
s(g6736
I42
g6737
Vinsert
p33176
I74
VParameterizedType: List<Invocation>
p33177
tp33178
I1
s(g10354
I42
g10355
Vinsert
p33179
I32
VMethodInvocation
p33180
tp33181
I7
s(g8973
I42
g8974
Vinsert
p33182
I9
VBooleanLiteral: true
p33183
tp33184
I1
s(g20652
I42
g20653
Vinsert
p33185
I42
VSimpleName: strict
p33186
tp33187
I1
s(g3777
I42
g3778
Vinsert
p33188
I52
VThisExpression
p33189
tp33190
I7
s(g7213
I42
g7214
Vinsert
p33191
I14
VClassInstanceCreation
p33192
tp33193
I2
s(g523
I42
g524
Vinsert
p33194
I42
VSimpleName: getMockMaker
p33195
tp33196
I1
s(g2090
I42
g2091
Vinsert
p33197
I43
VSimpleType: Exception
p33198
tp33199
I1
s(g30920
I42
g30921
Vinsert
p33200
I45
VStringLiteral: "Verification in order failed"
p33201
tp33202
I1
s(g1179
I42
g1180
Vinsert
p33203
I42
VSimpleName: method
p33204
tp33205
I1
s(g282
I42
g283
Vinsert
p33206
I42
VSimpleName: Object
p33207
tp33208
I2
s(g2398
I42
g2399
Vinsert
p33209
I41
VReturnStatement
p33210
tp33211
I2
s(g377
I42
g378
Vinsert
p33212
I42
VSimpleName: toInspect
p33213
tp33214
I1
s(g1914
I42
g1915
Vinsert
p33215
I42
VSimpleName: ClassLoaders
p33216
tp33217
I2
s(g2286
I42
g2287
Vinsert
p33218
I42
VSimpleName: getAnnotationEngine
p33219
tp33220
I1
s(g1164
I42
g1165
Vinsert
p33221
I39
VPrimitiveType: void
p33222
tp33223
I1
s(g2286
I42
g2287
Vinsert
p33224
I42
VSimpleName: registry
p33225
tp33226
I1
s(g1199
I42
g1200
Vinsert
p33227
I42
VSimpleName: ClassInfo
p33228
tp33229
I1
s(g6416
I42
g6417
Vinsert
p33230
I42
VSimpleName: nullPassedToVerify
p33231
tp33232
I1
s(g3336
I42
g3337
Vinsert
p33233
I36
VParenthesizedExpression
p33234
tp33235
I1
s(g14223
I42
g14224
Vinsert
p33236
I52
VThisExpression
p33237
tp33238
I1
s(g4143
I42
g4144
Vinsert
p33239
I42
VSimpleName: Exception
p33240
tp33241
I1
s(g5078
I42
g5079
Vinsert
p33242
I43
VSimpleType: String
p33243
tp33244
I2
s(g1472
I42
g1473
Vinsert
p33245
I43
VSimpleType: MockitoGenericMetadata
p33246
tp33247
I1
s(g2105
I42
g2106
Vinsert
p33248
I42
VSimpleName: SearchingClassLoader
p33249
tp33250
I1
s(g588
I42
g589
Vinsert
p33251
I78
VMarkerAnnotation
p33252
tp33253
I1
s(g3532
I42
g3533
Vinsert
p33254
I42
VSimpleName: cleanup
p33255
tp33256
I4
s(g2988
I42
g2989
Vinsert
p33257
I27
VInfixExpression: ==
p33258
tp33259
I2
s(g3748
I42
g3749
Vinsert
p33260
I11
VCastExpression
p33261
tp33262
I1
s(g4939
I42
g4940
Vinsert
p33263
I21
VExpressionStatement
p33264
tp33265
I1
s(g5522
I42
g5523
Vinsert
p33266
I42
VSimpleName: getDefaultClassLoader
p33267
tp33268
I3
s(g1853
I42
g1854
Vinsert
p33269
I32
VMethodInvocation
p33270
tp33271
I1
s(g5360
I42
g5361
Vinsert
p33272
I59
VVariableDeclarationFragment
p33273
tp33274
I1
s(g4714
I42
g4715
Vinsert
p33275
I43
VSimpleType: MethodProxy
p33276
tp33277
I2
s(g5665
I42
g5666
Vinsert
p33278
I45
VStringLiteral: "createInfo"
p33279
tp33280
I1
s(g747
I42
g748
Vinsert
p33281
I57
VTypeLiteral
p33282
tp33283
I2
s(g12326
I42
g12327
Vinsert
p33284
I42
VSimpleName: Invocation
p33285
tp33286
I1
s(g29408
I42
g29409
Vinsert
p33287
I42
VSimpleName: registeredInvocations
p33288
tp33289
I2
s(g5512
I42
g5513
Vinsert
p33290
I34
VNumberLiteral: 30
p33291
tp33292
I1
s(g36
I42
g37
Vinsert
p33293
I54
VTryStatement
p33294
tp33295
I3
s(g2364
I42
g2365
Vinsert
p33296
I44
VSingleVariableDeclaration
p33297
tp33298
I1
s(g4436
I42
g4437
Vinsert
p33299
I42
VSimpleName: thenReturn
p33300
tp33301
I1
s(g7961
I42
g7962
Vinsert
p33302
I42
VSimpleName: Exception
p33303
tp33304
I3
s(g11099
I42
g11100
Vinsert
p33305
I39
VPrimitiveType: boolean
p33306
tp33307
I1
s(g332
I42
g333
Vinsert
p33308
I42
VSimpleName: value
p33309
tp33310
I2
s(g16592
I42
g16593
Vinsert
p33311
I42
VSimpleName: getStackTrace
p33312
tp33313
I3
s(g12221
I42
g12222
Vinsert
p33314
I42
VSimpleName: Field
p33315
tp33316
I1
s(g4492
I42
g4493
Vinsert
p33317
I42
VSimpleName: Override
p33318
tp33319
I2
s(g6416
I42
g6417
Vinsert
p33320
I42
VSimpleName: REPORTER
p33321
tp33322
I2
s(g12846
I42
g12847
Vinsert
p33323
I34
VNumberLiteral: 0
p33324
tp33325
I1
s(g4017
I42
g4018
Vinsert
p33326
I42
VSimpleName: mock
p33327
tp33328
I7
s(g4106
I42
g4107
Vinsert
p33329
I42
VSimpleName: desc
p33330
tp33331
I1
s(g7619
I42
g7620
Vinsert
p33332
I74
VParameterizedType: Argument<Person>
p33333
tp33334
I1
s(g871
I42
g872
Vinsert
p33335
I8
VBlock
p33336
tp33337
I2
s(g1770
I42
g1771
Vinsert
p33338
I42
VSimpleName: member
p33339
tp33340
I1
s(g4148
I42
g4149
Vinsert
p33341
I42
VSimpleName: anyString
p33342
tp33343
I1
s(g4981
I42
g4982
Vinsert
p33344
I83
VModifier: final
p33345
tp33346
I1
s(g4133
I42
g4134
Vinsert
p33347
I59
VVariableDeclarationFragment
p33348
tp33349
I2
s(g12994
I42
g12995
Vinsert
p33350
I8
VBlock
p33351
tp33352
I50
s(g14303
I42
g14304
Vinsert
p33353
I14
VClassInstanceCreation
p33354
tp33355
I1
s(g4555
I42
g4556
Vinsert
p33356
I43
VSimpleType: HasPrimitiveMethods
p33357
tp33358
I2
s(g2123
I42
g2124
Vinsert
p33359
I42
VSimpleName: childMockField
p33360
tp33361
I2
s(g8593
I42
g8594
Vinsert
p33362
I42
VSimpleName: mocks
p33363
tp33364
I1
s(g19085
I42
g19086
Vinsert
p33365
I42
VSimpleName: newMockHandler
p33366
tp33367
I1
s(g1184
I42
g1185
Vinsert
p33368
I32
VMethodInvocation
p33369
tp33370
I1
s(g6598
I42
g6599
Vinsert
p33371
I8
VBlock
p33372
tp33373
I2
s(g6111
I42
g6112
Vinsert
p33374
I42
VSimpleName: parseType
p33375
tp33376
I1
s(g9473
I42
g9474
Vinsert
p33377
I32
VMethodInvocation
p33378
tp33379
I1
s(g1259
I42
g1260
Vinsert
p33380
I43
VSimpleType: Equals
p33381
tp33382
I1
s(g9473
I42
g9474
Vinsert
p33383
I14
VClassInstanceCreation
p33384
tp33385
I1
s(g2147
I42
g2148
Vinsert
p33386
I42
VSimpleName: Throwable
p33387
tp33388
I2
s(g2316
I42
g2317
Vinsert
p33389
I42
VSimpleName: toReturn
p33390
tp33391
I1
s(g1563
I42
g1564
Vinsert
p33392
I42
VSimpleName: invocationWithMatchers
p33393
tp33394
I1
s(g3953
I42
g3954
Vinsert
p33395
I42
VSimpleName: Throwable
p33396
tp33397
I3
s(g2973
I42
g2974
Vinsert
p33398
I42
VSimpleName: Class
p33399
tp33400
I1
s(g12245
I42
g12246
Vinsert
p33401
I65
VTagElement
p33402
tp33403
I1
s(g5549
I42
g5550
Vinsert
p33404
I42
VSimpleName: mock
p33405
tp33406
I1
s(g5810
I42
g5811
Vinsert
p33407
I83
VModifier: public
p33408
tp33409
I1
s(g234
I42
g235
Vinsert
p33410
I32
VMethodInvocation
p33411
tp33412
I1
s(g390
I42
g391
Vinsert
p33413
I45
VStringLiteral: "double"
p33414
tp33415
I1
s(g9339
I42
g9340
Vinsert
p33416
I42
VSimpleName: anyInt
p33417
tp33418
I1
s(g9576
I42
g9577
Vinsert
p33419
I42
VSimpleName: VerificationWithTimeout
p33420
tp33421
I1
s(g4871
I42
g4872
Vinsert
p33422
I83
VModifier: public
p33423
tp33424
I1
s(g30167
I42
g30168
Vinsert
p33425
I42
VSimpleName: ListSet
p33426
tp33427
I1
s(g6854
I42
g6855
Vinsert
p33428
I59
VVariableDeclarationFragment
p33429
tp33430
I2
s(g2934
I42
g2935
Vinsert
p33431
I31
VMethodDeclaration
p33432
tp33433
I4
s(g1696
I42
g1697
Vinsert
p33434
I11
VCastExpression
p33435
tp33436
I6
s(g6116
I42
g6117
Vinsert
p33437
I42
VSimpleName: Commit
p33438
tp33439
I1
s(g5237
I42
g5238
Vinsert
p33440
I21
VExpressionStatement
p33441
tp33442
I1
s(g7356
I42
g7357
Vinsert
p33443
I39
VPrimitiveType: void
p33444
tp33445
I3
s(g9079
I42
g9080
Vinsert
p33446
I42
VSimpleName: PrintSettings
p33447
tp33448
I2
s(g2354
I42
g2355
Vinsert
p33449
I42
VSimpleName: matcher
p33450
tp33451
I2
s(g1087
I42
g1088
Vinsert
p33452
I34
VNumberLiteral: 1
p33453
tp33454
I2
s(g3031
I42
g3032
Vinsert
p33455
I42
VSimpleName: strictness
p33456
tp33457
I1
s(g28742
I42
g28743
Vinsert
p33458
I45
VStringLiteral: "Pass mocks that should be verified."
p33459
tp33460
I2
s(g3766
I42
g3767
Vinsert
p33461
I45
VStringLiteral: "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker$ClassInstantiator$UsingObjenesis"
p33462
tp33463
I1
s(g727
I42
g728
Vinsert
p33464
I32
VMethodInvocation
p33465
tp33466
I1
s(g10802
I42
g10803
Vinsert
p33467
I42
VSimpleName: InvocationBuilder
p33468
tp33469
I1
s(g7395
I42
g7396
Vinsert
p33470
I85
VDimension
p33471
tp33472
I2
s(g8126
I42
g8127
Vinsert
p33473
I42
VSimpleName: Throwable
p33474
tp33475
I1
s(Vinsert
p33476
I42
VSimpleName: simpleMethod
p33477
Vinsert
p33478
I42
VSimpleName: shouldPointOutUnfinishedStubbing
p33479
tp33480
I2
s(g9382
I42
g9383
Vinsert
p33481
I45
VStringLiteral: "Field: '"
p33482
tp33483
I1
s(g23336
I42
g23337
Vinsert
p33484
I46
VSuperConstructorInvocation
p33485
tp33486
I2
s(g2390
I42
g2391
Vinsert
p33487
I8
VBlock
p33488
tp33489
I2
s(g1154
I42
g1155
Vinsert
p33490
I43
VSimpleType: Object
p33491
tp33492
I1
s(g5829
I42
g5830
Vinsert
p33493
I42
VSimpleName: inOrderContext
p33494
tp33495
I1
s(g6363
I42
g6364
Vinsert
p33496
I83
VModifier: public
p33497
tp33498
I3
s(g6725
I42
g6726
Vinsert
p33499
I83
VModifier: public
p33500
tp33501
I1
s(g2642
I42
g2643
Vinsert
p33502
I42
VSimpleName: HashCodeAndEqualsSafeSet
p33503
tp33504
I3
s(g1342
I42
g1343
Vinsert
p33505
I42
VSimpleName: Test
p33506
tp33507
I1
s(g4709
I42
g4710
Vinsert
p33508
I44
VSingleVariableDeclaration
p33509
tp33510
I4
s(g2611
I42
g2612
Vinsert
p33511
I39
VPrimitiveType: void
p33512
tp33513
I1
s(g15654
I42
g15655
Vinsert
p33514
I43
VSimpleType: Date
p33515
tp33516
I2
s(g6752
I42
g6753
Vinsert
p33517
I21
VExpressionStatement
p33518
tp33519
I2
s(g16524
I42
g16525
Vinsert
p33520
I42
VSimpleName: mockedType
p33521
tp33522
I2
s(g9929
I42
g9930
Vinsert
p33523
I42
VSimpleName: translator
p33524
tp33525
I1
s(g6013
I42
g6014
Vinsert
p33526
I42
VSimpleName: Test
p33527
tp33528
I3
s(g8778
I42
g8779
Vinsert
p33529
I43
VSimpleType: FinalClass
p33530
tp33531
I1
s(g6587
I42
g6588
Vinsert
p33532
I43
VSimpleType: Invocation
p33533
tp33534
I4
s(g16004
I42
g16005
Vinsert
p33535
I45
VStringLiteral: ""
p33536
tp33537
I1
s(g498
I42
g499
Vinsert
p33538
I32
VMethodInvocation
p33539
tp33540
I1
s(g11263
I42
g11264
Vinsert
p33541
I42
VSimpleName: MockUtil
p33542
tp33543
I1
s(g2281
I42
g2282
Vinsert
p33544
I43
VSimpleType: Object
p33545
tp33546
I1
s(g7243
I42
g7244
Vinsert
p33547
I43
VSimpleType: Object
p33548
tp33549
I1
s(g6228
I42
g6229
Vinsert
p33550
I42
VSimpleName: stubbing
p33551
tp33552
I20
s(g8509
I42
g8510
Vinsert
p33553
I42
VSimpleName: getClass
p33554
tp33555
I1
s(g9734
I42
g9735
Vinsert
p33556
I45
VStringLiteral: "The Java Standard Serialization reported an '"
p33557
tp33558
I1
s(g7221
I42
g7222
Vinsert
p33559
I8
VBlock
p33560
tp33561
I2
s(g7337
I42
g7338
Vinsert
p33562
I44
VSingleVariableDeclaration
p33563
tp33564
I3
s(g2222
I42
g2223
Vinsert
p33565
I32
VMethodInvocation
p33566
tp33567
I5
s(g3969
I42
g3970
Vinsert
p33568
I14
VClassInstanceCreation
p33569
tp33570
I5
s(g17492
I42
g17493
Vinsert
p33571
I45
VStringLiteral: "String: "
p33572
tp33573
I1
s(g16974
I42
g16975
Vinsert
p33574
I42
VSimpleName: Fake
p33575
tp33576
I4
s(g4861
I42
g4862
Vinsert
p33577
I8
VBlock
p33578
tp33579
I1
s(g1642
I42
g1643
Vinsert
p33580
I42
VSimpleName: Invocation
p33581
tp33582
I2
s(g18497
I42
g18498
Vinsert
p33583
I45
VStringLiteral: "return"
p33584
tp33585
I1
s(g8288
I42
g8289
Vinsert
p33586
I42
VSimpleName: listener
p33587
tp33588
I2
s(g15311
I42
g15312
Vinsert
p33589
I45
VStringLiteral: "mock.intArgumentMethod(1111);"
p33590
tp33591
I1
s(g681
I42
g682
Vinsert
p33592
I33
VNullLiteral
p33593
tp33594
I1
s(g1838
I42
g1839
Vinsert
p33595
I60
VVariableDeclarationStatement
p33596
tp33597
I1
s(g18840
I42
g18841
Vinsert
p33598
I43
VSimpleType: IMockitoConfiguration
p33599
tp33600
I1
s(g473
I42
g474
Vinsert
p33601
I42
VSimpleName: listener
p33602
tp33603
I4
s(g28046
I42
g28047
Vinsert
p33604
I40
VQualifiedName: org.mockito.exceptions.misusing.MissingMethodInvocationException
p33605
tp33606
I1
s(g395
I42
g396
Vinsert
p33607
I42
VSimpleName: pollingPeriodMillis
p33608
tp33609
I1
s(g13936
I42
g13937
Vinsert
p33610
I59
VVariableDeclarationFragment
p33611
tp33612
I1
s(g24669
I42
g24670
Vinsert
p33613
I42
VSimpleName: expectedMessage
p33614
tp33615
I1
s(g4981
I42
g4982
Vinsert
p33616
I23
VFieldDeclaration
p33617
tp33618
I1
s(g16974
I42
g16975
Vinsert
p33619
I43
VSimpleType: Fake
p33620
tp33621
I3
s(g6919
I42
g6920
Vinsert
p33622
I8
VBlock
p33623
tp33624
I6
s(g1019
I42
g1020
Vinsert
p33625
I42
VSimpleName: fieldOwner
p33626
tp33627
I1
s(g410
I42
g411
Vinsert
p33628
I43
VSimpleType: InvocationListener
p33629
tp33630
I1
s(g5237
I42
g5238
Vinsert
p33631
I42
VSimpleName: StubbingListener
p33632
tp33633
I1
s(g9865
I42
g9866
Vinsert
p33634
I42
VSimpleName: list
p33635
tp33636
I1
s(g4059
I42
g4060
Vinsert
p33637
I27
VInfixExpression: +
p33638
tp33639
I2
s(g6143
I42
g6144
Vinsert
p33640
I42
VSimpleName: args
p33641
tp33642
I1
s(g20085
I42
g20086
Vinsert
p33643
I8
VBlock
p33644
tp33645
I2
s(g5858
I42
g5859
Vinsert
p33646
I44
VSingleVariableDeclaration
p33647
tp33648
I2
s(g8095
I42
g8096
Vinsert
p33649
I83
VModifier: private
p33650
tp33651
I1
s(g1416
I42
g1417
Vinsert
p33652
I42
VSimpleName: base
p33653
tp33654
I1
s(g1292
I42
g1293
Vinsert
p33655
I42
VSimpleName: LastArguments
p33656
tp33657
I2
s(g4638
I42
g4639
Vinsert
p33658
I42
VSimpleName: longStr
p33659
tp33660
I1
s(g6035
I42
g6036
Vinsert
p33661
I45
VStringLiteral: "c1"
p33662
tp33663
I1
s(g9884
I42
g9885
Vinsert
p33664
I42
VSimpleName: addThrowableForVoidMethod
p33665
tp33666
I1
s(g6411
I42
g6412
Vinsert
p33667
I42
VSimpleName: DEFAULT_PLUGINS
p33668
tp33669
I1
s(g4595
I42
g4596
Vinsert
p33670
I83
VModifier: public
p33671
tp33672
I1
s(g1825
I42
g1826
Vinsert
p33673
I36
VParenthesizedExpression
p33674
tp33675
I1
s(g458
I42
g459
Vinsert
p33676
I57
VTypeLiteral
p33677
tp33678
I1
s(g7854
I42
g7855
Vinsert
p33679
I42
VSimpleName: finder
p33680
tp33681
I1
s(g7638
I42
g7639
Vinsert
p33682
I42
VSimpleName: setVerificationStrategy
p33683
tp33684
I1
s(g7704
I42
g7705
Vinsert
p33685
I43
VSimpleType: RuntimeException
p33686
tp33687
I1
s(g3126
I42
g3127
Vinsert
p33688
I31
VMethodDeclaration
p33689
tp33690
I2
s(g3369
I42
g3370
Vinsert
p33691
I43
VSimpleType: Object
p33692
tp33693
I1
s(g1064
I42
g1065
Vinsert
p33694
I42
VSimpleName: cleansStackTrace
p33695
tp33696
I1
s(g9716
I42
g9717
Vinsert
p33697
I42
VSimpleName: invoke_interface
p33698
tp33699
I1
s(g12933
I42
g12934
Vinsert
p33700
I45
VStringLiteral: "xx"
p33701
tp33702
I1
s(g4425
I42
g4426
Vinsert
p33703
I42
VSimpleName: ArgumentCaptor
p33704
tp33705
I1
s(g385
I42
g386
Vinsert
p33706
I42
VSimpleName: ticketId
p33707
tp33708
I1
s(g7091
I42
g7092
Vinsert
p33709
I42
VSimpleName: join
p33710
tp33711
I1
s(g5352
I42
g5353
Vinsert
p33712
I39
VPrimitiveType: void
p33713
tp33714
I1
s(Vinsert
p33715
I42
VSimpleName: verify
p33716
Vinsert
p33717
I42
VSimpleName: fail
p33718
tp33719
I1
s(g5360
I42
g5361
Vinsert
p33720
I42
VSimpleName: isEmpty
p33721
tp33722
I1
s(g6924
I42
g6925
Vinsert
p33723
I7
VAssignment: =
p33724
tp33725
I1
s(g8682
I42
g8683
Vinsert
p33726
I42
VSimpleName: assertMatchersFoundFor
p33727
tp33728
I2
s(g3616
I42
g3617
Vinsert
p33729
I39
VPrimitiveType: void
p33730
tp33731
I2
s(g23442
I42
g23443
Vinsert
p33732
I2
VArrayAccess
p33733
tp33734
I1
s(g4111
I42
g4112
Vinsert
p33735
I66
VTextElement:  1.9.5
p33736
tp33737
I1
s(g1543
I42
g1544
Vinsert
p33738
I42
VSimpleName: mockitoStubber
p33739
tp33740
I1
s(g1949
I42
g1950
Vinsert
p33741
I42
VSimpleName: Exception
p33742
tp33743
I2
s(g17874
I42
g17875
Vinsert
p33744
I42
VSimpleName: expectedMock
p33745
tp33746
I1
s(g3234
I42
g3235
Vinsert
p33747
I42
VSimpleName: Exception
p33748
tp33749
I1
s(g8561
I42
g8562
Vinsert
p33750
I45
VStringLiteral: "null"
p33751
tp33752
I1
s(g4675
I42
g4676
Vinsert
p33753
I43
VSimpleType: Invocation
p33754
tp33755
I2
s(g12226
I42
g12227
Vinsert
p33756
I43
VSimpleType: To
p33757
tp33758
I1
s(g2552
I42
g2553
Vinsert
p33759
I42
VSimpleName: assertSame
p33760
tp33761
I1
s(g2490
I42
g2491
Vinsert
p33762
I34
VNumberLiteral: 0
p33763
tp33764
I1
s(g7337
I42
g7338
Vinsert
p33765
I25
VIfStatement
p33766
tp33767
I2
s(g3359
I42
g3360
Vinsert
p33768
I59
VVariableDeclarationFragment
p33769
tp33770
I5
s(g1599
I42
g1600
Vinsert
p33771
I42
VSimpleName: Object
p33772
tp33773
I1
s(g7883
I42
g7884
Vinsert
p33774
I42
VSimpleName: Exception
p33775
tp33776
I1
s(g8663
I42
g8664
Vinsert
p33777
I7
VAssignment: =
p33778
tp33779
I1
s(g1739
I42
g1740
Vinsert
p33780
I14
VClassInstanceCreation
p33781
tp33782
I1
s(g2261
I42
g2262
Vinsert
p33783
I14
VClassInstanceCreation
p33784
tp33785
I3
s(g2590
I42
g2591
Vinsert
p33786
I11
VCastExpression
p33787
tp33788
I4
s(g1044
I42
g1045
Vinsert
p33789
I65
VTagElement: @link
p33790
tp33791
I1
s(g6043
I42
g6044
Vinsert
p33792
I21
VExpressionStatement
p33793
tp33794
I1
s(g11214
I42
g11215
Vinsert
p33795
I42
VSimpleName: relativePath
p33796
tp33797
I1
s(g32345
I42
g32346
Vinsert
p33798
I42
VSimpleName: MulticastDelegate
p33799
tp33800
I2
s(g1929
I42
g1930
Vinsert
p33801
I45
VStringLiteral: "UTF-8"
p33802
tp33803
I1
s(g18377
I42
g18378
Vinsert
p33804
I42
VSimpleName: List
p33805
tp33806
I1
s(g1660
I42
g1661
Vinsert
p33807
I27
VInfixExpression: !=
p33808
tp33809
I3
s(g5282
I42
g5283
Vinsert
p33810
I42
VSimpleName: Invocation
p33811
tp33812
I1
s(g4006
I42
g4007
Vinsert
p33813
I74
VParameterizedType: List<Field>
p33814
tp33815
I1
s(g10520
I42
g10521
Vinsert
p33816
I6
VAssertStatement
p33817
tp33818
I1
s(g3267
I42
g3268
Vinsert
p33819
I27
VInfixExpression: +
p33820
tp33821
I1
s(Vinsert
p33822
I42
VSimpleName: add
p33823
Vinsert
p33824
I42
VSimpleName: values
p33825
tp33826
I1
s(g17987
I42
g17988
Vinsert
p33827
I42
VSimpleName: Only
p33828
tp33829
I1
s(g3431
I42
g3432
Vinsert
p33830
I66
VTextElement: Reads string from the stream and closes it
p33831
tp33832
I1
s(g9747
I42
g9748
Vinsert
p33833
I43
VSimpleType: String
p33834
tp33835
I1
s(g9207
I42
g9208
Vinsert
p33836
I59
VVariableDeclarationFragment
p33837
tp33838
I1
s(g3880
I42
g3881
Vinsert
p33839
I42
VSimpleName: Method
p33840
tp33841
I1
s(g5562
I42
g5563
Vinsert
p33842
I59
VVariableDeclarationFragment
p33843
tp33844
I1
s(g32938
I42
g32939
Vinsert
p33845
I42
VSimpleName: arrays
p33846
tp33847
I1
s(g287
I42
g288
Vinsert
p33848
I42
VSimpleName: Test
p33849
tp33850
I1
s(g4534
I42
g4535
Vinsert
p33851
I42
VSimpleName: unfilteredStackTrace
p33852
tp33853
I1
s(g5752
I42
g5753
Vinsert
p33854
I42
VSimpleName: shouldKnowIfMatchesActualInvocationCountWhenAtLeastOnceMode
p33855
tp33856
I1
s(g4991
I42
g4992
Vinsert
p33857
I39
VPrimitiveType: void
p33858
tp33859
I1
s(g4133
I42
g4134
Vinsert
p33860
I32
VMethodInvocation
p33861
tp33862
I2
s(g6124
I42
g6125
Vinsert
p33863
I34
VNumberLiteral: 123
p33864
tp33865
I1
s(g5491
I42
g5492
Vinsert
p33866
I8
VBlock
p33867
tp33868
I3
s(g1775
I42
g1776
Vinsert
p33869
I42
VSimpleName: Class
p33870
tp33871
I1
s(g518
I42
g519
Vinsert
p33872
I27
VInfixExpression: ==
p33873
tp33874
I5
s(g1919
I42
g1920
Vinsert
p33875
I42
VSimpleName: invocation
p33876
tp33877
I1
s(g5191
I42
g5192
Vinsert
p33878
I42
VSimpleName: BulkBean
p33879
tp33880
I1
s(g12354
I42
g12355
Vinsert
p33881
I39
VPrimitiveType: void
p33882
tp33883
I1
s(g11353
I42
g11354
Vinsert
p33884
I32
VMethodInvocation
p33885
tp33886
I7
s(g2031
I42
g2032
Vinsert
p33887
I40
VQualifiedName: Opcodes.ACC_SYNTHETIC
p33888
tp33889
I1
s(g17860
I42
g17861
Vinsert
p33890
I42
VSimpleName: overridden
p33891
tp33892
I1
s(g1144
I42
g1145
Vinsert
p33893
I74
VParameterizedType: Constructor<T>
p33894
tp33895
I1
s(g4038
I42
g4039
Vinsert
p33896
I42
VSimpleName: isEquals
p33897
tp33898
I1
s(g11791
I42
g11792
Vinsert
p33899
I42
VSimpleName: Type
p33900
tp33901
I2
s(g11699
I42
g11700
Vinsert
p33902
I42
VSimpleName: Invocation
p33903
tp33904
I2
s(g139
I42
g140
Vinsert
p33905
I74
VParameterizedType: LinkedList<MockitoMatcher>
p33906
tp33907
I1
s(g1403
I42
g1404
Vinsert
p33908
I42
VSimpleName: mock
p33909
tp33910
I1
s(g8553
I42
g8554
Vinsert
p33911
I42
VSimpleName: String
p33912
tp33913
I1
s(g149
I42
g150
Vinsert
p33914
I43
VSimpleType: Integer
p33915
tp33916
I1
s(g4887
I42
g4888
Vinsert
p33917
I42
VSimpleName: ExceptionThree
p33918
tp33919
I1
s(g21782
I42
g21783
Vinsert
p33920
I43
VSimpleType: Integer
p33921
tp33922
I1
s(g9434
I42
g9435
Vinsert
p33923
I45
VStringLiteral: "protectedField"
p33924
tp33925
I1
s(g14792
I42
g14793
Vinsert
p33926
I43
VSimpleType: Invocation
p33927
tp33928
I2
s(g7329
I42
g7330
Vinsert
p33929
I42
VSimpleName: mocks
p33930
tp33931
I1
s(g15804
I42
g15805
Vinsert
p33932
I42
VSimpleName: shouldValidateNullThrowable
p33933
tp33934
I1
s(g8062
I42
g8063
Vinsert
p33935
I40
VQualifiedName: Type.INT_TYPE
p33936
tp33937
I1
s(g778
I42
g779
Vinsert
p33938
I42
VSimpleName: FieldVisitor
p33939
tp33940
I1
s(g18377
I42
g18378
Vinsert
p33941
I60
VVariableDeclarationStatement
p33942
tp33943
I1
s(g1482
I42
g1483
Vinsert
p33944
I43
VSimpleType: InvocationMatcher
p33945
tp33946
I1
s(g2222
I42
g2223
Vinsert
p33947
I41
VReturnStatement
p33948
tp33949
I1
s(g4295
I42
g4296
Vinsert
p33950
I43
VSimpleType: Throwable
p33951
tp33952
I1
s(g8604
I42
g8605
Vinsert
p33953
I42
VSimpleName: emptyValueFor
p33954
tp33955
I2
s(g3896
I42
g3897
Vinsert
p33956
I21
VExpressionStatement
p33957
tp33958
I1
s(g10802
I42
g10803
Vinsert
p33959
I74
VParameterizedType: List<InvocationMatcher>
p33960
tp33961
I1
s(g3421
I42
g3422
Vinsert
p33962
I66
VTextElement:  <code>true</code> if primitive or wrapper, <code>false</code> otherwise.
p33963
tp33964
I1
s(g2796
I42
g2797
Vinsert
p33965
I42
VSimpleName: verify
p33966
tp33967
I1
s(g563
I42
g564
Vinsert
p33968
I42
VSimpleName: value
p33969
tp33970
I5
s(g15654
I42
g15655
Vinsert
p33971
I42
VSimpleName: Set
p33972
tp33973
I1
s(g9026
I42
g9027
Vinsert
p33974
I42
VSimpleName: mockingProgress
p33975
tp33976
I3
s(g14721
I42
g14722
Vinsert
p33977
I57
VTypeLiteral
p33978
tp33979
I1
s(g4072
I42
g4073
Vinsert
p33980
I31
VMethodDeclaration
p33981
tp33982
I1
s(g8757
I42
g8758
Vinsert
p33983
I42
VSimpleName: exception
p33984
tp33985
I2
s(g1591
I42
g1592
Vinsert
p33986
I43
VSimpleType: InvocationContainerImpl
p33987
tp33988
I1
s(g8729
I42
g8730
Vinsert
p33989
I59
VVariableDeclarationFragment
p33990
tp33991
I1
s(g8862
I42
g8863
Vinsert
p33992
I9
VBooleanLiteral: true
p33993
tp33994
I1
s(g4300
I42
g4301
Vinsert
p33995
I45
VStringLiteral: "remove"
p33996
tp33997
I1
s(g8275
I42
g8276
Vinsert
p33998
I43
VSimpleType: ListOfInteger
p33999
tp34000
I1
s(g796
I42
g797
Vinsert
p34001
I43
VSimpleType: Object
p34002
tp34003
I2
s(g5522
I42
g5523
Vinsert
p34004
I43
VSimpleType: ConstructorDelegate
p34005
tp34006
I1
s(g4022
I42
g4023
Vinsert
p34007
I23
VFieldDeclaration
p34008
tp34009
I1
s(g405
I42
g406
Vinsert
p34010
I31
VMethodDeclaration
p34011
tp34012
I1
s(g2939
I42
g2940
Vinsert
p34013
I42
VSimpleName: v
p34014
tp34015
I1
s(g7263
I42
g7264
Vinsert
p34016
I21
VExpressionStatement
p34017
tp34018
I1
s(g23051
I42
g23052
Vinsert
p34019
I40
VQualifiedName: SafeJUnitRule.ExpectedThrowableNotReported
p34020
tp34021
I1
s(g3565
I42
g3566
Vinsert
p34022
I32
VMethodInvocation
p34023
tp34024
I1
s(g4871
I42
g4872
Vinsert
p34025
I8
VBlock
p34026
tp34027
I2
s(g420
I42
g421
Vinsert
p34028
I43
VSimpleType: InvocationsCalculator
p34029
tp34030
I1
s(g15316
I42
g15317
Vinsert
p34031
I52
VThisExpression
p34032
tp34033
I1
s(g3369
I42
g3370
Vinsert
p34034
I8
VBlock
p34035
tp34036
I3
s(g8237
I42
g8238
Vinsert
p34037
I45
VStringLiteral: "  class to mock : '"
p34038
tp34039
I1
s(g18966
I42
g18967
Vinsert
p34040
I74
VParameterizedType: Class<?>
p34041
tp34042
I3
s(g6606
I42
g6607
Vinsert
p34043
I43
VSimpleType: Object
p34044
tp34045
I1
s(Vinsert
p34046
I42
VSimpleName: simpleMethod
p34047
Vinsert
p34048
I42
VSimpleName: shouldAcceptHamcrestMatcher
p34049
tp34050
I1
s(g29408
I42
g29409
Vinsert
p34051
I42
VSimpleName: registered
p34052
tp34053
I2
s(g10680
I42
g10681
Vinsert
p34054
I43
VSimpleType: ClassNotFoundException
p34055
tp34056
I1
s(g3165
I42
g3166
Vinsert
p34057
I32
VMethodInvocation
p34058
tp34059
I18
s(g10048
I42
g10049
Vinsert
p34060
I43
VSimpleType: Exception
p34061
tp34062
I1
s(g15804
I42
g15805
Vinsert
p34063
I78
VMarkerAnnotation
p34064
tp34065
I1
s(g1134
I42
g1135
Vinsert
p34066
I42
VSimpleName: mockMethod
p34067
tp34068
I1
s(g8493
I42
g8494
Vinsert
p34069
I83
VModifier: private
p34070
tp34071
I1
s(g11552
I42
g11553
Vinsert
p34072
I40
VQualifiedName: stack.length
p34073
tp34074
I1
s(g4547
I42
g4548
Vinsert
p34075
I42
VSimpleName: stub
p34076
tp34077
I1
s(g8095
I42
g8096
Vinsert
p34078
I42
VSimpleName: details
p34079
tp34080
I3
s(g5431
I42
g5432
Vinsert
p34081
I16
VConditionalExpression
p34082
tp34083
I1
s(g7704
I42
g7705
Vinsert
p34084
I54
VTryStatement
p34085
tp34086
I3
s(g11956
I42
g11957
Vinsert
p34087
I42
VSimpleName: foo
p34088
tp34089
I1
s(g5887
I42
g5888
Vinsert
p34090
I42
VSimpleName: getTypeToMock
p34091
tp34092
I1
s(g24616
I42
g24617
Vinsert
p34093
I42
VSimpleName: assertEquals
p34094
tp34095
I3
s(g5530
I42
g5531
Vinsert
p34096
I42
VSimpleName: Foo
p34097
tp34098
I2
s(g2705
I42
g2706
Vinsert
p34099
I42
VSimpleName: SuperTypesLastSorter
p34100
tp34101
I2
s(g2959
I42
g2960
Vinsert
p34102
I32
VMethodInvocation
p34103
tp34104
I13
s(g13114
I42
g13115
Vinsert
p34105
I42
VSimpleName: AllInvocationsFinder
p34106
tp34107
I2
s(g7704
I42
g7705
Vinsert
p34108
I42
VSimpleName: RuntimeException
p34109
tp34110
I1
s(g18331
I42
g18332
Vinsert
p34111
I45
VStringLiteral: "org.mockitoutil.IsolatedClassLoaderBuilderTest$ClassUsingInterface1"
p34112
tp34113
I1
s(g6566
I42
g6567
Vinsert
p34114
I83
VModifier: public
p34115
tp34116
I1
s(g8160
I42
g8161
Vinsert
p34117
I43
VSimpleType: ToBeDeepStubbed
p34118
tp34119
I1
s(g11580
I42
g11581
Vinsert
p34120
I42
VSimpleName: mocks
p34121
tp34122
I1
s(g1024
I42
g1025
Vinsert
p34123
I42
VSimpleName: isAnnotationPresent
p34124
tp34125
I1
s(g9821
I42
g9822
Vinsert
p34126
I83
VModifier: public
p34127
tp34128
I1
s(g10531
I42
g10532
Vinsert
p34129
I43
VSimpleType: ATest
p34130
tp34131
I1
s(g4125
I42
g4126
Vinsert
p34132
I42
VSimpleName: atLeastOnce
p34133
tp34134
I1
s(g5805
I42
g5806
Vinsert
p34135
I42
VSimpleName: sf
p34136
tp34137
I2
s(g2354
I42
g2355
Vinsert
p34138
I42
VSimpleName: HashSet
p34139
tp34140
I5
s(g3036
I42
g3037
Vinsert
p34141
I8
VBlock
p34142
tp34143
I1
s(g23037
I42
g23038
Vinsert
p34144
I43
VSimpleType: WEIRDO1
p34145
tp34146
I1
s(g10929
I42
g10930
Vinsert
p34147
I42
VSimpleName: context
p34148
tp34149
I2
s(g3807
I42
g3808
Vinsert
p34150
I43
VSimpleType: ObjenesisStd
p34151
tp34152
I2
s(g1934
I42
g1935
Vinsert
p34153
I41
VReturnStatement
p34154
tp34155
I1
s(g8528
I42
g8529
Vinsert
p34156
I42
VSimpleName: explosive
p34157
tp34158
I1
s(g7366
I42
g7367
Vinsert
p34159
I42
VSimpleName: wanted
p34160
tp34161
I1
s(g4709
I42
g4710
Vinsert
p34162
I43
VSimpleType: VerificationStartedListener
p34163
tp34164
I1
s(g2508
I42
g2509
Vinsert
p34165
I42
VSimpleName: ClassVisitor
p34166
tp34167
I1
s(g14303
I42
g14304
Vinsert
p34168
I42
VSimpleName: List
p34169
tp34170
I2
s(g14341
I42
g14342
Vinsert
p34171
I60
VVariableDeclarationStatement
p34172
tp34173
I1
s(g1214
I42
g1215
Vinsert
p34174
I45
VStringLiteral: "[Mockito] BUT called with different args at com.Foo:100\u005cn"
p34175
tp34176
I1
s(g272
I42
g273
Vinsert
p34177
I14
VClassInstanceCreation
p34178
tp34179
I1
s(g2886
I42
g2887
Vinsert
p34180
I43
VSimpleType: Returns
p34181
tp34182
I2
s(g21
I42
g22
Vinsert
p34183
I42
VSimpleName: message
p34184
tp34185
I1
s(g4704
I42
g4705
Vinsert
p34186
I45
VStringLiteral: "\u005cn"
p34187
tp34188
I7
s(g5829
I42
g5830
Vinsert
p34189
I31
VMethodDeclaration
p34190
tp34191
I2
s(g6582
I42
g6583
Vinsert
p34192
I21
VExpressionStatement
p34193
tp34194
I2
s(g327
I42
g328
Vinsert
p34195
I34
VNumberLiteral: 100
p34196
tp34197
I1
s(g7633
I42
g7634
Vinsert
p34198
I42
VSimpleName: assertTrue
p34199
tp34200
I1
s(g5456
I42
g5457
Vinsert
p34201
I43
VSimpleType: String
p34202
tp34203
I2
s(g5305
I42
g5306
Vinsert
p34204
I60
VVariableDeclarationStatement
p34205
tp34206
I1
s(g8218
I42
g8219
Vinsert
p34207
I43
VSimpleType: StringBuilder
p34208
tp34209
I4
s(g4362
I42
g4363
Vinsert
p34210
I21
VExpressionStatement
p34211
tp34212
I1
s(g6736
I42
g6737
Vinsert
p34213
I42
VSimpleName: wanted
p34214
tp34215
I1
s(g2276
I42
g2277
Vinsert
p34216
I74
VParameterizedType: MockHandler<Object>
p34217
tp34218
I1
s(g8052
I42
g8053
Vinsert
p34219
I42
VSimpleName: getPreviousVersion
p34220
tp34221
I1
s(g6195
I42
g6196
Vinsert
p34222
I34
VNumberLiteral: 1000000
p34223
tp34224
I1
s(g15804
I42
g15805
Vinsert
p34225
I21
VExpressionStatement
p34226
tp34227
I1
s(g3441
I42
g3442
Vinsert
p34228
I50
VSwitchStatement
p34229
tp34230
I1
s(g806
I42
g807
Vinsert
p34231
I42
VSimpleName: Method
p34232
tp34233
I1
s(g7704
I42
g7705
Vinsert
p34234
I53
VThrowStatement
p34235
tp34236
I1
s(g2677
I42
g2678
Vinsert
p34237
I42
VSimpleName: len
p34238
tp34239
I1
s(g2485
I42
g2486
Vinsert
p34240
I60
VVariableDeclarationStatement
p34241
tp34242
I1
s(g12769
I42
g12770
Vinsert
p34243
I27
VInfixExpression: +
p34244
tp34245
I14
s(g12799
I42
g12800
Vinsert
p34246
I32
VMethodInvocation
p34247
tp34248
I2
s(g5887
I42
g5888
Vinsert
p34249
I52
VThisExpression
p34250
tp34251
I2
s(g1924
I42
g1925
Vinsert
p34252
I78
VMarkerAnnotation
p34253
tp34254
I1
s(g2815
I42
g2816
Vinsert
p34255
I14
VClassInstanceCreation
p34256
tp34257
I1
s(g2672
I42
g2673
Vinsert
p34258
I42
VSimpleName: Test
p34259
tp34260
I1
s(g8894
I42
g8895
Vinsert
p34261
I43
VSimpleType: Extended
p34262
tp34263
I2
s(g961
I42
g962
Vinsert
p34264
I32
VMethodInvocation
p34265
tp34266
I5
s(g13897
I42
g13898
Vinsert
p34267
I42
VSimpleName: newMockSafeHashSet
p34268
tp34269
I1
s(g19530
I42
g19531
Vinsert
p34270
I42
VSimpleName: declaringClass
p34271
tp34272
I1
s(g3288
I42
g3289
Vinsert
p34273
I43
VSimpleType: InvocationBuilder
p34274
tp34275
I1
s(g10346
I42
g10347
Vinsert
p34276
I57
VTypeLiteral
p34277
tp34278
I1
s(g3621
I42
g3622
Vinsert
p34279
I21
VExpressionStatement
p34280
tp34281
I1
s(g7638
I42
g7639
Vinsert
p34282
I40
VQualifiedName: org.mockito.verification.VerificationStrategy
p34283
tp34284
I1
s(g2261
I42
g2262
Vinsert
p34285
I42
VSimpleName: verify
p34286
tp34287
I1
s(g1906
I42
g1907
Vinsert
p34288
I42
VSimpleName: invocationWithOneArg
p34289
tp34290
I2
s(g1154
I42
g1155
Vinsert
p34291
I44
VSingleVariableDeclaration
p34292
tp34293
I1
s(g5368
I42
g5369
Vinsert
p34294
I32
VMethodInvocation
p34295
tp34296
I3
s(g9473
I42
g9474
Vinsert
p34297
I43
VSimpleType: Class
p34298
tp34299
I1
s(g14366
I42
g14367
Vinsert
p34300
I43
VSimpleType: String
p34301
tp34302
I1
s(g4840
I42
g4841
Vinsert
p34303
I29
VJavadoc
p34304
tp34305
I1
s(g876
I42
g877
Vinsert
p34306
I8
VBlock
p34307
tp34308
I1
s(g2718
I42
g2719
Vinsert
p34309
I42
VSimpleName: expected
p34310
tp34311
I1
s(g24181
I42
g24182
Vinsert
p34312
I42
VSimpleName: assertTrue
p34313
tp34314
I2
s(Vinsert
p34315
I42
VSimpleName: returnNull
p34316
Vinsert
p34317
I42
VSimpleName: returnNull
p34318
tp34319
I5
s(g14972
I42
g14973
Vinsert
p34320
I31
VMethodDeclaration
p34321
tp34322
I4
s(g8978
I42
g8979
Vinsert
p34323
I42
VSimpleName: wanted
p34324
tp34325
I2
s(g3214
I42
g3215
Vinsert
p34326
I83
VModifier: final
p34327
tp34328
I1
s(g5512
I42
g5513
Vinsert
p34329
I14
VClassInstanceCreation
p34330
tp34331
I1
s(g1578
I42
g1579
Vinsert
p34332
I42
VSimpleName: invocations
p34333
tp34334
I1
s(g876
I42
g877
Vinsert
p34335
I21
VExpressionStatement
p34336
tp34337
I1
s(g7872
I42
g7873
Vinsert
p34338
I42
VSimpleName: stub
p34339
tp34340
I3
s(g8965
I42
g8966
Vinsert
p34341
I42
VSimpleName: Matcher
p34342
tp34343
I2
s(g1493
I42
g1494
Vinsert
p34344
I42
VSimpleName: ThrowsException
p34345
tp34346
I1
s(g3766
I42
g3767
Vinsert
p34347
I42
VSimpleName: forName
p34348
tp34349
I1
s(g9571
I42
g9572
Vinsert
p34350
I40
VQualifiedName: org.mockito.internal.progress
p34351
tp34352
I1
s(g4492
I42
g4493
Vinsert
p34353
I59
VVariableDeclarationFragment
p34354
tp34355
I1
s(g4730
I42
g4731
Vinsert
p34356
I43
VSimpleType: Set
p34357
tp34358
I1
s(g337
I42
g338
Vinsert
p34359
I42
VSimpleName: e
p34360
tp34361
I2
s(g7619
I42
g7620
Vinsert
p34362
I42
VSimpleName: Argument
p34363
tp34364
I1
s(g10053
I42
g10054
Vinsert
p34365
I42
VSimpleName: someMethod
p34366
tp34367
I1
s(g7076
I42
g7077
Vinsert
p34368
I42
VSimpleName: unstubbedIterator
p34369
tp34370
I2
s(g1327
I42
g1328
Vinsert
p34371
I22
VFieldAccess
p34372
tp34373
I1
s(g3743
I42
g3744
Vinsert
p34374
I42
VSimpleName: Invocation
p34375
tp34376
I1
s(g5869
I42
g5870
Vinsert
p34377
I45
VStringLiteral: "Classes must have the same type: class from: "
p34378
tp34379
I1
s(g4822
I42
g4823
Vinsert
p34380
I76
VWildcardType: ?
p34381
tp34382
I3
s(g4924
I42
g4925
Vinsert
p34383
I60
VVariableDeclarationStatement
p34384
tp34385
I16
s(g3498
I42
g3499
Vinsert
p34386
I42
VSimpleName: valueFor
p34387
tp34388
I4
s(g1815
I42
g1816
Vinsert
p34389
I8
VBlock
p34390
tp34391
I1
s(g7408
I42
g7409
Vinsert
p34392
I42
VSimpleName: UpperBoundedTypeWithInterfaces
p34393
tp34394
I1
s(g916
I42
g917
Vinsert
p34395
I42
VSimpleName: annotation
p34396
tp34397
I1
s(g9734
I42
g9735
Vinsert
p34398
I42
VSimpleName: getCanonicalName
p34399
tp34400
I1
s(g6195
I42
g6196
Vinsert
p34401
I39
VPrimitiveType: int
p34402
tp34403
I1
s(g765
I42
g766
Vinsert
p34404
I42
VSimpleName: Exception
p34405
tp34406
I1
s(g4466
I42
g4467
Vinsert
p34407
I42
VSimpleName: assertThat
p34408
tp34409
I1
s(g2271
I42
g2272
Vinsert
p34410
I83
VModifier: static
p34411
tp34412
I1
s(g543
I42
g544
Vinsert
p34413
I45
VStringLiteral: "  inner class: '"
p34414
tp34415
I1
s(g2601
I42
g2602
Vinsert
p34416
I42
VSimpleName: CreationSettings
p34417
tp34418
I2
s(g10053
I42
g10054
Vinsert
p34419
I14
VClassInstanceCreation
p34420
tp34421
I4
s(g12337
I42
g12338
Vinsert
p34422
I43
VSimpleType: LinkedList
p34423
tp34424
I1
s(g14336
I42
g14337
Vinsert
p34425
I42
VSimpleName: out
p34426
tp34427
I2
s(g936
I42
g937
Vinsert
p34428
I43
VSimpleType: MethodVisitor
p34429
tp34430
I1
s(g26664
I42
g26665
Vinsert
p34431
I42
VSimpleName: clazz
p34432
tp34433
I4
s(g74
I42
g75
Vinsert
p34434
I42
VSimpleName: url
p34435
tp34436
I1
s(g3580
I42
g3581
Vinsert
p34437
I83
VModifier: public
p34438
tp34439
I2
s(g1548
I42
g1549
Vinsert
p34440
I42
VSimpleName: isEqualTo
p34441
tp34442
I1
s(g3743
I42
g3744
Vinsert
p34443
I43
VSimpleType: VerificationModeImpl
p34444
tp34445
I1
s(g4585
I42
g4586
Vinsert
p34446
I21
VExpressionStatement
p34447
tp34448
I2
s(g10507
I42
g10508
Vinsert
p34449
I8
VBlock
p34450
tp34451
I1
s(g7313
I42
g7314
Vinsert
p34452
I42
VSimpleName: mockSettings
p34453
tp34454
I1
s(g3527
I42
g3528
Vinsert
p34455
I41
VReturnStatement
p34456
tp34457
I1
s(g5975
I42
g5976
Vinsert
p34458
I43
VSimpleType: Foo
p34459
tp34460
I1
s(g2152
I42
g2153
Vinsert
p34461
I21
VExpressionStatement
p34462
tp34463
I2
s(g12427
I42
g12428
Vinsert
p34464
I39
VPrimitiveType: boolean
p34465
tp34466
I1
s(g3068
I42
g3069
Vinsert
p34467
I42
VSimpleName: mod
p34468
tp34469
I1
s(g1287
I42
g1288
Vinsert
p34470
I36
VParenthesizedExpression
p34471
tp34472
I1
s(g8889
I42
g8890
Vinsert
p34473
I8
VBlock
p34474
tp34475
I2
s(g1024
I42
g1025
Vinsert
p34476
I57
VTypeLiteral
p34477
tp34478
I1
s(g10772
I42
g10773
Vinsert
p34479
I21
VExpressionStatement
p34480
tp34481
I1
s(g11112
I42
g11113
Vinsert
p34482
I26
VImportDeclaration
p34483
tp34484
I1
s(g30351
I42
g30352
Vinsert
p34485
I42
VSimpleName: shouldProvideMockyImplementationOfToString
p34486
tp34487
I1
s(g26561
I42
g26562
Vinsert
p34488
I42
VSimpleName: isEmpty
p34489
tp34490
I1
s(g41
I42
g42
Vinsert
p34491
I76
VWildcardType: ?
p34492
tp34493
I1
s(g7313
I42
g7314
Vinsert
p34494
I43
VSimpleType: MockSettings
p34495
tp34496
I1
s(g5760
I42
g5761
Vinsert
p34497
I44
VSingleVariableDeclaration
p34498
tp34499
I1
s(g297
I42
g298
Vinsert
p34500
I43
VSimpleType: SomeInterface
p34501
tp34502
I1
s(g20322
I42
g20323
Vinsert
p34503
I42
VSimpleName: invocation
p34504
tp34505
I1
s(g13461
I42
g13462
Vinsert
p34506
I43
VSimpleType: Stubber
p34507
tp34508
I1
s(g5105
I42
g5106
Vinsert
p34509
I42
VSimpleName: Mockito
p34510
tp34511
I1
s(g2152
I42
g2153
Vinsert
p34512
I83
VModifier: public
p34513
tp34514
I1
s(g3395
I42
g3396
Vinsert
p34515
I42
VSimpleName: type
p34516
tp34517
I4
s(g3758
I42
g3759
Vinsert
p34518
I43
VSimpleType: InvocationMatcher
p34519
tp34520
I1
s(g11370
I42
g11371
Vinsert
p34521
I42
VSimpleName: MoreEmptyReturnValues
p34522
tp34523
I1
s(g801
I42
g802
Vinsert
p34524
I42
VSimpleName: StringDescription
p34525
tp34526
I2
s(g12422
I42
g12423
Vinsert
p34527
I74
VParameterizedType: List<Invocation>
p34528
tp34529
I1
s(g1770
I42
g1771
Vinsert
p34530
I31
VMethodDeclaration
p34531
tp34532
I1
s(g7213
I42
g7214
Vinsert
p34533
I32
VMethodInvocation
p34534
tp34535
I5
s(g996
I42
g997
Vinsert
p34536
I14
VClassInstanceCreation
p34537
tp34538
I1
s(g12226
I42
g12227
Vinsert
p34539
I43
VSimpleType: From
p34540
tp34541
I1
s(g2326
I42
g2327
Vinsert
p34542
I32
VMethodInvocation
p34543
tp34544
I1
s(g12994
I42
g12995
Vinsert
p34545
I43
VSimpleType: VerificationData
p34546
tp34547
I2
s(g10899
I42
g10900
Vinsert
p34548
I42
VSimpleName: actualInvocationStackTrace
p34549
tp34550
I1
s(g11995
I42
g11996
Vinsert
p34551
I45
VStringLiteral: ""
p34552
tp34553
I1
s(g10520
I42
g10521
Vinsert
p34554
I27
VInfixExpression: !=
p34555
tp34556
I1
s(g6043
I42
g6044
Vinsert
p34557
I32
VMethodInvocation
p34558
tp34559
I1
s(g7022
I42
g7023
Vinsert
p34560
I54
VTryStatement
p34561
tp34562
I1
s(g3725
I42
g3726
Vinsert
p34563
I42
VSimpleName: nextStrategy
p34564
tp34565
I2
s(g8003
I42
g8004
Vinsert
p34566
I42
VSimpleName: IOException
p34567
tp34568
I1
s(g11423
I42
g11424
Vinsert
p34569
I25
VIfStatement
p34570
tp34571
I1
s(g14434
I42
g14435
Vinsert
p34572
I34
VNumberLiteral: 0
p34573
tp34574
I1
s(g9016
I42
g9017
Vinsert
p34575
I34
VNumberLiteral: 1
p34576
tp34577
I3
s(g11691
I42
g11692
Vinsert
p34578
I39
VPrimitiveType: void
p34579
tp34580
I2
s(g9465
I42
g9466
Vinsert
p34581
I42
VSimpleName: got
p34582
tp34583
I1
s(g3421
I42
g3422
Vinsert
p34584
I66
VTextElement:  The type to check
p34585
tp34586
I1
s(Vinsert
p34587
I42
VSimpleName: getName
p34588
Vinsert
p34589
I42
VSimpleName: member
p34590
tp34591
I1
s(g5491
I42
g5492
Vinsert
p34592
I54
VTryStatement
p34593
tp34594
I1
s(g23292
I42
g23293
Vinsert
p34595
I42
VSimpleName: assertEquals
p34596
tp34597
I2
s(g10572
I42
g10573
Vinsert
p34598
I66
VTextElement:  The mocks to clear the invocations for
p34599
tp34600
I1
s(g4518
I42
g4519
Vinsert
p34601
I42
VSimpleName: keySet
p34602
tp34603
I1
s(g7416
I42
g7417
Vinsert
p34604
I43
VSimpleType: Reporter
p34605
tp34606
I1
s(g8483
I42
g8484
Vinsert
p34607
I42
VSimpleName: RuntimeException
p34608
tp34609
I1
s(g5118
I42
g5119
Vinsert
p34610
I45
VStringLiteral: "prototyping"
p34611
tp34612
I1
s(g5926
I42
g5927
Vinsert
p34613
I43
VSimpleType: IMockitoConfiguration
p34614
tp34615
I1
s(g9234
I42
g9235
Vinsert
p34616
I59
VVariableDeclarationFragment
p34617
tp34618
I1
s(g184
I42
g185
Vinsert
p34619
I42
VSimpleName: VerificationMode
p34620
tp34621
I1
s(g26027
I42
g26028
Vinsert
p34622
I42
VSimpleName: Foo
p34623
tp34624
I1
s(g94
I42
g95
Vinsert
p34625
I42
VSimpleName: Exception
p34626
tp34627
I13
s(g13855
I42
g13856
Vinsert
p34628
I42
VSimpleName: VerificationStartedListener
p34629
tp34630
I1
s(g2424
I42
g2425
Vinsert
p34631
I40
VQualifiedName: finderStub.allMatchingUnverifiedChunksToReturn
p34632
tp34633
I1
s(g6890
I42
g6891
Vinsert
p34634
I42
VSimpleName: getStaticHook
p34635
tp34636
I1
s(g6877
I42
g6878
Vinsert
p34637
I42
VSimpleName: ListIterator
p34638
tp34639
I1
s(g2988
I42
g2989
Vinsert
p34640
I42
VSimpleName: clazz
p34641
tp34642
I14
s(g4688
I42
g4689
Vinsert
p34643
I42
VSimpleName: fieldWasInitializedUsingContructorArgs
p34644
tp34645
I2
s(g7961
I42
g7962
Vinsert
p34646
I43
VSimpleType: Exception
p34647
tp34648
I3
s(g11404
I42
g11405
Vinsert
p34649
I42
VSimpleName: shouldDescribeStringMatcher
p34650
tp34651
I1
s(g886
I42
g887
Vinsert
p34652
I43
VSimpleType: MyClass2
p34653
tp34654
I1
s(g3336
I42
g3337
Vinsert
p34655
I42
VSimpleName: newHandler
p34656
tp34657
I1
s(g29542
I42
g29543
Vinsert
p34658
I43
VSimpleType: ExpectedInvocation
p34659
tp34660
I1
s(g9105
I42
g9106
Vinsert
p34661
I21
VExpressionStatement
p34662
tp34663
I1
s(g1914
I42
g1915
Vinsert
p34664
I42
VSimpleName: build
p34665
tp34666
I2
s(g7076
I42
g7077
Vinsert
p34667
I42
VSimpleName: unstubbedInvocations
p34668
tp34669
I1
s(g765
I42
g766
Vinsert
p34670
I39
VPrimitiveType: void
p34671
tp34672
I1
s(g1914
I42
g1915
Vinsert
p34673
I45
VStringLiteral: "org.junit"
p34674
tp34675
I1
s(g4827
I42
g4828
Vinsert
p34676
I83
VModifier: final
p34677
tp34678
I2
s(g468
I42
g469
Vinsert
p34679
I43
VSimpleType: List
p34680
tp34681
I1
s(g3165
I42
g3166
Vinsert
p34682
I43
VSimpleType: MockCreationSettings
p34683
tp34684
I1
s(g5206
I42
g5207
Vinsert
p34685
I42
VSimpleName: begin_method
p34686
tp34687
I1
s(g6212
I42
g6213
Vinsert
p34688
I43
VSimpleType: List
p34689
tp34690
I2
s(g20357
I42
g20358
Vinsert
p34691
I42
VSimpleName: toBeThrown
p34692
tp34693
I1
s(g12665
I42
g12666
Vinsert
p34694
I65
VTagElement: @return
p34695
tp34696
I2
s(g911
I42
g912
Vinsert
p34697
I21
VExpressionStatement
p34698
tp34699
I3
s(g1307
I42
g1308
Vinsert
p34700
I83
VModifier: public
p34701
tp34702
I1
s(g25297
I42
g25298
Vinsert
p34703
I76
VWildcardType: ?
p34704
tp34705
I2
s(g6116
I42
g6117
Vinsert
p34706
I42
VSimpleName: tickets
p34707
tp34708
I1
s(g1322
I42
g1323
Vinsert
p34709
I40
VQualifiedName: org.mockito.internal.matchers.MatchersPrinter
p34710
tp34711
I1
s(g681
I42
g682
Vinsert
p34712
I27
VInfixExpression: ==
p34713
tp34714
I1
s(g6103
I42
g6104
Vinsert
p34715
I52
VThisExpression
p34716
tp34717
I1
s(g13345
I42
g13346
Vinsert
p34718
I31
VMethodDeclaration
p34719
tp34720
I1
s(g4420
I42
g4421
Vinsert
p34721
I42
VSimpleName: InvocationComparator
p34722
tp34723
I1
s(g7472
I42
g7473
Vinsert
p34724
I42
VSimpleName: validateExtraInterfaces
p34725
tp34726
I1
s(g438
I42
g439
Vinsert
p34727
I59
VVariableDeclarationFragment
p34728
tp34729
I3
s(g3390
I42
g3391
Vinsert
p34730
I42
VSimpleName: i
p34731
tp34732
I2
s(g4963
I42
g4964
Vinsert
p34733
I42
VSimpleName: computedException
p34734
tp34735
I1
s(g19530
I42
g19531
Vinsert
p34736
I83
VModifier: public
p34737
tp34738
I3
s(g1411
I42
g1412
Vinsert
p34739
I42
VSimpleName: List
p34740
tp34741
I6
s(g5201
I42
g5202
Vinsert
p34742
I21
VExpressionStatement
p34743
tp34744
I2
s(g8467
I42
g8468
Vinsert
p34745
I60
VVariableDeclarationStatement
p34746
tp34747
I1
s(g17232
I42
g17233
Vinsert
p34748
I42
VSimpleName: wantedCountIsZero
p34749
tp34750
I1
s(g9413
I42
g9414
Vinsert
p34751
I21
VExpressionStatement
p34752
tp34753
I1
s(g8798
I42
g8799
Vinsert
p34754
I31
VMethodDeclaration
p34755
tp34756
I2
s(Vinsert
p34757
I42
VSimpleName: simpleMethod
p34758
Vinsert
p34759
I42
VSimpleName: ret
p34760
tp34761
I1
s(g14280
I42
g14281
Vinsert
p34762
I42
VSimpleName: s
p34763
tp34764
I2
s(g6228
I42
g6229
Vinsert
p34765
I21
VExpressionStatement
p34766
tp34767
I10
s(g2954
I42
g2955
Vinsert
p34768
I21
VExpressionStatement
p34769
tp34770
I1
s(g4789
I42
g4790
Vinsert
p34771
I42
VSimpleName: misplacedIntArgumentMatcher
p34772
tp34773
I1
s(g4372
I42
g4373
Vinsert
p34774
I43
VSimpleType: Throwable
p34775
tp34776
I1
s(g14566
I42
g14567
Vinsert
p34777
I45
VStringLiteral: "Oh no!"
p34778
tp34779
I1
s(g13139
I42
g13140
Vinsert
p34780
I43
VSimpleType: Class
p34781
tp34782
I1
s(g3006
I42
g3007
Vinsert
p34783
I42
VSimpleName: String
p34784
tp34785
I1
s(g11645
I42
g11646
Vinsert
p34786
I42
VSimpleName: shouldReportMissingMethodInvocationWhenStubbing
p34787
tp34788
I1
s(g4861
I42
g4862
Vinsert
p34789
I60
VVariableDeclarationStatement
p34790
tp34791
I1
s(g1312
I42
g1313
Vinsert
p34792
I43
VSimpleType: InlineByteBuddyMockMaker
p34793
tp34794
I1
s(g5456
I42
g5457
Vinsert
p34795
I42
VSimpleName: String
p34796
tp34797
I2
s(g3735
I42
g3736
Vinsert
p34798
I32
VMethodInvocation
p34799
tp34800
I1
s(g6535
I42
g6536
Vinsert
p34801
I21
VExpressionStatement
p34802
tp34803
I1
s(g704
I42
g705
Vinsert
p34804
I43
VSimpleType: Class
p34805
tp34806
I1
s(g25340
I42
g25341
Vinsert
p34807
I42
VSimpleName: ValuedFields
p34808
tp34809
I2
s(g24453
I42
g24454
Vinsert
p34810
I42
VSimpleName: improvements
p34811
tp34812
I2
s(g10916
I42
g10917
Vinsert
p34813
I42
VSimpleName: Mockito
p34814
tp34815
I1
s(g119
I42
g120
Vinsert
p34816
I8
VBlock
p34817
tp34818
I1
s(g5858
I42
g5859
Vinsert
p34819
I43
VSimpleType: IInvokedMethod
p34820
tp34821
I1
s(g7321
I42
g7322
Vinsert
p34822
I8
VBlock
p34823
tp34824
I3
s(g13694
I42
g13695
Vinsert
p34825
I42
VSimpleName: Throwable
p34826
tp34827
I1
s(g234
I42
g235
Vinsert
p34828
I83
VModifier: public
p34829
tp34830
I1
s(g15913
I42
g15914
Vinsert
p34831
I70
VEnhancedForStatement
p34832
tp34833
I1
s(g6124
I42
g6125
Vinsert
p34834
I39
VPrimitiveType: void
p34835
tp34836
I2
s(g8226
I42
g8227
Vinsert
p34837
I32
VMethodInvocation
p34838
tp34839
I10
s(g3331
I42
g3332
Vinsert
p34840
I32
VMethodInvocation
p34841
tp34842
I1
s(g17534
I42
g17535
Vinsert
p34843
I42
VSimpleName: rule
p34844
tp34845
I1
s(g8090
I42
g8091
Vinsert
p34846
I42
VSimpleName: object
p34847
tp34848
I1
s(g12933
I42
g12934
Vinsert
p34849
I43
VSimpleType: WantedButNotInvoked
p34850
tp34851
I1
s(g24801
I42
g24802
Vinsert
p34852
I33
VNullLiteral
p34853
tp34854
I2
s(g10048
I42
g10049
Vinsert
p34855
I42
VSimpleName: Exception
p34856
tp34857
I1
s(g3121
I42
g3122
Vinsert
p34858
I36
VParenthesizedExpression
p34859
tp34860
I1
s(g4461
I42
g4462
Vinsert
p34861
I45
VStringLiteral: "Guardian"
p34862
tp34863
I1
s(g18840
I42
g18841
Vinsert
p34864
I83
VModifier: public
p34865
tp34866
I8
s(g7041
I42
g7042
Vinsert
p34867
I25
VIfStatement
p34868
tp34869
I1
s(g10696
I42
g10697
Vinsert
p34870
I45
VStringLiteral: "Mockito can only non-private & non-final classes."
p34871
tp34872
I1
s(g8218
I42
g8219
Vinsert
p34873
I27
VInfixExpression: +
p34874
tp34875
I2
s(g14311
I42
g14312
Vinsert
p34876
I42
VSimpleName: returnFor
p34877
tp34878
I2
s(g7143
I42
g7144
Vinsert
p34879
I42
VSimpleName: Exception
p34880
tp34881
I1
s(g19779
I42
g19780
Vinsert
p34882
I42
VSimpleName: before
p34883
tp34884
I1
s(g332
I42
g333
Vinsert
p34885
I21
VExpressionStatement
p34886
tp34887
I1
s(g12649
I42
g12650
Vinsert
p34888
I42
VSimpleName: nullValue
p34889
tp34890
I2
s(g5562
I42
g5563
Vinsert
p34891
I42
VSimpleName: stubbings
p34892
tp34893
I1
s(g10976
I42
g10977
Vinsert
p34894
I2
VArrayAccess
p34895
tp34896
I1
s(g7337
I42
g7338
Vinsert
p34897
I32
VMethodInvocation
p34898
tp34899
I7
s(g6148
I42
g6149
Vinsert
p34900
I42
VSimpleName: assertThat
p34901
tp34902
I1
s(g473
I42
g474
Vinsert
p34903
I42
VSimpleName: MockitoFramework
p34904
tp34905
I4
s(g1209
I42
g1210
Vinsert
p34906
I40
VQualifiedName: org.mockito.internal.creation.ClassNameFinder
p34907
tp34908
I1
s(g12245
I42
g12246
Vinsert
p34909
I54
VTryStatement
p34910
tp34911
I1
s(g5431
I42
g5432
Vinsert
p34912
I27
VInfixExpression: -
p34913
tp34914
I1
s(g16902
I42
g16903
Vinsert
p34915
I42
VSimpleName: isDeclaredBy
p34916
tp34917
I1
s(g1264
I42
g1265
Vinsert
p34918
I59
VVariableDeclarationFragment
p34919
tp34920
I1
s(g4168
I42
g4169
Vinsert
p34921
I42
VSimpleName: MethodVisitor
p34922
tp34923
I1
s(g7302
I42
g7303
Vinsert
p34924
I42
VSimpleName: MockitoSession
p34925
tp34926
I2
s(g3851
I42
g3852
Vinsert
p34927
I34
VNumberLiteral: 200
p34928
tp34929
I1
s(g33715
I42
g33716
Vinsert
p34930
I34
VNumberLiteral: 999
p34931
tp34932
I1
s(g17346
I42
g17347
Vinsert
p34933
I42
VSimpleName: verifyingMode
p34934
tp34935
I1
s(g5916
I42
g5917
Vinsert
p34936
I42
VSimpleName: mock
p34937
tp34938
I6
s(g12846
I42
g12847
Vinsert
p34939
I42
VSimpleName: types
p34940
tp34941
I1
s(g15534
I42
g15535
Vinsert
p34942
I42
VSimpleName: Collections
p34943
tp34944
I1
s(g1863
I42
g1864
Vinsert
p34945
I2
VArrayAccess
p34946
tp34947
I1
s(g6614
I42
g6615
Vinsert
p34948
I42
VSimpleName: InstanceField
p34949
tp34950
I2
s(g4887
I42
g4888
Vinsert
p34951
I45
VStringLiteral: "ExceptionFour"
p34952
tp34953
I1
s(g11141
I42
g11142
Vinsert
p34954
I59
VVariableDeclarationFragment
p34955
tp34956
I1
s(g1528
I42
g1529
Vinsert
p34957
I42
VSimpleName: description
p34958
tp34959
I24
s(g17534
I42
g17535
Vinsert
p34960
I42
VSimpleName: RunnerAndRule
p34961
tp34962
I1
s(g4861
I42
g4862
Vinsert
p34963
I43
VSimpleType: Collection
p34964
tp34965
I1
s(g9079
I42
g9080
Vinsert
p34966
I42
VSimpleName: verboselyPrinted
p34967
tp34968
I1
s(g7587
I42
g7588
Vinsert
p34969
I42
VSimpleName: Test
p34970
tp34971
I1
s(g4354
I42
g4355
Vinsert
p34972
I42
VSimpleName: verify
p34973
tp34974
I1
s(g14352
I42
g14353
Vinsert
p34975
I43
VSimpleType: Exception
p34976
tp34977
I1
s(g10680
I42
g10681
Vinsert
p34978
I39
VPrimitiveType: byte
p34979
tp34980
I1
s(g367
I42
g368
Vinsert
p34981
I83
VModifier: public
p34982
tp34983
I1
s(g5583
I42
g5584
Vinsert
p34984
I27
VInfixExpression: ==
p34985
tp34986
I1
s(g2700
I42
g2701
Vinsert
p34987
I31
VMethodDeclaration
p34988
tp34989
I1
s(g3131
I42
g3132
Vinsert
p34990
I61
VWhileStatement
p34991
tp34992
I1
s(g2934
I42
g2935
Vinsert
p34993
I39
VPrimitiveType: void
p34994
tp34995
I5
s(g2541
I42
g2542
Vinsert
p34996
I42
VSimpleName: unusedIterator
p34997
tp34998
I1
s(g21395
I42
g21396
Vinsert
p34999
I42
VSimpleName: fields
p35000
tp35001
I1
s(g10651
I42
g10652
Vinsert
p35002
I42
VSimpleName: IMethods
p35003
tp35004
I1
s(g15179
I42
g15180
Vinsert
p35005
I34
VNumberLiteral: 3
p35006
tp35007
I1
s(g18268
I42
g18269
Vinsert
p35008
I74
VParameterizedType: LinkedList<Invocation>
p35009
tp35010
I2
s(g14491
I42
g14492
Vinsert
p35011
I42
VSimpleName: method
p35012
tp35013
I4
s(g9865
I42
g9866
Vinsert
p35014
I43
VSimpleType: SpyAbstractClass
p35015
tp35016
I2
s(g7081
I42
g7082
Vinsert
p35017
I42
VSimpleName: shouldLogNumberOfInteractions
p35018
tp35019
I1
s(g12705
I42
g12706
Vinsert
p35020
I76
VWildcardType: ?
p35021
tp35022
I2
s(g15351
I42
g15352
Vinsert
p35023
I42
VSimpleName: shouldShareState
p35024
tp35025
I1
s(g7992
I42
g7993
Vinsert
p35026
I42
VSimpleName: provider
p35027
tp35028
I1
s(g24467
I42
g24468
Vinsert
p35029
I34
VNumberLiteral: 1
p35030
tp35031
I2
s(g4861
I42
g4862
Vinsert
p35032
I43
VSimpleType: Invocation
p35033
tp35034
I1
s(g224
I42
g225
Vinsert
p35035
I44
VSingleVariableDeclaration
p35036
tp35037
I1
s(g906
I42
g907
Vinsert
p35038
I43
VSimpleType: MockFeatures
p35039
tp35040
I1
s(g2131
I42
g2132
Vinsert
p35041
I42
VSimpleName: setInvocationForPotentialStubbing
p35042
tp35043
I1
s(g18497
I42
g18498
Vinsert
p35044
I42
VSimpleName: clearInvocations
p35045
tp35046
I1
s(Vinsert
p35047
I42
VSimpleName: get
p35048
Vinsert
p35049
I45
VStringLiteral: "bar"
p35050
tp35051
I1
s(g7657
I42
g7658
Vinsert
p35052
I43
VSimpleType: SimpleMockitoLogger
p35053
tp35054
I2
s(g6890
I42
g6891
Vinsert
p35055
I42
VSimpleName: sig
p35056
tp35057
I1
s(g184
I42
g185
Vinsert
p35058
I42
VSimpleName: minNumberOfInvocations
p35059
tp35060
I1
s(g9271
I42
g9272
Vinsert
p35061
I14
VClassInstanceCreation
p35062
tp35063
I2
s(g17557
I42
g17558
Vinsert
p35064
I42
VSimpleName: injectInto
p35065
tp35066
I6
s(g12245
I42
g12246
Vinsert
p35067
I42
VSimpleName: captor
p35068
tp35069
I2
s(g3262
I42
g3263
Vinsert
p35070
I83
VModifier: static
p35071
tp35072
I1
s(g3303
I42
g3304
Vinsert
p35073
I43
VSimpleType: CodeEmitter
p35074
tp35075
I1
s(g16291
I42
g16292
Vinsert
p35076
I42
VSimpleName: Spy
p35077
tp35078
I1
s(g4944
I42
g4945
Vinsert
p35079
I42
VSimpleName: s
p35080
tp35081
I2
s(g7825
I42
g7826
Vinsert
p35082
I42
VSimpleName: ClassLoader
p35083
tp35084
I1
s(g7798
I42
g7799
Vinsert
p35085
I83
VModifier: final
p35086
tp35087
I1
s(g3688
I42
g3689
Vinsert
p35088
I42
VSimpleName: dummy
p35089
tp35090
I4
s(g2439
I42
g2440
Vinsert
p35091
I42
VSimpleName: withSettings
p35092
tp35093
I1
s(g8401
I42
g8402
Vinsert
p35094
I21
VExpressionStatement
p35095
tp35096
I4
s(g6725
I42
g6726
Vinsert
p35097
I42
VSimpleName: MockitoException
p35098
tp35099
I1
s(g4800
I42
g4801
Vinsert
p35100
I74
VParameterizedType: MockHandlerImpl<SampleClass>
p35101
tp35102
I1
s(g11552
I42
g11553
Vinsert
p35103
I42
VSimpleName: next
p35104
tp35105
I1
s(g6233
I42
g6234
Vinsert
p35106
I66
VTextElement:  captured varargs
p35107
tp35108
I1
s(g3875
I42
g3876
Vinsert
p35109
I42
VSimpleName: should_be_able_to_create_spy
p35110
tp35111
I2
s(g5665
I42
g5666
Vinsert
p35112
I42
VSimpleName: createInfo
p35113
tp35114
I1
s(g6103
I42
g6104
Vinsert
p35115
I32
VMethodInvocation
p35116
tp35117
I1
s(g578
I42
g579
Vinsert
p35118
I60
VVariableDeclarationStatement
p35119
tp35120
I2
s(g7166
I42
g7167
Vinsert
p35121
I32
VMethodInvocation
p35122
tp35123
I2
s(g5834
I42
g5835
Vinsert
p35124
I21
VExpressionStatement
p35125
tp35126
I1
s(g6781
I42
g6782
Vinsert
p35127
I42
VSimpleName: Exception
p35128
tp35129
I1
s(g4067
I42
g4068
Vinsert
p35130
I44
VSingleVariableDeclaration
p35131
tp35132
I3
s(g5501
I42
g5502
Vinsert
p35133
I42
VSimpleName: buf
p35134
tp35135
I12
s(g13950
I42
g13951
Vinsert
p35136
I83
VModifier: public
p35137
tp35138
I1
s(g6700
I42
g6701
Vinsert
p35139
I42
VSimpleName: orderingContext
p35140
tp35141
I1
s(g1655
I42
g1656
Vinsert
p35142
I32
VMethodInvocation
p35143
tp35144
I4
s(g1317
I42
g1318
Vinsert
p35145
I42
VSimpleName: InvocationOnMock
p35146
tp35147
I1
s(g9821
I42
g9822
Vinsert
p35148
I32
VMethodInvocation
p35149
tp35150
I1
s(g8696
I42
g8697
Vinsert
p35151
I26
VImportDeclaration
p35152
tp35153
I1
s(g1457
I42
g1458
Vinsert
p35154
I42
VSimpleName: answer
p35155
tp35156
I1
s(g21977
I42
g21978
Vinsert
p35157
I60
VVariableDeclarationStatement
p35158
tp35159
I2
s(g11314
I42
g11315
Vinsert
p35160
I42
VSimpleName: ClassLoaders
p35161
tp35162
I1
s(g4451
I42
g4452
Vinsert
p35163
I42
VSimpleName: Test
p35164
tp35165
I9
s(g4106
I42
g4107
Vinsert
p35166
I42
VSimpleName: StringDescription
p35167
tp35168
I4
s(g11418
I42
g11419
Vinsert
p35169
I43
VSimpleType: MockSettingsImpl
p35170
tp35171
I1
s(g10086
I42
g10087
Vinsert
p35172
I42
VSimpleName: mock
p35173
tp35174
I3
s(g19074
I42
g19075
Vinsert
p35175
I42
VSimpleName: Object
p35176
tp35177
I1
s(g2080
I42
g2081
Vinsert
p35178
I42
VSimpleName: when
p35179
tp35180
I1
s(g9139
I42
g9140
Vinsert
p35181
I43
VSimpleType: T
p35182
tp35183
I6
s(g10889
I42
g10890
Vinsert
p35184
I27
VInfixExpression: -
p35185
tp35186
I1
s(g3580
I42
g3581
Vinsert
p35187
I39
VPrimitiveType: void
p35188
tp35189
I2
s(g2788
I42
g2789
Vinsert
p35190
I27
VInfixExpression: /
p35191
tp35192
I1
s(g12566
I42
g12567
Vinsert
p35193
I42
VSimpleName: size
p35194
tp35195
I1
s(g19066
I42
g19067
Vinsert
p35196
I42
VSimpleName: value
p35197
tp35198
I1
s(g5180
I42
g5181
Vinsert
p35199
I42
VSimpleName: someClass
p35200
tp35201
I1
s(g11012
I42
g11013
Vinsert
p35202
I43
VSimpleType: Failure
p35203
tp35204
I1
s(g21691
I42
g21692
Vinsert
p35205
I27
VInfixExpression: +
p35206
tp35207
I2
s(g1449
I42
g1450
Vinsert
p35208
I34
VNumberLiteral: 11
p35209
tp35210
I1
s(g4714
I42
g4715
Vinsert
p35211
I8
VBlock
p35212
tp35213
I2
s(g6943
I42
g6944
Vinsert
p35214
I42
VSimpleName: IArgumentMatcher
p35215
tp35216
I1
s(g15424
I42
g15425
Vinsert
p35217
I32
VMethodInvocation
p35218
tp35219
I6
s(g3252
I42
g3253
Vinsert
p35220
I43
VSimpleType: MethodInfo
p35221
tp35222
I1
s(g4577
I42
g4578
Vinsert
p35223
I42
VSimpleName: registeredInvocations
p35224
tp35225
I2
s(g327
I42
g328
Vinsert
p35226
I42
VSimpleName: timeout
p35227
tp35228
I2
s(g267
I42
g268
Vinsert
p35229
I42
VSimpleName: InvocationsCalculator
p35230
tp35231
I1
s(g6350
I42
g6351
Vinsert
p35232
I43
VSimpleType: IllegalArgumentException
p35233
tp35234
I1
s(g3880
I42
g3881
Vinsert
p35235
I41
VReturnStatement
p35236
tp35237
I1
s(g8052
I42
g8053
Vinsert
p35238
I8
VBlock
p35239
tp35240
I1
s(g5752
I42
g5753
Vinsert
p35241
I83
VModifier: public
p35242
tp35243
I1
s(g1558
I42
g1559
Vinsert
p35244
I49
VSwitchCase
p35245
tp35246
I4
s(g16328
I42
g16329
Vinsert
p35247
I42
VSimpleName: mockSettingsImpl
p35248
tp35249
I1
s(g1805
I42
g1806
Vinsert
p35250
I59
VVariableDeclarationFragment
p35251
tp35252
I1
s(g7017
I42
g7018
Vinsert
p35253
I59
VVariableDeclarationFragment
p35254
tp35255
I3
s(g5169
I42
g5170
Vinsert
p35256
I42
VSimpleName: List
p35257
tp35258
I1
s(g5360
I42
g5361
Vinsert
p35259
I42
VSimpleName: invocation
p35260
tp35261
I1
s(g3654
I42
g3655
Vinsert
p35262
I32
VMethodInvocation
p35263
tp35264
I17
s(g11640
I42
g11641
Vinsert
p35265
I42
VSimpleName: verifyingModeLocal
p35266
tp35267
I1
s(g16
I42
g17
Vinsert
p35268
I42
VSimpleName: run
p35269
tp35270
I1
s(g841
I42
g842
Vinsert
p35271
I42
VSimpleName: MOCKITO_CORE
p35272
tp35273
I1
s(g7041
I42
g7042
Vinsert
p35274
I7
VAssignment: =
p35275
tp35276
I1
s(g12941
I42
g12942
Vinsert
p35277
I44
VSingleVariableDeclaration
p35278
tp35279
I6
s(g5128
I42
g5129
Vinsert
p35280
I42
VSimpleName: InvocationBuilder
p35281
tp35282
I2
s(Vinsert
p35283
I42
VSimpleName: getMessage
p35284
Vinsert
p35285
I45
VStringLiteral: " serialization mode."
p35286
tp35287
I1
s(g876
I42
g877
Vinsert
p35288
I42
VSimpleName: mode
p35289
tp35290
I2
s(g21977
I42
g21978
Vinsert
p35291
I42
VSimpleName: compareTo
p35292
tp35293
I4
s(g6217
I42
g6218
Vinsert
p35294
I42
VSimpleName: mock
p35295
tp35296
I3
s(g10319
I42
g10320
Vinsert
p35297
I42
VSimpleName: length
p35298
tp35299
I1
s(g28127
I42
g28128
Vinsert
p35300
I16
VConditionalExpression
p35301
tp35302
I1
s(g7467
I42
g7468
Vinsert
p35303
I42
VSimpleName: JUnitTool
p35304
tp35305
I2
s(g2518
I42
g2519
Vinsert
p35306
I42
VSimpleName: AnswerFunctionalInterfaces
p35307
tp35308
I1
s(g4474
I42
g4475
Vinsert
p35309
I42
VSimpleName: mocks
p35310
tp35311
I1
s(g7313
I42
g7314
Vinsert
p35312
I22
VFieldAccess
p35313
tp35314
I1
s(g8757
I42
g8758
Vinsert
p35315
I42
VSimpleName: AbstractCollection
p35316
tp35317
I1
s(g6859
I42
g6860
Vinsert
p35318
I42
VSimpleName: ExperimentalMockitoJUnitRunner
p35319
tp35320
I1
s(g15464
I42
g15465
Vinsert
p35321
I5
VArrayType: Object[]
p35322
tp35323
I3
s(g10894
I42
g10895
Vinsert
p35324
I42
VSimpleName: Object
p35325
tp35326
I1
s(g26550
I42
g26551
Vinsert
p35327
I39
VPrimitiveType: int
p35328
tp35329
I1
s(g6695
I42
g6696
Vinsert
p35330
I42
VSimpleName: Set
p35331
tp35332
I1
s(g15668
I42
g15669
Vinsert
p35333
I42
VSimpleName: TestClass
p35334
tp35335
I2
s(g11956
I42
g11957
Vinsert
p35336
I43
VSimpleType: FooImpl
p35337
tp35338
I1
s(g1876
I42
g1877
Vinsert
p35339
I42
VSimpleName: contributions
p35340
tp35341
I1
s(g11984
I42
g11985
Vinsert
p35342
I42
VSimpleName: Serializable
p35343
tp35344
I1
s(g18096
I42
g18097
Vinsert
p35345
I74
VParameterizedType: Class<?>
p35346
tp35347
I2
s(g3390
I42
g3391
Vinsert
p35348
I32
VMethodInvocation
p35349
tp35350
I8
s(g3851
I42
g3852
Vinsert
p35351
I26
VImportDeclaration
p35352
tp35353
I1
s(g2195
I42
g2196
Vinsert
p35354
I40
VQualifiedName: MockitoAnnotations.Mock
p35355
tp35356
I1
s(g262
I42
g263
Vinsert
p35357
I43
VSimpleType: ParameterizedType
p35358
tp35359
I3
s(g7582
I42
g7583
Vinsert
p35360
I83
VModifier: public
p35361
tp35362
I1
s(g3209
I42
g3210
Vinsert
p35363
I42
VSimpleName: spy1
p35364
tp35365
I1
s(g16677
I42
g16678
Vinsert
p35366
I42
VSimpleName: mock
p35367
tp35368
I2
s(g2738
I42
g2739
Vinsert
p35369
I39
VPrimitiveType: boolean
p35370
tp35371
I1
s(g8875
I42
g8876
Vinsert
p35372
I42
VSimpleName: instanceFields
p35373
tp35374
I1
s(g7143
I42
g7144
Vinsert
p35375
I43
VSimpleType: InstantationException
p35376
tp35377
I1
s(g2070
I42
g2071
Vinsert
p35378
I42
VSimpleName: InvocationMarker
p35379
tp35380
I6
s(g12777
I42
g12778
Vinsert
p35381
I27
VInfixExpression: <
p35382
tp35383
I1
s(g8176
I42
g8177
Vinsert
p35384
I43
VSimpleType: LoggingListener
p35385
tp35386
I1
s(g14746
I42
g14747
Vinsert
p35387
I45
VStringLiteral: "unchecked"
p35388
tp35389
I1
s(g12606
I42
g12607
Vinsert
p35390
I42
VSimpleName: listener
p35391
tp35392
I2
s(g3585
I42
g3586
Vinsert
p35393
I42
VSimpleName: testClassInstance
p35394
tp35395
I1
s(g1770
I42
g1771
Vinsert
p35396
I42
VSimpleName: Class
p35397
tp35398
I1
s(g14150
I42
g14151
Vinsert
p35399
I42
VSimpleName: issue
p35400
tp35401
I1
s(g28564
I42
g28565
Vinsert
p35402
I40
VQualifiedName: org.mockito.Mockito.verify
p35403
tp35404
I1
s(g74
I42
g75
Vinsert
p35405
I43
VSimpleType: IllegalStateException
p35406
tp35407
I1
s(g4247
I42
g4248
Vinsert
p35408
I42
VSimpleName: deserializedSample
p35409
tp35410
I3
s(g11214
I42
g11215
Vinsert
p35411
I85
VDimension
p35412
tp35413
I1
s(g342
I42
g343
Vinsert
p35414
I7
VAssignment: =
p35415
tp35416
I1
s(g5416
I42
g5417
Vinsert
p35417
I8
VBlock
p35418
tp35419
I1
s(g24736
I42
g24737
Vinsert
p35420
I1
VAnonymousClassDeclaration
p35421
tp35422
I2
s(g5549
I42
g5550
Vinsert
p35423
I39
VPrimitiveType: void
p35424
tp35425
I1
s(g2815
I42
g2816
Vinsert
p35426
I32
VMethodInvocation
p35427
tp35428
I1
s(g9758
I42
g9759
Vinsert
p35429
I25
VIfStatement
p35430
tp35431
I1
s(g12508
I42
g12509
Vinsert
p35432
I66
VTextElement:  class
p35433
tp35434
I1
s(g1362
I42
g1363
Vinsert
p35435
I42
VSimpleName: DOUBLE
p35436
tp35437
I1
s(g6162
I42
g6163
Vinsert
p35438
I34
VNumberLiteral: 0
p35439
tp35440
I1
s(g7521
I42
g7522
Vinsert
p35441
I42
VSimpleName: expected
p35442
tp35443
I1
s(g3144
I42
g3145
Vinsert
p35444
I42
VSimpleName: Class
p35445
tp35446
I1
s(g114
I42
g115
Vinsert
p35447
I42
VSimpleName: mock
p35448
tp35449
I2
s(g10963
I42
g10964
Vinsert
p35450
I60
VVariableDeclarationStatement
p35451
tp35452
I2
s(g2770
I42
g2771
Vinsert
p35453
I5
VArrayType: Object[]
p35454
tp35455
I1
s(g61
I42
g62
Vinsert
p35456
I42
VSimpleName: answer
p35457
tp35458
I1
s(g7274
I42
g7275
Vinsert
p35459
I42
VSimpleName: join
p35460
tp35461
I2
s(g1949
I42
g1950
Vinsert
p35462
I42
VSimpleName: tooLittleActualInvocationsShouldNotApplyToAtLeastMode
p35463
tp35464
I1
s(g292
I42
g293
Vinsert
p35465
I42
VSimpleName: Exception
p35466
tp35467
I2
s(g9147
I42
g9148
Vinsert
p35468
I42
VSimpleName: assertEquals
p35469
tp35470
I1
s(g420
I42
g421
Vinsert
p35471
I22
VFieldAccess
p35472
tp35473
I1
s(g22220
I42
g22221
Vinsert
p35474
I42
VSimpleName: s
p35475
tp35476
I1
s(g3431
I42
g3432
Vinsert
p35477
I65
VTagElement
p35478
tp35479
I3
s(g14735
I42
g14736
Vinsert
p35480
I42
VSimpleName: differentMethod
p35481
tp35482
I1
s(g916
I42
g917
Vinsert
p35483
I59
VVariableDeclarationFragment
p35484
tp35485
I1
s(g15464
I42
g15465
Vinsert
p35486
I54
VTryStatement
p35487
tp35488
I2
s(g468
I42
g469
Vinsert
p35489
I43
VSimpleType: T
p35490
tp35491
I2
s(g12933
I42
g12934
Vinsert
p35492
I43
VSimpleType: Foo
p35493
tp35494
I1
s(g99
I42
g100
Vinsert
p35495
I7
VAssignment: =
p35496
tp35497
I1
s(g6502
I42
g6503
Vinsert
p35498
I42
VSimpleName: when
p35499
tp35500
I1
s(g16663
I42
g16664
Vinsert
p35501
I42
VSimpleName: text
p35502
tp35503
I1
s(g14538
I42
g14539
Vinsert
p35504
I42
VSimpleName: frame
p35505
tp35506
I1
s(g4163
I42
g4164
Vinsert
p35507
I59
VVariableDeclarationFragment
p35508
tp35509
I2
s(g8288
I42
g8289
Vinsert
p35510
I53
VThrowStatement
p35511
tp35512
I2
s(g826
I42
g827
Vinsert
p35513
I42
VSimpleName: Invocation
p35514
tp35515
I8
s(g10921
I42
g10922
Vinsert
p35516
I42
VSimpleName: isRunner
p35517
tp35518
I1
s(g4199
I42
g4200
Vinsert
p35519
I13
VCharacterLiteral: 'Z'
p35520
tp35521
I1
s(g1563
I42
g1564
Vinsert
p35522
I44
VSingleVariableDeclaration
p35523
tp35524
I1
s(g16048
I42
g16049
Vinsert
p35525
I42
VSimpleName: String
p35526
tp35527
I3
s(g1239
I42
g1240
Vinsert
p35528
I43
VSimpleType: RuntimeException
p35529
tp35530
I1
s(g9403
I42
g9404
Vinsert
p35531
I34
VNumberLiteral: 3
p35532
tp35533
I1
s(g8533
I42
g8534
Vinsert
p35534
I60
VVariableDeclarationStatement
p35535
tp35536
I1
s(g3275
I42
g3276
Vinsert
p35537
I42
VSimpleName: m
p35538
tp35539
I1
s(g11
I42
g12
Vinsert
p35540
I42
VSimpleName: i
p35541
tp35542
I4
s(g722
I42
g723
Vinsert
p35543
I7
VAssignment: =
p35544
tp35545
I1
s(g926
I42
g927
Vinsert
p35546
I60
VVariableDeclarationStatement
p35547
tp35548
I4
s(g7129
I42
g7130
Vinsert
p35549
I32
VMethodInvocation
p35550
tp35551
I3
s(g513
I42
g514
Vinsert
p35552
I43
VSimpleType: Iterator
p35553
tp35554
I9
s(g14483
I42
g14484
Vinsert
p35555
I42
VSimpleName: address
p35556
tp35557
I1
s(g5575
I42
g5576
Vinsert
p35558
I42
VSimpleName: Boolean
p35559
tp35560
I1
s(g6339
I42
g6340
Vinsert
p35561
I42
VSimpleName: shouldAllowSpyingOnDefaultMethod
p35562
tp35563
I1
s(g3247
I42
g3248
Vinsert
p35564
I42
VSimpleName: AssertionError
p35565
tp35566
I2
s(g1332
I42
g1333
Vinsert
p35567
I66
VTextElement: ArgumentMatcher???
p35568
tp35569
I1
s(g12832
I42
g12833
Vinsert
p35570
I42
VSimpleName: shouldValidateMockWhenVerifyingWithExactNumberOfInvocations
p35571
tp35572
I1
s(g7752
I42
g7753
Vinsert
p35573
I45
VStringLiteral: "100$"
p35574
tp35575
I1
s(g2457
I42
g2458
Vinsert
p35576
I43
VSimpleType: String
p35577
tp35578
I1
s(g12097
I42
g12098
Vinsert
p35579
I32
VMethodInvocation
p35580
tp35581
I2
s(g1962
I42
g1963
Vinsert
p35582
I42
VSimpleName: mock
p35583
tp35584
I1
s(g8314
I42
g8315
Vinsert
p35585
I42
VSimpleName: assertFalse
p35586
tp35587
I4
s(g2585
I42
g2586
Vinsert
p35588
I43
VSimpleType: Object
p35589
tp35590
I1
s(g1439
I42
g1440
Vinsert
p35591
I42
VSimpleName: Object
p35592
tp35593
I1
s(g13936
I42
g13937
Vinsert
p35594
I42
VSimpleName: excludingClassLoader
p35595
tp35596
I1
s(g1696
I42
g1697
Vinsert
p35597
I36
VParenthesizedExpression
p35598
tp35599
I1
s(g7526
I42
g7527
Vinsert
p35600
I42
VSimpleName: Exception
p35601
tp35602
I1
s(g119
I42
g120
Vinsert
p35603
I31
VMethodDeclaration
p35604
tp35605
I1
s(g1449
I42
g1450
Vinsert
p35606
I59
VVariableDeclarationFragment
p35607
tp35608
I1
s(g1
I42
g2
Vinsert
p35609
I42
VSimpleName: settings
p35610
tp35611
I1
s(g608
I42
g609
Vinsert
p35612
I42
VSimpleName: av
p35613
tp35614
I2
s(g7495
I42
g7496
Vinsert
p35615
I42
VSimpleName: wanted
p35616
tp35617
I1
s(g483
I42
g484
Vinsert
p35618
I42
VSimpleName: object
p35619
tp35620
I1
s(g3313
I42
g3314
Vinsert
p35621
I8
VBlock
p35622
tp35623
I1
s(g94
I42
g95
Vinsert
p35624
I78
VMarkerAnnotation
p35625
tp35626
I14
s(g8146
I42
g8147
Vinsert
p35627
I32
VMethodInvocation
p35628
tp35629
I5
s(g941
I42
g942
Vinsert
p35630
I43
VSimpleType: SerializableMode
p35631
tp35632
I1
s(g633
I42
g634
Vinsert
p35633
I43
VSimpleType: InvocationMatcher
p35634
tp35635
I1
s(g2147
I42
g2148
Vinsert
p35636
I43
VSimpleType: VoidMethodStubbable
p35637
tp35638
I2
s(g5789
I42
g5790
Vinsert
p35639
I42
VSimpleName: fieldInstance
p35640
tp35641
I1
s(g9601
I42
g9602
Vinsert
p35642
I42
VSimpleName: keyClazz
p35643
tp35644
I1
s(g15198
I42
g15199
Vinsert
p35645
I60
VVariableDeclarationStatement
p35646
tp35647
I2
s(g686
I42
g687
Vinsert
p35648
I42
VSimpleName: RuntimeException
p35649
tp35650
I1
s(g1439
I42
g1440
Vinsert
p35651
I42
VSimpleName: name
p35652
tp35653
I2
s(g5834
I42
g5835
Vinsert
p35654
I25
VIfStatement
p35655
tp35656
I1
s(g5834
I42
g5835
Vinsert
p35657
I14
VClassInstanceCreation
p35658
tp35659
I1
s(g3537
I42
g3538
Vinsert
p35660
I39
VPrimitiveType: void
p35661
tp35662
I1
s(g4776
I42
g4777
Vinsert
p35663
I43
VSimpleType: ExpectedInvocation
p35664
tp35665
I1
s(g3704
I42
g3705
Vinsert
p35666
I42
VSimpleName: String
p35667
tp35668
I1
s(g4670
I42
g4671
Vinsert
p35669
I42
VSimpleName: loadClass
p35670
tp35671
I1
s(g9870
I42
g9871
Vinsert
p35672
I42
VSimpleName: subLength
p35673
tp35674
I1
s(g10688
I42
g10689
Vinsert
p35675
I59
VVariableDeclarationFragment
p35676
tp35677
I1
s(g26027
I42
g26028
Vinsert
p35678
I42
VSimpleName: assertEquals
p35679
tp35680
I1
s(g1683
I42
g1684
Vinsert
p35681
I42
VSimpleName: put
p35682
tp35683
I1
s(g15424
I42
g15425
Vinsert
p35684
I42
VSimpleName: size
p35685
tp35686
I2
s(g523
I42
g524
Vinsert
p35687
I83
VModifier: public
p35688
tp35689
I1
s(g1949
I42
g1950
Vinsert
p35690
I8
VBlock
p35691
tp35692
I3
s(g1367
I42
g1368
Vinsert
p35693
I43
VSimpleType: ReturnsSmartNulls
p35694
tp35695
I1
s(g433
I42
g434
Vinsert
p35696
I42
VSimpleName: Mockito
p35697
tp35698
I5
s(g4895
I42
g4896
Vinsert
p35699
I32
VMethodInvocation
p35700
tp35701
I1
s(g22136
I42
g22137
Vinsert
p35702
I43
VSimpleType: Throwable
p35703
tp35704
I2
s(Vinsert
p35705
I42
VSimpleName: getMock
p35706
Vinsert
p35707
I43
VSimpleType: Invocation
p35708
tp35709
I1
s(g1327
I42
g1328
Vinsert
p35710
I42
VSimpleName: typeValidated
p35711
tp35712
I1
s(g2331
I42
g2332
Vinsert
p35713
I42
VSimpleName: VerificationAfterDelay
p35714
tp35715
I1
s(g11243
I42
g11244
Vinsert
p35716
I8
VBlock
p35717
tp35718
I1
s(g239
I42
g240
Vinsert
p35719
I52
VThisExpression
p35720
tp35721
I1
s(g8242
I42
g8243
Vinsert
p35722
I76
VWildcardType: ?
p35723
tp35724
I1
s(g16356
I42
g16357
Vinsert
p35725
I42
VSimpleName: Answer
p35726
tp35727
I1
s(g946
I42
g947
Vinsert
p35728
I59
VVariableDeclarationFragment
p35729
tp35730
I1
s(g337
I42
g338
Vinsert
p35731
I8
VBlock
p35732
tp35733
I10
s(g16454
I42
g16455
Vinsert
p35734
I83
VModifier: public
p35735
tp35736
I6
s(g114
I42
g115
Vinsert
p35737
I42
VSimpleName: mockMaker
p35738
tp35739
I2
s(g4944
I42
g4945
Vinsert
p35740
I32
VMethodInvocation
p35741
tp35742
I61
s(g2944
I42
g2945
Vinsert
p35743
I42
VSimpleName: withClassDefinition
p35744
tp35745
I1
s(g7091
I42
g7092
Vinsert
p35746
I42
VSimpleName: Location
p35747
tp35748
I1
s(g11961
I42
g11962
Vinsert
p35749
I25
VIfStatement
p35750
tp35751
I1
s(g7371
I42
g7372
Vinsert
p35752
I45
VStringLiteral: "fool"
p35753
tp35754
I1
s(g10851
I42
g10852
Vinsert
p35755
I42
VSimpleName: getName
p35756
tp35757
I1
s(g4362
I42
g4363
Vinsert
p35758
I42
VSimpleName: readPluginClass
p35759
tp35760
I2
s(g2929
I42
g2930
Vinsert
p35761
I39
VPrimitiveType: void
p35762
tp35763
I1
s(g1214
I42
g1215
Vinsert
p35764
I42
VSimpleName: listener
p35765
tp35766
I1
s(g8875
I42
g8876
Vinsert
p35767
I74
VParameterizedType: ArrayList<String>
p35768
tp35769
I1
s(g896
I42
g897
Vinsert
p35770
I43
VSimpleType: IOException
p35771
tp35772
I2
s(g10672
I42
g10673
Vinsert
p35773
I42
VSimpleName: argumentIndexOf
p35774
tp35775
I1
s(g12287
I42
g12288
Vinsert
p35776
I21
VExpressionStatement
p35777
tp35778
I2
s(g3550
I42
g3551
Vinsert
p35779
I42
VSimpleName: Before
p35780
tp35781
I1
s(g8324
I42
g8325
Vinsert
p35782
I42
VSimpleName: contains
p35783
tp35784
I3
s(g29542
I42
g29543
Vinsert
p35785
I42
VSimpleName: ExpectedInvocation
p35786
tp35787
I1
s(g8827
I42
g8828
Vinsert
p35788
I42
VSimpleName: toInvocationMatcher
p35789
tp35790
I1
s(g593
I42
g594
Vinsert
p35791
I14
VClassInstanceCreation
p35792
tp35793
I1
s(g3730
I42
g3731
Vinsert
p35794
I42
VSimpleName: ClassFileVersion
p35795
tp35796
I2
s(g6111
I42
g6112
Vinsert
p35797
I45
VStringLiteral: "Short"
p35798
tp35799
I1
s(g5522
I42
g5523
Vinsert
p35800
I42
VSimpleName: ConstructorDelegate
p35801
tp35802
I1
s(g272
I42
g273
Vinsert
p35803
I42
VSimpleName: join
p35804
tp35805
I1
s(g3021
I42
g3022
Vinsert
p35806
I42
VSimpleName: arg
p35807
tp35808
I1
s(g2748
I42
g2749
Vinsert
p35809
I42
VSimpleName: method
p35810
tp35811
I1
s(g15913
I42
g15914
Vinsert
p35812
I42
VSimpleName: log
p35813
tp35814
I1
s(g5636
I42
g5637
Vinsert
p35815
I42
VSimpleName: mock
p35816
tp35817
I1
s(g4577
I42
g4578
Vinsert
p35818
I74
VParameterizedType: Answer<?>
p35819
tp35820
I2
s(g1977
I42
g1978
Vinsert
p35821
I54
VTryStatement
p35822
tp35823
I1
s(g1558
I42
g1559
Vinsert
p35824
I42
VSimpleName: ARETURN
p35825
tp35826
I1
s(g1987
I42
g1988
Vinsert
p35827
I21
VExpressionStatement
p35828
tp35829
I1
s(g6111
I42
g6112
Vinsert
p35830
I42
VSimpleName: TypeUtils
p35831
tp35832
I2
s(g18377
I42
g18378
Vinsert
p35833
I59
VVariableDeclarationFragment
p35834
tp35835
I1
s(g10539
I42
g10540
Vinsert
p35836
I34
VNumberLiteral: 1
p35837
tp35838
I1
s(Vinsert
p35839
I42
VSimpleName: simpleMethod
p35840
Vinsert
p35841
I42
VSimpleName: firstInteraction
p35842
tp35843
I1
s(g8242
I42
g8243
Vinsert
p35844
I8
VBlock
p35845
tp35846
I3
s(g5609
I42
g5610
Vinsert
p35847
I39
VPrimitiveType: boolean
p35848
tp35849
I3
s(g9224
I42
g9225
Vinsert
p35850
I41
VReturnStatement
p35851
tp35852
I1
s(g6476
I42
g6477
Vinsert
p35853
I42
VSimpleName: testClassInstance
p35854
tp35855
I2
s(g4247
I42
g4248
Vinsert
p35856
I42
VSimpleName: STUBBED_INTEGER_VALUE
p35857
tp35858
I1
s(g10992
I42
g10993
Vinsert
p35859
I80
VMemberValuePair
p35860
tp35861
I1
s(g28127
I42
g28128
Vinsert
p35862
I43
VSimpleType: MockCreationSettings
p35863
tp35864
I1
s(g5647
I42
g5648
Vinsert
p35865
I45
VStringLiteral: " ("
p35866
tp35867
I1
s(g1586
I42
g1587
Vinsert
p35868
I21
VExpressionStatement
p35869
tp35870
I2
s(g2743
I42
g2744
Vinsert
p35871
I60
VVariableDeclarationStatement
p35872
tp35873
I1
s(g3455
I42
g3456
Vinsert
p35874
I42
VSimpleName: String
p35875
tp35876
I2
s(g1755
I42
g1756
Vinsert
p35877
I42
VSimpleName: idx
p35878
tp35879
I1
s(g1312
I42
g1313
Vinsert
p35880
I8
VBlock
p35881
tp35882
I6
s(g1795
I42
g1796
Vinsert
p35883
I42
VSimpleName: hasMessage
p35884
tp35885
I1
s(g6763
I42
g6764
Vinsert
p35886
I42
VSimpleName: first
p35887
tp35888
I1
s(g8757
I42
g8758
Vinsert
p35889
I59
VVariableDeclarationFragment
p35890
tp35891
I1
s(g7966
I42
g7967
Vinsert
p35892
I42
VSimpleName: mock
p35893
tp35894
I1
s(g3468
I42
g3469
Vinsert
p35895
I42
VSimpleName: failed
p35896
tp35897
I1
s(g8862
I42
g8863
Vinsert
p35898
I42
VSimpleName: car
p35899
tp35900
I1
s(g5012
I42
g5013
Vinsert
p35901
I42
VSimpleName: notAMockPassedToWhenMethod
p35902
tp35903
I1
s(g1110
I42
g1111
Vinsert
p35904
I42
VSimpleName: line
p35905
tp35906
I2
s(g10921
I42
g10922
Vinsert
p35907
I43
VSimpleType: StackTraceElement
p35908
tp35909
I3
s(g1239
I42
g1240
Vinsert
p35910
I42
VSimpleName: Error
p35911
tp35912
I1
s(g2105
I42
g2106
Vinsert
p35913
I43
VSimpleType: SearchingClassLoader
p35914
tp35915
I1
s(g21782
I42
g21783
Vinsert
p35916
I42
VSimpleName: getSuspiciouslyNotMatchingArgsIndexes
p35917
tp35918
I1
s(g4882
I42
g4883
Vinsert
p35919
I42
VSimpleName: throwable
p35920
tp35921
I1
s(g5078
I42
g5079
Vinsert
p35922
I41
VReturnStatement
p35923
tp35924
I4
s(g5781
I42
g5782
Vinsert
p35925
I42
VSimpleName: mockitoFramework
p35926
tp35927
I1
s(g1498
I42
g1499
Vinsert
p35928
I42
VSimpleName: mock
p35929
tp35930
I1
s(g5744
I42
g5745
Vinsert
p35931
I8
VBlock
p35932
tp35933
I7
s(g4111
I42
g4112
Vinsert
p35934
I42
VSimpleName: MOCKITO_CORE
p35935
tp35936
I1
s(g1886
I42
g1887
Vinsert
p35937
I42
VSimpleName: cw
p35938
tp35939
I2
s(g2326
I42
g2327
Vinsert
p35940
I45
VStringLiteral: "end of label already set"
p35941
tp35942
I1
s(g5159
I42
g5160
Vinsert
p35943
I52
VThisExpression
p35944
tp35945
I1
s(g673
I42
g674
Vinsert
p35946
I60
VVariableDeclarationStatement
p35947
tp35948
I2
s(g1149
I42
g1150
Vinsert
p35949
I52
VThisExpression
p35950
tp35951
I1
s(g8642
I42
g8643
Vinsert
p35952
I45
VStringLiteral: "mock"
p35953
tp35954
I1
s(g3493
I42
g3494
Vinsert
p35955
I43
VSimpleType: LocalizedMatcher
p35956
tp35957
I3
s(g7248
I42
g7249
Vinsert
p35958
I42
VSimpleName: info
p35959
tp35960
I1
s(g5439
I42
g5440
Vinsert
p35961
I42
VSimpleName: ticket
p35962
tp35963
I1
s(g10659
I42
g10660
Vinsert
p35964
I42
VSimpleName: testClass
p35965
tp35966
I1
s(g23292
I42
g23293
Vinsert
p35967
I60
VVariableDeclarationStatement
p35968
tp35969
I5
s(g7817
I42
g7818
Vinsert
p35970
I31
VMethodDeclaration
p35971
tp35972
I2
s(g9306
I42
g9307
Vinsert
p35973
I52
VThisExpression
p35974
tp35975
I1
s(g4934
I42
g4935
Vinsert
p35976
I32
VMethodInvocation
p35977
tp35978
I1
s(g2326
I42
g2327
Vinsert
p35979
I25
VIfStatement
p35980
tp35981
I1
s(g11823
I42
g11824
Vinsert
p35982
I42
VSimpleName: addUnusedStub
p35983
tp35984
I1
s(g5781
I42
g5782
Vinsert
p35985
I43
VSimpleType: RememberingListener
p35986
tp35987
I2
s(g19793
I42
g19794
Vinsert
p35988
I21
VExpressionStatement
p35989
tp35990
I5
s(g27880
I42
g27881
Vinsert
p35991
I83
VModifier: static
p35992
tp35993
I1
s(g4098
I42
g4099
Vinsert
p35994
I59
VVariableDeclarationFragment
p35995
tp35996
I1
s(g30882
I42
g30883
Vinsert
p35997
I39
VPrimitiveType: int
p35998
tp35999
I2
s(Vinsert
p36000
I42
VSimpleName: equals
p36001
Vinsert
p36002
I42
VSimpleName: when
p36003
tp36004
I1
s(g1543
I42
g1544
Vinsert
p36005
I43
VSimpleType: Throwable
p36006
tp36007
I1
s(g6642
I42
g6643
Vinsert
p36008
I42
VSimpleName: isFinalClass
p36009
tp36010
I1
s(g390
I42
g391
Vinsert
p36011
I42
VSimpleName: StringBuffer
p36012
tp36013
I2
s(g2227
I42
g2228
Vinsert
p36014
I43
VSimpleType: T
p36015
tp36016
I1
s(g2526
I42
g2527
Vinsert
p36017
I42
VSimpleName: m
p36018
tp36019
I6
s(g4212
I42
g4213
Vinsert
p36020
I42
VSimpleName: byCommitCount
p36021
tp36022
I3
s(g3091
I42
g3092
Vinsert
p36023
I45
VStringLiteral: "  - stubbed -> at org.mockitousage.debugging.InvocationsPrinterTest.triggerStubbing(InvocationsPrinterTest.java:70)\u005cn"
p36024
tp36025
I1
s(g5062
I42
g5063
Vinsert
p36026
I31
VMethodDeclaration
p36027
tp36028
I1
s(g2718
I42
g2719
Vinsert
p36029
I32
VMethodInvocation
p36030
tp36031
I2
s(g10572
I42
g10573
Vinsert
p36032
I32
VMethodInvocation
p36033
tp36034
I1
s(g2796
I42
g2797
Vinsert
p36035
I42
VSimpleName: Test
p36036
tp36037
I1
s(g24722
I42
g24723
Vinsert
p36038
I42
VSimpleName: name
p36039
tp36040
I2
s(g1292
I42
g1293
Vinsert
p36041
I44
VSingleVariableDeclaration
p36042
tp36043
I4
s(g921
I42
g922
Vinsert
p36044
I42
VSimpleName: x
p36045
tp36046
I1
s(g8921
I42
g8922
Vinsert
p36047
I42
VSimpleName: mock
p36048
tp36049
I3
s(g3730
I42
g3731
Vinsert
p36050
I42
VSimpleName: JAVA_V8
p36051
tp36052
I1
s(g5869
I42
g5870
Vinsert
p36053
I76
VWildcardType: ?
p36054
tp36055
I1
s(g618
I42
g619
Vinsert
p36056
I32
VMethodInvocation
p36057
tp36058
I7
s(g2276
I42
g2277
Vinsert
p36059
I42
VSimpleName: ClassPathLoader
p36060
tp36061
I1
s(g1282
I42
g1283
Vinsert
p36062
I32
VMethodInvocation
p36063
tp36064
I3
s(g1578
I42
g1579
Vinsert
p36065
I45
VStringLiteral: "***       Unused stubs       ***"
p36066
tp36067
I1
s(g1726
I42
g1727
Vinsert
p36068
I42
VSimpleName: out
p36069
tp36070
I1
s(g1706
I42
g1707
Vinsert
p36071
I39
VPrimitiveType: void
p36072
tp36073
I1
s(g2775
I42
g2776
Vinsert
p36074
I42
VSimpleName: ResetTest
p36075
tp36076
I1
s(g16579
I42
g16580
Vinsert
p36077
I42
VSimpleName: mock
p36078
tp36079
I1
s(g9434
I42
g9435
Vinsert
p36080
I34
VNumberLiteral: 0
p36081
tp36082
I1
s(g16513
I42
g16514
Vinsert
p36083
I42
VSimpleName: e
p36084
tp36085
I2
s(g16
I42
g17
Vinsert
p36086
I43
VSimpleType: String
p36087
tp36088
I1
s(g2472
I42
g2473
Vinsert
p36089
I43
VSimpleType: TestMethodsFinder
p36090
tp36091
I1
s(g2657
I42
g2658
Vinsert
p36092
I21
VExpressionStatement
p36093
tp36094
I1
s(g1619
I42
g1620
Vinsert
p36095
I42
VSimpleName: should_know_mock
p36096
tp36097
I1
s(g613
I42
g614
Vinsert
p36098
I42
VSimpleName: argumentIndex
p36099
tp36100
I1
s(g9306
I42
g9307
Vinsert
p36101
I42
VSimpleName: inOrderMode
p36102
tp36103
I1
s(Vinsert
p36104
I42
VSimpleName: writeObject
p36105
Vinsert
p36106
I42
VSimpleName: ByteArrayOutputStream
p36107
tp36108
I5
s(g23051
I42
g23052
Vinsert
p36109
I42
VSimpleName: rule
p36110
tp36111
I1
s(g5105
I42
g5106
Vinsert
p36112
I43
VSimpleType: NotAMockException
p36113
tp36114
I1
s(g357
I42
g358
Vinsert
p36115
I42
VSimpleName: Class
p36116
tp36117
I1
s(g10802
I42
g10803
Vinsert
p36118
I43
VSimpleType: InvocationBuilder
p36119
tp36120
I1
s(g16897
I42
g16898
Vinsert
p36121
I41
VReturnStatement
p36122
tp36123
I4
s(g14412
I42
g14413
Vinsert
p36124
I42
VSimpleName: invocationListeners
p36125
tp36126
I1
s(g17232
I42
g17233
Vinsert
p36127
I27
VInfixExpression: ||
p36128
tp36129
I1
s(g11961
I42
g11962
Vinsert
p36130
I43
VSimpleType: Object
p36131
tp36132
I1
s(g6677
I42
g6678
Vinsert
p36133
I59
VVariableDeclarationFragment
p36134
tp36135
I1
s(g1563
I42
g1564
Vinsert
p36136
I42
VSimpleName: expectedInvocation
p36137
tp36138
I1
s(g2075
I42
g2076
Vinsert
p36139
I42
VSimpleName: some_behavior
p36140
tp36141
I3
s(g21
I42
g22
Vinsert
p36142
I21
VExpressionStatement
p36143
tp36144
I1
s(g6634
I42
g6635
Vinsert
p36145
I42
VSimpleName: mocking
p36146
tp36147
I2
s(g11659
I42
g11660
Vinsert
p36148
I43
VSimpleType: MockSettingsImpl
p36149
tp36150
I1
s(g8655
I42
g8656
Vinsert
p36151
I42
VSimpleName: Class
p36152
tp36153
I1
s(g14792
I42
g14793
Vinsert
p36154
I70
VEnhancedForStatement
p36155
tp36156
I6
s(g6247
I42
g6248
Vinsert
p36157
I42
VSimpleName: Mock
p36158
tp36159
I1
s(g3247
I42
g3248
Vinsert
p36160
I42
VSimpleName: f
p36161
tp36162
I4
s(g2010
I42
g2011
Vinsert
p36163
I43
VSimpleType: Verifier
p36164
tp36165
I1
s(g1282
I42
g1283
Vinsert
p36166
I42
VSimpleName: MockitoJUnit
p36167
tp36168
I2
s(g3969
I42
g3970
Vinsert
p36169
I43
VSimpleType: NumberOfInvocationsChecker
p36170
tp36171
I2
s(Vinsert
p36172
I42
VSimpleName: invokeSuper
p36173
Vinsert
p36174
I42
VSimpleName: answer
p36175
tp36176
I1
s(g8827
I42
g8828
Vinsert
p36177
I42
VSimpleName: Invocation
p36178
tp36179
I1
s(g4409
I42
g4410
Vinsert
p36180
I34
VNumberLiteral: 2
p36181
tp36182
I1
s(g2682
I42
g2683
Vinsert
p36183
I42
VSimpleName: isEmpty
p36184
tp36185
I1
s(g18914
I42
g18915
Vinsert
p36186
I42
VSimpleName: Returns
p36187
tp36188
I2
s(g7390
I42
g7391
Vinsert
p36189
I32
VMethodInvocation
p36190
tp36191
I3
s(g16744
I42
g16745
Vinsert
p36192
I42
VSimpleName: cls
p36193
tp36194
I4
s(g3021
I42
g3022
Vinsert
p36195
I42
VSimpleName: InvocationBuilder
p36196
tp36197
I2
s(g2886
I42
g2887
Vinsert
p36198
I42
VSimpleName: Throwable
p36199
tp36200
I2
s(g15733
I42
g15734
Vinsert
p36201
I42
VSimpleName: throwable
p36202
tp36203
I1
s(g12994
I42
g12995
Vinsert
p36204
I42
VSimpleName: verification
p36205
tp36206
I3
s(g16449
I42
g16450
Vinsert
p36207
I42
VSimpleName: line
p36208
tp36209
I2
s(g20093
I42
g20094
Vinsert
p36210
I14
VClassInstanceCreation
p36211
tp36212
I7
s(g8372
I42
g8373
Vinsert
p36213
I42
VSimpleName: varargCapturingMatcher
p36214
tp36215
I1
s(g1825
I42
g1826
Vinsert
p36216
I42
VSimpleName: expected
p36217
tp36218
I2
s(g2413
I42
g2414
Vinsert
p36219
I43
VSimpleType: Invocation
p36220
tp36221
I2
s(g9021
I42
g9022
Vinsert
p36222
I42
VSimpleName: rawComponentType
p36223
tp36224
I1
s(g2085
I42
g2086
Vinsert
p36225
I74
VParameterizedType: HashMap<Class<?>,Object>
p36226
tp36227
I1
s(g3969
I42
g3970
Vinsert
p36228
I25
VIfStatement
p36229
tp36230
I1
s(g7302
I42
g7303
Vinsert
p36231
I42
VSimpleName: Mockito
p36232
tp36233
I2
s(g9390
I42
g9391
Vinsert
p36234
I42
VSimpleName: tryGetPluginAnnotationEngine
p36235
tp36236
I1
s(g11699
I42
g11700
Vinsert
p36237
I43
VSimpleType: Object
p36238
tp36239
I2
s(g10415
I42
g10416
Vinsert
p36240
I42
VSimpleName: clazz
p36241
tp36242
I6
s(g10081
I42
g10082
Vinsert
p36243
I42
VSimpleName: ObjectOutputStream
p36244
tp36245
I4
s(g7351
I42
g7352
Vinsert
p36246
I42
VSimpleName: sig
p36247
tp36248
I1
s(g4335
I42
g4336
Vinsert
p36249
I32
VMethodInvocation
p36250
tp36251
I1
s(g28127
I42
g28128
Vinsert
p36252
I42
VSimpleName: MockCreationSettings
p36253
tp36254
I1
s(g17934
I42
g17935
Vinsert
p36255
I42
VSimpleName: mTwo
p36256
tp36257
I1
s(g11336
I42
g11337
Vinsert
p36258
I39
VPrimitiveType: int
p36259
tp36260
I1
s(g9053
I42
g9054
Vinsert
p36261
I42
VSimpleName: Contains
p36262
tp36263
I1
s(g8218
I42
g8219
Vinsert
p36264
I42
VSimpleName: StringBuilder
p36265
tp36266
I4
s(g737
I42
g738
Vinsert
p36267
I40
VQualifiedName: MockitoProperties.DEFAULT_RETURN_VALUES
p36268
tp36269
I2
s(g12304
I42
g12305
Vinsert
p36270
I74
VParameterizedType: LinkedList<Boolean>
p36271
tp36272
I1
s(g7329
I42
g7330
Vinsert
p36273
I42
VSimpleName: ignoreStubs
p36274
tp36275
I1
s(g1254
I42
g1255
Vinsert
p36276
I32
VMethodInvocation
p36277
tp36278
I1
s(g1105
I42
g1106
Vinsert
p36279
I43
VSimpleType: MockSettingsImpl
p36280
tp36281
I4
s(g15534
I42
g15535
Vinsert
p36282
I42
VSimpleName: getClass
p36283
tp36284
I1
s(g6162
I42
g6163
Vinsert
p36285
I42
VSimpleName: e
p36286
tp36287
I1
s(g14625
I42
g14626
Vinsert
p36288
I42
VSimpleName: LinkedList
p36289
tp36290
I1
s(g3468
I42
g3469
Vinsert
p36291
I74
VParameterizedType: Class<?>
p36292
tp36293
I2
s(g2490
I42
g2491
Vinsert
p36294
I37
VPostfixExpression: --
p36295
tp36296
I1
s(g6828
I42
g6829
Vinsert
p36297
I27
VInfixExpression: >
p36298
tp36299
I1
s(g5961
I42
g5962
Vinsert
p36300
I60
VVariableDeclarationStatement
p36301
tp36302
I1
s(g6468
I42
g6469
Vinsert
p36303
I8
VBlock
p36304
tp36305
I24
s(g12574
I42
g12575
Vinsert
p36306
I43
VSimpleType: DefaultMockitoConfiguration
p36307
tp36308
I1
s(g20107
I42
g20108
Vinsert
p36309
I40
VQualifiedName: org.mockito.Mockito.verify
p36310
tp36311
I1
s(g976
I42
g977
Vinsert
p36312
I11
VCastExpression
p36313
tp36314
I1
s(g3011
I42
g3012
Vinsert
p36315
I43
VSimpleType: Invocation
p36316
tp36317
I2
s(g3468
I42
g3469
Vinsert
p36318
I74
VParameterizedType: HashSet<Class<?>>
p36319
tp36320
I1
s(g2796
I42
g2797
Vinsert
p36321
I31
VMethodDeclaration
p36322
tp36323
I1
s(g8126
I42
g8127
Vinsert
p36324
I42
VSimpleName: assertThat
p36325
tp36326
I2
s(g16902
I42
g16903
Vinsert
p36327
I42
VSimpleName: MethodInterceptor
p36328
tp36329
I2
s(g5604
I42
g5605
Vinsert
p36330
I41
VReturnStatement
p36331
tp36332
I1
s(g12574
I42
g12575
Vinsert
p36333
I40
VQualifiedName: org.mockito.DefaultMockitoConfiguration
p36334
tp36335
I1
s(g2710
I42
g2711
Vinsert
p36336
I43
VSimpleType: NonPackagePrivateSubClass
p36337
tp36338
I1
s(g2826
I42
g2827
Vinsert
p36339
I42
VSimpleName: WithFinal
p36340
tp36341
I1
s(g2503
I42
g2504
Vinsert
p36342
I32
VMethodInvocation
p36343
tp36344
I2
s(g14566
I42
g14567
Vinsert
p36345
I42
VSimpleName: Test
p36346
tp36347
I1
s(g1388
I42
g1389
Vinsert
p36348
I32
VMethodInvocation
p36349
tp36350
I2
s(g2886
I42
g2887
Vinsert
p36351
I8
VBlock
p36352
tp36353
I2
s(g4768
I42
g4769
Vinsert
p36354
I74
VParameterizedType: MockHandler<?>
p36355
tp36356
I1
s(g2657
I42
g2658
Vinsert
p36357
I83
VModifier: final
p36358
tp36359
I2
s(g1312
I42
g1313
Vinsert
p36360
I83
VModifier: public
p36361
tp36362
I1
s(g1249
I42
g1250
Vinsert
p36363
I43
VSimpleType: NoTestsRemainException
p36364
tp36365
I5
s(g3735
I42
g3736
Vinsert
p36366
I43
VSimpleType: MockFeatures
p36367
tp36368
I1
s(g8931
I42
g8932
Vinsert
p36369
I45
VStringLiteral: "at com.FooTest:20"
p36370
tp36371
I1
s(g5290
I42
g5291
Vinsert
p36372
I42
VSimpleName: ArrayList
p36373
tp36374
I1
s(g332
I42
g333
Vinsert
p36375
I39
VPrimitiveType: void
p36376
tp36377
I1
s(g3021
I42
g3022
Vinsert
p36378
I43
VSimpleType: InvocationBuilder
p36379
tp36380
I2
s(g12362
I42
g12363
Vinsert
p36381
I42
VSimpleName: getMethod
p36382
tp36383
I1
s(g7521
I42
g7522
Vinsert
p36384
I42
VSimpleName: MockitoException
p36385
tp36386
I2
s(g2276
I42
g2277
Vinsert
p36387
I42
VSimpleName: nullDereference
p36388
tp36389
I1
s(g28323
I42
g28324
Vinsert
p36390
I55
VTypeDeclaration
p36391
tp36392
I1
s(g4895
I42
g4896
Vinsert
p36393
I42
VSimpleName: LinkedList
p36394
tp36395
I1
s(g32938
I42
g32939
Vinsert
p36396
I43
VSimpleType: Type
p36397
tp36398
I1
s(g11956
I42
g11957
Vinsert
p36399
I34
VNumberLiteral: 67.8
p36400
tp36401
I1
s(g12427
I42
g12428
Vinsert
p36402
I27
VInfixExpression: ==
p36403
tp36404
I1
s(Vinsert
p36405
I42
VSimpleName: appendText
p36406
Vinsert
p36407
I45
VStringLiteral: "xxx"
p36408
tp36409
I1
s(g6867
I42
g6868
Vinsert
p36410
I42
VSimpleName: unverified
p36411
tp36412
I1
s(g30298
I42
g30299
Vinsert
p36413
I42
VSimpleName: value
p36414
tp36415
I1
s(g8082
I42
g8083
Vinsert
p36416
I39
VPrimitiveType: void
p36417
tp36418
I1
s(Vinsert
p36419
I42
VSimpleName: verify
p36420
Vinsert
p36421
I45
VStringLiteral: "foo"
p36422
tp36423
I1
s(g6212
I42
g6213
Vinsert
p36424
I41
VReturnStatement
p36425
tp36426
I2
s(g13540
I42
g13541
Vinsert
p36427
I66
VTextElement:  the starting String
p36428
tp36429
I1
s(g16418
I42
g16419
Vinsert
p36430
I42
VSimpleName: paramTypes
p36431
tp36432
I1
s(g10609
I42
g10610
Vinsert
p36433
I11
VCastExpression
p36434
tp36435
I2
s(g9207
I42
g9208
Vinsert
p36436
I8
VBlock
p36437
tp36438
I2
s(g16677
I42
g16678
Vinsert
p36439
I78
VMarkerAnnotation
p36440
tp36441
I1
s(g5300
I42
g5301
Vinsert
p36442
I43
VSimpleType: ExceptionFactory
p36443
tp36444
I1
s(g5007
I42
g5008
Vinsert
p36445
I42
VSimpleName: fieldsFrom
p36446
tp36447
I1
s(g4425
I42
g4426
Vinsert
p36448
I43
VSimpleType: ArgumentCaptor
p36449
tp36450
I1
s(g224
I42
g225
Vinsert
p36451
I39
VPrimitiveType: void
p36452
tp36453
I1
s(g7544
I42
g7545
Vinsert
p36454
I42
VSimpleName: Reporter
p36455
tp36456
I1
s(g4973
I42
g4974
Vinsert
p36457
I36
VParenthesizedExpression
p36458
tp36459
I1
s(g3637
I42
g3638
Vinsert
p36460
I41
VReturnStatement
p36461
tp36462
I3
s(g20652
I42
g20653
Vinsert
p36463
I21
VExpressionStatement
p36464
tp36465
I1
s(g7356
I42
g7357
Vinsert
p36466
I9
VBooleanLiteral: true
p36467
tp36468
I1
s(g14336
I42
g14337
Vinsert
p36469
I60
VVariableDeclarationStatement
p36470
tp36471
I2
s(g2041
I42
g2042
Vinsert
p36472
I42
VSimpleName: WarningsPrinterImpl
p36473
tp36474
I1
s(g35283
I42
g35284
Vinsert
p36475
I45
VStringLiteral: "Mocks instantiated with constructor cannot be combined with "
p36476
tp36477
I1
s(g4730
I42
g4731
Vinsert
p36478
I39
VPrimitiveType: void
p36479
tp36480
I1
s(g473
I42
g474
Vinsert
p36481
I14
VClassInstanceCreation
p36482
tp36483
I5
s(g4051
I42
g4052
Vinsert
p36484
I42
VSimpleName: o
p36485
tp36486
I2
s(g5926
I42
g5927
Vinsert
p36487
I42
VSimpleName: e
p36488
tp36489
I1
s(g9473
I42
g9474
Vinsert
p36490
I42
VSimpleName: type
p36491
tp36492
I1
s(g2005
I42
g2006
Vinsert
p36493
I78
VMarkerAnnotation
p36494
tp36495
I1
s(g6468
I42
g6469
Vinsert
p36496
I42
VSimpleName: EnabledMockingInterfaceCloneMethodTest
p36497
tp36498
I1
s(g2026
I42
g2027
Vinsert
p36499
I74
VParameterizedType: ArgumentCaptor<LoggingListener>
p36500
tp36501
I1
s(g4817
I42
g4818
Vinsert
p36502
I42
VSimpleName: addAnswer
p36503
tp36504
I1
s(g8916
I42
g8917
Vinsert
p36505
I42
VSimpleName: ClassWithDodgyConstructor
p36506
tp36507
I2
s(g209
I42
g210
Vinsert
p36508
I42
VSimpleName: n
p36509
tp36510
I3
s(g6820
I42
g6821
Vinsert
p36511
I42
VSimpleName: InvocationWithMatchers
p36512
tp36513
I1
s(g1568
I42
g1569
Vinsert
p36514
I42
VSimpleName: RuntimeException
p36515
tp36516
I1
s(g6111
I42
g6112
Vinsert
p36517
I43
VSimpleType: Type
p36518
tp36519
I1
s(g1079
I42
g1080
Vinsert
p36520
I42
VSimpleName: accept
p36521
tp36522
I1
s(g3654
I42
g3655
Vinsert
p36523
I21
VExpressionStatement
p36524
tp36525
I4
s(g1244
I42
g1245
Vinsert
p36526
I42
VSimpleName: overrideCleansStackTrace
p36527
tp36528
I2
s(g1825
I42
g1826
Vinsert
p36529
I42
VSimpleName: Value
p36530
tp36531
I1
s(g1100
I42
g1101
Vinsert
p36532
I42
VSimpleName: mock
p36533
tp36534
I1
s(g2662
I42
g2663
Vinsert
p36535
I32
VMethodInvocation
p36536
tp36537
I5
s(g7329
I42
g7330
Vinsert
p36538
I42
VSimpleName: MOCKITO_CORE
p36539
tp36540
I1
s(g6035
I42
g6036
Vinsert
p36541
I57
VTypeLiteral
p36542
tp36543
I1
s(g3170
I42
g3171
Vinsert
p36544
I8
VBlock
p36545
tp36546
I1
s(g1853
I42
g1854
Vinsert
p36547
I42
VSimpleName: MethodVisitor
p36548
tp36549
I1
s(g9434
I42
g9435
Vinsert
p36550
I42
VSimpleName: tool
p36551
tp36552
I1
s(g13427
I42
g13428
Vinsert
p36553
I42
VSimpleName: InOrder
p36554
tp36555
I1
s(g12994
I42
g12995
Vinsert
p36556
I54
VTryStatement
p36557
tp36558
I17
s(g1264
I42
g1265
Vinsert
p36559
I42
VSimpleName: Invocation
p36560
tp36561
I1
s(g4212
I42
g4213
Vinsert
p36562
I22
VFieldAccess
p36563
tp36564
I1
s(g20722
I42
g20723
Vinsert
p36565
I42
VSimpleName: addInterfaces
p36566
tp36567
I1
s(g4497
I42
g4498
Vinsert
p36568
I24
VForStatement
p36569
tp36570
I1
s(g29068
I42
g29069
Vinsert
p36571
I42
VSimpleName: never
p36572
tp36573
I2
s(g7638
I42
g7639
Vinsert
p36574
I32
VMethodInvocation
p36575
tp36576
I3
s(g23292
I42
g23293
Vinsert
p36577
I42
VSimpleName: MockReturnValues
p36578
tp36579
I2
s(g9884
I42
g9885
Vinsert
p36580
I21
VExpressionStatement
p36581
tp36582
I2
s(g3209
I42
g3210
Vinsert
p36583
I42
VSimpleName: assertTrue
p36584
tp36585
I1
s(g18290
I42
g18291
Vinsert
p36586
I32
VMethodInvocation
p36587
tp36588
I10
s(g51
I42
g52
Vinsert
p36589
I32
VMethodInvocation
p36590
tp36591
I1
s(g14420
I42
g14421
Vinsert
p36592
I43
VSimpleType: T
p36593
tp36594
I1
s(g12561
I42
g12562
Vinsert
p36595
I59
VVariableDeclarationFragment
p36596
tp36597
I3
s(g2866
I42
g2867
Vinsert
p36598
I36
VParenthesizedExpression
p36599
tp36600
I1
s(g14902
I42
g14903
Vinsert
p36601
I23
VFieldDeclaration
p36602
tp36603
I4
s(g14642
I42
g14643
Vinsert
p36604
I42
VSimpleName: wantedCount
p36605
tp36606
I1
s(g7780
I42
g7781
Vinsert
p36607
I76
VWildcardType: ?
p36608
tp36609
I3
s(g3183
I42
g3184
Vinsert
p36610
I42
VSimpleName: field
p36611
tp36612
I6
s(g22880
I42
g22881
Vinsert
p36613
I62
VInstanceofExpression
p36614
tp36615
I1
s(g4740
I42
g4741
Vinsert
p36616
I22
VFieldAccess
p36617
tp36618
I1
s(Vinsert
p36619
I42
VSimpleName: verify
p36620
Vinsert
p36621
I42
VSimpleName: shouldNotVerifyStrictlyUnfamilarMocks
p36622
tp36623
I1
s(g6906
I42
g6907
Vinsert
p36624
I42
VSimpleName: shouldVerifyMethodWasInvokedExclusivelyWhenTwoMocksInUse
p36625
tp36626
I1
s(g3509
I42
g3510
Vinsert
p36627
I42
VSimpleName: field
p36628
tp36629
I1
s(g8931
I42
g8932
Vinsert
p36630
I32
VMethodInvocation
p36631
tp36632
I4
s(g2973
I42
g2974
Vinsert
p36633
I31
VMethodDeclaration
p36634
tp36635
I1
s(g11678
I42
g11679
Vinsert
p36636
I59
VVariableDeclarationFragment
p36637
tp36638
I4
s(g5421
I42
g5422
Vinsert
p36639
I21
VExpressionStatement
p36640
tp36641
I2
s(g7836
I42
g7837
Vinsert
p36642
I59
VVariableDeclarationFragment
p36643
tp36644
I1
s(g3021
I42
g3022
Vinsert
p36645
I42
VSimpleName: toInvocation
p36646
tp36647
I1
s(g6116
I42
g6117
Vinsert
p36648
I43
VSimpleType: LinkedHashSet
p36649
tp36650
I1
s(g6339
I42
g6340
Vinsert
p36651
I39
VPrimitiveType: void
p36652
tp36653
I1
s(Vinsert
p36654
I42
VSimpleName: initMocks
p36655
Vinsert
p36656
I42
VSimpleName: AnInjectedObject
p36657
tp36658
I1
s(g282
I42
g283
Vinsert
p36659
I85
VDimension
p36660
tp36661
I1
s(g2949
I42
g2950
Vinsert
p36662
I39
VPrimitiveType: boolean
p36663
tp36664
I1
s(g16240
I42
g16241
Vinsert
p36665
I32
VMethodInvocation
p36666
tp36667
I4
s(g4730
I42
g4731
Vinsert
p36668
I8
VBlock
p36669
tp36670
I2
s(g8242
I42
g8243
Vinsert
p36671
I42
VSimpleName: fieldGetter
p36672
tp36673
I1
s(g1760
I42
g1761
Vinsert
p36674
I42
VSimpleName: appendParameterBinder
p36675
tp36676
I1
s(g30184
I42
g30185
Vinsert
p36677
I27
VInfixExpression: !=
p36678
tp36679
I4
s(g13850
I42
g13851
Vinsert
p36680
I42
VSimpleName: handle
p36681
tp36682
I1
s(g5887
I42
g5888
Vinsert
p36683
I22
VFieldAccess
p36684
tp36685
I2
s(g7735
I42
g7736
Vinsert
p36686
I41
VReturnStatement
p36687
tp36688
I1
s(g1726
I42
g1727
Vinsert
p36689
I43
VSimpleType: DefaultImprovements
p36690
tp36691
I2
s(g13218
I42
g13219
Vinsert
p36692
I43
VSimpleType: CreationValidator
p36693
tp36694
I2
s(g7441
I42
g7442
Vinsert
p36695
I31
VMethodDeclaration
p36696
tp36697
I5
s(g4082
I42
g4083
Vinsert
p36698
I39
VPrimitiveType: void
p36699
tp36700
I5
s(g16663
I42
g16664
Vinsert
p36701
I45
VStringLiteral: ");\u005cn"
p36702
tp36703
I1
s(g11043
I42
g11044
Vinsert
p36704
I42
VSimpleName: Override
p36705
tp36706
I1
s(g2526
I42
g2527
Vinsert
p36707
I62
VInstanceofExpression
p36708
tp36709
I2
s(g2552
I42
g2553
Vinsert
p36710
I42
VSimpleName: verify
p36711
tp36712
I1
s(g1591
I42
g1592
Vinsert
p36713
I43
VSimpleType: InvocationMatcher
p36714
tp36715
I1
s(g11020
I42
g11021
Vinsert
p36716
I43
VSimpleType: Throwable
p36717
tp36718
I1
s(g2018
I42
g2019
Vinsert
p36719
I42
VSimpleName: String
p36720
tp36721
I8
s(g94
I42
g95
Vinsert
p36722
I54
VTryStatement
p36723
tp36724
I7
s(g5869
I42
g5870
Vinsert
p36725
I6
VAssertStatement
p36726
tp36727
I1
s(g8663
I42
g8664
Vinsert
p36728
I59
VVariableDeclarationFragment
p36729
tp36730
I1
s(g1219
I42
g1220
Vinsert
p36731
I42
VSimpleName: stubbings
p36732
tp36733
I1
s(g10257
I42
g10258
Vinsert
p36734
I42
VSimpleName: IllegalStateException
p36735
tp36736
I1
s(g367
I42
g368
Vinsert
p36737
I32
VMethodInvocation
p36738
tp36739
I2
s(g4072
I42
g4073
Vinsert
p36740
I42
VSimpleName: shouldResetOngoingStubbingOnInOrder
p36741
tp36742
I1
s(g633
I42
g634
Vinsert
p36743
I42
VSimpleName: shouldPrintUnstubbedInvocation
p36744
tp36745
I1
s(g10987
I42
g10988
Vinsert
p36746
I42
VSimpleName: Exception
p36747
tp36748
I1
s(g8696
I42
g8697
Vinsert
p36749
I42
VSimpleName: SequenceNumber
p36750
tp36751
I1
s(g16154
I42
g16155
Vinsert
p36752
I43
VSimpleType: TestClass
p36753
tp36754
I1
s(g6252
I42
g6253
Vinsert
p36755
I42
VSimpleName: buf
p36756
tp36757
I1
s(g3369
I42
g3370
Vinsert
p36758
I27
VInfixExpression: !=
p36759
tp36760
I1
s(g159
I42
g160
Vinsert
p36761
I83
VModifier: public
p36762
tp36763
I2
s(Vinsert
p36764
I42
VSimpleName: add
p36765
Vinsert
p36766
I57
VTypeLiteral
p36767
tp36768
I4
s(g801
I42
g802
Vinsert
p36769
I8
VBlock
p36770
tp36771
I2
s(g10609
I42
g10610
Vinsert
p36772
I41
VReturnStatement
p36773
tp36774
I7
s(g1750
I42
g1751
Vinsert
p36775
I42
VSimpleName: filterReturningEmptyArray
p36776
tp36777
I1
s(g14972
I42
g14973
Vinsert
p36778
I21
VExpressionStatement
p36779
tp36780
I1
s(g2170
I42
g2171
Vinsert
p36781
I43
VSimpleType: String
p36782
tp36783
I1
s(g1194
I42
g1195
Vinsert
p36784
I42
VSimpleName: expected
p36785
tp36786
I1
s(g3542
I42
g3543
Vinsert
p36787
I45
VStringLiteral: "Method '"
p36788
tp36789
I1
s(g1264
I42
g1265
Vinsert
p36790
I32
VMethodInvocation
p36791
tp36792
I4
s(g6379
I42
g6380
Vinsert
p36793
I42
VSimpleName: asList
p36794
tp36795
I1
s(g1398
I42
g1399
Vinsert
p36796
I42
VSimpleName: ListContainer
p36797
tp36798
I2
s(g6820
I42
g6821
Vinsert
p36799
I43
VSimpleType: InvocationWithMatchers
p36800
tp36801
I1
s(g2695
I42
g2696
Vinsert
p36802
I59
VVariableDeclarationFragment
p36803
tp36804
I8
s(g2000
I42
g2001
Vinsert
p36805
I8
VBlock
p36806
tp36807
I4
s(g12154
I42
g12155
Vinsert
p36808
I22
VFieldAccess
p36809
tp36810
I1
s(g1810
I42
g1811
Vinsert
p36811
I42
VSimpleName: FinalClass
p36812
tp36813
I1
s(g28323
I42
g28324
Vinsert
p36814
I42
VSimpleName: ConstructorInstantiatorTest
p36815
tp36816
I1
s(g23663
I42
g23664
Vinsert
p36817
I42
VSimpleName: shouldKnowToStringMethod
p36818
tp36819
I1
s(g5057
I42
g5058
Vinsert
p36820
I42
VSimpleName: InvocationTargetException
p36821
tp36822
I5
s(g3354
I42
g3355
Vinsert
p36823
I32
VMethodInvocation
p36824
tp36825
I7
s(g8663
I42
g8664
Vinsert
p36826
I39
VPrimitiveType: boolean
p36827
tp36828
I1
s(g11418
I42
g11419
Vinsert
p36829
I42
VSimpleName: withSettings
p36830
tp36831
I1
s(g6334
I42
g6335
Vinsert
p36832
I14
VClassInstanceCreation
p36833
tp36834
I1
s(g4934
I42
g4935
Vinsert
p36835
I39
VPrimitiveType: boolean
p36836
tp36837
I1
s(g5012
I42
g5013
Vinsert
p36838
I21
VExpressionStatement
p36839
tp36840
I3
s(g4168
I42
g4169
Vinsert
p36841
I31
VMethodDeclaration
p36842
tp36843
I1
s(g3688
I42
g3689
Vinsert
p36844
I23
VFieldDeclaration
p36845
tp36846
I1
s(g2256
I42
g2257
Vinsert
p36847
I42
VSimpleName: answers
p36848
tp36849
I2
s(g1599
I42
g1600
Vinsert
p36850
I43
VSimpleType: Object
p36851
tp36852
I1
s(g6212
I42
g6213
Vinsert
p36853
I42
VSimpleName: verifyingMode
p36854
tp36855
I2
s(g8757
I42
g8758
Vinsert
p36856
I32
VMethodInvocation
p36857
tp36858
I2
s(g16579
I42
g16580
Vinsert
p36859
I42
VSimpleName: shortie
p36860
tp36861
I2
s(g4282
I42
g4283
Vinsert
p36862
I14
VClassInstanceCreation
p36863
tp36864
I3
s(g1886
I42
g1887
Vinsert
p36865
I52
VThisExpression
p36866
tp36867
I1
s(g1347
I42
g1348
Vinsert
p36868
I32
VMethodInvocation
p36869
tp36870
I18
s(g11839
I42
g11840
Vinsert
p36871
I42
VSimpleName: Test
p36872
tp36873
I4
s(g2959
I42
g2960
Vinsert
p36874
I78
VMarkerAnnotation
p36875
tp36876
I1
s(g1069
I42
g1070
Vinsert
p36877
I42
VSimpleName: Answer
p36878
tp36879
I1
s(g5491
I42
g5492
Vinsert
p36880
I78
VMarkerAnnotation
p36881
tp36882
I1
s(g3843
I42
g3844
Vinsert
p36883
I40
VQualifiedName: SimplePerRealmReloadingClassLoader.ReloadClassPredicate
p36884
tp36885
I1
s(g8409
I42
g8410
Vinsert
p36886
I42
VSimpleName: on
p36887
tp36888
I1
s(g36
I42
g37
Vinsert
p36889
I39
VPrimitiveType: int
p36890
tp36891
I1
s(g6013
I42
g6014
Vinsert
p36892
I8
VBlock
p36893
tp36894
I3
s(g1513
I42
g1514
Vinsert
p36895
I25
VIfStatement
p36896
tp36897
I1
s(g4719
I42
g4720
Vinsert
p36898
I42
VSimpleName: isVarArgs
p36899
tp36900
I1
s(g8528
I42
g8529
Vinsert
p36901
I42
VSimpleName: MockCreationSettings
p36902
tp36903
I1
s(g3431
I42
g3432
Vinsert
p36904
I32
VMethodInvocation
p36905
tp36906
I1
s(g941
I42
g942
Vinsert
p36907
I41
VReturnStatement
p36908
tp36909
I1
s(g362
I42
g363
Vinsert
p36910
I42
VSimpleName: stubbings
p36911
tp36912
I2
s(g2606
I42
g2607
Vinsert
p36913
I42
VSimpleName: OnMethod
p36914
tp36915
I1
s(g11177
I42
g11178
Vinsert
p36916
I32
VMethodInvocation
p36917
tp36918
I2
s(g4539
I42
g4540
Vinsert
p36919
I42
VSimpleName: settings
p36920
tp36921
I2
s(g1701
I42
g1702
Vinsert
p36922
I42
VSimpleName: anyString
p36923
tp36924
I1
s(g2978
I42
g2979
Vinsert
p36925
I42
VSimpleName: Map
p36926
tp36927
I3
s(g16979
I42
g16980
Vinsert
p36928
I32
VMethodInvocation
p36929
tp36930
I7
s(g1164
I42
g1165
Vinsert
p36931
I78
VMarkerAnnotation
p36932
tp36933
I1
s(g4745
I42
g4746
Vinsert
p36934
I8
VBlock
p36935
tp36936
I3
s(g1886
I42
g1887
Vinsert
p36937
I33
VNullLiteral
p36938
tp36939
I1
s(g11839
I42
g11840
Vinsert
p36940
I83
VModifier: public
p36941
tp36942
I3
s(g22194
I42
g22195
Vinsert
p36943
I42
VSimpleName: ClassForMocking
p36944
tp36945
I4
s(g8401
I42
g8402
Vinsert
p36946
I8
VBlock
p36947
tp36948
I5
s(g1115
I42
g1116
Vinsert
p36949
I32
VMethodInvocation
p36950
tp36951
I1
s(g7867
I42
g7868
Vinsert
p36952
I42
VSimpleName: length
p36953
tp36954
I1
s(g7495
I42
g7496
Vinsert
p36955
I38
VPrefixExpression: !
p36956
tp36957
I1
s(g4466
I42
g4467
Vinsert
p36958
I42
VSimpleName: thenReturn
p36959
tp36960
I1
s(g9095
I42
g9096
Vinsert
p36961
I12
VCatchClause
p36962
tp36963
I1
s(g4082
I42
g4083
Vinsert
p36964
I1
VAnonymousClassDeclaration
p36965
tp36966
I1
s(g3091
I42
g3092
Vinsert
p36967
I21
VExpressionStatement
p36968
tp36969
I2
s(g5679
I42
g5680
Vinsert
p36970
I42
VSimpleName: thenReturn
p36971
tp36972
I1
s(g12890
I42
g12891
Vinsert
p36973
I57
VTypeLiteral
p36974
tp36975
I1
s(g1034
I42
g1035
Vinsert
p36976
I5
VArrayType: StackTraceElement[]
p36977
tp36978
I1
s(g8757
I42
g8758
Vinsert
p36979
I42
VSimpleName: MockitoException
p36980
tp36981
I1
s(g2616
I42
g2617
Vinsert
p36982
I42
VSimpleName: mockedType
p36983
tp36984
I1
s(g3935
I42
g3936
Vinsert
p36985
I40
VQualifiedName: org.mockito.internal.creation.instance.DefaultInstantiatorProvider
p36986
tp36987
I1
s(g14150
I42
g14151
Vinsert
p36988
I42
VSimpleName: JSONArray
p36989
tp36990
I2
s(g252
I42
g253
Vinsert
p36991
I42
VSimpleName: asList
p36992
tp36993
I1
s(g5874
I42
g5875
Vinsert
p36994
I42
VSimpleName: mock
p36995
tp36996
I3
s(g1092
I42
g1093
Vinsert
p36997
I42
VSimpleName: actualCount
p36998
tp36999
I2
s(g8237
I42
g8238
Vinsert
p37000
I42
VSimpleName: ClassCastException
p37001
tp37002
I1
s(g5133
I42
g5134
Vinsert
p37003
I43
VSimpleType: MethodVisitor
p37004
tp37005
I1
s(g7657
I42
g7658
Vinsert
p37006
I59
VVariableDeclarationFragment
p37007
tp37008
I1
s(g20652
I42
g20653
Vinsert
p37009
I42
VSimpleName: assertTrue
p37010
tp37011
I1
s(g15972
I42
g15973
Vinsert
p37012
I42
VSimpleName: when
p37013
tp37014
I1
s(g7572
I42
g7573
Vinsert
p37015
I8
VBlock
p37016
tp37017
I6
s(g1528
I42
g1529
Vinsert
p37018
I42
VSimpleName: String
p37019
tp37020
I12
s(g7735
I42
g7736
Vinsert
p37021
I42
VSimpleName: String
p37022
tp37023
I3
s(g20107
I42
g20108
Vinsert
p37024
I40
VQualifiedName: junit.framework.TestCase.assertNotSame
p37025
tp37026
I1
s(g13493
I42
g13494
Vinsert
p37027
I42
VSimpleName: Date
p37028
tp37029
I2
s(Vinsert
p37030
I42
VSimpleName: emptyValueFor
p37031
Vinsert
p37032
I43
VSimpleType: List
p37033
tp37034
I1
s(g1337
I42
g1338
Vinsert
p37035
I59
VVariableDeclarationFragment
p37036
tp37037
I3
s(g5986
I42
g5987
Vinsert
p37038
I60
VVariableDeclarationStatement
p37039
tp37040
I1
s(g10415
I42
g10416
Vinsert
p37041
I43
VSimpleType: Set
p37042
tp37043
I1
s(g25785
I42
g25786
Vinsert
p37044
I42
VSimpleName: answersForVoidMethod
p37045
tp37046
I1
s(g1074
I42
g1075
Vinsert
p37047
I42
VSimpleName: thenReturn
p37048
tp37049
I1
s(g267
I42
g268
Vinsert
p37050
I42
VSimpleName: calculator
p37051
tp37052
I1
s(g8103
I42
g8104
Vinsert
p37053
I42
VSimpleName: Before
p37054
tp37055
I2
s(g27029
I42
g27030
Vinsert
p37056
I21
VExpressionStatement
p37057
tp37058
I4
s(g10091
I42
g10092
Vinsert
p37059
I42
VSimpleName: access
p37060
tp37061
I1
s(g3601
I42
g3602
Vinsert
p37062
I60
VVariableDeclarationStatement
p37063
tp37064
I1
s(g4999
I42
g5000
Vinsert
p37065
I40
VQualifiedName: args.length
p37066
tp37067
I1
s(g1660
I42
g1661
Vinsert
p37068
I42
VSimpleName: Override
p37069
tp37070
I2
s(g4001
I42
g4002
Vinsert
p37071
I12
VCatchClause
p37072
tp37073
I1
s(g16823
I42
g16824
Vinsert
p37074
I42
VSimpleName: Boo
p37075
tp37076
I1
s(g7177
I42
g7178
Vinsert
p37077
I46
VSuperConstructorInvocation
p37078
tp37079
I4
s(g12536
I42
g12537
Vinsert
p37080
I14
VClassInstanceCreation
p37081
tp37082
I3
s(g7356
I42
g7357
Vinsert
p37083
I31
VMethodDeclaration
p37084
tp37085
I3
s(g24736
I42
g24737
Vinsert
p37086
I42
VSimpleName: d
p37087
tp37088
I1
s(g5554
I42
g5555
Vinsert
p37089
I42
VSimpleName: invocations
p37090
tp37091
I2
s(g12221
I42
g12222
Vinsert
p37092
I42
VSimpleName: Mock
p37093
tp37094
I1
s(g2652
I42
g2653
Vinsert
p37095
I42
VSimpleName: v
p37096
tp37097
I1
s(g6736
I42
g6737
Vinsert
p37098
I59
VVariableDeclarationFragment
p37099
tp37100
I1
s(g1482
I42
g1483
Vinsert
p37101
I42
VSimpleName: Invocation
p37102
tp37103
I1
s(g11043
I42
g11044
Vinsert
p37104
I42
VSimpleName: Plugins
p37105
tp37106
I1
s(g5491
I42
g5492
Vinsert
p37107
I83
VModifier: public
p37108
tp37109
I2
s(g1919
I42
g1920
Vinsert
p37110
I27
VInfixExpression: ==
p37111
tp37112
I1
s(g12872
I42
g12873
Vinsert
p37113
I42
VSimpleName: Exception
p37114
tp37115
I2
s(g22194
I42
g22195
Vinsert
p37116
I42
VSimpleName: clazzMock
p37117
tp37118
I2
s(g7263
I42
g7264
Vinsert
p37119
I80
VMemberValuePair
p37120
tp37121
I1
s(g119
I42
g120
Vinsert
p37122
I52
VThisExpression
p37123
tp37124
I1
s(g8746
I42
g8747
Vinsert
p37125
I42
VSimpleName: verified
p37126
tp37127
I1
s(g30351
I42
g30352
Vinsert
p37128
I42
VSimpleName: assertEquals
p37129
tp37130
I1
s(g1627
I42
g1628
Vinsert
p37131
I32
VMethodInvocation
p37132
tp37133
I1
s(g1820
I42
g1821
Vinsert
p37134
I22
VFieldAccess
p37135
tp37136
I2
s(g8724
I42
g8725
Vinsert
p37137
I42
VSimpleName: cw
p37138
tp37139
I3
s(g1843
I42
g1844
Vinsert
p37140
I42
VSimpleName: list
p37141
tp37142
I1
s(g5206
I42
g5207
Vinsert
p37143
I40
VQualifiedName: Constants.ACC_PUBLIC
p37144
tp37145
I1
s(g1317
I42
g1318
Vinsert
p37146
I44
VSingleVariableDeclaration
p37147
tp37148
I4
s(g247
I42
g248
Vinsert
p37149
I41
VReturnStatement
p37150
tp37151
I6
s(g6786
I42
g6787
Vinsert
p37152
I59
VVariableDeclarationFragment
p37153
tp37154
I1
s(g13905
I42
g13906
Vinsert
p37155
I43
VSimpleType: Object
p37156
tp37157
I1
s(g7302
I42
g7303
Vinsert
p37158
I42
VSimpleName: mock
p37159
tp37160
I2
s(g722
I42
g723
Vinsert
p37161
I43
VSimpleType: T
p37162
tp37163
I1
s(g3390
I42
g3391
Vinsert
p37164
I42
VSimpleName: arguments
p37165
tp37166
I1
s(g558
I42
g559
Vinsert
p37167
I43
VSimpleType: InstantiatorProvider
p37168
tp37169
I1
s(g2118
I42
g2119
Vinsert
p37170
I42
VSimpleName: isAssignableFromWrapper
p37171
tp37172
I1
s(g3704
I42
g3705
Vinsert
p37173
I42
VSimpleName: name
p37174
tp37175
I1
s(g4730
I42
g4731
Vinsert
p37176
I32
VMethodInvocation
p37177
tp37178
I7
s(g1431
I42
g1432
Vinsert
p37179
I43
VSimpleType: List
p37180
tp37181
I1
s(g28095
I42
g28096
Vinsert
p37182
I42
VSimpleName: getHeadline
p37183
tp37184
I2
s(g3374
I42
g3375
Vinsert
p37185
I78
VMarkerAnnotation
p37186
tp37187
I4
s(g6069
I42
g6070
Vinsert
p37188
I42
VSimpleName: mock
p37189
tp37190
I2
s(g7081
I42
g7082
Vinsert
p37191
I42
VSimpleName: Test
p37192
tp37193
I1
s(g8146
I42
g8147
Vinsert
p37194
I78
VMarkerAnnotation
p37195
tp37196
I1
s(g1493
I42
g1494
Vinsert
p37197
I27
VInfixExpression: ==
p37198
tp37199
I3
s(g9649
I42
g9650
Vinsert
p37200
I42
VSimpleName: Number
p37201
tp37202
I1
s(g9649
I42
g9650
Vinsert
p37203
I42
VSimpleName: assertThat
p37204
tp37205
I1
s(g14625
I42
g14626
Vinsert
p37206
I43
VSimpleType: LinkedList
p37207
tp37208
I1
s(g5461
I42
g5462
Vinsert
p37209
I32
VMethodInvocation
p37210
tp37211
I2
s(g10762
I42
g10763
Vinsert
p37212
I57
VTypeLiteral
p37213
tp37214
I1
s(g1164
I42
g1165
Vinsert
p37215
I31
VMethodDeclaration
p37216
tp37217
I1
s(g8314
I42
g8315
Vinsert
p37218
I33
VNullLiteral
p37219
tp37220
I1
s(g1254
I42
g1255
Vinsert
p37221
I5
VArrayType: Class<?>[]
p37222
tp37223
I1
s(g2472
I42
g2473
Vinsert
p37224
I42
VSimpleName: shouldKnowWhenClassHasTests
p37225
tp37226
I1
s(g1372
I42
g1373
Vinsert
p37227
I42
VSimpleName: results
p37228
tp37229
I1
s(g3078
I42
g3079
Vinsert
p37230
I27
VInfixExpression: !=
p37231
tp37232
I1
s(g9884
I42
g9885
Vinsert
p37233
I54
VTryStatement
p37234
tp37235
I1
s(g11460
I42
g11461
Vinsert
p37236
I40
VQualifiedName: Boolean.FALSE
p37237
tp37238
I1
s(g14754
I42
g14755
Vinsert
p37239
I42
VSimpleName: StackTraceFilter
p37240
tp37241
I2
s(g3288
I42
g3289
Vinsert
p37242
I42
VSimpleName: InvocationBuilder
p37243
tp37244
I1
s(g9105
I42
g9106
Vinsert
p37245
I43
VSimpleType: MockMethodDispatcher
p37246
tp37247
I1
s(g4377
I42
g4378
Vinsert
p37248
I42
VSimpleName: location
p37249
tp37250
I2
s(g4335
I42
g4336
Vinsert
p37251
I40
VQualifiedName: ClassWriter.FLOAT
p37252
tp37253
I1
s(g7836
I42
g7837
Vinsert
p37254
I42
VSimpleName: builder
p37255
tp37256
I2
s(g1670
I42
g1671
Vinsert
p37257
I43
VSimpleType: InOrderContextImpl
p37258
tp37259
I1
s(g8716
I42
g8717
Vinsert
p37260
I59
VVariableDeclarationFragment
p37261
tp37262
I1
s(g29542
I42
g29543
Vinsert
p37263
I42
VSimpleName: shouldScreamWhenMatchersNull
p37264
tp37265
I1
s(g5887
I42
g5888
Vinsert
p37266
I32
VMethodInvocation
p37267
tp37268
I4
s(g4466
I42
g4467
Vinsert
p37269
I45
VStringLiteral: "ok"
p37270
tp37271
I1
s(g262
I42
g263
Vinsert
p37272
I42
VSimpleName: type
p37273
tp37274
I2
s(g5078
I42
g5079
Vinsert
p37275
I42
VSimpleName: String
p37276
tp37277
I2
s(g21765
I42
g21766
Vinsert
p37278
I43
VSimpleType: DummyInterface
p37279
tp37280
I1
s(g1403
I42
g1404
Vinsert
p37281
I43
VSimpleType: MethodsImpl
p37282
tp37283
I1
s(g1312
I42
g1313
Vinsert
p37284
I32
VMethodInvocation
p37285
tp37286
I14
s(g9739
I42
g9740
Vinsert
p37287
I43
VSimpleType: ThrowableAssert
p37288
tp37289
I1
s(g7022
I42
g7023
Vinsert
p37290
I42
VSimpleName: Throwable
p37291
tp37292
I1
s(g28590
I42
g28591
Vinsert
p37293
I43
VSimpleType: HasStackTrace
p37294
tp37295
I2
s(g12304
I42
g12305
Vinsert
p37296
I42
VSimpleName: Queue
p37297
tp37298
I1
s(g6387
I42
g6388
Vinsert
p37299
I40
VQualifiedName: MockMethodInterceptor.ForHashCode
p37300
tp37301
I1
s(g6841
I42
g6842
Vinsert
p37302
I42
VSimpleName: firstChunk
p37303
tp37304
I2
s(g7582
I42
g7583
Vinsert
p37305
I42
VSimpleName: verificationMode
p37306
tp37307
I1
s(g3257
I42
g3258
Vinsert
p37308
I42
VSimpleName: assertThat
p37309
tp37310
I1
s(g1493
I42
g1494
Vinsert
p37311
I32
VMethodInvocation
p37312
tp37313
I4
s(g9491
I42
g9492
Vinsert
p37314
I42
VSimpleName: actual
p37315
tp37316
I2
s(g686
I42
g687
Vinsert
p37317
I42
VSimpleName: spy
p37318
tp37319
I2
s(g727
I42
g728
Vinsert
p37320
I21
VExpressionStatement
p37321
tp37322
I1
s(g760
I42
g761
Vinsert
p37323
I42
VSimpleName: Failure
p37324
tp37325
I1
s(g11640
I42
g11641
Vinsert
p37326
I42
VSimpleName: control
p37327
tp37328
I1
s(g11686
I42
g11687
Vinsert
p37329
I42
VSimpleName: throwableType
p37330
tp37331
I1
s(g1194
I42
g1195
Vinsert
p37332
I42
VSimpleName: NoInteractionsWanted
p37333
tp37334
I1
s(g6846
I42
g6847
Vinsert
p37335
I42
VSimpleName: target
p37336
tp37337
I1
s(g9739
I42
g9740
Vinsert
p37338
I42
VSimpleName: String
p37339
tp37340
I9
s(g1919
I42
g1920
Vinsert
p37341
I36
VParenthesizedExpression
p37342
tp37343
I1
s(g19510
I42
g19511
Vinsert
p37344
I32
VMethodInvocation
p37345
tp37346
I1
s(g9865
I42
g9866
Vinsert
p37347
I42
VSimpleName: MockitoAnnotations
p37348
tp37349
I1
s(g5839
I42
g5840
Vinsert
p37350
I42
VSimpleName: mockMethod
p37351
tp37352
I2
s(g6116
I42
g6117
Vinsert
p37353
I44
VSingleVariableDeclaration
p37354
tp37355
I1
s(g10659
I42
g10660
Vinsert
p37356
I43
VSimpleType: TestClassThatHoldValidField
p37357
tp37358
I2
s(g7906
I42
g7907
Vinsert
p37359
I42
VSimpleName: description
p37360
tp37361
I1
s(g6
I42
g7
Vinsert
p37362
I42
VSimpleName: Object
p37363
tp37364
I6
s(g7096
I42
g7097
Vinsert
p37365
I16
VConditionalExpression
p37366
tp37367
I1
s(g10777
I42
g10778
Vinsert
p37368
I42
VSimpleName: CodeEmitter
p37369
tp37370
I1
s(g14483
I42
g14484
Vinsert
p37371
I41
VReturnStatement
p37372
tp37373
I1
s(g10688
I42
g10689
Vinsert
p37374
I25
VIfStatement
p37375
tp37376
I1
s(g10415
I42
g10416
Vinsert
p37377
I43
VSimpleType: Field
p37378
tp37379
I8
s(g5456
I42
g5457
Vinsert
p37380
I83
VModifier: public
p37381
tp37382
I5
s(g2374
I42
g2375
Vinsert
p37383
I1
VAnonymousClassDeclaration
p37384
tp37385
I1
s(g896
I42
g897
Vinsert
p37386
I8
VBlock
p37387
tp37388
I2
s(g13622
I42
g13623
Vinsert
p37389
I42
VSimpleName: ReturnValues
p37390
tp37391
I2
s(g9323
I42
g9324
Vinsert
p37392
I42
VSimpleName: times
p37393
tp37394
I1
s(g9429
I42
g9430
Vinsert
p37395
I57
VTypeLiteral
p37396
tp37397
I3
s(g16592
I42
g16593
Vinsert
p37398
I43
VSimpleType: StackTraceFilter
p37399
tp37400
I4
s(g149
I42
g150
Vinsert
p37401
I42
VSimpleName: Long
p37402
tp37403
I1
s(g20230
I42
g20231
Vinsert
p37404
I42
VSimpleName: getClassName
p37405
tp37406
I1
s(g6669
I42
g6670
Vinsert
p37407
I42
VSimpleName: assertNotNull
p37408
tp37409
I2
s(g16579
I42
g16580
Vinsert
p37410
I39
VPrimitiveType: void
p37411
tp37412
I1
s(g11325
I42
g11326
Vinsert
p37413
I9
VBooleanLiteral: false
p37414
tp37415
I1
s(g10567
I42
g10568
Vinsert
p37416
I42
VSimpleName: Class
p37417
tp37418
I1
s(g302
I42
g303
Vinsert
p37419
I43
VSimpleType: HashSet
p37420
tp37421
I2
s(g9460
I42
g9461
Vinsert
p37422
I42
VSimpleName: getName
p37423
tp37424
I3
s(g30629
I42
g30630
Vinsert
p37425
I43
VSimpleType: OngoingStubbing
p37426
tp37427
I1
s(Vinsert
p37428
I42
VSimpleName: instance
p37429
Vinsert
p37430
I42
VSimpleName: instance
p37431
tp37432
I7
s(g4143
I42
g4144
Vinsert
p37433
I42
VSimpleName: assertFalse
p37434
tp37435
I2
s(g2861
I42
g2862
Vinsert
p37436
I42
VSimpleName: cleanUpConfigInAnyCase
p37437
tp37438
I1
s(g9560
I42
g9561
Vinsert
p37439
I32
VMethodInvocation
p37440
tp37441
I5
s(g17934
I42
g17935
Vinsert
p37442
I43
VSimpleType: InvocationBuilder
p37443
tp37444
I1
s(g9734
I42
g9735
Vinsert
p37445
I45
VStringLiteral: "' saying : "
p37446
tp37447
I1
s(g11263
I42
g11264
Vinsert
p37448
I52
VThisExpression
p37449
tp37450
I1
s(g6752
I42
g6753
Vinsert
p37451
I42
VSimpleName: e
p37452
tp37453
I1
s(g9884
I42
g9885
Vinsert
p37454
I43
VSimpleType: Throwable
p37455
tp37456
I1
s(g5575
I42
g5576
Vinsert
p37457
I42
VSimpleName: allowers
p37458
tp37459
I1
s(g8778
I42
g8779
Vinsert
p37460
I40
VQualifiedName: ClassImposterizer.INSTANCE
p37461
tp37462
I3
s(g12769
I42
g12770
Vinsert
p37463
I43
VSimpleType: Object
p37464
tp37465
I4
s(g12287
I42
g12288
Vinsert
p37466
I42
VSimpleName: failureRecorder
p37467
tp37468
I1
s(g9560
I42
g9561
Vinsert
p37469
I31
VMethodDeclaration
p37470
tp37471
I1
s(g2503
I42
g2504
Vinsert
p37472
I33
VNullLiteral
p37473
tp37474
I1
s(g7248
I42
g7249
Vinsert
p37475
I42
VSimpleName: IllegalArgumentException
p37476
tp37477
I1
s(g6791
I42
g6792
Vinsert
p37478
I42
VSimpleName: name
p37479
tp37480
I1
s(g453
I42
g454
Vinsert
p37481
I42
VSimpleName: Exception
p37482
tp37483
I1
s(g7638
I42
g7639
Vinsert
p37484
I21
VExpressionStatement
p37485
tp37486
I2
s(g23389
I42
g23390
Vinsert
p37487
I42
VSimpleName: expected
p37488
tp37489
I1
s(g5839
I42
g5840
Vinsert
p37490
I32
VMethodInvocation
p37491
tp37492
I5
s(g3570
I42
g3571
Vinsert
p37493
I74
VParameterizedType: Comparable<?>
p37494
tp37495
I1
s(g8533
I42
g8534
Vinsert
p37496
I42
VSimpleName: MockitoState
p37497
tp37498
I1
s(g2667
I42
g2668
Vinsert
p37499
I43
VSimpleType: VerificationMode
p37500
tp37501
I4
s(g2844
I42
g2845
Vinsert
p37502
I42
VSimpleName: toBePrintedVerbosely
p37503
tp37504
I1
s(g7790
I42
g7791
Vinsert
p37505
I59
VVariableDeclarationFragment
p37506
tp37507
I1
s(g4871
I42
g4872
Vinsert
p37508
I44
VSingleVariableDeclaration
p37509
tp37510
I1
s(g961
I42
g962
Vinsert
p37511
I43
VSimpleType: Object
p37512
tp37513
I2
s(g23284
I42
g23285
Vinsert
p37514
I43
VSimpleType: Serializable
p37515
tp37516
I1
s(g3777
I42
g3778
Vinsert
p37517
I22
VFieldAccess
p37518
tp37519
I7
s(g7356
I42
g7357
Vinsert
p37520
I61
VWhileStatement
p37521
tp37522
I1
s(g7062
I42
g7063
Vinsert
p37523
I42
VSimpleName: never
p37524
tp37525
I1
s(g3704
I42
g3705
Vinsert
p37526
I59
VVariableDeclarationFragment
p37527
tp37528
I1
s(g10889
I42
g10890
Vinsert
p37529
I34
VNumberLiteral: 1
p37530
tp37531
I2
s(g4638
I42
g4639
Vinsert
p37532
I42
VSimpleName: RETURNS_SMART_NULLS
p37533
tp37534
I2
s(g10081
I42
g10082
Vinsert
p37535
I43
VSimpleType: FileOutputStream
p37536
tp37537
I1
s(Vinsert
p37538
I42
VSimpleName: add
p37539
Vinsert
p37540
I54
VTryStatement
p37541
tp37542
I1
s(g12427
I42
g12428
Vinsert
p37543
I41
VReturnStatement
p37544
tp37545
I1
s(g856
I42
g857
Vinsert
p37546
I42
VSimpleName: result
p37547
tp37548
I3
s(g21691
I42
g21692
Vinsert
p37549
I42
VSimpleName: varArgsCount
p37550
tp37551
I1
s(g1352
I42
g1353
Vinsert
p37552
I42
VSimpleName: event
p37553
tp37554
I6
s(g3621
I42
g3622
Vinsert
p37555
I27
VInfixExpression: !=
p37556
tp37557
I1
s(g9045
I42
g9046
Vinsert
p37558
I40
VQualifiedName: v.size
p37559
tp37560
I1
s(g20934
I42
g20935
Vinsert
p37561
I45
VStringLiteral: "Unable to create instance of '"
p37562
tp37563
I1
s(g13447
I42
g13448
Vinsert
p37564
I43
VSimpleType: List
p37565
tp37566
I2
s(g10015
I42
g10016
Vinsert
p37567
I42
VSimpleName: toInvocation
p37568
tp37569
I1
s(g1307
I42
g1308
Vinsert
p37570
I42
VSimpleName: getConfig
p37571
tp37572
I1
s(g10777
I42
g10778
Vinsert
p37573
I42
VSimpleName: Type
p37574
tp37575
I1
s(g10032
I42
g10033
Vinsert
p37576
I42
VSimpleName: switcher
p37577
tp37578
I1
s(g2518
I42
g2519
Vinsert
p37579
I43
VSimpleType: AnswerFunctionalInterfaces.VoidAnswer3
p37580
tp37581
I1
s(g5570
I42
g5571
Vinsert
p37582
I42
VSimpleName: matchesButNotMethodDeclaredClass
p37583
tp37584
I1
s(g12097
I42
g12098
Vinsert
p37585
I42
VSimpleName: notAMockPassedToVerify
p37586
tp37587
I1
s(g8319
I42
g8320
Vinsert
p37588
I42
VSimpleName: MockitoBehavior
p37589
tp37590
I2
s(g14245
I42
g14246
Vinsert
p37591
I42
VSimpleName: m
p37592
tp37593
I1
s(g25131
I42
g25132
Vinsert
p37594
I42
VSimpleName: shouldValidateSpy
p37595
tp37596
I1
s(g327
I42
g328
Vinsert
p37597
I21
VExpressionStatement
p37598
tp37599
I1
s(g891
I42
g892
Vinsert
p37600
I42
VSimpleName: NeverWantedButInvoked
p37601
tp37602
I1
s(g3758
I42
g3759
Vinsert
p37603
I42
VSimpleName: OrderOfInvocationsVerifier
p37604
tp37605
I1
s(g5151
I42
g5152
Vinsert
p37606
I42
VSimpleName: MockitoGenericMetadata
p37607
tp37608
I2
s(g25802
I42
g25803
Vinsert
p37609
I42
VSimpleName: wanted
p37610
tp37611
I1
s(g6024
I42
g6025
Vinsert
p37612
I43
VSimpleType: Object
p37613
tp37614
I1
s(g1726
I42
g1727
Vinsert
p37615
I14
VClassInstanceCreation
p37616
tp37617
I1
s(g1987
I42
g1988
Vinsert
p37618
I42
VSimpleName: Exception
p37619
tp37620
I1
s(g16587
I42
g16588
Vinsert
p37621
I43
VSimpleType: NoSuchMethodException
p37622
tp37623
I1
s(g603
I42
g604
Vinsert
p37624
I42
VSimpleName: should_not_redefine_MockName_if_surrogate
p37625
tp37626
I1
s(g2266
I42
g2267
Vinsert
p37627
I42
VSimpleName: Exception
p37628
tp37629
I1
s(g8808
I42
g8809
Vinsert
p37630
I8
VBlock
p37631
tp37632
I1
s(g2993
I42
g2994
Vinsert
p37633
I42
VSimpleName: List
p37634
tp37635
I1
s(g6143
I42
g6144
Vinsert
p37636
I42
VSimpleName: behavior
p37637
tp37638
I2
s(g11012
I42
g11013
Vinsert
p37639
I42
VSimpleName: failure
p37640
tp37641
I5
s(g2452
I42
g2453
Vinsert
p37642
I21
VExpressionStatement
p37643
tp37644
I2
s(g1254
I42
g1255
Vinsert
p37645
I43
VSimpleType: Class
p37646
tp37647
I1
s(g2508
I42
g2509
Vinsert
p37648
I42
VSimpleName: generateClass
p37649
tp37650
I1
s(g20813
I42
g20814
Vinsert
p37651
I42
VSimpleName: neverWantedButInvoked
p37652
tp37653
I1
s(g7539
I42
g7540
Vinsert
p37654
I43
VSimpleType: Type
p37655
tp37656
I1
s(g16189
I42
g16190
Vinsert
p37657
I83
VModifier: public
p37658
tp37659
I1
s(g7883
I42
g7884
Vinsert
p37660
I42
VSimpleName: overloadedDifferentMethod
p37661
tp37662
I1
s(Vinsert
p37663
I42
VSimpleName: getAllInvocations
p37664
Vinsert
p37665
I7
VAssignment: =
p37666
tp37667
I3
s(g9860
I42
g9861
Vinsert
p37668
I42
VSimpleName: getReturnType
p37669
tp37670
I3
s(g13905
I42
g13906
Vinsert
p37671
I42
VSimpleName: instance
p37672
tp37673
I1
s(g7939
I42
g7940
Vinsert
p37674
I42
VSimpleName: getMock
p37675
tp37676
I2
s(g15147
I42
g15148
Vinsert
p37677
I42
VSimpleName: p
p37678
tp37679
I1
s(g3170
I42
g3171
Vinsert
p37680
I25
VIfStatement
p37681
tp37682
I1
s(g1780
I42
g1781
Vinsert
p37683
I39
VPrimitiveType: void
p37684
tp37685
I1
s(g7696
I42
g7697
Vinsert
p37686
I83
VModifier: public
p37687
tp37688
I1
s(Vinsert
p37689
I42
VSimpleName: toInvocation
p37690
Vinsert
p37691
I42
VSimpleName: shouldFindLastInvocationWhenModeIsOneTimeStrictly
p37692
tp37693
I1
s(g4763
I42
g4764
Vinsert
p37694
I42
VSimpleName: decode
p37695
tp37696
I1
s(g2261
I42
g2262
Vinsert
p37697
I43
VSimpleType: RuntimeExceptionVerificationMode
p37698
tp37699
I1
s(g9716
I42
g9717
Vinsert
p37700
I42
VSimpleName: getReturnType
p37701
tp37702
I1
s(g8553
I42
g8554
Vinsert
p37703
I8
VBlock
p37704
tp37705
I2
s(g10794
I42
g10795
Vinsert
p37706
I27
VInfixExpression: ==
p37707
tp37708
I1
s(g13694
I42
g13695
Vinsert
p37709
I43
VSimpleType: Throwable
p37710
tp37711
I1
s(g11691
I42
g11692
Vinsert
p37712
I43
VSimpleType: OtherClass
p37713
tp37714
I1
s(g6233
I42
g6234
Vinsert
p37715
I74
VParameterizedType: List<T>
p37716
tp37717
I1
s(g760
I42
g761
Vinsert
p37718
I8
VBlock
p37719
tp37720
I1
s(g7472
I42
g7473
Vinsert
p37721
I42
VSimpleName: typeToMock
p37722
tp37723
I2
s(g1655
I42
g1656
Vinsert
p37724
I42
VSimpleName: getMethod
p37725
tp37726
I1
s(g9139
I42
g9140
Vinsert
p37727
I42
VSimpleName: InOrder
p37728
tp37729
I8
s(g20012
I42
g20013
Vinsert
p37730
I43
VSimpleType: Class
p37731
tp37732
I3
s(g1462
I42
g1463
Vinsert
p37733
I8
VBlock
p37734
tp37735
I7
s(g4461
I42
g4462
Vinsert
p37736
I8
VBlock
p37737
tp37738
I1
s(g3219
I42
g3220
Vinsert
p37739
I11
VCastExpression
p37740
tp37741
I1
s(g5789
I42
g5790
Vinsert
p37742
I21
VExpressionStatement
p37743
tp37744
I2
s(g8729
I42
g8730
Vinsert
p37745
I32
VMethodInvocation
p37746
tp37747
I1
s(g12231
I42
g12232
Vinsert
p37748
I42
VSimpleName: name
p37749
tp37750
I1
s(g12804
I42
g12805
Vinsert
p37751
I40
VQualifiedName: org.mockito.internal.configuration.plugins.Plugins
p37752
tp37753
I1
s(g9606
I42
g9607
Vinsert
p37754
I42
VSimpleName: asList
p37755
tp37756
I3
s(g154
I42
g155
Vinsert
p37757
I59
VVariableDeclarationFragment
p37758
tp37759
I1
s(g2085
I42
g2086
Vinsert
p37760
I43
VSimpleType: HashMap
p37761
tp37762
I1
s(g6502
I42
g6503
Vinsert
p37763
I83
VModifier: public
p37764
tp37765
I1
s(g2286
I42
g2287
Vinsert
p37766
I83
VModifier: public
p37767
tp37768
I2
s(g3704
I42
g3705
Vinsert
p37769
I32
VMethodInvocation
p37770
tp37771
I2
s(g583
I42
g584
Vinsert
p37772
I42
VSimpleName: wanted
p37773
tp37774
I2
s(g573
I42
g574
Vinsert
p37775
I65
VTagElement: @param
p37776
tp37777
I1
s(g1992
I42
g1993
Vinsert
p37778
I45
VStringLiteral: "You haven't provided the instance for spying at field declaration so I tried to construct the instance."
p37779
tp37780
I1
s(g10916
I42
g10917
Vinsert
p37781
I42
VSimpleName: shouldInstantiateExceptionClassWithOngoingStubbingOnInteraction
p37782
tp37783
I1
s(g21977
I42
g21978
Vinsert
p37784
I42
VSimpleName: d
p37785
tp37786
I3
s(g247
I42
g248
Vinsert
p37787
I43
VSimpleType: InvocationOnMock
p37788
tp37789
I4
s(g9901
I42
g9902
Vinsert
p37790
I42
VSimpleName: prettify
p37791
tp37792
I1
s(g19469
I42
g19470
Vinsert
p37793
I3
VArrayCreation
p37794
tp37795
I1
s(g1467
I42
g1468
Vinsert
p37796
I42
VSimpleName: stubbedInvocations
p37797
tp37798
I1
s(g4871
I42
g4872
Vinsert
p37799
I42
VSimpleName: validateFor
p37800
tp37801
I1
s(g1189
I42
g1190
Vinsert
p37802
I14
VClassInstanceCreation
p37803
tp37804
I1
s(g1739
I42
g1740
Vinsert
p37805
I42
VSimpleName: nextSequenceNumber
p37806
tp37807
I1
s(Vinsert
p37808
I42
VSimpleName: simpleMethod
p37809
Vinsert
p37810
I42
VSimpleName: mockTwo
p37811
tp37812
I5
s(g3509
I42
g3510
Vinsert
p37813
I27
VInfixExpression: ||
p37814
tp37815
I2
s(g1800
I42
g1801
Vinsert
p37816
I42
VSimpleName: scenario
p37817
tp37818
I1
s(g20813
I42
g20814
Vinsert
p37819
I32
VMethodInvocation
p37820
tp37821
I6
s(g8729
I42
g8730
Vinsert
p37822
I42
VSimpleName: String
p37823
tp37824
I1
s(g13855
I42
g13856
Vinsert
p37825
I42
VSimpleName: onVerificationStarted
p37826
tp37827
I1
s(g4827
I42
g4828
Vinsert
p37828
I42
VSimpleName: optionalClass
p37829
tp37830
I2
s(g10696
I42
g10697
Vinsert
p37831
I42
VSimpleName: Platform
p37832
tp37833
I1
s(g7906
I42
g7907
Vinsert
p37834
I43
VSimpleType: Statement
p37835
tp37836
I1
s(g5839
I42
g5840
Vinsert
p37837
I25
VIfStatement
p37838
tp37839
I2
s(g12665
I42
g12666
Vinsert
p37840
I83
VModifier: public
p37841
tp37842
I2
s(g3672
I42
g3673
Vinsert
p37843
I42
VSimpleName: getMethod
p37844
tp37845
I1
s(g14420
I42
g14421
Vinsert
p37846
I59
VVariableDeclarationFragment
p37847
tp37848
I3
s(g16963
I42
g16964
Vinsert
p37849
I43
VSimpleType: Foo
p37850
tp37851
I4
s(g8160
I42
g8161
Vinsert
p37852
I42
VSimpleName: NotSerializableShouldBeMocked
p37853
tp37854
I1
s(g12846
I42
g12847
Vinsert
p37855
I42
VSimpleName: getSignature
p37856
tp37857
I1
s(g3121
I42
g3122
Vinsert
p37858
I43
VSimpleType: IllegalArgumentException
p37859
tp37860
I2
s(g8533
I42
g8534
Vinsert
p37861
I42
VSimpleName: lastArguments
p37862
tp37863
I2
s(g3807
I42
g3808
Vinsert
p37864
I42
VSimpleName: ObjenesisStd
p37865
tp37866
I2
s(g6535
I42
g6536
Vinsert
p37867
I79
VSingleMemberAnnotation
p37868
tp37869
I1
s(g16004
I42
g16005
Vinsert
p37870
I53
VThrowStatement
p37871
tp37872
I7
s(g1573
I42
g1574
Vinsert
p37873
I42
VSimpleName: finder
p37874
tp37875
I1
s(g18377
I42
g18378
Vinsert
p37876
I43
VSimpleType: List
p37877
tp37878
I1
s(g18607
I42
g18608
Vinsert
p37879
I34
VNumberLiteral: 0
p37880
tp37881
I1
s(g4082
I42
g4083
Vinsert
p37882
I83
VModifier: public
p37883
tp37884
I3
s(g2336
I42
g2337
Vinsert
p37885
I27
VInfixExpression: !=
p37886
tp37887
I1
s(g7883
I42
g7884
Vinsert
p37888
I42
VSimpleName: shouldFindInvocationWithTheSameMethod
p37889
tp37890
I1
s(g2157
I42
g2158
Vinsert
p37891
I43
VSimpleType: AbstractMessage
p37892
tp37893
I2
s(g5789
I42
g5790
Vinsert
p37894
I12
VCatchClause
p37895
tp37896
I1
s(g19031
I42
g19032
Vinsert
p37897
I42
VSimpleName: shouldInitMocksUsingRunner
p37898
tp37899
I3
s(g5986
I42
g5987
Vinsert
p37900
I42
VSimpleName: VerificationData
p37901
tp37902
I1
s(g4354
I42
g4355
Vinsert
p37903
I32
VMethodInvocation
p37904
tp37905
I4
s(g3219
I42
g3220
Vinsert
p37906
I32
VMethodInvocation
p37907
tp37908
I2
s(g16154
I42
g16155
Vinsert
p37909
I42
VSimpleName: assertTrue
p37910
tp37911
I4
s(g2728
I42
g2729
Vinsert
p37912
I42
VSimpleName: isToString
p37913
tp37914
I1
s(g7361
I42
g7362
Vinsert
p37915
I42
VSimpleName: Class
p37916
tp37917
I3
s(g2281
I42
g2282
Vinsert
p37918
I5
VArrayType: Object[]
p37919
tp37920
I1
s(g9239
I42
g9240
Vinsert
p37921
I4
VArrayInitializer
p37922
tp37923
I1
s(g2775
I42
g2776
Vinsert
p37924
I32
VMethodInvocation
p37925
tp37926
I2
s(g16
I42
g17
Vinsert
p37927
I45
VStringLiteral: "config"
p37928
tp37929
I1
s(g7825
I42
g7826
Vinsert
p37930
I42
VSimpleName: current
p37931
tp37932
I1
s(g8875
I42
g8876
Vinsert
p37933
I74
VParameterizedType: List<String>
p37934
tp37935
I1
s(g9584
I42
g9585
Vinsert
p37936
I42
VSimpleName: Capture
p37937
tp37938
I1
s(g7248
I42
g7249
Vinsert
p37939
I32
VMethodInvocation
p37940
tp37941
I2
s(g6476
I42
g6477
Vinsert
p37942
I32
VMethodInvocation
p37943
tp37944
I2
s(g27967
I42
g27968
Vinsert
p37945
I43
VSimpleType: Integer
p37946
tp37947
I1
s(g15379
I42
g15380
Vinsert
p37948
I42
VSimpleName: invocation
p37949
tp37950
I4
s(g12705
I42
g12706
Vinsert
p37951
I42
VSimpleName: map
p37952
tp37953
I1
s(g1619
I42
g1620
Vinsert
p37954
I42
VSimpleName: Test
p37955
tp37956
I2
s(g1302
I42
g1303
Vinsert
p37957
I34
VNumberLiteral: 1
p37958
tp37959
I1
s(g24251
I42
g24252
Vinsert
p37960
I42
VSimpleName: charReturningMethod
p37961
tp37962
I1
s(g14868
I42
g14869
Vinsert
p37963
I27
VInfixExpression: -
p37964
tp37965
I2
s(g13383
I42
g13384
Vinsert
p37966
I42
VSimpleName: mock
p37967
tp37968
I2
s(g10265
I42
g10266
Vinsert
p37969
I43
VSimpleType: Class
p37970
tp37971
I2
s(Vinsert
p37972
I42
VSimpleName: toString
p37973
Vinsert
p37974
I42
VSimpleName: formatMethodCall
p37975
tp37976
I2
s(g2296
I42
g2297
Vinsert
p37977
I42
VSimpleName: matchers
p37978
tp37979
I2
s(g6801
I42
g6802
Vinsert
p37980
I45
VStringLiteral: "This substring:\u005cn"
p37981
tp37982
I1
s(g41
I42
g42
Vinsert
p37983
I25
VIfStatement
p37984
tp37985
I4
s(g11177
I42
g11178
Vinsert
p37986
I44
VSingleVariableDeclaration
p37987
tp37988
I1
s(g503
I42
g504
Vinsert
p37989
I43
VSimpleType: List
p37990
tp37991
I3
s(g20085
I42
g20086
Vinsert
p37992
I39
VPrimitiveType: int
p37993
tp37994
I2
s(g1462
I42
g1463
Vinsert
p37995
I32
VMethodInvocation
p37996
tp37997
I25
s(g10164
I42
g10165
Vinsert
p37998
I16
VConditionalExpression
p37999
tp38000
I1
s(g1224
I42
g1225
Vinsert
p38001
I42
VSimpleName: createInfoField
p38002
tp38003
I1
s(g4939
I42
g4940
Vinsert
p38004
I42
VSimpleName: e
p38005
tp38006
I2
s(g1906
I42
g1907
Vinsert
p38007
I3
VArrayCreation
p38008
tp38009
I2
s(g9499
I42
g9500
Vinsert
p38010
I42
VSimpleName: AlreadySerializable
p38011
tp38012
I2
s(g4585
I42
g4586
Vinsert
p38013
I26
VImportDeclaration
p38014
tp38015
I2
s(g1815
I42
g1816
Vinsert
p38016
I43
VSimpleType: List
p38017
tp38018
I1
s(g4446
I42
g4447
Vinsert
p38019
I59
VVariableDeclarationFragment
p38020
tp38021
I4
s(g287
I42
g288
Vinsert
p38022
I62
VInstanceofExpression
p38023
tp38024
I1
s(g11214
I42
g11215
Vinsert
p38025
I42
VSimpleName: qualifiedName
p38026
tp38027
I2
s(g12337
I42
g12338
Vinsert
p38028
I42
VSimpleName: notNull
p38029
tp38030
I1
s(g428
I42
g429
Vinsert
p38031
I11
VCastExpression
p38032
tp38033
I1
s(g9571
I42
g9572
Vinsert
p38034
I41
VReturnStatement
p38035
tp38036
I1
s(g10916
I42
g10917
Vinsert
p38037
I80
VMemberValuePair
p38038
tp38039
I1
s(g24170
I42
g24171
Vinsert
p38040
I43
VSimpleType: FrameworkMethod
p38041
tp38042
I3
s(g453
I42
g454
Vinsert
p38043
I60
VVariableDeclarationStatement
p38044
tp38045
I1
s(g4755
I42
g4756
Vinsert
p38046
I8
VBlock
p38047
tp38048
I1
s(g7351
I42
g7352
Vinsert
p38049
I59
VVariableDeclarationFragment
p38050
tp38051
I1
s(g4924
I42
g4925
Vinsert
p38052
I42
VSimpleName: Object
p38053
tp38054
I7
s(g8978
I42
g8979
Vinsert
p38055
I43
VSimpleType: Child
p38056
tp38057
I2
s(g9666
I42
g9667
Vinsert
p38058
I43
VSimpleType: IllegalAccessException
p38059
tp38060
I1
s(g7329
I42
g7330
Vinsert
p38061
I41
VReturnStatement
p38062
tp38063
I1
s(g16232
I42
g16233
Vinsert
p38064
I42
VSimpleName: smartNull
p38065
tp38066
I1
s(g19252
I42
g19253
Vinsert
p38067
I42
VSimpleName: mock
p38068
tp38069
I1
s(g5408
I42
g5409
Vinsert
p38070
I42
VSimpleName: SubclassLoader
p38071
tp38072
I1
s(g12710
I42
g12711
Vinsert
p38073
I42
VSimpleName: Invocation
p38074
tp38075
I2
s(g11572
I42
g11573
Vinsert
p38076
I42
VSimpleName: Class
p38077
tp38078
I1
s(g8090
I42
g8091
Vinsert
p38079
I42
VSimpleName: argument
p38080
tp38081
I1
s(g3527
I42
g3528
Vinsert
p38082
I31
VMethodDeclaration
p38083
tp38084
I1
s(g2139
I42
g2140
Vinsert
p38085
I59
VVariableDeclarationFragment
p38086
tp38087
I1
s(g3637
I42
g3638
Vinsert
p38088
I42
VSimpleName: codeSourceUrls
p38089
tp38090
I2
s(g2281
I42
g2282
Vinsert
p38091
I7
VAssignment: =
p38092
tp38093
I1
s(g16232
I42
g16233
Vinsert
p38094
I43
VSimpleType: Foo
p38095
tp38096
I2
s(g5113
I42
g5114
Vinsert
p38097
I42
VSimpleName: object
p38098
tp38099
I2
s(g10672
I42
g10673
Vinsert
p38100
I42
VSimpleName: Object
p38101
tp38102
I4
s(g3880
I42
g3881
Vinsert
p38103
I42
VSimpleName: ReflectUtils
p38104
tp38105
I1
s(g7208
I42
g7209
Vinsert
p38106
I78
VMarkerAnnotation
p38107
tp38108
I1
s(g1660
I42
g1661
Vinsert
p38109
I8
VBlock
p38110
tp38111
I4
s(g2585
I42
g2586
Vinsert
p38112
I60
VVariableDeclarationStatement
p38113
tp38114
I2
s(g13114
I42
g13115
Vinsert
p38115
I42
VSimpleName: List
p38116
tp38117
I3
s(g5501
I42
g5502
Vinsert
p38118
I42
VSimpleName: visitBaseType
p38119
tp38120
I1
s(g10762
I42
g10763
Vinsert
p38121
I42
VSimpleName: getClass
p38122
tp38123
I1
s(g608
I42
g609
Vinsert
p38124
I85
VDimension
p38125
tp38126
I1
s(g3830
I42
g3831
Vinsert
p38127
I42
VSimpleName: String
p38128
tp38129
I1
s(g10341
I42
g10342
Vinsert
p38130
I42
VSimpleName: InvocationOnMock
p38131
tp38132
I1
s(g5821
I42
g5822
Vinsert
p38133
I42
VSimpleName: T
p38134
tp38135
I2
s(g337
I42
g338
Vinsert
p38136
I44
VSingleVariableDeclaration
p38137
tp38138
I8
s(g4709
I42
g4710
Vinsert
p38139
I8
VBlock
p38140
tp38141
I6
s(g7931
I42
g7932
Vinsert
p38142
I43
VSimpleType: Throwable
p38143
tp38144
I1
s(g12606
I42
g12607
Vinsert
p38145
I70
VEnhancedForStatement
p38146
tp38147
I1
s(g5196
I42
g5197
Vinsert
p38148
I43
VSimpleType: InOrderContext
p38149
tp38150
I1
s(g3126
I42
g3127
Vinsert
p38151
I32
VMethodInvocation
p38152
tp38153
I3
s(g6411
I42
g6412
Vinsert
p38154
I42
VSimpleName: getDefaultPlugin
p38155
tp38156
I1
s(g8921
I42
g8922
Vinsert
p38157
I42
VSimpleName: print
p38158
tp38159
I2
s(g21691
I42
g21692
Vinsert
p38160
I42
VSimpleName: newArgs
p38161
tp38162
I1
s(g11112
I42
g11113
Vinsert
p38163
I42
VSimpleName: Arrays
p38164
tp38165
I1
s(g8003
I42
g8004
Vinsert
p38166
I43
VSimpleType: Object
p38167
tp38168
I5
s(Vinsert
p38169
I42
VSimpleName: simpleMethod
p38170
Vinsert
p38171
I42
VSimpleName: strictly
p38172
tp38173
I1
s(g6252
I42
g6253
Vinsert
p38174
I83
VModifier: final
p38175
tp38176
I2
s(g2631
I42
g2632
Vinsert
p38177
I27
VInfixExpression: <
p38178
tp38179
I1
s(g12337
I42
g12338
Vinsert
p38180
I57
VTypeLiteral
p38181
tp38182
I2
s(g19136
I42
g19137
Vinsert
p38183
I32
VMethodInvocation
p38184
tp38185
I2
s(g7017
I42
g7018
Vinsert
p38186
I42
VSimpleName: Throwable
p38187
tp38188
I3
s(g1239
I42
g1240
Vinsert
p38189
I25
VIfStatement
p38190
tp38191
I1
s(g19144
I42
g19145
Vinsert
p38192
I42
VSimpleName: Assertions
p38193
tp38194
I8
s(g1528
I42
g1529
Vinsert
p38195
I41
VReturnStatement
p38196
tp38197
I12
s(g1105
I42
g1106
Vinsert
p38198
I42
VSimpleName: Set
p38199
tp38200
I2
s(g20386
I42
g20387
Vinsert
p38201
I34
VNumberLiteral: 0
p38202
tp38203
I2
s(g4497
I42
g4498
Vinsert
p38204
I42
VSimpleName: i
p38205
tp38206
I3
s(g11112
I42
g11113
Vinsert
p38207
I42
VSimpleName: Override
p38208
tp38209
I5
s(g10672
I42
g10673
Vinsert
p38210
I42
VSimpleName: InvocationOnMock
p38211
tp38212
I4
s(g11645
I42
g11646
Vinsert
p38213
I42
VSimpleName: MissingMethodInvocationException
p38214
tp38215
I1
s(g6247
I42
g6248
Vinsert
p38216
I42
VSimpleName: mock
p38217
tp38218
I3
s(g6614
I42
g6615
Vinsert
p38219
I43
VSimpleType: InstanceField
p38220
tp38221
I2
s(g4295
I42
g4296
Vinsert
p38222
I42
VSimpleName: arguments
p38223
tp38224
I1
s(g26
I42
g27
Vinsert
p38225
I42
VSimpleName: superClassOf
p38226
tp38227
I2
s(g3199
I42
g3200
Vinsert
p38228
I42
VSimpleName: error
p38229
tp38230
I5
s(g5704
I42
g5705
Vinsert
p38231
I42
VSimpleName: atLeastOnce
p38232
tp38233
I4
s(g20230
I42
g20231
Vinsert
p38234
I42
VSimpleName: contains
p38235
tp38236
I1
s(g20458
I42
g20459
Vinsert
p38237
I42
VSimpleName: object
p38238
tp38239
I1
s(g717
I42
g718
Vinsert
p38240
I57
VTypeLiteral
p38241
tp38242
I1
s(g11691
I42
g11692
Vinsert
p38243
I59
VVariableDeclarationFragment
p38244
tp38245
I1
s(g2881
I42
g2882
Vinsert
p38246
I42
VSimpleName: atLeast
p38247
tp38248
I1
s(g12370
I42
g12371
Vinsert
p38249
I43
VSimpleType: HasCGLIBMethodProxy
p38250
tp38251
I3
s(g2195
I42
g2196
Vinsert
p38252
I43
VSimpleType: Field
p38253
tp38254
I2
s(g1431
I42
g1432
Vinsert
p38255
I42
VSimpleName: HasStackTraceStub
p38256
tp38257
I1
s(g4510
I42
g4511
Vinsert
p38258
I78
VMarkerAnnotation
p38259
tp38260
I1
s(g8488
I42
g8489
Vinsert
p38261
I42
VSimpleName: dummyClass
p38262
tp38263
I2
s(g6527
I42
g6528
Vinsert
p38264
I42
VSimpleName: assertNotContains
p38265
tp38266
I1
s(g5196
I42
g5197
Vinsert
p38267
I32
VMethodInvocation
p38268
tp38269
I3
s(g6677
I42
g6678
Vinsert
p38270
I85
VDimension
p38271
tp38272
I1
s(g22497
I42
g22498
Vinsert
p38273
I42
VSimpleName: mock
p38274
tp38275
I1
s(g4916
I42
g4917
Vinsert
p38276
I45
VStringLiteral: "that's the stupid way"
p38277
tp38278
I2
s(g22800
I42
g22801
Vinsert
p38279
I45
VStringLiteral: "]="
p38280
tp38281
I1
s(g11866
I42
g11867
Vinsert
p38282
I42
VSimpleName: SomeClass2
p38283
tp38284
I1
s(g11552
I42
g11553
Vinsert
p38285
I38
VPrefixExpression: !
p38286
tp38287
I1
s(g7836
I42
g7837
Vinsert
p38288
I21
VExpressionStatement
p38289
tp38290
I1
s(g1054
I42
g1055
Vinsert
p38291
I60
VVariableDeclarationStatement
p38292
tp38293
I1
s(g4189
I42
g4190
Vinsert
p38294
I44
VSingleVariableDeclaration
p38295
tp38296
I1
s(g4362
I42
g4363
Vinsert
p38297
I42
VSimpleName: reader
p38298
tp38299
I2
s(g3601
I42
g3602
Vinsert
p38300
I32
VMethodInvocation
p38301
tp38302
I2
s(g6048
I42
g6049
Vinsert
p38303
I43
VSimpleType: Character
p38304
tp38305
I2
s(g3303
I42
g3304
Vinsert
p38306
I40
VQualifiedName: Constants.ACC_PUBLIC
p38307
tp38308
I1
s(g10539
I42
g10540
Vinsert
p38309
I42
VSimpleName: Class
p38310
tp38311
I2
s(g24736
I42
g24737
Vinsert
p38312
I42
VSimpleName: describeTo
p38313
tp38314
I7
s(g2672
I42
g2673
Vinsert
p38315
I42
VSimpleName: testShouldFilterOutMockitoPackage
p38316
tp38317
I1
s(g3555
I42
g3556
Vinsert
p38318
I42
VSimpleName: thenReturn
p38319
tp38320
I2
s(g3083
I42
g3084
Vinsert
p38321
I42
VSimpleName: fail
p38322
tp38323
I2
s(g10324
I42
g10325
Vinsert
p38324
I60
VVariableDeclarationStatement
p38325
tp38326
I2
s(g11961
I42
g11962
Vinsert
p38327
I42
VSimpleName: newName
p38328
tp38329
I1
s(g8921
I42
g8922
Vinsert
p38330
I42
VSimpleName: message
p38331
tp38332
I5
s(g14280
I42
g14281
Vinsert
p38333
I43
VSimpleType: Stubber
p38334
tp38335
I2
s(g3977
I42
g3978
Vinsert
p38336
I59
VVariableDeclarationFragment
p38337
tp38338
I1
s(g12046
I42
g12047
Vinsert
p38339
I32
VMethodInvocation
p38340
tp38341
I3
s(g10324
I42
g10325
Vinsert
p38342
I76
VWildcardType: ? extends Stubbing
p38343
tp38344
I1
s(g16053
I42
g16054
Vinsert
p38345
I76
VWildcardType: ?
p38346
tp38347
I3
s(g15506
I42
g15507
Vinsert
p38348
I42
VSimpleName: rawType
p38349
tp38350
I1
s(g1538
I42
g1539
Vinsert
p38351
I43
VSimpleType: TooLittleActualInvocations
p38352
tp38353
I1
s(g15053
I42
g15054
Vinsert
p38354
I42
VSimpleName: ByteArrayOutputStream
p38355
tp38356
I2
s(g390
I42
g391
Vinsert
p38357
I41
VReturnStatement
p38358
tp38359
I3
s(g12245
I42
g12246
Vinsert
p38360
I12
VCatchClause
p38361
tp38362
I1
s(g4600
I42
g4601
Vinsert
p38363
I42
VSimpleName: shouldReturnEmptyArrays
p38364
tp38365
I1
s(g971
I42
g972
Vinsert
p38366
I21
VExpressionStatement
p38367
tp38368
I4
s(g4295
I42
g4296
Vinsert
p38369
I14
VClassInstanceCreation
p38370
tp38371
I1
s(g11012
I42
g11013
Vinsert
p38372
I39
VPrimitiveType: void
p38373
tp38374
I1
s(g513
I42
g514
Vinsert
p38375
I60
VVariableDeclarationStatement
p38376
tp38377
I3
s(g7012
I42
g7013
Vinsert
p38378
I74
VParameterizedType: ArrayList<Type>
p38379
tp38380
I1
s(g11866
I42
g11867
Vinsert
p38381
I33
VNullLiteral
p38382
tp38383
I1
s(g4709
I42
g4710
Vinsert
p38384
I32
VMethodInvocation
p38385
tp38386
I11
s(Vinsert
p38387
I42
VSimpleName: run
p38388
Vinsert
p38389
I42
VSimpleName: RunNotifier
p38390
tp38391
I3
s(g7854
I42
g7855
Vinsert
p38392
I42
VSimpleName: mocks
p38393
tp38394
I1
s(g1780
I42
g1781
Vinsert
p38395
I43
VSimpleType: Exception
p38396
tp38397
I1
s(g420
I42
g421
Vinsert
p38398
I52
VThisExpression
p38399
tp38400
I1
s(g3856
I42
g3857
Vinsert
p38401
I43
VSimpleType: Class
p38402
tp38403
I2
s(g1853
I42
g1854
Vinsert
p38404
I42
VSimpleName: LINE
p38405
tp38406
I1
s(g846
I42
g847
Vinsert
p38407
I43
VSimpleType: String
p38408
tp38409
I2
s(g22936
I42
g22937
Vinsert
p38410
I42
VSimpleName: isArray
p38411
tp38412
I1
s(g9601
I42
g9602
Vinsert
p38413
I42
VSimpleName: valueClazz
p38414
tp38415
I1
s(g2983
I42
g2984
Vinsert
p38416
I42
VSimpleName: entrySet
p38417
tp38418
I1
s(g1411
I42
g1412
Vinsert
p38419
I43
VSimpleType: VerificationDataInOrder
p38420
tp38421
I2
s(g8348
I42
g8349
Vinsert
p38422
I39
VPrimitiveType: boolean
p38423
tp38424
I6
s(g2054
I42
g2055
Vinsert
p38425
I41
VReturnStatement
p38426
tp38427
I1
s(Vinsert
p38428
I42
VSimpleName: simpleMethod
p38429
Vinsert
p38430
I42
VSimpleName: shouldThrowConsecutivelySetByShortenThenThrowMethod
p38431
tp38432
I1
s(g13936
I42
g13937
Vinsert
p38433
I57
VTypeLiteral
p38434
tp38435
I1
s(g896
I42
g897
Vinsert
p38436
I42
VSimpleName: unserialize
p38437
tp38438
I2
s(g10319
I42
g10320
Vinsert
p38439
I42
VSimpleName: fileInputStream
p38440
tp38441
I2
s(g24722
I42
g24723
Vinsert
p38442
I43
VSimpleType: ReturnValues
p38443
tp38444
I1
s(g5237
I42
g5238
Vinsert
p38445
I8
VBlock
p38446
tp38447
I1
s(Vinsert
p38448
I42
VSimpleName: verify
p38449
Vinsert
p38450
I42
VSimpleName: when
p38451
tp38452
I1
s(g3229
I42
g3230
Vinsert
p38453
I8
VBlock
p38454
tp38455
I1
s(g12444
I42
g12445
Vinsert
p38456
I43
VSimpleType: UsesTwoBases
p38457
tp38458
I2
s(g1765
I42
g1766
Vinsert
p38459
I43
VSimpleType: Field
p38460
tp38461
I2
s(g778
I42
g779
Vinsert
p38462
I59
VVariableDeclarationFragment
p38463
tp38464
I1
s(g1838
I42
g1839
Vinsert
p38465
I32
VMethodInvocation
p38466
tp38467
I1
s(g332
I42
g333
Vinsert
p38468
I31
VMethodDeclaration
p38469
tp38470
I1
s(Vinsert
p38471
I42
VSimpleName: say
p38472
Vinsert
p38473
I43
VSimpleType: Super
p38474
tp38475
I1
s(g16823
I42
g16824
Vinsert
p38476
I32
VMethodInvocation
p38477
tp38478
I3
s(g643
I42
g644
Vinsert
p38479
I78
VMarkerAnnotation
p38480
tp38481
I1
s(g2508
I42
g2509
Vinsert
p38482
I42
VSimpleName: t
p38483
tp38484
I2
s(g9870
I42
g9871
Vinsert
p38485
I44
VSingleVariableDeclaration
p38486
tp38487
I3
s(g22502
I42
g22503
Vinsert
p38488
I42
VSimpleName: initMocks
p38489
tp38490
I1
s(g3565
I42
g3566
Vinsert
p38491
I42
VSimpleName: Class
p38492
tp38493
I1
s(g6914
I42
g6915
Vinsert
p38494
I42
VSimpleName: m2
p38495
tp38496
I6
s(g3229
I42
g3230
Vinsert
p38497
I40
VQualifiedName: org.mockitoutil.TestBase
p38498
tp38499
I1
s(g10086
I42
g10087
Vinsert
p38500
I42
VSimpleName: then
p38501
tp38502
I3
s(g7408
I42
g7409
Vinsert
p38503
I43
VSimpleType: UpperBoundedTypeWithInterfaces
p38504
tp38505
I1
s(g16429
I42
g16430
Vinsert
p38506
I42
VSimpleName: box
p38507
tp38508
I1
s(g4735
I42
g4736
Vinsert
p38509
I41
VReturnStatement
p38510
tp38511
I5
s(g826
I42
g827
Vinsert
p38512
I59
VVariableDeclarationFragment
p38513
tp38514
I6
s(g5133
I42
g5134
Vinsert
p38515
I21
VExpressionStatement
p38516
tp38517
I1
s(g20513
I42
g20514
Vinsert
p38518
I39
VPrimitiveType: boolean
p38519
tp38520
I1
s(g5216
I42
g5217
Vinsert
p38521
I11
VCastExpression
p38522
tp38523
I1
s(g6919
I42
g6920
Vinsert
p38524
I43
VSimpleType: NoInteractionsWanted
p38525
tp38526
I1
s(g6008
I42
g6009
Vinsert
p38527
I31
VMethodDeclaration
p38528
tp38529
I1
s(g796
I42
g797
Vinsert
p38530
I40
VQualifiedName: MockitoNamingPolicy.INSTANCE
p38531
tp38532
I1
s(g23619
I42
g23620
Vinsert
p38533
I42
VSimpleName: expected
p38534
tp38535
I18
s(g14686
I42
g14687
Vinsert
p38536
I42
VSimpleName: add
p38537
tp38538
I14
s(g3101
I42
g3102
Vinsert
p38539
I32
VMethodInvocation
p38540
tp38541
I2
s(g11353
I42
g11354
Vinsert
p38542
I42
VSimpleName: ContainsExtraTypeInformation
p38543
tp38544
I1
s(g5934
I42
g5935
Vinsert
p38545
I42
VSimpleName: getInvocation
p38546
tp38547
I1
s(g2374
I42
g2375
Vinsert
p38548
I42
VSimpleName: Object
p38549
tp38550
I1
s(g14392
I42
g14393
Vinsert
p38551
I27
VInfixExpression: <
p38552
tp38553
I1
s(g4082
I42
g4083
Vinsert
p38554
I14
VClassInstanceCreation
p38555
tp38556
I5
s(g6468
I42
g6469
Vinsert
p38557
I60
VVariableDeclarationStatement
p38558
tp38559
I12
s(g14269
I42
g14270
Vinsert
p38560
I43
VSimpleType: Object
p38561
tp38562
I4
s(g3621
I42
g3622
Vinsert
p38563
I42
VSimpleName: TraceAnnotationVisitor
p38564
tp38565
I1
s(g8136
I42
g8137
Vinsert
p38566
I42
VSimpleName: forBoolean
p38567
tp38568
I1
s(g400
I42
g401
Vinsert
p38569
I43
VSimpleType: String
p38570
tp38571
I5
s(g8414
I42
g8415
Vinsert
p38572
I42
VSimpleName: IllegalArgumentException
p38573
tp38574
I1
s(g4098
I42
g4099
Vinsert
p38575
I60
VVariableDeclarationStatement
p38576
tp38577
I1
s(g2541
I42
g2542
Vinsert
p38578
I44
VSingleVariableDeclaration
p38579
tp38580
I3
s(g996
I42
g997
Vinsert
p38581
I45
VStringLiteral: "foo"
p38582
tp38583
I1
s(g911
I42
g912
Vinsert
p38584
I8
VBlock
p38585
tp38586
I2
s(g7351
I42
g7352
Vinsert
p38587
I42
VSimpleName: begin_method
p38588
tp38589
I1
s(g11718
I42
g11719
Vinsert
p38590
I74
VParameterizedType: MockCreationSettings<List>
p38591
tp38592
I1
s(g5679
I42
g5680
Vinsert
p38593
I42
VSimpleName: when
p38594
tp38595
I2
s(g2526
I42
g2527
Vinsert
p38596
I21
VExpressionStatement
p38597
tp38598
I4
s(g15654
I42
g15655
Vinsert
p38599
I43
VSimpleType: TreeSet
p38600
tp38601
I1
s(g5752
I42
g5753
Vinsert
p38602
I42
VSimpleName: assertTrue
p38603
tp38604
I1
s(g252
I42
g253
Vinsert
p38605
I42
VSimpleName: InvocationMatcher
p38606
tp38607
I1
s(g4111
I42
g4112
Vinsert
p38608
I42
VSimpleName: mockingDetails
p38609
tp38610
I1
s(g6771
I42
g6772
Vinsert
p38611
I42
VSimpleName: progress
p38612
tp38613
I2
s(g25311
I42
g25312
Vinsert
p38614
I45
VStringLiteral: "\u005cn"
p38615
tp38616
I2
s(g1352
I42
g1353
Vinsert
p38617
I14
VClassInstanceCreation
p38618
tp38619
I2
s(g31582
I42
g31583
Vinsert
p38620
I45
VStringLiteral: "Undesired invocation:"
p38621
tp38622
I2
s(g3101
I42
g3102
Vinsert
p38623
I42
VSimpleName: when
p38624
tp38625
I1
s(g3431
I42
g3432
Vinsert
p38626
I14
VClassInstanceCreation
p38627
tp38628
I1
s(g4163
I42
g4164
Vinsert
p38629
I32
VMethodInvocation
p38630
tp38631
I2
s(g11699
I42
g11700
Vinsert
p38632
I42
VSimpleName: invocation
p38633
tp38634
I3
s(g5180
I42
g5181
Vinsert
p38635
I42
VSimpleName: deep_stubs_dont_trigger_unnecessary_stubbing_exception
p38636
tp38637
I1
s(g1825
I42
g1826
Vinsert
p38638
I42
VSimpleName: BasicValue
p38639
tp38640
I1
s(g1034
I42
g1035
Vinsert
p38641
I42
VSimpleName: target
p38642
tp38643
I1
s(g17987
I42
g17988
Vinsert
p38644
I43
VSimpleType: VerificationWithTimeout
p38645
tp38646
I1
s(g25297
I42
g25298
Vinsert
p38647
I42
VSimpleName: origin
p38648
tp38649
I1
s(g2000
I42
g2001
Vinsert
p38650
I38
VPrefixExpression: !
p38651
tp38652
I1
s(g25785
I42
g25786
Vinsert
p38653
I42
VSimpleName: addAnswersForVoidMethod
p38654
tp38655
I1
s(g2998
I42
g2999
Vinsert
p38656
I42
VSimpleName: mv
p38657
tp38658
I3
s(g5768
I42
g5769
Vinsert
p38659
I42
VSimpleName: answer
p38660
tp38661
I2
s(g13172
I42
g13173
Vinsert
p38662
I83
VModifier: synchronized
p38663
tp38664
I4
s(g124
I42
g125
Vinsert
p38665
I43
VSimpleType: String
p38666
tp38667
I1
s(g6566
I42
g6567
Vinsert
p38668
I42
VSimpleName: Test
p38669
tp38670
I1
s(g4750
I42
g4751
Vinsert
p38671
I83
VModifier: private
p38672
tp38673
I1
s(g4168
I42
g4169
Vinsert
p38674
I21
VExpressionStatement
p38675
tp38676
I1
s(g16291
I42
g16292
Vinsert
p38677
I23
VFieldDeclaration
p38678
tp38679
I1
s(g10081
I42
g10082
Vinsert
p38680
I42
VSimpleName: os
p38681
tp38682
I1
s(g6124
I42
g6125
Vinsert
p38683
I8
VBlock
p38684
tp38685
I22
s(g7221
I42
g7222
Vinsert
p38686
I42
VSimpleName: writeLock
p38687
tp38688
I2
s(g1853
I42
g1854
Vinsert
p38689
I83
VModifier: final
p38690
tp38691
I1
s(g5138
I42
g5139
Vinsert
p38692
I7
VAssignment: =
p38693
tp38694
I1
s(g4153
I42
g4154
Vinsert
p38695
I42
VSimpleName: interfaces
p38696
tp38697
I1
s(g11074
I42
g11075
Vinsert
p38698
I42
VSimpleName: closure
p38699
tp38700
I2
s(g6260
I42
g6261
Vinsert
p38701
I42
VSimpleName: newFile
p38702
tp38703
I1
s(g10324
I42
g10325
Vinsert
p38704
I42
VSimpleName: List
p38705
tp38706
I1
s(Vinsert
p38707
I42
VSimpleName: simpleMethod
p38708
Vinsert
p38709
I42
VSimpleName: andThrows
p38710
tp38711
I1
s(g8288
I42
g8289
Vinsert
p38712
I43
VSimpleType: MockitoException
p38713
tp38714
I2
s(g3155
I42
g3156
Vinsert
p38715
I42
VSimpleName: Primitives
p38716
tp38717
I1
s(g10081
I42
g10082
Vinsert
p38718
I32
VMethodInvocation
p38719
tp38720
I4
s(g1934
I42
g1935
Vinsert
p38721
I44
VSingleVariableDeclaration
p38722
tp38723
I3
s(g367
I42
g368
Vinsert
p38724
I42
VSimpleName: Invocation
p38725
tp38726
I1
s(g6736
I42
g6737
Vinsert
p38727
I42
VSimpleName: wantedCount
p38728
tp38729
I1
s(g6098
I42
g6099
Vinsert
p38730
I42
VSimpleName: unstubbedInvocations
p38731
tp38732
I1
s(g34587
I42
g34588
Vinsert
p38733
I42
VSimpleName: index
p38734
tp38735
I1
s(g119
I42
g120
Vinsert
p38736
I42
VSimpleName: invocationMatcher
p38737
tp38738
I1
s(g1054
I42
g1055
Vinsert
p38739
I32
VMethodInvocation
p38740
tp38741
I3
s(g6233
I42
g6234
Vinsert
p38742
I22
VFieldAccess
p38743
tp38744
I1
s(g9990
I42
g9991
Vinsert
p38745
I21
VExpressionStatement
p38746
tp38747
I3
s(g1886
I42
g1887
Vinsert
p38748
I39
VPrimitiveType: int
p38749
tp38750
I2
s(g1586
I42
g1587
Vinsert
p38751
I40
VQualifiedName: Constants.V1_2
p38752
tp38753
I1
s(g12777
I42
g12778
Vinsert
p38754
I42
VSimpleName: i
p38755
tp38756
I2
s(g8016
I42
g8017
Vinsert
p38757
I42
VSimpleName: times
p38758
tp38759
I1
s(g4441
I42
g4442
Vinsert
p38760
I74
VParameterizedType: Class<?>
p38761
tp38762
I1
s(g10802
I42
g10803
Vinsert
p38763
I43
VSimpleType: InvocationMatcher
p38764
tp38765
I1
s(g1302
I42
g1303
Vinsert
p38766
I42
VSimpleName: assertEquals
p38767
tp38768
I2
s(g5421
I42
g5422
Vinsert
p38769
I42
VSimpleName: mock
p38770
tp38771
I2
s(g12245
I42
g12246
Vinsert
p38772
I42
VSimpleName: assertThat
p38773
tp38774
I2
s(g9515
I42
g9516
Vinsert
p38775
I42
VSimpleName: from
p38776
tp38777
I1
s(g13345
I42
g13346
Vinsert
p38778
I39
VPrimitiveType: void
p38779
tp38780
I1
s(g12804
I42
g12805
Vinsert
p38781
I26
VImportDeclaration
p38782
tp38783
I2
s(g14311
I42
g14312
Vinsert
p38784
I11
VCastExpression
p38785
tp38786
I1
s(g8459
I42
g8460
Vinsert
p38787
I42
VSimpleName: changer
p38788
tp38789
I3
s(g13161
I42
g13162
Vinsert
p38790
I14
VClassInstanceCreation
p38791
tp38792
I1
s(g2700
I42
g2701
Vinsert
p38793
I83
VModifier: public
p38794
tp38795
I1
s(g357
I42
g358
Vinsert
p38796
I32
VMethodInvocation
p38797
tp38798
I2
s(g28127
I42
g28128
Vinsert
p38799
I41
VReturnStatement
p38800
tp38801
I1
s(g24736
I42
g24737
Vinsert
p38802
I42
VSimpleName: description
p38803
tp38804
I10
s(g11984
I42
g11985
Vinsert
p38805
I43
VSimpleType: Class
p38806
tp38807
I1
s(g11855
I42
g11856
Vinsert
p38808
I43
VSimpleType: MockitoStackTraceFilter
p38809
tp38810
I2
s(g8696
I42
g8697
Vinsert
p38811
I43
VSimpleType: Invocation
p38812
tp38813
I2
s(g14642
I42
g14643
Vinsert
p38814
I42
VSimpleName: countActual
p38815
tp38816
I1
s(g11353
I42
g11354
Vinsert
p38817
I42
VSimpleName: equals
p38818
tp38819
I4
s(g2175
I42
g2176
Vinsert
p38820
I42
VSimpleName: Test
p38821
tp38822
I1
s(g18995
I42
g18996
Vinsert
p38823
I42
VSimpleName: Test
p38824
tp38825
I1
s(g10368
I42
g10369
Vinsert
p38826
I44
VSingleVariableDeclaration
p38827
tp38828
I1
s(g8372
I42
g8373
Vinsert
p38829
I42
VSimpleName: asList
p38830
tp38831
I1
s(g11306
I42
g11307
Vinsert
p38832
I57
VTypeLiteral
p38833
tp38834
I2
s(g6077
I42
g6078
Vinsert
p38835
I21
VExpressionStatement
p38836
tp38837
I2
s(g8184
I42
g8185
Vinsert
p38838
I42
VSimpleName: mockOne
p38839
tp38840
I1
s(g1411
I42
g1412
Vinsert
p38841
I8
VBlock
p38842
tp38843
I6
s(g816
I42
g817
Vinsert
p38844
I32
VMethodInvocation
p38845
tp38846
I4
s(g4492
I42
g4493
Vinsert
p38847
I32
VMethodInvocation
p38848
tp38849
I3
s(g10696
I42
g10697
Vinsert
p38850
I43
VSimpleType: MockitoException
p38851
tp38852
I1
s(g8242
I42
g8243
Vinsert
p38853
I32
VMethodInvocation
p38854
tp38855
I18
s(g986
I42
g987
Vinsert
p38856
I32
VMethodInvocation
p38857
tp38858
I1
s(g846
I42
g847
Vinsert
p38859
I42
VSimpleName: String
p38860
tp38861
I2
s(g8803
I42
g8804
Vinsert
p38862
I83
VModifier: static
p38863
tp38864
I2
s(g21537
I42
g21538
Vinsert
p38865
I42
VSimpleName: T
p38866
tp38867
I3
s(g9374
I42
g9375
Vinsert
p38868
I45
VStringLiteral: "111 Mock Lane"
p38869
tp38870
I1
s(g3326
I42
g3327
Vinsert
p38871
I43
VSimpleType: Exception
p38872
tp38873
I1
s(g826
I42
g827
Vinsert
p38874
I42
VSimpleName: orderedInvocations
p38875
tp38876
I1
s(g4895
I42
g4896
Vinsert
p38877
I14
VClassInstanceCreation
p38878
tp38879
I2
s(g8642
I42
g8643
Vinsert
p38880
I4
VArrayInitializer
p38881
tp38882
I1
s(g588
I42
g589
Vinsert
p38883
I31
VMethodDeclaration
p38884
tp38885
I1
s(g4043
I42
g4044
Vinsert
p38886
I43
VSimpleType: InOrder
p38887
tp38888
I1
s(Vinsert
p38889
I42
VSimpleName: toInvocation
p38890
Vinsert
p38891
I42
VSimpleName: call
p38892
tp38893
I1
s(g10385
I42
g10386
Vinsert
p38894
I42
VSimpleName: cmp
p38895
tp38896
I2
s(g7379
I42
g7380
Vinsert
p38897
I42
VSimpleName: WithSpy
p38898
tp38899
I2
s(g13936
I42
g13937
Vinsert
p38900
I42
VSimpleName: Mockito
p38901
tp38902
I1
s(g4038
I42
g4039
Vinsert
p38903
I9
VBooleanLiteral: false
p38904
tp38905
I1
s(g7714
I42
g7715
Vinsert
p38906
I42
VSimpleName: MockitoLogger
p38907
tp38908
I1
s(g1209
I42
g1210
Vinsert
p38909
I42
VSimpleName: ClassNameFinder
p38910
tp38911
I2
s(g4401
I42
g4402
Vinsert
p38912
I42
VSimpleName: getValue
p38913
tp38914
I1
s(g13218
I42
g13219
Vinsert
p38915
I43
VSimpleType: Exception
p38916
tp38917
I1
s(g1129
I42
g1130
Vinsert
p38918
I31
VMethodDeclaration
p38919
tp38920
I2
s(g2788
I42
g2789
Vinsert
p38921
I36
VParenthesizedExpression
p38922
tp38923
I3
s(g11942
I42
g11943
Vinsert
p38924
I42
VSimpleName: safeGetClass
p38925
tp38926
I2
s(g788
I42
g789
Vinsert
p38927
I39
VPrimitiveType: void
p38928
tp38929
I1
s(g2881
I42
g2882
Vinsert
p38930
I42
VSimpleName: mode
p38931
tp38932
I4
s(g4382
I42
g4383
Vinsert
p38933
I74
VParameterizedType: ArrayList<Matcher>
p38934
tp38935
I1
s(g16240
I42
g16241
Vinsert
p38936
I74
VParameterizedType: Class<?>
p38937
tp38938
I1
s(g11612
I42
g11613
Vinsert
p38939
I21
VExpressionStatement
p38940
tp38941
I2
s(g12108
I42
g12109
Vinsert
p38942
I45
VStringLiteral: "@@info@@"
p38943
tp38944
I1
s(g15506
I42
g15507
Vinsert
p38945
I42
VSimpleName: rawInterface
p38946
tp38947
I1
s(g287
I42
g288
Vinsert
p38948
I39
VPrimitiveType: void
p38949
tp38950
I1
s(g1498
I42
g1499
Vinsert
p38951
I42
VSimpleName: VerificationStartedListener
p38952
tp38953
I1
s(g21094
I42
g21095
Vinsert
p38954
I42
VSimpleName: Thread
p38955
tp38956
I6
s(g3812
I42
g3813
Vinsert
p38957
I32
VMethodInvocation
p38958
tp38959
I12
s(g8642
I42
g8643
Vinsert
p38960
I5
VArrayType: Object[]
p38961
tp38962
I1
s(g956
I42
g957
Vinsert
p38963
I8
VBlock
p38964
tp38965
I1
s(g5300
I42
g5301
Vinsert
p38966
I76
VWildcardType: ?
p38967
tp38968
I2
s(g11645
I42
g11646
Vinsert
p38969
I80
VMemberValuePair
p38970
tp38971
I1
s(g5604
I42
g5605
Vinsert
p38972
I42
VSimpleName: Matcher
p38973
tp38974
I1
s(g11877
I42
g11878
Vinsert
p38975
I43
VSimpleType: Iterator
p38976
tp38977
I1
s(g2439
I42
g2440
Vinsert
p38978
I42
VSimpleName: settings
p38979
tp38980
I1
s(g214
I42
g215
Vinsert
p38981
I42
VSimpleName: target
p38982
tp38983
I1
s(g16356
I42
g16357
Vinsert
p38984
I42
VSimpleName: throwablesForVoidMethod
p38985
tp38986
I2
s(g4895
I42
g4896
Vinsert
p38987
I42
VSimpleName: VerificationDataImpl
p38988
tp38989
I1
s(g5752
I42
g5753
Vinsert
p38990
I43
VSimpleType: Exception
p38991
tp38992
I1
s(g946
I42
g947
Vinsert
p38993
I42
VSimpleName: PrintSettings
p38994
tp38995
I1
s(g1204
I42
g1205
Vinsert
p38996
I42
VSimpleName: Timer
p38997
tp38998
I1
s(g8372
I42
g8373
Vinsert
p38999
I21
VExpressionStatement
p39000
tp39001
I5
s(g16579
I42
g16580
Vinsert
p39002
I42
VSimpleName: shouldPrintVerboseArgumentsWhenStringOutputIsTheSame
p39003
tp39004
I1
s(g8030
I42
g8031
Vinsert
p39005
I78
VMarkerAnnotation
p39006
tp39007
I3
s(g14420
I42
g14421
Vinsert
p39008
I42
VSimpleName: map
p39009
tp39010
I1
s(g3106
I42
g3107
Vinsert
p39011
I43
VSimpleType: Invocation
p39012
tp39013
I1
s(g2700
I42
g2701
Vinsert
p39014
I54
VTryStatement
p39015
tp39016
I1
s(g1982
I42
g1983
Vinsert
p39017
I42
VSimpleName: t
p39018
tp39019
I1
s(g8393
I42
g8394
Vinsert
p39020
I8
VBlock
p39021
tp39022
I2
s(g2286
I42
g2287
Vinsert
p39023
I65
VTagElement: @link
p39024
tp39025
I2
s(g8533
I42
g8534
Vinsert
p39026
I43
VSimpleType: LastArguments
p39027
tp39028
I1
s(g16418
I42
g16419
Vinsert
p39029
I9
VBooleanLiteral: false
p39030
tp39031
I1
s(g4446
I42
g4447
Vinsert
p39032
I7
VAssignment: =
p39033
tp39034
I3
s(g14223
I42
g14224
Vinsert
p39035
I7
VAssignment: =
p39036
tp39037
I1
s(g2611
I42
g2612
Vinsert
p39038
I31
VMethodDeclaration
p39039
tp39040
I1
s(g6334
I42
g6335
Vinsert
p39041
I33
VNullLiteral
p39042
tp39043
I1
s(g3214
I42
g3215
Vinsert
p39044
I41
VReturnStatement
p39045
tp39046
I1
s(g204
I42
g205
Vinsert
p39047
I60
VVariableDeclarationStatement
p39048
tp39049
I1
s(g3585
I42
g3586
Vinsert
p39050
I65
VTagElement: @param
p39051
tp39052
I2
s(g1591
I42
g1592
Vinsert
p39053
I8
VBlock
p39054
tp39055
I2
s(g12846
I42
g12847
Vinsert
p39056
I34
VNumberLiteral: 1
p39057
tp39058
I1
s(g12553
I42
g12554
Vinsert
p39059
I42
VSimpleName: Integer
p39060
tp39061
I1
s(g788
I42
g789
Vinsert
p39062
I42
VSimpleName: accept
p39063
tp39064
I1
s(g9323
I42
g9324
Vinsert
p39065
I32
VMethodInvocation
p39066
tp39067
I6
s(g15030
I42
g15031
Vinsert
p39068
I42
VSimpleName: Matcher
p39069
tp39070
I1
s(g2311
I42
g2312
Vinsert
p39071
I42
VSimpleName: firstMethodOnStackEqualsTo
p39072
tp39073
I1
s(g16053
I42
g16054
Vinsert
p39074
I42
VSimpleName: T
p39075
tp39076
I3
s(g2195
I42
g2196
Vinsert
p39077
I42
VSimpleName: field
p39078
tp39079
I2
s(g5316
I42
g5317
Vinsert
p39080
I42
VSimpleName: testCreated
p39081
tp39082
I1
s(g7390
I42
g7391
Vinsert
p39083
I21
VExpressionStatement
p39084
tp39085
I2
s(Vinsert
p39086
I42
VSimpleName: mock
p39087
Vinsert
p39088
I42
VSimpleName: setUp
p39089
tp39090
I1
s(g503
I42
g504
Vinsert
p39091
I43
VSimpleType: Invocation
p39092
tp39093
I3
s(g3517
I42
g3518
Vinsert
p39094
I74
VParameterizedType: ArgumentCaptor<Integer>
p39095
tp39096
I1
s(g4871
I42
g4872
Vinsert
p39097
I14
VClassInstanceCreation
p39098
tp39099
I1
s(g5522
I42
g5523
Vinsert
p39100
I42
VSimpleName: key
p39101
tp39102
I1
s(g1019
I42
g1020
Vinsert
p39103
I42
VSimpleName: fieldInstanceNeedingInjection
p39104
tp39105
I2
s(g3275
I42
g3276
Vinsert
p39106
I37
VPostfixExpression: ++
p39107
tp39108
I1
s(g5879
I42
g5880
Vinsert
p39109
I42
VSimpleName: Thread
p39110
tp39111
I6
s(g9179
I42
g9180
Vinsert
p39112
I45
VStringLiteral: "org.mockito.internal.MockitoCore.verifyNoMoreInteractions"
p39113
tp39114
I1
s(g4657
I42
g4658
Vinsert
p39115
I39
VPrimitiveType: boolean
p39116
tp39117
I1
s(g3298
I42
g3299
Vinsert
p39118
I42
VSimpleName: T
p39119
tp39120
I2
s(g4006
I42
g4007
Vinsert
p39121
I42
VSimpleName: ArrayList
p39122
tp39123
I2
s(g7313
I42
g7314
Vinsert
p39124
I42
VSimpleName: MockSettings
p39125
tp39126
I1
s(g12427
I42
g12428
Vinsert
p39127
I27
VInfixExpression: !=
p39128
tp39129
I1
s(g12553
I42
g12554
Vinsert
p39130
I42
VSimpleName: methodMap
p39131
tp39132
I1
s(g6771
I42
g6772
Vinsert
p39133
I43
VSimpleType: DebuggingInfo
p39134
tp39135
I1
s(g10311
I42
g10312
Vinsert
p39136
I42
VSimpleName: listDependent
p39137
tp39138
I2
s(g12000
I42
g12001
Vinsert
p39139
I40
VQualifiedName: expectedExceptions.length
p39140
tp39141
I1
s(g5926
I42
g5927
Vinsert
p39142
I42
VSimpleName: defaultConfiguration
p39143
tp39144
I1
s(g8414
I42
g8415
Vinsert
p39145
I42
VSimpleName: when
p39146
tp39147
I1
s(g277
I42
g278
Vinsert
p39148
I42
VSimpleName: isEqualTo
p39149
tp39150
I1
s(g5599
I42
g5600
Vinsert
p39151
I43
VSimpleType: Attribute
p39152
tp39153
I1
s(g9901
I42
g9902
Vinsert
p39154
I74
VParameterizedType: Class<?>
p39155
tp39156
I1
s(g3455
I42
g3456
Vinsert
p39157
I42
VSimpleName: argument
p39158
tp39159
I2
s(g5512
I42
g5513
Vinsert
p39160
I42
VSimpleName: mock
p39161
tp39162
I1
s(g931
I42
g932
Vinsert
p39163
I42
VSimpleName: AbstractThing
p39164
tp39165
I2
s(g8986
I42
g8987
Vinsert
p39166
I42
VSimpleName: Object
p39167
tp39168
I2
s(g7395
I42
g7396
Vinsert
p39169
I43
VSimpleType: String
p39170
tp39171
I3
s(g5352
I42
g5353
Vinsert
p39172
I21
VExpressionStatement
p39173
tp39174
I1
s(g6064
I42
g6065
Vinsert
p39175
I42
VSimpleName: step
p39176
tp39177
I1
s(g4497
I42
g4498
Vinsert
p39178
I27
VInfixExpression: <=
p39179
tp39180
I1
s(g357
I42
g358
Vinsert
p39181
I59
VVariableDeclarationFragment
p39182
tp39183
I1
s(g6468
I42
g6469
Vinsert
p39184
I32
VMethodInvocation
p39185
tp39186
I36
s(g2770
I42
g2771
Vinsert
p39187
I44
VSingleVariableDeclaration
p39188
tp39189
I1
s(g2147
I42
g2148
Vinsert
p39190
I83
VModifier: public
p39191
tp39192
I2
s(g2429
I42
g2430
Vinsert
p39193
I83
VModifier: public
p39194
tp39195
I2
s(g6677
I42
g6678
Vinsert
p39196
I42
VSimpleName: Class
p39197
tp39198
I1
s(g4212
I42
g4213
Vinsert
p39199
I8
VBlock
p39200
tp39201
I1
s(g4017
I42
g4018
Vinsert
p39202
I42
VSimpleName: assertThat
p39203
tp39204
I2
s(g3219
I42
g3220
Vinsert
p39205
I42
VSimpleName: LocalizedMatcher
p39206
tp39207
I1
s(g3155
I42
g3156
Vinsert
p39208
I44
VSingleVariableDeclaration
p39209
tp39210
I1
s(g468
I42
g469
Vinsert
p39211
I32
VMethodInvocation
p39212
tp39213
I1
s(g114
I42
g115
Vinsert
p39214
I32
VMethodInvocation
p39215
tp39216
I3
s(g3016
I42
g3017
Vinsert
p39217
I42
VSimpleName: s
p39218
tp39219
I2
s(g5456
I42
g5457
Vinsert
p39220
I1
VAnonymousClassDeclaration
p39221
tp39222
I2
s(g8319
I42
g8320
Vinsert
p39223
I42
VSimpleName: behavior
p39224
tp39225
I1
s(g10846
I42
g10847
Vinsert
p39226
I8
VBlock
p39227
tp39228
I2
s(g543
I42
g544
Vinsert
p39229
I42
VSimpleName: MockitoException
p39230
tp39231
I1
s(g15351
I42
g15352
Vinsert
p39232
I43
VSimpleType: ThreadSafeMockingProgress
p39233
tp39234
I2
s(g8237
I42
g8238
Vinsert
p39235
I12
VCatchClause
p39236
tp39237
I1
s(g2959
I42
g2960
Vinsert
p39238
I21
VExpressionStatement
p39239
tp39240
I3
s(g7704
I42
g7705
Vinsert
p39241
I32
VMethodInvocation
p39242
tp39243
I6
s(g6535
I42
g6536
Vinsert
p39244
I42
VSimpleName: Exception
p39245
tp39246
I1
s(g673
I42
g674
Vinsert
p39247
I59
VVariableDeclarationFragment
p39248
tp39249
I2
s(g7961
I42
g7962
Vinsert
p39250
I43
VSimpleType: IMethods
p39251
tp39252
I2
s(g21496
I42
g21497
Vinsert
p39253
I45
VStringLiteral: "hashCode() is not implemented"
p39254
tp39255
I1
s(g4425
I42
g4426
Vinsert
p39256
I74
VParameterizedType: ArgumentCaptor<String>
p39257
tp39258
I1
s(g12649
I42
g12650
Vinsert
p39259
I42
VSimpleName: byteValue
p39260
tp39261
I1
s(g16107
I42
g16108
Vinsert
p39262
I42
VSimpleName: getMethod
p39263
tp39264
I1
s(g1538
I42
g1539
Vinsert
p39265
I42
VSimpleName: expectMessage
p39266
tp39267
I3
s(g3091
I42
g3092
Vinsert
p39268
I45
VStringLiteral: " 1. mock.simpleMethod(\u005c"a\u005c");\u005cn"
p39269
tp39270
I1
s(g5583
I42
g5584
Vinsert
p39271
I8
VBlock
p39272
tp39273
I2
s(g4835
I42
g4836
Vinsert
p39274
I42
VSimpleName: operation
p39275
tp39276
I2
s(g3856
I42
g3857
Vinsert
p39277
I42
VSimpleName: Class
p39278
tp39279
I2
s(g13694
I42
g13695
Vinsert
p39280
I42
VSimpleName: StackTraceFilter
p39281
tp39282
I1
s(g1477
I42
g1478
Vinsert
p39283
I42
VSimpleName: mock
p39284
tp39285
I2
s(g21537
I42
g21538
Vinsert
p39286
I42
VSimpleName: m
p39287
tp39288
I2
s(g15219
I42
g15220
Vinsert
p39289
I42
VSimpleName: Exception
p39290
tp39291
I1
s(g2526
I42
g2527
Vinsert
p39292
I32
VMethodInvocation
p39293
tp39294
I4
s(g25187
I42
g25188
Vinsert
p39295
I42
VSimpleName: getEnclosingClass
p39296
tp39297
I1
s(g14003
I42
g14004
Vinsert
p39298
I42
VSimpleName: String
p39299
tp39300
I10
s(g12046
I42
g12047
Vinsert
p39301
I40
VQualifiedName: array.length
p39302
tp39303
I1
s(g24000
I42
g24001
Vinsert
p39304
I42
VSimpleName: throwingConstructor
p39305
tp39306
I1
s(g7004
I42
g7005
Vinsert
p39307
I42
VSimpleName: smartNull
p39308
tp39309
I1
s(g13447
I42
g13448
Vinsert
p39310
I42
VSimpleName: List
p39311
tp39312
I2
s(g628
I42
g629
Vinsert
p39313
I42
VSimpleName: getClass
p39314
tp39315
I1
s(g415
I42
g416
Vinsert
p39316
I60
VVariableDeclarationStatement
p39317
tp39318
I1
s(g11961
I42
g11962
Vinsert
p39319
I42
VSimpleName: redefineMockNameIfSurrogate
p39320
tp39321
I1
s(g12885
I42
g12886
Vinsert
p39322
I31
VMethodDeclaration
p39323
tp39324
I1
s(g12245
I42
g12246
Vinsert
p39325
I66
VTextElement: Clean up the internal Mockito-Stubbing state
p39326
tp39327
I1
s(g14420
I42
g14421
Vinsert
p39328
I27
VInfixExpression: !=
p39329
tp39330
I2
s(g7200
I42
g7201
Vinsert
p39331
I43
VSimpleType: String
p39332
tp39333
I4
s(g6111
I42
g6112
Vinsert
p39334
I32
VMethodInvocation
p39335
tp39336
I2
s(g61
I42
g62
Vinsert
p39337
I43
VSimpleType: Throwable
p39338
tp39339
I1
s(g8716
I42
g8717
Vinsert
p39340
I42
VSimpleName: LinkedList
p39341
tp39342
I2
s(g3560
I42
g3561
Vinsert
p39343
I40
VQualifiedName: withConstructor.initializedWithConstructor
p39344
tp39345
I1
s(g5570
I42
g5571
Vinsert
p39346
I32
VMethodInvocation
p39347
tp39348
I2
s(g5439
I42
g5440
Vinsert
p39349
I43
VSimpleType: String
p39350
tp39351
I2
s(g508
I42
g509
Vinsert
p39352
I45
VStringLiteral: "user.name"
p39353
tp39354
I1
s(g6828
I42
g6829
Vinsert
p39355
I43
VSimpleType: String
p39356
tp39357
I10
s(g7292
I42
g7293
Vinsert
p39358
I42
VSimpleName: strictMode
p39359
tp39360
I1
s(g11538
I42
g11539
Vinsert
p39361
I42
VSimpleName: vmArg
p39362
tp39363
I1
s(g14566
I42
g14567
Vinsert
p39364
I42
VSimpleName: Exception
p39365
tp39366
I1
s(g14311
I42
g14312
Vinsert
p39367
I32
VMethodInvocation
p39368
tp39369
I11
s(g204
I42
g205
Vinsert
p39370
I14
VClassInstanceCreation
p39371
tp39372
I1
s(g4789
I42
g4790
Vinsert
p39373
I32
VMethodInvocation
p39374
tp39375
I4
s(g12133
I42
g12134
Vinsert
p39376
I42
VSimpleName: V
p39377
tp39378
I1
s(g9053
I42
g9054
Vinsert
p39379
I42
VSimpleName: containsString
p39380
tp39381
I1
s(g17639
I42
g17640
Vinsert
p39382
I42
VSimpleName: GitCommit
p39383
tp39384
I1
s(g17574
I42
g17575
Vinsert
p39385
I43
VSimpleType: IAnswer
p39386
tp39387
I1
s(g6566
I42
g6567
Vinsert
p39388
I42
VSimpleName: should_allow_construction_of_captor_for_a_more_specific_type
p39389
tp39390
I1
s(g9576
I42
g9577
Vinsert
p39391
I83
VModifier: public
p39392
tp39393
I1
s(g10767
I42
g10768
Vinsert
p39394
I42
VSimpleName: ArgumentCaptor
p39395
tp39396
I1
s(g4595
I42
g4596
Vinsert
p39397
I44
VSingleVariableDeclaration
p39398
tp39399
I1
s(g4999
I42
g5000
Vinsert
p39400
I27
VInfixExpression: <
p39401
tp39402
I1
s(g8324
I42
g8325
Vinsert
p39403
I45
VStringLiteral: "failingConstructor"
p39404
tp39405
I1
s(g4277
I42
g4278
Vinsert
p39406
I42
VSimpleName: mockTwo
p39407
tp39408
I1
s(g14928
I42
g14929
Vinsert
p39409
I43
VSimpleType: MockSettingsImpl
p39410
tp39411
I2
s(g134
I42
g135
Vinsert
p39412
I42
VSimpleName: Type
p39413
tp39414
I1
s(g4204
I42
g4205
Vinsert
p39415
I42
VSimpleName: shouldNotAllowUsingTheSameInterfaceAsExtra
p39416
tp39417
I2
s(g12449
I42
g12450
Vinsert
p39418
I42
VSimpleName: timeUnit
p39419
tp39420
I2
s(g36104
I42
g36105
Vinsert
p39421
I59
VVariableDeclarationFragment
p39422
tp39423
I2
s(g8057
I42
g8058
Vinsert
p39424
I45
VStringLiteral: "x"
p39425
tp39426
I3
s(g5180
I42
g5181
Vinsert
p39427
I39
VPrimitiveType: void
p39428
tp39429
I1
s(g2200
I42
g2201
Vinsert
p39430
I42
VSimpleName: wanted
p39431
tp39432
I1
s(g7124
I42
g7125
Vinsert
p39433
I9
VBooleanLiteral: true
p39434
tp39435
I1
s(g8951
I42
g8952
Vinsert
p39436
I42
VSimpleName: shouldInsertFieldWithCorrectNameWhenMultipleTypesAvailable
p39437
tp39438
I1
s(g6854
I42
g6855
Vinsert
p39439
I40
VQualifiedName: java.util.TreeMap
p39440
tp39441
I1
s(g12561
I42
g12562
Vinsert
p39442
I21
VExpressionStatement
p39443
tp39444
I1
s(g5206
I42
g5207
Vinsert
p39445
I33
VNullLiteral
p39446
tp39447
I2
s(g6919
I42
g6920
Vinsert
p39448
I44
VSingleVariableDeclaration
p39449
tp39450
I4
s(g15947
I42
g15948
Vinsert
p39451
I42
VSimpleName: no_exception_while_mocking_final_class
p39452
tp39453
I1
s(g5512
I42
g5513
Vinsert
p39454
I43
VSimpleType: DelayedExecution
p39455
tp39456
I1
s(g1269
I42
g1270
Vinsert
p39457
I42
VSimpleName: simpleMethod
p39458
tp39459
I2
s(g971
I42
g972
Vinsert
p39460
I42
VSimpleName: iMethods
p39461
tp39462
I1
s(g6598
I42
g6599
Vinsert
p39463
I42
VSimpleName: propertyDescriptor
p39464
tp39465
I3
s(g4263
I42
g4264
Vinsert
p39466
I42
VSimpleName: get
p39467
tp39468
I2
s(g2374
I42
g2375
Vinsert
p39469
I43
VSimpleType: String
p39470
tp39471
I2
s(g5256
I42
g5257
Vinsert
p39472
I45
VStringLiteral: "["
p39473
tp39474
I1
s(g352
I42
g353
Vinsert
p39475
I14
VClassInstanceCreation
p39476
tp39477
I1
s(g377
I42
g378
Vinsert
p39478
I42
VSimpleName: getMockedType
p39479
tp39480
I1
s(g13461
I42
g13462
Vinsert
p39481
I42
VSimpleName: doThrow
p39482
tp39483
I1
s(g10401
I42
g10402
Vinsert
p39484
I43
VSimpleType: Class
p39485
tp39486
I1
s(g7526
I42
g7527
Vinsert
p39487
I57
VTypeLiteral
p39488
tp39489
I1
s(Vinsert
p39490
I42
VSimpleName: matches
p39491
Vinsert
p39492
I42
VSimpleName: i
p39493
tp39494
I2
s(g9247
I42
g9248
Vinsert
p39495
I42
VSimpleName: CONFIG
p39496
tp39497
I3
s(g15203
I42
g15204
Vinsert
p39498
I42
VSimpleName: getClass
p39499
tp39500
I6
s(g25340
I42
g25341
Vinsert
p39501
I21
VExpressionStatement
p39502
tp39503
I1
s(g4939
I42
g4940
Vinsert
p39504
I42
VSimpleName: MockitoException
p39505
tp39506
I1
s(g2131
I42
g2132
Vinsert
p39507
I42
VSimpleName: s
p39508
tp39509
I2
s(g10567
I42
g10568
Vinsert
p39510
I43
VSimpleType: T
p39511
tp39512
I1
s(g6677
I42
g6678
Vinsert
p39513
I5
VArrayType: Type[]
p39514
tp39515
I1
s(g9395
I42
g9396
Vinsert
p39516
I42
VSimpleName: listener
p39517
tp39518
I2
s(g114
I42
g115
Vinsert
p39519
I42
VSimpleName: Object
p39520
tp39521
I2
s(g704
I42
g705
Vinsert
p39522
I43
VSimpleType: StrictRunner
p39523
tp39524
I1
s(g13042
I42
g13043
Vinsert
p39525
I78
VMarkerAnnotation
p39526
tp39527
I2
s(g18290
I42
g18291
Vinsert
p39528
I21
VExpressionStatement
p39529
tp39530
I8
s(g6363
I42
g6364
Vinsert
p39531
I44
VSingleVariableDeclaration
p39532
tp39533
I3
s(g7643
I42
g7644
Vinsert
p39534
I42
VSimpleName: Equals
p39535
tp39536
I1
s(g10401
I42
g10402
Vinsert
p39537
I42
VSimpleName: classFrom
p39538
tp39539
I5
s(g8126
I42
g8127
Vinsert
p39540
I21
VExpressionStatement
p39541
tp39542
I2
s(g2462
I42
g2463
Vinsert
p39543
I42
VSimpleName: bean
p39544
tp39545
I2
s(g4929
I42
g4930
Vinsert
p39546
I42
VSimpleName: stubbing
p39547
tp39548
I1
s(g16348
I42
g16349
Vinsert
p39549
I42
VSimpleName: list
p39550
tp39551
I1
s(g12354
I42
g12355
Vinsert
p39552
I42
VSimpleName: MethodVisitor
p39553
tp39554
I1
s(g906
I42
g907
Vinsert
p39555
I43
VSimpleType: Exception
p39556
tp39557
I2
s(g10354
I42
g10355
Vinsert
p39558
I39
VPrimitiveType: double
p39559
tp39560
I4
s(Vinsert
p39561
I42
VSimpleName: add
p39562
Vinsert
p39563
I74
VParameterizedType: ArrayList<String>
p39564
tp39565
I1
s(g2054
I42
g2055
Vinsert
p39566
I42
VSimpleName: mock
p39567
tp39568
I2
s(g3229
I42
g3230
Vinsert
p39569
I43
VSimpleType: TestBase
p39570
tp39571
I1
s(g3247
I42
g3248
Vinsert
p39572
I45
VStringLiteral: "Incorrect failure type, expected: "
p39573
tp39574
I2
s(g16760
I42
g16761
Vinsert
p39575
I42
VSimpleName: reset_mockito
p39576
tp39577
I1
s(g3555
I42
g3556
Vinsert
p39578
I34
VNumberLiteral: 200
p39579
tp39580
I5
s(g12649
I42
g12650
Vinsert
p39581
I32
VMethodInvocation
p39582
tp39583
I8
s(g851
I42
g852
Vinsert
p39584
I32
VMethodInvocation
p39585
tp39586
I1
s(g8478
I42
g8479
Vinsert
p39587
I43
VSimpleType: Factory
p39588
tp39589
I1
s(g15498
I42
g15499
Vinsert
p39590
I74
VParameterizedType: Class<?>
p39591
tp39592
I8
s(g1670
I42
g1671
Vinsert
p39593
I42
VSimpleName: InOrderContext
p39594
tp39595
I1
s(g287
I42
g288
Vinsert
p39596
I83
VModifier: public
p39597
tp39598
I1
s(g26617
I42
g26618
Vinsert
p39599
I43
VSimpleType: VerificationListener
p39600
tp39601
I1
s(g9045
I42
g9046
Vinsert
p39602
I42
VSimpleName: v
p39603
tp39604
I1
s(g3704
I42
g3705
Vinsert
p39605
I42
VSimpleName: TypeUtils
p39606
tp39607
I1
s(g1962
I42
g1963
Vinsert
p39608
I13
VCharacterLiteral: '1'
p39609
tp39610
I1
s(g14303
I42
g14304
Vinsert
p39611
I43
VSimpleType: List
p39612
tp39613
I2
s(g18268
I42
g18269
Vinsert
p39614
I42
VSimpleName: unverified
p39615
tp39616
I1
s(g4077
I42
g4078
Vinsert
p39617
I32
VMethodInvocation
p39618
tp39619
I9
s(g16314
I42
g16315
Vinsert
p39620
I42
VSimpleName: StringBuilder
p39621
tp39622
I1
s(g8383
I42
g8384
Vinsert
p39623
I42
VSimpleName: MockitoState
p39624
tp39625
I1
s(g12809
I42
g12810
Vinsert
p39626
I41
VReturnStatement
p39627
tp39628
I1
s(g4322
I42
g4323
Vinsert
p39629
I42
VSimpleName: invokedFor
p39630
tp39631
I1
s(g986
I42
g987
Vinsert
p39632
I83
VModifier: final
p39633
tp39634
I1
s(g12354
I42
g12355
Vinsert
p39635
I31
VMethodDeclaration
p39636
tp39637
I1
s(g2662
I42
g2663
Vinsert
p39638
I21
VExpressionStatement
p39639
tp39640
I4
s(Vinsert
p39641
I42
VSimpleName: verify
p39642
Vinsert
p39643
I69
VMethodRefParameter
p39644
tp39645
I1
s(g5295
I42
g5296
Vinsert
p39646
I42
VSimpleName: valueClass
p39647
tp39648
I1
s(g12799
I42
g12800
Vinsert
p39649
I59
VVariableDeclarationFragment
p39650
tp39651
I1
s(g2796
I42
g2797
Vinsert
p39652
I83
VModifier: public
p39653
tp39654
I1
s(g11678
I42
g11679
Vinsert
p39655
I42
VSimpleName: areEqual
p39656
tp39657
I2
s(g2452
I42
g2453
Vinsert
p39658
I43
VSimpleType: FileInputStream
p39659
tp39660
I1
s(g28144
I42
g28145
Vinsert
p39661
I45
VStringLiteral: "unchecked"
p39662
tp39663
I1
s(g760
I42
g761
Vinsert
p39664
I60
VVariableDeclarationStatement
p39665
tp39666
I1
s(g15719
I42
g15720
Vinsert
p39667
I43
VSimpleType: T
p39668
tp39669
I1
s(g4624
I42
g4625
Vinsert
p39670
I42
VSimpleName: MockitoConfiguration
p39671
tp39672
I2
s(g337
I42
g338
Vinsert
p39673
I42
VSimpleName: errcount
p39674
tp39675
I1
s(g7282
I42
g7283
Vinsert
p39676
I42
VSimpleName: fromRevision
p39677
tp39678
I1
s(g154
I42
g155
Vinsert
p39679
I44
VSingleVariableDeclaration
p39680
tp39681
I1
s(g16283
I42
g16284
Vinsert
p39682
I14
VClassInstanceCreation
p39683
tp39684
I3
s(g7057
I42
g7058
Vinsert
p39685
I42
VSimpleName: ReleaseStep
p39686
tp39687
I2
s(g3204
I42
g3205
Vinsert
p39688
I42
VSimpleName: Class
p39689
tp39690
I10
s(g3555
I42
g3556
Vinsert
p39691
I42
VSimpleName: assertEquals
p39692
tp39693
I1
s(g2796
I42
g2797
Vinsert
p39694
I21
VExpressionStatement
p39695
tp39696
I1
s(g8126
I42
g8127
Vinsert
p39697
I44
VSingleVariableDeclaration
p39698
tp39699
I1
s(g2557
I42
g2558
Vinsert
p39700
I42
VSimpleName: commit
p39701
tp39702
I4
s(g5256
I42
g5257
Vinsert
p39703
I59
VVariableDeclarationFragment
p39704
tp39705
I6
s(g11791
I42
g11792
Vinsert
p39706
I85
VDimension
p39707
tp39708
I1
s(g11099
I42
g11100
Vinsert
p39709
I44
VSingleVariableDeclaration
p39710
tp39711
I2
s(Vinsert
p39712
I42
VSimpleName: writeObject
p39713
Vinsert
p39714
I42
VSimpleName: IMethods
p39715
tp39716
I1
s(g9929
I42
g9930
Vinsert
p39717
I42
VSimpleName: thenReturn
p39718
tp39719
I2
s(g891
I42
g892
Vinsert
p39720
I42
VSimpleName: UndesiredInvocation
p39721
tp39722
I1
s(g16048
I42
g16049
Vinsert
p39723
I42
VSimpleName: print
p39724
tp39725
I2
s(g8798
I42
g8799
Vinsert
p39726
I42
VSimpleName: exception
p39727
tp39728
I2
s(g277
I42
g278
Vinsert
p39729
I45
VStringLiteral: "objectB"
p39730
tp39731
I1
s(g8931
I42
g8932
Vinsert
p39732
I45
VStringLiteral: "at com.FooTest:30"
p39733
tp39734
I1
s(g971
I42
g972
Vinsert
p39735
I42
VSimpleName: finalJ
p39736
tp39737
I1
s(g7961
I42
g7962
Vinsert
p39738
I57
VTypeLiteral
p39739
tp39740
I4
s(g15219
I42
g15220
Vinsert
p39741
I40
VQualifiedName: second.privateTransientField
p39742
tp39743
I1
s(g1987
I42
g1988
Vinsert
p39744
I43
VSimpleType: Description
p39745
tp39746
I1
s(g362
I42
g363
Vinsert
p39747
I43
VSimpleType: StubbingListener
p39748
tp39749
I2
s(g6890
I42
g6891
Vinsert
p39750
I27
VInfixExpression: ==
p39751
tp39752
I1
s(g3144
I42
g3145
Vinsert
p39753
I44
VSingleVariableDeclaration
p39754
tp39755
I2
s(g3257
I42
g3258
Vinsert
p39756
I42
VSimpleName: from
p39757
tp39758
I1
s(g8716
I42
g8717
Vinsert
p39759
I32
VMethodInvocation
p39760
tp39761
I3
s(g1739
I42
g1740
Vinsert
p39762
I42
VSimpleName: args
p39763
tp39764
I1
s(g11877
I42
g11878
Vinsert
p39765
I43
VSimpleType: String
p39766
tp39767
I1
s(g16240
I42
g16241
Vinsert
p39768
I76
VWildcardType: ?
p39769
tp39770
I1
s(g3318
I42
g3319
Vinsert
p39771
I42
VSimpleName: mismatches
p39772
tp39773
I1
s(g20322
I42
g20323
Vinsert
p39774
I32
VMethodInvocation
p39775
tp39776
I2
s(g11524
I42
g11525
Vinsert
p39777
I42
VSimpleName: matcher
p39778
tp39779
I2
s(g11172
I42
g11173
Vinsert
p39780
I42
VSimpleName: anyVararg
p39781
tp39782
I1
s(g2261
I42
g2262
Vinsert
p39783
I43
VSimpleType: Foo
p39784
tp39785
I5
s(g8237
I42
g8238
Vinsert
p39786
I8
VBlock
p39787
tp39788
I1
s(g15498
I42
g15499
Vinsert
p39789
I43
VSimpleType: Class
p39790
tp39791
I9
s(g3787
I42
g3788
Vinsert
p39792
I42
VSimpleName: clazz
p39793
tp39794
I2
s(g3680
I42
g3681
Vinsert
p39795
I34
VNumberLiteral: 1
p39796
tp39797
I6
s(g438
I42
g439
Vinsert
p39798
I8
VBlock
p39799
tp39800
I4
s(g16107
I42
g16108
Vinsert
p39801
I42
VSimpleName: isPrimitive
p39802
tp39803
I1
s(g8889
I42
g8890
Vinsert
p39804
I42
VSimpleName: mockMaker
p39805
tp39806
I1
s(g3753
I42
g3754
Vinsert
p39807
I42
VSimpleName: controlForStubbing
p39808
tp39809
I1
s(g4231
I42
g4232
Vinsert
p39810
I37
VPostfixExpression: ++
p39811
tp39812
I1
s(g3229
I42
g3230
Vinsert
p39813
I39
VPrimitiveType: void
p39814
tp39815
I1
s(g5078
I42
g5079
Vinsert
p39816
I42
VSimpleName: wantedCount
p39817
tp39818
I2
s(g2054
I42
g2055
Vinsert
p39819
I43
VSimpleType: InvocationContainerImpl
p39820
tp39821
I1
s(g2570
I42
g2571
Vinsert
p39822
I78
VMarkerAnnotation
p39823
tp39824
I1
s(g4111
I42
g4112
Vinsert
p39825
I44
VSingleVariableDeclaration
p39826
tp39827
I1
s(g17860
I42
g17861
Vinsert
p39828
I33
VNullLiteral
p39829
tp39830
I2
s(Vinsert
p39831
I42
VSimpleName: simpleMethod
p39832
Vinsert
p39833
I42
VSimpleName: DetectsInvalidState
p39834
tp39835
I1
s(g3709
I42
g3710
Vinsert
p39836
I11
VCastExpression
p39837
tp39838
I1
s(g14746
I42
g14747
Vinsert
p39839
I42
VSimpleName: typeWithParameters
p39840
tp39841
I1
s(g443
I42
g444
Vinsert
p39842
I11
VCastExpression
p39843
tp39844
I2
s(g5421
I42
g5422
Vinsert
p39845
I32
VMethodInvocation
p39846
tp39847
I4
s(g5256
I42
g5257
Vinsert
p39848
I42
VSimpleName: StringBuilder
p39849
tp39850
I17
s(g2018
I42
g2019
Vinsert
p39851
I42
VSimpleName: methodName
p39852
tp39853
I3
s(g10401
I42
g10402
Vinsert
p39854
I42
VSimpleName: Class
p39855
tp39856
I1
s(g9942
I42
g9943
Vinsert
p39857
I33
VNullLiteral
p39858
tp39859
I1
s(g23453
I42
g23454
Vinsert
p39860
I42
VSimpleName: clone
p39861
tp39862
I1
s(g5282
I42
g5283
Vinsert
p39863
I43
VSimpleType: List
p39864
tp39865
I1
s(g11418
I42
g11419
Vinsert
p39866
I42
VSimpleName: MethodInterceptorFilter
p39867
tp39868
I1
s(g5226
I42
g5227
Vinsert
p39869
I42
VSimpleName: subs
p39870
tp39871
I1
s(g4247
I42
g4248
Vinsert
p39872
I42
VSimpleName: assertThat
p39873
tp39874
I2
s(g14014
I42
g14015
Vinsert
p39875
I45
VStringLiteral: ". Undesired invocation:"
p39876
tp39877
I1
s(g7451
I42
g7452
Vinsert
p39878
I42
VSimpleName: Override
p39879
tp39880
I1
s(g12362
I42
g12363
Vinsert
p39881
I42
VSimpleName: mockitoMethod
p39882
tp39883
I1
s(g4290
I42
g4291
Vinsert
p39884
I42
VSimpleName: i
p39885
tp39886
I9
s(g11659
I42
g11660
Vinsert
p39887
I42
VSimpleName: Method
p39888
tp39889
I1
s(g796
I42
g797
Vinsert
p39890
I45
VStringLiteral: "getMethodProxy"
p39891
tp39892
I1
s(g6566
I42
g6567
Vinsert
p39893
I59
VVariableDeclarationFragment
p39894
tp39895
I4
s(g5921
I42
g5922
Vinsert
p39896
I43
VSimpleType: Exception
p39897
tp39898
I1
s(g10091
I42
g10092
Vinsert
p39899
I42
VSimpleName: CodeEmitter
p39900
tp39901
I1
s(g1655
I42
g1656
Vinsert
p39902
I42
VSimpleName: Date
p39903
tp39904
I1
s(g765
I42
g766
Vinsert
p39905
I83
VModifier: public
p39906
tp39907
I1
s(g1154
I42
g1155
Vinsert
p39908
I83
VModifier: public
p39909
tp39910
I1
s(g3011
I42
g3012
Vinsert
p39911
I44
VSingleVariableDeclaration
p39912
tp39913
I2
s(g6535
I42
g6536
Vinsert
p39914
I43
VSimpleType: AccessibilityChanger
p39915
tp39916
I1
s(g3214
I42
g3215
Vinsert
p39917
I32
VMethodInvocation
p39918
tp39919
I1
s(g5282
I42
g5283
Vinsert
p39920
I25
VIfStatement
p39921
tp39922
I1
s(g14155
I42
g14156
Vinsert
p39923
I42
VSimpleName: shouldFailOnWrongMethodCalledOnMockTwo
p39924
tp39925
I1
s(g14538
I42
g14539
Vinsert
p39926
I21
VExpressionStatement
p39927
tp39928
I1
s(g3101
I42
g3102
Vinsert
p39929
I74
VParameterizedType: NewOngoingStubbing<T>
p39930
tp39931
I1
s(g10772
I42
g10773
Vinsert
p39932
I44
VSingleVariableDeclaration
p39933
tp39934
I1
s(g22492
I42
g22493
Vinsert
p39935
I42
VSimpleName: StackTraceElement
p39936
tp39937
I1
s(g9334
I42
g9335
Vinsert
p39938
I12
VCatchClause
p39939
tp39940
I1
s(g4784
I42
g4785
Vinsert
p39941
I42
VSimpleName: Observable
p39942
tp39943
I1
s(g23336
I42
g23337
Vinsert
p39944
I42
VSimpleName: error
p39945
tp39946
I3
s(g7302
I42
g7303
Vinsert
p39947
I32
VMethodInvocation
p39948
tp39949
I14
s(g4461
I42
g4462
Vinsert
p39950
I42
VSimpleName: numberOfRelatedArticles
p39951
tp39952
I1
s(g12213
I42
g12214
Vinsert
p39953
I43
VSimpleType: String
p39954
tp39955
I3
s(g4189
I42
g4190
Vinsert
p39956
I42
VSimpleName: Class
p39957
tp39958
I1
s(g1688
I42
g1689
Vinsert
p39959
I44
VSingleVariableDeclaration
p39960
tp39961
I3
s(g14014
I42
g14015
Vinsert
p39962
I27
VInfixExpression: +
p39963
tp39964
I3
s(g1006
I42
g1007
Vinsert
p39965
I42
VSimpleName: filtered
p39966
tp39967
I1
s(g12337
I42
g12338
Vinsert
p39968
I42
VSimpleName: thenReturn
p39969
tp39970
I1
s(g593
I42
g594
Vinsert
p39971
I43
VSimpleType: Object
p39972
tp39973
I2
s(g5393
I42
g5394
Vinsert
p39974
I42
VSimpleName: that
p39975
tp39976
I2
s(g3073
I42
g3074
Vinsert
p39977
I39
VPrimitiveType: boolean
p39978
tp39979
I1
s(g282
I42
g283
Vinsert
p39980
I8
VBlock
p39981
tp39982
I2
s(g2256
I42
g2257
Vinsert
p39983
I42
VSimpleName: throwable
p39984
tp39985
I1
s(g1513
I42
g1514
Vinsert
p39986
I74
VParameterizedType: Collection<Object>
p39987
tp39988
I1
s(g5269
I42
g5270
Vinsert
p39989
I42
VSimpleName: callMock
p39990
tp39991
I1
s(g22136
I42
g22137
Vinsert
p39992
I21
VExpressionStatement
p39993
tp39994
I9
s(g24801
I42
g24802
Vinsert
p39995
I42
VSimpleName: isEmpty
p39996
tp39997
I1
s(g14412
I42
g14413
Vinsert
p39998
I42
VSimpleName: returnValue
p39999
tp40000
I1
s(g4143
I42
g4144
Vinsert
p40001
I8
VBlock
p40002
tp40003
I1
s(g956
I42
g957
Vinsert
p40004
I43
VSimpleType: Runnable
p40005
tp40006
I1
s(g5352
I42
g5353
Vinsert
p40007
I42
VSimpleName: mode
p40008
tp40009
I1
s(g2085
I42
g2086
Vinsert
p40010
I42
VSimpleName: Object
p40011
tp40012
I3
s(g2934
I42
g2935
Vinsert
p40013
I42
VSimpleName: run
p40014
tp40015
I3
s(g10846
I42
g10847
Vinsert
p40016
I42
VSimpleName: String
p40017
tp40018
I4
s(g3493
I42
g3494
Vinsert
p40019
I43
VSimpleType: Matcher
p40020
tp40021
I1
s(g6872
I42
g6873
Vinsert
p40022
I39
VPrimitiveType: long
p40023
tp40024
I3
s(g13936
I42
g13937
Vinsert
p40025
I42
VSimpleName: cl
p40026
tp40027
I2
s(g262
I42
g263
Vinsert
p40028
I43
VSimpleType: Class
p40029
tp40030
I2
s(g21977
I42
g21978
Vinsert
p40031
I32
VMethodInvocation
p40032
tp40033
I4
s(g10696
I42
g10697
Vinsert
p40034
I45
VStringLiteral: ""
p40035
tp40036
I2
s(g2227
I42
g2228
Vinsert
p40037
I21
VExpressionStatement
p40038
tp40039
I1
s(g13540
I42
g13541
Vinsert
p40040
I43
VSimpleType: String
p40041
tp40042
I4
s(g29768
I42
g29769
Vinsert
p40043
I42
VSimpleName: Before
p40044
tp40045
I3
s(g13881
I42
g13882
Vinsert
p40046
I59
VVariableDeclarationFragment
p40047
tp40048
I2
s(g20322
I42
g20323
Vinsert
p40049
I42
VSimpleName: InvocationOnMock
p40050
tp40051
I1
s(g1274
I42
g1275
Vinsert
p40052
I42
VSimpleName: expected
p40053
tp40054
I1
s(g681
I42
g682
Vinsert
p40055
I34
VNumberLiteral: 0
p40056
tp40057
I1
s(g11691
I42
g11692
Vinsert
p40058
I42
VSimpleName: Test
p40059
tp40060
I2
s(g21691
I42
g21692
Vinsert
p40061
I59
VVariableDeclarationFragment
p40062
tp40063
I2
s(g184
I42
g185
Vinsert
p40064
I83
VModifier: static
p40065
tp40066
I1
s(g26027
I42
g26028
Vinsert
p40067
I43
VSimpleType: Foo
p40068
tp40069
I1
s(g5636
I42
g5637
Vinsert
p40070
I42
VSimpleName: andReturn
p40071
tp40072
I1
s(g12872
I42
g12873
Vinsert
p40073
I57
VTypeLiteral
p40074
tp40075
I2
s(g184
I42
g185
Vinsert
p40076
I66
VTextElement:  minimum number of invocations 
p40077
tp40078
I1
s(g578
I42
g579
Vinsert
p40079
I42
VSimpleName: unit
p40080
tp40081
I2
s(g1934
I42
g1935
Vinsert
p40082
I42
VSimpleName: type
p40083
tp40084
I2
s(g801
I42
g802
Vinsert
p40085
I42
VSimpleName: Description
p40086
tp40087
I2
s(g1249
I42
g1250
Vinsert
p40088
I39
VPrimitiveType: void
p40089
tp40090
I7
s(g11214
I42
g11215
Vinsert
p40091
I32
VMethodInvocation
p40092
tp40093
I3
s(g2434
I42
g2435
Vinsert
p40094
I42
VSimpleName: Integer
p40095
tp40096
I1
s(g282
I42
g283
Vinsert
p40097
I40
VQualifiedName: InterceptedInvocation.SuperMethod
p40098
tp40099
I1
s(g846
I42
g847
Vinsert
p40100
I43
VSimpleType: InvocationBuilder
p40101
tp40102
I21
s(g513
I42
g514
Vinsert
p40103
I32
VMethodInvocation
p40104
tp40105
I14
s(g3735
I42
g3736
Vinsert
p40106
I43
VSimpleType: ByteBuddyMockMaker
p40107
tp40108
I1
s(g37972
I42
g37973
Vinsert
p40109
I83
VModifier: private
p40110
tp40111
I1
s(g17014
I42
g17015
Vinsert
p40112
I42
VSimpleName: NotAMockException
p40113
tp40114
I2
s(g10164
I42
g10165
Vinsert
p40115
I8
VBlock
p40116
tp40117
I1
s(g13161
I42
g13162
Vinsert
p40118
I43
VSimpleType: String
p40119
tp40120
I1
s(g12994
I42
g12995
Vinsert
p40121
I42
VSimpleName: VerificationData
p40122
tp40123
I2
s(g558
I42
g559
Vinsert
p40124
I42
VSimpleName: StackTraceCleanerProvider
p40125
tp40126
I1
s(g3864
I42
g3865
Vinsert
p40127
I42
VSimpleName: owner
p40128
tp40129
I2
s(g19774
I42
g19775
Vinsert
p40130
I42
VSimpleName: mockTwo
p40131
tp40132
I1
s(g10385
I42
g10386
Vinsert
p40133
I42
VSimpleName: j
p40134
tp40135
I1
s(g3116
I42
g3117
Vinsert
p40136
I42
VSimpleName: ensure_the_test_runner_breaks
p40137
tp40138
I1
s(g6846
I42
g6847
Vinsert
p40139
I42
VSimpleName: v
p40140
tp40141
I1
s(g1274
I42
g1275
Vinsert
p40142
I43
VSimpleType: Object
p40143
tp40144
I1
s(g12354
I42
g12355
Vinsert
p40145
I42
VSimpleName: METHOD_INSN
p40146
tp40147
I1
s(g20386
I42
g20387
Vinsert
p40148
I36
VParenthesizedExpression
p40149
tp40150
I2
s(g16454
I42
g16455
Vinsert
p40151
I39
VPrimitiveType: void
p40152
tp40153
I6
s(g871
I42
g872
Vinsert
p40154
I42
VSimpleName: s
p40155
tp40156
I2
s(g831
I42
g832
Vinsert
p40157
I42
VSimpleName: actualInvocations
p40158
tp40159
I1
s(g4924
I42
g4925
Vinsert
p40160
I32
VMethodInvocation
p40161
tp40162
I57
s(g821
I42
g822
Vinsert
p40163
I70
VEnhancedForStatement
p40164
tp40165
I1
s(g1553
I42
g1554
Vinsert
p40166
I21
VExpressionStatement
p40167
tp40168
I1
s(g5100
I42
g5101
Vinsert
p40169
I42
VSimpleName: FIELD_NAME
p40170
tp40171
I1
s(g20085
I42
g20086
Vinsert
p40172
I42
VSimpleName: major
p40173
tp40174
I2
s(g24722
I42
g24723
Vinsert
p40175
I43
VSimpleType: T
p40176
tp40177
I5
s(g5570
I42
g5571
Vinsert
p40178
I42
VSimpleName: actual
p40179
tp40180
I1
s(g19469
I42
g19470
Vinsert
p40181
I42
VSimpleName: utils
p40182
tp40183
I1
s(g27767
I42
g27768
Vinsert
p40184
I43
VSimpleType: MockitoException
p40185
tp40186
I1
s(g5892
I42
g5893
Vinsert
p40187
I43
VSimpleType: Invocation
p40188
tp40189
I1
s(g2939
I42
g2940
Vinsert
p40190
I8
VBlock
p40191
tp40192
I1
s(g19144
I42
g19145
Vinsert
p40193
I40
VQualifiedName: org.assertj.core.api.Assertions
p40194
tp40195
I1
s(g1482
I42
g1483
Vinsert
p40196
I42
VSimpleName: actual
p40197
tp40198
I1
s(g12977
I42
g12978
Vinsert
p40199
I43
VSimpleType: Throwable
p40200
tp40201
I1
s(g35705
I42
g35706
Vinsert
p40202
I42
VSimpleName: actual
p40203
tp40204
I1
s(g6647
I42
g6648
Vinsert
p40205
I27
VInfixExpression: ==
p40206
tp40207
I5
s(g19709
I42
g19710
Vinsert
p40208
I43
VSimpleType: InvocationNotifierHandler
p40209
tp40210
I2
s(g8388
I42
g8389
Vinsert
p40211
I39
VPrimitiveType: int
p40212
tp40213
I1
s(g3606
I42
g3607
Vinsert
p40214
I41
VReturnStatement
p40215
tp40216
I2
s(g1688
I42
g1689
Vinsert
p40217
I14
VClassInstanceCreation
p40218
tp40219
I2
s(g3219
I42
g3220
Vinsert
p40220
I42
VSimpleName: isEmpty
p40221
tp40222
I1
s(g16240
I42
g16241
Vinsert
p40223
I41
VReturnStatement
p40224
tp40225
I1
s(g15804
I42
g15805
Vinsert
p40226
I42
VSimpleName: Throwable
p40227
tp40228
I1
s(g26908
I42
g26909
Vinsert
p40229
I42
VSimpleName: toInvocationMatcher
p40230
tp40231
I1
s(g13304
I42
g13305
Vinsert
p40232
I42
VSimpleName: when
p40233
tp40234
I2
s(g8414
I42
g8415
Vinsert
p40235
I42
VSimpleName: testInnerMockShouldRaiseAnExceptionThatChangesOuterMockBehavior
p40236
tp40237
I1
s(g2439
I42
g2440
Vinsert
p40238
I32
VMethodInvocation
p40239
tp40240
I7
s(g896
I42
g897
Vinsert
p40241
I42
VSimpleName: serialized
p40242
tp40243
I2
s(g21782
I42
g21783
Vinsert
p40244
I42
VSimpleName: tool
p40245
tp40246
I1
s(g2788
I42
g2789
Vinsert
p40247
I34
VNumberLiteral: 1
p40248
tp40249
I4
s(g4973
I42
g4974
Vinsert
p40250
I25
VIfStatement
p40251
tp40252
I1
s(Vinsert
p40253
I42
VSimpleName: resolveGenericReturnType
p40254
Vinsert
p40255
I42
VSimpleName: typeVariable_with_type_parameters_return_type_of___typeVarWithTypeParams___resolved_K_hence_to_Comparable_and_with_BoundedType
p40256
tp40257
I1
s(g8533
I42
g8534
Vinsert
p40258
I42
VSimpleName: LastArguments
p40259
tp40260
I15
s(g14868
I42
g14869
Vinsert
p40261
I42
VSimpleName: r
p40262
tp40263
I1
s(g5052
I42
g5053
Vinsert
p40264
I42
VSimpleName: proxyInstance
p40265
tp40266
I1
s(g9403
I42
g9404
Vinsert
p40267
I45
VStringLiteral: "9999"
p40268
tp40269
I2
s(g1765
I42
g1766
Vinsert
p40270
I42
VSimpleName: allRemainingCandidateFields
p40271
tp40272
I2
s(g8131
I42
g8132
Vinsert
p40273
I32
VMethodInvocation
p40274
tp40275
I2
s(g5368
I42
g5369
Vinsert
p40276
I8
VBlock
p40277
tp40278
I4
s(g24234
I42
g24235
Vinsert
p40279
I42
VSimpleName: InnerClass
p40280
tp40281
I2
s(g2005
I42
g2006
Vinsert
p40282
I39
VPrimitiveType: void
p40283
tp40284
I1
s(g6321
I42
g6322
Vinsert
p40285
I42
VSimpleName: ReturnsArgumentAt
p40286
tp40287
I2
s(g18627
I42
g18628
Vinsert
p40288
I42
VSimpleName: shouldCheckTypesFast
p40289
tp40290
I1
s(g7022
I42
g7023
Vinsert
p40291
I32
VMethodInvocation
p40292
tp40293
I4
s(g5834
I42
g5835
Vinsert
p40294
I27
VInfixExpression: &&
p40295
tp40296
I1
s(g961
I42
g962
Vinsert
p40297
I42
VSimpleName: MockMethodAdvice
p40298
tp40299
I1
s(g7200
I42
g7201
Vinsert
p40300
I41
VReturnStatement
p40301
tp40302
I2
s(g13622
I42
g13623
Vinsert
p40303
I42
VSimpleName: CUSTOM_RETURN_VALUES
p40304
tp40305
I2
s(g25131
I42
g25132
Vinsert
p40306
I8
VBlock
p40307
tp40308
I2
s(g7564
I42
g7565
Vinsert
p40309
I31
VMethodDeclaration
p40310
tp40311
I1
s(g8778
I42
g8779
Vinsert
p40312
I42
VSimpleName: assertFalse
p40313
tp40314
I2
s(g16154
I42
g16155
Vinsert
p40315
I21
VExpressionStatement
p40316
tp40317
I8
s(g623
I42
g624
Vinsert
p40318
I32
VMethodInvocation
p40319
tp40320
I5
s(g463
I42
g464
Vinsert
p40321
I21
VExpressionStatement
p40322
tp40323
I1
s(g5196
I42
g5197
Vinsert
p40324
I43
VSimpleType: List
p40325
tp40326
I1
s(g12154
I42
g12155
Vinsert
p40327
I43
VSimpleType: T
p40328
tp40329
I1
s(g11
I42
g12
Vinsert
p40330
I38
VPrefixExpression: !
p40331
tp40332
I1
s(g1563
I42
g1564
Vinsert
p40333
I43
VSimpleType: Invocation
p40334
tp40335
I1
s(g778
I42
g779
Vinsert
p40336
I42
VSimpleName: fv
p40337
tp40338
I1
s(g8205
I42
g8206
Vinsert
p40339
I42
VSimpleName: Object
p40340
tp40341
I9
s(g7752
I42
g7753
Vinsert
p40342
I39
VPrimitiveType: void
p40343
tp40344
I1
s(g4704
I42
g4705
Vinsert
p40345
I42
VSimpleName: printSettings
p40346
tp40347
I1
s(g2170
I42
g2171
Vinsert
p40348
I42
VSimpleName: Object
p40349
tp40350
I1
s(g8237
I42
g8238
Vinsert
p40351
I43
VSimpleType: ClassCastException
p40352
tp40353
I1
s(g15429
I42
g15430
Vinsert
p40354
I58
VVariableDeclarationExpression
p40355
tp40356
I7
s(g2695
I42
g2696
Vinsert
p40357
I42
VSimpleName: unfilteredStackTrace
p40358
tp40359
I1
s(g11370
I42
g11371
Vinsert
p40360
I66
VTextElement: )
p40361
tp40362
I1
s(g377
I42
g378
Vinsert
p40363
I74
VParameterizedType: Class<?>
p40364
tp40365
I1
s(g1731
I42
g1732
Vinsert
p40366
I43
VSimpleType: Map
p40367
tp40368
I1
s(g405
I42
g406
Vinsert
p40369
I42
VSimpleName: Checks
p40370
tp40371
I1
s(g17987
I42
g17988
Vinsert
p40372
I57
VTypeLiteral
p40373
tp40374
I2
s(g4688
I42
g4689
Vinsert
p40375
I42
VSimpleName: report
p40376
tp40377
I3
s(g6841
I42
g6842
Vinsert
p40378
I21
VExpressionStatement
p40379
tp40380
I1
s(g15179
I42
g15180
Vinsert
p40381
I42
VSimpleName: iMethods
p40382
tp40383
I2
s(g252
I42
g253
Vinsert
p40384
I32
VMethodInvocation
p40385
tp40386
I2
s(g1367
I42
g1368
Vinsert
p40387
I42
VSimpleName: Foo
p40388
tp40389
I2
s(g3909
I42
g3910
Vinsert
p40390
I34
VNumberLiteral: 0
p40391
tp40392
I1
s(g4199
I42
g4200
Vinsert
p40393
I42
VSimpleName: declaration
p40394
tp40395
I2
s(g3914
I42
g3915
Vinsert
p40396
I59
VVariableDeclarationFragment
p40397
tp40398
I2
s(g8146
I42
g8147
Vinsert
p40399
I42
VSimpleName: Override
p40400
tp40401
I1
s(g3303
I42
g3304
Vinsert
p40402
I59
VVariableDeclarationFragment
p40403
tp40404
I1
s(g3308
I42
g3309
Vinsert
p40405
I42
VSimpleName: intReturningMethod
p40406
tp40407
I1
s(g10659
I42
g10660
Vinsert
p40408
I42
VSimpleName: TestClassThatHoldValidField
p40409
tp40410
I2
s(g25046
I42
g25047
Vinsert
p40411
I45
VStringLiteral: "unfinishedVerificationHere("
p40412
tp40413
I1
s(g12267
I42
g12268
Vinsert
p40414
I42
VSimpleName: appendConstant
p40415
tp40416
I1
s(g13493
I42
g13494
Vinsert
p40417
I42
VSimpleName: iMethods
p40418
tp40419
I1
s(g6355
I42
g6356
Vinsert
p40420
I42
VSimpleName: mockOne
p40421
tp40422
I2
s(g1614
I42
g1615
Vinsert
p40423
I21
VExpressionStatement
p40424
tp40425
I1
s(g7177
I42
g7178
Vinsert
p40426
I43
VSimpleType: StrictRunner
p40427
tp40428
I2
s(g9734
I42
g9735
Vinsert
p40429
I42
VSimpleName: mockedType
p40430
tp40431
I1
s(g8439
I42
g8440
Vinsert
p40432
I45
VStringLiteral: "Hello world"
p40433
tp40434
I1
s(g14454
I42
g14455
Vinsert
p40435
I36
VParenthesizedExpression
p40436
tp40437
I1
s(g11524
I42
g11525
Vinsert
p40438
I43
VSimpleType: StubbedInvocationMatcher
p40439
tp40440
I2
s(g8226
I42
g8227
Vinsert
p40441
I11
VCastExpression
p40442
tp40443
I2
s(g5426
I42
g5427
Vinsert
p40444
I27
VInfixExpression: &&
p40445
tp40446
I1
s(g10567
I42
g10568
Vinsert
p40447
I42
VSimpleName: reportMatcher
p40448
tp40449
I2
s(g3880
I42
g3881
Vinsert
p40450
I25
VIfStatement
p40451
tp40452
I1
s(g5206
I42
g5207
Vinsert
p40453
I42
VSimpleName: e
p40454
tp40455
I1
s(g10567
I42
g10568
Vinsert
p40456
I42
VSimpleName: Set
p40457
tp40458
I2
s(g5237
I42
g5238
Vinsert
p40459
I39
VPrimitiveType: void
p40460
tp40461
I1
s(g4006
I42
g4007
Vinsert
p40462
I74
VParameterizedType: ArrayList<Field>
p40463
tp40464
I1
s(g11498
I42
g11499
Vinsert
p40465
I42
VSimpleName: classToMock
p40466
tp40467
I1
s(g25429
I42
g25430
Vinsert
p40468
I45
VStringLiteral: " stubbed with: "
p40469
tp40470
I1
s(g3488
I42
g3489
Vinsert
p40471
I43
VSimpleType: Throwable
p40472
tp40473
I3
s(g5660
I42
g5661
Vinsert
p40474
I57
VTypeLiteral
p40475
tp40476
I3
s(g11552
I42
g11553
Vinsert
p40477
I42
VSimpleName: getClassName
p40478
tp40479
I1
s(g26530
I42
g26531
Vinsert
p40480
I43
VSimpleType: ByteArrayOutputStream
p40481
tp40482
I1
s(g8052
I42
g8053
Vinsert
p40483
I42
VSimpleName: p
p40484
tp40485
I1
s(g6321
I42
g6322
Vinsert
p40486
I14
VClassInstanceCreation
p40487
tp40488
I12
s(g523
I42
g524
Vinsert
p40489
I70
VEnhancedForStatement
p40490
tp40491
I1
s(g2748
I42
g2749
Vinsert
p40492
I32
VMethodInvocation
p40493
tp40494
I13
s(g2590
I42
g2591
Vinsert
p40495
I43
VSimpleType: SimplePerRealmReloadingClassLoader
p40496
tp40497
I1
s(g5575
I42
g5576
Vinsert
p40498
I21
VExpressionStatement
p40499
tp40500
I1
s(g17803
I42
g17804
Vinsert
p40501
I42
VSimpleName: DebuggingInfo
p40502
tp40503
I1
s(g13855
I42
g13856
Vinsert
p40504
I43
VSimpleType: VerificationStartedEvent
p40505
tp40506
I1
s(g2775
I42
g2776
Vinsert
p40507
I42
VSimpleName: result
p40508
tp40509
I2
s(g821
I42
g822
Vinsert
p40510
I42
VSimpleName: registeredInvocations
p40511
tp40512
I1
s(g2398
I42
g2399
Vinsert
p40513
I27
VInfixExpression: ==
p40514
tp40515
I2
s(g2054
I42
g2055
Vinsert
p40516
I32
VMethodInvocation
p40517
tp40518
I7
s(g5295
I42
g5296
Vinsert
p40519
I42
VSimpleName: referenceType
p40520
tp40521
I2
s(g433
I42
g434
Vinsert
p40522
I39
VPrimitiveType: void
p40523
tp40524
I5
s(g826
I42
g827
Vinsert
p40525
I8
VBlock
p40526
tp40527
I8
s(g14366
I42
g14367
Vinsert
p40528
I85
VDimension
p40529
tp40530
I1
s(g12188
I42
g12189
Vinsert
p40531
I1
VAnonymousClassDeclaration
p40532
tp40533
I3
s(g14336
I42
g14337
Vinsert
p40534
I42
VSimpleName: String
p40535
tp40536
I4
s(g36654
I42
g36655
Vinsert
p40537
I42
VSimpleName: anInjectedObject
p40538
tp40539
I1
s(g8504
I42
g8505
Vinsert
p40540
I42
VSimpleName: valueOf
p40541
tp40542
I1
s(g3026
I42
g3027
Vinsert
p40543
I33
VNullLiteral
p40544
tp40545
I2
s(g8488
I42
g8489
Vinsert
p40546
I43
VSimpleType: DummyInterface
p40547
tp40548
I1
s(g4401
I42
g4402
Vinsert
p40549
I42
VSimpleName: getName
p40550
tp40551
I1
s(Vinsert
p40552
I42
VSimpleName: simpleMethod
p40553
Vinsert
p40554
I42
VSimpleName: shouldGetAllInvocationsInOrder
p40555
tp40556
I1
s(g22637
I42
g22638
Vinsert
p40557
I43
VSimpleType: MatchersBinder
p40558
tp40559
I1
s(g5549
I42
g5550
Vinsert
p40560
I42
VSimpleName: Number
p40561
tp40562
I1
s(g3280
I42
g3281
Vinsert
p40563
I43
VSimpleType: MockitoListener
p40564
tp40565
I1
s(g2326
I42
g2327
Vinsert
p40566
I21
VExpressionStatement
p40567
tp40568
I1
s(g2005
I42
g2006
Vinsert
p40569
I42
VSimpleName: Test
p40570
tp40571
I1
s(g27880
I42
g27881
Vinsert
p40572
I42
VSimpleName: IMethods
p40573
tp40574
I4
s(g3991
I42
g3992
Vinsert
p40575
I45
VStringLiteral: "org.testcase.MockedClass$MockitoMock$1882975947.doSomething(Unknown Source)"
p40576
tp40577
I1
s(g2026
I42
g2027
Vinsert
p40578
I42
VSimpleName: finder
p40579
tp40580
I1
s(g1129
I42
g1130
Vinsert
p40581
I42
VSimpleName: threadSafely
p40582
tp40583
I2
s(g1034
I42
g1035
Vinsert
p40584
I42
VSimpleName: aTarget
p40585
tp40586
I1
s(g2467
I42
g2468
Vinsert
p40587
I43
VSimpleType: T
p40588
tp40589
I1
s(g5839
I42
g5840
Vinsert
p40590
I43
VSimpleType: NoSuchMethodException
p40591
tp40592
I1
s(g2531
I42
g2532
Vinsert
p40593
I32
VMethodInvocation
p40594
tp40595
I1
s(g4840
I42
g4841
Vinsert
p40596
I42
VSimpleName: PluginRegistry
p40597
tp40598
I1
s(g8867
I42
g8868
Vinsert
p40599
I8
VBlock
p40600
tp40601
I1
s(g1229
I42
g1230
Vinsert
p40602
I42
VSimpleName: Test
p40603
tp40604
I1
s(g16291
I42
g16292
Vinsert
p40605
I83
VModifier: private
p40606
tp40607
I1
s(g4861
I42
g4862
Vinsert
p40608
I42
VSimpleName: Collection
p40609
tp40610
I1
s(g2934
I42
g2935
Vinsert
p40611
I83
VModifier: public
p40612
tp40613
I4
s(g17478
I42
g17479
Vinsert
p40614
I42
VSimpleName: Process
p40615
tp40616
I2
s(g9734
I42
g9735
Vinsert
p40617
I45
VStringLiteral: "The mock '"
p40618
tp40619
I1
s(g901
I42
g902
Vinsert
p40620
I42
VSimpleName: invocation
p40621
tp40622
I1
s(g16709
I42
g16710
Vinsert
p40623
I42
VSimpleName: printer
p40624
tp40625
I2
s(g11839
I42
g11840
Vinsert
p40626
I42
VSimpleName: Ignore
p40627
tp40628
I2
s(g2988
I42
g2989
Vinsert
p40629
I27
VInfixExpression: &&
p40630
tp40631
I2
s(g7859
I42
g7860
Vinsert
p40632
I42
VSimpleName: fieldWasInitialized
p40633
tp40634
I1
s(g7534
I42
g7535
Vinsert
p40635
I52
VThisExpression
p40636
tp40637
I1
s(g4027
I42
g4028
Vinsert
p40638
I34
VNumberLiteral: 1
p40639
tp40640
I2
s(g3688
I42
g3689
Vinsert
p40641
I40
VQualifiedName: org.junit.runners.model.FrameworkMethod
p40642
tp40643
I1
s(g3126
I42
g3127
Vinsert
p40644
I42
VSimpleName: Timeout
p40645
tp40646
I1
s(g11538
I42
g11539
Vinsert
p40647
I42
VSimpleName: inputArguments
p40648
tp40649
I1
s(Vinsert
p40650
I42
VSimpleName: getClass
p40651
Vinsert
p40652
I42
VSimpleName: reflectOnCreateInfo
p40653
tp40654
I1
s(g4189
I42
g4190
Vinsert
p40655
I42
VSimpleName: Set
p40656
tp40657
I1
s(g9229
I42
g9230
Vinsert
p40658
I42
VSimpleName: proxy
p40659
tp40660
I1
s(g46
I42
g47
Vinsert
p40661
I21
VExpressionStatement
p40662
tp40663
I1
s(g26530
I42
g26531
Vinsert
p40664
I33
VNullLiteral
p40665
tp40666
I3
s(g2261
I42
g2262
Vinsert
p40667
I42
VSimpleName: foo
p40668
tp40669
I5
s(g6446
I42
g6447
Vinsert
p40670
I34
VNumberLiteral: 0
p40671
tp40672
I1
s(g12890
I42
g12891
Vinsert
p40673
I42
VSimpleName: instance
p40674
tp40675
I1
s(g6669
I42
g6670
Vinsert
p40676
I42
VSimpleName: Test
p40677
tp40678
I1
s(g74
I42
g75
Vinsert
p40679
I42
VSimpleName: URL
p40680
tp40681
I2
s(g6098
I42
g6099
Vinsert
p40682
I43
VSimpleType: MockitoLoggerImpl
p40683
tp40684
I1
s(g1924
I42
g1925
Vinsert
p40685
I32
VMethodInvocation
p40686
tp40687
I1
s(g2075
I42
g2076
Vinsert
p40688
I42
VSimpleName: list
p40689
tp40690
I9
s(g14155
I42
g14156
Vinsert
p40691
I43
VSimpleType: VerificationError
p40692
tp40693
I1
s(g4354
I42
g4355
Vinsert
p40694
I57
VTypeLiteral
p40695
tp40696
I1
s(g11538
I42
g11539
Vinsert
p40697
I74
VParameterizedType: List<String>
p40698
tp40699
I1
s(g9016
I42
g9017
Vinsert
p40700
I21
VExpressionStatement
p40701
tp40702
I13
s(g5290
I42
g5291
Vinsert
p40703
I42
VSimpleName: labels
p40704
tp40705
I3
s(g3880
I42
g3881
Vinsert
p40706
I44
VSingleVariableDeclaration
p40707
tp40708
I1
s(g20566
I42
g20567
Vinsert
p40709
I42
VSimpleName: shouldCallRealMethdsEvenDelegatedToOtherSelfMethod
p40710
tp40711
I1
s(g8757
I42
g8758
Vinsert
p40712
I57
VTypeLiteral
p40713
tp40714
I1
s(g10889
I42
g10890
Vinsert
p40715
I21
VExpressionStatement
p40716
tp40717
I1
s(g1533
I42
g1534
Vinsert
p40718
I43
VSimpleType: Invocation
p40719
tp40720
I1
s(g9234
I42
g9235
Vinsert
p40721
I27
VInfixExpression: <
p40722
tp40723
I1
s(g7049
I42
g7050
Vinsert
p40724
I42
VSimpleName: inter
p40725
tp40726
I3
s(g5892
I42
g5893
Vinsert
p40727
I42
VSimpleName: mockitoStubber
p40728
tp40729
I3
s(g19510
I42
g19511
Vinsert
p40730
I42
VSimpleName: shouldDescribeWithTypeOfString
p40731
tp40732
I1
s(g22492
I42
g22493
Vinsert
p40733
I42
VSimpleName: i
p40734
tp40735
I2
s(g1881
I42
g1882
Vinsert
p40736
I42
VSimpleName: list
p40737
tp40738
I1
s(g25785
I42
g25786
Vinsert
p40739
I42
VSimpleName: Answer
p40740
tp40741
I1
s(g5180
I42
g5181
Vinsert
p40742
I78
VMarkerAnnotation
p40743
tp40744
I1
s(g2227
I42
g2228
Vinsert
p40745
I43
VSimpleType: Object
p40746
tp40747
I1
s(g4148
I42
g4149
Vinsert
p40748
I59
VVariableDeclarationFragment
p40749
tp40750
I2
s(g7329
I42
g7330
Vinsert
p40751
I5
VArrayType: Object[]
p40752
tp40753
I1
s(g24736
I42
g24737
Vinsert
p40754
I60
VVariableDeclarationStatement
p40755
tp40756
I1
s(g6854
I42
g6855
Vinsert
p40757
I32
VMethodInvocation
p40758
tp40759
I6
s(g6048
I42
g6049
Vinsert
p40760
I11
VCastExpression
p40761
tp40762
I1
s(g12769
I42
g12770
Vinsert
p40763
I21
VExpressionStatement
p40764
tp40765
I16
s(g252
I42
g253
Vinsert
p40766
I39
VPrimitiveType: boolean
p40767
tp40768
I1
s(g3637
I42
g3638
Vinsert
p40769
I42
VSimpleName: URL
p40770
tp40771
I1
s(g11984
I42
g11985
Vinsert
p40772
I4
VArrayInitializer
p40773
tp40774
I1
s(g9739
I42
g9740
Vinsert
p40775
I42
VSimpleName: assertEquals
p40776
tp40777
I20
s(g16513
I42
g16514
Vinsert
p40778
I42
VSimpleName: MockitoException
p40779
tp40780
I2
s(g4446
I42
g4447
Vinsert
p40781
I42
VSimpleName: Constructor
p40782
tp40783
I1
s(g1498
I42
g1499
Vinsert
p40784
I44
VSingleVariableDeclaration
p40785
tp40786
I1
s(g3735
I42
g3736
Vinsert
p40787
I42
VSimpleName: Plugins
p40788
tp40789
I1
s(g8729
I42
g8730
Vinsert
p40790
I42
VSimpleName: event
p40791
tp40792
I1
s(g996
I42
g997
Vinsert
p40793
I43
VSimpleType: List
p40794
tp40795
I1
s(g7129
I42
g7130
Vinsert
p40796
I42
VSimpleName: Exception
p40797
tp40798
I1
s(g7451
I42
g7452
Vinsert
p40799
I9
VBooleanLiteral: true
p40800
tp40801
I1
s(g1739
I42
g1740
Vinsert
p40802
I42
VSimpleName: matchersBinder
p40803
tp40804
I1
s(g3629
I42
g3630
Vinsert
p40805
I42
VSimpleName: SomeObject
p40806
tp40807
I2
s(g796
I42
g797
Vinsert
p40808
I42
VSimpleName: realMethodProxy
p40809
tp40810
I1
s(g578
I42
g579
Vinsert
p40811
I42
VSimpleName: elapsedNanos
p40812
tp40813
I2
s(g4138
I42
g4139
Vinsert
p40814
I42
VSimpleName: run
p40815
tp40816
I1
s(g2983
I42
g2984
Vinsert
p40817
I42
VSimpleName: when
p40818
tp40819
I1
s(g11699
I42
g11700
Vinsert
p40820
I59
VVariableDeclarationFragment
p40821
tp40822
I2
s(g11012
I42
g11013
Vinsert
p40823
I43
VSimpleType: Exception
p40824
tp40825
I1
s(g20093
I42
g20094
Vinsert
p40826
I43
VSimpleType: Runnable
p40827
tp40828
I1
s(g8663
I42
g8664
Vinsert
p40829
I32
VMethodInvocation
p40830
tp40831
I1
s(g2959
I42
g2960
Vinsert
p40832
I39
VPrimitiveType: void
p40833
tp40834
I1
s(g277
I42
g278
Vinsert
p40835
I38
VPrefixExpression: -
p40836
tp40837
I1
s(g307
I42
g308
Vinsert
p40838
I42
VSimpleName: proxy
p40839
tp40840
I1
s(g5690
I42
g5691
Vinsert
p40841
I11
VCastExpression
p40842
tp40843
I1
s(g4577
I42
g4578
Vinsert
p40844
I42
VSimpleName: NewOngoingStubbing
p40845
tp40846
I2
s(g352
I42
g353
Vinsert
p40847
I42
VSimpleName: ArgMismatchFinder
p40848
tp40849
I1
s(g3214
I42
g3215
Vinsert
p40850
I42
VSimpleName: MethodVisitor
p40851
tp40852
I1
s(g24058
I42
g24059
Vinsert
p40853
I42
VSimpleName: String
p40854
tp40855
I1
s(Vinsert
p40856
I42
VSimpleName: simpleMethod
p40857
Vinsert
p40858
I34
VNumberLiteral: 10
p40859
tp40860
I1
s(g10507
I42
g10508
Vinsert
p40861
I43
VSimpleType: Foo
p40862
tp40863
I1
s(g3116
I42
g3117
Vinsert
p40864
I42
VSimpleName: JUnitCore
p40865
tp40866
I2
s(g14642
I42
g14643
Vinsert
p40867
I43
VSimpleType: Integer
p40868
tp40869
I1
s(g6924
I42
g6925
Vinsert
p40870
I40
VQualifiedName: toBeExposed.realMethod
p40871
tp40872
I1
s(g10252
I42
g10253
Vinsert
p40873
I42
VSimpleName: Observer
p40874
tp40875
I1
s(g3629
I42
g3630
Vinsert
p40876
I59
VVariableDeclarationFragment
p40877
tp40878
I1
s(g2010
I42
g2011
Vinsert
p40879
I70
VEnhancedForStatement
p40880
tp40881
I1
s(g239
I42
g240
Vinsert
p40882
I42
VSimpleName: mockitoMock
p40883
tp40884
I1
s(g4247
I42
g4248
Vinsert
p40885
I32
VMethodInvocation
p40886
tp40887
I10
s(g12769
I42
g12770
Vinsert
p40888
I42
VSimpleName: testName
p40889
tp40890
I1
s(g5760
I42
g5761
Vinsert
p40891
I41
VReturnStatement
p40892
tp40893
I1
s(g2457
I42
g2458
Vinsert
p40894
I21
VExpressionStatement
p40895
tp40896
I1
s(g846
I42
g847
Vinsert
p40897
I42
VSimpleName: invocationAt
p40898
tp40899
I1
s(g342
I42
g343
Vinsert
p40900
I42
VSimpleName: FileWriter
p40901
tp40902
I1
s(g6355
I42
g6356
Vinsert
p40903
I42
VSimpleName: InOrder
p40904
tp40905
I1
s(g8358
I42
g8359
Vinsert
p40906
I14
VClassInstanceCreation
p40907
tp40908
I3
s(g10623
I42
g10624
Vinsert
p40909
I42
VSimpleName: ArrayList
p40910
tp40911
I1
s(g3326
I42
g3327
Vinsert
p40912
I21
VExpressionStatement
p40913
tp40914
I1
s(g6582
I42
g6583
Vinsert
p40915
I45
VStringLiteral: "unused stubbing"
p40916
tp40917
I1
s(g22156
I42
g22157
Vinsert
p40918
I39
VPrimitiveType: long
p40919
tp40920
I1
s(g4409
I42
g4410
Vinsert
p40921
I42
VSimpleName: verify
p40922
tp40923
I1
s(g1523
I42
g1524
Vinsert
p40924
I43
VSimpleType: MockingProgress
p40925
tp40926
I2
s(g1307
I42
g1308
Vinsert
p40927
I31
VMethodDeclaration
p40928
tp40929
I1
s(g10688
I42
g10689
Vinsert
p40930
I33
VNullLiteral
p40931
tp40932
I1
s(g19136
I42
g19137
Vinsert
p40933
I42
VSimpleName: i
p40934
tp40935
I2
s(g4393
I42
g4394
Vinsert
p40936
I43
VSimpleType: AnotherListOfNumbers
p40937
tp40938
I1
s(g35047
I42
g35048
Vinsert
p40939
I42
VSimpleName: spy
p40940
tp40941
I4
s(g608
I42
g609
Vinsert
p40942
I33
VNullLiteral
p40943
tp40944
I1
s(g3725
I42
g3726
Vinsert
p40945
I8
VBlock
p40946
tp40947
I1
s(g94
I42
g95
Vinsert
p40948
I21
VExpressionStatement
p40949
tp40950
I30
s(g3730
I42
g3731
Vinsert
p40951
I32
VMethodInvocation
p40952
tp40953
I6
s(g3621
I42
g3622
Vinsert
p40954
I8
VBlock
p40955
tp40956
I1
s(g3006
I42
g3007
Vinsert
p40957
I42
VSimpleName: assertFalse
p40958
tp40959
I1
s(g2296
I42
g2297
Vinsert
p40960
I21
VExpressionStatement
p40961
tp40962
I1
s(g20513
I42
g20514
Vinsert
p40963
I42
VSimpleName: start
p40964
tp40965
I1
s(g3293
I42
g3294
Vinsert
p40966
I42
VSimpleName: String
p40967
tp40968
I1
s(g11043
I42
g11044
Vinsert
p40969
I8
VBlock
p40970
tp40971
I1
s(g4277
I42
g4278
Vinsert
p40972
I42
VSimpleName: anyTimes
p40973
tp40974
I1
s(g2261
I42
g2262
Vinsert
p40975
I21
VExpressionStatement
p40976
tp40977
I5
s(g1528
I42
g1529
Vinsert
p40978
I83
VModifier: public
p40979
tp40980
I12
s(g79
I42
g80
Vinsert
p40981
I45
VStringLiteral: "  "
p40982
tp40983
I1
s(g5810
I42
g5811
Vinsert
p40984
I60
VVariableDeclarationStatement
p40985
tp40986
I1
s(g866
I42
g867
Vinsert
p40987
I42
VSimpleName: oneArg
p40988
tp40989
I3
s(g4295
I42
g4296
Vinsert
p40990
I42
VSimpleName: Throwable
p40991
tp40992
I1
s(g22492
I42
g22493
Vinsert
p40993
I74
VParameterizedType: List<StackTraceElement>
p40994
tp40995
I1
s(g3242
I42
g3243
Vinsert
p40996
I42
VSimpleName: flags
p40997
tp40998
I2
s(g24378
I42
g24379
Vinsert
p40999
I42
VSimpleName: MockitoLoggerImpl
p41000
tp41001
I1
s(g8082
I42
g8083
Vinsert
p41002
I83
VModifier: public
p41003
tp41004
I1
s(g7572
I42
g7573
Vinsert
p41005
I43
VSimpleType: Class
p41006
tp41007
I1
s(g312
I42
g313
Vinsert
p41008
I43
VSimpleType: Random
p41009
tp41010
I1
s(g5256
I42
g5257
Vinsert
p41011
I43
VSimpleType: StringBuilder
p41012
tp41013
I17
s(g21094
I42
g21095
Vinsert
p41014
I42
VSimpleName: add
p41015
tp41016
I2
s(g3298
I42
g3299
Vinsert
p41017
I74
VParameterizedType: Class<T>
p41018
tp41019
I1
s(g9139
I42
g9140
Vinsert
p41020
I42
VSimpleName: mode
p41021
tp41022
I7
s(g7057
I42
g7058
Vinsert
p41023
I42
VSimpleName: targets
p41024
tp41025
I2
s(g20085
I42
g20086
Vinsert
p41026
I14
VClassInstanceCreation
p41027
tp41028
I2
s(g722
I42
g723
Vinsert
p41029
I42
VSimpleName: handler
p41030
tp41031
I1
s(g27029
I42
g27030
Vinsert
p41032
I42
VSimpleName: finder
p41033
tp41034
I1
s(g9105
I42
g9106
Vinsert
p41035
I42
VSimpleName: dispatcher
p41036
tp41037
I1
s(g11897
I42
g11898
Vinsert
p41038
I36
VParenthesizedExpression
p41039
tp41040
I2
s(g7539
I42
g7540
Vinsert
p41041
I42
VSimpleName: getDescriptor
p41042
tp41043
I1
s(g312
I42
g313
Vinsert
p41044
I21
VExpressionStatement
p41045
tp41046
I1
s(g16107
I42
g16108
Vinsert
p41047
I25
VIfStatement
p41048
tp41049
I1
s(g27446
I42
g27447
Vinsert
p41050
I42
VSimpleName: of
p41051
tp41052
I4
s(g15947
I42
g15948
Vinsert
p41053
I43
VSimpleType: Exception
p41054
tp41055
I6
s(g5408
I42
g5409
Vinsert
p41056
I21
VExpressionStatement
p41057
tp41058
I1
s(g26664
I42
g26665
Vinsert
p41059
I42
VSimpleName: toInstanceName
p41060
tp41061
I2
s(g8647
I42
g8648
Vinsert
p41062
I42
VSimpleName: Exception
p41063
tp41064
I1
s(g14412
I42
g14413
Vinsert
p41065
I32
VMethodInvocation
p41066
tp41067
I2
s(g13153
I42
g13154
Vinsert
p41068
I42
VSimpleName: resetState
p41069
tp41070
I1
s(g3267
I42
g3268
Vinsert
p41071
I42
VSimpleName: i
p41072
tp41073
I1
s(g6435
I42
g6436
Vinsert
p41074
I42
VSimpleName: result
p41075
tp41076
I3
s(g17860
I42
g17861
Vinsert
p41077
I8
VBlock
p41078
tp41079
I12
s(g9125
I42
g9126
Vinsert
p41080
I42
VSimpleName: shouldStubVoidMethod
p41081
tp41082
I1
s(g19066
I42
g19067
Vinsert
p41083
I42
VSimpleName: FieldSetter
p41084
tp41085
I1
s(g2585
I42
g2586
Vinsert
p41086
I76
VWildcardType: ?
p41087
tp41088
I1
s(g5939
I42
g5940
Vinsert
p41089
I42
VSimpleName: locationOfStubbing
p41090
tp41091
I1
s(g16240
I42
g16241
Vinsert
p41092
I42
VSimpleName: Class
p41093
tp41094
I1
s(g6252
I42
g6253
Vinsert
p41095
I42
VSimpleName: AnnotationVisitor
p41096
tp41097
I1
s(g4510
I42
g4511
Vinsert
p41098
I42
VSimpleName: o
p41099
tp41100
I1
s(g1337
I42
g1338
Vinsert
p41101
I60
VVariableDeclarationStatement
p41102
tp41103
I3
s(g13139
I42
g13140
Vinsert
p41104
I42
VSimpleName: Class
p41105
tp41106
I1
s(g25311
I42
g25312
Vinsert
p41107
I42
VSimpleName: expectedMessage
p41108
tp41109
I1
s(g5794
I42
g5795
Vinsert
p41110
I43
VSimpleType: String
p41111
tp41112
I1
s(g1919
I42
g1920
Vinsert
p41113
I16
VConditionalExpression
p41114
tp41115
I1
s(g1011
I42
g1012
Vinsert
p41116
I44
VSingleVariableDeclaration
p41117
tp41118
I3
s(g15534
I42
g15535
Vinsert
p41119
I43
VSimpleType: Class
p41120
tp41121
I2
s(g6111
I42
g6112
Vinsert
p41122
I42
VSimpleName: TYPE_SHORT
p41123
tp41124
I1
s(g13161
I42
g13162
Vinsert
p41125
I42
VSimpleName: URL
p41126
tp41127
I1
s(g10794
I42
g10795
Vinsert
p41128
I7
VAssignment: =
p41129
tp41130
I1
s(g13427
I42
g13428
Vinsert
p41131
I57
VTypeLiteral
p41132
tp41133
I1
s(g2657
I42
g2658
Vinsert
p41134
I8
VBlock
p41135
tp41136
I1
s(g4776
I42
g4777
Vinsert
p41137
I44
VSingleVariableDeclaration
p41138
tp41139
I1
s(g5368
I42
g5369
Vinsert
p41140
I33
VNullLiteral
p41141
tp41142
I2
s(g443
I42
g444
Vinsert
p41143
I42
VSimpleName: InheritMe
p41144
tp41145
I2
s(g548
I42
g549
Vinsert
p41146
I5
VArrayType: Class<?>[]
p41147
tp41148
I1
s(g12000
I42
g12001
Vinsert
p41149
I25
VIfStatement
p41150
tp41151
I5
s(g6103
I42
g6104
Vinsert
p41152
I8
VBlock
p41153
tp41154
I1
s(g8677
I42
g8678
Vinsert
p41155
I59
VVariableDeclarationFragment
p41156
tp41157
I1
s(g4153
I42
g4154
Vinsert
p41158
I42
VSimpleName: generatedMockClass
p41159
tp41160
I1
s(g11177
I42
g11178
Vinsert
p41161
I27
VInfixExpression: ==
p41162
tp41163
I1
s(g7752
I42
g7753
Vinsert
p41164
I83
VModifier: public
p41165
tp41166
I1
s(g3078
I42
g3079
Vinsert
p41167
I27
VInfixExpression: &&
p41168
tp41169
I1
s(g6943
I42
g6944
Vinsert
p41170
I42
VSimpleName: argument
p41171
tp41172
I1
s(g14972
I42
g14973
Vinsert
p41173
I83
VModifier: public
p41174
tp41175
I4
s(g6820
I42
g6821
Vinsert
p41176
I41
VReturnStatement
p41177
tp41178
I1
s(g29885
I42
g29886
Vinsert
p41179
I43
VSimpleType: InvocationListener
p41180
tp41181
I1
s(g16677
I42
g16678
Vinsert
p41182
I31
VMethodDeclaration
p41183
tp41184
I1
s(g7022
I42
g7023
Vinsert
p41185
I14
VClassInstanceCreation
p41186
tp41187
I3
s(g2978
I42
g2979
Vinsert
p41188
I43
VSimpleType: Map
p41189
tp41190
I3
s(g16897
I42
g16898
Vinsert
p41191
I43
VSimpleType: M
p41192
tp41193
I2
s(g6669
I42
g6670
Vinsert
p41194
I32
VMethodInvocation
p41195
tp41196
I3
s(g1805
I42
g1806
Vinsert
p41197
I42
VSimpleName: VerifyingMode
p41198
tp41199
I1
s(g2700
I42
g2701
Vinsert
p41200
I42
VSimpleName: Exception
p41201
tp41202
I1
s(g9045
I42
g9046
Vinsert
p41203
I42
VSimpleName: insns
p41204
tp41205
I1
s(g991
I42
g992
Vinsert
p41206
I36
VParenthesizedExpression
p41207
tp41208
I1
s(g9087
I42
g9088
Vinsert
p41209
I42
VSimpleName: isEmpty
p41210
tp41211
I1
s(g17579
I42
g17580
Vinsert
p41212
I42
VSimpleName: assertNotNull
p41213
tp41214
I2
s(g7086
I42
g7087
Vinsert
p41215
I42
VSimpleName: foundClass
p41216
tp41217
I3
s(g6841
I42
g6842
Vinsert
p41218
I59
VVariableDeclarationFragment
p41219
tp41220
I1
s(g3229
I42
g3230
Vinsert
p41221
I42
VSimpleName: clearListeners
p41222
tp41223
I1
s(g1482
I42
g1483
Vinsert
p41224
I8
VBlock
p41225
tp41226
I1
s(g7521
I42
g7522
Vinsert
p41227
I42
VSimpleName: Throwable
p41228
tp41229
I2
s(g14434
I42
g14435
Vinsert
p41230
I32
VMethodInvocation
p41231
tp41232
I4
s(g2075
I42
g2076
Vinsert
p41233
I39
VPrimitiveType: void
p41234
tp41235
I11
s(g1670
I42
g1671
Vinsert
p41236
I42
VSimpleName: context
p41237
tp41238
I4
s(g11306
I42
g11307
Vinsert
p41239
I43
VSimpleType: List
p41240
tp41241
I2
s(g6820
I42
g6821
Vinsert
p41242
I74
VParameterizedType: List<InvocationWithMatchers>
p41243
tp41244
I1
s(g6781
I42
g6782
Vinsert
p41245
I39
VPrimitiveType: void
p41246
tp41247
I1
s(g14754
I42
g14755
Vinsert
p41248
I83
VModifier: public
p41249
tp41250
I2
s(g10963
I42
g10964
Vinsert
p41251
I40
VQualifiedName: AnyVararg.ANY_VARARG
p41252
tp41253
I1
s(g3431
I42
g3432
Vinsert
p41254
I29
VJavadoc
p41255
tp41256
I2
s(g12872
I42
g12873
Vinsert
p41257
I60
VVariableDeclarationStatement
p41258
tp41259
I2
s(g10777
I42
g10778
Vinsert
p41260
I39
VPrimitiveType: void
p41261
tp41262
I1
s(g8255
I42
g8256
Vinsert
p41263
I43
VSimpleType: RuntimeException
p41264
tp41265
I1
s(g5679
I42
g5680
Vinsert
p41266
I42
VSimpleName: otherMethod
p41267
tp41268
I1
s(g926
I42
g927
Vinsert
p41269
I76
VWildcardType: ?
p41270
tp41271
I1
s(g4560
I42
g4561
Vinsert
p41272
I43
VSimpleType: StringBuffer
p41273
tp41274
I1
s(g31283
I42
g31284
Vinsert
p41275
I42
VSimpleName: shouldNotAllowSettingNullConsecutiveThrowable
p41276
tp41277
I1
s(g37972
I42
g37973
Vinsert
p41278
I42
VSimpleName: args
p41279
tp41280
I1
s(g3209
I42
g3210
Vinsert
p41281
I42
VSimpleName: isMock
p41282
tp41283
I1
s(g7521
I42
g7522
Vinsert
p41284
I39
VPrimitiveType: void
p41285
tp41286
I2
s(g6387
I42
g6388
Vinsert
p41287
I43
VSimpleType: MockAccess
p41288
tp41289
I1
s(g31
I42
g32
Vinsert
p41290
I42
VSimpleName: stub
p41291
tp41292
I3
s(g2983
I42
g2984
Vinsert
p41293
I40
VQualifiedName: Mockito.RETURNS_DEEP_STUBS
p41294
tp41295
I1
s(g14735
I42
g14736
Vinsert
p41296
I31
VMethodDeclaration
p41297
tp41298
I1
s(g618
I42
g619
Vinsert
p41299
I83
VModifier: public
p41300
tp41301
I2
s(g24722
I42
g24723
Vinsert
p41302
I42
VSimpleName: returnValues
p41303
tp41304
I1
s(g13881
I42
g13882
Vinsert
p41305
I32
VMethodInvocation
p41306
tp41307
I5
s(g1416
I42
g1417
Vinsert
p41308
I42
VSimpleName: source
p41309
tp41310
I1
s(g1154
I42
g1155
Vinsert
p41311
I42
VSimpleName: getMockName
p41312
tp41313
I1
s(g2871
I42
g2872
Vinsert
p41314
I5
VArrayType: String[]
p41315
tp41316
I1
s(g19274
I42
g19275
Vinsert
p41317
I42
VSimpleName: Mockito
p41318
tp41319
I1
s(g4611
I42
g4612
Vinsert
p41320
I42
VSimpleName: String
p41321
tp41322
I1
s(g7166
I42
g7167
Vinsert
p41323
I43
VSimpleType: String
p41324
tp41325
I2
s(g1079
I42
g1080
Vinsert
p41326
I43
VSimpleType: MethodVisitor
p41327
tp41328
I1
s(g15972
I42
g15973
Vinsert
p41329
I42
VSimpleName: shouldAllowStubbingOfMethodsThatDelegateToOtherMethods
p41330
tp41331
I1
s(g2642
I42
g2643
Vinsert
p41332
I32
VMethodInvocation
p41333
tp41334
I16
s(g19066
I42
g19067
Vinsert
p41335
I21
VExpressionStatement
p41336
tp41337
I4
s(g1977
I42
g1978
Vinsert
p41338
I42
VSimpleName: Test
p41339
tp41340
I2
s(g12782
I42
g12783
Vinsert
p41341
I43
VSimpleType: ReentrantLock
p41342
tp41343
I1
s(g46
I42
g47
Vinsert
p41344
I60
VVariableDeclarationStatement
p41345
tp41346
I1
s(g11243
I42
g11244
Vinsert
p41347
I21
VExpressionStatement
p41348
tp41349
I1
s(g806
I42
g807
Vinsert
p41350
I43
VSimpleType: Class
p41351
tp41352
I1
s(g12715
I42
g12716
Vinsert
p41353
I60
VVariableDeclarationStatement
p41354
tp41355
I4
s(g139
I42
g140
Vinsert
p41356
I42
VSimpleName: matchers
p41357
tp41358
I2
s(g5829
I42
g5830
Vinsert
p41359
I83
VModifier: public
p41360
tp41361
I2
s(g4882
I42
g4883
Vinsert
p41362
I52
VThisExpression
p41363
tp41364
I3
s(g6988
I42
g6989
Vinsert
p41365
I42
VSimpleName: assertSame
p41366
tp41367
I1
s(g7287
I42
g7288
Vinsert
p41368
I42
VSimpleName: value
p41369
tp41370
I3
s(g765
I42
g766
Vinsert
p41371
I42
VSimpleName: Test
p41372
tp41373
I1
s(g8414
I42
g8415
Vinsert
p41374
I80
VMemberValuePair
p41375
tp41376
I1
s(g12267
I42
g12268
Vinsert
p41377
I45
VStringLiteral: ", "
p41378
tp41379
I1
s(g7577
I42
g7578
Vinsert
p41380
I42
VSimpleName: List
p41381
tp41382
I2
s(g23258
I42
g23259
Vinsert
p41383
I42
VSimpleName: stackTrace
p41384
tp41385
I1
s(g5544
I42
g5545
Vinsert
p41386
I42
VSimpleName: instantiate
p41387
tp41388
I1
s(g7190
I42
g7191
Vinsert
p41389
I74
VParameterizedType: HashSet<String>
p41390
tp41391
I1
s(g1528
I42
g1529
Vinsert
p41392
I43
VSimpleType: String
p41393
tp41394
I12
s(g6013
I42
g6014
Vinsert
p41395
I39
VPrimitiveType: void
p41396
tp41397
I3
s(g2480
I42
g2481
Vinsert
p41398
I42
VSimpleName: returnedMock
p41399
tp41400
I1
s(g35839
I42
g35840
Vinsert
p41401
I42
VSimpleName: differentMockInteraction
p41402
tp41403
I1
s(g12665
I42
g12666
Vinsert
p41404
I42
VSimpleName: endsWith
p41405
tp41406
I1
s(g1092
I42
g1093
Vinsert
p41407
I42
VSimpleName: wanted
p41408
tp41409
I4
s(g1914
I42
g1915
Vinsert
p41410
I59
VVariableDeclarationFragment
p41411
tp41412
I1
s(g357
I42
g358
Vinsert
p41413
I42
VSimpleName: clazz
p41414
tp41415
I1
s(Vinsert
p41416
I42
VSimpleName: verify
p41417
Vinsert
p41418
I42
VSimpleName: mockTwo
p41419
tp41420
I6
s(g9395
I42
g9396
Vinsert
p41421
I42
VSimpleName: invocationListener
p41422
tp41423
I1
s(g1992
I42
g1993
Vinsert
p41424
I45
VStringLiteral: "'."
p41425
tp41426
I1
s(g15498
I42
g15499
Vinsert
p41427
I42
VSimpleName: methodReturnType
p41428
tp41429
I1
s(g24839
I42
g24840
Vinsert
p41430
I31
VMethodDeclaration
p41431
tp41432
I4
s(g6350
I42
g6351
Vinsert
p41433
I45
VStringLiteral: "new"
p41434
tp41435
I1
s(g30615
I42
g30616
Vinsert
p41436
I42
VSimpleName: Statement
p41437
tp41438
I4
s(g14972
I42
g14973
Vinsert
p41439
I42
VSimpleName: Test
p41440
tp41441
I1
s(g6598
I42
g6599
Vinsert
p41442
I42
VSimpleName: propertyNameMatchFieldName
p41443
tp41444
I1
s(g13936
I42
g13937
Vinsert
p41445
I21
VExpressionStatement
p41446
tp41447
I1
s(g5847
I42
g5848
Vinsert
p41448
I53
VThrowStatement
p41449
tp41450
I2
s(g12769
I42
g12770
Vinsert
p41451
I42
VSimpleName: testMethodName
p41452
tp41453
I1
s(g4184
I42
g4185
Vinsert
p41454
I42
VSimpleName: Class
p41455
tp41456
I1
s(g5776
I42
g5777
Vinsert
p41457
I34
VNumberLiteral: 20
p41458
tp41459
I2
s(g16154
I42
g16155
Vinsert
p41460
I42
VSimpleName: isSpy
p41461
tp41462
I4
s(g7012
I42
g7013
Vinsert
p41463
I33
VNullLiteral
p41464
tp41465
I2
s(g976
I42
g977
Vinsert
p41466
I42
VSimpleName: Long
p41467
tp41468
I1
s(g6752
I42
g6753
Vinsert
p41469
I32
VMethodInvocation
p41470
tp41471
I1
s(g2364
I42
g2365
Vinsert
p41472
I42
VSimpleName: after
p41473
tp41474
I1
s(g4675
I42
g4676
Vinsert
p41475
I74
VParameterizedType: LinkedList<Invocation>
p41476
tp41477
I1
s(g2585
I42
g2586
Vinsert
p41478
I42
VSimpleName: invocation
p41479
tp41480
I3
s(g2359
I42
g2360
Vinsert
p41481
I42
VSimpleName: InvocationBuilder
p41482
tp41483
I4
s(g3165
I42
g3166
Vinsert
p41484
I43
VSimpleType: MockSettings
p41485
tp41486
I2
s(g10609
I42
g10610
Vinsert
p41487
I36
VParenthesizedExpression
p41488
tp41489
I3
s(g4226
I42
g4227
Vinsert
p41490
I42
VSimpleName: differentMethod
p41491
tp41492
I1
s(g2536
I42
g2537
Vinsert
p41493
I38
VPrefixExpression: !
p41494
tp41495
I1
s(g17579
I42
g17580
Vinsert
p41496
I32
VMethodInvocation
p41497
tp41498
I6
s(g9865
I42
g9866
Vinsert
p41499
I45
VStringLiteral: "a"
p41500
tp41501
I1
s(g219
I42
g220
Vinsert
p41502
I43
VSimpleType: Method
p41503
tp41504
I2
s(g488
I42
g489
Vinsert
p41505
I42
VSimpleName: expectMessage
p41506
tp41507
I1
s(g3509
I42
g3510
Vinsert
p41508
I43
VSimpleType: FieldReader
p41509
tp41510
I1
s(g2733
I42
g2734
Vinsert
p41511
I43
VSimpleType: MethodInterceptorFilter
p41512
tp41513
I1
s(g1548
I42
g1549
Vinsert
p41514
I45
VStringLiteral: "IBM"
p41515
tp41516
I1
s(g4043
I42
g4044
Vinsert
p41517
I8
VBlock
p41518
tp41519
I1
s(g5902
I42
g5903
Vinsert
p41520
I42
VSimpleName: smartNull
p41521
tp41522
I2
s(g5383
I42
g5384
Vinsert
p41523
I43
VSimpleType: StubbedInvocationMatcher
p41524
tp41525
I1
s(g816
I42
g817
Vinsert
p41526
I41
VReturnStatement
p41527
tp41528
I2
s(g6924
I42
g6925
Vinsert
p41529
I42
VSimpleName: Invocation
p41530
tp41531
I1
s(g8894
I42
g8895
Vinsert
p41532
I42
VSimpleName: Extended
p41533
tp41534
I2
s(g6781
I42
g6782
Vinsert
p41535
I21
VExpressionStatement
p41536
tp41537
I1
s(g2429
I42
g2430
Vinsert
p41538
I78
VMarkerAnnotation
p41539
tp41540
I2
s(g4082
I42
g4083
Vinsert
p41541
I42
VSimpleName: rule
p41542
tp41543
I1
s(g6752
I42
g6753
Vinsert
p41544
I33
VNullLiteral
p41545
tp41546
I1
s(g13114
I42
g13115
Vinsert
p41547
I32
VMethodInvocation
p41548
tp41549
I5
s(g16240
I42
g16241
Vinsert
p41550
I39
VPrimitiveType: int
p41551
tp41552
I1
s(g6854
I42
g6855
Vinsert
p41553
I26
VImportDeclaration
p41554
tp41555
I3
s(g588
I42
g589
Vinsert
p41556
I42
VSimpleName: withFinal
p41557
tp41558
I1
s(g1619
I42
g1620
Vinsert
p41559
I42
VSimpleName: assertTrue
p41560
tp41561
I2
s(g2200
I42
g2201
Vinsert
p41562
I42
VSimpleName: JUnitArgsAreDifferent
p41563
tp41564
I1
s(g658
I42
g659
Vinsert
p41565
I59
VVariableDeclarationFragment
p41566
tp41567
I1
s(g6872
I42
g6873
Vinsert
p41568
I27
VInfixExpression: -
p41569
tp41570
I1
s(g6
I42
g7
Vinsert
p41571
I42
VSimpleName: InvocationOnMock
p41572
tp41573
I6
s(g3055
I42
g3056
Vinsert
p41574
I42
VSimpleName: T
p41575
tp41576
I6
s(g21680
I42
g21681
Vinsert
p41577
I43
VSimpleType: InterceptedInvocation
p41578
tp41579
I2
s(g7521
I42
g7522
Vinsert
p41580
I42
VSimpleName: Test
p41581
tp41582
I2
s(g10032
I42
g10033
Vinsert
p41583
I21
VExpressionStatement
p41584
tp41585
I1
s(g10916
I42
g10917
Vinsert
p41586
I57
VTypeLiteral
p41587
tp41588
I1
s(g4952
I42
g4953
Vinsert
p41589
I44
VSingleVariableDeclaration
p41590
tp41591
I1
s(g6103
I42
g6104
Vinsert
p41592
I42
VSimpleName: missingMethodInOrderMode
p41593
tp41594
I1
s(g3336
I42
g3337
Vinsert
p41595
I42
VSimpleName: MockSettingsImpl
p41596
tp41597
I1
s(g7643
I42
g7644
Vinsert
p41598
I42
VSimpleName: reportMatcher
p41599
tp41600
I1
s(g12799
I42
g12800
Vinsert
p41601
I8
VBlock
p41602
tp41603
I1
s(g30882
I42
g30883
Vinsert
p41604
I43
VSimpleType: VerificationAwareInvocation
p41605
tp41606
I1
s(g13680
I42
g13681
Vinsert
p41607
I42
VSimpleName: mockIsValid
p41608
tp41609
I1
s(g588
I42
g589
Vinsert
p41610
I8
VBlock
p41611
tp41612
I1
s(g6111
I42
g6112
Vinsert
p41613
I42
VSimpleName: TYPE_BYTE
p41614
tp41615
I1
s(g1548
I42
g1549
Vinsert
p41616
I45
VStringLiteral: "ibm warning"
p41617
tp41618
I1
s(g11066
I42
g11067
Vinsert
p41619
I42
VSimpleName: StackTraceElement
p41620
tp41621
I1
s(g14231
I42
g14232
Vinsert
p41622
I42
VSimpleName: TestMethodsFinder
p41623
tp41624
I1
s(g40856
I42
g40857
Vinsert
p41625
I42
VSimpleName: iHavefunkyName
p41626
tp41627
I2
s(g25452
I42
g25453
Vinsert
p41628
I43
VSimpleType: TooLittleInvocations
p41629
tp41630
I1
s(g8131
I42
g8132
Vinsert
p41631
I57
VTypeLiteral
p41632
tp41633
I2
s(g2682
I42
g2683
Vinsert
p41634
I21
VExpressionStatement
p41635
tp41636
I2
s(g8889
I42
g8890
Vinsert
p41637
I42
VSimpleName: Object
p41638
tp41639
I1
s(g4282
I42
g4283
Vinsert
p41640
I43
VSimpleType: ClassImposterizer
p41641
tp41642
I1
s(g9021
I42
g9022
Vinsert
p41643
I8
VBlock
p41644
tp41645
I1
s(g5986
I42
g5987
Vinsert
p41646
I42
VSimpleName: verify
p41647
tp41648
I1
s(g16240
I42
g16241
Vinsert
p41649
I44
VSingleVariableDeclaration
p41650
tp41651
I2
s(g1129
I42
g1130
Vinsert
p41652
I42
VSimpleName: verify
p41653
tp41654
I3
s(g12606
I42
g12607
Vinsert
p41655
I21
VExpressionStatement
p41656
tp41657
I1
s(g10992
I42
g10993
Vinsert
p41658
I42
VSimpleName: IMethods
p41659
tp41660
I1
s(g11942
I42
g11943
Vinsert
p41661
I45
VStringLiteral: "org.slf4j.LoggerFactory"
p41662
tp41663
I1
s(g41
I42
g42
Vinsert
p41664
I42
VSimpleName: inferWantedArgumentType
p41665
tp41666
I1
s(g12561
I42
g12562
Vinsert
p41667
I32
VMethodInvocation
p41668
tp41669
I3
s(g24453
I42
g24454
Vinsert
p41670
I39
VPrimitiveType: void
p41671
tp41672
I2
s(g114
I42
g115
Vinsert
p41673
I43
VSimpleType: Object
p41674
tp41675
I2
s(g5858
I42
g5859
Vinsert
p41676
I8
VBlock
p41677
tp41678
I1
s(g6796
I42
g6797
Vinsert
p41679
I42
VSimpleName: e
p41680
tp41681
I2
s(g5159
I42
g5160
Vinsert
p41682
I42
VSimpleName: EqualsBuilder
p41683
tp41684
I1
s(g5902
I42
g5903
Vinsert
p41685
I42
VSimpleName: contains
p41686
tp41687
I2
s(g1287
I42
g1288
Vinsert
p41688
I21
VExpressionStatement
p41689
tp41690
I3
s(g11866
I42
g11867
Vinsert
p41691
I54
VTryStatement
p41692
tp41693
I4
s(g1312
I42
g1313
Vinsert
p41694
I42
VSimpleName: testMockDispatcherIsRelocated
p41695
tp41696
I1
s(g2508
I42
g2509
Vinsert
p41697
I31
VMethodDeclaration
p41698
tp41699
I1
s(g5123
I42
g5124
Vinsert
p41700
I59
VVariableDeclarationFragment
p41701
tp41702
I1
s(g17014
I42
g17015
Vinsert
p41703
I42
VSimpleName: isMock
p41704
tp41705
I1
s(g11306
I42
g11307
Vinsert
p41706
I32
VMethodInvocation
p41707
tp41708
I44
s(g3473
I42
g3474
Vinsert
p41709
I42
VSimpleName: expected
p41710
tp41711
I1
s(g3199
I42
g3200
Vinsert
p41712
I43
VSimpleType: MockitoAssertionError
p41713
tp41714
I2
s(g3782
I42
g3783
Vinsert
p41715
I42
VSimpleName: listener
p41716
tp41717
I4
s(g322
I42
g323
Vinsert
p41718
I42
VSimpleName: subList
p41719
tp41720
I2
s(g6711
I42
g6712
Vinsert
p41721
I40
VQualifiedName: org.mockito.release.exec.Exec
p41722
tp41723
I1
s(g2227
I42
g2228
Vinsert
p41724
I44
VSingleVariableDeclaration
p41725
tp41726
I1
s(g1282
I42
g1283
Vinsert
p41727
I83
VModifier: public
p41728
tp41729
I4
s(g6143
I42
g6144
Vinsert
p41730
I42
VSimpleName: expectedInvocation
p41731
tp41732
I1
s(g12694
I42
g12695
Vinsert
p41733
I43
VSimpleType: WeakHashMap
p41734
tp41735
I1
s(g14412
I42
g14413
Vinsert
p41736
I42
VSimpleName: Object
p41737
tp41738
I1
s(g10507
I42
g10508
Vinsert
p41739
I41
VReturnStatement
p41740
tp41741
I1
s(g35705
I42
g35706
Vinsert
p41742
I42
VSimpleName: matchesButNotMethodDeclaredClass
p41743
tp41744
I1
s(g12804
I42
g12805
Vinsert
p41745
I32
VMethodInvocation
p41746
tp41747
I1
s(g22156
I42
g22157
Vinsert
p41748
I42
VSimpleName: Long
p41749
tp41750
I1
s(g3101
I42
g3102
Vinsert
p41751
I42
VSimpleName: methodCall
p41752
tp41753
I1
s(g3864
I42
g3865
Vinsert
p41754
I43
VSimpleType: String
p41755
tp41756
I5
s(g1901
I42
g1902
Vinsert
p41757
I8
VBlock
p41758
tp41759
I1
s(g3121
I42
g3122
Vinsert
p41760
I42
VSimpleName: t
p41761
tp41762
I1
s(g25478
I42
g25479
Vinsert
p41763
I54
VTryStatement
p41764
tp41765
I1
s(g3730
I42
g3731
Vinsert
p41766
I42
VSimpleName: JAVA_V9
p41767
tp41768
I1
s(g658
I42
g659
Vinsert
p41769
I31
VMethodDeclaration
p41770
tp41771
I1
s(g2306
I42
g2307
Vinsert
p41772
I45
VStringLiteral: "different mock"
p41773
tp41774
I1
s(g13383
I42
g13384
Vinsert
p41775
I42
VSimpleName: varargsString
p41776
tp41777
I1
s(g36104
I42
g36105
Vinsert
p41778
I43
VSimpleType: ByteArrayOutputStream
p41779
tp41780
I5
s(g7798
I42
g7799
Vinsert
p41781
I43
VSimpleType: File
p41782
tp41783
I2
s(g13855
I42
g13856
Vinsert
p41784
I31
VMethodDeclaration
p41785
tp41786
I14
s(g3359
I42
g3360
Vinsert
p41787
I83
VModifier: private
p41788
tp41789
I2
s(g6919
I42
g6920
Vinsert
p41790
I33
VNullLiteral
p41791
tp41792
I1
s(g8677
I42
g8678
Vinsert
p41793
I39
VPrimitiveType: int
p41794
tp41795
I1
s(g38471
I42
g38472
Vinsert
p41796
I14
VClassInstanceCreation
p41797
tp41798
I1
s(g3126
I42
g3127
Vinsert
p41799
I42
VSimpleName: getTimeout
p41800
tp41801
I1
s(g13755
I42
g13756
Vinsert
p41802
I42
VSimpleName: local
p41803
tp41804
I1
s(g2844
I42
g2845
Vinsert
p41805
I42
VSimpleName: ArgumentMatchingTool
p41806
tp41807
I2
s(g14538
I42
g14539
Vinsert
p41808
I34
VNumberLiteral: 1
p41809
tp41810
I1
s(g1011
I42
g1012
Vinsert
p41811
I42
VSimpleName: message
p41812
tp41813
I1
s(g5264
I42
g5265
Vinsert
p41814
I42
VSimpleName: StrictVerificationError
p41815
tp41816
I1
s(g21094
I42
g21095
Vinsert
p41817
I45
VStringLiteral: "0"
p41818
tp41819
I1
s(g1591
I42
g1592
Vinsert
p41820
I42
VSimpleName: createVerificationData
p41821
tp41822
I1
s(g2031
I42
g2032
Vinsert
p41823
I33
VNullLiteral
p41824
tp41825
I1
s(g30882
I42
g30883
Vinsert
p41826
I42
VSimpleName: i
p41827
tp41828
I6
s(g11839
I42
g11840
Vinsert
p41829
I42
VSimpleName: shouldAnyXMatchersAcceptNull
p41830
tp41831
I1
s(g6502
I42
g6503
Vinsert
p41832
I42
VSimpleName: unfinishedStubbingThrowsException
p41833
tp41834
I1
s(g12390
I42
g12391
Vinsert
p41835
I60
VVariableDeclarationStatement
p41836
tp41837
I2
s(g36764
I42
g36765
Vinsert
p41838
I42
VSimpleName: NaughtyException
p41839
tp41840
I1
s(g2359
I42
g2360
Vinsert
p41841
I42
VSimpleName: invocation
p41842
tp41843
I2
s(g1249
I42
g1250
Vinsert
p41844
I83
VModifier: public
p41845
tp41846
I6
s(g7790
I42
g7791
Vinsert
p41847
I76
VWildcardType: ?
p41848
tp41849
I1
s(g9021
I42
g9022
Vinsert
p41850
I59
VVariableDeclarationFragment
p41851
tp41852
I1
s(g12710
I42
g12711
Vinsert
p41853
I42
VSimpleName: CallsRealMethods
p41854
tp41855
I1
s(g25187
I42
g25188
Vinsert
p41856
I33
VNullLiteral
p41857
tp41858
I1
s(g119
I42
g120
Vinsert
p41859
I41
VReturnStatement
p41860
tp41861
I1
s(g5530
I42
g5531
Vinsert
p41862
I8
VBlock
p41863
tp41864
I2
s(g658
I42
g659
Vinsert
p41865
I83
VModifier: public
p41866
tp41867
I1
s(g5858
I42
g5859
Vinsert
p41868
I42
VSimpleName: testResult
p41869
tp41870
I2
s(g4346
I42
g4347
Vinsert
p41871
I42
VSimpleName: IdentityAnswers
p41872
tp41873
I1
s(g4282
I42
g4283
Vinsert
p41874
I42
VSimpleName: ClassImposterizer
p41875
tp41876
I1
s(g2147
I42
g2148
Vinsert
p41877
I42
VSimpleName: VoidMethodStubbable
p41878
tp41879
I2
s(g8434
I42
g8435
Vinsert
p41880
I43
VSimpleType: Method
p41881
tp41882
I2
s(g17040
I42
g17041
Vinsert
p41883
I42
VSimpleName: mismatches
p41884
tp41885
I1
s(g5196
I42
g5197
Vinsert
p41886
I74
VParameterizedType: List<Object>
p41887
tp41888
I1
s(g9692
I42
g9693
Vinsert
p41889
I42
VSimpleName: verifySimpleMethodOnAMock
p41890
tp41891
I1
s(g10586
I42
g10587
Vinsert
p41892
I42
VSimpleName: Test
p41893
tp41894
I2
s(g362
I42
g363
Vinsert
p41895
I31
VMethodDeclaration
p41896
tp41897
I3
s(g3880
I42
g3881
Vinsert
p41898
I32
VMethodInvocation
p41899
tp41900
I1
s(g1322
I42
g1323
Vinsert
p41901
I40
VQualifiedName: java.util.Arrays
p41902
tp41903
I1
s(g5879
I42
g5880
Vinsert
p41904
I32
VMethodInvocation
p41905
tp41906
I15
s(g9884
I42
g9885
Vinsert
p41907
I42
VSimpleName: Throwable
p41908
tp41909
I1
s(g18840
I42
g18841
Vinsert
p41910
I42
VSimpleName: MOCKITO_CONFIGURATION_CLASS_NAME
p41911
tp41912
I2
s(g7185
I42
g7186
Vinsert
p41913
I42
VSimpleName: assertThat
p41914
tp41915
I2
s(g1825
I42
g1826
Vinsert
p41916
I42
VSimpleName: expectedType
p41917
tp41918
I1
s(g74
I42
g75
Vinsert
p41919
I45
VStringLiteral: "GitHub API no more issues to fetch"
p41920
tp41921
I1
s(g906
I42
g907
Vinsert
p41922
I42
VSimpleName: mockFeatures
p41923
tp41924
I1
s(g10567
I42
g10568
Vinsert
p41925
I11
VCastExpression
p41926
tp41927
I1
s(g16760
I42
g16761
Vinsert
p41928
I42
VSimpleName: stateMaster
p41929
tp41930
I2
s(g5316
I42
g5317
Vinsert
p41931
I43
VSimpleType: LegacyJUnitRunner
p41932
tp41933
I1
s(g4784
I42
g4785
Vinsert
p41934
I42
VSimpleName: Exception
p41935
tp41936
I3
s(g26561
I42
g26562
Vinsert
p41937
I40
VQualifiedName: finderStub.firstUnverifiedChunkToReturn
p41938
tp41939
I1
s(g3313
I42
g3314
Vinsert
p41940
I32
VMethodInvocation
p41941
tp41942
I3
s(g159
I42
g160
Vinsert
p41943
I42
VSimpleName: Exception
p41944
tp41945
I2
s(g8439
I42
g8440
Vinsert
p41946
I54
VTryStatement
p41947
tp41948
I1
s(g15179
I42
g15180
Vinsert
p41949
I49
VSwitchCase
p41950
tp41951
I2
s(g8483
I42
g8484
Vinsert
p41952
I42
VSimpleName: stubVoid
p41953
tp41954
I2
s(g3047
I42
g3048
Vinsert
p41955
I42
VSimpleName: mock
p41956
tp41957
I1
s(g11984
I42
g11985
Vinsert
p41958
I57
VTypeLiteral
p41959
tp41960
I1
s(g6411
I42
g6412
Vinsert
p41961
I43
VSimpleType: T
p41962
tp41963
I4
s(g24722
I42
g24723
Vinsert
p41964
I41
VReturnStatement
p41965
tp41966
I4
s(g3532
I42
g3533
Vinsert
p41967
I42
VSimpleName: println
p41968
tp41969
I1
s(g946
I42
g947
Vinsert
p41970
I43
VSimpleType: PrintSettings
p41971
tp41972
I1
s(g11691
I42
g11692
Vinsert
p41973
I43
VSimpleType: ObjenesisInstanceFactory
p41974
tp41975
I1
s(g1332
I42
g1333
Vinsert
p41976
I65
VTagElement: @since
p41977
tp41978
I2
s(g11283
I42
g11284
Vinsert
p41979
I42
VSimpleName: to
p41980
tp41981
I2
s(g3199
I42
g3200
Vinsert
p41982
I33
VNullLiteral
p41983
tp41984
I2
s(g10992
I42
g10993
Vinsert
p41985
I42
VSimpleName: stubOnly
p41986
tp41987
I2
s(g8926
I42
g8927
Vinsert
p41988
I42
VSimpleName: getType
p41989
tp41990
I1
s(g104
I42
g105
Vinsert
p41991
I36
VParenthesizedExpression
p41992
tp41993
I1
s(g12188
I42
g12189
Vinsert
p41994
I42
VSimpleName: evaluate
p41995
tp41996
I3
s(g2413
I42
g2414
Vinsert
p41997
I42
VSimpleName: addAll
p41998
tp41999
I1
s(g8003
I42
g8004
Vinsert
p42000
I43
VSimpleType: ClassNotFoundException
p42001
tp42002
I1
s(g3585
I42
g3586
Vinsert
p42003
I66
VTextElement:  The class in the type hierarchy of this instance.
p42004
tp42005
I1
s(g14824
I42
g14825
Vinsert
p42006
I42
VSimpleName: String
p42007
tp42008
I1
s(g9382
I42
g9383
Vinsert
p42009
I45
VStringLiteral: "@Captor field must be of the type ArgumentCaptor.\u005cn"
p42010
tp42011
I1
s(g5191
I42
g5192
Vinsert
p42012
I83
VModifier: private
p42013
tp42014
I1
s(g7086
I42
g7087
Vinsert
p42015
I42
VSimpleName: qualifiedClassName
p42016
tp42017
I2
s(g5033
I42
g5034
Vinsert
p42018
I42
VSimpleName: matchersPrinter
p42019
tp42020
I1
s(g4372
I42
g4373
Vinsert
p42021
I43
VSimpleType: MockitoException
p42022
tp42023
I4
s(g25849
I42
g25850
Vinsert
p42024
I42
VSimpleName: assertEquals
p42025
tp42026
I2
s(g732
I42
g733
Vinsert
p42027
I42
VSimpleName: methodNameEquals
p42028
tp42029
I2
s(g15198
I42
g15199
Vinsert
p42030
I43
VSimpleType: Class
p42031
tp42032
I1
s(g6614
I42
g6615
Vinsert
p42033
I39
VPrimitiveType: boolean
p42034
tp42035
I1
s(g5660
I42
g5661
Vinsert
p42036
I34
VNumberLiteral: 3
p42037
tp42038
I2
s(g433
I42
g434
Vinsert
p42039
I83
VModifier: public
p42040
tp42041
I5
s(g4382
I42
g4383
Vinsert
p42042
I42
VSimpleName: result
p42043
tp42044
I1
s(g3688
I42
g3689
Vinsert
p42045
I26
VImportDeclaration
p42046
tp42047
I1
s(g17557
I42
g17558
Vinsert
p42048
I21
VExpressionStatement
p42049
tp42050
I6
s(g11177
I42
g11178
Vinsert
p42051
I43
VSimpleType: Throwable
p42052
tp42053
I1
s(g3155
I42
g3156
Vinsert
p42054
I74
VParameterizedType: Class<T>
p42055
tp42056
I1
s(g8986
I42
g8987
Vinsert
p42057
I57
VTypeLiteral
p42058
tp42059
I1
s(g5007
I42
g5008
Vinsert
p42060
I27
VInfixExpression: <
p42061
tp42062
I1
s(g4006
I42
g4007
Vinsert
p42063
I42
VSimpleName: l
p42064
tp42065
I1
s(g473
I42
g474
Vinsert
p42066
I42
VSimpleName: notifier
p42067
tp42068
I2
s(g13622
I42
g13623
Vinsert
p42069
I74
VParameterizedType: ThreadLocal<ReturnValues>
p42070
tp42071
I1
s(g30351
I42
g30352
Vinsert
p42072
I45
VStringLiteral: "Mock for DummyClass"
p42073
tp42074
I1
s(g2916
I42
g2917
Vinsert
p42075
I9
VBooleanLiteral: true
p42076
tp42077
I1
s(g3390
I42
g3391
Vinsert
p42078
I25
VIfStatement
p42079
tp42080
I1
s(g2227
I42
g2228
Vinsert
p42081
I42
VSimpleName: Object
p42082
tp42083
I1
s(g6403
I42
g6404
Vinsert
p42084
I42
VSimpleName: onVerificationStarted
p42085
tp42086
I1
s(g1954
I42
g1955
Vinsert
p42087
I27
VInfixExpression: !=
p42088
tp42089
I1
s(g7633
I42
g7634
Vinsert
p42090
I42
VSimpleName: Exception
p42091
tp42092
I1
s(g3851
I42
g3852
Vinsert
p42093
I59
VVariableDeclarationFragment
p42094
tp42095
I1
s(g9224
I42
g9225
Vinsert
p42096
I45
VStringLiteral: "java.vendor"
p42097
tp42098
I1
s(g5655
I42
g5656
Vinsert
p42099
I43
VSimpleType: Object
p42100
tp42101
I8
s(Vinsert
p42102
I42
VSimpleName: verify
p42103
Vinsert
p42104
I42
VSimpleName: ignoreStubs
p42105
tp42106
I1
s(g29408
I42
g29409
Vinsert
p42107
I42
VSimpleName: counter
p42108
tp42109
I1
s(g10032
I42
g10033
Vinsert
p42110
I9
VBooleanLiteral: true
p42111
tp42112
I1
s(g12804
I42
g12805
Vinsert
p42113
I42
VSimpleName: Before
p42114
tp42115
I1
s(g8716
I42
g8717
Vinsert
p42116
I43
VSimpleType: LinkedList
p42117
tp42118
I2
s(g219
I42
g220
Vinsert
p42119
I42
VSimpleName: Method
p42120
tp42121
I2
s(Vinsert
p42122
I42
VSimpleName: start
p42123
Vinsert
p42124
I34
VNumberLiteral: 50
p42125
tp42126
I1
s(g11314
I42
g11315
Vinsert
p42127
I42
VSimpleName: withCodeSourceUrlOf
p42128
tp42129
I1
s(g3083
I42
g3084
Vinsert
p42130
I32
VMethodInvocation
p42131
tp42132
I9
s(g8696
I42
g8697
Vinsert
p42133
I32
VMethodInvocation
p42134
tp42135
I6
s(g4866
I42
g4867
Vinsert
p42136
I45
VStringLiteral: "1"
p42137
tp42138
I2
s(g1001
I42
g1002
Vinsert
p42139
I42
VSimpleName: Invocation
p42140
tp42141
I7
s(g11066
I42
g11067
Vinsert
p42142
I60
VVariableDeclarationStatement
p42143
tp42144
I3
s(g2575
I42
g2576
Vinsert
p42145
I32
VMethodInvocation
p42146
tp42147
I6
s(g11572
I42
g11573
Vinsert
p42148
I42
VSimpleName: ReflectUtils
p42149
tp42150
I1
s(g9016
I42
g9017
Vinsert
p42151
I42
VSimpleName: forClass
p42152
tp42153
I1
s(g8242
I42
g8243
Vinsert
p42154
I42
VSimpleName: MockMethodInterceptor
p42155
tp42156
I1
s(g9224
I42
g9225
Vinsert
p42157
I32
VMethodInvocation
p42158
tp42159
I1
s(g12553
I42
g12554
Vinsert
p42160
I42
VSimpleName: callbacks
p42161
tp42162
I1
s(g10354
I42
g10355
Vinsert
p42163
I39
VPrimitiveType: int
p42164
tp42165
I1
s(g3121
I42
g3122
Vinsert
p42166
I11
VCastExpression
p42167
tp42168
I1
s(g22800
I42
g22801
Vinsert
p42169
I42
VSimpleName: i
p42170
tp42171
I3
s(g4800
I42
g4801
Vinsert
p42172
I42
VSimpleName: SampleClass
p42173
tp42174
I1
s(g3688
I42
g3689
Vinsert
p42175
I9
VBooleanLiteral: false
p42176
tp42177
I1
s(g2306
I42
g2307
Vinsert
p42178
I42
VSimpleName: onDifferentMock
p42179
tp42180
I1
s(g14642
I42
g14643
Vinsert
p42181
I42
VSimpleName: Integer
p42182
tp42183
I1
s(g7081
I42
g7082
Vinsert
p42184
I42
VSimpleName: LogInvocationsToStdOutListener
p42185
tp42186
I1
s(g89
I42
g90
Vinsert
p42187
I21
VExpressionStatement
p42188
tp42189
I1
s(g3267
I42
g3268
Vinsert
p42190
I21
VExpressionStatement
p42191
tp42192
I1
s(g6983
I42
g6984
Vinsert
p42193
I21
VExpressionStatement
p42194
tp42195
I5
s(g16663
I42
g16664
Vinsert
p42196
I42
VSimpleName: appendConstant
p42197
tp42198
I1
s(g9224
I42
g9225
Vinsert
p42199
I42
VSimpleName: Boolean
p42200
tp42201
I1
s(g4335
I42
g4336
Vinsert
p42202
I42
VSimpleName: intVal
p42203
tp42204
I1
s(g3659
I42
g3660
Vinsert
p42205
I42
VSimpleName: Serializable
p42206
tp42207
I1
s(g6877
I42
g6878
Vinsert
p42208
I59
VVariableDeclarationFragment
p42209
tp42210
I1
s(g30629
I42
g30630
Vinsert
p42211
I42
VSimpleName: mapOngoingStubbing
p42212
tp42213
I1
s(g11686
I42
g11687
Vinsert
p42214
I33
VNullLiteral
p42215
tp42216
I1
s(g3919
I42
g3920
Vinsert
p42217
I31
VMethodDeclaration
p42218
tp42219
I1
s(g17182
I42
g17183
Vinsert
p42220
I42
VSimpleName: mock
p42221
tp42222
I1
s(g9087
I42
g9088
Vinsert
p42223
I33
VNullLiteral
p42224
tp42225
I1
s(g4027
I42
g4028
Vinsert
p42226
I42
VSimpleName: i
p42227
tp42228
I1
s(g3091
I42
g3092
Vinsert
p42229
I14
VClassInstanceCreation
p42230
tp42231
I2
s(g5847
I42
g5848
Vinsert
p42232
I45
VStringLiteral: "reason : "
p42233
tp42234
I1
s(g1558
I42
g1559
Vinsert
p42235
I42
VSimpleName: PUTSTATIC
p42236
tp42237
I1
s(g5805
I42
g5806
Vinsert
p42238
I42
VSimpleName: out3
p42239
tp42240
I1
s(g5717
I42
g5718
Vinsert
p42241
I44
VSingleVariableDeclaration
p42242
tp42243
I1
s(g5416
I42
g5417
Vinsert
p42244
I42
VSimpleName: mockitoStubber
p42245
tp42246
I1
s(g14311
I42
g14312
Vinsert
p42247
I57
VTypeLiteral
p42248
tp42249
I1
s(g377
I42
g378
Vinsert
p42250
I76
VWildcardType: ?
p42251
tp42252
I2
s(g24930
I42
g24931
Vinsert
p42253
I45
VStringLiteral: "SmartMock should return empty String by default"
p42254
tp42255
I2
s(g9179
I42
g9180
Vinsert
p42256
I45
VStringLiteral: "org.mockito.internal.junit.JUnitRule$1.evaluate(JUnitRule.java:16)"
p42257
tp42258
I1
s(g5994
I42
g5995
Vinsert
p42259
I43
VSimpleType: MockitoJUnit44Runner
p42260
tp42261
I2
s(g6914
I42
g6915
Vinsert
p42262
I52
VThisExpression
p42263
tp42264
I3
s(Vinsert
p42265
I42
VSimpleName: add
p42266
Vinsert
p42267
I42
VSimpleName: arg
p42268
tp42269
I1
s(g24410
I42
g24411
Vinsert
p42270
I42
VSimpleName: fixedInput
p42271
tp42272
I2
s(g19774
I42
g19775
Vinsert
p42273
I42
VSimpleName: Foo
p42274
tp42275
I1
s(g15219
I42
g15220
Vinsert
p42276
I7
VAssignment: =
p42277
tp42278
I1
s(g27944
I42
g27945
Vinsert
p42279
I42
VSimpleName: value
p42280
tp42281
I2
s(g11177
I42
g11178
Vinsert
p42282
I42
VSimpleName: Object
p42283
tp42284
I1
s(g26
I42
g27
Vinsert
p42285
I42
VSimpleName: genericSuperclass
p42286
tp42287
I1
s(g8729
I42
g8730
Vinsert
p42288
I60
VVariableDeclarationStatement
p42289
tp42290
I1
s(g4911
I42
g4912
Vinsert
p42291
I54
VTryStatement
p42292
tp42293
I2
s(g1919
I42
g1920
Vinsert
p42294
I31
VMethodDeclaration
p42295
tp42296
I1
s(g6854
I42
g6855
Vinsert
p42297
I42
VSimpleName: MockUtil
p42298
tp42299
I2
s(g7836
I42
g7837
Vinsert
p42300
I42
VSimpleName: RETURNS_SELF
p42301
tp42302
I1
s(g4502
I42
g4503
Vinsert
p42303
I43
VSimpleType: Equals
p42304
tp42305
I1
s(g5017
I42
g5018
Vinsert
p42306
I60
VVariableDeclarationStatement
p42307
tp42308
I2
s(g2336
I42
g2337
Vinsert
p42309
I25
VIfStatement
p42310
tp42311
I1
s(g2672
I42
g2673
Vinsert
p42312
I42
VSimpleName: trace
p42313
tp42314
I1
s(g7004
I42
g7005
Vinsert
p42315
I45
VStringLiteral: "withArgs"
p42316
tp42317
I1
s(g5834
I42
g5835
Vinsert
p42318
I42
VSimpleName: Reporter
p42319
tp42320
I1
s(g15356
I42
g15357
Vinsert
p42321
I31
VMethodDeclaration
p42322
tp42323
I1
s(g2677
I42
g2678
Vinsert
p42324
I21
VExpressionStatement
p42325
tp42326
I1
s(g8798
I42
g8799
Vinsert
p42327
I42
VSimpleName: wanted
p42328
tp42329
I1
s(g6446
I42
g6447
Vinsert
p42330
I21
VExpressionStatement
p42331
tp42332
I7
s(g8319
I42
g8320
Vinsert
p42333
I43
VSimpleType: MockitoBehavior
p42334
tp42335
I2
s(g5986
I42
g5987
Vinsert
p42336
I32
VMethodInvocation
p42337
tp42338
I4
s(g5549
I42
g5550
Vinsert
p42339
I8
VBlock
p42340
tp42341
I1
s(g1688
I42
g1689
Vinsert
p42342
I42
VSimpleName: will
p42343
tp42344
I1
s(g19604
I42
g19605
Vinsert
p42345
I23
VFieldDeclaration
p42346
tp42347
I2
s(g18840
I42
g18841
Vinsert
p42348
I45
VStringLiteral: "org.mockito.configuration.MockitoConfiguration"
p42349
tp42350
I1
s(g4840
I42
g4841
Vinsert
p42351
I66
VTextElement: The implementation of the stack trace cleaner
p42352
tp42353
I1
s(g317
I42
g318
Vinsert
p42354
I42
VSimpleName: T
p42355
tp42356
I1
s(g164
I42
g165
Vinsert
p42357
I38
VPrefixExpression: -
p42358
tp42359
I1
s(g9789
I42
g9790
Vinsert
p42360
I42
VSimpleName: contains
p42361
tp42362
I1
s(g21782
I42
g21783
Vinsert
p42363
I85
VDimension
p42364
tp42365
I1
s(g1939
I42
g1940
Vinsert
p42366
I32
VMethodInvocation
p42367
tp42368
I1
s(g6379
I42
g6380
Vinsert
p42369
I42
VSimpleName: ClassPathLoader
p42370
tp42371
I1
s(g5599
I42
g5600
Vinsert
p42372
I42
VSimpleName: attr
p42373
tp42374
I1
s(g5416
I42
g5417
Vinsert
p42375
I31
VMethodDeclaration
p42376
tp42377
I1
s(g3565
I42
g3566
Vinsert
p42378
I60
VVariableDeclarationStatement
p42379
tp42380
I1
s(g4539
I42
g4540
Vinsert
p42381
I42
VSimpleName: CreationSettings
p42382
tp42383
I2
s(g16449
I42
g16450
Vinsert
p42384
I61
VWhileStatement
p42385
tp42386
I1
s(g6796
I42
g6797
Vinsert
p42387
I45
VStringLiteral: "Unable to create mock instance of type '"
p42388
tp42389
I1
s(g19709
I42
g19710
Vinsert
p42390
I42
VSimpleName: T
p42391
tp42392
I1
s(g8803
I42
g8804
Vinsert
p42393
I39
VPrimitiveType: boolean
p42394
tp42395
I1
s(g7961
I42
g7962
Vinsert
p42396
I42
VSimpleName: IMethods
p42397
tp42398
I2
s(g1001
I42
g1002
Vinsert
p42399
I43
VSimpleType: Invocation
p42400
tp42401
I7
s(g3542
I42
g3543
Vinsert
p42402
I42
VSimpleName: expectedException
p42403
tp42404
I1
s(g2195
I42
g2196
Vinsert
p42405
I43
VSimpleType: MockitoAnnotations.Mock
p42406
tp42407
I1
s(g4322
I42
g4323
Vinsert
p42408
I39
VPrimitiveType: boolean
p42409
tp42410
I2
s(g6725
I42
g6726
Vinsert
p42411
I42
VSimpleName: Test
p42412
tp42413
I1
s(g5335
I42
g5336
Vinsert
p42414
I43
VSimpleType: IllegalArgumentException
p42415
tp42416
I1
s(g7790
I42
g7791
Vinsert
p42417
I42
VSimpleName: Object
p42418
tp42419
I1
s(g352
I42
g353
Vinsert
p42420
I42
VSimpleName: LinkedList
p42421
tp42422
I1
s(g1179
I42
g1180
Vinsert
p42423
I42
VSimpleName: listeners
p42424
tp42425
I4
s(g2743
I42
g2744
Vinsert
p42426
I27
VInfixExpression: !=
p42427
tp42428
I1
s(g1194
I42
g1195
Vinsert
p42429
I42
VSimpleName: Test
p42430
tp42431
I1
s(g10252
I42
g10253
Vinsert
p42432
I83
VModifier: private
p42433
tp42434
I1
s(g6316
I42
g6317
Vinsert
p42435
I42
VSimpleName: answer
p42436
tp42437
I1
s(g149
I42
g150
Vinsert
p42438
I34
VNumberLiteral: 0
p42439
tp42440
I1
s(g986
I42
g987
Vinsert
p42441
I66
VTextElement:  a method visitor.
p42442
tp42443
I1
s(g4067
I42
g4068
Vinsert
p42444
I42
VSimpleName: Field
p42445
tp42446
I1
s(Vinsert
p42447
I42
VSimpleName: toInvocation
p42448
Vinsert
p42449
I42
VSimpleName: second
p42450
tp42451
I1
s(g7534
I42
g7535
Vinsert
p42452
I22
VFieldAccess
p42453
tp42454
I1
s(g19510
I42
g19511
Vinsert
p42455
I14
VClassInstanceCreation
p42456
tp42457
I1
s(g1467
I42
g1468
Vinsert
p42458
I42
VSimpleName: invocation
p42459
tp42460
I5
s(g16963
I42
g16964
Vinsert
p42461
I42
VSimpleName: shouldScreamWhenNullPassedInsteadOfAnArray
p42462
tp42463
I1
s(g448
I42
g449
Vinsert
p42464
I42
VSimpleName: IMethods
p42465
tp42466
I1
s(g2485
I42
g2486
Vinsert
p42467
I43
VSimpleType: List
p42468
tp42469
I1
s(g11757
I42
g11758
Vinsert
p42470
I83
VModifier: final
p42471
tp42472
I1
s(g14566
I42
g14567
Vinsert
p42473
I45
VStringLiteral: "someValue"
p42474
tp42475
I1
s(g7462
I42
g7463
Vinsert
p42476
I42
VSimpleName: appendLabel
p42477
tp42478
I1
s(g3101
I42
g3102
Vinsert
p42479
I44
VSingleVariableDeclaration
p42480
tp42481
I2
s(g5426
I42
g5427
Vinsert
p42482
I44
VSingleVariableDeclaration
p42483
tp42484
I1
s(g1214
I42
g1215
Vinsert
p42485
I27
VInfixExpression: +
p42486
tp42487
I1
s(g1513
I42
g1514
Vinsert
p42488
I42
VSimpleName: event
p42489
tp42490
I2
s(g2498
I42
g2499
Vinsert
p42491
I42
VSimpleName: operation
p42492
tp42493
I1
s(g2834
I42
g2835
Vinsert
p42494
I42
VSimpleName: ClassUseDerivedInterface
p42495
tp42496
I2
s(g11686
I42
g11687
Vinsert
p42497
I42
VSimpleName: mockingProgress
p42498
tp42499
I2
s(g13114
I42
g13115
Vinsert
p42500
I42
VSimpleName: invocations
p42501
tp42502
I1
s(g3165
I42
g3166
Vinsert
p42503
I42
VSimpleName: MockSettings
p42504
tp42505
I2
s(g14269
I42
g14270
Vinsert
p42506
I42
VSimpleName: Object
p42507
tp42508
I4
s(g7539
I42
g7540
Vinsert
p42509
I42
VSimpleName: Type
p42510
tp42511
I2
s(g2881
I42
g2882
Vinsert
p42512
I27
VInfixExpression: >=
p42513
tp42514
I1
s(g8655
I42
g8656
Vinsert
p42515
I42
VSimpleName: MockKey
p42516
tp42517
I1
s(g2490
I42
g2491
Vinsert
p42518
I54
VTryStatement
p42519
tp42520
I1
s(g13622
I42
g13623
Vinsert
p42521
I42
VSimpleName: ThreadLocal
p42522
tp42523
I3
s(g247
I42
g248
Vinsert
p42524
I44
VSingleVariableDeclaration
p42525
tp42526
I8
s(g16283
I42
g16284
Vinsert
p42527
I60
VVariableDeclarationStatement
p42528
tp42529
I2
s(g15351
I42
g15352
Vinsert
p42530
I8
VBlock
p42531
tp42532
I1
s(g11418
I42
g11419
Vinsert
p42533
I42
VSimpleName: MethodProxy
p42534
tp42535
I2
s(g6677
I42
g6678
Vinsert
p42536
I42
VSimpleName: Type
p42537
tp42538
I1
s(g7124
I42
g7125
Vinsert
p42539
I83
VModifier: public
p42540
tp42541
I1
s(g2010
I42
g2011
Vinsert
p42542
I42
VSimpleName: verifier
p42543
tp42544
I2
s(g13975
I42
g13976
Vinsert
p42545
I45
VStringLiteral: "Mock no: "
p42546
tp42547
I1
s(g2444
I42
g2445
Vinsert
p42548
I42
VSimpleName: IInvokedMethod
p42549
tp42550
I1
s(g7403
I42
g7404
Vinsert
p42551
I41
VReturnStatement
p42552
tp42553
I1
s(g11699
I42
g11700
Vinsert
p42554
I26
VImportDeclaration
p42555
tp42556
I1
s(g6736
I42
g6737
Vinsert
p42557
I39
VPrimitiveType: int
p42558
tp42559
I1
s(g4776
I42
g4777
Vinsert
p42560
I52
VThisExpression
p42561
tp42562
I2
s(g1254
I42
g1255
Vinsert
p42563
I85
VDimension
p42564
tp42565
I1
s(g2364
I42
g2365
Vinsert
p42566
I8
VBlock
p42567
tp42568
I3
s(g5373
I42
g5374
Vinsert
p42569
I42
VSimpleName: MockitoAnnotations
p42570
tp42571
I1
s(g1411
I42
g1412
Vinsert
p42572
I42
VSimpleName: data
p42573
tp42574
I7
s(g15804
I42
g15805
Vinsert
p42575
I39
VPrimitiveType: void
p42576
tp42577
I1
s(g10696
I42
g10697
Vinsert
p42578
I42
VSimpleName: join
p42579
tp42580
I1
s(g12304
I42
g12305
Vinsert
p42581
I74
VParameterizedType: Queue<Boolean>
p42582
tp42583
I1
s(g1848
I42
g1849
Vinsert
p42584
I42
VSimpleName: ClassTransformer
p42585
tp42586
I2
s(g4189
I42
g4190
Vinsert
p42587
I8
VBlock
p42588
tp42589
I1
s(g8798
I42
g8799
Vinsert
p42590
I45
VStringLiteral: "Wanted but not invoked:"
p42591
tp42592
I1
s(g2408
I42
g2409
Vinsert
p42593
I7
VAssignment: =
p42594
tp42595
I1
s(g6295
I42
g6296
Vinsert
p42596
I43
VSimpleType: InvocationListener
p42597
tp42598
I2
s(g3016
I42
g3017
Vinsert
p42599
I43
VSimpleType: InputStream
p42600
tp42601
I2
s(g17557
I42
g17558
Vinsert
p42602
I42
VSimpleName: assertEquals
p42603
tp42604
I3
s(g4451
I42
g4452
Vinsert
p42605
I77
VNormalAnnotation
p42606
tp42607
I3
s(g2642
I42
g2643
Vinsert
p42608
I42
VSimpleName: Object
p42609
tp42610
I3
s(g8655
I42
g8656
Vinsert
p42611
I42
VSimpleName: avoidingClassLeakCache
p42612
tp42613
I1
s(g8283
I42
g8284
Vinsert
p42614
I43
VSimpleType: SampleClass
p42615
tp42616
I2
s(g653
I42
g654
Vinsert
p42617
I8
VBlock
p42618
tp42619
I7
s(g13694
I42
g13695
Vinsert
p42620
I43
VSimpleType: StackTraceFilter
p42621
tp42622
I1
s(g1380
I42
g1381
Vinsert
p42623
I42
VSimpleName: filterLineNo
p42624
tp42625
I3
s(g801
I42
g802
Vinsert
p42626
I42
VSimpleName: printSettings
p42627
tp42628
I1
s(g149
I42
g150
Vinsert
p42629
I21
VExpressionStatement
p42630
tp42631
I1
s(g1750
I42
g1751
Vinsert
p42632
I85
VDimension
p42633
tp42634
I2
s(g8288
I42
g8289
Vinsert
p42635
I42
VSimpleName: InvocationListener
p42636
tp42637
I1
s(g3354
I42
g3355
Vinsert
p42638
I21
VExpressionStatement
p42639
tp42640
I4
s(g282
I42
g283
Vinsert
p42641
I43
VSimpleType: InterceptedInvocation.SuperMethod
p42642
tp42643
I1
s(g4372
I42
g4373
Vinsert
p42644
I42
VSimpleName: details
p42645
tp42646
I1
s(g18366
I42
g18367
Vinsert
p42647
I42
VSimpleName: FACTORY
p42648
tp42649
I1
s(g11043
I42
g11044
Vinsert
p42650
I40
VQualifiedName: org.mockito.plugins.MockitoPlugins
p42651
tp42652
I1
s(g1159
I42
g1160
Vinsert
p42653
I8
VBlock
p42654
tp42655
I1
s(g1591
I42
g1592
Vinsert
p42656
I42
VSimpleName: invocationMatcher
p42657
tp42658
I1
s(g3006
I42
g3007
Vinsert
p42659
I57
VTypeLiteral
p42660
tp42661
I2
s(g8372
I42
g8373
Vinsert
p42662
I42
VSimpleName: List
p42663
tp42664
I2
s(g6919
I42
g6920
Vinsert
p42665
I42
VSimpleName: invocations
p42666
tp42667
I1
s(g12370
I42
g12371
Vinsert
p42668
I36
VParenthesizedExpression
p42669
tp42670
I2
s(g5138
I42
g5139
Vinsert
p42671
I42
VSimpleName: PARAM
p42672
tp42673
I1
s(g12561
I42
g12562
Vinsert
p42674
I7
VAssignment: =
p42675
tp42676
I1
s(g36104
I42
g36105
Vinsert
p42677
I42
VSimpleName: serialized
p42678
tp42679
I4
s(g4017
I42
g4018
Vinsert
p42680
I43
VSimpleType: AnotherListOfInteger
p42681
tp42682
I1
s(g5647
I42
g5648
Vinsert
p42683
I45
VStringLiteral: "Found cleanup operation for step "
p42684
tp42685
I1
s(g10354
I42
g10355
Vinsert
p42686
I44
VSingleVariableDeclaration
p42687
tp42688
I4
s(g17987
I42
g17988
Vinsert
p42689
I42
VSimpleName: only
p42690
tp42691
I1
s(g12000
I42
g12001
Vinsert
p42692
I8
VBlock
p42693
tp42694
I4
s(g11336
I42
g11337
Vinsert
p42695
I58
VVariableDeclarationExpression
p42696
tp42697
I1
s(g10081
I42
g10082
Vinsert
p42698
I42
VSimpleName: filename
p42699
tp42700
I1
s(g9990
I42
g9991
Vinsert
p42701
I42
VSimpleName: builder
p42702
tp42703
I2
s(g4745
I42
g4746
Vinsert
p42704
I14
VClassInstanceCreation
p42705
tp42706
I3
s(g8038
I42
g8039
Vinsert
p42707
I42
VSimpleName: wantedNumberOfInvocations
p42708
tp42709
I2
s(g722
I42
g723
Vinsert
p42710
I43
VSimpleType: MockHandler
p42711
tp42712
I1
s(g11353
I42
g11354
Vinsert
p42713
I42
VSimpleName: assertFalse
p42714
tp42715
I2
s(g2700
I42
g2701
Vinsert
p42716
I33
VNullLiteral
p42717
tp42718
I1
s(g13855
I42
g13856
Vinsert
p42719
I43
VSimpleType: VerificationStartedListener
p42720
tp42721
I1
s(g513
I42
g514
Vinsert
p42722
I59
VVariableDeclarationFragment
p42723
tp42724
I10
s(g4027
I42
g4028
Vinsert
p42725
I42
VSimpleName: filePath2
p42726
tp42727
I1
s(g9252
I42
g9253
Vinsert
p42728
I43
VSimpleType: Result
p42729
tp42730
I1
s(g3991
I42
g3992
Vinsert
p42731
I42
VSimpleName: classes
p42732
tp42733
I3
s(g17616
I42
g17617
Vinsert
p42734
I45
VStringLiteral: "Actual invocation:"
p42735
tp42736
I1
s(g2503
I42
g2504
Vinsert
p42737
I42
VSimpleName: CodeEmitter
p42738
tp42739
I1
s(g13218
I42
g13219
Vinsert
p42740
I42
VSimpleName: shouldIgnoreIfExtraInterfacesAreNull
p42741
tp42742
I1
s(g15719
I42
g15720
Vinsert
p42743
I74
VParameterizedType: BDDOngoingStubbingImpl<T>
p42744
tp42745
I1
s(g2631
I42
g2632
Vinsert
p42746
I42
VSimpleName: actualCount
p42747
tp42748
I1
s(g247
I42
g248
Vinsert
p42749
I25
VIfStatement
p42750
tp42751
I4
s(g3919
I42
g3920
Vinsert
p42752
I42
VSimpleName: hasOnlyThoseMethodsInStackTrace
p42753
tp42754
I1
s(g12777
I42
g12778
Vinsert
p42755
I59
VVariableDeclarationFragment
p42756
tp42757
I1
s(g11099
I42
g11100
Vinsert
p42758
I42
VSimpleName: Throwable
p42759
tp42760
I4
s(g6566
I42
g6567
Vinsert
p42761
I43
VSimpleType: List
p42762
tp42763
I1
s(g6877
I42
g6878
Vinsert
p42764
I42
VSimpleName: ITestResult
p42765
tp42766
I1
s(g3914
I42
g3915
Vinsert
p42767
I42
VSimpleName: assertThat
p42768
tp42769
I1
s(g4991
I42
g4992
Vinsert
p42770
I43
VSimpleType: Exception
p42771
tp42772
I1
s(g16053
I42
g16054
Vinsert
p42773
I42
VSimpleName: answer
p42774
tp42775
I3
s(g3953
I42
g3954
Vinsert
p42776
I43
VSimpleType: Throwable
p42777
tp42778
I3
s(g37030
I42
g37031
Vinsert
p42779
I42
VSimpleName: EmptyReturnValues
p42780
tp42781
I1
s(g3943
I42
g3944
Vinsert
p42782
I42
VSimpleName: classLoader_without_JUnit
p42783
tp42784
I1
s(g3730
I42
g3731
Vinsert
p42785
I42
VSimpleName: isLessThan
p42786
tp42787
I1
s(g5829
I42
g5830
Vinsert
p42788
I52
VThisExpression
p42789
tp42790
I1
s(g1129
I42
g1130
Vinsert
p42791
I44
VSingleVariableDeclaration
p42792
tp42793
I4
s(g488
I42
g489
Vinsert
p42794
I42
VSimpleName: Class
p42795
tp42796
I1
s(g4800
I42
g4801
Vinsert
p42797
I14
VClassInstanceCreation
p42798
tp42799
I1
s(g10651
I42
g10652
Vinsert
p42800
I32
VMethodInvocation
p42801
tp42802
I3
s(g4420
I42
g4421
Vinsert
p42803
I42
VSimpleName: Stubbing
p42804
tp42805
I2
s(g9334
I42
g9335
Vinsert
p42806
I42
VSimpleName: InvocationTargetException
p42807
tp42808
I1
s(g6162
I42
g6163
Vinsert
p42809
I27
VInfixExpression: ==
p42810
tp42811
I1
s(g17574
I42
g17575
Vinsert
p42812
I27
VInfixExpression: ==
p42813
tp42814
I1
s(g2839
I42
g2840
Vinsert
p42815
I42
VSimpleName: Invocation
p42816
tp42817
I1
s(g4776
I42
g4777
Vinsert
p42818
I7
VAssignment: =
p42819
tp42820
I1
s(g13447
I42
g13448
Vinsert
p42821
I74
VParameterizedType: List<String>
p42822
tp42823
I1
s(g1332
I42
g1333
Vinsert
p42824
I66
VTextElement: verify(mock).giveMe(argThat(new MyHamcrestMatcher()));
p42825
tp42826
I1
s(g1372
I42
g1373
Vinsert
p42827
I8
VBlock
p42828
tp42829
I13
s(g3036
I42
g3037
Vinsert
p42830
I42
VSimpleName: s
p42831
tp42832
I2
s(g4479
I42
g4480
Vinsert
p42833
I42
VSimpleName: CAPS
p42834
tp42835
I1
s(g4714
I42
g4715
Vinsert
p42836
I42
VSimpleName: methodProxy
p42837
tp42838
I4
s(g1660
I42
g1661
Vinsert
p42839
I42
VSimpleName: method
p42840
tp42841
I3
s(g11387
I42
g11388
Vinsert
p42842
I83
VModifier: final
p42843
tp42844
I1
s(g32345
I42
g32346
Vinsert
p42845
I42
VSimpleName: setNamePrefix
p42846
tp42847
I1
s(g709
I42
g710
Vinsert
p42848
I42
VSimpleName: getResourceAsStream
p42849
tp42850
I1
s(g15836
I42
g15837
Vinsert
p42851
I27
VInfixExpression: !=
p42852
tp42853
I8
s(g5744
I42
g5745
Vinsert
p42854
I42
VSimpleName: Override
p42855
tp42856
I1
s(g3359
I42
g3360
Vinsert
p42857
I42
VSimpleName: doSomethingElse
p42858
tp42859
I2
s(g5690
I42
g5691
Vinsert
p42860
I41
VReturnStatement
p42861
tp42862
I2
s(g8383
I42
g8384
Vinsert
p42863
I83
VModifier: synchronized
p42864
tp42865
I2
s(g2190
I42
g2191
Vinsert
p42866
I42
VSimpleName: position
p42867
tp42868
I3
s(g2227
I42
g2228
Vinsert
p42869
I42
VSimpleName: stubber
p42870
tp42871
I1
s(g3016
I42
g3017
Vinsert
p42872
I33
VNullLiteral
p42873
tp42874
I2
s(g8528
I42
g8529
Vinsert
p42875
I74
VParameterizedType: MockCreationSettings<T>
p42876
tp42877
I1
s(g5461
I42
g5462
Vinsert
p42878
I83
VModifier: static
p42879
tp42880
I1
s(g10794
I42
g10795
Vinsert
p42881
I18
VContinueStatement
p42882
tp42883
I1
s(g42265
I42
g42266
Vinsert
p42884
I42
VSimpleName: evaluate
p42885
tp42886
I1
s(g6035
I42
g6036
Vinsert
p42887
I42
VSimpleName: String
p42888
tp42889
I1
s(g8283
I42
g8284
Vinsert
p42890
I59
VVariableDeclarationFragment
p42891
tp42892
I1
s(g2886
I42
g2887
Vinsert
p42893
I43
VSimpleType: AnswersWithDelay
p42894
tp42895
I1
s(g6634
I42
g6635
Vinsert
p42896
I59
VVariableDeclarationFragment
p42897
tp42898
I4
s(g2728
I42
g2729
Vinsert
p42899
I27
VInfixExpression: &&
p42900
tp42901
I2
s(g4212
I42
g4213
Vinsert
p42902
I39
VPrimitiveType: int
p42903
tp42904
I1
s(g25802
I42
g25803
Vinsert
p42905
I43
VSimpleType: InvocationMatcher
p42906
tp42907
I1
s(g332
I42
g333
Vinsert
p42908
I27
VInfixExpression: +
p42909
tp42910
I1
s(g3111
I42
g3112
Vinsert
p42911
I42
VSimpleName: stub
p42912
tp42913
I1
s(g7735
I42
g7736
Vinsert
p42914
I42
VSimpleName: cv
p42915
tp42916
I1
s(g3073
I42
g3074
Vinsert
p42917
I32
VMethodInvocation
p42918
tp42919
I2
s(g3026
I42
g3027
Vinsert
p42920
I27
VInfixExpression: !=
p42921
tp42922
I2
s(g11519
I42
g11520
Vinsert
p42923
I42
VSimpleName: testInf
p42924
tp42925
I1
s(g3797
I42
g3798
Vinsert
p42926
I42
VSimpleName: ConfigurationAccess
p42927
tp42928
I3
s(g229
I42
g230
Vinsert
p42929
I59
VVariableDeclarationFragment
p42930
tp42931
I2
s(g1214
I42
g1215
Vinsert
p42932
I45
VStringLiteral: "[Mockito] stubbed with those args here   at com.FooTest:20\u005cn"
p42933
tp42934
I1
s(g3924
I42
g3925
Vinsert
p42935
I73
VTypeParameter
p42936
tp42937
I1
s(g3629
I42
g3630
Vinsert
p42938
I42
VSimpleName: tool
p42939
tp42940
I1
s(g1174
I42
g1175
Vinsert
p42941
I43
VSimpleType: DerivedInterface
p42942
tp42943
I1
s(g2908
I42
g2909
Vinsert
p42944
I45
VStringLiteral: "yyyy-MM-dd HH:mm z"
p42945
tp42946
I1
s(g3688
I42
g3689
Vinsert
p42947
I78
VMarkerAnnotation
p42948
tp42949
I3
s(g493
I42
g494
Vinsert
p42950
I43
VSimpleType: Exception
p42951
tp42952
I1
s(g29607
I42
g29608
Vinsert
p42953
I42
VSimpleName: RunNotifier
p42954
tp42955
I1
s(Vinsert
p42956
I42
VSimpleName: append
p42957
Vinsert
p42958
I42
VSimpleName: toStringWithTypes
p42959
tp42960
I1
s(g32149
I42
g32150
Vinsert
p42961
I45
VStringLiteral: "different arg"
p42962
tp42963
I1
s(g10971
I42
g10972
Vinsert
p42964
I27
VInfixExpression: ==
p42965
tp42966
I7
s(g24170
I42
g24171
Vinsert
p42967
I42
VSimpleName: FrameworkMethod
p42968
tp42969
I3
s(g2876
I42
g2877
Vinsert
p42970
I42
VSimpleName: String
p42971
tp42972
I3
s(g8965
I42
g8966
Vinsert
p42973
I43
VSimpleType: Matcher
p42974
tp42975
I2
s(g1019
I42
g1020
Vinsert
p42976
I21
VExpressionStatement
p42977
tp42978
I1
s(g224
I42
g225
Vinsert
p42979
I43
VSimpleType: Object
p42980
tp42981
I1
s(g523
I42
g524
Vinsert
p42982
I44
VSingleVariableDeclaration
p42983
tp42984
I1
s(g1482
I42
g1483
Vinsert
p42985
I60
VVariableDeclarationStatement
p42986
tp42987
I1
s(g6841
I42
g6842
Vinsert
p42988
I32
VMethodInvocation
p42989
tp42990
I3
s(g2934
I42
g2935
Vinsert
p42991
I42
VSimpleName: framework
p42992
tp42993
I2
s(g6350
I42
g6351
Vinsert
p42994
I42
VSimpleName: articleManager
p42995
tp42996
I1
s(g6983
I42
g6984
Vinsert
p42997
I42
VSimpleName: verify
p42998
tp42999
I1
s(g4510
I42
g4511
Vinsert
p43000
I42
VSimpleName: Test
p43001
tp43002
I1
s(g377
I42
g378
Vinsert
p43003
I42
VSimpleName: Class
p43004
tp43005
I1
s(g3413
I42
g3414
Vinsert
p43006
I42
VSimpleName: verify
p43007
tp43008
I4
s(g8131
I42
g8132
Vinsert
p43009
I42
VSimpleName: mock
p43010
tp43011
I1
s(g6
I42
g7
Vinsert
p43012
I43
VSimpleType: Object
p43013
tp43014
I6
s(g4184
I42
g4185
Vinsert
p43015
I43
VSimpleType: Class
p43016
tp43017
I1
s(g1467
I42
g1468
Vinsert
p43018
I42
VSimpleName: unstubbedInvocations
p43019
tp43020
I1
s(g19709
I42
g19710
Vinsert
p43021
I43
VSimpleType: T
p43022
tp43023
I1
s(g2467
I42
g2468
Vinsert
p43024
I42
VSimpleName: mockingProgress
p43025
tp43026
I1
s(g3160
I42
g3161
Vinsert
p43027
I16
VConditionalExpression
p43028
tp43029
I1
s(g13172
I42
g13173
Vinsert
p43030
I42
VSimpleName: validateState
p43031
tp43032
I2
s(g1498
I42
g1499
Vinsert
p43033
I21
VExpressionStatement
p43034
tp43035
I2
s(g4784
I42
g4785
Vinsert
p43036
I43
VSimpleType: Observable
p43037
tp43038
I1
s(g10164
I42
g10165
Vinsert
p43039
I42
VSimpleName: getMessage
p43040
tp43041
I1
s(g1533
I42
g1534
Vinsert
p43042
I42
VSimpleName: Invocation
p43043
tp43044
I1
s(g3091
I42
g3092
Vinsert
p43045
I32
VMethodInvocation
p43046
tp43047
I6
s(g4346
I42
g4347
Vinsert
p43048
I43
VSimpleType: String
p43049
tp43050
I1
s(g5776
I42
g5777
Vinsert
p43051
I42
VSimpleName: Exception
p43052
tp43053
I4
s(g4973
I42
g4974
Vinsert
p43054
I8
VBlock
p43055
tp43056
I1
s(g1134
I42
g1135
Vinsert
p43057
I42
VSimpleName: result
p43058
tp43059
I1
s(g1039
I42
g1040
Vinsert
p43060
I42
VSimpleName: field
p43061
tp43062
I1
s(g11177
I42
g11178
Vinsert
p43063
I33
VNullLiteral
p43064
tp43065
I1
s(g3835
I42
g3836
Vinsert
p43066
I43
VSimpleType: InvalidStateDetectionTest
p43067
tp43068
I1
s(g3131
I42
g3132
Vinsert
p43069
I74
VParameterizedType: Iterator<Invocation>
p43070
tp43071
I1
s(g16902
I42
g16903
Vinsert
p43072
I42
VSimpleName: intercept
p43073
tp43074
I1
s(g3699
I42
g3700
Vinsert
p43075
I12
VCatchClause
p43076
tp43077
I1
s(g16663
I42
g16664
Vinsert
p43078
I42
VSimpleName: add
p43079
tp43080
I1
s(g5274
I42
g5275
Vinsert
p43081
I42
VSimpleName: workingSet
p43082
tp43083
I3
s(g10572
I42
g10573
Vinsert
p43084
I42
VSimpleName: mocks
p43085
tp43086
I1
s(g7564
I42
g7565
Vinsert
p43087
I83
VModifier: public
p43088
tp43089
I1
s(g9601
I42
g9602
Vinsert
p43090
I8
VBlock
p43091
tp43092
I1
s(g6606
I42
g6607
Vinsert
p43093
I43
VSimpleType: MockitoListener
p43094
tp43095
I1
s(g9706
I42
g9707
Vinsert
p43096
I42
VSimpleName: HamcrestPrinter
p43097
tp43098
I1
s(g51
I42
g52
Vinsert
p43099
I33
VNullLiteral
p43100
tp43101
I1
s(g598
I42
g599
Vinsert
p43102
I31
VMethodDeclaration
p43103
tp43104
I1
s(g5164
I42
g5165
Vinsert
p43105
I60
VVariableDeclarationStatement
p43106
tp43107
I1
s(g11699
I42
g11700
Vinsert
p43108
I85
VDimension
p43109
tp43110
I2
s(g1287
I42
g1288
Vinsert
p43111
I42
VSimpleName: listener
p43112
tp43113
I4
s(g5583
I42
g5584
Vinsert
p43114
I22
VFieldAccess
p43115
tp43116
I1
s(g11107
I42
g11108
Vinsert
p43117
I66
VTextElement: mock.someVoidMethod();
p43118
tp43119
I1
s(g5456
I42
g5457
Vinsert
p43120
I43
VSimpleType: TypeMockability
p43121
tp43122
I2
s(g6882
I42
g6883
Vinsert
p43123
I41
VReturnStatement
p43124
tp43125
I1
s(g6606
I42
g6607
Vinsert
p43126
I44
VSingleVariableDeclaration
p43127
tp43128
I1
s(g11519
I42
g11520
Vinsert
p43129
I42
VSimpleName: start
p43130
tp43131
I1
s(g6763
I42
g6764
Vinsert
p43132
I42
VSimpleName: third
p43133
tp43134
I1
s(g4670
I42
g4671
Vinsert
p43135
I42
VSimpleName: Thread
p43136
tp43137
I4
s(g5530
I42
g5531
Vinsert
p43138
I57
VTypeLiteral
p43139
tp43140
I1
s(g21680
I42
g21681
Vinsert
p43141
I42
VSimpleName: o
p43142
tp43143
I4
s(g3527
I42
g3528
Vinsert
p43144
I42
VSimpleName: JUMP_INSN
p43145
tp43146
I1
s(g4194
I42
g4195
Vinsert
p43147
I42
VSimpleName: run
p43148
tp43149
I5
s(g2457
I42
g2458
Vinsert
p43150
I43
VSimpleType: Set
p43151
tp43152
I1
s(g6387
I42
g6388
Vinsert
p43153
I40
VQualifiedName: MockMethodInterceptor.ForEquals
p43154
tp43155
I1
s(g2733
I42
g2734
Vinsert
p43156
I42
VSimpleName: filter
p43157
tp43158
I1
s(g12318
I42
g12319
Vinsert
p43159
I45
VStringLiteral: "MockitoSerializationIssueTest"
p43160
tp43161
I2
s(g3091
I42
g3092
Vinsert
p43162
I45
VStringLiteral: "[Mockito] Unused stubbings of: mock\u005cn"
p43163
tp43164
I1
s(g16592
I42
g16593
Vinsert
p43165
I42
VSimpleName: currentThread
p43166
tp43167
I1
s(g1739
I42
g1740
Vinsert
p43168
I43
VSimpleType: Invocation
p43169
tp43170
I1
s(g4934
I42
g4935
Vinsert
p43171
I42
VSimpleName: visitAnnotation
p43172
tp43173
I1
s(g1244
I42
g1245
Vinsert
p43174
I9
VBooleanLiteral: true
p43175
tp43176
I1
s(g3493
I42
g3494
Vinsert
p43177
I32
VMethodInvocation
p43178
tp43179
I5
s(g6634
I42
g6635
Vinsert
p43180
I42
VSimpleName: mock
p43181
tp43182
I2
s(g22880
I42
g22881
Vinsert
p43183
I43
VSimpleType: Float
p43184
tp43185
I1
s(g9196
I42
g9197
Vinsert
p43186
I42
VSimpleName: shouldMarkAsVerified
p43187
tp43188
I2
s(g10672
I42
g10673
Vinsert
p43189
I43
VSimpleType: InvocationOnMock
p43190
tp43191
I4
s(g5123
I42
g5124
Vinsert
p43192
I42
VSimpleName: Foo
p43193
tp43194
I2
s(g8867
I42
g8868
Vinsert
p43195
I83
VModifier: public
p43196
tp43197
I1
s(g19530
I42
g19531
Vinsert
p43198
I42
VSimpleName: isVarArgs
p43199
tp43200
I1
s(g686
I42
g687
Vinsert
p43201
I45
VStringLiteral: "appetite for destruction"
p43202
tp43203
I1
s(g3331
I42
g3332
Vinsert
p43204
I34
VNumberLiteral: 0
p43205
tp43206
I1
s(g4474
I42
g4475
Vinsert
p43207
I42
VSimpleName: MockUtil
p43208
tp43209
I1
s(g518
I42
g519
Vinsert
p43210
I43
VSimpleType: Throwable
p43211
tp43212
I2
s(g3509
I42
g3510
Vinsert
p43213
I42
VSimpleName: fieldReader
p43214
tp43215
I1
s(Vinsert
p43216
I42
VSimpleName: mock
p43217
Vinsert
p43218
I42
VSimpleName: anyString
p43219
tp43220
I1
s(g1312
I42
g1313
Vinsert
p43221
I39
VPrimitiveType: void
p43222
tp43223
I1
s(g8894
I42
g8895
Vinsert
p43224
I42
VSimpleName: testBridgeInvocationIsRecordedForInterceptedMethod
p43225
tp43226
I1
s(g1795
I42
g1796
Vinsert
p43227
I33
VNullLiteral
p43228
tp43229
I1
s(g926
I42
g927
Vinsert
p43230
I5
VArrayType: StackTraceElement[]
p43231
tp43232
I5
s(g8931
I42
g8932
Vinsert
p43233
I42
VSimpleName: invocationAt
p43234
tp43235
I2
s(g686
I42
g687
Vinsert
p43236
I8
VBlock
p43237
tp43238
I1
s(g5408
I42
g5409
Vinsert
p43239
I44
VSingleVariableDeclaration
p43240
tp43241
I1
s(g727
I42
g728
Vinsert
p43242
I40
VQualifiedName: org.mockito.internal.stubbing.VoidMethodStubbableImpl
p43243
tp43244
I1
s(g1876
I42
g1877
Vinsert
p43245
I43
VSimpleType: DefaultContribution
p43246
tp43247
I1
s(g5196
I42
g5197
Vinsert
p43248
I42
VSimpleName: inOrderContext
p43249
tp43250
I1
s(g6233
I42
g6234
Vinsert
p43251
I41
VReturnStatement
p43252
tp43253
I1
s(g3542
I42
g3543
Vinsert
p43254
I52
VThisExpression
p43255
tp43256
I1
s(g1599
I42
g1600
Vinsert
p43257
I8
VBlock
p43258
tp43259
I1
s(g11066
I42
g11067
Vinsert
p43260
I42
VSimpleName: shouldKeepRunners
p43261
tp43262
I1
s(g483
I42
g484
Vinsert
p43263
I42
VSimpleName: CanDescribeVerbosely
p43264
tp43265
I3
s(g6695
I42
g6696
Vinsert
p43266
I43
VSimpleType: Set
p43267
tp43268
I1
s(g1039
I42
g1040
Vinsert
p43269
I44
VSingleVariableDeclaration
p43270
tp43271
I2
s(g1896
I42
g1897
Vinsert
p43272
I45
VStringLiteral: "b"
p43273
tp43274
I2
s(g20397
I42
g20398
Vinsert
p43275
I42
VSimpleName: parameterTypes
p43276
tp43277
I2
s(g6973
I42
g6974
Vinsert
p43278
I7
VAssignment: =
p43279
tp43280
I1
s(g3121
I42
g3122
Vinsert
p43281
I42
VSimpleName: String
p43282
tp43283
I2
s(g3318
I42
g3319
Vinsert
p43284
I27
VInfixExpression: +
p43285
tp43286
I1
s(g352
I42
g353
Vinsert
p43287
I43
VSimpleType: ArgMismatchFinder
p43288
tp43289
I1
s(g9821
I42
g9822
Vinsert
p43290
I11
VCastExpression
p43291
tp43292
I1
s(g10634
I42
g10635
Vinsert
p43293
I5
VArrayType: String[]
p43294
tp43295
I1
s(g13905
I42
g13906
Vinsert
p43296
I42
VSimpleName: MockitoState
p43297
tp43298
I1
s(g36654
I42
g36655
Vinsert
p43299
I42
VSimpleName: initMocks
p43300
tp43301
I1
s(g6287
I42
g6288
Vinsert
p43302
I42
VSimpleName: isUp
p43303
tp43304
I1
s(g410
I42
g411
Vinsert
p43305
I42
VSimpleName: invocation
p43306
tp43307
I1
s(g9100
I42
g9101
Vinsert
p43308
I42
VSimpleName: containsKey
p43309
tp43310
I1
s(g2886
I42
g2887
Vinsert
p43311
I42
VSimpleName: AnswersWithDelay
p43312
tp43313
I1
s(g528
I42
g529
Vinsert
p43314
I13
VCharacterLiteral: 'c'
p43315
tp43316
I5
s(g8337
I42
g8338
Vinsert
p43317
I42
VSimpleName: WrongTypeOfReturnValue
p43318
tp43319
I1
s(g6013
I42
g6014
Vinsert
p43320
I21
VExpressionStatement
p43321
tp43322
I4
s(g2881
I42
g2882
Vinsert
p43323
I42
VSimpleName: actualCount
p43324
tp43325
I3
s(g6403
I42
g6404
Vinsert
p43326
I31
VMethodDeclaration
p43327
tp43328
I1
s(g4714
I42
g4715
Vinsert
p43329
I31
VMethodDeclaration
p43330
tp43331
I2
s(g10257
I42
g10258
Vinsert
p43332
I57
VTypeLiteral
p43333
tp43334
I13
s(g5829
I42
g5830
Vinsert
p43335
I78
VMarkerAnnotation
p43336
tp43337
I1
s(g4784
I42
g4785
Vinsert
p43338
I42
VSimpleName: mock
p43339
tp43340
I3
s(g7817
I42
g7818
Vinsert
p43341
I42
VSimpleName: found
p43342
tp43343
I2
s(g3136
I42
g3137
Vinsert
p43344
I43
VSimpleType: SoftReference
p43345
tp43346
I2
s(g27944
I42
g27945
Vinsert
p43347
I42
VSimpleName: trace
p43348
tp43349
I2
s(g5118
I42
g5119
Vinsert
p43350
I79
VSingleMemberAnnotation
p43351
tp43352
I1
s(g2959
I42
g2960
Vinsert
p43353
I83
VModifier: public
p43354
tp43355
I1
s(g7735
I42
g7736
Vinsert
p43356
I5
VArrayType: String[]
p43357
tp43358
I2
s(g3835
I42
g3836
Vinsert
p43359
I42
VSimpleName: NiceMessagesOnStrictOrderErrorsTest
p43360
tp43361
I1
s(g23735
I42
g23736
Vinsert
p43362
I5
VArrayType: Object[]
p43363
tp43364
I1
s(g5321
I42
g5322
Vinsert
p43365
I42
VSimpleName: GenericMetadataSupport
p43366
tp43367
I1
s(g7817
I42
g7818
Vinsert
p43368
I78
VMarkerAnnotation
p43369
tp43370
I2
s(g3262
I42
g3263
Vinsert
p43371
I41
VReturnStatement
p43372
tp43373
I1
s(g4934
I42
g4935
Vinsert
p43374
I44
VSingleVariableDeclaration
p43375
tp43376
I2
s(g2147
I42
g2148
Vinsert
p43377
I43
VSimpleType: T
p43378
tp43379
I2
s(g17920
I42
g17921
Vinsert
p43380
I40
VQualifiedName: Any.ANY
p43381
tp43382
I4
s(g7263
I42
g7264
Vinsert
p43383
I42
VSimpleName: shouldThrowWhenNullType
p43384
tp43385
I1
s(g598
I42
g599
Vinsert
p43386
I42
VSimpleName: mock
p43387
tp43388
I2
s(g4871
I42
g4872
Vinsert
p43389
I42
VSimpleName: InvocationOnMock
p43390
tp43391
I1
s(g11926
I42
g11927
Vinsert
p43392
I42
VSimpleName: withCodeSourceUrls
p43393
tp43394
I1
s(g2075
I42
g2076
Vinsert
p43395
I78
VMarkerAnnotation
p43396
tp43397
I7
s(g2662
I42
g2663
Vinsert
p43398
I42
VSimpleName: invocation_Void
p43399
tp43400
I1
s(g4755
I42
g4756
Vinsert
p43401
I42
VSimpleName: Test
p43402
tp43403
I1
s(g3748
I42
g3749
Vinsert
p43404
I42
VSimpleName: MockSettingsImpl
p43405
tp43406
I2
s(g3106
I42
g3107
Vinsert
p43407
I42
VSimpleName: markVerified
p43408
tp43409
I1
s(g7379
I42
g7380
Vinsert
p43410
I43
VSimpleType: WithSpy
p43411
tp43412
I2
s(g15506
I42
g15507
Vinsert
p43413
I42
VSimpleName: extraInterface
p43414
tp43415
I1
s(g6116
I42
g6117
Vinsert
p43416
I42
VSimpleName: LinkedHashSet
p43417
tp43418
I1
s(g7587
I42
g7588
Vinsert
p43419
I42
VSimpleName: mockingDetails
p43420
tp43421
I1
s(g4861
I42
g4862
Vinsert
p43422
I42
VSimpleName: Invocation
p43423
tp43424
I1
s(g14454
I42
g14455
Vinsert
p43425
I42
VSimpleName: cause
p43426
tp43427
I1
s(g8205
I42
g8206
Vinsert
p43428
I32
VMethodInvocation
p43429
tp43430
I6
s(g4817
I42
g4818
Vinsert
p43431
I42
VSimpleName: Returns
p43432
tp43433
I1
s(g2949
I42
g2950
Vinsert
p43434
I27
VInfixExpression: &&
p43435
tp43436
I1
s(g2170
I42
g2171
Vinsert
p43437
I42
VSimpleName: getClass
p43438
tp43439
I1
s(g6252
I42
g6253
Vinsert
p43440
I42
VSimpleName: String
p43441
tp43442
I1
s(g20722
I42
g20723
Vinsert
p43443
I8
VBlock
p43444
tp43445
I3
s(g11460
I42
g11461
Vinsert
p43446
I42
VSimpleName: Boolean
p43447
tp43448
I1
s(g1919
I42
g1920
Vinsert
p43449
I42
VSimpleName: getLocationOfStubbing
p43450
tp43451
I1
s(g9053
I42
g9054
Vinsert
p43452
I39
VPrimitiveType: void
p43453
tp43454
I2
s(g6103
I42
g6104
Vinsert
p43455
I7
VAssignment: =
p43456
tp43457
I1
s(g7017
I42
g7018
Vinsert
p43458
I85
VDimension
p43459
tp43460
I3
s(g13028
I42
g13029
Vinsert
p43461
I42
VSimpleName: RunNotifier
p43462
tp43463
I2
s(g10507
I42
g10508
Vinsert
p43464
I42
VSimpleName: Throwable
p43465
tp43466
I1
s(g871
I42
g872
Vinsert
p43467
I25
VIfStatement
p43468
tp43469
I2
s(g12046
I42
g12047
Vinsert
p43470
I34
VNumberLiteral: 0
p43471
tp43472
I1
s(g6882
I42
g6883
Vinsert
p43473
I42
VSimpleName: generator
p43474
tp43475
I1
s(g18914
I42
g18915
Vinsert
p43476
I42
VSimpleName: ThrowsException
p43477
tp43478
I2
s(g7361
I42
g7362
Vinsert
p43479
I41
VReturnStatement
p43480
tp43481
I3
s(g7495
I42
g7496
Vinsert
p43482
I32
VMethodInvocation
p43483
tp43484
I1
s(g7587
I42
g7588
Vinsert
p43485
I43
VSimpleType: Object
p43486
tp43487
I1
s(g6695
I42
g6696
Vinsert
p43488
I42
VSimpleName: mock
p43489
tp43490
I1
s(g10651
I42
g10652
Vinsert
p43491
I42
VSimpleName: mock
p43492
tp43493
I3
s(g1775
I42
g1776
Vinsert
p43494
I42
VSimpleName: throwsException
p43495
tp43496
I1
s(g5461
I42
g5462
Vinsert
p43497
I42
VSimpleName: System
p43498
tp43499
I2
s(g6008
I42
g6009
Vinsert
p43500
I42
VSimpleName: line
p43501
tp43502
I2
s(g1416
I42
g1417
Vinsert
p43503
I42
VSimpleName: String
p43504
tp43505
I1
s(g7939
I42
g7940
Vinsert
p43506
I42
VSimpleName: wantedInvocation
p43507
tp43508
I1
s(g10279
I42
g10280
Vinsert
p43509
I45
VStringLiteral: "listener2"
p43510
tp43511
I1
s(g4981
I42
g4982
Vinsert
p43512
I42
VSimpleName: plugin
p43513
tp43514
I1
s(g14625
I42
g14626
Vinsert
p43515
I42
VSimpleName: invocations
p43516
tp43517
I2
s(g7274
I42
g7275
Vinsert
p43518
I14
VClassInstanceCreation
p43519
tp43520
I2
s(g18268
I42
g18269
Vinsert
p43521
I43
VSimpleType: LinkedList
p43522
tp43523
I2
s(g9734
I42
g9735
Vinsert
p43524
I45
VStringLiteral: "' of type '"
p43525
tp43526
I1
s(g3777
I42
g3778
Vinsert
p43527
I42
VSimpleName: onMockCreated
p43528
tp43529
I1
s(g9079
I42
g9080
Vinsert
p43530
I43
VSimpleType: PrintSettings
p43531
tp43532
I2
s(g5305
I42
g5306
Vinsert
p43533
I74
VParameterizedType: MethodList<?>
p43534
tp43535
I1
s(g9339
I42
g9340
Vinsert
p43536
I42
VSimpleName: will
p43537
tp43538
I1
s(g8478
I42
g8479
Vinsert
p43539
I42
VSimpleName: InstanceFactory
p43540
tp43541
I2
s(g174
I42
g175
Vinsert
p43542
I42
VSimpleName: anyIterableOf
p43543
tp43544
I1
s(g916
I42
g917
Vinsert
p43545
I43
VSimpleType: Annotation
p43546
tp43547
I1
s(g4295
I42
g4296
Vinsert
p43548
I5
VArrayType: Object[]
p43549
tp43550
I1
s(g10465
I42
g10466
Vinsert
p43551
I42
VSimpleName: it
p43552
tp43553
I3
s(g7321
I42
g7322
Vinsert
p43554
I33
VNullLiteral
p43555
tp43556
I1
s(g22086
I42
g22087
Vinsert
p43557
I45
VStringLiteral: "Using inline mocks, it is possible to spy on private types"
p43558
tp43559
I1
s(g1219
I42
g1220
Vinsert
p43560
I42
VSimpleName: stubbingFound
p43561
tp43562
I1
s(g12326
I42
g12327
Vinsert
p43563
I42
VSimpleName: getAll
p43564
tp43565
I1
s(g18096
I42
g18097
Vinsert
p43566
I42
VSimpleName: resolveTypeInstances
p43567
tp43568
I2
s(g22800
I42
g22801
Vinsert
p43569
I45
VStringLiteral: "  types["
p43570
tp43571
I1
s(g7790
I42
g7791
Vinsert
p43572
I60
VVariableDeclarationStatement
p43573
tp43574
I1
s(g377
I42
g378
Vinsert
p43575
I83
VModifier: public
p43576
tp43577
I2
s(g6877
I42
g6878
Vinsert
p43578
I42
VSimpleName: size
p43579
tp43580
I1
s(g2398
I42
g2399
Vinsert
p43581
I39
VPrimitiveType: boolean
p43582
tp43583
I2
s(g9196
I42
g9197
Vinsert
p43584
I83
VModifier: public
p43585
tp43586
I10
s(g19085
I42
g19086
Vinsert
p43587
I43
VSimpleType: MockHandler
p43588
tp43589
I2
s(g1092
I42
g1093
Vinsert
p43590
I42
VSimpleName: invocations
p43591
tp43592
I6
s(g5138
I42
g5139
Vinsert
p43593
I42
VSimpleName: SignatureVisitor
p43594
tp43595
I1
s(g4986
I42
g4987
Vinsert
p43596
I45
VStringLiteral: "cheddar"
p43597
tp43598
I1
s(g32345
I42
g32346
Vinsert
p43599
I42
VSimpleName: create
p43600
tp43601
I1
s(g5169
I42
g5170
Vinsert
p43602
I74
VParameterizedType: LinkedList<Object>
p43603
tp43604
I1
s(g7619
I42
g7620
Vinsert
p43605
I42
VSimpleName: emailService
p43606
tp43607
I1
s(g5408
I42
g5409
Vinsert
p43608
I22
VFieldAccess
p43609
tp43610
I1
s(g2105
I42
g2106
Vinsert
p43611
I21
VExpressionStatement
p43612
tp43613
I1
s(g1627
I42
g1628
Vinsert
p43614
I14
VClassInstanceCreation
p43615
tp43616
I1
s(g11263
I42
g11264
Vinsert
p43617
I22
VFieldAccess
p43618
tp43619
I1
s(g16897
I42
g16898
Vinsert
p43620
I31
VMethodDeclaration
p43621
tp43622
I2
s(g13028
I42
g13029
Vinsert
p43623
I83
VModifier: final
p43624
tp43625
I2
s(g7274
I42
g7275
Vinsert
p43626
I42
VSimpleName: VerificationInOrderFailure
p43627
tp43628
I1
s(g16053
I42
g16054
Vinsert
p43629
I43
VSimpleType: NewOngoingStubbing
p43630
tp43631
I3
s(g2866
I42
g2867
Vinsert
p43632
I42
VSimpleName: index
p43633
tp43634
I1
s(g9105
I42
g9106
Vinsert
p43635
I43
VSimpleType: String
p43636
tp43637
I1
s(g10368
I42
g10369
Vinsert
p43638
I43
VSimpleType: Boolean
p43639
tp43640
I1
s(g9344
I42
g9345
Vinsert
p43641
I8
VBlock
p43642
tp43643
I3
s(g7441
I42
g7442
Vinsert
p43644
I42
VSimpleName: Description
p43645
tp43646
I1
s(g5007
I42
g5008
Vinsert
p43647
I37
VPostfixExpression: ++
p43648
tp43649
I1
s(g12606
I42
g12607
Vinsert
p43650
I43
VSimpleType: VerificationListener
p43651
tp43652
I1
s(g18497
I42
g18498
Vinsert
p43653
I42
VSimpleName: verifyNoMoreInteractions
p43654
tp43655
I2
s(g16579
I42
g16580
Vinsert
p43656
I43
VSimpleType: SyncingPrinter
p43657
tp43658
I2
s(g4474
I42
g4475
Vinsert
p43659
I42
VSimpleName: invocationContainer
p43660
tp43661
I1
s(g5768
I42
g5769
Vinsert
p43662
I42
VSimpleName: A
p43663
tp43664
I1
s(g2200
I42
g2201
Vinsert
p43665
I42
VSimpleName: canLoadJunitClass
p43666
tp43667
I1
s(g109
I42
g110
Vinsert
p43668
I79
VSingleMemberAnnotation
p43669
tp43670
I1
s(g7564
I42
g7565
Vinsert
p43671
I40
VQualifiedName: org.junit.Assert.assertNull
p43672
tp43673
I1
s(g1302
I42
g1303
Vinsert
p43674
I34
VNumberLiteral: 2
p43675
tp43676
I1
s(g4745
I42
g4746
Vinsert
p43677
I43
VSimpleType: MockitoAnnotationsMockAnnotationProcessor
p43678
tp43679
I1
s(g956
I42
g957
Vinsert
p43680
I42
VSimpleName: verifyNoMoreInteractions
p43681
tp43682
I1
s(g4585
I42
g4586
Vinsert
p43683
I42
VSimpleName: invocationMarker
p43684
tp43685
I4
s(g3961
I42
g3962
Vinsert
p43686
I45
VStringLiteral: "Unnecessary stubbings detected.\u005cn"
p43687
tp43688
I1
s(g2286
I42
g2287
Vinsert
p43689
I83
VModifier: static
p43690
tp43691
I1
s(g2796
I42
g2797
Vinsert
p43692
I78
VMarkerAnnotation
p43693
tp43694
I1
s(g518
I42
g519
Vinsert
p43695
I42
VSimpleName: Throwable
p43696
tp43697
I2
s(g1332
I42
g1333
Vinsert
p43698
I66
VTextElement:  2.0
p43699
tp43700
I2
s(g1110
I42
g1111
Vinsert
p43701
I61
VWhileStatement
p43702
tp43703
I1
s(g13493
I42
g13494
Vinsert
p43704
I32
VMethodInvocation
p43705
tp43706
I12
s(g1563
I42
g1564
Vinsert
p43707
I42
VSimpleName: ExpectedInvocation
p43708
tp43709
I1
s(g10740
I42
g10741
Vinsert
p43710
I42
VSimpleName: unused
p43711
tp43712
I2
s(g8275
I42
g8276
Vinsert
p43713
I42
VSimpleName: genericsNest
p43714
tp43715
I1
s(g4194
I42
g4195
Vinsert
p43716
I43
VSimpleType: Runnable
p43717
tp43718
I1
s(g1503
I42
g1504
Vinsert
p43719
I42
VSimpleName: description
p43720
tp43721
I1
s(Vinsert
p43722
I42
VSimpleName: verify
p43723
Vinsert
p43724
I42
VSimpleName: shouldVerifyStrictlyMockTwoWhenThreeTimesUsed
p43725
tp43726
I1
s(g22220
I42
g22221
Vinsert
p43727
I42
VSimpleName: r
p43728
tp43729
I2
s(g4148
I42
g4149
Vinsert
p43730
I43
VSimpleType: String
p43731
tp43732
I1
s(g2611
I42
g2612
Vinsert
p43733
I42
VSimpleName: accept
p43734
tp43735
I1
s(g760
I42
g761
Vinsert
p43736
I43
VSimpleType: DebuggingInfo
p43737
tp43738
I2
s(g19469
I42
g19470
Vinsert
p43739
I43
VSimpleType: List
p43740
tp43741
I1
s(g11791
I42
g11792
Vinsert
p43742
I8
VBlock
p43743
tp43744
I1
s(g12066
I42
g12067
Vinsert
p43745
I42
VSimpleName: e
p43746
tp43747
I50
s(g5892
I42
g5893
Vinsert
p43748
I40
VQualifiedName: org.mockito.internal.invocation.Invocation
p43749
tp43750
I1
s(g2973
I42
g2974
Vinsert
p43751
I42
VSimpleName: validateClass
p43752
tp43753
I1
s(g5690
I42
g5691
Vinsert
p43754
I27
VInfixExpression: ==
p43755
tp43756
I1
s(g16513
I42
g16514
Vinsert
p43757
I45
VStringLiteral: "Unable to create mock instance of type '"
p43758
tp43759
I2
s(g9408
I42
g9409
Vinsert
p43760
I59
VVariableDeclarationFragment
p43761
tp43762
I1
s(g16189
I42
g16190
Vinsert
p43763
I39
VPrimitiveType: void
p43764
tp43765
I1
s(g7091
I42
g7092
Vinsert
p43766
I43
VSimpleType: Location
p43767
tp43768
I1
s(g2531
I42
g2532
Vinsert
p43769
I39
VPrimitiveType: void
p43770
tp43771
I1
s(g7752
I42
g7753
Vinsert
p43772
I42
VSimpleName: assertEquals
p43773
tp43774
I1
s(g10921
I42
g10922
Vinsert
p43775
I44
VSingleVariableDeclaration
p43776
tp43777
I3
s(g12574
I42
g12575
Vinsert
p43778
I43
VSimpleType: AnnotationEngine
p43779
tp43780
I1
s(g4624
I42
g4625
Vinsert
p43781
I42
VSimpleName: RunNotifier
p43782
tp43783
I1
s(g164
I42
g165
Vinsert
p43784
I42
VSimpleName: count
p43785
tp43786
I1
s(g3575
I42
g3576
Vinsert
p43787
I42
VSimpleName: matchers
p43788
tp43789
I2
s(g4523
I42
g4524
Vinsert
p43790
I70
VEnhancedForStatement
p43791
tp43792
I1
s(g6877
I42
g6878
Vinsert
p43793
I32
VMethodInvocation
p43794
tp43795
I3
s(g2429
I42
g2430
Vinsert
p43796
I39
VPrimitiveType: void
p43797
tp43798
I2
s(g1982
I42
g1983
Vinsert
p43799
I42
VSimpleName: c
p43800
tp43801
I1
s(g19066
I42
g19067
Vinsert
p43802
I42
VSimpleName: instance
p43803
tp43804
I1
s(g25340
I42
g25341
Vinsert
p43805
I42
VSimpleName: assertThat
p43806
tp43807
I1
s(g6606
I42
g6607
Vinsert
p43808
I42
VSimpleName: MockitoListener
p43809
tp43810
I1
s(g10319
I42
g10320
Vinsert
p43811
I42
VSimpleName: FileInputStream
p43812
tp43813
I2
s(g608
I42
g609
Vinsert
p43814
I27
VInfixExpression: !=
p43815
tp43816
I1
s(g2606
I42
g2607
Vinsert
p43817
I32
VMethodInvocation
p43818
tp43819
I23
s(g12427
I42
g12428
Vinsert
p43820
I33
VNullLiteral
p43821
tp43822
I1
s(g10081
I42
g10082
Vinsert
p43823
I7
VAssignment: =
p43824
tp43825
I1
s(g2439
I42
g2440
Vinsert
p43826
I60
VVariableDeclarationStatement
p43827
tp43828
I1
s(g7129
I42
g7130
Vinsert
p43829
I43
VSimpleType: RuntimeException
p43830
tp43831
I1
s(g5256
I42
g5257
Vinsert
p43832
I48
VSuperMethodInvocation
p43833
tp43834
I1
s(g681
I42
g682
Vinsert
p43835
I16
VConditionalExpression
p43836
tp43837
I1
s(g7129
I42
g7130
Vinsert
p43838
I43
VSimpleType: Exception
p43839
tp43840
I1
s(g448
I42
g449
Vinsert
p43841
I42
VSimpleName: isTrue
p43842
tp43843
I1
s(g3565
I42
g3566
Vinsert
p43844
I83
VModifier: private
p43845
tp43846
I1
s(g6791
I42
g6792
Vinsert
p43847
I42
VSimpleName: String
p43848
tp43849
I2
s(g24736
I42
g24737
Vinsert
p43850
I21
VExpressionStatement
p43851
tp43852
I7
s(g19662
I42
g19663
Vinsert
p43853
I83
VModifier: final
p43854
tp43855
I4
s(g4409
I42
g4410
Vinsert
p43856
I42
VSimpleName: times
p43857
tp43858
I1
s(g991
I42
g992
Vinsert
p43859
I33
VNullLiteral
p43860
tp43861
I1
s(g5544
I42
g5545
Vinsert
p43862
I42
VSimpleName: objenesis
p43863
tp43864
I1
s(g7190
I42
g7191
Vinsert
p43865
I43
VSimpleType: String
p43866
tp43867
I1
s(g15147
I42
g15148
Vinsert
p43868
I42
VSimpleName: Arrays
p43869
tp43870
I2
s(g9747
I42
g9748
Vinsert
p43871
I42
VSimpleName: message
p43872
tp43873
I1
s(g8095
I42
g8096
Vinsert
p43874
I42
VSimpleName: exceptionCauseMessageIfAvailable
p43875
tp43876
I1
s(g3126
I42
g3127
Vinsert
p43877
I42
VSimpleName: impl
p43878
tp43879
I2
s(g23727
I42
g23728
Vinsert
p43880
I73
VTypeParameter
p43881
tp43882
I1
s(g12354
I42
g12355
Vinsert
p43883
I43
VSimpleType: MethodVisitor
p43884
tp43885
I1
s(g11768
I42
g11769
Vinsert
p43886
I9
VBooleanLiteral: false
p43887
tp43888
I1
s(g6082
I42
g6083
Vinsert
p43889
I42
VSimpleName: e
p43890
tp43891
I4
s(g1800
I42
g1801
Vinsert
p43892
I43
VSimpleType: ScenarioPrinter
p43893
tp43894
I2
s(g1327
I42
g1328
Vinsert
p43895
I36
VParenthesizedExpression
p43896
tp43897
I1
s(g3242
I42
g3243
Vinsert
p43898
I42
VSimpleName: v
p43899
tp43900
I1
s(g10963
I42
g10964
Vinsert
p43901
I42
VSimpleName: List
p43902
tp43903
I2
s(g5897
I42
g5898
Vinsert
p43904
I5
VArrayType: String[]
p43905
tp43906
I2
s(g1914
I42
g1915
Vinsert
p43907
I32
VMethodInvocation
p43908
tp43909
I8
s(g2934
I42
g2935
Vinsert
p43910
I21
VExpressionStatement
p43911
tp43912
I7
s(g9403
I42
g9404
Vinsert
p43913
I45
VStringLiteral: "2"
p43914
tp43915
I2
s(g5300
I42
g5301
Vinsert
p43916
I8
VBlock
p43917
tp43918
I18
s(g35705
I42
g35706
Vinsert
p43919
I42
VSimpleName: getArguments
p43920
tp43921
I1
s(g35047
I42
g35048
Vinsert
p43922
I42
VSimpleName: assertEquals
p43923
tp43924
I7
s(g11749
I42
g11750
Vinsert
p43925
I42
VSimpleName: ObjectMethodsOverriddenSubclass
p43926
tp43927
I1
s(g4595
I42
g4596
Vinsert
p43928
I41
VReturnStatement
p43929
tp43930
I1
s(g4474
I42
g4475
Vinsert
p43931
I42
VSimpleName: InvocationContainer
p43932
tp43933
I1
s(g2036
I42
g2037
Vinsert
p43934
I42
VSimpleName: contains
p43935
tp43936
I2
s(g7451
I42
g7452
Vinsert
p43937
I42
VSimpleName: started
p43938
tp43939
I1
s(g10889
I42
g10890
Vinsert
p43940
I42
VSimpleName: typeVariable
p43941
tp43942
I4
s(g7730
I42
g7731
Vinsert
p43943
I8
VBlock
p43944
tp43945
I2
s(g941
I42
g942
Vinsert
p43946
I42
VSimpleName: cachingMockBytecodeGenerator
p43947
tp43948
I1
s(g23292
I42
g23293
Vinsert
p43949
I43
VSimpleType: MockReturnValues
p43950
tp43951
I2
s(g7446
I42
g7447
Vinsert
p43952
I34
VNumberLiteral: 0
p43953
tp43954
I1
s(g4853
I42
g4854
Vinsert
p43955
I8
VBlock
p43956
tp43957
I2
s(g10470
I42
g10471
Vinsert
p43958
I43
VSimpleType: Invocation
p43959
tp43960
I1
s(g2190
I42
g2191
Vinsert
p43961
I42
VSimpleName: getArgumentAt
p43962
tp43963
I1
s(g3680
I42
g3681
Vinsert
p43964
I42
VSimpleName: ArrayList
p43965
tp43966
I4
s(g4335
I42
g4336
Vinsert
p43967
I21
VExpressionStatement
p43968
tp43969
I2
s(g1184
I42
g1185
Vinsert
p43970
I42
VSimpleName: approximateSize
p43971
tp43972
I1
s(g1327
I42
g1328
Vinsert
p43973
I40
VQualifiedName: MockUtil.creationValidator
p43974
tp43975
I2
s(g56
I42
g57
Vinsert
p43976
I43
VSimpleType: Exception
p43977
tp43978
I1
s(g3073
I42
g3074
Vinsert
p43979
I42
VSimpleName: verboseMatchers
p43980
tp43981
I1
s(g9105
I42
g9106
Vinsert
p43982
I42
VSimpleName: String
p43983
tp43984
I1
s(g16283
I42
g16284
Vinsert
p43985
I42
VSimpleName: shouldKnowLastCapturedValue
p43986
tp43987
I1
s(g6658
I42
g6659
Vinsert
p43988
I42
VSimpleName: isEqualTo
p43989
tp43990
I3
s(g4106
I42
g4107
Vinsert
p43991
I21
VExpressionStatement
p43992
tp43993
I2
s(g906
I42
g907
Vinsert
p43994
I42
VSimpleName: MockFeatures
p43995
tp43996
I1
s(g31582
I42
g31583
Vinsert
p43997
I42
VSimpleName: UndesiredInvocation
p43998
tp43999
I4
s(g11066
I42
g11067
Vinsert
p44000
I43
VSimpleType: TraceBuilder
p44001
tp44002
I3
s(g3078
I42
g3079
Vinsert
p44003
I42
VSimpleName: vmName1
p44004
tp44005
I1
s(g1568
I42
g1569
Vinsert
p44006
I12
VCatchClause
p44007
tp44008
I1
s(g8082
I42
g8083
Vinsert
p44009
I8
VBlock
p44010
tp44011
I2
s(g1449
I42
g1450
Vinsert
p44012
I42
VSimpleName: argument
p44013
tp44014
I1
s(g7213
I42
g7214
Vinsert
p44015
I42
VSimpleName: Returns
p44016
tp44017
I1
s(g9460
I42
g9461
Vinsert
p44018
I42
VSimpleName: type
p44019
tp44020
I4
s(g3229
I42
g3230
Vinsert
p44021
I42
VSimpleName: After
p44022
tp44023
I1
s(g7321
I42
g7322
Vinsert
p44024
I42
VSimpleName: ArrayUtils
p44025
tp44026
I2
s(g14972
I42
g14973
Vinsert
p44027
I43
VSimpleType: Exception
p44028
tp44029
I1
s(g5138
I42
g5139
Vinsert
p44030
I59
VVariableDeclarationFragment
p44031
tp44032
I1
s(g14972
I42
g14973
Vinsert
p44033
I32
VMethodInvocation
p44034
tp44035
I5
s(g6647
I42
g6648
Vinsert
p44036
I40
VQualifiedName: commit.author
p44037
tp44038
I1
s(g4600
I42
g4601
Vinsert
p44039
I42
VSimpleName: Ignore
p44040
tp44041
I1
s(g15841
I42
g15842
Vinsert
p44042
I42
VSimpleName: getCallbacksSetter
p44043
tp44044
I1
s(g851
I42
g852
Vinsert
p44045
I42
VSimpleName: Before
p44046
tp44047
I1
s(g8288
I42
g8289
Vinsert
p44048
I43
VSimpleType: Throwable
p44049
tp44050
I1
s(g2978
I42
g2979
Vinsert
p44051
I43
VSimpleType: String
p44052
tp44053
I7
s(g6669
I42
g6670
Vinsert
p44054
I39
VPrimitiveType: void
p44055
tp44056
I1
s(g9950
I42
g9951
Vinsert
p44057
I42
VSimpleName: isNull
p44058
tp44059
I1
s(g31
I42
g32
Vinsert
p44060
I42
VSimpleName: Exception
p44061
tp44062
I2
s(g1482
I42
g1483
Vinsert
p44063
I32
VMethodInvocation
p44064
tp44065
I1
s(g2026
I42
g2027
Vinsert
p44066
I42
VSimpleName: arg
p44067
tp44068
I1
s(g4038
I42
g4039
Vinsert
p44069
I42
VSimpleName: append
p44070
tp44071
I1
s(g8894
I42
g8895
Vinsert
p44072
I8
VBlock
p44073
tp44074
I1
s(g9950
I42
g9951
Vinsert
p44075
I21
VExpressionStatement
p44076
tp44077
I1
s(g2575
I42
g2576
Vinsert
p44078
I14
VClassInstanceCreation
p44079
tp44080
I2
s(g6510
I42
g6511
Vinsert
p44081
I42
VSimpleName: Collections
p44082
tp44083
I1
s(g1838
I42
g1839
Vinsert
p44084
I42
VSimpleName: problem
p44085
tp44086
I1
s(g5834
I42
g5835
Vinsert
p44087
I27
VInfixExpression: ==
p44088
tp44089
I1
s(g7030
I42
g7031
Vinsert
p44090
I43
VSimpleType: String
p44091
tp44092
I3
s(g3570
I42
g3571
Vinsert
p44093
I43
VSimpleType: ReturnsGenericDeepStubs
p44094
tp44095
I1
s(g22136
I42
g22137
Vinsert
p44096
I54
VTryStatement
p44097
tp44098
I1
s(g11404
I42
g11405
Vinsert
p44099
I11
VCastExpression
p44100
tp44101
I4
s(g10987
I42
g10988
Vinsert
p44102
I42
VSimpleName: call
p44103
tp44104
I1
s(g219
I42
g220
Vinsert
p44105
I76
VWildcardType: ?
p44106
tp44107
I6
s(g5752
I42
g5753
Vinsert
p44108
I42
VSimpleName: Test
p44109
tp44110
I1
s(g1568
I42
g1569
Vinsert
p44111
I43
VSimpleType: RuntimeException
p44112
tp44113
I1
s(g12066
I42
g12067
Vinsert
p44114
I12
VCatchClause
p44115
tp44116
I25
s(g4001
I42
g4002
Vinsert
p44117
I21
VExpressionStatement
p44118
tp44119
I2
s(g11645
I42
g11646
Vinsert
p44120
I42
VSimpleName: expected
p44121
tp44122
I1
s(g6212
I42
g6213
Vinsert
p44123
I43
VSimpleType: Object
p44124
tp44125
I2
s(g7195
I42
g7196
Vinsert
p44126
I42
VSimpleName: counter
p44127
tp44128
I1
s(g8778
I42
g8779
Vinsert
p44129
I42
VSimpleName: FinalClass
p44130
tp44131
I1
s(g7898
I42
g7899
Vinsert
p44132
I42
VSimpleName: toString
p44133
tp44134
I1
s(g7785
I42
g7786
Vinsert
p44135
I42
VSimpleName: m2
p44136
tp44137
I1
s(g1327
I42
g1328
Vinsert
p44138
I42
VSimpleName: assertFalse
p44139
tp44140
I1
s(Vinsert
p44141
I42
VSimpleName: size
p44142
Vinsert
p44143
I42
VSimpleName: actual
p44144
tp44145
I2
s(g3943
I42
g3944
Vinsert
p44146
I40
VQualifiedName: java.util.Arrays
p44147
tp44148
I1
s(g22194
I42
g22195
Vinsert
p44149
I42
VSimpleName: mock
p44150
tp44151
I5
s(g2753
I42
g2754
Vinsert
p44152
I42
VSimpleName: testName
p44153
tp44154
I1
s(g13596
I42
g13597
Vinsert
p44155
I43
VSimpleType: Class
p44156
tp44157
I1
s(g17987
I42
g17988
Vinsert
p44158
I42
VSimpleName: t
p44159
tp44160
I2
s(g613
I42
g614
Vinsert
p44161
I43
VSimpleType: WrongTypeOfReturnValue
p44162
tp44163
I1
s(g1896
I42
g1897
Vinsert
p44164
I45
VStringLiteral: "static_b"
p44165
tp44166
I2
s(g14824
I42
g14825
Vinsert
p44167
I43
VSimpleType: String
p44168
tp44169
I1
s(g911
I42
g912
Vinsert
p44170
I42
VSimpleName: twoArgumentMethod
p44171
tp44172
I1
s(g8528
I42
g8529
Vinsert
p44173
I42
VSimpleName: settings
p44174
tp44175
I1
s(g831
I42
g832
Vinsert
p44176
I25
VIfStatement
p44177
tp44178
I1
s(g7049
I42
g7050
Vinsert
p44179
I42
VSimpleName: ObjectLikeInterface
p44180
tp44181
I1
s(g30882
I42
g30883
Vinsert
p44182
I42
VSimpleName: counter
p44183
tp44184
I1
s(g2139
I42
g2140
Vinsert
p44185
I21
VExpressionStatement
p44186
tp44187
I1
s(g6859
I42
g6860
Vinsert
p44188
I42
VSimpleName: SimpleRunner
p44189
tp44190
I1
s(g11404
I42
g11405
Vinsert
p44191
I42
VSimpleName: printer
p44192
tp44193
I1
s(g24669
I42
g24670
Vinsert
p44194
I42
VSimpleName: String
p44195
tp44196
I1
s(g2954
I42
g2955
Vinsert
p44197
I43
VSimpleType: MethodsImpl
p44198
tp44199
I1
s(g1426
I42
g1427
Vinsert
p44200
I57
VTypeLiteral
p44201
tp44202
I1
s(g3766
I42
g3767
Vinsert
p44203
I42
VSimpleName: objenesisClassLoader
p44204
tp44205
I2
s(g13881
I42
g13882
Vinsert
p44206
I5
VArrayType: String[]
p44207
tp44208
I2
s(g7248
I42
g7249
Vinsert
p44209
I85
VDimension
p44210
tp44211
I1
s(g1838
I42
g1839
Vinsert
p44212
I43
VSimpleType: MockCollector
p44213
tp44214
I2
s(g5599
I42
g5600
Vinsert
p44215
I42
VSimpleName: text
p44216
tp44217
I1
s(g10794
I42
g10795
Vinsert
p44218
I8
VBlock
p44219
tp44220
I2
s(g7416
I42
g7417
Vinsert
p44221
I14
VClassInstanceCreation
p44222
tp44223
I1
s(g7906
I42
g7907
Vinsert
p44224
I41
VReturnStatement
p44225
tp44226
I1
s(g252
I42
g253
Vinsert
p44227
I42
VSimpleName: List
p44228
tp44229
I1
s(g4401
I42
g4402
Vinsert
p44230
I45
VStringLiteral: "Williams"
p44231
tp44232
I1
s(g5237
I42
g5238
Vinsert
p44233
I42
VSimpleName: MockitoFramework
p44234
tp44235
I1
s(g247
I42
g248
Vinsert
p44236
I39
VPrimitiveType: boolean
p44237
tp44238
I1
s(g2490
I42
g2491
Vinsert
p44239
I39
VPrimitiveType: int
p44240
tp44241
I1
s(g463
I42
g464
Vinsert
p44242
I8
VBlock
p44243
tp44244
I1
s(g2844
I42
g2845
Vinsert
p44245
I42
VSimpleName: argumentMatchingTool
p44246
tp44247
I2
s(g12193
I42
g12194
Vinsert
p44248
I42
VSimpleName: name
p44249
tp44250
I2
s(g8757
I42
g8758
Vinsert
p44251
I76
VWildcardType: ?
p44252
tp44253
I1
s(g2398
I42
g2399
Vinsert
p44254
I31
VMethodDeclaration
p44255
tp44256
I2
s(g13980
I42
g13981
Vinsert
p44257
I74
VParameterizedType: MockFeatures<T>
p44258
tp44259
I1
s(g1169
I42
g1170
Vinsert
p44260
I44
VSingleVariableDeclaration
p44261
tp44262
I3
s(g3460
I42
g3461
Vinsert
p44263
I42
VSimpleName: testFinished
p44264
tp44265
I1
s(g18966
I42
g18967
Vinsert
p44266
I42
VSimpleName: testInstance
p44267
tp44268
I2
s(g99
I42
g100
Vinsert
p44269
I42
VSimpleName: Override
p44270
tp44271
I2
s(g503
I42
g504
Vinsert
p44272
I42
VSimpleName: Invocation
p44273
tp44274
I3
s(g5789
I42
g5790
Vinsert
p44275
I7
VAssignment: =
p44276
tp44277
I1
s(g1578
I42
g1579
Vinsert
p44278
I21
VExpressionStatement
p44279
tp44280
I3
s(g1843
I42
g1844
Vinsert
p44281
I42
VSimpleName: Object
p44282
tp44283
I6
s(g11370
I42
g11371
Vinsert
p44284
I65
VTagElement: @link
p44285
tp44286
I1
s(g10265
I42
g10266
Vinsert
p44287
I74
VParameterizedType: Class<T>
p44288
tp44289
I2
s(g3091
I42
g3092
Vinsert
p44290
I43
VSimpleType: InvocationsPrinter
p44291
tp44292
I1
s(g760
I42
g761
Vinsert
p44293
I42
VSimpleName: Exception
p44294
tp44295
I1
s(g8205
I42
g8206
Vinsert
p44296
I42
VSimpleName: Throwable
p44297
tp44298
I6
s(g23292
I42
g23293
Vinsert
p44299
I21
VExpressionStatement
p44300
tp44301
I2
s(g4986
I42
g4987
Vinsert
p44302
I42
VSimpleName: HardCodedReturnValues
p44303
tp44304
I1
s(g3488
I42
g3489
Vinsert
p44305
I83
VModifier: public
p44306
tp44307
I54
s(g9196
I42
g9197
Vinsert
p44308
I43
VSimpleType: Invocation
p44309
tp44310
I12
s(g4745
I42
g4746
Vinsert
p44311
I43
VSimpleType: CaptorAnnotationProcessor
p44312
tp44313
I1
s(g2998
I42
g2999
Vinsert
p44314
I39
VPrimitiveType: void
p44315
tp44316
I1
s(g8062
I42
g8063
Vinsert
p44317
I59
VVariableDeclarationFragment
p44318
tp44319
I1
s(g1760
I42
g1761
Vinsert
p44320
I43
VSimpleType: FieldSetter
p44321
tp44322
I1
s(g13186
I42
g13187
Vinsert
p44323
I60
VVariableDeclarationStatement
p44324
tp44325
I2
s(g420
I42
g421
Vinsert
p44326
I44
VSingleVariableDeclaration
p44327
tp44328
I1
s(g4038
I42
g4039
Vinsert
p44329
I27
VInfixExpression: ==
p44330
tp44331
I1
s(g21977
I42
g21978
Vinsert
p44332
I43
VSimpleType: Date
p44333
tp44334
I2
s(g12000
I42
g12001
Vinsert
p44335
I43
VSimpleType: JUnitResultAssert
p44336
tp44337
I1
s(g3787
I42
g3788
Vinsert
p44338
I42
VSimpleName: Class
p44339
tp44340
I1
s(g252
I42
g253
Vinsert
p44341
I60
VVariableDeclarationStatement
p44342
tp44343
I1
s(g12933
I42
g12934
Vinsert
p44344
I42
VSimpleName: fail
p44345
tp44346
I1
s(g89
I42
g90
Vinsert
p44347
I60
VVariableDeclarationStatement
p44348
tp44349
I1
s(g12370
I42
g12371
Vinsert
p44350
I42
VSimpleName: realMethod
p44351
tp44352
I1
s(g16314
I42
g16315
Vinsert
p44353
I61
VWhileStatement
p44354
tp44355
I1
s(g11370
I42
g11371
Vinsert
p44356
I66
VTextElement: This implementation of ReturnValues makes unstubbed methods <b>return SmartNulls instead of nulls</b>.
p44357
tp44358
I1
s(g5512
I42
g5513
Vinsert
p44359
I13
VCharacterLiteral: '1'
p44360
tp44361
I1
s(g1352
I42
g1353
Vinsert
p44362
I8
VBlock
p44363
tp44364
I5
s(g9105
I42
g9106
Vinsert
p44365
I42
VSimpleName: identifier
p44366
tp44367
I1
s(g1665
I42
g1666
Vinsert
p44368
I42
VSimpleName: classToMock
p44369
tp44370
I1
s(g11691
I42
g11692
Vinsert
p44371
I40
VQualifiedName: ClassImposterizer.INSTANCE
p44372
tp44373
I2
s(g9105
I42
g9106
Vinsert
p44374
I42
VSimpleName: MockMethodDispatcher
p44375
tp44376
I1
s(g13053
I42
g13054
Vinsert
p44377
I43
VSimpleType: Serializable
p44378
tp44379
I1
s(g12318
I42
g12319
Vinsert
p44380
I42
VSimpleName: assertNotContains
p44381
tp44382
I1
s(g3856
I42
g3857
Vinsert
p44383
I32
VMethodInvocation
p44384
tp44385
I3
s(g1619
I42
g1620
Vinsert
p44386
I8
VBlock
p44387
tp44388
I6
s(g20213
I42
g20214
Vinsert
p44389
I42
VSimpleName: map
p44390
tp44391
I1
s(g3935
I42
g3936
Vinsert
p44392
I43
VSimpleType: InstantiatorProvider
p44393
tp44394
I1
s(g846
I42
g847
Vinsert
p44395
I42
VSimpleName: location
p44396
tp44397
I3
s(g851
I42
g852
Vinsert
p44398
I21
VExpressionStatement
p44399
tp44400
I1
s(g4072
I42
g4073
Vinsert
p44401
I32
VMethodInvocation
p44402
tp44403
I11
s(g8682
I42
g8683
Vinsert
p44404
I42
VSimpleName: subMatchersCount
p44405
tp44406
I1
s(g30078
I42
g30079
Vinsert
p44407
I42
VSimpleName: toStringWithArgumentTypes
p44408
tp44409
I1
s(g1701
I42
g1702
Vinsert
p44410
I42
VSimpleName: andReturn
p44411
tp44412
I2
s(g8696
I42
g8697
Vinsert
p44413
I42
VSimpleName: invocation
p44414
tp44415
I1
s(g1069
I42
g1070
Vinsert
p44416
I21
VExpressionStatement
p44417
tp44418
I1
s(g17500
I42
g17501
Vinsert
p44419
I42
VSimpleName: assertTrue
p44420
tp44421
I1
s(g1259
I42
g1260
Vinsert
p44422
I34
VNumberLiteral: 1
p44423
tp44424
I1
s(g5934
I42
g5935
Vinsert
p44425
I42
VSimpleName: getLastInvocationLocation
p44426
tp44427
I1
s(g5950
I42
g5951
Vinsert
p44428
I27
VInfixExpression: ||
p44429
tp44430
I1
s(g8642
I42
g8643
Vinsert
p44431
I40
VQualifiedName: Collections.EMPTY_LIST
p44432
tp44433
I1
s(g3204
I42
g3205
Vinsert
p44434
I43
VSimpleType: Class
p44435
tp44436
I8
s(g2526
I42
g2527
Vinsert
p44437
I25
VIfStatement
p44438
tp44439
I2
s(g11206
I42
g11207
Vinsert
p44440
I42
VSimpleName: invocation
p44441
tp44442
I1
s(g282
I42
g283
Vinsert
p44443
I5
VArrayType: Object[]
p44444
tp44445
I1
s(g9515
I42
g9516
Vinsert
p44446
I42
VSimpleName: i
p44447
tp44448
I1
s(g573
I42
g574
Vinsert
p44449
I44
VSingleVariableDeclaration
p44450
tp44451
I1
s(g704
I42
g705
Vinsert
p44452
I42
VSimpleName: InvocationTargetException
p44453
tp44454
I1
s(g3730
I42
g3731
Vinsert
p44455
I42
VSimpleName: ofThisVm
p44456
tp44457
I1
s(g4853
I42
g4854
Vinsert
p44458
I52
VThisExpression
p44459
tp44460
I1
s(g1039
I42
g1040
Vinsert
p44461
I43
VSimpleType: Field
p44462
tp44463
I1
s(g17814
I42
g17815
Vinsert
p44464
I42
VSimpleName: SelfDescribing
p44465
tp44466
I1
s(g976
I42
g977
Vinsert
p44467
I42
VSimpleName: returnValueFor
p44468
tp44469
I2
s(g4305
I42
g4306
Vinsert
p44470
I83
VModifier: public
p44471
tp44472
I5
s(g10672
I42
g10673
Vinsert
p44473
I44
VSingleVariableDeclaration
p44474
tp44475
I4
s(g1431
I42
g1432
Vinsert
p44476
I42
VSimpleName: List
p44477
tp44478
I1
s(g5393
I42
g5394
Vinsert
p44479
I42
VSimpleName: object
p44480
tp44481
I1
s(g583
I42
g584
Vinsert
p44482
I40
VQualifiedName: reporterStub.wanted
p44483
tp44484
I1
s(g6510
I42
g6511
Vinsert
p44485
I42
VSimpleName: emptyList
p44486
tp44487
I1
s(g5647
I42
g5648
Vinsert
p44488
I34
VNumberLiteral: 1
p44489
tp44490
I1
s(g11538
I42
g11539
Vinsert
p44491
I42
VSimpleName: String
p44492
tp44493
I2
s(g13114
I42
g13115
Vinsert
p44494
I43
VSimpleType: AllInvocationsFinder
p44495
tp44496
I2
s(g11839
I42
g11840
Vinsert
p44497
I31
VMethodDeclaration
p44498
tp44499
I2
s(g16240
I42
g16241
Vinsert
p44500
I42
VSimpleName: modifiers
p44501
tp44502
I1
s(g623
I42
g624
Vinsert
p44503
I42
VSimpleName: mode
p44504
tp44505
I2
s(g19604
I42
g19605
Vinsert
p44506
I42
VSimpleName: Runner
p44507
tp44508
I1
s(g13427
I42
g13428
Vinsert
p44509
I60
VVariableDeclarationStatement
p44510
tp44511
I1
s(g5426
I42
g5427
Vinsert
p44512
I42
VSimpleName: MockFeatures
p44513
tp44514
I1
s(g453
I42
g454
Vinsert
p44515
I42
VSimpleName: finder
p44516
tp44517
I1
s(g1069
I42
g1070
Vinsert
p44518
I8
VBlock
p44519
tp44520
I1
s(g8038
I42
g8039
Vinsert
p44521
I76
VWildcardType: ? extends Object
p44522
tp44523
I1
s(g4059
I42
g4060
Vinsert
p44524
I42
VSimpleName: originalType
p44525
tp44526
I1
s(g7177
I42
g7178
Vinsert
p44527
I42
VSimpleName: InitializationError
p44528
tp44529
I1
s(g8226
I42
g8227
Vinsert
p44530
I43
VSimpleType: Iterable
p44531
tp44532
I1
s(g3460
I42
g3461
Vinsert
p44533
I43
VSimpleType: Description
p44534
tp44535
I1
s(g12326
I42
g12327
Vinsert
p44536
I7
VAssignment: =
p44537
tp44538
I1
s(g124
I42
g125
Vinsert
p44539
I42
VSimpleName: p
p44540
tp44541
I1
s(g8337
I42
g8338
Vinsert
p44542
I43
VSimpleType: WrongTypeOfReturnValue
p44543
tp44544
I1
s(g4638
I42
g4639
Vinsert
p44545
I43
VSimpleType: Bar
p44546
tp44547
I2
s(g17874
I42
g17875
Vinsert
p44548
I42
VSimpleName: returnedMock
p44549
tp44550
I1
s(g5562
I42
g5563
Vinsert
p44551
I74
VParameterizedType: Collection<Stubbing>
p44552
tp44553
I1
s(g12777
I42
g12778
Vinsert
p44554
I58
VVariableDeclarationExpression
p44555
tp44556
I1
s(g5393
I42
g5394
Vinsert
p44557
I31
VMethodDeclaration
p44558
tp44559
I3
s(g2531
I42
g2532
Vinsert
p44560
I59
VVariableDeclarationFragment
p44561
tp44562
I1
s(g2139
I42
g2140
Vinsert
p44563
I60
VVariableDeclarationStatement
p44564
tp44565
I1
s(g704
I42
g705
Vinsert
p44566
I8
VBlock
p44567
tp44568
I1
s(g6
I42
g7
Vinsert
p44569
I31
VMethodDeclaration
p44570
tp44571
I1
s(Vinsert
p44572
I42
VSimpleName: add
p44573
Vinsert
p44574
I45
VStringLiteral: "two"
p44575
tp44576
I3
s(g1105
I42
g1106
Vinsert
p44577
I42
VSimpleName: MockSettingsImpl
p44578
tp44579
I4
s(g2326
I42
g2327
Vinsert
p44580
I8
VBlock
p44581
tp44582
I1
s(g8509
I42
g8510
Vinsert
p44583
I43
VSimpleType: String
p44584
tp44585
I4
s(g6725
I42
g6726
Vinsert
p44586
I80
VMemberValuePair
p44587
tp44588
I1
s(g2480
I42
g2481
Vinsert
p44589
I42
VSimpleName: expectedMock
p44590
tp44591
I1
s(g8218
I42
g8219
Vinsert
p44592
I41
VReturnStatement
p44593
tp44594
I2
s(g3493
I42
g3494
Vinsert
p44595
I14
VClassInstanceCreation
p44596
tp44597
I2
s(g9832
I42
g9833
Vinsert
p44598
I42
VSimpleName: defaultAnswer
p44599
tp44600
I1
s(g317
I42
g318
Vinsert
p44601
I43
VSimpleType: T
p44602
tp44603
I1
s(g1234
I42
g1235
Vinsert
p44604
I43
VSimpleType: MockitoException
p44605
tp44606
I2
s(g1092
I42
g1093
Vinsert
p44607
I42
VSimpleName: chunk
p44608
tp44609
I8
s(g3851
I42
g3852
Vinsert
p44610
I60
VVariableDeclarationStatement
p44611
tp44612
I1
s(g8655
I42
g8656
Vinsert
p44613
I42
VSimpleName: WeakReference
p44614
tp44615
I1
s(g1044
I42
g1045
Vinsert
p44616
I66
VTextElement:  class
p44617
tp44618
I1
s(g4944
I42
g4945
Vinsert
p44619
I37
VPostfixExpression: ++
p44620
tp44621
I1
s(g7544
I42
g7545
Vinsert
p44622
I27
VInfixExpression: ==
p44623
tp44624
I1
s(g6379
I42
g6380
Vinsert
p44625
I42
VSimpleName: readerToLinesWithEmptyLines
p44626
tp44627
I1
s(g8237
I42
g8238
Vinsert
p44628
I14
VClassInstanceCreation
p44629
tp44630
I1
s(g6820
I42
g6821
Vinsert
p44631
I42
VSimpleName: behavior
p44632
tp44633
I1
s(g4929
I42
g4930
Vinsert
p44634
I70
VEnhancedForStatement
p44635
tp44636
I1
s(g14336
I42
g14337
Vinsert
p44637
I83
VModifier: private
p44638
tp44639
I2
s(g1683
I42
g1684
Vinsert
p44640
I42
VSimpleName: inMemory
p44641
tp44642
I2
s(g8237
I42
g8238
Vinsert
p44643
I42
VSimpleName: cce
p44644
tp44645
I1
s(g5416
I42
g5417
Vinsert
p44646
I43
VSimpleType: BDDStubber
p44647
tp44648
I2
s(g4401
I42
g4402
Vinsert
p44649
I42
VSimpleName: assertEquals
p44650
tp44651
I2
s(g14133
I42
g14134
Vinsert
p44652
I9
VBooleanLiteral: true
p44653
tp44654
I1
s(g13694
I42
g13695
Vinsert
p44655
I32
VMethodInvocation
p44656
tp44657
I2
s(g1977
I42
g1978
Vinsert
p44658
I42
VSimpleName: Ignore
p44659
tp44660
I1
s(g14412
I42
g14413
Vinsert
p44661
I44
VSingleVariableDeclaration
p44662
tp44663
I1
s(g12769
I42
g12770
Vinsert
p44664
I43
VSimpleType: String
p44665
tp44666
I10
s(g4138
I42
g4139
Vinsert
p44667
I21
VExpressionStatement
p44668
tp44669
I1
s(g7446
I42
g7447
Vinsert
p44670
I42
VSimpleName: wanted
p44671
tp44672
I1
s(g12710
I42
g12711
Vinsert
p44673
I43
VSimpleType: Invocation
p44674
tp44675
I2
s(g7906
I42
g7907
Vinsert
p44676
I42
VSimpleName: apply
p44677
tp44678
I1
s(g5805
I42
g5806
Vinsert
p44679
I42
VSimpleName: getOutputStream
p44680
tp44681
I1
s(Vinsert
p44682
I42
VSimpleName: visitMethodInsn
p44683
Vinsert
p44684
I42
VSimpleName: mv1
p44685
tp44686
I1
s(g12809
I42
g12810
Vinsert
p44687
I42
VSimpleName: s
p44688
tp44689
I2
s(g7248
I42
g7249
Vinsert
p44690
I42
VSimpleName: types
p44691
tp44692
I1
s(g74
I42
g75
Vinsert
p44693
I42
VSimpleName: IllegalStateException
p44694
tp44695
I1
s(g410
I42
g411
Vinsert
p44696
I32
VMethodInvocation
p44697
tp44698
I3
s(g16067
I42
g16068
Vinsert
p44699
I42
VSimpleName: RuntimeException
p44700
tp44701
I2
s(g7166
I42
g7167
Vinsert
p44702
I42
VSimpleName: String
p44703
tp44704
I2
s(g3336
I42
g3337
Vinsert
p44705
I43
VSimpleType: MockSettingsImpl
p44706
tp44707
I1
s(g1573
I42
g1574
Vinsert
p44708
I8
VBlock
p44709
tp44710
I1
s(g4704
I42
g4705
Vinsert
p44711
I14
VClassInstanceCreation
p44712
tp44713
I1
s(g2606
I42
g2607
Vinsert
p44714
I21
VExpressionStatement
p44715
tp44716
I10
s(g727
I42
g728
Vinsert
p44717
I43
VSimpleType: AnswersValidator
p44718
tp44719
I1
s(g811
I42
g812
Vinsert
p44720
I42
VSimpleName: isOut
p44721
tp44722
I1
s(g4441
I42
g4442
Vinsert
p44723
I42
VSimpleName: clazz
p44724
tp44725
I1
s(g5403
I42
g5404
Vinsert
p44726
I42
VSimpleName: methodOne
p44727
tp44728
I1
s(g28046
I42
g28047
Vinsert
p44729
I42
VSimpleName: unfinishedStubbingCleansUpTheState
p44730
tp44731
I1
s(g1426
I42
g1427
Vinsert
p44732
I83
VModifier: final
p44733
tp44734
I1
s(g2616
I42
g2617
Vinsert
p44735
I42
VSimpleName: Class
p44736
tp44737
I1
s(g2090
I42
g2091
Vinsert
p44738
I42
VSimpleName: StackTraceElement
p44739
tp44740
I2
s(g3488
I42
g3489
Vinsert
p44741
I8
VBlock
p44742
tp44743
I94
s(g5426
I42
g5427
Vinsert
p44744
I74
VParameterizedType: MockFeatures<T>
p44745
tp44746
I1
s(g6791
I42
g6792
Vinsert
p44747
I43
VSimpleType: String
p44748
tp44749
I2
s(g4362
I42
g4363
Vinsert
p44750
I43
VSimpleType: StringReader
p44751
tp44752
I2
s(g2018
I42
g2019
Vinsert
p44753
I44
VSingleVariableDeclaration
p44754
tp44755
I3
s(g648
I42
g649
Vinsert
p44756
I42
VSimpleName: articleOne
p44757
tp44758
I1
s(g4800
I42
g4801
Vinsert
p44759
I42
VSimpleName: settings
p44760
tp44761
I1
s(g7416
I42
g7417
Vinsert
p44762
I43
VSimpleType: Exception
p44763
tp44764
I1
s(g4755
I42
g4756
Vinsert
p44765
I32
VMethodInvocation
p44766
tp44767
I2
s(g5360
I42
g5361
Vinsert
p44768
I42
VSimpleName: Reporter
p44769
tp44770
I1
s(g8986
I42
g8987
Vinsert
p44771
I42
VSimpleName: mockDependents
p44772
tp44773
I1
s(g8533
I42
g8534
Vinsert
p44774
I42
VSimpleName: instance
p44775
tp44776
I2
s(g6124
I42
g6125
Vinsert
p44777
I42
VSimpleName: assertEquals
p44778
tp44779
I3
s(g3725
I42
g3726
Vinsert
p44780
I44
VSingleVariableDeclaration
p44781
tp44782
I1
s(g214
I42
g215
Vinsert
p44783
I42
VSimpleName: assertThat
p44784
tp44785
I1
s(g3078
I42
g3079
Vinsert
p44786
I33
VNullLiteral
p44787
tp44788
I2
s(g826
I42
g827
Vinsert
p44789
I33
VNullLiteral
p44790
tp44791
I1
s(g8195
I42
g8196
Vinsert
p44792
I46
VSuperConstructorInvocation
p44793
tp44794
I1
s(g144
I42
g145
Vinsert
p44795
I42
VSimpleName: ReturnsIdentity
p44796
tp44797
I1
s(g14746
I42
g14747
Vinsert
p44798
I79
VSingleMemberAnnotation
p44799
tp44800
I1
s(g6098
I42
g6099
Vinsert
p44801
I43
VSimpleType: List
p44802
tp44803
I1
s(g4555
I42
g4556
Vinsert
p44804
I11
VCastExpression
p44805
tp44806
I3
s(g788
I42
g789
Vinsert
p44807
I83
VModifier: public
p44808
tp44809
I1
s(g337
I42
g338
Vinsert
p44810
I45
VStringLiteral: " does not match"
p44811
tp44812
I1
s(g6008
I42
g6009
Vinsert
p44813
I60
VVariableDeclarationStatement
p44814
tp44815
I1
s(g7062
I42
g7063
Vinsert
p44816
I42
VSimpleName: verify
p44817
tp44818
I2
s(Vinsert
p44819
I42
VSimpleName: getReturnType
p44820
Vinsert
p44821
I42
VSimpleName: isAssignableFrom
p44822
tp44823
I1
s(g41
I42
g42
Vinsert
p44824
I60
VVariableDeclarationStatement
p44825
tp44826
I2
s(g3580
I42
g3581
Vinsert
p44827
I52
VThisExpression
p44828
tp44829
I1
s(g18290
I42
g18291
Vinsert
p44830
I42
VSimpleName: method
p44831
tp44832
I2
s(g10609
I42
g10610
Vinsert
p44833
I42
VSimpleName: matches
p44834
tp44835
I2
s(g9747
I42
g9748
Vinsert
p44836
I34
VNumberLiteral: 10
p44837
tp44838
I1
s(g12809
I42
g12810
Vinsert
p44839
I44
VSingleVariableDeclaration
p44840
tp44841
I1
s(g11691
I42
g11692
Vinsert
p44842
I32
VMethodInvocation
p44843
tp44844
I2
s(g169
I42
g170
Vinsert
p44845
I33
VNullLiteral
p44846
tp44847
I1
s(g14686
I42
g14687
Vinsert
p44848
I45
VStringLiteral: "[Mockito] Additional stubbing information (see javadoc for StubbingInfo class):"
p44849
tp44850
I1
s(g28478
I42
g28479
Vinsert
p44851
I34
VNumberLiteral: 3
p44852
tp44853
I2
s(g2266
I42
g2267
Vinsert
p44854
I42
VSimpleName: Test
p44855
tp44856
I1
s(g3413
I42
g3414
Vinsert
p44857
I45
VStringLiteral: "Verification failed!"
p44858
tp44859
I1
s(g14412
I42
g14413
Vinsert
p44860
I54
VTryStatement
p44861
tp44862
I1
s(g16
I42
g17
Vinsert
p44863
I60
VVariableDeclarationStatement
p44864
tp44865
I1
s(g1886
I42
g1887
Vinsert
p44866
I60
VVariableDeclarationStatement
p44867
tp44868
I2
s(g7313
I42
g7314
Vinsert
p44869
I43
VSimpleType: GenericMetadataSupport
p44870
tp44871
I1
s(g12066
I42
g12067
Vinsert
p44872
I45
VStringLiteral: "expected validation to fail"
p44873
tp44874
I1
s(Vinsert
p44875
I42
VSimpleName: simpleMethod
p44876
Vinsert
p44877
I42
VSimpleName: failure
p44878
tp44879
I1
s(g19709
I42
g19710
Vinsert
p44880
I42
VSimpleName: settings
p44881
tp44882
I3
s(g12804
I42
g12805
Vinsert
p44883
I83
VModifier: public
p44884
tp44885
I1
s(g4817
I42
g4818
Vinsert
p44886
I60
VVariableDeclarationStatement
p44887
tp44888
I3
s(g1721
I42
g1722
Vinsert
p44889
I42
VSimpleName: stubVoid
p44890
tp44891
I1
s(g12660
I42
g12661
Vinsert
p44892
I42
VSimpleName: me
p44893
tp44894
I1
s(g20513
I42
g20514
Vinsert
p44895
I40
VQualifiedName: result.access
p44896
tp44897
I1
s(g1100
I42
g1101
Vinsert
p44898
I59
VVariableDeclarationFragment
p44899
tp44900
I1
s(g9950
I42
g9951
Vinsert
p44901
I45
VStringLiteral: "ok"
p44902
tp44903
I1
s(g14566
I42
g14567
Vinsert
p44904
I21
VExpressionStatement
p44905
tp44906
I6
s(g26027
I42
g26028
Vinsert
p44907
I45
VStringLiteral: "get"
p44908
tp44909
I1
s(g4461
I42
g4462
Vinsert
p44910
I44
VSingleVariableDeclaration
p44911
tp44912
I1
s(g1209
I42
g1210
Vinsert
p44913
I26
VImportDeclaration
p44914
tp44915
I2
s(g3229
I42
g3230
Vinsert
p44916
I14
VClassInstanceCreation
p44917
tp44918
I1
s(g6695
I42
g6696
Vinsert
p44919
I42
VSimpleName: Cloneable
p44920
tp44921
I1
s(g23727
I42
g23728
Vinsert
p44922
I42
VSimpleName: mockitoStubber
p44923
tp44924
I1
s(g1765
I42
g1766
Vinsert
p44925
I42
VSimpleName: Field
p44926
tp44927
I2
s(g1079
I42
g1080
Vinsert
p44928
I42
VSimpleName: MethodVisitor
p44929
tp44930
I1
s(g10086
I42
g10087
Vinsert
p44931
I42
VSimpleName: byteObjectReturningMethod
p44932
tp44933
I1
s(g23104
I42
g23105
Vinsert
p44934
I42
VSimpleName: cl
p44935
tp44936
I2
s(g13493
I42
g13494
Vinsert
p44937
I59
VVariableDeclarationFragment
p44938
tp44939
I2
s(g13540
I42
g13541
Vinsert
p44940
I42
VSimpleName: start
p44941
tp44942
I1
s(g12370
I42
g12371
Vinsert
p44943
I83
VModifier: public
p44944
tp44945
I1
s(g11306
I42
g11307
Vinsert
p44946
I21
VExpressionStatement
p44947
tp44948
I5
s(g18096
I42
g18097
Vinsert
p44949
I5
VArrayType: Class<?>[]
p44950
tp44951
I2
s(g3214
I42
g3215
Vinsert
p44952
I43
VSimpleType: MethodVisitor
p44953
tp44954
I1
s(g2316
I42
g2317
Vinsert
p44955
I45
VStringLiteral: "any boolean"
p44956
tp44957
I2
s(g19510
I42
g19511
Vinsert
p44958
I42
VSimpleName: Equals
p44959
tp44960
I1
s(g2565
I42
g2566
Vinsert
p44961
I21
VExpressionStatement
p44962
tp44963
I2
s(g214
I42
g215
Vinsert
p44964
I41
VReturnStatement
p44965
tp44966
I1
s(g3055
I42
g3056
Vinsert
p44967
I41
VReturnStatement
p44968
tp44969
I4
s(g4059
I42
g4060
Vinsert
p44970
I42
VSimpleName: methodDoesNotAcceptParameter
p44971
tp44972
I1
s(g13540
I42
g13541
Vinsert
p44973
I66
VTextElement:  collection to join
p44974
tp44975
I1
s(g13461
I42
g13462
Vinsert
p44976
I42
VSimpleName: Stubber
p44977
tp44978
I1
s(g4963
I42
g4964
Vinsert
p44979
I45
VStringLiteral: "computed"
p44980
tp44981
I1
s(g1843
I42
g1844
Vinsert
p44982
I42
VSimpleName: add
p44983
tp44984
I1
s(g20085
I42
g20086
Vinsert
p44985
I59
VVariableDeclarationFragment
p44986
tp44987
I2
s(g7243
I42
g7244
Vinsert
p44988
I14
VClassInstanceCreation
p44989
tp44990
I1
s(g10894
I42
g10895
Vinsert
p44991
I42
VSimpleName: o
p44992
tp44993
I1
s(g6502
I42
g6503
Vinsert
p44994
I8
VBlock
p44995
tp44996
I2
s(g1706
I42
g1707
Vinsert
p44997
I31
VMethodDeclaration
p44998
tp44999
I1
s(g4670
I42
g4671
Vinsert
p45000
I42
VSimpleName: assertThat
p45001
tp45002
I1
s(g936
I42
g937
Vinsert
p45003
I42
VSimpleName: VAR_INSN
p45004
tp45005
I1
s(g1204
I42
g1205
Vinsert
p45006
I32
VMethodInvocation
p45007
tp45008
I2
s(g6321
I42
g6322
Vinsert
p45009
I42
VSimpleName: validateFor
p45010
tp45011
I2
s(g6877
I42
g6878
Vinsert
p45012
I42
VSimpleName: iterator
p45013
tp45014
I2
s(g7337
I42
g7338
Vinsert
p45015
I8
VBlock
p45016
tp45017
I3
s(g7166
I42
g7167
Vinsert
p45018
I42
VSimpleName: mockName
p45019
tp45020
I1
s(g262
I42
g263
Vinsert
p45021
I76
VWildcardType: ?
p45022
tp45023
I1
s(g4158
I42
g4159
Vinsert
p45024
I43
VSimpleType: NumberOfInvocationsError
p45025
tp45026
I1
s(g6890
I42
g6891
Vinsert
p45027
I8
VBlock
p45028
tp45029
I2
s(g3991
I42
g3992
Vinsert
p45030
I45
VStringLiteral: "MockitoExampleTest"
p45031
tp45032
I1
s(g6872
I42
g6873
Vinsert
p45033
I27
VInfixExpression: <=
p45034
tp45035
I1
s(g876
I42
g877
Vinsert
p45036
I27
VInfixExpression: ||
p45037
tp45038
I1
s(g1477
I42
g1478
Vinsert
p45039
I42
VSimpleName: IMethods
p45040
tp45041
I2
s(g25187
I42
g25188
Vinsert
p45042
I27
VInfixExpression: !=
p45043
tp45044
I1
s(g12427
I42
g12428
Vinsert
p45045
I42
VSimpleName: isReference
p45046
tp45047
I1
s(g6116
I42
g6117
Vinsert
p45048
I14
VClassInstanceCreation
p45049
tp45050
I1
s(g991
I42
g992
Vinsert
p45051
I38
VPrefixExpression: -
p45052
tp45053
I1
s(g941
I42
g942
Vinsert
p45054
I42
VSimpleName: Set
p45055
tp45056
I1
s(g3078
I42
g3079
Vinsert
p45057
I42
VSimpleName: current
p45058
tp45059
I1
s(g15147
I42
g15148
Vinsert
p45060
I43
VSimpleType: Invocation
p45061
tp45062
I2
s(g4492
I42
g4493
Vinsert
p45063
I42
VSimpleName: origin
p45064
tp45065
I1
s(g10802
I42
g10803
Vinsert
p45066
I60
VVariableDeclarationStatement
p45067
tp45068
I1
s(g247
I42
g248
Vinsert
p45069
I39
VPrimitiveType: int
p45070
tp45071
I1
s(g9967
I42
g9968
Vinsert
p45072
I34
VNumberLiteral: 20
p45073
tp45074
I1
s(g5007
I42
g5008
Vinsert
p45075
I2
VArrayAccess
p45076
tp45077
I1
s(g1591
I42
g1592
Vinsert
p45078
I83
VModifier: private
p45079
tp45080
I2
s(g12809
I42
g12810
Vinsert
p45081
I42
VSimpleName: ByteArrayInputStream
p45082
tp45083
I1
s(g4952
I42
g4953
Vinsert
p45084
I14
VClassInstanceCreation
p45085
tp45086
I1
s(g11877
I42
g11878
Vinsert
p45087
I42
VSimpleName: Iterator
p45088
tp45089
I1
s(g6510
I42
g6511
Vinsert
p45090
I42
VSimpleName: recorded
p45091
tp45092
I1
s(g2959
I42
g2960
Vinsert
p45093
I42
VSimpleName: shouldAllowVerifyingWhenOtherMockCallIsInTheSameLine
p45094
tp45095
I1
s(g986
I42
g987
Vinsert
p45096
I83
VModifier: public
p45097
tp45098
I1
s(g8095
I42
g8096
Vinsert
p45099
I42
VSimpleName: Exception
p45100
tp45101
I1
s(g56
I42
g57
Vinsert
p45102
I42
VSimpleName: Exception
p45103
tp45104
I1
s(g2054
I42
g2055
Vinsert
p45105
I42
VSimpleName: getInvocationContainer
p45106
tp45107
I1
s(g8205
I42
g8206
Vinsert
p45108
I44
VSingleVariableDeclaration
p45109
tp45110
I6
s(g10667
I42
g10668
Vinsert
p45111
I41
VReturnStatement
p45112
tp45113
I1
s(g2705
I42
g2706
Vinsert
p45114
I43
VSimpleType: SuperTypesLastSorter
p45115
tp45116
I3
s(g2041
I42
g2042
Vinsert
p45117
I42
VSimpleName: printer
p45118
tp45119
I2
s(g11718
I42
g11719
Vinsert
p45120
I42
VSimpleName: List
p45121
tp45122
I1
s(g1292
I42
g1293
Vinsert
p45123
I42
VSimpleName: first
p45124
tp45125
I2
s(g26530
I42
g26531
Vinsert
p45126
I42
VSimpleName: closeQuietly
p45127
tp45128
I2
s(g17500
I42
g17501
Vinsert
p45129
I43
VSimpleType: InvocationBuilder
p45130
tp45131
I1
s(g234
I42
g235
Vinsert
p45132
I39
VPrimitiveType: void
p45133
tp45134
I1
s(g1810
I42
g1811
Vinsert
p45135
I42
VSimpleName: isTypeMockable
p45136
tp45137
I1
s(g1234
I42
g1235
Vinsert
p45138
I53
VThrowStatement
p45139
tp45140
I2
s(g10490
I42
g10491
Vinsert
p45141
I27
VInfixExpression: ==
p45142
tp45143
I1
s(g56
I42
g57
Vinsert
p45144
I60
VVariableDeclarationStatement
p45145
tp45146
I4
s(g1105
I42
g1106
Vinsert
p45147
I21
VExpressionStatement
p45148
tp45149
I2
s(g13967
I42
g13968
Vinsert
p45150
I43
VSimpleType: VarargMethod
p45151
tp45152
I1
s(g11572
I42
g11573
Vinsert
p45153
I41
VReturnStatement
p45154
tp45155
I1
s(g5647
I42
g5648
Vinsert
p45156
I27
VInfixExpression: +
p45157
tp45158
I2
s(g4138
I42
g4139
Vinsert
p45159
I42
VSimpleName: newNotifier
p45160
tp45161
I1
s(g8337
I42
g8338
Vinsert
p45162
I42
VSimpleName: getMessage
p45163
tp45164
I1
s(g13345
I42
g13346
Vinsert
p45165
I42
VSimpleName: description
p45166
tp45167
I1
s(g3247
I42
g3248
Vinsert
p45168
I45
VStringLiteral: ", actual: "
p45169
tp45170
I2
s(g4441
I42
g4442
Vinsert
p45171
I42
VSimpleName: classContext
p45172
tp45173
I2
s(g3880
I42
g3881
Vinsert
p45174
I42
VSimpleName: value
p45175
tp45176
I2
s(g5655
I42
g5656
Vinsert
p45177
I44
VSingleVariableDeclaration
p45178
tp45179
I8
s(g2100
I42
g2101
Vinsert
p45180
I42
VSimpleName: fail
p45181
tp45182
I18
s(g2070
I42
g2071
Vinsert
p45183
I43
VSimpleType: InvocationMarker
p45184
tp45185
I6
s(g25297
I42
g25298
Vinsert
p45186
I43
VSimpleType: Class
p45187
tp45188
I2
s(g5078
I42
g5079
Vinsert
p45189
I42
VSimpleName: getWantedCount
p45190
tp45191
I2
s(g6148
I42
g6149
Vinsert
p45192
I43
VSimpleType: Exception
p45193
tp45194
I1
s(g9239
I42
g9240
Vinsert
p45195
I45
VStringLiteral: "foo"
p45196
tp45197
I1
s(g9460
I42
g9461
Vinsert
p45198
I42
VSimpleName: equalsIgnoreCase
p45199
tp45200
I1
s(g4861
I42
g4862
Vinsert
p45201
I42
VSimpleName: notifier
p45202
tp45203
I1
s(g1059
I42
g1060
Vinsert
p45204
I42
VSimpleName: actual
p45205
tp45206
I2
s(g2095
I42
g2096
Vinsert
p45207
I43
VSimpleType: BeanPropertySetter
p45208
tp45209
I1
s(g1934
I42
g1935
Vinsert
p45210
I76
VWildcardType: ?
p45211
tp45212
I3
s(g5321
I42
g5322
Vinsert
p45213
I60
VVariableDeclarationStatement
p45214
tp45215
I3
s(g12000
I42
g12001
Vinsert
p45216
I42
VSimpleName: failsExactly
p45217
tp45218
I1
s(g42447
I42
g42448
Vinsert
p45219
I42
VSimpleName: first
p45220
tp45221
I1
s(g1650
I42
g1651
Vinsert
p45222
I60
VVariableDeclarationStatement
p45223
tp45224
I5
s(g3542
I42
g3543
Vinsert
p45225
I42
VSimpleName: methodName
p45226
tp45227
I1
s(g2672
I42
g2673
Vinsert
p45228
I45
VStringLiteral: "MockitoSampleTest"
p45229
tp45230
I1
s(g2336
I42
g2337
Vinsert
p45231
I21
VExpressionStatement
p45232
tp45233
I1
s(g10048
I42
g10049
Vinsert
p45234
I83
VModifier: public
p45235
tp45236
I1
s(g252
I42
g253
Vinsert
p45237
I40
VQualifiedName: Any.ANY
p45238
tp45239
I1
s(g770
I42
g771
Vinsert
p45240
I21
VExpressionStatement
p45241
tp45242
I4
s(g26964
I42
g26965
Vinsert
p45243
I34
VNumberLiteral: 0
p45244
tp45245
I1
s(g4143
I42
g4144
Vinsert
p45246
I42
VSimpleName: isVerified
p45247
tp45248
I1
s(g7091
I42
g7092
Vinsert
p45249
I42
VSimpleName: matcherStack
p45250
tp45251
I1
s(g2472
I42
g2473
Vinsert
p45252
I78
VMarkerAnnotation
p45253
tp45254
I1
s(g1795
I42
g1796
Vinsert
p45255
I42
VSimpleName: isInstanceOf
p45256
tp45257
I1
s(g1411
I42
g1412
Vinsert
p45258
I43
VSimpleType: List
p45259
tp45260
I6
s(g1962
I42
g1963
Vinsert
p45261
I39
VPrimitiveType: void
p45262
tp45263
I1
s(g2321
I42
g2322
Vinsert
p45264
I42
VSimpleName: mock
p45265
tp45266
I9
s(g1696
I42
g1697
Vinsert
p45267
I41
VReturnStatement
p45268
tp45269
I14
s(g2844
I42
g2845
Vinsert
p45270
I14
VClassInstanceCreation
p45271
tp45272
I1
s(g8655
I42
g8656
Vinsert
p45273
I74
VParameterizedType: WeakReference<Class>
p45274
tp45275
I1
s(g16048
I42
g16049
Vinsert
p45276
I45
VStringLiteral: "\u005cn"
p45277
tp45278
I1
s(g10010
I42
g10011
Vinsert
p45279
I42
VSimpleName: valueFor
p45280
tp45281
I1
s(g6008
I42
g6009
Vinsert
p45282
I59
VVariableDeclarationFragment
p45283
tp45284
I1
s(g43216
I42
g43217
Vinsert
p45285
I42
VSimpleName: testGetLastUpdates
p45286
tp45287
I1
s(g886
I42
g887
Vinsert
p45288
I42
VSimpleName: SecurityException
p45289
tp45290
I1
s(g5118
I42
g5119
Vinsert
p45291
I42
VSimpleName: shouldAllowMixingRawArgumentsWithMatchers
p45292
tp45293
I1
s(g5378
I42
g5379
Vinsert
p45294
I42
VSimpleName: description
p45295
tp45296
I2
s(g2575
I42
g2576
Vinsert
p45297
I43
VSimpleType: HashMap
p45298
tp45299
I1
s(g3835
I42
g3836
Vinsert
p45300
I42
VSimpleName: InvalidStateDetectionTest
p45301
tp45302
I1
s(g1780
I42
g1781
Vinsert
p45303
I21
VExpressionStatement
p45304
tp45305
I1
s(g7696
I42
g7697
Vinsert
p45306
I42
VSimpleName: shouldBeSerializable
p45307
tp45308
I1
s(g11691
I42
g11692
Vinsert
p45309
I83
VModifier: public
p45310
tp45311
I2
s(g10385
I42
g10386
Vinsert
p45312
I83
VModifier: public
p45313
tp45314
I1
s(g7292
I42
g7293
Vinsert
p45315
I42
VSimpleName: actualInvocations
p45316
tp45317
I1
s(g15245
I42
g15246
Vinsert
p45318
I42
VSimpleName: isEmpty
p45319
tp45320
I1
s(g5431
I42
g5432
Vinsert
p45321
I44
VSingleVariableDeclaration
p45322
tp45323
I1
s(g9229
I42
g9230
Vinsert
p45324
I32
VMethodInvocation
p45325
tp45326
I1
s(g1184
I42
g1185
Vinsert
p45327
I83
VModifier: public
p45328
tp45329
I1
s(g3219
I42
g3220
Vinsert
p45330
I60
VVariableDeclarationStatement
p45331
tp45332
I1
s(g6614
I42
g6615
Vinsert
p45333
I83
VModifier: public
p45334
tp45335
I1
s(g5570
I42
g5571
Vinsert
p45336
I42
VSimpleName: actualInvocation
p45337
tp45338
I2
s(g841
I42
g842
Vinsert
p45339
I42
VSimpleName: doReturn
p45340
tp45341
I1
s(g11306
I42
g11307
Vinsert
p45342
I59
VVariableDeclarationFragment
p45343
tp45344
I18
s(g1069
I42
g1070
Vinsert
p45345
I31
VMethodDeclaration
p45346
tp45347
I1
s(g15198
I42
g15199
Vinsert
p45348
I74
VParameterizedType: Class<?>
p45349
tp45350
I1
s(g1194
I42
g1195
Vinsert
p45351
I80
VMemberValuePair
p45352
tp45353
I1
s(g4461
I42
g4462
Vinsert
p45354
I43
VSimpleType: Article
p45355
tp45356
I3
s(g109
I42
g110
Vinsert
p45357
I8
VBlock
p45358
tp45359
I5
s(g4539
I42
g4540
Vinsert
p45360
I42
VSimpleName: Object
p45361
tp45362
I1
s(g8057
I42
g8058
Vinsert
p45363
I39
VPrimitiveType: void
p45364
tp45365
I2
s(Vinsert
p45366
I42
VSimpleName: verify
p45367
Vinsert
p45368
I45
VStringLiteral: "xxx"
p45369
tp45370
I1
s(g4861
I42
g4862
Vinsert
p45371
I42
VSimpleName: UnusedStubbingsFinder
p45372
tp45373
I1
s(g209
I42
g210
Vinsert
p45374
I42
VSimpleName: parameterTypes
p45375
tp45376
I1
s(g4595
I42
g4596
Vinsert
p45377
I65
VTagElement: @return
p45378
tp45379
I1
s(g15351
I42
g15352
Vinsert
p45380
I42
VSimpleName: Exception
p45381
tp45382
I1
s(g2085
I42
g2086
Vinsert
p45383
I28
VInitializer
p45384
tp45385
I2
s(g4456
I42
g4457
Vinsert
p45386
I43
VSimpleType: InvocationTargetException
p45387
tp45388
I1
s(g2369
I42
g2370
Vinsert
p45389
I42
VSimpleName: given
p45390
tp45391
I5
s(g13427
I42
g13428
Vinsert
p45392
I32
VMethodInvocation
p45393
tp45394
I2
s(g7730
I42
g7731
Vinsert
p45395
I42
VSimpleName: classToMock
p45396
tp45397
I1
s(Vinsert
p45398
I42
VSimpleName: extraInterfaces
p45399
Vinsert
p45400
I42
VSimpleName: shouldAllowMultipleInterfaces
p45401
tp45402
I1
s(g16562
I42
g16563
Vinsert
p45403
I42
VSimpleName: keys
p45404
tp45405
I1
s(g2585
I42
g2586
Vinsert
p45406
I42
VSimpleName: Object
p45407
tp45408
I1
s(g30167
I42
g30168
Vinsert
p45409
I42
VSimpleName: Ignore
p45410
tp45411
I3
s(g7893
I42
g7894
Vinsert
p45412
I42
VSimpleName: i
p45413
tp45414
I1
s(g357
I42
g358
Vinsert
p45415
I11
VCastExpression
p45416
tp45417
I1
s(g4461
I42
g4462
Vinsert
p45418
I59
VVariableDeclarationFragment
p45419
tp45420
I2
s(g7329
I42
g7330
Vinsert
p45421
I83
VModifier: static
p45422
tp45423
I1
s(g2434
I42
g2435
Vinsert
p45424
I43
VSimpleType: Integer
p45425
tp45426
I1
s(g2647
I42
g2648
Vinsert
p45427
I9
VBooleanLiteral: false
p45428
tp45429
I2
s(g1001
I42
g1002
Vinsert
p45430
I74
VParameterizedType: LinkedList<Invocation>
p45431
tp45432
I1
s(g3498
I42
g3499
Vinsert
p45433
I57
VTypeLiteral
p45434
tp45435
I1
s(g8571
I42
g8572
Vinsert
p45436
I42
VSimpleName: stub
p45437
tp45438
I1
s(g10623
I42
g10624
Vinsert
p45439
I42
VSimpleName: declaredFields
p45440
tp45441
I2
s(g8184
I42
g8185
Vinsert
p45442
I42
VSimpleName: assertEquals
p45443
tp45444
I1
s(g3262
I42
g3263
Vinsert
p45445
I42
VSimpleName: VerificationMode
p45446
tp45447
I1
s(g7906
I42
g7907
Vinsert
p45448
I43
VSimpleType: Description
p45449
tp45450
I1
s(g5480
I42
g5481
Vinsert
p45451
I34
VNumberLiteral: 0
p45452
tp45453
I4
s(g7200
I42
g7201
Vinsert
p45454
I42
VSimpleName: filterHashCode
p45455
tp45456
I1
s(g10921
I42
g10922
Vinsert
p45457
I70
VEnhancedForStatement
p45458
tp45459
I1
s(g12287
I42
g12288
Vinsert
p45460
I42
VSimpleName: assertTrue
p45461
tp45462
I1
s(g28564
I42
g28565
Vinsert
p45463
I40
VQualifiedName: org.mockito.Mockito.inOrder
p45464
tp45465
I1
s(g24058
I42
g24059
Vinsert
p45466
I45
VStringLiteral: "one"
p45467
tp45468
I1
s(g8965
I42
g8966
Vinsert
p45469
I42
VSimpleName: equalsWithDelta
p45470
tp45471
I2
s(g6685
I42
g6686
Vinsert
p45472
I42
VSimpleName: actualMatcher
p45473
tp45474
I1
s(g31288
I42
g31289
Vinsert
p45475
I42
VSimpleName: invocations
p45476
tp45477
I2
s(g6056
I42
g6057
Vinsert
p45478
I42
VSimpleName: Exception
p45479
tp45480
I2
s(g26617
I42
g26618
Vinsert
p45481
I42
VSimpleName: verificationListeners
p45482
tp45483
I1
s(g39641
I42
g39642
Vinsert
p45484
I42
VSimpleName: Mockito
p45485
tp45486
I7
s(g12665
I42
g12666
Vinsert
p45487
I43
VSimpleType: String
p45488
tp45489
I2
s(g623
I42
g624
Vinsert
p45490
I42
VSimpleName: invocations
p45491
tp45492
I1
s(g5934
I42
g5935
Vinsert
p45493
I31
VMethodDeclaration
p45494
tp45495
I1
s(g12422
I42
g12423
Vinsert
p45496
I42
VSimpleName: Invocation
p45497
tp45498
I2
s(g1987
I42
g1988
Vinsert
p45499
I42
VSimpleName: description
p45500
tp45501
I1
s(g7243
I42
g7244
Vinsert
p45502
I21
VExpressionStatement
p45503
tp45504
I1
s(g12337
I42
g12338
Vinsert
p45505
I42
VSimpleName: objectArgMethod
p45506
tp45507
I1
s(g11387
I42
g11388
Vinsert
p45508
I43
VSimpleType: RunnerFactory
p45509
tp45510
I1
s(g448
I42
g449
Vinsert
p45511
I83
VModifier: public
p45512
tp45513
I1
s(g3812
I42
g3813
Vinsert
p45514
I42
VSimpleName: Object
p45515
tp45516
I5
s(g2503
I42
g2504
Vinsert
p45517
I43
VSimpleType: CodeEmitter
p45518
tp45519
I1
s(g5522
I42
g5523
Vinsert
p45520
I11
VCastExpression
p45521
tp45522
I1
s(g12000
I42
g12001
Vinsert
p45523
I42
VSimpleName: expectedExceptions
p45524
tp45525
I1
s(g5067
I42
g5068
Vinsert
p45526
I41
VReturnStatement
p45527
tp45528
I1
s(g6162
I42
g6163
Vinsert
p45529
I27
VInfixExpression: !=
p45530
tp45531
I1
s(g18914
I42
g18915
Vinsert
p45532
I42
VSimpleName: addAnswer
p45533
tp45534
I2
s(g1421
I42
g1422
Vinsert
p45535
I57
VTypeLiteral
p45536
tp45537
I1
s(g2929
I42
g2930
Vinsert
p45538
I42
VSimpleName: shouldAllowOnlyConsistentTypes
p45539
tp45540
I1
s(g7416
I42
g7417
Vinsert
p45541
I42
VSimpleName: MockitoException
p45542
tp45543
I1
s(g2498
I42
g2499
Vinsert
p45544
I41
VReturnStatement
p45545
tp45546
I1
s(g6634
I42
g6635
Vinsert
p45547
I42
VSimpleName: MockitoMocking
p45548
tp45549
I2
s(g2398
I42
g2399
Vinsert
p45550
I42
VSimpleName: isSatisfiedBy
p45551
tp45552
I2
s(g3336
I42
g3337
Vinsert
p45553
I8
VBlock
p45554
tp45555
I1
s(g8030
I42
g8031
Vinsert
p45556
I42
VSimpleName: Override
p45557
tp45558
I3
s(g14366
I42
g14367
Vinsert
p45559
I42
VSimpleName: String
p45560
tp45561
I1
s(g362
I42
g363
Vinsert
p45562
I83
VModifier: public
p45563
tp45564
I3
s(g4492
I42
g4493
Vinsert
p45565
I83
VModifier: public
p45566
tp45567
I2
s(g9408
I42
g9409
Vinsert
p45568
I43
VSimpleType: Enhancer
p45569
tp45570
I1
s(g3483
I42
g3484
Vinsert
p45571
I42
VSimpleName: forClass
p45572
tp45573
I2
s(g3835
I42
g3836
Vinsert
p45574
I42
VSimpleName: InvalidUseOfMatchersTest
p45575
tp45576
I1
s(g12660
I42
g12661
Vinsert
p45577
I45
VStringLiteral: "'List' is an interface"
p45578
tp45579
I1
s(g1393
I42
g1394
Vinsert
p45580
I43
VSimpleType: InstanceOf
p45581
tp45582
I1
s(g1543
I42
g1544
Vinsert
p45583
I14
VClassInstanceCreation
p45584
tp45585
I1
s(g8329
I42
g8330
Vinsert
p45586
I59
VVariableDeclarationFragment
p45587
tp45588
I1
s(g19604
I42
g19605
Vinsert
p45589
I52
VThisExpression
p45590
tp45591
I2
s(g4001
I42
g4002
Vinsert
p45592
I42
VSimpleName: MockitoException
p45593
tp45594
I1
s(g6024
I42
g6025
Vinsert
p45595
I42
VSimpleName: Object
p45596
tp45597
I1
s(g5321
I42
g5322
Vinsert
p45598
I8
VBlock
p45599
tp45600
I4
s(g1431
I42
g1432
Vinsert
p45601
I59
VVariableDeclarationFragment
p45602
tp45603
I1
s(g10242
I42
g10243
Vinsert
p45604
I42
VSimpleName: setup
p45605
tp45606
I1
s(g1810
I42
g1811
Vinsert
p45607
I42
VSimpleName: assertFalse
p45608
tp45609
I2
s(g79
I42
g80
Vinsert
p45610
I42
VSimpleName: out
p45611
tp45612
I1
s(g7867
I42
g7868
Vinsert
p45613
I42
VSimpleName: AssertionError
p45614
tp45615
I1
s(g548
I42
g549
Vinsert
p45616
I85
VDimension
p45617
tp45618
I1
s(g17987
I42
g17988
Vinsert
p45619
I42
VSimpleName: assertCorrectMode
p45620
tp45621
I1
s(g9614
I42
g9615
Vinsert
p45622
I78
VMarkerAnnotation
p45623
tp45624
I11
s(g2369
I42
g2370
Vinsert
p45625
I42
VSimpleName: test
p45626
tp45627
I1
s(g10846
I42
g10847
Vinsert
p45628
I44
VSingleVariableDeclaration
p45629
tp45630
I2
s(g1987
I42
g1988
Vinsert
p45631
I43
VSimpleType: WarningsCollector
p45632
tp45633
I1
s(g4231
I42
g4232
Vinsert
p45634
I42
VSimpleName: StackTraceElement
p45635
tp45636
I1
s(g12318
I42
g12319
Vinsert
p45637
I42
VSimpleName: assertContains
p45638
tp45639
I2
s(g10672
I42
g10673
Vinsert
p45640
I42
VSimpleName: invocation
p45641
tp45642
I12
s(g8288
I42
g8289
Vinsert
p45643
I44
VSingleVariableDeclaration
p45644
tp45645
I3
s(g114
I42
g115
Vinsert
p45646
I83
VModifier: static
p45647
tp45648
I1
s(g6752
I42
g6753
Vinsert
p45649
I7
VAssignment: =
p45650
tp45651
I1
s(g5180
I42
g5181
Vinsert
p45652
I42
VSimpleName: Root
p45653
tp45654
I1
s(g2657
I42
g2658
Vinsert
p45655
I39
VPrimitiveType: int
p45656
tp45657
I2
s(g23104
I42
g23105
Vinsert
p45658
I42
VSimpleName: ClassNotFoundException
p45659
tp45660
I1
s(g2331
I42
g2332
Vinsert
p45661
I8
VBlock
p45662
tp45663
I4
s(g448
I42
g449
Vinsert
p45664
I42
VSimpleName: isVoid_invocationOnVoidReturningMethod_returnTrue
p45665
tp45666
I1
s(g4755
I42
g4756
Vinsert
p45667
I39
VPrimitiveType: void
p45668
tp45669
I1
s(g8827
I42
g8828
Vinsert
p45670
I42
VSimpleName: mockTwoMethod
p45671
tp45672
I1
s(g991
I42
g992
Vinsert
p45673
I27
VInfixExpression: <=
p45674
tp45675
I1
s(g3364
I42
g3365
Vinsert
p45676
I42
VSimpleName: Test
p45677
tp45678
I3
s(g26964
I42
g26965
Vinsert
p45679
I42
VSimpleName: getInvocation
p45680
tp45681
I1
s(g16677
I42
g16678
Vinsert
p45682
I39
VPrimitiveType: void
p45683
tp45684
I1
s(g20513
I42
g20514
Vinsert
p45685
I5
VArrayType: boolean[]
p45686
tp45687
I1
s(g5522
I42
g5523
Vinsert
p45688
I42
VSimpleName: ClassLoader
p45689
tp45690
I3
s(g11844
I42
g11845
Vinsert
p45691
I36
VParenthesizedExpression
p45692
tp45693
I1
s(g3379
I42
g3380
Vinsert
p45694
I42
VSimpleName: startMocking
p45695
tp45696
I2
s(g12449
I42
g12450
Vinsert
p45697
I7
VAssignment: =
p45698
tp45699
I4
s(g7395
I42
g7396
Vinsert
p45700
I44
VSingleVariableDeclaration
p45701
tp45702
I4
s(g2075
I42
g2076
Vinsert
p45703
I31
VMethodDeclaration
p45704
tp45705
I16
s(g5378
I42
g5379
Vinsert
p45706
I8
VBlock
p45707
tp45708
I1
s(g553
I42
g554
Vinsert
p45709
I45
VStringLiteral: "Actual invocation has different arguments:"
p45710
tp45711
I1
s(g8509
I42
g8510
Vinsert
p45712
I83
VModifier: public
p45713
tp45714
I1
s(g8401
I42
g8402
Vinsert
p45715
I39
VPrimitiveType: void
p45716
tp45717
I3
s(g12710
I42
g12711
Vinsert
p45718
I42
VSimpleName: validateMockingConcreteClass
p45719
tp45720
I1
s(g8372
I42
g8373
Vinsert
p45721
I14
VClassInstanceCreation
p45722
tp45723
I6
s(g2753
I42
g2754
Vinsert
p45724
I8
VBlock
p45725
tp45726
I20
s(g20107
I42
g20108
Vinsert
p45727
I40
VQualifiedName: junit.framework.TestCase.assertEquals
p45728
tp45729
I1
s(g9247
I42
g9248
Vinsert
p45730
I42
VSimpleName: resetReturnValues
p45731
tp45732
I2
s(g4038
I42
g4039
Vinsert
p45733
I42
VSimpleName: Double
p45734
tp45735
I1
s(g5794
I42
g5795
Vinsert
p45736
I42
VSimpleName: cleaner
p45737
tp45738
I1
s(g1249
I42
g1250
Vinsert
p45739
I42
VSimpleName: NoTestsRemainException
p45740
tp45741
I5
s(g6392
I42
g6393
Vinsert
p45742
I45
VStringLiteral: "three and four"
p45743
tp45744
I2
s(g367
I42
g368
Vinsert
p45745
I42
VSimpleName: List
p45746
tp45747
I1
s(g1967
I42
g1968
Vinsert
p45748
I14
VClassInstanceCreation
p45749
tp45750
I2
s(g4077
I42
g4078
Vinsert
p45751
I42
VSimpleName: Sub
p45752
tp45753
I2
s(g1372
I42
g1373
Vinsert
p45754
I83
VModifier: public
p45755
tp45756
I7
s(g1282
I42
g1283
Vinsert
p45757
I59
VVariableDeclarationFragment
p45758
tp45759
I2
s(g3083
I42
g3084
Vinsert
p45760
I44
VSingleVariableDeclaration
p45761
tp45762
I2
s(g3943
I42
g3944
Vinsert
p45763
I40
VQualifiedName: net.bytebuddy.agent.ByteBuddyAgent
p45764
tp45765
I1
s(g29607
I42
g29608
Vinsert
p45766
I42
VSimpleName: notifier
p45767
tp45768
I1
s(g9408
I42
g9409
Vinsert
p45769
I42
VSimpleName: createEnhancer
p45770
tp45771
I1
s(g13161
I42
g13162
Vinsert
p45772
I43
VSimpleType: DefaultImprovements
p45773
tp45774
I1
s(g16663
I42
g16664
Vinsert
p45775
I42
VSimpleName: ASMifierAbstractVisitor
p45776
tp45777
I1
s(g428
I42
g429
Vinsert
p45778
I26
VImportDeclaration
p45779
tp45780
I3
s(g3498
I42
g3499
Vinsert
p45781
I42
VSimpleName: invocationOf
p45782
tp45783
I1
s(g2472
I42
g2473
Vinsert
p45784
I32
VMethodInvocation
p45785
tp45786
I2
s(g1327
I42
g1328
Vinsert
p45787
I43
VSimpleType: CreationValidatorStub
p45788
tp45789
I1
s(g1322
I42
g1323
Vinsert
p45790
I40
VQualifiedName: java.lang.reflect.Method
p45791
tp45792
I1
s(g2005
I42
g2006
Vinsert
p45793
I42
VSimpleName: description
p45794
tp45795
I1
s(g3336
I42
g3337
Vinsert
p45796
I32
VMethodInvocation
p45797
tp45798
I1
s(g4817
I42
g4818
Vinsert
p45799
I14
VClassInstanceCreation
p45800
tp45801
I4
s(g8459
I42
g8460
Vinsert
p45802
I52
VThisExpression
p45803
tp45804
I2
s(g4456
I42
g4457
Vinsert
p45805
I42
VSimpleName: CodeGenerationException
p45806
tp45807
I2
s(g6300
I42
g6301
Vinsert
p45808
I32
VMethodInvocation
p45809
tp45810
I1
s(g2503
I42
g2504
Vinsert
p45811
I40
VQualifiedName: Constants.PRIVATE_FINAL_STATIC
p45812
tp45813
I1
s(g12508
I42
g12509
Vinsert
p45814
I83
VModifier: public
p45815
tp45816
I1
s(g7638
I42
g7639
Vinsert
p45817
I42
VSimpleName: VerificationCollectorImpl
p45818
tp45819
I1
s(g2844
I42
g2845
Vinsert
p45820
I60
VVariableDeclarationStatement
p45821
tp45822
I1
s(g1039
I42
g1040
Vinsert
p45823
I8
VBlock
p45824
tp45825
I1
s(g7849
I42
g7850
Vinsert
p45826
I43
VSimpleType: MockUtil
p45827
tp45828
I4
s(g4784
I42
g4785
Vinsert
p45829
I42
VSimpleName: withSettings
p45830
tp45831
I3
s(g7961
I42
g7962
Vinsert
p45832
I42
VSimpleName: isHashCodeMethod
p45833
tp45834
I1
s(g4934
I42
g4935
Vinsert
p45835
I42
VSimpleName: AnnotationVisitorTee
p45836
tp45837
I1
s(g405
I42
g406
Vinsert
p45838
I83
VModifier: public
p45839
tp45840
I1
s(g1110
I42
g1111
Vinsert
p45841
I42
VSimpleName: lineReader
p45842
tp45843
I1
s(g3699
I42
g3700
Vinsert
p45844
I45
VStringLiteral: "It is forbidden to invoke Mockito.timeout() with negative value."
p45845
tp45846
I1
s(g906
I42
g907
Vinsert
p45847
I74
VParameterizedType: MockFeatures<?>
p45848
tp45849
I1
s(g12183
I42
g12184
Vinsert
p45850
I42
VSimpleName: createMockitoMethodProxy
p45851
tp45852
I1
s(g12337
I42
g12338
Vinsert
p45853
I42
VSimpleName: LinkedList
p45854
tp45855
I1
s(g2005
I42
g2006
Vinsert
p45856
I42
VSimpleName: mock
p45857
tp45858
I1
s(g22492
I42
g22493
Vinsert
p45859
I43
VSimpleType: StackTraceElement
p45860
tp45861
I1
s(g4446
I42
g4447
Vinsert
p45862
I43
VSimpleType: Constructor
p45863
tp45864
I1
s(g3483
I42
g3484
Vinsert
p45865
I21
VExpressionStatement
p45866
tp45867
I3
s(g4968
I42
g4969
Vinsert
p45868
I34
VNumberLiteral: 8240069639250980199L
p45869
tp45870
I1
s(g7572
I42
g7573
Vinsert
p45871
I44
VSingleVariableDeclaration
p45872
tp45873
I2
s(g239
I42
g240
Vinsert
p45874
I43
VSimpleType: MockUtil
p45875
tp45876
I1
s(g16907
I42
g16908
Vinsert
p45877
I42
VSimpleName: fields
p45878
tp45879
I1
s(g2518
I42
g2519
Vinsert
p45880
I42
VSimpleName: answer
p45881
tp45882
I1
s(g6
I42
g7
Vinsert
p45883
I44
VSingleVariableDeclaration
p45884
tp45885
I6
s(g8038
I42
g8039
Vinsert
p45886
I39
VPrimitiveType: int
p45887
tp45888
I1
s(g22136
I42
g22137
Vinsert
p45889
I12
VCatchClause
p45890
tp45891
I1
s(g9395
I42
g9396
Vinsert
p45892
I70
VEnhancedForStatement
p45893
tp45894
I2
s(g5622
I42
g5623
Vinsert
p45895
I41
VReturnStatement
p45896
tp45897
I2
s(g9105
I42
g9106
Vinsert
p45898
I39
VPrimitiveType: void
p45899
tp45900
I1
s(g3527
I42
g3528
Vinsert
p45901
I42
VSimpleName: MethodVisitor
p45902
tp45903
I1
s(g10846
I42
g10847
Vinsert
p45904
I21
VExpressionStatement
p45905
tp45906
I2
s(g4939
I42
g4940
Vinsert
p45907
I43
VSimpleType: MockitoException
p45908
tp45909
I1
s(g3060
I42
g3061
Vinsert
p45910
I14
VClassInstanceCreation
p45911
tp45912
I4
s(g6598
I42
g6599
Vinsert
p45913
I25
VIfStatement
p45914
tp45915
I1
s(g653
I42
g654
Vinsert
p45916
I21
VExpressionStatement
p45917
tp45918
I5
s(g8604
I42
g8605
Vinsert
p45919
I43
VSimpleType: LinkedHashSet
p45920
tp45921
I2
s(g1372
I42
g1373
Vinsert
p45922
I42
VSimpleName: run
p45923
tp45924
I5
s(g1398
I42
g1399
Vinsert
p45925
I32
VMethodInvocation
p45926
tp45927
I7
s(g4111
I42
g4112
Vinsert
p45928
I41
VReturnStatement
p45929
tp45930
I1
s(g6771
I42
g6772
Vinsert
p45931
I43
VSimpleType: MockingProgress
p45932
tp45933
I1
s(g21782
I42
g21783
Vinsert
p45934
I42
VSimpleName: Integer
p45935
tp45936
I1
s(g13139
I42
g13140
Vinsert
p45937
I74
VParameterizedType: Class<T>
p45938
tp45939
I1
s(g13950
I42
g13951
Vinsert
p45940
I43
VSimpleType: MockHandler
p45941
tp45942
I2
s(g12213
I42
g12214
Vinsert
p45943
I42
VSimpleName: omit
p45944
tp45945
I1
s(g79
I42
g80
Vinsert
p45946
I42
VSimpleName: toString
p45947
tp45948
I2
s(g15198
I42
g15199
Vinsert
p45949
I42
VSimpleName: field2
p45950
tp45951
I1
s(g10319
I42
g10320
Vinsert
p45952
I42
VSimpleName: file
p45953
tp45954
I1
s(g4258
I42
g4259
Vinsert
p45955
I42
VSimpleName: ret
p45956
tp45957
I4
s(g7763
I42
g7764
Vinsert
p45958
I27
VInfixExpression: -
p45959
tp45960
I1
s(g5744
I42
g5745
Vinsert
p45961
I43
VSimpleType: Object
p45962
tp45963
I1
s(g7859
I42
g7860
Vinsert
p45964
I42
VSimpleName: report
p45965
tp45966
I3
s(g6138
I42
g6139
Vinsert
p45967
I42
VSimpleName: spyTypeIsAbstract
p45968
tp45969
I1
s(g12528
I42
g12529
Vinsert
p45970
I74
VParameterizedType: Answer<Object>
p45971
tp45972
I1
s(g806
I42
g807
Vinsert
p45973
I59
VVariableDeclarationFragment
p45974
tp45975
I1
s(g19009
I42
g19010
Vinsert
p45976
I42
VSimpleName: innerName
p45977
tp45978
I1
s(g6791
I42
g6792
Vinsert
p45979
I44
VSingleVariableDeclaration
p45980
tp45981
I5
s(g2180
I42
g2181
Vinsert
p45982
I45
VStringLiteral: "woof"
p45983
tp45984
I1
s(g21083
I42
g21084
Vinsert
p45985
I42
VSimpleName: Strictly
p45986
tp45987
I6
s(g12287
I42
g12288
Vinsert
p45988
I42
VSimpleName: testNG
p45989
tp45990
I2
s(g30184
I42
g30185
Vinsert
p45991
I42
VSimpleName: finder
p45992
tp45993
I3
s(g4158
I42
g4159
Vinsert
p45994
I80
VMemberValuePair
p45995
tp45996
I1
s(g14245
I42
g14246
Vinsert
p45997
I40
VQualifiedName: org.hamcrest.StringDescription
p45998
tp45999
I1
s(g5776
I42
g5777
Vinsert
p46000
I43
VSimpleType: Exception
p46001
tp46002
I4
s(g9990
I42
g9991
Vinsert
p46003
I42
VSimpleName: or
p46004
tp46005
I1
s(g7526
I42
g7527
Vinsert
p46006
I59
VVariableDeclarationFragment
p46007
tp46008
I1
s(g8716
I42
g8717
Vinsert
p46009
I42
VSimpleName: list
p46010
tp46011
I1
s(g5237
I42
g5238
Vinsert
p46012
I42
VSimpleName: setStubbingListener
p46013
tp46014
I1
s(g14352
I42
g14353
Vinsert
p46015
I42
VSimpleName: Object
p46016
tp46017
I1
s(g22880
I42
g22881
Vinsert
p46018
I13
VCharacterLiteral: ')'
p46019
tp46020
I1
s(g6786
I42
g6787
Vinsert
p46021
I43
VSimpleType: ClassLoader
p46022
tp46023
I1
s(g6103
I42
g6104
Vinsert
p46024
I21
VExpressionStatement
p46025
tp46026
I1
s(g11141
I42
g11142
Vinsert
p46027
I42
VSimpleName: ArgumentCaptor
p46028
tp46029
I2
s(g4022
I42
g4023
Vinsert
p46030
I7
VAssignment: =
p46031
tp46032
I1
s(g1312
I42
g1313
Vinsert
p46033
I42
VSimpleName: InlineByteBuddyMockMaker
p46034
tp46035
I1
s(g7416
I42
g7417
Vinsert
p46036
I43
VSimpleType: MockitoException
p46037
tp46038
I1
s(g5461
I42
g5462
Vinsert
p46039
I83
VModifier: final
p46040
tp46041
I1
s(g7790
I42
g7791
Vinsert
p46042
I42
VSimpleName: awaitingInjectionClazz
p46043
tp46044
I2
s(g5169
I42
g5170
Vinsert
p46045
I74
VParameterizedType: List<Object>
p46046
tp46047
I1
s(g10037
I42
g10038
Vinsert
p46048
I34
VNumberLiteral: 1
p46049
tp46050
I3
s(g4638
I42
g4639
Vinsert
p46051
I42
VSimpleName: Foo
p46052
tp46053
I2
s(g3298
I42
g3299
Vinsert
p46054
I42
VSimpleName: classToMock
p46055
tp46056
I1
s(g5939
I42
g5940
Vinsert
p46057
I42
VSimpleName: printStream
p46058
tp46059
I3
s(g3144
I42
g3145
Vinsert
p46060
I42
VSimpleName: fails
p46061
tp46062
I1
s(g5305
I42
g5306
Vinsert
p46063
I42
VSimpleName: typeDescription
p46064
tp46065
I1
s(g2227
I42
g2228
Vinsert
p46066
I42
VSimpleName: T
p46067
tp46068
I1
s(g5216
I42
g5217
Vinsert
p46069
I59
VVariableDeclarationFragment
p46070
tp46071
I1
s(g11524
I42
g11525
Vinsert
p46072
I42
VSimpleName: mock
p46073
tp46074
I1
s(g12528
I42
g12529
Vinsert
p46075
I43
VSimpleType: Answer
p46076
tp46077
I1
s(g2908
I42
g2909
Vinsert
p46078
I8
VBlock
p46079
tp46080
I1
s(g2988
I42
g2989
Vinsert
p46081
I7
VAssignment: =
p46082
tp46083
I4
s(g25131
I42
g25132
Vinsert
p46084
I39
VPrimitiveType: void
p46085
tp46086
I1
s(g8082
I42
g8083
Vinsert
p46087
I42
VSimpleName: lock
p46088
tp46089
I1
s(g5033
I42
g5034
Vinsert
p46090
I27
VInfixExpression: ||
p46091
tp46092
I3
s(g9196
I42
g9197
Vinsert
p46093
I59
VVariableDeclarationFragment
p46094
tp46095
I14
s(g4952
I42
g4953
Vinsert
p46096
I83
VModifier: protected
p46097
tp46098
I1
s(g5647
I42
g5648
Vinsert
p46099
I40
VQualifiedName: System.out
p46100
tp46101
I1
s(g2652
I42
g2653
Vinsert
p46102
I43
VSimpleType: Method
p46103
tp46104
I1
s(g6566
I42
g6567
Vinsert
p46105
I42
VSimpleName: ArgumentCaptor
p46106
tp46107
I6
s(g7004
I42
g7005
Vinsert
p46108
I42
VSimpleName: answer
p46109
tp46110
I2
s(g15534
I42
g15535
Vinsert
p46111
I21
VExpressionStatement
p46112
tp46113
I3
s(g6725
I42
g6726
Vinsert
p46114
I77
VNormalAnnotation
p46115
tp46116
I1
s(g179
I42
g180
Vinsert
p46117
I43
VSimpleType: Invocation
p46118
tp46119
I4
s(g5151
I42
g5152
Vinsert
p46120
I43
VSimpleType: MockitoGenericMetadata
p46121
tp46122
I2
s(g2281
I42
g2282
Vinsert
p46123
I32
VMethodInvocation
p46124
tp46125
I1
s(g7263
I42
g7264
Vinsert
p46126
I57
VTypeLiteral
p46127
tp46128
I1
s(g11206
I42
g11207
Vinsert
p46129
I44
VSingleVariableDeclaration
p46130
tp46131
I1
s(g1204
I42
g1205
Vinsert
p46132
I39
VPrimitiveType: boolean
p46133
tp46134
I1
s(g1059
I42
g1060
Vinsert
p46135
I42
VSimpleName: String
p46136
tp46137
I2
s(g4848
I42
g4849
Vinsert
p46138
I42
VSimpleName: ResetMocksInParentTestClassTooTest
p46139
tp46140
I1
s(g7124
I42
g7125
Vinsert
p46141
I21
VExpressionStatement
p46142
tp46143
I3
s(g18840
I42
g18841
Vinsert
p46144
I42
VSimpleName: String
p46145
tp46146
I5
s(g372
I42
g373
Vinsert
p46147
I43
VSimpleType: StubberImpl
p46148
tp46149
I1
s(g1949
I42
g1950
Vinsert
p46150
I78
VMarkerAnnotation
p46151
tp46152
I1
s(g2222
I42
g2223
Vinsert
p46153
I59
VVariableDeclarationFragment
p46154
tp46155
I4
s(g7859
I42
g7860
Vinsert
p46156
I60
VVariableDeclarationStatement
p46157
tp46158
I1
s(g8329
I42
g8330
Vinsert
p46159
I42
VSimpleName: ClassProvider
p46160
tp46161
I2
s(g438
I42
g439
Vinsert
p46162
I25
VIfStatement
p46163
tp46164
I2
s(g16418
I42
g16419
Vinsert
p46165
I42
VSimpleName: constructor
p46166
tp46167
I2
s(g6403
I42
g6404
Vinsert
p46168
I42
VSimpleName: VerificationStartedEvent
p46169
tp46170
I1
s(g4924
I42
g4925
Vinsert
p46171
I43
VSimpleType: Object
p46172
tp46173
I7
s(g1795
I42
g1796
Vinsert
p46174
I57
VTypeLiteral
p46175
tp46176
I1
s(g3298
I42
g3299
Vinsert
p46177
I42
VSimpleName: validateType
p46178
tp46179
I1
s(g17182
I42
g17183
Vinsert
p46180
I42
VSimpleName: Object
p46181
tp46182
I1
s(g5599
I42
g5600
Vinsert
p46183
I42
VSimpleName: Attribute
p46184
tp46185
I1
s(g16823
I42
g16824
Vinsert
p46186
I42
VSimpleName: withLongAndInt
p46187
tp46188
I1
s(g901
I42
g902
Vinsert
p46189
I43
VSimpleType: InvocationListener
p46190
tp46191
I1
s(g10324
I42
g10325
Vinsert
p46192
I42
VSimpleName: getStubbings
p46193
tp46194
I1
s(g1380
I42
g1381
Vinsert
p46195
I45
VStringLiteral: "    -> at org.mockitousage.junitrule.StrictJUnitRuleTest.fails_fast_when_stubbing_invoked_with_different_argument(StrictJUnitRuleTest.java:0)\u005cn"
p46196
tp46197
I2
s(g8841
I42
g8842
Vinsert
p46198
I42
VSimpleName: InjectMocks
p46199
tp46200
I1
s(g20322
I42
g20323
Vinsert
p46201
I43
VSimpleType: DontThrow
p46202
tp46203
I2
s(g3160
I42
g3161
Vinsert
p46204
I36
VParenthesizedExpression
p46205
tp46206
I1
s(g747
I42
g748
Vinsert
p46207
I42
VSimpleName: IMethods
p46208
tp46209
I2
s(g3851
I42
g3852
Vinsert
p46210
I42
VSimpleName: CountDownLatch
p46211
tp46212
I2
s(g4981
I42
g4982
Vinsert
p46213
I83
VModifier: static
p46214
tp46215
I1
s(g3473
I42
g3474
Vinsert
p46216
I39
VPrimitiveType: int
p46217
tp46218
I1
s(g4148
I42
g4149
Vinsert
p46219
I42
VSimpleName: process
p46220
tp46221
I1
s(g3280
I42
g3281
Vinsert
p46222
I44
VSingleVariableDeclaration
p46223
tp46224
I3
s(g4082
I42
g4083
Vinsert
p46225
I21
VExpressionStatement
p46226
tp46227
I6
s(g1614
I42
g1615
Vinsert
p46228
I42
VSimpleName: MockitoListener
p46229
tp46230
I1
s(g12872
I42
g12873
Vinsert
p46231
I42
VSimpleName: Boo
p46232
tp46233
I4
s(g12635
I42
g12636
Vinsert
p46234
I42
VSimpleName: Matcher
p46235
tp46236
I1
s(g24277
I42
g24278
Vinsert
p46237
I42
VSimpleName: MockitoJUnitRunner
p46238
tp46239
I2
s(g4861
I42
g4862
Vinsert
p46240
I42
VSimpleName: unused
p46241
tp46242
I1
s(g14642
I42
g14643
Vinsert
p46243
I42
VSimpleName: wanted
p46244
tp46245
I1
s(g1264
I42
g1265
Vinsert
p46246
I42
VSimpleName: withSettings
p46247
tp46248
I1
s(g3473
I42
g3474
Vinsert
p46249
I42
VSimpleName: expectedInvoked
p46250
tp46251
I1
s(g11336
I42
g11337
Vinsert
p46252
I42
VSimpleName: nThreads
p46253
tp46254
I1
s(g19510
I42
g19511
Vinsert
p46255
I42
VSimpleName: String
p46256
tp46257
I1
s(g1815
I42
g1816
Vinsert
p46258
I42
VSimpleName: enhancer
p46259
tp46260
I1
s(g7446
I42
g7447
Vinsert
p46261
I42
VSimpleName: assertEquals
p46262
tp46263
I2
s(g7416
I42
g7417
Vinsert
p46264
I8
VBlock
p46265
tp46266
I1
s(g17616
I42
g17617
Vinsert
p46267
I45
VStringLiteral: "Sub.say(class java.lang.Object)"
p46268
tp46269
I1
s(g2565
I42
g2566
Vinsert
p46270
I42
VSimpleName: finder
p46271
tp46272
I2
s(g896
I42
g897
Vinsert
p46273
I42
VSimpleName: InputStream
p46274
tp46275
I2
s(g428
I42
g429
Vinsert
p46276
I42
VSimpleName: Object
p46277
tp46278
I1
s(g1518
I42
g1519
Vinsert
p46279
I42
VSimpleName: Member
p46280
tp46281
I3
s(g11418
I42
g11419
Vinsert
p46282
I43
VSimpleType: MethodInterceptorFilter
p46283
tp46284
I1
s(g5847
I42
g5848
Vinsert
p46285
I42
VSimpleName: target
p46286
tp46287
I1
s(g11984
I42
g11985
Vinsert
p46288
I85
VDimension
p46289
tp46290
I1
s(g297
I42
g298
Vinsert
p46291
I43
VSimpleType: MockName
p46292
tp46293
I1
s(g2526
I42
g2527
Vinsert
p46294
I36
VParenthesizedExpression
p46295
tp46296
I2
s(g2054
I42
g2055
Vinsert
p46297
I42
VSimpleName: InvocationContainerImpl
p46298
tp46299
I2
s(g3601
I42
g3602
Vinsert
p46300
I42
VSimpleName: mock
p46301
tp46302
I1
s(g3165
I42
g3166
Vinsert
p46303
I44
VSingleVariableDeclaration
p46304
tp46305
I2
s(g104
I42
g105
Vinsert
p46306
I40
VQualifiedName: org.mockito.internal.verification.MockAwareVerificationMode
p46307
tp46308
I1
s(g7041
I42
g7042
Vinsert
p46309
I42
VSimpleName: verifyingMode
p46310
tp46311
I2
s(g17584
I42
g17585
Vinsert
p46312
I42
VSimpleName: classToMock
p46313
tp46314
I2
s(g31
I42
g32
Vinsert
p46315
I83
VModifier: public
p46316
tp46317
I2
s(g2788
I42
g2789
Vinsert
p46318
I42
VSimpleName: collectionSize
p46319
tp46320
I1
s(g3293
I42
g3294
Vinsert
p46321
I42
VSimpleName: checkEnd
p46322
tp46323
I1
s(g543
I42
g544
Vinsert
p46324
I53
VThrowStatement
p46325
tp46326
I1
s(g282
I42
g283
Vinsert
p46327
I44
VSingleVariableDeclaration
p46328
tp46329
I1
s(g5549
I42
g5550
Vinsert
p46330
I43
VSimpleType: Number
p46331
tp46332
I1
s(g6962
I42
g6963
Vinsert
p46333
I59
VVariableDeclarationFragment
p46334
tp46335
I1
s(g17574
I42
g17575
Vinsert
p46336
I22
VFieldAccess
p46337
tp46338
I1
s(g8414
I42
g8415
Vinsert
p46339
I42
VSimpleName: expected
p46340
tp46341
I1
s(g2647
I42
g2648
Vinsert
p46342
I42
VSimpleName: Test
p46343
tp46344
I6
s(g2770
I42
g2771
Vinsert
p46345
I25
VIfStatement
p46346
tp46347
I1
s(g209
I42
g210
Vinsert
p46348
I2
VArrayAccess
p46349
tp46350
I3
s(g15179
I42
g15180
Vinsert
p46351
I34
VNumberLiteral: 1
p46352
tp46353
I1
s(g15913
I42
g15914
Vinsert
p46354
I42
VSimpleName: unstubbedInvocations
p46355
tp46356
I1
s(g1706
I42
g1707
Vinsert
p46357
I32
VMethodInvocation
p46358
tp46359
I2
s(g12046
I42
g12047
Vinsert
p46360
I59
VVariableDeclarationFragment
p46361
tp46362
I3
s(g15841
I42
g15842
Vinsert
p46363
I42
VSimpleName: methodName
p46364
tp46365
I1
s(g12427
I42
g12428
Vinsert
p46366
I8
VBlock
p46367
tp46368
I2
s(Vinsert
p46369
I42
VSimpleName: simpleMethod
p46370
Vinsert
p46371
I42
VSimpleName: shouldPointOutStubCalledWithDifferentArg
p46372
tp46373
I1
s(g5789
I42
g5790
Vinsert
p46374
I42
VSimpleName: e
p46375
tp46376
I1
s(g7253
I42
g7254
Vinsert
p46377
I83
VModifier: public
p46378
tp46379
I1
s(g6711
I42
g6712
Vinsert
p46380
I60
VVariableDeclarationStatement
p46381
tp46382
I1
s(g1833
I42
g1834
Vinsert
p46383
I45
VStringLiteral: "withLongAndInt((Integer) 100,  200)"
p46384
tp46385
I1
s(g10354
I42
g10355
Vinsert
p46386
I66
VTextElement: double that has an absolute difference to the given value that is less
p46387
tp46388
I1
s(g3969
I42
g3970
Vinsert
p46389
I42
VSimpleName: NumberOfInvocationsChecker
p46390
tp46391
I2
s(g891
I42
g892
Vinsert
p46392
I43
VSimpleType: UndesiredInvocation
p46393
tp46394
I1
s(g3183
I42
g3184
Vinsert
p46395
I42
VSimpleName: getDeclaredFields
p46396
tp46397
I1
s(g588
I42
g589
Vinsert
p46398
I42
VSimpleName: messageContains
p46399
tp46400
I1
s(g2010
I42
g2011
Vinsert
p46401
I42
VSimpleName: Verifier
p46402
tp46403
I1
s(g1972
I42
g1973
Vinsert
p46404
I43
VSimpleType: InvocationMarker
p46405
tp46406
I1
s(g13345
I42
g13346
Vinsert
p46407
I42
VSimpleName: testStarted
p46408
tp46409
I1
s(g2175
I42
g2176
Vinsert
p46410
I42
VSimpleName: shouldValidateMockWhenVerifyingNoMoreInteractions
p46411
tp46412
I1
s(g4696
I42
g4697
Vinsert
p46413
I42
VSimpleName: error
p46414
tp46415
I1
s(g7780
I42
g7781
Vinsert
p46416
I74
VParameterizedType: Class<?>
p46417
tp46418
I1
s(g322
I42
g323
Vinsert
p46419
I74
VParameterizedType: List<String>
p46420
tp46421
I1
s(g4051
I42
g4052
Vinsert
p46422
I25
VIfStatement
p46423
tp46424
I1
s(g3073
I42
g3074
Vinsert
p46425
I42
VSimpleName: printsVerbosely
p46426
tp46427
I1
s(g16053
I42
g16054
Vinsert
p46428
I32
VMethodInvocation
p46429
tp46430
I3
s(g21782
I42
g21783
Vinsert
p46431
I42
VSimpleName: suspicious
p46432
tp46433
I1
s(g1092
I42
g1093
Vinsert
p46434
I42
VSimpleName: findMatchingChunk
p46435
tp46436
I2
s(g5335
I42
g5336
Vinsert
p46437
I32
VMethodInvocation
p46438
tp46439
I3
s(g6103
I42
g6104
Vinsert
p46440
I39
VPrimitiveType: boolean
p46441
tp46442
I1
s(g10794
I42
g10795
Vinsert
p46443
I42
VSimpleName: invocation
p46444
tp46445
I1
s(g1683
I42
g1684
Vinsert
p46446
I42
VSimpleName: WeakReference
p46447
tp46448
I1
s(g5530
I42
g5531
Vinsert
p46449
I42
VSimpleName: ctr
p46450
tp46451
I1
s(g3308
I42
g3309
Vinsert
p46452
I42
VSimpleName: getLastInvocation
p46453
tp46454
I1
s(g1614
I42
g1615
Vinsert
p46455
I42
VSimpleName: mockingProgress
p46456
tp46457
I1
s(g8716
I42
g8717
Vinsert
p46458
I21
VExpressionStatement
p46459
tp46460
I1
s(g3170
I42
g3171
Vinsert
p46461
I33
VNullLiteral
p46462
tp46463
I2
s(g19074
I42
g19075
Vinsert
p46464
I27
VInfixExpression: ==
p46465
tp46466
I1
s(g3953
I42
g3954
Vinsert
p46467
I42
VSimpleName: invocation
p46468
tp46469
I1
s(g312
I42
g313
Vinsert
p46470
I8
VBlock
p46471
tp46472
I2
s(g6162
I42
g6163
Vinsert
p46473
I32
VMethodInvocation
p46474
tp46475
I1
s(g4871
I42
g4872
Vinsert
p46476
I25
VIfStatement
p46477
tp46478
I2
s(g5939
I42
g5940
Vinsert
p46479
I39
VPrimitiveType: void
p46480
tp46481
I5
s(g8677
I42
g8678
Vinsert
p46482
I42
VSimpleName: value2
p46483
tp46484
I1
s(g801
I42
g802
Vinsert
p46485
I21
VExpressionStatement
p46486
tp46487
I2
s(g5530
I42
g5531
Vinsert
p46488
I42
VSimpleName: Throwable
p46489
tp46490
I1
s(Vinsert
p46491
I42
VSimpleName: simpleMethod
p46492
Vinsert
p46493
I42
VSimpleName: stubbing_mismatch
p46494
tp46495
I1
s(g8647
I42
g8648
Vinsert
p46496
I42
VSimpleName: ensure_cache_returns_different_instance_serializableMode
p46497
tp46498
I1
s(g159
I42
g160
Vinsert
p46499
I31
VMethodDeclaration
p46500
tp46501
I3
s(g4848
I42
g4849
Vinsert
p46502
I42
VSimpleName: ParentTest
p46503
tp46504
I1
s(g811
I42
g812
Vinsert
p46505
I1
VAnonymousClassDeclaration
p46506
tp46507
I1
s(g8493
I42
g8494
Vinsert
p46508
I42
VSimpleName: IMockitoConfiguration
p46509
tp46510
I1
s(g2647
I42
g2648
Vinsert
p46511
I42
VSimpleName: first_test_method_that_uses_captor
p46512
tp46513
I1
s(g3919
I42
g3920
Vinsert
p46514
I42
VSimpleName: assertThat
p46515
tp46516
I1
s(g4730
I42
g4731
Vinsert
p46517
I42
VSimpleName: assertEquals
p46518
tp46519
I3
s(g377
I42
g378
Vinsert
p46520
I43
VSimpleType: Class
p46521
tp46522
I1
s(g4038
I42
g4039
Vinsert
p46523
I25
VIfStatement
p46524
tp46525
I1
s(g25478
I42
g25479
Vinsert
p46526
I42
VSimpleName: assertContains
p46527
tp46528
I5
s(g1548
I42
g1549
Vinsert
p46529
I45
VStringLiteral: "HotSpot"
p46530
tp46531
I1
s(g6574
I42
g6575
Vinsert
p46532
I32
VMethodInvocation
p46533
tp46534
I1
s(Vinsert
p46535
I42
VSimpleName: close
p46536
Vinsert
p46537
I42
VSimpleName: closable
p46538
tp46539
I3
s(g3629
I42
g3630
Vinsert
p46540
I14
VClassInstanceCreation
p46541
tp46542
I1
s(g12809
I42
g12810
Vinsert
p46543
I42
VSimpleName: impl
p46544
tp46545
I1
s(g9095
I42
g9096
Vinsert
p46546
I42
VSimpleName: Exception
p46547
tp46548
I4
s(g7408
I42
g7409
Vinsert
p46549
I8
VBlock
p46550
tp46551
I1
s(g3943
I42
g3944
Vinsert
p46552
I32
VMethodInvocation
p46553
tp46554
I12
s(g3914
I42
g3915
Vinsert
p46555
I39
VPrimitiveType: void
p46556
tp46557
I1
s(g9860
I42
g9861
Vinsert
p46558
I42
VSimpleName: getSimpleName
p46559
tp46560
I3
s(g765
I42
g766
Vinsert
p46561
I31
VMethodDeclaration
p46562
tp46563
I1
s(g9413
I42
g9414
Vinsert
p46564
I32
VMethodInvocation
p46565
tp46566
I6
s(g27767
I42
g27768
Vinsert
p46567
I42
VSimpleName: MockitoException
p46568
tp46569
I1
s(g8978
I42
g8979
Vinsert
p46570
I34
VNumberLiteral: 234234
p46571
tp46572
I1
s(g3570
I42
g3571
Vinsert
p46573
I32
VMethodInvocation
p46574
tp46575
I1
s(g4072
I42
g4073
Vinsert
p46576
I21
VExpressionStatement
p46577
tp46578
I4
s(g4168
I42
g4169
Vinsert
p46579
I42
VSimpleName: cv
p46580
tp46581
I2
s(g9758
I42
g9759
Vinsert
p46582
I27
VInfixExpression: >
p46583
tp46584
I1
s(g861
I42
g862
Vinsert
p46585
I21
VExpressionStatement
p46586
tp46587
I5
s(g4106
I42
g4107
Vinsert
p46588
I43
VSimpleType: SelfDescribing
p46589
tp46590
I1
s(g3421
I42
g3422
Vinsert
p46591
I65
VTagElement: @param
p46592
tp46593
I1
s(g12877
I42
g12878
Vinsert
p46594
I42
VSimpleName: PublicClass
p46595
tp46596
I1
s(g99
I42
g100
Vinsert
p46597
I52
VThisExpression
p46598
tp46599
I1
s(g405
I42
g406
Vinsert
p46600
I32
VMethodInvocation
p46601
tp46602
I2
s(g15351
I42
g15352
Vinsert
p46603
I42
VSimpleName: ThreadSafeMockingProgress
p46604
tp46605
I2
s(g12846
I42
g12847
Vinsert
p46606
I42
VSimpleName: info
p46607
tp46608
I1
s(g3565
I42
g3566
Vinsert
p46609
I8
VBlock
p46610
tp46611
I1
s(g4800
I42
g4801
Vinsert
p46612
I43
VSimpleType: MockHandlerImpl
p46613
tp46614
I1
s(g10623
I42
g10624
Vinsert
p46615
I43
VSimpleType: InstanceField
p46616
tp46617
I1
s(g3797
I42
g3798
Vinsert
p46618
I8
VBlock
p46619
tp46620
I4
s(g2139
I42
g2140
Vinsert
p46621
I32
VMethodInvocation
p46622
tp46623
I3
s(g5544
I42
g5545
Vinsert
p46624
I74
VParameterizedType: Class<T>
p46625
tp46626
I4
s(g2070
I42
g2071
Vinsert
p46627
I23
VFieldDeclaration
p46628
tp46629
I3
s(g1129
I42
g1130
Vinsert
p46630
I39
VPrimitiveType: void
p46631
tp46632
I2
s(g13850
I42
g13851
Vinsert
p46633
I42
VSimpleName: returnType
p46634
tp46635
I4
s(g4479
I42
g4480
Vinsert
p46636
I42
VSimpleName: match
p46637
tp46638
I1
s(g14231
I42
g14232
Vinsert
p46639
I45
VStringLiteral: "\u005cn"
p46640
tp46641
I2
s(g6069
I42
g6070
Vinsert
p46642
I42
VSimpleName: should_use_ancillary_Types
p46643
tp46644
I1
s(g5226
I42
g5227
Vinsert
p46645
I43
VSimpleType: Sub
p46646
tp46647
I1
s(g15316
I42
g15317
Vinsert
p46648
I22
VFieldAccess
p46649
tp46650
I1
s(g3680
I42
g3681
Vinsert
p46651
I74
VParameterizedType: ArrayList<Object>
p46652
tp46653
I1
s(g1696
I42
g1697
Vinsert
p46654
I42
VSimpleName: WeakKey
p46655
tp46656
I1
s(g4067
I42
g4068
Vinsert
p46657
I42
VSimpleName: Object
p46658
tp46659
I3
s(g3621
I42
g3622
Vinsert
p46660
I36
VParenthesizedExpression
p46661
tp46662
I1
s(g9434
I42
g9435
Vinsert
p46663
I42
VSimpleName: to
p46664
tp46665
I1
s(g2457
I42
g2458
Vinsert
p46666
I83
VModifier: private
p46667
tp46668
I1
s(g14303
I42
g14304
Vinsert
p46669
I23
VFieldDeclaration
p46670
tp46671
I2
s(g11099
I42
g11100
Vinsert
p46672
I43
VSimpleType: Throwable
p46673
tp46674
I4
s(g3787
I42
g3788
Vinsert
p46675
I42
VSimpleName: MockitoException
p46676
tp46677
I1
s(g21691
I42
g21692
Vinsert
p46678
I32
VMethodInvocation
p46679
tp46680
I3
s(g3735
I42
g3736
Vinsert
p46681
I42
VSimpleName: createProxyClass
p46682
tp46683
I1
s(g821
I42
g822
Vinsert
p46684
I43
VSimpleType: InvocationWithMatchers
p46685
tp46686
I1
s(g966
I42
g967
Vinsert
p46687
I8
VBlock
p46688
tp46689
I1
s(g2667
I42
g2668
Vinsert
p46690
I8
VBlock
p46691
tp46692
I2
s(g10963
I42
g10964
Vinsert
p46693
I43
VSimpleType: List
p46694
tp46695
I1
s(g2616
I42
g2617
Vinsert
p46696
I43
VSimpleType: Class
p46697
tp46698
I1
s(g18290
I42
g18291
Vinsert
p46699
I42
VSimpleName: getClassInfo
p46700
tp46701
I1
s(g3585
I42
g3586
Vinsert
p46702
I66
VTextElement:  The test instance
p46703
tp46704
I1
s(g7041
I42
g7042
Vinsert
p46705
I32
VMethodInvocation
p46706
tp46707
I1
s(g4730
I42
g4731
Vinsert
p46708
I21
VExpressionStatement
p46709
tp46710
I2
s(g2301
I42
g2302
Vinsert
p46711
I59
VVariableDeclarationFragment
p46712
tp46713
I2
s(g189
I42
g190
Vinsert
p46714
I42
VSimpleName: shouldAllowAnyObjectForVarArgsStubbing
p46715
tp46716
I1
s(g3247
I42
g3248
Vinsert
p46717
I14
VClassInstanceCreation
p46718
tp46719
I2
s(g548
I42
g549
Vinsert
p46720
I74
VParameterizedType: Class<?>
p46721
tp46722
I1
s(g19510
I42
g19511
Vinsert
p46723
I45
VStringLiteral: "x"
p46724
tp46725
I1
s(g144
I42
g145
Vinsert
p46726
I21
VExpressionStatement
p46727
tp46728
I1
s(g11942
I42
g11943
Vinsert
p46729
I42
VSimpleName: add
p46730
tp46731
I3
s(g1110
I42
g1111
Vinsert
p46732
I42
VSimpleName: readLine
p46733
tp46734
I1
s(g11214
I42
g11215
Vinsert
p46735
I42
VSimpleName: String
p46736
tp46737
I2
s(g806
I42
g807
Vinsert
p46738
I42
VSimpleName: klass
p46739
tp46740
I2
s(g3792
I42
g3793
Vinsert
p46741
I60
VVariableDeclarationStatement
p46742
tp46743
I1
s(g16232
I42
g16233
Vinsert
p46744
I42
VSimpleName: SmartNullReturnValues
p46745
tp46746
I1
s(g2700
I42
g2701
Vinsert
p46747
I8
VBlock
p46748
tp46749
I2
s(g3565
I42
g3566
Vinsert
p46750
I39
VPrimitiveType: void
p46751
tp46752
I1
s(g8126
I42
g8127
Vinsert
p46753
I43
VSimpleType: Throwable
p46754
tp46755
I1
s(g4745
I42
g4746
Vinsert
p46756
I42
VSimpleName: MockitoAnnotationsMockAnnotationProcessor
p46757
tp46758
I1
s(g1264
I42
g1265
Vinsert
p46759
I42
VSimpleName: framework
p46760
tp46761
I1
s(g1972
I42
g1973
Vinsert
p46762
I42
VSimpleName: InvocationMarker
p46763
tp46764
I1
s(g332
I42
g333
Vinsert
p46765
I42
VSimpleName: assertTrue
p46766
tp46767
I1
s(g11066
I42
g11067
Vinsert
p46768
I14
VClassInstanceCreation
p46769
tp46770
I4
s(g3011
I42
g3012
Vinsert
p46771
I42
VSimpleName: compare
p46772
tp46773
I1
s(g7190
I42
g7191
Vinsert
p46774
I43
VSimpleType: HashSet
p46775
tp46776
I1
s(g24930
I42
g24931
Vinsert
p46777
I42
VSimpleName: shouldUseCustomAnnotation
p46778
tp46779
I2
s(g7446
I42
g7447
Vinsert
p46780
I40
VQualifiedName: finderStub.similarToReturn
p46781
tp46782
I1
s(g21982
I42
g21983
Vinsert
p46783
I27
VInfixExpression: !=
p46784
tp46785
I1
s(g3267
I42
g3268
Vinsert
p46786
I32
VMethodInvocation
p46787
tp46788
I2
s(g2718
I42
g2719
Vinsert
p46789
I39
VPrimitiveType: void
p46790
tp46791
I1
s(g4125
I42
g4126
Vinsert
p46792
I34
VNumberLiteral: 100
p46793
tp46794
I2
s(g6143
I42
g6144
Vinsert
p46795
I32
VMethodInvocation
p46796
tp46797
I4
s(g2780
I42
g2781
Vinsert
p46798
I42
VSimpleName: mockTwo
p46799
tp46800
I1
s(g15351
I42
g15352
Vinsert
p46801
I60
VVariableDeclarationStatement
p46802
tp46803
I1
s(g8509
I42
g8510
Vinsert
p46804
I66
VTextElement: provide more specific description of the matcher (useful when
p46805
tp46806
I1
s(g3735
I42
g3736
Vinsert
p46807
I36
VParenthesizedExpression
p46808
tp46809
I1
s(g4595
I42
g4596
Vinsert
p46810
I66
VTextElement:  number of invocations to verify
p46811
tp46812
I1
s(g10465
I42
g10466
Vinsert
p46813
I42
VSimpleName: Field
p46814
tp46815
I1
s(g16449
I42
g16450
Vinsert
p46816
I42
VSimpleName: reader
p46817
tp46818
I1
s(g8353
I42
g8354
Vinsert
p46819
I59
VVariableDeclarationFragment
p46820
tp46821
I8
s(g1614
I42
g1615
Vinsert
p46822
I69
VMethodRefParameter
p46823
tp46824
I1
s(g1553
I42
g1554
Vinsert
p46825
I42
VSimpleName: Pattern
p46826
tp46827
I5
s(g1274
I42
g1275
Vinsert
p46828
I42
VSimpleName: Object
p46829
tp46830
I1
s(g8493
I42
g8494
Vinsert
p46831
I14
VClassInstanceCreation
p46832
tp46833
I1
s(g6416
I42
g6417
Vinsert
p46834
I42
VSimpleName: mock
p46835
tp46836
I2
s(g5237
I42
g5238
Vinsert
p46837
I42
VSimpleName: listener
p46838
tp46839
I1
s(g3183
I42
g3184
Vinsert
p46840
I42
VSimpleName: isAnnotationPresent
p46841
tp46842
I1
s(g2301
I42
g2302
Vinsert
p46843
I57
VTypeLiteral
p46844
tp46845
I2
s(g956
I42
g957
Vinsert
p46846
I42
VSimpleName: Runnable
p46847
tp46848
I1
s(g2916
I42
g2917
Vinsert
p46849
I42
VSimpleName: anyObject
p46850
tp46851
I1
s(g9821
I42
g9822
Vinsert
p46852
I42
VSimpleName: toByteArray
p46853
tp46854
I1
s(Vinsert
p46855
I42
VSimpleName: verify
p46856
Vinsert
p46857
I57
VTypeLiteral
p46858
tp46859
I5
s(g593
I42
g594
Vinsert
p46860
I43
VSimpleType: BDDStubberImpl
p46861
tp46862
I1
s(g588
I42
g589
Vinsert
p46863
I21
VExpressionStatement
p46864
tp46865
I1
s(g1069
I42
g1070
Vinsert
p46866
I44
VSingleVariableDeclaration
p46867
tp46868
I1
s(g4077
I42
g4078
Vinsert
p46869
I60
VVariableDeclarationStatement
p46870
tp46871
I2
s(g20085
I42
g20086
Vinsert
p46872
I27
VInfixExpression: +
p46873
tp46874
I2
s(g3864
I42
g3865
Vinsert
p46875
I44
VSingleVariableDeclaration
p46876
tp46877
I5
s(g5321
I42
g5322
Vinsert
p46878
I42
VSimpleName: GenericsSelfReference
p46879
tp46880
I1
s(g3331
I42
g3332
Vinsert
p46881
I25
VIfStatement
p46882
tp46883
I1
s(g21094
I42
g21095
Vinsert
p46884
I54
VTryStatement
p46885
tp46886
I4
s(g1944
I42
g1945
Vinsert
p46887
I42
VSimpleName: invocations
p46888
tp46889
I1
s(g9021
I42
g9022
Vinsert
p46890
I60
VVariableDeclarationStatement
p46891
tp46892
I1
s(g5847
I42
g5848
Vinsert
p46893
I45
VStringLiteral: "', \u005cn"
p46894
tp46895
I1
s(g13622
I42
g13623
Vinsert
p46896
I16
VConditionalExpression
p46897
tp46898
I1
s(g6781
I42
g6782
Vinsert
p46899
I31
VMethodDeclaration
p46900
tp46901
I1
s(g3830
I42
g3831
Vinsert
p46902
I43
VSimpleType: String
p46903
tp46904
I1
s(g19469
I42
g19470
Vinsert
p46905
I42
VSimpleName: concat
p46906
tp46907
I1
s(g618
I42
g619
Vinsert
p46908
I54
VTryStatement
p46909
tp46910
I1
s(g4973
I42
g4974
Vinsert
p46911
I7
VAssignment: =
p46912
tp46913
I1
s(g14566
I42
g14567
Vinsert
p46914
I42
VSimpleName: expectedException
p46915
tp46916
I1
s(g1347
I42
g1348
Vinsert
p46917
I42
VSimpleName: Object
p46918
tp46919
I5
s(g2552
I42
g2553
Vinsert
p46920
I21
VExpressionStatement
p46921
tp46922
I3
s(g29474
I42
g29475
Vinsert
p46923
I45
VStringLiteral: "The field '"
p46924
tp46925
I1
s(g2557
I42
g2558
Vinsert
p46926
I43
VSimpleType: Contribution
p46927
tp46928
I1
s(g13975
I42
g13976
Vinsert
p46929
I43
VSimpleType: IMethods
p46930
tp46931
I2
s(g3224
I42
g3225
Vinsert
p46932
I42
VSimpleName: addThrowable
p46933
tp46934
I1
s(g6535
I42
g6536
Vinsert
p46935
I83
VModifier: public
p46936
tp46937
I1
s(g2180
I42
g2181
Vinsert
p46938
I42
VSimpleName: willCallRealMethod
p46939
tp46940
I1
s(g10567
I42
g10568
Vinsert
p46941
I43
VSimpleType: Class
p46942
tp46943
I1
s(g16897
I42
g16898
Vinsert
p46944
I42
VSimpleName: mockitoOngoingStubbing
p46945
tp46946
I1
s(g14223
I42
g14224
Vinsert
p46947
I22
VFieldAccess
p46948
tp46949
I1
s(g4484
I42
g4485
Vinsert
p46950
I43
VSimpleType: LinkedList
p46951
tp46952
I2
s(g861
I42
g862
Vinsert
p46953
I39
VPrimitiveType: void
p46954
tp46955
I3
s(g25187
I42
g25188
Vinsert
p46956
I76
VWildcardType: ?
p46957
tp46958
I1
s(g23848
I42
g23849
Vinsert
p46959
I42
VSimpleName: name
p46960
tp46961
I1
s(g10048
I42
g10049
Vinsert
p46962
I39
VPrimitiveType: void
p46963
tp46964
I1
s(g4638
I42
g4639
Vinsert
p46965
I60
VVariableDeclarationStatement
p46966
tp46967
I3
s(g3792
I42
g3793
Vinsert
p46968
I32
VMethodInvocation
p46969
tp46970
I5
s(g10767
I42
g10768
Vinsert
p46971
I43
VSimpleType: ArgumentCaptor
p46972
tp46973
I1
s(g3073
I42
g3074
Vinsert
p46974
I42
VSimpleName: toPrintVerbosely
p46975
tp46976
I1
s(g6048
I42
g6049
Vinsert
p46977
I39
VPrimitiveType: char
p46978
tp46979
I1
s(g12715
I42
g12716
Vinsert
p46980
I42
VSimpleName: HashMap
p46981
tp46982
I3
s(g11434
I42
g11435
Vinsert
p46983
I43
VSimpleType: MockitoMatcher
p46984
tp46985
I1
s(g2429
I42
g2430
Vinsert
p46986
I42
VSimpleName: c
p46987
tp46988
I1
s(g6882
I42
g6883
Vinsert
p46989
I43
VSimpleType: Set
p46990
tp46991
I1
s(g347
I42
g348
Vinsert
p46992
I40
VQualifiedName: TypeDescription.ForLoadedType
p46993
tp46994
I1
s(g12726
I42
g12727
Vinsert
p46995
I42
VSimpleName: should_print_if_method_has_not_been_stubbed
p46996
tp46997
I1
s(g4300
I42
g4301
Vinsert
p46998
I57
VTypeLiteral
p46999
tp47000
I4
s(g8973
I42
g8974
Vinsert
p47001
I42
VSimpleName: booleanThat
p47002
tp47003
I1
s(g1462
I42
g1463
Vinsert
p47004
I42
VSimpleName: get
p47005
tp47006
I1
s(g18840
I42
g18841
Vinsert
p47007
I23
VFieldDeclaration
p47008
tp47009
I2
s(g1683
I42
g1684
Vinsert
p47010
I43
VSimpleType: Class
p47011
tp47012
I1
s(g8986
I42
g8987
Vinsert
p47013
I42
VSimpleName: clazz
p47014
tp47015
I1
s(g6056
I42
g6057
Vinsert
p47016
I8
VBlock
p47017
tp47018
I10
s(g12231
I42
g12232
Vinsert
p47019
I42
VSimpleName: useConstructor
p47020
tp47021
I1
s(g18110
I42
g18111
Vinsert
p47022
I42
VSimpleName: test
p47023
tp47024
I3
s(g3106
I42
g3107
Vinsert
p47025
I42
VSimpleName: invocations
p47026
tp47027
I1
s(g8062
I42
g8063
Vinsert
p47028
I21
VExpressionStatement
p47029
tp47030
I2
s(g11012
I42
g11013
Vinsert
p47031
I59
VVariableDeclarationFragment
p47032
tp47033
I1
s(g23840
I42
g23841
Vinsert
p47034
I42
VSimpleName: fooMock
p47035
tp47036
I1
s(g1901
I42
g1902
Vinsert
p47037
I14
VClassInstanceCreation
p47038
tp47039
I1
s(g20866
I42
g20867
Vinsert
p47040
I44
VSingleVariableDeclaration
p47041
tp47042
I2
s(g6476
I42
g6477
Vinsert
p47043
I83
VModifier: private
p47044
tp47045
I1
s(g22800
I42
g22801
Vinsert
p47046
I42
VSimpleName: types
p47047
tp47048
I1
s(g1619
I42
g1620
Vinsert
p47049
I42
VSimpleName: foo
p47050
tp47051
I1
s(g20513
I42
g20514
Vinsert
p47052
I40
VQualifiedName: access.length
p47053
tp47054
I1
s(g2364
I42
g2365
Vinsert
p47055
I31
VMethodDeclaration
p47056
tp47057
I1
s(g2939
I42
g2940
Vinsert
p47058
I39
VPrimitiveType: long
p47059
tp47060
I2
s(g2876
I42
g2877
Vinsert
p47061
I38
VPrefixExpression: !
p47062
tp47063
I1
s(g5512
I42
g5513
Vinsert
p47064
I42
VSimpleName: DelayedExecution
p47065
tp47066
I1
s(g4745
I42
g4746
Vinsert
p47067
I83
VModifier: public
p47068
tp47069
I2
s(g473
I42
g474
Vinsert
p47070
I60
VVariableDeclarationStatement
p47071
tp47072
I2
s(g841
I42
g842
Vinsert
p47073
I42
VSimpleName: Stubber
p47074
tp47075
I1
s(g4714
I42
g4715
Vinsert
p47076
I42
VSimpleName: Object
p47077
tp47078
I4
s(g12122
I42
g12123
Vinsert
p47079
I42
VSimpleName: format
p47080
tp47081
I1
s(g7253
I42
g7254
Vinsert
p47082
I42
VSimpleName: of
p47083
tp47084
I1
s(g342
I42
g343
Vinsert
p47085
I32
VMethodInvocation
p47086
tp47087
I1
s(g4143
I42
g4144
Vinsert
p47088
I42
VSimpleName: shouldMarkVerifiedWhenMarkedVerifiedInOrder
p47089
tp47090
I1
s(g11353
I42
g11354
Vinsert
p47091
I8
VBlock
p47092
tp47093
I5
s(g12226
I42
g12227
Vinsert
p47094
I42
VSimpleName: From
p47095
tp47096
I1
s(g15804
I42
g15805
Vinsert
p47097
I54
VTryStatement
p47098
tp47099
I1
s(g13950
I42
g13951
Vinsert
p47100
I42
VSimpleName: delegate
p47101
tp47102
I1
s(g32149
I42
g32150
Vinsert
p47103
I42
VSimpleName: simpleMethod
p47104
tp47105
I27
s(g18366
I42
g18367
Vinsert
p47106
I42
VSimpleName: array
p47107
tp47108
I1
s(g3431
I42
g3432
Vinsert
p47109
I66
VTextElement: IO utils. A bit of reinventing the wheel but we don't want extra dependencies at this stage and we want to be java.
p47110
tp47111
I1
s(g38448
I42
g38449
Vinsert
p47112
I42
VSimpleName: doThrow
p47113
tp47114
I3
s(g3807
I42
g3808
Vinsert
p47115
I43
VSimpleType: GlobalConfiguration
p47116
tp47117
I1
s(Vinsert
p47118
I42
VSimpleName: simpleMethod
p47119
Vinsert
p47120
I42
VSimpleName: shouldReturnConsecutiveValuesSetByShortenThenReturnMethodAndThrowException
p47121
tp47122
I1
s(g6035
I42
g6036
Vinsert
p47123
I42
VSimpleName: getInternalState
p47124
tp47125
I2
s(g1563
I42
g1564
Vinsert
p47126
I42
VSimpleName: invocation
p47127
tp47128
I1
s(g6815
I42
g6816
Vinsert
p47129
I14
VClassInstanceCreation
p47130
tp47131
I2
s(g2286
I42
g2287
Vinsert
p47132
I40
VQualifiedName: org.mockito.internal.configuration.InjectingAnnotationEngine
p47133
tp47134
I1
s(g916
I42
g917
Vinsert
p47135
I8
VBlock
p47136
tp47137
I1
s(g2398
I42
g2399
Vinsert
p47138
I42
VSimpleName: Spec
p47139
tp47140
I1
s(g3616
I42
g3617
Vinsert
p47141
I34
VNumberLiteral: 1
p47142
tp47143
I1
s(g9739
I42
g9740
Vinsert
p47144
I42
VSimpleName: ThrowableAssert
p47145
tp47146
I1
s(g4001
I42
g4002
Vinsert
p47147
I42
VSimpleName: ThrowingConstructorClass
p47148
tp47149
I1
s(g14754
I42
g14755
Vinsert
p47150
I42
VSimpleName: isLastStackElementToRemove
p47151
tp47152
I2
s(g10651
I42
g10652
Vinsert
p47153
I54
VTryStatement
p47154
tp47155
I1
s(g19136
I42
g19137
Vinsert
p47156
I42
VSimpleName: Object
p47157
tp47158
I3
s(g8393
I42
g8394
Vinsert
p47159
I42
VSimpleName: Class
p47160
tp47161
I1
s(g23735
I42
g23736
Vinsert
p47162
I4
VArrayInitializer
p47163
tp47164
I1
s(g20458
I42
g20459
Vinsert
p47165
I73
VTypeParameter
p47166
tp47167
I1
s(g20322
I42
g20323
Vinsert
p47168
I11
VCastExpression
p47169
tp47170
I1
s(g42265
I42
g42266
Vinsert
p47171
I42
VSimpleName: unique
p47172
tp47173
I1
s(g7213
I42
g7214
Vinsert
p47174
I42
VSimpleName: method
p47175
tp47176
I1
s(g21977
I42
g21978
Vinsert
p47177
I21
VExpressionStatement
p47178
tp47179
I2
s(g184
I42
g185
Vinsert
p47180
I42
VSimpleName: VerificationModeImpl
p47181
tp47182
I1
s(g608
I42
g609
Vinsert
p47183
I53
VThrowStatement
p47184
tp47185
I1
s(g1775
I42
g1776
Vinsert
p47186
I42
VSimpleName: Throwable
p47187
tp47188
I1
s(g2113
I42
g2114
Vinsert
p47189
I42
VSimpleName: actualCount
p47190
tp47191
I1
s(g3590
I42
g3591
Vinsert
p47192
I42
VSimpleName: RuntimeException
p47193
tp47194
I4
s(g1614
I42
g1615
Vinsert
p47195
I42
VSimpleName: MockitoFramework
p47196
tp47197
I1
s(g17240
I42
g17241
Vinsert
p47198
I39
VPrimitiveType: void
p47199
tp47200
I1
s(g6872
I42
g6873
Vinsert
p47201
I42
VSimpleName: isVerificationStillInProgress
p47202
tp47203
I1
s(g234
I42
g235
Vinsert
p47204
I42
VSimpleName: accept
p47205
tp47206
I1
s(g15523
I42
g15524
Vinsert
p47207
I45
VStringLiteral: "Mocked type must be: "
p47208
tp47209
I2
s(g1477
I42
g1478
Vinsert
p47210
I43
VSimpleType: List
p47211
tp47212
I1
s(g16513
I42
g16514
Vinsert
p47213
I43
VSimpleType: MockitoException
p47214
tp47215
I2
s(g3267
I42
g3268
Vinsert
p47216
I45
VStringLiteral: "    2nd: 2\u005cn"
p47217
tp47218
I1
s(g1627
I42
g1628
Vinsert
p47219
I42
VSimpleName: MILLISECONDS
p47220
tp47221
I1
s(g20722
I42
g20723
Vinsert
p47222
I42
VSimpleName: add
p47223
tp47224
I2
s(g4745
I42
g4746
Vinsert
p47225
I57
VTypeLiteral
p47226
tp47227
I2
s(g10048
I42
g10049
Vinsert
p47228
I42
VSimpleName: list
p47229
tp47230
I1
s(g916
I42
g917
Vinsert
p47231
I44
VSingleVariableDeclaration
p47232
tp47233
I1
s(g1876
I42
g1877
Vinsert
p47234
I43
VSimpleType: Contribution
p47235
tp47236
I1
s(g2321
I42
g2322
Vinsert
p47237
I42
VSimpleName: IMethods
p47238
tp47239
I3
s(g2336
I42
g2337
Vinsert
p47240
I14
VClassInstanceCreation
p47241
tp47242
I1
s(g16067
I42
g16068
Vinsert
p47243
I42
VSimpleName: actual
p47244
tp47245
I2
s(g36764
I42
g36765
Vinsert
p47246
I43
VSimpleType: NaughtyException
p47247
tp47248
I1
s(g19510
I42
g19511
Vinsert
p47249
I8
VBlock
p47250
tp47251
I1
s(g18462
I42
g18463
Vinsert
p47252
I42
VSimpleName: wrongType
p47253
tp47254
I2
s(g204
I42
g205
Vinsert
p47255
I59
VVariableDeclarationFragment
p47256
tp47257
I1
s(g3621
I42
g3622
Vinsert
p47258
I43
VSimpleType: TraceAnnotationVisitor
p47259
tp47260
I1
s(g164
I42
g165
Vinsert
p47261
I42
VSimpleName: text
p47262
tp47263
I1
s(g15836
I42
g15837
Vinsert
p47264
I42
VSimpleName: assumeTrue
p47265
tp47266
I3
s(g292
I42
g293
Vinsert
p47267
I43
VSimpleType: MockitoJUnitRunner
p47268
tp47269
I1
s(g5216
I42
g5217
Vinsert
p47270
I32
VMethodInvocation
p47271
tp47272
I1
s(g5237
I42
g5238
Vinsert
p47273
I42
VSimpleName: ThreadSafeMockingProgress
p47274
tp47275
I1
s(g229
I42
g230
Vinsert
p47276
I32
VMethodInvocation
p47277
tp47278
I2
s(g13345
I42
g13346
Vinsert
p47279
I43
VSimpleType: Exception
p47280
tp47281
I2
s(g1599
I42
g1600
Vinsert
p47282
I70
VEnhancedForStatement
p47283
tp47284
I1
s(g23051
I42
g23052
Vinsert
p47285
I42
VSimpleName: t
p47286
tp47287
I1
s(g14280
I42
g14281
Vinsert
p47288
I42
VSimpleName: Stubber
p47289
tp47290
I2
s(g12737
I42
g12738
Vinsert
p47291
I42
VSimpleName: assertThat
p47292
tp47293
I1
s(g1939
I42
g1940
Vinsert
p47294
I14
VClassInstanceCreation
p47295
tp47296
I1
s(g19066
I42
g19067
Vinsert
p47297
I42
VSimpleName: field
p47298
tp47299
I1
s(g7633
I42
g7634
Vinsert
p47300
I21
VExpressionStatement
p47301
tp47302
I2
s(g4382
I42
g4383
Vinsert
p47303
I42
VSimpleName: ArrayList
p47304
tp47305
I1
s(g4730
I42
g4731
Vinsert
p47306
I42
VSimpleName: shouldDealWithNestedGenerics
p47307
tp47308
I1
s(g20386
I42
g20387
Vinsert
p47309
I40
VQualifiedName: Verification.AT_LEAST
p47310
tp47311
I2
s(g12890
I42
g12891
Vinsert
p47312
I42
VSimpleName: allFieldsInHierarchy
p47313
tp47314
I1
s(g11243
I42
g11244
Vinsert
p47315
I42
VSimpleName: test
p47316
tp47317
I1
s(g1274
I42
g1275
Vinsert
p47318
I41
VReturnStatement
p47319
tp47320
I1
s(g4282
I42
g4283
Vinsert
p47321
I42
VSimpleName: getInstantiator
p47322
tp47323
I1
s(g10971
I42
g10972
Vinsert
p47324
I42
VSimpleName: strictness
p47325
tp47326
I3
s(g3580
I42
g3581
Vinsert
p47327
I42
VSimpleName: closure
p47328
tp47329
I2
s(g24722
I42
g24723
Vinsert
p47330
I44
VSingleVariableDeclaration
p47331
tp47332
I5
s(g6700
I42
g6701
Vinsert
p47333
I43
VSimpleType: Invocation
p47334
tp47335
I2
s(g2281
I42
g2282
Vinsert
p47336
I42
VSimpleName: constructorArgs
p47337
tp47338
I2
s(g33822
I42
g33823
Vinsert
p47339
I42
VSimpleName: desc
p47340
tp47341
I2
s(g2227
I42
g2228
Vinsert
p47342
I74
VParameterizedType: OngoingStubbing<T>
p47343
tp47344
I1
s(g20085
I42
g20086
Vinsert
p47345
I42
VSimpleName: Integer
p47346
tp47347
I2
s(g3580
I42
g3581
Vinsert
p47348
I44
VSingleVariableDeclaration
p47349
tp47350
I2
s(g21395
I42
g21396
Vinsert
p47351
I42
VSimpleName: testClass
p47352
tp47353
I1
s(g3914
I42
g3915
Vinsert
p47354
I42
VSimpleName: fooService
p47355
tp47356
I1
s(g2031
I42
g2032
Vinsert
p47357
I25
VIfStatement
p47358
tp47359
I1
s(g10185
I42
g10186
Vinsert
p47360
I26
VImportDeclaration
p47361
tp47362
I3
s(g5105
I42
g5106
Vinsert
p47363
I42
VSimpleName: expected
p47364
tp47365
I1
s(g14454
I42
g14455
Vinsert
p47366
I42
VSimpleName: throwable
p47367
tp47368
I2
s(g2031
I42
g2032
Vinsert
p47369
I27
VInfixExpression: ==
p47370
tp47371
I1
s(g1234
I42
g1235
Vinsert
p47372
I42
VSimpleName: mockFeatures
p47373
tp47374
I4
s(g4067
I42
g4068
Vinsert
p47375
I43
VSimpleType: Field
p47376
tp47377
I1
s(g18096
I42
g18097
Vinsert
p47378
I42
VSimpleName: Matchers
p47379
tp47380
I2
s(g4952
I42
g4953
Vinsert
p47381
I42
VSimpleName: wrappedVerification
p47382
tp47383
I1
s(g8746
I42
g8747
Vinsert
p47384
I42
VSimpleName: invocation
p47385
tp47386
I1
s(g4072
I42
g4073
Vinsert
p47387
I42
VSimpleName: mock
p47388
tp47389
I3
s(g11984
I42
g11985
Vinsert
p47390
I43
VSimpleType: Serializable
p47391
tp47392
I1
s(g10762
I42
g10763
Vinsert
p47393
I42
VSimpleName: getMethod
p47394
tp47395
I1
s(g6162
I42
g6163
Vinsert
p47396
I8
VBlock
p47397
tp47398
I1
s(g7395
I42
g7396
Vinsert
p47399
I42
VSimpleName: signature
p47400
tp47401
I2
s(g2185
I42
g2186
Vinsert
p47402
I11
VCastExpression
p47403
tp47404
I1
s(g3047
I42
g3048
Vinsert
p47405
I14
VClassInstanceCreation
p47406
tp47407
I1
s(g16449
I42
g16450
Vinsert
p47408
I54
VTryStatement
p47409
tp47410
I1
s(g1264
I42
g1265
Vinsert
p47411
I42
VSimpleName: mock
p47412
tp47413
I2
s(g6587
I42
g6588
Vinsert
p47414
I42
VSimpleName: Invocation
p47415
tp47416
I4
s(g5118
I42
g5119
Vinsert
p47417
I78
VMarkerAnnotation
p47418
tp47419
I1
s(g5047
I42
g5048
Vinsert
p47420
I45
VStringLiteral: "foo"
p47421
tp47422
I1
s(g6252
I42
g6253
Vinsert
p47423
I39
VPrimitiveType: boolean
p47424
tp47425
I1
s(g1274
I42
g1275
Vinsert
p47426
I42
VSimpleName: argumentCaptor
p47427
tp47428
I1
s(g5921
I42
g5922
Vinsert
p47429
I45
VStringLiteral: "whatever"
p47430
tp47431
I1
s(g10586
I42
g10587
Vinsert
p47432
I43
VSimpleType: ExtendedFactory
p47433
tp47434
I1
s(g488
I42
g489
Vinsert
p47435
I42
VSimpleName: MockitoException
p47436
tp47437
I1
s(g1092
I42
g1093
Vinsert
p47438
I60
VVariableDeclarationStatement
p47439
tp47440
I6
s(g8808
I42
g8809
Vinsert
p47441
I42
VSimpleName: begin_method
p47442
tp47443
I1
s(g4768
I42
g4769
Vinsert
p47444
I42
VSimpleName: MockHandler
p47445
tp47446
I1
s(g5138
I42
g5139
Vinsert
p47447
I16
VConditionalExpression
p47448
tp47449
I1
s(g9374
I42
g9375
Vinsert
p47450
I42
VSimpleName: getName
p47451
tp47452
I1
s(g6
I42
g7
Vinsert
p47453
I43
VSimpleType: Throwable
p47454
tp47455
I1
s(g7292
I42
g7293
Vinsert
p47456
I44
VSingleVariableDeclaration
p47457
tp47458
I1
s(g5078
I42
g5079
Vinsert
p47459
I83
VModifier: public
p47460
tp47461
I5
s(g9344
I42
g9345
Vinsert
p47462
I42
VSimpleName: Void
p47463
tp47464
I1
s(g831
I42
g832
Vinsert
p47465
I21
VExpressionStatement
p47466
tp47467
I1
s(g5368
I42
g5369
Vinsert
p47468
I25
VIfStatement
p47469
tp47470
I2
s(g3560
I42
g3561
Vinsert
p47471
I42
VSimpleName: oneSetMock
p47472
tp47473
I1
s(g5408
I42
g5409
Vinsert
p47474
I42
VSimpleName: readReplace
p47475
tp47476
I1
s(g2616
I42
g2617
Vinsert
p47477
I40
VQualifiedName: ClassLoadingStrategy.Default.INJECTION
p47478
tp47479
I1
s(g2010
I42
g2011
Vinsert
p47480
I42
VSimpleName: verifiers
p47481
tp47482
I2
s(g17014
I42
g17015
Vinsert
p47483
I38
VPrefixExpression: !
p47484
tp47485
I2
s(g8588
I42
g8589
Vinsert
p47486
I42
VSimpleName: isEqualTo
p47487
tp47488
I2
s(g8604
I42
g8605
Vinsert
p47489
I11
VCastExpression
p47490
tp47491
I2
s(g9016
I42
g9017
Vinsert
p47492
I32
VMethodInvocation
p47493
tp47494
I45
s(g2261
I42
g2262
Vinsert
p47495
I57
VTypeLiteral
p47496
tp47497
I3
s(g3262
I42
g3263
Vinsert
p47498
I42
VSimpleName: maxNumberOfInvocations
p47499
tp47500
I1
s(g3421
I42
g3422
Vinsert
p47501
I42
VSimpleName: primitiveOrWrapperDefaultValues
p47502
tp47503
I1
s(g7872
I42
g7873
Vinsert
p47504
I42
VSimpleName: mockTwo
p47505
tp47506
I4
s(g826
I42
g827
Vinsert
p47507
I38
VPrefixExpression: !
p47508
tp47509
I6
s(g3055
I42
g3056
Vinsert
p47510
I43
VSimpleType: Object
p47511
tp47512
I1
s(g7017
I42
g7018
Vinsert
p47513
I42
VSimpleName: args
p47514
tp47515
I2
s(g11667
I42
g11668
Vinsert
p47516
I43
VSimpleType: T
p47517
tp47518
I2
s(g15668
I42
g15669
Vinsert
p47519
I42
VSimpleName: assertFalse
p47520
tp47521
I1
s(g9473
I42
g9474
Vinsert
p47522
I43
VSimpleType: FastClass.Generator
p47523
tp47524
I2
s(g4704
I42
g4705
Vinsert
p47525
I43
VSimpleType: PrintSettings
p47526
tp47527
I1
s(g3743
I42
g3744
Vinsert
p47528
I42
VSimpleName: invocations
p47529
tp47530
I1
s(g10252
I42
g10253
Vinsert
p47531
I42
VSimpleName: BeforeClass
p47532
tp47533
I1
s(g11877
I42
g11878
Vinsert
p47534
I32
VMethodInvocation
p47535
tp47536
I9
s(g10126
I42
g10127
Vinsert
p47537
I32
VMethodInvocation
p47538
tp47539
I2
s(g11404
I42
g11405
Vinsert
p47540
I42
VSimpleName: String
p47541
tp47542
I1
s(g2580
I42
g2581
Vinsert
p47543
I42
VSimpleName: thenReturn
p47544
tp47545
I1
s(g18096
I42
g18097
Vinsert
p47546
I42
VSimpleName: resolver
p47547
tp47548
I2
s(g26394
I42
g26395
Vinsert
p47549
I42
VSimpleName: result
p47550
tp47551
I3
s(g29885
I42
g29886
Vinsert
p47552
I42
VSimpleName: throwingListener
p47553
tp47554
I1
s(g18290
I42
g18291
Vinsert
p47555
I42
VSimpleName: invoke
p47556
tp47557
I1
s(g30629
I42
g30630
Vinsert
p47558
I74
VParameterizedType: OngoingStubbing<String>
p47559
tp47560
I1
s(g2743
I42
g2744
Vinsert
p47561
I85
VDimension
p47562
tp47563
I1
s(g13427
I42
g13428
Vinsert
p47564
I42
VSimpleName: inOrder
p47565
tp47566
I2
s(g2616
I42
g2617
Vinsert
p47567
I41
VReturnStatement
p47568
tp47569
I1
s(g5191
I42
g5192
Vinsert
p47570
I43
VSimpleType: Source
p47571
tp47572
I2
s(g8677
I42
g8678
Vinsert
p47573
I50
VSwitchStatement
p47574
tp47575
I1
s(g4871
I42
g4872
Vinsert
p47576
I43
VSimpleType: InvocationInfo
p47577
tp47578
I1
s(g1398
I42
g1399
Vinsert
p47579
I42
VSimpleName: mock
p47580
tp47581
I2
s(g1825
I42
g1826
Vinsert
p47582
I11
VCastExpression
p47583
tp47584
I1
s(g5123
I42
g5124
Vinsert
p47585
I32
VMethodInvocation
p47586
tp47587
I4
s(g11572
I42
g11573
Vinsert
p47588
I85
VDimension
p47589
tp47590
I1
s(g13936
I42
g13937
Vinsert
p47591
I42
VSimpleName: build
p47592
tp47593
I1
s(g7253
I42
g7254
Vinsert
p47594
I65
VTagElement: @return
p47595
tp47596
I1
s(Vinsert
p47597
I42
VSimpleName: filter
p47598
Vinsert
p47599
I42
VSimpleName: shouldIgnoreRunners
p47600
tp47601
I1
s(g3550
I42
g3551
Vinsert
p47602
I42
VSimpleName: RequiresValidState
p47603
tp47604
I1
s(g3242
I42
g3243
Vinsert
p47605
I21
VExpressionStatement
p47606
tp47607
I1
s(g5847
I42
g5848
Vinsert
p47608
I45
VStringLiteral: "Wrong argument on field '"
p47609
tp47610
I1
s(g10265
I42
g10266
Vinsert
p47611
I43
VSimpleType: T
p47612
tp47613
I3
s(g14868
I42
g14869
Vinsert
p47614
I42
VSimpleName: deadline
p47615
tp47616
I3
s(g4226
I42
g4227
Vinsert
p47617
I42
VSimpleName: toInvocation
p47618
tp47619
I1
s(g3303
I42
g3304
Vinsert
p47620
I60
VVariableDeclarationStatement
p47621
tp47622
I1
s(g7302
I42
g7303
Vinsert
p47623
I42
VSimpleName: Mock
p47624
tp47625
I2
s(g7017
I42
g7018
Vinsert
p47626
I43
VSimpleType: Throwable
p47627
tp47628
I3
s(g3659
I42
g3660
Vinsert
p47629
I34
VNumberLiteral: 4596470901191501582L
p47630
tp47631
I1
s(g9207
I42
g9208
Vinsert
p47632
I83
VModifier: public
p47633
tp47634
I2
s(g12872
I42
g12873
Vinsert
p47635
I8
VBlock
p47636
tp47637
I2
s(g638
I42
g639
Vinsert
p47638
I42
VSimpleName: mockNameMatches
p47639
tp47640
I1
s(g2682
I42
g2683
Vinsert
p47641
I42
VSimpleName: mode
p47642
tp47643
I1
s(g3606
I42
g3607
Vinsert
p47644
I59
VVariableDeclarationFragment
p47645
tp47646
I1
s(g17534
I42
g17535
Vinsert
p47647
I43
VSimpleType: MockitoJUnitRunner
p47648
tp47649
I1
s(g13427
I42
g13428
Vinsert
p47650
I59
VVariableDeclarationFragment
p47651
tp47652
I1
s(g15836
I42
g15837
Vinsert
p47653
I42
VSimpleName: withFinal
p47654
tp47655
I2
s(Vinsert
p47656
I42
VSimpleName: matches
p47657
Vinsert
p47658
I34
VNumberLiteral: 1.0
p47659
tp47660
I1
s(g2565
I42
g2566
Vinsert
p47661
I42
VSimpleName: markVerified
p47662
tp47663
I1
s(g2508
I42
g2509
Vinsert
p47664
I43
VSimpleType: ClassVisitor
p47665
tp47666
I1
s(g31499
I42
g31500
Vinsert
p47667
I42
VSimpleName: shouldStubEvenIfSomeMethodsCalledAfterSerialization
p47668
tp47669
I1
s(g2175
I42
g2176
Vinsert
p47670
I80
VMemberValuePair
p47671
tp47672
I1
s(g1179
I42
g1180
Vinsert
p47673
I25
VIfStatement
p47674
tp47675
I8
s(g3659
I42
g3660
Vinsert
p47676
I23
VFieldDeclaration
p47677
tp47678
I1
s(g10091
I42
g10092
Vinsert
p47679
I42
VSimpleName: exceptions
p47680
tp47681
I1
s(g1079
I42
g1080
Vinsert
p47682
I44
VSingleVariableDeclaration
p47683
tp47684
I1
s(g4077
I42
g4078
Vinsert
p47685
I42
VSimpleName: s
p47686
tp47687
I4
s(g3336
I42
g3337
Vinsert
p47688
I42
VSimpleName: Factory
p47689
tp47690
I1
s(g164
I42
g165
Vinsert
p47691
I21
VExpressionStatement
p47692
tp47693
I1
s(g9344
I42
g9345
Vinsert
p47694
I53
VThrowStatement
p47695
tp47696
I1
s(g12287
I42
g12288
Vinsert
p47697
I42
VSimpleName: hasFailure
p47698
tp47699
I1
s(g7867
I42
g7868
Vinsert
p47700
I25
VIfStatement
p47701
tp47702
I4
s(g9912
I42
g9913
Vinsert
p47703
I43
VSimpleType: AClassWithPrivateNoArgConstructor
p47704
tp47705
I1
s(g9601
I42
g9602
Vinsert
p47706
I41
VReturnStatement
p47707
tp47708
I1
s(g6996
I42
g6997
Vinsert
p47709
I42
VSimpleName: spy
p47710
tp47711
I2
s(g5335
I42
g5336
Vinsert
p47712
I42
VSimpleName: mock
p47713
tp47714
I1
s(g14311
I42
g14312
Vinsert
p47715
I42
VSimpleName: isEqualTo
p47716
tp47717
I1
s(g56
I42
g57
Vinsert
p47718
I41
VReturnStatement
p47719
tp47720
I1
s(g1518
I42
g1519
Vinsert
p47721
I42
VSimpleName: arg
p47722
tp47723
I4
s(g6815
I42
g6816
Vinsert
p47724
I32
VMethodInvocation
p47725
tp47726
I7
s(g10987
I42
g10988
Vinsert
p47727
I43
VSimpleType: Object
p47728
tp47729
I1
s(g24865
I42
g24866
Vinsert
p47730
I43
VSimpleType: Object
p47731
tp47732
I1
s(g623
I42
g624
Vinsert
p47733
I42
VSimpleName: wanted
p47734
tp47735
I1
s(g628
I42
g629
Vinsert
p47736
I42
VSimpleName: annotationEngine
p47737
tp47738
I1
s(g737
I42
g738
Vinsert
p47739
I66
VTextElement:  default return value
p47740
tp47741
I2
s(g13540
I42
g13541
Vinsert
p47742
I66
VTextElement:  the prefix for each line to be joined
p47743
tp47744
I1
s(g20934
I42
g20935
Vinsert
p47745
I42
VSimpleName: join
p47746
tp47747
I4
s(g921
I42
g922
Vinsert
p47748
I39
VPrimitiveType: int
p47749
tp47750
I1
s(g10368
I42
g10369
Vinsert
p47751
I43
VSimpleType: Map.Entry
p47752
tp47753
I2
s(g23442
I42
g23443
Vinsert
p47754
I42
VSimpleName: k
p47755
tp47756
I4
s(g986
I42
g987
Vinsert
p47757
I8
VBlock
p47758
tp47759
I1
s(g841
I42
g842
Vinsert
p47760
I32
VMethodInvocation
p47761
tp47762
I2
s(g20357
I42
g20358
Vinsert
p47763
I45
VStringLiteral: "message"
p47764
tp47765
I1
s(g2626
I42
g2627
Vinsert
p47766
I43
VSimpleType: T
p47767
tp47768
I2
s(g12726
I42
g12727
Vinsert
p47769
I43
VSimpleType: Exception
p47770
tp47771
I1
s(g861
I42
g862
Vinsert
p47772
I45
VStringLiteral: "Hey!\u005cn"
p47773
tp47774
I1
s(g16897
I42
g16898
Vinsert
p47775
I73
VTypeParameter
p47776
tp47777
I1
s(g2205
I42
g2206
Vinsert
p47778
I40
VQualifiedName: c.authorName
p47779
tp47780
I1
s(g4125
I42
g4126
Vinsert
p47781
I42
VSimpleName: timeout
p47782
tp47783
I1
s(g94
I42
g95
Vinsert
p47784
I42
VSimpleName: should_report_private_static_abstract_inner_not_supported
p47785
tp47786
I1
s(g20866
I42
g20867
Vinsert
p47787
I42
VSimpleName: closeable
p47788
tp47789
I3
s(g1706
I42
g1707
Vinsert
p47790
I83
VModifier: public
p47791
tp47792
I1
s(g27880
I42
g27881
Vinsert
p47793
I43
VSimpleType: IMethods
p47794
tp47795
I2
s(g5660
I42
g5661
Vinsert
p47796
I43
VSimpleType: IMethods
p47797
tp47798
I2
s(g1087
I42
g1088
Vinsert
p47799
I42
VSimpleName: atLeastOnce
p47800
tp47801
I1
s(g410
I42
g411
Vinsert
p47802
I54
VTryStatement
p47803
tp47804
I1
s(g5575
I42
g5576
Vinsert
p47805
I70
VEnhancedForStatement
p47806
tp47807
I1
s(g26908
I42
g26909
Vinsert
p47808
I42
VSimpleName: shouldReportTooLittleInvocations
p47809
tp47810
I1
s(g3830
I42
g3831
Vinsert
p47811
I42
VSimpleName: getReturnType
p47812
tp47813
I1
s(g2152
I42
g2153
Vinsert
p47814
I42
VSimpleName: MockitoConfiguration
p47815
tp47816
I2
s(g11699
I42
g11700
Vinsert
p47817
I11
VCastExpression
p47818
tp47819
I1
s(g4059
I42
g4060
Vinsert
p47820
I32
VMethodInvocation
p47821
tp47822
I19
s(g6574
I42
g6575
Vinsert
p47823
I43
VSimpleType: Foo
p47824
tp47825
I2
s(g4354
I42
g4355
Vinsert
p47826
I42
VSimpleName: Foo
p47827
tp47828
I4
s(g6771
I42
g6772
Vinsert
p47829
I14
VClassInstanceCreation
p47830
tp47831
I1
s(g3293
I42
g3294
Vinsert
p47832
I42
VSimpleName: visible
p47833
tp47834
I1
s(g30298
I42
g30299
Vinsert
p47835
I34
VNumberLiteral: 8
p47836
tp47837
I1
s(g16587
I42
g16588
Vinsert
p47838
I42
VSimpleName: RealMethod
p47839
tp47840
I1
s(g2131
I42
g2132
Vinsert
p47841
I59
VVariableDeclarationFragment
p47842
tp47843
I1
s(g4763
I42
g4764
Vinsert
p47844
I34
VNumberLiteral: 10
p47845
tp47846
I1
s(g3735
I42
g3736
Vinsert
p47847
I42
VSimpleName: ObjectStreamClass
p47848
tp47849
I1
s(g7356
I42
g7357
Vinsert
p47850
I42
VSimpleName: run
p47851
tp47852
I3
s(g6217
I42
g6218
Vinsert
p47853
I42
VSimpleName: RETURNS_DEEP_STUBS
p47854
tp47855
I1
s(g8808
I42
g8809
Vinsert
p47856
I42
VSimpleName: e
p47857
tp47858
I1
s(g13755
I42
g13756
Vinsert
p47859
I39
VPrimitiveType: void
p47860
tp47861
I1
s(g1332
I42
g1333
Vinsert
p47862
I66
VTextElement: //verification
p47863
tp47864
I1
s(g7403
I42
g7404
Vinsert
p47865
I21
VExpressionStatement
p47866
tp47867
I1
s(g961
I42
g962
Vinsert
p47868
I43
VSimpleType: MockMethodAdvice
p47869
tp47870
I1
s(g12326
I42
g12327
Vinsert
p47871
I74
VParameterizedType: List<Invocation>
p47872
tp47873
I1
s(g22880
I42
g22881
Vinsert
p47874
I25
VIfStatement
p47875
tp47876
I1
s(g3812
I42
g3813
Vinsert
p47877
I42
VSimpleName: nParams
p47878
tp47879
I1
s(g7321
I42
g7322
Vinsert
p47880
I7
VAssignment: =
p47881
tp47882
I1
s(g21
I42
g22
Vinsert
p47883
I42
VSimpleName: MockitoStackTraceMerger
p47884
tp47885
I2
s(g26027
I42
g26028
Vinsert
p47886
I42
VSimpleName: valueFor
p47887
tp47888
I1
s(g1398
I42
g1399
Vinsert
p47889
I60
VVariableDeclarationStatement
p47890
tp47891
I1
s(g13186
I42
g13187
Vinsert
p47892
I42
VSimpleName: FileHasher
p47893
tp47894
I2
s(g20322
I42
g20323
Vinsert
p47895
I43
VSimpleType: InvocationOnMock
p47896
tp47897
I1
s(g15539
I42
g15540
Vinsert
p47898
I52
VThisExpression
p47899
tp47900
I1
s(g7763
I42
g7764
Vinsert
p47901
I42
VSimpleName: lastEndingIndexOfSubList
p47902
tp47903
I1
s(g2054
I42
g2055
Vinsert
p47904
I11
VCastExpression
p47905
tp47906
I1
s(g4539
I42
g4540
Vinsert
p47907
I44
VSingleVariableDeclaration
p47908
tp47909
I1
s(g9239
I42
g9240
Vinsert
p47910
I45
VStringLiteral: "bar"
p47911
tp47912
I1
s(g1558
I42
g1559
Vinsert
p47913
I42
VSimpleName: newValue
p47914
tp47915
I1
s(g15755
I42
g15756
Vinsert
p47916
I43
VSimpleType: AllInvocationsFinder
p47917
tp47918
I4
s(g7390
I42
g7391
Vinsert
p47919
I42
VSimpleName: load_arg
p47920
tp47921
I1
s(g896
I42
g897
Vinsert
p47922
I43
VSimpleType: ByteArrayInputStream
p47923
tp47924
I2
s(g3961
I42
g3962
Vinsert
p47925
I45
VStringLiteral: "\u005cn"
p47926
tp47927
I12
s(g36
I42
g37
Vinsert
p47928
I61
VWhileStatement
p47929
tp47930
I1
s(g3807
I42
g3808
Vinsert
p47931
I59
VVariableDeclarationFragment
p47932
tp47933
I1
s(g4226
I42
g4227
Vinsert
p47934
I59
VVariableDeclarationFragment
p47935
tp47936
I7
s(g27939
I42
g27940
Vinsert
p47937
I42
VSimpleName: simpleMethod
p47938
tp47939
I1
s(g6363
I42
g6364
Vinsert
p47940
I8
VBlock
p47941
tp47942
I3
s(g6043
I42
g6044
Vinsert
p47943
I42
VSimpleName: pluginSwitcher
p47944
tp47945
I4
s(g7638
I42
g7639
Vinsert
p47946
I52
VThisExpression
p47947
tp47948
I1
s(g10175
I42
g10176
Vinsert
p47949
I42
VSimpleName: name
p47950
tp47951
I2
s(g5078
I42
g5079
Vinsert
p47952
I31
VMethodDeclaration
p47953
tp47954
I2
s(Vinsert
p47955
I42
VSimpleName: filter
p47956
Vinsert
p47957
I42
VSimpleName: warnings
p47958
tp47959
I1
s(g4082
I42
g4083
Vinsert
p47960
I31
VMethodDeclaration
p47961
tp47962
I4
s(g5805
I42
g5806
Vinsert
p47963
I42
VSimpleName: out2
p47964
tp47965
I1
s(g1164
I42
g1165
Vinsert
p47966
I42
VSimpleName: Test
p47967
tp47968
I1
s(g7124
I42
g7125
Vinsert
p47969
I42
VSimpleName: base
p47970
tp47971
I2
s(g17240
I42
g17241
Vinsert
p47972
I42
VSimpleName: Test
p47973
tp47974
I1
s(g13694
I42
g13695
Vinsert
p47975
I39
VPrimitiveType: void
p47976
tp47977
I1
s(g13540
I42
g13541
Vinsert
p47978
I32
VMethodInvocation
p47979
tp47980
I44
s(g189
I42
g190
Vinsert
p47981
I42
VSimpleName: eq
p47982
tp47983
I1
s(Vinsert
p47984
I42
VSimpleName: get
p47985
Vinsert
p47986
I42
VSimpleName: shouldFailIfMethodWasNotInvoked
p47987
tp47988
I1
s(g9229
I42
g9230
Vinsert
p47989
I42
VSimpleName: MethodsImpl
p47990
tp47991
I2
s(g7017
I42
g7018
Vinsert
p47992
I43
VSimpleType: Object
p47993
tp47994
I5
s(g5201
I42
g5202
Vinsert
p47995
I8
VBlock
p47996
tp47997
I1
s(g10311
I42
g10312
Vinsert
p47998
I43
VSimpleType: ListDependent
p47999
tp48000
I1
s(g7888
I42
g7889
Vinsert
p48001
I42
VSimpleName: strictMode
p48002
tp48003
I1
s(g5665
I42
g5666
Vinsert
p48004
I42
VSimpleName: getClass
p48005
tp48006
I1
s(g12370
I42
g12371
Vinsert
p48007
I11
VCastExpression
p48008
tp48009
I2
s(g7041
I42
g7042
Vinsert
p48010
I27
VInfixExpression: !=
p48011
tp48012
I1
s(g23442
I42
g23443
Vinsert
p48013
I40
VQualifiedName: attrs.length
p48014
tp48015
I1
s(g10680
I42
g10681
Vinsert
p48016
I42
VSimpleName: classDefinition
p48017
tp48018
I1
s(g4523
I42
g4524
Vinsert
p48019
I42
VSimpleName: stubbedInvocationMatcher
p48020
tp48021
I1
s(g11306
I42
g11307
Vinsert
p48022
I42
VSimpleName: List
p48023
tp48024
I5
s(g23848
I42
g23849
Vinsert
p48025
I42
VSimpleName: getMethod
p48026
tp48027
I1
s(g9781
I42
g9782
Vinsert
p48028
I42
VSimpleName: log
p48029
tp48030
I1
s(g1755
I42
g1756
Vinsert
p48031
I42
VSimpleName: Object
p48032
tp48033
I6
s(g1044
I42
g1045
Vinsert
p48034
I83
VModifier: static
p48035
tp48036
I1
s(g56
I42
g57
Vinsert
p48037
I32
VMethodInvocation
p48038
tp48039
I12
s(g11686
I42
g11687
Vinsert
p48040
I42
VSimpleName: Override
p48041
tp48042
I3
s(g6786
I42
g6787
Vinsert
p48043
I8
VBlock
p48044
tp48045
I1
s(g2331
I42
g2332
Vinsert
p48046
I39
VPrimitiveType: int
p48047
tp48048
I2
s(g4038
I42
g4039
Vinsert
p48049
I41
VReturnStatement
p48050
tp48051
I2
s(g3753
I42
g3754
Vinsert
p48052
I42
VSimpleName: MockitoControl
p48053
tp48054
I1
s(g2733
I42
g2734
Vinsert
p48055
I42
VSimpleName: mockHandler
p48056
tp48057
I1
s(g9403
I42
g9404
Vinsert
p48058
I45
VStringLiteral: "1"
p48059
tp48060
I2
s(g4420
I42
g4421
Vinsert
p48061
I44
VSingleVariableDeclaration
p48062
tp48063
I4
s(g13705
I42
g13706
Vinsert
p48064
I42
VSimpleName: set
p48065
tp48066
I2
s(g11043
I42
g11044
Vinsert
p48067
I42
VSimpleName: MockitoPlugins
p48068
tp48069
I1
s(g12799
I42
g12800
Vinsert
p48070
I38
VPrefixExpression: !
p48071
tp48072
I1
s(g24251
I42
g24252
Vinsert
p48073
I34
VNumberLiteral: 12
p48074
tp48075
I1
s(g1337
I42
g1338
Vinsert
p48076
I42
VSimpleName: RememberingListener
p48077
tp48078
I1
s(g27880
I42
g27881
Vinsert
p48079
I42
VSimpleName: mock
p48080
tp48081
I16
s(g15841
I42
g15842
Vinsert
p48082
I21
VExpressionStatement
p48083
tp48084
I1
s(g4939
I42
g4940
Vinsert
p48085
I42
VSimpleName: assertThat
p48086
tp48087
I1
s(g7472
I42
g7473
Vinsert
p48088
I32
VMethodInvocation
p48089
tp48090
I5
s(g704
I42
g705
Vinsert
p48091
I76
VWildcardType: ?
p48092
tp48093
I1
s(g4043
I42
g4044
Vinsert
p48094
I59
VVariableDeclarationFragment
p48095
tp48096
I1
s(g2413
I42
g2414
Vinsert
p48097
I42
VSimpleName: first
p48098
tp48099
I1
s(g2227
I42
g2228
Vinsert
p48100
I32
VMethodInvocation
p48101
tp48102
I1
s(g24722
I42
g24723
Vinsert
p48103
I43
VSimpleType: String
p48104
tp48105
I2
s(g7544
I42
g7545
Vinsert
p48106
I14
VClassInstanceCreation
p48107
tp48108
I1
s(g463
I42
g464
Vinsert
p48109
I44
VSingleVariableDeclaration
p48110
tp48111
I1
s(g538
I42
g539
Vinsert
p48112
I43
VSimpleType: MockitoException
p48113
tp48114
I9
s(g13540
I42
g13541
Vinsert
p48115
I42
VSimpleName: lines
p48116
tp48117
I2
s(g17639
I42
g17640
Vinsert
p48118
I43
VSimpleType: GitCommit
p48119
tp48120
I1
s(g2444
I42
g2445
Vinsert
p48121
I43
VSimpleType: IInvokedMethod
p48122
tp48123
I1
s(g2536
I42
g2537
Vinsert
p48124
I42
VSimpleName: i
p48125
tp48126
I1
s(g2616
I42
g2617
Vinsert
p48127
I32
VMethodInvocation
p48128
tp48129
I1
s(g5133
I42
g5134
Vinsert
p48130
I8
VBlock
p48131
tp48132
I1
s(g18268
I42
g18269
Vinsert
p48133
I42
VSimpleName: LinkedList
p48134
tp48135
I2
s(g15424
I42
g15425
Vinsert
p48136
I45
VStringLiteral: "rollback"
p48137
tp48138
I2
s(g1538
I42
g1539
Vinsert
p48139
I45
VStringLiteral: "mock.simpleMethod()"
p48140
tp48141
I1
s(g5368
I42
g5369
Vinsert
p48142
I76
VWildcardType: ? extends Throwable
p48143
tp48144
I1
s(g3565
I42
g3566
Vinsert
p48145
I43
VSimpleType: Class
p48146
tp48147
I1
s(g13596
I42
g13597
Vinsert
p48148
I39
VPrimitiveType: int
p48149
tp48150
I1
s(g9234
I42
g9235
Vinsert
p48151
I39
VPrimitiveType: int
p48152
tp48153
I1
s(g24108
I42
g24109
Vinsert
p48154
I42
VSimpleName: InvocationMatcher
p48155
tp48156
I1
s(g7062
I42
g7063
Vinsert
p48157
I39
VPrimitiveType: void
p48158
tp48159
I2
s(g2031
I42
g2032
Vinsert
p48160
I38
VPrefixExpression: !
p48161
tp48162
I1
s(g11370
I42
g11371
Vinsert
p48163
I66
VTextElement: This implementation can be helpful when working with legacy code.
p48164
tp48165
I1
s(g7012
I42
g7013
Vinsert
p48166
I43
VSimpleType: Type
p48167
tp48168
I1
s(g9929
I42
g9930
Vinsert
p48169
I42
VSimpleName: eq
p48170
tp48171
I1
s(g28564
I42
g28565
Vinsert
p48172
I26
VImportDeclaration
p48173
tp48174
I3
s(g199
I42
g200
Vinsert
p48175
I83
VModifier: public
p48176
tp48177
I1
s(g15198
I42
g15199
Vinsert
p48178
I42
VSimpleName: Class
p48179
tp48180
I1
s(g2934
I42
g2935
Vinsert
p48181
I42
VSimpleName: Override
p48182
tp48183
I3
s(g22558
I42
g22559
Vinsert
p48184
I34
VNumberLiteral: 100
p48185
tp48186
I1
s(g896
I42
g897
Vinsert
p48187
I42
VSimpleName: IOException
p48188
tp48189
I2
s(g1472
I42
g1473
Vinsert
p48190
I52
VThisExpression
p48191
tp48192
I1
s(g3155
I42
g3156
Vinsert
p48193
I25
VIfStatement
p48194
tp48195
I1
s(g9460
I42
g9461
Vinsert
p48196
I42
VSimpleName: getPackage
p48197
tp48198
I1
s(g8862
I42
g8863
Vinsert
p48199
I34
VNumberLiteral: 1
p48200
tp48201
I2
s(g14972
I42
g14973
Vinsert
p48202
I42
VSimpleName: Serializable
p48203
tp48204
I1
s(g2815
I42
g2816
Vinsert
p48205
I42
VSimpleName: matcherStack
p48206
tp48207
I1
s(g8226
I42
g8227
Vinsert
p48208
I42
VSimpleName: should_return_empty_iterable
p48209
tp48210
I1
s(g5549
I42
g5550
Vinsert
p48211
I42
VSimpleName: returning_deep_stubs_4
p48212
tp48213
I1
s(g7961
I42
g7962
Vinsert
p48214
I39
VPrimitiveType: void
p48215
tp48216
I3
s(g4051
I42
g4052
Vinsert
p48217
I59
VVariableDeclarationFragment
p48218
tp48219
I2
s(g3460
I42
g3461
Vinsert
p48220
I48
VSuperMethodInvocation
p48221
tp48222
I1
s(g5352
I42
g5353
Vinsert
p48223
I8
VBlock
p48224
tp48225
I1
s(g1287
I42
g1288
Vinsert
p48226
I32
VMethodInvocation
p48227
tp48228
I6
s(g3532
I42
g3533
Vinsert
p48229
I45
VStringLiteral: "'"
p48230
tp48231
I1
s(g38471
I42
g38472
Vinsert
p48232
I42
VSimpleName: assertEquals
p48233
tp48234
I1
s(g4670
I42
g4671
Vinsert
p48235
I42
VSimpleName: isNotNull
p48236
tp48237
I1
s(Vinsert
p48238
I42
VSimpleName: serializable
p48239
Vinsert
p48240
I42
VSimpleName: serializable
p48241
tp48242
I7
s(g7961
I42
g7962
Vinsert
p48243
I42
VSimpleName: assertFalse
p48244
tp48245
I2
s(g164
I42
g165
Vinsert
p48246
I8
VBlock
p48247
tp48248
I1
s(g5159
I42
g5160
Vinsert
p48249
I83
VModifier: public
p48250
tp48251
I1
s(g16449
I42
g16450
Vinsert
p48252
I36
VParenthesizedExpression
p48253
tp48254
I1
s(g16269
I42
g16270
Vinsert
p48255
I59
VVariableDeclarationFragment
p48256
tp48257
I2
s(g11667
I42
g11668
Vinsert
p48258
I42
VSimpleName: ex
p48259
tp48260
I2
s(g2531
I42
g2532
Vinsert
p48261
I39
VPrimitiveType: boolean
p48262
tp48263
I1
s(g11718
I42
g11719
Vinsert
p48264
I42
VSimpleName: MockCreationSettings
p48265
tp48266
I1
s(g16189
I42
g16190
Vinsert
p48267
I8
VBlock
p48268
tp48269
I1
s(g3136
I42
g3137
Vinsert
p48270
I43
VSimpleType: MethodGraph
p48271
tp48272
I2
s(g5295
I42
g5296
Vinsert
p48273
I41
VReturnStatement
p48274
tp48275
I1
s(g15311
I42
g15312
Vinsert
p48276
I42
VSimpleName: buildIntArgMethod
p48277
tp48278
I1
s(g1164
I42
g1165
Vinsert
p48279
I83
VModifier: public
p48280
tp48281
I1
s(g9016
I42
g9017
Vinsert
p48282
I42
VSimpleName: String
p48283
tp48284
I1
s(g1944
I42
g1945
Vinsert
p48285
I42
VSimpleName: context
p48286
tp48287
I1
s(g3935
I42
g3936
Vinsert
p48288
I83
VModifier: static
p48289
tp48290
I1
s(g12226
I42
g12227
Vinsert
p48291
I74
VParameterizedType: LinkedList<To>
p48292
tp48293
I1
s(g1029
I42
g1030
Vinsert
p48294
I40
VQualifiedName: argTypes.length
p48295
tp48296
I1
s(g8176
I42
g8177
Vinsert
p48297
I42
VSimpleName: logger
p48298
tp48299
I1
s(g3214
I42
g3215
Vinsert
p48300
I8
VBlock
p48301
tp48302
I1
s(g15424
I42
g15425
Vinsert
p48303
I38
VPrefixExpression: !
p48304
tp48305
I2
s(g16283
I42
g16284
Vinsert
p48306
I42
VSimpleName: Exception
p48307
tp48308
I1
s(g4446
I42
g4447
Vinsert
p48309
I33
VNullLiteral
p48310
tp48311
I2
s(g5196
I42
g5197
Vinsert
p48312
I8
VBlock
p48313
tp48314
I3
s(g816
I42
g817
Vinsert
p48315
I42
VSimpleName: methodCall
p48316
tp48317
I2
s(g5690
I42
g5691
Vinsert
p48318
I42
VSimpleName: Equals
p48319
tp48320
I1
s(g5456
I42
g5457
Vinsert
p48321
I32
VMethodInvocation
p48322
tp48323
I8
s(g8517
I42
g8518
Vinsert
p48324
I43
VSimpleType: RuntimeException
p48325
tp48326
I2
s(g2321
I42
g2322
Vinsert
p48327
I42
VSimpleName: Returns
p48328
tp48329
I1
s(g9460
I42
g9461
Vinsert
p48330
I42
VSimpleName: getImplementationTitle
p48331
tp48332
I1
s(g17384
I42
g17385
Vinsert
p48333
I42
VSimpleName: container
p48334
tp48335
I1
s(g11434
I42
g11435
Vinsert
p48336
I43
VSimpleType: T
p48337
tp48338
I1
s(g252
I42
g253
Vinsert
p48339
I43
VSimpleType: List
p48340
tp48341
I1
s(g5067
I42
g5068
Vinsert
p48342
I42
VSimpleName: timeout
p48343
tp48344
I1
s(g12528
I42
g12529
Vinsert
p48345
I42
VSimpleName: Answer
p48346
tp48347
I1
s(g8951
I42
g8952
Vinsert
p48348
I43
VSimpleType: A
p48349
tp48350
I1
s(g21537
I42
g21538
Vinsert
p48351
I42
VSimpleName: value
p48352
tp48353
I1
s(g24170
I42
g24171
Vinsert
p48354
I42
VSimpleName: statement
p48355
tp48356
I3
s(g8237
I42
g8238
Vinsert
p48357
I32
VMethodInvocation
p48358
tp48359
I5
s(g3616
I42
g3617
Vinsert
p48360
I29
VJavadoc
p48361
tp48362
I1
s(g3078
I42
g3079
Vinsert
p48363
I32
VMethodInvocation
p48364
tp48365
I38
s(g144
I42
g145
Vinsert
p48366
I42
VSimpleName: Invocation
p48367
tp48368
I1
s(g1770
I42
g1771
Vinsert
p48369
I43
VSimpleType: Class
p48370
tp48371
I1
s(g10539
I42
g10540
Vinsert
p48372
I42
VSimpleName: length
p48373
tp48374
I1
s(g6233
I42
g6234
Vinsert
p48375
I43
VSimpleType: T
p48376
tp48377
I1
s(g154
I42
g155
Vinsert
p48378
I42
VSimpleName: field
p48379
tp48380
I3
s(g1092
I42
g1093
Vinsert
p48381
I42
VSimpleName: Invocation
p48382
tp48383
I3
s(g643
I42
g644
Vinsert
p48384
I31
VMethodDeclaration
p48385
tp48386
I1
s(g277
I42
g278
Vinsert
p48387
I21
VExpressionStatement
p48388
tp48389
I1
s(g11738
I42
g11739
Vinsert
p48390
I78
VMarkerAnnotation
p48391
tp48392
I2
s(g8553
I42
g8554
Vinsert
p48393
I21
VExpressionStatement
p48394
tp48395
I1
s(g9571
I42
g9572
Vinsert
p48396
I8
VBlock
p48397
tp48398
I1
s(g35705
I42
g35706
Vinsert
p48399
I44
VSingleVariableDeclaration
p48400
tp48401
I2
s(g7086
I42
g7087
Vinsert
p48402
I42
VSimpleName: saveFoundClass
p48403
tp48404
I1
s(g5123
I42
g5124
Vinsert
p48405
I42
VSimpleName: when
p48406
tp48407
I1
s(g896
I42
g897
Vinsert
p48408
I42
VSimpleName: ByteArrayInputStream
p48409
tp48410
I2
s(g966
I42
g967
Vinsert
p48411
I42
VSimpleName: mockitoOngoingStubbing
p48412
tp48413
I1
s(g1578
I42
g1579
Vinsert
p48414
I45
VStringLiteral: "********************************"
p48415
tp48416
I1
s(g8509
I42
g8510
Vinsert
p48417
I42
VSimpleName: String
p48418
tp48419
I4
s(g6316
I42
g6317
Vinsert
p48420
I74
VParameterizedType: Answer<T>
p48421
tp48422
I1
s(g5549
I42
g5550
Vinsert
p48423
I59
VVariableDeclarationFragment
p48424
tp48425
I1
s(g239
I42
g240
Vinsert
p48426
I14
VClassInstanceCreation
p48427
tp48428
I3
s(g5352
I42
g5353
Vinsert
p48429
I42
VSimpleName: simpleMethod
p48430
tp48431
I1
s(g16107
I42
g16108
Vinsert
p48432
I42
VSimpleName: delegate
p48433
tp48434
I1
s(g16760
I42
g16761
Vinsert
p48435
I59
VVariableDeclarationFragment
p48436
tp48437
I2
s(g14412
I42
g14413
Vinsert
p48438
I42
VSimpleName: listener
p48439
tp48440
I3
s(g8003
I42
g8004
Vinsert
p48441
I39
VPrimitiveType: boolean
p48442
tp48443
I2
s(g119
I42
g120
Vinsert
p48444
I43
VSimpleType: List
p48445
tp48446
I1
s(g5647
I42
g5648
Vinsert
p48447
I32
VMethodInvocation
p48448
tp48449
I6
s(g801
I42
g802
Vinsert
p48450
I59
VVariableDeclarationFragment
p48451
tp48452
I2
s(g11404
I42
g11405
Vinsert
p48453
I32
VMethodInvocation
p48454
tp48455
I21
s(g25297
I42
g25298
Vinsert
p48456
I42
VSimpleName: currentType
p48457
tp48458
I1
s(g10851
I42
g10852
Vinsert
p48459
I41
VReturnStatement
p48460
tp48461
I2
s(g3812
I42
g3813
Vinsert
p48462
I43
VSimpleType: Object
p48463
tp48464
I5
s(g11961
I42
g11962
Vinsert
p48465
I43
VSimpleType: String
p48466
tp48467
I1
s(g826
I42
g827
Vinsert
p48468
I42
VSimpleName: context
p48469
tp48470
I1
s(g1755
I42
g1756
Vinsert
p48471
I42
VSimpleName: first
p48472
tp48473
I1
s(g2815
I42
g2816
Vinsert
p48474
I42
VSimpleName: lastMatcher
p48475
tp48476
I1
s(g6
I42
g7
Vinsert
p48477
I42
VSimpleName: returnValues
p48478
tp48479
I7
s(g4755
I42
g4756
Vinsert
p48480
I42
VSimpleName: provides_built_in_plugins
p48481
tp48482
I1
s(g7390
I42
g7391
Vinsert
p48483
I40
VQualifiedName: Constants.ACC_PUBLIC
p48484
tp48485
I1
s(g1863
I42
g1864
Vinsert
p48486
I42
VSimpleName: answer
p48487
tp48488
I2
s(g1019
I42
g1020
Vinsert
p48489
I43
VSimpleType: FieldInitializer
p48490
tp48491
I1
s(g6962
I42
g6963
Vinsert
p48492
I21
VExpressionStatement
p48493
tp48494
I1
s(g8329
I42
g8330
Vinsert
p48495
I8
VBlock
p48496
tp48497
I1
s(g16053
I42
g16054
Vinsert
p48498
I44
VSingleVariableDeclaration
p48499
tp48500
I3
s(g9601
I42
g9602
Vinsert
p48501
I74
VParameterizedType: Class<V>
p48502
tp48503
I1
s(g5282
I42
g5283
Vinsert
p48504
I43
VSimpleType: OngoingVerifyingMode
p48505
tp48506
I1
s(g10696
I42
g10697
Vinsert
p48507
I16
VConditionalExpression
p48508
tp48509
I1
s(g6069
I42
g6070
Vinsert
p48510
I78
VMarkerAnnotation
p48511
tp48512
I1
s(g7190
I42
g7191
Vinsert
p48513
I42
VSimpleName: assertEquals
p48514
tp48515
I1
s(g722
I42
g723
Vinsert
p48516
I42
VSimpleName: T
p48517
tp48518
I1
s(g1739
I42
g1740
Vinsert
p48519
I42
VSimpleName: proxy
p48520
tp48521
I1
s(g56
I42
g57
Vinsert
p48522
I42
VSimpleName: Mockito
p48523
tp48524
I7
s(g1815
I42
g1816
Vinsert
p48525
I21
VExpressionStatement
p48526
tp48527
I1
s(g5562
I42
g5563
Vinsert
p48528
I42
VSimpleName: mocks
p48529
tp48530
I1
s(g12193
I42
g12194
Vinsert
p48531
I66
VTextElement: Returns the name of the field.
p48532
tp48533
I1
s(g29408
I42
g29409
Vinsert
p48534
I34
VNumberLiteral: 0
p48535
tp48536
I1
s(g23037
I42
g23038
Vinsert
p48537
I42
VSimpleName: d
p48538
tp48539
I1
s(g4714
I42
g4715
Vinsert
p48540
I32
VMethodInvocation
p48541
tp48542
I9
s(g1367
I42
g1368
Vinsert
p48543
I42
VSimpleName: ReturnsSmartNulls
p48544
tp48545
I1
s(g3919
I42
g3920
Vinsert
p48546
I42
VSimpleName: Test
p48547
tp48548
I1
s(g17860
I42
g17861
Vinsert
p48549
I43
VSimpleType: ReturnValues
p48550
tp48551
I1
s(g3155
I42
g3156
Vinsert
p48552
I43
VSimpleType: T
p48553
tp48554
I2
s(g1044
I42
g1045
Vinsert
p48555
I83
VModifier: public
p48556
tp48557
I1
s(g755
I42
g756
Vinsert
p48558
I70
VEnhancedForStatement
p48559
tp48560
I1
s(g12994
I42
g12995
Vinsert
p48561
I83
VModifier: public
p48562
tp48563
I15
s(g6763
I42
g6764
Vinsert
p48564
I34
VNumberLiteral: 100
p48565
tp48566
I1
s(g3991
I42
g3992
Vinsert
p48567
I59
VVariableDeclarationFragment
p48568
tp48569
I3
s(g5416
I42
g5417
Vinsert
p48570
I43
VSimpleType: BDDStubberImpl
p48571
tp48572
I1
s(g4750
I42
g4751
Vinsert
p48573
I21
VExpressionStatement
p48574
tp48575
I1
s(g20085
I42
g20086
Vinsert
p48576
I43
VSimpleType: IllegalArgumentException
p48577
tp48578
I2
s(Vinsert
p48579
I42
VSimpleName: add
p48580
Vinsert
p48581
I42
VSimpleName: Mockito
p48582
tp48583
I1
s(g2606
I42
g2607
Vinsert
p48584
I42
VSimpleName: getAnnotation
p48585
tp48586
I1
s(g2185
I42
g2186
Vinsert
p48587
I42
VSimpleName: MethodInfo
p48588
tp48589
I2
s(g3346
I42
g3347
Vinsert
p48590
I41
VReturnStatement
p48591
tp48592
I1
s(g5491
I42
g5492
Vinsert
p48593
I42
VSimpleName: Test
p48594
tp48595
I1
s(g10311
I42
g10312
Vinsert
p48596
I31
VMethodDeclaration
p48597
tp48598
I1
s(g13694
I42
g13695
Vinsert
p48599
I31
VMethodDeclaration
p48600
tp48601
I1
s(g971
I42
g972
Vinsert
p48602
I42
VSimpleName: barrier
p48603
tp48604
I1
s(g5300
I42
g5301
Vinsert
p48605
I57
VTypeLiteral
p48606
tp48607
I6
s(g16579
I42
g16580
Vinsert
p48608
I42
VSimpleName: Test
p48609
tp48610
I1
s(g17182
I42
g17183
Vinsert
p48611
I42
VSimpleName: classToMock
p48612
tp48613
I1
s(g3725
I42
g3726
Vinsert
p48614
I42
VSimpleName: Object
p48615
tp48616
I1
s(g12245
I42
g12246
Vinsert
p48617
I29
VJavadoc
p48618
tp48619
I1
s(g7403
I42
g7404
Vinsert
p48620
I42
VSimpleName: accept
p48621
tp48622
I1
s(g12715
I42
g12716
Vinsert
p48623
I43
VSimpleType: HashMap
p48624
tp48625
I2
s(g17846
I42
g17847
Vinsert
p48626
I42
VSimpleName: IMethods
p48627
tp48628
I19
s(g5655
I42
g5656
Vinsert
p48629
I42
VSimpleName: String
p48630
tp48631
I1
s(g11263
I42
g11264
Vinsert
p48632
I42
VSimpleName: mockitoMock
p48633
tp48634
I1
s(g5201
I42
g5202
Vinsert
p48635
I42
VSimpleName: Exception
p48636
tp48637
I1
s(g27222
I42
g27223
Vinsert
p48638
I42
VSimpleName: getMethodProxy
p48639
tp48640
I1
s(g2513
I42
g2514
Vinsert
p48641
I43
VSimpleType: Exception
p48642
tp48643
I2
s(g14735
I42
g14736
Vinsert
p48644
I45
VStringLiteral: "simpleMethod"
p48645
tp48646
I1
s(g7166
I42
g7167
Vinsert
p48647
I21
VExpressionStatement
p48648
tp48649
I1
s(g453
I42
g454
Vinsert
p48650
I42
VSimpleName: HasStackTrace
p48651
tp48652
I1
s(g5169
I42
g5170
Vinsert
p48653
I42
VSimpleName: mocks
p48654
tp48655
I1
s(g788
I42
g789
Vinsert
p48656
I66
VTextElement:  a class visitor.
p48657
tp48658
I1
s(g9234
I42
g9235
Vinsert
p48659
I21
VExpressionStatement
p48660
tp48661
I1
s(g38387
I42
g38388
Vinsert
p48662
I42
VSimpleName: Override
p48663
tp48664
I1
s(g13345
I42
g13346
Vinsert
p48665
I42
VSimpleName: Override
p48666
tp48667
I1
s(g11844
I42
g11845
Vinsert
p48668
I43
VSimpleType: EqualsBuilder
p48669
tp48670
I1
s(g856
I42
g857
Vinsert
p48671
I42
VSimpleName: getOuterType
p48672
tp48673
I1
s(g633
I42
g634
Vinsert
p48674
I39
VPrimitiveType: void
p48675
tp48676
I1
s(g4300
I42
g4301
Vinsert
p48677
I42
VSimpleName: MapNumberString
p48678
tp48679
I2
s(g17803
I42
g17804
Vinsert
p48680
I42
VSimpleName: notifier
p48681
tp48682
I7
s(g16579
I42
g16580
Vinsert
p48683
I31
VMethodDeclaration
p48684
tp48685
I1
s(g7966
I42
g7967
Vinsert
p48686
I43
VSimpleType: Foo
p48687
tp48688
I1
s(g13680
I42
g13681
Vinsert
p48689
I70
VEnhancedForStatement
p48690
tp48691
I1
s(g2100
I42
g2101
Vinsert
p48692
I42
VSimpleName: AssertionError
p48693
tp48694
I2
s(g11612
I42
g11613
Vinsert
p48695
I45
VStringLiteral: "multi"
p48696
tp48697
I1
s(g926
I42
g927
Vinsert
p48698
I42
VSimpleName: StackTraceElement
p48699
tp48700
I6
s(g5033
I42
g5034
Vinsert
p48701
I42
VSimpleName: getArgumentsLine
p48702
tp48703
I1
s(g179
I42
g180
Vinsert
p48704
I74
VParameterizedType: List<Invocation>
p48705
tp48706
I3
s(g20230
I42
g20231
Vinsert
p48707
I45
VStringLiteral: "$$EnhancerByMockitoWithCGLIB$$"
p48708
tp48709
I1
s(g7441
I42
g7442
Vinsert
p48710
I83
VModifier: public
p48711
tp48712
I5
s(g9716
I42
g9717
Vinsert
p48713
I42
VSimpleName: INTERCEPT
p48714
tp48715
I1
s(g9037
I42
g9038
Vinsert
p48716
I83
VModifier: public
p48717
tp48718
I5
s(g7657
I42
g7658
Vinsert
p48719
I42
VSimpleName: Exception
p48720
tp48721
I1
s(g11370
I42
g11371
Vinsert
p48722
I66
VTextElement: Unstubbed methods often return null. If your code uses the object returned by an unstubbed call you get a NullPointerException.
p48723
tp48724
I1
s(g8062
I42
g8063
Vinsert
p48725
I34
VNumberLiteral: 0
p48726
tp48727
I1
s(g7248
I42
g7249
Vinsert
p48728
I43
VSimpleType: IllegalArgumentException
p48729
tp48730
I1
s(g3522
I42
g3523
Vinsert
p48731
I42
VSimpleName: T
p48732
tp48733
I2
s(g8647
I42
g8648
Vinsert
p48734
I39
VPrimitiveType: void
p48735
tp48736
I1
s(g17557
I42
g17558
Vinsert
p48737
I45
VStringLiteral: "A injected into B"
p48738
tp48739
I3
s(g12705
I42
g12706
Vinsert
p48740
I59
VVariableDeclarationFragment
p48741
tp48742
I2
s(g1159
I42
g1160
Vinsert
p48743
I5
VArrayType: byte[]
p48744
tp48745
I1
s(g5591
I42
g5592
Vinsert
p48746
I42
VSimpleName: test
p48747
tp48748
I3
s(g1380
I42
g1381
Vinsert
p48749
I45
VStringLiteral: "  - stubbed method is intentionally invoked with different arguments by code under test\u005cn"
p48750
tp48751
I1
s(g3326
I42
g3327
Vinsert
p48752
I42
VSimpleName: Test
p48753
tp48754
I1
s(g6658
I42
g6659
Vinsert
p48755
I45
VStringLiteral: "{\u005c"foo\u005c" = 2L}"
p48756
tp48757
I1
s(g7526
I42
g7527
Vinsert
p48758
I42
VSimpleName: mock
p48759
tp48760
I1
s(g42122
I42
g42123
Vinsert
p48761
I42
VSimpleName: shouldStopEarlyIfTestIsDefinitelyFailed
p48762
tp48763
I1
s(g18591
I42
g18592
Vinsert
p48764
I45
VStringLiteral: "Unexpected: "
p48765
tp48766
I1
s(g5879
I42
g5880
Vinsert
p48767
I60
VVariableDeclarationStatement
p48768
tp48769
I5
s(g16418
I42
g16419
Vinsert
p48770
I5
VArrayType: Class<?>[]
p48771
tp48772
I1
s(g8062
I42
g8063
Vinsert
p48773
I42
VSimpleName: index
p48774
tp48775
I1
s(g23051
I42
g23052
Vinsert
p48776
I42
VSimpleName: expected_exception_message_did_not_match
p48777
tp48778
I1
s(g8604
I42
g8605
Vinsert
p48779
I43
VSimpleType: TreeSet
p48780
tp48781
I1
s(g1174
I42
g1175
Vinsert
p48782
I42
VSimpleName: DerivedInterface
p48783
tp48784
I1
s(g7416
I42
g7417
Vinsert
p48785
I42
VSimpleName: Reporter
p48786
tp48787
I1
s(g17860
I42
g17861
Vinsert
p48788
I83
VModifier: public
p48789
tp48790
I8
s(g13345
I42
g13346
Vinsert
p48791
I43
VSimpleType: Description
p48792
tp48793
I1
s(g5352
I42
g5353
Vinsert
p48794
I59
VVariableDeclarationFragment
p48795
tp48796
I1
s(g747
I42
g748
Vinsert
p48797
I43
VSimpleType: String
p48798
tp48799
I1
s(g199
I42
g200
Vinsert
p48800
I42
VSimpleName: Object
p48801
tp48802
I1
s(g861
I42
g862
Vinsert
p48803
I45
VStringLiteral: " - a\u005cn"
p48804
tp48805
I1
s(g4696
I42
g4697
Vinsert
p48806
I42
VSimpleName: MockitoAssertionError
p48807
tp48808
I1
s(g272
I42
g273
Vinsert
p48809
I43
VSimpleType: MockitoException
p48810
tp48811
I1
s(g2152
I42
g2153
Vinsert
p48812
I42
VSimpleName: After
p48813
tp48814
I1
s(g5810
I42
g5811
Vinsert
p48815
I39
VPrimitiveType: void
p48816
tp48817
I1
s(g1939
I42
g1940
Vinsert
p48818
I59
VVariableDeclarationFragment
p48819
tp48820
I1
s(g377
I42
g378
Vinsert
p48821
I41
VReturnStatement
p48822
tp48823
I2
s(g13666
I42
g13667
Vinsert
p48824
I43
VSimpleType: MethodInfo
p48825
tp48826
I1
s(g5398
I42
g5399
Vinsert
p48827
I42
VSimpleName: Exception
p48828
tp48829
I1
s(g9139
I42
g9140
Vinsert
p48830
I42
VSimpleName: inOrder
p48831
tp48832
I37
s(g19136
I42
g19137
Vinsert
p48833
I34
VNumberLiteral: 0
p48834
tp48835
I1
s(g10751
I42
g10752
Vinsert
p48836
I43
VSimpleType: MissingInvocationVerifier
p48837
tp48838
I2
s(g15219
I42
g15220
Vinsert
p48839
I42
VSimpleName: assertNotEquals
p48840
tp48841
I1
s(g29785
I42
g29786
Vinsert
p48842
I42
VSimpleName: answer
p48843
tp48844
I2
s(g8409
I42
g8410
Vinsert
p48845
I42
VSimpleName: toThrow
p48846
tp48847
I1
s(g503
I42
g504
Vinsert
p48848
I74
VParameterizedType: List<Invocation>
p48849
tp48850
I1
s(g4022
I42
g4023
Vinsert
p48851
I59
VVariableDeclarationFragment
p48852
tp48853
I2
s(g79
I42
g80
Vinsert
p48854
I37
VPostfixExpression: ++
p48855
tp48856
I1
s(g20722
I42
g20723
Vinsert
p48857
I42
VSimpleName: type
p48858
tp48859
I3
s(g5961
I42
g5962
Vinsert
p48860
I59
VVariableDeclarationFragment
p48861
tp48862
I1
s(g9901
I42
g9902
Vinsert
p48863
I42
VSimpleName: Class
p48864
tp48865
I1
s(g13622
I42
g13623
Vinsert
p48866
I43
VSimpleType: ThreadLocal
p48867
tp48868
I2
s(g4763
I42
g4764
Vinsert
p48869
I42
VSimpleName: asList
p48870
tp48871
I2
s(g1209
I42
g1210
Vinsert
p48872
I8
VBlock
p48873
tp48874
I4
s(g38889
I42
g38890
Vinsert
p48875
I42
VSimpleName: shouldPrintMethodName
p48876
tp48877
I1
s(g926
I42
g927
Vinsert
p48878
I42
VSimpleName: throwable
p48879
tp48880
I8
s(g8561
I42
g8562
Vinsert
p48881
I25
VIfStatement
p48882
tp48883
I1
s(g1599
I42
g1600
Vinsert
p48884
I42
VSimpleName: value
p48885
tp48886
I1
s(g209
I42
g210
Vinsert
p48887
I34
VNumberLiteral: 1
p48888
tp48889
I3
s(g11984
I42
g11985
Vinsert
p48890
I3
VArrayCreation
p48891
tp48892
I1
s(g3441
I42
g3442
Vinsert
p48893
I42
VSimpleName: signature
p48894
tp48895
I1
s(g6300
I42
g6301
Vinsert
p48896
I42
VSimpleName: Test
p48897
tp48898
I1
s(g9408
I42
g9409
Vinsert
p48899
I44
VSingleVariableDeclaration
p48900
tp48901
I1
s(g3318
I42
g3319
Vinsert
p48902
I42
VSimpleName: logger
p48903
tp48904
I4
s(g9105
I42
g9106
Vinsert
p48905
I42
VSimpleName: set
p48906
tp48907
I1
s(g29948
I42
g29949
Vinsert
p48908
I42
VSimpleName: dont_raise_NullPointerException
p48909
tp48910
I1
s(g1362
I42
g1363
Vinsert
p48911
I42
VSimpleName: push
p48912
tp48913
I2
s(g1770
I42
g1771
Vinsert
p48914
I36
VParenthesizedExpression
p48915
tp48916
I1
s(g12994
I42
g12995
Vinsert
p48917
I78
VMarkerAnnotation
p48918
tp48919
I9
s(g1586
I42
g1587
Vinsert
p48920
I42
VSimpleName: ce
p48921
tp48922
I2
s(g6606
I42
g6607
Vinsert
p48923
I42
VSimpleName: Object
p48924
tp48925
I1
s(g6233
I42
g6234
Vinsert
p48926
I65
VTagElement: @return
p48927
tp48928
I1
s(g14311
I42
g14312
Vinsert
p48929
I39
VPrimitiveType: byte
p48930
tp48931
I2
s(g9139
I42
g9140
Vinsert
p48932
I41
VReturnStatement
p48933
tp48934
I4
s(g1604
I42
g1605
Vinsert
p48935
I42
VSimpleName: Throwable
p48936
tp48937
I1
s(g13345
I42
g13346
Vinsert
p48938
I83
VModifier: public
p48939
tp48940
I1
s(g2364
I42
g2365
Vinsert
p48941
I43
VSimpleType: Exception
p48942
tp48943
I1
s(g1449
I42
g1450
Vinsert
p48944
I60
VVariableDeclarationStatement
p48945
tp48946
I2
s(g1372
I42
g1373
Vinsert
p48947
I42
VSimpleName: junit
p48948
tp48949
I1
s(g14014
I42
g14015
Vinsert
p48950
I45
VStringLiteral: "-> at "
p48951
tp48952
I2
s(g1194
I42
g1195
Vinsert
p48953
I83
VModifier: public
p48954
tp48955
I1
s(g11243
I42
g11244
Vinsert
p48956
I42
VSimpleName: answer
p48957
tp48958
I1
s(g13042
I42
g13043
Vinsert
p48959
I31
VMethodDeclaration
p48960
tp48961
I2
s(g8677
I42
g8678
Vinsert
p48962
I42
VSimpleName: value1
p48963
tp48964
I1
s(g6339
I42
g6340
Vinsert
p48965
I42
VSimpleName: Test
p48966
tp48967
I1
s(g7190
I42
g7191
Vinsert
p48968
I42
VSimpleName: mock
p48969
tp48970
I2
s(g6334
I42
g6335
Vinsert
p48971
I42
VSimpleName: p
p48972
tp48973
I1
s(g8682
I42
g8683
Vinsert
p48974
I42
VSimpleName: matcherStack
p48975
tp48976
I1
s(g400
I42
g401
Vinsert
p48977
I42
VSimpleName: toRev
p48978
tp48979
I1
s(g6914
I42
g6915
Vinsert
p48980
I41
VReturnStatement
p48981
tp48982
I8
s(g1967
I42
g1968
Vinsert
p48983
I42
VSimpleName: ret
p48984
tp48985
I1
s(g16587
I42
g16588
Vinsert
p48986
I42
VSimpleName: realMethod
p48987
tp48988
I1
s(g14352
I42
g14353
Vinsert
p48989
I43
VSimpleType: Object
p48990
tp48991
I1
s(g3354
I42
g3355
Vinsert
p48992
I42
VSimpleName: mock
p48993
tp48994
I4
s(g14972
I42
g14973
Vinsert
p48995
I42
VSimpleName: mockSettingsImpl
p48996
tp48997
I1
s(g3083
I42
g3084
Vinsert
p48998
I42
VSimpleName: MockitoAssertionError
p48999
tp49000
I1
s(g2046
I42
g2047
Vinsert
p49001
I59
VVariableDeclarationFragment
p49002
tp49003
I2
s(g12705
I42
g12706
Vinsert
p49004
I74
VParameterizedType: Iterator<? extends Map.Entry<?,?>>
p49005
tp49006
I1
s(g4043
I42
g4044
Vinsert
p49007
I42
VSimpleName: mock
p49008
tp49009
I2
s(g16513
I42
g16514
Vinsert
p49010
I40
VQualifiedName: org.mockito.internal.creation.instance.InstantiationException
p49011
tp49012
I1
s(g11713
I42
g11714
Vinsert
p49013
I43
VSimpleType: PrintableInvocation
p49014
tp49015
I1
s(g13755
I42
g13756
Vinsert
p49016
I42
VSimpleName: mv
p49017
tp49018
I1
s(g3006
I42
g3007
Vinsert
p49019
I32
VMethodInvocation
p49020
tp49021
I3
s(g2452
I42
g2453
Vinsert
p49022
I14
VClassInstanceCreation
p49023
tp49024
I1
s(g159
I42
g160
Vinsert
p49025
I8
VBlock
p49026
tp49027
I3
s(g11538
I42
g11539
Vinsert
p49028
I43
VSimpleType: List
p49029
tp49030
I1
s(g1044
I42
g1045
Vinsert
p49031
I32
VMethodInvocation
p49032
tp49033
I1
s(g3782
I42
g3783
Vinsert
p49034
I42
VSimpleName: testClassInstance
p49035
tp49036
I2
s(g881
I42
g882
Vinsert
p49037
I42
VSimpleName: mockDescription
p49038
tp49039
I1
s(g6725
I42
g6726
Vinsert
p49040
I32
VMethodInvocation
p49041
tp49042
I1
s(g12508
I42
g12509
Vinsert
p49043
I83
VModifier: static
p49044
tp49045
I1
s(g1214
I42
g1215
Vinsert
p49046
I45
VStringLiteral: "[Mockito]\u005cn"
p49047
tp49048
I2
s(Vinsert
p49049
I42
VSimpleName: equals
p49050
Vinsert
p49051
I42
VSimpleName: spiedInstance
p49052
tp49053
I1
s(g5128
I42
g5129
Vinsert
p49054
I42
VSimpleName: toInvocation
p49055
tp49056
I2
s(g7898
I42
g7899
Vinsert
p49057
I45
VStringLiteral: "Wanted anywhere AFTER following interaction:"
p49058
tp49059
I1
s(Vinsert
p49060
I42
VSimpleName: getCause
p49061
Vinsert
p49062
I45
VStringLiteral: "Wanted invocation:"
p49063
tp49064
I1
s(g18914
I42
g18915
Vinsert
p49065
I45
VStringLiteral: "test"
p49066
tp49067
I1
s(g8052
I42
g8053
Vinsert
p49068
I83
VModifier: public
p49069
tp49070
I1
s(g4420
I42
g4421
Vinsert
p49071
I42
VSimpleName: compare
p49072
tp49073
I2
s(g15913
I42
g15914
Vinsert
p49074
I42
VSimpleName: i
p49075
tp49076
I1
s(g2738
I42
g2739
Vinsert
p49077
I40
VQualifiedName: org.mockito.MockitoAnnotations.Mock
p49078
tp49079
I1
s(g149
I42
g150
Vinsert
p49080
I42
VSimpleName: Integer
p49081
tp49082
I1
s(g16048
I42
g16049
Vinsert
p49083
I42
VSimpleName: text
p49084
tp49085
I1
s(g109
I42
g110
Vinsert
p49086
I28
VInitializer
p49087
tp49088
I1
s(g1194
I42
g1195
Vinsert
p49089
I21
VExpressionStatement
p49090
tp49091
I3
s(g5950
I42
g5951
Vinsert
p49092
I40
VQualifiedName: org.mockito.MockitoAnnotations.Mock
p49093
tp49094
I1
s(g6300
I42
g6301
Vinsert
p49095
I39
VPrimitiveType: void
p49096
tp49097
I1
s(g22086
I42
g22087
Vinsert
p49098
I74
VParameterizedType: List<String>
p49099
tp49100
I1
s(g30184
I42
g30185
Vinsert
p49101
I42
VSimpleName: findInvocations
p49102
tp49103
I1
s(g12444
I42
g12445
Vinsert
p49104
I60
VVariableDeclarationStatement
p49105
tp49106
I2
s(g13114
I42
g13115
Vinsert
p49107
I42
VSimpleName: Invocation
p49108
tp49109
I3
s(g1876
I42
g1877
Vinsert
p49110
I42
VSimpleName: c
p49111
tp49112
I1
s(g8729
I42
g8730
Vinsert
p49113
I42
VSimpleName: TestName
p49114
tp49115
I1
s(g916
I42
g917
Vinsert
p49116
I70
VEnhancedForStatement
p49117
tp49118
I1
s(g257
I42
g258
Vinsert
p49119
I42
VSimpleName: nextSequenceNumber
p49120
tp49121
I1
s(g11995
I42
g11996
Vinsert
p49122
I34
VNumberLiteral: 1
p49123
tp49124
I1
s(g5164
I42
g5165
Vinsert
p49125
I59
VVariableDeclarationFragment
p49126
tp49127
I1
s(g17639
I42
g17640
Vinsert
p49128
I42
VSimpleName: email
p49129
tp49130
I4
s(g8553
I42
g8554
Vinsert
p49131
I1
VAnonymousClassDeclaration
p49132
tp49133
I1
s(g9706
I42
g9707
Vinsert
p49134
I42
VSimpleName: print
p49135
tp49136
I1
s(g3601
I42
g3602
Vinsert
p49137
I43
VSimpleType: SomeMethods
p49138
tp49139
I2
s(g2139
I42
g2140
Vinsert
p49140
I42
VSimpleName: clazzMock
p49141
tp49142
I2
s(g1924
I42
g1925
Vinsert
p49143
I83
VModifier: public
p49144
tp49145
I1
s(g3880
I42
g3881
Vinsert
p49146
I42
VSimpleName: Object
p49147
tp49148
I1
s(g2743
I42
g2744
Vinsert
p49149
I33
VNullLiteral
p49150
tp49151
I1
s(g936
I42
g937
Vinsert
p49152
I21
VExpressionStatement
p49153
tp49154
I1
s(g12221
I42
g12222
Vinsert
p49155
I32
VMethodInvocation
p49156
tp49157
I3
s(g936
I42
g937
Vinsert
p49158
I32
VMethodInvocation
p49159
tp49160
I1
s(g10539
I42
g10540
Vinsert
p49161
I42
VSimpleName: out
p49162
tp49163
I1
s(g3629
I42
g3630
Vinsert
p49164
I40
VQualifiedName: second.fieldFive
p49165
tp49166
I1
s(g10889
I42
g10890
Vinsert
p49167
I42
VSimpleName: interfaceBounds
p49168
tp49169
I3
s(g1609
I42
g1610
Vinsert
p49170
I74
VParameterizedType: List<StackTraceElement>
p49171
tp49172
I3
s(g3550
I42
g3551
Vinsert
p49173
I42
VSimpleName: MockitoState
p49174
tp49175
I1
s(g14686
I42
g14687
Vinsert
p49176
I43
VSimpleType: String
p49177
tp49178
I5
s(g8504
I42
g8505
Vinsert
p49179
I45
VStringLiteral: "1"
p49180
tp49181
I1
s(g4646
I42
g4647
Vinsert
p49182
I43
VSimpleType: Invocation
p49183
tp49184
I1
s(g3851
I42
g3852
Vinsert
p49185
I32
VMethodInvocation
p49186
tp49187
I1
s(g7081
I42
g7082
Vinsert
p49188
I43
VSimpleType: LogInvocationsToStdOutListener
p49189
tp49190
I1
s(g14150
I42
g14151
Vinsert
p49191
I43
VSimpleType: JSONArray
p49192
tp49193
I2
s(g6815
I42
g6816
Vinsert
p49194
I42
VSimpleName: clearMockitoListeners
p49195
tp49196
I1
s(g22136
I42
g22137
Vinsert
p49197
I42
VSimpleName: Throwable
p49198
tp49199
I3
s(g2585
I42
g2586
Vinsert
p49200
I74
VParameterizedType: Class<?>
p49201
tp49202
I1
s(g468
I42
g469
Vinsert
p49203
I43
VSimpleType: LinkedList
p49204
tp49205
I1
s(g3144
I42
g3145
Vinsert
p49206
I8
VBlock
p49207
tp49208
I1
s(g4226
I42
g4227
Vinsert
p49209
I43
VSimpleType: String
p49210
tp49211
I3
s(g11263
I42
g11264
Vinsert
p49212
I42
VSimpleName: MockitoMock
p49213
tp49214
I1
s(g760
I42
g761
Vinsert
p49215
I43
VSimpleType: Exception
p49216
tp49217
I1
s(g6300
I42
g6301
Vinsert
p49218
I21
VExpressionStatement
p49219
tp49220
I1
s(g3473
I42
g3474
Vinsert
p49221
I42
VSimpleName: numberOfActualInvocations
p49222
tp49223
I1
s(g3473
I42
g3474
Vinsert
p49224
I42
VSimpleName: actuallyInvoked
p49225
tp49226
I1
s(g15464
I42
g15465
Vinsert
p49227
I85
VDimension
p49228
tp49229
I4
s(g2998
I42
g2999
Vinsert
p49230
I42
VSimpleName: accept
p49231
tp49232
I1
s(g5858
I42
g5859
Vinsert
p49233
I25
VIfStatement
p49234
tp49235
I1
s(g30167
I42
g30168
Vinsert
p49236
I42
VSimpleName: testDeepMockWithClass
p49237
tp49238
I1
s(g3896
I42
g3897
Vinsert
p49239
I42
VSimpleName: mock
p49240
tp49241
I1
s(g9758
I42
g9759
Vinsert
p49242
I42
VSimpleName: mockSettings
p49243
tp49244
I1
s(g1362
I42
g1363
Vinsert
p49245
I40
VQualifiedName: ClassWriter.CLASS
p49246
tp49247
I1
s(g7395
I42
g7396
Vinsert
p49248
I42
VSimpleName: interfaces
p49249
tp49250
I1
s(g5655
I42
g5656
Vinsert
p49251
I43
VSimpleType: String
p49252
tp49253
I1
s(g3621
I42
g3622
Vinsert
p49254
I32
VMethodInvocation
p49255
tp49256
I1
s(g12256
I42
g12257
Vinsert
p49257
I42
VSimpleName: assertNotNull
p49258
tp49259
I1
s(g6143
I42
g6144
Vinsert
p49260
I42
VSimpleName: nextSequenceNumber
p49261
tp49262
I1
s(g3267
I42
g3268
Vinsert
p49263
I42
VSimpleName: expected
p49264
tp49265
I2
s(g19793
I42
g19794
Vinsert
p49266
I42
VSimpleName: obtainClassPathOf
p49267
tp49268
I1
s(g3843
I42
g3844
Vinsert
p49269
I42
VSimpleName: acceptReloadOf
p49270
tp49271
I1
s(g6914
I42
g6915
Vinsert
p49272
I22
VFieldAccess
p49273
tp49274
I3
s(g23336
I42
g23337
Vinsert
p49275
I42
VSimpleName: message
p49276
tp49277
I2
s(g1924
I42
g1925
Vinsert
p49278
I42
VSimpleName: Override
p49279
tp49280
I1
s(g1100
I42
g1101
Vinsert
p49281
I42
VSimpleName: Foo
p49282
tp49283
I2
s(g44819
I42
g44820
Vinsert
p49284
I42
VSimpleName: printMethodReturnType
p49285
tp49286
I1
s(g578
I42
g579
Vinsert
p49287
I8
VBlock
p49288
tp49289
I1
s(g1627
I42
g1628
Vinsert
p49290
I42
VSimpleName: mock
p49291
tp49292
I1
s(g11314
I42
g11315
Vinsert
p49293
I32
VMethodInvocation
p49294
tp49295
I2
s(g2095
I42
g2096
Vinsert
p49296
I42
VSimpleName: BeanPropertySetter
p49297
tp49298
I1
s(g9053
I42
g9054
Vinsert
p49299
I14
VClassInstanceCreation
p49300
tp49301
I3
s(g17860
I42
g17861
Vinsert
p49302
I42
VSimpleName: Configuration
p49303
tp49304
I2
s(g7200
I42
g7201
Vinsert
p49305
I42
VSimpleName: String
p49306
tp49307
I4
s(g2276
I42
g2277
Vinsert
p49308
I43
VSimpleType: MockSettingsImpl
p49309
tp49310
I1
s(g11738
I42
g11739
Vinsert
p49311
I43
VSimpleType: Exception
p49312
tp49313
I1
s(g9721
I42
g9722
Vinsert
p49314
I42
VSimpleName: wrappedVerification
p49315
tp49316
I1
s(g11423
I42
g11424
Vinsert
p49317
I27
VInfixExpression: !=
p49318
tp49319
I1
s(g347
I42
g348
Vinsert
p49320
I59
VVariableDeclarationFragment
p49321
tp49322
I1
s(g16592
I42
g16593
Vinsert
p49323
I42
VSimpleName: Thread
p49324
tp49325
I1
s(g643
I42
g644
Vinsert
p49326
I42
VSimpleName: shouldVerificationWorks
p49327
tp49328
I1
s(g12782
I42
g12783
Vinsert
p49329
I42
VSimpleName: mutex
p49330
tp49331
I2
s(g4446
I42
g4447
Vinsert
p49332
I76
VWildcardType: ?
p49333
tp49334
I3
s(g184
I42
g185
Vinsert
p49335
I44
VSingleVariableDeclaration
p49336
tp49337
I1
s(g12726
I42
g12727
Vinsert
p49338
I42
VSimpleName: Exception
p49339
tp49340
I1
s(g765
I42
g766
Vinsert
p49341
I42
VSimpleName: shouldNotCheckForWrongNumberOfModificationsWhenVerifyingInOrder
p49342
tp49343
I1
s(Vinsert
p49344
I42
VSimpleName: simpleMethod
p49345
Vinsert
p49346
I43
VSimpleType: Thread
p49347
tp49348
I2
s(g8146
I42
g8147
Vinsert
p49349
I21
VExpressionStatement
p49350
tp49351
I1
s(g11926
I42
g11927
Vinsert
p49352
I45
VStringLiteral: "test-resources/multiple-classpaths/cp1"
p49353
tp49354
I1
s(g1282
I42
g1283
Vinsert
p49355
I43
VSimpleType: MockitoRule
p49356
tp49357
I2
s(g12737
I42
g12738
Vinsert
p49358
I14
VClassInstanceCreation
p49359
tp49360
I1
s(g755
I42
g756
Vinsert
p49361
I42
VSimpleName: object
p49362
tp49363
I1
s(g4461
I42
g4462
Vinsert
p49364
I42
VSimpleName: calculator
p49365
tp49366
I1
s(g12183
I42
g12184
Vinsert
p49367
I43
VSimpleType: MethodProxy
p49368
tp49369
I1
s(g4963
I42
g4964
Vinsert
p49370
I42
VSimpleName: Exception
p49371
tp49372
I2
s(g6184
I42
g6185
Vinsert
p49373
I27
VInfixExpression: !=
p49374
tp49375
I1
s(g4709
I42
g4710
Vinsert
p49376
I31
VMethodDeclaration
p49377
tp49378
I3
s(g10772
I42
g10773
Vinsert
p49379
I42
VSimpleName: List
p49380
tp49381
I1
s(g8696
I42
g8697
Vinsert
p49382
I42
VSimpleName: args
p49383
tp49384
I1
s(g7780
I42
g7781
Vinsert
p49385
I42
VSimpleName: Silent
p49386
tp49387
I1
s(g3364
I42
g3365
Vinsert
p49388
I39
VPrimitiveType: void
p49389
tp49390
I3
s(Vinsert
p49391
I42
VSimpleName: add
p49392
Vinsert
p49393
I42
VSimpleName: put
p49394
tp49395
I2
s(g4827
I42
g4828
Vinsert
p49396
I42
VSimpleName: forName
p49397
tp49398
I1
s(g5439
I42
g5440
Vinsert
p49399
I59
VVariableDeclarationFragment
p49400
tp49401
I3
s(g224
I42
g225
Vinsert
p49402
I31
VMethodDeclaration
p49403
tp49404
I1
s(g11423
I42
g11424
Vinsert
p49405
I42
VSimpleName: SuppressWarnings
p49406
tp49407
I1
s(g13134
I42
g13135
Vinsert
p49408
I42
VSimpleName: isToString
p49409
tp49410
I1
s(g951
I42
g952
Vinsert
p49411
I8
VBlock
p49412
tp49413
I2
s(g2886
I42
g2887
Vinsert
p49414
I21
VExpressionStatement
p49415
tp49416
I3
s(g1954
I42
g1955
Vinsert
p49417
I43
VSimpleType: MockitoSpy
p49418
tp49419
I1
s(g23671
I42
g23672
Vinsert
p49420
I21
VExpressionStatement
p49421
tp49422
I3
s(g4502
I42
g4503
Vinsert
p49423
I3
VArrayCreation
p49424
tp49425
I1
s(g18462
I42
g18463
Vinsert
p49426
I45
VStringLiteral: "You passed following type: "
p49427
tp49428
I1
s(g46
I42
g47
Vinsert
p49429
I14
VClassInstanceCreation
p49430
tp49431
I1
s(g4714
I42
g4715
Vinsert
p49432
I42
VSimpleName: SerializableMockitoMethodProxy
p49433
tp49434
I1
s(g8724
I42
g8725
Vinsert
p49435
I42
VSimpleName: cg
p49436
tp49437
I1
s(g4184
I42
g4185
Vinsert
p49438
I42
VSimpleName: nullable
p49439
tp49440
I1
s(g10672
I42
g10673
Vinsert
p49441
I43
VSimpleType: Object
p49442
tp49443
I4
s(g3191
I42
g3192
Vinsert
p49444
I42
VSimpleName: Base
p49445
tp49446
I1
s(g5321
I42
g5322
Vinsert
p49447
I43
VSimpleType: GenericMetadataSupport
p49448
tp49449
I1
s(g13153
I42
g13154
Vinsert
p49450
I40
VQualifiedName: org.mockito.StateResetter
p49451
tp49452
I1
s(g6148
I42
g6149
Vinsert
p49453
I42
VSimpleName: ListOfAnyNumbers
p49454
tp49455
I1
s(g6287
I42
g6288
Vinsert
p49456
I9
VBooleanLiteral: false
p49457
tp49458
I1
s(g5921
I42
g5922
Vinsert
p49459
I83
VModifier: public
p49460
tp49461
I2
s(g7521
I42
g7522
Vinsert
p49462
I42
VSimpleName: shouldFailWhenReturnValueSetForVoidMethod
p49463
tp49464
I1
s(g37689
I42
g37690
Vinsert
p49465
I42
VSimpleName: lastSimpleMethodInvocation
p49466
tp49467
I1
s(g25452
I42
g25453
Vinsert
p49468
I42
VSimpleName: expected
p49469
tp49470
I1
s(g4991
I42
g4992
Vinsert
p49471
I42
VSimpleName: Test
p49472
tp49473
I1
s(g5575
I42
g5576
Vinsert
p49474
I43
VSimpleType: Boolean
p49475
tp49476
I1
s(g11107
I42
g11108
Vinsert
p49477
I66
VTextElement: // this will call the real implementation of Foo.someVoidMethod()
p49478
tp49479
I1
s(g15214
I42
g15215
Vinsert
p49480
I43
VSimpleType: Throwable
p49481
tp49482
I3
s(g34757
I42
g34758
Vinsert
p49483
I42
VSimpleName: shouldNotLogAnythingWhenNoWarnings
p49484
tp49485
I1
s(g10465
I42
g10466
Vinsert
p49486
I42
VSimpleName: orderedInstanceFields
p49487
tp49488
I2
s(g722
I42
g723
Vinsert
p49489
I42
VSimpleName: MockHandler
p49490
tp49491
I1
s(g5431
I42
g5432
Vinsert
p49492
I31
VMethodDeclaration
p49493
tp49494
I1
s(g15719
I42
g15720
Vinsert
p49495
I41
VReturnStatement
p49496
tp49497
I1
s(g8488
I42
g8489
Vinsert
p49498
I42
VSimpleName: hashCode
p49499
tp49500
I1
s(g8237
I42
g8238
Vinsert
p49501
I53
VThrowStatement
p49502
tp49503
I1
s(g9483
I42
g9484
Vinsert
p49504
I42
VSimpleName: verifiedOnly
p49505
tp49506
I1
s(g7966
I42
g7967
Vinsert
p49507
I59
VVariableDeclarationFragment
p49508
tp49509
I1
s(g2710
I42
g2711
Vinsert
p49510
I74
VParameterizedType: MockHandlerImpl<NonPackagePrivateSubClass>
p49511
tp49512
I1
s(g3654
I42
g3655
Vinsert
p49513
I42
VSimpleName: forwardsInvocations
p49514
tp49515
I2
s(g2642
I42
g2643
Vinsert
p49516
I43
VSimpleType: HashCodeAndEqualsSafeSet
p49517
tp49518
I1
s(g1934
I42
g1935
Vinsert
p49519
I74
VParameterizedType: Class<?>
p49520
tp49521
I2
s(Vinsert
p49522
I42
VSimpleName: start
p49523
Vinsert
p49524
I42
VSimpleName: shouldFailVerificationWithTimeout
p49525
tp49526
I1
s(g25785
I42
g25786
Vinsert
p49527
I74
VParameterizedType: List<Answer>
p49528
tp49529
I1
s(g2973
I42
g2974
Vinsert
p49530
I25
VIfStatement
p49531
tp49532
I1
s(g463
I42
g464
Vinsert
p49533
I39
VPrimitiveType: void
p49534
tp49535
I1
s(g10688
I42
g10689
Vinsert
p49536
I42
VSimpleName: delegate
p49537
tp49538
I1
s(g1039
I42
g1040
Vinsert
p49539
I42
VSimpleName: Collections
p49540
tp49541
I1
s(g9601
I42
g9602
Vinsert
p49542
I42
VSimpleName: reportMatcher
p49543
tp49544
I1
s(g33105
I42
g33106
Vinsert
p49545
I43
VSimpleType: VerificationData
p49546
tp49547
I1
s(g5599
I42
g5600
Vinsert
p49548
I42
VSimpleName: tav
p49549
tp49550
I1
s(g4590
I42
g4591
Vinsert
p49551
I66
VTextElement: <p>
p49552
tp49553
I3
s(g1563
I42
g1564
Vinsert
p49554
I8
VBlock
p49555
tp49556
I1
s(g24736
I42
g24737
Vinsert
p49557
I44
VSingleVariableDeclaration
p49558
tp49559
I7
s(g2939
I42
g2940
Vinsert
p49560
I42
VSimpleName: value
p49561
tp49562
I1
s(g7166
I42
g7167
Vinsert
p49563
I42
VSimpleName: verifyNoMoreInteractions
p49564
tp49565
I1
s(g24865
I42
g24866
Vinsert
p49566
I42
VSimpleName: getting_interactions_when_input_mock_is_not_mock
p49567
tp49568
I1
s(g7129
I42
g7130
Vinsert
p49569
I21
VExpressionStatement
p49570
tp49571
I1
s(g10609
I42
g10610
Vinsert
p49572
I42
VSimpleName: Object
p49573
tp49574
I3
s(g11749
I42
g11750
Vinsert
p49575
I57
VTypeLiteral
p49576
tp49577
I1
s(g10531
I42
g10532
Vinsert
p49578
I43
VSimpleType: MockitoException
p49579
tp49580
I1
s(g6035
I42
g6036
Vinsert
p49581
I43
VSimpleType: String
p49582
tp49583
I1
s(g3637
I42
g3638
Vinsert
p49584
I42
VSimpleName: toArray
p49585
tp49586
I1
s(g11572
I42
g11573
Vinsert
p49587
I5
VArrayType: Method[]
p49588
tp49589
I1
s(g5047
I42
g5048
Vinsert
p49590
I42
VSimpleName: get
p49591
tp49592
I2
s(g12955
I42
g12956
Vinsert
p49593
I78
VMarkerAnnotation
p49594
tp49595
I1
s(g9252
I42
g9253
Vinsert
p49596
I42
VSimpleName: Result
p49597
tp49598
I2
s(g372
I42
g373
Vinsert
p49599
I42
VSimpleName: StubberFoo
p49600
tp49601
I1
s(g3919
I42
g3920
Vinsert
p49602
I45
VStringLiteral: "intercept"
p49603
tp49604
I1
s(g5858
I42
g5859
Vinsert
p49605
I42
VSimpleName: hasMockitoTestNGListenerInTestHierarchy
p49606
tp49607
I1
s(g3565
I42
g3566
Vinsert
p49608
I27
VInfixExpression: &&
p49609
tp49610
I1
s(g12326
I42
g12327
Vinsert
p49611
I8
VBlock
p49612
tp49613
I1
s(g16524
I42
g16525
Vinsert
p49614
I21
VExpressionStatement
p49615
tp49616
I4
s(g25452
I42
g25453
Vinsert
p49617
I57
VTypeLiteral
p49618
tp49619
I1
s(g10894
I42
g10895
Vinsert
p49620
I83
VModifier: protected
p49621
tp49622
I1
s(g788
I42
g789
Vinsert
p49623
I43
VSimpleType: ClassVisitor
p49624
tp49625
I1
s(g20934
I42
g20935
Vinsert
p49626
I8
VBlock
p49627
tp49628
I11
s(g15356
I42
g15357
Vinsert
p49629
I42
VSimpleName: add
p49630
tp49631
I1
s(g6111
I42
g6112
Vinsert
p49632
I83
VModifier: static
p49633
tp49634
I1
s(g14868
I42
g14869
Vinsert
p49635
I42
VSimpleName: MAX_EXPECTED_OVERSLEEP_MILLIS
p49636
tp49637
I1
s(g2113
I42
g2114
Vinsert
p49638
I42
VSimpleName: wanted
p49639
tp49640
I1
s(g23284
I42
g23285
Vinsert
p49641
I42
VSimpleName: mock2
p49642
tp49643
I1
s(g3654
I42
g3655
Vinsert
p49644
I43
VSimpleType: FooImpl
p49645
tp49646
I1
s(g134
I42
g135
Vinsert
p49647
I32
VMethodInvocation
p49648
tp49649
I2
s(g483
I42
g484
Vinsert
p49650
I42
VSimpleName: actualMatcher
p49651
tp49652
I2
s(g1573
I42
g1574
Vinsert
p49653
I42
VSimpleName: Invocation
p49654
tp49655
I1
s(g7390
I42
g7391
Vinsert
p49656
I42
VSimpleName: e
p49657
tp49658
I3
s(g34587
I42
g34588
Vinsert
p49659
I39
VPrimitiveType: int
p49660
tp49661
I1
s(g18013
I42
g18014
Vinsert
p49662
I42
VSimpleName: invocation
p49663
tp49664
I2
s(g7633
I42
g7634
Vinsert
p49665
I42
VSimpleName: anyTimes
p49666
tp49667
I1
s(g9247
I42
g9248
Vinsert
p49668
I66
VTextElement: gets the singleton instance of a configuration
p49669
tp49670
I1
s(g2190
I42
g2191
Vinsert
p49671
I42
VSimpleName: indexOfVararg
p49672
tp49673
I1
s(g12427
I42
g12428
Vinsert
p49674
I31
VMethodDeclaration
p49675
tp49676
I1
s(g7403
I42
g7404
Vinsert
p49677
I44
VSingleVariableDeclaration
p49678
tp49679
I1
s(g2429
I42
g2430
Vinsert
p49680
I43
VSimpleType: InvocationContainerImpl
p49681
tp49682
I1
s(g2518
I42
g2519
Vinsert
p49683
I41
VReturnStatement
p49684
tp49685
I1
s(g13461
I42
g13462
Vinsert
p49686
I76
VWildcardType: ? extends Throwable
p49687
tp49688
I1
s(g22800
I42
g22801
Vinsert
p49689
I40
VQualifiedName: System.err
p49690
tp49691
I1
s(g608
I42
g609
Vinsert
p49692
I45
VStringLiteral: "Invalid annotation value"
p49693
tp49694
I1
s(g2462
I42
g2463
Vinsert
p49695
I43
VSimpleType: Field
p49696
tp49697
I3
s(g15601
I42
g15602
Vinsert
p49698
I45
VStringLiteral: "\u005cn *** The actual failure is because of: ***\u005cn"
p49699
tp49700
I1
s(g4148
I42
g4149
Vinsert
p49701
I42
VSimpleName: returnFirstArgument
p49702
tp49703
I1
s(g5295
I42
g5296
Vinsert
p49704
I42
VSimpleName: isPrimitiveOrWrapper
p49705
tp49706
I2
s(g9229
I42
g9230
Vinsert
p49707
I42
VSimpleName: filter
p49708
tp49709
I1
s(g6587
I42
g6588
Vinsert
p49710
I42
VSimpleName: comparison
p49711
tp49712
I2
s(g4305
I42
g4306
Vinsert
p49713
I43
VSimpleType: InvocationOnMock
p49714
tp49715
I1
s(g7297
I42
g7298
Vinsert
p49716
I43
VSimpleType: VerificationModeImpl
p49717
tp49718
I1
s(g12097
I42
g12098
Vinsert
p49719
I42
VSimpleName: REPORTER
p49720
tp49721
I2
s(g2700
I42
g2701
Vinsert
p49722
I32
VMethodInvocation
p49723
tp49724
I3
s(g14566
I42
g14567
Vinsert
p49725
I43
VSimpleType: Exception
p49726
tp49727
I1
s(g12846
I42
g12847
Vinsert
p49728
I38
VPrefixExpression: !
p49729
tp49730
I2
s(g6228
I42
g6229
Vinsert
p49731
I33
VNullLiteral
p49732
tp49733
I5
s(g1924
I42
g1925
Vinsert
p49734
I42
VSimpleName: System
p49735
tp49736
I1
s(g415
I42
g416
Vinsert
p49737
I43
VSimpleType: Class
p49738
tp49739
I1
s(g5939
I42
g5940
Vinsert
p49740
I37
VPostfixExpression: ++
p49741
tp49742
I1
s(g4372
I42
g4373
Vinsert
p49743
I42
VSimpleName: join
p49744
tp49745
I1
s(g7619
I42
g7620
Vinsert
p49746
I43
VSimpleType: Argument
p49747
tp49748
I1
s(g12193
I42
g12194
Vinsert
p49749
I65
VTagElement
p49750
tp49751
I1
s(g6744
I42
g6745
Vinsert
p49752
I43
VSimpleType: VerificationModeImpl
p49753
tp49754
I1
s(g7022
I42
g7023
Vinsert
p49755
I42
VSimpleName: AccessibilityChanger
p49756
tp49757
I6
s(g1342
I42
g1343
Vinsert
p49758
I31
VMethodDeclaration
p49759
tp49760
I1
s(g3680
I42
g3681
Vinsert
p49761
I40
VQualifiedName: constructorArgs.length
p49762
tp49763
I1
s(g2575
I42
g2576
Vinsert
p49764
I43
VSimpleType: TreeSet
p49765
tp49766
I1
s(g10368
I42
g10369
Vinsert
p49767
I32
VMethodInvocation
p49768
tp49769
I6
s(g5583
I42
g5584
Vinsert
p49770
I25
VIfStatement
p49771
tp49772
I1
s(g2921
I42
g2922
Vinsert
p49773
I42
VSimpleName: String
p49774
tp49775
I1
s(g36104
I42
g36105
Vinsert
p49776
I60
VVariableDeclarationStatement
p49777
tp49778
I2
s(g23453
I42
g23454
Vinsert
p49779
I42
VSimpleName: i
p49780
tp49781
I1
s(g3121
I42
g3122
Vinsert
p49782
I45
VStringLiteral: "notNull method requires pairs of argument + message"
p49783
tp49784
I1
s(g169
I42
g170
Vinsert
p49785
I42
VSimpleName: MockitoConfiguration
p49786
tp49787
I2
s(g13383
I42
g13384
Vinsert
p49788
I54
VTryStatement
p49789
tp49790
I1
s(g51
I42
g52
Vinsert
p49791
I7
VAssignment: =
p49792
tp49793
I3
s(g2413
I42
g2414
Vinsert
p49794
I40
VQualifiedName: finderStub.actualToReturn
p49795
tp49796
I1
s(g13596
I42
g13597
Vinsert
p49797
I24
VForStatement
p49798
tp49799
I1
s(g159
I42
g160
Vinsert
p49800
I39
VPrimitiveType: void
p49801
tp49802
I3
s(g6502
I42
g6503
Vinsert
p49803
I43
VSimpleType: Exception
p49804
tp49805
I1
s(g13493
I42
g13494
Vinsert
p49806
I14
VClassInstanceCreation
p49807
tp49808
I1
s(g4730
I42
g4731
Vinsert
p49809
I57
VTypeLiteral
p49810
tp49811
I2
s(g3257
I42
g3258
Vinsert
p49812
I57
VTypeLiteral
p49813
tp49814
I1
s(g3016
I42
g3017
Vinsert
p49815
I42
VSimpleName: resource
p49816
tp49817
I2
s(g2080
I42
g2081
Vinsert
p49818
I42
VSimpleName: Date
p49819
tp49820
I2
s(g1282
I42
g1283
Vinsert
p49821
I23
VFieldDeclaration
p49822
tp49823
I2
s(g5378
I42
g5379
Vinsert
p49824
I42
VSimpleName: Description
p49825
tp49826
I1
s(g1785
I42
g1786
Vinsert
p49827
I42
VSimpleName: anyString
p49828
tp49829
I1
s(g5078
I42
g5079
Vinsert
p49830
I42
VSimpleName: Pluralizer
p49831
tp49832
I4
s(g468
I42
g469
Vinsert
p49833
I74
VParameterizedType: LinkedList<T>
p49834
tp49835
I1
s(g7872
I42
g7873
Vinsert
p49836
I42
VSimpleName: IMethods
p49837
tp49838
I4
s(g169
I42
g170
Vinsert
p49839
I21
VExpressionStatement
p49840
tp49841
I2
s(g19009
I42
g19010
Vinsert
p49842
I42
VSimpleName: access
p49843
tp49844
I1
s(g4952
I42
g4953
Vinsert
p49845
I43
VSimpleType: After
p49846
tp49847
I1
s(g8242
I42
g8243
Vinsert
p49848
I42
VSimpleName: Callable
p49849
tp49850
I1
s(g5062
I42
g5063
Vinsert
p49851
I42
VSimpleName: toBeThrown
p49852
tp49853
I1
s(g16677
I42
g16678
Vinsert
p49854
I42
VSimpleName: shouldReturnRealValue
p49855
tp49856
I1
s(g11718
I42
g11719
Vinsert
p49857
I60
VVariableDeclarationStatement
p49858
tp49859
I2
s(g3792
I42
g3793
Vinsert
p49860
I42
VSimpleName: getClass
p49861
tp49862
I1
s(g16979
I42
g16980
Vinsert
p49863
I42
VSimpleName: exerciseMockNTimes
p49864
tp49865
I1
s(g2775
I42
g2776
Vinsert
p49866
I42
VSimpleName: PointingStackTraceToActualInvocationTest
p49867
tp49868
I1
s(g6162
I42
g6163
Vinsert
p49869
I42
VSimpleName: status
p49870
tp49871
I1
s(g8841
I42
g8842
Vinsert
p49872
I42
VSimpleName: ThrowingConstructor
p49873
tp49874
I2
s(g44141
I42
g44142
Vinsert
p49875
I11
VCastExpression
p49876
tp49877
I1
s(g488
I42
g489
Vinsert
p49878
I42
VSimpleName: doThrow
p49879
tp49880
I3
s(g7361
I42
g7362
Vinsert
p49881
I42
VSimpleName: isTypeMockable
p49882
tp49883
I3
s(g2552
I42
g2553
Vinsert
p49884
I42
VSimpleName: listener
p49885
tp49886
I1
s(g1129
I42
g1130
Vinsert
p49887
I42
VSimpleName: verifyingStarted
p49888
tp49889
I2
s(g2508
I42
g2509
Vinsert
p49890
I42
VSimpleName: v
p49891
tp49892
I1
s(g588
I42
g589
Vinsert
p49893
I32
VMethodInvocation
p49894
tp49895
I3
s(g8677
I42
g8678
Vinsert
p49896
I42
VSimpleName: Value
p49897
tp49898
I2
s(g10465
I42
g10466
Vinsert
p49899
I74
VParameterizedType: Iterator<Field>
p49900
tp49901
I1
s(g2775
I42
g2776
Vinsert
p49902
I43
VSimpleType: ResetTest
p49903
tp49904
I1
s(g6924
I42
g6925
Vinsert
p49905
I42
VSimpleName: toBeExposed
p49906
tp49907
I1
s(g6711
I42
g6712
Vinsert
p49908
I32
VMethodInvocation
p49909
tp49910
I2
s(g25849
I42
g25850
Vinsert
p49911
I9
VBooleanLiteral: true
p49912
tp49913
I2
s(g11387
I42
g11388
Vinsert
p49914
I42
VSimpleName: MockitoJUnitRunner
p49915
tp49916
I2
s(g4719
I42
g4720
Vinsert
p49917
I41
VReturnStatement
p49918
tp49919
I2
s(g1019
I42
g1020
Vinsert
p49920
I8
VBlock
p49921
tp49922
I1
s(g10553
I42
g10554
Vinsert
p49923
I42
VSimpleName: equals
p49924
tp49925
I1
s(g22156
I42
g22157
Vinsert
p49926
I43
VSimpleType: Long
p49927
tp49928
I1
s(g10032
I42
g10033
Vinsert
p49929
I42
VSimpleName: newFile
p49930
tp49931
I1
s(g20934
I42
g20935
Vinsert
p49932
I42
VSimpleName: Class
p49933
tp49934
I5
s(g13114
I42
g13115
Vinsert
p49935
I60
VVariableDeclarationStatement
p49936
tp49937
I4
s(g10846
I42
g10847
Vinsert
p49938
I42
VSimpleName: Closure
p49939
tp49940
I4
s(g628
I42
g629
Vinsert
p49941
I43
VSimpleType: Field
p49942
tp49943
I1
s(g9045
I42
g9046
Vinsert
p49944
I42
VSimpleName: size
p49945
tp49946
I1
s(g6468
I42
g6469
Vinsert
p49947
I42
VSimpleName: Mockito
p49948
tp49949
I22
s(g6247
I42
g6248
Vinsert
p49950
I43
VSimpleType: Object
p49951
tp49952
I1
s(g5211
I42
g5212
Vinsert
p49953
I42
VSimpleName: oneArg
p49954
tp49955
I1
s(g5887
I42
g5888
Vinsert
p49956
I42
VSimpleName: typeToMock
p49957
tp49958
I1
s(g7062
I42
g7063
Vinsert
p49959
I42
VSimpleName: mock
p49960
tp49961
I5
s(g11984
I42
g11985
Vinsert
p49962
I74
VParameterizedType: Class<?>
p49963
tp49964
I1
s(g8176
I42
g8177
Vinsert
p49965
I43
VSimpleType: InvocationBuilder
p49966
tp49967
I1
s(g1853
I42
g1854
Vinsert
p49968
I31
VMethodDeclaration
p49969
tp49970
I1
s(g2326
I42
g2327
Vinsert
p49971
I42
VSimpleName: end
p49972
tp49973
I2
s(g831
I42
g832
Vinsert
p49974
I42
VSimpleName: List
p49975
tp49976
I1
s(g8434
I42
g8435
Vinsert
p49977
I43
VSimpleType: MockitoMethod
p49978
tp49979
I2
s(g16587
I42
g16588
Vinsert
p49980
I42
VSimpleName: NoSuchMethodException
p49981
tp49982
I1
s(g25519
I42
g25520
Vinsert
p49983
I7
VAssignment: =
p49984
tp49985
I1
s(g4750
I42
g4751
Vinsert
p49986
I43
VSimpleType: Invocation
p49987
tp49988
I1
s(g4479
I42
g4480
Vinsert
p49989
I42
VSimpleName: StringBuilder
p49990
tp49991
I2
s(g10520
I42
g10521
Vinsert
p49992
I42
VSimpleName: safelyDisableAccess
p49993
tp49994
I1
s(g13694
I42
g13695
Vinsert
p49995
I42
VSimpleName: config
p49996
tp49997
I3
s(g1059
I42
g1060
Vinsert
p49998
I42
VSimpleName: stubbing
p49999
tp50000
I8
s(g2993
I42
g2994
Vinsert
p50001
I42
VSimpleName: asList
p50002
tp50003
I1
s(g3068
I42
g3069
Vinsert
p50004
I62
VInstanceofExpression
p50005
tp50006
I1
s(g2005
I42
g2006
Vinsert
p50007
I83
VModifier: public
p50008
tp50009
I1
s(g3488
I42
g3489
Vinsert
p50010
I32
VMethodInvocation
p50011
tp50012
I279
s(g23051
I42
g23052
Vinsert
p50013
I31
VMethodDeclaration
p50014
tp50015
I1
s(g15053
I42
g15054
Vinsert
p50016
I60
VVariableDeclarationStatement
p50017
tp50018
I1
s(g3280
I42
g3281
Vinsert
p50019
I42
VSimpleName: listener
p50020
tp50021
I2
s(g23569
I42
g23570
Vinsert
p50022
I27
VInfixExpression: <
p50023
tp50024
I1
s(g2585
I42
g2586
Vinsert
p50025
I43
VSimpleType: Class
p50026
tp50027
I1
s(g2139
I42
g2140
Vinsert
p50028
I42
VSimpleName: mock
p50029
tp50030
I1
s(g12231
I42
g12232
Vinsert
p50031
I25
VIfStatement
p50032
tp50033
I2
s(g16291
I42
g16292
Vinsert
p50034
I56
VTypeDeclarationStatement
p50035
tp50036
I1
s(g9473
I42
g9474
Vinsert
p50037
I42
VSimpleName: Class
p50038
tp50039
I1
s(g4944
I42
g4945
Vinsert
p50040
I42
VSimpleName: append
p50041
tp50042
I16
s(g7806
I42
g7807
Vinsert
p50043
I42
VSimpleName: typeToRegister
p50044
tp50045
I1
s(g385
I42
g386
Vinsert
p50046
I42
VSimpleName: issues
p50047
tp50048
I1
s(g1800
I42
g1801
Vinsert
p50049
I42
VSimpleName: ScenarioPrinter
p50050
tp50051
I2
s(g7752
I42
g7753
Vinsert
p50052
I42
VSimpleName: getInherited
p50053
tp50054
I1
s(g4436
I42
g4437
Vinsert
p50055
I42
VSimpleName: shouldNotLogWhenTestPasses
p50056
tp50057
I1
s(g12337
I42
g12338
Vinsert
p50058
I45
VStringLiteral: "string"
p50059
tp50060
I1
s(g4335
I42
g4336
Vinsert
p50061
I42
VSimpleName: Float
p50062
tp50063
I1
s(g13304
I42
g13305
Vinsert
p50064
I42
VSimpleName: MockitoException
p50065
tp50066
I1
s(g2695
I42
g2696
Vinsert
p50067
I42
VSimpleName: getStackTrace
p50068
tp50069
I1
s(g14366
I42
g14367
Vinsert
p50070
I5
VArrayType: String[]
p50071
tp50072
I1
s(g420
I42
g421
Vinsert
p50073
I41
VReturnStatement
p50074
tp50075
I1
s(g20566
I42
g20567
Vinsert
p50076
I42
VSimpleName: mock
p50077
tp50078
I2
s(g332
I42
g333
Vinsert
p50079
I42
VSimpleName: substring
p50080
tp50081
I1
s(g15654
I42
g15655
Vinsert
p50082
I42
VSimpleName: Date
p50083
tp50084
I2
s(g2705
I42
g2706
Vinsert
p50085
I42
VSimpleName: sortedFields
p50086
tp50087
I1
s(g4981
I42
g4982
Vinsert
p50088
I57
VTypeLiteral
p50089
tp50090
I1
s(g4709
I42
g4710
Vinsert
p50091
I42
VSimpleName: listeners
p50092
tp50093
I1
s(g7263
I42
g7264
Vinsert
p50094
I42
VSimpleName: IllegalStateException
p50095
tp50096
I1
s(g1853
I42
g1854
Vinsert
p50097
I44
VSingleVariableDeclaration
p50098
tp50099
I1
s(g8894
I42
g8895
Vinsert
p50100
I32
VMethodInvocation
p50101
tp50102
I2
s(g9491
I42
g9492
Vinsert
p50103
I42
VSimpleName: wanted
p50104
tp50105
I2
s(g2439
I42
g2440
Vinsert
p50106
I42
VSimpleName: listener
p50107
tp50108
I1
s(g722
I42
g723
Vinsert
p50109
I42
VSimpleName: getMockHandler
p50110
tp50111
I1
s(g9789
I42
g9790
Vinsert
p50112
I42
VSimpleName: printStackTrace
p50113
tp50114
I1
s(g12799
I42
g12800
Vinsert
p50115
I25
VIfStatement
p50116
tp50117
I1
s(g876
I42
g877
Vinsert
p50118
I7
VAssignment: =
p50119
tp50120
I1
s(g36104
I42
g36105
Vinsert
p50121
I42
VSimpleName: args
p50122
tp50123
I1
s(g2010
I42
g2011
Vinsert
p50124
I44
VSingleVariableDeclaration
p50125
tp50126
I1
s(g3807
I42
g3808
Vinsert
p50127
I23
VFieldDeclaration
p50128
tp50129
I1
s(g3073
I42
g3074
Vinsert
p50130
I60
VVariableDeclarationStatement
p50131
tp50132
I2
s(g14868
I42
g14869
Vinsert
p50133
I45
VStringLiteral: "ms"
p50134
tp50135
I1
s(g3565
I42
g3566
Vinsert
p50136
I76
VWildcardType: ?
p50137
tp50138
I1
s(g2839
I42
g2840
Vinsert
p50139
I42
VSimpleName: MockUtil
p50140
tp50141
I1
s(g5431
I42
g5432
Vinsert
p50142
I8
VBlock
p50143
tp50144
I2
s(g7495
I42
g7496
Vinsert
p50145
I42
VSimpleName: actual
p50146
tp50147
I1
s(g11434
I42
g11435
Vinsert
p50148
I74
VParameterizedType: MockitoMatcher<T>
p50149
tp50150
I1
s(g2611
I42
g2612
Vinsert
p50151
I32
VMethodInvocation
p50152
tp50153
I1
s(g11353
I42
g11354
Vinsert
p50154
I21
VExpressionStatement
p50155
tp50156
I3
s(g1508
I42
g1509
Vinsert
p50157
I42
VSimpleName: WithFinal
p50158
tp50159
I1
s(g558
I42
g559
Vinsert
p50160
I45
VStringLiteral: "org.mockito.internal.creation.instance.DefaultInstantiatorProvider"
p50161
tp50162
I1
s(g16663
I42
g16664
Vinsert
p50163
I42
VSimpleName: buf
p50164
tp50165
I3
s(g8319
I42
g8320
Vinsert
p50166
I43
VSimpleType: VerifyingMode
p50167
tp50168
I1
s(g7329
I42
g7330
Vinsert
p50169
I8
VBlock
p50170
tp50171
I1
s(g28590
I42
g28591
Vinsert
p50172
I42
VSimpleName: actualInvocations
p50173
tp50174
I4
s(g49344
I42
g49345
Vinsert
p50175
I42
VSimpleName: Thread
p50176
tp50177
I2
s(g21680
I42
g21681
Vinsert
p50178
I42
VSimpleName: InterceptedInvocation
p50179
tp50180
I2
s(g11152
I42
g11153
Vinsert
p50181
I42
VSimpleName: getMockName
p50182
tp50183
I1
s(g11572
I42
g11573
Vinsert
p50184
I32
VMethodInvocation
p50185
tp50186
I1
s(g13023
I42
g13024
Vinsert
p50187
I42
VSimpleName: accessibility
p50188
tp50189
I2
s(g11370
I42
g11371
Vinsert
p50190
I66
VTextElement: then it tries to return SmartNull. If the return type is final then plain null is returned.
p50191
tp50192
I1
s(g3354
I42
g3355
Vinsert
p50193
I43
VSimpleType: ArgumentCaptor
p50194
tp50195
I1
s(g7313
I42
g7314
Vinsert
p50196
I44
VSingleVariableDeclaration
p50197
tp50198
I1
s(g488
I42
g489
Vinsert
p50199
I32
VMethodInvocation
p50200
tp50201
I43
s(g2281
I42
g2282
Vinsert
p50202
I23
VFieldDeclaration
p50203
tp50204
I1
s(g8483
I42
g8484
Vinsert
p50205
I42
VSimpleName: toThrow
p50206
tp50207
I1
s(g4300
I42
g4301
Vinsert
p50208
I43
VSimpleType: Map.Entry
p50209
tp50210
I1
s(g3680
I42
g3681
Vinsert
p50211
I42
VSimpleName: Object
p50212
tp50213
I8
s(g10341
I42
g10342
Vinsert
p50214
I42
VSimpleName: invocation
p50215
tp50216
I2
s(g1655
I42
g1656
Vinsert
p50217
I21
VExpressionStatement
p50218
tp50219
I1
s(g3766
I42
g3767
Vinsert
p50220
I32
VMethodInvocation
p50221
tp50222
I4
s(g15187
I42
g15188
Vinsert
p50223
I42
VSimpleName: argTypes
p50224
tp50225
I1
s(g10688
I42
g10689
Vinsert
p50226
I42
VSimpleName: Throwable
p50227
tp50228
I1
s(g8986
I42
g8987
Vinsert
p50229
I74
VParameterizedType: HashSet<Object>
p50230
tp50231
I1
s(g11877
I42
g11878
Vinsert
p50232
I42
VSimpleName: String
p50233
tp50234
I1
s(g1901
I42
g1902
Vinsert
p50235
I31
VMethodDeclaration
p50236
tp50237
I1
s(g7395
I42
g7396
Vinsert
p50238
I41
VReturnStatement
p50239
tp50240
I2
s(Vinsert
p50241
I42
VSimpleName: getSuperclass
p50242
Vinsert
p50243
I59
VVariableDeclarationFragment
p50244
tp50245
I1
s(g7351
I42
g7352
Vinsert
p50246
I42
VSimpleName: CodeEmitter
p50247
tp50248
I1
s(g13936
I42
g13937
Vinsert
p50249
I42
VSimpleName: ClassLoader
p50250
tp50251
I1
s(g2276
I42
g2277
Vinsert
p50252
I43
VSimpleType: MockHandler
p50253
tp50254
I1
s(g12326
I42
g12327
Vinsert
p50255
I31
VMethodDeclaration
p50256
tp50257
I1
s(g44572
I42
g44573
Vinsert
p50258
I42
VSimpleName: spy
p50259
tp50260
I3
s(g3078
I42
g3079
Vinsert
p50261
I8
VBlock
p50262
tp50263
I13
s(g8283
I42
g8284
Vinsert
p50264
I42
VSimpleName: o
p50265
tp50266
I1
s(g8867
I42
g8868
Vinsert
p50267
I41
VReturnStatement
p50268
tp50269
I1
s(g4560
I42
g4561
Vinsert
p50270
I42
VSimpleName: StringBuffer
p50271
tp50272
I1
s(g12097
I42
g12098
Vinsert
p50273
I54
VTryStatement
p50274
tp50275
I1
s(g3560
I42
g3561
Vinsert
p50276
I42
VSimpleName: field
p50277
tp50278
I1
s(g4194
I42
g4195
Vinsert
p50279
I42
VSimpleName: inThread
p50280
tp50281
I1
s(g36000
I42
g36001
Vinsert
p50282
I42
VSimpleName: shouldMentionFinalAndObjectMethodsWhenMissingMockCall
p50283
tp50284
I1
s(g17240
I42
g17241
Vinsert
p50285
I79
VSingleMemberAnnotation
p50286
tp50287
I1
s(g10623
I42
g10624
Vinsert
p50288
I43
VSimpleType: ArrayList
p50289
tp50290
I1
s(g4523
I42
g4524
Vinsert
p50291
I42
VSimpleName: container
p50292
tp50293
I2
s(g27767
I42
g27768
Vinsert
p50294
I45
VStringLiteral: "just to get stack trace"
p50295
tp50296
I1
s(g15203
I42
g15204
Vinsert
p50297
I42
VSimpleName: IllegalArgumentException
p50298
tp50299
I1
s(g2815
I42
g2816
Vinsert
p50300
I43
VSimpleType: LocalizedMatcher
p50301
tp50302
I2
s(g765
I42
g766
Vinsert
p50303
I43
VSimpleType: Exception
p50304
tp50305
I1
s(g9967
I42
g9968
Vinsert
p50306
I42
VSimpleName: desc
p50307
tp50308
I4
s(g7041
I42
g7042
Vinsert
p50309
I33
VNullLiteral
p50310
tp50311
I2
s(g11353
I42
g11354
Vinsert
p50312
I43
VSimpleType: ContainsExtraTypeInformation
p50313
tp50314
I1
s(g3026
I42
g3027
Vinsert
p50315
I14
VClassInstanceCreation
p50316
tp50317
I3
s(g4709
I42
g4710
Vinsert
p50318
I21
VExpressionStatement
p50319
tp50320
I8
s(g727
I42
g728
Vinsert
p50321
I40
VQualifiedName: org.mockito.internal.stubbing.StubbedInvocationMatcher
p50322
tp50323
I1
s(g3948
I42
g3949
Vinsert
p50324
I42
VSimpleName: LocalizedMatcher
p50325
tp50326
I2
s(g11314
I42
g11315
Vinsert
p50327
I42
VSimpleName: Mockito
p50328
tp50329
I1
s(g5439
I42
g5440
Vinsert
p50330
I43
VSimpleType: LinkedHashSet
p50331
tp50332
I1
s(g2248
I42
g2249
Vinsert
p50333
I42
VSimpleName: exception
p50334
tp50335
I1
s(g5491
I42
g5492
Vinsert
p50336
I42
VSimpleName: VerificationModeFactory
p50337
tp50338
I1
s(g2331
I42
g2332
Vinsert
p50339
I32
VMethodInvocation
p50340
tp50341
I9
s(g648
I42
g649
Vinsert
p50342
I42
VSimpleName: articleTwo
p50343
tp50344
I1
s(g11580
I42
g11581
Vinsert
p50345
I42
VSimpleName: VerifyingMode
p50346
tp50347
I1
s(g2978
I42
g2979
Vinsert
p50348
I21
VExpressionStatement
p50349
tp50350
I32
s(g5421
I42
g5422
Vinsert
p50351
I33
VNullLiteral
p50352
tp50353
I1
s(g4263
I42
g4264
Vinsert
p50354
I42
VSimpleName: VerifyingMode
p50355
tp50356
I2
s(g16771
I42
g16772
Vinsert
p50357
I45
VStringLiteral: "x"
p50358
tp50359
I2
s(g8553
I42
g8554
Vinsert
p50360
I32
VMethodInvocation
p50361
tp50362
I1
s(g19085
I42
g19086
Vinsert
p50363
I42
VSimpleName: MockHandler
p50364
tp50365
I2
s(g20068
I42
g20069
Vinsert
p50366
I42
VSimpleName: increment
p50367
tp50368
I1
s(g5744
I42
g5745
Vinsert
p50369
I78
VMarkerAnnotation
p50370
tp50371
I1
s(g2472
I42
g2473
Vinsert
p50372
I31
VMethodDeclaration
p50373
tp50374
I1
s(g4295
I42
g4296
Vinsert
p50375
I41
VReturnStatement
p50376
tp50377
I1
s(g395
I42
g396
Vinsert
p50378
I31
VMethodDeclaration
p50379
tp50380
I1
s(g322
I42
g323
Vinsert
p50381
I60
VVariableDeclarationStatement
p50382
tp50383
I2
s(g608
I42
g609
Vinsert
p50384
I21
VExpressionStatement
p50385
tp50386
I3
s(g17574
I42
g17575
Vinsert
p50387
I34
VNumberLiteral: 1
p50388
tp50389
I1
s(g5403
I42
g5404
Vinsert
p50390
I42
VSimpleName: getDeclaredMethod
p50391
tp50392
I1
s(g13897
I42
g13898
Vinsert
p50393
I83
VModifier: static
p50394
tp50395
I1
s(g15601
I42
g15602
Vinsert
p50396
I14
VClassInstanceCreation
p50397
tp50398
I8
s(g5133
I42
g5134
Vinsert
p50399
I42
VSimpleName: mv
p50400
tp50401
I2
s(g9692
I42
g9693
Vinsert
p50402
I42
VSimpleName: hasMethodInStackTraceAt
p50403
tp50404
I1
s(g25340
I42
g25341
Vinsert
p50405
I32
VMethodInvocation
p50406
tp50407
I4
s(g15498
I42
g15499
Vinsert
p50408
I8
VBlock
p50409
tp50410
I17
s(g11353
I42
g11354
Vinsert
p50411
I60
VVariableDeclarationStatement
p50412
tp50413
I3
s(g5282
I42
g5283
Vinsert
p50414
I32
VMethodInvocation
p50415
tp50416
I1
s(g841
I42
g842
Vinsert
p50417
I41
VReturnStatement
p50418
tp50419
I1
s(g3421
I42
g3422
Vinsert
p50420
I66
VTextElement: <code>null</code> if the type is neither a primitive nor a wrapper
p50421
tp50422
I1
s(g3880
I42
g3881
Vinsert
p50423
I8
VBlock
p50424
tp50425
I2
s(g12449
I42
g12450
Vinsert
p50426
I42
VSimpleName: c
p50427
tp50428
I1
s(g134
I42
g135
Vinsert
p50429
I11
VCastExpression
p50430
tp50431
I1
s(g866
I42
g867
Vinsert
p50432
I34
VNumberLiteral: 1
p50433
tp50434
I8
s(g9403
I42
g9404
Vinsert
p50435
I42
VSimpleName: mock
p50436
tp50437
I2
s(g17987
I42
g17988
Vinsert
p50438
I34
VNumberLiteral: 25
p50439
tp50440
I1
s(g8057
I42
g8058
Vinsert
p50441
I42
VSimpleName: t
p50442
tp50443
I1
s(g9260
I42
g9261
Vinsert
p50444
I42
VSimpleName: noMatchFound
p50445
tp50446
I1
s(g20322
I42
g20323
Vinsert
p50447
I62
VInstanceofExpression
p50448
tp50449
I1
s(g27880
I42
g27881
Vinsert
p50450
I23
VFieldDeclaration
p50451
tp50452
I1
s(g12326
I42
g12327
Vinsert
p50453
I32
VMethodInvocation
p50454
tp50455
I1
s(g10015
I42
g10016
Vinsert
p50456
I42
VSimpleName: wanted
p50457
tp50458
I1
s(g15747
I42
g15748
Vinsert
p50459
I43
VSimpleType: JunitTestBody
p50460
tp50461
I1
s(g1372
I42
g1373
Vinsert
p50462
I1
VAnonymousClassDeclaration
p50463
tp50464
I4
s(g2616
I42
g2617
Vinsert
p50465
I42
VSimpleName: Override
p50466
tp50467
I1
s(g7390
I42
g7391
Vinsert
p50468
I42
VSimpleName: begin_method
p50469
tp50470
I1
s(g17014
I42
g17015
Vinsert
p50471
I43
VSimpleType: NotAMockException
p50472
tp50473
I1
s(g15733
I42
g15734
Vinsert
p50474
I42
VSimpleName: printHeader
p50475
tp50476
I1
s(g8348
I42
g8349
Vinsert
p50477
I43
VSimpleType: Object
p50478
tp50479
I6
s(g3073
I42
g3074
Vinsert
p50480
I59
VVariableDeclarationFragment
p50481
tp50482
I2
s(g6334
I42
g6335
Vinsert
p50483
I21
VExpressionStatement
p50484
tp50485
I2
s(g12193
I42
g12194
Vinsert
p50486
I66
VTextElement:  Name of the field.
p50487
tp50488
I1
s(g851
I42
g852
Vinsert
p50489
I43
VSimpleType: MyObject
p50490
tp50491
I1
s(g6116
I42
g6117
Vinsert
p50492
I42
VSimpleName: contributions
p50493
tp50494
I1
s(g415
I42
g416
Vinsert
p50495
I42
VSimpleName: mockedType
p50496
tp50497
I1
s(g16356
I42
g16357
Vinsert
p50498
I42
VSimpleName: answer
p50499
tp50500
I2
s(g4051
I42
g4052
Vinsert
p50501
I41
VReturnStatement
p50502
tp50503
I1
s(g4059
I42
g4060
Vinsert
p50504
I45
VStringLiteral: "\u005cn"
p50505
tp50506
I1
s(g7282
I42
g7283
Vinsert
p50507
I44
VSingleVariableDeclaration
p50508
tp50509
I2
s(g410
I42
g411
Vinsert
p50510
I42
VSimpleName: InvocationListener
p50511
tp50512
I1
s(g5712
I42
g5713
Vinsert
p50513
I42
VSimpleName: actualTypeArguments
p50514
tp50515
I1
s(g20453
I42
g20454
Vinsert
p50516
I43
VSimpleType: T
p50517
tp50518
I3
s(g6300
I42
g6301
Vinsert
p50519
I8
VBlock
p50520
tp50521
I1
s(g6574
I42
g6575
Vinsert
p50522
I43
VSimpleType: FieldReader
p50523
tp50524
I2
s(g4840
I42
g4841
Vinsert
p50525
I42
VSimpleName: getStackTraceCleanerProvider
p50526
tp50527
I1
s(g778
I42
g779
Vinsert
p50528
I83
VModifier: final
p50529
tp50530
I1
s(g29474
I42
g29475
Vinsert
p50531
I45
VStringLiteral: "You cannot have more than one Mockito annotation on a field!\u005cn"
p50532
tp50533
I1
s(g4900
I42
g4901
Vinsert
p50534
I42
VSimpleName: String
p50535
tp50536
I1
s(g6566
I42
g6567
Vinsert
p50537
I39
VPrimitiveType: void
p50538
tp50539
I1
s(g17014
I42
g17015
Vinsert
p50540
I45
VStringLiteral: "Argument passed to Mockito.mockingDetails() should be a mock, but is null!"
p50541
tp50542
I1
s(g19085
I42
g19086
Vinsert
p50543
I42
VSimpleName: T
p50544
tp50545
I2
s(g23817
I42
g23818
Vinsert
p50546
I42
VSimpleName: doThrow
p50547
tp50548
I1
s(g21496
I42
g21497
Vinsert
p50549
I43
VSimpleType: UnsupportedOperationException
p50550
tp50551
I1
s(g11828
I42
g11829
Vinsert
p50552
I42
VSimpleName: line
p50553
tp50554
I2
s(g6162
I42
g6163
Vinsert
p50555
I36
VParenthesizedExpression
p50556
tp50557
I1
s(g12097
I42
g12098
Vinsert
p50558
I44
VSingleVariableDeclaration
p50559
tp50560
I1
s(g9095
I42
g9096
Vinsert
p50561
I42
VSimpleName: valueOf
p50562
tp50563
I1
s(g12326
I42
g12327
Vinsert
p50564
I43
VSimpleType: Invocation
p50565
tp50566
I1
s(g3374
I42
g3375
Vinsert
p50567
I42
VSimpleName: shouldPrintNiceName
p50568
tp50569
I1
s(g19217
I42
g19218
Vinsert
p50570
I42
VSimpleName: collector
p50571
tp50572
I2
s(g2672
I42
g2673
Vinsert
p50573
I31
VMethodDeclaration
p50574
tp50575
I1
s(g1337
I42
g1338
Vinsert
p50576
I42
VSimpleName: withSettings
p50577
tp50578
I3
s(g11074
I42
g11075
Vinsert
p50579
I1
VAnonymousClassDeclaration
p50580
tp50581
I1
s(g6446
I42
g6447
Vinsert
p50582
I42
VSimpleName: Assertions
p50583
tp50584
I2
s(g19257
I42
g19258
Vinsert
p50585
I42
VSimpleName: simpleMethodInvocationThree
p50586
tp50587
I1
s(g8353
I42
g8354
Vinsert
p50588
I42
VSimpleName: Set
p50589
tp50590
I3
s(g3183
I42
g3184
Vinsert
p50591
I8
VBlock
p50592
tp50593
I7
s(g38169
I42
g38170
Vinsert
p50594
I42
VSimpleName: anyInt
p50595
tp50596
I1
s(g648
I42
g649
Vinsert
p50597
I42
VSimpleName: stub
p50598
tp50599
I1
s(g3991
I42
g3992
Vinsert
p50600
I43
VSimpleType: StackTraceElement
p50601
tp50602
I2
s(g7213
I42
g7214
Vinsert
p50603
I43
VSimpleType: InvocationBuilder
p50604
tp50605
I1
s(g518
I42
g519
Vinsert
p50606
I42
VSimpleName: invocation
p50607
tp50608
I2
s(g4189
I42
g4190
Vinsert
p50609
I43
VSimpleType: Class
p50610
tp50611
I1
s(g4409
I42
g4410
Vinsert
p50612
I45
VStringLiteral: "def"
p50613
tp50614
I1
s(g881
I42
g882
Vinsert
p50615
I42
VSimpleName: getMock
p50616
tp50617
I1
s(g410
I42
g411
Vinsert
p50618
I42
VSimpleName: Exception
p50619
tp50620
I1
s(g448
I42
g449
Vinsert
p50621
I39
VPrimitiveType: void
p50622
tp50623
I1
s(g11612
I42
g11613
Vinsert
p50624
I42
VSimpleName: SyncingPrinter
p50625
tp50626
I1
s(g6642
I42
g6643
Vinsert
p50627
I39
VPrimitiveType: boolean
p50628
tp50629
I1
s(g6736
I42
g6737
Vinsert
p50630
I42
VSimpleName: Invocation
p50631
tp50632
I1
s(g3493
I42
g3494
Vinsert
p50633
I42
VSimpleName: assertEquals
p50634
tp50635
I1
s(g936
I42
g937
Vinsert
p50636
I83
VModifier: public
p50637
tp50638
I1
s(g4163
I42
g4164
Vinsert
p50639
I42
VSimpleName: StackTraceElement
p50640
tp50641
I2
s(g10794
I42
g10795
Vinsert
p50642
I21
VExpressionStatement
p50643
tp50644
I1
s(g4138
I42
g4139
Vinsert
p50645
I42
VSimpleName: verify
p50646
tp50647
I1
s(g15147
I42
g15148
Vinsert
p50648
I42
VSimpleName: unstubbedInvocation
p50649
tp50650
I1
s(g2046
I42
g2047
Vinsert
p50651
I42
VSimpleName: mock
p50652
tp50653
I3
s(g3758
I42
g3759
Vinsert
p50654
I43
VSimpleType: OngoingVerifyingMode
p50655
tp50656
I1
s(g4300
I42
g4301
Vinsert
p50657
I42
VSimpleName: m
p50658
tp50659
I2
s(g12221
I42
g12222
Vinsert
p50660
I42
VSimpleName: declaredField
p50661
tp50662
I3
s(g4939
I42
g4940
Vinsert
p50663
I44
VSingleVariableDeclaration
p50664
tp50665
I1
s(g154
I42
g155
Vinsert
p50666
I60
VVariableDeclarationStatement
p50667
tp50668
I1
s(g2575
I42
g2576
Vinsert
p50669
I42
VSimpleName: Object
p50670
tp50671
I1
s(g3441
I42
g3442
Vinsert
p50672
I39
VPrimitiveType: boolean
p50673
tp50674
I1
s(g20813
I42
g20814
Vinsert
p50675
I21
VExpressionStatement
p50676
tp50677
I2
s(g1352
I42
g1353
Vinsert
p50678
I42
VSimpleName: Exception
p50679
tp50680
I1
s(g10634
I42
g10635
Vinsert
p50681
I42
VSimpleName: interfaces
p50682
tp50683
I1
s(g11552
I42
g11553
Vinsert
p50684
I42
VSimpleName: equals
p50685
tp50686
I1
s(g2839
I42
g2840
Vinsert
p50687
I74
VParameterizedType: List<Invocation>
p50688
tp50689
I1
s(g8030
I42
g8031
Vinsert
p50690
I43
VSimpleType: Verifier
p50691
tp50692
I4
s(g8393
I42
g8394
Vinsert
p50693
I42
VSimpleName: ancillaryTypes
p50694
tp50695
I2
s(g1934
I42
g1935
Vinsert
p50696
I43
VSimpleType: Class
p50697
tp50698
I3
s(g6796
I42
g6797
Vinsert
p50699
I42
VSimpleName: instance
p50700
tp50701
I1
s(g2344
I42
g2345
Vinsert
p50702
I43
VSimpleType: MockHandlerImpl
p50703
tp50704
I2
s(g5133
I42
g5134
Vinsert
p50705
I32
VMethodInvocation
p50706
tp50707
I1
s(g4441
I42
g4442
Vinsert
p50708
I42
VSimpleName: Class
p50709
tp50710
I1
s(g7416
I42
g7417
Vinsert
p50711
I39
VPrimitiveType: void
p50712
tp50713
I1
s(g12777
I42
g12778
Vinsert
p50714
I24
VForStatement
p50715
tp50716
I1
s(g1044
I42
g1045
Vinsert
p50717
I42
VSimpleName: only
p50718
tp50719
I1
s(g327
I42
g328
Vinsert
p50720
I34
VNumberLiteral: 1
p50721
tp50722
I1
s(g8488
I42
g8489
Vinsert
p50723
I42
VSimpleName: dummyInterface
p50724
tp50725
I2
s(g1858
I42
g1859
Vinsert
p50726
I45
VStringLiteral: "This substing:"
p50727
tp50728
I2
s(g11645
I42
g11646
Vinsert
p50729
I43
VSimpleType: MissingMethodInvocationException
p50730
tp50731
I1
s(g8921
I42
g8922
Vinsert
p50732
I42
VSimpleName: Message
p50733
tp50734
I5
s(g6744
I42
g6745
Vinsert
p50735
I42
VSimpleName: mock
p50736
tp50737
I2
s(g13540
I42
g13541
Vinsert
p50738
I42
VSimpleName: linePrefix
p50739
tp50740
I2
s(g5839
I42
g5840
Vinsert
p50741
I44
VSingleVariableDeclaration
p50742
tp50743
I1
s(g742
I42
g743
Vinsert
p50744
I74
VParameterizedType: List<Invocation>
p50745
tp50746
I2
s(g385
I42
g386
Vinsert
p50747
I42
VSimpleName: Issue
p50748
tp50749
I1
s(g6677
I42
g6678
Vinsert
p50750
I43
VSimpleType: Type
p50751
tp50752
I1
s(g12536
I42
g12537
Vinsert
p50753
I42
VSimpleName: MockitoAssertionError
p50754
tp50755
I2
s(g5821
I42
g5822
Vinsert
p50756
I8
VBlock
p50757
tp50758
I1
s(g5226
I42
g5227
Vinsert
p50759
I43
VSimpleType: List
p50760
tp50761
I1
s(g154
I42
g155
Vinsert
p50762
I42
VSimpleName: getGenericType
p50763
tp50764
I2
s(g956
I42
g957
Vinsert
p50765
I21
VExpressionStatement
p50766
tp50767
I1
s(g3532
I42
g3533
Vinsert
p50768
I42
VSimpleName: getDescription
p50769
tp50770
I2
s(g9234
I42
g9235
Vinsert
p50771
I37
VPostfixExpression: ++
p50772
tp50773
I1
s(g252
I42
g253
Vinsert
p50774
I42
VSimpleName: comparator
p50775
tp50776
I1
s(g8329
I42
g8330
Vinsert
p50777
I14
VClassInstanceCreation
p50778
tp50779
I1
s(g5975
I42
g5976
Vinsert
p50780
I42
VSimpleName: myClass
p50781
tp50782
I1
s(g29463
I42
g29464
Vinsert
p50783
I42
VSimpleName: imethodsMock
p50784
tp50785
I1
s(g6846
I42
g6847
Vinsert
p50786
I60
VVariableDeclarationStatement
p50787
tp50788
I1
s(g7177
I42
g7178
Vinsert
p50789
I43
VSimpleType: RunnerFactory
p50790
tp50791
I8
s(g28323
I42
g28324
Vinsert
p50792
I42
VSimpleName: ChildOfThis
p50793
tp50794
I2
s(g1416
I42
g1417
Vinsert
p50795
I43
VSimpleType: String
p50796
tp50797
I1
s(g10553
I42
g10554
Vinsert
p50798
I42
VSimpleName: text
p50799
tp50800
I1
s(g10354
I42
g10355
Vinsert
p50801
I42
VSimpleName: value
p50802
tp50803
I3
s(g3802
I42
g3803
Vinsert
p50804
I43
VSimpleType: StackTraceElement
p50805
tp50806
I2
s(g9147
I42
g9148
Vinsert
p50807
I21
VExpressionStatement
p50808
tp50809
I2
s(g5180
I42
g5181
Vinsert
p50810
I83
VModifier: public
p50811
tp50812
I1
s(g4322
I42
g4323
Vinsert
p50813
I42
VSimpleName: isEnabled
p50814
tp50815
I1
s(g234
I42
g235
Vinsert
p50816
I43
VSimpleType: MethodVisitor
p50817
tp50818
I1
s(g5921
I42
g5922
Vinsert
p50819
I42
VSimpleName: Exception
p50820
tp50821
I1
s(g129
I42
g130
Vinsert
p50822
I41
VReturnStatement
p50823
tp50824
I1
s(g613
I42
g614
Vinsert
p50825
I39
VPrimitiveType: int
p50826
tp50827
I1
s(g20357
I42
g20358
Vinsert
p50828
I14
VClassInstanceCreation
p50829
tp50830
I1
s(g2921
I42
g2922
Vinsert
p50831
I42
VSimpleName: event
p50832
tp50833
I2
s(g10311
I42
g10312
Vinsert
p50834
I42
VSimpleName: ListDependent
p50835
tp50836
I1
s(g8504
I42
g8505
Vinsert
p50837
I34
VNumberLiteral: 1
p50838
tp50839
I1
s(g12799
I42
g12800
Vinsert
p50840
I42
VSimpleName: bytes
p50841
tp50842
I1
s(g22880
I42
g22881
Vinsert
p50843
I42
VSimpleName: Float
p50844
tp50845
I1
s(g129
I42
g130
Vinsert
p50846
I42
VSimpleName: T
p50847
tp50848
I2
s(g25340
I42
g25341
Vinsert
p50849
I60
VVariableDeclarationStatement
p50850
tp50851
I1
s(g16449
I42
g16450
Vinsert
p50852
I7
VAssignment: =
p50853
tp50854
I1
s(g6013
I42
g6014
Vinsert
p50855
I42
VSimpleName: inOrder_only_work_on_the_very_last_mock_but_it_works
p50856
tp50857
I1
s(g3126
I42
g3127
Vinsert
p50858
I78
VMarkerAnnotation
p50859
tp50860
I2
s(g1079
I42
g1080
Vinsert
p50861
I39
VPrimitiveType: void
p50862
tp50863
I1
s(g7408
I42
g7409
Vinsert
p50864
I21
VExpressionStatement
p50865
tp50866
I1
s(g7931
I42
g7932
Vinsert
p50867
I42
VSimpleName: Throwable
p50868
tp50869
I1
s(g5083
I42
g5084
Vinsert
p50870
I14
VClassInstanceCreation
p50871
tp50872
I12
s(g9478
I42
g9479
Vinsert
p50873
I42
VSimpleName: shouldNotThrowNPE
p50874
tp50875
I2
s(g15733
I42
g15734
Vinsert
p50876
I42
VSimpleName: printlnIndented
p50877
tp50878
I1
s(g2429
I42
g2430
Vinsert
p50879
I32
VMethodInvocation
p50880
tp50881
I4
s(g49522
I42
g49523
Vinsert
p50882
I34
VNumberLiteral: 40
p50883
tp50884
I1
s(g1239
I42
g1240
Vinsert
p50885
I8
VBlock
p50886
tp50887
I1
s(g5431
I42
g5432
Vinsert
p50888
I39
VPrimitiveType: int
p50889
tp50890
I1
s(g17425
I42
g17426
Vinsert
p50891
I74
VParameterizedType: LinkedList<StackTraceElement>
p50892
tp50893
I1
s(g1439
I42
g1440
Vinsert
p50894
I42
VSimpleName: av2
p50895
tp50896
I2
s(g548
I42
g549
Vinsert
p50897
I43
VSimpleType: Class
p50898
tp50899
I1
s(g1609
I42
g1610
Vinsert
p50900
I45
VStringLiteral: "other"
p50901
tp50902
I1
s(g322
I42
g323
Vinsert
p50903
I42
VSimpleName: List
p50904
tp50905
I2
s(g3616
I42
g3617
Vinsert
p50906
I7
VAssignment: =
p50907
tp50908
I1
s(g24378
I42
g24379
Vinsert
p50909
I42
VSimpleName: Object
p50910
tp50911
I1
s(g6379
I42
g6380
Vinsert
p50912
I43
VSimpleType: IOException
p50913
tp50914
I1
s(g2248
I42
g2249
Vinsert
p50915
I43
VSimpleType: Invocation
p50916
tp50917
I1
s(g23752
I42
g23753
Vinsert
p50918
I42
VSimpleName: prefix
p50919
tp50920
I1
s(g4934
I42
g4935
Vinsert
p50921
I43
VSimpleType: AnnotationVisitor
p50922
tp50923
I1
s(g12960
I42
g12961
Vinsert
p50924
I45
VStringLiteral: "-1"
p50925
tp50926
I1
s(g8663
I42
g8664
Vinsert
p50927
I16
VConditionalExpression
p50928
tp50929
I1
s(g9571
I42
g9572
Vinsert
p50930
I31
VMethodDeclaration
p50931
tp50932
I1
s(g18914
I42
g18915
Vinsert
p50933
I43
VSimpleType: Returns
p50934
tp50935
I2
s(g1092
I42
g1093
Vinsert
p50936
I39
VPrimitiveType: int
p50937
tp50938
I9
s(g6468
I42
g6469
Vinsert
p50939
I42
VSimpleName: ensure_mocking_interface_clone_method_doesnot_throw_IllegalAccessError
p50940
tp50941
I1
s(g347
I42
g348
Vinsert
p50942
I43
VSimpleType: MethodDescription.ForLoadedMethod
p50943
tp50944
I1
s(g9504
I42
g9505
Vinsert
p50945
I42
VSimpleName: Exception
p50946
tp50947
I1
s(g10987
I42
g10988
Vinsert
p50948
I43
VSimpleType: RuntimeException
p50949
tp50950
I1
s(g6882
I42
g6883
Vinsert
p50951
I42
VSimpleName: interfaces
p50952
tp50953
I1
s(g1805
I42
g1806
Vinsert
p50954
I42
VSimpleName: HasStackTrace
p50955
tp50956
I1
s(g871
I42
g872
Vinsert
p50957
I43
VSimpleType: Stubbing
p50958
tp50959
I2
s(g7730
I42
g7731
Vinsert
p50960
I42
VSimpleName: Reporter
p50961
tp50962
I1
s(g11612
I42
g11613
Vinsert
p50963
I42
VSimpleName: multi
p50964
tp50965
I2
s(g1637
I42
g1638
Vinsert
p50966
I42
VSimpleName: m
p50967
tp50968
I2
s(g6669
I42
g6670
Vinsert
p50969
I83
VModifier: public
p50970
tp50971
I1
s(g4451
I42
g4452
Vinsert
p50972
I42
VSimpleName: VerifcationInOrderFailed
p50973
tp50974
I1
s(g5847
I42
g5848
Vinsert
p50975
I45
VStringLiteral: "' of object '"
p50976
tp50977
I1
s(g3390
I42
g3391
Vinsert
p50978
I38
VPrefixExpression: !
p50979
tp50980
I1
s(g4861
I42
g4862
Vinsert
p50981
I14
VClassInstanceCreation
p50982
tp50983
I1
s(g6321
I42
g6322
Vinsert
p50984
I21
VExpressionStatement
p50985
tp50986
I4
s(g17240
I42
g17241
Vinsert
p50987
I8
VBlock
p50988
tp50989
I1
s(g1578
I42
g1579
Vinsert
p50990
I32
VMethodInvocation
p50991
tp50992
I3
s(g9252
I42
g9253
Vinsert
p50993
I60
VVariableDeclarationStatement
p50994
tp50995
I2
s(g4939
I42
g4940
Vinsert
p50996
I42
VSimpleName: fail
p50997
tp50998
I1
s(g4335
I42
g4336
Vinsert
p50999
I52
VThisExpression
p51000
tp51001
I2
s(g6781
I42
g6782
Vinsert
p51002
I32
VMethodInvocation
p51003
tp51004
I2
s(g16979
I42
g16980
Vinsert
p51005
I42
VSimpleName: verify
p51006
tp51007
I1
s(g13855
I42
g13856
Vinsert
p51008
I42
VSimpleName: VerificationStartedEvent
p51009
tp51010
I1
s(g2398
I42
g2399
Vinsert
p51011
I32
VMethodInvocation
p51012
tp51013
I4
s(g1833
I42
g1834
Vinsert
p51014
I43
VSimpleType: ArgumentsAreDifferent
p51015
tp51016
I1
s(g4461
I42
g4462
Vinsert
p51017
I42
VSimpleName: getArticlesFor
p51018
tp51019
I1
s(g10368
I42
g10369
Vinsert
p51020
I40
VQualifiedName: Map.Entry
p51021
tp51022
I3
s(g2557
I42
g2558
Vinsert
p51023
I6
VAssertStatement
p51024
tp51025
I3
s(g18290
I42
g18291
Vinsert
p51026
I42
VSimpleName: e
p51027
tp51028
I10
s(g8729
I42
g8730
Vinsert
p51029
I39
VPrimitiveType: void
p51030
tp51031
I1
s(g8663
I42
g8664
Vinsert
p51032
I21
VExpressionStatement
p51033
tp51034
I1
s(g2611
I42
g2612
Vinsert
p51035
I42
VSimpleName: MethodVisitor
p51036
tp51037
I1
s(g15654
I42
g15655
Vinsert
p51038
I42
VSimpleName: TreeSet
p51039
tp51040
I1
s(g628
I42
g629
Vinsert
p51041
I42
VSimpleName: field
p51042
tp51043
I1
s(g5834
I42
g5835
Vinsert
p51044
I42
VSimpleName: usingConstructor
p51045
tp51046
I1
s(g25311
I42
g25312
Vinsert
p51047
I42
VSimpleName: actualMessage
p51048
tp51049
I1
s(g9413
I42
g9414
Vinsert
p51050
I54
VTryStatement
p51051
tp51052
I1
s(g986
I42
g987
Vinsert
p51053
I44
VSingleVariableDeclaration
p51054
tp51055
I1
s(g4484
I42
g4485
Vinsert
p51056
I42
VSimpleName: LinkedList
p51057
tp51058
I2
s(g15429
I42
g15430
Vinsert
p51059
I43
VSimpleType: Invocation
p51060
tp51061
I7
s(g13161
I42
g13162
Vinsert
p51062
I42
VSimpleName: DefaultImprovements
p51063
tp51064
I1
s(g94
I42
g95
Vinsert
p51065
I32
VMethodInvocation
p51066
tp51067
I33
s(g498
I42
g499
Vinsert
p51068
I33
VNullLiteral
p51069
tp51070
I1
s(g3743
I42
g3744
Vinsert
p51071
I25
VIfStatement
p51072
tp51073
I1
s(g2998
I42
g2999
Vinsert
p51074
I32
VMethodInvocation
p51075
tp51076
I1
s(g1619
I42
g1620
Vinsert
p51077
I39
VPrimitiveType: void
p51078
tp51079
I2
s(g10164
I42
g10165
Vinsert
p51080
I42
VSimpleName: message
p51081
tp51082
I1
s(g46855
I42
g46856
Vinsert
p51083
I42
VSimpleName: List
p51084
tp51085
I3
s(g11791
I42
g11792
Vinsert
p51086
I60
VVariableDeclarationStatement
p51087
tp51088
I1
s(g10567
I42
g10568
Vinsert
p51089
I43
VSimpleType: Set
p51090
tp51091
I2
s(g16053
I42
g16054
Vinsert
p51092
I43
VSimpleType: Answer
p51093
tp51094
I3
s(g10354
I42
g10355
Vinsert
p51095
I42
VSimpleName: delta
p51096
tp51097
I1
s(g3725
I42
g3726
Vinsert
p51098
I43
VSimpleType: Set
p51099
tp51100
I1
s(g8314
I42
g8315
Vinsert
p51101
I42
VSimpleName: Class
p51102
tp51103
I1
s(g778
I42
g779
Vinsert
p51104
I42
VSimpleName: accept
p51105
tp51106
I1
s(g27880
I42
g27881
Vinsert
p51107
I42
VSimpleName: Mock
p51108
tp51109
I2
s(g7030
I42
g7031
Vinsert
p51110
I42
VSimpleName: String
p51111
tp51112
I3
s(g8778
I42
g8779
Vinsert
p51113
I57
VTypeLiteral
p51114
tp51115
I1
s(g99
I42
g100
Vinsert
p51116
I42
VSimpleName: runner
p51117
tp51118
I5
s(g1426
I42
g1427
Vinsert
p51119
I23
VFieldDeclaration
p51120
tp51121
I1
s(g3426
I42
g3427
Vinsert
p51122
I42
VSimpleName: decode
p51123
tp51124
I2
s(g9504
I42
g9505
Vinsert
p51125
I8
VBlock
p51126
tp51127
I2
s(g13186
I42
g13187
Vinsert
p51128
I32
VMethodInvocation
p51129
tp51130
I1
s(g2222
I42
g2223
Vinsert
p51131
I8
VBlock
p51132
tp51133
I7
s(g8414
I42
g8415
Vinsert
p51134
I42
VSimpleName: calculator
p51135
tp51136
I1
s(g453
I42
g454
Vinsert
p51137
I83
VModifier: public
p51138
tp51139
I1
s(g179
I42
g180
Vinsert
p51140
I42
VSimpleName: Invocation
p51141
tp51142
I3
s(g9460
I42
g9461
Vinsert
p51143
I42
VSimpleName: startsWith
p51144
tp51145
I1
s(g801
I42
g802
Vinsert
p51146
I42
VSimpleName: PrintSettings
p51147
tp51148
I1
s(g4714
I42
g4715
Vinsert
p51149
I83
VModifier: public
p51150
tp51151
I2
s(g22502
I42
g22503
Vinsert
p51152
I42
VSimpleName: init_mocks
p51153
tp51154
I1
s(g7526
I42
g7527
Vinsert
p51155
I42
VSimpleName: progressMonitor
p51156
tp51157
I2
s(g6355
I42
g6356
Vinsert
p51158
I42
VSimpleName: calls
p51159
tp51160
I1
s(g16562
I42
g16563
Vinsert
p51161
I38
VPrefixExpression: ++
p51162
tp51163
I1
s(g9026
I42
g9027
Vinsert
p51164
I42
VSimpleName: validateState
p51165
tp51166
I1
s(g1297
I42
g1298
Vinsert
p51167
I42
VSimpleName: contains
p51168
tp51169
I1
s(g13493
I42
g13494
Vinsert
p51170
I42
VSimpleName: before
p51171
tp51172
I1
s(g1362
I42
g1363
Vinsert
p51173
I42
VSimpleName: OBJECT
p51174
tp51175
I1
s(g9606
I42
g9607
Vinsert
p51176
I11
VCastExpression
p51177
tp51178
I2
s(g24251
I42
g24252
Vinsert
p51179
I42
VSimpleName: assertEquals
p51180
tp51181
I2
s(g11263
I42
g11264
Vinsert
p51182
I42
VSimpleName: originalMock
p51183
tp51184
I1
s(g5383
I42
g5384
Vinsert
p51185
I42
VSimpleName: List
p51186
tp51187
I1
s(g174
I42
g175
Vinsert
p51188
I45
VStringLiteral: "iterable"
p51189
tp51190
I2
s(g1780
I42
g1781
Vinsert
p51191
I42
VSimpleName: assertArrayEquals
p51192
tp51193
I1
s(g3178
I42
g3179
Vinsert
p51194
I77
VNormalAnnotation
p51195
tp51196
I1
s(g6574
I42
g6575
Vinsert
p51197
I42
VSimpleName: FieldReader
p51198
tp51199
I2
s(g19074
I42
g19075
Vinsert
p51200
I43
VSimpleType: Object
p51201
tp51202
I1
s(g498
I42
g499
Vinsert
p51203
I8
VBlock
p51204
tp51205
I2
s(g12890
I42
g12891
Vinsert
p51206
I42
VSimpleName: Fields
p51207
tp51208
I1
s(g4929
I42
g4930
Vinsert
p51209
I42
VSimpleName: AllInvocationsFinder
p51210
tp51211
I2
s(g6008
I42
g6009
Vinsert
p51212
I42
VSimpleName: String
p51213
tp51214
I1
s(g5017
I42
g5018
Vinsert
p51215
I14
VClassInstanceCreation
p51216
tp51217
I1
s(g3943
I42
g3944
Vinsert
p51218
I57
VTypeLiteral
p51219
tp51220
I2
s(g3753
I42
g3754
Vinsert
p51221
I42
VSimpleName: reportLastControlForStubbing
p51222
tp51223
I1
s(g25452
I42
g25453
Vinsert
p51224
I42
VSimpleName: getMessage
p51225
tp51226
I1
s(g4017
I42
g4018
Vinsert
p51227
I57
VTypeLiteral
p51228
tp51229
I5
s(g7248
I42
g7249
Vinsert
p51230
I5
VArrayType: Type[]
p51231
tp51232
I1
s(g19026
I42
g19027
Vinsert
p51233
I34
VNumberLiteral: 3
p51234
tp51235
I2
s(g21691
I42
g21692
Vinsert
p51236
I42
VSimpleName: System
p51237
tp51238
I3
s(g12108
I42
g12109
Vinsert
p51239
I42
VSimpleName: entryToken
p51240
tp51241
I1
s(g4745
I42
g4746
Vinsert
p51242
I31
VMethodDeclaration
p51243
tp51244
I2
s(g3473
I42
g3474
Vinsert
p51245
I42
VSimpleName: Integer
p51246
tp51247
I1
s(g11626
I42
g11627
Vinsert
p51248
I42
VSimpleName: given
p51249
tp51250
I1
s(g6043
I42
g6044
Vinsert
p51251
I8
VBlock
p51252
tp51253
I1
s(g6316
I42
g6317
Vinsert
p51254
I43
VSimpleType: T
p51255
tp51256
I2
s(g2439
I42
g2440
Vinsert
p51257
I59
VVariableDeclarationFragment
p51258
tp51259
I2
s(g6658
I42
g6659
Vinsert
p51260
I32
VMethodInvocation
p51261
tp51262
I12
s(g1619
I42
g1620
Vinsert
p51263
I78
VMarkerAnnotation
p51264
tp51265
I1
s(g1739
I42
g1740
Vinsert
p51266
I42
VSimpleName: method
p51267
tp51268
I1
s(g8875
I42
g8876
Vinsert
p51269
I42
VSimpleName: fieldNames
p51270
tp51271
I1
s(g13427
I42
g13428
Vinsert
p51272
I42
VSimpleName: person
p51273
tp51274
I2
s(g5373
I42
g5374
Vinsert
p51275
I42
VSimpleName: list
p51276
tp51277
I1
s(g12941
I42
g12942
Vinsert
p51278
I42
VSimpleName: otherField
p51279
tp51280
I2
s(g2385
I42
g2386
Vinsert
p51281
I43
VSimpleType: VerifcationInOrderFailure
p51282
tp51283
I1
s(g12138
I42
g12139
Vinsert
p51284
I42
VSimpleName: charLength
p51285
tp51286
I1
s(g74
I42
g75
Vinsert
p51287
I14
VClassInstanceCreation
p51288
tp51289
I1
s(g20722
I42
g20723
Vinsert
p51290
I42
VSimpleName: mocked
p51291
tp51292
I1
s(g12370
I42
g12371
Vinsert
p51293
I8
VBlock
p51294
tp51295
I2
s(g1269
I42
g1270
Vinsert
p51296
I42
VSimpleName: stubbings
p51297
tp51298
I1
s(g12133
I42
g12134
Vinsert
p51299
I74
VParameterizedType: LinkedHashSet<V>
p51300
tp51301
I1
s(g11043
I42
g11044
Vinsert
p51302
I40
VQualifiedName: org.mockito.internal.configuration.plugins.Plugins
p51303
tp51304
I1
s(g2728
I42
g2729
Vinsert
p51305
I83
VModifier: static
p51306
tp51307
I1
s(g709
I42
g710
Vinsert
p51308
I42
VSimpleName: classPath
p51309
tp51310
I1
s(g6527
I42
g6528
Vinsert
p51311
I43
VSimpleType: NoInteractionsWanted
p51312
tp51313
I1
s(g16240
I42
g16241
Vinsert
p51314
I42
VSimpleName: type
p51315
tp51316
I3
s(g1825
I42
g1826
Vinsert
p51317
I43
VSimpleType: Value
p51318
tp51319
I1
s(g7467
I42
g7468
Vinsert
p51320
I42
VSimpleName: createArgumentsAreDifferentException
p51321
tp51322
I1
s(g2839
I42
g2840
Vinsert
p51323
I60
VVariableDeclarationStatement
p51324
tp51325
I1
s(g1079
I42
g1080
Vinsert
p51326
I21
VExpressionStatement
p51327
tp51328
I1
s(g32789
I42
g32790
Vinsert
p51329
I42
VSimpleName: value
p51330
tp51331
I1
s(g8242
I42
g8243
Vinsert
p51332
I42
VSimpleName: Throwable
p51333
tp51334
I1
s(g31
I42
g32
Vinsert
p51335
I42
VSimpleName: shouldAllowConsecutiveStubbing
p51336
tp51337
I1
s(g9721
I42
g9722
Vinsert
p51338
I17
VConstructorInvocation
p51339
tp51340
I1
s(g7544
I42
g7545
Vinsert
p51341
I32
VMethodInvocation
p51342
tp51343
I1
s(g2131
I42
g2132
Vinsert
p51344
I42
VSimpleName: InvocationBuilder
p51345
tp51346
I1
s(g9045
I42
g9046
Vinsert
p51347
I43
VSimpleType: SourceValue
p51348
tp51349
I2
s(g4719
I42
g4720
Vinsert
p51350
I32
VMethodInvocation
p51351
tp51352
I2
s(g4106
I42
g4107
Vinsert
p51353
I60
VVariableDeclarationStatement
p51354
tp51355
I2
s(g5403
I42
g5404
Vinsert
p51356
I5
VArrayType: Object[]
p51357
tp51358
I1
s(g6195
I42
g6196
Vinsert
p51359
I37
VPostfixExpression: ++
p51360
tp51361
I1
s(Vinsert
p51362
I42
VSimpleName: add
p51363
Vinsert
p51364
I42
VSimpleName: allMatchers
p51365
tp51366
I1
s(g4657
I42
g4658
Vinsert
p51367
I42
VSimpleName: areArrayLengthsEqual
p51368
tp51369
I1
s(g24736
I42
g24737
Vinsert
p51370
I59
VVariableDeclarationFragment
p51371
tp51372
I1
s(g668
I42
g669
Vinsert
p51373
I42
VSimpleName: isMock
p51374
tp51375
I1
s(g4354
I42
g4355
Vinsert
p51376
I42
VSimpleName: mock
p51377
tp51378
I2
s(g15523
I42
g15524
Vinsert
p51379
I42
VSimpleName: delegatedInstance
p51380
tp51381
I2
s(g23569
I42
g23570
Vinsert
p51382
I34
VNumberLiteral: 0
p51383
tp51384
I1
s(g20093
I42
g20094
Vinsert
p51385
I59
VVariableDeclarationFragment
p51386
tp51387
I8
s(g6300
I42
g6301
Vinsert
p51388
I83
VModifier: private
p51389
tp51390
I1
s(g12561
I42
g12562
Vinsert
p51391
I8
VBlock
p51392
tp51393
I1
s(g1115
I42
g1116
Vinsert
p51394
I25
VIfStatement
p51395
tp51396
I1
s(g12326
I42
g12327
Vinsert
p51397
I42
VSimpleName: Collections
p51398
tp51399
I1
s(g11667
I42
g11668
Vinsert
p51400
I32
VMethodInvocation
p51401
tp51402
I38
s(g8889
I42
g8890
Vinsert
p51403
I42
VSimpleName: o
p51404
tp51405
I1
s(g7076
I42
g7077
Vinsert
p51406
I61
VWhileStatement
p51407
tp51408
I1
s(g9179
I42
g9180
Vinsert
p51409
I45
VStringLiteral: "org.mockito.internal.debugging.LocationImpl"
p51410
tp51411
I1
s(g3313
I42
g3314
Vinsert
p51412
I42
VSimpleName: mock
p51413
tp51414
I1
s(g6435
I42
g6436
Vinsert
p51415
I8
VBlock
p51416
tp51417
I3
s(g1650
I42
g1651
Vinsert
p51418
I59
VVariableDeclarationFragment
p51419
tp51420
I5
s(g6334
I42
g6335
Vinsert
p51421
I54
VTryStatement
p51422
tp51423
I1
s(g5216
I42
g5217
Vinsert
p51424
I42
VSimpleName: Type
p51425
tp51426
I1
s(g4077
I42
g4078
Vinsert
p51427
I57
VTypeLiteral
p51428
tp51429
I1
s(g12193
I42
g12194
Vinsert
p51430
I65
VTagElement: @return
p51431
tp51432
I1
s(g901
I42
g902
Vinsert
p51433
I39
VPrimitiveType: void
p51434
tp51435
I1
s(g10279
I42
g10280
Vinsert
p51436
I45
VStringLiteral: "argument"
p51437
tp51438
I3
s(g9271
I42
g9272
Vinsert
p51439
I42
VSimpleName: event
p51440
tp51441
I1
s(g7966
I42
g7967
Vinsert
p51442
I42
VSimpleName: getSomeClass
p51443
tp51444
I1
s(g20093
I42
g20094
Vinsert
p51445
I42
VSimpleName: successAssert
p51446
tp51447
I2
s(g9252
I42
g9253
Vinsert
p51448
I42
VSimpleName: StackTraceFilterStub
p51449
tp51450
I2
s(g7898
I42
g7899
Vinsert
p51451
I42
VSimpleName: WantedAnywhereAfterFollowingInteraction
p51452
tp51453
I2
s(g15053
I42
g15054
Vinsert
p51454
I43
VSimpleType: Throwable
p51455
tp51456
I1
s(g3021
I42
g3022
Vinsert
p51457
I42
VSimpleName: InvocationMatcher
p51458
tp51459
I1
s(g11699
I42
g11700
Vinsert
p51460
I60
VVariableDeclarationStatement
p51461
tp51462
I2
s(g553
I42
g554
Vinsert
p51463
I27
VInfixExpression: +
p51464
tp51465
I5
s(g1977
I42
g1978
Vinsert
p51466
I42
VSimpleName: mock
p51467
tp51468
I2
s(g13114
I42
g13115
Vinsert
p51469
I8
VBlock
p51470
tp51471
I2
s(g14546
I42
g14547
Vinsert
p51472
I42
VSimpleName: verifyNoMoreInteractions
p51473
tp51474
I1
s(g2457
I42
g2458
Vinsert
p51475
I42
VSimpleName: Set
p51476
tp51477
I1
s(g14352
I42
g14353
Vinsert
p51478
I42
VSimpleName: mockSettingsImpl
p51479
tp51480
I2
s(g49049
I42
g49050
Vinsert
p51481
I42
VSimpleName: classToMock
p51482
tp51483
I2
s(g15601
I42
g15602
Vinsert
p51484
I42
VSimpleName: ExceptionIncludingMockitoWarnings
p51485
tp51486
I2
s(g17814
I42
g17815
Vinsert
p51487
I42
VSimpleName: wanted
p51488
tp51489
I1
s(Vinsert
p51490
I42
VSimpleName: create
p51491
Vinsert
p51492
I43
VSimpleType: RunnerProvider
p51493
tp51494
I1
s(g5426
I42
g5427
Vinsert
p51495
I25
VIfStatement
p51496
tp51497
I1
s(g2205
I42
g2206
Vinsert
p51498
I8
VBlock
p51499
tp51500
I1
s(g11844
I42
g11845
Vinsert
p51501
I42
VSimpleName: EqualsBuilder
p51502
tp51503
I1
s(g3802
I42
g3803
Vinsert
p51504
I14
VClassInstanceCreation
p51505
tp51506
I8
s(g2866
I42
g2867
Vinsert
p51507
I27
VInfixExpression: -
p51508
tp51509
I1
s(g129
I42
g130
Vinsert
p51510
I32
VMethodInvocation
p51511
tp51512
I3
s(g9758
I42
g9759
Vinsert
p51513
I42
VSimpleName: field
p51514
tp51515
I1
s(g7898
I42
g7899
Vinsert
p51516
I42
VSimpleName: previous
p51517
tp51518
I1
s(g2059
I42
g2060
Vinsert
p51519
I42
VSimpleName: i
p51520
tp51521
I1
s(g3364
I42
g3365
Vinsert
p51522
I78
VMarkerAnnotation
p51523
tp51524
I3
s(g13161
I42
g13162
Vinsert
p51525
I42
VSimpleName: String
p51526
tp51527
I1
s(g681
I42
g682
Vinsert
p51528
I42
VSimpleName: interfaces
p51529
tp51530
I1
s(g856
I42
g857
Vinsert
p51531
I27
VInfixExpression: *
p51532
tp51533
I1
s(g14538
I42
g14539
Vinsert
p51534
I42
VSimpleName: toString
p51535
tp51536
I1
s(g2541
I42
g2542
Vinsert
p51537
I42
VSimpleName: findingsListener
p51538
tp51539
I1
s(g23145
I42
g23146
Vinsert
p51540
I42
VSimpleName: setArgMethod
p51541
tp51542
I1
s(g7931
I42
g7932
Vinsert
p51543
I42
VSimpleName: Stubber
p51544
tp51545
I2
s(g239
I42
g240
Vinsert
p51546
I42
VSimpleName: getMockSettings
p51547
tp51548
I1
s(g6882
I42
g6883
Vinsert
p51549
I44
VSingleVariableDeclaration
p51550
tp51551
I1
s(g322
I42
g323
Vinsert
p51552
I14
VClassInstanceCreation
p51553
tp51554
I1
s(g2531
I42
g2532
Vinsert
p51555
I42
VSimpleName: serializable
p51556
tp51557
I1
s(g11514
I42
g11515
Vinsert
p51558
I42
VSimpleName: mock
p51559
tp51560
I1
s(g154
I42
g155
Vinsert
p51561
I43
VSimpleType: Field
p51562
tp51563
I1
s(g3473
I42
g3474
Vinsert
p51564
I42
VSimpleName: verifyingMode
p51565
tp51566
I1
s(g1706
I42
g1707
Vinsert
p51567
I42
VSimpleName: plugins
p51568
tp51569
I1
s(g8504
I42
g8505
Vinsert
p51570
I42
VSimpleName: no
p51571
tp51572
I2
s(g3126
I42
g3127
Vinsert
p51573
I42
VSimpleName: atLeast
p51574
tp51575
I1
s(g806
I42
g807
Vinsert
p51576
I76
VWildcardType: ?
p51577
tp51578
I1
s(g3580
I42
g3581
Vinsert
p51579
I43
VSimpleType: Closure
p51580
tp51581
I2
s(g11538
I42
g11539
Vinsert
p51582
I60
VVariableDeclarationStatement
p51583
tp51584
I1
s(g6247
I42
g6248
Vinsert
p51585
I42
VSimpleName: Exception
p51586
tp51587
I1
s(g5622
I42
g5623
Vinsert
p51588
I42
VSimpleName: equals
p51589
tp51590
I1
s(g6468
I42
g6469
Vinsert
p51591
I42
VSimpleName: ci
p51592
tp51593
I1
s(g7408
I42
g7409
Vinsert
p51594
I42
VSimpleName: on
p51595
tp51596
I1
s(g11012
I42
g11013
Vinsert
p51597
I8
VBlock
p51598
tp51599
I3
s(g36
I42
g37
Vinsert
p51600
I60
VVariableDeclarationStatement
p51601
tp51602
I3
s(g12188
I42
g12189
Vinsert
p51603
I14
VClassInstanceCreation
p51604
tp51605
I2
s(g8746
I42
g8747
Vinsert
p51606
I43
VSimpleType: Invocation
p51607
tp51608
I1
s(g6228
I42
g6229
Vinsert
p51609
I8
VBlock
p51610
tp51611
I10
s(g49060
I42
g49061
Vinsert
p51612
I45
VStringLiteral: "IMethods.simpleMethod(999)"
p51613
tp51614
I1
s(g788
I42
g789
Vinsert
p51615
I42
VSimpleName: ClassVisitor
p51616
tp51617
I1
s(g16524
I42
g16525
Vinsert
p51618
I42
VSimpleName: crossClassLoaderSerializable
p51619
tp51620
I1
s(g8082
I42
g8083
Vinsert
p51621
I42
VSimpleName: Invocation
p51622
tp51623
I1
s(g1493
I42
g1494
Vinsert
p51624
I8
VBlock
p51625
tp51626
I5
s(g2054
I42
g2055
Vinsert
p51627
I8
VBlock
p51628
tp51629
I3
s(g1477
I42
g1478
Vinsert
p51630
I31
VMethodDeclaration
p51631
tp51632
I1
s(g32789
I42
g32790
Vinsert
p51633
I43
VSimpleType: Object
p51634
tp51635
I1
s(g3478
I42
g3479
Vinsert
p51636
I7
VAssignment: =
p51637
tp51638
I1
s(g8030
I42
g8031
Vinsert
p51639
I83
VModifier: public
p51640
tp51641
I4
s(g10507
I42
g10508
Vinsert
p51642
I43
VSimpleType: Throwable
p51643
tp51644
I1
s(g15464
I42
g15465
Vinsert
p51645
I43
VSimpleType: Object
p51646
tp51647
I3
s(g5480
I42
g5481
Vinsert
p51648
I42
VSimpleName: isNull
p51649
tp51650
I1
s(g5570
I42
g5571
Vinsert
p51651
I7
VAssignment: =
p51652
tp51653
I2
s(g1189
I42
g1190
Vinsert
p51654
I42
VSimpleName: ContainsX
p51655
tp51656
I1
s(Vinsert
p51657
I42
VSimpleName: getMessage
p51658
Vinsert
p51659
I43
VSimpleType: VerificationAssertionError
p51660
tp51661
I2
s(g5839
I42
g5840
Vinsert
p51662
I42
VSimpleName: Method
p51663
tp51664
I3
s(g4199
I42
g4200
Vinsert
p51665
I10
VBreakStatement
p51666
tp51667
I2
s(g15939
I42
g15940
Vinsert
p51668
I42
VSimpleName: validator
p51669
tp51670
I1
s(g16291
I42
g16292
Vinsert
p51671
I42
VSimpleName: shouldThrow
p51672
tp51673
I1
s(g4189
I42
g4190
Vinsert
p51674
I42
VSimpleName: defaultByteBuddyMockMaker
p51675
tp51676
I1
s(g4577
I42
g4578
Vinsert
p51677
I43
VSimpleType: T
p51678
tp51679
I2
s(g5583
I42
g5584
Vinsert
p51680
I42
VSimpleName: getMockitoGenericMetadata
p51681
tp51682
I1
s(g755
I42
g756
Vinsert
p51683
I42
VSimpleName: Collection
p51684
tp51685
I1
s(g1322
I42
g1323
Vinsert
p51686
I40
VQualifiedName: org.mockito.internal.util.Primitives
p51687
tp51688
I1
s(g19136
I42
g19137
Vinsert
p51689
I39
VPrimitiveType: int
p51690
tp51691
I1
s(g15053
I42
g15054
Vinsert
p51692
I14
VClassInstanceCreation
p51693
tp51694
I1
s(g2026
I42
g2027
Vinsert
p51695
I43
VSimpleType: LoggingListener
p51696
tp51697
I1
s(g821
I42
g822
Vinsert
p51698
I42
VSimpleName: expectedMethodName
p51699
tp51700
I1
s(g6024
I42
g6025
Vinsert
p51701
I38
VPrefixExpression: !
p51702
tp51703
I1
s(g10802
I42
g10803
Vinsert
p51704
I32
VMethodInvocation
p51705
tp51706
I2
s(g12726
I42
g12727
Vinsert
p51707
I42
VSimpleName: NotifiedMethodInvocationReport
p51708
tp51709
I1
s(g5159
I42
g5160
Vinsert
p51710
I32
VMethodInvocation
p51711
tp51712
I1
s(g1498
I42
g1499
Vinsert
p51713
I32
VMethodInvocation
p51714
tp51715
I2
s(g6350
I42
g6351
Vinsert
p51716
I42
VSimpleName: IllegalArgumentException
p51717
tp51718
I1
s(g312
I42
g313
Vinsert
p51719
I14
VClassInstanceCreation
p51720
tp51721
I1
s(g13889
I42
g13890
Vinsert
p51722
I43
VSimpleType: NoMoreInvocationsVerifier
p51723
tp51724
I2
s(g1302
I42
g1303
Vinsert
p51725
I8
VBlock
p51726
tp51727
I1
s(g44875
I42
g44876
Vinsert
p51728
I42
VSimpleName: Override
p51729
tp51730
I4
s(g13172
I42
g13173
Vinsert
p51731
I27
VInfixExpression: &&
p51732
tp51733
I1
s(g2326
I42
g2327
Vinsert
p51734
I42
VSimpleName: e
p51735
tp51736
I1
s(g732
I42
g733
Vinsert
p51737
I42
VSimpleName: currentMethodName
p51738
tp51739
I2
s(g12138
I42
g12139
Vinsert
p51740
I43
VSimpleType: ByteVector
p51741
tp51742
I1
s(g7587
I42
g7588
Vinsert
p51743
I78
VMarkerAnnotation
p51744
tp51745
I1
s(g15947
I42
g15948
Vinsert
p51746
I42
VSimpleName: Exception
p51747
tp51748
I6
s(g3191
I42
g3192
Vinsert
p51749
I74
VParameterizedType: Base<String>
p51750
tp51751
I1
s(g16963
I42
g16964
Vinsert
p51752
I42
VSimpleName: Foo
p51753
tp51754
I4
s(g3797
I42
g3798
Vinsert
p51755
I83
VModifier: public
p51756
tp51757
I3
s(g18377
I42
g18378
Vinsert
p51758
I40
VQualifiedName: org.mockito.internal.creation.settings.CreationSettings
p51759
tp51760
I1
s(g901
I42
g902
Vinsert
p51761
I42
VSimpleName: InvocationListener
p51762
tp51763
I1
s(g5274
I42
g5275
Vinsert
p51764
I42
VSimpleName: addAll
p51765
tp51766
I1
s(g25849
I42
g25850
Vinsert
p51767
I42
VSimpleName: atLeastOnce
p51768
tp51769
I1
s(g6416
I42
g6417
Vinsert
p51770
I32
VMethodInvocation
p51771
tp51772
I2
s(g2266
I42
g2267
Vinsert
p51773
I43
VSimpleType: Set
p51774
tp51775
I1
s(g2565
I42
g2566
Vinsert
p51776
I42
VSimpleName: invocations
p51777
tp51778
I1
s(g548
I42
g549
Vinsert
p51779
I60
VVariableDeclarationStatement
p51780
tp51781
I1
s(g6841
I42
g6842
Vinsert
p51782
I42
VSimpleName: get
p51783
tp51784
I1
s(g1750
I42
g1751
Vinsert
p51785
I5
VArrayType: StackTraceElement[]
p51786
tp51787
I2
s(g20813
I42
g20814
Vinsert
p51788
I34
VNumberLiteral: 0
p51789
tp51790
I2
s(g2080
I42
g2081
Vinsert
p51791
I43
VSimpleType: Date
p51792
tp51793
I2
s(g6363
I42
g6364
Vinsert
p51794
I39
VPrimitiveType: void
p51795
tp51796
I3
s(g2939
I42
g2940
Vinsert
p51797
I32
VMethodInvocation
p51798
tp51799
I1
s(g3616
I42
g3617
Vinsert
p51800
I65
VTagElement
p51801
tp51802
I1
s(g1019
I42
g1020
Vinsert
p51803
I32
VMethodInvocation
p51804
tp51805
I1
s(g3509
I42
g3510
Vinsert
p51806
I43
VSimpleType: Field
p51807
tp51808
I1
s(g5057
I42
g5058
Vinsert
p51809
I62
VInstanceofExpression
p51810
tp51811
I2
s(g10623
I42
g10624
Vinsert
p51812
I59
VVariableDeclarationFragment
p51813
tp51814
I7
s(g5426
I42
g5427
Vinsert
p51815
I43
VSimpleType: T
p51816
tp51817
I1
s(g4290
I42
g4291
Vinsert
p51818
I27
VInfixExpression: -
p51819
tp51820
I1
s(g14434
I42
g14435
Vinsert
p51821
I8
VBlock
p51822
tp51823
I1
s(g26617
I42
g26618
Vinsert
p51824
I42
VSimpleName: VerificationListener
p51825
tp51826
I1
s(g1254
I42
g1255
Vinsert
p51827
I74
VParameterizedType: Class<?>
p51828
tp51829
I1
s(g8978
I42
g8979
Vinsert
p51830
I42
VSimpleName: mock
p51831
tp51832
I3
s(g778
I42
g779
Vinsert
p51833
I43
VSimpleType: FieldVisitor
p51834
tp51835
I1
s(g2695
I42
g2696
Vinsert
p51836
I48
VSuperMethodInvocation
p51837
tp51838
I1
s(g2949
I42
g2950
Vinsert
p51839
I42
VSimpleName: StackTraceElement
p51840
tp51841
I1
s(g4022
I42
g4023
Vinsert
p51842
I21
VExpressionStatement
p51843
tp51844
I1
s(g3611
I42
g3612
Vinsert
p51845
I44
VSingleVariableDeclaration
p51846
tp51847
I1
s(g4282
I42
g4283
Vinsert
p51848
I32
VMethodInvocation
p51849
tp51850
I2
s(g7966
I42
g7967
Vinsert
p51851
I42
VSimpleName: Foo
p51852
tp51853
I2
s(g2826
I42
g2827
Vinsert
p51854
I43
VSimpleType: WithFinal
p51855
tp51856
I1
s(g8372
I42
g8373
Vinsert
p51857
I42
VSimpleName: invocationMatcher
p51858
tp51859
I3
s(g3341
I42
g3342
Vinsert
p51860
I42
VSimpleName: CapturingMatcher
p51861
tp51862
I1
s(g7017
I42
g7018
Vinsert
p51863
I8
VBlock
p51864
tp51865
I6
s(g6535
I42
g6536
Vinsert
p51866
I43
VSimpleType: Exception
p51867
tp51868
I1
s(g7893
I42
g7894
Vinsert
p51869
I43
VSimpleType: Object
p51870
tp51871
I1
s(g20230
I42
g20231
Vinsert
p51872
I42
VSimpleName: fromMockObject
p51873
tp51874
I1
s(g8314
I42
g8315
Vinsert
p51875
I11
VCastExpression
p51876
tp51877
I1
s(g16053
I42
g16054
Vinsert
p51878
I43
VSimpleType: T
p51879
tp51880
I3
s(g5022
I42
g5023
Vinsert
p51881
I42
VSimpleName: method
p51882
tp51883
I1
s(g2118
I42
g2119
Vinsert
p51884
I43
VSimpleType: Float
p51885
tp51886
I2
s(g14269
I42
g14270
Vinsert
p51887
I42
VSimpleName: sameMatcherAndNulls
p51888
tp51889
I1
s(g5133
I42
g5134
Vinsert
p51890
I42
VSimpleName: MethodVisitor
p51891
tp51892
I1
s(g1259
I42
g1260
Vinsert
p51893
I42
VSimpleName: invocation
p51894
tp51895
I1
s(g20513
I42
g20514
Vinsert
p51896
I7
VAssignment: =
p51897
tp51898
I2
s(g7248
I42
g7249
Vinsert
p51899
I59
VVariableDeclarationFragment
p51900
tp51901
I1
s(g9560
I42
g9561
Vinsert
p51902
I78
VMarkerAnnotation
p51903
tp51904
I1
s(g8393
I42
g8394
Vinsert
p51905
I32
VMethodInvocation
p51906
tp51907
I6
s(g543
I42
g544
Vinsert
p51908
I43
VSimpleType: MockitoException
p51909
tp51910
I1
s(g6300
I42
g6301
Vinsert
p51911
I78
VMarkerAnnotation
p51912
tp51913
I1
s(g15424
I42
g15425
Vinsert
p51914
I42
VSimpleName: containsKey
p51915
tp51916
I2
s(g9929
I42
g9930
Vinsert
p51917
I42
VSimpleName: when
p51918
tp51919
I8
s(g10053
I42
g10054
Vinsert
p51920
I42
VSimpleName: delegatingMethod
p51921
tp51922
I1
s(g2311
I42
g2312
Vinsert
p51923
I59
VVariableDeclarationFragment
p51924
tp51925
I1
s(g5986
I42
g5987
Vinsert
p51926
I42
VSimpleName: InvocationMatcher
p51927
tp51928
I1
s(g2718
I42
g2719
Vinsert
p51929
I42
VSimpleName: Mockito
p51930
tp51931
I1
s(g9860
I42
g9861
Vinsert
p51932
I45
VStringLiteral: "(delegate instance had type: "
p51933
tp51934
I1
s(Vinsert
p51935
I42
VSimpleName: visitOuterClass
p51936
Vinsert
p51937
I42
VSimpleName: target
p51938
tp51939
I1
s(g1154
I42
g1155
Vinsert
p51940
I41
VReturnStatement
p51941
tp51942
I1
s(g966
I42
g967
Vinsert
p51943
I14
VClassInstanceCreation
p51944
tp51945
I1
s(g12231
I42
g12232
Vinsert
p51946
I27
VInfixExpression: !=
p51947
tp51948
I1
s(g18914
I42
g18915
Vinsert
p51949
I14
VClassInstanceCreation
p51950
tp51951
I3
s(g12737
I42
g12738
Vinsert
p51952
I21
VExpressionStatement
p51953
tp51954
I5
s(g1388
I42
g1389
Vinsert
p51955
I83
VModifier: public
p51956
tp51957
I1
s(g12799
I42
g12800
Vinsert
p51958
I42
VSimpleName: entry
p51959
tp51960
I1
s(g22156
I42
g22157
Vinsert
p51961
I42
VSimpleName: CustomMatcher
p51962
tp51963
I2
s(g13493
I42
g13494
Vinsert
p51964
I21
VExpressionStatement
p51965
tp51966
I5
s(g9491
I42
g9492
Vinsert
p51967
I21
VExpressionStatement
p51968
tp51969
I2
s(g10032
I42
g10033
Vinsert
p51970
I42
VSimpleName: thenReturn
p51971
tp51972
I1
s(g16677
I42
g16678
Vinsert
p51973
I83
VModifier: public
p51974
tp51975
I1
s(g686
I42
g687
Vinsert
p51976
I21
VExpressionStatement
p51977
tp51978
I1
s(g1184
I42
g1185
Vinsert
p51979
I66
VTextElement:  The minimum size of this set.
p51980
tp51981
I1
s(g5512
I42
g5513
Vinsert
p51982
I32
VMethodInvocation
p51983
tp51984
I2
s(g8561
I42
g8562
Vinsert
p51985
I42
VSimpleName: wrongTypeOfReturnValue
p51986
tp51987
I1
s(g6300
I42
g6301
Vinsert
p51988
I42
VSimpleName: mockJustWorks
p51989
tp51990
I1
s(g7408
I42
g7409
Vinsert
p51991
I43
VSimpleType: Exception
p51992
tp51993
I1
s(g2631
I42
g2632
Vinsert
p51994
I42
VSimpleName: Invocation
p51995
tp51996
I1
s(g405
I42
g406
Vinsert
p51997
I78
VMarkerAnnotation
p51998
tp51999
I1
s(g2616
I42
g2617
Vinsert
p52000
I76
VWildcardType: ?
p52001
tp52002
I1
s(g2652
I42
g2653
Vinsert
p52003
I42
VSimpleName: ClassEmitter
p52004
tp52005
I2
s(g831
I42
g832
Vinsert
p52006
I42
VSimpleName: finder
p52007
tp52008
I1
s(g12000
I42
g12001
Vinsert
p52009
I42
VSimpleName: i
p52010
tp52011
I5
s(g1853
I42
g1854
Vinsert
p52012
I8
VBlock
p52013
tp52014
I1
s(g7798
I42
g7799
Vinsert
p52015
I43
VSimpleType: Result
p52016
tp52017
I1
s(g7572
I42
g7573
Vinsert
p52018
I42
VSimpleName: clazz
p52019
tp52020
I2
s(g12922
I42
g12923
Vinsert
p52021
I22
VFieldAccess
p52022
tp52023
I1
s(Vinsert
p52024
I42
VSimpleName: objectArgMethod
p52025
Vinsert
p52026
I42
VSimpleName: shouldHelpOutWithUnnecessaryCasting
p52027
tp52028
I1
s(g8770
I42
g8771
Vinsert
p52029
I43
VSimpleType: Throwable
p52030
tp52031
I2
s(g2753
I42
g2754
Vinsert
p52032
I43
VSimpleType: Object
p52033
tp52034
I4
s(g1962
I42
g1963
Vinsert
p52035
I42
VSimpleName: oneArg
p52036
tp52037
I1
s(g3654
I42
g3655
Vinsert
p52038
I14
VClassInstanceCreation
p52039
tp52040
I5
s(g3517
I42
g3518
Vinsert
p52041
I42
VSimpleName: Integer
p52042
tp52043
I1
s(g2611
I42
g2612
Vinsert
p52044
I44
VSingleVariableDeclaration
p52045
tp52046
I1
s(g10415
I42
g10416
Vinsert
p52047
I8
VBlock
p52048
tp52049
I4
s(g4887
I42
g4888
Vinsert
p52050
I42
VSimpleName: containsValue
p52051
tp52052
I1
s(g7526
I42
g7527
Vinsert
p52053
I42
VSimpleName: IProgressMonitor
p52054
tp52055
I2
s(g6435
I42
g6436
Vinsert
p52056
I43
VSimpleType: Failure
p52057
tp52058
I1
s(g22136
I42
g22137
Vinsert
p52059
I44
VSingleVariableDeclaration
p52060
tp52061
I7
s(g6973
I42
g6974
Vinsert
p52062
I42
VSimpleName: TooLittleInvocations
p52063
tp52064
I1
s(g1493
I42
g1494
Vinsert
p52065
I36
VParenthesizedExpression
p52066
tp52067
I1
s(g14454
I42
g14455
Vinsert
p52068
I42
VSimpleName: Object
p52069
tp52070
I1
s(g12737
I42
g12738
Vinsert
p52071
I42
VSimpleName: MockHandlerImpl
p52072
tp52073
I1
s(g788
I42
g789
Vinsert
p52074
I42
VSimpleName: cv
p52075
tp52076
I3
s(g13881
I42
g13882
Vinsert
p52077
I11
VCastExpression
p52078
tp52079
I1
s(g15972
I42
g15973
Vinsert
p52080
I42
VSimpleName: spy
p52081
tp52082
I2
s(g13383
I42
g13384
Vinsert
p52083
I8
VBlock
p52084
tp52085
I2
s(g881
I42
g882
Vinsert
p52086
I42
VSimpleName: Object
p52087
tp52088
I1
s(g2921
I42
g2922
Vinsert
p52089
I41
VReturnStatement
p52090
tp52091
I1
s(g3935
I42
g3936
Vinsert
p52092
I32
VMethodInvocation
p52093
tp52094
I1
s(g2796
I42
g2797
Vinsert
p52095
I42
VSimpleName: never
p52096
tp52097
I1
s(g2682
I42
g2683
Vinsert
p52098
I59
VVariableDeclarationFragment
p52099
tp52100
I1
s(g5067
I42
g5068
Vinsert
p52101
I42
VSimpleName: FluentVerificationMode
p52102
tp52103
I1
s(g2518
I42
g2519
Vinsert
p52104
I40
VQualifiedName: AnswerFunctionalInterfaces.VoidAnswer3
p52105
tp52106
I1
s(g742
I42
g743
Vinsert
p52107
I60
VVariableDeclarationStatement
p52108
tp52109
I1
s(g5159
I42
g5160
Vinsert
p52110
I31
VMethodDeclaration
p52111
tp52112
I1
s(g10851
I42
g10852
Vinsert
p52113
I32
VMethodInvocation
p52114
tp52115
I4
s(g1411
I42
g1412
Vinsert
p52116
I42
VSimpleName: allInvocations
p52117
tp52118
I4
s(g35283
I42
g35284
Vinsert
p52119
I40
VQualifiedName: SerializableMode.ACROSS_CLASSLOADERS
p52120
tp52121
I1
s(g17182
I42
g17183
Vinsert
p52122
I42
VSimpleName: MockSettings
p52123
tp52124
I1
s(g3714
I42
g3715
Vinsert
p52125
I45
VStringLiteral: "veeeeery long string that makes it ugly in one line"
p52126
tp52127
I1
s(g523
I42
g524
Vinsert
p52128
I43
VSimpleType: IMockMaker
p52129
tp52130
I2
s(g3341
I42
g3342
Vinsert
p52131
I42
VSimpleName: InvocationMatcher
p52132
tp52133
I2
s(g1876
I42
g1877
Vinsert
p52134
I42
VSimpleName: String
p52135
tp52136
I1
s(g14434
I42
g14435
Vinsert
p52137
I42
VSimpleName: Pluralizer
p52138
tp52139
I2
s(g2185
I42
g2186
Vinsert
p52140
I8
VBlock
p52141
tp52142
I2
s(g41
I42
g42
Vinsert
p52143
I74
VParameterizedType: Class<?>
p52144
tp52145
I1
s(g2939
I42
g2940
Vinsert
p52146
I42
VSimpleName: bv
p52147
tp52148
I1
s(g124
I42
g125
Vinsert
p52149
I42
VSimpleName: ds
p52150
tp52151
I2
s(g36
I42
g37
Vinsert
p52152
I32
VMethodInvocation
p52153
tp52154
I3
s(g4688
I42
g4689
Vinsert
p52155
I32
VMethodInvocation
p52156
tp52157
I5
s(g10185
I42
g10186
Vinsert
p52158
I43
VSimpleType: String
p52159
tp52160
I3
s(g1214
I42
g1215
Vinsert
p52161
I32
VMethodInvocation
p52162
tp52163
I2
s(g14792
I42
g14793
Vinsert
p52164
I42
VSimpleName: Invocation
p52165
tp52166
I2
s(g931
I42
g932
Vinsert
p52167
I42
VSimpleName: thing
p52168
tp52169
I2
s(g3654
I42
g3655
Vinsert
p52170
I34
VNumberLiteral: 4
p52171
tp52172
I1
s(g6069
I42
g6070
Vinsert
p52173
I42
VSimpleName: getMockitoInterceptor
p52174
tp52175
I1
s(g2518
I42
g2519
Vinsert
p52176
I43
VSimpleType: A
p52177
tp52178
I1
s(g1934
I42
g1935
Vinsert
p52179
I32
VMethodInvocation
p52180
tp52181
I10
s(g3730
I42
g3731
Vinsert
p52182
I21
VExpressionStatement
p52183
tp52184
I1
s(g51657
I42
g51658
Vinsert
p52185
I42
VSimpleName: VerificationAssertionError
p52186
tp52187
I2
s(g2954
I42
g2955
Vinsert
p52188
I42
VSimpleName: mock
p52189
tp52190
I2
s(g6867
I42
g6868
Vinsert
p52191
I42
VSimpleName: getInvocation
p52192
tp52193
I1
s(g14566
I42
g14567
Vinsert
p52194
I42
VSimpleName: checkNotNull_null_additonal_message
p52195
tp52196
I1
s(g6212
I42
g6213
Vinsert
p52197
I74
VParameterizedType: List<Object>
p52198
tp52199
I2
s(g1149
I42
g1150
Vinsert
p52200
I42
VSimpleName: object
p52201
tp52202
I3
s(g12872
I42
g12873
Vinsert
p52203
I32
VMethodInvocation
p52204
tp52205
I4
s(g1274
I42
g1275
Vinsert
p52206
I42
VSimpleName: clazz
p52207
tp52208
I1
s(g7302
I42
g7303
Vinsert
p52209
I42
VSimpleName: mockito
p52210
tp52211
I2
s(g686
I42
g687
Vinsert
p52212
I42
VSimpleName: getNameButDelegateToMethodThatThrows
p52213
tp52214
I1
s(g6143
I42
g6144
Vinsert
p52215
I42
VSimpleName: invocation
p52216
tp52217
I1
s(g3303
I42
g3304
Vinsert
p52218
I42
VSimpleName: begin_method
p52219
tp52220
I1
s(g149
I42
g150
Vinsert
p52221
I34
VNumberLiteral: 0L
p52222
tp52223
I1
s(g3680
I42
g3681
Vinsert
p52224
I42
VSimpleName: resultArgs
p52225
tp52226
I2
s(g8337
I42
g8338
Vinsert
p52227
I42
VSimpleName: assertThat
p52228
tp52229
I1
s(g16524
I42
g16525
Vinsert
p52230
I42
VSimpleName: Collections
p52231
tp52232
I2
s(g1538
I42
g1539
Vinsert
p52233
I27
VInfixExpression: +
p52234
tp52235
I1
s(g493
I42
g494
Vinsert
p52236
I42
VSimpleName: Exception
p52237
tp52238
I1
s(g1706
I42
g1707
Vinsert
p52239
I21
VExpressionStatement
p52240
tp52241
I1
s(g5902
I42
g5903
Vinsert
p52242
I42
VSimpleName: toString
p52243
tp52244
I6
s(g1706
I42
g1707
Vinsert
p52245
I78
VMarkerAnnotation
p52246
tp52247
I1
s(g13897
I42
g13898
Vinsert
p52248
I43
VSimpleType: Set
p52249
tp52250
I1
s(g2090
I42
g2091
Vinsert
p52251
I42
VSimpleName: filtered
p52252
tp52253
I3
s(g7752
I42
g7753
Vinsert
p52254
I78
VMarkerAnnotation
p52255
tp52256
I1
s(g14566
I42
g14567
Vinsert
p52257
I45
VStringLiteral: "abc"
p52258
tp52259
I1
s(g3977
I42
g3978
Vinsert
p52260
I42
VSimpleName: mock
p52261
tp52262
I3
s(g12221
I42
g12222
Vinsert
p52263
I57
VTypeLiteral
p52264
tp52265
I1
s(g8642
I42
g8643
Vinsert
p52266
I42
VSimpleName: toUpperCase
p52267
tp52268
I1
s(g5067
I42
g5068
Vinsert
p52269
I42
VSimpleName: millis
p52270
tp52271
I2
s(g3914
I42
g3915
Vinsert
p52272
I8
VBlock
p52273
tp52274
I1
s(g5378
I42
g5379
Vinsert
p52275
I44
VSingleVariableDeclaration
p52276
tp52277
I1
s(g6634
I42
g6635
Vinsert
p52278
I23
VFieldDeclaration
p52279
tp52280
I4
s(g3209
I42
g3210
Vinsert
p52281
I42
VSimpleName: shouldReturnTrue_FromIsMock_ForDirectSpy
p52282
tp52283
I1
s(g8916
I42
g8917
Vinsert
p52284
I43
VSimpleType: ClassWithDodgyConstructor
p52285
tp52286
I2
s(g2306
I42
g2307
Vinsert
p52287
I42
VSimpleName: addFirst
p52288
tp52289
I1
s(g1609
I42
g1610
Vinsert
p52290
I45
VStringLiteral: "Mockito.java"
p52291
tp52292
I1
s(g2718
I42
g2719
Vinsert
p52293
I21
VExpressionStatement
p52294
tp52295
I1
s(g4300
I42
g4301
Vinsert
p52296
I21
VExpressionStatement
p52297
tp52298
I2
s(g463
I42
g464
Vinsert
p52299
I31
VMethodDeclaration
p52300
tp52301
I1
s(g4719
I42
g4720
Vinsert
p52302
I39
VPrimitiveType: boolean
p52303
tp52304
I1
s(g11877
I42
g11878
Vinsert
p52305
I59
VVariableDeclarationFragment
p52306
tp52307
I1
s(g30615
I42
g30616
Vinsert
p52308
I43
VSimpleType: Statement
p52309
tp52310
I4
s(g11552
I42
g11553
Vinsert
p52311
I38
VPrefixExpression: ++
p52312
tp52313
I1
s(g5869
I42
g5870
Vinsert
p52314
I42
VSimpleName: classTo
p52315
tp52316
I2
s(g287
I42
g288
Vinsert
p52317
I31
VMethodDeclaration
p52318
tp52319
I1
s(g5461
I42
g5462
Vinsert
p52320
I42
VSimpleName: String
p52321
tp52322
I1
s(g4143
I42
g4144
Vinsert
p52323
I43
VSimpleType: Exception
p52324
tp52325
I1
s(g15203
I42
g15204
Vinsert
p52326
I42
VSimpleName: isArray
p52327
tp52328
I1
s(g11757
I42
g11758
Vinsert
p52329
I42
VSimpleName: StringBuilder
p52330
tp52331
I2
s(g11314
I42
g11315
Vinsert
p52332
I43
VSimpleType: ByteBuddy
p52333
tp52334
I1
s(g29885
I42
g29886
Vinsert
p52335
I42
VSimpleName: InvocationListener
p52336
tp52337
I1
s(g513
I42
g514
Vinsert
p52338
I42
VSimpleName: T
p52339
tp52340
I2
s(g2998
I42
g2999
Vinsert
p52341
I83
VModifier: final
p52342
tp52343
I1
s(g9413
I42
g9414
Vinsert
p52344
I42
VSimpleName: Test
p52345
tp52346
I2
s(g16579
I42
g16580
Vinsert
p52347
I21
VExpressionStatement
p52348
tp52349
I1
s(g2929
I42
g2930
Vinsert
p52350
I78
VMarkerAnnotation
p52351
tp52352
I1
s(g14972
I42
g14973
Vinsert
p52353
I42
VSimpleName: assertFalse
p52354
tp52355
I1
s(g10992
I42
g10993
Vinsert
p52356
I32
VMethodInvocation
p52357
tp52358
I5
s(g1264
I42
g1265
Vinsert
p52359
I43
VSimpleType: Invocation
p52360
tp52361
I1
s(g124
I42
g125
Vinsert
p52362
I42
VSimpleName: fs
p52363
tp52364
I1
s(g6143
I42
g6144
Vinsert
p52365
I42
VSimpleName: ExpectedInvocation
p52366
tp52367
I1
s(g2485
I42
g2486
Vinsert
p52368
I42
VSimpleName: Invocation
p52369
tp52370
I1
s(g16907
I42
g16908
Vinsert
p52371
I42
VSimpleName: j
p52372
tp52373
I2
s(g3766
I42
g3767
Vinsert
p52374
I76
VWildcardType: ?
p52375
tp52376
I3
s(g362
I42
g363
Vinsert
p52377
I42
VSimpleName: stubbing
p52378
tp52379
I2
s(g34587
I42
g34588
Vinsert
p52380
I42
VSimpleName: getIndex
p52381
tp52382
I1
s(g8875
I42
g8876
Vinsert
p52383
I43
VSimpleType: String
p52384
tp52385
I2
s(g8434
I42
g8435
Vinsert
p52386
I42
VSimpleName: mockSettings
p52387
tp52388
I3
s(g523
I42
g524
Vinsert
p52389
I42
VSimpleName: ServiceLoader
p52390
tp52391
I1
s(g3787
I42
g3788
Vinsert
p52392
I74
VParameterizedType: Class<?>
p52393
tp52394
I1
s(g4153
I42
g4154
Vinsert
p52395
I76
VWildcardType: ?
p52396
tp52397
I1
s(g5805
I42
g5806
Vinsert
p52398
I34
VNumberLiteral: 80
p52399
tp52400
I1
s(g7004
I42
g7005
Vinsert
p52401
I42
VSimpleName: Foo
p52402
tp52403
I1
s(g24453
I42
g24454
Vinsert
p52404
I42
VSimpleName: Improvement
p52405
tp52406
I1
s(g11043
I42
g11044
Vinsert
p52407
I83
VModifier: public
p52408
tp52409
I1
s(g558
I42
g559
Vinsert
p52410
I21
VExpressionStatement
p52411
tp52412
I18
s(g16749
I42
g16750
Vinsert
p52413
I59
VVariableDeclarationFragment
p52414
tp52415
I1
s(g2998
I42
g2999
Vinsert
p52416
I66
VTextElement:  a method visitor.
p52417
tp52418
I1
s(g7004
I42
g7005
Vinsert
p52419
I45
VStringLiteral: "lumpa"
p52420
tp52421
I1
s(g9601
I42
g9602
Vinsert
p52422
I42
VSimpleName: K
p52423
tp52424
I1
s(g2018
I42
g2019
Vinsert
p52425
I83
VModifier: final
p52426
tp52427
I3
s(g871
I42
g872
Vinsert
p52428
I42
VSimpleName: String
p52429
tp52430
I1
s(g94
I42
g95
Vinsert
p52431
I42
VSimpleName: MockitoAnnotations
p52432
tp52433
I29
s(g14245
I42
g14246
Vinsert
p52434
I42
VSimpleName: describe
p52435
tp52436
I1
s(g15836
I42
g15837
Vinsert
p52437
I45
VStringLiteral: "Does not apply for inline mocks"
p52438
tp52439
I2
s(g1244
I42
g1245
Vinsert
p52440
I42
VSimpleName: Throwable
p52441
tp52442
I2
s(g322
I42
g323
Vinsert
p52443
I43
VSimpleType: List
p52444
tp52445
I2
s(g4072
I42
g4073
Vinsert
p52446
I42
VSimpleName: Test
p52447
tp52448
I1
s(g7806
I42
g7807
Vinsert
p52449
I42
VSimpleName: HashSet
p52450
tp52451
I1
s(g1967
I42
g1968
Vinsert
p52452
I74
VParameterizedType: OngoingStubbingImpl<T>
p52453
tp52454
I1
s(g2452
I42
g2453
Vinsert
p52455
I42
VSimpleName: ois
p52456
tp52457
I2
s(g11152
I42
g11153
Vinsert
p52458
I42
VSimpleName: mockName
p52459
tp52460
I2
s(g1426
I42
g1427
Vinsert
p52461
I42
VSimpleName: ZipCompare
p52462
tp52463
I1
s(g6339
I42
g6340
Vinsert
p52464
I31
VMethodDeclaration
p52465
tp52466
I1
s(g5614
I42
g5615
Vinsert
p52467
I34
VNumberLiteral: 2
p52468
tp52469
I3
s(g7017
I42
g7018
Vinsert
p52470
I42
VSimpleName: result
p52471
tp52472
I2
s(g1962
I42
g1963
Vinsert
p52473
I21
VExpressionStatement
p52474
tp52475
I4
s(g3493
I42
g3494
Vinsert
p52476
I42
VSimpleName: LocalizedMatcher
p52477
tp52478
I3
s(g1249
I42
g1250
Vinsert
p52479
I42
VSimpleName: Filter
p52480
tp52481
I5
s(g2105
I42
g2106
Vinsert
p52482
I57
VTypeLiteral
p52483
tp52484
I1
s(g4461
I42
g4462
Vinsert
p52485
I60
VVariableDeclarationStatement
p52486
tp52487
I2
s(g10992
I42
g10993
Vinsert
p52488
I42
VSimpleName: Mockito
p52489
tp52490
I1
s(g10081
I42
g10082
Vinsert
p52491
I42
VSimpleName: FileOutputStream
p52492
tp52493
I1
s(g1670
I42
g1671
Vinsert
p52494
I42
VSimpleName: simpleMethodInvocation
p52495
tp52496
I4
s(g5562
I42
g5563
Vinsert
p52497
I42
VSimpleName: Collection
p52498
tp52499
I2
s(g16709
I42
g16710
Vinsert
p52500
I42
VSimpleName: assertEquals
p52501
tp52502
I2
s(g3875
I42
g3876
Vinsert
p52503
I42
VSimpleName: HasConstructorInvokingMethod
p52504
tp52505
I2
s(g8778
I42
g8779
Vinsert
p52506
I21
VExpressionStatement
p52507
tp52508
I2
s(g1054
I42
g1055
Vinsert
p52509
I42
VSimpleName: fakeReturningMock
p52510
tp52511
I1
s(g856
I42
g857
Vinsert
p52512
I32
VMethodInvocation
p52513
tp52514
I6
s(g7735
I42
g7736
Vinsert
p52515
I42
VSimpleName: exceptions
p52516
tp52517
I2
s(g4534
I42
g4535
Vinsert
p52518
I42
VSimpleName: startWith
p52519
tp52520
I1
s(g2652
I42
g2653
Vinsert
p52521
I59
VVariableDeclarationFragment
p52522
tp52523
I2
s(g14721
I42
g14722
Vinsert
p52524
I32
VMethodInvocation
p52525
tp52526
I6
s(g6024
I42
g6025
Vinsert
p52527
I43
VSimpleType: MockCreationValidator
p52528
tp52529
I1
s(g11066
I42
g11067
Vinsert
p52530
I43
VSimpleType: StackTraceElement
p52531
tp52532
I1
s(g1599
I42
g1600
Vinsert
p52533
I7
VAssignment: =
p52534
tp52535
I1
s(g4168
I42
g4169
Vinsert
p52536
I83
VModifier: final
p52537
tp52538
I1
s(g765
I42
g766
Vinsert
p52539
I42
VSimpleName: behavior
p52540
tp52541
I1
s(g2205
I42
g2206
Vinsert
p52542
I43
VSimpleType: Contribution
p52543
tp52544
I1
s(g7867
I42
g7868
Vinsert
p52545
I27
VInfixExpression: +
p52546
tp52547
I6
s(g31283
I42
g31284
Vinsert
p52548
I42
VSimpleName: MockitoException
p52549
tp52550
I1
s(g11012
I42
g11013
Vinsert
p52551
I42
VSimpleName: Failure
p52552
tp52553
I1
s(g1493
I42
g1494
Vinsert
p52554
I42
VSimpleName: answer
p52555
tp52556
I1
s(g3735
I42
g3736
Vinsert
p52557
I42
VSimpleName: MockFeatures
p52558
tp52559
I1
s(g4789
I42
g4790
Vinsert
p52560
I42
VSimpleName: Observer
p52561
tp52562
I1
s(g11984
I42
g11985
Vinsert
p52563
I42
VSimpleName: Class
p52564
tp52565
I1
s(g4138
I42
g4139
Vinsert
p52566
I34
VNumberLiteral: 1
p52567
tp52568
I1
s(g36764
I42
g36765
Vinsert
p52569
I42
VSimpleName: shouldShowDecentMessageWhenExcepionIsNaughty
p52570
tp52571
I1
s(g19510
I42
g19511
Vinsert
p52572
I59
VVariableDeclarationFragment
p52573
tp52574
I1
s(g1426
I42
g1427
Vinsert
p52575
I42
VSimpleName: getLogger
p52576
tp52577
I1
s(g593
I42
g594
Vinsert
p52578
I42
VSimpleName: Object
p52579
tp52580
I2
s(g14735
I42
g14736
Vinsert
p52581
I41
VReturnStatement
p52582
tp52583
I2
s(g84
I42
g85
Vinsert
p52584
I42
VSimpleName: improvement
p52585
tp52586
I1
s(g2331
I42
g2332
Vinsert
p52587
I42
VSimpleName: VerificationModeFactory
p52588
tp52589
I2
s(g4106
I42
g4107
Vinsert
p52590
I59
VVariableDeclarationFragment
p52591
tp52592
I2
s(g2000
I42
g2001
Vinsert
p52593
I42
VSimpleName: serializable
p52594
tp52595
I2
s(g3308
I42
g3309
Vinsert
p52596
I48
VSuperMethodInvocation
p52597
tp52598
I1
s(g9747
I42
g9748
Vinsert
p52599
I31
VMethodDeclaration
p52600
tp52601
I1
s(g3560
I42
g3561
Vinsert
p52602
I42
VSimpleName: apply
p52603
tp52604
I1
s(g10234
I42
g10235
Vinsert
p52605
I42
VSimpleName: fail
p52606
tp52607
I2
s(g2424
I42
g2425
Vinsert
p52608
I43
VSimpleType: InvocationBuilder
p52609
tp52610
I1
s(g14888
I42
g14889
Vinsert
p52611
I42
VSimpleName: Exception
p52612
tp52613
I1
s(g4616
I42
g4617
Vinsert
p52614
I43
VSimpleType: ThirdPartyException
p52615
tp52616
I2
s(g2344
I42
g2345
Vinsert
p52617
I14
VClassInstanceCreation
p52618
tp52619
I2
s(g8434
I42
g8435
Vinsert
p52620
I42
VSimpleName: createMockitoMethod
p52621
tp52622
I3
s(g1660
I42
g1661
Vinsert
p52623
I42
VSimpleName: isAbstract
p52624
tp52625
I4
s(g1049
I42
g1050
Vinsert
p52626
I42
VSimpleName: constructor
p52627
tp52628
I1
s(g5159
I42
g5160
Vinsert
p52629
I42
VSimpleName: Object
p52630
tp52631
I1
s(g7297
I42
g7298
Vinsert
p52632
I42
VSimpleName: add
p52633
tp52634
I1
s(g7416
I42
g7417
Vinsert
p52635
I21
VExpressionStatement
p52636
tp52637
I1
s(g4730
I42
g4731
Vinsert
p52638
I42
VSimpleName: m
p52639
tp52640
I3
s(g2575
I42
g2576
Vinsert
p52641
I60
VVariableDeclarationStatement
p52642
tp52643
I2
s(g12390
I42
g12391
Vinsert
p52644
I12
VCatchClause
p52645
tp52646
I1
s(g12000
I42
g12001
Vinsert
p52647
I2
VArrayAccess
p52648
tp52649
I2
s(g17814
I42
g17815
Vinsert
p52650
I45
VStringLiteral: "("
p52651
tp52652
I1
s(g9504
I42
g9505
Vinsert
p52653
I14
VClassInstanceCreation
p52654
tp52655
I3
s(g5647
I42
g5648
Vinsert
p52656
I42
VSimpleName: size
p52657
tp52658
I1
s(g7785
I42
g7786
Vinsert
p52659
I42
VSimpleName: m1
p52660
tp52661
I1
s(g5810
I42
g5811
Vinsert
p52662
I40
VQualifiedName: org.powermock.reflect.Whitebox
p52663
tp52664
I1
s(g15947
I42
g15948
Vinsert
p52665
I42
VSimpleName: FinalClassMockingTest
p52666
tp52667
I1
s(g3570
I42
g3571
Vinsert
p52668
I42
VSimpleName: GenericsNest
p52669
tp52670
I1
s(g8146
I42
g8147
Vinsert
p52671
I42
VSimpleName: matcher
p52672
tp52673
I2
s(g12000
I42
g12001
Vinsert
p52674
I70
VEnhancedForStatement
p52675
tp52676
I1
s(g8171
I42
g8172
Vinsert
p52677
I42
VSimpleName: two
p52678
tp52679
I4
s(g6260
I42
g6261
Vinsert
p52680
I45
VStringLiteral: "  \u005cn  "
p52681
tp52682
I1
s(g5549
I42
g5550
Vinsert
p52683
I42
VSimpleName: ReturnsGenericDeepStubs
p52684
tp52685
I1
s(g1987
I42
g1988
Vinsert
p52686
I42
VSimpleName: warningsCollector
p52687
tp52688
I2
s(Vinsert
p52689
I42
VSimpleName: initMocks
p52690
Vinsert
p52691
I42
VSimpleName: shouldProvideDecentExceptionWhenSpyInstanceIsNull
p52692
tp52693
I1
s(g12561
I42
g12562
Vinsert
p52694
I42
VSimpleName: OngoingVerifyingMode
p52695
tp52696
I1
s(g12933
I42
g12934
Vinsert
p52697
I42
VSimpleName: WantedButNotInvoked
p52698
tp52699
I1
s(g13218
I42
g13219
Vinsert
p52700
I42
VSimpleName: Exception
p52701
tp52702
I1
s(g5383
I42
g5384
Vinsert
p52703
I42
VSimpleName: fromSingleMock
p52704
tp52705
I1
s(g1650
I42
g1651
Vinsert
p52706
I42
VSimpleName: should_delegate_to_returns_default_when_abstract_method
p52707
tp52708
I1
s(g1790
I42
g1791
Vinsert
p52709
I42
VSimpleName: date
p52710
tp52711
I2
s(g2921
I42
g2922
Vinsert
p52712
I43
VSimpleType: String
p52713
tp52714
I1
s(g2266
I42
g2267
Vinsert
p52715
I42
VSimpleName: can_identify_generic_type_of_returned_type_when_owner_forces_generic_type
p52716
tp52717
I1
s(g10777
I42
g10778
Vinsert
p52718
I50
VSwitchStatement
p52719
tp52720
I1
s(g31908
I42
g31909
Vinsert
p52721
I42
VSimpleName: inOrder
p52722
tp52723
I5
s(g6247
I42
g6248
Vinsert
p52724
I43
VSimpleType: Exception
p52725
tp52726
I1
s(g2690
I42
g2691
Vinsert
p52727
I42
VSimpleName: put
p52728
tp52729
I2
s(g6752
I42
g6753
Vinsert
p52730
I54
VTryStatement
p52731
tp52732
I1
s(g6300
I42
g6301
Vinsert
p52733
I42
VSimpleName: Issue421
p52734
tp52735
I1
s(g1317
I42
g1318
Vinsert
p52736
I42
VSimpleName: Object
p52737
tp52738
I1
s(g6316
I42
g6317
Vinsert
p52739
I43
VSimpleType: Answer
p52740
tp52741
I1
s(g124
I42
g125
Vinsert
p52742
I32
VMethodInvocation
p52743
tp52744
I2
s(g811
I42
g812
Vinsert
p52745
I27
VInfixExpression: ||
p52746
tp52747
I1
s(g7544
I42
g7545
Vinsert
p52748
I42
VSimpleName: reporter
p52749
tp52750
I1
s(g4492
I42
g4493
Vinsert
p52751
I60
VVariableDeclarationStatement
p52752
tp52753
I1
s(g10572
I42
g10573
Vinsert
p52754
I8
VBlock
p52755
tp52756
I1
s(g50241
I42
g50242
Vinsert
p52757
I42
VSimpleName: testClass
p52758
tp52759
I2
s(g4335
I42
g4336
Vinsert
p52760
I7
VAssignment: =
p52761
tp52762
I2
s(g8057
I42
g8058
Vinsert
p52763
I31
VMethodDeclaration
p52764
tp52765
I3
s(g1439
I42
g1440
Vinsert
p52766
I43
VSimpleType: Object
p52767
tp52768
I1
s(g658
I42
g659
Vinsert
p52769
I60
VVariableDeclarationStatement
p52770
tp52771
I1
s(g2424
I42
g2425
Vinsert
p52772
I42
VSimpleName: InvocationBuilder
p52773
tp52774
I1
s(g15424
I42
g15425
Vinsert
p52775
I36
VParenthesizedExpression
p52776
tp52777
I2
s(g796
I42
g797
Vinsert
p52778
I3
VArrayCreation
p52779
tp52780
I1
s(g2359
I42
g2360
Vinsert
p52781
I42
VSimpleName: shouldMarkActualInvocationsAsVerified
p52782
tp52783
I1
s(g3537
I42
g3538
Vinsert
p52784
I42
VSimpleName: Service
p52785
tp52786
I1
s(g16902
I42
g16903
Vinsert
p52787
I42
VSimpleName: toInstanceField
p52788
tp52789
I1
s(g8401
I42
g8402
Vinsert
p52790
I32
VMethodInvocation
p52791
tp52792
I11
s(g13855
I42
g13856
Vinsert
p52793
I1
VAnonymousClassDeclaration
p52794
tp52795
I1
s(g10032
I42
g10033
Vinsert
p52796
I42
VSimpleName: isEnabled
p52797
tp52798
I1
s(g12422
I42
g12423
Vinsert
p52799
I43
VSimpleType: List
p52800
tp52801
I3
s(g17500
I42
g17501
Vinsert
p52802
I45
VStringLiteral: "toString"
p52803
tp52804
I1
s(g1347
I42
g1348
Vinsert
p52805
I8
VBlock
p52806
tp52807
I9
s(g996
I42
g997
Vinsert
p52808
I43
VSimpleType: MockSettingsImpl
p52809
tp52810
I1
s(g13114
I42
g13115
Vinsert
p52811
I14
VClassInstanceCreation
p52812
tp52813
I4
s(g17182
I42
g17183
Vinsert
p52814
I42
VSimpleName: Class
p52815
tp52816
I1
s(g5378
I42
g5379
Vinsert
p52817
I78
VMarkerAnnotation
p52818
tp52819
I1
s(g4887
I42
g4888
Vinsert
p52820
I42
VSimpleName: mockTwo
p52821
tp52822
I2
s(g7253
I42
g7254
Vinsert
p52823
I42
VSimpleName: text
p52824
tp52825
I2
s(g9860
I42
g9861
Vinsert
p52826
I42
VSimpleName: delegateMethod
p52827
tp52828
I1
s(g5781
I42
g5782
Vinsert
p52829
I42
VSimpleName: MockitoFramework
p52830
tp52831
I1
s(g8696
I42
g8697
Vinsert
p52832
I40
VQualifiedName: org.mockito.internal.progress.SequenceNumber
p52833
tp52834
I1
s(g4595
I42
g4596
Vinsert
p52835
I66
VTextElement:   verification mode
p52836
tp52837
I1
s(g1528
I42
g1529
Vinsert
p52838
I42
VSimpleName: VerificationMode
p52839
tp52840
I12
s(g19144
I42
g19145
Vinsert
p52841
I32
VMethodInvocation
p52842
tp52843
I8
s(g951
I42
g952
Vinsert
p52844
I42
VSimpleName: getClass
p52845
tp52846
I1
s(g7366
I42
g7367
Vinsert
p52847
I42
VSimpleName: mode
p52848
tp52849
I1
s(g1154
I42
g1155
Vinsert
p52850
I42
VSimpleName: String
p52851
tp52852
I1
s(g4226
I42
g4227
Vinsert
p52853
I43
VSimpleType: InvocationBuilder
p52854
tp52855
I1
s(g28144
I42
g28145
Vinsert
p52856
I42
VSimpleName: Override
p52857
tp52858
I2
s(g20386
I42
g20387
Vinsert
p52859
I27
VInfixExpression: &&
p52860
tp52861
I2
s(g438
I42
g439
Vinsert
p52862
I27
VInfixExpression: >
p52863
tp52864
I1
s(g10688
I42
g10689
Vinsert
p52865
I41
VReturnStatement
p52866
tp52867
I1
s(g204
I42
g205
Vinsert
p52868
I45
VStringLiteral: "foo"
p52869
tp52870
I1
s(g32938
I42
g32939
Vinsert
p52871
I42
VSimpleName: getType
p52872
tp52873
I1
s(g11659
I42
g11660
Vinsert
p52874
I43
VSimpleType: Method
p52875
tp52876
I1
s(g26530
I42
g26531
Vinsert
p52877
I42
VSimpleName: IOUtil
p52878
tp52879
I3
s(g12922
I42
g12923
Vinsert
p52880
I42
VSimpleName: InvocationListener
p52881
tp52882
I1
s(g7704
I42
g7705
Vinsert
p52883
I42
VSimpleName: e
p52884
tp52885
I1
s(g1498
I42
g1499
Vinsert
p52886
I42
VSimpleName: listener
p52887
tp52888
I2
s(g9234
I42
g9235
Vinsert
p52889
I8
VBlock
p52890
tp52891
I1
s(g41
I42
g42
Vinsert
p52892
I38
VPrefixExpression: !
p52893
tp52894
I4
s(g916
I42
g917
Vinsert
p52895
I42
VSimpleName: GlobalConfiguration
p52896
tp52897
I1
s(g8757
I42
g8758
Vinsert
p52898
I42
VSimpleName: f
p52899
tp52900
I1
s(g8393
I42
g8394
Vinsert
p52901
I42
VSimpleName: mockedType
p52902
tp52903
I1
s(g10802
I42
g10803
Vinsert
p52904
I43
VSimpleType: List
p52905
tp52906
I1
s(g6116
I42
g6117
Vinsert
p52907
I74
VParameterizedType: LinkedHashSet<String>
p52908
tp52909
I1
s(g3616
I42
g3617
Vinsert
p52910
I31
VMethodDeclaration
p52911
tp52912
I3
s(g11434
I42
g11435
Vinsert
p52913
I42
VSimpleName: assertThat
p52914
tp52915
I1
s(g1159
I42
g1160
Vinsert
p52916
I32
VMethodInvocation
p52917
tp52918
I2
s(g6614
I42
g6615
Vinsert
p52919
I1
VAnonymousClassDeclaration
p52920
tp52921
I1
s(g2485
I42
g2486
Vinsert
p52922
I42
VSimpleName: Exception
p52923
tp52924
I1
s(g7806
I42
g7807
Vinsert
p52925
I27
VInfixExpression: ||
p52926
tp52927
I4
s(g6334
I42
g6335
Vinsert
p52928
I8
VBlock
p52929
tp52930
I2
s(g1881
I42
g1882
Vinsert
p52931
I42
VSimpleName: superUnderTest
p52932
tp52933
I1
s(g307
I42
g308
Vinsert
p52934
I42
VSimpleName: dummyH
p52935
tp52936
I1
s(g911
I42
g912
Vinsert
p52937
I83
VModifier: public
p52938
tp52939
I2
s(g3483
I42
g3484
Vinsert
p52940
I42
VSimpleName: Character
p52941
tp52942
I1
s(g5847
I42
g5848
Vinsert
p52943
I45
VStringLiteral: "' with value: '"
p52944
tp52945
I1
s(g3782
I42
g3783
Vinsert
p52946
I42
VSimpleName: UniversalTestListener
p52947
tp52948
I1
s(g3606
I42
g3607
Vinsert
p52949
I42
VSimpleName: Object
p52950
tp52951
I2
s(g9323
I42
g9324
Vinsert
p52952
I42
VSimpleName: missingMethodMode
p52953
tp52954
I1
s(g12804
I42
g12805
Vinsert
p52955
I39
VPrimitiveType: void
p52956
tp52957
I1
s(g4768
I42
g4769
Vinsert
p52958
I42
VSimpleName: stubOrdinaryInvocationWithDefaultReturnValue
p52959
tp52960
I1
s(g6124
I42
g6125
Vinsert
p52961
I42
VSimpleName: Test
p52962
tp52963
I2
s(g4817
I42
g4818
Vinsert
p52964
I32
VMethodInvocation
p52965
tp52966
I7
s(g568
I42
g569
Vinsert
p52967
I42
VSimpleName: handleSpyAnnotation
p52968
tp52969
I1
s(g3797
I42
g3798
Vinsert
p52970
I39
VPrimitiveType: void
p52971
tp52972
I3
s(g8899
I42
g8900
Vinsert
p52973
I39
VPrimitiveType: void
p52974
tp52975
I1
s(g22492
I42
g22493
Vinsert
p52976
I42
VSimpleName: exceptionsTrace
p52977
tp52978
I1
s(g51362
I42
g51363
Vinsert
p52979
I42
VSimpleName: all
p52980
tp52981
I1
s(g1388
I42
g1389
Vinsert
p52982
I8
VBlock
p52983
tp52984
I2
s(g15351
I42
g15352
Vinsert
p52985
I42
VSimpleName: p
p52986
tp52987
I2
s(g1967
I42
g1968
Vinsert
p52988
I43
VSimpleType: Object
p52989
tp52990
I1
s(g8237
I42
g8238
Vinsert
p52991
I42
VSimpleName: typeToMock
p52992
tp52993
I1
s(g1785
I42
g1786
Vinsert
p52994
I21
VExpressionStatement
p52995
tp52996
I3
s(g1054
I42
g1055
Vinsert
p52997
I43
VSimpleType: MyObject
p52998
tp52999
I2
s(g4393
I42
g4394
Vinsert
p53000
I21
VExpressionStatement
p53001
tp53002
I2
s(g966
I42
g967
Vinsert
p53003
I43
VSimpleType: BDDOngoingStubbingImpl
p53004
tp53005
I1
s(g7582
I42
g7583
Vinsert
p53006
I42
VSimpleName: times
p53007
tp53008
I1
s(g11699
I42
g11700
Vinsert
p53009
I42
VSimpleName: rawArguments
p53010
tp53011
I1
s(g3006
I42
g3007
Vinsert
p53012
I42
VSimpleName: guru
p53013
tp53014
I1
s(g6416
I42
g6417
Vinsert
p53015
I8
VBlock
p53016
tp53017
I2
s(g1367
I42
g1368
Vinsert
p53018
I43
VSimpleType: Foo
p53019
tp53020
I2
s(g7572
I42
g7573
Vinsert
p53021
I39
VPrimitiveType: boolean
p53022
tp53023
I2
s(g4077
I42
g4078
Vinsert
p53024
I42
VSimpleName: s_down
p53025
tp53026
I1
s(g12097
I42
g12098
Vinsert
p53027
I21
VExpressionStatement
p53028
tp53029
I2
s(g9395
I42
g9396
Vinsert
p53030
I42
VSimpleName: InvocationListener
p53031
tp53032
I1
s(g3585
I42
g3586
Vinsert
p53033
I66
VTextElement: Scan mocks for the given <code>testClassInstance</code> and <code>clazz</code> in the type hierarchy.
p53034
tp53035
I1
s(g6446
I42
g6447
Vinsert
p53036
I45
VStringLiteral: "bar"
p53037
tp53038
I2
s(g1029
I42
g1030
Vinsert
p53039
I74
VParameterizedType: Class<?>
p53040
tp53041
I1
s(g287
I42
g288
Vinsert
p53042
I42
VSimpleName: assertTrue
p53043
tp53044
I1
s(g2200
I42
g2201
Vinsert
p53045
I31
VMethodDeclaration
p53046
tp53047
I2
s(g6642
I42
g6643
Vinsert
p53048
I83
VModifier: protected
p53049
tp53050
I1
s(g7798
I42
g7799
Vinsert
p53051
I42
VSimpleName: File
p53052
tp53053
I2
s(g5858
I42
g5859
Vinsert
p53054
I43
VSimpleType: ITestResult
p53055
tp53056
I1
s(g11314
I42
g11315
Vinsert
p53057
I42
VSimpleName: withCurrentCodeSourceUrls
p53058
tp53059
I1
s(g1239
I42
g1240
Vinsert
p53060
I42
VSimpleName: RuntimeException
p53061
tp53062
I1
s(g2886
I42
g2887
Vinsert
p53063
I14
VClassInstanceCreation
p53064
tp53065
I5
s(g573
I42
g574
Vinsert
p53066
I66
VTextElement:  a method visitor.
p53067
tp53068
I1
s(g3121
I42
g3122
Vinsert
p53069
I32
VMethodInvocation
p53070
tp53071
I7
s(g4963
I42
g4964
Vinsert
p53072
I14
VClassInstanceCreation
p53073
tp53074
I1
s(g11667
I42
g11668
Vinsert
p53075
I42
VSimpleName: unwrapAndThrows
p53076
tp53077
I1
s(g5570
I42
g5571
Vinsert
p53078
I42
VSimpleName: wanted
p53079
tp53080
I1
s(g2444
I42
g2445
Vinsert
p53081
I8
VBlock
p53082
tp53083
I1
s(g5211
I42
g5212
Vinsert
p53084
I9
VBooleanLiteral: true
p53085
tp53086
I1
s(g5512
I42
g5513
Vinsert
p53087
I21
VExpressionStatement
p53088
tp53089
I2
s(g11538
I42
g11539
Vinsert
p53090
I43
VSimpleType: String
p53091
tp53092
I2
s(g4624
I42
g4625
Vinsert
p53093
I48
VSuperMethodInvocation
p53094
tp53095
I1
s(g10762
I42
g10763
Vinsert
p53096
I42
VSimpleName: getAnnotation
p53097
tp53098
I1
s(g19530
I42
g19531
Vinsert
p53099
I42
VSimpleName: parameterTypes
p53100
tp53101
I1
s(g6103
I42
g6104
Vinsert
p53102
I41
VReturnStatement
p53103
tp53104
I1
s(g4106
I42
g4107
Vinsert
p53105
I32
VMethodInvocation
p53106
tp53107
I2
s(g23569
I42
g23570
Vinsert
p53108
I37
VPostfixExpression: ++
p53109
tp53110
I1
s(g7730
I42
g7731
Vinsert
p53111
I27
VInfixExpression: ==
p53112
tp53113
I1
s(g214
I42
g215
Vinsert
p53114
I21
VExpressionStatement
p53115
tp53116
I2
s(g4051
I42
g4052
Vinsert
p53117
I42
VSimpleName: wanted
p53118
tp53119
I1
s(g8862
I42
g8863
Vinsert
p53120
I8
VBlock
p53121
tp53122
I1
s(g778
I42
g779
Vinsert
p53123
I42
VSimpleName: cv
p53124
tp53125
I2
s(g2780
I42
g2781
Vinsert
p53126
I42
VSimpleName: List
p53127
tp53128
I1
s(g12606
I42
g12607
Vinsert
p53129
I44
VSingleVariableDeclaration
p53130
tp53131
I2
s(g6098
I42
g6099
Vinsert
p53132
I42
VSimpleName: List
p53133
tp53134
I1
s(g4077
I42
g4078
Vinsert
p53135
I43
VSimpleType: Sub
p53136
tp53137
I2
s(g17860
I42
g17861
Vinsert
p53138
I32
VMethodInvocation
p53139
tp53140
I29
s(g46855
I42
g46856
Vinsert
p53141
I43
VSimpleType: List
p53142
tp53143
I1
s(g5604
I42
g5605
Vinsert
p53144
I8
VBlock
p53145
tp53146
I1
s(g1508
I42
g1509
Vinsert
p53147
I42
VSimpleName: withFinal
p53148
tp53149
I1
s(g1229
I42
g1230
Vinsert
p53150
I42
VSimpleName: getClass
p53151
tp53152
I1
s(g9026
I42
g9027
Vinsert
p53153
I42
VSimpleName: mocks
p53154
tp53155
I1
s(g10247
I42
g10248
Vinsert
p53156
I27
VInfixExpression: ||
p53157
tp53158
I1
s(g4585
I42
g4586
Vinsert
p53159
I32
VMethodInvocation
p53160
tp53161
I2
s(g10777
I42
g10778
Vinsert
p53162
I43
VSimpleType: CodeEmitter
p53163
tp53164
I1
s(g11942
I42
g11943
Vinsert
p53165
I45
VStringLiteral: "net.sourceforge.cobertura.coveragedata.TouchCollector"
p53166
tp53167
I1
s(g1347
I42
g1348
Vinsert
p53168
I59
VVariableDeclarationFragment
p53169
tp53170
I6
s(g9339
I42
g9340
Vinsert
p53171
I42
VSimpleName: given
p53172
tp53173
I2
s(g7752
I42
g7753
Vinsert
p53174
I42
VSimpleName: shouldDealWithPrivateFieldsOfSubclasses
p53175
tp53176
I1
s(g405
I42
g406
Vinsert
p53177
I42
VSimpleName: Test
p53178
tp53179
I1
s(g8038
I42
g8039
Vinsert
p53180
I6
VAssertStatement
p53181
tp53182
I2
s(g12183
I42
g12184
Vinsert
p53183
I43
VSimpleType: MockitoMethodProxy
p53184
tp53185
I1
s(g3331
I42
g3332
Vinsert
p53186
I44
VSingleVariableDeclaration
p53187
tp53188
I1
s(g154
I42
g155
Vinsert
p53189
I42
VSimpleName: Type
p53190
tp53191
I1
s(g7893
I42
g7894
Vinsert
p53192
I42
VSimpleName: caller
p53193
tp53194
I1
s(g15539
I42
g15540
Vinsert
p53195
I78
VMarkerAnnotation
p53196
tp53197
I1
s(g9576
I42
g9577
Vinsert
p53198
I43
VSimpleType: VerificationMode
p53199
tp53200
I1
s(g7190
I42
g7191
Vinsert
p53201
I42
VSimpleName: forIterable
p53202
tp53203
I1
s(g6316
I42
g6317
Vinsert
p53204
I42
VSimpleName: verifyingRecorder
p53205
tp53206
I1
s(g5393
I42
g5394
Vinsert
p53207
I43
VSimpleType: SerializationFeatureKey
p53208
tp53209
I1
s(g1249
I42
g1250
Vinsert
p53210
I42
VSimpleName: Filterable
p53211
tp53212
I2
s(g10032
I42
g10033
Vinsert
p53213
I32
VMethodInvocation
p53214
tp53215
I5
s(g18840
I42
g18841
Vinsert
p53216
I83
VModifier: final
p53217
tp53218
I3
s(g1696
I42
g1697
Vinsert
p53219
I42
VSimpleName: other
p53220
tp53221
I2
s(g15053
I42
g15054
Vinsert
p53222
I21
VExpressionStatement
p53223
tp53224
I1
s(g5393
I42
g5394
Vinsert
p53225
I8
VBlock
p53226
tp53227
I19
s(g13493
I42
g13494
Vinsert
p53228
I43
VSimpleType: Date
p53229
tp53230
I2
s(g8288
I42
g8289
Vinsert
p53231
I42
VSimpleName: Throwable
p53232
tp53233
I1
s(g2222
I42
g2223
Vinsert
p53234
I42
VSimpleName: emptyOptional
p53235
tp53236
I1
s(g7544
I42
g7545
Vinsert
p53237
I33
VNullLiteral
p53238
tp53239
I1
s(g8242
I42
g8243
Vinsert
p53240
I42
VSimpleName: interceptor
p53241
tp53242
I1
s(g1706
I42
g1707
Vinsert
p53243
I8
VBlock
p53244
tp53245
I1
s(g2988
I42
g2989
Vinsert
p53246
I42
VSimpleName: f
p53247
tp53248
I2
s(g15601
I42
g15602
Vinsert
p53249
I42
VSimpleName: e
p53250
tp53251
I2
s(g638
I42
g639
Vinsert
p53252
I27
VInfixExpression: >
p53253
tp53254
I2
s(g5789
I42
g5790
Vinsert
p53255
I42
VSimpleName: Reporter
p53256
tp53257
I1
s(g3817
I42
g3818
Vinsert
p53258
I48
VSuperMethodInvocation
p53259
tp53260
I1
s(g10415
I42
g10416
Vinsert
p53261
I44
VSingleVariableDeclaration
p53262
tp53263
I5
s(g11099
I42
g11100
Vinsert
p53264
I7
VAssignment: =
p53265
tp53266
I5
s(g46
I42
g47
Vinsert
p53267
I43
VSimpleType: BaseClass
p53268
tp53269
I2
s(g20866
I42
g20867
Vinsert
p53270
I42
VSimpleName: Closeable
p53271
tp53272
I2
s(g3792
I42
g3793
Vinsert
p53273
I42
VSimpleName: ClassLoader
p53274
tp53275
I1
s(g5660
I42
g5661
Vinsert
p53276
I42
VSimpleName: mock
p53277
tp53278
I5
s(g2354
I42
g2355
Vinsert
p53279
I43
VSimpleType: Matcher
p53280
tp53281
I3
s(g9413
I42
g9414
Vinsert
p53282
I42
VSimpleName: Mockito
p53283
tp53284
I3
s(g6387
I42
g6388
Vinsert
p53285
I43
VSimpleType: MockMethodInterceptor.ForEquals
p53286
tp53287
I1
s(g8237
I42
g8238
Vinsert
p53288
I44
VSingleVariableDeclaration
p53289
tp53290
I1
s(g2733
I42
g2734
Vinsert
p53291
I42
VSimpleName: MethodInterceptorFilter
p53292
tp53293
I1
s(g12804
I42
g12805
Vinsert
p53294
I42
VSimpleName: Assume
p53295
tp53296
I1
s(g12444
I42
g12445
Vinsert
p53297
I42
VSimpleName: withSettings
p53298
tp53299
I2
s(g11152
I42
g11153
Vinsert
p53300
I33
VNullLiteral
p53301
tp53302
I1
s(g4226
I42
g4227
Vinsert
p53303
I14
VClassInstanceCreation
p53304
tp53305
I7
s(g11107
I42
g11108
Vinsert
p53306
I83
VModifier: static
p53307
tp53308
I2
s(g3303
I42
g3304
Vinsert
p53309
I21
VExpressionStatement
p53310
tp53311
I1
s(g11866
I42
g11867
Vinsert
p53312
I42
VSimpleName: String
p53313
tp53314
I1
s(g16449
I42
g16450
Vinsert
p53315
I60
VVariableDeclarationStatement
p53316
tp53317
I1
s(g16053
I42
g16054
Vinsert
p53318
I42
VSimpleName: Answer
p53319
tp53320
I3
s(g1367
I42
g1368
Vinsert
p53321
I42
VSimpleName: smartNull
p53322
tp53323
I1
s(g307
I42
g308
Vinsert
p53324
I43
VSimpleType: SerializableClass
p53325
tp53326
I1
s(g15203
I42
g15204
Vinsert
p53327
I43
VSimpleType: IllegalArgumentException
p53328
tp53329
I1
s(g2031
I42
g2032
Vinsert
p53330
I40
VQualifiedName: Opcodes.ACC_DEPRECATED
p53331
tp53332
I1
s(g209
I42
g210
Vinsert
p53333
I40
VQualifiedName: parameterTypes.length
p53334
tp53335
I1
s(g4212
I42
g4213
Vinsert
p53336
I52
VThisExpression
p53337
tp53338
I1
s(g2095
I42
g2096
Vinsert
p53339
I42
VSimpleName: theField
p53340
tp53341
I1
s(g13023
I42
g13024
Vinsert
p53342
I40
VQualifiedName: java.lang.reflect.InvocationTargetException
p53343
tp53344
I1
s(g14392
I42
g14393
Vinsert
p53345
I37
VPostfixExpression: ++
p53346
tp53347
I2
s(g5169
I42
g5170
Vinsert
p53348
I43
VSimpleType: List
p53349
tp53350
I1
s(Vinsert
p53351
I42
VSimpleName: call
p53352
Vinsert
p53353
I42
VSimpleName: right
p53354
tp53355
I2
s(g2452
I42
g2453
Vinsert
p53356
I7
VAssignment: =
p53357
tp53358
I2
s(g3856
I42
g3857
Vinsert
p53359
I52
VThisExpression
p53360
tp53361
I2
s(g668
I42
g669
Vinsert
p53362
I42
VSimpleName: className
p53363
tp53364
I1
s(g6752
I42
g6753
Vinsert
p53365
I43
VSimpleType: Reporter
p53366
tp53367
I1
s(g6535
I42
g6536
Vinsert
p53368
I14
VClassInstanceCreation
p53369
tp53370
I1
s(g871
I42
g872
Vinsert
p53371
I42
VSimpleName: HashSet
p53372
tp53373
I1
s(g9747
I42
g9748
Vinsert
p53374
I32
VMethodInvocation
p53375
tp53376
I5
s(g2978
I42
g2979
Vinsert
p53377
I42
VSimpleName: task
p53378
tp53379
I1
s(g24736
I42
g24737
Vinsert
p53380
I83
VModifier: public
p53381
tp53382
I7
s(g169
I42
g170
Vinsert
p53383
I42
VSimpleName: overrideReturnValues
p53384
tp53385
I1
s(g12715
I42
g12716
Vinsert
p53386
I42
VSimpleName: settings
p53387
tp53388
I2
s(g1398
I42
g1399
Vinsert
p53389
I8
VBlock
p53390
tp53391
I2
s(g2611
I42
g2612
Vinsert
p53392
I41
VReturnStatement
p53393
tp53394
I1
s(g1675
I42
g1676
Vinsert
p53395
I40
VQualifiedName: org.mockito.invocation.Invocation
p53396
tp53397
I1
s(g24453
I42
g24454
Vinsert
p53398
I42
VSimpleName: List
p53399
tp53400
I4
s(g8176
I42
g8177
Vinsert
p53401
I59
VVariableDeclarationFragment
p53402
tp53403
I1
s(g4346
I42
g4347
Vinsert
p53404
I11
VCastExpression
p53405
tp53406
I1
s(g7526
I42
g7527
Vinsert
p53407
I43
VSimpleType: IProgressMonitor
p53408
tp53409
I2
s(g7258
I42
g7259
Vinsert
p53410
I32
VMethodInvocation
p53411
tp53412
I3
s(g9821
I42
g9822
Vinsert
p53413
I40
VQualifiedName: java.security.AccessController
p53414
tp53415
I1
s(g3326
I42
g3327
Vinsert
p53416
I32
VMethodInvocation
p53417
tp53418
I5
s(g134
I42
g135
Vinsert
p53419
I42
VSimpleName: fin
p53420
tp53421
I1
s(g1105
I42
g1106
Vinsert
p53422
I59
VVariableDeclarationFragment
p53423
tp53424
I2
s(g9692
I42
g9693
Vinsert
p53425
I45
VStringLiteral: "shouldMergeInvocationStackTraceAndExceptionStackTrace"
p53426
tp53427
I1
s(g6098
I42
g6099
Vinsert
p53428
I60
VVariableDeclarationStatement
p53429
tp53430
I1
s(g17987
I42
g17988
Vinsert
p53431
I42
VSimpleName: VerificationWithTimeout
p53432
tp53433
I1
s(g9739
I42
g9740
Vinsert
p53434
I21
VExpressionStatement
p53435
tp53436
I49
s(g11336
I42
g11337
Vinsert
p53437
I24
VForStatement
p53438
tp53439
I1
s(g20722
I42
g20723
Vinsert
p53440
I42
VSimpleName: types
p53441
tp53442
I2
s(g4502
I42
g4503
Vinsert
p53443
I42
VSimpleName: assertFalse
p53444
tp53445
I1
s(g7321
I42
g7322
Vinsert
p53446
I42
VSimpleName: settings
p53447
tp53448
I1
s(g5335
I42
g5336
Vinsert
p53449
I14
VClassInstanceCreation
p53450
tp53451
I1
s(g2705
I42
g2706
Vinsert
p53452
I59
VVariableDeclarationFragment
p53453
tp53454
I1
s(g2672
I42
g2673
Vinsert
p53455
I83
VModifier: public
p53456
tp53457
I1
s(g11434
I42
g11435
Vinsert
p53458
I42
VSimpleName: T
p53459
tp53460
I2
s(g2770
I42
g2771
Vinsert
p53461
I42
VSimpleName: Object
p53462
tp53463
I1
s(g841
I42
g842
Vinsert
p53464
I42
VSimpleName: Object
p53465
tp53466
I2
s(g12804
I42
g12805
Vinsert
p53467
I31
VMethodDeclaration
p53468
tp53469
I1
s(g438
I42
g439
Vinsert
p53470
I42
VSimpleName: stripped
p53471
tp53472
I2
s(g3047
I42
g3048
Vinsert
p53473
I32
VMethodInvocation
p53474
tp53475
I2
s(g23663
I42
g23664
Vinsert
p53476
I42
VSimpleName: String
p53477
tp53478
I2
s(g7062
I42
g7063
Vinsert
p53479
I34
VNumberLiteral: 100
p53480
tp53481
I2
s(g1292
I42
g1293
Vinsert
p53482
I8
VBlock
p53483
tp53484
I2
s(g2467
I42
g2468
Vinsert
p53485
I43
VSimpleType: MockHandlerInterface
p53486
tp53487
I1
s(g10086
I42
g10087
Vinsert
p53488
I8
VBlock
p53489
tp53490
I2
s(g8663
I42
g8664
Vinsert
p53491
I60
VVariableDeclarationStatement
p53492
tp53493
I1
s(g4840
I42
g4841
Vinsert
p53494
I8
VBlock
p53495
tp53496
I1
s(g8131
I42
g8132
Vinsert
p53497
I42
VSimpleName: assertEquals
p53498
tp53499
I1
s(g8414
I42
g8415
Vinsert
p53500
I39
VPrimitiveType: void
p53501
tp53502
I1
s(g4425
I42
g4426
Vinsert
p53503
I43
VSimpleType: String
p53504
tp53505
I3
s(g16053
I42
g16054
Vinsert
p53506
I42
VSimpleName: NewOngoingStubbing
p53507
tp53508
I3
s(g4184
I42
g4185
Vinsert
p53509
I43
VSimpleType: T
p53510
tp53511
I2
s(g9571
I42
g9572
Vinsert
p53512
I55
VTypeDeclaration
p53513
tp53514
I1
s(g2222
I42
g2223
Vinsert
p53515
I42
VSimpleName: optionalClass
p53516
tp53517
I1
s(g4518
I42
g4519
Vinsert
p53518
I42
VSimpleName: labelCaption
p53519
tp53520
I1
s(g25340
I42
g25341
Vinsert
p53521
I42
VSimpleName: instance
p53522
tp53523
I1
s(g3136
I42
g3137
Vinsert
p53524
I59
VVariableDeclarationFragment
p53525
tp53526
I24
s(g3527
I42
g3528
Vinsert
p53527
I42
VSimpleName: mv
p53528
tp53529
I2
s(g2237
I42
g2238
Vinsert
p53530
I42
VSimpleName: objectReturningMethodNoArgs
p53531
tp53532
I1
s(g19774
I42
g19775
Vinsert
p53533
I42
VSimpleName: spy
p53534
tp53535
I1
s(g1553
I42
g1554
Vinsert
p53536
I42
VSimpleName: mock
p53537
tp53538
I1
s(g3914
I42
g3915
Vinsert
p53539
I83
VModifier: public
p53540
tp53541
I1
s(g926
I42
g927
Vinsert
p53542
I42
VSimpleName: Class
p53543
tp53544
I1
s(g164
I42
g165
Vinsert
p53545
I32
VMethodInvocation
p53546
tp53547
I3
s(g19136
I42
g19137
Vinsert
p53548
I42
VSimpleName: array
p53549
tp53550
I1
s(g15668
I42
g15669
Vinsert
p53551
I43
VSimpleType: TestClass
p53552
tp53553
I2
s(g2369
I42
g2370
Vinsert
p53554
I8
VBlock
p53555
tp53556
I1
s(g1302
I42
g1303
Vinsert
p53557
I34
VNumberLiteral: 0
p53558
tp53559
I1
s(g7166
I42
g7167
Vinsert
p53560
I42
VSimpleName: ObjectMethodsFilter
p53561
tp53562
I1
s(g6786
I42
g6787
Vinsert
p53563
I60
VVariableDeclarationStatement
p53564
tp53565
I1
s(g2580
I42
g2581
Vinsert
p53566
I45
VStringLiteral: "100"
p53567
tp53568
I1
s(g603
I42
g604
Vinsert
p53569
I42
VSimpleName: List
p53570
tp53571
I1
s(g5105
I42
g5106
Vinsert
p53572
I80
VMemberValuePair
p53573
tp53574
I1
s(g5712
I42
g5713
Vinsert
p53575
I42
VSimpleName: actualTypeArgument
p53576
tp53577
I1
s(g11066
I42
g11067
Vinsert
p53578
I59
VVariableDeclarationFragment
p53579
tp53580
I3
s(g8160
I42
g8161
Vinsert
p53581
I42
VSimpleName: mock
p53582
tp53583
I1
s(g15939
I42
g15940
Vinsert
p53584
I43
VSimpleType: ReturnsVoid
p53585
tp53586
I1
s(g8275
I42
g8276
Vinsert
p53587
I42
VSimpleName: assertThat
p53588
tp53589
I1
s(g204
I42
g205
Vinsert
p53590
I21
VExpressionStatement
p53591
tp53592
I1
s(g8655
I42
g8656
Vinsert
p53593
I42
VSimpleName: get
p53594
tp53595
I1
s(g19257
I42
g19258
Vinsert
p53596
I43
VSimpleType: Exception
p53597
tp53598
I4
s(g2085
I42
g2086
Vinsert
p53599
I83
VModifier: static
p53600
tp53601
I2
s(g2354
I42
g2355
Vinsert
p53602
I42
VSimpleName: MatcherDecorator
p53603
tp53604
I1
s(g2090
I42
g2091
Vinsert
p53605
I5
VArrayType: StackTraceElement[]
p53606
tp53607
I3
s(g36000
I42
g36001
Vinsert
p53608
I42
VSimpleName: thenReturn
p53609
tp53610
I1
s(g23442
I42
g23443
Vinsert
p53611
I34
VNumberLiteral: 0
p53612
tp53613
I1
s(g6859
I42
g6860
Vinsert
p53614
I43
VSimpleType: SimpleRunner
p53615
tp53616
I1
s(g7446
I42
g7447
Vinsert
p53617
I42
VSimpleName: getWanted
p53618
tp53619
I1
s(g5368
I42
g5369
Vinsert
p53620
I27
VInfixExpression: ||
p53621
tp53622
I1
s(g11791
I42
g11792
Vinsert
p53623
I43
VSimpleType: Type
p53624
tp53625
I2
s(g6403
I42
g6404
Vinsert
p53626
I39
VPrimitiveType: void
p53627
tp53628
I1
s(g4840
I42
g4841
Vinsert
p53629
I42
VSimpleName: registry
p53630
tp53631
I1
s(g3509
I42
g3510
Vinsert
p53632
I42
VSimpleName: mockUtil
p53633
tp53634
I3
s(g9252
I42
g9253
Vinsert
p53635
I14
VClassInstanceCreation
p53636
tp53637
I1
s(g2876
I42
g2877
Vinsert
p53638
I25
VIfStatement
p53639
tp53640
I2
s(g1493
I42
g1494
Vinsert
p53641
I43
VSimpleType: ThrowsException
p53642
tp53643
I1
s(g94
I42
g95
Vinsert
p53644
I43
VSimpleType: Exception
p53645
tp53646
I13
s(g3488
I42
g3489
Vinsert
p53647
I31
VMethodDeclaration
p53648
tp53649
I42
s(g2508
I42
g2509
Vinsert
p53650
I43
VSimpleType: Exception
p53651
tp53652
I1
s(g8383
I42
g8384
Vinsert
p53653
I42
VSimpleName: stubbingModeLocal
p53654
tp53655
I1
s(g7714
I42
g7715
Vinsert
p53656
I42
VSimpleName: logger
p53657
tp53658
I4
s(g23671
I42
g23672
Vinsert
p53659
I42
VSimpleName: unfilteredStackTrace
p53660
tp53661
I2
s(g6446
I42
g6447
Vinsert
p53662
I45
VStringLiteral: "foo"
p53663
tp53664
I1
s(g3914
I42
g3915
Vinsert
p53665
I42
VSimpleName: when_identical_types_and_the_correct_mock_name_is_greater_than_the_non_matching_name_then_injection_occurs_only_on_the_named_one
p53666
tp53667
I1
s(g26617
I42
g26618
Vinsert
p53668
I62
VInstanceofExpression
p53669
tp53670
I2
s(g12108
I42
g12109
Vinsert
p53671
I45
VStringLiteral: "@@commit@@"
p53672
tp53673
I1
s(g46
I42
g47
Vinsert
p53674
I42
VSimpleName: ci
p53675
tp53676
I1
s(g16053
I42
g16054
Vinsert
p53677
I42
VSimpleName: mockitoStubber
p53678
tp53679
I3
s(g2369
I42
g2370
Vinsert
p53680
I42
VSimpleName: Integer
p53681
tp53682
I1
s(g6350
I42
g6351
Vinsert
p53683
I21
VExpressionStatement
p53684
tp53685
I2
s(g16418
I42
g16419
Vinsert
p53686
I43
VSimpleType: Class
p53687
tp53688
I3
s(g10185
I42
g10186
Vinsert
p53689
I40
VQualifiedName: org.mockito.internal.util.RemoveFirstLine
p53690
tp53691
I3
s(g1962
I42
g1963
Vinsert
p53692
I83
VModifier: public
p53693
tp53694
I1
s(g2667
I42
g2668
Vinsert
p53695
I42
VSimpleName: mode
p53696
tp53697
I2
s(g3224
I42
g3225
Vinsert
p53698
I42
VSimpleName: s
p53699
tp53700
I2
s(g4106
I42
g4107
Vinsert
p53701
I42
VSimpleName: SelfDescribing
p53702
tp53703
I1
s(g8798
I42
g8799
Vinsert
p53704
I42
VSimpleName: expectMessage
p53705
tp53706
I2
s(g709
I42
g710
Vinsert
p53707
I42
VSimpleName: is
p53708
tp53709
I1
s(g12890
I42
g12891
Vinsert
p53710
I42
VSimpleName: notAnnotatedBy
p53711
tp53712
I1
s(g3748
I42
g3749
Vinsert
p53713
I43
VSimpleType: Exception
p53714
tp53715
I1
s(g18814
I42
g18815
Vinsert
p53716
I26
VImportDeclaration
p53717
tp53718
I1
s(g9026
I42
g9027
Vinsert
p53719
I8
VBlock
p53720
tp53721
I1
s(g5067
I42
g5068
Vinsert
p53722
I43
VSimpleType: Timeout
p53723
tp53724
I1
s(g8250
I42
g8251
Vinsert
p53725
I42
VSimpleName: visitIincInsn
p53726
tp53727
I1
s(g15972
I42
g15973
Vinsert
p53728
I39
VPrimitiveType: void
p53729
tp53730
I2
s(g19405
I42
g19406
Vinsert
p53731
I45
VStringLiteral: "three"
p53732
tp53733
I1
s(g9789
I42
g9790
Vinsert
p53734
I42
VSimpleName: simpleMethod
p53735
tp53736
I1
s(g13172
I42
g13173
Vinsert
p53737
I42
VSimpleName: threadToArgumentMatcherStack
p53738
tp53739
I1
s(g5393
I42
g5394
Vinsert
p53740
I48
VSuperMethodInvocation
p53741
tp53742
I1
s(g8663
I42
g8664
Vinsert
p53743
I9
VBooleanLiteral: true
p53744
tp53745
I1
s(g4163
I42
g4164
Vinsert
p53746
I70
VEnhancedForStatement
p53747
tp53748
I2
s(g8237
I42
g8238
Vinsert
p53749
I42
VSimpleName: join
p53750
tp53751
I1
s(g14721
I42
g14722
Vinsert
p53752
I42
VSimpleName: when
p53753
tp53754
I1
s(g6752
I42
g6753
Vinsert
p53755
I14
VClassInstanceCreation
p53756
tp53757
I1
s(g1770
I42
g1771
Vinsert
p53758
I85
VDimension
p53759
tp53760
I1
s(g1254
I42
g1255
Vinsert
p53761
I42
VSimpleName: parameterTypes
p53762
tp53763
I2
s(g12221
I42
g12222
Vinsert
p53764
I8
VBlock
p53765
tp53766
I1
s(g1543
I42
g1544
Vinsert
p53767
I42
VSimpleName: BDDStubberImpl
p53768
tp53769
I1
s(g6815
I42
g6816
Vinsert
p53770
I43
VSimpleType: Exception
p53771
tp53772
I1
s(g9390
I42
g9391
Vinsert
p53773
I25
VIfStatement
p53774
tp53775
I9
s(g13881
I42
g13882
Vinsert
p53776
I42
VSimpleName: names
p53777
tp53778
I1
s(g846
I42
g847
Vinsert
p53779
I44
VSingleVariableDeclaration
p53780
tp53781
I1
s(g11538
I42
g11539
Vinsert
p53782
I8
VBlock
p53783
tp53784
I1
s(g9747
I42
g9748
Vinsert
p53785
I45
VStringLiteral: "foo"
p53786
tp53787
I1
s(g8275
I42
g8276
Vinsert
p53788
I21
VExpressionStatement
p53789
tp53790
I1
s(g239
I42
g240
Vinsert
p53791
I32
VMethodInvocation
p53792
tp53793
I9
s(g22789
I42
g22790
Vinsert
p53794
I43
VSimpleType: MockHandlerInterface
p53795
tp53796
I1
s(g6316
I42
g6317
Vinsert
p53797
I21
VExpressionStatement
p53798
tp53799
I1
s(g11107
I42
g11108
Vinsert
p53800
I66
VTextElement: </pre>
p53801
tp53802
I1
s(g24467
I42
g24468
Vinsert
p53803
I34
VNumberLiteral: 2
p53804
tp53805
I1
s(g4492
I42
g4493
Vinsert
p53806
I42
VSimpleName: invoke
p53807
tp53808
I1
s(g10470
I42
g10471
Vinsert
p53809
I43
VSimpleType: Returns
p53810
tp53811
I1
s(g20652
I42
g20653
Vinsert
p53812
I42
VSimpleName: strictlyMissingMethodMode
p53813
tp53814
I1
s(g7735
I42
g7736
Vinsert
p53815
I43
VSimpleType: String
p53816
tp53817
I3
s(g42102
I42
g42103
Vinsert
p53818
I42
VSimpleName: mock
p53819
tp53820
I22
s(g5352
I42
g5353
Vinsert
p53821
I32
VMethodInvocation
p53822
tp53823
I2
s(g3575
I42
g3576
Vinsert
p53824
I43
VSimpleType: Equals
p53825
tp53826
I1
s(g2408
I42
g2409
Vinsert
p53827
I42
VSimpleName: object
p53828
tp53829
I2
s(g613
I42
g614
Vinsert
p53830
I45
VStringLiteral: "The argument of type '"
p53831
tp53832
I1
s(g5466
I42
g5467
Vinsert
p53833
I42
VSimpleName: stackTrace
p53834
tp53835
I2
s(g5869
I42
g5870
Vinsert
p53836
I45
VStringLiteral: ", class to: "
p53837
tp53838
I1
s(g9649
I42
g9650
Vinsert
p53839
I43
VSimpleType: ImplementsGenericMethodOfAbstract
p53840
tp53841
I1
s(g2075
I42
g2076
Vinsert
p53842
I83
VModifier: public
p53843
tp53844
I17
s(g6334
I42
g6335
Vinsert
p53845
I43
VSimpleType: FileReader
p53846
tp53847
I1
s(g23735
I42
g23736
Vinsert
p53848
I45
VStringLiteral: ""
p53849
tp53850
I1
s(g3224
I42
g3225
Vinsert
p53851
I43
VSimpleType: IllegalStateException
p53852
tp53853
I1
s(g16592
I42
g16593
Vinsert
p53854
I32
VMethodInvocation
p53855
tp53856
I8
s(g7253
I42
g7254
Vinsert
p53857
I43
VSimpleType: String
p53858
tp53859
I2
s(g11172
I42
g11173
Vinsert
p53860
I83
VModifier: static
p53861
tp53862
I1
s(g2531
I42
g2532
Vinsert
p53863
I60
VVariableDeclarationStatement
p53864
tp53865
I1
s(g10659
I42
g10660
Vinsert
p53866
I42
VSimpleName: should_be_able_to_serialize_type_that_implements_Serializable_but_but_dont_declare_a_no_arg_constructor
p53867
tp53868
I1
s(g287
I42
g288
Vinsert
p53869
I42
VSimpleName: Exception
p53870
tp53871
I1
s(g1179
I42
g1180
Vinsert
p53872
I43
VSimpleType: T
p53873
tp53874
I3
s(g4153
I42
g4154
Vinsert
p53875
I42
VSimpleName: Class
p53876
tp53877
I1
s(g12390
I42
g12391
Vinsert
p53878
I42
VSimpleName: message
p53879
tp53880
I5
s(g3560
I42
g3561
Vinsert
p53881
I42
VSimpleName: onField
p53882
tp53883
I1
s(g747
I42
g748
Vinsert
p53884
I42
VSimpleName: mock
p53885
tp53886
I2
s(g17240
I42
g17241
Vinsert
p53887
I45
VStringLiteral: "unchecked"
p53888
tp53889
I1
s(g14434
I42
g14435
Vinsert
p53890
I42
VSimpleName: were_exactly_x_interactions
p53891
tp53892
I1
s(g801
I42
g802
Vinsert
p53893
I43
VSimpleType: StringDescription
p53894
tp53895
I2
s(g6815
I42
g6816
Vinsert
p53896
I8
VBlock
p53897
tp53898
I1
s(g2296
I42
g2297
Vinsert
p53899
I32
VMethodInvocation
p53900
tp53901
I5
s(g11099
I42
g11100
Vinsert
p53902
I83
VModifier: public
p53903
tp53904
I5
s(g4595
I42
g4596
Vinsert
p53905
I39
VPrimitiveType: int
p53906
tp53907
I1
s(g971
I42
g972
Vinsert
p53908
I27
VInfixExpression: +
p53909
tp53910
I1
s(g1543
I42
g1544
Vinsert
p53911
I44
VSingleVariableDeclaration
p53912
tp53913
I1
s(g9758
I42
g9759
Vinsert
p53914
I43
VSimpleType: MockSettings
p53915
tp53916
I1
s(g513
I42
g514
Vinsert
p53917
I42
VSimpleName: Iterable
p53918
tp53919
I1
s(g6669
I42
g6670
Vinsert
p53920
I42
VSimpleName: notInitializedBase
p53921
tp53922
I1
s(g6924
I42
g6925
Vinsert
p53923
I43
VSimpleType: Invocation
p53924
tp53925
I1
s(g3493
I42
g3494
Vinsert
p53926
I42
VSimpleName: Matcher
p53927
tp53928
I1
s(g2770
I42
g2771
Vinsert
p53929
I32
VMethodInvocation
p53930
tp53931
I1
s(g4768
I42
g4769
Vinsert
p53932
I21
VExpressionStatement
p53933
tp53934
I1
s(g17557
I42
g17558
Vinsert
p53935
I32
VMethodInvocation
p53936
tp53937
I9
s(g7817
I42
g7818
Vinsert
p53938
I42
VSimpleName: simpleMethodInvocationTwo
p53939
tp53940
I2
s(g6334
I42
g6335
Vinsert
p53941
I42
VSimpleName: FileReader
p53942
tp53943
I1
s(g3585
I42
g3586
Vinsert
p53944
I66
VTextElement: <p>
p53945
tp53946
I1
s(g1426
I42
g1427
Vinsert
p53947
I83
VModifier: private
p53948
tp53949
I1
s(g3856
I42
g3857
Vinsert
p53950
I42
VSimpleName: expectThrowable
p53951
tp53952
I1
s(g9584
I42
g9585
Vinsert
p53953
I74
VParameterizedType: Capture<Person>
p53954
tp53955
I1
s(g25046
I42
g25047
Vinsert
p53956
I42
VSimpleName: UnfinishedVerificationException
p53957
tp53958
I2
s(g4895
I42
g4896
Vinsert
p53959
I43
VSimpleType: Invocation
p53960
tp53961
I1
s(g7248
I42
g7249
Vinsert
p53962
I27
VInfixExpression: +
p53963
tp53964
I1
s(g3766
I42
g3767
Vinsert
p53965
I74
VParameterizedType: Constructor<?>
p53966
tp53967
I1
s(g2826
I42
g2827
Vinsert
p53968
I57
VTypeLiteral
p53969
tp53970
I2
s(g21691
I42
g21692
Vinsert
p53971
I42
VSimpleName: Object
p53972
tp53973
I2
s(g6350
I42
g6351
Vinsert
p53974
I14
VClassInstanceCreation
p53975
tp53976
I1
s(g2311
I42
g2312
Vinsert
p53977
I5
VArrayType: StackTraceElement[]
p53978
tp53979
I1
s(g1498
I42
g1499
Vinsert
p53980
I43
VSimpleType: VerificationStartedListener
p53981
tp53982
I1
s(g184
I42
g185
Vinsert
p53983
I41
VReturnStatement
p53984
tp53985
I1
s(g14721
I42
g14722
Vinsert
p53986
I42
VSimpleName: myMock1
p53987
tp53988
I2
s(g4911
I42
g4912
Vinsert
p53989
I42
VSimpleName: arguments
p53990
tp53991
I1
s(g3680
I42
g3681
Vinsert
p53992
I14
VClassInstanceCreation
p53993
tp53994
I19
s(g9832
I42
g9833
Vinsert
p53995
I42
VSimpleName: Answer
p53996
tp53997
I1
s(g5887
I42
g5888
Vinsert
p53998
I7
VAssignment: =
p53999
tp54000
I2
s(g6561
I42
g6562
Vinsert
p54001
I57
VTypeLiteral
p54002
tp54003
I1
s(g8016
I42
g8017
Vinsert
p54004
I42
VSimpleName: inOrder
p54005
tp54006
I3
s(g2652
I42
g2653
Vinsert
p54007
I42
VSimpleName: Method
p54008
tp54009
I1
s(g6363
I42
g6364
Vinsert
p54010
I42
VSimpleName: StubbingListener
p54011
tp54012
I3
s(g4027
I42
g4028
Vinsert
p54013
I42
VSimpleName: filecount
p54014
tp54015
I1
s(g5206
I42
g5207
Vinsert
p54016
I42
VSimpleName: methods
p54017
tp54018
I1
s(g6217
I42
g6218
Vinsert
p54019
I42
VSimpleName: Cloneable
p54020
tp54021
I1
s(g13383
I42
g13384
Vinsert
p54022
I42
VSimpleName: verify
p54023
tp54024
I1
s(g4590
I42
g4591
Vinsert
p54025
I38
VPrefixExpression: !
p54026
tp54027
I1
s(g4354
I42
g4355
Vinsert
p54028
I42
VSimpleName: f
p54029
tp54030
I2
s(g1523
I42
g1524
Vinsert
p54031
I42
VSimpleName: MockingProgress
p54032
tp54033
I2
s(g104
I42
g105
Vinsert
p54034
I27
VInfixExpression: &&
p54035
tp54036
I2
s(g3390
I42
g3391
Vinsert
p54037
I42
VSimpleName: Object
p54038
tp54039
I1
s(g129
I42
g130
Vinsert
p54040
I74
VParameterizedType: Matcher<T>
p54041
tp54042
I1
s(g13694
I42
g13695
Vinsert
p54043
I25
VIfStatement
p54044
tp54045
I2
s(g1785
I42
g1786
Vinsert
p54046
I32
VMethodInvocation
p54047
tp54048
I9
s(g1039
I42
g1040
Vinsert
p54049
I31
VMethodDeclaration
p54050
tp54051
I1
s(g12133
I42
g12134
Vinsert
p54052
I33
VNullLiteral
p54053
tp54054
I10
s(g129
I42
g130
Vinsert
p54055
I42
VSimpleName: MOCKING_PROGRESS
p54056
tp54057
I1
s(g1919
I42
g1920
Vinsert
p54058
I83
VModifier: public
p54059
tp54060
I1
s(g10520
I42
g10521
Vinsert
p54061
I54
VTryStatement
p54062
tp54063
I2
s(g6093
I42
g6094
Vinsert
p54064
I66
VTextElement: Used internally by CGLIB. Returns the <code>AbstractClassGenerator</code>
p54065
tp54066
I1
s(g26027
I42
g26028
Vinsert
p54067
I42
VSimpleName: returnValues
p54068
tp54069
I1
s(g6634
I42
g6635
Vinsert
p54070
I43
VSimpleType: IMethods
p54071
tp54072
I2
s(g2652
I42
g2653
Vinsert
p54073
I43
VSimpleType: ClassEmitter
p54074
tp54075
I2
s(g1380
I42
g1381
Vinsert
p54076
I45
VStringLiteral: "Typically, stubbing argument mismatch indicates user mistake when writing tests.\u005cn"
p54077
tp54078
I1
s(g6502
I42
g6503
Vinsert
p54079
I42
VSimpleName: Mockito
p54080
tp54081
I1
s(g1477
I42
g1478
Vinsert
p54082
I44
VSingleVariableDeclaration
p54083
tp54084
I1
s(g9721
I42
g9722
Vinsert
p54085
I42
VSimpleName: delayMillis
p54086
tp54087
I1
s(g12832
I42
g12833
Vinsert
p54088
I43
VSimpleType: NotAMockException
p54089
tp54090
I1
s(g8184
I42
g8185
Vinsert
p54091
I42
VSimpleName: textOne
p54092
tp54093
I3
s(g20453
I42
g20454
Vinsert
p54094
I42
VSimpleName: instance
p54095
tp54096
I3
s(g12422
I42
g12423
Vinsert
p54097
I51
VSynchronizedStatement
p54098
tp54099
I1
s(g2642
I42
g2643
Vinsert
p54100
I39
VPrimitiveType: void
p54101
tp54102
I2
s(g1049
I42
g1050
Vinsert
p54103
I74
VParameterizedType: Constructor<?>
p54104
tp54105
I1
s(g5805
I42
g5806
Vinsert
p54106
I32
VMethodInvocation
p54107
tp54108
I5
s(g11043
I42
g11044
Vinsert
p54109
I26
VImportDeclaration
p54110
tp54111
I2
s(g1259
I42
g1260
Vinsert
p54112
I42
VSimpleName: match
p54113
tp54114
I1
s(g164
I42
g165
Vinsert
p54115
I7
VAssignment: =
p54116
tp54117
I1
s(g4456
I42
g4457
Vinsert
p54118
I53
VThrowStatement
p54119
tp54120
I1
s(g10921
I42
g10922
Vinsert
p54121
I42
VSimpleName: stackTrace
p54122
tp54123
I1
s(g5216
I42
g5217
Vinsert
p54124
I43
VSimpleType: ParameterizedType
p54125
tp54126
I2
s(g5352
I42
g5353
Vinsert
p54127
I43
VSimpleType: OngoingVerifyingMode
p54128
tp54129
I1
s(g3390
I42
g3391
Vinsert
p54130
I2
VArrayAccess
p54131
tp54132
I1
s(g2331
I42
g2332
Vinsert
p54133
I44
VSingleVariableDeclaration
p54134
tp54135
I2
s(g390
I42
g391
Vinsert
p54136
I42
VSimpleName: b
p54137
tp54138
I1
s(g4111
I42
g4112
Vinsert
p54139
I83
VModifier: public
p54140
tp54141
I1
s(g5201
I42
g5202
Vinsert
p54142
I42
VSimpleName: mock
p54143
tp54144
I2
s(g11074
I42
g11075
Vinsert
p54145
I43
VSimpleType: Operation
p54146
tp54147
I1
s(g10740
I42
g10741
Vinsert
p54148
I42
VSimpleName: print
p54149
tp54150
I3
s(g7790
I42
g7791
Vinsert
p54151
I42
VSimpleName: orderedInstanceFieldsFrom
p54152
tp54153
I1
s(g2881
I42
g2882
Vinsert
p54154
I60
VVariableDeclarationStatement
p54155
tp54156
I3
s(g4043
I42
g4044
Vinsert
p54157
I42
VSimpleName: simpleMethod
p54158
tp54159
I1
s(g9884
I42
g9885
Vinsert
p54160
I8
VBlock
p54161
tp54162
I2
s(g7166
I42
g7167
Vinsert
p54163
I59
VVariableDeclarationFragment
p54164
tp54165
I1
s(g17240
I42
g17241
Vinsert
p54166
I42
VSimpleName: shouldCompile
p54167
tp54168
I1
s(g9666
I42
g9667
Vinsert
p54169
I43
VSimpleType: Field
p54170
tp54171
I1
s(g14721
I42
g14722
Vinsert
p54172
I43
VSimpleType: MyClass1
p54173
tp54174
I1
s(g1982
I42
g1983
Vinsert
p54175
I54
VTryStatement
p54176
tp54177
I1
s(g2457
I42
g2458
Vinsert
p54178
I42
VSimpleName: TicketParser
p54179
tp54180
I1
s(g10265
I42
g10266
Vinsert
p54181
I42
VSimpleName: spy
p54182
tp54183
I1
s(g2195
I42
g2196
Vinsert
p54184
I42
VSimpleName: process
p54185
tp54186
I1
s(g8647
I42
g8648
Vinsert
p54187
I43
VSimpleType: Exception
p54188
tp54189
I1
s(g6233
I42
g6234
Vinsert
p54190
I42
VSimpleName: T
p54191
tp54192
I1
s(g2804
I42
g2805
Vinsert
p54193
I41
VReturnStatement
p54194
tp54195
I2
s(g6446
I42
g6447
Vinsert
p54196
I39
VPrimitiveType: byte
p54197
tp54198
I1
s(g2331
I42
g2332
Vinsert
p54199
I42
VSimpleName: after
p54200
tp54201
I1
s(g184
I42
g185
Vinsert
p54202
I42
VSimpleName: atLeast
p54203
tp54204
I1
s(g134
I42
g135
Vinsert
p54205
I42
VSimpleName: newValue
p54206
tp54207
I1
s(g7017
I42
g7018
Vinsert
p54208
I42
VSimpleName: method
p54209
tp54210
I2
s(g4755
I42
g4756
Vinsert
p54211
I42
VSimpleName: Mockito
p54212
tp54213
I1
s(g1696
I42
g1697
Vinsert
p54214
I42
VSimpleName: key
p54215
tp54216
I2
s(g3191
I42
g3192
Vinsert
p54217
I1
VAnonymousClassDeclaration
p54218
tp54219
I3
s(g4800
I42
g4801
Vinsert
p54220
I43
VSimpleType: MockHandler
p54221
tp54222
I1
s(g11498
I42
g11499
Vinsert
p54223
I42
VSimpleName: mockSettings
p54224
tp54225
I1
s(g7361
I42
g7362
Vinsert
p54226
I74
VParameterizedType: Class<?>
p54227
tp54228
I3
s(g20322
I42
g20323
Vinsert
p54229
I36
VParenthesizedExpression
p54230
tp54231
I1
s(g10851
I42
g10852
Vinsert
p54232
I42
VSimpleName: emptyOptionalInt
p54233
tp54234
I1
s(g4027
I42
g4028
Vinsert
p54235
I21
VExpressionStatement
p54236
tp54237
I2
s(g4547
I42
g4548
Vinsert
p54238
I42
VSimpleName: verify
p54239
tp54240
I1
s(g2616
I42
g2617
Vinsert
p54241
I44
VSingleVariableDeclaration
p54242
tp54243
I1
s(g1115
I42
g1116
Vinsert
p54244
I42
VSimpleName: STYLE_EVERYTHING
p54245
tp54246
I1
s(g8038
I42
g8039
Vinsert
p54247
I42
VSimpleName: Object
p54248
tp54249
I2
s(g21537
I42
g21538
Vinsert
p54250
I42
VSimpleName: el
p54251
tp54252
I1
s(g26561
I42
g26562
Vinsert
p54253
I42
VSimpleName: Exception
p54254
tp54255
I4
s(g956
I42
g957
Vinsert
p54256
I31
VMethodDeclaration
p54257
tp54258
I1
s(g6228
I42
g6229
Vinsert
p54259
I42
VSimpleName: t
p54260
tp54261
I5
s(g19074
I42
g19075
Vinsert
p54262
I83
VModifier: final
p54263
tp54264
I1
s(g6247
I42
g6248
Vinsert
p54265
I44
VSingleVariableDeclaration
p54266
tp54267
I1
s(g861
I42
g862
Vinsert
p54268
I27
VInfixExpression: +
p54269
tp54270
I1
s(g9100
I42
g9101
Vinsert
p54271
I42
VSimpleName: key
p54272
tp54273
I1
s(g2046
I42
g2047
Vinsert
p54274
I42
VSimpleName: withSettings
p54275
tp54276
I2
s(g4451
I42
g4452
Vinsert
p54277
I80
VMemberValuePair
p54278
tp54279
I3
s(g5017
I42
g5018
Vinsert
p54280
I43
VSimpleType: MockitoMethod
p54281
tp54282
I1
s(g2743
I42
g2744
Vinsert
p54283
I43
VSimpleType: Integer
p54284
tp54285
I1
s(g13114
I42
g13115
Vinsert
p54286
I59
VVariableDeclarationFragment
p54287
tp54288
I4
s(g10368
I42
g10369
Vinsert
p54289
I42
VSimpleName: version
p54290
tp54291
I1
s(g9473
I42
g9474
Vinsert
p54292
I8
VBlock
p54293
tp54294
I1
s(g25519
I42
g25520
Vinsert
p54295
I42
VSimpleName: ongoingStubbing
p54296
tp54297
I1
s(g11926
I42
g11927
Vinsert
p54298
I42
VSimpleName: withPrivateCopyOf
p54299
tp54300
I1
s(g5017
I42
g5018
Vinsert
p54301
I42
VSimpleName: createMockitoMethodProxy
p54302
tp54303
I1
s(g19217
I42
g19218
Vinsert
p54304
I42
VSimpleName: simpleMethod
p54305
tp54306
I14
s(g2444
I42
g2445
Vinsert
p54307
I25
VIfStatement
p54308
tp54309
I1
s(g8082
I42
g8083
Vinsert
p54310
I31
VMethodDeclaration
p54311
tp54312
I1
s(g2467
I42
g2468
Vinsert
p54313
I42
VSimpleName: oldMockHandler
p54314
tp54315
I1
s(g12071
I42
g12072
Vinsert
p54316
I45
VStringLiteral: "\u005cnshould NOT be inside of:\u005cn"
p54317
tp54318
I1
s(g13705
I42
g13706
Vinsert
p54319
I43
VSimpleType: MockitoConfiguration
p54320
tp54321
I1
s(g16760
I42
g16761
Vinsert
p54322
I43
VSimpleType: StateMaster
p54323
tp54324
I2
s(g7297
I42
g7298
Vinsert
p54325
I42
VSimpleName: VerificationModeImpl
p54326
tp54327
I1
s(g7619
I42
g7620
Vinsert
p54328
I42
VSimpleName: argument
p54329
tp54330
I1
s(g9053
I42
g9054
Vinsert
p54331
I45
VStringLiteral: "mockito"
p54332
tp54333
I1
s(g4822
I42
g4823
Vinsert
p54334
I42
VSimpleName: getDefaultAnswer
p54335
tp54336
I1
s(g12390
I42
g12391
Vinsert
p54337
I59
VVariableDeclarationFragment
p54338
tp54339
I2
s(g16269
I42
g16270
Vinsert
p54340
I83
VModifier: private
p54341
tp54342
I1
s(g2046
I42
g2047
Vinsert
p54343
I43
VSimpleType: IMethods
p54344
tp54345
I2
s(g5201
I42
g5202
Vinsert
p54346
I43
VSimpleType: Exception
p54347
tp54348
I1
s(g3991
I42
g3992
Vinsert
p54349
I85
VDimension
p54350
tp54351
I3
s(g12427
I42
g12428
Vinsert
p54352
I83
VModifier: public
p54353
tp54354
I1
s(g6962
I42
g6963
Vinsert
p54355
I42
VSimpleName: mock
p54356
tp54357
I3
s(g553
I42
g554
Vinsert
p54358
I42
VSimpleName: expectedCause
p54359
tp54360
I7
s(g5522
I42
g5523
Vinsert
p54361
I48
VSuperMethodInvocation
p54362
tp54363
I1
s(g11
I42
g12
Vinsert
p54364
I25
VIfStatement
p54365
tp54366
I1
s(g5138
I42
g5139
Vinsert
p54367
I33
VNullLiteral
p54368
tp54369
I2
s(g20121
I42
g20122
Vinsert
p54370
I42
VSimpleName: ThreadSafeMockingProgress
p54371
tp54372
I1
s(g22617
I42
g22618
Vinsert
p54373
I42
VSimpleName: size
p54374
tp54375
I2
s(g9865
I42
g9866
Vinsert
p54376
I14
VClassInstanceCreation
p54377
tp54378
I1
s(g19774
I42
g19775
Vinsert
p54379
I43
VSimpleType: Foo
p54380
tp54381
I1
s(g25340
I42
g25341
Vinsert
p54382
I42
VSimpleName: Fields
p54383
tp54384
I1
s(g2429
I42
g2430
Vinsert
p54385
I42
VSimpleName: containerStubOnly
p54386
tp54387
I1
s(g144
I42
g145
Vinsert
p54388
I42
VSimpleName: validateReturnArgIdentity
p54389
tp54390
I1
s(g5237
I42
g5238
Vinsert
p54391
I32
VMethodInvocation
p54392
tp54393
I2
s(g7081
I42
g7082
Vinsert
p54394
I83
VModifier: public
p54395
tp54396
I1
s(g6008
I42
g6009
Vinsert
p54397
I39
VPrimitiveType: void
p54398
tp54399
I1
s(g9929
I42
g9930
Vinsert
p54400
I21
VExpressionStatement
p54401
tp54402
I6
s(g20934
I42
g20935
Vinsert
p54403
I42
VSimpleName: InstantiationException
p54404
tp54405
I1
s(g11066
I42
g11067
Vinsert
p54406
I42
VSimpleName: t
p54407
tp54408
I3
s(g22156
I42
g22157
Vinsert
p54409
I43
VSimpleType: CustomMatcher
p54410
tp54411
I2
s(g3426
I42
g3427
Vinsert
p54412
I34
VNumberLiteral: 0
p54413
tp54414
I1
s(g22156
I42
g22157
Vinsert
p54415
I42
VSimpleName: matcher
p54416
tp54417
I2
s(g573
I42
g574
Vinsert
p54418
I42
VSimpleName: accept
p54419
tp54420
I1
s(g4730
I42
g4731
Vinsert
p54421
I42
VSimpleName: Test
p54422
tp54423
I1
s(g23336
I42
g23337
Vinsert
p54424
I43
VSimpleType: MockitoAssertionError
p54425
tp54426
I3
s(g578
I42
g579
Vinsert
p54427
I59
VVariableDeclarationFragment
p54428
tp54429
I2
s(g4277
I42
g4278
Vinsert
p54430
I42
VSimpleName: add
p54431
tp54432
I1
s(g15601
I42
g15602
Vinsert
p54433
I59
VVariableDeclarationFragment
p54434
tp54435
I7
s(g16524
I42
g16525
Vinsert
p54436
I42
VSimpleName: interfaces
p54437
tp54438
I1
s(g4382
I42
g4383
Vinsert
p54439
I42
VSimpleName: Matcher
p54440
tp54441
I1
s(g2162
I42
g2163
Vinsert
p54442
I42
VSimpleName: size
p54443
tp54444
I1
s(g13023
I42
g13024
Vinsert
p54445
I42
VSimpleName: IllegalAccessException
p54446
tp54447
I1
s(g3637
I42
g3638
Vinsert
p54448
I14
VClassInstanceCreation
p54449
tp54450
I4
s(g7682
I42
g7683
Vinsert
p54451
I7
VAssignment: =
p54452
tp54453
I2
s(g2988
I42
g2989
Vinsert
p54454
I33
VNullLiteral
p54455
tp54456
I2
s(g3136
I42
g3137
Vinsert
p54457
I42
VSimpleName: reference
p54458
tp54459
I1
s(g8889
I42
g8890
Vinsert
p54460
I42
VSimpleName: arg
p54461
tp54462
I1
s(g8353
I42
g8354
Vinsert
p54463
I43
VSimpleType: Set
p54464
tp54465
I2
s(g12046
I42
g12047
Vinsert
p54466
I27
VInfixExpression: <
p54467
tp54468
I1
s(g11404
I42
g11405
Vinsert
p54469
I42
VSimpleName: getArgumentsLine
p54470
tp54471
I1
s(g12660
I42
g12661
Vinsert
p54472
I42
VSimpleName: Assertions
p54473
tp54474
I1
s(g2286
I42
g2287
Vinsert
p54475
I66
VTextElement:  extension exists or is visible in the current classpath.</p>
p54476
tp54477
I1
s(g9224
I42
g9225
Vinsert
p54478
I31
VMethodDeclaration
p54479
tp54480
I1
s(g17803
I42
g17804
Vinsert
p54481
I42
VSimpleName: debuggingInfo
p54482
tp54483
I3
s(g1347
I42
g1348
Vinsert
p54484
I74
VParameterizedType: InternalMockHandler<Object>
p54485
tp54486
I2
s(g14972
I42
g14973
Vinsert
p54487
I78
VMarkerAnnotation
p54488
tp54489
I1
s(g1901
I42
g1902
Vinsert
p54490
I42
VSimpleName: getReturnValues
p54491
tp54492
I1
s(g28046
I42
g28047
Vinsert
p54493
I45
VStringLiteral: ""
p54494
tp54495
I1
s(g7416
I42
g7417
Vinsert
p54496
I42
VSimpleName: expected
p54497
tp54498
I1
s(g2457
I42
g2458
Vinsert
p54499
I74
VParameterizedType: Set<String>
p54500
tp54501
I1
s(g6217
I42
g6218
Vinsert
p54502
I42
VSimpleName: GenericsNest
p54503
tp54504
I1
s(g10341
I42
g10342
Vinsert
p54505
I43
VSimpleType: InvocationOnMock
p54506
tp54507
I1
s(g5768
I42
g5769
Vinsert
p54508
I42
VSimpleName: InvocationOnMock
p54509
tp54510
I1
s(g2700
I42
g2701
Vinsert
p54511
I42
VSimpleName: detects_illegal_null_argument
p54512
tp54513
I1
s(g10846
I42
g10847
Vinsert
p54514
I42
VSimpleName: pomComparator
p54515
tp54516
I2
s(g5226
I42
g5227
Vinsert
p54517
I74
VParameterizedType: List<Sub>
p54518
tp54519
I1
s(g16963
I42
g16964
Vinsert
p54520
I42
VSimpleName: configureWith
p54521
tp54522
I5
s(g19009
I42
g19010
Vinsert
p54523
I43
VSimpleType: InnerClassNode
p54524
tp54525
I2
s(g2541
I42
g2542
Vinsert
p54526
I42
VSimpleName: unusedStubs
p54527
tp54528
I1
s(g2457
I42
g2458
Vinsert
p54529
I52
VThisExpression
p54530
tp54531
I1
s(g11678
I42
g11679
Vinsert
p54532
I60
VVariableDeclarationStatement
p54533
tp54534
I4
s(g7735
I42
g7736
Vinsert
p54535
I32
VMethodInvocation
p54536
tp54537
I2
s(g4871
I42
g4872
Vinsert
p54538
I32
VMethodInvocation
p54539
tp54540
I2
s(g10086
I42
g10087
Vinsert
p54541
I42
VSimpleName: booleanObjectReturningMethod
p54542
tp54543
I1
s(g6217
I42
g6218
Vinsert
p54544
I60
VVariableDeclarationStatement
p54545
tp54546
I1
s(g149
I42
g150
Vinsert
p54547
I42
VSimpleName: mock
p54548
tp54549
I2
s(g4600
I42
g4601
Vinsert
p54550
I83
VModifier: public
p54551
tp54552
I1
s(g12649
I42
g12650
Vinsert
p54553
I42
VSimpleName: booleanValue
p54554
tp54555
I1
s(g4657
I42
g4658
Vinsert
p54556
I27
VInfixExpression: ==
p54557
tp54558
I1
s(g27029
I42
g27030
Vinsert
p54559
I34
VNumberLiteral: 100
p54560
tp54561
I1
s(g20230
I42
g20231
Vinsert
p54562
I59
VVariableDeclarationFragment
p54563
tp54564
I4
s(g4670
I42
g4671
Vinsert
p54565
I45
VStringLiteral: "can load JDK type"
p54566
tp54567
I1
s(g16979
I42
g16980
Vinsert
p54568
I34
VNumberLiteral: 3
p54569
tp54570
I1
s(g4657
I42
g4658
Vinsert
p54571
I44
VSingleVariableDeclaration
p54572
tp54573
I2
s(g931
I42
g932
Vinsert
p54574
I42
VSimpleName: spy
p54575
tp54576
I1
s(g179
I42
g180
Vinsert
p54577
I59
VVariableDeclarationFragment
p54578
tp54579
I7
s(g2344
I42
g2345
Vinsert
p54580
I42
VSimpleName: createMock
p54581
tp54582
I2
s(g3680
I42
g3681
Vinsert
p54583
I27
VInfixExpression: +
p54584
tp54585
I1
s(g16449
I42
g16450
Vinsert
p54586
I59
VVariableDeclarationFragment
p54587
tp54588
I1
s(g5544
I42
g5545
Vinsert
p54589
I42
VSimpleName: T
p54590
tp54591
I11
s(g20508
I42
g20509
Vinsert
p54592
I42
VSimpleName: shouldNotAllowSettingInvalidCheckedException
p54593
tp54594
I1
s(g7633
I42
g7634
Vinsert
p54595
I42
VSimpleName: verifyingStarted
p54596
tp54597
I1
s(g11434
I42
g11435
Vinsert
p54598
I42
VSimpleName: matcher
p54599
tp54600
I2
s(g3436
I42
g3437
Vinsert
p54601
I42
VSimpleName: NoSuchFieldException
p54602
tp54603
I2
s(g946
I42
g947
Vinsert
p54604
I42
VSimpleName: printSettings
p54605
tp54606
I3
s(g4106
I42
g4107
Vinsert
p54607
I14
VClassInstanceCreation
p54608
tp54609
I3
s(g2408
I42
g2409
Vinsert
p54610
I22
VFieldAccess
p54611
tp54612
I1
s(g8978
I42
g8979
Vinsert
p54613
I34
VNumberLiteral: 2
p54614
tp54615
I2
s(g27939
I42
g27940
Vinsert
p54616
I42
VSimpleName: thenReturn
p54617
tp54618
I1
s(g1858
I42
g1859
Vinsert
p54619
I42
VSimpleName: sub
p54620
tp54621
I2
s(g1087
I42
g1088
Vinsert
p54622
I21
VExpressionStatement
p54623
tp54624
I4
s(g9601
I42
g9602
Vinsert
p54625
I42
VSimpleName: V
p54626
tp54627
I1
s(g5934
I42
g5935
Vinsert
p54628
I33
VNullLiteral
p54629
tp54630
I2
s(g5961
I42
g5962
Vinsert
p54631
I8
VBlock
p54632
tp54633
I1
s(g4282
I42
g4283
Vinsert
p54634
I42
VSimpleName: imposterizer
p54635
tp54636
I2
s(g3204
I42
g3205
Vinsert
p54637
I42
VSimpleName: guru
p54638
tp54639
I1
s(g194
I42
g195
Vinsert
p54640
I43
VSimpleType: VerificationAssertionError
p54641
tp54642
I1
s(g8082
I42
g8083
Vinsert
p54643
I21
VExpressionStatement
p54644
tp54645
I1
s(g7263
I42
g7264
Vinsert
p54646
I77
VNormalAnnotation
p54647
tp54648
I1
s(g8353
I42
g8354
Vinsert
p54649
I32
VMethodInvocation
p54650
tp54651
I39
s(g4138
I42
g4139
Vinsert
p54652
I42
VSimpleName: times
p54653
tp54654
I1
s(g8459
I42
g8460
Vinsert
p54655
I22
VFieldAccess
p54656
tp54657
I2
s(g7572
I42
g7573
Vinsert
p54658
I42
VSimpleName: isValidReturnType
p54659
tp54660
I1
s(g16232
I42
g16233
Vinsert
p54661
I43
VSimpleType: SmartNullReturnValues
p54662
tp54663
I1
s(g46
I42
g47
Vinsert
p54664
I8
VBlock
p54665
tp54666
I1
s(g10324
I42
g10325
Vinsert
p54667
I43
VSimpleType: Stubbing
p54668
tp54669
I1
s(g1457
I42
g1458
Vinsert
p54670
I54
VTryStatement
p54671
tp54672
I1
s(g2281
I42
g2282
Vinsert
p54673
I85
VDimension
p54674
tp54675
I1
s(g5562
I42
g5563
Vinsert
p54676
I60
VVariableDeclarationStatement
p54677
tp54678
I1
s(g7526
I42
g7527
Vinsert
p54679
I8
VBlock
p54680
tp54681
I1
s(g3170
I42
g3171
Vinsert
p54682
I42
VSimpleName: verify
p54683
tp54684
I1
s(g4827
I42
g4828
Vinsert
p54685
I42
VSimpleName: emptyMethod
p54686
tp54687
I1
s(g1169
I42
g1170
Vinsert
p54688
I42
VSimpleName: instanciationError
p54689
tp54690
I1
s(g6008
I42
g6009
Vinsert
p54691
I42
VSimpleName: printer
p54692
tp54693
I1
s(g6796
I42
g6797
Vinsert
p54694
I42
VSimpleName: MockitoException
p54695
tp54696
I4
s(g3214
I42
g3215
Vinsert
p54697
I21
VExpressionStatement
p54698
tp54699
I1
s(g709
I42
g710
Vinsert
p54700
I43
VSimpleType: java.io.InputStream
p54701
tp54702
I1
s(g8372
I42
g8373
Vinsert
p54703
I32
VMethodInvocation
p54704
tp54705
I8
s(g15053
I42
g15054
Vinsert
p54706
I42
VSimpleName: e
p54707
tp54708
I2
s(g3055
I42
g3056
Vinsert
p54709
I43
VSimpleType: InstanceOf
p54710
tp54711
I1
s(g5105
I42
g5106
Vinsert
p54712
I42
VSimpleName: NotAMockException
p54713
tp54714
I1
s(g2301
I42
g2302
Vinsert
p54715
I42
VSimpleName: RETURNS_MOCKS
p54716
tp54717
I1
s(g7572
I42
g7573
Vinsert
p54718
I32
VMethodInvocation
p54719
tp54720
I15
s(g8803
I42
g8804
Vinsert
p54721
I76
VWildcardType: ?
p54722
tp54723
I1
s(g608
I42
g609
Vinsert
p54724
I25
VIfStatement
p54725
tp54726
I1
s(g7248
I42
g7249
Vinsert
p54727
I42
VSimpleName: Type
p54728
tp54729
I1
s(g7379
I42
g7380
Vinsert
p54730
I40
VQualifiedName: withSpy.list
p54731
tp54732
I1
s(g8131
I42
g8132
Vinsert
p54733
I43
VSimpleType: String
p54734
tp54735
I2
s(g1439
I42
g1440
Vinsert
p54736
I44
VSingleVariableDeclaration
p54737
tp54738
I1
s(g2018
I42
g2019
Vinsert
p54739
I42
VSimpleName: fqcn
p54740
tp54741
I2
s(g1543
I42
g1544
Vinsert
p54742
I42
VSimpleName: Throwable
p54743
tp54744
I1
s(g24000
I42
g24001
Vinsert
p54745
I55
VTypeDeclaration
p54746
tp54747
I2
s(g1214
I42
g1215
Vinsert
p54748
I42
VSimpleName: assertEquals
p54749
tp54750
I1
s(g5939
I42
g5940
Vinsert
p54751
I83
VModifier: private
p54752
tp54753
I2
s(g24839
I42
g24840
Vinsert
p54754
I42
VSimpleName: Ignore
p54755
tp54756
I1
s(g9323
I42
g9324
Vinsert
p54757
I42
VSimpleName: atLeastOnce
p54758
tp54759
I1
s(g7403
I42
g7404
Vinsert
p54760
I31
VMethodDeclaration
p54761
tp54762
I1
s(g4973
I42
g4974
Vinsert
p54763
I32
VMethodInvocation
p54764
tp54765
I1
s(g23145
I42
g23146
Vinsert
p54766
I42
VSimpleName: shouldHelpOutWithUnnecessaryCastingOfSets
p54767
tp54768
I1
s(g704
I42
g705
Vinsert
p54769
I32
VMethodInvocation
p54770
tp54771
I1
s(g658
I42
g659
Vinsert
p54772
I8
VBlock
p54773
tp54774
I1
s(g3468
I42
g3469
Vinsert
p54775
I42
VSimpleName: HashSet
p54776
tp54777
I2
s(g5012
I42
g5013
Vinsert
p54778
I42
VSimpleName: reporter
p54779
tp54780
I1
s(g362
I42
g363
Vinsert
p54781
I43
VSimpleType: Invocation
p54782
tp54783
I3
s(g1149
I42
g1150
Vinsert
p54784
I83
VModifier: public
p54785
tp54786
I1
s(g1426
I42
g1427
Vinsert
p54787
I40
VQualifiedName: java.lang.String.format
p54788
tp54789
I1
s(g5022
I42
g5023
Vinsert
p54790
I42
VSimpleName: toInvocation
p54791
tp54792
I1
s(g13950
I42
g13951
Vinsert
p54793
I42
VSimpleName: Override
p54794
tp54795
I1
s(g623
I42
g624
Vinsert
p54796
I44
VSingleVariableDeclaration
p54797
tp54798
I2
s(g881
I42
g882
Vinsert
p54799
I27
VInfixExpression: +
p54800
tp54801
I1
s(g866
I42
g867
Vinsert
p54802
I42
VSimpleName: timesNow
p54803
tp54804
I1
s(g5368
I42
g5369
Vinsert
p54805
I42
VSimpleName: throwableClass
p54806
tp54807
I2
s(g1234
I42
g1235
Vinsert
p54808
I45
VStringLiteral: "Mockito cannot mock this class: "
p54809
tp54810
I1
s(g3606
I42
g3607
Vinsert
p54811
I43
VSimpleType: InterceptedInvocation.RealMethod.FromCallable
p54812
tp54813
I2
s(g1269
I42
g1270
Vinsert
p54814
I42
VSimpleName: thenReturn
p54815
tp54816
I1
s(g623
I42
g624
Vinsert
p54817
I43
VSimpleType: InvocationMatcher
p54818
tp54819
I1
s(g347
I42
g348
Vinsert
p54820
I41
VReturnStatement
p54821
tp54822
I1
s(g7495
I42
g7496
Vinsert
p54823
I8
VBlock
p54824
tp54825
I1
s(g3016
I42
g3017
Vinsert
p54826
I60
VVariableDeclarationStatement
p54827
tp54828
I2
s(g22492
I42
g22493
Vinsert
p54829
I37
VPostfixExpression: ++
p54830
tp54831
I1
s(g11387
I42
g11388
Vinsert
p54832
I42
VSimpleName: RunnerFactory
p54833
tp54834
I1
s(g941
I42
g942
Vinsert
p54835
I42
VSimpleName: serializableMode
p54836
tp54837
I1
s(g30882
I42
g30883
Vinsert
p54838
I42
VSimpleName: VerificationAwareInvocation
p54839
tp54840
I1
s(g8561
I42
g8562
Vinsert
p54841
I32
VMethodInvocation
p54842
tp54843
I4
s(g272
I42
g273
Vinsert
p54844
I27
VInfixExpression: +
p54845
tp54846
I2
s(g9344
I42
g9345
Vinsert
p54847
I42
VSimpleName: match
p54848
tp54849
I1
s(g14392
I42
g14393
Vinsert
p54850
I27
VInfixExpression: +
p54851
tp54852
I1
s(g2978
I42
g2979
Vinsert
p54853
I42
VSimpleName: addStep
p54854
tp54855
I1
s(g30298
I42
g30299
Vinsert
p54856
I42
VSimpleName: getSize
p54857
tp54858
I1
s(g4534
I42
g4535
Vinsert
p54859
I38
VPrefixExpression: -
p54860
tp54861
I2
s(g12782
I42
g12783
Vinsert
p54862
I14
VClassInstanceCreation
p54863
tp54864
I1
s(g12809
I42
g12810
Vinsert
p54865
I43
VSimpleType: ByteArrayInputStream
p54866
tp54867
I1
s(g1493
I42
g1494
Vinsert
p54868
I42
VSimpleName: throwable
p54869
tp54870
I5
s(g17557
I42
g17558
Vinsert
p54871
I45
VStringLiteral: "Mock created"
p54872
tp54873
I3
s(g2467
I42
g2468
Vinsert
p54874
I14
VClassInstanceCreation
p54875
tp54876
I2
s(g22617
I42
g22618
Vinsert
p54877
I43
VSimpleType: Type
p54878
tp54879
I1
s(g38889
I42
g38890
Vinsert
p54880
I42
VSimpleName: size
p54881
tp54882
I1
s(g5466
I42
g5467
Vinsert
p54883
I66
VTextElement: This is useful for writing assertions for exception messages that contain line numbers
p54884
tp54885
I1
s(g5133
I42
g5134
Vinsert
p54886
I42
VSimpleName: type
p54887
tp54888
I1
s(g6796
I42
g6797
Vinsert
p54889
I43
VSimpleType: org.mockito.internal.creation.instance.InstantiationException
p54890
tp54891
I1
s(g12726
I42
g12727
Vinsert
p54892
I31
VMethodDeclaration
p54893
tp54894
I1
s(g2118
I42
g2119
Vinsert
p54895
I42
VSimpleName: Float
p54896
tp54897
I2
s(g2881
I42
g2882
Vinsert
p54898
I27
VInfixExpression: &&
p54899
tp54900
I1
s(g3199
I42
g3200
Vinsert
p54901
I42
VSimpleName: soFar
p54902
tp54903
I2
s(g1848
I42
g1849
Vinsert
p54904
I42
VSimpleName: r
p54905
tp54906
I1
s(g2190
I42
g2191
Vinsert
p54907
I43
VSimpleType: Object
p54908
tp54909
I5
s(g3896
I42
g3897
Vinsert
p54910
I32
VMethodInvocation
p54911
tp54912
I4
s(g7572
I42
g7573
Vinsert
p54913
I42
VSimpleName: Class
p54914
tp54915
I1
s(g2738
I42
g2739
Vinsert
p54916
I42
VSimpleName: isAccessible
p54917
tp54918
I1
s(g11738
I42
g11739
Vinsert
p54919
I85
VDimension
p54920
tp54921
I1
s(g2606
I42
g2607
Vinsert
p54922
I43
VSimpleType: OnMethod
p54923
tp54924
I1
s(g2369
I42
g2370
Vinsert
p54925
I32
VMethodInvocation
p54926
tp54927
I20
s(g732
I42
g733
Vinsert
p54928
I42
VSimpleName: equals
p54929
tp54930
I3
s(g3699
I42
g3700
Vinsert
p54931
I44
VSingleVariableDeclaration
p54932
tp54933
I1
s(g5961
I42
g5962
Vinsert
p54934
I83
VModifier: final
p54935
tp54936
I1
s(g20357
I42
g20358
Vinsert
p54937
I42
VSimpleName: MockitoAssertionError
p54938
tp54939
I2
s(g395
I42
g396
Vinsert
p54940
I41
VReturnStatement
p54941
tp54942
I1
s(g1269
I42
g1270
Vinsert
p54943
I42
VSimpleName: UnusedStubbings
p54944
tp54945
I1
s(g7859
I42
g7860
Vinsert
p54946
I21
VExpressionStatement
p54947
tp54948
I1
s(g2631
I42
g2632
Vinsert
p54949
I61
VWhileStatement
p54950
tp54951
I1
s(g4968
I42
g4969
Vinsert
p54952
I42
VSimpleName: serialVersionUID
p54953
tp54954
I1
s(g31
I42
g32
Vinsert
p54955
I32
VMethodInvocation
p54956
tp54957
I19
s(g1563
I42
g1564
Vinsert
p54958
I31
VMethodDeclaration
p54959
tp54960
I1
s(g5398
I42
g5399
Vinsert
p54961
I78
VMarkerAnnotation
p54962
tp54963
I1
s(g5300
I42
g5301
Vinsert
p54964
I42
VSimpleName: ExceptionFactory
p54965
tp54966
I1
s(g10507
I42
g10508
Vinsert
p54967
I42
VSimpleName: arguments
p54968
tp54969
I1
s(g911
I42
g912
Vinsert
p54970
I78
VMarkerAnnotation
p54971
tp54972
I2
s(g1614
I42
g1615
Vinsert
p54973
I42
VSimpleName: addListener
p54974
tp54975
I1
s(g1069
I42
g1070
Vinsert
p54976
I42
VSimpleName: answer
p54977
tp54978
I2
s(g4441
I42
g4442
Vinsert
p54979
I42
VSimpleName: delegate
p54980
tp54981
I1
s(g8862
I42
g8863
Vinsert
p54982
I39
VPrimitiveType: char
p54983
tp54984
I1
s(g22136
I42
g22137
Vinsert
p54985
I40
VQualifiedName: org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter
p54986
tp54987
I1
s(g8372
I42
g8373
Vinsert
p54988
I42
VSimpleName: Equals
p54989
tp54990
I1
s(g12574
I42
g12575
Vinsert
p54991
I42
VSimpleName: Override
p54992
tp54993
I1
s(g3904
I42
g3905
Vinsert
p54994
I11
VCastExpression
p54995
tp54996
I1
s(g7633
I42
g7634
Vinsert
p54997
I8
VBlock
p54998
tp54999
I1
s(g742
I42
g743
Vinsert
p55000
I43
VSimpleType: Invocation
p55001
tp55002
I3
s(g5768
I42
g5769
Vinsert
p55003
I43
VSimpleType: InvocationOnMock
p55004
tp55005
I1
s(g322
I42
g323
Vinsert
p55006
I42
VSimpleName: delegatesTo
p55007
tp55008
I1
s(g6786
I42
g6787
Vinsert
p55009
I32
VMethodInvocation
p55010
tp55011
I5
s(g2281
I42
g2282
Vinsert
p55012
I42
VSimpleName: copy
p55013
tp55014
I1
s(g2374
I42
g2375
Vinsert
p55015
I42
VSimpleName: matches
p55016
tp55017
I1
s(g37030
I42
g37031
Vinsert
p55018
I42
VSimpleName: List
p55019
tp55020
I1
s(g1739
I42
g1740
Vinsert
p55021
I60
VVariableDeclarationStatement
p55022
tp55023
I1
s(g876
I42
g877
Vinsert
p55024
I42
VSimpleName: matchesActualCount
p55025
tp55026
I1
s(g6143
I42
g6144
Vinsert
p55027
I43
VSimpleType: ExpectedInvocation
p55028
tp55029
I1
s(g4709
I42
g4710
Vinsert
p55030
I83
VModifier: public
p55031
tp55032
I3
s(g12804
I42
g12805
Vinsert
p55033
I21
VExpressionStatement
p55034
tp55035
I1
s(g1449
I42
g1450
Vinsert
p55036
I42
VSimpleName: capture
p55037
tp55038
I1
s(g3851
I42
g3852
Vinsert
p55039
I42
VSimpleName: starter
p55040
tp55041
I2
s(g15534
I42
g15535
Vinsert
p55042
I42
VSimpleName: Class
p55043
tp55044
I2
s(g129
I42
g130
Vinsert
p55045
I43
VSimpleType: Matcher
p55046
tp55047
I1
s(g3242
I42
g3243
Vinsert
p55048
I43
VSimpleType: ClassVisitor
p55049
tp55050
I1
s(g518
I42
g519
Vinsert
p55051
I83
VModifier: public
p55052
tp55053
I4
s(g8401
I42
g8402
Vinsert
p55054
I42
VSimpleName: mockingDetails
p55055
tp55056
I3
s(g14928
I42
g14929
Vinsert
p55057
I42
VSimpleName: MockSettingsImpl
p55058
tp55059
I2
s(g8103
I42
g8104
Vinsert
p55060
I42
VSimpleName: before
p55061
tp55062
I2
s(g17500
I42
g17501
Vinsert
p55063
I21
VExpressionStatement
p55064
tp55065
I1
s(g16269
I42
g16270
Vinsert
p55066
I21
VExpressionStatement
p55067
tp55068
I1
s(g5712
I42
g5713
Vinsert
p55069
I42
VSimpleName: typeParameters
p55070
tp55071
I1
s(g3036
I42
g3037
Vinsert
p55072
I41
VReturnStatement
p55073
tp55074
I2
s(g2205
I42
g2206
Vinsert
p55075
I32
VMethodInvocation
p55076
tp55077
I4
s(g17478
I42
g17479
Vinsert
p55078
I9
VBooleanLiteral: true
p55079
tp55080
I2
s(g9229
I42
g9230
Vinsert
p55081
I60
VVariableDeclarationStatement
p55082
tp55083
I2
s(g7572
I42
g7573
Vinsert
p55084
I42
VSimpleName: method
p55085
tp55086
I5
s(g16907
I42
g16908
Vinsert
p55087
I42
VSimpleName: newPos
p55088
tp55089
I1
s(g8889
I42
g8890
Vinsert
p55090
I32
VMethodInvocation
p55091
tp55092
I5
s(g8862
I42
g8863
Vinsert
p55093
I61
VWhileStatement
p55094
tp55095
I1
s(Vinsert
p55096
I42
VSimpleName: getSuperclass
p55097
Vinsert
p55098
I42
VSimpleName: scan
p55099
tp55100
I1
s(g5201
I42
g5202
Vinsert
p55101
I83
VModifier: public
p55102
tp55103
I1
s(g49049
I42
g49050
Vinsert
p55104
I27
VInfixExpression: ||
p55105
tp55106
I1
s(g7752
I42
g7753
Vinsert
p55107
I8
VBlock
p55108
tp55109
I1
s(g13680
I42
g13681
Vinsert
p55110
I39
VPrimitiveType: boolean
p55111
tp55112
I2
s(g1863
I42
g1864
Vinsert
p55113
I11
VCastExpression
p55114
tp55115
I1
s(g35047
I42
g35048
Vinsert
p55116
I45
VStringLiteral: "foo"
p55117
tp55118
I2
s(g23727
I42
g23728
Vinsert
p55119
I44
VSingleVariableDeclaration
p55120
tp55121
I1
s(g3725
I42
g3726
Vinsert
p55122
I32
VMethodInvocation
p55123
tp55124
I1
s(g5393
I42
g5394
Vinsert
p55125
I60
VVariableDeclarationStatement
p55126
tp55127
I7
s(g11263
I42
g11264
Vinsert
p55128
I7
VAssignment: =
p55129
tp55130
I1
s(g7888
I42
g7889
Vinsert
p55131
I42
VSimpleName: mode
p55132
tp55133
I2
s(g10762
I42
g10763
Vinsert
p55134
I42
VSimpleName: assertThat
p55135
tp55136
I3
s(g7195
I42
g7196
Vinsert
p55137
I43
VSimpleType: AtomicInteger
p55138
tp55139
I2
s(g11314
I42
g11315
Vinsert
p55140
I42
VSimpleName: isolatedClassLoader
p55141
tp55142
I1
s(g6093
I42
g6094
Vinsert
p55143
I66
VTextElement: that is being used to generate a class in the current thread.
p55144
tp55145
I1
s(g7441
I42
g7442
Vinsert
p55146
I43
VSimpleType: Description
p55147
tp55148
I1
s(g2271
I42
g2272
Vinsert
p55149
I42
VSimpleName: DEFAULT_STACK_TRACE_CLEANER_PROVIDER_CLASS
p55150
tp55151
I1
s(g6614
I42
g6615
Vinsert
p55152
I41
VReturnStatement
p55153
tp55154
I1
s(g7366
I42
g7367
Vinsert
p55155
I21
VExpressionStatement
p55156
tp55157
I1
s(g4497
I42
g4498
Vinsert
p55158
I59
VVariableDeclarationFragment
p55159
tp55160
I3
s(g6796
I42
g6797
Vinsert
p55161
I43
VSimpleType: MockitoException
p55162
tp55163
I4
s(g2031
I42
g2032
Vinsert
p55164
I40
VQualifiedName: Opcodes.ACC_ABSTRACT
p55165
tp55166
I1
s(g3219
I42
g3220
Vinsert
p55167
I42
VSimpleName: MockitoException
p55168
tp55169
I1
s(g1204
I42
g1205
Vinsert
p55170
I39
VPrimitiveType: long
p55171
tp55172
I1
s(g7313
I42
g7314
Vinsert
p55173
I32
VMethodInvocation
p55174
tp55175
I1
s(g9870
I42
g9871
Vinsert
p55176
I42
VSimpleName: string
p55177
tp55178
I1
s(g8205
I42
g8206
Vinsert
p55179
I43
VSimpleType: Throwable
p55180
tp55181
I6
s(g4163
I42
g4164
Vinsert
p55182
I8
VBlock
p55183
tp55184
I2
s(g11514
I42
g11515
Vinsert
p55185
I42
VSimpleName: mockedList
p55186
tp55187
I2
s(g9870
I42
g9871
Vinsert
p55188
I39
VPrimitiveType: int
p55189
tp55190
I2
s(g8762
I42
g8763
Vinsert
p55191
I42
VSimpleName: Object
p55192
tp55193
I1
s(g27029
I42
g27030
Vinsert
p55194
I42
VSimpleName: simpleMethod
p55195
tp55196
I1
s(g1627
I42
g1628
Vinsert
p55197
I43
VSimpleType: DelayedExecution
p55198
tp55199
I2
s(g7577
I42
g7578
Vinsert
p55200
I43
VSimpleType: ArrayList
p55201
tp55202
I2
s(g8841
I42
g8842
Vinsert
p55203
I42
VSimpleName: c
p55204
tp55205
I1
s(g5609
I42
g5610
Vinsert
p55206
I65
VTagElement: @return
p55207
tp55208
I2
s(g6744
I42
g6745
Vinsert
p55209
I42
VSimpleName: T
p55210
tp55211
I2
s(g1457
I42
g1458
Vinsert
p55212
I43
VSimpleType: ThrowsException
p55213
tp55214
I1
s(g6882
I42
g6883
Vinsert
p55215
I32
VMethodInvocation
p55216
tp55217
I1
s(g533
I42
g534
Vinsert
p55218
I42
VSimpleName: next
p55219
tp55220
I1
s(g12553
I42
g12554
Vinsert
p55221
I43
VSimpleType: Integer
p55222
tp55223
I1
s(g7867
I42
g7868
Vinsert
p55224
I45
VStringLiteral: "Expected the logger to be empty but it has:\u005cn"
p55225
tp55226
I1
s(g74
I42
g75
Vinsert
p55227
I42
VSimpleName: nextPageUrl
p55228
tp55229
I1
s(g1954
I42
g1955
Vinsert
p55230
I42
VSimpleName: isSpy
p55231
tp55232
I1
s(g2531
I42
g2532
Vinsert
p55233
I83
VModifier: public
p55234
tp55235
I1
s(g14483
I42
g14484
Vinsert
p55236
I42
VSimpleName: shouldVerificationWorkWithArgumentMatchersInNestedCalls
p55237
tp55238
I1
s(g10992
I42
g10993
Vinsert
p55239
I9
VBooleanLiteral: true
p55240
tp55241
I1
s(g15053
I42
g15054
Vinsert
p55242
I59
VVariableDeclarationFragment
p55243
tp55244
I1
s(g12245
I42
g12246
Vinsert
p55245
I32
VMethodInvocation
p55246
tp55247
I6
s(g3136
I42
g3137
Vinsert
p55248
I60
VVariableDeclarationStatement
p55249
tp55250
I14
s(g11177
I42
g11178
Vinsert
p55251
I42
VSimpleName: Mockito
p55252
tp55253
I2
s(g7785
I42
g7786
Vinsert
p55254
I42
VSimpleName: getParameterTypes
p55255
tp55256
I1
s(g5961
I42
g5962
Vinsert
p55257
I43
VSimpleType: VerificationOverTimeImpl
p55258
tp55259
I2
s(g322
I42
g323
Vinsert
p55260
I42
VSimpleName: String
p55261
tp55262
I1
s(g8184
I42
g8185
Vinsert
p55263
I21
VExpressionStatement
p55264
tp55265
I3
s(g1477
I42
g1478
Vinsert
p55266
I42
VSimpleName: List
p55267
tp55268
I1
s(g20722
I42
g20723
Vinsert
p55269
I21
VExpressionStatement
p55270
tp55271
I2
s(g936
I42
g937
Vinsert
p55272
I42
VSimpleName: MethodVisitor
p55273
tp55274
I1
s(g16
I42
g17
Vinsert
p55275
I45
VStringLiteral: "user.name"
p55276
tp55277
I1
s(g6421
I42
g6422
Vinsert
p55278
I43
VSimpleType: InvocationsMarker
p55279
tp55280
I2
s(g1049
I42
g1050
Vinsert
p55281
I45
VStringLiteral: "You can upgrade your JUnit version or write your own Runner (please consider contributing your runner to the Mockito community).\u005cn"
p55282
tp55283
I1
s(g3170
I42
g3171
Vinsert
p55284
I14
VClassInstanceCreation
p55285
tp55286
I1
s(g2485
I42
g2486
Vinsert
p55287
I74
VParameterizedType: List<Invocation>
p55288
tp55289
I1
s(g2839
I42
g2840
Vinsert
p55290
I59
VVariableDeclarationFragment
p55291
tp55292
I1
s(g10470
I42
g10471
Vinsert
p55293
I42
VSimpleName: ReturnsVoid
p55294
tp55295
I1
s(g17511
I42
g17512
Vinsert
p55296
I42
VSimpleName: SmartMock
p55297
tp55298
I1
s(g8604
I42
g8605
Vinsert
p55299
I57
VTypeLiteral
p55300
tp55301
I2
s(g8483
I42
g8484
Vinsert
p55302
I42
VSimpleName: mock
p55303
tp55304
I2
s(g4696
I42
g4697
Vinsert
p55305
I33
VNullLiteral
p55306
tp55307
I1
s(g7966
I42
g7967
Vinsert
p55308
I32
VMethodInvocation
p55309
tp55310
I2
s(g11897
I42
g11898
Vinsert
p55311
I42
VSimpleName: traceElements
p55312
tp55313
I1
s(g433
I42
g434
Vinsert
p55314
I43
VSimpleType: Exception
p55315
tp55316
I4
s(g1518
I42
g1519
Vinsert
p55317
I11
VCastExpression
p55318
tp55319
I2
s(g6841
I42
g6842
Vinsert
p55320
I42
VSimpleName: chunks
p55321
tp55322
I1
s(g2095
I42
g2096
Vinsert
p55323
I60
VVariableDeclarationStatement
p55324
tp55325
I1
s(g16579
I42
g16580
Vinsert
p55326
I8
VBlock
p55327
tp55328
I1
s(g5169
I42
g5170
Vinsert
p55329
I59
VVariableDeclarationFragment
p55330
tp55331
I1
s(g3068
I42
g3069
Vinsert
p55332
I16
VConditionalExpression
p55333
tp55334
I1
s(g18607
I42
g18608
Vinsert
p55335
I42
VSimpleName: constructorMockableParamsSize
p55336
tp55337
I1
s(g7371
I42
g7372
Vinsert
p55338
I21
VExpressionStatement
p55339
tp55340
I1
s(g1337
I42
g1338
Vinsert
p55341
I32
VMethodInvocation
p55342
tp55343
I9
s(g463
I42
g464
Vinsert
p55344
I43
VSimpleType: MethodVisitor
p55345
tp55346
I1
s(g2642
I42
g2643
Vinsert
p55347
I42
VSimpleName: set
p55348
tp55349
I1
s(g9666
I42
g9667
Vinsert
p55350
I42
VSimpleName: to
p55351
tp55352
I1
s(g2162
I42
g2163
Vinsert
p55353
I21
VExpressionStatement
p55354
tp55355
I1
s(g9560
I42
g9561
Vinsert
p55356
I8
VBlock
p55357
tp55358
I1
s(g16429
I42
g16430
Vinsert
p55359
I42
VSimpleName: captureArgumentsFrom
p55360
tp55361
I1
s(g10257
I42
g10258
Vinsert
p55362
I42
VSimpleName: no_warning_for_stubbing_arg_mismatch_on_failure
p55363
tp55364
I1
s(g1780
I42
g1781
Vinsert
p55365
I42
VSimpleName: Exception
p55366
tp55367
I1
s(g129
I42
g130
Vinsert
p55368
I42
VSimpleName: Matcher
p55369
tp55370
I1
s(g8439
I42
g8440
Vinsert
p55371
I42
VSimpleName: verify
p55372
tp55373
I1
s(g2770
I42
g2771
Vinsert
p55374
I40
VQualifiedName: mocks.length
p55375
tp55376
I1
s(g9560
I42
g9561
Vinsert
p55377
I42
VSimpleName: Double
p55378
tp55379
I1
s(g30167
I42
g30168
Vinsert
p55380
I43
VSimpleType: ListSet
p55381
tp55382
I1
s(g5512
I42
g5513
Vinsert
p55383
I42
VSimpleName: recordAsyncCall
p55384
tp55385
I1
s(g3802
I42
g3803
Vinsert
p55386
I45
VStringLiteral: "foo"
p55387
tp55388
I1
s(g1934
I42
g1935
Vinsert
p55389
I42
VSimpleName: mockTypeOf
p55390
tp55391
I1
s(g3209
I42
g3210
Vinsert
p55392
I42
VSimpleName: MockingDetails
p55393
tp55394
I2
s(g1528
I42
g1529
Vinsert
p55395
I8
VBlock
p55396
tp55397
I12
s(Vinsert
p55398
I42
VSimpleName: simpleMethod
p55399
Vinsert
p55400
I34
VNumberLiteral: 9191
p55401
tp55402
I1
s(Vinsert
p55403
I42
VSimpleName: extraInterfaces
p55404
Vinsert
p55405
I42
VSimpleName: shouldScreamWhenNonInterfacePassed
p55406
tp55407
I2
s(g1765
I42
g1766
Vinsert
p55408
I38
VPrefixExpression: !
p55409
tp55410
I9
s(g9884
I42
g9885
Vinsert
p55411
I42
VSimpleName: stubber
p55412
tp55413
I2
s(g3326
I42
g3327
Vinsert
p55414
I31
VMethodDeclaration
p55415
tp55416
I1
s(g1287
I42
g1288
Vinsert
p55417
I43
VSimpleType: MockingStartedListener
p55418
tp55419
I2
s(g7825
I42
g7826
Vinsert
p55420
I54
VTryStatement
p55421
tp55422
I1
s(g15053
I42
g15054
Vinsert
p55423
I32
VMethodInvocation
p55424
tp55425
I1
s(g12715
I42
g12716
Vinsert
p55426
I57
VTypeLiteral
p55427
tp55428
I1
s(g2403
I42
g2404
Vinsert
p55429
I45
VStringLiteral: "everything was already verified"
p55430
tp55431
I1
s(g7292
I42
g7293
Vinsert
p55432
I42
VSimpleName: mode
p55433
tp55434
I1
s(g8778
I42
g8779
Vinsert
p55435
I42
VSimpleName: canImposterise
p55436
tp55437
I1
s(g732
I42
g733
Vinsert
p55438
I60
VVariableDeclarationStatement
p55439
tp55440
I5
s(g6914
I42
g6915
Vinsert
p55441
I74
VParameterizedType: ArgumentMatcher<?>
p55442
tp55443
I2
s(g2152
I42
g2153
Vinsert
p55444
I42
VSimpleName: myDefaultReturnValues
p55445
tp55446
I1
s(g6013
I42
g6014
Vinsert
p55447
I83
VModifier: public
p55448
tp55449
I3
s(g916
I42
g917
Vinsert
p55450
I32
VMethodInvocation
p55451
tp55452
I2
s(g6260
I42
g6261
Vinsert
p55453
I42
VSimpleName: finder
p55454
tp55455
I1
s(g3468
I42
g3469
Vinsert
p55456
I43
VSimpleType: Class
p55457
tp55458
I2
s(g6446
I42
g6447
Vinsert
p55459
I42
VSimpleName: mock
p55460
tp55461
I12
s(g8504
I42
g8505
Vinsert
p55462
I27
VInfixExpression: +
p55463
tp55464
I1
s(g6476
I42
g6477
Vinsert
p55465
I42
VSimpleName: MockScanner
p55466
tp55467
I1
s(g23840
I42
g23841
Vinsert
p55468
I42
VSimpleName: barMock
p55469
tp55470
I1
s(g10234
I42
g10235
Vinsert
p55471
I12
VCatchClause
p55472
tp55473
I3
s(g4848
I42
g4849
Vinsert
p55474
I42
VSimpleName: interact_with_parent_mock
p55475
tp55476
I1
s(g4704
I42
g4705
Vinsert
p55477
I42
VSimpleName: PrintSettings
p55478
tp55479
I1
s(g6069
I42
g6070
Vinsert
p55480
I43
VSimpleType: SomeClass
p55481
tp55482
I1
s(g2095
I42
g2096
Vinsert
p55483
I42
VSimpleName: UUID
p55484
tp55485
I1
s(g4585
I42
g4586
Vinsert
p55486
I83
VModifier: final
p55487
tp55488
I2
s(g15719
I42
g15720
Vinsert
p55489
I42
VSimpleName: T
p55490
tp55491
I1
s(g10507
I42
g10508
Vinsert
p55492
I43
VSimpleType: Object
p55493
tp55494
I1
s(g3011
I42
g3012
Vinsert
p55495
I39
VPrimitiveType: int
p55496
tp55497
I1
s(g6598
I42
g6599
Vinsert
p55498
I21
VExpressionStatement
p55499
tp55500
I1
s(g4539
I42
g4540
Vinsert
p55501
I32
VMethodInvocation
p55502
tp55503
I3
s(g4133
I42
g4134
Vinsert
p55504
I43
VSimpleType: NoMoreInteractions
p55505
tp55506
I1
s(g9147
I42
g9148
Vinsert
p55507
I45
VStringLiteral: "0 times"
p55508
tp55509
I1
s(g15219
I42
g15220
Vinsert
p55510
I43
VSimpleType: Exception
p55511
tp55512
I1
s(g7143
I42
g7144
Vinsert
p55513
I45
VStringLiteral: "Unable to create mock instance of '"
p55514
tp55515
I1
s(g1785
I42
g1786
Vinsert
p55516
I42
VSimpleName: iMethods
p55517
tp55518
I1
s(g443
I42
g444
Vinsert
p55519
I36
VParenthesizedExpression
p55520
tp55521
I1
s(g2621
I42
g2622
Vinsert
p55522
I9
VBooleanLiteral: false
p55523
tp55524
I2
s(g3031
I42
g3032
Vinsert
p55525
I42
VSimpleName: initMocks
p55526
tp55527
I1
s(g3219
I42
g3220
Vinsert
p55528
I43
VSimpleType: LocalizedMatcher
p55529
tp55530
I1
s(g681
I42
g682
Vinsert
p55531
I42
VSimpleName: Class
p55532
tp55533
I1
s(g5439
I42
g5440
Vinsert
p55534
I42
VSimpleName: String
p55535
tp55536
I2
s(g1259
I42
g1260
Vinsert
p55537
I42
VSimpleName: asList
p55538
tp55539
I1
s(g13053
I42
g13054
Vinsert
p55540
I57
VTypeLiteral
p55541
tp55542
I1
s(g503
I42
g504
Vinsert
p55543
I52
VThisExpression
p55544
tp55545
I2
s(g1790
I42
g1791
Vinsert
p55546
I42
VSimpleName: createResume
p55547
tp55548
I1
s(g10311
I42
g10312
Vinsert
p55549
I8
VBlock
p55550
tp55551
I2
s(g2621
I42
g2622
Vinsert
p55552
I42
VSimpleName: MatcherToString
p55553
tp55554
I1
s(g1967
I42
g1968
Vinsert
p55555
I42
VSimpleName: registeredInvocations
p55556
tp55557
I1
s(g5821
I42
g5822
Vinsert
p55558
I42
VSimpleName: LinkedList
p55559
tp55560
I1
s(g846
I42
g847
Vinsert
p55561
I42
VSimpleName: InvocationBuilder
p55562
tp55563
I21
s(g2026
I42
g2027
Vinsert
p55564
I9
VBooleanLiteral: true
p55565
tp55566
I1
s(g2929
I42
g2930
Vinsert
p55567
I42
VSimpleName: Test
p55568
tp55569
I1
s(g8604
I42
g8605
Vinsert
p55570
I42
VSimpleName: assertTrue
p55571
tp55572
I2
s(g30184
I42
g30185
Vinsert
p55573
I27
VInfixExpression: &&
p55574
tp55575
I2
s(g28810
I42
g28811
Vinsert
p55576
I42
VSimpleName: isEmpty
p55577
tp55578
I1
s(g2667
I42
g2668
Vinsert
p55579
I52
VThisExpression
p55580
tp55581
I1
s(g8329
I42
g8330
Vinsert
p55582
I42
VSimpleName: provider
p55583
tp55584
I2
s(g6815
I42
g6816
Vinsert
p55585
I39
VPrimitiveType: void
p55586
tp55587
I1
s(g1760
I42
g1761
Vinsert
p55588
I57
VTypeLiteral
p55589
tp55590
I3
s(g8131
I42
g8132
Vinsert
p55591
I42
VSimpleName: thenReturn
p55592
tp55593
I1
s(g12777
I42
g12778
Vinsert
p55594
I22
VFieldAccess
p55595
tp55596
I1
s(g3919
I42
g3920
Vinsert
p55597
I14
VClassInstanceCreation
p55598
tp55599
I1
s(g12715
I42
g12716
Vinsert
p55600
I59
VVariableDeclarationFragment
p55601
tp55602
I7
s(g699
I42
g700
Vinsert
p55603
I42
VSimpleName: MockitoLogger
p55604
tp55605
I1
s(g2326
I42
g2327
Vinsert
p55606
I33
VNullLiteral
p55607
tp55608
I1
s(g8493
I42
g8494
Vinsert
p55609
I40
VQualifiedName: org.mockito.internal.configuration.GlobalConfiguration
p55610
tp55611
I1
s(g24930
I42
g24931
Vinsert
p55612
I45
VStringLiteral: ""
p55613
tp55614
I3
s(g2908
I42
g2909
Vinsert
p55615
I42
VSimpleName: improvements
p55616
tp55617
I1
s(g1144
I42
g1145
Vinsert
p55618
I42
VSimpleName: c
p55619
tp55620
I1
s(g2296
I42
g2297
Vinsert
p55621
I42
VSimpleName: Override
p55622
tp55623
I2
s(g16189
I42
g16190
Vinsert
p55624
I45
VStringLiteral: "foo"
p55625
tp55626
I1
s(g14868
I42
g14869
Vinsert
p55627
I27
VInfixExpression: +
p55628
tp55629
I1
s(g19383
I42
g19384
Vinsert
p55630
I43
VSimpleType: Argument
p55631
tp55632
I2
s(g4158
I42
g4159
Vinsert
p55633
I42
VSimpleName: expected
p55634
tp55635
I1
s(g184
I42
g185
Vinsert
p55636
I65
VTagElement: @return
p55637
tp55638
I1
s(g20230
I42
g20231
Vinsert
p55639
I42
VSimpleName: fromOrgMockito
p55640
tp55641
I1
s(g3919
I42
g3920
Vinsert
p55642
I8
VBlock
p55643
tp55644
I1
s(g9408
I42
g9409
Vinsert
p55645
I42
VSimpleName: filter
p55646
tp55647
I1
s(g2439
I42
g2440
Vinsert
p55648
I43
VSimpleType: MockSettings
p55649
tp55650
I1
s(g6103
I42
g6104
Vinsert
p55651
I31
VMethodDeclaration
p55652
tp55653
I1
s(g23663
I42
g23664
Vinsert
p55654
I43
VSimpleType: String
p55655
tp55656
I2
s(g144
I42
g145
Vinsert
p55657
I32
VMethodInvocation
p55658
tp55659
I1
s(g7526
I42
g7527
Vinsert
p55660
I21
VExpressionStatement
p55661
tp55662
I1
s(g15147
I42
g15148
Vinsert
p55663
I42
VSimpleName: WarningsPrinter
p55664
tp55665
I1
s(g6339
I42
g6340
Vinsert
p55666
I43
VSimpleType: Exception
p55667
tp55668
I1
s(g3214
I42
g3215
Vinsert
p55669
I83
VModifier: public
p55670
tp55671
I1
s(g10672
I42
g10673
Vinsert
p55672
I8
VBlock
p55673
tp55674
I5
s(g7213
I42
g7214
Vinsert
p55675
I21
VExpressionStatement
p55676
tp55677
I3
s(g996
I42
g997
Vinsert
p55678
I42
VSimpleName: mockingStarted
p55679
tp55680
I1
s(g5950
I42
g5951
Vinsert
p55681
I43
VSimpleType: org.mockito.MockitoAnnotations.Mock
p55682
tp55683
I1
s(g13950
I42
g13951
Vinsert
p55684
I42
VSimpleName: MockHandler
p55685
tp55686
I2
s(g139
I42
g140
Vinsert
p55687
I42
VSimpleName: m
p55688
tp55689
I1
s(g4295
I42
g4296
Vinsert
p55690
I42
VSimpleName: Foo
p55691
tp55692
I1
s(g38471
I42
g38472
Vinsert
p55693
I45
VStringLiteral: "Sub says: Hello"
p55694
tp55695
I1
s(g16348
I42
g16349
Vinsert
p55696
I42
VSimpleName: doReturn
p55697
tp55698
I4
s(g14341
I42
g14342
Vinsert
p55699
I43
VSimpleType: MyObject
p55700
tp55701
I2
s(g3797
I42
g3798
Vinsert
p55702
I26
VImportDeclaration
p55703
tp55704
I6
s(g1388
I42
g1389
Vinsert
p55705
I31
VMethodDeclaration
p55706
tp55707
I1
s(g4991
I42
g4992
Vinsert
p55708
I42
VSimpleName: when
p55709
tp55710
I2
s(g4393
I42
g4394
Vinsert
p55711
I57
VTypeLiteral
p55712
tp55713
I6
s(g19274
I42
g19275
Vinsert
p55714
I43
VSimpleType: ArrayList
p55715
tp55716
I1
s(g18556
I42
g18557
Vinsert
p55717
I83
VModifier: public
p55718
tp55719
I1
s(g2839
I42
g2840
Vinsert
p55720
I42
VSimpleName: invocationsOfSingleMock
p55721
tp55722
I1
s(g548
I42
g549
Vinsert
p55723
I76
VWildcardType: ?
p55724
tp55725
I1
s(g553
I42
g554
Vinsert
p55726
I45
VStringLiteral: "    \u005c"this is another very long string\u005c""
p55727
tp55728
I1
s(g673
I42
g674
Vinsert
p55729
I32
VMethodInvocation
p55730
tp55731
I2
s(g12108
I42
g12109
Vinsert
p55732
I42
VSimpleName: output
p55733
tp55734
I1
s(g129
I42
g130
Vinsert
p55735
I43
VSimpleType: T
p55736
tp55737
I2
s(g3303
I42
g3304
Vinsert
p55738
I33
VNullLiteral
p55739
tp55740
I1
s(g3369
I42
g3370
Vinsert
p55741
I32
VMethodInvocation
p55742
tp55743
I1
s(g7619
I42
g7620
Vinsert
p55744
I21
VExpressionStatement
p55745
tp55746
I1
s(g1019
I42
g1020
Vinsert
p55747
I42
VSimpleName: field
p55748
tp55749
I1
s(g558
I42
g559
Vinsert
p55750
I32
VMethodInvocation
p55751
tp55752
I21
s(g1543
I42
g1544
Vinsert
p55753
I42
VSimpleName: Class
p55754
tp55755
I1
s(g11
I42
g12
Vinsert
p55756
I2
VArrayAccess
p55757
tp55758
I1
s(g21977
I42
g21978
Vinsert
p55759
I43
VSimpleType: Invocation
p55760
tp55761
I2
s(Vinsert
p55762
I42
VSimpleName: getMessage
p55763
Vinsert
p55764
I45
VStringLiteral: "Cannot stub hashCode() method"
p55765
tp55766
I1
s(g681
I42
g682
Vinsert
p55767
I32
VMethodInvocation
p55768
tp55769
I1
s(g5007
I42
g5008
Vinsert
p55770
I40
VQualifiedName: fieldsFrom.length
p55771
tp55772
I1
s(g22637
I42
g22638
Vinsert
p55773
I43
VSimpleType: MockHandler
p55774
tp55775
I1
s(g7177
I42
g7178
Vinsert
p55776
I42
VSimpleName: RunnerFactory
p55777
tp55778
I8
s(g352
I42
g353
Vinsert
p55779
I32
VMethodInvocation
p55780
tp55781
I1
s(g3659
I42
g3660
Vinsert
p55782
I83
VModifier: final
p55783
tp55784
I1
s(g7258
I42
g7259
Vinsert
p55785
I42
VSimpleName: RETURNS_DEEP_STUBS
p55786
tp55787
I1
s(g13186
I42
g13187
Vinsert
p55788
I5
VArrayType: byte[]
p55789
tp55790
I1
s(g3336
I42
g3337
Vinsert
p55791
I21
VExpressionStatement
p55792
tp55793
I1
s(g5196
I42
g5197
Vinsert
p55794
I43
VSimpleType: Object
p55795
tp55796
I1
s(g1388
I42
g1389
Vinsert
p55797
I21
VExpressionStatement
p55798
tp55799
I3
s(g10572
I42
g10573
Vinsert
p55800
I43
VSimpleType: T
p55801
tp55802
I1
s(g9821
I42
g9822
Vinsert
p55803
I39
VPrimitiveType: byte
p55804
tp55805
I2
s(g7587
I42
g7588
Vinsert
p55806
I39
VPrimitiveType: void
p55807
tp55808
I1
s(g5360
I42
g5361
Vinsert
p55809
I42
VSimpleName: Invocation
p55810
tp55811
I1
s(g9789
I42
g9790
Vinsert
p55812
I43
VSimpleType: Exception
p55813
tp55814
I1
s(g4853
I42
g4854
Vinsert
p55815
I9
VBooleanLiteral: true
p55816
tp55817
I1
s(g1034
I42
g1035
Vinsert
p55818
I42
VSimpleName: result
p55819
tp55820
I1
s(g12444
I42
g12445
Vinsert
p55821
I32
VMethodInvocation
p55822
tp55823
I9
s(g19066
I42
g19067
Vinsert
p55824
I14
VClassInstanceCreation
p55825
tp55826
I2
s(g6919
I42
g6920
Vinsert
p55827
I12
VCatchClause
p55828
tp55829
I4
s(g46
I42
g47
Vinsert
p55830
I45
VStringLiteral: "test"
p55831
tp55832
I1
s(g15534
I42
g15535
Vinsert
p55833
I74
VParameterizedType: Class<?>
p55834
tp55835
I1
s(g19257
I42
g19258
Vinsert
p55836
I42
VSimpleName: Exception
p55837
tp55838
I4
s(g8329
I42
g8330
Vinsert
p55839
I43
VSimpleType: ClassProvider
p55840
tp55841
I2
s(g13798
I42
g13799
Vinsert
p55842
I42
VSimpleName: Object
p55843
tp55844
I1
s(g1054
I42
g1055
Vinsert
p55845
I57
VTypeLiteral
p55846
tp55847
I1
s(g16513
I42
g16514
Vinsert
p55848
I12
VCatchClause
p55849
tp55850
I2
s(g2162
I42
g2163
Vinsert
p55851
I45
VStringLiteral: "0"
p55852
tp55853
I1
s(g558
I42
g559
Vinsert
p55854
I42
VSimpleName: put
p55855
tp55856
I4
s(g7939
I42
g7940
Vinsert
p55857
I42
VSimpleName: actualInvocation
p55858
tp55859
I1
s(g6711
I42
g6712
Vinsert
p55860
I43
VSimpleType: GitTool
p55861
tp55862
I1
s(g6184
I42
g6185
Vinsert
p55863
I33
VNullLiteral
p55864
tp55865
I1
s(g9649
I42
g9650
Vinsert
p55866
I74
VParameterizedType: ImplementsGenericMethodOfAbstract<Number>
p55867
tp55868
I1
s(g5834
I42
g5835
Vinsert
p55869
I42
VSimpleName: SerializableMode
p55870
tp55871
I1
s(g38471
I42
g38472
Vinsert
p55872
I42
VSimpleName: Super
p55873
tp55874
I1
s(g3977
I42
g3978
Vinsert
p55875
I45
VStringLiteral: ""
p55876
tp55877
I1
s(g5169
I42
g5170
Vinsert
p55878
I43
VSimpleType: Object
p55879
tp55880
I2
s(g25519
I42
g25520
Vinsert
p55881
I42
VSimpleName: resetOngoingStubbing
p55882
tp55883
I2
s(g3792
I42
g3793
Vinsert
p55884
I42
VSimpleName: ClassLoaders
p55885
tp55886
I1
s(g2552
I42
g2553
Vinsert
p55887
I42
VSimpleName: foo
p55888
tp55889
I1
s(g4755
I42
g4756
Vinsert
p55890
I42
VSimpleName: plugins
p55891
tp55892
I1
s(g27967
I42
g27968
Vinsert
p55893
I74
VParameterizedType: List<Object>
p55894
tp55895
I1
s(g4212
I42
g4213
Vinsert
p55896
I34
VNumberLiteral: 0
p55897
tp55898
I1
s(g22800
I42
g22801
Vinsert
p55899
I37
VPostfixExpression: ++
p55900
tp55901
I1
s(g1513
I42
g1514
Vinsert
p55902
I43
VSimpleType: Object
p55903
tp55904
I1
s(g149
I42
g150
Vinsert
p55905
I43
VSimpleType: Long
p55906
tp55907
I1
s(g5752
I42
g5753
Vinsert
p55908
I42
VSimpleName: atLeastOnce
p55909
tp55910
I1
s(g18013
I42
g18014
Vinsert
p55911
I43
VSimpleType: Invocation
p55912
tp55913
I2
s(g3460
I42
g3461
Vinsert
p55914
I43
VSimpleType: Exception
p55915
tp55916
I1
s(g4934
I42
g4935
Vinsert
p55917
I42
VSimpleName: String
p55918
tp55919
I1
s(g19510
I42
g19511
Vinsert
p55920
I42
VSimpleName: Exception
p55921
tp55922
I1
s(g15654
I42
g15655
Vinsert
p55923
I74
VParameterizedType: TreeSet<Date>
p55924
tp55925
I1
s(g20652
I42
g20653
Vinsert
p55926
I34
VNumberLiteral: 1
p55927
tp55928
I1
s(g51490
I42
g51491
Vinsert
p55929
I42
VSimpleName: RunnerProvider
p55930
tp55931
I1
s(g10048
I42
g10049
Vinsert
p55932
I42
VSimpleName: test_not_annotated_by_MockitoTestNGListener_should_not_touch_annotated_fields
p55933
tp55934
I1
s(g3498
I42
g3499
Vinsert
p55935
I45
VStringLiteral: "charMethod"
p55936
tp55937
I1
s(g3807
I42
g3808
Vinsert
p55938
I83
VModifier: final
p55939
tp55940
I1
s(g385
I42
g386
Vinsert
p55941
I42
VSimpleName: info
p55942
tp55943
I1
s(g20652
I42
g20653
Vinsert
p55944
I45
VStringLiteral: "mock"
p55945
tp55946
I2
s(g3996
I42
g3997
Vinsert
p55947
I36
VParenthesizedExpression
p55948
tp55949
I1
s(g4680
I42
g4681
Vinsert
p55950
I42
VSimpleName: lastActualInvocationStackTrace
p55951
tp55952
I1
s(g7200
I42
g7201
Vinsert
p55953
I66
VTextElement:  filtered text
p55954
tp55955
I1
s(g623
I42
g624
Vinsert
p55956
I25
VIfStatement
p55957
tp55958
I1
s(g8062
I42
g8063
Vinsert
p55959
I42
VSimpleName: Local
p55960
tp55961
I1
s(g10073
I42
g10074
Vinsert
p55962
I42
VSimpleName: WantedButNotInvoked
p55963
tp55964
I1
s(g9016
I42
g9017
Vinsert
p55965
I42
VSimpleName: argument
p55966
tp55967
I1
s(g5575
I42
g5576
Vinsert
p55968
I74
VParameterizedType: Callable<Boolean>
p55969
tp55970
I1
s(g2457
I42
g2458
Vinsert
p55971
I42
VSimpleName: tickets
p55972
tp55973
I2
s(g15601
I42
g15602
Vinsert
p55974
I42
VSimpleName: warnings
p55975
tp55976
I1
s(g12449
I42
g12450
Vinsert
p55977
I42
VSimpleName: recordAsyncCall
p55978
tp55979
I1
s(g1269
I42
g1270
Vinsert
p55980
I42
VSimpleName: mock1
p55981
tp55982
I2
s(g3822
I42
g3823
Vinsert
p55983
I43
VSimpleType: NumberOfInvocationsError
p55984
tp55985
I1
s(g12444
I42
g12445
Vinsert
p55986
I42
VSimpleName: mock
p55987
tp55988
I3
s(g2434
I42
g2435
Vinsert
p55989
I42
VSimpleName: Equals
p55990
tp55991
I2
s(g4776
I42
g4777
Vinsert
p55992
I8
VBlock
p55993
tp55994
I1
s(g7292
I42
g7293
Vinsert
p55995
I42
VSimpleName: Invocation
p55996
tp55997
I1
s(g6983
I42
g6984
Vinsert
p55998
I42
VSimpleName: mock
p55999
tp56000
I1
s(g2498
I42
g2499
Vinsert
p56001
I83
VModifier: public
p56002
tp56003
I2
s(g2796
I42
g2797
Vinsert
p56004
I42
VSimpleName: intCaptor
p56005
tp56006
I1
s(g508
I42
g509
Vinsert
p56007
I42
VSimpleName: runner
p56008
tp56009
I14
s(g2439
I42
g2440
Vinsert
p56010
I21
VExpressionStatement
p56011
tp56012
I2
s(g2557
I42
g2558
Vinsert
p56013
I42
VSimpleName: add
p56014
tp56015
I4
s(g6148
I42
g6149
Vinsert
p56016
I43
VSimpleType: ListOfAnyNumbers
p56017
tp56018
I1
s(g1967
I42
g1968
Vinsert
p56019
I42
VSimpleName: mockitoStubber
p56020
tp56021
I2
s(g38387
I42
g38388
Vinsert
p56022
I43
VSimpleType: RunNotifier
p56023
tp56024
I2
s(g3126
I42
g3127
Vinsert
p56025
I42
VSimpleName: VerificationModeFactory
p56026
tp56027
I1
s(g11956
I42
g11957
Vinsert
p56028
I34
VNumberLiteral: 12
p56029
tp56030
I1
s(g13905
I42
g13906
Vinsert
p56031
I42
VSimpleName: checkForUnfinishedVerification
p56032
tp56033
I1
s(g13447
I42
g13448
Vinsert
p56034
I43
VSimpleType: String
p56035
tp56036
I1
s(g3606
I42
g3607
Vinsert
p56037
I42
VSimpleName: args
p56038
tp56039
I1
s(g6228
I42
g6229
Vinsert
p56040
I32
VMethodInvocation
p56041
tp56042
I10
s(g1403
I42
g1404
Vinsert
p56043
I42
VSimpleName: methods
p56044
tp56045
I1
s(g783
I42
g784
Vinsert
p56046
I42
VSimpleName: all
p56047
tp56048
I1
s(g2261
I42
g2262
Vinsert
p56049
I8
VBlock
p56050
tp56051
I4
s(g2876
I42
g2877
Vinsert
p56052
I42
VSimpleName: potential
p56053
tp56054
I2
s(g6008
I42
g6009
Vinsert
p56055
I42
VSimpleName: Test
p56056
tp56057
I1
s(g36419
I42
g36420
Vinsert
p56058
I42
VSimpleName: add
p56059
tp56060
I5
s(g74
I42
g75
Vinsert
p56061
I43
VSimpleType: URL
p56062
tp56063
I2
s(g1820
I42
g1821
Vinsert
p56064
I42
VSimpleName: actual
p56065
tp56066
I1
s(g1949
I42
g1950
Vinsert
p56067
I39
VPrimitiveType: void
p56068
tp56069
I2
s(g3262
I42
g3263
Vinsert
p56070
I66
VTextElement:  minimum number of invocations 
p56071
tp56072
I1
s(g6642
I42
g6643
Vinsert
p56073
I8
VBlock
p56074
tp56075
I2
s(g11844
I42
g11845
Vinsert
p56076
I42
VSimpleName: assertTrue
p56077
tp56078
I1
s(g9234
I42
g9235
Vinsert
p56079
I34
VNumberLiteral: 0
p56080
tp56081
I1
s(g10311
I42
g10312
Vinsert
p56082
I42
VSimpleName: shouldInjectMocksUsingRunner
p56083
tp56084
I2
s(g14392
I42
g14393
Vinsert
p56085
I42
VSimpleName: t
p56086
tp56087
I1
s(g8082
I42
g8083
Vinsert
p56088
I44
VSingleVariableDeclaration
p56089
tp56090
I1
s(g257
I42
g258
Vinsert
p56091
I42
VSimpleName: Integer
p56092
tp56093
I1
s(g6828
I42
g6829
Vinsert
p56094
I60
VVariableDeclarationStatement
p56095
tp56096
I3
s(g3421
I42
g3422
Vinsert
p56097
I42
VSimpleName: primitiveOrWrapperType
p56098
tp56099
I1
s(g2934
I42
g2935
Vinsert
p56100
I32
VMethodInvocation
p56101
tp56102
I8
s(g7403
I42
g7404
Vinsert
p56103
I42
VSimpleName: mv
p56104
tp56105
I2
s(g15841
I42
g15842
Vinsert
p56106
I42
VSimpleName: setter
p56107
tp56108
I2
s(g3413
I42
g3414
Vinsert
p56109
I54
VTryStatement
p56110
tp56111
I2
s(g8003
I42
g8004
Vinsert
p56112
I42
VSimpleName: marker
p56113
tp56114
I1
s(g12071
I42
g12072
Vinsert
p56115
I42
VSimpleName: value
p56116
tp56117
I3
s(g11404
I42
g11405
Vinsert
p56118
I43
VSimpleType: List
p56119
tp56120
I13
s(g6162
I42
g6163
Vinsert
p56121
I21
VExpressionStatement
p56122
tp56123
I1
s(g35047
I42
g35048
Vinsert
p56124
I42
VSimpleName: doReturn
p56125
tp56126
I2
s(g4776
I42
g4777
Vinsert
p56127
I42
VSimpleName: ExpectedInvocation
p56128
tp56129
I1
s(g3369
I42
g3370
Vinsert
p56130
I41
VReturnStatement
p56131
tp56132
I1
s(g3851
I42
g3852
Vinsert
p56133
I40
VQualifiedName: java.util.concurrent.CountDownLatch
p56134
tp56135
I1
s(g2331
I42
g2332
Vinsert
p56136
I14
VClassInstanceCreation
p56137
tp56138
I2
s(g16067
I42
g16068
Vinsert
p56139
I43
VSimpleType: RuntimeException
p56140
tp56141
I2
s(g395
I42
g396
Vinsert
p56142
I32
VMethodInvocation
p56143
tp56144
I1
s(g4755
I42
g4756
Vinsert
p56145
I21
VExpressionStatement
p56146
tp56147
I1
s(g12427
I42
g12428
Vinsert
p56148
I42
VSimpleName: type
p56149
tp56150
I4
s(g11177
I42
g11178
Vinsert
p56151
I42
VSimpleName: Throwable
p56152
tp56153
I1
s(g1939
I42
g1940
Vinsert
p56154
I21
VExpressionStatement
p56155
tp56156
I1
s(g5776
I42
g5777
Vinsert
p56157
I42
VSimpleName: t1
p56158
tp56159
I2
s(g9584
I42
g9585
Vinsert
p56160
I42
VSimpleName: Object
p56161
tp56162
I1
s(g6334
I42
g6335
Vinsert
p56163
I7
VAssignment: =
p56164
tp56165
I1
s(g6416
I42
g6417
Vinsert
p56166
I27
VInfixExpression: ==
p56167
tp56168
I1
s(g11
I42
g12
Vinsert
p56169
I37
VPostfixExpression: ++
p56170
tp56171
I1
s(g2311
I42
g2312
Vinsert
p56172
I42
VSimpleName: expected
p56173
tp56174
I2
s(g20453
I42
g20454
Vinsert
p56175
I42
VSimpleName: T
p56176
tp56177
I3
s(g3797
I42
g3798
Vinsert
p56178
I40
VQualifiedName: org.mockito.internal.configuration.ConfigurationAccess
p56179
tp56180
I3
s(g4189
I42
g4190
Vinsert
p56181
I41
VReturnStatement
p56182
tp56183
I1
s(g17860
I42
g17861
Vinsert
p56184
I42
VSimpleName: ReturnValues
p56185
tp56186
I1
s(g871
I42
g872
Vinsert
p56187
I74
VParameterizedType: HashSet<String>
p56188
tp56189
I1
s(g9483
I42
g9484
Vinsert
p56190
I43
VSimpleType: InvocationMatcher
p56191
tp56192
I1
s(g3331
I42
g3332
Vinsert
p56193
I42
VSimpleName: validateInput
p56194
tp56195
I1
s(g12769
I42
g12770
Vinsert
p56196
I42
VSimpleName: String
p56197
tp56198
I11
s(g911
I42
g912
Vinsert
p56199
I42
VSimpleName: Test
p56200
tp56201
I2
s(g11043
I42
g11044
Vinsert
p56202
I78
VMarkerAnnotation
p56203
tp56204
I1
s(g13916
I42
g13917
Vinsert
p56205
I42
VSimpleName: invocationContainer
p56206
tp56207
I1
s(g15464
I42
g15465
Vinsert
p56208
I3
VArrayCreation
p56209
tp56210
I2
s(g28590
I42
g28591
Vinsert
p56211
I42
VSimpleName: HasStackTrace
p56212
tp56213
I2
s(g3047
I42
g3048
Vinsert
p56214
I21
VExpressionStatement
p56215
tp56216
I2
s(g2085
I42
g2086
Vinsert
p56217
I42
VSimpleName: primitiveValues
p56218
tp56219
I2
s(g11926
I42
g11927
Vinsert
p56220
I45
VStringLiteral: "test.TestedClass1"
p56221
tp56222
I1
s(g39831
I42
g39832
Vinsert
p56223
I42
VSimpleName: detect
p56224
tp56225
I1
s(g6914
I42
g6915
Vinsert
p56226
I59
VVariableDeclarationFragment
p56227
tp56228
I8
s(g3991
I42
g3992
Vinsert
p56229
I42
VSimpleName: StackTraceElement
p56230
tp56231
I2
s(g16709
I42
g16710
Vinsert
p56232
I42
VSimpleName: toString
p56233
tp56234
I1
s(g5159
I42
g5160
Vinsert
p56235
I42
VSimpleName: wanted
p56236
tp56237
I2
s(g15601
I42
g15602
Vinsert
p56238
I32
VMethodInvocation
p56239
tp56240
I16
s(g2046
I42
g2047
Vinsert
p56241
I60
VVariableDeclarationStatement
p56242
tp56243
I1
s(g372
I42
g373
Vinsert
p56244
I42
VSimpleName: StubberImpl
p56245
tp56246
I1
s(g2815
I42
g2816
Vinsert
p56247
I43
VSimpleType: Or
p56248
tp56249
I1
s(Vinsert
p56250
I42
VSimpleName: simpleMethod
p56251
Vinsert
p56252
I42
VSimpleName: shouldVerifyExactNumberOfInvocationsUsingMatcher
p56253
tp56254
I1
s(g2705
I42
g2706
Vinsert
p56255
I60
VVariableDeclarationStatement
p56256
tp56257
I1
s(g9139
I42
g9140
Vinsert
p56258
I42
VSimpleName: VerificationMode
p56259
tp56260
I3
s(g9571
I42
g9572
Vinsert
p56261
I40
VQualifiedName: java.util.Arrays
p56262
tp56263
I1
s(g12536
I42
g12537
Vinsert
p56264
I43
VSimpleType: MockitoAssertionError
p56265
tp56266
I2
s(g3047
I42
g3048
Vinsert
p56267
I43
VSimpleType: LogInvocationsToStdOutListener
p56268
tp56269
I1
s(g10609
I42
g10610
Vinsert
p56270
I43
VSimpleType: Object
p56271
tp56272
I3
s(g1274
I42
g1275
Vinsert
p56273
I43
VSimpleType: T
p56274
tp56275
I1
s(g951
I42
g952
Vinsert
p56276
I32
VMethodInvocation
p56277
tp56278
I3
s(g1815
I42
g1816
Vinsert
p56279
I39
VPrimitiveType: void
p56280
tp56281
I1
s(g3170
I42
g3171
Vinsert
p56282
I42
VSimpleName: verificationMode
p56283
tp56284
I2
s(g1886
I42
g1887
Vinsert
p56285
I32
VMethodInvocation
p56286
tp56287
I2
s(g9026
I42
g9027
Vinsert
p56288
I42
VSimpleName: T
p56289
tp56290
I1
s(g8176
I42
g8177
Vinsert
p56291
I42
VSimpleName: InvocationBuilder
p56292
tp56293
I1
s(g4800
I42
g4801
Vinsert
p56294
I42
VSimpleName: MockHandler
p56295
tp56296
I1
s(g4409
I42
g4410
Vinsert
p56297
I45
VStringLiteral: "x"
p56298
tp56299
I1
s(g704
I42
g705
Vinsert
p56300
I42
VSimpleName: RunnerFactory
p56301
tp56302
I1
s(g1234
I42
g1235
Vinsert
p56303
I32
VMethodInvocation
p56304
tp56305
I10
s(g14746
I42
g14747
Vinsert
p56306
I43
VSimpleType: Object
p56307
tp56308
I1
s(g4963
I42
g4964
Vinsert
p56309
I42
VSimpleName: given
p56310
tp56311
I1
s(g10899
I42
g10900
Vinsert
p56312
I42
VSimpleName: getStackTrace
p56313
tp56314
I1
s(g10010
I42
g10011
Vinsert
p56315
I43
VSimpleType: InvocationOnMock
p56316
tp56317
I2
s(g1312
I42
g1313
Vinsert
p56318
I43
VSimpleType: Exception
p56319
tp56320
I1
s(g109
I42
g110
Vinsert
p56321
I42
VSimpleName: System
p56322
tp56323
I5
s(g583
I42
g584
Vinsert
p56324
I42
VSimpleName: mode
p56325
tp56326
I1
s(g11336
I42
g11337
Vinsert
p56327
I42
VSimpleName: fixedThreadPool
p56328
tp56329
I1
s(g26394
I42
g26395
Vinsert
p56330
I34
VNumberLiteral: 1
p56331
tp56332
I1
s(g9584
I42
g9585
Vinsert
p56333
I44
VSingleVariableDeclaration
p56334
tp56335
I1
s(g5921
I42
g5922
Vinsert
p56336
I21
VExpressionStatement
p56337
tp56338
I2
s(g1179
I42
g1180
Vinsert
p56339
I53
VThrowStatement
p56340
tp56341
I1
s(g1092
I42
g1093
Vinsert
p56342
I42
VSimpleName: context
p56343
tp56344
I1
s(g7735
I42
g7736
Vinsert
p56345
I8
VBlock
p56346
tp56347
I2
s(g2700
I42
g2701
Vinsert
p56348
I78
VMarkerAnnotation
p56349
tp56350
I1
s(g1307
I42
g1308
Vinsert
p56351
I43
VSimpleType: MockitoConfiguration
p56352
tp56353
I2
s(g2601
I42
g2602
Vinsert
p56354
I42
VSimpleName: mockSettings
p56355
tp56356
I1
s(g8200
I42
g8201
Vinsert
p56357
I42
VSimpleName: ex
p56358
tp56359
I2
s(g5794
I42
g5795
Vinsert
p56360
I42
VSimpleName: assertThat
p56361
tp56362
I1
s(g19136
I42
g19137
Vinsert
p56363
I43
VSimpleType: Object
p56364
tp56365
I3
s(g9413
I42
g9414
Vinsert
p56366
I42
VSimpleName: Exception
p56367
tp56368
I2
s(g4662
I42
g4663
Vinsert
p56369
I42
VSimpleName: ride
p56370
tp56371
I2
s(g6587
I42
g6588
Vinsert
p56372
I42
VSimpleName: o2
p56373
tp56374
I2
s(g1164
I42
g1165
Vinsert
p56375
I43
VSimpleType: MockVerificationAssertionError
p56376
tp56377
I1
s(g2390
I42
g2391
Vinsert
p56378
I32
VMethodInvocation
p56379
tp56380
I2
s(g806
I42
g807
Vinsert
p56381
I32
VMethodInvocation
p56382
tp56383
I1
s(g3856
I42
g3857
Vinsert
p56384
I42
VSimpleName: Throwable
p56385
tp56386
I3
s(g13383
I42
g13384
Vinsert
p56387
I45
VStringLiteral: "one"
p56388
tp56389
I1
s.