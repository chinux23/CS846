(dp0
(Vinsert
p1
I45
VStringLiteral: "providerMethod"
p2
tp3
I1
s(Vinsert
p4
I42
VSimpleName: SUCCESS
p5
tp6
I2
s(Vinsert
p7
I45
VStringLiteral: "testKeyCleanupWithSoftValue("
p8
tp9
I1
s(Vinsert
p10
I74
VParameterizedType: List<T>
p11
tp12
I1
s(Vinsert
p13
I42
VSimpleName: InjectorBuilder
p14
tp15
I6
s(Vinsert
p16
I42
VSimpleName: provideList
p17
tp18
I1
s(Vinsert
p19
I42
VSimpleName: Params
p20
tp21
I2
s(Vinsert
p22
I42
VSimpleName: upperBound
p23
tp24
I1
s(Vinsert
p25
I66
VTextElement:  @
p26
tp27
I1
s(Vinsert
p28
I42
VSimpleName: hashKeys
p29
tp30
I1
s(Vinsert
p31
I66
VTextElement: Gets the error messages which resulted in this exception.
p32
tp33
I1
s(Vinsert
p34
I43
VSimpleType: CircularDependencyTest
p35
tp36
I1
s(Vinsert
p37
I42
VSimpleName: runWithDefaultSource
p38
tp39
I1
s(Vinsert
p40
I42
VSimpleName: otherMatches
p41
tp42
I2
s(Vinsert
p43
I43
VSimpleType: net.sf.cglib.reflect.FastClass
p44
tp45
I1
s(Vinsert
p46
I42
VSimpleName: bindingsForType
p47
tp48
I3
s(Vinsert
p49
I42
VSimpleName: ModuleAnnotatedMethodScannerBinding
p50
tp51
I7
s(Vinsert
p52
I40
VQualifiedName: com.google.inject.multibindings.MapBinderTest
p53
tp54
I1
s(Vinsert
p55
I42
VSimpleName: ServletResponse
p56
tp57
I4
s(Vinsert
p58
I42
VSimpleName: annotations
p59
tp60
I15
s(Vinsert
p61
I43
VSimpleType: DuplicateAnnotationException
p62
tp63
I3
s(Vinsert
p64
I42
VSimpleName: DependencyEdge
p65
tp66
I1
s(Vinsert
p67
I42
VSimpleName: Lock
p68
tp69
I2
s(Vinsert
p70
I45
VStringLiteral: "\u005cn  depends on "
p71
tp72
I1
s(Vinsert
p73
I42
VSimpleName: annotated
p74
tp75
I2
s(Vinsert
p76
I74
VParameterizedType: Iterator<Binding<?>>
p77
tp78
I1
s(Vinsert
p79
I76
VWildcardType: ? super Binding<?>
p80
tp81
I1
s(Vinsert
p82
I42
VSimpleName: WrappedKey
p83
tp84
I1
s(Vinsert
p85
I43
VSimpleType: AClass
p86
tp87
I2
s(Vinsert
p88
I42
VSimpleName: testProxy
p89
tp90
I1
s(Vinsert
p91
I42
VSimpleName: toProvider
p92
tp93
I25
s(Vinsert
p94
I45
VStringLiteral: "getProvider() not supported for module bindings"
p95
tp96
I1
s(Vinsert
p97
I43
VSimpleType: IntegerProvider
p98
tp99
I1
s(Vinsert
p100
I42
VSimpleName: ClassNotFoundException
p101
tp102
I3
s(Vinsert
p103
I42
VSimpleName: getObject
p104
tp105
I1
s(Vinsert
p106
I66
VTextElement:  a 
p107
tp108
I1
s(Vinsert
p109
I74
VParameterizedType: LinkedProviderBindingImpl<?>
p110
tp111
I1
s(Vinsert
p112
I45
VStringLiteral: " "
p113
tp114
I5
s(Vinsert
p115
I27
VInfixExpression: +
p116
tp117
I83
s(Vinsert
p118
I40
VQualifiedName: possiblyOverridden.method
p119
tp120
I1
s(Vinsert
p121
I43
VSimpleType: CustomScoped
p122
tp123
I2
s(Vinsert
p124
I66
VTextElement: #testInstancesRequestingProvidersForThemselvesWithChildInjectors for examples of when this is
p125
tp126
I2
s(Vinsert
p127
I42
VSimpleName: expect
p128
tp129
I32
s(Vinsert
p130
I66
VTextElement: no listeners
p131
tp132
I1
s(Vinsert
p133
I42
VSimpleName: getMemberInjectors
p134
tp135
I1
s(Vinsert
p136
I45
VStringLiteral: "Throwing RuntimeException in AbstractModule.configure()."
p137
tp138
I1
s(Vinsert
p139
I43
VSimpleType: ConcreteAssistedWithOverride.Factory
p140
tp141
I1
s(Vinsert
p142
I42
VSimpleName: SingleMemberInjector
p143
tp144
I6
s(Vinsert
p145
I42
VSimpleName: possibleOverrides
p146
tp147
I1
s(Vinsert
p148
I74
VParameterizedType: javax.inject.Provider<V>
p149
tp150
I1
s(Vinsert
p151
I43
VSimpleType: Throwable
p152
tp153
I23
s(Vinsert
p154
I40
VQualifiedName: com.google.inject.Injector
p155
tp156
I1
s(Vinsert
p157
I43
VSimpleType: SubModuleCommand
p158
tp159
I4
s(Vinsert
p160
I42
VSimpleName: getMembersInjectorOrThrow
p161
tp162
I1
s(Vinsert
p163
I34
VNumberLiteral: 42
p164
tp165
I1
s(Vinsert
p166
I42
VSimpleName: mapbinderBinding
p167
tp168
I1
s(Vinsert
p169
I42
VSimpleName: ClassName
p170
tp171
I1
s(Vinsert
p172
I42
VSimpleName: instance
p173
tp174
I26
s(Vinsert
p175
I43
VSimpleType: ConstructorInjector
p176
tp177
I1
s(Vinsert
p178
I42
VSimpleName: randomUUID
p179
tp180
I2
s(Vinsert
p181
I42
VSimpleName: GuiceExtendsJsrAnnotated
p182
tp183
I1
s(Vinsert
p184
I74
VParameterizedType: Set<TypeConverterBinding>
p185
tp186
I1
s(Vinsert
p187
I42
VSimpleName: paths
p188
tp189
I1
s(Vinsert
p190
I5
VArrayType: StackTraceElement[]
p191
tp192
I4
s(Vinsert
p193
I43
VSimpleType: IllegalAccessException
p194
tp195
I1
s(Vinsert
p196
I42
VSimpleName: resultProvider
p197
tp198
I1
s(Vinsert
p199
I43
VSimpleType: Properties
p200
tp201
I3
s(Vinsert
p202
I42
VSimpleName: foundAnnotation
p203
tp204
I4
s(Vinsert
p205
I42
VSimpleName: EntityManager
p206
tp207
I6
s(Vinsert
p208
I43
VSimpleType: LinkedProviderBindingImpl
p209
tp210
I1
s(Vinsert
p211
I42
VSimpleName: typeVariable
p212
tp213
I2
s(Vinsert
p214
I42
VSimpleName: TestProvides
p215
tp216
I1
s(Vinsert
p217
I45
VStringLiteral: "e"
p218
tp219
I1
s(Vinsert
p220
I42
VSimpleName: config
p221
tp222
I3
s(Vinsert
p223
I42
VSimpleName: firstBinding
p224
tp225
I1
s(Vinsert
p226
I43
VSimpleType: ExposedBinding
p227
tp228
I4
s(Vinsert
p229
I83
VModifier: protected
p230
tp231
I96
s(Vinsert
p232
I45
VStringLiteral: "methodMatcher"
p233
tp234
I1
s(Vinsert
p235
I42
VSimpleName: methodProxy
p236
tp237
I1
s(Vinsert
p238
I74
VParameterizedType: Collection<Dependency<?>>
p239
tp240
I3
s(Vinsert
p241
I42
VSimpleName: barB
p242
tp243
I1
s(Vinsert
p244
I42
VSimpleName: Objects
p245
tp246
I23
s(Vinsert
p247
I43
VSimpleType: RuntimeException
p248
tp249
I11
s(Vinsert
p250
I43
VSimpleType: Matcher
p251
tp252
I4
s(Vinsert
p253
I42
VSimpleName: instanceInjectors
p254
tp255
I1
s(Vinsert
p256
I42
VSimpleName: Node
p257
tp258
I4
s(Vinsert
p259
I42
VSimpleName: JustInTime
p260
tp261
I1
s(Vinsert
p262
I42
VSimpleName: jitDisabled
p263
tp264
I4
s(Vinsert
p265
I42
VSimpleName: NO_ARGUMENTS
p266
tp267
I1
s(Vinsert
p268
I45
VStringLiteral: "name"
p269
tp270
I1
s(Vinsert
p271
I42
VSimpleName: UUID
p272
tp273
I2
s(Vinsert
p274
I43
VSimpleType: E
p275
tp276
I15
s(Vinsert
p277
I42
VSimpleName: de
p278
tp279
I1
s(Vinsert
p280
I42
VSimpleName: Multibinder
p281
tp282
I12
s(Vinsert
p283
I74
VParameterizedType: List<Parameter<?>>
p284
tp285
I3
s(Vinsert
p286
I42
VSimpleName: lockedThread
p287
tp288
I1
s(Vinsert
p289
I42
VSimpleName: BindingBuilderTest
p290
tp291
I1
s(Vinsert
p292
I42
VSimpleName: collectionOfProvidersOfEntryOfProviderMatch
p293
tp294
I1
s(Vinsert
p295
I42
VSimpleName: bindAll
p296
tp297
I1
s(Vinsert
p298
I43
VSimpleType: InjectorBuilder
p299
tp300
I5
s(Vinsert
p301
I42
VSimpleName: matches
p302
tp303
I16
s(Vinsert
p304
I42
VSimpleName: BytecodeGen
p305
tp306
I3
s(Vinsert
p307
I45
VStringLiteral: "parameterIndex=0]"
p308
tp309
I1
s(Vinsert
p310
I42
VSimpleName: getFieldType
p311
tp312
I2
s(Vinsert
p313
I55
VTypeDeclaration
p314
tp315
I8
s(Vinsert
p316
I43
VSimpleType: AtomicBoolean
p317
tp318
I2
s(Vinsert
p319
I40
VQualifiedName: javax.inject.Named
p320
tp321
I4
s(Vinsert
p322
I42
VSimpleName: invalidate
p323
tp324
I2
s(Vinsert
p325
I42
VSimpleName: param
p326
tp327
I1
s(Vinsert
p328
I45
VStringLiteral: "value"
p329
tp330
I4
s(Vinsert
p331
I42
VSimpleName: newIdentityHashSet
p332
tp333
I4
s(Vinsert
p334
I42
VSimpleName: newFastClassForMember
p335
tp336
I2
s(Vinsert
p337
I43
VSimpleType: FilterDispatcher
p338
tp339
I1
s(Vinsert
p340
I43
VSimpleType: ObjectStreamException
p341
tp342
I1
s(Vinsert
p343
I43
VSimpleType: StaticallyInjectable
p344
tp345
I1
s(Vinsert
p346
I42
VSimpleName: dependencies
p347
tp348
I14
s(Vinsert
p349
I42
VSimpleName: recursiveBinding
p350
tp351
I1
s(Vinsert
p352
I42
VSimpleName: pushSource
p353
tp354
I2
s(Vinsert
p355
I42
VSimpleName: ConstructorBinding
p356
tp357
I4
s(Vinsert
p358
I42
VSimpleName: AnnotatedElement
p359
tp360
I3
s(Vinsert
p361
I45
VStringLiteral: "}"
p362
tp363
I1
s(Vinsert
p364
I42
VSimpleName: fastClass
p365
tp366
I3
s(Vinsert
p367
I74
VParameterizedType: List<Class>
p368
tp369
I1
s(Vinsert
p370
I42
VSimpleName: getElementTypeLiteral
p371
tp372
I1
s(Vinsert
p373
I42
VSimpleName: runnable
p374
tp375
I1
s(Vinsert
p376
I42
VSimpleName: user
p377
tp378
I3
s(Vinsert
p379
I42
VSimpleName: isWorking
p380
tp381
I1
s(Vinsert
p382
I74
VParameterizedType: TypeToken<List<String>>
p383
tp384
I1
s(Vinsert
p385
I42
VSimpleName: visitToKey
p386
tp387
I3
s(Vinsert
p388
I66
VTextElement:  if the parent
p389
tp390
I1
s(Vinsert
p391
I42
VSimpleName: s
p392
tp393
I7
s(Vinsert
p394
I42
VSimpleName: BindingAnnotation
p395
tp396
I1
s(Vinsert
p397
I42
VSimpleName: boundClasses
p398
tp399
I1
s(Vinsert
p400
I74
VParameterizedType: Constructor<? extends T>
p401
tp402
I1
s(Vinsert
p403
I45
VStringLiteral: "foo2"
p404
tp405
I1
s(Vinsert
p406
I42
VSimpleName: enter
p407
tp408
I1
s(Vinsert
p409
I42
VSimpleName: isOpen
p410
tp411
I1
s(Vinsert
p412
I42
VSimpleName: set
p413
tp414
I9
s(Vinsert
p415
I40
VQualifiedName: injector.state
p416
tp417
I4
s(Vinsert
p418
I66
VTextElement: injection. This may require user's objects be created and their providers be called. And we
p419
tp420
I1
s(Vinsert
p421
I45
VStringLiteral: "field "
p422
tp423
I1
s(Vinsert
p424
I40
VQualifiedName: ImmutableSet.Builder
p425
tp426
I2
s(Vinsert
p427
I43
VSimpleType: Collection
p428
tp429
I19
s(Vinsert
p430
I42
VSimpleName: Ambiguous1Module
p431
tp432
I1
s(Vinsert
p433
I42
VSimpleName: TEST_CLAZZES
p434
tp435
I1
s(Vinsert
p436
I42
VSimpleName: d
p437
tp438
I3
s(Vinsert
p439
I42
VSimpleName: remove
p440
tp441
I16
s(Vinsert
p442
I42
VSimpleName: BindInterceptorCommand
p443
tp444
I1
s(Vinsert
p445
I45
VStringLiteral: "Circular reference: "
p446
tp447
I1
s(Vinsert
p448
I42
VSimpleName: key
p449
tp450
I113
s(Vinsert
p451
I42
VSimpleName: getRequest
p452
tp453
I2
s(Vinsert
p454
I43
VSimpleType: WantsTypeLiterals
p455
tp456
I1
s(Vinsert
p457
I42
VSimpleName: visitConvertToTypes
p458
tp459
I2
s(Vinsert
p460
I42
VSimpleName: testBaseObjectDependingOnChild
p461
tp462
I1
s(Vinsert
p463
I42
VSimpleName: args
p464
tp465
I5
s(Vinsert
p466
I42
VSimpleName: provider
p467
tp468
I28
s(Vinsert
p469
I43
VSimpleType: OptionalBinder.Default
p470
tp471
I1
s(Vinsert
p472
I42
VSimpleName: DisableCircularProxiesOption
p473
tp474
I1
s(Vinsert
p475
I43
VSimpleType: Result
p476
tp477
I1
s(Vinsert
p478
I42
VSimpleName: assertEqualsBothWays
p479
tp480
I4
s(Vinsert
p481
I40
VQualifiedName: net.sf.cglib.reflect.FastMethod
p482
tp483
I1
s(Vinsert
p484
I42
VSimpleName: ProviderMethod
p485
tp486
I4
s(Vinsert
p487
I42
VSimpleName: testNoAnnotationNoScope
p488
tp489
I1
s(Vinsert
p490
I45
VStringLiteral: " (via modules: "
p491
tp492
I1
s(Vinsert
p493
I42
VSimpleName: buf
p494
tp495
I2
s(Vinsert
p496
I43
VSimpleType: Scope.Strategy
p497
tp498
I3
s(Vinsert
p499
I43
VSimpleType: javax.inject.Provider
p500
tp501
I6
s(Vinsert
p502
I42
VSimpleName: combined2
p503
tp504
I1
s(Vinsert
p505
I42
VSimpleName: getModifiableFieldAndMethodDependenciesFor
p506
tp507
I1
s(Vinsert
p508
I42
VSimpleName: newConcurrentMap
p509
tp510
I1
s(Vinsert
p511
I74
VParameterizedType: ConstructionContext<T>
p512
tp513
I2
s(Vinsert
p514
I43
VSimpleType: OuterScopeModule
p515
tp516
I1
s(Vinsert
p517
I43
VSimpleType: TypeVariable
p518
tp519
I6
s(Vinsert
p520
I42
VSimpleName: sources
p521
tp522
I4
s(Vinsert
p523
I42
VSimpleName: implementationType
p524
tp525
I4
s(Vinsert
p526
I42
VSimpleName: doInitialize
p527
tp528
I1
s(Vinsert
p529
I42
VSimpleName: Nullability
p530
tp531
I1
s(Vinsert
p532
I42
VSimpleName: finalizableReferenceClass
p533
tp534
I1
s(Vinsert
p535
I42
VSimpleName: modules
p536
tp537
I9
s(Vinsert
p538
I42
VSimpleName: popSource
p539
tp540
I3
s(Vinsert
p541
I43
VSimpleType: FooAnnotation
p542
tp543
I2
s(Vinsert
p544
I42
VSimpleName: ProvisionListener
p545
tp546
I3
s(Vinsert
p547
I42
VSimpleName: BindingTargetVisitor
p548
tp549
I6
s(Vinsert
p550
I42
VSimpleName: comparisonMethod
p551
tp552
I8
s(Vinsert
p553
I40
VQualifiedName: AbstractAssisted.Factory
p554
tp555
I1
s(Vinsert
p556
I43
VSimpleType: AnnotatedElement
p557
tp558
I3
s(Vinsert
p559
I42
VSimpleName: Assert
p560
tp561
I3
s(Vinsert
p562
I42
VSimpleName: existingBindings
p563
tp564
I2
s(Vinsert
p565
I42
VSimpleName: stripDuplicates
p566
tp567
I1
s(Vinsert
p568
I43
VSimpleType: ConcreteAssistedWithoutOverride
p569
tp570
I1
s(Vinsert
p571
I40
VQualifiedName: lateBoundConstructor.constructorInjector.constructionProxy
p572
tp573
I1
s(Vinsert
p574
I40
VQualifiedName: injector.outstandingInjections
p575
tp576
I1
s(Vinsert
p577
I42
VSimpleName: memberInjectorsList
p578
tp579
I3
s(Vinsert
p580
I42
VSimpleName: Inject
p581
tp582
I9
s(Vinsert
p583
I42
VSimpleName: intJavaxProvider
p584
tp585
I1
s(Vinsert
p586
I42
VSimpleName: getBindings
p587
tp588
I1
s(Vinsert
p589
I43
VSimpleType: SampleSingleton
p590
tp591
I2
s(Vinsert
p592
I43
VSimpleType: ErrorsException
p593
tp594
I18
s(Vinsert
p595
I42
VSimpleName: getInjectionPoint
p596
tp597
I8
s(Vinsert
p598
I42
VSimpleName: Names
p599
tp600
I19
s(Vinsert
p601
I74
VParameterizedType: ConstructionProxy<?>
p602
tp603
I1
s(Vinsert
p604
I42
VSimpleName: WorkManager
p605
tp606
I1
s(Vinsert
p607
I43
VSimpleType: Params
p608
tp609
I2
s(Vinsert
p610
I42
VSimpleName: keyAndSources
p611
tp612
I2
s(Vinsert
p613
I42
VSimpleName: throwCreationExceptionIfErrorsExist
p614
tp615
I1
s(Vinsert
p616
I42
VSimpleName: provideString
p617
tp618
I1
s(Vinsert
p619
I43
VSimpleType: Tracer
p620
tp621
I1
s(Vinsert
p622
I42
VSimpleName: value
p623
tp624
I46
s(Vinsert
p625
I42
VSimpleName: matchingFilter
p626
tp627
I2
s(Vinsert
p628
I42
VSimpleName: getPortId
p629
tp630
I1
s(Vinsert
p631
I43
VSimpleType: AnnotatedElementBuilder
p632
tp633
I1
s(Vinsert
p634
I43
VSimpleType: Only
p635
tp636
I2
s(Vinsert
p637
I42
VSimpleName: isPathComputed
p638
tp639
I1
s(Vinsert
p640
I42
VSimpleName: multimapKey
p641
tp642
I1
s(Vinsert
p643
I45
VStringLiteral: "*.jsp"
p644
tp645
I1
s(Vinsert
p646
I42
VSimpleName: marker
p647
tp648
I2
s(Vinsert
p649
I42
VSimpleName: provisionException
p650
tp651
I6
s(Vinsert
p652
I43
VSimpleType: Class
p653
tp654
I94
s(Vinsert
p655
I42
VSimpleName: filterInstance
p656
tp657
I1
s(Vinsert
p658
I74
VParameterizedType: Set<Key>
p659
tp660
I2
s(Vinsert
p661
I42
VSimpleName: classQuery
p662
tp663
I1
s(Vinsert
p664
I42
VSimpleName: tType
p665
tp666
I1
s(Vinsert
p667
I43
VSimpleType: Delegater
p668
tp669
I2
s(Vinsert
p670
I42
VSimpleName: overrides
p671
tp672
I1
s(Vinsert
p673
I40
VQualifiedName: ConcreteAssistedWithOverride.Factory
p674
tp675
I1
s(Vinsert
p676
I66
VTextElement: Returns a new complete constructor injector with injection listeners registered.
p677
tp678
I1
s(Vinsert
p679
I43
VSimpleType: SingletonFactory
p680
tp681
I2
s(Vinsert
p682
I43
VSimpleType: ServletDefinition
p683
tp684
I10
s(Vinsert
p685
I43
VSimpleType: ConstructionContext
p686
tp687
I3
s(Vinsert
p688
I43
VSimpleType: Q
p689
tp690
I1
s(Vinsert
p691
I42
VSimpleName: awaitClear
p692
tp693
I4
s(Vinsert
p694
I42
VSimpleName: setPhase
p695
tp696
I1
s(Vinsert
p697
I40
VQualifiedName: ErrorMessages.BINDING_TO_GUICE_TYPE
p698
tp699
I1
s(Vinsert
p700
I42
VSimpleName: Server
p701
tp702
I2
s(Vinsert
p703
I40
VQualifiedName: java.lang.reflect.TypeVariable
p704
tp705
I1
s(Vinsert
p706
I79
VSingleMemberAnnotation
p707
tp708
I14
s(Vinsert
p709
I42
VSimpleName: getPackage
p710
tp711
I1
s(Vinsert
p712
I42
VSimpleName: keySet
p713
tp714
I5
s(Vinsert
p715
I11
VCastExpression
p716
tp717
I140
s(Vinsert
p718
I40
VQualifiedName: Indexer.IndexedBinding
p719
tp720
I1
s(Vinsert
p721
I43
VSimpleType: DelegatingInvocationHandler
p722
tp723
I2
s(Vinsert
p724
I74
VParameterizedType: Key<String>
p725
tp726
I3
s(Vinsert
p727
I42
VSimpleName: URI
p728
tp729
I1
s(Vinsert
p730
I66
VTextElement: messages.
p731
tp732
I1
s(Vinsert
p733
I43
VSimpleType: Map
p734
tp735
I11
s(Vinsert
p736
I43
VSimpleType: De
p737
tp738
I1
s(Vinsert
p739
I42
VSimpleName: NeedsRunnable
p740
tp741
I1
s(Vinsert
p742
I42
VSimpleName: bindListener
p743
tp744
I4
s(Vinsert
p745
I45
VStringLiteral: "Invalid regex pattern: "
p746
tp747
I1
s(Vinsert
p748
I45
VStringLiteral: "Wronge stage in overridden module:"
p749
tp750
I2
s(Vinsert
p751
I42
VSimpleName: S
p752
tp753
I2
s(Vinsert
p754
I27
VInfixExpression: <<
p755
tp756
I1
s(Vinsert
p757
I43
VSimpleType: ConstructorWithBindingAnnotation
p758
tp759
I1
s(Vinsert
p760
I43
VSimpleType: DeferredLookups
p761
tp762
I1
s(Vinsert
p763
I42
VSimpleName: Lists
p764
tp765
I37
s(Vinsert
p766
I42
VSimpleName: JpaDao
p767
tp768
I1
s(Vinsert
p769
I42
VSimpleName: allSources
p770
tp771
I2
s(Vinsert
p772
I42
VSimpleName: parameterTypes
p773
tp774
I5
s(Vinsert
p775
I74
VParameterizedType: BindingTargetVisitor<Object,Collection<Key<?>>>
p776
tp777
I1
s(Vinsert
p778
I42
VSimpleName: Boolean
p779
tp780
I21
s(Vinsert
p781
I43
VSimpleType: NodeId
p782
tp783
I2
s(Vinsert
p784
I42
VSimpleName: asMap
p785
tp786
I1
s(Vinsert
p787
I42
VSimpleName: testOverrideUnmatchedTolerated
p788
tp789
I1
s(Vinsert
p790
I42
VSimpleName: path
p791
tp792
I4
s(Vinsert
p793
I42
VSimpleName: firstFound
p794
tp795
I1
s(Vinsert
p796
I42
VSimpleName: deliverBadNews
p797
tp798
I2
s(Vinsert
p799
I42
VSimpleName: copyingVisitor
p800
tp801
I2
s(Vinsert
p802
I42
VSimpleName: Collections
p803
tp804
I9
s(Vinsert
p805
I45
VStringLiteral: "Injecting into abstract types is not supported."
p806
tp807
I1
s(Vinsert
p808
I42
VSimpleName: testAPIClazz
p809
tp810
I1
s(Vinsert
p811
I42
VSimpleName: unwrap
p812
tp813
I1
s(Vinsert
p814
I74
VParameterizedType: Collection<V>
p815
tp816
I1
s(Vinsert
p817
I42
VSimpleName: ConstructorWithBindingAnnotation
p818
tp819
I2
s(Vinsert
p820
I42
VSimpleName: getProvisionListenerBindings
p821
tp822
I4
s(Vinsert
p823
I42
VSimpleName: sedan
p824
tp825
I1
s(Vinsert
p826
I45
VStringLiteral: "hi"
p827
tp828
I3
s(Vinsert
p829
I42
VSimpleName: Finalizer
p830
tp831
I1
s(Vinsert
p832
I43
VSimpleType: CloseableScope
p833
tp834
I1
s(Vinsert
p835
I45
VStringLiteral: "Second"
p836
tp837
I2
s(Vinsert
p838
I42
VSimpleName: testsFor
p839
tp840
I1
s(Vinsert
p841
I42
VSimpleName: Visitor
p842
tp843
I11
s(Vinsert
p844
I45
VStringLiteral: "Binding is not ready"
p845
tp846
I1
s(Vinsert
p847
I42
VSimpleName: HasInjections
p848
tp849
I1
s(Vinsert
p850
I43
VSimpleType: AnnotatedConstantBindingBuilder
p851
tp852
I2
s(Vinsert
p853
I42
VSimpleName: LocalClass
p854
tp855
I1
s(Vinsert
p856
I74
VParameterizedType: TProvider<List>
p857
tp858
I1
s(Vinsert
p859
I42
VSimpleName: parentInjector
p860
tp861
I6
s(Vinsert
p862
I61
VWhileStatement
p863
tp864
I5
s(Vinsert
p865
I42
VSimpleName: createChildInjector
p866
tp867
I11
s(Vinsert
p868
I42
VSimpleName: uninitializedBindings
p869
tp870
I1
s(Vinsert
p871
I42
VSimpleName: getExternalContext
p872
tp873
I2
s(Vinsert
p874
I45
VStringLiteral: "Setting the scope is not permitted when binding to a single instance."
p875
tp876
I1
s(Vinsert
p877
I42
VSimpleName: isStageTool
p878
tp879
I2
s(Vinsert
p880
I74
VParameterizedType: HashSet<Key>
p881
tp882
I1
s(Vinsert
p883
I42
VSimpleName: visitToProviderKey
p884
tp885
I1
s(Vinsert
p886
I42
VSimpleName: other
p887
tp888
I18
s(Vinsert
p889
I43
VSimpleType: AImpl
p890
tp891
I1
s(Vinsert
p892
I42
VSimpleName: foo
p893
tp894
I12
s(Vinsert
p895
I42
VSimpleName: getBinder
p896
tp897
I1
s(Vinsert
p898
I42
VSimpleName: isEffectiveScopeAppliedScope
p899
tp900
I1
s(Vinsert
p901
I42
VSimpleName: addExposureBuilder
p902
tp903
I1
s(Vinsert
p904
I42
VSimpleName: valueKey
p905
tp906
I1
s(Vinsert
p907
I42
VSimpleName: ProvisionListenerBinding
p908
tp909
I4
s(Vinsert
p910
I42
VSimpleName: addError
p911
tp912
I28
s(Vinsert
p913
I42
VSimpleName: getClass
p914
tp915
I37
s(Vinsert
p916
I42
VSimpleName: HashEqualsTester
p917
tp918
I2
s(Vinsert
p919
I43
VSimpleType: ConstructorBinding
p920
tp921
I4
s(Vinsert
p922
I43
VSimpleType: Indexer
p923
tp924
I3
s(Vinsert
p925
I42
VSimpleName: cache
p926
tp927
I7
s(Vinsert
p928
I42
VSimpleName: asModuleChain
p929
tp930
I2
s(Vinsert
p931
I42
VSimpleName: bindingsMutable
p932
tp933
I1
s(Vinsert
p934
I43
VSimpleType: PrivateBinder
p935
tp936
I2
s(Vinsert
p937
I43
VSimpleType: ServletModule
p938
tp939
I6
s(Vinsert
p940
I43
VSimpleType: RuntimePermission
p941
tp942
I1
s(Vinsert
p943
I42
VSimpleName: advance
p944
tp945
I1
s(Vinsert
p946
I42
VSimpleName: Short
p947
tp948
I4
s(Vinsert
p949
I45
VStringLiteral: "expectedUserLinkedActual: "
p950
tp951
I1
s(Vinsert
p952
I42
VSimpleName: providerDependencies
p953
tp954
I1
s(Vinsert
p955
I42
VSimpleName: hash
p956
tp957
I1
s(Vinsert
p958
I42
VSimpleName: injectionPointsList
p959
tp960
I1
s(Vinsert
p961
I43
VSimpleType: ProviderInstanceBinding
p962
tp963
I9
s(Vinsert
p964
I42
VSimpleName: cleanUp
p965
tp966
I3
s(Vinsert
p967
I42
VSimpleName: instances
p968
tp969
I2
s(Vinsert
p970
I42
VSimpleName: createBindingFromType
p971
tp972
I1
s(Vinsert
p973
I74
VParameterizedType: List<Provider<?>>
p974
tp975
I1
s(Vinsert
p976
I45
VStringLiteral: "$"
p977
tp978
I1
s(Vinsert
p979
I43
VSimpleType: TestVisibilityClassLoader
p980
tp981
I1
s(Vinsert
p982
I42
VSimpleName: ReferenceMap
p983
tp984
I4
s(Vinsert
p985
I40
VQualifiedName: com.google.inject.commands.CommandRewriteTest
p986
tp987
I1
s(Vinsert
p988
I42
VSimpleName: MapMaker
p989
tp990
I1
s(Vinsert
p991
I42
VSimpleName: beanFactory
p992
tp993
I5
s(Vinsert
p994
I43
VSimpleType: Inject
p995
tp996
I1
s(Vinsert
p997
I42
VSimpleName: leftLeft
p998
tp999
I1
s(Vinsert
p1000
I42
VSimpleName: SourceProvider
p1001
tp1002
I9
s(Vinsert
p1003
I42
VSimpleName: bindInterceptor
p1004
tp1005
I6
s(Vinsert
p1006
I66
VTextElement:  toString
p1007
tp1008
I1
s(Vinsert
p1009
I42
VSimpleName: FooBar
p1010
tp1011
I1
s(Vinsert
p1012
I43
VSimpleType: ModuleInfo
p1013
tp1014
I1
s(Vinsert
p1015
I74
VParameterizedType: UntargettedBindingImpl<?>
p1016
tp1017
I1
s(Vinsert
p1018
I42
VSimpleName: isActive
p1019
tp1020
I4
s(Vinsert
p1021
I43
VSimpleType: Inner
p1022
tp1023
I1
s(Vinsert
p1024
I42
VSimpleName: Enumeration
p1025
tp1026
I3
s(Vinsert
p1027
I42
VSimpleName: staticInjections
p1028
tp1029
I1
s(Vinsert
p1030
I42
VSimpleName: a
p1031
tp1032
I28
s(Vinsert
p1033
I43
VSimpleType: RequestInjectionCommand
p1034
tp1035
I3
s(Vinsert
p1036
I42
VSimpleName: testEquals_typeVariable
p1037
tp1038
I1
s(Vinsert
p1039
I43
VSimpleType: FailingModule
p1040
tp1041
I1
s(Vinsert
p1042
I43
VSimpleType: ArrayList
p1043
tp1044
I8
s(Vinsert
p1045
I5
VArrayType: Method[]
p1046
tp1047
I1
s(Vinsert
p1048
I43
VSimpleType: ServletException
p1049
tp1050
I13
s(Vinsert
p1051
I42
VSimpleName: PackagePrivateInterface
p1052
tp1053
I1
s(Vinsert
p1054
I45
VStringLiteral: "/%2E/*"
p1055
tp1056
I1
s(Vinsert
p1057
I42
VSimpleName: future
p1058
tp1059
I2
s(Vinsert
p1060
I42
VSimpleName: expectedSize
p1061
tp1062
I3
s(Vinsert
p1063
I74
VParameterizedType: FactoryProxy<T>
p1064
tp1065
I1
s(Vinsert
p1066
I42
VSimpleName: FinalizableReferenceQueue
p1067
tp1068
I3
s(Vinsert
p1069
I45
VStringLiteral: "true"
p1070
tp1071
I1
s(Vinsert
p1072
I74
VParameterizedType: Class<? extends T>
p1073
tp1074
I1
s(Vinsert
p1075
I42
VSimpleName: rootMessage
p1076
tp1077
I1
s(Vinsert
p1078
I74
VParameterizedType: WeakReference<FilterPipeline>
p1079
tp1080
I1
s(Vinsert
p1081
I45
VStringLiteral: "/person/[0-9]*"
p1082
tp1083
I3
s(Vinsert
p1084
I42
VSimpleName: deMapBinder
p1085
tp1086
I2
s(Vinsert
p1087
I42
VSimpleName: injectableMembers
p1088
tp1089
I6
s(Vinsert
p1090
I42
VSimpleName: setDependency
p1091
tp1092
I1
s(Vinsert
p1093
I42
VSimpleName: invocationHandler
p1094
tp1095
I1
s(Vinsert
p1096
I39
VPrimitiveType: long
p1097
tp1098
I3
s(Vinsert
p1099
I42
VSimpleName: listOf
p1100
tp1101
I5
s(Vinsert
p1102
I42
VSimpleName: getInterceptors
p1103
tp1104
I2
s(Vinsert
p1105
I42
VSimpleName: process
p1106
tp1107
I4
s(Vinsert
p1108
I34
VNumberLiteral: 8
p1109
tp1110
I1
s(Vinsert
p1111
I42
VSimpleName: SHOULDNEVERBESEEN
p1112
tp1113
I1
s(Vinsert
p1114
I42
VSimpleName: Parameter
p1115
tp1116
I8
s(Vinsert
p1117
I42
VSimpleName: any
p1118
tp1119
I7
s(Vinsert
p1120
I42
VSimpleName: getReturnType
p1121
tp1122
I4
s(Vinsert
p1123
I42
VSimpleName: EqualsTester
p1124
tp1125
I1
s(Vinsert
p1126
I42
VSimpleName: provideNamedString
p1127
tp1128
I1
s(Vinsert
p1129
I42
VSimpleName: poll
p1130
tp1131
I1
s(Vinsert
p1132
I42
VSimpleName: Firebird
p1133
tp1134
I2
s(Vinsert
p1135
I42
VSimpleName: ParallelMemberInjectionCallback2
p1136
tp1137
I2
s(Vinsert
p1138
I42
VSimpleName: NotHidden
p1139
tp1140
I2
s(Vinsert
p1141
I42
VSimpleName: transform
p1142
tp1143
I1
s(Vinsert
p1144
I45
VStringLiteral: "<"
p1145
tp1146
I1
s(Vinsert
p1147
I42
VSimpleName: proxyTestClass
p1148
tp1149
I1
s(Vinsert
p1150
I42
VSimpleName: setPort
p1151
tp1152
I2
s(Vinsert
p1153
I66
VTextElement: Returns true if the injector for that point was stored in the cache, false otherwise.
p1154
tp1155
I1
s(Vinsert
p1156
I74
VParameterizedType: Map.Entry<Object,Object>
p1157
tp1158
I1
s(Vinsert
p1159
I43
VSimpleType: RealElement.BindingBuilder
p1160
tp1161
I1
s(Vinsert
p1162
I42
VSimpleName: LinkedBindingImpl
p1163
tp1164
I7
s(Vinsert
p1165
I43
VSimpleType: InjectorShell
p1166
tp1167
I2
s(Vinsert
p1168
I42
VSimpleName: clas
p1169
tp1170
I1
s(Vinsert
p1171
I42
VSimpleName: provideS
p1172
tp1173
I1
s(Vinsert
p1174
I42
VSimpleName: tokens
p1175
tp1176
I1
s(Vinsert
p1177
I43
VSimpleType: ScopingVisitor
p1178
tp1179
I1
s(Vinsert
p1180
I42
VSimpleName: UntargettedBinding
p1181
tp1182
I1
s(Vinsert
p1183
I42
VSimpleName: assertAbout
p1184
tp1185
I1
s(Vinsert
p1186
I45
VStringLiteral: "provider"
p1187
tp1188
I2
s(Vinsert
p1189
I42
VSimpleName: allDone
p1190
tp1191
I1
s(Vinsert
p1192
I42
VSimpleName: println
p1193
tp1194
I4
s(Vinsert
p1195
I43
VSimpleType: ProvisionInterceptor
p1196
tp1197
I3
s(Vinsert
p1198
I43
VSimpleType: GraphvizEdge
p1199
tp1200
I2
s(Vinsert
p1201
I74
VParameterizedType: Set<Indexer.IndexedBinding>
p1202
tp1203
I1
s(Vinsert
p1204
I45
VStringLiteral: "already initialized"
p1205
tp1206
I1
s(Vinsert
p1207
I43
VSimpleType: NoSuchFieldException
p1208
tp1209
I1
s(Vinsert
p1210
I42
VSimpleName: units
p1211
tp1212
I1
s(Vinsert
p1213
I42
VSimpleName: Simple
p1214
tp1215
I1
s(Vinsert
p1216
I42
VSimpleName: proxyCreationError
p1217
tp1218
I1
s(Vinsert
p1219
I42
VSimpleName: lockOwnerThreadId
p1220
tp1221
I1
s(Vinsert
p1222
I42
VSimpleName: implicitBindings
p1223
tp1224
I3
s(Vinsert
p1225
I45
VStringLiteral: "Binding points to itself."
p1226
tp1227
I1
s(Vinsert
p1228
I45
VStringLiteral: "hello"
p1229
tp1230
I1
s(Vinsert
p1231
I43
VSimpleType: StrutsPrepareAndExecuteFilter
p1232
tp1233
I1
s(Vinsert
p1234
I43
VSimpleType: ImmutableSet
p1235
tp1236
I1
s(Vinsert
p1237
I45
VStringLiteral: "s"
p1238
tp1239
I2
s(Vinsert
p1240
I42
VSimpleName: getContextPath
p1241
tp1242
I18
s(Vinsert
p1243
I42
VSimpleName: ServletDefinition
p1244
tp1245
I9
s(Vinsert
p1246
I42
VSimpleName: OutOfScopeException
p1247
tp1248
I1
s(Vinsert
p1249
I66
VTextElement: in practice.
p1250
tp1251
I1
s(Vinsert
p1252
I42
VSimpleName: ExposureBuilder
p1253
tp1254
I1
s(Vinsert
p1255
I42
VSimpleName: duplicateBinding
p1256
tp1257
I2
s(Vinsert
p1258
I45
VStringLiteral: ") No implementation for com.google.inject.assistedinject."
p1259
tp1260
I1
s(Vinsert
p1261
I43
VSimpleType: Builder
p1262
tp1263
I1
s(Vinsert
p1264
I42
VSimpleName: servletContextEvent
p1265
tp1266
I2
s(Vinsert
p1267
I74
VParameterizedType: HashSet<Module>
p1268
tp1269
I2
s(Vinsert
p1270
I42
VSimpleName: setBar
p1271
tp1272
I1
s(Vinsert
p1273
I40
VQualifiedName: foo.literal
p1274
tp1275
I1
s(Vinsert
p1276
I14
VClassInstanceCreation
p1277
tp1278
I270
s(Vinsert
p1279
I42
VSimpleName: evictionCache
p1280
tp1281
I2
s(Vinsert
p1282
I42
VSimpleName: injectorShell
p1283
tp1284
I1
s(Vinsert
p1285
I42
VSimpleName: intValue
p1286
tp1287
I7
s(Vinsert
p1288
I76
VWildcardType: ? super Key<?>
p1289
tp1290
I2
s(Vinsert
p1291
I42
VSimpleName: npe
p1292
tp1293
I3
s(Vinsert
p1294
I42
VSimpleName: BindException
p1295
tp1296
I1
s(Vinsert
p1297
I42
VSimpleName: info
p1298
tp1299
I5
s(Vinsert
p1300
I45
VStringLiteral: "123"
p1301
tp1302
I2
s(Vinsert
p1303
I42
VSimpleName: InnerAmbiguousModule
p1304
tp1305
I1
s(Vinsert
p1306
I42
VSimpleName: newInjector
p1307
tp1308
I1
s(Vinsert
p1309
I43
VSimpleType: ProviderWithExtensionVisitor
p1310
tp1311
I2
s(Vinsert
p1312
I42
VSimpleName: setKey
p1313
tp1314
I7
s(Vinsert
p1315
I42
VSimpleName: getJustInTimeBinding
p1316
tp1317
I1
s(Vinsert
p1318
I66
VTextElement:  The current servlet context.
p1319
tp1320
I1
s(Vinsert
p1321
I43
VSimpleType: BigDecimal
p1322
tp1323
I2
s(Vinsert
p1324
I43
VSimpleType: ServletPipelineRequestDispatcherTest
p1325
tp1326
I1
s(Vinsert
p1327
I45
VStringLiteral: "setInteger"
p1328
tp1329
I1
s(Vinsert
p1330
I74
VParameterizedType: ConstructorBinding<?>
p1331
tp1332
I4
s(Vinsert
p1333
I42
VSimpleName: referent
p1334
tp1335
I6
s(Vinsert
p1336
I43
VSimpleType: CommandRecorderTest
p1337
tp1338
I1
s(Vinsert
p1339
I42
VSimpleName: NoSuchFieldException
p1340
tp1341
I2
s(Vinsert
p1342
I42
VSimpleName: servletReqProvider
p1343
tp1344
I1
s(Vinsert
p1345
I50
VSwitchStatement
p1346
tp1347
I1
s(Vinsert
p1348
I42
VSimpleName: getScheme
p1349
tp1350
I1
s(Vinsert
p1351
I74
VParameterizedType: Callable<String>
p1352
tp1353
I1
s(Vinsert
p1354
I42
VSimpleName: decoupledLoader
p1355
tp1356
I1
s(Vinsert
p1357
I45
VStringLiteral: ".configure(BinderTest.java:"
p1358
tp1359
I2
s(Vinsert
p1360
I43
VSimpleType: ScopedBindingBuilder
p1361
tp1362
I4
s(Vinsert
p1363
I42
VSimpleName: assertNoNulls
p1364
tp1365
I3
s(Vinsert
p1366
I43
VSimpleType: BindInterceptorCommand
p1367
tp1368
I1
s(Vinsert
p1369
I45
VStringLiteral: "Key already has no attributes."
p1370
tp1371
I1
s(Vinsert
p1372
I45
VStringLiteral: "bieb"
p1373
tp1374
I1
s(Vinsert
p1375
I42
VSimpleName: getIncludeStackTraceOption
p1376
tp1377
I1
s(Vinsert
p1378
I42
VSimpleName: forInjectionPoints
p1379
tp1380
I1
s(Vinsert
p1381
I42
VSimpleName: Injected
p1382
tp1383
I1
s(Vinsert
p1384
I43
VSimpleType: HasOptionalInjections
p1385
tp1386
I1
s(Vinsert
p1387
I42
VSimpleName: newSetBinder
p1388
tp1389
I11
s(Vinsert
p1390
I40
VQualifiedName: pair.method
p1391
tp1392
I1
s(Vinsert
p1393
I45
VStringLiteral: "A binding to "
p1394
tp1395
I1
s(Vinsert
p1396
I42
VSimpleName: getGenericType
p1397
tp1398
I1
s(Vinsert
p1399
I43
VSimpleType: MethodInterceptor
p1400
tp1401
I9
s(Vinsert
p1402
I42
VSimpleName: getPrivateElements
p1403
tp1404
I2
s(Vinsert
p1405
I42
VSimpleName: A
p1406
tp1407
I20
s(Vinsert
p1408
I43
VSimpleType: InjectorOptionsProcessor
p1409
tp1410
I2
s(Vinsert
p1411
I42
VSimpleName: index
p1412
tp1413
I12
s(Vinsert
p1414
I42
VSimpleName: List
p1415
tp1416
I83
s(Vinsert
p1417
I74
VParameterizedType: TypeLiteral<List<Butter>>
p1418
tp1419
I1
s(Vinsert
p1420
I40
VQualifiedName: java.util.Collections.unmodifiableList
p1421
tp1422
I2
s(Vinsert
p1423
I40
VQualifiedName: Map.Entry
p1424
tp1425
I6
s(Vinsert
p1426
I42
VSimpleName: candidateBindings
p1427
tp1428
I3
s(Vinsert
p1429
I42
VSimpleName: indexedEntries
p1430
tp1431
I1
s(Vinsert
p1432
I43
VSimpleType: D2
p1433
tp1434
I1
s(Vinsert
p1435
I42
VSimpleName: getClassLoader
p1436
tp1437
I2
s(Vinsert
p1438
I74
VParameterizedType: TypeLiteral<?>
p1439
tp1440
I12
s(Vinsert
p1441
I42
VSimpleName: COUNTER
p1442
tp1443
I1
s(Vinsert
p1444
I42
VSimpleName: otherMatchesSize
p1445
tp1446
I1
s(Vinsert
p1447
I42
VSimpleName: TestScopeAnnotation
p1448
tp1449
I1
s(Vinsert
p1450
I43
VSimpleType: Map.Entry
p1451
tp1452
I6
s(Vinsert
p1453
I42
VSimpleName: testErrorInParentAndChild
p1454
tp1455
I1
s(Vinsert
p1456
I42
VSimpleName: entryBinding
p1457
tp1458
I1
s(Vinsert
p1459
I43
VSimpleType: MethodAspect
p1460
tp1461
I4
s(Vinsert
p1462
I45
VStringLiteral: "while locating com.google.inject.MembersInjector<"
p1463
tp1464
I1
s(Vinsert
p1465
I42
VSimpleName: messages
p1466
tp1467
I11
s(Vinsert
p1468
I45
VStringLiteral: "asdasd124ok"
p1469
tp1470
I1
s(Vinsert
p1471
I45
VStringLiteral: "parameterizedWithWildcard"
p1472
tp1473
I2
s(Vinsert
p1474
I42
VSimpleName: invalidConstructor
p1475
tp1476
I1
s(Vinsert
p1477
I39
VPrimitiveType: int
p1478
tp1479
I51
s(Vinsert
p1480
I42
VSimpleName: submit
p1481
tp1482
I1
s(Vinsert
p1483
I74
VParameterizedType: TypeLiteral<Set<Key>>
p1484
tp1485
I1
s(Vinsert
p1486
I42
VSimpleName: newInstance
p1487
tp1488
I10
s(Vinsert
p1489
I42
VSimpleName: typeArguments
p1490
tp1491
I1
s(Vinsert
p1492
I42
VSimpleName: onStart
p1493
tp1494
I1
s(Vinsert
p1495
I66
VTextElement: you may not use this file except in compliance with the License.
p1496
tp1497
I1
s(Vinsert
p1498
I42
VSimpleName: iterable
p1499
tp1500
I4
s(Vinsert
p1501
I42
VSimpleName: replace
p1502
tp1503
I2
s(Vinsert
p1504
I42
VSimpleName: ofString
p1505
tp1506
I1
s(Vinsert
p1507
I45
VStringLiteral: "Entity managers closed inside same thread-scope"
p1508
tp1509
I1
s(Vinsert
p1510
I42
VSimpleName: getInternalConstructor
p1511
tp1512
I1
s(Vinsert
p1513
I42
VSimpleName: opcode
p1514
tp1515
I1
s(Vinsert
p1516
I42
VSimpleName: visitEnd
p1517
tp1518
I2
s(Vinsert
p1519
I43
VSimpleType: StaticInjection
p1520
tp1521
I1
s(Vinsert
p1522
I74
VParameterizedType: ConvertedConstantBinding<?>
p1523
tp1524
I1
s(Vinsert
p1525
I42
VSimpleName: acceptExtensionVisitor
p1526
tp1527
I1
s(Vinsert
p1528
I42
VSimpleName: isInnerClass
p1529
tp1530
I3
s(Vinsert
p1531
I42
VSimpleName: connector
p1532
tp1533
I4
s(Vinsert
p1534
I43
VSimpleType: MethodInvoker
p1535
tp1536
I1
s(Vinsert
p1537
I42
VSimpleName: winningThread
p1538
tp1539
I1
s(Vinsert
p1540
I45
VStringLiteral: " than once."
p1541
tp1542
I1
s(Vinsert
p1543
I42
VSimpleName: getGlobalInternalContext
p1544
tp1545
I1
s(Vinsert
p1546
I40
VQualifiedName: State.CONFIGURATION_TIME
p1547
tp1548
I1
s(Vinsert
p1549
I42
VSimpleName: FactoryProxy
p1550
tp1551
I1
s(Vinsert
p1552
I43
VSimpleType: ProviderKeyBinding
p1553
tp1554
I1
s(Vinsert
p1555
I42
VSimpleName: getFieldValue
p1556
tp1557
I2
s(Vinsert
p1558
I42
VSimpleName: isOptional
p1559
tp1560
I1
s(Vinsert
p1561
I42
VSimpleName: ServletScopes
p1562
tp1563
I1
s(Vinsert
p1564
I27
VInfixExpression: ^
p1565
tp1566
I7
s(Vinsert
p1567
I43
VSimpleType: CountingMembersInjector
p1568
tp1569
I1
s(Vinsert
p1570
I43
VSimpleType: Startable
p1571
tp1572
I1
s(Vinsert
p1573
I42
VSimpleName: OptionalBinderBinding
p1574
tp1575
I1
s(Vinsert
p1576
I43
VSimpleType: Exceptions.UnhandledCheckedUserException
p1577
tp1578
I1
s(Vinsert
p1579
I42
VSimpleName: sub
p1580
tp1581
I2
s(Vinsert
p1582
I74
VParameterizedType: ImmutableList<MethodAspect>
p1583
tp1584
I1
s(Vinsert
p1585
I66
VTextElement: See 
p1586
tp1587
I1
s(Vinsert
p1588
I42
VSimpleName: isGone
p1589
tp1590
I1
s(Vinsert
p1591
I42
VSimpleName: addInjectableTypeListener
p1592
tp1593
I1
s(Vinsert
p1594
I42
VSimpleName: factoryMethods
p1595
tp1596
I1
s(Vinsert
p1597
I42
VSimpleName: guicify
p1598
tp1599
I1
s(Vinsert
p1600
I43
VSimpleType: Scoped
p1601
tp1602
I1
s(Vinsert
p1603
I42
VSimpleName: CreationException
p1604
tp1605
I28
s(Vinsert
p1606
I45
VStringLiteral: "InjectionPoint["
p1607
tp1608
I1
s(Vinsert
p1609
I66
VTextElement: Initialize and validate everything. 
p1610
tp1611
I1
s(Vinsert
p1612
I42
VSimpleName: visitLinkedKey
p1613
tp1614
I1
s(Vinsert
p1615
I43
VSimpleType: BarAnnotation
p1616
tp1617
I2
s(Vinsert
p1618
I42
VSimpleName: inPackage
p1619
tp1620
I1
s(Vinsert
p1621
I42
VSimpleName: pupp
p1622
tp1623
I1
s(Vinsert
p1624
I29
VJavadoc
p1625
tp1626
I12
s(Vinsert
p1627
I74
VParameterizedType: List<ServletDefinition>
p1628
tp1629
I1
s(Vinsert
p1630
I42
VSimpleName: StaticallyInjectable
p1631
tp1632
I1
s(Vinsert
p1633
I42
VSimpleName: ErrorMessages
p1634
tp1635
I4
s(Vinsert
p1636
I42
VSimpleName: secondInjector
p1637
tp1638
I1
s(Vinsert
p1639
I42
VSimpleName: FailingModule
p1640
tp1641
I1
s(Vinsert
p1642
I42
VSimpleName: statics
p1643
tp1644
I1
s(Vinsert
p1645
I42
VSimpleName: string
p1646
tp1647
I1
s(Vinsert
p1648
I43
VSimpleType: Binding
p1649
tp1650
I36
s(Vinsert
p1651
I42
VSimpleName: next
p1652
tp1653
I3
s(Vinsert
p1654
I42
VSimpleName: destroyedSoFar
p1655
tp1656
I5
s(Vinsert
p1657
I66
VTextElement:  the tool stage
p1658
tp1659
I1
s(Vinsert
p1660
I42
VSimpleName: pushState
p1661
tp1662
I2
s(Vinsert
p1663
I34
VNumberLiteral: 1
p1664
tp1665
I24
s(Vinsert
p1666
I42
VSimpleName: getSubtitles
p1667
tp1668
I1
s(Vinsert
p1669
I42
VSimpleName: BeanFactory
p1670
tp1671
I1
s(Vinsert
p1672
I42
VSimpleName: ID
p1673
tp1674
I1
s(Vinsert
p1675
I42
VSimpleName: membersInjector
p1676
tp1677
I6
s(Vinsert
p1678
I43
VSimpleType: TypeConverter
p1679
tp1680
I4
s(Vinsert
p1681
I42
VSimpleName: ConcreteAssistedWithoutOverride
p1682
tp1683
I1
s(Vinsert
p1684
I66
VTextElement: Returns a new instance that uses 
p1685
tp1686
I1
s(Vinsert
p1687
I42
VSimpleName: two
p1688
tp1689
I3
s(Vinsert
p1690
I66
VTextElement: been injected before its use.
p1691
tp1692
I1
s(Vinsert
p1693
I42
VSimpleName: typeConverterBinding
p1694
tp1695
I3
s(Vinsert
p1696
I42
VSimpleName: initializable
p1697
tp1698
I3
s(Vinsert
p1699
I43
VSimpleType: TransactionalObject
p1700
tp1701
I1
s(Vinsert
p1702
I42
VSimpleName: ProviderWithExtensionVisitor
p1703
tp1704
I2
s(Vinsert
p1705
I74
VParameterizedType: Inner<Integer>
p1706
tp1707
I1
s(Vinsert
p1708
I43
VSimpleType: ContinuingHttpServletRequest
p1709
tp1710
I1
s(Vinsert
p1711
I42
VSimpleName: html
p1712
tp1713
I3
s(Vinsert
p1714
I42
VSimpleName: o
p1715
tp1716
I29
s(Vinsert
p1717
I42
VSimpleName: equalKeys
p1718
tp1719
I1
s(Vinsert
p1720
I40
VQualifiedName: JitLimitation.NO_JIT
p1721
tp1722
I1
s(Vinsert
p1723
I42
VSimpleName: mapOfJavaxProvider
p1724
tp1725
I1
s(Vinsert
p1726
I43
VSimpleType: FilterDefinition
p1727
tp1728
I5
s(Vinsert
p1729
I43
VSimpleType: NotHidden
p1730
tp1731
I1
s(Vinsert
p1732
I42
VSimpleName: visitMessage
p1733
tp1734
I2
s(Vinsert
p1735
I42
VSimpleName: wrappedRequest
p1736
tp1737
I2
s(Vinsert
p1738
I34
VNumberLiteral: 5000d
p1739
tp1740
I2
s(Vinsert
p1741
I42
VSimpleName: javaOptionalOfJavaxProviderString
p1742
tp1743
I1
s(Vinsert
p1744
I42
VSimpleName: Abc
p1745
tp1746
I1
s(Vinsert
p1747
I40
VQualifiedName: javax.inject.Provider
p1748
tp1749
I7
s(Vinsert
p1750
I42
VSimpleName: cancel
p1751
tp1752
I1
s(Vinsert
p1753
I42
VSimpleName: userReportedError
p1754
tp1755
I1
s(Vinsert
p1756
I40
VQualifiedName: factory.provisionCallback
p1757
tp1758
I1
s(Vinsert
p1759
I42
VSimpleName: entityManager
p1760
tp1761
I1
s(Vinsert
p1762
I42
VSimpleName: ProviderInstanceBinding
p1763
tp1764
I9
s(Vinsert
p1765
I40
VQualifiedName: java.net.URISyntaxException
p1766
tp1767
I1
s(Vinsert
p1768
I42
VSimpleName: ReturnNullInterceptor
p1769
tp1770
I2
s(Vinsert
p1771
I43
VSimpleType: FooImpl
p1772
tp1773
I1
s(Vinsert
p1774
I42
VSimpleName: Plutonium
p1775
tp1776
I1
s(Vinsert
p1777
I42
VSimpleName: execute
p1778
tp1779
I12
s(Vinsert
p1780
I45
VStringLiteral: "Init did not fire"
p1781
tp1782
I1
s(Vinsert
p1783
I42
VSimpleName: callable
p1784
tp1785
I3
s(Vinsert
p1786
I42
VSimpleName: ExampleListenerAndModule
p1787
tp1788
I1
s(Vinsert
p1789
I42
VSimpleName: IllegalArgumentException
p1790
tp1791
I5
s(Vinsert
p1792
I42
VSimpleName: Before
p1793
tp1794
I1
s(Vinsert
p1795
I74
VParameterizedType: TypeLiteral<Set<T>>
p1796
tp1797
I1
s(Vinsert
p1798
I40
VQualifiedName: a.listOfT
p1799
tp1800
I1
s(Vinsert
p1801
I42
VSimpleName: NamedMunger
p1802
tp1803
I2
s(Vinsert
p1804
I42
VSimpleName: j
p1805
tp1806
I1
s(Vinsert
p1807
I42
VSimpleName: bindingProcesor
p1808
tp1809
I1
s(Vinsert
p1810
I42
VSimpleName: edges
p1811
tp1812
I1
s(Vinsert
p1813
I45
VStringLiteral: "Scope is set more than once by annotations"
p1814
tp1815
I1
s(Vinsert
p1816
I42
VSimpleName: CustomNoScopeModule
p1817
tp1818
I1
s(Vinsert
p1819
I43
VSimpleType: Optional
p1820
tp1821
I4
s(Vinsert
p1822
I33
VNullLiteral
p1823
tp1824
I173
s(Vinsert
p1825
I42
VSimpleName: parentBindings
p1826
tp1827
I5
s(Vinsert
p1828
I42
VSimpleName: cast
p1829
tp1830
I4
s(Vinsert
p1831
I42
VSimpleName: children
p1832
tp1833
I1
s(Vinsert
p1834
I43
VSimpleType: Type
p1835
tp1836
I12
s(Vinsert
p1837
I74
VParameterizedType: AbstractAssisted.Factory<ConcreteAssistedWithoutOverride>
p1838
tp1839
I1
s(Vinsert
p1840
I42
VSimpleName: Butter
p1841
tp1842
I1
s(Vinsert
p1843
I42
VSimpleName: isRetainedAtRuntime
p1844
tp1845
I4
s(Vinsert
p1846
I40
VQualifiedName: net.sf.cglib.core.VisibilityPredicate
p1847
tp1848
I1
s(Vinsert
p1849
I43
VSimpleType: MockService
p1850
tp1851
I1
s(Vinsert
p1852
I42
VSimpleName: override
p1853
tp1854
I1
s(Vinsert
p1855
I42
VSimpleName: fromId
p1856
tp1857
I1
s(Vinsert
p1858
I42
VSimpleName: ImmutableMap
p1859
tp1860
I11
s(Vinsert
p1861
I66
VTextElement:  Set<InjectionPoint>
p1862
tp1863
I3
s(Vinsert
p1864
I42
VSimpleName: forAnnotations
p1865
tp1866
I2
s(Vinsert
p1867
I45
VStringLiteral: "queried entity did not match--did automatic txn fail?"
p1868
tp1869
I1
s(Vinsert
p1870
I42
VSimpleName: IN_SESSION_KEY
p1871
tp1872
I1
s(Vinsert
p1873
I43
VSimpleType: TestProvides
p1874
tp1875
I1
s(Vinsert
p1876
I45
VStringLiteral: "m_"
p1877
tp1878
I1
s(Vinsert
p1879
I42
VSimpleName: chainException
p1880
tp1881
I1
s(Vinsert
p1882
I42
VSimpleName: stackTrace
p1883
tp1884
I1
s(Vinsert
p1885
I42
VSimpleName: isInstanceOf
p1886
tp1887
I1
s(Vinsert
p1888
I66
VTextElement: add additional interceptors, this builder will be thrown out and another created.n
p1889
tp1890
I1
s(Vinsert
p1891
I43
VSimpleType: Double
p1892
tp1893
I3
s(Vinsert
p1894
I42
VSimpleName: latch
p1895
tp1896
I2
s(Vinsert
p1897
I42
VSimpleName: applyTo
p1898
tp1899
I23
s(Vinsert
p1900
I42
VSimpleName: canonicalize
p1901
tp1902
I2
s(Vinsert
p1903
I42
VSimpleName: getInternalFactory
p1904
tp1905
I2
s(Vinsert
p1906
I43
VSimpleType: Indirect
p1907
tp1908
I1
s(Vinsert
p1909
I27
VInfixExpression: >
p1910
tp1911
I4
s(Vinsert
p1912
I42
VSimpleName: V
p1913
tp1914
I44
s(Vinsert
p1915
I42
VSimpleName: assertSame
p1916
tp1917
I22
s(Vinsert
p1918
I42
VSimpleName: AssistedConstructor
p1919
tp1920
I3
s(Vinsert
p1921
I42
VSimpleName: innerType
p1922
tp1923
I1
s(Vinsert
p1924
I42
VSimpleName: defaultKey
p1925
tp1926
I1
s(Vinsert
p1927
I40
VQualifiedName: com.google.inject.internal.Lists
p1928
tp1929
I1
s(Vinsert
p1930
I43
VSimpleType: InterceptingInjectorBuilder
p1931
tp1932
I5
s(Vinsert
p1933
I42
VSimpleName: interceptor
p1934
tp1935
I7
s(Vinsert
p1936
I42
VSimpleName: combine
p1937
tp1938
I4
s(Vinsert
p1939
I42
VSimpleName: expected
p1940
tp1941
I71
s(Vinsert
p1942
I42
VSimpleName: RequestInjectionCommand
p1943
tp1944
I3
s(Vinsert
p1945
I43
VSimpleType: ExtendsHasImplementedBy2
p1946
tp1947
I1
s(Vinsert
p1948
I43
VSimpleType: Car
p1949
tp1950
I1
s(Vinsert
p1951
I42
VSimpleName: pathComputed
p1952
tp1953
I1
s(Vinsert
p1954
I42
VSimpleName: bindingMatcher
p1955
tp1956
I1
s(Vinsert
p1957
I42
VSimpleName: getClassMatcher
p1958
tp1959
I1
s(Vinsert
p1960
I74
VParameterizedType: Multimap<K,IndexedBinding>
p1961
tp1962
I1
s(Vinsert
p1963
I42
VSimpleName: coloredCarFactory
p1964
tp1965
I1
s(Vinsert
p1966
I43
VSimpleType: TestModule
p1967
tp1968
I1
s(Vinsert
p1969
I42
VSimpleName: chunkSize
p1970
tp1971
I1
s(Vinsert
p1972
I40
VQualifiedName: ReferenceType.STRONG
p1973
tp1974
I1
s(Vinsert
p1975
I40
VQualifiedName: anotherInjectableB.c
p1976
tp1977
I1
s(Vinsert
p1978
I43
VSimpleType: PublicUserOfPackagePrivate
p1979
tp1980
I1
s(Vinsert
p1981
I42
VSimpleName: to
p1982
tp1983
I46
s(Vinsert
p1984
I42
VSimpleName: sbb
p1985
tp1986
I1
s(Vinsert
p1987
I42
VSimpleName: bindingImpl
p1988
tp1989
I1
s(Vinsert
p1990
I42
VSimpleName: ContainerBuilder
p1991
tp1992
I13
s(Vinsert
p1993
I42
VSimpleName: blackFirebird
p1994
tp1995
I1
s(Vinsert
p1996
I42
VSimpleName: ServletUtils
p1997
tp1998
I1
s(Vinsert
p1999
I42
VSimpleName: points
p2000
tp2001
I4
s(Vinsert
p2002
I42
VSimpleName: GenericArrayType
p2003
tp2004
I5
s(Vinsert
p2005
I43
VSimpleType: Method
p2006
tp2007
I32
s(Vinsert
p2008
I40
VQualifiedName: com.google.inject.CreationException
p2009
tp2010
I1
s(Vinsert
p2011
I42
VSimpleName: getDeclaredField
p2012
tp2013
I2
s(Vinsert
p2014
I42
VSimpleName: getSecond
p2015
tp2016
I1
s(Vinsert
p2017
I42
VSimpleName: hasAnnotationType
p2018
tp2019
I2
s(Vinsert
p2020
I42
VSimpleName: getMethodName
p2021
tp2022
I1
s(Vinsert
p2023
I42
VSimpleName: module
p2024
tp2025
I32
s(Vinsert
p2026
I43
VSimpleType: ServletDefinitionPathsTest
p2027
tp2028
I1
s(Vinsert
p2029
I66
VTextElement: .
p2030
tp2031
I5
s(Vinsert
p2032
I43
VSimpleType: G
p2033
tp2034
I1
s(Vinsert
p2035
I42
VSimpleName: replayRequestStaticInjection
p2036
tp2037
I1
s(Vinsert
p2038
I42
VSimpleName: ThrowingProviderBinder
p2039
tp2040
I2
s(Vinsert
p2041
I42
VSimpleName: LinkedProviderBindingImpl
p2042
tp2043
I2
s(Vinsert
p2044
I42
VSimpleName: getCookies
p2045
tp2046
I4
s(Vinsert
p2047
I42
VSimpleName: inject
p2048
tp2049
I6
s(Vinsert
p2050
I40
VQualifiedName: literals.length
p2051
tp2052
I1
s(Vinsert
p2053
I39
VPrimitiveType: char
p2054
tp2055
I1
s(Vinsert
p2056
I42
VSimpleName: getLogger
p2057
tp2058
I5
s(Vinsert
p2059
I42
VSimpleName: HttpServletRequest
p2060
tp2061
I10
s(Vinsert
p2062
I42
VSimpleName: Prototype
p2063
tp2064
I1
s(Vinsert
p2065
I42
VSimpleName: actual
p2066
tp2067
I5
s(Vinsert
p2068
I42
VSimpleName: State
p2069
tp2070
I3
s(Vinsert
p2071
I42
VSimpleName: getDelegate
p2072
tp2073
I2
s(Vinsert
p2074
I42
VSimpleName: members
p2075
tp2076
I1
s(Vinsert
p2077
I45
VStringLiteral: "via the 'guice.module' property in XML."
p2078
tp2079
I2
s(Vinsert
p2080
I40
VQualifiedName: InjectorShell.Builder
p2081
tp2082
I2
s(Vinsert
p2083
I42
VSimpleName: Provider
p2084
tp2085
I24
s(Vinsert
p2086
I66
VTextElement: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
p2087
tp2088
I1
s(Vinsert
p2089
I40
VQualifiedName: com.google.inject.spi.TypeConverterBinding
p2090
tp2091
I1
s(Vinsert
p2092
I42
VSimpleName: makeMap
p2093
tp2094
I2
s(Vinsert
p2095
I74
VParameterizedType: Provider<T>
p2096
tp2097
I8
s(Vinsert
p2098
I42
VSimpleName: bindingProvider
p2099
tp2100
I1
s(Vinsert
p2101
I34
VNumberLiteral: 31
p2102
tp2103
I2
s(Vinsert
p2104
I42
VSimpleName: getClassOptional
p2105
tp2106
I1
s(Vinsert
p2107
I42
VSimpleName: baseModules
p2108
tp2109
I2
s(Vinsert
p2110
I42
VSimpleName: Indexer
p2111
tp2112
I3
s(Vinsert
p2113
I40
VQualifiedName: container.errorHandler
p2114
tp2115
I1
s(Vinsert
p2116
I42
VSimpleName: sayHi
p2117
tp2118
I1
s(Vinsert
p2119
I42
VSimpleName: errorInjectingConstructor
p2120
tp2121
I1
s(Vinsert
p2122
I42
VSimpleName: exactBindingAnnotationsRequired
p2123
tp2124
I4
s(Vinsert
p2125
I42
VSimpleName: LoggerFactory
p2126
tp2127
I2
s(Vinsert
p2128
I42
VSimpleName: urlPatterns
p2129
tp2130
I1
s(Vinsert
p2131
I42
VSimpleName: bindingToProvider
p2132
tp2133
I1
s(Vinsert
p2134
I42
VSimpleName: container
p2135
tp2136
I30
s(Vinsert
p2137
I42
VSimpleName: GUAVA_JAR
p2138
tp2139
I1
s(Vinsert
p2140
I42
VSimpleName: getServletModuleBuilder
p2141
tp2142
I1
s(Vinsert
p2143
I42
VSimpleName: register
p2144
tp2145
I5
s(Vinsert
p2146
I42
VSimpleName: bindsB
p2147
tp2148
I1
s(Vinsert
p2149
I45
VStringLiteral: " (persistent object persists)"
p2150
tp2151
I1
s(Vinsert
p2152
I40
VQualifiedName: moreErrors.errors
p2153
tp2154
I2
s(Vinsert
p2155
I42
VSimpleName: Command
p2156
tp2157
I2
s(Vinsert
p2158
I42
VSimpleName: RemoteProvider
p2159
tp2160
I3
s(Vinsert
p2161
I42
VSimpleName: UnsupportedOperationException
p2162
tp2163
I9
s(Vinsert
p2164
I74
VParameterizedType: Entry<K,Provider<V>>
p2165
tp2166
I1
s(Vinsert
p2167
I74
VParameterizedType: Key<Integer>
p2168
tp2169
I2
s(Vinsert
p2170
I43
VSimpleType: Foo.Factory
p2171
tp2172
I1
s(Vinsert
p2173
I45
VStringLiteral: "abc"
p2174
tp2175
I2
s(Vinsert
p2176
I42
VSimpleName: elements
p2177
tp2178
I18
s(Vinsert
p2179
I42
VSimpleName: visitBinding
p2180
tp2181
I4
s(Vinsert
p2182
I43
VSimpleType: ColoredCarFactory
p2183
tp2184
I6
s(Vinsert
p2185
I42
VSimpleName: pathInfo
p2186
tp2187
I3
s(Vinsert
p2188
I42
VSimpleName: withDefaultChecked
p2189
tp2190
I1
s(Vinsert
p2191
I42
VSimpleName: Nullable
p2192
tp2193
I2
s(Vinsert
p2194
I40
VQualifiedName: injector.errorHandler
p2195
tp2196
I1
s(Vinsert
p2197
I43
VSimpleType: ServletContextEvent
p2198
tp2199
I2
s(Vinsert
p2200
I43
VSimpleType: Multibinder
p2201
tp2202
I2
s(Vinsert
p2203
I43
VSimpleType: Entry
p2204
tp2205
I2
s(Vinsert
p2206
I74
VParameterizedType: ArrayList<CreationListener>
p2207
tp2208
I1
s(Vinsert
p2209
I42
VSimpleName: linkedBinding
p2210
tp2211
I9
s(Vinsert
p2212
I42
VSimpleName: annotationStrategy
p2213
tp2214
I1
s(Vinsert
p2215
I42
VSimpleName: BUILT_IN_BINDINGS
p2216
tp2217
I1
s(Vinsert
p2218
I42
VSimpleName: removeAttribute
p2219
tp2220
I2
s(Vinsert
p2221
I74
VParameterizedType: GetProviderCommand<T>
p2222
tp2223
I1
s(Vinsert
p2224
I42
VSimpleName: GUICE_CLASS_LOADER
p2225
tp2226
I1
s(Vinsert
p2227
I45
VStringLiteral: "(unknown)"
p2228
tp2229
I1
s(Vinsert
p2230
I45
VStringLiteral: "%s may not declare any new methods, but declared %s"
p2231
tp2232
I1
s(Vinsert
p2233
I40
VQualifiedName: com.google.inject.commands.CommandReplayerTest
p2234
tp2235
I1
s(Vinsert
p2236
I42
VSimpleName: request
p2237
tp2238
I25
s(Vinsert
p2239
I42
VSimpleName: requestScopeContext
p2240
tp2241
I1
s(Vinsert
p2242
I42
VSimpleName: baseElements
p2243
tp2244
I2
s(Vinsert
p2245
I42
VSimpleName: failMsg
p2246
tp2247
I1
s(Vinsert
p2248
I42
VSimpleName: Joiner
p2249
tp2250
I1
s(Vinsert
p2251
I45
VStringLiteral: "Binding indexing"
p2252
tp2253
I1
s(Vinsert
p2254
I40
VQualifiedName: CustomConcurrentHashMap.Builder
p2255
tp2256
I1
s(Vinsert
p2257
I42
VSimpleName: testStackTraceElement
p2258
tp2259
I1
s(Vinsert
p2260
I42
VSimpleName: ConvertedConstantBindingImpl
p2261
tp2262
I2
s(Vinsert
p2263
I43
VSimpleType: ErrorHandler
p2264
tp2265
I1
s(Vinsert
p2266
I42
VSimpleName: ClassBindingImpl
p2267
tp2268
I1
s(Vinsert
p2269
I42
VSimpleName: FactoryProvider
p2270
tp2271
I3
s(Vinsert
p2272
I74
VParameterizedType: List<Key<?>>
p2273
tp2274
I1
s(Vinsert
p2275
I42
VSimpleName: getType
p2276
tp2277
I19
s(Vinsert
p2278
I42
VSimpleName: andReturn
p2279
tp2280
I17
s(Vinsert
p2281
I42
VSimpleName: Suppliers
p2282
tp2283
I1
s(Vinsert
p2284
I42
VSimpleName: secondEntry
p2285
tp2286
I1
s(Vinsert
p2287
I42
VSimpleName: ownerType
p2288
tp2289
I1
s(Vinsert
p2290
I42
VSimpleName: ErrorMessage
p2291
tp2292
I10
s(Vinsert
p2293
I43
VSimpleType: LinkedHashMap
p2294
tp2295
I1
s(Vinsert
p2296
I42
VSimpleName: loadFinalizer
p2297
tp2298
I2
s(Vinsert
p2299
I42
VSimpleName: userMembersInjectors
p2300
tp2301
I2
s(Vinsert
p2302
I42
VSimpleName: callList
p2303
tp2304
I1
s(Vinsert
p2305
I74
VParameterizedType: Iterable<? extends Module>
p2306
tp2307
I3
s(Vinsert
p2308
I42
VSimpleName: sourceProvider
p2309
tp2310
I14
s(Vinsert
p2311
I42
VSimpleName: getMessage
p2312
tp2313
I54
s(Vinsert
p2314
I42
VSimpleName: mustangPolicy
p2315
tp2316
I2
s(Vinsert
p2317
I42
VSimpleName: injectableConstructor
p2318
tp2319
I2
s(Vinsert
p2320
I43
VSimpleType: Convertible
p2321
tp2322
I1
s(Vinsert
p2323
I42
VSimpleName: addAll
p2324
tp2325
I2
s(Vinsert
p2326
I42
VSimpleName: putAll
p2327
tp2328
I1
s(Vinsert
p2329
I40
VQualifiedName: Delegater.Factory
p2330
tp2331
I1
s(Vinsert
p2332
I43
VSimpleType: Injected
p2333
tp2334
I1
s(Vinsert
p2335
I42
VSimpleName: newPrivateBinder
p2336
tp2337
I3
s(Vinsert
p2338
I45
VStringLiteral: "createStrangeCatWithConstructorForOwner"
p2339
tp2340
I1
s(Vinsert
p2341
I42
VSimpleName: getMembersInjectors
p2342
tp2343
I1
s(Vinsert
p2344
I42
VSimpleName: didWeStartWork
p2345
tp2346
I2
s(Vinsert
p2347
I42
VSimpleName: InjectionPoint
p2348
tp2349
I40
s(Vinsert
p2350
I42
VSimpleName: sourceProviderFor
p2351
tp2352
I1
s(Vinsert
p2353
I42
VSimpleName: ProviderMapEntry
p2354
tp2355
I3
s(Vinsert
p2356
I40
VQualifiedName: org.aopalliance.intercept.MethodInterceptor
p2357
tp2358
I1
s(Vinsert
p2359
I42
VSimpleName: desc
p2360
tp2361
I1
s(Vinsert
p2362
I42
VSimpleName: anyTimes
p2363
tp2364
I7
s(Vinsert
p2365
I39
VPrimitiveType: byte
p2366
tp2367
I1
s(Vinsert
p2368
I42
VSimpleName: arraycopy
p2369
tp2370
I1
s(Vinsert
p2371
I45
VStringLiteral: " at "
p2372
tp2373
I1
s(Vinsert
p2374
I42
VSimpleName: concurrencyLevel
p2375
tp2376
I1
s(Vinsert
p2377
I43
VSimpleType: InstanceBinding
p2378
tp2379
I2
s(Vinsert
p2380
I76
VWildcardType: ? super T
p2381
tp2382
I19
s(Vinsert
p2383
I42
VSimpleName: newOwner
p2384
tp2385
I1
s(Vinsert
p2386
I42
VSimpleName: RequestParameters
p2387
tp2388
I1
s(Vinsert
p2389
I74
VParameterizedType: TypeLiteral<List<Class<?>>>
p2390
tp2391
I1
s(Vinsert
p2392
I42
VSimpleName: ProvisionInvocation
p2393
tp2394
I1
s(Vinsert
p2395
I42
VSimpleName: SingletonFactory
p2396
tp2397
I2
s(Vinsert
p2398
I42
VSimpleName: constructionProxyOrErrors
p2399
tp2400
I3
s(Vinsert
p2401
I42
VSimpleName: SubModuleCommand
p2402
tp2403
I4
s(Vinsert
p2404
I74
VParameterizedType: Future<State>
p2405
tp2406
I2
s(Vinsert
p2407
I42
VSimpleName: getModuleClassName
p2408
tp2409
I1
s(Vinsert
p2410
I42
VSimpleName: Fleet
p2411
tp2412
I1
s(Vinsert
p2413
I42
VSimpleName: MustangInsurance
p2414
tp2415
I4
s(Vinsert
p2416
I42
VSimpleName: missingImplementation
p2417
tp2418
I2
s(Vinsert
p2419
I74
VParameterizedType: ConstructionProxy<T>
p2420
tp2421
I1
s(Vinsert
p2422
I42
VSimpleName: getStackTrace
p2423
tp2424
I5
s(Vinsert
p2425
I42
VSimpleName: createInjectorBuilder
p2426
tp2427
I2
s(Vinsert
p2428
I45
VStringLiteral: "created (or Elements.getElements finishes)"
p2429
tp2430
I1
s(Vinsert
p2431
I74
VParameterizedType: CheckedProviderSubjectFactory<T,P>
p2432
tp2433
I1
s(Vinsert
p2434
I42
VSimpleName: Only
p2435
tp2436
I2
s(Vinsert
p2437
I42
VSimpleName: rootedAt
p2438
tp2439
I1
s(Vinsert
p2440
I43
VSimpleType: EntityManager
p2441
tp2442
I6
s(Vinsert
p2443
I42
VSimpleName: PatternSyntaxException
p2444
tp2445
I1
s(Vinsert
p2446
I42
VSimpleName: ignored
p2447
tp2448
I2
s(Vinsert
p2449
I45
VStringLiteral: "More than one servlet was mapped to the same URI pattern: "
p2450
tp2451
I1
s(Vinsert
p2452
I43
VSimpleType: ProviderBinding
p2453
tp2454
I2
s(Vinsert
p2455
I42
VSimpleName: configurationErrorHandler
p2456
tp2457
I2
s(Vinsert
p2458
I43
VSimpleType: InnerCoreModule
p2459
tp2460
I2
s(Vinsert
p2461
I42
VSimpleName: InjectableType
p2462
tp2463
I3
s(Vinsert
p2464
I42
VSimpleName: ScopingVisitor
p2465
tp2466
I1
s(Vinsert
p2467
I42
VSimpleName: errorMessages
p2468
tp2469
I5
s(Vinsert
p2470
I42
VSimpleName: from
p2471
tp2472
I6
s(Vinsert
p2473
I43
VSimpleType: SubMockRemoteProvider
p2474
tp2475
I1
s(Vinsert
p2476
I42
VSimpleName: withErrorHandler
p2477
tp2478
I2
s(Vinsert
p2479
I43
VSimpleType: MembersInjectorImpl
p2480
tp2481
I2
s(Vinsert
p2482
I42
VSimpleName: TestCase
p2483
tp2484
I3
s(Vinsert
p2485
I42
VSimpleName: method
p2486
tp2487
I56
s(Vinsert
p2488
I42
VSimpleName: getParameters
p2489
tp2490
I2
s(Vinsert
p2491
I42
VSimpleName: R
p2492
tp2493
I1
s(Vinsert
p2494
I43
VSimpleType: B
p2495
tp2496
I12
s(Vinsert
p2497
I42
VSimpleName: UNIQUE_TEXT_MERGE
p2498
tp2499
I1
s(Vinsert
p2500
I43
VSimpleType: CreationException
p2501
tp2502
I26
s(Vinsert
p2503
I74
VParameterizedType: MembersInjector<? super T>
p2504
tp2505
I2
s(Vinsert
p2506
I42
VSimpleName: tee
p2507
tp2508
I2
s(Vinsert
p2509
I45
VStringLiteral: "k_"
p2510
tp2511
I1
s(Vinsert
p2512
I42
VSimpleName: BindingCollector
p2513
tp2514
I1
s(Vinsert
p2515
I42
VSimpleName: valueKeyToEntryBindingBuilder
p2516
tp2517
I1
s(Vinsert
p2518
I43
VSimpleType: InjectableTypeListenerBinding
p2519
tp2520
I6
s(Vinsert
p2521
I42
VSimpleName: removeFrom
p2522
tp2523
I1
s(Vinsert
p2524
I42
VSimpleName: methodInvocation
p2525
tp2526
I4
s(Vinsert
p2527
I66
VTextElement: limitations under the License.
p2528
tp2529
I3
s(Vinsert
p2530
I74
VParameterizedType: List<DependencyAndSource>
p2531
tp2532
I1
s(Vinsert
p2533
I76
VWildcardType: ? extends Annotation
p2534
tp2535
I26
s(Vinsert
p2536
I42
VSimpleName: factories
p2537
tp2538
I1
s(Vinsert
p2539
I42
VSimpleName: shellBuilder
p2540
tp2541
I2
s(Vinsert
p2542
I42
VSimpleName: getTypeConverterBindings
p2543
tp2544
I2
s(Vinsert
p2545
I42
VSimpleName: declaredBy
p2546
tp2547
I1
s(Vinsert
p2548
I43
VSimpleType: Lightning
p2549
tp2550
I1
s(Vinsert
p2551
I42
VSimpleName: AtomicBoolean
p2552
tp2553
I2
s(Vinsert
p2554
I42
VSimpleName: D
p2555
tp2556
I8
s(Vinsert
p2557
I42
VSimpleName: constructionContexts
p2558
tp2559
I2
s(Vinsert
p2560
I42
VSimpleName: CountingInterceptor
p2561
tp2562
I4
s(Vinsert
p2563
I42
VSimpleName: visitConstructor
p2564
tp2565
I1
s(Vinsert
p2566
I42
VSimpleName: badDeps
p2567
tp2568
I3
s(Vinsert
p2569
I42
VSimpleName: object
p2570
tp2571
I12
s(Vinsert
p2572
I45
VStringLiteral: "'lazy' is incompatible with Provider valued fields"
p2573
tp2574
I1
s(Vinsert
p2575
I42
VSimpleName: RESULT_KEY
p2576
tp2577
I2
s(Vinsert
p2578
I66
VTextElement: Adds an error message if the implementation has already been bound.
p2579
tp2580
I1
s(Vinsert
p2581
I42
VSimpleName: converterBinding
p2582
tp2583
I1
s(Vinsert
p2584
I74
VParameterizedType: Key<T>
p2585
tp2586
I10
s(Vinsert
p2587
I42
VSimpleName: bindingAnnotation
p2588
tp2589
I3
s(Vinsert
p2590
I42
VSimpleName: arrayOf
p2591
tp2592
I3
s(Vinsert
p2593
I74
VParameterizedType: Provider<?>
p2594
tp2595
I2
s(Vinsert
p2596
I42
VSimpleName: RealElement
p2597
tp2598
I1
s(Vinsert
p2599
I42
VSimpleName: fromPoint
p2600
tp2601
I1
s(Vinsert
p2602
I42
VSimpleName: getErrorMessages
p2603
tp2604
I8
s(Vinsert
p2605
I43
VSimpleType: HasInjections
p2606
tp2607
I1
s(Vinsert
p2608
I42
VSimpleName: uniqueId
p2609
tp2610
I3
s(Vinsert
p2611
I42
VSimpleName: lockFactory
p2612
tp2613
I1
s(Vinsert
p2614
I40
VQualifiedName: RealElement.BindingBuilder
p2615
tp2616
I1
s(Vinsert
p2617
I40
VQualifiedName: Integer.MAX_VALUE
p2618
tp2619
I1
s(Vinsert
p2620
I42
VSimpleName: getParameterIndex
p2621
tp2622
I2
s(Vinsert
p2623
I42
VSimpleName: FastClass
p2624
tp2625
I4
s(Vinsert
p2626
I42
VSimpleName: subtypeOf
p2627
tp2628
I4
s(Vinsert
p2629
I42
VSimpleName: Counter
p2630
tp2631
I3
s(Vinsert
p2632
I42
VSimpleName: setTailPortId
p2633
tp2634
I1
s(Vinsert
p2635
I42
VSimpleName: ComponentAnnotationTest
p2636
tp2637
I2
s(Vinsert
p2638
I74
VParameterizedType: Key<TProvider<List>>
p2639
tp2640
I1
s(Vinsert
p2641
I42
VSimpleName: filterChain
p2642
tp2643
I6
s(Vinsert
p2644
I42
VSimpleName: getInternalDependencies
p2645
tp2646
I1
s(Vinsert
p2647
I43
VSimpleType: Supplier
p2648
tp2649
I1
s(Vinsert
p2650
I43
VSimpleType: com.google.inject.multibindings.MapBinderTest
p2651
tp2652
I1
s(Vinsert
p2653
I43
VSimpleType: Key
p2654
tp2655
I87
s(Vinsert
p2656
I43
VSimpleType: LineNumberAnnotationVisitor
p2657
tp2658
I2
s(Vinsert
p2659
I42
VSimpleName: TestVisibilityClassLoader
p2660
tp2661
I1
s(Vinsert
p2662
I42
VSimpleName: entryOfJavaxProviderOf
p2663
tp2664
I1
s(Vinsert
p2665
I74
VParameterizedType: Multibinder<Person>
p2666
tp2667
I1
s(Vinsert
p2668
I42
VSimpleName: propertyValue
p2669
tp2670
I1
s(Vinsert
p2671
I42
VSimpleName: getExpectedType
p2672
tp2673
I1
s(Vinsert
p2674
I43
VSimpleType: AnimalHouse
p2675
tp2676
I1
s(Vinsert
p2677
I2
VArrayAccess
p2678
tp2679
I50
s(Vinsert
p2680
I42
VSimpleName: Renewable
p2681
tp2682
I1
s(Vinsert
p2683
I42
VSimpleName: Formatter
p2684
tp2685
I1
s(Vinsert
p2686
I42
VSimpleName: httpRespKey
p2687
tp2688
I1
s(Vinsert
p2689
I42
VSimpleName: TypeVariable
p2690
tp2691
I6
s(Vinsert
p2692
I42
VSimpleName: EXPIRING_TIME
p2693
tp2694
I1
s(Vinsert
p2695
I40
VQualifiedName: primitives.length
p2696
tp2697
I1
s(Vinsert
p2698
I42
VSimpleName: valueOf
p2699
tp2700
I3
s(Vinsert
p2701
I43
VSimpleType: BaseClass
p2702
tp2703
I1
s(Vinsert
p2704
I42
VSimpleName: collectionOfJavaxProvidersOfEntryMatch
p2705
tp2706
I2
s(Vinsert
p2707
I42
VSimpleName: ProvidesMethodTargetVisitor
p2708
tp2709
I2
s(Vinsert
p2710
I74
VParameterizedType: MembersInjectorImpl<T>
p2711
tp2712
I2
s(Vinsert
p2713
I45
VStringLiteral: "This is a proxy used to support"
p2714
tp2715
I1
s(Vinsert
p2716
I42
VSimpleName: getGenericReturnType
p2717
tp2718
I1
s(Vinsert
p2719
I42
VSimpleName: ImplementationNode
p2720
tp2721
I1
s(Vinsert
p2722
I43
VSimpleType: ProtectedClassProtectedMethod
p2723
tp2724
I1
s(Vinsert
p2725
I43
VSimpleType: SubClassModule
p2726
tp2727
I1
s(Vinsert
p2728
I43
VSimpleType: StaticInjectionTest.Static
p2729
tp2730
I1
s(Vinsert
p2731
I40
VQualifiedName: injector.explicitBindings
p2732
tp2733
I1
s(Vinsert
p2734
I42
VSimpleName: hasAttributes
p2735
tp2736
I2
s(Vinsert
p2737
I42
VSimpleName: isBindingAnnotation
p2738
tp2739
I3
s(Vinsert
p2740
I43
VSimpleType: Fiat
p2741
tp2742
I1
s(Vinsert
p2743
I42
VSimpleName: ConfigurationException
p2744
tp2745
I24
s(Vinsert
p2746
I43
VSimpleType: Provides
p2747
tp2748
I3
s(Vinsert
p2749
I42
VSimpleName: SpringIntegration
p2750
tp2751
I1
s(Vinsert
p2752
I42
VSimpleName: AbstractModule
p2753
tp2754
I54
s(Vinsert
p2755
I40
VQualifiedName: reference.finalizeReferentCalled
p2756
tp2757
I1
s(Vinsert
p2758
I42
VSimpleName: barParent
p2759
tp2760
I1
s(Vinsert
p2761
I16
VConditionalExpression
p2762
tp2763
I35
s(Vinsert
p2764
I74
VParameterizedType: List<? extends String>
p2765
tp2766
I1
s(Vinsert
p2767
I42
VSimpleName: ProviderMethodsModule
p2768
tp2769
I1
s(Vinsert
p2770
I42
VSimpleName: MethodInvocation
p2771
tp2772
I3
s(Vinsert
p2773
I42
VSimpleName: getTypeConverterBinding
p2774
tp2775
I2
s(Vinsert
p2776
I42
VSimpleName: configurePrivateBindings
p2777
tp2778
I1
s(Vinsert
p2779
I45
VStringLiteral: "/test.html"
p2780
tp2781
I1
s(Vinsert
p2782
I42
VSimpleName: createCycleDependenciesMessage
p2783
tp2784
I1
s(Vinsert
p2785
I42
VSimpleName: barMethod
p2786
tp2787
I2
s(Vinsert
p2788
I42
VSimpleName: pipeline
p2789
tp2790
I6
s(Vinsert
p2791
I42
VSimpleName: requestMock
p2792
tp2793
I16
s(Vinsert
p2794
I42
VSimpleName: expectedUserLinkedActual
p2795
tp2796
I2
s(Vinsert
p2797
I45
VStringLiteral: " Please install your module via a GuiceServletContextListener instead."
p2798
tp2799
I2
s(Vinsert
p2800
I43
VSimpleType: FinalizableReference
p2801
tp2802
I3
s(Vinsert
p2803
I42
VSimpleName: testModuleRequestInjection
p2804
tp2805
I1
s(Vinsert
p2806
I74
VParameterizedType: ProvisionInvocation<T>
p2807
tp2808
I1
s(Vinsert
p2809
I42
VSimpleName: classMembersInjector
p2810
tp2811
I1
s(Vinsert
p2812
I43
VSimpleType: Enumeration
p2813
tp2814
I3
s(Vinsert
p2815
I42
VSimpleName: injectAll
p2816
tp2817
I1
s(Vinsert
p2818
I42
VSimpleName: current
p2819
tp2820
I3
s(Vinsert
p2821
I5
VArrayType: URL[]
p2822
tp2823
I1
s(Vinsert
p2824
I74
VParameterizedType: InstanceBindingImpl<?>
p2825
tp2826
I1
s(Vinsert
p2827
I42
VSimpleName: jitBindings
p2828
tp2829
I1
s(Vinsert
p2830
I45
VStringLiteral: "CustomConverter which matches only(java.util.Date) (bound at "
p2831
tp2832
I1
s(Vinsert
p2833
I45
VStringLiteral: " on com.google.inject.ScopesTest$MultiplyAnnotated."
p2834
tp2835
I1
s(Vinsert
p2836
I42
VSimpleName: getElements
p2837
tp2838
I7
s(Vinsert
p2839
I43
VSimpleType: Date
p2840
tp2841
I2
s(Vinsert
p2842
I42
VSimpleName: typeLiteral
p2843
tp2844
I5
s(Vinsert
p2845
I3
VArrayCreation
p2846
tp2847
I12
s(Vinsert
p2848
I42
VSimpleName: subModuleCommand
p2849
tp2850
I1
s(Vinsert
p2851
I42
VSimpleName: BindingBuilder
p2852
tp2853
I2
s(Vinsert
p2854
I40
VQualifiedName: B.instanceCount
p2855
tp2856
I1
s(Vinsert
p2857
I42
VSimpleName: newFakeHttpSession
p2858
tp2859
I1
s(Vinsert
p2860
I42
VSimpleName: readObject
p2861
tp2862
I1
s(Vinsert
p2863
I42
VSimpleName: testQueryInRequestUri
p2864
tp2865
I1
s(Vinsert
p2866
I45
VStringLiteral: "phone.xml"
p2867
tp2868
I1
s(Vinsert
p2869
I42
VSimpleName: stringMethod
p2870
tp2871
I1
s(Vinsert
p2872
I45
VStringLiteral: "Wine"
p2873
tp2874
I2
s(Vinsert
p2875
I42
VSimpleName: proceedingFilterChain
p2876
tp2877
I4
s(Vinsert
p2878
I42
VSimpleName: addHandler
p2879
tp2880
I1
s(Vinsert
p2881
I40
VQualifiedName: com.google.common.base.Preconditions
p2882
tp2883
I1
s(Vinsert
p2884
I42
VSimpleName: users
p2885
tp2886
I1
s(Vinsert
p2887
I42
VSimpleName: isCircularProxy
p2888
tp2889
I2
s(Vinsert
p2890
I42
VSimpleName: SERVLET
p2891
tp2892
I1
s(Vinsert
p2893
I42
VSimpleName: Result
p2894
tp2895
I1
s(Vinsert
p2896
I42
VSimpleName: ParameterListKey
p2897
tp2898
I1
s(Vinsert
p2899
I42
VSimpleName: ServletKeyBindingBuilder
p2900
tp2901
I1
s(Vinsert
p2902
I42
VSimpleName: concreteKey
p2903
tp2904
I1
s(Vinsert
p2905
I42
VSimpleName: boundClass
p2906
tp2907
I3
s(Vinsert
p2908
I74
VParameterizedType: Class<? extends Annotation>
p2909
tp2910
I24
s(Vinsert
p2911
I42
VSimpleName: scopedBindingBuilder
p2912
tp2913
I3
s(Vinsert
p2914
I45
VStringLiteral: "Merge did not store state or did not return persistent copy"
p2915
tp2916
I1
s(Vinsert
p2917
I74
VParameterizedType: InternalFactory<?>
p2918
tp2919
I1
s(Vinsert
p2920
I42
VSimpleName: addMethodAspect
p2921
tp2922
I1
s(Vinsert
p2923
I74
VParameterizedType: InjectionListener<? super T>
p2924
tp2925
I2
s(Vinsert
p2926
I17
VConstructorInvocation
p2927
tp2928
I5
s(Vinsert
p2929
I42
VSimpleName: DefaultSourceProvider
p2930
tp2931
I1
s(Vinsert
p2932
I43
VSimpleType: UntargettedBindingImpl
p2933
tp2934
I1
s(Vinsert
p2935
I40
VQualifiedName: OptionalBinder.DefaultImpl
p2936
tp2937
I1
s(Vinsert
p2938
I42
VSimpleName: cw
p2939
tp2940
I2
s(Vinsert
p2941
I43
VSimpleType: ScopeBinding
p2942
tp2943
I2
s(Vinsert
p2944
I42
VSimpleName: filterPipeline
p2945
tp2946
I1
s(Vinsert
p2947
I74
VParameterizedType: BindingImpl<T>
p2948
tp2949
I4
s(Vinsert
p2950
I40
VQualifiedName: com.google.inject.internal.BytecodeGen.Visibility
p2951
tp2952
I1
s(Vinsert
p2953
I42
VSimpleName: separateNullFoos
p2954
tp2955
I2
s(Vinsert
p2956
I42
VSimpleName: getComment
p2957
tp2958
I1
s(Vinsert
p2959
I42
VSimpleName: CheckedProviderSubjectFactory
p2960
tp2961
I1
s(Vinsert
p2962
I42
VSimpleName: getBindingSource
p2963
tp2964
I1
s(Vinsert
p2965
I42
VSimpleName: SummerException
p2966
tp2967
I1
s(Vinsert
p2968
I42
VSimpleName: getSourceString
p2969
tp2970
I2
s(Vinsert
p2971
I42
VSimpleName: state
p2972
tp2973
I14
s(Vinsert
p2974
I42
VSimpleName: ex
p2975
tp2976
I1
s(Vinsert
p2977
I42
VSimpleName: optionalProviderT
p2978
tp2979
I1
s(Vinsert
p2980
I74
VParameterizedType: BindingBuilder<T>
p2981
tp2982
I2
s(Vinsert
p2983
I42
VSimpleName: FinalizablePhantomReference
p2984
tp2985
I1
s(Vinsert
p2986
I42
VSimpleName: ExposedBinding
p2987
tp2988
I4
s(Vinsert
p2989
I42
VSimpleName: getDeclaredMethod
p2990
tp2991
I2
s(Vinsert
p2992
I43
VSimpleType: FilterChain
p2993
tp2994
I7
s(Vinsert
p2995
I42
VSimpleName: addForInstanceMethodsAndFields
p2996
tp2997
I1
s(Vinsert
p2998
I43
VSimpleType: CommandReplayer
p2999
tp3000
I2
s(Vinsert
p3001
I42
VSimpleName: atInjectRequired
p3002
tp3003
I5
s(Vinsert
p3004
I42
VSimpleName: EagerSingleton
p3005
tp3006
I1
s(Vinsert
p3007
I42
VSimpleName: NumericValue
p3008
tp3009
I3
s(Vinsert
p3010
I45
VStringLiteral: "/new-uri"
p3011
tp3012
I1
s(Vinsert
p3013
I42
VSimpleName: constructionProxyFactory
p3014
tp3015
I3
s(Vinsert
p3016
I42
VSimpleName: configure
p3017
tp3018
I91
s(Vinsert
p3019
I66
VTextElement: This test is in a separate package so we can test package-level visibility
p3020
tp3021
I1
s(Vinsert
p3022
I74
VParameterizedType: InternalFactory<T>
p3023
tp3024
I3
s(Vinsert
p3025
I42
VSimpleName: logMessage
p3026
tp3027
I1
s(Vinsert
p3028
I45
VStringLiteral: "at "
p3029
tp3030
I4
s(Vinsert
p3031
I66
VTextElement: Returns the scoping annotation, or null if there isn't one.
p3032
tp3033
I1
s(Vinsert
p3034
I42
VSimpleName: TransactionalObject
p3035
tp3036
I1
s(Vinsert
p3037
I42
VSimpleName: expectedType
p3038
tp3039
I1
s(Vinsert
p3040
I42
VSimpleName: CommandReplayer
p3041
tp3042
I2
s(Vinsert
p3043
I45
VStringLiteral: "package("
p3044
tp3045
I1
s(Vinsert
p3046
I42
VSimpleName: dao
p3047
tp3048
I3
s(Vinsert
p3049
I42
VSimpleName: IFoo
p3050
tp3051
I1
s(Vinsert
p3052
I42
VSimpleName: init
p3053
tp3054
I5
s(Vinsert
p3055
I42
VSimpleName: gProvider
p3056
tp3057
I1
s(Vinsert
p3058
I43
VSimpleType: ReturnNullInterceptor
p3059
tp3060
I2
s(Vinsert
p3061
I42
VSimpleName: enterContext
p3062
tp3063
I4
s(Vinsert
p3064
I45
VStringLiteral: "lime!"
p3065
tp3066
I1
s(Vinsert
p3067
I42
VSimpleName: ServletContext
p3068
tp3069
I4
s(Vinsert
p3070
I42
VSimpleName: loadStrategy
p3071
tp3072
I5
s(Vinsert
p3073
I42
VSimpleName: ReferenceMapTest
p3074
tp3075
I2
s(Vinsert
p3076
I42
VSimpleName: configurePersistence
p3077
tp3078
I1
s(Vinsert
p3079
I5
VArrayType: ProviderMethod[]
p3080
tp3081
I1
s(Vinsert
p3082
I42
VSimpleName: matcher
p3083
tp3084
I6
s(Vinsert
p3085
I42
VSimpleName: injectionPoint
p3086
tp3087
I31
s(Vinsert
p3088
I42
VSimpleName: acceptTargetVisitor
p3089
tp3090
I16
s(Vinsert
p3091
I42
VSimpleName: GuicifiedProvider
p3092
tp3093
I1
s(Vinsert
p3094
I42
VSimpleName: ElementSource
p3095
tp3096
I14
s(Vinsert
p3097
I42
VSimpleName: size
p3098
tp3099
I36
s(Vinsert
p3100
I74
VParameterizedType: Key<Object>
p3101
tp3102
I1
s(Vinsert
p3103
I42
VSimpleName: queue
p3104
tp3105
I3
s(Vinsert
p3106
I42
VSimpleName: reserialize
p3107
tp3108
I2
s(Vinsert
p3109
I42
VSimpleName: getPrivateBinder
p3110
tp3111
I1
s(Vinsert
p3112
I45
VStringLiteral: "hashCode"
p3113
tp3114
I1
s(Vinsert
p3115
I45
VStringLiteral: "1) "
p3116
tp3117
I1
s(Vinsert
p3118
I45
VStringLiteral: "ahssd"
p3119
tp3120
I1
s(Vinsert
p3121
I40
VQualifiedName: foo.fromMethod
p3122
tp3123
I1
s(Vinsert
p3124
I42
VSimpleName: inSubpackage
p3125
tp3126
I2
s(Vinsert
p3127
I43
VSimpleType: ServletContext
p3128
tp3129
I4
s(Vinsert
p3130
I43
VSimpleType: ServletModuleTargetVisitor
p3131
tp3132
I2
s(Vinsert
p3133
I42
VSimpleName: member
p3134
tp3135
I37
s(Vinsert
p3136
I74
VParameterizedType: LinkedBindingBuilder<T>
p3137
tp3138
I2
s(Vinsert
p3139
I42
VSimpleName: bProvider
p3140
tp3141
I1
s(Vinsert
p3142
I43
VSimpleType: RequestStaticInjectionCommand
p3143
tp3144
I3
s(Vinsert
p3145
I42
VSimpleName: workManager
p3146
tp3147
I5
s(Vinsert
p3148
I42
VSimpleName: methodInterceptors
p3149
tp3150
I1
s(Vinsert
p3151
I66
VTextElement:  as a reference point for
p3152
tp3153
I1
s(Vinsert
p3154
I43
VSimpleType: Member
p3155
tp3156
I8
s(Vinsert
p3157
I74
VParameterizedType: List<?>
p3158
tp3159
I1
s(Vinsert
p3160
I42
VSimpleName: newLinkedHashMap
p3161
tp3162
I1
s(Vinsert
p3163
I43
VSimpleType: ProvisionInvocation
p3164
tp3165
I1
s(Vinsert
p3166
I45
VStringLiteral: "test"
p3167
tp3168
I6
s(Vinsert
p3169
I42
VSimpleName: item
p3170
tp3171
I2
s(Vinsert
p3172
I40
VQualifiedName: OptionalBinder.Default
p3173
tp3174
I1
s(Vinsert
p3175
I42
VSimpleName: defaultReadObject
p3176
tp3177
I1
s(Vinsert
p3178
I45
VStringLiteral: "5"
p3179
tp3180
I1
s(Vinsert
p3181
I42
VSimpleName: exposeInternal
p3182
tp3183
I1
s(Vinsert
p3184
I42
VSimpleName: exceptionLiterals
p3185
tp3186
I1
s(Vinsert
p3187
I42
VSimpleName: annotationInstance
p3188
tp3189
I1
s(Vinsert
p3190
I42
VSimpleName: typeMatcher
p3191
tp3192
I7
s(Vinsert
p3193
I74
VParameterizedType: DelegatingInvocationHandler<T>
p3194
tp3195
I1
s(Vinsert
p3196
I40
VQualifiedName: java.lang.reflect.Method
p3197
tp3198
I1
s(Vinsert
p3199
I43
VSimpleType: OptionalBinder.DefaultImpl
p3200
tp3201
I1
s(Vinsert
p3202
I42
VSimpleName: getField
p3203
tp3204
I1
s(Vinsert
p3205
I42
VSimpleName: TypeResolver
p3206
tp3207
I4
s(Vinsert
p3208
I42
VSimpleName: InjectionListener
p3209
tp3210
I3
s(Vinsert
p3211
I40
VQualifiedName: org.easymock.EasyMock.anyObject
p3212
tp3213
I1
s(Vinsert
p3214
I43
VSimpleType: RemoteProvider
p3215
tp3216
I3
s(Vinsert
p3217
I27
VInfixExpression: ||
p3218
tp3219
I25
s(Vinsert
p3220
I43
VSimpleType: FilterPipeline
p3221
tp3222
I4
s(Vinsert
p3223
I74
VParameterizedType: UntargettedBinding<? extends T>
p3224
tp3225
I1
s(Vinsert
p3226
I74
VParameterizedType: ProvidesMethodTargetVisitor<T,V>
p3227
tp3228
I1
s(Vinsert
p3229
I40
VQualifiedName: rewriter.keysIntercepted
p3230
tp3231
I1
s(Vinsert
p3232
I43
VSimpleType: OverrideModuleTest
p3233
tp3234
I1
s(Vinsert
p3235
I42
VSimpleName: resolvedParameterTypes
p3236
tp3237
I1
s(Vinsert
p3238
I45
VStringLiteral: "bound inner, exposed both"
p3239
tp3240
I1
s(Vinsert
p3241
I74
VParameterizedType: Optional<String>
p3242
tp3243
I1
s(Vinsert
p3244
I42
VSimpleName: ce
p3245
tp3246
I9
s(Vinsert
p3247
I45
VStringLiteral: "#"
p3248
tp3249
I1
s(Vinsert
p3250
I42
VSimpleName: Service
p3251
tp3252
I1
s(Vinsert
p3253
I34
VNumberLiteral: 5
p3254
tp3255
I10
s(Vinsert
p3256
I42
VSimpleName: findScoped
p3257
tp3258
I1
s(Vinsert
p3259
I42
VSimpleName: lookup
p3260
tp3261
I1
s(Vinsert
p3262
I42
VSimpleName: ArrayList
p3263
tp3264
I8
s(Vinsert
p3265
I42
VSimpleName: count2
p3266
tp3267
I1
s(Vinsert
p3268
I42
VSimpleName: builder
p3269
tp3270
I39
s(Vinsert
p3271
I45
VStringLiteral: "@com.google.inject.name.Named(value=date) was bound."
p3272
tp3273
I1
s(Vinsert
p3274
I43
VSimpleType: ClassBindingImpl
p3275
tp3276
I1
s(Vinsert
p3277
I42
VSimpleName: outstandingInjections
p3278
tp3279
I2
s(Vinsert
p3280
I43
VSimpleType: BClass
p3281
tp3282
I1
s(Vinsert
p3283
I74
VParameterizedType: ProviderLookup<String>
p3284
tp3285
I1
s(Vinsert
p3286
I45
VStringLiteral: ".configure("
p3287
tp3288
I1
s(Vinsert
p3289
I74
VParameterizedType: javax.inject.Provider<?>
p3290
tp3291
I1
s(Vinsert
p3292
I74
VParameterizedType: Optional<Annotation>
p3293
tp3294
I1
s(Vinsert
p3295
I42
VSimpleName: initDelegate
p3296
tp3297
I2
s(Vinsert
p3298
I40
VQualifiedName: com.google.inject.Guice
p3299
tp3300
I1
s(Vinsert
p3301
I42
VSimpleName: mapOf
p3302
tp3303
I3
s(Vinsert
p3304
I74
VParameterizedType: MapBinder<String,String>
p3305
tp3306
I3
s(Vinsert
p3307
I42
VSimpleName: isEmpty
p3308
tp3309
I10
s(Vinsert
p3310
I42
VSimpleName: name
p3311
tp3312
I32
s(Vinsert
p3313
I74
VParameterizedType: ProviderInstanceBinding<?>
p3314
tp3315
I3
s(Vinsert
p3316
I34
VNumberLiteral: 1.0F
p3317
tp3318
I1
s(Vinsert
p3319
I42
VSimpleName: k
p3320
tp3321
I4
s(Vinsert
p3322
I74
VParameterizedType: Visitor<T,V>
p3323
tp3324
I1
s(Vinsert
p3325
I42
VSimpleName: appendable
p3326
tp3327
I1
s(Vinsert
p3328
I42
VSimpleName: STRONG
p3329
tp3330
I2
s(Vinsert
p3331
I42
VSimpleName: getOwnerType
p3332
tp3333
I1
s(Vinsert
p3334
I40
VQualifiedName: java.util.Collection
p3335
tp3336
I2
s(Vinsert
p3337
I66
VTextElement: Make sure that when there are non scoped bindings in the parent,
p3338
tp3339
I1
s(Vinsert
p3340
I42
VSimpleName: skippedExposes
p3341
tp3342
I1
s(Vinsert
p3343
I42
VSimpleName: Exposed
p3344
tp3345
I3
s(Vinsert
p3346
I42
VSimpleName: creationListeners
p3347
tp3348
I2
s(Vinsert
p3349
I45
VStringLiteral: " is specified for this binding."
p3350
tp3351
I1
s(Vinsert
p3352
I42
VSimpleName: declaredByRaw
p3353
tp3354
I2
s(Vinsert
p3355
I43
VSimpleType: DoubleToneCarFactory
p3356
tp3357
I1
s(Vinsert
p3358
I42
VSimpleName: InnerCoreModule
p3359
tp3360
I2
s(Vinsert
p3361
I45
VStringLiteral: "This element represents a synthetic binding."
p3362
tp3363
I1
s(Vinsert
p3364
I43
VSimpleType: MyNonSingletonFilter
p3365
tp3366
I1
s(Vinsert
p3367
I43
VSimpleType: FastClass
p3368
tp3369
I2
s(Vinsert
p3370
I42
VSimpleName: javaxInject
p3371
tp3372
I1
s(Vinsert
p3373
I42
VSimpleName: testObject
p3374
tp3375
I1
s(Vinsert
p3376
I43
VSimpleType: Iterator
p3377
tp3378
I2
s(Vinsert
p3379
I43
VSimpleType: Unscoped1
p3380
tp3381
I1
s(Vinsert
p3382
I43
VSimpleType: ConstructionProxyFactory
p3383
tp3384
I1
s(Vinsert
p3385
I42
VSimpleName: CountingMembersInjector
p3386
tp3387
I1
s(Vinsert
p3388
I43
VSimpleType: AssistedConstructor
p3389
tp3390
I3
s(Vinsert
p3391
I42
VSimpleName: MethodInterceptor
p3392
tp3393
I9
s(Vinsert
p3394
I42
VSimpleName: toResolve
p3395
tp3396
I1
s(Vinsert
p3397
I42
VSimpleName: testEntrySet
p3398
tp3399
I1
s(Vinsert
p3400
I42
VSimpleName: JpaTestEntity
p3401
tp3402
I5
s(Vinsert
p3403
I42
VSimpleName: implement
p3404
tp3405
I4
s(Vinsert
p3406
I42
VSimpleName: newMapBinder
p3407
tp3408
I9
s(Vinsert
p3409
I42
VSimpleName: setAccessible
p3410
tp3411
I3
s(Vinsert
p3412
I66
VTextElement:  is a 
p3413
tp3414
I1
s(Vinsert
p3415
I42
VSimpleName: TypeEncounter
p3416
tp3417
I2
s(Vinsert
p3418
I66
VTextElement:  @Finder
p3419
tp3420
I2
s(Vinsert
p3421
I42
VSimpleName: providerOf
p3422
tp3423
I4
s(Vinsert
p3424
I43
VSimpleType: HasTypeParameters
p3425
tp3426
I1
s(Vinsert
p3427
I42
VSimpleName: testInvalidCharacter
p3428
tp3429
I1
s(Vinsert
p3430
I40
VQualifiedName: scope.providers
p3431
tp3432
I1
s(Vinsert
p3433
I42
VSimpleName: testDoubleScannerIsIgnored
p3434
tp3435
I1
s(Vinsert
p3436
I40
VQualifiedName: Scopes.NO_SCOPE
p3437
tp3438
I6
s(Vinsert
p3439
I42
VSimpleName: capitalize
p3440
tp3441
I1
s(Vinsert
p3442
I43
VSimpleType: P
p3443
tp3444
I2
s(Vinsert
p3445
I42
VSimpleName: methodAspects
p3446
tp3447
I1
s(Vinsert
p3448
I42
VSimpleName: throwCleanly
p3449
tp3450
I1
s(Vinsert
p3451
I42
VSimpleName: setNextToReturn
p3452
tp3453
I1
s(Vinsert
p3454
I42
VSimpleName: getEnclosingClass
p3455
tp3456
I4
s(Vinsert
p3457
I42
VSimpleName: attributes
p3458
tp3459
I3
s(Vinsert
p3460
I42
VSimpleName: LazyNonTransparentProvider
p3461
tp3462
I2
s(Vinsert
p3463
I42
VSimpleName: moduleSource
p3464
tp3465
I6
s(Vinsert
p3466
I42
VSimpleName: makeComputingMap
p3467
tp3468
I2
s(Vinsert
p3469
I42
VSimpleName: removeOverriddenMethod
p3470
tp3471
I1
s(Vinsert
p3472
I42
VSimpleName: stage
p3473
tp3474
I9
s(Vinsert
p3475
I42
VSimpleName: parent
p3476
tp3477
I18
s(Vinsert
p3478
I43
VSimpleType: BoundFieldModule
p3479
tp3480
I5
s(Vinsert
p3481
I42
VSimpleName: Inner
p3482
tp3483
I2
s(Vinsert
p3484
I42
VSimpleName: ANNOTATION_ALREADY_SPECIFIED
p3485
tp3486
I1
s(Vinsert
p3487
I42
VSimpleName: immutableEntry
p3488
tp3489
I1
s(Vinsert
p3490
I43
VSimpleType: FactoryProxy
p3491
tp3492
I1
s(Vinsert
p3493
I42
VSimpleName: errorMessage
p3494
tp3495
I4
s(Vinsert
p3496
I42
VSimpleName: addMember
p3497
tp3498
I1
s(Vinsert
p3499
I43
VSimpleType: HashEqualsTester
p3500
tp3501
I2
s(Vinsert
p3502
I42
VSimpleName: SubModuleBinder
p3503
tp3504
I1
s(Vinsert
p3505
I42
VSimpleName: isSynthetic
p3506
tp3507
I2
s(Vinsert
p3508
I42
VSimpleName: visitAddMessage
p3509
tp3510
I1
s(Vinsert
p3511
I45
VStringLiteral: "jsr330Provider"
p3512
tp3513
I1
s(Vinsert
p3514
I42
VSimpleName: getInjector
p3515
tp3516
I7
s(Vinsert
p3517
I27
VInfixExpression: ==
p3518
tp3519
I95
s(Vinsert
p3520
I42
VSimpleName: skipSources
p3521
tp3522
I11
s(Vinsert
p3523
I42
VSimpleName: exType
p3524
tp3525
I2
s(Vinsert
p3526
I9
VBooleanLiteral: true
p3527
tp3528
I24
s(Vinsert
p3529
I40
VQualifiedName: Color.BLACK
p3530
tp3531
I2
s(Vinsert
p3532
I42
VSimpleName: callback
p3533
tp3534
I2
s(Vinsert
p3535
I42
VSimpleName: Car
p3536
tp3537
I1
s(Vinsert
p3538
I74
VParameterizedType: List<Command>
p3539
tp3540
I1
s(Vinsert
p3541
I42
VSimpleName: Preconditions
p3542
tp3543
I7
s(Vinsert
p3544
I74
VParameterizedType: Future<V>
p3545
tp3546
I1
s(Vinsert
p3547
I58
VVariableDeclarationExpression
p3548
tp3549
I8
s(Vinsert
p3550
I66
VTextElement:  2.1
p3551
tp3552
I2
s(Vinsert
p3553
I42
VSimpleName: count
p3554
tp3555
I1
s(Vinsert
p3556
I42
VSimpleName: classesToSkip
p3557
tp3558
I2
s(Vinsert
p3559
I42
VSimpleName: DateHolder
p3560
tp3561
I1
s(Vinsert
p3562
I42
VSimpleName: base
p3563
tp3564
I1
s(Vinsert
p3565
I43
VSimpleType: Scoping
p3566
tp3567
I1
s(Vinsert
p3568
I42
VSimpleName: findConstructorIn
p3569
tp3570
I1
s(Vinsert
p3571
I42
VSimpleName: T
p3572
tp3573
I274
s(Vinsert
p3574
I42
VSimpleName: UriPatternMatcher
p3575
tp3576
I1
s(Vinsert
p3577
I42
VSimpleName: getProviderOrThrow
p3578
tp3579
I1
s(Vinsert
p3580
I42
VSimpleName: localRequest
p3581
tp3582
I1
s(Vinsert
p3583
I42
VSimpleName: RedFoo
p3584
tp3585
I2
s(Vinsert
p3586
I42
VSimpleName: startsWith
p3587
tp3588
I6
s(Vinsert
p3589
I32
VMethodInvocation
p3590
tp3591
I3619
s(Vinsert
p3592
I74
VParameterizedType: ImmutableMap<Method,List<MethodInterceptor>>
p3593
tp3594
I1
s(Vinsert
p3595
I74
VParameterizedType: Class<?>
p3596
tp3597
I35
s(Vinsert
p3598
I42
VSimpleName: GetProviderCommand
p3599
tp3600
I1
s(Vinsert
p3601
I43
VSimpleType: Sub
p3602
tp3603
I1
s(Vinsert
p3604
I42
VSimpleName: fc
p3605
tp3606
I1
s(Vinsert
p3607
I42
VSimpleName: servletResponse
p3608
tp3609
I3
s(Vinsert
p3610
I42
VSimpleName: getServerPort
p3611
tp3612
I1
s(Vinsert
p3613
I42
VSimpleName: baseBinder
p3614
tp3615
I1
s(Vinsert
p3616
I42
VSimpleName: Edge
p3617
tp3618
I3
s(Vinsert
p3619
I74
VParameterizedType: ImmutableList<SingleMemberInjector>
p3620
tp3621
I2
s(Vinsert
p3622
I42
VSimpleName: go
p3623
tp3624
I5
s(Vinsert
p3625
I43
VSimpleType: ThrowingProviderMethod
p3626
tp3627
I1
s(Vinsert
p3628
I42
VSimpleName: prefix
p3629
tp3630
I3
s(Vinsert
p3631
I42
VSimpleName: lowerBound
p3632
tp3633
I2
s(Vinsert
p3634
I42
VSimpleName: K
p3635
tp3636
I9
s(Vinsert
p3637
I66
VTextElement: Note that this requirement may be satisfied by implicit binding, such as
p3638
tp3639
I1
s(Vinsert
p3640
I42
VSimpleName: scopeName
p3641
tp3642
I1
s(Vinsert
p3643
I40
VQualifiedName: com.google.inject.commands.CommandReplayer
p3644
tp3645
I1
s(Vinsert
p3646
I45
VStringLiteral: "F"
p3647
tp3648
I1
s(Vinsert
p3649
I42
VSimpleName: getSystemClassLoader
p3650
tp3651
I2
s(Vinsert
p3652
I42
VSimpleName: persistService
p3653
tp3654
I4
s(Vinsert
p3655
I66
VTextElement: Mapping from method to the data about how the method will be assisted. 
p3656
tp3657
I1
s(Vinsert
p3658
I42
VSimpleName: nullFoosInjector
p3659
tp3660
I1
s(Vinsert
p3661
I42
VSimpleName: testHashCode
p3662
tp3663
I1
s(Vinsert
p3664
I42
VSimpleName: properties
p3665
tp3666
I5
s(Vinsert
p3667
I42
VSimpleName: api
p3668
tp3669
I1
s(Vinsert
p3670
I42
VSimpleName: transferRequest
p3671
tp3672
I1
s(Vinsert
p3673
I42
VSimpleName: InstanceFilterBinding
p3674
tp3675
I1
s(Vinsert
p3676
I42
VSimpleName: ListOfMatchers
p3677
tp3678
I1
s(Vinsert
p3679
I42
VSimpleName: ElementsIntoSet
p3680
tp3681
I1
s(Vinsert
p3682
I42
VSimpleName: req
p3683
tp3684
I1
s(Vinsert
p3685
I42
VSimpleName: otherNames
p3686
tp3687
I3
s(Vinsert
p3688
I42
VSimpleName: soleBobKey
p3689
tp3690
I1
s(Vinsert
p3691
I74
VParameterizedType: SingleParameterInjector<?>
p3692
tp3693
I1
s(Vinsert
p3694
I43
VSimpleType: Factory
p3695
tp3696
I5
s(Vinsert
p3697
I74
VParameterizedType: List<InjectionPoint>
p3698
tp3699
I2
s(Vinsert
p3700
I42
VSimpleName: getAnnotation
p3701
tp3702
I18
s(Vinsert
p3703
I42
VSimpleName: testAssistedJavaxProviderIsDisallowed
p3704
tp3705
I1
s(Vinsert
p3706
I42
VSimpleName: Persistence
p3707
tp3708
I1
s(Vinsert
p3709
I42
VSimpleName: Interceptable
p3710
tp3711
I6
s(Vinsert
p3712
I43
VSimpleType: AbstractModule
p3713
tp3714
I46
s(Vinsert
p3715
I42
VSimpleName: injectorOptions
p3716
tp3717
I1
s(Vinsert
p3718
I42
VSimpleName: callableKeys
p3719
tp3720
I1
s(Vinsert
p3721
I43
VSimpleType: Constructor
p3722
tp3723
I16
s(Vinsert
p3724
I42
VSimpleName: httpServlet
p3725
tp3726
I1
s(Vinsert
p3727
I42
VSimpleName: integer
p3728
tp3729
I1
s(Vinsert
p3730
I74
VParameterizedType: AssistedConstructor<?>
p3731
tp3732
I3
s(Vinsert
p3733
I42
VSimpleName: aConfigureCount
p3734
tp3735
I2
s(Vinsert
p3736
I42
VSimpleName: interceptorsMapBuilder
p3737
tp3738
I2
s(Vinsert
p3739
I42
VSimpleName: initializeBindings
p3740
tp3741
I1
s(Vinsert
p3742
I66
VTextElement: }</pre>
p3743
tp3744
I1
s(Vinsert
p3745
I43
VSimpleType: RemoteException
p3746
tp3747
I1
s(Vinsert
p3748
I74
VParameterizedType: List<Object>
p3749
tp3750
I5
s(Vinsert
p3751
I42
VSimpleName: membersInjectorType
p3752
tp3753
I1
s(Vinsert
p3754
I42
VSimpleName: substrings
p3755
tp3756
I2
s(Vinsert
p3757
I42
VSimpleName: Seat
p3758
tp3759
I1
s(Vinsert
p3760
I42
VSimpleName: mapKey
p3761
tp3762
I4
s(Vinsert
p3763
I43
VSimpleType: HttpServlet
p3764
tp3765
I4
s(Vinsert
p3766
I42
VSimpleName: log
p3767
tp3768
I3
s(Vinsert
p3769
I43
VSimpleType: HasImplementedBy2
p3770
tp3771
I1
s(Vinsert
p3772
I43
VSimpleType: InjectionPoint
p3773
tp3774
I32
s(Vinsert
p3775
I42
VSimpleName: createInjectors
p3776
tp3777
I1
s(Vinsert
p3778
I42
VSimpleName: AssertionError
p3779
tp3780
I4
s(Vinsert
p3781
I42
VSimpleName: exposureBuilders
p3782
tp3783
I1
s(Vinsert
p3784
I42
VSimpleName: visitUntargetted
p3785
tp3786
I1
s(Vinsert
p3787
I74
VParameterizedType: Entry<?,?>
p3788
tp3789
I1
s(Vinsert
p3790
I43
VSimpleType: ConvertedConstantBinding
p3791
tp3792
I1
s(Vinsert
p3793
I76
VWildcardType: ? extends Provider<? extends T>
p3794
tp3795
I1
s(Vinsert
p3796
I42
VSimpleName: hasErrors
p3797
tp3798
I1
s(Vinsert
p3799
I43
VSimpleType: Module
p3800
tp3801
I28
s(Vinsert
p3802
I42
VSimpleName: ContinuingHttpServletRequest
p3803
tp3804
I1
s(Vinsert
p3805
I42
VSimpleName: SuppressWarnings
p3806
tp3807
I8
s(Vinsert
p3808
I5
VArrayType: Callback[]
p3809
tp3810
I3
s(Vinsert
p3811
I42
VSimpleName: isTypeLiteral
p3812
tp3813
I1
s(Vinsert
p3814
I42
VSimpleName: servletUris
p3815
tp3816
I2
s(Vinsert
p3817
I42
VSimpleName: InstanceBindingImpl
p3818
tp3819
I4
s(Vinsert
p3820
I42
VSimpleName: DependentRemoteProvider
p3821
tp3822
I1
s(Vinsert
p3823
I42
VSimpleName: newBindingIndex
p3824
tp3825
I1
s(Vinsert
p3826
I43
VSimpleType: TestCase
p3827
tp3828
I2
s(Vinsert
p3829
I40
VQualifiedName: foo.bar
p3830
tp3831
I2
s(Vinsert
p3832
I42
VSimpleName: stringLookup
p3833
tp3834
I2
s(Vinsert
p3835
I42
VSimpleName: ErrorHandler
p3836
tp3837
I1
s(Vinsert
p3838
I42
VSimpleName: Enum
p3839
tp3840
I1
s(Vinsert
p3841
I42
VSimpleName: getInstances
p3842
tp3843
I2
s(Vinsert
p3844
I42
VSimpleName: edge
p3845
tp3846
I6
s(Vinsert
p3847
I42
VSimpleName: filterDefinition
p3848
tp3849
I2
s(Vinsert
p3850
I43
VSimpleType: Client
p3851
tp3852
I4
s(Vinsert
p3853
I43
VSimpleType: Edge
p3854
tp3855
I3
s(Vinsert
p3856
I42
VSimpleName: TooManyConstructors
p3857
tp3858
I1
s(Vinsert
p3859
I74
VParameterizedType: Visitor<T>
p3860
tp3861
I10
s(Vinsert
p3862
I42
VSimpleName: injectableTypeListenerBindings
p3863
tp3864
I1
s(Vinsert
p3865
I42
VSimpleName: getInstance
p3866
tp3867
I111
s(Vinsert
p3868
I43
VSimpleType: BooleanValue
p3869
tp3870
I1
s(Vinsert
p3871
I42
VSimpleName: ParallelMemberInjectionCallback1
p3872
tp3873
I1
s(Vinsert
p3874
I42
VSimpleName: result
p3875
tp3876
I16
s(Vinsert
p3877
I9
VBooleanLiteral: false
p3878
tp3879
I17
s(Vinsert
p3880
I42
VSimpleName: testEverythingInjectorToProviderInstance
p3881
tp3882
I1
s(Vinsert
p3883
I40
VQualifiedName: Stage.PRODUCTION
p3884
tp3885
I3
s(Vinsert
p3886
I42
VSimpleName: PersistService
p3887
tp3888
I2
s(Vinsert
p3889
I45
VStringLiteral: "constructor "
p3890
tp3891
I2
s(Vinsert
p3892
I45
VStringLiteral: "/index/*"
p3893
tp3894
I2
s(Vinsert
p3895
I42
VSimpleName: isPrimitive
p3896
tp3897
I1
s(Vinsert
p3898
I74
VParameterizedType: TypeEncounter<I>
p3899
tp3900
I2
s(Vinsert
p3901
I45
VStringLiteral: "Constant value is set more"
p3902
tp3903
I1
s(Vinsert
p3904
I40
VQualifiedName: LoadStrategy.EAGER
p3905
tp3906
I2
s(Vinsert
p3907
I42
VSimpleName: GcFinalization
p3908
tp3909
I4
s(Vinsert
p3910
I42
VSimpleName: FooProvider
p3911
tp3912
I1
s(Vinsert
p3913
I42
VSimpleName: AClass
p3914
tp3915
I2
s(Vinsert
p3916
I42
VSimpleName: MultimapBinder
p3917
tp3918
I2
s(Vinsert
p3919
I42
VSimpleName: assertTrue
p3920
tp3921
I32
s(Vinsert
p3922
I42
VSimpleName: CustomScoped
p3923
tp3924
I2
s(Vinsert
p3925
I74
VParameterizedType: Set<Key<?>>
p3926
tp3927
I2
s(Vinsert
p3928
I40
VQualifiedName: com.google.inject.Binder
p3929
tp3930
I10
s(Vinsert
p3931
I74
VParameterizedType: ImmutableMap.Builder<Key<?>,Binding<?>>
p3932
tp3933
I1
s(Vinsert
p3934
I42
VSimpleName: externalContext
p3935
tp3936
I7
s(Vinsert
p3937
I42
VSimpleName: errorEnhancingClass
p3938
tp3939
I1
s(Vinsert
p3940
I42
VSimpleName: entryObject
p3941
tp3942
I1
s(Vinsert
p3943
I42
VSimpleName: error
p3944
tp3945
I4
s(Vinsert
p3946
I42
VSimpleName: testBindingTargetVisitorTypeTest
p3947
tp3948
I1
s(Vinsert
p3949
I40
VQualifiedName: JpaDao.em
p3950
tp3951
I1
s(Vinsert
p3952
I83
VModifier: volatile
p3953
tp3954
I1
s(Vinsert
p3955
I65
VTagElement
p3956
tp3957
I16
s(Vinsert
p3958
I43
VSimpleType: Subaru
p3959
tp3960
I2
s(Vinsert
p3961
I42
VSimpleName: bindings2
p3962
tp3963
I1
s(Vinsert
p3964
I42
VSimpleName: getActualTypeArguments
p3965
tp3966
I7
s(Vinsert
p3967
I43
VSimpleType: InjectableType.Listener
p3968
tp3969
I1
s(Vinsert
p3970
I42
VSimpleName: nullFoos
p3971
tp3972
I1
s(Vinsert
p3973
I42
VSimpleName: createEntityManagerFactory
p3974
tp3975
I2
s(Vinsert
p3976
I42
VSimpleName: tolerateUnmatchedInterceptions
p3977
tp3978
I1
s(Vinsert
p3979
I43
VSimpleType: ImplementationNode
p3980
tp3981
I1
s(Vinsert
p3982
I42
VSimpleName: backingSet
p3983
tp3984
I3
s(Vinsert
p3985
I74
VParameterizedType: Set<T>
p3986
tp3987
I2
s(Vinsert
p3988
I40
VQualifiedName: com.google.inject.spi.Message
p3989
tp3990
I2
s(Vinsert
p3991
I42
VSimpleName: getText
p3992
tp3993
I1
s(Vinsert
p3994
I42
VSimpleName: ProvisionExceptionTest
p3995
tp3996
I2
s(Vinsert
p3997
I42
VSimpleName: addContext
p3998
tp3999
I6
s(Vinsert
p4000
I45
VStringLiteral: "\u005cn\u005cn"
p4001
tp4002
I1
s(Vinsert
p4003
I43
VSimpleType: Abc
p4004
tp4005
I1
s(Vinsert
p4006
I45
VStringLiteral: "blah"
p4007
tp4008
I2
s(Vinsert
p4009
I43
VSimpleType: Simple
p4010
tp4011
I1
s(Vinsert
p4012
I42
VSimpleName: notified
p4013
tp4014
I1
s(Vinsert
p4015
I74
VParameterizedType: List<Future<State>>
p4016
tp4017
I1
s(Vinsert
p4018
I45
VStringLiteral: "i"
p4019
tp4020
I4
s(Vinsert
p4021
I43
VSimpleType: DependencyEdge
p4022
tp4023
I1
s(Vinsert
p4024
I74
VParameterizedType: RemoteProvider<List<String>>
p4025
tp4026
I1
s(Vinsert
p4027
I42
VSimpleName: AnnotatedElementBuilder
p4028
tp4029
I1
s(Vinsert
p4030
I42
VSimpleName: turkeyBacon
p4031
tp4032
I1
s(Vinsert
p4033
I43
VSimpleType: AtomicInteger
p4034
tp4035
I1
s(Vinsert
p4036
I45
VStringLiteral: "java.util.Set<com.google.inject.internal.MoreTypesTest$Inner<java.lang.Integer>>"
p4037
tp4038
I1
s(Vinsert
p4039
I40
VQualifiedName: Opcodes.PUTFIELD
p4040
tp4041
I1
s(Vinsert
p4042
I42
VSimpleName: objects
p4043
tp4044
I2
s(Vinsert
p4045
I43
VSimpleType: F
p4046
tp4047
I9
s(Vinsert
p4048
I43
VSimpleType: CountingInterceptor
p4049
tp4050
I4
s(Vinsert
p4051
I42
VSimpleName: HasDependencies
p4052
tp4053
I1
s(Vinsert
p4054
I42
VSimpleName: rootInjectorLock
p4055
tp4056
I1
s(Vinsert
p4057
I42
VSimpleName: parameterProviders
p4058
tp4059
I4
s(Vinsert
p4060
I42
VSimpleName: plusSkippedClasses
p4061
tp4062
I1
s(Vinsert
p4063
I42
VSimpleName: getServletContext
p4064
tp4065
I6
s(Vinsert
p4066
I42
VSimpleName: singleton
p4067
tp4068
I3
s(Vinsert
p4069
I42
VSimpleName: Transactional
p4070
tp4071
I1
s(Vinsert
p4072
I42
VSimpleName: SpringProvider
p4073
tp4074
I2
s(Vinsert
p4075
I42
VSimpleName: ExposedBindingImpl
p4076
tp4077
I3
s(Vinsert
p4078
I42
VSimpleName: visitRequestStaticInjection
p4079
tp4080
I1
s(Vinsert
p4081
I74
VParameterizedType: List<ArrowType>
p4082
tp4083
I1
s(Vinsert
p4084
I42
VSimpleName: MyNonSingletonFilter
p4085
tp4086
I1
s(Vinsert
p4087
I42
VSimpleName: Bacon
p4088
tp4089
I1
s(Vinsert
p4090
I42
VSimpleName: Iterator
p4091
tp4092
I2
s(Vinsert
p4093
I42
VSimpleName: e1
p4094
tp4095
I2
s(Vinsert
p4096
I42
VSimpleName: typeConverter
p4097
tp4098
I2
s(Vinsert
p4099
I42
VSimpleName: tasks
p4100
tp4101
I1
s(Vinsert
p4102
I42
VSimpleName: RemoteException
p4103
tp4104
I1
s(Vinsert
p4105
I42
VSimpleName: classLoader
p4106
tp4107
I5
s(Vinsert
p4108
I42
VSimpleName: mb1
p4109
tp4110
I2
s(Vinsert
p4111
I43
VSimpleType: LinkedFilterBinding
p4112
tp4113
I2
s(Vinsert
p4114
I66
VTextElement: Applies the given module to this builder.
p4115
tp4116
I1
s(Vinsert
p4117
I42
VSimpleName: Scope
p4118
tp4119
I9
s(Vinsert
p4120
I42
VSimpleName: runOperationInTxn
p4121
tp4122
I1
s(Vinsert
p4123
I42
VSimpleName: interceptable
p4124
tp4125
I2
s(Vinsert
p4126
I43
VSimpleType: GetProviderCommand
p4127
tp4128
I1
s(Vinsert
p4129
I40
VQualifiedName: java.util.HashSet
p4130
tp4131
I1
s(Vinsert
p4132
I42
VSimpleName: initCause
p4133
tp4134
I1
s(Vinsert
p4135
I42
VSimpleName: bind
p4136
tp4137
I120
s(Vinsert
p4138
I42
VSimpleName: Guice
p4139
tp4140
I81
s(Vinsert
p4141
I42
VSimpleName: doFilter
p4142
tp4143
I9
s(Vinsert
p4144
I42
VSimpleName: trim
p4145
tp4146
I1
s(Vinsert
p4147
I42
VSimpleName: ConstantFactory
p4148
tp4149
I1
s(Vinsert
p4150
I42
VSimpleName: elementSource
p4151
tp4152
I5
s(Vinsert
p4153
I42
VSimpleName: converter
p4154
tp4155
I3
s(Vinsert
p4156
I43
VSimpleType: ClassLevelManagedLocalTransactionsTest
p4157
tp4158
I1
s(Vinsert
p4159
I43
VSimpleType: ElementsIntoSet
p4160
tp4161
I1
s(Vinsert
p4162
I45
VStringLiteral: "orange"
p4163
tp4164
I1
s(Vinsert
p4165
I74
VParameterizedType: ImmutableList.Builder<Edge>
p4166
tp4167
I1
s(Vinsert
p4168
I74
VParameterizedType: Binding<Optional<String>>
p4169
tp4170
I1
s(Vinsert
p4171
I42
VSimpleName: HttpServletResponse
p4172
tp4173
I7
s(Vinsert
p4174
I66
VTextElement: Iterates over parameter injectors and creates an array of parameter
p4175
tp4176
I1
s(Vinsert
p4177
I42
VSimpleName: other2
p4178
tp4179
I1
s(Vinsert
p4180
I40
VQualifiedName: arguments.length
p4181
tp4182
I3
s(Vinsert
p4183
I42
VSimpleName: isAnnotationPresent
p4184
tp4185
I11
s(Vinsert
p4186
I43
VSimpleType: State
p4187
tp4188
I3
s(Vinsert
p4189
I74
VParameterizedType: Class<? extends Module>
p4190
tp4191
I1
s(Vinsert
p4192
I66
VTextElement: ImplicitBindingTest#testCircularJitBindingsLeaveNoResidue and
p4193
tp4194
I1
s(Vinsert
p4195
I40
VQualifiedName: java.lang.reflect.ParameterizedType
p4196
tp4197
I1
s(Vinsert
p4198
I74
VParameterizedType: Binding<T>
p4199
tp4200
I8
s(Vinsert
p4201
I42
VSimpleName: getUserSuppliedProvider
p4202
tp4203
I1
s(Vinsert
p4204
I42
VSimpleName: sourceString
p4205
tp4206
I2
s(Vinsert
p4207
I42
VSimpleName: toArray
p4208
tp4209
I5
s(Vinsert
p4210
I45
VStringLiteral: "javax.inject"
p4211
tp4212
I1
s(Vinsert
p4213
I42
VSimpleName: emOrig
p4214
tp4215
I1
s(Vinsert
p4216
I42
VSimpleName: sleep
p4217
tp4218
I1
s(Vinsert
p4219
I42
VSimpleName: shortValue
p4220
tp4221
I1
s(Vinsert
p4222
I42
VSimpleName: message
p4223
tp4224
I37
s(Vinsert
p4225
I42
VSimpleName: fooCallerClass
p4226
tp4227
I1
s(Vinsert
p4228
I43
VSimpleType: BindingInfo
p4229
tp4230
I1
s(Vinsert
p4231
I42
VSimpleName: assertContains
p4232
tp4233
I36
s(Vinsert
p4234
I42
VSimpleName: collectServletDefinitions
p4235
tp4236
I1
s(Vinsert
p4237
I43
VSimpleType: Named
p4238
tp4239
I3
s(Vinsert
p4240
I42
VSimpleName: File
p4241
tp4242
I3
s(Vinsert
p4243
I42
VSimpleName: toInject
p4244
tp4245
I4
s(Vinsert
p4246
I89
VCreationReference
p4247
tp4248
I1
s(Vinsert
p4249
I43
VSimpleType: ValueType
p4250
tp4251
I1
s(Vinsert
p4252
I43
VSimpleType: ProvidesMethodTargetVisitor
p4253
tp4254
I2
s(Vinsert
p4255
I42
VSimpleName: getParameterTypes
p4256
tp4257
I6
s(Vinsert
p4258
I42
VSimpleName: containsKey
p4259
tp4260
I7
s(Vinsert
p4261
I45
VStringLiteral: "atInjectRequired"
p4262
tp4263
I1
s(Vinsert
p4264
I42
VSimpleName: genericUnreliableProvider
p4265
tp4266
I1
s(Vinsert
p4267
I42
VSimpleName: usingJpa
p4268
tp4269
I2
s(Vinsert
p4270
I42
VSimpleName: newHashCode
p4271
tp4272
I1
s(Vinsert
p4273
I42
VSimpleName: errorsForMember
p4274
tp4275
I3
s(Vinsert
p4276
I42
VSimpleName: Bob
p4277
tp4278
I3
s(Vinsert
p4279
I43
VSimpleType: Alias
p4280
tp4281
I1
s(Vinsert
p4282
I74
VParameterizedType: MembersInjector<T>
p4283
tp4284
I3
s(Vinsert
p4285
I42
VSimpleName: getBinding
p4286
tp4287
I31
s(Vinsert
p4288
I42
VSimpleName: CharSequence
p4289
tp4290
I4
s(Vinsert
p4291
I42
VSimpleName: ProviderBinding
p4292
tp4293
I2
s(Vinsert
p4294
I40
VQualifiedName: fieldInfo.field
p4295
tp4296
I1
s(Vinsert
p4297
I34
VNumberLiteral: 0
p4298
tp4299
I48
s(Vinsert
p4300
I45
VStringLiteral: ".foo is not @Nullable"
p4301
tp4302
I1
s(Vinsert
p4303
I45
VStringLiteral: "key=Key[type=java.lang.String, annotation=@com.google.inject.name.Named(value=b)], "
p4304
tp4305
I1
s(Vinsert
p4306
I42
VSimpleName: addLast
p4307
tp4308
I1
s(Vinsert
p4309
I74
VParameterizedType: TypeLiteral<List<? extends String>>
p4310
tp4311
I1
s(Vinsert
p4312
I42
VSimpleName: testCircularlyDependentSingletonsWithProviders
p4313
tp4314
I1
s(Vinsert
p4315
I40
VQualifiedName: Foo.Factory
p4316
tp4317
I1
s(Vinsert
p4318
I40
VQualifiedName: ErrorMessages.CANNOT_INJECT_NULL
p4319
tp4320
I1
s(Vinsert
p4321
I45
VStringLiteral: "createStrangeCatWithConstructorForAge"
p4322
tp4323
I1
s(Vinsert
p4324
I42
VSimpleName: append
p4325
tp4326
I20
s(Vinsert
p4327
I45
VStringLiteral: "/path/file.bar?val=1"
p4328
tp4329
I1
s(Vinsert
p4330
I42
VSimpleName: FilterPipeline
p4331
tp4332
I4
s(Vinsert
p4333
I42
VSimpleName: dummyServlet1
p4334
tp4335
I1
s(Vinsert
p4336
I42
VSimpleName: none
p4337
tp4338
I1
s(Vinsert
p4339
I42
VSimpleName: filterRegex
p4340
tp4341
I5
s(Vinsert
p4342
I43
VSimpleType: FastConstructor
p4343
tp4344
I1
s(Vinsert
p4345
I66
VTextElement:  when a provider method is used.
p4346
tp4347
I1
s(Vinsert
p4348
I45
VStringLiteral: ", actualActual: "
p4349
tp4350
I1
s(Vinsert
p4351
I42
VSimpleName: gc
p4352
tp4353
I1
s(Vinsert
p4354
I70
VEnhancedForStatement
p4355
tp4356
I62
s(Vinsert
p4357
I42
VSimpleName: getRequestURI
p4358
tp4359
I6
s(Vinsert
p4360
I43
VSimpleType: TestFilter
p4361
tp4362
I5
s(Vinsert
p4363
I42
VSimpleName: collectionOf
p4364
tp4365
I2
s(Vinsert
p4366
I42
VSimpleName: loggerRef
p4367
tp4368
I1
s(Vinsert
p4369
I42
VSimpleName: n
p4370
tp4371
I3
s(Vinsert
p4372
I42
VSimpleName: scopeAnnotation
p4373
tp4374
I11
s(Vinsert
p4375
I43
VSimpleType: InjectableType
p4376
tp4377
I1
s(Vinsert
p4378
I74
VParameterizedType: Enumeration<?>
p4379
tp4380
I1
s(Vinsert
p4381
I42
VSimpleName: C2P
p4382
tp4383
I1
s(Vinsert
p4384
I42
VSimpleName: instanceInjector
p4385
tp4386
I2
s(Vinsert
p4387
I42
VSimpleName: keyType
p4388
tp4389
I3
s(Vinsert
p4390
I42
VSimpleName: matched
p4391
tp4392
I1
s(Vinsert
p4393
I74
VParameterizedType: Map.Entry<Module,ModuleInfo>
p4394
tp4395
I1
s(Vinsert
p4396
I42
VSimpleName: classMatcher
p4397
tp4398
I2
s(Vinsert
p4399
I74
VParameterizedType: TypeLiteral<Object>
p4400
tp4401
I1
s(Vinsert
p4402
I40
VQualifiedName: ErrorMessages.DUPLICATE_SCOPES
p4403
tp4404
I1
s(Vinsert
p4405
I43
VSimpleType: Number
p4406
tp4407
I3
s(Vinsert
p4408
I43
VSimpleType: Context
p4409
tp4410
I5
s(Vinsert
p4411
I43
VSimpleType: Visitor
p4412
tp4413
I11
s(Vinsert
p4414
I42
VSimpleName: isUnitOfWorkTransaction
p4415
tp4416
I1
s(Vinsert
p4417
I74
VParameterizedType: List<Alias>
p4418
tp4419
I1
s(Vinsert
p4420
I66
VTextElement: they are not used.
p4421
tp4422
I1
s(Vinsert
p4423
I68
VMethodRef
p4424
tp4425
I1
s(Vinsert
p4426
I42
VSimpleName: pattern
p4427
tp4428
I14
s(Vinsert
p4429
I43
VSimpleType: C2P
p4430
tp4431
I1
s(Vinsert
p4432
I42
VSimpleName: typeResolver
p4433
tp4434
I4
s(Vinsert
p4435
I40
VQualifiedName: com.google.inject.Scopes
p4436
tp4437
I1
s(Vinsert
p4438
I40
VQualifiedName: factory.constructorInjector
p4439
tp4440
I3
s(Vinsert
p4441
I43
VSimpleType: com.google.inject.Provider
p4442
tp4443
I2
s(Vinsert
p4444
I42
VSimpleName: addModules
p4445
tp4446
I5
s(Vinsert
p4447
I42
VSimpleName: getAndIncrement
p4448
tp4449
I2
s(Vinsert
p4450
I42
VSimpleName: forArray
p4451
tp4452
I1
s(Vinsert
p4453
I42
VSimpleName: firstAnnotation
p4454
tp4455
I1
s(Vinsert
p4456
I66
VTextElement: Resets and logs ellapsed time.
p4457
tp4458
I1
s(Vinsert
p4459
I74
VParameterizedType: Optional<?>
p4460
tp4461
I1
s(Vinsert
p4462
I42
VSimpleName: isInitialized
p4463
tp4464
I2
s(Vinsert
p4465
I40
VQualifiedName: ContainerBuilder.BindingBuilder
p4466
tp4467
I1
s(Vinsert
p4468
I42
VSimpleName: initializeDelegate
p4469
tp4470
I1
s(Vinsert
p4471
I43
VSimpleType: Thing
p4472
tp4473
I1
s(Vinsert
p4474
I42
VSimpleName: LineNumberAnnotationVisitor
p4475
tp4476
I1
s(Vinsert
p4477
I43
VSimpleType: CodeGenReflectionFactory
p4478
tp4479
I1
s(Vinsert
p4480
I42
VSimpleName: length
p4481
tp4482
I10
s(Vinsert
p4483
I42
VSimpleName: testSingletonConstructorThrows
p4484
tp4485
I1
s(Vinsert
p4486
I40
VQualifiedName: SomeObject.INVALID
p4487
tp4488
I1
s(Vinsert
p4489
I74
VParameterizedType: List<MethodInterceptor>
p4490
tp4491
I6
s(Vinsert
p4492
I42
VSimpleName: IntegerWrapper
p4493
tp4494
I1
s(Vinsert
p4495
I42
VSimpleName: scheme
p4496
tp4497
I1
s(Vinsert
p4498
I42
VSimpleName: CountDownLatch
p4499
tp4500
I1
s(Vinsert
p4501
I42
VSimpleName: BOTH
p4502
tp4503
I1
s(Vinsert
p4504
I40
VQualifiedName: IncludeStackTraceOption.COMPLETE
p4505
tp4506
I2
s(Vinsert
p4507
I43
VSimpleType: javax.inject.Named
p4508
tp4509
I4
s(Vinsert
p4510
I42
VSimpleName: TypeConverter
p4511
tp4512
I4
s(Vinsert
p4513
I42
VSimpleName: getInjectableType
p4514
tp4515
I2
s(Vinsert
p4516
I42
VSimpleName: BindingScopingVisitor
p4517
tp4518
I1
s(Vinsert
p4519
I42
VSimpleName: integerKey3
p4520
tp4521
I1
s(Vinsert
p4522
I34
VNumberLiteral: 50
p4523
tp4524
I1
s(Vinsert
p4525
I43
VSimpleType: Field
p4526
tp4527
I1
s(Vinsert
p4528
I45
VStringLiteral: "/path/file.bar"
p4529
tp4530
I1
s(Vinsert
p4531
I42
VSimpleName: injectable
p4532
tp4533
I1
s(Vinsert
p4534
I42
VSimpleName: newInstanceId
p4535
tp4536
I1
s(Vinsert
p4537
I42
VSimpleName: hashSetValues
p4538
tp4539
I1
s(Vinsert
p4540
I45
VStringLiteral: "java.util.List<? extends java.lang.CharSequence>"
p4541
tp4542
I2
s(Vinsert
p4543
I42
VSimpleName: earlyRequestProvider
p4544
tp4545
I3
s(Vinsert
p4546
I42
VSimpleName: interceptors
p4547
tp4548
I13
s(Vinsert
p4549
I66
VTextElement: Returns true if the type was stored in the cache, false otherwise.
p4550
tp4551
I1
s(Vinsert
p4552
I74
VParameterizedType: ArrayList<AssistedConstructor<?>>
p4553
tp4554
I1
s(Vinsert
p4555
I42
VSimpleName: elementType
p4556
tp4557
I2
s(Vinsert
p4558
I42
VSimpleName: MethodAspect
p4559
tp4560
I4
s(Vinsert
p4561
I42
VSimpleName: testAssistInjectionInNonPublicConstructor
p4562
tp4563
I1
s(Vinsert
p4564
I42
VSimpleName: onProvision
p4565
tp4566
I1
s(Vinsert
p4567
I42
VSimpleName: caster
p4568
tp4569
I1
s(Vinsert
p4570
I42
VSimpleName: invocationHandlers
p4571
tp4572
I1
s(Vinsert
p4573
I43
VSimpleType: LoggerFactory
p4574
tp4575
I2
s(Vinsert
p4576
I42
VSimpleName: keyNotFullySpecified
p4577
tp4578
I1
s(Vinsert
p4579
I45
VStringLiteral: "123.00"
p4580
tp4581
I2
s(Vinsert
p4582
I42
VSimpleName: writeBindScope
p4583
tp4584
I1
s(Vinsert
p4585
I42
VSimpleName: getMethod
p4586
tp4587
I6
s(Vinsert
p4588
I42
VSimpleName: requestURI
p4589
tp4590
I1
s(Vinsert
p4591
I42
VSimpleName: test
p4592
tp4593
I1
s(Vinsert
p4594
I42
VSimpleName: Types
p4595
tp4596
I15
s(Vinsert
p4597
I42
VSimpleName: InjectableTypeListenerBinding
p4598
tp4599
I6
s(Vinsert
p4600
I42
VSimpleName: mockResponse
p4601
tp4602
I1
s(Vinsert
p4603
I42
VSimpleName: getExistingBinding
p4604
tp4605
I6
s(Vinsert
p4606
I42
VSimpleName: testBindingAnnotationWithoutRuntimeRetention
p4607
tp4608
I1
s(Vinsert
p4609
I42
VSimpleName: getProvider
p4610
tp4611
I22
s(Vinsert
p4612
I65
VTagElement: @link
p4613
tp4614
I8
s(Vinsert
p4615
I42
VSimpleName: Source
p4616
tp4617
I1
s(Vinsert
p4618
I42
VSimpleName: testLoggerWithMember
p4619
tp4620
I1
s(Vinsert
p4621
I45
VStringLiteral: "better not fail!"
p4622
tp4623
I1
s(Vinsert
p4624
I72
VEnumConstantDeclaration
p4625
tp4626
I2
s(Vinsert
p4627
I45
VStringLiteral: "Starting EDSL test."
p4628
tp4629
I1
s(Vinsert
p4630
I42
VSimpleName: join
p4631
tp4632
I3
s(Vinsert
p4633
I42
VSimpleName: retainedAtRuntime
p4634
tp4635
I2
s(Vinsert
p4636
I74
VParameterizedType: ArrayImmutableCollection<Object>
p4637
tp4638
I1
s(Vinsert
p4639
I42
VSimpleName: begin
p4640
tp4641
I3
s(Vinsert
p4642
I42
VSimpleName: KeyBinding
p4643
tp4644
I1
s(Vinsert
p4645
I42
VSimpleName: getTypeParameters
p4646
tp4647
I2
s(Vinsert
p4648
I43
VSimpleType: HashMap
p4649
tp4650
I1
s(Vinsert
p4651
I42
VSimpleName: format
p4652
tp4653
I22
s(Vinsert
p4654
I40
VQualifiedName: that.id
p4655
tp4656
I2
s(Vinsert
p4657
I45
VStringLiteral: "ABCDE"
p4658
tp4659
I1
s(Vinsert
p4660
I42
VSimpleName: MiniGuice
p4661
tp4662
I2
s(Vinsert
p4663
I42
VSimpleName: dups
p4664
tp4665
I1
s(Vinsert
p4666
I42
VSimpleName: getContext
p4667
tp4668
I1
s(Vinsert
p4669
I42
VSimpleName: Exception
p4670
tp4671
I23
s(Vinsert
p4672
I42
VSimpleName: cannotSatisfyCircularDependency
p4673
tp4674
I1
s(Vinsert
p4675
I42
VSimpleName: collections
p4676
tp4677
I1
s(Vinsert
p4678
I42
VSimpleName: initializeBinding
p4679
tp4680
I1
s(Vinsert
p4681
I42
VSimpleName: isMarker
p4682
tp4683
I1
s(Vinsert
p4684
I42
VSimpleName: setMaxResults
p4685
tp4686
I1
s(Vinsert
p4687
I42
VSimpleName: constructorListener
p4688
tp4689
I1
s(Vinsert
p4690
I42
VSimpleName: Modules
p4691
tp4692
I3
s(Vinsert
p4693
I45
VStringLiteral: "c"
p4694
tp4695
I2
s(Vinsert
p4696
I40
VQualifiedName: Scopes.SINGLETON
p4697
tp4698
I4
s(Vinsert
p4699
I42
VSimpleName: N
p4700
tp4701
I1
s(Vinsert
p4702
I42
VSimpleName: InMemoryStackTraceElement
p4703
tp4704
I4
s(Vinsert
p4705
I42
VSimpleName: servletInstance
p4706
tp4707
I1
s(Vinsert
p4708
I42
VSimpleName: LinkedHashMap
p4709
tp4710
I1
s(Vinsert
p4711
I42
VSimpleName: ensureMemberInjected
p4712
tp4713
I3
s(Vinsert
p4714
I74
VParameterizedType: Key<WantsTypeLiterals<String>>
p4715
tp4716
I1
s(Vinsert
p4717
I43
VSimpleType: Thread
p4718
tp4719
I6
s(Vinsert
p4720
I42
VSimpleName: defaults
p4721
tp4722
I1
s(Vinsert
p4723
I42
VSimpleName: InjectorImpl
p4724
tp4725
I16
s(Vinsert
p4726
I45
VStringLiteral: "failure"
p4727
tp4728
I1
s(Vinsert
p4729
I42
VSimpleName: props
p4730
tp4731
I2
s(Vinsert
p4732
I66
VTextElement: Add an injection point that was being resolved when this exception
p4733
tp4734
I1
s(Vinsert
p4735
I74
VParameterizedType: Collection<BindingImpl<?>>
p4736
tp4737
I1
s(Vinsert
p4738
I74
VParameterizedType: Set<KeyAndSource>
p4739
tp4740
I2
s(Vinsert
p4741
I42
VSimpleName: rawAnnotation
p4742
tp4743
I1
s(Vinsert
p4744
I66
VTextElement: Pushes the narrowness of this node's effective scope to everyone that depends on this node.
p4745
tp4746
I1
s(Vinsert
p4747
I74
VParameterizedType: Collection<E>
p4748
tp4749
I1
s(Vinsert
p4750
I74
VParameterizedType: WantsTypeLiterals<String>
p4751
tp4752
I1
s(Vinsert
p4753
I42
VSimpleName: throwIfNecessary
p4754
tp4755
I2
s(Vinsert
p4756
I43
VSimpleType: JpaDao
p4757
tp4758
I1
s(Vinsert
p4759
I42
VSimpleName: ThrowingProviderMethod
p4760
tp4761
I1
s(Vinsert
p4762
I42
VSimpleName: getNamesOfBindingAnnotations
p4763
tp4764
I2
s(Vinsert
p4765
I40
VQualifiedName: java.util.Arrays
p4766
tp4767
I5
s(Vinsert
p4768
I66
VTextElement:  parameterized type.
p4769
tp4770
I1
s(Vinsert
p4771
I42
VSimpleName: start
p4772
tp4773
I2
s(Vinsert
p4774
I42
VSimpleName: forInstanceMethodsAndFields
p4775
tp4776
I6
s(Vinsert
p4777
I42
VSimpleName: testProvidersAreInjected
p4778
tp4779
I1
s(Vinsert
p4780
I42
VSimpleName: Throwable
p4781
tp4782
I22
s(Vinsert
p4783
I43
VSimpleType: HttpServletResponse
p4784
tp4785
I6
s(Vinsert
p4786
I74
VParameterizedType: ConvertedConstantBindingImpl<?>
p4787
tp4788
I1
s(Vinsert
p4789
I73
VTypeParameter
p4790
tp4791
I3
s(Vinsert
p4792
I42
VSimpleName: await
p4793
tp4794
I2
s(Vinsert
p4795
I45
VStringLiteral: "public <T> %s<T> getConstructionProxy(%s<T> implementation) {"
p4796
tp4797
I1
s(Vinsert
p4798
I74
VParameterizedType: Parameter<?>
p4799
tp4800
I3
s(Vinsert
p4801
I42
VSimpleName: getRawType
p4802
tp4803
I21
s(Vinsert
p4804
I42
VSimpleName: ga
p4805
tp4806
I1
s(Vinsert
p4807
I28
VInitializer
p4808
tp4809
I4
s(Vinsert
p4810
I42
VSimpleName: sourceToString
p4811
tp4812
I1
s(Vinsert
p4813
I42
VSimpleName: patternKind
p4814
tp4815
I2
s(Vinsert
p4816
I42
VSimpleName: servetDefsKey
p4817
tp4818
I3
s(Vinsert
p4819
I43
VSimpleType: ConstantProvider
p4820
tp4821
I1
s(Vinsert
p4822
I42
VSimpleName: Toolable
p4823
tp4824
I1
s(Vinsert
p4825
I43
VSimpleType: InterruptedException
p4826
tp4827
I2
s(Vinsert
p4828
I42
VSimpleName: sourcesCycle
p4829
tp4830
I1
s(Vinsert
p4831
I42
VSimpleName: provided
p4832
tp4833
I1
s(Vinsert
p4834
I42
VSimpleName: getGenericInterfaces
p4835
tp4836
I1
s(Vinsert
p4837
I42
VSimpleName: g
p4838
tp4839
I1
s(Vinsert
p4840
I43
VSimpleType: Green
p4841
tp4842
I2
s(Vinsert
p4843
I42
VSimpleName: errorInProvider
p4844
tp4845
I2
s(Vinsert
p4846
I42
VSimpleName: ConvertToTypes
p4847
tp4848
I1
s(Vinsert
p4849
I42
VSimpleName: and
p4850
tp4851
I1
s(Vinsert
p4852
I43
VSimpleType: Mustang
p4853
tp4854
I2
s(Vinsert
p4855
I45
VStringLiteral: "Provider<java.lang.Integer>"
p4856
tp4857
I1
s(Vinsert
p4858
I74
VParameterizedType: Provider<EntityManager>
p4859
tp4860
I1
s(Vinsert
p4861
I45
VStringLiteral: "member=com.google.inject.InjectionPointTest.bar(), "
p4862
tp4863
I1
s(Vinsert
p4864
I42
VSimpleName: guicified
p4865
tp4866
I1
s(Vinsert
p4867
I42
VSimpleName: Factory
p4868
tp4869
I6
s(Vinsert
p4870
I42
VSimpleName: removeCurrentReference
p4871
tp4872
I1
s(Vinsert
p4873
I42
VSimpleName: JpaLocalTxnInterceptor
p4874
tp4875
I1
s(Vinsert
p4876
I18
VContinueStatement
p4877
tp4878
I2
s(Vinsert
p4879
I42
VSimpleName: RealMapBinder
p4880
tp4881
I4
s(Vinsert
p4882
I42
VSimpleName: GraphvizNode
p4883
tp4884
I3
s(Vinsert
p4885
I43
VSimpleType: ThreadLocal
p4886
tp4887
I1
s(Vinsert
p4888
I42
VSimpleName: visitExposure
p4889
tp4890
I1
s(Vinsert
p4891
I42
VSimpleName: injectedServletContext
p4892
tp4893
I2
s(Vinsert
p4894
I42
VSimpleName: ProtectedClassProtectedMethod
p4895
tp4896
I1
s(Vinsert
p4897
I42
VSimpleName: AnotherNoCxtors
p4898
tp4899
I1
s(Vinsert
p4900
I42
VSimpleName: existing
p4901
tp4902
I1
s(Vinsert
p4903
I43
VSimpleType: HttpSession
p4904
tp4905
I3
s(Vinsert
p4906
I74
VParameterizedType: RealElement.BindingBuilder<T>
p4907
tp4908
I1
s(Vinsert
p4909
I42
VSimpleName: originalId
p4910
tp4911
I1
s(Vinsert
p4912
I42
VSimpleName: getExposedKeys
p4913
tp4914
I2
s(Vinsert
p4915
I42
VSimpleName: bottom
p4916
tp4917
I1
s(Vinsert
p4918
I42
VSimpleName: ExtendsHasImplementedBy2
p4919
tp4920
I1
s(Vinsert
p4921
I43
VSimpleType: ImmutableSet.Builder
p4922
tp4923
I2
s(Vinsert
p4924
I42
VSimpleName: bindings
p4925
tp4926
I12
s(Vinsert
p4927
I42
VSimpleName: KeyAndSource
p4928
tp4929
I2
s(Vinsert
p4930
I40
VQualifiedName: SystemBridgeHolder.SYSTEM_BRIDGE
p4931
tp4932
I2
s(Vinsert
p4933
I43
VSimpleType: RequestStaticInjectionCommandProcessor
p4934
tp4935
I1
s(Vinsert
p4936
I45
VStringLiteral: "Pizza"
p4937
tp4938
I1
s(Vinsert
p4939
I42
VSimpleName: classPackageName
p4940
tp4941
I1
s(Vinsert
p4942
I42
VSimpleName: sb
p4943
tp4944
I4
s(Vinsert
p4945
I45
VStringLiteral: "HI WORLD"
p4946
tp4947
I1
s(Vinsert
p4948
I43
VSimpleType: EqualsTester
p4949
tp4950
I1
s(Vinsert
p4951
I42
VSimpleName: memberInjectionCounts
p4952
tp4953
I1
s(Vinsert
p4954
I66
VTextElement:  Returns true if the method is annotated 
p4955
tp4956
I1
s(Vinsert
p4957
I42
VSimpleName: getSupertype
p4958
tp4959
I2
s(Vinsert
p4960
I66
VTextElement: Returns the string representation generated by the delegate's
p4961
tp4962
I1
s(Vinsert
p4963
I43
VSimpleType: LookupProcessor
p4964
tp4965
I1
s(Vinsert
p4966
I43
VSimpleType: Runnable
p4967
tp4968
I13
s(Vinsert
p4969
I42
VSimpleName: locallyCreated
p4970
tp4971
I1
s(Vinsert
p4972
I42
VSimpleName: ConstantProvider
p4973
tp4974
I1
s(Vinsert
p4975
I43
VSimpleType: WrappedKey
p4976
tp4977
I1
s(Vinsert
p4978
I45
VStringLiteral: "ahsd124124"
p4979
tp4980
I1
s(Vinsert
p4981
I66
VTextElement: a public no-arguments constructor.
p4982
tp4983
I1
s(Vinsert
p4984
I42
VSimpleName: em
p4985
tp4986
I10
s(Vinsert
p4987
I42
VSimpleName: getLoadStrategy
p4988
tp4989
I1
s(Vinsert
p4990
I43
VSimpleType: T
p4991
tp4992
I238
s(Vinsert
p4993
I74
VParameterizedType: List<FilterDefinition>
p4994
tp4995
I1
s(Vinsert
p4996
I42
VSimpleName: Errors
p4997
tp4998
I27
s(Vinsert
p4999
I42
VSimpleName: incrementAndGet
p5000
tp5001
I5
s(Vinsert
p5002
I42
VSimpleName: patternMatcher
p5003
tp5004
I2
s(Vinsert
p5005
I42
VSimpleName: provideMap
p5006
tp5007
I1
s(Vinsert
p5008
I42
VSimpleName: lastLogger
p5009
tp5010
I2
s(Vinsert
p5011
I45
VStringLiteral: "expected exception"
p5012
tp5013
I1
s(Vinsert
p5014
I74
VParameterizedType: List<Class<?>>
p5015
tp5016
I1
s(Vinsert
p5017
I42
VSimpleName: createContainerBuilder
p5018
tp5019
I1
s(Vinsert
p5020
I42
VSimpleName: asEagerSingleton
p5021
tp5022
I5
s(Vinsert
p5023
I42
VSimpleName: holder
p5024
tp5025
I4
s(Vinsert
p5026
I42
VSimpleName: create
p5027
tp5028
I33
s(Vinsert
p5029
I42
VSimpleName: InjectableMethod
p5030
tp5031
I1
s(Vinsert
p5032
I43
VSimpleType: GraphvizNode
p5033
tp5034
I3
s(Vinsert
p5035
I27
VInfixExpression: >=
p5036
tp5037
I1
s(Vinsert
p5038
I74
VParameterizedType: RemoteProvider<Foo>
p5039
tp5040
I1
s(Vinsert
p5041
I74
VParameterizedType: ConstructorInjector<?>
p5042
tp5043
I1
s(Vinsert
p5044
I42
VSimpleName: title
p5045
tp5046
I2
s(Vinsert
p5047
I42
VSimpleName: methodHolder
p5048
tp5049
I1
s(Vinsert
p5050
I42
VSimpleName: Field
p5051
tp5052
I1
s(Vinsert
p5053
I42
VSimpleName: DImpl
p5054
tp5055
I1
s(Vinsert
p5056
I43
VSimpleType: K
p5057
tp5058
I7
s(Vinsert
p5059
I42
VSimpleName: recordCommands
p5060
tp5061
I4
s(Vinsert
p5062
I42
VSimpleName: equality
p5063
tp5064
I1
s(Vinsert
p5065
I40
VQualifiedName: java.net.URI
p5066
tp5067
I1
s(Vinsert
p5068
I38
VPrefixExpression: -
p5069
tp5070
I2
s(Vinsert
p5071
I40
VQualifiedName: javax.inject.Inject
p5072
tp5073
I1
s(Vinsert
p5074
I43
VSimpleType: AnnotationVisitor
p5075
tp5076
I1
s(Vinsert
p5077
I42
VSimpleName: allowNullsBadBadBad
p5078
tp5079
I1
s(Vinsert
p5080
I42
VSimpleName: pruneStacktrace
p5081
tp5082
I1
s(Vinsert
p5083
I42
VSimpleName: assertNotSerializable
p5084
tp5085
I2
s(Vinsert
p5086
I42
VSimpleName: getWeakReference
p5087
tp5088
I1
s(Vinsert
p5089
I42
VSimpleName: listeners
p5090
tp5091
I3
s(Vinsert
p5092
I45
VStringLiteral: "other"
p5093
tp5094
I1
s(Vinsert
p5095
I42
VSimpleName: constructionProxy
p5096
tp5097
I3
s(Vinsert
p5098
I45
VStringLiteral: "First"
p5099
tp5100
I2
s(Vinsert
p5101
I42
VSimpleName: field
p5102
tp5103
I6
s(Vinsert
p5104
I42
VSimpleName: identityHashCode
p5105
tp5106
I1
s(Vinsert
p5107
I42
VSimpleName: hasScope
p5108
tp5109
I1
s(Vinsert
p5110
I42
VSimpleName: providesMethod
p5111
tp5112
I1
s(Vinsert
p5113
I74
VParameterizedType: Foo<String>
p5114
tp5115
I1
s(Vinsert
p5116
I42
VSimpleName: exposedKeysToSources
p5117
tp5118
I1
s(Vinsert
p5119
I42
VSimpleName: color
p5120
tp5121
I2
s(Vinsert
p5122
I43
VSimpleType: SubModuleBinder
p5123
tp5124
I1
s(Vinsert
p5125
I42
VSimpleName: asProvider
p5126
tp5127
I1
s(Vinsert
p5128
I42
VSimpleName: OptionalBinder
p5129
tp5130
I8
s(Vinsert
p5131
I43
VSimpleType: BindingVisitor
p5132
tp5133
I7
s(Vinsert
p5134
I42
VSimpleName: call
p5135
tp5136
I7
s(Vinsert
p5137
I42
VSimpleName: weakSourceRef
p5138
tp5139
I2
s(Vinsert
p5140
I43
VSimpleType: AssertionError
p5141
tp5142
I5
s(Vinsert
p5143
I42
VSimpleName: missingBinding
p5144
tp5145
I1
s(Vinsert
p5146
I42
VSimpleName: compare
p5147
tp5148
I1
s(Vinsert
p5149
I42
VSimpleName: strutsInjector
p5150
tp5151
I4
s(Vinsert
p5152
I85
VDimension
p5153
tp5154
I48
s(Vinsert
p5155
I42
VSimpleName: initializeDelayedBindings
p5156
tp5157
I1
s(Vinsert
p5158
I40
VQualifiedName: RealLinkedSingleton.nextInstanceId
p5159
tp5160
I1
s(Vinsert
p5161
I42
VSimpleName: query
p5162
tp5163
I1
s(Vinsert
p5164
I42
VSimpleName: optionalConstructor
p5165
tp5166
I2
s(Vinsert
p5167
I42
VSimpleName: writeLine
p5168
tp5169
I1
s(Vinsert
p5170
I42
VSimpleName: WantsTypeLiterals
p5171
tp5172
I1
s(Vinsert
p5173
I42
VSimpleName: testToInstanceIsTreatedLikeConstant
p5174
tp5175
I1
s(Vinsert
p5176
I42
VSimpleName: of
p5177
tp5178
I66
s(Vinsert
p5179
I42
VSimpleName: t1
p5180
tp5181
I2
s(Vinsert
p5182
I43
VSimpleType: ForMethod
p5183
tp5184
I1
s(Vinsert
p5185
I42
VSimpleName: skip
p5186
tp5187
I4
s(Vinsert
p5188
I42
VSimpleName: stopwatch
p5189
tp5190
I1
s(Vinsert
p5191
I42
VSimpleName: G
p5192
tp5193
I1
s(Vinsert
p5194
I42
VSimpleName: AddMessageCommand
p5195
tp5196
I1
s(Vinsert
p5197
I74
VParameterizedType: List<Butter>
p5198
tp5199
I1
s(Vinsert
p5200
I42
VSimpleName: constructors
p5201
tp5202
I2
s(Vinsert
p5203
I42
VSimpleName: testForwardUsingRequestDispatcher
p5204
tp5205
I1
s(Vinsert
p5206
I42
VSimpleName: Person
p5207
tp5208
I1
s(Vinsert
p5209
I42
VSimpleName: strings
p5210
tp5211
I2
s(Vinsert
p5212
I42
VSimpleName: WeakReference
p5213
tp5214
I4
s(Vinsert
p5215
I45
VStringLiteral: "(), "
p5216
tp5217
I1
s(Vinsert
p5218
I42
VSimpleName: classes
p5219
tp5220
I3
s(Vinsert
p5221
I42
VSimpleName: getContextRelativePath
p5222
tp5223
I1
s(Vinsert
p5224
I66
VTextElement:  4.0
p5225
tp5226
I1
s(Vinsert
p5227
I74
VParameterizedType: InjectionPoint<?>
p5228
tp5229
I2
s(Vinsert
p5230
I40
VQualifiedName: b.equality
p5231
tp5232
I2
s(Vinsert
p5233
I43
VSimpleType: com.google.inject.spi.Element
p5234
tp5235
I1
s(Vinsert
p5236
I42
VSimpleName: testConvertedConstantBinding
p5237
tp5238
I1
s(Vinsert
p5239
I42
VSimpleName: inMemoryStackTraceElement
p5240
tp5241
I3
s(Vinsert
p5242
I43
VSimpleType: MultimapBinder
p5243
tp5244
I2
s(Vinsert
p5245
I45
VStringLiteral: "private to A"
p5246
tp5247
I1
s(Vinsert
p5248
I42
VSimpleName: testIsScopedNegative
p5249
tp5250
I1
s(Vinsert
p5251
I43
VSimpleType: AbstractAssisted.Factory
p5252
tp5253
I1
s(Vinsert
p5254
I42
VSimpleName: getPartialValue
p5255
tp5256
I5
s(Vinsert
p5257
I74
VParameterizedType: Set<InjectionPoint>
p5258
tp5259
I7
s(Vinsert
p5260
I37
VPostfixExpression: --
p5261
tp5262
I1
s(Vinsert
p5263
I42
VSimpleName: getOriginalRequest
p5264
tp5265
I3
s(Vinsert
p5266
I42
VSimpleName: Supplier
p5267
tp5268
I2
s(Vinsert
p5269
I42
VSimpleName: second
p5270
tp5271
I1
s(Vinsert
p5272
I42
VSimpleName: testDuplicatesDifferentInstances
p5273
tp5274
I1
s(Vinsert
p5275
I42
VSimpleName: Filter
p5276
tp5277
I7
s(Vinsert
p5278
I42
VSimpleName: CodeGenReflectionFactory
p5279
tp5280
I2
s(Vinsert
p5281
I42
VSimpleName: finalizerCopy
p5282
tp5283
I1
s(Vinsert
p5284
I43
VSimpleType: FilterKeyBindingBuilder
p5285
tp5286
I1
s(Vinsert
p5287
I42
VSimpleName: valueReferences
p5288
tp5289
I3
s(Vinsert
p5290
I42
VSimpleName: superclass
p5291
tp5292
I1
s(Vinsert
p5293
I42
VSimpleName: forModule
p5294
tp5295
I9
s(Vinsert
p5296
I74
VParameterizedType: TypeLiteral<Callable<String>>
p5297
tp5298
I1
s(Vinsert
p5299
I42
VSimpleName: Signature
p5300
tp5301
I2
s(Vinsert
p5302
I42
VSimpleName: element
p5303
tp5304
I24
s(Vinsert
p5305
I42
VSimpleName: ObjectStreamException
p5306
tp5307
I1
s(Vinsert
p5308
I42
VSimpleName: MaxResults
p5309
tp5310
I1
s(Vinsert
p5311
I42
VSimpleName: bindB
p5312
tp5313
I2
s(Vinsert
p5314
I42
VSimpleName: LinkedFilterBinding
p5315
tp5316
I2
s(Vinsert
p5317
I40
VQualifiedName: InjectableType.Listener
p5318
tp5319
I1
s(Vinsert
p5320
I45
VStringLiteral: "EntityManager wasnt closed and reopened properly around txn"
p5321
tp5322
I1
s(Vinsert
p5323
I42
VSimpleName: getGenericParameterTypes
p5324
tp5325
I3
s(Vinsert
p5326
I43
VSimpleType: PackageVisibilityTestModule
p5327
tp5328
I1
s(Vinsert
p5329
I42
VSimpleName: rewriter
p5330
tp5331
I1
s(Vinsert
p5332
I42
VSimpleName: factory
p5333
tp5334
I26
s(Vinsert
p5335
I42
VSimpleName: dependencyKeys
p5336
tp5337
I1
s(Vinsert
p5338
I42
VSimpleName: requireExplicitBindings
p5339
tp5340
I4
s(Vinsert
p5341
I42
VSimpleName: ConstantBindingBuilder
p5342
tp5343
I2
s(Vinsert
p5344
I42
VSimpleName: Startable
p5345
tp5346
I1
s(Vinsert
p5347
I78
VMarkerAnnotation
p5348
tp5349
I128
s(Vinsert
p5350
I42
VSimpleName: lockA
p5351
tp5352
I1
s(Vinsert
p5353
I42
VSimpleName: jitType
p5354
tp5355
I1
s(Vinsert
p5356
I42
VSimpleName: NullPointerException
p5357
tp5358
I9
s(Vinsert
p5359
I42
VSimpleName: hasGenericFieldsOfShort
p5360
tp5361
I1
s(Vinsert
p5362
I42
VSimpleName: main
p5363
tp5364
I1
s(Vinsert
p5365
I43
VSimpleType: InjectionListener
p5366
tp5367
I3
s(Vinsert
p5368
I42
VSimpleName: getInjectableConstructor
p5369
tp5370
I1
s(Vinsert
p5371
I66
VTextElement: </ol>
p5372
tp5373
I1
s(Vinsert
p5374
I43
VSimpleType: NoSuchMethodException
p5375
tp5376
I4
s(Vinsert
p5377
I42
VSimpleName: BoundFieldInfo
p5378
tp5379
I1
s(Vinsert
p5380
I45
VStringLiteral: "allowsNull=false, "
p5381
tp5382
I1
s(Vinsert
p5383
I42
VSimpleName: instanceCount
p5384
tp5385
I2
s(Vinsert
p5386
I43
VSimpleType: MoreMethodsCheckedProvider
p5387
tp5388
I1
s(Vinsert
p5389
I43
VSimpleType: Provider
p5390
tp5391
I20
s(Vinsert
p5392
I43
VSimpleType: BoundFirst
p5393
tp5394
I1
s(Vinsert
p5395
I42
VSimpleName: BinderImpl
p5396
tp5397
I3
s(Vinsert
p5398
I40
VQualifiedName: LoadStrategy.LAZY
p5399
tp5400
I1
s(Vinsert
p5401
I42
VSimpleName: getOriginalPattern
p5402
tp5403
I1
s(Vinsert
p5404
I83
VModifier: public
p5405
tp5406
I294
s(Vinsert
p5407
I42
VSimpleName: toURI
p5408
tp5409
I1
s(Vinsert
p5410
I42
VSimpleName: CommandRecorder
p5411
tp5412
I3
s(Vinsert
p5413
I45
VStringLiteral: "providers"
p5414
tp5415
I1
s(Vinsert
p5416
I42
VSimpleName: isPublic
p5417
tp5418
I3
s(Vinsert
p5419
I42
VSimpleName: parameterAnnotations
p5420
tp5421
I1
s(Vinsert
p5422
I42
VSimpleName: providerBinding
p5423
tp5424
I3
s(Vinsert
p5425
I42
VSimpleName: isScoped
p5426
tp5427
I1
s(Vinsert
p5428
I43
VSimpleType: CreationListener
p5429
tp5430
I5
s(Vinsert
p5431
I43
VSimpleType: ConstructionProxy
p5432
tp5433
I3
s(Vinsert
p5434
I42
VSimpleName: toId
p5435
tp5436
I1
s(Vinsert
p5437
I42
VSimpleName: aliases
p5438
tp5439
I1
s(Vinsert
p5440
I42
VSimpleName: Reference
p5441
tp5442
I1
s(Vinsert
p5443
I42
VSimpleName: anInt
p5444
tp5445
I1
s(Vinsert
p5446
I42
VSimpleName: frq
p5447
tp5448
I1
s(Vinsert
p5449
I40
VQualifiedName: fieldInfo.bindAnnotation
p5450
tp5451
I1
s(Vinsert
p5452
I42
VSimpleName: replayBind
p5453
tp5454
I1
s(Vinsert
p5455
I42
VSimpleName: Alias
p5456
tp5457
I1
s(Vinsert
p5458
I42
VSimpleName: substring
p5459
tp5460
I4
s(Vinsert
p5461
I5
VArrayType: Class[]
p5462
tp5463
I2
s(Vinsert
p5464
I42
VSimpleName: mapCollectionJavaxProviderMatch
p5465
tp5466
I1
s(Vinsert
p5467
I42
VSimpleName: findAnnotation
p5468
tp5469
I1
s(Vinsert
p5470
I43
VSimpleType: Visibility
p5471
tp5472
I2
s(Vinsert
p5473
I42
VSimpleName: ServletModuleTargetVisitor
p5474
tp5475
I2
s(Vinsert
p5476
I66
VTextElement: <h4>Regular Expressions</h4>
p5477
tp5478
I1
s(Vinsert
p5479
I42
VSimpleName: oldOwner
p5480
tp5481
I1
s(Vinsert
p5482
I42
VSimpleName: scheduleInitialization
p5483
tp5484
I1
s(Vinsert
p5485
I42
VSimpleName: validation
p5486
tp5487
I1
s(Vinsert
p5488
I74
VParameterizedType: Optional<Provider<T>>
p5489
tp5490
I1
s(Vinsert
p5491
I42
VSimpleName: matchingConstructor
p5492
tp5493
I1
s(Vinsert
p5494
I42
VSimpleName: TargetVisitor
p5495
tp5496
I8
s(Vinsert
p5497
I43
VSimpleType: Renewable
p5498
tp5499
I1
s(Vinsert
p5500
I74
VParameterizedType: Factory<?>
p5501
tp5502
I1
s(Vinsert
p5503
I42
VSimpleName: InjectorOptionsProcessor
p5504
tp5505
I2
s(Vinsert
p5506
I74
VParameterizedType: ProviderInstanceBindingImpl<?>
p5507
tp5508
I1
s(Vinsert
p5509
I42
VSimpleName: valueOptions
p5510
tp5511
I1
s(Vinsert
p5512
I42
VSimpleName: createY
p5513
tp5514
I1
s(Vinsert
p5515
I42
VSimpleName: copyEntry
p5516
tp5517
I1
s(Vinsert
p5518
I42
VSimpleName: bindScope
p5519
tp5520
I4
s(Vinsert
p5521
I45
VStringLiteral: "Injector construction"
p5522
tp5523
I1
s(Vinsert
p5524
I76
VWildcardType: ? super Method
p5525
tp5526
I5
s(Vinsert
p5527
I27
VInfixExpression: -
p5528
tp5529
I5
s(Vinsert
p5530
I43
VSimpleType: Command
p5531
tp5532
I2
s(Vinsert
p5533
I42
VSimpleName: setter
p5534
tp5535
I1
s(Vinsert
p5536
I43
VSimpleType: StackTraceElement
p5537
tp5538
I6
s(Vinsert
p5539
I42
VSimpleName: values
p5540
tp5541
I5
s(Vinsert
p5542
I42
VSimpleName: Iterables
p5543
tp5544
I4
s(Vinsert
p5545
I42
VSimpleName: servletPath
p5546
tp5547
I1
s(Vinsert
p5548
I42
VSimpleName: ip
p5549
tp5550
I7
s(Vinsert
p5551
I42
VSimpleName: Named
p5552
tp5553
I9
s(Vinsert
p5554
I42
VSimpleName: CommandRewriter
p5555
tp5556
I1
s(Vinsert
p5557
I74
VParameterizedType: OptionalBinder<T>
p5558
tp5559
I1
s(Vinsert
p5560
I42
VSimpleName: InstanceServletBinding
p5561
tp5562
I1
s(Vinsert
p5563
I42
VSimpleName: Binding
p5564
tp5565
I35
s(Vinsert
p5566
I74
VParameterizedType: List<InjectableTypeListenerBinding>
p5567
tp5568
I2
s(Vinsert
p5569
I43
VSimpleType: OutOfScopeException
p5570
tp5571
I1
s(Vinsert
p5572
I42
VSimpleName: createToStringSupplier
p5573
tp5574
I1
s(Vinsert
p5575
I42
VSimpleName: point
p5576
tp5577
I4
s(Vinsert
p5578
I66
VTextElement:  to
p5579
tp5580
I1
s(Vinsert
p5581
I43
VSimpleType: CheckedProviderSubjectFactory
p5582
tp5583
I1
s(Vinsert
p5584
I42
VSimpleName: Thread
p5585
tp5586
I12
s(Vinsert
p5587
I42
VSimpleName: Integer
p5588
tp5589
I39
s(Vinsert
p5590
I42
VSimpleName: StaticInjection
p5591
tp5592
I1
s(Vinsert
p5593
I42
VSimpleName: provisionInvocation
p5594
tp5595
I2
s(Vinsert
p5596
I43
VSimpleType: GuiceFilter.Context
p5597
tp5598
I1
s(Vinsert
p5599
I42
VSimpleName: fieldKey
p5600
tp5601
I1
s(Vinsert
p5602
I42
VSimpleName: outerInner
p5603
tp5604
I1
s(Vinsert
p5605
I42
VSimpleName: primitiveKey
p5606
tp5607
I1
s(Vinsert
p5608
I42
VSimpleName: testScopingAnnotationsOnAbstractTypeIsValidForComponent
p5609
tp5610
I1
s(Vinsert
p5611
I42
VSimpleName: ServletException
p5612
tp5613
I13
s(Vinsert
p5614
I40
VQualifiedName: com.google.inject.util.SurrogateAnnotations
p5615
tp5616
I1
s(Vinsert
p5617
I42
VSimpleName: keysToIntercept
p5618
tp5619
I1
s(Vinsert
p5620
I42
VSimpleName: Proxy
p5621
tp5622
I1
s(Vinsert
p5623
I42
VSimpleName: addNode
p5624
tp5625
I2
s(Vinsert
p5626
I42
VSimpleName: getIfPresent
p5627
tp5628
I2
s(Vinsert
p5629
I42
VSimpleName: intf
p5630
tp5631
I1
s(Vinsert
p5632
I74
VParameterizedType: ImmutableSet.Builder<Dependency<?>>
p5633
tp5634
I1
s(Vinsert
p5635
I43
VSimpleType: Outer
p5636
tp5637
I1
s(Vinsert
p5638
I43
VSimpleType: BindException
p5639
tp5640
I1
s(Vinsert
p5641
I42
VSimpleName: isFinder
p5642
tp5643
I1
s(Vinsert
p5644
I40
VQualifiedName: javax.servlet.Filter
p5645
tp5646
I1
s(Vinsert
p5647
I74
VParameterizedType: BindingVisitor<? super T>
p5648
tp5649
I7
s(Vinsert
p5650
I42
VSimpleName: remainingDependencies
p5651
tp5652
I1
s(Vinsert
p5653
I74
VParameterizedType: List<JpaTestEntity>
p5654
tp5655
I1
s(Vinsert
p5656
I43
VSimpleType: MapBinder.RealMapBinder
p5657
tp5658
I2
s(Vinsert
p5659
I42
VSimpleName: BindInterceptor
p5660
tp5661
I1
s(Vinsert
p5662
I4
VArrayInitializer
p5663
tp5664
I6
s(Vinsert
p5665
I42
VSimpleName: getMembersInjector
p5666
tp5667
I5
s(Vinsert
p5668
I42
VSimpleName: toolableOnly
p5669
tp5670
I2
s(Vinsert
p5671
I42
VSimpleName: IllegalAccessException
p5672
tp5673
I1
s(Vinsert
p5674
I45
VStringLiteral: "/(foo|bar/"
p5675
tp5676
I1
s(Vinsert
p5677
I42
VSimpleName: keyLiteral
p5678
tp5679
I1
s(Vinsert
p5680
I42
VSimpleName: InterceptingInjectorBuilder
p5681
tp5682
I5
s(Vinsert
p5683
I42
VSimpleName: hasTypeListeners
p5684
tp5685
I2
s(Vinsert
p5686
I42
VSimpleName: createUntargettedBindings
p5687
tp5688
I2
s(Vinsert
p5689
I42
VSimpleName: currentThreadId
p5690
tp5691
I2
s(Vinsert
p5692
I42
VSimpleName: mapCollectionProviderMatch
p5693
tp5694
I1
s(Vinsert
p5695
I42
VSimpleName: valueTypeAndAnnotation
p5696
tp5697
I1
s(Vinsert
p5698
I42
VSimpleName: endsWith
p5699
tp5700
I2
s(Vinsert
p5701
I42
VSimpleName: getConstructor
p5702
tp5703
I5
s(Vinsert
p5704
I42
VSimpleName: unitOfWork
p5705
tp5706
I3
s(Vinsert
p5707
I74
VParameterizedType: List<SingleMemberInjector>
p5708
tp5709
I2
s(Vinsert
p5710
I42
VSimpleName: ab
p5711
tp5712
I1
s(Vinsert
p5713
I43
VSimpleType: AnnotatedSingleton
p5714
tp5715
I1
s(Vinsert
p5716
I66
VTextElement: InjectableType.Encounter.bindInterceptor()
p5717
tp5718
I1
s(Vinsert
p5719
I42
VSimpleName: destination
p5720
tp5721
I2
s(Vinsert
p5722
I42
VSimpleName: injectionListeners
p5723
tp5724
I4
s(Vinsert
p5725
I43
VSimpleType: Jsr166HashMap
p5726
tp5727
I1
s(Vinsert
p5728
I45
VStringLiteral: "/"
p5729
tp5730
I1
s(Vinsert
p5731
I42
VSimpleName: REQUEST_CONTEXT_KEYS
p5732
tp5733
I1
s(Vinsert
p5734
I42
VSimpleName: Map
p5735
tp5736
I12
s(Vinsert
p5737
I66
VTextElement:  null
p5738
tp5739
I1
s(Vinsert
p5740
I42
VSimpleName: inSessionKey
p5741
tp5742
I1
s(Vinsert
p5743
I40
VQualifiedName: Kind.SUFFIX
p5744
tp5745
I1
s(Vinsert
p5746
I42
VSimpleName: getFilterIfMatching
p5747
tp5748
I2
s(Vinsert
p5749
I43
VSimpleType: PrivateEnvironment
p5750
tp5751
I4
s(Vinsert
p5752
I42
VSimpleName: FilterKeyBindingBuilder
p5753
tp5754
I1
s(Vinsert
p5755
I42
VSimpleName: supertypeOf
p5756
tp5757
I2
s(Vinsert
p5758
I43
VSimpleType: Annotation
p5759
tp5760
I56
s(Vinsert
p5761
I42
VSimpleName: System
p5762
tp5763
I5
s(Vinsert
p5764
I42
VSimpleName: potentialLocksCycle
p5765
tp5766
I1
s(Vinsert
p5767
I66
VTextElement: occurred.
p5768
tp5769
I1
s(Vinsert
p5770
I43
VSimpleType: Filter
p5771
tp5772
I7
s(Vinsert
p5773
I42
VSimpleName: once
p5774
tp5775
I1
s(Vinsert
p5776
I74
VParameterizedType: ClassBindingImpl<?>
p5777
tp5778
I1
s(Vinsert
p5779
I43
VSimpleType: ContainerBuilder
p5780
tp5781
I12
s(Vinsert
p5782
I42
VSimpleName: appendTo
p5783
tp5784
I1
s(Vinsert
p5785
I43
VSimpleType: ConstantBindingBuilder
p5786
tp5787
I2
s(Vinsert
p5788
I43
VSimpleType: ConvertedConstantBindingImpl
p5789
tp5790
I1
s(Vinsert
p5791
I42
VSimpleName: getDeclaringClass
p5792
tp5793
I13
s(Vinsert
p5794
I42
VSimpleName: Jsr166HashMap
p5795
tp5796
I1
s(Vinsert
p5797
I42
VSimpleName: invoked
p5798
tp5799
I3
s(Vinsert
p5800
I42
VSimpleName: removeAll
p5801
tp5802
I1
s(Vinsert
p5803
I43
VSimpleType: NoDefaults
p5804
tp5805
I1
s(Vinsert
p5806
I42
VSimpleName: serveRegex
p5807
tp5808
I1
s(Vinsert
p5809
I42
VSimpleName: commands
p5810
tp5811
I4
s(Vinsert
p5812
I42
VSimpleName: parameter
p5813
tp5814
I1
s(Vinsert
p5815
I42
VSimpleName: getScopeInstance
p5816
tp5817
I1
s(Vinsert
p5818
I42
VSimpleName: localFuture
p5819
tp5820
I1
s(Vinsert
p5821
I42
VSimpleName: getFirstLine
p5822
tp5823
I1
s(Vinsert
p5824
I74
VParameterizedType: Map<Source,Provider<T>>
p5825
tp5826
I1
s(Vinsert
p5827
I42
VSimpleName: bindingVisitor
p5828
tp5829
I12
s(Vinsert
p5830
I42
VSimpleName: Cookie
p5831
tp5832
I4
s(Vinsert
p5833
I42
VSimpleName: AnnotatedConstantBindingBuilder
p5834
tp5835
I2
s(Vinsert
p5836
I42
VSimpleName: Sets
p5837
tp5838
I20
s(Vinsert
p5839
I42
VSimpleName: types
p5840
tp5841
I13
s(Vinsert
p5842
I43
VSimpleType: BinderImpl
p5843
tp5844
I4
s(Vinsert
p5845
I42
VSimpleName: FilterDispatcher
p5846
tp5847
I1
s(Vinsert
p5848
I42
VSimpleName: indexed
p5849
tp5850
I1
s(Vinsert
p5851
I42
VSimpleName: elementCache
p5852
tp5853
I2
s(Vinsert
p5854
I42
VSimpleName: throwBoundFieldException
p5855
tp5856
I1
s(Vinsert
p5857
I40
VQualifiedName: com.google.inject.internal.InjectorImpl.InjectorOptions
p5858
tp5859
I1
s(Vinsert
p5860
I24
VForStatement
p5861
tp5862
I7
s(Vinsert
p5863
I42
VSimpleName: D2
p5864
tp5865
I1
s(Vinsert
p5866
I45
VStringLiteral: "foo-value"
p5867
tp5868
I1
s(Vinsert
p5869
I45
VStringLiteral: "Tried proxying "
p5870
tp5871
I1
s(Vinsert
p5872
I42
VSimpleName: ShortNameFactory
p5873
tp5874
I1
s(Vinsert
p5875
I42
VSimpleName: fieldProvider
p5876
tp5877
I1
s(Vinsert
p5878
I45
VStringLiteral: "as124124124dasdok"
p5879
tp5880
I1
s(Vinsert
p5881
I42
VSimpleName: getOnlyElement
p5882
tp5883
I8
s(Vinsert
p5884
I42
VSimpleName: getStatus
p5885
tp5886
I2
s(Vinsert
p5887
I42
VSimpleName: ProxyFactory
p5888
tp5889
I1
s(Vinsert
p5890
I42
VSimpleName: isBridge
p5891
tp5892
I3
s(Vinsert
p5893
I42
VSimpleName: finalizerLoader
p5894
tp5895
I1
s(Vinsert
p5896
I43
VSimpleType: Sole
p5897
tp5898
I1
s(Vinsert
p5899
I42
VSimpleName: NegativeOne
p5900
tp5901
I1
s(Vinsert
p5902
I42
VSimpleName: getBindingOrThrow
p5903
tp5904
I1
s(Vinsert
p5905
I42
VSimpleName: getResponse
p5906
tp5907
I1
s(Vinsert
p5908
I74
VParameterizedType: NodeIdFactory<String>
p5909
tp5910
I1
s(Vinsert
p5911
I42
VSimpleName: reason
p5912
tp5913
I3
s(Vinsert
p5914
I42
VSimpleName: testNoMatchingConstrucotsBecauseTooLittleParams
p5915
tp5916
I1
s(Vinsert
p5917
I42
VSimpleName: duplicateBindingAnnotations
p5918
tp5919
I1
s(Vinsert
p5920
I42
VSimpleName: CustomSingletonModule
p5921
tp5922
I1
s(Vinsert
p5923
I42
VSimpleName: processCommands
p5924
tp5925
I1
s(Vinsert
p5926
I42
VSimpleName: testJitImplementedByBindingInParentFails
p5927
tp5928
I1
s(Vinsert
p5929
I42
VSimpleName: privateEnvironment
p5930
tp5931
I5
s(Vinsert
p5932
I42
VSimpleName: messageSources
p5933
tp5934
I2
s(Vinsert
p5935
I42
VSimpleName: locksCycle
p5936
tp5937
I3
s(Vinsert
p5938
I42
VSimpleName: cd
p5939
tp5940
I1
s(Vinsert
p5941
I42
VSimpleName: testValue
p5942
tp5943
I2
s(Vinsert
p5944
I42
VSimpleName: createInjector
p5945
tp5946
I88
s(Vinsert
p5947
I42
VSimpleName: elementsMutable
p5948
tp5949
I1
s(Vinsert
p5950
I42
VSimpleName: toByteArray
p5951
tp5952
I1
s(Vinsert
p5953
I66
VTextElement: Cached constructor injectors for each type 
p5954
tp5955
I1
s(Vinsert
p5956
I42
VSimpleName: serve
p5957
tp5958
I6
s(Vinsert
p5959
I34
VNumberLiteral: 4
p5960
tp5961
I3
s(Vinsert
p5962
I5
VArrayType: byte[]
p5963
tp5964
I1
s(Vinsert
p5965
I42
VSimpleName: through
p5966
tp5967
I17
s(Vinsert
p5968
I42
VSimpleName: misplacedBindingAnnotation
p5969
tp5970
I1
s(Vinsert
p5971
I43
VSimpleType: AddMessageCommand
p5972
tp5973
I1
s(Vinsert
p5974
I42
VSimpleName: jitBindingAlreadySet
p5975
tp5976
I1
s(Vinsert
p5977
I42
VSimpleName: missingRuntimeRetention
p5978
tp5979
I3
s(Vinsert
p5980
I40
VQualifiedName: com.google.inject.BindingAnnotation
p5981
tp5982
I1
s(Vinsert
p5983
I42
VSimpleName: circularDependenciesDisabled
p5984
tp5985
I1
s(Vinsert
p5986
I42
VSimpleName: getInjectableMembers
p5987
tp5988
I2
s(Vinsert
p5989
I42
VSimpleName: Interface
p5990
tp5991
I2
s(Vinsert
p5992
I42
VSimpleName: contextInitialized
p5993
tp5994
I2
s(Vinsert
p5995
I42
VSimpleName: injectionPoints
p5996
tp5997
I29
s(Vinsert
p5998
I43
VSimpleType: MembersInjector
p5999
tp6000
I7
s(Vinsert
p6001
I42
VSimpleName: TEST_VALUE_1
p6002
tp6003
I2
s(Vinsert
p6004
I42
VSimpleName: visitRequestInjection
p6005
tp6006
I2
s(Vinsert
p6007
I42
VSimpleName: getDescriptor
p6008
tp6009
I1
s(Vinsert
p6010
I45
VStringLiteral: "Error in custom provider, com.google.inject.OutOfScopeException: failure: "
p6011
tp6012
I2
s(Vinsert
p6013
I42
VSimpleName: AnnotatedSingleton
p6014
tp6015
I1
s(Vinsert
p6016
I43
VSimpleType: ProxyTest
p6017
tp6018
I3
s(Vinsert
p6019
I43
VSimpleType: BoundFieldInfo
p6020
tp6021
I1
s(Vinsert
p6022
I42
VSimpleName: Dependency
p6023
tp6024
I48
s(Vinsert
p6025
I45
VStringLiteral: "1) Error injecting constructor, java.lang.UnsupportedOperationException"
p6026
tp6027
I1
s(Vinsert
p6028
I42
VSimpleName: addDelayedUninitializedBinding
p6029
tp6030
I1
s(Vinsert
p6031
I43
VSimpleType: Integer
p6032
tp6033
I36
s(Vinsert
p6034
I42
VSimpleName: parameterIndex
p6035
tp6036
I1
s(Vinsert
p6037
I48
VSuperMethodInvocation
p6038
tp6039
I9
s(Vinsert
p6040
I42
VSimpleName: isAbstract
p6041
tp6042
I2
s(Vinsert
p6043
I42
VSimpleName: InjectionRequest
p6044
tp6045
I1
s(Vinsert
p6046
I40
VQualifiedName: java.util.List
p6047
tp6048
I6
s(Vinsert
p6049
I42
VSimpleName: Number
p6050
tp6051
I4
s(Vinsert
p6052
I42
VSimpleName: filterDef
p6053
tp6054
I3
s(Vinsert
p6055
I42
VSimpleName: servletContext
p6056
tp6057
I4
s(Vinsert
p6058
I42
VSimpleName: FactoryModuleBuilder
p6059
tp6060
I5
s(Vinsert
p6061
I42
VSimpleName: charactersBinder
p6062
tp6063
I1
s(Vinsert
p6064
I74
VParameterizedType: BindCommand<T>
p6065
tp6066
I6
s(Vinsert
p6067
I42
VSimpleName: secondObject
p6068
tp6069
I1
s(Vinsert
p6070
I43
VSimpleType: File
p6071
tp6072
I3
s(Vinsert
p6073
I42
VSimpleName: visitBindScope
p6074
tp6075
I4
s(Vinsert
p6076
I42
VSimpleName: RED
p6077
tp6078
I1
s(Vinsert
p6079
I43
VSimpleType: WildcardType
p6080
tp6081
I1
s(Vinsert
p6082
I42
VSimpleName: newFactory
p6083
tp6084
I3
s(Vinsert
p6085
I42
VSimpleName: IntegerProvider
p6086
tp6087
I1
s(Vinsert
p6088
I42
VSimpleName: ResolveFailedException
p6089
tp6090
I9
s(Vinsert
p6091
I74
VParameterizedType: Multimap<Object,IndexedBinding>
p6092
tp6093
I1
s(Vinsert
p6094
I42
VSimpleName: resultBuilder
p6095
tp6096
I1
s(Vinsert
p6097
I42
VSimpleName: getMaxAge
p6098
tp6099
I1
s(Vinsert
p6100
I42
VSimpleName: command
p6101
tp6102
I58
s(Vinsert
p6103
I65
VTagElement: @author
p6104
tp6105
I3
s(Vinsert
p6106
I42
VSimpleName: bacon
p6107
tp6108
I2
s(Vinsert
p6109
I74
VParameterizedType: Class<? extends HttpServlet>
p6110
tp6111
I1
s(Vinsert
p6112
I45
VStringLiteral: "Found scope annotation ["
p6113
tp6114
I1
s(Vinsert
p6115
I42
VSimpleName: cannotInjectAbstractType
p6116
tp6117
I1
s(Vinsert
p6118
I42
VSimpleName: IncludeStackTraceOption
p6119
tp6120
I1
s(Vinsert
p6121
I43
VSimpleType: OuterAmbiguousModule
p6122
tp6123
I1
s(Vinsert
p6124
I74
VParameterizedType: ImmutableList<SingleParameterInjector<?>>
p6125
tp6126
I1
s(Vinsert
p6127
I43
VSimpleType: ClassLoader
p6128
tp6129
I3
s(Vinsert
p6130
I42
VSimpleName: paramKey
p6131
tp6132
I1
s(Vinsert
p6133
I45
VStringLiteral: "1) Error in custom provider, java.lang.UnsupportedOperationException"
p6134
tp6135
I1
s(Vinsert
p6136
I74
VParameterizedType: Iterator<? extends T>
p6137
tp6138
I1
s(Vinsert
p6139
I74
VParameterizedType: Set<Inner<Integer>>
p6140
tp6141
I1
s(Vinsert
p6142
I43
VSimpleType: S
p6143
tp6144
I2
s(Vinsert
p6145
I42
VSimpleName: ModuleInfo
p6146
tp6147
I1
s(Vinsert
p6148
I42
VSimpleName: returns
p6149
tp6150
I1
s(Vinsert
p6151
I42
VSimpleName: findScopeAnnotation
p6152
tp6153
I3
s(Vinsert
p6154
I42
VSimpleName: arrowHead
p6155
tp6156
I2
s(Vinsert
p6157
I42
VSimpleName: cxtor
p6158
tp6159
I3
s(Vinsert
p6160
I42
VSimpleName: gnode
p6161
tp6162
I1
s(Vinsert
p6163
I43
VSimpleType: Main
p6164
tp6165
I1
s(Vinsert
p6166
I42
VSimpleName: testImplementedBy
p6167
tp6168
I1
s(Vinsert
p6169
I60
VVariableDeclarationStatement
p6170
tp6171
I498
s(Vinsert
p6172
I43
VSimpleType: Connector
p6173
tp6174
I2
s(Vinsert
p6175
I42
VSimpleName: Strategy
p6176
tp6177
I1
s(Vinsert
p6178
I42
VSimpleName: ServletModule
p6179
tp6180
I6
s(Vinsert
p6181
I45
VStringLiteral: "No implementation for java.util.Date annotated with "
p6182
tp6183
I1
s(Vinsert
p6184
I42
VSimpleName: dispatch
p6185
tp6186
I1
s(Vinsert
p6187
I42
VSimpleName: testIgnoresSyntheticFactoryMethods
p6188
tp6189
I1
s(Vinsert
p6190
I40
VQualifiedName: GuiceFilter.Context
p6191
tp6192
I1
s(Vinsert
p6193
I42
VSimpleName: HasTypeParameters
p6194
tp6195
I1
s(Vinsert
p6196
I42
VSimpleName: withDependencies
p6197
tp6198
I1
s(Vinsert
p6199
I42
VSimpleName: getResource
p6200
tp6201
I1
s(Vinsert
p6202
I42
VSimpleName: AImpl
p6203
tp6204
I2
s(Vinsert
p6205
I76
VWildcardType: ? extends Filter
p6206
tp6207
I1
s(Vinsert
p6208
I43
VSimpleType: Set
p6209
tp6210
I31
s(Vinsert
p6211
I74
VParameterizedType: ConcurrentMap<Thread,InternalContext>
p6212
tp6213
I1
s(Vinsert
p6214
I40
VQualifiedName: container.localScopeStrategy
p6215
tp6216
I3
s(Vinsert
p6217
I42
VSimpleName: permitsDuplicates
p6218
tp6219
I4
s(Vinsert
p6220
I42
VSimpleName: anObject
p6221
tp6222
I1
s(Vinsert
p6223
I43
VSimpleType: TypeConverterBinding
p6224
tp6225
I3
s(Vinsert
p6226
I42
VSimpleName: setInjectionPoint
p6227
tp6228
I1
s(Vinsert
p6229
I42
VSimpleName: lockedKey
p6230
tp6231
I1
s(Vinsert
p6232
I40
VQualifiedName: elements.length
p6233
tp6234
I1
s(Vinsert
p6235
I42
VSimpleName: getDelegateModule
p6236
tp6237
I1
s(Vinsert
p6238
I74
VParameterizedType: Map<Key,Object>
p6239
tp6240
I1
s(Vinsert
p6241
I42
VSimpleName: interceptorClass
p6242
tp6243
I1
s(Vinsert
p6244
I42
VSimpleName: childInjector
p6245
tp6246
I3
s(Vinsert
p6247
I45
VStringLiteral: " but field "
p6248
tp6249
I1
s(Vinsert
p6250
I42
VSimpleName: Set
p6251
tp6252
I38
s(Vinsert
p6253
I43
VSimpleType: ContainerImpl
p6254
tp6255
I5
s(Vinsert
p6256
I42
VSimpleName: TOOL
p6257
tp6258
I1
s(Vinsert
p6259
I74
VParameterizedType: Binding<?>
p6260
tp6261
I10
s(Vinsert
p6262
I43
VSimpleType: ReferenceMap
p6263
tp6264
I4
s(Vinsert
p6265
I66
VTextElement: Creates an 
p6266
tp6267
I1
s(Vinsert
p6268
I42
VSimpleName: arguments
p6269
tp6270
I16
s(Vinsert
p6271
I42
VSimpleName: setPath
p6272
tp6273
I1
s(Vinsert
p6274
I42
VSimpleName: defaultSource
p6275
tp6276
I7
s(Vinsert
p6277
I74
VParameterizedType: ListMultimap<String,String>
p6278
tp6279
I1
s(Vinsert
p6280
I42
VSimpleName: testProviderExceptions
p6281
tp6282
I1
s(Vinsert
p6283
I22
VFieldAccess
p6284
tp6285
I133
s(Vinsert
p6286
I42
VSimpleName: service
p6287
tp6288
I11
s(Vinsert
p6289
I45
VStringLiteral: "java"
p6290
tp6291
I1
s(Vinsert
p6292
I74
VParameterizedType: List<Binding<T>>
p6293
tp6294
I1
s(Vinsert
p6295
I42
VSimpleName: queryIdx
p6296
tp6297
I1
s(Vinsert
p6298
I42
VSimpleName: listProvider
p6299
tp6300
I1
s(Vinsert
p6301
I42
VSimpleName: reference
p6302
tp6303
I9
s(Vinsert
p6304
I43
VSimpleType: CustomNoScopeModule
p6305
tp6306
I1
s(Vinsert
p6307
I42
VSimpleName: canonicalizeIfNamed
p6308
tp6309
I3
s(Vinsert
p6310
I42
VSimpleName: r
p6311
tp6312
I2
s(Vinsert
p6313
I43
VSimpleType: ClassNotFoundException
p6314
tp6315
I3
s(Vinsert
p6316
I43
VSimpleType: Person
p6317
tp6318
I1
s(Vinsert
p6319
I45
VStringLiteral: "configure"
p6320
tp6321
I2
s(Vinsert
p6322
I43
VSimpleType: ConstructorBindingImpl
p6323
tp6324
I6
s(Vinsert
p6325
I42
VSimpleName: testIgnoreSyntheticBridgeMethods
p6326
tp6327
I1
s(Vinsert
p6328
I42
VSimpleName: named
p6329
tp6330
I31
s(Vinsert
p6331
I43
VSimpleType: Server
p6332
tp6333
I2
s(Vinsert
p6334
I43
VSimpleType: IndexedBinding
p6335
tp6336
I2
s(Vinsert
p6337
I42
VSimpleName: pe
p6338
tp6339
I1
s(Vinsert
p6340
I43
VSimpleType: ParameterizedType
p6341
tp6342
I14
s(Vinsert
p6343
I42
VSimpleName: InjectorOptions
p6344
tp6345
I1
s(Vinsert
p6346
I42
VSimpleName: unmodifiableList
p6347
tp6348
I8
s(Vinsert
p6349
I42
VSimpleName: MULTIPLE_INJECTORS_ERROR
p6350
tp6351
I1
s(Vinsert
p6352
I43
VSimpleType: Dependent
p6353
tp6354
I1
s(Vinsert
p6355
I42
VSimpleName: PersistenceFilter
p6356
tp6357
I1
s(Vinsert
p6358
I42
VSimpleName: J
p6359
tp6360
I1
s(Vinsert
p6361
I42
VSimpleName: delimiter
p6362
tp6363
I2
s(Vinsert
p6364
I42
VSimpleName: isA
p6365
tp6366
I1
s(Vinsert
p6367
I42
VSimpleName: bindModules
p6368
tp6369
I1
s(Vinsert
p6370
I42
VSimpleName: visitAddMessageError
p6371
tp6372
I2
s(Vinsert
p6373
I43
VSimpleType: MapMaker
p6374
tp6375
I2
s(Vinsert
p6376
I40
VQualifiedName: unownedLock.userLockId
p6377
tp6378
I1
s(Vinsert
p6379
I42
VSimpleName: visitProviderKey
p6380
tp6381
I1
s(Vinsert
p6382
I43
VSimpleType: Message
p6383
tp6384
I20
s(Vinsert
p6385
I42
VSimpleName: PrintWriter
p6386
tp6387
I1
s(Vinsert
p6388
I45
VStringLiteral: "count"
p6389
tp6390
I1
s(Vinsert
p6391
I42
VSimpleName: mapEntries
p6392
tp6393
I1
s(Vinsert
p6394
I42
VSimpleName: visit
p6395
tp6396
I20
s(Vinsert
p6397
I43
VSimpleType: Dependency
p6398
tp6399
I36
s(Vinsert
p6400
I42
VSimpleName: BindScope
p6401
tp6402
I1
s(Vinsert
p6403
I42
VSimpleName: getParent
p6404
tp6405
I2
s(Vinsert
p6406
I42
VSimpleName: mockRequest
p6407
tp6408
I1
s(Vinsert
p6409
I42
VSimpleName: lateBoundConstructor
p6410
tp6411
I1
s(Vinsert
p6412
I5
VArrayType: Object[]
p6413
tp6414
I5
s(Vinsert
p6415
I42
VSimpleName: privateInjectors
p6416
tp6417
I4
s(Vinsert
p6418
I40
VQualifiedName: foo.logger
p6419
tp6420
I1
s(Vinsert
p6421
I42
VSimpleName: classNames
p6422
tp6423
I2
s(Vinsert
p6424
I40
VQualifiedName: com.google.inject.internal.Errors
p6425
tp6426
I1
s(Vinsert
p6427
I42
VSimpleName: bindingsByType
p6428
tp6429
I1
s(Vinsert
p6430
I42
VSimpleName: Fiat
p6431
tp6432
I1
s(Vinsert
p6433
I43
VSimpleType: ProvisionListenerBinding
p6434
tp6435
I4
s(Vinsert
p6436
I42
VSimpleName: String
p6437
tp6438
I221
s(Vinsert
p6439
I42
VSimpleName: Module
p6440
tp6441
I29
s(Vinsert
p6442
I74
VParameterizedType: TypeLiteral<NodeIdFactory<String>>
p6443
tp6444
I1
s(Vinsert
p6445
I42
VSimpleName: exActual
p6446
tp6447
I1
s(Vinsert
p6448
I45
VStringLiteral: "Oilers"
p6449
tp6450
I1
s(Vinsert
p6451
I45
VStringLiteral: "*.xml"
p6452
tp6453
I1
s(Vinsert
p6454
I45
VStringLiteral: "This MembersInjector cannot be used until the Injector has been created."
p6455
tp6456
I2
s(Vinsert
p6457
I42
VSimpleName: Multimaps
p6458
tp6459
I1
s(Vinsert
p6460
I42
VSimpleName: BProvider
p6461
tp6462
I1
s(Vinsert
p6463
I42
VSimpleName: providerLookup
p6464
tp6465
I1
s(Vinsert
p6466
I42
VSimpleName: BindingVisitor
p6467
tp6468
I7
s(Vinsert
p6469
I42
VSimpleName: isArray
p6470
tp6471
I2
s(Vinsert
p6472
I42
VSimpleName: entrySet
p6473
tp6474
I4
s(Vinsert
p6475
I42
VSimpleName: getTee
p6476
tp6477
I2
s(Vinsert
p6478
I43
VSimpleType: Reference
p6479
tp6480
I1
s(Vinsert
p6481
I42
VSimpleName: assertNull
p6482
tp6483
I14
s(Vinsert
p6484
I66
VTextElement:  MyServlet
p6485
tp6486
I1
s(Vinsert
p6487
I42
VSimpleName: visitLineNumber
p6488
tp6489
I1
s(Vinsert
p6490
I42
VSimpleName: that
p6491
tp6492
I2
s(Vinsert
p6493
I42
VSimpleName: c
p6494
tp6495
I12
s(Vinsert
p6496
I42
VSimpleName: Method
p6497
tp6498
I34
s(Vinsert
p6499
I42
VSimpleName: forMember
p6500
tp6501
I14
s(Vinsert
p6502
I42
VSimpleName: getDeclaredConstructors
p6503
tp6504
I3
s(Vinsert
p6505
I42
VSimpleName: tests
p6506
tp6507
I2
s(Vinsert
p6508
I43
VSimpleType: LinkedBindingBuilder
p6509
tp6510
I3
s(Vinsert
p6511
I42
VSimpleName: ClassLoader
p6512
tp6513
I6
s(Vinsert
p6514
I42
VSimpleName: matchesUri
p6515
tp6516
I1
s(Vinsert
p6517
I42
VSimpleName: classNamesToSkip
p6518
tp6519
I1
s(Vinsert
p6520
I42
VSimpleName: carFactory
p6521
tp6522
I2
s(Vinsert
p6523
I42
VSimpleName: circularGet
p6524
tp6525
I1
s(Vinsert
p6526
I42
VSimpleName: originalRequest
p6527
tp6528
I2
s(Vinsert
p6529
I42
VSimpleName: invalidBinding
p6530
tp6531
I1
s(Vinsert
p6532
I43
VSimpleType: ArrayImmutableCollection
p6533
tp6534
I1
s(Vinsert
p6535
I42
VSimpleName: Message
p6536
tp6537
I23
s(Vinsert
p6538
I42
VSimpleName: testThrowingCleanupInterceptorConfidence
p6539
tp6540
I1
s(Vinsert
p6541
I45
VStringLiteral: " circular references involving constructors. The object we're"
p6542
tp6543
I1
s(Vinsert
p6544
I25
VIfStatement
p6545
tp6546
I227
s(Vinsert
p6547
I42
VSimpleName: PrivateModuleTest
p6548
tp6549
I1
s(Vinsert
p6550
I42
VSimpleName: fleet
p6551
tp6552
I1
s(Vinsert
p6553
I42
VSimpleName: getConstructionContext
p6554
tp6555
I1
s(Vinsert
p6556
I42
VSimpleName: FilterChain
p6557
tp6558
I9
s(Vinsert
p6559
I40
VQualifiedName: interceptable.lastElements
p6560
tp6561
I1
s(Vinsert
p6562
I43
VSimpleType: ExposedBindingImpl
p6563
tp6564
I3
s(Vinsert
p6565
I42
VSimpleName: hear
p6566
tp6567
I1
s(Vinsert
p6568
I42
VSimpleName: injectStatics
p6569
tp6570
I1
s(Vinsert
p6571
I42
VSimpleName: configureServlets
p6572
tp6573
I5
s(Vinsert
p6574
I42
VSimpleName: recursiveProviderType
p6575
tp6576
I1
s(Vinsert
p6577
I74
VParameterizedType: Binding<Provider<Bob>>
p6578
tp6579
I1
s(Vinsert
p6580
I43
VSimpleType: BindingBuilder
p6581
tp6582
I2
s(Vinsert
p6583
I42
VSimpleName: testMatchersAreSerializable
p6584
tp6585
I1
s(Vinsert
p6586
I42
VSimpleName: fooProvider
p6587
tp6588
I2
s(Vinsert
p6589
I42
VSimpleName: forwardedTo
p6590
tp6591
I1
s(Vinsert
p6592
I45
VStringLiteral: "lock"
p6593
tp6594
I1
s(Vinsert
p6595
I42
VSimpleName: getModuleClassNames
p6596
tp6597
I4
s(Vinsert
p6598
I43
VSimpleType: InjectableMethod
p6599
tp6600
I1
s(Vinsert
p6601
I76
VWildcardType: ? extends Class<? extends Annotation>
p6602
tp6603
I1
s(Vinsert
p6604
I42
VSimpleName: getBoundClass
p6605
tp6606
I1
s(Vinsert
p6607
I66
VTextElement: We store strings rather than keys so we don't hold strong references.
p6608
tp6609
I1
s(Vinsert
p6610
I40
VQualifiedName: com.google.inject.servlet.ManagedServletPipeline.REQUEST_DISPATCHER_REQUEST
p6611
tp6612
I1
s(Vinsert
p6613
I42
VSimpleName: MembersInjector
p6614
tp6615
I9
s(Vinsert
p6616
I42
VSimpleName: getTypeMatcher
p6617
tp6618
I1
s(Vinsert
p6619
I42
VSimpleName: newProxyInstance
p6620
tp6621
I1
s(Vinsert
p6622
I83
VModifier: synchronized
p6623
tp6624
I2
s(Vinsert
p6625
I42
VSimpleName: getLinkedKey
p6626
tp6627
I1
s(Vinsert
p6628
I43
VSimpleType: CommandRecorder
p6629
tp6630
I3
s(Vinsert
p6631
I42
VSimpleName: addTestSuite
p6632
tp6633
I90
s(Vinsert
p6634
I42
VSimpleName: AnnotationVisitor
p6635
tp6636
I1
s(Vinsert
p6637
I43
VSimpleType: InvalidConstructor
p6638
tp6639
I1
s(Vinsert
p6640
I42
VSimpleName: rewrittenModule
p6641
tp6642
I1
s(Vinsert
p6643
I43
VSimpleType: Bacon
p6644
tp6645
I1
s(Vinsert
p6646
I42
VSimpleName: testImplClazz
p6647
tp6648
I2
s(Vinsert
p6649
I42
VSimpleName: pushDependency
p6650
tp6651
I1
s(Vinsert
p6652
I42
VSimpleName: injectF
p6653
tp6654
I1
s(Vinsert
p6655
I42
VSimpleName: DependencyAndSource
p6656
tp6657
I1
s(Vinsert
p6658
I42
VSimpleName: Encounter
p6659
tp6660
I2
s(Vinsert
p6661
I45
VStringLiteral: "Container created successfully."
p6662
tp6663
I1
s(Vinsert
p6664
I34
VNumberLiteral: 0.75F
p6665
tp6666
I1
s(Vinsert
p6667
I42
VSimpleName: Iterable
p6668
tp6669
I8
s(Vinsert
p6670
I45
VStringLiteral: "<table cellspacing=\u005c"0\u005c" cellpadding=\u005c"5\u005c" cellborder=\u005c""
p6671
tp6672
I1
s(Vinsert
p6673
I74
VParameterizedType: ProviderWithExtensionVisitor<? extends T>
p6674
tp6675
I1
s(Vinsert
p6676
I42
VSimpleName: at
p6677
tp6678
I1
s(Vinsert
p6679
I38
VPrefixExpression: !
p6680
tp6681
I54
s(Vinsert
p6682
I42
VSimpleName: getMessages
p6683
tp6684
I4
s(Vinsert
p6685
I42
VSimpleName: removeIfOverriddenBy
p6686
tp6687
I2
s(Vinsert
p6688
I42
VSimpleName: ConcurrentMap
p6689
tp6690
I2
s(Vinsert
p6691
I42
VSimpleName: servletKey
p6692
tp6693
I2
s(Vinsert
p6694
I42
VSimpleName: in
p6695
tp6696
I17
s(Vinsert
p6697
I42
VSimpleName: optionalbinder
p6698
tp6699
I4
s(Vinsert
p6700
I42
VSimpleName: merge
p6701
tp6702
I13
s(Vinsert
p6703
I42
VSimpleName: weakKeys
p6704
tp6705
I4
s(Vinsert
p6706
I43
VSimpleType: Boolean
p6707
tp6708
I19
s(Vinsert
p6709
I42
VSimpleName: RuntimePermission
p6710
tp6711
I1
s(Vinsert
p6712
I45
VStringLiteral: "baz"
p6713
tp6714
I1
s(Vinsert
p6715
I45
VStringLiteral: "C"
p6716
tp6717
I6
s(Vinsert
p6718
I42
VSimpleName: arrayType
p6719
tp6720
I1
s(Vinsert
p6721
I42
VSimpleName: convertToTypes
p6722
tp6723
I5
s(Vinsert
p6724
I43
VSimpleType: Binder
p6725
tp6726
I39
s(Vinsert
p6727
I42
VSimpleName: classToSkip
p6728
tp6729
I1
s(Vinsert
p6730
I42
VSimpleName: AnimalHouse
p6731
tp6732
I1
s(Vinsert
p6733
I43
VSimpleType: PrivateModuleTest
p6734
tp6735
I1
s(Vinsert
p6736
I42
VSimpleName: implementation
p6737
tp6738
I15
s(Vinsert
p6739
I40
VQualifiedName: com.google.inject.ProvisionException
p6740
tp6741
I1
s(Vinsert
p6742
I43
VSimpleType: ComponentAnnotationTest
p6743
tp6744
I1
s(Vinsert
p6745
I42
VSimpleName: valueOption
p6746
tp6747
I1
s(Vinsert
p6748
I66
VTextElement: <p>
p6749
tp6750
I2
s(Vinsert
p6751
I42
VSimpleName: Classes
p6752
tp6753
I3
s(Vinsert
p6754
I40
VQualifiedName: org.objectweb.asm.Type
p6755
tp6756
I1
s(Vinsert
p6757
I74
VParameterizedType: ExposedBinding<?>
p6758
tp6759
I2
s(Vinsert
p6760
I42
VSimpleName: reserialized
p6761
tp6762
I1
s(Vinsert
p6763
I43
VSimpleType: A
p6764
tp6765
I16
s(Vinsert
p6766
I42
VSimpleName: time
p6767
tp6768
I1
s(Vinsert
p6769
I42
VSimpleName: constructionContext
p6770
tp6771
I3
s(Vinsert
p6772
I66
VTextElement: dependencies for OptionalBinder bindings.
p6773
tp6774
I1
s(Vinsert
p6775
I42
VSimpleName: findLoadedClass
p6776
tp6777
I1
s(Vinsert
p6778
I42
VSimpleName: getScopeStrategy
p6779
tp6780
I4
s(Vinsert
p6781
I43
VSimpleType: DisableCircularProxiesOption
p6782
tp6783
I1
s(Vinsert
p6784
I42
VSimpleName: indexOf
p6785
tp6786
I3
s(Vinsert
p6787
I42
VSimpleName: url
p6788
tp6789
I2
s(Vinsert
p6790
I74
VParameterizedType: Class<ProxyTest>
p6791
tp6792
I1
s(Vinsert
p6793
I66
VTextElement: distributed under the License is distributed on an "AS IS" BASIS,
p6794
tp6795
I1
s(Vinsert
p6796
I42
VSimpleName: server
p6797
tp6798
I2
s(Vinsert
p6799
I43
VSimpleType: BindingImpl
p6800
tp6801
I8
s(Vinsert
p6802
I45
VStringLiteral: " was already configured at "
p6803
tp6804
I1
s(Vinsert
p6805
I42
VSimpleName: indexer
p6806
tp6807
I1
s(Vinsert
p6808
I42
VSimpleName: assertCookiequality
p6809
tp6810
I1
s(Vinsert
p6811
I45
VStringLiteral: "public class %s implements Reflection {"
p6812
tp6813
I1
s(Vinsert
p6814
I42
VSimpleName: JAVAX_INJECT_JAR
p6815
tp6816
I1
s(Vinsert
p6817
I42
VSimpleName: C
p6818
tp6819
I7
s(Vinsert
p6820
I42
VSimpleName: testOverrideRequiresWhitelist
p6821
tp6822
I2
s(Vinsert
p6823
I43
VSimpleType: net.sf.cglib.core.CodeGenerationException
p6824
tp6825
I1
s(Vinsert
p6826
I34
VNumberLiteral: 10
p6827
tp6828
I1
s(Vinsert
p6829
I43
VSimpleType: BindInterceptor
p6830
tp6831
I1
s(Vinsert
p6832
I42
VSimpleName: mb2
p6833
tp6834
I1
s(Vinsert
p6835
I42
VSimpleName: anIntProvider
p6836
tp6837
I1
s(Vinsert
p6838
I42
VSimpleName: fieldInfo
p6839
tp6840
I4
s(Vinsert
p6841
I42
VSimpleName: Chicken
p6842
tp6843
I1
s(Vinsert
p6844
I40
VQualifiedName: SourceProviders.UNKNOWN_SOURCE
p6845
tp6846
I1
s(Vinsert
p6847
I45
VStringLiteral: ")"
p6848
tp6849
I3
s(Vinsert
p6850
I42
VSimpleName: getCount
p6851
tp6852
I4
s(Vinsert
p6853
I43
VSimpleType: TooManyConstructors
p6854
tp6855
I1
s(Vinsert
p6856
I42
VSimpleName: DummyServlet
p6857
tp6858
I3
s(Vinsert
p6859
I56
VTypeDeclarationStatement
p6860
tp6861
I1
s(Vinsert
p6862
I42
VSimpleName: annotation
p6863
tp6864
I40
s(Vinsert
p6865
I42
VSimpleName: iw
p6866
tp6867
I1
s(Vinsert
p6868
I42
VSimpleName: proxy
p6869
tp6870
I1
s(Vinsert
p6871
I42
VSimpleName: addBinding
p6872
tp6873
I23
s(Vinsert
p6874
I66
VTextElement:  Any Java-style regular expression.
p6875
tp6876
I1
s(Vinsert
p6877
I42
VSimpleName: binderUnsafe
p6878
tp6879
I1
s(Vinsert
p6880
I40
VQualifiedName: ErrorMessages.LOGGER_ALREADY_BOUND
p6881
tp6882
I1
s(Vinsert
p6883
I74
VParameterizedType: Key<RemoteProvider<List<String>>>
p6884
tp6885
I1
s(Vinsert
p6886
I42
VSimpleName: originalLowerBound
p6887
tp6888
I2
s(Vinsert
p6889
I45
VStringLiteral: "Not yet initialized"
p6890
tp6891
I2
s(Vinsert
p6892
I42
VSimpleName: rewrittenElements
p6893
tp6894
I2
s(Vinsert
p6895
I45
VStringLiteral: "This is the message."
p6896
tp6897
I1
s(Vinsert
p6898
I42
VSimpleName: toStringHelper
p6899
tp6900
I18
s(Vinsert
p6901
I42
VSimpleName: getInjectors
p6902
tp6903
I1
s(Vinsert
p6904
I42
VSimpleName: servletPipeline
p6905
tp6906
I1
s(Vinsert
p6907
I42
VSimpleName: Stage
p6908
tp6909
I5
s(Vinsert
p6910
I42
VSimpleName: TestFilter
p6911
tp6912
I5
s(Vinsert
p6913
I42
VSimpleName: Assisted
p6914
tp6915
I1
s(Vinsert
p6916
I43
VSimpleType: Ambiguous1Module
p6917
tp6918
I1
s(Vinsert
p6919
I42
VSimpleName: increment
p6920
tp6921
I2
s(Vinsert
p6922
I42
VSimpleName: ConstructionProxyFactory
p6923
tp6924
I1
s(Vinsert
p6925
I42
VSimpleName: Properties
p6926
tp6927
I4
s(Vinsert
p6928
I42
VSimpleName: ProxyTest
p6929
tp6930
I3
s(Vinsert
p6931
I42
VSimpleName: errorNotifyingTypeListener
p6932
tp6933
I1
s(Vinsert
p6934
I42
VSimpleName: copyOf
p6935
tp6936
I22
s(Vinsert
p6937
I43
VSimpleType: ObjectInputStream
p6938
tp6939
I1
s(Vinsert
p6940
I40
VQualifiedName: Key.NULL_STRATEGY
p6941
tp6942
I1
s(Vinsert
p6943
I43
VSimpleType: Foo
p6944
tp6945
I21
s(Vinsert
p6946
I42
VSimpleName: assertAllCounts
p6947
tp6948
I1
s(Vinsert
p6949
I42
VSimpleName: lookups
p6950
tp6951
I2
s(Vinsert
p6952
I43
VSimpleType: URL
p6953
tp6954
I1
s(Vinsert
p6955
I43
VSimpleType: ErrorMessage
p6956
tp6957
I1
s(Vinsert
p6958
I42
VSimpleName: createChild
p6959
tp6960
I2
s(Vinsert
p6961
I42
VSimpleName: Callable
p6962
tp6963
I3
s(Vinsert
p6964
I43
VSimpleType: NumericValue
p6965
tp6966
I1
s(Vinsert
p6967
I42
VSimpleName: contextPath
p6968
tp6969
I1
s(Vinsert
p6970
I42
VSimpleName: typeListener
p6971
tp6972
I1
s(Vinsert
p6973
I42
VSimpleName: formatter
p6974
tp6975
I2
s(Vinsert
p6976
I45
VStringLiteral: "%n"
p6977
tp6978
I1
s(Vinsert
p6979
I42
VSimpleName: getCommands
p6980
tp6981
I1
s(Vinsert
p6982
I45
VStringLiteral: "MapBinder was already initialized"
p6983
tp6984
I1
s(Vinsert
p6985
I42
VSimpleName: StringBuilder
p6986
tp6987
I10
s(Vinsert
p6988
I42
VSimpleName: ready
p6989
tp6990
I1
s(Vinsert
p6991
I43
VSimpleType: FilePermission
p6992
tp6993
I1
s(Vinsert
p6994
I42
VSimpleName: getClassName
p6995
tp6996
I1
s(Vinsert
p6997
I65
VTagElement: @since
p6998
tp6999
I2
s(Vinsert
p7000
I42
VSimpleName: testClient
p7001
tp7002
I1
s(Vinsert
p7003
I40
VQualifiedName: com.google.inject.TypeLiteral
p7004
tp7005
I3
s(Vinsert
p7006
I42
VSimpleName: open
p7007
tp7008
I2
s(Vinsert
p7009
I42
VSimpleName: getErrors
p7010
tp7011
I4
s(Vinsert
p7012
I40
VQualifiedName: b.throwOnHashcode
p7013
tp7014
I2
s(Vinsert
p7015
I42
VSimpleName: install
p7016
tp7017
I15
s(Vinsert
p7018
I43
VSimpleType: Lock
p7019
tp7020
I2
s(Vinsert
p7021
I42
VSimpleName: BoundFirst
p7022
tp7023
I1
s(Vinsert
p7024
I43
VSimpleType: List
p7025
tp7026
I78
s(Vinsert
p7027
I74
VParameterizedType: Provider<String>
p7028
tp7029
I2
s(Vinsert
p7030
I42
VSimpleName: inScopeObjectsMap
p7031
tp7032
I1
s(Vinsert
p7033
I42
VSimpleName: foo2Binding
p7034
tp7035
I1
s(Vinsert
p7036
I42
VSimpleName: visitInjectionRequest
p7037
tp7038
I1
s(Vinsert
p7039
I45
VStringLiteral: "com.google.inject.LoggerInjectionTest$Foo"
p7040
tp7041
I1
s(Vinsert
p7042
I42
VSimpleName: requestUri
p7043
tp7044
I2
s(Vinsert
p7045
I42
VSimpleName: Test
p7046
tp7047
I7
s(Vinsert
p7048
I42
VSimpleName: loadClass
p7049
tp7050
I4
s(Vinsert
p7051
I34
VNumberLiteral: 3
p7052
tp7053
I3
s(Vinsert
p7054
I66
VTextElement: equality this way, we let Guice remove duplicate bindings.
p7055
tp7056
I1
s(Vinsert
p7057
I74
VParameterizedType: List<ModuleAnnotatedMethodScannerBinding>
p7058
tp7059
I3
s(Vinsert
p7060
I42
VSimpleName: stateField
p7061
tp7062
I2
s(Vinsert
p7063
I42
VSimpleName: replaySubModule
p7064
tp7065
I1
s(Vinsert
p7066
I42
VSimpleName: mapBindingMatch
p7067
tp7068
I1
s(Vinsert
p7069
I43
VSimpleType: Singleton
p7070
tp7071
I4
s(Vinsert
p7072
I43
VSimpleType: EagerSingleton
p7073
tp7074
I1
s(Vinsert
p7075
I42
VSimpleName: nextId
p7076
tp7077
I2
s(Vinsert
p7078
I42
VSimpleName: listOfTType
p7079
tp7080
I1
s(Vinsert
p7081
I43
VSimpleType: DefaultConstructionProxyFactory
p7082
tp7083
I1
s(Vinsert
p7084
I42
VSimpleName: testChildEagerSingletons
p7085
tp7086
I1
s(Vinsert
p7087
I42
VSimpleName: callInContext
p7088
tp7089
I1
s(Vinsert
p7090
I42
VSimpleName: proceed
p7091
tp7092
I3
s(Vinsert
p7093
I42
VSimpleName: ConstructionProxy
p7094
tp7095
I3
s(Vinsert
p7096
I74
VParameterizedType: ProvisionListenerStackCallback<T>
p7097
tp7098
I2
s(Vinsert
p7099
I42
VSimpleName: requireAtInjectOnConstructors
p7100
tp7101
I1
s(Vinsert
p7102
I42
VSimpleName: InterceptorBindingProcessor
p7103
tp7104
I1
s(Vinsert
p7105
I43
VSimpleType: SummerException
p7106
tp7107
I1
s(Vinsert
p7108
I42
VSimpleName: getScopes
p7109
tp7110
I1
s(Vinsert
p7111
I42
VSimpleName: Member
p7112
tp7113
I7
s(Vinsert
p7114
I42
VSimpleName: getKey
p7115
tp7116
I45
s(Vinsert
p7117
I42
VSimpleName: shells
p7118
tp7119
I1
s(Vinsert
p7120
I45
VStringLiteral: "prototype"
p7121
tp7122
I1
s(Vinsert
p7123
I42
VSimpleName: EnumValue
p7124
tp7125
I1
s(Vinsert
p7126
I42
VSimpleName: visitToInstance
p7127
tp7128
I1
s(Vinsert
p7129
I40
VQualifiedName: GuiceFilter.localContext
p7130
tp7131
I1
s(Vinsert
p7132
I42
VSimpleName: delayedInitializer
p7133
tp7134
I2
s(Vinsert
p7135
I42
VSimpleName: ImmutableList
p7136
tp7137
I28
s(Vinsert
p7138
I42
VSimpleName: convertToClasses
p7139
tp7140
I1
s(Vinsert
p7141
I42
VSimpleName: getExplicitBindingsThisLevel
p7142
tp7143
I1
s(Vinsert
p7144
I42
VSimpleName: Bar
p7145
tp7146
I7
s(Vinsert
p7147
I42
VSimpleName: declaringClass
p7148
tp7149
I5
s(Vinsert
p7150
I43
VSimpleType: InterceptorBindingProcessor
p7151
tp7152
I1
s(Vinsert
p7153
I42
VSimpleName: listOfSupertypesOfInteger
p7154
tp7155
I1
s(Vinsert
p7156
I42
VSimpleName: isDynamicFinder
p7157
tp7158
I1
s(Vinsert
p7159
I45
VStringLiteral: "D"
p7160
tp7161
I5
s(Vinsert
p7162
I66
VTextElement:  crazybob@google.com (Bob Lee)
p7163
tp7164
I2
s(Vinsert
p7165
I45
VStringLiteral: "com.google.inject.ProvisionExceptionTest$E"
p7166
tp7167
I1
s(Vinsert
p7168
I43
VSimpleType: ProviderLookup
p7169
tp7170
I1
s(Vinsert
p7171
I42
VSimpleName: testProxyClassUnloading
p7172
tp7173
I2
s(Vinsert
p7174
I42
VSimpleName: ProvisionListenerStackCallback
p7175
tp7176
I2
s(Vinsert
p7177
I45
VStringLiteral: "' to "
p7178
tp7179
I1
s(Vinsert
p7180
I42
VSimpleName: StrutsPrepareAndExecuteFilter
p7181
tp7182
I1
s(Vinsert
p7183
I42
VSimpleName: loggerFactory
p7184
tp7185
I1
s(Vinsert
p7186
I66
VTextElement: Returns the current source obtained from the default provider.
p7187
tp7188
I1
s(Vinsert
p7189
I42
VSimpleName: initPipeline
p7190
tp7191
I1
s(Vinsert
p7192
I43
VSimpleType: Blue
p7193
tp7194
I1
s(Vinsert
p7195
I40
VQualifiedName: foo.barFactory
p7196
tp7197
I1
s(Vinsert
p7198
I42
VSimpleName: emFactory
p7199
tp7200
I4
s(Vinsert
p7201
I74
VParameterizedType: Key<?>
p7202
tp7203
I44
s(Vinsert
p7204
I42
VSimpleName: userBinding
p7205
tp7206
I1
s(Vinsert
p7207
I42
VSimpleName: top
p7208
tp7209
I3
s(Vinsert
p7210
I43
VSimpleType: PatternSyntaxException
p7211
tp7212
I1
s(Vinsert
p7213
I45
VStringLiteral: " injection has completed to use this object."
p7214
tp7215
I1
s(Vinsert
p7216
I42
VSimpleName: servletDefinition
p7217
tp7218
I5
s(Vinsert
p7219
I42
VSimpleName: type
p7220
tp7221
I81
s(Vinsert
p7222
I42
VSimpleName: servletDefinitions
p7223
tp7224
I3
s(Vinsert
p7225
I42
VSimpleName: regex
p7226
tp7227
I2
s(Vinsert
p7228
I42
VSimpleName: collectionOfProvidersMatch
p7229
tp7230
I1
s(Vinsert
p7231
I43
VSimpleType: InjectorBuilderImpl
p7232
tp7233
I1
s(Vinsert
p7234
I42
VSimpleName: remaining
p7235
tp7236
I1
s(Vinsert
p7237
I42
VSimpleName: scoping
p7238
tp7239
I2
s(Vinsert
p7240
I42
VSimpleName: Matcher
p7241
tp7242
I9
s(Vinsert
p7243
I42
VSimpleName: Iterators
p7244
tp7245
I1
s(Vinsert
p7246
I54
VTryStatement
p7247
tp7248
I99
s(Vinsert
p7249
I43
VSimpleType: Exposed
p7250
tp7251
I2
s(Vinsert
p7252
I42
VSimpleName: DeferredLookups
p7253
tp7254
I1
s(Vinsert
p7255
I42
VSimpleName: cTv
p7256
tp7257
I2
s(Vinsert
p7258
I42
VSimpleName: matchingConverter
p7259
tp7260
I1
s(Vinsert
p7261
I42
VSimpleName: va
p7262
tp7263
I1
s(Vinsert
p7264
I43
VSimpleType: IOException
p7265
tp7266
I13
s(Vinsert
p7267
I42
VSimpleName: finishConstruction
p7268
tp7269
I1
s(Vinsert
p7270
I42
VSimpleName: ForMethod
p7271
tp7272
I1
s(Vinsert
p7273
I45
VStringLiteral: "*"
p7274
tp7275
I1
s(Vinsert
p7276
I66
VTextElement: http://www.apache.org/licenses/LICENSE-2.0
p7277
tp7278
I1
s(Vinsert
p7279
I43
VSimpleType: DummyServlet
p7280
tp7281
I2
s(Vinsert
p7282
I42
VSimpleName: counter
p7283
tp7284
I2
s(Vinsert
p7285
I42
VSimpleName: NoCxtors
p7286
tp7287
I1
s(Vinsert
p7288
I42
VSimpleName: InjectorBuilderImpl
p7289
tp7290
I1
s(Vinsert
p7291
I40
VQualifiedName: ErrorMessages.MISSING_RUNTIME_RETENTION
p7292
tp7293
I1
s(Vinsert
p7294
I42
VSimpleName: clear
p7295
tp7296
I5
s(Vinsert
p7297
I74
VParameterizedType: BindingTargetVisitor<T,V>
p7298
tp7299
I5
s(Vinsert
p7300
I42
VSimpleName: Object
p7301
tp7302
I101
s(Vinsert
p7303
I76
VWildcardType: ? extends String
p7304
tp7305
I1
s(Vinsert
p7306
I43
VSimpleType: IllegalStateException
p7307
tp7308
I8
s(Vinsert
p7309
I42
VSimpleName: instanceBinding
p7310
tp7311
I2
s(Vinsert
p7312
I42
VSimpleName: validate
p7313
tp7314
I3
s(Vinsert
p7315
I42
VSimpleName: Sub
p7316
tp7317
I2
s(Vinsert
p7318
I57
VTypeLiteral
p7319
tp7320
I380
s(Vinsert
p7321
I43
VSimpleType: BindScopeCommand
p7322
tp7323
I1
s(Vinsert
p7324
I45
VStringLiteral: ".configure(InjectableTypeListenerTest.java:"
p7325
tp7326
I1
s(Vinsert
p7327
I42
VSimpleName: EMPTY_IMMUTABLE_COLLECTION
p7328
tp7329
I1
s(Vinsert
p7330
I42
VSimpleName: multibinder
p7331
tp7332
I13
s(Vinsert
p7333
I74
VParameterizedType: TypeLiteral<List<ServletDefinition>>
p7334
tp7335
I1
s(Vinsert
p7336
I45
VStringLiteral: "unchecked"
p7337
tp7338
I11
s(Vinsert
p7339
I43
VSimpleType: DummyFilterImpl
p7340
tp7341
I4
s(Vinsert
p7342
I43
VSimpleType: Delegater.Factory
p7343
tp7344
I1
s(Vinsert
p7345
I42
VSimpleName: ClassLevelManagedLocalTransactionsTest
p7346
tp7347
I1
s(Vinsert
p7348
I42
VSimpleName: UniqueAnnotations
p7349
tp7350
I2
s(Vinsert
p7351
I74
VParameterizedType: FailableCache<Class<?>,ConstructorInjector<?>>
p7352
tp7353
I1
s(Vinsert
p7354
I42
VSimpleName: containerBuilder
p7355
tp7356
I2
s(Vinsert
p7357
I42
VSimpleName: LinkedKeyBinding
p7358
tp7359
I1
s(Vinsert
p7360
I40
VQualifiedName: System.out
p7361
tp7362
I3
s(Vinsert
p7363
I42
VSimpleName: entry
p7364
tp7365
I24
s(Vinsert
p7366
I42
VSimpleName: PackageVisibilityTestModule
p7367
tp7368
I1
s(Vinsert
p7369
I43
VSimpleType: Logger
p7370
tp7371
I4
s(Vinsert
p7372
I42
VSimpleName: stringPackageName
p7373
tp7374
I2
s(Vinsert
p7375
I45
VStringLiteral: "testInternedValueCleanupWithWeakKey("
p7376
tp7377
I1
s(Vinsert
p7378
I42
VSimpleName: bar
p7379
tp7380
I2
s(Vinsert
p7381
I42
VSimpleName: stringInstanceNode
p7382
tp7383
I1
s(Vinsert
p7384
I43
VSimpleType: BProvider
p7385
tp7386
I1
s(Vinsert
p7387
I42
VSimpleName: mv
p7388
tp7389
I1
s(Vinsert
p7390
I42
VSimpleName: testPrivateModuleInheritScanner_usingPrivateBinder
p7391
tp7392
I1
s(Vinsert
p7393
I42
VSimpleName: Indirect
p7394
tp7395
I1
s(Vinsert
p7396
I45
VStringLiteral: "dependency"
p7397
tp7398
I1
s(Vinsert
p7399
I74
VParameterizedType: Constructor<C>
p7400
tp7401
I1
s(Vinsert
p7402
I42
VSimpleName: lockedKeys
p7403
tp7404
I1
s(Vinsert
p7405
I45
VStringLiteral: "A binding to java.util.List was already configured at"
p7406
tp7407
I1
s(Vinsert
p7408
I43
VSimpleType: FooProvider
p7409
tp7410
I1
s(Vinsert
p7411
I40
VQualifiedName: mapKey.annotation
p7412
tp7413
I1
s(Vinsert
p7414
I42
VSimpleName: duplicateKeyErrorMessages
p7415
tp7416
I2
s(Vinsert
p7417
I43
VSimpleType: AddMessageErrorCommand
p7418
tp7419
I3
s(Vinsert
p7420
I43
VSimpleType: Multimap
p7421
tp7422
I2
s(Vinsert
p7423
I42
VSimpleName: annotationType
p7424
tp7425
I40
s(Vinsert
p7426
I74
VParameterizedType: Set<Dependency<?>>
p7427
tp7428
I5
s(Vinsert
p7429
I42
VSimpleName: q
p7430
tp7431
I1
s(Vinsert
p7432
I74
VParameterizedType: TypeVariable<?>
p7433
tp7434
I1
s(Vinsert
p7435
I36
VParenthesizedExpression
p7436
tp7437
I55
s(Vinsert
p7438
I42
VSimpleName: COMPLETE
p7439
tp7440
I1
s(Vinsert
p7441
I42
VSimpleName: DoubleToneCarFactory
p7442
tp7443
I1
s(Vinsert
p7444
I66
VTextElement:  dhanji@gmail.com (Dhanji R. Prasanna)
p7445
tp7446
I1
s(Vinsert
p7447
I42
VSimpleName: moduleClass
p7448
tp7449
I1
s(Vinsert
p7450
I45
VStringLiteral: " proxying is not constructed yet. Please wait until after"
p7451
tp7452
I1
s(Vinsert
p7453
I42
VSimpleName: Callback
p7454
tp7455
I3
s(Vinsert
p7456
I42
VSimpleName: isSingleton
p7457
tp7458
I2
s(Vinsert
p7459
I42
VSimpleName: newBuilder
p7460
tp7461
I5
s(Vinsert
p7462
I52
VThisExpression
p7463
tp7464
I156
s(Vinsert
p7465
I40
VQualifiedName: System.err
p7466
tp7467
I1
s(Vinsert
p7468
I42
VSimpleName: servletRequest
p7469
tp7470
I6
s(Vinsert
p7471
I42
VSimpleName: aMembersInjector
p7472
tp7473
I2
s(Vinsert
p7474
I42
VSimpleName: injectMembers
p7475
tp7476
I11
s(Vinsert
p7477
I40
VQualifiedName: com.google.inject.spi.Element
p7478
tp7479
I1
s(Vinsert
p7480
I42
VSimpleName: linkedVisited
p7481
tp7482
I1
s(Vinsert
p7483
I42
VSimpleName: filter
p7484
tp7485
I16
s(Vinsert
p7486
I74
VParameterizedType: Iterable<Message>
p7487
tp7488
I1
s(Vinsert
p7489
I42
VSimpleName: callStack
p7490
tp7491
I3
s(Vinsert
p7492
I42
VSimpleName: ContainerTest
p7493
tp7494
I1
s(Vinsert
p7495
I42
VSimpleName: namedFoo
p7496
tp7497
I1
s(Vinsert
p7498
I42
VSimpleName: injectsT
p7499
tp7500
I1
s(Vinsert
p7501
I42
VSimpleName: isInterface
p7502
tp7503
I3
s(Vinsert
p7504
I74
VParameterizedType: Iterable<Contact>
p7505
tp7506
I2
s(Vinsert
p7507
I42
VSimpleName: PARAM_VALUE
p7508
tp7509
I1
s(Vinsert
p7510
I74
VParameterizedType: Key<Injected<String>>
p7511
tp7512
I1
s(Vinsert
p7513
I40
VQualifiedName: Kind.PREFIX
p7514
tp7515
I1
s(Vinsert
p7516
I40
VQualifiedName: entry.value
p7517
tp7518
I1
s(Vinsert
p7519
I45
VStringLiteral: "Binding to java.lang.String"
p7520
tp7521
I1
s(Vinsert
p7522
I45
VStringLiteral: "Persistence service was already initialized."
p7523
tp7524
I1
s(Vinsert
p7525
I42
VSimpleName: Multimap
p7526
tp7527
I2
s(Vinsert
p7528
I42
VSimpleName: BlowsUpOnInject
p7529
tp7530
I1
s(Vinsert
p7531
I42
VSimpleName: keysNotIntercepted
p7532
tp7533
I2
s(Vinsert
p7534
I42
VSimpleName: fail
p7535
tp7536
I41
s(Vinsert
p7537
I42
VSimpleName: AccessController
p7538
tp7539
I1
s(Vinsert
p7540
I42
VSimpleName: serializableCopy
p7541
tp7542
I1
s(Vinsert
p7543
I42
VSimpleName: setName
p7544
tp7545
I1
s(Vinsert
p7546
I42
VSimpleName: typeLiteralType
p7547
tp7548
I1
s(Vinsert
p7549
I42
VSimpleName: Arrays
p7550
tp7551
I20
s(Vinsert
p7552
I42
VSimpleName: collectionOfProvidersOf
p7553
tp7554
I1
s(Vinsert
p7555
I42
VSimpleName: c2
p7556
tp7557
I1
s(Vinsert
p7558
I45
VStringLiteral: "Unknown Source"
p7559
tp7560
I1
s(Vinsert
p7561
I42
VSimpleName: entity
p7562
tp7563
I2
s(Vinsert
p7564
I74
VParameterizedType: InjectableType<?>
p7565
tp7566
I1
s(Vinsert
p7567
I42
VSimpleName: testToConstructorBindingsFailsOnRawTypes
p7568
tp7569
I1
s(Vinsert
p7570
I43
VSimpleType: TypeEncounter
p7571
tp7572
I2
s(Vinsert
p7573
I40
VQualifiedName: com.google.inject.commands.CommandRecorderTest
p7574
tp7575
I1
s(Vinsert
p7576
I74
VParameterizedType: ScopingVisitor<V>
p7577
tp7578
I1
s(Vinsert
p7579
I43
VSimpleType: ListOfMatchers
p7580
tp7581
I1
s(Vinsert
p7582
I6
VAssertStatement
p7583
tp7584
I1
s(Vinsert
p7585
I42
VSimpleName: f
p7586
tp7587
I3
s(Vinsert
p7588
I42
VSimpleName: javaxProviderOf
p7589
tp7590
I1
s(Vinsert
p7591
I42
VSimpleName: isNull
p7592
tp7593
I1
s(Vinsert
p7594
I42
VSimpleName: hasNext
p7595
tp7596
I5
s(Vinsert
p7597
I42
VSimpleName: iterator
p7598
tp7599
I8
s(Vinsert
p7600
I42
VSimpleName: MoreMethodsCheckedProvider
p7601
tp7602
I1
s(Vinsert
p7603
I42
VSimpleName: BuilderOption
p7604
tp7605
I2
s(Vinsert
p7606
I42
VSimpleName: resolve
p7607
tp7608
I3
s(Vinsert
p7609
I74
VParameterizedType: Outer<String>
p7610
tp7611
I1
s(Vinsert
p7612
I42
VSimpleName: skippedCallStackSize
p7613
tp7614
I1
s(Vinsert
p7615
I43
VSimpleType: SingleMemberInjector
p7616
tp7617
I4
s(Vinsert
p7618
I42
VSimpleName: pushScopeToUsers
p7619
tp7620
I1
s(Vinsert
p7621
I42
VSimpleName: CONTAINER
p7622
tp7623
I1
s(Vinsert
p7624
I42
VSimpleName: isToolable
p7625
tp7626
I1
s(Vinsert
p7627
I42
VSimpleName: predicate
p7628
tp7629
I2
s(Vinsert
p7630
I42
VSimpleName: HashMap
p7631
tp7632
I1
s(Vinsert
p7633
I42
VSimpleName: LineNumberReader
p7634
tp7635
I2
s(Vinsert
p7636
I74
VParameterizedType: WeakReference<?>
p7637
tp7638
I2
s(Vinsert
p7639
I42
VSimpleName: ctorBinding
p7640
tp7641
I2
s(Vinsert
p7642
I40
VQualifiedName: foo.copy
p7643
tp7644
I1
s(Vinsert
p7645
I66
VTextElement: values.
p7646
tp7647
I1
s(Vinsert
p7648
I42
VSimpleName: delegate
p7649
tp7650
I31
s(Vinsert
p7651
I42
VSimpleName: createMethodMapping
p7652
tp7653
I1
s(Vinsert
p7654
I74
VParameterizedType: Factory<HttpServletResponse>
p7655
tp7656
I1
s(Vinsert
p7657
I45
VStringLiteral: "http://the.server/new-uri"
p7658
tp7659
I1
s(Vinsert
p7660
I43
VSimpleType: Scope
p7661
tp7662
I8
s(Vinsert
p7663
I42
VSimpleName: newHashMap
p7664
tp7665
I5
s(Vinsert
p7666
I83
VModifier: final
p7667
tp7668
I100
s(Vinsert
p7669
I42
VSimpleName: openScope
p7670
tp7671
I3
s(Vinsert
p7672
I66
VTextElement: bindings are processed.  The main current usecase for this is resolving Optional 
p7673
tp7674
I1
s(Vinsert
p7675
I42
VSimpleName: testProviderMethodWithWrongException
p7676
tp7677
I1
s(Vinsert
p7678
I42
VSimpleName: prototype
p7679
tp7680
I1
s(Vinsert
p7681
I42
VSimpleName: se
p7682
tp7683
I1
s(Vinsert
p7684
I42
VSimpleName: InstanceBinding
p7685
tp7686
I2
s(Vinsert
p7687
I42
VSimpleName: optionalBinding
p7688
tp7689
I1
s(Vinsert
p7690
I66
VTextElement: bindings.
p7691
tp7692
I1
s(Vinsert
p7693
I43
VSimpleType: Default
p7694
tp7695
I2
s(Vinsert
p7696
I74
VParameterizedType: Matcher<? super Method>
p7697
tp7698
I2
s(Vinsert
p7699
I43
VSimpleType: IFoo
p7700
tp7701
I1
s(Vinsert
p7702
I42
VSimpleName: suite
p7703
tp7704
I38
s(Vinsert
p7705
I42
VSimpleName: TypeToken
p7706
tp7707
I2
s(Vinsert
p7708
I74
VParameterizedType: com.google.inject.Provider<String>
p7709
tp7710
I1
s(Vinsert
p7711
I43
VSimpleType: ImmutableList.Builder
p7712
tp7713
I1
s(Vinsert
p7714
I83
VModifier: static
p7715
tp7716
I43
s(Vinsert
p7717
I42
VSimpleName: Initializables
p7718
tp7719
I1
s(Vinsert
p7720
I42
VSimpleName: toString
p7721
tp7722
I73
s(Vinsert
p7723
I42
VSimpleName: startPersistence
p7724
tp7725
I1
s(Vinsert
p7726
I43
VSimpleType: BindCommand
p7727
tp7728
I6
s(Vinsert
p7729
I42
VSimpleName: barServlet
p7730
tp7731
I1
s(Vinsert
p7732
I42
VSimpleName: interceptorModule
p7733
tp7734
I1
s(Vinsert
p7735
I66
VTextElement: is not executed for injectors created using 
p7736
tp7737
I1
s(Vinsert
p7738
I45
VStringLiteral: "/sam/*"
p7739
tp7740
I1
s(Vinsert
p7741
I66
VTextElement:  List<SingleMemberInjector>
p7742
tp7743
I1
s(Vinsert
p7744
I74
VParameterizedType: Class<T>
p7745
tp7746
I10
s(Vinsert
p7747
I43
VSimpleType: BeanFactory
p7748
tp7749
I1
s(Vinsert
p7750
I43
VSimpleType: Plutonium
p7751
tp7752
I1
s(Vinsert
p7753
I42
VSimpleName: close
p7754
tp7755
I4
s(Vinsert
p7756
I42
VSimpleName: delegateProvider
p7757
tp7758
I2
s(Vinsert
p7759
I42
VSimpleName: hasSerialVersionUid
p7760
tp7761
I1
s(Vinsert
p7762
I42
VSimpleName: parameterizedType
p7763
tp7764
I10
s(Vinsert
p7765
I42
VSimpleName: original
p7766
tp7767
I11
s(Vinsert
p7768
I42
VSimpleName: singleKey
p7769
tp7770
I1
s(Vinsert
p7771
I42
VSimpleName: createValues
p7772
tp7773
I1
s(Vinsert
p7774
I42
VSimpleName: pendingMembersInjectors
p7775
tp7776
I1
s(Vinsert
p7777
I66
VTextElement: Full stack trace for everything 
p7778
tp7779
I1
s(Vinsert
p7780
I42
VSimpleName: Q
p7781
tp7782
I1
s(Vinsert
p7783
I42
VSimpleName: injectors
p7784
tp7785
I7
s(Vinsert
p7786
I42
VSimpleName: getValueKey
p7787
tp7788
I2
s(Vinsert
p7789
I45
VStringLiteral: "but binding annotations should be applied to its parameters instead."
p7790
tp7791
I1
s(Vinsert
p7792
I45
VStringLiteral: "is annotated with @"
p7793
tp7794
I1
s(Vinsert
p7795
I42
VSimpleName: getFromMap
p7796
tp7797
I1
s(Vinsert
p7798
I42
VSimpleName: contains
p7799
tp7800
I23
s(Vinsert
p7801
I43
VSimpleType: ReferenceMapTest
p7802
tp7803
I2
s(Vinsert
p7804
I42
VSimpleName: ProviderLookup
p7805
tp7806
I2
s(Vinsert
p7807
I37
VPostfixExpression: ++
p7808
tp7809
I19
s(Vinsert
p7810
I43
VSimpleType: GuicifiedProvider
p7811
tp7812
I1
s(Vinsert
p7813
I42
VSimpleName: allParameters
p7814
tp7815
I1
s(Vinsert
p7816
I42
VSimpleName: addCreationListener
p7817
tp7818
I1
s(Vinsert
p7819
I42
VSimpleName: BClass
p7820
tp7821
I1
s(Vinsert
p7822
I42
VSimpleName: defaultFactory
p7823
tp7824
I1
s(Vinsert
p7825
I42
VSimpleName: LinkedBindingBuilder
p7826
tp7827
I4
s(Vinsert
p7828
I66
VTextElement: needs to be purged. (See issue 319 and
p7829
tp7830
I1
s(Vinsert
p7831
I42
VSimpleName: DummyFilterImpl
p7832
tp7833
I4
s(Vinsert
p7834
I74
VParameterizedType: RemoteProvider<String>
p7835
tp7836
I1
s(Vinsert
p7837
I74
VParameterizedType: Class<? extends Filter>
p7838
tp7839
I1
s(Vinsert
p7840
I42
VSimpleName: fProvider
p7841
tp7842
I2
s(Vinsert
p7843
I42
VSimpleName: first
p7844
tp7845
I2
s(Vinsert
p7846
I42
VSimpleName: getFromClassNames
p7847
tp7848
I1
s(Vinsert
p7849
I45
VStringLiteral: "No such method: "
p7850
tp7851
I1
s(Vinsert
p7852
I42
VSimpleName: NoSuchMethodException
p7853
tp7854
I6
s(Vinsert
p7855
I43
VSimpleType: KeyBinding
p7856
tp7857
I1
s(Vinsert
p7858
I45
VStringLiteral: "[unknown source]"
p7859
tp7860
I1
s(Vinsert
p7861
I42
VSimpleName: Character
p7862
tp7863
I2
s(Vinsert
p7864
I42
VSimpleName: testIndirect
p7865
tp7866
I1
s(Vinsert
p7867
I42
VSimpleName: unmodifiableMap
p7868
tp7869
I1
s(Vinsert
p7870
I74
VParameterizedType: Map.Entry<?,Binding<?>>
p7871
tp7872
I1
s(Vinsert
p7873
I42
VSimpleName: memberType
p7874
tp7875
I2
s(Vinsert
p7876
I42
VSimpleName: MembersInjectorImpl
p7877
tp7878
I2
s(Vinsert
p7879
I43
VSimpleType: LocalClass
p7880
tp7881
I1
s(Vinsert
p7882
I74
VParameterizedType: TypeLiteral<T>
p7883
tp7884
I8
s(Vinsert
p7885
I42
VSimpleName: createWithInitializer
p7886
tp7887
I1
s(Vinsert
p7888
I42
VSimpleName: scoper
p7889
tp7890
I1
s(Vinsert
p7891
I40
VQualifiedName: com.google.inject.Stage
p7892
tp7893
I1
s(Vinsert
p7894
I42
VSimpleName: rehashables
p7895
tp7896
I1
s(Vinsert
p7897
I42
VSimpleName: Asserts
p7898
tp7899
I6
s(Vinsert
p7900
I42
VSimpleName: testReplace
p7901
tp7902
I1
s(Vinsert
p7903
I42
VSimpleName: owner
p7904
tp7905
I1
s(Vinsert
p7906
I42
VSimpleName: getMethodMatcher
p7907
tp7908
I1
s(Vinsert
p7909
I42
VSimpleName: isAssignableFrom
p7910
tp7911
I1
s(Vinsert
p7912
I42
VSimpleName: entries
p7913
tp7914
I1
s(Vinsert
p7915
I42
VSimpleName: collectFilterDefinitions
p7916
tp7917
I1
s(Vinsert
p7918
I42
VSimpleName: alreadySeenListeners
p7919
tp7920
I1
s(Vinsert
p7921
I42
VSimpleName: interceptedBinding
p7922
tp7923
I1
s(Vinsert
p7924
I42
VSimpleName: NoDefaults
p7925
tp7926
I2
s(Vinsert
p7927
I42
VSimpleName: providerType
p7928
tp7929
I3
s(Vinsert
p7930
I42
VSimpleName: eq
p7931
tp7932
I1
s(Vinsert
p7933
I43
VSimpleType: LazyNonTransparentProvider
p7934
tp7935
I2
s(Vinsert
p7936
I42
VSimpleName: testModule
p7937
tp7938
I1
s(Vinsert
p7939
I42
VSimpleName: newSetFromMap
p7940
tp7941
I9
s(Vinsert
p7942
I42
VSimpleName: UnmodifiableIterator
p7943
tp7944
I2
s(Vinsert
p7945
I42
VSimpleName: InstanceNode
p7946
tp7947
I3
s(Vinsert
p7948
I42
VSimpleName: UriPatternType
p7949
tp7950
I3
s(Vinsert
p7951
I42
VSimpleName: InvocationTargetException
p7952
tp7953
I6
s(Vinsert
p7954
I42
VSimpleName: overridden
p7955
tp7956
I2
s(Vinsert
p7957
I42
VSimpleName: loadEagerSingletons
p7958
tp7959
I1
s(Vinsert
p7960
I42
VSimpleName: getListener
p7961
tp7962
I1
s(Vinsert
p7963
I42
VSimpleName: installAsSubModule
p7964
tp7965
I2
s(Vinsert
p7966
I45
VStringLiteral: "4) Error at "
p7967
tp7968
I1
s(Vinsert
p7969
I42
VSimpleName: getMapBindings
p7970
tp7971
I1
s(Vinsert
p7972
I45
VStringLiteral: "This Provider cannot be used until the Injector has been created."
p7973
tp7974
I3
s(Vinsert
p7975
I42
VSimpleName: ReferenceCache
p7976
tp7977
I1
s(Vinsert
p7978
I42
VSimpleName: RequestScoper
p7979
tp7980
I2
s(Vinsert
p7981
I76
VWildcardType: ? extends Module
p7982
tp7983
I5
s(Vinsert
p7984
I74
VParameterizedType: Constructor<T>
p7985
tp7986
I3
s(Vinsert
p7987
I43
VSimpleType: MaxResults
p7988
tp7989
I1
s(Vinsert
p7990
I45
VStringLiteral: " annotated with "
p7991
tp7992
I1
s(Vinsert
p7993
I42
VSimpleName: SingleParameterInjector
p7994
tp7995
I1
s(Vinsert
p7996
I7
VAssignment: =
p7997
tp7998
I223
s(Vinsert
p7999
I42
VSimpleName: PrivateEnvironment
p8000
tp8001
I4
s(Vinsert
p8002
I45
VStringLiteral: ".t(MembersInjectorTest.java:"
p8003
tp8004
I1
s(Vinsert
p8005
I42
VSimpleName: factoryMethodName
p8006
tp8007
I1
s(Vinsert
p8008
I42
VSimpleName: actualExceptionTypes
p8009
tp8010
I1
s(Vinsert
p8011
I74
VParameterizedType: List<MethodAspect>
p8012
tp8013
I1
s(Vinsert
p8014
I42
VSimpleName: getRequestURL
p8015
tp8016
I1
s(Vinsert
p8017
I74
VParameterizedType: Key<F>
p8018
tp8019
I2
s(Vinsert
p8020
I42
VSimpleName: Mustang
p8021
tp8022
I3
s(Vinsert
p8023
I43
VSimpleType: BuilderOption
p8024
tp8025
I2
s(Vinsert
p8026
I45
VStringLiteral: "Scope is set more than once."
p8027
tp8028
I1
s(Vinsert
p8029
I42
VSimpleName: executorService
p8030
tp8031
I1
s(Vinsert
p8032
I42
VSimpleName: setProperty
p8033
tp8034
I2
s(Vinsert
p8035
I42
VSimpleName: mapProvider
p8036
tp8037
I1
s(Vinsert
p8038
I42
VSimpleName: HashMultimap
p8039
tp8040
I1
s(Vinsert
p8041
I74
VParameterizedType: Set<Object>
p8042
tp8043
I1
s(Vinsert
p8044
I42
VSimpleName: assertNothingInjected
p8045
tp8046
I2
s(Vinsert
p8047
I42
VSimpleName: scope
p8048
tp8049
I21
s(Vinsert
p8050
I42
VSimpleName: constructorInjectionPoint
p8051
tp8052
I1
s(Vinsert
p8053
I42
VSimpleName: hasDefaultName
p8054
tp8055
I1
s(Vinsert
p8056
I74
VParameterizedType: ConstructorInjector<T>
p8057
tp8058
I2
s(Vinsert
p8059
I74
VParameterizedType: WeakReference<Object>
p8060
tp8061
I1
s(Vinsert
p8062
I66
VTextElement: <p>One potential problem with this approach is that parent and child injectors cannot define
p8063
tp8064
I1
s(Vinsert
p8065
I42
VSimpleName: Date
p8066
tp8067
I1
s(Vinsert
p8068
I42
VSimpleName: intProvider
p8069
tp8070
I1
s(Vinsert
p8071
I42
VSimpleName: returnType
p8072
tp8073
I4
s(Vinsert
p8074
I42
VSimpleName: getDeclaringSource
p8075
tp8076
I19
s(Vinsert
p8077
I42
VSimpleName: errors
p8078
tp8079
I98
s(Vinsert
p8080
I42
VSimpleName: notify
p8081
tp8082
I7
s(Vinsert
p8083
I42
VSimpleName: instanceId
p8084
tp8085
I1
s(Vinsert
p8086
I42
VSimpleName: local
p8087
tp8088
I6
s(Vinsert
p8089
I42
VSimpleName: Visibility
p8090
tp8091
I3
s(Vinsert
p8092
I42
VSimpleName: bindingData
p8093
tp8094
I1
s(Vinsert
p8095
I45
VStringLiteral: "Error converting '"
p8096
tp8097
I1
s(Vinsert
p8098
I42
VSimpleName: writeReplace
p8099
tp8100
I1
s(Vinsert
p8101
I45
VStringLiteral: "annotationType"
p8102
tp8103
I2
s(Vinsert
p8104
I42
VSimpleName: valueKeyToKeyBuilder
p8105
tp8106
I1
s(Vinsert
p8107
I42
VSimpleName: BoundFieldModule
p8108
tp8109
I11
s(Vinsert
p8110
I42
VSimpleName: Collection
p8111
tp8112
I20
s(Vinsert
p8113
I42
VSimpleName: visitSubModule
p8114
tp8115
I1
s(Vinsert
p8116
I42
VSimpleName: ensureRetainedAtRuntime
p8117
tp8118
I1
s(Vinsert
p8119
I42
VSimpleName: highestOneBit
p8120
tp8121
I1
s(Vinsert
p8122
I40
VQualifiedName: indirect.hasOptionalInjections
p8123
tp8124
I2
s(Vinsert
p8125
I66
VTextElement:  contains any error
p8126
tp8127
I1
s(Vinsert
p8128
I42
VSimpleName: hasMoreElements
p8129
tp8130
I2
s(Vinsert
p8131
I43
VSimpleType: ElementVisitor
p8132
tp8133
I4
s(Vinsert
p8134
I43
VSimpleType: Encounter
p8135
tp8136
I2
s(Vinsert
p8137
I43
VSimpleType: ParallelMemberInjectionCallback1
p8138
tp8139
I1
s(Vinsert
p8140
I42
VSimpleName: HasOptionalInjections
p8141
tp8142
I1
s(Vinsert
p8143
I74
VParameterizedType: Factory<Service>
p8144
tp8145
I1
s(Vinsert
p8146
I42
VSimpleName: componentTypeResolved
p8147
tp8148
I1
s(Vinsert
p8149
I42
VSimpleName: findBindingsByType
p8150
tp8151
I1
s(Vinsert
p8152
I43
VSimpleType: MapBinder
p8153
tp8154
I6
s(Vinsert
p8155
I42
VSimpleName: invoke
p8156
tp8157
I8
s(Vinsert
p8158
I42
VSimpleName: keyWithInstance
p8159
tp8160
I1
s(Vinsert
p8161
I42
VSimpleName: setParameter
p8162
tp8163
I1
s(Vinsert
p8164
I43
VSimpleType: ElementSource
p8165
tp8166
I13
s(Vinsert
p8167
I43
VSimpleType: NegativeOne
p8168
tp8169
I1
s(Vinsert
p8170
I42
VSimpleName: isScopeAnnotation
p8171
tp8172
I2
s(Vinsert
p8173
I42
VSimpleName: addEqualityGroup
p8174
tp8175
I1
s(Vinsert
p8176
I42
VSimpleName: e2
p8177
tp8178
I1
s(Vinsert
p8179
I43
VSimpleType: ProviderMethod
p8180
tp8181
I2
s(Vinsert
p8182
I42
VSimpleName: child
p8183
tp8184
I2
s(Vinsert
p8185
I42
VSimpleName: methodHandleByMethod
p8186
tp8187
I2
s(Vinsert
p8188
I42
VSimpleName: visitConstant
p8189
tp8190
I1
s(Vinsert
p8191
I42
VSimpleName: secondThreadResult
p8192
tp8193
I1
s(Vinsert
p8194
I42
VSimpleName: setConstructor
p8195
tp8196
I1
s(Vinsert
p8197
I34
VNumberLiteral: 5.0d
p8198
tp8199
I2
s(Vinsert
p8200
I43
VSimpleType: TProvider
p8201
tp8202
I1
s(Vinsert
p8203
I42
VSimpleName: javaOptionalBinder
p8204
tp8205
I1
s(Vinsert
p8206
I43
VSimpleType: Service
p8207
tp8208
I2
s(Vinsert
p8209
I42
VSimpleName: visitEagerSingleton
p8210
tp8211
I1
s(Vinsert
p8212
I42
VSimpleName: testNotProvided
p8213
tp8214
I1
s(Vinsert
p8215
I43
VSimpleType: SelectChannelConnector
p8216
tp8217
I2
s(Vinsert
p8218
I43
VSimpleType: InjectorOptions
p8219
tp8220
I2
s(Vinsert
p8221
I42
VSimpleName: OuterAmbiguousModule
p8222
tp8223
I2
s(Vinsert
p8224
I43
VSimpleType: Future
p8225
tp8226
I4
s(Vinsert
p8227
I74
VParameterizedType: TypeToken<T>
p8228
tp8229
I1
s(Vinsert
p8230
I42
VSimpleName: Injector
p8231
tp8232
I70
s(Vinsert
p8233
I66
VTextElement: .  
p8234
tp8235
I1
s(Vinsert
p8236
I42
VSimpleName: getValue
p8237
tp8238
I7
s(Vinsert
p8239
I42
VSimpleName: bindConstant
p8240
tp8241
I12
s(Vinsert
p8242
I42
VSimpleName: Green
p8243
tp8244
I2
s(Vinsert
p8245
I74
VParameterizedType: Future<JustInTime>
p8246
tp8247
I1
s(Vinsert
p8248
I42
VSimpleName: keyMatches
p8249
tp8250
I3
s(Vinsert
p8251
I42
VSimpleName: blacklistedKeys
p8252
tp8253
I1
s(Vinsert
p8254
I43
VSimpleType: CustomNullableFooField
p8255
tp8256
I1
s(Vinsert
p8257
I42
VSimpleName: guiceInject
p8258
tp8259
I1
s(Vinsert
p8260
I42
VSimpleName: testMisplacedExposeStatement
p8261
tp8262
I1
s(Vinsert
p8263
I45
VStringLiteral: "/instance"
p8264
tp8265
I1
s(Vinsert
p8266
I42
VSimpleName: Dummy
p8267
tp8268
I1
s(Vinsert
p8269
I42
VSimpleName: HttpSession
p8270
tp8271
I3
s(Vinsert
p8272
I42
VSimpleName: modulesSet
p8273
tp8274
I1
s(Vinsert
p8275
I42
VSimpleName: sbinder
p8276
tp8277
I1
s(Vinsert
p8278
I42
VSimpleName: createQuery
p8279
tp8280
I1
s(Vinsert
p8281
I8
VBlock
p8282
tp8283
I1389
s(Vinsert
p8284
I42
VSimpleName: getMethodInterceptors
p8285
tp8286
I5
s(Vinsert
p8287
I45
VStringLiteral: "null returned by binding at "
p8288
tp8289
I1
s(Vinsert
p8290
I45
VStringLiteral: "rawtypes"
p8291
tp8292
I2
s(Vinsert
p8293
I42
VSimpleName: getDeclaredMethods
p8294
tp8295
I2
s(Vinsert
p8296
I45
VStringLiteral: "A"
p8297
tp8298
I8
s(Vinsert
p8299
I42
VSimpleName: when
p8300
tp8301
I1
s(Vinsert
p8302
I42
VSimpleName: getParameterMap
p8303
tp8304
I1
s(Vinsert
p8305
I43
VSimpleType: Character
p8306
tp8307
I2
s(Vinsert
p8308
I76
VWildcardType: ?
p8309
tp8310
I248
s(Vinsert
p8311
I42
VSimpleName: acceptScopingVisitor
p8312
tp8313
I6
s(Vinsert
p8314
I42
VSimpleName: SampleSingleton
p8315
tp8316
I2
s(Vinsert
p8317
I42
VSimpleName: abc
p8318
tp8319
I2
s(Vinsert
p8320
I42
VSimpleName: testCircularlyDependentConstructors
p8321
tp8322
I1
s(Vinsert
p8323
I46
VSuperConstructorInvocation
p8324
tp8325
I7
s(Vinsert
p8326
I42
VSimpleName: replay
p8327
tp8328
I4
s(Vinsert
p8329
I40
VQualifiedName: java.util.ArrayList
p8330
tp8331
I2
s(Vinsert
p8332
I42
VSimpleName: ProviderInstanceBindingImpl
p8333
tp8334
I2
s(Vinsert
p8335
I40
VQualifiedName: Stage.DEVELOPMENT
p8336
tp8337
I2
s(Vinsert
p8338
I42
VSimpleName: providers
p8339
tp8340
I6
s(Vinsert
p8341
I40
VQualifiedName: State.NONE
p8342
tp8343
I4
s(Vinsert
p8344
I42
VSimpleName: environmentToInjector
p8345
tp8346
I1
s(Vinsert
p8347
I42
VSimpleName: transactional
p8348
tp8349
I1
s(Vinsert
p8350
I42
VSimpleName: LinkedServletBinding
p8351
tp8352
I1
s(Vinsert
p8353
I42
VSimpleName: visitBindInterceptor
p8354
tp8355
I2
s(Vinsert
p8356
I66
VTextElement:  if the method is annotated 
p8357
tp8358
I1
s(Vinsert
p8359
I42
VSimpleName: CUSTOM_LOADER_ENABLED
p8360
tp8361
I1
s(Vinsert
p8362
I42
VSimpleName: someObject
p8363
tp8364
I1
s(Vinsert
p8365
I42
VSimpleName: duplicateKeys
p8366
tp8367
I1
s(Vinsert
p8368
I45
VStringLiteral: "Guice should not allow keys for T"
p8369
tp8370
I1
s(Vinsert
p8371
I42
VSimpleName: proxyFactoryBuilder
p8372
tp8373
I3
s(Vinsert
p8374
I42
VSimpleName: initializer
p8375
tp8376
I2
s(Vinsert
p8377
I42
VSimpleName: initializedSoFar
p8378
tp8379
I4
s(Vinsert
p8380
I42
VSimpleName: setNamingPolicy
p8381
tp8382
I1
s(Vinsert
p8383
I42
VSimpleName: InternalContext
p8384
tp8385
I8
s(Vinsert
p8386
I42
VSimpleName: Context
p8387
tp8388
I5
s(Vinsert
p8389
I76
VWildcardType: ? extends HttpServlet
p8390
tp8391
I1
s(Vinsert
p8392
I42
VSimpleName: awaitFullGc
p8393
tp8394
I2
s(Vinsert
p8395
I42
VSimpleName: sInjected
p8396
tp8397
I1
s(Vinsert
p8398
I42
VSimpleName: innerMessage
p8399
tp8400
I1
s(Vinsert
p8401
I43
VSimpleType: BarImpl
p8402
tp8403
I1
s(Vinsert
p8404
I42
VSimpleName: Connector
p8405
tp8406
I2
s(Vinsert
p8407
I42
VSimpleName: BarImpl
p8408
tp8409
I1
s(Vinsert
p8410
I42
VSimpleName: staticInjection
p8411
tp8412
I2
s(Vinsert
p8413
I42
VSimpleName: link
p8414
tp8415
I4
s(Vinsert
p8416
I42
VSimpleName: ContainerImpl
p8417
tp8418
I3
s(Vinsert
p8419
I42
VSimpleName: getTypeLiteral
p8420
tp8421
I22
s(Vinsert
p8422
I42
VSimpleName: localMemberInjectors
p8423
tp8424
I2
s(Vinsert
p8425
I42
VSimpleName: MoreTypes
p8426
tp8427
I7
s(Vinsert
p8428
I40
VQualifiedName: injector.options.stage
p8429
tp8430
I1
s(Vinsert
p8431
I43
VSimpleType: JustInTime
p8432
tp8433
I1
s(Vinsert
p8434
I42
VSimpleName: keyOption
p8435
tp8436
I1
s(Vinsert
p8437
I42
VSimpleName: privateElements
p8438
tp8439
I4
s(Vinsert
p8440
I43
VSimpleType: Contact
p8441
tp8442
I2
s(Vinsert
p8443
I42
VSimpleName: internalContextsMap
p8444
tp8445
I1
s(Vinsert
p8446
I42
VSimpleName: BarAnnotation
p8447
tp8448
I2
s(Vinsert
p8449
I40
VQualifiedName: Exceptions.UnhandledCheckedUserException
p8450
tp8451
I1
s(Vinsert
p8452
I42
VSimpleName: filterConfig
p8453
tp8454
I4
s(Vinsert
p8455
I42
VSimpleName: mi
p8456
tp8457
I2
s(Vinsert
p8458
I42
VSimpleName: providerKey
p8459
tp8460
I1
s(Vinsert
p8461
I42
VSimpleName: Count
p8462
tp8463
I1
s(Vinsert
p8464
I74
VParameterizedType: Encounter<I>
p8465
tp8466
I2
s(Vinsert
p8467
I42
VSimpleName: buildBundle
p8468
tp8469
I1
s(Vinsert
p8470
I43
VSimpleType: SerializationTest
p8471
tp8472
I1
s(Vinsert
p8473
I45
VStringLiteral: "Em was not kept open across txns"
p8474
tp8475
I1
s(Vinsert
p8476
I42
VSimpleName: BigDecimal
p8477
tp8478
I3
s(Vinsert
p8479
I42
VSimpleName: mockBinding
p8480
tp8481
I2
s(Vinsert
p8482
I43
VSimpleType: IllegalArgumentException
p8483
tp8484
I5
s(Vinsert
p8485
I42
VSimpleName: retention
p8486
tp8487
I4
s(Vinsert
p8488
I42
VSimpleName: t
p8489
tp8490
I34
s(Vinsert
p8491
I74
VParameterizedType: ExposureBuilder<?>
p8492
tp8493
I1
s(Vinsert
p8494
I43
VSimpleType: InnerAmbiguousModule
p8495
tp8496
I1
s(Vinsert
p8497
I43
VSimpleType: Firebird
p8498
tp8499
I2
s(Vinsert
p8500
I42
VSimpleName: allowDuplicates
p8501
tp8502
I2
s(Vinsert
p8503
I42
VSimpleName: testScopeUsedButNotBound
p8504
tp8505
I1
s(Vinsert
p8506
I43
VSimpleType: SourceProvider
p8507
tp8508
I9
s(Vinsert
p8509
I40
VQualifiedName: sourcesAsStrings.length
p8510
tp8511
I1
s(Vinsert
p8512
I45
VStringLiteral: "?"
p8513
tp8514
I1
s(Vinsert
p8515
I42
VSimpleName: testFactoryMethodCalledEquals
p8516
tp8517
I4
s(Vinsert
p8518
I42
VSimpleName: fastMethod
p8519
tp8520
I1
s(Vinsert
p8521
I42
VSimpleName: canonicalizeKey
p8522
tp8523
I3
s(Vinsert
p8524
I42
VSimpleName: notifyListeners
p8525
tp8526
I1
s(Vinsert
p8527
I42
VSimpleName: flag
p8528
tp8529
I1
s(Vinsert
p8530
I42
VSimpleName: apply
p8531
tp8532
I6
s(Vinsert
p8533
I74
VParameterizedType: ReferenceMap<String,Integer>
p8534
tp8535
I1
s(Vinsert
p8536
I42
VSimpleName: forName
p8537
tp8538
I5
s(Vinsert
p8539
I43
VSimpleType: Exception
p8540
tp8541
I21
s(Vinsert
p8542
I66
VTextElement: the JIT bindings in the parent injector don't change while we're being built
p8543
tp8544
I1
s(Vinsert
p8545
I42
VSimpleName: getDeclaredConstructor
p8546
tp8547
I5
s(Vinsert
p8548
I66
VTextElement: Sets the name of this binding.
p8549
tp8550
I1
s(Vinsert
p8551
I43
VSimpleType: InternalFactory
p8552
tp8553
I4
s(Vinsert
p8554
I42
VSimpleName: alias
p8555
tp8556
I2
s(Vinsert
p8557
I42
VSimpleName: RequestScoped
p8558
tp8559
I1
s(Vinsert
p8560
I42
VSimpleName: shell
p8561
tp8562
I2
s(Vinsert
p8563
I42
VSimpleName: chooseTableSize
p8564
tp8565
I1
s(Vinsert
p8566
I42
VSimpleName: ORANGE
p8567
tp8568
I1
s(Vinsert
p8569
I40
VQualifiedName: StaticInjectionTest.Static
p8570
tp8571
I1
s(Vinsert
p8572
I42
VSimpleName: circularProxiesDisabled
p8573
tp8574
I2
s(Vinsert
p8575
I45
VStringLiteral: "from bindings:"
p8576
tp8577
I2
s(Vinsert
p8578
I42
VSimpleName: setSecure
p8579
tp8580
I1
s(Vinsert
p8581
I42
VSimpleName: newModule
p8582
tp8583
I3
s(Vinsert
p8584
I42
VSimpleName: PrivateBinder
p8585
tp8586
I2
s(Vinsert
p8587
I42
VSimpleName: mapCapacity
p8588
tp8589
I2
s(Vinsert
p8590
I74
VParameterizedType: ImmutableList<Key<?>>
p8591
tp8592
I1
s(Vinsert
p8593
I42
VSimpleName: jpaQuery
p8594
tp8595
I3
s(Vinsert
p8596
I40
VQualifiedName: ErrorMessages.MISSING_BINDING
p8597
tp8598
I1
s(Vinsert
p8599
I42
VSimpleName: combined1
p8600
tp8601
I1
s(Vinsert
p8602
I1
VAnonymousClassDeclaration
p8603
tp8604
I109
s(Vinsert
p8605
I74
VParameterizedType: ProxyFactory<A>
p8606
tp8607
I2
s(Vinsert
p8608
I42
VSimpleName: get
p8609
tp8610
I281
s(Vinsert
p8611
I42
VSimpleName: replayedCommands
p8612
tp8613
I1
s(Vinsert
p8614
I43
VSimpleType: ImmutableList
p8615
tp8616
I5
s(Vinsert
p8617
I44
VSingleVariableDeclaration
p8618
tp8619
I559
s(Vinsert
p8620
I42
VSimpleName: Volkswagen
p8621
tp8622
I1
s(Vinsert
p8623
I42
VSimpleName: methodQuery
p8624
tp8625
I3
s(Vinsert
p8626
I74
VParameterizedType: Provider<? extends T>
p8627
tp8628
I1
s(Vinsert
p8629
I43
VSimpleType: OrMatcher
p8630
tp8631
I2
s(Vinsert
p8632
I42
VSimpleName: InjectsBrokenMembersInjector
p8633
tp8634
I1
s(Vinsert
p8635
I5
VArrayType: Cookie[]
p8636
tp8637
I1
s(Vinsert
p8638
I42
VSimpleName: m
p8639
tp8640
I6
s(Vinsert
p8641
I42
VSimpleName: toException
p8642
tp8643
I3
s(Vinsert
p8644
I5
VArrayType: Type[]
p8645
tp8646
I3
s(Vinsert
p8647
I42
VSimpleName: testFactoryMethods
p8648
tp8649
I1
s(Vinsert
p8650
I42
VSimpleName: SourceProviders
p8651
tp8652
I7
s(Vinsert
p8653
I74
VParameterizedType: Key<HttpServlet>
p8654
tp8655
I1
s(Vinsert
p8656
I42
VSimpleName: session
p8657
tp8658
I3
s(Vinsert
p8659
I42
VSimpleName: ServletsModuleBuilder
p8660
tp8661
I1
s(Vinsert
p8662
I42
VSimpleName: ServletPipelineRequestDispatcherTest
p8663
tp8664
I1
s(Vinsert
p8665
I42
VSimpleName: setUp
p8666
tp8667
I5
s(Vinsert
p8668
I42
VSimpleName: springFactory
p8669
tp8670
I1
s(Vinsert
p8671
I42
VSimpleName: getExternalContextStack
p8672
tp8673
I1
s(Vinsert
p8674
I45
VStringLiteral: "com.google.inject.privatemodules.PrivateModule$Expose"
p8675
tp8676
I1
s(Vinsert
p8677
I42
VSimpleName: FailingPrivateModule
p8678
tp8679
I1
s(Vinsert
p8680
I66
VTextElement: See the License for the specific language governing permissions and
p8681
tp8682
I2
s(Vinsert
p8683
I45
VStringLiteral: "/nothing"
p8684
tp8685
I1
s(Vinsert
p8686
I42
VSimpleName: Scoped
p8687
tp8688
I1
s(Vinsert
p8689
I40
VQualifiedName: root.errors
p8690
tp8691
I4
s(Vinsert
p8692
I42
VSimpleName: InjectionInterceptor
p8693
tp8694
I1
s(Vinsert
p8695
I42
VSimpleName: requestName
p8696
tp8697
I1
s(Vinsert
p8698
I42
VSimpleName: IndexedBinding
p8699
tp8700
I2
s(Vinsert
p8701
I43
VSimpleType: GenericArrayType
p8702
tp8703
I5
s(Vinsert
p8704
I42
VSimpleName: isBlacklisted
p8705
tp8706
I1
s(Vinsert
p8707
I42
VSimpleName: ServletDefinitionPathsTest
p8708
tp8709
I1
s(Vinsert
p8710
I66
VTextElement: create your injector. Otherwise, it returns null.
p8711
tp8712
I1
s(Vinsert
p8713
I42
VSimpleName: notificationCount
p8714
tp8715
I1
s(Vinsert
p8716
I42
VSimpleName: permission
p8717
tp8718
I3
s(Vinsert
p8719
I40
VQualifiedName: java.lang.reflect.InvocationHandler
p8720
tp8721
I1
s(Vinsert
p8722
I45
VStringLiteral: "B"
p8723
tp8724
I4
s(Vinsert
p8725
I45
VStringLiteral: "identicalTo("
p8726
tp8727
I1
s(Vinsert
p8728
I42
VSimpleName: assertEqualWhenReserialized
p8729
tp8730
I5
s(Vinsert
p8731
I42
VSimpleName: canonicalizeForKey
p8732
tp8733
I1
s(Vinsert
p8734
I42
VSimpleName: ConvertedConstantBinding
p8735
tp8736
I2
s(Vinsert
p8737
I42
VSimpleName: Default
p8738
tp8739
I2
s(Vinsert
p8740
I42
VSimpleName: newOptionalBinder
p8741
tp8742
I6
s(Vinsert
p8743
I42
VSimpleName: FinalizableReference
p8744
tp8745
I3
s(Vinsert
p8746
I43
VSimpleType: R
p8747
tp8748
I1
s(Vinsert
p8749
I74
VParameterizedType: ListMultimap<Thread,Key<?>>
p8750
tp8751
I1
s(Vinsert
p8752
I43
VSimpleType: Stage
p8753
tp8754
I3
s(Vinsert
p8755
I42
VSimpleName: Daily
p8756
tp8757
I1
s(Vinsert
p8758
I42
VSimpleName: membersInjectors
p8759
tp8760
I1
s(Vinsert
p8761
I43
VSimpleType: WorkManager
p8762
tp8763
I2
s(Vinsert
p8764
I41
VReturnStatement
p8765
tp8766
I425
s(Vinsert
p8767
I40
VQualifiedName: parent.options
p8768
tp8769
I1
s(Vinsert
p8770
I74
VParameterizedType: Callable<T>
p8771
tp8772
I1
s(Vinsert
p8773
I42
VSimpleName: processSetBinding
p8774
tp8775
I1
s(Vinsert
p8776
I42
VSimpleName: MapBinder
p8777
tp8778
I16
s(Vinsert
p8779
I42
VSimpleName: URL
p8780
tp8781
I1
s(Vinsert
p8782
I5
VArrayType: String[]
p8783
tp8784
I8
s(Vinsert
p8785
I42
VSimpleName: assistedReturnType
p8786
tp8787
I1
s(Vinsert
p8788
I74
VParameterizedType: Collection<?>
p8789
tp8790
I1
s(Vinsert
p8791
I42
VSimpleName: argument
p8792
tp8793
I1
s(Vinsert
p8794
I43
VSimpleType: com.google.inject.multibindings.MultibinderTest
p8795
tp8796
I1
s(Vinsert
p8797
I42
VSimpleName: root
p8798
tp8799
I3
s(Vinsert
p8800
I27
VInfixExpression: <
p8801
tp8802
I12
s(Vinsert
p8803
I42
VSimpleName: IllegalStateException
p8804
tp8805
I8
s(Vinsert
p8806
I43
VSimpleType: Void
p8807
tp8808
I7
s(Vinsert
p8809
I40
VQualifiedName: injector.lookups
p8810
tp8811
I1
s(Vinsert
p8812
I43
VSimpleType: TypeToken
p8813
tp8814
I2
s(Vinsert
p8815
I43
VSimpleType: J
p8816
tp8817
I1
s(Vinsert
p8818
I42
VSimpleName: toConstant
p8819
tp8820
I1
s(Vinsert
p8821
I42
VSimpleName: OrMatcher
p8822
tp8823
I2
s(Vinsert
p8824
I42
VSimpleName: testSetBindings
p8825
tp8826
I1
s(Vinsert
p8827
I42
VSimpleName: collectionOfProvidersKey
p8828
tp8829
I2
s(Vinsert
p8830
I42
VSimpleName: mock
p8831
tp8832
I3
s(Vinsert
p8833
I42
VSimpleName: ensureScopeNotSet
p8834
tp8835
I1
s(Vinsert
p8836
I42
VSimpleName: run
p8837
tp8838
I7
s(Vinsert
p8839
I40
VQualifiedName: com.google.common.collect.ImmutableSet
p8840
tp8841
I1
s(Vinsert
p8842
I42
VSimpleName: nameOf
p8843
tp8844
I1
s(Vinsert
p8845
I74
VParameterizedType: MapBinder<K,V>
p8846
tp8847
I1
s(Vinsert
p8848
I42
VSimpleName: Scoping
p8849
tp8850
I1
s(Vinsert
p8851
I45
VStringLiteral: "1) Error at "
p8852
tp8853
I2
s(Vinsert
p8854
I74
VParameterizedType: ConstructorBindingImpl<?>
p8855
tp8856
I2
s(Vinsert
p8857
I42
VSimpleName: acquire
p8858
tp8859
I1
s(Vinsert
p8860
I42
VSimpleName: setEffectiveScope
p8861
tp8862
I1
s(Vinsert
p8863
I45
VStringLiteral: "%s has more than one generic type parameter: %s"
p8864
tp8865
I1
s(Vinsert
p8866
I42
VSimpleName: mockTypeConverter
p8867
tp8868
I1
s(Vinsert
p8869
I40
VQualifiedName: NullObject.INSTANCE
p8870
tp8871
I2
s(Vinsert
p8872
I42
VSimpleName: untargettedBindings
p8873
tp8874
I2
s(Vinsert
p8875
I42
VSimpleName: createMock
p8876
tp8877
I13
s(Vinsert
p8878
I42
VSimpleName: collectionOfJavaxProvidersKey
p8879
tp8880
I1
s(Vinsert
p8881
I42
VSimpleName: entryType
p8882
tp8883
I1
s(Vinsert
p8884
I42
VSimpleName: getAllBindings
p8885
tp8886
I4
s(Vinsert
p8887
I42
VSimpleName: validateExceptions
p8888
tp8889
I1
s(Vinsert
p8890
I74
VParameterizedType: TypeLiteral<Collection<javax.inject.Provider<T>>>
p8891
tp8892
I1
s(Vinsert
p8893
I43
VSimpleType: BlacklistKey
p8894
tp8895
I1
s(Vinsert
p8896
I42
VSimpleName: getScopeBindings
p8897
tp8898
I2
s(Vinsert
p8899
I42
VSimpleName: bindCommand
p8900
tp8901
I1
s(Vinsert
p8902
I74
VParameterizedType: ConstantFactory<Stage>
p8903
tp8904
I1
s(Vinsert
p8905
I42
VSimpleName: CUTOFF
p8906
tp8907
I1
s(Vinsert
p8908
I42
VSimpleName: Future
p8909
tp8910
I4
s(Vinsert
p8911
I43
VSimpleType: OptionalBinder
p8912
tp8913
I3
s(Vinsert
p8914
I42
VSimpleName: assistedConstructor
p8915
tp8916
I1
s(Vinsert
p8917
I42
VSimpleName: afterInjection
p8918
tp8919
I1
s(Vinsert
p8920
I42
VSimpleName: found
p8921
tp8922
I8
s(Vinsert
p8923
I42
VSimpleName: hiddenMethodReturnClass
p8924
tp8925
I1
s(Vinsert
p8926
I42
VSimpleName: testMultibinderSetPermitDuplicateCallsToPermitDuplicates
p8927
tp8928
I1
s(Vinsert
p8929
I42
VSimpleName: DancePartyFactory
p8930
tp8931
I1
s(Vinsert
p8932
I42
VSimpleName: ofType
p8933
tp8934
I12
s(Vinsert
p8935
I45
VStringLiteral: "Export-Package"
p8936
tp8937
I1
s(Vinsert
p8938
I42
VSimpleName: Builder
p8939
tp8940
I1
s(Vinsert
p8941
I76
VWildcardType: ? extends T
p8942
tp8943
I13
s(Vinsert
p8944
I42
VSimpleName: FastConstructor
p8945
tp8946
I1
s(Vinsert
p8947
I45
VStringLiteral: "*.html"
p8948
tp8949
I1
s(Vinsert
p8950
I42
VSimpleName: factoryType
p8951
tp8952
I6
s(Vinsert
p8953
I42
VSimpleName: assertBindingSucceeds
p8954
tp8955
I1
s(Vinsert
p8956
I42
VSimpleName: M
p8957
tp8958
I1
s(Vinsert
p8959
I42
VSimpleName: finder
p8960
tp8961
I1
s(Vinsert
p8962
I42
VSimpleName: previous
p8963
tp8964
I8
s(Vinsert
p8965
I42
VSimpleName: getInjectorOptions
p8966
tp8967
I4
s(Vinsert
p8968
I42
VSimpleName: entrySetBinder
p8969
tp8970
I5
s(Vinsert
p8971
I10
VBreakStatement
p8972
tp8973
I1
s(Vinsert
p8974
I42
VSimpleName: sink
p8975
tp8976
I1
s(Vinsert
p8977
I42
VSimpleName: InternalFactory
p8978
tp8979
I4
s(Vinsert
p8980
I74
VParameterizedType: ImmutableSet.Builder<InjectionPoint>
p8981
tp8982
I1
s(Vinsert
p8983
I43
VSimpleType: OptionalBinderBinding
p8984
tp8985
I1
s(Vinsert
p8986
I42
VSimpleName: BoundSecond
p8987
tp8988
I1
s(Vinsert
p8989
I42
VSimpleName: rawTypeAsClass
p8990
tp8991
I2
s(Vinsert
p8992
I42
VSimpleName: sourcesAsStrings
p8993
tp8994
I1
s(Vinsert
p8995
I42
VSimpleName: equals
p8996
tp8997
I74
s(Vinsert
p8998
I42
VSimpleName: initParams
p8999
tp9000
I1
s(Vinsert
p9001
I42
VSimpleName: gb
p9002
tp9003
I1
s(Vinsert
p9004
I12
VCatchClause
p9005
tp9006
I70
s(Vinsert
p9007
I45
VStringLiteral: "() "
p9008
tp9009
I1
s(Vinsert
p9010
I43
VSimpleType: Bar
p9011
tp9012
I6
s(Vinsert
p9013
I42
VSimpleName: copy
p9014
tp9015
I3
s(Vinsert
p9016
I42
VSimpleName: ProviderKeyBinding
p9017
tp9018
I1
s(Vinsert
p9019
I42
VSimpleName: LogProvider
p9020
tp9021
I1
s(Vinsert
p9022
I43
VSimpleType: FactoryModuleBuilder
p9023
tp9024
I5
s(Vinsert
p9025
I42
VSimpleName: e
p9026
tp9027
I66
s(Vinsert
p9028
I42
VSimpleName: hasMessage
p9029
tp9030
I1
s(Vinsert
p9031
I43
VSimpleType: InjectorShell.Builder
p9032
tp9033
I2
s(Vinsert
p9034
I42
VSimpleName: getSource
p9035
tp9036
I29
s(Vinsert
p9037
I42
VSimpleName: convert
p9038
tp9039
I8
s(Vinsert
p9040
I40
VQualifiedName: interceptable.lastElements.length
p9041
tp9042
I1
s(Vinsert
p9043
I42
VSimpleName: ProxyTestImpl
p9044
tp9045
I1
s(Vinsert
p9046
I42
VSimpleName: RequestStaticInjectionCommand
p9047
tp9048
I4
s(Vinsert
p9049
I74
VParameterizedType: ArrayList<E>
p9050
tp9051
I1
s(Vinsert
p9052
I45
VStringLiteral: "tee"
p9053
tp9054
I1
s(Vinsert
p9055
I42
VSimpleName: nextInstanceId
p9056
tp9057
I1
s(Vinsert
p9058
I42
VSimpleName: INTERNAL_BINDINGS
p9059
tp9060
I1
s(Vinsert
p9061
I43
VSimpleType: ExecutionException
p9062
tp9063
I1
s(Vinsert
p9064
I42
VSimpleName: visibility
p9065
tp9066
I1
s(Vinsert
p9067
I40
VQualifiedName: TimeUnit.SECONDS
p9068
tp9069
I1
s(Vinsert
p9070
I42
VSimpleName: factoryMethodToConstructor
p9071
tp9072
I3
s(Vinsert
p9073
I43
VSimpleType: InstanceServletBinding
p9074
tp9075
I1
s(Vinsert
p9076
I42
VSimpleName: newFirst
p9077
tp9078
I1
s(Vinsert
p9079
I42
VSimpleName: charAt
p9080
tp9081
I1
s(Vinsert
p9082
I45
VStringLiteral: ".class(ErrorMessagesTest.java:"
p9083
tp9084
I2
s(Vinsert
p9085
I42
VSimpleName: testAssistedInjection
p9086
tp9087
I1
s(Vinsert
p9088
I45
VStringLiteral: ""
p9089
tp9090
I10
s(Vinsert
p9091
I42
VSimpleName: FailableCache
p9092
tp9093
I1
s(Vinsert
p9094
I42
VSimpleName: putBinding
p9095
tp9096
I2
s(Vinsert
p9097
I42
VSimpleName: modulesInstalled
p9098
tp9099
I2
s(Vinsert
p9100
I40
VQualifiedName: com.google.inject.spi.Dependency
p9101
tp9102
I1
s(Vinsert
p9103
I42
VSimpleName: collection
p9104
tp9105
I3
s(Vinsert
p9106
I42
VSimpleName: fmt
p9107
tp9108
I2
s(Vinsert
p9109
I43
VSimpleType: Interceptable
p9110
tp9111
I6
s(Vinsert
p9112
I42
VSimpleName: primaryInjector
p9113
tp9114
I2
s(Vinsert
p9115
I42
VSimpleName: b
p9116
tp9117
I24
s(Vinsert
p9118
I42
VSimpleName: SubClassModule
p9119
tp9120
I1
s(Vinsert
p9121
I45
VStringLiteral: "\u005cn and "
p9122
tp9123
I1
s(Vinsert
p9124
I43
VSimpleType: ResolveFailedException
p9125
tp9126
I10
s(Vinsert
p9127
I42
VSimpleName: valueReferenceType
p9128
tp9129
I2
s(Vinsert
p9130
I66
VTextElement: You may obtain a copy of the License at
p9131
tp9132
I1
s(Vinsert
p9133
I43
VSimpleType: HasDependencies
p9134
tp9135
I1
s(Vinsert
p9136
I43
VSimpleType: ModuleAnnotatedMethodScannerBinding
p9137
tp9138
I7
s(Vinsert
p9139
I45
VStringLiteral: "element"
p9140
tp9141
I1
s(Vinsert
p9142
I66
VTextElement: the providers we return will never compare equal to anything else anyway. By defining
p9143
tp9144
I1
s(Vinsert
p9145
I42
VSimpleName: memoize
p9146
tp9147
I1
s(Vinsert
p9148
I43
VSimpleType: Injector
p9149
tp9150
I66
s(Vinsert
p9151
I45
VStringLiteral: "E"
p9152
tp9153
I2
s(Vinsert
p9154
I40
VQualifiedName: EagerSingleton.nextInstanceId
p9155
tp9156
I1
s(Vinsert
p9157
I42
VSimpleName: Direct
p9158
tp9159
I1
s(Vinsert
p9160
I40
VQualifiedName: ImmutableMap.Builder
p9161
tp9162
I1
s(Vinsert
p9163
I65
VTagElement: @code
p9164
tp9165
I9
s(Vinsert
p9166
I42
VSimpleName: getParameterAnnotations
p9167
tp9168
I1
s(Vinsert
p9169
I42
VSimpleName: exposureBuilder
p9170
tp9171
I1
s(Vinsert
p9172
I42
VSimpleName: localSourceProvider
p9173
tp9174
I1
s(Vinsert
p9175
I74
VParameterizedType: List<Element>
p9176
tp9177
I4
s(Vinsert
p9178
I42
VSimpleName: testOfEquality
p9179
tp9180
I1
s(Vinsert
p9181
I42
VSimpleName: obj
p9182
tp9183
I30
s(Vinsert
p9184
I45
VStringLiteral: ".date(TypeConversionTest.java:"
p9185
tp9186
I1
s(Vinsert
p9187
I42
VSimpleName: converters
p9188
tp9189
I1
s(Vinsert
p9190
I43
VSimpleType: Color
p9191
tp9192
I3
s(Vinsert
p9193
I42
VSimpleName: shouldBeSkipped
p9194
tp9195
I1
s(Vinsert
p9196
I42
VSimpleName: emptyList
p9197
tp9198
I2
s(Vinsert
p9199
I43
VSimpleType: Cookie
p9200
tp9201
I4
s(Vinsert
p9202
I45
VStringLiteral: ">] on method ["
p9203
tp9204
I1
s(Vinsert
p9205
I42
VSimpleName: getInjectableTypeListenerBindings
p9206
tp9207
I3
s(Vinsert
p9208
I42
VSimpleName: clone
p9209
tp9210
I3
s(Vinsert
p9211
I42
VSimpleName: Maps
p9212
tp9213
I12
s(Vinsert
p9214
I43
VSimpleType: UnitOfWork
p9215
tp9216
I1
s(Vinsert
p9217
I42
VSimpleName: cannotInjectInnerClass
p9218
tp9219
I2
s(Vinsert
p9220
I42
VSimpleName: colorProvider
p9221
tp9222
I3
s(Vinsert
p9223
I43
VSimpleType: MethodInvocation
p9224
tp9225
I3
s(Vinsert
p9226
I45
VStringLiteral: "java.util.List<T> cannot be used as a key; It is not fully specified."
p9227
tp9228
I1
s(Vinsert
p9229
I43
VSimpleType: Callback
p9230
tp9231
I3
s(Vinsert
p9232
I42
VSimpleName: getGenericDeclaration
p9233
tp9234
I2
s(Vinsert
p9235
I66
VTextElement: newly added errors.
p9236
tp9237
I1
s(Vinsert
p9238
I34
VNumberLiteral: 100
p9239
tp9240
I2
s(Vinsert
p9241
I42
VSimpleName: setOf
p9242
tp9243
I3
s(Vinsert
p9244
I42
VSimpleName: getClassNodeId
p9245
tp9246
I1
s(Vinsert
p9247
I43
VSimpleType: AnotherNoCxtors
p9248
tp9249
I1
s(Vinsert
p9250
I43
VSimpleType: FooField
p9251
tp9252
I1
s(Vinsert
p9253
I74
VParameterizedType: Key<A>
p9254
tp9255
I1
s(Vinsert
p9256
I42
VSimpleName: response
p9257
tp9258
I4
s(Vinsert
p9259
I66
VTextElement: information on all of the threads involved in the circular dependency.
p9260
tp9261
I1
s(Vinsert
p9262
I42
VSimpleName: getModifiers
p9263
tp9264
I5
s(Vinsert
p9265
I43
VSimpleType: Dummy
p9266
tp9267
I1
s(Vinsert
p9268
I45
VStringLiteral: "staticField"
p9269
tp9270
I1
s(Vinsert
p9271
I45
VStringLiteral: "java.lang.Integer"
p9272
tp9273
I1
s(Vinsert
p9274
I43
VSimpleType: Node
p9275
tp9276
I4
s(Vinsert
p9277
I42
VSimpleName: throwIfNewErrors
p9278
tp9279
I1
s(Vinsert
p9280
I74
VParameterizedType: ProviderBinding<T>
p9281
tp9282
I1
s(Vinsert
p9283
I42
VSimpleName: getMember
p9284
tp9285
I14
s(Vinsert
p9286
I42
VSimpleName: initializeStatically
p9287
tp9288
I1
s(Vinsert
p9289
I74
VParameterizedType: ConstructionProxy<Simple>
p9290
tp9291
I1
s(Vinsert
p9292
I42
VSimpleName: Binder
p9293
tp9294
I42
s(Vinsert
p9295
I74
VParameterizedType: List<InjectableMethod>
p9296
tp9297
I1
s(Vinsert
p9298
I42
VSimpleName: strategy
p9299
tp9300
I1
s(Vinsert
p9301
I43
VSimpleType: InternalContext
p9302
tp9303
I8
s(Vinsert
p9304
I45
VStringLiteral: "javax.inject.*"
p9305
tp9306
I1
s(Vinsert
p9307
I42
VSimpleName: ServletContextEvent
p9308
tp9309
I2
s(Vinsert
p9310
I42
VSimpleName: MalformedURLException
p9311
tp9312
I1
s(Vinsert
p9313
I42
VSimpleName: OuterScopeModule
p9314
tp9315
I1
s(Vinsert
p9316
I42
VSimpleName: generator
p9317
tp9318
I2
s(Vinsert
p9319
I42
VSimpleName: MethodInvoker
p9320
tp9321
I1
s(Vinsert
p9322
I43
VSimpleType: TypeListener
p9323
tp9324
I2
s(Vinsert
p9325
I42
VSimpleName: t2
p9326
tp9327
I3
s(Vinsert
p9328
I43
VSimpleType: DancePartyFactory
p9329
tp9330
I1
s(Vinsert
p9331
I42
VSimpleName: annotatedWith
p9332
tp9333
I42
s(Vinsert
p9334
I42
VSimpleName: map5
p9335
tp9336
I1
s(Vinsert
p9337
I42
VSimpleName: checkArgument
p9338
tp9339
I6
s(Vinsert
p9340
I43
VSimpleType: InjectableReference
p9341
tp9342
I1
s(Vinsert
p9343
I42
VSimpleName: identicalTo
p9344
tp9345
I2
s(Vinsert
p9346
I74
VParameterizedType: HashSet<Class<?>>
p9347
tp9348
I1
s(Vinsert
p9349
I42
VSimpleName: Subaru
p9350
tp9351
I2
s(Vinsert
p9352
I42
VSimpleName: methodName
p9353
tp9354
I1
s(Vinsert
p9355
I45
VStringLiteral: "while locating "
p9356
tp9357
I1
s(Vinsert
p9358
I42
VSimpleName: getAsSetAndClear
p9359
tp9360
I1
s(Vinsert
p9361
I42
VSimpleName: resolved
p9362
tp9363
I1
s(Vinsert
p9364
I42
VSimpleName: newHashSet
p9365
tp9366
I19
s(Vinsert
p9367
I45
VStringLiteral: "%n    * %s"
p9368
tp9369
I1
s(Vinsert
p9370
I66
VTextElement: bridge methods (which always have erased signatures).
p9371
tp9372
I1
s(Vinsert
p9373
I42
VSimpleName: createControl
p9374
tp9375
I1
s(Vinsert
p9376
I74
VParameterizedType: Enumeration<Test>
p9377
tp9378
I2
s(Vinsert
p9379
I42
VSimpleName: withDefault
p9380
tp9381
I3
s(Vinsert
p9382
I42
VSimpleName: isEligibleForInjection
p9383
tp9384
I1
s(Vinsert
p9385
I42
VSimpleName: setSize
p9386
tp9387
I2
s(Vinsert
p9388
I42
VSimpleName: impl2
p9389
tp9390
I1
s(Vinsert
p9391
I42
VSimpleName: paramList
p9392
tp9393
I1
s(Vinsert
p9394
I74
VParameterizedType: Collection<Key<?>>
p9395
tp9396
I1
s(Vinsert
p9397
I42
VSimpleName: HasImplementedBy2
p9398
tp9399
I1
s(Vinsert
p9400
I42
VSimpleName: wrappers
p9401
tp9402
I2
s(Vinsert
p9403
I42
VSimpleName: cause
p9404
tp9405
I7
s(Vinsert
p9406
I42
VSimpleName: RuntimeException
p9407
tp9408
I11
s(Vinsert
p9409
I43
VSimpleType: TypeLiteral
p9410
tp9411
I43
s(Vinsert
p9412
I42
VSimpleName: visitScopeAnnotation
p9413
tp9414
I1
s(Vinsert
p9415
I42
VSimpleName: keyCopy2
p9416
tp9417
I1
s(Vinsert
p9418
I74
VParameterizedType: Collection<javax.inject.Provider<T>>
p9419
tp9420
I1
s(Vinsert
p9421
I42
VSimpleName: Void
p9422
tp9423
I12
s(Vinsert
p9424
I42
VSimpleName: testImplementedByEnum
p9425
tp9426
I1
s(Vinsert
p9427
I42
VSimpleName: getProviderKey
p9428
tp9429
I1
s(Vinsert
p9430
I43
VSimpleType: BindScope
p9431
tp9432
I1
s(Vinsert
p9433
I42
VSimpleName: testSimpleTransactionRollbackOnCheckedExcepting
p9434
tp9435
I1
s(Vinsert
p9436
I42
VSimpleName: typeToString
p9437
tp9438
I1
s(Vinsert
p9439
I42
VSimpleName: getCause
p9440
tp9441
I28
s(Vinsert
p9442
I42
VSimpleName: lazy
p9443
tp9444
I1
s(Vinsert
p9445
I42
VSimpleName: optionalbinding
p9446
tp9447
I1
s(Vinsert
p9448
I45
VStringLiteral: "SanJose"
p9449
tp9450
I1
s(Vinsert
p9451
I42
VSimpleName: defaultProvider
p9452
tp9453
I1
s(Vinsert
p9454
I42
VSimpleName: binding
p9455
tp9456
I82
s(Vinsert
p9457
I42
VSimpleName: wrapperKey
p9458
tp9459
I1
s(Vinsert
p9460
I42
VSimpleName: B
p9461
tp9462
I13
s(Vinsert
p9463
I42
VSimpleName: Client
p9464
tp9465
I4
s(Vinsert
p9466
I42
VSimpleName: systemElement
p9467
tp9468
I2
s(Vinsert
p9469
I13
VCharacterLiteral: '?'
p9470
tp9471
I1
s(Vinsert
p9472
I42
VSimpleName: clazzRef
p9473
tp9474
I1
s(Vinsert
p9475
I45
VStringLiteral: "and OptionalBinder for java.lang.String called with different setBinding values, "
p9476
tp9477
I1
s(Vinsert
p9478
I42
VSimpleName: isConcrete
p9479
tp9480
I2
s(Vinsert
p9481
I42
VSimpleName: source
p9482
tp9483
I99
s(Vinsert
p9484
I42
VSimpleName: onlyDependency
p9485
tp9486
I1
s(Vinsert
p9487
I43
VSimpleType: Internal
p9488
tp9489
I3
s(Vinsert
p9490
I42
VSimpleName: prepareBinding
p9491
tp9492
I1
s(Vinsert
p9493
I42
VSimpleName: getMaterial
p9494
tp9495
I1
s(Vinsert
p9496
I42
VSimpleName: visitExposed
p9497
tp9498
I3
s(Vinsert
p9499
I42
VSimpleName: memberInjectors
p9500
tp9501
I4
s(Vinsert
p9502
I42
VSimpleName: injectableType
p9503
tp9504
I5
s(Vinsert
p9505
I42
VSimpleName: seedMap
p9506
tp9507
I1
s(Vinsert
p9508
I42
VSimpleName: loggerToWatch
p9509
tp9510
I1
s(Vinsert
p9511
I42
VSimpleName: privateInjector
p9512
tp9513
I2
s(Vinsert
p9514
I42
VSimpleName: displayCauses
p9515
tp9516
I1
s(Vinsert
p9517
I42
VSimpleName: forType
p9518
tp9519
I7
s(Vinsert
p9520
I42
VSimpleName: newArrayList
p9521
tp9522
I40
s(Vinsert
p9523
I42
VSimpleName: isFastClassable
p9524
tp9525
I1
s(Vinsert
p9526
I42
VSimpleName: Contact
p9527
tp9528
I2
s(Vinsert
p9529
I74
VParameterizedType: List<? extends CharSequence>
p9530
tp9531
I1
s(Vinsert
p9532
I40
VQualifiedName: java.util.Collections
p9533
tp9534
I4
s(Vinsert
p9535
I42
VSimpleName: emptySet
p9536
tp9537
I1
s(Vinsert
p9538
I42
VSimpleName: equal
p9539
tp9540
I12
s(Vinsert
p9541
I42
VSimpleName: primitiveTl
p9542
tp9543
I1
s(Vinsert
p9544
I42
VSimpleName: getRootMessage
p9545
tp9546
I2
s(Vinsert
p9547
I23
VFieldDeclaration
p9548
tp9549
I22
s(Vinsert
p9550
I40
VQualifiedName: binding.key
p9551
tp9552
I1
s(Vinsert
p9553
I43
VSimpleType: ListMultimap
p9554
tp9555
I1
s(Vinsert
p9556
I42
VSimpleName: ScopedBindingBuilder
p9557
tp9558
I4
s(Vinsert
p9559
I42
VSimpleName: mapBinding
p9560
tp9561
I1
s(Vinsert
p9562
I42
VSimpleName: withoutAttributes
p9563
tp9564
I2
s(Vinsert
p9565
I42
VSimpleName: setComment
p9566
tp9567
I1
s(Vinsert
p9568
I42
VSimpleName: constantBindingBuilder
p9569
tp9570
I1
s(Vinsert
p9571
I42
VSimpleName: startingFrom
p9572
tp9573
I3
s(Vinsert
p9574
I66
VTextElement: with confidence.
p9575
tp9576
I1
s(Vinsert
p9577
I42
VSimpleName: WildcardType
p9578
tp9579
I1
s(Vinsert
p9580
I42
VSimpleName: Entry
p9581
tp9582
I2
s(Vinsert
p9583
I42
VSimpleName: Retention
p9584
tp9585
I2
s(Vinsert
p9586
I42
VSimpleName: Thing
p9587
tp9588
I1
s(Vinsert
p9589
I42
VSimpleName: HashSet
p9590
tp9591
I5
s(Vinsert
p9592
I42
VSimpleName: countDown
p9593
tp9594
I1
s(Vinsert
p9595
I42
VSimpleName: m2
p9596
tp9597
I1
s(Vinsert
p9598
I43
VSimpleType: Finalizer
p9599
tp9600
I1
s(Vinsert
p9601
I42
VSimpleName: ProvisionInterceptor
p9602
tp9603
I3
s(Vinsert
p9604
I42
VSimpleName: keyCopy
p9605
tp9606
I1
s(Vinsert
p9607
I74
VParameterizedType: Collection<Message>
p9608
tp9609
I3
s(Vinsert
p9610
I42
VSimpleName: filterKey
p9611
tp9612
I2
s(Vinsert
p9613
I43
VSimpleType: InstanceBindingImpl
p9614
tp9615
I2
s(Vinsert
p9616
I42
VSimpleName: getInjectionPoints
p9617
tp9618
I4
s(Vinsert
p9619
I62
VInstanceofExpression
p9620
tp9621
I52
s(Vinsert
p9622
I66
VTextElement: Ensures that an object requiring injection at Injector-creation time has
p9623
tp9624
I1
s(Vinsert
p9625
I42
VSimpleName: Type
p9626
tp9627
I16
s(Vinsert
p9628
I34
VNumberLiteral: 2L
p9629
tp9630
I2
s(Vinsert
p9631
I42
VSimpleName: forConstructor
p9632
tp9633
I5
s(Vinsert
p9634
I74
VParameterizedType: Iterable<? extends T>
p9635
tp9636
I1
s(Vinsert
p9637
I75
VQualifiedType: Outer<String>.Inner
p9638
tp9639
I1
s(Vinsert
p9640
I69
VMethodRefParameter
p9641
tp9642
I3
s(Vinsert
p9643
I74
VParameterizedType: SpringProvider<T>
p9644
tp9645
I1
s(Vinsert
p9646
I42
VSimpleName: superType
p9647
tp9648
I1
s(Vinsert
p9649
I42
VSimpleName: keys
p9650
tp9651
I2
s(Vinsert
p9652
I43
VSimpleType: LinkedKeyBinding
p9653
tp9654
I1
s(Vinsert
p9655
I42
VSimpleName: errorHandler
p9656
tp9657
I15
s(Vinsert
p9658
I42
VSimpleName: UnitOfWork
p9659
tp9660
I1
s(Vinsert
p9661
I45
VStringLiteral: "UTF-8"
p9662
tp9663
I1
s(Vinsert
p9664
I43
VSimpleType: javax.inject.Inject
p9665
tp9666
I1
s(Vinsert
p9667
I34
VNumberLiteral: 2
p9668
tp9669
I4
s(Vinsert
p9670
I42
VSimpleName: isTypeMatch
p9671
tp9672
I1
s(Vinsert
p9673
I42
VSimpleName: SurrogateAnnotations
p9674
tp9675
I1
s(Vinsert
p9676
I40
VQualifiedName: memberInjectors.length
p9677
tp9678
I1
s(Vinsert
p9679
I42
VSimpleName: assertThat
p9680
tp9681
I2
s(Vinsert
p9682
I42
VSimpleName: testModuleConfig
p9683
tp9684
I1
s(Vinsert
p9685
I43
VSimpleType: ToStringBuilder
p9686
tp9687
I10
s(Vinsert
p9688
I42
VSimpleName: UntargettedBindingImpl
p9689
tp9690
I2
s(Vinsert
p9691
I42
VSimpleName: TestSuite
p9692
tp9693
I13
s(Vinsert
p9694
I42
VSimpleName: internalFactory
p9695
tp9696
I8
s(Vinsert
p9697
I42
VSimpleName: optionalJxP
p9698
tp9699
I2
s(Vinsert
p9700
I42
VSimpleName: initialize
p9701
tp9702
I4
s(Vinsert
p9703
I66
VTextElement: of the valid injection points.
p9704
tp9705
I2
s(Vinsert
p9706
I42
VSimpleName: fromElement
p9707
tp9708
I1
s(Vinsert
p9709
I65
VTagElement: @return
p9710
tp9711
I1
s(Vinsert
p9712
I42
VSimpleName: Class
p9713
tp9714
I108
s(Vinsert
p9715
I42
VSimpleName: jitDisabledInParent
p9716
tp9717
I1
s(Vinsert
p9718
I40
VQualifiedName: java.util.Set
p9719
tp9720
I3
s(Vinsert
p9721
I42
VSimpleName: BindScopeCommand
p9722
tp9723
I1
s(Vinsert
p9724
I42
VSimpleName: AtomicInteger
p9725
tp9726
I1
s(Vinsert
p9727
I42
VSimpleName: Throwables
p9728
tp9729
I3
s(Vinsert
p9730
I5
VArrayType: boolean[]
p9731
tp9732
I2
s(Vinsert
p9733
I42
VSimpleName: injector2
p9734
tp9735
I2
s(Vinsert
p9736
I43
VSimpleType: GuiceFilter
p9737
tp9738
I1
s(Vinsert
p9739
I42
VSimpleName: out
p9740
tp9741
I3
s(Vinsert
p9742
I42
VSimpleName: Elements
p9743
tp9744
I5
s(Vinsert
p9745
I42
VSimpleName: data
p9746
tp9747
I5
s(Vinsert
p9748
I42
VSimpleName: isPresent
p9749
tp9750
I3
s(Vinsert
p9751
I43
VSimpleType: JpaTestEntity
p9752
tp9753
I5
s(Vinsert
p9754
I42
VSimpleName: getName
p9755
tp9756
I78
s(Vinsert
p9757
I42
VSimpleName: ensureImplementationIsNotSet
p9758
tp9759
I2
s(Vinsert
p9760
I31
VMethodDeclaration
p9761
tp9762
I328
s(Vinsert
p9763
I27
VInfixExpression: *
p9764
tp9765
I10
s(Vinsert
p9766
I42
VSimpleName: instanceType
p9767
tp9768
I1
s(Vinsert
p9769
I42
VSimpleName: accept
p9770
tp9771
I7
s(Vinsert
p9772
I43
VSimpleType: Formatter
p9773
tp9774
I1
s(Vinsert
p9775
I39
VPrimitiveType: void
p9776
tp9777
I264
s(Vinsert
p9778
I42
VSimpleName: Manager
p9779
tp9780
I1
s(Vinsert
p9781
I42
VSimpleName: mapOfSetOfJavaxProvider
p9782
tp9783
I1
s(Vinsert
p9784
I66
VTextElement: Licensed under the Apache License, Version 2.0 (the "License");
p9785
tp9786
I1
s(Vinsert
p9787
I43
VSimpleType: ProvisionExceptionTest
p9788
tp9789
I2
s(Vinsert
p9790
I42
VSimpleName: callbacks
p9791
tp9792
I3
s(Vinsert
p9793
I40
VQualifiedName: factory.providerMethod.dependencies
p9794
tp9795
I1
s(Vinsert
p9796
I42
VSimpleName: Jpa
p9797
tp9798
I3
s(Vinsert
p9799
I42
VSimpleName: injectionListener
p9800
tp9801
I4
s(Vinsert
p9802
I42
VSimpleName: barResult
p9803
tp9804
I1
s(Vinsert
p9805
I45
VStringLiteral: "com.google.inject.spi.moduleSourceTest$A"
p9806
tp9807
I2
s(Vinsert
p9808
I42
VSimpleName: input
p9809
tp9810
I2
s(Vinsert
p9811
I42
VSimpleName: LookupProcessor
p9812
tp9813
I1
s(Vinsert
p9814
I45
VStringLiteral: "An exception was caught and reported. Message: "
p9815
tp9816
I2
s(Vinsert
p9817
I43
VSimpleType: PrivateModule
p9818
tp9819
I3
s(Vinsert
p9820
I74
VParameterizedType: Map<Key<?>,Binding<?>>
p9821
tp9822
I1
s(Vinsert
p9823
I42
VSimpleName: exLiteral
p9824
tp9825
I1
s(Vinsert
p9826
I45
VStringLiteral: "FactoryProvider2Test$ProviderBasedColoredCarFactory was bound."
p9827
tp9828
I1
s(Vinsert
p9829
I42
VSimpleName: commit
p9830
tp9831
I1
s(Vinsert
p9832
I42
VSimpleName: actualDependencies
p9833
tp9834
I2
s(Vinsert
p9835
I74
VParameterizedType: ConcurrentHashMap<InMemoryStackTraceElement,InMemoryStackTraceElement>
p9836
tp9837
I1
s(Vinsert
p9838
I42
VSimpleName: testGetAnnotationName_annotationInstance
p9839
tp9840
I1
s(Vinsert
p9841
I43
VSimpleType: I
p9842
tp9843
I7
s(Vinsert
p9844
I66
VTextElement: </li>
p9845
tp9846
I1
s(Vinsert
p9847
I42
VSimpleName: getScannerBindings
p9848
tp9849
I5
s(Vinsert
p9850
I42
VSimpleName: createMethodInvoker
p9851
tp9852
I1
s(Vinsert
p9853
I74
VParameterizedType: Query<? super Method>
p9854
tp9855
I2
s(Vinsert
p9856
I27
VInfixExpression: !=
p9857
tp9858
I86
s(Vinsert
p9859
I42
VSimpleName: end
p9860
tp9861
I1
s(Vinsert
p9862
I45
VStringLiteral: "permitsDuplicates() not supported for module bindings"
p9863
tp9864
I1
s(Vinsert
p9865
I74
VParameterizedType: Collection<Provider<String>>
p9866
tp9867
I1
s(Vinsert
p9868
I42
VSimpleName: Tracer
p9869
tp9870
I1
s(Vinsert
p9871
I42
VSimpleName: setStyle
p9872
tp9873
I2
s(Vinsert
p9874
I43
VSimpleType: ContainerTest
p9875
tp9876
I1
s(Vinsert
p9877
I43
VSimpleType: UriPatternMatcher
p9878
tp9879
I1
s(Vinsert
p9880
I40
VQualifiedName: TimeUnit.MILLISECONDS
p9881
tp9882
I1
s(Vinsert
p9883
I43
VSimpleType: TypeResolver
p9884
tp9885
I4
s(Vinsert
p9886
I42
VSimpleName: assertNotBlacklisted
p9887
tp9888
I3
s(Vinsert
p9889
I42
VSimpleName: ForBinding
p9890
tp9891
I1
s(Vinsert
p9892
I42
VSimpleName: Blue
p9893
tp9894
I1
s(Vinsert
p9895
I43
VSimpleType: Element
p9896
tp9897
I12
s(Vinsert
p9898
I42
VSimpleName: MyListener
p9899
tp9900
I1
s(Vinsert
p9901
I42
VSimpleName: getDeclaringType
p9902
tp9903
I2
s(Vinsert
p9904
I39
VPrimitiveType: boolean
p9905
tp9906
I67
s(Vinsert
p9907
I42
VSimpleName: hashCode
p9908
tp9909
I46
s(Vinsert
p9910
I42
VSimpleName: valueType
p9911
tp9912
I2
s(Vinsert
p9913
I43
VSimpleType: OuterCoreModule
p9914
tp9915
I1
s(Vinsert
p9916
I74
VParameterizedType: List<Dependency<?>>
p9917
tp9918
I5
s(Vinsert
p9919
I42
VSimpleName: previousContext
p9920
tp9921
I1
s(Vinsert
p9922
I42
VSimpleName: hasDependencies
p9923
tp9924
I2
s(Vinsert
p9925
I42
VSimpleName: toInstance
p9926
tp9927
I45
s(Vinsert
p9928
I42
VSimpleName: getDependencies
p9929
tp9930
I20
s(Vinsert
p9931
I42
VSimpleName: paramNames
p9932
tp9933
I2
s(Vinsert
p9934
I43
VSimpleType: Errors
p9935
tp9936
I24
s(Vinsert
p9937
I42
VSimpleName: ProvisionException
p9938
tp9939
I12
s(Vinsert
p9940
I42
VSimpleName: childBuilder
p9941
tp9942
I1
s(Vinsert
p9943
I45
VStringLiteral: "@"
p9944
tp9945
I4
s(Vinsert
p9946
I42
VSimpleName: lock
p9947
tp9948
I14
s(Vinsert
p9949
I74
VParameterizedType: Key<Set<T>>
p9950
tp9951
I1
s(Vinsert
p9952
I74
VParameterizedType: com.google.inject.Provider<T>
p9953
tp9954
I1
s(Vinsert
p9955
I42
VSimpleName: rawType
p9956
tp9957
I12
s(Vinsert
p9958
I43
VSimpleType: Count
p9959
tp9960
I1
s(Vinsert
p9961
I42
VSimpleName: startLatch
p9962
tp9963
I2
s(Vinsert
p9964
I42
VSimpleName: errorsAnyElement
p9965
tp9966
I2
s(Vinsert
p9967
I42
VSimpleName: bobProviderBinding
p9968
tp9969
I1
s(Vinsert
p9970
I74
VParameterizedType: Set<HttpServlet>
p9971
tp9972
I2
s(Vinsert
p9973
I42
VSimpleName: getConstructionProxy
p9974
tp9975
I1
s(Vinsert
p9976
I42
VSimpleName: mockFilter
p9977
tp9978
I1
s(Vinsert
p9979
I42
VSimpleName: validateNullableFails
p9980
tp9981
I1
s(Vinsert
p9982
I42
VSimpleName: globalInternalContext
p9983
tp9984
I1
s(Vinsert
p9985
I42
VSimpleName: factoryRawType
p9986
tp9987
I1
s(Vinsert
p9988
I42
VSimpleName: Override
p9989
tp9990
I122
s(Vinsert
p9991
I45
VStringLiteral: "lib/guava-16.0.1.jar"
p9992
tp9993
I1
s(Vinsert
p9994
I43
VSimpleType: TestScopeAnnotation
p9995
tp9996
I1
s(Vinsert
p9997
I42
VSimpleName: dependency
p9998
tp9999
I18
s(Vinsert
p10000
I40
VQualifiedName: com.google.inject.spi.BindingScopingVisitor
p10001
tp10002
I1
s(Vinsert
p10003
I42
VSimpleName: createContainer
p10004
tp10005
I4
s(Vinsert
p10006
I42
VSimpleName: getArray
p10007
tp10008
I1
s(Vinsert
p10009
I59
VVariableDeclarationFragment
p10010
tp10011
I694
s(Vinsert
p10012
I43
VSimpleType: UnmodifiableIterator
p10013
tp10014
I2
s(Vinsert
p10015
I42
VSimpleName: hasServletsMapped
p10016
tp10017
I1
s(Vinsert
p10018
I42
VSimpleName: ListMultimap
p10019
tp10020
I1
s(Vinsert
p10021
I42
VSimpleName: Outer
p10022
tp10023
I1
s(Vinsert
p10024
I45
VStringLiteral: "provideString(PrivateModuleTest.java:"
p10025
tp10026
I1
s(Vinsert
p10027
I74
VParameterizedType: LinkedBindingBuilder<V>
p10028
tp10029
I1
s(Vinsert
p10030
I42
VSimpleName: getLineNumber
p10031
tp10032
I1
s(Vinsert
p10033
I42
VSimpleName: createModule
p10034
tp10035
I3
s(Vinsert
p10036
I43
VSimpleType: ExposureBuilder
p10037
tp10038
I1
s(Vinsert
p10039
I43
VSimpleType: Interface
p10040
tp10041
I2
s(Vinsert
p10042
I43
VSimpleType: UnsupportedOperationException
p10043
tp10044
I9
s(Vinsert
p10045
I42
VSimpleName: p
p10046
tp10047
I4
s(Vinsert
p10048
I42
VSimpleName: getMessagesFromThrowable
p10049
tp10050
I1
s(Vinsert
p10051
I42
VSimpleName: toHexString
p10052
tp10053
I2
s(Vinsert
p10054
I43
VSimpleType: BindingScopingVisitor
p10055
tp10056
I1
s(Vinsert
p10057
I42
VSimpleName: F
p10058
tp10059
I10
s(Vinsert
p10060
I42
VSimpleName: BindingImpl
p10061
tp10062
I9
s(Vinsert
p10063
I42
VSimpleName: iae
p10064
tp10065
I3
s(Vinsert
p10066
I5
VArrayType: Annotation[][]
p10067
tp10068
I1
s(Vinsert
p10069
I45
VStringLiteral: ".configure(ProvisionExceptionTest.java"
p10070
tp10071
I1
s(Vinsert
p10072
I74
VParameterizedType: ElementVisitor<T>
p10073
tp10074
I4
s(Vinsert
p10075
I42
VSimpleName: results
p10076
tp10077
I1
s(Vinsert
p10078
I42
VSimpleName: setType
p10079
tp10080
I1
s(Vinsert
p10081
I42
VSimpleName: hasListeners
p10082
tp10083
I6
s(Vinsert
p10084
I42
VSimpleName: getI
p10085
tp10086
I2
s(Vinsert
p10087
I45
VStringLiteral: " -> "
p10088
tp10089
I1
s(Vinsert
p10090
I42
VSimpleName: getPath
p10091
tp10092
I2
s(Vinsert
p10093
I43
VSimpleType: ReentrantLock
p10094
tp10095
I3
s(Vinsert
p10096
I42
VSimpleName: BindingInfo
p10097
tp10098
I1
s(Vinsert
p10099
I42
VSimpleName: Annotations
p10100
tp10101
I5
s(Vinsert
p10102
I74
VParameterizedType: Dependency<?>
p10103
tp10104
I27
s(Vinsert
p10105
I42
VSimpleName: entrySetProvider
p10106
tp10107
I1
s(Vinsert
p10108
I43
VSimpleType: ConvertToTypes
p10109
tp10110
I1
s(Vinsert
p10111
I42
VSimpleName: doEquivalent
p10112
tp10113
I1
s(Vinsert
p10114
I42
VSimpleName: node
p10115
tp10116
I9
s(Vinsert
p10117
I42
VSimpleName: untargettedBinding
p10118
tp10119
I2
s(Vinsert
p10120
I43
VSimpleType: BoundSecond
p10121
tp10122
I1
s(Vinsert
p10123
I43
VSimpleType: Query
p10124
tp10125
I3
s(Vinsert
p10126
I45
VStringLiteral: "equals"
p10127
tp10128
I2
s(Vinsert
p10129
I42
VSimpleName: IMocksControl
p10130
tp10131
I1
s(Vinsert
p10132
I40
VQualifiedName: AnnotatedSingleton.nextInstanceId
p10133
tp10134
I1
s(Vinsert
p10135
I74
VParameterizedType: Injected<String>
p10136
tp10137
I1
s(Vinsert
p10138
I42
VSimpleName: ErrorsException
p10139
tp10140
I19
s(Vinsert
p10141
I42
VSimpleName: setFirstResult
p10142
tp10143
I1
s(Vinsert
p10144
I42
VSimpleName: StackTraceElements
p10145
tp10146
I8
s(Vinsert
p10147
I42
VSimpleName: Runnable
p10148
tp10149
I13
s(Vinsert
p10150
I42
VSimpleName: currentThread
p10151
tp10152
I6
s(Vinsert
p10153
I42
VSimpleName: unused
p10154
tp10155
I1
s(Vinsert
p10156
I42
VSimpleName: filterInvoked
p10157
tp10158
I1
s(Vinsert
p10159
I51
VSynchronizedStatement
p10160
tp10161
I7
s(Vinsert
p10162
I74
VParameterizedType: LinkedHashMap<T,Binding<T>>
p10163
tp10164
I1
s(Vinsert
p10165
I42
VSimpleName: PublicUserOfPackagePrivate
p10166
tp10167
I1
s(Vinsert
p10168
I42
VSimpleName: creator
p10169
tp10170
I7
s(Vinsert
p10171
I42
VSimpleName: i
p10172
tp10173
I57
s(Vinsert
p10174
I40
VQualifiedName: com.google.inject.Provider
p10175
tp10176
I3
s(Vinsert
p10177
I42
VSimpleName: Key
p10178
tp10179
I170
s(Vinsert
p10180
I42
VSimpleName: testGetInstanceOfAnAbstractClass
p10181
tp10182
I2
s(Vinsert
p10183
I42
VSimpleName: listener
p10184
tp10185
I5
s(Vinsert
p10186
I42
VSimpleName: DefaultConstructionProxyFactory
p10187
tp10188
I1
s(Vinsert
p10189
I74
VParameterizedType: Set<Module>
p10190
tp10191
I1
s(Vinsert
p10192
I42
VSimpleName: assertSimilarWhenReserialized
p10193
tp10194
I2
s(Vinsert
p10195
I45
VStringLiteral: "return (%s) new %s<%s>() {"
p10196
tp10197
I1
s(Vinsert
p10198
I42
VSimpleName: depBinding
p10199
tp10200
I1
s(Vinsert
p10201
I40
VQualifiedName: Kind.LITERAL
p10202
tp10203
I1
s(Vinsert
p10204
I43
VSimpleType: Counter
p10205
tp10206
I3
s(Vinsert
p10207
I43
VSimpleType: CustomConcurrentHashMap.Builder
p10208
tp10209
I1
s(Vinsert
p10210
I42
VSimpleName: newLoader
p10211
tp10212
I1
s(Vinsert
p10213
I42
VSimpleName: nullRequestKey
p10214
tp10215
I1
s(Vinsert
p10216
I42
VSimpleName: optionalBinder
p10217
tp10218
I1
s(Vinsert
p10219
I42
VSimpleName: assertDependencies
p10220
tp10221
I1
s(Vinsert
p10222
I42
VSimpleName: addURL
p10223
tp10224
I1
s(Vinsert
p10225
I42
VSimpleName: HttpServlet
p10226
tp10227
I4
s(Vinsert
p10228
I42
VSimpleName: firstPercentPos
p10229
tp10230
I1
s(Vinsert
p10231
I42
VSimpleName: injectedFields
p10232
tp10233
I1
s(Vinsert
p10234
I42
VSimpleName: Container
p10235
tp10236
I9
s(Vinsert
p10237
I66
VTextElement: necessary.)
p10238
tp10239
I2
s(Vinsert
p10240
I42
VSimpleName: sameTypes
p10241
tp10242
I2
s(Vinsert
p10243
I42
VSimpleName: bindingSelection
p10244
tp10245
I2
s(Vinsert
p10246
I42
VSimpleName: tearDown
p10247
tp10248
I2
s(Vinsert
p10249
I42
VSimpleName: configureLifecycle
p10250
tp10251
I2
s(Vinsert
p10252
I42
VSimpleName: invokeSuper
p10253
tp10254
I1
s(Vinsert
p10255
I42
VSimpleName: locksOwnedByThread
p10256
tp10257
I1
s(Vinsert
p10258
I42
VSimpleName: GraphvizEdge
p10259
tp10260
I2
s(Vinsert
p10261
I42
VSimpleName: grandchild
p10262
tp10263
I1
s(Vinsert
p10264
I74
VParameterizedType: TypeLiteral<I>
p10265
tp10266
I1
s(Vinsert
p10267
I42
VSimpleName: HasProvidedBy2
p10268
tp10269
I1
s(Vinsert
p10270
I42
VSimpleName: currentTimeMillis
p10271
tp10272
I2
s(Vinsert
p10273
I42
VSimpleName: ki
p10274
tp10275
I1
s(Vinsert
p10276
I42
VSimpleName: middle
p10277
tp10278
I2
s(Vinsert
p10279
I42
VSimpleName: ArrowType
p10280
tp10281
I1
s(Vinsert
p10282
I42
VSimpleName: stop
p10283
tp10284
I2
s(Vinsert
p10285
I42
VSimpleName: Constructor
p10286
tp10287
I18
s(Vinsert
p10288
I40
VQualifiedName: current.moduleClassName
p10289
tp10290
I1
s(Vinsert
p10291
I66
VTextElement: create eager singletons. In this phase, user code may have started other threads. This phase
p10292
tp10293
I1
s(Vinsert
p10294
I42
VSimpleName: providerInstance
p10295
tp10296
I2
s(Vinsert
p10297
I66
VTextElement:  which can be used to create an injector.
p10298
tp10299
I1
s(Vinsert
p10300
I43
VSimpleType: V
p10301
tp10302
I34
s(Vinsert
p10303
I43
VSimpleType: IMocksControl
p10304
tp10305
I1
s(Vinsert
p10306
I42
VSimpleName: getFactory
p10307
tp10308
I14
s(Vinsert
p10309
I42
VSimpleName: ExternalContext
p10310
tp10311
I3
s(Vinsert
p10312
I42
VSimpleName: returnNullInterceptor
p10313
tp10314
I1
s(Vinsert
p10315
I42
VSimpleName: De
p10316
tp10317
I1
s(Vinsert
p10318
I42
VSimpleName: SubMockRemoteProvider
p10319
tp10320
I1
s(Vinsert
p10321
I42
VSimpleName: mapJavaxProviderMatch
p10322
tp10323
I1
s(Vinsert
p10324
I42
VSimpleName: getSourceForBlacklistedKey
p10325
tp10326
I1
s(Vinsert
p10327
I74
VParameterizedType: InjectsT<String>
p10328
tp10329
I1
s(Vinsert
p10330
I43
VSimpleType: MustangInsurance
p10331
tp10332
I4
s(Vinsert
p10333
I42
VSimpleName: ReentrantLock
p10334
tp10335
I3
s(Vinsert
p10336
I42
VSimpleName: TypeConverterBinding
p10337
tp10338
I3
s(Vinsert
p10339
I45
VStringLiteral: "should have failed tring to retrieve class: "
p10340
tp10341
I1
s(Vinsert
p10342
I42
VSimpleName: SeaHorse
p10343
tp10344
I1
s(Vinsert
p10345
I42
VSimpleName: setAttribute
p10346
tp10347
I6
s(Vinsert
p10348
I66
VTextElement:  serializable
p10349
tp10350
I1
s(Vinsert
p10351
I42
VSimpleName: lastEm
p10352
tp10353
I2
s(Vinsert
p10354
I40
VQualifiedName: java.lang.reflect.Proxy
p10355
tp10356
I1
s(Vinsert
p10357
I42
VSimpleName: P
p10358
tp10359
I3
s(Vinsert
p10360
I42
VSimpleName: findByName
p10361
tp10362
I2
s(Vinsert
p10363
I42
VSimpleName: isPrivate
p10364
tp10365
I2
s(Vinsert
p10366
I43
VSimpleType: ConstantTarget
p10367
tp10368
I1
s(Vinsert
p10369
I42
VSimpleName: getOriginalElementSource
p10370
tp10371
I2
s(Vinsert
p10372
I42
VSimpleName: onInjector
p10373
tp10374
I2
s(Vinsert
p10375
I45
VStringLiteral: "UnusedDeclaration"
p10376
tp10377
I1
s(Vinsert
p10378
I42
VSimpleName: requestStaticInjectionCommandProcessor
p10379
tp10380
I2
s(Vinsert
p10381
I42
VSimpleName: privatelyBoundKeys
p10382
tp10383
I1
s(Vinsert
p10384
I42
VSimpleName: options
p10385
tp10386
I4
s(Vinsert
p10387
I43
VSimpleType: RequestParameters
p10388
tp10389
I1
s(Vinsert
p10390
I40
VQualifiedName: UnitOfWork.TRANSACTION
p10391
tp10392
I2
s(Vinsert
p10393
I74
VParameterizedType: Collection<List<String>>
p10394
tp10395
I1
s(Vinsert
p10396
I42
VSimpleName: doNothing
p10397
tp10398
I2
s(Vinsert
p10399
I45
VStringLiteral: "%s is holding locks the following singletons in the cycle:%n"
p10400
tp10401
I1
s(Vinsert
p10402
I42
VSimpleName: subclassesOf
p10403
tp10404
I2
s(Vinsert
p10405
I45
VStringLiteral: "net.sf.cglib.empty.Object"
p10406
tp10407
I1
s(Vinsert
p10408
I40
VQualifiedName: ErrorMessages.DUPLICATE_ANNOTATIONS
p10409
tp10410
I1
s(Vinsert
p10411
I42
VSimpleName: scopeStrategy
p10412
tp10413
I2
s(Vinsert
p10414
I42
VSimpleName: REQUEST_DISPATCHER_REQUEST
p10415
tp10416
I5
s(Vinsert
p10417
I43
VSimpleType: ProviderInstanceBindingImpl
p10418
tp10419
I1
s(Vinsert
p10420
I42
VSimpleName: Modifier
p10421
tp10422
I4
s(Vinsert
p10423
I42
VSimpleName: OverrideModuleTest
p10424
tp10425
I1
s(Vinsert
p10426
I42
VSimpleName: keyForAnnotationType
p10427
tp10428
I1
s(Vinsert
p10429
I42
VSimpleName: getProperty
p10430
tp10431
I3
s(Vinsert
p10432
I40
VQualifiedName: com.google.inject.multibindings.MultibinderTest
p10433
tp10434
I1
s(Vinsert
p10435
I34
VNumberLiteral: 127
p10436
tp10437
I4
s(Vinsert
p10438
I43
VSimpleType: SpringProvider
p10439
tp10440
I1
s(Vinsert
p10441
I43
VSimpleType: Obj
p10442
tp10443
I1
s(Vinsert
p10444
I42
VSimpleName: findBindingAnnotation
p10445
tp10446
I2
s(Vinsert
p10447
I43
VSimpleType: Retention
p10448
tp10449
I2
s(Vinsert
p10450
I42
VSimpleName: removed
p10451
tp10452
I5
s(Vinsert
p10453
I74
VParameterizedType: List<ExternalContext<?>>
p10454
tp10455
I1
s(Vinsert
p10456
I42
VSimpleName: CompileTimeGuice
p10457
tp10458
I1
s(Vinsert
p10459
I74
VParameterizedType: HashMap<String,String>
p10460
tp10461
I1
s(Vinsert
p10462
I42
VSimpleName: SerializationTest
p10463
tp10464
I1
s(Vinsert
p10465
I45
VStringLiteral: "Error at "
p10466
tp10467
I5
s(Vinsert
p10468
I42
VSimpleName: testNonSingletons
p10469
tp10470
I1
s(Vinsert
p10471
I42
VSimpleName: scopeInstancesInUse
p10472
tp10473
I1
s(Vinsert
p10474
I45
VStringLiteral: "d"
p10475
tp10476
I2
s(Vinsert
p10477
I42
VSimpleName: scopes
p10478
tp10479
I9
s(Vinsert
p10480
I42
VSimpleName: StackTraceElement
p10481
tp10482
I6
s(Vinsert
p10483
I42
VSimpleName: I
p10484
tp10485
I7
s(Vinsert
p10486
I42
VSimpleName: httpServletResponse
p10487
tp10488
I1
s(Vinsert
p10489
I74
VParameterizedType: Map.Entry<Class<? extends Annotation>,ScopeBinding>
p10490
tp10491
I1
s(Vinsert
p10492
I42
VSimpleName: visitAddError
p10493
tp10494
I1
s(Vinsert
p10495
I42
VSimpleName: resolver
p10496
tp10497
I4
s(Vinsert
p10498
I42
VSimpleName: add
p10499
tp10500
I74
s(Vinsert
p10501
I42
VSimpleName: assertEquals
p10502
tp10503
I104
s(Vinsert
p10504
I42
VSimpleName: provision
p10505
tp10506
I4
s(Vinsert
p10507
I42
VSimpleName: annotationFor
p10508
tp10509
I1
s(Vinsert
p10510
I45
VStringLiteral: "java.lang.Deprecated is not a binding annotation. "
p10511
tp10512
I1
s(Vinsert
p10513
I42
VSimpleName: disableCircularProxies
p10514
tp10515
I2
s(Vinsert
p10516
I42
VSimpleName: getAnnotationType
p10517
tp10518
I11
s(Vinsert
p10519
I42
VSimpleName: exposedBinding
p10520
tp10521
I2
s(Vinsert
p10522
I42
VSimpleName: GuiceServletContextListener
p10523
tp10524
I1
s(Vinsert
p10525
I45
VStringLiteral: "1) OptionalBinder for java.lang.String called with different setDefault values, "
p10526
tp10527
I1
s(Vinsert
p10528
I42
VSimpleName: CreationListener
p10529
tp10530
I4
s(Vinsert
p10531
I42
VSimpleName: CONSTANT_VALUE_ALREADY_SET
p10532
tp10533
I1
s(Vinsert
p10534
I42
VSimpleName: visitConvertedConstant
p10535
tp10536
I1
s(Vinsert
p10537
I40
VQualifiedName: com.google.common.collect.Sets
p10538
tp10539
I1
s(Vinsert
p10540
I42
VSimpleName: bindingInfo
p10541
tp10542
I1
s(Vinsert
p10543
I42
VSimpleName: construct
p10544
tp10545
I1
s(Vinsert
p10546
I42
VSimpleName: commandRecorder
p10547
tp10548
I1
s(Vinsert
p10549
I43
VSimpleType: FailingPrivateModule
p10550
tp10551
I1
s(Vinsert
p10552
I42
VSimpleName: getPattern
p10553
tp10554
I1
s(Vinsert
p10555
I42
VSimpleName: EdslTest
p10556
tp10557
I1
s(Vinsert
p10558
I43
VSimpleType: ConstantFactory
p10559
tp10560
I1
s(Vinsert
p10561
I42
VSimpleName: Convertible
p10562
tp10563
I1
s(Vinsert
p10564
I42
VSimpleName: destroyPipeline
p10565
tp10566
I1
s(Vinsert
p10567
I42
VSimpleName: TypeLiteral
p10568
tp10569
I66
s(Vinsert
p10570
I45
VStringLiteral: "for field at "
p10571
tp10572
I2
s(Vinsert
p10573
I42
VSimpleName: assertFalse
p10574
tp10575
I7
s(Vinsert
p10576
I42
VSimpleName: throwNewIfNonEmpty
p10577
tp10578
I1
s(Vinsert
p10579
I42
VSimpleName: requestInjection
p10580
tp10581
I4
s(Vinsert
p10582
I43
VSimpleType: Assisted
p10583
tp10584
I1
s(Vinsert
p10585
I45
VStringLiteral: "Bob"
p10586
tp10587
I1
s(Vinsert
p10588
I42
VSimpleName: getFirst
p10589
tp10590
I1
s(Vinsert
p10591
I42
VSimpleName: ParameterizedType
p10592
tp10593
I18
s(Vinsert
p10594
I42
VSimpleName: BindingEdge
p10595
tp10596
I1
s(Vinsert
p10597
I42
VSimpleName: intercept
p10598
tp10599
I8
s(Vinsert
p10600
I42
VSimpleName: JustAClass
p10601
tp10602
I1
s(Vinsert
p10603
I42
VSimpleName: getAnnotations
p10604
tp10605
I7
s(Vinsert
p10606
I42
VSimpleName: typed
p10607
tp10608
I1
s(Vinsert
p10609
I42
VSimpleName: expectedMember
p10610
tp10611
I1
s(Vinsert
p10612
I42
VSimpleName: failIfNotLinked
p10613
tp10614
I1
s(Vinsert
p10615
I42
VSimpleName: one
p10616
tp10617
I3
s(Vinsert
p10618
I42
VSimpleName: singletonList
p10619
tp10620
I1
s(Vinsert
p10621
I45
VStringLiteral: "Dependencies can not be retrieved until the Injector has been "
p10622
tp10623
I1
s(Vinsert
p10624
I42
VSimpleName: Delegater
p10625
tp10626
I2
s(Vinsert
p10627
I45
VStringLiteral: "The struts2 plugin no longer supports specifying a module"
p10628
tp10629
I2
s(Vinsert
p10630
I27
VInfixExpression: &&
p10631
tp10632
I64
s(Vinsert
p10633
I43
VSimpleType: InjectsBrokenMembersInjector
p10634
tp10635
I1
s(Vinsert
p10636
I43
VSimpleType: ConfigurationException
p10637
tp10638
I25
s(Vinsert
p10639
I42
VSimpleName: SomeObject
p10640
tp10641
I3
s(Vinsert
p10642
I42
VSimpleName: reflectionFactory
p10643
tp10644
I4
s(Vinsert
p10645
I42
VSimpleName: initialized
p10646
tp10647
I2
s(Vinsert
p10648
I45
VStringLiteral: "moduleSourceTest.java"
p10649
tp10650
I1
s(Vinsert
p10651
I40
VQualifiedName: SourceProvider.UNKNOWN_SOURCE
p10652
tp10653
I3
s(Vinsert
p10654
I42
VSimpleName: FilePermission
p10655
tp10656
I1
s(Vinsert
p10657
I45
VStringLiteral: "source"
p10658
tp10659
I4
s(Vinsert
p10660
I42
VSimpleName: newLinkedHashSet
p10661
tp10662
I2
s(Vinsert
p10663
I42
VSimpleName: popExternalContext
p10664
tp10665
I1
s(Vinsert
p10666
I40
VQualifiedName: options.disableCircularProxies
p10667
tp10668
I1
s(Vinsert
p10669
I43
VSimpleType: NoCxtors
p10670
tp10671
I1
s(Vinsert
p10672
I66
VTextElement: Unless required by applicable law or agreed to in writing, software
p10673
tp10674
I1
s(Vinsert
p10675
I42
VSimpleName: addDirectTypeBinding
p10676
tp10677
I1
s(Vinsert
p10678
I43
VSimpleType: DateHolder
p10679
tp10680
I1
s(Vinsert
p10681
I42
VSimpleName: internalBind
p10682
tp10683
I1
s(Vinsert
p10684
I42
VSimpleName: isProvider
p10685
tp10686
I2
s(Vinsert
p10687
I43
VSimpleType: Butter
p10688
tp10689
I1
s(Vinsert
p10690
I43
VSimpleType: ProvisionException
p10691
tp10692
I10
s(Vinsert
p10693
I42
VSimpleName: morePatterns
p10694
tp10695
I1
s(Vinsert
p10696
I42
VSimpleName: rehashed
p10697
tp10698
I1
s(Vinsert
p10699
I42
VSimpleName: AB
p10700
tp10701
I1
s(Vinsert
p10702
I42
VSimpleName: ImmutableSet
p10703
tp10704
I33
s(Vinsert
p10705
I42
VSimpleName: Unscoped1
p10706
tp10707
I1
s(Vinsert
p10708
I42
VSimpleName: testControl
p10709
tp10710
I1
s(Vinsert
p10711
I42
VSimpleName: FooImpl
p10712
tp10713
I1
s(Vinsert
p10714
I74
VParameterizedType: InternalFactory<? extends T>
p10715
tp10716
I1
s(Vinsert
p10717
I42
VSimpleName: delegateInjector
p10718
tp10719
I6
s(Vinsert
p10720
I40
VQualifiedName: com.google.inject.spi.ElementSource
p10721
tp10722
I2
s(Vinsert
p10723
I42
VSimpleName: FooField
p10724
tp10725
I1
s(Vinsert
p10726
I43
VSimpleType: FastClass.Generator
p10727
tp10728
I2
s(Vinsert
p10729
I42
VSimpleName: fails
p10730
tp10731
I1
s(Vinsert
p10732
I42
VSimpleName: tooManyConstructors
p10733
tp10734
I1
s(Vinsert
p10735
I42
VSimpleName: overriddenKeys
p10736
tp10737
I1
s(Vinsert
p10738
I43
VSimpleType: FooBar
p10739
tp10740
I1
s(Vinsert
p10741
I42
VSimpleName: OuterCoreModule
p10742
tp10743
I1
s(Vinsert
p10744
I74
VParameterizedType: TargetVisitor<? super T,V>
p10745
tp10746
I8
s(Vinsert
p10747
I74
VParameterizedType: Collection<Member>
p10748
tp10749
I1
s(Vinsert
p10750
I74
VParameterizedType: Iterable<InjectorShell>
p10751
tp10752
I1
s(Vinsert
p10753
I42
VSimpleName: FooAnnotation
p10754
tp10755
I2
s(Vinsert
p10756
I43
VSimpleType: DependencyAndSource
p10757
tp10758
I1
s(Vinsert
p10759
I66
VTextElement: Copyright (C) 2006 Google Inc.
p10760
tp10761
I1
s(Vinsert
p10762
I74
VParameterizedType: Dependency<T>
p10763
tp10764
I1
s(Vinsert
p10765
I42
VSimpleName: TestModule
p10766
tp10767
I1
s(Vinsert
p10768
I42
VSimpleName: position
p10769
tp10770
I2
s(Vinsert
p10771
I42
VSimpleName: getTransaction
p10772
tp10773
I4
s(Vinsert
p10774
I42
VSimpleName: linkedBindingBuilder
p10775
tp10776
I4
s(Vinsert
p10777
I42
VSimpleName: providesInjector
p10778
tp10779
I1
s(Vinsert
p10780
I42
VSimpleName: isolatedInjectorBuilders
p10781
tp10782
I2
s(Vinsert
p10783
I42
VSimpleName: acquired
p10784
tp10785
I3
s(Vinsert
p10786
I43
VSimpleType: JpaLocalTxnInterceptor
p10787
tp10788
I1
s(Vinsert
p10789
I42
VSimpleName: Foo
p10790
tp10791
I24
s(Vinsert
p10792
I43
VSimpleType: Strategy
p10793
tp10794
I1
s(Vinsert
p10795
I42
VSimpleName: MultimapBuilder
p10796
tp10797
I1
s(Vinsert
p10798
I43
VSimpleType: Source
p10799
tp10800
I1
s(Vinsert
p10801
I42
VSimpleName: last
p10802
tp10803
I2
s(Vinsert
p10804
I42
VSimpleName: creationArgs
p10805
tp10806
I1
s(Vinsert
p10807
I27
VInfixExpression: /
p10808
tp10809
I1
s(Vinsert
p10810
I43
VSimpleType: PersistService
p10811
tp10812
I1
s(Vinsert
p10813
I40
VQualifiedName: MapBinder.RealMapBinder
p10814
tp10815
I2
s(Vinsert
p10816
I42
VSimpleName: isBlacklistedMethod
p10817
tp10818
I2
s(Vinsert
p10819
I42
VSimpleName: InterruptedException
p10820
tp10821
I2
s(Vinsert
p10822
I42
VSimpleName: currentStage
p10823
tp10824
I5
s(Vinsert
p10825
I42
VSimpleName: ColoredCarFactory
p10826
tp10827
I6
s(Vinsert
p10828
I42
VSimpleName: BooleanValue
p10829
tp10830
I1
s(Vinsert
p10831
I40
VQualifiedName: ImmutableList.Builder
p10832
tp10833
I1
s(Vinsert
p10834
I42
VSimpleName: checkNotAnnotated
p10835
tp10836
I3
s(Vinsert
p10837
I42
VSimpleName: keyMatcher
p10838
tp10839
I3
s(Vinsert
p10840
I42
VSimpleName: expectLastCall
p10841
tp10842
I2
s(Vinsert
p10843
I42
VSimpleName: NodeIdFactory
p10844
tp10845
I1
s(Vinsert
p10846
I43
VSimpleType: ExternalContext
p10847
tp10848
I3
s(Vinsert
p10849
I43
VSimpleType: ParallelMemberInjectionCallback2
p10850
tp10851
I2
s(Vinsert
p10852
I42
VSimpleName: guiceFilter
p10853
tp10854
I3
s(Vinsert
p10855
I42
VSimpleName: role
p10856
tp10857
I3
s(Vinsert
p10858
I42
VSimpleName: systemClassLoader
p10859
tp10860
I2
s(Vinsert
p10861
I74
VParameterizedType: Set<String>
p10862
tp10863
I1
s(Vinsert
p10864
I42
VSimpleName: registerBeanDefinition
p10865
tp10866
I1
s(Vinsert
p10867
I45
VStringLiteral: "Non-SPI Injector methods must throw an exception in the TOOL stage."
p10868
tp10869
I1
s(Vinsert
p10870
I42
VSimpleName: continuingRequest
p10871
tp10872
I1
s(Vinsert
p10873
I42
VSimpleName: allowsNull
p10874
tp10875
I4
s(Vinsert
p10876
I74
VParameterizedType: Binding<V>
p10877
tp10878
I1
s(Vinsert
p10879
I42
VSimpleName: ArrayListMultimap
p10880
tp10881
I1
s(Vinsert
p10882
I42
VSimpleName: testNamed
p10883
tp10884
I1
s(Vinsert
p10885
I42
VSimpleName: Annotation
p10886
tp10887
I57
s(Vinsert
p10888
I42
VSimpleName: stringBinding
p10889
tp10890
I1
s(Vinsert
p10891
I42
VSimpleName: only
p10892
tp10893
I5
s(Vinsert
p10894
I42
VSimpleName: assistedMethod
p10895
tp10896
I1
s(Vinsert
p10897
I42
VSimpleName: MockService
p10898
tp10899
I2
s(Vinsert
p10900
I43
VSimpleType: Short
p10901
tp10902
I4
s(Vinsert
p10903
I43
VSimpleType: D
p10904
tp10905
I8
s(Vinsert
p10906
I42
VSimpleName: getMethods
p10907
tp10908
I1
s(Vinsert
p10909
I42
VSimpleName: scopeBindings
p10910
tp10911
I1
s(Vinsert
p10912
I42
VSimpleName: ctx
p10913
tp10914
I3
s(Vinsert
p10915
I42
VSimpleName: suppressedTestNames
p10916
tp10917
I1
s(Vinsert
p10918
I42
VSimpleName: testToConstructorBinding
p10919
tp10920
I1
s(Vinsert
p10921
I42
VSimpleName: PrivateModule
p10922
tp10923
I5
s(Vinsert
p10924
I42
VSimpleName: checkState
p10925
tp10926
I14
s(Vinsert
p10927
I42
VSimpleName: contextParams
p10928
tp10929
I2
s(Vinsert
p10930
I42
VSimpleName: Double
p10931
tp10932
I3
s(Vinsert
p10933
I42
VSimpleName: uri
p10934
tp10935
I6
s(Vinsert
p10936
I40
VQualifiedName: finderDescriptor.returnClass
p10937
tp10938
I1
s(Vinsert
p10939
I42
VSimpleName: lastReturned
p10940
tp10941
I1
s(Vinsert
p10942
I42
VSimpleName: proxyFactory
p10943
tp10944
I2
s(Vinsert
p10945
I42
VSimpleName: withDefaultSource
p10946
tp10947
I5
s(Vinsert
p10948
I42
VSimpleName: getSimpleName
p10949
tp10950
I8
s(Vinsert
p10951
I40
VQualifiedName: injector.constructors
p10952
tp10953
I2
s(Vinsert
p10954
I42
VSimpleName: valueBinding
p10955
tp10956
I2
s(Vinsert
p10957
I42
VSimpleName: HAS_JAVA_OPTIONAL
p10958
tp10959
I1
s(Vinsert
p10960
I42
VSimpleName: fastConstructor
p10961
tp10962
I1
s(Vinsert
p10963
I42
VSimpleName: FilterDefinition
p10964
tp10965
I4
s(Vinsert
p10966
I42
VSimpleName: setupProxyFactory
p10967
tp10968
I1
s(Vinsert
p10969
I40
VQualifiedName: factory.parameterInjectors
p10970
tp10971
I1
s(Vinsert
p10972
I43
VSimpleType: ConcurrentMap
p10973
tp10974
I1
s(Vinsert
p10975
I42
VSimpleName: linked
p10976
tp10977
I6
s(Vinsert
p10978
I42
VSimpleName: getActualBinding
p10979
tp10980
I1
s(Vinsert
p10981
I45
VStringLiteral: "foo"
p10982
tp10983
I13
s(Vinsert
p10984
I74
VParameterizedType: TypeLiteral<List<?>>
p10985
tp10986
I1
s(Vinsert
p10987
I42
VSimpleName: getPathInfo
p10988
tp10989
I1
s(Vinsert
p10990
I42
VSimpleName: exposed
p10991
tp10992
I3
s(Vinsert
p10993
I42
VSimpleName: overrideIndex
p10994
tp10995
I2
s(Vinsert
p10996
I42
VSimpleName: BindCommand
p10997
tp10998
I8
s(Vinsert
p10999
I42
VSimpleName: delayedUninitializedBindings
p11000
tp11001
I1
s(Vinsert
p11002
I42
VSimpleName: forStaticMethodsAndFields
p11003
tp11004
I1
s(Vinsert
p11005
I42
VSimpleName: filterDefinitions
p11006
tp11007
I3
s(Vinsert
p11008
I42
VSimpleName: bad
p11009
tp11010
I1
s(Vinsert
p11011
I43
VSimpleType: InjectionRequest
p11012
tp11013
I1
s(Vinsert
p11014
I40
VQualifiedName: java.io.ObjectOutputStream
p11015
tp11016
I1
s(Vinsert
p11017
I43
VSimpleType: SomeObject
p11018
tp11019
I3
s(Vinsert
p11020
I74
VParameterizedType: TypeLiteral<V>
p11021
tp11022
I1
s(Vinsert
p11023
I42
VSimpleName: control
p11024
tp11025
I4
s(Vinsert
p11026
I40
VQualifiedName: injector.provisionListenerStore
p11027
tp11028
I1
s(Vinsert
p11029
I74
VParameterizedType: ImmutableSet<InjectionPoint>
p11030
tp11031
I2
s(Vinsert
p11032
I45
VStringLiteral: "private 2"
p11033
tp11034
I1
s(Vinsert
p11035
I42
VSimpleName: createConstructionProxy
p11036
tp11037
I1
s(Vinsert
p11038
I42
VSimpleName: userMembersInjector
p11039
tp11040
I2
s(Vinsert
p11041
I76
VWildcardType: ? extends CharSequence
p11042
tp11043
I2
s(Vinsert
p11044
I43
VSimpleType: ComplexFactory
p11045
tp11046
I1
s(Vinsert
p11047
I42
VSimpleName: provisionCallback
p11048
tp11049
I9
s(Vinsert
p11050
I66
VTextElement: Returns true if the inject annotation is on the constructor. 
p11051
tp11052
I1
s(Vinsert
p11053
I45
VStringLiteral: "testUnit"
p11054
tp11055
I1
s(Vinsert
p11056
I42
VSimpleName: ExecutionException
p11057
tp11058
I1
s(Vinsert
p11059
I42
VSimpleName: numErrorsBefore
p11060
tp11061
I1
s(Vinsert
p11062
I66
VTextElement:  if the delegate is null
p11063
tp11064
I1
s(Vinsert
p11065
I42
VSimpleName: Internal
p11066
tp11067
I3
s(Vinsert
p11068
I42
VSimpleName: getGenericComponentType
p11069
tp11070
I4
s(Vinsert
p11071
I43
VSimpleType: URI
p11072
tp11073
I1
s(Vinsert
p11074
I40
VQualifiedName: classesToSkip.length
p11075
tp11076
I1
s(Vinsert
p11077
I42
VSimpleName: CommandRecorderTest
p11078
tp11079
I1
s(Vinsert
p11080
I42
VSimpleName: lockReentranceCount
p11081
tp11082
I1
s(Vinsert
p11083
I40
VQualifiedName: Stage.TOOL
p11084
tp11085
I1
s(Vinsert
p11086
I42
VSimpleName: interfaceType
p11087
tp11088
I5
s(Vinsert
p11089
I42
VSimpleName: stackTraceOption
p11090
tp11091
I3
s(Vinsert
p11092
I42
VSimpleName: servletPathLength
p11093
tp11094
I1
s(Vinsert
p11095
I42
VSimpleName: getSecure
p11096
tp11097
I1
s(Vinsert
p11098
I42
VSimpleName: testClassLoader
p11099
tp11100
I3
s(Vinsert
p11101
I45
VStringLiteral: "Please annotate it with @BindingAnnotation."
p11102
tp11103
I1
s(Vinsert
p11104
I74
VParameterizedType: Collection<InjectionPoint>
p11105
tp11106
I1
s(Vinsert
p11107
I42
VSimpleName: ReferenceIterator
p11108
tp11109
I1
s(Vinsert
p11110
I43
VSimpleType: InMemoryStackTraceElement
p11111
tp11112
I4
s(Vinsert
p11113
I42
VSimpleName: threadToSingletons
p11114
tp11115
I1
s(Vinsert
p11116
I43
VSimpleType: ServletKeyBindingBuilder
p11117
tp11118
I1
s(Vinsert
p11119
I42
VSimpleName: FinalizableWeakReference
p11120
tp11121
I1
s(Vinsert
p11122
I74
VParameterizedType: BindingScopingVisitor<V>
p11123
tp11124
I1
s(Vinsert
p11125
I42
VSimpleName: logger
p11126
tp11127
I8
s(Vinsert
p11128
I42
VSimpleName: BobAnnotation2
p11129
tp11130
I1
s(Vinsert
p11131
I40
VQualifiedName: net.sf.cglib.core.CodeGenerationException
p11132
tp11133
I1
s(Vinsert
p11134
I42
VSimpleName: TProvider
p11135
tp11136
I1
s(Vinsert
p11137
I42
VSimpleName: asList
p11138
tp11139
I21
s(Vinsert
p11140
I43
VSimpleType: NullPointerException
p11141
tp11142
I8
s(Vinsert
p11143
I42
VSimpleName: collectionOfProvidersOfStrings
p11144
tp11145
I1
s(Vinsert
p11146
I43
VSimpleType: LinkedServletBinding
p11147
tp11148
I1
s(Vinsert
p11149
I42
VSimpleName: workAcross
p11150
tp11151
I2
s(Vinsert
p11152
I43
VSimpleType: TargetVisitor
p11153
tp11154
I8
s(Vinsert
p11155
I43
VSimpleType: net.sf.cglib.core.VisibilityPredicate
p11156
tp11157
I1
s(Vinsert
p11158
I43
VSimpleType: InstanceFilterBinding
p11159
tp11160
I1
s(Vinsert
p11161
I42
VSimpleName: txn
p11162
tp11163
I2
s(Vinsert
p11164
I42
VSimpleName: ConstantTarget
p11165
tp11166
I1
s(Vinsert
p11167
I66
VTextElement: Returns the interceptors that apply to the constructed type. When InjectableType.Listeners
p11168
tp11169
I1
s(Vinsert
p11170
I42
VSimpleName: exposedFrom
p11171
tp11172
I2
s(Vinsert
p11173
I43
VSimpleType: InjectionInterceptor
p11174
tp11175
I1
s(Vinsert
p11176
I42
VSimpleName: constant
p11177
tp11178
I2
s(Vinsert
p11179
I45
VStringLiteral: "/*"
p11180
tp11181
I9
s(Vinsert
p11182
I42
VSimpleName: failingInjectableTypeListener
p11183
tp11184
I1
s(Vinsert
p11185
I42
VSimpleName: InjectsT
p11186
tp11187
I1
s(Vinsert
p11188
I42
VSimpleName: Main
p11189
tp11190
I2
s(Vinsert
p11191
I42
VSimpleName: testDefaultProvider
p11192
tp11193
I1
s(Vinsert
p11194
I42
VSimpleName: oldValue
p11195
tp11196
I2
s(Vinsert
p11197
I42
VSimpleName: list
p11198
tp11199
I9
s(Vinsert
p11200
I76
VWildcardType: ? super TypeLiteral<?>
p11201
tp11202
I3
s(Vinsert
p11203
I42
VSimpleName: computer
p11204
tp11205
I2
s(Vinsert
p11206
I42
VSimpleName: visitGetProvider
p11207
tp11208
I3
s(Vinsert
p11209
I43
VSimpleType: IncludeStackTraceOption
p11210
tp11211
I1
s(Vinsert
p11212
I66
VTextElement:  if <tt>s</tt> is null
p11213
tp11214
I1
s(Vinsert
p11215
I42
VSimpleName: encounter
p11216
tp11217
I12
s(Vinsert
p11218
I42
VSimpleName: instructions
p11219
tp11220
I4
s(Vinsert
p11221
I42
VSimpleName: ComplexFactory
p11222
tp11223
I1
s(Vinsert
p11224
I42
VSimpleName: factory1
p11225
tp11226
I1
s(Vinsert
p11227
I42
VSimpleName: printStackTrace
p11228
tp11229
I2
s(Vinsert
p11230
I40
VQualifiedName: FastClass.Generator
p11231
tp11232
I2
s(Vinsert
p11233
I42
VSimpleName: testSubclasses
p11234
tp11235
I1
s(Vinsert
p11236
I74
VParameterizedType: List<TypeLiteral<?>>
p11237
tp11238
I2
s(Vinsert
p11239
I74
VParameterizedType: TypeLiteral<List<FilterDefinition>>
p11240
tp11241
I1
s(Vinsert
p11242
I43
VSimpleType: SimpleModule
p11243
tp11244
I1
s(Vinsert
p11245
I42
VSimpleName: writeBindListener
p11246
tp11247
I1
s(Vinsert
p11248
I45
VStringLiteral: "Unexpected type. Expected: "
p11249
tp11250
I1
s(Vinsert
p11251
I34
VNumberLiteral: 1024
p11252
tp11253
I2
s(Vinsert
p11254
I42
VSimpleName: Logger
p11255
tp11256
I8
s(Vinsert
p11257
I42
VSimpleName: nonNull
p11258
tp11259
I8
s(Vinsert
p11260
I45
VStringLiteral: "Received null converting 'foo' (bound at "
p11261
tp11262
I1
s(Vinsert
p11263
I42
VSimpleName: addMessage
p11264
tp11265
I4
s(Vinsert
p11266
I42
VSimpleName: mapOfStringJavaxProvider
p11267
tp11268
I1
s(Vinsert
p11269
I42
VSimpleName: parameterizedWithVariable
p11270
tp11271
I2
s(Vinsert
p11272
I42
VSimpleName: pse
p11273
tp11274
I2
s(Vinsert
p11275
I45
VStringLiteral: "original binding at "
p11276
tp11277
I1
s(Vinsert
p11278
I27
VInfixExpression: &
p11279
tp11280
I1
s(Vinsert
p11281
I45
VStringLiteral: "KNOWN ISSUE: Binding to 'private' should conflict with binding to 'public'"
p11282
tp11283
I1
s(Vinsert
p11284
I42
VSimpleName: visitProviderLookup
p11285
tp11286
I1
s(Vinsert
p11287
I74
VParameterizedType: ExternalContext<?>
p11288
tp11289
I3
s(Vinsert
p11290
I42
VSimpleName: scopeExceptions
p11291
tp11292
I7
s(Vinsert
p11293
I74
VParameterizedType: Map<Method,List<MethodInterceptor>>
p11294
tp11295
I3
s(Vinsert
p11296
I42
VSimpleName: runtimeException
p11297
tp11298
I3
s(Vinsert
p11299
I42
VSimpleName: jitInParentFailed
p11300
tp11301
I1
s(Vinsert
p11302
I43
VSimpleType: GuiceExtendsJsrAnnotated
p11303
tp11304
I1
s(Vinsert
p11305
I45
VStringLiteral: "2.0-1"
p11306
tp11307
I1
s(Vinsert
p11308
I42
VSimpleName: Lightning
p11309
tp11310
I1
s(Vinsert
p11311
I42
VSimpleName: requestStaticInjection
p11312
tp11313
I1
s(Vinsert
p11314
I42
VSimpleName: bobBinding
p11315
tp11316
I1
s(Vinsert
p11317
I42
VSimpleName: doPrivileged
p11318
tp11319
I1
s(Vinsert
p11320
I42
VSimpleName: Element
p11321
tp11322
I12
s(Vinsert
p11323
I43
VSimpleType: RequestScoper
p11324
tp11325
I1
s(Vinsert
p11326
I42
VSimpleName: injectorBinding
p11327
tp11328
I2
s(Vinsert
p11329
I42
VSimpleName: Optional
p11330
tp11331
I5
s(Vinsert
p11332
I74
VParameterizedType: Set<? extends Class<? extends Annotation>>
p11333
tp11334
I1
s(Vinsert
p11335
I42
VSimpleName: isProtected
p11336
tp11337
I2
s(Vinsert
p11338
I42
VSimpleName: checkNotNull
p11339
tp11340
I13
s(Vinsert
p11341
I74
VParameterizedType: Map<Key<?>,Object>
p11342
tp11343
I1
s(Vinsert
p11344
I42
VSimpleName: permitDuplicates
p11345
tp11346
I9
s(Vinsert
p11347
I43
VSimpleType: ProxyFactory
p11348
tp11349
I1
s(Vinsert
p11350
I42
VSimpleName: Matchers
p11351
tp11352
I13
s(Vinsert
p11353
I43
VSimpleType: Container
p11354
tp11355
I10
s(Vinsert
p11356
I42
VSimpleName: getSetKey
p11357
tp11358
I1
s(Vinsert
p11359
I42
VSimpleName: RequestStaticInjectionCommandProcessor
p11360
tp11361
I1
s(Vinsert
p11362
I42
VSimpleName: newParameterizedType
p11363
tp11364
I2
s(Vinsert
p11365
I43
VSimpleType: M
p11366
tp11367
I1
s(Vinsert
p11368
I42
VSimpleName: Sole
p11369
tp11370
I1
s(Vinsert
p11371
I43
VSimpleType: InjectorImpl
p11372
tp11373
I16
s(Vinsert
p11374
I74
VParameterizedType: InjectableReference<?>
p11375
tp11376
I1
s(Vinsert
p11377
I42
VSimpleName: getOnlyCause
p11378
tp11379
I1
s(Vinsert
p11380
I74
VParameterizedType: Iterable<String>
p11381
tp11382
I1
s(Vinsert
p11383
I42
VSimpleName: stringType
p11384
tp11385
I1
s(Vinsert
p11386
I42
VSimpleName: testScopingAnnotationsOnAbstractTypeViaProvidedBy
p11387
tp11388
I1
s(Vinsert
p11389
I42
VSimpleName: getMembers
p11390
tp11391
I1
s(Vinsert
p11392
I5
VArrayType: Annotation[]
p11393
tp11394
I2
s(Vinsert
p11395
I42
VSimpleName: context
p11396
tp11397
I29
s(Vinsert
p11398
I42
VSimpleName: setBinding
p11399
tp11400
I3
s(Vinsert
p11401
I74
VParameterizedType: Provider<Bob>
p11402
tp11403
I1
s(Vinsert
p11404
I74
VParameterizedType: Constructor<?>
p11405
tp11406
I1
s(Vinsert
p11407
I42
VSimpleName: isHookable
p11408
tp11409
I1
s(Vinsert
p11410
I42
VSimpleName: annotationString
p11411
tp11412
I2
s(Vinsert
p11413
I42
VSimpleName: ArrayImmutableCollection
p11414
tp11415
I1
s(Vinsert
p11416
I42
VSimpleName: vb
p11417
tp11418
I1
s(Vinsert
p11419
I42
VSimpleName: isFile
p11420
tp11421
I1
s(Vinsert
p11422
I43
VSimpleType: RealMapBinder
p11423
tp11424
I2
s(Vinsert
p11425
I42
VSimpleName: testInternedKeyCleanupWithWeakValue
p11426
tp11427
I1
s(Vinsert
p11428
I43
VSimpleType: Seat
p11429
tp11430
I1
s(Vinsert
p11431
I43
VSimpleType: ProviderMethodsModule
p11432
tp11433
I1
s(Vinsert
p11434
I42
VSimpleName: developmentMode
p11435
tp11436
I1
s(Vinsert
p11437
I42
VSimpleName: addTest
p11438
tp11439
I3
s(Vinsert
p11440
I42
VSimpleName: DuplicateAnnotationException
p11441
tp11442
I2
s(Vinsert
p11443
I42
VSimpleName: getProviderInstance
p11444
tp11445
I3
s(Vinsert
p11446
I42
VSimpleName: handle
p11447
tp11448
I16
s(Vinsert
p11449
I42
VSimpleName: dereferenceCollection
p11450
tp11451
I1
s(Vinsert
p11452
I42
VSimpleName: scheduleDelayedInitialization
p11453
tp11454
I1
s(Vinsert
p11455
I42
VSimpleName: renderer
p11456
tp11457
I1
s(Vinsert
p11458
I42
VSimpleName: InjectorShell
p11459
tp11460
I2
s(Vinsert
p11461
I43
VSimpleType: Bob
p11462
tp11463
I3
s(Vinsert
p11464
I42
VSimpleName: targetKey
p11465
tp11466
I5
s(Vinsert
p11467
I43
VSimpleType: WeakReference
p11468
tp11469
I4
s(Vinsert
p11470
I42
VSimpleName: CircularDependencyTest
p11471
tp11472
I1
s(Vinsert
p11473
I42
VSimpleName: port
p11474
tp11475
I1
s(Vinsert
p11476
I66
VTextElement: also available for filter mappings.
p11477
tp11478
I1
s(Vinsert
p11479
I42
VSimpleName: ServiceFactory
p11480
tp11481
I2
s(Vinsert
p11482
I42
VSimpleName: testMembersInjectorFromInjector
p11483
tp11484
I1
s(Vinsert
p11485
I42
VSimpleName: setDefault
p11486
tp11487
I4
s(Vinsert
p11488
I42
VSimpleName: BlacklistKey
p11489
tp11490
I1
s(Vinsert
p11491
I42
VSimpleName: getFieldAndMethodDependenciesFor
p11492
tp11493
I1
s(Vinsert
p11494
I43
VSimpleType: Test
p11495
tp11496
I7
s(Vinsert
p11497
I42
VSimpleName: scanModulesForAnnotatedMethods
p11498
tp11499
I1
s(Vinsert
p11500
I42
VSimpleName: nodeId
p11501
tp11502
I3
s(Vinsert
p11503
I42
VSimpleName: putScopeBinding
p11504
tp11505
I1
s(Vinsert
p11506
I42
VSimpleName: formatInjectionPoint
p11507
tp11508
I1
s(Vinsert
p11509
I42
VSimpleName: build
p11510
tp11511
I6
s(Vinsert
p11512
I42
VSimpleName: methodMatcher
p11513
tp11514
I9
s(Vinsert
p11515
I45
VStringLiteral: ", type="
p11516
tp11517
I1
s(Vinsert
p11518
I40
VQualifiedName: IncludeStackTraceOption.ONLY_FOR_DECLARING_SOURCE
p11519
tp11520
I2
s(Vinsert
p11521
I42
VSimpleName: errorInUserCode
p11522
tp11523
I1
s(Vinsert
p11524
I42
VSimpleName: clazz
p11525
tp11526
I13
s(Vinsert
p11527
I42
VSimpleName: methods
p11528
tp11529
I3
s(Vinsert
p11530
I43
VSimpleType: ProvisionListener
p11531
tp11532
I3
s(Vinsert
p11533
I42
VSimpleName: Jsr330
p11534
tp11535
I1
s(Vinsert
p11536
I42
VSimpleName: getScoping
p11537
tp11538
I6
s(Vinsert
p11539
I66
VTextElement:  defaults
p11540
tp11541
I1
s(Vinsert
p11542
I43
VSimpleType: KeyAndSource
p11543
tp11544
I2
s(Vinsert
p11545
I42
VSimpleName: scoped
p11546
tp11547
I3
s(Vinsert
p11548
I43
VSimpleType: BindingCollector
p11549
tp11550
I1
s(Vinsert
p11551
I42
VSimpleName: daggerModuleObjects
p11552
tp11553
I1
s(Vinsert
p11554
I42
VSimpleName: getCylinders
p11555
tp11556
I1
s(Vinsert
p11557
I42
VSimpleName: testMultibinderWithMultipleAnnotationTypeSets
p11558
tp11559
I1
s(Vinsert
p11560
I74
VParameterizedType: ArrayList<Object>
p11561
tp11562
I1
s(Vinsert
p11563
I43
VSimpleType: InvocationTargetException
p11564
tp11565
I5
s(Vinsert
p11566
I42
VSimpleName: exception
p11567
tp11568
I1
s(Vinsert
p11569
I74
VParameterizedType: Map<String,Integer>
p11570
tp11571
I1
s(Vinsert
p11572
I42
VSimpleName: partialCallStack
p11573
tp11574
I3
s(Vinsert
p11575
I40
VQualifiedName: com.google.inject.util.Objects
p11576
tp11577
I1
s(Vinsert
p11578
I42
VSimpleName: isCooked
p11579
tp11580
I1
s(Vinsert
p11581
I43
VSimpleType: InjectsT
p11582
tp11583
I1
s(Vinsert
p11584
I74
VParameterizedType: BindingImpl<?>
p11585
tp11586
I3
s(Vinsert
p11587
I45
VStringLiteral: "Binder"
p11588
tp11589
I1
s(Vinsert
p11590
I42
VSimpleName: newFastClass
p11591
tp11592
I2
s(Vinsert
p11593
I42
VSimpleName: noDefaults
p11594
tp11595
I2
s(Vinsert
p11596
I43
VSimpleType: Parameter
p11597
tp11598
I4
s(Vinsert
p11599
I43
VSimpleType: LinkedBindingImpl
p11600
tp11601
I5
s(Vinsert
p11602
I42
VSimpleName: mapbinder
p11603
tp11604
I2
s(Vinsert
p11605
I42
VSimpleName: Provides
p11606
tp11607
I6
s(Vinsert
p11608
I42
VSimpleName: newSourceProvider
p11609
tp11610
I1
s(Vinsert
p11611
I42
VSimpleName: NodeId
p11612
tp11613
I3
s(Vinsert
p11614
I42
VSimpleName: aProvider
p11615
tp11616
I2
s(Vinsert
p11617
I42
VSimpleName: className
p11618
tp11619
I2
s(Vinsert
p11620
I45
VStringLiteral: "a"
p11621
tp11622
I5
s(Vinsert
p11623
I42
VSimpleName: getAttribute
p11624
tp11625
I7
s(Vinsert
p11626
I42
VSimpleName: ConstructorInjector
p11627
tp11628
I3
s(Vinsert
p11629
I42
VSimpleName: lockOrDetectPotentialLocksCycle
p11630
tp11631
I1
s(Vinsert
p11632
I43
VSimpleType: NodeIdFactory
p11633
tp11634
I1
s(Vinsert
p11635
I42
VSimpleName: ScopeBinding
p11636
tp11637
I2
s(Vinsert
p11638
I42
VSimpleName: ToStringBuilder
p11639
tp11640
I10
s(Vinsert
p11641
I42
VSimpleName: setOfString
p11642
tp11643
I1
s(Vinsert
p11644
I42
VSimpleName: addProvisionListener
p11645
tp11646
I1
s(Vinsert
p11647
I43
VSimpleType: Volkswagen
p11648
tp11649
I1
s(Vinsert
p11650
I42
VSimpleName: visitProviderInstance
p11651
tp11652
I2
s(Vinsert
p11653
I74
VParameterizedType: Reference<?>
p11654
tp11655
I1
s(Vinsert
p11656
I42
VSimpleName: bindingBuilders
p11657
tp11658
I1
s(Vinsert
p11659
I43
VSimpleType: RedFoo
p11660
tp11661
I1
s(Vinsert
p11662
I42
VSimpleName: Providers
p11663
tp11664
I8
s(Vinsert
p11665
I40
VQualifiedName: provision.erredListener
p11666
tp11667
I2
s(Vinsert
p11668
I42
VSimpleName: getId
p11669
tp11670
I3
s(Vinsert
p11671
I66
VTextElement:  and sets 
p11672
tp11673
I1
s(Vinsert
p11674
I42
VSimpleName: mustangInsuranceFactory
p11675
tp11676
I2
s(Vinsert
p11677
I43
VSimpleType: String
p11678
tp11679
I192
s(Vinsert
p11680
I42
VSimpleName: lastSignature
p11681
tp11682
I1
s(Vinsert
p11683
I43
VSimpleType: Signature
p11684
tp11685
I2
s(Vinsert
p11686
I66
VTextElement: keys whose class names are equal but class loaders are different. This shouldn't be an issue
p11687
tp11688
I1
s(Vinsert
p11689
I42
VSimpleName: addScanner
p11690
tp11691
I1
s(Vinsert
p11692
I45
VStringLiteral: "Creating container..."
p11693
tp11694
I1
s(Vinsert
p11695
I43
VSimpleType: BindingEdge
p11696
tp11697
I1
s(Vinsert
p11698
I45
VStringLiteral: "Couldn't find multi thread circular dependency error: "
p11699
tp11700
I1
s(Vinsert
p11701
I42
VSimpleName: assertNotSame
p11702
tp11703
I1
s(Vinsert
p11704
I42
VSimpleName: cannotBindToNullInstance
p11705
tp11706
I1
s(Vinsert
p11707
I43
VSimpleType: Indexer.IndexedBinding
p11708
tp11709
I1
s(Vinsert
p11710
I74
VParameterizedType: Key<List<String>>
p11711
tp11712
I3
s(Vinsert
p11713
I42
VSimpleName: optionsProcessor
p11714
tp11715
I2
s(Vinsert
p11716
I43
VSimpleType: ArrowType
p11717
tp11718
I1
s(Vinsert
p11719
I42
VSimpleName: annotationClasses
p11720
tp11721
I1
s(Vinsert
p11722
I43
VSimpleType: Fleet
p11723
tp11724
I1
s(Vinsert
p11725
I43
VSimpleType: Object
p11726
tp11727
I95
s(Vinsert
p11728
I5
VArrayType: Constructor<T>[]
p11729
tp11730
I1
s(Vinsert
p11731
I43
VSimpleType: CharSequence
p11732
tp11733
I4
s(Vinsert
p11734
I42
VSimpleName: expose
p11735
tp11736
I2
s(Vinsert
p11737
I42
VSimpleName: newTypeWithArgument
p11738
tp11739
I2
s(Vinsert
p11740
I42
VSimpleName: containsElement
p11741
tp11742
I3
s(Vinsert
p11743
I74
VParameterizedType: Map.Entry<K,Binding<V>>
p11744
tp11745
I1
s(Vinsert
p11746
I74
VParameterizedType: Provider<V>
p11747
tp11748
I1
s(Vinsert
p11749
I42
VSimpleName: getDependencyChain
p11750
tp11751
I2
s(Vinsert
p11752
I42
VSimpleName: importedClasses
p11753
tp11754
I1
s(Vinsert
p11755
I67
VMemberRef
p11756
tp11757
I2
s(Vinsert
p11758
I42
VSimpleName: keyOptions
p11759
tp11760
I1
s(Vinsert
p11761
I42
VSimpleName: PINK
p11762
tp11763
I1
s(Vinsert
p11764
I42
VSimpleName: supertype
p11765
tp11766
I2
s(Vinsert
p11767
I42
VSimpleName: evenEntry
p11768
tp11769
I1
s(Vinsert
p11770
I42
VSimpleName: persistenceProperties
p11771
tp11772
I1
s(Vinsert
p11773
I42
VSimpleName: binder
p11774
tp11775
I148
s(Vinsert
p11776
I43
VSimpleType: UntargettedBinding
p11777
tp11778
I1
s(Vinsert
p11779
I42
VSimpleName: target
p11780
tp11781
I4
s(Vinsert
p11782
I42
VSimpleName: integerField
p11783
tp11784
I1
s(Vinsert
p11785
I42
VSimpleName: providedInterceptor
p11786
tp11787
I1
s(Vinsert
p11788
I42
VSimpleName: on
p11789
tp11790
I1
s(Vinsert
p11791
I43
VSimpleType: Callable
p11792
tp11793
I2
s(Vinsert
p11794
I40
VQualifiedName: interceptors.length
p11795
tp11796
I1
s(Vinsert
p11797
I42
VSimpleName: nodes
p11798
tp11799
I1
s(Vinsert
p11800
I42
VSimpleName: jitBinding
p11801
tp11802
I2
s(Vinsert
p11803
I74
VParameterizedType: List<ProvisionListenerBinding>
p11804
tp11805
I2
s(Vinsert
p11806
I42
VSimpleName: CustomNullableFooField
p11807
tp11808
I1
s(Vinsert
p11809
I42
VSimpleName: assertNotNull
p11810
tp11811
I6
s(Vinsert
p11812
I42
VSimpleName: getScope
p11813
tp11814
I5
s(Vinsert
p11815
I42
VSimpleName: getFactoryMethod
p11816
tp11817
I1
s(Vinsert
p11818
I42
VSimpleName: filtersModuleBuilder
p11819
tp11820
I1
s(Vinsert
p11821
I43
VSimpleType: IntegerWrapper
p11822
tp11823
I1
s(Vinsert
p11824
I40
VQualifiedName: Scope.Strategy
p11825
tp11826
I3
s(Vinsert
p11827
I42
VSimpleName: propagate
p11828
tp11829
I3
s(Vinsert
p11830
I42
VSimpleName: visitor
p11831
tp11832
I67
s(Vinsert
p11833
I42
VSimpleName: ThreadLocal
p11834
tp11835
I1
s(Vinsert
p11836
I42
VSimpleName: pKey
p11837
tp11838
I2
s(Vinsert
p11839
I42
VSimpleName: underlylingType
p11840
tp11841
I2
s(Vinsert
p11842
I42
VSimpleName: ComponentAnnotationTestImpl
p11843
tp11844
I1
s(Vinsert
p11845
I42
VSimpleName: BaseClass
p11846
tp11847
I1
s(Vinsert
p11848
I66
VTextElement: Schedule initialization for this binding to occur after all other static initialization of
p11849
tp11850
I1
s(Vinsert
p11851
I42
VSimpleName: injector
p11852
tp11853
I219
s(Vinsert
p11854
I42
VSimpleName: scanners
p11855
tp11856
I2
s(Vinsert
p11857
I45
VStringLiteral: "Nullable"
p11858
tp11859
I2
s(Vinsert
p11860
I43
VSimpleType: TestSuite
p11861
tp11862
I13
s(Vinsert
p11863
I74
VParameterizedType: TypeLiteral<? extends T>
p11864
tp11865
I2
s(Vinsert
p11866
I42
VSimpleName: wildcardExtends
p11867
tp11868
I1
s(Vinsert
p11869
I42
VSimpleName: constructor
p11870
tp11871
I25
s(Vinsert
p11872
I43
VSimpleType: ProvisionListenerStackCallback
p11873
tp11874
I2
s(Vinsert
p11875
I42
VSimpleName: ObjectInputStream
p11876
tp11877
I1
s(Vinsert
p11878
I42
VSimpleName: GuiceFilter
p11879
tp11880
I5
s(Vinsert
p11881
I42
VSimpleName: WeakKeySetUtils
p11882
tp11883
I3
s(Vinsert
p11884
I74
VParameterizedType: List<String>
p11885
tp11886
I11
s(Vinsert
p11887
I45
VStringLiteral: "(If it was in a PrivateModule, did you forget to expose the binding?)"
p11888
tp11889
I1
s(Vinsert
p11890
I42
VSimpleName: ns
p11891
tp11892
I2
s(Vinsert
p11893
I42
VSimpleName: map
p11894
tp11895
I7
s(Vinsert
p11896
I42
VSimpleName: failedJitBindings
p11897
tp11898
I2
s(Vinsert
p11899
I40
VQualifiedName: com.google.inject.internal.ProviderMethod
p11900
tp11901
I1
s(Vinsert
p11902
I66
VTextElement:  which memoizes the value for lazy initialization.
p11903
tp11904
I1
s(Vinsert
p11905
I66
VTextElement: Returns a provider to bind for fields that are "transparent providers". 
p11906
tp11907
I1
s(Vinsert
p11908
I42
VSimpleName: withKey
p11909
tp11910
I1
s(Vinsert
p11911
I43
VSimpleType: ServletResponse
p11912
tp11913
I3
s(Vinsert
p11914
I43
VSimpleType: ServiceFactory
p11915
tp11916
I1
s(Vinsert
p11917
I42
VSimpleName: parameters
p11918
tp11919
I6
s(Vinsert
p11920
I42
VSimpleName: untargetted
p11921
tp11922
I1
s(Vinsert
p11923
I45
VStringLiteral: "of "
p11924
tp11925
I1
s(Vinsert
p11926
I42
VSimpleName: Color
p11927
tp11928
I3
s(Vinsert
p11929
I42
VSimpleName: privateBinder
p11930
tp11931
I4
s(Vinsert
p11932
I74
VParameterizedType: ArrayList<String>
p11933
tp11934
I1
s(Vinsert
p11935
I42
VSimpleName: getExposedSource
p11936
tp11937
I1
s(Vinsert
p11938
I42
VSimpleName: getTarget
p11939
tp11940
I1
s(Vinsert
p11941
I43
VSimpleType: GuiceServletContextListener
p11942
tp11943
I1
s(Vinsert
p11944
I42
VSimpleName: NO_OP_METHOD_INTERCEPTOR
p11945
tp11946
I1
s(Vinsert
p11947
I42
VSimpleName: WEAK
p11948
tp11949
I1
s(Vinsert
p11950
I42
VSimpleName: IOException
p11951
tp11952
I13
s(Vinsert
p11953
I42
VSimpleName: replayAddMessageError
p11954
tp11955
I1
s(Vinsert
p11956
I42
VSimpleName: resetAndLog
p11957
tp11958
I6
s(Vinsert
p11959
I42
VSimpleName: popState
p11960
tp11961
I3
s(Vinsert
p11962
I42
VSimpleName: getInjectionListeners
p11963
tp11964
I1
s(Vinsert
p11965
I42
VSimpleName: with
p11966
tp11967
I13
s(Vinsert
p11968
I42
VSimpleName: providerOfStringKey
p11969
tp11970
I2
s(Vinsert
p11971
I66
VTextElement:  method.
p11972
tp11973
I1
s(Vinsert
p11974
I42
VSimpleName: optional
p11975
tp11976
I3
s(Vinsert
p11977
I42
VSimpleName: text
p11978
tp11979
I3
s(Vinsert
p11980
I74
VParameterizedType: ServletModuleTargetVisitor<B,V>
p11981
tp11982
I2
s(Vinsert
p11983
I42
VSimpleName: xmlUrl
p11984
tp11985
I1
s(Vinsert
p11986
I74
VParameterizedType: LinkedBindingImpl<?>
p11987
tp11988
I3
s(Vinsert
p11989
I83
VModifier: private
p11990
tp11991
I27
s(Vinsert
p11992
I43
VSimpleType: ImmutableMap.Builder
p11993
tp11994
I1
s(Vinsert
p11995
I42
VSimpleName: withSource
p11996
tp11997
I48
s(Vinsert
p11998
I43
VSimpleType: C
p11999
tp12000
I5
s(Vinsert
p12001
I42
VSimpleName: initialCapacity
p12002
tp12003
I1
s(Vinsert
p12004
I74
VParameterizedType: Supplier<String>
p12005
tp12006
I1
s(Vinsert
p12007
I43
VSimpleType: Transactional
p12008
tp12009
I1
s(Vinsert
p12010
I42
VSimpleName: put
p12011
tp12012
I19
s(Vinsert
p12013
I42
VSimpleName: setProvisionListenerCallback
p12014
tp12015
I1
s(Vinsert
p12016
I42
VSimpleName: lastTarget
p12017
tp12018
I1
s(Vinsert
p12019
I42
VSimpleName: Dependent
p12020
tp12021
I1
s(Vinsert
p12022
I43
VSimpleType: PackagePrivateInterface
p12023
tp12024
I1
s(Vinsert
p12025
I42
VSimpleName: getModule
p12026
tp12027
I1
s(Vinsert
p12028
I42
VSimpleName: Query
p12029
tp12030
I4
s(Vinsert
p12031
I66
VTextElement:  errors
p12032
tp12033
I1
s(Vinsert
p12034
I42
VSimpleName: label
p12035
tp12036
I1
s(Vinsert
p12037
I42
VSimpleName: aspects
p12038
tp12039
I6
s(Vinsert
p12040
I42
VSimpleName: warnedDependencies
p12041
tp12042
I1
s(Vinsert
p12043
I42
VSimpleName: E
p12044
tp12045
I15
s(Vinsert
p12046
I42
VSimpleName: serializableMember
p12047
tp12048
I1
s(Vinsert
p12049
I42
VSimpleName: realElement
p12050
tp12051
I1
s(Vinsert
p12052
I42
VSimpleName: testRequireExactAnnotationsRequireAllOptionals
p12053
tp12054
I1
s(Vinsert
p12055
I43
VSimpleType: Iterable
p12056
tp12057
I9
s(Vinsert
p12058
I45
VStringLiteral: "b"
p12059
tp12060
I5
s(Vinsert
p12061
I42
VSimpleName: throwable
p12062
tp12063
I7
s(Vinsert
p12064
I42
VSimpleName: TypeListener
p12065
tp12066
I4
s(Vinsert
p12067
I42
VSimpleName: toConstructor
p12068
tp12069
I3
s(Vinsert
p12070
I43
VSimpleType: DefaultSourceProvider
p12071
tp12072
I1
s(Vinsert
p12073
I45
VStringLiteral: "Reason: java.lang.ClassCastException: whoops, failure #3"
p12074
tp12075
I1
s(Vinsert
p12076
I42
VSimpleName: visitToProvider
p12077
tp12078
I1
s(Vinsert
p12079
I53
VThrowStatement
p12080
tp12081
I40
s(Vinsert
p12082
I42
VSimpleName: SimpleModule
p12083
tp12084
I1
s(Vinsert
p12085
I42
VSimpleName: numBindings
p12086
tp12087
I1
s(Vinsert
p12088
I42
VSimpleName: wrapPrimitives
p12089
tp12090
I1
s(Vinsert
p12091
I43
VSimpleType: InstanceNode
p12092
tp12093
I3
s(Vinsert
p12094
I43
VSimpleType: MalformedURLException
p12095
tp12096
I1
s(Vinsert
p12097
I74
VParameterizedType: MultimapBinder<?,?>
p12098
tp12099
I1
s(Vinsert
p12100
I42
VSimpleName: AddMessageErrorCommand
p12101
tp12102
I3
s(Vinsert
p12103
I42
VSimpleName: testEqualsHashCodeToString
p12104
tp12105
I1
s(Vinsert
p12106
I42
VSimpleName: Singleton
p12107
tp12108
I6
s(Vinsert
p12109
I42
VSimpleName: acceptVisitor
p12110
tp12111
I19
s(Vinsert
p12112
I42
VSimpleName: getProviderBinding
p12113
tp12114
I2
s(Vinsert
p12115
I42
VSimpleName: Obj
p12116
tp12117
I1
s(Vinsert
p12118
I42
VSimpleName: SelectChannelConnector
p12119
tp12120
I2
s(Vinsert
p12121
I43
VSimpleType: CompileTimeGuice
p12122
tp12123
I1
s(Vinsert
p12124
I42
VSimpleName: Scopes
p12125
tp12126
I5
s(Vinsert
p12127
I43
VSimpleType: BindingTargetVisitor
p12128
tp12129
I6
s(Vinsert
p12130
I42
VSimpleName: createBinding
p12131
tp12132
I3
s(Vinsert
p12133
I42
VSimpleName: requireBinding
p12134
tp12135
I1
s(Vinsert
p12136
I42
VSimpleName: client
p12137
tp12138
I3
s(Vinsert
p12139
I42
VSimpleName: ConstructionContext
p12140
tp12141
I3
s(Vinsert
p12142
I42
VSimpleName: getScopeAnnotation
p12143
tp12144
I5
s(Vinsert
p12145
I74
VParameterizedType: javax.inject.Provider<T>
p12146
tp12147
I1
s(Vinsert
p12148
I42
VSimpleName: singletonCreationLock
p12149
tp12150
I3
s(Vinsert
p12151
I42
VSimpleName: ConstructorBindingImpl
p12152
tp12153
I9
s(Vinsert
p12154
I42
VSimpleName: FinalizableSoftReference
p12155
tp12156
I1
s(Vinsert
p12157
I74
VParameterizedType: Key<Filter>
p12158
tp12159
I1
s(Vinsert
p12160
I42
VSimpleName: ElementVisitor
p12161
tp12162
I4
s(Vinsert
p12163
I42
VSimpleName: userErrors
p12164
tp12165
I1
s(Vinsert
p12166
I42
VSimpleName: DelegatingInvocationHandler
p12167
tp12168
I2
s(Vinsert
p12169
I45
VStringLiteral: "No implementation for java.util.concurrent.Callable<java.lang.String> was bound."
p12170
tp12171
I1
s(Vinsert
p12172
I43
VSimpleType: EdslTest
p12173
tp12174
I1
s(Vinsert
p12175
I42
VSimpleName: hasAtInject
p12176
tp12177
I1
s(Vinsert
p12178
I42
VSimpleName: getMethodAspects
p12179
tp12180
I2
s(Vinsert
p12181
I42
VSimpleName: doFilters
p12182
tp12183
I1
s(Vinsert
p12184
I42
VSimpleName: m1
p12185
tp12186
I1
s(Vinsert
p12187
I43
VSimpleType: HttpServletRequest
p12188
tp12189
I9
s(Vinsert
p12190
I42
VSimpleName: sanitize
p12191
tp12192
I2
s(Vinsert
p12193
I42
VSimpleName: weakIntern
p12194
tp12195
I2
s(Vinsert
p12196
I42
VSimpleName: ValueType
p12197
tp12198
I2
s(Vinsert
p12199
I66
VTextElement:  if there are
p12200
tp12201
I1
s(Vinsert
p12202
I43
VSimpleType: StringBuilder
p12203
tp12204
I9
s(Vinsert
p12205
I42
VSimpleName: getPatternType
p12206
tp12207
I1
s(Vinsert
p12208
I21
VExpressionStatement
p12209
tp12210
I1184
s(Vinsert
p12211
I43
VSimpleType: HashSet
p12212
tp12213
I5
s(Vinsert
p12214
I26
VImportDeclaration
p12215
tp12216
I58
s(Vinsert
p12217
I42
VSimpleName: serialVersionUID
p12218
tp12219
I1
s(Vinsert
p12220
I40
VQualifiedName: com.google.inject.Scope
p12221
tp12222
I1
s(Vinsert
p12223
I40
VQualifiedName: State.DONE
p12224
tp12225
I1
s(Vinsert
p12226
I42
VSimpleName: factoryKey
p12227
tp12228
I1
s(Vinsert
p12229
I42
VSimpleName: ref
p12230
tp12231
I4
s(Vinsert
p12232
I42
VSimpleName: withRehashedKeys
p12233
tp12234
I1
s(Vinsert
p12235
I42
VSimpleName: sourceList
p12236
tp12237
I1
s(Vinsert
p12238
I42
VSimpleName: calls
p12239
tp12240
I1
s(Vinsert
p12241
I74
VParameterizedType: Set<Filter>
p12242
tp12243
I2
s(Vinsert
p12244
I74
VParameterizedType: UnmodifiableIterator<E>
p12245
tp12246
I1
s(Vinsert
p12247
I42
VSimpleName: visited
p12248
tp12249
I1
s(Vinsert
p12250
I42
VSimpleName: myFavouriteC
p12251
tp12252
I1
s.