(dp0
(Vinsert
p1
I42
VSimpleName: add
p2
Vinsert
p3
I42
VSimpleName: annotation
p4
tp5
F0.25
s(Vinsert
p6
I42
VSimpleName: doFilter
p7
Vinsert
p8
I32
VMethodInvocation
p9
tp10
I4
s(Vinsert
p11
I42
VSimpleName: newCall
p12
Vinsert
p13
I14
VClassInstanceCreation
p14
tp15
F0.25
s(Vinsert
p16
I42
VSimpleName: builder
p17
Vinsert
p18
I42
VSimpleName: parentId
p19
tp20
I1
s(Vinsert
p21
I42
VSimpleName: beginObject
p22
Vinsert
p23
I43
VSimpleType: Dependencies.Builder
p24
tp25
I1
s(Vinsert
p26
I42
VSimpleName: keySet
p27
Vinsert
p28
I43
VSimpleType: Set
p29
tp30
F0.25
s(Vinsert
p31
I42
VSimpleName: bytes
p32
Vinsert
p33
I42
VSimpleName: messages
p34
tp35
I1
s(Vinsert
p36
I42
VSimpleName: of
p37
Vinsert
p38
I42
VSimpleName: ImmutableMap
p39
tp40
I2
s(Vinsert
p41
I42
VSimpleName: addCallback
p42
Vinsert
p43
I8
VBlock
p44
tp45
I2
s(Vinsert
p46
I42
VSimpleName: newCall
p47
Vinsert
p48
I42
VSimpleName: TRACE
p49
tp50
I1
s(Vinsert
p51
I42
VSimpleName: withRenderSchema
p52
Vinsert
p53
I42
VSimpleName: Settings
p54
tp55
I1
s(Vinsert
p56
I42
VSimpleName: httpUrl
p57
Vinsert
p58
I43
VSimpleType: ZipkinRule
p59
tp60
F2.5
s(Vinsert
p61
I42
VSimpleName: connect
p62
Vinsert
p63
I31
VMethodDeclaration
p64
tp65
F0.25
s(Vinsert
p66
I42
VSimpleName: getMethod
p67
Vinsert
p68
I16
VConditionalExpression
p69
tp70
I1
s(Vinsert
p71
I42
VSimpleName: isEmpty
p72
Vinsert
p73
I40
VQualifiedName: span.traceId
p74
tp75
I1
s(Vinsert
p76
I42
VSimpleName: writeByte
p77
Vinsert
p78
I34
VNumberLiteral: 2
p79
tp80
F0.25
s(Vinsert
p81
I42
VSimpleName: isEmpty
p82
Vinsert
p83
I60
VVariableDeclarationStatement
p84
tp85
I2
s(Vinsert
p86
I42
VSimpleName: traceFilters
p87
Vinsert
p88
I43
VSimpleType: ZipkinSpanCollector
p89
tp90
F0.25
s(Vinsert
p91
I42
VSimpleName: get
p92
Vinsert
p93
I39
VPrimitiveType: boolean
p94
tp95
I1
s(Vinsert
p96
I42
VSimpleName: incrementSpans
p97
Vinsert
p98
I42
VSimpleName: i
p99
tp100
F0.25
s(Vinsert
p101
I42
VSimpleName: addDeploymentInfoCustomizers
p102
Vinsert
p103
I42
VSimpleName: required
p104
tp105
F0.5
s(Vinsert
p106
I42
VSimpleName: isIdempotent
p107
Vinsert
p108
I42
VSimpleName: cl
p109
tp110
F0.5
s(Vinsert
p111
I42
VSimpleName: get
p112
Vinsert
p113
I42
VSimpleName: Repository
p114
tp115
F0.25
s(Vinsert
p116
I42
VSimpleName: toString
p117
Vinsert
p118
I42
VSimpleName: Short
p119
tp120
I1
s(Vinsert
p121
I42
VSimpleName: checkExists
p122
Vinsert
p123
I42
VSimpleName: String
p124
tp125
I1
s(Vinsert
p126
I42
VSimpleName: enqueue
p127
Vinsert
p128
I39
VPrimitiveType: void
p129
tp130
F1.0
s(Vinsert
p131
I42
VSimpleName: accept
p132
Vinsert
p133
I60
VVariableDeclarationStatement
p134
tp135
I5
s(Vinsert
p136
I42
VSimpleName: from
p137
Vinsert
p138
I43
VSimpleType: List
p139
tp140
I1
s(Vinsert
p141
I42
VSimpleName: handleError
p142
Vinsert
p143
I32
VMethodInvocation
p144
tp145
I2
s(Vinsert
p146
I42
VSimpleName: toArray
p147
Vinsert
p148
I5
VArrayType: Span[]
p149
tp150
I1
s(Vinsert
p151
I42
VSimpleName: asyncSpanConsumer
p152
Vinsert
p153
I42
VSimpleName: compute
p154
tp155
F0.5
s(Vinsert
p156
I42
VSimpleName: write
p157
Vinsert
p158
I8
VBlock
p159
tp160
I6
s(Vinsert
p161
I42
VSimpleName: readSpans
p162
Vinsert
p163
I21
VExpressionStatement
p164
tp165
I3
s(Vinsert
p166
I42
VSimpleName: currentThread
p167
Vinsert
p168
I8
VBlock
p169
tp170
I3
s(Vinsert
p171
I42
VSimpleName: webAppContextSetup
p172
Vinsert
p173
I42
VSimpleName: init
p174
tp175
F0.25
s(Vinsert
p176
I42
VSimpleName: getValue
p177
Vinsert
p178
I42
VSimpleName: getKey
p179
tp180
I2
s(Vinsert
p181
I42
VSimpleName: toBuilder
p182
Vinsert
p183
I42
VSimpleName: traceByServiceSpan_skipsOnNoTimestamp
p184
tp185
F0.25
s(Vinsert
p186
I42
VSimpleName: put
p187
Vinsert
p188
I42
VSimpleName: forConsumer
p189
tp190
F0.25
s(Vinsert
p191
I42
VSimpleName: getTrace
p192
Vinsert
p193
I36
VParenthesizedExpression
p194
tp195
I1
s(Vinsert
p196
I42
VSimpleName: checkNotNull
p197
Vinsert
p198
I21
VExpressionStatement
p199
tp200
I1
s(Vinsert
p201
I42
VSimpleName: builder
p202
Vinsert
p203
I42
VSimpleName: prefixWithTimestampMillis
p204
tp205
F0.25
s(g121
I42
g122
Vinsert
p206
I59
VVariableDeclarationFragment
p207
tp208
I1
s(Vinsert
p209
I42
VSimpleName: get
p210
Vinsert
p211
I42
VSimpleName: CallbackCaptor
p212
tp213
I4
s(Vinsert
p214
I42
VSimpleName: utf8SizeInBytes
p215
Vinsert
p216
I34
VNumberLiteral: 8
p217
tp218
I1
s(Vinsert
p219
I42
VSimpleName: of
p220
Vinsert
p221
I43
VSimpleType: BufferedSource
p222
tp223
F0.25
s(Vinsert
p224
I42
VSimpleName: toLowerCase
p225
Vinsert
p226
I42
VSimpleName: QueryRequest
p227
tp228
F0.25
s(Vinsert
p229
I42
VSimpleName: get
p230
Vinsert
p231
I42
VSimpleName: List
p232
tp233
I2
s(Vinsert
p234
I42
VSimpleName: admin
p235
Vinsert
p236
I42
VSimpleName: client
p237
tp238
I1
s(Vinsert
p239
I42
VSimpleName: keyspace
p240
Vinsert
p241
I31
VMethodDeclaration
p242
tp243
F1.0
s(Vinsert
p244
I42
VSimpleName: addAnnotation
p245
Vinsert
p246
I22
VFieldAccess
p247
tp248
I1
s(Vinsert
p249
I42
VSimpleName: normalizeTraceId
p250
Vinsert
p251
I42
VSimpleName: lowTraceId
p252
tp253
F0.25
s(Vinsert
p254
I42
VSimpleName: apply
p255
Vinsert
p256
I42
VSimpleName: terms
p257
tp258
I1
s(Vinsert
p259
I42
VSimpleName: toJson
p260
Vinsert
p261
I42
VSimpleName: type
p262
tp263
F0.25
s(Vinsert
p264
I42
VSimpleName: getCredentials
p265
Vinsert
p266
I42
VSimpleName: delegate
p267
tp268
I1
s(Vinsert
p269
I42
VSimpleName: create
p270
Vinsert
p271
I42
VSimpleName: sampler1
p272
tp273
I1
s(Vinsert
p274
I42
VSimpleName: utf8SizeInBytes
p275
Vinsert
p276
I42
VSimpleName: checkStringLength
p277
tp278
F0.25
s(Vinsert
p279
I42
VSimpleName: version
p280
Vinsert
p281
I52
VThisExpression
p282
tp283
F0.25
s(Vinsert
p284
I42
VSimpleName: apply
p285
Vinsert
p286
I42
VSimpleName: s
p287
tp288
I1
s(Vinsert
p289
I42
VSimpleName: writeSpans
p290
Vinsert
p291
I39
VPrimitiveType: byte
p292
tp293
I5
s(Vinsert
p294
I42
VSimpleName: get
p295
Vinsert
p296
I42
VSimpleName: Schema
p297
tp298
F0.25
s(Vinsert
p299
I42
VSimpleName: maxDuration
p300
Vinsert
p301
I42
VSimpleName: Long
p302
tp303
I1
s(Vinsert
p304
I42
VSimpleName: getBodySize
p305
Vinsert
p306
I42
VSimpleName: request
p307
tp308
I2
s(Vinsert
p309
I42
VSimpleName: parentId
p310
Vinsert
p311
I42
VSimpleName: builder
p312
tp313
I2
s(Vinsert
p314
I42
VSimpleName: getBody
p315
Vinsert
p316
I42
VSimpleName: es
p317
tp318
I1
s(Vinsert
p319
I42
VSimpleName: nextString
p320
Vinsert
p321
I43
VSimpleType: JsonReader
p322
tp323
F0.25
s(Vinsert
p324
I42
VSimpleName: ipv6
p325
Vinsert
p326
I8
VBlock
p327
tp328
I2
s(Vinsert
p329
I42
VSimpleName: hasToString
p330
Vinsert
p331
I78
VMarkerAnnotation
p332
tp333
F0.5
s(Vinsert
p334
I42
VSimpleName: toBuilder
p335
Vinsert
p336
I27
VInfixExpression: ==
p337
tp338
I4
s(Vinsert
p339
I42
VSimpleName: start
p340
Vinsert
p341
I42
VSimpleName: cluster
p342
tp343
I2
s(Vinsert
p344
I42
VSimpleName: min
p345
Vinsert
p346
I42
VSimpleName: beginIndex
p347
tp348
F0.25
s(g279
I42
g280
Vinsert
p349
I42
VSimpleName: version
p350
tp351
F0.25
s(Vinsert
p352
I42
VSimpleName: addBinaryAnnotation
p353
Vinsert
p354
I42
VSimpleName: Span
p355
tp356
I1
s(Vinsert
p357
I42
VSimpleName: create
p358
Vinsert
p359
I27
VInfixExpression: <<
p360
tp361
I1
s(Vinsert
p362
I42
VSimpleName: onError
p363
Vinsert
p364
I42
VSimpleName: callback
p365
tp366
I13
s(Vinsert
p367
I42
VSimpleName: limit
p368
Vinsert
p369
I42
VSimpleName: dsl
p370
tp371
I1
s(Vinsert
p372
I42
VSimpleName: getClass
p373
Vinsert
p374
I32
VMethodInvocation
p375
tp376
I4
s(g151
I42
g152
Vinsert
p377
I42
VSimpleName: Override
p378
tp379
F0.5
s(Vinsert
p380
I42
VSimpleName: writeSpan
p381
Vinsert
p382
I42
VSimpleName: readScalaSpanScrooge
p383
tp384
F0.25
s(Vinsert
p385
I42
VSimpleName: fromJson
p386
Vinsert
p387
I8
VBlock
p388
tp389
I1
s(Vinsert
p390
I42
VSimpleName: execute
p391
Vinsert
p392
I42
VSimpleName: Response
p393
tp394
I1
s(Vinsert
p395
I42
VSimpleName: adapter
p396
Vinsert
p397
I42
VSimpleName: Boolean
p398
tp399
I1
s(Vinsert
p400
I42
VSimpleName: getBytes
p401
Vinsert
p402
I42
VSimpleName: readSpan
p403
tp404
I1
s(Vinsert
p405
I42
VSimpleName: indexFetchMultiplier
p406
Vinsert
p407
I43
VSimpleType: CassandraStorage
p408
tp409
F0.25
s(Vinsert
p410
I42
VSimpleName: writeListBegin
p411
Vinsert
p412
I59
VVariableDeclarationFragment
p413
tp414
I1
s(g196
I42
g197
Vinsert
p415
I42
VSimpleName: spanName
p416
tp417
F0.25
s(Vinsert
p418
I42
VSimpleName: getSpanNames
p419
Vinsert
p420
I42
VSimpleName: getSpanNames_notFound
p421
tp422
F0.25
s(g304
I42
g305
Vinsert
p423
I39
VPrimitiveType: int
p424
tp425
I1
s(Vinsert
p426
I42
VSimpleName: apply
p427
Vinsert
p428
I42
VSimpleName: List
p429
tp430
F1.5
s(Vinsert
p431
I42
VSimpleName: password
p432
Vinsert
p433
I32
VMethodInvocation
p434
tp435
F4.25
s(Vinsert
p436
I42
VSimpleName: annotationKeys
p437
Vinsert
p438
I74
VParameterizedType: Set<String>
p439
tp440
I1
s(Vinsert
p441
I42
VSimpleName: takeRequest
p442
Vinsert
p443
I21
VExpressionStatement
p444
tp445
I2
s(Vinsert
p446
I42
VSimpleName: builder
p447
Vinsert
p448
I42
VSimpleName: List
p449
tp450
I1
s(Vinsert
p451
I42
VSimpleName: get
p452
Vinsert
p453
I42
VSimpleName: builder
p454
tp455
F1.25
s(Vinsert
p456
I42
VSimpleName: encodedPath
p457
Vinsert
p458
I12
VCatchClause
p459
tp460
I1
s(Vinsert
p461
I42
VSimpleName: iterator
p462
Vinsert
p463
I42
VSimpleName: encodedTraces
p464
tp465
I2
s(Vinsert
p466
I42
VSimpleName: strictTraceId
p467
Vinsert
p468
I45
VStringLiteral: "${zipkin.storage.strict-trace-id:true}"
p469
tp470
F0.25
s(g410
I42
g411
Vinsert
p471
I42
VSimpleName: TMemoryBuffer
p472
tp473
I1
s(Vinsert
p474
I42
VSimpleName: hasNext
p475
Vinsert
p476
I52
VThisExpression
p477
tp478
F0.25
s(Vinsert
p479
I42
VSimpleName: debug
p480
Vinsert
p481
I78
VMarkerAnnotation
p482
tp483
F0.25
s(g279
I42
g280
Vinsert
p484
I29
VJavadoc
p485
tp486
F0.25
s(Vinsert
p487
I42
VSimpleName: create
p488
Vinsert
p489
I34
VNumberLiteral: 2L
p490
tp491
I4
s(Vinsert
p492
I42
VSimpleName: writeUtf8CodePoint
p493
Vinsert
p494
I59
VVariableDeclarationFragment
p495
tp496
I1
s(Vinsert
p497
I42
VSimpleName: getURI
p498
Vinsert
p499
I43
VSimpleType: String
p500
tp501
F0.25
s(Vinsert
p502
I42
VSimpleName: url
p503
Vinsert
p504
I43
VSimpleType: HttpClient.Builder
p505
tp506
I1
s(Vinsert
p507
I42
VSimpleName: increment
p508
Vinsert
p509
I31
VMethodDeclaration
p510
tp511
F0.25
s(Vinsert
p512
I42
VSimpleName: readList
p513
Vinsert
p514
I42
VSimpleName: Override
p515
tp516
F0.25
s(Vinsert
p517
I42
VSimpleName: iterator
p518
Vinsert
p519
I42
VSimpleName: ArrayList
p520
tp521
I2
s(Vinsert
p522
I42
VSimpleName: isZero
p523
Vinsert
p524
I40
VQualifiedName: sampler.storeRate
p525
tp526
I1
s(Vinsert
p527
I42
VSimpleName: build
p528
Vinsert
p529
I36
VParenthesizedExpression
p530
tp531
I1
s(Vinsert
p532
I42
VSimpleName: getParentSpanId
p533
Vinsert
p534
I33
VNullLiteral
p535
tp536
I1
s(Vinsert
p537
I42
VSimpleName: config
p538
Vinsert
p539
I42
VSimpleName: assertThat
p540
tp541
I1
s(Vinsert
p542
I42
VSimpleName: equals
p543
Vinsert
p544
I9
VBooleanLiteral: false
p545
tp546
I1
s(Vinsert
p547
I42
VSimpleName: builder
p548
Vinsert
p549
I40
VQualifiedName: Span.Builder
p550
tp551
I1
s(Vinsert
p552
I42
VSimpleName: toBuilder
p553
Vinsert
p554
I34
VNumberLiteral: 0
p555
tp556
I4
s(Vinsert
p557
I42
VSimpleName: flush
p558
Vinsert
p559
I8
VBlock
p560
tp561
I2
s(Vinsert
p562
I42
VSimpleName: getMessage
p563
Vinsert
p564
I42
VSimpleName: warn
p565
tp566
I1
s(Vinsert
p567
I42
VSimpleName: currentTimeMillis
p568
Vinsert
p569
I42
VSimpleName: spanName
p570
tp571
I1
s(Vinsert
p572
I42
VSimpleName: putIfAbsent
p573
Vinsert
p574
I59
VVariableDeclarationFragment
p575
tp576
I1
s(Vinsert
p577
I42
VSimpleName: keyspace
p578
Vinsert
p579
I1
VAnonymousClassDeclaration
p580
tp581
F0.5
s(Vinsert
p582
I42
VSimpleName: valueOf
p583
Vinsert
p584
I42
VSimpleName: String
p585
tp586
I1
s(Vinsert
p587
I42
VSimpleName: errorReading
p588
Vinsert
p589
I42
VSimpleName: message
p590
tp591
I2
s(g522
I42
g523
Vinsert
p592
I43
VSimpleType: ZooKeeperRule
p593
tp594
F0.25
s(Vinsert
p595
I42
VSimpleName: log
p596
Vinsert
p597
I43
VSimpleType: JsonCodec
p598
tp599
F0.25
s(Vinsert
p600
I42
VSimpleName: eq
p601
Vinsert
p602
I32
VMethodInvocation
p603
tp604
I10
s(g507
I42
g508
Vinsert
p605
I78
VMarkerAnnotation
p606
tp607
F0.25
s(Vinsert
p608
I42
VSimpleName: setPort
p609
Vinsert
p610
I43
VSimpleType: ThriftServerConfig
p611
tp612
F1.25
s(Vinsert
p613
I42
VSimpleName: create
p614
Vinsert
p615
I42
VSimpleName: Span2Component
p616
tp617
F0.25
s(g362
I42
g363
Vinsert
p618
I42
VSimpleName: propagateIfFatal
p619
tp620
I1
s(Vinsert
p621
I42
VSimpleName: dispatcher
p622
Vinsert
p623
I59
VVariableDeclarationFragment
p624
tp625
F0.25
s(Vinsert
p626
I42
VSimpleName: builder
p627
Vinsert
p628
I42
VSimpleName: appSR
p629
tp630
I1
s(Vinsert
p631
I42
VSimpleName: getTraces
p632
Vinsert
p633
I42
VSimpleName: QueryRequest
p634
tp635
F0.25
s(Vinsert
p636
I42
VSimpleName: reset
p637
Vinsert
p638
I21
VExpressionStatement
p639
tp640
I3
s(Vinsert
p641
I42
VSimpleName: of
p642
Vinsert
p643
I42
VSimpleName: responseBody
p644
tp645
F0.25
s(Vinsert
p646
I42
VSimpleName: newCall
p647
Vinsert
p648
I42
VSimpleName: factory
p649
tp650
I1
s(g141
I42
g142
Vinsert
p651
I59
VVariableDeclarationFragment
p652
tp653
I2
s(Vinsert
p654
I42
VSimpleName: beginObject
p655
Vinsert
p656
I42
VSimpleName: name
p657
tp658
F0.25
s(Vinsert
p659
I42
VSimpleName: asList
p660
Vinsert
p661
I41
VReturnStatement
p662
tp663
I1
s(Vinsert
p664
I42
VSimpleName: builder
p665
Vinsert
p666
I45
VStringLiteral: "service"
p667
tp668
F0.75
s(Vinsert
p669
I42
VSimpleName: get
p670
Vinsert
p671
I42
VSimpleName: Arrays
p672
tp673
I2
s(Vinsert
p674
I42
VSimpleName: builder
p675
Vinsert
p676
I14
VClassInstanceCreation
p677
tp678
I2
s(Vinsert
p679
I42
VSimpleName: shared
p680
Vinsert
p681
I40
VQualifiedName: sr.endpoint
p682
tp683
I1
s(Vinsert
p684
I42
VSimpleName: keySet
p685
Vinsert
p686
I76
VWildcardType: ?
p687
tp688
F0.25
s(Vinsert
p689
I42
VSimpleName: clear
p690
Vinsert
p691
I42
VSimpleName: Set
p692
tp693
I1
s(Vinsert
p694
I42
VSimpleName: getBytes
p695
Vinsert
p696
I42
VSimpleName: Endpoint
p697
tp698
F0.25
s(Vinsert
p699
I42
VSimpleName: getTrace
p700
Vinsert
p701
I43
VSimpleType: Span
p702
tp703
F0.25
s(Vinsert
p704
I42
VSimpleName: isPresent
p705
Vinsert
p706
I34
VNumberLiteral: 30
p707
tp708
I1
s(Vinsert
p709
I42
VSimpleName: beginObject
p710
Vinsert
p711
I43
VSimpleType: JsonWriter
p712
tp713
F0.25
s(Vinsert
p714
I42
VSimpleName: hostsSupplier
p715
Vinsert
p716
I43
VSimpleType: ZipkinElasticsearchHttpStorageAutoConfiguration
p717
tp718
I1
s(Vinsert
p719
I42
VSimpleName: close
p720
Vinsert
p721
I42
VSimpleName: failed
p722
tp723
F0.25
s(Vinsert
p724
I42
VSimpleName: toCluster
p725
Vinsert
p726
I43
VSimpleType: LatencyAwarePolicy
p727
tp728
I1
s(Vinsert
p729
I42
VSimpleName: isEqualTo
p730
Vinsert
p731
I43
VSimpleType: String
p732
tp733
F1.25
s(Vinsert
p734
I42
VSimpleName: getApplicationContext
p735
Vinsert
p736
I42
VSimpleName: ApplicationReadyEvent
p737
tp738
I2
s(Vinsert
p739
I42
VSimpleName: next
p740
Vinsert
p741
I42
VSimpleName: span
p742
tp743
I1
s(Vinsert
p744
I42
VSimpleName: getInstance
p745
Vinsert
p746
I42
VSimpleName: epochMillis
p747
tp748
F0.25
s(Vinsert
p749
I42
VSimpleName: addAnnotation
p750
Vinsert
p751
I42
VSimpleName: clientTimestamp
p752
tp753
I1
s(g239
I42
g240
Vinsert
p754
I32
VMethodInvocation
p755
tp756
I16
s(Vinsert
p757
I42
VSimpleName: decodeList
p758
Vinsert
p759
I8
VBlock
p760
tp761
I1
s(Vinsert
p762
I42
VSimpleName: collect
p763
Vinsert
p764
I42
VSimpleName: s
p765
tp766
I2
s(g31
I42
g32
Vinsert
p767
I42
VSimpleName: isEqualTo
p768
tp769
I1
s(Vinsert
p770
I42
VSimpleName: getSimpleName
p771
Vinsert
p772
I42
VSimpleName: record
p773
tp774
F0.25
s(g156
I42
g157
Vinsert
p775
I78
VMarkerAnnotation
p776
tp777
F0.75
s(Vinsert
p778
I42
VSimpleName: keySet
p779
Vinsert
p780
I74
VParameterizedType: ArrayList<List<Span>>
p781
tp782
I1
s(Vinsert
p783
I42
VSimpleName: indexOf
p784
Vinsert
p785
I16
VConditionalExpression
p786
tp787
I1
s(g71
I42
g72
Vinsert
p788
I42
VSimpleName: futures
p789
tp790
I1
s(Vinsert
p791
I42
VSimpleName: isSampled
p792
Vinsert
p793
I8
VBlock
p794
tp795
I1
s(Vinsert
p796
I42
VSimpleName: singleTypeIndexingEnabled
p797
Vinsert
p798
I40
VQualifiedName: ElasticsearchHttpStorage.Builder
p799
tp800
F0.25
s(Vinsert
p801
I42
VSimpleName: builder
p802
Vinsert
p803
I42
VSimpleName: tracingInterceptor
p804
tp805
I1
s(Vinsert
p806
I42
VSimpleName: encode
p807
Vinsert
p808
I5
VArrayType: byte[]
p809
tp810
I1
s(Vinsert
p811
I42
VSimpleName: extracting
p812
Vinsert
p813
I45
VStringLiteral: "service2"
p814
tp815
I1
s(Vinsert
p816
I42
VSimpleName: length
p817
Vinsert
p818
I42
VSimpleName: desiredLength
p819
tp820
I2
s(Vinsert
p821
I42
VSimpleName: localServiceName
p822
Vinsert
p823
I32
VMethodInvocation
p824
tp825
F7.25
s(Vinsert
p826
I42
VSimpleName: delegate
p827
Vinsert
p828
I42
VSimpleName: Cassandra3Storage
p829
tp830
F1.25
s(Vinsert
p831
I42
VSimpleName: put
p832
Vinsert
p833
I42
VSimpleName: Long
p834
tp835
I1
s(Vinsert
p836
I42
VSimpleName: immediateFailedFuture
p837
Vinsert
p838
I54
VTryStatement
p839
tp840
I1
s(Vinsert
p841
I42
VSimpleName: setLevel
p842
Vinsert
p843
I43
VSimpleType: HttpLoggingInterceptor
p844
tp845
I1
s(Vinsert
p846
I42
VSimpleName: add
p847
Vinsert
p848
I43
VSimpleType: TimestampRange
p849
tp850
F0.25
s(Vinsert
p851
I42
VSimpleName: close
p852
Vinsert
p853
I42
VSimpleName: repository
p854
tp855
I1
s(Vinsert
p856
I42
VSimpleName: range
p857
Vinsert
p858
I42
VSimpleName: IntStream
p859
tp860
I1
s(Vinsert
p861
I42
VSimpleName: get
p862
Vinsert
p863
I42
VSimpleName: thriftCodec
p864
tp865
I1
s(Vinsert
p866
I42
VSimpleName: get
p867
Vinsert
p868
I42
VSimpleName: session
p869
tp870
F1.25
s(Vinsert
p871
I42
VSimpleName: cancel
p872
Vinsert
p873
I8
VBlock
p874
tp875
I1
s(Vinsert
p876
I42
VSimpleName: getMethodName
p877
Vinsert
p878
I32
VMethodInvocation
p879
tp880
I2
s(Vinsert
p881
I42
VSimpleName: callCount
p882
Vinsert
p883
I32
VMethodInvocation
p884
tp885
I3
s(Vinsert
p886
I42
VSimpleName: size
p887
Vinsert
p888
I43
VSimpleType: Field
p889
tp890
I1
s(Vinsert
p891
I42
VSimpleName: asMap
p892
Vinsert
p893
I33
VNullLiteral
p894
tp895
I1
s(Vinsert
p896
I42
VSimpleName: nextString
p897
Vinsert
p898
I42
VSimpleName: parent
p899
tp900
I1
s(g595
I42
g596
Vinsert
p901
I42
VSimpleName: getLogger
p902
tp903
F0.25
s(Vinsert
p904
I42
VSimpleName: get
p905
Vinsert
p906
I42
VSimpleName: ClusterHealthResponse
p907
tp908
I1
s(Vinsert
p909
I42
VSimpleName: containsExactly
p910
Vinsert
p911
I42
VSimpleName: t
p912
tp913
F1.25
s(Vinsert
p914
I42
VSimpleName: write
p915
Vinsert
p916
I42
VSimpleName: sizeInBytes
p917
tp918
F0.5
s(Vinsert
p919
I42
VSimpleName: set
p920
Vinsert
p921
I74
VParameterizedType: ArrayList<>
p922
tp923
I4
s(Vinsert
p924
I42
VSimpleName: add
p925
Vinsert
p926
I58
VVariableDeclarationExpression
p927
tp928
I3
s(Vinsert
p929
I42
VSimpleName: addAll
p930
Vinsert
p931
I42
VSimpleName: getTables
p932
tp933
F0.5
s(Vinsert
p934
I42
VSimpleName: get
p935
Vinsert
p936
I39
VPrimitiveType: int
p937
tp938
I1
s(Vinsert
p939
I42
VSimpleName: accept
p940
Vinsert
p941
I42
VSimpleName: when
p942
tp943
I1
s(Vinsert
p944
I42
VSimpleName: getBean
p945
Vinsert
p946
I42
VSimpleName: refresh
p947
tp948
I1
s(Vinsert
p949
I42
VSimpleName: getHigh
p950
Vinsert
p951
I7
VAssignment: =
p952
tp953
F0.25
s(Vinsert
p954
I42
VSimpleName: getPath
p955
Vinsert
p956
I27
VInfixExpression: ==
p957
tp958
I1
s(g587
I42
g588
Vinsert
p959
I60
VVariableDeclarationStatement
p960
tp961
I2
s(Vinsert
p962
I42
VSimpleName: addBinaryAnnotation
p963
Vinsert
p964
I42
VSimpleName: IllegalArgumentException
p965
tp966
I1
s(Vinsert
p967
I42
VSimpleName: builder
p968
Vinsert
p969
I42
VSimpleName: name
p970
tp971
F1.25
s(Vinsert
p972
I42
VSimpleName: builder
p973
Vinsert
p974
I42
VSimpleName: serverSpan
p975
tp976
I1
s(Vinsert
p977
I42
VSimpleName: from
p978
Vinsert
p979
I40
VQualifiedName: request.limit
p980
tp981
F0.25
s(Vinsert
p982
I42
VSimpleName: getDependencies
p983
Vinsert
p984
I42
VSimpleName: produces
p985
tp986
F0.25
s(Vinsert
p987
I42
VSimpleName: build
p988
Vinsert
p989
I42
VSimpleName: binaryAnnotations
p990
tp991
I1
s(Vinsert
p992
I42
VSimpleName: perform
p993
Vinsert
p994
I43
VSimpleType: Exception
p995
tp996
F1.75
s(Vinsert
p997
I42
VSimpleName: emptyList
p998
Vinsert
p999
I42
VSimpleName: Span
p1000
tp1001
I1
s(Vinsert
p1002
I42
VSimpleName: get
p1003
Vinsert
p1004
I42
VSimpleName: measurements
p1005
tp1006
I1
s(Vinsert
p1007
I42
VSimpleName: readStructBegin
p1008
Vinsert
p1009
I42
VSimpleName: TField
p1010
tp1011
I1
s(Vinsert
p1012
I42
VSimpleName: spanStore
p1013
Vinsert
p1014
I42
VSimpleName: spanStore
p1015
tp1016
F2.5
s(Vinsert
p1017
I42
VSimpleName: setJsonObject
p1018
Vinsert
p1019
I42
VSimpleName: containsExactly
p1020
tp1021
F0.25
s(Vinsert
p1022
I42
VSimpleName: id
p1023
Vinsert
p1024
I42
VSimpleName: Util
p1025
tp1026
I2
s(Vinsert
p1027
I42
VSimpleName: build
p1028
Vinsert
p1029
I42
VSimpleName: q
p1030
tp1031
I1
s(Vinsert
p1032
I42
VSimpleName: substring
p1033
Vinsert
p1034
I7
VAssignment: =
p1035
tp1036
I1
s(g436
I42
g437
Vinsert
p1037
I43
VSimpleType: String
p1038
tp1039
I2
s(Vinsert
p1040
I42
VSimpleName: toString
p1041
Vinsert
p1042
I43
VSimpleType: T
p1043
tp1044
F0.25
s(Vinsert
p1045
I42
VSimpleName: compareTo
p1046
Vinsert
p1047
I42
VSimpleName: compareTo
p1048
tp1049
F0.25
s(g757
I42
g758
Vinsert
p1050
I32
VMethodInvocation
p1051
tp1052
I1
s(Vinsert
p1053
I42
VSimpleName: build
p1054
Vinsert
p1055
I42
VSimpleName: Jre7
p1056
tp1057
I1
s(Vinsert
p1058
I42
VSimpleName: hasSize
p1059
Vinsert
p1060
I42
VSimpleName: flatExtracting
p1061
tp1062
F0.25
s(g191
I42
g192
Vinsert
p1063
I34
VNumberLiteral: 14
p1064
tp1065
I1
s(Vinsert
p1066
I42
VSimpleName: length
p1067
Vinsert
p1068
I85
VDimension
p1069
tp1070
I5
s(g405
I42
g406
Vinsert
p1071
I31
VMethodDeclaration
p1072
tp1073
F1.0
s(Vinsert
p1074
I42
VSimpleName: readSpans
p1075
Vinsert
p1076
I39
VPrimitiveType: byte
p1077
tp1078
F0.25
s(g552
I42
g553
Vinsert
p1079
I42
VSimpleName: nbTraceFetched
p1080
tp1081
I2
s(g729
I42
g730
Vinsert
p1082
I8
VBlock
p1083
tp1084
I3
s(Vinsert
p1085
I42
VSimpleName: skipValue
p1086
Vinsert
p1087
I21
VExpressionStatement
p1088
tp1089
I1
s(Vinsert
p1090
I42
VSimpleName: setParameter
p1091
Vinsert
p1092
I43
VSimpleType: String
p1093
tp1094
F0.25
s(Vinsert
p1095
I42
VSimpleName: writeList
p1096
Vinsert
p1097
I42
VSimpleName: out
p1098
tp1099
F0.25
s(g836
I42
g837
Vinsert
p1100
I44
VSingleVariableDeclaration
p1101
tp1102
I1
s(Vinsert
p1103
I42
VSimpleName: isSetValue
p1104
Vinsert
p1105
I9
VBooleanLiteral: false
p1106
tp1107
I1
s(Vinsert
p1108
I42
VSimpleName: id
p1109
Vinsert
p1110
I59
VVariableDeclarationFragment
p1111
tp1112
I2
s(Vinsert
p1113
I42
VSimpleName: isAccepted
p1114
Vinsert
p1115
I42
VSimpleName: perform
p1116
tp1117
I1
s(Vinsert
p1118
I42
VSimpleName: readDependencyLink
p1119
Vinsert
p1120
I21
VExpressionStatement
p1121
tp1122
I1
s(Vinsert
p1123
I42
VSimpleName: builder
p1124
Vinsert
p1125
I59
VVariableDeclarationFragment
p1126
tp1127
I45
s(Vinsert
p1128
I42
VSimpleName: size
p1129
Vinsert
p1130
I42
VSimpleName: values
p1131
tp1132
I2
s(g791
I42
g792
Vinsert
p1133
I39
VPrimitiveType: boolean
p1134
tp1135
F0.25
s(Vinsert
p1136
I42
VSimpleName: receivedSpanCount
p1137
Vinsert
p1138
I8
VBlock
p1139
tp1140
I1
s(Vinsert
p1141
I42
VSimpleName: stream
p1142
Vinsert
p1143
I42
VSimpleName: Stream
p1144
tp1145
I1
s(Vinsert
p1146
I42
VSimpleName: getUserType
p1147
Vinsert
p1148
I42
VSimpleName: TraceIdUDT
p1149
tp1150
I2
s(g171
I42
g172
Vinsert
p1151
I59
VVariableDeclarationFragment
p1152
tp1153
F0.25
s(Vinsert
p1154
I42
VSimpleName: getBean
p1155
Vinsert
p1156
I42
VSimpleName: disabledQueryBean
p1157
tp1158
F0.25
s(Vinsert
p1159
I42
VSimpleName: size
p1160
Vinsert
p1161
I42
VSimpleName: TRACE
p1162
tp1163
F1.5
s(Vinsert
p1164
I42
VSimpleName: hasToString
p1165
Vinsert
p1166
I42
VSimpleName: TraceIdUDT
p1167
tp1168
I1
s(g352
I42
g353
Vinsert
p1169
I34
VNumberLiteral: 1444438901315000L
p1170
tp1171
I1
s(Vinsert
p1172
I42
VSimpleName: value
p1173
Vinsert
p1174
I42
VSimpleName: span
p1175
tp1176
I1
s(Vinsert
p1177
I42
VSimpleName: get
p1178
Vinsert
p1179
I40
VQualifiedName: storage.session
p1180
tp1181
I1
s(Vinsert
p1182
I42
VSimpleName: get
p1183
Vinsert
p1184
I45
VStringLiteral: "  ]\u005cn"
p1185
tp1186
F0.25
s(Vinsert
p1187
I42
VSimpleName: assertEqual
p1188
Vinsert
p1189
I8
VBlock
p1190
tp1191
I1
s(Vinsert
p1192
I42
VSimpleName: wrap
p1193
Vinsert
p1194
I44
VSingleVariableDeclaration
p1195
tp1196
F0.25
s(Vinsert
p1197
I42
VSimpleName: build
p1198
Vinsert
p1199
I42
VSimpleName: pipeline
p1200
tp1201
I1
s(Vinsert
p1202
I42
VSimpleName: select
p1203
Vinsert
p1204
I42
VSimpleName: execute
p1205
tp1206
I1
s(Vinsert
p1207
I42
VSimpleName: toArray
p1208
Vinsert
p1209
I34
VNumberLiteral: 100000
p1210
tp1211
I1
s(Vinsert
p1212
I42
VSimpleName: accept
p1213
Vinsert
p1214
I43
VSimpleType: Span
p1215
tp1216
F1.0
s(Vinsert
p1217
I42
VSimpleName: build
p1218
Vinsert
p1219
I34
VNumberLiteral: 1444438900979000L
p1220
tp1221
I1
s(Vinsert
p1222
I42
VSimpleName: timestamp
p1223
Vinsert
p1224
I33
VNullLiteral
p1225
tp1226
I2
s(Vinsert
p1227
I42
VSimpleName: execute
p1228
Vinsert
p1229
I42
VSimpleName: closer
p1230
tp1231
I1
s(Vinsert
p1232
I42
VSimpleName: runningCallsCount
p1233
Vinsert
p1234
I42
VSimpleName: maxRequests
p1235
tp1236
F0.5
s(Vinsert
p1237
I42
VSimpleName: get
p1238
Vinsert
p1239
I42
VSimpleName: value
p1240
tp1241
I2
s(Vinsert
p1242
I42
VSimpleName: execute
p1243
Vinsert
p1244
I43
VSimpleType: Call
p1245
tp1246
I1
s(Vinsert
p1247
I42
VSimpleName: executeAsync
p1248
Vinsert
p1249
I42
VSimpleName: newFuture
p1250
tp1251
F0.5
s(g1177
I42
g1178
Vinsert
p1252
I34
VNumberLiteral: 1000
p1253
tp1254
I1
s(Vinsert
p1255
I42
VSimpleName: close
p1256
Vinsert
p1257
I42
VSimpleName: mem
p1258
tp1259
F0.25
s(Vinsert
p1260
I42
VSimpleName: ipv6
p1261
Vinsert
p1262
I40
VQualifiedName: address.length
p1263
tp1264
I1
s(Vinsert
p1265
I42
VSimpleName: create
p1266
Vinsert
p1267
I32
VMethodInvocation
p1268
tp1269
F77.0
s(Vinsert
p1270
I42
VSimpleName: forName
p1271
Vinsert
p1272
I43
VSimpleType: Class
p1273
tp1274
I1
s(g51
I42
g52
Vinsert
p1275
I7
VAssignment: =
p1276
tp1277
I1
s(Vinsert
p1278
I42
VSimpleName: flatMap
p1279
Vinsert
p1280
I42
VSimpleName: serviceName
p1281
tp1282
I1
s(Vinsert
p1283
I42
VSimpleName: getMessage
p1284
Vinsert
p1285
I42
VSimpleName: NoHostAvailableException
p1286
tp1287
I4
s(Vinsert
p1288
I42
VSimpleName: getCluster
p1289
Vinsert
p1290
I42
VSimpleName: Session
p1291
tp1292
F0.5
s(Vinsert
p1293
I42
VSimpleName: findSpans
p1294
Vinsert
p1295
I74
VParameterizedType: List<Span>
p1296
tp1297
I1
s(Vinsert
p1298
I42
VSimpleName: timestamp
p1299
Vinsert
p1300
I43
VSimpleType: Span.Builder
p1301
tp1302
I1
s(Vinsert
p1303
I42
VSimpleName: addPathSegment
p1304
Vinsert
p1305
I43
VSimpleType: HttpUrl.Builder
p1306
tp1307
I1
s(Vinsert
p1308
I42
VSimpleName: writeAscii
p1309
Vinsert
p1310
I42
VSimpleName: b
p1311
tp1312
F2.25
s(g1032
I42
g1033
Vinsert
p1313
I27
VInfixExpression: ==
p1314
tp1315
I1
s(Vinsert
p1316
I42
VSimpleName: create
p1317
Vinsert
p1318
I42
VSimpleName: assertThat
p1319
tp1320
I1
s(g811
I42
g812
Vinsert
p1321
I42
VSimpleName: containsOnly
p1322
tp1323
I1
s(g304
I42
g305
Vinsert
p1324
I8
VBlock
p1325
tp1326
I1
s(Vinsert
p1327
I42
VSimpleName: sessionProvider
p1328
Vinsert
p1329
I43
VSimpleType: Brave
p1330
tp1331
F0.25
s(Vinsert
p1332
I42
VSimpleName: check
p1333
Vinsert
p1334
I42
VSimpleName: Health
p1335
tp1336
F0.25
s(g1192
I42
g1193
Vinsert
p1337
I8
VBlock
p1338
tp1339
I1
s(g299
I42
g300
Vinsert
p1340
I43
VSimpleType: Long
p1341
tp1342
I1
s(g395
I42
g396
Vinsert
p1343
I57
VTypeLiteral
p1344
tp1345
I1
s(Vinsert
p1346
I42
VSimpleName: perform
p1347
Vinsert
p1348
I13
VCharacterLiteral: 'l'
p1349
tp1350
I2
s(Vinsert
p1351
I42
VSimpleName: newBuilder
p1352
Vinsert
p1353
I21
VExpressionStatement
p1354
tp1355
I3
s(g876
I42
g877
Vinsert
p1356
I42
VSimpleName: connectAndDropKeyspace
p1357
tp1358
F0.25
s(g1270
I42
g1271
Vinsert
p1359
I42
VSimpleName: mockStatic
p1360
tp1361
I1
s(Vinsert
p1362
I42
VSimpleName: indexFetchMultiplier
p1363
Vinsert
p1364
I42
VSimpleName: setIndexFetchMultiplier
p1365
tp1366
F0.25
s(Vinsert
p1367
I42
VSimpleName: getServletPath
p1368
Vinsert
p1369
I32
VMethodInvocation
p1370
tp1371
I2
s(Vinsert
p1372
I42
VSimpleName: serverTracer
p1373
Vinsert
p1374
I42
VSimpleName: ServerTracer
p1375
tp1376
I1
s(Vinsert
p1377
I42
VSimpleName: utf8SizeInBytes
p1378
Vinsert
p1379
I42
VSimpleName: codepoint
p1380
tp1381
I1
s(g1242
I42
g1243
Vinsert
p1382
I21
VExpressionStatement
p1383
tp1384
I10
s(Vinsert
p1385
I42
VSimpleName: addAll
p1386
Vinsert
p1387
I42
VSimpleName: span1
p1388
tp1389
I1
s(Vinsert
p1390
I42
VSimpleName: acceptedMessage
p1391
Vinsert
p1392
I42
VSimpleName: logger
p1393
tp1394
F3.75
s(Vinsert
p1395
I42
VSimpleName: delegate
p1396
Vinsert
p1397
I62
VInstanceofExpression
p1398
tp1399
I1
s(Vinsert
p1400
I42
VSimpleName: isNull
p1401
Vinsert
p1402
I60
VVariableDeclarationStatement
p1403
tp1404
I1
s(Vinsert
p1405
I42
VSimpleName: log
p1406
Vinsert
p1407
I21
VExpressionStatement
p1408
tp1409
I3
s(Vinsert
p1410
I42
VSimpleName: ipStringToBytes
p1411
Vinsert
p1412
I25
VIfStatement
p1413
tp1414
I1
s(Vinsert
p1415
I42
VSimpleName: add
p1416
Vinsert
p1417
I42
VSimpleName: link
p1418
tp1419
I2
s(g171
I42
g172
Vinsert
p1420
I32
VMethodInvocation
p1421
tp1422
I2
s(Vinsert
p1423
I42
VSimpleName: toJson
p1424
Vinsert
p1425
I22
VFieldAccess
p1426
tp1427
F0.5
s(Vinsert
p1428
I42
VSimpleName: header
p1429
Vinsert
p1430
I40
VQualifiedName: request.indices
p1431
tp1432
I1
s(Vinsert
p1433
I42
VSimpleName: isAccepted
p1434
Vinsert
p1435
I42
VSimpleName: asList
p1436
tp1437
I1
s(Vinsert
p1438
I42
VSimpleName: id
p1439
Vinsert
p1440
I42
VSimpleName: field
p1441
tp1442
I1
s(Vinsert
p1443
I42
VSimpleName: getUninterruptibly
p1444
Vinsert
p1445
I39
VPrimitiveType: long
p1446
tp1447
F0.25
s(Vinsert
p1448
I42
VSimpleName: getAnnotations
p1449
Vinsert
p1450
I43
VSimpleType: List
p1451
tp1452
I1
s(g56
I42
g57
Vinsert
p1453
I42
VSimpleName: ZipkinRule
p1454
tp1455
F2.5
s(Vinsert
p1456
I42
VSimpleName: setInput
p1457
Vinsert
p1458
I42
VSimpleName: inflater
p1459
tp1460
I2
s(g881
I42
g882
Vinsert
p1461
I42
VSimpleName: nextString
p1462
tp1463
I1
s(Vinsert
p1464
I42
VSimpleName: unmodifiableList
p1465
Vinsert
p1466
I83
VModifier: final
p1467
tp1468
I1
s(Vinsert
p1469
I42
VSimpleName: singleton
p1470
Vinsert
p1471
I44
VSingleVariableDeclaration
p1472
tp1473
F0.5
s(Vinsert
p1474
I42
VSimpleName: compare
p1475
Vinsert
p1476
I25
VIfStatement
p1477
tp1478
I1
s(Vinsert
p1479
I42
VSimpleName: getDependencies
p1480
Vinsert
p1481
I42
VSimpleName: assertThat
p1482
tp1483
I2
s(Vinsert
p1484
I42
VSimpleName: getTraces
p1485
Vinsert
p1486
I42
VSimpleName: call
p1487
tp1488
I1
s(Vinsert
p1489
I42
VSimpleName: jsonEscape
p1490
Vinsert
p1491
I43
VSimpleType: String
p1492
tp1493
F0.5
s(Vinsert
p1494
I42
VSimpleName: putTrace
p1495
Vinsert
p1496
I42
VSimpleName: linksSpans
p1497
tp1498
F0.25
s(g522
I42
g523
Vinsert
p1499
I33
VNullLiteral
p1500
tp1501
F0.25
s(g1232
I42
g1233
Vinsert
p1502
I25
VIfStatement
p1503
tp1504
I1
s(Vinsert
p1505
I42
VSimpleName: refresh
p1506
Vinsert
p1507
I43
VSimpleType: InMemoryConfiguration
p1508
tp1509
I1
s(g939
I42
g940
Vinsert
p1510
I43
VSimpleType: V2SpanConsumerAdapter
p1511
tp1512
I1
s(Vinsert
p1513
I42
VSimpleName: putTag
p1514
Vinsert
p1515
I42
VSimpleName: convert
p1516
tp1517
F2.0
s(Vinsert
p1518
I42
VSimpleName: spanStore
p1519
Vinsert
p1520
I42
VSimpleName: NOOP_CALLBACK
p1521
tp1522
I1
s(Vinsert
p1523
I42
VSimpleName: sort
p1524
Vinsert
p1525
I14
VClassInstanceCreation
p1526
tp1527
I1
s(Vinsert
p1528
I42
VSimpleName: setString
p1529
Vinsert
p1530
I42
VSimpleName: bindWithName
p1531
tp1532
I1
s(Vinsert
p1533
I42
VSimpleName: startsWith
p1534
Vinsert
p1535
I42
VSimpleName: CONTENT_TYPE
p1536
tp1537
I1
s(g1528
I42
g1529
Vinsert
p1538
I42
VSimpleName: insertTraceServiceSpanName
p1539
tp1540
I1
s(Vinsert
p1541
I42
VSimpleName: duration
p1542
Vinsert
p1543
I42
VSimpleName: getValue
p1544
tp1545
I1
s(Vinsert
p1546
I42
VSimpleName: toBuilder
p1547
Vinsert
p1548
I43
VSimpleType: ZipkinCassandra3StorageProperties
p1549
tp1550
F0.25
s(Vinsert
p1551
I42
VSimpleName: build
p1552
Vinsert
p1553
I42
VSimpleName: thrown
p1554
tp1555
I1
s(Vinsert
p1556
I42
VSimpleName: length
p1557
Vinsert
p1558
I74
VParameterizedType: TableField<Record,String>
p1559
tp1560
I2
s(Vinsert
p1561
I42
VSimpleName: read
p1562
Vinsert
p1563
I42
VSimpleName: Field
p1564
tp1565
I1
s(Vinsert
p1566
I42
VSimpleName: readMetadata
p1567
Vinsert
p1568
I32
VMethodInvocation
p1569
tp1570
I1
s(g836
I42
g837
Vinsert
p1571
I42
VSimpleName: e
p1572
tp1573
I1
s(Vinsert
p1574
I42
VSimpleName: asJavaCollection
p1575
Vinsert
p1576
I42
VSimpleName: JavaConversions
p1577
tp1578
I1
s(Vinsert
p1579
I42
VSimpleName: fromSpan
p1580
Vinsert
p1581
I42
VSimpleName: List
p1582
tp1583
F1.25
s(Vinsert
p1584
I42
VSimpleName: isLoggable
p1585
Vinsert
p1586
I25
VIfStatement
p1587
tp1588
I5
s(Vinsert
p1589
I42
VSimpleName: expect
p1590
Vinsert
p1591
I42
VSimpleName: ok
p1592
tp1593
F0.25
s(Vinsert
p1594
I42
VSimpleName: getUsername
p1595
Vinsert
p1596
I45
VStringLiteral: "username"
p1597
tp1598
I1
s(g1303
I42
g1304
Vinsert
p1599
I40
VQualifiedName: zipkin.internal.Nullable
p1600
tp1601
F0.25
s(Vinsert
p1602
I42
VSimpleName: errorCount
p1603
Vinsert
p1604
I42
VSimpleName: child
p1605
tp1606
I1
s(Vinsert
p1607
I42
VSimpleName: stream
p1608
Vinsert
p1609
I60
VVariableDeclarationStatement
p1610
tp1611
I2
s(Vinsert
p1612
I42
VSimpleName: putTrace
p1613
Vinsert
p1614
I45
VStringLiteral: "server"
p1615
tp1616
I1
s(g1118
I42
g1119
Vinsert
p1617
I34
VNumberLiteral: 0
p1618
tp1619
I1
s(Vinsert
p1620
I42
VSimpleName: isEmpty
p1621
Vinsert
p1622
I42
VSimpleName: checkArgument
p1623
tp1624
F1.25
s(g1561
I42
g1562
Vinsert
p1625
I42
VSimpleName: field
p1626
tp1627
I1
s(Vinsert
p1628
I42
VSimpleName: create
p1629
Vinsert
p1630
I40
VQualifiedName: zipkin.internal.v2.storage.StorageComponent
p1631
tp1632
F0.25
s(Vinsert
p1633
I42
VSimpleName: currentTimeMillis
p1634
Vinsert
p1635
I32
VMethodInvocation
p1636
tp1637
F4.75
s(g679
I42
g680
Vinsert
p1638
I42
VSimpleName: sr
p1639
tp1640
I1
s(g1090
I42
g1091
Vinsert
p1641
I44
VSingleVariableDeclaration
p1642
tp1643
F0.25
s(Vinsert
p1644
I42
VSimpleName: clear
p1645
Vinsert
p1646
I42
VSimpleName: sampler
p1647
tp1648
F0.25
s(Vinsert
p1649
I42
VSimpleName: getRawTrace
p1650
Vinsert
p1651
I1
VAnonymousClassDeclaration
p1652
tp1653
F0.25
s(g405
I42
g406
Vinsert
p1654
I83
VModifier: static
p1655
tp1656
F0.25
s(Vinsert
p1657
I42
VSimpleName: readSpan
p1658
Vinsert
p1659
I43
VSimpleType: UnsupportedOperationException
p1660
tp1661
F0.25
s(g219
I42
g220
Vinsert
p1662
I42
VSimpleName: enterPath
p1663
tp1664
I1
s(Vinsert
p1665
I42
VSimpleName: onError
p1666
Vinsert
p1667
I42
VSimpleName: delegate
p1668
tp1669
I1
s(g757
I42
g758
Vinsert
p1670
I39
VPrimitiveType: byte
p1671
tp1672
F0.25
s(Vinsert
p1673
I42
VSimpleName: remove
p1674
Vinsert
p1675
I42
VSimpleName: delegate
p1676
tp1677
I1
s(Vinsert
p1678
I42
VSimpleName: newCall
p1679
Vinsert
p1680
I42
VSimpleName: isTrue
p1681
tp1682
F0.25
s(Vinsert
p1683
I42
VSimpleName: setTimeZone
p1684
Vinsert
p1685
I43
VSimpleType: SimpleDateFormat
p1686
tp1687
F2.25
s(Vinsert
p1688
I42
VSimpleName: writeDependencyLink
p1689
Vinsert
p1690
I45
VStringLiteral: "bar"
p1691
tp1692
I1
s(Vinsert
p1693
I42
VSimpleName: map
p1694
Vinsert
p1695
I42
VSimpleName: earlyTraces
p1696
tp1697
I1
s(g1017
I42
g1018
Vinsert
p1698
I42
VSimpleName: Test
p1699
tp1700
F0.25
s(g1579
I42
g1580
Vinsert
p1701
I74
VParameterizedType: List<Span2>
p1702
tp1703
I1
s(Vinsert
p1704
I42
VSimpleName: iterator
p1705
Vinsert
p1706
I40
VQualifiedName: zipkin.storage.cassandra3.Schema.TABLE_SERVICE_SPANS
p1707
tp1708
F0.5
s(Vinsert
p1709
I42
VSimpleName: encode
p1710
Vinsert
p1711
I42
VSimpleName: build
p1712
tp1713
I2
s(g1212
I42
g1213
Vinsert
p1714
I42
VSimpleName: Span
p1715
tp1716
F1.25
s(g1410
I42
g1411
Vinsert
p1717
I5
VArrayType: byte[]
p1718
tp1719
I1
s(g497
I42
g498
Vinsert
p1720
I83
VModifier: public
p1721
tp1722
F0.25
s(Vinsert
p1723
I42
VSimpleName: toLowerHex
p1724
Vinsert
p1725
I59
VVariableDeclarationFragment
p1726
tp1727
I1
s(Vinsert
p1728
I42
VSimpleName: build
p1729
Vinsert
p1730
I42
VSimpleName: build
p1731
tp1732
F1.0
s(g1316
I42
g1317
Vinsert
p1733
I42
VSimpleName: constantEqualsConstant
p1734
tp1735
F0.25
s(g181
I42
g182
Vinsert
p1736
I59
VVariableDeclarationFragment
p1737
tp1738
I10
s(Vinsert
p1739
I42
VSimpleName: write
p1740
Vinsert
p1741
I42
VSimpleName: index
p1742
tp1743
I2
s(Vinsert
p1744
I42
VSimpleName: getInFlightQueries
p1745
Vinsert
p1746
I32
VMethodInvocation
p1747
tp1748
I2
s(Vinsert
p1749
I42
VSimpleName: emptyList
p1750
Vinsert
p1751
I74
VParameterizedType: List<Interceptor>
p1752
tp1753
I1
s(g1456
I42
g1457
Vinsert
p1754
I43
VSimpleType: IOException
p1755
tp1756
F0.25
s(Vinsert
p1757
I42
VSimpleName: size
p1758
Vinsert
p1759
I42
VSimpleName: sufficientMeasurementsInWindow
p1760
tp1761
I1
s(Vinsert
p1762
I42
VSimpleName: close
p1763
Vinsert
p1764
I42
VSimpleName: es
p1765
tp1766
F0.25
s(Vinsert
p1767
I42
VSimpleName: addQueryParameter
p1768
Vinsert
p1769
I42
VSimpleName: addQueryParameter
p1770
tp1771
I1
s(Vinsert
p1772
I42
VSimpleName: add
p1773
Vinsert
p1774
I42
VSimpleName: remove
p1775
tp1776
I1
s(Vinsert
p1777
I42
VSimpleName: nextString
p1778
Vinsert
p1779
I42
VSimpleName: port
p1780
tp1781
I1
s(g1405
I42
g1406
Vinsert
p1782
I32
VMethodInvocation
p1783
tp1784
F6.25
s(Vinsert
p1785
I42
VSimpleName: contains
p1786
Vinsert
p1787
I43
VSimpleType: String
p1788
tp1789
F0.25
s(Vinsert
p1790
I42
VSimpleName: legacyAsyncSpanStore
p1791
Vinsert
p1792
I40
VQualifiedName: zipkin.internal.v2.storage.StorageComponent
p1793
tp1794
F0.25
s(Vinsert
p1795
I42
VSimpleName: sampler
p1796
Vinsert
p1797
I32
VMethodInvocation
p1798
tp1799
I2
s(g1232
I42
g1233
Vinsert
p1800
I21
VExpressionStatement
p1801
tp1802
F0.25
s(g934
I42
g935
Vinsert
p1803
I42
VSimpleName: pos
p1804
tp1805
I1
s(Vinsert
p1806
I42
VSimpleName: close
p1807
Vinsert
p1808
I42
VSimpleName: sampleRate
p1809
tp1810
F0.25
s(Vinsert
p1811
I42
VSimpleName: getBytes
p1812
Vinsert
p1813
I40
VQualifiedName: javax.annotation.concurrent.Immutable
p1814
tp1815
I1
s(Vinsert
p1816
I42
VSimpleName: using
p1817
Vinsert
p1818
I42
VSimpleName: DSLContext
p1819
tp1820
F0.25
s(Vinsert
p1821
I42
VSimpleName: values
p1822
Vinsert
p1823
I74
VParameterizedType: List<ByteBuffer>
p1824
tp1825
F0.25
s(Vinsert
p1826
I42
VSimpleName: execute
p1827
Vinsert
p1828
I42
VSimpleName: currentSpan
p1829
tp1830
I1
s(Vinsert
p1831
I42
VSimpleName: openConnection
p1832
Vinsert
p1833
I43
VSimpleType: HttpURLConnection
p1834
tp1835
I1
s(Vinsert
p1836
I42
VSimpleName: getBytes
p1837
Vinsert
p1838
I45
VStringLiteral: "\u005cu2028 and \u005cu2029"
p1839
tp1840
I2
s(Vinsert
p1841
I42
VSimpleName: expect
p1842
Vinsert
p1843
I29
VJavadoc
p1844
tp1845
F0.75
s(Vinsert
p1846
I42
VSimpleName: filters
p1847
Vinsert
p1848
I59
VVariableDeclarationFragment
p1849
tp1850
I1
s(Vinsert
p1851
I42
VSimpleName: isEqualTo
p1852
Vinsert
p1853
I39
VPrimitiveType: int
p1854
tp1855
I1
s(Vinsert
p1856
I42
VSimpleName: writeLowerHex
p1857
Vinsert
p1858
I40
VQualifiedName: value.traceIdHigh
p1859
tp1860
F1.25
s(Vinsert
p1861
I42
VSimpleName: readSpan
p1862
Vinsert
p1863
I42
VSimpleName: metrics
p1864
tp1865
I2
s(Vinsert
p1866
I42
VSimpleName: build
p1867
Vinsert
p1868
I40
VQualifiedName: ElasticsearchStorage.Builder
p1869
tp1870
I2
s(Vinsert
p1871
I42
VSimpleName: parse
p1872
Vinsert
p1873
I27
VInfixExpression: ==
p1874
tp1875
I1
s(Vinsert
p1876
I42
VSimpleName: isEmpty
p1877
Vinsert
p1878
I18
VContinueStatement
p1879
tp1880
I1
s(Vinsert
p1881
I42
VSimpleName: get
p1882
Vinsert
p1883
I42
VSimpleName: readSpan
p1884
tp1885
I1
s(Vinsert
p1886
I42
VSimpleName: stream
p1887
Vinsert
p1888
I42
VSimpleName: read
p1889
tp1890
I2
s(g36
I42
g37
Vinsert
p1891
I21
VExpressionStatement
p1892
tp1893
I1
s(Vinsert
p1894
I42
VSimpleName: build
p1895
Vinsert
p1896
I42
VSimpleName: esHttpBuilder
p1897
tp1898
F1.25
s(g1227
I42
g1228
Vinsert
p1899
I42
VSimpleName: register
p1900
tp1901
I1
s(g410
I42
g411
Vinsert
p1902
I21
VExpressionStatement
p1903
tp1904
I1
s(g1704
I42
g1705
Vinsert
p1905
I42
VSimpleName: TABLE_SERVICE_SPANS
p1906
tp1907
F1.0
s(g1400
I42
g1401
Vinsert
p1908
I40
VQualifiedName: builder.clientVersion
p1909
tp1910
I1
s(Vinsert
p1911
I42
VSimpleName: isEqualTo
p1912
Vinsert
p1913
I13
VCharacterLiteral: '\u005cf'
p1914
tp1915
I1
s(Vinsert
p1916
I42
VSimpleName: noMatch
p1917
Vinsert
p1918
I44
VSingleVariableDeclaration
p1919
tp1920
F0.25
s(Vinsert
p1921
I42
VSimpleName: getConnectedHosts
p1922
Vinsert
p1923
I42
VSimpleName: getState
p1924
tp1925
I1
s(Vinsert
p1926
I42
VSimpleName: close
p1927
Vinsert
p1928
I42
VSimpleName: spansInJson
p1929
tp1930
I1
s(g1916
I42
g1917
Vinsert
p1931
I42
VSimpleName: context
p1932
tp1933
F0.25
s(Vinsert
p1934
I42
VSimpleName: traceId
p1935
Vinsert
p1936
I42
VSimpleName: buildClientOnlySpan_clear
p1937
tp1938
F0.25
s(Vinsert
p1939
I42
VSimpleName: executeAsync
p1940
Vinsert
p1941
I40
VQualifiedName: org.mockito.Mockito.when
p1942
tp1943
F0.25
s(Vinsert
p1944
I42
VSimpleName: spanConsumer
p1945
Vinsert
p1946
I22
VFieldAccess
p1947
tp1948
F0.5
s(Vinsert
p1949
I42
VSimpleName: clear
p1950
Vinsert
p1951
I42
VSimpleName: ElasticsearchHttpStorage
p1952
tp1953
F0.25
s(Vinsert
p1954
I42
VSimpleName: get
p1955
Vinsert
p1956
I42
VSimpleName: put
p1957
tp1958
I2
s(Vinsert
p1959
I42
VSimpleName: expect
p1960
Vinsert
p1961
I42
VSimpleName: refresh
p1962
tp1963
I5
s(Vinsert
p1964
I42
VSimpleName: timestamp
p1965
Vinsert
p1966
I42
VSimpleName: span
p1967
tp1968
I7
s(Vinsert
p1969
I42
VSimpleName: isLoggable
p1970
Vinsert
p1971
I12
VCatchClause
p1972
tp1973
I1
s(Vinsert
p1974
I42
VSimpleName: writeByte
p1975
Vinsert
p1976
I27
VInfixExpression: <
p1977
tp1978
I1
s(Vinsert
p1979
I42
VSimpleName: endArray
p1980
Vinsert
p1981
I42
VSimpleName: hasNext
p1982
tp1983
I1
s(g762
I42
g763
Vinsert
p1984
I42
VSimpleName: map
p1985
tp1986
I1
s(Vinsert
p1987
I42
VSimpleName: nullable
p1988
Vinsert
p1989
I42
VSimpleName: TableField
p1990
tp1991
I5
s(g1400
I42
g1401
Vinsert
p1992
I8
VBlock
p1993
tp1994
I1
s(Vinsert
p1995
I42
VSimpleName: getTrace
p1996
Vinsert
p1997
I83
VModifier: public
p1998
tp1999
F0.25
s(Vinsert
p2000
I42
VSimpleName: equals
p2001
Vinsert
p2002
I42
VSimpleName: traceIdLo
p2003
tp2004
F0.75
s(Vinsert
p2005
I42
VSimpleName: beginArray
p2006
Vinsert
p2007
I43
VSimpleType: List
p2008
tp2009
F1.25
s(g856
I42
g857
Vinsert
p2010
I43
VSimpleType: StringBuilder
p2011
tp2012
I2
s(Vinsert
p2013
I42
VSimpleName: onError
p2014
Vinsert
p2015
I42
VSimpleName: t
p2016
tp2017
F1.5
s(Vinsert
p2018
I42
VSimpleName: newCall
p2019
Vinsert
p2020
I42
VSimpleName: baseUrl
p2021
tp2022
I1
s(Vinsert
p2023
I42
VSimpleName: write
p2024
Vinsert
p2025
I42
VSimpleName: sink
p2026
tp2027
I2
s(Vinsert
p2028
I42
VSimpleName: clear
p2029
Vinsert
p2030
I27
VInfixExpression: !=
p2031
tp2032
I2
s(Vinsert
p2033
I42
VSimpleName: fromJson
p2034
Vinsert
p2035
I45
VStringLiteral: "      \u005c"value\u005c": \u005c"bar\u005c",\u005cn"
p2036
tp2037
I1
s(Vinsert
p2038
I42
VSimpleName: close
p2039
Vinsert
p2040
I41
VReturnStatement
p2041
tp2042
F0.75
s(g1136
I42
g1137
Vinsert
p2043
I42
VSimpleName: span
p2044
tp2045
I2
s(Vinsert
p2046
I42
VSimpleName: equals
p2047
Vinsert
p2048
I43
VSimpleType: String
p2049
tp2050
F2.25
s(g929
I42
g930
Vinsert
p2051
I76
VWildcardType: ?
p2052
tp2053
F0.5
s(Vinsert
p2054
I42
VSimpleName: addAnnotation
p2055
Vinsert
p2056
I85
VDimension
p2057
tp2058
I1
s(g1649
I42
g1650
Vinsert
p2059
I78
VMarkerAnnotation
p2060
tp2061
F0.25
s(Vinsert
p2062
I42
VSimpleName: next
p2063
Vinsert
p2064
I42
VSimpleName: hasNext
p2065
tp2066
I1
s(Vinsert
p2067
I42
VSimpleName: perform
p2068
Vinsert
p2069
I42
VSimpleName: header
p2070
tp2071
F1.25
s(Vinsert
p2072
I42
VSimpleName: readSpan
p2073
Vinsert
p2074
I45
VStringLiteral: "{\u005c"timestamp_millis\u005c":"
p2075
tp2076
I1
s(Vinsert
p2077
I42
VSimpleName: get
p2078
Vinsert
p2079
I42
VSimpleName: startTs
p2080
tp2081
I1
s(g987
I42
g988
Vinsert
p2082
I42
VSimpleName: traceIdHigh
p2083
tp2084
I1
s(Vinsert
p2085
I42
VSimpleName: writeEndpoint
p2086
Vinsert
p2087
I42
VSimpleName: String
p2088
tp2089
F1.25
s(Vinsert
p2090
I42
VSimpleName: acceptSpansCallback
p2091
Vinsert
p2092
I42
VSimpleName: callback
p2093
tp2094
I1
s(g621
I42
g622
Vinsert
p2095
I32
VMethodInvocation
p2096
tp2097
I2
s(Vinsert
p2098
I42
VSimpleName: onSuccess
p2099
Vinsert
p2100
I42
VSimpleName: call
p2101
tp2102
F0.25
s(Vinsert
p2103
I42
VSimpleName: isEmpty
p2104
Vinsert
p2105
I42
VSimpleName: code
p2106
tp2107
I1
s(Vinsert
p2108
I42
VSimpleName: toString
p2109
Vinsert
p2110
I7
VAssignment: =
p2111
tp2112
I2
s(g1574
I42
g1575
Vinsert
p2113
I42
VSimpleName: spanStore
p2114
tp2115
F0.75
s(g131
I42
g132
Vinsert
p2116
I32
VMethodInvocation
p2117
tp2118
F20.75
s(g1749
I42
g1750
Vinsert
p2119
I42
VSimpleName: List
p2120
tp2121
I1
s(Vinsert
p2122
I42
VSimpleName: get
p2123
Vinsert
p2124
I74
VParameterizedType: ListenableFuture<?>
p2125
tp2126
I1
s(Vinsert
p2127
I42
VSimpleName: ipv4
p2128
Vinsert
p2129
I42
VSimpleName: addr
p2130
tp2131
I3
s(g1095
I42
g1096
Vinsert
p2132
I8
VBlock
p2133
tp2134
I1
s(Vinsert
p2135
I42
VSimpleName: build
p2136
Vinsert
p2137
I42
VSimpleName: storage
p2138
tp2139
F2.75
s(Vinsert
p2140
I42
VSimpleName: addAnnotation
p2141
Vinsert
p2142
I34
VNumberLiteral: 1000L
p2143
tp2144
I1
s(Vinsert
p2145
I42
VSimpleName: incrementBytes
p2146
Vinsert
p2147
I44
VSingleVariableDeclaration
p2148
tp2149
F0.75
s(g654
I42
g655
Vinsert
p2150
I44
VSingleVariableDeclaration
p2151
tp2152
F0.75
s(g982
I42
g983
Vinsert
p2153
I22
VFieldAccess
p2154
tp2155
I1
s(Vinsert
p2156
I42
VSimpleName: addLink
p2157
Vinsert
p2158
I34
VNumberLiteral: 0
p2159
tp2160
I1
s(Vinsert
p2161
I42
VSimpleName: builder
p2162
Vinsert
p2163
I42
VSimpleName: scribePort
p2164
tp2165
F0.25
s(g1377
I42
g1378
Vinsert
p2166
I85
VDimension
p2167
tp2168
I1
s(Vinsert
p2169
I42
VSimpleName: builder
p2170
Vinsert
p2171
I42
VSimpleName: Nullable
p2172
tp2173
F0.25
s(Vinsert
p2174
I42
VSimpleName: readDependencyLink
p2175
Vinsert
p2176
I52
VThisExpression
p2177
tp2178
F0.25
s(Vinsert
p2179
I42
VSimpleName: and
p2180
Vinsert
p2181
I33
VNullLiteral
p2182
tp2183
F0.25
s(g992
I42
g993
Vinsert
p2184
I78
VMarkerAnnotation
p2185
tp2186
F1.0
s(Vinsert
p2187
I42
VSimpleName: getBean
p2188
Vinsert
p2189
I60
VVariableDeclarationStatement
p2190
tp2191
I1
s(Vinsert
p2192
I42
VSimpleName: add
p2193
Vinsert
p2194
I43
VSimpleType: ArrayList
p2195
tp2196
I1
s(g1709
I42
g1710
Vinsert
p2197
I42
VSimpleName: backend
p2198
tp2199
I1
s(g6
I42
g7
Vinsert
p2200
I54
VTryStatement
p2201
tp2202
I1
s(Vinsert
p2203
I42
VSimpleName: indexOf
p2204
Vinsert
p2205
I42
VSimpleName: defaultValue
p2206
tp2207
F0.25
s(Vinsert
p2208
I42
VSimpleName: apply
p2209
Vinsert
p2210
I42
VSimpleName: authoritativeTimestamp
p2211
tp2212
F0.75
s(g537
I42
g538
Vinsert
p2213
I21
VExpressionStatement
p2214
tp2215
I1
s(g1017
I42
g1018
Vinsert
p2216
I39
VPrimitiveType: void
p2217
tp2218
F0.25
s(Vinsert
p2219
I42
VSimpleName: getProtectionDomain
p2220
Vinsert
p2221
I43
VSimpleType: String
p2222
tp2223
I1
s(Vinsert
p2224
I42
VSimpleName: getRawTrace
p2225
Vinsert
p2226
I42
VSimpleName: Callback
p2227
tp2228
F0.25
s(g1964
I42
g1965
Vinsert
p2229
I42
VSimpleName: id
p2230
tp2231
I2
s(Vinsert
p2232
I42
VSimpleName: accept
p2233
Vinsert
p2234
I42
VSimpleName: sampler
p2235
tp2236
F0.5
s(Vinsert
p2237
I42
VSimpleName: url
p2238
Vinsert
p2239
I42
VSimpleName: Request
p2240
tp2241
I3
s(Vinsert
p2242
I42
VSimpleName: expect
p2243
Vinsert
p2244
I43
VSimpleType: ZipkinCassandraStorageAutoConfiguration
p2245
tp2246
I1
s(Vinsert
p2247
I42
VSimpleName: merge
p2248
Vinsert
p2249
I42
VSimpleName: onSuccess
p2250
tp2251
I2
s(g2179
I42
g2180
Vinsert
p2252
I59
VVariableDeclarationFragment
p2253
tp2254
F0.25
s(Vinsert
p2255
I42
VSimpleName: setThreadNamePrefix
p2256
Vinsert
p2257
I21
VExpressionStatement
p2258
tp2259
I1
s(Vinsert
p2260
I42
VSimpleName: putAll
p2261
Vinsert
p2262
I8
VBlock
p2263
tp2264
I1
s(Vinsert
p2265
I42
VSimpleName: get
p2266
Vinsert
p2267
I22
VFieldAccess
p2268
tp2269
F15.0
s(g426
I42
g427
Vinsert
p2270
I60
VVariableDeclarationStatement
p2271
tp2272
I6
s(Vinsert
p2273
I42
VSimpleName: clear
p2274
Vinsert
p2275
I42
VSimpleName: Span
p2276
tp2277
F0.25
s(Vinsert
p2278
I42
VSimpleName: code
p2279
Vinsert
p2280
I42
VSimpleName: Response
p2281
tp2282
F0.25
s(Vinsert
p2283
I42
VSimpleName: indexShards
p2284
Vinsert
p2285
I32
VMethodInvocation
p2286
tp2287
I4
s(g16
I42
g17
Vinsert
p2288
I45
VStringLiteral: "child-1"
p2289
tp2290
I1
s(Vinsert
p2291
I42
VSimpleName: create
p2292
Vinsert
p2293
I45
VStringLiteral: "${zipkin.collector.sample-rate}"
p2294
tp2295
F0.25
s(g1911
I42
g1912
Vinsert
p2296
I4
VArrayInitializer
p2297
tp2298
I1
s(Vinsert
p2299
I42
VSimpleName: charAt
p2300
Vinsert
p2301
I42
VSimpleName: string
p2302
tp2303
I2
s(Vinsert
p2304
I42
VSimpleName: addNetworkInterceptor
p2305
Vinsert
p2306
I43
VSimpleType: ZipkinElasticsearchHttpStorageProperties
p2307
tp2308
I1
s(Vinsert
p2309
I42
VSimpleName: getTime
p2310
Vinsert
p2311
I42
VSimpleName: iso8601
p2312
tp2313
I1
s(Vinsert
p2314
I42
VSimpleName: equals
p2315
Vinsert
p2316
I70
VEnhancedForStatement
p2317
tp2318
I2
s(g1222
I42
g1223
Vinsert
p2319
I27
VInfixExpression: >
p2320
tp2321
I1
s(g1767
I42
g1768
Vinsert
p2322
I42
VSimpleName: baseUrl
p2323
tp2324
I1
s(Vinsert
p2325
I42
VSimpleName: builder
p2326
Vinsert
p2327
I43
VSimpleType: Cassandra3Storage
p2328
tp2329
I1
s(Vinsert
p2330
I42
VSimpleName: getDependencies
p2331
Vinsert
p2332
I8
VBlock
p2333
tp2334
I1
s(Vinsert
p2335
I42
VSimpleName: startsWith
p2336
Vinsert
p2337
I43
VSimpleType: String
p2338
tp2339
F2.5
s(Vinsert
p2340
I42
VSimpleName: create
p2341
Vinsert
p2342
I43
VSimpleType: ZipkinSpanWriter
p2343
tp2344
I2
s(Vinsert
p2345
I42
VSimpleName: add
p2346
Vinsert
p2347
I42
VSimpleName: ImmutableSet
p2348
tp2349
I1
s(Vinsert
p2350
I42
VSimpleName: iterator
p2351
Vinsert
p2352
I45
VStringLiteral: "foo"
p2353
tp2354
I1
s(Vinsert
p2355
I42
VSimpleName: iterator
p2356
Vinsert
p2357
I42
VSimpleName: messages
p2358
tp2359
I2
s(Vinsert
p2360
I42
VSimpleName: serviceName
p2361
Vinsert
p2362
I42
VSimpleName: Integer
p2363
tp2364
F0.25
s(Vinsert
p2365
I42
VSimpleName: enqueue
p2366
Vinsert
p2367
I43
VSimpleType: ListenableFuture
p2368
tp2369
F0.25
s(g1303
I42
g1304
Vinsert
p2370
I25
VIfStatement
p2371
tp2372
I1
s(Vinsert
p2373
I42
VSimpleName: remoteEndpoint
p2374
Vinsert
p2375
I42
VSimpleName: ma
p2376
tp2377
I2
s(Vinsert
p2378
I42
VSimpleName: compareTo
p2379
Vinsert
p2380
I31
VMethodDeclaration
p2381
tp2382
F0.25
s(Vinsert
p2383
I42
VSimpleName: networkInterceptors
p2384
Vinsert
p2385
I42
VSimpleName: networkInterceptors
p2386
tp2387
F0.25
s(Vinsert
p2388
I42
VSimpleName: acceptSpans
p2389
Vinsert
p2390
I34
VNumberLiteral: 0
p2391
tp2392
I4
s(Vinsert
p2393
I42
VSimpleName: emptySet
p2394
Vinsert
p2395
I27
VInfixExpression: !=
p2396
tp2397
I2
s(Vinsert
p2398
I42
VSimpleName: ensureIndexTemplate
p2399
Vinsert
p2400
I43
VSimpleType: AsyncSpanConsumer
p2401
tp2402
F0.25
s(Vinsert
p2403
I42
VSimpleName: remoteEndpoint
p2404
Vinsert
p2405
I42
VSimpleName: kind
p2406
tp2407
I1
s(Vinsert
p2408
I42
VSimpleName: builder
p2409
Vinsert
p2410
I40
VQualifiedName: ElasticsearchHttpStorage.Builder
p2411
tp2412
F1.25
s(g982
I42
g983
Vinsert
p2413
I42
VSimpleName: DEPENDENCY_LINKS_TO_JSON
p2414
tp2415
F0.25
s(Vinsert
p2416
I42
VSimpleName: getUsername
p2417
Vinsert
p2418
I8
VBlock
p2419
tp2420
I1
s(Vinsert
p2421
I42
VSimpleName: readSpans
p2422
Vinsert
p2423
I43
VSimpleType: IOException
p2424
tp2425
F0.25
s(Vinsert
p2426
I42
VSimpleName: toByteArray
p2427
Vinsert
p2428
I60
VVariableDeclarationStatement
p2429
tp2430
I1
s(Vinsert
p2431
I42
VSimpleName: isEmpty
p2432
Vinsert
p2433
I43
VSimpleType: zipkin.DependencyLink
p2434
tp2435
F0.25
s(Vinsert
p2436
I42
VSimpleName: include
p2437
Vinsert
p2438
I60
VVariableDeclarationStatement
p2439
tp2440
I1
s(Vinsert
p2441
I42
VSimpleName: matchAllQuery
p2442
Vinsert
p2443
I60
VVariableDeclarationStatement
p2444
tp2445
I1
s(Vinsert
p2446
I42
VSimpleName: create
p2447
Vinsert
p2448
I42
VSimpleName: WEB_ENDPOINT
p2449
tp2450
I1
s(g876
I42
g877
Vinsert
p2451
I83
VModifier: public
p2452
tp2453
F0.25
s(Vinsert
p2454
I42
VSimpleName: writeNestedList
p2455
Vinsert
p2456
I32
VMethodInvocation
p2457
tp2458
I1
s(Vinsert
p2459
I42
VSimpleName: parseAnnotationQuery
p2460
Vinsert
p2461
I42
VSimpleName: test_annotationQuery_tagKey
p2462
tp2463
F0.25
s(Vinsert
p2464
I42
VSimpleName: getMessage
p2465
Vinsert
p2466
I42
VSimpleName: gunzip
p2467
tp2468
I1
s(g51
I42
g52
Vinsert
p2469
I42
VSimpleName: setUrl
p2470
tp2471
I1
s(g1911
I42
g1912
Vinsert
p2472
I45
VStringLiteral: "\u005cu2028 and \u005cu2029"
p2473
tp2474
I1
s(Vinsert
p2475
I42
VSimpleName: getEnvironment
p2476
Vinsert
p2477
I42
VSimpleName: ignored
p2478
tp2479
F0.5
s(g749
I42
g750
Vinsert
p2480
I42
VSimpleName: timestamp
p2481
tp2482
I3
s(g1207
I42
g1208
Vinsert
p2483
I42
VSimpleName: Random
p2484
tp2485
I1
s(g319
I42
g320
Vinsert
p2486
I42
VSimpleName: Override
p2487
tp2488
F0.25
s(g532
I42
g533
Vinsert
p2489
I27
VInfixExpression: !=
p2490
tp2491
I1
s(Vinsert
p2492
I42
VSimpleName: toMillis
p2493
Vinsert
p2494
I24
VForStatement
p2495
tp2496
I2
s(g2383
I42
g2384
Vinsert
p2497
I42
VSimpleName: extracting
p2498
tp2499
F0.25
s(g2237
I42
g2238
Vinsert
p2500
I43
VSimpleType: Request.Builder
p2501
tp2502
I3
s(g1772
I42
g1773
Vinsert
p2503
I42
VSimpleName: serviceName
p2504
tp2505
I1
s(Vinsert
p2506
I42
VSimpleName: clear
p2507
Vinsert
p2508
I42
VSimpleName: parentId
p2509
tp2510
I1
s(g466
I42
g467
Vinsert
p2511
I42
VSimpleName: awsRegion
p2512
tp2513
F0.25
s(Vinsert
p2514
I42
VSimpleName: asyncSpanConsumer
p2515
Vinsert
p2516
I78
VMarkerAnnotation
p2517
tp2518
F0.75
s(g2260
I42
g2261
Vinsert
p2519
I42
VSimpleName: Builder
p2520
tp2521
F0.25
s(g811
I42
g812
Vinsert
p2522
I42
VSimpleName: span
p2523
tp2524
I2
s(Vinsert
p2525
I42
VSimpleName: readList
p2526
Vinsert
p2527
I74
VParameterizedType: Collection<Span>
p2528
tp2529
F0.25
s(g2492
I42
g2493
Vinsert
p2530
I42
VSimpleName: ArrayList
p2531
tp2532
I2
s(g1589
I42
g1590
Vinsert
p2533
I42
VSimpleName: check
p2534
tp2535
F0.25
s(g1395
I42
g1396
Vinsert
p2536
I36
VParenthesizedExpression
p2537
tp2538
I1
s(Vinsert
p2539
I42
VSimpleName: sendSpans
p2540
Vinsert
p2541
I42
VSimpleName: ALWAYS_SAMPLE
p2542
tp2543
I1
s(g141
I42
g142
Vinsert
p2544
I74
VParameterizedType: Call<String>
p2545
tp2546
I1
s(Vinsert
p2547
I42
VSimpleName: addAll
p2548
Vinsert
p2549
I40
VQualifiedName: span.timestamp
p2550
tp2551
I2
s(g739
I42
g740
Vinsert
p2552
I42
VSimpleName: values
p2553
tp2554
I1
s(Vinsert
p2555
I42
VSimpleName: putTrace
p2556
Vinsert
p2557
I45
VStringLiteral: "db"
p2558
tp2559
I1
s(g1709
I42
g1710
Vinsert
p2560
I42
VSimpleName: String
p2561
tp2562
I1
s(g954
I42
g955
Vinsert
p2563
I32
VMethodInvocation
p2564
tp2565
I1
s(Vinsert
p2566
I42
VSimpleName: readSpan
p2567
Vinsert
p2568
I45
VStringLiteral: "  \u005c"id\u005c": \u005c"6b221d5bc9e6496c\u005c"\u005cn"
p2569
tp2570
I2
s(g106
I42
g107
Vinsert
p2571
I42
VSimpleName: required
p2572
tp2573
F0.25
s(Vinsert
p2574
I42
VSimpleName: transform
p2575
Vinsert
p2576
I83
VModifier: final
p2577
tp2578
F0.25
s(Vinsert
p2579
I42
VSimpleName: isEmpty
p2580
Vinsert
p2581
I42
VSimpleName: convert
p2582
tp2583
I1
s(Vinsert
p2584
I42
VSimpleName: annotations
p2585
Vinsert
p2586
I59
VVariableDeclarationFragment
p2587
tp2588
I3
s(Vinsert
p2589
I42
VSimpleName: fine
p2590
Vinsert
p2591
I27
VInfixExpression: ||
p2592
tp2593
I2
s(Vinsert
p2594
I42
VSimpleName: flatMap
p2595
Vinsert
p2596
I42
VSimpleName: all
p2597
tp2598
I1
s(Vinsert
p2599
I42
VSimpleName: register
p2600
Vinsert
p2601
I45
VStringLiteral: "zipkin.storage.type:mysql"
p2602
tp2603
I1
s(Vinsert
p2604
I42
VSimpleName: getGroupId
p2605
Vinsert
p2606
I42
VSimpleName: getZookeeper
p2607
tp2608
I1
s(Vinsert
p2609
I42
VSimpleName: get
p2610
Vinsert
p2611
I45
VStringLiteral: "{\u005c"foo\u005c":\u005c"bar\u005c"}"
p2612
tp2613
I1
s(Vinsert
p2614
I42
VSimpleName: encodeList
p2615
Vinsert
p2616
I42
VSimpleName: encode
p2617
tp2618
F0.25
s(Vinsert
p2619
I42
VSimpleName: collectValuesNamed
p2620
Vinsert
p2621
I39
VPrimitiveType: void
p2622
tp2623
F0.25
s(g41
I42
g42
Vinsert
p2624
I42
VSimpleName: isCanceled
p2625
tp2626
I1
s(Vinsert
p2627
I42
VSimpleName: post
p2628
Vinsert
p2629
I42
VSimpleName: response
p2630
tp2631
I1
s(Vinsert
p2632
I42
VSimpleName: getBean
p2633
Vinsert
p2634
I42
VSimpleName: canOverridesProperty_disable
p2635
tp2636
F0.25
s(Vinsert
p2637
I42
VSimpleName: newCall
p2638
Vinsert
p2639
I42
VSimpleName: callback
p2640
tp2641
F0.25
s(Vinsert
p2642
I42
VSimpleName: get
p2643
Vinsert
p2644
I74
VParameterizedType: ListenableFuture<Void>
p2645
tp2646
I2
s(Vinsert
p2647
I42
VSimpleName: forTransport
p2648
Vinsert
p2649
I43
VSimpleType: CollectorMetrics
p2650
tp2651
F0.5
s(g289
I42
g290
Vinsert
p2652
I34
VNumberLiteral: 1
p2653
tp2654
I1
s(g2475
I42
g2476
Vinsert
p2655
I42
VSimpleName: ConditionContext
p2656
tp2657
F1.25
s(Vinsert
p2658
I42
VSimpleName: getConnection
p2659
Vinsert
p2660
I21
VExpressionStatement
p2661
tp2662
I5
s(Vinsert
p2663
I42
VSimpleName: isEqualTo
p2664
Vinsert
p2665
I34
VNumberLiteral: 1005656679588439279L
p2666
tp2667
I1
s(Vinsert
p2668
I42
VSimpleName: get
p2669
Vinsert
p2670
I42
VSimpleName: keyToTables
p2671
tp2672
I1
s(g962
I42
g963
Vinsert
p2673
I43
VSimpleType: QueryRequest.Builder
p2674
tp2675
I1
s(g254
I42
g255
Vinsert
p2676
I74
VParameterizedType: Collection<Aggregation>
p2677
tp2678
I1
s(Vinsert
p2679
I42
VSimpleName: utf8SizeInBytes
p2680
Vinsert
p2681
I14
VClassInstanceCreation
p2682
tp2683
I1
s(Vinsert
p2684
I42
VSimpleName: writeSpans
p2685
Vinsert
p2686
I42
VSimpleName: Exception
p2687
tp2688
F0.5
s(Vinsert
p2689
I42
VSimpleName: executor
p2690
Vinsert
p2691
I43
VSimpleType: JDBCStorage.Builder
p2692
tp2693
I1
s(Vinsert
p2694
I42
VSimpleName: close
p2695
Vinsert
p2696
I42
VSimpleName: CassandraStorage
p2697
tp2698
I1
s(Vinsert
p2699
I42
VSimpleName: httpUrl
p2700
Vinsert
p2701
I42
VSimpleName: client
p2702
tp2703
I1
s(Vinsert
p2704
I42
VSimpleName: localhost
p2705
Vinsert
p2706
I42
VSimpleName: SslClient
p2707
tp2708
I2
s(g699
I42
g700
Vinsert
p2709
I42
VSimpleName: Callback
p2710
tp2711
F0.25
s(Vinsert
p2712
I42
VSimpleName: setResponseCode
p2713
Vinsert
p2714
I42
VSimpleName: body
p2715
tp2716
F0.25
s(Vinsert
p2717
I42
VSimpleName: isEmpty
p2718
Vinsert
p2719
I40
VQualifiedName: Codec.JSON
p2720
tp2721
I6
s(Vinsert
p2722
I42
VSimpleName: create
p2723
Vinsert
p2724
I42
VSimpleName: HttpURLConnection
p2725
tp2726
I4
s(Vinsert
p2727
I42
VSimpleName: singleton
p2728
Vinsert
p2729
I43
VSimpleType: Exception
p2730
tp2731
F0.25
s(Vinsert
p2732
I42
VSimpleName: getMetadata
p2733
Vinsert
p2734
I42
VSimpleName: session
p2735
tp2736
I2
s(g1298
I42
g1299
Vinsert
p2737
I42
VSimpleName: annotationTimestamp
p2738
tp2739
I1
s(Vinsert
p2740
I42
VSimpleName: isEmpty
p2741
Vinsert
p2742
I42
VSimpleName: Collection
p2743
tp2744
F0.25
s(Vinsert
p2745
I42
VSimpleName: get
p2746
Vinsert
p2747
I83
VModifier: final
p2748
tp2749
F0.5
s(Vinsert
p2750
I42
VSimpleName: create
p2751
Vinsert
p2752
I42
VSimpleName: SamplingSpanStoreConsumer
p2753
tp2754
I1
s(Vinsert
p2755
I42
VSimpleName: legacyReadsEnabled
p2756
Vinsert
p2757
I31
VMethodDeclaration
p2758
tp2759
F0.25
s(g1607
I42
g1608
Vinsert
p2760
I43
VSimpleType: Span
p2761
tp2762
I2
s(Vinsert
p2763
I42
VSimpleName: datasource
p2764
Vinsert
p2765
I43
VSimpleType: JDBCStorage
p2766
tp2767
F0.5
s(g669
I42
g670
Vinsert
p2768
I42
VSimpleName: bytes
p2769
tp2770
I3
s(Vinsert
p2771
I42
VSimpleName: ok
p2772
Vinsert
p2773
I60
VVariableDeclarationStatement
p2774
tp2775
I1
s(Vinsert
p2776
I42
VSimpleName: sizeInBytes
p2777
Vinsert
p2778
I78
VMarkerAnnotation
p2779
tp2780
F0.5
s(Vinsert
p2781
I42
VSimpleName: equals
p2782
Vinsert
p2783
I42
VSimpleName: Endpoint
p2784
tp2785
F2.25
s(g1085
I42
g1086
Vinsert
p2786
I27
VInfixExpression: +
p2787
tp2788
F0.25
s(Vinsert
p2789
I42
VSimpleName: localEndpoint
p2790
Vinsert
p2791
I42
VSimpleName: nextLocalEndpoint
p2792
tp2793
I2
s(Vinsert
p2794
I42
VSimpleName: get
p2795
Vinsert
p2796
I42
VSimpleName: span
p2797
tp2798
I5
s(g46
I42
g47
Vinsert
p2799
I42
VSimpleName: storeSpans
p2800
tp2801
I2
s(Vinsert
p2802
I42
VSimpleName: shutdown
p2803
Vinsert
p2804
I29
VJavadoc
p2805
tp2806
F0.25
s(g156
I42
g157
Vinsert
p2807
I31
VMethodDeclaration
p2808
tp2809
F0.25
s(Vinsert
p2810
I42
VSimpleName: newFixedThreadPool
p2811
Vinsert
p2812
I42
VSimpleName: Executor
p2813
tp2814
I1
s(g557
I42
g558
Vinsert
p2815
I86
VLambdaExpression
p2816
tp2817
I1
s(Vinsert
p2818
I42
VSimpleName: getTimeZone
p2819
Vinsert
p2820
I32
VMethodInvocation
p2821
tp2822
I2
s(Vinsert
p2823
I42
VSimpleName: format
p2824
Vinsert
p2825
I42
VSimpleName: i
p2826
tp2827
I4
s(Vinsert
p2828
I42
VSimpleName: getBytes
p2829
Vinsert
p2830
I14
VClassInstanceCreation
p2831
tp2832
I2
s(Vinsert
p2833
I42
VSimpleName: toLowerHex
p2834
Vinsert
p2835
I43
VSimpleType: List
p2836
tp2837
F0.25
s(Vinsert
p2838
I42
VSimpleName: duration
p2839
Vinsert
p2840
I42
VSimpleName: nextString
p2841
tp2842
I1
s(Vinsert
p2843
I42
VSimpleName: header
p2844
Vinsert
p2845
I42
VSimpleName: isNull
p2846
tp2847
I1
s(Vinsert
p2848
I42
VSimpleName: singleton
p2849
Vinsert
p2850
I42
VSimpleName: traceIdUDT
p2851
tp2852
I1
s(g2459
I42
g2460
Vinsert
p2853
I42
VSimpleName: QueryRequest
p2854
tp2855
I1
s(g1826
I42
g1827
Vinsert
p2856
I42
VSimpleName: command
p2857
tp2858
I1
s(g1806
I42
g1807
Vinsert
p2859
I42
VSimpleName: closeThings
p2860
tp2861
F0.25
s(g96
I42
g97
Vinsert
p2862
I42
VSimpleName: Override
p2863
tp2864
F0.25
s(Vinsert
p2865
I42
VSimpleName: getExecutionInfo
p2866
Vinsert
p2867
I38
VPrefixExpression: --
p2868
tp2869
I1
s(Vinsert
p2870
I42
VSimpleName: getDays
p2871
Vinsert
p2872
I21
VExpressionStatement
p2873
tp2874
I1
s(Vinsert
p2875
I42
VSimpleName: mysqlUrlFromEnv
p2876
Vinsert
p2877
I42
VSimpleName: spanStore
p2878
tp2879
F0.25
s(Vinsert
p2880
I42
VSimpleName: check
p2881
Vinsert
p2882
I32
VMethodInvocation
p2883
tp2884
I5
s(g547
I42
g548
Vinsert
p2885
I34
VNumberLiteral: 1
p2886
tp2887
I1
s(g121
I42
g122
Vinsert
p2888
I32
VMethodInvocation
p2889
tp2890
I3
s(Vinsert
p2891
I42
VSimpleName: remove
p2892
Vinsert
p2893
I41
VReturnStatement
p2894
tp2895
I1
s(Vinsert
p2896
I42
VSimpleName: serverSpanThreadBinder
p2897
Vinsert
p2898
I42
VSimpleName: brave
p2899
tp2900
I1
s(Vinsert
p2901
I42
VSimpleName: get
p2902
Vinsert
p2903
I42
VSimpleName: Endpoint
p2904
tp2905
F0.25
s(g2642
I42
g2643
Vinsert
p2906
I42
VSimpleName: Void
p2907
tp2908
I4
s(Vinsert
p2909
I42
VSimpleName: addBinaryAnnotation
p2910
Vinsert
p2911
I42
VSimpleName: ep
p2912
tp2913
I1
s(g1772
I42
g1773
Vinsert
p2914
I40
VQualifiedName: a.value
p2915
tp2916
I1
s(g2619
I42
g2620
Vinsert
p2917
I43
VSimpleType: String
p2918
tp2919
I2
s(Vinsert
p2920
I42
VSimpleName: tryNextHost
p2921
Vinsert
p2922
I42
VSimpleName: nbRetry
p2923
tp2924
F0.25
s(Vinsert
p2925
I42
VSimpleName: build
p2926
Vinsert
p2927
I42
VSimpleName: destroyMethod
p2928
tp2929
F0.5
s(g2373
I42
g2374
Vinsert
p2930
I38
VPrefixExpression: !
p2931
tp2932
I1
s(g851
I42
g852
Vinsert
p2933
I40
VQualifiedName: config.indexTtl
p2934
tp2935
F0.25
s(Vinsert
p2936
I42
VSimpleName: getShort
p2937
Vinsert
p2938
I42
VSimpleName: ipv6
p2939
tp2940
I1
s(g762
I42
g763
Vinsert
p2941
I86
VLambdaExpression
p2942
tp2943
I1
s(Vinsert
p2944
I42
VSimpleName: getRawTrace
p2945
Vinsert
p2946
I42
VSimpleName: CallbackListenableFuture
p2947
tp2948
I2
s(Vinsert
p2949
I42
VSimpleName: charAt
p2950
Vinsert
p2951
I34
VNumberLiteral: 0
p2952
tp2953
I1
s(Vinsert
p2954
I42
VSimpleName: fine
p2955
Vinsert
p2956
I50
VSwitchStatement
p2957
tp2958
I1
s(Vinsert
p2959
I42
VSimpleName: newBuilder
p2960
Vinsert
p2961
I59
VVariableDeclarationFragment
p2962
tp2963
I8
s(g856
I42
g857
Vinsert
p2964
I32
VMethodInvocation
p2965
tp2966
I2
s(Vinsert
p2967
I42
VSimpleName: create
p2968
Vinsert
p2969
I33
VNullLiteral
p2970
tp2971
I1
s(Vinsert
p2972
I42
VSimpleName: containsExactly
p2973
Vinsert
p2974
I42
VSimpleName: containsEntry
p2975
tp2976
I1
s(Vinsert
p2977
I42
VSimpleName: compareTo
p2978
Vinsert
p2979
I40
VQualifiedName: right._2
p2980
tp2981
I1
s(g101
I42
g102
Vinsert
p2982
I80
VMemberValuePair
p2983
tp2984
F0.5
s(g81
I42
g82
Vinsert
p2985
I45
VStringLiteral: ""
p2986
tp2987
I1
s(g357
I42
g358
Vinsert
p2988
I34
VNumberLiteral: 24
p2989
tp2990
I1
s(Vinsert
p2991
I42
VSimpleName: url
p2992
Vinsert
p2993
I43
VSimpleType: SearchCallFactory
p2994
tp2995
I2
s(Vinsert
p2996
I42
VSimpleName: equals
p2997
Vinsert
p2998
I43
VSimpleType: List
p2999
tp3000
F0.25
s(g2704
I42
g2705
Vinsert
p3001
I60
VVariableDeclarationStatement
p3002
tp3003
I1
s(Vinsert
p3004
I42
VSimpleName: create
p3005
Vinsert
p3006
I42
VSimpleName: cassandraStorage
p3007
tp3008
F0.5
s(Vinsert
p3009
I42
VSimpleName: spanStore
p3010
Vinsert
p3011
I83
VModifier: protected
p3012
tp3013
F0.25
s(g2000
I42
g2001
Vinsert
p3014
I42
VSimpleName: traceIdHi
p3015
tp3016
I2
s(Vinsert
p3017
I42
VSimpleName: release
p3018
Vinsert
p3019
I32
VMethodInvocation
p3020
tp3021
I2
s(Vinsert
p3022
I42
VSimpleName: getCluster
p3023
Vinsert
p3024
I27
VInfixExpression: ==
p3025
tp3026
I1
s(g76
I42
g77
Vinsert
p3027
I42
VSimpleName: sizeInBytes
p3028
tp3029
F0.25
s(Vinsert
p3030
I42
VSimpleName: clear
p3031
Vinsert
p3032
I42
VSimpleName: InMemorySpanStoreTest
p3033
tp3034
F0.25
s(g532
I42
g533
Vinsert
p3035
I42
VSimpleName: startNewSpan
p3036
tp3037
I1
s(g2273
I42
g2274
Vinsert
p3038
I42
VSimpleName: Iterable
p3039
tp3040
F0.25
s(Vinsert
p3041
I42
VSimpleName: executeAsync
p3042
Vinsert
p3043
I40
VQualifiedName: InsertServiceSpan.Factory
p3044
tp3045
I2
s(Vinsert
p3046
I42
VSimpleName: info
p3047
Vinsert
p3048
I42
VSimpleName: message
p3049
tp3050
I1
s(Vinsert
p3051
I42
VSimpleName: isEmpty
p3052
Vinsert
p3053
I52
VThisExpression
p3054
tp3055
F4.25
s(g352
I42
g353
Vinsert
p3056
I14
VClassInstanceCreation
p3057
tp3058
I2
s(Vinsert
p3059
I42
VSimpleName: toBuilder
p3060
Vinsert
p3061
I42
VSimpleName: build
p3062
tp3063
I1
s(Vinsert
p3064
I42
VSimpleName: hasSize
p3065
Vinsert
p3066
I42
VSimpleName: assertThat
p3067
tp3068
I1
s(g1095
I42
g1096
Vinsert
p3069
I5
VArrayType: byte[]
p3070
tp3071
F0.25
s(Vinsert
p3072
I42
VSimpleName: localTracer
p3073
Vinsert
p3074
I42
VSimpleName: spanStore
p3075
tp3076
F0.25
s(g1704
I42
g1705
Vinsert
p3077
I42
VSimpleName: BigInteger
p3078
tp3079
I2
s(g1790
I42
g1791
Vinsert
p3080
I16
VConditionalExpression
p3081
tp3082
I1
s(Vinsert
p3083
I42
VSimpleName: findAll
p3084
Vinsert
p3085
I42
VSimpleName: reader
p3086
tp3087
I1
s(g1633
I42
g1634
Vinsert
p3088
I42
VSimpleName: serviceName
p3089
tp3090
F1.25
s(g1192
I42
g1193
Vinsert
p3091
I42
VSimpleName: bytes
p3092
tp3093
F0.25
s(Vinsert
p3094
I42
VSimpleName: readList
p3095
Vinsert
p3096
I43
VSimpleType: DependencyLink
p3097
tp3098
F0.25
s(g1410
I42
g1411
Vinsert
p3099
I8
VBlock
p3100
tp3101
I1
s(g2802
I42
g2803
Vinsert
p3102
I83
VModifier: public
p3103
tp3104
F0.25
s(Vinsert
p3105
I42
VSimpleName: accept
p3106
Vinsert
p3107
I42
VSimpleName: codec
p3108
tp3109
F0.25
s(Vinsert
p3110
I42
VSimpleName: spanStore
p3111
Vinsert
p3112
I21
VExpressionStatement
p3113
tp3114
I7
s(Vinsert
p3115
I42
VSimpleName: getAggregations
p3116
Vinsert
p3117
I42
VSimpleName: when
p3118
tp3119
I1
s(Vinsert
p3120
I42
VSimpleName: get
p3121
Vinsert
p3122
I42
VSimpleName: StrictTraceIdFalseTest
p3123
tp3124
F0.25
s(Vinsert
p3125
I42
VSimpleName: charAt
p3126
Vinsert
p3127
I2
VArrayAccess
p3128
tp3129
I1
s(g1866
I42
g1867
Vinsert
p3130
I42
VSimpleName: result
p3131
tp3132
I2
s(g2870
I42
g2871
Vinsert
p3133
I42
VSimpleName: Util
p3134
tp3135
I1
s(Vinsert
p3136
I42
VSimpleName: getByName
p3137
Vinsert
p3138
I42
VSimpleName: UnknownHostException
p3139
tp3140
F0.25
s(g1474
I42
g1475
Vinsert
p3141
I42
VSimpleName: Long
p3142
tp3143
I1
s(g324
I42
g325
Vinsert
p3144
I32
VMethodInvocation
p3145
tp3146
I12
s(g151
I42
g152
Vinsert
p3147
I83
VModifier: protected
p3148
tp3149
F0.5
s(Vinsert
p3150
I42
VSimpleName: isDefined
p3151
Vinsert
p3152
I8
VBlock
p3153
tp3154
I1
s(Vinsert
p3155
I42
VSimpleName: execute
p3156
Vinsert
p3157
I78
VMarkerAnnotation
p3158
tp3159
F0.25
s(Vinsert
p3160
I42
VSimpleName: catchAll
p3161
Vinsert
p3162
I42
VSimpleName: apply
p3163
tp3164
F0.25
s(g2833
I42
g2834
Vinsert
p3165
I42
VSimpleName: Span
p3166
tp3167
F0.25
s(Vinsert
p3168
I42
VSimpleName: getTable
p3169
Vinsert
p3170
I60
VVariableDeclarationStatement
p3171
tp3172
I1
s(g3017
I42
g3018
Vinsert
p3173
I14
VClassInstanceCreation
p3174
tp3175
I1
s(Vinsert
p3176
I42
VSimpleName: value
p3177
Vinsert
p3178
I27
VInfixExpression: ==
p3179
tp3180
I2
s(Vinsert
p3181
I42
VSimpleName: create
p3182
Vinsert
p3183
I42
VSimpleName: links
p3184
tp3185
F1.25
s(Vinsert
p3186
I42
VSimpleName: of
p3187
Vinsert
p3188
I31
VMethodDeclaration
p3189
tp3190
F0.25
s(g2072
I42
g2073
Vinsert
p3191
I45
VStringLiteral: ",\u005c"traceId\u005c":"
p3192
tp3193
I1
s(Vinsert
p3194
I42
VSimpleName: readSpan
p3195
Vinsert
p3196
I45
VStringLiteral: "    }\u005cn"
p3197
tp3198
I2
s(Vinsert
p3199
I42
VSimpleName: filter
p3200
Vinsert
p3201
I40
VQualifiedName: java.util.function.Consumer
p3202
tp3203
F0.25
s(g914
I42
g915
Vinsert
p3204
I40
VQualifiedName: value.errorCount
p3205
tp3206
I1
s(Vinsert
p3207
I42
VSimpleName: size
p3208
Vinsert
p3209
I25
VIfStatement
p3210
tp3211
I1
s(Vinsert
p3212
I42
VSimpleName: write
p3213
Vinsert
p3214
I42
VSimpleName: Span2
p3215
tp3216
F0.25
s(Vinsert
p3217
I42
VSimpleName: endpoint
p3218
Vinsert
p3219
I49
VSwitchCase
p3220
tp3221
I1
s(Vinsert
p3222
I42
VSimpleName: add
p3223
Vinsert
p3224
I42
VSimpleName: getActualMaximum
p3225
tp3226
I1
s(g1772
I42
g1773
Vinsert
p3227
I27
VInfixExpression: !=
p3228
tp3229
I1
s(g1123
I42
g1124
Vinsert
p3230
I31
VMethodDeclaration
p3231
tp3232
F2.0
s(Vinsert
p3233
I42
VSimpleName: enqueue
p3234
Vinsert
p3235
I42
VSimpleName: Void
p3236
tp3237
F0.25
s(g1448
I42
g1449
Vinsert
p3238
I32
VMethodInvocation
p3239
tp3240
I2
s(g1108
I42
g1109
Vinsert
p3241
I42
VSimpleName: asList
p3242
tp3243
I1
s(g992
I42
g993
Vinsert
p3244
I21
VExpressionStatement
p3245
tp3246
I8
s(g319
I42
g320
Vinsert
p3247
I41
VReturnStatement
p3248
tp3249
I1
s(Vinsert
p3250
I42
VSimpleName: startsWith
p3251
Vinsert
p3252
I27
VInfixExpression: !=
p3253
tp3254
I1
s(g954
I42
g955
Vinsert
p3255
I27
VInfixExpression: +
p3256
tp3257
I1
s(Vinsert
p3258
I42
VSimpleName: duration
p3259
Vinsert
p3260
I23
VFieldDeclaration
p3261
tp3262
F0.25
s(Vinsert
p3263
I42
VSimpleName: sortedList
p3264
Vinsert
p3265
I42
VSimpleName: List
p3266
tp3267
F0.25
s(Vinsert
p3268
I42
VSimpleName: properties
p3269
Vinsert
p3270
I42
VSimpleName: SpringApplicationBuilder
p3271
tp3272
I2
s(g1846
I42
g1847
Vinsert
p3273
I42
VSimpleName: endMillis
p3274
tp3275
I1
s(g977
I42
g978
Vinsert
p3276
I27
VInfixExpression: *
p3277
tp3278
F0.25
s(g816
I42
g817
Vinsert
p3279
I43
VSimpleType: StringBuilder
p3280
tp3281
I2
s(g2224
I42
g2225
Vinsert
p3282
I42
VSimpleName: addCallback
p3283
tp3284
I1
s(g1566
I42
g1567
Vinsert
p3285
I8
VBlock
p3286
tp3287
I1
s(Vinsert
p3288
I42
VSimpleName: isEqualTo
p3289
Vinsert
p3290
I42
VSimpleName: writeSpan
p3291
tp3292
I2
s(g1790
I42
g1791
Vinsert
p3293
I42
VSimpleName: legacyProvider
p3294
tp3295
I2
s(Vinsert
p3296
I42
VSimpleName: newCall
p3297
Vinsert
p3298
I21
VExpressionStatement
p3299
tp3300
I3
s(g352
I42
g353
Vinsert
p3301
I42
VSimpleName: expected
p3302
tp3303
I1
s(g2891
I42
g2892
Vinsert
p3304
I36
VParenthesizedExpression
p3305
tp3306
I1
s(Vinsert
p3307
I42
VSimpleName: findSpans
p3308
Vinsert
p3309
I42
VSimpleName: client
p3310
tp3311
I1
s(g3046
I42
g3047
Vinsert
p3312
I59
VVariableDeclarationFragment
p3313
tp3314
I1
s(g1995
I42
g1996
Vinsert
p3315
I8
VBlock
p3316
tp3317
I2
s(Vinsert
p3318
I42
VSimpleName: builder
p3319
Vinsert
p3320
I42
VSimpleName: allocate
p3321
tp3322
I1
s(g56
I42
g57
Vinsert
p3323
I42
VSimpleName: HttpV2Storage
p3324
tp3325
I2
s(g1
I42
g2
Vinsert
p3326
I42
VSimpleName: annotations
p3327
tp3328
I1
s(g357
I42
g358
Vinsert
p3329
I34
VNumberLiteral: 8080
p3330
tp3331
I1
s(g1831
I42
g1832
Vinsert
p3332
I42
VSimpleName: URI
p3333
tp3334
I1
s(Vinsert
p3335
I42
VSimpleName: getName
p3336
Vinsert
p3337
I42
VSimpleName: logger
p3338
tp3339
I1
s(Vinsert
p3340
I42
VSimpleName: header
p3341
Vinsert
p3342
I43
VSimpleType: MockResponse
p3343
tp3344
I1
s(g3125
I42
g3126
Vinsert
p3345
I21
VExpressionStatement
p3346
tp3347
I1
s(Vinsert
p3348
I42
VSimpleName: cluster
p3349
Vinsert
p3350
I43
VSimpleType: ElasticsearchConfig
p3351
tp3352
I1
s(Vinsert
p3353
I42
VSimpleName: expect
p3354
Vinsert
p3355
I42
VSimpleName: json
p3356
tp3357
F0.25
s(g2365
I42
g2366
Vinsert
p3358
I42
VSimpleName: setException
p3359
tp3360
F0.25
s(g3168
I42
g3169
Vinsert
p3361
I32
VMethodInvocation
p3362
tp3363
I3
s(g734
I42
g735
Vinsert
p3364
I11
VCastExpression
p3365
tp3366
I1
s(Vinsert
p3367
I42
VSimpleName: start
p3368
Vinsert
p3369
I42
VSimpleName: MockWebServer
p3370
tp3371
I2
s(Vinsert
p3372
I42
VSimpleName: addAnnotation
p3373
Vinsert
p3374
I34
VNumberLiteral: 1
p3375
tp3376
I1
s(g2393
I42
g2394
Vinsert
p3377
I60
VVariableDeclarationStatement
p3378
tp3379
I1
s(Vinsert
p3380
I42
VSimpleName: transform
p3381
Vinsert
p3382
I43
VSimpleType: String
p3383
tp3384
F0.5
s(g2865
I42
g2866
Vinsert
p3385
I10
VBreakStatement
p3386
tp3387
I1
s(Vinsert
p3388
I42
VSimpleName: flatMap
p3389
Vinsert
p3390
I52
VThisExpression
p3391
tp3392
I4
s(Vinsert
p3393
I42
VSimpleName: inputStream
p3394
Vinsert
p3395
I42
VSimpleName: writeObject
p3396
tp3397
I2
s(Vinsert
p3398
I42
VSimpleName: when
p3399
Vinsert
p3400
I43
VSimpleType: Callback
p3401
tp3402
F0.25
s(g2085
I42
g2086
Vinsert
p3403
I8
VBlock
p3404
tp3405
I1
s(g924
I42
g925
Vinsert
p3406
I59
VVariableDeclarationFragment
p3407
tp3408
I10
s(g1995
I42
g1996
Vinsert
p3409
I42
VSimpleName: getRawTrace_sync_wrapsIOE
p3410
tp3411
F0.25
s(Vinsert
p3412
I42
VSimpleName: getProperty
p3413
Vinsert
p3414
I43
VSimpleType: Properties
p3415
tp3416
I1
s(Vinsert
p3417
I42
VSimpleName: dateSeparator
p3418
Vinsert
p3419
I39
VPrimitiveType: void
p3420
tp3421
F0.25
s(Vinsert
p3422
I42
VSimpleName: csService
p3423
Vinsert
p3424
I43
VSimpleType: DependencyLinkSpan
p3425
tp3426
I1
s(Vinsert
p3427
I42
VSimpleName: get
p3428
Vinsert
p3429
I53
VThrowStatement
p3430
tp3431
F1.25
s(g2174
I42
g2175
Vinsert
p3432
I43
VSimpleType: ObjectStreamException
p3433
tp3434
F0.25
s(g3233
I42
g3234
Vinsert
p3435
I43
VSimpleType: Void
p3436
tp3437
F0.25
s(Vinsert
p3438
I42
VSimpleName: incrementAndGet
p3439
Vinsert
p3440
I83
VModifier: protected
p3441
tp3442
F0.25
s(Vinsert
p3443
I42
VSimpleName: encodedPath
p3444
Vinsert
p3445
I42
VSimpleName: Span2JsonDecoder
p3446
tp3447
F0.25
s(g56
I42
g57
Vinsert
p3448
I42
VSimpleName: server
p3449
tp3450
I6
s(g2224
I42
g2225
Vinsert
p3451
I42
VSimpleName: List
p3452
tp3453
F1.5
s(Vinsert
p3454
I42
VSimpleName: unmodifiableSet
p3455
Vinsert
p3456
I66
VTextElement: Zipkin Span Storage implementations should not expect users to search by core annotations.
p3457
tp3458
I1
s(g111
I42
g112
Vinsert
p3459
I42
VSimpleName: Cluster
p3460
tp3461
I1
s(g1002
I42
g1003
Vinsert
p3462
I42
VSimpleName: empty
p3463
tp3464
I1
s(g762
I42
g763
Vinsert
p3465
I59
VVariableDeclarationFragment
p3466
tp3467
I2
s(g161
I42
g162
Vinsert
p3468
I42
VSimpleName: zipkin
p3469
tp3470
I1
s(g1987
I42
g1988
Vinsert
p3471
I42
VSimpleName: Long
p3472
tp3473
I3
s(Vinsert
p3474
I42
VSimpleName: toMillis
p3475
Vinsert
p3476
I42
VSimpleName: Session
p3477
tp3478
I2
s(g400
I42
g401
Vinsert
p3479
I45
VStringLiteral: "        \u005c"port\u005c": 65535\u005cn"
p3480
tp3481
I1
s(g2291
I42
g2292
Vinsert
p3482
I42
VSimpleName: traceIdSampler
p3483
tp3484
F0.25
s(Vinsert
p3485
I42
VSimpleName: replaceAll
p3486
Vinsert
p3487
I27
VInfixExpression: +
p3488
tp3489
I1
s(g1574
I42
g1575
Vinsert
p3490
I59
VVariableDeclarationFragment
p3491
tp3492
I1
s(Vinsert
p3493
I42
VSimpleName: serviceName
p3494
Vinsert
p3495
I42
VSimpleName: newBuilder
p3496
tp3497
I1
s(g304
I42
g305
Vinsert
p3498
I11
VCastExpression
p3499
tp3500
I1
s(g1372
I42
g1373
Vinsert
p3501
I42
VSimpleName: brave
p3502
tp3503
I1
s(g1959
I42
g1960
Vinsert
p3504
I42
VSimpleName: context
p3505
tp3506
I10
s(g436
I42
g437
Vinsert
p3507
I33
VNullLiteral
p3508
tp3509
I1
s(Vinsert
p3510
I42
VSimpleName: length
p3511
Vinsert
p3512
I42
VSimpleName: UTF_8
p3513
tp3514
I1
s(Vinsert
p3515
I42
VSimpleName: nextString
p3516
Vinsert
p3517
I49
VSwitchCase
p3518
tp3519
I1
s(Vinsert
p3520
I42
VSimpleName: ip
p3521
Vinsert
p3522
I83
VModifier: static
p3523
tp3524
I1
s(Vinsert
p3525
I42
VSimpleName: session
p3526
Vinsert
p3527
I32
VMethodInvocation
p3528
tp3529
I4
s(g2566
I42
g2567
Vinsert
p3530
I45
VStringLiteral: "  \u005c"traceId\u005c": \u005c"48485A3953BB6124\u005c",\u005cn"
p3531
tp3532
I2
s(Vinsert
p3533
I42
VSimpleName: sizeInBytes
p3534
Vinsert
p3535
I42
VSimpleName: DEPENDENCY_LINKS_ADAPTER
p3536
tp3537
I1
s(g3263
I42
g3264
Vinsert
p3538
I74
VParameterizedType: List<Long>
p3539
tp3540
F0.25
s(Vinsert
p3541
I42
VSimpleName: maybeExecuteAsync
p3542
Vinsert
p3543
I42
VSimpleName: BoundStatement
p3544
tp3545
F0.25
s(g1385
I42
g1386
Vinsert
p3546
I43
VSimpleType: ArrayList
p3547
tp3548
I4
s(g1017
I42
g1018
Vinsert
p3549
I42
VSimpleName: apply
p3550
tp3551
F0.25
s(Vinsert
p3552
I42
VSimpleName: getParameterValues
p3553
Vinsert
p3554
I5
VArrayType: String[]
p3555
tp3556
I1
s(g2763
I42
g2764
Vinsert
p3557
I43
VSimpleType: JDBCStorage.Builder
p3558
tp3559
I2
s(Vinsert
p3560
I42
VSimpleName: create
p3561
Vinsert
p3562
I43
VSimpleType: Void
p3563
tp3564
F1.5
s(Vinsert
p3565
I42
VSimpleName: singleton
p3566
Vinsert
p3567
I74
VParameterizedType: List<Span>
p3568
tp3569
I1
s(g881
I42
g882
Vinsert
p3570
I45
VStringLiteral: "callCount"
p3571
tp3572
I1
s(g1688
I42
g1689
Vinsert
p3573
I60
VVariableDeclarationStatement
p3574
tp3575
I1
s(g1040
I42
g1041
Vinsert
p3576
I74
VParameterizedType: JsonReaderAdapter<T>
p3577
tp3578
F0.25
s(g2712
I42
g2713
Vinsert
p3579
I42
VSimpleName: HttpFailure
p3580
tp3581
I1
s(g1372
I42
g1373
Vinsert
p3582
I8
VBlock
p3583
tp3584
I1
s(g694
I42
g695
Vinsert
p3585
I42
VSimpleName: key
p3586
tp3587
I1
s(Vinsert
p3588
I42
VSimpleName: debug
p3589
Vinsert
p3590
I34
VNumberLiteral: 0.0f
p3591
tp3592
I1
s(g582
I42
g583
Vinsert
p3593
I45
VStringLiteral: ":service_name"
p3594
tp3595
I1
s(g679
I42
g680
Vinsert
p3596
I21
VExpressionStatement
p3597
tp3598
I1
s(Vinsert
p3599
I42
VSimpleName: hosts
p3600
Vinsert
p3601
I29
VJavadoc
p3602
tp3603
F0.25
s(g2755
I42
g2756
Vinsert
p3604
I32
VMethodInvocation
p3605
tp3606
I1
s(Vinsert
p3607
I42
VSimpleName: producerConfigWithDefaultEncoder
p3608
Vinsert
p3609
I14
VClassInstanceCreation
p3610
tp3611
I2
s(g2594
I42
g2595
Vinsert
p3612
I43
VSimpleType: AutoValue_SelectTraceIdsFromSpan_Input
p3613
tp3614
I1
s(g2776
I42
g2777
Vinsert
p3615
I83
VModifier: public
p3616
tp3617
F0.5
s(Vinsert
p3618
I42
VSimpleName: await
p3619
Vinsert
p3620
I21
VExpressionStatement
p3621
tp3622
I1
s(Vinsert
p3623
I42
VSimpleName: builder
p3624
Vinsert
p3625
I42
VSimpleName: toEndpoint
p3626
tp3627
F0.25
s(Vinsert
p3628
I42
VSimpleName: writeAnnotation
p3629
Vinsert
p3630
I42
VSimpleName: JsonCodec
p3631
tp3632
I1
s(g2880
I42
g2881
Vinsert
p3633
I31
VMethodDeclaration
p3634
tp3635
F0.75
s(Vinsert
p3636
I42
VSimpleName: collect
p3637
Vinsert
p3638
I42
VSimpleName: i
p3639
tp3640
I1
s(g1448
I42
g1449
Vinsert
p3641
I42
VSimpleName: debug
p3642
tp3643
I1
s(Vinsert
p3644
I42
VSimpleName: port
p3645
Vinsert
p3646
I43
VSimpleType: zipkin.internal.v2.Endpoint.Builder
p3647
tp3648
I1
s(Vinsert
p3649
I42
VSimpleName: equals
p3650
Vinsert
p3651
I42
VSimpleName: equals
p3652
tp3653
F0.25
s(Vinsert
p3654
I42
VSimpleName: size
p3655
Vinsert
p3656
I2
VArrayAccess
p3657
tp3658
I1
s(g1612
I42
g1613
Vinsert
p3659
I45
VStringLiteral: "c"
p3660
tp3661
I1
s(Vinsert
p3662
I42
VSimpleName: toString
p3663
Vinsert
p3664
I42
VSimpleName: i
p3665
tp3666
I1
s(Vinsert
p3667
I42
VSimpleName: get
p3668
Vinsert
p3669
I40
VQualifiedName: zipkin.Span
p3670
tp3671
F0.5
s(g1484
I42
g1485
Vinsert
p3672
I42
VSimpleName: spanStore
p3673
tp3674
I1
s(Vinsert
p3675
I42
VSimpleName: setLong
p3676
Vinsert
p3677
I60
VVariableDeclarationStatement
p3678
tp3679
I2
s(g2278
I42
g2279
Vinsert
p3680
I31
VMethodDeclaration
p3681
tp3682
F0.25
s(Vinsert
p3683
I42
VSimpleName: register
p3684
Vinsert
p3685
I42
VSimpleName: ui_enabledByDefault
p3686
tp3687
F0.25
s(Vinsert
p3688
I42
VSimpleName: getSpanNames
p3689
Vinsert
p3690
I42
VSimpleName: CallbackCaptor
p3691
tp3692
I2
s(g2459
I42
g2460
Vinsert
p3693
I59
VVariableDeclarationFragment
p3694
tp3695
I1
s(g2909
I42
g2910
Vinsert
p3696
I42
VSimpleName: addBinaryAnnotation
p3697
tp3698
I3
s(g3296
I42
g3297
Vinsert
p3699
I39
VPrimitiveType: void
p3700
tp3701
F0.25
s(Vinsert
p3702
I42
VSimpleName: format
p3703
Vinsert
p3704
I42
VSimpleName: pkgPath
p3705
tp3706
I1
s(Vinsert
p3707
I42
VSimpleName: getPort
p3708
Vinsert
p3709
I43
VSimpleType: Endpoint
p3710
tp3711
I2
s(Vinsert
p3712
I42
VSimpleName: builder
p3713
Vinsert
p3714
I43
VSimpleType: KafkaCollector.Builder
p3715
tp3716
F1.5
s(g1628
I42
g1629
Vinsert
p3717
I42
VSimpleName: Bean
p3718
tp3719
F0.25
s(Vinsert
p3720
I42
VSimpleName: ok
p3721
Vinsert
p3722
I11
VCastExpression
p3723
tp3724
F0.25
s(Vinsert
p3725
I42
VSimpleName: timestamp
p3726
Vinsert
p3727
I27
VInfixExpression: ==
p3728
tp3729
I2
s(Vinsert
p3730
I42
VSimpleName: getMessage
p3731
Vinsert
p3732
I42
VSimpleName: SQLException
p3733
tp3734
I1
s(Vinsert
p3735
I42
VSimpleName: format
p3736
Vinsert
p3737
I42
VSimpleName: traceIdHigh
p3738
tp3739
F0.25
s(Vinsert
p3740
I42
VSimpleName: isNotNegative
p3741
Vinsert
p3742
I83
VModifier: public
p3743
tp3744
F0.25
s(Vinsert
p3745
I42
VSimpleName: spanConsumer
p3746
Vinsert
p3747
I83
VModifier: static
p3748
tp3749
F0.5
s(Vinsert
p3750
I42
VSimpleName: onError
p3751
Vinsert
p3752
I42
VSimpleName: spans
p3753
tp3754
I1
s(g2090
I42
g2091
Vinsert
p3755
I59
VVariableDeclarationFragment
p3756
tp3757
I1
s(g1
I42
g2
Vinsert
p3758
I43
VSimpleType: Annotation
p3759
tp3760
F0.25
s(g3296
I42
g3297
Vinsert
p3761
I42
VSimpleName: submit
p3762
tp3763
F0.5
s(g3552
I42
g3553
Vinsert
p3764
I42
VSimpleName: raw
p3765
tp3766
I1
s(Vinsert
p3767
I42
VSimpleName: keySet
p3768
Vinsert
p3769
I74
VParameterizedType: ArrayList<>
p3770
tp3771
I1
s(Vinsert
p3772
I42
VSimpleName: get
p3773
Vinsert
p3774
I43
VSimpleType: LazyStreams
p3775
tp3776
F0.25
s(g1556
I42
g1557
Vinsert
p3777
I42
VSimpleName: Record
p3778
tp3779
I3
s(g3009
I42
g3010
Vinsert
p3780
I14
VClassInstanceCreation
p3781
tp3782
F0.25
s(Vinsert
p3783
I42
VSimpleName: lowerHexToUnsignedLong
p3784
Vinsert
p3785
I42
VSimpleName: builder
p3786
tp3787
I1
s(Vinsert
p3788
I42
VSimpleName: beginArray
p3789
Vinsert
p3790
I42
VSimpleName: JsonWriter
p3791
tp3792
F0.25
s(Vinsert
p3793
I42
VSimpleName: size
p3794
Vinsert
p3795
I74
VParameterizedType: ArrayList<>
p3796
tp3797
I5
s(g1410
I42
g1411
Vinsert
p3798
I59
VVariableDeclarationFragment
p3799
tp3800
I1
s(g61
I42
g62
Vinsert
p3801
I41
VReturnStatement
p3802
tp3803
I1
s(Vinsert
p3804
I42
VSimpleName: remoteEndpoint
p3805
Vinsert
p3806
I42
VSimpleName: reader
p3807
tp3808
I1
s(g3083
I42
g3084
Vinsert
p3809
I42
VSimpleName: Iterable
p3810
tp3811
I1
s(g2273
I42
g2274
Vinsert
p3812
I42
VSimpleName: reload
p3813
tp3814
F0.25
s(g783
I42
g784
Vinsert
p3815
I42
VSimpleName: String
p3816
tp3817
I1
s(Vinsert
p3818
I42
VSimpleName: append
p3819
Vinsert
p3820
I60
VVariableDeclarationStatement
p3821
tp3822
I1
s(Vinsert
p3823
I42
VSimpleName: copyOf
p3824
Vinsert
p3825
I52
VThisExpression
p3826
tp3827
I3
s(Vinsert
p3828
I42
VSimpleName: builder
p3829
Vinsert
p3830
I43
VSimpleType: StrictTraceIdFalseTest
p3831
tp3832
I1
s(Vinsert
p3833
I42
VSimpleName: proceed
p3834
Vinsert
p3835
I32
VMethodInvocation
p3836
tp3837
I2
s(Vinsert
p3838
I42
VSimpleName: parentId
p3839
Vinsert
p3840
I60
VVariableDeclarationStatement
p3841
tp3842
I1
s(Vinsert
p3843
I42
VSimpleName: get
p3844
Vinsert
p3845
I43
VSimpleType: zipkin.storage.elasticsearch.ElasticsearchSpanConsumerTest
p3846
tp3847
F0.5
s(g26
I42
g27
Vinsert
p3848
I43
VSimpleType: String
p3849
tp3850
F0.25
s(Vinsert
p3851
I42
VSimpleName: newBuilder
p3852
Vinsert
p3853
I7
VAssignment: =
p3854
tp3855
I1
s(g577
I42
g578
Vinsert
p3856
I40
VQualifiedName: CassandraStorage.Builder
p3857
tp3858
I2
s(Vinsert
p3859
I42
VSimpleName: traceIdHigh
p3860
Vinsert
p3861
I34
VNumberLiteral: 0L
p3862
tp3863
F0.25
s(g2304
I42
g2305
Vinsert
p3864
I42
VSimpleName: BasicAuthInterceptor
p3865
tp3866
I1
s(Vinsert
p3867
I42
VSimpleName: spans
p3868
Vinsert
p3869
I43
VSimpleType: AutoValue_Trace.Builder
p3870
tp3871
I1
s(g1187
I42
g1188
Vinsert
p3872
I31
VMethodDeclaration
p3873
tp3874
F0.25
s(g1103
I42
g1104
Vinsert
p3875
I52
VThisExpression
p3876
tp3877
I2
s(g1772
I42
g1773
Vinsert
p3878
I42
VSimpleName: serviceNames
p3879
tp3880
I3
s(g1012
I42
g1013
Vinsert
p3881
I40
VQualifiedName: ElasticsearchTestGraph.INSTANCE
p3882
tp3883
I2
s(Vinsert
p3884
I42
VSimpleName: create
p3885
Vinsert
p3886
I40
VQualifiedName: zipkin.internal.V2StorageComponent
p3887
tp3888
F0.25
s(g1533
I42
g1534
Vinsert
p3889
I60
VVariableDeclarationStatement
p3890
tp3891
I3
s(g641
I42
g642
Vinsert
p3892
I43
VSimpleType: ResponseBody
p3893
tp3894
F0.25
s(Vinsert
p3895
I42
VSimpleName: builder
p3896
Vinsert
p3897
I42
VSimpleName: traceIdString_high
p3898
tp3899
F0.25
s(Vinsert
p3900
I42
VSimpleName: start
p3901
Vinsert
p3902
I43
VSimpleType: NodeCache
p3903
tp3904
I1
s(g1428
I42
g1429
Vinsert
p3905
I42
VSimpleName: create
p3906
tp3907
I1
s(Vinsert
p3908
I42
VSimpleName: asList
p3909
Vinsert
p3910
I42
VSimpleName: singletonList_jsonBytes
p3911
tp3912
F0.25
s(g1032
I42
g1033
Vinsert
p3913
I42
VSimpleName: normalizeTraceId
p3914
tp3915
I1
s(Vinsert
p3916
I42
VSimpleName: addAnnotation
p3917
Vinsert
p3918
I42
VSimpleName: zipkinWeb
p3919
tp3920
I1
s(g51
I42
g52
Vinsert
p3921
I22
VFieldAccess
p3922
tp3923
I1
s(g2309
I42
g2310
Vinsert
p3924
I60
VVariableDeclarationStatement
p3925
tp3926
I1
s(g224
I42
g225
Vinsert
p3927
I33
VNullLiteral
p3928
tp3929
I1
s(g1602
I42
g1603
Vinsert
p3930
I45
VStringLiteral: "bar"
p3931
tp3932
I1
s(Vinsert
p3933
I42
VSimpleName: getConnection
p3934
Vinsert
p3935
I42
VSimpleName: clear
p3936
tp3937
F0.25
s(Vinsert
p3938
I42
VSimpleName: set
p3939
Vinsert
p3940
I34
VNumberLiteral: 10000
p3941
tp3942
I1
s(g314
I42
g315
Vinsert
p3943
I42
VSimpleName: assertThat
p3944
tp3945
I1
s(Vinsert
p3946
I42
VSimpleName: write
p3947
Vinsert
p3948
I27
VInfixExpression: !=
p3949
tp3950
I2
s(Vinsert
p3951
I42
VSimpleName: refresh
p3952
Vinsert
p3953
I43
VSimpleType: ZipkinServerConfiguration
p3954
tp3955
I2
s(g1177
I42
g1178
Vinsert
p3956
I43
VSimpleType: CassandraDependenciesWriter
p3957
tp3958
I1
s(g1846
I42
g1847
Vinsert
p3959
I32
VMethodInvocation
p3960
tp3961
I2
s(g1821
I42
g1822
Vinsert
p3962
I43
VSimpleType: List
p3963
tp3964
F0.25
s(g816
I42
g817
Vinsert
p3965
I8
VBlock
p3966
tp3967
I1
s(g136
I42
g137
Vinsert
p3968
I43
VSimpleType: Span
p3969
tp3970
I1
s(g547
I42
g548
Vinsert
p3971
I42
VSimpleName: expected
p3972
tp3973
I1
s(Vinsert
p3974
I42
VSimpleName: getVersion
p3975
Vinsert
p3976
I45
VStringLiteral: "    \u005c"build_hash\u005c" : \u005c"05d4530971ef0ea46d0f4fa6ee64dbc8df659682\u005c",\u005cn"
p3977
tp3978
I1
s(Vinsert
p3979
I42
VSimpleName: flushOnWrites
p3980
Vinsert
p3981
I41
VReturnStatement
p3982
tp3983
F0.25
s(g3618
I42
g3619
Vinsert
p3984
I59
VVariableDeclarationFragment
p3985
tp3986
I1
s(Vinsert
p3987
I42
VSimpleName: getInetAddresses
p3988
Vinsert
p3989
I42
VSimpleName: stream
p3990
tp3991
I1
s(Vinsert
p3992
I42
VSimpleName: caService
p3993
Vinsert
p3994
I40
VQualifiedName: DependencyLinkSpan.Builder
p3995
tp3996
I1
s(Vinsert
p3997
I42
VSimpleName: isEmpty
p3998
Vinsert
p3999
I42
VSimpleName: store
p4000
tp4001
I1
s(g3628
I42
g3629
Vinsert
p4002
I32
VMethodInvocation
p4003
tp4004
I1
s(g2732
I42
g2733
Vinsert
p4005
I42
VSimpleName: getCluster
p4006
tp4007
I1
s(g1053
I42
g1054
Vinsert
p4008
I25
VIfStatement
p4009
tp4010
I1
s(Vinsert
p4011
I42
VSimpleName: toLowerCase
p4012
Vinsert
p4013
I31
VMethodDeclaration
p4014
tp4015
F0.25
s(Vinsert
p4016
I42
VSimpleName: putTrace
p4017
Vinsert
p4018
I78
VMarkerAnnotation
p4019
tp4020
F0.5
s(Vinsert
p4021
I42
VSimpleName: perform
p4022
Vinsert
p4023
I45
VStringLiteral: "]"
p4024
tp4025
F0.25
s(g3525
I42
g3526
Vinsert
p4026
I21
VExpressionStatement
p4027
tp4028
I1
s(Vinsert
p4029
I42
VSimpleName: toString
p4030
Vinsert
p4031
I78
VMarkerAnnotation
p4032
tp4033
F0.25
s(Vinsert
p4034
I42
VSimpleName: singletonList
p4035
Vinsert
p4036
I42
VSimpleName: bytes
p4037
tp4038
I1
s(Vinsert
p4039
I42
VSimpleName: isEmpty
p4040
Vinsert
p4041
I42
VSimpleName: traceId
p4042
tp4043
I1
s(Vinsert
p4044
I42
VSimpleName: contains
p4045
Vinsert
p4046
I42
VSimpleName: Qualifier
p4047
tp4048
F0.25
s(g121
I42
g122
Vinsert
p4049
I43
VSimpleType: String
p4050
tp4051
I1
s(Vinsert
p4052
I42
VSimpleName: enqueue
p4053
Vinsert
p4054
I42
VSimpleName: doesntWriteSpanId
p4055
tp4056
F0.25
s(g770
I42
g771
Vinsert
p4057
I44
VSingleVariableDeclaration
p4058
tp4059
F0.25
s(g3951
I42
g3952
Vinsert
p4060
I42
VSimpleName: ZipkinPrometheusMetricsAutoConfiguration
p4061
tp4062
I1
s(g2818
I42
g2819
Vinsert
p4063
I14
VClassInstanceCreation
p4064
tp4065
I1
s(g2145
I42
g2146
Vinsert
p4066
I42
VSimpleName: CollectorMetrics
p4067
tp4068
F0.5
s(g1265
I42
g1266
Vinsert
p4069
I41
VReturnStatement
p4070
tp4071
F13.25
s(Vinsert
p4072
I42
VSimpleName: builder
p4073
Vinsert
p4074
I42
VSimpleName: IndexTemplates
p4075
tp4076
I1
s(Vinsert
p4077
I42
VSimpleName: close
p4078
Vinsert
p4079
I42
VSimpleName: context
p4080
tp4081
I2
s(g3662
I42
g3663
Vinsert
p4082
I59
VVariableDeclarationFragment
p4083
tp4084
I1
s(Vinsert
p4085
I42
VSimpleName: max
p4086
Vinsert
p4087
I22
VFieldAccess
p4088
tp4089
I2
s(Vinsert
p4090
I42
VSimpleName: get
p4091
Vinsert
p4092
I42
VSimpleName: length
p4093
tp4094
I3
s(Vinsert
p4095
I42
VSimpleName: addAction
p4096
Vinsert
p4097
I40
VQualifiedName: Bulk.Builder
p4098
tp4099
I1
s(g1242
I42
g1243
Vinsert
p4100
I60
VVariableDeclarationStatement
p4101
tp4102
I2
s(Vinsert
p4103
I42
VSimpleName: startsWith
p4104
Vinsert
p4105
I42
VSimpleName: Override
p4106
tp4107
F0.5
s(g2283
I42
g2284
Vinsert
p4108
I22
VFieldAccess
p4109
tp4110
F0.25
s(g567
I42
g568
Vinsert
p4111
I41
VReturnStatement
p4112
tp4113
I1
s(Vinsert
p4114
I42
VSimpleName: fine
p4115
Vinsert
p4116
I42
VSimpleName: logger
p4117
tp4118
I8
s(g1821
I42
g1822
Vinsert
p4119
I43
VSimpleType: ByteBuffer
p4120
tp4121
F0.25
s(g2555
I42
g2556
Vinsert
p4122
I34
VNumberLiteral: 0L
p4123
tp4124
I1
s(g3946
I42
g3947
Vinsert
p4125
I40
VQualifiedName: value.traceIdHigh
p4126
tp4127
I1
s(g954
I42
g955
Vinsert
p4128
I43
VSimpleType: MalformedJsonException
p4129
tp4130
I1
s(Vinsert
p4131
I42
VSimpleName: spanStore
p4132
Vinsert
p4133
I43
VSimpleType: CassandraSpanStore
p4134
tp4135
F0.25
s(Vinsert
p4136
I42
VSimpleName: write
p4137
Vinsert
p4138
I42
VSimpleName: get
p4139
tp4140
I1
s(g2140
I42
g2141
Vinsert
p4141
I42
VSimpleName: today
p4142
tp4143
I3
s(Vinsert
p4144
I42
VSimpleName: builder
p4145
Vinsert
p4146
I42
VSimpleName: indexReplicas
p4147
tp4148
F0.5
s(g2431
I42
g2432
Vinsert
p4149
I40
VQualifiedName: zipkin.DependencyLink
p4150
tp4151
F0.25
s(Vinsert
p4152
I42
VSimpleName: getSpanNames
p4153
Vinsert
p4154
I42
VSimpleName: ToSeqCallback
p4155
tp4156
I2
s(Vinsert
p4157
I42
VSimpleName: convert
p4158
Vinsert
p4159
I42
VSimpleName: deps2
p4160
tp4161
I1
s(g4072
I42
g4073
Vinsert
p4162
I42
VSimpleName: callFactory
p4163
tp4164
I1
s(g319
I42
g320
Vinsert
p4165
I42
VSimpleName: fromJson
p4166
tp4167
F0.25
s(g992
I42
g993
Vinsert
p4168
I42
VSimpleName: isOk
p4169
tp4170
F0.25
s(Vinsert
p4171
I42
VSimpleName: create
p4172
Vinsert
p4173
I42
VSimpleName: BoundarySampler
p4174
tp4175
I1
s(g3767
I42
g3768
Vinsert
p4176
I42
VSimpleName: List
p4177
tp4178
I2
s(g3454
I42
g3455
Vinsert
p4179
I66
VTextElement: When storage implementations separate annotation indexing from storage, filter out these
p4180
tp4181
I1
s(Vinsert
p4182
I42
VSimpleName: expect
p4183
Vinsert
p4184
I67
VMemberRef
p4185
tp4186
F0.5
s(Vinsert
p4187
I42
VSimpleName: iterator
p4188
Vinsert
p4189
I42
VSimpleName: index
p4190
tp4191
I1
s(Vinsert
p4192
I42
VSimpleName: values
p4193
Vinsert
p4194
I74
VParameterizedType: Collection<List<Span>>
p4195
tp4196
F0.25
s(g395
I42
g396
Vinsert
p4197
I32
VMethodInvocation
p4198
tp4199
I1
s(g3296
I42
g3297
Vinsert
p4200
I42
VSimpleName: V
p4201
tp4202
F0.25
s(g456
I42
g457
Vinsert
p4203
I27
VInfixExpression: +
p4204
tp4205
I1
s(g3194
I42
g3195
Vinsert
p4206
I45
VStringLiteral: "      \u005c"key\u005c": \u005c"num\u005c",\u005cn"
p4207
tp4208
I1
s(g1346
I42
g1347
Vinsert
p4209
I13
VCharacterLiteral: 'e'
p4210
tp4211
I1
s(Vinsert
p4212
I42
VSimpleName: in
p4213
Vinsert
p4214
I40
VQualifiedName: ZIPKIN_ANNOTATIONS.A_KEY
p4215
tp4216
I1
s(g1303
I42
g1304
Vinsert
p4217
I33
VNullLiteral
p4218
tp4219
I1
s(Vinsert
p4220
I42
VSimpleName: compareTo
p4221
Vinsert
p4222
I60
VVariableDeclarationStatement
p4223
tp4224
I2
s(Vinsert
p4225
I42
VSimpleName: annotations
p4226
Vinsert
p4227
I34
VNumberLiteral: 1L
p4228
tp4229
I1
s(g4044
I42
g4045
Vinsert
p4230
I45
VStringLiteral: "zipkinElasticsearchHttp"
p4231
tp4232
F0.25
s(g2304
I42
g2305
Vinsert
p4233
I42
VSimpleName: client
p4234
tp4235
I1
s(g1856
I42
g1857
Vinsert
p4236
I34
VNumberLiteral: 0
p4237
tp4238
F1.25
s(g111
I42
g112
Vinsert
p4239
I42
VSimpleName: cluster
p4240
tp4241
I1
s(g1528
I42
g1529
Vinsert
p4242
I45
VStringLiteral: "insert-trace-service-span-name"
p4243
tp4244
I1
s(g2944
I42
g2945
Vinsert
p4245
I42
VSimpleName: result
p4246
tp4247
I1
s(Vinsert
p4248
I42
VSimpleName: start
p4249
Vinsert
p4250
I42
VSimpleName: server
p4251
tp4252
I1
s(Vinsert
p4253
I42
VSimpleName: onSuccess
p4254
Vinsert
p4255
I42
VSimpleName: Callback
p4256
tp4257
F1.25
s(g1926
I42
g1927
Vinsert
p4258
I42
VSimpleName: write
p4259
tp4260
I2
s(g441
I42
g442
Vinsert
p4261
I42
VSimpleName: ElasticsearchHttpSpanConsumer
p4262
tp4263
I1
s(Vinsert
p4264
I42
VSimpleName: initCause
p4265
Vinsert
p4266
I42
VSimpleName: cause
p4267
tp4268
F0.25
s(g3628
I42
g3629
Vinsert
p4269
I42
VSimpleName: String
p4270
tp4271
F1.25
s(g582
I42
g583
Vinsert
p4272
I42
VSimpleName: ttl
p4273
tp4274
F0.25
s(Vinsert
p4275
I42
VSimpleName: emptyMap
p4276
Vinsert
p4277
I14
VClassInstanceCreation
p4278
tp4279
I1
s(Vinsert
p4280
I42
VSimpleName: constructTree
p4281
Vinsert
p4282
I34
VNumberLiteral: 4L
p4283
tp4284
I1
s(Vinsert
p4285
I42
VSimpleName: create
p4286
Vinsert
p4287
I14
VClassInstanceCreation
p4288
tp4289
F3.75
s(g2062
I42
g2063
Vinsert
p4290
I42
VSimpleName: Long
p4291
tp4292
I1
s(Vinsert
p4293
I42
VSimpleName: writeSpan
p4294
Vinsert
p4295
I83
VModifier: final
p4296
tp4297
I1
s(g314
I42
g315
Vinsert
p4298
I59
VVariableDeclarationFragment
p4299
tp4300
I1
s(Vinsert
p4301
I42
VSimpleName: isSyntheticRootForPartialTree
p4302
Vinsert
p4303
I42
VSimpleName: ancestorLink
p4304
tp4305
I1
s(Vinsert
p4306
I42
VSimpleName: clientTracer
p4307
Vinsert
p4308
I8
VBlock
p4309
tp4310
I2
s(g151
I42
g152
Vinsert
p4311
I41
VReturnStatement
p4312
tp4313
I2
s(Vinsert
p4314
I42
VSimpleName: builder
p4315
Vinsert
p4316
I42
VSimpleName: span2
p4317
tp4318
I1
s(Vinsert
p4319
I42
VSimpleName: value
p4320
Vinsert
p4321
I27
VInfixExpression: *
p4322
tp4323
I1
s(g3707
I42
g3708
Vinsert
p4324
I42
VSimpleName: getInt
p4325
tp4326
I1
s(g1123
I42
g1124
Vinsert
p4327
I43
VSimpleType: RabbitMQCollector.Builder
p4328
tp4329
F1.25
s(Vinsert
p4330
I42
VSimpleName: newConcurrentMap
p4331
Vinsert
p4332
I59
VVariableDeclarationFragment
p4333
tp4334
I1
s(g919
I42
g920
Vinsert
p4335
I74
VParameterizedType: List<Span>
p4336
tp4337
I4
s(g2865
I42
g2866
Vinsert
p4338
I34
VNumberLiteral: 0
p4339
tp4340
I1
s(g1594
I42
g1595
Vinsert
p4341
I45
VStringLiteral: "admin"
p4342
tp4343
I1
s(Vinsert
p4344
I42
VSimpleName: sleep
p4345
Vinsert
p4346
I42
VSimpleName: isAccepted
p4347
tp4348
I1
s(g1367
I42
g1368
Vinsert
p4349
I83
VModifier: protected
p4350
tp4351
F0.25
s(g2771
I42
g2772
Vinsert
p4352
I44
VSingleVariableDeclaration
p4353
tp4354
F0.25
s(g126
I42
g127
Vinsert
p4355
I78
VMarkerAnnotation
p4356
tp4357
F0.75
s(g2403
I42
g2404
Vinsert
p4358
I42
VSimpleName: ep
p4359
tp4360
I1
s(g757
I42
g758
Vinsert
p4361
I42
VSimpleName: serialized
p4362
tp4363
F0.25
s(g2085
I42
g2086
Vinsert
p4364
I40
VQualifiedName: zipkin.internal.Util.UTF_8
p4365
tp4366
F0.25
s(Vinsert
p4367
I42
VSimpleName: emptyList
p4368
Vinsert
p4369
I43
VSimpleType: String
p4370
tp4371
F0.5
s(Vinsert
p4372
I42
VSimpleName: hashCode
p4373
Vinsert
p4374
I42
VSimpleName: parentId
p4375
tp4376
I2
s(g744
I42
g745
Vinsert
p4377
I59
VVariableDeclarationFragment
p4378
tp4379
I1
s(Vinsert
p4380
I42
VSimpleName: getBytes
p4381
Vinsert
p4382
I42
VSimpleName: gunzip
p4383
tp4384
I1
s(Vinsert
p4385
I42
VSimpleName: builder
p4386
Vinsert
p4387
I42
VSimpleName: idString_withParent
p4388
tp4389
F0.25
s(g572
I42
g573
Vinsert
p4390
I43
VSimpleType: InsertServiceSpan
p4391
tp4392
I2
s(g1182
I42
g1183
Vinsert
p4393
I40
VQualifiedName: Decoder.JSON
p4394
tp4395
F1.75
s(g3735
I42
g3736
Vinsert
p4396
I42
VSimpleName: traceIdLow
p4397
tp4398
F1.0
s(Vinsert
p4399
I42
VSimpleName: rowCountForTraceByServiceSpan
p4400
Vinsert
p4401
I86
VLambdaExpression
p4402
tp4403
I1
s(g2909
I42
g2910
Vinsert
p4404
I42
VSimpleName: tagsWithNestedDots
p4405
tp4406
I1
s(Vinsert
p4407
I42
VSimpleName: incrementBytes
p4408
Vinsert
p4409
I42
VSimpleName: metrics
p4410
tp4411
I1
s(g881
I42
g882
Vinsert
p4412
I49
VSwitchCase
p4413
tp4414
I2
s(Vinsert
p4415
I42
VSimpleName: deserialize
p4416
Vinsert
p4417
I43
VSimpleType: com.twitter.zipkin.thriftjava.Span
p4418
tp4419
I2
s(Vinsert
p4420
I42
VSimpleName: getHits
p4421
Vinsert
p4422
I83
VModifier: final
p4423
tp4424
F0.25
s(Vinsert
p4425
I42
VSimpleName: indexShards
p4426
Vinsert
p4427
I42
VSimpleName: lazyClient
p4428
tp4429
I1
s(Vinsert
p4430
I42
VSimpleName: newLinkedHashSet
p4431
Vinsert
p4432
I43
VSimpleType: Object
p4433
tp4434
F1.25
s(Vinsert
p4435
I42
VSimpleName: addBinaryAnnotation
p4436
Vinsert
p4437
I42
VSimpleName: frontend
p4438
tp4439
I3
s(g2909
I42
g2910
Vinsert
p4440
I59
VVariableDeclarationFragment
p4441
tp4442
I4
s(g1657
I42
g1658
Vinsert
p4443
I83
VModifier: public
p4444
tp4445
F1.0
s(Vinsert
p4446
I42
VSimpleName: writeUtf8
p4447
Vinsert
p4448
I32
VMethodInvocation
p4449
tp4450
I10
s(Vinsert
p4451
I42
VSimpleName: serviceName
p4452
Vinsert
p4453
I32
VMethodInvocation
p4454
tp4455
F13.0
s(Vinsert
p4456
I42
VSimpleName: isEmpty
p4457
Vinsert
p4458
I74
VParameterizedType: List<Span>
p4459
tp4460
F0.25
s(Vinsert
p4461
I42
VSimpleName: create
p4462
Vinsert
p4463
I60
VVariableDeclarationStatement
p4464
tp4465
I20
s(g2436
I42
g2437
Vinsert
p4466
I42
VSimpleName: RunnerException
p4467
tp4468
F0.25
s(Vinsert
p4469
I42
VSimpleName: equal
p4470
Vinsert
p4471
I8
VBlock
p4472
tp4473
F0.25
s(g1518
I42
g1519
Vinsert
p4474
I40
VQualifiedName: collector.storage
p4475
tp4476
I1
s(g522
I42
g523
Vinsert
p4477
I42
VSimpleName: PREFIX
p4478
tp4479
F0.25
s(Vinsert
p4480
I42
VSimpleName: readSpans
p4481
Vinsert
p4482
I31
VMethodDeclaration
p4483
tp4484
F0.25
s(g1372
I42
g1373
Vinsert
p4485
I42
VSimpleName: tracer
p4486
tp4487
I1
s(Vinsert
p4488
I42
VSimpleName: finishSpan
p4489
Vinsert
p4490
I54
VTryStatement
p4491
tp4492
I1
s(Vinsert
p4493
I42
VSimpleName: getOverrides
p4494
Vinsert
p4495
I45
VStringLiteral: "latest"
p4496
tp4497
I1
s(Vinsert
p4498
I42
VSimpleName: andExpect
p4499
Vinsert
p4500
I45
VStringLiteral: "/api/v1/spans"
p4501
tp4502
I1
s(g1821
I42
g1822
Vinsert
p4503
I42
VSimpleName: apply
p4504
tp4505
F0.25
s(g1974
I42
g1975
Vinsert
p4506
I37
VPostfixExpression: ++
p4507
tp4508
I1
s(g2689
I42
g2690
Vinsert
p4509
I43
VSimpleType: InMemoryStorage
p4510
tp4511
F0.25
s(g1032
I42
g1033
Vinsert
p4512
I38
VPrefixExpression: !
p4513
tp4514
I1
s(g2383
I42
g2384
Vinsert
p4515
I32
VMethodInvocation
p4516
tp4517
F6.5
s(Vinsert
p4518
I42
VSimpleName: post
p4519
Vinsert
p4520
I45
VStringLiteral: "http://localhost:"
p4521
tp4522
I2
s(Vinsert
p4523
I42
VSimpleName: test
p4524
Vinsert
p4525
I66
VTextElement: This measures the trace id sampler provided with zipkin-java
p4526
tp4527
F0.25
s(g567
I42
g568
Vinsert
p4528
I14
VClassInstanceCreation
p4529
tp4530
I1
s(Vinsert
p4531
I42
VSimpleName: addAnnotation
p4532
Vinsert
p4533
I34
VNumberLiteral: 1444438900948000L
p4534
tp4535
I2
s(g4275
I42
g4276
Vinsert
p4536
I52
VThisExpression
p4537
tp4538
I1
s(Vinsert
p4539
I42
VSimpleName: asyncSpanConsumer
p4540
Vinsert
p4541
I14
VClassInstanceCreation
p4542
tp4543
I1
s(g934
I42
g935
Vinsert
p4544
I34
VNumberLiteral: 0
p4545
tp4546
F16.5
s(Vinsert
p4547
I42
VSimpleName: builder
p4548
Vinsert
p4549
I42
VSimpleName: merge
p4550
tp4551
I1
s(Vinsert
p4552
I42
VSimpleName: build
p4553
Vinsert
p4554
I42
VSimpleName: apply
p4555
tp4556
I2
s(Vinsert
p4557
I42
VSimpleName: build
p4558
Vinsert
p4559
I42
VSimpleName: toLowerHex
p4560
tp4561
I1
s(g372
I42
g373
Vinsert
p4562
I44
VSingleVariableDeclaration
p4563
tp4564
F0.25
s(g836
I42
g837
Vinsert
p4565
I42
VSimpleName: isEmpty
p4566
tp4567
I1
s(Vinsert
p4568
I42
VSimpleName: order
p4569
Vinsert
p4570
I42
VSimpleName: terms
p4571
tp4572
I1
s(g2637
I42
g2638
Vinsert
p4573
I40
VQualifiedName: http.baseUrl
p4574
tp4575
F0.25
s(Vinsert
p4576
I42
VSimpleName: remove
p4577
Vinsert
p4578
I42
VSimpleName: V
p4579
tp4580
F1.25
s(g2192
I42
g2193
Vinsert
p4581
I74
VParameterizedType: List<String>
p4582
tp4583
I1
s(g2179
I42
g2180
Vinsert
p4584
I27
VInfixExpression: *
p4585
tp4586
F0.25
s(Vinsert
p4587
I42
VSimpleName: getBean
p4588
Vinsert
p4589
I43
VSimpleType: NoSuchBeanDefinitionException
p4590
tp4591
F0.75
s(Vinsert
p4592
I42
VSimpleName: create
p4593
Vinsert
p4594
I42
VSimpleName: deduplicatingExecutor
p4595
tp4596
F0.25
s(Vinsert
p4597
I42
VSimpleName: toBuilder
p4598
Vinsert
p4599
I42
VSimpleName: ZipkinElasticsearchStorageProperties
p4600
tp4601
F0.25
s(g1566
I42
g1567
Vinsert
p4602
I83
VModifier: protected
p4603
tp4604
F0.25
s(Vinsert
p4605
I42
VSimpleName: containsExactly
p4606
Vinsert
p4607
I42
VSimpleName: sortedTraceIds
p4608
tp4609
I1
s(Vinsert
p4610
I42
VSimpleName: get
p4611
Vinsert
p4612
I42
VSimpleName: spanConsumer
p4613
tp4614
F0.75
s(g4136
I42
g4137
Vinsert
p4615
I42
VSimpleName: i
p4616
tp4617
I2
s(g3987
I42
g3988
Vinsert
p4618
I32
VMethodInvocation
p4619
tp4620
I4
s(Vinsert
p4621
I42
VSimpleName: sizeInBytes
p4622
Vinsert
p4623
I42
VSimpleName: assertThat
p4624
tp4625
I3
s(Vinsert
p4626
I42
VSimpleName: parent
p4627
Vinsert
p4628
I42
VSimpleName: parent
p4629
tp4630
I1
s(Vinsert
p4631
I42
VSimpleName: readSpan
p4632
Vinsert
p4633
I42
VSimpleName: writeSpans
p4634
tp4635
F0.25
s(g886
I42
g887
Vinsert
p4636
I3
VArrayCreation
p4637
tp4638
I1
s(Vinsert
p4639
I42
VSimpleName: isJsonArray
p4640
Vinsert
p4641
I42
VSimpleName: String
p4642
tp4643
F0.25
s(g2732
I42
g2733
Vinsert
p4644
I32
VMethodInvocation
p4645
tp4646
I6
s(Vinsert
p4647
I42
VSimpleName: getString
p4648
Vinsert
p4649
I60
VVariableDeclarationStatement
p4650
tp4651
I1
s(g126
I42
g127
Vinsert
p4652
I43
VSimpleType: Exception
p4653
tp4654
F0.75
s(g3412
I42
g3413
Vinsert
p4655
I42
VSimpleName: clientVersion
p4656
tp4657
I1
s(g2054
I42
g2055
Vinsert
p4658
I4
VArrayInitializer
p4659
tp4660
I1
s(g224
I42
g225
Vinsert
p4661
I43
VSimpleType: QueryRequest
p4662
tp4663
F0.25
s(g2810
I42
g2811
Vinsert
p4664
I42
VSimpleName: getCount
p4665
tp4666
I1
s(g3767
I42
g3768
Vinsert
p4667
I39
VPrimitiveType: long
p4668
tp4669
I2
s(g2755
I42
g2756
Vinsert
p4670
I8
VBlock
p4671
tp4672
F0.25
s(Vinsert
p4673
I42
VSimpleName: isRunning
p4674
Vinsert
p4675
I54
VTryStatement
p4676
tp4677
I1
s(g527
I42
g528
Vinsert
p4678
I42
VSimpleName: TODAY
p4679
tp4680
I1
s(g2408
I42
g2409
Vinsert
p4681
I43
VSimpleType: OkHttpClient
p4682
tp4683
F0.25
s(g4631
I42
g4632
Vinsert
p4684
I41
VReturnStatement
p4685
tp4686
I4
s(g2085
I42
g2086
Vinsert
p4687
I41
VReturnStatement
p4688
tp4689
I1
s(Vinsert
p4690
I42
VSimpleName: get
p4691
Vinsert
p4692
I40
VQualifiedName: link.parent
p4693
tp4694
I1
s(g2776
I42
g2777
Vinsert
p4695
I31
VMethodDeclaration
p4696
tp4697
F0.5
s(g3804
I42
g3805
Vinsert
p4698
I42
VSimpleName: equals
p4699
tp4700
I1
s(Vinsert
p4701
I42
VSimpleName: dispatch
p4702
Vinsert
p4703
I33
VNullLiteral
p4704
tp4705
I1
s(g3607
I42
g3608
Vinsert
p4706
I85
VDimension
p4707
tp4708
I2
s(g2828
I42
g2829
Vinsert
p4709
I43
VSimpleType: AtomicInteger
p4710
tp4711
I2
s(Vinsert
p4712
I42
VSimpleName: isComplete
p4713
Vinsert
p4714
I8
VBlock
p4715
tp4716
I1
s(Vinsert
p4717
I42
VSimpleName: create
p4718
Vinsert
p4719
I42
VSimpleName: id
p4720
tp4721
I4
s(g3072
I42
g3073
Vinsert
p4722
I42
VSimpleName: brave
p4723
tp4724
I1
s(g26
I42
g27
Vinsert
p4725
I42
VSimpleName: String
p4726
tp4727
F0.25
s(Vinsert
p4728
I42
VSimpleName: writeAscii
p4729
Vinsert
p4730
I42
VSimpleName: writeAscii
p4731
tp4732
F0.25
s(Vinsert
p4733
I42
VSimpleName: execute
p4734
Vinsert
p4735
I39
VPrimitiveType: void
p4736
tp4737
F0.5
s(Vinsert
p4738
I42
VSimpleName: put
p4739
Vinsert
p4740
I42
VSimpleName: updateFields
p4741
tp4742
I2
s(g3951
I42
g3952
Vinsert
p4743
I57
VTypeLiteral
p4744
tp4745
I21
s(g96
I42
g97
Vinsert
p4746
I21
VExpressionStatement
p4747
tp4748
I1
s(Vinsert
p4749
I42
VSimpleName: isEqualTo
p4750
Vinsert
p4751
I42
VSimpleName: InternalElasticsearchClient
p4752
tp4753
I1
s(Vinsert
p4754
I42
VSimpleName: readSpan
p4755
Vinsert
p4756
I45
VStringLiteral: "      \u005c"type\u005c": \u005c"I64\u005c""
p4757
tp4758
I1
s(g577
I42
g578
Vinsert
p4759
I42
VSimpleName: result
p4760
tp4761
I2
s(g3155
I42
g3156
Vinsert
p4762
I54
VTryStatement
p4763
tp4764
I3
s(g1123
I42
g1124
Vinsert
p4765
I42
VSimpleName: toBuilder
p4766
tp4767
F3.25
s(Vinsert
p4768
I42
VSimpleName: getTotalHits
p4769
Vinsert
p4770
I42
VSimpleName: get
p4771
tp4772
I1
s(Vinsert
p4773
I42
VSimpleName: getBytes
p4774
Vinsert
p4775
I42
VSimpleName: v
p4776
tp4777
F4.25
s(Vinsert
p4778
I42
VSimpleName: writeByte
p4779
Vinsert
p4780
I42
VSimpleName: write
p4781
tp4782
F0.25
s(g4157
I42
g4158
Vinsert
p4783
I59
VVariableDeclarationFragment
p4784
tp4785
I1
s(g4152
I42
g4153
Vinsert
p4786
I42
VSimpleName: String
p4787
tp4788
I2
s(g1811
I42
g1812
Vinsert
p4789
I78
VMarkerAnnotation
p4790
tp4791
I1
s(Vinsert
p4792
I42
VSimpleName: addAnnotation
p4793
Vinsert
p4794
I42
VSimpleName: lowerHexToUnsignedLong
p4795
tp4796
I1
s(g507
I42
g508
Vinsert
p4797
I42
VSimpleName: Override
p4798
tp4799
F0.25
s(g1456
I42
g1457
Vinsert
p4800
I59
VVariableDeclarationFragment
p4801
tp4802
I1
s(g4192
I42
g4193
Vinsert
p4803
I42
VSimpleName: spans
p4804
tp4805
I1
s(g264
I42
g265
Vinsert
p4806
I83
VModifier: public
p4807
tp4808
F0.25
s(g2818
I42
g2819
Vinsert
p4809
I21
VExpressionStatement
p4810
tp4811
I1
s(g3599
I42
g3600
Vinsert
p4812
I66
VTextElement: For example, for the native client, this would default to "localhost:9300".
p4813
tp4814
F0.25
s(g3022
I42
g3023
Vinsert
p4815
I33
VNullLiteral
p4816
tp4817
I1
s(g3938
I42
g3939
Vinsert
p4818
I27
VInfixExpression: <
p4819
tp4820
I1
s(g2208
I42
g2209
Vinsert
p4821
I40
VQualifiedName: span.timestamp
p4822
tp4823
F0.25
s(g3388
I42
g3389
Vinsert
p4824
I32
VMethodInvocation
p4825
tp4826
I7
s(g1177
I42
g1178
Vinsert
p4827
I42
VSimpleName: apply
p4828
tp4829
I1
s(Vinsert
p4830
I42
VSimpleName: flush
p4831
Vinsert
p4832
I42
VSimpleName: flushSpans
p4833
tp4834
F0.25
s(Vinsert
p4835
I42
VSimpleName: register
p4836
Vinsert
p4837
I42
VSimpleName: context
p4838
tp4839
I45
s(Vinsert
p4840
I42
VSimpleName: indexCacheMax
p4841
Vinsert
p4842
I39
VPrimitiveType: void
p4843
tp4844
F0.25
s(g3541
I42
g3542
Vinsert
p4845
I42
VSimpleName: executor
p4846
tp4847
F1.25
s(Vinsert
p4848
I42
VSimpleName: isInstanceOf
p4849
Vinsert
p4850
I32
VMethodInvocation
p4851
tp4852
I9
s(g2579
I42
g2580
Vinsert
p4853
I42
VSimpleName: DependencyLink
p4854
tp4855
F1.25
s(Vinsert
p4856
I42
VSimpleName: nanoTime
p4857
Vinsert
p4858
I8
VBlock
p4859
tp4860
I1
s(Vinsert
p4861
I42
VSimpleName: keyspace
p4862
Vinsert
p4863
I40
VQualifiedName: Type.cassandra
p4864
tp4865
I1
s(Vinsert
p4866
I42
VSimpleName: get
p4867
Vinsert
p4868
I42
VSimpleName: ResponseBody
p4869
tp4870
F0.25
s(g1113
I42
g1114
Vinsert
p4871
I42
VSimpleName: andExpect
p4872
tp4873
I2
s(g2454
I42
g2455
Vinsert
p4874
I42
VSimpleName: encodeNestedList
p4875
tp4876
F0.25
s(g2398
I42
g2399
Vinsert
p4877
I42
VSimpleName: AsyncSpanConsumer
p4878
tp4879
F0.25
s(g2771
I42
g2772
Vinsert
p4880
I43
VSimpleType: List
p4881
tp4882
F0.25
s(g949
I42
g950
Vinsert
p4883
I38
VPrefixExpression: !
p4884
tp4885
I1
s(g362
I42
g363
Vinsert
p4886
I42
VSimpleName: Error
p4887
tp4888
I1
s(g6
I42
g7
Vinsert
p4889
I42
VSimpleName: getRequestURI
p4890
tp4891
I1
s(g3372
I42
g3373
Vinsert
p4892
I42
VSimpleName: beginTs
p4893
tp4894
I1
s(Vinsert
p4895
I42
VSimpleName: execute
p4896
Vinsert
p4897
I43
VSimpleType: HttpBulkSpanIndexer
p4898
tp4899
I1
s(g3417
I42
g3418
Vinsert
p4900
I42
VSimpleName: Test
p4901
tp4902
F0.25
s(Vinsert
p4903
I42
VSimpleName: expect
p4904
Vinsert
p4905
I42
VSimpleName: Foo
p4906
tp4907
F0.25
s(Vinsert
p4908
I42
VSimpleName: parse
p4909
Vinsert
p4910
I42
VSimpleName: HttpUrl
p4911
tp4912
I1
s(Vinsert
p4913
I42
VSimpleName: entrySet
p4914
Vinsert
p4915
I74
VParameterizedType: Set<Pair<String>>
p4916
tp4917
I1
s(Vinsert
p4918
I42
VSimpleName: toBuilder
p4919
Vinsert
p4920
I42
VSimpleName: KafkaCollector
p4921
tp4922
I1
s(Vinsert
p4923
I42
VSimpleName: execute
p4924
Vinsert
p4925
I43
VSimpleType: Server
p4926
tp4927
I2
s(Vinsert
p4928
I42
VSimpleName: asList
p4929
Vinsert
p4930
I5
VArrayType: byte[]
p4931
tp4932
I2
s(g1602
I42
g1603
Vinsert
p4933
I42
VSimpleName: DependencyLink
p4934
tp4935
I1
s(g3838
I42
g3839
Vinsert
p4936
I43
VSimpleType: Span
p4937
tp4938
I1
s(g101
I42
g102
Vinsert
p4939
I8
VBlock
p4940
tp4941
I2
s(g3427
I42
g3428
Vinsert
p4942
I43
VSimpleType: IOException
p4943
tp4944
F1.5
s(Vinsert
p4945
I42
VSimpleName: indexOf
p4946
Vinsert
p4947
I42
VSimpleName: e
p4948
tp4949
I2
s(g1045
I42
g1046
Vinsert
p4950
I42
VSimpleName: key
p4951
tp4952
I1
s(g4830
I42
g4831
Vinsert
p4953
I83
VModifier: public
p4954
tp4955
F0.25
s(g106
I42
g107
Vinsert
p4956
I16
VConditionalExpression
p4957
tp4958
I1
s(Vinsert
p4959
I42
VSimpleName: errorReading
p4960
Vinsert
p4961
I78
VMarkerAnnotation
p4962
tp4963
F0.25
s(g1283
I42
g1284
Vinsert
p4964
I42
VSimpleName: CONFIG
p4965
tp4966
I8
s(Vinsert
p4967
I42
VSimpleName: indexNamePatternsForRange
p4968
Vinsert
p4969
I45
VStringLiteral: "2016-11-01T23:59:59Z"
p4970
tp4971
I1
s(Vinsert
p4972
I42
VSimpleName: build
p4973
Vinsert
p4974
I43
VSimpleType: String
p4975
tp4976
I1
s(g1944
I42
g1945
Vinsert
p4977
I43
VSimpleType: StorageComponent
p4978
tp4979
F0.5
s(g1474
I42
g1475
Vinsert
p4980
I34
VNumberLiteral: 0
p4981
tp4982
I1
s(Vinsert
p4983
I42
VSimpleName: clear
p4984
Vinsert
p4985
I42
VSimpleName: Collection
p4986
tp4987
F0.25
s(g1346
I42
g1347
Vinsert
p4988
I52
VThisExpression
p4989
tp4990
I1
s(g3307
I42
g3308
Vinsert
p4991
I34
VNumberLiteral: 0L
p4992
tp4993
I1
s(g4152
I42
g4153
Vinsert
p4994
I21
VExpressionStatement
p4995
tp4996
I3
s(g91
I42
g92
Vinsert
p4997
I42
VSimpleName: ERROR
p4998
tp4999
I1
s(Vinsert
p5000
I42
VSimpleName: start
p5001
Vinsert
p5002
I31
VMethodDeclaration
p5003
tp5004
F1.25
s(g621
I42
g622
Vinsert
p5005
I22
VFieldAccess
p5006
tp5007
F1.25
s(Vinsert
p5008
I42
VSimpleName: apply
p5009
Vinsert
p5010
I42
VSimpleName: hasNext
p5011
tp5012
I1
s(g1464
I42
g1465
Vinsert
p5013
I43
VSimpleType: List
p5014
tp5015
I1
s(g4407
I42
g4408
Vinsert
p5016
I42
VSimpleName: count
p5017
tp5018
F0.25
s(g126
I42
g127
Vinsert
p5019
I42
VSimpleName: close
p5020
tp5021
F0.25
s(g176
I42
g177
Vinsert
p5022
I42
VSimpleName: tag
p5023
tp5024
I4
s(g479
I42
g480
Vinsert
p5025
I42
VSimpleName: compute
p5026
tp5027
F0.25
s(g81
I42
g82
Vinsert
p5028
I43
VSimpleType: String
p5029
tp5030
F2.25
s(g3767
I42
g3768
Vinsert
p5031
I44
VSingleVariableDeclaration
p5032
tp5033
F2.25
s(Vinsert
p5034
I42
VSimpleName: build
p5035
Vinsert
p5036
I42
VSimpleName: toBuilder
p5037
tp5038
I3
s(g1002
I42
g1003
Vinsert
p5039
I74
VParameterizedType: List<Integer>
p5040
tp5041
I1
s(g4835
I42
g4836
Vinsert
p5042
I21
VExpressionStatement
p5043
tp5044
I42
s(Vinsert
p5045
I42
VSimpleName: hasLeadership
p5046
Vinsert
p5047
I42
VSimpleName: guard2
p5048
tp5049
I1
s(g4959
I42
g4960
Vinsert
p5050
I42
VSimpleName: Test
p5051
tp5052
F0.25
s(Vinsert
p5053
I42
VSimpleName: min
p5054
Vinsert
p5055
I42
VSimpleName: minDuration
p5056
tp5057
I1
s(g96
I42
g97
Vinsert
p5058
I31
VMethodDeclaration
p5059
tp5060
F0.25
s(g441
I42
g442
Vinsert
p5061
I42
VSimpleName: asyncSpanStore
p5062
tp5063
I1
s(g1561
I42
g1562
Vinsert
p5064
I8
VBlock
p5065
tp5066
I2
s(Vinsert
p5067
I42
VSimpleName: httpUrl
p5068
Vinsert
p5069
I42
VSimpleName: ZipkinRuleSpanStoreTest
p5070
tp5071
F0.25
s(g1260
I42
g1261
Vinsert
p5072
I34
VNumberLiteral: 16
p5073
tp5074
I1
s(g2954
I42
g2955
Vinsert
p5075
I42
VSimpleName: remoteServiceName
p5076
tp5077
I2
s(g4605
I42
g4606
Vinsert
p5078
I54
VTryStatement
p5079
tp5080
I1
s(g972
I42
g973
Vinsert
p5081
I40
VQualifiedName: TestObjects.WEB_ENDPOINT
p5082
tp5083
I1
s(g1528
I42
g1529
Vinsert
p5084
I59
VVariableDeclarationFragment
p5085
tp5086
I1
s(g1172
I42
g1173
Vinsert
p5087
I70
VEnhancedForStatement
p5088
tp5089
I2
s(Vinsert
p5090
I42
VSimpleName: execute
p5091
Vinsert
p5092
I83
VModifier: final
p5093
tp5094
F0.25
s(g4461
I42
g4462
Vinsert
p5095
I42
VSimpleName: Session
p5096
tp5097
F2.25
s(Vinsert
p5098
I42
VSimpleName: append
p5099
Vinsert
p5100
I42
VSimpleName: json
p5101
tp5102
I3
s(g2441
I42
g2442
Vinsert
p5103
I85
VDimension
p5104
tp5105
F0.25
s(g502
I42
g503
Vinsert
p5106
I42
VSimpleName: hosts
p5107
tp5108
I1
s(g3438
I42
g3439
Vinsert
p5109
I32
VMethodInvocation
p5110
tp5111
I1
s(Vinsert
p5112
I42
VSimpleName: annotationKeys
p5113
Vinsert
p5114
I42
VSimpleName: annotationKeys_dedupes
p5115
tp5116
F0.25
s(g2594
I42
g2595
Vinsert
p5117
I42
VSimpleName: AutoValue_SelectTraceIdsFromSpan_Input
p5118
tp5119
I1
s(g56
I42
g57
Vinsert
p5120
I42
VSimpleName: storage
p5121
tp5122
I2
s(g380
I42
g381
Vinsert
p5123
I42
VSimpleName: writeClientSpan_json_java
p5124
tp5125
F0.25
s(Vinsert
p5126
I42
VSimpleName: bind
p5127
Vinsert
p5128
I43
VSimpleType: BoundStatement
p5129
tp5130
I2
s(g4319
I42
g4320
Vinsert
p5131
I45
VStringLiteral: "$.['counter.zipkin_collector.bytes.http']"
p5132
tp5133
I1
s(g4095
I42
g4096
Vinsert
p5134
I21
VExpressionStatement
p5135
tp5136
I1
s(g4171
I42
g4172
Vinsert
p5137
I39
VPrimitiveType: float
p5138
tp5139
F1.0
s(g2875
I42
g2876
Vinsert
p5140
I59
VVariableDeclarationFragment
p5141
tp5142
F1.25
s(g2330
I42
g2331
Vinsert
p5143
I42
VSimpleName: trace
p5144
tp5145
I1
s(g26
I42
g27
Vinsert
p5146
I42
VSimpleName: getServiceNames
p5147
tp5148
F0.25
s(g4493
I42
g4494
Vinsert
p5149
I86
VLambdaExpression
p5150
tp5151
I2
s(g4673
I42
g4674
Vinsert
p5152
I42
VSimpleName: server
p5153
tp5154
I1
s(g2135
I42
g2136
Vinsert
p5155
I42
VSimpleName: storageBuilder
p5156
tp5157
F1.25
s(Vinsert
p5158
I42
VSimpleName: asList
p5159
Vinsert
p5160
I42
VSimpleName: isEmpty
p5161
tp5162
I3
s(g4085
I42
g4086
Vinsert
p5163
I7
VAssignment: =
p5164
tp5165
I1
s(Vinsert
p5166
I42
VSimpleName: sessionFactory
p5167
Vinsert
p5168
I43
VSimpleType: CassandraStorage.Builder
p5169
tp5170
I1
s(g3767
I42
g3768
Vinsert
p5171
I14
VClassInstanceCreation
p5172
tp5173
I3
s(g1513
I42
g1514
Vinsert
p5174
I45
VStringLiteral: "bar"
p5175
tp5176
I1
s(g3250
I42
g3251
Vinsert
p5177
I42
VSimpleName: RuntimeException
p5178
tp5179
I1
s(g1265
I42
g1266
Vinsert
p5180
I83
VModifier: abstract
p5181
tp5182
F0.25
s(Vinsert
p5183
I42
VSimpleName: start
p5184
Vinsert
p5185
I8
VBlock
p5186
tp5187
F7.5
s(Vinsert
p5188
I42
VSimpleName: builder
p5189
Vinsert
p5190
I42
VSimpleName: Annotation
p5191
tp5192
I3
s(g1767
I42
g1768
Vinsert
p5193
I32
VMethodInvocation
p5194
tp5195
I4
s(g126
I42
g127
Vinsert
p5196
I83
VModifier: public
p5197
tp5198
F0.75
s(g4488
I42
g4489
Vinsert
p5199
I42
VSimpleName: getTraces
p5200
tp5201
I1
s(g2283
I42
g2284
Vinsert
p5202
I7
VAssignment: =
p5203
tp5204
F0.25
s(Vinsert
p5205
I42
VSimpleName: expect
p5206
Vinsert
p5207
I40
VQualifiedName: QueryRequest.Builder
p5208
tp5209
F0.25
s(Vinsert
p5210
I42
VSimpleName: get
p5211
Vinsert
p5212
I42
VSimpleName: SessionProvider
p5213
tp5214
F0.25
s(g1002
I42
g1003
Vinsert
p5215
I43
VSimpleType: Integer
p5216
tp5217
I1
s(g4225
I42
g4226
Vinsert
p5218
I42
VSimpleName: base
p5219
tp5220
I1
s(Vinsert
p5221
I42
VSimpleName: writeBinaryAnnotation
p5222
Vinsert
p5223
I83
VModifier: public
p5224
tp5225
F0.25
s(g3974
I42
g3975
Vinsert
p5226
I45
VStringLiteral: "    \u005c"number\u005c" : \u005c"1.7.3\u005c",\u005cn"
p5227
tp5228
I1
s(g219
I42
g220
Vinsert
p5229
I43
VSimpleType: JsonReader
p5230
tp5231
I1
s(g161
I42
g162
Vinsert
p5232
I42
VSimpleName: format
p5233
tp5234
I1
s(g2062
I42
g2063
Vinsert
p5235
I43
VSimpleType: Long
p5236
tp5237
I1
s(g3222
I42
g3223
Vinsert
p5238
I40
VQualifiedName: Calendar.DAY_OF_YEAR
p5239
tp5240
I1
s(g2704
I42
g2705
Vinsert
p5241
I42
VSimpleName: Exception
p5242
tp5243
F0.25
s(g2972
I42
g2973
Vinsert
p5244
I45
VStringLiteral: "GET"
p5245
tp5246
I1
s(g1836
I42
g1837
Vinsert
p5247
I21
VExpressionStatement
p5248
tp5249
I4
s(g4114
I42
g4115
Vinsert
p5250
I27
VInfixExpression: +
p5251
tp5252
I2
s(g1469
I42
g1470
Vinsert
p5253
I42
VSimpleName: getSpansByTraceIds
p5254
tp5255
I2
s(g1053
I42
g1054
Vinsert
p5256
I27
VInfixExpression: !=
p5257
tp5258
I1
s(Vinsert
p5259
I42
VSimpleName: startNewSpan
p5260
Vinsert
p5261
I8
VBlock
p5262
tp5263
I1
s(Vinsert
p5264
I42
VSimpleName: writeByte
p5265
Vinsert
p5266
I42
VSimpleName: writeByte
p5267
tp5268
F0.25
s(g3233
I42
g3234
Vinsert
p5269
I42
VSimpleName: callback
p5270
tp5271
F0.25
s(g352
I42
g353
Vinsert
p5272
I40
VQualifiedName: Constants.SERVER_SEND
p5273
tp5274
I1
s(g4749
I42
g4750
Vinsert
p5275
I42
VSimpleName: TODAY
p5276
tp5277
I1
s(Vinsert
p5278
I42
VSimpleName: clear
p5279
Vinsert
p5280
I42
VSimpleName: get
p5281
tp5282
F0.5
s(g2475
I42
g2476
Vinsert
p5283
I32
VMethodInvocation
p5284
tp5285
I10
s(Vinsert
p5286
I42
VSimpleName: create
p5287
Vinsert
p5288
I42
VSimpleName: map
p5289
tp5290
I1
s(g466
I42
g467
Vinsert
p5291
I33
VNullLiteral
p5292
tp5293
F0.25
s(Vinsert
p5294
I42
VSimpleName: builder
p5295
Vinsert
p5296
I34
VNumberLiteral: 1000
p5297
tp5298
I1
s(g3725
I42
g3726
Vinsert
p5299
I41
VReturnStatement
p5300
tp5301
I1
s(g71
I42
g72
Vinsert
p5302
I40
VQualifiedName: span.duration
p5303
tp5304
I1
s(g4072
I42
g4073
Vinsert
p5305
I41
VReturnStatement
p5306
tp5307
I5
s(g2393
I42
g2394
Vinsert
p5308
I59
VVariableDeclarationFragment
p5309
tp5310
I2
s(Vinsert
p5311
I42
VSimpleName: getName
p5312
Vinsert
p5313
I60
VVariableDeclarationStatement
p5314
tp5315
I1
s(Vinsert
p5316
I42
VSimpleName: getRawTrace
p5317
Vinsert
p5318
I42
VSimpleName: left
p5319
tp5320
I1
s(Vinsert
p5321
I42
VSimpleName: onError
p5322
Vinsert
p5323
I42
VSimpleName: successCallback
p5324
tp5325
F0.25
s(g836
I42
g837
Vinsert
p5326
I32
VMethodInvocation
p5327
tp5328
I3
s(Vinsert
p5329
I42
VSimpleName: getMessage
p5330
Vinsert
p5331
I42
VSimpleName: NoNodeAvailableException
p5332
tp5333
I4
s(g264
I42
g265
Vinsert
p5334
I31
VMethodDeclaration
p5335
tp5336
F0.25
s(g1456
I42
g1457
Vinsert
p5337
I8
VBlock
p5338
tp5339
I1
s(g778
I42
g779
Vinsert
p5340
I74
VParameterizedType: List<Span>
p5341
tp5342
I1
s(g5183
I42
g5184
Vinsert
p5343
I59
VVariableDeclarationFragment
p5344
tp5345
I2
s(g3628
I42
g3629
Vinsert
p5346
I8
VBlock
p5347
tp5348
I1
s(Vinsert
p5349
I42
VSimpleName: name
p5350
Vinsert
p5351
I27
VInfixExpression: !=
p5352
tp5353
I1
s(g1
I42
g2
Vinsert
p5354
I40
VQualifiedName: Span.Builder
p5355
tp5356
F0.25
s(g4456
I42
g4457
Vinsert
p5357
I27
VInfixExpression: ==
p5358
tp5359
I3
s(g5349
I42
g5350
Vinsert
p5360
I42
VSimpleName: nextLong
p5361
tp5362
F0.25
s(g2717
I42
g2718
Vinsert
p5363
I42
VSimpleName: storage
p5364
tp5365
F0.25
s(g3115
I42
g3116
Vinsert
p5366
I21
VExpressionStatement
p5367
tp5368
I1
s(Vinsert
p5369
I42
VSimpleName: isLoggable
p5370
Vinsert
p5371
I45
VStringLiteral: " > 10000: possibly malformed thrift"
p5372
tp5373
F0.25
s(g1136
I42
g1137
Vinsert
p5374
I42
VSimpleName: assertThat
p5375
tp5376
I1
s(g3649
I42
g3650
Vinsert
p5377
I21
VExpressionStatement
p5378
tp5379
F6.5
s(g739
I42
g740
Vinsert
p5380
I42
VSimpleName: traceId
p5381
tp5382
I1
s(g1423
I42
g1424
Vinsert
p5383
I42
VSimpleName: child
p5384
tp5385
F0.25
s(Vinsert
p5386
I42
VSimpleName: errorReading
p5387
Vinsert
p5388
I7
VAssignment: =
p5389
tp5390
I1
s(Vinsert
p5391
I42
VSimpleName: nullable
p5392
Vinsert
p5393
I40
VQualifiedName: org.jooq.impl.SQLDataType.INTEGER
p5394
tp5395
I1
s(g2033
I42
g2034
Vinsert
p5396
I45
VStringLiteral: "        \u005c"port\u005c": 65535\u005cn"
p5397
tp5398
I1
s(g234
I42
g235
Vinsert
p5399
I42
VSimpleName: isEmpty
p5400
tp5401
I1
s(g3900
I42
g3901
Vinsert
p5402
I22
VFieldAccess
p5403
tp5404
I2
s(Vinsert
p5405
I42
VSimpleName: setString
p5406
Vinsert
p5407
I42
VSimpleName: String
p5408
tp5409
F0.25
s(Vinsert
p5410
I42
VSimpleName: onSuccess
p5411
Vinsert
p5412
I43
VSimpleType: Void
p5413
tp5414
F0.25
s(g1405
I42
g1406
Vinsert
p5415
I57
VTypeLiteral
p5416
tp5417
F1.25
s(g2920
I42
g2921
Vinsert
p5418
I39
VPrimitiveType: int
p5419
tp5420
F0.25
s(Vinsert
p5421
I42
VSimpleName: enqueue
p5422
Vinsert
p5423
I42
VSimpleName: IOException
p5424
tp5425
F0.25
s(g1528
I42
g1529
Vinsert
p5426
I32
VMethodInvocation
p5427
tp5428
I7
s(g3712
I42
g3713
Vinsert
p5429
I40
VQualifiedName: KafkaCollector.Builder
p5430
tp5431
F1.5
s(g1628
I42
g1629
Vinsert
p5432
I44
VSingleVariableDeclaration
p5433
tp5434
F2.25
s(Vinsert
p5435
I42
VSimpleName: isSetKey
p5436
Vinsert
p5437
I42
VSimpleName: this_present_key
p5438
tp5439
I1
s(g191
I42
g192
Vinsert
p5440
I34
VNumberLiteral: 1000
p5441
tp5442
I1
s(g96
I42
g97
Vinsert
p5443
I32
VMethodInvocation
p5444
tp5445
I1
s(g1288
I42
g1289
Vinsert
p5446
I43
VSimpleType: Session
p5447
tp5448
F0.5
s(Vinsert
p5449
I42
VSimpleName: add
p5450
Vinsert
p5451
I40
VQualifiedName: b.key
p5452
tp5453
I1
s(Vinsert
p5454
I42
VSimpleName: get
p5455
Vinsert
p5456
I42
VSimpleName: Long
p5457
tp5458
F3.25
s(g1657
I42
g1658
Vinsert
p5459
I42
VSimpleName: decoder
p5460
tp5461
I2
s(Vinsert
p5462
I42
VSimpleName: intValue
p5463
Vinsert
p5464
I22
VFieldAccess
p5465
tp5466
F1.0
s(g4568
I42
g4569
Vinsert
p5467
I43
VSimpleType: String
p5468
tp5469
F0.5
s(g2416
I42
g2417
Vinsert
p5470
I42
VSimpleName: server
p5471
tp5472
I2
s(g3181
I42
g3182
Vinsert
p5473
I43
VSimpleType: IOException
p5474
tp5475
F0.5
s(Vinsert
p5476
I42
VSimpleName: size
p5477
Vinsert
p5478
I39
VPrimitiveType: boolean
p5479
tp5480
I3
s(Vinsert
p5481
I42
VSimpleName: apply
p5482
Vinsert
p5483
I42
VSimpleName: mem
p5484
tp5485
I5
s(Vinsert
p5486
I42
VSimpleName: getTraces
p5487
Vinsert
p5488
I12
VCatchClause
p5489
tp5490
I1
s(Vinsert
p5491
I42
VSimpleName: add
p5492
Vinsert
p5493
I42
VSimpleName: shouldUseSingleTypeIndexing
p5494
tp5495
I1
s(g1108
I42
g1109
Vinsert
p5496
I42
VSimpleName: traceID
p5497
tp5498
I1
s(g3997
I42
g3998
Vinsert
p5499
I42
VSimpleName: query
p5500
tp5501
I1
s(g2127
I42
g2128
Vinsert
p5502
I25
VIfStatement
p5503
tp5504
I1
s(Vinsert
p5505
I42
VSimpleName: arraycopy
p5506
Vinsert
p5507
I5
VArrayType: byte[]
p5508
tp5509
I2
s(Vinsert
p5510
I42
VSimpleName: addAnnotation
p5511
Vinsert
p5512
I45
VStringLiteral: "remoteEndpoint"
p5513
tp5514
I1
s(Vinsert
p5515
I42
VSimpleName: append
p5516
Vinsert
p5517
I42
VSimpleName: format
p5518
tp5519
I1
s(g532
I42
g533
Vinsert
p5520
I25
VIfStatement
p5521
tp5522
I1
s(Vinsert
p5523
I42
VSimpleName: value
p5524
Vinsert
p5525
I42
VSimpleName: SERVER
p5526
tp5527
I1
s(Vinsert
p5528
I42
VSimpleName: duration
p5529
Vinsert
p5530
I40
VQualifiedName: TType.I64
p5531
tp5532
I1
s(Vinsert
p5533
I42
VSimpleName: setBody
p5534
Vinsert
p5535
I21
VExpressionStatement
p5536
tp5537
I1
s(g1657
I42
g1658
Vinsert
p5538
I42
VSimpleName: expected
p5539
tp5540
F0.25
s(g1693
I42
g1694
Vinsert
p5541
I60
VVariableDeclarationStatement
p5542
tp5543
I1
s(g3199
I42
g3200
Vinsert
p5544
I26
VImportDeclaration
p5545
tp5546
F0.5
s(Vinsert
p5547
I42
VSimpleName: add
p5548
Vinsert
p5549
I27
VInfixExpression: *
p5550
tp5551
I1
s(g2909
I42
g2910
Vinsert
p5552
I45
VStringLiteral: "http.path"
p5553
tp5554
I1
s(g1489
I42
g1490
Vinsert
p5555
I65
VTagElement
p5556
tp5557
F0.25
s(Vinsert
p5558
I42
VSimpleName: hasNext
p5559
Vinsert
p5560
I34
VNumberLiteral: 3
p5561
tp5562
I1
s(g1871
I42
g1872
Vinsert
p5563
I42
VSimpleName: CacheBuilderSpec
p5564
tp5565
F1.25
s(g2273
I42
g2274
Vinsert
p5566
I43
VSimpleType: Span
p5567
tp5568
F0.25
s(g2145
I42
g2146
Vinsert
p5569
I42
VSimpleName: incrementBytes
p5570
tp5571
F0.5
s(g1293
I42
g1294
Vinsert
p5572
I42
VSimpleName: String
p5573
tp5574
F0.25
s(g372
I42
g373
Vinsert
p5575
I60
VVariableDeclarationStatement
p5576
tp5577
I1
s(g1146
I42
g1147
Vinsert
p5578
I42
VSimpleName: mapping
p5579
tp5580
I1
s(g26
I42
g27
Vinsert
p5581
I83
VModifier: synchronized
p5582
tp5583
F0.25
s(Vinsert
p5584
I42
VSimpleName: addResourceHandler
p5585
Vinsert
p5586
I42
VSimpleName: Override
p5587
tp5588
F0.25
s(g791
I42
g792
Vinsert
p5589
I42
VSimpleName: Args
p5590
tp5591
F0.25
s(g4275
I42
g4276
Vinsert
p5592
I22
VFieldAccess
p5593
tp5594
I1
s(g474
I42
g475
Vinsert
p5595
I42
VSimpleName: traceId
p5596
tp5597
F0.5
s(Vinsert
p5598
I42
VSimpleName: sleep
p5599
Vinsert
p5600
I21
VExpressionStatement
p5601
tp5602
I2
s(Vinsert
p5603
I42
VSimpleName: parseInt
p5604
Vinsert
p5605
I42
VSimpleName: fallback
p5606
tp5607
F0.25
s(g2920
I42
g2921
Vinsert
p5608
I43
VSimpleType: DriverException
p5609
tp5610
F0.25
s(Vinsert
p5611
I42
VSimpleName: collectValuesNamed
p5612
Vinsert
p5613
I45
VStringLiteral: "key"
p5614
tp5615
F0.25
s(Vinsert
p5616
I42
VSimpleName: isEqualTo
p5617
Vinsert
p5618
I45
VStringLiteral: "foo"
p5619
tp5620
I1
s(Vinsert
p5621
I42
VSimpleName: perform
p5622
Vinsert
p5623
I45
VStringLiteral: "/favicon.ico"
p5624
tp5625
I1
s(g4945
I42
g4946
Vinsert
p5626
I42
VSimpleName: TTransportException
p5627
tp5628
I1
s(Vinsert
p5629
I42
VSimpleName: length
p5630
Vinsert
p5631
I42
VSimpleName: partsLo
p5632
tp5633
I2
s(Vinsert
p5634
I42
VSimpleName: catchAll
p5635
Vinsert
p5636
I43
VSimpleType: IndexNameFormatter
p5637
tp5638
I1
s(g2127
I42
g2128
Vinsert
p5639
I42
VSimpleName: InetAddress
p5640
tp5641
I1
s(g600
I42
g601
Vinsert
p5642
I40
VQualifiedName: ZIPKIN_SPANS.ID
p5643
tp5644
I1
s(g334
I42
g335
Vinsert
p5645
I42
VSimpleName: guessTimestamp
p5646
tp5647
I1
s(g2054
I42
g2055
Vinsert
p5648
I13
VCharacterLiteral: '\u005cn'
p5649
tp5650
I1
s(g904
I42
g905
Vinsert
p5651
I42
VSimpleName: getUnchecked
p5652
tp5653
I1
s(g5294
I42
g5295
Vinsert
p5654
I42
VSimpleName: WEB_ENDPOINT
p5655
tp5656
I2
s(g3628
I42
g3629
Vinsert
p5657
I78
VMarkerAnnotation
p5658
tp5659
F0.25
s(g3064
I42
g3065
Vinsert
p5660
I43
VSimpleType: QueryRequest.Builder
p5661
tp5662
I1
s(g3933
I42
g3934
Vinsert
p5663
I29
VJavadoc
p5664
tp5665
F0.25
s(Vinsert
p5666
I42
VSimpleName: addAnnotation
p5667
Vinsert
p5668
I42
VSimpleName: parentId
p5669
tp5670
I2
s(g146
I42
g147
Vinsert
p5671
I42
VSimpleName: Span
p5672
tp5673
I1
s(Vinsert
p5674
I42
VSimpleName: contains
p5675
Vinsert
p5676
I42
VSimpleName: build
p5677
tp5678
I2
s(g492
I42
g493
Vinsert
p5679
I42
VSimpleName: Buffer
p5680
tp5681
I2
s(g334
I42
g335
Vinsert
p5682
I33
VNullLiteral
p5683
tp5684
I4
s(g4301
I42
g4302
Vinsert
p5685
I42
VSimpleName: DependencyLinkSpan
p5686
tp5687
I1
s(g2810
I42
g2811
Vinsert
p5688
I42
VSimpleName: latch
p5689
tp5690
I1
s(g5183
I42
g5184
Vinsert
p5691
I45
VStringLiteral: "topic1,topic2"
p5692
tp5693
I1
s(g4044
I42
g4045
Vinsert
p5694
I43
VSimpleType: OkHttpClient
p5695
tp5696
F0.25
s(g2818
I42
g2819
Vinsert
p5697
I43
VSimpleType: SimpleDateFormat
p5698
tp5699
I1
s(g4095
I42
g4096
Vinsert
p5700
I42
VSimpleName: DependencyLink
p5701
tp5702
I1
s(g4866
I42
g4867
Vinsert
p5703
I43
VSimpleType: LinkageError
p5704
tp5705
F0.25
s(g4523
I42
g4524
Vinsert
p5706
I42
VSimpleName: args
p5707
tp5708
F0.25
s(g2838
I42
g2839
Vinsert
p5709
I27
VInfixExpression: &&
p5710
tp5711
I2
s(Vinsert
p5712
I42
VSimpleName: build
p5713
Vinsert
p5714
I45
VStringLiteral: "test_zipkin_http_mixed"
p5715
tp5716
I1
s(g5510
I42
g5511
Vinsert
p5717
I61
VWhileStatement
p5718
tp5719
I1
s(Vinsert
p5720
I42
VSimpleName: strictTraceId
p5721
Vinsert
p5722
I22
VFieldAccess
p5723
tp5724
I1
s(Vinsert
p5725
I42
VSimpleName: caService
p5726
Vinsert
p5727
I25
VIfStatement
p5728
tp5729
I1
s(Vinsert
p5730
I42
VSimpleName: acceptSpansCallback
p5731
Vinsert
p5732
I42
VSimpleName: isEmpty
p5733
tp5734
I1
s(g4539
I42
g4540
Vinsert
p5735
I43
VSimpleType: CallbackCaptor
p5736
tp5737
I2
s(Vinsert
p5738
I42
VSimpleName: create
p5739
Vinsert
p5740
I34
VNumberLiteral: 1000
p5741
tp5742
I5
s(g367
I42
g368
Vinsert
p5743
I42
VSimpleName: Record1
p5744
tp5745
F1.25
s(Vinsert
p5746
I42
VSimpleName: getBean
p5747
Vinsert
p5748
I21
VExpressionStatement
p5749
tp5750
F9.25
s(g2771
I42
g2772
Vinsert
p5751
I43
VSimpleType: String
p5752
tp5753
F0.25
s(g2609
I42
g2610
Vinsert
p5754
I42
VSimpleName: nameEscaped
p5755
tp5756
I1
s(g6
I42
g7
Vinsert
p5757
I8
VBlock
p5758
tp5759
I1
s(g4903
I42
g4904
Vinsert
p5760
I42
VSimpleName: toString
p5761
tp5762
F0.25
s(g3788
I42
g3789
Vinsert
p5763
I74
VParameterizedType: List<Span>
p5764
tp5765
F0.25
s(g2247
I42
g2248
Vinsert
p5766
I32
VMethodInvocation
p5767
tp5768
I4
s(g2954
I42
g2955
Vinsert
p5769
I42
VSimpleName: serviceName
p5770
tp5771
I2
s(g1464
I42
g1465
Vinsert
p5772
I42
VSimpleName: Collections
p5773
tp5774
I1
s(Vinsert
p5775
I42
VSimpleName: get
p5776
Vinsert
p5777
I40
VQualifiedName: ZIPKIN_ANNOTATIONS.TRACE_ID_HIGH
p5778
tp5779
I1
s(Vinsert
p5780
I42
VSimpleName: set
p5781
Vinsert
p5782
I42
VSimpleName: UTC
p5783
tp5784
I1
s(Vinsert
p5785
I42
VSimpleName: debug
p5786
Vinsert
p5787
I27
VInfixExpression: !=
p5788
tp5789
I1
s(Vinsert
p5790
I42
VSimpleName: builder
p5791
Vinsert
p5792
I42
VSimpleName: Exception
p5793
tp5794
F0.5
s(g1283
I42
g1284
Vinsert
p5795
I44
VSingleVariableDeclaration
p5796
tp5797
I10
s(g2619
I42
g2620
Vinsert
p5798
I42
VSimpleName: JsonReaders
p5799
tp5800
I2
s(g4733
I42
g4734
Vinsert
p5801
I74
VParameterizedType: Callback<Void>
p5802
tp5803
F0.75
s(g2802
I42
g2803
Vinsert
p5804
I65
VTagElement
p5805
tp5806
F0.25
s(Vinsert
p5807
I42
VSimpleName: filter
p5808
Vinsert
p5809
I34
VNumberLiteral: 0.0f
p5810
tp5811
I1
s(Vinsert
p5812
I42
VSimpleName: retry
p5813
Vinsert
p5814
I42
VSimpleName: receivedResponses
p5815
tp5816
F0.25
s(g3094
I42
g3095
Vinsert
p5817
I42
VSimpleName: links
p5818
tp5819
F0.25
s(g5785
I42
g5786
Vinsert
p5820
I33
VNullLiteral
p5821
tp5822
I1
s(Vinsert
p5823
I42
VSimpleName: set
p5824
Vinsert
p5825
I42
VSimpleName: DefaultConfiguration
p5826
tp5827
I1
s(g1811
I42
g1812
Vinsert
p5828
I23
VFieldDeclaration
p5829
tp5830
I1
s(Vinsert
p5831
I42
VSimpleName: test
p5832
Vinsert
p5833
I21
VExpressionStatement
p5834
tp5835
I1
s(g3296
I42
g3297
Vinsert
p5836
I42
VSimpleName: delegate
p5837
tp5838
F0.25
s(g1197
I42
g1198
Vinsert
p5839
I42
VSimpleName: toString
p5840
tp5841
I1
s(Vinsert
p5842
I42
VSimpleName: putTrace
p5843
Vinsert
p5844
I42
VSimpleName: DependencyLinkSpan
p5845
tp5846
I1
s(g3212
I42
g3213
Vinsert
p5847
I43
VSimpleType: Span2
p5848
tp5849
F0.25
s(g3745
I42
g3746
Vinsert
p5850
I83
VModifier: private
p5851
tp5852
F0.5
s(g1172
I42
g1173
Vinsert
p5853
I44
VSingleVariableDeclaration
p5854
tp5855
F2.5
s(Vinsert
p5856
I42
VSimpleName: enqueue
p5857
Vinsert
p5858
I66
VTextElement: Declaring queries alphabetically helps simplify amazon signature logic 
p5859
tp5860
F0.25
s(g4673
I42
g4674
Vinsert
p5861
I42
VSimpleName: checkState
p5862
tp5863
I1
s(g497
I42
g498
Vinsert
p5864
I41
VReturnStatement
p5865
tp5866
F1.25
s(g2156
I42
g2157
Vinsert
p5867
I37
VPostfixExpression: ++
p5868
tp5869
I1
s(g1728
I42
g1729
Vinsert
p5870
I42
VSimpleName: Override
p5871
tp5872
F0.75
s(Vinsert
p5873
I42
VSimpleName: builder
p5874
Vinsert
p5875
I34
VNumberLiteral: 15
p5876
tp5877
I1
s(g329
I42
g330
Vinsert
p5878
I34
VNumberLiteral: 1234L
p5879
tp5880
I1
s(g4182
I42
g4183
Vinsert
p5881
I42
VSimpleName: Tables
p5882
tp5883
F0.5
s(Vinsert
p5884
I42
VSimpleName: getVersion
p5885
Vinsert
p5886
I45
VStringLiteral: "    \u005c"build_date\u005c" : \u005c"2017-05-31T23:38:55.271Z\u005c",\u005cn"
p5887
tp5888
I1
s(Vinsert
p5889
I42
VSimpleName: acceptedMessage
p5890
Vinsert
p5891
I45
VStringLiteral: "http"
p5892
tp5893
F0.25
s(g5842
I42
g5843
Vinsert
p5894
I42
VSimpleName: singleLinks
p5895
tp5896
I1
s(Vinsert
p5897
I42
VSimpleName: asyncToBlocking
p5898
Vinsert
p5899
I32
VMethodInvocation
p5900
tp5901
I1
s(Vinsert
p5902
I42
VSimpleName: getBytes
p5903
Vinsert
p5904
I43
VSimpleType: String
p5905
tp5906
F0.75
s(g2977
I42
g2978
Vinsert
p5907
I42
VSimpleName: Long
p5908
tp5909
F0.5
s(Vinsert
p5910
I42
VSimpleName: write
p5911
Vinsert
p5912
I59
VVariableDeclarationFragment
p5913
tp5914
I3
s(Vinsert
p5915
I42
VSimpleName: getLogsUrl
p5916
Vinsert
p5917
I42
VSimpleName: ZipkinUiProperties
p5918
tp5919
I1
s(g4488
I42
g4489
Vinsert
p5920
I41
VReturnStatement
p5921
tp5922
I1
s(g871
I42
g872
Vinsert
p5923
I42
VSimpleName: length
p5924
tp5925
I1
s(g1836
I42
g1837
Vinsert
p5926
I4
VArrayInitializer
p5927
tp5928
I2
s(g2732
I42
g2733
Vinsert
p5929
I21
VExpressionStatement
p5930
tp5931
I1
s(g5045
I42
g5046
Vinsert
p5932
I40
VQualifiedName: ZooKeeperSampler.Builder
p5933
tp5934
I1
s(g239
I42
g240
Vinsert
p5935
I39
VPrimitiveType: void
p5936
tp5937
F0.25
s(Vinsert
p5938
I42
VSimpleName: put
p5939
Vinsert
p5940
I22
VFieldAccess
p5941
tp5942
F0.25
s(g4895
I42
g4896
Vinsert
p5943
I42
VSimpleName: indexSpans
p5944
tp5945
I1
s(g2745
I42
g2746
Vinsert
p5946
I42
VSimpleName: LINK_FIELDS_WITHOUT_TRACE_ID_HIGH
p5947
tp5948
F0.25
s(Vinsert
p5949
I42
VSimpleName: setId
p5950
Vinsert
p5951
I42
VSimpleName: expectMessage
p5952
tp5953
I1
s(g3212
I42
g3213
Vinsert
p5954
I39
VPrimitiveType: byte
p5955
tp5956
F0.5
s(g2314
I42
g2315
Vinsert
p5957
I42
VSimpleName: BinaryAnnotation
p5958
tp5959
I2
s(g2314
I42
g2315
Vinsert
p5960
I40
VQualifiedName: s.binaryAnnotations
p5961
tp5962
I2
s(g5831
I42
g5832
Vinsert
p5963
I76
VWildcardType: ?
p5964
tp5965
F0.25
s(g1385
I42
g1386
Vinsert
p5966
I42
VSimpleName: result
p5967
tp5968
I8
s(g3083
I42
g3084
Vinsert
p5969
I59
VVariableDeclarationFragment
p5970
tp5971
I1
s(g5603
I42
g5604
Vinsert
p5972
I41
VReturnStatement
p5973
tp5974
I1
s(g352
I42
g353
Vinsert
p5975
I60
VVariableDeclarationStatement
p5976
tp5977
I2
s(g3804
I42
g3805
Vinsert
p5978
I32
VMethodInvocation
p5979
tp5980
I11
s(g4967
I42
g4968
Vinsert
p5981
I42
VSimpleName: formatter
p5982
tp5983
I1
s(Vinsert
p5984
I42
VSimpleName: next
p5985
Vinsert
p5986
I34
VNumberLiteral: 0
p5987
tp5988
I1
s(g1346
I42
g1347
Vinsert
p5989
I4
VArrayInitializer
p5990
tp5991
I1
s(g621
I42
g622
Vinsert
p5992
I52
VThisExpression
p5993
tp5994
F1.25
s(Vinsert
p5995
I42
VSimpleName: isNull
p5996
Vinsert
p5997
I40
VQualifiedName: Kind.UNKNOWN
p5998
tp5999
I1
s(Vinsert
p6000
I42
VSimpleName: perform
p6001
Vinsert
p6002
I43
VSimpleType: MockHttpServletRequestBuilder
p6003
tp6004
F0.75
s(Vinsert
p6005
I42
VSimpleName: withCredentials
p6006
Vinsert
p6007
I27
VInfixExpression: &&
p6008
tp6009
I1
s(g1474
I42
g1475
Vinsert
p6010
I42
VSimpleName: Annotation
p6011
tp6012
F0.25
s(g5558
I42
g5559
Vinsert
p6013
I27
VInfixExpression: &&
p6014
tp6015
I2
s(g2514
I42
g2515
Vinsert
p6016
I43
VSimpleType: StorageComponent
p6017
tp6018
F0.25
s(g2179
I42
g2180
Vinsert
p6019
I32
VMethodInvocation
p6020
tp6021
F1.5
s(g1836
I42
g1837
Vinsert
p6022
I13
VCharacterLiteral: '\u005cf'
p6023
tp6024
I2
s(Vinsert
p6025
I42
VSimpleName: get
p6026
Vinsert
p6027
I42
VSimpleName: ElasticsearchHttpNamesFallbackTest
p6028
tp6029
F0.5
s(g577
I42
g578
Vinsert
p6030
I42
VSimpleName: CassandraStorage
p6031
tp6032
I2
s(g3702
I42
g3703
Vinsert
p6033
I43
VSimpleType: String
p6034
tp6035
F5.25
s(g1260
I42
g1261
Vinsert
p6036
I42
VSimpleName: wrap
p6037
tp6038
I1
s(g1811
I42
g1812
Vinsert
p6039
I83
VModifier: static
p6040
tp6041
I1
s(g3094
I42
g3095
Vinsert
p6042
I5
VArrayType: byte[]
p6043
tp6044
F0.5
s(Vinsert
p6045
I42
VSimpleName: initialResponse
p6046
Vinsert
p6047
I13
VCharacterLiteral: 'b'
p6048
tp6049
I1
s(Vinsert
p6050
I42
VSimpleName: isEqualTo
p6051
Vinsert
p6052
I42
VSimpleName: Annotation
p6053
tp6054
I1
s(g426
I42
g427
Vinsert
p6055
I40
VQualifiedName: localSpan.timestamp
p6056
tp6057
I1
s(Vinsert
p6058
I42
VSimpleName: get
p6059
Vinsert
p6060
I43
VSimpleType: Annotation
p6061
tp6062
I1
s(Vinsert
p6063
I42
VSimpleName: readSpan
p6064
Vinsert
p6065
I78
VMarkerAnnotation
p6066
tp6067
F0.75
s(g2192
I42
g2193
Vinsert
p6068
I74
VParameterizedType: ArrayList<>
p6069
tp6070
I1
s(Vinsert
p6071
I42
VSimpleName: toCharArray
p6072
Vinsert
p6073
I45
VStringLiteral: " should be a 1 to 16 character lower-hex string with no prefix"
p6074
tp6075
I1
s(g3307
I42
g3308
Vinsert
p6076
I43
VSimpleType: String
p6077
tp6078
F1.25
s(Vinsert
p6079
I42
VSimpleName: isEmpty
p6080
Vinsert
p6081
I42
VSimpleName: span
p6082
tp6083
F0.25
s(Vinsert
p6084
I42
VSimpleName: getClass
p6085
Vinsert
p6086
I42
VSimpleName: start
p6087
tp6088
I2
s(Vinsert
p6089
I42
VSimpleName: writeSpans
p6090
Vinsert
p6091
I42
VSimpleName: IOException
p6092
tp6093
F0.25
s(Vinsert
p6094
I42
VSimpleName: prepareBulk
p6095
Vinsert
p6096
I42
VSimpleName: BulkRequestBuilder
p6097
tp6098
I1
s(Vinsert
p6099
I42
VSimpleName: retry
p6100
Vinsert
p6101
I42
VSimpleName: writeType
p6102
tp6103
F0.25
s(g977
I42
g978
Vinsert
p6104
I42
VSimpleName: indexFetchMultiplier
p6105
tp6106
F0.25
s(g1197
I42
g1198
Vinsert
p6107
I42
VSimpleName: builder
p6108
tp6109
F5.25
s(g1602
I42
g1603
Vinsert
p6110
I45
VStringLiteral: "foo"
p6111
tp6112
I1
s(Vinsert
p6113
I42
VSimpleName: get
p6114
Vinsert
p6115
I42
VSimpleName: lazyRepository
p6116
tp6117
I1
s(g4380
I42
g4381
Vinsert
p6118
I43
VSimpleType: IOException
p6119
tp6120
F0.25
s(g1448
I42
g1449
Vinsert
p6121
I43
VSimpleType: com.twitter.zipkin.gen.Annotation
p6122
tp6123
I1
s(Vinsert
p6124
I42
VSimpleName: isEqualTo
p6125
Vinsert
p6126
I45
VStringLiteral: "2001:0:3:4:5:6:7:8"
p6127
tp6128
I1
s(Vinsert
p6129
I42
VSimpleName: check
p6130
Vinsert
p6131
I40
VQualifiedName: ElasticsearchTestGraph.INSTANCE.storage
p6132
tp6133
I1
s(Vinsert
p6134
I42
VSimpleName: create
p6135
Vinsert
p6136
I83
VModifier: static
p6137
tp6138
F2.25
s(g1767
I42
g1768
Vinsert
p6139
I45
VStringLiteral: "serviceName"
p6140
tp6141
I1
s(g41
I42
g42
Vinsert
p6142
I21
VExpressionStatement
p6143
tp6144
I2
s(Vinsert
p6145
I42
VSimpleName: compareTo
p6146
Vinsert
p6147
I42
VSimpleName: String
p6148
tp6149
I1
s(g5584
I42
g5585
Vinsert
p6150
I43
VSimpleType: ResourceHandlerRegistry
p6151
tp6152
F0.25
s(g2514
I42
g2515
Vinsert
p6153
I29
VJavadoc
p6154
tp6155
F0.25
s(g2870
I42
g2871
Vinsert
p6156
I43
VSimpleType: ParseException
p6157
tp6158
F0.25
s(g2169
I42
g2170
Vinsert
p6159
I16
VConditionalExpression
p6160
tp6161
I1
s(Vinsert
p6162
I42
VSimpleName: getBytes
p6163
Vinsert
p6164
I22
VFieldAccess
p6165
tp6166
I1
s(Vinsert
p6167
I42
VSimpleName: value
p6168
Vinsert
p6169
I83
VModifier: public
p6170
tp6171
F0.5
s(Vinsert
p6172
I42
VSimpleName: get
p6173
Vinsert
p6174
I42
VSimpleName: Test
p6175
tp6176
F0.75
s(g1159
I42
g1160
Vinsert
p6177
I27
VInfixExpression: *
p6178
tp6179
F1.25
s(g1584
I42
g1585
Vinsert
p6180
I42
VSimpleName: parentId
p6181
tp6182
I1
s(g562
I42
g563
Vinsert
p6183
I27
VInfixExpression: ==
p6184
tp6185
I1
s(g1192
I42
g1193
Vinsert
p6186
I32
VMethodInvocation
p6187
tp6188
I2
s(g821
I42
g822
Vinsert
p6189
I40
VQualifiedName: SpanBytesCodec.JSON_V2
p6190
tp6191
F0.75
s(g1007
I42
g1008
Vinsert
p6192
I42
VSimpleName: field
p6193
tp6194
I1
s(Vinsert
p6195
I42
VSimpleName: entrySet
p6196
Vinsert
p6197
I70
VEnhancedForStatement
p6198
tp6199
I1
s(g61
I42
g62
Vinsert
p6200
I32
VMethodInvocation
p6201
tp6202
F2.5
s(Vinsert
p6203
I42
VSimpleName: toString
p6204
Vinsert
p6205
I32
VMethodInvocation
p6206
tp6207
F12.25
s(g4587
I42
g4588
Vinsert
p6208
I42
VSimpleName: Test
p6209
tp6210
F0.75
s(Vinsert
p6211
I42
VSimpleName: readSpan
p6212
Vinsert
p6213
I45
VStringLiteral: "      \u005c"value\u005c": \u005c"cs\u005c",\u005cn"
p6214
tp6215
I1
s(g3599
I42
g3600
Vinsert
p6216
I43
VSimpleType: String
p6217
tp6218
F0.25
s(g344
I42
g345
Vinsert
p6219
I32
VMethodInvocation
p6220
tp6221
I2
s(g436
I42
g437
Vinsert
p6222
I42
VSimpleName: String
p6223
tp6224
I2
s(g101
I42
g102
Vinsert
p6225
I25
VIfStatement
p6226
tp6227
I2
s(g426
I42
g427
Vinsert
p6228
I43
VSimpleType: List
p6229
tp6230
F1.5
s(Vinsert
p6231
I42
VSimpleName: put
p6232
Vinsert
p6233
I14
VClassInstanceCreation
p6234
tp6235
F4.25
s(Vinsert
p6236
I42
VSimpleName: getListenable
p6237
Vinsert
p6238
I43
VSimpleType: Exception
p6239
tp6240
I1
s(g461
I42
g462
Vinsert
p6241
I42
VSimpleName: List
p6242
tp6243
I2
s(g3072
I42
g3073
Vinsert
p6244
I43
VSimpleType: SpanStore
p6245
tp6246
F0.25
s(g6129
I42
g6130
Vinsert
p6247
I43
VSimpleType: IOException
p6248
tp6249
F0.25
s(g2704
I42
g2705
Vinsert
p6250
I42
VSimpleName: close
p6251
tp6252
I1
s(g3110
I42
g3111
Vinsert
p6253
I42
VSimpleName: storage
p6254
tp6255
I1
s(g704
I42
g705
Vinsert
p6256
I42
VSimpleName: assertThat
p6257
tp6258
I1
s(g977
I42
g978
Vinsert
p6259
I32
VMethodInvocation
p6260
tp6261
I4
s(g6195
I42
g6196
Vinsert
p6262
I43
VSimpleType: Long
p6263
tp6264
I1
s(g4895
I42
g4896
Vinsert
p6265
I42
VSimpleName: HttpBulkSpanIndexer
p6266
tp6267
I1
s(g3258
I42
g3259
Vinsert
p6268
I34
VNumberLiteral: 8080
p6269
tp6270
F0.25
s(g3199
I42
g3200
Vinsert
p6271
I40
VQualifiedName: io.zipkin.Constants
p6272
tp6273
F0.25
s(g3186
I42
g3187
Vinsert
p6274
I43
VSimpleType: Span
p6275
tp6276
F0.25
s(g1987
I42
g1988
Vinsert
p6277
I43
VSimpleType: Record
p6278
tp6279
I5
s(g1688
I42
g1689
Vinsert
p6280
I85
VDimension
p6281
tp6282
I1
s(g4557
I42
g4558
Vinsert
p6283
I42
VSimpleName: Util
p6284
tp6285
I1
s(g4285
I42
g4286
Vinsert
p6286
I43
VSimpleType: List
p6287
tp6288
I3
s(g679
I42
g680
Vinsert
p6289
I27
VInfixExpression: ==
p6290
tp6291
I1
s(g5616
I42
g5617
Vinsert
p6292
I42
VSimpleName: parentId
p6293
tp6294
I1
s(g4171
I42
g4172
Vinsert
p6295
I42
VSimpleName: Value
p6296
tp6297
F0.5
s(g2684
I42
g2685
Vinsert
p6298
I42
VSimpleName: Test
p6299
tp6300
F0.75
s(Vinsert
p6301
I42
VSimpleName: get
p6302
Vinsert
p6303
I42
VSimpleName: ElasticsearchHttpSpanConsumerTest
p6304
tp6305
F0.75
s(g542
I42
g543
Vinsert
p6306
I62
VInstanceofExpression
p6307
tp6308
I1
s(g3136
I42
g3137
Vinsert
p6309
I39
VPrimitiveType: void
p6310
tp6311
F0.25
s(g4435
I42
g4436
Vinsert
p6312
I40
VQualifiedName: Constants.CLIENT_RECV
p6313
tp6314
I1
s(Vinsert
p6315
I42
VSimpleName: get
p6316
Vinsert
p6317
I42
VSimpleName: Field
p6318
tp6319
F0.5
s(Vinsert
p6320
I42
VSimpleName: builder
p6321
Vinsert
p6322
I42
VSimpleName: traceCount
p6323
tp6324
I2
s(g166
I42
g167
Vinsert
p6325
I21
VExpressionStatement
p6326
tp6327
I2
s(g4621
I42
g4622
Vinsert
p6328
I42
VSimpleName: span
p6329
tp6330
I1
s(g3263
I42
g3264
Vinsert
p6331
I43
VSimpleType: List
p6332
tp6333
F0.25
s(g4248
I42
g4249
Vinsert
p6334
I42
VSimpleName: ScribeCollector
p6335
tp6336
F0.25
s(Vinsert
p6337
I42
VSimpleName: builder
p6338
Vinsert
p6339
I42
VSimpleName: testToStringIsJson_ipv4Port
p6340
tp6341
F0.25
s(Vinsert
p6342
I42
VSimpleName: keyspace
p6343
Vinsert
p6344
I43
VSimpleType: String
p6345
tp6346
F0.25
s(Vinsert
p6347
I42
VSimpleName: expect
p6348
Vinsert
p6349
I43
VSimpleType: ZipkinElasticsearchStorageAutoConfiguration
p6350
tp6351
I1
s(g4866
I42
g4867
Vinsert
p6352
I42
VSimpleName: responseBody
p6353
tp6354
F0.25
s(Vinsert
p6355
I42
VSimpleName: overrides
p6356
Vinsert
p6357
I42
VSimpleName: String
p6358
tp6359
F0.5
s(g2604
I42
g2605
Vinsert
p6360
I42
VSimpleName: groupId
p6361
tp6362
I1
s(Vinsert
p6363
I42
VSimpleName: emptyList
p6364
Vinsert
p6365
I42
VSimpleName: emptyList
p6366
tp6367
F0.25
s(g436
I42
g437
Vinsert
p6368
I60
VVariableDeclarationStatement
p6369
tp6370
I1
s(Vinsert
p6371
I42
VSimpleName: run
p6372
Vinsert
p6373
I42
VSimpleName: INSTANCE
p6374
tp6375
F0.25
s(Vinsert
p6376
I42
VSimpleName: getTraces
p6377
Vinsert
p6378
I34
VNumberLiteral: 3L
p6379
tp6380
I1
s(g2875
I42
g2876
Vinsert
p6381
I42
VSimpleName: JDBCTestGraph
p6382
tp6383
F0.25
s(g4034
I42
g4035
Vinsert
p6384
I34
VNumberLiteral: 12
p6385
tp6386
I1
s(Vinsert
p6387
I42
VSimpleName: onSuccess
p6388
Vinsert
p6389
I42
VSimpleName: isEmpty
p6390
tp6391
I1
s(g3823
I42
g3824
Vinsert
p6392
I21
VExpressionStatement
p6393
tp6394
I3
s(g6203
I42
g6204
Vinsert
p6395
I40
VQualifiedName: com.google.gson.stream.JsonToken.NULL
p6396
tp6397
F0.25
s(g3155
I42
g3156
Vinsert
p6398
I41
VReturnStatement
p6399
tp6400
I2
s(g719
I42
g720
Vinsert
p6401
I42
VSimpleName: Override
p6402
tp6403
F0.75
s(g704
I42
g705
Vinsert
p6404
I42
VSimpleName: of
p6405
tp6406
I1
s(Vinsert
p6407
I42
VSimpleName: arraycopy
p6408
Vinsert
p6409
I42
VSimpleName: pos
p6410
tp6411
I1
s(g3607
I42
g3608
Vinsert
p6412
I43
VSimpleType: Producer
p6413
tp6414
I4
s(g91
I42
g92
Vinsert
p6415
I27
VInfixExpression: ==
p6416
tp6417
I3
s(g1856
I42
g1857
Vinsert
p6418
I42
VSimpleName: b
p6419
tp6420
I1
s(Vinsert
p6421
I42
VSimpleName: callWithTimeout
p6422
Vinsert
p6423
I42
VSimpleName: LinkageError
p6424
tp6425
F0.25
s(Vinsert
p6426
I42
VSimpleName: apply
p6427
Vinsert
p6428
I43
VSimpleType: Callback
p6429
tp6430
I1
s(Vinsert
p6431
I42
VSimpleName: create
p6432
Vinsert
p6433
I42
VSimpleName: dependencies
p6434
tp6435
I1
s(g851
I42
g852
Vinsert
p6436
I40
VQualifiedName: config.ensureSchema
p6437
tp6438
F0.25
s(g1367
I42
g1368
Vinsert
p6439
I31
VMethodDeclaration
p6440
tp6441
F0.25
s(g2920
I42
g2921
Vinsert
p6442
I42
VSimpleName: cl
p6443
tp6444
F0.25
s(g537
I42
g538
Vinsert
p6445
I40
VQualifiedName: processor.connector
p6446
tp6447
I1
s(g646
I42
g647
Vinsert
p6448
I59
VVariableDeclarationFragment
p6449
tp6450
F4.5
s(g919
I42
g920
Vinsert
p6451
I43
VSimpleType: List
p6452
tp6453
I4
s(Vinsert
p6454
I42
VSimpleName: nextString
p6455
Vinsert
p6456
I32
VMethodInvocation
p6457
tp6458
I11
s(g5598
I42
g5599
Vinsert
p6459
I8
VBlock
p6460
tp6461
I2
s(g5725
I42
g5726
Vinsert
p6462
I40
VQualifiedName: Constants.CLIENT_ADDR
p6463
tp6464
I1
s(g5584
I42
g5585
Vinsert
p6465
I42
VSimpleName: registry
p6466
tp6467
F1.25
s(g2103
I42
g2104
Vinsert
p6468
I42
VSimpleName: body
p6469
tp6470
I1
s(Vinsert
p6471
I42
VSimpleName: builder
p6472
Vinsert
p6473
I40
VQualifiedName: ImmutableSet.Builder
p6474
tp6475
I1
s(g1058
I42
g1059
Vinsert
p6476
I45
VStringLiteral: "get"
p6477
tp6478
F0.25
s(g5112
I42
g5113
Vinsert
p6479
I42
VSimpleName: Test
p6480
tp6481
F0.5
s(Vinsert
p6482
I42
VSimpleName: iterator
p6483
Vinsert
p6484
I58
VVariableDeclarationExpression
p6485
tp6486
I2
s(g4597
I42
g4598
Vinsert
p6487
I43
VSimpleType: ZipkinElasticsearchStorageProperties
p6488
tp6489
F0.25
s(g783
I42
g784
Vinsert
p6490
I59
VVariableDeclarationFragment
p6491
tp6492
I1
s(g3181
I42
g3182
Vinsert
p6493
I42
VSimpleName: IOException
p6494
tp6495
F0.5
s(g3833
I42
g3834
Vinsert
p6496
I42
VSimpleName: chain
p6497
tp6498
I1
s(g2771
I42
g2772
Vinsert
p6499
I43
VSimpleType: ResponseEntity.BodyBuilder
p6500
tp6501
I1
s(g1886
I42
g1887
Vinsert
p6502
I40
VQualifiedName: java.util.List
p6503
tp6504
I1
s(g2689
I42
g2690
Vinsert
p6505
I41
VReturnStatement
p6506
tp6507
F1.25
s(Vinsert
p6508
I42
VSimpleName: fromSpan
p6509
Vinsert
p6510
I34
VNumberLiteral: 0
p6511
tp6512
F1.25
s(g4469
I42
g4470
Vinsert
p6513
I34
VNumberLiteral: 0
p6514
tp6515
F0.25
s(g6063
I42
g6064
Vinsert
p6516
I42
VSimpleName: span1
p6517
tp6518
F0.25
s(g436
I42
g437
Vinsert
p6519
I43
VSimpleType: Set
p6520
tp6521
I1
s(Vinsert
p6522
I42
VSimpleName: readSpan
p6523
Vinsert
p6524
I42
VSimpleName: Object
p6525
tp6526
F0.5
s(g4171
I42
g4172
Vinsert
p6527
I79
VSingleMemberAnnotation
p6528
tp6529
F0.5
s(g3783
I42
g3784
Vinsert
p6530
I42
VSimpleName: Span
p6531
tp6532
I2
s(g1518
I42
g1519
Vinsert
p6533
I42
VSimpleName: build
p6534
tp6535
I1
s(Vinsert
p6536
I42
VSimpleName: hasNext
p6537
Vinsert
p6538
I21
VExpressionStatement
p6539
tp6540
I1
s(Vinsert
p6541
I42
VSimpleName: expect
p6542
Vinsert
p6543
I38
VPrefixExpression: -
p6544
tp6545
F0.25
s(g5166
I42
g5167
Vinsert
p6546
I40
VQualifiedName: zipkin.storage.cassandra.CassandraStorage
p6547
tp6548
F0.25
s(g3804
I42
g3805
Vinsert
p6549
I42
VSimpleName: fromJson
p6550
tp6551
I1
s(Vinsert
p6552
I42
VSimpleName: duration
p6553
Vinsert
p6554
I42
VSimpleName: id
p6555
tp6556
I1
s(g71
I42
g72
Vinsert
p6557
I42
VSimpleName: storeServiceSpanName
p6558
tp6559
I1
s(g861
I42
g862
Vinsert
p6560
I42
VSimpleName: Codec
p6561
tp6562
I1
s(g2717
I42
g2718
Vinsert
p6563
I45
VStringLiteral: "Cannot gunzip spans"
p6564
tp6565
I1
s(g1826
I42
g1827
Vinsert
p6566
I42
VSimpleName: getCurrentServerSpan
p6567
tp6568
I1
s(Vinsert
p6569
I42
VSimpleName: addAnnotation
p6570
Vinsert
p6571
I40
VQualifiedName: zipkin.Annotation
p6572
tp6573
I1
s(g2255
I42
g2256
Vinsert
p6574
I42
VSimpleName: Executor
p6575
tp6576
F0.25
s(g3340
I42
g3341
Vinsert
p6577
I60
VVariableDeclarationStatement
p6578
tp6579
I1
s(g4493
I42
g4494
Vinsert
p6580
I42
VSimpleName: b
p6581
tp6582
I1
s(g2781
I42
g2782
Vinsert
p6583
I41
VReturnStatement
p6584
tp6585
F10.25
s(g5984
I42
g5985
Vinsert
p6586
I42
VSimpleName: limit
p6587
tp6588
I1
s(g1085
I42
g1086
Vinsert
p6589
I60
VVariableDeclarationStatement
p6590
tp6591
I1
s(g3823
I42
g3824
Vinsert
p6592
I42
VSimpleName: Set
p6593
tp6594
F0.25
s(Vinsert
p6595
I42
VSimpleName: add
p6596
Vinsert
p6597
I42
VSimpleName: isEmpty
p6598
tp6599
I2
s(g562
I42
g563
Vinsert
p6600
I32
VMethodInvocation
p6601
tp6602
I18
s(g3412
I42
g3413
Vinsert
p6603
I42
VSimpleName: FastStringReader
p6604
tp6605
I1
s(g6063
I42
g6064
Vinsert
p6606
I42
VSimpleName: readSpan_thrift
p6607
tp6608
F0.25
s(g146
I42
g147
Vinsert
p6609
I42
VSimpleName: accept
p6610
tp6611
I2
s(g962
I42
g963
Vinsert
p6612
I45
VStringLiteral: "binary annotation key was empty"
p6613
tp6614
I1
s(Vinsert
p6615
I42
VSimpleName: isEmpty
p6616
Vinsert
p6617
I42
VSimpleName: value
p6618
tp6619
I1
s(g1247
I42
g1248
Vinsert
p6620
I52
VThisExpression
p6621
tp6622
F0.5
s(g5126
I42
g5127
Vinsert
p6623
I42
VSimpleName: ResultSetFuture
p6624
tp6625
F0.25
s(g3974
I42
g3975
Vinsert
p6626
I45
VStringLiteral: "    \u005c"lucene_version\u005c" : \u005c"4.10.4\u005c"\u005cn"
p6627
tp6628
I1
s(g4469
I42
g4470
Vinsert
p6629
I32
VMethodInvocation
p6630
tp6631
I1
s(g3115
I42
g3116
Vinsert
p6632
I32
VMethodInvocation
p6633
tp6634
I3
s(Vinsert
p6635
I42
VSimpleName: readSpans
p6636
Vinsert
p6637
I42
VSimpleName: span
p6638
tp6639
F2.5
s(g2823
I42
g2824
Vinsert
p6640
I34
VNumberLiteral: 0x1f
p6641
tp6642
I1
s(g2335
I42
g2336
Vinsert
p6643
I42
VSimpleName: request1
p6644
tp6645
I2
s(g1172
I42
g1173
Vinsert
p6646
I32
VMethodInvocation
p6647
tp6648
I18
s(g3318
I42
g3319
Vinsert
p6649
I38
VPrefixExpression: -
p6650
tp6651
I1
s(g2388
I42
g2389
Vinsert
p6652
I2
VArrayAccess
p6653
tp6654
I4
s(g5435
I42
g5436
Vinsert
p6655
I42
VSimpleName: that
p6656
tp6657
I1
s(Vinsert
p6658
I42
VSimpleName: getServiceNames
p6659
Vinsert
p6660
I42
VSimpleName: assertThat
p6661
tp6662
I1
s(Vinsert
p6663
I42
VSimpleName: spanConsumer
p6664
Vinsert
p6665
I14
VClassInstanceCreation
p6666
tp6667
I2
s(g886
I42
g887
Vinsert
p6668
I76
VWildcardType: ?
p6669
tp6670
I1
s(g4469
I42
g4470
Vinsert
p6671
I42
VSimpleName: port
p6672
tp6673
F0.25
s(g3115
I42
g3116
Vinsert
p6674
I42
VSimpleName: isEmpty
p6675
tp6676
F0.25
s(Vinsert
p6677
I42
VSimpleName: isSetParent_id
p6678
Vinsert
p6679
I39
VPrimitiveType: void
p6680
tp6681
F0.25
s(g3176
I42
g3177
Vinsert
p6682
I52
VThisExpression
p6683
tp6684
F0.25
s(Vinsert
p6685
I42
VSimpleName: builder
p6686
Vinsert
p6687
I42
VSimpleName: clusterName
p6688
tp6689
I1
s(g4011
I42
g4012
Vinsert
p6690
I41
VReturnStatement
p6691
tp6692
I1
s(g4866
I42
g4867
Vinsert
p6693
I42
VSimpleName: enqueue
p6694
tp6695
I1
s(g2005
I42
g2006
Vinsert
p6696
I42
VSimpleName: jsonReader
p6697
tp6698
I1
s(Vinsert
p6699
I42
VSimpleName: debug
p6700
Vinsert
p6701
I40
VQualifiedName: builder.id
p6702
tp6703
I1
s(g5316
I42
g5317
Vinsert
p6704
I59
VVariableDeclarationFragment
p6705
tp6706
I2
s(Vinsert
p6707
I42
VSimpleName: hashCode
p6708
Vinsert
p6709
I27
VInfixExpression: ^
p6710
tp6711
I2
s(g4367
I42
g4368
Vinsert
p6712
I42
VSimpleName: service
p6713
tp6714
F1.25
s(g2365
I42
g2366
Vinsert
p6715
I43
VSimpleType: V
p6716
tp6717
F0.25
s(Vinsert
p6718
I42
VSimpleName: annotations
p6719
Vinsert
p6720
I42
VSimpleName: id
p6721
tp6722
I1
s(Vinsert
p6723
I42
VSimpleName: write
p6724
Vinsert
p6725
I40
VQualifiedName: value.ipv6
p6726
tp6727
I1
s(g466
I42
g467
Vinsert
p6728
I45
VStringLiteral: "Couldn't awsRegion in '%s'"
p6729
tp6730
F0.25
s(Vinsert
p6731
I42
VSimpleName: of
p6732
Vinsert
p6733
I42
VSimpleName: index
p6734
tp6735
F0.25
s(g4928
I42
g4929
Vinsert
p6736
I59
VVariableDeclarationFragment
p6737
tp6738
I2
s(g2722
I42
g2723
Vinsert
p6739
I11
VCastExpression
p6740
tp6741
I2
s(g4605
I42
g4606
Vinsert
p6742
I8
VBlock
p6743
tp6744
I1
s(Vinsert
p6745
I42
VSimpleName: partition
p6746
Vinsert
p6747
I70
VEnhancedForStatement
p6748
tp6749
I1
s(Vinsert
p6750
I42
VSimpleName: httpUrl
p6751
Vinsert
p6752
I43
VSimpleType: HttpStorage
p6753
tp6754
I2
s(g2865
I42
g2866
Vinsert
p6755
I32
VMethodInvocation
p6756
tp6757
I2
s(Vinsert
p6758
I42
VSimpleName: parent
p6759
Vinsert
p6760
I43
VSimpleType: DependencyLink
p6761
tp6762
I1
s(Vinsert
p6763
I42
VSimpleName: toBuilder
p6764
Vinsert
p6765
I42
VSimpleName: ipsMatch_falseWhenIpv4Different
p6766
tp6767
F0.25
s(g654
I42
g655
Vinsert
p6768
I42
VSimpleName: result
p6769
tp6770
F1.25
s(Vinsert
p6771
I42
VSimpleName: abs
p6772
Vinsert
p6773
I27
VInfixExpression: ==
p6774
tp6775
I2
s(Vinsert
p6776
I42
VSimpleName: getConnection
p6777
Vinsert
p6778
I54
VTryStatement
p6779
tp6780
I4
s(Vinsert
p6781
I42
VSimpleName: register
p6782
Vinsert
p6783
I60
VVariableDeclarationStatement
p6784
tp6785
I1
s(g279
I42
g280
Vinsert
p6786
I32
VMethodInvocation
p6787
tp6788
I2
s(g362
I42
g363
Vinsert
p6789
I42
VSimpleName: e
p6790
tp6791
F4.5
s(g796
I42
g797
Vinsert
p6792
I43
VSimpleType: ElasticsearchHttpStorage.Builder
p6793
tp6794
F0.25
s(g527
I42
g528
Vinsert
p6795
I27
VInfixExpression: *
p6796
tp6797
I1
s(g1704
I42
g1705
Vinsert
p6798
I74
VParameterizedType: ImmutableSet<BigInteger>
p6799
tp6800
I2
s(g3443
I42
g3444
Vinsert
p6801
I32
VMethodInvocation
p6802
tp6803
I4
s(Vinsert
p6804
I42
VSimpleName: abs
p6805
Vinsert
p6806
I42
VSimpleName: t
p6807
tp6808
I4
s(g3110
I42
g3111
Vinsert
p6809
I32
VMethodInvocation
p6810
tp6811
F16.25
s(g3474
I42
g3475
Vinsert
p6812
I32
VMethodInvocation
p6813
tp6814
I4
s(g6387
I42
g6388
Vinsert
p6815
I42
VSimpleName: indices
p6816
tp6817
I1
s(g344
I42
g345
Vinsert
p6818
I66
VTextElement: spe index.
p6819
tp6820
F0.25
s(g3094
I42
g3095
Vinsert
p6821
I8
VBlock
p6822
tp6823
F3.25
s(g841
I42
g842
Vinsert
p6824
I42
VSimpleName: System
p6825
tp6826
I1
s(Vinsert
p6827
I42
VSimpleName: traceId
p6828
Vinsert
p6829
I42
VSimpleName: Span
p6830
tp6831
I5
s(g5720
I42
g5721
Vinsert
p6832
I7
VAssignment: =
p6833
tp6834
I1
s(g1443
I42
g1444
Vinsert
p6835
I42
VSimpleName: timeout
p6836
tp6837
F0.25
s(g264
I42
g265
Vinsert
p6838
I42
VSimpleName: result
p6839
tp6840
I1
s(g2169
I42
g2170
Vinsert
p6841
I33
VNullLiteral
p6842
tp6843
I5
s(g3560
I42
g3561
Vinsert
p6844
I42
VSimpleName: SettableFuture
p6845
tp6846
I4
s(g3599
I42
g3600
Vinsert
p6847
I43
VSimpleType: Builder
p6848
tp6849
F0.25
s(g1308
I42
g1309
Vinsert
p6850
I40
VQualifiedName: value.errorCount
p6851
tp6852
F1.25
s(Vinsert
p6853
I42
VSimpleName: getTraces
p6854
Vinsert
p6855
I34
VNumberLiteral: 1000
p6856
tp6857
F0.75
s(g522
I42
g523
Vinsert
p6858
I42
VSimpleName: ZooKeeperRule
p6859
tp6860
F0.25
s(g1790
I42
g1791
Vinsert
p6861
I83
VModifier: abstract
p6862
tp6863
F0.25
s(g4044
I42
g4045
Vinsert
p6864
I79
VSingleMemberAnnotation
p6865
tp6866
F0.25
s(Vinsert
p6867
I42
VSimpleName: append
p6868
Vinsert
p6869
I45
VStringLiteral: "AcceptSpans("
p6870
tp6871
I1
s(g2619
I42
g2620
Vinsert
p6872
I43
VSimpleType: List
p6873
tp6874
I1
s(g121
I42
g122
Vinsert
p6875
I21
VExpressionStatement
p6876
tp6877
I1
s(Vinsert
p6878
I42
VSimpleName: flatMap
p6879
Vinsert
p6880
I43
VSimpleType: SelectTraceIdsFromServiceSpan
p6881
tp6882
I1
s(g6
I42
g7
Vinsert
p6883
I42
VSimpleName: request
p6884
tp6885
I2
s(g1327
I42
g1328
Vinsert
p6886
I42
VSimpleName: LocalSpanCollector
p6887
tp6888
F0.25
s(Vinsert
p6889
I42
VSimpleName: size
p6890
Vinsert
p6891
I34
VNumberLiteral: 1L
p6892
tp6893
I1
s(Vinsert
p6894
I42
VSimpleName: addAll
p6895
Vinsert
p6896
I74
VParameterizedType: Set<T>
p6897
tp6898
F0.25
s(g372
I42
g373
Vinsert
p6899
I39
VPrimitiveType: void
p6900
tp6901
F0.25
s(g3951
I42
g3952
Vinsert
p6902
I43
VSimpleType: ZipkinServerConfigurationTest.Config
p6903
tp6904
I2
s(g6236
I42
g6237
Vinsert
p6905
I21
VExpressionStatement
p6906
tp6907
I1
s(g219
I42
g220
Vinsert
p6908
I43
VSimpleType: IOException
p6909
tp6910
F0.75
s(Vinsert
p6911
I42
VSimpleName: create
p6912
Vinsert
p6913
I42
VSimpleName: producer
p6914
tp6915
I1
s(g166
I42
g167
Vinsert
p6916
I32
VMethodInvocation
p6917
tp6918
I2
s(g608
I42
g609
Vinsert
p6919
I52
VThisExpression
p6920
tp6921
F0.25
s(g6
I42
g7
Vinsert
p6922
I21
VExpressionStatement
p6923
tp6924
I1
s(g2818
I42
g2819
Vinsert
p6925
I60
VVariableDeclarationStatement
p6926
tp6927
I1
s(g4461
I42
g4462
Vinsert
p6928
I59
VVariableDeclarationFragment
p6929
tp6930
F25.25
s(g2260
I42
g2261
Vinsert
p6931
I40
VQualifiedName: org.apache.kafka.clients.consumer.ConsumerConfig
p6932
tp6933
F0.25
s(g507
I42
g508
Vinsert
p6934
I42
VSimpleName: counterService
p6935
tp6936
F1.25
s(g289
I42
g290
Vinsert
p6937
I34
VNumberLiteral: 0
p6938
tp6939
I1
s(g2514
I42
g2515
Vinsert
p6940
I66
VTextElement: lazy so transient storage errors don't crash bootstrap 
p6941
tp6942
F0.25
s(g234
I42
g235
Vinsert
p6943
I38
VPrefixExpression: !
p6944
tp6945
I1
s(g1316
I42
g1317
Vinsert
p6946
I42
VSimpleName: Exception
p6947
tp6948
F0.75
s(g1146
I42
g1147
Vinsert
p6949
I59
VVariableDeclarationFragment
p6950
tp6951
I1
s(g1002
I42
g1003
Vinsert
p6952
I42
VSimpleName: Integer
p6953
tp6954
I1
s(g3474
I42
g3475
Vinsert
p6955
I43
VSimpleType: DeduplicatingExecutor
p6956
tp6957
I4
s(g919
I42
g920
Vinsert
p6958
I42
VSimpleName: Span
p6959
tp6960
I4
s(g4280
I42
g4281
Vinsert
p6961
I43
VSimpleType: Span
p6962
tp6963
I1
s(g1222
I42
g1223
Vinsert
p6964
I8
VBlock
p6965
tp6966
I4
s(g96
I42
g97
Vinsert
p6967
I8
VBlock
p6968
tp6969
I1
s(g259
I42
g260
Vinsert
p6970
I41
VReturnStatement
p6971
tp6972
I3
s(g871
I42
g872
Vinsert
p6973
I42
VSimpleName: i
p6974
tp6975
I3
s(g749
I42
g750
Vinsert
p6976
I42
VSimpleName: clientDuration
p6977
tp6978
I1
s(Vinsert
p6979
I42
VSimpleName: getBytes
p6980
Vinsert
p6981
I27
VInfixExpression: +
p6982
tp6983
I1
s(Vinsert
p6984
I42
VSimpleName: fetchMoreResults
p6985
Vinsert
p6986
I41
VReturnStatement
p6987
tp6988
I1
s(g2658
I42
g2659
Vinsert
p6989
I43
VSimpleType: DataSource
p6990
tp6991
I10
s(Vinsert
p6992
I42
VSimpleName: apply
p6993
Vinsert
p6994
I43
VSimpleType: SampleRateCalculator
p6995
tp6996
I1
s(Vinsert
p6997
I42
VSimpleName: containsOnly
p6998
Vinsert
p6999
I42
VSimpleName: local
p7000
tp7001
I1
s(g405
I42
g406
Vinsert
p7002
I42
VSimpleName: indexFetchMultiplier
p7003
tp7004
F1.0
s(g1561
I42
g1562
Vinsert
p7005
I32
VMethodInvocation
p7006
tp7007
I2
s(g410
I42
g411
Vinsert
p7008
I43
VSimpleType: TBinaryProtocol
p7009
tp7010
I2
s(g5785
I42
g5786
Vinsert
p7011
I25
VIfStatement
p7012
tp7013
I1
s(Vinsert
p7014
I42
VSimpleName: isEqualTo
p7015
Vinsert
p7016
I42
VSimpleName: wrap
p7017
tp7018
I1
s(Vinsert
p7019
I42
VSimpleName: replace
p7020
Vinsert
p7021
I52
VThisExpression
p7022
tp7023
F0.25
s(g2098
I42
g2099
Vinsert
p7024
I43
VSimpleType: Response
p7025
tp7026
F0.25
s(Vinsert
p7027
I42
VSimpleName: isInstanceOf
p7028
Vinsert
p7029
I42
VSimpleName: scribe
p7030
tp7031
I1
s(g2949
I42
g2950
Vinsert
p7032
I42
VSimpleName: length
p7033
tp7034
I4
s(g1090
I42
g1091
Vinsert
p7035
I42
VSimpleName: String
p7036
tp7037
F0.25
s(g4330
I42
g4331
Vinsert
p7038
I42
VSimpleName: LOG
p7039
tp7040
I1
s(g2345
I42
g2346
Vinsert
p7041
I42
VSimpleName: rawSpans
p7042
tp7043
I1
s(g1911
I42
g1912
Vinsert
p7044
I42
VSimpleName: assertThat
p7045
tp7046
I13
s(g2398
I42
g2399
Vinsert
p7047
I32
VMethodInvocation
p7048
tp7049
I1
s(g806
I42
g807
Vinsert
p7050
I39
VPrimitiveType: byte
p7051
tp7052
I1
s(g5294
I42
g5295
Vinsert
p7053
I42
VSimpleName: CLIENT_RECV
p7054
tp7055
I1
s(g4749
I42
g4750
Vinsert
p7056
I42
VSimpleName: toSpanBytes
p7057
tp7058
I1
s(g1523
I42
g1524
Vinsert
p7059
I74
VParameterizedType: ArrayList<>
p7060
tp7061
I1
s(g4157
I42
g4158
Vinsert
p7062
I23
VFieldDeclaration
p7063
tp7064
I1
s(g2722
I42
g2723
Vinsert
p7065
I42
VSimpleName: connection
p7066
tp7067
I2
s(g6595
I42
g6596
Vinsert
p7068
I42
VSimpleName: service
p7069
tp7070
I1
s(g3318
I42
g3319
Vinsert
p7071
I34
VNumberLiteral: 0
p7072
tp7073
I1
s(g5629
I42
g5630
Vinsert
p7074
I42
VSimpleName: skipIndex
p7075
tp7076
I4
s(g3520
I42
g3521
Vinsert
p7077
I42
VSimpleName: BACKEND
p7078
tp7079
I1
s(g1693
I42
g1694
Vinsert
p7080
I42
VSimpleName: Span
p7081
tp7082
I1
s(g5183
I42
g5184
Vinsert
p7083
I42
VSimpleName: builder
p7084
tp7085
I1
s(Vinsert
p7086
I42
VSimpleName: warn
p7087
Vinsert
p7088
I27
VInfixExpression: ==
p7089
tp7090
I1
s(Vinsert
p7091
I42
VSimpleName: matches
p7092
Vinsert
p7093
I42
VSimpleName: extracting
p7094
tp7095
I1
s(Vinsert
p7096
I42
VSimpleName: onError
p7097
Vinsert
p7098
I45
VStringLiteral: "Already Executed"
p7099
tp7100
I1
s(g6
I42
g7
Vinsert
p7101
I42
VSimpleName: labels
p7102
tp7103
I1
s(Vinsert
p7104
I42
VSimpleName: register
p7105
Vinsert
p7106
I40
VQualifiedName: TimeUnit.DAYS
p7107
tp7108
I1
s(g5558
I42
g5559
Vinsert
p7109
I42
VSimpleName: i
p7110
tp7111
I5
s(Vinsert
p7112
I42
VSimpleName: expectMessage
p7113
Vinsert
p7114
I45
VStringLiteral: "Empty endpoint at $.localEndpoint reading Span2 from json"
p7115
tp7116
F0.25
s(g796
I42
g797
Vinsert
p7117
I8
VBlock
p7118
tp7119
I1
s(Vinsert
p7120
I42
VSimpleName: get
p7121
Vinsert
p7122
I40
VQualifiedName: builder.index
p7123
tp7124
F0.25
s(g2506
I42
g2507
Vinsert
p7125
I42
VSimpleName: timestamp
p7126
tp7127
I1
s(g2694
I42
g2695
Vinsert
p7128
I43
VSimpleType: CassandraStorage
p7129
tp7130
I1
s(g6005
I42
g6006
Vinsert
p7131
I25
VIfStatement
p7132
tp7133
I1
s(Vinsert
p7134
I42
VSimpleName: indexReplicas
p7135
Vinsert
p7136
I8
VBlock
p7137
tp7138
F0.25
s(g4972
I42
g4973
Vinsert
p7139
I74
VParameterizedType: JsonAdapter<List<String>>
p7140
tp7141
I1
s(g2013
I42
g2014
Vinsert
p7142
I42
VSimpleName: mapper
p7143
tp7144
I1
s(g6758
I42
g6759
Vinsert
p7145
I40
VQualifiedName: DependencyLink.Builder
p7146
tp7147
I3
s(g299
I42
g300
Vinsert
p7148
I42
VSimpleName: minDuration
p7149
tp7150
I1
s(Vinsert
p7151
I42
VSimpleName: forThriftServer
p7152
Vinsert
p7153
I43
VSimpleType: ThriftServer
p7154
tp7155
I1
s(g5510
I42
g5511
Vinsert
p7156
I42
VSimpleName: result
p7157
tp7158
I1
s(Vinsert
p7159
I42
VSimpleName: get
p7160
Vinsert
p7161
I45
VStringLiteral: "  }\u005cn"
p7162
tp7163
F1.25
s(g2224
I42
g2225
Vinsert
p7164
I74
VParameterizedType: Callback<List<Span>>
p7165
tp7166
F0.25
s(g6552
I42
g6553
Vinsert
p7167
I42
VSimpleName: builder
p7168
tp7169
I1
s(g426
I42
g427
Vinsert
p7170
I34
VNumberLiteral: 10
p7171
tp7172
I1
s(g5674
I42
g5675
Vinsert
p7173
I42
VSimpleName: span
p7174
tp7175
I2
s(g4220
I42
g4221
Vinsert
p7176
I40
VQualifiedName: right._1
p7177
tp7178
I1
s(g5780
I42
g5781
Vinsert
p7179
I42
VSimpleName: epochMillis
p7180
tp7181
I1
s(g5166
I42
g5167
Vinsert
p7182
I32
VMethodInvocation
p7183
tp7184
I2
s(g7096
I42
g7097
Vinsert
p7185
I53
VThrowStatement
p7186
tp7187
I1
s(g1921
I42
g1922
Vinsert
p7188
I42
VSimpleName: session
p7189
tp7190
I1
s(g6776
I42
g6777
Vinsert
p7191
I42
VSimpleName: datasource
p7192
tp7193
I4
s(g7112
I42
g7113
Vinsert
p7194
I60
VVariableDeclarationStatement
p7195
tp7196
F0.25
s(Vinsert
p7197
I42
VSimpleName: expect
p7198
Vinsert
p7199
I42
VSimpleName: messageWhenMissingValue
p7200
tp7201
F0.5
s(g3474
I42
g3475
Vinsert
p7202
I43
VSimpleType: Session
p7203
tp7204
I2
s(g4531
I42
g4532
Vinsert
p7205
I45
VStringLiteral: ""
p7206
tp7207
I1
s(g3059
I42
g3060
Vinsert
p7208
I34
VNumberLiteral: 1L
p7209
tp7210
I1
s(g2219
I42
g2220
Vinsert
p7211
I57
VTypeLiteral
p7212
tp7213
I1
s(g1095
I42
g1096
Vinsert
p7214
I43
VSimpleType: Span
p7215
tp7216
F0.25
s(Vinsert
p7217
I42
VSimpleName: catchAll
p7218
Vinsert
p7219
I3
VArrayCreation
p7220
tp7221
I1
s(g4220
I42
g4221
Vinsert
p7222
I34
VNumberLiteral: 0
p7223
tp7224
I4
s(g385
I42
g386
Vinsert
p7225
I32
VMethodInvocation
p7226
tp7227
I10
s(g426
I42
g427
Vinsert
p7228
I42
VSimpleName: Span
p7229
tp7230
F4.5
s(g1851
I42
g1852
Vinsert
p7231
I60
VVariableDeclarationStatement
p7232
tp7233
I1
s(g3017
I42
g3018
Vinsert
p7234
I38
VPrefixExpression: !
p7235
tp7236
I1
s(g2614
I42
g2615
Vinsert
p7237
I32
VMethodInvocation
p7238
tp7239
I2
s(Vinsert
p7240
I42
VSimpleName: newSingleThreadExecutor
p7241
Vinsert
p7242
I42
VSimpleName: pool
p7243
tp7244
I1
s(g3683
I42
g3684
Vinsert
p7245
I31
VMethodDeclaration
p7246
tp7247
F0.25
s(g2005
I42
g2006
Vinsert
p7248
I21
VExpressionStatement
p7249
tp7250
I2
s(Vinsert
p7251
I42
VSimpleName: length
p7252
Vinsert
p7253
I34
VNumberLiteral: 0
p7254
tp7255
I5
s(g7159
I42
g7160
Vinsert
p7256
I42
VSimpleName: MockResponse
p7257
tp7258
I1
s(g314
I42
g315
Vinsert
p7259
I42
VSimpleName: RecordedRequest
p7260
tp7261
I1
s(g689
I42
g690
Vinsert
p7262
I60
VVariableDeclarationStatement
p7263
tp7264
I1
s(g5725
I42
g5726
Vinsert
p7265
I33
VNullLiteral
p7266
tp7267
I1
s(g5634
I42
g5635
Vinsert
p7268
I83
VModifier: final
p7269
tp7270
F0.25
s(g5454
I42
g5455
Vinsert
p7271
I40
VQualifiedName: s.annotations
p7272
tp7273
I1
s(g3951
I42
g3952
Vinsert
p7274
I43
VSimpleType: ZipkinPrometheusMetricsAutoConfiguration
p7275
tp7276
I1
s(Vinsert
p7277
I42
VSimpleName: length
p7278
Vinsert
p7279
I42
VSimpleName: i
p7280
tp7281
I1
s(Vinsert
p7282
I42
VSimpleName: toBuilder
p7283
Vinsert
p7284
I31
VMethodDeclaration
p7285
tp7286
F0.5
s(Vinsert
p7287
I42
VSimpleName: format
p7288
Vinsert
p7289
I42
VSimpleName: envOr
p7290
tp7291
I5
s(Vinsert
p7292
I42
VSimpleName: onError
p7293
Vinsert
p7294
I42
VSimpleName: answer
p7295
tp7296
I1
s(g1876
I42
g1877
Vinsert
p7297
I40
VQualifiedName: a.endpoint
p7298
tp7299
I1
s(Vinsert
p7300
I42
VSimpleName: serviceName
p7301
Vinsert
p7302
I42
VSimpleName: builder
p7303
tp7304
F2.5
s(Vinsert
p7305
I42
VSimpleName: readByteArray
p7306
Vinsert
p7307
I21
VExpressionStatement
p7308
tp7309
I2
s(g1749
I42
g1750
Vinsert
p7310
I43
VSimpleType: List
p7311
tp7312
I1
s(g3938
I42
g3939
Vinsert
p7313
I42
VSimpleName: BitSet
p7314
tp7315
I1
s(g3623
I42
g3624
Vinsert
p7316
I83
VModifier: private
p7317
tp7318
F0.25
s(g181
I42
g182
Vinsert
p7319
I43
VSimpleType: Span
p7320
tp7321
I6
s(g131
I42
g132
Vinsert
p7322
I42
VSimpleName: build
p7323
tp7324
F1.25
s(g2684
I42
g2685
Vinsert
p7325
I83
VModifier: public
p7326
tp7327
F1.0
s(g6663
I42
g6664
Vinsert
p7328
I8
VBlock
p7329
tp7330
F2.5
s(Vinsert
p7331
I42
VSimpleName: getHits
p7332
Vinsert
p7333
I8
VBlock
p7334
tp7335
F1.25
s(g5090
I42
g5091
Vinsert
p7336
I42
VSimpleName: AtomicReference
p7337
tp7338
F0.5
s(g4626
I42
g4627
Vinsert
p7339
I42
VSimpleName: child
p7340
tp7341
I1
s(Vinsert
p7342
I42
VSimpleName: get
p7343
Vinsert
p7344
I42
VSimpleName: Boolean
p7345
tp7346
F0.75
s(Vinsert
p7347
I42
VSimpleName: isSetTrace_id_high
p7348
Vinsert
p7349
I42
VSimpleName: that
p7350
tp7351
I1
s(g1390
I42
g1391
Vinsert
p7352
I44
VSingleVariableDeclaration
p7353
tp7354
F0.25
s(Vinsert
p7355
I42
VSimpleName: get
p7356
Vinsert
p7357
I40
VQualifiedName: CassandraTestGraph.INSTANCE.storage
p7358
tp7359
I1
s(g1293
I42
g1294
Vinsert
p7360
I42
VSimpleName: matchAllQuery
p7361
tp7362
F0.25
s(g4639
I42
g4640
Vinsert
p7363
I43
VSimpleType: String
p7364
tp7365
F0.25
s(Vinsert
p7366
I42
VSimpleName: create
p7367
Vinsert
p7368
I43
VSimpleType: Dependencies
p7369
tp7370
I2
s(g1308
I42
g1309
Vinsert
p7371
I21
VExpressionStatement
p7372
tp7373
F2.25
s(g4103
I42
g4104
Vinsert
p7374
I39
VPrimitiveType: void
p7375
tp7376
F0.25
s(g1767
I42
g1768
Vinsert
p7377
I43
VSimpleType: HttpUrl
p7378
tp7379
I1
s(Vinsert
p7380
I42
VSimpleName: of
p7381
Vinsert
p7382
I43
VSimpleType: AsyncSpanConsumer
p7383
tp7384
F0.5
s(g3105
I42
g3106
Vinsert
p7385
I42
VSimpleName: Codec
p7386
tp7387
F0.25
s(g1456
I42
g1457
Vinsert
p7388
I43
VSimpleType: Inflater
p7389
tp7390
I2
s(g191
I42
g192
Vinsert
p7391
I27
VInfixExpression: +
p7392
tp7393
I1
s(Vinsert
p7394
I42
VSimpleName: put
p7395
Vinsert
p7396
I42
VSimpleName: producer
p7397
tp7398
I1
s(g3115
I42
g3116
Vinsert
p7399
I42
VSimpleName: emptyWhenMissingNameAgg
p7400
tp7401
F0.25
s(g3398
I42
g3399
Vinsert
p7402
I42
VSimpleName: answer
p7403
tp7404
I1
s(g1944
I42
g1945
Vinsert
p7405
I31
VMethodDeclaration
p7406
tp7407
F0.5
s(g1876
I42
g1877
Vinsert
p7408
I42
VSimpleName: Annotation
p7409
tp7410
I1
s(g289
I42
g290
Vinsert
p7411
I5
VArrayType: byte[]
p7412
tp7413
I5
s(g5621
I42
g5622
Vinsert
p7414
I42
VSimpleName: andExpect
p7415
tp7416
I1
s(g7347
I42
g7348
Vinsert
p7417
I60
VVariableDeclarationStatement
p7418
tp7419
I1
s(g5112
I42
g5113
Vinsert
p7420
I83
VModifier: public
p7421
tp7422
F0.5
s(Vinsert
p7423
I42
VSimpleName: accept
p7424
Vinsert
p7425
I43
VSimpleType: Void
p7426
tp7427
F2.25
s(Vinsert
p7428
I42
VSimpleName: addAnnotation
p7429
Vinsert
p7430
I42
VSimpleName: assertThat
p7431
tp7432
I2
s(g2848
I42
g2849
Vinsert
p7433
I34
VNumberLiteral: 0L
p7434
tp7435
I1
s(g5421
I42
g5422
Vinsert
p7436
I42
VSimpleName: onError
p7437
tp7438
F0.25
s(g1723
I42
g1724
Vinsert
p7439
I43
VSimpleType: String
p7440
tp7441
I1
s(g6050
I42
g6051
Vinsert
p7442
I42
VSimpleName: span
p7443
tp7444
I4
s(Vinsert
p7445
I42
VSimpleName: build
p7446
Vinsert
p7447
I42
VSimpleName: IllegalArgumentException
p7448
tp7449
I1
s(Vinsert
p7450
I42
VSimpleName: isSuccessful
p7451
Vinsert
p7452
I45
VStringLiteral: "  \u005c"password\u005c": \u005c""
p7453
tp7454
I1
s(g1851
I42
g1852
Vinsert
p7455
I34
VNumberLiteral: 1
p7456
tp7457
I2
s(g4011
I42
g4012
Vinsert
p7458
I42
VSimpleName: build
p7459
tp7460
F0.5
s(g3217
I42
g3218
Vinsert
p7461
I42
VSimpleName: valueOf
p7462
tp7463
I1
s(g1831
I42
g1832
Vinsert
p7464
I42
VSimpleName: port
p7465
tp7466
I1
s(g71
I42
g72
Vinsert
p7467
I40
VQualifiedName: span.name
p7468
tp7469
I2
s(g2727
I42
g2728
Vinsert
p7470
I86
VLambdaExpression
p7471
tp7472
I1
s(g1438
I42
g1439
Vinsert
p7473
I8
VBlock
p7474
tp7475
I1
s(g2584
I42
g2585
Vinsert
p7476
I42
VSimpleName: length
p7477
tp7478
I2
s(g7151
I42
g7152
Vinsert
p7479
I42
VSimpleName: server
p7480
tp7481
I1
s(Vinsert
p7482
I42
VSimpleName: endTs
p7483
Vinsert
p7484
I39
VPrimitiveType: long
p7485
tp7486
F0.25
s(g5491
I42
g5492
Vinsert
p7487
I42
VSimpleName: formatType
p7488
tp7489
I1
s(g3823
I42
g3824
Vinsert
p7490
I44
VSingleVariableDeclaration
p7491
tp7492
F0.5
s(g2255
I42
g2256
Vinsert
p7493
I43
VSimpleType: Executor
p7494
tp7495
F0.25
s(g6771
I42
g6772
Vinsert
p7496
I40
VQualifiedName: Long.MAX_VALUE
p7497
tp7498
I2
s(g891
I42
g892
Vinsert
p7499
I42
VSimpleName: from
p7500
tp7501
I1
s(Vinsert
p7502
I42
VSimpleName: isSampled
p7503
Vinsert
p7504
I32
VMethodInvocation
p7505
tp7506
F2.25
s(g4182
I42
g4183
Vinsert
p7507
I66
VTextElement:  doesn't consider trace_id, so will only
p7508
tp7509
F0.5
s(g6508
I42
g6509
Vinsert
p7510
I43
VSimpleType: Span2
p7511
tp7512
F2.25
s(g5435
I42
g5436
Vinsert
p7513
I39
VPrimitiveType: boolean
p7514
tp7515
I1
s(Vinsert
p7516
I42
VSimpleName: builder
p7517
Vinsert
p7518
I42
VSimpleName: messageWithMultipleSpans
p7519
tp7520
F0.25
s(g1602
I42
g1603
Vinsert
p7521
I42
VSimpleName: link
p7522
tp7523
I1
s(g492
I42
g493
Vinsert
p7524
I42
VSimpleName: T
p7525
tp7526
F0.25
s(g2309
I42
g2310
Vinsert
p7527
I59
VVariableDeclarationFragment
p7528
tp7529
I1
s(g2127
I42
g2128
Vinsert
p7530
I42
VSimpleName: Inet6Address
p7531
tp7532
I1
s(Vinsert
p7533
I42
VSimpleName: builder
p7534
Vinsert
p7535
I42
VSimpleName: collector
p7536
tp7537
I1
s(g621
I42
g622
Vinsert
p7538
I39
VPrimitiveType: int
p7539
tp7540
F0.25
s(Vinsert
p7541
I42
VSimpleName: containsExactly
p7542
Vinsert
p7543
I42
VSimpleName: adjustedSpans
p7544
tp7545
I1
s(Vinsert
p7546
I42
VSimpleName: refresh
p7547
Vinsert
p7548
I42
VSimpleName: ZipkinElasticsearchStorageAutoConfiguration
p7549
tp7550
I2
s(g3072
I42
g3073
Vinsert
p7551
I41
VReturnStatement
p7552
tp7553
I1
s(g3160
I42
g3161
Vinsert
p7554
I43
VSimpleType: Void
p7555
tp7556
F0.5
s(g4319
I42
g4320
Vinsert
p7557
I42
VSimpleName: jsonPath
p7558
tp7559
I3
s(Vinsert
p7560
I42
VSimpleName: addBinaryAnnotation
p7561
Vinsert
p7562
I34
VNumberLiteral: 24
p7563
tp7564
I1
s(g1836
I42
g1837
Vinsert
p7565
I13
VCharacterLiteral: '\u005cr'
p7566
tp7567
I2
s(Vinsert
p7568
I42
VSimpleName: getCluster
p7569
Vinsert
p7570
I42
VSimpleName: protocolVersion
p7571
tp7572
F0.25
s(g229
I42
g230
Vinsert
p7573
I42
VSimpleName: DependencyLink
p7574
tp7575
I1
s(g176
I42
g177
Vinsert
p7576
I42
VSimpleName: entrySet
p7577
tp7578
I1
s(g6195
I42
g6196
Vinsert
p7579
I74
VParameterizedType: LinkedHashMap<>
p7580
tp7581
I1
s(Vinsert
p7582
I42
VSimpleName: fromJson
p7583
Vinsert
p7584
I45
VStringLiteral: "  \u005c"id\u005c": \u005c"6b221d5bc9e6496c\u005c",\u005cn"
p7585
tp7586
I1
s(g1103
I42
g1104
Vinsert
p7587
I32
VMethodInvocation
p7588
tp7589
I1
s(g3951
I42
g3952
Vinsert
p7590
I42
VSimpleName: ZipkinServerConfiguration
p7591
tp7592
I2
s(g284
I42
g285
Vinsert
p7593
I42
VSimpleName: LinkedList
p7594
tp7595
I2
s(g4972
I42
g4973
Vinsert
p7596
I14
VClassInstanceCreation
p7597
tp7598
I5
s(g3094
I42
g3095
Vinsert
p7599
I44
VSingleVariableDeclaration
p7600
tp7601
F0.5
s(Vinsert
p7602
I42
VSimpleName: annotations
p7603
Vinsert
p7604
I42
VSimpleName: writeByte
p7605
tp7606
I1
s(g2614
I42
g2615
Vinsert
p7607
I85
VDimension
p7608
tp7609
F0.5
s(g5316
I42
g5317
Vinsert
p7610
I42
VSimpleName: Span
p7611
tp7612
F1.75
s(Vinsert
p7613
I42
VSimpleName: get
p7614
Vinsert
p7615
I42
VSimpleName: String
p7616
tp7617
I5
s(g6355
I42
g6356
Vinsert
p7618
I7
VAssignment: =
p7619
tp7620
F0.25
s(g1816
I42
g1817
Vinsert
p7621
I43
VSimpleType: Connection
p7622
tp7623
F0.25
s(g3168
I42
g3169
Vinsert
p7624
I42
VSimpleName: String
p7625
tp7626
I2
s(Vinsert
p7627
I42
VSimpleName: onErrorReturn
p7628
Vinsert
p7629
I32
VMethodInvocation
p7630
tp7631
I1
s(g954
I42
g955
Vinsert
p7632
I42
VSimpleName: reader
p7633
tp7634
I1
s(Vinsert
p7635
I42
VSimpleName: addAll
p7636
Vinsert
p7637
I42
VSimpleName: firstInput
p7638
tp7639
I2
s(g5831
I42
g5832
Vinsert
p7640
I83
VModifier: final
p7641
tp7642
F0.25
s(g7096
I42
g7097
Vinsert
p7643
I42
VSimpleName: executed
p7644
tp7645
I1
s(Vinsert
p7646
I42
VSimpleName: create
p7647
Vinsert
p7648
I42
VSimpleName: BoundaryTraceIdSampler
p7649
tp7650
I1
s(g6426
I42
g6427
Vinsert
p7651
I42
VSimpleName: S
p7652
tp7653
I1
s(Vinsert
p7654
I42
VSimpleName: clear
p7655
Vinsert
p7656
I32
VMethodInvocation
p7657
tp7658
F21.25
s(g4518
I42
g4519
Vinsert
p7659
I9
VBooleanLiteral: false
p7660
tp7661
F0.25
s(g56
I42
g57
Vinsert
p7662
I23
VFieldDeclaration
p7663
tp7664
I2
s(g5949
I42
g5950
Vinsert
p7665
I42
VSimpleName: thrown
p7666
tp7667
I1
s(g982
I42
g983
Vinsert
p7668
I85
VDimension
p7669
tp7670
F0.25
s(g4830
I42
g4831
Vinsert
p7671
I39
VPrimitiveType: void
p7672
tp7673
F0.25
s(Vinsert
p7674
I42
VSimpleName: next
p7675
Vinsert
p7676
I7
VAssignment: =
p7677
tp7678
F0.25
s(g4131
I42
g4132
Vinsert
p7679
I42
VSimpleName: CassandraSpanStoreTest
p7680
tp7681
F0.25
s(g1423
I42
g1424
Vinsert
p7682
I42
VSimpleName: callCount
p7683
tp7684
F0.25
s(g4712
I42
g4713
Vinsert
p7685
I38
VPrefixExpression: !
p7686
tp7687
I1
s(g2108
I42
g2109
Vinsert
p7688
I54
VTryStatement
p7689
tp7690
I1
s(g4480
I42
g4481
Vinsert
p7691
I78
VMarkerAnnotation
p7692
tp7693
F0.5
s(g329
I42
g330
Vinsert
p7694
I8
VBlock
p7695
tp7696
I2
s(g512
I42
g513
Vinsert
p7697
I40
VQualifiedName: Encoding.JSON
p7698
tp7699
F0.25
s(g3318
I42
g3319
Vinsert
p7700
I42
VSimpleName: putLong
p7701
tp7702
I1
s(g461
I42
g462
Vinsert
p7703
I42
VSimpleName: encodedTrace
p7704
tp7705
I1
s(g6745
I42
g6746
Vinsert
p7706
I8
VBlock
p7707
tp7708
I1
s(g2566
I42
g2567
Vinsert
p7709
I40
VQualifiedName: Codec.JSON
p7710
tp7711
I6
s(g846
I42
g847
Vinsert
p7712
I21
VExpressionStatement
p7713
tp7714
I25
s(g783
I42
g784
Vinsert
p7715
I27
VInfixExpression: !=
p7716
tp7717
I2
s(g2033
I42
g2034
Vinsert
p7718
I45
VStringLiteral: "    }\u005cn"
p7719
tp7720
I1
s(g151
I42
g152
Vinsert
p7721
I1
VAnonymousClassDeclaration
p7722
tp7723
F0.5
s(g4220
I42
g4221
Vinsert
p7724
I83
VModifier: static
p7725
tp7726
F0.25
s(g4830
I42
g4831
Vinsert
p7727
I45
VStringLiteral: "${zipkin.collector.delayMillisec:1000}"
p7728
tp7729
F0.25
s(g6099
I42
g6100
Vinsert
p7730
I42
VSimpleName: requiredAcks
p7731
tp7732
F0.25
s(Vinsert
p7733
I42
VSimpleName: getMessage
p7734
Vinsert
p7735
I42
VSimpleName: storage
p7736
tp7737
I2
s(g2838
I42
g2839
Vinsert
p7738
I42
VSimpleName: result
p7739
tp7740
I2
s(g4913
I42
g4914
Vinsert
p7741
I43
VSimpleType: String
p7742
tp7743
I2
s(Vinsert
p7744
I42
VSimpleName: readSpan
p7745
Vinsert
p7746
I42
VSimpleName: readRpcV6Span_json_java
p7747
tp7748
F0.25
s(g362
I42
g363
Vinsert
p7749
I43
VSimpleType: Error
p7750
tp7751
I1
s(Vinsert
p7752
I42
VSimpleName: add
p7753
Vinsert
p7754
I40
VQualifiedName: spans.length
p7755
tp7756
I1
s(g572
I42
g573
Vinsert
p7757
I42
VSimpleName: InsertServiceSpan
p7758
tp7759
I2
s(g7635
I42
g7636
Vinsert
p7760
I9
VBooleanLiteral: false
p7761
tp7762
I1
s(Vinsert
p7763
I42
VSimpleName: startsWith
p7764
Vinsert
p7765
I83
VModifier: static
p7766
tp7767
F0.25
s(Vinsert
p7768
I42
VSimpleName: contains
p7769
Vinsert
p7770
I39
VPrimitiveType: byte
p7771
tp7772
F0.25
s(g3348
I42
g3349
Vinsert
p7773
I43
VSimpleType: ElasticsearchConfig.Builder
p7774
tp7775
I1
s(g1959
I42
g1960
Vinsert
p7776
I43
VSimpleType: ZipkinElasticsearchStorageJestAutoConfiguration
p7777
tp7778
I1
s(g3725
I42
g3726
Vinsert
p7779
I16
VConditionalExpression
p7780
tp7781
I1
s(g967
I42
g968
Vinsert
p7782
I42
VSimpleName: Span2
p7783
tp7784
F3.25
s(g2566
I42
g2567
Vinsert
p7785
I42
VSimpleName: String
p7786
tp7787
I2
s(g4523
I42
g4524
Vinsert
p7788
I41
VReturnStatement
p7789
tp7790
I1
s(g6421
I42
g6422
Vinsert
p7791
I8
VBlock
p7792
tp7793
I1
s(g924
I42
g925
Vinsert
p7794
I42
VSimpleName: endBucket
p7795
tp7796
I1
s(g3828
I42
g3829
Vinsert
p7797
I42
VSimpleName: InMemoryStorage
p7798
tp7799
I2
s(g1767
I42
g1768
Vinsert
p7800
I42
VSimpleName: url
p7801
tp7802
I1
s(g3823
I42
g3824
Vinsert
p7803
I42
VSimpleName: ipAddresses
p7804
tp7805
F1.25
s(g294
I42
g295
Vinsert
p7806
I42
VSimpleName: spanStore
p7807
tp7808
F0.25
s(g739
I42
g740
Vinsert
p7809
I42
VSimpleName: spanId
p7810
tp7811
I1
s(g3009
I42
g3010
Vinsert
p7812
I41
VReturnStatement
p7813
tp7814
F0.25
s(g6635
I42
g6636
Vinsert
p7815
I2
VArrayAccess
p7816
tp7817
I2
s(g6134
I42
g6135
Vinsert
p7818
I23
VFieldDeclaration
p7819
tp7820
F2.25
s(g1841
I42
g1842
Vinsert
p7821
I65
VTagElement
p7822
tp7823
F0.75
s(g4016
I42
g4017
Vinsert
p7824
I65
VTagElement
p7825
tp7826
F0.25
s(g3707
I42
g3708
Vinsert
p7827
I14
VClassInstanceCreation
p7828
tp7829
I1
s(g4446
I42
g4447
Vinsert
p7830
I42
VSimpleName: enterPath
p7831
tp7832
I1
s(g264
I42
g265
Vinsert
p7833
I43
VSimpleType: com.amazonaws.auth.AWSCredentials
p7834
tp7835
I1
s(g1242
I42
g1243
Vinsert
p7836
I74
VParameterizedType: Call<Void>
p7837
tp7838
I1
s(Vinsert
p7839
I42
VSimpleName: values
p7840
Vinsert
p7841
I22
VFieldAccess
p7842
tp7843
F0.75
s(g1523
I42
g1524
Vinsert
p7844
I42
VSimpleName: T
p7845
tp7846
I1
s(g954
I42
g955
Vinsert
p7847
I42
VSimpleName: MalformedJsonException
p7848
tp7849
I1
s(Vinsert
p7850
I42
VSimpleName: withExposedPorts
p7851
Vinsert
p7852
I7
VAssignment: =
p7853
tp7854
I2
s(g2663
I42
g2664
Vinsert
p7855
I39
VPrimitiveType: void
p7856
tp7857
F0.5
s(g949
I42
g950
Vinsert
p7858
I42
VSimpleName: strictTraceId
p7859
tp7860
F1.75
s(g2156
I42
g2157
Vinsert
p7861
I21
VExpressionStatement
p7862
tp7863
I1
s(g6045
I42
g6046
Vinsert
p7864
I34
VNumberLiteral: 0
p7865
tp7866
I1
s(g6407
I42
g6408
Vinsert
p7867
I40
VQualifiedName: TIMESTAMP_MILLIS_PREFIX.length
p7868
tp7869
I1
s(g2436
I42
g2437
Vinsert
p7870
I42
VSimpleName: OptionsBuilder
p7871
tp7872
I1
s(g5725
I42
g5726
Vinsert
p7873
I42
VSimpleName: linkSpan
p7874
tp7875
I1
s(g5938
I42
g5939
Vinsert
p7876
I42
VSimpleName: maxMessageSize
p7877
tp7878
F0.25
s(g4044
I42
g4045
Vinsert
p7879
I29
VJavadoc
p7880
tp7881
F0.25
s(g1066
I42
g1067
Vinsert
p7882
I40
VQualifiedName: TIMESTAMP_MILLIS_PREFIX.length
p7883
tp7884
I2
s(g1247
I42
g1248
Vinsert
p7885
I78
VMarkerAnnotation
p7886
tp7887
F0.75
s(g2054
I42
g2055
Vinsert
p7888
I42
VSimpleName: String
p7889
tp7890
I1
s(g636
I42
g637
Vinsert
p7891
I42
VSimpleName: messagesDropped
p7892
tp7893
I1
s(g1308
I42
g1309
Vinsert
p7894
I25
VIfStatement
p7895
tp7896
I1
s(Vinsert
p7897
I42
VSimpleName: size
p7898
Vinsert
p7899
I8
VBlock
p7900
tp7901
I8
s(g2350
I42
g2351
Vinsert
p7902
I45
VStringLiteral: "bar"
p7903
tp7904
I1
s(Vinsert
p7905
I42
VSimpleName: add
p7906
Vinsert
p7907
I11
VCastExpression
p7908
tp7909
I1
s(g2901
I42
g2902
Vinsert
p7910
I42
VSimpleName: source
p7911
tp7912
F0.25
s(Vinsert
p7913
I42
VSimpleName: sizeInBytes
p7914
Vinsert
p7915
I21
VExpressionStatement
p7916
tp7917
I7
s(g191
I42
g192
Vinsert
p7918
I42
VSimpleName: CLIENT_RECV
p7919
tp7920
I1
s(g1469
I42
g1470
Vinsert
p7921
I42
VSimpleName: getRawTrace
p7922
tp7923
F0.25
s(g2255
I42
g2256
Vinsert
p7924
I59
VVariableDeclarationFragment
p7925
tp7926
I1
s(g2802
I42
g2803
Vinsert
p7927
I31
VMethodDeclaration
p7928
tp7929
F0.25
s(g1405
I42
g1406
Vinsert
p7930
I42
VSimpleName: thrown
p7931
tp7932
I1
s(g3168
I42
g3169
Vinsert
p7933
I42
VSimpleName: Map
p7934
tp7935
I1
s(g2232
I42
g2233
Vinsert
p7936
I22
VFieldAccess
p7937
tp7938
F0.5
s(g372
I42
g373
Vinsert
p7939
I59
VVariableDeclarationFragment
p7940
tp7941
I2
s(g1602
I42
g1603
Vinsert
p7942
I42
VSimpleName: callCount
p7943
tp7944
I1
s(g7240
I42
g7241
Vinsert
p7945
I40
VQualifiedName: config.streams
p7946
tp7947
I1
s(g1212
I42
g1213
Vinsert
p7948
I42
VSimpleName: spans
p7949
tp7950
F1.5
s(Vinsert
p7951
I42
VSimpleName: isFalse
p7952
Vinsert
p7953
I42
VSimpleName: toBuilder
p7954
tp7955
F0.25
s(g557
I42
g558
Vinsert
p7956
I32
VMethodInvocation
p7957
tp7958
I4
s(Vinsert
p7959
I42
VSimpleName: size
p7960
Vinsert
p7961
I42
VSimpleName: input
p7962
tp7963
I3
s(g4430
I42
g4431
Vinsert
p7964
I8
VBlock
p7965
tp7966
I1
s(g1400
I42
g1401
Vinsert
p7967
I59
VVariableDeclarationFragment
p7968
tp7969
I1
s(g3654
I42
g3655
Vinsert
p7970
I42
VSimpleName: pos
p7971
tp7972
I1
s(g1247
I42
g1248
Vinsert
p7973
I41
VReturnStatement
p7974
tp7975
I2
s(g4587
I42
g4588
Vinsert
p7976
I80
VMemberValuePair
p7977
tp7978
F0.5
s(g1673
I42
g1674
Vinsert
p7979
I42
VSimpleName: entry
p7980
tp7981
I1
s(g4856
I42
g4857
Vinsert
p7982
I42
VSimpleName: e
p7983
tp7984
F0.25
s(Vinsert
p7985
I42
VSimpleName: clear
p7986
Vinsert
p7987
I43
VSimpleType: IOException
p7988
tp7989
F1.0
s(g6236
I42
g6237
Vinsert
p7990
I44
VSingleVariableDeclaration
p7991
tp7992
I1
s(g3951
I42
g3952
Vinsert
p7993
I21
VExpressionStatement
p7994
tp7995
I9
s(g3288
I42
g3289
Vinsert
p7996
I42
VSimpleName: codec
p7997
tp7998
I4
s(g2265
I42
g2266
Vinsert
p7999
I2
VArrayAccess
p8000
tp8001
F1.5
s(g4792
I42
g4793
Vinsert
p8002
I45
VStringLiteral: "5b4185666d50f68b"
p8003
tp8004
I1
s(g7347
I42
g7348
Vinsert
p8005
I59
VVariableDeclarationFragment
p8006
tp8007
I2
s(g5712
I42
g5713
Vinsert
p8008
I42
VSimpleName: index
p8009
tp8010
I1
s(Vinsert
p8011
I42
VSimpleName: readByteArray
p8012
Vinsert
p8013
I42
VSimpleName: close
p8014
tp8015
I1
s(g1443
I42
g1444
Vinsert
p8016
I42
VSimpleName: ResultSet
p8017
tp8018
F0.25
s(g4908
I42
g4909
Vinsert
p8019
I21
VExpressionStatement
p8020
tp8021
I3
s(Vinsert
p8022
I42
VSimpleName: onSuccess
p8023
Vinsert
p8024
I42
VSimpleName: complete
p8025
tp8026
F0.25
s(Vinsert
p8027
I42
VSimpleName: take
p8028
Vinsert
p8029
I32
VMethodInvocation
p8030
tp8031
I5
s(g5090
I42
g5091
Vinsert
p8032
I74
VParameterizedType: AtomicReference<>
p8033
tp8034
F0.25
s(g3041
I42
g3042
Vinsert
p8035
I42
VSimpleName: when
p8036
tp8037
I2
s(g4830
I42
g4831
Vinsert
p8038
I22
VFieldAccess
p8039
tp8040
I1
s(g3900
I42
g3901
Vinsert
p8041
I42
VSimpleName: cache
p8042
tp8043
I2
s(g6595
I42
g6596
Vinsert
p8044
I42
VSimpleName: traceId
p8045
tp8046
I1
s(g451
I42
g452
Vinsert
p8047
I42
VSimpleName: Deprecated
p8048
tp8049
F0.25
s(g1017
I42
g1018
Vinsert
p8050
I8
VBlock
p8051
tp8052
I1
s(Vinsert
p8053
I42
VSimpleName: parentId
p8054
Vinsert
p8055
I43
VSimpleType: Span2
p8056
tp8057
F0.25
s(g362
I42
g363
Vinsert
p8058
I32
VMethodInvocation
p8059
tp8060
I21
s(g4733
I42
g4734
Vinsert
p8061
I42
VSimpleName: callback
p8062
tp8063
F1.75
s(g704
I42
g705
Vinsert
p8064
I42
VSimpleName: ImmutableMap
p8065
tp8066
I1
s(g5286
I42
g5287
Vinsert
p8067
I42
VSimpleName: annotations
p8068
tp8069
I1
s(Vinsert
p8070
I42
VSimpleName: builder
p8071
Vinsert
p8072
I42
VSimpleName: check
p8073
tp8074
I1
s(g3041
I42
g3042
Vinsert
p8075
I34
VNumberLiteral: 1000L
p8076
tp8077
I1
s(Vinsert
p8078
I42
VSimpleName: copyOf
p8079
Vinsert
p8080
I40
VQualifiedName: builder.cluster
p8081
tp8082
I1
s(g56
I42
g57
Vinsert
p8083
I43
VSimpleType: HttpV2Storage
p8084
tp8085
I2
s(g1172
I42
g1173
Vinsert
p8086
I42
VSimpleName: a
p8087
tp8088
I4
s(Vinsert
p8089
I42
VSimpleName: isEqualTo
p8090
Vinsert
p8091
I42
VSimpleName: toLowerHex_fixedLength
p8092
tp8093
F0.25
s(g1657
I42
g1658
Vinsert
p8094
I66
VTextElement: Single-element reads were for legacy non-list encoding. Don't add new code that does this 
p8095
tp8096
F0.25
s(g3667
I42
g3668
Vinsert
p8097
I74
VParameterizedType: java.util.List<zipkin.Span>
p8098
tp8099
F0.25
s(g1959
I42
g1960
Vinsert
p8100
I43
VSimpleType: PropertyPlaceholderAutoConfiguration
p8101
tp8102
I5
s(g3588
I42
g3589
Vinsert
p8103
I43
VSimpleType: Span.Builder
p8104
tp8105
I1
s(g4647
I42
g4648
Vinsert
p8106
I41
VReturnStatement
p8107
tp8108
I1
s(g1456
I42
g1457
Vinsert
p8109
I60
VVariableDeclarationStatement
p8110
tp8111
I1
s(g2436
I42
g2437
Vinsert
p8112
I85
VDimension
p8113
tp8114
F0.25
s(g6
I42
g7
Vinsert
p8115
I42
VSimpleName: http_request_duration_seconds
p8116
tp8117
I1
s(g608
I42
g609
Vinsert
p8118
I32
VMethodInvocation
p8119
tp8120
I1
s(Vinsert
p8121
I42
VSimpleName: onError
p8122
Vinsert
p8123
I42
VSimpleName: bytesRead
p8124
tp8125
I1
s(g2013
I42
g2014
Vinsert
p8126
I42
VSimpleName: value
p8127
tp8128
I1
s(g2584
I42
g2585
Vinsert
p8129
I21
VExpressionStatement
p8130
tp8131
I2
s(g2090
I42
g2091
Vinsert
p8132
I42
VSimpleName: Test
p8133
tp8134
F0.25
s(Vinsert
p8135
I42
VSimpleName: addBinaryAnnotation
p8136
Vinsert
p8137
I8
VBlock
p8138
tp8139
I1
s(g3258
I42
g3259
Vinsert
p8140
I45
VStringLiteral: "worker"
p8141
tp8142
F0.25
s(g4928
I42
g4929
Vinsert
p8143
I42
VSimpleName: List
p8144
tp8145
I2
s(g2237
I42
g2238
Vinsert
p8146
I32
VMethodInvocation
p8147
tp8148
I16
s(g5311
I42
g5312
Vinsert
p8149
I59
VVariableDeclarationFragment
p8150
tp8151
I2
s(Vinsert
p8152
I42
VSimpleName: isCanceled
p8153
Vinsert
p8154
I42
VSimpleName: Override
p8155
tp8156
F0.25
s(g3051
I42
g3052
Vinsert
p8157
I42
VSimpleName: a
p8158
tp8159
I2
s(g2642
I42
g2643
Vinsert
p8160
I43
VSimpleType: Void
p8161
tp8162
I4
s(g461
I42
g462
Vinsert
p8163
I43
VSimpleType: List
p8164
tp8165
I2
s(g2304
I42
g2305
Vinsert
p8166
I43
VSimpleType: OkHttpClient.Builder
p8167
tp8168
I1
s(g6134
I42
g6135
Vinsert
p8169
I42
VSimpleName: Endpoint
p8170
tp8171
I9
s(g3675
I42
g3676
Vinsert
p8172
I32
VMethodInvocation
p8173
tp8174
I2
s(g2732
I42
g2733
Vinsert
p8175
I42
VSimpleName: execute
p8176
tp8177
I1
s(g1683
I42
g1684
Vinsert
p8178
I31
VMethodDeclaration
p8179
tp8180
F0.25
s(g4136
I42
g4137
Vinsert
p8181
I21
VExpressionStatement
p8182
tp8183
F11.75
s(g6979
I42
g6980
Vinsert
p8184
I45
VStringLiteral: "  \u005c"traceId\u005c": \u005c"6b221d5bc9e6496c\u005c",\u005cn"
p8185
tp8186
I1
s(g7450
I42
g7451
Vinsert
p8187
I42
VSimpleName: parse
p8188
tp8189
I1
s(Vinsert
p8190
I42
VSimpleName: get
p8191
Vinsert
p8192
I45
VStringLiteral: "framey"
p8193
tp8194
I1
s(g3022
I42
g3023
Vinsert
p8195
I42
VSimpleName: keyspace
p8196
tp8197
I2
s(g2224
I42
g2225
Vinsert
p8198
I42
VSimpleName: delegate
p8199
tp8200
I2
s(g896
I42
g897
Vinsert
p8201
I42
VSimpleName: result
p8202
tp8203
I2
s(g7019
I42
g7020
Vinsert
p8204
I83
VModifier: final
p8205
tp8206
F0.25
s(g7959
I42
g7960
Vinsert
p8207
I42
VSimpleName: S
p8208
tp8209
I1
s(g3217
I42
g3218
Vinsert
p8210
I42
VSimpleName: reader
p8211
tp8212
I1
s(g3636
I42
g3637
Vinsert
p8213
I45
VStringLiteral: "foo"
p8214
tp8215
I1
s(g2539
I42
g2540
Vinsert
p8216
I42
VSimpleName: c
p8217
tp8218
I2
s(g1881
I42
g1882
Vinsert
p8219
I40
VQualifiedName: Codec.JSON
p8220
tp8221
I1
s(g4539
I42
g4540
Vinsert
p8222
I21
VExpressionStatement
p8223
tp8224
I1
s(g2005
I42
g2006
Vinsert
p8225
I74
VParameterizedType: List<T>
p8226
tp8227
I1
s(g1688
I42
g1689
Vinsert
p8228
I59
VVariableDeclarationFragment
p8229
tp8230
I1
s(g881
I42
g882
Vinsert
p8231
I42
VSimpleName: reader
p8232
tp8233
I1
s(g997
I42
g998
Vinsert
p8234
I14
VClassInstanceCreation
p8235
tp8236
I1
s(g91
I42
g92
Vinsert
p8237
I10
VBreakStatement
p8238
tp8239
I1
s(g744
I42
g745
Vinsert
p8240
I42
VSimpleName: Calendar
p8241
tp8242
I2
s(g41
I42
g42
Vinsert
p8243
I42
VSimpleName: IOException
p8244
tp8245
I1
s(g2278
I42
g2279
Vinsert
p8246
I83
VModifier: static
p8247
tp8248
F0.25
s(g709
I42
g710
Vinsert
p8249
I42
VSimpleName: JsonWriter
p8250
tp8251
F0.25
s(g3823
I42
g3824
Vinsert
p8252
I32
VMethodInvocation
p8253
tp8254
I2
s(g2103
I42
g2104
Vinsert
p8255
I38
VPrefixExpression: !
p8256
tp8257
I8
s(Vinsert
p8258
I42
VSimpleName: onSuccess
p8259
Vinsert
p8260
I74
VParameterizedType: CallbackCaptor<String>
p8261
tp8262
I1
s(g2694
I42
g2695
Vinsert
p8263
I59
VVariableDeclarationFragment
p8264
tp8265
I2
s(g294
I42
g295
Vinsert
p8266
I42
VSimpleName: schema
p8267
tp8268
I1
s(g1693
I42
g1694
Vinsert
p8269
I42
VSimpleName: List
p8270
tp8271
I1
s(Vinsert
p8272
I42
VSimpleName: expect
p8273
Vinsert
p8274
I42
VSimpleName: InterruptedException
p8275
tp8276
F0.25
s(g714
I42
g715
Vinsert
p8277
I42
VSimpleName: assertThat
p8278
tp8279
I1
s(Vinsert
p8280
I42
VSimpleName: isEmpty
p8281
Vinsert
p8282
I42
VSimpleName: StringUtils
p8283
tp8284
I1
s(g229
I42
g230
Vinsert
p8285
I42
VSimpleName: unmerged
p8286
tp8287
I1
s(g3041
I42
g3042
Vinsert
p8288
I42
VSimpleName: session
p8289
tp8290
I3
s(g4420
I42
g4421
Vinsert
p8291
I21
VExpressionStatement
p8292
tp8293
F0.25
s(Vinsert
p8294
I42
VSimpleName: expectMessage
p8295
Vinsert
p8296
I83
VModifier: public
p8297
tp8298
F0.75
s(g4152
I42
g4153
Vinsert
p8299
I59
VVariableDeclarationFragment
p8300
tp8301
I2
s(g1523
I42
g1524
Vinsert
p8302
I42
VSimpleName: ArrayList
p8303
tp8304
I1
s(Vinsert
p8305
I42
VSimpleName: newBuilder
p8306
Vinsert
p8307
I43
VSimpleType: Endpoint
p8308
tp8309
I1
s(g4717
I42
g4718
Vinsert
p8310
I34
VNumberLiteral: 10L
p8311
tp8312
I2
s(g856
I42
g857
Vinsert
p8313
I42
VSimpleName: writeLargeSpanName
p8314
tp8315
F0.25
s(g2127
I42
g2128
Vinsert
p8316
I43
VSimpleType: InetAddress
p8317
tp8318
I1
s(Vinsert
p8319
I42
VSimpleName: builder
p8320
Vinsert
p8321
I40
VQualifiedName: Constants.SERVER_RECV
p8322
tp8323
I1
s(g4895
I42
g4896
Vinsert
p8324
I42
VSimpleName: spans
p8325
tp8326
F1.25
s(g7112
I42
g7113
Vinsert
p8327
I21
VExpressionStatement
p8328
tp8329
I10
s(Vinsert
p8330
I42
VSimpleName: annotationKeys
p8331
Vinsert
p8332
I42
VSimpleName: annotationKeys_serviceNameRequired
p8333
tp8334
F0.25
s(g5621
I42
g5622
Vinsert
p8335
I42
VSimpleName: string
p8336
tp8337
I1
s(g2514
I42
g2515
Vinsert
p8338
I42
VSimpleName: StorageComponent
p8339
tp8340
F0.25
s(g6195
I42
g6196
Vinsert
p8341
I42
VSimpleName: idToNode
p8342
tp8343
I1
s(g7305
I42
g7306
Vinsert
p8344
I14
VClassInstanceCreation
p8345
tp8346
I3
s(Vinsert
p8347
I42
VSimpleName: builder
p8348
Vinsert
p8349
I40
VQualifiedName: zipkin.Span
p8350
tp8351
F3.25
s(g56
I42
g57
Vinsert
p8352
I59
VVariableDeclarationFragment
p8353
tp8354
I5
s(g4011
I42
g4012
Vinsert
p8355
I83
VModifier: public
p8356
tp8357
F0.25
s(g1566
I42
g1567
Vinsert
p8358
I43
VSimpleType: Map
p8359
tp8360
F0.25
s(g6454
I42
g6455
Vinsert
p8361
I42
VSimpleName: value
p8362
tp8363
I1
s(g1415
I42
g1416
Vinsert
p8364
I42
VSimpleName: request
p8365
tp8366
I3
s(Vinsert
p8367
I42
VSimpleName: getVersion
p8368
Vinsert
p8369
I45
VStringLiteral: "    \u005c"build_date\u005c" : \u005c"2016-10-26T04:37:51.531Z\u005c",\u005cn"
p8370
tp8371
I1
s(g6997
I42
g6998
Vinsert
p8372
I42
VSimpleName: zookeeper
p8373
tp8374
I1
s(Vinsert
p8375
I42
VSimpleName: saService
p8376
Vinsert
p8377
I32
VMethodInvocation
p8378
tp8379
I5
s(g5949
I42
g5950
Vinsert
p8380
I42
VSimpleName: Server
p8381
tp8382
I2
s(g5902
I42
g5903
Vinsert
p8383
I42
VSimpleName: String
p8384
tp8385
F0.75
s(g6731
I42
g6732
Vinsert
p8386
I43
VSimpleType: String
p8387
tp8388
F0.5
s(g5523
I42
g5524
Vinsert
p8389
I42
VSimpleName: current
p8390
tp8391
I2
s(Vinsert
p8392
I42
VSimpleName: addAnnotation
p8393
Vinsert
p8394
I45
VStringLiteral: "3"
p8395
tp8396
F0.25
s(Vinsert
p8397
I42
VSimpleName: replace
p8398
Vinsert
p8399
I43
VSimpleType: String
p8400
tp8401
F0.25
s(Vinsert
p8402
I42
VSimpleName: put
p8403
Vinsert
p8404
I42
VSimpleName: aggs
p8405
tp8406
I3
s(g729
I42
g730
Vinsert
p8407
I42
VSimpleName: String
p8408
tp8409
F1.25
s(g1987
I42
g1988
Vinsert
p8410
I40
VQualifiedName: org.jooq.impl.SQLDataType.BIGINT
p8411
tp8412
I3
s(g5098
I42
g5099
Vinsert
p8413
I27
VInfixExpression: !=
p8414
tp8415
I1
s(g1
I42
g2
Vinsert
p8416
I42
VSimpleName: Annotation
p8417
tp8418
F0.25
s(g4856
I42
g4857
Vinsert
p8419
I27
VInfixExpression: +
p8420
tp8421
F0.25
s(g866
I42
g867
Vinsert
p8422
I83
VModifier: protected
p8423
tp8424
F4.5
s(g2594
I42
g2595
Vinsert
p8425
I40
VQualifiedName: timestampRange.startUUID
p8426
tp8427
I1
s(g6099
I42
g6100
Vinsert
p8428
I41
VReturnStatement
p8429
tp8430
I2
s(g1749
I42
g1750
Vinsert
p8431
I42
VSimpleName: required
p8432
tp8433
I1
s(g2247
I42
g2248
Vinsert
p8434
I42
VSimpleName: delegate
p8435
tp8436
I1
s(g7613
I42
g7614
Vinsert
p8437
I42
VSimpleName: Set
p8438
tp8439
I1
s(g264
I42
g265
Vinsert
p8440
I32
VMethodInvocation
p8441
tp8442
I1
s(g6745
I42
g6746
Vinsert
p8443
I42
VSimpleName: Span
p8444
tp8445
F1.25
s(g7347
I42
g7348
Vinsert
p8446
I9
VBooleanLiteral: true
p8447
tp8448
I2
s(g4301
I42
g4302
Vinsert
p8449
I50
VSwitchStatement
p8450
tp8451
I1
s(g532
I42
g533
Vinsert
p8452
I42
VSimpleName: brave
p8453
tp8454
I1
s(g314
I42
g315
Vinsert
p8455
I32
VMethodInvocation
p8456
tp8457
I6
s(Vinsert
p8458
I42
VSimpleName: addAnnotation
p8459
Vinsert
p8460
I36
VParenthesizedExpression
p8461
tp8462
I5
s(g3083
I42
g3084
Vinsert
p8463
I8
VBlock
p8464
tp8465
I1
s(g762
I42
g763
Vinsert
p8466
I42
VSimpleName: Base64
p8467
tp8468
I1
s(g2416
I42
g2417
Vinsert
p8469
I45
VStringLiteral: "settings/server/id "
p8470
tp8471
I1
s(g4095
I42
g4096
Vinsert
p8472
I59
VVariableDeclarationFragment
p8473
tp8474
I1
s(g3702
I42
g3703
Vinsert
p8475
I42
VSimpleName: Override
p8476
tp8477
F0.25
s(Vinsert
p8478
I42
VSimpleName: apply
p8479
Vinsert
p8480
I42
VSimpleName: spanStore
p8481
tp8482
I1
s(g1400
I42
g1401
Vinsert
p8483
I21
VExpressionStatement
p8484
tp8485
I3
s(g997
I42
g998
Vinsert
p8486
I59
VVariableDeclarationFragment
p8487
tp8488
I2
s(g1146
I42
g1147
Vinsert
p8489
I57
VTypeLiteral
p8490
tp8491
I1
s(g2283
I42
g2284
Vinsert
p8492
I8
VBlock
p8493
tp8494
F1.25
s(g2067
I42
g2068
Vinsert
p8495
I45
VStringLiteral: "Cache-Control"
p8496
tp8497
F1.25
s(g4523
I42
g4524
Vinsert
p8498
I42
VSimpleName: TRACE_ID_SAMPLER
p8499
tp8500
I1
s(g7763
I42
g7764
Vinsert
p8501
I42
VSimpleName: hostsProperty
p8502
tp8503
F1.25
s(g6084
I42
g6085
Vinsert
p8504
I45
VStringLiteral: "start "
p8505
tp8506
I1
s(g1533
I42
g1534
Vinsert
p8507
I27
VInfixExpression: ||
p8508
tp8509
I1
s(g1303
I42
g1304
Vinsert
p8510
I27
VInfixExpression: !=
p8511
tp8512
I1
s(g7445
I42
g7446
Vinsert
p8513
I42
VSimpleName: annotationKeys
p8514
tp8515
I1
s(g2135
I42
g2136
Vinsert
p8516
I83
VModifier: abstract
p8517
tp8518
F0.25
s(g1767
I42
g1768
Vinsert
p8519
I59
VVariableDeclarationFragment
p8520
tp8521
I1
s(Vinsert
p8522
I42
VSimpleName: onSuccess
p8523
Vinsert
p8524
I42
VSimpleName: add
p8525
tp8526
I1
s(g2848
I42
g2849
Vinsert
p8527
I16
VConditionalExpression
p8528
tp8529
I1
s(g1066
I42
g1067
Vinsert
p8530
I3
VArrayCreation
p8531
tp8532
I2
s(g987
I42
g988
Vinsert
p8533
I45
VStringLiteral: "key"
p8534
tp8535
I1
s(g1649
I42
g1650
Vinsert
p8536
I41
VReturnStatement
p8537
tp8538
I1
s(g1438
I42
g1439
Vinsert
p8539
I42
VSimpleName: ID
p8540
tp8541
I1
s(Vinsert
p8542
I42
VSimpleName: get
p8543
Vinsert
p8544
I34
VNumberLiteral: 1
p8545
tp8546
I1
s(g2936
I42
g2937
Vinsert
p8547
I42
VSimpleName: flag
p8548
tp8549
I1
s(g3997
I42
g3998
Vinsert
p8550
I42
VSimpleName: DAY
p8551
tp8552
I1
s(g4469
I42
g4470
Vinsert
p8553
I42
VSimpleName: ipv4
p8554
tp8555
F0.25
s(g4103
I42
g4104
Vinsert
p8556
I21
VExpressionStatement
p8557
tp8558
I1
s(g1012
I42
g1013
Vinsert
p8559
I83
VModifier: static
p8560
tp8561
F0.5
s(g6718
I42
g6719
Vinsert
p8562
I40
VQualifiedName: s.id
p8563
tp8564
I1
s(g3110
I42
g3111
Vinsert
p8565
I43
VSimpleType: Exception
p8566
tp8567
F0.25
s(g3804
I42
g3805
Vinsert
p8568
I21
VExpressionStatement
p8569
tp8570
I2
s(g8319
I42
g8320
Vinsert
p8571
I42
VSimpleName: host
p8572
tp8573
I1
s(g5386
I42
g5387
Vinsert
p8574
I42
VSimpleName: fromBytes
p8575
tp8576
I1
s(g7134
I42
g7135
Vinsert
p8577
I42
VSimpleName: dateSeparator
p8578
tp8579
F0.75
s(g7635
I42
g7636
Vinsert
p8580
I7
VAssignment: =
p8581
tp8582
I2
s(g3833
I42
g3834
Vinsert
p8583
I60
VVariableDeclarationStatement
p8584
tp8585
I2
s(g81
I42
g82
Vinsert
p8586
I16
VConditionalExpression
p8587
tp8588
I4
s(g7582
I42
g7583
Vinsert
p8589
I45
VStringLiteral: "    \u005c"port\u005c": 65535\u005cn"
p8590
tp8591
I1
s(g2247
I42
g2248
Vinsert
p8592
I45
VStringLiteral: "1"
p8593
tp8594
I1
s(g4293
I42
g4294
Vinsert
p8595
I27
VInfixExpression: !=
p8596
tp8597
I1
s(g2717
I42
g2718
Vinsert
p8598
I42
VSimpleName: asyncSpanConsumer
p8599
tp8600
F0.25
s(Vinsert
p8601
I42
VSimpleName: getTraces
p8602
Vinsert
p8603
I42
VSimpleName: MediaType
p8604
tp8605
I1
s(Vinsert
p8606
I42
VSimpleName: clear
p8607
Vinsert
p8608
I42
VSimpleName: InternalForTests
p8609
tp8610
I1
s(Vinsert
p8611
I42
VSimpleName: perform
p8612
Vinsert
p8613
I45
VStringLiteral: "/api/v1/spans"
p8614
tp8615
I1
s(g4016
I42
g4017
Vinsert
p8616
I42
VSimpleName: logger
p8617
tp8618
I2
s(g4523
I42
g4524
Vinsert
p8619
I65
VTagElement
p8620
tp8621
F0.25
s(g1367
I42
g1368
Vinsert
p8622
I42
VSimpleName: HttpServletRequest
p8623
tp8624
F0.25
s(g4605
I42
g4606
Vinsert
p8625
I42
VSimpleName: ImmutableMap
p8626
tp8627
I1
s(g259
I42
g260
Vinsert
p8628
I42
VSimpleName: endpoint
p8629
tp8630
F0.25
s(g5634
I42
g5635
Vinsert
p8631
I42
VSimpleName: IndexNameFormatter
p8632
tp8633
I1
s(g3644
I42
g3645
Vinsert
p8634
I40
VQualifiedName: input.serviceName
p8635
tp8636
I1
s(g2642
I42
g2643
Vinsert
p8637
I8
VBlock
p8638
tp8639
F54.75
s(g783
I42
g784
Vinsert
p8640
I42
VSimpleName: cause
p8641
tp8642
I2
s(g1683
I42
g1684
Vinsert
p8643
I45
VStringLiteral: "yyyy-MM-dd HH:mm:ss,SSS"
p8644
tp8645
I1
s(g1541
I42
g1542
Vinsert
p8646
I42
VSimpleName: onDuplicateKeyUpdate
p8647
tp8648
F0.25
s(g2619
I42
g2620
Vinsert
p8649
I60
VVariableDeclarationStatement
p8650
tp8651
I2
s(Vinsert
p8652
I42
VSimpleName: valueOf
p8653
Vinsert
p8654
I32
VMethodInvocation
p8655
tp8656
I11
s(g66
I42
g67
Vinsert
p8657
I43
VSimpleType: Object
p8658
tp8659
F0.25
s(g5349
I42
g5350
Vinsert
p8660
I42
VSimpleName: writer
p8661
tp8662
I1
s(Vinsert
p8663
I42
VSimpleName: get
p8664
Vinsert
p8665
I42
VSimpleName: ElasticsearchSpanConsumerTest
p8666
tp8667
F1.0
s(g4518
I42
g4519
Vinsert
p8668
I42
VSimpleName: client
p8669
tp8670
I1
s(g1085
I42
g1086
Vinsert
p8671
I42
VSimpleName: reader
p8672
tp8673
F1.25
s(g2865
I42
g2866
Vinsert
p8674
I60
VVariableDeclarationStatement
p8675
tp8676
I1
s(Vinsert
p8677
I42
VSimpleName: cluster
p8678
Vinsert
p8679
I14
VClassInstanceCreation
p8680
tp8681
I3
s(g2459
I42
g2460
Vinsert
p8682
I42
VSimpleName: query
p8683
tp8684
I1
s(g8027
I42
g8028
Vinsert
p8685
I42
VSimpleName: collector
p8686
tp8687
I2
s(Vinsert
p8688
I42
VSimpleName: httpUrl
p8689
Vinsert
p8690
I83
VModifier: public
p8691
tp8692
F0.5
s(Vinsert
p8693
I42
VSimpleName: valueOf
p8694
Vinsert
p8695
I42
VSimpleName: bytes
p8696
tp8697
I1
s(g6758
I42
g6759
Vinsert
p8698
I42
VSimpleName: DependencyLink
p8699
tp8700
I1
s(g4469
I42
g4470
Vinsert
p8701
I42
VSimpleName: Short
p8702
tp8703
F0.5
s(g734
I42
g735
Vinsert
p8704
I59
VVariableDeclarationFragment
p8705
tp8706
I1
s(Vinsert
p8707
I42
VSimpleName: timestamp
p8708
Vinsert
p8709
I42
VSimpleName: bestTimestamp_isSpanTimestamp
p8710
tp8711
F0.25
s(g357
I42
g358
Vinsert
p8712
I45
VStringLiteral: "service"
p8713
tp8714
I1
s(g3725
I42
g3726
Vinsert
p8715
I42
VSimpleName: timestamp
p8716
tp8717
I5
s(g1172
I42
g1173
Vinsert
p8718
I8
VBlock
p8719
tp8720
I6
s(g2350
I42
g2351
Vinsert
p8721
I14
VClassInstanceCreation
p8722
tp8723
I3
s(g2077
I42
g2078
Vinsert
p8724
I42
VSimpleName: isDefined
p8725
tp8726
I1
s(g4701
I42
g4702
Vinsert
p8727
I42
VSimpleName: MockResponse
p8728
tp8729
I1
s(g4972
I42
g4973
Vinsert
p8730
I42
VSimpleName: List
p8731
tp8732
I1
s(g497
I42
g498
Vinsert
p8733
I32
VMethodInvocation
p8734
tp8735
I2
s(g7768
I42
g7769
Vinsert
p8736
I42
VSimpleName: encoding
p8737
tp8738
F4.75
s(g2441
I42
g2442
Vinsert
p8739
I42
VSimpleName: query
p8740
tp8741
I1
s(g949
I42
g950
Vinsert
p8742
I21
VExpressionStatement
p8743
tp8744
F0.25
s(g4778
I42
g4779
Vinsert
p8745
I42
VSimpleName: value
p8746
tp8747
F0.25
s(g582
I42
g583
Vinsert
p8748
I42
VSimpleName: serviceName
p8749
tp8750
I1
s(Vinsert
p8751
I42
VSimpleName: readTimeout
p8752
Vinsert
p8753
I42
VSimpleName: connectTimeout
p8754
tp8755
I1
s(g3560
I42
g3561
Vinsert
p8756
I43
VSimpleType: SettableFuture
p8757
tp8758
I2
s(g8330
I42
g8331
Vinsert
p8759
I42
VSimpleName: expect
p8760
tp8761
I1
s(g2972
I42
g2973
Vinsert
p8762
I45
VStringLiteral: "http.method"
p8763
tp8764
I1
s(Vinsert
p8765
I42
VSimpleName: onError
p8766
Vinsert
p8767
I42
VSimpleName: Callback
p8768
tp8769
I1
s(g461
I42
g462
Vinsert
p8770
I42
VSimpleName: isEmpty
p8771
tp8772
I1
s(g6595
I42
g6596
Vinsert
p8773
I38
VPrefixExpression: !
p8774
tp8775
I1
s(g1316
I42
g1317
Vinsert
p8776
I43
VSimpleType: Exception
p8777
tp8778
F0.5
s(g7627
I42
g7628
Vinsert
p8779
I21
VExpressionStatement
p8780
tp8781
I1
s(g1197
I42
g1198
Vinsert
p8782
I42
VSimpleName: hosts
p8783
tp8784
I1
s(g791
I42
g792
Vinsert
p8785
I42
VSimpleName: traceIdSampler_counting
p8786
tp8787
F0.25
s(g31
I42
g32
Vinsert
p8788
I32
VMethodInvocation
p8789
tp8790
I6
s(Vinsert
p8791
I42
VSimpleName: eq
p8792
Vinsert
p8793
I74
VParameterizedType: List<Long>
p8794
tp8795
I1
s(g567
I42
g568
Vinsert
p8796
I16
VConditionalExpression
p8797
tp8798
I1
s(g8121
I42
g8122
Vinsert
p8799
I42
VSimpleName: serializedSpan
p8800
tp8801
I1
s(Vinsert
p8802
I42
VSimpleName: url
p8803
Vinsert
p8804
I42
VSimpleName: addPathSegment
p8805
tp8806
I1
s(g5831
I42
g5832
Vinsert
p8807
I42
VSimpleName: HasErrorCount
p8808
tp8809
I1
s(g2408
I42
g2409
Vinsert
p8810
I43
VSimpleType: ElasticsearchHttpStorage.Builder
p8811
tp8812
F1.25
s(g3636
I42
g3637
Vinsert
p8813
I45
VStringLiteral: "service"
p8814
tp8815
I1
s(g1594
I42
g1595
Vinsert
p8816
I86
VLambdaExpression
p8817
tp8818
I1
s(g714
I42
g715
Vinsert
p8819
I42
VSimpleName: es
p8820
tp8821
I1
s(g4913
I42
g4914
Vinsert
p8822
I74
VParameterizedType: Pair<String>
p8823
tp8824
I1
s(Vinsert
p8825
I42
VSimpleName: format
p8826
Vinsert
p8827
I41
VReturnStatement
p8828
tp8829
I3
s(g2619
I42
g2620
Vinsert
p8830
I42
VSimpleName: List
p8831
tp8832
I1
s(g4908
I42
g4909
Vinsert
p8833
I42
VSimpleName: baseUrl
p8834
tp8835
I1
s(g2668
I42
g2669
Vinsert
p8836
I45
VStringLiteral: "a"
p8837
tp8838
I1
s(g8397
I42
g8398
Vinsert
p8839
I25
VIfStatement
p8840
tp8841
I1
s(Vinsert
p8842
I42
VSimpleName: stream
p8843
Vinsert
p8844
I59
VVariableDeclarationFragment
p8845
tp8846
I4
s(g826
I42
g827
Vinsert
p8847
I42
VSimpleName: component
p8848
tp8849
F4.5
s(Vinsert
p8850
I42
VSimpleName: onSuccess
p8851
Vinsert
p8852
I42
VSimpleName: List
p8853
tp8854
F0.25
s(Vinsert
p8855
I42
VSimpleName: networkInterceptors
p8856
Vinsert
p8857
I57
VTypeLiteral
p8858
tp8859
F0.25
s(g699
I42
g700
Vinsert
p8860
I42
VSimpleName: Span
p8861
tp8862
F0.25
s(g2663
I42
g2664
Vinsert
p8863
I42
VSimpleName: IOException
p8864
tp8865
F0.25
s(g259
I42
g260
Vinsert
p8866
I78
VMarkerAnnotation
p8867
tp8868
F0.75
s(g6426
I42
g6427
Vinsert
p8869
I83
VModifier: final
p8870
tp8871
I1
s(g2187
I42
g2188
Vinsert
p8872
I42
VSimpleName: ActuateCollectorMetrics
p8873
tp8874
I1
s(g2046
I42
g2047
Vinsert
p8875
I42
VSimpleName: domain
p8876
tp8877
F1.25
s(g2054
I42
g2055
Vinsert
p8878
I13
VCharacterLiteral: '\u005ct'
p8879
tp8880
I1
s(g4430
I42
g4431
Vinsert
p8881
I42
VSimpleName: Sets
p8882
tp8883
I2
s(Vinsert
p8884
I42
VSimpleName: apply
p8885
Vinsert
p8886
I42
VSimpleName: processDependencies
p8887
tp8888
F0.5
s(g8392
I42
g8393
Vinsert
p8889
I45
VStringLiteral: "2"
p8890
tp8891
F2.5
s(Vinsert
p8892
I42
VSimpleName: compareTo
p8893
Vinsert
p8894
I42
VSimpleName: byTimestamp
p8895
tp8896
I3
s(g5369
I42
g5370
Vinsert
p8897
I27
VInfixExpression: +
p8898
tp8899
F0.25
s(g4923
I42
g4924
Vinsert
p8900
I42
VSimpleName: Server
p8901
tp8902
I2
s(g954
I42
g955
Vinsert
p8903
I42
VSimpleName: key
p8904
tp8905
I1
s(g4275
I42
g4276
Vinsert
p8906
I40
VQualifiedName: builder.zookeeper
p8907
tp8908
I1
s(g6172
I42
g6173
Vinsert
p8909
I42
VSimpleName: Exception
p8910
tp8911
F0.75
s(g2789
I42
g2790
Vinsert
p8912
I32
VMethodInvocation
p8913
tp8914
I2
s(g3867
I42
g3868
Vinsert
p8915
I43
VSimpleType: List
p8916
tp8917
F0.25
s(g587
I42
g588
Vinsert
p8918
I42
VSimpleName: collector
p8919
tp8920
I2
s(g699
I42
g700
Vinsert
p8921
I42
VSimpleName: callback
p8922
tp8923
F0.25
s(g3938
I42
g3939
Vinsert
p8924
I42
VSimpleName: outOf10000
p8925
tp8926
I1
s(g5897
I42
g5898
Vinsert
p8927
I8
VBlock
p8928
tp8929
I1
s(g3493
I42
g3494
Vinsert
p8930
I83
VModifier: final
p8931
tp8932
I1
s(g2684
I42
g2685
Vinsert
p8933
I39
VPrimitiveType: void
p8934
tp8935
F1.0
s(g2108
I42
g2109
Vinsert
p8936
I42
VSimpleName: indexTemplate
p8937
tp8938
I1
s(g2880
I42
g2881
Vinsert
p8939
I21
VExpressionStatement
p8940
tp8941
I2
s(g527
I42
g528
Vinsert
p8942
I42
VSimpleName: Annotation
p8943
tp8944
I3
s(g621
I42
g622
Vinsert
p8945
I40
VQualifiedName: builder.maxRequests
p8946
tp8947
F0.25
s(g2925
I42
g2926
Vinsert
p8948
I80
VMemberValuePair
p8949
tp8950
F0.75
s(g2647
I42
g2648
Vinsert
p8951
I21
VExpressionStatement
p8952
tp8953
I2
s(g3649
I42
g3650
Vinsert
p8954
I25
VIfStatement
p8955
tp8956
F9.25
s(g8751
I42
g8752
Vinsert
p8957
I39
VPrimitiveType: int
p8958
tp8959
F0.25
s(g2224
I42
g2225
Vinsert
p8960
I43
VSimpleType: List
p8961
tp8962
F1.5
s(g3398
I42
g3399
Vinsert
p8963
I86
VLambdaExpression
p8964
tp8965
I1
s(g801
I42
g802
Vinsert
p8966
I42
VSimpleName: Interceptor
p8967
tp8968
I2
s(g2972
I42
g2973
Vinsert
p8969
I40
VQualifiedName: request.binaryAnnotations
p8970
tp8971
I1
s(g744
I42
g745
Vinsert
p8972
I43
VSimpleType: Calendar
p8973
tp8974
I1
s(g762
I42
g763
Vinsert
p8975
I40
VQualifiedName: e.message
p8976
tp8977
I1
s(Vinsert
p8978
I42
VSimpleName: close
p8979
Vinsert
p8980
I42
VSimpleName: checkArgument
p8981
tp8982
I1
s(g4945
I42
g4946
Vinsert
p8983
I62
VInstanceofExpression
p8984
tp8985
I1
s(g3725
I42
g3726
Vinsert
p8986
I39
VPrimitiveType: int
p8987
tp8988
I1
s(Vinsert
p8989
I42
VSimpleName: get
p8990
Vinsert
p8991
I42
VSimpleName: HttpSpanConsumerTest
p8992
tp8993
F0.25
s(Vinsert
p8994
I42
VSimpleName: onSuccess
p8995
Vinsert
p8996
I42
VSimpleName: V
p8997
tp8998
F0.5
s(g2875
I42
g2876
Vinsert
p8999
I60
VVariableDeclarationStatement
p9000
tp9001
I1
s(g3485
I42
g3486
Vinsert
p9002
I45
VStringLiteral: "      \u005c"value\u005c": \u005c"9223372036854775807\u005c","
p9003
tp9004
I1
s(g1443
I42
g1444
Vinsert
p9005
I8
VBlock
p9006
tp9007
I1
s(Vinsert
p9008
I42
VSimpleName: build
p9009
Vinsert
p9010
I42
VSimpleName: annotationQuery
p9011
tp9012
I1
s(g5045
I42
g5046
Vinsert
p9013
I21
VExpressionStatement
p9014
tp9015
I2
s(g1728
I42
g1729
Vinsert
p9016
I83
VModifier: public
p9017
tp9018
F0.25
s(Vinsert
p9019
I42
VSimpleName: builder
p9020
Vinsert
p9021
I42
VSimpleName: request
p9022
tp9023
I1
s(g6804
I42
g6805
Vinsert
p9024
I59
VVariableDeclarationFragment
p9025
tp9026
I5
s(g1293
I42
g1294
Vinsert
p9027
I43
VSimpleType: InterruptedException
p9028
tp9029
F0.25
s(g684
I42
g685
Vinsert
p9030
I42
VSimpleName: apply
p9031
tp9032
F0.25
s(g4114
I42
g4115
Vinsert
p9033
I27
VInfixExpression: ==
p9034
tp9035
I5
s(Vinsert
p9036
I42
VSimpleName: value
p9037
Vinsert
p9038
I42
VSimpleName: isClientSide
p9039
tp9040
F0.25
s(g2145
I42
g2146
Vinsert
p9041
I42
VSimpleName: collectorMetrics
p9042
tp9043
F1.25
s(g7331
I42
g7332
Vinsert
p9044
I42
VSimpleName: SearchResponse
p9045
tp9046
F0.25
s(Vinsert
p9047
I42
VSimpleName: values
p9048
Vinsert
p9049
I40
VQualifiedName: Dependencies.Builder
p9050
tp9051
I1
s(g5045
I42
g5046
Vinsert
p9052
I42
VSimpleName: guard1
p9053
tp9054
I1
s(g4285
I42
g4286
Vinsert
p9055
I42
VSimpleName: List
p9056
tp9057
I3
s(g2018
I42
g2019
Vinsert
p9058
I58
VVariableDeclarationExpression
p9059
tp9060
I1
s(g136
I42
g137
Vinsert
p9061
I43
VSimpleType: Ordering
p9062
tp9063
I1
s(g557
I42
g558
Vinsert
p9064
I42
VSimpleName: ElasticsearchHttpStorage
p9065
tp9066
I1
s(g924
I42
g925
Vinsert
p9067
I42
VSimpleName: bucketedTraceIdCalls
p9068
tp9069
I1
s(g2763
I42
g2764
Vinsert
p9070
I41
VReturnStatement
p9071
tp9072
I2
s(g441
I42
g442
Vinsert
p9073
I42
VSimpleName: isInstanceOf
p9074
tp9075
I1
s(g4673
I42
g4674
Vinsert
p9076
I21
VExpressionStatement
p9077
tp9078
I1
s(g8707
I42
g8708
Vinsert
p9079
I39
VPrimitiveType: void
p9080
tp9081
F0.25
s(g689
I42
g690
Vinsert
p9082
I43
VSimpleType: Set
p9083
tp9084
I1
s(g1237
I42
g1238
Vinsert
p9085
I40
VQualifiedName: Constants.CLIENT_SEND
p9086
tp9087
I1
s(g4840
I42
g4841
Vinsert
p9088
I42
VSimpleName: setIndexCacheTtl
p9089
tp9090
F0.25
s(g56
I42
g57
Vinsert
p9091
I14
VClassInstanceCreation
p9092
tp9093
F7.5
s(g7104
I42
g7105
Vinsert
p9094
I45
VStringLiteral: "zipkin.query.lookback:"
p9095
tp9096
I1
s(g3683
I42
g3684
Vinsert
p9097
I12
VCatchClause
p9098
tp9099
F0.25
s(g4285
I42
g4286
Vinsert
p9100
I42
VSimpleName: ListenableFutureCall
p9101
tp9102
I1
s(g8078
I42
g8079
Vinsert
p9103
I42
VSimpleName: builder
p9104
tp9105
F0.25
s(g3417
I42
g3418
Vinsert
p9106
I42
VSimpleName: formatter
p9107
tp9108
I2
s(g2712
I42
g2713
Vinsert
p9109
I41
VReturnStatement
p9110
tp9111
I1
s(g4016
I42
g4017
Vinsert
p9112
I8
VBlock
p9113
tp9114
I3
s(g7839
I42
g7840
Vinsert
p9115
I40
VQualifiedName: Span2.Kind.SERVER
p9116
tp9117
F0.25
s(g1367
I42
g1368
Vinsert
p9118
I43
VSimpleType: HttpServletRequest
p9119
tp9120
F0.25
s(g1944
I42
g1945
Vinsert
p9121
I52
VThisExpression
p9122
tp9123
F0.5
s(g3644
I42
g3645
Vinsert
p9124
I40
VQualifiedName: zipkin.internal.v2.Endpoint.Builder
p9125
tp9126
I1
s(g659
I42
g660
Vinsert
p9127
I43
VSimpleType: ArrayList
p9128
tp9129
I1
s(g6804
I42
g6805
Vinsert
p9130
I83
VModifier: public
p9131
tp9132
F0.25
s(g4518
I42
g4519
Vinsert
p9133
I32
VMethodInvocation
p9134
tp9135
I7
s(g4306
I42
g4307
Vinsert
p9136
I32
VMethodInvocation
p9137
tp9138
I3
s(g106
I42
g107
Vinsert
p9139
I42
VSimpleName: rethrow
p9140
tp9141
F0.25
s(g1308
I42
g1309
Vinsert
p9142
I32
VMethodInvocation
p9143
tp9144
F4.0
s(g5674
I42
g5675
Vinsert
p9145
I42
VSimpleName: SERVER_SEND
p9146
tp9147
I2
s(g3072
I42
g3073
Vinsert
p9148
I42
VSimpleName: TracedSpanStore
p9149
tp9150
I1
s(Vinsert
p9151
I42
VSimpleName: expectMessage
p9152
Vinsert
p9153
I43
VSimpleType: IOException
p9154
tp9155
F0.25
s(g4187
I42
g4188
Vinsert
p9156
I42
VSimpleName: callback
p9157
tp9158
F0.25
s(g6094
I42
g6095
Vinsert
p9159
I43
VSimpleType: Span
p9160
tp9161
F0.25
s(g249
I42
g250
Vinsert
p9162
I42
VSimpleName: traceIdTimestamp
p9163
tp9164
F0.5
s(g5528
I42
g5529
Vinsert
p9165
I49
VSwitchCase
p9166
tp9167
I1
s(g1821
I42
g1822
Vinsert
p9168
I42
VSimpleName: ByteBuffer
p9169
tp9170
F0.25
s(g7985
I42
g7986
Vinsert
p9171
I42
VSimpleName: Override
p9172
tp9173
F1.5
s(Vinsert
p9174
I42
VSimpleName: put
p9175
Vinsert
p9176
I43
VSimpleType: Map
p9177
tp9178
I1
s(g2441
I42
g2442
Vinsert
p9179
I43
VSimpleType: QueryBuilder
p9180
tp9181
I1
s(g3268
I42
g3269
Vinsert
p9182
I43
VSimpleType: String
p9183
tp9184
F0.25
s(g8825
I42
g8826
Vinsert
p9185
I31
VMethodDeclaration
p9186
tp9187
F0.25
s(g461
I42
g462
Vinsert
p9188
I33
VNullLiteral
p9189
tp9190
I1
s(g2192
I42
g2193
Vinsert
p9191
I43
VSimpleType: List
p9192
tp9193
I1
s(g8078
I42
g8079
Vinsert
p9194
I42
VSimpleName: hosts
p9195
tp9196
I1
s(g6997
I42
g6998
Vinsert
p9197
I42
VSimpleName: sleepABit
p9198
tp9199
I1
s(g1821
I42
g1822
Vinsert
p9200
I42
VSimpleName: Long
p9201
tp9202
F0.25
s(g1846
I42
g1847
Vinsert
p9203
I43
VSimpleType: SearchRequest.Filters
p9204
tp9205
I2
s(g2637
I42
g2638
Vinsert
p9206
I42
VSimpleName: request
p9207
tp9208
F0.5
s(g5090
I42
g5091
Vinsert
p9209
I74
VParameterizedType: AtomicReference<CheckResult>
p9210
tp9211
F0.25
s(g2838
I42
g2839
Vinsert
p9212
I42
VSimpleName: reader
p9213
tp9214
I1
s(Vinsert
p9215
I42
VSimpleName: writeByte
p9216
Vinsert
p9217
I42
VSimpleName: json
p9218
tp9219
I2
s(g1826
I42
g1827
Vinsert
p9220
I86
VLambdaExpression
p9221
tp9222
I1
s(g7913
I42
g7914
Vinsert
p9223
I42
VSimpleName: sizeInBytes
p9224
tp9225
I4
s(g7331
I42
g7332
Vinsert
p9226
I25
VIfStatement
p9227
tp9228
I2
s(g770
I42
g771
Vinsert
p9229
I21
VExpressionStatement
p9230
tp9231
I1
s(g5462
I42
g5463
Vinsert
p9232
I52
VThisExpression
p9233
tp9234
F1.25
s(g557
I42
g558
Vinsert
p9235
I21
VExpressionStatement
p9236
tp9237
I3
s(g4034
I42
g4035
Vinsert
p9238
I40
VQualifiedName: SpanDecoder.THRIFT_DECODER
p9239
tp9240
I1
s(g4928
I42
g4929
Vinsert
p9241
I42
VSimpleName: singletonList_json
p9242
tp9243
F0.25
s(Vinsert
p9244
I42
VSimpleName: hasMessage
p9245
Vinsert
p9246
I44
VSingleVariableDeclaration
p9247
tp9248
I1
s(g1821
I42
g1822
Vinsert
p9249
I42
VSimpleName: Map
p9250
tp9251
F0.25
s(g3217
I42
g3218
Vinsert
p9252
I40
VQualifiedName: BinaryAnnotation.Type
p9253
tp9254
I1
s(g6853
I42
g6854
Vinsert
p9255
I34
VNumberLiteral: 4
p9256
tp9257
F0.75
s(Vinsert
p9258
I42
VSimpleName: addAll
p9259
Vinsert
p9260
I42
VSimpleName: Schema
p9261
tp9262
F0.25
s(g7287
I42
g7288
Vinsert
p9263
I45
VStringLiteral: ""
p9264
tp9265
I5
s(g4192
I42
g4193
Vinsert
p9266
I42
VSimpleName: Collections
p9267
tp9268
F0.25
s(g8606
I42
g8607
Vinsert
p9269
I48
VSuperMethodInvocation
p9270
tp9271
F0.25
s(g2547
I42
g2548
Vinsert
p9272
I42
VSimpleName: serviceNames
p9273
tp9274
I1
s(g1484
I42
g1485
Vinsert
p9275
I74
VParameterizedType: Call<List<List<Span>>>
p9276
tp9277
I1
s(g7091
I42
g7092
Vinsert
p9278
I42
VSimpleName: a
p9279
tp9280
I1
s(g4480
I42
g4481
Vinsert
p9281
I40
VQualifiedName: Codec.JSON
p9282
tp9283
I2
s(g3335
I42
g3336
Vinsert
p9284
I43
VSimpleType: Logger
p9285
tp9286
I1
s(g3783
I42
g3784
Vinsert
p9287
I42
VSimpleName: traceId
p9288
tp9289
I1
s(Vinsert
p9290
I42
VSimpleName: set
p9291
Vinsert
p9292
I42
VSimpleName: Collection
p9293
tp9294
F0.25
s(Vinsert
p9295
I42
VSimpleName: add
p9296
Vinsert
p9297
I42
VSimpleName: hosts
p9298
tp9299
I1
s(g6134
I42
g6135
Vinsert
p9300
I42
VSimpleName: Util
p9301
tp9302
I2
s(Vinsert
p9303
I42
VSimpleName: onSuccess
p9304
Vinsert
p9305
I42
VSimpleName: A
p9306
tp9307
F0.25
s(g512
I42
g513
Vinsert
p9308
I31
VMethodDeclaration
p9309
tp9310
F0.25
s(g2818
I42
g2819
Vinsert
p9311
I42
VSimpleName: SimpleDateFormat
p9312
tp9313
I1
s(g479
I42
g480
Vinsert
p9314
I74
VParameterizedType: List<String>
p9315
tp9316
F0.25
s(g5674
I42
g5675
Vinsert
p9317
I42
VSimpleName: twoDaysAgo
p9318
tp9319
I2
s(g1489
I42
g1490
Vinsert
p9320
I44
VSingleVariableDeclaration
p9321
tp9322
F0.25
s(g6482
I42
g6483
Vinsert
p9323
I45
VStringLiteral: "unhandled error processing traceId -> spanId: "
p9324
tp9325
I1
s(g418
I42
g419
Vinsert
p9326
I42
VSimpleName: Test
p9327
tp9328
F0.25
s(g4712
I42
g4713
Vinsert
p9329
I43
VSimpleType: Exception
p9330
tp9331
F0.25
s(g3115
I42
g3116
Vinsert
p9332
I78
VMarkerAnnotation
p9333
tp9334
F0.25
s(g4498
I42
g4499
Vinsert
p9335
I45
VStringLiteral: "bar"
p9336
tp9337
I1
s(g1265
I42
g1266
Vinsert
p9338
I40
VQualifiedName: CassandraStorage.Builder
p9339
tp9340
F0.25
s(g962
I42
g963
Vinsert
p9341
I21
VExpressionStatement
p9342
tp9343
I3
s(g3541
I42
g3542
Vinsert
p9344
I41
VReturnStatement
p9345
tp9346
I1
s(g4425
I42
g4426
Vinsert
p9347
I60
VVariableDeclarationStatement
p9348
tp9349
I1
s(g1744
I42
g1745
Vinsert
p9350
I42
VSimpleName: state
p9351
tp9352
I2
s(g3974
I42
g3975
Vinsert
p9353
I45
VStringLiteral: "}"
p9354
tp9355
I3
s(g3992
I42
g3993
Vinsert
p9356
I43
VSimpleType: DependencyLinkSpan.Builder
p9357
tp9358
I1
s(g3804
I42
g3805
Vinsert
p9359
I42
VSimpleName: nextName
p9360
tp9361
I1
s(g744
I42
g745
Vinsert
p9362
I83
VModifier: public
p9363
tp9364
F0.25
s(g2949
I42
g2950
Vinsert
p9365
I34
VNumberLiteral: 16
p9366
tp9367
I1
s(g7197
I42
g7198
Vinsert
p9368
I32
VMethodInvocation
p9369
tp9370
F25.5
s(g1128
I42
g1129
Vinsert
p9371
I58
VVariableDeclarationExpression
p9372
tp9373
I6
s(g6162
I42
g6163
Vinsert
p9374
I52
VThisExpression
p9375
tp9376
I1
s(g126
I42
g127
Vinsert
p9377
I42
VSimpleName: es
p9378
tp9379
I3
s(g4469
I42
g4470
Vinsert
p9380
I33
VNullLiteral
p9381
tp9382
F0.25
s(g4225
I42
g4226
Vinsert
p9383
I34
VNumberLiteral: 2L
p9384
tp9385
I1
s(g6997
I42
g6998
Vinsert
p9386
I32
VMethodInvocation
p9387
tp9388
I5
s(g1172
I42
g1173
Vinsert
p9389
I42
VSimpleName: Annotation
p9390
tp9391
I2
s(g1332
I42
g1333
Vinsert
p9392
I43
VSimpleType: Component.CheckResult
p9393
tp9394
I1
s(g7951
I42
g7952
Vinsert
p9395
I42
VSimpleName: span
p9396
tp9397
F0.75
s(g5746
I42
g5747
Vinsert
p9398
I32
VMethodInvocation
p9399
tp9400
F18.25
s(g6129
I42
g6130
Vinsert
p9401
I43
VSimpleType: ElasticsearchStorage
p9402
tp9403
F0.25
s(g451
I42
g452
Vinsert
p9404
I66
VTextElement:  instead
p9405
tp9406
F0.25
s(g6731
I42
g6732
Vinsert
p9407
I44
VSingleVariableDeclaration
p9408
tp9409
F1.75
s(g841
I42
g842
Vinsert
p9410
I42
VSimpleName: HttpLoggingInterceptor
p9411
tp9412
I1
s(g684
I42
g685
Vinsert
p9413
I43
VSimpleType: Map
p9414
tp9415
F0.25
s(g3662
I42
g3663
Vinsert
p9416
I42
VSimpleName: string
p9417
tp9418
I1
s(Vinsert
p9419
I42
VSimpleName: readSpans
p9420
Vinsert
p9421
I40
VQualifiedName: TestObjects.TRACE
p9422
tp9423
I1
s(g729
I42
g730
Vinsert
p9424
I42
VSimpleName: Level
p9425
tp9426
F0.25
s(g4425
I42
g4426
Vinsert
p9427
I43
VSimpleType: ElasticsearchStorage.Builder
p9428
tp9429
I1
s(g7674
I42
g7675
Vinsert
p9430
I42
VSimpleName: spans
p9431
tp9432
I1
s(g1058
I42
g1059
Vinsert
p9433
I45
VStringLiteral: "input.span"
p9434
tp9435
F0.25
s(g4959
I42
g4960
Vinsert
p9436
I83
VModifier: public
p9437
tp9438
F0.25
s(g3859
I42
g3860
Vinsert
p9439
I42
VSimpleName: getLow
p9440
tp9441
I2
s(g5259
I42
g5260
Vinsert
p9442
I42
VSimpleName: tracer
p9443
tp9444
I1
s(g2304
I42
g2305
Vinsert
p9445
I43
VSimpleType: BasicAuthInterceptor
p9446
tp9447
I1
s(g512
I42
g513
Vinsert
p9448
I83
VModifier: public
p9449
tp9450
F0.25
s(g4848
I42
g4849
Vinsert
p9451
I42
VSimpleName: result
p9452
tp9453
I3
s(g684
I42
g685
Vinsert
p9454
I74
VParameterizedType: Map<Object,?>
p9455
tp9456
F0.25
s(Vinsert
p9457
I42
VSimpleName: get
p9458
Vinsert
p9459
I43
VSimpleType: CassandraStorage
p9460
tp9461
F0.25
s(g7768
I42
g7769
Vinsert
p9462
I42
VSimpleName: body
p9463
tp9464
F0.25
s(g2574
I42
g2575
Vinsert
p9465
I43
VSimpleType: Span
p9466
tp9467
F0.25
s(g1589
I42
g1590
Vinsert
p9468
I42
VSimpleName: start_failsOnInvalidZooKeeper
p9469
tp9470
F0.25
s(Vinsert
p9471
I42
VSimpleName: timestamp
p9472
Vinsert
p9473
I42
VSimpleName: toBuilder
p9474
tp9475
I1
s(g7112
I42
g7113
Vinsert
p9476
I27
VInfixExpression: +
p9477
tp9478
F0.25
s(g3417
I42
g3418
Vinsert
p9479
I42
VSimpleName: ParseException
p9480
tp9481
F0.25
s(g1242
I42
g1243
Vinsert
p9482
I42
VSimpleName: Void
p9483
tp9484
F1.75
s(g4072
I42
g4073
Vinsert
p9485
I39
VPrimitiveType: float
p9486
tp9487
I1
s(g4136
I42
g4137
Vinsert
p9488
I42
VSimpleName: writeTrace
p9489
tp9490
I1
s(g487
I42
g488
Vinsert
p9491
I45
VStringLiteral: "test-span"
p9492
tp9493
I1
s(g3618
I42
g3619
Vinsert
p9494
I39
VPrimitiveType: boolean
p9495
tp9496
I1
s(Vinsert
p9497
I42
VSimpleName: spanStore
p9498
Vinsert
p9499
I52
VThisExpression
p9500
tp9501
I2
s(Vinsert
p9502
I42
VSimpleName: normalizeTraceId
p9503
Vinsert
p9504
I42
VSimpleName: Span
p9505
tp9506
I2
s(g1464
I42
g1465
Vinsert
p9507
I66
VTextElement:  storage
p9508
tp9509
I1
s(g3335
I42
g3336
Vinsert
p9510
I40
VQualifiedName: java.util.logging.Logger
p9511
tp9512
I1
s(Vinsert
p9513
I42
VSimpleName: traceId
p9514
Vinsert
p9515
I40
VQualifiedName: Span.Kind.SERVER
p9516
tp9517
I1
s(g2619
I42
g2620
Vinsert
p9518
I8
VBlock
p9519
tp9520
I1
s(g4749
I42
g4750
Vinsert
p9521
I40
VQualifiedName: Codec.JSON
p9522
tp9523
I1
s(g4480
I42
g4481
Vinsert
p9524
I74
VParameterizedType: List<Span>
p9525
tp9526
F0.25
s(g621
I42
g622
Vinsert
p9527
I42
VSimpleName: maxRequests
p9528
tp9529
F0.5
s(Vinsert
p9530
I42
VSimpleName: toBuilder
p9531
Vinsert
p9532
I42
VSimpleName: getTrace_retrieves128bitTraceIdByLower64Bits
p9533
tp9534
F0.25
s(g1
I42
g2
Vinsert
p9535
I43
VSimpleType: Span.Builder
p9536
tp9537
F0.25
s(g456
I42
g457
Vinsert
p9538
I43
VSimpleType: IOException
p9539
tp9540
I1
s(g4034
I42
g4035
Vinsert
p9541
I21
VExpressionStatement
p9542
tp9543
I2
s(g3367
I42
g3368
Vinsert
p9544
I14
VClassInstanceCreation
p9545
tp9546
F3.5
s(Vinsert
p9547
I42
VSimpleName: get
p9548
Vinsert
p9549
I42
VSimpleName: lazyClient
p9550
tp9551
I3
s(g762
I42
g763
Vinsert
p9552
I42
VSimpleName: getMimeDecoder
p9553
tp9554
I1
s(g5221
I42
g5222
Vinsert
p9555
I42
VSimpleName: String
p9556
tp9557
F1.25
s(g1489
I42
g1490
Vinsert
p9558
I42
VSimpleName: Buffer
p9559
tp9560
I1
s(g3783
I42
g3784
Vinsert
p9561
I42
VSimpleName: Util
p9562
tp9563
I1
s(g1469
I42
g1470
Vinsert
p9564
I83
VModifier: final
p9565
tp9566
F0.25
s(g1022
I42
g1023
Vinsert
p9567
I45
VStringLiteral: "48485a3953bb6124"
p9568
tp9569
I1
s(g631
I42
g632
Vinsert
p9570
I42
VSimpleName: getUnchecked
p9571
tp9572
I1
s(g344
I42
g345
Vinsert
p9573
I44
VSingleVariableDeclaration
p9574
tp9575
F0.25
s(g8791
I42
g8792
Vinsert
p9576
I43
VSimpleType: List
p9577
tp9578
I1
s(Vinsert
p9579
I42
VSimpleName: append
p9580
Vinsert
p9581
I42
VSimpleName: url
p9582
tp9583
I7
s(g7380
I42
g7381
Vinsert
p9584
I14
VClassInstanceCreation
p9585
tp9586
I2
s(Vinsert
p9587
I42
VSimpleName: readSpan
p9588
Vinsert
p9589
I45
VStringLiteral: "    \u005c"ipv4\u005c": \u005c"127.0.0.1\u005c"\u005cn"
p9590
tp9591
I1
s(g4792
I42
g4793
Vinsert
p9592
I42
VSimpleName: Util
p9593
tp9594
I1
s(g5598
I42
g5599
Vinsert
p9595
I42
VSimpleName: Throwable
p9596
tp9597
I1
s(g2712
I42
g2713
Vinsert
p9598
I42
VSimpleName: MockResponse
p9599
tp9600
I1
s(g5775
I42
g5776
Vinsert
p9601
I42
VSimpleName: insert
p9602
tp9603
I1
s(Vinsert
p9604
I42
VSimpleName: onSuccess
p9605
Vinsert
p9606
I43
VSimpleType: T
p9607
tp9608
F0.25
s(g2967
I42
g2968
Vinsert
p9609
I42
VSimpleName: Short
p9610
tp9611
I1
s(g6355
I42
g6356
Vinsert
p9612
I32
VMethodInvocation
p9613
tp9614
I1
s(Vinsert
p9615
I42
VSimpleName: substring
p9616
Vinsert
p9617
I42
VSimpleName: nestedField
p9618
tp9619
I1
s(g6867
I42
g6868
Vinsert
p9620
I43
VSimpleType: String
p9621
tp9622
F0.25
s(g2475
I42
g2476
Vinsert
p9623
I8
VBlock
p9624
tp9625
I5
s(g3268
I42
g3269
Vinsert
p9626
I42
VSimpleName: args
p9627
tp9628
F0.25
s(g1090
I42
g1091
Vinsert
p9629
I32
VMethodInvocation
p9630
tp9631
I3
s(g3644
I42
g3645
Vinsert
p9632
I42
VSimpleName: newBuilder
p9633
tp9634
I1
s(g4095
I42
g4096
Vinsert
p9635
I42
VSimpleName: links
p9636
tp9637
I1
s(g3997
I42
g3998
Vinsert
p9638
I42
VSimpleName: build
p9639
tp9640
I1
s(g841
I42
g842
Vinsert
p9641
I42
VSimpleName: getenv
p9642
tp9643
I1
s(g7159
I42
g7160
Vinsert
p9644
I42
VSimpleName: client
p9645
tp9646
F2.25
s(g5090
I42
g5091
Vinsert
p9647
I43
VSimpleType: CheckResult
p9648
tp9649
F0.25
s(g380
I42
g381
Vinsert
p9650
I42
VSimpleName: clientSpanThrift
p9651
tp9652
F0.25
s(g5410
I42
g5411
Vinsert
p9653
I42
VSimpleName: Override
p9654
tp9655
F1.0
s(Vinsert
p9656
I42
VSimpleName: equals
p9657
Vinsert
p9658
I42
VSimpleName: ipv4
p9659
tp9660
F0.5
s(g3398
I42
g3399
Vinsert
p9661
I42
VSimpleName: getServiceNames
p9662
tp9663
F0.25
s(g41
I42
g42
Vinsert
p9664
I42
VSimpleName: callback
p9665
tp9666
I1
s(g6745
I42
g6746
Vinsert
p9667
I32
VMethodInvocation
p9668
tp9669
I1
s(g418
I42
g419
Vinsert
p9670
I83
VModifier: public
p9671
tp9672
F0.25
s(g1192
I42
g1193
Vinsert
p9673
I42
VSimpleName: ByteBuffer
p9674
tp9675
I1
s(g101
I42
g102
Vinsert
p9676
I42
VSimpleName: ZipkinHttpCollector
p9677
tp9678
F0.25
s(g3250
I42
g3251
Vinsert
p9679
I43
VSimpleType: RuntimeException
p9680
tp9681
I1
s(g876
I42
g877
Vinsert
p9682
I42
VSimpleName: Before
p9683
tp9684
F0.25
s(g3105
I42
g3106
Vinsert
p9685
I42
VSimpleName: spanStore
p9686
tp9687
F1.25
s(g51
I42
g52
Vinsert
p9688
I21
VExpressionStatement
p9689
tp9690
I1
s(g171
I42
g172
Vinsert
p9691
I8
VBlock
p9692
tp9693
I1
s(g6552
I42
g6553
Vinsert
p9694
I42
VSimpleName: traceId
p9695
tp9696
I1
s(g811
I42
g812
Vinsert
p9697
I45
VStringLiteral: "service"
p9698
tp9699
I1
s(g4557
I42
g4558
Vinsert
p9700
I42
VSimpleName: Date
p9701
tp9702
I1
s(g1113
I42
g1114
Vinsert
p9703
I45
VStringLiteral: "/api/v1/spans"
p9704
tp9705
I2
s(Vinsert
p9706
I42
VSimpleName: clear
p9707
Vinsert
p9708
I34
VNumberLiteral: 1
p9709
tp9710
I1
s(g2350
I42
g2351
Vinsert
p9711
I42
VSimpleName: DependencyLinker
p9712
tp9713
I1
s(g2547
I42
g2548
Vinsert
p9714
I42
VSimpleName: latestTimeStamp
p9715
tp9716
I2
s(Vinsert
p9717
I42
VSimpleName: builder
p9718
Vinsert
p9719
I43
VSimpleType: Cluster.Builder
p9720
tp9721
I1
s(Vinsert
p9722
I42
VSimpleName: execute
p9723
Vinsert
p9724
I83
VModifier: public
p9725
tp9726
F0.25
s(g3788
I42
g3789
Vinsert
p9727
I42
VSimpleName: writer
p9728
tp9729
F1.25
s(g2925
I42
g2926
Vinsert
p9730
I42
VSimpleName: initMethod
p9731
tp9732
F0.25
s(g1192
I42
g1193
Vinsert
p9733
I42
VSimpleName: DEPENDENCY_LINK_ADAPTER
p9734
tp9735
I1
s(g8652
I42
g8653
Vinsert
p9736
I42
VSimpleName: Boolean
p9737
tp9738
I1
s(Vinsert
p9739
I42
VSimpleName: register
p9740
Vinsert
p9741
I45
VStringLiteral: "zipkin.storage.elasticsearch.legacy-reads-enabled:false"
p9742
tp9743
I1
s(g2340
I42
g2341
Vinsert
p9744
I40
VQualifiedName: writer.sampler
p9745
tp9746
I1
s(g1045
I42
g1046
Vinsert
p9747
I27
VInfixExpression: ==
p9748
tp9749
I1
s(g239
I42
g240
Vinsert
p9750
I42
VSimpleName: connect
p9751
tp9752
F0.25
s(g5000
I42
g5001
Vinsert
p9753
I53
VThrowStatement
p9754
tp9755
F0.25
s(g2789
I42
g2790
Vinsert
p9756
I59
VVariableDeclarationFragment
p9757
tp9758
I1
s(g1693
I42
g1694
Vinsert
p9759
I59
VVariableDeclarationFragment
p9760
tp9761
I1
s(g1197
I42
g1198
Vinsert
p9762
I42
VSimpleName: es
p9763
tp9764
I1
s(g7768
I42
g7769
Vinsert
p9765
I27
VInfixExpression: &&
p9766
tp9767
I2
s(g2936
I42
g2937
Vinsert
p9768
I34
VNumberLiteral: 10
p9769
tp9770
I1
s(Vinsert
p9771
I42
VSimpleName: get
p9772
Vinsert
p9773
I42
VSimpleName: logger
p9774
tp9775
I1
s(g2818
I42
g2819
Vinsert
p9776
I42
VSimpleName: setTimeZone
p9777
tp9778
I1
s(g4647
I42
g4648
Vinsert
p9779
I42
VSimpleName: String
p9780
tp9781
I1
s(g3895
I42
g3896
Vinsert
p9782
I42
VSimpleName: with128BitId
p9783
tp9784
I1
s(g1964
I42
g1965
Vinsert
p9785
I32
VMethodInvocation
p9786
tp9787
I26
s(g3838
I42
g3839
Vinsert
p9788
I42
VSimpleName: Test
p9789
tp9790
F0.25
s(Vinsert
p9791
I42
VSimpleName: setBootstrapServers
p9792
Vinsert
p9793
I59
VVariableDeclarationFragment
p9794
tp9795
I1
s(g6195
I42
g6196
Vinsert
p9796
I43
VSimpleType: LinkedHashMap
p9797
tp9798
I1
s(g7541
I42
g7542
Vinsert
p9799
I42
VSimpleName: getById
p9800
tp9801
I1
s(g1505
I42
g1506
Vinsert
p9802
I42
VSimpleName: ZipkinKafkaCollectorAutoConfiguration
p9803
tp9804
I1
s(g3307
I42
g3308
Vinsert
p9805
I8
VBlock
p9806
tp9807
I2
s(g6094
I42
g6095
Vinsert
p9808
I42
VSimpleName: request
p9809
tp9810
I1
s(g2828
I42
g2829
Vinsert
p9811
I86
VLambdaExpression
p9812
tp9813
I1
s(g796
I42
g797
Vinsert
p9814
I83
VModifier: public
p9815
tp9816
F0.25
s(Vinsert
p9817
I42
VSimpleName: iterator
p9818
Vinsert
p9819
I42
VSimpleName: input
p9820
tp9821
I2
s(g7905
I42
g7906
Vinsert
p9822
I43
VSimpleType: MultiBucketsAggregation
p9823
tp9824
I1
s(g2833
I42
g2834
Vinsert
p9825
I42
VSimpleName: Callback
p9826
tp9827
F0.25
s(Vinsert
p9828
I42
VSimpleName: getEnvironment
p9829
Vinsert
p9830
I42
VSimpleName: hosts
p9831
tp9832
I2
s(g871
I42
g872
Vinsert
p9833
I42
VSimpleName: calls
p9834
tp9835
I2
s(g4639
I42
g4640
Vinsert
p9836
I32
VMethodInvocation
p9837
tp9838
I1
s(g5634
I42
g5635
Vinsert
p9839
I21
VExpressionStatement
p9840
tp9841
I2
s(Vinsert
p9842
I42
VSimpleName: timestamp
p9843
Vinsert
p9844
I42
VSimpleName: parentId
p9845
tp9846
I1
s(g1795
I42
g1796
Vinsert
p9847
I43
VSimpleType: CollectorMetrics
p9848
tp9849
F0.25
s(g5221
I42
g5222
Vinsert
p9850
I42
VSimpleName: Override
p9851
tp9852
F0.25
s(g3181
I42
g3182
Vinsert
p9853
I42
VSimpleName: asList
p9854
tp9855
I2
s(g8135
I42
g8136
Vinsert
p9856
I42
VSimpleName: next
p9857
tp9858
I1
s(Vinsert
p9859
I42
VSimpleName: get
p9860
Vinsert
p9861
I74
VParameterizedType: Lazy<List<String>>
p9862
tp9863
F0.75
s(g5523
I42
g5524
Vinsert
p9864
I22
VFieldAccess
p9865
tp9866
I2
s(Vinsert
p9867
I42
VSimpleName: getenv
p9868
Vinsert
p9869
I42
VSimpleName: MariaDbDataSource
p9870
tp9871
I1
s(g3675
I42
g3676
Vinsert
p9872
I39
VPrimitiveType: long
p9873
tp9874
I2
s(g5720
I42
g5721
Vinsert
p9875
I40
VQualifiedName: MySQLTestGraph.INSTANCE.storage
p9876
tp9877
I1
s(g552
I42
g553
Vinsert
p9878
I42
VSimpleName: forEach
p9879
tp9880
I2
s(Vinsert
p9881
I42
VSimpleName: csService
p9882
Vinsert
p9883
I33
VNullLiteral
p9884
tp9885
I2
s(g5158
I42
g5159
Vinsert
p9886
I38
VPrefixExpression: !
p9887
tp9888
I1
s(Vinsert
p9889
I42
VSimpleName: readTraces
p9890
Vinsert
p9891
I85
VDimension
p9892
tp9893
I1
s(g3083
I42
g3084
Vinsert
p9894
I74
VParameterizedType: Metric<?>
p9895
tp9896
I1
s(g1270
I42
g1271
Vinsert
p9897
I43
VSimpleType: ClassNotFoundException
p9898
tp9899
F0.25
s(g3565
I42
g3566
Vinsert
p9900
I43
VSimpleType: List
p9901
tp9902
I2
s(Vinsert
p9903
I42
VSimpleName: close
p9904
Vinsert
p9905
I42
VSimpleName: spanStore
p9906
tp9907
I2
s(g11
I42
g12
Vinsert
p9908
I42
VSimpleName: SPAN
p9909
tp9910
F0.75
s(g689
I42
g690
Vinsert
p9911
I42
VSimpleName: String
p9912
tp9913
I1
s(g9008
I42
g9009
Vinsert
p9914
I43
VSimpleType: QueryRequest
p9915
tp9916
I1
s(g5807
I42
g5808
Vinsert
p9917
I32
VMethodInvocation
p9918
tp9919
I7
s(g1090
I42
g1091
Vinsert
p9920
I41
VReturnStatement
p9921
tp9922
I1
s(g1620
I42
g1621
Vinsert
p9923
I42
VSimpleName: serviceNames
p9924
tp9925
I1
s(g2763
I42
g2764
Vinsert
p9926
I83
VModifier: protected
p9927
tp9928
F0.5
s(g309
I42
g310
Vinsert
p9929
I42
VSimpleName: traceId
p9930
tp9931
I5
s(g1541
I42
g1542
Vinsert
p9932
I40
VQualifiedName: ZIPKIN_SPANS.START_TS
p9933
tp9934
I1
s(g3110
I42
g3111
Vinsert
p9935
I42
VSimpleName: accept
p9936
tp9937
I1
s(g3607
I42
g3608
Vinsert
p9938
I42
VSimpleName: producer
p9939
tp9940
I2
s(g6677
I42
g6678
Vinsert
p9941
I42
VSimpleName: span
p9942
tp9943
F1.25
s(g2098
I42
g2099
Vinsert
p9944
I8
VBlock
p9945
tp9946
I14
s(g3720
I42
g3721
Vinsert
p9947
I42
VSimpleName: setCachePeriod
p9948
tp9949
F0.25
s(g3662
I42
g3663
Vinsert
p9950
I42
VSimpleName: append
p9951
tp9952
I1
s(g2219
I42
g2220
Vinsert
p9953
I42
VSimpleName: jar
p9954
tp9955
I1
s(g507
I42
g508
Vinsert
p9956
I42
VSimpleName: gaugeService
p9957
tp9958
F0.25
s(g7951
I42
g7952
Vinsert
p9959
I42
VSimpleName: assertThat
p9960
tp9961
I1
s(g2880
I42
g2881
Vinsert
p9962
I40
VQualifiedName: CassandraTestGraph.INSTANCE.storage
p9963
tp9964
I1
s(g7768
I42
g7769
Vinsert
p9965
I25
VIfStatement
p9966
tp9967
I2
s(g1017
I42
g1018
Vinsert
p9968
I78
VMarkerAnnotation
p9969
tp9970
F0.25
s(g6058
I42
g6059
Vinsert
p9971
I42
VSimpleName: Annotation
p9972
tp9973
I1
s(g1841
I42
g1842
Vinsert
p9974
I43
VSimpleType: IOException
p9975
tp9976
F0.5
s(Vinsert
p9977
I42
VSimpleName: writeUtf8
p9978
Vinsert
p9979
I42
VSimpleName: url
p9980
tp9981
I1
s(g7151
I42
g7152
Vinsert
p9982
I21
VExpressionStatement
p9983
tp9984
I1
s(g527
I42
g528
Vinsert
p9985
I27
VInfixExpression: +
p9986
tp9987
I2
s(g2579
I42
g2580
Vinsert
p9988
I41
VReturnStatement
p9989
tp9990
F2.25
s(g2843
I42
g2844
Vinsert
p9991
I42
VSimpleName: header
p9992
tp9993
I1
s(g1464
I42
g1465
Vinsert
p9994
I32
VMethodInvocation
p9995
tp9996
I1
s(g492
I42
g493
Vinsert
p9997
I43
VSimpleType: T
p9998
tp9999
F0.25
s(g3493
I42
g3494
Vinsert
p10000
I23
VFieldDeclaration
p10001
tp10002
I1
s(g7897
I42
g7898
Vinsert
p10003
I43
VSimpleType: Callback
p10004
tp10005
F0.5
s(g6723
I42
g6724
Vinsert
p10006
I33
VNullLiteral
p10007
tp10008
I1
s(g557
I42
g558
Vinsert
p10009
I59
VVariableDeclarationFragment
p10010
tp10011
F1.25
s(g6804
I42
g6805
Vinsert
p10012
I78
VMarkerAnnotation
p10013
tp10014
F0.25
s(g608
I42
g609
Vinsert
p10015
I41
VReturnStatement
p10016
tp10017
I1
s(g2090
I42
g2091
Vinsert
p10018
I83
VModifier: public
p10019
tp10020
F0.25
s(g1728
I42
g1729
Vinsert
p10021
I78
VMarkerAnnotation
p10022
tp10023
F1.0
s(g2823
I42
g2824
Vinsert
p10024
I2
VArrayAccess
p10025
tp10026
I1
s(Vinsert
p10027
I42
VSimpleName: equals
p10028
Vinsert
p10029
I40
VQualifiedName: skew.ipv6
p10030
tp10031
I1
s(g1795
I42
g1796
Vinsert
p10032
I44
VSingleVariableDeclaration
p10033
tp10034
F0.25
s(g7763
I42
g7764
Vinsert
p10035
I44
VSingleVariableDeclaration
p10036
tp10037
F0.75
s(Vinsert
p10038
I42
VSimpleName: spanConsumer
p10039
Vinsert
p10040
I40
VQualifiedName: ElasticsearchTestGraph.INSTANCE
p10041
tp10042
I1
s(g4592
I42
g4593
Vinsert
p10043
I7
VAssignment: =
p10044
tp10045
F2.5
s(g5533
I42
g5534
Vinsert
p10046
I43
VSimpleType: MockResponse
p10047
tp10048
I1
s(g1332
I42
g1333
Vinsert
p10049
I43
VSimpleType: Health
p10050
tp10051
F0.25
s(g6522
I42
g6523
Vinsert
p10052
I52
VThisExpression
p10053
tp10054
F0.5
s(Vinsert
p10055
I42
VSimpleName: add
p10056
Vinsert
p10057
I43
VSimpleType: Object
p10058
tp10059
F0.25
s(g344
I42
g345
Vinsert
p10060
I42
VSimpleName: Math
p10061
tp10062
I2
s(g4253
I42
g4254
Vinsert
p10063
I42
VSimpleName: doubleCallbackAsyncSpanStore
p10064
tp10065
I1
s(g234
I42
g235
Vinsert
p10066
I41
VReturnStatement
p10067
tp10068
I1
s(g5183
I42
g5184
Vinsert
p10069
I21
VExpressionStatement
p10070
tp10071
I6
s(g6685
I42
g6686
Vinsert
p10072
I42
VSimpleName: put
p10073
tp10074
I1
s(Vinsert
p10075
I42
VSimpleName: expect
p10076
Vinsert
p10077
I42
VSimpleName: BinaryAnnotation
p10078
tp10079
F0.25
s(g5528
I42
g5529
Vinsert
p10080
I42
VSimpleName: iprot
p10081
tp10082
I1
s(g1128
I42
g1129
Vinsert
p10083
I42
VSimpleName: i
p10084
tp10085
I6
s(g522
I42
g523
Vinsert
p10086
I27
VInfixExpression: !=
p10087
tp10088
F0.25
s(Vinsert
p10089
I42
VSimpleName: build
p10090
Vinsert
p10091
I42
VSimpleName: assertThat
p10092
tp10093
I3
s(g3725
I42
g3726
Vinsert
p10094
I60
VVariableDeclarationStatement
p10095
tp10096
I3
s(g507
I42
g508
Vinsert
p10097
I42
VSimpleName: transportType
p10098
tp10099
F0.25
s(g6984
I42
g6985
Vinsert
p10100
I74
VParameterizedType: ListenableFuture<ResultSet>
p10101
tp10102
F0.25
s(g1484
I42
g1485
Vinsert
p10103
I43
VSimpleType: Span
p10104
tp10105
F1.25
s(g61
I42
g62
Vinsert
p10106
I42
VSimpleName: connection
p10107
tp10108
F0.5
s(g1405
I42
g1406
Vinsert
p10109
I42
VSimpleName: isA
p10110
tp10111
I1
s(Vinsert
p10112
I42
VSimpleName: tags
p10113
Vinsert
p10114
I8
VBlock
p10115
tp10116
I1
s(g181
I42
g182
Vinsert
p10117
I42
VSimpleName: Span
p10118
tp10119
I6
s(g1851
I42
g1852
Vinsert
p10120
I45
VStringLiteral: "serviceb"
p10121
tp10122
I1
s(Vinsert
p10123
I42
VSimpleName: read
p10124
Vinsert
p10125
I42
VSimpleName: off
p10126
tp10127
F0.25
s(g2776
I42
g2777
Vinsert
p10128
I39
VPrimitiveType: void
p10129
tp10130
F0.5
s(g4908
I42
g4909
Vinsert
p10131
I52
VThisExpression
p10132
tp10133
I3
s(g1469
I42
g1470
Vinsert
p10134
I41
VReturnStatement
p10135
tp10136
I2
s(g1479
I42
g1480
Vinsert
p10137
I32
VMethodInvocation
p10138
tp10139
F11.25
s(g6145
I42
g6146
Vinsert
p10140
I74
VParameterizedType: List<String>
p10141
tp10142
I1
s(g631
I42
g632
Vinsert
p10143
I43
VSimpleType: QueryRequest
p10144
tp10145
F0.25
s(g679
I42
g680
Vinsert
p10146
I42
VSimpleName: source
p10147
tp10148
I1
s(g2637
I42
g2638
Vinsert
p10149
I42
VSimpleName: newCall
p10150
tp10151
F0.25
s(g7240
I42
g7241
Vinsert
p10152
I52
VThisExpression
p10153
tp10154
I1
s(g1607
I42
g1608
Vinsert
p10155
I74
VParameterizedType: Iterator<Span>
p10156
tp10157
I1
s(Vinsert
p10158
I42
VSimpleName: abs
p10159
Vinsert
p10160
I43
VSimpleType: Args
p10161
tp10162
F0.25
s(g3938
I42
g3939
Vinsert
p10163
I42
VSimpleName: i
p10164
tp10165
I1
s(g1372
I42
g1373
Vinsert
p10166
I60
VVariableDeclarationStatement
p10167
tp10168
I1
s(g6663
I42
g6664
Vinsert
p10169
I42
VSimpleName: spans
p10170
tp10171
F0.5
s(g1649
I42
g1650
Vinsert
p10172
I42
VSimpleName: complete
p10173
tp10174
F0.25
s(g4733
I42
g4734
Vinsert
p10175
I42
VSimpleName: Callback
p10176
tp10177
F0.75
s(Vinsert
p10178
I42
VSimpleName: localServiceName
p10179
Vinsert
p10180
I45
VStringLiteral: "  \u005c"localEndpoint\u005c": {\u005cn"
p10181
tp10182
F0.25
s(g2169
I42
g2170
Vinsert
p10183
I42
VSimpleName: clientBuilder
p10184
tp10185
F1.25
s(g4908
I42
g4909
Vinsert
p10186
I42
VSimpleName: OkHttpClient
p10187
tp10188
I1
s(g2514
I42
g2515
Vinsert
p10189
I40
VQualifiedName: zipkin.StorageComponent
p10190
tp10191
F0.25
s(g4052
I42
g4053
Vinsert
p10192
I42
VSimpleName: executorService
p10193
tp10194
F0.25
s(g3438
I42
g3439
Vinsert
p10195
I78
VMarkerAnnotation
p10196
tp10197
F0.25
s(g1260
I42
g1261
Vinsert
p10198
I42
VSimpleName: builder
p10199
tp10200
I2
s(g7091
I42
g7092
Vinsert
p10201
I42
VSimpleName: get
p10202
tp10203
I1
s(Vinsert
p10204
I42
VSimpleName: getTraces
p10205
Vinsert
p10206
I42
VSimpleName: build
p10207
tp10208
I2
s(g2179
I42
g2180
Vinsert
p10209
I8
VBlock
p10210
tp10211
F0.25
s(g3565
I42
g3566
Vinsert
p10212
I42
VSimpleName: getTracesByIds
p10213
tp10214
I1
s(g577
I42
g578
Vinsert
p10215
I42
VSimpleName: Override
p10216
tp10217
F0.5
s(g410
I42
g411
Vinsert
p10218
I60
VVariableDeclarationStatement
p10219
tp10220
I1
s(g8152
I42
g8153
Vinsert
p10221
I42
VSimpleName: cancel
p10222
tp10223
F0.25
s(g1085
I42
g1086
Vinsert
p10224
I42
VSimpleName: readField
p10225
tp10226
I1
s(g816
I42
g817
Vinsert
p10227
I60
VVariableDeclarationStatement
p10228
tp10229
I5
s(g876
I42
g877
Vinsert
p10230
I7
VAssignment: =
p10231
tp10232
I1
s(g2013
I42
g2014
Vinsert
p10233
I42
VSimpleName: Throwable
p10234
tp10235
F2.75
s(g4152
I42
g4153
Vinsert
p10236
I32
VMethodInvocation
p10237
tp10238
I6
s(g6421
I42
g6422
Vinsert
p10239
I60
VVariableDeclarationStatement
p10240
tp10241
I1
s(g2090
I42
g2091
Vinsert
p10242
I42
VSimpleName: Void
p10243
tp10244
I1
s(g2054
I42
g2055
Vinsert
p10245
I3
VArrayCreation
p10246
tp10247
I1
s(Vinsert
p10248
I42
VSimpleName: expect
p10249
Vinsert
p10250
I42
VSimpleName: ZipkinCassandra3StorageAutoConfiguration
p10251
tp10252
I1
s(g1182
I42
g1183
Vinsert
p10253
I45
VStringLiteral: "    \u005c"foo\u005c": NULL\u005cn"
p10254
tp10255
F0.25
s(g3474
I42
g3475
Vinsert
p10256
I40
VQualifiedName: TimeUnit.SECONDS
p10257
tp10258
I2
s(g1400
I42
g1401
Vinsert
p10259
I42
VSimpleName: builder
p10260
tp10261
I1
s(g3474
I42
g3475
Vinsert
p10262
I14
VClassInstanceCreation
p10263
tp10264
I2
s(g1528
I42
g1529
Vinsert
p10265
I43
VSimpleType: BoundStatement
p10266
tp10267
F1.5
s(g1921
I42
g1922
Vinsert
p10268
I42
VSimpleName: host
p10269
tp10270
I1
s(g8053
I42
g8054
Vinsert
p10271
I42
VSimpleName: source
p10272
tp10273
F2.25
s(Vinsert
p10274
I42
VSimpleName: emptyList
p10275
Vinsert
p10276
I42
VSimpleName: converter
p10277
tp10278
F0.25
s(g274
I42
g275
Vinsert
p10279
I42
VSimpleName: string
p10280
tp10281
F0.25
s(g4420
I42
g4421
Vinsert
p10282
I42
VSimpleName: callback
p10283
tp10284
F0.25
s(g4380
I42
g4381
Vinsert
p10285
I42
VSimpleName: gzip
p10286
tp10287
I1
s(g385
I42
g386
Vinsert
p10288
I43
VSimpleType: JsonReader
p10289
tp10290
F0.25
s(g1607
I42
g1608
Vinsert
p10291
I42
VSimpleName: Span
p10292
tp10293
I2
s(g2054
I42
g2055
Vinsert
p10294
I5
VArrayType: char[]
p10295
tp10296
I1
s(g8688
I42
g8689
Vinsert
p10297
I42
VSimpleName: ZipkinRuleDependenciesTest
p10298
tp10299
F0.25
s(g9513
I42
g9514
Vinsert
p10300
I2
VArrayAccess
p10301
tp10302
I1
s(g7897
I42
g7898
Vinsert
p10303
I43
VSimpleType: Void
p10304
tp10305
F0.75
s(Vinsert
p10306
I42
VSimpleName: isEmpty
p10307
Vinsert
p10308
I42
VSimpleName: entry
p10309
tp10310
I2
s(g492
I42
g493
Vinsert
p10311
I60
VVariableDeclarationStatement
p10312
tp10313
I1
s(g3788
I42
g3789
Vinsert
p10314
I42
VSimpleName: Span
p10315
tp10316
F0.25
s(g507
I42
g508
Vinsert
p10317
I21
VExpressionStatement
p10318
tp10319
I1
s(g6387
I42
g6388
Vinsert
p10320
I42
VSimpleName: emptyList
p10321
tp10322
F0.25
s(g6134
I42
g6135
Vinsert
p10323
I42
VSimpleName: lowerHexToUnsignedLong
p10324
tp10325
I1
s(g3155
I42
g3156
Vinsert
p10326
I44
VSingleVariableDeclaration
p10327
tp10328
F1.0
s(g7240
I42
g7241
Vinsert
p10329
I34
VNumberLiteral: 1
p10330
tp10331
I1
s(g2619
I42
g2620
Vinsert
p10332
I59
VVariableDeclarationFragment
p10333
tp10334
I2
s(Vinsert
p10335
I42
VSimpleName: perform
p10336
Vinsert
p10337
I42
VSimpleName: healthIsOK
p10338
tp10339
F0.25
s(g2018
I42
g2019
Vinsert
p10340
I54
VTryStatement
p10341
tp10342
I1
s(g1232
I42
g1233
Vinsert
p10343
I27
VInfixExpression: ==
p10344
tp10345
I1
s(Vinsert
p10346
I42
VSimpleName: acceptSpans
p10347
Vinsert
p10348
I42
VSimpleName: DeferredResult
p10349
tp10350
I1
s(g4768
I42
g4769
Vinsert
p10351
I21
VExpressionStatement
p10352
tp10353
I1
s(g2823
I42
g2824
Vinsert
p10354
I42
VSimpleName: REPLACEMENT_CHARS
p10355
tp10356
I1
s(g572
I42
g573
Vinsert
p10357
I32
VMethodInvocation
p10358
tp10359
I1
s(g5910
I42
g5911
Vinsert
p10360
I42
VSimpleName: source
p10361
tp10362
I1
s(g4011
I42
g4012
Vinsert
p10363
I42
VSimpleName: parent
p10364
tp10365
I2
s(g21
I42
g22
Vinsert
p10366
I42
VSimpleName: JsonReader
p10367
tp10368
F0.25
s(Vinsert
p10369
I42
VSimpleName: traceId
p10370
Vinsert
p10371
I42
VSimpleName: ann2
p10372
tp10373
I1
s(g7086
I42
g7087
Vinsert
p10374
I21
VExpressionStatement
p10375
tp10376
I1
s(g2920
I42
g2921
Vinsert
p10377
I42
VSimpleName: RetryDecision
p10378
tp10379
I1
s(g1959
I42
g1960
Vinsert
p10380
I42
VSimpleName: PropertyPlaceholderAutoConfiguration
p10381
tp10382
I5
s(g757
I42
g758
Vinsert
p10383
I42
VSimpleName: Span2
p10384
tp10385
F0.25
s(g4330
I42
g4331
Vinsert
p10386
I42
VSimpleName: getLogger
p10387
tp10388
I1
s(g6421
I42
g6422
Vinsert
p10389
I42
VSimpleName: timeLimiter
p10390
tp10391
I2
s(Vinsert
p10392
I42
VSimpleName: equals
p10393
Vinsert
p10394
I42
VSimpleName: TraceServiceSpanNameKey
p10395
tp10396
I2
s(g1443
I42
g1444
Vinsert
p10397
I42
VSimpleName: getUninterruptibly
p10398
tp10399
F0.25
s(g284
I42
g285
Vinsert
p10400
I74
VParameterizedType: LinkedList<>
p10401
tp10402
I2
s(g1959
I42
g1960
Vinsert
p10403
I42
VSimpleName: register
p10404
tp10405
I5
s(g8319
I42
g8320
Vinsert
p10406
I42
VSimpleName: timestamp
p10407
tp10408
I1
s(g3233
I42
g3234
Vinsert
p10409
I42
VSimpleName: accept
p10410
tp10411
I1
s(g762
I42
g763
Vinsert
p10412
I42
VSimpleName: readSpan
p10413
tp10414
I1
s(g2208
I42
g2209
Vinsert
p10415
I42
VSimpleName: raw
p10416
tp10417
I1
s(g4187
I42
g4188
Vinsert
p10418
I43
VSimpleType: String
p10419
tp10420
I2
s(g8791
I42
g8792
Vinsert
p10421
I42
VSimpleName: Long
p10422
tp10423
I1
s(g7027
I42
g7028
Vinsert
p10424
I42
VSimpleName: check
p10425
tp10426
I1
s(g7159
I42
g7160
Vinsert
p10427
I32
VMethodInvocation
p10428
tp10429
F187.25
s(g659
I42
g660
Vinsert
p10430
I42
VSimpleName: elements
p10431
tp10432
F0.25
s(Vinsert
p10433
I42
VSimpleName: create
p10434
Vinsert
p10435
I42
VSimpleName: LINKS
p10436
tp10437
F0.5
s(g5547
I42
g5548
Vinsert
p10438
I34
VNumberLiteral: 1000
p10439
tp10440
I1
s(g2794
I42
g2795
Vinsert
p10441
I42
VSimpleName: extractAndInject
p10442
tp10443
F0.25
s(g5045
I42
g5046
Vinsert
p10444
I43
VSimpleType: ZooKeeperSampler.Builder
p10445
tp10446
I1
s(g3725
I42
g3726
Vinsert
p10447
I42
VSimpleName: byTimestamp
p10448
tp10449
I1
s(g3125
I42
g3126
Vinsert
p10450
I42
VSimpleName: pos
p10451
tp10452
I1
s(g3412
I42
g3413
Vinsert
p10453
I43
VSimpleType: FastStringReader
p10454
tp10455
I1
s(g5674
I42
g5675
Vinsert
p10456
I42
VSimpleName: assertThat
p10457
tp10458
I2
s(g866
I42
g867
Vinsert
p10459
I42
VSimpleName: name
p10460
tp10461
F0.25
s(g1066
I42
g1067
Vinsert
p10462
I5
VArrayType: byte[]
p10463
tp10464
I5
s(g7646
I42
g7647
Vinsert
p10465
I42
VSimpleName: TraceIdSamplerTest
p10466
tp10467
F0.5
s(g512
I42
g513
Vinsert
p10468
I43
VSimpleType: Encoding
p10469
tp10470
F0.25
s(g6355
I42
g6356
Vinsert
p10471
I42
VSimpleName: overrides
p10472
tp10473
F0.75
s(Vinsert
p10474
I42
VSimpleName: fine
p10475
Vinsert
p10476
I45
VStringLiteral: "root's peer is unknown; skipping"
p10477
tp10478
I1
s(g1836
I42
g1837
Vinsert
p10479
I42
VSimpleName: writeJsonEscaped
p10480
tp10481
I1
s(Vinsert
p10482
I42
VSimpleName: register
p10483
Vinsert
p10484
I14
VClassInstanceCreation
p10485
tp10486
I10
s(Vinsert
p10487
I42
VSimpleName: format
p10488
Vinsert
p10489
I42
VSimpleName: call
p10490
tp10491
I1
s(g3250
I42
g3251
Vinsert
p10492
I62
VInstanceofExpression
p10493
tp10494
I1
s(g1772
I42
g1773
Vinsert
p10495
I42
VSimpleName: annotationsToMatch
p10496
tp10497
I1
s(g9615
I42
g9616
Vinsert
p10498
I42
VSimpleName: String
p10499
tp10500
F1.5
s(g5486
I42
g5487
Vinsert
p10501
I42
VSimpleName: ConnectException
p10502
tp10503
I2
s(g2098
I42
g2099
Vinsert
p10504
I42
VSimpleName: response
p10505
tp10506
F0.25
s(g6371
I42
g6372
Vinsert
p10507
I44
VSingleVariableDeclaration
p10508
tp10509
F0.75
s(Vinsert
p10510
I42
VSimpleName: create
p10511
Vinsert
p10512
I42
VSimpleName: fooCall
p10513
tp10514
I1
s(g36
I42
g37
Vinsert
p10515
I32
VMethodInvocation
p10516
tp10517
F12.25
s(g3388
I42
g3389
Vinsert
p10518
I27
VInfixExpression: !=
p10519
tp10520
I2
s(g9791
I42
g9792
Vinsert
p10521
I21
VExpressionStatement
p10522
tp10523
I1
s(g5510
I42
g5511
Vinsert
p10524
I59
VVariableDeclarationFragment
p10525
tp10526
I2
s(g6781
I42
g6782
Vinsert
p10527
I25
VIfStatement
p10528
tp10529
I1
s(g2278
I42
g2279
Vinsert
p10530
I44
VSingleVariableDeclaration
p10531
tp10532
F0.25
s(g9258
I42
g9259
Vinsert
p10533
I42
VSimpleName: getSchemas
p10534
tp10535
F0.25
s(g3083
I42
g3084
Vinsert
p10536
I32
VMethodInvocation
p10537
tp10538
I1
s(g1709
I42
g1710
Vinsert
p10539
I42
VSimpleName: serviceName
p10540
tp10541
I1
s(g3422
I42
g3423
Vinsert
p10542
I60
VVariableDeclarationStatement
p10543
tp10544
I1
s(g5166
I42
g5167
Vinsert
p10545
I44
VSingleVariableDeclaration
p10546
tp10547
F0.5
s(g405
I42
g406
Vinsert
p10548
I8
VBlock
p10549
tp10550
F1.75
s(Vinsert
p10551
I42
VSimpleName: idString
p10552
Vinsert
p10553
I44
VSingleVariableDeclaration
p10554
tp10555
F0.25
s(g1673
I42
g1674
Vinsert
p10556
I42
VSimpleName: entrySet
p10557
tp10558
I1
s(g3340
I42
g3341
Vinsert
p10559
I43
VSimpleType: Request.Builder
p10560
tp10561
I1
s(g1410
I42
g1411
Vinsert
p10562
I42
VSimpleName: InetAddresses
p10563
tp10564
I1
s(g7277
I42
g7278
Vinsert
p10565
I42
VSimpleName: v
p10566
tp10567
I1
s(Vinsert
p10568
I42
VSimpleName: ipv6
p10569
Vinsert
p10570
I5
VArrayType: byte[]
p10571
tp10572
I1
s(g547
I42
g548
Vinsert
p10573
I40
VQualifiedName: TestObjects.TRACE
p10574
tp10575
I1
s(g6685
I42
g6686
Vinsert
p10576
I42
VSimpleName: TransportClient
p10577
tp10578
I2
s(g497
I42
g498
Vinsert
p10579
I42
VSimpleName: String
p10580
tp10581
F0.25
s(g939
I42
g940
Vinsert
p10582
I42
VSimpleName: setUp
p10583
tp10584
F0.25
s(g5666
I42
g5667
Vinsert
p10585
I34
VNumberLiteral: 100
p10586
tp10587
I1
s(g9842
I42
g9843
Vinsert
p10588
I34
VNumberLiteral: 2L
p10589
tp10590
I1
s(g1821
I42
g1822
Vinsert
p10591
I43
VSimpleType: Map
p10592
tp10593
F0.25
s(g6911
I42
g6912
Vinsert
p10594
I42
VSimpleName: consumer
p10595
tp10596
I1
s(g1217
I42
g1218
Vinsert
p10597
I42
VSimpleName: callQuery
p10598
tp10599
I1
s(g2584
I42
g2585
Vinsert
p10600
I27
VInfixExpression: <
p10601
tp10602
I1
s(g2393
I42
g2394
Vinsert
p10603
I42
VSimpleName: Collection
p10604
tp10605
I2
s(g1489
I42
g1490
Vinsert
p10606
I8
VBlock
p10607
tp10608
I1
s(g1612
I42
g1613
Vinsert
p10609
I42
VSimpleName: assertThat
p10610
tp10611
I6
s(g171
I42
g172
Vinsert
p10612
I42
VSimpleName: MockMvcBuilders
p10613
tp10614
I1
s(g1390
I42
g1391
Vinsert
p10615
I43
VSimpleType: CollectorMetrics
p10616
tp10617
F0.25
s(g6804
I42
g6805
Vinsert
p10618
I32
VMethodInvocation
p10619
tp10620
I4
s(Vinsert
p10621
I42
VSimpleName: register
p10622
Vinsert
p10623
I83
VModifier: public
p10624
tp10625
F0.5
s(g4136
I42
g4137
Vinsert
p10626
I38
VPrefixExpression: ++
p10627
tp10628
I1
s(g2378
I42
g2379
Vinsert
p10629
I74
VParameterizedType: List<Span>
p10630
tp10631
F0.25
s(g9717
I42
g9718
Vinsert
p10632
I42
VSimpleName: Cluster
p10633
tp10634
F1.25
s(g4967
I42
g4968
Vinsert
p10635
I59
VVariableDeclarationFragment
p10636
tp10637
I1
s(g4605
I42
g4606
Vinsert
p10638
I21
VExpressionStatement
p10639
tp10640
I2
s(g2619
I42
g2620
Vinsert
p10641
I74
VParameterizedType: List<String>
p10642
tp10643
I1
s(g4399
I42
g4400
Vinsert
p10644
I42
VSimpleName: accept
p10645
tp10646
I1
s(g259
I42
g260
Vinsert
p10647
I42
VSimpleName: value
p10648
tp10649
F0.25
s(g7613
I42
g7614
Vinsert
p10650
I42
VSimpleName: Pair
p10651
tp10652
F2.25
s(g3059
I42
g3060
Vinsert
p10653
I42
VSimpleName: span2
p10654
tp10655
I1
s(g2880
I42
g2881
Vinsert
p10656
I43
VSimpleType: CassandraStorage
p10657
tp10658
F0.25
s(Vinsert
p10659
I42
VSimpleName: build
p10660
Vinsert
p10661
I23
VFieldDeclaration
p10662
tp10663
I1
s(g557
I42
g558
Vinsert
p10664
I42
VSimpleName: newCall
p10665
tp10666
I1
s(g196
I42
g197
Vinsert
p10667
I42
VSimpleName: String
p10668
tp10669
F0.5
s(g3168
I42
g3169
Vinsert
p10670
I45
VStringLiteral: "running with RF=1, this is not suitable for production. Optimal is 3+"
p10671
tp10672
I1
s(g4264
I42
g4265
Vinsert
p10673
I8
VBlock
p10674
tp10675
I1
s(g939
I42
g940
Vinsert
p10676
I42
VSimpleName: delegate
p10677
tp10678
I4
s(g3199
I42
g3200
Vinsert
p10679
I42
VSimpleName: Span
p10680
tp10681
F0.25
s(g3150
I42
g3151
Vinsert
p10682
I25
VIfStatement
p10683
tp10684
I2
s(g7763
I42
g7764
Vinsert
p10685
I83
VModifier: public
p10686
tp10687
F0.75
s(g497
I42
g498
Vinsert
p10688
I42
VSimpleName: hr
p10689
tp10690
I1
s(g7850
I42
g7851
Vinsert
p10691
I42
VSimpleName: info
p10692
tp10693
I2
s(g3783
I42
g3784
Vinsert
p10694
I43
VSimpleType: Span
p10695
tp10696
I1
s(g1303
I42
g1304
Vinsert
p10697
I42
VSimpleName: type
p10698
tp10699
I1
s(g3485
I42
g3486
Vinsert
p10700
I45
VStringLiteral: "{"
p10701
tp10702
I1
s(g4639
I42
g4640
Vinsert
p10703
I44
VSingleVariableDeclaration
p10704
tp10705
F0.5
s(g3372
I42
g3373
Vinsert
p10706
I41
VReturnStatement
p10707
tp10708
I1
s(g2330
I42
g2331
Vinsert
p10709
I42
VSimpleName: Test
p10710
tp10711
F0.25
s(g7217
I42
g7218
Vinsert
p10712
I85
VDimension
p10713
tp10714
F1.25
s(g791
I42
g792
Vinsert
p10715
I42
VSimpleName: args
p10716
tp10717
F0.25
s(g806
I42
g807
Vinsert
p10718
I60
VVariableDeclarationStatement
p10719
tp10720
I1
s(g259
I42
g260
Vinsert
p10721
I32
VMethodInvocation
p10722
tp10723
I3
s(g7568
I42
g7569
Vinsert
p10724
I31
VMethodDeclaration
p10725
tp10726
F0.25
s(Vinsert
p10727
I42
VSimpleName: create
p10728
Vinsert
p10729
I42
VSimpleName: e
p10730
tp10731
I2
s(Vinsert
p10732
I42
VSimpleName: split
p10733
Vinsert
p10734
I32
VMethodInvocation
p10735
tp10736
I3
s(g9706
I42
g9707
Vinsert
p10737
I27
VInfixExpression: +
p10738
tp10739
I1
s(g3212
I42
g3213
Vinsert
p10740
I5
VArrayType: byte[]
p10741
tp10742
F0.5
s(g352
I42
g353
Vinsert
p10743
I42
VSimpleName: part2
p10744
tp10745
I1
s(g3168
I42
g3169
Vinsert
p10746
I42
VSimpleName: keyspaceMetadata
p10747
tp10748
I1
s(g6889
I42
g6890
Vinsert
p10749
I74
VParameterizedType: List<DependencyLink>
p10750
tp10751
I1
s(g992
I42
g993
Vinsert
p10752
I31
VMethodDeclaration
p10753
tp10754
F1.75
s(g6079
I42
g6080
Vinsert
p10755
I42
VSimpleName: guessTimestamp
p10756
tp10757
F0.25
s(g487
I42
g488
Vinsert
p10758
I42
VSimpleName: traceIdHigh
p10759
tp10760
I1
s(g3740
I42
g3741
Vinsert
p10761
I27
VInfixExpression: *
p10762
tp10763
I1
s(g5112
I42
g5113
Vinsert
p10764
I39
VPrimitiveType: void
p10765
tp10766
F0.5
s(g2383
I42
g2384
Vinsert
p10767
I42
VSimpleName: getClass
p10768
tp10769
F0.5
s(Vinsert
p10770
I42
VSimpleName: expect
p10771
Vinsert
p10772
I90
VExpressionMethodReference
p10773
tp10774
F0.25
s(g10089
I42
g10090
Vinsert
p10775
I45
VStringLiteral: "f"
p10776
tp10777
I1
s(g1187
I42
g1188
Vinsert
p10778
I39
VPrimitiveType: long
p10779
tp10780
F0.25
s(g8319
I42
g8320
Vinsert
p10781
I34
VNumberLiteral: 1442493420635000L
p10782
tp10783
I1
s(g567
I42
g568
Vinsert
p10784
I27
VInfixExpression: ==
p10785
tp10786
I1
s(g274
I42
g275
Vinsert
p10787
I44
VSingleVariableDeclaration
p10788
tp10789
F0.5
s(g1327
I42
g1328
Vinsert
p10790
I32
VMethodInvocation
p10791
tp10792
I2
s(g4647
I42
g4648
Vinsert
p10793
I42
VSimpleName: traceId
p10794
tp10795
I1
s(g6997
I42
g6998
Vinsert
p10796
I21
VExpressionStatement
p10797
tp10798
I2
s(g532
I42
g533
Vinsert
p10799
I42
VSimpleName: spanId
p10800
tp10801
I3
s(g9587
I42
g9588
Vinsert
p10802
I45
VStringLiteral: "  \u005c"name\u005c": \u005c"get-traces\u005c",\u005cn"
p10803
tp10804
I4
s(g5785
I42
g5786
Vinsert
p10805
I42
VSimpleName: bound
p10806
tp10807
I1
s(g10732
I42
g10733
Vinsert
p10808
I14
VClassInstanceCreation
p10809
tp10810
I1
s(g2098
I42
g2099
Vinsert
p10811
I40
VQualifiedName: okhttp3.Call
p10812
tp10813
F0.25
s(g886
I42
g887
Vinsert
p10814
I42
VSimpleName: ANNOTATION_FIELDS_WITHOUT_IPV6
p10815
tp10816
I1
s(g5369
I42
g5370
Vinsert
p10817
I53
VThrowStatement
p10818
tp10819
F0.25
s(g3707
I42
g3708
Vinsert
p10820
I32
VMethodInvocation
p10821
tp10822
I1
s(g161
I42
g162
Vinsert
p10823
I42
VSimpleName: build
p10824
tp10825
I1
s(g3702
I42
g3703
Vinsert
p10826
I39
VPrimitiveType: void
p10827
tp10828
F0.25
s(g1327
I42
g1328
Vinsert
p10829
I42
VSimpleName: builder
p10830
tp10831
I1
s(g1303
I42
g1304
Vinsert
p10832
I78
VMarkerAnnotation
p10833
tp10834
F0.25
s(Vinsert
p10835
I42
VSimpleName: create
p10836
Vinsert
p10837
I45
VStringLiteral: "db"
p10838
tp10839
F0.5
s(g2309
I42
g2310
Vinsert
p10840
I39
VPrimitiveType: long
p10841
tp10842
I1
s(g2421
I42
g2422
Vinsert
p10843
I42
VSimpleName: spansDecodeToNullOnMalformed
p10844
tp10845
F0.25
s(g2475
I42
g2476
Vinsert
p10846
I43
VSimpleType: String
p10847
tp10848
I5
s(g131
I42
g132
Vinsert
p10849
I42
VSimpleName: traceId
p10850
tp10851
I1
s(g1090
I42
g1091
Vinsert
p10852
I83
VModifier: private
p10853
tp10854
F0.25
s(g418
I42
g419
Vinsert
p10855
I39
VPrimitiveType: void
p10856
tp10857
F0.25
s(Vinsert
p10858
I42
VSimpleName: builder
p10859
Vinsert
p10860
I42
VSimpleName: check_failsInsteadOfThrowing
p10861
tp10862
F0.75
s(g2614
I42
g2615
Vinsert
p10863
I41
VReturnStatement
p10864
tp10865
I2
s(g3683
I42
g3684
Vinsert
p10866
I43
VSimpleType: NoSuchBeanDefinitionException
p10867
tp10868
F0.25
s(g9244
I42
g9245
Vinsert
p10869
I32
VMethodInvocation
p10870
tp10871
I2
s(g3367
I42
g3368
Vinsert
p10872
I43
VSimpleType: MockWebServer
p10873
tp10874
I2
s(g1464
I42
g1465
Vinsert
p10875
I42
VSimpleName: String
p10876
tp10877
I1
s(g557
I42
g558
Vinsert
p10878
I42
VSimpleName: b
p10879
tp10880
I1
s(g2179
I42
g2180
Vinsert
p10881
I42
VSimpleName: timestamp
p10882
tp10883
F0.75
s(g1085
I42
g1086
Vinsert
p10884
I59
VVariableDeclarationFragment
p10885
tp10886
I1
s(g66
I42
g67
Vinsert
p10887
I42
VSimpleName: HttpServletResponse
p10888
tp10889
F0.25
s(g1103
I42
g1104
Vinsert
p10890
I27
VInfixExpression: !=
p10891
tp10892
I1
s(g372
I42
g373
Vinsert
p10893
I42
VSimpleName: component
p10894
tp10895
F1.25
s(g5902
I42
g5903
Vinsert
p10896
I8
VBlock
p10897
tp10898
I4
s(g6113
I42
g6114
Vinsert
p10899
I42
VSimpleName: CassandraSpanStore
p10900
tp10901
F1.25
s(g8011
I42
g8012
Vinsert
p10902
I42
VSimpleName: bytes
p10903
tp10904
I1
s(g9244
I42
g9245
Vinsert
p10905
I21
VExpressionStatement
p10906
tp10907
I1
s(g3199
I42
g3200
Vinsert
p10908
I74
VParameterizedType: List<Span>
p10909
tp10910
F0.25
s(g400
I42
g401
Vinsert
p10911
I40
VQualifiedName: Codec.JSON
p10912
tp10913
I1
s(g4908
I42
g4909
Vinsert
p10914
I14
VClassInstanceCreation
p10915
tp10916
I1
s(g3828
I42
g3829
Vinsert
p10917
I42
VSimpleName: StrictTraceIdFalseTest
p10918
tp10919
I1
s(Vinsert
p10920
I42
VSimpleName: write
p10921
Vinsert
p10922
I42
VSimpleName: spanWriter
p10923
tp10924
I1
s(g5598
I42
g5599
Vinsert
p10925
I44
VSingleVariableDeclaration
p10926
tp10927
I1
s(g3263
I42
g3264
Vinsert
p10928
I83
VModifier: synchronized
p10929
tp10930
F0.25
s(g5634
I42
g5635
Vinsert
p10931
I32
VMethodInvocation
p10932
tp10933
I3
s(g5780
I42
g5781
Vinsert
p10934
I34
VNumberLiteral: 0
p10935
tp10936
I1
s(g1723
I42
g1724
Vinsert
p10937
I42
VSimpleName: Util
p10938
tp10939
I2
s(Vinsert
p10940
I42
VSimpleName: readByteArray
p10941
Vinsert
p10942
I16
VConditionalExpression
p10943
tp10944
I1
s(g186
I42
g187
Vinsert
p10945
I42
VSimpleName: ConsumerConfig
p10946
tp10947
F0.25
s(g3094
I42
g3095
Vinsert
p10948
I32
VMethodInvocation
p10949
tp10950
I3
s(g5528
I42
g5529
Vinsert
p10951
I10
VBreakStatement
p10952
tp10953
I1
s(Vinsert
p10954
I42
VSimpleName: setHeader
p10955
Vinsert
p10956
I40
VQualifiedName: org.springframework.http.HttpHeaders
p10957
tp10958
F0.25
s(g3009
I42
g3010
Vinsert
p10959
I40
VQualifiedName: zipkin.async.AsyncToBlockingSpanStoreAdapter
p10960
tp10961
F0.25
s(g4587
I42
g4588
Vinsert
p10962
I42
VSimpleName: Exception
p10963
tp10964
F0.75
s(g5603
I42
g5604
Vinsert
p10965
I27
VInfixExpression: !=
p10966
tp10967
I1
s(g3318
I42
g3319
Vinsert
p10968
I42
VSimpleName: ByteBuffer
p10969
tp10970
I1
s(g4518
I42
g4519
Vinsert
p10971
I40
VQualifiedName: Request.Builder
p10972
tp10973
I2
s(g2072
I42
g2073
Vinsert
p10974
I42
VSimpleName: startsWith
p10975
tp10976
I1
s(g2441
I42
g2442
Vinsert
p10977
I32
VMethodInvocation
p10978
tp10979
I1
s(g1007
I42
g1008
Vinsert
p10980
I60
VVariableDeclarationStatement
p10981
tp10982
I1
s(g770
I42
g771
Vinsert
p10983
I43
VSimpleType: ApplicationEvent
p10984
tp10985
F0.25
s(g5634
I42
g5635
Vinsert
p10986
I59
VVariableDeclarationFragment
p10987
tp10988
F0.25
s(g552
I42
g553
Vinsert
p10989
I42
VSimpleName: accept
p10990
tp10991
I2
s(g2722
I42
g2723
Vinsert
p10992
I54
VTryStatement
p10993
tp10994
I2
s(g1523
I42
g1524
Vinsert
p10995
I32
VMethodInvocation
p10996
tp10997
I1
s(g4469
I42
g4470
Vinsert
p10998
I42
VSimpleName: Nullable
p10999
tp11000
F0.25
s(Vinsert
p11001
I42
VSimpleName: newCall
p11002
Vinsert
p11003
I32
VMethodInvocation
p11004
tp11005
F20.5
s(g2179
I42
g2180
Vinsert
p11006
I25
VIfStatement
p11007
tp11008
F0.25
s(g456
I42
g457
Vinsert
p11009
I44
VSingleVariableDeclaration
p11010
tp11011
I1
s(Vinsert
p11012
I42
VSimpleName: length
p11013
Vinsert
p11014
I27
VInfixExpression: /
p11015
tp11016
I1
s(g4034
I42
g4035
Vinsert
p11017
I34
VNumberLiteral: 0
p11018
tp11019
I2
s(g10732
I42
g10733
Vinsert
p11020
I42
VSimpleName: setAllowedOrigins
p11021
tp11022
I1
s(g8688
I42
g8689
Vinsert
p11023
I7
VAssignment: =
p11024
tp11025
I2
s(Vinsert
p11026
I42
VSimpleName: clear
p11027
Vinsert
p11028
I42
VSimpleName: ActuateCollectorMetrics
p11029
tp11030
F0.25
s(g2187
I42
g2188
Vinsert
p11031
I42
VSimpleName: assertMetrics
p11032
tp11033
F0.5
s(g2717
I42
g2718
Vinsert
p11034
I42
VSimpleName: spans
p11035
tp11036
I2
s(g684
I42
g685
Vinsert
p11037
I43
VSimpleType: Object
p11038
tp11039
F0.5
s(g239
I42
g240
Vinsert
p11040
I42
VSimpleName: Before
p11041
tp11042
F0.25
s(g679
I42
g680
Vinsert
p11043
I32
VMethodInvocation
p11044
tp11045
I2
s(g5098
I42
g5099
Vinsert
p11046
I83
VModifier: final
p11047
tp11048
F0.25
s(g3552
I42
g3553
Vinsert
p11049
I43
VSimpleType: String
p11050
tp11051
I1
s(Vinsert
p11052
I42
VSimpleName: accept
p11053
Vinsert
p11054
I34
VNumberLiteral: 1000
p11055
tp11056
F0.25
s(g1058
I42
g1059
Vinsert
p11057
I43
VSimpleType: InsertServiceSpan
p11058
tp11059
F1.25
s(g7913
I42
g7914
Vinsert
p11060
I42
VSimpleName: j
p11061
tp11062
I6
s(g1332
I42
g1333
Vinsert
p11063
I42
VSimpleName: component
p11064
tp11065
I1
s(g171
I42
g172
Vinsert
p11066
I42
VSimpleName: mockMvc
p11067
tp11068
F1.25
s(g284
I42
g285
Vinsert
p11069
I42
VSimpleName: linkSpans
p11070
tp11071
I1
s(g1136
I42
g1137
Vinsert
p11072
I32
VMethodInvocation
p11073
tp11074
I5
s(Vinsert
p11075
I42
VSimpleName: parentId
p11076
Vinsert
p11077
I45
VStringLiteral: "b"
p11078
tp11079
I3
s(g1816
I42
g1817
Vinsert
p11080
I42
VSimpleName: listenerProvider
p11081
tp11082
F0.5
s(g5725
I42
g5726
Vinsert
p11083
I32
VMethodInvocation
p11084
tp11085
I6
s(g91
I42
g92
Vinsert
p11086
I42
VSimpleName: error
p11087
tp11088
I2
s(g2514
I42
g2515
Vinsert
p11089
I32
VMethodInvocation
p11090
tp11091
I8
s(g1237
I42
g1238
Vinsert
p11092
I42
VSimpleName: annotations
p11093
tp11094
I6
s(g4610
I42
g4611
Vinsert
p11095
I43
VSimpleType: StorageAdapters.SpanConsumer
p11096
tp11097
F0.25
s(g3662
I42
g3663
Vinsert
p11098
I42
VSimpleName: stringBuffer
p11099
tp11100
I2
s(g7197
I42
g7198
Vinsert
p11101
I39
VPrimitiveType: void
p11102
tp11103
F3.25
s(g8330
I42
g8331
Vinsert
p11104
I42
VSimpleName: thrown
p11105
tp11106
I1
s(g2944
I42
g2945
Vinsert
p11107
I74
VParameterizedType: CallbackListenableFuture<>
p11108
tp11109
I1
s(g6699
I42
g6700
Vinsert
p11110
I60
VVariableDeclarationStatement
p11111
tp11112
I1
s(g3094
I42
g3095
Vinsert
p11113
I43
VSimpleType: List
p11114
tp11115
F0.25
s(g608
I42
g609
Vinsert
p11116
I22
VFieldAccess
p11117
tp11118
F0.25
s(g1095
I42
g1096
Vinsert
p11119
I42
VSimpleName: Span
p11120
tp11121
F0.25
s(g3599
I42
g3600
Vinsert
p11122
I22
VFieldAccess
p11123
tp11124
I1
s(g4152
I42
g4153
Vinsert
p11125
I42
VSimpleName: callback
p11126
tp11127
I1
s(g962
I42
g963
Vinsert
p11128
I42
VSimpleName: thrown
p11129
tp11130
I1
s(g329
I42
g330
Vinsert
p11131
I21
VExpressionStatement
p11132
tp11133
I2
s(g2135
I42
g2136
Vinsert
p11134
I43
VSimpleType: CassandraStorage.Builder
p11135
tp11136
F0.25
s(g8522
I42
g8523
Vinsert
p11137
I86
VLambdaExpression
p11138
tp11139
I1
s(g8053
I42
g8054
Vinsert
p11140
I42
VSimpleName: Span2
p11141
tp11142
F0.25
s(g1332
I42
g1333
Vinsert
p11143
I78
VMarkerAnnotation
p11144
tp11145
F0.25
s(g1939
I42
g1940
Vinsert
p11146
I43
VSimpleType: Session
p11147
tp11148
I1
s(g2584
I42
g2585
Vinsert
p11149
I42
VSimpleName: value
p11150
tp11151
I2
s(g846
I42
g847
Vinsert
p11152
I8
VBlock
p11153
tp11154
I20
s(g5598
I42
g5599
Vinsert
p11155
I32
VMethodInvocation
p11156
tp11157
I6
s(g1118
I42
g1119
Vinsert
p11158
I40
VQualifiedName: dependencies.links
p11159
tp11160
I1
s(g7366
I42
g7367
Vinsert
p11161
I42
VSimpleName: timestampMillis
p11162
tp11163
I1
s(g5034
I42
g5035
Vinsert
p11164
I60
VVariableDeclarationStatement
p11165
tp11166
I4
s(g6426
I42
g6427
Vinsert
p11167
I23
VFieldDeclaration
p11168
tp11169
I1
s(g4639
I42
g4640
Vinsert
p11170
I42
VSimpleName: Set
p11171
tp11172
F0.25
s(g4306
I42
g4307
Vinsert
p11173
I42
VSimpleName: type
p11174
tp11175
I1
s(g3767
I42
g3768
Vinsert
p11176
I32
VMethodInvocation
p11177
tp11178
I4
s(g719
I42
g720
Vinsert
p11179
I42
VSimpleName: IOException
p11180
tp11181
F0.75
s(g1085
I42
g1086
Vinsert
p11182
I45
VStringLiteral: "Incomplete annotation at "
p11183
tp11184
F0.25
s(g3804
I42
g3805
Vinsert
p11185
I8
VBlock
p11186
tp11187
I3
s(g6045
I42
g6046
Vinsert
p11188
I13
VCharacterLiteral: 's'
p11189
tp11190
I1
s(Vinsert
p11191
I42
VSimpleName: singletonList
p11192
Vinsert
p11193
I34
VNumberLiteral: 1
p11194
tp11195
I1
s(g3783
I42
g3784
Vinsert
p11196
I42
VSimpleName: with128BitId
p11197
tp11198
I1
s(g3307
I42
g3308
Vinsert
p11199
I32
VMethodInvocation
p11200
tp11201
F1.25
s(g1410
I42
g1411
Vinsert
p11202
I42
VSimpleName: ipString
p11203
tp11204
I1
s(g1489
I42
g1490
Vinsert
p11205
I42
VSimpleName: escape
p11206
tp11207
F0.25
s(g2232
I42
g2233
Vinsert
p11208
I42
VSimpleName: metrics
p11209
tp11210
F0.5
s(g2441
I42
g2442
Vinsert
p11211
I44
VSingleVariableDeclaration
p11212
tp11213
F0.25
s(g431
I42
g432
Vinsert
p11214
I42
VSimpleName: password
p11215
tp11216
I1
s(g5045
I42
g5046
Vinsert
p11217
I42
VSimpleName: assertThat
p11218
tp11219
I1
s(g669
I42
g670
Vinsert
p11220
I42
VSimpleName: fromSpan
p11221
tp11222
I4
s(Vinsert
p11223
I42
VSimpleName: builder
p11224
Vinsert
p11225
I42
VSimpleName: part1
p11226
tp11227
F0.25
s(g5558
I42
g5559
Vinsert
p11228
I32
VMethodInvocation
p11229
tp11230
I6
s(g909
I42
g910
Vinsert
p11231
I86
VLambdaExpression
p11232
tp11233
I1
s(g914
I42
g915
Vinsert
p11234
I27
VInfixExpression: +
p11235
tp11236
F0.5
s(g3493
I42
g3494
Vinsert
p11237
I83
VModifier: public
p11238
tp11239
I1
s(g4451
I42
g4452
Vinsert
p11240
I42
VSimpleName: checkState
p11241
tp11242
F0.25
s(g191
I42
g192
Vinsert
p11243
I27
VInfixExpression: *
p11244
tp11245
I1
s(g7654
I42
g7655
Vinsert
p11246
I8
VBlock
p11247
tp11248
F20.75
s(g367
I42
g368
Vinsert
p11249
I43
VSimpleType: Long
p11250
tp11251
F1.25
s(g5126
I42
g5127
Vinsert
p11252
I59
VVariableDeclarationFragment
p11253
tp11254
I2
s(g4488
I42
g4489
Vinsert
p11255
I8
VBlock
p11256
tp11257
I2
s(g10732
I42
g10733
Vinsert
p11258
I42
VSimpleName: asList
p11259
tp11260
I1
s(g5775
I42
g5776
Vinsert
p11261
I40
VQualifiedName: span.traceIdHigh
p11262
tp11263
I3
s(g3823
I42
g3824
Vinsert
p11264
I8
VBlock
p11265
tp11266
I1
s(g562
I42
g563
Vinsert
p11267
I33
VNullLiteral
p11268
tp11269
I1
s(g9513
I42
g9514
Vinsert
p11270
I42
VSimpleName: kind
p11271
tp11272
I1
s(g2604
I42
g2605
Vinsert
p11273
I42
VSimpleName: zookeeper
p11274
tp11275
I1
s(g3422
I42
g3423
Vinsert
p11276
I8
VBlock
p11277
tp11278
I1
s(g3318
I42
g3319
Vinsert
p11279
I34
VNumberLiteral: 8
p11280
tp11281
I1
s(g7197
I42
g7198
Vinsert
p11282
I78
VMarkerAnnotation
p11283
tp11284
F3.25
s(g11052
I42
g11053
Vinsert
p11285
I42
VSimpleName: Test
p11286
tp11287
F0.25
s(g5584
I42
g5585
Vinsert
p11288
I42
VSimpleName: ResourceHandlerRegistry
p11289
tp11290
F0.25
s(g4103
I42
g4104
Vinsert
p11291
I78
VMarkerAnnotation
p11292
tp11293
F0.5
s(g3987
I42
g3988
Vinsert
p11294
I42
VSimpleName: i
p11295
tp11296
I2
s(g329
I42
g330
Vinsert
p11297
I42
VSimpleName: Test
p11298
tp11299
F0.5
s(g1831
I42
g1832
Vinsert
p11300
I45
VStringLiteral: "/health"
p11301
tp11302
I1
s(g5286
I42
g5287
Vinsert
p11303
I42
VSimpleName: stream
p11304
tp11305
I1
s(g2959
I42
g2960
Vinsert
p11306
I45
VStringLiteral: "http://webservices.amazon.com/onca/xml?AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE&AssociateTag=mytag-20&ItemId=0679722769&Operation=ItemLookup&ResponseGroup=Images%2CItemAttributes%2COffers%2CReviews&Service=AWSECommerceService&Timestamp=2014-08-18T12%3A00%3A00Z&Version=2013-08-01&Signature=j7bZM0LXZ9eXeZruTqWm2DIvDYVUU3wxPPpp%2BiXxzQc%3D"
p11307
tp11308
I1
s(g2383
I42
g2384
Vinsert
p11309
I43
VSimpleType: Class
p11310
tp11311
F0.5
s(Vinsert
p11312
I42
VSimpleName: newBuilder
p11313
Vinsert
p11314
I45
VStringLiteral: "4d1e00c0db9010db"
p11315
tp11316
I1
s(Vinsert
p11317
I42
VSimpleName: builder
p11318
Vinsert
p11319
I43
VSimpleType: Endpoint.Builder
p11320
tp11321
I2
s(g5510
I42
g5511
Vinsert
p11322
I43
VSimpleType: Annotation
p11323
tp11324
I1
s(Vinsert
p11325
I42
VSimpleName: getTraces
p11326
Vinsert
p11327
I42
VSimpleName: webCustom
p11328
tp11329
F0.25
s(g1744
I42
g1745
Vinsert
p11330
I8
VBlock
p11331
tp11332
I2
s(g3520
I42
g3521
Vinsert
p11333
I42
VSimpleName: serviceName
p11334
tp11335
I1
s(g3859
I42
g3860
Vinsert
p11336
I42
VSimpleName: traceId
p11337
tp11338
F0.25
s(g461
I42
g462
Vinsert
p11339
I42
VSimpleName: ByteBuffer
p11340
tp11341
I1
s(g3493
I42
g3494
Vinsert
p11342
I43
VSimpleType: Endpoint
p11343
tp11344
I1
s(Vinsert
p11345
I42
VSimpleName: size
p11346
Vinsert
p11347
I40
VQualifiedName: span.annotations
p11348
tp11349
I3
s(g4044
I42
g4045
Vinsert
p11350
I66
VTextElement: cheap check to see if we are likely to include urls 
p11351
tp11352
F0.25
s(g1811
I42
g1812
Vinsert
p11353
I59
VVariableDeclarationFragment
p11354
tp11355
I7
s(g4415
I42
g4416
Vinsert
p11356
I54
VTryStatement
p11357
tp11358
I1
s(g659
I42
g660
Vinsert
p11359
I43
VSimpleType: T
p11360
tp11361
F1.25
s(g3388
I42
g3389
Vinsert
p11362
I14
VClassInstanceCreation
p11363
tp11364
I4
s(g5053
I42
g5054
Vinsert
p11365
I60
VVariableDeclarationStatement
p11366
tp11367
I1
s(Vinsert
p11368
I42
VSimpleName: builder
p11369
Vinsert
p11370
I42
VSimpleName: parent
p11371
tp11372
I1
s(g3979
I42
g3980
Vinsert
p11373
I22
VFieldAccess
p11374
tp11375
F0.25
s(g4011
I42
g4012
Vinsert
p11376
I42
VSimpleName: DependencyLink
p11377
tp11378
F0.25
s(g3565
I42
g3566
Vinsert
p11379
I42
VSimpleName: Span
p11380
tp11381
I1
s(g532
I42
g533
Vinsert
p11382
I42
VSimpleName: clientTracer
p11383
tp11384
I1
s(g6454
I42
g6455
Vinsert
p11385
I42
VSimpleName: equals
p11386
tp11387
I2
s(g1579
I42
g1580
Vinsert
p11388
I45
VStringLiteral: "9223372036854775807"
p11389
tp11390
F0.25
s(g1351
I42
g1352
Vinsert
p11391
I42
VSimpleName: thrown
p11392
tp11393
I1
s(g502
I42
g503
Vinsert
p11394
I40
VQualifiedName: HttpClient.Builder
p11395
tp11396
I1
s(Vinsert
p11397
I42
VSimpleName: put
p11398
Vinsert
p11399
I8
VBlock
p11400
tp11401
F6.5
s(g9290
I42
g9291
Vinsert
p11402
I44
VSingleVariableDeclaration
p11403
tp11404
F0.25
s(g7654
I42
g7655
Vinsert
p11405
I42
VSimpleName: storage
p11406
tp11407
F5.0
s(g3009
I42
g3010
Vinsert
p11408
I43
VSimpleType: SpanStore
p11409
tp11410
F0.25
s(g7897
I42
g7898
Vinsert
p11411
I42
VSimpleName: Void
p11412
tp11413
F0.75
s(g502
I42
g503
Vinsert
p11414
I42
VSimpleName: signer
p11415
tp11416
I1
s(g6145
I42
g6146
Vinsert
p11417
I32
VMethodInvocation
p11418
tp11419
I6
s(g4171
I42
g4172
Vinsert
p11420
I42
VSimpleName: traceSampler
p11421
tp11422
I1
s(g9881
I42
g9882
Vinsert
p11423
I32
VMethodInvocation
p11424
tp11425
I5
s(g5349
I42
g5350
Vinsert
p11426
I8
VBlock
p11427
tp11428
I1
s(Vinsert
p11429
I42
VSimpleName: toString
p11430
Vinsert
p11431
I42
VSimpleName: List
p11432
tp11433
F0.5
s(g6005
I42
g6006
Vinsert
p11434
I21
VExpressionStatement
p11435
tp11436
I1
s(g886
I42
g887
Vinsert
p11437
I5
VArrayType: Field<?>[]
p11438
tp11439
I1
s(g9047
I42
g9048
Vinsert
p11440
I42
VSimpleName: endTs
p11441
tp11442
I2
s(Vinsert
p11443
I42
VSimpleName: name
p11444
Vinsert
p11445
I34
VNumberLiteral: 123
p11446
tp11447
I1
s(g1688
I42
g1689
Vinsert
p11448
I42
VSimpleName: codec
p11449
tp11450
I1
s(g2704
I42
g2705
Vinsert
p11451
I32
VMethodInvocation
p11452
tp11453
I2
s(g1795
I42
g1796
Vinsert
p11454
I42
VSimpleName: GaugeService
p11455
tp11456
F0.25
s(g161
I42
g162
Vinsert
p11457
I42
VSimpleName: execute
p11458
tp11459
I1
s(g1040
I42
g1041
Vinsert
p11460
I5
VArrayType: byte[]
p11461
tp11462
F0.25
s(Vinsert
p11463
I42
VSimpleName: create
p11464
Vinsert
p11465
I42
VSimpleName: SPANS
p11466
tp11467
I1
s(g3150
I42
g3151
Vinsert
p11468
I21
VExpressionStatement
p11469
tp11470
I1
s(g191
I42
g192
Vinsert
p11471
I42
VSimpleName: assertThat
p11472
tp11473
I1
s(g562
I42
g563
Vinsert
p11474
I27
VInfixExpression: +
p11475
tp11476
I2
s(g1665
I42
g1666
Vinsert
p11477
I43
VSimpleType: IOException
p11478
tp11479
F0.5
s(g5126
I42
g5127
Vinsert
p11480
I42
VSimpleName: newFuture
p11481
tp11482
F0.25
s(g7752
I42
g7753
Vinsert
p11483
I42
VSimpleName: page
p11484
tp11485
I1
s(g156
I42
g157
Vinsert
p11486
I42
VSimpleName: Override
p11487
tp11488
F0.5
s(g1533
I42
g1534
Vinsert
p11489
I32
VMethodInvocation
p11490
tp11491
I10
s(g3974
I42
g3975
Vinsert
p11492
I32
VMethodInvocation
p11493
tp11494
I9
s(g967
I42
g968
Vinsert
p11495
I42
VSimpleName: id
p11496
tp11497
F1.25
s(g2684
I42
g2685
Vinsert
p11498
I42
VSimpleName: message
p11499
tp11500
I1
s(g4945
I42
g4946
Vinsert
p11501
I43
VSimpleType: TTransportException
p11502
tp11503
I1
s(g1212
I42
g1213
Vinsert
p11504
I42
VSimpleName: result
p11505
tp11506
I1
s(g871
I42
g872
Vinsert
p11507
I37
VPostfixExpression: ++
p11508
tp11509
I1
s(g9791
I42
g9792
Vinsert
p11510
I83
VModifier: final
p11511
tp11512
I1
s(g641
I42
g642
Vinsert
p11513
I42
VSimpleName: result
p11514
tp11515
I1
s(g4114
I42
g4115
Vinsert
p11516
I8
VBlock
p11517
tp11518
I6
s(g6997
I42
g6998
Vinsert
p11519
I42
VSimpleName: assertThat
p11520
tp11521
I1
s(g757
I42
g758
Vinsert
p11522
I5
VArrayType: byte[]
p11523
tp11524
F0.25
s(g7305
I42
g7306
Vinsert
p11525
I42
VSimpleName: DEPENDENCY_LINK_ADAPTER
p11526
tp11527
I1
s(g1693
I42
g1694
Vinsert
p11528
I42
VSimpleName: earlySpans
p11529
tp11530
I1
s(g778
I42
g779
Vinsert
p11531
I43
VSimpleType: List
p11532
tp11533
I1
s(g992
I42
g993
Vinsert
p11534
I32
VMethodInvocation
p11535
tp11536
I23
s(g6371
I42
g6372
Vinsert
p11537
I32
VMethodInvocation
p11538
tp11539
I3
s(g8802
I42
g8803
Vinsert
p11540
I45
VStringLiteral: "_template"
p11541
tp11542
I1
s(g3644
I42
g3645
Vinsert
p11543
I8
VBlock
p11544
tp11545
I1
s(g2514
I42
g2515
Vinsert
p11546
I65
VTagElement
p11547
tp11548
F0.25
s(g7159
I42
g7160
Vinsert
p11549
I42
VSimpleName: setBody
p11550
tp11551
I1
s(g6707
I42
g6708
Vinsert
p11552
I27
VInfixExpression: >>>
p11553
tp11554
I2
s(g3607
I42
g3608
Vinsert
p11555
I5
VArrayType: byte[]
p11556
tp11557
I2
s(g10112
I42
g10113
Vinsert
p11558
I42
VSimpleName: isError
p11559
tp11560
I1
s(g1385
I42
g1386
Vinsert
p11561
I42
VSimpleName: spans
p11562
tp11563
I1
s(g2647
I42
g2648
Vinsert
p11564
I42
VSimpleName: checkNotNull
p11565
tp11566
I2
s(g2283
I42
g2284
Vinsert
p11567
I83
VModifier: public
p11568
tp11569
F0.25
s(g4918
I42
g4919
Vinsert
p11570
I83
VModifier: final
p11571
tp11572
I1
s(g344
I42
g345
Vinsert
p11573
I66
VTextElement: Parses a 16 character lower-hex string with no prefix into an unsigned long, starting at the
p11574
tp11575
F0.25
s(g239
I42
g240
Vinsert
p11576
I42
VSimpleName: storage
p11577
tp11578
F1.25
s(g1327
I42
g1328
Vinsert
p11579
I42
VSimpleName: Brave
p11580
tp11581
F0.25
s(g3683
I42
g3684
Vinsert
p11582
I8
VBlock
p11583
tp11584
F7.25
s(g4085
I42
g4086
Vinsert
p11585
I21
VExpressionStatement
p11586
tp11587
I1
s(Vinsert
p11588
I42
VSimpleName: get
p11589
Vinsert
p11590
I42
VSimpleName: Lazy
p11591
tp11592
F1.0
s(g7744
I42
g7745
Vinsert
p11593
I42
VSimpleName: rpcV6Span
p11594
tp11595
F0.25
s(g1327
I42
g1328
Vinsert
p11596
I41
VReturnStatement
p11597
tp11598
I1
s(g7674
I42
g7675
Vinsert
p11599
I43
VSimpleType: DependencyLinkSpan
p11600
tp11601
I1
s(g219
I42
g220
Vinsert
p11602
I42
VSimpleName: JsonReader
p11603
tp11604
I3
s(g279
I42
g280
Vinsert
p11605
I39
VPrimitiveType: float
p11606
tp11607
F0.25
s(g1921
I42
g1922
Vinsert
p11608
I42
VSimpleName: state
p11609
tp11610
I1
s(g2547
I42
g2548
Vinsert
p11611
I42
VSimpleName: Math
p11612
tp11613
I1
s(g2360
I42
g2361
Vinsert
p11614
I43
VSimpleType: QueryRequest.Builder
p11615
tp11616
I2
s(Vinsert
p11617
I42
VSimpleName: build
p11618
Vinsert
p11619
I34
VNumberLiteral: 3L
p11620
tp11621
I1
s(g1657
I42
g1658
Vinsert
p11622
I42
VSimpleName: Test
p11623
tp11624
F0.5
s(g3380
I42
g3381
Vinsert
p11625
I42
VSimpleName: bucket
p11626
tp11627
F0.75
s(g791
I42
g792
Vinsert
p11628
I66
VTextElement: This measures the counting trace id sampler provided with zipkin-java
p11629
tp11630
F0.25
s(g10346
I42
g10347
Vinsert
p11631
I43
VSimpleType: DeferredResult
p11632
tp11633
I1
s(Vinsert
p11634
I42
VSimpleName: get
p11635
Vinsert
p11636
I42
VSimpleName: getConnection
p11637
tp11638
I2
s(g10954
I42
g10955
Vinsert
p11639
I8
VBlock
p11640
tp11641
I1
s(g9174
I42
g9175
Vinsert
p11642
I42
VSimpleName: Map
p11643
tp11644
I1
s(g5780
I42
g5781
Vinsert
p11645
I42
VSimpleName: setTimeInMillis
p11646
tp11647
I1
s(g6878
I42
g6879
Vinsert
p11648
I42
VSimpleName: SelectTraceIdsFromServiceSpan
p11649
tp11650
I1
s(g694
I42
g695
Vinsert
p11651
I43
VSimpleType: Endpoint
p11652
tp11653
F0.25
s(Vinsert
p11654
I42
VSimpleName: newBuilder
p11655
Vinsert
p11656
I34
VNumberLiteral: 1000
p11657
tp11658
I1
s(g2103
I42
g2104
Vinsert
p11659
I42
VSimpleName: describeElasticsearchDomain
p11660
tp11661
I1
s(g5558
I42
g5559
Vinsert
p11662
I42
VSimpleName: iterator
p11663
tp11664
I2
s(g9497
I42
g9498
Vinsert
p11665
I42
VSimpleName: ElasticsearchSpanStoreTest
p11666
tp11667
F0.25
s(g2145
I42
g2146
Vinsert
p11668
I8
VBlock
p11669
tp11670
I2
s(g2161
I42
g2162
Vinsert
p11671
I42
VSimpleName: ServerTracer
p11672
tp11673
I1
s(g4592
I42
g4593
Vinsert
p11674
I42
VSimpleName: serviceName
p11675
tp11676
F0.25
s(g7541
I42
g7542
Vinsert
p11677
I40
VQualifiedName: adjustedRpcSpan.timestamp
p11678
tp11679
I1
s(g2614
I42
g2615
Vinsert
p11680
I5
VArrayType: byte[]
p11681
tp11682
F0.5
s(Vinsert
p11683
I42
VSimpleName: url
p11684
Vinsert
p11685
I40
VQualifiedName: HttpCall.Factory
p11686
tp11687
F1.25
s(g259
I42
g260
Vinsert
p11688
I42
VSimpleName: String
p11689
tp11690
F0.75
s(g1346
I42
g1347
Vinsert
p11691
I13
VCharacterLiteral: 'h'
p11692
tp11693
I1
s(g8121
I42
g8122
Vinsert
p11694
I42
VSimpleName: incrementBytes
p11695
tp11696
I1
s(g4415
I42
g4416
Vinsert
p11697
I42
VSimpleName: result
p11698
tp11699
I1
s(g6707
I42
g6708
Vinsert
p11700
I34
VNumberLiteral: 32
p11701
tp11702
I2
s(g7482
I42
g7483
Vinsert
p11703
I42
VSimpleName: required
p11704
tp11705
F0.25
s(g1987
I42
g1988
Vinsert
p11706
I42
VSimpleName: Record
p11707
tp11708
I5
s(g2555
I42
g2556
Vinsert
p11709
I45
VStringLiteral: "app"
p11710
tp11711
I2
s(g2781
I42
g2782
Vinsert
p11712
I33
VNullLiteral
p11713
tp11714
F8.75
s(g2421
I42
g2422
Vinsert
p11715
I42
VSimpleName: IOException
p11716
tp11717
F0.25
s(g6162
I42
g6163
Vinsert
p11718
I43
VSimpleType: BinaryAnnotation.Builder
p11719
tp11720
F0.25
s(g2383
I42
g2384
Vinsert
p11721
I11
VCastExpression
p11722
tp11723
F0.5
s(g1390
I42
g1391
Vinsert
p11724
I32
VMethodInvocation
p11725
tp11726
F3.25
s(g274
I42
g275
Vinsert
p11727
I42
VSimpleName: String
p11728
tp11729
F2.25
s(g390
I42
g391
Vinsert
p11730
I42
VSimpleName: describeElasticsearchDomain
p11731
tp11732
I1
s(g806
I42
g807
Vinsert
p11733
I85
VDimension
p11734
tp11735
I1
s(Vinsert
p11736
I42
VSimpleName: equals
p11737
Vinsert
p11738
I42
VSimpleName: PartitionKeyToTraceId
p11739
tp11740
I2
s(g1921
I42
g1922
Vinsert
p11741
I44
VSingleVariableDeclaration
p11742
tp11743
I1
s(Vinsert
p11744
I42
VSimpleName: close
p11745
Vinsert
p11746
I42
VSimpleName: closer
p11747
tp11748
I1
s(g410
I42
g411
Vinsert
p11749
I32
VMethodInvocation
p11750
tp11751
I1
s(g390
I42
g391
Vinsert
p11752
I45
VStringLiteral: "2015-01-01/es/domain"
p11753
tp11754
F0.25
s(g1085
I42
g1086
Vinsert
p11755
I8
VBlock
p11756
tp11757
I1
s(g3217
I42
g3218
Vinsert
p11758
I42
VSimpleName: type
p11759
tp11760
I1
s(g11463
I42
g11464
Vinsert
p11761
I74
VParameterizedType: BodyConverter<List<Span>>
p11762
tp11763
I1
s(g3094
I42
g3095
Vinsert
p11764
I42
VSimpleName: decodeList
p11765
tp11766
F0.5
s(g7613
I42
g7614
Vinsert
p11767
I43
VSimpleType: Pair
p11768
tp11769
F1.25
s(g6992
I42
g6993
Vinsert
p11770
I21
VExpressionStatement
p11771
tp11772
I5
s(g4856
I42
g4857
Vinsert
p11773
I32
VMethodInvocation
p11774
tp11775
F1.25
s(g3520
I42
g3521
Vinsert
p11776
I43
VSimpleType: Endpoint
p11777
tp11778
I1
s(g2098
I42
g2099
Vinsert
p11779
I54
VTryStatement
p11780
tp11781
I4
s(g7768
I42
g7769
Vinsert
p11782
I5
VArrayType: byte[]
p11783
tp11784
F0.25
s(g6776
I42
g6777
Vinsert
p11785
I42
VSimpleName: Connection
p11786
tp11787
I4
s(Vinsert
p11788
I42
VSimpleName: addAnnotation
p11789
Vinsert
p11790
I42
VSimpleName: emptyList
p11791
tp11792
F0.5
s(g4136
I42
g4137
Vinsert
p11793
I42
VSimpleName: length
p11794
tp11795
I1
s(g9889
I42
g9890
Vinsert
p11796
I32
VMethodInvocation
p11797
tp11798
I6
s(Vinsert
p11799
I42
VSimpleName: clear
p11800
Vinsert
p11801
I46
VSuperConstructorInvocation
p11802
tp11803
F0.5
s(g4330
I42
g4331
Vinsert
p11804
I32
VMethodInvocation
p11805
tp11806
I2
s(g1438
I42
g1439
Vinsert
p11807
I42
VSimpleName: equals
p11808
tp11809
I1
s(g806
I42
g807
Vinsert
p11810
I57
VTypeLiteral
p11811
tp11812
F0.25
s(g6867
I42
g6868
Vinsert
p11813
I42
VSimpleName: toString
p11814
tp11815
F0.25
s(g11317
I42
g11318
Vinsert
p11816
I42
VSimpleName: Endpoint
p11817
tp11818
F5.25
s(g699
I42
g700
Vinsert
p11819
I42
VSimpleName: List
p11820
tp11821
F0.25
s(g11463
I42
g11464
Vinsert
p11822
I42
VSimpleName: BodyConverter
p11823
tp11824
I1
s(Vinsert
p11825
I42
VSimpleName: append
p11826
Vinsert
p11827
I34
VNumberLiteral: 24
p11828
tp11829
I1
s(g5629
I42
g5630
Vinsert
p11830
I27
VInfixExpression: ==
p11831
tp11832
I2
s(Vinsert
p11833
I42
VSimpleName: length
p11834
Vinsert
p11835
I83
VModifier: final
p11836
tp11837
I1
s(g967
I42
g968
Vinsert
p11838
I42
VSimpleName: build
p11839
tp11840
F10.25
s(g1926
I42
g1927
Vinsert
p11841
I42
VSimpleName: sink
p11842
tp11843
I1
s(g3105
I42
g3106
Vinsert
p11844
I43
VSimpleType: Codec
p11845
tp11846
F0.25
s(g5510
I42
g5511
Vinsert
p11847
I21
VExpressionStatement
p11848
tp11849
I2
s(g1723
I42
g1724
Vinsert
p11850
I60
VVariableDeclarationStatement
p11851
tp11852
I1
s(g264
I42
g265
Vinsert
p11853
I42
VSimpleName: get
p11854
tp11855
F0.25
s(g9471
I42
g9472
Vinsert
p11856
I42
VSimpleName: Span
p11857
tp11858
I1
s(g3552
I42
g3553
Vinsert
p11859
I59
VVariableDeclarationFragment
p11860
tp11861
I1
s(g2991
I42
g2992
Vinsert
p11862
I42
VSimpleName: client
p11863
tp11864
I1
s(g492
I42
g493
Vinsert
p11865
I42
VSimpleName: buffer
p11866
tp11867
I2
s(g7380
I42
g7381
Vinsert
p11868
I83
VModifier: final
p11869
tp11870
F0.25
s(g5210
I42
g5211
Vinsert
p11871
I43
VSimpleType: SessionProvider
p11872
tp11873
F0.25
s(g5823
I42
g5824
Vinsert
p11874
I45
VStringLiteral: "settings"
p11875
tp11876
F0.25
s(g6984
I42
g6985
Vinsert
p11877
I42
VSimpleName: resultSet
p11878
tp11879
I1
s(g9457
I42
g9458
Vinsert
p11880
I42
VSimpleName: CassandraWithOriginalSchemaSpanStoreTest
p11881
tp11882
F0.25
s(g2896
I42
g2897
Vinsert
p11883
I8
VBlock
p11884
tp11885
I1
s(g7768
I42
g7769
Vinsert
p11886
I42
VSimpleName: Codec
p11887
tp11888
F0.25
s(g4712
I42
g4713
Vinsert
p11889
I43
VSimpleType: HttpServerExchange
p11890
tp11891
F0.25
s(g3307
I42
g3308
Vinsert
p11892
I42
VSimpleName: strictTraceId
p11893
tp11894
I1
s(g4866
I42
g4867
Vinsert
p11895
I42
VSimpleName: LinkageError
p11896
tp11897
F0.25
s(g7394
I42
g7395
Vinsert
p11898
I60
VVariableDeclarationStatement
p11899
tp11900
I2
s(g4090
I42
g4091
Vinsert
p11901
I42
VSimpleName: i
p11902
tp11903
I12
s(g2944
I42
g2945
Vinsert
p11904
I43
VSimpleType: CallbackListenableFuture
p11905
tp11906
I1
s(g4114
I42
g4115
Vinsert
p11907
I21
VExpressionStatement
p11908
tp11909
I8
s(g1207
I42
g1208
Vinsert
p11910
I42
VSimpleName: longs
p11911
tp11912
I1
s(g2187
I42
g2188
Vinsert
p11913
I83
VModifier: private
p11914
tp11915
F0.25
s(g3552
I42
g3553
Vinsert
p11916
I40
VQualifiedName: org.springframework.web.context.request.WebRequest
p11917
tp11918
F0.25
s(g4420
I42
g4421
Vinsert
p11919
I74
VParameterizedType: Callback<List<Span>>
p11920
tp11921
F0.25
s(g2865
I42
g2866
Vinsert
p11922
I25
VIfStatement
p11923
tp11924
I1
s(g8850
I42
g8851
Vinsert
p11925
I74
VParameterizedType: List<Span>
p11926
tp11927
F0.25
s(g1474
I42
g1475
Vinsert
p11928
I32
VMethodInvocation
p11929
tp11930
I1
s(g2763
I42
g2764
Vinsert
p11931
I8
VBlock
p11932
tp11933
I2
s(g1881
I42
g1882
Vinsert
p11934
I42
VSimpleName: json
p11935
tp11936
I1
s(g7423
I42
g7424
Vinsert
p11937
I44
VSingleVariableDeclaration
p11938
tp11939
F1.0
s(g2838
I42
g2839
Vinsert
p11940
I42
VSimpleName: peek
p11941
tp11942
I1
s(g8089
I42
g8090
Vinsert
p11943
I45
VStringLiteral: "7fffffffffffffff"
p11944
tp11945
F0.25
s(g3618
I42
g3619
Vinsert
p11946
I8
VBlock
p11947
tp11948
I3
s(g5674
I42
g5675
Vinsert
p11949
I21
VExpressionStatement
p11950
tp11951
I4
s(g7086
I42
g7087
Vinsert
p11952
I42
VSimpleName: e
p11953
tp11954
I2
s(g7151
I42
g7152
Vinsert
p11955
I42
VSimpleName: processor
p11956
tp11957
I1
s(g51
I42
g52
Vinsert
p11958
I52
VThisExpression
p11959
tp11960
I1
s(g5264
I42
g5265
Vinsert
p11961
I13
VCharacterLiteral: '"'
p11962
tp11963
F0.25
s(g3828
I42
g3829
Vinsert
p11964
I55
VTypeDeclaration
p11965
tp11966
I1
s(g783
I42
g784
Vinsert
p11967
I33
VNullLiteral
p11968
tp11969
I2
s(g654
I42
g655
Vinsert
p11970
I42
VSimpleName: Set
p11971
tp11972
F0.25
s(Vinsert
p11973
I42
VSimpleName: size
p11974
Vinsert
p11975
I42
VSimpleName: dropped
p11976
tp11977
I1
s(g3607
I42
g3608
Vinsert
p11978
I59
VVariableDeclarationFragment
p11979
tp11980
I2
s(g3258
I42
g3259
Vinsert
p11981
I83
VModifier: static
p11982
tp11983
F0.5
s(g10568
I42
g10569
Vinsert
p11984
I59
VVariableDeclarationFragment
p11985
tp11986
I1
s(g7450
I42
g7451
Vinsert
p11987
I25
VIfStatement
p11988
tp11989
I1
s(g11799
I42
g11800
Vinsert
p11990
I43
VSimpleType: InMemorySpanStore
p11991
tp11992
F0.5
s(g5481
I42
g5482
Vinsert
p11993
I43
VSimpleType: InMemorySpanStore
p11994
tp11995
I2
s(g2810
I42
g2811
Vinsert
p11996
I59
VVariableDeclarationFragment
p11997
tp11998
I2
s(g106
I42
g107
Vinsert
p11999
I42
VSimpleName: retrieved
p12000
tp12001
F0.25
s(g3745
I42
g3746
Vinsert
p12002
I42
VSimpleName: AsyncSpanConsumer
p12003
tp12004
F0.5
s(g4029
I42
g4030
Vinsert
p12005
I42
VSimpleName: compute
p12006
tp12007
F0.25
s(g8367
I42
g8368
Vinsert
p12008
I45
VStringLiteral: "    \u005c"lucene_version\u005c" : \u005c"6.2.0\u005c"\u005cn"
p12009
tp12010
I1
s(g6997
I42
g6998
Vinsert
p12011
I42
VSimpleName: getBytes
p12012
tp12013
I1
s(Vinsert
p12014
I42
VSimpleName: hashCode
p12015
Vinsert
p12016
I42
VSimpleName: v
p12017
tp12018
I2
s(g4605
I42
g4606
Vinsert
p12019
I42
VSimpleName: of
p12020
tp12021
I1
s(Vinsert
p12022
I42
VSimpleName: get
p12023
Vinsert
p12024
I42
VSimpleName: annotationKeys_skipsCoreAndAddressAnnotations
p12025
tp12026
F0.25
s(g3788
I42
g3789
Vinsert
p12027
I42
VSimpleName: value
p12028
tp12029
F0.25
s(g1876
I42
g1877
Vinsert
p12030
I43
VSimpleType: Annotation
p12031
tp12032
I1
s(g4626
I42
g4627
Vinsert
p12033
I45
VStringLiteral: "zipkin-web"
p12034
tp12035
I1
s(g3688
I42
g3689
Vinsert
p12036
I43
VSimpleType: CallbackCaptor
p12037
tp12038
I1
s(g3412
I42
g3413
Vinsert
p12039
I14
VClassInstanceCreation
p12040
tp12041
I1
s(g1415
I42
g1416
Vinsert
p12042
I43
VSimpleType: DependencyLink
p12043
tp12044
I2
s(g2345
I42
g2346
Vinsert
p12045
I43
VSimpleType: ImmutableList.Builder
p12046
tp12047
I1
s(g10487
I42
g10488
Vinsert
p12048
I42
VSimpleName: url
p12049
tp12050
I2
s(Vinsert
p12051
I42
VSimpleName: perform
p12052
Vinsert
p12053
I42
VSimpleName: shouldAllowAnyOriginByDefault
p12054
tp12055
F0.25
s(g886
I42
g887
Vinsert
p12056
I42
VSimpleName: toArray
p12057
tp12058
I1
s(g954
I42
g955
Vinsert
p12059
I53
VThrowStatement
p12060
tp12061
I1
s(g4673
I42
g4674
Vinsert
p12062
I83
VModifier: public
p12063
tp12064
F0.25
s(g6471
I42
g6472
Vinsert
p12065
I42
VSimpleName: ListenableFuture
p12066
tp12067
I1
s(g5410
I42
g5411
Vinsert
p12068
I78
VMarkerAnnotation
p12069
tp12070
F1.25
s(g2865
I42
g2866
Vinsert
p12071
I42
VSimpleName: getValue
p12072
tp12073
I1
s(g7752
I42
g7753
Vinsert
p12074
I27
VInfixExpression: <
p12075
tp12076
I2
s(g3263
I42
g3264
Vinsert
p12077
I42
VSimpleName: Long
p12078
tp12079
F0.25
s(g1594
I42
g1595
Vinsert
p12080
I42
VSimpleName: getUsername
p12081
tp12082
I1
s(g2717
I42
g2718
Vinsert
p12083
I40
VQualifiedName: Sampler.ALWAYS_SAMPLE
p12084
tp12085
F0.25
s(g2833
I42
g2834
Vinsert
p12086
I78
VMarkerAnnotation
p12087
tp12088
F0.5
s(g6371
I42
g6372
Vinsert
p12089
I42
VSimpleName: Runnable
p12090
tp12091
F0.75
s(g744
I42
g745
Vinsert
p12092
I44
VSingleVariableDeclaration
p12093
tp12094
F0.25
s(g5221
I42
g5222
Vinsert
p12095
I8
VBlock
p12096
tp12097
I1
s(g7635
I42
g7636
Vinsert
p12098
I42
VSimpleName: String
p12099
tp12100
F0.25
s(g7240
I42
g7241
Vinsert
p12101
I21
VExpressionStatement
p12102
tp12103
I1
s(g2304
I42
g2305
Vinsert
p12104
I21
VExpressionStatement
p12105
tp12106
I1
s(g7482
I42
g7483
Vinsert
p12107
I42
VSimpleName: defaultValue
p12108
tp12109
F0.25
s(g6781
I42
g6782
Vinsert
p12110
I43
VSimpleType: Session
p12111
tp12112
I1
s(g4171
I42
g4172
Vinsert
p12113
I16
VConditionalExpression
p12114
tp12115
I2
s(g856
I42
g857
Vinsert
p12116
I39
VPrimitiveType: void
p12117
tp12118
F0.25
s(g3335
I42
g3336
Vinsert
p12119
I42
VSimpleName: SpansDecoder
p12120
tp12121
I1
s(g2265
I42
g2266
Vinsert
p12122
I39
VPrimitiveType: long
p12123
tp12124
F3.25
s(g851
I42
g852
Vinsert
p12125
I40
VQualifiedName: config.keyspace
p12126
tp12127
F0.25
s(g2977
I42
g2978
Vinsert
p12128
I42
VSimpleName: Pair
p12129
tp12130
F0.5
s(g1316
I42
g1317
Vinsert
p12131
I83
VModifier: public
p12132
tp12133
F1.5
s(g5897
I42
g5898
Vinsert
p12134
I42
VSimpleName: SpanStore
p12135
tp12136
F0.25
s(g6552
I42
g6553
Vinsert
p12137
I42
VSimpleName: today
p12138
tp12139
I1
s(g3525
I42
g3526
Vinsert
p12140
I42
VSimpleName: thrift
p12141
tp12142
I1
s(g3565
I42
g3566
Vinsert
p12143
I42
VSimpleName: result
p12144
tp12145
I1
s(g151
I42
g152
Vinsert
p12146
I42
VSimpleName: AsyncSpanConsumer
p12147
tp12148
F0.5
s(g4415
I42
g4416
Vinsert
p12149
I42
VSimpleName: TBINARY_PROTOCOL_FACTORY
p12150
tp12151
I1
s(g4016
I42
g4017
Vinsert
p12152
I21
VExpressionStatement
p12153
tp12154
I7
s(g4016
I42
g4017
Vinsert
p12155
I32
VMethodInvocation
p12156
tp12157
I25
s(g3064
I42
g3065
Vinsert
p12158
I42
VSimpleName: getTraces
p12159
tp12160
I1
s(g6203
I42
g6204
Vinsert
p12161
I41
VReturnStatement
p12162
tp12163
F2.5
s(g7768
I42
g7769
Vinsert
p12164
I42
VSimpleName: codec
p12165
tp12166
F0.25
s(g2848
I42
g2849
Vinsert
p12167
I42
VSimpleName: transform
p12168
tp12169
I1
s(g2314
I42
g2315
Vinsert
p12170
I43
VSimpleType: BinaryAnnotation
p12171
tp12172
I2
s(g3485
I42
g3486
Vinsert
p12173
I45
VStringLiteral: "  ]"
p12174
tp12175
I1
s(g2161
I42
g2162
Vinsert
p12176
I43
VSimpleType: ServerAndClientSpanState
p12177
tp12178
F0.25
s(g896
I42
g897
Vinsert
p12179
I45
VStringLiteral: "parent"
p12180
tp12181
I1
s(g4488
I42
g4489
Vinsert
p12182
I42
VSimpleName: delegate
p12183
tp12184
I1
s(g724
I42
g725
Vinsert
p12185
I42
VSimpleName: config
p12186
tp12187
I1
s(g2273
I42
g2274
Vinsert
p12188
I43
VSimpleType: Iterable
p12189
tp12190
F0.25
s(g166
I42
g167
Vinsert
p12191
I42
VSimpleName: e
p12192
tp12193
I1
s(g621
I42
g622
Vinsert
p12194
I21
VExpressionStatement
p12195
tp12196
F1.25
s(g5807
I42
g5808
Vinsert
p12197
I42
VSimpleName: traceIds
p12198
tp12199
I1
s(g3009
I42
g3010
Vinsert
p12200
I40
VQualifiedName: CassandraTestGraph.INSTANCE
p12201
tp12202
F2.25
s(g5897
I42
g5898
Vinsert
p12203
I31
VMethodDeclaration
p12204
tp12205
F0.25
s(g1247
I42
g1248
Vinsert
p12206
I40
VQualifiedName: factory.session
p12207
tp12208
I2
s(g7134
I42
g7135
Vinsert
p12209
I44
VSingleVariableDeclaration
p12210
tp12211
F0.25
s(g11634
I42
g11635
Vinsert
p12212
I43
VSimpleType: DSLContext
p12213
tp12214
I1
s(g1566
I42
g1567
Vinsert
p12215
I43
VSimpleType: String
p12216
tp12217
F0.5
s(Vinsert
p12218
I42
VSimpleName: add
p12219
Vinsert
p12220
I42
VSimpleName: Node
p12221
tp12222
I1
s(g3022
I42
g3023
Vinsert
p12223
I42
VSimpleName: keyspaceMetadata
p12224
tp12225
I3
s(g1040
I42
g1041
Vinsert
p12226
I44
VSingleVariableDeclaration
p12227
tp12228
F0.5
s(g4712
I42
g4713
Vinsert
p12229
I42
VSimpleName: HttpServerExchange
p12230
tp12231
F0.25
s(g4690
I42
g4691
Vinsert
p12232
I42
VSimpleName: parentChild
p12233
tp12234
I1
s(g2383
I42
g2384
Vinsert
p12235
I42
VSimpleName: contains
p12236
tp12237
F0.5
s(g7959
I42
g7960
Vinsert
p12238
I42
VSimpleName: sampled
p12239
tp12240
I2
s(g881
I42
g882
Vinsert
p12241
I45
VStringLiteral: "child"
p12242
tp12243
I1
s(g3740
I42
g3741
Vinsert
p12244
I42
VSimpleName: durationIndexBucket_notNegative
p12245
tp12246
F0.25
s(g254
I42
g255
Vinsert
p12247
I42
VSimpleName: list
p12248
tp12249
I2
s(g7159
I42
g7160
Vinsert
p12250
I45
VStringLiteral: "  \u005c"DomainStatus\u005c": {\u005cn"
p12251
tp12252
I1
s(g3683
I42
g3684
Vinsert
p12253
I78
VMarkerAnnotation
p12254
tp12255
F0.75
s(Vinsert
p12256
I42
VSimpleName: isEmpty
p12257
Vinsert
p12258
I42
VSimpleName: limit
p12259
tp12260
F0.25
s(g886
I42
g887
Vinsert
p12261
I85
VDimension
p12262
tp12263
I1
s(g7251
I42
g7252
Vinsert
p12264
I45
VStringLiteral: "{\u005c"timestamp\u005c":"
p12265
tp12266
I1
s(g9889
I42
g9890
Vinsert
p12267
I42
VSimpleName: traces
p12268
tp12269
I1
s(g344
I42
g345
Vinsert
p12270
I65
VTagElement
p12271
tp12272
F0.25
s(g3599
I42
g3600
Vinsert
p12273
I43
VSimpleType: List
p12274
tp12275
F0.25
s(g8152
I42
g8153
Vinsert
p12276
I41
VReturnStatement
p12277
tp12278
I1
s(g4647
I42
g4648
Vinsert
p12279
I32
VMethodInvocation
p12280
tp12281
I1
s(Vinsert
p12282
I42
VSimpleName: inputStream
p12283
Vinsert
p12284
I42
VSimpleName: link
p12285
tp12286
I1
s(g294
I42
g295
Vinsert
p12287
I42
VSimpleName: compute
p12288
tp12289
F0.75
s(g3979
I42
g3980
Vinsert
p12290
I21
VExpressionStatement
p12291
tp12292
F1.25
s(g757
I42
g758
Vinsert
p12293
I85
VDimension
p12294
tp12295
F0.25
s(Vinsert
p12296
I42
VSimpleName: value
p12297
Vinsert
p12298
I42
VSimpleName: Character
p12299
tp12300
I2
s(g5984
I42
g5985
Vinsert
p12301
I42
VSimpleName: traceIds
p12302
tp12303
I2
s(g2977
I42
g2978
Vinsert
p12304
I74
VParameterizedType: Pair<Long>
p12305
tp12306
F0.25
s(g1095
I42
g1096
Vinsert
p12307
I39
VPrimitiveType: byte
p12308
tp12309
F0.25
s(g2388
I42
g2389
Vinsert
p12310
I27
VInfixExpression: ==
p12311
tp12312
I3
s(g4856
I42
g4857
Vinsert
p12313
I42
VSimpleName: exceptionExpiration
p12314
tp12315
F0.25
s(g5746
I42
g5747
Vinsert
p12316
I8
VBlock
p12317
tp12318
I6
s(g3120
I42
g3121
Vinsert
p12319
I42
VSimpleName: Cassandra3Storage
p12320
tp12321
F0.25
s(g1831
I42
g1832
Vinsert
p12322
I32
VMethodInvocation
p12323
tp12324
I4
s(Vinsert
p12325
I42
VSimpleName: getCluster
p12326
Vinsert
p12327
I21
VExpressionStatement
p12328
tp12329
I2
s(g4605
I42
g4606
Vinsert
p12330
I34
VNumberLiteral: 1L
p12331
tp12332
I2
s(Vinsert
p12333
I42
VSimpleName: get
p12334
Vinsert
p12335
I43
VSimpleType: ArrayList
p12336
tp12337
I1
s(g3474
I42
g3475
Vinsert
p12338
I60
VVariableDeclarationStatement
p12339
tp12340
I2
s(Vinsert
p12341
I42
VSimpleName: refresh
p12342
Vinsert
p12343
I42
VSimpleName: PrometheusMetricsAutoConfiguration
p12344
tp12345
I1
s(g4293
I42
g4294
Vinsert
p12346
I42
VSimpleName: prefixWithTimestampMillis
p12347
tp12348
I1
s(g7560
I42
g7561
Vinsert
p12349
I34
VNumberLiteral: 17
p12350
tp12351
I1
s(g3838
I42
g3839
Vinsert
p12352
I32
VMethodInvocation
p12353
tp12354
I30
s(g739
I42
g740
Vinsert
p12355
I60
VVariableDeclarationStatement
p12356
tp12357
I2
s(g1197
I42
g1198
Vinsert
p12358
I45
VStringLiteral: "zipkin"
p12359
tp12360
I1
s(Vinsert
p12361
I42
VSimpleName: isEqualTo
p12362
Vinsert
p12363
I42
VSimpleName: apply
p12364
tp12365
I1
s(g7019
I42
g7020
Vinsert
p12366
I39
VPrimitiveType: char
p12367
tp12368
F0.5
s(g3094
I42
g3095
Vinsert
p12369
I39
VPrimitiveType: byte
p12370
tp12371
F0.5
s(g12333
I42
g12334
Vinsert
p12372
I74
VParameterizedType: ArrayList<>
p12373
tp12374
I1
s(g11075
I42
g11076
Vinsert
p12375
I45
VStringLiteral: "f"
p12376
tp12377
I1
s(g2335
I42
g2336
Vinsert
p12378
I8
VBlock
p12379
tp12380
I4
s(g7768
I42
g7769
Vinsert
p12381
I44
VSingleVariableDeclaration
p12382
tp12383
F0.75
s(g1066
I42
g1067
Vinsert
p12384
I42
VSimpleName: newSpanBytes
p12385
tp12386
I2
s(g8791
I42
g8792
Vinsert
p12387
I21
VExpressionStatement
p12388
tp12389
I1
s(g8791
I42
g8792
Vinsert
p12390
I8
VBlock
p12391
tp12392
I1
s(g2880
I42
g2881
Vinsert
p12393
I42
VSimpleName: CassandraStrictTraceIdFalseTest
p12394
tp12395
F0.25
s(g3823
I42
g3824
Vinsert
p12396
I7
VAssignment: =
p12397
tp12398
I3
s(Vinsert
p12399
I42
VSimpleName: getMessage
p12400
Vinsert
p12401
I40
VQualifiedName: check.ok
p12402
tp12403
I3
s(g1489
I42
g1490
Vinsert
p12404
I42
VSimpleName: String
p12405
tp12406
F0.5
s(Vinsert
p12407
I42
VSimpleName: get
p12408
Vinsert
p12409
I42
VSimpleName: StorageComponent
p12410
tp12411
F0.25
s(g6426
I42
g6427
Vinsert
p12412
I40
VQualifiedName: Promise$.MODULE$
p12413
tp12414
I1
s(g7134
I42
g7135
Vinsert
p12415
I21
VExpressionStatement
p12416
tp12417
F0.25
s(g9587
I42
g9588
Vinsert
p12418
I45
VStringLiteral: "}"
p12419
tp12420
I6
s(g2355
I42
g2356
Vinsert
p12421
I43
VSimpleType: ConsumerIterator
p12422
tp12423
I2
s(g1612
I42
g1613
Vinsert
p12424
I9
VBooleanLiteral: false
p12425
tp12426
I1
s(Vinsert
p12427
I42
VSimpleName: onError
p12428
Vinsert
p12429
I33
VNullLiteral
p12430
tp12431
F0.25
s(g7582
I42
g7583
Vinsert
p12432
I45
VStringLiteral: "  \u005c"traceId\u005c": \u005c"6b221d5bc9e6496c\u005c",\u005cn"
p12433
tp12434
I2
s(g259
I42
g260
Vinsert
p12435
I40
VQualifiedName: JsonCodec.BINARY_ANNOTATION_ADAPTER
p12436
tp12437
I1
s(g7502
I42
g7503
Vinsert
p12438
I86
VLambdaExpression
p12439
tp12440
F1.25
s(Vinsert
p12441
I42
VSimpleName: name
p12442
Vinsert
p12443
I45
VStringLiteral: "name"
p12444
tp12445
I1
s(g7450
I42
g7451
Vinsert
p12446
I45
VStringLiteral: "  \u005c"username\u005c": \u005c""
p12447
tp12448
I1
s(g654
I42
g655
Vinsert
p12449
I43
VSimpleType: Set
p12450
tp12451
F0.25
s(g876
I42
g877
Vinsert
p12452
I21
VExpressionStatement
p12453
tp12454
I1
s(g3485
I42
g3486
Vinsert
p12455
I45
VStringLiteral: "  \u005c"name\u005c": \u005c"get-traces\u005c","
p12456
tp12457
I1
s(g4264
I42
g4265
Vinsert
p12458
I43
VSimpleType: AssertionError
p12459
tp12460
I2
s(g7086
I42
g7087
Vinsert
p12461
I33
VNullLiteral
p12462
tp12463
I1
s(g1523
I42
g1524
Vinsert
p12464
I59
VVariableDeclarationFragment
p12465
tp12466
I1
s(g3051
I42
g3052
Vinsert
p12467
I42
VSimpleName: contains
p12468
tp12469
I1
s(g3867
I42
g3868
Vinsert
p12470
I41
VReturnStatement
p12471
tp12472
I1
s(g5629
I42
g5630
Vinsert
p12473
I7
VAssignment: =
p12474
tp12475
I2
s(g6552
I42
g6553
Vinsert
p12476
I27
VInfixExpression: *
p12477
tp12478
I1
s(g3388
I42
g3389
Vinsert
p12479
I42
VSimpleName: start_duration
p12480
tp12481
I1
s(g6071
I42
g6072
Vinsert
p12482
I42
VSimpleName: result
p12483
tp12484
I1
s(g7197
I42
g7198
Vinsert
p12485
I31
VMethodDeclaration
p12486
tp12487
F2.75
s(g4039
I42
g4040
Vinsert
p12488
I9
VBooleanLiteral: true
p12489
tp12490
I1
s(g344
I42
g345
Vinsert
p12491
I42
VSimpleName: lowerHex
p12492
tp12493
F0.25
s(g209
I42
g210
Vinsert
p12494
I74
VParameterizedType: CallbackCaptor<>
p12495
tp12496
I2
s(g967
I42
g968
Vinsert
p12497
I42
VSimpleName: traceId
p12498
tp12499
F1.25
s(g3735
I42
g3736
Vinsert
p12500
I39
VPrimitiveType: long
p12501
tp12502
F0.5
s(g4576
I42
g4577
Vinsert
p12503
I74
VParameterizedType: Node<V>
p12504
tp12505
I1
s(g5984
I42
g5985
Vinsert
p12506
I27
VInfixExpression: <
p12507
tp12508
I1
s(g7897
I42
g7898
Vinsert
p12509
I42
VSimpleName: Callback
p12510
tp12511
F0.5
s(g6050
I42
g6051
Vinsert
p12512
I42
VSimpleName: build
p12513
tp12514
I2
s(g5856
I42
g5857
Vinsert
p12515
I42
VSimpleName: lenientSearchOrdersQueryAlphabetically
p12516
tp12517
F0.25
s(Vinsert
p12518
I42
VSimpleName: equals
p12519
Vinsert
p12520
I42
VSimpleName: localDc
p12521
tp12522
F2.5
s(g4967
I42
g4968
Vinsert
p12523
I42
VSimpleName: end
p12524
tp12525
I1
s(g5584
I42
g5585
Vinsert
p12526
I42
VSimpleName: addResourceHandlers
p12527
tp12528
F0.25
s(g7151
I42
g7152
Vinsert
p12529
I43
VSimpleType: ThriftCodecManager
p12530
tp12531
I1
s(g2755
I42
g2756
Vinsert
p12532
I39
VPrimitiveType: boolean
p12533
tp12534
F0.25
s(g4077
I42
g4078
Vinsert
p12535
I27
VInfixExpression: !=
p12536
tp12537
I4
s(g4717
I42
g4718
Vinsert
p12538
I42
VSimpleName: traceId
p12539
tp12540
F3.25
s(g646
I42
g647
Vinsert
p12541
I42
VSimpleName: toLowerHex
p12542
tp12543
I1
s(g3046
I42
g3047
Vinsert
p12544
I86
VLambdaExpression
p12545
tp12546
I1
s(g1944
I42
g1945
Vinsert
p12547
I42
VSimpleName: storage
p12548
tp12549
F1.5
s(g8978
I42
g8979
Vinsert
p12550
I27
VInfixExpression: +
p12551
tp12552
I1
s(g6658
I42
g6659
Vinsert
p12553
I45
VStringLiteral: "foo"
p12554
tp12555
I1
s(g3675
I42
g3676
Vinsert
p12556
I40
VQualifiedName: java.util.concurrent.TimeUnit
p12557
tp12558
F0.25
s(g5000
I42
g5001
Vinsert
p12559
I42
VSimpleName: asyncSpanConsumer
p12560
tp12561
F0.25
s(g5053
I42
g5054
Vinsert
p12562
I42
VSimpleName: maxDuration
p12563
tp12564
I1
s(g4848
I42
g4849
Vinsert
p12565
I59
VVariableDeclarationFragment
p12566
tp12567
I1
s(g669
I42
g670
Vinsert
p12568
I42
VSimpleName: asList
p12569
tp12570
I3
s(g2637
I42
g2638
Vinsert
p12571
I42
VSimpleName: http
p12572
tp12573
F2.25
s(g141
I42
g142
Vinsert
p12574
I43
VSimpleType: String
p12575
tp12576
I1
s(g6878
I42
g6879
Vinsert
p12577
I42
VSimpleName: limit
p12578
tp12579
I2
s(g4430
I42
g4431
Vinsert
p12580
I32
VMethodInvocation
p12581
tp12582
I4
s(g6723
I42
g6724
Vinsert
p12583
I42
VSimpleName: readByteArray
p12584
tp12585
F0.25
s(g3388
I42
g3389
Vinsert
p12586
I16
VConditionalExpression
p12587
tp12588
I2
s(g5112
I42
g5113
Vinsert
p12589
I42
VSimpleName: assertThat
p12590
tp12591
I1
s(g517
I42
g518
Vinsert
p12592
I74
VParameterizedType: Iterator<Span>
p12593
tp12594
I2
s(g5112
I42
g5113
Vinsert
p12595
I45
VStringLiteral: "service:error"
p12596
tp12597
F0.25
s(g7331
I42
g7332
Vinsert
p12598
I43
VSimpleType: List
p12599
tp12600
F0.25
s(g3199
I42
g3200
Vinsert
p12601
I42
VSimpleName: Override
p12602
tp12603
F0.25
s(g1372
I42
g1373
Vinsert
p12604
I39
VPrimitiveType: void
p12605
tp12606
F0.25
s(g2727
I42
g2728
Vinsert
p12607
I42
VSimpleName: PublicMetrics
p12608
tp12609
I1
s(g866
I42
g867
Vinsert
p12610
I42
VSimpleName: Override
p12611
tp12612
F5.0
s(g5386
I42
g5387
Vinsert
p12613
I44
VSingleVariableDeclaration
p12614
tp12615
I1
s(g2464
I42
g2465
Vinsert
p12616
I43
VSimpleType: String
p12617
tp12618
I1
s(g96
I42
g97
Vinsert
p12619
I39
VPrimitiveType: void
p12620
tp12621
F0.25
s(g395
I42
g396
Vinsert
p12622
I74
VParameterizedType: JsonAdapter<Boolean>
p12623
tp12624
I1
s(g5045
I42
g5046
Vinsert
p12625
I27
VInfixExpression: ^
p12626
tp12627
I1
s(g7428
I42
g7429
Vinsert
p12628
I42
VSimpleName: QueryRequest
p12629
tp12630
I1
s(g5995
I42
g5996
Vinsert
p12631
I40
VQualifiedName: span.service
p12632
tp12633
I1
s(g6355
I42
g6356
Vinsert
p12634
I21
VExpressionStatement
p12635
tp12636
F0.25
s(g5785
I42
g5786
Vinsert
p12637
I42
VSimpleName: COMMA_JOINER
p12638
tp12639
I1
s(g6979
I42
g6980
Vinsert
p12640
I42
VSimpleName: withLower64bitsTraceId
p12641
tp12642
I1
s(g7654
I42
g7655
Vinsert
p12643
I21
VExpressionStatement
p12644
tp12645
F22.25
s(g10178
I42
g10179
Vinsert
p12646
I42
VSimpleName: convert
p12647
tp12648
F0.25
s(g2174
I42
g2175
Vinsert
p12649
I32
VMethodInvocation
p12650
tp12651
I8
s(g3552
I42
g3553
Vinsert
p12652
I32
VMethodInvocation
p12653
tp12654
I1
s(g3194
I42
g3195
Vinsert
p12655
I45
VStringLiteral: "  ]\u005cn"
p12656
tp12657
I2
s(g2647
I42
g2648
Vinsert
p12658
I32
VMethodInvocation
p12659
tp12660
I4
s(g3946
I42
g3947
Vinsert
p12661
I42
VSimpleName: TRACE_ID_HIGH
p12662
tp12663
I1
s(g4717
I42
g4718
Vinsert
p12664
I42
VSimpleName: Annotation
p12665
tp12666
I12
s(g6997
I42
g6998
Vinsert
p12667
I42
VSimpleName: setThisData
p12668
tp12669
I1
s(Vinsert
p12670
I42
VSimpleName: name
p12671
Vinsert
p12672
I42
VSimpleName: Span
p12673
tp12674
I7
s(Vinsert
p12675
I42
VSimpleName: create
p12676
Vinsert
p12677
I43
VSimpleType: Span.Builder
p12678
tp12679
I1
s(g7342
I42
g7343
Vinsert
p12680
I52
VThisExpression
p12681
tp12682
F3.75
s(g2920
I42
g2921
Vinsert
p12683
I42
VSimpleName: DriverException
p12684
tp12685
F0.25
s(g1332
I42
g1333
Vinsert
p12686
I42
VSimpleName: result
p12687
tp12688
I1
s(g41
I42
g42
Vinsert
p12689
I42
VSimpleName: Futures
p12690
tp12691
I1
s(Vinsert
p12692
I42
VSimpleName: accept
p12693
Vinsert
p12694
I74
VParameterizedType: CallbackCaptor<>
p12695
tp12696
I2
s(Vinsert
p12697
I42
VSimpleName: toBuilder
p12698
Vinsert
p12699
I42
VSimpleName: spans
p12700
tp12701
I1
s(g729
I42
g730
Vinsert
p12702
I42
VSimpleName: msg
p12703
tp12704
F0.25
s(g41
I42
g42
Vinsert
p12705
I43
VSimpleType: IOException
p12706
tp12707
I1
s(g4631
I42
g4632
Vinsert
p12708
I42
VSimpleName: readClientSpan_json_span2
p12709
tp12710
F0.25
s(g1207
I42
g1208
Vinsert
p12711
I42
VSimpleName: span
p12712
tp12713
I1
s(g4488
I42
g4489
Vinsert
p12714
I45
VStringLiteral: "request"
p12715
tp12716
I1
s(g694
I42
g695
Vinsert
p12717
I42
VSimpleName: BinaryAnnotation
p12718
tp12719
I1
s(g4856
I42
g4857
Vinsert
p12720
I31
VMethodDeclaration
p12721
tp12722
F0.25
s(g3933
I42
g3934
Vinsert
p12723
I39
VPrimitiveType: void
p12724
tp12725
F0.25
s(g2098
I42
g2099
Vinsert
p12726
I42
VSimpleName: onResponse
p12727
tp12728
F0.5
s(g11052
I42
g11053
Vinsert
p12729
I42
VSimpleName: dropsLargerThanMax
p12730
tp12731
F0.25
s(g1405
I42
g1406
Vinsert
p12732
I42
VSimpleName: scribe
p12733
tp12734
I1
s(g4446
I42
g4447
Vinsert
p12735
I21
VExpressionStatement
p12736
tp12737
I2
s(g6979
I42
g6980
Vinsert
p12738
I45
VStringLiteral: "{\u005cn"
p12739
tp12740
I1
s(g811
I42
g812
Vinsert
p12741
I32
VMethodInvocation
p12742
tp12743
I6
s(g3222
I42
g3223
Vinsert
p12744
I42
VSimpleName: current
p12745
tp12746
I2
s(g5391
I42
g5392
Vinsert
p12747
I74
VParameterizedType: TableField<Record,Integer>
p12748
tp12749
I1
s(g10123
I42
g10124
Vinsert
p12750
I44
VSingleVariableDeclaration
p12751
tp12752
F0.75
s(g11368
I42
g11369
Vinsert
p12753
I45
VStringLiteral: "kafka1"
p12754
tp12755
I1
s(g11368
I42
g11369
Vinsert
p12756
I45
VStringLiteral: "producer"
p12757
tp12758
I1
s(g4967
I42
g4968
Vinsert
p12759
I42
VSimpleName: iso8601
p12760
tp12761
I1
s(g2896
I42
g2897
Vinsert
p12762
I32
VMethodInvocation
p12763
tp12764
I2
s(g11026
I42
g11027
Vinsert
p12765
I42
VSimpleName: InMemoryStorage
p12766
tp12767
F0.25
s(g224
I42
g225
Vinsert
p12768
I21
VExpressionStatement
p12769
tp12770
I1
s(g329
I42
g330
Vinsert
p12771
I39
VPrimitiveType: void
p12772
tp12773
F0.5
s(g5558
I42
g5559
Vinsert
p12774
I37
VPostfixExpression: ++
p12775
tp12776
I1
s(g436
I42
g437
Vinsert
p12777
I42
VSimpleName: annotationQuery
p12778
tp12779
I1
s(g1836
I42
g1837
Vinsert
p12780
I45
VStringLiteral: "\u005c\u005cn\u005c\u005cr\u005c\u005cf"
p12781
tp12782
I1
s(g1484
I42
g1485
Vinsert
p12783
I42
VSimpleName: List
p12784
tp12785
F2.25
s(g6084
I42
g6085
Vinsert
p12786
I43
VSimpleType: Thread
p12787
tp12788
I2
s(g3110
I42
g3111
Vinsert
p12789
I40
VQualifiedName: TestObjects.TRACE
p12790
tp12791
I1
s(g2398
I42
g2399
Vinsert
p12792
I44
VSingleVariableDeclaration
p12793
tp12794
F0.25
s(g6342
I42
g6343
Vinsert
p12795
I42
VSimpleName: keyspace
p12796
tp12797
F0.25
s(Vinsert
p12798
I42
VSimpleName: addAnnotation
p12799
Vinsert
p12800
I42
VSimpleName: Span
p12801
tp12802
I2
s(g4557
I42
g4558
Vinsert
p12803
I43
VSimpleType: Date
p12804
tp12805
I1
s(g2127
I42
g2128
Vinsert
p12806
I60
VVariableDeclarationStatement
p12807
tp12808
I1
s(g1260
I42
g1261
Vinsert
p12809
I42
VSimpleName: ipv4
p12810
tp12811
I1
s(g7423
I42
g7424
Vinsert
p12812
I74
VParameterizedType: Callback<Void>
p12813
tp12814
F0.25
s(g8392
I42
g8393
Vinsert
p12815
I32
VMethodInvocation
p12816
tp12817
F40.75
s(g11325
I42
g11326
Vinsert
p12818
I31
VMethodDeclaration
p12819
tp12820
F0.25
s(g96
I42
g97
Vinsert
p12821
I83
VModifier: public
p12822
tp12823
F0.25
s(g9771
I42
g9772
Vinsert
p12824
I14
VClassInstanceCreation
p12825
tp12826
F10.75
s(g6145
I42
g6146
Vinsert
p12827
I74
VParameterizedType: ArrayList<>
p12828
tp12829
I1
s(g4712
I42
g4713
Vinsert
p12830
I42
VSimpleName: handleRequest
p12831
tp12832
F0.25
s(g4456
I42
g4457
Vinsert
p12833
I42
VSimpleName: input
p12834
tp12835
F4.5
s(g7613
I42
g7614
Vinsert
p12836
I42
VSimpleName: indexToServiceSpans
p12837
tp12838
I1
s(g395
I42
g396
Vinsert
p12839
I43
VSimpleType: Long
p12840
tp12841
I1
s(g3654
I42
g3655
Vinsert
p12842
I13
VCharacterLiteral: '['
p12843
tp12844
I1
s(g219
I42
g220
Vinsert
p12845
I42
VSimpleName: BufferedSource
p12846
tp12847
F0.25
s(g8458
I42
g8459
Vinsert
p12848
I42
VSimpleName: two
p12849
tp12850
I1
s(g9036
I42
g9037
Vinsert
p12851
I27
VInfixExpression: ||
p12852
tp12853
I1
s(g3804
I42
g3805
Vinsert
p12854
I42
VSimpleName: builder
p12855
tp12856
I2
s(g8330
I42
g8331
Vinsert
p12857
I43
VSimpleType: IllegalArgumentException
p12858
tp12859
I1
s(g5462
I42
g5463
Vinsert
p12860
I32
VMethodInvocation
p12861
tp12862
I1
s(g6084
I42
g6085
Vinsert
p12863
I42
VSimpleName: result
p12864
tp12865
I2
s(g5995
I42
g5996
Vinsert
p12866
I42
VSimpleName: isEqualTo
p12867
tp12868
I1
s(g1423
I42
g1424
Vinsert
p12869
I40
VQualifiedName: JsonCodec.DEPENDENCY_LINK_ADAPTER
p12870
tp12871
I1
s(g7096
I42
g7097
Vinsert
p12872
I25
VIfStatement
p12873
tp12874
I1
s(Vinsert
p12875
I42
VSimpleName: nullable
p12876
Vinsert
p12877
I42
VSimpleName: Double
p12878
tp12879
I1
s(g9513
I42
g9514
Vinsert
p12880
I42
VSimpleName: trace
p12881
tp12882
I1
s(Vinsert
p12883
I42
VSimpleName: add
p12884
Vinsert
p12885
I70
VEnhancedForStatement
p12886
tp12887
I5
s(Vinsert
p12888
I42
VSimpleName: onError
p12889
Vinsert
p12890
I43
VSimpleType: Call
p12891
tp12892
F0.25
s(g1876
I42
g1877
Vinsert
p12893
I70
VEnhancedForStatement
p12894
tp12895
I1
s(g613
I42
g614
Vinsert
p12896
I40
VQualifiedName: zipkin.internal.Span2Component
p12897
tp12898
F0.25
s(g954
I42
g955
Vinsert
p12899
I9
VBooleanLiteral: true
p12900
tp12901
I1
s(g3443
I42
g3444
Vinsert
p12902
I42
VSimpleName: url
p12903
tp12904
I1
s(g5528
I42
g5529
Vinsert
p12905
I27
VInfixExpression: ==
p12906
tp12907
I1
s(g10392
I42
g10393
Vinsert
p12908
I11
VCastExpression
p12909
tp12910
I3
s(g9290
I42
g9291
Vinsert
p12911
I42
VSimpleName: partitions
p12912
tp12913
F0.25
s(g6992
I42
g6993
Vinsert
p12914
I42
VSimpleName: SampleRateCalculator
p12915
tp12916
I2
s(g9867
I42
g9868
Vinsert
p12917
I32
VMethodInvocation
p12918
tp12919
I2
s(g2350
I42
g2351
Vinsert
p12920
I42
VSimpleName: trace
p12921
tp12922
I1
s(g567
I42
g568
Vinsert
p12923
I42
VSimpleName: binaryAnnotations
p12924
tp12925
I1
s(g1385
I42
g1386
Vinsert
p12926
I14
VClassInstanceCreation
p12927
tp12928
I4
s(g51
I42
g52
Vinsert
p12929
I42
VSimpleName: JDBCSpanStore
p12930
tp12931
I1
s(g2755
I42
g2756
Vinsert
p12932
I39
VPrimitiveType: void
p12933
tp12934
F0.25
s(g6853
I42
g6854
Vinsert
p12935
I36
VParenthesizedExpression
p12936
tp12937
F0.5
s(g1566
I42
g1567
Vinsert
p12938
I42
VSimpleName: Map
p12939
tp12940
F0.25
s(g5510
I42
g5511
Vinsert
p12941
I49
VSwitchCase
p12942
tp12943
I1
s(g344
I42
g345
Vinsert
p12944
I42
VSimpleName: index
p12945
tp12946
F0.25
s(g5045
I42
g5046
Vinsert
p12947
I40
VQualifiedName: guard1.latch
p12948
tp12949
I1
s(g2880
I42
g2881
Vinsert
p12950
I83
VModifier: final
p12951
tp12952
F0.25
s(g6236
I42
g6237
Vinsert
p12953
I32
VMethodInvocation
p12954
tp12955
I2
s(g4192
I42
g4193
Vinsert
p12956
I42
VSimpleName: result
p12957
tp12958
F0.5
s(g479
I42
g480
Vinsert
p12959
I83
VModifier: protected
p12960
tp12961
F0.25
s(g1085
I42
g1086
Vinsert
p12962
I42
VSimpleName: getPath
p12963
tp12964
F0.25
s(g5286
I42
g5287
Vinsert
p12965
I40
VQualifiedName: s.annotations
p12966
tp12967
I1
s(g3233
I42
g3234
Vinsert
p12968
I43
VSimpleType: Callback
p12969
tp12970
F0.25
s(g3859
I42
g3860
Vinsert
p12971
I43
VSimpleType: TraceIdUDT
p12972
tp12973
F1.25
s(g9881
I42
g9882
Vinsert
p12974
I42
VSimpleName: value
p12975
tp12976
I2
s(g7568
I42
g7569
Vinsert
p12977
I83
VModifier: public
p12978
tp12979
F0.25
s(Vinsert
p12980
I42
VSimpleName: sessionFactory
p12981
Vinsert
p12982
I40
VQualifiedName: zipkin.storage.cassandra3.Cassandra3Storage
p12983
tp12984
F0.25
s(g7197
I42
g7198
Vinsert
p12985
I42
VSimpleName: ExpectedException
p12986
tp12987
F0.25
s(g1260
I42
g1261
Vinsert
p12988
I27
VInfixExpression: ==
p12989
tp12990
I1
s(g1108
I42
g1109
Vinsert
p12991
I43
VSimpleType: Span
p12992
tp12993
I2
s(g1288
I42
g1289
Vinsert
p12994
I59
VVariableDeclarationFragment
p12995
tp12996
I1
s(g7627
I42
g7628
Vinsert
p12997
I42
VSimpleName: AtomicReference
p12998
tp12999
I2
s(g1202
I42
g1203
Vinsert
p13000
I8
VBlock
p13001
tp13002
I2
s(g3160
I42
g3161
Vinsert
p13003
I42
VSimpleName: Void
p13004
tp13005
F0.5
s(g3636
I42
g3637
Vinsert
p13006
I21
VExpressionStatement
p13007
tp13008
I1
s(g8751
I42
g8752
Vinsert
p13009
I44
VSingleVariableDeclaration
p13010
tp13011
F0.25
s(g1987
I42
g1988
Vinsert
p13012
I32
VMethodInvocation
p13013
tp13014
I12
s(g1022
I42
g1023
Vinsert
p13015
I42
VSimpleName: traceIdHigh
p13016
tp13017
I1
s(g1146
I42
g1147
Vinsert
p13018
I42
VSimpleName: udtCodec
p13019
tp13020
I1
s(g5547
I42
g5548
Vinsert
p13021
I42
VSimpleName: delta
p13022
tp13023
I1
s(g319
I42
g320
Vinsert
p13024
I83
VModifier: public
p13025
tp13026
F0.25
s(g8522
I42
g8523
Vinsert
p13027
I42
VSimpleName: consumer
p13028
tp13029
I1
s(g1995
I42
g1996
Vinsert
p13030
I43
VSimpleType: IOException
p13031
tp13032
F0.25
s(g9047
I42
g9048
Vinsert
p13033
I21
VExpressionStatement
p13034
tp13035
I1
s(g587
I42
g588
Vinsert
p13036
I43
VSimpleType: RuntimeException
p13037
tp13038
F2.25
s(g1949
I42
g1950
Vinsert
p13039
I83
VModifier: static
p13040
tp13041
F0.25
s(g7839
I42
g7840
Vinsert
p13042
I32
VMethodInvocation
p13043
tp13044
F11.75
s(g2304
I42
g2305
Vinsert
p13045
I32
VMethodInvocation
p13046
tp13047
I2
s(g5775
I42
g5776
Vinsert
p13048
I27
VInfixExpression: !=
p13049
tp13050
I4
s(g3212
I42
g3213
Vinsert
p13051
I85
VDimension
p13052
tp13053
F0.5
s(g4861
I42
g4862
Vinsert
p13054
I43
VSimpleType: CassandraConfig.Builder
p13055
tp13056
I1
s(g6005
I42
g6006
Vinsert
p13057
I27
VInfixExpression: !=
p13058
tp13059
I2
s(g4639
I42
g4640
Vinsert
p13060
I25
VIfStatement
p13061
tp13062
I1
s(g2005
I42
g2006
Vinsert
p13063
I42
VSimpleName: bytes
p13064
tp13065
I1
s(g7019
I42
g7020
Vinsert
p13066
I42
VSimpleName: dateSeparator
p13067
tp13068
F1.0
s(g846
I42
g847
Vinsert
p13069
I42
VSimpleName: TimestampRange
p13070
tp13071
F0.25
s(g2283
I42
g2284
Vinsert
p13072
I42
VSimpleName: indexReplicas
p13073
tp13074
F0.75
s(g219
I42
g220
Vinsert
p13075
I8
VBlock
p13076
tp13077
I6
s(g1443
I42
g1444
Vinsert
p13078
I42
VSimpleName: TimeoutException
p13079
tp13080
F0.25
s(g1090
I42
g1091
Vinsert
p13081
I42
VSimpleName: query
p13082
tp13083
F1.25
s(g6167
I42
g6168
Vinsert
p13084
I42
VSimpleName: Override
p13085
tp13086
F0.5
s(g826
I42
g827
Vinsert
p13087
I43
VSimpleType: V2StorageComponent
p13088
tp13089
F2.5
s(g1367
I42
g1368
Vinsert
p13090
I42
VSimpleName: Override
p13091
tp13092
F0.25
s(g9791
I42
g9792
Vinsert
p13093
I32
VMethodInvocation
p13094
tp13095
I1
s(g10474
I42
g10475
Vinsert
p13096
I42
VSimpleName: current
p13097
tp13098
I1
s(g156
I42
g157
Vinsert
p13099
I14
VClassInstanceCreation
p13100
tp13101
I8
s(g8978
I42
g8979
Vinsert
p13102
I43
VSimpleType: Closeable
p13103
tp13104
I4
s(g3094
I42
g3095
Vinsert
p13105
I85
VDimension
p13106
tp13107
F0.5
s(g8135
I42
g8136
Vinsert
p13108
I42
VSimpleName: request
p13109
tp13110
I1
s(g4626
I42
g4627
Vinsert
p13111
I42
VSimpleName: build
p13112
tp13113
I1
s(g2174
I42
g2175
Vinsert
p13114
I42
VSimpleName: Object
p13115
tp13116
F0.25
s(g962
I42
g963
Vinsert
p13117
I42
VSimpleName: expectMessage
p13118
tp13119
I1
s(g2383
I42
g2384
Vinsert
p13120
I59
VVariableDeclarationFragment
p13121
tp13122
F0.5
s(g1709
I42
g1710
Vinsert
p13123
I43
VSimpleType: String
p13124
tp13125
I1
s(g274
I42
g275
Vinsert
p13126
I43
VSimpleType: String
p13127
tp13128
F2.25
s(g2436
I42
g2437
Vinsert
p13129
I43
VSimpleType: OptionsBuilder
p13130
tp13131
I1
s(g8375
I42
g8376
Vinsert
p13132
I34
VNumberLiteral: 0L
p13133
tp13134
I1
s(g6387
I42
g6388
Vinsert
p13135
I42
VSimpleName: Collections
p13136
tp13137
F0.25
s(g557
I42
g558
Vinsert
p13138
I42
VSimpleName: http
p13139
tp13140
I1
s(g5949
I42
g5950
Vinsert
p13141
I60
VVariableDeclarationStatement
p13142
tp13143
I1
s(g5547
I42
g5548
Vinsert
p13144
I40
VQualifiedName: TestObjects.TRACE
p13145
tp13146
I1
s(Vinsert
p13147
I42
VSimpleName: tags
p13148
Vinsert
p13149
I42
VSimpleName: String
p13150
tp13151
I1
s(g101
I42
g102
Vinsert
p13152
I33
VNullLiteral
p13153
tp13154
I2
s(g5528
I42
g5529
Vinsert
p13155
I34
VNumberLiteral: 11
p13156
tp13157
I1
s(g5738
I42
g5739
Vinsert
p13158
I36
VParenthesizedExpression
p13159
tp13160
I3
s(g3393
I42
g3394
Vinsert
p13161
I14
VClassInstanceCreation
p13162
tp13163
I2
s(g8652
I42
g8653
Vinsert
p13164
I42
VSimpleName: withEnv
p13165
tp13166
I1
s(Vinsert
p13167
I42
VSimpleName: spans
p13168
Vinsert
p13169
I42
VSimpleName: assertThat
p13170
tp13171
I2
s(g734
I42
g735
Vinsert
p13172
I41
VReturnStatement
p13173
tp13174
I1
s(g2475
I42
g2476
Vinsert
p13175
I42
VSimpleName: storageType
p13176
tp13177
I1
s(g6867
I42
g6868
Vinsert
p13178
I41
VReturnStatement
p13179
tp13180
I1
s(g7366
I42
g7367
Vinsert
p13181
I42
VSimpleName: midnight
p13182
tp13183
I1
s(g16
I42
g17
Vinsert
p13184
I34
VNumberLiteral: 3L
p13185
tp13186
I1
s(g26
I42
g27
Vinsert
p13187
I42
VSimpleName: serviceToTraceIds
p13188
tp13189
I1
s(g2920
I42
g2921
Vinsert
p13190
I42
VSimpleName: ConsistencyLevel
p13191
tp13192
F0.25
s(g641
I42
g642
Vinsert
p13193
I42
VSimpleName: Set
p13194
tp13195
I1
s(g6471
I42
g6472
Vinsert
p13196
I74
VParameterizedType: ImmutableSet.Builder<ListenableFuture<?>>
p13197
tp13198
I1
s(g5435
I42
g5436
Vinsert
p13199
I60
VVariableDeclarationStatement
p13200
tp13201
I1
s(g1556
I42
g1557
Vinsert
p13202
I43
VSimpleType: TableField
p13203
tp13204
I3
s(Vinsert
p13205
I42
VSimpleName: getEnvironment
p13206
Vinsert
p13207
I42
VSimpleName: kafkaZookeeper
p13208
tp13209
I1
s(g1584
I42
g1585
Vinsert
p13210
I33
VNullLiteral
p13211
tp13212
I2
s(g2848
I42
g2849
Vinsert
p13213
I14
VClassInstanceCreation
p13214
tp13215
I1
s(g7134
I42
g7135
Vinsert
p13216
I39
VPrimitiveType: void
p13217
tp13218
F0.25
s(g2771
I42
g2772
Vinsert
p13219
I42
VSimpleName: List
p13220
tp13221
F0.25
s(g4835
I42
g4836
Vinsert
p13222
I34
VNumberLiteral: 30_000
p13223
tp13224
I1
s(g36
I42
g37
Vinsert
p13225
I45
VStringLiteral: "Origin"
p13226
tp13227
I1
s(g3176
I42
g3177
Vinsert
p13228
I21
VExpressionStatement
p13229
tp13230
I3
s(g36
I42
g37
Vinsert
p13231
I45
VStringLiteral: "Access-Control-Request-Headers"
p13232
tp13233
I1
s(g11429
I42
g11430
Vinsert
p13234
I43
VSimpleType: List
p13235
tp13236
F0.5
s(g279
I42
g280
Vinsert
p13237
I66
VTextElement: Returns the Elasticsearch version of the connected cluster. Internal use only 
p13238
tp13239
F0.25
s(g1308
I42
g1309
Vinsert
p13240
I8
VBlock
p13241
tp13242
F2.5
s(g6454
I42
g6455
Vinsert
p13243
I42
VSimpleName: timestamp
p13244
tp13245
I1
s(g136
I42
g137
Vinsert
p13246
I42
VSimpleName: TRACE_DESCENDING
p13247
tp13248
I1
s(g5616
I42
g5617
Vinsert
p13249
I42
VSimpleName: withParent
p13250
tp13251
I1
s(g6889
I42
g6890
Vinsert
p13252
I42
VSimpleName: linkMap
p13253
tp13254
I1
s(g1881
I42
g1882
Vinsert
p13255
I40
VQualifiedName: span.binaryAnnotations
p13256
tp13257
I3
s(Vinsert
p13258
I42
VSimpleName: next
p13259
Vinsert
p13260
I9
VBooleanLiteral: true
p13261
tp13262
I1
s(g171
I42
g172
Vinsert
p13263
I39
VPrimitiveType: void
p13264
tp13265
F0.25
s(g6005
I42
g6006
Vinsert
p13266
I42
VSimpleName: password
p13267
tp13268
I1
s(g1657
I42
g1658
Vinsert
p13269
I57
VTypeLiteral
p13270
tp13271
F0.25
s(g5158
I42
g5159
Vinsert
p13272
I42
VSimpleName: domain
p13273
tp13274
I2
s(g4972
I42
g4973
Vinsert
p13275
I42
VSimpleName: String
p13276
tp13277
I1
s(g2127
I42
g2128
Vinsert
p13278
I8
VBlock
p13279
tp13280
I1
s(g1620
I42
g1621
Vinsert
p13281
I45
VStringLiteral: "getTraces without serviceName requires Cassandra 2.2 or later"
p13282
tp13283
F0.25
s(g3649
I42
g3650
Vinsert
p13284
I7
VAssignment: =
p13285
tp13286
F6.75
s(g866
I42
g867
Vinsert
p13287
I42
VSimpleName: storage
p13288
tp13289
F18.25
s(g8765
I42
g8766
Vinsert
p13290
I42
VSimpleName: span1
p13291
tp13292
I1
s(g1723
I42
g1724
Vinsert
p13293
I44
VSingleVariableDeclaration
p13294
tp13295
F0.5
s(g2936
I42
g2937
Vinsert
p13296
I42
VSimpleName: ByteBuffer
p13297
tp13298
I2
s(g9019
I42
g9020
Vinsert
p13299
I43
VSimpleType: String
p13300
tp13301
I1
s(g5915
I42
g5916
Vinsert
p13302
I21
VExpressionStatement
p13303
tp13304
I1
s(g1265
I42
g1266
Vinsert
p13305
I83
VModifier: final
p13306
tp13307
F5.5
s(Vinsert
p13308
I42
VSimpleName: writeUtf8
p13309
Vinsert
p13310
I42
VSimpleName: canonicalRequest
p13311
tp13312
F0.25
s(g9817
I42
g9818
Vinsert
p13313
I42
VSimpleName: size
p13314
tp13315
I1
s(g4430
I42
g4431
Vinsert
p13316
I42
VSimpleName: Object
p13317
tp13318
F1.25
s(g2865
I42
g2866
Vinsert
p13319
I27
VInfixExpression: ==
p13320
tp13321
I2
s(g181
I42
g182
Vinsert
p13322
I32
VMethodInvocation
p13323
tp13324
F69.25
s(g770
I42
g771
Vinsert
p13325
I42
VSimpleName: event
p13326
tp13327
F1.25
s(g5558
I42
g5559
Vinsert
p13328
I25
VIfStatement
p13329
tp13330
I2
s(g2283
I42
g2284
Vinsert
p13331
I21
VExpressionStatement
p13332
tp13333
F0.25
s(g600
I42
g601
Vinsert
p13334
I40
VQualifiedName: aTable.TRACE_ID
p13335
tp13336
I1
s(g641
I42
g642
Vinsert
p13337
I42
VSimpleName: ResponseBody
p13338
tp13339
F0.25
s(g2704
I42
g2705
Vinsert
p13340
I8
VBlock
p13341
tp13342
I1
s(g1192
I42
g1193
Vinsert
p13343
I41
VReturnStatement
p13344
tp13345
I1
s(g1400
I42
g1401
Vinsert
p13346
I43
VSimpleType: NativeClient.Builder
p13347
tp13348
I2
s(g1278
I42
g1279
Vinsert
p13349
I45
VStringLiteral: "serviceName"
p13350
tp13351
I1
s(g229
I42
g230
Vinsert
p13352
I74
VParameterizedType: List<DependencyLink>
p13353
tp13354
I1
s(g954
I42
g955
Vinsert
p13355
I45
VStringLiteral: "No key at "
p13356
tp13357
I1
s(g3520
I42
g3521
Vinsert
p13358
I42
VSimpleName: newBuilder
p13359
tp13360
I1
s(g6371
I42
g6372
Vinsert
p13361
I31
VMethodDeclaration
p13362
tp13363
F0.75
s(g2991
I42
g2992
Vinsert
p13364
I42
VSimpleName: es
p13365
tp13366
I2
s(g3788
I42
g3789
Vinsert
p13367
I43
VSimpleType: IOException
p13368
tp13369
F0.25
s(g8693
I42
g8694
Vinsert
p13370
I14
VClassInstanceCreation
p13371
tp13372
I1
s(g5725
I42
g5726
Vinsert
p13373
I40
VQualifiedName: a.key
p13374
tp13375
I1
s(g914
I42
g915
Vinsert
p13376
I34
VNumberLiteral: 3
p13377
tp13378
F0.5
s(g4631
I42
g4632
Vinsert
p13379
I42
VSimpleName: Benchmark
p13380
tp13381
F0.5
s(g9615
I42
g9616
Vinsert
p13382
I41
VReturnStatement
p13383
tp13384
F0.25
s(g6342
I42
g6343
Vinsert
p13385
I83
VModifier: protected
p13386
tp13387
F0.25
s(g10487
I42
g10488
Vinsert
p13388
I42
VSimpleName: response
p13389
tp13390
I1
s(g3388
I42
g3389
Vinsert
p13391
I42
VSimpleName: selectTraceIdsByServiceSpanName
p13392
tp13393
I2
s(g2237
I42
g2238
Vinsert
p13394
I9
VBooleanLiteral: false
p13395
tp13396
I1
s(g537
I42
g538
Vinsert
p13397
I42
VSimpleName: KafkaCollector
p13398
tp13399
I1
s(g7654
I42
g7655
Vinsert
p13400
I78
VMarkerAnnotation
p13401
tp13402
F1.75
s(g426
I42
g427
Vinsert
p13403
I43
VSimpleType: Span
p13404
tp13405
F4.5
s(g8190
I42
g8191
Vinsert
p13406
I42
VSimpleName: remoteChild
p13407
tp13408
I1
s(g1911
I42
g1912
Vinsert
p13409
I13
VCharacterLiteral: '\u005cr'
p13410
tp13411
I1
s(g2909
I42
g2910
Vinsert
p13412
I42
VSimpleName: span1
p13413
tp13414
I1
s(g12883
I42
g12884
Vinsert
p13415
I74
VParameterizedType: Map<String,String>
p13416
tp13417
I1
s(g846
I42
g847
Vinsert
p13418
I42
VSimpleName: traceIndexFetchSize
p13419
tp13420
F0.25
s(g2145
I42
g2146
Vinsert
p13421
I31
VMethodDeclaration
p13422
tp13423
F0.25
s(g7086
I42
g7087
Vinsert
p13424
I42
VSimpleName: container
p13425
tp13426
I1
s(g2750
I42
g2751
Vinsert
p13427
I43
VSimpleType: SpanConsumer
p13428
tp13429
F0.25
s(Vinsert
p13430
I42
VSimpleName: clear
p13431
Vinsert
p13432
I43
VSimpleType: JDBCTestGraph
p13433
tp13434
F0.5
s(g96
I42
g97
Vinsert
p13435
I44
VSingleVariableDeclaration
p13436
tp13437
F0.25
s(g3176
I42
g3177
Vinsert
p13438
I42
VSimpleName: id
p13439
tp13440
I1
s(g3702
I42
g3703
Vinsert
p13441
I43
VSimpleType: MojoExecutionException
p13442
tp13443
F0.25
s(Vinsert
p13444
I42
VSimpleName: build
p13445
Vinsert
p13446
I43
VSimpleType: Collector
p13447
tp13448
I1
s(g339
I42
g340
Vinsert
p13449
I43
VSimpleType: Throwable
p13450
tp13451
F0.25
s(g5221
I42
g5222
Vinsert
p13452
I43
VSimpleType: String
p13453
tp13454
F1.25
s(g1709
I42
g1710
Vinsert
p13455
I42
VSimpleName: toBuilder
p13456
tp13457
I1
s(g7019
I42
g7020
Vinsert
p13458
I59
VVariableDeclarationFragment
p13459
tp13460
F0.25
s(Vinsert
p13461
I42
VSimpleName: create
p13462
Vinsert
p13463
I42
VSimpleName: Pair
p13464
tp13465
I3
s(g3422
I42
g3423
Vinsert
p13466
I42
VSimpleName: DependencyLinkSpan
p13467
tp13468
I2
s(g6658
I42
g6659
Vinsert
p13469
I21
VExpressionStatement
p13470
tp13471
I1
s(g461
I42
g462
Vinsert
p13472
I41
VReturnStatement
p13473
tp13474
I1
s(g1283
I42
g1284
Vinsert
p13475
I42
VSimpleName: ex
p13476
tp13477
I8
s(g3094
I42
g3095
Vinsert
p13478
I74
VParameterizedType: List<DependencyLink>
p13479
tp13480
F0.25
s(g841
I42
g842
Vinsert
p13481
I32
VMethodInvocation
p13482
tp13483
I5
s(g3155
I42
g3156
Vinsert
p13484
I8
VBlock
p13485
tp13486
I7
s(g4280
I42
g4281
Vinsert
p13487
I42
VSimpleName: Span
p13488
tp13489
I1
s(g1146
I42
g1147
Vinsert
p13490
I42
VSimpleName: keyspace
p13491
tp13492
I1
s(g3636
I42
g3637
Vinsert
p13493
I27
VInfixExpression: +
p13494
tp13495
I1
s(g126
I42
g127
Vinsert
p13496
I42
VSimpleName: Exception
p13497
tp13498
F0.75
s(g3454
I42
g3455
Vinsert
p13499
I42
VSimpleName: Set
p13500
tp13501
I1
s(g3833
I42
g3834
Vinsert
p13502
I42
VSimpleName: response
p13503
tp13504
I1
s(g10487
I42
g10488
Vinsert
p13505
I43
VSimpleType: Request.Builder
p13506
tp13507
I1
s(g3268
I42
g3269
Vinsert
p13508
I32
VMethodInvocation
p13509
tp13510
I6
s(g4576
I42
g4577
Vinsert
p13511
I42
VSimpleName: result
p13512
tp13513
I1
s(g5034
I42
g5035
Vinsert
p13514
I42
VSimpleName: Span
p13515
tp13516
I1
s(g1926
I42
g1927
Vinsert
p13517
I42
VSimpleName: gzipSink
p13518
tp13519
I2
s(g1327
I42
g1328
Vinsert
p13520
I43
VSimpleType: LocalSpanCollector
p13521
tp13522
F0.25
s(g8392
I42
g8393
Vinsert
p13523
I42
VSimpleName: newBuilder
p13524
tp13525
I1
s(Vinsert
p13526
I42
VSimpleName: close
p13527
Vinsert
p13528
I42
VSimpleName: Cassandra3Storage
p13529
tp13530
I1
s(g8601
I42
g8602
Vinsert
p13531
I42
VSimpleName: create
p13532
tp13533
I1
s(g254
I42
g255
Vinsert
p13534
I42
VSimpleName: Aggregation
p13535
tp13536
I1
s(g7951
I42
g7952
Vinsert
p13537
I43
VSimpleType: ArrayList
p13538
tp13539
I1
s(g324
I42
g325
Vinsert
p13540
I42
VSimpleName: value
p13541
tp13542
I2
s(g7502
I42
g7503
Vinsert
p13543
I42
VSimpleName: isSampled
p13544
tp13545
F0.25
s(g2614
I42
g2615
Vinsert
p13546
I39
VPrimitiveType: byte
p13547
tp13548
F0.5
s(g1443
I42
g1444
Vinsert
p13549
I43
VSimpleType: TimeoutException
p13550
tp13551
F0.25
s(g3022
I42
g3023
Vinsert
p13552
I42
VSimpleName: cluster
p13553
tp13554
F0.25
s(g5785
I42
g5786
Vinsert
p13555
I38
VPrefixExpression: !
p13556
tp13557
I1
s(g2365
I42
g2366
Vinsert
p13558
I42
VSimpleName: ListenableFuture
p13559
tp13560
F0.25
s(g7197
I42
g7198
Vinsert
p13561
I83
VModifier: public
p13562
tp13563
F3.25
s(g1177
I42
g1178
Vinsert
p13564
I42
VSimpleName: MergeById
p13565
tp13566
I1
s(Vinsert
p13567
I42
VSimpleName: valueOf
p13568
Vinsert
p13569
I8
VBlock
p13570
tp13571
I2
s(g4461
I42
g4462
Vinsert
p13572
I42
VSimpleName: Memoized
p13573
tp13574
F0.25
s(g1443
I42
g1444
Vinsert
p13575
I41
VReturnStatement
p13576
tp13577
I1
s(g1202
I42
g1203
Vinsert
p13578
I42
VSimpleName: QueryBuilder
p13579
tp13580
I1
s(Vinsert
p13581
I42
VSimpleName: newLinkedHashSet
p13582
Vinsert
p13583
I42
VSimpleName: Long
p13584
tp13585
I1
s(g7091
I42
g7092
Vinsert
p13586
I40
VQualifiedName: span.annotations
p13587
tp13588
I1
s(g4435
I42
g4436
Vinsert
p13589
I40
VQualifiedName: TraceKeys.HTTP_PATH
p13590
tp13591
I1
s(g7277
I42
g7278
Vinsert
p13592
I42
VSimpleName: escapingOverhead
p13593
tp13594
I1
s(g4399
I42
g4400
Vinsert
p13595
I42
VSimpleName: spanConsumer
p13596
tp13597
I1
s(g1128
I42
g1129
Vinsert
p13598
I34
VNumberLiteral: 2
p13599
tp13600
F1.25
s(Vinsert
p13601
I42
VSimpleName: create
p13602
Vinsert
p13603
I42
VSimpleName: T
p13604
tp13605
F1.25
s(Vinsert
p13606
I42
VSimpleName: get
p13607
Vinsert
p13608
I42
VSimpleName: S
p13609
tp13610
F0.25
s(g136
I42
g137
Vinsert
p13611
I42
VSimpleName: List
p13612
tp13613
I1
s(g12692
I42
g12693
Vinsert
p13614
I42
VSimpleName: CallbackCaptor
p13615
tp13616
I4
s(g5349
I42
g5350
Vinsert
p13617
I42
VSimpleName: reader
p13618
tp13619
F0.25
s(g2373
I42
g2374
Vinsert
p13620
I40
VQualifiedName: ms.endpoint
p13621
tp13622
I2
s(g2810
I42
g2811
Vinsert
p13623
I42
VSimpleName: CountDownLatch
p13624
tp13625
I2
s(g4103
I42
g4104
Vinsert
p13626
I34
VNumberLiteral: 202
p13627
tp13628
F0.25
s(g5264
I42
g5265
Vinsert
p13629
I42
VSimpleName: spans
p13630
tp13631
F0.5
s(g1141
I42
g1142
Vinsert
p13632
I74
VParameterizedType: Stream<Span>
p13633
tp13634
I1
s(g1303
I42
g1304
Vinsert
p13635
I21
VExpressionStatement
p13636
tp13637
I1
s(g2062
I42
g2063
Vinsert
p13638
I42
VSimpleName: input
p13639
tp13640
I1
s(g1433
I42
g1434
Vinsert
p13641
I42
VSimpleName: span
p13642
tp13643
I1
s(g116
I42
g117
Vinsert
p13644
I42
VSimpleName: encoded
p13645
tp13646
I1
s(g344
I42
g345
Vinsert
p13647
I42
VSimpleName: endIndex
p13648
tp13649
I1
s(g6853
I42
g6854
Vinsert
p13650
I27
VInfixExpression: *
p13651
tp13652
F0.5
s(g4415
I42
g4416
Vinsert
p13653
I59
VVariableDeclarationFragment
p13654
tp13655
I1
s(g5884
I42
g5885
Vinsert
p13656
I45
VStringLiteral: "    \u005c"lucene_version\u005c" : \u005c"7.0.0\u005c"\u005cn"
p13657
tp13658
I1
s(g2647
I42
g2648
Vinsert
p13659
I45
VStringLiteral: "metrics"
p13660
tp13661
I2
s(g3009
I42
g3010
Vinsert
p13662
I42
VSimpleName: Override
p13663
tp13664
F0.25
s(g1795
I42
g1796
Vinsert
p13665
I42
VSimpleName: gaugeService
p13666
tp13667
F0.5
s(g2589
I42
g2590
Vinsert
p13668
I42
VSimpleName: parent
p13669
tp13670
I2
s(g7582
I42
g7583
Vinsert
p13671
I42
VSimpleName: assertThat
p13672
tp13673
I3
s(g4531
I42
g4532
Vinsert
p13674
I40
VQualifiedName: Constants.CLIENT_SEND
p13675
tp13676
I1
s(g6203
I42
g6204
Vinsert
p13677
I42
VSimpleName: String
p13678
tp13679
F1.5
s(g11634
I42
g11635
Vinsert
p13680
I42
VSimpleName: dsl
p13681
tp13682
I1
s(g4330
I42
g4331
Vinsert
p13683
I83
VModifier: static
p13684
tp13685
I1
s(Vinsert
p13686
I42
VSimpleName: get
p13687
Vinsert
p13688
I43
VSimpleType: SimpleDateFormat
p13689
tp13690
F0.5
s(g1113
I42
g1114
Vinsert
p13691
I45
VStringLiteral: "foo.example.com"
p13692
tp13693
I1
s(g3987
I42
g3988
Vinsert
p13694
I42
VSimpleName: flatMap
p13695
tp13696
I1
s(g2179
I42
g2180
Vinsert
p13697
I21
VExpressionStatement
p13698
tp13699
F0.25
s(g2949
I42
g2950
Vinsert
p13700
I59
VVariableDeclarationFragment
p13701
tp13702
I2
s(g10732
I42
g10733
Vinsert
p13703
I59
VVariableDeclarationFragment
p13704
tp13705
I1
s(g1709
I42
g1710
Vinsert
p13706
I40
VQualifiedName: SpanBytesEncoder.JSON_V1
p13707
tp13708
I1
s(g2896
I42
g2897
Vinsert
p13709
I27
VInfixExpression: ||
p13710
tp13711
I1
s(g631
I42
g632
Vinsert
p13712
I42
VSimpleName: getTraces
p13713
tp13714
F0.25
s(g8652
I42
g8653
Vinsert
p13715
I42
VSimpleName: singleTypeIndexingEnabled
p13716
tp13717
F0.75
s(g3353
I42
g3354
Vinsert
p13718
I42
VSimpleName: UTF_8
p13719
tp13720
F0.25
s(g796
I42
g797
Vinsert
p13721
I32
VMethodInvocation
p13722
tp13723
I1
s(g2492
I42
g2493
Vinsert
p13724
I27
VInfixExpression: <=
p13725
tp13726
I2
s(g66
I42
g67
Vinsert
p13727
I42
VSimpleName: response
p13728
tp13729
F0.25
s(g11736
I42
g11737
Vinsert
p13730
I42
VSimpleName: table
p13731
tp13732
I1
s(g1831
I42
g1832
Vinsert
p13733
I42
VSimpleName: create
p13734
tp13735
I1
s(Vinsert
p13736
I42
VSimpleName: builder
p13737
Vinsert
p13738
I42
VSimpleName: ElasticsearchStorage
p13739
tp13740
I9
s(g919
I42
g920
Vinsert
p13741
I42
VSimpleName: trace
p13742
tp13743
I6
s(g3628
I42
g3629
Vinsert
p13744
I31
VMethodDeclaration
p13745
tp13746
F0.25
s(g11463
I42
g11464
Vinsert
p13747
I42
VSimpleName: SearchResultConverter
p13748
tp13749
I1
s(g9047
I42
g9048
Vinsert
p13750
I43
VSimpleType: Dependencies.Builder
p13751
tp13752
I1
s(g1405
I42
g1406
Vinsert
p13753
I42
VSimpleName: expectCause
p13754
tp13755
I1
s(g2539
I42
g2540
Vinsert
p13756
I8
VBlock
p13757
tp13758
I1
s(g2781
I42
g2782
Vinsert
p13759
I27
VInfixExpression: !=
p13760
tp13761
I3
s(g4044
I42
g4045
Vinsert
p13762
I45
VStringLiteral: "http://"
p13763
tp13764
I1
s(g352
I42
g353
Vinsert
p13765
I40
VQualifiedName: Span.Builder
p13766
tp13767
I1
s(g9019
I42
g9020
Vinsert
p13768
I43
VSimpleType: QueryRequest
p13769
tp13770
I1
s(g2459
I42
g2460
Vinsert
p13771
I78
VMarkerAnnotation
p13772
tp13773
F0.25
s(g10732
I42
g10733
Vinsert
p13774
I42
VSimpleName: CorsConfiguration
p13775
tp13776
I2
s(g522
I42
g523
Vinsert
p13777
I42
VSimpleName: sampler
p13778
tp13779
F0.25
s(Vinsert
p13780
I42
VSimpleName: addBinaryAnnotation
p13781
Vinsert
p13782
I40
VQualifiedName: Constants.SERVER_ADDR
p13783
tp13784
I1
s(g4407
I42
g4408
Vinsert
p13785
I42
VSimpleName: readBytes
p13786
tp13787
F0.25
s(g12670
I42
g12671
Vinsert
p13788
I42
VSimpleName: parentId
p13789
tp13790
I1
s(g6454
I42
g6455
Vinsert
p13791
I45
VStringLiteral: "value"
p13792
tp13793
I1
s(g2810
I42
g2811
Vinsert
p13794
I14
VClassInstanceCreation
p13795
tp13796
I1
s(g6454
I42
g6455
Vinsert
p13797
I7
VAssignment: =
p13798
tp13799
I4
s(Vinsert
p13800
I42
VSimpleName: writeSpans
p13801
Vinsert
p13802
I43
VSimpleType: Callback
p13803
tp13804
F0.25
s(g1159
I42
g1160
Vinsert
p13805
I42
VSimpleName: collectorMetrics
p13806
tp13807
I1
s(g1293
I42
g1294
Vinsert
p13808
I42
VSimpleName: InterruptedException
p13809
tp13810
F0.25
s(g2283
I42
g2284
Vinsert
p13811
I39
VPrimitiveType: int
p13812
tp13813
F0.25
s(g5823
I42
g5824
Vinsert
p13814
I43
VSimpleType: DefaultConfiguration
p13815
tp13816
I1
s(g2260
I42
g2261
Vinsert
p13817
I32
VMethodInvocation
p13818
tp13819
I1
s(g11744
I42
g11745
Vinsert
p13820
I8
VBlock
p13821
tp13822
I13
s(g1489
I42
g1490
Vinsert
p13823
I83
VModifier: public
p13824
tp13825
F0.25
s(g3987
I42
g3988
Vinsert
p13826
I59
VVariableDeclarationFragment
p13827
tp13828
I1
s(g1367
I42
g1368
Vinsert
p13829
I42
VSimpleName: shouldNotFilter
p13830
tp13831
F0.25
s(g13736
I42
g13737
Vinsert
p13832
I43
VSimpleType: ElasticsearchStorage.Builder
p13833
tp13834
F2.75
s(g5897
I42
g5898
Vinsert
p13835
I43
VSimpleType: IndexNameFormatter
p13836
tp13837
F0.25
s(g5286
I42
g5287
Vinsert
p13838
I42
VSimpleName: i
p13839
tp13840
I1
s(g527
I42
g528
Vinsert
p13841
I42
VSimpleName: SERVER_RECV
p13842
tp13843
I1
s(g1428
I42
g1429
Vinsert
p13844
I42
VSimpleName: post
p13845
tp13846
I1
s(g3412
I42
g3413
Vinsert
p13847
I21
VExpressionStatement
p13848
tp13849
I2
s(g1846
I42
g1847
Vinsert
p13850
I14
VClassInstanceCreation
p13851
tp13852
I1
s(g6172
I42
g6173
Vinsert
p13853
I43
VSimpleType: Exception
p13854
tp13855
F0.75
s(g2896
I42
g2897
Vinsert
p13856
I43
VSimpleType: Void
p13857
tp13858
F0.25
s(g1816
I42
g1817
Vinsert
p13859
I42
VSimpleName: get
p13860
tp13861
F0.25
s(g757
I42
g758
Vinsert
p13862
I42
VSimpleName: decoder
p13863
tp13864
F1.25
s(g10920
I42
g10921
Vinsert
p13865
I42
VSimpleName: RequestBody
p13866
tp13867
F0.25
s(g3833
I42
g3834
Vinsert
p13868
I42
VSimpleName: appendBasicAuthHeaderParameters
p13869
tp13870
I1
s(g5831
I42
g5832
Vinsert
p13871
I23
VFieldDeclaration
p13872
tp13873
F0.25
s(g3533
I42
g3534
Vinsert
p13874
I34
VNumberLiteral: 3
p13875
tp13876
I3
s(Vinsert
p13877
I42
VSimpleName: forIndicesAndType
p13878
Vinsert
p13879
I42
VSimpleName: callback
p13880
tp13881
F0.25
s(g2378
I42
g2379
Vinsert
p13882
I42
VSimpleName: left
p13883
tp13884
F0.5
s(g8892
I42
g8893
Vinsert
p13885
I66
VTextElement: . 
p13886
tp13887
F0.25
s(g6827
I42
g6828
Vinsert
p13888
I42
VSimpleName: span
p13889
tp13890
I2
s(g8258
I42
g8259
Vinsert
p13891
I42
VSimpleName: String
p13892
tp13893
I1
s(g826
I42
g827
Vinsert
p13894
I41
VReturnStatement
p13895
tp13896
I2
s(g3725
I42
g3726
Vinsert
p13897
I52
VThisExpression
p13898
tp13899
I1
s(g1561
I42
g1562
Vinsert
p13900
I42
VSimpleName: BufferUnderflowException
p13901
tp13902
F0.25
s(g13606
I42
g13607
Vinsert
p13903
I42
VSimpleName: lazyGuavaSpanStore
p13904
tp13905
I1
s(g2441
I42
g2442
Vinsert
p13906
I59
VVariableDeclarationFragment
p13907
tp13908
I1
s(g7635
I42
g7636
Vinsert
p13909
I25
VIfStatement
p13910
tp13911
I1
s(g1040
I42
g1041
Vinsert
p13912
I43
VSimpleType: JsonReaderAdapter
p13913
tp13914
F0.25
s(g1242
I42
g1243
Vinsert
p13915
I59
VVariableDeclarationFragment
p13916
tp13917
F5.25
s(g4029
I42
g4030
Vinsert
p13918
I42
VSimpleName: Override
p13919
tp13920
F0.25
s(g1831
I42
g1832
Vinsert
p13921
I42
VSimpleName: zipkin
p13922
tp13923
I1
s(Vinsert
p13924
I42
VSimpleName: builder
p13925
Vinsert
p13926
I53
VThrowStatement
p13927
tp13928
I3
s(g3525
I42
g3526
Vinsert
p13929
I42
VSimpleName: QueryBuilder
p13930
tp13931
I1
s(g5510
I42
g5511
Vinsert
p13932
I42
VSimpleName: a
p13933
tp13934
I1
s(g6079
I42
g6080
Vinsert
p13935
I43
VSimpleType: Span
p13936
tp13937
F1.5
s(g8693
I42
g8694
Vinsert
p13938
I41
VReturnStatement
p13939
tp13940
I4
s(g466
I42
g467
Vinsert
p13941
I42
VSimpleName: hosts
p13942
tp13943
F0.25
s(g3380
I42
g3381
Vinsert
p13944
I41
VReturnStatement
p13945
tp13946
I2
s(g12798
I42
g12799
Vinsert
p13947
I34
VNumberLiteral: 20L
p13948
tp13949
I1
s(g395
I42
g396
Vinsert
p13950
I43
VSimpleType: Boolean
p13951
tp13952
I1
s(g1207
I42
g1208
Vinsert
p13953
I42
VSimpleName: t
p13954
tp13955
I2
s(g380
I42
g381
Vinsert
p13956
I78
VMarkerAnnotation
p13957
tp13958
F0.25
s(g3340
I42
g3341
Vinsert
p13959
I43
VSimpleType: Request
p13960
tp13961
I1
s(g372
I42
g373
Vinsert
p13962
I42
VSimpleName: healthName
p13963
tp13964
I1
s(g6094
I42
g6095
Vinsert
p13965
I42
VSimpleName: client
p13966
tp13967
I1
s(g3607
I42
g3608
Vinsert
p13968
I39
VPrimitiveType: byte
p13969
tp13970
I2
s(g8294
I42
g8295
Vinsert
p13971
I42
VSimpleName: messageWhenMissingValue
p13972
tp13973
F0.25
s(g10835
I42
g10836
Vinsert
p13974
I34
VNumberLiteral: 1
p13975
tp13976
F5.25
s(g3688
I42
g3689
Vinsert
p13977
I42
VSimpleName: List
p13978
tp13979
I1
s(g1113
I42
g1114
Vinsert
p13980
I42
VSimpleName: post
p13981
tp13982
I2
s(g5311
I42
g5312
Vinsert
p13983
I42
VSimpleName: sanitizedName
p13984
tp13985
I1
s(g12014
I42
g12015
Vinsert
p13986
I34
VNumberLiteral: 0
p13987
tp13988
I2
s(g2909
I42
g2910
Vinsert
p13989
I42
VSimpleName: toBuilder
p13990
tp13991
I1
s(g806
I42
g807
Vinsert
p13992
I43
VSimpleType: UnsupportedOperationException
p13993
tp13994
F0.25
s(g3974
I42
g3975
Vinsert
p13995
I45
VStringLiteral: "  },\u005cn"
p13996
tp13997
I3
s(g10482
I42
g10483
Vinsert
p13998
I43
VSimpleType: AnnotationConfigApplicationContext
p13999
tp14000
I14
s(g2959
I42
g2960
Vinsert
p14001
I42
VSimpleName: String
p14002
tp14003
I3
s(Vinsert
p14004
I42
VSimpleName: add
p14005
Vinsert
p14006
I42
VSimpleName: Override
p14007
tp14008
F0.5
s(g7674
I42
g7675
Vinsert
p14009
I42
VSimpleName: logger
p14010
tp14011
F0.75
s(g13877
I42
g13878
Vinsert
p14012
I42
VSimpleName: request
p14013
tp14014
I1
s(g3064
I42
g3065
Vinsert
p14015
I42
VSimpleName: build
p14016
tp14017
I1
s(g1316
I42
g1317
Vinsert
p14018
I39
VPrimitiveType: void
p14019
tp14020
F0.75
s(g4972
I42
g4973
Vinsert
p14021
I43
VSimpleType: Moshi.Builder
p14022
tp14023
I2
s(g385
I42
g386
Vinsert
p14024
I43
VSimpleType: IOException
p14025
tp14026
F0.25
s(g10954
I42
g10955
Vinsert
p14027
I42
VSimpleName: response
p14028
tp14029
F1.25
s(g6776
I42
g6777
Vinsert
p14030
I42
VSimpleName: Override
p14031
tp14032
F0.75
s(g11683
I42
g11684
Vinsert
p14033
I42
VSimpleName: callFactory
p14034
tp14035
F0.25
s(g4095
I42
g4096
Vinsert
p14036
I42
VSimpleName: batch
p14037
tp14038
I2
s(g699
I42
g700
Vinsert
p14039
I42
VSimpleName: delegate
p14040
tp14041
I1
s(g4733
I42
g4734
Vinsert
p14042
I43
VSimpleType: Callback
p14043
tp14044
F0.75
s(g5462
I42
g5463
Vinsert
p14045
I42
VSimpleName: settings
p14046
tp14047
F0.25
s(g7850
I42
g7851
Vinsert
p14048
I42
VSimpleName: CassandraContainer
p14049
tp14050
I2
s(g9290
I42
g9291
Vinsert
p14051
I43
VSimpleType: TopicPartition
p14052
tp14053
F0.25
s(g5000
I42
g5001
Vinsert
p14054
I41
VReturnStatement
p14055
tp14056
F0.5
s(g739
I42
g740
Vinsert
p14057
I42
VSimpleName: parentId
p14058
tp14059
I1
s(g4972
I42
g4973
Vinsert
p14060
I43
VSimpleType: JsonAdapter
p14061
tp14062
I2
s(g3115
I42
g3116
Vinsert
p14063
I42
VSimpleName: response
p14064
tp14065
F1.25
s(g10158
I42
g10159
Vinsert
p14066
I42
VSimpleName: args
p14067
tp14068
F0.25
s(g6827
I42
g6828
Vinsert
p14069
I59
VVariableDeclarationFragment
p14070
tp14071
I5
s(g861
I42
g862
Vinsert
p14072
I42
VSimpleName: APPLICATION_JSON_VALUE
p14073
tp14074
I2
s(g1265
I42
g1266
Vinsert
p14075
I42
VSimpleName: storageBuilder
p14076
tp14077
F0.25
s(g2127
I42
g2128
Vinsert
p14078
I21
VExpressionStatement
p14079
tp14080
I1
s(g8611
I42
g8612
Vinsert
p14081
I42
VSimpleName: perform
p14082
tp14083
I2
s(g6363
I42
g6364
Vinsert
p14084
I42
VSimpleName: callback
p14085
tp14086
I1
s(g7763
I42
g7764
Vinsert
p14087
I42
VSimpleName: hosts
p14088
tp14089
F0.25
s(g532
I42
g533
Vinsert
p14090
I27
VInfixExpression: ==
p14091
tp14092
I1
s(g8693
I42
g8694
Vinsert
p14093
I34
VNumberLiteral: 16
p14094
tp14095
I1
s(g9889
I42
g9890
Vinsert
p14096
I42
VSimpleName: assertThat
p14097
tp14098
I1
s(g4152
I42
g4153
Vinsert
p14099
I74
VParameterizedType: ToSeqCallback<String>
p14100
tp14101
I1
s(g2255
I42
g2256
Vinsert
p14102
I14
VClassInstanceCreation
p14103
tp14104
I1
s(g1428
I42
g1429
Vinsert
p14105
I42
VSimpleName: url
p14106
tp14107
I1
s(g11825
I42
g11826
Vinsert
p14108
I34
VNumberLiteral: 0xff
p14109
tp14110
I1
s(g13444
I42
g13445
Vinsert
p14111
I42
VSimpleName: metrics
p14112
tp14113
I1
s(g4701
I42
g4702
Vinsert
p14114
I42
VSimpleName: maybeFailure
p14115
tp14116
I3
s(g4399
I42
g4400
Vinsert
p14117
I42
VSimpleName: InternalForTests
p14118
tp14119
I1
s(g8402
I42
g8403
Vinsert
p14120
I33
VNullLiteral
p14121
tp14122
I3
s(g4192
I42
g4193
Vinsert
p14123
I42
VSimpleName: immediateFuture
p14124
tp14125
F0.25
s(g8842
I42
g8843
Vinsert
p14126
I21
VExpressionStatement
p14127
tp14128
I1
s(g1633
I42
g1634
Vinsert
p14129
I42
VSimpleName: currentTimeMillis
p14130
tp14131
F0.25
s(g5491
I42
g5492
Vinsert
p14132
I42
VSimpleName: DEPENDENCY
p14133
tp14134
I1
s(g10123
I42
g10124
Vinsert
p14135
I39
VPrimitiveType: byte
p14136
tp14137
F0.25
s(g1762
I42
g1763
Vinsert
p14138
I42
VSimpleName: takeRequest
p14139
tp14140
F0.25
s(g1474
I42
g1475
Vinsert
p14141
I27
VInfixExpression: ==
p14142
tp14143
I1
s(g7277
I42
g7278
Vinsert
p14144
I24
VForStatement
p14145
tp14146
I1
s(g5515
I42
g5516
Vinsert
p14147
I45
VStringLiteral: ", \u005c"parentId\u005c": "
p14148
tp14149
I1
s(g1002
I42
g1003
Vinsert
p14150
I42
VSimpleName: isPresent
p14151
tp14152
I1
s(g12980
I42
g12981
Vinsert
p14153
I40
VQualifiedName: Cassandra3Storage.Builder
p14154
tp14155
I1
s(g6723
I42
g6724
Vinsert
p14156
I42
VSimpleName: ipv6
p14157
tp14158
F0.25
s(g7646
I42
g7647
Vinsert
p14159
I42
VSimpleName: newSampler
p14160
tp14161
F0.5
s(g5629
I42
g5630
Vinsert
p14162
I42
VSimpleName: parts
p14163
tp14164
I2
s(g11312
I42
g11313
Vinsert
p14165
I43
VSimpleType: zipkin.internal.v2.Endpoint
p14166
tp14167
I1
s(g6699
I42
g6700
Vinsert
p14168
I42
VSimpleName: client
p14169
tp14170
I1
s(g14004
I42
g14005
Vinsert
p14171
I42
VSimpleName: onSuccess
p14172
tp14173
F0.5
s(g7086
I42
g7087
Vinsert
p14174
I8
VBlock
p14175
tp14176
I1
s(g1921
I42
g1922
Vinsert
p14177
I30
VLabeledStatement
p14178
tp14179
I1
s(g8688
I42
g8689
Vinsert
p14180
I42
VSimpleName: HttpSpanStore
p14181
tp14182
I2
s(g4754
I42
g4755
Vinsert
p14183
I45
VStringLiteral: "\u005c\u005cs"
p14184
tp14185
I1
s(g4248
I42
g4249
Vinsert
p14186
I42
VSimpleName: start
p14187
tp14188
F0.25
s(g992
I42
g993
Vinsert
p14189
I42
VSimpleName: status
p14190
tp14191
F0.25
s(g11825
I42
g11826
Vinsert
p14192
I27
VInfixExpression: &
p14193
tp14194
I1
s(Vinsert
p14195
I42
VSimpleName: create
p14196
Vinsert
p14197
I42
VSimpleName: compute
p14198
tp14199
F0.25
s(g608
I42
g609
Vinsert
p14200
I7
VAssignment: =
p14201
tp14202
F0.25
s(g1187
I42
g1188
Vinsert
p14203
I83
VModifier: public
p14204
tp14205
F0.25
s(g7654
I42
g7655
Vinsert
p14206
I42
VSimpleName: clear
p14207
tp14208
F3.25
s(g6723
I42
g6724
Vinsert
p14209
I42
VSimpleName: IPV6
p14210
tp14211
I1
s(g8258
I42
g8259
Vinsert
p14212
I42
VSimpleName: CallbackCaptor
p14213
tp14214
I2
s(g2699
I42
g2700
Vinsert
p14215
I42
VSimpleName: newCall
p14216
tp14217
I1
s(g3793
I42
g3794
Vinsert
p14218
I43
VSimpleType: ArrayList
p14219
tp14220
I5
s(g861
I42
g862
Vinsert
p14221
I42
VSimpleName: codecFactory
p14222
tp14223
I2
s(g914
I42
g915
Vinsert
p14224
I27
VInfixExpression: >
p14225
tp14226
I1
s(g2260
I42
g2261
Vinsert
p14227
I83
VModifier: final
p14228
tp14229
F0.25
s(g7654
I42
g7655
Vinsert
p14230
I42
VSimpleName: Before
p14231
tp14232
F0.25
s(g6867
I42
g6868
Vinsert
p14233
I42
VSimpleName: spans
p14234
tp14235
I1
s(g76
I42
g77
Vinsert
p14236
I27
VInfixExpression: >
p14237
tp14238
I1
s(g2247
I42
g2248
Vinsert
p14239
I42
VSimpleName: verify
p14240
tp14241
I2
s(g4285
I42
g4286
Vinsert
p14242
I42
VSimpleName: Futures
p14243
tp14244
F0.25
s(g3115
I42
g3116
Vinsert
p14245
I39
VPrimitiveType: void
p14246
tp14247
F0.25
s(g3772
I42
g3773
Vinsert
p14248
I42
VSimpleName: KafkaCollector
p14249
tp14250
F0.25
s(g385
I42
g386
Vinsert
p14251
I59
VVariableDeclarationFragment
p14252
tp14253
I2
s(g851
I42
g852
Vinsert
p14254
I42
VSimpleName: cluster
p14255
tp14256
F0.25
s(g2441
I42
g2442
Vinsert
p14257
I42
VSimpleName: indices
p14258
tp14259
F0.25
s(g1728
I42
g1729
Vinsert
p14260
I43
VSimpleType: V2InMemoryStorage
p14261
tp14262
F1.25
s(g679
I42
g680
Vinsert
p14263
I27
VInfixExpression: &&
p14264
tp14265
I1
s(g826
I42
g827
Vinsert
p14266
I42
VSimpleName: Bean
p14267
tp14268
F0.5
s(Vinsert
p14269
I42
VSimpleName: get
p14270
Vinsert
p14271
I3
VArrayCreation
p14272
tp14273
I2
s(g669
I42
g670
Vinsert
p14274
I42
VSimpleName: spans
p14275
tp14276
I10
s(g684
I42
g685
Vinsert
p14277
I8
VBlock
p14278
tp14279
I2
s(g2179
I42
g2180
Vinsert
p14280
I7
VAssignment: =
p14281
tp14282
F0.25
s(g6541
I42
g6542
Vinsert
p14283
I66
VTextElement: The integer arg of port should be a whole number 
p14284
tp14285
F0.25
s(Vinsert
p14286
I42
VSimpleName: readSpans
p14287
Vinsert
p14288
I54
VTryStatement
p14289
tp14290
I1
s(g3900
I42
g3901
Vinsert
p14291
I42
VSimpleName: client
p14292
tp14293
I1
s(g2441
I42
g2442
Vinsert
p14294
I42
VSimpleName: findDependencies
p14295
tp14296
F0.25
s(g3510
I42
g3511
Vinsert
p14297
I40
VQualifiedName: b.value
p14298
tp14299
I1
s(g6635
I42
g6636
Vinsert
p14300
I32
VMethodInvocation
p14301
tp14302
I19
s(g1415
I42
g1416
Vinsert
p14303
I42
VSimpleName: links
p14304
tp14305
I2
s(g4701
I42
g4702
Vinsert
p14306
I41
VReturnStatement
p14307
tp14308
I2
s(g7091
I42
g7092
Vinsert
p14309
I42
VSimpleName: assertThat
p14310
tp14311
I1
s(g5629
I42
g5630
Vinsert
p14312
I34
VNumberLiteral: 1
p14313
tp14314
I2
s(g1377
I42
g1378
Vinsert
p14315
I34
VNumberLiteral: 0
p14316
tp14317
I2
s(g5533
I42
g5534
Vinsert
p14318
I42
VSimpleName: es
p14319
tp14320
I1
s(g141
I42
g142
Vinsert
p14321
I42
VSimpleName: String
p14322
tp14323
I1
s(g6371
I42
g6372
Vinsert
p14324
I42
VSimpleName: execute
p14325
tp14326
F0.75
s(g367
I42
g368
Vinsert
p14327
I42
VSimpleName: Long
p14328
tp14329
F1.25
s(g116
I42
g117
Vinsert
p14330
I42
VSimpleName: currentSpan
p14331
tp14332
I2
s(g2273
I42
g2274
Vinsert
p14333
I83
VModifier: protected
p14334
tp14335
F0.25
s(g1757
I42
g1758
Vinsert
p14336
I42
VSimpleName: measurements
p14337
tp14338
I1
s(g3250
I42
g3251
Vinsert
p14339
I42
VSimpleName: e
p14340
tp14341
I3
s(g4639
I42
g4640
Vinsert
p14342
I43
VSimpleType: Set
p14343
tp14344
F0.25
s(g5053
I42
g5054
Vinsert
p14345
I42
VSimpleName: QueryRequest
p14346
tp14347
F0.25
s(g299
I42
g300
Vinsert
p14348
I42
VSimpleName: get
p14349
tp14350
I1
s(g3525
I42
g3526
Vinsert
p14351
I40
VQualifiedName: Schema.TABLE_DEPENDENCIES
p14352
tp14353
I1
s(g10123
I42
g10124
Vinsert
p14354
I42
VSimpleName: buffer
p14355
tp14356
I1
s(g1688
I42
g1689
Vinsert
p14357
I42
VSimpleName: create
p14358
tp14359
I1
s(g9513
I42
g9514
Vinsert
p14360
I34
VNumberLiteral: 0
p14361
tp14362
I1
s(g2054
I42
g2055
Vinsert
p14363
I13
VCharacterLiteral: '"'
p14364
tp14365
I1
s(g13780
I42
g13781
Vinsert
p14366
I34
VNumberLiteral: 1444438900941000L
p14367
tp14368
I1
s(g5915
I42
g5916
Vinsert
p14369
I43
VSimpleType: ZipkinUiProperties
p14370
tp14371
I1
s(g3740
I42
g3741
Vinsert
p14372
I34
VNumberLiteral: 1000L
p14373
tp14374
I1
s(g9497
I42
g9498
Vinsert
p14375
I42
VSimpleName: SpanStoreTest
p14376
tp14377
F0.5
s(g3417
I42
g3418
Vinsert
p14378
I83
VModifier: public
p14379
tp14380
F0.25
s(g1974
I42
g1975
Vinsert
p14381
I42
VSimpleName: dateAsString
p14382
tp14383
I1
s(g4967
I42
g4968
Vinsert
p14384
I42
VSimpleName: parse
p14385
tp14386
I1
s(g5938
I42
g5939
Vinsert
p14387
I42
VSimpleName: bytes
p14388
tp14389
F0.5
s(g4430
I42
g4431
Vinsert
p14390
I60
VVariableDeclarationStatement
p14391
tp14392
I2
s(g6124
I42
g6125
Vinsert
p14393
I42
VSimpleName: writeIpV6
p14394
tp14395
I2
s(g1584
I42
g1585
Vinsert
p14396
I65
VTagElement
p14397
tp14398
F0.25
s(g4523
I42
g4524
Vinsert
p14399
I44
VSingleVariableDeclaration
p14400
tp14401
F0.25
s(g436
I42
g437
Vinsert
p14402
I42
VSimpleName: CassandraUtil
p14403
tp14404
I3
s(g6387
I42
g6388
Vinsert
p14405
I41
VReturnStatement
p14406
tp14407
F0.25
s(g11052
I42
g11053
Vinsert
p14408
I39
VPrimitiveType: void
p14409
tp14410
F0.25
s(g791
I42
g792
Vinsert
p14411
I65
VTagElement
p14412
tp14413
F0.25
s(g7151
I42
g7152
Vinsert
p14414
I42
VSimpleName: emptyList
p14415
tp14416
I1
s(g2604
I42
g2605
Vinsert
p14417
I42
VSimpleName: builder
p14418
tp14419
I1
s(g61
I42
g62
Vinsert
p14420
I42
VSimpleName: Client
p14421
tp14422
F0.25
s(g12883
I42
g12884
Vinsert
p14423
I42
VSimpleName: Map
p14424
tp14425
I1
s(g5842
I42
g5843
Vinsert
p14426
I42
VSimpleName: trace
p14427
tp14428
I1
s(g6482
I42
g6483
Vinsert
p14429
I24
VForStatement
p14430
tp14431
I2
s(g4264
I42
g4265
Vinsert
p14432
I32
VMethodInvocation
p14433
tp14434
I1
s(g13877
I42
g13878
Vinsert
p14435
I43
VSimpleType: SearchRequest
p14436
tp14437
I1
s(g12883
I42
g12884
Vinsert
p14438
I42
VSimpleName: nestedBoolQueries
p14439
tp14440
I1
s(g3160
I42
g3161
Vinsert
p14441
I43
VSimpleType: ListenableFuture
p14442
tp14443
F0.25
s(g2810
I42
g2811
Vinsert
p14444
I60
VVariableDeclarationStatement
p14445
tp14446
I1
s(g1278
I42
g1279
Vinsert
p14447
I42
VSimpleName: toLowerCase
p14448
tp14449
I1
s(g7951
I42
g7952
Vinsert
p14450
I74
VParameterizedType: ArrayList<>
p14451
tp14452
I1
s(g466
I42
g467
Vinsert
p14453
I39
VPrimitiveType: boolean
p14454
tp14455
F0.25
s(g395
I42
g396
Vinsert
p14456
I42
VSimpleName: NULLABLE_BOOLEAN_ADAPTER
p14457
tp14458
I1
s(g2604
I42
g2605
Vinsert
p14459
I42
VSimpleName: getTopic
p14460
tp14461
I1
s(g6000
I42
g6001
Vinsert
p14462
I42
VSimpleName: ResultActions
p14463
tp14464
F0.75
s(g3072
I42
g3073
Vinsert
p14465
I8
VBlock
p14466
tp14467
I1
s(g1410
I42
g1411
Vinsert
p14468
I60
VVariableDeclarationStatement
p14469
tp14470
I1
s(g5790
I42
g5791
Vinsert
p14471
I43
VSimpleType: Span
p14472
tp14473
I9
s(g6145
I42
g6146
Vinsert
p14474
I14
VClassInstanceCreation
p14475
tp14476
I1
s(g646
I42
g647
Vinsert
p14477
I42
VSimpleName: traceIdHex
p14478
tp14479
I1
s(g2584
I42
g2585
Vinsert
p14480
I42
VSimpleName: i
p14481
tp14482
I5
s(g6522
I42
g6523
Vinsert
p14483
I42
VSimpleName: bytes
p14484
tp14485
F3.0
s(g10551
I42
g10552
Vinsert
p14486
I42
VSimpleName: Span
p14487
tp14488
F0.25
s(g3258
I42
g3259
Vinsert
p14489
I34
VNumberLiteral: 1444438900948000L
p14490
tp14491
I1
s(Vinsert
p14492
I42
VSimpleName: delegate
p14493
Vinsert
p14494
I43
VSimpleType: ElasticsearchHttpStorage
p14495
tp14496
F1.25
s(g6658
I42
g6659
Vinsert
p14497
I45
VStringLiteral: "bar"
p14498
tp14499
I1
s(g2539
I42
g2540
Vinsert
p14500
I14
VClassInstanceCreation
p14501
tp14502
I1
s(g4498
I42
g4499
Vinsert
p14503
I52
VThisExpression
p14504
tp14505
I1
s(g13147
I42
g13148
Vinsert
p14506
I32
VMethodInvocation
p14507
tp14508
I7
s(g7347
I42
g7348
Vinsert
p14509
I42
VSimpleName: isSetTrace_id_high
p14510
tp14511
I1
s(g3649
I42
g3650
Vinsert
p14512
I42
VSimpleName: srService
p14513
tp14514
F0.25
s(g7159
I42
g7160
Vinsert
p14515
I45
VStringLiteral: "}"
p14516
tp14517
I1
s(g522
I42
g523
Vinsert
p14518
I32
VMethodInvocation
p14519
tp14520
I2
s(g3938
I42
g3939
Vinsert
p14521
I24
VForStatement
p14522
tp14523
I1
s(g2203
I42
g2204
Vinsert
p14524
I42
VSimpleName: maybeGet
p14525
tp14526
F0.25
s(g4451
I42
g4452
Vinsert
p14527
I42
VSimpleName: getConfiguration
p14528
tp14529
F0.25
s(g3150
I42
g3151
Vinsert
p14530
I27
VInfixExpression: ==
p14531
tp14532
I1
s(g6482
I42
g6483
Vinsert
p14533
I42
VSimpleName: Span
p14534
tp14535
I2
s(g5995
I42
g5996
Vinsert
p14536
I42
VSimpleName: caService
p14537
tp14538
I1
s(g636
I42
g637
Vinsert
p14539
I42
VSimpleName: reset
p14540
tp14541
I3
s(g131
I42
g132
Vinsert
p14542
I45
VStringLiteral: "77fcac3d4c5be8d2a037812820c65f28"
p14543
tp14544
I1
s(g1523
I42
g1524
Vinsert
p14545
I42
VSimpleName: result
p14546
tp14547
I1
s(g1704
I42
g1705
Vinsert
p14548
I42
VSimpleName: set
p14549
tp14550
I4
s(g1556
I42
g1557
Vinsert
p14551
I43
VSimpleType: String
p14552
tp14553
I4
s(g3393
I42
g3394
Vinsert
p14554
I42
VSimpleName: base
p14555
tp14556
I1
s(g101
I42
g102
Vinsert
p14557
I43
VSimpleType: ZipkinHttpCollector
p14558
tp14559
F0.25
s(g2875
I42
g2876
Vinsert
p14560
I83
VModifier: final
p14561
tp14562
F0.25
s(g10487
I42
g10488
Vinsert
p14563
I42
VSimpleName: resolve
p14564
tp14565
I1
s(g4157
I42
g4158
Vinsert
p14566
I42
VSimpleName: Dependencies
p14567
tp14568
I2
s(g1474
I42
g1475
Vinsert
p14569
I8
VBlock
p14570
tp14571
I2
s(g1123
I42
g1124
Vinsert
p14572
I83
VModifier: final
p14573
tp14574
I3
s(g10178
I42
g10179
Vinsert
p14575
I45
VStringLiteral: "    \u005c"serviceName\u005c": null,\u005cn"
p14576
tp14577
F0.25
s(g8791
I42
g8792
Vinsert
p14578
I42
VSimpleName: traceIds
p14579
tp14580
I2
s(g2426
I42
g2427
Vinsert
p14581
I43
VSimpleType: String
p14582
tp14583
I2
s(g4157
I42
g4158
Vinsert
p14584
I42
VSimpleName: asList
p14585
tp14586
I1
s(g2972
I42
g2973
Vinsert
p14587
I34
VNumberLiteral: 1
p14588
tp14589
I1
s(g6113
I42
g6114
Vinsert
p14590
I43
VSimpleType: CassandraSpanStore
p14591
tp14592
F1.25
s(g2431
I42
g2432
Vinsert
p14593
I42
VSimpleName: toLinks
p14594
tp14595
F0.25
s(g4011
I42
g4012
Vinsert
p14596
I32
VMethodInvocation
p14597
tp14598
I9
s(g91
I42
g92
Vinsert
p14599
I7
VAssignment: =
p14600
tp14601
F9.75
s(g2732
I42
g2733
Vinsert
p14602
I45
VStringLiteral: "DROP KEYSPACE IF EXISTS "
p14603
tp14604
I1
s(g2085
I42
g2086
Vinsert
p14605
I78
VMarkerAnnotation
p14606
tp14607
F0.25
s(g6236
I42
g6237
Vinsert
p14608
I42
VSimpleName: e
p14609
tp14610
I2
s(g6000
I42
g6001
Vinsert
p14611
I43
VSimpleType: ResultActions
p14612
tp14613
F0.75
s(g1757
I42
g1758
Vinsert
p14614
I27
VInfixExpression: >=
p14615
tp14616
I1
s(g6407
I42
g6408
Vinsert
p14617
I42
VSimpleName: dateAsString
p14618
tp14619
I1
s(g5598
I42
g5599
Vinsert
p14620
I34
VNumberLiteral: 3
p14621
tp14622
I1
s(g367
I42
g368
Vinsert
p14623
I43
VSimpleType: Record1
p14624
tp14625
F1.25
s(g5780
I42
g5781
Vinsert
p14626
I42
VSimpleName: set
p14627
tp14628
I1
s(g4425
I42
g4426
Vinsert
p14629
I59
VVariableDeclarationFragment
p14630
tp14631
I1
s(g2740
I42
g2741
Vinsert
p14632
I43
VSimpleType: T
p14633
tp14634
F0.25
s(Vinsert
p14635
I42
VSimpleName: isSetName
p14636
Vinsert
p14637
I52
VThisExpression
p14638
tp14639
I2
s(g2663
I42
g2664
Vinsert
p14640
I42
VSimpleName: writeAscii_long
p14641
tp14642
F0.25
s(g9502
I42
g9503
Vinsert
p14643
I44
VSingleVariableDeclaration
p14644
tp14645
F0.5
s(g9547
I42
g9548
Vinsert
p14646
I45
VStringLiteral: "localhost"
p14647
tp14648
I1
s(g4967
I42
g4968
Vinsert
p14649
I42
VSimpleName: getTime
p14650
tp14651
I1
s(g1118
I42
g1119
Vinsert
p14652
I42
VSimpleName: writeDependencyLink
p14653
tp14654
I1
s(g3443
I42
g3444
Vinsert
p14655
I43
VSimpleType: Span2JsonDecoder
p14656
tp14657
F0.25
s(g8319
I42
g8320
Vinsert
p14658
I42
VSimpleName: value
p14659
tp14660
I1
s(g9290
I42
g9291
Vinsert
p14661
I83
VModifier: public
p14662
tp14663
F0.25
s(g4913
I42
g4914
Vinsert
p14664
I42
VSimpleName: indexToServiceSpans
p14665
tp14666
I1
s(g841
I42
g842
Vinsert
p14667
I45
VStringLiteral: "ES_DEBUG"
p14668
tp14669
I1
s(g2255
I42
g2256
Vinsert
p14670
I43
VSimpleType: ThreadPoolTaskExecutor
p14671
tp14672
I2
s(g1744
I42
g1745
Vinsert
p14673
I70
VEnhancedForStatement
p14674
tp14675
I1
s(g4605
I42
g4606
Vinsert
p14676
I34
VNumberLiteral: 2L
p14677
tp14678
I1
s(g613
I42
g614
Vinsert
p14679
I40
VQualifiedName: zipkin.internal.AsyncSpan2ConsumerAdapter
p14680
tp14681
F0.25
s(g1856
I42
g1857
Vinsert
p14682
I7
VAssignment: +=
p14683
tp14684
F0.25
s(g724
I42
g725
Vinsert
p14685
I42
VSimpleName: TokenAwarePolicy
p14686
tp14687
I1
s(g1474
I42
g1475
Vinsert
p14688
I41
VReturnStatement
p14689
tp14690
I2
s(g4253
I42
g4254
Vinsert
p14691
I42
VSimpleName: getRawTrace
p14692
tp14693
I1
s(Vinsert
p14694
I42
VSimpleName: create
p14695
Vinsert
p14696
I42
VSimpleName: build
p14697
tp14698
F0.25
s(Vinsert
p14699
I42
VSimpleName: register
p14700
Vinsert
p14701
I45
VStringLiteral: "zipkin.storage.type:cassandra"
p14702
tp14703
I1
s(g131
I42
g132
Vinsert
p14704
I42
VSimpleName: call
p14705
tp14706
I1
s(g2018
I42
g2019
Vinsert
p14707
I42
VSimpleName: response
p14708
tp14709
I2
s(g4220
I42
g4221
Vinsert
p14710
I27
VInfixExpression: !=
p14711
tp14712
I2
s(g10089
I42
g10090
Vinsert
p14713
I42
VSimpleName: guessTimestamp
p14714
tp14715
I1
s(g6723
I42
g6724
Vinsert
p14716
I42
VSimpleName: bytes
p14717
tp14718
F0.25
s(g400
I42
g401
Vinsert
p14719
I42
VSimpleName: Span
p14720
tp14721
I1
s(g12361
I42
g12362
Vinsert
p14722
I14
VClassInstanceCreation
p14723
tp14724
I1
s(g2090
I42
g2091
Vinsert
p14725
I39
VPrimitiveType: void
p14726
tp14727
F0.25
s(g1192
I42
g1193
Vinsert
p14728
I5
VArrayType: byte[]
p14729
tp14730
F0.25
s(g274
I42
g275
Vinsert
p14731
I32
VMethodInvocation
p14732
tp14733
I8
s(g3767
I42
g3768
Vinsert
p14734
I70
VEnhancedForStatement
p14735
tp14736
I2
s(g6315
I42
g6316
Vinsert
p14737
I5
VArrayType: Field<?>[]
p14738
tp14739
F0.5
s(g1484
I42
g1485
Vinsert
p14740
I74
VParameterizedType: List<Span>
p14741
tp14742
I1
s(g6771
I42
g6772
Vinsert
p14743
I40
VQualifiedName: Long.MIN_VALUE
p14744
tp14745
I2
s(g9579
I42
g9580
Vinsert
p14746
I21
VExpressionStatement
p14747
tp14748
I7
s(g1871
I42
g1872
Vinsert
p14749
I33
VNullLiteral
p14750
tp14751
I1
s(g385
I42
g386
Vinsert
p14752
I42
VSimpleName: result
p14753
tp14754
I1
s(Vinsert
p14755
I42
VSimpleName: get
p14756
Vinsert
p14757
I42
VSimpleName: getContainerIpAddress
p14758
tp14759
I1
s(g1665
I42
g1666
Vinsert
p14760
I42
VSimpleName: call
p14761
tp14762
F0.5
s(g2283
I42
g2284
Vinsert
p14763
I39
VPrimitiveType: void
p14764
tp14765
F0.25
s(Vinsert
p14766
I42
VSimpleName: get
p14767
Vinsert
p14768
I42
VSimpleName: last
p14769
tp14770
I1
s(g11223
I42
g11224
Vinsert
p14771
I42
VSimpleName: part2
p14772
tp14773
F0.5
s(g1678
I42
g1679
Vinsert
p14774
I42
VSimpleName: get
p14775
tp14776
F0.25
s(g3485
I42
g3486
Vinsert
p14777
I45
VStringLiteral: "    }"
p14778
tp14779
I1
s(g2810
I42
g2811
Vinsert
p14780
I42
VSimpleName: Executors
p14781
tp14782
I1
s(g7347
I42
g7348
Vinsert
p14783
I32
VMethodInvocation
p14784
tp14785
I2
s(g1113
I42
g1114
Vinsert
p14786
I40
VQualifiedName: HttpHeaders.ORIGIN
p14787
tp14788
I1
s(g1861
I42
g1862
Vinsert
p14789
I54
VTryStatement
p14790
tp14791
I4
s(g86
I42
g87
Vinsert
p14792
I8
VBlock
p14793
tp14794
I1
s(g699
I42
g700
Vinsert
p14795
I42
VSimpleName: addCallback
p14796
tp14797
I1
s(g2579
I42
g2580
Vinsert
p14798
I48
VSuperMethodInvocation
p14799
tp14800
I1
s(g10954
I42
g10955
Vinsert
p14801
I40
VQualifiedName: org.springframework.http.HttpStatus
p14802
tp14803
F0.25
s(g1095
I42
g1096
Vinsert
p14804
I42
VSimpleName: spans
p14805
tp14806
F0.25
s(g8011
I42
g8012
Vinsert
p14807
I42
VSimpleName: sink
p14808
tp14809
I1
s(g1964
I42
g1965
Vinsert
p14810
I42
VSimpleName: Collectors
p14811
tp14812
I1
s(g8751
I42
g8752
Vinsert
p14813
I42
VSimpleName: timeout
p14814
tp14815
F1.25
s(g9047
I42
g9048
Vinsert
p14816
I42
VSimpleName: parentChild
p14817
tp14818
I1
s(g2802
I42
g2803
Vinsert
p14819
I42
VSimpleName: IOException
p14820
tp14821
F0.25
s(g3199
I42
g3200
Vinsert
p14822
I42
VSimpleName: Consumer
p14823
tp14824
F0.25
s(Vinsert
p14825
I42
VSimpleName: content
p14826
Vinsert
p14827
I21
VExpressionStatement
p14828
tp14829
I1
s(g2679
I42
g2680
Vinsert
p14830
I42
VSimpleName: assertThat
p14831
tp14832
I2
s(g10346
I42
g10347
Vinsert
p14833
I45
VStringLiteral: "Cannot gunzip spans\u005cn"
p14834
tp14835
I1
s(g10568
I42
g10569
Vinsert
p14836
I39
VPrimitiveType: byte
p14837
tp14838
I1
s(Vinsert
p14839
I42
VSimpleName: parentId
p14840
Vinsert
p14841
I27
VInfixExpression: !=
p14842
tp14843
I1
s(g2090
I42
g2091
Vinsert
p14844
I32
VMethodInvocation
p14845
tp14846
I5
s(g7533
I42
g7534
Vinsert
p14847
I42
VSimpleName: asyncSpan2Consumer
p14848
tp14849
I1
s(g664
I42
g665
Vinsert
p14850
I42
VSimpleName: serviceName
p14851
tp14852
F0.5
s(g5616
I42
g5617
Vinsert
p14853
I34
VNumberLiteral: 3
p14854
tp14855
I1
s(g12296
I42
g12297
Vinsert
p14856
I42
VSimpleName: g
p14857
tp14858
I1
s(g436
I42
g437
Vinsert
p14859
I59
VVariableDeclarationFragment
p14860
tp14861
I2
s(g86
I42
g87
Vinsert
p14862
I14
VClassInstanceCreation
p14863
tp14864
I1
s(g6984
I42
g6985
Vinsert
p14865
I42
VSimpleName: Override
p14866
tp14867
F0.25
s(g6301
I42
g6302
Vinsert
p14868
I83
VModifier: static
p14869
tp14870
F3.0
s(g13308
I42
g13309
Vinsert
p14871
I60
VVariableDeclarationStatement
p14872
tp14873
I2
s(g1113
I42
g1114
Vinsert
p14874
I45
VStringLiteral: "[]"
p14875
tp14876
I1
s(Vinsert
p14877
I42
VSimpleName: get
p14878
Vinsert
p14879
I40
VQualifiedName: ElasticsearchJestTestGraph.INSTANCE.storage
p14880
tp14881
I1
s(g5505
I42
g5506
Vinsert
p14882
I3
VArrayCreation
p14883
tp14884
I2
s(g7112
I42
g7113
Vinsert
p14885
I42
VSimpleName: expect
p14886
tp14887
I5
s(g6301
I42
g6302
Vinsert
p14888
I43
VSimpleType: ElasticsearchHttpStorage
p14889
tp14890
F1.25
s(g4367
I42
g4368
Vinsert
p14891
I33
VNullLiteral
p14892
tp14893
I1
s(g3720
I42
g3721
Vinsert
p14894
I42
VSimpleName: GET
p14895
tp14896
F0.25
s(g146
I42
g147
Vinsert
p14897
I3
VArrayCreation
p14898
tp14899
I1
s(g9615
I42
g9616
Vinsert
p14900
I42
VSimpleName: conditions
p14901
tp14902
I1
s(g13526
I42
g13527
Vinsert
p14903
I43
VSimpleType: Cassandra3Storage
p14904
tp14905
I1
s(g2525
I42
g2526
Vinsert
p14906
I43
VSimpleType: Collection
p14907
tp14908
F0.25
s(g131
I42
g132
Vinsert
p14909
I59
VVariableDeclarationFragment
p14910
tp14911
I6
s(g2219
I42
g2220
Vinsert
p14912
I59
VVariableDeclarationFragment
p14913
tp14914
I2
s(g3485
I42
g3486
Vinsert
p14915
I45
VStringLiteral: "    {"
p14916
tp14917
I1
s(g1777
I42
g1778
Vinsert
p14918
I42
VSimpleName: ipv4
p14919
tp14920
I3
s(g1811
I42
g1812
Vinsert
p14921
I39
VPrimitiveType: byte
p14922
tp14923
I4
s(g1298
I42
g1299
Vinsert
p14924
I40
VQualifiedName: Span.Builder
p14925
tp14926
I1
s(g3833
I42
g3834
Vinsert
p14927
I42
VSimpleName: requestWithCredentials
p14928
tp14929
I1
s(g8330
I42
g8331
Vinsert
p14930
I57
VTypeLiteral
p14931
tp14932
I1
s(g1846
I42
g1847
Vinsert
p14933
I42
VSimpleName: filters
p14934
tp14935
I2
s(g4835
I42
g4836
Vinsert
p14936
I45
VStringLiteral: "zipkin.storage.type:elasticsearch"
p14937
tp14938
I8
s(Vinsert
p14939
I42
VSimpleName: create
p14940
Vinsert
p14941
I42
VSimpleName: service
p14942
tp14943
I1
s(g8392
I42
g8393
Vinsert
p14944
I45
VStringLiteral: "app"
p14945
tp14946
I1
s(g2823
I42
g2824
Vinsert
p14947
I32
VMethodInvocation
p14948
tp14949
F15.25
s(g997
I42
g998
Vinsert
p14950
I43
VSimpleType: Span
p14951
tp14952
I1
s(g2875
I42
g2876
Vinsert
p14953
I43
VSimpleType: JDBCSpanStore
p14954
tp14955
F0.25
s(g5454
I42
g5455
Vinsert
p14956
I42
VSimpleName: dur
p14957
tp14958
I1
s(g856
I42
g857
Vinsert
p14959
I42
VSimpleName: sb
p14960
tp14961
I1
s(g7582
I42
g7583
Vinsert
p14962
I22
VFieldAccess
p14963
tp14964
I2
s(g3828
I42
g3829
Vinsert
p14965
I42
VSimpleName: InMemoryStrictTraceIdFalseTest
p14966
tp14967
I1
s(g977
I42
g978
Vinsert
p14968
I7
VAssignment: =
p14969
tp14970
I1
s(g3217
I42
g3218
Vinsert
p14971
I21
VExpressionStatement
p14972
tp14973
I2
s(g4187
I42
g4188
Vinsert
p14974
I42
VSimpleName: Iterator
p14975
tp14976
I4
s(g161
I42
g162
Vinsert
p14977
I40
VQualifiedName: span.traceId
p14978
tp14979
I1
s(g2459
I42
g2460
Vinsert
p14980
I39
VPrimitiveType: void
p14981
tp14982
F0.25
s(g8392
I42
g8393
Vinsert
p14983
I42
VSimpleName: serviceName
p14984
tp14985
I2
s(g6889
I42
g6890
Vinsert
p14986
I43
VSimpleType: DependencyLink
p14987
tp14988
I1
s(g1969
I42
g1970
Vinsert
p14989
I42
VSimpleName: body
p14990
tp14991
I1
s(g279
I42
g280
Vinsert
p14992
I8
VBlock
p14993
tp14994
I1
s(g2459
I42
g2460
Vinsert
p14995
I43
VSimpleType: QueryRequest
p14996
tp14997
I1
s(g5259
I42
g5260
Vinsert
p14998
I42
VSimpleName: Override
p14999
tp15000
F0.25
s(g10732
I42
g10733
Vinsert
p15001
I21
VExpressionStatement
p15002
tp15003
I1
s(g2135
I42
g2136
Vinsert
p15004
I83
VModifier: protected
p15005
tp15006
F0.25
s(g6371
I42
g6372
Vinsert
p15007
I21
VExpressionStatement
p15008
tp15009
I3
s(g1683
I42
g1684
Vinsert
p15010
I21
VExpressionStatement
p15011
tp15012
I1
s(g12399
I42
g12400
Vinsert
p15013
I25
VIfStatement
p15014
tp15015
I3
s(g1247
I42
g1248
Vinsert
p15016
I31
VMethodDeclaration
p15017
tp15018
F0.5
s(g2350
I42
g2351
Vinsert
p15019
I42
VSimpleName: putTrace
p15020
tp15021
I1
s(g2843
I42
g2844
Vinsert
p15022
I21
VExpressionStatement
p15023
tp15024
I2
s(g5738
I42
g5739
Vinsert
p15025
I34
VNumberLiteral: 100
p15026
tp15027
I1
s(g6454
I42
g6455
Vinsert
p15028
I42
VSimpleName: reader
p15029
tp15030
F7.25
s(g7217
I42
g7218
Vinsert
p15031
I5
VArrayType: String[]
p15032
tp15033
F1.25
s(g96
I42
g97
Vinsert
p15034
I42
VSimpleName: incrementAcceptedSpans
p15035
tp15036
F0.25
s(g2383
I42
g2384
Vinsert
p15037
I86
VLambdaExpression
p15038
tp15039
F0.25
s(g121
I42
g122
Vinsert
p15040
I60
VVariableDeclarationStatement
p15041
tp15042
I1
s(g3422
I42
g3423
Vinsert
p15043
I34
VNumberLiteral: 0L
p15044
tp15045
I1
s(g6058
I42
g6059
Vinsert
p15046
I42
VSimpleName: annotation
p15047
tp15048
I1
s(g10369
I42
g10370
Vinsert
p15049
I42
VSimpleName: spanEmptyServiceName
p15050
tp15051
I1
s(g6094
I42
g6095
Vinsert
p15052
I42
VSimpleName: List
p15053
tp15054
F0.25
s(g4264
I42
g4265
Vinsert
p15055
I42
VSimpleName: error
p15056
tp15057
I2
s(g1584
I42
g1585
Vinsert
p15058
I42
VSimpleName: rootId
p15059
tp15060
I1
s(g1633
I42
g1634
Vinsert
p15061
I42
VSimpleName: endTs
p15062
tp15063
F2.25
s(g2865
I42
g2866
Vinsert
p15064
I39
VPrimitiveType: boolean
p15065
tp15066
I1
s(g5505
I42
g5506
Vinsert
p15067
I42
VSimpleName: bytes
p15068
tp15069
I2
s(g1303
I42
g1304
Vinsert
p15070
I60
VVariableDeclarationStatement
p15071
tp15072
I1
s(g264
I42
g265
Vinsert
p15073
I8
VBlock
p15074
tp15075
I1
s(g10392
I42
g10393
Vinsert
p15076
I22
VFieldAccess
p15077
tp15078
F8.25
s(g9842
I42
g9843
Vinsert
p15079
I45
VStringLiteral: "foo"
p15080
tp15081
I1
s(g5746
I42
g5747
Vinsert
p15082
I7
VAssignment: =
p15083
tp15084
I2
s(g1811
I42
g1812
Vinsert
p15085
I5
VArrayType: byte[]
p15086
tp15087
I4
s(g1066
I42
g1067
Vinsert
p15088
I39
VPrimitiveType: byte
p15089
tp15090
I5
s(g2818
I42
g2819
Vinsert
p15091
I45
VStringLiteral: "yyyy-MM-dd'T'HH:mm:ssX"
p15092
tp15093
I1
s(g3599
I42
g3600
Vinsert
p15094
I52
VThisExpression
p15095
tp15096
F0.25
s(Vinsert
p15097
I42
VSimpleName: must
p15098
Vinsert
p15099
I25
VIfStatement
p15100
tp15101
I1
s(g1113
I42
g1114
Vinsert
p15102
I42
VSimpleName: status
p15103
tp15104
I2
s(g1164
I42
g1165
Vinsert
p15105
I34
VNumberLiteral: 12345678L
p15106
tp15107
I1
s(g5505
I42
g5506
Vinsert
p15108
I21
VExpressionStatement
p15109
tp15110
I5
s(g2609
I42
g2610
Vinsert
p15111
I45
VStringLiteral: "{\u005c\u005c\u005c"foo\u005c\u005c\u005c":\u005c\u005c\u005c"bar\u005c\u005c\u005c"}"
p15112
tp15113
I1
s(g8842
I42
g8843
Vinsert
p15114
I8
VBlock
p15115
tp15116
I1
s(g1400
I42
g1401
Vinsert
p15117
I14
VClassInstanceCreation
p15118
tp15119
I1
s(g479
I42
g480
Vinsert
p15120
I43
VSimpleType: List
p15121
tp15122
F0.25
s(g962
I42
g963
Vinsert
p15123
I40
VQualifiedName: QueryRequest.Builder
p15124
tp15125
I1
s(g1443
I42
g1444
Vinsert
p15126
I32
VMethodInvocation
p15127
tp15128
I1
s(g8693
I42
g8694
Vinsert
p15129
I40
VQualifiedName: span.traceIdHigh
p15130
tp15131
I2
s(g4728
I42
g4729
Vinsert
p15132
I42
VSimpleName: ENDPOINT_HEADER
p15133
tp15134
F0.5
s(g1594
I42
g1595
Vinsert
p15135
I42
VSimpleName: ZipkinRabbitMQCollectorProperties
p15136
tp15137
I1
s(g5984
I42
g5985
Vinsert
p15138
I59
VVariableDeclarationFragment
p15139
tp15140
I4
s(g8152
I42
g8153
Vinsert
p15141
I31
VMethodDeclaration
p15142
tp15143
F0.25
s(g3788
I42
g3789
Vinsert
p15144
I44
VSingleVariableDeclaration
p15145
tp15146
F0.25
s(g3110
I42
g3111
Vinsert
p15147
I42
VSimpleName: assertThat
p15148
tp15149
I2
s(g6663
I42
g6664
Vinsert
p15150
I60
VVariableDeclarationStatement
p15151
tp15152
I2
s(g329
I42
g330
Vinsert
p15153
I42
VSimpleName: toLowerHex
p15154
tp15155
I1
s(g3398
I42
g3399
Vinsert
p15156
I42
VSimpleName: Callback
p15157
tp15158
F0.25
s(g4835
I42
g4836
Vinsert
p15159
I59
VVariableDeclarationFragment
p15160
tp15161
I2
s(Vinsert
p15162
I42
VSimpleName: refresh
p15163
Vinsert
p15164
I42
VSimpleName: ZipkinElasticsearchOkHttpAutoConfiguration
p15165
tp15166
I2
s(g6804
I42
g6805
Vinsert
p15167
I42
VSimpleName: Override
p15168
tp15169
F0.25
s(g8089
I42
g8090
Vinsert
p15170
I42
VSimpleName: toLowerHex
p15171
tp15172
I1
s(g5984
I42
g5985
Vinsert
p15173
I37
VPostfixExpression: ++
p15174
tp15175
I1
s(g3136
I42
g3137
Vinsert
p15176
I43
VSimpleType: UnknownHostException
p15177
tp15178
F0.25
s(g9019
I42
g9020
Vinsert
p15179
I45
VStringLiteral: "http.method="
p15180
tp15181
I1
s(g5316
I42
g5317
Vinsert
p15182
I21
VExpressionStatement
p15183
tp15184
I6
s(g5910
I42
g5911
Vinsert
p15185
I42
VSimpleName: GzipSource
p15186
tp15187
I2
s(g5629
I42
g5630
Vinsert
p15188
I2
VArrayAccess
p15189
tp15190
I2
s(g2763
I42
g2764
Vinsert
p15191
I78
VMarkerAnnotation
p15192
tp15193
F0.5
s(g6635
I42
g6636
Vinsert
p15194
I27
VInfixExpression: ==
p15195
tp15196
I2
s(g367
I42
g368
Vinsert
p15197
I74
VParameterizedType: Record1<Long>
p15198
tp15199
F1.25
s(g3804
I42
g3805
Vinsert
p15200
I42
VSimpleName: localEndpoint
p15201
tp15202
I2
s(g8751
I42
g8752
Vinsert
p15203
I32
VMethodInvocation
p15204
tp15205
I2
s(g15162
I42
g15163
Vinsert
p15206
I43
VSimpleType: ZipkinElasticsearchHttpStorageAutoConfiguration
p15207
tp15208
I2
s(g3707
I42
g3708
Vinsert
p15209
I60
VVariableDeclarationStatement
p15210
tp15211
I1
s(g6071
I42
g6072
Vinsert
p15212
I42
VSimpleName: lowerHex
p15213
tp15214
I2
s(g3438
I42
g3439
Vinsert
p15215
I14
VClassInstanceCreation
p15216
tp15217
F0.25
s(g1795
I42
g1796
Vinsert
p15218
I42
VSimpleName: ActuateCollectorMetrics
p15219
tp15220
F0.25
s(g6301
I42
g6302
Vinsert
p15221
I43
VSimpleType: ElasticsearchHttpSpanConsumerTest
p15222
tp15223
F0.75
s(g9290
I42
g9291
Vinsert
p15224
I42
VSimpleName: onPartitionsAssigned
p15225
tp15226
F0.25
s(g2085
I42
g2086
Vinsert
p15227
I14
VClassInstanceCreation
p15228
tp15229
I1
s(g12980
I42
g12981
Vinsert
p15230
I43
VSimpleType: Cassandra3Storage.Builder
p15231
tp15232
I1
s(g2949
I42
g2950
Vinsert
p15233
I24
VForStatement
p15234
tp15235
I1
s(g26
I42
g27
Vinsert
p15236
I42
VSimpleName: Set
p15237
tp15238
F0.25
s(g4011
I42
g4012
Vinsert
p15239
I83
VModifier: final
p15240
tp15241
F0.25
s(g41
I42
g42
Vinsert
p15242
I32
VMethodInvocation
p15243
tp15244
I3
s(g2763
I42
g2764
Vinsert
p15245
I42
VSimpleName: JDBCStorage
p15246
tp15247
F0.5
s(g1410
I42
g1411
Vinsert
p15248
I41
VReturnStatement
p15249
tp15250
I1
s(g9771
I42
g9772
Vinsert
p15251
I43
VSimpleType: Node.TreeBuilder
p15252
tp15253
I2
s(g3675
I42
g3676
Vinsert
p15254
I59
VVariableDeclarationFragment
p15255
tp15256
I2
s(g992
I42
g993
Vinsert
p15257
I8
VBlock
p15258
tp15259
I7
s(g13444
I42
g13445
Vinsert
p15260
I57
VTypeLiteral
p15261
tp15262
I3
s(g846
I42
g847
Vinsert
p15263
I44
VSingleVariableDeclaration
p15264
tp15265
F6.25
s(g3388
I42
g3389
Vinsert
p15266
I33
VNullLiteral
p15267
tp15268
I4
s(g229
I42
g230
Vinsert
p15269
I42
VSimpleName: endTs
p15270
tp15271
I3
s(g4407
I42
g4408
Vinsert
p15272
I69
VMethodRefParameter
p15273
tp15274
F0.25
s(g4461
I42
g4462
Vinsert
p15275
I66
VTextElement: Lazy initializes or returns the session in use by this storage component. 
p15276
tp15277
F0.25
s(g4077
I42
g4078
Vinsert
p15278
I25
VIfStatement
p15279
tp15280
I5
s(g14004
I42
g14005
Vinsert
p15281
I39
VPrimitiveType: void
p15282
tp15283
F0.5
s(g1821
I42
g1822
Vinsert
p15284
I42
VSimpleName: encodedTraces
p15285
tp15286
F0.25
s(g1012
I42
g1013
Vinsert
p15287
I39
VPrimitiveType: void
p15288
tp15289
F0.5
s(g431
I42
g432
Vinsert
p15290
I42
VSimpleName: keyspace
p15291
tp15292
F0.5
s(g9151
I42
g9152
Vinsert
p15293
I42
VSimpleName: IOException
p15294
tp15295
F0.25
s(g6000
I42
g6001
Vinsert
p15296
I44
VSingleVariableDeclaration
p15297
tp15298
F0.75
s(g1448
I42
g1449
Vinsert
p15299
I74
VParameterizedType: List<com.twitter.zipkin.gen.Annotation>
p15300
tp15301
I1
s(g71
I42
g72
Vinsert
p15302
I42
VSimpleName: add
p15303
tp15304
I1
s(g2609
I42
g2610
Vinsert
p15305
I40
VQualifiedName: TestObjects.TRACE
p15306
tp15307
I9
s(g2426
I42
g2427
Vinsert
p15308
I59
VVariableDeclarationFragment
p15309
tp15310
I1
s(g10659
I42
g10660
Vinsert
p15311
I45
VStringLiteral: "zipkin-2016.11.31"
p15312
tp15313
I1
s(g1113
I42
g1114
Vinsert
p15314
I42
VSimpleName: header
p15315
tp15316
I1
s(g1182
I42
g1183
Vinsert
p15317
I45
VStringLiteral: "  \u005c"annotations\u005c": [\u005cn"
p15318
tp15319
F0.25
s(Vinsert
p15320
I42
VSimpleName: getEnvironment
p15321
Vinsert
p15322
I42
VSimpleName: userName
p15323
tp15324
I1
s(g2388
I42
g2389
Vinsert
p15325
I8
VBlock
p15326
tp15327
I3
s(g2416
I42
g2417
Vinsert
p15328
I27
VInfixExpression: ==
p15329
tp15330
I1
s(g14839
I42
g14840
Vinsert
p15331
I34
VNumberLiteral: 1
p15332
tp15333
I1
s(g2237
I42
g2238
Vinsert
p15334
I59
VVariableDeclarationFragment
p15335
tp15336
I4
s(g3136
I42
g3137
Vinsert
p15337
I83
VModifier: public
p15338
tp15339
F0.25
s(g136
I42
g137
Vinsert
p15340
I42
VSimpleName: emptyList
p15341
tp15342
I1
s(g12051
I42
g12052
Vinsert
p15343
I40
VQualifiedName: org.springframework.http.HttpHeaders
p15344
tp15345
F0.25
s(g2802
I42
g2803
Vinsert
p15346
I8
VBlock
p15347
tp15348
I1
s(g4225
I42
g4226
Vinsert
p15349
I42
VSimpleName: build
p15350
tp15351
I1
s(g314
I42
g315
Vinsert
p15352
I43
VSimpleType: RecordedRequest
p15353
tp15354
I1
s(g5831
I42
g5832
Vinsert
p15355
I7
VAssignment: =
p15356
tp15357
I1
s(g8053
I42
g8054
Vinsert
p15358
I7
VAssignment: =
p15359
tp15360
I2
s(g1533
I42
g1534
Vinsert
p15361
I42
VSimpleName: json
p15362
tp15363
I1
s(g3745
I42
g3746
Vinsert
p15364
I42
VSimpleName: guavaToAsync
p15365
tp15366
I4
s(Vinsert
p15367
I42
VSimpleName: build
p15368
Vinsert
p15369
I45
VStringLiteral: "1.1.1.1:9142"
p15370
tp15371
F0.5
s(g492
I42
g493
Vinsert
p15372
I14
VClassInstanceCreation
p15373
tp15374
I1
s(g3859
I42
g3860
Vinsert
p15375
I57
VTypeLiteral
p15376
tp15377
I1
s(g2127
I42
g2128
Vinsert
p15378
I59
VVariableDeclarationFragment
p15379
tp15380
I1
s(g3823
I42
g3824
Vinsert
p15381
I43
VSimpleType: InetAddress
p15382
tp15383
F0.25
s(g5995
I42
g5996
Vinsert
p15384
I45
VStringLiteral: "service1"
p15385
tp15386
I1
s(g4778
I42
g4779
Vinsert
p15387
I83
VModifier: public
p15388
tp15389
F0.25
s(g654
I42
g655
Vinsert
p15390
I42
VSimpleName: String
p15391
tp15392
F0.5
s(g4754
I42
g4755
Vinsert
p15393
I45
VStringLiteral: "  ]"
p15394
tp15395
I1
s(g2122
I42
g2123
Vinsert
p15396
I43
VSimpleType: BoundStatementKey
p15397
tp15398
I1
s(g4592
I42
g4593
Vinsert
p15399
I43
VSimpleType: DeduplicatingExecutor
p15400
tp15401
F0.5
s(g2891
I42
g2892
Vinsert
p15402
I38
VPrefixExpression: !
p15403
tp15404
I1
s(Vinsert
p15405
I42
VSimpleName: writeSpans
p15406
Vinsert
p15407
I40
VQualifiedName: Codec.THRIFT
p15408
tp15409
I1
s(g6658
I42
g6659
Vinsert
p15410
I42
VSimpleName: execute
p15411
tp15412
I1
s(Vinsert
p15413
I42
VSimpleName: toBuilder
p15414
Vinsert
p15415
I42
VSimpleName: metrics
p15416
tp15417
F0.75
s(g4446
I42
g4447
Vinsert
p15418
I43
VSimpleType: Buffer
p15419
tp15420
F4.25
s(g1351
I42
g1352
Vinsert
p15421
I42
VSimpleName: Endpoint
p15422
tp15423
I3
s(g2355
I42
g2356
Vinsert
p15424
I39
VPrimitiveType: byte
p15425
tp15426
I2
s(g11026
I42
g11027
Vinsert
p15427
I23
VFieldDeclaration
p15428
tp15429
F0.25
s(g6315
I42
g6316
Vinsert
p15430
I76
VWildcardType: ?
p15431
tp15432
F1.5
s(g7086
I42
g7087
Vinsert
p15433
I25
VIfStatement
p15434
tp15435
I1
s(g1683
I42
g1684
Vinsert
p15436
I32
VMethodInvocation
p15437
tp15438
I1
s(Vinsert
p15439
I42
VSimpleName: builder
p15440
Vinsert
p15441
I34
VNumberLiteral: 2L
p15442
tp15443
F0.5
s(g5725
I42
g5726
Vinsert
p15444
I27
VInfixExpression: &&
p15445
tp15446
I1
s(g631
I42
g632
Vinsert
p15447
I44
VSingleVariableDeclaration
p15448
tp15449
F1.25
s(g3838
I42
g3839
Vinsert
p15450
I42
VSimpleName: withParent
p15451
tp15452
I1
s(g9771
I42
g9772
Vinsert
p15453
I42
VSimpleName: treeBuilder
p15454
tp15455
I1
s(g11397
I42
g11398
Vinsert
p15456
I42
VSimpleName: requestedHeaders
p15457
tp15458
I1
s(g8802
I42
g8803
Vinsert
p15459
I42
VSimpleName: name
p15460
tp15461
I1
s(g2781
I42
g2782
Vinsert
p15462
I27
VInfixExpression: &&
p15463
tp15464
I10
s(g1346
I42
g1347
Vinsert
p15465
I85
VDimension
p15466
tp15467
I1
s(g5126
I42
g5127
Vinsert
p15468
I60
VVariableDeclarationStatement
p15469
tp15470
I2
s(g6658
I42
g6659
Vinsert
p15471
I42
VSimpleName: asList
p15472
tp15473
I1
s(g9889
I42
g9890
Vinsert
p15474
I42
VSimpleName: bytes
p15475
tp15476
I1
s(g6071
I42
g6072
Vinsert
p15477
I44
VSingleVariableDeclaration
p15478
tp15479
I1
s(g11
I42
g12
Vinsert
p15480
I40
VQualifiedName: Integer.MAX_VALUE
p15481
tp15482
F0.5
s(g876
I42
g877
Vinsert
p15483
I8
VBlock
p15484
tp15485
I1
s(g1533
I42
g1534
Vinsert
p15486
I39
VPrimitiveType: boolean
p15487
tp15488
F1.25
s(g3644
I42
g3645
Vinsert
p15489
I42
VSimpleName: result
p15490
tp15491
I1
s(g219
I42
g220
Vinsert
p15492
I60
VVariableDeclarationStatement
p15493
tp15494
I3
s(g31
I42
g32
Vinsert
p15495
I42
VSimpleName: kafkaMetrics
p15496
tp15497
I2
s(g2314
I42
g2315
Vinsert
p15498
I40
VQualifiedName: s.parentId
p15499
tp15500
I2
s(g704
I42
g705
Vinsert
p15501
I42
VSimpleName: isPresent
p15502
tp15503
I1
s(g1612
I42
g1613
Vinsert
p15504
I40
VQualifiedName: Kind.SERVER
p15505
tp15506
I3
s(g3296
I42
g3297
Vinsert
p15507
I43
VSimpleType: V
p15508
tp15509
F0.25
s(g7560
I42
g7561
Vinsert
p15510
I34
VNumberLiteral: 4
p15511
tp15512
I1
s(g5311
I42
g5312
Vinsert
p15513
I32
VMethodInvocation
p15514
tp15515
I5
s(g939
I42
g940
Vinsert
p15516
I8
VBlock
p15517
tp15518
I8
s(g2416
I42
g2417
Vinsert
p15519
I42
VSimpleName: serverId
p15520
tp15521
I1
s(g3422
I42
g3423
Vinsert
p15522
I42
VSimpleName: span
p15523
tp15524
I1
s(g2909
I42
g2910
Vinsert
p15525
I42
VSimpleName: BinaryAnnotation
p15526
tp15527
I2
s(g8011
I42
g8012
Vinsert
p15528
I42
VSimpleName: gzipSink
p15529
tp15530
I1
s(g6894
I42
g6895
Vinsert
p15531
I42
VSimpleName: Set
p15532
tp15533
F0.75
s(g1164
I42
g1165
Vinsert
p15534
I14
VClassInstanceCreation
p15535
tp15536
I1
s(g4626
I42
g4627
Vinsert
p15537
I45
VStringLiteral: "zipkin-query"
p15538
tp15539
I1
s(g9471
I42
g9472
Vinsert
p15540
I43
VSimpleType: Span
p15541
tp15542
I1
s(g2140
I42
g2141
Vinsert
p15543
I34
VNumberLiteral: 95
p15544
tp15545
I1
s(g11001
I42
g11002
Vinsert
p15546
I41
VReturnStatement
p15547
tp15548
I3
s(g1217
I42
g1218
Vinsert
p15549
I42
VSimpleName: zipkinJdbc
p15550
tp15551
I2
s(g11683
I42
g11684
Vinsert
p15552
I42
VSimpleName: getNode
p15553
tp15554
I1
s(g1303
I42
g1304
Vinsert
p15555
I40
VQualifiedName: HttpUrl.Builder
p15556
tp15557
I1
s(g2977
I42
g2978
Vinsert
p15558
I42
VSimpleName: right
p15559
tp15560
F0.25
s(g5634
I42
g5635
Vinsert
p15561
I43
VSimpleType: String
p15562
tp15563
F1.5
s(g3838
I42
g3839
Vinsert
p15564
I42
VSimpleName: toBuilder
p15565
tp15566
I1
s(g7482
I42
g7483
Vinsert
p15567
I42
VSimpleName: DEFAULT_LOOKBACK
p15568
tp15569
F0.25
s(g21
I42
g22
Vinsert
p15570
I43
VSimpleType: JsonReader
p15571
tp15572
F0.25
s(g3212
I42
g3213
Vinsert
p15573
I42
VSimpleName: encode
p15574
tp15575
F0.25
s(g324
I42
g325
Vinsert
p15576
I33
VNullLiteral
p15577
tp15578
I2
s(g6658
I42
g6659
Vinsert
p15579
I42
VSimpleName: when
p15580
tp15581
I1
s(g4425
I42
g4426
Vinsert
p15582
I42
VSimpleName: LazyClient
p15583
tp15584
I2
s(g2360
I42
g2361
Vinsert
p15585
I60
VVariableDeclarationStatement
p15586
tp15587
I1
s(g8978
I42
g8979
Vinsert
p15588
I62
VInstanceofExpression
p15589
tp15590
I2
s(g5183
I42
g5184
Vinsert
p15591
I54
VTryStatement
p15592
tp15593
I4
s(g2949
I42
g2950
Vinsert
p15594
I42
VSimpleName: c
p15595
tp15596
I1
s(g10178
I42
g10179
Vinsert
p15597
I45
VStringLiteral: "1"
p15598
tp15599
F0.25
s(g1969
I42
g1970
Vinsert
p15600
I43
VSimpleType: IllegalArgumentException
p15601
tp15602
F1.25
s(Vinsert
p15603
I42
VSimpleName: toBuilder
p15604
Vinsert
p15605
I42
VSimpleName: JDBCStorage
p15606
tp15607
F0.25
s(g86
I42
g87
Vinsert
p15608
I43
VSimpleType: Brave.Builder
p15609
tp15610
I1
s(g1202
I42
g1203
Vinsert
p15611
I42
VSimpleName: CheckResult
p15612
tp15613
F0.25
s(g12399
I42
g12400
Vinsert
p15614
I43
VSimpleType: AssumptionViolatedException
p15615
tp15616
I11
s(g7450
I42
g7451
Vinsert
p15617
I42
VSimpleName: response
p15618
tp15619
I1
s(g4768
I42
g4769
Vinsert
p15620
I42
VSimpleName: setTypes
p15621
tp15622
I1
s(g2028
I42
g2029
Vinsert
p15623
I42
VSimpleName: thisIsClientSpan
p15624
tp15625
F0.25
s(g11052
I42
g11053
Vinsert
p15626
I83
VModifier: public
p15627
tp15628
F0.5
s(g6236
I42
g6237
Vinsert
p15629
I42
VSimpleName: Exception
p15630
tp15631
I1
s(g66
I42
g67
Vinsert
p15632
I42
VSimpleName: o
p15633
tp15634
F0.25
s(g5034
I42
g5035
Vinsert
p15635
I45
VStringLiteral: "{\u005c"foo\u005c":\u005c"bar\u005c"}"
p15636
tp15637
I1
s(g962
I42
g963
Vinsert
p15638
I42
VSimpleName: serviceName
p15639
tp15640
I1
s(g2421
I42
g2422
Vinsert
p15641
I39
VPrimitiveType: void
p15642
tp15643
F0.25
s(g636
I42
g637
Vinsert
p15644
I42
VSimpleName: counterService
p15645
tp15646
I3
s(g7086
I42
g7087
Vinsert
p15647
I43
VSimpleType: RuntimeException
p15648
tp15649
I1
s(g2750
I42
g2751
Vinsert
p15650
I42
VSimpleName: ZipkinSpanWriter
p15651
tp15652
F2.25
s(g2891
I42
g2892
Vinsert
p15653
I42
VSimpleName: cache
p15654
tp15655
I1
s(g1095
I42
g1096
Vinsert
p15656
I32
VMethodInvocation
p15657
tp15658
I1
s(g3422
I42
g3423
Vinsert
p15659
I42
VSimpleName: builder
p15660
tp15661
I1
s(g5221
I42
g5222
Vinsert
p15662
I78
VMarkerAnnotation
p15663
tp15664
F0.25
s(g796
I42
g797
Vinsert
p15665
I42
VSimpleName: DEPENDENCY_LINK
p15666
tp15667
F0.25
s(g446
I42
g447
Vinsert
p15668
I42
VSimpleName: trace
p15669
tp15670
I1
s(g3307
I42
g3308
Vinsert
p15671
I39
VPrimitiveType: long
p15672
tp15673
F0.5
s(g992
I42
g993
Vinsert
p15674
I42
VSimpleName: Test
p15675
tp15676
F1.0
s(g11312
I42
g11313
Vinsert
p15677
I23
VFieldDeclaration
p15678
tp15679
I1
s(g12407
I42
g12408
Vinsert
p15680
I42
VSimpleName: SpanStoreTest
p15681
tp15682
F0.25
s(g1288
I42
g1289
Vinsert
p15683
I44
VSingleVariableDeclaration
p15684
tp15685
F0.5
s(g426
I42
g427
Vinsert
p15686
I34
VNumberLiteral: 100L
p15687
tp15688
I1
s(g3992
I42
g3993
Vinsert
p15689
I42
VSimpleName: build
p15690
tp15691
I1
s(g4778
I42
g4779
Vinsert
p15692
I43
VSimpleType: Endpoint
p15693
tp15694
F0.25
s(g2996
I42
g2997
Vinsert
p15695
I42
VSimpleName: nextName
p15696
tp15697
I2
s(g3767
I42
g3768
Vinsert
p15698
I42
VSimpleName: ArrayList
p15699
tp15700
I2
s(g14004
I42
g14005
Vinsert
p15701
I42
VSimpleName: q
p15702
tp15703
I2
s(g7913
I42
g7914
Vinsert
p15704
I27
VInfixExpression: <
p15705
tp15706
I2
s(g1288
I42
g1289
Vinsert
p15707
I42
VSimpleName: KeyspaceMetadata
p15708
tp15709
I1
s(g4830
I42
g4831
Vinsert
p15710
I42
VSimpleName: SpanStoreSpanCollector
p15711
tp15712
F0.25
s(g239
I42
g240
Vinsert
p15713
I42
VSimpleName: storageBuilder
p15714
tp15715
I1
s(g7380
I42
g7381
Vinsert
p15716
I42
VSimpleName: builder
p15717
tp15718
F1.25
s(g2755
I42
g2756
Vinsert
p15719
I21
VExpressionStatement
p15720
tp15721
F0.25
s(g5949
I42
g5950
Vinsert
p15722
I59
VVariableDeclarationFragment
p15723
tp15724
I1
s(g5897
I42
g5898
Vinsert
p15725
I83
VModifier: public
p15726
tp15727
F0.25
s(g4157
I42
g4158
Vinsert
p15728
I43
VSimpleType: Dependencies
p15729
tp15730
I2
s(g3427
I42
g3428
Vinsert
p15731
I44
VSingleVariableDeclaration
p15732
tp15733
F1.75
s(g4469
I42
g4470
Vinsert
p15734
I25
VIfStatement
p15735
tp15736
F0.25
s(g7423
I42
g7424
Vinsert
p15737
I42
VSimpleName: Void
p15738
tp15739
F2.25
s(g5730
I42
g5731
Vinsert
p15740
I54
VTryStatement
p15741
tp15742
I1
s(g8693
I42
g8694
Vinsert
p15743
I42
VSimpleName: putLong
p15744
tp15745
I2
s(g7850
I42
g7851
Vinsert
p15746
I14
VClassInstanceCreation
p15747
tp15748
I2
s(g2781
I42
g2782
Vinsert
p15749
I32
VMethodInvocation
p15750
tp15751
F20.25
s(g1232
I42
g1233
Vinsert
p15752
I7
VAssignment: =
p15753
tp15754
F0.5
s(g3176
I42
g3177
Vinsert
p15755
I42
VSimpleName: parentId
p15756
tp15757
I1
s(Vinsert
p15758
I42
VSimpleName: id
p15759
Vinsert
p15760
I34
VNumberLiteral: 1L
p15761
tp15762
I1
s(g7482
I42
g7483
Vinsert
p15763
I9
VBooleanLiteral: false
p15764
tp15765
F0.25
s(g6718
I42
g6719
Vinsert
p15766
I42
VSimpleName: delta
p15767
tp15768
I1
s(g2574
I42
g2575
Vinsert
p15769
I43
VSimpleType: Collection
p15770
tp15771
F0.25
s(g4498
I42
g4499
Vinsert
p15772
I42
VSimpleName: post
p15773
tp15774
I1
s(g4983
I42
g4984
Vinsert
p15775
I42
VSimpleName: BinaryAnnotation
p15776
tp15777
F0.25
s(Vinsert
p15778
I42
VSimpleName: name
p15779
Vinsert
p15780
I42
VSimpleName: span
p15781
tp15782
I2
s(g3233
I42
g3234
Vinsert
p15783
I8
VBlock
p15784
tp15785
F6.25
s(g4488
I42
g4489
Vinsert
p15786
I42
VSimpleName: toString
p15787
tp15788
I1
s(g6426
I42
g6427
Vinsert
p15789
I43
VSimpleType: Promise
p15790
tp15791
I1
s(g11191
I42
g11192
Vinsert
p15792
I42
VSimpleName: length
p15793
tp15794
I2
s(g4717
I42
g4718
Vinsert
p15795
I42
VSimpleName: name
p15796
tp15797
I5
s(g3707
I42
g3708
Vinsert
p15798
I42
VSimpleName: endpoint
p15799
tp15800
I1
s(g2818
I42
g2819
Vinsert
p15801
I42
VSimpleName: iso8601
p15802
tp15803
I2
s(g4152
I42
g4153
Vinsert
p15804
I43
VSimpleType: String
p15805
tp15806
I2
s(g4576
I42
g4577
Vinsert
p15807
I42
VSimpleName: queue
p15808
tp15809
I1
s(g1795
I42
g1796
Vinsert
p15810
I42
VSimpleName: CollectorMetrics
p15811
tp15812
F0.25
s(g352
I42
g353
Vinsert
p15813
I42
VSimpleName: build
p15814
tp15815
I1
s(g3636
I42
g3637
Vinsert
p15816
I42
VSimpleName: Span
p15817
tp15818
I1
s(g2704
I42
g2705
Vinsert
p15819
I21
VExpressionStatement
p15820
tp15821
I1
s(g3094
I42
g3095
Vinsert
p15822
I42
VSimpleName: JsonCodec
p15823
tp15824
I3
s(g6094
I42
g6095
Vinsert
p15825
I42
VSimpleName: Span
p15826
tp15827
F0.25
s(g5533
I42
g5534
Vinsert
p15828
I42
VSimpleName: Test
p15829
tp15830
F0.25
s(g3388
I42
g3389
Vinsert
p15831
I8
VBlock
p15832
tp15833
I1
s(g6635
I42
g6636
Vinsert
p15834
I42
VSimpleName: detectJsonFormat
p15835
tp15836
I1
s(g5311
I42
g5312
Vinsert
p15837
I43
VSimpleType: String
p15838
tp15839
I1
s(g6569
I42
g6570
Vinsert
p15840
I40
VQualifiedName: zipkin.Span
p15841
tp15842
I1
s(g8397
I42
g8398
Vinsert
p15843
I8
VBlock
p15844
tp15845
I2
s(Vinsert
p15846
I42
VSimpleName: accept
p15847
Vinsert
p15848
I43
VSimpleType: ZipkinRule
p15849
tp15850
F0.25
s(g61
I42
g62
Vinsert
p15851
I43
VSimpleType: Client
p15852
tp15853
F0.25
s(g7560
I42
g7561
Vinsert
p15854
I34
VNumberLiteral: 16
p15855
tp15856
I1
s(g7613
I42
g7614
Vinsert
p15857
I74
VParameterizedType: Set<Pair<String>>
p15858
tp15859
I1
s(g1594
I42
g1595
Vinsert
p15860
I42
VSimpleName: parameters
p15861
tp15862
I1
s(g2454
I42
g2455
Vinsert
p15863
I43
VSimpleType: Span
p15864
tp15865
F0.25
s(Vinsert
p15866
I42
VSimpleName: equals
p15867
Vinsert
p15868
I9
VBooleanLiteral: true
p15869
tp15870
I2
s(g5547
I42
g5548
Vinsert
p15871
I43
VSimpleType: Span
p15872
tp15873
I3
s(g679
I42
g680
Vinsert
p15874
I36
VParenthesizedExpression
p15875
tp15876
I1
s(g2398
I42
g2399
Vinsert
p15877
I8
VBlock
p15878
tp15879
I1
s(g2330
I42
g2331
Vinsert
p15880
I39
VPrimitiveType: void
p15881
tp15882
F0.25
s(Vinsert
p15883
I42
VSimpleName: builder
p15884
Vinsert
p15885
I43
VSimpleType: DependencyLinkSpan
p15886
tp15887
I1
s(g7197
I42
g7198
Vinsert
p15888
I59
VVariableDeclarationFragment
p15889
tp15890
F0.25
s(g6745
I42
g6746
Vinsert
p15891
I42
VSimpleName: Lists
p15892
tp15893
I1
s(g2604
I42
g2605
Vinsert
p15894
I32
VMethodInvocation
p15895
tp15896
I5
s(g141
I42
g142
Vinsert
p15897
I43
VSimpleType: Call
p15898
tp15899
I1
s(g1584
I42
g1585
Vinsert
p15900
I66
VTextElement: Returns false after logging to FINE if the value couldn't be added 
p15901
tp15902
F0.25
s(g796
I42
g797
Vinsert
p15903
I21
VExpressionStatement
p15904
tp15905
I1
s(g1683
I42
g1684
Vinsert
p15906
I59
VVariableDeclarationFragment
p15907
tp15908
I1
s(g3552
I42
g3553
Vinsert
p15909
I43
VSimpleType: WebRequest
p15910
tp15911
F0.25
s(Vinsert
p15912
I42
VSimpleName: append
p15913
Vinsert
p15914
I42
VSimpleName: getPort
p15915
tp15916
I1
s(g3438
I42
g3439
Vinsert
p15917
I41
VReturnStatement
p15918
tp15919
I1
s(g362
I42
g363
Vinsert
p15920
I42
VSimpleName: RuntimeException
p15921
tp15922
I2
s(g2260
I42
g2261
Vinsert
p15923
I42
VSimpleName: properties
p15924
tp15925
I1
s(g1479
I42
g1480
Vinsert
p15926
I42
VSimpleName: TRACE
p15927
tp15928
I2
s(g522
I42
g523
Vinsert
p15929
I40
VQualifiedName: zookeeper.client
p15930
tp15931
F0.25
s(g400
I42
g401
Vinsert
p15932
I43
VSimpleType: Span
p15933
tp15934
I1
s(g4647
I42
g4648
Vinsert
p15935
I59
VVariableDeclarationFragment
p15936
tp15937
I3
s(g1871
I42
g1872
Vinsert
p15938
I16
VConditionalExpression
p15939
tp15940
I1
s(g196
I42
g197
Vinsert
p15941
I8
VBlock
p15942
tp15943
I1
s(g1551
I42
g1552
Vinsert
p15944
I34
VNumberLiteral: 1
p15945
tp15946
I1
s(g2054
I42
g2055
Vinsert
p15947
I13
VCharacterLiteral: '\u005cr'
p15948
tp15949
I1
s(g11312
I42
g11313
Vinsert
p15950
I40
VQualifiedName: zipkin.internal.v2.Endpoint
p15951
tp15952
I2
s(g6071
I42
g6072
Vinsert
p15953
I70
VEnhancedForStatement
p15954
tp15955
I1
s(g2431
I42
g2432
Vinsert
p15956
I44
VSingleVariableDeclaration
p15957
tp15958
F2.0
s(g6552
I42
g6553
Vinsert
p15959
I27
VInfixExpression: +
p15960
tp15961
I1
s(g7445
I42
g7446
Vinsert
p15962
I42
VSimpleName: expect
p15963
tp15964
I1
s(g2174
I42
g2175
Vinsert
p15965
I8
VBlock
p15966
tp15967
I2
s(g2314
I42
g2315
Vinsert
p15968
I40
VQualifiedName: a.key
p15969
tp15970
I2
s(g6658
I42
g6659
Vinsert
p15971
I42
VSimpleName: thenReturn
p15972
tp15973
I1
s(g11799
I42
g11800
Vinsert
p15974
I42
VSimpleName: InMemorySpanStore
p15975
tp15976
F0.5
s(g821
I42
g822
Vinsert
p15977
I42
VSimpleName: assertThat
p15978
tp15979
I2
s(g15413
I42
g15414
Vinsert
p15980
I42
VSimpleName: properties
p15981
tp15982
F5.5
s(g2579
I42
g2580
Vinsert
p15983
I42
VSimpleName: content
p15984
tp15985
I1
s(g3412
I42
g3413
Vinsert
p15986
I42
VSimpleName: Properties
p15987
tp15988
I1
s(g8392
I42
g8393
Vinsert
p15989
I42
VSimpleName: build
p15990
tp15991
I1
s(g5558
I42
g5559
Vinsert
p15992
I60
VVariableDeclarationStatement
p15993
tp15994
I2
s(g7897
I42
g7898
Vinsert
p15995
I42
VSimpleName: length
p15996
tp15997
I9
s(g390
I42
g391
Vinsert
p15998
I58
VVariableDeclarationExpression
p15999
tp16000
I1
s(g15162
I42
g15163
Vinsert
p16001
I42
VSimpleName: ZipkinElasticsearchHttpStorageAutoConfiguration
p16002
tp16003
I2
s(g3707
I42
g3708
Vinsert
p16004
I11
VCastExpression
p16005
tp16006
I1
s(g1523
I42
g1524
Vinsert
p16007
I42
VSimpleName: List
p16008
tp16009
I1
s(g5807
I42
g5808
Vinsert
p16010
I42
VSimpleName: assertThat
p16011
tp16012
I1
s(g284
I42
g285
Vinsert
p16013
I42
VSimpleName: MergeById
p16014
tp16015
I1
s(g3212
I42
g3213
Vinsert
p16016
I42
VSimpleName: span
p16017
tp16018
F1.25
s(g1811
I42
g1812
Vinsert
p16019
I32
VMethodInvocation
p16020
tp16021
I26
s(g1541
I42
g1542
Vinsert
p16022
I42
VSimpleName: updateFields
p16023
tp16024
F0.25
s(g4738
I42
g4739
Vinsert
p16025
I42
VSimpleName: authoritativeTimestamp
p16026
tp16027
I1
s(g1247
I42
g1248
Vinsert
p16028
I22
VFieldAccess
p16029
tp16030
F0.5
s(g2072
I42
g2073
Vinsert
p16031
I42
VSimpleName: Long
p16032
tp16033
I1
s(g517
I42
g518
Vinsert
p16034
I74
VParameterizedType: ArrayList<Span>
p16035
tp16036
I1
s(g9722
I42
g9723
Vinsert
p16037
I31
VMethodDeclaration
p16038
tp16039
F0.25
s(g4768
I42
g4769
Vinsert
p16040
I42
VSimpleName: indexFromTwoDaysAgo
p16041
tp16042
I1
s(g1934
I42
g1935
Vinsert
p16043
I8
VBlock
p16044
tp16045
I2
s(Vinsert
p16046
I42
VSimpleName: parentId
p16047
Vinsert
p16048
I42
VSimpleName: build
p16049
tp16050
I1
s(g219
I42
g220
Vinsert
p16051
I42
VSimpleName: IOException
p16052
tp16053
F0.75
s(g2865
I42
g2866
Vinsert
p16054
I42
VSimpleName: wasLastPage
p16055
tp16056
I1
s(g734
I42
g735
Vinsert
p16057
I43
VSimpleType: ApplicationReadyEvent
p16058
tp16059
I2
s(g4016
I42
g4017
Vinsert
p16060
I39
VPrimitiveType: void
p16061
tp16062
F0.5
s(g2260
I42
g2261
Vinsert
p16063
I83
VModifier: public
p16064
tp16065
F0.25
s(g507
I42
g508
Vinsert
p16066
I8
VBlock
p16067
tp16068
I1
s(g2689
I42
g2690
Vinsert
p16069
I43
VSimpleType: StorageComponent
p16070
tp16071
F0.25
s(g3009
I42
g3010
Vinsert
p16072
I31
VMethodDeclaration
p16073
tp16074
F1.25
s(g4415
I42
g4416
Vinsert
p16075
I32
VMethodInvocation
p16076
tp16077
I1
s(g6552
I42
g6553
Vinsert
p16078
I34
VNumberLiteral: 100L
p16079
tp16080
I1
s(g783
I42
g784
Vinsert
p16081
I45
VStringLiteral: "Error"
p16082
tp16083
I2
s(g7502
I42
g7503
Vinsert
p16084
I42
VSimpleName: s
p16085
tp16086
F1.25
s(g1744
I42
g1745
Vinsert
p16087
I42
VSimpleName: getConnectedHosts
p16088
tp16089
I1
s(g2174
I42
g2175
Vinsert
p16090
I42
VSimpleName: readResolve
p16091
tp16092
F0.25
s(g6079
I42
g6080
Vinsert
p16093
I42
VSimpleName: Long
p16094
tp16095
F0.25
s(g3268
I42
g3269
Vinsert
p16096
I8
VBlock
p16097
tp16098
I2
s(g5738
I42
g5739
Vinsert
p16099
I42
VSimpleName: create
p16100
tp16101
F8.0
s(g6421
I42
g6422
Vinsert
p16102
I59
VVariableDeclarationFragment
p16103
tp16104
I1
s(g669
I42
g670
Vinsert
p16105
I40
VQualifiedName: Span2Codec.JSON
p16106
tp16107
I2
s(g14004
I42
g14005
Vinsert
p16108
I83
VModifier: public
p16109
tp16110
F0.5
s(g3493
I42
g3494
Vinsert
p16111
I42
VSimpleName: BACKEND
p16112
tp16113
I1
s(g876
I42
g877
Vinsert
p16114
I78
VMarkerAnnotation
p16115
tp16116
F0.25
s(g5045
I42
g5046
Vinsert
p16117
I32
VMethodInvocation
p16118
tp16119
I5
s(g4425
I42
g4426
Vinsert
p16120
I14
VClassInstanceCreation
p16121
tp16122
I2
s(g1045
I42
g1046
Vinsert
p16123
I43
VSimpleType: BinaryAnnotation
p16124
tp16125
F0.25
s(g3735
I42
g3736
Vinsert
p16126
I43
VSimpleType: Long
p16127
tp16128
F0.25
s(g224
I42
g225
Vinsert
p16129
I25
VIfStatement
p16130
tp16131
I1
s(g3552
I42
g3553
Vinsert
p16132
I42
VSimpleName: WebRequest
p16133
tp16134
F0.25
s(g2203
I42
g2204
Vinsert
p16135
I27
VInfixExpression: <
p16136
tp16137
I1
s(Vinsert
p16138
I42
VSimpleName: builder
p16139
Vinsert
p16140
I42
VSimpleName: consumer
p16141
tp16142
F0.25
s(g4034
I42
g4035
Vinsert
p16143
I8
VBlock
p16144
tp16145
I2
s(g8652
I42
g8653
Vinsert
p16146
I7
VAssignment: =
p16147
tp16148
F0.25
s(g10920
I42
g10921
Vinsert
p16149
I22
VFieldAccess
p16150
tp16151
I1
s(g9215
I42
g9216
Vinsert
p16152
I43
VSimpleType: Buffer
p16153
tp16154
F2.25
s(g11429
I42
g11430
Vinsert
p16155
I42
VSimpleName: traceIdToTimestamp
p16156
tp16157
F0.25
s(g8347
I42
g8348
Vinsert
p16158
I42
VSimpleName: builder
p16159
tp16160
F15.5
s(g3454
I42
g3455
Vinsert
p16161
I42
VSimpleName: CORE_ANNOTATIONS
p16162
tp16163
I1
s(g2174
I42
g2175
Vinsert
p16164
I54
VTryStatement
p16165
tp16166
I1
s(g1886
I42
g1887
Vinsert
p16167
I42
VSimpleName: JsonSpan
p16168
tp16169
I1
s(Vinsert
p16170
I42
VSimpleName: get
p16171
Vinsert
p16172
I42
VSimpleName: size
p16173
tp16174
I4
s(g1688
I42
g1689
Vinsert
p16175
I42
VSimpleName: bytes
p16176
tp16177
I1
s(g2224
I42
g2225
Vinsert
p16178
I43
VSimpleType: Span
p16179
tp16180
F1.5
s(g6005
I42
g6006
Vinsert
p16181
I42
VSimpleName: username
p16182
tp16183
I1
s(g3072
I42
g3073
Vinsert
p16184
I31
VMethodDeclaration
p16185
tp16186
F0.25
s(g7134
I42
g7135
Vinsert
p16187
I42
VSimpleName: setDateSeparator
p16188
tp16189
F0.25
s(g5264
I42
g5265
Vinsert
p16190
I42
VSimpleName: b
p16191
tp16192
F3.5
s(g3525
I42
g3526
Vinsert
p16193
I42
VSimpleName: insertInto
p16194
tp16195
I1
s(g5780
I42
g5781
Vinsert
p16196
I32
VMethodInvocation
p16197
tp16198
I13
s(g466
I42
g467
Vinsert
p16199
I42
VSimpleName: strictTraceId
p16200
tp16201
F0.25
s(g1861
I42
g1862
Vinsert
p16202
I59
VVariableDeclarationFragment
p16203
tp16204
I8
s(g1469
I42
g1470
Vinsert
p16205
I32
VMethodInvocation
p16206
tp16207
I9
s(g9604
I42
g9605
Vinsert
p16208
I42
VSimpleName: T
p16209
tp16210
F0.25
s(g2005
I42
g2006
Vinsert
p16211
I8
VBlock
p16212
tp16213
I2
s(g6663
I42
g6664
Vinsert
p16214
I42
VSimpleName: InMemoryStorage
p16215
tp16216
I4
s(g3263
I42
g3264
Vinsert
p16217
I83
VModifier: public
p16218
tp16219
F0.25
s(g9889
I42
g9890
Vinsert
p16220
I21
VExpressionStatement
p16221
tp16222
I1
s(g2727
I42
g2728
Vinsert
p16223
I60
VVariableDeclarationStatement
p16224
tp16225
I2
s(g7533
I42
g7534
Vinsert
p16226
I42
VSimpleName: thenReturn
p16227
tp16228
I1
s(g2408
I42
g2409
Vinsert
p16229
I42
VSimpleName: OkHttpClient
p16230
tp16231
F0.25
s(g229
I42
g230
Vinsert
p16232
I43
VSimpleType: DependencyLink
p16233
tp16234
I1
s(g8375
I42
g8376
Vinsert
p16235
I42
VSimpleName: builder
p16236
tp16237
I1
s(g2260
I42
g2261
Vinsert
p16238
I44
VSingleVariableDeclaration
p16239
tp16240
F0.25
s(g2818
I42
g2819
Vinsert
p16241
I59
VVariableDeclarationFragment
p16242
tp16243
I1
s(g1628
I42
g1629
Vinsert
p16244
I42
VSimpleName: in
p16245
tp16246
F0.25
s(g6758
I42
g6759
Vinsert
p16247
I42
VSimpleName: LINKS
p16248
tp16249
I1
s(g4275
I42
g4276
Vinsert
p16250
I21
VExpressionStatement
p16251
tp16252
I1
s(g4152
I42
g4153
Vinsert
p16253
I43
VSimpleType: ToSeqCallback
p16254
tp16255
I2
s(g1790
I42
g1791
Vinsert
p16256
I27
VInfixExpression: !=
p16257
tp16258
I1
s(g1085
I42
g1086
Vinsert
p16259
I39
VPrimitiveType: boolean
p16260
tp16261
I1
s(g6145
I42
g6146
Vinsert
p16262
I27
VInfixExpression: <=
p16263
tp16264
I1
s(g9717
I42
g9718
Vinsert
p16265
I42
VSimpleName: password
p16266
tp16267
F0.25
s(g314
I42
g315
Vinsert
p16268
I42
VSimpleName: takeRequest
p16269
tp16270
I1
s(Vinsert
p16271
I42
VSimpleName: thenThrow
p16272
Vinsert
p16273
I83
VModifier: public
p16274
tp16275
F0.25
s(g11052
I42
g11053
Vinsert
p16276
I43
VSimpleType: InMemoryStorage.Builder
p16277
tp16278
F0.25
s(g7560
I42
g7561
Vinsert
p16279
I34
VNumberLiteral: 172
p16280
tp16281
I1
s(g2388
I42
g2389
Vinsert
p16282
I32
VMethodInvocation
p16283
tp16284
I6
s(g796
I42
g797
Vinsert
p16285
I31
VMethodDeclaration
p16286
tp16287
F0.25
s(g111
I42
g112
Vinsert
p16288
I42
VSimpleName: clusterProvider
p16289
tp16290
I1
s(g8751
I42
g8752
Vinsert
p16291
I42
VSimpleName: builder
p16292
tp16293
I2
s(g7913
I42
g7914
Vinsert
p16294
I37
VPostfixExpression: ++
p16295
tp16296
I2
s(g8027
I42
g8028
Vinsert
p16297
I42
VSimpleName: build
p16298
tp16299
I1
s(g2949
I42
g2950
Vinsert
p16300
I42
VSimpleName: i
p16301
tp16302
I6
s(g410
I42
g411
Vinsert
p16303
I42
VSimpleName: oproto
p16304
tp16305
I2
s(g6005
I42
g6006
Vinsert
p16306
I32
VMethodInvocation
p16307
tp16308
I1
s(g4539
I42
g4540
Vinsert
p16309
I74
VParameterizedType: CallbackCaptor<>
p16310
tp16311
I1
s(g919
I42
g920
Vinsert
p16312
I42
VSimpleName: ArrayList
p16313
tp16314
I4
s(g3046
I42
g3047
Vinsert
p16315
I42
VSimpleName: ElasticsearchHttpStorage
p16316
tp16317
I1
s(g1443
I42
g1444
Vinsert
p16318
I44
VSingleVariableDeclaration
p16319
tp16320
F0.5
s(g3454
I42
g3455
Vinsert
p16321
I83
VModifier: public
p16322
tp16323
I1
s(g426
I42
g427
Vinsert
p16324
I59
VVariableDeclarationFragment
p16325
tp16326
F9.25
s(g5856
I42
g5857
Vinsert
p16327
I65
VTagElement
p16328
tp16329
F0.25
s(g10568
I42
g10569
Vinsert
p16330
I42
VSimpleName: getByName
p16331
tp16332
I1
s(g587
I42
g588
Vinsert
p16333
I32
VMethodInvocation
p16334
tp16335
I6
s(g264
I42
g265
Vinsert
p16336
I42
VSimpleName: AWSCredentials
p16337
tp16338
F0.25
s(g12325
I42
g12326
Vinsert
p16339
I42
VSimpleName: getMetadata
p16340
tp16341
I1
s(g5910
I42
g5911
Vinsert
p16342
I43
VSimpleType: Buffer
p16343
tp16344
I4
s(g3194
I42
g3195
Vinsert
p16345
I45
VStringLiteral: "  \u005c"binaryAnnotations\u005c": [\u005cn"
p16346
tp16347
I1
s(g9889
I42
g9890
Vinsert
p16348
I42
VSimpleName: codec
p16349
tp16350
I2
s(g1939
I42
g1940
Vinsert
p16351
I42
VSimpleName: Session
p16352
tp16353
I1
s(g15758
I42
g15759
Vinsert
p16354
I42
VSimpleName: span
p16355
tp16356
I1
s(g4835
I42
g4836
Vinsert
p16357
I45
VStringLiteral: "zipkin.storage.elasticsearch.timeout:"
p16358
tp16359
I1
s(g3838
I42
g3839
Vinsert
p16360
I42
VSimpleName: builder_canUnsetParent
p16361
tp16362
F0.25
s(g8190
I42
g8191
Vinsert
p16363
I42
VSimpleName: LOCAL_COMPONENT
p16364
tp16365
I1
s(g2350
I42
g2351
Vinsert
p16366
I34
VNumberLiteral: 3L
p16367
tp16368
I1
s(g2459
I42
g2460
Vinsert
p16369
I60
VVariableDeclarationStatement
p16370
tp16371
I1
s(g3318
I42
g3319
Vinsert
p16372
I42
VSimpleName: BinaryAnnotation
p16373
tp16374
I1
s(g3004
I42
g3005
Vinsert
p16375
I43
VSimpleType: StorageComponent
p16376
tp16377
F1.0
s(g9881
I42
g9882
Vinsert
p16378
I21
VExpressionStatement
p16379
tp16380
I2
s(g6124
I42
g6125
Vinsert
p16381
I45
VStringLiteral: "0:0:3:0:0:0:0:ffff"
p16382
tp16383
I1
s(g1633
I42
g1634
Vinsert
p16384
I34
VNumberLiteral: 10
p16385
tp16386
F0.25
s(g517
I42
g518
Vinsert
p16387
I43
VSimpleType: ArrayList
p16388
tp16389
I1
s(g1187
I42
g1188
Vinsert
p16390
I32
VMethodInvocation
p16391
tp16392
I2
s(g11312
I42
g11313
Vinsert
p16393
I42
VSimpleName: traceIdHex
p16394
tp16395
I1
s(g4568
I42
g4569
Vinsert
p16396
I42
VSimpleName: direction
p16397
tp16398
F0.25
s(g654
I42
g655
Vinsert
p16399
I32
VMethodInvocation
p16400
tp16401
I3
s(g3688
I42
g3689
Vinsert
p16402
I43
VSimpleType: List
p16403
tp16404
I1
s(g7541
I42
g7542
Vinsert
p16405
I40
VQualifiedName: tierSpan.id
p16406
tp16407
I1
s(g2771
I42
g2772
Vinsert
p16408
I74
VParameterizedType: List<String>
p16409
tp16410
F0.25
s(g2393
I42
g2394
Vinsert
p16411
I42
VSimpleName: result
p16412
tp16413
I6
s(g2492
I42
g2493
Vinsert
p16414
I42
VSimpleName: to
p16415
tp16416
I2
s(g1448
I42
g1449
Vinsert
p16417
I42
VSimpleName: getTrace_id
p16418
tp16419
I1
s(g2219
I42
g2220
Vinsert
p16420
I43
VSimpleType: ZipkinServer
p16421
tp16422
I1
s(g4792
I42
g4793
Vinsert
p16423
I40
VQualifiedName: Constants.SERVER_RECV
p16424
tp16425
I2
s(g856
I42
g857
Vinsert
p16426
I60
VVariableDeclarationStatement
p16427
tp16428
I1
s(g7733
I42
g7734
Vinsert
p16429
I59
VVariableDeclarationFragment
p16430
tp16431
I3
s(g739
I42
g740
Vinsert
p16432
I40
VQualifiedName: Type.STRING.value
p16433
tp16434
I1
s(g1688
I42
g1689
Vinsert
p16435
I39
VPrimitiveType: byte
p16436
tp16437
I1
s(g11429
I42
g11430
Vinsert
p16438
I40
VQualifiedName: request.lookback
p16439
tp16440
F0.25
s(g6203
I42
g6204
Vinsert
p16441
I8
VBlock
p16442
tp16443
F4.25
s(g14755
I42
g14756
Vinsert
p16444
I42
VSimpleName: getMappedPort
p16445
tp16446
I1
s(g136
I42
g137
Vinsert
p16447
I83
VModifier: final
p16448
tp16449
I1
s(g5611
I42
g5612
Vinsert
p16450
I42
VSimpleName: Set
p16451
tp16452
I1
s(g8135
I42
g8136
Vinsert
p16453
I42
VSimpleName: i
p16454
tp16455
I2
s(g5897
I42
g5898
Vinsert
p16456
I78
VMarkerAnnotation
p16457
tp16458
F0.25
s(g6094
I42
g6095
Vinsert
p16459
I8
VBlock
p16460
tp16461
I1
s(g13147
I42
g13148
Vinsert
p16462
I74
VParameterizedType: Map.Entry<String,String>
p16463
tp16464
I1
s(g6552
I42
g6553
Vinsert
p16465
I42
VSimpleName: timestamp
p16466
tp16467
I2
s(g10835
I42
g10836
Vinsert
p16468
I45
VStringLiteral: "web"
p16469
tp16470
F1.5
s(g6099
I42
g6100
Vinsert
p16471
I42
VSimpleName: WriteType
p16472
tp16473
F0.25
s(g2340
I42
g2341
Vinsert
p16474
I42
VSimpleName: debugFlagWins
p16475
tp16476
F0.25
s(g3136
I42
g3137
Vinsert
p16477
I59
VVariableDeclarationFragment
p16478
tp16479
I1
s(g234
I42
g235
Vinsert
p16480
I21
VExpressionStatement
p16481
tp16482
I1
s(g9587
I42
g9588
Vinsert
p16483
I42
VSimpleName: codec
p16484
tp16485
I6
s(g2843
I42
g2844
Vinsert
p16486
I42
VSimpleName: assertThat
p16487
tp16488
I2
s(g7251
I42
g7252
Vinsert
p16489
I21
VExpressionStatement
p16490
tp16491
I4
s(g1831
I42
g1832
Vinsert
p16492
I11
VCastExpression
p16493
tp16494
I1
s(g10954
I42
g10955
Vinsert
p16495
I43
VSimpleType: IOException
p16496
tp16497
F0.25
s(Vinsert
p16498
I42
VSimpleName: run
p16499
Vinsert
p16500
I42
VSimpleName: Executor
p16501
tp16502
F0.25
s(g11588
I42
g11589
Vinsert
p16503
I43
VSimpleType: Lazy
p16504
tp16505
F1.0
s(g762
I42
g763
Vinsert
p16506
I90
VExpressionMethodReference
p16507
tp16508
I1
s(g4182
I42
g4183
Vinsert
p16509
I42
VSimpleName: Override
p16510
tp16511
F0.75
s(g3083
I42
g3084
Vinsert
p16512
I60
VVariableDeclarationStatement
p16513
tp16514
I1
s(g10954
I42
g10955
Vinsert
p16515
I44
VSingleVariableDeclaration
p16516
tp16517
F0.25
s(Vinsert
p16518
I42
VSimpleName: add
p16519
Vinsert
p16520
I42
VSimpleName: T
p16521
tp16522
I1
s(g1293
I42
g1294
Vinsert
p16523
I43
VSimpleType: List
p16524
tp16525
I1
s(g3233
I42
g3234
Vinsert
p16526
I74
VParameterizedType: Callback<Void>
p16527
tp16528
F0.25
s(g8855
I42
g8856
Vinsert
p16529
I42
VSimpleName: AWSSignatureVersion4
p16530
tp16531
F0.25
s(g6094
I42
g6095
Vinsert
p16532
I42
VSimpleName: spans
p16533
tp16534
F0.25
s(g532
I42
g533
Vinsert
p16535
I27
VInfixExpression: &&
p16536
tp16537
I1
s(g3017
I42
g3018
Vinsert
p16538
I25
VIfStatement
p16539
tp16540
I1
s(g9867
I42
g9868
Vinsert
p16541
I42
VSimpleName: System
p16542
tp16543
I1
s(g6421
I42
g6422
Vinsert
p16544
I43
VSimpleType: SimpleTimeLimiter
p16545
tp16546
I2
s(g1806
I42
g1807
Vinsert
p16547
I42
VSimpleName: boundary
p16548
tp16549
F0.25
s(g13567
I42
g13568
Vinsert
p16550
I27
VInfixExpression: !=
p16551
tp16552
I1
s(g4280
I42
g4281
Vinsert
p16553
I45
VStringLiteral: "s4"
p16554
tp16555
I1
s(g1012
I42
g1013
Vinsert
p16556
I42
VSimpleName: setupDB
p16557
tp16558
F0.5
s(g4248
I42
g4249
Vinsert
p16559
I52
VThisExpression
p16560
tp16561
F2.25
s(g1620
I42
g1621
Vinsert
p16562
I7
VAssignment: =
p16563
tp16564
F0.25
s(g3974
I42
g3975
Vinsert
p16565
I45
VStringLiteral: "  \u005c"tagline\u005c" : \u005c"You Know, for Search\u005c"\u005cn"
p16566
tp16567
I3
s(g6342
I42
g6343
Vinsert
p16568
I59
VVariableDeclarationFragment
p16569
tp16570
F2.25
s(g1911
I42
g1912
Vinsert
p16571
I85
VDimension
p16572
tp16573
I1
s(g5449
I42
g5450
Vinsert
p16574
I42
VSimpleName: annotationKeys
p16575
tp16576
I2
s(g2848
I42
g2849
Vinsert
p16577
I42
VSimpleName: strictTraceId
p16578
tp16579
I1
s(g431
I42
g432
Vinsert
p16580
I42
VSimpleName: cassandra
p16581
tp16582
F4.25
s(g6685
I42
g6686
Vinsert
p16583
I9
VBooleanLiteral: true
p16584
tp16585
I1
s(g2771
I42
g2772
Vinsert
p16586
I40
VQualifiedName: ResponseEntity.BodyBuilder
p16587
tp16588
I1
s(g2446
I42
g2447
Vinsert
p16589
I42
VSimpleName: parentId
p16590
tp16591
I2
s(g6677
I42
g6678
Vinsert
p16592
I83
VModifier: public
p16593
tp16594
F0.25
s(g2446
I42
g2447
Vinsert
p16595
I42
VSimpleName: rpcSpanId
p16596
tp16597
I1
s(g362
I42
g363
Vinsert
p16598
I44
VSingleVariableDeclaration
p16599
tp16600
F5.75
s(g3222
I42
g3223
Vinsert
p16601
I42
VSimpleName: compareTo
p16602
tp16603
I1
s(g6781
I42
g6782
Vinsert
p16604
I42
VSimpleName: session
p16605
tp16606
I1
s(g5278
I42
g5279
Vinsert
p16607
I39
VPrimitiveType: int
p16608
tp16609
F0.5
s(g6421
I42
g6422
Vinsert
p16610
I42
VSimpleName: SimpleTimeLimiter
p16611
tp16612
I2
s(g1767
I42
g1768
Vinsert
p16613
I45
VStringLiteral: "zipkin-web"
p16614
tp16615
I1
s(g2278
I42
g2279
Vinsert
p16616
I42
VSimpleName: response
p16617
tp16618
F0.25
s(g919
I42
g920
Vinsert
p16619
I59
VVariableDeclarationFragment
p16620
tp16621
I4
s(g3120
I42
g3121
Vinsert
p16622
I43
VSimpleType: Cassandra3Storage
p16623
tp16624
F0.25
s(g2525
I42
g2526
Vinsert
p16625
I42
VSimpleName: Span
p16626
tp16627
F0.25
s(g3740
I42
g3741
Vinsert
p16628
I32
VMethodInvocation
p16629
tp16630
I3
s(g11744
I42
g11745
Vinsert
p16631
I21
VExpressionStatement
p16632
tp16633
I14
s(g8693
I42
g8694
Vinsert
p16634
I42
VSimpleName: array
p16635
tp16636
I1
s(g10568
I42
g10569
Vinsert
p16637
I42
VSimpleName: result
p16638
tp16639
I1
s(g81
I42
g82
Vinsert
p16640
I8
VBlock
p16641
tp16642
F9.25
s(g9881
I42
g9882
Vinsert
p16643
I27
VInfixExpression: ==
p16644
tp16645
I1
s(g106
I42
g107
Vinsert
p16646
I42
VSimpleName: received
p16647
tp16648
F0.25
s(g3992
I42
g3993
Vinsert
p16649
I42
VSimpleName: assertThat
p16650
tp16651
I1
s(g1916
I42
g1917
Vinsert
p16652
I25
VIfStatement
p16653
tp16654
I1
s(g1172
I42
g1173
Vinsert
p16655
I25
VIfStatement
p16656
tp16657
I3
s(g6979
I42
g6980
Vinsert
p16658
I36
VParenthesizedExpression
p16659
tp16660
I1
s(g6045
I42
g6046
Vinsert
p16661
I13
VCharacterLiteral: 'r'
p16662
tp16663
I1
s(g6853
I42
g6854
Vinsert
p16664
I42
VSimpleName: today
p16665
tp16666
F0.75
s(g3263
I42
g3264
Vinsert
p16667
I43
VSimpleType: Long
p16668
tp16669
F0.25
s(g3683
I42
g3684
Vinsert
p16670
I42
VSimpleName: NoSuchBeanDefinitionException
p16671
tp16672
F0.5
s(g7086
I42
g7087
Vinsert
p16673
I42
VSimpleName: RuntimeException
p16674
tp16675
I1
s(g3083
I42
g3084
Vinsert
p16676
I43
VSimpleType: Metric
p16677
tp16678
I1
s(g7627
I42
g7628
Vinsert
p16679
I60
VVariableDeclarationStatement
p16680
tp16681
I1
s(g259
I42
g260
Vinsert
p16682
I42
VSimpleName: Override
p16683
tp16684
F0.75
s(g1594
I42
g1595
Vinsert
p16685
I32
VMethodInvocation
p16686
tp16687
I3
s(g101
I42
g102
Vinsert
p16688
I27
VInfixExpression: !=
p16689
tp16690
I2
s(g13147
I42
g13148
Vinsert
p16691
I43
VSimpleType: Map.Entry
p16692
tp16693
I1
s(g4488
I42
g4489
Vinsert
p16694
I42
VSimpleName: tracer
p16695
tp16696
I1
s(g679
I42
g680
Vinsert
p16697
I27
VInfixExpression: !=
p16698
tp16699
I1
s(g8375
I42
g8376
Vinsert
p16700
I42
VSimpleName: csService
p16701
tp16702
I1
s(g1921
I42
g1922
Vinsert
p16703
I32
VMethodInvocation
p16704
tp16705
I2
s(g2936
I42
g2937
Vinsert
p16706
I39
VPrimitiveType: short
p16707
tp16708
I1
s(g8305
I42
g8306
Vinsert
p16709
I42
VSimpleName: ipv6
p16710
tp16711
I1
s(g5558
I42
g5559
Vinsert
p16712
I34
VNumberLiteral: 0
p16713
tp16714
I1
s(g836
I42
g837
Vinsert
p16715
I8
VBlock
p16716
tp16717
I2
s(g2350
I42
g2351
Vinsert
p16718
I40
VQualifiedName: Kind.CLIENT
p16719
tp16720
I1
s(g12399
I42
g12400
Vinsert
p16721
I8
VBlock
p16722
tp16723
I14
s(g3136
I42
g3137
Vinsert
p16724
I32
VMethodInvocation
p16725
tp16726
I2
s(g669
I42
g670
Vinsert
p16727
I42
VSimpleName: get
p16728
tp16729
I8
s(g517
I42
g518
Vinsert
p16730
I42
VSimpleName: spans
p16731
tp16732
I2
s(g5491
I42
g5492
Vinsert
p16733
I42
VSimpleName: toClear
p16734
tp16735
I1
s(g8601
I42
g8602
Vinsert
p16736
I42
VSimpleName: parse
p16737
tp16738
I1
s(g1316
I42
g1317
Vinsert
p16739
I42
VSimpleName: Call
p16740
tp16741
I3
s(g1090
I42
g1091
Vinsert
p16742
I31
VMethodDeclaration
p16743
tp16744
F0.25
s(g1489
I42
g1490
Vinsert
p16745
I83
VModifier: static
p16746
tp16747
F0.25
s(g10123
I42
g10124
Vinsert
p16748
I5
VArrayType: byte[]
p16749
tp16750
F0.25
s(g2689
I42
g2690
Vinsert
p16751
I32
VMethodInvocation
p16752
tp16753
I4
s(g4285
I42
g4286
Vinsert
p16754
I1
VAnonymousClassDeclaration
p16755
tp16756
F1.25
s(g12883
I42
g12884
Vinsert
p16757
I42
VSimpleName: String
p16758
tp16759
I3
s(g6084
I42
g6085
Vinsert
p16760
I42
VSimpleName: Thread
p16761
tp16762
I2
s(g254
I42
g255
Vinsert
p16763
I43
VSimpleType: Aggregation
p16764
tp16765
I1
s(g4052
I42
g4053
Vinsert
p16766
I42
VSimpleName: dispatcher
p16767
tp16768
F0.25
s(g4592
I42
g4593
Vinsert
p16769
I42
VSimpleName: DeduplicatingExecutor
p16770
tp16771
F0.25
s(g3348
I42
g3349
Vinsert
p16772
I42
VSimpleName: ZipkinElasticsearchProperties
p16773
tp16774
F0.25
s(g1861
I42
g1862
Vinsert
p16775
I42
VSimpleName: incrementBytes
p16776
tp16777
I2
s(g5915
I42
g5916
Vinsert
p16778
I32
VMethodInvocation
p16779
tp16780
I5
s(g2098
I42
g2099
Vinsert
p16781
I42
VSimpleName: delegate
p16782
tp16783
I3
s(g2421
I42
g2422
Vinsert
p16784
I42
VSimpleName: Test
p16785
tp16786
F0.25
s(g395
I42
g396
Vinsert
p16787
I83
VModifier: final
p16788
tp16789
I1
s(g2454
I42
g2455
Vinsert
p16790
I42
VSimpleName: List
p16791
tp16792
F0.5
s(g299
I42
g300
Vinsert
p16793
I33
VNullLiteral
p16794
tp16795
I1
s(g4673
I42
g4674
Vinsert
p16796
I42
VSimpleName: Override
p16797
tp16798
F0.25
s(g12670
I42
g12671
Vinsert
p16799
I42
VSimpleName: builder
p16800
tp16801
I4
s(g5533
I42
g5534
Vinsert
p16802
I42
VSimpleName: MockResponse
p16803
tp16804
I1
s(g5462
I42
g5463
Vinsert
p16805
I42
VSimpleName: datasource
p16806
tp16807
F1.0
s(g12296
I42
g12297
Vinsert
p16808
I43
VSimpleType: Character
p16809
tp16810
I2
s(g6776
I42
g6777
Vinsert
p16811
I78
VMarkerAnnotation
p16812
tp16813
F0.75
s(g1561
I42
g1562
Vinsert
p16814
I42
VSimpleName: e
p16815
tp16816
F0.25
s(g4913
I42
g4914
Vinsert
p16817
I42
VSimpleName: String
p16818
tp16819
I2
s(Vinsert
p16820
I42
VSimpleName: acceptedMessage
p16821
Vinsert
p16822
I57
VTypeLiteral
p16823
tp16824
F0.25
s(g944
I42
g945
Vinsert
p16825
I43
VSimpleType: ZipkinElasticsearchAwsStorageAutoConfiguration
p16826
tp16827
I1
s(Vinsert
p16828
I42
VSimpleName: getTimestamp
p16829
Vinsert
p16830
I42
VSimpleName: getId
p16831
tp16832
I1
s(g3454
I42
g3455
Vinsert
p16833
I32
VMethodInvocation
p16834
tp16835
I1
s(g3636
I42
g3637
Vinsert
p16836
I42
VSimpleName: span
p16837
tp16838
I1
s(g595
I42
g596
Vinsert
p16839
I42
VSimpleName: getName
p16840
tp16841
F0.25
s(g6376
I42
g6377
Vinsert
p16842
I7
VAssignment: =
p16843
tp16844
I1
s(g11312
I42
g11313
Vinsert
p16845
I42
VSimpleName: frontend2
p16846
tp16847
I1
s(g987
I42
g988
Vinsert
p16848
I34
VNumberLiteral: 0
p16849
tp16850
I1
s(g12296
I42
g12297
Vinsert
p16851
I59
VVariableDeclarationFragment
p16852
tp16853
I1
s(g410
I42
g411
Vinsert
p16854
I14
VClassInstanceCreation
p16855
tp16856
I2
s(g4330
I42
g4331
Vinsert
p16857
I83
VModifier: final
p16858
tp16859
I1
s(g2614
I42
g2615
Vinsert
p16860
I40
VQualifiedName: SpanBytesEncoder.JSON_V1
p16861
tp16862
F1.25
s(g492
I42
g493
Vinsert
p16863
I42
VSimpleName: input
p16864
tp16865
F0.25
s(g16828
I42
g16829
Vinsert
p16866
I42
VSimpleName: span
p16867
tp16868
I4
s(g6508
I42
g6509
Vinsert
p16869
I42
VSimpleName: get
p16870
tp16871
I1
s(g4523
I42
g4524
Vinsert
p16872
I83
VModifier: public
p16873
tp16874
F0.25
s(g1022
I42
g1023
Vinsert
p16875
I45
VStringLiteral: "6b221d5bc9e6496c"
p16876
tp16877
I1
s(g36
I42
g37
Vinsert
p16878
I45
VStringLiteral: "POST"
p16879
tp16880
I1
s(g5730
I42
g5731
Vinsert
p16881
I42
VSimpleName: message
p16882
tp16883
I1
s(g10568
I42
g10569
Vinsert
p16884
I42
VSimpleName: InetAddress
p16885
tp16886
I1
s(g3938
I42
g3939
Vinsert
p16887
I22
VFieldAccess
p16888
tp16889
F1.25
s(g2771
I42
g2772
Vinsert
p16890
I42
VSimpleName: names
p16891
tp16892
F0.25
s(g1533
I42
g1534
Vinsert
p16893
I59
VVariableDeclarationFragment
p16894
tp16895
I3
s(g11634
I42
g11635
Vinsert
p16896
I42
VSimpleName: context
p16897
tp16898
I4
s(g3541
I42
g3542
Vinsert
p16899
I43
VSimpleType: BoundStatement
p16900
tp16901
F0.25
s(g4285
I42
g4286
Vinsert
p16902
I43
VSimpleType: DependencyLink
p16903
tp16904
I2
s(g9295
I42
g9296
Vinsert
p16905
I42
VSimpleName: converted
p16906
tp16907
I1
s(g10568
I42
g10569
Vinsert
p16908
I85
VDimension
p16909
tp16910
I1
s(g156
I42
g157
Vinsert
p16911
I42
VSimpleName: String
p16912
tp16913
F1.25
s(g4451
I42
g4452
Vinsert
p16914
I42
VSimpleName: session
p16915
tp16916
F0.25
s(g7347
I42
g7348
Vinsert
p16917
I42
VSimpleName: this_present_trace_id_high
p16918
tp16919
I1
s(g3750
I42
g3751
Vinsert
p16920
I43
VSimpleType: CallbackAdapter
p16921
tp16922
I1
s(g866
I42
g867
Vinsert
p16923
I41
VReturnStatement
p16924
tp16925
F25.5
s(g5823
I42
g5824
Vinsert
p16926
I7
VAssignment: =
p16927
tp16928
F0.25
s(g2818
I42
g2819
Vinsert
p16929
I42
VSimpleName: TimeZone
p16930
tp16931
I1
s(g5533
I42
g5534
Vinsert
p16932
I39
VPrimitiveType: void
p16933
tp16934
F0.25
s(g9502
I42
g9503
Vinsert
p16935
I42
VSimpleName: ignored
p16936
tp16937
F0.25
s(g1894
I42
g1895
Vinsert
p16938
I43
VSimpleType: ElasticsearchHttpStorage.Builder
p16939
tp16940
F0.25
s(g2103
I42
g2104
Vinsert
p16941
I42
VSimpleName: response
p16942
tp16943
I1
s(g7428
I42
g7429
Vinsert
p16944
I42
VSimpleName: getTraces
p16945
tp16946
I1
s(g209
I42
g210
Vinsert
p16947
I43
VSimpleType: CallbackCaptor
p16948
tp16949
I4
s(g3393
I42
g3394
Vinsert
p16950
I42
VSimpleName: ObjectInputStream
p16951
tp16952
I2
s(g6776
I42
g6777
Vinsert
p16953
I43
VSimpleType: Boolean
p16954
tp16955
F0.75
s(g492
I42
g493
Vinsert
p16956
I21
VExpressionStatement
p16957
tp16958
I1
s(g10659
I42
g10660
Vinsert
p16959
I74
VParameterizedType: JsonAdapter<SearchRequest>
p16960
tp16961
I1
s(g4480
I42
g4481
Vinsert
p16962
I83
VModifier: public
p16963
tp16964
F0.5
s(Vinsert
p16965
I42
VSimpleName: emptyList
p16966
Vinsert
p16967
I40
VQualifiedName: request.annotations
p16968
tp16969
I2
s(g5278
I42
g5279
Vinsert
p16970
I42
VSimpleName: metrics
p16971
tp16972
F2.25
s(g7086
I42
g7087
Vinsert
p16973
I42
VSimpleName: Error
p16974
tp16975
I1
s(Vinsert
p16976
I42
VSimpleName: expectMessage
p16977
Vinsert
p16978
I42
VSimpleName: annotationCantBeCore
p16979
tp16980
F0.25
s(g4114
I42
g4115
Vinsert
p16981
I25
VIfStatement
p16982
tp16983
I3
s(g2028
I42
g2029
Vinsert
p16984
I42
VSimpleName: annotations
p16985
tp16986
I3
s(g8458
I42
g8459
Vinsert
p16987
I34
VNumberLiteral: 1000
p16988
tp16989
I11
s(g2679
I42
g2680
Vinsert
p16990
I42
VSimpleName: emojiBytes
p16991
tp16992
I1
s(g2574
I42
g2575
Vinsert
p16993
I42
VSimpleName: Collection
p16994
tp16995
F0.25
s(g4430
I42
g4431
Vinsert
p16996
I59
VVariableDeclarationFragment
p16997
tp16998
I2
s(g7533
I42
g7534
Vinsert
p16999
I42
VSimpleName: span2Consumer
p17000
tp17001
I1
s(g11325
I42
g11326
Vinsert
p17002
I39
VPrimitiveType: void
p17003
tp17004
F0.25
s(g5611
I42
g5612
Vinsert
p17005
I74
VParameterizedType: Set<String>
p17006
tp17007
I1
s(g1749
I42
g1750
Vinsert
p17008
I42
VSimpleName: networkInterceptors
p17009
tp17010
I1
s(g5528
I42
g5529
Vinsert
p17011
I25
VIfStatement
p17012
tp17013
I1
s(g6522
I42
g6523
Vinsert
p17014
I42
VSimpleName: ObjectStreamException
p17015
tp17016
F0.5
s(g1518
I42
g1519
Vinsert
p17017
I9
VBooleanLiteral: true
p17018
tp17019
I1
s(g1192
I42
g1193
Vinsert
p17020
I42
VSimpleName: readDependencyLink
p17021
tp17022
F0.25
s(g5311
I42
g5312
Vinsert
p17023
I42
VSimpleName: String
p17024
tp17025
I1
s(g1777
I42
g1778
Vinsert
p17026
I42
VSimpleName: serviceName
p17027
tp17028
I1
s(g4830
I42
g4831
Vinsert
p17029
I52
VThisExpression
p17030
tp17031
I1
s(g474
I42
g475
Vinsert
p17032
I83
VModifier: public
p17033
tp17034
F0.25
s(g2637
I42
g2638
Vinsert
p17035
I86
VLambdaExpression
p17036
tp17037
F0.25
s(g6508
I42
g6509
Vinsert
p17038
I42
VSimpleName: Span2Converter
p17039
tp17040
I3
s(g2255
I42
g2256
Vinsert
p17041
I8
VBlock
p17042
tp17043
I1
s(g1187
I42
g1188
Vinsert
p17044
I42
VSimpleName: hasDuration
p17045
tp17046
F0.25
s(g4861
I42
g4862
Vinsert
p17047
I42
VSimpleName: getType
p17048
tp17049
I1
s(g954
I42
g955
Vinsert
p17050
I8
VBlock
p17051
tp17052
I1
s(g2345
I42
g2346
Vinsert
p17053
I74
VParameterizedType: ImmutableList.Builder<Span>
p17054
tp17055
I1
s(g4631
I42
g4632
Vinsert
p17056
I42
VSimpleName: tenClientSpan2s
p17057
tp17058
F0.25
s(g7104
I42
g7105
Vinsert
p17059
I42
VSimpleName: toMillis
p17060
tp17061
I1
s(g1172
I42
g1173
Vinsert
p17062
I42
VSimpleName: annotations
p17063
tp17064
I2
s(g1484
I42
g1485
Vinsert
p17065
I59
VVariableDeclarationFragment
p17066
tp17067
I1
s(g9842
I42
g9843
Vinsert
p17068
I42
VSimpleName: Span2
p17069
tp17070
I1
s(g1265
I42
g1266
Vinsert
p17071
I8
VBlock
p17072
tp17073
F28.25
s(g3588
I42
g3589
Vinsert
p17074
I42
VSimpleName: create
p17075
tp17076
I1
s(g10551
I42
g10552
Vinsert
p17077
I41
VReturnStatement
p17078
tp17079
I1
s(g14839
I42
g14840
Vinsert
p17080
I34
VNumberLiteral: 16
p17081
tp17082
I2
s(g9471
I42
g9472
Vinsert
p17083
I42
VSimpleName: get
p17084
tp17085
I1
s(g5984
I42
g5985
Vinsert
p17086
I21
VExpressionStatement
p17087
tp17088
F3.25
s(g2740
I42
g2741
Vinsert
p17089
I43
VSimpleType: Collection
p17090
tp17091
F0.25
s(g1979
I42
g1980
Vinsert
p17092
I42
VSimpleName: reader
p17093
tp17094
I3
s(g1484
I42
g1485
Vinsert
p17095
I32
VMethodInvocation
p17096
tp17097
I24
s(g3618
I42
g3619
Vinsert
p17098
I61
VWhileStatement
p17099
tp17100
I1
s(g171
I42
g172
Vinsert
p17101
I7
VAssignment: =
p17102
tp17103
I1
s(g1443
I42
g1444
Vinsert
p17104
I42
VSimpleName: unit
p17105
tp17106
F0.25
s(g6167
I42
g6168
Vinsert
p17107
I43
VSimpleType: Insert
p17108
tp17109
F1.0
s(g949
I42
g950
Vinsert
p17110
I22
VFieldAccess
p17111
tp17112
F0.25
s(g4285
I42
g4286
Vinsert
p17113
I43
VSimpleType: ListenableFutureCall
p17114
tp17115
I1
s(g2098
I42
g2099
Vinsert
p17116
I44
VSingleVariableDeclaration
p17117
tp17118
F1.5
s(g2802
I42
g2803
Vinsert
p17119
I42
VSimpleName: check_fail_doesntWrapExceptions
p17120
tp17121
F0.25
s(g2378
I42
g2379
Vinsert
p17122
I1
VAnonymousClassDeclaration
p17123
tp17124
F0.25
s(g3974
I42
g3975
Vinsert
p17125
I45
VStringLiteral: "    \u005c"build_snapshot\u005c" : false,\u005cn"
p17126
tp17127
I3
s(g2833
I42
g2834
Vinsert
p17128
I43
VSimpleType: Span
p17129
tp17130
F0.25
s(g405
I42
g406
Vinsert
p17131
I44
VSingleVariableDeclaration
p17132
tp17133
F1.0
s(g7091
I42
g7092
Vinsert
p17134
I21
VExpressionStatement
p17135
tp17136
I1
s(g1090
I42
g1091
Vinsert
p17137
I83
VModifier: static
p17138
tp17139
F0.25
s(g2604
I42
g2605
Vinsert
p17140
I42
VSimpleName: kafka
p17141
tp17142
I3
s(g1146
I42
g1147
Vinsert
p17143
I43
VSimpleType: TypeCodecImpl
p17144
tp17145
I1
s(g9771
I42
g9772
Vinsert
p17146
I40
VQualifiedName: Node.TreeBuilder
p17147
tp17148
I2
s(g11075
I42
g11076
Vinsert
p17149
I45
VStringLiteral: "c"
p17150
tp17151
I1
s(g3017
I42
g3018
Vinsert
p17152
I42
VSimpleName: IllegalStateException
p17153
tp17154
I1
s(g5486
I42
g5487
Vinsert
p17155
I42
VSimpleName: expected
p17156
tp17157
I1
s(g8027
I42
g8028
Vinsert
p17158
I8
VBlock
p17159
tp17160
I1
s(g357
I42
g358
Vinsert
p17161
I42
VSimpleName: ann
p17162
tp17163
I1
s(g2103
I42
g2104
Vinsert
p17164
I42
VSimpleName: encodedPath
p17165
tp17166
I1
s(g426
I42
g427
Vinsert
p17167
I27
VInfixExpression: +
p17168
tp17169
I1
s(g2614
I42
g2615
Vinsert
p17170
I78
VMarkerAnnotation
p17171
tp17172
F0.75
s(g7654
I42
g7655
Vinsert
p17173
I59
VVariableDeclarationFragment
p17174
tp17175
F1.75
s(g2309
I42
g2310
Vinsert
p17176
I43
VSimpleType: IndexNameFormatter
p17177
tp17178
I1
s(g146
I42
g147
Vinsert
p17179
I32
VMethodInvocation
p17180
tp17181
I7
s(g6992
I42
g6993
Vinsert
p17182
I42
VSimpleName: calc
p17183
tp17184
I2
s(g1464
I42
g1465
Vinsert
p17185
I42
VSimpleName: List
p17186
tp17187
I1
s(g4592
I42
g4593
Vinsert
p17188
I42
VSimpleName: WRITTEN_NAMES_TTL
p17189
tp17190
F0.25
s(g14839
I42
g14840
Vinsert
p17191
I27
VInfixExpression: +
p17192
tp17193
I1
s(g5405
I42
g5406
Vinsert
p17194
I43
VSimpleType: String
p17195
tp17196
F0.25
s(g4157
I42
g4158
Vinsert
p17197
I42
VSimpleName: HOURS
p17198
tp17199
I1
s(g5034
I42
g5035
Vinsert
p17200
I42
VSimpleName: name
p17201
tp17202
I1
s(g7394
I42
g7395
Vinsert
p17203
I42
VSimpleName: Properties
p17204
tp17205
I4
s(g1816
I42
g1817
Vinsert
p17206
I42
VSimpleName: Connection
p17207
tp17208
F0.25
s(g739
I42
g740
Vinsert
p17209
I42
VSimpleName: traceIdHigh
p17210
tp17211
I1
s(g6005
I42
g6006
Vinsert
p17212
I42
VSimpleName: builder
p17213
tp17214
I2
s(g8802
I42
g8803
Vinsert
p17215
I42
VSimpleName: getTemplate
p17216
tp17217
I1
s(g3735
I42
g3736
Vinsert
p17218
I42
VSimpleName: traceIdHex
p17219
tp17220
F0.25
s(g6804
I42
g6805
Vinsert
p17221
I42
VSimpleName: isSampled
p17222
tp17223
F0.25
s(g395
I42
g396
Vinsert
p17224
I59
VVariableDeclarationFragment
p17225
tp17226
I1
s(g9244
I42
g9245
Vinsert
p17227
I57
VTypeLiteral
p17228
tp17229
I1
s(g2967
I42
g2968
Vinsert
p17230
I27
VInfixExpression: !=
p17231
tp17232
I1
s(g4983
I42
g4984
Vinsert
p17233
I42
VSimpleName: binaryAnnotations
p17234
tp17235
F1.5
s(g4928
I42
g4929
Vinsert
p17236
I42
VSimpleName: IOException
p17237
tp17238
F0.5
s(g2818
I42
g2819
Vinsert
p17239
I43
VSimpleType: DateFormat
p17240
tp17241
I1
s(g1090
I42
g1091
Vinsert
p17242
I8
VBlock
p17243
tp17244
I1
s(g4983
I42
g4984
Vinsert
p17245
I74
VParameterizedType: Collection<BinaryAnnotation>
p17246
tp17247
F0.25
s(g4712
I42
g4713
Vinsert
p17248
I42
VSimpleName: Override
p17249
tp17250
F0.25
s(g474
I42
g475
Vinsert
p17251
I42
VSimpleName: delegate
p17252
tp17253
I1
s(g552
I42
g553
Vinsert
p17254
I86
VLambdaExpression
p17255
tp17256
I2
s(g4034
I42
g4035
Vinsert
p17257
I42
VSimpleName: Collections
p17258
tp17259
I3
s(g11317
I42
g11318
Vinsert
p17260
I40
VQualifiedName: Endpoint.Builder
p17261
tp17262
I2
s(g1709
I42
g1710
Vinsert
p17263
I21
VExpressionStatement
p17264
tp17265
I1
s(Vinsert
p17266
I42
VSimpleName: newCall
p17267
Vinsert
p17268
I33
VNullLiteral
p17269
tp17270
I1
s(g7091
I42
g7092
Vinsert
p17271
I59
VVariableDeclarationFragment
p17272
tp17273
I1
s(g1372
I42
g1373
Vinsert
p17274
I42
VSimpleName: registry
p17275
tp17276
F0.25
s(g16170
I42
g16171
Vinsert
p17277
I40
VQualifiedName: span.annotations
p17278
tp17279
I4
s(g2398
I42
g2399
Vinsert
p17280
I66
VTextElement: The old consumer didn't write to the "servicespan" type on ingest. 
p17281
tp17282
F0.25
s(g2161
I42
g2162
Vinsert
p17283
I39
VPrimitiveType: int
p17284
tp17285
F0.25
s(g7582
I42
g7583
Vinsert
p17286
I45
VStringLiteral: "    \u005c"serviceName\u005c": NULL,\u005cn"
p17287
tp17288
I1
s(g1484
I42
g1485
Vinsert
p17289
I42
VSimpleName: Span
p17290
tp17291
F1.25
s(g3707
I42
g3708
Vinsert
p17292
I42
VSimpleName: Endpoint
p17293
tp17294
I2
s(g871
I42
g872
Vinsert
p17295
I21
VExpressionStatement
p17296
tp17297
I1
s(g1202
I42
g1203
Vinsert
p17298
I42
VSimpleName: get
p17299
tp17300
I1
s(g4095
I42
g4096
Vinsert
p17301
I43
VSimpleType: Bulk.Builder
p17302
tp17303
I1
s(g1045
I42
g1046
Vinsert
p17304
I44
VSingleVariableDeclaration
p17305
tp17306
F0.75
s(g2054
I42
g2055
Vinsert
p17307
I14
VClassInstanceCreation
p17308
tp17309
I1
s(g6167
I42
g6168
Vinsert
p17310
I42
VSimpleName: insert
p17311
tp17312
F2.5
s(Vinsert
p17313
I42
VSimpleName: encodeList
p17314
Vinsert
p17315
I42
VSimpleName: writeTenClientSpans_json_span2
p17316
tp17317
F0.25
s(g5897
I42
g5898
Vinsert
p17318
I41
VReturnStatement
p17319
tp17320
I1
s(g7423
I42
g7424
Vinsert
p17321
I42
VSimpleName: addCallback
p17322
tp17323
I1
s(g757
I42
g758
Vinsert
p17324
I74
VParameterizedType: Decoder<Span2>
p17325
tp17326
F0.25
s(g2614
I42
g2615
Vinsert
p17327
I42
VSimpleName: Benchmark
p17328
tp17329
F0.75
s(g1448
I42
g1449
Vinsert
p17330
I60
VVariableDeclarationStatement
p17331
tp17332
I1
s(g6776
I42
g6777
Vinsert
p17333
I58
VVariableDeclarationExpression
p17334
tp17335
I4
s(g3938
I42
g3939
Vinsert
p17336
I52
VThisExpression
p17337
tp17338
F1.25
s(g441
I42
g442
Vinsert
p17339
I42
VSimpleName: es
p17340
tp17341
I1
s(g8601
I42
g8602
Vinsert
p17342
I42
VSimpleName: zipkin
p17343
tp17344
I2
s(g4848
I42
g4849
Vinsert
p17345
I45
VStringLiteral: "http://1.1.1.1:9200"
p17346
tp17347
I1
s(g9717
I42
g9718
Vinsert
p17348
I52
VThisExpression
p17349
tp17350
F0.25
s(g770
I42
g771
Vinsert
p17351
I42
VSimpleName: ApplicationEvent
p17352
tp17353
F0.25
s(g4972
I42
g4973
Vinsert
p17354
I42
VSimpleName: STRING_LIST_ADAPTER
p17355
tp17356
I1
s(g2996
I42
g2997
Vinsert
p17357
I43
VSimpleType: Exception
p17358
tp17359
F0.25
s(Vinsert
p17360
I42
VSimpleName: accept
p17361
Vinsert
p17362
I42
VSimpleName: SpanStore
p17363
tp17364
F2.25
s(g1448
I42
g1449
Vinsert
p17365
I40
VQualifiedName: com.twitter.zipkin.gen.Annotation
p17366
tp17367
I1
s(g876
I42
g877
Vinsert
p17368
I31
VMethodDeclaration
p17369
tp17370
F0.25
s(g11825
I42
g11826
Vinsert
p17371
I14
VClassInstanceCreation
p17372
tp17373
I3
s(g11052
I42
g11053
Vinsert
p17374
I42
VSimpleName: maxSpanCount
p17375
tp17376
F0.25
s(g821
I42
g822
Vinsert
p17377
I42
VSimpleName: decode
p17378
tp17379
F0.75
s(g3916
I42
g3917
Vinsert
p17380
I34
VNumberLiteral: 350L
p17381
tp17382
I1
s(g1327
I42
g1328
Vinsert
p17383
I42
VSimpleName: Lazy
p17384
tp17385
F0.5
s(g6315
I42
g6316
Vinsert
p17386
I74
VParameterizedType: Field<?>
p17387
tp17388
F0.5
s(g836
I42
g837
Vinsert
p17389
I42
VSimpleName: Futures
p17390
tp17391
I1
s(g13601
I42
g13602
Vinsert
p17392
I43
VSimpleType: T
p17393
tp17394
F1.25
s(g12692
I42
g12693
Vinsert
p17395
I43
VSimpleType: CallbackCaptor
p17396
tp17397
I4
s(g6337
I42
g6338
Vinsert
p17398
I42
VSimpleName: assertThat
p17399
tp17400
I2
s(g166
I42
g167
Vinsert
p17401
I42
VSimpleName: Thread
p17402
tp17403
I1
s(Vinsert
p17404
I42
VSimpleName: execute
p17405
Vinsert
p17406
I42
VSimpleName: List
p17407
tp17408
F0.25
s(g1921
I42
g1922
Vinsert
p17409
I43
VSimpleType: Host
p17410
tp17411
I1
s(g4587
I42
g4588
Vinsert
p17412
I43
VSimpleType: Exception
p17413
tp17414
F0.75
s(g319
I42
g320
Vinsert
p17415
I44
VSingleVariableDeclaration
p17416
tp17417
F0.25
s(g5210
I42
g5211
Vinsert
p17418
I42
VSimpleName: sessionProvider
p17419
tp17420
I1
s(g3217
I42
g3218
Vinsert
p17421
I10
VBreakStatement
p17422
tp17423
I1
s(g1128
I42
g1129
Vinsert
p17424
I34
VNumberLiteral: 0
p17425
tp17426
I7
s(g3745
I42
g3746
Vinsert
p17427
I43
VSimpleType: AsyncSpanConsumer
p17428
tp17429
F0.5
s(g595
I42
g596
Vinsert
p17430
I8
VBlock
p17431
tp17432
I1
s(g269
I42
g270
Vinsert
p17433
I34
VNumberLiteral: 0.1f
p17434
tp17435
I1
s(g4701
I42
g4702
Vinsert
p17436
I32
VMethodInvocation
p17437
tp17438
I2
s(g4928
I42
g4929
Vinsert
p17439
I60
VVariableDeclarationStatement
p17440
tp17441
I2
s(g12798
I42
g12799
Vinsert
p17442
I42
VSimpleName: traceId
p17443
tp17444
I3
s(g7533
I42
g7534
Vinsert
p17445
I7
VAssignment: =
p17446
tp17447
I2
s(g992
I42
g993
Vinsert
p17448
I42
VSimpleName: Exception
p17449
tp17450
F1.75
s(g7251
I42
g7252
Vinsert
p17451
I40
VQualifiedName: value.timestamp
p17452
tp17453
I1
s(g1074
I42
g1075
Vinsert
p17454
I42
VSimpleName: List
p17455
tp17456
F1.25
s(g116
I42
g117
Vinsert
p17457
I42
VSimpleName: putTag
p17458
tp17459
I2
s(g1964
I42
g1965
Vinsert
p17460
I42
VSimpleName: toList
p17461
tp17462
I1
s(g3702
I42
g3703
Vinsert
p17463
I78
VMarkerAnnotation
p17464
tp17465
F0.25
s(g4275
I42
g4276
Vinsert
p17466
I42
VSimpleName: Collections
p17467
tp17468
I1
s(g7763
I42
g7764
Vinsert
p17469
I42
VSimpleName: hostsAreUrls
p17470
tp17471
F0.25
s(g749
I42
g750
Vinsert
p17472
I42
VSimpleName: duration
p17473
tp17474
I4
s(g4319
I42
g4320
Vinsert
p17475
I34
VNumberLiteral: 2
p17476
tp17477
I1
s(g1007
I42
g1008
Vinsert
p17478
I21
VExpressionStatement
p17479
tp17480
I1
s(g479
I42
g480
Vinsert
p17481
I42
VSimpleName: List
p17482
tp17483
F0.25
s(g821
I42
g822
Vinsert
p17484
I21
VExpressionStatement
p17485
tp17486
F0.75
s(g6172
I42
g6173
Vinsert
p17487
I42
VSimpleName: serializationUsesThrift
p17488
tp17489
F0.25
s(g274
I42
g275
Vinsert
p17490
I42
VSimpleName: Buffer
p17491
tp17492
I4
s(g2763
I42
g2764
Vinsert
p17493
I42
VSimpleName: Override
p17494
tp17495
F0.5
s(g1103
I42
g1104
Vinsert
p17496
I42
VSimpleName: this_present_value
p17497
tp17498
I1
s(g6745
I42
g6746
Vinsert
p17499
I44
VSingleVariableDeclaration
p17500
tp17501
F1.25
s(g811
I42
g812
Vinsert
p17502
I42
VSimpleName: assertThat
p17503
tp17504
I2
s(g4592
I42
g4593
Vinsert
p17505
I34
VNumberLiteral: 0
p17506
tp17507
F0.25
s(g1227
I42
g1228
Vinsert
p17508
I42
VSimpleName: session
p17509
tp17510
I2
s(g2802
I42
g2803
Vinsert
p17511
I32
VMethodInvocation
p17512
tp17513
I1
s(g5725
I42
g5726
Vinsert
p17514
I27
VInfixExpression: !=
p17515
tp17516
I1
s(g1146
I42
g1147
Vinsert
p17517
I32
VMethodInvocation
p17518
tp17519
I3
s(g1040
I42
g1041
Vinsert
p17520
I42
VSimpleName: JsonReaderAdapter
p17521
tp17522
F0.25
s(g2360
I42
g2361
Vinsert
p17523
I40
VQualifiedName: QueryRequest.Builder
p17524
tp17525
I2
s(g2870
I42
g2871
Vinsert
p17526
I8
VBlock
p17527
tp17528
I1
s(g4425
I42
g4426
Vinsert
p17529
I40
VQualifiedName: ElasticsearchStorage.Builder
p17530
tp17531
I1
s(g2727
I42
g2728
Vinsert
p17532
I42
VSimpleName: publicMetrics
p17533
tp17534
I1
s(g11012
I42
g11013
Vinsert
p17535
I42
VSimpleName: length
p17536
tp17537
F3.25
s(g1377
I42
g1378
Vinsert
p17538
I13
VCharacterLiteral: 'a'
p17539
tp17540
I1
s(g8397
I42
g8398
Vinsert
p17541
I42
VSimpleName: version
p17542
tp17543
F1.25
s(g2771
I42
g2772
Vinsert
p17544
I8
VBlock
p17545
tp17546
I1
s(g3707
I42
g3708
Vinsert
p17547
I39
VPrimitiveType: short
p17548
tp17549
I1
s(g1074
I42
g1075
Vinsert
p17550
I60
VVariableDeclarationStatement
p17551
tp17552
I1
s(g1969
I42
g1970
Vinsert
p17553
I42
VSimpleName: e
p17554
tp17555
I1
s(g8397
I42
g8398
Vinsert
p17556
I42
VSimpleName: startsWith
p17557
tp17558
I1
s(g10510
I42
g10511
Vinsert
p17559
I43
VSimpleType: String
p17560
tp17561
I2
s(g1032
I42
g1033
Vinsert
p17562
I25
VIfStatement
p17563
tp17564
I1
s(g2704
I42
g2705
Vinsert
p17565
I42
VSimpleName: check_ssl
p17566
tp17567
F0.25
s(g12325
I42
g12326
Vinsert
p17568
I42
VSimpleName: session
p17569
tp17570
F6.5
s(g196
I42
g197
Vinsert
p17571
I42
VSimpleName: serviceName
p17572
tp17573
F0.25
s(g3607
I42
g3608
Vinsert
p17574
I74
VParameterizedType: Producer<>
p17575
tp17576
I2
s(g1327
I42
g1328
Vinsert
p17577
I42
VSimpleName: brave
p17578
tp17579
F0.25
s(g6063
I42
g6064
Vinsert
p17580
I42
VSimpleName: span2
p17581
tp17582
F0.25
s(g674
I42
g675
Vinsert
p17583
I42
VSimpleName: lazyClient
p17584
tp17585
I1
s(g3644
I42
g3645
Vinsert
p17586
I42
VSimpleName: input
p17587
tp17588
F0.25
s(g2033
I42
g2034
Vinsert
p17589
I45
VStringLiteral: "  ]\u005cn"
p17590
tp17591
I1
s(g1561
I42
g1562
Vinsert
p17592
I42
VSimpleName: bytes
p17593
tp17594
I5
s(g4488
I42
g4489
Vinsert
p17595
I32
VMethodInvocation
p17596
tp17597
I3
s(g5505
I42
g5506
Vinsert
p17598
I7
VAssignment: =
p17599
tp17600
I4
s(g7197
I42
g7198
Vinsert
p17601
I42
VSimpleName: thrown
p17602
tp17603
F19.5
s(g3059
I42
g3060
Vinsert
p17604
I42
VSimpleName: toBuilder
p17605
tp17606
I1
s(g577
I42
g578
Vinsert
p17607
I42
VSimpleName: compute
p17608
tp17609
F0.5
s(g8152
I42
g8153
Vinsert
p17610
I39
VPrimitiveType: boolean
p17611
tp17612
F0.25
s(g7445
I42
g7446
Vinsert
p17613
I43
VSimpleType: IllegalArgumentException
p17614
tp17615
I1
s(g380
I42
g381
Vinsert
p17616
I41
VReturnStatement
p17617
tp17618
I1
s(g3051
I42
g3052
Vinsert
p17619
I42
VSimpleName: thisHadNoAnnotations
p17620
tp17621
I1
s(g5126
I42
g5127
Vinsert
p17622
I40
VQualifiedName: factory.preparedStatement
p17623
tp17624
I1
s(g6718
I42
g6719
Vinsert
p17625
I34
VNumberLiteral: 10
p17626
tp17627
I2
s(g1871
I42
g1872
Vinsert
p17628
I42
VSimpleName: indexCacheSpec
p17629
tp17630
F1.25
s(g299
I42
g300
Vinsert
p17631
I11
VCastExpression
p17632
tp17633
I1
s(g3051
I42
g3052
Vinsert
p17634
I40
VQualifiedName: that.binaryAnnotations
p17635
tp17636
I1
s(g2875
I42
g2876
Vinsert
p17637
I42
VSimpleName: mysqlUrl
p17638
tp17639
I1
s(g3296
I42
g3297
Vinsert
p17640
I42
VSimpleName: ok
p17641
tp17642
I1
s(g881
I42
g882
Vinsert
p17643
I42
VSimpleName: result
p17644
tp17645
I2
s(g2108
I42
g2109
Vinsert
p17646
I42
VSimpleName: index
p17647
tp17648
I1
s(g7240
I42
g7241
Vinsert
p17649
I8
VBlock
p17650
tp17651
I1
s(g289
I42
g290
Vinsert
p17652
I85
VDimension
p17653
tp17654
I5
s(g5286
I42
g5287
Vinsert
p17655
I42
VSimpleName: a
p17656
tp17657
I1
s(g977
I42
g978
Vinsert
p17658
I42
VSimpleName: traceIds
p17659
tp17660
I1
s(g816
I42
g817
Vinsert
p17661
I42
VSimpleName: builder
p17662
tp17663
I1
s(g919
I42
g920
Vinsert
p17664
I14
VClassInstanceCreation
p17665
tp17666
I5
s(g1118
I42
g1119
Vinsert
p17667
I42
VSimpleName: codec
p17668
tp17669
I2
s(g567
I42
g568
Vinsert
p17670
I27
VInfixExpression: *
p17671
tp17672
I1
s(g339
I42
g340
Vinsert
p17673
I34
VNumberLiteral: 3
p17674
tp17675
I1
s(g4451
I42
g4452
Vinsert
p17676
I42
VSimpleName: getConsistencyLevel
p17677
tp17678
F0.25
s(g1172
I42
g1173
Vinsert
p17679
I33
VNullLiteral
p17680
tp17681
I2
s(g380
I42
g381
Vinsert
p17682
I31
VMethodDeclaration
p17683
tp17684
F0.25
s(g3541
I42
g3542
Vinsert
p17685
I32
VMethodInvocation
p17686
tp17687
I1
s(g2589
I42
g2590
Vinsert
p17688
I40
VQualifiedName: Kind.CONSUMER
p17689
tp17690
I2
s(g3186
I42
g3187
Vinsert
p17691
I83
VModifier: private
p17692
tp17693
F0.25
s(g16828
I42
g16829
Vinsert
p17694
I33
VNullLiteral
p17695
tp17696
I2
s(g6236
I42
g6237
Vinsert
p17697
I12
VCatchClause
p17698
tp17699
I1
s(g7839
I42
g7840
Vinsert
p17700
I42
VSimpleName: newRecord
p17701
tp17702
I1
s(g4330
I42
g4331
Vinsert
p17703
I83
VModifier: private
p17704
tp17705
I1
s(g5166
I42
g5167
Vinsert
p17706
I59
VVariableDeclarationFragment
p17707
tp17708
I2
s(g9290
I42
g9291
Vinsert
p17709
I8
VBlock
p17710
tp17711
I2
s(g4114
I42
g4115
Vinsert
p17712
I32
VMethodInvocation
p17713
tp17714
I8
s(g8402
I42
g8403
Vinsert
p17715
I25
VIfStatement
p17716
tp17717
I2
s(g3393
I42
g3394
Vinsert
p17718
I42
VSimpleName: assertThat
p17719
tp17720
I2
s(g1346
I42
g1347
Vinsert
p17721
I13
VCharacterLiteral: 'o'
p17722
tp17723
I1
s(g456
I42
g457
Vinsert
p17724
I45
VStringLiteral: "Could not put "
p17725
tp17726
I1
s(g4778
I42
g4779
Vinsert
p17727
I44
VSingleVariableDeclaration
p17728
tp17729
F0.5
s(g1811
I42
g1812
Vinsert
p17730
I26
VImportDeclaration
p17731
tp17732
I1
s(g8330
I42
g8331
Vinsert
p17733
I42
VSimpleName: IllegalArgumentException
p17734
tp17735
I1
s(g1159
I42
g1160
Vinsert
p17736
I42
VSimpleName: traceId
p17737
tp17738
F0.5
s(g7112
I42
g7113
Vinsert
p17739
I8
VBlock
p17740
tp17741
I5
s(g1217
I42
g1218
Vinsert
p17742
I34
VNumberLiteral: 1444438900948000L
p17743
tp17744
I1
s(g10920
I42
g10921
Vinsert
p17745
I39
VPrimitiveType: void
p17746
tp17747
F0.25
s(g3838
I42
g3839
Vinsert
p17748
I42
VSimpleName: base
p17749
tp17750
I1
s(g6827
I42
g6828
Vinsert
p17751
I42
VSimpleName: WEB_ENDPOINT
p17752
tp17753
I1
s(g13461
I42
g13462
Vinsert
p17754
I43
VSimpleType: Pair
p17755
tp17756
I1
s(g1232
I42
g1233
Vinsert
p17757
I52
VThisExpression
p17758
tp17759
F0.5
s(g1607
I42
g1608
Vinsert
p17760
I66
VTextElement: Asynchronously writes spans to storage, subject to sampling policy.
p17761
tp17762
F0.25
s(g5166
I42
g5167
Vinsert
p17763
I42
VSimpleName: Value
p17764
tp17765
F0.5
s(g2237
I42
g2238
Vinsert
p17766
I40
VQualifiedName: Request.Builder
p17767
tp17768
I3
s(g3443
I42
g3444
Vinsert
p17769
I42
VSimpleName: request
p17770
tp17771
I1
s(g6536
I42
g6537
Vinsert
p17772
I42
VSimpleName: next
p17773
tp17774
I1
s(g13147
I42
g13148
Vinsert
p17775
I40
VQualifiedName: Map.Entry
p17776
tp17777
I1
s(g2920
I42
g2921
Vinsert
p17778
I32
VMethodInvocation
p17779
tp17780
I1
s(g7450
I42
g7451
Vinsert
p17781
I45
VStringLiteral: "{\u005cn"
p17782
tp17783
I1
s(g7568
I42
g7569
Vinsert
p17784
I42
VSimpleName: TimestampCodec
p17785
tp17786
F0.25
s(g12518
I42
g12519
Vinsert
p17787
I42
VSimpleName: setLocalDc
p17788
tp17789
F0.5
s(g949
I42
g950
Vinsert
p17790
I42
VSimpleName: traceId
p17791
tp17792
I1
s(g562
I42
g563
Vinsert
p17793
I21
VExpressionStatement
p17794
tp17795
I1
s(g329
I42
g330
Vinsert
p17796
I32
VMethodInvocation
p17797
tp17798
I5
s(g4498
I42
g4499
Vinsert
p17799
I42
VSimpleName: perform
p17800
tp17801
I1
s(g2781
I42
g2782
Vinsert
p17802
I45
VStringLiteral: ""
p17803
tp17804
F7.25
s(g9881
I42
g9882
Vinsert
p17805
I25
VIfStatement
p17806
tp17807
I1
s(g8825
I42
g8826
Vinsert
p17808
I42
VSimpleName: timestampMillis
p17809
tp17810
F0.25
s(g3340
I42
g3341
Vinsert
p17811
I59
VVariableDeclarationFragment
p17812
tp17813
I1
s(g9791
I42
g9792
Vinsert
p17814
I8
VBlock
p17815
tp17816
I1
s(g659
I42
g660
Vinsert
p17817
I42
VSimpleName: T
p17818
tp17819
F1.25
s(Vinsert
p17820
I42
VSimpleName: newBuilder
p17821
Vinsert
p17822
I42
VSimpleName: queryRequest
p17823
tp17824
I1
s(g3064
I42
g3065
Vinsert
p17825
I14
VClassInstanceCreation
p17826
tp17827
I1
s(g126
I42
g127
Vinsert
p17828
I42
VSimpleName: Test
p17829
tp17830
F0.75
s(g3393
I42
g3394
Vinsert
p17831
I43
VSimpleType: ObjectInputStream
p17832
tp17833
I2
s(g5311
I42
g5312
Vinsert
p17834
I42
VSimpleName: metrics
p17835
tp17836
I1
s(g8652
I42
g8653
Vinsert
p17837
I45
VStringLiteral: "-Dmapper.allow_dots_in_name=true -Xms512m -Xmx512m"
p17838
tp17839
I1
s(g3263
I42
g3264
Vinsert
p17840
I8
VBlock
p17841
tp17842
I1
s(Vinsert
p17843
I42
VSimpleName: create
p17844
Vinsert
p17845
I43
VSimpleType: CassandraStorage
p17846
tp17847
F0.25
s(Vinsert
p17848
I42
VSimpleName: toBuilder
p17849
Vinsert
p17850
I42
VSimpleName: ZipkinCassandraStorageProperties
p17851
tp17852
F0.25
s(g6145
I42
g6146
Vinsert
p17853
I42
VSimpleName: List
p17854
tp17855
I1
s(g3867
I42
g3868
Vinsert
p17856
I43
VSimpleType: Span
p17857
tp17858
F0.25
s(g304
I42
g305
Vinsert
p17859
I42
VSimpleName: receivedSpanBytes
p17860
tp17861
I1
s(g4385
I42
g4386
Vinsert
p17862
I42
VSimpleName: Test
p17863
tp17864
F1.25
s(g259
I42
g260
Vinsert
p17865
I31
VMethodDeclaration
p17866
tp17867
F0.75
s(Vinsert
p17868
I42
VSimpleName: toBuilder
p17869
Vinsert
p17870
I42
VSimpleName: Exception
p17871
tp17872
F0.25
s(g8027
I42
g8028
Vinsert
p17873
I42
VSimpleName: builder
p17874
tp17875
I1
s(g1709
I42
g1710
Vinsert
p17876
I14
VClassInstanceCreation
p17877
tp17878
I1
s(g4768
I42
g4769
Vinsert
p17879
I40
VQualifiedName: ElasticsearchConstants.SPAN
p17880
tp17881
I1
s(g871
I42
g872
Vinsert
p17882
I32
VMethodInvocation
p17883
tp17884
I3
s(g4701
I42
g4702
Vinsert
p17885
I59
VVariableDeclarationFragment
p17886
tp17887
I1
s(g11
I42
g12
Vinsert
p17888
I42
VSimpleName: DEPENDENCY
p17889
tp17890
I1
s(g2949
I42
g2950
Vinsert
p17891
I27
VInfixExpression: <
p17892
tp17893
I2
s(g704
I42
g705
Vinsert
p17894
I42
VSimpleName: apply
p17895
tp17896
I1
s(g2464
I42
g2465
Vinsert
p17897
I42
VSimpleName: body
p17898
tp17899
I1
s(g2891
I42
g2892
Vinsert
p17900
I62
VInstanceofExpression
p17901
tp17902
I1
s(g2005
I42
g2006
Vinsert
p17903
I42
VSimpleName: List
p17904
tp17905
F1.25
s(g2365
I42
g2366
Vinsert
p17906
I74
VParameterizedType: ListenableFuture<V>
p17907
tp17908
F0.25
s(g5873
I42
g5874
Vinsert
p17909
I42
VSimpleName: ipv6_mapped
p17910
tp17911
I1
s(g7096
I42
g7097
Vinsert
p17912
I14
VClassInstanceCreation
p17913
tp17914
I2
s(g466
I42
g467
Vinsert
p17915
I41
VReturnStatement
p17916
tp17917
F0.25
s(g5515
I42
g5516
Vinsert
p17918
I42
VSimpleName: parentId
p17919
tp17920
I1
s(g5666
I42
g5667
Vinsert
p17921
I42
VSimpleName: APP_ENDPOINT
p17922
tp17923
I1
s(g1916
I42
g1917
Vinsert
p17924
I8
VBlock
p17925
tp17926
I2
s(g6827
I42
g6828
Vinsert
p17927
I40
VQualifiedName: Span.Builder
p17928
tp17929
I6
s(g7086
I42
g7087
Vinsert
p17930
I32
VMethodInvocation
p17931
tp17932
I1
s(g7240
I42
g7241
Vinsert
p17933
I43
VSimpleType: SpanConsumer
p17934
tp17935
F0.25
s(g4430
I42
g4431
Vinsert
p17936
I43
VSimpleType: Set
p17937
tp17938
I2
s(g3199
I42
g3200
Vinsert
p17939
I43
VSimpleType: List
p17940
tp17941
F0.25
s(Vinsert
p17942
I42
VSimpleName: get
p17943
Vinsert
p17944
I42
VSimpleName: Trace
p17945
tp17946
F0.25
s(g239
I42
g240
Vinsert
p17947
I7
VAssignment: =
p17948
tp17949
I1
s(g1017
I42
g1018
Vinsert
p17950
I42
VSimpleName: serviceNameAggregation_mergesAnnotationAndBinaryAnnotation
p17951
tp17952
F0.25
s(g2273
I42
g2274
Vinsert
p17953
I74
VParameterizedType: Iterable<Span>
p17954
tp17955
F0.25
s(g6145
I42
g6146
Vinsert
p17956
I42
VSimpleName: indices
p17957
tp17958
I1
s(g4557
I42
g4558
Vinsert
p17959
I45
VStringLiteral: "q"
p17960
tp17961
I1
s(g11368
I42
g11369
Vinsert
p17962
I42
VSimpleName: callCount
p17963
tp17964
I1
s(g16
I42
g17
Vinsert
p17965
I34
VNumberLiteral: 137L
p17966
tp17967
I1
s(g479
I42
g480
Vinsert
p17968
I31
VMethodDeclaration
p17969
tp17970
F0.25
s(g4523
I42
g4524
Vinsert
p17971
I42
VSimpleName: Benchmark
p17972
tp17973
F0.25
s(g3725
I42
g3726
Vinsert
p17974
I42
VSimpleName: that
p17975
tp17976
I2
s(g8751
I42
g8752
Vinsert
p17977
I40
VQualifiedName: TimeUnit.MILLISECONDS
p17978
tp17979
I1
s(g949
I42
g950
Vinsert
p17980
I25
VIfStatement
p17981
tp17982
I1
s(g3683
I42
g3684
Vinsert
p17983
I44
VSingleVariableDeclaration
p17984
tp17985
F0.25
s(g4293
I42
g4294
Vinsert
p17986
I40
VQualifiedName: Codec.JSON
p17987
tp17988
I2
s(g11075
I42
g11076
Vinsert
p17989
I45
VStringLiteral: "e"
p17990
tp17991
I1
s(g4493
I42
g4494
Vinsert
p17992
I42
VSimpleName: getStreams
p17993
tp17994
I1
s(g8397
I42
g8398
Vinsert
p17995
I45
VStringLiteral: "2"
p17996
tp17997
I1
s(g9867
I42
g9868
Vinsert
p17998
I43
VSimpleType: MariaDbDataSource
p17999
tp18000
I1
s(g2179
I42
g2180
Vinsert
p18001
I34
VNumberLiteral: 1000
p18002
tp18003
F0.25
s(g1265
I42
g1266
Vinsert
p18004
I83
VModifier: protected
p18005
tp18006
F1.75
s(g2224
I42
g2225
Vinsert
p18007
I43
VSimpleType: Callback
p18008
tp18009
F0.25
s(g11368
I42
g11369
Vinsert
p18010
I42
VSimpleName: child
p18011
tp18012
I1
s(Vinsert
p18013
I42
VSimpleName: startsWith
p18014
Vinsert
p18015
I43
VSimpleType: Codec
p18016
tp18017
F0.25
s(Vinsert
p18018
I42
VSimpleName: fromJson
p18019
Vinsert
p18020
I42
VSimpleName: withLower64bitsTraceId
p18021
tp18022
I1
s(g4301
I42
g4302
Vinsert
p18023
I27
VInfixExpression: &&
p18024
tp18025
I1
s(g456
I42
g457
Vinsert
p18026
I53
VThrowStatement
p18027
tp18028
I1
s(Vinsert
p18029
I42
VSimpleName: expect
p18030
Vinsert
p18031
I66
VTextElement: The old schema PRIMARY KEY doesn't consider trace_id, so will only see bucket count traces to a
p18032
tp18033
F0.25
s(g3515
I42
g3516
Vinsert
p18034
I43
VSimpleType: String
p18035
tp18036
F1.25
s(g2237
I42
g2238
Vinsert
p18037
I42
VSimpleName: forwarded
p18038
tp18039
I1
s(g744
I42
g745
Vinsert
p18040
I39
VPrimitiveType: long
p18041
tp18042
F0.5
s(g10551
I42
g10552
Vinsert
p18043
I43
VSimpleType: String
p18044
tp18045
F0.25
s(g3938
I42
g3939
Vinsert
p18046
I43
VSimpleType: BitSet
p18047
tp18048
I1
s(g5391
I42
g5392
Vinsert
p18049
I43
VSimpleType: Integer
p18050
tp18051
I1
s(g2901
I42
g2902
Vinsert
p18052
I25
VIfStatement
p18053
tp18054
I6
s(g1123
I42
g1124
Vinsert
p18055
I42
VSimpleName: result
p18056
tp18057
I12
s(g1987
I42
g1988
Vinsert
p18058
I42
VSimpleName: createField
p18059
tp18060
I5
s(g1032
I42
g1033
Vinsert
p18061
I32
VMethodInvocation
p18062
tp18063
I2
s(g3155
I42
g3156
Vinsert
p18064
I42
VSimpleName: Nullable
p18065
tp18066
F0.25
s(g3560
I42
g3561
Vinsert
p18067
I74
VParameterizedType: SettableFuture<Void>
p18068
tp18069
I1
s(g5523
I42
g5524
Vinsert
p18070
I42
VSimpleName: value
p18071
tp18072
I1
s(g10487
I42
g10488
Vinsert
p18073
I40
VQualifiedName: Request.Builder
p18074
tp18075
I1
s(g5435
I42
g5436
Vinsert
p18076
I25
VIfStatement
p18077
tp18078
I1
s(g1448
I42
g1449
Vinsert
p18079
I42
VSimpleName: List
p18080
tp18081
I1
s(g5421
I42
g5422
Vinsert
p18082
I42
VSimpleName: call
p18083
tp18084
I2
s(g3372
I42
g3373
Vinsert
p18085
I40
VQualifiedName: parentSpan.traceId
p18086
tp18087
I1
s(g3485
I42
g3486
Vinsert
p18088
I32
VMethodInvocation
p18089
tp18090
I1
s(g196
I42
g197
Vinsert
p18091
I42
VSimpleName: Preconditions
p18092
tp18093
I1
s(g2436
I42
g2437
Vinsert
p18094
I42
VSimpleName: opt
p18095
tp18096
I1
s(g8606
I42
g8607
Vinsert
p18097
I42
VSimpleName: searchingByAnnotationShouldFilterBeforeLimiting
p18098
tp18099
F0.25
s(g3160
I42
g3161
Vinsert
p18100
I43
VSimpleType: Exception
p18101
tp18102
F0.25
s(g11191
I42
g11192
Vinsert
p18103
I42
VSimpleName: emptyList
p18104
tp18105
I1
s(g12361
I42
g12362
Vinsert
p18106
I42
VSimpleName: asList
p18107
tp18108
I1
s(g5738
I42
g5739
Vinsert
p18109
I42
VSimpleName: SERVER_RECV
p18110
tp18111
I1
s(g9174
I42
g9175
Vinsert
p18112
I43
VSimpleType: LinkedHashMap
p18113
tp18114
I2
s(g10123
I42
g10124
Vinsert
p18115
I85
VDimension
p18116
tp18117
F0.25
s(g2475
I42
g2476
Vinsert
p18118
I44
VSingleVariableDeclaration
p18119
tp18120
F1.25
s(g7897
I42
g7898
Vinsert
p18121
I74
VParameterizedType: Callback<Void>
p18122
tp18123
F0.5
s(g2426
I42
g2427
Vinsert
p18124
I42
VSimpleName: UnsupportedEncodingException
p18125
tp18126
F0.25
s(g1851
I42
g1852
Vinsert
p18127
I42
VSimpleName: evictToRecoverSpans
p18128
tp18129
I1
s(g816
I42
g817
Vinsert
p18130
I27
VInfixExpression: -
p18131
tp18132
I3
s(g1332
I42
g1333
Vinsert
p18133
I42
VSimpleName: Override
p18134
tp18135
F0.25
s(g7331
I42
g7332
Vinsert
p18136
I27
VInfixExpression: ==
p18137
tp18138
I2
s(g3288
I42
g3289
Vinsert
p18139
I42
VSimpleName: bytes
p18140
tp18141
I4
s(g909
I42
g910
Vinsert
p18142
I34
VNumberLiteral: 0
p18143
tp18144
F1.25
s(g76
I42
g77
Vinsert
p18145
I42
VSimpleName: MAX_SAFE_INTEGER
p18146
tp18147
I1
s(g11
I42
g12
Vinsert
p18148
I45
VStringLiteral: "tags."
p18149
tp18150
F0.25
s(g1108
I42
g1109
Vinsert
p18151
I42
VSimpleName: builder
p18152
tp18153
I3
s(g2135
I42
g2136
Vinsert
p18154
I8
VBlock
p18155
tp18156
F4.25
s(g126
I42
g127
Vinsert
p18157
I42
VSimpleName: memoizesIndexTemplate
p18158
tp18159
F0.25
s(g7502
I42
g7503
Vinsert
p18160
I59
VVariableDeclarationFragment
p18161
tp18162
F1.25
s(g2712
I42
g2713
Vinsert
p18163
I42
VSimpleName: String
p18164
tp18165
F0.25
s(g7292
I42
g7293
Vinsert
p18166
I42
VSimpleName: build
p18167
tp18168
I1
s(g11744
I42
g11745
Vinsert
p18169
I45
VStringLiteral: "SELECT now() FROM system.local"
p18170
tp18171
I1
s(g191
I42
g192
Vinsert
p18172
I42
VSimpleName: APP_ENDPOINT
p18173
tp18174
I1
s(g219
I42
g220
Vinsert
p18175
I59
VVariableDeclarationFragment
p18176
tp18177
I3
s(g6663
I42
g6664
Vinsert
p18178
I43
VSimpleType: InMemoryStorage
p18179
tp18180
I4
s(g636
I42
g637
Vinsert
p18181
I32
VMethodInvocation
p18182
tp18183
I3
s(g146
I42
g147
Vinsert
p18184
I21
VExpressionStatement
p18185
tp18186
I1
s(g1911
I42
g1912
Vinsert
p18187
I21
VExpressionStatement
p18188
tp18189
I12
s(g234
I42
g235
Vinsert
p18190
I25
VIfStatement
p18191
tp18192
I1
s(g7428
I42
g7429
Vinsert
p18193
I42
VSimpleName: builder
p18194
tp18195
I4
s(g6853
I42
g6854
Vinsert
p18196
I27
VInfixExpression: +
p18197
tp18198
F0.5
s(g694
I42
g695
Vinsert
p18199
I43
VSimpleType: BinaryAnnotation
p18200
tp18201
I1
s(g4712
I42
g4713
Vinsert
p18202
I42
VSimpleName: exchange
p18203
tp18204
F1.25
s(g2038
I42
g2039
Vinsert
p18205
I42
VSimpleName: client
p18206
tp18207
I1
s(g1270
I42
g1271
Vinsert
p18208
I42
VSimpleName: Class
p18209
tp18210
I2
s(g522
I42
g523
Vinsert
p18211
I34
VNumberLiteral: 1
p18212
tp18213
F0.25
s(g4016
I42
g4017
Vinsert
p18214
I29
VJavadoc
p18215
tp18216
F0.25
s(g1032
I42
g1033
Vinsert
p18217
I42
VSimpleName: length
p18218
tp18219
I1
s(g6699
I42
g6700
Vinsert
p18220
I14
VClassInstanceCreation
p18221
tp18222
I2
s(g3541
I42
g3542
Vinsert
p18223
I42
VSimpleName: key
p18224
tp18225
F0.25
s(Vinsert
p18226
I42
VSimpleName: expectMessage
p18227
Vinsert
p18228
I42
VSimpleName: IllegalArgumentException
p18229
tp18230
I3
s(g6094
I42
g6095
Vinsert
p18231
I44
VSingleVariableDeclaration
p18232
tp18233
F0.25
s(g11012
I42
g11013
Vinsert
p18234
I34
VNumberLiteral: 5
p18235
tp18236
I1
s(g1785
I42
g1786
Vinsert
p18237
I42
VSimpleName: String
p18238
tp18239
F0.5
s(g6731
I42
g6732
Vinsert
p18240
I42
VSimpleName: String
p18241
tp18242
F0.5
s(g1704
I42
g1705
Vinsert
p18243
I43
VSimpleType: BigInteger
p18244
tp18245
I2
s(g3004
I42
g3005
Vinsert
p18246
I42
VSimpleName: V2StorageComponent
p18247
tp18248
I4
s(g474
I42
g475
Vinsert
p18249
I39
VPrimitiveType: boolean
p18250
tp18251
F0.25
s(g861
I42
g862
Vinsert
p18252
I42
VSimpleName: jsonCodec
p18253
tp18254
I1
s(g517
I42
g518
Vinsert
p18255
I42
VSimpleName: iterator
p18256
tp18257
I2
s(g6050
I42
g6051
Vinsert
p18258
I42
VSimpleName: create
p18259
tp18260
I1
s(g1556
I42
g1557
Vinsert
p18261
I42
VSimpleName: String
p18262
tp18263
I4
s(g3168
I42
g3169
Vinsert
p18264
I59
VVariableDeclarationFragment
p18265
tp18266
I1
s(g14839
I42
g14840
Vinsert
p18267
I25
VIfStatement
p18268
tp18269
I1
s(g4792
I42
g4793
Vinsert
p18270
I42
VSimpleName: backend
p18271
tp18272
I1
s(g1546
I42
g1547
Vinsert
p18273
I16
VConditionalExpression
p18274
tp18275
I3
s(g5897
I42
g5898
Vinsert
p18276
I83
VModifier: abstract
p18277
tp18278
F0.25
s(g1886
I42
g1887
Vinsert
p18279
I41
VReturnStatement
p18280
tp18281
I1
s(g2013
I42
g2014
Vinsert
p18282
I42
VSimpleName: onSuccess
p18283
tp18284
I1
s(g992
I42
g993
Vinsert
p18285
I42
VSimpleName: redirectsRootToZipkin
p18286
tp18287
F0.25
s(g1767
I42
g1768
Vinsert
p18288
I60
VVariableDeclarationStatement
p18289
tp18290
I1
s(g10274
I42
g10275
Vinsert
p18291
I43
VSimpleType: Call
p18292
tp18293
F0.25
s(g2901
I42
g2902
Vinsert
p18294
I42
VSimpleName: Nullable
p18295
tp18296
F0.25
s(g15097
I42
g15098
Vinsert
p18297
I40
VQualifiedName: request.serviceName
p18298
tp18299
I1
s(g7897
I42
g7898
Vinsert
p18300
I44
VSingleVariableDeclaration
p18301
tp18302
F0.75
s(g3588
I42
g3589
Vinsert
p18303
I42
VSimpleName: Sampler
p18304
tp18305
I1
s(g1443
I42
g1444
Vinsert
p18306
I42
VSimpleName: delegate
p18307
tp18308
I1
s(g249
I42
g250
Vinsert
p18309
I42
VSimpleName: String
p18310
tp18311
F0.25
s(g5405
I42
g5406
Vinsert
p18312
I44
VSingleVariableDeclaration
p18313
tp18314
F0.5
s(g1934
I42
g1935
Vinsert
p18315
I42
VSimpleName: clear
p18316
tp18317
I1
s(g12399
I42
g12400
Vinsert
p18318
I42
VSimpleName: result
p18319
tp18320
I2
s(g6045
I42
g6046
Vinsert
p18321
I13
VCharacterLiteral: 'e'
p18322
tp18323
I2
s(g3772
I42
g3773
Vinsert
p18324
I42
VSimpleName: LazyStreams
p18325
tp18326
F0.25
s(g3599
I42
g3600
Vinsert
p18327
I42
VSimpleName: hosts
p18328
tp18329
F0.5
s(g831
I42
g832
Vinsert
p18330
I42
VSimpleName: PartitionKeyToTraceId
p18331
tp18332
I1
s(g13800
I42
g13801
Vinsert
p18333
I42
VSimpleName: spansInJson
p18334
tp18335
I2
s(g2996
I42
g2997
Vinsert
p18336
I42
VSimpleName: List
p18337
tp18338
F0.25
s(g8294
I42
g8295
Vinsert
p18339
I42
VSimpleName: Test
p18340
tp18341
F0.75
s(g5807
I42
g5808
Vinsert
p18342
I42
VSimpleName: newSampler
p18343
tp18344
I1
s(g1979
I42
g1980
Vinsert
p18345
I42
VSimpleName: beginArray
p18346
tp18347
I1
s(g1607
I42
g1608
Vinsert
p18348
I42
VSimpleName: Iterator
p18349
tp18350
I1
s(g5910
I42
g5911
Vinsert
p18351
I42
VSimpleName: Buffer
p18352
tp18353
I4
s(g385
I42
g386
Vinsert
p18354
I42
VSimpleName: IOException
p18355
tp18356
F0.25
s(g904
I42
g905
Vinsert
p18357
I42
VSimpleName: health
p18358
tp18359
I1
s(g2203
I42
g2204
Vinsert
p18360
I42
VSimpleName: T
p18361
tp18362
F0.25
s(g6145
I42
g6146
Vinsert
p18363
I42
VSimpleName: current
p18364
tp18365
I1
s(g582
I42
g583
Vinsert
p18366
I42
VSimpleName: replace
p18367
tp18368
I2
s(g1448
I42
g1449
Vinsert
p18369
I42
VSimpleName: span
p18370
tp18371
I2
s(g1270
I42
g1271
Vinsert
p18372
I21
VExpressionStatement
p18373
tp18374
I2
s(g2219
I42
g2220
Vinsert
p18375
I42
VSimpleName: String
p18376
tp18377
I1
s(g146
I42
g147
Vinsert
p18378
I34
VNumberLiteral: 10
p18379
tp18380
I1
s(g3979
I42
g3980
Vinsert
p18381
I7
VAssignment: =
p18382
tp18383
F0.25
s(g441
I42
g442
Vinsert
p18384
I43
VSimpleType: LenientDoubleCallbackAsyncSpanStore
p18385
tp18386
I1
s(g5008
I42
g5009
Vinsert
p18387
I42
VSimpleName: spans
p18388
tp18389
F1.5
s(g1841
I42
g1842
Vinsert
p18390
I66
VTextElement: Particulary, thrift can mistake malformed content as a huge list. Let's not blow up.
p18391
tp18392
F0.25
s(g1367
I42
g1368
Vinsert
p18393
I39
VPrimitiveType: boolean
p18394
tp18395
F0.25
s(g3307
I42
g3308
Vinsert
p18396
I16
VConditionalExpression
p18397
tp18398
I1
s(g7627
I42
g7628
Vinsert
p18399
I42
VSimpleName: SENTINEL
p18400
tp18401
I1
s(g12218
I42
g12219
Vinsert
p18402
I43
VSimpleType: Node
p18403
tp18404
I1
s(g1113
I42
g1114
Vinsert
p18405
I32
VMethodInvocation
p18406
tp18407
I11
s(g1926
I42
g1927
Vinsert
p18408
I14
VClassInstanceCreation
p18409
tp18410
I1
s(g1242
I42
g1243
Vinsert
p18411
I42
VSimpleName: Call
p18412
tp18413
I2
s(g537
I42
g538
Vinsert
p18414
I32
VMethodInvocation
p18415
tp18416
I5
s(g8842
I42
g8843
Vinsert
p18417
I32
VMethodInvocation
p18418
tp18419
I19
s(g15846
I42
g15847
Vinsert
p18420
I74
VParameterizedType: Iterable<Span>
p18421
tp18422
F0.25
s(g2789
I42
g2790
Vinsert
p18423
I43
VSimpleType: Endpoint
p18424
tp18425
I1
s(g1665
I42
g1666
Vinsert
p18426
I83
VModifier: public
p18427
tp18428
F1.25
s(g4306
I42
g4307
Vinsert
p18429
I21
VExpressionStatement
p18430
tp18431
I1
s(g2579
I42
g2580
Vinsert
p18432
I42
VSimpleName: List
p18433
tp18434
F2.75
s(g17266
I42
g17267
Vinsert
p18435
I42
VSimpleName: trace
p18436
tp18437
I1
s(g914
I42
g915
Vinsert
p18438
I42
VSimpleName: ERROR_COUNT
p18439
tp18440
I1
s(g7014
I42
g7015
Vinsert
p18441
I42
VSimpleName: ByteBuffer
p18442
tp18443
I1
s(g289
I42
g290
Vinsert
p18444
I42
VSimpleName: LOTS_OF_SPANS
p18445
tp18446
I2
s(g8855
I42
g8856
Vinsert
p18447
I43
VSimpleType: AWSSignatureVersion4
p18448
tp18449
F0.25
s(g2740
I42
g2741
Vinsert
p18450
I42
VSimpleName: T
p18451
tp18452
F0.25
s(g5316
I42
g5317
Vinsert
p18453
I8
VBlock
p18454
tp18455
I3
s(g4330
I42
g4331
Vinsert
p18456
I42
VSimpleName: Maps
p18457
tp18458
I1
s(g8842
I42
g8843
Vinsert
p18459
I85
VDimension
p18460
tp18461
I1
s(g3136
I42
g3137
Vinsert
p18462
I8
VBlock
p18463
tp18464
I1
s(g16271
I42
g16272
Vinsert
p18465
I42
VSimpleName: delegate
p18466
tp18467
I1
s(g3628
I42
g3629
Vinsert
p18468
I42
VSimpleName: toString
p18469
tp18470
F0.25
s(g1017
I42
g1018
Vinsert
p18471
I42
VSimpleName: result
p18472
tp18473
F1.25
s(g2028
I42
g2029
Vinsert
p18474
I33
VNullLiteral
p18475
tp18476
F4.5
s(g2789
I42
g2790
Vinsert
p18477
I60
VVariableDeclarationStatement
p18478
tp18479
I1
s(Vinsert
p18480
I42
VSimpleName: get
p18481
Vinsert
p18482
I43
VSimpleType: BinaryAnnotation
p18483
tp18484
I1
s(g2278
I42
g2279
Vinsert
p18485
I8
VBlock
p18486
tp18487
I1
s(g2818
I42
g2819
Vinsert
p18488
I42
VSimpleName: DateFormat
p18489
tp18490
I1
s(g4568
I42
g4569
Vinsert
p18491
I43
VSimpleType: Aggregation
p18492
tp18493
F0.25
s(g136
I42
g137
Vinsert
p18494
I74
VParameterizedType: Ordering<List<Span>>
p18495
tp18496
I1
s(g1866
I42
g1867
Vinsert
p18497
I43
VSimpleType: ElasticsearchStorage
p18498
tp18499
F2.5
s(g1293
I42
g1294
Vinsert
p18500
I5
VArrayType: String[]
p18501
tp18502
F0.25
s(g724
I42
g725
Vinsert
p18503
I42
VSimpleName: LatencyAwarePolicy
p18504
tp18505
I1
s(g4451
I42
g4452
Vinsert
p18506
I40
VQualifiedName: ConsistencyLevel.ONE
p18507
tp18508
F0.25
s(g6508
I42
g6509
Vinsert
p18509
I32
VMethodInvocation
p18510
tp18511
F5.25
s(g729
I42
g730
Vinsert
p18512
I42
VSimpleName: level
p18513
tp18514
F1.25
s(g1053
I42
g1054
Vinsert
p18515
I42
VSimpleName: Platform
p18516
tp18517
I1
s(g9513
I42
g9514
Vinsert
p18518
I42
VSimpleName: build
p18519
tp18520
I4
s(g2694
I42
g2695
Vinsert
p18521
I60
VVariableDeclarationStatement
p18522
tp18523
I2
s(g10510
I42
g10511
Vinsert
p18524
I42
VSimpleName: String
p18525
tp18526
I2
s(g12333
I42
g12334
Vinsert
p18527
I42
VSimpleName: ArrayList
p18528
tp18529
I1
s(g497
I42
g498
Vinsert
p18530
I78
VMarkerAnnotation
p18531
tp18532
F0.25
s(g8272
I42
g8273
Vinsert
p18533
I43
VSimpleType: InterruptedException
p18534
tp18535
F0.25
s(g6236
I42
g6237
Vinsert
p18536
I14
VClassInstanceCreation
p18537
tp18538
I1
s(g426
I42
g427
Vinsert
p18539
I42
VSimpleName: adjustedSpans
p18540
tp18541
I1
s(g2642
I42
g2643
Vinsert
p18542
I42
VSimpleName: cache
p18543
tp18544
I3
s(g3110
I42
g3111
Vinsert
p18545
I8
VBlock
p18546
tp18547
I5
s(g2823
I42
g2824
Vinsert
p18548
I34
VNumberLiteral: 0
p18549
tp18550
I1
s(g4568
I42
g4569
Vinsert
p18551
I32
VMethodInvocation
p18552
tp18553
I1
s(g12441
I42
g12442
Vinsert
p18554
I49
VSwitchCase
p18555
tp18556
I1
s(g744
I42
g745
Vinsert
p18557
I42
VSimpleName: day
p18558
tp18559
I1
s(g14839
I42
g14840
Vinsert
p18560
I7
VAssignment: +=
p18561
tp18562
I1
s(g11001
I42
g11002
Vinsert
p18563
I43
VSimpleType: IOException
p18564
tp18565
F0.5
s(g1911
I42
g1912
Vinsert
p18566
I13
VCharacterLiteral: '\u005cn'
p18567
tp18568
I1
s(g2018
I42
g2019
Vinsert
p18569
I45
VStringLiteral: "get-node"
p18570
tp18571
I1
s(g5984
I42
g5985
Vinsert
p18572
I42
VSimpleName: iterator
p18573
tp18574
I4
s(g3263
I42
g3264
Vinsert
p18575
I32
VMethodInvocation
p18576
tp18577
I1
s(g7502
I42
g7503
Vinsert
p18578
I33
VNullLiteral
p18579
tp18580
F0.5
s(g5053
I42
g5054
Vinsert
p18581
I65
VTagElement: @see
p18582
tp18583
F0.25
s(g811
I42
g812
Vinsert
p18584
I42
VSimpleName: extracting
p18585
tp18586
I1
s(g9295
I42
g9296
Vinsert
p18587
I27
VInfixExpression: ||
p18588
tp18589
I1
s(g380
I42
g381
Vinsert
p18590
I42
VSimpleName: Benchmark
p18591
tp18592
F0.25
s(g11191
I42
g11192
Vinsert
p18593
I41
VReturnStatement
p18594
tp18595
I2
s(g9859
I42
g9860
Vinsert
p18596
I40
VQualifiedName: builder.hosts
p18597
tp18598
F0.25
s(g954
I42
g955
Vinsert
p18599
I14
VClassInstanceCreation
p18600
tp18601
I1
s(g757
I42
g758
Vinsert
p18602
I43
VSimpleType: Span2
p18603
tp18604
F0.25
s(g3125
I42
g3126
Vinsert
p18605
I42
VSimpleName: v
p18606
tp18607
I1
s(g3046
I42
g3047
Vinsert
p18608
I42
VSimpleName: HttpLoggingInterceptor
p18609
tp18610
I1
s(g1969
I42
g1970
Vinsert
p18611
I42
VSimpleName: codec
p18612
tp18613
I1
s(g4840
I42
g4841
Vinsert
p18614
I42
VSimpleName: indexCacheTtl
p18615
tp18616
F0.75
s(g7019
I42
g7020
Vinsert
p18617
I22
VFieldAccess
p18618
tp18619
F0.25
s(g5738
I42
g5739
Vinsert
p18620
I27
VInfixExpression: *
p18621
tp18622
I4
s(g5316
I42
g5317
Vinsert
p18623
I42
VSimpleName: doubleCallback
p18624
tp18625
I1
s(g1103
I42
g1104
Vinsert
p18626
I40
VQualifiedName: that.timestamp
p18627
tp18628
I1
s(g3974
I42
g3975
Vinsert
p18629
I45
VStringLiteral: "    \u005c"build_timestamp\u005c" : \u005c"2015-10-15T09:14:17Z\u005c",\u005cn"
p18630
tp18631
I1
s(g1856
I42
g1857
Vinsert
p18632
I25
VIfStatement
p18633
tp18634
I1
s(g2717
I42
g2718
Vinsert
p18635
I42
VSimpleName: logger
p18636
tp18637
I1
s(g8522
I42
g8523
Vinsert
p18638
I59
VVariableDeclarationFragment
p18639
tp18640
I3
s(g3233
I42
g3234
Vinsert
p18641
I32
VMethodInvocation
p18642
tp18643
F8.75
s(g6145
I42
g6146
Vinsert
p18644
I43
VSimpleType: List
p18645
tp18646
F1.25
s(g770
I42
g771
Vinsert
p18647
I32
VMethodInvocation
p18648
tp18649
I4
s(g1415
I42
g1416
Vinsert
p18650
I42
VSimpleName: client
p18651
tp18652
I2
s(g1693
I42
g1694
Vinsert
p18653
I43
VSimpleType: List
p18654
tp18655
I1
s(g279
I42
g280
Vinsert
p18656
I83
VModifier: public
p18657
tp18658
F0.25
s(g659
I42
g660
Vinsert
p18659
I74
VParameterizedType: ArrayList<T>
p18660
tp18661
I1
s(g8677
I42
g8678
Vinsert
p18662
I43
VSimpleType: ElasticsearchStorage.Builder
p18663
tp18664
I1
s(g2880
I42
g2881
Vinsert
p18665
I42
VSimpleName: get
p18666
tp18667
I2
s(g4647
I42
g4648
Vinsert
p18668
I42
VSimpleName: result
p18669
tp18670
I1
s(g3750
I42
g3751
Vinsert
p18671
I42
VSimpleName: CallbackAdapter
p18672
tp18673
I1
s(g8688
I42
g8689
Vinsert
p18674
I31
VMethodDeclaration
p18675
tp18676
F0.5
s(g6595
I42
g6596
Vinsert
p18677
I42
VSimpleName: traceByServiceSpans
p18678
tp18679
I1
s(g5311
I42
g5312
Vinsert
p18680
I42
VSimpleName: publicMetrics
p18681
tp18682
I1
s(g13877
I42
g13878
Vinsert
p18683
I42
VSimpleName: SearchRequest
p18684
tp18685
I2
s(g2393
I42
g2394
Vinsert
p18686
I43
VSimpleType: V
p18687
tp18688
I1
s(Vinsert
p18689
I42
VSimpleName: addDeploymentInfoCustomizers
p18690
Vinsert
p18691
I42
VSimpleName: UndertowDeploymentInfoCustomizer
p18692
tp18693
F0.25
s(g1757
I42
g1758
Vinsert
p18694
I42
VSimpleName: targetSet
p18695
tp18696
I1
s(g3186
I42
g3187
Vinsert
p18697
I42
VSimpleName: spans
p18698
tp18699
F0.25
s(Vinsert
p18700
I42
VSimpleName: get
p18701
Vinsert
p18702
I45
VStringLiteral: "http://webservices.amazon.com/onca/xml?AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE&AssociateTag=mytag-20&ItemId=0679722769&Operation=ItemLookup&ResponseGroup=Images%2CItemAttributes%2COffers%2CReviews&Service=AWSECommerceService&Timestamp=2014-08-18T12%3A00%3A00Z&Version=2013-08-01&Signature=j7bZM0LXZ9eXeZruTqWm2DIvDYVUU3wxPPpp%2BiXxzQc%3D"
p18703
tp18704
I1
s(g1303
I42
g1304
Vinsert
p18705
I32
VMethodInvocation
p18706
tp18707
I1
s(g5405
I42
g5406
Vinsert
p18708
I42
VSimpleName: partitionKey
p18709
tp18710
F0.25
s(g3335
I42
g3336
Vinsert
p18711
I42
VSimpleName: Logger
p18712
tp18713
I2
s(g3979
I42
g3980
Vinsert
p18714
I52
VThisExpression
p18715
tp18716
F0.75
s(g6071
I42
g6072
Vinsert
p18717
I39
VPrimitiveType: long
p18718
tp18719
I1
s(g3675
I42
g3676
Vinsert
p18720
I42
VSimpleName: bound
p18721
tp18722
I1
s(g1533
I42
g1534
Vinsert
p18723
I42
VSimpleName: getRequestHeaders
p18724
tp18725
I1
s(g456
I42
g457
Vinsert
p18726
I42
VSimpleName: templateUrl
p18727
tp18728
I1
s(g3136
I42
g3137
Vinsert
p18729
I39
VPrimitiveType: byte
p18730
tp18731
I1
s(g3649
I42
g3650
Vinsert
p18732
I42
VSimpleName: csService
p18733
tp18734
F0.5
s(g8402
I42
g8403
Vinsert
p18735
I27
VInfixExpression: ==
p18736
tp18737
I1
s(g5634
I42
g5635
Vinsert
p18738
I14
VClassInstanceCreation
p18739
tp18740
I1
s(g1108
I42
g1109
Vinsert
p18741
I42
VSimpleName: traces_with_self_referencing_spans
p18742
tp18743
I1
s(g7905
I42
g7906
Vinsert
p18744
I42
VSimpleName: result
p18745
tp18746
I4
s(g4319
I42
g4320
Vinsert
p18747
I45
VStringLiteral: "$.['counter.zipkin_collector.messages.http']"
p18748
tp18749
I1
s(g51
I42
g52
Vinsert
p18750
I32
VMethodInvocation
p18751
tp18752
I1
s(g8978
I42
g8979
Vinsert
p18753
I11
VCastExpression
p18754
tp18755
I2
s(g431
I42
g432
Vinsert
p18756
I42
VSimpleName: username
p18757
tp18758
I2
s(g13147
I42
g13148
Vinsert
p18759
I40
VQualifiedName: a.value
p18760
tp18761
I1
s(g15097
I42
g15098
Vinsert
p18762
I42
VSimpleName: BoolQueryBuilder
p18763
tp18764
I1
s(g2454
I42
g2455
Vinsert
p18765
I42
VSimpleName: spans
p18766
tp18767
F0.25
s(g6371
I42
g6372
Vinsert
p18768
I39
VPrimitiveType: void
p18769
tp18770
F0.75
s(g1007
I42
g1008
Vinsert
p18771
I42
VSimpleName: iprot
p18772
tp18773
I1
s(g284
I42
g285
Vinsert
p18774
I14
VClassInstanceCreation
p18775
tp18776
I8
s(g10954
I42
g10955
Vinsert
p18777
I32
VMethodInvocation
p18778
tp18779
I1
s(g9295
I42
g9296
Vinsert
p18780
I42
VSimpleName: host
p18781
tp18782
I3
s(g871
I42
g872
Vinsert
p18783
I27
VInfixExpression: <
p18784
tp18785
I1
s(g1856
I42
g1857
Vinsert
p18786
I8
VBlock
p18787
tp18788
I1
s(g3662
I42
g3663
Vinsert
p18789
I45
VStringLiteral: "a"
p18790
tp18791
I1
s(g3654
I42
g3655
Vinsert
p18792
I37
VPostfixExpression: ++
p18793
tp18794
I1
s(g512
I42
g513
Vinsert
p18795
I78
VMarkerAnnotation
p18796
tp18797
F0.25
s(g2619
I42
g2620
Vinsert
p18798
I42
VSimpleName: String
p18799
tp18800
I2
s(g2870
I42
g2871
Vinsert
p18801
I66
VTextElement: Looking back earlier than 1970 is likely a bug 
p18802
tp18803
F0.25
s(g5410
I42
g5411
Vinsert
p18804
I42
VSimpleName: Void
p18805
tp18806
F0.25
s(g522
I42
g523
Vinsert
p18807
I14
VClassInstanceCreation
p18808
tp18809
F0.25
s(g934
I42
g935
Vinsert
p18810
I85
VDimension
p18811
tp18812
F4.5
s(g3823
I42
g3824
Vinsert
p18813
I74
VParameterizedType: Set<InetAddress>
p18814
tp18815
F0.25
s(Vinsert
p18816
I42
VSimpleName: equals
p18817
Vinsert
p18818
I43
VSimpleType: Pair
p18819
tp18820
I2
s(g4306
I42
g4307
Vinsert
p18821
I25
VIfStatement
p18822
tp18823
I1
s(g151
I42
g152
Vinsert
p18824
I31
VMethodDeclaration
p18825
tp18826
F0.5
s(g846
I42
g847
Vinsert
p18827
I24
VForStatement
p18828
tp18829
I4
s(g1987
I42
g1988
Vinsert
p18830
I43
VSimpleType: Long
p18831
tp18832
I3
s(g4446
I42
g4447
Vinsert
p18833
I42
VSimpleName: assertThat
p18834
tp18835
I1
s(g5221
I42
g5222
Vinsert
p18836
I14
VClassInstanceCreation
p18837
tp18838
I1
s(g7380
I42
g7381
Vinsert
p18839
I42
VSimpleName: AsyncSpanConsumer
p18840
tp18841
F0.5
s(g557
I42
g558
Vinsert
p18842
I42
VSimpleName: pipeline
p18843
tp18844
I2
s(g1894
I42
g1895
Vinsert
p18845
I40
VQualifiedName: ElasticsearchHttpStorage.Builder
p18846
tp18847
F0.25
s(g5259
I42
g5260
Vinsert
p18848
I74
VParameterizedType: List<Span>
p18849
tp18850
F0.25
s(g3353
I42
g3354
Vinsert
p18851
I42
VSimpleName: readSpan
p18852
tp18853
F0.25
s(g2005
I42
g2006
Vinsert
p18854
I54
VTryStatement
p18855
tp18856
I1
s(g3398
I42
g3399
Vinsert
p18857
I59
VVariableDeclarationFragment
p18858
tp18859
I1
s(g4605
I42
g4606
Vinsert
p18860
I32
VMethodInvocation
p18861
tp18862
F16.25
s(g856
I42
g857
Vinsert
p18863
I8
VBlock
p18864
tp18865
I1
s(g9290
I42
g9291
Vinsert
p18866
I39
VPrimitiveType: void
p18867
tp18868
F0.25
s(g4840
I42
g4841
Vinsert
p18869
I8
VBlock
p18870
tp18871
F0.25
s(g4293
I42
g4294
Vinsert
p18872
I25
VIfStatement
p18873
tp18874
I1
s(g10770
I42
g10771
Vinsert
p18875
I42
VSimpleName: Runnable
p18876
tp18877
F0.25
s(g806
I42
g807
Vinsert
p18878
I59
VVariableDeclarationFragment
p18879
tp18880
I1
s(g304
I42
g305
Vinsert
p18881
I42
VSimpleName: addAndGet
p18882
tp18883
I1
s(g101
I42
g102
Vinsert
p18884
I42
VSimpleName: factory
p18885
tp18886
I2
s(g7613
I42
g7614
Vinsert
p18887
I43
VSimpleType: Set
p18888
tp18889
I1
s(g4621
I42
g4622
Vinsert
p18890
I40
VQualifiedName: TestObjects.TRACE
p18891
tp18892
I1
s(g11825
I42
g11826
Vinsert
p18893
I27
VInfixExpression: >>
p18894
tp18895
I1
s(g796
I42
g797
Vinsert
p18896
I42
VSimpleName: builder
p18897
tp18898
F1.25
s(g3398
I42
g3399
Vinsert
p18899
I57
VTypeLiteral
p18900
tp18901
F0.25
s(g5000
I42
g5001
Vinsert
p18902
I42
VSimpleName: Override
p18903
tp18904
F0.5
s(g4182
I42
g4183
Vinsert
p18905
I42
VSimpleName: getTraces_manyTraces
p18906
tp18907
F0.75
s(g5259
I42
g5260
Vinsert
p18908
I43
VSimpleType: Span
p18909
tp18910
F0.25
s(g1415
I42
g1416
Vinsert
p18911
I42
VSimpleName: prepareBulk
p18912
tp18913
I2
s(g796
I42
g797
Vinsert
p18914
I42
VSimpleName: singleTypeIndexingEnabled
p18915
tp18916
F0.25
s(g5259
I42
g5260
Vinsert
p18917
I39
VPrimitiveType: long
p18918
tp18919
F0.25
s(g3833
I42
g3834
Vinsert
p18920
I42
VSimpleName: input
p18921
tp18922
I1
s(g6635
I42
g6636
Vinsert
p18923
I41
VReturnStatement
p18924
tp18925
I3
s(g6145
I42
g6146
Vinsert
p18926
I61
VWhileStatement
p18927
tp18928
I1
s(g1969
I42
g1970
Vinsert
p18929
I44
VSingleVariableDeclaration
p18930
tp18931
I1
s(g3072
I42
g3073
Vinsert
p18932
I42
VSimpleName: delegate
p18933
tp18934
F0.25
s(g3136
I42
g3137
Vinsert
p18935
I5
VArrayType: byte[]
p18936
tp18937
I1
s(g4157
I42
g4158
Vinsert
p18938
I42
VSimpleName: MICROSECONDS
p18939
tp18940
I1
s(g1826
I42
g1827
Vinsert
p18941
I42
VSimpleName: executor
p18942
tp18943
I2
s(g6763
I42
g6764
Vinsert
p18944
I42
VSimpleName: Endpoint
p18945
tp18946
I1
s(g234
I42
g235
Vinsert
p18947
I8
VBlock
p18948
tp18949
I1
s(g16170
I42
g16171
Vinsert
p18950
I27
VInfixExpression: /
p18951
tp18952
I1
s(g1856
I42
g1857
Vinsert
p18953
I42
VSimpleName: sizeInBytes
p18954
tp18955
F0.25
s(g3199
I42
g3200
Vinsert
p18956
I42
VSimpleName: List
p18957
tp18958
F0.25
s(g1861
I42
g1862
Vinsert
p18959
I43
VSimpleType: Span
p18960
tp18961
F4.25
s(g1058
I42
g1059
Vinsert
p18962
I62
VInstanceofExpression
p18963
tp18964
I1
s(g4498
I42
g4499
Vinsert
p18965
I21
VExpressionStatement
p18966
tp18967
I1
s(g4835
I42
g4836
Vinsert
p18968
I27
VInfixExpression: +
p18969
tp18970
I3
s(g572
I42
g573
Vinsert
p18971
I52
VThisExpression
p18972
tp18973
I1
s(g2145
I42
g2146
Vinsert
p18974
I43
VSimpleType: CollectorMetrics
p18975
tp18976
F0.25
s(g5183
I42
g5184
Vinsert
p18977
I42
VSimpleName: KafkaCollector
p18978
tp18979
I1
s(g4171
I42
g4172
Vinsert
p18980
I45
VStringLiteral: "${zipkin.self-tracing.sample-rate:1.0}"
p18981
tp18982
F0.25
s(g10727
I42
g10728
Vinsert
p18983
I40
VQualifiedName: sr.timestamp
p18984
tp18985
I1
s(g3125
I42
g3126
Vinsert
p18986
I11
VCastExpression
p18987
tp18988
I1
s(g2416
I42
g2417
Vinsert
p18989
I27
VInfixExpression: +
p18990
tp18991
I1
s(Vinsert
p18992
I42
VSimpleName: executeAsync
p18993
Vinsert
p18994
I42
VSimpleName: factory
p18995
tp18996
F0.5
s(g14004
I42
g14005
Vinsert
p18997
I42
VSimpleName: Void
p18998
tp18999
F0.25
s(Vinsert
p19000
I42
VSimpleName: builder
p19001
Vinsert
p19002
I42
VSimpleName: CassandraStorage
p19003
tp19004
I4
s(g2038
I42
g2039
Vinsert
p19005
I42
VSimpleName: getTrace
p19006
tp19007
F0.25
s(g41
I42
g42
Vinsert
p19008
I14
VClassInstanceCreation
p19009
tp19010
I1
s(g1159
I42
g1160
Vinsert
p19011
I42
VSimpleName: size
p19012
tp19013
F0.5
s(g16271
I42
g16272
Vinsert
p19014
I42
VSimpleName: Test
p19015
tp19016
F0.25
s(g572
I42
g573
Vinsert
p19017
I42
VSimpleName: cache
p19018
tp19019
I1
s(g2454
I42
g2455
Vinsert
p19020
I43
VSimpleType: List
p19021
tp19022
F0.5
s(g1739
I42
g1740
Vinsert
p19023
I42
VSimpleName: writeIndexMetadata
p19024
tp19025
I1
s(g3720
I42
g3721
Vinsert
p19026
I39
VPrimitiveType: int
p19027
tp19028
F0.25
s(g7091
I42
g7092
Vinsert
p19029
I34
VNumberLiteral: 1
p19030
tp19031
I1
s(g6301
I42
g6302
Vinsert
p19032
I42
VSimpleName: SpanConsumerTest
p19033
tp19034
F1.0
s(g1351
I42
g1352
Vinsert
p19035
I42
VSimpleName: expectMessage
p19036
tp19037
I1
s(g2314
I42
g2315
Vinsert
p19038
I40
VQualifiedName: DependencyLinkSpan.Builder
p19039
tp19040
I2
s(g3667
I42
g3668
Vinsert
p19041
I42
VSimpleName: right
p19042
tp19043
F1.25
s(g5126
I42
g5127
Vinsert
p19044
I42
VSimpleName: BoundStatement
p19045
tp19046
I2
s(g274
I42
g275
Vinsert
p19047
I59
VVariableDeclarationFragment
p19048
tp19049
I2
s(g12014
I42
g12015
Vinsert
p19050
I21
VExpressionStatement
p19051
tp19052
I8
s(g2574
I42
g2575
Vinsert
p19053
I74
VParameterizedType: Collection<Long>
p19054
tp19055
F0.25
s(g1790
I42
g1791
Vinsert
p19056
I42
VSimpleName: legacy
p19057
tp19058
I1
s(g1816
I42
g1817
Vinsert
p19059
I43
VSimpleType: DSLContext
p19060
tp19061
F0.25
s(g7151
I42
g7152
Vinsert
p19062
I7
VAssignment: =
p19063
tp19064
I1
s(g5259
I42
g5260
Vinsert
p19065
I43
VSimpleType: List
p19066
tp19067
F0.25
s(g13167
I42
g13168
Vinsert
p19068
I42
VSimpleName: isEqualTo
p19069
tp19070
I1
s(g2891
I42
g2892
Vinsert
p19071
I42
VSimpleName: Span
p19072
tp19073
I1
s(g51
I42
g52
Vinsert
p19074
I42
VSimpleName: dataSource
p19075
tp19076
I1
s(g10204
I42
g10205
Vinsert
p19077
I42
VSimpleName: store
p19078
tp19079
I1
s(g3393
I42
g3394
Vinsert
p19080
I42
VSimpleName: outputStream
p19081
tp19082
I2
s(g2647
I42
g2648
Vinsert
p19083
I42
VSimpleName: metrics
p19084
tp19085
F4.5
s(g344
I42
g345
Vinsert
p19086
I29
VJavadoc
p19087
tp19088
F0.25
s(g2699
I42
g2700
Vinsert
p19089
I42
VSimpleName: zipkin
p19090
tp19091
I1
s(g7560
I42
g7561
Vinsert
p19092
I45
VStringLiteral: "mysql"
p19093
tp19094
I1
s(g6771
I42
g6772
Vinsert
p19095
I16
VConditionalExpression
p19096
tp19097
I2
s(g919
I42
g920
Vinsert
p19098
I43
VSimpleType: ArrayList
p19099
tp19100
I4
s(g5730
I42
g5731
Vinsert
p19101
I42
VSimpleName: ResponseEntity
p19102
tp19103
I1
s(g816
I42
g817
Vinsert
p19104
I42
VSimpleName: StringBuilder
p19105
tp19106
I2
s(g1688
I42
g1689
Vinsert
p19107
I42
VSimpleName: DependencyLink
p19108
tp19109
I1
s(g3838
I42
g3839
Vinsert
p19110
I59
VVariableDeclarationFragment
p19111
tp19112
I1
s(g3667
I42
g3668
Vinsert
p19113
I40
VQualifiedName: java.util.List
p19114
tp19115
F0.25
s(g6508
I42
g6509
Vinsert
p19116
I42
VSimpleName: Span2
p19117
tp19118
I1
s(g6677
I42
g6678
Vinsert
p19119
I42
VSimpleName: spans
p19120
tp19121
F0.25
s(g1969
I42
g1970
Vinsert
p19122
I42
VSimpleName: spans
p19123
tp19124
I1
s(g8791
I42
g8792
Vinsert
p19125
I7
VAssignment: =
p19126
tp19127
I1
s(g2547
I42
g2548
Vinsert
p19128
I42
VSimpleName: max
p19129
tp19130
I1
s(g1022
I42
g1023
Vinsert
p19131
I42
VSimpleName: lowerHexToUnsignedLong
p19132
tp19133
I2
s(g2459
I42
g2460
Vinsert
p19134
I31
VMethodDeclaration
p19135
tp19136
F0.25
s(g372
I42
g373
Vinsert
p19137
I8
VBlock
p19138
tp19139
I1
s(g7091
I42
g7092
Vinsert
p19140
I40
VQualifiedName: a.value
p19141
tp19142
I1
s(g3046
I42
g3047
Vinsert
p19143
I32
VMethodInvocation
p19144
tp19145
I3
s(g1916
I42
g1917
Vinsert
p19146
I42
VSimpleName: AnnotatedTypeMetadata
p19147
tp19148
F0.25
s(g4928
I42
g4929
Vinsert
p19149
I42
VSimpleName: Arrays
p19150
tp19151
I3
s(g517
I42
g518
Vinsert
p19152
I42
VSimpleName: filtered
p19153
tp19154
I2
s(g10487
I42
g10488
Vinsert
p19155
I14
VClassInstanceCreation
p19156
tp19157
I1
s(g5166
I42
g5167
Vinsert
p19158
I39
VPrimitiveType: boolean
p19159
tp19160
F0.5
s(g7347
I42
g7348
Vinsert
p19161
I27
VInfixExpression: &&
p19162
tp19163
I2
s(g5603
I42
g5604
Vinsert
p19164
I32
VMethodInvocation
p19165
tp19166
I2
s(g739
I42
g740
Vinsert
p19167
I45
VStringLiteral: "foo"
p19168
tp19169
I1
s(g3793
I42
g3794
Vinsert
p19170
I42
VSimpleName: traces
p19171
tp19172
I1
s(g5369
I42
g5370
Vinsert
p19173
I40
VQualifiedName: spans.size
p19174
tp19175
F0.5
s(g9008
I42
g9009
Vinsert
p19176
I42
VSimpleName: request
p19177
tp19178
I1
s(g5449
I42
g5450
Vinsert
p19179
I45
VStringLiteral: ":"
p19180
tp19181
I1
s(g1744
I42
g1745
Vinsert
p19182
I43
VSimpleType: Host
p19183
tp19184
I1
s(g1288
I42
g1289
Vinsert
p19185
I42
VSimpleName: getKeyspaceMetadata
p19186
tp19187
I1
s(g2393
I42
g2394
Vinsert
p19188
I32
VMethodInvocation
p19189
tp19190
I2
s(g5090
I42
g5091
Vinsert
p19191
I43
VSimpleType: AtomicReference
p19192
tp19193
F0.5
s(g5316
I42
g5317
Vinsert
p19194
I60
VVariableDeclarationStatement
p19195
tp19196
I1
s(g5515
I42
g5516
Vinsert
p19197
I45
VStringLiteral: ""
p19198
tp19199
I1
s(g1533
I42
g1534
Vinsert
p19200
I42
VSimpleName: exchange
p19201
tp19202
I1
s(g2642
I42
g2643
Vinsert
p19203
I42
VSimpleName: ListenableFuture
p19204
tp19205
I3
s(g6595
I42
g6596
Vinsert
p19206
I42
VSimpleName: duration
p19207
tp19208
I2
s(g2647
I42
g2648
Vinsert
p19209
I52
VThisExpression
p19210
tp19211
I2
s(g8375
I42
g8376
Vinsert
p19212
I42
VSimpleName: caService
p19213
tp19214
I1
s(g1255
I42
g1256
Vinsert
p19215
I42
VSimpleName: stop
p19216
tp19217
F0.25
s(g4430
I42
g4431
Vinsert
p19218
I76
VWildcardType: ?
p19219
tp19220
F0.25
s(g7546
I42
g7547
Vinsert
p19221
I45
VStringLiteral: "zipkin.storage.type:elasticsearch"
p19222
tp19223
I2
s(g479
I42
g480
Vinsert
p19224
I42
VSimpleName: log
p19225
tp19226
I2
s(g9290
I42
g9291
Vinsert
p19227
I42
VSimpleName: assignedPartitions
p19228
tp19229
I1
s(g339
I42
g340
Vinsert
p19230
I42
VSimpleName: Throwable
p19231
tp19232
F0.25
s(g5831
I42
g5832
Vinsert
p19233
I59
VVariableDeclarationFragment
p19234
tp19235
F0.5
s(g9258
I42
g9259
Vinsert
p19236
I43
VSimpleType: List
p19237
tp19238
I3
s(g709
I42
g710
Vinsert
p19239
I43
VSimpleType: BinaryAnnotation
p19240
tp19241
F0.25
s(g8022
I42
g8023
Vinsert
p19242
I42
VSimpleName: run
p19243
tp19244
F0.25
s(g631
I42
g632
Vinsert
p19245
I42
VSimpleName: request
p19246
tp19247
F0.25
s(g6407
I42
g6408
Vinsert
p19248
I40
VQualifiedName: input.length
p19249
tp19250
I1
s(g11429
I42
g11430
Vinsert
p19251
I34
VNumberLiteral: 1000
p19252
tp19253
F0.5
s(g2203
I42
g2204
Vinsert
p19254
I44
VSingleVariableDeclaration
p19255
tp19256
F0.5
s(g4908
I42
g4909
Vinsert
p19257
I22
VFieldAccess
p19258
tp19259
I3
s(g600
I42
g601
Vinsert
p19260
I40
VQualifiedName: aTable.A_TYPE
p19261
tp19262
I1
s(Vinsert
p19263
I42
VSimpleName: iterator
p19264
Vinsert
p19265
I74
VParameterizedType: List<Span>
p19266
tp19267
I1
s(g7305
I42
g7306
Vinsert
p19268
I42
VSimpleName: buffer
p19269
tp19270
I6
s(g2398
I42
g2399
Vinsert
p19271
I21
VExpressionStatement
p19272
tp19273
I1
s(g6371
I42
g6372
Vinsert
p19274
I42
VSimpleName: command
p19275
tp19276
F3.75
s(g101
I42
g102
Vinsert
p19277
I32
VMethodInvocation
p19278
tp19279
I2
s(g16170
I42
g16171
Vinsert
p19280
I42
VSimpleName: indexTimestamp
p19281
tp19282
I1
s(g15883
I42
g15884
Vinsert
p19283
I42
VSimpleName: whenCrAndCaServiceExists_caIsThePeer
p19284
tp19285
F0.25
s(g2023
I42
g2024
Vinsert
p19286
I42
VSimpleName: gzipSink
p19287
tp19288
I4
s(g13877
I42
g13878
Vinsert
p19289
I59
VVariableDeclarationFragment
p19290
tp19291
I1
s(g982
I42
g983
Vinsert
p19292
I42
VSimpleName: writeJsonList
p19293
tp19294
F0.25
s(g3443
I42
g3444
Vinsert
p19295
I41
VReturnStatement
p19296
tp19297
I1
s(g4344
I42
g4345
Vinsert
p19298
I40
VQualifiedName: Codec.JSON
p19299
tp19300
I1
s(g1723
I42
g1724
Vinsert
p19301
I42
VSimpleName: traceIdHigh
p19302
tp19303
F0.75
s(g121
I42
g122
Vinsert
p19304
I27
VInfixExpression: +
p19305
tp19306
I1
s(g1456
I42
g1457
Vinsert
p19307
I42
VSimpleName: IOException
p19308
tp19309
F0.25
s(g13800
I42
g13801
Vinsert
p19310
I74
VParameterizedType: Callback<Void>
p19311
tp19312
F0.25
s(g7331
I42
g7332
Vinsert
p19313
I42
VSimpleName: List
p19314
tp19315
F0.25
s(g2314
I42
g2315
Vinsert
p19316
I40
VQualifiedName: s.id
p19317
tp19318
I2
s(g796
I42
g797
Vinsert
p19319
I39
VPrimitiveType: void
p19320
tp19321
F0.25
s(g10510
I42
g10511
Vinsert
p19322
I42
VSimpleName: flatMap_enqueue
p19323
tp19324
F0.25
s(g1866
I42
g1867
Vinsert
p19325
I1
VAnonymousClassDeclaration
p19326
tp19327
F0.5
s(g7744
I42
g7745
Vinsert
p19328
I42
VSimpleName: writeSpan
p19329
tp19330
F2.25
s(g4928
I42
g4929
Vinsert
p19331
I8
VBlock
p19332
tp19333
I3
s(g846
I42
g847
Vinsert
p19334
I39
VPrimitiveType: int
p19335
tp19336
F3.25
s(g7091
I42
g7092
Vinsert
p19337
I32
VMethodInvocation
p19338
tp19339
I4
s(g7331
I42
g7332
Vinsert
p19340
I43
VSimpleType: SearchResponse
p19341
tp19342
F0.25
s(g2658
I42
g2659
Vinsert
p19343
I42
VSimpleName: mock
p19344
tp19345
I5
s(g7240
I42
g7241
Vinsert
p19346
I22
VFieldAccess
p19347
tp19348
I1
s(g8688
I42
g8689
Vinsert
p19349
I21
VExpressionStatement
p19350
tp19351
I2
s(g5720
I42
g5721
Vinsert
p19352
I42
VSimpleName: storage
p19353
tp19354
I1
s(g2283
I42
g2284
Vinsert
p19355
I44
VSingleVariableDeclaration
p19356
tp19357
F0.25
s(g9706
I42
g9707
Vinsert
p19358
I42
VSimpleName: cardinality
p19359
tp19360
I1
s(g466
I42
g467
Vinsert
p19361
I42
VSimpleName: StorageComponent
p19362
tp19363
F0.25
s(g6099
I42
g6100
Vinsert
p19364
I42
VSimpleName: receivedAcks
p19365
tp19366
F0.25
s(g5098
I42
g5099
Vinsert
p19367
I34
VNumberLiteral: 0
p19368
tp19369
I1
s(g1693
I42
g1694
Vinsert
p19370
I5
VArrayType: List<Span>[]
p19371
tp19372
I1
s(g608
I42
g609
Vinsert
p19373
I42
VSimpleName: forThriftServer
p19374
tp19375
F0.25
s(g3900
I42
g3901
Vinsert
p19376
I42
VSimpleName: sampleRatePath
p19377
tp19378
I1
s(g181
I42
g182
Vinsert
p19379
I8
VBlock
p19380
tp19381
I14
s(g3636
I42
g3637
Vinsert
p19382
I42
VSimpleName: collector
p19383
tp19384
I1
s(g3740
I42
g3741
Vinsert
p19385
I8
VBlock
p19386
tp19387
I1
s(g11075
I42
g11076
Vinsert
p19388
I45
VStringLiteral: "d"
p19389
tp19390
I1
s(g1400
I42
g1401
Vinsert
p19391
I42
VSimpleName: builderGetsVersionFromProperties
p19392
tp19393
F0.25
s(g5264
I42
g5265
Vinsert
p19394
I42
VSimpleName: writeUtf8
p19395
tp19396
F1.25
s(g4306
I42
g4307
Vinsert
p19397
I42
VSimpleName: brave
p19398
tp19399
I1
s(g1816
I42
g1817
Vinsert
p19400
I42
VSimpleName: conn
p19401
tp19402
F0.25
s(Vinsert
p19403
I42
VSimpleName: emptyList
p19404
Vinsert
p19405
I42
VSimpleName: reader
p19406
tp19407
I3
s(g7613
I42
g7614
Vinsert
p19408
I74
VParameterizedType: Pair<String>
p19409
tp19410
I1
s(g2954
I42
g2955
Vinsert
p19411
I18
VContinueStatement
p19412
tp19413
I1
s(g18226
I42
g18227
Vinsert
p19414
I42
VSimpleName: maxDuration_onlyWithMinDuration
p19415
tp19416
F0.25
s(g2145
I42
g2146
Vinsert
p19417
I32
VMethodInvocation
p19418
tp19419
I2
s(g46
I42
g47
Vinsert
p19420
I42
VSimpleName: getResponse
p19421
tp19422
I1
s(g6371
I42
g6372
Vinsert
p19423
I78
VMarkerAnnotation
p19424
tp19425
F0.75
s(g7951
I42
g7952
Vinsert
p19426
I42
VSimpleName: ArrayList
p19427
tp19428
I1
s(g1316
I42
g1317
Vinsert
p19429
I21
VExpressionStatement
p19430
tp19431
F3.5
s(Vinsert
p19432
I42
VSimpleName: getBean
p19433
Vinsert
p19434
I42
VSimpleName: selfTraceStorageComponent
p19435
tp19436
F0.25
s(g5259
I42
g5260
Vinsert
p19437
I83
VModifier: public
p19438
tp19439
F0.25
s(g2203
I42
g2204
Vinsert
p19440
I42
VSimpleName: record
p19441
tp19442
F0.25
s(g1551
I42
g1552
Vinsert
p19443
I42
VSimpleName: Endpoint
p19444
tp19445
I1
s(g6992
I42
g6993
Vinsert
p19446
I42
VSimpleName: targetStoreRate
p19447
tp19448
I1
s(g3083
I42
g3084
Vinsert
p19449
I43
VSimpleType: Iterable
p19450
tp19451
I1
s(g3064
I42
g3065
Vinsert
p19452
I42
VSimpleName: traceCount
p19453
tp19454
I1
s(g10335
I42
g10336
Vinsert
p19455
I40
VQualifiedName: org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get
p19456
tp19457
F0.25
s(g279
I42
g280
Vinsert
p19458
I65
VTagElement
p19459
tp19460
F0.25
s(g2727
I42
g2728
Vinsert
p19461
I42
VSimpleName: Test
p19462
tp19463
F0.25
s(g997
I42
g998
Vinsert
p19464
I41
VReturnStatement
p19465
tp19466
F7.0
s(g2192
I42
g2193
Vinsert
p19467
I42
VSimpleName: List
p19468
tp19469
I1
s(g4552
I42
g4553
Vinsert
p19470
I42
VSimpleName: copyOf
p19471
tp19472
I1
s(g7752
I42
g7753
Vinsert
p19473
I42
VSimpleName: i
p19474
tp19475
I9
s(g1790
I42
g1791
Vinsert
p19476
I32
VMethodInvocation
p19477
tp19478
I3
s(g2090
I42
g2091
Vinsert
p19479
I8
VBlock
p19480
tp19481
I2
s(g1066
I42
g1067
Vinsert
p19482
I42
VSimpleName: dateAsString
p19483
tp19484
I2
s(g4425
I42
g4426
Vinsert
p19485
I43
VSimpleType: LazyClient
p19486
tp19487
I2
s(g6745
I42
g6746
Vinsert
p19488
I42
VSimpleName: spans
p19489
tp19490
F0.25
s(g6005
I42
g6006
Vinsert
p19491
I33
VNullLiteral
p19492
tp19493
I2
s(g10392
I42
g10393
Vinsert
p19494
I52
VThisExpression
p19495
tp19496
F9.75
s(g4152
I42
g4153
Vinsert
p19497
I14
VClassInstanceCreation
p19498
tp19499
I2
s(g1657
I42
g1658
Vinsert
p19500
I42
VSimpleName: UnsupportedOperationException
p19501
tp19502
F0.25
s(g659
I42
g660
Vinsert
p19503
I14
VClassInstanceCreation
p19504
tp19505
I1
s(g5720
I42
g5721
Vinsert
p19506
I21
VExpressionStatement
p19507
tp19508
I1
s(g4415
I42
g4416
Vinsert
p19509
I8
VBlock
p19510
tp19511
I1
s(g4275
I42
g4276
Vinsert
p19512
I32
VMethodInvocation
p19513
tp19514
I1
s(g734
I42
g735
Vinsert
p19515
I60
VVariableDeclarationStatement
p19516
tp19517
I1
s(g3398
I42
g3399
Vinsert
p19518
I42
VSimpleName: any
p19519
tp19520
F0.25
s(Vinsert
p19521
I42
VSimpleName: bind
p19522
Vinsert
p19523
I42
VSimpleName: lookback
p19524
tp19525
I1
s(g886
I42
g887
Vinsert
p19526
I7
VAssignment: =
p19527
tp19528
F1.25
s(g3412
I42
g3413
Vinsert
p19529
I7
VAssignment: =
p19530
tp19531
I1
s(g3443
I42
g3444
Vinsert
p19532
I42
VSimpleName: decoder
p19533
tp19534
I1
s(g3454
I42
g3455
Vinsert
p19535
I59
VVariableDeclarationFragment
p19536
tp19537
I1
s(g4225
I42
g4226
Vinsert
p19538
I42
VSimpleName: addAnnotation
p19539
tp19540
I2
s(g1058
I42
g1059
Vinsert
p19541
I42
VSimpleName: hasSize
p19542
tp19543
F0.25
s(g4557
I42
g4558
Vinsert
p19544
I45
VStringLiteral: "span"
p19545
tp19546
I2
s(g1513
I42
g1514
Vinsert
p19547
I45
VStringLiteral: "foo"
p19548
tp19549
I1
s(g284
I42
g285
Vinsert
p19550
I43
VSimpleType: LinkedList
p19551
tp19552
I2
s(g400
I42
g401
Vinsert
p19553
I42
VSimpleName: json
p19554
tp19555
I1
s(g1566
I42
g1567
Vinsert
p19556
I41
VReturnStatement
p19557
tp19558
I1
s(g1916
I42
g1917
Vinsert
p19559
I42
VSimpleName: ConditionOutcome
p19560
tp19561
I1
s(g14635
I42
g14636
Vinsert
p19562
I22
VFieldAccess
p19563
tp19564
I1
s(g2604
I42
g2605
Vinsert
p19565
I42
VSimpleName: topic
p19566
tp19567
I1
s(g3588
I42
g3589
Vinsert
p19568
I40
VQualifiedName: Long.MIN_VALUE
p19569
tp19570
I1
s(g2755
I42
g2756
Vinsert
p19571
I83
VModifier: public
p19572
tp19573
F0.25
s(g5720
I42
g5721
Vinsert
p19574
I43
VSimpleType: MySQLStorage.Builder
p19575
tp19576
I1
s(g4983
I42
g4984
Vinsert
p19577
I42
VSimpleName: Builder
p19578
tp19579
F0.25
s(g8825
I42
g8826
Vinsert
p19580
I42
VSimpleName: indexNameForTimestamp
p19581
tp19582
F0.25
s(g6454
I42
g6455
Vinsert
p19583
I21
VExpressionStatement
p19584
tp19585
I4
s(g2005
I42
g2006
Vinsert
p19586
I42
VSimpleName: reader
p19587
tp19588
I1
s(g2789
I42
g2790
Vinsert
p19589
I42
VSimpleName: localEndpoint
p19590
tp19591
I1
s(g1103
I42
g1104
Vinsert
p19592
I22
VFieldAccess
p19593
tp19594
I1
s(g2365
I42
g2366
Vinsert
p19595
I42
VSimpleName: V
p19596
tp19597
F0.25
s(g9295
I42
g9296
Vinsert
p19598
I42
VSimpleName: startsWith
p19599
tp19600
I2
s(g3443
I42
g3444
Vinsert
p19601
I42
VSimpleName: JSON2_DECODER
p19602
tp19603
F0.25
s(Vinsert
p19604
I42
VSimpleName: equals
p19605
Vinsert
p19606
I42
VSimpleName: zookeeper
p19607
tp19608
F1.25
s(g909
I42
g910
Vinsert
p19609
I42
VSimpleName: id
p19610
tp19611
F1.25
s(g10510
I42
g10511
Vinsert
p19612
I74
VParameterizedType: Call<String>
p19613
tp19614
I1
s(g264
I42
g265
Vinsert
p19615
I40
VQualifiedName: com.amazonaws.auth.AWSCredentials
p19616
tp19617
I1
s(g1464
I42
g1465
Vinsert
p19618
I83
VModifier: static
p19619
tp19620
I1
s(g1546
I42
g1547
Vinsert
p19621
I42
VSimpleName: ZipkinCassandra3StorageProperties
p19622
tp19623
F0.25
s(g1074
I42
g1075
Vinsert
p19624
I74
VParameterizedType: List<Span2>
p19625
tp19626
I1
s(g4114
I42
g4115
Vinsert
p19627
I42
VSimpleName: first
p19628
tp19629
I1
s(g1288
I42
g1289
Vinsert
p19630
I43
VSimpleType: KeyspaceMetadata
p19631
tp19632
I1
s(g4016
I42
g4017
Vinsert
p19633
I42
VSimpleName: logsTraceId
p19634
tp19635
F0.25
s(g13147
I42
g13148
Vinsert
p19636
I42
VSimpleName: writer
p19637
tp19638
I1
s(g9867
I42
g9868
Vinsert
p19639
I21
VExpressionStatement
p19640
tp19641
I2
s(g1308
I42
g1309
Vinsert
p19642
I42
VSimpleName: asciiSizeInBytes
p19643
tp19644
F0.5
s(g6867
I42
g6868
Vinsert
p19645
I42
VSimpleName: String
p19646
tp19647
F0.25
s(g14825
I42
g14826
Vinsert
p19648
I32
VMethodInvocation
p19649
tp19650
I6
s(g418
I42
g419
Vinsert
p19651
I78
VMarkerAnnotation
p19652
tp19653
F0.25
s(Vinsert
p19654
I42
VSimpleName: indexFetchMultiplier
p19655
Vinsert
p19656
I22
VFieldAccess
p19657
tp19658
F0.75
s(g6745
I42
g6746
Vinsert
p19659
I43
VSimpleType: Span
p19660
tp19661
F1.25
s(g2679
I42
g2680
Vinsert
p19662
I42
VSimpleName: emoji
p19663
tp19664
I1
s(g244
I42
g245
Vinsert
p19665
I42
VSimpleName: apply_rpcSpan
p19666
tp19667
F0.25
s(g4690
I42
g4691
Vinsert
p19668
I42
VSimpleName: create
p19669
tp19670
I2
s(g2360
I42
g2361
Vinsert
p19671
I42
VSimpleName: limit
p19672
tp19673
F0.25
s(g1217
I42
g1218
Vinsert
p19674
I40
VQualifiedName: Constants.CLIENT_RECV
p19675
tp19676
I1
s(g719
I42
g720
Vinsert
p19677
I42
VSimpleName: connection
p19678
tp19679
I1
s(g1728
I42
g1729
Vinsert
p19680
I52
VThisExpression
p19681
tp19682
F0.25
s(g4264
I42
g4265
Vinsert
p19683
I14
VClassInstanceCreation
p19684
tp19685
I1
s(g7197
I42
g7198
Vinsert
p19686
I8
VBlock
p19687
tp19688
I13
s(g13686
I42
g13687
Vinsert
p19689
I42
VSimpleName: SimpleDateFormat
p19690
tp19691
F0.5
s(g466
I42
g467
Vinsert
p19692
I79
VSingleMemberAnnotation
p19693
tp19694
F0.25
s(g10568
I42
g10569
Vinsert
p19695
I42
VSimpleName: ipv6
p19696
tp19697
I1
s(g3628
I42
g3629
Vinsert
p19698
I14
VClassInstanceCreation
p19699
tp19700
I1
s(g982
I42
g983
Vinsert
p19701
I42
VSimpleName: APPLICATION_JSON_VALUE
p19702
tp19703
F0.25
s(g9457
I42
g9458
Vinsert
p19704
I42
VSimpleName: CassandraStorage
p19705
tp19706
F0.25
s(g2046
I42
g2047
Vinsert
p19707
I39
VPrimitiveType: void
p19708
tp19709
F1.25
s(g507
I42
g508
Vinsert
p19710
I32
VMethodInvocation
p19711
tp19712
I1
s(g934
I42
g935
Vinsert
p19713
I5
VArrayType: char[]
p19714
tp19715
I1
s(g1987
I42
g1988
Vinsert
p19716
I59
VVariableDeclarationFragment
p19717
tp19718
I5
s(g4738
I42
g4739
Vinsert
p19719
I40
VQualifiedName: span.name
p19720
tp19721
I1
s(g6231
I42
g6232
Vinsert
p19722
I52
VThisExpression
p19723
tp19724
F1.75
s(g7019
I42
g7020
Vinsert
p19725
I21
VExpressionStatement
p19726
tp19727
F0.25
s(g14269
I42
g14270
Vinsert
p19728
I42
VSimpleName: twoDaysAgo
p19729
tp19730
I1
s(g1894
I42
g1895
Vinsert
p19731
I42
VSimpleName: StorageComponent
p19732
tp19733
F0.5
s(g719
I42
g720
Vinsert
p19734
I42
VSimpleName: CheckResult
p19735
tp19736
F0.25
s(g8152
I42
g8153
Vinsert
p19737
I78
VMarkerAnnotation
p19738
tp19739
F0.25
s(g15413
I42
g15414
Vinsert
p19740
I42
VSimpleName: storage
p19741
tp19742
F4.0
s(g254
I42
g255
Vinsert
p19743
I42
VSimpleName: response
p19744
tp19745
F0.25
s(g919
I42
g920
Vinsert
p19746
I42
VSimpleName: List
p19747
tp19748
I4
s(g15413
I42
g15414
Vinsert
p19749
I42
VSimpleName: CollectorMetrics
p19750
tp19751
F0.75
s(g13581
I42
g13582
Vinsert
p19752
I43
VSimpleType: Long
p19753
tp19754
I1
s(g10112
I42
g10113
Vinsert
p19755
I42
VSimpleName: parentId
p19756
tp19757
I1
s(g2475
I42
g2476
Vinsert
p19758
I42
VSimpleName: condition
p19759
tp19760
F5.0
s(g10075
I42
g10076
Vinsert
p19761
I33
VNullLiteral
p19762
tp19763
F0.75
s(g987
I42
g988
Vinsert
p19764
I40
VQualifiedName: TestObjects.TRACE
p19765
tp19766
I1
s(g4430
I42
g4431
Vinsert
p19767
I74
VParameterizedType: Set<Object>
p19768
tp19769
I1
s(g3004
I42
g3005
Vinsert
p19770
I42
VSimpleName: Override
p19771
tp19772
F2.25
s(g7134
I42
g7135
Vinsert
p19773
I22
VFieldAccess
p19774
tp19775
F0.25
s(g13877
I42
g13878
Vinsert
p19776
I42
VSimpleName: t
p19777
tp19778
F0.25
s(g12441
I42
g12442
Vinsert
p19779
I34
VNumberLiteral: 0
p19780
tp19781
I1
s(g6508
I42
g6509
Vinsert
p19782
I42
VSimpleName: span2_2
p19783
tp19784
I1
s(g1222
I42
g1223
Vinsert
p19785
I27
VInfixExpression: ||
p19786
tp19787
I1
s(g3793
I42
g3794
Vinsert
p19788
I42
VSimpleName: Span
p19789
tp19790
F3.25
s(g6894
I42
g6895
Vinsert
p19791
I42
VSimpleName: output
p19792
tp19793
F2.5
s(g395
I42
g396
Vinsert
p19794
I83
VModifier: static
p19795
tp19796
I1
s(g9579
I42
g9580
Vinsert
p19797
I45
VStringLiteral: "?autoReconnect=true"
p19798
tp19799
I1
s(g3992
I42
g3993
Vinsert
p19800
I45
VStringLiteral: "{\u005c"kind\u005c": SERVER, \u005c"parentId\u005c": 0000000000000001, \u005c"id\u005c": 0000000000000002, \u005c"service\u005c": processor, \u005c"peerService\u005c": kinesis}"
p19801
tp19802
I1
s(g3750
I42
g3751
Vinsert
p19803
I42
VSimpleName: accept
p19804
tp19805
I1
s(g4171
I42
g4172
Vinsert
p19806
I34
VNumberLiteral: 0.01
p19807
tp19808
I1
s(g7450
I42
g7451
Vinsert
p19809
I32
VMethodInvocation
p19810
tp19811
I3
s(g694
I42
g695
Vinsert
p19812
I42
VSimpleName: endpoint
p19813
tp19814
F0.25
s(g1995
I42
g1996
Vinsert
p19815
I42
VSimpleName: spanStore
p19816
tp19817
I1
s(g3454
I42
g3455
Vinsert
p19818
I74
VParameterizedType: Set<String>
p19819
tp19820
I1
s(g116
I42
g117
Vinsert
p19821
I40
VQualifiedName: b.key
p19822
tp19823
I2
s(g4280
I42
g4281
Vinsert
p19824
I42
VSimpleName: build
p19825
tp19826
I1
s(g2755
I42
g2756
Vinsert
p19827
I42
VSimpleName: setLegacyReadsEnabled
p19828
tp19829
F0.25
s(g9547
I42
g9548
Vinsert
p19830
I11
VCastExpression
p19831
tp19832
I2
s(g2108
I42
g2109
Vinsert
p19833
I42
VSimpleName: checkNotNull
p19834
tp19835
I1
s(g6342
I42
g6343
Vinsert
p19836
I42
VSimpleName: TestName
p19837
tp19838
F0.25
s(g9706
I42
g9707
Vinsert
p19839
I24
VForStatement
p19840
tp19841
I1
s(g3168
I42
g3169
Vinsert
p19842
I43
VSimpleType: Map
p19843
tp19844
I1
s(g5584
I42
g5585
Vinsert
p19845
I8
VBlock
p19846
tp19847
I1
s(g1795
I42
g1796
Vinsert
p19848
I42
VSimpleName: metrics
p19849
tp19850
F0.25
s(g3105
I42
g3106
Vinsert
p19851
I85
VDimension
p19852
tp19853
F0.25
s(g992
I42
g993
Vinsert
p19854
I42
VSimpleName: mockMvc
p19855
tp19856
I11
s(g2054
I42
g2055
Vinsert
p19857
I43
VSimpleType: String
p19858
tp19859
I1
s(g9295
I42
g9296
Vinsert
p19860
I45
VStringLiteral: "http://"
p19861
tp19862
I1
s(g4518
I42
g4519
Vinsert
p19863
I45
VStringLiteral: "/api/v2/spans"
p19864
tp19865
I1
s(g522
I42
g523
Vinsert
p19866
I27
VInfixExpression: +
p19867
tp19868
F0.25
s(g7251
I42
g7252
Vinsert
p19869
I42
VSimpleName: sizeInBytes
p19870
tp19871
I2
s(g5720
I42
g5721
Vinsert
p19872
I52
VThisExpression
p19873
tp19874
I1
s(Vinsert
p19875
I42
VSimpleName: register
p19876
Vinsert
p19877
I45
VStringLiteral: "http://search-domain-xyzzy.us-west-2.es.amazonaws.com:9200"
p19878
tp19879
I1
s(g6894
I42
g6895
Vinsert
p19880
I44
VSingleVariableDeclaration
p19881
tp19882
F1.25
s(g1846
I42
g1847
Vinsert
p19883
I40
VQualifiedName: SearchRequest.Filters
p19884
tp19885
I2
s(g2679
I42
g2680
Vinsert
p19886
I42
VSimpleName: UTF_8
p19887
tp19888
I1
s(g12051
I42
g12052
Vinsert
p19889
I26
VImportDeclaration
p19890
tp19891
F0.5
s(g5386
I42
g5387
Vinsert
p19892
I42
VSimpleName: e
p19893
tp19894
I1
s(g1390
I42
g1391
Vinsert
p19895
I42
VSimpleName: ALWAYS_SAMPLE
p19896
tp19897
F0.25
s(g770
I42
g771
Vinsert
p19898
I42
VSimpleName: getClass
p19899
tp19900
I1
s(Vinsert
p19901
I42
VSimpleName: builder
p19902
Vinsert
p19903
I42
VSimpleName: client
p19904
tp19905
F2.25
s(g3340
I42
g3341
Vinsert
p19906
I42
VSimpleName: request
p19907
tp19908
I2
s(g106
I42
g107
Vinsert
p19909
I42
VSimpleName: retry
p19910
tp19911
F0.25
s(g13147
I42
g13148
Vinsert
p19912
I44
VSingleVariableDeclaration
p19913
tp19914
I1
s(g1270
I42
g1271
Vinsert
p19915
I32
VMethodInvocation
p19916
tp19917
I4
s(g4114
I42
g4115
Vinsert
p19918
I33
VNullLiteral
p19919
tp19920
I5
s(g6804
I42
g6805
Vinsert
p19921
I39
VPrimitiveType: long
p19922
tp19923
F5.75
s(g924
I42
g925
Vinsert
p19924
I42
VSimpleName: bucket
p19925
tp19926
I4
s(g1217
I42
g1218
Vinsert
p19927
I40
VQualifiedName: Constants.CLIENT_SEND
p19928
tp19929
I1
s(g6005
I42
g6006
Vinsert
p19930
I8
VBlock
p19931
tp19932
I1
s(g512
I42
g513
Vinsert
p19933
I42
VSimpleName: Encoding
p19934
tp19935
F0.25
s(g5259
I42
g5260
Vinsert
p19936
I21
VExpressionStatement
p19937
tp19938
I1
s(g4114
I42
g4115
Vinsert
p19939
I42
VSimpleName: currentSpan
p19940
tp19941
I1
s(g1032
I42
g1033
Vinsert
p19942
I21
VExpressionStatement
p19943
tp19944
I2
s(g2689
I42
g2690
Vinsert
p19945
I42
VSimpleName: storage
p19946
tp19947
F0.25
s(g1103
I42
g1104
Vinsert
p19948
I27
VInfixExpression: &&
p19949
tp19950
I1
s(g254
I42
g255
Vinsert
p19951
I43
VSimpleType: Collection
p19952
tp19953
I1
s(g6063
I42
g6064
Vinsert
p19954
I42
VSimpleName: assertThat
p19955
tp19956
I5
s(g5603
I42
g5604
Vinsert
p19957
I8
VBlock
p19958
tp19959
I1
s(g3520
I42
g3521
Vinsert
p19960
I42
VSimpleName: Endpoint
p19961
tp19962
I2
s(g4192
I42
g4193
Vinsert
p19963
I60
VVariableDeclarationStatement
p19964
tp19965
F0.25
s(g8652
I42
g8653
Vinsert
p19966
I39
VPrimitiveType: boolean
p19967
tp19968
F0.25
s(g4498
I42
g4499
Vinsert
p19969
I42
VSimpleName: mockMvc
p19970
tp19971
I1
s(g2388
I42
g2389
Vinsert
p19972
I34
VNumberLiteral: 12
p19973
tp19974
I2
s(g2174
I42
g2175
Vinsert
p19975
I43
VSimpleType: Object
p19976
tp19977
F0.25
s(g2108
I42
g2109
Vinsert
p19978
I45
VStringLiteral: "builder.index"
p19979
tp19980
I1
s(g1172
I42
g1173
Vinsert
p19981
I43
VSimpleType: Annotation
p19982
tp19983
I2
s(g5098
I42
g5099
Vinsert
p19984
I42
VSimpleName: h
p19985
tp19986
F0.25
s(g11744
I42
g11745
Vinsert
p19987
I43
VSimpleType: RuntimeException
p19988
tp19989
I1
s(g1007
I42
g1008
Vinsert
p19990
I43
VSimpleType: TField
p19991
tp19992
I1
s(g2810
I42
g2811
Vinsert
p19993
I32
VMethodInvocation
p19994
tp19995
I1
s(g46
I42
g47
Vinsert
p19996
I42
VSimpleName: Exception
p19997
tp19998
F0.25
s(g9008
I42
g9009
Vinsert
p19999
I45
VStringLiteral: "security-service"
p20000
tp20001
I1
s(g11325
I42
g11326
Vinsert
p20002
I42
VSimpleName: getTraces_annotation_name
p20003
tp20004
F0.25
s(g219
I42
g220
Vinsert
p20005
I42
VSimpleName: content
p20006
tp20007
F0.25
s(g1448
I42
g1449
Vinsert
p20008
I42
VSimpleName: annotations
p20009
tp20010
I1
s(g704
I42
g705
Vinsert
p20011
I45
VStringLiteral: "zipkin-server@host:8080"
p20012
tp20013
I2
s(g4220
I42
g4221
Vinsert
p20014
I42
VSimpleName: result
p20015
tp20016
I3
s(g6376
I42
g6377
Vinsert
p20017
I34
VNumberLiteral: 50_000L
p20018
tp20019
I2
s(g699
I42
g700
Vinsert
p20020
I43
VSimpleType: List
p20021
tp20022
F0.25
s(g1372
I42
g1373
Vinsert
p20023
I43
VSimpleType: ServerTracer
p20024
tp20025
I1
s(g914
I42
g915
Vinsert
p20026
I34
VNumberLiteral: 8
p20027
tp20028
F0.5
s(g1293
I42
g1294
Vinsert
p20029
I43
VSimpleType: ExecutionException
p20030
tp20031
F0.25
s(g2925
I42
g2926
Vinsert
p20032
I45
VStringLiteral: "close"
p20033
tp20034
F0.5
s(g11634
I42
g11635
Vinsert
p20035
I42
VSimpleName: DSLContext
p20036
tp20037
I1
s(g209
I42
g210
Vinsert
p20038
I74
VParameterizedType: CallbackCaptor<Void>
p20039
tp20040
I2
s(g14635
I42
g14636
Vinsert
p20041
I42
VSimpleName: this_present_name
p20042
tp20043
I1
s(Vinsert
p20044
I42
VSimpleName: readSpan
p20045
Vinsert
p20046
I40
VQualifiedName: Codec.THRIFT
p20047
tp20048
F1.25
s(g2920
I42
g2921
Vinsert
p20049
I43
VSimpleType: ConsistencyLevel
p20050
tp20051
F0.25
s(g7646
I42
g7647
Vinsert
p20052
I43
VSimpleType: TraceIdSampler
p20053
tp20054
F3.0
s(g4498
I42
g4499
Vinsert
p20055
I42
VSimpleName: body
p20056
tp20057
I1
s(g17868
I42
g17869
Vinsert
p20058
I42
VSimpleName: truncatesTraceIdTo16CharsWhenNotStrict
p20059
tp20060
F0.25
s(g6758
I42
g6759
Vinsert
p20061
I32
VMethodInvocation
p20062
tp20063
I9
s(g11026
I42
g11027
Vinsert
p20064
I43
VSimpleType: InMemoryStorage
p20065
tp20066
F0.25
s(g7096
I42
g7097
Vinsert
p20067
I42
VSimpleName: IllegalStateException
p20068
tp20069
I1
s(g4072
I42
g4073
Vinsert
p20070
I42
VSimpleName: getVersion
p20071
tp20072
I1
s(g2699
I42
g2700
Vinsert
p20073
I43
VSimpleType: Request.Builder
p20074
tp20075
I1
s(g2663
I42
g2664
Vinsert
p20076
I83
VModifier: public
p20077
tp20078
F0.5
s(g2005
I42
g2006
Vinsert
p20079
I59
VVariableDeclarationFragment
p20080
tp20081
I1
s(g836
I42
g837
Vinsert
p20082
I43
VSimpleType: Exception
p20083
tp20084
I1
s(g4480
I42
g4481
Vinsert
p20085
I42
VSimpleName: Span
p20086
tp20087
F0.25
s(g9502
I42
g9503
Vinsert
p20088
I32
VMethodInvocation
p20089
tp20090
F3.0
s(g527
I42
g528
Vinsert
p20091
I42
VSimpleName: SERVER_SEND
p20092
tp20093
I1
s(g15405
I42
g15406
Vinsert
p20094
I42
VSimpleName: acceptSpans_detectsThriftList
p20095
tp20096
F0.25
s(g4539
I42
g4540
Vinsert
p20097
I42
VSimpleName: Void
p20098
tp20099
I1
s(g2579
I42
g2580
Vinsert
p20100
I43
VSimpleType: List
p20101
tp20102
F2.5
s(g2727
I42
g2728
Vinsert
p20103
I39
VPrimitiveType: void
p20104
tp20105
F0.25
s(g6426
I42
g6427
Vinsert
p20106
I42
VSimpleName: Promise
p20107
tp20108
I1
s(g5449
I42
g5450
Vinsert
p20109
I40
VQualifiedName: b.endpoint.serviceName
p20110
tp20111
I2
s(g4293
I42
g4294
Vinsert
p20112
I59
VVariableDeclarationFragment
p20113
tp20114
I1
s(g2156
I42
g2157
Vinsert
p20115
I42
VSimpleName: i
p20116
tp20117
I2
s(g7613
I42
g7614
Vinsert
p20118
I42
VSimpleName: serviceSpans
p20119
tp20120
I1
s(g7850
I42
g7851
Vinsert
p20121
I21
VExpressionStatement
p20122
tp20123
I4
s(g166
I42
g167
Vinsert
p20124
I42
VSimpleName: interrupted
p20125
tp20126
I2
s(g264
I42
g265
Vinsert
p20127
I42
VSimpleName: Override
p20128
tp20129
F0.25
s(g10112
I42
g10113
Vinsert
p20130
I42
VSimpleName: id
p20131
tp20132
I1
s(g136
I42
g137
Vinsert
p20133
I83
VModifier: static
p20134
tp20135
I1
s(g1423
I42
g1424
Vinsert
p20136
I52
VThisExpression
p20137
tp20138
F0.75
s(g719
I42
g720
Vinsert
p20139
I42
VSimpleName: close
p20140
tp20141
F1.25
s(g1533
I42
g1534
Vinsert
p20142
I27
VInfixExpression: ==
p20143
tp20144
I1
s(g1816
I42
g1817
Vinsert
p20145
I31
VMethodDeclaration
p20146
tp20147
F0.25
s(g704
I42
g705
Vinsert
p20148
I32
VMethodInvocation
p20149
tp20150
I4
s(g9502
I42
g9503
Vinsert
p20151
I7
VAssignment: =
p20152
tp20153
I2
s(g6376
I42
g6377
Vinsert
p20154
I42
VSimpleName: get
p20155
tp20156
I1
s(g5584
I42
g5585
Vinsert
p20157
I44
VSingleVariableDeclaration
p20158
tp20159
F0.25
s(g304
I42
g305
Vinsert
p20160
I45
VStringLiteral: "POST"
p20161
tp20162
I1
s(g1293
I42
g1294
Vinsert
p20163
I43
VSimpleType: Span
p20164
tp20165
I1
s(g1123
I42
g1124
Vinsert
p20166
I32
VMethodInvocation
p20167
tp20168
F315.0
s(g10204
I42
g10205
Vinsert
p20169
I42
VSimpleName: asList
p20170
tp20171
I2
s(g3644
I42
g3645
Vinsert
p20172
I42
VSimpleName: serviceName
p20173
tp20174
I1
s(g5634
I42
g5635
Vinsert
p20175
I7
VAssignment: =
p20176
tp20177
I2
s(g5053
I42
g5054
Vinsert
p20178
I66
VTextElement:  
p20179
tp20180
F0.25
s(g4285
I42
g4286
Vinsert
p20181
I74
VParameterizedType: List<DependencyLink>
p20182
tp20183
I2
s(g2539
I42
g2540
Vinsert
p20184
I43
VSimpleType: LocalSpanCollector
p20185
tp20186
I2
s(g3417
I42
g3418
Vinsert
p20187
I42
VSimpleName: toBuilder
p20188
tp20189
I1
s(g8892
I42
g8893
Vinsert
p20190
I42
VSimpleName: value
p20191
tp20192
I1
s(g4690
I42
g4691
Vinsert
p20193
I40
VQualifiedName: link.child
p20194
tp20195
I1
s(g5915
I42
g5916
Vinsert
p20196
I57
VTypeLiteral
p20197
tp20198
I1
s(g816
I42
g817
Vinsert
p20199
I32
VMethodInvocation
p20200
tp20201
I17
s(g4552
I42
g4553
Vinsert
p20202
I42
VSimpleName: groupedSpans
p20203
tp20204
I1
s(g7850
I42
g7851
Vinsert
p20205
I43
VSimpleType: CassandraContainer
p20206
tp20207
I2
s(g856
I42
g857
Vinsert
p20208
I14
VClassInstanceCreation
p20209
tp20210
I1
s(g7905
I42
g7906
Vinsert
p20211
I42
VSimpleName: aggregation
p20212
tp20213
I1
s(g2232
I42
g2233
Vinsert
p20214
I52
VThisExpression
p20215
tp20216
F0.5
s(g8522
I42
g8523
Vinsert
p20217
I42
VSimpleName: recvdSpans
p20218
tp20219
I1
s(g871
I42
g872
Vinsert
p20220
I42
VSimpleName: size
p20221
tp20222
I1
s(g3730
I42
g3731
Vinsert
p20223
I42
VSimpleName: request
p20224
tp20225
I1
s(g10112
I42
g10113
Vinsert
p20226
I21
VExpressionStatement
p20227
tp20228
I1
s(g5725
I42
g5726
Vinsert
p20229
I8
VBlock
p20230
tp20231
I2
s(g11744
I42
g11745
Vinsert
p20232
I54
VTryStatement
p20233
tp20234
I2
s(g1405
I42
g1406
Vinsert
p20235
I42
VSimpleName: ExecutionException
p20236
tp20237
I1
s(g1438
I42
g1439
Vinsert
p20238
I21
VExpressionStatement
p20239
tp20240
I1
s(g5730
I42
g5731
Vinsert
p20241
I42
VSimpleName: accepted
p20242
tp20243
I1
s(g334
I42
g335
Vinsert
p20244
I42
VSimpleName: guess
p20245
tp20246
I2
s(g11744
I42
g11745
Vinsert
p20247
I42
VSimpleName: RuntimeException
p20248
tp20249
I1
s(g3565
I42
g3566
Vinsert
p20250
I74
VParameterizedType: List<List<Span>>
p20251
tp20252
I1
s(g3788
I42
g3789
Vinsert
p20253
I42
VSimpleName: IOException
p20254
tp20255
F0.25
s(g1270
I42
g1271
Vinsert
p20256
I42
VSimpleName: ClassNotFoundException
p20257
tp20258
F0.25
s(g3176
I42
g3177
Vinsert
p20259
I42
VSimpleName: rootId
p20260
tp20261
I1
s(g5000
I42
g5001
Vinsert
p20262
I39
VPrimitiveType: void
p20263
tp20264
F0.25
s(g405
I42
g406
Vinsert
p20265
I42
VSimpleName: statement
p20266
tp20267
F0.25
s(g2304
I42
g2305
Vinsert
p20268
I42
VSimpleName: interceptor
p20269
tp20270
I1
s(g2475
I42
g2476
Vinsert
p20271
I59
VVariableDeclarationFragment
p20272
tp20273
I5
s(g5603
I42
g5604
Vinsert
p20274
I42
VSimpleName: System
p20275
tp20276
I1
s(g4539
I42
g4540
Vinsert
p20277
I43
VSimpleType: Void
p20278
tp20279
I1
s(g3438
I42
g3439
Vinsert
p20280
I42
VSimpleName: val
p20281
tp20282
F1.25
s(g284
I42
g285
Vinsert
p20283
I44
VSingleVariableDeclaration
p20284
tp20285
F1.5
s(g5598
I42
g5599
Vinsert
p20286
I25
VIfStatement
p20287
tp20288
I1
s(g6320
I42
g6321
Vinsert
p20289
I42
VSimpleName: hasSize
p20290
tp20291
I1
s(g5984
I42
g5985
Vinsert
p20292
I42
VSimpleName: i
p20293
tp20294
I6
s(g2454
I42
g2455
Vinsert
p20295
I42
VSimpleName: JsonCodec
p20296
tp20297
I1
s(g2436
I42
g2437
Vinsert
p20298
I32
VMethodInvocation
p20299
tp20300
I2
s(g14699
I42
g14700
Vinsert
p20301
I45
VStringLiteral: "zipkin.storage.strict-trace-id:false"
p20302
tp20303
I4
s(g4451
I42
g4452
Vinsert
p20304
I45
VStringLiteral: "Do not define `local_dc` and use SimpleStrategy"
p20305
tp20306
F0.25
s(g4498
I42
g4499
Vinsert
p20307
I42
VSimpleName: content
p20308
tp20309
I1
s(g6084
I42
g6085
Vinsert
p20310
I27
VInfixExpression: +
p20311
tp20312
I1
s(g532
I42
g533
Vinsert
p20313
I32
VMethodInvocation
p20314
tp20315
I3
s(Vinsert
p20316
I42
VSimpleName: properties
p20317
Vinsert
p20318
I42
VSimpleName: InterruptedException
p20319
tp20320
F0.25
s(g16271
I42
g16272
Vinsert
p20321
I42
VSimpleName: getRawTrace_exception
p20322
tp20323
F0.25
s(g5264
I42
g5265
Vinsert
p20324
I41
VReturnStatement
p20325
tp20326
F0.25
s(g8190
I42
g8191
Vinsert
p20327
I42
VSimpleName: frontend
p20328
tp20329
I1
s(g4639
I42
g4640
Vinsert
p20330
I42
VSimpleName: result
p20331
tp20332
F0.25
s(g6894
I42
g6895
Vinsert
p20333
I43
VSimpleType: T
p20334
tp20335
F0.5
s(g1103
I42
g1104
Vinsert
p20336
I59
VVariableDeclarationFragment
p20337
tp20338
I1
s(g3422
I42
g3423
Vinsert
p20339
I34
VNumberLiteral: 1L
p20340
tp20341
I2
s(g2219
I42
g2220
Vinsert
p20342
I32
VMethodInvocation
p20343
tp20344
I4
s(g2776
I42
g2777
Vinsert
p20345
I42
VSimpleName: sizeInBytes_link
p20346
tp20347
F0.25
s(g1523
I42
g1524
Vinsert
p20348
I43
VSimpleType: T
p20349
tp20350
I1
s(g2330
I42
g2331
Vinsert
p20351
I83
VModifier: public
p20352
tp20353
F0.25
s(g2145
I42
g2146
Vinsert
p20354
I83
VModifier: private
p20355
tp20356
F0.25
s(g9215
I42
g9216
Vinsert
p20357
I42
VSimpleName: Buffer
p20358
tp20359
F2.25
s(g527
I42
g528
Vinsert
p20360
I34
VNumberLiteral: 1000
p20361
tp20362
I2
s(g1197
I42
g1198
Vinsert
p20363
I42
VSimpleName: asList
p20364
tp20365
I2
s(g2304
I42
g2305
Vinsert
p20366
I40
VQualifiedName: OkHttpClient.Builder
p20367
tp20368
I1
s(g2584
I42
g2585
Vinsert
p20369
I58
VVariableDeclarationExpression
p20370
tp20371
I2
s(g6984
I42
g6985
Vinsert
p20372
I42
VSimpleName: ResultSet
p20373
tp20374
F0.25
s(g5166
I42
g5167
Vinsert
p20375
I60
VVariableDeclarationStatement
p20376
tp20377
I2
s(g8850
I42
g8851
Vinsert
p20378
I43
VSimpleType: List
p20379
tp20380
F0.25
s(g4446
I42
g4447
Vinsert
p20381
I14
VClassInstanceCreation
p20382
tp20383
I3
s(g3199
I42
g3200
Vinsert
p20384
I43
VSimpleType: Consumer
p20385
tp20386
F0.25
s(g7019
I42
g7020
Vinsert
p20387
I42
VSimpleName: DAILY_INDEX_FORMAT
p20388
tp20389
I1
s(g1027
I42
g1028
Vinsert
p20390
I42
VSimpleName: getTraces
p20391
tp20392
I1
s(g2959
I42
g2960
Vinsert
p20393
I42
VSimpleName: url
p20394
tp20395
I1
s(g3867
I42
g3868
Vinsert
p20396
I44
VSingleVariableDeclaration
p20397
tp20398
F0.25
s(g1074
I42
g1075
Vinsert
p20399
I40
VQualifiedName: Span2Codec.JSON
p20400
tp20401
I1
s(g10835
I42
g10836
Vinsert
p20402
I45
VStringLiteral: "app"
p20403
tp20404
F0.75
s(g5491
I42
g5492
Vinsert
p20405
I42
VSimpleName: ensureIndexTemplates
p20406
tp20407
I1
s(g16820
I42
g16821
Vinsert
p20408
I42
VSimpleName: SpanConsumerLogger
p20409
tp20410
F0.25
s(g2098
I42
g2099
Vinsert
p20411
I42
VSimpleName: Response
p20412
tp20413
F0.25
s(g6635
I42
g6636
Vinsert
p20414
I34
VNumberLiteral: 0
p20415
tp20416
I2
s(g1123
I42
g1124
Vinsert
p20417
I60
VVariableDeclarationStatement
p20418
tp20419
I35
s(g572
I42
g573
Vinsert
p20420
I25
VIfStatement
p20421
tp20422
I1
s(g4344
I42
g4345
Vinsert
p20423
I42
VSimpleName: status
p20424
tp20425
I1
s(g10954
I42
g10955
Vinsert
p20426
I43
VSimpleType: HttpServletResponse
p20427
tp20428
F0.25
s(g3618
I42
g3619
Vinsert
p20429
I9
VBooleanLiteral: false
p20430
tp20431
I1
s(g3263
I42
g3264
Vinsert
p20432
I26
VImportDeclaration
p20433
tp20434
F0.25
s(g101
I42
g102
Vinsert
p20435
I21
VExpressionStatement
p20436
tp20437
I2
s(g11312
I42
g11313
Vinsert
p20438
I83
VModifier: final
p20439
tp20440
I1
s(g1987
I42
g1988
Vinsert
p20441
I74
VParameterizedType: TableField<Record,Long>
p20442
tp20443
I3
s(g4895
I42
g4896
Vinsert
p20444
I14
VClassInstanceCreation
p20445
tp20446
F2.25
s(g8367
I42
g8368
Vinsert
p20447
I45
VStringLiteral: "    \u005c"build_hash\u005c" : \u005c"253032b\u005c",\u005cn"
p20448
tp20449
I1
s(g17868
I42
g17869
Vinsert
p20450
I43
VSimpleType: Exception
p20451
tp20452
F0.25
s(g4488
I42
g4489
Vinsert
p20453
I21
VExpressionStatement
p20454
tp20455
I1
s(g1192
I42
g1193
Vinsert
p20456
I39
VPrimitiveType: byte
p20457
tp20458
F0.25
s(g10433
I42
g10434
Vinsert
p20459
I45
VStringLiteral: "some-client"
p20460
tp20461
F0.25
s(g418
I42
g419
Vinsert
p20462
I8
VBlock
p20463
tp20464
I1
s(g1090
I42
g1091
Vinsert
p20465
I14
VClassInstanceCreation
p20466
tp20467
I1
s(g2403
I42
g2404
Vinsert
p20468
I42
VSimpleName: srService
p20469
tp20470
I2
s(g2090
I42
g2091
Vinsert
p20471
I43
VSimpleType: Void
p20472
tp20473
I1
s(g4923
I42
g4924
Vinsert
p20474
I45
VStringLiteral: "sonatype"
p20475
tp20476
I1
s(g5780
I42
g5781
Vinsert
p20477
I40
VQualifiedName: Calendar.MILLISECOND
p20478
tp20479
I1
s(g1856
I42
g1857
Vinsert
p20480
I21
VExpressionStatement
p20481
tp20482
F1.25
s(g5547
I42
g5548
Vinsert
p20483
I42
VSimpleName: Span
p20484
tp20485
I2
s(g4895
I42
g4896
Vinsert
p20486
I42
VSimpleName: es
p20487
tp20488
I1
s(g11325
I42
g11326
Vinsert
p20489
I42
VSimpleName: Test
p20490
tp20491
F0.25
s(g4568
I42
g4569
Vinsert
p20492
I21
VExpressionStatement
p20493
tp20494
I1
s(g1579
I42
g1580
Vinsert
p20495
I45
VStringLiteral: "num"
p20496
tp20497
F0.25
s(g1095
I42
g1096
Vinsert
p20498
I39
VPrimitiveType: int
p20499
tp20500
F0.25
s(g19654
I42
g19655
Vinsert
p20501
I42
VSimpleName: setUseSsl
p20502
tp20503
F0.5
s(g1881
I42
g1882
Vinsert
p20504
I42
VSimpleName: getBytes
p20505
tp20506
I1
s(g6025
I42
g6026
Vinsert
p20507
I43
VSimpleType: ElasticsearchHttpNamesFallbackTest
p20508
tp20509
F0.5
s(g8305
I42
g8306
Vinsert
p20510
I42
VSimpleName: endpoint
p20511
tp20512
I1
s(g3268
I42
g3269
Vinsert
p20513
I42
VSimpleName: ZipkinServer
p20514
tp20515
I2
s(g5842
I42
g5843
Vinsert
p20516
I42
VSimpleName: List
p20517
tp20518
I1
s(g2810
I42
g2811
Vinsert
p20519
I43
VSimpleType: CountDownLatch
p20520
tp20521
I2
s(g3533
I42
g3534
Vinsert
p20522
I34
VNumberLiteral: 8
p20523
tp20524
I2
s(g357
I42
g358
Vinsert
p20525
I43
VSimpleType: Annotation
p20526
tp20527
I1
s(g1693
I42
g1694
Vinsert
p20528
I74
VParameterizedType: List<Span>
p20529
tp20530
I1
s(g876
I42
g877
Vinsert
p20531
I42
VSimpleName: session
p20532
tp20533
F0.25
s(g1620
I42
g1621
Vinsert
p20534
I42
VSimpleName: selectTraceIdsByServiceNames
p20535
tp20536
F0.5
s(g4895
I42
g4896
Vinsert
p20537
I42
VSimpleName: onSuccess
p20538
tp20539
I1
s(g2005
I42
g2006
Vinsert
p20540
I60
VVariableDeclarationStatement
p20541
tp20542
I1
s(g76
I42
g77
Vinsert
p20543
I42
VSimpleName: number
p20544
tp20545
I2
s(g595
I42
g596
Vinsert
p20546
I42
VSimpleName: FINEST
p20547
tp20548
I1
s(g7450
I42
g7451
Vinsert
p20549
I45
VStringLiteral: "\u005c"\u005cn"
p20550
tp20551
I1
s(g5112
I42
g5113
Vinsert
p20552
I21
VExpressionStatement
p20553
tp20554
I3
s(g2278
I42
g2279
Vinsert
p20555
I39
VPrimitiveType: void
p20556
tp20557
F0.25
s(g4673
I42
g4674
Vinsert
p20558
I31
VMethodDeclaration
p20559
tp20560
F0.25
s(g4518
I42
g4519
Vinsert
p20561
I43
VSimpleType: Request.Builder
p20562
tp20563
I2
s(g5311
I42
g5312
Vinsert
p20564
I42
VSimpleName: metric
p20565
tp20566
I2
s(g11634
I42
g11635
Vinsert
p20567
I42
VSimpleName: Connection
p20568
tp20569
I2
s(g3296
I42
g3297
Vinsert
p20570
I42
VSimpleName: Callback
p20571
tp20572
F0.25
s(g846
I42
g847
Vinsert
p20573
I40
VQualifiedName: SelectTraceIdsFromServiceSpan.Input
p20574
tp20575
I1
s(g12325
I42
g12326
Vinsert
p20576
I42
VSimpleName: getKeyspace
p20577
tp20578
I2
s(g1594
I42
g1595
Vinsert
p20579
I90
VExpressionMethodReference
p20580
tp20581
I1
s(g6203
I42
g6204
Vinsert
p20582
I42
VSimpleName: peek
p20583
tp20584
F0.25
s(g7134
I42
g7135
Vinsert
p20585
I32
VMethodInvocation
p20586
tp20587
I1
s(g66
I42
g67
Vinsert
p20588
I43
VSimpleType: Exception
p20589
tp20590
F0.25
s(g724
I42
g725
Vinsert
p20591
I32
VMethodInvocation
p20592
tp20593
I6
s(g4621
I42
g4622
Vinsert
p20594
I44
VSingleVariableDeclaration
p20595
tp20596
I1
s(g5166
I42
g5167
Vinsert
p20597
I79
VSingleMemberAnnotation
p20598
tp20599
F0.5
s(g4552
I42
g4553
Vinsert
p20600
I42
VSimpleName: CorrectForClockSkew
p20601
tp20602
I1
s(g1709
I42
g1710
Vinsert
p20603
I33
VNullLiteral
p20604
tp20605
I1
s(g502
I42
g503
Vinsert
p20606
I42
VSimpleName: addPostInterceptor
p20607
tp20608
I1
s(g1949
I42
g1950
Vinsert
p20609
I43
VSimpleType: ElasticsearchHttpStorage
p20610
tp20611
F0.25
s(g3707
I42
g3708
Vinsert
p20612
I42
VSimpleName: url
p20613
tp20614
I1
s(g10112
I42
g10113
Vinsert
p20615
I42
VSimpleName: rpcAncestor
p20616
tp20617
I2
s(g5259
I42
g5260
Vinsert
p20618
I44
VSingleVariableDeclaration
p20619
tp20620
F0.25
s(g1438
I42
g1439
Vinsert
p20621
I42
VSimpleName: buffer
p20622
tp20623
I1
s(g10112
I42
g10113
Vinsert
p20624
I33
VNullLiteral
p20625
tp20626
I1
s(g3136
I42
g3137
Vinsert
p20627
I42
VSimpleName: Inet6Address
p20628
tp20629
I1
s(g3155
I42
g3156
Vinsert
p20630
I43
VSimpleType: Long
p20631
tp20632
F0.25
s(g816
I42
g817
Vinsert
p20633
I59
VVariableDeclarationFragment
p20634
tp20635
I10
s(g4717
I42
g4718
Vinsert
p20636
I42
VSimpleName: Span
p20637
tp20638
F4.25
s(g1040
I42
g1041
Vinsert
p20639
I42
VSimpleName: adapter
p20640
tp20641
F2.25
s(g1505
I42
g1506
Vinsert
p20642
I42
VSimpleName: InMemoryConfiguration
p20643
tp20644
I1
s(g4923
I42
g4924
Vinsert
p20645
I42
VSimpleName: serverSettings
p20646
tp20647
I2
s(g16271
I42
g16272
Vinsert
p20648
I21
VExpressionStatement
p20649
tp20650
I1
s(g6236
I42
g6237
Vinsert
p20651
I42
VSimpleName: IllegalStateException
p20652
tp20653
I1
s(g1372
I42
g1373
Vinsert
p20654
I42
VSimpleName: addInterceptors
p20655
tp20656
F0.25
s(g16965
I42
g16966
Vinsert
p20657
I40
VQualifiedName: zipkin.internal.Util.checkArgument
p20658
tp20659
F0.5
s(g8135
I42
g8136
Vinsert
p20660
I58
VVariableDeclarationExpression
p20661
tp20662
I1
s(g2278
I42
g2279
Vinsert
p20663
I32
VMethodInvocation
p20664
tp20665
F2.25
s(g5712
I42
g5713
Vinsert
p20666
I9
VBooleanLiteral: false
p20667
tp20668
I1
s(g4568
I42
g4569
Vinsert
p20669
I44
VSingleVariableDeclaration
p20670
tp20671
F0.5
s(g2179
I42
g2180
Vinsert
p20672
I27
VInfixExpression: ==
p20673
tp20674
F0.25
s(g6431
I42
g6432
Vinsert
p20675
I42
VSimpleName: dependenciesRoundTrip
p20676
tp20677
F0.25
s(g1911
I42
g1912
Vinsert
p20678
I39
VPrimitiveType: char
p20679
tp20680
I1
s(g6827
I42
g6828
Vinsert
p20681
I14
VClassInstanceCreation
p20682
tp20683
I6
s(g982
I42
g983
Vinsert
p20684
I39
VPrimitiveType: byte
p20685
tp20686
F0.25
s(g4275
I42
g4276
Vinsert
p20687
I42
VSimpleName: spanCount
p20688
tp20689
I1
s(g9547
I42
g9548
Vinsert
p20690
I42
VSimpleName: TransportClient
p20691
tp20692
I1
s(g259
I42
g260
Vinsert
p20693
I83
VModifier: public
p20694
tp20695
F0.5
s(g4034
I42
g4035
Vinsert
p20696
I42
VSimpleName: callback
p20697
tp20698
I1
s(g19654
I42
g19655
Vinsert
p20699
I7
VAssignment: =
p20700
tp20701
F0.75
s(g3992
I42
g3993
Vinsert
p20702
I34
VNumberLiteral: 2L
p20703
tp20704
I1
s(g5598
I42
g5599
Vinsert
p20705
I42
VSimpleName: e
p20706
tp20707
I2
s(g582
I42
g583
Vinsert
p20708
I42
VSimpleName: getQueryString
p20709
tp20710
I1
s(g2901
I42
g2902
Vinsert
p20711
I33
VNullLiteral
p20712
tp20713
I4
s(g4856
I42
g4857
Vinsert
p20714
I39
VPrimitiveType: long
p20715
tp20716
F0.25
s(g3867
I42
g3868
Vinsert
p20717
I42
VSimpleName: Span
p20718
tp20719
F0.25
s(g3268
I42
g3269
Vinsert
p20720
I43
VSimpleType: ZipkinServer
p20721
tp20722
I2
s(g3618
I42
g3619
Vinsert
p20723
I54
VTryStatement
p20724
tp20725
I2
s(Vinsert
p20726
I42
VSimpleName: equals
p20727
Vinsert
p20728
I42
VSimpleName: username
p20729
tp20730
F1.25
s(g4480
I42
g4481
Vinsert
p20731
I42
VSimpleName: readTenClientSpans_json_zipkin
p20732
tp20733
F0.25
s(Vinsert
p20734
I42
VSimpleName: emptySet
p20735
Vinsert
p20736
I43
VSimpleType: String
p20737
tp20738
I1
s(g1795
I42
g1796
Vinsert
p20739
I43
VSimpleType: ActuateCollectorMetrics
p20740
tp20741
F0.25
s(g339
I42
g340
Vinsert
p20742
I42
VSimpleName: TestingCluster
p20743
tp20744
I1
s(g4928
I42
g4929
Vinsert
p20745
I74
VParameterizedType: List<byte[]>
p20746
tp20747
I2
s(g3767
I42
g3768
Vinsert
p20748
I43
VSimpleType: Span
p20749
tp20750
I2
s(g6699
I42
g6700
Vinsert
p20751
I42
VSimpleName: storeRateGroup
p20752
tp20753
I1
s(Vinsert
p20754
I42
VSimpleName: add
p20755
Vinsert
p20756
I40
VQualifiedName: spans.size
p20757
tp20758
I1
s(g1866
I42
g1867
Vinsert
p20759
I43
VSimpleType: ElasticsearchStorage.Builder
p20760
tp20761
I2
s(g1058
I42
g1059
Vinsert
p20762
I32
VMethodInvocation
p20763
tp20764
I8
s(g4557
I42
g4558
Vinsert
p20765
I45
VStringLiteral: "traceId:"
p20766
tp20767
I1
s(g8611
I42
g8612
Vinsert
p20768
I42
VSimpleName: content
p20769
tp20770
I1
s(g1146
I42
g1147
Vinsert
p20771
I14
VClassInstanceCreation
p20772
tp20773
I1
s(g2304
I42
g2305
Vinsert
p20774
I14
VClassInstanceCreation
p20775
tp20776
I3
s(g13444
I42
g13445
Vinsert
p20777
I43
VSimpleType: CollectorMetrics
p20778
tp20779
I2
s(g4090
I42
g4091
Vinsert
p20780
I39
VPrimitiveType: byte
p20781
tp20782
I1
s(g6355
I42
g6356
Vinsert
p20783
I22
VFieldAccess
p20784
tp20785
F0.25
s(g10954
I42
g10955
Vinsert
p20786
I42
VSimpleName: redirectRoot
p20787
tp20788
F0.25
s(g1456
I42
g1457
Vinsert
p20789
I42
VSimpleName: input
p20790
tp20791
F0.25
s(g6552
I42
g6553
Vinsert
p20792
I34
VNumberLiteral: 1L
p20793
tp20794
F2.25
s(g8688
I42
g8689
Vinsert
p20795
I8
VBlock
p20796
tp20797
I2
s(g497
I42
g498
Vinsert
p20798
I42
VSimpleName: Override
p20799
tp20800
F0.25
s(g16138
I42
g16139
Vinsert
p20801
I42
VSimpleName: ScribeConfig
p20802
tp20803
I2
s(g4749
I42
g4750
Vinsert
p20804
I42
VSimpleName: result
p20805
tp20806
I2
s(g3933
I42
g3934
Vinsert
p20807
I31
VMethodDeclaration
p20808
tp20809
F0.25
s(g2833
I42
g2834
Vinsert
p20810
I42
VSimpleName: List
p20811
tp20812
F0.25
s(Vinsert
p20813
I42
VSimpleName: create
p20814
Vinsert
p20815
I45
VStringLiteral: "server"
p20816
tp20817
I2
s(g2255
I42
g2256
Vinsert
p20818
I42
VSimpleName: executor
p20819
tp20820
F2.25
s(g3372
I42
g3373
Vinsert
p20821
I34
VNumberLiteral: 10L
p20822
tp20823
I1
s(g719
I42
g720
Vinsert
p20824
I43
VSimpleType: IOException
p20825
tp20826
F0.75
s(g3017
I42
g3018
Vinsert
p20827
I53
VThrowStatement
p20828
tp20829
I1
s(g2771
I42
g2772
Vinsert
p20830
I42
VSimpleName: String
p20831
tp20832
F0.25
s(g987
I42
g988
Vinsert
p20833
I42
VSimpleName: get
p20834
tp20835
I2
s(g2896
I42
g2897
Vinsert
p20836
I44
VSingleVariableDeclaration
p20837
tp20838
F0.25
s(g2156
I42
g2157
Vinsert
p20839
I59
VVariableDeclarationFragment
p20840
tp20841
I1
s(g7763
I42
g7764
Vinsert
p20842
I31
VMethodDeclaration
p20843
tp20844
F0.75
s(g3688
I42
g3689
Vinsert
p20845
I42
VSimpleName: delegate
p20846
tp20847
I1
s(g8601
I42
g8602
Vinsert
p20848
I45
VStringLiteral: "application/json"
p20849
tp20850
I1
s(g12875
I42
g12876
Vinsert
p20851
I40
VQualifiedName: org.jooq.impl.SQLDataType.DOUBLE
p20852
tp20853
I1
s(g10204
I42
g10205
Vinsert
p20854
I42
VSimpleName: trace1
p20855
tp20856
I1
s(g5603
I42
g5604
Vinsert
p20857
I42
VSimpleName: key
p20858
tp20859
F1.25
s(g4469
I42
g4470
Vinsert
p20860
I78
VMarkerAnnotation
p20861
tp20862
F0.25
s(g9174
I42
g9175
Vinsert
p20863
I42
VSimpleName: binaryAnnotationKeys
p20864
tp20865
I2
s(g6231
I42
g6232
Vinsert
p20866
I43
VSimpleType: KafkaCollector
p20867
tp20868
F0.5
s(g5807
I42
g5808
Vinsert
p20869
I43
VSimpleType: TraceIdSampler
p20870
tp20871
I1
s(g1649
I42
g1650
Vinsert
p20872
I31
VMethodDeclaration
p20873
tp20874
F0.25
s(g9817
I42
g9818
Vinsert
p20875
I42
VSimpleName: Object
p20876
tp20877
I1
s(g5938
I42
g5939
Vinsert
p20878
I42
VSimpleName: props
p20879
tp20880
I3
s(g669
I42
g670
Vinsert
p20881
I42
VSimpleName: writeSpans
p20882
tp20883
I2
s(g2566
I42
g2567
Vinsert
p20884
I45
VStringLiteral: "{\u005cn"
p20885
tp20886
I3
s(g5405
I42
g5406
Vinsert
p20887
I41
VReturnStatement
p20888
tp20889
I1
s(g3115
I42
g3116
Vinsert
p20890
I83
VModifier: public
p20891
tp20892
F0.25
s(g6407
I42
g6408
Vinsert
p20893
I27
VInfixExpression: +
p20894
tp20895
I1
s(g8663
I42
g8664
Vinsert
p20896
I43
VSimpleType: ElasticsearchSpanConsumerTest
p20897
tp20898
F0.5
s(g2355
I42
g2356
Vinsert
p20899
I74
VParameterizedType: ConsumerIterator<byte[],byte[]>
p20900
tp20901
I1
s(g9497
I42
g9498
Vinsert
p20902
I43
VSimpleType: ElasticsearchSpanStore
p20903
tp20904
F0.25
s(g5486
I42
g5487
Vinsert
p20905
I43
VSimpleType: ConnectException
p20906
tp20907
I2
s(g684
I42
g685
Vinsert
p20908
I42
VSimpleName: Map
p20909
tp20910
F0.25
s(g12697
I42
g12698
Vinsert
p20911
I42
VSimpleName: rootSpan
p20912
tp20913
I2
s(g582
I42
g583
Vinsert
p20914
I42
VSimpleName: insertServiceName
p20915
tp20916
I1
s(g1861
I42
g1862
Vinsert
p20917
I60
VVariableDeclarationStatement
p20918
tp20919
I6
s(g1790
I42
g1791
Vinsert
p20920
I60
VVariableDeclarationStatement
p20921
tp20922
I1
s(g1574
I42
g1575
Vinsert
p20923
I52
VThisExpression
p20924
tp20925
F0.5
s(g4967
I42
g4968
Vinsert
p20926
I21
VExpressionStatement
p20927
tp20928
I1
s(g10551
I42
g10552
Vinsert
p20929
I31
VMethodDeclaration
p20930
tp20931
F0.25
s(g3974
I42
g3975
Vinsert
p20932
I42
VSimpleName: client
p20933
tp20934
I3
s(g8707
I42
g8708
Vinsert
p20935
I42
VSimpleName: guessTimestamp
p20936
tp20937
I1
s(g2046
I42
g2047
Vinsert
p20938
I44
VSingleVariableDeclaration
p20939
tp20940
F3.5
s(g2750
I42
g2751
Vinsert
p20941
I42
VSimpleName: delegate
p20942
tp20943
I1
s(g4778
I42
g4779
Vinsert
p20944
I39
VPrimitiveType: void
p20945
tp20946
F0.25
s(g5621
I42
g5622
Vinsert
p20947
I42
VSimpleName: get
p20948
tp20949
I1
s(g4923
I42
g4924
Vinsert
p20950
I42
VSimpleName: setId
p20951
tp20952
I1
s(g6663
I42
g6664
Vinsert
p20953
I42
VSimpleName: Span
p20954
tp20955
F0.5
s(g4913
I42
g4914
Vinsert
p20956
I42
VSimpleName: Set
p20957
tp20958
I1
s(g7134
I42
g7135
Vinsert
p20959
I31
VMethodDeclaration
p20960
tp20961
F0.25
s(g2547
I42
g2548
Vinsert
p20962
I27
VInfixExpression: !=
p20963
tp20964
I1
s(g6045
I42
g6046
Vinsert
p20965
I21
VExpressionStatement
p20966
tp20967
I1
s(g418
I42
g419
Vinsert
p20968
I42
VSimpleName: assertThat
p20969
tp20970
I1
s(g1944
I42
g1945
Vinsert
p20971
I83
VModifier: protected
p20972
tp20973
F0.5
s(g426
I42
g427
Vinsert
p20974
I32
VMethodInvocation
p20975
tp20976
I16
s(g3707
I42
g3708
Vinsert
p20977
I42
VSimpleName: getAddress
p20978
tp20979
I1
s(g11397
I42
g11398
Vinsert
p20980
I45
VStringLiteral: "GET"
p20981
tp20982
I1
s(g6658
I42
g6659
Vinsert
p20983
I42
VSimpleName: adapter
p20984
tp20985
I1
s(g2574
I42
g2575
Vinsert
p20986
I43
VSimpleType: Long
p20987
tp20988
F0.25
s(g1831
I42
g1832
Vinsert
p20989
I27
VInfixExpression: +
p20990
tp20991
I1
s(g2642
I42
g2643
Vinsert
p20992
I42
VSimpleName: BoundStatementKey
p20993
tp20994
I3
s(g3250
I42
g3251
Vinsert
p20995
I42
VSimpleName: getMessage
p20996
tp20997
I2
s(g6421
I42
g6422
Vinsert
p20998
I54
VTryStatement
p20999
tp21000
I1
s(g4136
I42
g4137
Vinsert
p21001
I25
VIfStatement
p21002
tp21003
I4
s(g5098
I42
g5099
Vinsert
p21004
I23
VFieldDeclaration
p21005
tp21006
F0.25
s(g7850
I42
g7851
Vinsert
p21007
I27
VInfixExpression: +
p21008
tp21009
I2
s(g11026
I42
g11027
Vinsert
p21010
I43
VSimpleType: ActuateCollectorMetrics
p21011
tp21012
F0.25
s(g2750
I42
g2751
Vinsert
p21013
I52
VThisExpression
p21014
tp21015
F1.5
s(g19521
I42
g19522
Vinsert
p21016
I42
VSimpleName: selectTraceIdsByServiceName
p21017
tp21018
I1
s(g3072
I42
g3073
Vinsert
p21019
I43
VSimpleType: TracedSpanStore
p21020
tp21021
I1
s(g4330
I42
g4331
Vinsert
p21022
I57
VTypeLiteral
p21023
tp21024
I1
s(g674
I42
g675
Vinsert
p21025
I42
VSimpleName: tokenizedTraceId_2x
p21026
tp21027
F0.25
s(g6045
I42
g6046
Vinsert
p21028
I13
VCharacterLiteral: 'o'
p21029
tp21030
I1
s(g8152
I42
g8153
Vinsert
p21031
I21
VExpressionStatement
p21032
tp21033
F0.25
s(g2750
I42
g2751
Vinsert
p21034
I22
VFieldAccess
p21035
tp21036
F1.5
s(g1247
I42
g1248
Vinsert
p21037
I83
VModifier: protected
p21038
tp21039
F0.5
s(g939
I42
g940
Vinsert
p21040
I42
VSimpleName: V2SpanConsumerAdapter
p21041
tp21042
I1
s(g4095
I42
g4096
Vinsert
p21043
I70
VEnhancedForStatement
p21044
tp21045
I1
s(g739
I42
g740
Vinsert
p21046
I42
VSimpleName: Span2
p21047
tp21048
I1
s(g2732
I42
g2733
Vinsert
p21049
I27
VInfixExpression: +
p21050
tp21051
I1
s(g4280
I42
g4281
Vinsert
p21052
I42
VSimpleName: name
p21053
tp21054
I1
s(g5486
I42
g5487
Vinsert
p21055
I57
VTypeLiteral
p21056
tp21057
I1
s(g299
I42
g300
Vinsert
p21058
I32
VMethodInvocation
p21059
tp21060
I4
s(g3212
I42
g3213
Vinsert
p21061
I44
VSingleVariableDeclaration
p21062
tp21063
F0.5
s(Vinsert
p21064
I42
VSimpleName: builder
p21065
Vinsert
p21066
I42
VSimpleName: Span
p21067
tp21068
F34.0
s(g2627
I42
g2628
Vinsert
p21069
I43
VSimpleType: Response
p21070
tp21071
I1
s(g4754
I42
g4755
Vinsert
p21072
I45
VStringLiteral: ""
p21073
tp21074
I1
s(g239
I42
g240
Vinsert
p21075
I83
VModifier: public
p21076
tp21077
F0.5
s(g5584
I42
g5585
Vinsert
p21078
I39
VPrimitiveType: void
p21079
tp21080
F0.25
s(g5369
I42
g5370
Vinsert
p21081
I42
VSimpleName: IllegalArgumentException
p21082
tp21083
F0.25
s(g1095
I42
g1096
Vinsert
p21084
I44
VSingleVariableDeclaration
p21085
tp21086
F0.5
s(g3745
I42
g3746
Vinsert
p21087
I40
VQualifiedName: CassandraTestGraph.INSTANCE
p21088
tp21089
I1
s(g456
I42
g457
Vinsert
p21090
I43
VSimpleType: IllegalStateException
p21091
tp21092
I1
s(g6195
I42
g6196
Vinsert
p21093
I42
VSimpleName: Long
p21094
tp21095
I1
s(g6195
I42
g6196
Vinsert
p21096
I74
VParameterizedType: Map.Entry<Long,SpanNode>
p21097
tp21098
I1
s(g757
I42
g758
Vinsert
p21099
I41
VReturnStatement
p21100
tp21101
I1
s(g1551
I42
g1552
Vinsert
p21102
I34
VNumberLiteral: 127
p21103
tp21104
I1
s(g2880
I42
g2881
Vinsert
p21105
I42
VSimpleName: storage
p21106
tp21107
F0.5
s(g2416
I42
g2417
Vinsert
p21108
I14
VClassInstanceCreation
p21109
tp21110
I1
s(g6079
I42
g6080
Vinsert
p21111
I42
VSimpleName: Span
p21112
tp21113
F1.5
s(g6685
I42
g6686
Vinsert
p21114
I43
VSimpleType: TransportClient
p21115
tp21116
I1
s(g3675
I42
g3676
Vinsert
p21117
I42
VSimpleName: minDuration
p21118
tp21119
I1
s(g502
I42
g503
Vinsert
p21120
I42
VSimpleName: of
p21121
tp21122
I1
s(g744
I42
g745
Vinsert
p21123
I60
VVariableDeclarationStatement
p21124
tp21125
I1
s(g6342
I42
g6343
Vinsert
p21126
I42
VSimpleName: String
p21127
tp21128
F0.25
s(g10112
I42
g10113
Vinsert
p21129
I42
VSimpleName: currentSpan
p21130
tp21131
I1
s(g2454
I42
g2455
Vinsert
p21132
I44
VSingleVariableDeclaration
p21133
tp21134
F0.25
s(g4187
I42
g4188
Vinsert
p21135
I43
VSimpleType: Iterator
p21136
tp21137
I4
s(g479
I42
g480
Vinsert
p21138
I45
VStringLiteral: "region"
p21139
tp21140
F0.25
s(g4225
I42
g4226
Vinsert
p21141
I42
VSimpleName: toBuilder
p21142
tp21143
I1
s(g749
I42
g750
Vinsert
p21144
I45
VStringLiteral: "test"
p21145
tp21146
I1
s(g4152
I42
g4153
Vinsert
p21147
I60
VVariableDeclarationStatement
p21148
tp21149
I1
s(g2627
I42
g2628
Vinsert
p21150
I60
VVariableDeclarationStatement
p21151
tp21152
I1
s(g2090
I42
g2091
Vinsert
p21153
I60
VVariableDeclarationStatement
p21154
tp21155
I1
s(g4136
I42
g4137
Vinsert
p21156
I27
VInfixExpression: <
p21157
tp21158
I1
s(g2355
I42
g2356
Vinsert
p21159
I5
VArrayType: byte[]
p21160
tp21161
I2
s(Vinsert
p21162
I42
VSimpleName: get
p21163
Vinsert
p21164
I43
VSimpleType: CharsetEncoder
p21165
tp21166
F0.25
s(g6376
I42
g6377
Vinsert
p21167
I42
VSimpleName: assertThat
p21168
tp21169
I5
s(g426
I42
g427
Vinsert
p21170
I42
VSimpleName: CorrectForClockSkew
p21171
tp21172
I1
s(g4319
I42
g4320
Vinsert
p21173
I40
VQualifiedName: body.length
p21174
tp21175
I1
s(g4830
I42
g4831
Vinsert
p21176
I31
VMethodDeclaration
p21177
tp21178
F0.25
s(g6894
I42
g6895
Vinsert
p21179
I42
VSimpleName: T
p21180
tp21181
F0.5
s(g3059
I42
g3060
Vinsert
p21182
I42
VSimpleName: span1
p21183
tp21184
I2
s(g3443
I42
g3444
Vinsert
p21185
I14
VClassInstanceCreation
p21186
tp21187
F1.25
s(g385
I42
g386
Vinsert
p21188
I40
VQualifiedName: zipkin.internal.v2.DependencyLink
p21189
tp21190
I1
s(g9547
I42
g9548
Vinsert
p21191
I36
VParenthesizedExpression
p21192
tp21193
I1
s(g18013
I42
g18014
Vinsert
p21194
I42
VSimpleName: get
p21195
tp21196
F0.25
s(g4415
I42
g4416
Vinsert
p21197
I42
VSimpleName: TDeserializer
p21198
tp21199
I1
s(g299
I42
g300
Vinsert
p21200
I42
VSimpleName: input
p21201
tp21202
I2
s(g3607
I42
g3608
Vinsert
p21203
I42
VSimpleName: String
p21204
tp21205
I2
s(g891
I42
g892
Vinsert
p21206
I42
VSimpleName: build
p21207
tp21208
I1
s(g6320
I42
g6321
Vinsert
p21209
I43
VSimpleType: QueryRequest.Builder
p21210
tp21211
I1
s(g4840
I42
g4841
Vinsert
p21212
I52
VThisExpression
p21213
tp21214
F0.25
s(g9502
I42
g9503
Vinsert
p21215
I8
VBlock
p21216
tp21217
F0.25
s(g380
I42
g381
Vinsert
p21218
I5
VArrayType: byte[]
p21219
tp21220
F0.25
s(g1136
I42
g1137
Vinsert
p21221
I21
VExpressionStatement
p21222
tp21223
I3
s(g2446
I42
g2447
Vinsert
p21224
I42
VSimpleName: CLIENT_SEND
p21225
tp21226
I1
s(g1288
I42
g1289
Vinsert
p21227
I60
VVariableDeclarationStatement
p21228
tp21229
I1
s(g1108
I42
g1109
Vinsert
p21230
I42
VSimpleName: traceId
p21231
tp21232
I3
s(g3125
I42
g3126
Vinsert
p21233
I39
VPrimitiveType: byte
p21234
tp21235
I1
s(g6552
I42
g6553
Vinsert
p21236
I42
VSimpleName: name
p21237
tp21238
I1
s(g954
I42
g955
Vinsert
p21239
I25
VIfStatement
p21240
tp21241
I1
s(g2446
I42
g2447
Vinsert
p21242
I42
VSimpleName: rootSpanId
p21243
tp21244
I1
s(g5221
I42
g5222
Vinsert
p21245
I42
VSimpleName: toString
p21246
tp21247
F0.25
s(Vinsert
p21248
I42
VSimpleName: set
p21249
Vinsert
p21250
I42
VSimpleName: TRACE
p21251
tp21252
I1
s(g1688
I42
g1689
Vinsert
p21253
I34
VNumberLiteral: 2
p21254
tp21255
I1
s(g10732
I42
g10733
Vinsert
p21256
I42
VSimpleName: allowedOrigins
p21257
tp21258
I1
s(g11825
I42
g11826
Vinsert
p21259
I32
VMethodInvocation
p21260
tp21261
I25
s(g12697
I42
g12698
Vinsert
p21262
I43
VSimpleType: List
p21263
tp21264
I1
s(g6615
I42
g6616
Vinsert
p21265
I42
VSimpleName: builder
p21266
tp21267
I1
s(g3194
I42
g3195
Vinsert
p21268
I45
VStringLiteral: "      \u005c"value\u005c": 1.23456789,\u005cn"
p21269
tp21270
I1
s(g4212
I42
g4213
Vinsert
p21271
I40
VQualifiedName: ZIPKIN_SPANS.TRACE_ID
p21272
tp21273
I1
s(g385
I42
g386
Vinsert
p21274
I44
VSingleVariableDeclaration
p21275
tp21276
F0.25
s(g4773
I42
g4774
Vinsert
p21277
I42
VSimpleName: temp
p21278
tp21279
I2
s(g5435
I42
g5436
Vinsert
p21280
I59
VVariableDeclarationFragment
p21281
tp21282
I1
s(g704
I42
g705
Vinsert
p21283
I34
VNumberLiteral: 20
p21284
tp21285
I1
s(g2838
I42
g2839
Vinsert
p21286
I40
VQualifiedName: JsonToken.NULL
p21287
tp21288
I2
s(g3427
I42
g3428
Vinsert
p21289
I12
VCatchClause
p21290
tp21291
I1
s(g7602
I42
g7603
Vinsert
p21292
I13
VCharacterLiteral: '['
p21293
tp21294
I1
s(g289
I42
g290
Vinsert
p21295
I32
VMethodInvocation
p21296
tp21297
I7
s(g6342
I42
g6343
Vinsert
p21298
I42
VSimpleName: ITCassandraStorage
p21299
tp21300
I1
s(g5264
I42
g5265
Vinsert
p21301
I21
VExpressionStatement
p21302
tp21303
F5.25
s(g3767
I42
g3768
Vinsert
p21304
I42
VSimpleName: result
p21305
tp21306
I1
s(g4903
I42
g4904
Vinsert
p21307
I43
VSimpleType: Foo
p21308
tp21309
F0.25
s(g2776
I42
g2777
Vinsert
p21310
I40
VQualifiedName: JsonCodec.DEPENDENCY_LINK_ADAPTER
p21311
tp21312
I1
s(g881
I42
g882
Vinsert
p21313
I42
VSimpleName: child
p21314
tp21315
I1
s(g8542
I42
g8543
Vinsert
p21316
I42
VSimpleName: toGuava
p21317
tp21318
I1
s(g3725
I42
g3726
Vinsert
p21319
I27
VInfixExpression: <
p21320
tp21321
I1
s(g176
I42
g177
Vinsert
p21322
I8
VBlock
p21323
tp21324
I1
s(g1197
I42
g1198
Vinsert
p21325
I45
VStringLiteral: ""
p21326
tp21327
I1
s(g1739
I42
g1740
Vinsert
p21328
I42
VSimpleName: body
p21329
tp21330
F1.25
s(g2283
I42
g2284
Vinsert
p21331
I42
VSimpleName: setIndexReplicas
p21332
tp21333
F0.25
s(g3307
I42
g3308
Vinsert
p21334
I42
VSimpleName: traceIdLow
p21335
tp21336
F1.25
s(g1795
I42
g1796
Vinsert
p21337
I8
VBlock
p21338
tp21339
F0.25
s(g121
I42
g122
Vinsert
p21340
I45
VStringLiteral: "/election"
p21341
tp21342
I1
s(g4253
I42
g4254
Vinsert
p21343
I34
VNumberLiteral: 1L
p21344
tp21345
I1
s(g587
I42
g588
Vinsert
p21346
I59
VVariableDeclarationFragment
p21347
tp21348
F2.25
s(g1589
I42
g1590
Vinsert
p21349
I42
VSimpleName: isTrue
p21350
tp21351
F0.25
s(g101
I42
g102
Vinsert
p21352
I42
VSimpleName: httpCollector
p21353
tp21354
F1.25
s(g9771
I42
g9772
Vinsert
p21355
I43
VSimpleType: Span
p21356
tp21357
I9
s(g7850
I42
g7851
Vinsert
p21358
I42
VSimpleName: container
p21359
tp21360
I2
s(g934
I42
g935
Vinsert
p21361
I42
VSimpleName: IPV6_TO_STRING
p21362
tp21363
I1
s(g36
I42
g37
Vinsert
p21364
I45
VStringLiteral: "Access-Control-Request-Method"
p21365
tp21366
I1
s(g6984
I42
g6985
Vinsert
p21367
I42
VSimpleName: newFuture
p21368
tp21369
F0.25
s(g626
I42
g627
Vinsert
p21370
I42
VSimpleName: binaryAnnotations
p21371
tp21372
I1
s(g15846
I42
g15847
Vinsert
p21373
I42
VSimpleName: storeSpans
p21374
tp21375
F0.25
s(g7347
I42
g7348
Vinsert
p21376
I52
VThisExpression
p21377
tp21378
I1
s(g714
I42
g715
Vinsert
p21379
I42
VSimpleName: refresh
p21380
tp21381
I1
s(g1197
I42
g1198
Vinsert
p21382
I42
VSimpleName: ElasticsearchHttpStorage
p21383
tp21384
I1
s(g2398
I42
g2399
Vinsert
p21385
I83
VModifier: public
p21386
tp21387
F0.25
s(g6387
I42
g6388
Vinsert
p21388
I25
VIfStatement
p21389
tp21390
I2
s(g3083
I42
g3084
Vinsert
p21391
I42
VSimpleName: metrics
p21392
tp21393
F1.25
s(g636
I42
g637
Vinsert
p21394
I42
VSimpleName: bytes
p21395
tp21396
I1
s(g2103
I42
g2104
Vinsert
p21397
I45
VStringLiteral: " failed with status "
p21398
tp21399
I1
s(g744
I42
g745
Vinsert
p21400
I32
VMethodInvocation
p21401
tp21402
I1
s(g426
I42
g427
Vinsert
p21403
I42
VSimpleName: APP_ENDPOINT
p21404
tp21405
I1
s(g2875
I42
g2876
Vinsert
p21406
I31
VMethodDeclaration
p21407
tp21408
F0.25
s(g9497
I42
g9498
Vinsert
p21409
I42
VSimpleName: ElasticsearchSpanStore
p21410
tp21411
F0.25
s(g76
I42
g77
Vinsert
p21412
I39
VPrimitiveType: long
p21413
tp21414
I1
s(g572
I42
g573
Vinsert
p21415
I42
VSimpleName: input
p21416
tp21417
I1
s(g4647
I42
g4648
Vinsert
p21418
I8
VBlock
p21419
tp21420
I2
s(g5476
I42
g5477
Vinsert
p21421
I9
VBooleanLiteral: false
p21422
tp21423
I1
s(g4264
I42
g4265
Vinsert
p21424
I42
VSimpleName: Throwable
p21425
tp21426
F0.25
s(g111
I42
g112
Vinsert
p21427
I43
VSimpleType: Cluster
p21428
tp21429
I1
s(g2712
I42
g2713
Vinsert
p21430
I43
VSimpleType: HttpFailure
p21431
tp21432
I1
s(g13924
I42
g13925
Vinsert
p21433
I43
VSimpleType: ElasticsearchStorage
p21434
tp21435
I1
s(g6979
I42
g6980
Vinsert
p21436
I45
VStringLiteral: "  \u005c"name\u005c": \u005c"get-traces\u005c",\u005cn"
p21437
tp21438
I1
s(g3160
I42
g3161
Vinsert
p21439
I42
VSimpleName: ListenableFuture
p21440
tp21441
F0.25
s(g390
I42
g391
Vinsert
p21442
I43
VSimpleType: Response
p21443
tp21444
I1
s(g6894
I42
g6895
Vinsert
p21445
I32
VMethodInvocation
p21446
tp21447
I8
s(g2843
I42
g2844
Vinsert
p21448
I32
VMethodInvocation
p21449
tp21450
I14
s(g3740
I42
g3741
Vinsert
p21451
I42
VSimpleName: CassandraUtil
p21452
tp21453
I1
s(g5807
I42
g5808
Vinsert
p21454
I42
VSimpleName: sampler
p21455
tp21456
I1
s(g21
I42
g22
Vinsert
p21457
I40
VQualifiedName: Dependencies.Builder
p21458
tp21459
I1
s(g304
I42
g305
Vinsert
p21460
I42
VSimpleName: equals
p21461
tp21462
I1
s(g3654
I42
g3655
Vinsert
p21463
I42
VSimpleName: buf
p21464
tp21465
I1
s(g224
I42
g225
Vinsert
p21466
I42
VSimpleName: serviceName
p21467
tp21468
I3
s(g6071
I42
g6072
Vinsert
p21469
I39
VPrimitiveType: char
p21470
tp21471
I1
s(g9471
I42
g9472
Vinsert
p21472
I40
VQualifiedName: TestObjects.TRACE
p21473
tp21474
I1
s(g6471
I42
g6472
Vinsert
p21475
I42
VSimpleName: table
p21476
tp21477
I1
s(g7533
I42
g7534
Vinsert
p21478
I42
VSimpleName: when
p21479
tp21480
I1
s(g2237
I42
g2238
Vinsert
p21481
I42
VSimpleName: build
p21482
tp21483
I2
s(g2018
I42
g2019
Vinsert
p21484
I42
VSimpleName: build
p21485
tp21486
I2
s(g6984
I42
g6985
Vinsert
p21487
I43
VSimpleType: ListenableFuture
p21488
tp21489
F0.25
s(g3900
I42
g3901
Vinsert
p21490
I42
VSimpleName: NodeCache
p21491
tp21492
I1
s(g15097
I42
g15098
Vinsert
p21493
I8
VBlock
p21494
tp21495
I2
s(g1182
I42
g1183
Vinsert
p21496
I45
VStringLiteral: "    { \u005c"timestamp\u005c": 1472470996199000, \u005c"value\u005c": NULL}\u005cn"
p21497
tp21498
F0.25
s(g2161
I42
g2162
Vinsert
p21499
I42
VSimpleName: state
p21500
tp21501
F0.25
s(g744
I42
g745
Vinsert
p21502
I42
VSimpleName: midnightUTC
p21503
tp21504
F0.25
s(g13877
I42
g13878
Vinsert
p21505
I42
VSimpleName: onError
p21506
tp21507
F0.25
s(g4768
I42
g4769
Vinsert
p21508
I42
VSimpleName: assertThat
p21509
tp21510
I1
s(g10487
I42
g10488
Vinsert
p21511
I42
VSimpleName: baseUrl
p21512
tp21513
I1
s(g11744
I42
g11745
Vinsert
p21514
I32
VMethodInvocation
p21515
tp21516
F18.5
s(g1128
I42
g1129
Vinsert
p21517
I24
VForStatement
p21518
tp21519
I6
s(g1372
I42
g1373
Vinsert
p21520
I42
VSimpleName: InterceptorRegistry
p21521
tp21522
F0.25
s(g1979
I42
g1980
Vinsert
p21523
I32
VMethodInvocation
p21524
tp21525
I3
s(g6508
I42
g6509
Vinsert
p21526
I59
VVariableDeclarationFragment
p21527
tp21528
I1
s(g1673
I42
g1674
Vinsert
p21529
I40
VQualifiedName: Map.Entry
p21530
tp21531
I1
s(g6984
I42
g6985
Vinsert
p21532
I83
VModifier: protected
p21533
tp21534
F0.25
s(g3207
I42
g3208
Vinsert
p21535
I33
VNullLiteral
p21536
tp21537
I3
s(g1954
I42
g1955
Vinsert
p21538
I42
VSimpleName: LinkedList
p21539
tp21540
I1
s(g400
I42
g401
Vinsert
p21541
I45
VStringLiteral: "}"
p21542
tp21543
I2
s(g4493
I42
g4494
Vinsert
p21544
I42
VSimpleName: p
p21545
tp21546
I2
s(g5785
I42
g5786
Vinsert
p21547
I8
VBlock
p21548
tp21549
I2
s(g13606
I42
g13607
Vinsert
p21550
I43
VSimpleType: S
p21551
tp21552
F0.25
s(g8677
I42
g8678
Vinsert
p21553
I32
VMethodInvocation
p21554
tp21555
I6
s(g7850
I42
g7851
Vinsert
p21556
I42
VSimpleName: image
p21557
tp21558
I4
s(g1744
I42
g1745
Vinsert
p21559
I42
VSimpleName: Host
p21560
tp21561
I1
s(g2260
I42
g2261
Vinsert
p21562
I42
VSimpleName: overrides
p21563
tp21564
F0.5
s(g8677
I42
g8678
Vinsert
p21565
I43
VSimpleType: LazyClient
p21566
tp21567
I2
s(g5205
I42
g5206
Vinsert
p21568
I42
VSimpleName: spanNameCantBeEmpty
p21569
tp21570
F0.25
s(g5738
I42
g5739
Vinsert
p21571
I42
VSimpleName: app
p21572
tp21573
I1
s(g2492
I42
g2493
Vinsert
p21574
I7
VAssignment: +=
p21575
tp21576
I2
s(g1192
I42
g1193
Vinsert
p21577
I42
VSimpleName: DependencyLink
p21578
tp21579
F0.25
s(g4085
I42
g4086
Vinsert
p21580
I42
VSimpleName: timestamp
p21581
tp21582
I1
s(g11368
I42
g11369
Vinsert
p21583
I42
VSimpleName: DependencyLink
p21584
tp21585
I2
s(g14286
I42
g14287
Vinsert
p21586
I42
VSimpleName: bytes
p21587
tp21588
F2.25
s(g15097
I42
g15098
Vinsert
p21589
I33
VNullLiteral
p21590
tp21591
I1
s(g3772
I42
g3773
Vinsert
p21592
I42
VSimpleName: start
p21593
tp21594
F0.25
s(g1433
I42
g1434
Vinsert
p21595
I42
VSimpleName: writeSpans
p21596
tp21597
I1
s(g11012
I42
g11013
Vinsert
p21598
I34
VNumberLiteral: 4
p21599
tp21600
I3
s(g344
I42
g345
Vinsert
p21601
I39
VPrimitiveType: int
p21602
tp21603
F1.25
s(g5386
I42
g5387
Vinsert
p21604
I42
VSimpleName: bytes
p21605
tp21606
I1
s(g3250
I42
g3251
Vinsert
p21607
I27
VInfixExpression: &&
p21608
tp21609
I2
s(g1232
I42
g1233
Vinsert
p21610
I42
VSimpleName: dispatcher
p21611
tp21612
F1.5
s(g7197
I42
g7198
Vinsert
p21613
I42
VSimpleName: Test
p21614
tp21615
F2.5
s(g12014
I42
g12015
Vinsert
p21616
I7
VAssignment: ^=
p21617
tp21618
I4
s(g3041
I42
g3042
Vinsert
p21619
I42
VSimpleName: executor
p21620
tp21621
I1
s(g329
I42
g330
Vinsert
p21622
I31
VMethodDeclaration
p21623
tp21624
F0.25
s(g1385
I42
g1386
Vinsert
p21625
I42
VSimpleName: ArrayList
p21626
tp21627
I4
s(g12441
I42
g12442
Vinsert
p21628
I10
VBreakStatement
p21629
tp21630
F1.5
s(g4840
I42
g4841
Vinsert
p21631
I7
VAssignment: =
p21632
tp21633
F0.25
s(g6094
I42
g6095
Vinsert
p21634
I32
VMethodInvocation
p21635
tp21636
I1
s(g1265
I42
g1266
Vinsert
p21637
I31
VMethodDeclaration
p21638
tp21639
F5.25
s(g4768
I42
g4769
Vinsert
p21640
I42
VSimpleName: indexNameForTimestamp
p21641
tp21642
I1
s(g2712
I42
g2713
Vinsert
p21643
I32
VMethodInvocation
p21644
tp21645
I2
s(g36
I42
g37
Vinsert
p21646
I42
VSimpleName: handlePreflight
p21647
tp21648
I1
s(g4095
I42
g4096
Vinsert
p21649
I44
VSingleVariableDeclaration
p21650
tp21651
I1
s(g4330
I42
g4331
Vinsert
p21652
I42
VSimpleName: Logger
p21653
tp21654
I1
s(g6718
I42
g6719
Vinsert
p21655
I27
VInfixExpression: +
p21656
tp21657
I3
s(g2388
I42
g2389
Vinsert
p21658
I42
VSimpleName: bytes
p21659
tp21660
I4
s(g15367
I42
g15368
Vinsert
p21661
I42
VSimpleName: contactPoints
p21662
tp21663
F1.5
s(g2925
I42
g2926
Vinsert
p21664
I45
VStringLiteral: "start"
p21665
tp21666
F0.5
s(g2208
I42
g2209
Vinsert
p21667
I42
VSimpleName: rawSpan
p21668
tp21669
I2
s(g11345
I42
g11346
Vinsert
p21670
I41
VReturnStatement
p21671
tp21672
I2
s(g1464
I42
g1465
Vinsert
p21673
I59
VVariableDeclarationFragment
p21674
tp21675
I1
s(g3485
I42
g3486
Vinsert
p21676
I45
VStringLiteral: "  \u005c"traceId\u005c": \u005c"6b221d5bc9e6496c\u005c","
p21677
tp21678
I1
s(g4293
I42
g4294
Vinsert
p21679
I32
VMethodInvocation
p21680
tp21681
F3.25
s(g10248
I42
g10249
Vinsert
p21682
I43
VSimpleType: ZipkinCassandra3StorageAutoConfiguration
p21683
tp21684
I1
s(g15405
I42
g15406
Vinsert
p21685
I42
VSimpleName: acceptSpans
p21686
tp21687
I1
s(g4293
I42
g4294
Vinsert
p21688
I42
VSimpleName: timestampMillis
p21689
tp21690
F1.25
s(g5603
I42
g5604
Vinsert
p21691
I16
VConditionalExpression
p21692
tp21693
I1
s(g11654
I42
g11655
Vinsert
p21694
I42
VSimpleName: build
p21695
tp21696
F1.25
s(g13461
I42
g13462
Vinsert
p21697
I43
VSimpleType: Long
p21698
tp21699
I1
s(g16965
I42
g16966
Vinsert
p21700
I27
VInfixExpression: &&
p21701
tp21702
I2
s(g3867
I42
g3868
Vinsert
p21703
I42
VSimpleName: spans
p21704
tp21705
F0.25
s(g1644
I42
g1645
Vinsert
p21706
I42
VSimpleName: makeSampled
p21707
tp21708
F0.25
s(g2781
I42
g2782
Vinsert
p21709
I16
VConditionalExpression
p21710
tp21711
F6.25
s(g7654
I42
g7655
Vinsert
p21712
I83
VModifier: public
p21713
tp21714
F3.5
s(g7627
I42
g7628
Vinsert
p21715
I59
VVariableDeclarationFragment
p21716
tp21717
I1
s(g1665
I42
g1666
Vinsert
p21718
I43
VSimpleType: okhttp3.Call
p21719
tp21720
F0.25
s(g5205
I42
g5206
Vinsert
p21721
I43
VSimpleType: QueryRequest.Builder
p21722
tp21723
F0.25
s(g1270
I42
g1271
Vinsert
p21724
I42
VSimpleName: when
p21725
tp21726
I1
s(g3730
I42
g3731
Vinsert
p21727
I45
VStringLiteral: "Error querying for "
p21728
tp21729
I1
s(g7850
I42
g7851
Vinsert
p21730
I32
VMethodInvocation
p21731
tp21732
I4
s(g4518
I42
g4519
Vinsert
p21733
I40
VQualifiedName: OkHttpClient.Builder
p21734
tp21735
F0.25
s(g2920
I42
g2921
Vinsert
p21736
I41
VReturnStatement
p21737
tp21738
I1
s(g5873
I42
g5874
Vinsert
p21739
I43
VSimpleType: Endpoint
p21740
tp21741
F1.25
s(g3974
I42
g3975
Vinsert
p21742
I21
VExpressionStatement
p21743
tp21744
I3
s(g324
I42
g325
Vinsert
p21745
I42
VSimpleName: serviceName
p21746
tp21747
I2
s(g4840
I42
g4841
Vinsert
p21748
I39
VPrimitiveType: int
p21749
tp21750
F0.25
s(g3818
I42
g3819
Vinsert
p21751
I45
VStringLiteral: "jdbc:mysql://"
p21752
tp21753
I1
s(g2398
I42
g2399
Vinsert
p21754
I43
VSimpleType: ElasticsearchHttpStorage
p21755
tp21756
F0.25
s(g2174
I42
g2175
Vinsert
p21757
I41
VReturnStatement
p21758
tp21759
I1
s(g10346
I42
g10347
Vinsert
p21760
I42
VSimpleName: result
p21761
tp21762
I1
s(g11012
I42
g11013
Vinsert
p21763
I40
VQualifiedName: value.value.length
p21764
tp21765
I1
s(g9706
I42
g9707
Vinsert
p21766
I27
VInfixExpression: <
p21767
tp21768
I1
s(g3207
I42
g3208
Vinsert
p21769
I27
VInfixExpression: !=
p21770
tp21771
I3
s(g13461
I42
g13462
Vinsert
p21772
I74
VParameterizedType: Pair<Long>
p21773
tp21774
I1
s(g4621
I42
g4622
Vinsert
p21775
I43
VSimpleType: Span
p21776
tp21777
I1
s(g6911
I42
g6912
Vinsert
p21778
I42
VSimpleName: today
p21779
tp21780
I2
s(g8280
I42
g8281
Vinsert
p21781
I39
VPrimitiveType: void
p21782
tp21783
F0.25
s(g8458
I42
g8459
Vinsert
p21784
I34
VNumberLiteral: 250
p21785
tp21786
I1
s(g1678
I42
g1679
Vinsert
p21787
I83
VModifier: private
p21788
tp21789
F0.25
s(g1017
I42
g1018
Vinsert
p21790
I83
VModifier: public
p21791
tp21792
F0.25
s(g2823
I42
g2824
Vinsert
p21793
I42
VSimpleName: String
p21794
tp21795
F12.25
s(g3951
I42
g3952
Vinsert
p21796
I43
VSimpleType: PropertyPlaceholderAutoConfiguration
p21797
tp21798
I7
s(g6094
I42
g6095
Vinsert
p21799
I43
VSimpleType: BulkRequestBuilder
p21800
tp21801
I1
s(g1566
I42
g1567
Vinsert
p21802
I42
VSimpleName: compute
p21803
tp21804
F0.25
s(g1456
I42
g1457
Vinsert
p21805
I32
VMethodInvocation
p21806
tp21807
I1
s(g20813
I42
g20814
Vinsert
p21808
I45
VStringLiteral: "client"
p21809
tp21810
I2
s(g31
I42
g32
Vinsert
p21811
I42
VSimpleName: assertThat
p21812
tp21813
I2
s(g5584
I42
g5585
Vinsert
p21814
I78
VMarkerAnnotation
p21815
tp21816
F0.25
s(g891
I42
g892
Vinsert
p21817
I32
VMethodInvocation
p21818
tp21819
I3
s(g4044
I42
g4045
Vinsert
p21820
I41
VReturnStatement
p21821
tp21822
F0.25
s(g12883
I42
g12884
Vinsert
p21823
I42
VSimpleName: nestedTerms
p21824
tp21825
I1
s(g1777
I42
g1778
Vinsert
p21826
I42
VSimpleName: ipv6
p21827
tp21828
I1
s(g1007
I42
g1008
Vinsert
p21829
I59
VVariableDeclarationFragment
p21830
tp21831
I2
s(g4928
I42
g4929
Vinsert
p21832
I85
VDimension
p21833
tp21834
I2
s(g2085
I42
g2086
Vinsert
p21835
I32
VMethodInvocation
p21836
tp21837
I1
s(g2135
I42
g2136
Vinsert
p21838
I32
VMethodInvocation
p21839
tp21840
F70.25
s(g121
I42
g122
Vinsert
p21841
I42
VSimpleName: client
p21842
tp21843
I1
s(g96
I42
g97
Vinsert
p21844
I42
VSimpleName: forTransport
p21845
tp21846
F0.25
s(g5807
I42
g5808
Vinsert
p21847
I59
VVariableDeclarationFragment
p21848
tp21849
I1
s(g1523
I42
g1524
Vinsert
p21850
I42
VSimpleName: input
p21851
tp21852
I1
s(g6878
I42
g6879
Vinsert
p21853
I42
VSimpleName: minDurationMicros
p21854
tp21855
I1
s(g11744
I42
g11745
Vinsert
p21856
I42
VSimpleName: newSession
p21857
tp21858
I1
s(g17313
I42
g17314
Vinsert
p21859
I40
VQualifiedName: BytesEncoder.JSON
p21860
tp21861
I1
s(g6134
I42
g6135
Vinsert
p21862
I42
VSimpleName: frontend
p21863
tp21864
I1
s(g7112
I42
g7113
Vinsert
p21865
I32
VMethodInvocation
p21866
tp21867
I10
s(g6355
I42
g6356
Vinsert
p21868
I42
VSimpleName: Map
p21869
tp21870
F0.25
s(g5949
I42
g5950
Vinsert
p21871
I45
VStringLiteral: "settings/server/bintray/username not found"
p21872
tp21873
I1
s(g8190
I42
g8191
Vinsert
p21874
I42
VSimpleName: build
p21875
tp21876
I1
s(g4157
I42
g4158
Vinsert
p21877
I14
VClassInstanceCreation
p21878
tp21879
I1
s(g11463
I42
g11464
Vinsert
p21880
I74
VParameterizedType: List<Span>
p21881
tp21882
I1
s(Vinsert
p21883
I42
VSimpleName: traceId
p21884
Vinsert
p21885
I42
VSimpleName: serverViewDerived
p21886
tp21887
I1
s(g10123
I42
g10124
Vinsert
p21888
I39
VPrimitiveType: int
p21889
tp21890
F0.5
s(g20726
I42
g20727
Vinsert
p21891
I42
VSimpleName: setUsername
p21892
tp21893
F0.25
s(g4923
I42
g4924
Vinsert
p21894
I42
VSimpleName: mojo
p21895
tp21896
I1
s(g3823
I42
g3824
Vinsert
p21897
I43
VSimpleType: Set
p21898
tp21899
F0.25
s(g1767
I42
g1768
Vinsert
p21900
I8
VBlock
p21901
tp21902
I1
s(g1954
I42
g1955
Vinsert
p21903
I74
VParameterizedType: LinkedList<Span>
p21904
tp21905
I1
s(g15603
I42
g15604
Vinsert
p21906
I42
VSimpleName: Qualifier
p21907
tp21908
F0.25
s(g5126
I42
g5127
Vinsert
p21909
I32
VMethodInvocation
p21910
tp21911
I12
s(g2828
I42
g2829
Vinsert
p21912
I42
VSimpleName: m
p21913
tp21914
I1
s(g141
I42
g142
Vinsert
p21915
I42
VSimpleName: exception
p21916
tp21917
I1
s(g1288
I42
g1289
Vinsert
p21918
I8
VBlock
p21919
tp21920
I2
s(g6211
I42
g6212
Vinsert
p21921
I45
VStringLiteral: "  \u005c"annotations\u005c": [\u005cn"
p21922
tp21923
I1
s(g146
I42
g147
Vinsert
p21924
I43
VSimpleType: Span
p21925
tp21926
I1
s(g259
I42
g260
Vinsert
p21927
I42
VSimpleName: toString
p21928
tp21929
F0.75
s(g1584
I42
g1585
Vinsert
p21930
I42
VSimpleName: logger
p21931
tp21932
I1
s(g2870
I42
g2871
Vinsert
p21933
I83
VModifier: public
p21934
tp21935
F0.25
s(g3155
I42
g3156
Vinsert
p21936
I42
VSimpleName: lookback
p21937
tp21938
F1.25
s(g21064
I42
g21065
Vinsert
p21939
I42
VSimpleName: span
p21940
tp21941
I9
s(g631
I42
g632
Vinsert
p21942
I8
VBlock
p21943
tp21944
I3
s(g982
I42
g983
Vinsert
p21945
I90
VExpressionMethodReference
p21946
tp21947
F0.25
s(g801
I42
g802
Vinsert
p21948
I1
VAnonymousClassDeclaration
p21949
tp21950
I1
s(g7240
I42
g7241
Vinsert
p21951
I42
VSimpleName: spanConsumer
p21952
tp21953
F0.25
s(g2145
I42
g2146
Vinsert
p21954
I21
VExpressionStatement
p21955
tp21956
I2
s(g9977
I42
g9978
Vinsert
p21957
I42
VSimpleName: replace
p21958
tp21959
I1
s(g11973
I42
g11974
Vinsert
p21960
I42
VSimpleName: metrics
p21961
tp21962
F0.5
s(g4171
I42
g4172
Vinsert
p21963
I40
VQualifiedName: com.github.kristofa.brave.Sampler
p21964
tp21965
F0.25
s(g1367
I42
g1368
Vinsert
p21966
I41
VReturnStatement
p21967
tp21968
I1
s(g6763
I42
g6764
Vinsert
p21969
I43
VSimpleType: Endpoint
p21970
tp21971
I1
s(g4830
I42
g4831
Vinsert
p21972
I43
VSimpleType: SpanStoreSpanCollector
p21973
tp21974
F0.25
s(g5738
I42
g5739
Vinsert
p21975
I27
VInfixExpression: +
p21976
tp21977
I5
s(g16820
I42
g16821
Vinsert
p21978
I8
VBlock
p21979
tp21980
I1
s(g3217
I42
g3218
Vinsert
p21981
I42
VSimpleName: result
p21982
tp21983
I1
s(g15097
I42
g15098
Vinsert
p21984
I42
VSimpleName: binaryAnnotationQuery
p21985
tp21986
I2
s(g8458
I42
g8459
Vinsert
p21987
I27
VInfixExpression: +
p21988
tp21989
I6
s(g1303
I42
g1304
Vinsert
p21990
I42
VSimpleName: builder
p21991
tp21992
I2
s(g7355
I42
g7356
Vinsert
p21993
I42
VSimpleName: multithreaded
p21994
tp21995
F0.25
s(g3388
I42
g3389
Vinsert
p21996
I42
VSimpleName: input
p21997
tp21998
F4.25
s(g10551
I42
g10552
Vinsert
p21999
I42
VSimpleName: Throwable
p22000
tp22001
F0.25
s(g2584
I42
g2585
Vinsert
p22002
I39
VPrimitiveType: int
p22003
tp22004
I2
s(g3438
I42
g3439
Vinsert
p22005
I42
VSimpleName: Integer
p22006
tp22007
F0.25
s(g8601
I42
g8602
Vinsert
p22008
I42
VSimpleName: execute
p22009
tp22010
I1
s(g572
I42
g573
Vinsert
p22011
I42
VSimpleName: realCall
p22012
tp22013
I1
s(g3051
I42
g3052
Vinsert
p22014
I22
VFieldAccess
p22015
tp22016
I4
s(g904
I42
g905
Vinsert
p22017
I43
VSimpleType: ClusterHealthResponse
p22018
tp22019
I1
s(g4840
I42
g4841
Vinsert
p22020
I32
VMethodInvocation
p22021
tp22022
I2
s(g3720
I42
g3721
Vinsert
p22023
I42
VSimpleName: toSeconds
p22024
tp22025
F0.25
s(g796
I42
g797
Vinsert
p22026
I83
VModifier: static
p22027
tp22028
F0.25
s(g474
I42
g475
Vinsert
p22029
I78
VMarkerAnnotation
p22030
tp22031
F0.25
s(g811
I42
g812
Vinsert
p22032
I21
VExpressionStatement
p22033
tp22034
I1
s(g66
I42
g67
Vinsert
p22035
I41
VReturnStatement
p22036
tp22037
I1
s(g3485
I42
g3486
Vinsert
p22038
I45
VStringLiteral: "  \u005c"binaryAnnotations\u005c": ["
p22039
tp22040
I1
s(g6134
I42
g6135
Vinsert
p22041
I45
VStringLiteral: "4d1e00c0db9010db"
p22042
tp22043
I1
s(g7905
I42
g7906
Vinsert
p22044
I42
VSimpleName: input
p22045
tp22046
I1
s(g3740
I42
g3741
Vinsert
p22047
I42
VSimpleName: durationIndexBucket
p22048
tp22049
I1
s(g1040
I42
g1041
Vinsert
p22050
I42
VSimpleName: T
p22051
tp22052
F0.25
s(g14004
I42
g14005
Vinsert
p22053
I78
VMarkerAnnotation
p22054
tp22055
F1.0
s(g6145
I42
g6146
Vinsert
p22056
I43
VSimpleType: ArrayList
p22057
tp22058
I1
s(g3525
I42
g3526
Vinsert
p22059
I42
VSimpleName: startFlooredToDay
p22060
tp22061
I1
s(g7240
I42
g7241
Vinsert
p22062
I42
VSimpleName: Executors
p22063
tp22064
I1
s(g5523
I42
g5524
Vinsert
p22065
I42
VSimpleName: service
p22066
tp22067
I1
s(g17404
I42
g17405
Vinsert
p22068
I42
VSimpleName: Span
p22069
tp22070
F0.25
s(g6
I42
g7
Vinsert
p22071
I42
VSimpleName: filterChain
p22072
tp22073
I1
s(g3412
I42
g3413
Vinsert
p22074
I32
VMethodInvocation
p22075
tp22076
I2
s(g274
I42
g275
Vinsert
p22077
I39
VPrimitiveType: int
p22078
tp22079
F2.25
s(g9244
I42
g9245
Vinsert
p22080
I12
VCatchClause
p22081
tp22082
I1
s(g4446
I42
g4447
Vinsert
p22083
I42
VSimpleName: of
p22084
tp22085
I1
s(g7134
I42
g7135
Vinsert
p22086
I83
VModifier: public
p22087
tp22088
F0.25
s(g4301
I42
g4302
Vinsert
p22089
I43
VSimpleType: DependencyLinkSpan
p22090
tp22091
I1
s(g10551
I42
g10552
Vinsert
p22092
I42
VSimpleName: e
p22093
tp22094
F0.25
s(g3105
I42
g3106
Vinsert
p22095
I39
VPrimitiveType: byte
p22096
tp22097
F0.25
s(g1916
I42
g1917
Vinsert
p22098
I32
VMethodInvocation
p22099
tp22100
I1
s(g12256
I42
g12257
Vinsert
p22101
I42
VSimpleName: queue
p22102
tp22103
I3
s(g914
I42
g915
Vinsert
p22104
I7
VAssignment: +=
p22105
tp22106
F0.5
s(g4913
I42
g4914
Vinsert
p22107
I42
VSimpleName: Pair
p22108
tp22109
I1
s(g279
I42
g280
Vinsert
p22110
I42
VSimpleName: ElasticsearchSpanConsumer
p22111
tp22112
F0.25
s(g5528
I42
g5529
Vinsert
p22113
I8
VBlock
p22114
tp22115
I1
s(g4157
I42
g4158
Vinsert
p22116
I42
VSimpleName: dl3
p22117
tp22118
I1
s(g4380
I42
g4381
Vinsert
p22119
I42
VSimpleName: gzipTest
p22120
tp22121
F0.25
s(g1566
I42
g1567
Vinsert
p22122
I42
VSimpleName: String
p22123
tp22124
F0.5
s(g3644
I42
g3645
Vinsert
p22125
I32
VMethodInvocation
p22126
tp22127
I3
s(g6569
I42
g6570
Vinsert
p22128
I42
VSimpleName: zipkinEndpoint
p22129
tp22130
I1
s(g5915
I42
g5916
Vinsert
p22131
I42
VSimpleName: createContextWithOverridenProperty
p22132
tp22133
I1
s(g12407
I42
g12408
Vinsert
p22134
I43
VSimpleType: StorageComponent
p22135
tp22136
F0.25
s(g2745
I42
g2746
Vinsert
p22137
I23
VFieldDeclaration
p22138
tp22139
F0.25
s(g1665
I42
g1666
Vinsert
p22140
I42
VSimpleName: IOException
p22141
tp22142
F0.5
s(Vinsert
p22143
I42
VSimpleName: get
p22144
Vinsert
p22145
I42
VSimpleName: doesntIndexZeroDurationSpans
p22146
tp22147
F0.25
s(g5533
I42
g5534
Vinsert
p22148
I42
VSimpleName: enqueue
p22149
tp22150
I1
s(g8542
I42
g8543
Vinsert
p22151
I42
VSimpleName: createSpanIndexRequest
p22152
tp22153
I1
s(g8319
I42
g8320
Vinsert
p22154
I42
VSimpleName: zipkinQuery
p22155
tp22156
I1
s(g2464
I42
g2465
Vinsert
p22157
I42
VSimpleName: String
p22158
tp22159
I1
s(g6471
I42
g6472
Vinsert
p22160
I42
VSimpleName: ImmutableSet
p22161
tp22162
I1
s(g18816
I42
g18817
Vinsert
p22163
I42
VSimpleName: Pair
p22164
tp22165
I2
s(g4293
I42
g4294
Vinsert
p22166
I33
VNullLiteral
p22167
tp22168
I1
s(g4733
I42
g4734
Vinsert
p22169
I43
VSimpleType: IOException
p22170
tp22171
F0.25
s(g10178
I42
g10179
Vinsert
p22172
I45
VStringLiteral: "  \u005c"id\u005c": \u005c"6b221d5bc9e6496c\u005c",\u005cn"
p22173
tp22174
F0.25
s(g2426
I42
g2427
Vinsert
p22175
I8
VBlock
p22176
tp22177
I1
s(g76
I42
g77
Vinsert
p22178
I7
VAssignment: +=
p22179
tp22180
F0.25
s(g17820
I42
g17821
Vinsert
p22181
I43
VSimpleType: QueryRequest
p22182
tp22183
I1
s(g714
I42
g715
Vinsert
p22184
I21
VExpressionStatement
p22185
tp22186
I2
s(g1479
I42
g1480
Vinsert
p22187
I21
VExpressionStatement
p22188
tp22189
I5
s(g91
I42
g92
Vinsert
p22190
I9
VBooleanLiteral: false
p22191
tp22192
I1
s(g1673
I42
g1674
Vinsert
p22193
I32
VMethodInvocation
p22194
tp22195
I5
s(g7112
I42
g7113
Vinsert
p22196
I59
VVariableDeclarationFragment
p22197
tp22198
F0.25
s(g669
I42
g670
Vinsert
p22199
I42
VSimpleName: Span2Converter
p22200
tp22201
I4
s(g2441
I42
g2442
Vinsert
p22202
I42
VSimpleName: QueryBuilders
p22203
tp22204
I1
s(g982
I42
g983
Vinsert
p22205
I40
VQualifiedName: Codec.JSON
p22206
tp22207
F0.25
s(g9867
I42
g9868
Vinsert
p22208
I42
VSimpleName: dataSource
p22209
tp22210
I2
s(g5112
I42
g5113
Vinsert
p22211
I45
VStringLiteral: "service:http.method:GET"
p22212
tp22213
F0.25
s(g1921
I42
g1922
Vinsert
p22214
I42
VSimpleName: refresh
p22215
tp22216
I1
s(g1456
I42
g1457
Vinsert
p22217
I14
VClassInstanceCreation
p22218
tp22219
I1
s(g6758
I42
g6759
Vinsert
p22220
I59
VVariableDeclarationFragment
p22221
tp22222
I1
s(g2566
I42
g2567
Vinsert
p22223
I42
VSimpleName: json
p22224
tp22225
I3
s(g4792
I42
g4793
Vinsert
p22226
I42
VSimpleName: id
p22227
tp22228
I6
s(g324
I42
g325
Vinsert
p22229
I21
VExpressionStatement
p22230
tp22231
I3
s(g161
I42
g162
Vinsert
p22232
I45
VStringLiteral: "%s/api/v1/trace/%016x"
p22233
tp22234
I1
s(g2823
I42
g2824
Vinsert
p22235
I21
VExpressionStatement
p22236
tp22237
I1
s(g1795
I42
g1796
Vinsert
p22238
I42
VSimpleName: counterService
p22239
tp22240
F0.25
s(g4673
I42
g4674
Vinsert
p22241
I43
VSimpleType: CheckResult
p22242
tp22243
F0.25
s(g2023
I42
g2024
Vinsert
p22244
I43
VSimpleType: GzipSink
p22245
tp22246
I4
s(g734
I42
g735
Vinsert
p22247
I32
VMethodInvocation
p22248
tp22249
I2
s(g1242
I42
g1243
Vinsert
p22250
I43
VSimpleType: Void
p22251
tp22252
F1.75
s(g1995
I42
g1996
Vinsert
p22253
I21
VExpressionStatement
p22254
tp22255
I3
s(g196
I42
g197
Vinsert
p22256
I39
VPrimitiveType: int
p22257
tp22258
F0.25
s(g1673
I42
g1674
Vinsert
p22259
I59
VVariableDeclarationFragment
p22260
tp22261
I3
s(g2098
I42
g2099
Vinsert
p22262
I21
VExpressionStatement
p22263
tp22264
I13
s(g7347
I42
g7348
Vinsert
p22265
I39
VPrimitiveType: boolean
p22266
tp22267
I1
s(g8707
I42
g8708
Vinsert
p22268
I78
VMarkerAnnotation
p22269
tp22270
F0.25
s(g5712
I42
g5713
Vinsert
p22271
I42
VSimpleName: strictTraceId
p22272
tp22273
I1
s(g608
I42
g609
Vinsert
p22274
I42
VSimpleName: ThriftServerConfig
p22275
tp22276
F1.25
s(g2441
I42
g2442
Vinsert
p22277
I42
VSimpleName: String
p22278
tp22279
F0.25
s(g1
I42
g2
Vinsert
p22280
I22
VFieldAccess
p22281
tp22282
I1
s(g1372
I42
g1373
Vinsert
p22283
I43
VSimpleType: InterceptorRegistry
p22284
tp22285
F0.25
s(g1410
I42
g1411
Vinsert
p22286
I42
VSimpleName: addressBytes
p22287
tp22288
I1
s(g7331
I42
g7332
Vinsert
p22289
I44
VSingleVariableDeclaration
p22290
tp22291
F0.5
s(g5329
I42
g5330
Vinsert
p22292
I43
VSimpleType: NoNodeAvailableException
p22293
tp22294
I4
s(g5000
I42
g5001
Vinsert
p22295
I42
VSimpleName: AssertionError
p22296
tp22297
F0.25
s(g5510
I42
g5511
Vinsert
p22298
I10
VBreakStatement
p22299
tp22300
I1
s(g3533
I42
g3534
Vinsert
p22301
I27
VInfixExpression: +
p22302
tp22303
I2
s(g7027
I42
g7028
Vinsert
p22304
I40
VQualifiedName: result.exception
p22305
tp22306
I1
s(g1303
I42
g1304
Vinsert
p22307
I42
VSimpleName: Nullable
p22308
tp22309
F0.25
s(g13736
I42
g13737
Vinsert
p22310
I42
VSimpleName: computeStorageBuilder
p22311
tp22312
F0.5
s(g796
I42
g797
Vinsert
p22313
I42
VSimpleName: DEPENDENCY
p22314
tp22315
F0.25
s(g1911
I42
g1912
Vinsert
p22316
I42
VSimpleName: jsonEscapedSizeInBytes
p22317
tp22318
I1
s(g6984
I42
g6985
Vinsert
p22319
I8
VBlock
p22320
tp22321
I1
s(g2574
I42
g2575
Vinsert
p22322
I8
VBlock
p22323
tp22324
I1
s(g6723
I42
g6724
Vinsert
p22325
I42
VSimpleName: result
p22326
tp22327
F0.25
s(g6050
I42
g6051
Vinsert
p22328
I22
VFieldAccess
p22329
tp22330
I1
s(g11345
I42
g11346
Vinsert
p22331
I40
VQualifiedName: span.timestamp
p22332
tp22333
I4
s(g9587
I42
g9588
Vinsert
p22334
I45
VStringLiteral: "    \u005c"serviceName\u005c": null,\u005cn"
p22335
tp22336
I1
s(g1395
I42
g1396
Vinsert
p22337
I40
VQualifiedName: zipkin.internal.V2StorageComponent
p22338
tp22339
F0.25
s(g6231
I42
g6232
Vinsert
p22340
I42
VSimpleName: build
p22341
tp22342
F0.25
s(g1303
I42
g1304
Vinsert
p22343
I59
VVariableDeclarationFragment
p22344
tp22345
I1
s(g2909
I42
g2910
Vinsert
p22346
I32
VMethodInvocation
p22347
tp22348
I20
s(g4285
I42
g4286
Vinsert
p22349
I42
VSimpleName: DependencyLink
p22350
tp22351
F7.5
s(g3004
I42
g3005
Vinsert
p22352
I26
VImportDeclaration
p22353
tp22354
F1.25
s(g744
I42
g745
Vinsert
p22355
I83
VModifier: static
p22356
tp22357
F0.25
s(g1861
I42
g1862
Vinsert
p22358
I40
VQualifiedName: SpanDecoder.THRIFT_DECODER
p22359
tp22360
I2
s(g6677
I42
g6678
Vinsert
p22361
I8
VBlock
p22362
tp22363
F0.25
s(g9615
I42
g9616
Vinsert
p22364
I42
VSimpleName: result
p22365
tp22366
F0.5
s(g577
I42
g578
Vinsert
p22367
I43
VSimpleType: CassandraStorage.Builder
p22368
tp22369
I2
s(g2203
I42
g2204
Vinsert
p22370
I43
VSimpleType: Record
p22371
tp22372
F0.25
s(g962
I42
g963
Vinsert
p22373
I45
VStringLiteral: "foo"
p22374
tp22375
I1
s(g6552
I42
g6553
Vinsert
p22376
I34
VNumberLiteral: 1000
p22377
tp22378
I1
s(Vinsert
p22379
I42
VSimpleName: toJson
p22380
Vinsert
p22381
I40
VQualifiedName: JsonCodec.ENDPOINT_ADAPTER
p22382
tp22383
I1
s(g5000
I42
g5001
Vinsert
p22384
I43
VSimpleType: AssertionError
p22385
tp22386
F0.25
s(g7985
I42
g7986
Vinsert
p22387
I41
VReturnStatement
p22388
tp22389
F1.25
s(g2219
I42
g2220
Vinsert
p22390
I60
VVariableDeclarationStatement
p22391
tp22392
I1
s(Vinsert
p22393
I42
VSimpleName: get
p22394
Vinsert
p22395
I42
VSimpleName: range
p22396
tp22397
I1
s(g254
I42
g255
Vinsert
p22398
I42
VSimpleName: Collection
p22399
tp22400
I1
s(g5321
I42
g5322
Vinsert
p22401
I42
VSimpleName: onError
p22402
tp22403
F0.5
s(g1574
I42
g1575
Vinsert
p22404
I32
VMethodInvocation
p22405
tp22406
I5
s(g11683
I42
g11684
Vinsert
p22407
I8
VBlock
p22408
tp22409
I1
s(g2712
I42
g2713
Vinsert
p22410
I43
VSimpleType: String
p22411
tp22412
F0.25
s(g13258
I42
g13259
Vinsert
p22413
I42
VSimpleName: containsExactly
p22414
tp22415
I1
s(g7151
I42
g7152
Vinsert
p22416
I14
VClassInstanceCreation
p22417
tp22418
I1
s(g1484
I42
g1485
Vinsert
p22419
I42
VSimpleName: Call
p22420
tp22421
I1
s(g2870
I42
g2871
Vinsert
p22422
I32
VMethodInvocation
p22423
tp22424
I3
s(g61
I42
g62
Vinsert
p22425
I42
VSimpleName: config
p22426
tp22427
F1.5
s(g10770
I42
g10771
Vinsert
p22428
I42
VSimpleName: expect
p22429
tp22430
F0.25
s(g5421
I42
g5422
Vinsert
p22431
I42
VSimpleName: e
p22432
tp22433
F0.75
s(g6685
I42
g6686
Vinsert
p22434
I45
VStringLiteral: "client.transport.sniff"
p22435
tp22436
I1
s(g2823
I42
g2824
Vinsert
p22437
I27
VInfixExpression: <=
p22438
tp22439
I1
s(g1704
I42
g1705
Vinsert
p22440
I42
VSimpleName: ImmutableSet
p22441
tp22442
I2
s(g13461
I42
g13462
Vinsert
p22443
I42
VSimpleName: Long
p22444
tp22445
I1
s(g987
I42
g988
Vinsert
p22446
I34
VNumberLiteral: 1L
p22447
tp22448
I3
s(g2378
I42
g2379
Vinsert
p22449
I42
VSimpleName: Span
p22450
tp22451
F0.25
s(g5183
I42
g5184
Vinsert
p22452
I42
VSimpleName: build
p22453
tp22454
I1
s(g11317
I42
g11318
Vinsert
p22455
I43
VSimpleType: IOException
p22456
tp22457
F0.5
s(g6685
I42
g6686
Vinsert
p22458
I45
VStringLiteral: "cluster.name"
p22459
tp22460
I1
s(g11973
I42
g11974
Vinsert
p22461
I22
VFieldAccess
p22462
tp22463
F0.25
s(g6045
I42
g6046
Vinsert
p22464
I13
VCharacterLiteral: 'c'
p22465
tp22466
I1
s(g41
I42
g42
Vinsert
p22467
I42
VSimpleName: onError
p22468
tp22469
I1
s(g891
I42
g892
Vinsert
p22470
I42
VSimpleName: Long
p22471
tp22472
I1
s(g5856
I42
g5857
Vinsert
p22473
I29
VJavadoc
p22474
tp22475
F0.25
s(g5221
I42
g5222
Vinsert
p22476
I41
VReturnStatement
p22477
tp22478
I1
s(g5126
I42
g5127
Vinsert
p22479
I42
VSimpleName: bound
p22480
tp22481
I2
s(g5316
I42
g5317
Vinsert
p22482
I42
VSimpleName: callback
p22483
tp22484
F1.75
s(g2309
I42
g2310
Vinsert
p22485
I42
VSimpleName: formatter
p22486
tp22487
I1
s(g9174
I42
g9175
Vinsert
p22488
I59
VVariableDeclarationFragment
p22489
tp22490
I3
s(g801
I42
g802
Vinsert
p22491
I42
VSimpleName: BraveTracingInterceptor
p22492
tp22493
I1
s(g2722
I42
g2723
Vinsert
p22494
I43
VSimpleType: HttpURLConnection
p22495
tp22496
I4
s(g4090
I42
g4091
Vinsert
p22497
I42
VSimpleName: ignoredType
p22498
tp22499
I1
s(g8280
I42
g8281
Vinsert
p22500
I83
VModifier: public
p22501
tp22502
F0.25
s(g8751
I42
g8752
Vinsert
p22503
I45
VStringLiteral: "${zipkin.storage.elasticsearch.timeout:10000}"
p22504
tp22505
F0.25
s(g2727
I42
g2728
Vinsert
p22506
I42
VSimpleName: detectsCounters
p22507
tp22508
F0.25
s(g636
I42
g637
Vinsert
p22509
I42
VSimpleName: messages
p22510
tp22511
I1
s(g441
I42
g442
Vinsert
p22512
I57
VTypeLiteral
p22513
tp22514
I1
s(g4531
I42
g4532
Vinsert
p22515
I34
VNumberLiteral: 31000L
p22516
tp22517
I1
s(g6099
I42
g6100
Vinsert
p22518
I44
VSingleVariableDeclaration
p22519
tp22520
F1.5
s(g2684
I42
g2685
Vinsert
p22521
I43
VSimpleType: Exception
p22522
tp22523
F0.5
s(g944
I42
g945
Vinsert
p22524
I42
VSimpleName: ZipkinElasticsearchAwsStorageAutoConfiguration
p22525
tp22526
I1
s(g1744
I42
g1745
Vinsert
p22527
I42
VSimpleName: host
p22528
tp22529
I1
s(g6099
I42
g6100
Vinsert
p22530
I39
VPrimitiveType: int
p22531
tp22532
F1.5
s(Vinsert
p22533
I42
VSimpleName: toBuilder
p22534
Vinsert
p22535
I42
VSimpleName: binaryAnnotation_double
p22536
tp22537
F0.25
s(g646
I42
g647
Vinsert
p22538
I42
VSimpleName: traceIdLow
p22539
tp22540
I1
s(g15883
I42
g15884
Vinsert
p22541
I42
VSimpleName: DependencyLinkSpan
p22542
tp22543
F4.25
s(g466
I42
g467
Vinsert
p22544
I42
VSimpleName: Value
p22545
tp22546
F0.25
s(g12883
I42
g12884
Vinsert
p22547
I42
VSimpleName: next
p22548
tp22549
I3
s(g229
I42
g230
Vinsert
p22550
I43
VSimpleType: List
p22551
tp22552
I2
s(g5603
I42
g5604
Vinsert
p22553
I39
VPrimitiveType: int
p22554
tp22555
F0.25
s(g1566
I42
g1567
Vinsert
p22556
I1
VAnonymousClassDeclaration
p22557
tp22558
F0.25
s(g9419
I42
g9420
Vinsert
p22559
I42
VSimpleName: writeSpans
p22560
tp22561
I1
s(g4918
I42
g4919
Vinsert
p22562
I43
VSimpleType: KafkaCollector
p22563
tp22564
I1
s(g4095
I42
g4096
Vinsert
p22565
I43
VSimpleType: DependencyLink
p22566
tp22567
I1
s(g7913
I42
g7914
Vinsert
p22568
I7
VAssignment: +=
p22569
tp22570
I4
s(g2350
I42
g2351
Vinsert
p22571
I42
VSimpleName: logger
p22572
tp22573
I1
s(g6677
I42
g6678
Vinsert
p22574
I42
VSimpleName: collect
p22575
tp22576
F0.25
s(g6595
I42
g6596
Vinsert
p22577
I42
VSimpleName: s
p22578
tp22579
I2
s(g12675
I42
g12676
Vinsert
p22580
I34
VNumberLiteral: 1235L
p22581
tp22582
I1
s(g66
I42
g67
Vinsert
p22583
I42
VSimpleName: Object
p22584
tp22585
F0.25
s(g15846
I42
g15847
Vinsert
p22586
I43
VSimpleType: Iterable
p22587
tp22588
F0.25
s(g405
I42
g406
Vinsert
p22589
I42
VSimpleName: storage
p22590
tp22591
F1.25
s(g5831
I42
g5832
Vinsert
p22592
I42
VSimpleName: hasErrorCount
p22593
tp22594
F1.25
s(g9502
I42
g9503
Vinsert
p22595
I42
VSimpleName: traceId
p22596
tp22597
I2
s(Vinsert
p22598
I42
VSimpleName: builder
p22599
Vinsert
p22600
I42
VSimpleName: coercesDurationZeroToNull
p22601
tp22602
F0.25
s(g3176
I42
g3177
Vinsert
p22603
I42
VSimpleName: rootNode
p22604
tp22605
I1
s(g3233
I42
g3234
Vinsert
p22606
I42
VSimpleName: Callback
p22607
tp22608
F0.25
s(g1551
I42
g1552
Vinsert
p22609
I34
VNumberLiteral: 24
p22610
tp22611
I1
s(g1744
I42
g1745
Vinsert
p22612
I27
VInfixExpression: >
p22613
tp22614
I1
s(g4385
I42
g4386
Vinsert
p22615
I42
VSimpleName: withParent
p22616
tp22617
I1
s(g2103
I42
g2104
Vinsert
p22618
I42
VSimpleName: message
p22619
tp22620
I1
s(g1744
I42
g1745
Vinsert
p22621
I44
VSingleVariableDeclaration
p22622
tp22623
I1
s(g5629
I42
g5630
Vinsert
p22624
I27
VInfixExpression: &&
p22625
tp22626
I2
s(g1327
I42
g1328
Vinsert
p22627
I44
VSingleVariableDeclaration
p22628
tp22629
F0.25
s(g5316
I42
g5317
Vinsert
p22630
I32
VMethodInvocation
p22631
tp22632
I11
s(g1673
I42
g1674
Vinsert
p22633
I42
VSimpleName: traceIds
p22634
tp22635
I2
s(g329
I42
g330
Vinsert
p22636
I42
VSimpleName: assertThat
p22637
tp22638
I2
s(g4639
I42
g4640
Vinsert
p22639
I42
VSimpleName: next
p22640
tp22641
F0.25
s(g6894
I42
g6895
Vinsert
p22642
I8
VBlock
p22643
tp22644
I8
s(g3767
I42
g3768
Vinsert
p22645
I42
VSimpleName: traceId
p22646
tp22647
I2
s(g7380
I42
g7381
Vinsert
p22648
I41
VReturnStatement
p22649
tp22650
I3
s(g1709
I42
g1710
Vinsert
p22651
I42
VSimpleName: assertThat
p22652
tp22653
I1
s(g3046
I42
g3047
Vinsert
p22654
I43
VSimpleType: ElasticsearchHttpStorage
p22655
tp22656
I1
s(g6376
I42
g6377
Vinsert
p22657
I21
VExpressionStatement
p22658
tp22659
I5
s(g1939
I42
g1940
Vinsert
p22660
I43
VSimpleType: BoundStatement
p22661
tp22662
I1
s(g196
I42
g197
Vinsert
p22663
I42
VSimpleName: ttl
p22664
tp22665
F0.25
s(g10920
I42
g10921
Vinsert
p22666
I42
VSimpleName: uploadSpansJson
p22667
tp22668
F0.25
s(g1372
I42
g1373
Vinsert
p22669
I32
VMethodInvocation
p22670
tp22671
I1
s(g9656
I42
g9657
Vinsert
p22672
I42
VSimpleName: Arrays
p22673
tp22674
I2
s(g4768
I42
g4769
Vinsert
p22675
I40
VQualifiedName: storage.indexNameFormatter
p22676
tp22677
I1
s(g4587
I42
g4588
Vinsert
p22678
I42
VSimpleName: disabledHttpCollectorBean
p22679
tp22680
F0.25
s(g5785
I42
g5786
Vinsert
p22681
I21
VExpressionStatement
p22682
tp22683
I3
s(g1074
I42
g1075
Vinsert
p22684
I42
VSimpleName: span2s
p22685
tp22686
I1
s(g6522
I42
g6523
Vinsert
p22687
I42
VSimpleName: readResolve
p22688
tp22689
F0.5
s(g1767
I42
g1768
Vinsert
p22690
I42
VSimpleName: newBuilder
p22691
tp22692
I1
s(g1095
I42
g1096
Vinsert
p22693
I42
VSimpleName: pos
p22694
tp22695
F0.25
s(g2416
I42
g2417
Vinsert
p22696
I33
VNullLiteral
p22697
tp22698
I1
s(g5369
I42
g5370
Vinsert
p22699
I27
VInfixExpression: >
p22700
tp22701
F0.25
s(g2098
I42
g2099
Vinsert
p22702
I43
VSimpleType: okhttp3.Call
p22703
tp22704
F0.25
s(g1995
I42
g1996
Vinsert
p22705
I43
VSimpleType: UncheckedIOException
p22706
tp22707
F0.25
s(g2345
I42
g2346
Vinsert
p22708
I40
VQualifiedName: ImmutableList.Builder
p22709
tp22710
I1
s(g3541
I42
g3542
Vinsert
p22711
I44
VSingleVariableDeclaration
p22712
tp22713
F0.5
s(g2991
I42
g2992
Vinsert
p22714
I42
VSimpleName: OkHttpClient
p22715
tp22716
I1
s(g5558
I42
g5559
Vinsert
p22717
I39
VPrimitiveType: int
p22718
tp22719
I1
s(g1405
I42
g1406
Vinsert
p22720
I43
VSimpleType: NullPointerException
p22721
tp22722
I1
s(g3083
I42
g3084
Vinsert
p22723
I42
VSimpleName: Metric
p22724
tp22725
I1
s(g4461
I42
g4462
Vinsert
p22726
I78
VMarkerAnnotation
p22727
tp22728
F3.25
s(g3372
I42
g3373
Vinsert
p22729
I42
VSimpleName: spanId
p22730
tp22731
I1
s(g11001
I42
g11002
Vinsert
p22732
I42
VSimpleName: path
p22733
tp22734
F0.5
s(g2547
I42
g2548
Vinsert
p22735
I33
VNullLiteral
p22736
tp22737
I1
s(g1045
I42
g1046
Vinsert
p22738
I8
VBlock
p22739
tp22740
I3
s(g4275
I42
g4276
Vinsert
p22741
I43
VSimpleType: AtomicInteger
p22742
tp22743
I1
s(g11312
I42
g11313
Vinsert
p22744
I83
VModifier: static
p22745
tp22746
I1
s(g3541
I42
g3542
Vinsert
p22747
I43
VSimpleType: Object
p22748
tp22749
F0.25
s(g334
I42
g335
Vinsert
p22750
I25
VIfStatement
p22751
tp22752
I1
s(g2802
I42
g2803
Vinsert
p22753
I21
VExpressionStatement
p22754
tp22755
I1
s(g1012
I42
g1013
Vinsert
p22756
I59
VVariableDeclarationFragment
p22757
tp22758
F0.5
s(g17404
I42
g17405
Vinsert
p22759
I43
VSimpleType: Span
p22760
tp22761
F0.25
s(g1584
I42
g1585
Vinsert
p22762
I27
VInfixExpression: !=
p22763
tp22764
I1
s(g572
I42
g573
Vinsert
p22765
I33
VNullLiteral
p22766
tp22767
I1
s(g5369
I42
g5370
Vinsert
p22768
I34
VNumberLiteral: 10000
p22769
tp22770
F0.25
s(g10433
I42
g10434
Vinsert
p22771
I42
VSimpleName: SERVER_ADDR
p22772
tp22773
F0.5
s(g2023
I42
g2024
Vinsert
p22774
I42
VSimpleName: GzipSink
p22775
tp22776
I4
s(g3263
I42
g3264
Vinsert
p22777
I40
VQualifiedName: zipkin.internal.Util
p22778
tp22779
F0.25
s(g6731
I42
g6732
Vinsert
p22780
I42
VSimpleName: JsonWriter
p22781
tp22782
I2
s(g4187
I42
g4188
Vinsert
p22783
I60
VVariableDeclarationStatement
p22784
tp22785
I7
s(g7287
I42
g7288
Vinsert
p22786
I45
VStringLiteral: "MYSQL_PASS"
p22787
tp22788
I3
s(g2891
I42
g2892
Vinsert
p22789
I42
VSimpleName: statement
p22790
tp22791
I1
s(g552
I42
g553
Vinsert
p22792
I2
VArrayAccess
p22793
tp22794
I4
s(g1566
I42
g1567
Vinsert
p22795
I42
VSimpleName: Schema
p22796
tp22797
I1
s(g7533
I42
g7534
Vinsert
p22798
I21
VExpressionStatement
p22799
tp22800
I5
s(g4385
I42
g4386
Vinsert
p22801
I78
VMarkerAnnotation
p22802
tp22803
F0.5
s(g4717
I42
g4718
Vinsert
p22804
I42
VSimpleName: addAnnotation
p22805
tp22806
I6
s(g131
I42
g132
Vinsert
p22807
I43
VSimpleType: StoreSpansCall
p22808
tp22809
I2
s(g3730
I42
g3731
Vinsert
p22810
I43
VSimpleType: QueryException
p22811
tp22812
I1
s(g2694
I42
g2695
Vinsert
p22813
I42
VSimpleName: storage
p22814
tp22815
I7
s(g3051
I42
g3052
Vinsert
p22816
I42
VSimpleName: annotations
p22817
tp22818
I3
s(g111
I42
g112
Vinsert
p22819
I43
VSimpleType: Repository
p22820
tp22821
F0.25
s(g1298
I42
g1299
Vinsert
p22822
I40
VQualifiedName: a.timestamp
p22823
tp22824
I1
s(g66
I42
g67
Vinsert
p22825
I43
VSimpleType: HttpServletResponse
p22826
tp22827
F0.25
s(g836
I42
g837
Vinsert
p22828
I12
VCatchClause
p22829
tp22830
I1
s(g4610
I42
g4611
Vinsert
p22831
I42
VSimpleName: executor
p22832
tp22833
F0.25
s(g1523
I42
g1524
Vinsert
p22834
I43
VSimpleType: ArrayList
p22835
tp22836
I1
s(g11052
I42
g11053
Vinsert
p22837
I78
VMarkerAnnotation
p22838
tp22839
F0.25
s(g14839
I42
g14840
Vinsert
p22840
I42
VSimpleName: value
p22841
tp22842
I1
s(g939
I42
g940
Vinsert
p22843
I14
VClassInstanceCreation
p22844
tp22845
I6
s(g3022
I42
g3023
Vinsert
p22846
I7
VAssignment: =
p22847
tp22848
I1
s(g1428
I42
g1429
Vinsert
p22849
I42
VSimpleName: APPLICATION_JSON
p22850
tp22851
I1
s(g3186
I42
g3187
Vinsert
p22852
I42
VSimpleName: accept
p22853
tp22854
F0.25
s(g2299
I42
g2300
Vinsert
p22855
I8
VBlock
p22856
tp22857
I2
s(g954
I42
g955
Vinsert
p22858
I42
VSimpleName: valueSet
p22859
tp22860
I1
s(g5491
I42
g5492
Vinsert
p22861
I42
VSimpleName: add
p22862
tp22863
I3
s(g1551
I42
g1552
Vinsert
p22864
I42
VSimpleName: ipv4
p22865
tp22866
I1
s(g4090
I42
g4091
Vinsert
p22867
I27
VInfixExpression: <
p22868
tp22869
I4
s(g2647
I42
g2648
Vinsert
p22870
I42
VSimpleName: CollectorMetrics
p22871
tp22872
F0.5
s(g191
I42
g192
Vinsert
p22873
I42
VSimpleName: today
p22874
tp22875
I1
s(g949
I42
g950
Vinsert
p22876
I27
VInfixExpression: !=
p22877
tp22878
I1
s(g2514
I42
g2515
Vinsert
p22879
I42
VSimpleName: storage
p22880
tp22881
F4.25
s(g646
I42
g647
Vinsert
p22882
I42
VSimpleName: traceIdHigh
p22883
tp22884
I1
s(g1187
I42
g1188
Vinsert
p22885
I42
VSimpleName: expected
p22886
tp22887
F0.25
s(g7516
I42
g7517
Vinsert
p22888
I43
VSimpleType: KafkaConfig
p22889
tp22890
I1
s(g19654
I42
g19655
Vinsert
p22891
I21
VExpressionStatement
p22892
tp22893
F0.75
s(g3859
I42
g3860
Vinsert
p22894
I42
VSimpleName: TraceIdUDT
p22895
tp22896
F1.5
s(g739
I42
g740
Vinsert
p22897
I45
VStringLiteral: "error"
p22898
tp22899
I1
s(g6677
I42
g6678
Vinsert
p22900
I42
VSimpleName: Span
p22901
tp22902
F0.25
s(g16138
I42
g16139
Vinsert
p22903
I43
VSimpleType: AsyncSpanConsumer
p22904
tp22905
F0.25
s(g10306
I42
g10307
Vinsert
p22906
I42
VSimpleName: entrySet
p22907
tp22908
I1
s(g1602
I42
g1603
Vinsert
p22909
I42
VSimpleName: parent
p22910
tp22911
I1
s(g8892
I42
g8893
Vinsert
p22912
I66
VTextElement: , then 
p22913
tp22914
F0.25
s(g2704
I42
g2705
Vinsert
p22915
I42
VSimpleName: storage
p22916
tp22917
I1
s(g2426
I42
g2427
Vinsert
p22918
I32
VMethodInvocation
p22919
tp22920
I1
s(g14635
I42
g14636
Vinsert
p22921
I39
VPrimitiveType: boolean
p22922
tp22923
I1
s(g1757
I42
g1758
Vinsert
p22924
I42
VSimpleName: target
p22925
tp22926
I1
s(g2454
I42
g2455
Vinsert
p22927
I41
VReturnStatement
p22928
tp22929
I1
s(g13444
I42
g13445
Vinsert
p22930
I7
VAssignment: =
p22931
tp22932
I2
s(g6731
I42
g6732
Vinsert
p22933
I42
VSimpleName: id
p22934
tp22935
F0.25
s(g1969
I42
g1970
Vinsert
p22936
I42
VSimpleName: LOGGER
p22937
tp22938
I2
s(g7913
I42
g7914
Vinsert
p22939
I8
VBlock
p22940
tp22941
I6
s(g6471
I42
g6472
Vinsert
p22942
I74
VParameterizedType: ListenableFuture<?>
p22943
tp22944
I1
s(g10770
I42
g10771
Vinsert
p22945
I23
VFieldDeclaration
p22946
tp22947
F0.25
s(g13308
I42
g13309
Vinsert
p22948
I59
VVariableDeclarationFragment
p22949
tp22950
I2
s(g3552
I42
g3553
Vinsert
p22951
I44
VSingleVariableDeclaration
p22952
tp22953
F0.25
s(g562
I42
g563
Vinsert
p22954
I42
VSimpleName: container
p22955
tp22956
I1
s(g5264
I42
g5265
Vinsert
p22957
I32
VMethodInvocation
p22958
tp22959
F7.75
s(g4523
I42
g4524
Vinsert
p22960
I43
VSimpleType: Args
p22961
tp22962
F0.25
s(g5674
I42
g5675
Vinsert
p22963
I42
VSimpleName: findServiceSpan
p22964
tp22965
I2
s(g5897
I42
g5898
Vinsert
p22966
I42
VSimpleName: StorageAdapters
p22967
tp22968
I1
s(g279
I42
g280
Vinsert
p22969
I41
VReturnStatement
p22970
tp22971
I1
s(g796
I42
g797
Vinsert
p22972
I44
VSingleVariableDeclaration
p22973
tp22974
F0.25
s(g6301
I42
g6302
Vinsert
p22975
I42
VSimpleName: ElasticsearchHttpStorage
p22976
tp22977
F1.75
s(g6000
I42
g6001
Vinsert
p22978
I42
VSimpleName: MockHttpServletRequestBuilder
p22979
tp22980
F0.75
s(g14269
I42
g14270
Vinsert
p22981
I42
VSimpleName: matchAllQuery
p22982
tp22983
I1
s(g3992
I42
g3993
Vinsert
p22984
I34
VNumberLiteral: 1L
p22985
tp22986
I1
s(g801
I42
g802
Vinsert
p22987
I42
VSimpleName: delegate
p22988
tp22989
I1
s(g572
I42
g573
Vinsert
p22990
I14
VClassInstanceCreation
p22991
tp22992
I1
s(g2283
I42
g2284
Vinsert
p22993
I52
VThisExpression
p22994
tp22995
F0.25
s(g1916
I42
g1917
Vinsert
p22996
I42
VSimpleName: a
p22997
tp22998
F0.25
s(g91
I42
g92
Vinsert
p22999
I49
VSwitchCase
p23000
tp23001
I1
s(g2278
I42
g2279
Vinsert
p23002
I42
VSimpleName: DISALLOWED_ORIGIN
p23003
tp23004
F0.25
s(g13167
I42
g13168
Vinsert
p23005
I42
VSimpleName: scribeMetrics
p23006
tp23007
I2
s(g12361
I42
g12362
Vinsert
p23008
I43
VSimpleType: Integer
p23009
tp23010
I1
s(g1995
I42
g1996
Vinsert
p23011
I42
VSimpleName: when
p23012
tp23013
I1
s(g1400
I42
g1401
Vinsert
p23014
I42
VSimpleName: assertThat
p23015
tp23016
I3
s(g3438
I42
g3439
Vinsert
p23017
I43
VSimpleType: AtomicInteger
p23018
tp23019
F0.25
s(g6471
I42
g6472
Vinsert
p23020
I43
VSimpleType: ListenableFuture
p23021
tp23022
I1
s(g4301
I42
g4302
Vinsert
p23023
I40
VQualifiedName: currentSpan.service
p23024
tp23025
I2
s(g3804
I42
g3805
Vinsert
p23026
I45
VStringLiteral: "remoteEndpoint"
p23027
tp23028
I1
s(g6421
I42
g6422
Vinsert
p23029
I32
VMethodInvocation
p23030
tp23031
I1
s(g6894
I42
g6895
Vinsert
p23032
I43
VSimpleType: Set
p23033
tp23034
F0.25
s(g15846
I42
g15847
Vinsert
p23035
I42
VSimpleName: Iterable
p23036
tp23037
F0.25
s(g16828
I42
g16829
Vinsert
p23038
I42
VSimpleName: getParent_id
p23039
tp23040
I1
s(g10551
I42
g10552
Vinsert
p23041
I42
VSimpleName: String
p23042
tp23043
F0.25
s(g6203
I42
g6204
Vinsert
p23044
I27
VInfixExpression: ==
p23045
tp23046
F0.25
s(g8842
I42
g8843
Vinsert
p23047
I7
VAssignment: =
p23048
tp23049
I1
s(g7277
I42
g7278
Vinsert
p23050
I58
VVariableDeclarationExpression
p23051
tp23052
I1
s(g6195
I42
g6196
Vinsert
p23053
I44
VSingleVariableDeclaration
p23054
tp23055
I1
s(g390
I42
g391
Vinsert
p23056
I42
VSimpleName: addPathSegment
p23057
tp23058
F0.25
s(g9513
I42
g9514
Vinsert
p23059
I32
VMethodInvocation
p23060
tp23061
I57
s(g6878
I42
g6879
Vinsert
p23062
I40
VQualifiedName: timestampRange.endUUID
p23063
tp23064
I2
s(g91
I42
g92
Vinsert
p23065
I42
VSimpleName: next
p23066
tp23067
I1
s(g6745
I42
g6746
Vinsert
p23068
I42
VSimpleName: nextChunk
p23069
tp23070
I1
s(g176
I42
g177
Vinsert
p23071
I32
VMethodInvocation
p23072
tp23073
I6
s(g1053
I42
g1054
Vinsert
p23074
I42
VSimpleName: buildIfSupported
p23075
tp23076
I1
s(g2642
I42
g2643
Vinsert
p23077
I43
VSimpleType: ListenableFuture
p23078
tp23079
I3
s(g3541
I42
g3542
Vinsert
p23080
I42
VSimpleName: statement
p23081
tp23082
F0.25
s(g7159
I42
g7160
Vinsert
p23083
I45
VStringLiteral: "    \u005c"Endpoint\u005c": \u005c"search-zipkin53-mhdyquzbwwzwvln6phfzr3lldi.ap-southeast-1.es.amazonaws.com\u005c",\u005cn"
p23084
tp23085
I1
s(g2525
I42
g2526
Vinsert
p23086
I43
VSimpleType: Span
p23087
tp23088
F0.25
s(g1053
I42
g1054
Vinsert
p23089
I42
VSimpleName: jre7
p23090
tp23091
I3
s(g4498
I42
g4499
Vinsert
p23092
I32
VMethodInvocation
p23093
tp23094
I4
s(g21
I42
g22
Vinsert
p23095
I59
VVariableDeclarationFragment
p23096
tp23097
I1
s(g2208
I42
g2209
Vinsert
p23098
I42
VSimpleName: ApplyTimestampAndDuration
p23099
tp23100
I2
s(g3367
I42
g3368
Vinsert
p23101
I42
VSimpleName: es
p23102
tp23103
I2
s(g4192
I42
g4193
Vinsert
p23104
I8
VBlock
p23105
tp23106
F1.25
s(g527
I42
g528
Vinsert
p23107
I42
VSimpleName: addAnnotation
p23108
tp23109
I5
s(g5995
I42
g5996
Vinsert
p23110
I40
VQualifiedName: span.kind
p23111
tp23112
I1
s(g7292
I42
g7293
Vinsert
p23113
I42
VSimpleName: endTs
p23114
tp23115
I1
s(g3767
I42
g3768
Vinsert
p23116
I42
VSimpleName: traceIdToTraceIdTimeStamps
p23117
tp23118
I1
s(g4034
I42
g4035
Vinsert
p23119
I42
VSimpleName: acceptSpans
p23120
tp23121
I2
s(g3160
I42
g3161
Vinsert
p23122
I41
VReturnStatement
p23123
tp23124
I1
s(g1017
I42
g1018
Vinsert
p23125
I21
VExpressionStatement
p23126
tp23127
I1
s(g10621
I42
g10622
Vinsert
p23128
I42
VSimpleName: providesCollectorComponent
p23129
tp23130
F0.25
s(g81
I42
g82
Vinsert
p23131
I27
VInfixExpression: !=
p23132
tp23133
F2.25
s(g5598
I42
g5599
Vinsert
p23134
I42
VSimpleName: Thread
p23135
tp23136
I2
s(g451
I42
g452
Vinsert
p23137
I86
VLambdaExpression
p23138
tp23139
I2
s(g2492
I42
g2493
Vinsert
p23140
I43
VSimpleType: ArrayList
p23141
tp23142
I2
s(g1247
I42
g1248
Vinsert
p23143
I32
VMethodInvocation
p23144
tp23145
I8
s(g13167
I42
g13168
Vinsert
p23146
I40
VQualifiedName: bytes.length
p23147
tp23148
I1
s(g1939
I42
g1940
Vinsert
p23149
I42
VSimpleName: Test
p23150
tp23151
F0.25
s(g4016
I42
g4017
Vinsert
p23152
I14
VClassInstanceCreation
p23153
tp23154
I7
s(g5112
I42
g5113
Vinsert
p23155
I78
VMarkerAnnotation
p23156
tp23157
F0.25
s(g2446
I42
g2447
Vinsert
p23158
I45
VStringLiteral: "rpc"
p23159
tp23160
I1
s(g9215
I42
g9216
Vinsert
p23161
I60
VVariableDeclarationStatement
p23162
tp23163
I2
s(g2959
I42
g2960
Vinsert
p23164
I42
VSimpleName: Span
p23165
tp23166
I5
s(g2996
I42
g2997
Vinsert
p23167
I43
VSimpleType: Span
p23168
tp23169
F0.5
s(g2525
I42
g2526
Vinsert
p23170
I42
VSimpleName: spans
p23171
tp23172
F0.25
s(g7423
I42
g7424
Vinsert
p23173
I42
VSimpleName: Callback
p23174
tp23175
F0.25
s(g2309
I42
g2310
Vinsert
p23176
I42
VSimpleName: start
p23177
tp23178
I1
s(g2005
I42
g2006
Vinsert
p23179
I43
VSimpleType: T
p23180
tp23181
I1
s(g5523
I42
g5524
Vinsert
p23182
I7
VAssignment: =
p23183
tp23184
I2
s(g2441
I42
g2442
Vinsert
p23185
I5
VArrayType: String[]
p23186
tp23187
F0.25
s(g5603
I42
g5604
Vinsert
p23188
I33
VNullLiteral
p23189
tp23190
I1
s(g6677
I42
g6678
Vinsert
p23191
I32
VMethodInvocation
p23192
tp23193
F3.25
s(g10551
I42
g10552
Vinsert
p23194
I32
VMethodInvocation
p23195
tp23196
I1
s(g4557
I42
g4558
Vinsert
p23197
I42
VSimpleName: endTs
p23198
tp23199
I1
s(g269
I42
g270
Vinsert
p23200
I42
VSimpleName: sampler2
p23201
tp23202
I1
s(g314
I42
g315
Vinsert
p23203
I21
VExpressionStatement
p23204
tp23205
I1
s(g3268
I42
g3269
Vinsert
p23206
I5
VArrayType: String[]
p23207
tp23208
F0.25
s(g8402
I42
g8403
Vinsert
p23209
I7
VAssignment: =
p23210
tp23211
F1.25
s(g2627
I42
g2628
Vinsert
p23212
I59
VVariableDeclarationFragment
p23213
tp23214
I1
s(g595
I42
g596
Vinsert
p23215
I25
VIfStatement
p23216
tp23217
I1
s(g734
I42
g735
Vinsert
p23218
I42
VSimpleName: event
p23219
tp23220
I1
s(g2187
I42
g2188
Vinsert
p23221
I31
VMethodDeclaration
p23222
tp23223
F0.5
s(g1351
I42
g1352
Vinsert
p23224
I42
VSimpleName: assertThat
p23225
tp23226
I1
s(g2459
I42
g2460
Vinsert
p23227
I32
VMethodInvocation
p23228
tp23229
I2
s(g1739
I42
g1740
Vinsert
p23230
I42
VSimpleName: id
p23231
tp23232
I2
s(g11654
I42
g11655
Vinsert
p23233
I42
VSimpleName: span2
p23234
tp23235
I1
s(g4212
I42
g4213
Vinsert
p23236
I40
VQualifiedName: ZIPKIN_ANNOTATIONS.SPAN_ID
p23237
tp23238
I1
s(g1207
I42
g1208
Vinsert
p23239
I43
VSimpleType: Random
p23240
tp23241
I1
s(g2880
I42
g2881
Vinsert
p23242
I83
VModifier: public
p23243
tp23244
F0.75
s(g17360
I42
g17361
Vinsert
p23245
I43
VSimpleType: InMemorySpanStore
p23246
tp23247
I2
s(g1118
I42
g1119
Vinsert
p23248
I42
VSimpleName: get
p23249
tp23250
I1
s(g436
I42
g437
Vinsert
p23251
I32
VMethodInvocation
p23252
tp23253
I6
s(g659
I42
g660
Vinsert
p23254
I42
VSimpleName: ArrayList
p23255
tp23256
I1
s(g2954
I42
g2955
Vinsert
p23257
I7
VAssignment: =
p23258
tp23259
I1
s(g5321
I42
g5322
Vinsert
p23260
I42
VSimpleName: Override
p23261
tp23262
F0.75
s(g7240
I42
g7241
Vinsert
p23263
I16
VConditionalExpression
p23264
tp23265
I1
s(g512
I42
g513
Vinsert
p23266
I42
VSimpleName: encoding
p23267
tp23268
F0.25
s(Vinsert
p23269
I42
VSimpleName: register
p23270
Vinsert
p23271
I42
VSimpleName: indexHtmlFromClasspath
p23272
tp23273
F0.25
s(g259
I42
g260
Vinsert
p23274
I43
VSimpleType: String
p23275
tp23276
F0.75
s(g7516
I42
g7517
Vinsert
p23277
I43
VSimpleType: Exception
p23278
tp23279
F0.25
s(g6347
I42
g6348
Vinsert
p23280
I42
VSimpleName: ZipkinElasticsearchStorageAutoConfiguration
p23281
tp23282
I1
s(g13444
I42
g13445
Vinsert
p23283
I42
VSimpleName: collector
p23284
tp23285
I1
s(g851
I42
g852
Vinsert
p23286
I40
VQualifiedName: config.spanTtl
p23287
tp23288
F0.25
s(g2135
I42
g2136
Vinsert
p23289
I31
VMethodDeclaration
p23290
tp23291
F1.75
s(g4626
I42
g4627
Vinsert
p23292
I42
VSimpleName: callCount
p23293
tp23294
I1
s(g304
I42
g305
Vinsert
p23295
I21
VExpressionStatement
p23296
tp23297
I1
s(g4220
I42
g4221
Vinsert
p23298
I39
VPrimitiveType: int
p23299
tp23300
F2.25
s(g7091
I42
g7092
Vinsert
p23301
I86
VLambdaExpression
p23302
tp23303
I1
s(g10954
I42
g10955
Vinsert
p23304
I40
VQualifiedName: javax.servlet.http.HttpServletResponse
p23305
tp23306
F0.25
s(g4673
I42
g4674
Vinsert
p23307
I42
VSimpleName: check
p23308
tp23309
F0.25
s(g3186
I42
g3187
Vinsert
p23310
I42
VSimpleName: iterator
p23311
tp23312
F0.25
s(g7159
I42
g7160
Vinsert
p23313
I45
VStringLiteral: "{\u005cn"
p23314
tp23315
I1
s(Vinsert
p23316
I42
VSimpleName: length
p23317
Vinsert
p23318
I40
VQualifiedName: org.jooq.impl.SQLDataType.BINARY
p23319
tp23320
I1
s(g12361
I42
g12362
Vinsert
p23321
I42
VSimpleName: Arrays
p23322
tp23323
I1
s(g7292
I42
g7293
Vinsert
p23324
I42
VSimpleName: doAnswer
p23325
tp23326
I1
s(g527
I42
g528
Vinsert
p23327
I42
VSimpleName: WEB_ENDPOINT
p23328
tp23329
I3
s(g7159
I42
g7160
Vinsert
p23330
I42
VSimpleName: assertThat
p23331
tp23332
I5
s(g3120
I42
g3121
Vinsert
p23333
I43
VSimpleType: CassandraStrictTraceIdFalseTest
p23334
tp23335
F0.25
s(g1856
I42
g1857
Vinsert
p23336
I32
VMethodInvocation
p23337
tp23338
I1
s(g6025
I42
g6026
Vinsert
p23339
I42
VSimpleName: NamesFallbackTest
p23340
tp23341
F0.5
s(g3318
I42
g3319
Vinsert
p23342
I34
VNumberLiteral: 1005656679588439279L
p23343
tp23344
I1
s(g12697
I42
g12698
Vinsert
p23345
I42
VSimpleName: asList
p23346
tp23347
I1
s(g6376
I42
g6377
Vinsert
p23348
I34
VNumberLiteral: 0
p23349
tp23350
I1
s(g1683
I42
g1684
Vinsert
p23351
I42
VSimpleName: initialValue
p23352
tp23353
F0.25
s(g7086
I42
g7087
Vinsert
p23354
I53
VThrowStatement
p23355
tp23356
I1
s(g3454
I42
g3455
Vinsert
p23357
I42
VSimpleName: Collections
p23358
tp23359
I1
s(g6776
I42
g6777
Vinsert
p23360
I42
VSimpleName: Boolean
p23361
tp23362
F0.75
s(g3155
I42
g3156
Vinsert
p23363
I42
VSimpleName: endTs
p23364
tp23365
I1
s(g9497
I42
g9498
Vinsert
p23366
I43
VSimpleType: SpanStoreTest
p23367
tp23368
F0.5
s(g502
I42
g503
Vinsert
p23369
I42
VSimpleName: ImmutableList
p23370
tp23371
I1
s(g1602
I42
g1603
Vinsert
p23372
I34
VNumberLiteral: 2
p23373
tp23374
I1
s(g3393
I42
g3394
Vinsert
p23375
I42
VSimpleName: buffer
p23376
tp23377
I4
s(g3083
I42
g3084
Vinsert
p23378
I74
VParameterizedType: Iterable<Metric<?>>
p23379
tp23380
I1
s(g3838
I42
g3839
Vinsert
p23381
I83
VModifier: public
p23382
tp23383
F0.25
s(g8707
I42
g8708
Vinsert
p23384
I83
VModifier: public
p23385
tp23386
F0.25
s(g1141
I42
g1142
Vinsert
p23387
I43
VSimpleType: Stream
p23388
tp23389
I1
s(g4738
I42
g4739
Vinsert
p23390
I27
VInfixExpression: !=
p23391
tp23392
I1
s(g3974
I42
g3975
Vinsert
p23393
I45
VStringLiteral: "  \u005c"version\u005c" : {\u005cn"
p23394
tp23395
I3
s(g2203
I42
g2204
Vinsert
p23396
I32
VMethodInvocation
p23397
tp23398
I8
s(g5598
I42
g5599
Vinsert
p23399
I43
VSimpleType: Throwable
p23400
tp23401
I1
s(g4701
I42
g4702
Vinsert
p23402
I25
VIfStatement
p23403
tp23404
I1
s(g6203
I42
g6204
Vinsert
p23405
I43
VSimpleType: String
p23406
tp23407
F2.0
s(g16820
I42
g16821
Vinsert
p23408
I42
VSimpleName: LocalSpanCollector
p23409
tp23410
F0.25
s(g1589
I42
g1590
Vinsert
p23411
I42
VSimpleName: Exception
p23412
tp23413
F0.25
s(g3628
I42
g3629
Vinsert
p23414
I41
VReturnStatement
p23415
tp23416
I1
s(g6355
I42
g6356
Vinsert
p23417
I43
VSimpleType: Map
p23418
tp23419
F0.25
s(g14269
I42
g14270
Vinsert
p23420
I42
VSimpleName: findSpans
p23421
tp23422
I1
s(g9791
I42
g9792
Vinsert
p23423
I43
VSimpleType: Exception
p23424
tp23425
F0.25
s(g11634
I42
g11635
Vinsert
p23426
I43
VSimpleType: Connection
p23427
tp23428
I2
s(g2156
I42
g2157
Vinsert
p23429
I32
VMethodInvocation
p23430
tp23431
I2
s(g12361
I42
g12362
Vinsert
p23432
I42
VSimpleName: Integer
p23433
tp23434
I1
s(g2865
I42
g2866
Vinsert
p23435
I59
VVariableDeclarationFragment
p23436
tp23437
I1
s(g3268
I42
g3269
Vinsert
p23438
I42
VSimpleName: String
p23439
tp23440
F0.25
s(g4913
I42
g4914
Vinsert
p23441
I42
VSimpleName: entry
p23442
tp23443
I2
s(g2896
I42
g2897
Vinsert
p23444
I25
VIfStatement
p23445
tp23446
I1
s(g6911
I42
g6912
Vinsert
p23447
I45
VStringLiteral: "ms"
p23448
tp23449
I1
s(g997
I42
g998
Vinsert
p23450
I32
VMethodInvocation
p23451
tp23452
F18.0
s(g6162
I42
g6163
Vinsert
p23453
I7
VAssignment: =
p23454
tp23455
I1
s(g5611
I42
g5612
Vinsert
p23456
I43
VSimpleType: Set
p23457
tp23458
I1
s(g689
I42
g690
Vinsert
p23459
I43
VSimpleType: String
p23460
tp23461
I1
s(g659
I42
g660
Vinsert
p23462
I44
VSingleVariableDeclaration
p23463
tp23464
F0.25
s(g3833
I42
g3834
Vinsert
p23465
I42
VSimpleName: Request
p23466
tp23467
I1
s(g1777
I42
g1778
Vinsert
p23468
I60
VVariableDeclarationStatement
p23469
tp23470
I2
s(g5897
I42
g5898
Vinsert
p23471
I42
VSimpleName: Override
p23472
tp23473
F0.25
s(g6776
I42
g6777
Vinsert
p23474
I8
VBlock
p23475
tp23476
I4
s(g3951
I42
g3952
Vinsert
p23477
I42
VSimpleName: PropertyPlaceholderAutoConfiguration
p23478
tp23479
I7
s(g4848
I42
g4849
Vinsert
p23480
I21
VExpressionStatement
p23481
tp23482
I3
s(g2555
I42
g2556
Vinsert
p23483
I34
VNumberLiteral: 1L
p23484
tp23485
I4
s(g11634
I42
g11635
Vinsert
p23486
I42
VSimpleName: datasource
p23487
tp23488
I2
s(g405
I42
g406
Vinsert
p23489
I39
VPrimitiveType: int
p23490
tp23491
F0.5
s(g3675
I42
g3676
Vinsert
p23492
I26
VImportDeclaration
p23493
tp23494
F0.25
s(g14635
I42
g14636
Vinsert
p23495
I41
VReturnStatement
p23496
tp23497
I1
s(g4212
I42
g4213
Vinsert
p23498
I42
VSimpleName: on
p23499
tp23500
I1
s(g1367
I42
g1368
Vinsert
p23501
I8
VBlock
p23502
tp23503
I1
s(g8601
I42
g8602
Vinsert
p23504
I42
VSimpleName: gzippedJson
p23505
tp23506
I1
s(g5842
I42
g5843
Vinsert
p23507
I43
VSimpleType: DependencyLinkSpan
p23508
tp23509
I1
s(g6522
I42
g6523
Vinsert
p23510
I43
VSimpleType: ObjectStreamException
p23511
tp23512
F0.5
s(g6315
I42
g6316
Vinsert
p23513
I42
VSimpleName: fieldsExcept
p23514
tp23515
F0.25
s(g3194
I42
g3195
Vinsert
p23516
I45
VStringLiteral: "      \u005c"type\u005c": \u005c"DOUBLE\u005c"\u005cn"
p23517
tp23518
I1
s(g1894
I42
g1895
Vinsert
p23519
I42
VSimpleName: Bean
p23520
tp23521
F0.5
s(g4773
I42
g4774
Vinsert
p23522
I41
VReturnStatement
p23523
tp23524
I2
s(g2506
I42
g2507
Vinsert
p23525
I7
VAssignment: =
p23526
tp23527
I2
s(g3745
I42
g3746
Vinsert
p23528
I42
VSimpleName: spanConsumer
p23529
tp23530
F2.5
s(g10954
I42
g10955
Vinsert
p23531
I21
VExpressionStatement
p23532
tp23533
I1
s(g10027
I42
g10028
Vinsert
p23534
I42
VSimpleName: skew
p23535
tp23536
F0.25
s(g924
I42
g925
Vinsert
p23537
I42
VSimpleName: startBucket
p23538
tp23539
I1
s(g12670
I42
g12671
Vinsert
p23540
I34
VNumberLiteral: 21L
p23541
tp23542
I1
s(g9604
I42
g9605
Vinsert
p23543
I31
VMethodDeclaration
p23544
tp23545
F0.5
s(g3041
I42
g3042
Vinsert
p23546
I59
VVariableDeclarationFragment
p23547
tp23548
I1
s(g405
I42
g406
Vinsert
p23549
I32
VMethodInvocation
p23550
tp23551
I4
s(g1821
I42
g1822
Vinsert
p23552
I43
VSimpleType: Long
p23553
tp23554
F0.25
s(g7428
I42
g7429
Vinsert
p23555
I45
VStringLiteral: "service"
p23556
tp23557
I1
s(g1749
I42
g1750
Vinsert
p23558
I9
VBooleanLiteral: false
p23559
tp23560
I1
s(g1489
I42
g1490
Vinsert
p23561
I32
VMethodInvocation
p23562
tp23563
I1
s(g7627
I42
g7628
Vinsert
p23564
I83
VModifier: final
p23565
tp23566
I1
s(g1513
I42
g1514
Vinsert
p23567
I42
VSimpleName: first
p23568
tp23569
I1
s(g982
I42
g983
Vinsert
p23570
I80
VMemberValuePair
p23571
tp23572
F0.25
s(g209
I42
g210
Vinsert
p23573
I42
VSimpleName: callback
p23574
tp23575
I3
s(g2594
I42
g2595
Vinsert
p23576
I42
VSimpleName: SelectTraceIdsFromSpan
p23577
tp23578
I1
s(g497
I42
g498
Vinsert
p23579
I8
VBlock
p23580
tp23581
F1.25
s(g3818
I42
g3819
Vinsert
p23582
I59
VVariableDeclarationFragment
p23583
tp23584
I1
s(g186
I42
g187
Vinsert
p23585
I43
VSimpleType: ConsumerConfig
p23586
tp23587
F0.25
s(g10089
I42
g10090
Vinsert
p23588
I42
VSimpleName: value
p23589
tp23590
I1
s(g10770
I42
g10771
Vinsert
p23591
I42
VSimpleName: spanStore
p23592
tp23593
F0.25
s(g441
I42
g442
Vinsert
p23594
I42
VSimpleName: assertThat
p23595
tp23596
I1
s(g171
I42
g172
Vinsert
p23597
I78
VMarkerAnnotation
p23598
tp23599
F0.25
s(g3017
I42
g3018
Vinsert
p23600
I8
VBlock
p23601
tp23602
I1
s(g5831
I42
g5832
Vinsert
p23603
I42
VSimpleName: Field
p23604
tp23605
F0.25
s(g1385
I42
g1386
Vinsert
p23606
I74
VParameterizedType: ArrayList<>
p23607
tp23608
I1
s(g5720
I42
g5721
Vinsert
p23609
I42
VSimpleName: get
p23610
tp23611
I1
s(g2127
I42
g2128
Vinsert
p23612
I43
VSimpleType: Inet6Address
p23613
tp23614
I1
s(g3017
I42
g3018
Vinsert
p23615
I45
VStringLiteral: "over capacity"
p23616
tp23617
I1
s(g3186
I42
g3187
Vinsert
p23618
I42
VSimpleName: Span
p23619
tp23620
F0.25
s(g61
I42
g62
Vinsert
p23621
I8
VBlock
p23622
tp23623
I1
s(g7752
I42
g7753
Vinsert
p23624
I37
VPostfixExpression: ++
p23625
tp23626
I2
s(g3951
I42
g3952
Vinsert
p23627
I32
VMethodInvocation
p23628
tp23629
I12
s(g12441
I42
g12442
Vinsert
p23630
I42
VSimpleName: lowerHexToUnsignedLong
p23631
tp23632
I1
s(g6718
I42
g6719
Vinsert
p23633
I40
VQualifiedName: s.timestamp
p23634
tp23635
I1
s(g101
I42
g102
Vinsert
p23636
I59
VVariableDeclarationFragment
p23637
tp23638
F0.5
s(g1969
I42
g1970
Vinsert
p23639
I7
VAssignment: =
p23640
tp23641
I1
s(g1410
I42
g1411
Vinsert
p23642
I32
VMethodInvocation
p23643
tp23644
I1
s(g1894
I42
g1895
Vinsert
p23645
I43
VSimpleType: StorageComponent
p23646
tp23647
F0.25
s(g16828
I42
g16829
Vinsert
p23648
I32
VMethodInvocation
p23649
tp23650
I5
s(g2431
I42
g2432
Vinsert
p23651
I42
VSimpleName: links
p23652
tp23653
F1.25
s(g7366
I42
g7367
Vinsert
p23654
I42
VSimpleName: deps
p23655
tp23656
I1
s(g11825
I42
g11826
Vinsert
p23657
I42
VSimpleName: StringBuilder
p23658
tp23659
I4
s(g2896
I42
g2897
Vinsert
p23660
I27
VInfixExpression: ==
p23661
tp23662
I1
s(g9151
I42
g9152
Vinsert
p23663
I42
VSimpleName: decentErrorMessageOnMalformedInput_span
p23664
tp23665
F0.25
s(g9717
I42
g9718
Vinsert
p23666
I40
VQualifiedName: builder.password
p23667
tp23668
F0.25
s(Vinsert
p23669
I42
VSimpleName: newBuilder
p23670
Vinsert
p23671
I42
VSimpleName: toLowerHex
p23672
tp23673
F1.0
s(g12675
I42
g12676
Vinsert
p23674
I42
VSimpleName: System
p23675
tp23676
I1
s(g6050
I42
g6051
Vinsert
p23677
I42
VSimpleName: skew
p23678
tp23679
I1
s(g881
I42
g882
Vinsert
p23680
I21
VExpressionStatement
p23681
tp23682
I2
s(g10274
I42
g10275
Vinsert
p23683
I42
VSimpleName: getTraces
p23684
tp23685
F0.25
s(g914
I42
g915
Vinsert
p23686
I34
VNumberLiteral: 0
p23687
tp23688
F2.5
s(g5435
I42
g5436
Vinsert
p23689
I52
VThisExpression
p23690
tp23691
I1
s(g6699
I42
g6700
Vinsert
p23692
I59
VVariableDeclarationFragment
p23693
tp23694
I1
s(g12218
I42
g12219
Vinsert
p23695
I42
VSimpleName: hasNext
p23696
tp23697
I1
s(g13567
I42
g13568
Vinsert
p23698
I44
VSingleVariableDeclaration
p23699
tp23700
F0.25
s(g1212
I42
g1213
Vinsert
p23701
I42
VSimpleName: VoidListenableFuture
p23702
tp23703
I2
s(g1260
I42
g1261
Vinsert
p23704
I42
VSimpleName: ByteBuffer
p23705
tp23706
I1
s(g9867
I42
g9868
Vinsert
p23707
I7
VAssignment: =
p23708
tp23709
I1
s(g96
I42
g97
Vinsert
p23710
I45
VStringLiteral: "local"
p23711
tp23712
F0.25
s(g17848
I42
g17849
Vinsert
p23713
I43
VSimpleType: ZipkinCassandraStorageProperties
p23714
tp23715
F0.25
s(g5629
I42
g5630
Vinsert
p23716
I40
VQualifiedName: parts.length
p23717
tp23718
I2
s(g3541
I42
g3542
Vinsert
p23719
I8
VBlock
p23720
tp23721
I1
s(g5321
I42
g5322
Vinsert
p23722
I78
VMarkerAnnotation
p23723
tp23724
F0.75
s(g3588
I42
g3589
Vinsert
p23725
I40
VQualifiedName: Span.Builder
p23726
tp23727
I1
s(g7768
I42
g7769
Vinsert
p23728
I85
VDimension
p23729
tp23730
F0.25
s(g4301
I42
g4302
Vinsert
p23731
I32
VMethodInvocation
p23732
tp23733
I1
s(g7635
I42
g7636
Vinsert
p23734
I43
VSimpleType: String
p23735
tp23736
F0.25
s(g3217
I42
g3218
Vinsert
p23737
I45
VStringLiteral: "endpoint"
p23738
tp23739
I1
s(g1584
I42
g1585
Vinsert
p23740
I27
VInfixExpression: ==
p23741
tp23742
I1
s(g5053
I42
g5054
Vinsert
p23743
I42
VSimpleName: selectedEndTs
p23744
tp23745
I2
s(g2408
I42
g2409
Vinsert
p23746
I42
VSimpleName: ElasticsearchHttpStorage
p23747
tp23748
I1
s(g136
I42
g137
Vinsert
p23749
I59
VVariableDeclarationFragment
p23750
tp23751
I1
s(g5183
I42
g5184
Vinsert
p23752
I58
VVariableDeclarationExpression
p23753
tp23754
I2
s(g1202
I42
g1203
Vinsert
p23755
I42
VSimpleName: session
p23756
tp23757
I1
s(g2802
I42
g2803
Vinsert
p23758
I43
VSimpleType: IOException
p23759
tp23760
F0.25
s(g10392
I42
g10393
Vinsert
p23761
I42
VSimpleName: that
p23762
tp23763
F5.25
s(g274
I42
g275
Vinsert
p23764
I42
VSimpleName: length
p23765
tp23766
I1
s(g259
I42
g260
Vinsert
p23767
I42
VSimpleName: key
p23768
tp23769
F0.25
s(g5807
I42
g5808
Vinsert
p23770
I21
VExpressionStatement
p23771
tp23772
I1
s(Vinsert
p23773
I42
VSimpleName: get
p23774
Vinsert
p23775
I42
VSimpleName: isEmpty
p23776
tp23777
I1
s(g2740
I42
g2741
Vinsert
p23778
I74
VParameterizedType: Collection<T>
p23779
tp23780
F0.25
s(g2781
I42
g2782
Vinsert
p23781
I59
VVariableDeclarationFragment
p23782
tp23783
I5
s(g18018
I42
g18019
Vinsert
p23784
I40
VQualifiedName: ZipkinAdapters.SPAN_ADAPTER
p23785
tp23786
I1
s(g136
I42
g137
Vinsert
p23787
I42
VSimpleName: Ordering
p23788
tp23789
I2
s(g522
I42
g523
Vinsert
p23790
I45
VStringLiteral: "/sampleRate"
p23791
tp23792
F0.25
s(g7450
I42
g7451
Vinsert
p23793
I27
VInfixExpression: +
p23794
tp23795
I2
s(g744
I42
g745
Vinsert
p23796
I8
VBlock
p23797
tp23798
I1
s(g4848
I42
g4849
Vinsert
p23799
I42
VSimpleName: assertThat
p23800
tp23801
I3
s(g3767
I42
g3768
Vinsert
p23802
I59
VVariableDeclarationFragment
p23803
tp23804
I1
s(g2699
I42
g2700
Vinsert
p23805
I42
VSimpleName: url
p23806
tp23807
I1
s(g1123
I42
g1124
Vinsert
p23808
I8
VBlock
p23809
tp23810
I31
s(g4493
I42
g4494
Vinsert
p23811
I40
VQualifiedName: b.streams
p23812
tp23813
I1
s(Vinsert
p23814
I42
VSimpleName: clear
p23815
Vinsert
p23816
I42
VSimpleName: ScalaSpanStoreAdapter
p23817
tp23818
F0.25
s(g18689
I42
g18690
Vinsert
p23819
I43
VSimpleType: UndertowDeploymentInfoCustomizer
p23820
tp23821
F0.25
s(g13147
I42
g13148
Vinsert
p23822
I43
VSimpleType: String
p23823
tp23824
I1
s(g6407
I42
g6408
Vinsert
p23825
I59
VVariableDeclarationFragment
p23826
tp23827
I1
s(g9717
I42
g9718
Vinsert
p23828
I43
VSimpleType: Cluster
p23829
tp23830
F0.25
s(g3515
I42
g3516
Vinsert
p23831
I42
VSimpleName: input
p23832
tp23833
I1
s(g4673
I42
g4674
Vinsert
p23834
I78
VMarkerAnnotation
p23835
tp23836
F0.25
s(g3793
I42
g3794
Vinsert
p23837
I42
VSimpleName: ArrayList
p23838
tp23839
I5
s(g9706
I42
g9707
Vinsert
p23840
I42
VSimpleName: i
p23841
tp23842
I3
s(g7019
I42
g7020
Vinsert
p23843
I32
VMethodInvocation
p23844
tp23845
I3
s(g3380
I42
g3381
Vinsert
p23846
I32
VMethodInvocation
p23847
tp23848
F2.75
s(g16828
I42
g16829
Vinsert
p23849
I42
VSimpleName: getTrace_id
p23850
tp23851
I1
s(g2350
I42
g2351
Vinsert
p23852
I32
VMethodInvocation
p23853
tp23854
F18.25
s(g2278
I42
g2279
Vinsert
p23855
I42
VSimpleName: postSpansFromOrigin
p23856
tp23857
F0.25
s(g3335
I42
g3336
Vinsert
p23858
I42
VSimpleName: getLogger
p23859
tp23860
I1
s(g9889
I42
g9890
Vinsert
p23861
I59
VVariableDeclarationFragment
p23862
tp23863
I1
s(g466
I42
g467
Vinsert
p23864
I44
VSingleVariableDeclaration
p23865
tp23866
F0.25
s(g3438
I42
g3439
Vinsert
p23867
I42
VSimpleName: compute
p23868
tp23869
F0.25
s(g13736
I42
g13737
Vinsert
p23870
I40
VQualifiedName: ElasticsearchStorage.Builder
p23871
tp23872
F2.75
s(g254
I42
g255
Vinsert
p23873
I42
VSimpleName: asList
p23874
tp23875
I1
s(g8994
I42
g8995
Vinsert
p23876
I27
VInfixExpression: !=
p23877
tp23878
I1
s(g2085
I42
g2086
Vinsert
p23879
I42
VSimpleName: Override
p23880
tp23881
F0.25
s(g3155
I42
g3156
Vinsert
p23882
I42
VSimpleName: Long
p23883
tp23884
F0.25
s(g1136
I42
g1137
Vinsert
p23885
I42
VSimpleName: zipkin
p23886
tp23887
I1
s(g3046
I42
g3047
Vinsert
p23888
I43
VSimpleType: HttpLoggingInterceptor
p23889
tp23890
I1
s(g3438
I42
g3439
Vinsert
p23891
I31
VMethodDeclaration
p23892
tp23893
F0.25
s(g3767
I42
g3768
Vinsert
p23894
I42
VSimpleName: Span
p23895
tp23896
I2
s(g608
I42
g609
Vinsert
p23897
I8
VBlock
p23898
tp23899
I1
s(g2000
I42
g2001
Vinsert
p23900
I27
VInfixExpression: ==
p23901
tp23902
F4.25
s(g1428
I42
g1429
Vinsert
p23903
I42
VSimpleName: lenientSearch
p23904
tp23905
I1
s(g831
I42
g832
Vinsert
p23906
I42
VSimpleName: ImmutableSetMultimap
p23907
tp23908
I1
s(g8688
I42
g8689
Vinsert
p23909
I43
VSimpleType: HttpSpanStore
p23910
tp23911
I2
s(g11075
I42
g11076
Vinsert
p23912
I42
VSimpleName: trace
p23913
tp23914
F0.5
s(g4690
I42
g4691
Vinsert
p23915
I42
VSimpleName: callCount
p23916
tp23917
I1
s(g2383
I42
g2384
Vinsert
p23918
I42
VSimpleName: Class
p23919
tp23920
F0.5
s(g4301
I42
g4302
Vinsert
p23921
I40
VQualifiedName: currentSpan.kind
p23922
tp23923
I1
s(g646
I42
g647
Vinsert
p23924
I60
VVariableDeclarationStatement
p23925
tp23926
F3.25
s(g15097
I42
g15098
Vinsert
p23927
I21
VExpressionStatement
p23928
tp23929
I1
s(g3372
I42
g3373
Vinsert
p23930
I40
VQualifiedName: parentSpan.id
p23931
tp23932
I2
s(g12441
I42
g12442
Vinsert
p23933
I32
VMethodInvocation
p23934
tp23935
F30.25
s(g9244
I42
g9245
Vinsert
p23936
I8
VBlock
p23937
tp23938
I1
s(g3233
I42
g3234
Vinsert
p23939
I42
VSimpleName: delegate
p23940
tp23941
F1.25
s(g3636
I42
g3637
Vinsert
p23942
I34
VNumberLiteral: 1234L
p23943
tp23944
I2
s(g8677
I42
g8678
Vinsert
p23945
I40
VQualifiedName: ElasticsearchStorage.Builder
p23946
tp23947
I1
s(g997
I42
g998
Vinsert
p23948
I42
VSimpleName: out
p23949
tp23950
I2
s(g5515
I42
g5516
Vinsert
p23951
I45
VStringLiteral: "%016x"
p23952
tp23953
I1
s(g1790
I42
g1791
Vinsert
p23954
I59
VVariableDeclarationFragment
p23955
tp23956
I1
s(g20734
I42
g20735
Vinsert
p23957
I41
VReturnStatement
p23958
tp23959
I1
s(g3552
I42
g3553
Vinsert
p23960
I42
VSimpleName: String
p23961
tp23962
I1
s(g2936
I42
g2937
Vinsert
p23963
I32
VMethodInvocation
p23964
tp23965
I2
s(g977
I42
g978
Vinsert
p23966
I21
VExpressionStatement
p23967
tp23968
I1
s(g4568
I42
g4569
Vinsert
p23969
I42
VSimpleName: Aggregation
p23970
tp23971
F0.25
s(g12441
I42
g12442
Vinsert
p23972
I42
VSimpleName: traceId
p23973
tp23974
I9
s(g5812
I42
g5813
Vinsert
p23975
I42
VSimpleName: dataRetrieved
p23976
tp23977
F0.25
s(g1428
I42
g1429
Vinsert
p23978
I40
VQualifiedName: request.type
p23979
tp23980
I1
s(g461
I42
g462
Vinsert
p23981
I74
VParameterizedType: List<ByteBuffer>
p23982
tp23983
I1
s(g2823
I42
g2824
Vinsert
p23984
I37
VPostfixExpression: ++
p23985
tp23986
I1
s(g136
I42
g137
Vinsert
p23987
I74
VParameterizedType: List<Span>
p23988
tp23989
I1
s(g5528
I42
g5529
Vinsert
p23990
I40
VQualifiedName: field.type
p23991
tp23992
I2
s(g13167
I42
g13168
Vinsert
p23993
I32
VMethodInvocation
p23994
tp23995
I8
s(g436
I42
g437
Vinsert
p23996
I42
VSimpleName: Set
p23997
tp23998
I1
s(g689
I42
g690
Vinsert
p23999
I42
VSimpleName: LinkedHashSet
p24000
tp24001
I1
s(g11191
I42
g11192
Vinsert
p24002
I27
VInfixExpression: ==
p24003
tp24004
I2
s(g12883
I42
g12884
Vinsert
p24005
I43
VSimpleType: Map
p24006
tp24007
I1
s(g6426
I42
g6427
Vinsert
p24008
I74
VParameterizedType: Promise<S>
p24009
tp24010
I1
s(g3454
I42
g3455
Vinsert
p24011
I43
VSimpleType: Set
p24012
tp24013
I1
s(g372
I42
g373
Vinsert
p24014
I42
VSimpleName: addComponent
p24015
tp24016
F0.25
s(g2033
I42
g2034
Vinsert
p24017
I45
VStringLiteral: "      }\u005cn"
p24018
tp24019
I1
s(g6145
I42
g6146
Vinsert
p24020
I59
VVariableDeclarationFragment
p24021
tp24022
I3
s(g1594
I42
g1595
Vinsert
p24023
I59
VVariableDeclarationFragment
p24024
tp24025
I2
s(g234
I42
g235
Vinsert
p24026
I32
VMethodInvocation
p24027
tp24028
I6
s(g1607
I42
g1608
Vinsert
p24029
I42
VSimpleName: spans
p24030
tp24031
I1
s(g9502
I42
g9503
Vinsert
p24032
I43
VSimpleType: IllegalArgumentException
p24033
tp24034
F0.25
s(g13147
I42
g13148
Vinsert
p24035
I70
VEnhancedForStatement
p24036
tp24037
I1
s(g319
I42
g320
Vinsert
p24038
I43
VSimpleType: IOException
p24039
tp24040
F0.25
s(g3525
I42
g3526
Vinsert
p24041
I45
VStringLiteral: "links"
p24042
tp24043
I1
s(g719
I42
g720
Vinsert
p24044
I39
VPrimitiveType: void
p24045
tp24046
F1.5
s(g9717
I42
g9718
Vinsert
p24047
I40
VQualifiedName: Cluster.Builder
p24048
tp24049
I1
s(g8611
I42
g8612
Vinsert
p24050
I42
VSimpleName: post
p24051
tp24052
I1
s(g51
I42
g52
Vinsert
p24053
I14
VClassInstanceCreation
p24054
tp24055
I2
s(g13147
I42
g13148
Vinsert
p24056
I42
VSimpleName: span
p24057
tp24058
I1
s(g11075
I42
g11076
Vinsert
p24059
I45
VStringLiteral: "a"
p24060
tp24061
I5
s(g734
I42
g735
Vinsert
p24062
I43
VSimpleType: ConfigurableListableBeanFactory
p24063
tp24064
I1
s(g4983
I42
g4984
Vinsert
p24065
I43
VSimpleType: BinaryAnnotation
p24066
tp24067
F0.25
s(g3199
I42
g3200
Vinsert
p24068
I74
VParameterizedType: Consumer<List<Span>>
p24069
tp24070
F0.25
s(g1428
I42
g1429
Vinsert
p24071
I42
VSimpleName: searchRequest
p24072
tp24073
I1
s(g3222
I42
g3223
Vinsert
p24074
I27
VInfixExpression: <=
p24075
tp24076
I1
s(g4908
I42
g4909
Vinsert
p24077
I7
VAssignment: =
p24078
tp24079
I3
s(g2712
I42
g2713
Vinsert
p24080
I43
VSimpleType: MockResponse
p24081
tp24082
I1
s(g456
I42
g457
Vinsert
p24083
I42
VSimpleName: IOException
p24084
tp24085
I1
s(g19654
I42
g19655
Vinsert
p24086
I39
VPrimitiveType: void
p24087
tp24088
F0.75
s(g3828
I42
g3829
Vinsert
p24089
I23
VFieldDeclaration
p24090
tp24091
I2
s(g9791
I42
g9792
Vinsert
p24092
I14
VClassInstanceCreation
p24093
tp24094
I1
s(g3417
I42
g3418
Vinsert
p24095
I8
VBlock
p24096
tp24097
I1
s(g181
I42
g182
Vinsert
p24098
I60
VVariableDeclarationStatement
p24099
tp24100
I8
s(g13167
I42
g13168
Vinsert
p24101
I21
VExpressionStatement
p24102
tp24103
I2
s(g7423
I42
g7424
Vinsert
p24104
I43
VSimpleType: Callback
p24105
tp24106
F0.25
s(g4293
I42
g4294
Vinsert
p24107
I60
VVariableDeclarationStatement
p24108
tp24109
I1
s(g6536
I42
g6537
Vinsert
p24110
I42
VSimpleName: append
p24111
tp24112
I1
s(g1995
I42
g1996
Vinsert
p24113
I39
VPrimitiveType: void
p24114
tp24115
F0.25
s(g2647
I42
g2648
Vinsert
p24116
I22
VFieldAccess
p24117
tp24118
I2
s(Vinsert
p24119
I42
VSimpleName: get
p24120
Vinsert
p24121
I40
VQualifiedName: annotation.endpoint.ipv6
p24122
tp24123
I1
s(g7019
I42
g7020
Vinsert
p24124
I44
VSingleVariableDeclaration
p24125
tp24126
F0.5
s(g6071
I42
g6072
Vinsert
p24127
I34
VNumberLiteral: 0
p24128
tp24129
I1
s(g4016
I42
g4017
Vinsert
p24130
I83
VModifier: public
p24131
tp24132
F0.5
s(g674
I42
g675
Vinsert
p24133
I43
VSimpleType: LazyClient
p24134
tp24135
I2
s(g13567
I42
g13568
Vinsert
p24136
I42
VSimpleName: span
p24137
tp24138
F0.25
s(g4077
I42
g4078
Vinsert
p24139
I33
VNullLiteral
p24140
tp24141
I4
s(g1390
I42
g1391
Vinsert
p24142
I52
VThisExpression
p24143
tp24144
F1.0
s(g2005
I42
g2006
Vinsert
p24145
I42
VSimpleName: result
p24146
tp24147
I1
s(g319
I42
g320
Vinsert
p24148
I42
VSimpleName: JsonReader
p24149
tp24150
F0.25
s(Vinsert
p24151
I42
VSimpleName: getRawTrace
p24152
Vinsert
p24153
I42
VSimpleName: store
p24154
tp24155
I1
s(g552
I42
g553
Vinsert
p24156
I42
VSimpleName: i
p24157
tp24158
I4
s(g8152
I42
g8153
Vinsert
p24159
I8
VBlock
p24160
tp24161
F1.25
s(g7533
I42
g7534
Vinsert
p24162
I42
VSimpleName: spy
p24163
tp24164
I1
s(g239
I42
g240
Vinsert
p24165
I78
VMarkerAnnotation
p24166
tp24167
F0.75
s(g7112
I42
g7113
Vinsert
p24168
I57
VTypeLiteral
p24169
tp24170
I5
s(g4539
I42
g4540
Vinsert
p24171
I42
VSimpleName: CallbackCaptor
p24172
tp24173
I2
s(g3307
I42
g3308
Vinsert
p24174
I42
VSimpleName: traceIdHigh
p24175
tp24176
F1.25
s(g7913
I42
g7914
Vinsert
p24177
I34
VNumberLiteral: 0
p24178
tp24179
I2
s(g12407
I42
g12408
Vinsert
p24180
I43
VSimpleType: zipkin.storage.SpanStoreTest
p24181
tp24182
F0.25
s(g2763
I42
g2764
Vinsert
p24183
I42
VSimpleName: compute
p24184
tp24185
F0.5
s(g3318
I42
g3319
Vinsert
p24186
I42
VSimpleName: array
p24187
tp24188
I1
s(g2459
I42
g2460
Vinsert
p24189
I42
VSimpleName: Test
p24190
tp24191
F0.25
s(g1227
I42
g1228
Vinsert
p24192
I42
VSimpleName: newSession
p24193
tp24194
I1
s(g2038
I42
g2039
Vinsert
p24195
I52
VThisExpression
p24196
tp24197
F0.25
s(g9579
I42
g9580
Vinsert
p24198
I45
VStringLiteral: "/"
p24199
tp24200
I2
s(g2103
I42
g2104
Vinsert
p24201
I25
VIfStatement
p24202
tp24203
I15
s(g2187
I42
g2188
Vinsert
p24204
I59
VVariableDeclarationFragment
p24205
tp24206
I1
s(g5481
I42
g5482
Vinsert
p24207
I43
VSimpleType: ScalaSpanStoreAdapter
p24208
tp24209
I4
s(g3041
I42
g3042
Vinsert
p24210
I43
VSimpleType: InsertServiceSpan.Factory
p24211
tp24212
I2
s(g19654
I42
g19655
Vinsert
p24213
I52
VThisExpression
p24214
tp24215
F0.75
s(g2135
I42
g2136
Vinsert
p24216
I40
VQualifiedName: CassandraStorage.Builder
p24217
tp24218
F0.25
s(g934
I42
g935
Vinsert
p24219
I39
VPrimitiveType: char
p24220
tp24221
I1
s(g3072
I42
g3073
Vinsert
p24222
I42
VSimpleName: SpanStore
p24223
tp24224
F0.25
s(g13308
I42
g13309
Vinsert
p24225
I42
VSimpleName: result
p24226
tp24227
I2
s(g6745
I42
g6746
Vinsert
p24228
I43
VSimpleType: List
p24229
tp24230
I1
s(g1443
I42
g1444
Vinsert
p24231
I43
VSimpleType: TimeUnit
p24232
tp24233
F0.25
s(g3933
I42
g3934
Vinsert
p24234
I66
VTextElement: Visible for testing 
p24235
tp24236
F0.25
s(g3974
I42
g3975
Vinsert
p24237
I42
VSimpleName: assertThat
p24238
tp24239
I3
s(g778
I42
g779
Vinsert
p24240
I42
VSimpleName: traceIdToSpans
p24241
tp24242
I1
s(g2614
I42
g2615
Vinsert
p24243
I8
VBlock
p24244
tp24245
I2
s(g1777
I42
g1778
Vinsert
p24246
I59
VVariableDeclarationFragment
p24247
tp24248
I2
s(g10474
I42
g10475
Vinsert
p24249
I42
VSimpleName: value
p24250
tp24251
I1
s(g5938
I42
g5939
Vinsert
p24252
I39
VPrimitiveType: int
p24253
tp24254
F0.25
s(g2712
I42
g2713
Vinsert
p24255
I8
VBlock
p24256
tp24257
I1
s(g8842
I42
g8843
Vinsert
p24258
I54
VTryStatement
p24259
tp24260
I1
s(g8751
I42
g8752
Vinsert
p24261
I79
VSingleMemberAnnotation
p24262
tp24263
F0.25
s(g3168
I42
g3169
Vinsert
p24264
I74
VParameterizedType: Map<String,String>
p24265
tp24266
I1
s(g6371
I42
g6372
Vinsert
p24267
I43
VSimpleType: Runnable
p24268
tp24269
F0.75
s(g2574
I42
g2575
Vinsert
p24270
I42
VSimpleName: Long
p24271
tp24272
F0.25
s(g9817
I42
g9818
Vinsert
p24273
I42
VSimpleName: traceIds
p24274
tp24275
I1
s(g1693
I42
g1694
Vinsert
p24276
I32
VMethodInvocation
p24277
tp24278
I3
s(g24151
I42
g24152
Vinsert
p24279
I42
VSimpleName: span1
p24280
tp24281
I2
s(g10204
I42
g10205
Vinsert
p24282
I42
VSimpleName: trace2
p24283
tp24284
I1
s(g2991
I42
g2992
Vinsert
p24285
I43
VSimpleType: OkHttpClient
p24286
tp24287
I1
s(g876
I42
g877
Vinsert
p24288
I59
VVariableDeclarationFragment
p24289
tp24290
F0.25
s(g7482
I42
g7483
Vinsert
p24291
I42
VSimpleName: lookback
p24292
tp24293
F0.25
s(g11397
I42
g11398
Vinsert
p24294
I42
VSimpleName: method
p24295
tp24296
I1
s(g14755
I42
g14756
Vinsert
p24297
I42
VSimpleName: getExposedPorts
p24298
tp24299
I1
s(g314
I42
g315
Vinsert
p24300
I42
VSimpleName: request
p24301
tp24302
I2
s(g9867
I42
g9868
Vinsert
p24303
I14
VClassInstanceCreation
p24304
tp24305
I1
s(g171
I42
g172
Vinsert
p24306
I42
VSimpleName: Before
p24307
tp24308
F0.25
s(g274
I42
g275
Vinsert
p24309
I8
VBlock
p24310
tp24311
I1
s(g2174
I42
g2175
Vinsert
p24312
I42
VSimpleName: ObjectStreamException
p24313
tp24314
F0.25
s(g3740
I42
g3741
Vinsert
p24315
I42
VSimpleName: Test
p24316
tp24317
F0.25
s(g5098
I42
g5099
Vinsert
p24318
I40
VQualifiedName: traceId.hi
p24319
tp24320
I1
s(g10732
I42
g10733
Vinsert
p24321
I43
VSimpleType: CorsConfiguration
p24322
tp24323
I2
s(g2135
I42
g2136
Vinsert
p24324
I41
VReturnStatement
p24325
tp24326
F5.25
s(g8652
I42
g8653
Vinsert
p24327
I45
VStringLiteral: "ES_JAVA_OPTS"
p24328
tp24329
I1
s(g7423
I42
g7424
Vinsert
p24330
I42
VSimpleName: callback
p24331
tp24332
F0.25
s(g14635
I42
g14636
Vinsert
p24333
I40
VQualifiedName: that.trace_id
p24334
tp24335
I1
s(g1709
I42
g1710
Vinsert
p24336
I32
VMethodInvocation
p24337
tp24338
F5.25
s(g5634
I42
g5635
Vinsert
p24339
I42
VSimpleName: allIndices
p24340
tp24341
F1.25
s(g4446
I42
g4447
Vinsert
p24342
I42
VSimpleName: JsonReader
p24343
tp24344
I1
s(g886
I42
g887
Vinsert
p24345
I42
VSimpleName: list
p24346
tp24347
I2
s(g12399
I42
g12400
Vinsert
p24348
I14
VClassInstanceCreation
p24349
tp24350
I12
s(g876
I42
g877
Vinsert
p24351
I42
VSimpleName: name
p24352
tp24353
I1
s(g15097
I42
g15098
Vinsert
p24354
I43
VSimpleType: BoolQueryBuilder
p24355
tp24356
I1
s(g10158
I42
g10159
Vinsert
p24357
I40
VQualifiedName: args.traceId
p24358
tp24359
I1
s(g4085
I42
g4086
Vinsert
p24360
I42
VSimpleName: Math
p24361
tp24362
I2
s(g5090
I42
g5091
Vinsert
p24363
I23
VFieldDeclaration
p24364
tp24365
F0.25
s(g891
I42
g892
Vinsert
p24366
I42
VSimpleName: Pair
p24367
tp24368
I1
s(g224
I42
g225
Vinsert
p24369
I27
VInfixExpression: !=
p24370
tp24371
I1
s(g6071
I42
g6072
Vinsert
p24372
I59
VVariableDeclarationFragment
p24373
tp24374
I1
s(g6781
I42
g6782
Vinsert
p24375
I42
VSimpleName: Session
p24376
tp24377
I1
s(g3443
I42
g3444
Vinsert
p24378
I42
VSimpleName: acceptSpans
p24379
tp24380
I1
s(g2156
I42
g2157
Vinsert
p24381
I42
VSimpleName: size
p24382
tp24383
I1
s(g7897
I42
g7898
Vinsert
p24384
I42
VSimpleName: callback
p24385
tp24386
F0.75
s(g6707
I42
g6708
Vinsert
p24387
I42
VSimpleName: links
p24388
tp24389
I2
s(g131
I42
g132
Vinsert
p24390
I42
VSimpleName: StoreSpansCall
p24391
tp24392
I2
s(g8258
I42
g8259
Vinsert
p24393
I14
VClassInstanceCreation
p24394
tp24395
I1
s(g3485
I42
g3486
Vinsert
p24396
I45
VStringLiteral: "}"
p24397
tp24398
I1
s(g18689
I42
g18690
Vinsert
p24399
I42
VSimpleName: httpRequestDurationCustomizer
p24400
tp24401
F1.25
s(g8522
I42
g8523
Vinsert
p24402
I42
VSimpleName: spans
p24403
tp24404
I2
s(g14825
I42
g14826
Vinsert
p24405
I34
VNumberLiteral: 0
p24406
tp24407
I1
s(g3372
I42
g3373
Vinsert
p24408
I45
VStringLiteral: "span"
p24409
tp24410
I1
s(g2464
I42
g2465
Vinsert
p24411
I43
VSimpleType: IOException
p24412
tp24413
I1
s(Vinsert
p24414
I42
VSimpleName: register
p24415
Vinsert
p24416
I45
VStringLiteral: "zipkin.collector.kafka.zookeeper:localhost"
p24417
tp24418
I1
s(g6699
I42
g6700
Vinsert
p24419
I42
VSimpleName: storeRatePath
p24420
tp24421
I1
s(g461
I42
g462
Vinsert
p24422
I43
VSimpleType: ByteBuffer
p24423
tp24424
I1
s(g3636
I42
g3637
Vinsert
p24425
I42
VSimpleName: newSpan
p24426
tp24427
I1
s(g891
I42
g892
Vinsert
p24428
I43
VSimpleType: PartitionKeyToTraceId
p24429
tp24430
I1
s(g6781
I42
g6782
Vinsert
p24431
I42
VSimpleName: register
p24432
tp24433
I1
s(g11825
I42
g11826
Vinsert
p24434
I43
VSimpleType: StringBuilder
p24435
tp24436
I4
s(g6658
I42
g6659
Vinsert
p24437
I32
VMethodInvocation
p24438
tp24439
I5
s(g10274
I42
g10275
Vinsert
p24440
I74
VParameterizedType: Call<List<String>>
p24441
tp24442
F0.25
s(g36
I42
g37
Vinsert
p24443
I42
VSimpleName: of
p24444
tp24445
I1
s(g3094
I42
g3095
Vinsert
p24446
I41
VReturnStatement
p24447
tp24448
F3.25
s(g11463
I42
g11464
Vinsert
p24449
I43
VSimpleType: BodyConverter
p24450
tp24451
I1
s(g949
I42
g950
Vinsert
p24452
I32
VMethodInvocation
p24453
tp24454
I1
s(g5897
I42
g5898
Vinsert
p24455
I42
VSimpleName: spanStore
p24456
tp24457
F0.25
s(g613
I42
g614
Vinsert
p24458
I43
VSimpleType: Span2Component
p24459
tp24460
F0.25
s(g131
I42
g132
Vinsert
p24461
I11
VCastExpression
p24462
tp24463
I1
s(g2619
I42
g2620
Vinsert
p24464
I42
VSimpleName: collectValuesNamed_mergesArrays
p24465
tp24466
F0.5
s(g3859
I42
g3860
Vinsert
p24467
I14
VClassInstanceCreation
p24468
tp24469
F0.25
s(g5831
I42
g5832
Vinsert
p24470
I43
VSimpleType: Field
p24471
tp24472
F0.25
s(g4415
I42
g4416
Vinsert
p24473
I43
VSimpleType: TDeserializer
p24474
tp24475
I1
s(g6231
I42
g6232
Vinsert
p24476
I42
VSimpleName: KafkaCollector
p24477
tp24478
F0.5
s(g2237
I42
g2238
Vinsert
p24479
I60
VVariableDeclarationStatement
p24480
tp24481
I3
s(g1351
I42
g1352
Vinsert
p24482
I45
VStringLiteral: "invalid port 65536"
p24483
tp24484
I1
s(g3168
I42
g3169
Vinsert
p24485
I42
VSimpleName: tracesCompaction
p24486
tp24487
I1
s(g1541
I42
g1542
Vinsert
p24488
I42
VSimpleName: insertSpan
p24489
tp24490
F0.5
s(g7331
I42
g7332
Vinsert
p24491
I42
VSimpleName: response
p24492
tp24493
F2.25
s(g552
I42
g553
Vinsert
p24494
I40
VQualifiedName: TestObjects.LOTS_OF_SPANS
p24495
tp24496
I4
s(g5533
I42
g5534
Vinsert
p24497
I83
VModifier: public
p24498
tp24499
F0.25
s(Vinsert
p24500
I42
VSimpleName: create
p24501
Vinsert
p24502
I42
VSimpleName: addBinaryAnnotation
p24503
tp24504
I2
s(g13567
I42
g13568
Vinsert
p24505
I16
VConditionalExpression
p24506
tp24507
I1
s(g2028
I42
g2029
Vinsert
p24508
I22
VFieldAccess
p24509
tp24510
F2.25
s(g8392
I42
g8393
Vinsert
p24511
I45
VStringLiteral: "1"
p24512
tp24513
I2
s(g4306
I42
g4307
Vinsert
p24514
I27
VInfixExpression: ==
p24515
tp24516
I1
s(g3565
I42
g3566
Vinsert
p24517
I43
VSimpleType: Span
p24518
tp24519
I1
s(g3046
I42
g3047
Vinsert
p24520
I42
VSimpleName: getName
p24521
tp24522
I1
s(g479
I42
g480
Vinsert
p24523
I43
VSimpleType: String
p24524
tp24525
F0.25
s(g9791
I42
g9792
Vinsert
p24526
I43
VSimpleType: ZipkinKafkaCollectorProperties
p24527
tp24528
I2
s(g11012
I42
g11013
Vinsert
p24529
I36
VParenthesizedExpression
p24530
tp24531
I2
s(g2103
I42
g2104
Vinsert
p24532
I27
VInfixExpression: +
p24533
tp24534
I1
s(g7380
I42
g7381
Vinsert
p24535
I42
VSimpleName: consumer
p24536
tp24537
F0.5
s(g6342
I42
g6343
Vinsert
p24538
I42
VSimpleName: Rule
p24539
tp24540
F0.25
s(g6699
I42
g6700
Vinsert
p24541
I43
VSimpleType: GroupMember
p24542
tp24543
I2
s(g3094
I42
g3095
Vinsert
p24544
I42
VSimpleName: DependencyLink
p24545
tp24546
F0.25
s(g6454
I42
g6455
Vinsert
p24547
I42
VSimpleName: nextLong
p24548
tp24549
I1
s(g7091
I42
g7092
Vinsert
p24550
I40
VQualifiedName: TestObjects.TRACE
p24551
tp24552
I1
s(g2794
I42
g2795
Vinsert
p24553
I39
VPrimitiveType: void
p24554
tp24555
F1.25
s(g3793
I42
g3794
Vinsert
p24556
I43
VSimpleType: List
p24557
tp24558
I7
s(g1528
I42
g1529
Vinsert
p24559
I42
VSimpleName: bound
p24560
tp24561
F2.25
s(g856
I42
g857
Vinsert
p24562
I21
VExpressionStatement
p24563
tp24564
I1
s(g2896
I42
g2897
Vinsert
p24565
I83
VModifier: final
p24566
tp24567
F0.25
s(g2870
I42
g2871
Vinsert
p24568
I42
VSimpleName: assertThat
p24569
tp24570
I1
s(g2689
I42
g2690
Vinsert
p24571
I14
VClassInstanceCreation
p24572
tp24573
F1.25
s(g1074
I42
g1075
Vinsert
p24574
I43
VSimpleType: Span2
p24575
tp24576
I1
s(g10369
I42
g10370
Vinsert
p24577
I23
VFieldDeclaration
p24578
tp24579
I1
s(g3258
I42
g3259
Vinsert
p24580
I83
VModifier: final
p24581
tp24582
F0.5
s(g11833
I42
g11834
Vinsert
p24583
I45
VStringLiteral: "endpoint_service_name"
p24584
tp24585
I1
s(g7646
I42
g7647
Vinsert
p24586
I43
VSimpleType: TraceIdSamplerTest
p24587
tp24588
F0.5
s(g4639
I42
g4640
Vinsert
p24589
I8
VBlock
p24590
tp24591
I1
s(g8978
I42
g8979
Vinsert
p24592
I36
VParenthesizedExpression
p24593
tp24594
I2
s(g1816
I42
g1817
Vinsert
p24595
I42
VSimpleName: DSL
p24596
tp24597
I1
s(g1851
I42
g1852
Vinsert
p24598
I59
VVariableDeclarationFragment
p24599
tp24600
I2
s(g106
I42
g107
Vinsert
p24601
I42
VSimpleName: RetryDecision
p24602
tp24603
F0.25
s(g181
I42
g182
Vinsert
p24604
I78
VMarkerAnnotation
p24605
tp24606
F1.5
s(g1995
I42
g1996
Vinsert
p24607
I42
VSimpleName: UncheckedIOException
p24608
tp24609
F0.25
s(g1405
I42
g1406
Vinsert
p24610
I42
VSimpleName: NullPointerException
p24611
tp24612
I1
s(g4187
I42
g4188
Vinsert
p24613
I8
VBlock
p24614
tp24615
I2
s(g613
I42
g614
Vinsert
p24616
I42
VSimpleName: asyncSpanConsumer
p24617
tp24618
F0.25
s(g3136
I42
g3137
Vinsert
p24619
I42
VSimpleName: ipv6
p24620
tp24621
I1
s(g846
I42
g847
Vinsert
p24622
I42
VSimpleName: bucketedTraceIdInputs
p24623
tp24624
I1
s(g9615
I42
g9616
Vinsert
p24625
I45
VStringLiteral: "should"
p24626
tp24627
F0.25
s(g1831
I42
g1832
Vinsert
p24628
I42
VSimpleName: toURL
p24629
tp24630
I1
s(g5603
I42
g5604
Vinsert
p24631
I42
VSimpleName: getenv
p24632
tp24633
I1
s(g5616
I42
g5617
Vinsert
p24634
I34
VNumberLiteral: 2L
p24635
tp24636
I1
s(g1415
I42
g1416
Vinsert
p24637
I42
VSimpleName: DependencyLink
p24638
tp24639
I2
s(g6471
I42
g6472
Vinsert
p24640
I76
VWildcardType: ?
p24641
tp24642
I1
s(g6718
I42
g6719
Vinsert
p24643
I40
VQualifiedName: s.traceId
p24644
tp24645
I1
s(g2090
I42
g2091
Vinsert
p24646
I42
VSimpleName: Callback
p24647
tp24648
I1
s(g1574
I42
g1575
Vinsert
p24649
I22
VFieldAccess
p24650
tp24651
F0.5
s(g3353
I42
g3354
Vinsert
p24652
I42
VSimpleName: missingValue
p24653
tp24654
F0.25
s(g1959
I42
g1960
Vinsert
p24655
I42
VSimpleName: ZipkinElasticsearchStorageJestAutoConfiguration
p24656
tp24657
I1
s(g3380
I42
g3381
Vinsert
p24658
I42
VSimpleName: Futures
p24659
tp24660
I2
s(g7502
I42
g7503
Vinsert
p24661
I42
VSimpleName: sampler
p24662
tp24663
I1
s(g1377
I42
g1378
Vinsert
p24664
I34
VNumberLiteral: 3
p24665
tp24666
I3
s(g7654
I42
g7655
Vinsert
p24667
I31
VMethodDeclaration
p24668
tp24669
F3.25
s(g3427
I42
g3428
Vinsert
p24670
I42
VSimpleName: Platform
p24671
tp24672
I1
s(g4451
I42
g4452
Vinsert
p24673
I42
VSimpleName: getQueryOptions
p24674
tp24675
F0.25
s(g562
I42
g563
Vinsert
p24676
I53
VThrowStatement
p24677
tp24678
I13
s(g3979
I42
g3980
Vinsert
p24679
I42
VSimpleName: delegate
p24680
tp24681
I1
s(g6508
I42
g6509
Vinsert
p24682
I42
VSimpleName: fromSpan
p24683
tp24684
I1
s(g3867
I42
g3868
Vinsert
p24685
I42
VSimpleName: create
p24686
tp24687
F0.25
s(g9174
I42
g9175
Vinsert
p24688
I42
VSimpleName: LinkedHashMap
p24689
tp24690
I2
s(g3222
I42
g3223
Vinsert
p24691
I42
VSimpleName: indices
p24692
tp24693
I1
s(g2454
I42
g2455
Vinsert
p24694
I74
VParameterizedType: List<Span>
p24695
tp24696
F0.25
s(g8677
I42
g8678
Vinsert
p24697
I60
VVariableDeclarationStatement
p24698
tp24699
I2
s(g5205
I42
g5206
Vinsert
p24700
I42
VSimpleName: serviceName
p24701
tp24702
F0.25
s(g2260
I42
g2261
Vinsert
p24703
I43
VSimpleType: Builder
p24704
tp24705
F0.25
s(g6552
I42
g6553
Vinsert
p24706
I45
VStringLiteral: "big"
p24707
tp24708
I1
s(g8652
I42
g8653
Vinsert
p24709
I21
VExpressionStatement
p24710
tp24711
F0.25
s(g3833
I42
g3834
Vinsert
p24712
I43
VSimpleType: Response
p24713
tp24714
I1
s(g3168
I42
g3169
Vinsert
p24715
I43
VSimpleType: String
p24716
tp24717
I2
s(g2304
I42
g2305
Vinsert
p24718
I42
VSimpleName: ZipkinElasticsearchHttpStorageProperties
p24719
tp24720
I1
s(g4840
I42
g4841
Vinsert
p24721
I21
VExpressionStatement
p24722
tp24723
F0.25
s(g5746
I42
g5747
Vinsert
p24724
I42
VSimpleName: context
p24725
tp24726
I10
s(g1836
I42
g1837
Vinsert
p24727
I42
VSimpleName: isEqualTo
p24728
tp24729
I2
s(g13308
I42
g13309
Vinsert
p24730
I8
VBlock
p24731
tp24732
I1
s(g3393
I42
g3394
Vinsert
p24733
I32
VMethodInvocation
p24734
tp24735
I10
s(g1058
I42
g1059
Vinsert
p24736
I45
VStringLiteral: "input.service"
p24737
tp24738
F0.25
s(g5386
I42
g5387
Vinsert
p24739
I12
VCatchClause
p24740
tp24741
I1
s(g8397
I42
g8398
Vinsert
p24742
I42
VSimpleName: versionSpecificTemplate
p24743
tp24744
F0.25
s(g2699
I42
g2700
Vinsert
p24745
I27
VInfixExpression: +
p24746
tp24747
I1
s(g4293
I42
g4294
Vinsert
p24748
I42
VSimpleName: spanBytes
p24749
tp24750
I1
s(g1556
I42
g1557
Vinsert
p24751
I42
VSimpleName: createField
p24752
tp24753
I3
s(g6342
I42
g6343
Vinsert
p24754
I43
VSimpleType: TestName
p24755
tp24756
F0.5
s(g410
I42
g411
Vinsert
p24757
I34
VNumberLiteral: 0
p24758
tp24759
I1
s(g6363
I42
g6364
Vinsert
p24760
I42
VSimpleName: isEmpty
p24761
tp24762
I5
s(g5505
I42
g5506
Vinsert
p24763
I42
VSimpleName: bytesWritten
p24764
tp24765
I4
s(g3353
I42
g3354
Vinsert
p24766
I42
VSimpleName: getBytes
p24767
tp24768
F0.25
s(g17313
I42
g17314
Vinsert
p24769
I40
VQualifiedName: BytesDecoder.JSON
p24770
tp24771
F0.25
s(g1443
I42
g1444
Vinsert
p24772
I42
VSimpleName: TimeUnit
p24773
tp24774
F0.25
s(g3772
I42
g3773
Vinsert
p24775
I43
VSimpleType: KafkaCollector
p24776
tp24777
F0.25
s(g1007
I42
g1008
Vinsert
p24778
I14
VClassInstanceCreation
p24779
tp24780
I1
s(g1332
I42
g1333
Vinsert
p24781
I40
VQualifiedName: Component.CheckResult
p24782
tp24783
I1
s(g36
I42
g37
Vinsert
p24784
I45
VStringLiteral: "Content-Type, Content-Encoding"
p24785
tp24786
I1
s(g4220
I42
g4221
Vinsert
p24787
I41
VReturnStatement
p24788
tp24789
I8
s(g1749
I42
g1750
Vinsert
p24790
I43
VSimpleType: Interceptor
p24791
tp24792
I1
s(g1846
I42
g1847
Vinsert
p24793
I42
VSimpleName: beginMillis
p24794
tp24795
I1
s(g357
I42
g358
Vinsert
p24796
I34
VNumberLiteral: 127
p24797
tp24798
I1
s(g2309
I42
g2310
Vinsert
p24799
I45
VStringLiteral: "2016-10-01T01:01:01Z"
p24800
tp24801
I1
s(g426
I42
g427
Vinsert
p24802
I74
VParameterizedType: List<Span>
p24803
tp24804
F1.5
s(g13167
I42
g13168
Vinsert
p24805
I42
VSimpleName: bytes
p24806
tp24807
I1
s(g7300
I42
g7301
Vinsert
p24808
I45
VStringLiteral: "foo"
p24809
tp24810
F0.5
s(g171
I42
g172
Vinsert
p24811
I31
VMethodDeclaration
p24812
tp24813
F0.25
s(g2304
I42
g2305
Vinsert
p24814
I7
VAssignment: =
p24815
tp24816
I1
s(Vinsert
p24817
I42
VSimpleName: expect
p24818
Vinsert
p24819
I42
VSimpleName: build
p24820
tp24821
F0.5
s(g1561
I42
g1562
Vinsert
p24822
I59
VVariableDeclarationFragment
p24823
tp24824
I1
s(g5286
I42
g5287
Vinsert
p24825
I86
VLambdaExpression
p24826
tp24827
I1
s(g3793
I42
g3794
Vinsert
p24828
I32
VMethodInvocation
p24829
tp24830
F21.75
s(g1278
I42
g1279
Vinsert
p24831
I42
VSimpleName: service
p24832
tp24833
I2
s(g3838
I42
g3839
Vinsert
p24834
I8
VBlock
p24835
tp24836
I2
s(g2426
I42
g2427
Vinsert
p24837
I42
VSimpleName: String
p24838
tp24839
F2.25
s(g9258
I42
g9259
Vinsert
p24840
I60
VVariableDeclarationStatement
p24841
tp24842
I3
s(g9502
I42
g9503
Vinsert
p24843
I40
VQualifiedName: Span.Kind
p24844
tp24845
F0.25
s(g7627
I42
g7628
Vinsert
p24846
I43
VSimpleType: AtomicReference
p24847
tp24848
I2
s(g2232
I42
g2233
Vinsert
p24849
I42
VSimpleName: storage
p24850
tp24851
F0.5
s(g6129
I42
g6130
Vinsert
p24852
I42
VSimpleName: ElasticsearchStrictTraceIdFalseTest
p24853
tp24854
F0.25
s(g4469
I42
g4470
Vinsert
p24855
I27
VInfixExpression: !=
p24856
tp24857
F0.25
s(g4908
I42
g4909
Vinsert
p24858
I32
VMethodInvocation
p24859
tp24860
I2
s(g2156
I42
g2157
Vinsert
p24861
I27
VInfixExpression: <
p24862
tp24863
I1
s(g8850
I42
g8851
Vinsert
p24864
I74
VParameterizedType: Callback<List<Span>>
p24865
tp24866
F0.25
s(g949
I42
g950
Vinsert
p24867
I27
VInfixExpression: &&
p24868
tp24869
I1
s(g19263
I42
g19264
Vinsert
p24870
I74
VParameterizedType: ConsumerIterator<String,List<Span>>
p24871
tp24872
I1
s(g6804
I42
g6805
Vinsert
p24873
I44
VSingleVariableDeclaration
p24874
tp24875
F0.75
s(g3788
I42
g3789
Vinsert
p24876
I43
VSimpleType: Span
p24877
tp24878
F0.25
s(g4152
I42
g4153
Vinsert
p24879
I74
VParameterizedType: ToSeqCallback<>
p24880
tp24881
I1
s(g1074
I42
g1075
Vinsert
p24882
I42
VSimpleName: Span2
p24883
tp24884
I1
s(g2909
I42
g2910
Vinsert
p24885
I42
VSimpleName: create
p24886
tp24887
I5
s(g1
I42
g2
Vinsert
p24888
I31
VMethodDeclaration
p24889
tp24890
F0.25
s(g3636
I42
g3637
Vinsert
p24891
I32
VMethodInvocation
p24892
tp24893
I2
s(g5053
I42
g5054
Vinsert
p24894
I39
VPrimitiveType: long
p24895
tp24896
I1
s(g1673
I42
g1674
Vinsert
p24897
I27
VInfixExpression: &&
p24898
tp24899
I1
s(g654
I42
g655
Vinsert
p24900
I42
VSimpleName: IOException
p24901
tp24902
F0.75
s(g2038
I42
g2039
Vinsert
p24903
I74
VParameterizedType: ListenableFuture<List<Span>>
p24904
tp24905
F0.25
s(g4016
I42
g4017
Vinsert
p24906
I66
VTextElement: In case of a late error, we should know which trace ID is being processed 
p24907
tp24908
F0.25
s(g3064
I42
g3065
Vinsert
p24909
I40
VQualifiedName: QueryRequest.Builder
p24910
tp24911
I1
s(g9290
I42
g9291
Vinsert
p24912
I43
VSimpleType: Collection
p24913
tp24914
F0.25
s(g46
I42
g47
Vinsert
p24915
I42
VSimpleName: zipkin
p24916
tp24917
I2
s(g2393
I42
g2394
Vinsert
p24918
I42
VSimpleName: V
p24919
tp24920
I1
s(g3702
I42
g3703
Vinsert
p24921
I60
VVariableDeclarationStatement
p24922
tp24923
I4
s(g3987
I42
g3988
Vinsert
p24924
I86
VLambdaExpression
p24925
tp24926
I1
s(g4367
I42
g4368
Vinsert
p24927
I44
VSingleVariableDeclaration
p24928
tp24929
F0.25
s(g4399
I42
g4400
Vinsert
p24930
I42
VSimpleName: trace
p24931
tp24932
I1
s(g4712
I42
g4713
Vinsert
p24933
I25
VIfStatement
p24934
tp24935
I1
s(g1074
I42
g1075
Vinsert
p24936
I5
VArrayType: byte[]
p24937
tp24938
F0.25
s(g1332
I42
g1333
Vinsert
p24939
I42
VSimpleName: health
p24940
tp24941
F0.25
s(g4182
I42
g4183
Vinsert
p24942
I65
VTagElement: @link
p24943
tp24944
F0.5
s(g1202
I42
g1203
Vinsert
p24945
I21
VExpressionStatement
p24946
tp24947
I1
s(g6231
I42
g6232
Vinsert
p24948
I31
VMethodDeclaration
p24949
tp24950
F0.25
s(g151
I42
g152
Vinsert
p24951
I43
VSimpleType: AsyncSpanConsumer
p24952
tp24953
F0.5
s(g5183
I42
g5184
Vinsert
p24954
I32
VMethodInvocation
p24955
tp24956
I7
s(g1283
I42
g1284
Vinsert
p24957
I43
VSimpleType: NoHostAvailableException
p24958
tp24959
I4
s(g2755
I42
g2756
Vinsert
p24960
I7
VAssignment: =
p24961
tp24962
F0.25
s(g4103
I42
g4104
Vinsert
p24963
I42
VSimpleName: onError
p24964
tp24965
F0.25
s(Vinsert
p24966
I42
VSimpleName: create
p24967
Vinsert
p24968
I42
VSimpleName: TracedSession
p24969
tp24970
I2
s(g1683
I42
g1684
Vinsert
p24971
I83
VModifier: protected
p24972
tp24973
F0.25
s(g2028
I42
g2029
Vinsert
p24974
I52
VThisExpression
p24975
tp24976
I2
s(g4469
I42
g4470
Vinsert
p24977
I43
VSimpleType: Short
p24978
tp24979
F0.5
s(g2403
I42
g2404
Vinsert
p24980
I42
VSimpleName: result
p24981
tp24982
I1
s(g9502
I42
g9503
Vinsert
p24983
I21
VExpressionStatement
p24984
tp24985
I2
s(g714
I42
g715
Vinsert
p24986
I42
VSimpleName: context
p24987
tp24988
I1
s(g3307
I42
g3308
Vinsert
p24989
I44
VSingleVariableDeclaration
p24990
tp24991
F0.25
s(g6050
I42
g6051
Vinsert
p24992
I42
VSimpleName: getClockSkew
p24993
tp24994
I1
s(g15866
I42
g15867
Vinsert
p24995
I40
VQualifiedName: endpoint.serviceName
p24996
tp24997
I1
s(g6745
I42
g6746
Vinsert
p24998
I42
VSimpleName: List
p24999
tp25000
I1
s(g6984
I42
g6985
Vinsert
p25001
I43
VSimpleType: ResultSet
p25002
tp25003
F0.25
s(g14635
I42
g14636
Vinsert
p25004
I9
VBooleanLiteral: true
p25005
tp25006
I1
s(g997
I42
g998
Vinsert
p25007
I25
VIfStatement
p25008
tp25009
I6
s(g2038
I42
g2039
Vinsert
p25010
I42
VSimpleName: delegate
p25011
tp25012
F0.25
s(g2260
I42
g2261
Vinsert
p25013
I74
VParameterizedType: Map<String,String>
p25014
tp25015
F0.25
s(g4605
I42
g4606
Vinsert
p25016
I45
VStringLiteral: "b"
p25017
tp25018
I1
s(g1944
I42
g1945
Vinsert
p25019
I41
VReturnStatement
p25020
tp25021
F0.5
s(g5259
I42
g5260
Vinsert
p25022
I42
VSimpleName: List
p25023
tp25024
F0.25
s(g2776
I42
g2777
Vinsert
p25025
I42
VSimpleName: IOException
p25026
tp25027
F0.5
s(g2208
I42
g2209
Vinsert
p25028
I16
VConditionalExpression
p25029
tp25030
I1
s(g3307
I42
g3308
Vinsert
p25031
I41
VReturnStatement
p25032
tp25033
I1
s(g6315
I42
g6316
Vinsert
p25034
I42
VSimpleName: LINK_GROUP_FIELDS
p25035
tp25036
F0.25
s(g5598
I42
g5599
Vinsert
p25037
I27
VInfixExpression: ==
p25038
tp25039
I1
s(g13258
I42
g13259
Vinsert
p25040
I40
VQualifiedName: TrueThenDone.INSTANCE
p25041
tp25042
I1
s(g6050
I42
g6051
Vinsert
p25043
I42
VSimpleName: CLIENT_RECV
p25044
tp25045
I1
s(g8652
I42
g8653
Vinsert
p25046
I25
VIfStatement
p25047
tp25048
I1
s(g51
I42
g52
Vinsert
p25049
I43
VSimpleType: Settings
p25050
tp25051
I1
s(g537
I42
g538
Vinsert
p25052
I59
VVariableDeclarationFragment
p25053
tp25054
I1
s(g2789
I42
g2790
Vinsert
p25055
I40
VQualifiedName: zipkin.Span
p25056
tp25057
F0.75
s(g5435
I42
g5436
Vinsert
p25058
I41
VReturnStatement
p25059
tp25060
I1
s(g146
I42
g147
Vinsert
p25061
I42
VSimpleName: earlySpans
p25062
tp25063
I1
s(g3160
I42
g3161
Vinsert
p25064
I42
VSimpleName: Exception
p25065
tp25066
F0.25
s(g5126
I42
g5127
Vinsert
p25067
I8
VBlock
p25068
tp25069
I2
s(g2278
I42
g2279
Vinsert
p25070
I42
VSimpleName: shouldDisallowOrigin
p25071
tp25072
F0.25
s(g2140
I42
g2141
Vinsert
p25073
I34
VNumberLiteral: 666
p25074
tp25075
I1
s(g4085
I42
g4086
Vinsert
p25076
I32
VMethodInvocation
p25077
tp25078
I2
s(g6718
I42
g6719
Vinsert
p25079
I27
VInfixExpression: *
p25080
tp25081
I2
s(g5984
I42
g5985
Vinsert
p25082
I32
VMethodInvocation
p25083
tp25084
I12
s(g2378
I42
g2379
Vinsert
p25085
I42
VSimpleName: compare
p25086
tp25087
F0.25
s(g7602
I42
g7603
Vinsert
p25088
I24
VForStatement
p25089
tp25090
I1
s(g3552
I42
g3553
Vinsert
p25091
I85
VDimension
p25092
tp25093
I1
s(g6005
I42
g6006
Vinsert
p25094
I42
VSimpleName: withPort
p25095
tp25096
I1
s(g4253
I42
g4254
Vinsert
p25097
I42
VSimpleName: verify
p25098
tp25099
I1
s(g3160
I42
g3161
Vinsert
p25100
I42
VSimpleName: input
p25101
tp25102
F0.25
s(g2140
I42
g2141
Vinsert
p25103
I34
VNumberLiteral: 20
p25104
tp25105
I1
s(g8294
I42
g8295
Vinsert
p25106
I42
VSimpleName: NullPointerException
p25107
tp25108
I1
s(g562
I42
g563
Vinsert
p25109
I45
VStringLiteral: "Couldn't connect to docker image "
p25110
tp25111
I1
s(g6979
I42
g6980
Vinsert
p25112
I42
VSimpleName: UTF_8
p25113
tp25114
I1
s(g587
I42
g588
Vinsert
p25115
I45
VStringLiteral: "Cannot store spans [1] due to IllegalArgumentException(no beer)"
p25116
tp25117
F0.25
s(g1002
I42
g1003
Vinsert
p25118
I42
VSimpleName: Optional
p25119
tp25120
I1
s(g6071
I42
g6072
Vinsert
p25121
I27
VInfixExpression: +
p25122
tp25123
I1
s(g5349
I42
g5350
Vinsert
p25124
I42
VSimpleName: duration
p25125
tp25126
F0.25
s(g3730
I42
g3731
Vinsert
p25127
I42
VSimpleName: QueryException
p25128
tp25129
I1
s(g841
I42
g842
Vinsert
p25130
I42
VSimpleName: addInterceptor
p25131
tp25132
I1
s(g81
I42
g82
Vinsert
p25133
I33
VNullLiteral
p25134
tp25135
F6.5
s(g15097
I42
g15098
Vinsert
p25136
I59
VVariableDeclarationFragment
p25137
tp25138
I1
s(g3720
I42
g3721
Vinsert
p25139
I34
VNumberLiteral: 365
p25140
tp25141
F0.25
s(g5476
I42
g5477
Vinsert
p25142
I42
VSimpleName: dataError
p25143
tp25144
I1
s(g608
I42
g609
Vinsert
p25145
I31
VMethodDeclaration
p25146
tp25147
F0.25
s(g4945
I42
g4946
Vinsert
p25148
I27
VInfixExpression: ||
p25149
tp25150
I1
s(g1058
I42
g1059
Vinsert
p25151
I42
VSimpleName: c
p25152
tp25153
F1.25
s(g1410
I42
g1411
Vinsert
p25154
I27
VInfixExpression: ==
p25155
tp25156
I1
s(g5584
I42
g5585
Vinsert
p25157
I31
VMethodDeclaration
p25158
tp25159
F0.25
s(g5188
I42
g5189
Vinsert
p25160
I43
VSimpleType: Annotation.Builder
p25161
tp25162
I1
s(g7282
I42
g7283
Vinsert
p25163
I43
VSimpleType: ZipkinElasticsearchJestStorageProperties
p25164
tp25165
F0.25
s(g17360
I42
g17361
Vinsert
p25166
I43
VSimpleType: SpanStore
p25167
tp25168
I2
s(g5873
I42
g5874
Vinsert
p25169
I34
VNumberLiteral: 4
p25170
tp25171
I1
s(g11012
I42
g11013
Vinsert
p25172
I27
VInfixExpression: *
p25173
tp25174
I1
s(g2891
I42
g2892
Vinsert
p25175
I42
VSimpleName: BoundStatement
p25176
tp25177
I1
s(g13800
I42
g13801
Vinsert
p25178
I43
VSimpleType: Void
p25179
tp25180
F0.25
s(g13686
I42
g13687
Vinsert
p25181
I42
VSimpleName: ThreadLocal
p25182
tp25183
F0.5
s(g977
I42
g978
Vinsert
p25184
I42
VSimpleName: FluentIterable
p25185
tp25186
I1
s(g719
I42
g720
Vinsert
p25187
I83
VModifier: public
p25188
tp25189
F1.75
s(g1053
I42
g1054
Vinsert
p25190
I33
VNullLiteral
p25191
tp25192
I2
s(g866
I42
g867
Vinsert
p25193
I43
VSimpleType: Session
p25194
tp25195
F1.5
s(g2936
I42
g2937
Vinsert
p25196
I42
VSimpleName: wrap
p25197
tp25198
I1
s(Vinsert
p25199
I42
VSimpleName: getBytes
p25200
Vinsert
p25201
I34
VNumberLiteral: 6
p25202
tp25203
I1
s(g6162
I42
g6163
Vinsert
p25204
I42
VSimpleName: value
p25205
tp25206
F3.75
s(g3296
I42
g3297
Vinsert
p25207
I83
VModifier: public
p25208
tp25209
F0.25
s(g2865
I42
g2866
Vinsert
p25210
I42
VSimpleName: rs
p25211
tp25212
I1
s(g13147
I42
g13148
Vinsert
p25213
I42
VSimpleName: tag
p25214
tp25215
I1
s(g141
I42
g142
Vinsert
p25216
I60
VVariableDeclarationStatement
p25217
tp25218
I1
s(g5897
I42
g5898
Vinsert
p25219
I42
VSimpleName: indexNameFormatter
p25220
tp25221
F0.25
s(g19875
I42
g19876
Vinsert
p25222
I45
VStringLiteral: "zipkin.storage.elasticsearch.hosts:"
p25223
tp25224
I1
s(g2789
I42
g2790
Vinsert
p25225
I42
VSimpleName: kind
p25226
tp25227
F0.25
s(g5369
I42
g5370
Vinsert
p25228
I14
VClassInstanceCreation
p25229
tp25230
F0.25
s(g7582
I42
g7583
Vinsert
p25231
I45
VStringLiteral: "  \u005c"localEndpoint\u005c": {\u005cn"
p25232
tp25233
I1
s(g3217
I42
g3218
Vinsert
p25234
I32
VMethodInvocation
p25235
tp25236
I3
s(g14839
I42
g14840
Vinsert
p25237
I45
VStringLiteral: "{\u005c"traceId\u005c":\u005c""
p25238
tp25239
I1
s(g15097
I42
g15098
Vinsert
p25240
I32
VMethodInvocation
p25241
tp25242
I2
s(g418
I42
g419
Vinsert
p25243
I31
VMethodDeclaration
p25244
tp25245
F0.25
s(g684
I42
g685
Vinsert
p25246
I42
VSimpleName: Object
p25247
tp25248
F0.5
s(g7217
I42
g7218
Vinsert
p25249
I42
VSimpleName: catchAll
p25250
tp25251
I1
s(g1921
I42
g1922
Vinsert
p25252
I9
VBooleanLiteral: true
p25253
tp25254
I1
s(g10621
I42
g10622
Vinsert
p25255
I39
VPrimitiveType: void
p25256
tp25257
F0.5
s(g4959
I42
g4960
Vinsert
p25258
I42
VSimpleName: String
p25259
tp25260
I1
s(g466
I42
g467
Vinsert
p25261
I32
VMethodInvocation
p25262
tp25263
I8
s(g1846
I42
g1847
Vinsert
p25264
I42
VSimpleName: addRange
p25265
tp25266
I1
s(g1871
I42
g1872
Vinsert
p25267
I34
VNumberLiteral: 0
p25268
tp25269
I1
s(g2436
I42
g2437
Vinsert
p25270
I43
VSimpleType: Options
p25271
tp25272
I1
s(g191
I42
g192
Vinsert
p25273
I42
VSimpleName: store
p25274
tp25275
I1
s(g3667
I42
g3668
Vinsert
p25276
I42
VSimpleName: left
p25277
tp25278
F1.25
s(g11617
I42
g11618
Vinsert
p25279
I34
VNumberLiteral: 0L
p25280
tp25281
I3
s(g8751
I42
g8752
Vinsert
p25282
I21
VExpressionStatement
p25283
tp25284
I2
s(g19432
I42
g19433
Vinsert
p25285
I78
VMarkerAnnotation
p25286
tp25287
F0.25
s(g405
I42
g406
Vinsert
p25288
I42
VSimpleName: CassandraStorage
p25289
tp25290
F0.25
s(g3454
I42
g3455
Vinsert
p25291
I83
VModifier: static
p25292
tp25293
I1
s(g4415
I42
g4416
Vinsert
p25294
I21
VExpressionStatement
p25295
tp25296
I1
s(g12014
I42
g12015
Vinsert
p25297
I42
VSimpleName: h
p25298
tp25299
I8
s(g3565
I42
g3566
Vinsert
p25300
I42
VSimpleName: List
p25301
tp25302
I2
s(g66
I42
g67
Vinsert
p25303
I42
VSimpleName: Exception
p25304
tp25305
F0.25
s(g2203
I42
g2204
Vinsert
p25306
I25
VIfStatement
p25307
tp25308
I3
s(g4576
I42
g4577
Vinsert
p25309
I42
VSimpleName: next
p25310
tp25311
F0.25
s(g1861
I42
g1862
Vinsert
p25312
I32
VMethodInvocation
p25313
tp25314
F37.5
s(g2345
I42
g2346
Vinsert
p25315
I42
VSimpleName: builder
p25316
tp25317
I1
s(g4187
I42
g4188
Vinsert
p25318
I25
VIfStatement
p25319
tp25320
I1
s(g11825
I42
g11826
Vinsert
p25321
I42
VSimpleName: ipv4
p25322
tp25323
I1
s(g507
I42
g508
Vinsert
p25324
I83
VModifier: public
p25325
tp25326
F0.25
s(g4085
I42
g4086
Vinsert
p25327
I40
VQualifiedName: that.timestamp
p25328
tp25329
I1
s(g1551
I42
g1552
Vinsert
p25330
I27
VInfixExpression: |
p25331
tp25332
I1
s(g5738
I42
g5739
Vinsert
p25333
I42
VSimpleName: TODAY
p25334
tp25335
I1
s(g66
I42
g67
Vinsert
p25336
I44
VSingleVariableDeclaration
p25337
tp25338
F0.25
s(g1123
I42
g1124
Vinsert
p25339
I83
VModifier: public
p25340
tp25341
F4.5
s(g5533
I42
g5534
Vinsert
p25342
I14
VClassInstanceCreation
p25343
tp25344
I1
s(g284
I42
g285
Vinsert
p25345
I70
VEnhancedForStatement
p25346
tp25347
I1
s(g4301
I42
g4302
Vinsert
p25348
I59
VVariableDeclarationFragment
p25349
tp25350
I1
s(g156
I42
g157
Vinsert
p25351
I42
VSimpleName: JsonCodec
p25352
tp25353
I2
s(g1673
I42
g1674
Vinsert
p25354
I8
VBlock
p25355
tp25356
I2
s(g12325
I42
g12326
Vinsert
p25357
I42
VSimpleName: getLoggedKeyspace
p25358
tp25359
I1
s(g7251
I42
g7252
Vinsert
p25360
I7
VAssignment: +=
p25361
tp25362
I2
s(g2350
I42
g2351
Vinsert
p25363
I43
VSimpleType: DependencyLinker
p25364
tp25365
I1
s(g1628
I42
g1629
Vinsert
p25366
I42
VSimpleName: AdapterConfiguration
p25367
tp25368
F0.25
s(g131
I42
g132
Vinsert
p25369
I42
VSimpleName: toBuilder
p25370
tp25371
I1
s(g8121
I42
g8122
Vinsert
p25372
I42
VSimpleName: metrics
p25373
tp25374
I1
s(g166
I42
g167
Vinsert
p25375
I7
VAssignment: =
p25376
tp25377
I1
s(g3155
I42
g3156
Vinsert
p25378
I32
VMethodInvocation
p25379
tp25380
F19.25
s(g8677
I42
g8678
Vinsert
p25381
I42
VSimpleName: testToString
p25382
tp25383
F0.25
s(g7305
I42
g7306
Vinsert
p25384
I43
VSimpleType: Buffer
p25385
tp25386
I3
s(g4044
I42
g4045
Vinsert
p25387
I65
VTagElement
p25388
tp25389
F0.25
s(g2647
I42
g2648
Vinsert
p25390
I44
VSingleVariableDeclaration
p25391
tp25392
F0.5
s(g21162
I42
g21163
Vinsert
p25393
I42
VSimpleName: CharsetEncoder
p25394
tp25395
F0.25
s(g10568
I42
g10569
Vinsert
p25396
I60
VVariableDeclarationStatement
p25397
tp25398
I1
s(g8375
I42
g8376
Vinsert
p25399
I34
VNumberLiteral: 1L
p25400
tp25401
I2
s(g2901
I42
g2902
Vinsert
p25402
I43
VSimpleType: Endpoint
p25403
tp25404
F0.25
s(g1040
I42
g1041
Vinsert
p25405
I85
VDimension
p25406
tp25407
F0.25
s(g2265
I42
g2266
Vinsert
p25408
I42
VSimpleName: traceId
p25409
tp25410
F0.5
s(g5505
I42
g5506
Vinsert
p25411
I85
VDimension
p25412
tp25413
I3
s(g4639
I42
g4640
Vinsert
p25414
I42
VSimpleName: visitNextOrSkip
p25415
tp25416
F0.25
s(g1821
I42
g1822
Vinsert
p25417
I42
VSimpleName: List
p25418
tp25419
F0.25
s(g1881
I42
g1882
Vinsert
p25420
I42
VSimpleName: UTF_8
p25421
tp25422
F1.25
s(g1469
I42
g1470
Vinsert
p25423
I42
VSimpleName: traceIdHigh
p25424
tp25425
F1.25
s(g9889
I42
g9890
Vinsert
p25426
I42
VSimpleName: writeTraces
p25427
tp25428
I1
s(g826
I42
g827
Vinsert
p25429
I44
VSingleVariableDeclaration
p25430
tp25431
F0.5
s(g7347
I42
g7348
Vinsert
p25432
I42
VSimpleName: that_present_trace_id_high
p25433
tp25434
I1
s(g3987
I42
g3988
Vinsert
p25435
I42
VSimpleName: Collections
p25436
tp25437
I1
s(g4552
I42
g4553
Vinsert
p25438
I42
VSimpleName: traces
p25439
tp25440
I1
s(g4187
I42
g4188
Vinsert
p25441
I59
VVariableDeclarationFragment
p25442
tp25443
I10
s(g8458
I42
g8459
Vinsert
p25444
I27
VInfixExpression: *
p25445
tp25446
I8
s(g4568
I42
g4569
Vinsert
p25447
I8
VBlock
p25448
tp25449
I1
s(g8152
I42
g8153
Vinsert
p25450
I83
VModifier: public
p25451
tp25452
F0.25
s(g4587
I42
g4588
Vinsert
p25453
I42
VSimpleName: NoSuchBeanDefinitionException
p25454
tp25455
F0.75
s(Vinsert
p25456
I42
VSimpleName: of
p25457
Vinsert
p25458
I42
VSimpleName: category
p25459
tp25460
F1.25
s(g1836
I42
g1837
Vinsert
p25461
I13
VCharacterLiteral: '\u005cn'
p25462
tp25463
I2
s(g289
I42
g290
Vinsert
p25464
I60
VVariableDeclarationStatement
p25465
tp25466
I5
s(g6541
I42
g6542
Vinsert
p25467
I34
VNumberLiteral: 1
p25468
tp25469
F0.25
s(g1584
I42
g1585
Vinsert
p25470
I32
VMethodInvocation
p25471
tp25472
I4
s(g783
I42
g784
Vinsert
p25473
I60
VVariableDeclarationStatement
p25474
tp25475
I1
s(g1911
I42
g1912
Vinsert
p25476
I32
VMethodInvocation
p25477
tp25478
I44
s(g4717
I42
g4718
Vinsert
p25479
I42
VSimpleName: builder
p25480
tp25481
I2
s(g2169
I42
g2170
Vinsert
p25482
I40
VQualifiedName: InternalElasticsearchClient.Builder
p25483
tp25484
F0.25
s(g4605
I42
g4606
Vinsert
p25485
I45
VStringLiteral: "c"
p25486
tp25487
I1
s(g1367
I42
g1368
Vinsert
p25488
I44
VSingleVariableDeclaration
p25489
tp25490
F0.25
s(g4539
I42
g4540
Vinsert
p25491
I59
VVariableDeclarationFragment
p25492
tp25493
I1
s(g6371
I42
g6372
Vinsert
p25494
I8
VBlock
p25495
tp25496
I3
s(g1811
I42
g1812
Vinsert
p25497
I45
VStringLiteral: "{\u005c"serviceName\u005c":\u005c"\u005c""
p25498
tp25499
I1
s(g997
I42
g998
Vinsert
p25500
I74
VParameterizedType: ArrayList<>
p25501
tp25502
I1
s(g3833
I42
g3834
Vinsert
p25503
I42
VSimpleName: Response
p25504
tp25505
I1
s(g2242
I42
g2243
Vinsert
p25506
I42
VSimpleName: ZipkinCassandraStorageAutoConfiguration
p25507
tp25508
I1
s(g4131
I42
g4132
Vinsert
p25509
I42
VSimpleName: CassandraSpanStore
p25510
tp25511
F0.25
s(g12325
I42
g12326
Vinsert
p25512
I32
VMethodInvocation
p25513
tp25514
I17
s(g4754
I42
g4755
Vinsert
p25515
I45
VStringLiteral: "      \u005c"value\u005c": \u005c"9223372036854775807\u005c","
p25516
tp25517
I1
s(g474
I42
g475
Vinsert
p25518
I42
VSimpleName: Override
p25519
tp25520
F0.25
s(g6804
I42
g6805
Vinsert
p25521
I42
VSimpleName: traceId
p25522
tp25523
F3.75
s(g9615
I42
g9616
Vinsert
p25524
I40
VQualifiedName: SearchRequest.BoolQuery
p25525
tp25526
F0.25
s(g7560
I42
g7561
Vinsert
p25527
I27
VInfixExpression: |
p25528
tp25529
I2
s(g2972
I42
g2973
Vinsert
p25530
I40
VQualifiedName: request.annotations
p25531
tp25532
I1
s(g4192
I42
g4193
Vinsert
p25533
I74
VParameterizedType: List<Span>
p25534
tp25535
F0.25
s(g17360
I42
g17361
Vinsert
p25536
I42
VSimpleName: mem
p25537
tp25538
I4
s(g5435
I42
g5436
Vinsert
p25539
I8
VBlock
p25540
tp25541
I1
s(g2309
I42
g2310
Vinsert
p25542
I32
VMethodInvocation
p25543
tp25544
I2
s(g10727
I42
g10728
Vinsert
p25545
I42
VSimpleName: SERVER_SEND
p25546
tp25547
I1
s(g4749
I42
g4750
Vinsert
p25548
I42
VSimpleName: readSpan
p25549
tp25550
I3
s(g2594
I42
g2595
Vinsert
p25551
I43
VSimpleType: SelectTraceIdsFromSpan
p25552
tp25553
I1
s(g1410
I42
g1411
Vinsert
p25554
I85
VDimension
p25555
tp25556
I1
s(g3485
I42
g3486
Vinsert
p25557
I45
VStringLiteral: "      \u005c"key\u005c": \u005c"num\u005c","
p25558
tp25559
I1
s(g116
I42
g117
Vinsert
p25560
I42
VSimpleName: I16
p25561
tp25562
I1
s(g2802
I42
g2803
Vinsert
p25563
I42
VSimpleName: Test
p25564
tp25565
F0.25
s(g11052
I42
g11053
Vinsert
p25566
I40
VQualifiedName: InMemoryStorage.Builder
p25567
tp25568
F0.25
s(g2067
I42
g2068
Vinsert
p25569
I42
VSimpleName: doesNotExist
p25570
tp25571
F0.25
s(g5435
I42
g5436
Vinsert
p25572
I9
VBooleanLiteral: false
p25573
tp25574
I1
s(g4908
I42
g4909
Vinsert
p25575
I43
VSimpleType: OkHttpClient
p25576
tp25577
I1
s(Vinsert
p25578
I42
VSimpleName: writeSpans
p25579
Vinsert
p25580
I42
VSimpleName: writeSpans_gzipEncoded
p25581
tp25582
F0.25
s(g4690
I42
g4691
Vinsert
p25583
I42
VSimpleName: containsKey
p25584
tp25585
I1
s(g3720
I42
g3721
Vinsert
p25586
I40
VQualifiedName: TimeUnit.DAYS
p25587
tp25588
F0.25
s(g4959
I42
g4960
Vinsert
p25589
I42
VSimpleName: errorDecoding_doesntWrapMalformedException
p25590
tp25591
F0.25
s(g20316
I42
g20317
Vinsert
p25592
I43
VSimpleType: InterruptedException
p25593
tp25594
F0.25
s(g8751
I42
g8752
Vinsert
p25595
I42
VSimpleName: Value
p25596
tp25597
F0.25
s(g1372
I42
g1373
Vinsert
p25598
I59
VVariableDeclarationFragment
p25599
tp25600
I1
s(g5823
I42
g5824
Vinsert
p25601
I42
VSimpleName: settings
p25602
tp25603
F0.25
s(g3783
I42
g3784
Vinsert
p25604
I32
VMethodInvocation
p25605
tp25606
I7
s(g16518
I42
g16519
Vinsert
p25607
I27
VInfixExpression: ==
p25608
tp25609
I1
s(g2335
I42
g2336
Vinsert
p25610
I42
VSimpleName: String
p25611
tp25612
F2.5
s(g2977
I42
g2978
Vinsert
p25613
I43
VSimpleType: Pair
p25614
tp25615
F0.25
s(g4306
I42
g4307
Vinsert
p25616
I43
VSimpleType: ExecuteContext
p25617
tp25618
F0.25
s(g5873
I42
g5874
Vinsert
p25619
I42
VSimpleName: endpoint
p25620
tp25621
I1
s(g704
I42
g705
Vinsert
p25622
I42
VSimpleName: rates
p25623
tp25624
I1
s(g2278
I42
g2279
Vinsert
p25625
I21
VExpressionStatement
p25626
tp25627
I1
s(g2398
I42
g2399
Vinsert
p25628
I83
VModifier: static
p25629
tp25630
F0.25
s(g7445
I42
g7446
Vinsert
p25631
I42
VSimpleName: CassandraUtil
p25632
tp25633
I1
s(g24966
I42
g24967
Vinsert
p25634
I42
VSimpleName: Cassandra3Storage
p25635
tp25636
F0.25
s(g1316
I42
g1317
Vinsert
p25637
I42
VSimpleName: Test
p25638
tp25639
F0.5
s(g5884
I42
g5885
Vinsert
p25640
I45
VStringLiteral: "    \u005c"build_hash\u005c" : \u005c"0424099\u005c",\u005cn"
p25641
tp25642
I1
s(g13800
I42
g13801
Vinsert
p25643
I42
VSimpleName: Callback
p25644
tp25645
F0.25
s(g8601
I42
g8602
Vinsert
p25646
I42
VSimpleName: RequestBody
p25647
tp25648
I1
s(g14877
I42
g14878
Vinsert
p25649
I42
VSimpleName: ElasticsearchSpanStoreTest
p25650
tp25651
F0.25
s(g17360
I42
g17361
Vinsert
p25652
I42
VSimpleName: InMemorySpanStore
p25653
tp25654
I2
s(g1633
I42
g1634
Vinsert
p25655
I45
VStringLiteral: "test"
p25656
tp25657
F0.25
s(g4639
I42
g4640
Vinsert
p25658
I43
VSimpleType: JsonElement
p25659
tp25660
F0.25
s(g8375
I42
g8376
Vinsert
p25661
I45
VStringLiteral: ""
p25662
tp25663
I2
s(g4103
I42
g4104
Vinsert
p25664
I42
VSimpleName: result
p25665
tp25666
I1
s(g6421
I42
g6422
Vinsert
p25667
I14
VClassInstanceCreation
p25668
tp25669
I1
s(g3367
I42
g3368
Vinsert
p25670
I42
VSimpleName: Exception
p25671
tp25672
F0.25
s(g919
I42
g920
Vinsert
p25673
I40
VQualifiedName: TestObjects.TRACE
p25674
tp25675
I3
s(g6718
I42
g6719
Vinsert
p25676
I42
VSimpleName: timestamp
p25677
tp25678
I1
s(g3064
I42
g3065
Vinsert
p25679
I42
VSimpleName: store
p25680
tp25681
I1
s(g284
I42
g285
Vinsert
p25682
I42
VSimpleName: DependencyLinkSpan
p25683
tp25684
I1
s(g19654
I42
g19655
Vinsert
p25685
I42
VSimpleName: useSsl
p25686
tp25687
F1.5
s(g2393
I42
g2394
Vinsert
p25688
I74
VParameterizedType: Collection<V>
p25689
tp25690
I1
s(g2647
I42
g2648
Vinsert
p25691
I8
VBlock
p25692
tp25693
I2
s(g367
I42
g368
Vinsert
p25694
I40
VQualifiedName: ZIPKIN_SPANS.TRACE_ID
p25695
tp25696
I1
s(g5746
I42
g5747
Vinsert
p25697
I45
VStringLiteral: "zipkin.ui.dependency.high-error-rate:0.1"
p25698
tp25699
I1
s(g385
I42
g386
Vinsert
p25700
I60
VVariableDeclarationStatement
p25701
tp25702
I1
s(g1293
I42
g1294
Vinsert
p25703
I42
VSimpleName: List
p25704
tp25705
I1
s(g16271
I42
g16272
Vinsert
p25706
I39
VPrimitiveType: void
p25707
tp25708
F0.25
s(g9579
I42
g9580
Vinsert
p25709
I42
VSimpleName: getDb
p25710
tp25711
I2
s(g6363
I42
g6364
Vinsert
p25712
I42
VSimpleName: indices
p25713
tp25714
I1
s(g15778
I42
g15779
Vinsert
p25715
I43
VSimpleType: Span
p25716
tp25717
I2
s(g4451
I42
g4452
Vinsert
p25718
I27
VInfixExpression: ==
p25719
tp25720
F0.25
s(g10392
I42
g10393
Vinsert
p25721
I42
VSimpleName: o
p25722
tp25723
I3
s(g1541
I42
g1542
Vinsert
p25724
I42
VSimpleName: onDuplicateKeyIgnore
p25725
tp25726
F0.25
s(g264
I42
g265
Vinsert
p25727
I78
VMarkerAnnotation
p25728
tp25729
F0.25
s(g4248
I42
g4249
Vinsert
p25730
I43
VSimpleType: ScribeCollector
p25731
tp25732
F0.25
s(g3607
I42
g3608
Vinsert
p25733
I43
VSimpleType: String
p25734
tp25735
I2
s(g214
I42
g215
Vinsert
p25736
I42
VSimpleName: sizeInBytes
p25737
tp25738
I2
s(g4253
I42
g4254
Vinsert
p25739
I34
VNumberLiteral: 2L
p25740
tp25741
I1
s(g13877
I42
g13878
Vinsert
p25742
I8
VBlock
p25743
tp25744
F0.25
s(g3412
I42
g3413
Vinsert
p25745
I42
VSimpleName: load
p25746
tp25747
I1
s(g841
I42
g842
Vinsert
p25748
I40
VQualifiedName: OkHttpClient.Builder
p25749
tp25750
I1
s(g3979
I42
g3980
Vinsert
p25751
I8
VBlock
p25752
tp25753
F1.25
s(g6677
I42
g6678
Vinsert
p25754
I42
VSimpleName: add
p25755
tp25756
F0.25
s(g1032
I42
g1033
Vinsert
p25757
I42
VSimpleName: traceId
p25758
tp25759
I3
s(g2658
I42
g2659
Vinsert
p25760
I32
VMethodInvocation
p25761
tp25762
I24
s(g4733
I42
g4734
Vinsert
p25763
I42
VSimpleName: IOException
p25764
tp25765
F0.25
s(g5259
I42
g5260
Vinsert
p25766
I42
VSimpleName: Span
p25767
tp25768
F0.25
s(g1777
I42
g1778
Vinsert
p25769
I42
VSimpleName: Integer
p25770
tp25771
I1
s(g9828
I42
g9829
Vinsert
p25772
I42
VSimpleName: md
p25773
tp25774
F0.5
s(g1103
I42
g1104
Vinsert
p25775
I39
VPrimitiveType: boolean
p25776
tp25777
I1
s(g19403
I42
g19404
Vinsert
p25778
I42
VSimpleName: beginArray
p25779
tp25780
I1
s(g909
I42
g910
Vinsert
p25781
I22
VFieldAccess
p25782
tp25783
F1.25
s(g4913
I42
g4914
Vinsert
p25784
I43
VSimpleType: Set
p25785
tp25786
I1
s(g1871
I42
g1872
Vinsert
p25787
I59
VVariableDeclarationFragment
p25788
tp25789
F0.25
s(g1644
I42
g1645
Vinsert
p25790
I42
VSimpleName: checkNotNull
p25791
tp25792
F0.25
s(g367
I42
g368
Vinsert
p25793
I32
VMethodInvocation
p25794
tp25795
F1.25
s(g7502
I42
g7503
Vinsert
p25796
I40
VQualifiedName: s.traceId
p25797
tp25798
F0.5
s(g3702
I42
g3703
Vinsert
p25799
I42
VSimpleName: MojoExecutionException
p25800
tp25801
F0.25
s(g5949
I42
g5950
Vinsert
p25802
I43
VSimpleType: Server
p25803
tp25804
I2
s(g10346
I42
g10347
Vinsert
p25805
I74
VParameterizedType: DeferredResult<>
p25806
tp25807
I1
s(g12399
I42
g12400
Vinsert
p25808
I42
VSimpleName: AssumptionViolatedException
p25809
tp25810
I11
s(g4451
I42
g4452
Vinsert
p25811
I42
VSimpleName: getCluster
p25812
tp25813
F0.25
s(g2891
I42
g2892
Vinsert
p25814
I42
VSimpleName: span
p25815
tp25816
I1
s(g1594
I42
g1595
Vinsert
p25817
I40
VQualifiedName: builder.connectionFactory
p25818
tp25819
I1
s(g2658
I42
g2659
Vinsert
p25820
I42
VSimpleName: DataSource
p25821
tp25822
I10
s(g3268
I42
g3269
Vinsert
p25823
I14
VClassInstanceCreation
p25824
tp25825
I2
s(g14286
I42
g14287
Vinsert
p25826
I40
VQualifiedName: Codec.THRIFT
p25827
tp25828
I1
s(g4044
I42
g4045
Vinsert
p25829
I42
VSimpleName: client
p25830
tp25831
F0.25
s(g9244
I42
g9245
Vinsert
p25832
I42
VSimpleName: e
p25833
tp25834
I2
s(g3636
I42
g3637
Vinsert
p25835
I45
VStringLiteral: "value"
p25836
tp25837
I1
s(g2579
I42
g2580
Vinsert
p25838
I43
VSimpleType: DependencyLink
p25839
tp25840
F1.25
s(g1247
I42
g1248
Vinsert
p25841
I42
VSimpleName: days
p25842
tp25843
F0.5
s(g10112
I42
g10113
Vinsert
p25844
I27
VInfixExpression: ==
p25845
tp25846
I1
s(g8688
I42
g8689
Vinsert
p25847
I42
VSimpleName: store
p25848
tp25849
I2
s(g4077
I42
g4078
Vinsert
p25850
I42
VSimpleName: After
p25851
tp25852
F0.75
s(g891
I42
g892
Vinsert
p25853
I43
VSimpleType: Pair
p25854
tp25855
I1
s(g2828
I42
g2829
Vinsert
p25856
I42
VSimpleName: AtomicInteger
p25857
tp25858
I2
s(g4792
I42
g4793
Vinsert
p25859
I34
VNumberLiteral: 1472470996250000L
p25860
tp25861
I1
s(g15912
I42
g15913
Vinsert
p25862
I42
VSimpleName: mysql
p25863
tp25864
I2
s(Vinsert
p25865
I42
VSimpleName: addAnnotation
p25866
Vinsert
p25867
I34
VNumberLiteral: 350
p25868
tp25869
I1
s(g866
I42
g867
Vinsert
p25870
I78
VMarkerAnnotation
p25871
tp25872
F6.0
s(g1831
I42
g1832
Vinsert
p25873
I42
VSimpleName: HttpURLConnection
p25874
tp25875
I1
s(g214
I42
g215
Vinsert
p25876
I27
VInfixExpression: +
p25877
tp25878
I2
s(g6195
I42
g6196
Vinsert
p25879
I42
VSimpleName: LinkedHashMap
p25880
tp25881
I1
s(g7282
I42
g7283
Vinsert
p25882
I42
VSimpleName: ZipkinElasticsearchJestStorageProperties
p25883
tp25884
F0.25
s(g9295
I42
g9296
Vinsert
p25885
I45
VStringLiteral: "https://"
p25886
tp25887
I1
s(g5910
I42
g5911
Vinsert
p25888
I60
VVariableDeclarationStatement
p25889
tp25890
I3
s(g2054
I42
g2055
Vinsert
p25891
I13
VCharacterLiteral: '\u005cb'
p25892
tp25893
I1
s(g3951
I42
g3952
Vinsert
p25894
I40
VQualifiedName: ZipkinServerConfigurationTest.Config
p25895
tp25896
I2
s(g61
I42
g62
Vinsert
p25897
I42
VSimpleName: CassandraSpanConsumer
p25898
tp25899
F0.25
s(g3417
I42
g3418
Vinsert
p25900
I32
VMethodInvocation
p25901
tp25902
I3
s(g2492
I42
g2493
Vinsert
p25903
I42
VSimpleName: time
p25904
tp25905
I6
s(g5316
I42
g5317
Vinsert
p25906
I43
VSimpleType: GetRawTraceDoubleCallback
p25907
tp25908
I2
s(g2699
I42
g2700
Vinsert
p25909
I42
VSimpleName: getResponse
p25910
tp25911
I1
s(g264
I42
g265
Vinsert
p25912
I59
VVariableDeclarationFragment
p25913
tp25914
I1
s(g4712
I42
g4713
Vinsert
p25915
I32
VMethodInvocation
p25916
tp25917
I1
s(g1979
I42
g1980
Vinsert
p25918
I25
VIfStatement
p25919
tp25920
I1
s(g10112
I42
g10113
Vinsert
p25921
I7
VAssignment: =
p25922
tp25923
I1
s(g2072
I42
g2073
Vinsert
p25924
I42
VSimpleName: toString
p25925
tp25926
I1
s(g1757
I42
g1758
Vinsert
p25927
I42
VSimpleName: get
p25928
tp25929
I1
s(g400
I42
g401
Vinsert
p25930
I45
VStringLiteral: "  ]\u005cn"
p25931
tp25932
I1
s(g3474
I42
g3475
Vinsert
p25933
I42
VSimpleName: session
p25934
tp25935
I2
s(g4077
I42
g4078
Vinsert
p25936
I42
VSimpleName: AnnotationConfigApplicationContext
p25937
tp25938
F0.25
s(g1327
I42
g1328
Vinsert
p25939
I42
VSimpleName: collector
p25940
tp25941
F0.25
s(g2658
I42
g2659
Vinsert
p25942
I42
VSimpleName: dataSource
p25943
tp25944
I10
s(g2085
I42
g2086
Vinsert
p25945
I42
VSimpleName: toString
p25946
tp25947
F0.25
s(g5386
I42
g5387
Vinsert
p25948
I42
VSimpleName: spans
p25949
tp25950
I1
s(g2539
I42
g2540
Vinsert
p25951
I42
VSimpleName: LocalSpanCollector
p25952
tp25953
I2
s(g23316
I42
g23317
Vinsert
p25954
I74
VParameterizedType: TableField<Record,byte[]>
p25955
tp25956
I1
s(g1212
I42
g1213
Vinsert
p25957
I43
VSimpleType: VoidListenableFuture
p25958
tp25959
I2
s(g1673
I42
g1674
Vinsert
p25960
I60
VVariableDeclarationStatement
p25961
tp25962
I3
s(g709
I42
g710
Vinsert
p25963
I42
VSimpleName: writer
p25964
tp25965
F1.25
s(g86
I42
g87
Vinsert
p25966
I45
VStringLiteral: "zipkin-query"
p25967
tp25968
I1
s(g7096
I42
g7097
Vinsert
p25969
I42
VSimpleName: canceled
p25970
tp25971
I1
s(g5188
I42
g5189
Vinsert
p25972
I42
VSimpleName: fromJson
p25973
tp25974
F0.25
s(g3730
I42
g3731
Vinsert
p25975
I43
VSimpleType: SQLException
p25976
tp25977
I1
s(g10178
I42
g10179
Vinsert
p25978
I45
VStringLiteral: "    \u005c"ipv6\u005c": null,\u005cn"
p25979
tp25980
F0.25
s(g5481
I42
g5482
Vinsert
p25981
I42
VSimpleName: InMemorySpanStore
p25982
tp25983
I2
s(g1665
I42
g1666
Vinsert
p25984
I42
VSimpleName: onFailure
p25985
tp25986
F0.75
s(g1979
I42
g1980
Vinsert
p25987
I21
VExpressionStatement
p25988
tp25989
I2
s(g6203
I42
g6204
Vinsert
p25990
I31
VMethodDeclaration
p25991
tp25992
F0.5
s(g8707
I42
g8708
Vinsert
p25993
I42
VSimpleName: Test
p25994
tp25995
F0.25
s(g1395
I42
g1396
Vinsert
p25996
I26
VImportDeclaration
p25997
tp25998
F0.25
s(g9244
I42
g9245
Vinsert
p25999
I42
VSimpleName: failBecauseExceptionWasNotThrown
p26000
tp26001
I1
s(Vinsert
p26002
I42
VSimpleName: name
p26003
Vinsert
p26004
I34
VNumberLiteral: 10L
p26005
tp26006
I2
s(g5584
I42
g5585
Vinsert
p26007
I21
VExpressionStatement
p26008
tp26009
I1
s(g2539
I42
g2540
Vinsert
p26010
I42
VSimpleName: storage
p26011
tp26012
I1
s(g12692
I42
g12693
Vinsert
p26013
I74
VParameterizedType: CallbackCaptor<Void>
p26014
tp26015
I2
s(g5391
I42
g5392
Vinsert
p26016
I42
VSimpleName: Integer
p26017
tp26018
I1
s(g5481
I42
g5482
Vinsert
p26019
I8
VBlock
p26020
tp26021
I5
s(g4856
I42
g4857
Vinsert
p26022
I41
VReturnStatement
p26023
tp26024
I1
s(g8152
I42
g8153
Vinsert
p26025
I32
VMethodInvocation
p26026
tp26027
F1.25
s(g3125
I42
g3126
Vinsert
p26028
I42
VSimpleName: buf
p26029
tp26030
I1
s(g3541
I42
g3542
Vinsert
p26031
I43
VSimpleType: DeduplicatingExecutor
p26032
tp26033
F0.25
s(g1846
I42
g1847
Vinsert
p26034
I21
VExpressionStatement
p26035
tp26036
I1
s(g1058
I42
g1059
Vinsert
p26037
I34
VNumberLiteral: 1
p26038
tp26039
F0.25
s(g2896
I42
g2897
Vinsert
p26040
I74
VParameterizedType: Callback<Void>
p26041
tp26042
F0.25
s(g1964
I42
g1965
Vinsert
p26043
I27
VInfixExpression: !=
p26044
tp26045
I2
s(g8397
I42
g8398
Vinsert
p26046
I41
VReturnStatement
p26047
tp26048
I1
s(g16138
I42
g16139
Vinsert
p26049
I42
VSimpleName: AsyncSpanConsumer
p26050
tp26051
F0.25
s(g9303
I42
g9304
Vinsert
p26052
I42
VSimpleName: a
p26053
tp26054
F0.25
s(g4568
I42
g4569
Vinsert
p26055
I42
VSimpleName: subAgg
p26056
tp26057
F0.25
s(g7251
I42
g7252
Vinsert
p26058
I45
VStringLiteral: ",\u005c"value\u005c":\u005c""
p26059
tp26060
I1
s(g1390
I42
g1391
Vinsert
p26061
I21
VExpressionStatement
p26062
tp26063
F3.5
s(g2237
I42
g2238
Vinsert
p26064
I14
VClassInstanceCreation
p26065
tp26066
I7
s(g1811
I42
g1812
Vinsert
p26067
I42
VSimpleName: Immutable
p26068
tp26069
I1
s(g4626
I42
g4627
Vinsert
p26070
I34
VNumberLiteral: 1
p26071
tp26072
I1
s(g3160
I42
g3161
Vinsert
p26073
I42
VSimpleName: indexNameFormatter
p26074
tp26075
I1
s(g5505
I42
g5506
Vinsert
p26076
I8
VBlock
p26077
tp26078
I2
s(g3867
I42
g3868
Vinsert
p26079
I74
VParameterizedType: List<Span>
p26080
tp26081
F0.25
s(g2090
I42
g2091
Vinsert
p26082
I42
VSimpleName: acceptSpansCallback_onErrorWithMessage
p26083
tp26084
F0.25
s(g7282
I42
g7283
Vinsert
p26085
I42
VSimpleName: elasticsearch
p26086
tp26087
F2.5
s(g5090
I42
g5091
Vinsert
p26088
I42
VSimpleName: pool
p26089
tp26090
I1
s(g1657
I42
g1658
Vinsert
p26091
I42
VSimpleName: readSpan_json2
p26092
tp26093
F0.25
s(g6781
I42
g6782
Vinsert
p26094
I42
VSimpleName: buildCluster
p26095
tp26096
I1
s(g2330
I42
g2331
Vinsert
p26097
I42
VSimpleName: endTimeBeforeData
p26098
tp26099
F0.25
s(g806
I42
g807
Vinsert
p26100
I40
VQualifiedName: Encoder.JSON
p26101
tp26102
I1
s(g26002
I42
g26003
Vinsert
p26103
I42
VSimpleName: asyncReceive
p26104
tp26105
I1
s(g562
I42
g563
Vinsert
p26106
I42
VSimpleName: e
p26107
tp26108
I22
s(g2085
I42
g2086
Vinsert
p26109
I31
VMethodDeclaration
p26110
tp26111
F0.25
s(g181
I42
g182
Vinsert
p26112
I42
VSimpleName: Test
p26113
tp26114
F1.0
s(g1861
I42
g1862
Vinsert
p26115
I21
VExpressionStatement
p26116
tp26117
I11
s(g4275
I42
g4276
Vinsert
p26118
I42
VSimpleName: AdaptiveSampleRate
p26119
tp26120
I1
s(g106
I42
g107
Vinsert
p26121
I32
VMethodInvocation
p26122
tp26123
F1.5
s(g2843
I42
g2844
Vinsert
p26124
I45
VStringLiteral: "access-control-allow-credentials"
p26125
tp26126
I1
s(g14635
I42
g14636
Vinsert
p26127
I59
VVariableDeclarationFragment
p26128
tp26129
I1
s(g3951
I42
g3952
Vinsert
p26130
I42
VSimpleName: context
p26131
tp26132
I12
s(g2403
I42
g2404
Vinsert
p26133
I40
VQualifiedName: Span2.Kind.SERVER
p26134
tp26135
I1
s(g4301
I42
g4302
Vinsert
p26136
I40
VQualifiedName: currentSpan.peerService
p26137
tp26138
I2
s(g881
I42
g882
Vinsert
p26139
I10
VBreakStatement
p26140
tp26141
I1
s(g4773
I42
g4774
Vinsert
p26142
I42
VSimpleName: writeAscii
p26143
tp26144
I1
s(g791
I42
g792
Vinsert
p26145
I83
VModifier: public
p26146
tp26147
F0.25
s(g5897
I42
g5898
Vinsert
p26148
I42
VSimpleName: IndexNameFormatter
p26149
tp26150
F0.25
s(g4480
I42
g4481
Vinsert
p26151
I42
VSimpleName: Benchmark
p26152
tp26153
F0.25
s(g9174
I42
g9175
Vinsert
p26154
I42
VSimpleName: String
p26155
tp26156
I2
s(g13800
I42
g13801
Vinsert
p26157
I42
VSimpleName: callback
p26158
tp26159
F0.25
s(g4016
I42
g4017
Vinsert
p26160
I42
VSimpleName: DependencyLinker
p26161
tp26162
I6
s(g8765
I42
g8766
Vinsert
p26163
I42
VSimpleName: acceptSpansCallback
p26164
tp26165
I1
s(g3688
I42
g3689
Vinsert
p26166
I74
VParameterizedType: List<String>
p26167
tp26168
I1
s(g6099
I42
g6100
Vinsert
p26169
I32
VMethodInvocation
p26170
tp26171
I2
s(g3454
I42
g3455
Vinsert
p26172
I42
VSimpleName: String
p26173
tp26174
I1
s(g4792
I42
g4793
Vinsert
p26175
I45
VStringLiteral: "6b221d5bc9e6496c"
p26176
tp26177
I1
s(g3340
I42
g3341
Vinsert
p26178
I42
VSimpleName: MockResponse
p26179
tp26180
I1
s(g1556
I42
g1557
Vinsert
p26181
I42
VSimpleName: CHILD
p26182
tp26183
I1
s(g3105
I42
g3106
Vinsert
p26184
I5
VArrayType: byte[]
p26185
tp26186
F0.25
s(g4212
I42
g4213
Vinsert
p26187
I32
VMethodInvocation
p26188
tp26189
I4
s(g3997
I42
g3998
Vinsert
p26190
I42
VSimpleName: getTraces
p26191
tp26192
I2
s(g5311
I42
g5312
Vinsert
p26193
I8
VBlock
p26194
tp26195
I1
s(g1265
I42
g1266
Vinsert
p26196
I42
VSimpleName: storage
p26197
tp26198
F1.25
s(g13606
I42
g13607
Vinsert
p26199
I45
VStringLiteral: "LazyGuavaSpanStore"
p26200
tp26201
F0.25
s(g6426
I42
g6427
Vinsert
p26202
I42
VSimpleName: Callback
p26203
tp26204
I1
s(g3388
I42
g3389
Vinsert
p26205
I41
VReturnStatement
p26206
tp26207
I4
s(g1566
I42
g1567
Vinsert
p26208
I31
VMethodDeclaration
p26209
tp26210
F0.25
s(g4518
I42
g4519
Vinsert
p26211
I14
VClassInstanceCreation
p26212
tp26213
I2
s(g9215
I42
g9216
Vinsert
p26214
I42
VSimpleName: Span
p26215
tp26216
F0.25
s(g2192
I42
g2193
Vinsert
p26217
I42
VSimpleName: ArrayList
p26218
tp26219
I1
s(g6145
I42
g6146
Vinsert
p26220
I42
VSimpleName: ArrayList
p26221
tp26222
I1
s(g289
I42
g290
Vinsert
p26223
I59
VVariableDeclarationFragment
p26224
tp26225
I5
s(g5902
I42
g5903
Vinsert
p26226
I42
VSimpleName: writeUtf8
p26227
tp26228
F0.25
s(g5666
I42
g5667
Vinsert
p26229
I34
VNumberLiteral: 2L
p26230
tp26231
I1
s(g1607
I42
g1608
Vinsert
p26232
I43
VSimpleType: Iterator
p26233
tp26234
I1
s(g2224
I42
g2225
Vinsert
p26235
I74
VParameterizedType: List<Span>
p26236
tp26237
F1.5
s(g1911
I42
g1912
Vinsert
p26238
I42
VSimpleName: isEqualTo
p26239
tp26240
I2
s(g249
I42
g250
Vinsert
p26241
I43
VSimpleType: String
p26242
tp26243
F0.25
s(g1723
I42
g1724
Vinsert
p26244
I42
VSimpleName: traceIdLow
p26245
tp26246
F0.5
s(g7450
I42
g7451
Vinsert
p26247
I45
VStringLiteral: "application/json"
p26248
tp26249
I1
s(g2018
I42
g2019
Vinsert
p26250
I42
VSimpleName: url
p26251
tp26252
I1
s(g7613
I42
g7614
Vinsert
p26253
I43
VSimpleType: String
p26254
tp26255
I5
s(g1959
I42
g1960
Vinsert
p26256
I57
VTypeLiteral
p26257
tp26258
I10
s(g3552
I42
g3553
Vinsert
p26259
I60
VVariableDeclarationStatement
p26260
tp26261
I1
s(g86
I42
g87
Vinsert
p26262
I32
VMethodInvocation
p26263
tp26264
I3
s(g5000
I42
g5001
Vinsert
p26265
I83
VModifier: public
p26266
tp26267
F0.75
s(g11799
I42
g11800
Vinsert
p26268
I14
VClassInstanceCreation
p26269
tp26270
F2.0
s(g4523
I42
g4524
Vinsert
p26271
I8
VBlock
p26272
tp26273
I1
s(g51
I42
g52
Vinsert
p26274
I43
VSimpleType: JDBCSpanStore
p26275
tp26276
I1
s(g1644
I42
g1645
Vinsert
p26277
I42
VSimpleName: spanStore
p26278
tp26279
F2.75
s(g1390
I42
g1391
Vinsert
p26280
I42
VSimpleName: CollectorMetrics
p26281
tp26282
F0.5
s(g3438
I42
g3439
Vinsert
p26283
I43
VSimpleType: Integer
p26284
tp26285
F0.25
s(g4848
I42
g4849
Vinsert
p26286
I45
VStringLiteral: "http://2.2.2.2:9200"
p26287
tp26288
I1
s(g3515
I42
g3516
Vinsert
p26289
I45
VStringLiteral: "ipv6"
p26290
tp26291
I1
s(g1283
I42
g1284
Vinsert
p26292
I12
VCatchClause
p26293
tp26294
I9
s(g4225
I42
g4226
Vinsert
p26295
I42
VSimpleName: span
p26296
tp26297
I1
s(g319
I42
g320
Vinsert
p26298
I42
VSimpleName: IOException
p26299
tp26300
F0.25
s(Vinsert
p26301
I42
VSimpleName: sizeInBytes
p26302
Vinsert
p26303
I40
VQualifiedName: ThriftCodec.SPANS_ADAPTER
p26304
tp26305
I1
s(g11788
I42
g11789
Vinsert
p26306
I42
VSimpleName: asList
p26307
tp26308
F1.25
s(g5090
I42
g5091
Vinsert
p26309
I42
VSimpleName: CheckResult
p26310
tp26311
F0.25
s(g5491
I42
g5492
Vinsert
p26312
I42
VSimpleName: indexNameFormatter
p26313
tp26314
I1
s(g6552
I42
g6553
Vinsert
p26315
I42
VSimpleName: Span
p26316
tp26317
I1
s(g2967
I42
g2968
Vinsert
p26318
I43
VSimpleType: Short
p26319
tp26320
I1
s(g654
I42
g655
Vinsert
p26321
I42
VSimpleName: reader
p26322
tp26323
F2.25
s(g1108
I42
g1109
Vinsert
p26324
I32
VMethodInvocation
p26325
tp26326
I22
s(g5730
I42
g5731
Vinsert
p26327
I42
VSimpleName: spans
p26328
tp26329
I1
s(g2393
I42
g2394
Vinsert
p26330
I43
VSimpleType: Collection
p26331
tp26332
I2
s(g1790
I42
g1791
Vinsert
p26333
I42
VSimpleName: internalDelegate
p26334
tp26335
F0.25
s(g1232
I42
g1233
Vinsert
p26336
I22
VFieldAccess
p26337
tp26338
F0.5
s(g2891
I42
g2892
Vinsert
p26339
I43
VSimpleType: BoundStatement
p26340
tp26341
I1
s(g5634
I42
g5635
Vinsert
p26342
I52
VThisExpression
p26343
tp26344
I2
s(g3833
I42
g3834
Vinsert
p26345
I59
VVariableDeclarationFragment
p26346
tp26347
I2
s(g714
I42
g715
Vinsert
p26348
I42
VSimpleName: ZipkinElasticsearchHttpStorageAutoConfiguration
p26349
tp26350
I1
s(g982
I42
g983
Vinsert
p26351
I5
VArrayType: byte[]
p26352
tp26353
F0.25
s(g1202
I42
g1203
Vinsert
p26354
I54
VTryStatement
p26355
tp26356
I1
s(g171
I42
g172
Vinsert
p26357
I21
VExpressionStatement
p26358
tp26359
I1
s(g4407
I42
g4408
Vinsert
p26360
I39
VPrimitiveType: void
p26361
tp26362
F0.25
s(g3485
I42
g3486
Vinsert
p26363
I45
VStringLiteral: "      \u005c"type\u005c": \u005c"I64\u005c""
p26364
tp26365
I1
s(g929
I42
g930
Vinsert
p26366
I42
VSimpleName: Table
p26367
tp26368
F0.5
s(g1085
I42
g1086
Vinsert
p26369
I32
VMethodInvocation
p26370
tp26371
F1.25
s(g24151
I42
g24152
Vinsert
p26372
I42
VSimpleName: accept
p26373
tp26374
I2
s(g3938
I42
g3939
Vinsert
p26375
I58
VVariableDeclarationExpression
p26376
tp26377
I1
s(g441
I42
g442
Vinsert
p26378
I42
VSimpleName: LenientDoubleCallbackAsyncSpanStore
p26379
tp26380
I1
s(g17820
I42
g17821
Vinsert
p26381
I42
VSimpleName: QueryRequest
p26382
tp26383
I2
s(g2046
I42
g2047
Vinsert
p26384
I42
VSimpleName: String
p26385
tp26386
F2.25
s(g1308
I42
g1309
Vinsert
p26387
I34
VNumberLiteral: 0
p26388
tp26389
I1
s(g3707
I42
g3708
Vinsert
p26390
I42
VSimpleName: ipv4
p26391
tp26392
I1
s(g14269
I42
g14270
Vinsert
p26393
I4
VArrayInitializer
p26394
tp26395
I1
s(g7582
I42
g7583
Vinsert
p26396
I45
VStringLiteral: "  }\u005cn"
p26397
tp26398
I1
s(g19403
I42
g19404
Vinsert
p26399
I42
VSimpleName: hasNext
p26400
tp26401
I1
s(g10089
I42
g10090
Vinsert
p26402
I42
VSimpleName: span
p26403
tp26404
I1
s(g1523
I42
g1524
Vinsert
p26405
I74
VParameterizedType: List<T>
p26406
tp26407
I1
s(g2959
I42
g2960
Vinsert
p26408
I32
VMethodInvocation
p26409
tp26410
F43.0
s(g4557
I42
g4558
Vinsert
p26411
I42
VSimpleName: addQueryParameter
p26412
tp26413
I1
s(g13924
I42
g13925
Vinsert
p26414
I42
VSimpleName: ex
p26415
tp26416
I6
s(g352
I42
g353
Vinsert
p26417
I42
VSimpleName: WEB_ENDPOINT
p26418
tp26419
I2
s(g3041
I42
g3042
Vinsert
p26420
I21
VExpressionStatement
p26421
tp26422
I2
s(g15097
I42
g15098
Vinsert
p26423
I60
VVariableDeclarationStatement
p26424
tp26425
I1
s(Vinsert
p26426
I42
VSimpleName: get
p26427
Vinsert
p26428
I74
VParameterizedType: Pair<Long>
p26429
tp26430
F0.25
s(g4639
I42
g4640
Vinsert
p26431
I42
VSimpleName: JsonElement
p26432
tp26433
F0.25
s(g8707
I42
g8708
Vinsert
p26434
I42
VSimpleName: assertThat
p26435
tp26436
I1
s(g4319
I42
g4320
Vinsert
p26437
I45
VStringLiteral: "$.['gauge.zipkin_collector.message_bytes.http']"
p26438
tp26439
I1
s(g1469
I42
g1470
Vinsert
p26440
I42
VSimpleName: traceIdLow
p26441
tp26442
F1.25
s(g2949
I42
g2950
Vinsert
p26443
I37
VPostfixExpression: ++
p26444
tp26445
I4
s(g7959
I42
g7960
Vinsert
p26446
I43
VSimpleType: S
p26447
tp26448
I1
s(g631
I42
g632
Vinsert
p26449
I42
VSimpleName: delegate
p26450
tp26451
I1
s(g4415
I42
g4416
Vinsert
p26452
I14
VClassInstanceCreation
p26453
tp26454
I2
s(g11617
I42
g11618
Vinsert
p26455
I42
VSimpleName: DependencyLinkSpan
p26456
tp26457
I1
s(g4407
I42
g4408
Vinsert
p26458
I66
VTextElement:  
p26459
tp26460
F0.25
s(g3009
I42
g3010
Vinsert
p26461
I42
VSimpleName: AsyncToBlockingSpanStoreAdapter
p26462
tp26463
F0.25
s(g3520
I42
g3521
Vinsert
p26464
I59
VVariableDeclarationFragment
p26465
tp26466
I1
s(g14635
I42
g14636
Vinsert
p26467
I60
VVariableDeclarationStatement
p26468
tp26469
I1
s(g4848
I42
g4849
Vinsert
p26470
I42
VSimpleName: underlying
p26471
tp26472
I1
s(g6129
I42
g6130
Vinsert
p26473
I42
VSimpleName: ElasticsearchStorage
p26474
tp26475
F0.25
s(g3136
I42
g3137
Vinsert
p26476
I85
VDimension
p26477
tp26478
I1
s(g9047
I42
g9048
Vinsert
p26479
I42
VSimpleName: startTs
p26480
tp26481
I2
s(g6781
I42
g6782
Vinsert
p26482
I42
VSimpleName: closer
p26483
tp26484
I2
s(g2704
I42
g2705
Vinsert
p26485
I59
VVariableDeclarationFragment
p26486
tp26487
I1
s(g1085
I42
g1086
Vinsert
p26488
I9
VBooleanLiteral: false
p26489
tp26490
I1
s(g4446
I42
g4447
Vinsert
p26491
I42
VSimpleName: JsonReaders
p26492
tp26493
I1
s(g2260
I42
g2261
Vinsert
p26494
I43
VSimpleType: Map
p26495
tp26496
F0.25
s(g977
I42
g978
Vinsert
p26497
I42
VSimpleName: traceIndexFetchSize
p26498
tp26499
F1.25
s(g25865
I42
g25866
Vinsert
p26500
I42
VSimpleName: SERVER_SEND
p26501
tp26502
I1
s(g1607
I42
g1608
Vinsert
p26503
I29
VJavadoc
p26504
tp26505
F0.25
s(g16965
I42
g16966
Vinsert
p26506
I26
VImportDeclaration
p26507
tp26508
F0.5
s(g1074
I42
g1075
Vinsert
p26509
I43
VSimpleType: List
p26510
tp26511
F1.25
s(g1474
I42
g1475
Vinsert
p26512
I43
VSimpleType: Annotation
p26513
tp26514
F0.25
s(g2870
I42
g2871
Vinsert
p26515
I42
VSimpleName: Test
p26516
tp26517
F0.25
s(g2833
I42
g2834
Vinsert
p26518
I43
VSimpleType: Callback
p26519
tp26520
F0.25
s(g5221
I42
g5222
Vinsert
p26521
I42
VSimpleName: type
p26522
tp26523
F0.25
s(g7217
I42
g7218
Vinsert
p26524
I4
VArrayInitializer
p26525
tp26526
I1
s(g1974
I42
g1975
Vinsert
p26527
I42
VSimpleName: dateComma
p26528
tp26529
I1
s(g13444
I42
g13445
Vinsert
p26530
I42
VSimpleName: CollectorMetrics
p26531
tp26532
I1
s(g4773
I42
g4774
Vinsert
p26533
I60
VVariableDeclarationStatement
p26534
tp26535
I5
s(g5349
I42
g5350
Vinsert
p26536
I40
VQualifiedName: value.timestamp
p26537
tp26538
I1
s(g2054
I42
g2055
Vinsert
p26539
I13
VCharacterLiteral: '\u005c\u005c'
p26540
tp26541
I1
s(g3823
I42
g3824
Vinsert
p26542
I42
VSimpleName: InetAddress
p26543
tp26544
F0.25
s(g10770
I42
g10771
Vinsert
p26545
I42
VSimpleName: run
p26546
tp26547
F0.25
s(g12875
I42
g12876
Vinsert
p26548
I43
VSimpleType: Double
p26549
tp26550
I1
s(g4840
I42
g4841
Vinsert
p26551
I22
VFieldAccess
p26552
tp26553
F0.25
s(g8663
I42
g8664
Vinsert
p26554
I42
VSimpleName: ElasticsearchStorage
p26555
tp26556
F1.25
s(g1377
I42
g1378
Vinsert
p26557
I13
VCharacterLiteral: 'c'
p26558
tp26559
I1
s(g6984
I42
g6985
Vinsert
p26560
I32
VMethodInvocation
p26561
tp26562
I2
s(g4152
I42
g4153
Vinsert
p26563
I42
VSimpleName: spanStore
p26564
tp26565
I1
s(g22379
I42
g22380
Vinsert
p26566
I42
VSimpleName: port
p26567
tp26568
F0.25
s(g1027
I42
g1028
Vinsert
p26569
I42
VSimpleName: store
p26570
tp26571
I1
s(g9587
I42
g9588
Vinsert
p26572
I45
VStringLiteral: "  \u005c"id\u005c": \u005c"6b221d5bc9e6496c\u005c",\u005cn"
p26573
tp26574
I2
s(g1861
I42
g1862
Vinsert
p26575
I8
VBlock
p26576
tp26577
I12
s(g4399
I42
g4400
Vinsert
p26578
I32
VMethodInvocation
p26579
tp26580
I5
s(g4972
I42
g4973
Vinsert
p26581
I74
VParameterizedType: List<String>
p26582
tp26583
I1
s(g1260
I42
g1261
Vinsert
p26584
I42
VSimpleName: address
p26585
tp26586
I1
s(g5410
I42
g5411
Vinsert
p26587
I83
VModifier: public
p26588
tp26589
F1.0
s(g6094
I42
g6095
Vinsert
p26590
I60
VVariableDeclarationStatement
p26591
tp26592
I1
s(g1551
I42
g1552
Vinsert
p26593
I27
VInfixExpression: <<
p26594
tp26595
I1
s(g6758
I42
g6759
Vinsert
p26596
I42
VSimpleName: List
p26597
tp26598
I1
s(g2627
I42
g2628
Vinsert
p26599
I42
VSimpleName: Response
p26600
tp26601
I1
s(g214
I42
g215
Vinsert
p26602
I7
VAssignment: +=
p26603
tp26604
I2
s(g4301
I42
g4302
Vinsert
p26605
I38
VPrefixExpression: !
p26606
tp26607
I1
s(g22393
I42
g22394
Vinsert
p26608
I42
VSimpleName: forEach
p26609
tp26610
I1
s(g3268
I42
g3269
Vinsert
p26611
I85
VDimension
p26612
tp26613
F0.25
s(g3740
I42
g3741
Vinsert
p26614
I42
VSimpleName: assertThat
p26615
tp26616
I1
s(g1066
I42
g1067
Vinsert
p26617
I42
VSimpleName: timestampMillis
p26618
tp26619
I2
s(g1886
I42
g1887
Vinsert
p26620
I1
VAnonymousClassDeclaration
p26621
tp26622
I1
s(g7380
I42
g7381
Vinsert
p26623
I43
VSimpleType: Builder
p26624
tp26625
F0.25
s(g2237
I42
g2238
Vinsert
p26626
I42
VSimpleName: followRedirects
p26627
tp26628
I1
s(g8842
I42
g8843
Vinsert
p26629
I42
VSimpleName: thrifts
p26630
tp26631
I2
s(g3348
I42
g3349
Vinsert
p26632
I42
VSimpleName: ElasticsearchConfig
p26633
tp26634
I1
s(g26
I42
g27
Vinsert
p26635
I42
VSimpleName: LinkedHashSet
p26636
tp26637
I1
s(g1944
I42
g1945
Vinsert
p26638
I42
VSimpleName: StorageComponent
p26639
tp26640
F0.5
s(g25865
I42
g25866
Vinsert
p26641
I42
VSimpleName: WEB_SPAN_ID
p26642
tp26643
I1
s(g372
I42
g373
Vinsert
p26644
I43
VSimpleType: String
p26645
tp26646
I1
s(g3125
I42
g3126
Vinsert
p26647
I7
VAssignment: =
p26648
tp26649
I1
s(g6894
I42
g6895
Vinsert
p26650
I42
VSimpleName: input
p26651
tp26652
F0.25
s(g18029
I42
g18030
Vinsert
p26653
I66
VTextElement: service per millisecond.
p26654
tp26655
F0.25
s(g2156
I42
g2157
Vinsert
p26656
I8
VBlock
p26657
tp26658
I1
s(g2781
I42
g2782
Vinsert
p26659
I43
VSimpleType: Endpoint
p26660
tp26661
F2.25
s(g4768
I42
g4769
Vinsert
p26662
I42
VSimpleName: getHits
p26663
tp26664
I1
s(g2265
I42
g2266
Vinsert
p26665
I42
VSimpleName: trace
p26666
tp26667
I5
s(g6426
I42
g6427
Vinsert
p26668
I42
VSimpleName: J
p26669
tp26670
I1
s(g4285
I42
g4286
Vinsert
p26671
I74
VParameterizedType: ListenableFutureCall<List<DependencyLink>>
p26672
tp26673
I1
s(g19403
I42
g19404
Vinsert
p26674
I21
VExpressionStatement
p26675
tp26676
I2
s(g1921
I42
g1922
Vinsert
p26677
I61
VWhileStatement
p26678
tp26679
I1
s(g1836
I42
g1837
Vinsert
p26680
I42
VSimpleName: assertThat
p26681
tp26682
I3
s(g5873
I42
g5874
Vinsert
p26683
I11
VCastExpression
p26684
tp26685
I1
s(g5454
I42
g5455
Vinsert
p26686
I42
VSimpleName: ts
p26687
tp26688
I3
s(g4114
I42
g4115
Vinsert
p26689
I42
VSimpleName: fine
p26690
tp26691
I3
s(g3009
I42
g3010
Vinsert
p26692
I22
VFieldAccess
p26693
tp26694
I3
s(g3150
I42
g3151
Vinsert
p26695
I42
VSimpleName: Character
p26696
tp26697
I1
s(g9174
I42
g9175
Vinsert
p26698
I43
VSimpleType: String
p26699
tp26700
I2
s(g2005
I42
g2006
Vinsert
p26701
I32
VMethodInvocation
p26702
tp26703
I2
s(g1164
I42
g1165
Vinsert
p26704
I34
VNumberLiteral: 0L
p26705
tp26706
I1
s(g3735
I42
g3736
Vinsert
p26707
I44
VSingleVariableDeclaration
p26708
tp26709
F0.5
s(g1247
I42
g1248
Vinsert
p26710
I43
VSimpleType: ResultSetFuture
p26711
tp26712
F0.5
s(g3515
I42
g3516
Vinsert
p26713
I42
VSimpleName: String
p26714
tp26715
F1.25
s(g7482
I42
g7483
Vinsert
p26716
I45
VStringLiteral: "lookback"
p26717
tp26718
F0.25
s(g1816
I42
g1817
Vinsert
p26719
I8
VBlock
p26720
tp26721
I1
s(g1146
I42
g1147
Vinsert
p26722
I43
VSimpleType: TraceIdUDT
p26723
tp26724
I1
s(g6804
I42
g6805
Vinsert
p26725
I39
VPrimitiveType: boolean
p26726
tp26727
F0.25
s(g762
I42
g763
Vinsert
p26728
I27
VInfixExpression: !=
p26729
tp26730
I1
s(g8272
I42
g8273
Vinsert
p26731
I42
VSimpleName: unwrapsJsonError
p26732
tp26733
F0.25
s(g7768
I42
g7769
Vinsert
p26734
I33
VNullLiteral
p26735
tp26736
I2
s(g6776
I42
g6777
Vinsert
p26737
I83
VModifier: protected
p26738
tp26739
F0.75
s(g5221
I42
g5222
Vinsert
p26740
I31
VMethodDeclaration
p26741
tp26742
F0.25
s(g5915
I42
g5916
Vinsert
p26743
I42
VSimpleName: assertThat
p26744
tp26745
I1
s(g181
I42
g182
Vinsert
p26746
I83
VModifier: public
p26747
tp26748
F1.0
s(g1944
I42
g1945
Vinsert
p26749
I7
VAssignment: =
p26750
tp26751
F2.5
s(g20734
I42
g20735
Vinsert
p26752
I74
VParameterizedType: Collection<String>
p26753
tp26754
I1
s(g3017
I42
g3018
Vinsert
p26755
I21
VExpressionStatement
p26756
tp26757
I1
s(g5902
I42
g5903
Vinsert
p26758
I44
VSingleVariableDeclaration
p26759
tp26760
F0.75
s(g2823
I42
g2824
Vinsert
p26761
I7
VAssignment: =
p26762
tp26763
I1
s(g12014
I42
g12015
Vinsert
p26764
I34
VNumberLiteral: 1000003
p26765
tp26766
I4
s(g5264
I42
g5265
Vinsert
p26767
I8
VBlock
p26768
tp26769
I4
s(g2436
I42
g2437
Vinsert
p26770
I8
VBlock
p26771
tp26772
I1
s(g10659
I42
g10660
Vinsert
p26773
I42
VSimpleName: SearchRequest
p26774
tp26775
I1
s(Vinsert
p26776
I42
VSimpleName: traceId
p26777
Vinsert
p26778
I42
VSimpleName: asList
p26779
tp26780
I1
s(g6522
I42
g6523
Vinsert
p26781
I43
VSimpleType: Object
p26782
tp26783
F0.5
s(g4085
I42
g4086
Vinsert
p26784
I27
VInfixExpression: -
p26785
tp26786
I1
s(g749
I42
g750
Vinsert
p26787
I34
VNumberLiteral: 1L
p26788
tp26789
I5
s(g2579
I42
g2580
Vinsert
p26790
I42
VSimpleName: result
p26791
tp26792
I4
s(g7582
I42
g7583
Vinsert
p26793
I21
VExpressionStatement
p26794
tp26795
I3
s(g7197
I42
g7198
Vinsert
p26796
I21
VExpressionStatement
p26797
tp26798
F24.25
s(g1017
I42
g1018
Vinsert
p26799
I45
VStringLiteral: "yak"
p26800
tp26801
F0.25
s(g234
I42
g235
Vinsert
p26802
I42
VSimpleName: getIndexTemplates
p26803
tp26804
I1
s(g6984
I42
g6985
Vinsert
p26805
I31
VMethodDeclaration
p26806
tp26807
F0.25
s(g7654
I42
g7655
Vinsert
p26808
I39
VPrimitiveType: void
p26809
tp26810
F3.5
s(g1974
I42
g1975
Vinsert
p26811
I34
VNumberLiteral: 0
p26812
tp26813
I1
s(g934
I42
g935
Vinsert
p26814
I42
VSimpleName: ipv6
p26815
tp26816
F0.25
s(g2755
I42
g2756
Vinsert
p26817
I42
VSimpleName: legacyReadsEnabled
p26818
tp26819
F0.75
s(g385
I42
g386
Vinsert
p26820
I42
VSimpleName: reader
p26821
tp26822
F0.25
s(g886
I42
g887
Vinsert
p26823
I21
VExpressionStatement
p26824
tp26825
I1
s(g949
I42
g950
Vinsert
p26826
I52
VThisExpression
p26827
tp26828
F0.25
s(g2925
I42
g2926
Vinsert
p26829
I77
VNormalAnnotation
p26830
tp26831
F0.25
s(g2875
I42
g2876
Vinsert
p26832
I8
VBlock
p26833
tp26834
I1
s(g20316
I42
g20317
Vinsert
p26835
I42
VSimpleName: IOException
p26836
tp26837
F0.25
s(Vinsert
p26838
I42
VSimpleName: get
p26839
Vinsert
p26840
I5
VArrayType: Span[]
p26841
tp26842
I1
s(g4488
I42
g4489
Vinsert
p26843
I42
VSimpleName: request
p26844
tp26845
I2
s(g3046
I42
g3047
Vinsert
p26846
I41
VReturnStatement
p26847
tp26848
I1
s(g362
I42
g363
Vinsert
p26849
I8
VBlock
p26850
tp26851
I10
s(g9977
I42
g9978
Vinsert
p26852
I39
VPrimitiveType: long
p26853
tp26854
I1
s(g1395
I42
g1396
Vinsert
p26855
I16
VConditionalExpression
p26856
tp26857
I1
s(g7627
I42
g7628
Vinsert
p26858
I42
VSimpleName: ref
p26859
tp26860
I1
s(g4576
I42
g4577
Vinsert
p26861
I42
VSimpleName: Node
p26862
tp26863
F1.25
s(g6763
I42
g6764
Vinsert
p26864
I42
VSimpleName: ipv4
p26865
tp26866
I1
s(g2880
I42
g2881
Vinsert
p26867
I42
VSimpleName: CassandraStorage
p26868
tp26869
F0.25
s(g6454
I42
g6455
Vinsert
p26870
I42
VSimpleName: nextName
p26871
tp26872
I3
s(g3136
I42
g3137
Vinsert
p26873
I42
VSimpleName: ip_string_ipv6
p26874
tp26875
F0.25
s(g5435
I42
g5436
Vinsert
p26876
I27
VInfixExpression: &&
p26877
tp26878
I1
s(g16965
I42
g16966
Vinsert
p26879
I40
VQualifiedName: java.util.Collections
p26880
tp26881
F0.5
s(g5616
I42
g5617
Vinsert
p26882
I42
VSimpleName: id
p26883
tp26884
I1
s(g3398
I42
g3399
Vinsert
p26885
I42
VSimpleName: doAnswer
p26886
tp26887
I1
s(g1438
I42
g1439
Vinsert
p26888
I42
VSimpleName: readUtf8
p26889
tp26890
I1
s(g9881
I42
g9882
Vinsert
p26891
I42
VSimpleName: caService
p26892
tp26893
I1
s(g3707
I42
g3708
Vinsert
p26894
I59
VVariableDeclarationFragment
p26895
tp26896
I1
s(g16138
I42
g16139
Vinsert
p26897
I42
VSimpleName: config
p26898
tp26899
I2
s(g3804
I42
g3805
Vinsert
p26900
I25
VIfStatement
p26901
tp26902
I1
s(g1007
I42
g1008
Vinsert
p26903
I32
VMethodInvocation
p26904
tp26905
I1
s(g8294
I42
g8295
Vinsert
p26906
I43
VSimpleType: NullPointerException
p26907
tp26908
I1
s(g654
I42
g655
Vinsert
p26909
I8
VBlock
p26910
tp26911
I3
s(g12399
I42
g12400
Vinsert
p26912
I41
VReturnStatement
p26913
tp26914
I1
s(Vinsert
p26915
I42
VSimpleName: get
p26916
Vinsert
p26917
I38
VPrefixExpression: !
p26918
tp26919
I1
s(g11001
I42
g11002
Vinsert
p26920
I42
VSimpleName: body
p26921
tp26922
F0.25
s(g11317
I42
g11318
Vinsert
p26923
I42
VSimpleName: JsonReader
p26924
tp26925
F0.5
s(g1926
I42
g1927
Vinsert
p26926
I40
VQualifiedName: spansInJson.length
p26927
tp26928
I1
s(g1207
I42
g1208
Vinsert
p26929
I86
VLambdaExpression
p26930
tp26931
I1
s(g6315
I42
g6316
Vinsert
p26932
I40
VQualifiedName: ZIPKIN_SPANS.TRACE_ID_HIGH
p26933
tp26934
F0.25
s(g5780
I42
g5781
Vinsert
p26935
I21
VExpressionStatement
p26936
tp26937
F9.25
s(g7913
I42
g7914
Vinsert
p26938
I42
VSimpleName: codec
p26939
tp26940
I3
s(g1841
I42
g1842
Vinsert
p26941
I42
VSimpleName: decentErrorMessageOnMalformedInput_spans
p26942
tp26943
F0.25
s(g572
I42
g573
Vinsert
p26944
I60
VVariableDeclarationStatement
p26945
tp26946
I1
s(g6867
I42
g6868
Vinsert
p26947
I42
VSimpleName: appendSpanIds
p26948
tp26949
I1
s(g2712
I42
g2713
Vinsert
p26950
I14
VClassInstanceCreation
p26951
tp26952
I2
s(g11429
I42
g11430
Vinsert
p26953
I74
VParameterizedType: List<String>
p26954
tp26955
F0.5
s(g9881
I42
g9882
Vinsert
p26956
I10
VBreakStatement
p26957
tp26958
I1
s(g2727
I42
g2728
Vinsert
p26959
I83
VModifier: public
p26960
tp26961
F0.25
s(g5510
I42
g5511
Vinsert
p26962
I42
VSimpleName: reader
p26963
tp26964
I2
s(g7305
I42
g7306
Vinsert
p26965
I32
VMethodInvocation
p26966
tp26967
I7
s(g156
I42
g157
Vinsert
p26968
I83
VModifier: public
p26969
tp26970
F0.5
s(g116
I42
g117
Vinsert
p26971
I10
VBreakStatement
p26972
tp26973
I1
s(g1367
I42
g1368
Vinsert
p26974
I78
VMarkerAnnotation
p26975
tp26976
F0.25
s(g5533
I42
g5534
Vinsert
p26977
I43
VSimpleType: Exception
p26978
tp26979
F0.25
s(g4114
I42
g4115
Vinsert
p26980
I45
VStringLiteral: "linking trace "
p26981
tp26982
I1
s(g3348
I42
g3349
Vinsert
p26983
I42
VSimpleName: elasticsearch
p26984
tp26985
F0.25
s(g3541
I42
g3542
Vinsert
p26986
I42
VSimpleName: DeduplicatingExecutor
p26987
tp26988
F0.25
s(g13780
I42
g13781
Vinsert
p26989
I42
VSimpleName: QUERY_ENDPOINT
p26990
tp26991
I1
s(g552
I42
g553
Vinsert
p26992
I37
VPostfixExpression: ++
p26993
tp26994
I2
s(g1939
I42
g1940
Vinsert
p26995
I57
VTypeLiteral
p26996
tp26997
I2
s(g4330
I42
g4331
Vinsert
p26998
I43
VSimpleType: Logger
p26999
tp27000
I1
s(g783
I42
g784
Vinsert
p27001
I27
VInfixExpression: ==
p27002
tp27003
I2
s(g8190
I42
g8191
Vinsert
p27004
I42
VSimpleName: BinaryAnnotation
p27005
tp27006
I2
s(g4967
I42
g4968
Vinsert
p27007
I42
VSimpleName: assertThat
p27008
tp27009
I1
s(g4959
I42
g4960
Vinsert
p27010
I43
VSimpleType: String
p27011
tp27012
I1
s(g714
I42
g715
Vinsert
p27013
I57
VTypeLiteral
p27014
tp27015
I1
s(g456
I42
g457
Vinsert
p27016
I42
VSimpleName: IllegalStateException
p27017
tp27018
I1
s(g2833
I42
g2834
Vinsert
p27019
I42
VSimpleName: Override
p27020
tp27021
F0.5
s(g2539
I42
g2540
Vinsert
p27022
I21
VExpressionStatement
p27023
tp27024
I1
s(g537
I42
g538
Vinsert
p27025
I8
VBlock
p27026
tp27027
I1
s(g5053
I42
g5054
Vinsert
p27028
I42
VSimpleName: Builder
p27029
tp27030
F0.25
s(g891
I42
g892
Vinsert
p27031
I42
VSimpleName: PartitionKeyToTraceId
p27032
tp27033
I1
s(g106
I42
g107
Vinsert
p27034
I42
VSimpleName: stmt
p27035
tp27036
F1.25
s(g1704
I42
g1705
Vinsert
p27037
I43
VSimpleType: ImmutableSet
p27038
tp27039
I2
s(g8850
I42
g8851
Vinsert
p27040
I42
VSimpleName: Span
p27041
tp27042
F0.25
s(g3083
I42
g3084
Vinsert
p27043
I83
VModifier: final
p27044
tp27045
I1
s(g10075
I42
g10076
Vinsert
p27046
I42
VSimpleName: create
p27047
tp27048
F0.25
s(g14004
I42
g14005
Vinsert
p27049
I42
VSimpleName: value
p27050
tp27051
F0.5
s(g613
I42
g614
Vinsert
p27052
I42
VSimpleName: AsyncSpan2ConsumerAdapter
p27053
tp27054
I1
s(g4446
I42
g4447
Vinsert
p27055
I42
VSimpleName: Buffer
p27056
tp27057
F4.25
s(g91
I42
g92
Vinsert
p27058
I40
VQualifiedName: Type.STRING.value
p27059
tp27060
I1
s(g2755
I42
g2756
Vinsert
p27061
I52
VThisExpression
p27062
tp27063
F0.25
s(g12697
I42
g12698
Vinsert
p27064
I74
VParameterizedType: List<Span>
p27065
tp27066
I1
s(Vinsert
p27067
I42
VSimpleName: traceId
p27068
Vinsert
p27069
I42
VSimpleName: zipkinWeb
p27070
tp27071
I1
s(g871
I42
g872
Vinsert
p27072
I42
VSimpleName: get
p27073
tp27074
I1
s(g339
I42
g340
Vinsert
p27075
I43
VSimpleType: TestingCluster
p27076
tp27077
I1
s(g5634
I42
g5635
Vinsert
p27078
I22
VFieldAccess
p27079
tp27080
I2
s(g2870
I42
g2871
Vinsert
p27081
I42
VSimpleName: getDays_doesntLookEarlierThan1970
p27082
tp27083
F0.25
s(g3793
I42
g3794
Vinsert
p27084
I59
VVariableDeclarationFragment
p27085
tp27086
I25
s(g146
I42
g147
Vinsert
p27087
I42
VSimpleName: toArray
p27088
tp27089
I1
s(g1017
I42
g1018
Vinsert
p27090
I45
VStringLiteral: "methodcall"
p27091
tp27092
F0.25
s(g4095
I42
g4096
Vinsert
p27093
I8
VBlock
p27094
tp27095
I1
s(g7768
I42
g7769
Vinsert
p27096
I27
VInfixExpression: !=
p27097
tp27098
I2
s(g595
I42
g596
Vinsert
p27099
I42
VSimpleName: isLoggable
p27100
tp27101
I1
s(g1856
I42
g1857
Vinsert
p27102
I27
VInfixExpression: !=
p27103
tp27104
F1.25
s(g4280
I42
g4281
Vinsert
p27105
I60
VVariableDeclarationStatement
p27106
tp27107
I1
s(g4835
I42
g4836
Vinsert
p27108
I42
VSimpleName: addEnvironment
p27109
tp27110
I18
s(g10123
I42
g10124
Vinsert
p27111
I41
VReturnStatement
p27112
tp27113
I1
s(g1293
I42
g1294
Vinsert
p27114
I4
VArrayInitializer
p27115
tp27116
F0.25
s(g1428
I42
g1429
Vinsert
p27117
I42
VSimpleName: RequestBody
p27118
tp27119
I1
s(Vinsert
p27120
I42
VSimpleName: putTrace
p27121
Vinsert
p27122
I45
VStringLiteral: "service2"
p27123
tp27124
I1
s(g6071
I42
g6072
Vinsert
p27125
I60
VVariableDeclarationStatement
p27126
tp27127
I1
s(g1612
I42
g1613
Vinsert
p27128
I33
VNullLiteral
p27129
tp27130
I4
s(g8765
I42
g8766
Vinsert
p27131
I42
VSimpleName: logger
p27132
tp27133
I1
s(g1464
I42
g1465
Vinsert
p27134
I66
VTextElement: queries
p27135
tp27136
I1
s(g4587
I42
g4588
Vinsert
p27137
I57
VTypeLiteral
p27138
tp27139
F1.5
s(g8027
I42
g8028
Vinsert
p27140
I42
VSimpleName: start
p27141
tp27142
I1
s(g816
I42
g817
Vinsert
p27143
I14
VClassInstanceCreation
p27144
tp27145
I2
s(g9977
I42
g9978
Vinsert
p27146
I42
VSimpleName: id
p27147
tp27148
I1
s(g1469
I42
g1470
Vinsert
p27149
I8
VBlock
p27150
tp27151
I2
s(g3438
I42
g3439
Vinsert
p27152
I8
VBlock
p27153
tp27154
I1
s(g4095
I42
g4096
Vinsert
p27155
I14
VClassInstanceCreation
p27156
tp27157
I1
s(g7752
I42
g7753
Vinsert
p27158
I34
VNumberLiteral: 0
p27159
tp27160
I3
s(g2704
I42
g2705
Vinsert
p27161
I42
VSimpleName: sslClient
p27162
tp27163
I1
s(g3004
I42
g3005
Vinsert
p27164
I40
VQualifiedName: zipkin.storage.StorageComponent
p27165
tp27166
F0.75
s(Vinsert
p27167
I42
VSimpleName: equals
p27168
Vinsert
p27169
I40
VQualifiedName: annotation.endpoint
p27170
tp27171
I1
s(g1916
I42
g1917
Vinsert
p27172
I43
VSimpleType: AnnotatedTypeMetadata
p27173
tp27174
F0.25
s(g11833
I42
g11834
Vinsert
p27175
I42
VSimpleName: ENDPOINT_SERVICE_NAME
p27176
tp27177
I1
s(g14195
I42
g14196
Vinsert
p27178
I42
VSimpleName: LazyCloseable
p27179
tp27180
F0.25
s(g10551
I42
g10552
Vinsert
p27181
I42
VSimpleName: idString
p27182
tp27183
F0.25
s(g289
I42
g290
Vinsert
p27184
I42
VSimpleName: body
p27185
tp27186
I2
s(g7305
I42
g7306
Vinsert
p27187
I42
VSimpleName: Buffer
p27188
tp27189
I5
s(g856
I42
g857
Vinsert
p27190
I59
VVariableDeclarationFragment
p27191
tp27192
I1
s(g1390
I42
g1391
Vinsert
p27193
I22
VFieldAccess
p27194
tp27195
F0.75
s(g2046
I42
g2047
Vinsert
p27196
I42
VSimpleName: setDomain
p27197
tp27198
F0.25
s(g1177
I42
g1178
Vinsert
p27199
I42
VSimpleName: CassandraDependenciesWriter
p27200
tp27201
I1
s(g8135
I42
g8136
Vinsert
p27202
I42
VSimpleName: keyValue
p27203
tp27204
I1
s(g2763
I42
g2764
Vinsert
p27205
I14
VClassInstanceCreation
p27206
tp27207
I2
s(g4280
I42
g4281
Vinsert
p27208
I42
VSimpleName: Node
p27209
tp27210
I2
s(g3094
I42
g3095
Vinsert
p27211
I42
VSimpleName: List
p27212
tp27213
F0.25
s(g9215
I42
g9216
Vinsert
p27214
I59
VVariableDeclarationFragment
p27215
tp27216
I3
s(g836
I42
g837
Vinsert
p27217
I42
VSimpleName: VOID
p27218
tp27219
I1
s(g6000
I42
g6001
Vinsert
p27220
I41
VReturnStatement
p27221
tp27222
I3
s(g2959
I42
g2960
Vinsert
p27223
I43
VSimpleType: String
p27224
tp27225
I3
s(g1644
I42
g1645
Vinsert
p27226
I45
VStringLiteral: "sampler"
p27227
tp27228
F0.25
s(g7134
I42
g7135
Vinsert
p27229
I39
VPrimitiveType: char
p27230
tp27231
F0.25
s(g7450
I42
g7451
Vinsert
p27232
I45
VStringLiteral: "}"
p27233
tp27234
I1
s(g3987
I42
g3988
Vinsert
p27235
I42
VSimpleName: list
p27236
tp27237
I2
s(g2388
I42
g2389
Vinsert
p27238
I21
VExpressionStatement
p27239
tp27240
I5
s(g939
I42
g940
Vinsert
p27241
I42
VSimpleName: asyncSpanConsumer
p27242
tp27243
I2
s(g4480
I42
g4481
Vinsert
p27244
I43
VSimpleType: Span
p27245
tp27246
F0.25
s(g2145
I42
g2146
Vinsert
p27247
I42
VSimpleName: bytes
p27248
tp27249
F0.25
s(g1207
I42
g1208
Vinsert
p27250
I59
VVariableDeclarationFragment
p27251
tp27252
I1
s(g1602
I42
g1603
Vinsert
p27253
I42
VSimpleName: builder
p27254
tp27255
I1
s(g395
I42
g396
Vinsert
p27256
I43
VSimpleType: JsonAdapter
p27257
tp27258
I1
s(g4673
I42
g4674
Vinsert
p27259
I8
VBlock
p27260
tp27261
I2
s(g3644
I42
g3645
Vinsert
p27262
I40
VQualifiedName: zipkin.Endpoint
p27263
tp27264
F0.25
s(g400
I42
g401
Vinsert
p27265
I45
VStringLiteral: "    }\u005cn"
p27266
tp27267
I1
s(g10482
I42
g10483
Vinsert
p27268
I42
VSimpleName: AnnotationConfigApplicationContext
p27269
tp27270
I14
s(g1821
I42
g1822
Vinsert
p27271
I44
VSingleVariableDeclaration
p27272
tp27273
F0.25
s(g8027
I42
g8028
Vinsert
p27274
I21
VExpressionStatement
p27275
tp27276
I2
s(g11001
I42
g11002
Vinsert
p27277
I43
VSimpleType: String
p27278
tp27279
F1.5
s(g9867
I42
g9868
Vinsert
p27280
I42
VSimpleName: container
p27281
tp27282
I1
s(g1795
I42
g1796
Vinsert
p27283
I14
VClassInstanceCreation
p27284
tp27285
F0.25
s(g1489
I42
g1490
Vinsert
p27286
I41
VReturnStatement
p27287
tp27288
I1
s(g4407
I42
g4408
Vinsert
p27289
I83
VModifier: public
p27290
tp27291
F0.25
s(g866
I42
g867
Vinsert
p27292
I42
VSimpleName: Session
p27293
tp27294
F1.5
s(g5831
I42
g5832
Vinsert
p27295
I42
VSimpleName: dependencyLinkerFields
p27296
tp27297
F0.25
s(g13430
I42
g13431
Vinsert
p27298
I42
VSimpleName: JDBCTestGraph
p27299
tp27300
F0.5
s(g1058
I42
g1059
Vinsert
p27301
I42
VSimpleName: InsertServiceSpan
p27302
tp27303
F1.25
s(g5491
I42
g5492
Vinsert
p27304
I42
VSimpleName: SPAN
p27305
tp27306
I1
s(g7331
I42
g7332
Vinsert
p27307
I32
VMethodInvocation
p27308
tp27309
F4.75
s(g5410
I42
g5411
Vinsert
p27310
I42
VSimpleName: value
p27311
tp27312
F0.5
s(g866
I42
g867
Vinsert
p27313
I31
VMethodDeclaration
p27314
tp27315
F6.0
s(g3828
I42
g3829
Vinsert
p27316
I43
VSimpleType: InMemoryStorage
p27317
tp27318
I1
s(g8375
I42
g8376
Vinsert
p27319
I42
VSimpleName: DependencyLinkSpan
p27320
tp27321
I1
s(g841
I42
g842
Vinsert
p27322
I14
VClassInstanceCreation
p27323
tp27324
I2
s(g6231
I42
g6232
Vinsert
p27325
I42
VSimpleName: Builder
p27326
tp27327
F0.25
s(g3417
I42
g3418
Vinsert
p27328
I42
VSimpleName: indexNameForTimestampRange_other_sameDay
p27329
tp27330
F0.25
s(g5098
I42
g5099
Vinsert
p27331
I8
VBlock
p27332
tp27333
I3
s(g4848
I42
g4849
Vinsert
p27334
I42
VSimpleName: PseudoAddressRecordSet
p27335
tp27336
I1
s(g949
I42
g950
Vinsert
p27337
I39
VPrimitiveType: boolean
p27338
tp27339
F0.25
s(g4301
I42
g4302
Vinsert
p27340
I42
VSimpleName: ancestor
p27341
tp27342
I1
s(g7151
I42
g7152
Vinsert
p27343
I42
VSimpleName: ThriftCodecManager
p27344
tp27345
I1
s(g1045
I42
g1046
Vinsert
p27346
I42
VSimpleName: BinaryAnnotation
p27347
tp27348
F0.25
s(g6315
I42
g6316
Vinsert
p27349
I43
VSimpleType: Field
p27350
tp27351
F0.5
s(g3263
I42
g3264
Vinsert
p27352
I31
VMethodDeclaration
p27353
tp27354
F0.25
s(g13258
I42
g13259
Vinsert
p27355
I42
VSimpleName: it
p27356
tp27357
I3
s(g6371
I42
g6372
Vinsert
p27358
I83
VModifier: public
p27359
tp27360
F0.75
s(g11325
I42
g11326
Vinsert
p27361
I78
VMarkerAnnotation
p27362
tp27363
F0.25
s(g380
I42
g381
Vinsert
p27364
I39
VPrimitiveType: byte
p27365
tp27366
F0.25
s(g4903
I42
g4904
Vinsert
p27367
I42
VSimpleName: doesntStackOverflowOnToBufferWriterBug_Overflow
p27368
tp27369
F0.25
s(g13800
I42
g13801
Vinsert
p27370
I42
VSimpleName: Void
p27371
tp27372
F0.25
s(g9881
I42
g9882
Vinsert
p27373
I42
VSimpleName: key
p27374
tp27375
I1
s(g2350
I42
g2351
Vinsert
p27376
I9
VBooleanLiteral: true
p27377
tp27378
I1
s(g10346
I42
g10347
Vinsert
p27379
I42
VSimpleName: metrics
p27380
tp27381
I1
s(g1007
I42
g1008
Vinsert
p27382
I43
VSimpleType: Span.Builder
p27383
tp27384
I2
s(g1123
I42
g1124
Vinsert
p27385
I42
VSimpleName: virtualHost
p27386
tp27387
F0.25
s(g1767
I42
g1768
Vinsert
p27388
I42
VSimpleName: HttpUrl
p27389
tp27390
I1
s(g507
I42
g508
Vinsert
p27391
I39
VPrimitiveType: void
p27392
tp27393
F0.25
s(g6355
I42
g6356
Vinsert
p27394
I8
VBlock
p27395
tp27396
F0.25
s(g8027
I42
g8028
Vinsert
p27397
I42
VSimpleName: assertThat
p27398
tp27399
I1
s(g1749
I42
g1750
Vinsert
p27400
I42
VSimpleName: Interceptor
p27401
tp27402
I1
s(g1541
I42
g1542
Vinsert
p27403
I42
VSimpleName: set
p27404
tp27405
F0.25
s(g8458
I42
g8459
Vinsert
p27406
I42
VSimpleName: SERVER_RECV
p27407
tp27408
I4
s(g2949
I42
g2950
Vinsert
p27409
I60
VVariableDeclarationStatement
p27410
tp27411
I2
s(g791
I42
g792
Vinsert
p27412
I43
VSimpleType: Args
p27413
tp27414
F0.25
s(g1949
I42
g1950
Vinsert
p27415
I42
VSimpleName: es
p27416
tp27417
F1.25
s(g24966
I42
g24967
Vinsert
p27418
I43
VSimpleType: Cassandra3Storage
p27419
tp27420
F0.25
s(g4275
I42
g4276
Vinsert
p27421
I42
VSimpleName: AtomicInteger
p27422
tp27423
I1
s(g16820
I42
g16821
Vinsert
p27424
I43
VSimpleType: SpanConsumerLogger
p27425
tp27426
F0.25
s(g7019
I42
g7020
Vinsert
p27427
I7
VAssignment: =
p27428
tp27429
F0.25
s(g1954
I42
g1955
Vinsert
p27430
I42
VSimpleName: spanIdToSpans
p27431
tp27432
I2
s(g9706
I42
g9707
Vinsert
p27433
I42
VSimpleName: size
p27434
tp27435
I1
s(g2314
I42
g2315
Vinsert
p27436
I42
VSimpleName: a
p27437
tp27438
I2
s(g4430
I42
g4431
Vinsert
p27439
I42
VSimpleName: Set
p27440
tp27441
I2
s(g10474
I42
g10475
Vinsert
p27442
I45
VStringLiteral: "processing "
p27443
tp27444
I1
s(Vinsert
p27445
I42
VSimpleName: refresh
p27446
Vinsert
p27447
I45
VStringLiteral: "zipkin.storage.elasticsearch.hosts:http://host1:9200"
p27448
tp27449
I1
s(g15846
I42
g15847
Vinsert
p27450
I42
VSimpleName: ZipkinRule
p27451
tp27452
F0.25
s(g567
I42
g568
Vinsert
p27453
I42
VSimpleName: QueryRequest
p27454
tp27455
I1
s(g10551
I42
g10552
Vinsert
p27456
I8
VBlock
p27457
tp27458
F1.25
s(g2614
I42
g2615
Vinsert
p27459
I42
VSimpleName: writeTenClientSpans_json_zipkin2_legacy
p27460
tp27461
F0.25
s(g4557
I42
g4558
Vinsert
p27462
I42
VSimpleName: addPathSegment
p27463
tp27464
I2
s(g5505
I42
g5506
Vinsert
p27465
I42
VSimpleName: lengthWritten
p27466
tp27467
I2
s(g1579
I42
g1580
Vinsert
p27468
I43
VSimpleType: List
p27469
tp27470
F1.25
s(g3740
I42
g3741
Vinsert
p27471
I39
VPrimitiveType: void
p27472
tp27473
F0.25
s(g714
I42
g715
Vinsert
p27474
I32
VMethodInvocation
p27475
tp27476
I6
s(g1964
I42
g1965
Vinsert
p27477
I42
VSimpleName: traceId
p27478
tp27479
I2
s(g385
I42
g386
Vinsert
p27480
I42
VSimpleName: JsonReader
p27481
tp27482
F0.25
s(g11001
I42
g11002
Vinsert
p27483
I44
VSingleVariableDeclaration
p27484
tp27485
F0.75
s(g6000
I42
g6001
Vinsert
p27486
I42
VSimpleName: performAsync
p27487
tp27488
F0.75
s(g7646
I42
g7647
Vinsert
p27489
I42
VSimpleName: TraceIdSampler
p27490
tp27491
F7.0
s(g441
I42
g442
Vinsert
p27492
I32
VMethodInvocation
p27493
tp27494
I4
s(g5938
I42
g5939
Vinsert
p27495
I44
VSingleVariableDeclaration
p27496
tp27497
F0.25
s(g5183
I42
g5184
Vinsert
p27498
I42
VSimpleName: collector
p27499
tp27500
I2
s(g21
I42
g22
Vinsert
p27501
I14
VClassInstanceCreation
p27502
tp27503
I1
s(g3110
I42
g3111
Vinsert
p27504
I42
VSimpleName: Exception
p27505
tp27506
F0.25
s(g1146
I42
g1147
Vinsert
p27507
I42
VSimpleName: traceIdCodec
p27508
tp27509
I1
s(g3022
I42
g3023
Vinsert
p27510
I27
VInfixExpression: ||
p27511
tp27512
I1
s(g156
I42
g157
Vinsert
p27513
I41
VReturnStatement
p27514
tp27515
I3
s(g2398
I42
g2399
Vinsert
p27516
I42
VSimpleName: oldConsumer
p27517
tp27518
F0.25
s(g6750
I42
g6751
Vinsert
p27519
I42
VSimpleName: HttpStorage
p27520
tp27521
I2
s(g6236
I42
g6237
Vinsert
p27522
I42
VSimpleName: dataWatcher
p27523
tp27524
I1
s(g329
I42
g330
Vinsert
p27525
I42
VSimpleName: toLowerHex_whenHigh_32Chars
p27526
tp27527
F0.25
s(g4314
I42
g4315
Vinsert
p27528
I43
VSimpleType: Span2
p27529
tp27530
I1
s(g26426
I42
g26427
Vinsert
p27531
I42
VSimpleName: table
p27532
tp27533
I3
s(g886
I42
g887
Vinsert
p27534
I74
VParameterizedType: Field<?>
p27535
tp27536
I1
s(g1683
I42
g1684
Vinsert
p27537
I8
VBlock
p27538
tp27539
I1
s(g1811
I42
g1812
Vinsert
p27540
I85
VDimension
p27541
tp27542
I6
s(g3150
I42
g3151
Vinsert
p27543
I7
VAssignment: =
p27544
tp27545
I1
s(g3051
I42
g3052
Vinsert
p27546
I27
VInfixExpression: ||
p27547
tp27548
I4
s(g2416
I42
g2417
Vinsert
p27549
I45
VStringLiteral: " not found!"
p27550
tp27551
I1
s(g4830
I42
g4831
Vinsert
p27552
I42
VSimpleName: spanCollector
p27553
tp27554
F1.25
s(g2539
I42
g2540
Vinsert
p27555
I42
VSimpleName: metrics
p27556
tp27557
I1
s(g1866
I42
g1867
Vinsert
p27558
I42
VSimpleName: compute
p27559
tp27560
F0.5
s(g239
I42
g240
Vinsert
p27561
I8
VBlock
p27562
tp27563
I2
s(g479
I42
g480
Vinsert
p27564
I42
VSimpleName: Override
p27565
tp27566
F0.25
s(g5098
I42
g5099
Vinsert
p27567
I42
VSimpleName: TraceId
p27568
tp27569
F0.5
s(g4856
I42
g4857
Vinsert
p27570
I53
VThrowStatement
p27571
tp27572
F0.25
s(g826
I42
g827
Vinsert
p27573
I42
VSimpleName: V2StorageComponent
p27574
tp27575
F2.5
s(g4493
I42
g4494
Vinsert
p27576
I59
VVariableDeclarationFragment
p27577
tp27578
I2
s(Vinsert
p27579
I42
VSimpleName: register
p27580
Vinsert
p27581
I45
VStringLiteral: "zipkin.storage.type:cassandra3"
p27582
tp27583
I1
s(g5008
I42
g5009
Vinsert
p27584
I61
VWhileStatement
p27585
tp27586
I1
s(g6050
I42
g6051
Vinsert
p27587
I34
VNumberLiteral: 40
p27588
tp27589
I1
s(g4275
I42
g4276
Vinsert
p27590
I42
VSimpleName: sampleRate
p27591
tp27592
I1
s(g5629
I42
g5630
Vinsert
p27593
I25
VIfStatement
p27594
tp27595
I3
s(g659
I42
g660
Vinsert
p27596
I42
VSimpleName: list
p27597
tp27598
F0.25
s(g3485
I42
g3486
Vinsert
p27599
I36
VParenthesizedExpression
p27600
tp27601
I1
s(g4621
I42
g4622
Vinsert
p27602
I70
VEnhancedForStatement
p27603
tp27604
I1
s(g4587
I42
g4588
Vinsert
p27605
I83
VModifier: public
p27606
tp27607
F1.0
s(g939
I42
g940
Vinsert
p27608
I21
VExpressionStatement
p27609
tp27610
F12.5
s(g739
I42
g740
Vinsert
p27611
I43
VSimpleType: Span2
p27612
tp27613
I1
s(g2403
I42
g2404
Vinsert
p27614
I41
VReturnStatement
p27615
tp27616
I1
s(g12014
I42
g12015
Vinsert
p27617
I7
VAssignment: *=
p27618
tp27619
I4
s(g757
I42
g758
Vinsert
p27620
I42
VSimpleName: Decoder
p27621
tp27622
F0.25
s(g1456
I42
g1457
Vinsert
p27623
I21
VExpressionStatement
p27624
tp27625
I1
s(g3541
I42
g3542
Vinsert
p27626
I42
VSimpleName: Object
p27627
tp27628
F0.25
s(g4435
I42
g4436
Vinsert
p27629
I42
VSimpleName: Annotation
p27630
tp27631
I2
s(g474
I42
g475
Vinsert
p27632
I22
VFieldAccess
p27633
tp27634
F0.25
s(g2658
I42
g2659
Vinsert
p27635
I42
VSimpleName: when
p27636
tp27637
I5
s(g3599
I42
g3600
Vinsert
p27638
I65
VTagElement
p27639
tp27640
F0.25
s(g3997
I42
g3998
Vinsert
p27641
I21
VExpressionStatement
p27642
tp27643
F3.5
s(g2090
I42
g2091
Vinsert
p27644
I43
VSimpleType: Callback
p27645
tp27646
I1
s(g6707
I42
g6708
Vinsert
p27647
I42
VSimpleName: endTs
p27648
tp27649
I4
s(g5278
I42
g5279
Vinsert
p27650
I42
VSimpleName: spansDropped
p27651
tp27652
F1.0
s(g4792
I42
g4793
Vinsert
p27653
I42
VSimpleName: addAnnotation
p27654
tp27655
I6
s(g2896
I42
g2897
Vinsert
p27656
I42
VSimpleName: callback
p27657
tp27658
F0.25
s(g791
I42
g792
Vinsert
p27659
I78
VMarkerAnnotation
p27660
tp27661
F0.25
s(g1995
I42
g1996
Vinsert
p27662
I57
VTypeLiteral
p27663
tp27664
F0.25
s(g15405
I42
g15406
Vinsert
p27665
I31
VMethodDeclaration
p27666
tp27667
F0.5
s(g1683
I42
g1684
Vinsert
p27668
I42
VSimpleName: result
p27669
tp27670
I2
s(g1673
I42
g1674
Vinsert
p27671
I25
VIfStatement
p27672
tp27673
I2
s(g1428
I42
g1429
Vinsert
p27674
I42
VSimpleName: toJson
p27675
tp27676
I1
s(g259
I42
g260
Vinsert
p27677
I8
VBlock
p27678
tp27679
I3
s(g5391
I42
g5392
Vinsert
p27680
I42
VSimpleName: TYPE
p27681
tp27682
I1
s(g4848
I42
g4849
Vinsert
p27683
I42
VSimpleName: create
p27684
tp27685
I1
s(g2219
I42
g2220
Vinsert
p27686
I42
VSimpleName: startClass
p27687
tp27688
I2
s(g12670
I42
g12671
Vinsert
p27689
I42
VSimpleName: id
p27690
tp27691
I3
s(g4493
I42
g4494
Vinsert
p27692
I32
VMethodInvocation
p27693
tp27694
I3
s(Vinsert
p27695
I42
VSimpleName: register
p27696
Vinsert
p27697
I45
VStringLiteral: "zipkin.storage.elasticsearch.username:somename"
p27698
tp27699
I1
s(g7112
I42
g7113
Vinsert
p27700
I43
VSimpleType: IllegalArgumentException
p27701
tp27702
I4
s(g1177
I42
g1178
Vinsert
p27703
I42
VSimpleName: timestamp
p27704
tp27705
I4
s(g14635
I42
g14636
Vinsert
p27706
I27
VInfixExpression: !=
p27707
tp27708
I1
s(g1749
I42
g1750
Vinsert
p27709
I45
VStringLiteral: "zipkinElasticsearchHttp"
p27710
tp27711
I1
s(g654
I42
g655
Vinsert
p27712
I21
VExpressionStatement
p27713
tp27714
I3
s(g4264
I42
g4265
Vinsert
p27715
I42
VSimpleName: AssertionError
p27716
tp27717
I2
s(g1192
I42
g1193
Vinsert
p27718
I43
VSimpleType: DependencyLink
p27719
tp27720
F0.25
s(g5523
I42
g5524
Vinsert
p27721
I42
VSimpleName: server
p27722
tp27723
I1
s(g2174
I42
g2175
Vinsert
p27724
I40
VQualifiedName: Codec.THRIFT
p27725
tp27726
I1
s(g2566
I42
g2567
Vinsert
p27727
I43
VSimpleType: String
p27728
tp27729
I2
s(g1045
I42
g1046
Vinsert
p27730
I42
VSimpleName: that
p27731
tp27732
F1.25
s(g17868
I42
g17869
Vinsert
p27733
I7
VAssignment: =
p27734
tp27735
I1
s(g2278
I42
g2279
Vinsert
p27736
I43
VSimpleType: Response
p27737
tp27738
F0.25
s(g7905
I42
g7906
Vinsert
p27739
I40
VQualifiedName: MultiBucketsAggregation.Bucket
p27740
tp27741
I1
s(g9615
I42
g9616
Vinsert
p27742
I43
VSimpleType: Collection
p27743
tp27744
F0.25
s(g7134
I42
g7135
Vinsert
p27745
I52
VThisExpression
p27746
tp27747
F0.25
s(g2085
I42
g2086
Vinsert
p27748
I83
VModifier: public
p27749
tp27750
F0.25
s(g1007
I42
g1008
Vinsert
p27751
I40
VQualifiedName: Span.Builder
p27752
tp27753
I2
s(g7112
I42
g7113
Vinsert
p27754
I42
VSimpleName: thrown
p27755
tp27756
I10
s(g405
I42
g406
Vinsert
p27757
I41
VReturnStatement
p27758
tp27759
I1
s(g1683
I42
g1684
Vinsert
p27760
I14
VClassInstanceCreation
p27761
tp27762
I1
s(g9881
I42
g9882
Vinsert
p27763
I18
VContinueStatement
p27764
tp27765
I1
s(g4451
I42
g4452
Vinsert
p27766
I42
VSimpleName: Preconditions
p27767
tp27768
F0.25
s(g1202
I42
g1203
Vinsert
p27769
I42
VSimpleName: check
p27770
tp27771
F0.25
s(g8305
I42
g8306
Vinsert
p27772
I45
VStringLiteral: "::0000:1.2.3.4"
p27773
tp27774
I1
s(g9258
I42
g9259
Vinsert
p27775
I43
VSimpleType: Schema
p27776
tp27777
F0.25
s(g1926
I42
g1927
Vinsert
p27778
I42
VSimpleName: Buffer
p27779
tp27780
I1
s(g757
I42
g758
Vinsert
p27781
I44
VSingleVariableDeclaration
p27782
tp27783
F0.25
s(g2314
I42
g2315
Vinsert
p27784
I43
VSimpleType: DependencyLinkSpan.Builder
p27785
tp27786
I2
s(g1518
I42
g1519
Vinsert
p27787
I42
VSimpleName: span
p27788
tp27789
I1
s(g3217
I42
g3218
Vinsert
p27790
I7
VAssignment: =
p27791
tp27792
I1
s(g1594
I42
g1595
Vinsert
p27793
I40
VQualifiedName: builder.queue
p27794
tp27795
I1
s(g131
I42
g132
Vinsert
p27796
I42
VSimpleName: spanWithoutAnnotationsOrTags
p27797
tp27798
I1
s(g2584
I42
g2585
Vinsert
p27799
I42
VSimpleName: writeAnnotation
p27800
tp27801
I1
s(g1628
I42
g1629
Vinsert
p27802
I43
VSimpleType: zipkin.internal.v2.storage.StorageComponent
p27803
tp27804
F0.25
s(g4792
I42
g4793
Vinsert
p27805
I42
VSimpleName: Annotation
p27806
tp27807
I5
s(g4480
I42
g4481
Vinsert
p27808
I42
VSimpleName: tenClientSpans
p27809
tp27810
F0.25
s(g7533
I42
g7534
Vinsert
p27811
I42
VSimpleName: storage
p27812
tp27813
I3
s(g9867
I42
g9868
Vinsert
p27814
I42
VSimpleName: getDataSource
p27815
tp27816
I1
s(g11973
I42
g11974
Vinsert
p27817
I27
VInfixExpression: -
p27818
tp27819
I1
s(g11588
I42
g11589
Vinsert
p27820
I43
VSimpleType: Boolean
p27821
tp27822
F0.25
s(g131
I42
g132
Vinsert
p27823
I42
VSimpleName: consumer
p27824
tp27825
I3
s(g1278
I42
g1279
Vinsert
p27826
I59
VVariableDeclarationFragment
p27827
tp27828
I1
s(g5730
I42
g5731
Vinsert
p27829
I25
VIfStatement
p27830
tp27831
I1
s(g13205
I42
g13206
Vinsert
p27832
I42
VSimpleName: a
p27833
tp27834
F0.25
s(g8825
I42
g8826
Vinsert
p27835
I45
VStringLiteral: "-"
p27836
tp27837
I1
s(g7366
I42
g7367
Vinsert
p27838
I42
VSimpleName: Dependencies
p27839
tp27840
I4
s(g3859
I42
g3860
Vinsert
p27841
I32
VMethodInvocation
p27842
tp27843
I4
s(g4285
I42
g4286
Vinsert
p27844
I42
VSimpleName: newFuture
p27845
tp27846
F0.25
s(g5674
I42
g5675
Vinsert
p27847
I42
VSimpleName: WEB_ENDPOINT
p27848
tp27849
I2
s(g196
I42
g197
Vinsert
p27850
I32
VMethodInvocation
p27851
tp27852
I1
s(g304
I42
g305
Vinsert
p27853
I42
VSimpleName: getMethod
p27854
tp27855
I1
s(g2355
I42
g2356
Vinsert
p27856
I42
VSimpleName: ConsumerIterator
p27857
tp27858
I2
s(g6320
I42
g6321
Vinsert
p27859
I42
VSimpleName: limit
p27860
tp27861
I1
s(g4552
I42
g4553
Vinsert
p27862
I42
VSimpleName: MergeById
p27863
tp27864
I1
s(Vinsert
p27865
I42
VSimpleName: nullable
p27866
Vinsert
p27867
I45
VStringLiteral: "end_ts"
p27868
tp27869
I1
s(g6454
I42
g6455
Vinsert
p27870
I8
VBlock
p27871
tp27872
I3
s(g10920
I42
g10921
Vinsert
p27873
I52
VThisExpression
p27874
tp27875
I1
s(g3233
I42
g3234
Vinsert
p27876
I42
VSimpleName: spans
p27877
tp27878
I1
s(g6731
I42
g6732
Vinsert
p27879
I42
VSimpleName: writer
p27880
tp27881
I1
s(g1649
I42
g1650
Vinsert
p27882
I42
VSimpleName: spanStore
p27883
tp27884
I1
s(g1222
I42
g1223
Vinsert
p27885
I7
VAssignment: =
p27886
tp27887
I1
s(Vinsert
p27888
I42
VSimpleName: toBuilder
p27889
Vinsert
p27890
I42
VSimpleName: scribe
p27891
tp27892
I1
s(g2891
I42
g2892
Vinsert
p27893
I43
VSimpleType: Span
p27894
tp27895
I1
s(g492
I42
g493
Vinsert
p27896
I43
VSimpleType: Buffer
p27897
tp27898
I2
s(g10568
I42
g10569
Vinsert
p27899
I42
VSimpleName: input
p27900
tp27901
I1
s(g3725
I42
g3726
Vinsert
p27902
I34
VNumberLiteral: 0
p27903
tp27904
I2
s(g5505
I42
g5506
Vinsert
p27905
I32
VMethodInvocation
p27906
tp27907
I4
s(g6005
I42
g6006
Vinsert
p27908
I42
VSimpleName: defaultPort
p27909
tp27910
I1
s(g4701
I42
g4702
Vinsert
p27911
I27
VInfixExpression: !=
p27912
tp27913
I1
s(g2755
I42
g2756
Vinsert
p27914
I44
VSingleVariableDeclaration
p27915
tp27916
F0.25
s(g1954
I42
g1955
Vinsert
p27917
I40
VQualifiedName: span.id
p27918
tp27919
I1
s(g2273
I42
g2274
Vinsert
p27920
I42
VSimpleName: query
p27921
tp27922
I1
s(g3485
I42
g3486
Vinsert
p27923
I45
VStringLiteral: "  \u005c"id\u005c": \u005c"6b221d5bc9e6496c\u005c","
p27924
tp27925
I1
s(g474
I42
g475
Vinsert
p27926
I41
VReturnStatement
p27927
tp27928
I1
s(g1876
I42
g1877
Vinsert
p27929
I40
VQualifiedName: a.endpoint.serviceName
p27930
tp27931
I1
s(g2373
I42
g2374
Vinsert
p27932
I42
VSimpleName: source
p27933
tp27934
I1
s(g11973
I42
g11974
Vinsert
p27935
I45
VStringLiteral: "metrics"
p27936
tp27937
F0.25
s(g289
I42
g290
Vinsert
p27938
I40
VQualifiedName: Codec.JSON
p27939
tp27940
I5
s(g8397
I42
g8398
Vinsert
p27941
I42
VSimpleName: String
p27942
tp27943
F0.25
s(g4280
I42
g4281
Vinsert
p27944
I42
VSimpleName: id
p27945
tp27946
I1
s(g11429
I42
g11430
Vinsert
p27947
I27
VInfixExpression: *
p27948
tp27949
F0.25
s(Vinsert
p27950
I42
VSimpleName: onError
p27951
Vinsert
p27952
I42
VSimpleName: traces
p27953
tp27954
F0.25
s(g2609
I42
g2610
Vinsert
p27955
I42
VSimpleName: accept
p27956
tp27957
I1
s(g3115
I42
g3116
Vinsert
p27958
I8
VBlock
p27959
tp27960
I1
s(g7366
I42
g7367
Vinsert
p27961
I42
VSimpleName: midnightUTC
p27962
tp27963
I1
s(g982
I42
g983
Vinsert
p27964
I42
VSimpleName: writeDependencyLink
p27965
tp27966
F0.25
s(g51
I42
g52
Vinsert
p27967
I42
VSimpleName: mysqlUrl
p27968
tp27969
I1
s(g3987
I42
g3988
Vinsert
p27970
I42
VSimpleName: getNetworkInterfaces
p27971
tp27972
I1
s(g1533
I42
g1534
Vinsert
p27973
I42
VSimpleName: contentTypeValue
p27974
tp27975
I2
s(g3263
I42
g3264
Vinsert
p27976
I42
VSimpleName: Util
p27977
tp27978
I1
s(g4220
I42
g4221
Vinsert
p27979
I33
VNullLiteral
p27980
tp27981
F0.25
s(g5730
I42
g5731
Vinsert
p27982
I42
VSimpleName: build
p27983
tp27984
I1
s(g156
I42
g157
Vinsert
p27985
I43
VSimpleType: String
p27986
tp27987
F1.25
s(g1934
I42
g1935
Vinsert
p27988
I41
VReturnStatement
p27989
tp27990
I1
s(g1995
I42
g1996
Vinsert
p27991
I42
VSimpleName: IOException
p27992
tp27993
F0.25
s(g6195
I42
g6196
Vinsert
p27994
I43
VSimpleType: SpanNode
p27995
tp27996
I1
s(g1469
I42
g1470
Vinsert
p27997
I39
VPrimitiveType: long
p27998
tp27999
F0.5
s(g826
I42
g827
Vinsert
p28000
I8
VBlock
p28001
tp28002
I2
s(g264
I42
g265
Vinsert
p28003
I60
VVariableDeclarationStatement
p28004
tp28005
I1
s(g831
I42
g832
Vinsert
p28006
I43
VSimpleType: Long
p28007
tp28008
I1
s(g8280
I42
g8281
Vinsert
p28009
I42
VSimpleName: setLogsUrl
p28010
tp28011
F0.25
s(g4275
I42
g4276
Vinsert
p28012
I43
VSimpleType: AdaptiveSampleRate
p28013
tp28014
I1
s(g6342
I42
g6343
Vinsert
p28015
I42
VSimpleName: testName
p28016
tp28017
F0.25
s(g5910
I42
g5911
Vinsert
p28018
I43
VSimpleType: GzipSource
p28019
tp28020
I2
s(g2454
I42
g2455
Vinsert
p28021
I42
VSimpleName: Span
p28022
tp28023
F0.25
s(g10123
I42
g10124
Vinsert
p28024
I42
VSimpleName: len
p28025
tp28026
F0.25
s(g1739
I42
g1740
Vinsert
p28027
I48
VSuperMethodInvocation
p28028
tp28029
I1
s(g2896
I42
g2897
Vinsert
p28030
I42
VSimpleName: Callback
p28031
tp28032
F0.25
s(g418
I42
g419
Vinsert
p28033
I42
VSimpleName: query
p28034
tp28035
I1
s(g6315
I42
g6316
Vinsert
p28036
I16
VConditionalExpression
p28037
tp28038
I7
s(g8994
I42
g8995
Vinsert
p28039
I43
VSimpleType: V
p28040
tp28041
F0.5
s(g3454
I42
g3455
Vinsert
p28042
I66
VTextElement: values.
p28043
tp28044
I1
s(g1298
I42
g1299
Vinsert
p28045
I25
VIfStatement
p28046
tp28047
I1
s(g10727
I42
g10728
Vinsert
p28048
I42
VSimpleName: ba
p28049
tp28050
I1
s(g5090
I42
g5091
Vinsert
p28051
I42
VSimpleName: failure
p28052
tp28053
F0.25
s(g4768
I42
g4769
Vinsert
p28054
I32
VMethodInvocation
p28055
tp28056
I5
s(g3520
I42
g3521
Vinsert
p28057
I32
VMethodInvocation
p28058
tp28059
I5
s(g891
I42
g892
Vinsert
p28060
I74
VParameterizedType: Pair<Long>
p28061
tp28062
I1
s(g1433
I42
g1434
Vinsert
p28063
I40
VQualifiedName: Codec.JSON
p28064
tp28065
I1
s(g86
I42
g87
Vinsert
p28066
I42
VSimpleName: brave
p28067
tp28068
F0.25
s(g6758
I42
g6759
Vinsert
p28069
I43
VSimpleType: List
p28070
tp28071
I1
s(Vinsert
p28072
I42
VSimpleName: add
p28073
Vinsert
p28074
I42
VSimpleName: storage
p28075
tp28076
I1
s(g557
I42
g558
Vinsert
p28077
I42
VSimpleName: request
p28078
tp28079
I1
s(g4192
I42
g4193
Vinsert
p28080
I43
VSimpleType: Collection
p28081
tp28082
F0.25
s(g6320
I42
g6321
Vinsert
p28083
I40
VQualifiedName: QueryRequest.Builder
p28084
tp28085
I2
s(g12399
I42
g12400
Vinsert
p28086
I42
VSimpleName: check
p28087
tp28088
I5
s(g7951
I42
g7952
Vinsert
p28089
I32
VMethodInvocation
p28090
tp28091
F2.75
s(g2555
I42
g2556
Vinsert
p28092
I34
VNumberLiteral: 3L
p28093
tp28094
I2
s(g4306
I42
g4307
Vinsert
p28095
I42
VSimpleName: ExecuteContext
p28096
tp28097
F0.25
s(g4576
I42
g4577
Vinsert
p28098
I43
VSimpleType: Node
p28099
tp28100
I1
s(g13780
I42
g13781
Vinsert
p28101
I34
VNumberLiteral: 77000L
p28102
tp28103
I1
s(g5533
I42
g5534
Vinsert
p28104
I42
VSimpleName: serviceNames_defaultsTo24HrsAgo
p28105
tp28106
F0.25
s(g395
I42
g396
Vinsert
p28107
I42
VSimpleName: JsonAdapter
p28108
tp28109
I1
s(g6211
I42
g6212
Vinsert
p28110
I45
VStringLiteral: "      \u005c"endpoint\u005c": null\u005cn"
p28111
tp28112
I1
s(g1027
I42
g1028
Vinsert
p28113
I42
VSimpleName: minDuration
p28114
tp28115
I1
s(g2090
I42
g2091
Vinsert
p28116
I74
VParameterizedType: Callback<Void>
p28117
tp28118
I1
s(g4435
I42
g4436
Vinsert
p28119
I42
VSimpleName: addAnnotation
p28120
tp28121
I3
s(g11744
I42
g11745
Vinsert
p28122
I44
VSingleVariableDeclaration
p28123
tp28124
I1
s(g15413
I42
g15414
Vinsert
p28125
I42
VSimpleName: StorageComponent
p28126
tp28127
F2.0
s(g214
I42
g215
Vinsert
p28128
I34
VNumberLiteral: 4
p28129
tp28130
I1
s(g1095
I42
g1096
Vinsert
p28131
I42
VSimpleName: JsonCodec
p28132
tp28133
I1
s(g12670
I42
g12671
Vinsert
p28134
I34
VNumberLiteral: 20L
p28135
tp28136
I2
s(g7763
I42
g7764
Vinsert
p28137
I38
VPrefixExpression: !
p28138
tp28139
I1
s(g3823
I42
g3824
Vinsert
p28140
I22
VFieldAccess
p28141
tp28142
I3
s(g156
I42
g157
Vinsert
p28143
I32
VMethodInvocation
p28144
tp28145
F13.5
s(g7516
I42
g7517
Vinsert
p28146
I42
VSimpleName: KafkaConfig
p28147
tp28148
I2
s(g5725
I42
g5726
Vinsert
p28149
I40
VQualifiedName: s.binaryAnnotations
p28150
tp28151
I1
s(g10770
I42
g10771
Vinsert
p28152
I83
VModifier: private
p28153
tp28154
F0.25
s(g8258
I42
g8259
Vinsert
p28155
I74
VParameterizedType: CallbackCaptor<>
p28156
tp28157
I1
s(g5349
I42
g5350
Vinsert
p28158
I33
VNullLiteral
p28159
tp28160
I1
s(g2335
I42
g2336
Vinsert
p28161
I42
VSimpleName: i
p28162
tp28163
I1
s(g12014
I42
g12015
Vinsert
p28164
I27
VInfixExpression: ==
p28165
tp28166
I2
s(g11463
I42
g11464
Vinsert
p28167
I43
VSimpleType: Span
p28168
tp28169
F2.25
s(g4523
I42
g4524
Vinsert
p28170
I42
VSimpleName: Args
p28171
tp28172
F0.25
s(g2959
I42
g2960
Vinsert
p28173
I42
VSimpleName: span
p28174
tp28175
I2
s(g783
I42
g784
Vinsert
p28176
I43
VSimpleType: String
p28177
tp28178
I1
s(g9867
I42
g9868
Vinsert
p28179
I42
VSimpleName: setUser
p28180
tp28181
I1
s(g699
I42
g700
Vinsert
p28182
I74
VParameterizedType: List<Span>
p28183
tp28184
F0.25
s(g762
I42
g763
Vinsert
p28185
I42
VSimpleName: filter
p28186
tp28187
I1
s(g8765
I42
g8766
Vinsert
p28188
I59
VVariableDeclarationFragment
p28189
tp28190
I2
s(g3041
I42
g3042
Vinsert
p28191
I14
VClassInstanceCreation
p28192
tp28193
I1
s(g3474
I42
g3475
Vinsert
p28194
I59
VVariableDeclarationFragment
p28195
tp28196
I4
s(g572
I42
g573
Vinsert
p28197
I27
VInfixExpression: !=
p28198
tp28199
I1
s(g5528
I42
g5529
Vinsert
p28200
I42
VSimpleName: skip
p28201
tp28202
I1
s(g587
I42
g588
Vinsert
p28203
I42
VSimpleName: RuntimeException
p28204
tp28205
F2.25
s(g3843
I42
g3844
Vinsert
p28206
I40
VQualifiedName: zipkin.storage.elasticsearch.ElasticsearchSpanConsumerTest
p28207
tp28208
F0.5
s(g4344
I42
g4345
Vinsert
p28209
I42
VSimpleName: asList
p28210
tp28211
I1
s(g1400
I42
g1401
Vinsert
p28212
I40
VQualifiedName: NativeClient.Builder
p28213
tp28214
I2
s(g1278
I42
g1279
Vinsert
p28215
I42
VSimpleName: checkNotNull
p28216
tp28217
I1
s(g11191
I42
g11192
Vinsert
p28218
I25
VIfStatement
p28219
tp28220
I2
s(g806
I42
g807
Vinsert
p28221
I80
VMemberValuePair
p28222
tp28223
F0.25
s(g13567
I42
g13568
Vinsert
p28224
I34
VNumberLiteral: 0
p28225
tp28226
I1
s(g4792
I42
g4793
Vinsert
p28227
I42
VSimpleName: name
p28228
tp28229
I6
s(g14825
I42
g14826
Vinsert
p28230
I42
VSimpleName: get
p28231
tp28232
I1
s(g2335
I42
g2336
Vinsert
p28233
I42
VSimpleName: request2
p28234
tp28235
I1
s(g7733
I42
g7734
Vinsert
p28236
I38
VPrefixExpression: !
p28237
tp28238
I2
s(g1128
I42
g1129
Vinsert
p28239
I42
VSimpleName: sizeInBytes
p28240
tp28241
I1
s(g8677
I42
g8678
Vinsert
p28242
I59
VVariableDeclarationFragment
p28243
tp28244
I2
s(g362
I42
g363
Vinsert
p28245
I21
VExpressionStatement
p28246
tp28247
I15
s(g2689
I42
g2690
Vinsert
p28248
I57
VTypeLiteral
p28249
tp28250
F0.25
s(g8663
I42
g8664
Vinsert
p28251
I43
VSimpleType: ElasticsearchStorage
p28252
tp28253
F1.25
s(g4399
I42
g4400
Vinsert
p28254
I42
VSimpleName: assertThat
p28255
tp28256
I1
s(g2776
I42
g2777
Vinsert
p28257
I43
VSimpleType: IOException
p28258
tp28259
F0.5
s(g7300
I42
g7301
Vinsert
p28260
I42
VSimpleName: QueryRequest
p28261
tp28262
F1.5
s(g5603
I42
g5604
Vinsert
p28263
I42
VSimpleName: Integer
p28264
tp28265
I1
s(g502
I42
g503
Vinsert
p28266
I42
VSimpleName: builder
p28267
tp28268
I1
s(g7560
I42
g7561
Vinsert
p28269
I27
VInfixExpression: <<
p28270
tp28271
I2
s(g3644
I42
g3645
Vinsert
p28272
I40
VQualifiedName: zipkin.internal.v2.Endpoint
p28273
tp28274
I1
s(g2169
I42
g2170
Vinsert
p28275
I43
VSimpleType: InternalElasticsearchClient.Builder
p28276
tp28277
F0.25
s(g1772
I42
g1773
Vinsert
p28278
I40
VQualifiedName: a.endpoint
p28279
tp28280
I1
s(g2909
I42
g2910
Vinsert
p28281
I45
VStringLiteral: "/api"
p28282
tp28283
I2
s(g6134
I42
g6135
Vinsert
p28284
I42
VSimpleName: spanId
p28285
tp28286
I1
s(g6
I42
g7
Vinsert
p28287
I42
VSimpleName: startTimer
p28288
tp28289
I1
s(g4301
I42
g4302
Vinsert
p28290
I60
VVariableDeclarationStatement
p28291
tp28292
I1
s(g14635
I42
g14636
Vinsert
p28293
I9
VBooleanLiteral: false
p28294
tp28295
I1
s(g2684
I42
g2685
Vinsert
p28296
I8
VBlock
p28297
tp28298
I5
s(g2555
I42
g2556
Vinsert
p28299
I42
VSimpleName: span2
p28300
tp28301
I1
s(g4967
I42
g4968
Vinsert
p28302
I39
VPrimitiveType: long
p28303
tp28304
I1
s(g5435
I42
g5436
Vinsert
p28305
I33
VNullLiteral
p28306
tp28307
I1
s(g4085
I42
g4086
Vinsert
p28308
I42
VSimpleName: duration
p28309
tp28310
I1
s(g909
I42
g910
Vinsert
p28311
I59
VVariableDeclarationFragment
p28312
tp28313
I1
s(g4673
I42
g4674
Vinsert
p28314
I42
VSimpleName: CheckResult
p28315
tp28316
F0.25
s(g919
I42
g920
Vinsert
p28317
I43
VSimpleType: Span
p28318
tp28319
I4
s(g7897
I42
g7898
Vinsert
p28320
I60
VVariableDeclarationStatement
p28321
tp28322
I10
s(g121
I42
g122
Vinsert
p28323
I8
VBlock
p28324
tp28325
I1
s(g479
I42
g480
Vinsert
p28326
I42
VSimpleName: String
p28327
tp28328
F0.25
s(g3525
I42
g3526
Vinsert
p28329
I42
VSimpleName: storage
p28330
tp28331
I1
s(g3064
I42
g3065
Vinsert
p28332
I42
VSimpleName: limit
p28333
tp28334
I1
s(g9471
I42
g9472
Vinsert
p28335
I42
VSimpleName: rawSpan
p28336
tp28337
I1
s(g10568
I42
g10569
Vinsert
p28338
I42
VSimpleName: getAddress
p28339
tp28340
I1
s(g729
I42
g730
Vinsert
p28341
I42
VSimpleName: log
p28342
tp28343
F0.25
s(g6071
I42
g6072
Vinsert
p28344
I42
VSimpleName: NumberFormatException
p28345
tp28346
I1
s(g3618
I42
g3619
Vinsert
p28347
I42
VSimpleName: interrupted
p28348
tp28349
I1
s(g5034
I42
g5035
Vinsert
p28350
I42
VSimpleName: withJsonSpanName
p28351
tp28352
I1
s(g6315
I42
g6316
Vinsert
p28353
I42
VSimpleName: hasTraceIdHigh
p28354
tp28355
F6.5
s(g684
I42
g685
Vinsert
p28356
I42
VSimpleName: input
p28357
tp28358
F1.25
s(g1921
I42
g1922
Vinsert
p28359
I70
VEnhancedForStatement
p28360
tp28361
I1
s(g1678
I42
g1679
Vinsert
p28362
I8
VBlock
p28363
tp28364
I4
s(g4768
I42
g4769
Vinsert
p28365
I42
VSimpleName: twoDaysAgo
p28366
tp28367
I1
s(g2054
I42
g2055
Vinsert
p28368
I13
VCharacterLiteral: '\u005cf'
p28369
tp28370
I1
s(g12014
I42
g12015
Vinsert
p28371
I16
VConditionalExpression
p28372
tp28373
I2
s(g577
I42
g578
Vinsert
p28374
I60
VVariableDeclarationStatement
p28375
tp28376
I2
s(g6804
I42
g6805
Vinsert
p28377
I42
VSimpleName: Math
p28378
tp28379
I4
s(g3046
I42
g3047
Vinsert
p28380
I42
VSimpleName: logger
p28381
tp28382
I1
s(g3599
I42
g3600
Vinsert
p28383
I42
VSimpleName: String
p28384
tp28385
F0.25
s(g6203
I42
g6204
Vinsert
p28386
I42
VSimpleName: delegate
p28387
tp28388
F1.25
s(g5410
I42
g5411
Vinsert
p28389
I39
VPrimitiveType: void
p28390
tp28391
F1.25
s(g2072
I42
g2073
Vinsert
p28392
I42
VSimpleName: TODAY
p28393
tp28394
I1
s(g5008
I42
g5009
Vinsert
p28395
I42
VSimpleName: span
p28396
tp28397
I1
s(g7674
I42
g7675
Vinsert
p28398
I52
VThisExpression
p28399
tp28400
F0.25
s(g13601
I42
g13602
Vinsert
p28401
I42
VSimpleName: elasticFuture
p28402
tp28403
F0.25
s(g1728
I42
g1729
Vinsert
p28404
I42
VSimpleName: delegate
p28405
tp28406
I1
s(g249
I42
g250
Vinsert
p28407
I42
VSimpleName: timestamp
p28408
tp28409
F0.5
s(g4928
I42
g4929
Vinsert
p28410
I42
VSimpleName: encoded
p28411
tp28412
I2
s(g11317
I42
g11318
Vinsert
p28413
I42
VSimpleName: IOException
p28414
tp28415
F0.5
s(g3520
I42
g3521
Vinsert
p28416
I45
VStringLiteral: "backend"
p28417
tp28418
I1
s(g12798
I42
g12799
Vinsert
p28419
I34
VNumberLiteral: 22L
p28420
tp28421
I1
s(g4011
I42
g4012
Vinsert
p28422
I8
VBlock
p28423
tp28424
I2
s(g3823
I42
g3824
Vinsert
p28425
I42
VSimpleName: ImmutableList
p28426
tp28427
I2
s(g16518
I42
g16519
Vinsert
p28428
I41
VReturnStatement
p28429
tp28430
F1.25
s(g1027
I42
g1028
Vinsert
p28431
I40
VQualifiedName: targz.duration
p28432
tp28433
I1
s(g7380
I42
g7381
Vinsert
p28434
I42
VSimpleName: Lazy
p28435
tp28436
I2
s(g1916
I42
g1917
Vinsert
p28437
I41
VReturnStatement
p28438
tp28439
I1
s(g2416
I42
g2417
Vinsert
p28440
I53
VThrowStatement
p28441
tp28442
I1
s(g2255
I42
g2256
Vinsert
p28443
I32
VMethodInvocation
p28444
tp28445
I1
s(g4435
I42
g4436
Vinsert
p28446
I34
VNumberLiteral: 1472470996406000L
p28447
tp28448
I1
s(g1969
I42
g1970
Vinsert
p28449
I21
VExpressionStatement
p28450
tp28451
I1
s(g6827
I42
g6828
Vinsert
p28452
I43
VSimpleType: Span
p28453
tp28454
I5
s(g3083
I42
g3084
Vinsert
p28455
I76
VWildcardType: ?
p28456
tp28457
I1
s(g18018
I42
g18019
Vinsert
p28458
I45
VStringLiteral: "  \u005c"id\u005c": \u005c"6b221d5bc9e6496c\u005c"\u005cn"
p28459
tp28460
I1
s(g2514
I42
g2515
Vinsert
p28461
I40
VQualifiedName: zipkin.Sampler
p28462
tp28463
F0.25
s(g4913
I42
g4914
Vinsert
p28464
I43
VSimpleType: Map.Entry
p28465
tp28466
I2
s(g1811
I42
g1812
Vinsert
p28467
I42
VSimpleName: EMPTY_SERVICE
p28468
tp28469
I1
s(g5533
I42
g5534
Vinsert
p28470
I8
VBlock
p28471
tp28472
I1
s(g3867
I42
g3868
Vinsert
p28473
I14
VClassInstanceCreation
p28474
tp28475
I1
s(g2875
I42
g2876
Vinsert
p28476
I42
VSimpleName: String
p28477
tp28478
I1
s(g11429
I42
g11430
Vinsert
p28479
I40
VQualifiedName: request.limit
p28480
tp28481
F0.25
s(g3398
I42
g3399
Vinsert
p28482
I42
VSimpleName: c
p28483
tp28484
I1
s(g1118
I42
g1119
Vinsert
p28485
I42
VSimpleName: assertThat
p28486
tp28487
I1
s(g1103
I42
g1104
Vinsert
p28488
I41
VReturnStatement
p28489
tp28490
I1
s(g1197
I42
g1198
Vinsert
p28491
I42
VSimpleName: url
p28492
tp28493
I1
s(g380
I42
g381
Vinsert
p28494
I83
VModifier: public
p28495
tp28496
F0.25
s(g9771
I42
g9772
Vinsert
p28497
I74
VParameterizedType: Node.TreeBuilder<>
p28498
tp28499
I1
s(g2475
I42
g2476
Vinsert
p28500
I60
VVariableDeclarationStatement
p28501
tp28502
I5
s(g497
I42
g498
Vinsert
p28503
I31
VMethodDeclaration
p28504
tp28505
F0.25
s(g1164
I42
g1165
Vinsert
p28506
I42
VSimpleName: toString_whenNotHigh_16Chars
p28507
tp28508
F0.25
s(g219
I42
g220
Vinsert
p28509
I42
VSimpleName: hits
p28510
tp28511
I1
s(Vinsert
p28512
I42
VSimpleName: get
p28513
Vinsert
p28514
I42
VSimpleName: captor
p28515
tp28516
I3
s(Vinsert
p28517
I42
VSimpleName: accept
p28518
Vinsert
p28519
I42
VSimpleName: store
p28520
tp28521
I2
s(g5166
I42
g5167
Vinsert
p28522
I42
VSimpleName: builder
p28523
tp28524
I4
s(g4967
I42
g4968
Vinsert
p28525
I32
VMethodInvocation
p28526
tp28527
I5
s(g641
I42
g642
Vinsert
p28528
I42
VSimpleName: collectValuesNamed
p28529
tp28530
I1
s(g11397
I42
g11398
Vinsert
p28531
I42
VSimpleName: responseHeaders
p28532
tp28533
I2
s(g7560
I42
g7561
Vinsert
p28534
I34
VNumberLiteral: 3306
p28535
tp28536
I1
s(g4072
I42
g4073
Vinsert
p28537
I42
VSimpleName: version
p28538
tp28539
I1
s(g1939
I42
g1940
Vinsert
p28540
I42
VSimpleName: BoundStatement
p28541
tp28542
I1
s(g121
I42
g122
Vinsert
p28543
I40
VQualifiedName: builder.basePath
p28544
tp28545
I1
s(g10346
I42
g10347
Vinsert
p28546
I42
VSimpleName: incrementMessagesDropped
p28547
tp28548
I1
s(g418
I42
g419
Vinsert
p28549
I42
VSimpleName: isEmpty
p28550
tp28551
F0.25
s(g4319
I42
g4320
Vinsert
p28552
I42
VSimpleName: andExpect
p28553
tp28554
I2
s(g9457
I42
g9458
Vinsert
p28555
I40
VQualifiedName: CassandraWithOriginalSchemaTestGraph.INSTANCE.storage
p28556
tp28557
I1
s(g5098
I42
g5099
Vinsert
p28558
I25
VIfStatement
p28559
tp28560
I1
s(g2949
I42
g2950
Vinsert
p28561
I32
VMethodInvocation
p28562
tp28563
I4
s(g2614
I42
g2615
Vinsert
p28564
I83
VModifier: public
p28565
tp28566
F0.5
s(g1484
I42
g1485
Vinsert
p28567
I74
VParameterizedType: List<List<Span>>
p28568
tp28569
I1
s(g2838
I42
g2839
Vinsert
p28570
I21
VExpressionStatement
p28571
tp28572
I2
s(g14825
I42
g14826
Vinsert
p28573
I42
VSimpleName: performAsync
p28574
tp28575
I1
s(g6099
I42
g6100
Vinsert
p28576
I42
VSimpleName: nbRetry
p28577
tp28578
F0.5
s(g4034
I42
g4035
Vinsert
p28579
I32
VMethodInvocation
p28580
tp28581
I5
s(g507
I42
g508
Vinsert
p28582
I42
VSimpleName: incrementMessages
p28583
tp28584
F0.25
s(g7850
I42
g7851
Vinsert
p28585
I42
VSimpleName: LOGGER
p28586
tp28587
I2
s(g1192
I42
g1193
Vinsert
p28588
I85
VDimension
p28589
tp28590
F0.25
s(g436
I42
g437
Vinsert
p28591
I42
VSimpleName: annotation_query
p28592
tp28593
I1
s(g1187
I42
g1188
Vinsert
p28594
I44
VSingleVariableDeclaration
p28595
tp28596
F0.25
s(g826
I42
g827
Vinsert
p28597
I43
VSimpleType: Cassandra3Storage
p28598
tp28599
F1.25
s(g12888
I42
g12889
Vinsert
p28600
I42
VSimpleName: Call
p28601
tp28602
F0.25
s(g4461
I42
g4462
Vinsert
p28603
I42
VSimpleName: sessionFactory
p28604
tp28605
I2
s(g7913
I42
g7914
Vinsert
p28606
I59
VVariableDeclarationFragment
p28607
tp28608
I2
s(g8280
I42
g8281
Vinsert
p28609
I31
VMethodDeclaration
p28610
tp28611
F0.25
s(g141
I42
g142
Vinsert
p28612
I42
VSimpleName: Call
p28613
tp28614
I1
s(g3160
I42
g3161
Vinsert
p28615
I44
VSingleVariableDeclaration
p28616
tp28617
F0.25
s(g6663
I42
g6664
Vinsert
p28618
I59
VVariableDeclarationFragment
p28619
tp28620
F2.5
s(g4498
I42
g4499
Vinsert
p28621
I22
VFieldAccess
p28622
tp28623
I1
s(g2103
I42
g2104
Vinsert
p28624
I32
VMethodInvocation
p28625
tp28626
F38.5
s(g9977
I42
g9978
Vinsert
p28627
I45
VStringLiteral: ""
p28628
tp28629
I1
s(g654
I42
g655
Vinsert
p28630
I43
VSimpleType: IOException
p28631
tp28632
F0.75
s(g11012
I42
g11013
Vinsert
p28633
I27
VInfixExpression: +
p28634
tp28635
I6
s(g2574
I42
g2575
Vinsert
p28636
I42
VSimpleName: getTracesByIds
p28637
tp28638
F0.25
s(g3427
I42
g3428
Vinsert
p28639
I42
VSimpleName: IOException
p28640
tp28641
F1.5
s(g11052
I42
g11053
Vinsert
p28642
I31
VMethodDeclaration
p28643
tp28644
F0.25
s(g2416
I42
g2417
Vinsert
p28645
I42
VSimpleName: IllegalStateException
p28646
tp28647
I1
s(g1728
I42
g1729
Vinsert
p28648
I42
VSimpleName: V2InMemoryStorage
p28649
tp28650
F1.25
s(g3793
I42
g3794
Vinsert
p28651
I42
VSimpleName: List
p28652
tp28653
I7
s(g1987
I42
g1988
Vinsert
p28654
I42
VSimpleName: TRACE_ID_HIGH
p28655
tp28656
I2
s(g1377
I42
g1378
Vinsert
p28657
I5
VArrayType: int[]
p28658
tp28659
I1
s(g1232
I42
g1233
Vinsert
p28660
I32
VMethodInvocation
p28661
tp28662
I1
s(g3263
I42
g3264
Vinsert
p28663
I41
VReturnStatement
p28664
tp28665
I1
s(g1649
I42
g1650
Vinsert
p28666
I42
VSimpleName: Override
p28667
tp28668
F0.25
s(g4587
I42
g4588
Vinsert
p28669
I39
VPrimitiveType: void
p28670
tp28671
F1.25
s(g2388
I42
g2389
Vinsert
p28672
I42
VSimpleName: collector
p28673
tp28674
I3
s(g9615
I42
g9616
Vinsert
p28675
I42
VSimpleName: Collection
p28676
tp28677
F0.25
s(g1777
I42
g1778
Vinsert
p28678
I33
VNullLiteral
p28679
tp28680
I2
s(g1474
I42
g1475
Vinsert
p28681
I44
VSingleVariableDeclaration
p28682
tp28683
F0.25
s(g12333
I42
g12334
Vinsert
p28684
I42
VSimpleName: set
p28685
tp28686
I2
s(g7305
I42
g7306
Vinsert
p28687
I42
VSimpleName: value
p28688
tp28689
I2
s(g2492
I42
g2493
Vinsert
p28690
I42
VSimpleName: from
p28691
tp28692
I2
s(g2085
I42
g2086
Vinsert
p28693
I43
VSimpleType: String
p28694
tp28695
F1.25
s(g11744
I42
g11745
Vinsert
p28696
I12
VCatchClause
p28697
tp28698
I1
s(g1002
I42
g1003
Vinsert
p28699
I42
VSimpleName: input
p28700
tp28701
I1
s(g2828
I42
g2829
Vinsert
p28702
I40
VQualifiedName: m.message
p28703
tp28704
I1
s(g5725
I42
g5726
Vinsert
p28705
I21
VExpressionStatement
p28706
tp28707
I2
s(g4016
I42
g4017
Vinsert
p28708
I42
VSimpleName: Test
p28709
tp28710
F0.5
s(g5598
I42
g5599
Vinsert
p28711
I53
VThrowStatement
p28712
tp28713
I1
s(g9771
I42
g9772
Vinsert
p28714
I42
VSimpleName: Span
p28715
tp28716
I9
s(g2668
I42
g2669
Vinsert
p28717
I42
VSimpleName: ZIPKIN_ANNOTATIONS
p28718
tp28719
I1
s(g1657
I42
g1658
Vinsert
p28720
I39
VPrimitiveType: void
p28721
tp28722
F0.5
s(g96
I42
g97
Vinsert
p28723
I42
VSimpleName: local
p28724
tp28725
I1
s(g1528
I42
g1529
Vinsert
p28726
I60
VVariableDeclarationStatement
p28727
tp28728
I1
s(g14755
I42
g14756
Vinsert
p28729
I43
VSimpleType: MariaDbDataSource
p28730
tp28731
I1
s(g6758
I42
g6759
Vinsert
p28732
I42
VSimpleName: asList
p28733
tp28734
I1
s(g23814
I42
g23815
Vinsert
p28735
I43
VSimpleType: ScalaSpanStoreAdapter
p28736
tp28737
F0.25
s(g51
I42
g52
Vinsert
p28738
I42
VSimpleName: spanStore
p28739
tp28740
I1
s(g3987
I42
g3988
Vinsert
p28741
I42
VSimpleName: NetworkInterface
p28742
tp28743
I1
s(g11012
I42
g11013
Vinsert
p28744
I34
VNumberLiteral: 3
p28745
tp28746
I1
s(g891
I42
g892
Vinsert
p28747
I43
VSimpleType: Long
p28748
tp28749
I1
s(g5166
I42
g5167
Vinsert
p28750
I42
VSimpleName: strictTraceId
p28751
tp28752
F0.5
s(g2776
I42
g2777
Vinsert
p28753
I42
VSimpleName: Test
p28754
tp28755
F0.5
s(g3712
I42
g3713
Vinsert
p28756
I42
VSimpleName: overrides
p28757
tp28758
F0.25
s(g2566
I42
g2567
Vinsert
p28759
I27
VInfixExpression: +
p28760
tp28761
I3
s(g2203
I42
g2204
Vinsert
p28762
I8
VBlock
p28763
tp28764
I2
s(g3793
I42
g3794
Vinsert
p28765
I74
VParameterizedType: List<Span>
p28766
tp28767
I3
s(g1136
I42
g1137
Vinsert
p28768
I42
VSimpleName: postSpans
p28769
tp28770
I2
s(g1826
I42
g1827
Vinsert
p28771
I43
VSimpleType: ServerSpan
p28772
tp28773
I1
s(g4380
I42
g4381
Vinsert
p28774
I45
VStringLiteral: "hello"
p28775
tp28776
I1
s(g6342
I42
g6343
Vinsert
p28777
I14
VClassInstanceCreation
p28778
tp28779
F3.25
s(g17868
I42
g17869
Vinsert
p28780
I21
VExpressionStatement
p28781
tp28782
I1
s(g2996
I42
g2997
Vinsert
p28783
I42
VSimpleName: Span
p28784
tp28785
F0.5
s(g5053
I42
g5054
Vinsert
p28786
I67
VMemberRef
p28787
tp28788
F0.25
s(g527
I42
g528
Vinsert
p28789
I34
VNumberLiteral: 350
p28790
tp28791
I1
s(g3493
I42
g3494
Vinsert
p28792
I83
VModifier: static
p28793
tp28794
I1
s(g4253
I42
g4254
Vinsert
p28795
I57
VTypeLiteral
p28796
tp28797
I1
s(g1012
I42
g1013
Vinsert
p28798
I83
VModifier: public
p28799
tp28800
F1.0
s(g1040
I42
g1041
Vinsert
p28801
I42
VSimpleName: bytes
p28802
tp28803
F0.25
s(g3772
I42
g3773
Vinsert
p28804
I42
VSimpleName: connector
p28805
tp28806
F1.25
s(g1448
I42
g1449
Vinsert
p28807
I59
VVariableDeclarationFragment
p28808
tp28809
I1
s(g6482
I42
g6483
Vinsert
p28810
I43
VSimpleType: StringBuilder
p28811
tp28812
I1
s(g2421
I42
g2422
Vinsert
p28813
I42
VSimpleName: codec
p28814
tp28815
I3
s(g2355
I42
g2356
Vinsert
p28816
I85
VDimension
p28817
tp28818
I2
s(g116
I42
g117
Vinsert
p28819
I21
VExpressionStatement
p28820
tp28821
I4
s(g7394
I42
g7395
Vinsert
p28822
I42
VSimpleName: producerProps
p28823
tp28824
I2
s(g6997
I42
g6998
Vinsert
p28825
I42
VSimpleName: inputs
p28826
tp28827
I1
s(g6376
I42
g6377
Vinsert
p28828
I42
VSimpleName: containsExactly
p28829
tp28830
I2
s(g4103
I42
g4104
Vinsert
p28831
I16
VConditionalExpression
p28832
tp28833
I1
s(g1479
I42
g1480
Vinsert
p28834
I42
VSimpleName: store
p28835
tp28836
I2
s(g5435
I42
g5436
Vinsert
p28837
I32
VMethodInvocation
p28838
tp28839
I1
s(g2539
I42
g2540
Vinsert
p28840
I34
VNumberLiteral: 1
p28841
tp28842
I1
s(g5674
I42
g5675
Vinsert
p28843
I32
VMethodInvocation
p28844
tp28845
F12.25
s(g9244
I42
g9245
Vinsert
p28846
I42
VSimpleName: assertThat
p28847
tp28848
I1
s(g6407
I42
g6408
Vinsert
p28849
I42
VSimpleName: length
p28850
tp28851
I1
s(g2870
I42
g2871
Vinsert
p28852
I39
VPrimitiveType: void
p28853
tp28854
F0.25
s(g126
I42
g127
Vinsert
p28855
I31
VMethodDeclaration
p28856
tp28857
F1.25
s(g1995
I42
g1996
Vinsert
p28858
I32
VMethodInvocation
p28859
tp28860
I10
s(g1921
I42
g1922
Vinsert
p28861
I42
VSimpleName: Host
p28862
tp28863
I1
s(g13567
I42
g13568
Vinsert
p28864
I42
VSimpleName: traceId
p28865
tp28866
F0.25
s(g5725
I42
g5726
Vinsert
p28867
I42
VSimpleName: equals
p28868
tp28869
I1
s(g1103
I42
g1104
Vinsert
p28870
I60
VVariableDeclarationStatement
p28871
tp28872
I1
s(Vinsert
p28873
I42
VSimpleName: expect
p28874
Vinsert
p28875
I43
VSimpleType: ZipkinMySQLStorageAutoConfiguration
p28876
tp28877
I1
s(g2712
I42
g2713
Vinsert
p28878
I42
VSimpleName: code
p28879
tp28880
F0.25
s(g13601
I42
g13602
Vinsert
p28881
I42
VSimpleName: future
p28882
tp28883
I1
s(g86
I42
g87
Vinsert
p28884
I41
VReturnStatement
p28885
tp28886
I1
s(g1489
I42
g1490
Vinsert
p28887
I42
VSimpleName: value
p28888
tp28889
F0.25
s(g4171
I42
g4172
Vinsert
p28890
I42
VSimpleName: rate
p28891
tp28892
F2.0
s(g2393
I42
g2394
Vinsert
p28893
I33
VNullLiteral
p28894
tp28895
I2
s(g2732
I42
g2733
Vinsert
p28896
I42
VSimpleName: keyspace
p28897
tp28898
I1
s(g3059
I42
g3060
Vinsert
p28899
I42
VSimpleName: traceIdHigh
p28900
tp28901
I1
s(g329
I42
g330
Vinsert
p28902
I83
VModifier: public
p28903
tp28904
F0.5
s(g2426
I42
g2427
Vinsert
p28905
I14
VClassInstanceCreation
p28906
tp28907
I1
s(g12218
I42
g12219
Vinsert
p28908
I74
VParameterizedType: Node<Span>
p28909
tp28910
I1
s(g891
I42
g892
Vinsert
p28911
I42
VSimpleName: CacheBuilder
p28912
tp28913
I1
s(g1377
I42
g1378
Vinsert
p28914
I4
VArrayInitializer
p28915
tp28916
I1
s(g5634
I42
g5635
Vinsert
p28917
I40
VQualifiedName: builder.index
p28918
tp28919
I1
s(g4212
I42
g4213
Vinsert
p28920
I42
VSimpleName: eq
p28921
tp28922
I2
s(g4928
I42
g4929
Vinsert
p28923
I32
VMethodInvocation
p28924
tp28925
I9
s(g13581
I42
g13582
Vinsert
p28926
I42
VSimpleName: allAsList
p28927
tp28928
I1
s(g25865
I42
g25866
Vinsert
p28929
I42
VSimpleName: WEB_ENDPOINT
p28930
tp28931
I1
s(g12875
I42
g12876
Vinsert
p28932
I45
VStringLiteral: "m1"
p28933
tp28934
I1
s(g3979
I42
g3980
Vinsert
p28935
I83
VModifier: final
p28936
tp28937
F0.25
s(g7627
I42
g7628
Vinsert
p28938
I42
VSimpleName: errorHandler
p28939
tp28940
I1
s(g14766
I42
g14767
Vinsert
p28941
I42
VSimpleName: first
p28942
tp28943
I1
s(g7282
I42
g7283
Vinsert
p28944
I42
VSimpleName: Bean
p28945
tp28946
F0.5
s(g3136
I42
g3137
Vinsert
p28947
I60
VVariableDeclarationStatement
p28948
tp28949
I1
s(g1916
I42
g1917
Vinsert
p28950
I42
VSimpleName: BRAVE_PRESENT
p28951
tp28952
I1
s(g27067
I42
g27068
Vinsert
p28953
I42
VSimpleName: CLIENT_ADDR
p28954
tp28955
I1
s(g1027
I42
g1028
Vinsert
p28956
I45
VStringLiteral: "service1"
p28957
tp28958
I1
s(g4690
I42
g4691
Vinsert
p28959
I42
VSimpleName: links
p28960
tp28961
I2
s(g7151
I42
g7152
Vinsert
p28962
I42
VSimpleName: ThriftServer
p28963
tp28964
I1
s(g1861
I42
g1862
Vinsert
p28965
I42
VSimpleName: Span
p28966
tp28967
F4.25
s(g1464
I42
g1465
Vinsert
p28968
I42
VSimpleName: CORE_ANNOTATIONS
p28969
tp28970
I1
s(g4187
I42
g4188
Vinsert
p28971
I74
VParameterizedType: Iterator<String>
p28972
tp28973
I1
s(Vinsert
p28974
I42
VSimpleName: size
p28975
Vinsert
p28976
I42
VSimpleName: span
p28977
tp28978
F0.25
s(g15603
I42
g15604
Vinsert
p28979
I42
VSimpleName: SessionFactory
p28980
tp28981
F0.25
s(g6071
I42
g6072
Vinsert
p28982
I32
VMethodInvocation
p28983
tp28984
I1
s(g26838
I42
g26839
Vinsert
p28985
I34
VNumberLiteral: 101
p28986
tp28987
I1
s(g1518
I42
g1519
Vinsert
p28988
I40
VQualifiedName: Long.MIN_VALUE
p28989
tp28990
I1
s(g4344
I42
g4345
Vinsert
p28991
I42
VSimpleName: span
p28992
tp28993
I1
s(g1513
I42
g1514
Vinsert
p28994
I34
VNumberLiteral: 1472470996403000L
p28995
tp28996
I1
s(g5812
I42
g5813
Vinsert
p28997
I39
VPrimitiveType: boolean
p28998
tp28999
F0.25
s(g654
I42
g655
Vinsert
p29000
I43
VSimpleType: String
p29001
tp29002
F0.25
s(g3560
I42
g3561
Vinsert
p29003
I42
VSimpleName: Void
p29004
tp29005
F1.5
s(g5286
I42
g5287
Vinsert
p29006
I40
VQualifiedName: s.timestamp
p29007
tp29008
I1
s(g2098
I42
g2099
Vinsert
p29009
I32
VMethodInvocation
p29010
tp29011
F15.5
s(g8397
I42
g8398
Vinsert
p29012
I42
VSimpleName: indexTemplate
p29013
tp29014
I1
s(g7151
I42
g7152
Vinsert
p29015
I42
VSimpleName: config
p29016
tp29017
I1
s(g12875
I42
g12876
Vinsert
p29018
I42
VSimpleName: M1
p29019
tp29020
I1
s(g2018
I42
g2019
Vinsert
p29021
I40
VQualifiedName: Request.Builder
p29022
tp29023
I1
s(g3335
I42
g3336
Vinsert
p29024
I57
VTypeLiteral
p29025
tp29026
I1
s(g7959
I42
g7960
Vinsert
p29027
I74
VParameterizedType: List<S>
p29028
tp29029
I1
s(g8375
I42
g8376
Vinsert
p29030
I33
VNullLiteral
p29031
tp29032
I1
s(g944
I42
g945
Vinsert
p29033
I43
VSimpleType: PropertyPlaceholderAutoConfiguration
p29034
tp29035
I1
s(g2475
I42
g2476
Vinsert
p29036
I42
VSimpleName: AnnotatedTypeMetadata
p29037
tp29038
F1.25
s(g4157
I42
g4158
Vinsert
p29039
I42
VSimpleName: dl1
p29040
tp29041
I1
s(g507
I42
g508
Vinsert
p29042
I43
VSimpleType: ActuateCollectorMetrics
p29043
tp29044
F0.25
s(g5188
I42
g5189
Vinsert
p29045
I40
VQualifiedName: Annotation.Builder
p29046
tp29047
I1
s(g2255
I42
g2256
Vinsert
p29048
I60
VVariableDeclarationStatement
p29049
tp29050
I1
s(g12014
I42
g12015
Vinsert
p29051
I36
VParenthesizedExpression
p29052
tp29053
I4
s(g4275
I42
g4276
Vinsert
p29054
I42
VSimpleName: boundary
p29055
tp29056
I1
s(g4918
I42
g4919
Vinsert
p29057
I42
VSimpleName: result
p29058
tp29059
I1
s(g6371
I42
g6372
Vinsert
p29060
I42
VSimpleName: Override
p29061
tp29062
F0.75
s(g13581
I42
g13582
Vinsert
p29063
I42
VSimpleName: getUnchecked
p29064
tp29065
I1
s(g8652
I42
g8653
Vinsert
p29066
I22
VFieldAccess
p29067
tp29068
F0.25
s(g2936
I42
g2937
Vinsert
p29069
I60
VVariableDeclarationStatement
p29070
tp29071
I1
s(g4264
I42
g4265
Vinsert
p29072
I59
VVariableDeclarationFragment
p29073
tp29074
I1
s(g8078
I42
g8079
Vinsert
p29075
I42
VSimpleName: cluster
p29076
tp29077
I1
s(g1242
I42
g1243
Vinsert
p29078
I33
VNullLiteral
p29079
tp29080
I2
s(g4856
I42
g4857
Vinsert
p29081
I42
VSimpleName: exceptionExpirationDuration
p29082
tp29083
F0.25
s(g13686
I42
g13687
Vinsert
p29084
I43
VSimpleType: ThreadLocal
p29085
tp29086
F0.5
s(g1505
I42
g1506
Vinsert
p29087
I43
VSimpleType: ZipkinKafkaCollectorAutoConfiguration
p29088
tp29089
I1
s(g6867
I42
g6868
Vinsert
p29090
I83
VModifier: public
p29091
tp29092
F0.25
s(g9706
I42
g9707
Vinsert
p29093
I42
VSimpleName: result
p29094
tp29095
I2
s(g679
I42
g680
Vinsert
p29096
I33
VNullLiteral
p29097
tp29098
I2
s(g679
I42
g680
Vinsert
p29099
I42
VSimpleName: forEndpoint
p29100
tp29101
I1
s(g2679
I42
g2680
Vinsert
p29102
I21
VExpressionStatement
p29103
tp29104
I4
s(g577
I42
g578
Vinsert
p29105
I43
VSimpleType: CassandraStorage
p29106
tp29107
I2
s(g1308
I42
g1309
Vinsert
p29108
I27
VInfixExpression: >
p29109
tp29110
I1
s(g1513
I42
g1514
Vinsert
p29111
I32
VMethodInvocation
p29112
tp29113
F3.75
s(g5034
I42
g5035
Vinsert
p29114
I42
VSimpleName: span1
p29115
tp29116
I1
s(g1489
I42
g1490
Vinsert
p29117
I66
VTextElement: Exposed for ElasticSearch HttpBulkIndexer 
p29118
tp29119
F0.25
s(g595
I42
g596
Vinsert
p29120
I42
VSimpleName: JsonCodec
p29121
tp29122
F0.25
s(g15603
I42
g15604
Vinsert
p29123
I79
VSingleMemberAnnotation
p29124
tp29125
F0.25
s(g166
I42
g167
Vinsert
p29126
I25
VIfStatement
p29127
tp29128
I1
s(g734
I42
g735
Vinsert
p29129
I42
VSimpleName: ConfigurableListableBeanFactory
p29130
tp29131
I1
s(g15413
I42
g15414
Vinsert
p29132
I43
VSimpleType: StorageComponent
p29133
tp29134
F1.25
s(g1584
I42
g1585
Vinsert
p29135
I8
VBlock
p29136
tp29137
F5.25
s(g8677
I42
g8678
Vinsert
p29138
I42
VSimpleName: LazyClient
p29139
tp29140
I2
s(g4493
I42
g4494
Vinsert
p29141
I42
VSimpleName: parameters
p29142
tp29143
I1
s(g11001
I42
g11002
Vinsert
p29144
I42
VSimpleName: String
p29145
tp29146
F1.25
s(g166
I42
g167
Vinsert
p29147
I9
VBooleanLiteral: true
p29148
tp29149
I1
s(g1464
I42
g1465
Vinsert
p29150
I43
VSimpleType: String
p29151
tp29152
I1
s(g8825
I42
g8826
Vinsert
p29153
I42
VSimpleName: DAILY_INDEX_FORMAT
p29154
tp29155
F0.25
s(g7355
I42
g7356
Vinsert
p29156
I34
VNumberLiteral: 2000L
p29157
tp29158
F0.25
s(g2967
I42
g2968
Vinsert
p29159
I42
VSimpleName: port
p29160
tp29161
I3
s(g2619
I42
g2620
Vinsert
p29162
I32
VMethodInvocation
p29163
tp29164
I2
s(g492
I42
g493
Vinsert
p29165
I8
VBlock
p29166
tp29167
I1
s(g1390
I42
g1391
Vinsert
p29168
I7
VAssignment: =
p29169
tp29170
F0.5
s(g4016
I42
g4017
Vinsert
p29171
I43
VSimpleType: DependencyLinker
p29172
tp29173
I6
s(g2614
I42
g2615
Vinsert
p29174
I42
VSimpleName: zipkin2
p29175
tp29176
F0.25
s(g13877
I42
g13878
Vinsert
p29177
I21
VExpressionStatement
p29178
tp29179
F0.25
s(g3335
I42
g3336
Vinsert
p29180
I26
VImportDeclaration
p29181
tp29182
I1
s(g299
I42
g300
Vinsert
p29183
I42
VSimpleName: maxDuration
p29184
tp29185
I1
s(g6113
I42
g6114
Vinsert
p29186
I42
VSimpleName: computeGuavaSpanStore
p29187
tp29188
F0.5
s(g1456
I42
g1457
Vinsert
p29189
I42
VSimpleName: Inflater
p29190
tp29191
I2
s(g385
I42
g386
Vinsert
p29192
I42
VSimpleName: fromJson
p29193
tp29194
F0.25
s(g2781
I42
g2782
Vinsert
p29195
I42
VSimpleName: remoteEndpoint
p29196
tp29197
I3
s(g1108
I42
g1109
Vinsert
p29198
I42
VSimpleName: Span
p29199
tp29200
I5
s(g3867
I42
g3868
Vinsert
p29201
I40
VQualifiedName: AutoValue_Trace.Builder
p29202
tp29203
I1
s(g4728
I42
g4729
Vinsert
p29204
I27
VInfixExpression: +
p29205
tp29206
F0.25
s(g1192
I42
g1193
Vinsert
p29207
I42
VSimpleName: read
p29208
tp29209
I1
s(g3979
I42
g3980
Vinsert
p29210
I32
VMethodInvocation
p29211
tp29212
I1
s(g304
I42
g305
Vinsert
p29213
I32
VMethodInvocation
p29214
tp29215
I4
s(g2255
I42
g2256
Vinsert
p29216
I42
VSimpleName: ThreadPoolTaskExecutor
p29217
tp29218
I2
s(g2875
I42
g2876
Vinsert
p29219
I42
VSimpleName: JDBCSpanStore
p29220
tp29221
F1.25
s(g10392
I42
g10393
Vinsert
p29222
I42
VSimpleName: serviceName
p29223
tp29224
I2
s(g2589
I42
g2590
Vinsert
p29225
I42
VSimpleName: child
p29226
tp29227
I3
s(g3644
I42
g3645
Vinsert
p29228
I59
VVariableDeclarationFragment
p29229
tp29230
I1
s(g5158
I42
g5159
Vinsert
p29231
I27
VInfixExpression: ||
p29232
tp29233
I1
s(g2663
I42
g2664
Vinsert
p29234
I43
VSimpleType: IOException
p29235
tp29236
F0.25
s(g6984
I42
g6985
Vinsert
p29237
I42
VSimpleName: ListenableFuture
p29238
tp29239
F0.25
s(g992
I42
g993
Vinsert
p29240
I39
VPrimitiveType: void
p29241
tp29242
F1.0
s(g6663
I42
g6664
Vinsert
p29243
I21
VExpressionStatement
p29244
tp29245
F4.5
s(g9859
I42
g9860
Vinsert
p29246
I42
VSimpleName: hosts
p29247
tp29248
F1.25
s(g3628
I42
g3629
Vinsert
p29249
I83
VModifier: public
p29250
tp29251
F0.25
s(g166
I42
g167
Vinsert
p29252
I42
VSimpleName: InterruptedException
p29253
tp29254
I1
s(g5405
I42
g5406
Vinsert
p29255
I42
VSimpleName: bindPartitionKey
p29256
tp29257
F0.25
s(g9502
I42
g9503
Vinsert
p29258
I12
VCatchClause
p29259
tp29260
F0.25
s(g4792
I42
g4793
Vinsert
p29261
I42
VSimpleName: create
p29262
tp29263
I6
s(g4344
I42
g4345
Vinsert
p29264
I42
VSimpleName: writeSpans
p29265
tp29266
I1
s(g5889
I42
g5890
Vinsert
p29267
I42
VSimpleName: forTransport
p29268
tp29269
F0.25
s(g4959
I42
g4960
Vinsert
p29270
I8
VBlock
p29271
tp29272
I2
s(g11317
I42
g11318
Vinsert
p29273
I44
VSingleVariableDeclaration
p29274
tp29275
F1.5
s(g5158
I42
g5159
Vinsert
p29276
I42
VSimpleName: hosts
p29277
tp29278
I1
s(g1372
I42
g1373
Vinsert
p29279
I44
VSingleVariableDeclaration
p29280
tp29281
F0.25
s(g2145
I42
g2146
Vinsert
p29282
I39
VPrimitiveType: int
p29283
tp29284
F1.0
s(g10858
I42
g10859
Vinsert
p29285
I42
VSimpleName: Cassandra3Storage
p29286
tp29287
I4
s(g2373
I42
g2374
Vinsert
p29288
I27
VInfixExpression: !=
p29289
tp29290
I1
s(g7627
I42
g7628
Vinsert
p29291
I14
VClassInstanceCreation
p29292
tp29293
I1
s(g7096
I42
g7097
Vinsert
p29294
I43
VSimpleType: IllegalStateException
p29295
tp29296
I1
s(g1916
I42
g1917
Vinsert
p29297
I38
VPrefixExpression: !
p29298
tp29299
I1
s(g7159
I42
g7160
Vinsert
p29300
I45
VStringLiteral: "    \u005c"Endpoints\u005c": null\u005cn"
p29301
tp29302
I1
s(g26301
I42
g26302
Vinsert
p29303
I42
VSimpleName: sizeInBytes_trace
p29304
tp29305
F0.25
s(g6658
I42
g6659
Vinsert
p29306
I42
VSimpleName: call
p29307
tp29308
I1
s(g9977
I42
g9978
Vinsert
p29309
I42
VSimpleName: encodedPath
p29310
tp29311
I1
s(g2763
I42
g2764
Vinsert
p29312
I32
VMethodInvocation
p29313
tp29314
I6
s(g2436
I42
g2437
Vinsert
p29315
I59
VVariableDeclarationFragment
p29316
tp29317
I1
s(g816
I42
g817
Vinsert
p29318
I39
VPrimitiveType: int
p29319
tp29320
I3
s(g2475
I42
g2476
Vinsert
p29321
I43
VSimpleType: AnnotatedTypeMetadata
p29322
tp29323
F1.25
s(g18013
I42
g18014
Vinsert
p29324
I42
VSimpleName: Codec
p29325
tp29326
F0.25
s(g2802
I42
g2803
Vinsert
p29327
I39
VPrimitiveType: void
p29328
tp29329
F0.25
s(g2584
I42
g2585
Vinsert
p29330
I8
VBlock
p29331
tp29332
I1
s(g4773
I42
g4774
Vinsert
p29333
I42
VSimpleName: isAscii
p29334
tp29335
I1
s(g3552
I42
g3553
Vinsert
p29336
I26
VImportDeclaration
p29337
tp29338
F0.25
s(g1665
I42
g1666
Vinsert
p29339
I39
VPrimitiveType: void
p29340
tp29341
F1.25
s(g3417
I42
g3418
Vinsert
p29342
I21
VExpressionStatement
p29343
tp29344
I1
s(g7240
I42
g7241
Vinsert
p29345
I27
VInfixExpression: ==
p29346
tp29347
I1
s(g1247
I42
g1248
Vinsert
p29348
I8
VBlock
p29349
tp29350
I2
s(g8070
I42
g8071
Vinsert
p29351
I40
VQualifiedName: HttpElasticsearchTestGraph.INSTANCE.storage
p29352
tp29353
I1
s(g12883
I42
g12884
Vinsert
p29354
I43
VSimpleType: String
p29355
tp29356
I3
s(g12296
I42
g12297
Vinsert
p29357
I42
VSimpleName: Node
p29358
tp29359
I2
s(g5584
I42
g5585
Vinsert
p29360
I83
VModifier: public
p29361
tp29362
F0.25
s(g10858
I42
g10859
Vinsert
p29363
I42
VSimpleName: CheckResult
p29364
tp29365
I3
s(g2823
I42
g2824
Vinsert
p29366
I8
VBlock
p29367
tp29368
I3
s(g10178
I42
g10179
Vinsert
p29369
I45
VStringLiteral: "  }\u005cn"
p29370
tp29371
F0.25
s(g6084
I42
g6085
Vinsert
p29372
I14
VClassInstanceCreation
p29373
tp29374
I1
s(g16820
I42
g16821
Vinsert
p29375
I43
VSimpleType: LocalSpanCollector
p29376
tp29377
F0.25
s(g4280
I42
g4281
Vinsert
p29378
I32
VMethodInvocation
p29379
tp29380
I1
s(g24119
I42
g24120
Vinsert
p29381
I42
VSimpleName: hasIpv6
p29382
tp29383
F1.75
s(g329
I42
g330
Vinsert
p29384
I34
VNumberLiteral: 5678L
p29385
tp29386
I1
s(g1644
I42
g1645
Vinsert
p29387
I42
VSimpleName: asyncConsumer
p29388
tp29389
F0.25
s(g5523
I42
g5524
Vinsert
p29390
I42
VSimpleName: client
p29391
tp29392
I1
s(g3702
I42
g3703
Vinsert
p29393
I83
VModifier: public
p29394
tp29395
F0.25
s(g3702
I42
g3703
Vinsert
p29396
I42
VSimpleName: execute
p29397
tp29398
F0.25
s(g2722
I42
g2723
Vinsert
p29399
I42
VSimpleName: URI
p29400
tp29401
I2
s(g1474
I42
g1475
Vinsert
p29402
I42
VSimpleName: that
p29403
tp29404
F1.25
s(g14825
I42
g14826
Vinsert
p29405
I42
VSimpleName: post
p29406
tp29407
I1
s(g757
I42
g758
Vinsert
p29408
I43
VSimpleType: Decoder
p29409
tp29410
F0.25
s(g816
I42
g817
Vinsert
p29411
I42
VSimpleName: id
p29412
tp29413
I1
s(g2464
I42
g2465
Vinsert
p29414
I42
VSimpleName: message
p29415
tp29416
I1
s(g3720
I42
g3721
Vinsert
p29417
I74
VParameterizedType: ResponseEntity<ZipkinServerProperties.Ui>
p29418
tp29419
F0.25
s(g2203
I42
g2204
Vinsert
p29420
I43
VSimpleType: T
p29421
tp29422
F0.75
s(g3607
I42
g3608
Vinsert
p29423
I32
VMethodInvocation
p29424
tp29425
I2
s(g9717
I42
g9718
Vinsert
p29426
I42
VSimpleName: toCluster
p29427
tp29428
F0.25
s(g2345
I42
g2346
Vinsert
p29429
I60
VVariableDeclarationStatement
p29430
tp29431
I3
s(g3017
I42
g3018
Vinsert
p29432
I54
VTryStatement
p29433
tp29434
I1
s(g587
I42
g588
Vinsert
p29435
I42
VSimpleName: exception
p29436
tp29437
F1.5
s(g5000
I42
g5001
Vinsert
p29438
I42
VSimpleName: consumer
p29439
tp29440
F0.25
s(g23669
I42
g23670
Vinsert
p29441
I45
VStringLiteral: "10"
p29442
tp29443
I2
s(g3340
I42
g3341
Vinsert
p29444
I42
VSimpleName: Request
p29445
tp29446
I1
s(g2810
I42
g2811
Vinsert
p29447
I42
VSimpleName: exec
p29448
tp29449
I1
s(g1278
I42
g1279
Vinsert
p29450
I42
VSimpleName: SelectSpanNames
p29451
tp29452
I1
s(g1141
I42
g1142
Vinsert
p29453
I42
VSimpleName: spansToStore
p29454
tp29455
I1
s(g7240
I42
g7241
Vinsert
p29456
I42
VSimpleName: SpanConsumer
p29457
tp29458
F0.25
s(g2436
I42
g2437
Vinsert
p29459
I42
VSimpleName: args
p29460
tp29461
F0.25
s(g8258
I42
g8259
Vinsert
p29462
I60
VVariableDeclarationStatement
p29463
tp29464
I1
s(g7096
I42
g7097
Vinsert
p29465
I7
VAssignment: =
p29466
tp29467
I1
s(g2169
I42
g2170
Vinsert
p29468
I27
VInfixExpression: !=
p29469
tp29470
I4
s(g12296
I42
g12297
Vinsert
p29471
I43
VSimpleType: Node
p29472
tp29473
I2
s(g1464
I42
g1465
Vinsert
p29474
I83
VModifier: public
p29475
tp29476
I1
s(g6089
I42
g6090
Vinsert
p29477
I43
VSimpleType: IOException
p29478
tp29479
F0.25
s(g3155
I42
g3156
Vinsert
p29480
I42
VSimpleName: getDependenciesCall
p29481
tp29482
I1
s(g3427
I42
g3428
Vinsert
p29483
I42
VSimpleName: e
p29484
tp29485
F2.25
s(g14004
I42
g14005
Vinsert
p29486
I43
VSimpleType: Void
p29487
tp29488
F0.25
s(g11397
I42
g11398
Vinsert
p29489
I42
VSimpleName: origin
p29490
tp29491
I1
s(g8402
I42
g8403
Vinsert
p29492
I9
VBooleanLiteral: false
p29493
tp29494
I1
s(g1723
I42
g1724
Vinsert
p29495
I39
VPrimitiveType: long
p29496
tp29497
F0.5
s(g2789
I42
g2790
Vinsert
p29498
I42
VSimpleName: next
p29499
tp29500
I2
s(g3454
I42
g3455
Vinsert
p29501
I43
VSimpleType: String
p29502
tp29503
I1
s(g14269
I42
g14270
Vinsert
p29504
I5
VArrayType: String[]
p29505
tp29506
I1
s(g2013
I42
g2014
Vinsert
p29507
I42
VSimpleName: map
p29508
tp29509
I1
s(g11001
I42
g11002
Vinsert
p29510
I42
VSimpleName: client
p29511
tp29512
I4
s(g4557
I42
g4558
Vinsert
p29513
I42
VSimpleName: traceId
p29514
tp29515
I2
s(g3412
I42
g3413
Vinsert
p29516
I42
VSimpleName: props
p29517
tp29518
I2
s(g13430
I42
g13431
Vinsert
p29519
I42
VSimpleName: store
p29520
tp29521
I4
s(g719
I42
g720
Vinsert
p29522
I31
VMethodDeclaration
p29523
tp29524
F1.5
s(g1346
I42
g1347
Vinsert
p29525
I22
VFieldAccess
p29526
tp29527
I1
s(g6997
I42
g6998
Vinsert
p29528
I45
VStringLiteral: "300"
p29529
tp29530
I1
s(g6231
I42
g6232
Vinsert
p29531
I41
VReturnStatement
p29532
tp29533
F0.5
s(g6663
I42
g6664
Vinsert
p29534
I32
VMethodInvocation
p29535
tp29536
F12.5
s(g1533
I42
g1534
Vinsert
p29537
I33
VNullLiteral
p29538
tp29539
I2
s(g2398
I42
g2399
Vinsert
p29540
I65
VTagElement
p29541
tp29542
F0.25
s(g1594
I42
g1595
Vinsert
p29543
I42
VSimpleName: builder
p29544
tp29545
I2
s(g5812
I42
g5813
Vinsert
p29546
I42
VSimpleName: requiredResponses
p29547
tp29548
F0.25
s(g12675
I42
g12676
Vinsert
p29549
I40
VQualifiedName: Span.Builder
p29550
tp29551
I1
s(g5505
I42
g5506
Vinsert
p29552
I39
VPrimitiveType: byte
p29553
tp29554
I2
s(g9604
I42
g9605
Vinsert
p29555
I45
VStringLiteral: "callback"
p29556
tp29557
F0.25
s(g141
I42
g142
Vinsert
p29558
I42
VSimpleName: errorCall
p29559
tp29560
I3
s(g3207
I42
g3208
Vinsert
p29561
I42
VSimpleName: storage2
p29562
tp29563
I1
s(g861
I42
g862
Vinsert
p29564
I42
VSimpleName: checkNotNull
p29565
tp29566
I2
s(g709
I42
g710
Vinsert
p29567
I42
VSimpleName: toJson
p29568
tp29569
F0.25
s(g1602
I42
g1603
Vinsert
p29570
I32
VMethodInvocation
p29571
tp29572
I6
s(g5831
I42
g5832
Vinsert
p29573
I39
VPrimitiveType: boolean
p29574
tp29575
F0.5
s(g2373
I42
g2374
Vinsert
p29576
I42
VSimpleName: forEndpoint
p29577
tp29578
I1
s(g10954
I42
g10955
Vinsert
p29579
I39
VPrimitiveType: void
p29580
tp29581
F0.25
s(g2833
I42
g2834
Vinsert
p29582
I74
VParameterizedType: List<Span>
p29583
tp29584
F0.25
s(g608
I42
g609
Vinsert
p29585
I40
VQualifiedName: builder.port
p29586
tp29587
F0.25
s(g14839
I42
g14840
Vinsert
p29588
I42
VSimpleName: sizeInBytes
p29589
tp29590
I2
s(g3335
I42
g3336
Vinsert
p29591
I43
VSimpleType: SpansDecoder
p29592
tp29593
I1
s(g8791
I42
g8792
Vinsert
p29594
I42
VSimpleName: traceIdCondition
p29595
tp29596
I2
s(g4647
I42
g4648
Vinsert
p29597
I86
VLambdaExpression
p29598
tp29599
I1
s(g4856
I42
g4857
Vinsert
p29600
I7
VAssignment: =
p29601
tp29602
F0.25
s(g2135
I42
g2136
Vinsert
p29603
I83
VModifier: final
p29604
tp29605
F0.25
s(g5166
I42
g5167
Vinsert
p29606
I45
VStringLiteral: "${zipkin.storage.strict-trace-id:true}"
p29607
tp29608
F0.5
s(g1469
I42
g1470
Vinsert
p29609
I42
VSimpleName: Collections
p29610
tp29611
I4
s(g20734
I42
g20735
Vinsert
p29612
I42
VSimpleName: String
p29613
tp29614
I1
s(g7445
I42
g7446
Vinsert
p29615
I45
VStringLiteral: "sr"
p29616
tp29617
I1
s(g724
I42
g725
Vinsert
p29618
I43
VSimpleType: TokenAwarePolicy
p29619
tp29620
I1
s(g3628
I42
g3629
Vinsert
p29621
I40
VQualifiedName: zipkin.internal.Util.UTF_8
p29622
tp29623
F0.25
s(g96
I42
g97
Vinsert
p29624
I78
VMarkerAnnotation
p29625
tp29626
F0.25
s(g254
I42
g255
Vinsert
p29627
I40
VQualifiedName: BucketKeys.INSTANCE
p29628
tp29629
I1
s(g5481
I42
g5482
Vinsert
p29630
I43
VSimpleType: SpanStore
p29631
tp29632
I2
s(g4212
I42
g4213
Vinsert
p29633
I40
VQualifiedName: ZIPKIN_SPANS.ID
p29634
tp29635
I1
s(g1207
I42
g1208
Vinsert
p29636
I14
VClassInstanceCreation
p29637
tp29638
I1
s(g10732
I42
g10733
Vinsert
p29639
I42
VSimpleName: configuration
p29640
tp29641
I2
s(g689
I42
g690
Vinsert
p29642
I74
VParameterizedType: Set<String>
p29643
tp29644
I1
s(g12361
I42
g12362
Vinsert
p29645
I42
VSimpleName: UTF_8
p29646
tp29647
I1
s(g1410
I42
g1411
Vinsert
p29648
I33
VNullLiteral
p29649
tp29650
I1
s(g410
I42
g411
Vinsert
p29651
I43
VSimpleType: TMemoryBuffer
p29652
tp29653
I1
s(g6763
I42
g6764
Vinsert
p29654
I42
VSimpleName: different
p29655
tp29656
I1
s(g19403
I42
g19404
Vinsert
p29657
I8
VBlock
p29658
tp29659
F5.25
s(g997
I42
g998
Vinsert
p29660
I38
VPrefixExpression: !
p29661
tp29662
I2
s(g385
I42
g386
Vinsert
p29663
I43
VSimpleType: zipkin.internal.v2.DependencyLink
p29664
tp29665
I1
s(g8027
I42
g8028
Vinsert
p29666
I42
VSimpleName: receivedSpans
p29667
tp29668
I1
s(g770
I42
g771
Vinsert
p29669
I8
VBlock
p29670
tp29671
I1
s(g7292
I42
g7293
Vinsert
p29672
I34
VNumberLiteral: 1000L
p29673
tp29674
I1
s(g1474
I42
g1475
Vinsert
p29675
I52
VThisExpression
p29676
tp29677
I1
s(g5616
I42
g5617
Vinsert
p29678
I42
VSimpleName: traceId
p29679
tp29680
I1
s(g3599
I42
g3600
Vinsert
p29681
I42
VSimpleName: Builder
p29682
tp29683
F0.25
s(g2067
I42
g2068
Vinsert
p29684
I42
VSimpleName: setsCacheControlOnNameEndpointsWhenMoreThan3Services
p29685
tp29686
F0.25
s(g8765
I42
g8766
Vinsert
p29687
I43
VSimpleType: Void
p29688
tp29689
I1
s(g4639
I42
g4640
Vinsert
p29690
I74
VParameterizedType: Set<String>
p29691
tp29692
F0.25
s(g1566
I42
g1567
Vinsert
p29693
I74
VParameterizedType: Map<String,String>
p29694
tp29695
F0.25
s(g3217
I42
g3218
Vinsert
p29696
I42
VSimpleName: nextString
p29697
tp29698
I1
s(g14286
I42
g14287
Vinsert
p29699
I34
VNumberLiteral: 12
p29700
tp29701
I1
s(g2475
I42
g2476
Vinsert
p29702
I42
VSimpleName: String
p29703
tp29704
I5
s(g2033
I42
g2034
Vinsert
p29705
I45
VStringLiteral: "        \u005c"serviceName\u005c": \u005c"service\u005c",\u005cn"
p29706
tp29707
I1
s(g4280
I42
g4281
Vinsert
p29708
I43
VSimpleType: Node
p29709
tp29710
I1
s(g27865
I42
g27866
Vinsert
p29711
I42
VSimpleName: END_TS
p29712
tp29713
I1
s(g234
I42
g235
Vinsert
p29714
I42
VSimpleName: existingTemplates
p29715
tp29716
I1
s(g1589
I42
g1590
Vinsert
p29717
I43
VSimpleType: Exception
p29718
tp29719
F0.25
s(g4399
I42
g4400
Vinsert
p29720
I42
VSimpleName: storage
p29721
tp29722
I1
s(g7627
I42
g7628
Vinsert
p29723
I42
VSimpleName: e
p29724
tp29725
I1
s(g15413
I42
g15414
Vinsert
p29726
I44
VSingleVariableDeclaration
p29727
tp29728
F1.75
s(g6079
I42
g6080
Vinsert
p29729
I43
VSimpleType: Long
p29730
tp29731
F0.25
s(g9791
I42
g9792
Vinsert
p29732
I60
VVariableDeclarationStatement
p29733
tp29734
I1
s(g26
I42
g27
Vinsert
p29735
I74
VParameterizedType: LinkedHashSet<>
p29736
tp29737
I1
s(g1831
I42
g1832
Vinsert
p29738
I45
VStringLiteral: "http://localhost:"
p29739
tp29740
I1
s(g4913
I42
g4914
Vinsert
p29741
I32
VMethodInvocation
p29742
tp29743
I2
s(g4861
I42
g4862
Vinsert
p29744
I40
VQualifiedName: CassandraConfig.Builder
p29745
tp29746
I1
s(g1207
I42
g1208
Vinsert
p29747
I42
VSimpleName: mapToObj
p29748
tp29749
I1
s(g1346
I42
g1347
Vinsert
p29750
I59
VVariableDeclarationFragment
p29751
tp29752
I1
s(g2566
I42
g2567
Vinsert
p29753
I45
VStringLiteral: "48485A3953BB6124 should be a 1 to 32 character lower-hex string with no prefix"
p29754
tp29755
I2
s(g10659
I42
g10660
Vinsert
p29756
I42
VSimpleName: adapter
p29757
tp29758
I1
s(g2156
I42
g2157
Vinsert
p29759
I42
VSimpleName: length
p29760
tp29761
I2
s(g2426
I42
g2427
Vinsert
p29762
I42
VSimpleName: buf
p29763
tp29764
I1
s(g6167
I42
g6168
Vinsert
p29765
I42
VSimpleName: declarePartitionKey
p29766
tp29767
F0.5
s(g13461
I42
g13462
Vinsert
p29768
I42
VSimpleName: input
p29769
tp29770
I1
s(g1987
I42
g1988
Vinsert
p29771
I43
VSimpleType: TableField
p29772
tp29773
I5
s(g1821
I42
g1822
Vinsert
p29774
I74
VParameterizedType: Map<Long,List<ByteBuffer>>
p29775
tp29776
F0.25
s(g31
I42
g32
Vinsert
p29777
I34
VNumberLiteral: 1
p29778
tp29779
I1
s(g2663
I42
g2664
Vinsert
p29780
I42
VSimpleName: Test
p29781
tp29782
F0.5
s(g15413
I42
g15414
Vinsert
p29783
I41
VReturnStatement
p29784
tp29785
I9
s(g2373
I42
g2374
Vinsert
p29786
I42
VSimpleName: closeEnough
p29787
tp29788
I1
s(g6099
I42
g6100
Vinsert
p29789
I42
VSimpleName: RetryDecision
p29790
tp29791
I2
s(g1790
I42
g1791
Vinsert
p29792
I33
VNullLiteral
p29793
tp29794
I1
s(g11
I42
g12
Vinsert
p29795
I42
VSimpleName: annotation
p29796
tp29797
F0.25
s(g66
I42
g67
Vinsert
p29798
I42
VSimpleName: request
p29799
tp29800
I1
s(g2398
I42
g2399
Vinsert
p29801
I42
VSimpleName: es
p29802
tp29803
F1.25
s(g2771
I42
g2772
Vinsert
p29804
I42
VSimpleName: response
p29805
tp29806
I1
s(g4733
I42
g4734
Vinsert
p29807
I42
VSimpleName: indexer
p29808
tp29809
I1
s(g13444
I42
g13445
Vinsert
p29810
I21
VExpressionStatement
p29811
tp29812
I6
s(g507
I42
g508
Vinsert
p29813
I42
VSimpleName: ActuateCollectorMetrics
p29814
tp29815
F0.25
s(g3380
I42
g3381
Vinsert
p29816
I44
VSingleVariableDeclaration
p29817
tp29818
F0.75
s(g3992
I42
g3993
Vinsert
p29819
I42
VSimpleName: hasToString
p29820
tp29821
I1
s(g2755
I42
g2756
Vinsert
p29822
I22
VFieldAccess
p29823
tp29824
F0.25
s(g4587
I42
g4588
Vinsert
p29825
I42
VSimpleName: expected
p29826
tp29827
F0.5
s(g294
I42
g295
Vinsert
p29828
I43
VSimpleType: Schema
p29829
tp29830
F0.25
s(g2663
I42
g2664
Vinsert
p29831
I42
VSimpleName: writeAscii
p29832
tp29833
I1
s(g8765
I42
g8766
Vinsert
p29834
I42
VSimpleName: Void
p29835
tp29836
I1
s(g41
I42
g42
Vinsert
p29837
I45
VStringLiteral: "Canceled"
p29838
tp29839
I1
s(g10392
I42
g10393
Vinsert
p29840
I43
VSimpleType: TraceServiceSpanNameKey
p29841
tp29842
I2
s(g6355
I42
g6356
Vinsert
p29843
I52
VThisExpression
p29844
tp29845
F0.25
s(g1385
I42
g1386
Vinsert
p29846
I70
VEnhancedForStatement
p29847
tp29848
I1
s(g7582
I42
g7583
Vinsert
p29849
I45
VStringLiteral: "  \u005c"name\u005c": \u005c"get-traces\u005c",\u005cn"
p29850
tp29851
I2
s(g10306
I42
g10307
Vinsert
p29852
I42
VSimpleName: binaryAnnotations
p29853
tp29854
I1
s(g86
I42
g87
Vinsert
p29855
I42
VSimpleName: ZipkinSpanCollector
p29856
tp29857
F0.25
s(g8825
I42
g8826
Vinsert
p29858
I42
VSimpleName: index
p29859
tp29860
I1
s(g11825
I42
g11826
Vinsert
p29861
I42
VSimpleName: append
p29862
tp29863
I9
s(g3176
I42
g3177
Vinsert
p29864
I42
VSimpleName: mergeFunction
p29865
tp29866
F0.5
s(g4264
I42
g4265
Vinsert
p29867
I60
VVariableDeclarationStatement
p29868
tp29869
I1
s(g4738
I42
g4739
Vinsert
p29870
I40
VQualifiedName: ZIPKIN_SPANS.NAME
p29871
tp29872
I1
s(g2398
I42
g2399
Vinsert
p29873
I42
VSimpleName: ElasticsearchHttpStorage
p29874
tp29875
F0.25
s(g567
I42
g568
Vinsert
p29876
I33
VNullLiteral
p29877
tp29878
I1
s(g2694
I42
g2695
Vinsert
p29879
I42
VSimpleName: maybeNull
p29880
tp29881
I5
s(g2838
I42
g2839
Vinsert
p29882
I27
VInfixExpression: !=
p29883
tp29884
I2
s(g497
I42
g498
Vinsert
p29885
I42
VSimpleName: signingHeaders
p29886
tp29887
F0.25
s(g6635
I42
g6636
Vinsert
p29888
I25
VIfStatement
p29889
tp29890
I2
s(g2699
I42
g2700
Vinsert
p29891
I40
VQualifiedName: Request.Builder
p29892
tp29893
I1
s(g3115
I42
g3116
Vinsert
p29894
I31
VMethodDeclaration
p29895
tp29896
F0.25
s(g532
I42
g533
Vinsert
p29897
I45
VStringLiteral: "bound-statement"
p29898
tp29899
I1
s(g2750
I42
g2751
Vinsert
p29900
I42
VSimpleName: sampler
p29901
tp29902
F0.25
s(g5831
I42
g5832
Vinsert
p29903
I32
VMethodInvocation
p29904
tp29905
I2
s(g362
I42
g363
Vinsert
p29906
I43
VSimpleType: RuntimeException
p29907
tp29908
I2
s(g3992
I42
g3993
Vinsert
p29909
I14
VClassInstanceCreation
p29910
tp29911
I1
s(g15413
I42
g15414
Vinsert
p29912
I43
VSimpleType: CollectorMetrics
p29913
tp29914
F0.75
s(g5045
I42
g5046
Vinsert
p29915
I42
VSimpleName: waitForALeader
p29916
tp29917
I1
s(g6167
I42
g6168
Vinsert
p29918
I41
VReturnStatement
p29919
tp29920
I2
s(g3618
I42
g3619
Vinsert
p29921
I60
VVariableDeclarationStatement
p29922
tp29923
I1
s(g1255
I42
g1256
Vinsert
p29924
I42
VSimpleName: queryPort
p29925
tp29926
F0.25
s(g1811
I42
g1812
Vinsert
p29927
I40
VQualifiedName: java.nio.charset.Charset
p29928
tp29929
I1
s(g5510
I42
g5511
Vinsert
p29930
I60
VVariableDeclarationStatement
p29931
tp29932
I2
s(g5435
I42
g5436
Vinsert
p29933
I27
VInfixExpression: ==
p29934
tp29935
I1
s(g2637
I42
g2638
Vinsert
p29936
I40
VQualifiedName: HttpCall.Factory
p29937
tp29938
F0.25
s(g608
I42
g609
Vinsert
p29939
I42
VSimpleName: port
p29940
tp29941
F0.25
s(g4451
I42
g4452
Vinsert
p29942
I42
VSimpleName: cl
p29943
tp29944
F0.25
s(g13567
I42
g13568
Vinsert
p29945
I43
VSimpleType: Span
p29946
tp29947
F0.25
s(g18013
I42
g18014
Vinsert
p29948
I42
VSimpleName: mediaType
p29949
tp29950
F1.25
s(g1657
I42
g1658
Vinsert
p29951
I80
VMemberValuePair
p29952
tp29953
F0.25
s(g2828
I42
g2829
Vinsert
p29954
I42
VSimpleName: serializedBytes
p29955
tp29956
I1
s(g15162
I42
g15163
Vinsert
p29957
I43
VSimpleType: ZipkinElasticsearchOkHttpAutoConfiguration
p29958
tp29959
I2
s(g2896
I42
g2897
Vinsert
p29960
I43
VSimpleType: Callback
p29961
tp29962
F0.25
s(g3398
I42
g3399
Vinsert
p29963
I32
VMethodInvocation
p29964
tp29965
F4.25
s(g6677
I42
g6678
Vinsert
p29966
I21
VExpressionStatement
p29967
tp29968
F0.25
s(g10055
I42
g10056
Vinsert
p29969
I42
VSimpleName: Object
p29970
tp29971
F0.25
s(g1886
I42
g1887
Vinsert
p29972
I43
VSimpleType: java.util.List
p29973
tp29974
I1
s(g1688
I42
g1689
Vinsert
p29975
I5
VArrayType: byte[]
p29976
tp29977
I1
s(g3017
I42
g3018
Vinsert
p29978
I42
VSimpleName: tryAcquire
p29979
tp29980
I1
s(g4673
I42
g4674
Vinsert
p29981
I32
VMethodInvocation
p29982
tp29983
I2
s(g4518
I42
g4519
Vinsert
p29984
I42
VSimpleName: newCall
p29985
tp29986
I1
s(g6979
I42
g6980
Vinsert
p29987
I45
VStringLiteral: "  \u005c"id\u005c": \u005c"6b221d5bc9e6496c\u005c"\u005cn"
p29988
tp29989
I1
s(g4044
I42
g4045
Vinsert
p29990
I8
VBlock
p29991
tp29992
F1.25
s(g2514
I42
g2515
Vinsert
p29993
I44
VSingleVariableDeclaration
p29994
tp29995
F0.25
s(g6045
I42
g6046
Vinsert
p29996
I42
VSimpleName: authenticator
p29997
tp29998
I1
s(g791
I42
g792
Vinsert
p29999
I41
VReturnStatement
p30000
tp30001
I1
s(g6758
I42
g6759
Vinsert
p30002
I14
VClassInstanceCreation
p30003
tp30004
I2
s(g487
I42
g488
Vinsert
p30005
I34
VNumberLiteral: 1L
p30006
tp30007
I1
s(g9791
I42
g9792
Vinsert
p30008
I42
VSimpleName: properties
p30009
tp30010
I2
s(g3072
I42
g3073
Vinsert
p30011
I78
VMarkerAnnotation
p30012
tp30013
F0.25
s(g6894
I42
g6895
Vinsert
p30014
I21
VExpressionStatement
p30015
tp30016
I9
s(g3628
I42
g3629
Vinsert
p30017
I42
VSimpleName: Override
p30018
tp30019
F0.25
s(g7159
I42
g7160
Vinsert
p30020
I21
VExpressionStatement
p30021
tp30022
F25.0
s(g7331
I42
g7332
Vinsert
p30023
I43
VSimpleType: Span
p30024
tp30025
F0.25
s(g7613
I42
g7614
Vinsert
p30026
I42
VSimpleName: s
p30027
tp30028
F1.25
s(g3222
I42
g3223
Vinsert
p30029
I42
VSimpleName: end
p30030
tp30031
I1
s(g385
I42
g386
Vinsert
p30032
I40
VQualifiedName: JsonAdapters.DEPENDENCY_LINK_ADAPTER
p30033
tp30034
I1
s(g1861
I42
g1862
Vinsert
p30035
I40
VQualifiedName: bytes.length
p30036
tp30037
I2
s(g7546
I42
g7547
Vinsert
p30038
I45
VStringLiteral: "zipkin.storage.elasticsearch.index:zipkin_prod"
p30039
tp30040
I1
s(g3186
I42
g3187
Vinsert
p30041
I83
VModifier: static
p30042
tp30043
F0.25
s(g10482
I42
g10483
Vinsert
p30044
I45
VStringLiteral: "zipkin.collector.rabbitmq.addresses:"
p30045
tp30046
I1
s(g19604
I42
g19605
Vinsert
p30047
I42
VSimpleName: setZookeeper
p30048
tp30049
F0.25
s(g66
I42
g67
Vinsert
p30050
I8
VBlock
p30051
tp30052
I1
s(g3938
I42
g3939
Vinsert
p30053
I42
VSimpleName: sampleDecisions
p30054
tp30055
I1
s(g10369
I42
g10370
Vinsert
p30056
I42
VSimpleName: addAnnotation
p30057
tp30058
I1
s(g2658
I42
g2659
Vinsert
p30059
I57
VTypeLiteral
p30060
tp30061
I5
s(g3992
I42
g3993
Vinsert
p30062
I45
VStringLiteral: "kinesis"
p30063
tp30064
I1
s(g891
I42
g892
Vinsert
p30065
I42
VSimpleName: spec
p30066
tp30067
I1
s(g6094
I42
g6095
Vinsert
p30068
I59
VVariableDeclarationFragment
p30069
tp30070
I1
s(g36
I42
g37
Vinsert
p30071
I45
VStringLiteral: "http://foobar.com"
p30072
tp30073
I2
s(g909
I42
g910
Vinsert
p30074
I42
VSimpleName: containsExactly
p30075
tp30076
F2.25
s(g6677
I42
g6678
Vinsert
p30077
I40
VQualifiedName: span.id
p30078
tp30079
I1
s(g2028
I42
g2029
Vinsert
p30080
I40
VQualifiedName: that.duration
p30081
tp30082
F0.25
s(g2127
I42
g2128
Vinsert
p30083
I42
VSimpleName: result
p30084
tp30085
I1
s(g3296
I42
g3297
Vinsert
p30086
I74
VParameterizedType: Callback<V>
p30087
tp30088
F0.25
s(g5259
I42
g5260
Vinsert
p30089
I42
VSimpleName: getRawTrace
p30090
tp30091
F0.25
s(g4367
I42
g4368
Vinsert
p30092
I27
VInfixExpression: ==
p30093
tp30094
I1
s(g11634
I42
g11635
Vinsert
p30095
I42
VSimpleName: conn
p30096
tp30097
I2
s(g395
I42
g396
Vinsert
p30098
I42
VSimpleName: Long
p30099
tp30100
I1
s(g719
I42
g720
Vinsert
p30101
I78
VMarkerAnnotation
p30102
tp30103
F1.5
s(g6145
I42
g6146
Vinsert
p30104
I43
VSimpleType: String
p30105
tp30106
I1
s(g2604
I42
g2605
Vinsert
p30107
I42
VSimpleName: KafkaConfig
p30108
tp30109
I1
s(g10178
I42
g10179
Vinsert
p30110
I45
VStringLiteral: "    \u005c"foo\u005c": NULL\u005cn"
p30111
tp30112
F0.25
s(g7897
I42
g7898
Vinsert
p30113
I42
VSimpleName: spans
p30114
tp30115
F4.5
s(g9290
I42
g9291
Vinsert
p30116
I42
VSimpleName: Override
p30117
tp30118
F0.25
s(g7482
I42
g7483
Vinsert
p30119
I42
VSimpleName: value
p30120
tp30121
F0.25
s(g2658
I42
g2659
Vinsert
p30122
I59
VVariableDeclarationFragment
p30123
tp30124
I9
s(g3793
I42
g3794
Vinsert
p30125
I43
VSimpleType: Span
p30126
tp30127
F3.25
s(g4293
I42
g4294
Vinsert
p30128
I8
VBlock
p30129
tp30130
I3
s(g8258
I42
g8259
Vinsert
p30131
I43
VSimpleType: String
p30132
tp30133
I1
s(g3933
I42
g3934
Vinsert
p30134
I65
VTagElement
p30135
tp30136
F0.25
s(g2108
I42
g2109
Vinsert
p30137
I42
VSimpleName: Resources
p30138
tp30139
I1
s(g12296
I42
g12297
Vinsert
p30140
I74
VParameterizedType: Node<Character>
p30141
tp30142
I2
s(g13780
I42
g13781
Vinsert
p30143
I40
VQualifiedName: Constants.CLIENT_SEND
p30144
tp30145
I1
s(g1095
I42
g1096
Vinsert
p30146
I85
VDimension
p30147
tp30148
F0.25
s(g2309
I42
g2310
Vinsert
p30149
I14
VClassInstanceCreation
p30150
tp30151
I1
s(g497
I42
g498
Vinsert
p30152
I42
VSimpleName: getResourcePath
p30153
tp30154
F0.25
s(g352
I42
g353
Vinsert
p30155
I43
VSimpleType: Span.Builder
p30156
tp30157
I1
s(g2584
I42
g2585
Vinsert
p30158
I32
VMethodInvocation
p30159
tp30160
I9
s(g1484
I42
g1485
Vinsert
p30161
I43
VSimpleType: List
p30162
tp30163
F2.25
s(g3268
I42
g3269
Vinsert
p30164
I57
VTypeLiteral
p30165
tp30166
I2
s(g6663
I42
g6664
Vinsert
p30167
I42
VSimpleName: mem
p30168
tp30169
I4
s(g6827
I42
g6828
Vinsert
p30170
I43
VSimpleType: Span.Builder
p30171
tp30172
I6
s(g12427
I42
g12428
Vinsert
p30173
I42
VSimpleName: throwable
p30174
tp30175
F0.25
s(g967
I42
g968
Vinsert
p30176
I34
VNumberLiteral: 1L
p30177
tp30178
F4.0
s(g1448
I42
g1449
Vinsert
p30179
I42
VSimpleName: isDebug
p30180
tp30181
I1
s(g121
I42
g122
Vinsert
p30182
I54
VTryStatement
p30183
tp30184
I1
s(g2360
I42
g2361
Vinsert
p30185
I14
VClassInstanceCreation
p30186
tp30187
I1
s(g2833
I42
g2834
Vinsert
p30188
I42
VSimpleName: callback
p30189
tp30190
F0.25
s(g6
I42
g7
Vinsert
p30191
I42
VSimpleName: getMethod
p30192
tp30193
I1
s(g1187
I42
g1188
Vinsert
p30194
I43
VSimpleType: SpanAssert
p30195
tp30196
F0.25
s(g1816
I42
g1817
Vinsert
p30197
I44
VSingleVariableDeclaration
p30198
tp30199
F0.25
s(g6536
I42
g6537
Vinsert
p30200
I42
VSimpleName: hasNext
p30201
tp30202
F1.25
s(g8978
I42
g8979
Vinsert
p30203
I45
VStringLiteral: "Override close() to close "
p30204
tp30205
I1
s(g5949
I42
g5950
Vinsert
p30206
I42
VSimpleName: serverSettings
p30207
tp30208
I2
s(g372
I42
g373
Vinsert
p30209
I42
VSimpleName: Component
p30210
tp30211
F0.25
s(g3340
I42
g3341
Vinsert
p30212
I40
VQualifiedName: Request.Builder
p30213
tp30214
I2
s(g5166
I42
g5167
Vinsert
p30215
I26
VImportDeclaration
p30216
tp30217
F0.5
s(g2237
I42
g2238
Vinsert
p30218
I43
VSimpleType: Request
p30219
tp30220
I3
s(g9881
I42
g9882
Vinsert
p30221
I50
VSwitchStatement
p30222
tp30223
I1
s(g6071
I42
g6072
Vinsert
p30224
I42
VSimpleName: c
p30225
tp30226
I1
s(g8135
I42
g8136
Vinsert
p30227
I24
VForStatement
p30228
tp30229
I1
s(g3667
I42
g3668
Vinsert
p30230
I43
VSimpleType: java.util.List
p30231
tp30232
F0.25
s(g7627
I42
g7628
Vinsert
p30233
I8
VBlock
p30234
tp30235
I1
s(g2028
I42
g2029
Vinsert
p30236
I25
VIfStatement
p30237
tp30238
F2.25
s(g7134
I42
g7135
Vinsert
p30239
I7
VAssignment: =
p30240
tp30241
F0.25
s(g116
I42
g117
Vinsert
p30242
I49
VSwitchCase
p30243
tp30244
I1
s(g86
I42
g87
Vinsert
p30245
I44
VSingleVariableDeclaration
p30246
tp30247
F0.25
s(g2260
I42
g2261
Vinsert
p30248
I21
VExpressionStatement
p30249
tp30250
I1
s(g3017
I42
g3018
Vinsert
p30251
I42
VSimpleName: semaphore
p30252
tp30253
I2
s(g357
I42
g358
Vinsert
p30254
I27
VInfixExpression: |
p30255
tp30256
I1
s(g3783
I42
g3784
Vinsert
p30257
I59
VVariableDeclarationFragment
p30258
tp30259
I1
s(g181
I42
g182
Vinsert
p30260
I42
VSimpleName: span
p30261
tp30262
I7
s(g1657
I42
g1658
Vinsert
p30263
I77
VNormalAnnotation
p30264
tp30265
F0.25
s(g5621
I42
g5622
Vinsert
p30266
I45
VStringLiteral: "max-age=31536000"
p30267
tp30268
I1
s(g24151
I42
g24152
Vinsert
p30269
I42
VSimpleName: assertThat
p30270
tp30271
I1
s(g2426
I42
g2427
Vinsert
p30272
I42
VSimpleName: begin
p30273
tp30274
F0.25
s(g2388
I42
g2389
Vinsert
p30275
I42
VSimpleName: DETECTING_DECODER
p30276
tp30277
I2
s(g9615
I42
g9616
Vinsert
p30278
I43
VSimpleType: String
p30279
tp30280
F1.25
s(g6355
I42
g6356
Vinsert
p30281
I43
VSimpleType: String
p30282
tp30283
F0.5
s(g600
I42
g601
Vinsert
p30284
I40
VQualifiedName: ZIPKIN_SPANS.TRACE_ID
p30285
tp30286
I2
s(g3268
I42
g3269
Vinsert
p30287
I43
VSimpleType: SpringApplicationBuilder
p30288
tp30289
I2
s(g1172
I42
g1173
Vinsert
p30290
I27
VInfixExpression: >
p30291
tp30292
I1
s(g5712
I42
g5713
Vinsert
p30293
I42
VSimpleName: ElasticsearchHttpStrictTraceIdFalseTest
p30294
tp30295
F0.25
s(g76
I42
g77
Vinsert
p30296
I25
VIfStatement
p30297
tp30298
I1
s(g239
I42
g240
Vinsert
p30299
I21
VExpressionStatement
p30300
tp30301
I1
s(g2161
I42
g2162
Vinsert
p30302
I42
VSimpleName: ServerAndClientSpanState
p30303
tp30304
F0.25
s(g3628
I42
g3629
Vinsert
p30305
I43
VSimpleType: String
p30306
tp30307
F1.25
s(g522
I42
g523
Vinsert
p30308
I42
VSimpleName: zookeeper
p30309
tp30310
F0.25
s(g646
I42
g647
Vinsert
p30311
I42
VSimpleName: Util
p30312
tp30313
I1
s(g4225
I42
g4226
Vinsert
p30314
I42
VSimpleName: assertThat
p30315
tp30316
I1
s(g2309
I42
g2310
Vinsert
p30317
I13
VCharacterLiteral: '.'
p30318
tp30319
I1
s(g2614
I42
g2615
Vinsert
p30320
I31
VMethodDeclaration
p30321
tp30322
F0.5
s(g2441
I42
g2442
Vinsert
p30323
I43
VSimpleType: String
p30324
tp30325
F0.25
s(g7560
I42
g7561
Vinsert
p30326
I42
VSimpleName: Endpoint
p30327
tp30328
I1
s(g2062
I42
g2063
Vinsert
p30329
I11
VCastExpression
p30330
tp30331
I1
s(g1484
I42
g1485
Vinsert
p30332
I43
VSimpleType: Call
p30333
tp30334
I1
s(g709
I42
g710
Vinsert
p30335
I42
VSimpleName: value
p30336
tp30337
F0.25
s(g2103
I42
g2104
Vinsert
p30338
I42
VSimpleName: url
p30339
tp30340
I1
s(g7240
I42
g7241
Vinsert
p30341
I32
VMethodInvocation
p30342
tp30343
I1
s(g5902
I42
g5903
Vinsert
p30344
I39
VPrimitiveType: void
p30345
tp30346
F0.5
s(g3454
I42
g3455
Vinsert
p30347
I83
VModifier: final
p30348
tp30349
I1
s(g4972
I42
g4973
Vinsert
p30350
I43
VSimpleType: List
p30351
tp30352
I1
s(g3997
I42
g3998
Vinsert
p30353
I42
VSimpleName: serviceName
p30354
tp30355
I5
s(g3525
I42
g3526
Vinsert
p30356
I42
VSimpleName: value
p30357
tp30358
I2
s(g8842
I42
g8843
Vinsert
p30359
I42
VSimpleName: messages
p30360
tp30361
I2
s(g1816
I42
g1817
Vinsert
p30362
I41
VReturnStatement
p30363
tp30364
I1
s(g7897
I42
g7898
Vinsert
p30365
I39
VPrimitiveType: int
p30366
tp30367
I11
s(g1744
I42
g1745
Vinsert
p30368
I9
VBooleanLiteral: true
p30369
tp30370
I1
s(g12697
I42
g12698
Vinsert
p30371
I42
VSimpleName: List
p30372
tp30373
I1
s(g684
I42
g685
Vinsert
p30374
I41
VReturnStatement
p30375
tp30376
I2
s(g171
I42
g172
Vinsert
p30377
I83
VModifier: public
p30378
tp30379
F0.25
s(g4848
I42
g4849
Vinsert
p30380
I42
VSimpleName: asList
p30381
tp30382
I1
s(g582
I42
g583
Vinsert
p30383
I45
VStringLiteral: ":ttl_"
p30384
tp30385
I1
s(g1723
I42
g1724
Vinsert
p30386
I32
VMethodInvocation
p30387
tp30388
I2
s(g3263
I42
g3264
Vinsert
p30389
I42
VSimpleName: traceIds
p30390
tp30391
F0.25
s(g770
I42
g771
Vinsert
p30392
I42
VSimpleName: annotations
p30393
tp30394
I1
s(g1123
I42
g1124
Vinsert
p30395
I42
VSimpleName: RabbitMQCollector
p30396
tp30397
I1
s(g344
I42
g345
Vinsert
p30398
I58
VVariableDeclarationExpression
p30399
tp30400
I1
s(g4701
I42
g4702
Vinsert
p30401
I42
VSimpleName: failureQueue
p30402
tp30403
I1
s(g2896
I42
g2897
Vinsert
p30404
I42
VSimpleName: Void
p30405
tp30406
F0.25
s(g22379
I42
g22380
Vinsert
p30407
I42
VSimpleName: ipv4
p30408
tp30409
F0.25
s(g5259
I42
g5260
Vinsert
p30410
I32
VMethodInvocation
p30411
tp30412
I1
s(g4835
I42
g4836
Vinsert
p30413
I42
VSimpleName: timeout
p30414
tp30415
I2
s(g324
I42
g325
Vinsert
p30416
I27
VInfixExpression: !=
p30417
tp30418
I1
s(g299
I42
g300
Vinsert
p30419
I16
VConditionalExpression
p30420
tp30421
I1
s(g4451
I42
g4452
Vinsert
p30422
I42
VSimpleName: endpoint
p30423
tp30424
I1
s(g4913
I42
g4914
Vinsert
p30425
I40
VQualifiedName: Map.Entry
p30426
tp30427
I2
s(g2393
I42
g2394
Vinsert
p30428
I16
VConditionalExpression
p30429
tp30430
I2
s(g1523
I42
g1524
Vinsert
p30431
I21
VExpressionStatement
p30432
tp30433
I1
s(g7951
I42
g7952
Vinsert
p30434
I42
VSimpleName: build
p30435
tp30436
F0.25
s(g7482
I42
g7483
Vinsert
p30437
I42
VSimpleName: RequestParam
p30438
tp30439
F0.25
s(g2436
I42
g2437
Vinsert
p30440
I42
VSimpleName: Options
p30441
tp30442
I1
s(g2127
I42
g2128
Vinsert
p30443
I62
VInstanceofExpression
p30444
tp30445
I1
s(g2936
I42
g2937
Vinsert
p30446
I59
VVariableDeclarationFragment
p30447
tp30448
I2
s(g806
I42
g807
Vinsert
p30449
I42
VSimpleName: expected
p30450
tp30451
F0.25
s(g13606
I42
g13607
Vinsert
p30452
I42
VSimpleName: guavaSpanStore
p30453
tp30454
F0.25
s(g4754
I42
g4755
Vinsert
p30455
I45
VStringLiteral: "    }"
p30456
tp30457
I1
s(g24817
I42
g24818
Vinsert
p30458
I42
VSimpleName: queryBuilder
p30459
tp30460
F0.25
s(g1518
I42
g1519
Vinsert
p30461
I42
VSimpleName: debug
p30462
tp30463
I1
s(g3474
I42
g3475
Vinsert
p30464
I42
VSimpleName: DeduplicatingExecutor
p30465
tp30466
I4
s(g13686
I42
g13687
Vinsert
p30467
I1
VAnonymousClassDeclaration
p30468
tp30469
F0.5
s(g3644
I42
g3645
Vinsert
p30470
I60
VVariableDeclarationStatement
p30471
tp30472
I1
s(g14755
I42
g14756
Vinsert
p30473
I42
VSimpleName: MariaDbDataSource
p30474
tp30475
I1
s(g1633
I42
g1634
Vinsert
p30476
I42
VSimpleName: limit
p30477
tp30478
F0.25
s(g9019
I42
g9020
Vinsert
p30479
I42
VSimpleName: annotationQuery
p30480
tp30481
I1
s(g846
I42
g847
Vinsert
p30482
I32
VMethodInvocation
p30483
tp30484
I43
s(g3979
I42
g3980
Vinsert
p30485
I42
VSimpleName: legacyReadsEnabled
p30486
tp30487
F0.5
s(g12875
I42
g12876
Vinsert
p30488
I74
VParameterizedType: TableField<Record,Double>
p30489
tp30490
I1
s(g2038
I42
g2039
Vinsert
p30491
I43
VSimpleType: GuavaSpanStore
p30492
tp30493
F0.25
s(g16271
I42
g16272
Vinsert
p30494
I42
VSimpleName: when
p30495
tp30496
I1
s(g1103
I42
g1104
Vinsert
p30497
I9
VBooleanLiteral: true
p30498
tp30499
I1
s(g9008
I42
g9009
Vinsert
p30500
I42
VSimpleName: QueryRequest
p30501
tp30502
I3
s(g1270
I42
g1271
Vinsert
p30503
I8
VBlock
p30504
tp30505
I1
s(g13205
I42
g13206
Vinsert
p30506
I42
VSimpleName: context
p30507
tp30508
F1.25
s(g4212
I42
g4213
Vinsert
p30509
I42
VSimpleName: ZIPKIN_ANNOTATIONS
p30510
tp30511
I1
s(g8089
I42
g8090
Vinsert
p30512
I78
VMarkerAnnotation
p30513
tp30514
F0.25
s(g6889
I42
g6890
Vinsert
p30515
I42
VSimpleName: DependencyLink
p30516
tp30517
I1
s(g2732
I42
g2733
Vinsert
p30518
I42
VSimpleName: assertThat
p30519
tp30520
I1
s(g4523
I42
g4524
Vinsert
p30521
I78
VMarkerAnnotation
p30522
tp30523
F0.25
s(g4835
I42
g4836
Vinsert
p30524
I32
VMethodInvocation
p30525
tp30526
I39
s(g2704
I42
g2705
Vinsert
p30527
I43
VSimpleType: SslClient
p30528
tp30529
I1
s(g1372
I42
g1373
Vinsert
p30530
I83
VModifier: public
p30531
tp30532
F0.25
s(g9817
I42
g9818
Vinsert
p30533
I43
VSimpleType: Object
p30534
tp30535
I1
s(g14635
I42
g14636
Vinsert
p30536
I32
VMethodInvocation
p30537
tp30538
I1
s(g7112
I42
g7113
Vinsert
p30539
I31
VMethodDeclaration
p30540
tp30541
F0.25
s(g7654
I42
g7655
Vinsert
p30542
I42
VSimpleName: CassandraStorageRule
p30543
tp30544
F0.25
s(g8825
I42
g8826
Vinsert
p30545
I42
VSimpleName: dateFormat
p30546
tp30547
I1
s(Vinsert
p30548
I42
VSimpleName: builder
p30549
Vinsert
p30550
I42
VSimpleName: buildCluster
p30551
tp30552
I1
s(g9791
I42
g9792
Vinsert
p30553
I42
VSimpleName: ZipkinKafkaCollectorProperties
p30554
tp30555
I2
s(g2771
I42
g2772
Vinsert
p30556
I59
VVariableDeclarationFragment
p30557
tp30558
I1
s(g1551
I42
g1552
Vinsert
p30559
I42
VSimpleName: expectMessage
p30560
tp30561
I1
s(g5505
I42
g5506
Vinsert
p30562
I42
VSimpleName: System
p30563
tp30564
I3
s(g3833
I42
g3834
Vinsert
p30565
I43
VSimpleType: Request
p30566
tp30567
I1
s(g5311
I42
g5312
Vinsert
p30568
I42
VSimpleName: sanitizeMetricName
p30569
tp30570
I1
s(g2843
I42
g2844
Vinsert
p30571
I42
VSimpleName: response
p30572
tp30573
I2
s(g11001
I42
g11002
Vinsert
p30574
I42
VSimpleName: Response
p30575
tp30576
F3.25
s(g26002
I42
g26003
Vinsert
p30577
I59
VVariableDeclarationFragment
p30578
tp30579
I3
s(g7674
I42
g7675
Vinsert
p30580
I42
VSimpleName: first
p30581
tp30582
I1
s(g4539
I42
g4540
Vinsert
p30583
I42
VSimpleName: captor
p30584
tp30585
I1
s(g4280
I42
g4281
Vinsert
p30586
I74
VParameterizedType: Node<Span>
p30587
tp30588
I1
s(g3422
I42
g3423
Vinsert
p30589
I59
VVariableDeclarationFragment
p30590
tp30591
I1
s(g3150
I42
g3151
Vinsert
p30592
I34
VNumberLiteral: 0xDFFF
p30593
tp30594
I1
s(g2949
I42
g2950
Vinsert
p30595
I42
VSimpleName: lowerHex
p30596
tp30597
I1
s(g1123
I42
g1124
Vinsert
p30598
I40
VQualifiedName: RabbitMQCollector.Builder
p30599
tp30600
F1.25
s(g3046
I42
g3047
Vinsert
p30601
I14
VClassInstanceCreation
p30602
tp30603
I1
s(g13686
I42
g13687
Vinsert
p30604
I42
VSimpleName: initialValue
p30605
tp30606
F0.5
s(g3474
I42
g3475
Vinsert
p30607
I42
VSimpleName: executor
p30608
tp30609
I2
s(g4733
I42
g4734
Vinsert
p30610
I42
VSimpleName: execute
p30611
tp30612
F0.5
s(g9215
I42
g9216
Vinsert
p30613
I14
VClassInstanceCreation
p30614
tp30615
I1
s(g2802
I42
g2803
Vinsert
p30616
I78
VMarkerAnnotation
p30617
tp30618
F0.25
s(g10089
I42
g10090
Vinsert
p30619
I42
VSimpleName: sr
p30620
tp30621
I1
s(g11317
I42
g11318
Vinsert
p30622
I43
VSimpleType: JsonReader
p30623
tp30624
F0.5
s(g11397
I42
g11398
Vinsert
p30625
I42
VSimpleName: requestedHeadersAllowed
p30626
tp30627
I1
s(g1187
I42
g1188
Vinsert
p30628
I42
VSimpleName: objects
p30629
tp30630
I1
s(g2355
I42
g2356
Vinsert
p30631
I42
VSimpleName: stream
p30632
tp30633
I2
s(g8458
I42
g8459
Vinsert
p30634
I42
VSimpleName: TODAY
p30635
tp30636
I4
s(g4918
I42
g4919
Vinsert
p30637
I42
VSimpleName: kafka
p30638
tp30639
I1
s(g405
I42
g406
Vinsert
p30640
I42
VSimpleName: execute
p30641
tp30642
F0.25
s(g3662
I42
g3663
Vinsert
p30643
I37
VPostfixExpression: ++
p30644
tp30645
I1
s(g23316
I42
g23317
Vinsert
p30646
I45
VStringLiteral: "endpoint_ipv6"
p30647
tp30648
I1
s(g5112
I42
g5113
Vinsert
p30649
I31
VMethodDeclaration
p30650
tp30651
F0.25
s(g6407
I42
g6408
Vinsert
p30652
I60
VVariableDeclarationStatement
p30653
tp30654
I1
s(g5034
I42
g5035
Vinsert
p30655
I43
VSimpleType: Span
p30656
tp30657
I1
s(g2383
I42
g2384
Vinsert
p30658
I42
VSimpleName: i
p30659
tp30660
F1.0
s(g997
I42
g998
Vinsert
p30661
I42
VSimpleName: Collections
p30662
tp30663
F7.25
s(g3997
I42
g3998
Vinsert
p30664
I45
VStringLiteral: "meth"
p30665
tp30666
I1
s(g1561
I42
g1562
Vinsert
p30667
I62
VInstanceofExpression
p30668
tp30669
F0.25
s(g4212
I42
g4213
Vinsert
p30670
I40
VQualifiedName: ZIPKIN_ANNOTATIONS.TRACE_ID
p30671
tp30672
I1
s(g4380
I42
g4381
Vinsert
p30673
I42
VSimpleName: IOException
p30674
tp30675
F0.25
s(g12692
I42
g12693
Vinsert
p30676
I42
VSimpleName: captor
p30677
tp30678
I2
s(g729
I42
g730
Vinsert
p30679
I43
VSimpleType: Level
p30680
tp30681
F0.25
s(g96
I42
g97
Vinsert
p30682
I39
VPrimitiveType: int
p30683
tp30684
F0.25
s(g4415
I42
g4416
Vinsert
p30685
I40
VQualifiedName: com.twitter.zipkin.thriftjava.Span
p30686
tp30687
I2
s(g2647
I42
g2648
Vinsert
p30688
I7
VAssignment: =
p30689
tp30690
I2
s(g6595
I42
g6596
Vinsert
p30691
I42
VSimpleName: newInput
p30692
tp30693
I1
s(g2712
I42
g2713
Vinsert
p30694
I44
VSingleVariableDeclaration
p30695
tp30696
F0.25
s(g3720
I42
g3721
Vinsert
p30697
I43
VSimpleType: ResponseEntity
p30698
tp30699
F0.25
s(g4136
I42
g4137
Vinsert
p30700
I42
VSimpleName: trace
p30701
tp30702
I1
s(g4576
I42
g4577
Vinsert
p30703
I43
VSimpleType: V
p30704
tp30705
F1.25
s(g537
I42
g538
Vinsert
p30706
I42
VSimpleName: consumer
p30707
tp30708
I1
s(g1688
I42
g1689
Vinsert
p30709
I32
VMethodInvocation
p30710
tp30711
I3
s(g3150
I42
g3151
Vinsert
p30712
I32
VMethodInvocation
p30713
tp30714
I1
s(g16828
I42
g16829
Vinsert
p30715
I27
VInfixExpression: !=
p30716
tp30717
I1
s(g1351
I42
g1352
Vinsert
p30718
I8
VBlock
p30719
tp30720
I2
s(g537
I42
g538
Vinsert
p30721
I42
VSimpleName: builder
p30722
tp30723
I1
s(g284
I42
g285
Vinsert
p30724
I43
VSimpleType: DependencyLinkSpan
p30725
tp30726
I1
s(g8693
I42
g8694
Vinsert
p30727
I42
VSimpleName: BigInteger
p30728
tp30729
I3
s(g1040
I42
g1041
Vinsert
p30730
I39
VPrimitiveType: byte
p30731
tp30732
F0.25
s(g9817
I42
g9818
Vinsert
p30733
I74
VParameterizedType: Iterator<Object>
p30734
tp30735
I1
s(g5598
I42
g5599
Vinsert
p30736
I42
VSimpleName: i
p30737
tp30738
I1
s(g1871
I42
g1872
Vinsert
p30739
I40
VQualifiedName: builder.indexCacheMax
p30740
tp30741
I1
s(g934
I42
g935
Vinsert
p30742
I42
VSimpleName: buf
p30743
tp30744
I1
s(g3599
I42
g3600
Vinsert
p30745
I66
VTextElement: A comma separated list of elasticsearch host to connect to, in a transport-specific format.
p30746
tp30747
F0.25
s(g5410
I42
g5411
Vinsert
p30748
I42
VSimpleName: onSuccess
p30749
tp30750
F1.0
s(g14939
I42
g14940
Vinsert
p30751
I42
VSimpleName: endpoint
p30752
tp30753
F1.5
s(g400
I42
g401
Vinsert
p30754
I42
VSimpleName: span
p30755
tp30756
I1
s(g9047
I42
g9048
Vinsert
p30757
I14
VClassInstanceCreation
p30758
tp30759
I1
s(g1683
I42
g1684
Vinsert
p30760
I60
VVariableDeclarationStatement
p30761
tp30762
I1
s(g1826
I42
g1827
Vinsert
p30763
I42
VSimpleName: ServerSpan
p30764
tp30765
I1
s(g1561
I42
g1562
Vinsert
p30766
I60
VVariableDeclarationStatement
p30767
tp30768
I1
s(g2875
I42
g2876
Vinsert
p30769
I43
VSimpleType: String
p30770
tp30771
I1
s(g16271
I42
g16272
Vinsert
p30772
I8
VBlock
p30773
tp30774
I1
s(g2727
I42
g2728
Vinsert
p30775
I43
VSimpleType: PublicMetrics
p30776
tp30777
I1
s(g4399
I42
g4400
Vinsert
p30778
I42
VSimpleName: forEach
p30779
tp30780
I1
s(g826
I42
g827
Vinsert
p30781
I42
VSimpleName: v2Storage
p30782
tp30783
F0.5
s(g4647
I42
g4648
Vinsert
p30784
I43
VSimpleType: String
p30785
tp30786
I1
s(g3667
I42
g3668
Vinsert
p30787
I43
VSimpleType: zipkin.Span
p30788
tp30789
F0.5
s(g1410
I42
g1411
Vinsert
p30790
I39
VPrimitiveType: byte
p30791
tp30792
I1
s(g4367
I42
g4368
Vinsert
p30793
I42
VSimpleName: getSpanNames
p30794
tp30795
F0.25
s(g9547
I42
g9548
Vinsert
p30796
I43
VSimpleType: TransportClient
p30797
tp30798
I1
s(g5098
I42
g5099
Vinsert
p30799
I43
VSimpleType: TraceId
p30800
tp30801
F0.5
s(g5634
I42
g5635
Vinsert
p30802
I42
VSimpleName: String
p30803
tp30804
F1.5
s(g5720
I42
g5721
Vinsert
p30805
I14
VClassInstanceCreation
p30806
tp30807
I1
s(g1551
I42
g1552
Vinsert
p30808
I45
VStringLiteral: "serviceName"
p30809
tp30810
I1
s(g6167
I42
g6168
Vinsert
p30811
I42
VSimpleName: Insert
p30812
tp30813
F1.0
s(g4330
I42
g4331
Vinsert
p30814
I42
VSimpleName: LoggerFactory
p30815
tp30816
I1
s(g13924
I42
g13925
Vinsert
p30817
I25
VIfStatement
p30818
tp30819
I2
s(g9258
I42
g9259
Vinsert
p30820
I59
VVariableDeclarationFragment
p30821
tp30822
I3
s(g2771
I42
g2772
Vinsert
p30823
I32
VMethodInvocation
p30824
tp30825
F4.25
s(g2865
I42
g2866
Vinsert
p30826
I42
VSimpleName: remainingInPage
p30827
tp30828
I1
s(g7394
I42
g7395
Vinsert
p30829
I43
VSimpleType: Properties
p30830
tp30831
I4
s(g9587
I42
g9588
Vinsert
p30832
I45
VStringLiteral: "  }\u005cn"
p30833
tp30834
I1
s(g10158
I42
g10159
Vinsert
p30835
I42
VSimpleName: Args
p30836
tp30837
F0.25
s(g4085
I42
g4086
Vinsert
p30838
I52
VThisExpression
p30839
tp30840
I2
s(g86
I42
g87
Vinsert
p30841
I42
VSimpleName: spanCollector
p30842
tp30843
F0.25
s(g1851
I42
g1852
Vinsert
p30844
I38
VPrefixExpression: -
p30845
tp30846
I2
s(g3380
I42
g3381
Vinsert
p30847
I70
VEnhancedForStatement
p30848
tp30849
F0.5
s(g2426
I42
g2427
Vinsert
p30850
I43
VSimpleType: UnsupportedEncodingException
p30851
tp30852
F0.25
s(g25456
I42
g25457
Vinsert
p30853
I42
VSimpleName: newScribeSpanConsumer
p30854
tp30855
F0.25
s(g806
I42
g807
Vinsert
p30856
I42
VSimpleName: UnsupportedOperationException
p30857
tp30858
F0.25
s(g9977
I42
g9978
Vinsert
p30859
I45
VStringLiteral: "/api/v1/trace/"
p30860
tp30861
I1
s(g451
I42
g452
Vinsert
p30862
I40
VQualifiedName: ElasticsearchHttpStorage.Builder
p30863
tp30864
F0.5
s(g176
I42
g177
Vinsert
p30865
I42
VSimpleName: tags
p30866
tp30867
I1
s(g3443
I42
g3444
Vinsert
p30868
I25
VIfStatement
p30869
tp30870
I2
s(g1053
I42
g1054
Vinsert
p30871
I42
VSimpleName: Jre6
p30872
tp30873
I1
s(g6407
I42
g6408
Vinsert
p30874
I39
VPrimitiveType: int
p30875
tp30876
I1
s(g5897
I42
g5898
Vinsert
p30877
I43
VSimpleType: SpanStore
p30878
tp30879
F0.25
s(g1367
I42
g1368
Vinsert
p30880
I42
VSimpleName: request
p30881
tp30882
F1.25
s(g2920
I42
g2921
Vinsert
p30883
I44
VSingleVariableDeclaration
p30884
tp30885
F0.75
s(g11026
I42
g11027
Vinsert
p30886
I42
VSimpleName: Autowired
p30887
tp30888
F0.5
s(g7850
I42
g7851
Vinsert
p30889
I45
VStringLiteral: "Starting docker image "
p30890
tp30891
I2
s(g4557
I42
g4558
Vinsert
p30892
I45
VStringLiteral: "_search"
p30893
tp30894
I1
s(g2880
I42
g2881
Vinsert
p30895
I59
VVariableDeclarationFragment
p30896
tp30897
F1.5
s(g1561
I42
g1562
Vinsert
p30898
I43
VSimpleType: BufferUnderflowException
p30899
tp30900
F0.25
s(g4425
I42
g4426
Vinsert
p30901
I42
VSimpleName: overrideShardAndReplicaCount
p30902
tp30903
F0.25
s(g4712
I42
g4713
Vinsert
p30904
I44
VSingleVariableDeclaration
p30905
tp30906
F0.25
s(g1665
I42
g1666
Vinsert
p30907
I40
VQualifiedName: okhttp3.Call
p30908
tp30909
F0.25
s(g5158
I42
g5159
Vinsert
p30910
I45
VStringLiteral: "zipkin.storage.elasticsearch.aws.domain"
p30911
tp30912
I1
s(g7086
I42
g7087
Vinsert
p30913
I43
VSimpleType: Error
p30914
tp30915
I1
s(g5547
I42
g5548
Vinsert
p30916
I42
VSimpleName: spans
p30917
tp30918
I3
s(g81
I42
g82
Vinsert
p30919
I42
VSimpleName: localServiceName
p30920
tp30921
I1
s(g1327
I42
g1328
Vinsert
p30922
I8
VBlock
p30923
tp30924
I1
s(g400
I42
g401
Vinsert
p30925
I45
VStringLiteral: "      }\u005cn"
p30926
tp30927
I1
s(g679
I42
g680
Vinsert
p30928
I40
VQualifiedName: source.timestamp
p30929
tp30930
I1
s(g2416
I42
g2417
Vinsert
p30931
I43
VSimpleType: IllegalStateException
p30932
tp30933
I1
s(g26
I42
g27
Vinsert
p30934
I43
VSimpleType: LinkedHashSet
p30935
tp30936
I1
s(Vinsert
p30937
I42
VSimpleName: register
p30938
Vinsert
p30939
I45
VStringLiteral: "zipkin.collector.kafka.bootstrap-servers:"
p30940
tp30941
I1
s(g2627
I42
g2628
Vinsert
p30942
I45
VStringLiteral: "/api/v1/spans"
p30943
tp30944
I1
s(g806
I42
g807
Vinsert
p30945
I42
VSimpleName: message
p30946
tp30947
I1
s(g7287
I42
g7288
Vinsert
p30948
I45
VStringLiteral: "MYSQL_USER"
p30949
tp30950
I2
s(g734
I42
g735
Vinsert
p30951
I36
VParenthesizedExpression
p30952
tp30953
I1
s(g9290
I42
g9291
Vinsert
p30954
I74
VParameterizedType: Collection<TopicPartition>
p30955
tp30956
F0.25
s(g1095
I42
g1096
Vinsert
p30957
I41
VReturnStatement
p30958
tp30959
I1
s(g2810
I42
g2811
Vinsert
p30960
I43
VSimpleType: Executor
p30961
tp30962
I1
s(g679
I42
g680
Vinsert
p30963
I8
VBlock
p30964
tp30965
I1
s(g6129
I42
g6130
Vinsert
p30966
I42
VSimpleName: IOException
p30967
tp30968
F0.25
s(g7292
I42
g7293
Vinsert
p30969
I42
VSimpleName: c
p30970
tp30971
I2
s(g15405
I42
g15406
Vinsert
p30972
I21
VExpressionStatement
p30973
tp30974
I1
s(g4712
I42
g4713
Vinsert
p30975
I42
VSimpleName: Exception
p30976
tp30977
F0.25
s(g3997
I42
g3998
Vinsert
p30978
I42
VSimpleName: assertThat
p30979
tp30980
I1
s(g1816
I42
g1817
Vinsert
p30981
I32
VMethodInvocation
p30982
tp30983
I1
s(g5558
I42
g5559
Vinsert
p30984
I61
VWhileStatement
p30985
tp30986
I1
s(g1886
I42
g1887
Vinsert
p30987
I74
VParameterizedType: java.util.List<JsonSpan>
p30988
tp30989
I1
s(g7482
I42
g7483
Vinsert
p30990
I32
VMethodInvocation
p30991
tp30992
I3
s(g6421
I42
g6422
Vinsert
p30993
I21
VExpressionStatement
p30994
tp30995
I1
s(g1916
I42
g1917
Vinsert
p30996
I42
VSimpleName: ConditionContext
p30997
tp30998
F0.25
s(g2802
I42
g2803
Vinsert
p30999
I42
VSimpleName: es
p31000
tp31001
I1
s(g18816
I42
g18817
Vinsert
p31002
I42
VSimpleName: _1
p31003
tp31004
I1
s(g456
I42
g457
Vinsert
p31005
I42
VSimpleName: e
p31006
tp31007
I2
s(g2870
I42
g2871
Vinsert
p31008
I42
VSimpleName: ParseException
p31009
tp31010
F0.25
s(g2525
I42
g2526
Vinsert
p31011
I42
VSimpleName: out
p31012
tp31013
F0.25
s(g1164
I42
g1165
Vinsert
p31014
I43
VSimpleType: TraceIdUDT
p31015
tp31016
I1
s(g2459
I42
g2460
Vinsert
p31017
I42
VSimpleName: queryBuilder
p31018
tp31019
I1
s(g367
I42
g368
Vinsert
p31020
I42
VSimpleName: toList
p31021
tp31022
F0.25
s(g4461
I42
g4462
Vinsert
p31023
I42
VSimpleName: result
p31024
tp31025
I1
s(g410
I42
g411
Vinsert
p31026
I42
VSimpleName: transport
p31027
tp31028
I2
s(g7151
I42
g7152
Vinsert
p31029
I42
VSimpleName: scribe
p31030
tp31031
I1
s(g13581
I42
g13582
Vinsert
p31032
I74
VParameterizedType: Set<Long>
p31033
tp31034
I1
s(g944
I42
g945
Vinsert
p31035
I42
VSimpleName: PropertyPlaceholderAutoConfiguration
p31036
tp31037
I1
s(g562
I42
g563
Vinsert
p31038
I42
VSimpleName: image
p31039
tp31040
I1
s(g2875
I42
g2876
Vinsert
p31041
I32
VMethodInvocation
p31042
tp31043
I1
s(g13581
I42
g13582
Vinsert
p31044
I42
VSimpleName: futureKeySetsToIntersect
p31045
tp31046
I1
s(g1438
I42
g1439
Vinsert
p31047
I42
VSimpleName: result
p31048
tp31049
I2
s(g1744
I42
g1745
Vinsert
p31050
I25
VIfStatement
p31051
tp31052
I1
s(g4052
I42
g4053
Vinsert
p31053
I42
VSimpleName: shutdownNow
p31054
tp31055
F0.25
s(g196
I42
g197
Vinsert
p31056
I44
VSingleVariableDeclaration
p31057
tp31058
F0.75
s(g14825
I42
g14826
Vinsert
p31059
I45
VStringLiteral: "/api/v2/spans"
p31060
tp31061
I1
s(g689
I42
g690
Vinsert
p31062
I43
VSimpleType: LinkedHashSet
p31063
tp31064
I1
s(g3767
I42
g3768
Vinsert
p31065
I43
VSimpleType: ArrayList
p31066
tp31067
I2
s(g3618
I42
g3619
Vinsert
p31068
I9
VBooleanLiteral: true
p31069
tp31070
I1
s(g7428
I42
g7429
Vinsert
p31071
I42
VSimpleName: store
p31072
tp31073
I1
s(g10727
I42
g10728
Vinsert
p31074
I43
VSimpleType: BinaryAnnotation
p31075
tp31076
I1
s(g527
I42
g528
Vinsert
p31077
I42
VSimpleName: create
p31078
tp31079
I3
s(g4493
I42
g4494
Vinsert
p31080
I45
VStringLiteral: "overrides.auto.offset.reset"
p31081
tp31082
I1
s(g6089
I42
g6090
Vinsert
p31083
I42
VSimpleName: getTraces_storedUsingHttp
p31084
tp31085
F0.25
s(g1811
I42
g1812
Vinsert
p31086
I83
VModifier: final
p31087
tp31088
I1
s(g13877
I42
g13878
Vinsert
p31089
I60
VVariableDeclarationStatement
p31090
tp31091
I1
s(g2642
I42
g2643
Vinsert
p31092
I42
VSimpleName: statement
p31093
tp31094
I3
s(g4728
I42
g4729
Vinsert
p31095
I42
VSimpleName: length
p31096
tp31097
F0.25
s(g81
I42
g82
Vinsert
p31098
I42
VSimpleName: String
p31099
tp31100
F2.25
s(g2436
I42
g2437
Vinsert
p31101
I43
VSimpleType: RunnerException
p31102
tp31103
F0.25
s(g8994
I42
g8995
Vinsert
p31104
I33
VNullLiteral
p31105
tp31106
I1
s(g4192
I42
g4193
Vinsert
p31107
I41
VReturnStatement
p31108
tp31109
F0.25
s(g6363
I42
g6364
Vinsert
p31110
I42
VSimpleName: onSuccess
p31111
tp31112
I1
s(g997
I42
g998
Vinsert
p31113
I43
VSimpleType: ArrayList
p31114
tp31115
I1
s(g5984
I42
g5985
Vinsert
p31116
I8
VBlock
p31117
tp31118
F1.25
s(g2247
I42
g2248
Vinsert
p31119
I45
VStringLiteral: "2"
p31120
tp31121
I1
s(g15097
I42
g15098
Vinsert
p31122
I27
VInfixExpression: !=
p31123
tp31124
I1
s(g3851
I42
g3852
Vinsert
p31125
I45
VStringLiteral: "48485a3953bb61246b221d5bc9e6496c"
p31126
tp31127
I1
s(g1032
I42
g1033
Vinsert
p31128
I34
VNumberLiteral: 32
p31129
tp31130
I1
s(g2454
I42
g2455
Vinsert
p31131
I8
VBlock
p31132
tp31133
I1
s(g17843
I42
g17844
Vinsert
p31134
I42
VSimpleName: CassandraStorage
p31135
tp31136
F0.25
s(g2632
I42
g2633
Vinsert
p31137
I45
VStringLiteral: "zipkin.ui.enabled:false"
p31138
tp31139
I1
s(g3186
I42
g3187
Vinsert
p31140
I42
VSimpleName: Stream
p31141
tp31142
I1
s(g6195
I42
g6196
Vinsert
p31143
I42
VSimpleName: SpanNode
p31144
tp31145
I1
s(g6992
I42
g6993
Vinsert
p31146
I42
VSimpleName: sampleRate
p31147
tp31148
I1
s(g16271
I42
g16272
Vinsert
p31149
I31
VMethodDeclaration
p31150
tp31151
F0.25
s(g861
I42
g862
Vinsert
p31152
I43
VSimpleType: Codec
p31153
tp31154
I1
s(g1012
I42
g1013
Vinsert
p31155
I42
VSimpleName: BeforeClass
p31156
tp31157
F0.5
s(g4908
I42
g4909
Vinsert
p31158
I42
VSimpleName: client
p31159
tp31160
I1
s(g5746
I42
g5747
Vinsert
p31161
I42
VSimpleName: assertThat
p31162
tp31163
I3
s(g6426
I42
g6427
Vinsert
p31164
I43
VSimpleType: S
p31165
tp31166
I1
s(g1085
I42
g1086
Vinsert
p31167
I25
VIfStatement
p31168
tp31169
I1
s(g10123
I42
g10124
Vinsert
p31170
I42
VSimpleName: buf
p31171
tp31172
F0.25
s(g2127
I42
g2128
Vinsert
p31173
I32
VMethodInvocation
p31174
tp31175
I1
s(g1237
I42
g1238
Vinsert
p31176
I42
VSimpleName: equals
p31177
tp31178
I1
s(g1187
I42
g1188
Vinsert
p31179
I42
VSimpleName: SpanAssert
p31180
tp31181
F0.25
s(g6203
I42
g6204
Vinsert
p31182
I42
VSimpleName: toString
p31183
tp31184
F0.5
s(g1464
I42
g1465
Vinsert
p31185
I66
VTextElement: , so needn't be indexed.
p31186
tp31187
I1
s(g1327
I42
g1328
Vinsert
p31188
I78
VMarkerAnnotation
p31189
tp31190
F0.25
s(Vinsert
p31191
I42
VSimpleName: toBuilder
p31192
Vinsert
p31193
I42
VSimpleName: IOException
p31194
tp31195
F0.5
s(g126
I42
g127
Vinsert
p31196
I42
VSimpleName: storage
p31197
tp31198
F0.25
s(g5259
I42
g5260
Vinsert
p31199
I42
VSimpleName: traceId
p31200
tp31201
F0.25
s(g4972
I42
g4973
Vinsert
p31202
I40
VQualifiedName: Moshi.Builder
p31203
tp31204
I2
s(g608
I42
g609
Vinsert
p31205
I14
VClassInstanceCreation
p31206
tp31207
I1
s(g390
I42
g391
Vinsert
p31208
I42
VSimpleName: build
p31209
tp31210
F1.5
s(g66
I42
g67
Vinsert
p31211
I32
VMethodInvocation
p31212
tp31213
I2
s(g4225
I42
g4226
Vinsert
p31214
I45
VStringLiteral: "foo"
p31215
tp31216
I2
s(g1607
I42
g1608
Vinsert
p31217
I65
VTagElement
p31218
tp31219
F0.25
s(g7305
I42
g7306
Vinsert
p31220
I41
VReturnStatement
p31221
tp31222
I3
s(g5785
I42
g5786
Vinsert
p31223
I42
VSimpleName: span
p31224
tp31225
I2
s(g5316
I42
g5317
Vinsert
p31226
I42
VSimpleName: GetRawTraceDoubleCallback
p31227
tp31228
I2
s(g8367
I42
g8368
Vinsert
p31229
I45
VStringLiteral: "    \u005c"number\u005c" : \u005c"5.0.0\u005c",\u005cn"
p31230
tp31231
I1
s(g1
I42
g2
Vinsert
p31232
I52
VThisExpression
p31233
tp31234
F1.25
s(g1045
I42
g1046
Vinsert
p31235
I52
VThisExpression
p31236
tp31237
I1
s(g5510
I42
g5511
Vinsert
p31238
I8
VBlock
p31239
tp31240
I2
s(g3683
I42
g3684
Vinsert
p31241
I42
VSimpleName: Test
p31242
tp31243
F0.75
s(g2000
I42
g2001
Vinsert
p31244
I36
VParenthesizedExpression
p31245
tp31246
I3
s(g547
I42
g548
Vinsert
p31247
I42
VSimpleName: get
p31248
tp31249
I2
s(g3560
I42
g3561
Vinsert
p31250
I42
VSimpleName: disconnectedFuture
p31251
tp31252
I1
s(g3412
I42
g3413
Vinsert
p31253
I42
VSimpleName: properties
p31254
tp31255
I1
s(g4430
I42
g4431
Vinsert
p31256
I42
VSimpleName: traceIds
p31257
tp31258
I2
s(g1693
I42
g1694
Vinsert
p31259
I42
VSimpleName: stream
p31260
tp31261
I1
s(g10433
I42
g10434
Vinsert
p31262
I42
VSimpleName: TRACE
p31263
tp31264
F0.25
s(g4182
I42
g4183
Vinsert
p31265
I66
VTextElement: see bucket count traces to a service per millisecond.
p31266
tp31267
F0.5
s(g2140
I42
g2141
Vinsert
p31268
I45
VStringLiteral: "method1"
p31269
tp31270
I1
s(g3607
I42
g3608
Vinsert
p31271
I42
VSimpleName: Producer
p31272
tp31273
I4
s(g11312
I42
g11313
Vinsert
p31274
I42
VSimpleName: spanIdHex
p31275
tp31276
I1
s(g146
I42
g147
Vinsert
p31277
I42
VSimpleName: lateSpans
p31278
tp31279
I1
s(g11397
I42
g11398
Vinsert
p31280
I21
VExpressionStatement
p31281
tp31282
F10.25
s(g5884
I42
g5885
Vinsert
p31283
I45
VStringLiteral: "    \u005c"number\u005c" : \u005c"6.0.0-alpha2\u005c",\u005cn"
p31284
tp31285
I1
s(g4344
I42
g4345
Vinsert
p31286
I42
VSimpleName: andExpect
p31287
tp31288
I1
s(g1987
I42
g1988
Vinsert
p31289
I45
VStringLiteral: "trace_id_high"
p31290
tp31291
I2
s(g5205
I42
g5206
Vinsert
p31292
I45
VStringLiteral: ""
p31293
tp31294
F0.25
s(g2727
I42
g2728
Vinsert
p31295
I42
VSimpleName: Exception
p31296
tp31297
F0.25
s(g27695
I42
g27696
Vinsert
p31298
I45
VStringLiteral: "zipkin.storage.elasticsearch.password:pass"
p31299
tp31300
I1
s(g372
I42
g373
Vinsert
p31301
I43
VSimpleType: Component
p31302
tp31303
F0.25
s(g5435
I42
g5436
Vinsert
p31304
I9
VBooleanLiteral: true
p31305
tp31306
I1
s(g2426
I42
g2427
Vinsert
p31307
I42
VSimpleName: json
p31308
tp31309
I1
s(g595
I42
g596
Vinsert
p31310
I42
VSimpleName: LOGGER
p31311
tp31312
I2
s(g2619
I42
g2620
Vinsert
p31313
I42
VSimpleName: result
p31314
tp31315
I2
s(g1265
I42
g1266
Vinsert
p31316
I43
VSimpleType: CassandraStorage.Builder
p31317
tp31318
F0.25
s(g4518
I42
g4519
Vinsert
p31319
I42
VSimpleName: zipkinPort
p31320
tp31321
I2
s(g6079
I42
g6080
Vinsert
p31322
I40
VQualifiedName: span.annotations
p31323
tp31324
I1
s(g3393
I42
g3394
Vinsert
p31325
I21
VExpressionStatement
p31326
tp31327
I2
s(g3199
I42
g3200
Vinsert
p31328
I43
VSimpleType: Span
p31329
tp31330
F0.25
s(g12014
I42
g12015
Vinsert
p31331
I32
VMethodInvocation
p31332
tp31333
I4
s(g1464
I42
g1465
Vinsert
p31334
I74
VParameterizedType: List<String>
p31335
tp31336
I1
s(g4085
I42
g4086
Vinsert
p31337
I42
VSimpleName: min
p31338
tp31339
I1
s(g2299
I42
g2300
Vinsert
p31340
I42
VSimpleName: ch
p31341
tp31342
I1
s(g3675
I42
g3676
Vinsert
p31343
I42
VSimpleName: maxDuration
p31344
tp31345
I1
s(g4701
I42
g4702
Vinsert
p31346
I42
VSimpleName: successDispatch
p31347
tp31348
I1
s(g6471
I42
g6472
Vinsert
p31349
I42
VSimpleName: index
p31350
tp31351
I1
s(g7331
I42
g7332
Vinsert
p31352
I42
VSimpleName: apply
p31353
tp31354
F0.25
s(g1954
I42
g1955
Vinsert
p31355
I43
VSimpleType: LinkedList
p31356
tp31357
I1
s(g16138
I42
g16139
Vinsert
p31358
I43
VSimpleType: ScribeConfig
p31359
tp31360
I1
s(g3867
I42
g3868
Vinsert
p31361
I42
VSimpleName: List
p31362
tp31363
F0.25
s(g3072
I42
g3073
Vinsert
p31364
I32
VMethodInvocation
p31365
tp31366
I1
s(g14755
I42
g14756
Vinsert
p31367
I42
VSimpleName: dataSource
p31368
tp31369
I1
s(g12296
I42
g12297
Vinsert
p31370
I14
VClassInstanceCreation
p31371
tp31372
I1
s(g7300
I42
g7301
Vinsert
p31373
I42
VSimpleName: serviceName
p31374
tp31375
F0.5
s(g4029
I42
g4030
Vinsert
p31376
I42
VSimpleName: instance
p31377
tp31378
F1.25
s(g4647
I42
g4648
Vinsert
p31379
I42
VSimpleName: row
p31380
tp31381
I2
s(g2028
I42
g2029
Vinsert
p31382
I38
VPrefixExpression: !
p31383
tp31384
F0.25
s(g3009
I42
g3010
Vinsert
p31385
I43
VSimpleType: AsyncToBlockingSpanStoreAdapter
p31386
tp31387
F0.25
s(g390
I42
g391
Vinsert
p31388
I42
VSimpleName: newBuilder
p31389
tp31390
F0.25
s(g15367
I42
g15368
Vinsert
p31391
I45
VStringLiteral: "1.1.1.1:9143,2.2.2.2:9143"
p31392
tp31393
I1
s(g6426
I42
g6427
Vinsert
p31394
I43
VSimpleType: J
p31395
tp31396
I1
s(g5725
I42
g5726
Vinsert
p31397
I40
VQualifiedName: a.endpoint
p31398
tp31399
I1
s(g3688
I42
g3689
Vinsert
p31400
I42
VSimpleName: captor
p31401
tp31402
I1
s(g2642
I42
g2643
Vinsert
p31403
I42
VSimpleName: result
p31404
tp31405
I3
s(g5316
I42
g5317
Vinsert
p31406
I14
VClassInstanceCreation
p31407
tp31408
I2
s(g264
I42
g265
Vinsert
p31409
I43
VSimpleType: AWSCredentials
p31410
tp31411
F0.25
s(g156
I42
g157
Vinsert
p31412
I42
VSimpleName: toString
p31413
tp31414
F0.25
s(g3474
I42
g3475
Vinsert
p31415
I42
VSimpleName: mock
p31416
tp31417
I2
s(g1974
I42
g1975
Vinsert
p31418
I42
VSimpleName: length
p31419
tp31420
I3
s(g4531
I42
g4532
Vinsert
p31421
I42
VSimpleName: client
p31422
tp31423
I1
s(g4518
I42
g4519
Vinsert
p31424
I27
VInfixExpression: +
p31425
tp31426
I2
s(g2005
I42
g2006
Vinsert
p31427
I42
VSimpleName: T
p31428
tp31429
I1
s(g12441
I42
g12442
Vinsert
p31430
I42
VSimpleName: result
p31431
tp31432
I2
s(g1227
I42
g1228
Vinsert
p31433
I42
VSimpleName: keyspace
p31434
tp31435
I2
s(g6203
I42
g6204
Vinsert
p31436
I83
VModifier: public
p31437
tp31438
F0.5
s(g15405
I42
g15406
Vinsert
p31439
I42
VSimpleName: spanStore
p31440
tp31441
F0.25
s(g6045
I42
g6046
Vinsert
p31442
I32
VMethodInvocation
p31443
tp31444
I3
s(g4103
I42
g4104
Vinsert
p31445
I42
VSimpleName: message
p31446
tp31447
I1
s(g7305
I42
g7306
Vinsert
p31448
I59
VVariableDeclarationFragment
p31449
tp31450
I2
s(g7582
I42
g7583
Vinsert
p31451
I45
VStringLiteral: "}"
p31452
tp31453
I3
s(g2991
I42
g2992
Vinsert
p31454
I42
VSimpleName: SearchCallFactory
p31455
tp31456
I2
s(g567
I42
g568
Vinsert
p31457
I43
VSimpleType: QueryRequest
p31458
tp31459
I1
s(g2013
I42
g2014
Vinsert
p31460
I12
VCatchClause
p31461
tp31462
I3
s(g3017
I42
g3018
Vinsert
p31463
I43
VSimpleType: IllegalStateException
p31464
tp31465
I1
s(g3009
I42
g3010
Vinsert
p31466
I78
VMarkerAnnotation
p31467
tp31468
F0.75
s(g3938
I42
g3939
Vinsert
p31469
I39
VPrimitiveType: int
p31470
tp31471
I1
s(g4972
I42
g4973
Vinsert
p31472
I59
VVariableDeclarationFragment
p31473
tp31474
I8
s(g3335
I42
g3336
Vinsert
p31475
I23
VFieldDeclaration
p31476
tp31477
I1
s(g6134
I42
g6135
Vinsert
p31478
I43
VSimpleType: Endpoint
p31479
tp31480
I4
s(g2265
I42
g2266
Vinsert
p31481
I42
VSimpleName: LOTS_OF_SPANS
p31482
tp31483
F0.5
s(g3867
I42
g3868
Vinsert
p31484
I8
VBlock
p31485
tp31486
I1
s(g21248
I42
g21249
Vinsert
p31487
I42
VSimpleName: mixedTrace
p31488
tp31489
I2
s(g7568
I42
g7569
Vinsert
p31490
I17
VConstructorInvocation
p31491
tp31492
I1
s(g724
I42
g725
Vinsert
p31493
I11
VCastExpression
p31494
tp31495
I2
s(g11
I42
g12
Vinsert
p31496
I27
VInfixExpression: +
p31497
tp31498
F0.25
s(g5915
I42
g5916
Vinsert
p31499
I45
VStringLiteral: "zipkin.ui.logs-url:"
p31500
tp31501
I1
s(g3510
I42
g3511
Vinsert
p31502
I27
VInfixExpression: >
p31503
tp31504
I1
s(g5533
I42
g5534
Vinsert
p31505
I42
VSimpleName: Exception
p31506
tp31507
F0.25
s(g7086
I42
g7087
Vinsert
p31508
I42
VSimpleName: LOGGER
p31509
tp31510
I1
s(g11744
I42
g11745
Vinsert
p31511
I42
VSimpleName: e
p31512
tp31513
F1.25
s(g1479
I42
g1480
Vinsert
p31514
I42
VSimpleName: processDependencies
p31515
tp31516
I3
s(g954
I42
g955
Vinsert
p31517
I33
VNullLiteral
p31518
tp31519
I1
s(g4552
I42
g4553
Vinsert
p31520
I42
VSimpleName: ImmutableList
p31521
tp31522
I1
s(g3004
I42
g3005
Vinsert
p31523
I42
VSimpleName: StorageComponent
p31524
tp31525
F1.0
s(g7331
I42
g7332
Vinsert
p31526
I42
VSimpleName: Span
p31527
tp31528
F0.25
s(g5785
I42
g5786
Vinsert
p31529
I32
VMethodInvocation
p31530
tp31531
I13
s(g967
I42
g968
Vinsert
p31532
I45
VStringLiteral: "foo"
p31533
tp31534
F0.25
s(g1270
I42
g1271
Vinsert
p31535
I57
VTypeLiteral
p31536
tp31537
I1
s(g1032
I42
g1033
Vinsert
p31538
I42
VSimpleName: strictTraceId
p31539
tp31540
I1
s(g4044
I42
g4045
Vinsert
p31541
I27
VInfixExpression: ||
p31542
tp31543
I1
s(g7674
I42
g7675
Vinsert
p31544
I42
VSimpleName: DependencyLinkSpan
p31545
tp31546
I1
s(g2642
I42
g2643
Vinsert
p31547
I54
VTryStatement
p31548
tp31549
I7
s(g2584
I42
g2585
Vinsert
p31550
I34
VNumberLiteral: 0
p31551
tp31552
I2
s(g4399
I42
g4400
Vinsert
p31553
I21
VExpressionStatement
p31554
tp31555
I2
s(g6167
I42
g6168
Vinsert
p31556
I78
VMarkerAnnotation
p31557
tp31558
F0.5
s(g5780
I42
g5781
Vinsert
p31559
I42
VSimpleName: day
p31560
tp31561
I3
s(g2619
I42
g2620
Vinsert
p31562
I43
VSimpleType: IOException
p31563
tp31564
F0.5
s(g3150
I42
g3151
Vinsert
p31565
I42
VSimpleName: codepoint
p31566
tp31567
I3
s(g5674
I42
g5675
Vinsert
p31568
I42
VSimpleName: accept
p31569
tp31570
I2
s(g4856
I42
g4857
Vinsert
p31571
I42
VSimpleName: System
p31572
tp31573
I1
s(g1187
I42
g1188
Vinsert
p31574
I21
VExpressionStatement
p31575
tp31576
I2
s(g3599
I42
g3600
Vinsert
p31577
I74
VParameterizedType: List<String>
p31578
tp31579
F0.25
s(g12399
I42
g12400
Vinsert
p31580
I40
VQualifiedName: check.exception
p31581
tp31582
I3
s(g2802
I42
g2803
Vinsert
p31583
I66
VTextElement: Very important that we don't return wrapped exceptions as otherwise /health endpoint is useless 
p31584
tp31585
F0.25
s(g2789
I42
g2790
Vinsert
p31586
I42
VSimpleName: Endpoint
p31587
tp31588
I1
s(g1846
I42
g1847
Vinsert
p31589
I45
VStringLiteral: "timestamp_millis"
p31590
tp31591
I1
s(g5410
I42
g5411
Vinsert
p31592
I42
VSimpleName: callback
p31593
tp31594
F9.5
s(g5166
I42
g5167
Vinsert
p31595
I40
VQualifiedName: CassandraStorage.Builder
p31596
tp31597
I1
s(g1921
I42
g1922
Vinsert
p31598
I8
VBlock
p31599
tp31600
I1
s(g5421
I42
g5422
Vinsert
p31601
I42
VSimpleName: enqueue
p31602
tp31603
F0.5
s(g2247
I42
g2248
Vinsert
p31604
I21
VExpressionStatement
p31605
tp31606
I2
s(g2936
I42
g2937
Vinsert
p31607
I42
VSimpleName: buf
p31608
tp31609
I2
s(g9174
I42
g9175
Vinsert
p31610
I74
VParameterizedType: LinkedHashMap<>
p31611
tp31612
I2
s(g2464
I42
g2465
Vinsert
p31613
I42
VSimpleName: IOException
p31614
tp31615
I1
s(g1242
I42
g1243
Vinsert
p31616
I42
VSimpleName: call
p31617
tp31618
I2
s(g4631
I42
g4632
Vinsert
p31619
I42
VSimpleName: Span2
p31620
tp31621
F0.25
s(g762
I42
g763
Vinsert
p31622
I42
VSimpleName: decode
p31623
tp31624
I1
s(g4928
I42
g4929
Vinsert
p31625
I39
VPrimitiveType: byte
p31626
tp31627
I2
s(g6320
I42
g6321
Vinsert
p31628
I42
VSimpleName: QueryRequest
p31629
tp31630
F3.5
s(g2309
I42
g2310
Vinsert
p31631
I42
VSimpleName: parse
p31632
tp31633
I1
s(g3520
I42
g3521
Vinsert
p31634
I83
VModifier: final
p31635
tp31636
I1
s(g1012
I42
g1013
Vinsert
p31637
I7
VAssignment: =
p31638
tp31639
I4
s(g6911
I42
g6912
Vinsert
p31640
I34
VNumberLiteral: 95
p31641
tp31642
I1
s(g16271
I42
g16272
Vinsert
p31643
I34
VNumberLiteral: 1L
p31644
tp31645
I1
s(g1242
I42
g1243
Vinsert
p31646
I42
VSimpleName: create
p31647
tp31648
I1
s(g924
I42
g925
Vinsert
p31649
I37
VPostfixExpression: --
p31650
tp31651
I1
s(g7674
I42
g7675
Vinsert
p31652
I22
VFieldAccess
p31653
tp31654
F0.25
s(g4330
I42
g4331
Vinsert
p31655
I42
VSimpleName: TracedSession
p31656
tp31657
I1
s(g1795
I42
g1796
Vinsert
p31658
I41
VReturnStatement
p31659
tp31660
F0.25
s(g1806
I42
g1807
Vinsert
p31661
I45
VStringLiteral: "/sampleRate"
p31662
tp31663
F0.25
s(g8765
I42
g8766
Vinsert
p31664
I43
VSimpleType: Callback
p31665
tp31666
I1
s(g3712
I42
g3713
Vinsert
p31667
I42
VSimpleName: KafkaCollector
p31668
tp31669
I2
s(g826
I42
g827
Vinsert
p31670
I32
VMethodInvocation
p31671
tp31672
I5
s(g3296
I42
g3297
Vinsert
p31673
I43
VSimpleType: Callback
p31674
tp31675
F0.25
s(g1723
I42
g1724
Vinsert
p31676
I42
VSimpleName: traceIdHex
p31677
tp31678
I1
s(g5454
I42
g5455
Vinsert
p31679
I40
VQualifiedName: s.duration
p31680
tp31681
I1
s(g19403
I42
g19404
Vinsert
p31682
I42
VSimpleName: endArray
p31683
tp31684
I1
s(g3474
I42
g3475
Vinsert
p31685
I57
VTypeLiteral
p31686
tp31687
I2
s(g274
I42
g275
Vinsert
p31688
I60
VVariableDeclarationStatement
p31689
tp31690
I1
s(g6094
I42
g6095
Vinsert
p31691
I43
VSimpleType: List
p31692
tp31693
F0.25
s(g4738
I42
g4739
Vinsert
p31694
I42
VSimpleName: put
p31695
tp31696
I1
s(g24500
I42
g24501
Vinsert
p31697
I45
VStringLiteral: "call1"
p31698
tp31699
I1
s(g6508
I42
g6509
Vinsert
p31700
I42
VSimpleName: span1
p31701
tp31702
I1
s(g2539
I42
g2540
Vinsert
p31703
I59
VVariableDeclarationFragment
p31704
tp31705
I1
s(g3851
I42
g3852
Vinsert
p31706
I42
VSimpleName: traceId
p31707
tp31708
I1
s(g7602
I42
g7603
Vinsert
p31709
I42
VSimpleName: b
p31710
tp31711
I1
s(g10274
I42
g10275
Vinsert
p31712
I42
VSimpleName: Call
p31713
tp31714
F1.25
s(g4451
I42
g4452
Vinsert
p31715
I21
VExpressionStatement
p31716
tp31717
F0.25
s(g24817
I42
g24818
Vinsert
p31718
I42
VSimpleName: isEmpty
p31719
tp31720
F0.25
s(g2174
I42
g2175
Vinsert
p31721
I42
VSimpleName: bytes
p31722
tp31723
F0.5
s(g3735
I42
g3736
Vinsert
p31724
I42
VSimpleName: Long
p31725
tp31726
F0.25
s(g1749
I42
g1750
Vinsert
p31727
I80
VMemberValuePair
p31728
tp31729
I1
s(g13877
I42
g13878
Vinsert
p31730
I32
VMethodInvocation
p31731
tp31732
F3.25
s(g15405
I42
g15406
Vinsert
p31733
I42
VSimpleName: collector
p31734
tp31735
I1
s(g2637
I42
g2638
Vinsert
p31736
I42
VSimpleName: b
p31737
tp31738
F0.25
s(g7096
I42
g7097
Vinsert
p31739
I9
VBooleanLiteral: true
p31740
tp31741
I1
s(g2416
I42
g2417
Vinsert
p31742
I25
VIfStatement
p31743
tp31744
I1
s(g5311
I42
g5312
Vinsert
p31745
I83
VModifier: final
p31746
tp31747
I2
s(g4959
I42
g4960
Vinsert
p31748
I39
VPrimitiveType: void
p31749
tp31750
F0.25
s(g27167
I42
g27168
Vinsert
p31751
I8
VBlock
p31752
tp31753
I10
s(g2013
I42
g2014
Vinsert
p31754
I43
VSimpleType: Throwable
p31755
tp31756
F2.75
s(g19654
I42
g19655
Vinsert
p31757
I39
VPrimitiveType: boolean
p31758
tp31759
F0.5
s(g12798
I42
g12799
Vinsert
p31760
I34
VNumberLiteral: 21L
p31761
tp31762
I1
s(g1673
I42
g1674
Vinsert
p31763
I74
VParameterizedType: Collection<Long>
p31764
tp31765
I1
s(g2771
I42
g2772
Vinsert
p31766
I42
VSimpleName: ResponseEntity
p31767
tp31768
F2.25
s(g1757
I42
g1758
Vinsert
p31769
I27
VInfixExpression: >
p31770
tp31771
I1
s(g12325
I42
g12326
Vinsert
p31772
I42
VSimpleName: getCluster
p31773
tp31774
I1
s(g6615
I42
g6616
Vinsert
p31775
I42
VSimpleName: QueryRequest
p31776
tp31777
I1
s(g1113
I42
g1114
Vinsert
p31778
I42
VSimpleName: content
p31779
tp31780
I2
s(g8978
I42
g8979
Vinsert
p31781
I42
VSimpleName: Closeable
p31782
tp31783
I4
s(g9656
I42
g9657
Vinsert
p31784
I42
VSimpleName: ipv6
p31785
tp31786
F0.75
s(g6776
I42
g6777
Vinsert
p31787
I43
VSimpleType: Connection
p31788
tp31789
I4
s(g4171
I42
g4172
Vinsert
p31790
I27
VInfixExpression: <
p31791
tp31792
I1
s(g1227
I42
g1228
Vinsert
p31793
I42
VSimpleName: cluster
p31794
tp31795
I1
s(g2555
I42
g2556
Vinsert
p31796
I34
VNumberLiteral: 2L
p31797
tp31798
I3
s(g909
I42
g910
Vinsert
p31799
I40
VQualifiedName: span3.id
p31800
tp31801
F0.25
s(g9008
I42
g9009
Vinsert
p31802
I42
VSimpleName: serviceName
p31803
tp31804
I2
s(g18018
I42
g18019
Vinsert
p31805
I45
VStringLiteral: "{\u005cn"
p31806
tp31807
I1
s(g621
I42
g622
Vinsert
p31808
I42
VSimpleName: http
p31809
tp31810
I1
s(g14825
I42
g14826
Vinsert
p31811
I42
VSimpleName: fromSpan
p31812
tp31813
I1
s(g11973
I42
g11974
Vinsert
p31814
I42
VSimpleName: checkNotNull
p31815
tp31816
F0.25
s(g4090
I42
g4091
Vinsert
p31817
I37
VPostfixExpression: ++
p31818
tp31819
I5
s(g8089
I42
g8090
Vinsert
p31820
I31
VMethodDeclaration
p31821
tp31822
F0.25
s(g3675
I42
g3676
Vinsert
p31823
I40
VQualifiedName: TimeUnit.MICROSECONDS
p31824
tp31825
I2
s(g5775
I42
g5776
Vinsert
p31826
I27
VInfixExpression: &&
p31827
tp31828
I3
s(g4187
I42
g4188
Vinsert
p31829
I42
VSimpleName: indices
p31830
tp31831
I1
s(g390
I42
g391
Vinsert
p31832
I42
VSimpleName: response
p31833
tp31834
I1
s(g1949
I42
g1950
Vinsert
p31835
I44
VSingleVariableDeclaration
p31836
tp31837
F0.75
s(g9008
I42
g9009
Vinsert
p31838
I42
VSimpleName: parseAnnotationQuery
p31839
tp31840
I1
s(g6084
I42
g6085
Vinsert
p31841
I90
VExpressionMethodReference
p31842
tp31843
I1
s(g7197
I42
g7198
Vinsert
p31844
I42
VSimpleName: none
p31845
tp31846
F0.5
s(g9722
I42
g9723
Vinsert
p31847
I42
VSimpleName: result
p31848
tp31849
I1
s(g4192
I42
g4193
Vinsert
p31850
I59
VVariableDeclarationFragment
p31851
tp31852
F0.25
s(g2309
I42
g2310
Vinsert
p31853
I45
VStringLiteral: "zipkin"
p31854
tp31855
I1
s(g2619
I42
g2620
Vinsert
p31856
I42
VSimpleName: IOException
p31857
tp31858
F0.5
s(g18018
I42
g18019
Vinsert
p31859
I36
VParenthesizedExpression
p31860
tp31861
I1
s(g9258
I42
g9259
Vinsert
p31862
I42
VSimpleName: List
p31863
tp31864
I3
s(g2920
I42
g2921
Vinsert
p31865
I42
VSimpleName: e
p31866
tp31867
F0.25
s(g3493
I42
g3494
Vinsert
p31868
I42
VSimpleName: Endpoint
p31869
tp31870
I2
s(g3072
I42
g3073
Vinsert
p31871
I42
VSimpleName: Override
p31872
tp31873
F0.25
s(g4840
I42
g4841
Vinsert
p31874
I44
VSingleVariableDeclaration
p31875
tp31876
F0.25
s(g5611
I42
g5612
Vinsert
p31877
I42
VSimpleName: writeUtf8
p31878
tp31879
F0.25
s(g2085
I42
g2086
Vinsert
p31880
I42
VSimpleName: JsonCodec
p31881
tp31882
I1
s(g5391
I42
g5392
Vinsert
p31883
I45
VStringLiteral: "type"
p31884
tp31885
I1
s(g4835
I42
g4836
Vinsert
p31886
I45
VStringLiteral: "zipkin.storage.elasticsearch.hosts:http://host1:9200"
p31887
tp31888
I6
s(g1916
I42
g1917
Vinsert
p31889
I43
VSimpleType: ConditionContext
p31890
tp31891
F0.25
s(g1533
I42
g1534
Vinsert
p31892
I42
VSimpleName: getFirst
p31893
tp31894
I1
s(g19521
I42
g19522
Vinsert
p31895
I54
VTryStatement
p31896
tp31897
I1
s(g2514
I42
g2515
Vinsert
p31898
I42
VSimpleName: Lazy
p31899
tp31900
F0.75
s(g27167
I42
g27168
Vinsert
p31901
I42
VSimpleName: endPoint
p31902
tp31903
I4
s(g279
I42
g280
Vinsert
p31904
I43
VSimpleType: ElasticsearchSpanConsumer
p31905
tp31906
F0.25
s(g1556
I42
g1557
Vinsert
p31907
I40
VQualifiedName: org.jooq.impl.SQLDataType.VARCHAR
p31908
tp31909
I2
s(g1926
I42
g1927
Vinsert
p31910
I43
VSimpleType: Buffer
p31911
tp31912
I1
s(g17942
I42
g17943
Vinsert
p31913
I42
VSimpleName: that
p31914
tp31915
F1.25
s(g4631
I42
g4632
Vinsert
p31916
I40
VQualifiedName: Span2Codec.JSON
p31917
tp31918
F2.25
s(g289
I42
g290
Vinsert
p31919
I34
VNumberLiteral: 2
p31920
tp31921
I1
s(g23316
I42
g23317
Vinsert
p31922
I42
VSimpleName: ENDPOINT_IPV6
p31923
tp31924
I1
s(g6745
I42
g6746
Vinsert
p31925
I74
VParameterizedType: List<Span>
p31926
tp31927
I1
s(g2219
I42
g2220
Vinsert
p31928
I42
VSimpleName: ZipkinServer
p31929
tp31930
I1
s(g2642
I42
g2643
Vinsert
p31931
I59
VVariableDeclarationFragment
p31932
tp31933
F41.25
s(g4712
I42
g4713
Vinsert
p31934
I39
VPrimitiveType: void
p31935
tp31936
F0.25
s(g5000
I42
g5001
Vinsert
p31937
I78
VMarkerAnnotation
p31938
tp31939
F0.5
s(g4866
I42
g4867
Vinsert
p31940
I42
VSimpleName: future
p31941
tp31942
I2
s(g15603
I42
g15604
Vinsert
p31943
I42
VSimpleName: builder
p31944
tp31945
F0.25
s(g6099
I42
g6100
Vinsert
p31946
I8
VBlock
p31947
tp31948
I2
s(g2378
I42
g2379
Vinsert
p31949
I83
VModifier: public
p31950
tp31951
F0.25
s(g924
I42
g925
Vinsert
p31952
I27
VInfixExpression: >=
p31953
tp31954
I1
s(g5533
I42
g5534
Vinsert
p31955
I32
VMethodInvocation
p31956
tp31957
I2
s(g3388
I42
g3389
Vinsert
p31958
I42
VSimpleName: selectTraceIdsByServiceSpanNameAndDuration
p31959
tp31960
I2
s(g4913
I42
g4914
Vinsert
p31961
I43
VSimpleType: Pair
p31962
tp31963
I1
s(g5221
I42
g5222
Vinsert
p31964
I32
VMethodInvocation
p31965
tp31966
I1
s(g441
I42
g442
Vinsert
p31967
I42
VSimpleName: storage
p31968
tp31969
I1
s(g3115
I42
g3116
Vinsert
p31970
I42
VSimpleName: Test
p31971
tp31972
F0.25
s(g4430
I42
g4431
Vinsert
p31973
I42
VSimpleName: input
p31974
tp31975
F0.25
s(g14635
I42
g14636
Vinsert
p31976
I27
VInfixExpression: &&
p31977
tp31978
I1
s(g3258
I42
g3259
Vinsert
p31979
I45
VStringLiteral: "work"
p31980
tp31981
F0.25
s(g5807
I42
g5808
Vinsert
p31982
I42
VSimpleName: TraceIdSampler
p31983
tp31984
I1
s(g161
I42
g162
Vinsert
p31985
I42
VSimpleName: assertThat
p31986
tp31987
I3
s(g8392
I42
g8393
Vinsert
p31988
I42
VSimpleName: span
p31989
tp31990
I2
s(g151
I42
g152
Vinsert
p31991
I42
VSimpleName: checkNotNull
p31992
tp31993
I2
s(g8089
I42
g8090
Vinsert
p31994
I34
VNumberLiteral: 0L
p31995
tp31996
I1
s(g9656
I42
g9657
Vinsert
p31997
I34
VNumberLiteral: 0
p31998
tp31999
F0.25
s(g1528
I42
g1529
Vinsert
p32000
I8
VBlock
p32001
tp32002
I2
s(g146
I42
g147
Vinsert
p32003
I85
VDimension
p32004
tp32005
I1
s(g3417
I42
g3418
Vinsert
p32006
I7
VAssignment: =
p32007
tp32008
I1
s(g6236
I42
g6237
Vinsert
p32009
I43
VSimpleType: IllegalStateException
p32010
tp32011
I1
s(g18700
I42
g18701
Vinsert
p32012
I42
VSimpleName: url
p32013
tp32014
I1
s(g8791
I42
g8792
Vinsert
p32015
I42
VSimpleName: List
p32016
tp32017
I1
s(g2388
I42
g2389
Vinsert
p32018
I13
VCharacterLiteral: '['
p32019
tp32020
I2
s(g9303
I42
g9304
Vinsert
p32021
I43
VSimpleType: A
p32022
tp32023
F0.25
s(g2335
I42
g2336
Vinsert
p32024
I25
VIfStatement
p32025
tp32026
I3
s(g856
I42
g857
Vinsert
p32027
I42
VSimpleName: StringBuilder
p32028
tp32029
I2
s(g1979
I42
g1980
Vinsert
p32030
I42
VSimpleName: IOException
p32031
tp32032
F0.25
s(g8677
I42
g8678
Vinsert
p32033
I8
VBlock
p32034
tp32035
I2
s(g1749
I42
g1750
Vinsert
p32036
I79
VSingleMemberAnnotation
p32037
tp32038
I1
s(g1227
I42
g1228
Vinsert
p32039
I7
VAssignment: =
p32040
tp32041
I1
s(g13147
I42
g13148
Vinsert
p32042
I42
VSimpleName: value
p32043
tp32044
I1
s(g6536
I42
g6537
Vinsert
p32045
I8
VBlock
p32046
tp32047
I2
s(g791
I42
g792
Vinsert
p32048
I44
VSingleVariableDeclaration
p32049
tp32050
F0.25
s(g10858
I42
g10859
Vinsert
p32051
I43
VSimpleType: CheckResult
p32052
tp32053
I3
s(g1979
I42
g1980
Vinsert
p32054
I8
VBlock
p32055
tp32056
I2
s(g841
I42
g842
Vinsert
p32057
I43
VSimpleType: OkHttpClient.Builder
p32058
tp32059
I1
s(g8011
I42
g8012
Vinsert
p32060
I40
VQualifiedName: bytes.length
p32061
tp32062
I1
s(g299
I42
g300
Vinsert
p32063
I42
VSimpleName: isDefined
p32064
tp32065
I1
s(g3740
I42
g3741
Vinsert
p32066
I42
VSimpleName: TODAY
p32067
tp32068
I1
s(g4264
I42
g4265
Vinsert
p32069
I21
VExpressionStatement
p32070
tp32071
I1
s(g395
I42
g396
Vinsert
p32072
I23
VFieldDeclaration
p32073
tp32074
I1
s(g352
I42
g353
Vinsert
p32075
I43
VSimpleType: Span
p32076
tp32077
I1
s(g1678
I42
g1679
Vinsert
p32078
I31
VMethodDeclaration
p32079
tp32080
F0.25
s(g1790
I42
g1791
Vinsert
p32081
I43
VSimpleType: zipkin.internal.v2.storage.StorageComponent
p32082
tp32083
F0.25
s(g1856
I42
g1857
Vinsert
p32084
I34
VNumberLiteral: 16
p32085
tp32086
F0.25
s(g4972
I42
g4973
Vinsert
p32087
I42
VSimpleName: JsonAdapter
p32088
tp32089
I2
s(g709
I42
g710
Vinsert
p32090
I42
VSimpleName: BinaryAnnotation
p32091
tp32092
F0.25
s(g6804
I42
g6805
Vinsert
p32093
I60
VVariableDeclarationStatement
p32094
tp32095
I5
s(g2920
I42
g2921
Vinsert
p32096
I8
VBlock
p32097
tp32098
I1
s(g4461
I42
g4462
Vinsert
p32099
I43
VSimpleType: Session
p32100
tp32101
F2.25
s(g1187
I42
g1188
Vinsert
p32102
I42
VSimpleName: isNotNull
p32103
tp32104
I1
s(g161
I42
g162
Vinsert
p32105
I42
VSimpleName: httpUrl
p32106
tp32107
I1
s(g1886
I42
g1887
Vinsert
p32108
I42
VSimpleName: ref
p32109
tp32110
I1
s(g5984
I42
g5985
Vinsert
p32111
I42
VSimpleName: add
p32112
tp32113
I2
s(g1911
I42
g1912
Vinsert
p32114
I34
VNumberLiteral: 6
p32115
tp32116
I1
s(g567
I42
g568
Vinsert
p32117
I42
VSimpleName: annotations
p32118
tp32119
I1
s(g1826
I42
g1827
Vinsert
p32120
I42
VSimpleName: serverState
p32121
tp32122
I1
s(g3525
I42
g3526
Vinsert
p32123
I45
VStringLiteral: "day"
p32124
tp32125
I1
s(g474
I42
g475
Vinsert
p32126
I31
VMethodDeclaration
p32127
tp32128
F0.25
s(g8280
I42
g8281
Vinsert
p32129
I42
VSimpleName: logsUrl
p32130
tp32131
F0.5
s(g704
I42
g705
Vinsert
p32132
I21
VExpressionStatement
p32133
tp32134
I1
s(g1074
I42
g1075
Vinsert
p32135
I59
VVariableDeclarationFragment
p32136
tp32137
I2
s(g4792
I42
g4793
Vinsert
p32138
I45
VStringLiteral: "get"
p32139
tp32140
I5
s(g4187
I42
g4188
Vinsert
p32141
I42
VSimpleName: String
p32142
tp32143
I2
s(g18018
I42
g18019
Vinsert
p32144
I27
VInfixExpression: +
p32145
tp32146
I1
s(g294
I42
g295
Vinsert
p32147
I83
VModifier: public
p32148
tp32149
F2.75
s(g26
I42
g27
Vinsert
p32150
I74
VParameterizedType: Set<String>
p32151
tp32152
F0.25
s(g156
I42
g157
Vinsert
p32153
I42
VSimpleName: Foo
p32154
tp32155
F0.25
s(g5720
I42
g5721
Vinsert
p32156
I40
VQualifiedName: MySQLStorage.Builder
p32157
tp32158
I1
s(g4306
I42
g4307
Vinsert
p32159
I42
VSimpleName: ctx
p32160
tp32161
F1.25
s(g3233
I42
g3234
Vinsert
p32162
I42
VSimpleName: fromSpans
p32163
tp32164
I1
s(g31191
I42
g31192
Vinsert
p32165
I42
VSimpleName: binaryAnnotation_long
p32166
tp32167
F0.25
s(g689
I42
g690
Vinsert
p32168
I74
VParameterizedType: LinkedHashSet<>
p32169
tp32170
I1
s(g14825
I42
g14826
Vinsert
p32171
I42
VSimpleName: span
p32172
tp32173
I1
s(g16518
I42
g16519
Vinsert
p32174
I43
VSimpleType: T
p32175
tp32176
I1
s(g5730
I42
g5731
Vinsert
p32177
I42
VSimpleName: logger
p32178
tp32179
I1
s(g30548
I42
g30549
Vinsert
p32180
I42
VSimpleName: authProvider_defaultsToNone
p32181
tp32182
F0.25
s(g600
I42
g601
Vinsert
p32183
I40
VQualifiedName: aTable.SPAN_ID
p32184
tp32185
I1
s(g2539
I42
g2540
Vinsert
p32186
I32
VMethodInvocation
p32187
tp32188
I1
s(g1032
I42
g1033
Vinsert
p32189
I27
VInfixExpression: &&
p32190
tp32191
I1
s(g6162
I42
g6163
Vinsert
p32192
I40
VQualifiedName: BinaryAnnotation.Builder
p32193
tp32194
F0.25
s(g13461
I42
g13462
Vinsert
p32195
I42
VSimpleName: span
p32196
tp32197
F1.25
s(g6211
I42
g6212
Vinsert
p32198
I45
VStringLiteral: "      \u005c"timestamp\u005c": 1461750491274000,\u005cn"
p32199
tp32200
I1
s(g5183
I42
g5184
Vinsert
p32201
I43
VSimpleType: KafkaCollector
p32202
tp32203
I1
s(g689
I42
g690
Vinsert
p32204
I42
VSimpleName: currentServiceNames
p32205
tp32206
I2
s(g196
I42
g197
Vinsert
p32207
I43
VSimpleType: String
p32208
tp32209
F0.5
s(g2156
I42
g2157
Vinsert
p32210
I42
VSimpleName: result
p32211
tp32212
I1
s(g3072
I42
g3073
Vinsert
p32213
I83
VModifier: public
p32214
tp32215
F0.25
s(g8825
I42
g8826
Vinsert
p32216
I27
VInfixExpression: +
p32217
tp32218
I1
s(g2018
I42
g2019
Vinsert
p32219
I42
VSimpleName: tag
p32220
tp32221
I1
s(g1293
I42
g1294
Vinsert
p32222
I85
VDimension
p32223
tp32224
F0.25
s(g4136
I42
g4137
Vinsert
p32225
I42
VSimpleName: bout
p32226
tp32227
I2
s(g14492
I42
g14493
Vinsert
p32228
I42
VSimpleName: ElasticsearchHttpStorage
p32229
tp32230
F1.25
s(g11012
I42
g11013
Vinsert
p32231
I34
VNumberLiteral: 2
p32232
tp32233
I1
s(g2192
I42
g2193
Vinsert
p32234
I14
VClassInstanceCreation
p32235
tp32236
I1
s(g2514
I42
g2515
Vinsert
p32237
I26
VImportDeclaration
p32238
tp32239
F0.5
s(g4754
I42
g4755
Vinsert
p32240
I42
VSimpleName: replaceAll
p32241
tp32242
I1
s(g826
I42
g827
Vinsert
p32243
I11
VCastExpression
p32244
tp32245
I3
s(g2763
I42
g2764
Vinsert
p32246
I40
VQualifiedName: JDBCStorage.Builder
p32247
tp32248
I2
s(g770
I42
g771
Vinsert
p32249
I42
VSimpleName: put
p32250
tp32251
I1
s(g24817
I42
g24818
Vinsert
p32252
I42
VSimpleName: minDuration_mustBePositive
p32253
tp32254
F0.25
s(g279
I42
g280
Vinsert
p32255
I42
VSimpleName: ensureIndexTemplates
p32256
tp32257
I1
s(g136
I42
g137
Vinsert
p32258
I23
VFieldDeclaration
p32259
tp32260
I1
s(g1772
I42
g1773
Vinsert
p32261
I33
VNullLiteral
p32262
tp32263
I3
s(g2459
I42
g2460
Vinsert
p32264
I83
VModifier: public
p32265
tp32266
F0.25
s(g181
I42
g182
Vinsert
p32267
I39
VPrimitiveType: void
p32268
tp32269
F1.0
s(g987
I42
g988
Vinsert
p32270
I45
VStringLiteral: "value1"
p32271
tp32272
I1
s(g1556
I42
g1557
Vinsert
p32273
I42
VSimpleName: TableField
p32274
tp32275
I3
s(g7240
I42
g7241
Vinsert
p32276
I7
VAssignment: =
p32277
tp32278
I1
s(g1518
I42
g1519
Vinsert
p32279
I42
VSimpleName: toBuilder
p32280
tp32281
I1
s(g2135
I42
g2136
Vinsert
p32282
I42
VSimpleName: traceCount
p32283
tp32284
I1
s(g492
I42
g493
Vinsert
p32285
I32
VMethodInvocation
p32286
tp32287
I1
s(g5410
I42
g5411
Vinsert
p32288
I42
VSimpleName: Nullable
p32289
tp32290
F0.25
s(g244
I42
g245
Vinsert
p32291
I42
VSimpleName: apply
p32292
tp32293
I1
s(g12341
I42
g12342
Vinsert
p32294
I43
VSimpleType: PrometheusMetricsAutoConfiguration
p32295
tp32296
I1
s(g2273
I42
g2274
Vinsert
p32297
I42
VSimpleName: spans
p32298
tp32299
F0.25
s(g15405
I42
g15406
Vinsert
p32300
I78
VMarkerAnnotation
p32301
tp32302
F0.25
s(g1255
I42
g1256
Vinsert
p32303
I42
VSimpleName: scribe
p32304
tp32305
I2
s(g8791
I42
g8792
Vinsert
p32306
I43
VSimpleType: Long
p32307
tp32308
I1
s(Vinsert
p32309
I42
VSimpleName: create
p32310
Vinsert
p32311
I42
VSimpleName: CountingTraceIdSampler
p32312
tp32313
I1
s(g3510
I42
g3511
Vinsert
p32314
I42
VSimpleName: value
p32315
tp32316
I2
s(g1146
I42
g1147
Vinsert
p32317
I42
VSimpleName: TypeCodecImpl
p32318
tp32319
I1
s(g2689
I42
g2690
Vinsert
p32320
I40
VQualifiedName: JDBCStorage.Builder
p32321
tp32322
I1
s(g5616
I42
g5617
Vinsert
p32323
I42
VSimpleName: idString
p32324
tp32325
I1
s(g5785
I42
g5786
Vinsert
p32326
I42
VSimpleName: annotationQuery
p32327
tp32328
I2
s(g8652
I42
g8653
Vinsert
p32329
I52
VThisExpression
p32330
tp32331
F0.25
s(g274
I42
g275
Vinsert
p32332
I42
VSimpleName: limit
p32333
tp32334
F0.25
s(g3340
I42
g3341
Vinsert
p32335
I14
VClassInstanceCreation
p32336
tp32337
I1
s(g13601
I42
g13602
Vinsert
p32338
I74
VParameterizedType: SettableFuture<T>
p32339
tp32340
I1
s(g4385
I42
g4386
Vinsert
p32341
I39
VPrimitiveType: void
p32342
tp32343
F3.25
s(g1523
I42
g1524
Vinsert
p32344
I42
VSimpleName: Collections
p32345
tp32346
I1
s(g6045
I42
g6046
Vinsert
p32347
I42
VSimpleName: assertThat
p32348
tp32349
I1
s(g674
I42
g675
Vinsert
p32350
I42
VSimpleName: LazyClient
p32351
tp32352
I2
s(g4367
I42
g4368
Vinsert
p32353
I42
VSimpleName: String
p32354
tp32355
F0.5
s(g8272
I42
g8273
Vinsert
p32356
I42
VSimpleName: execute
p32357
tp32358
F0.25
s(g16820
I42
g16821
Vinsert
p32359
I14
VClassInstanceCreation
p32360
tp32361
F0.25
s(g801
I42
g802
Vinsert
p32362
I43
VSimpleType: Interceptor
p32363
tp32364
I2
s(g831
I42
g832
Vinsert
p32365
I43
VSimpleType: PartitionKeyToTraceId
p32366
tp32367
I1
s(g4778
I42
g4779
Vinsert
p32368
I42
VSimpleName: Endpoint
p32369
tp32370
F0.25
s(g1283
I42
g1284
Vinsert
p32371
I7
VAssignment: =
p32372
tp32373
I8
s(g2642
I42
g2643
Vinsert
p32374
I42
VSimpleName: key
p32375
tp32376
F4.25
s(g2492
I42
g2493
Vinsert
p32377
I40
VQualifiedName: TimeUnit.DAYS
p32378
tp32379
I2
s(g339
I42
g340
Vinsert
p32380
I7
VAssignment: =
p32381
tp32382
I1
s(g279
I42
g280
Vinsert
p32383
I31
VMethodDeclaration
p32384
tp32385
F0.25
s(g11001
I42
g11002
Vinsert
p32386
I43
VSimpleType: Response
p32387
tp32388
F3.5
s(g2350
I42
g2351
Vinsert
p32389
I21
VExpressionStatement
p32390
tp32391
F1.25
s(g621
I42
g622
Vinsert
p32392
I7
VAssignment: =
p32393
tp32394
F0.25
s(g1816
I42
g1817
Vinsert
p32395
I52
VThisExpression
p32396
tp32397
F0.25
s(g7905
I42
g7906
Vinsert
p32398
I43
VSimpleType: MultiBucketsAggregation.Bucket
p32399
tp32400
I1
s(g5034
I42
g5035
Vinsert
p32401
I42
VSimpleName: json
p32402
tp32403
I2
s(g2684
I42
g2685
Vinsert
p32404
I42
VSimpleName: messageWithMultipleSpans_json
p32405
tp32406
F0.25
s(g1308
I42
g1309
Vinsert
p32407
I45
VStringLiteral: ",\u005c"errorCount\u005c":"
p32408
tp32409
F0.25
s(g161
I42
g162
Vinsert
p32410
I42
VSimpleName: String
p32411
tp32412
I1
s(g16271
I42
g16272
Vinsert
p32413
I32
VMethodInvocation
p32414
tp32415
I3
s(g2574
I42
g2575
Vinsert
p32416
I42
VSimpleName: Span
p32417
tp32418
F0.25
s(g2033
I42
g2034
Vinsert
p32419
I45
VStringLiteral: "      \u005c"endpoint\u005c": {\u005cn"
p32420
tp32421
I1
s(g3150
I42
g3151
Vinsert
p32422
I34
VNumberLiteral: 0xD800
p32423
tp32424
I1
s(g405
I42
g406
Vinsert
p32425
I83
VModifier: public
p32426
tp32427
F1.0
s(g11736
I42
g11737
Vinsert
p32428
I43
VSimpleType: PartitionKeyToTraceId
p32429
tp32430
I2
s(g6231
I42
g6232
Vinsert
p32431
I42
VSimpleName: properties
p32432
tp32433
I1
s(g939
I42
g940
Vinsert
p32434
I7
VAssignment: =
p32435
tp32436
F1.5
s(g4280
I42
g4281
Vinsert
p32437
I59
VVariableDeclarationFragment
p32438
tp32439
I1
s(g1974
I42
g1975
Vinsert
p32440
I42
VSimpleName: i
p32441
tp32442
I2
s(g9497
I42
g9498
Vinsert
p32443
I42
VSimpleName: store
p32444
tp32445
I2
s(g3735
I42
g3736
Vinsert
p32446
I59
VVariableDeclarationFragment
p32447
tp32448
F6.25
s(g10306
I42
g10307
Vinsert
p32449
I42
VSimpleName: getKey
p32450
tp32451
I1
s(g24500
I42
g24501
Vinsert
p32452
I42
VSimpleName: timestamp
p32453
tp32454
I1
s(g22393
I42
g22394
Vinsert
p32455
I34
VNumberLiteral: 100
p32456
tp32457
I1
s(g3046
I42
g3047
Vinsert
p32458
I57
VTypeLiteral
p32459
tp32460
I1
s(g4280
I42
g4281
Vinsert
p32461
I42
VSimpleName: root
p32462
tp32463
I1
s(g2446
I42
g2447
Vinsert
p32464
I42
VSimpleName: clientSendTimestamp
p32465
tp32466
I1
s(g1007
I42
g1008
Vinsert
p32467
I42
VSimpleName: result
p32468
tp32469
I1
s(g4469
I42
g4470
Vinsert
p32470
I42
VSimpleName: Util
p32471
tp32472
I1
s(g2299
I42
g2300
Vinsert
p32473
I42
VSimpleName: len
p32474
tp32475
I1
s(g1090
I42
g1091
Vinsert
p32476
I42
VSimpleName: lenientSearch
p32477
tp32478
F0.25
s(g5481
I42
g5482
Vinsert
p32479
I42
VSimpleName: SpanStore
p32480
tp32481
I2
s(g8347
I42
g8348
Vinsert
p32482
I43
VSimpleType: zipkin.Span
p32483
tp32484
F0.25
s(g1523
I42
g1524
Vinsert
p32485
I43
VSimpleType: List
p32486
tp32487
I1
s(g3599
I42
g3600
Vinsert
p32488
I32
VMethodInvocation
p32489
tp32490
I1
s(g2936
I42
g2937
Vinsert
p32491
I34
VNumberLiteral: 6
p32492
tp32493
I1
s(g3793
I42
g3794
Vinsert
p32494
I14
VClassInstanceCreation
p32495
tp32496
I5
s(g6731
I42
g6732
Vinsert
p32497
I43
VSimpleType: JsonWriter
p32498
tp32499
I1
s(g6508
I42
g6509
Vinsert
p32500
I23
VFieldDeclaration
p32501
tp32502
I1
s(g101
I42
g102
Vinsert
p32503
I9
VBooleanLiteral: false
p32504
tp32505
F0.5
s(g5558
I42
g5559
Vinsert
p32506
I27
VInfixExpression: <
p32507
tp32508
I1
s(g7120
I42
g7121
Vinsert
p32509
I43
VSimpleType: ElasticsearchSpanStore
p32510
tp32511
F1.25
s(g836
I42
g837
Vinsert
p32512
I41
VReturnStatement
p32513
tp32514
I2
s(g5949
I42
g5950
Vinsert
p32515
I21
VExpressionStatement
p32516
tp32517
I1
s(g4959
I42
g4960
Vinsert
p32518
I31
VMethodDeclaration
p32519
tp32520
F0.25
s(g2464
I42
g2465
Vinsert
p32521
I60
VVariableDeclarationStatement
p32522
tp32523
I1
s(g3348
I42
g3349
Vinsert
p32524
I40
VQualifiedName: ElasticsearchConfig.Builder
p32525
tp32526
I1
s(g562
I42
g563
Vinsert
p32527
I45
VStringLiteral: ": "
p32528
tp32529
I2
s(g1851
I42
g1852
Vinsert
p32530
I42
VSimpleName: spansEvicted
p32531
tp32532
I2
s(g5386
I42
g5387
Vinsert
p32533
I42
VSimpleName: logger
p32534
tp32535
I1
s(g14839
I42
g14840
Vinsert
p32536
I42
VSimpleName: asciiSizeInBytes
p32537
tp32538
I1
s(g5391
I42
g5392
Vinsert
p32539
I83
VModifier: final
p32540
tp32541
I3
s(g9881
I42
g9882
Vinsert
p32542
I27
VInfixExpression: ||
p32543
tp32544
I1
s(g1894
I42
g1895
Vinsert
p32545
I44
VSingleVariableDeclaration
p32546
tp32547
F0.25
s(g6000
I42
g6001
Vinsert
p32548
I42
VSimpleName: request
p32549
tp32550
F0.75
s(g4701
I42
g4702
Vinsert
p32551
I42
VSimpleName: poll
p32552
tp32553
I1
s(g4157
I42
g4158
Vinsert
p32554
I32
VMethodInvocation
p32555
tp32556
I2
s(g1851
I42
g1852
Vinsert
p32557
I42
VSimpleName: store
p32558
tp32559
I1
s(g81
I42
g82
Vinsert
p32560
I59
VVariableDeclarationFragment
p32561
tp32562
I3
s(g5449
I42
g5450
Vinsert
p32563
I27
VInfixExpression: +
p32564
tp32565
I1
s(g8152
I42
g8153
Vinsert
p32566
I42
VSimpleName: isCanceled
p32567
tp32568
F0.25
s(g9771
I42
g9772
Vinsert
p32569
I74
VParameterizedType: Node.TreeBuilder<Span>
p32570
tp32571
I1
s(g4095
I42
g4096
Vinsert
p32572
I42
VSimpleName: link
p32573
tp32574
I1
s(g14004
I42
g14005
Vinsert
p32575
I42
VSimpleName: Nullable
p32576
tp32577
F0.5
s(g6635
I42
g6636
Vinsert
p32578
I13
VCharacterLiteral: '['
p32579
tp32580
I1
s(g13780
I42
g13781
Vinsert
p32581
I42
VSimpleName: address
p32582
tp32583
I1
s(g5321
I42
g5322
Vinsert
p32584
I31
VMethodDeclaration
p32585
tp32586
F0.75
s(g3150
I42
g3151
Vinsert
p32587
I27
VInfixExpression: +
p32588
tp32589
I1
s(g1693
I42
g1694
Vinsert
p32590
I43
VSimpleType: Span
p32591
tp32592
I1
s(g8693
I42
g8694
Vinsert
p32593
I43
VSimpleType: BigInteger
p32594
tp32595
I1
s(g8693
I42
g8694
Vinsert
p32596
I40
VQualifiedName: span.traceId
p32597
tp32598
I1
s(g3443
I42
g3444
Vinsert
p32599
I8
VBlock
p32600
tp32601
I2
s(g1222
I42
g1223
Vinsert
p32602
I21
VExpressionStatement
p32603
tp32604
I3
s(g2090
I42
g2091
Vinsert
p32605
I42
VSimpleName: collector
p32606
tp32607
I1
s(g5481
I42
g5482
Vinsert
p32608
I42
VSimpleName: ScalaSpanStoreAdapter
p32609
tp32610
I4
s(g380
I42
g381
Vinsert
p32611
I85
VDimension
p32612
tp32613
F0.25
s(g2187
I42
g2188
Vinsert
p32614
I42
VSimpleName: metrics
p32615
tp32616
I1
s(g7482
I42
g7483
Vinsert
p32617
I80
VMemberValuePair
p32618
tp32619
F0.75
s(g7951
I42
g7952
Vinsert
p32620
I14
VClassInstanceCreation
p32621
tp32622
I1
s(g5221
I42
g5222
Vinsert
p32623
I42
VSimpleName: JsonCodec
p32624
tp32625
I1
s(g4306
I42
g4307
Vinsert
p32626
I40
VQualifiedName: ExecuteType.READ
p32627
tp32628
I1
s(g9587
I42
g9588
Vinsert
p32629
I45
VStringLiteral: "  \u005c"remoteEndpoint\u005c": {\u005cn"
p32630
tp32631
I1
s(g3072
I42
g3073
Vinsert
p32632
I14
VClassInstanceCreation
p32633
tp32634
I1
s(g1693
I42
g1694
Vinsert
p32635
I85
VDimension
p32636
tp32637
I1
s(g31191
I42
g31192
Vinsert
p32638
I43
VSimpleType: IOException
p32639
tp32640
F0.5
s(g1103
I42
g1104
Vinsert
p32641
I42
VSimpleName: timestamp
p32642
tp32643
I1
s(g11317
I42
g11318
Vinsert
p32644
I42
VSimpleName: reader
p32645
tp32646
F0.5
s(g8994
I42
g8995
Vinsert
p32647
I42
VSimpleName: t
p32648
tp32649
F1.25
s(g11001
I42
g11002
Vinsert
p32650
I42
VSimpleName: IOException
p32651
tp32652
F0.25
s(g5558
I42
g5559
Vinsert
p32653
I59
VVariableDeclarationFragment
p32654
tp32655
I1
s(g7292
I42
g7293
Vinsert
p32656
I86
VLambdaExpression
p32657
tp32658
I1
s(g4840
I42
g4841
Vinsert
p32659
I83
VModifier: public
p32660
tp32661
F0.25
s(g10940
I42
g10941
Vinsert
p32662
I42
VSimpleName: SPAN_ADAPTER
p32663
tp32664
I1
s(g181
I42
g182
Vinsert
p32665
I42
VSimpleName: spanWithoutAnnotationsOrTags
p32666
tp32667
I1
s(g724
I42
g725
Vinsert
p32668
I36
VParenthesizedExpression
p32669
tp32670
I2
s(g294
I42
g295
Vinsert
p32671
I40
VQualifiedName: builder.strictTraceId
p32672
tp32673
F0.25
s(g16271
I42
g16272
Vinsert
p32674
I42
VSimpleName: getRawTrace
p32675
tp32676
I1
s(g7533
I42
g7534
Vinsert
p32677
I42
VSimpleName: Collector
p32678
tp32679
I1
s(g3120
I42
g3121
Vinsert
p32680
I42
VSimpleName: CassandraStrictTraceIdFalseTest
p32681
tp32682
F0.25
s(g2880
I42
g2881
Vinsert
p32683
I83
VModifier: private
p32684
tp32685
F0.25
s(g86
I42
g87
Vinsert
p32686
I42
VSimpleName: Brave
p32687
tp32688
F0.25
s(g86
I42
g87
Vinsert
p32689
I40
VQualifiedName: Brave.Builder
p32690
tp32691
I1
s(g6407
I42
g6408
Vinsert
p32692
I34
VNumberLiteral: 0
p32693
tp32694
I1
s(g4631
I42
g4632
Vinsert
p32695
I43
VSimpleType: Span2
p32696
tp32697
F0.25
s(g7159
I42
g7160
Vinsert
p32698
I27
VInfixExpression: +
p32699
tp32700
I2
s(g6482
I42
g6483
Vinsert
p32701
I42
VSimpleName: StringBuilder
p32702
tp32703
I1
s(g2454
I42
g2455
Vinsert
p32704
I74
VParameterizedType: List<List<Span>>
p32705
tp32706
F0.25
s(g6758
I42
g6759
Vinsert
p32707
I43
VSimpleType: DependencyLink.Builder
p32708
tp32709
I2
s(g3348
I42
g3349
Vinsert
p32710
I42
VSimpleName: config
p32711
tp32712
I1
s(g9244
I42
g9245
Vinsert
p32713
I42
VSimpleName: NumberFormatException
p32714
tp32715
I2
s(g14635
I42
g14636
Vinsert
p32716
I42
VSimpleName: trace_id
p32717
tp32718
I1
s(g4253
I42
g4254
Vinsert
p32719
I43
VSimpleType: Callback
p32720
tp32721
F1.25
s(g1579
I42
g1580
Vinsert
p32722
I42
VSimpleName: fromJson
p32723
tp32724
F0.25
s(g1247
I42
g1248
Vinsert
p32725
I42
VSimpleName: ResultSetFuture
p32726
tp32727
F0.5
s(g6376
I42
g6377
Vinsert
p32728
I42
VSimpleName: traceId
p32729
tp32730
I1
s(Vinsert
p32731
I42
VSimpleName: builder
p32732
Vinsert
p32733
I40
VQualifiedName: CassandraStorage.Builder
p32734
tp32735
F0.25
s(g2880
I42
g2881
Vinsert
p32736
I8
VBlock
p32737
tp32738
I3
s(g12675
I42
g12676
Vinsert
p32739
I34
VNumberLiteral: 150L
p32740
tp32741
I1
s(g5053
I42
g5054
Vinsert
p32742
I42
VSimpleName: limit
p32743
tp32744
F0.25
s(g2441
I42
g2442
Vinsert
p32745
I8
VBlock
p32746
tp32747
I1
s(g2378
I42
g2379
Vinsert
p32748
I43
VSimpleType: Span
p32749
tp32750
F0.25
s(g3438
I42
g3439
Vinsert
p32751
I42
VSimpleName: Override
p32752
tp32753
F0.25
s(g151
I42
g152
Vinsert
p32754
I8
VBlock
p32755
tp32756
I2
s(g4275
I42
g4276
Vinsert
p32757
I7
VAssignment: =
p32758
tp32759
I1
s(g5730
I42
g5731
Vinsert
p32760
I41
VReturnStatement
p32761
tp32762
I1
s(g547
I42
g548
Vinsert
p32763
I43
VSimpleType: Span.Builder
p32764
tp32765
I1
s(g1723
I42
g1724
Vinsert
p32766
I42
VSimpleName: String
p32767
tp32768
I1
s(g16046
I42
g16047
Vinsert
p32769
I34
VNumberLiteral: 10L
p32770
tp32771
I1
s(g8850
I42
g8851
Vinsert
p32772
I43
VSimpleType: Span
p32773
tp32774
F0.25
s(g5584
I42
g5585
Vinsert
p32775
I32
VMethodInvocation
p32776
tp32777
I2
s(g10551
I42
g10552
Vinsert
p32778
I43
VSimpleType: Span
p32779
tp32780
F0.25
s(g6124
I42
g6125
Vinsert
p32781
I45
VStringLiteral: "2001::3:4:5:6:7:8"
p32782
tp32783
I1
s(g4861
I42
g4862
Vinsert
p32784
I42
VSimpleName: getStore
p32785
tp32786
I1
s(g5823
I42
g5824
Vinsert
p32787
I42
VSimpleName: listenerProvider
p32788
tp32789
F0.5
s(g4220
I42
g4221
Vinsert
p32790
I25
VIfStatement
p32791
tp32792
I3
s(g6595
I42
g6596
Vinsert
p32793
I25
VIfStatement
p32794
tp32795
I4
s(g28873
I42
g28874
Vinsert
p32796
I42
VSimpleName: ZipkinMySQLStorageAutoConfiguration
p32797
tp32798
I1
s(g229
I42
g230
Vinsert
p32799
I42
VSimpleName: lookback
p32800
tp32801
I1
s(g762
I42
g763
Vinsert
p32802
I40
VQualifiedName: Codec.THRIFT
p32803
tp32804
I1
s(g2949
I42
g2950
Vinsert
p32805
I39
VPrimitiveType: char
p32806
tp32807
I2
s(g4621
I42
g4622
Vinsert
p32808
I42
VSimpleName: Span
p32809
tp32810
I1
s(g6781
I42
g6782
Vinsert
p32811
I42
VSimpleName: ensureSchema
p32812
tp32813
I1
s(g395
I42
g396
Vinsert
p32814
I42
VSimpleName: MOSHI
p32815
tp32816
I1
s(g26776
I42
g26777
Vinsert
p32817
I42
VSimpleName: TRACE
p32818
tp32819
I1
s(g2054
I42
g2055
Vinsert
p32820
I39
VPrimitiveType: char
p32821
tp32822
I1
s(g4568
I42
g4569
Vinsert
p32823
I42
VSimpleName: String
p32824
tp32825
F0.5
s(g2977
I42
g2978
Vinsert
p32826
I43
VSimpleType: Long
p32827
tp32828
F0.5
s(g4498
I42
g4499
Vinsert
p32829
I45
VStringLiteral: "an"
p32830
tp32831
I1
s(g1390
I42
g1391
Vinsert
p32832
I42
VSimpleName: metrics
p32833
tp32834
F1.75
s(g9244
I42
g9245
Vinsert
p32835
I43
VSimpleType: NumberFormatException
p32836
tp32837
I2
s(g537
I42
g538
Vinsert
p32838
I42
VSimpleName: processor
p32839
tp32840
I1
s(g3838
I42
g3839
Vinsert
p32841
I39
VPrimitiveType: void
p32842
tp32843
F0.25
s(g10954
I42
g10955
Vinsert
p32844
I26
VImportDeclaration
p32845
tp32846
F0.5
s(g6236
I42
g6237
Vinsert
p32847
I53
VThrowStatement
p32848
tp32849
I1
s(g1202
I42
g1203
Vinsert
p32850
I32
VMethodInvocation
p32851
tp32852
I5
s(g7151
I42
g7152
Vinsert
p32853
I32
VMethodInvocation
p32854
tp32855
I3
s(g3683
I42
g3684
Vinsert
p32856
I42
VSimpleName: e
p32857
tp32858
F0.25
s(g3552
I42
g3553
Vinsert
p32859
I42
VSimpleName: request
p32860
tp32861
F1.25
s(g8053
I42
g8054
Vinsert
p32862
I42
VSimpleName: parentId
p32863
tp32864
I1
s(g6236
I42
g6237
Vinsert
p32865
I8
VBlock
p32866
tp32867
I1
s(g1405
I42
g1406
Vinsert
p32868
I43
VSimpleType: ExecutionException
p32869
tp32870
I1
s(g6804
I42
g6805
Vinsert
p32871
I8
VBlock
p32872
tp32873
I4
s(g791
I42
g792
Vinsert
p32874
I42
VSimpleName: Benchmark
p32875
tp32876
F0.25
s(g16271
I42
g16272
Vinsert
p32877
I78
VMarkerAnnotation
p32878
tp32879
F0.25
s(g4717
I42
g4718
Vinsert
p32880
I45
VStringLiteral: ""
p32881
tp32882
I1
s(g9842
I42
g9843
Vinsert
p32883
I34
VNumberLiteral: 1L
p32884
tp32885
I2
s(g7654
I42
g7655
Vinsert
p32886
I42
VSimpleName: classRule
p32887
tp32888
F0.25
s(g7287
I42
g7288
Vinsert
p32889
I42
VSimpleName: mysqlPass
p32890
tp32891
I3
s(g9706
I42
g9707
Vinsert
p32892
I38
VPrefixExpression: ++
p32893
tp32894
I1
s(g654
I42
g655
Vinsert
p32895
I74
VParameterizedType: Set<String>
p32896
tp32897
F0.25
s(g12407
I42
g12408
Vinsert
p32898
I40
VQualifiedName: zipkin.storage.SpanStoreTest
p32899
tp32900
F0.25
s(g3735
I42
g3736
Vinsert
p32901
I42
VSimpleName: lowerHexToUnsignedLong
p32902
tp32903
F0.25
s(g2000
I42
g2001
Vinsert
p32904
I27
VInfixExpression: ||
p32905
tp32906
I2
s(g2959
I42
g2960
Vinsert
p32907
I43
VSimpleType: Span
p32908
tp32909
I2
s(g4330
I42
g4331
Vinsert
p32910
I43
VSimpleType: TracedSession
p32911
tp32912
I1
s(g15866
I42
g15867
Vinsert
p32913
I42
VSimpleName: endpoint
p32914
tp32915
I1
s(g10510
I42
g10511
Vinsert
p32916
I43
VSimpleType: Call
p32917
tp32918
I1
s(g2996
I42
g2997
Vinsert
p32919
I60
VVariableDeclarationStatement
p32920
tp32921
I3
s(g31
I42
g32
Vinsert
p32922
I21
VExpressionStatement
p32923
tp32924
I2
s(g4264
I42
g4265
Vinsert
p32925
I42
VSimpleName: message
p32926
tp32927
I1
s(g1579
I42
g1580
Vinsert
p32928
I40
VQualifiedName: JsonAdapters.SPAN_ADAPTER
p32929
tp32930
F0.25
s(g5386
I42
g5387
Vinsert
p32931
I21
VExpressionStatement
p32932
tp32933
I2
s(g4523
I42
g4524
Vinsert
p32934
I42
VSimpleName: traceIdSampler
p32935
tp32936
F0.25
s(g1749
I42
g1750
Vinsert
p32937
I42
VSimpleName: Qualifier
p32938
tp32939
I1
s(g876
I42
g877
Vinsert
p32940
I39
VPrimitiveType: void
p32941
tp32942
F0.25
s(g5674
I42
g5675
Vinsert
p32943
I40
VQualifiedName: WEB_ENDPOINT.serviceName
p32944
tp32945
I2
s(g14269
I42
g14270
Vinsert
p32946
I40
VQualifiedName: storage.indexNameFormatter
p32947
tp32948
I1
s(g1841
I42
g1842
Vinsert
p32949
I42
VSimpleName: IOException
p32950
tp32951
F0.5
s(g1556
I42
g1557
Vinsert
p32952
I45
VStringLiteral: "child"
p32953
tp32954
I1
s(g7985
I42
g7986
Vinsert
p32955
I42
VSimpleName: IOException
p32956
tp32957
F1.0
s(g3009
I42
g3010
Vinsert
p32958
I26
VImportDeclaration
p32959
tp32960
F0.25
s(g6482
I42
g6483
Vinsert
p32961
I43
VSimpleType: Span
p32962
tp32963
I2
s(g1546
I42
g1547
Vinsert
p32964
I42
VSimpleName: tracingSessionFactory
p32965
tp32966
I3
s(g8258
I42
g8259
Vinsert
p32967
I43
VSimpleType: CallbackCaptor
p32968
tp32969
I2
s(g3725
I42
g3726
Vinsert
p32970
I59
VVariableDeclarationFragment
p32971
tp32972
I3
s(g6094
I42
g6095
Vinsert
p32973
I74
VParameterizedType: List<Span>
p32974
tp32975
F0.25
s(g600
I42
g601
Vinsert
p32976
I42
VSimpleName: table
p32977
tp32978
I1
s(g15603
I42
g15604
Vinsert
p32979
I43
VSimpleType: SessionFactory
p32980
tp32981
F0.25
s(g1556
I42
g1557
Vinsert
p32982
I43
VSimpleType: Record
p32983
tp32984
I3
s(g1400
I42
g1401
Vinsert
p32985
I32
VMethodInvocation
p32986
tp32987
I6
s(g7366
I42
g7367
Vinsert
p32988
I39
VPrimitiveType: long
p32989
tp32990
F1.25
s(g2642
I42
g2643
Vinsert
p32991
I60
VVariableDeclarationStatement
p32992
tp32993
F26.25
s(g10551
I42
g10552
Vinsert
p32994
I42
VSimpleName: span
p32995
tp32996
F1.25
s(g4983
I42
g4984
Vinsert
p32997
I43
VSimpleType: Collection
p32998
tp32999
F0.25
s(g9215
I42
g9216
Vinsert
p33000
I43
VSimpleType: Span
p33001
tp33002
F0.25
s(g5349
I42
g5350
Vinsert
p33003
I25
VIfStatement
p33004
tp33005
I1
s(g2108
I42
g2109
Vinsert
p33006
I40
VQualifiedName: builder.index
p33007
tp33008
I1
s(g6635
I42
g6636
Vinsert
p33009
I8
VBlock
p33010
tp33011
I8
s(g4182
I42
g4183
Vinsert
p33012
I42
VSimpleName: SERVICE_NAME_INDEX
p33013
tp33014
F0.5
s(g7913
I42
g7914
Vinsert
p33015
I32
VMethodInvocation
p33016
tp33017
I13
s(g8258
I42
g8259
Vinsert
p33018
I42
VSimpleName: captor
p33019
tp33020
I2
s(g537
I42
g538
Vinsert
p33021
I42
VSimpleName: newKafkaTransport
p33022
tp33023
I1
s(g1385
I42
g1386
Vinsert
p33024
I40
VQualifiedName: zipkin.Span
p33025
tp33026
I1
s(g1385
I42
g1386
Vinsert
p33027
I43
VSimpleType: zipkin.Span
p33028
tp33029
I1
s(g3515
I42
g3516
Vinsert
p33030
I10
VBreakStatement
p33031
tp33032
I1
s(g2704
I42
g2705
Vinsert
p33033
I43
VSimpleType: Exception
p33034
tp33035
F0.25
s(g7913
I42
g7914
Vinsert
p33036
I42
VSimpleName: jLength
p33037
tp33038
I2
s(g1739
I42
g1740
Vinsert
p33039
I42
VSimpleName: add
p33040
tp33041
I1
s(g2579
I42
g2580
Vinsert
p33042
I74
VParameterizedType: List<DependencyLink>
p33043
tp33044
F1.25
s(g5915
I42
g5916
Vinsert
p33045
I42
VSimpleName: context
p33046
tp33047
I2
s(g6984
I42
g6985
Vinsert
p33048
I78
VMarkerAnnotation
p33049
tp33050
F0.25
s(g4011
I42
g4012
Vinsert
p33051
I43
VSimpleType: DependencyLink
p33052
tp33053
F0.25
s(g6635
I42
g6636
Vinsert
p33054
I85
VDimension
p33055
tp33056
F1.75
s(g729
I42
g730
Vinsert
p33057
I44
VSingleVariableDeclaration
p33058
tp33059
F0.5
s(g21
I42
g22
Vinsert
p33060
I60
VVariableDeclarationStatement
p33061
tp33062
I1
s(g3233
I42
g3234
Vinsert
p33063
I21
VExpressionStatement
p33064
tp33065
F6.5
s(g12296
I42
g12297
Vinsert
p33066
I60
VVariableDeclarationStatement
p33067
tp33068
I1
s(g5603
I42
g5604
Vinsert
p33069
I44
VSingleVariableDeclaration
p33070
tp33071
F0.25
s(g631
I42
g632
Vinsert
p33072
I41
VReturnStatement
p33073
tp33074
I1
s(g7027
I42
g7028
Vinsert
p33075
I40
VQualifiedName: result.ok
p33076
tp33077
I1
s(g2187
I42
g2188
Vinsert
p33078
I43
VSimpleType: ActuateCollectorMetrics
p33079
tp33080
I1
s(Vinsert
p33081
I42
VSimpleName: builder
p33082
Vinsert
p33083
I42
VSimpleName: coercesTimestampZeroToNull
p33084
tp33085
F0.25
s(g8152
I42
g8153
Vinsert
p33086
I42
VSimpleName: call
p33087
tp33088
F1.25
s(g699
I42
g700
Vinsert
p33089
I43
VSimpleType: Callback
p33090
tp33091
F0.25
s(Vinsert
p33092
I42
VSimpleName: run
p33093
Vinsert
p33094
I1
VAnonymousClassDeclaration
p33095
tp33096
F0.25
s(g5949
I42
g5950
Vinsert
p33097
I14
VClassInstanceCreation
p33098
tp33099
I1
s(g2492
I42
g2493
Vinsert
p33100
I39
VPrimitiveType: long
p33101
tp33102
I2
s(g1278
I42
g1279
Vinsert
p33103
I43
VSimpleType: SelectSpanNames
p33104
tp33105
I1
s(g8842
I42
g8843
Vinsert
p33106
I39
VPrimitiveType: byte
p33107
tp33108
I1
s(g3199
I42
g3200
Vinsert
p33109
I78
VMarkerAnnotation
p33110
tp33111
F0.25
s(g1607
I42
g1608
Vinsert
p33112
I42
VSimpleName: sampled
p33113
tp33114
I1
s(g1866
I42
g1867
Vinsert
p33115
I42
VSimpleName: ElasticsearchStorage
p33116
tp33117
I2
s(g2870
I42
g2871
Vinsert
p33118
I78
VMarkerAnnotation
p33119
tp33120
F0.25
s(g4212
I42
g4213
Vinsert
p33121
I42
VSimpleName: and
p33122
tp33123
I2
s(g4095
I42
g4096
Vinsert
p33124
I32
VMethodInvocation
p33125
tp33126
I1
s(g7104
I42
g7105
Vinsert
p33127
I34
VNumberLiteral: 2
p33128
tp33129
I1
s(g2781
I42
g2782
Vinsert
p33130
I38
VPrefixExpression: !
p33131
tp33132
I2
s(g5949
I42
g5950
Vinsert
p33133
I32
VMethodInvocation
p33134
tp33135
I2
s(g26426
I42
g26427
Vinsert
p33136
I43
VSimpleType: Long
p33137
tp33138
F2.25
s(g4903
I42
g4904
Vinsert
p33139
I14
VClassInstanceCreation
p33140
tp33141
F0.5
s(g10727
I42
g10728
Vinsert
p33142
I42
VSimpleName: BinaryAnnotation
p33143
tp33144
I3
s(g791
I42
g792
Vinsert
p33145
I42
VSimpleName: TRACE_ID_SAMPLER_COUNTING
p33146
tp33147
I1
s(g6079
I42
g6080
Vinsert
p33148
I40
VQualifiedName: span.timestamp
p33149
tp33150
I2
s(g2972
I42
g2973
Vinsert
p33151
I42
VSimpleName: hasSize
p33152
tp33153
I1
s(g7913
I42
g7914
Vinsert
p33154
I39
VPrimitiveType: int
p33155
tp33156
I2
s(g6471
I42
g6472
Vinsert
p33157
I43
VSimpleType: ImmutableSet.Builder
p33158
tp33159
I1
s(g2247
I42
g2248
Vinsert
p33160
I42
VSimpleName: callback
p33161
tp33162
I2
s(g8765
I42
g8766
Vinsert
p33163
I42
VSimpleName: asList
p33164
tp33165
I1
s(g846
I42
g847
Vinsert
p33166
I42
VSimpleName: timestampRange
p33167
tp33168
F0.25
s(g846
I42
g847
Vinsert
p33169
I43
VSimpleType: SelectTraceIdsFromServiceSpan.Input
p33170
tp33171
I1
s(g6050
I42
g6051
Vinsert
p33172
I42
VSimpleName: WEB_ENDPOINT
p33173
tp33174
I1
s(g11397
I42
g11398
Vinsert
p33175
I42
VSimpleName: equals
p33176
tp33177
I1
s(g6421
I42
g6422
Vinsert
p33178
I42
VSimpleName: enqueue
p33179
tp33180
I1
s(g1964
I42
g1965
Vinsert
p33181
I42
VSimpleName: name
p33182
tp33183
I2
s(g6536
I42
g6537
Vinsert
p33184
I42
VSimpleName: annotationQuery
p33185
tp33186
I1
s(g1934
I42
g1935
Vinsert
p33187
I42
VSimpleName: sharedBuilder
p33188
tp33189
I1
s(g25199
I42
g25200
Vinsert
p33190
I42
VSimpleName: jsonEscapedSizeInBytes
p33191
tp33192
I1
s(g4712
I42
g4713
Vinsert
p33193
I83
VModifier: public
p33194
tp33195
F0.25
s(g81
I42
g82
Vinsert
p33196
I42
VSimpleName: spanName
p33197
tp33198
I3
s(g1260
I42
g1261
Vinsert
p33199
I25
VIfStatement
p33200
tp33201
I1
s(g4605
I42
g4606
Vinsert
p33202
I42
VSimpleName: assertThat
p33203
tp33204
I5
s(g11325
I42
g11326
Vinsert
p33205
I83
VModifier: public
p33206
tp33207
F0.25
s(g1438
I42
g1439
Vinsert
p33208
I25
VIfStatement
p33209
tp33210
I1
s(g4928
I42
g4929
Vinsert
p33211
I43
VSimpleType: IOException
p33212
tp33213
F0.5
s(g9502
I42
g9503
Vinsert
p33214
I42
VSimpleName: builder
p33215
tp33216
F0.25
s(g2763
I42
g2764
Vinsert
p33217
I54
VTryStatement
p33218
tp33219
I2
s(g9867
I42
g9868
Vinsert
p33220
I8
VBlock
p33221
tp33222
I1
s(g7120
I42
g7121
Vinsert
p33223
I42
VSimpleName: ElasticsearchSpanStore
p33224
tp33225
F1.25
s(g106
I42
g107
Vinsert
p33226
I42
VSimpleName: onReadTimeout
p33227
tp33228
F0.25
s(g8791
I42
g8792
Vinsert
p33229
I59
VVariableDeclarationFragment
p33230
tp33231
I1
s(g3194
I42
g3195
Vinsert
p33232
I45
VStringLiteral: "    {\u005cn"
p33233
tp33234
I2
s(g2174
I42
g2175
Vinsert
p33235
I31
VMethodDeclaration
p33236
tp33237
F0.25
s(g3268
I42
g3269
Vinsert
p33238
I21
VExpressionStatement
p33239
tp33240
I2
s(g1688
I42
g1689
Vinsert
p33241
I45
VStringLiteral: "foo"
p33242
tp33243
I1
s(g5294
I42
g5295
Vinsert
p33244
I34
VNumberLiteral: 300
p33245
tp33246
I1
s(g15603
I42
g15604
Vinsert
p33247
I45
VStringLiteral: "tracingSessionFactory"
p33248
tp33249
F0.25
s(g13258
I42
g13259
Vinsert
p33250
I42
VSimpleName: assertThat
p33251
tp33252
I1
s(g16965
I42
g16966
Vinsert
p33253
I40
VQualifiedName: request.binaryAnnotations
p33254
tp33255
I2
s(g11001
I42
g11002
Vinsert
p33256
I42
VSimpleName: isEqualTo
p33257
tp33258
F0.25
s(g2360
I42
g2361
Vinsert
p33259
I8
VBlock
p33260
tp33261
I1
s(g6454
I42
g6455
Vinsert
p33262
I25
VIfStatement
p33263
tp33264
I2
s(g2959
I42
g2960
Vinsert
p33265
I60
VVariableDeclarationStatement
p33266
tp33267
I5
s(g2574
I42
g2575
Vinsert
p33268
I42
VSimpleName: traceIds
p33269
tp33270
F0.25
s(g14825
I42
g14826
Vinsert
p33271
I42
VSimpleName: Span2Converter
p33272
tp33273
I1
s(g886
I42
g887
Vinsert
p33274
I42
VSimpleName: Field
p33275
tp33276
I1
s(g982
I42
g983
Vinsert
p33277
I42
VSimpleName: spanStore
p33278
tp33279
I1
s(g4610
I42
g4611
Vinsert
p33280
I40
VQualifiedName: StorageAdapters.SpanConsumer
p33281
tp33282
F0.25
s(g7582
I42
g7583
Vinsert
p33283
I42
VSimpleName: SPAN_ADAPTER
p33284
tp33285
I2
s(g11397
I42
g11398
Vinsert
p33286
I32
VMethodInvocation
p33287
tp33288
I21
s(g7839
I42
g7840
Vinsert
p33289
I42
VSimpleName: serviceName
p33290
tp33291
F0.75
s(g3688
I42
g3689
Vinsert
p33292
I74
VParameterizedType: CallbackCaptor<>
p33293
tp33294
I1
s(g5915
I42
g5916
Vinsert
p33295
I42
VSimpleName: getBean
p33296
tp33297
I1
s(g2393
I42
g2394
Vinsert
p33298
I42
VSimpleName: Collections
p33299
tp33300
I2
s(g3607
I42
g3608
Vinsert
p33301
I42
VSimpleName: kafka
p33302
tp33303
I2
s(g7305
I42
g7306
Vinsert
p33304
I42
VSimpleName: write
p33305
tp33306
I4
s(g8294
I42
g8295
Vinsert
p33307
I39
VPrimitiveType: void
p33308
tp33309
F1.0
s(g1247
I42
g1248
Vinsert
p33310
I42
VSimpleName: Override
p33311
tp33312
F0.5
s(g4568
I42
g4569
Vinsert
p33313
I42
VSimpleName: orderBy
p33314
tp33315
F0.25
s(g2589
I42
g2590
Vinsert
p33316
I42
VSimpleName: kind
p33317
tp33318
I3
s(g141
I42
g142
Vinsert
p33319
I42
VSimpleName: resolvedCall
p33320
tp33321
I1
s(g6776
I42
g6777
Vinsert
p33322
I42
VSimpleName: conn
p33323
tp33324
I4
s(g3176
I42
g3177
Vinsert
p33325
I27
VInfixExpression: &&
p33326
tp33327
I1
s(g5000
I42
g5001
Vinsert
p33328
I42
VSimpleName: close
p33329
tp33330
F0.25
s(g19000
I42
g19001
Vinsert
p33331
I43
VSimpleType: CassandraStorage
p33332
tp33333
I1
s(g3427
I42
g3428
Vinsert
p33334
I84
VUnionType: IOException|RuntimeException
p33335
tp33336
F0.25
s(g4114
I42
g4115
Vinsert
p33337
I42
VSimpleName: traceId
p33338
tp33339
I1
s(g446
I42
g447
Vinsert
p33340
I42
VSimpleName: asList
p33341
tp33342
I3
s(g14269
I42
g14270
Vinsert
p33343
I42
VSimpleName: indexNameForTimestamp
p33344
tp33345
I1
s(g3793
I42
g3794
Vinsert
p33346
I42
VSimpleName: result
p33347
tp33348
I2
s(g7380
I42
g7381
Vinsert
p33349
I42
VSimpleName: Builder
p33350
tp33351
F0.25
s(g5995
I42
g5996
Vinsert
p33352
I42
VSimpleName: build
p33353
tp33354
I1
s(g11683
I42
g11684
Vinsert
p33355
I43
VSimpleType: HttpCall.Factory
p33356
tp33357
F1.25
s(g13567
I42
g13568
Vinsert
p33358
I42
VSimpleName: Span
p33359
tp33360
F0.25
s(g1332
I42
g1333
Vinsert
p33361
I60
VVariableDeclarationStatement
p33362
tp33363
I1
s(g15405
I42
g15406
Vinsert
p33364
I42
VSimpleName: getTraces
p33365
tp33366
F0.25
s(g7450
I42
g7451
Vinsert
p33367
I45
VStringLiteral: "\u005c",\u005cn"
p33368
tp33369
I1
s(g4420
I42
g4421
Vinsert
p33370
I42
VSimpleName: onComplete
p33371
tp33372
F0.25
s(g11973
I42
g11974
Vinsert
p33373
I52
VThisExpression
p33374
tp33375
F0.25
s(g1806
I42
g1807
Vinsert
p33376
I42
VSimpleName: listener
p33377
tp33378
I1
s(g5785
I42
g5786
Vinsert
p33379
I42
VSimpleName: isEmpty
p33380
tp33381
I1
s(g3740
I42
g3741
Vinsert
p33382
I21
VExpressionStatement
p33383
tp33384
I1
s(g997
I42
g998
Vinsert
p33385
I42
VSimpleName: ArrayList
p33386
tp33387
I1
s(g3618
I42
g3619
Vinsert
p33388
I32
VMethodInvocation
p33389
tp33390
I1
s(g3804
I42
g3805
Vinsert
p33391
I42
VSimpleName: ENDPOINT_READER
p33392
tp33393
I1
s(g9587
I42
g9588
Vinsert
p33394
I45
VStringLiteral: "  \u005c"traceId\u005c": \u005c"6b221d5bc9e6496c\u005c",\u005cn"
p33395
tp33396
I2
s(g2689
I42
g2690
Vinsert
p33397
I31
VMethodDeclaration
p33398
tp33399
F0.25
s(g6000
I42
g6001
Vinsert
p33400
I45
VStringLiteral: "zipkin.collector.scribe.enabled=false"
p33401
tp33402
F0.5
s(g9019
I42
g9020
Vinsert
p33403
I42
VSimpleName: String
p33404
tp33405
I1
s(g5873
I42
g5874
Vinsert
p33406
I39
VPrimitiveType: byte
p33407
tp33408
I1
s(g3838
I42
g3839
Vinsert
p33409
I42
VSimpleName: Span
p33410
tp33411
I2
s(g6063
I42
g6064
Vinsert
p33412
I31
VMethodDeclaration
p33413
tp33414
F1.25
s(g6426
I42
g6427
Vinsert
p33415
I42
VSimpleName: promise
p33416
tp33417
I1
s(g9502
I42
g9503
Vinsert
p33418
I42
VSimpleName: IllegalArgumentException
p33419
tp33420
F0.25
s(g13780
I42
g13781
Vinsert
p33421
I42
VSimpleName: duration
p33422
tp33423
I1
s(g1979
I42
g1980
Vinsert
p33424
I38
VPrefixExpression: !
p33425
tp33426
I1
s(g762
I42
g763
Vinsert
p33427
I33
VNullLiteral
p33428
tp33429
I1
s(g3438
I42
g3439
Vinsert
p33430
I42
VSimpleName: AtomicInteger
p33431
tp33432
F0.25
s(g3417
I42
g3418
Vinsert
p33433
I43
VSimpleType: ParseException
p33434
tp33435
F0.25
s(g4461
I42
g4462
Vinsert
p33436
I42
VSimpleName: session
p33437
tp33438
F0.5
s(g12014
I42
g12015
Vinsert
p33439
I33
VNullLiteral
p33440
tp33441
I2
s(g992
I42
g993
Vinsert
p33442
I83
VModifier: public
p33443
tp33444
F1.0
s(g12441
I42
g12442
Vinsert
p33445
I21
VExpressionStatement
p33446
tp33447
I3
s(g6776
I42
g6777
Vinsert
p33448
I42
VSimpleName: compute
p33449
tp33450
F0.75
s(g8677
I42
g8678
Vinsert
p33451
I42
VSimpleName: lazyClient
p33452
tp33453
I1
s(g8458
I42
g8459
Vinsert
p33454
I34
VNumberLiteral: 300
p33455
tp33456
I1
s(g6699
I42
g6700
Vinsert
p33457
I42
VSimpleName: GroupMember
p33458
tp33459
I2
s(g121
I42
g122
Vinsert
p33460
I42
VSimpleName: electionPath
p33461
tp33462
I1
s(g7027
I42
g7028
Vinsert
p33463
I42
VSimpleName: isFalse
p33464
tp33465
I1
s(g2436
I42
g2437
Vinsert
p33466
I14
VClassInstanceCreation
p33467
tp33468
I1
s(g2441
I42
g2442
Vinsert
p33469
I42
VSimpleName: QueryBuilder
p33470
tp33471
I1
s(g2848
I42
g2849
Vinsert
p33472
I59
VVariableDeclarationFragment
p33473
tp33474
I3
s(g7546
I42
g7547
Vinsert
p33475
I42
VSimpleName: register
p33476
tp33477
I5
s(g6315
I42
g6316
Vinsert
p33478
I42
VSimpleName: LINK_GROUP_FIELDS_WITHOUT_TRACE_ID_HIGH
p33479
tp33480
F0.25
s(g831
I42
g832
Vinsert
p33481
I42
VSimpleName: builder
p33482
tp33483
I1
s(g2373
I42
g2374
Vinsert
p33484
I33
VNullLiteral
p33485
tp33486
I2
s(g5746
I42
g5747
Vinsert
p33487
I42
VSimpleName: createContextWithOverridenProperty
p33488
tp33489
I2
s(g5112
I42
g5113
Vinsert
p33490
I8
VBlock
p33491
tp33492
I2
s(g23773
I42
g23774
Vinsert
p33493
I34
VNumberLiteral: 0L
p33494
tp33495
I1
s(g3662
I42
g3663
Vinsert
p33496
I60
VVariableDeclarationStatement
p33497
tp33498
I1
s(g9290
I42
g9291
Vinsert
p33499
I42
VSimpleName: TopicPartition
p33500
tp33501
F0.25
s(g13430
I42
g13431
Vinsert
p33502
I54
VTryStatement
p33503
tp33504
I3
s(g344
I42
g345
Vinsert
p33505
I59
VVariableDeclarationFragment
p33506
tp33507
I2
s(g56
I42
g57
Vinsert
p33508
I32
VMethodInvocation
p33509
tp33510
I9
s(g4928
I42
g4929
Vinsert
p33511
I43
VSimpleType: List
p33512
tp33513
I2
s(g362
I42
g363
Vinsert
p33514
I84
VUnionType: RuntimeException|Error
p33515
tp33516
I1
s(g1017
I42
g1018
Vinsert
p33517
I31
VMethodDeclaration
p33518
tp33519
F0.25
s(g1861
I42
g1862
Vinsert
p33520
I42
VSimpleName: span
p33521
tp33522
I6
s(g6552
I42
g6553
Vinsert
p33523
I32
VMethodInvocation
p33524
tp33525
F15.75
s(g1574
I42
g1575
Vinsert
p33526
I60
VVariableDeclarationStatement
p33527
tp33528
I1
s(g24817
I42
g24818
Vinsert
p33529
I42
VSimpleName: annotationQuery
p33530
tp33531
F0.25
s(g2492
I42
g2493
Vinsert
p33532
I58
VVariableDeclarationExpression
p33533
tp33534
I2
s(g2309
I42
g2310
Vinsert
p33535
I42
VSimpleName: IndexNameFormatter
p33536
tp33537
I1
s(g11397
I42
g11398
Vinsert
p33538
I42
VSimpleName: setOrigin
p33539
tp33540
I1
s(g987
I42
g988
Vinsert
p33541
I42
VSimpleName: BinaryAnnotation
p33542
tp33543
I1
s(g10482
I42
g10483
Vinsert
p33544
I7
VAssignment: =
p33545
tp33546
I8
s(g372
I42
g373
Vinsert
p33547
I42
VSimpleName: String
p33548
tp33549
I1
s(g4605
I42
g4606
Vinsert
p33550
I45
VStringLiteral: "a"
p33551
tp33552
I1
s(Vinsert
p33553
I42
VSimpleName: size
p33554
Vinsert
p33555
I42
VSimpleName: traceIds
p33556
tp33557
I1
s(g7502
I42
g7503
Vinsert
p33558
I42
VSimpleName: sampler2
p33559
tp33560
F0.25
s(g4344
I42
g4345
Vinsert
p33561
I42
VSimpleName: content
p33562
tp33563
I1
s(g289
I42
g290
Vinsert
p33564
I2
VArrayAccess
p33565
tp33566
I2
s(g3150
I42
g3151
Vinsert
p33567
I34
VNumberLiteral: 1
p33568
tp33569
I1
s(g2459
I42
g2460
Vinsert
p33570
I8
VBlock
p33571
tp33572
I1
s(g734
I42
g735
Vinsert
p33573
I42
VSimpleName: beanFactory
p33574
tp33575
I1
s(g2156
I42
g2157
Vinsert
p33576
I40
VQualifiedName: that.links
p33577
tp33578
I1
s(g9842
I42
g9843
Vinsert
p33579
I42
VSimpleName: builder
p33580
tp33581
I3
s(g6045
I42
g6046
Vinsert
p33582
I13
VCharacterLiteral: 't'
p33583
tp33584
I1
s(Vinsert
p33585
I42
VSimpleName: readSpan
p33586
Vinsert
p33587
I85
VDimension
p33588
tp33589
I2
s(g6541
I42
g6542
Vinsert
p33590
I42
VSimpleName: builderWithPort_negativeIsInvalid
p33591
tp33592
F0.25
s(g876
I42
g877
Vinsert
p33593
I42
VSimpleName: keyspace
p33594
tp33595
I1
s(g9791
I42
g9792
Vinsert
p33596
I42
VSimpleName: Exception
p33597
tp33598
F0.25
s(g562
I42
g563
Vinsert
p33599
I42
VSimpleName: LOGGER
p33600
tp33601
I1
s(g23669
I42
g23670
Vinsert
p33602
I45
VStringLiteral: "127.0.0.1"
p33603
tp33604
F0.25
s(g2525
I42
g2526
Vinsert
p33605
I42
VSimpleName: Collection
p33606
tp33607
F0.25
s(g3618
I42
g3619
Vinsert
p33608
I42
VSimpleName: countDown
p33609
tp33610
I1
s(g1410
I42
g1411
Vinsert
p33611
I9
VBooleanLiteral: false
p33612
tp33613
I1
s(g7546
I42
g7547
Vinsert
p33614
I43
VSimpleType: ZipkinElasticsearchStorageAutoConfiguration
p33615
tp33616
I2
s(g4856
I42
g4857
Vinsert
p33617
I42
VSimpleName: nanoTime
p33618
tp33619
F0.5
s(g1438
I42
g1439
Vinsert
p33620
I42
VSimpleName: name
p33621
tp33622
I1
s(g1633
I42
g1634
Vinsert
p33623
I42
VSimpleName: System
p33624
tp33625
F2.25
s(g2260
I42
g2261
Vinsert
p33626
I42
VSimpleName: Map
p33627
tp33628
F0.25
s(g10659
I42
g10660
Vinsert
p33629
I43
VSimpleType: SearchRequest
p33630
tp33631
I1
s(g2340
I42
g2341
Vinsert
p33632
I42
VSimpleName: writer
p33633
tp33634
I1
s(g1017
I42
g1018
Vinsert
p33635
I32
VMethodInvocation
p33636
tp33637
I1
s(g6992
I42
g6993
Vinsert
p33638
I42
VSimpleName: assertThat
p33639
tp33640
I1
s(g8611
I42
g8612
Vinsert
p33641
I42
VSimpleName: body
p33642
tp33643
I2
s(g1528
I42
g1529
Vinsert
p33644
I42
VSimpleName: BoundStatement
p33645
tp33646
F1.5
s(g3493
I42
g3494
Vinsert
p33647
I59
VVariableDeclarationFragment
p33648
tp33649
I2
s(g2740
I42
g2741
Vinsert
p33650
I42
VSimpleName: Nullable
p33651
tp33652
F0.25
s(g6376
I42
g6377
Vinsert
p33653
I42
VSimpleName: query
p33654
tp33655
I2
s(g6827
I42
g6828
Vinsert
p33656
I60
VVariableDeclarationStatement
p33657
tp33658
I3
s(g14839
I42
g14840
Vinsert
p33659
I21
VExpressionStatement
p33660
tp33661
I3
s.