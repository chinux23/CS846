(dp0
(Vinsert
p1
I42
VSimpleName: iter
p2
Vinsert
p3
I62
VInstanceofExpression
p4
tp5
I1
s(Vinsert
p6
I42
VSimpleName: rest
p7
Vinsert
p8
I7
VAssignment: =
p9
tp10
I23
s(Vinsert
p11
I42
VSimpleName: addP
p12
Vinsert
p13
I42
VSimpleName: CHUNK_SIZE
p14
tp15
I1
s(Vinsert
p16
I42
VSimpleName: pushThreadBindings
p17
Vinsert
p18
I42
VSimpleName: popThreadBindings
p19
tp20
I1
s(Vinsert
p21
I42
VSimpleName: withMeta
p22
Vinsert
p23
I7
VAssignment: =
p24
tp25
I2
s(Vinsert
p26
I42
VSimpleName: isAssignableFrom
p27
Vinsert
p28
I42
VSimpleName: Type
p29
tp30
I1
s(Vinsert
p31
I42
VSimpleName: eval
p32
Vinsert
p33
I32
VMethodInvocation
p34
tp35
I8
s(Vinsert
p36
I42
VSimpleName: pop
p37
Vinsert
p38
I59
VVariableDeclarationFragment
p39
tp40
F0.25
s(Vinsert
p41
I42
VSimpleName: visitInsn
p42
Vinsert
p43
I42
VSimpleName: context
p44
tp45
F0.25
s(Vinsert
p46
I42
VSimpleName: isReduced
p47
Vinsert
p48
I41
VReturnStatement
p49
tp50
F0.5
s(Vinsert
p51
I42
VSimpleName: read
p52
Vinsert
p53
I43
VSimpleType: PushbackReader
p54
tp55
I1
s(Vinsert
p56
I42
VSimpleName: getAndIncrement
p57
Vinsert
p58
I34
VNumberLiteral: 1
p59
tp60
F0.25
s(Vinsert
p61
I42
VSimpleName: longValue
p62
Vinsert
p63
I27
VInfixExpression: &
p64
tp65
I1
s(Vinsert
p66
I42
VSimpleName: cons
p67
Vinsert
p68
I40
VQualifiedName: C.RETURN
p69
tp70
I1
s(Vinsert
p71
I42
VSimpleName: getObjectType
p72
Vinsert
p73
I21
VExpressionStatement
p74
tp75
I2
s(Vinsert
p76
I42
VSimpleName: without
p77
Vinsert
p78
I42
VSimpleName: bit
p79
tp80
I1
s(Vinsert
p81
I42
VSimpleName: group
p82
Vinsert
p83
I43
VSimpleType: Long
p84
tp85
I1
s(Vinsert
p86
I42
VSimpleName: visitInsn
p87
Vinsert
p88
I43
VSimpleType: GeneratorAdapter
p89
tp90
F0.5
s(Vinsert
p91
I42
VSimpleName: nextID
p92
Vinsert
p93
I45
VStringLiteral: "__"
p94
tp95
F2.5
s(Vinsert
p96
I42
VSimpleName: getClass
p97
Vinsert
p98
I42
VSimpleName: arg2
p99
tp100
I1
s(Vinsert
p101
I42
VSimpleName: get
p102
Vinsert
p103
I39
VPrimitiveType: boolean
p104
tp105
F1.5
s(Vinsert
p106
I42
VSimpleName: equals
p107
Vinsert
p108
I42
VSimpleName: Handle
p109
tp110
I1
s(g66
I42
g67
Vinsert
p111
I45
VStringLiteral: "Can't specify more than "
p112
tp113
I1
s(Vinsert
p114
I42
VSimpleName: invoke
p115
Vinsert
p116
I42
VSimpleName: arg5
p117
tp118
F0.25
s(Vinsert
p119
I42
VSimpleName: getClassLoader
p120
Vinsert
p121
I33
VNullLiteral
p122
tp123
F1.25
s(Vinsert
p124
I42
VSimpleName: valAt
p125
Vinsert
p126
I42
VSimpleName: hash
p127
tp128
F0.25
s(Vinsert
p129
I42
VSimpleName: valAt
p130
Vinsert
p131
I25
VIfStatement
p132
tp133
I3
s(Vinsert
p134
I42
VSimpleName: visitInsn
p135
Vinsert
p136
I42
VSimpleName: dims
p137
tp138
F0.5
s(Vinsert
p139
I42
VSimpleName: set
p140
Vinsert
p141
I42
VSimpleName: RUNNING
p142
tp143
I1
s(Vinsert
p144
I42
VSimpleName: println
p145
Vinsert
p146
I32
VMethodInvocation
p147
tp148
I6
s(Vinsert
p149
I42
VSimpleName: boundedLength
p150
Vinsert
p151
I42
VSimpleName: arglist
p152
tp153
F0.5
s(Vinsert
p154
I42
VSimpleName: write
p155
Vinsert
p156
I8
VBlock
p157
tp158
F5.25
s(Vinsert
p159
I42
VSimpleName: more
p160
Vinsert
p161
I42
VSimpleName: x
p162
tp163
F2.25
s(Vinsert
p164
I42
VSimpleName: currentThread
p165
Vinsert
p166
I8
VBlock
p167
tp168
I1
s(Vinsert
p169
I42
VSimpleName: visit
p170
Vinsert
p171
I59
VVariableDeclarationFragment
p172
tp173
I2
s(Vinsert
p174
I42
VSimpleName: getCompiledClass
p175
Vinsert
p176
I42
VSimpleName: fx
p177
tp178
I1
s(Vinsert
p179
I42
VSimpleName: getValue
p180
Vinsert
p181
I42
VSimpleName: getKey
p182
tp183
I2
s(Vinsert
p184
I42
VSimpleName: seq
p185
Vinsert
p186
I42
VSimpleName: List
p187
tp188
I3
s(Vinsert
p189
I42
VSimpleName: pop2
p190
Vinsert
p191
I40
VQualifiedName: C.STATEMENT
p192
tp193
I1
s(Vinsert
p194
I42
VSimpleName: without
p195
Vinsert
p196
I11
VCastExpression
p197
tp198
I1
s(Vinsert
p199
I42
VSimpleName: visitTypeInsn
p200
Vinsert
p201
I21
VExpressionStatement
p202
tp203
I1
s(Vinsert
p204
I42
VSimpleName: persistent
p205
Vinsert
p206
I31
VMethodDeclaration
p207
tp208
F0.25
s(Vinsert
p209
I42
VSimpleName: runtimeException
p210
Vinsert
p211
I9
VBooleanLiteral: true
p212
tp213
I3
s(Vinsert
p214
I42
VSimpleName: valAt
p215
Vinsert
p216
I59
VVariableDeclarationFragment
p217
tp218
I8
s(g21
I42
g22
Vinsert
p219
I11
VCastExpression
p220
tp221
I8
s(Vinsert
p222
I42
VSimpleName: var
p223
Vinsert
p224
I42
VSimpleName: print_length
p225
tp226
I1
s(Vinsert
p227
I42
VSimpleName: write
p228
Vinsert
p229
I42
VSimpleName: PersistentHashSet
p230
tp231
F0.25
s(Vinsert
p232
I42
VSimpleName: arraycopy
p233
Vinsert
p234
I40
VQualifiedName: tail.length
p235
tp236
I1
s(Vinsert
p237
I42
VSimpleName: shortValue
p238
Vinsert
p239
I62
VInstanceofExpression
p240
tp241
I1
s(Vinsert
p242
I42
VSimpleName: intern
p243
Vinsert
p244
I43
VSimpleType: String
p245
tp246
F5.25
s(Vinsert
p247
I42
VSimpleName: visitTryCatchBlock
p248
Vinsert
p249
I42
VSimpleName: mv
p250
tp251
I1
s(Vinsert
p252
I42
VSimpleName: getTransaction
p253
Vinsert
p254
I43
VSimpleType: Exception
p255
tp256
F0.25
s(Vinsert
p257
I42
VSimpleName: seq
p258
Vinsert
p259
I43
VSimpleType: Entry
p260
tp261
I1
s(Vinsert
p262
I42
VSimpleName: hasheq
p263
Vinsert
p264
I42
VSimpleName: o
p265
tp266
I2
s(Vinsert
p267
I42
VSimpleName: num
p268
Vinsert
p269
I32
VMethodInvocation
p270
tp271
F7.0
s(Vinsert
p272
I42
VSimpleName: intern
p273
Vinsert
p274
I42
VSimpleName: internNew
p275
tp276
I1
s(g26
I42
g27
Vinsert
p277
I42
VSimpleName: AFn
p278
tp279
I1
s(Vinsert
p280
I42
VSimpleName: nth
p281
Vinsert
p282
I42
VSimpleName: Indexed
p283
tp284
F0.25
s(Vinsert
p285
I42
VSimpleName: openConnection
p286
Vinsert
p287
I42
VSimpleName: url
p288
tp289
I2
s(Vinsert
p290
I42
VSimpleName: getHash
p291
Vinsert
p292
I22
VFieldAccess
p293
tp294
I1
s(Vinsert
p295
I42
VSimpleName: shortValue
p296
Vinsert
p297
I83
VModifier: public
p298
tp299
F0.25
s(Vinsert
p300
I42
VSimpleName: getText
p301
Vinsert
p302
I32
VMethodInvocation
p303
tp304
I1
s(Vinsert
p305
I42
VSimpleName: println
p306
Vinsert
p307
I42
VSimpleName: p
p308
tp309
I1
s(g252
I42
g253
Vinsert
p310
I42
VSimpleName: Object
p311
tp312
F0.25
s(Vinsert
p313
I42
VSimpleName: isInteger
p314
Vinsert
p315
I32
VMethodInvocation
p316
tp317
F3.5
s(Vinsert
p318
I42
VSimpleName: doPrivileged
p319
Vinsert
p320
I43
VSimpleType: ClassLoader
p321
tp322
F1.25
s(Vinsert
p323
I42
VSimpleName: isPrimitive
p324
Vinsert
p325
I27
VInfixExpression: ||
p326
tp327
I3
s(Vinsert
p328
I42
VSimpleName: currentThread
p329
Vinsert
p330
I14
VClassInstanceCreation
p331
tp332
F0.5
s(Vinsert
p333
I42
VSimpleName: valAt
p334
Vinsert
p335
I39
VPrimitiveType: void
p336
tp337
F0.25
s(Vinsert
p338
I42
VSimpleName: count
p339
Vinsert
p340
I40
VQualifiedName: method.parms
p341
tp342
F0.25
s(Vinsert
p343
I42
VSimpleName: loadClass
p344
Vinsert
p345
I33
VNullLiteral
p346
tp347
I1
s(Vinsert
p348
I42
VSimpleName: getClass
p349
Vinsert
p350
I32
VMethodInvocation
p351
tp352
F19.75
s(Vinsert
p353
I42
VSimpleName: sneakyThrow
p354
Vinsert
p355
I7
VAssignment: =
p356
tp357
I1
s(Vinsert
p358
I42
VSimpleName: first
p359
Vinsert
p360
I42
VSimpleName: second
p361
tp362
F0.25
s(Vinsert
p363
I42
VSimpleName: identityHashCode
p364
Vinsert
p365
I41
VReturnStatement
p366
tp367
I1
s(Vinsert
p368
I42
VSimpleName: dup
p369
Vinsert
p370
I42
VSimpleName: mark
p371
tp372
I1
s(g139
I42
g140
Vinsert
p373
I54
VTryStatement
p374
tp375
I1
s(Vinsert
p376
I42
VSimpleName: equal
p377
Vinsert
p378
I42
VSimpleName: IObj
p379
tp380
I1
s(Vinsert
p381
I42
VSimpleName: push
p382
Vinsert
p383
I42
VSimpleName: tag
p384
tp385
I1
s(Vinsert
p386
I42
VSimpleName: indexOf
p387
Vinsert
p388
I42
VSimpleName: o
p389
tp390
F0.25
s(Vinsert
p391
I42
VSimpleName: intern
p392
Vinsert
p393
I43
VSimpleType: Object
p394
tp395
F0.25
s(Vinsert
p396
I42
VSimpleName: listIterator
p397
Vinsert
p398
I42
VSimpleName: init
p399
tp400
I1
s(Vinsert
p401
I42
VSimpleName: hasNext
p402
Vinsert
p403
I52
VThisExpression
p404
tp405
F0.25
s(Vinsert
p406
I42
VSimpleName: deref
p407
Vinsert
p408
I25
VIfStatement
p409
tp410
I5
s(Vinsert
p411
I42
VSimpleName: applyToHelper
p412
Vinsert
p413
I42
VSimpleName: Exception
p414
tp415
F0.25
s(Vinsert
p416
I42
VSimpleName: equiv
p417
Vinsert
p418
I42
VSimpleName: T2
p419
tp420
I3
s(Vinsert
p421
I42
VSimpleName: toCharArray
p422
Vinsert
p423
I8
VBlock
p424
tp425
I1
s(Vinsert
p426
I42
VSimpleName: nextID
p427
Vinsert
p428
I27
VInfixExpression: !=
p429
tp430
I2
s(Vinsert
p431
I42
VSimpleName: emitUnboxed
p432
Vinsert
p433
I42
VSimpleName: me
p434
tp435
I2
s(Vinsert
p436
I42
VSimpleName: count
p437
Vinsert
p438
I83
VModifier: final
p439
tp440
F0.25
s(Vinsert
p441
I42
VSimpleName: invoke
p442
Vinsert
p443
I42
VSimpleName: j
p444
tp445
I8
s(Vinsert
p446
I42
VSimpleName: intern
p447
Vinsert
p448
I40
VQualifiedName: sym.name
p449
tp450
F1.0
s(Vinsert
p451
I42
VSimpleName: startElement
p452
Vinsert
p453
I43
VSimpleType: String
p454
tp455
F0.25
s(Vinsert
p456
I42
VSimpleName: matcher
p457
Vinsert
p458
I42
VSimpleName: m
p459
tp460
I1
s(Vinsert
p461
I42
VSimpleName: add
p462
Vinsert
p463
I36
VParenthesizedExpression
p464
tp465
I2
s(Vinsert
p466
I42
VSimpleName: entrySet
p467
Vinsert
p468
I62
VInstanceofExpression
p469
tp470
I1
s(Vinsert
p471
I42
VSimpleName: from
p472
Vinsert
p473
I42
VSimpleName: box
p474
tp475
F0.25
s(g466
I42
g467
Vinsert
p476
I42
VSimpleName: Map
p477
tp478
I2
s(Vinsert
p479
I42
VSimpleName: assoc
p480
Vinsert
p481
I42
VSimpleName: idx
p482
tp483
I1
s(Vinsert
p484
I42
VSimpleName: equals
p485
Vinsert
p486
I9
VBooleanLiteral: false
p487
tp488
I1
s(Vinsert
p489
I42
VSimpleName: put
p490
Vinsert
p491
I42
VSimpleName: BindingInit
p492
tp493
I1
s(g484
I42
g485
Vinsert
p494
I42
VSimpleName: Keyword
p495
tp496
I3
s(Vinsert
p497
I42
VSimpleName: putIfAbsent
p498
Vinsert
p499
I59
VVariableDeclarationFragment
p500
tp501
I1
s(g446
I42
g447
Vinsert
p502
I42
VSimpleName: munge
p503
tp504
F1.25
s(Vinsert
p505
I42
VSimpleName: valueOf
p506
Vinsert
p507
I42
VSimpleName: String
p508
tp509
F3.25
s(Vinsert
p510
I42
VSimpleName: hashCombine
p511
Vinsert
p512
I42
VSimpleName: RT
p513
tp514
I3
s(Vinsert
p515
I42
VSimpleName: seq
p516
Vinsert
p517
I42
VSimpleName: ISeq
p518
tp519
F10.25
s(g11
I42
g12
Vinsert
p520
I2
VArrayAccess
p521
tp522
I1
s(g134
I42
g135
Vinsert
p523
I42
VSimpleName: multianewarray
p524
tp525
F0.25
s(g348
I42
g349
Vinsert
p526
I42
VSimpleName: Seqable
p527
tp528
I1
s(g119
I42
g120
Vinsert
p529
I57
VTypeLiteral
p530
tp531
I1
s(Vinsert
p532
I42
VSimpleName: first
p533
Vinsert
p534
I59
VVariableDeclarationFragment
p535
tp536
I16
s(Vinsert
p537
I42
VSimpleName: addType
p538
Vinsert
p539
I32
VMethodInvocation
p540
tp541
I3
s(Vinsert
p542
I42
VSimpleName: visitFrame
p543
Vinsert
p544
I7
VAssignment: =
p545
tp546
I1
s(Vinsert
p547
I42
VSimpleName: visitMethodInsn
p548
Vinsert
p549
I27
VInfixExpression: !=
p550
tp551
I2
s(Vinsert
p552
I42
VSimpleName: nth
p553
Vinsert
p554
I42
VSimpleName: nth
p555
tp556
F1.25
s(Vinsert
p557
I42
VSimpleName: set
p558
Vinsert
p559
I4
VArrayInitializer
p560
tp561
I1
s(Vinsert
p562
I42
VSimpleName: compare
p563
Vinsert
p564
I34
VNumberLiteral: 1
p565
tp566
I1
s(Vinsert
p567
I42
VSimpleName: setTransaction
p568
Vinsert
p569
I42
VSimpleName: setTransaction
p570
tp571
I1
s(Vinsert
p572
I42
VSimpleName: compareAndSet
p573
Vinsert
p574
I9
VBooleanLiteral: true
p575
tp576
F0.25
s(g368
I42
g369
Vinsert
p577
I42
VSimpleName: callLabel
p578
tp579
I1
s(g318
I42
g319
Vinsert
p580
I42
VSimpleName: AccessController
p581
tp582
I1
s(Vinsert
p583
I42
VSimpleName: visitInsn
p584
Vinsert
p585
I59
VVariableDeclarationFragment
p586
tp587
I1
s(Vinsert
p588
I42
VSimpleName: nth
p589
Vinsert
p590
I45
VStringLiteral: "Can't embed unreadable object in code: "
p591
tp592
I1
s(Vinsert
p593
I42
VSimpleName: getResources
p594
Vinsert
p595
I42
VSimpleName: Enumeration
p596
tp597
I1
s(Vinsert
p598
I42
VSimpleName: charAt
p599
Vinsert
p600
I42
VSimpleName: charAt
p601
tp602
I2
s(Vinsert
p603
I42
VSimpleName: asTransient
p604
Vinsert
p605
I42
VSimpleName: EMPTY
p606
tp607
F2.75
s(Vinsert
p608
I42
VSimpleName: getHash
p609
Vinsert
p610
I41
VReturnStatement
p611
tp612
I1
s(Vinsert
p613
I42
VSimpleName: nanoTime
p614
Vinsert
p615
I42
VSimpleName: estimatedTime
p616
tp617
I1
s(Vinsert
p618
I42
VSimpleName: intern
p619
Vinsert
p620
I40
VQualifiedName: Boolean.TRUE
p621
tp622
I1
s(Vinsert
p623
I42
VSimpleName: equals
p624
Vinsert
p625
I40
VQualifiedName: Double.TYPE
p626
tp627
I1
s(Vinsert
p628
I42
VSimpleName: val
p629
Vinsert
p630
I42
VSimpleName: _val
p631
tp632
F0.5
s(g318
I42
g319
Vinsert
p633
I26
VImportDeclaration
p634
tp635
F0.25
s(Vinsert
p636
I42
VSimpleName: printStackTrace
p637
Vinsert
p638
I42
VSimpleName: USES
p639
tp640
I1
s(Vinsert
p641
I42
VSimpleName: internVar
p642
Vinsert
p643
I8
VBlock
p644
tp645
I1
s(Vinsert
p646
I42
VSimpleName: compare
p647
Vinsert
p648
I42
VSimpleName: o
p649
tp650
F1.25
s(Vinsert
p651
I42
VSimpleName: LA
p652
Vinsert
p653
I19
VDoStatement
p654
tp655
I1
s(Vinsert
p656
I42
VSimpleName: visitVarInsn
p657
Vinsert
p658
I25
VIfStatement
p659
tp660
I1
s(Vinsert
p661
I42
VSimpleName: create
p662
Vinsert
p663
I42
VSimpleName: nsSym
p664
tp665
I1
s(Vinsert
p666
I42
VSimpleName: map
p667
Vinsert
p668
I7
VAssignment: =
p669
tp670
I5
s(Vinsert
p671
I42
VSimpleName: put
p672
Vinsert
p673
I43
VSimpleType: AMap
p674
tp675
I3
s(Vinsert
p676
I42
VSimpleName: addTo
p677
Vinsert
p678
I31
VMethodDeclaration
p679
tp680
F0.5
s(Vinsert
p681
I42
VSimpleName: list
p682
Vinsert
p683
I42
VSimpleName: ret
p684
tp685
I1
s(Vinsert
p686
I42
VSimpleName: hasNext
p687
Vinsert
p688
I43
VSimpleType: Object
p689
tp690
F1.25
s(Vinsert
p691
I42
VSimpleName: get
p692
Vinsert
p693
I42
VSimpleName: IObj
p694
tp695
I3
s(g552
I42
g553
Vinsert
p696
I32
VMethodInvocation
p697
tp698
F26.25
s(Vinsert
p699
I42
VSimpleName: print
p700
Vinsert
p701
I32
VMethodInvocation
p702
tp703
I1
s(Vinsert
p704
I42
VSimpleName: nth
p705
Vinsert
p706
I42
VSimpleName: cs
p707
tp708
I2
s(Vinsert
p709
I42
VSimpleName: execute
p710
Vinsert
p711
I42
VSimpleName: solo
p712
tp713
F1.25
s(g119
I42
g120
Vinsert
p714
I25
VIfStatement
p715
tp716
I1
s(Vinsert
p717
I42
VSimpleName: get
p718
Vinsert
p719
I39
VPrimitiveType: int
p720
tp721
I1
s(g106
I42
g107
Vinsert
p722
I43
VSimpleType: Handle
p723
tp724
I1
s(Vinsert
p725
I42
VSimpleName: second
p726
Vinsert
p727
I42
VSimpleName: Exception
p728
tp729
F0.25
s(Vinsert
p730
I42
VSimpleName: newUTF8
p731
Vinsert
p732
I34
VNumberLiteral: 0
p733
tp734
I2
s(Vinsert
p735
I42
VSimpleName: put
p736
Vinsert
p737
I39
VPrimitiveType: void
p738
tp739
F0.25
s(Vinsert
p740
I42
VSimpleName: read
p741
Vinsert
p742
I42
VSimpleName: a
p743
tp744
I1
s(Vinsert
p745
I42
VSimpleName: put
p746
Vinsert
p747
I43
VSimpleType: CFn
p748
tp749
F0.25
s(Vinsert
p750
I42
VSimpleName: throwArity
p751
Vinsert
p752
I42
VSimpleName: arg4
p753
tp754
F0.25
s(Vinsert
p755
I42
VSimpleName: visitLineNumber
p756
Vinsert
p757
I21
VExpressionStatement
p758
tp759
F3.25
s(Vinsert
p760
I42
VSimpleName: getColumnNumber
p761
Vinsert
p762
I34
VNumberLiteral: 1
p763
tp764
I1
s(Vinsert
p765
I42
VSimpleName: get
p766
Vinsert
p767
I42
VSimpleName: hadError
p768
tp769
I2
s(Vinsert
p770
I42
VSimpleName: substring
p771
Vinsert
p772
I7
VAssignment: =
p773
tp774
I3
s(g760
I42
g761
Vinsert
p775
I42
VSimpleName: LineNumberingPushbackReader
p776
tp777
I3
s(g730
I42
g731
Vinsert
p778
I8
VBlock
p779
tp780
I3
s(Vinsert
p781
I42
VSimpleName: putInt
p782
Vinsert
p783
I27
VInfixExpression: &
p784
tp785
I1
s(Vinsert
p786
I42
VSimpleName: length
p787
Vinsert
p788
I85
VDimension
p789
tp790
I2
s(Vinsert
p791
I42
VSimpleName: equals
p792
Vinsert
p793
I85
VDimension
p794
tp795
F1.25
s(g267
I42
g268
Vinsert
p796
I42
VSimpleName: bitLength
p797
tp798
I1
s(Vinsert
p799
I42
VSimpleName: lt
p800
Vinsert
p801
I42
VSimpleName: x
p802
tp803
I1
s(Vinsert
p804
I42
VSimpleName: getSuperclass
p805
Vinsert
p806
I8
VBlock
p807
tp808
I1
s(Vinsert
p809
I42
VSimpleName: lastIndexOf
p810
Vinsert
p811
I25
VIfStatement
p812
tp813
I4
s(Vinsert
p814
I42
VSimpleName: containsKey
p815
Vinsert
p816
I42
VSimpleName: attrs
p817
tp818
I2
s(Vinsert
p819
I42
VSimpleName: visitLineNumber
p820
Vinsert
p821
I52
VThisExpression
p822
tp823
F0.25
s(g194
I42
g195
Vinsert
p824
I27
VInfixExpression: ==
p825
tp826
I1
s(Vinsert
p827
I42
VSimpleName: applyTo
p828
Vinsert
p829
I43
VSimpleType: IPersistentMap
p830
tp831
I1
s(Vinsert
p832
I42
VSimpleName: newLabel
p833
Vinsert
p834
I42
VSimpleName: falseLabel
p835
tp836
I2
s(Vinsert
p837
I42
VSimpleName: mark
p838
Vinsert
p839
I42
VSimpleName: fn
p840
tp841
I1
s(Vinsert
p842
I42
VSimpleName: ret1
p843
Vinsert
p844
I42
VSimpleName: arg11
p845
tp846
I1
s(Vinsert
p847
I42
VSimpleName: visitIincInsn
p848
Vinsert
p849
I42
VSimpleName: local
p850
tp851
F0.25
s(Vinsert
p852
I42
VSimpleName: classForName
p853
Vinsert
p854
I42
VSimpleName: RT
p855
tp856
I1
s(Vinsert
p857
I42
VSimpleName: equals
p858
Vinsert
p859
I42
VSimpleName: def
p860
tp861
F0.25
s(Vinsert
p862
I42
VSimpleName: getMessage
p863
Vinsert
p864
I43
VSimpleType: CompilerException
p865
tp866
I2
s(Vinsert
p867
I42
VSimpleName: next
p868
Vinsert
p869
I42
VSimpleName: items
p870
tp871
I2
s(g209
I42
g210
Vinsert
p872
I62
VInstanceofExpression
p873
tp874
I2
s(g489
I42
g490
Vinsert
p875
I14
VClassInstanceCreation
p876
tp877
I5
s(Vinsert
p878
I42
VSimpleName: equals
p879
Vinsert
p880
I42
VSimpleName: NS
p881
tp882
I1
s(Vinsert
p883
I42
VSimpleName: visitVarInsn
p884
Vinsert
p885
I8
VBlock
p886
tp887
I1
s(Vinsert
p888
I42
VSimpleName: getCause
p889
Vinsert
p890
I43
VSimpleType: Error
p891
tp892
F0.5
s(Vinsert
p893
I42
VSimpleName: isPrimitive
p894
Vinsert
p895
I42
VSimpleName: c1
p896
tp897
I2
s(Vinsert
p898
I42
VSimpleName: lock
p899
Vinsert
p900
I40
VQualifiedName: tref.lock
p901
tp902
I1
s(Vinsert
p903
I42
VSimpleName: count
p904
Vinsert
p905
I42
VSimpleName: exact
p906
tp907
I2
s(Vinsert
p908
I42
VSimpleName: mark
p909
Vinsert
p910
I42
VSimpleName: newLabel
p911
tp912
I1
s(g562
I42
g563
Vinsert
p913
I42
VSimpleName: Numbers
p914
tp915
I2
s(Vinsert
p916
I42
VSimpleName: invoke
p917
Vinsert
p918
I27
VInfixExpression: +
p919
tp920
I4
s(g164
I42
g165
Vinsert
p921
I42
VSimpleName: frame
p922
tp923
F0.25
s(Vinsert
p924
I42
VSimpleName: from
p925
Vinsert
p926
I42
VSimpleName: bitOr
p927
tp928
F0.25
s(Vinsert
p929
I42
VSimpleName: create
p930
Vinsert
p931
I32
VMethodInvocation
p932
tp933
F44.5
s(g484
I42
g485
Vinsert
p934
I42
VSimpleName: keyword
p935
tp936
I1
s(Vinsert
p937
I42
VSimpleName: forName
p938
Vinsert
p939
I43
VSimpleType: Class
p940
tp941
F1.25
s(g305
I42
g306
Vinsert
p942
I36
VParenthesizedExpression
p943
tp944
I1
s(Vinsert
p945
I42
VSimpleName: withMeta
p946
Vinsert
p947
I43
VSimpleType: Symbol
p948
tp949
F1.25
s(Vinsert
p950
I42
VSimpleName: get
p951
Vinsert
p952
I40
VQualifiedName: System.err
p953
tp954
F0.25
s(Vinsert
p955
I42
VSimpleName: group
p956
Vinsert
p957
I43
VSimpleType: BigDecimal
p958
tp959
I1
s(Vinsert
p960
I42
VSimpleName: getStatic
p961
Vinsert
p962
I42
VSimpleName: GeneratorAdapter
p963
tp964
F0.25
s(g300
I42
g301
Vinsert
p965
I42
VSimpleName: failed
p966
tp967
I1
s(Vinsert
p968
I42
VSimpleName: push
p969
Vinsert
p970
I32
VMethodInvocation
p971
tp972
I14
s(Vinsert
p973
I42
VSimpleName: append
p974
Vinsert
p975
I11
VCastExpression
p976
tp977
I1
s(Vinsert
p978
I42
VSimpleName: seq
p979
Vinsert
p980
I42
VSimpleName: create
p981
tp982
F1.25
s(g572
I42
g573
Vinsert
p983
I42
VSimpleName: readTimeMsecs
p984
tp985
F0.5
s(g709
I42
g710
Vinsert
p986
I21
VExpressionStatement
p987
tp988
I4
s(Vinsert
p989
I42
VSimpleName: nth
p990
Vinsert
p991
I60
VVariableDeclarationStatement
p992
tp993
I4
s(Vinsert
p994
I42
VSimpleName: zerop
p995
Vinsert
p996
I16
VConditionalExpression
p997
tp998
I1
s(Vinsert
p999
I42
VSimpleName: getPrimitiveType
p1000
Vinsert
p1001
I27
VInfixExpression: +
p1002
tp1003
I1
s(Vinsert
p1004
I42
VSimpleName: first
p1005
Vinsert
p1006
I42
VSimpleName: Exception
p1007
tp1008
F2.25
s(Vinsert
p1009
I42
VSimpleName: deref
p1010
Vinsert
p1011
I59
VVariableDeclarationFragment
p1012
tp1013
F6.25
s(Vinsert
p1014
I42
VSimpleName: getMapping
p1015
Vinsert
p1016
I42
VSimpleName: Object
p1017
tp1018
I1
s(Vinsert
p1019
I42
VSimpleName: cons
p1020
Vinsert
p1021
I42
VSimpleName: i
p1022
tp1023
F4.5
s(g699
I42
g700
Vinsert
p1024
I27
VInfixExpression: !=
p1025
tp1026
I2
s(Vinsert
p1027
I42
VSimpleName: load
p1028
Vinsert
p1029
I42
VSimpleName: MACRO_CHECK
p1030
tp1031
I1
s(Vinsert
p1032
I42
VSimpleName: internAccessor
p1033
Vinsert
p1034
I42
VSimpleName: name
p1035
tp1036
F0.25
s(Vinsert
p1037
I42
VSimpleName: getMethod
p1038
Vinsert
p1039
I42
VSimpleName: GeneratorAdapter
p1040
tp1041
I2
s(g847
I42
g848
Vinsert
p1042
I42
VSimpleName: iinc
p1043
tp1044
F0.25
s(Vinsert
p1045
I42
VSimpleName: second
p1046
Vinsert
p1047
I42
VSimpleName: fs
p1048
tp1049
I1
s(Vinsert
p1050
I42
VSimpleName: var
p1051
Vinsert
p1052
I43
VSimpleType: String
p1053
tp1054
I3
s(Vinsert
p1055
I42
VSimpleName: isMacro
p1056
Vinsert
p1057
I25
VIfStatement
p1058
tp1059
I1
s(g562
I42
g563
Vinsert
p1060
I25
VIfStatement
p1061
tp1062
I3
s(Vinsert
p1063
I42
VSimpleName: nth
p1064
Vinsert
p1065
I42
VSimpleName: assoc
p1066
tp1067
I1
s(Vinsert
p1068
I42
VSimpleName: isReduced
p1069
Vinsert
p1070
I20
VEmptyStatement
p1071
tp1072
F0.25
s(Vinsert
p1073
I42
VSimpleName: getName
p1074
Vinsert
p1075
I42
VSimpleName: asSym
p1076
tp1077
I1
s(g730
I42
g731
Vinsert
p1078
I27
VInfixExpression: !=
p1079
tp1080
I2
s(Vinsert
p1081
I42
VSimpleName: getValue
p1082
Vinsert
p1083
I43
VSimpleType: Class
p1084
tp1085
I1
s(Vinsert
p1086
I42
VSimpleName: first
p1087
Vinsert
p1088
I39
VPrimitiveType: void
p1089
tp1090
F0.25
s(g313
I42
g314
Vinsert
p1091
I25
VIfStatement
p1092
tp1093
I2
s(Vinsert
p1094
I42
VSimpleName: getClass
p1095
Vinsert
p1096
I42
VSimpleName: x
p1097
tp1098
F4.5
s(Vinsert
p1099
I42
VSimpleName: endsWith
p1100
Vinsert
p1101
I32
VMethodInvocation
p1102
tp1103
F2.25
s(Vinsert
p1104
I42
VSimpleName: setLineNumber
p1105
Vinsert
p1106
I42
VSimpleName: in
p1107
tp1108
I1
s(g144
I42
g145
Vinsert
p1109
I42
VSimpleName: quote
p1110
tp1111
F0.25
s(Vinsert
p1112
I42
VSimpleName: getAndIncrement
p1113
Vinsert
p1114
I42
VSimpleName: TRef
p1115
tp1116
F0.25
s(Vinsert
p1117
I42
VSimpleName: getClass
p1118
Vinsert
p1119
I22
VFieldAccess
p1120
tp1121
I1
s(Vinsert
p1122
I42
VSimpleName: set
p1123
Vinsert
p1124
I41
VReturnStatement
p1125
tp1126
F2.25
s(Vinsert
p1127
I42
VSimpleName: getJavaClass
p1128
Vinsert
p1129
I40
VQualifiedName: C.RETURN
p1130
tp1131
I1
s(Vinsert
p1132
I42
VSimpleName: intValue
p1133
Vinsert
p1134
I42
VSimpleName: Object
p1135
tp1136
F0.75
s(Vinsert
p1137
I42
VSimpleName: entrySet
p1138
Vinsert
p1139
I42
VSimpleName: Object
p1140
tp1141
I4
s(Vinsert
p1142
I42
VSimpleName: write
p1143
Vinsert
p1144
I45
VStringLiteral: "backspace"
p1145
tp1146
I1
s(Vinsert
p1147
I42
VSimpleName: assoc
p1148
Vinsert
p1149
I21
VExpressionStatement
p1150
tp1151
I3
s(Vinsert
p1152
I42
VSimpleName: first
p1153
Vinsert
p1154
I42
VSimpleName: RT
p1155
tp1156
F13.25
s(Vinsert
p1157
I42
VSimpleName: list
p1158
Vinsert
p1159
I25
VIfStatement
p1160
tp1161
I1
s(Vinsert
p1162
I42
VSimpleName: second
p1163
Vinsert
p1164
I59
VVariableDeclarationFragment
p1165
tp1166
I3
s(Vinsert
p1167
I42
VSimpleName: divideAndRemainder
p1168
Vinsert
p1169
I8
VBlock
p1170
tp1171
I1
s(Vinsert
p1172
I42
VSimpleName: get
p1173
Vinsert
p1174
I43
VSimpleType: Object
p1175
tp1176
F7.75
s(Vinsert
p1177
I42
VSimpleName: println
p1178
Vinsert
p1179
I42
VSimpleName: map
p1180
tp1181
I1
s(Vinsert
p1182
I42
VSimpleName: peek
p1183
Vinsert
p1184
I42
VSimpleName: EMPTY
p1185
tp1186
I1
s(Vinsert
p1187
I42
VSimpleName: create
p1188
Vinsert
p1189
I42
VSimpleName: len
p1190
tp1191
I1
s(Vinsert
p1192
I42
VSimpleName: bigIntegerValue
p1193
Vinsert
p1194
I36
VParenthesizedExpression
p1195
tp1196
I1
s(Vinsert
p1197
I42
VSimpleName: newInstance
p1198
Vinsert
p1199
I42
VSimpleName: seqToTypedArray
p1200
tp1201
F0.25
s(Vinsert
p1202
I42
VSimpleName: pushThreadBindings
p1203
Vinsert
p1204
I14
VClassInstanceCreation
p1205
tp1206
I1
s(g209
I42
g210
Vinsert
p1207
I43
VSimpleType: Symbol
p1208
tp1209
I3
s(g285
I42
g286
Vinsert
p1210
I42
VSimpleName: equals
p1211
tp1212
I1
s(Vinsert
p1213
I42
VSimpleName: equals
p1214
Vinsert
p1215
I42
VSimpleName: Symbol
p1216
tp1217
F1.0
s(Vinsert
p1218
I42
VSimpleName: isDynamic
p1219
Vinsert
p1220
I32
VMethodInvocation
p1221
tp1222
I2
s(Vinsert
p1223
I42
VSimpleName: getKey
p1224
Vinsert
p1225
I43
VSimpleType: Map.Entry
p1226
tp1227
I6
s(Vinsert
p1228
I42
VSimpleName: put12
p1229
Vinsert
p1230
I11
VCastExpression
p1231
tp1232
I1
s(Vinsert
p1233
I42
VSimpleName: valAt
p1234
Vinsert
p1235
I43
VSimpleType: IPersistentSet
p1236
tp1237
I2
s(Vinsert
p1238
I42
VSimpleName: num
p1239
Vinsert
p1240
I42
VSimpleName: x
p1241
tp1242
F1.25
s(Vinsert
p1243
I42
VSimpleName: setDynamic
p1244
Vinsert
p1245
I45
VStringLiteral: "clojure.lang.Var setDynamic(boolean)"
p1246
tp1247
F0.25
s(Vinsert
p1248
I42
VSimpleName: truncateDivide
p1249
Vinsert
p1250
I42
VSimpleName: Object
p1251
tp1252
F0.5
s(Vinsert
p1253
I42
VSimpleName: count
p1254
Vinsert
p1255
I42
VSimpleName: next
p1256
tp1257
F0.75
s(Vinsert
p1258
I42
VSimpleName: stripTrailingZeros
p1259
Vinsert
p1260
I60
VVariableDeclarationStatement
p1261
tp1262
I1
s(Vinsert
p1263
I42
VSimpleName: get
p1264
Vinsert
p1265
I42
VSimpleName: tvals
p1266
tp1267
I1
s(Vinsert
p1268
I42
VSimpleName: valAt
p1269
Vinsert
p1270
I42
VSimpleName: argsyms
p1271
tp1272
I1
s(Vinsert
p1273
I42
VSimpleName: sval
p1274
Vinsert
p1275
I11
VCastExpression
p1276
tp1277
I1
s(Vinsert
p1278
I42
VSimpleName: read
p1279
Vinsert
p1280
I42
VSimpleName: LispReader
p1281
tp1282
I1
s(g814
I42
g815
Vinsert
p1283
I42
VSimpleName: key
p1284
tp1285
F0.25
s(Vinsert
p1286
I42
VSimpleName: hashCombine
p1287
Vinsert
p1288
I42
VSimpleName: name
p1289
tp1290
F0.25
s(Vinsert
p1291
I42
VSimpleName: hasJavaClass
p1292
Vinsert
p1293
I39
VPrimitiveType: boolean
p1294
tp1295
F0.25
s(g755
I42
g756
Vinsert
p1296
I42
VSimpleName: gen
p1297
tp1298
F4.25
s(g804
I42
g805
Vinsert
p1299
I24
VForStatement
p1300
tp1301
I1
s(g368
I42
g369
Vinsert
p1302
I42
VSimpleName: gen
p1303
tp1304
I4
s(g608
I42
g609
Vinsert
p1305
I43
VSimpleType: Object
p1306
tp1307
F0.25
s(Vinsert
p1308
I42
VSimpleName: get
p1309
Vinsert
p1310
I42
VSimpleName: array
p1311
tp1312
F1.25
s(g613
I42
g614
Vinsert
p1313
I42
VSimpleName: anInt
p1314
tp1315
I1
s(Vinsert
p1316
I42
VSimpleName: getLineNumber
p1317
Vinsert
p1318
I42
VSimpleName: LineNumberingPushbackReader
p1319
tp1320
I2
s(Vinsert
p1321
I42
VSimpleName: swapThunk
p1322
Vinsert
p1323
I8
VBlock
p1324
tp1325
I1
s(Vinsert
p1326
I42
VSimpleName: hash
p1327
Vinsert
p1328
I42
VSimpleName: Util
p1329
tp1330
I1
s(Vinsert
p1331
I42
VSimpleName: find
p1332
Vinsert
p1333
I2
VArrayAccess
p1334
tp1335
I1
s(g735
I42
g736
Vinsert
p1336
I8
VBlock
p1337
tp1338
I11
s(Vinsert
p1339
I42
VSimpleName: eval
p1340
Vinsert
p1341
I42
VSimpleName: Exception
p1342
tp1343
F0.5
s(Vinsert
p1344
I42
VSimpleName: nth
p1345
Vinsert
p1346
I31
VMethodDeclaration
p1347
tp1348
F0.75
s(Vinsert
p1349
I42
VSimpleName: get
p1350
Vinsert
p1351
I42
VSimpleName: SoftReference
p1352
tp1353
I1
s(Vinsert
p1354
I42
VSimpleName: getValue
p1355
Vinsert
p1356
I40
VQualifiedName: ref.faults
p1357
tp1358
I1
s(g209
I42
g210
Vinsert
p1359
I42
VSimpleName: Symbol
p1360
tp1361
I3
s(g1258
I42
g1259
Vinsert
p1362
I36
VParenthesizedExpression
p1363
tp1364
I1
s(g786
I42
g787
Vinsert
p1365
I27
VInfixExpression: +
p1366
tp1367
I2
s(Vinsert
p1368
I42
VSimpleName: getAndIncrement
p1369
Vinsert
p1370
I42
VSimpleName: i
p1371
tp1372
I3
s(Vinsert
p1373
I42
VSimpleName: deref
p1374
Vinsert
p1375
I43
VSimpleType: CompilerException
p1376
tp1377
I2
s(Vinsert
p1378
I42
VSimpleName: isInteger
p1379
Vinsert
p1380
I45
VStringLiteral: "Key must be integer"
p1381
tp1382
F0.25
s(g593
I42
g594
Vinsert
p1383
I42
VSimpleName: IOException
p1384
tp1385
F0.25
s(Vinsert
p1386
I42
VSimpleName: count
p1387
Vinsert
p1388
I42
VSimpleName: Symbol
p1389
tp1390
I1
s(Vinsert
p1391
I42
VSimpleName: cons
p1392
Vinsert
p1393
I42
VSimpleName: ret
p1394
tp1395
I11
s(Vinsert
p1396
I42
VSimpleName: putInt
p1397
Vinsert
p1398
I42
VSimpleName: out
p1399
tp1400
I2
s(Vinsert
p1401
I42
VSimpleName: poll
p1402
Vinsert
p1403
I27
VInfixExpression: !=
p1404
tp1405
I2
s(g1081
I42
g1082
Vinsert
p1406
I27
VInfixExpression: &&
p1407
tp1408
I1
s(Vinsert
p1409
I42
VSimpleName: booleanCast
p1410
Vinsert
p1411
I7
VAssignment: =
p1412
tp1413
I1
s(Vinsert
p1414
I42
VSimpleName: create
p1415
Vinsert
p1416
I40
VQualifiedName: PersistentArrayMap.HASHTABLE_THRESHOLD
p1417
tp1418
I1
s(Vinsert
p1419
I42
VSimpleName: nth
p1420
Vinsert
p1421
I34
VNumberLiteral: 0
p1422
tp1423
I2
s(Vinsert
p1424
I42
VSimpleName: getModifiers
p1425
Vinsert
p1426
I7
VAssignment: =
p1427
tp1428
I1
s(g989
I42
g990
Vinsert
p1429
I42
VSimpleName: var
p1430
tp1431
I1
s(Vinsert
p1432
I42
VSimpleName: append
p1433
Vinsert
p1434
I42
VSimpleName: Exception
p1435
tp1436
I1
s(Vinsert
p1437
I42
VSimpleName: isInteger
p1438
Vinsert
p1439
I42
VSimpleName: assoc
p1440
tp1441
F0.25
s(g814
I42
g815
Vinsert
p1442
I42
VSimpleName: has
p1443
tp1444
F0.25
s(g295
I42
g296
Vinsert
p1445
I41
VReturnStatement
p1446
tp1447
I1
s(g214
I42
g215
Vinsert
p1448
I32
VMethodInvocation
p1449
tp1450
I12
s(Vinsert
p1451
I42
VSimpleName: push
p1452
Vinsert
p1453
I41
VReturnStatement
p1454
tp1455
F0.25
s(Vinsert
p1456
I42
VSimpleName: getName
p1457
Vinsert
p1458
I25
VIfStatement
p1459
tp1460
I1
s(Vinsert
p1461
I42
VSimpleName: get
p1462
Vinsert
p1463
I43
VSimpleType: IPersistentCollection
p1464
tp1465
I2
s(g21
I42
g22
Vinsert
p1466
I42
VSimpleName: Object
p1467
tp1468
F1.25
s(Vinsert
p1469
I42
VSimpleName: create
p1470
Vinsert
p1471
I45
VStringLiteral: "letfn"
p1472
tp1473
I1
s(Vinsert
p1474
I42
VSimpleName: map
p1475
Vinsert
p1476
I27
VInfixExpression: ||
p1477
tp1478
I1
s(g1339
I42
g1340
Vinsert
p1479
I43
VSimpleType: KeywordCallSite
p1480
tp1481
I2
s(g598
I42
g599
Vinsert
p1482
I42
VSimpleName: name
p1483
tp1484
I5
s(Vinsert
p1485
I42
VSimpleName: count
p1486
Vinsert
p1487
I42
VSimpleName: loopLocals
p1488
tp1489
F2.25
s(Vinsert
p1490
I42
VSimpleName: equals
p1491
Vinsert
p1492
I43
VSimpleType: String
p1493
tp1494
F0.5
s(Vinsert
p1495
I42
VSimpleName: applyTo
p1496
Vinsert
p1497
I42
VSimpleName: get
p1498
tp1499
I1
s(Vinsert
p1500
I42
VSimpleName: invoke
p1501
Vinsert
p1502
I45
VStringLiteral: "clojure.core"
p1503
tp1504
I1
s(Vinsert
p1505
I42
VSimpleName: count
p1506
Vinsert
p1507
I42
VSimpleName: IPersistentCollection
p1508
tp1509
I5
s(Vinsert
p1510
I42
VSimpleName: next
p1511
Vinsert
p1512
I42
VSimpleName: hasNext
p1513
tp1514
I3
s(Vinsert
p1515
I42
VSimpleName: emitArgsAsArray
p1516
Vinsert
p1517
I43
VSimpleType: GeneratorAdapter
p1518
tp1519
F0.25
s(Vinsert
p1520
I42
VSimpleName: isPrimitive
p1521
Vinsert
p1522
I39
VPrimitiveType: byte
p1523
tp1524
F0.25
s(Vinsert
p1525
I42
VSimpleName: nanoTime
p1526
Vinsert
p1527
I42
VSimpleName: refinfo
p1528
tp1529
F0.25
s(Vinsert
p1530
I42
VSimpleName: length
p1531
Vinsert
p1532
I34
VNumberLiteral: 0
p1533
tp1534
I2
s(Vinsert
p1535
I42
VSimpleName: willBeStaticMethod
p1536
Vinsert
p1537
I31
VMethodDeclaration
p1538
tp1539
F0.25
s(Vinsert
p1540
I42
VSimpleName: doubleValue
p1541
Vinsert
p1542
I42
VSimpleName: addP
p1543
tp1544
F0.5
s(Vinsert
p1545
I42
VSimpleName: first
p1546
Vinsert
p1547
I8
VBlock
p1548
tp1549
F24.25
s(g313
I42
g314
Vinsert
p1550
I42
VSimpleName: Util
p1551
tp1552
F3.5
s(Vinsert
p1553
I42
VSimpleName: hashCode
p1554
Vinsert
p1555
I40
VQualifiedName: bootstrapMethods.length
p1556
tp1557
I1
s(Vinsert
p1558
I42
VSimpleName: set
p1559
Vinsert
p1560
I42
VSimpleName: f
p1561
tp1562
I3
s(Vinsert
p1563
I42
VSimpleName: doSet
p1564
Vinsert
p1565
I43
VSimpleType: LockingTransaction
p1566
tp1567
I1
s(Vinsert
p1568
I42
VSimpleName: count
p1569
Vinsert
p1570
I40
VQualifiedName: def.keyslots
p1571
tp1572
I1
s(Vinsert
p1573
I42
VSimpleName: getEx
p1574
Vinsert
p1575
I8
VBlock
p1576
tp1577
I1
s(Vinsert
p1578
I42
VSimpleName: add
p1579
Vinsert
p1580
I42
VSimpleName: LinkedList
p1581
tp1582
I2
s(Vinsert
p1583
I42
VSimpleName: create
p1584
Vinsert
p1585
I42
VSimpleName: incr
p1586
tp1587
I1
s(Vinsert
p1588
I42
VSimpleName: add
p1589
Vinsert
p1590
I43
VSimpleType: ArrayList
p1591
tp1592
I3
s(g676
I42
g677
Vinsert
p1593
I83
VModifier: public
p1594
tp1595
F0.5
s(Vinsert
p1596
I42
VSimpleName: persistent
p1597
Vinsert
p1598
I42
VSimpleName: PersistentHashSet
p1599
tp1600
F2.5
s(Vinsert
p1601
I42
VSimpleName: create
p1602
Vinsert
p1603
I42
VSimpleName: e
p1604
tp1605
I1
s(Vinsert
p1606
I42
VSimpleName: eval
p1607
Vinsert
p1608
I42
VSimpleName: fieldName
p1609
tp1610
I1
s(Vinsert
p1611
I42
VSimpleName: valueOf
p1612
Vinsert
p1613
I42
VSimpleName: Long
p1614
tp1615
F1.25
s(Vinsert
p1616
I42
VSimpleName: put
p1617
Vinsert
p1618
I42
VSimpleName: entries
p1619
tp1620
I2
s(Vinsert
p1621
I42
VSimpleName: get
p1622
Vinsert
p1623
I22
VFieldAccess
p1624
tp1625
F2.75
s(Vinsert
p1626
I42
VSimpleName: indexOf
p1627
Vinsert
p1628
I42
VSimpleName: slash
p1629
tp1630
I1
s(g295
I42
g296
Vinsert
p1631
I42
VSimpleName: shortCast
p1632
tp1633
F0.25
s(Vinsert
p1634
I42
VSimpleName: val
p1635
Vinsert
p1636
I42
VSimpleName: sexpr
p1637
tp1638
I2
s(Vinsert
p1639
I42
VSimpleName: rest
p1640
Vinsert
p1641
I43
VSimpleType: Exception
p1642
tp1643
F1.75
s(Vinsert
p1644
I42
VSimpleName: write
p1645
Vinsert
p1646
I40
VQualifiedName: RT.NS_REFERS
p1647
tp1648
I1
s(Vinsert
p1649
I42
VSimpleName: getRunning
p1650
Vinsert
p1651
I59
VVariableDeclarationFragment
p1652
tp1653
I1
s(Vinsert
p1654
I42
VSimpleName: multiply
p1655
Vinsert
p1656
I60
VVariableDeclarationStatement
p1657
tp1658
I1
s(g686
I42
g687
Vinsert
p1659
I32
VMethodInvocation
p1660
tp1661
F8.75
s(Vinsert
p1662
I42
VSimpleName: parse
p1663
Vinsert
p1664
I41
VReturnStatement
p1665
tp1666
I1
s(Vinsert
p1667
I42
VSimpleName: deref
p1668
Vinsert
p1669
I42
VSimpleName: popThreadBindings
p1670
tp1671
F0.25
s(g1172
I42
g1173
Vinsert
p1672
I42
VSimpleName: arity
p1673
tp1674
I1
s(g66
I42
g67
Vinsert
p1675
I43
VSimpleType: Exception
p1676
tp1677
I1
s(Vinsert
p1678
I42
VSimpleName: rest
p1679
Vinsert
p1680
I42
VSimpleName: PersistentTreeSet
p1681
tp1682
I1
s(Vinsert
p1683
I42
VSimpleName: bindsToStaticFn
p1684
Vinsert
p1685
I42
VSimpleName: LocalBindingExpr
p1686
tp1687
I2
s(Vinsert
p1688
I42
VSimpleName: first
p1689
Vinsert
p1690
I43
VSimpleType: Module
p1691
tp1692
I1
s(g1258
I42
g1259
Vinsert
p1693
I11
VCastExpression
p1694
tp1695
I1
s(g730
I42
g731
Vinsert
p1696
I42
VSimpleName: attr
p1697
tp1698
I2
s(g338
I42
g339
Vinsert
p1699
I42
VSimpleName: parms
p1700
tp1701
F2.5
s(Vinsert
p1702
I42
VSimpleName: getInstanceField
p1703
Vinsert
p1704
I42
VSimpleName: val
p1705
tp1706
I1
s(Vinsert
p1707
I42
VSimpleName: floatValue
p1708
Vinsert
p1709
I31
VMethodDeclaration
p1710
tp1711
F0.25
s(Vinsert
p1712
I42
VSimpleName: deref
p1713
Vinsert
p1714
I42
VSimpleName: UNKNOWN
p1715
tp1716
F0.25
s(Vinsert
p1717
I42
VSimpleName: nextID
p1718
Vinsert
p1719
I45
VStringLiteral: "eval"
p1720
tp1721
I1
s(Vinsert
p1722
I42
VSimpleName: getDeclaringClass
p1723
Vinsert
p1724
I43
VSimpleType: Class
p1725
tp1726
I1
s(Vinsert
p1727
I42
VSimpleName: count
p1728
Vinsert
p1729
I42
VSimpleName: toString
p1730
tp1731
F0.25
s(Vinsert
p1732
I42
VSimpleName: hashCombine
p1733
Vinsert
p1734
I40
VQualifiedName: other.dvals
p1735
tp1736
F0.25
s(g451
I42
g452
Vinsert
p1737
I42
VSimpleName: atts
p1738
tp1739
F0.25
s(Vinsert
p1740
I42
VSimpleName: first
p1741
Vinsert
p1742
I42
VSimpleName: _first
p1743
tp1744
I2
s(Vinsert
p1745
I42
VSimpleName: first
p1746
Vinsert
p1747
I42
VSimpleName: x
p1748
tp1749
F3.25
s(Vinsert
p1750
I42
VSimpleName: isEmpty
p1751
Vinsert
p1752
I43
VSimpleType: IFn
p1753
tp1754
F0.5
s(Vinsert
p1755
I42
VSimpleName: isPrimitive
p1756
Vinsert
p1757
I42
VSimpleName: rt
p1758
tp1759
I3
s(Vinsert
p1760
I42
VSimpleName: mark
p1761
Vinsert
p1762
I45
VStringLiteral: "Ljava/lang/Object;"
p1763
tp1764
F0.25
s(Vinsert
p1765
I42
VSimpleName: count
p1766
Vinsert
p1767
I42
VSimpleName: c
p1768
tp1769
F2.25
s(Vinsert
p1770
I42
VSimpleName: setRoot
p1771
Vinsert
p1772
I21
VExpressionStatement
p1773
tp1774
I1
s(g300
I42
g301
Vinsert
p1775
I8
VBlock
p1776
tp1777
I1
s(g1649
I42
g1650
Vinsert
p1778
I42
VSimpleName: altering
p1779
tp1780
I1
s(Vinsert
p1781
I42
VSimpleName: first
p1782
Vinsert
p1783
I27
VInfixExpression: +
p1784
tp1785
I1
s(g204
I42
g205
Vinsert
p1786
I14
VClassInstanceCreation
p1787
tp1788
I1
s(g809
I42
g810
Vinsert
p1789
I21
VExpressionStatement
p1790
tp1791
I2
s(Vinsert
p1792
I42
VSimpleName: longValue
p1793
Vinsert
p1794
I43
VSimpleType: Short
p1795
tp1796
I1
s(Vinsert
p1797
I42
VSimpleName: equals
p1798
Vinsert
p1799
I62
VInstanceofExpression
p1800
tp1801
I3
s(Vinsert
p1802
I42
VSimpleName: equals
p1803
Vinsert
p1804
I42
VSimpleName: Namespace
p1805
tp1806
F0.25
s(Vinsert
p1807
I42
VSimpleName: compareTo
p1808
Vinsert
p1809
I36
VParenthesizedExpression
p1810
tp1811
I2
s(Vinsert
p1812
I42
VSimpleName: visitOuterClass
p1813
Vinsert
p1814
I42
VSimpleName: owner
p1815
tp1816
F0.25
s(Vinsert
p1817
I42
VSimpleName: emitExpressionString
p1818
Vinsert
p1819
I42
VSimpleName: emitReturn
p1820
tp1821
F0.25
s(Vinsert
p1822
I42
VSimpleName: isBound
p1823
Vinsert
p1824
I45
VStringLiteral: "clojure.spec/macroexpand-check"
p1825
tp1826
I1
s(Vinsert
p1827
I42
VSimpleName: create
p1828
Vinsert
p1829
I45
VStringLiteral: "java.lang.StringBuilder"
p1830
tp1831
I1
s(Vinsert
p1832
I42
VSimpleName: substring
p1833
Vinsert
p1834
I22
VFieldAccess
p1835
tp1836
I2
s(g441
I42
g442
Vinsert
p1837
I38
VPrefixExpression: ++
p1838
tp1839
I3
s(Vinsert
p1840
I42
VSimpleName: get
p1841
Vinsert
p1842
I74
VParameterizedType: ThreadLocal<Object[]>
p1843
tp1844
F1.0
s(Vinsert
p1845
I42
VSimpleName: cons
p1846
Vinsert
p1847
I34
VNumberLiteral: 1
p1848
tp1849
I1
s(g1545
I42
g1546
Vinsert
p1850
I31
VMethodDeclaration
p1851
tp1852
F1.25
s(g1812
I42
g1813
Vinsert
p1853
I42
VSimpleName: desc
p1854
tp1855
F0.25
s(Vinsert
p1856
I42
VSimpleName: getCompiledClass
p1857
Vinsert
p1858
I44
VSingleVariableDeclaration
p1859
tp1860
F0.25
s(Vinsert
p1861
I42
VSimpleName: unscaledValue
p1862
Vinsert
p1863
I11
VCastExpression
p1864
tp1865
I1
s(Vinsert
p1866
I42
VSimpleName: floatToRawIntBits
p1867
Vinsert
p1868
I8
VBlock
p1869
tp1870
I1
s(g144
I42
g145
Vinsert
p1871
I42
VSimpleName: reader
p1872
tp1873
F0.25
s(Vinsert
p1874
I42
VSimpleName: writeLock
p1875
Vinsert
p1876
I42
VSimpleName: rw
p1877
tp1878
F1.25
s(Vinsert
p1879
I42
VSimpleName: first
p1880
Vinsert
p1881
I42
VSimpleName: IObj
p1882
tp1883
F0.25
s(g1456
I42
g1457
Vinsert
p1884
I27
VInfixExpression: +
p1885
tp1886
I1
s(Vinsert
p1887
I42
VSimpleName: var
p1888
Vinsert
p1889
I45
VStringLiteral: "*3"
p1890
tp1891
I1
s(Vinsert
p1892
I42
VSimpleName: visitMethodInsn
p1893
Vinsert
p1894
I7
VAssignment: +=
p1895
tp1896
I2
s(g1649
I42
g1650
Vinsert
p1897
I60
VVariableDeclarationStatement
p1898
tp1899
I1
s(Vinsert
p1900
I42
VSimpleName: intern
p1901
Vinsert
p1902
I42
VSimpleName: ConstantExpr
p1903
tp1904
I1
s(Vinsert
p1905
I42
VSimpleName: getField
p1906
Vinsert
p1907
I42
VSimpleName: className
p1908
tp1909
I1
s(Vinsert
p1910
I42
VSimpleName: writeLock
p1911
Vinsert
p1912
I39
VPrimitiveType: int
p1913
tp1914
F0.5
s(Vinsert
p1915
I42
VSimpleName: applyTo
p1916
Vinsert
p1917
I42
VSimpleName: fn
p1918
tp1919
F1.25
s(Vinsert
p1920
I42
VSimpleName: getColumnNumber
p1921
Vinsert
p1922
I42
VSimpleName: Reader
p1923
tp1924
F0.25
s(Vinsert
p1925
I42
VSimpleName: isEmpty
p1926
Vinsert
p1927
I42
VSimpleName: Collection
p1928
tp1929
F0.25
s(g323
I42
g324
Vinsert
p1930
I36
VParenthesizedExpression
p1931
tp1932
I1
s(g1344
I42
g1345
Vinsert
p1933
I83
VModifier: public
p1934
tp1935
F0.75
s(Vinsert
p1936
I42
VSimpleName: getRuntime
p1937
Vinsert
p1938
I42
VSimpleName: Runtime
p1939
tp1940
I1
s(Vinsert
p1941
I42
VSimpleName: arraycopy
p1942
Vinsert
p1943
I43
VSimpleType: BitmapIndexedNode
p1944
tp1945
I1
s(g950
I42
g951
Vinsert
p1946
I42
VSimpleName: OutputStreamWriter
p1947
tp1948
F0.25
s(Vinsert
p1949
I42
VSimpleName: get
p1950
Vinsert
p1951
I45
VStringLiteral: ".java\u005cn"
p1952
tp1953
I1
s(g1812
I42
g1813
Vinsert
p1954
I42
VSimpleName: String
p1955
tp1956
F0.5
s(Vinsert
p1957
I42
VSimpleName: visitAnnotation
p1958
Vinsert
p1959
I33
VNullLiteral
p1960
tp1961
I1
s(Vinsert
p1962
I42
VSimpleName: currentNS
p1963
Vinsert
p1964
I33
VNullLiteral
p1965
tp1966
I1
s(Vinsert
p1967
I42
VSimpleName: forName
p1968
Vinsert
p1969
I42
VSimpleName: c
p1970
tp1971
I2
s(Vinsert
p1972
I42
VSimpleName: canEmitHostExpr
p1973
Vinsert
p1974
I42
VSimpleName: isVariadic
p1975
tp1976
F1.25
s(Vinsert
p1977
I42
VSimpleName: deref
p1978
Vinsert
p1979
I42
VSimpleName: baseLoader
p1980
tp1981
F0.25
s(g1712
I42
g1713
Vinsert
p1982
I42
VSimpleName: intern
p1983
tp1984
F0.25
s(g1368
I42
g1369
Vinsert
p1985
I8
VBlock
p1986
tp1987
I5
s(g411
I42
g412
Vinsert
p1988
I42
VSimpleName: applyTo
p1989
tp1990
F0.25
s(Vinsert
p1991
I42
VSimpleName: dissoc
p1992
Vinsert
p1993
I42
VSimpleName: c
p1994
tp1995
F0.25
s(g252
I42
g253
Vinsert
p1996
I41
VReturnStatement
p1997
tp1998
I1
s(g363
I42
g364
Vinsert
p1999
I25
VIfStatement
p2000
tp2001
I1
s(Vinsert
p2002
I42
VSimpleName: rest
p2003
Vinsert
p2004
I25
VIfStatement
p2005
tp2006
I2
s(g343
I42
g344
Vinsert
p2007
I27
VInfixExpression: ==
p2008
tp2009
I1
s(Vinsert
p2010
I42
VSimpleName: map
p2011
Vinsert
p2012
I33
VNullLiteral
p2013
tp2014
F0.25
s(g786
I42
g787
Vinsert
p2015
I42
VSimpleName: Object
p2016
tp2017
I2
s(Vinsert
p2018
I42
VSimpleName: containsKey
p2019
Vinsert
p2020
I42
VSimpleName: addBytecode
p2021
tp2022
F0.25
s(g1634
I42
g1635
Vinsert
p2023
I8
VBlock
p2024
tp2025
I3
s(Vinsert
p2026
I42
VSimpleName: emit
p2027
Vinsert
p2028
I42
VSimpleName: labels
p2029
tp2030
I1
s(g1032
I42
g1033
Vinsert
p2031
I32
VMethodInvocation
p2032
tp2033
I2
s(g1213
I42
g1214
Vinsert
p2034
I42
VSimpleName: CLOJURE_SLASH
p2035
tp2036
F0.25
s(Vinsert
p2037
I42
VSimpleName: nanoTime
p2038
Vinsert
p2039
I34
VNumberLiteral: 0
p2040
tp2041
I2
s(Vinsert
p2042
I42
VSimpleName: equals
p2043
Vinsert
p2044
I42
VSimpleName: numerator
p2045
tp2046
I1
s(Vinsert
p2047
I42
VSimpleName: endsWith
p2048
Vinsert
p2049
I42
VSimpleName: lname
p2050
tp2051
I2
s(Vinsert
p2052
I42
VSimpleName: remove
p2053
Vinsert
p2054
I41
VReturnStatement
p2055
tp2056
F0.5
s(g1936
I42
g1937
Vinsert
p2057
I42
VSimpleName: workerReserve
p2058
tp2059
I1
s(Vinsert
p2060
I42
VSimpleName: floatValue
p2061
Vinsert
p2062
I45
VStringLiteral: "Value out of range for long: "
p2063
tp2064
F0.25
s(g144
I42
g145
Vinsert
p2065
I43
VSimpleType: Exception
p2066
tp2067
F0.25
s(Vinsert
p2068
I42
VSimpleName: clone
p2069
Vinsert
p2070
I83
VModifier: public
p2071
tp2072
F0.5
s(Vinsert
p2073
I42
VSimpleName: getMethod
p2074
Vinsert
p2075
I43
VSimpleType: Method
p2076
tp2077
I3
s(g36
I42
g37
Vinsert
p2078
I40
VQualifiedName: bi.binding.used
p2079
tp2080
I1
s(g1461
I42
g1462
Vinsert
p2081
I43
VSimpleType: Exception
p2082
tp2083
F1.5
s(g300
I42
g301
Vinsert
p2084
I27
VInfixExpression: ==
p2085
tp2086
I1
s(Vinsert
p2087
I42
VSimpleName: invokeVirtual
p2088
Vinsert
p2089
I42
VSimpleName: emitVar
p2090
tp2091
I1
s(g1414
I42
g1415
Vinsert
p2092
I33
VNullLiteral
p2093
tp2094
F7.25
s(Vinsert
p2095
I42
VSimpleName: invoke
p2096
Vinsert
p2097
I44
VSingleVariableDeclaration
p2098
tp2099
F5.25
s(Vinsert
p2100
I42
VSimpleName: read1
p2101
Vinsert
p2102
I7
VAssignment: =
p2103
tp2104
I1
s(g515
I42
g516
Vinsert
p2105
I58
VVariableDeclarationExpression
p2106
tp2107
I3
s(g1037
I42
g1038
Vinsert
p2108
I14
VClassInstanceCreation
p2109
tp2110
I1
s(Vinsert
p2111
I42
VSimpleName: setDynamic
p2112
Vinsert
p2113
I43
VSimpleType: java.util.Collection
p2114
tp2115
I1
s(g641
I42
g642
Vinsert
p2116
I42
VSimpleName: findOrCreate
p2117
tp2118
I1
s(g363
I42
g364
Vinsert
p2119
I2
VArrayAccess
p2120
tp2121
I1
s(Vinsert
p2122
I42
VSimpleName: lookupAlias
p2123
Vinsert
p2124
I44
VSingleVariableDeclaration
p2125
tp2126
F0.75
s(g537
I42
g538
Vinsert
p2127
I42
VSimpleName: TOP
p2128
tp2129
I1
s(Vinsert
p2130
I42
VSimpleName: hasheq
p2131
Vinsert
p2132
I34
VNumberLiteral: 31
p2133
tp2134
I1
s(Vinsert
p2135
I42
VSimpleName: length
p2136
Vinsert
p2137
I34
VNumberLiteral: 1
p2138
tp2139
I1
s(Vinsert
p2140
I42
VSimpleName: getCause
p2141
Vinsert
p2142
I43
VSimpleType: InvocationTargetException
p2143
tp2144
I1
s(Vinsert
p2145
I42
VSimpleName: getValue
p2146
Vinsert
p2147
I42
VSimpleName: w
p2148
tp2149
I1
s(g1238
I42
g1239
Vinsert
p2150
I43
VSimpleType: Object
p2151
tp2152
F0.25
s(g1019
I42
g1020
Vinsert
p2153
I43
VSimpleType: IPersistentSet
p2154
tp2155
I1
s(g154
I42
g155
Vinsert
p2156
I27
VInfixExpression: &&
p2157
tp2158
I1
s(Vinsert
p2159
I42
VSimpleName: loadFile
p2160
Vinsert
p2161
I42
VSimpleName: Compiler
p2162
tp2163
I1
s(Vinsert
p2164
I42
VSimpleName: withMeta
p2165
Vinsert
p2166
I42
VSimpleName: array
p2167
tp2168
F0.25
s(Vinsert
p2169
I42
VSimpleName: inSameSubroutine
p2170
Vinsert
p2171
I36
VParenthesizedExpression
p2172
tp2173
I1
s(g562
I42
g563
Vinsert
p2174
I41
VReturnStatement
p2175
tp2176
I4
s(g257
I42
g258
Vinsert
p2177
I42
VSimpleName: K
p2178
tp2179
I1
s(g257
I42
g258
Vinsert
p2180
I23
VFieldDeclaration
p2181
tp2182
I1
s(g386
I42
g387
Vinsert
p2183
I42
VSimpleName: MonitorExitExpr
p2184
tp2185
F0.25
s(Vinsert
p2186
I42
VSimpleName: valAt
p2187
Vinsert
p2188
I44
VSingleVariableDeclaration
p2189
tp2190
F0.5
s(g1192
I42
g1193
Vinsert
p2191
I42
VSimpleName: Short
p2192
tp2193
I1
s(g31
I42
g32
Vinsert
p2194
I42
VSimpleName: IPersistentMap
p2195
tp2196
I2
s(Vinsert
p2197
I42
VSimpleName: equals
p2198
Vinsert
p2199
I34
VNumberLiteral: 8
p2200
tp2201
I1
s(g2159
I42
g2160
Vinsert
p2202
I43
VSimpleType: Object
p2203
tp2204
F0.5
s(Vinsert
p2205
I42
VSimpleName: count
p2206
Vinsert
p2207
I43
VSimpleType: C
p2208
tp2209
F0.25
s(g2205
I42
g2206
Vinsert
p2210
I42
VSimpleName: Exception
p2211
tp2212
F0.25
s(g542
I42
g543
Vinsert
p2213
I42
VSimpleName: newLocals
p2214
tp2215
I1
s(Vinsert
p2216
I42
VSimpleName: invoke
p2217
Vinsert
p2218
I27
VInfixExpression: !=
p2219
tp2220
I6
s(Vinsert
p2221
I42
VSimpleName: next
p2222
Vinsert
p2223
I25
VIfStatement
p2224
tp2225
I2
s(Vinsert
p2226
I42
VSimpleName: val
p2227
Vinsert
p2228
I42
VSimpleName: rightBalance
p2229
tp2230
I1
s(Vinsert
p2231
I42
VSimpleName: size
p2232
Vinsert
p2233
I25
VIfStatement
p2234
tp2235
I2
s(g2122
I42
g2123
Vinsert
p2236
I42
VSimpleName: inns
p2237
tp2238
F1.25
s(Vinsert
p2239
I42
VSimpleName: create
p2240
Vinsert
p2241
I42
VSimpleName: namespaceFor
p2242
tp2243
I1
s(Vinsert
p2244
I42
VSimpleName: blacken
p2245
Vinsert
p2246
I42
VSimpleName: Exception
p2247
tp2248
I1
s(g2042
I42
g2043
Vinsert
p2249
I22
VFieldAccess
p2250
tp2251
I1
s(Vinsert
p2252
I42
VSimpleName: assoc
p2253
Vinsert
p2254
I38
VPrefixExpression: -
p2255
tp2256
I1
s(Vinsert
p2257
I42
VSimpleName: pushThreadBindings
p2258
Vinsert
p2259
I59
VVariableDeclarationFragment
p2260
tp2261
I1
s(Vinsert
p2262
I42
VSimpleName: invoke
p2263
Vinsert
p2264
I42
VSimpleName: deref
p2265
tp2266
I1
s(g2052
I42
g2053
Vinsert
p2267
I22
VFieldAccess
p2268
tp2269
I1
s(g343
I42
g344
Vinsert
p2270
I7
VAssignment: =
p2271
tp2272
I2
s(Vinsert
p2273
I42
VSimpleName: index
p2274
Vinsert
p2275
I33
VNullLiteral
p2276
tp2277
I1
s(Vinsert
p2278
I42
VSimpleName: getStatic
p2279
Vinsert
p2280
I42
VSimpleName: vs
p2281
tp2282
I2
s(g2018
I42
g2019
Vinsert
p2283
I39
VPrimitiveType: void
p2284
tp2285
F0.25
s(Vinsert
p2286
I42
VSimpleName: get
p2287
Vinsert
p2288
I42
VSimpleName: mmap
p2289
tp2290
I1
s(g730
I42
g731
Vinsert
p2291
I61
VWhileStatement
p2292
tp2293
I1
s(Vinsert
p2294
I42
VSimpleName: valueOf
p2295
Vinsert
p2296
I43
VSimpleType: Object
p2297
tp2298
F0.25
s(g1197
I42
g1198
Vinsert
p2299
I42
VSimpleName: type
p2300
tp2301
F0.5
s(g804
I42
g805
Vinsert
p2302
I43
VSimpleType: Set
p2303
tp2304
F0.25
s(Vinsert
p2305
I42
VSimpleName: withMeta
p2306
Vinsert
p2307
I42
VSimpleName: ret
p2308
tp2309
I1
s(Vinsert
p2310
I42
VSimpleName: opsWith
p2311
Vinsert
p2312
I31
VMethodDeclaration
p2313
tp2314
F0.25
s(Vinsert
p2315
I42
VSimpleName: get2
p2316
Vinsert
p2317
I42
VSimpleName: Transaction
p2318
tp2319
I1
s(g313
I42
g314
Vinsert
p2320
I43
VSimpleType: Object
p2321
tp2322
F1.0
s(g2122
I42
g2123
Vinsert
p2323
I42
VSimpleName: namespaceFor
p2324
tp2325
F0.5
s(g1373
I42
g1374
Vinsert
p2326
I62
VInstanceofExpression
p2327
tp2328
I1
s(g1316
I42
g1317
Vinsert
p2329
I43
VSimpleType: LineNumberingPushbackReader
p2330
tp2331
I2
s(Vinsert
p2332
I42
VSimpleName: contains
p2333
Vinsert
p2334
I42
VSimpleName: m
p2335
tp2336
I2
s(g1437
I42
g1438
Vinsert
p2337
I42
VSimpleName: Mutable
p2338
tp2339
F0.25
s(g1063
I42
g1064
Vinsert
p2340
I45
VStringLiteral: "Vector arg to map conj must be a pair"
p2341
tp2342
I1
s(Vinsert
p2343
I42
VSimpleName: create
p2344
Vinsert
p2345
I42
VSimpleName: doInvoke
p2346
tp2347
I2
s(Vinsert
p2348
I42
VSimpleName: valueOf
p2349
Vinsert
p2350
I27
VInfixExpression: >
p2351
tp2352
I1
s(Vinsert
p2353
I42
VSimpleName: get
p2354
Vinsert
p2355
I43
VSimpleType: AMap
p2356
tp2357
I1
s(g36
I42
g37
Vinsert
p2358
I40
VQualifiedName: b.used
p2359
tp2360
F0.25
s(Vinsert
p2361
I42
VSimpleName: count
p2362
Vinsert
p2363
I40
VQualifiedName: Tuple.MAX_SIZE
p2364
tp2365
I1
s(Vinsert
p2366
I42
VSimpleName: valAt
p2367
Vinsert
p2368
I42
VSimpleName: IPersistentMap
p2369
tp2370
I2
s(Vinsert
p2371
I42
VSimpleName: getName
p2372
Vinsert
p2373
I43
VSimpleType: Serialized
p2374
tp2375
I1
s(Vinsert
p2376
I42
VSimpleName: loadThis
p2377
Vinsert
p2378
I42
VSimpleName: GeneratorAdapter
p2379
tp2380
F0.25
s(g676
I42
g677
Vinsert
p2381
I32
VMethodInvocation
p2382
tp2383
I2
s(g1588
I42
g1589
Vinsert
p2384
I59
VVariableDeclarationFragment
p2385
tp2386
I3
s(Vinsert
p2387
I42
VSimpleName: findInternedVar
p2388
Vinsert
p2389
I60
VVariableDeclarationStatement
p2390
tp2391
I2
s(Vinsert
p2392
I42
VSimpleName: push
p2393
Vinsert
p2394
I42
VSimpleName: newInstance
p2395
tp2396
I1
s(Vinsert
p2397
I42
VSimpleName: visitInvokeDynamicInsn
p2398
Vinsert
p2399
I43
VSimpleType: String
p2400
tp2401
F0.25
s(g26
I42
g27
Vinsert
p2402
I43
VSimpleType: RestFn
p2403
tp2404
I1
s(Vinsert
p2405
I42
VSimpleName: get
p2406
Vinsert
p2407
I45
VStringLiteral: "elide-meta"
p2408
tp2409
F0.25
s(g552
I42
g553
Vinsert
p2410
I42
VSimpleName: fieldSyms
p2411
tp2412
I4
s(g1321
I42
g1322
Vinsert
p2413
I42
VSimpleName: ilookupThunk
p2414
tp2415
F0.25
s(g2397
I42
g2398
Vinsert
p2416
I42
VSimpleName: Handle
p2417
tp2418
F0.5
s(g56
I42
g57
Vinsert
p2419
I42
VSimpleName: AtomicInteger
p2420
tp2421
F0.25
s(Vinsert
p2422
I42
VSimpleName: first
p2423
Vinsert
p2424
I43
VSimpleType: MapEntry
p2425
tp2426
I3
s(Vinsert
p2427
I42
VSimpleName: get
p2428
Vinsert
p2429
I53
VThrowStatement
p2430
tp2431
I1
s(g1510
I42
g1511
Vinsert
p2432
I42
VSimpleName: key
p2433
tp2434
I2
s(Vinsert
p2435
I42
VSimpleName: isPublic
p2436
Vinsert
p2437
I42
VSimpleName: v
p2438
tp2439
I2
s(g1112
I42
g1113
Vinsert
p2440
I22
VFieldAccess
p2441
tp2442
I1
s(Vinsert
p2443
I42
VSimpleName: set
p2444
Vinsert
p2445
I66
VTextElement:   a PersistentArray
p2446
tp2447
F0.25
s(g809
I42
g810
Vinsert
p2448
I42
VSimpleName: InstanceMemberSymbol
p2449
tp2450
F2.25
s(Vinsert
p2451
I42
VSimpleName: add
p2452
Vinsert
p2453
I42
VSimpleName: count
p2454
tp2455
I1
s(Vinsert
p2456
I42
VSimpleName: enqueue
p2457
Vinsert
p2458
I41
VReturnStatement
p2459
tp2460
F0.5
s(Vinsert
p2461
I42
VSimpleName: toString
p2462
Vinsert
p2463
I45
VStringLiteral: "clojure.lang.ExceptionInfo: "
p2464
tp2465
I1
s(g2257
I42
g2258
Vinsert
p2466
I40
VQualifiedName: PATHTYPE.PATH
p2467
tp2468
I1
s(Vinsert
p2469
I42
VSimpleName: getStatic
p2470
Vinsert
p2471
I62
VInstanceofExpression
p2472
tp2473
I1
s(g510
I42
g511
Vinsert
p2474
I42
VSimpleName: first
p2475
tp2476
I1
s(g1147
I42
g1148
Vinsert
p2477
I32
VMethodInvocation
p2478
tp2479
F16.25
s(Vinsert
p2480
I42
VSimpleName: doubleValue
p2481
Vinsert
p2482
I32
VMethodInvocation
p2483
tp2484
F8.75
s(g1409
I42
g1410
Vinsert
p2485
I34
VNumberLiteral: 2
p2486
tp2487
I1
s(Vinsert
p2488
I42
VSimpleName: rest
p2489
Vinsert
p2490
I37
VPostfixExpression: ++
p2491
tp2492
I2
s(Vinsert
p2493
I42
VSimpleName: seq
p2494
Vinsert
p2495
I42
VSimpleName: IPersistentVector
p2496
tp2497
I1
s(g1177
I42
g1178
Vinsert
p2498
I42
VSimpleName: count
p2499
tp2500
I1
s(Vinsert
p2501
I42
VSimpleName: getMethod
p2502
Vinsert
p2503
I45
VStringLiteral: "clojure.lang.Num from(int)"
p2504
tp2505
I1
s(g194
I42
g195
Vinsert
p2506
I42
VSimpleName: valOrNode
p2507
tp2508
I1
s(Vinsert
p2509
I42
VSimpleName: get
p2510
Vinsert
p2511
I42
VSimpleName: sum
p2512
tp2513
I1
s(g1654
I42
g1655
Vinsert
p2514
I41
VReturnStatement
p2515
tp2516
I1
s(g1535
I42
g1536
Vinsert
p2517
I8
VBlock
p2518
tp2519
I1
s(Vinsert
p2520
I42
VSimpleName: key
p2521
Vinsert
p2522
I59
VVariableDeclarationFragment
p2523
tp2524
I2
s(g1712
I42
g1713
Vinsert
p2525
I27
VInfixExpression: ==
p2526
tp2527
I1
s(Vinsert
p2528
I42
VSimpleName: intValue
p2529
Vinsert
p2530
I5
VArrayType: int[]
p2531
tp2532
I1
s(g451
I42
g452
Vinsert
p2533
I42
VSimpleName: Attributes
p2534
tp2535
F0.25
s(g1977
I42
g1978
Vinsert
p2536
I42
VSimpleName: scriptfile
p2537
tp2538
F0.25
s(g1515
I42
g1516
Vinsert
p2539
I42
VSimpleName: MethodExpr
p2540
tp2541
I1
s(Vinsert
p2542
I42
VSimpleName: list
p2543
Vinsert
p2544
I42
VSimpleName: docstring
p2545
tp2546
I1
s(g1941
I42
g1942
Vinsert
p2547
I42
VSimpleName: val
p2548
tp2549
I1
s(g924
I42
g925
Vinsert
p2550
I41
VReturnStatement
p2551
tp2552
F5.25
s(g1910
I42
g1911
Vinsert
p2553
I42
VSimpleName: maxHistory
p2554
tp2555
F0.25
s(g91
I42
g92
Vinsert
p2556
I42
VSimpleName: RT
p2557
tp2558
F4.25
s(g247
I42
g248
Vinsert
p2559
I27
VInfixExpression: +
p2560
tp2561
I1
s(Vinsert
p2562
I42
VSimpleName: get
p2563
Vinsert
p2564
I42
VSimpleName: arg5
p2565
tp2566
F0.25
s(g2397
I42
g2398
Vinsert
p2567
I42
VSimpleName: bsmArgs
p2568
tp2569
F0.5
s(g857
I42
g858
Vinsert
p2570
I42
VSimpleName: equals
p2571
tp2572
I4
s(Vinsert
p2573
I42
VSimpleName: seq
p2574
Vinsert
p2575
I42
VSimpleName: CONCAT
p2576
tp2577
I1
s(Vinsert
p2578
I42
VSimpleName: visitFieldInsn
p2579
Vinsert
p2580
I21
VExpressionStatement
p2581
tp2582
I2
s(g1055
I42
g1056
Vinsert
p2583
I42
VSimpleName: lookupVar
p2584
tp2585
I1
s(Vinsert
p2586
I42
VSimpleName: toString
p2587
Vinsert
p2588
I42
VSimpleName: i
p2589
tp2590
I1
s(Vinsert
p2591
I42
VSimpleName: create
p2592
Vinsert
p2593
I42
VSimpleName: AbstractMethodError
p2594
tp2595
I1
s(Vinsert
p2596
I42
VSimpleName: arraycopy
p2597
Vinsert
p2598
I42
VSimpleName: count
p2599
tp2600
I1
s(g2366
I42
g2367
Vinsert
p2601
I42
VSimpleName: map
p2602
tp2603
I2
s(Vinsert
p2604
I42
VSimpleName: intern
p2605
Vinsert
p2606
I42
VSimpleName: find
p2607
tp2608
F1.25
s(g1137
I42
g1138
Vinsert
p2609
I42
VSimpleName: o
p2610
tp2611
I3
s(g1238
I42
g1239
Vinsert
p2612
I44
VSingleVariableDeclaration
p2613
tp2614
F0.5
s(Vinsert
p2615
I42
VSimpleName: divideToIntegralValue
p2616
Vinsert
p2617
I42
VSimpleName: mc
p2618
tp2619
I2
s(g396
I42
g397
Vinsert
p2620
I60
VVariableDeclarationStatement
p2621
tp2622
I1
s(Vinsert
p2623
I42
VSimpleName: kvreduce
p2624
Vinsert
p2625
I42
VSimpleName: kvreduce
p2626
tp2627
F0.25
s(g305
I42
g306
Vinsert
p2628
I27
VInfixExpression: &&
p2629
tp2630
I1
s(Vinsert
p2631
I42
VSimpleName: longValue
p2632
Vinsert
p2633
I39
VPrimitiveType: long
p2634
tp2635
F4.25
s(Vinsert
p2636
I42
VSimpleName: getMethod
p2637
Vinsert
p2638
I42
VSimpleName: Byte
p2639
tp2640
I1
s(Vinsert
p2641
I42
VSimpleName: booleanValue
p2642
Vinsert
p2643
I36
VParenthesizedExpression
p2644
tp2645
I1
s(g2361
I42
g2362
Vinsert
p2646
I34
VNumberLiteral: 0
p2647
tp2648
I10
s(Vinsert
p2649
I42
VSimpleName: isBound
p2650
Vinsert
p2651
I8
VBlock
p2652
tp2653
F2.25
s(g628
I42
g629
Vinsert
p2654
I25
VIfStatement
p2655
tp2656
F0.25
s(Vinsert
p2657
I42
VSimpleName: put
p2658
Vinsert
p2659
I42
VSimpleName: INITIAL_SIZE
p2660
tp2661
I2
s(g189
I42
g190
Vinsert
p2662
I27
VInfixExpression: ||
p2663
tp2664
I1
s(g61
I42
g62
Vinsert
p2665
I27
VInfixExpression: !=
p2666
tp2667
I1
s(g973
I42
g974
Vinsert
p2668
I60
VVariableDeclarationStatement
p2669
tp2670
I1
s(g888
I42
g889
Vinsert
p2671
I42
VSimpleName: e
p2672
tp2673
F7.75
s(g1081
I42
g1082
Vinsert
p2674
I42
VSimpleName: get
p2675
tp2676
I1
s(Vinsert
p2677
I42
VSimpleName: throwIntOverflow
p2678
Vinsert
p2679
I39
VPrimitiveType: long
p2680
tp2681
I1
s(Vinsert
p2682
I42
VSimpleName: assoc
p2683
Vinsert
p2684
I43
VSimpleType: Object
p2685
tp2686
F0.75
s(Vinsert
p2687
I42
VSimpleName: first
p2688
Vinsert
p2689
I40
VQualifiedName: PersistentHashMap.EMPTY
p2690
tp2691
I1
s(Vinsert
p2692
I42
VSimpleName: entrySet
p2693
Vinsert
p2694
I20
VEmptyStatement
p2695
tp2696
I1
s(Vinsert
p2697
I42
VSimpleName: visitSource
p2698
Vinsert
p2699
I25
VIfStatement
p2700
tp2701
I1
s(g114
I42
g115
Vinsert
p2702
I42
VSimpleName: arg9
p2703
tp2704
F0.25
s(g431
I42
g432
Vinsert
p2705
I45
VStringLiteral: "Must assign primitive to primitive volatile: "
p2706
tp2707
I1
s(g96
I42
g97
Vinsert
p2708
I42
VSimpleName: eql
p2709
tp2710
I1
s(Vinsert
p2711
I42
VSimpleName: findOrCreate
p2712
Vinsert
p2713
I42
VSimpleName: sym
p2714
tp2715
F0.25
s(g2387
I42
g2388
Vinsert
p2716
I40
VQualifiedName: sym.ns
p2717
tp2718
I2
s(Vinsert
p2719
I42
VSimpleName: visitLabel
p2720
Vinsert
p2721
I21
VExpressionStatement
p2722
tp2723
I2
s(Vinsert
p2724
I42
VSimpleName: equals
p2725
Vinsert
p2726
I42
VSimpleName: i
p2727
tp2728
I3
s(Vinsert
p2729
I42
VSimpleName: iterator
p2730
Vinsert
p2731
I11
VCastExpression
p2732
tp2733
I1
s(g1099
I42
g1100
Vinsert
p2734
I42
VSimpleName: Object
p2735
tp2736
F0.25
s(g247
I42
g248
Vinsert
p2737
I32
VMethodInvocation
p2738
tp2739
I3
s(g799
I42
g800
Vinsert
p2740
I32
VMethodInvocation
p2741
tp2742
I4
s(Vinsert
p2743
I42
VSimpleName: arraycopy
p2744
Vinsert
p2745
I25
VIfStatement
p2746
tp2747
F1.25
s(Vinsert
p2748
I42
VSimpleName: get
p2749
Vinsert
p2750
I74
VParameterizedType: Collection<Object>
p2751
tp2752
I2
s(g842
I42
g843
Vinsert
p2753
I33
VNullLiteral
p2754
tp2755
I14
s(Vinsert
p2756
I42
VSimpleName: get
p2757
Vinsert
p2758
I42
VSimpleName: releaseThreadBindings
p2759
tp2760
F0.25
s(g194
I42
g195
Vinsert
p2761
I8
VBlock
p2762
tp2763
I2
s(g26
I42
g27
Vinsert
p2764
I57
VTypeLiteral
p2765
tp2766
I2
s(g1936
I42
g1937
Vinsert
p2767
I27
VInfixExpression: *
p2768
tp2769
I1
s(g2615
I42
g2616
Vinsert
p2770
I11
VCastExpression
p2771
tp2772
I1
s(g456
I42
g457
Vinsert
p2773
I43
VSimpleType: String
p2774
tp2775
F0.25
s(Vinsert
p2776
I42
VSimpleName: bitLength
p2777
Vinsert
p2778
I8
VBlock
p2779
tp2780
I2
s(g2037
I42
g2038
Vinsert
p2781
I42
VSimpleName: i
p2782
tp2783
I6
s(g456
I42
g457
Vinsert
p2784
I44
VSingleVariableDeclaration
p2785
tp2786
F0.25
s(g1540
I42
g1541
Vinsert
p2787
I39
VPrimitiveType: double
p2788
tp2789
F0.25
s(Vinsert
p2790
I42
VSimpleName: first
p2791
Vinsert
p2792
I42
VSimpleName: IMapEntry
p2793
tp2794
I3
s(g1055
I42
g1056
Vinsert
p2795
I11
VCastExpression
p2796
tp2797
I1
s(Vinsert
p2798
I42
VSimpleName: next
p2799
Vinsert
p2800
I38
VPrefixExpression: ++
p2801
tp2802
I2
s(Vinsert
p2803
I42
VSimpleName: resolveSymbol
p2804
Vinsert
p2805
I32
VMethodInvocation
p2806
tp2807
I3
s(g1127
I42
g1128
Vinsert
p2808
I14
VClassInstanceCreation
p2809
tp2810
I1
s(g1117
I42
g1118
Vinsert
p2811
I42
VSimpleName: ct
p2812
tp2813
F1.25
s(Vinsert
p2814
I42
VSimpleName: maybeClass
p2815
Vinsert
p2816
I42
VSimpleName: target
p2817
tp2818
I1
s(g2743
I42
g2744
Vinsert
p2819
I33
VNullLiteral
p2820
tp2821
F0.25
s(Vinsert
p2822
I42
VSimpleName: getName
p2823
Vinsert
p2824
I42
VSimpleName: rettag
p2825
tp2826
I2
s(g2205
I42
g2206
Vinsert
p2827
I42
VSimpleName: context
p2828
tp2829
F0.25
s(Vinsert
p2830
I42
VSimpleName: newInstance
p2831
Vinsert
p2832
I11
VCastExpression
p2833
tp2834
I1
s(Vinsert
p2835
I42
VSimpleName: readLock
p2836
Vinsert
p2837
I40
VQualifiedName: b.val
p2838
tp2839
I1
s(g1770
I42
g1771
Vinsert
p2840
I8
VBlock
p2841
tp2842
I2
s(g760
I42
g761
Vinsert
p2843
I42
VSimpleName: r
p2844
tp2845
F3.25
s(g154
I42
g155
Vinsert
p2846
I42
VSimpleName: readably
p2847
tp2848
I1
s(g237
I42
g238
Vinsert
p2849
I59
VVariableDeclarationFragment
p2850
tp2851
I1
s(g623
I42
g624
Vinsert
p2852
I40
VQualifiedName: sym.name
p2853
tp2854
I4
s(g1957
I42
g1958
Vinsert
p2855
I22
VFieldAccess
p2856
tp2857
F0.25
s(g91
I42
g92
Vinsert
p2858
I21
VExpressionStatement
p2859
tp2860
F1.25
s(g252
I42
g253
Vinsert
p2861
I42
VSimpleName: get
p2862
tp2863
F0.25
s(g929
I42
g930
Vinsert
p2864
I41
VReturnStatement
p2865
tp2866
F17.5
s(Vinsert
p2867
I42
VSimpleName: equal
p2868
Vinsert
p2869
I42
VSimpleName: key
p2870
tp2871
F1.25
s(Vinsert
p2872
I42
VSimpleName: toString
p2873
Vinsert
p2874
I59
VVariableDeclarationFragment
p2875
tp2876
I1
s(g71
I42
g72
Vinsert
p2877
I43
VSimpleType: String
p2878
tp2879
I1
s(g209
I42
g210
Vinsert
p2880
I25
VIfStatement
p2881
tp2882
I4
s(Vinsert
p2883
I42
VSimpleName: clone
p2884
Vinsert
p2885
I42
VSimpleName: Exception
p2886
tp2887
F0.25
s(g2164
I42
g2165
Vinsert
p2888
I42
VSimpleName: init
p2889
tp2890
F0.75
s(Vinsert
p2891
I42
VSimpleName: intValue
p2892
Vinsert
p2893
I39
VPrimitiveType: int
p2894
tp2895
I4
s(Vinsert
p2896
I42
VSimpleName: write
p2897
Vinsert
p2898
I13
VCharacterLiteral: '\u005cb'
p2899
tp2900
I2
s(g101
I42
g102
Vinsert
p2901
I42
VSimpleName: readably
p2902
tp2903
I1
s(Vinsert
p2904
I42
VSimpleName: equals
p2905
Vinsert
p2906
I42
VSimpleName: FORM_KW
p2907
tp2908
I2
s(Vinsert
p2909
I42
VSimpleName: cons
p2910
Vinsert
p2911
I42
VSimpleName: RT
p2912
tp2913
I3
s(Vinsert
p2914
I42
VSimpleName: fromBigInteger
p2915
Vinsert
p2916
I42
VSimpleName: lpart
p2917
tp2918
I1
s(g1644
I42
g1645
Vinsert
p2919
I42
VSimpleName: get
p2920
tp2921
I3
s(Vinsert
p2922
I42
VSimpleName: deref
p2923
Vinsert
p2924
I42
VSimpleName: line
p2925
tp2926
F2.25
s(g1344
I42
g1345
Vinsert
p2927
I42
VSimpleName: offset
p2928
tp2929
F0.25
s(Vinsert
p2930
I42
VSimpleName: nextElement
p2931
Vinsert
p2932
I27
VInfixExpression: ==
p2933
tp2934
I2
s(Vinsert
p2935
I42
VSimpleName: clone
p2936
Vinsert
p2937
I32
VMethodInvocation
p2938
tp2939
I4
s(Vinsert
p2940
I42
VSimpleName: getSystemResource
p2941
Vinsert
p2942
I42
VSimpleName: loader
p2943
tp2944
F1.25
s(g537
I42
g538
Vinsert
p2945
I27
VInfixExpression: |
p2946
tp2947
I1
s(g588
I42
g589
Vinsert
p2948
I40
VQualifiedName: RT.T
p2949
tp2950
I1
s(Vinsert
p2951
I42
VSimpleName: format
p2952
Vinsert
p2953
I42
VSimpleName: CompilerException
p2954
tp2955
I2
s(g1461
I42
g1462
Vinsert
p2956
I42
VSimpleName: IPersistentCollection
p2957
tp2958
I2
s(Vinsert
p2959
I42
VSimpleName: cons
p2960
Vinsert
p2961
I43
VSimpleType: PersistentTreeSet
p2962
tp2963
I1
s(Vinsert
p2964
I42
VSimpleName: incrementAndGet
p2965
Vinsert
p2966
I42
VSimpleName: Info
p2967
tp2968
F0.25
s(Vinsert
p2969
I42
VSimpleName: create
p2970
Vinsert
p2971
I42
VSimpleName: rev
p2972
tp2973
F0.25
s(g2435
I42
g2436
Vinsert
p2974
I27
VInfixExpression: !=
p2975
tp2976
I2
s(g2262
I42
g2263
Vinsert
p2977
I60
VVariableDeclarationStatement
p2978
tp2979
I12
s(g2719
I42
g2720
Vinsert
p2980
I32
VMethodInvocation
p2981
tp2982
I1
s(Vinsert
p2983
I42
VSimpleName: contains
p2984
Vinsert
p2985
I42
VSimpleName: access
p2986
tp2987
I1
s(g31
I42
g32
Vinsert
p2988
I59
VVariableDeclarationFragment
p2989
tp2990
I2
s(Vinsert
p2991
I42
VSimpleName: getMethod
p2992
Vinsert
p2993
I45
VStringLiteral: "double doubleCast(Object)"
p2994
tp2995
I1
s(g6
I42
g7
Vinsert
p2996
I32
VMethodInvocation
p2997
tp2998
I80
s(g237
I42
g238
Vinsert
p2999
I60
VVariableDeclarationStatement
p3000
tp3001
I1
s(g290
I42
g291
Vinsert
p3002
I42
VSimpleName: nodes
p3003
tp3004
I1
s(g36
I42
g37
Vinsert
p3005
I25
VIfStatement
p3006
tp3007
F2.25
s(g2776
I42
g2777
Vinsert
p3008
I42
VSimpleName: BigInteger
p3009
tp3010
F3.25
s(g908
I42
g909
Vinsert
p3011
I42
VSimpleName: finallyLabel
p3012
tp3013
I2
s(Vinsert
p3014
I42
VSimpleName: getJavaClass
p3015
Vinsert
p3016
I31
VMethodDeclaration
p3017
tp3018
F0.25
s(g1807
I42
g1808
Vinsert
p3019
I60
VVariableDeclarationStatement
p3020
tp3021
I2
s(Vinsert
p3022
I42
VSimpleName: getParameterTypes
p3023
Vinsert
p3024
I42
VSimpleName: getDeclaringClass
p3025
tp3026
I1
s(g247
I42
g248
Vinsert
p3027
I21
VExpressionStatement
p3028
tp3029
I1
s(g2047
I42
g2048
Vinsert
p3030
I42
VSimpleName: maybePrimitiveType
p3031
tp3032
F0.25
s(Vinsert
p3033
I42
VSimpleName: substring
p3034
Vinsert
p3035
I42
VSimpleName: file
p3036
tp3037
I1
s(Vinsert
p3038
I42
VSimpleName: create
p3039
Vinsert
p3040
I40
VQualifiedName: APersistentMap.ValSeq
p3041
tp3042
I1
s(g1861
I42
g1862
Vinsert
p3043
I42
VSimpleName: bv
p3044
tp3045
I1
s(g1243
I42
g1244
Vinsert
p3046
I7
VAssignment: =
p3047
tp3048
F0.25
s(g2830
I42
g2831
Vinsert
p3049
I21
VExpressionStatement
p3050
tp3051
I1
s(g1760
I42
g1761
Vinsert
p3052
I60
VVariableDeclarationStatement
p3053
tp3054
I1
s(g1634
I42
g1635
Vinsert
p3055
I32
VMethodInvocation
p3056
tp3057
I13
s(g1414
I42
g1415
Vinsert
p3058
I14
VClassInstanceCreation
p3059
tp3060
I2
s(g1702
I42
g1703
Vinsert
p3061
I42
VSimpleName: tagClass
p3062
tp3063
I1
s(g252
I42
g253
Vinsert
p3064
I44
VSingleVariableDeclaration
p3065
tp3066
F0.25
s(g968
I42
g969
Vinsert
p3067
I45
VStringLiteral: "clojure.core"
p3068
tp3069
I2
s(g76
I42
g77
Vinsert
p3070
I42
VSimpleName: index
p3071
tp3072
I1
s(g318
I42
g319
Vinsert
p3073
I40
VQualifiedName: java.security.PrivilegedAction
p3074
tp3075
F0.25
s(Vinsert
p3076
I42
VSimpleName: completedThroughPoint
p3077
Vinsert
p3078
I42
VSimpleName: tv
p3079
tp3080
F0.25
s(g2682
I42
g2683
Vinsert
p3081
I42
VSimpleName: k
p3082
tp3083
F0.25
s(g461
I42
g462
Vinsert
p3084
I40
VQualifiedName: Opcodes.ACC_TRANSIENT
p3085
tp3086
I1
s(Vinsert
p3087
I42
VSimpleName: getClass
p3088
Vinsert
p3089
I45
VStringLiteral: " for "
p3090
tp3091
F3.0
s(Vinsert
p3092
I42
VSimpleName: min
p3093
Vinsert
p3094
I42
VSimpleName: initialCapacity
p3095
tp3096
F1.25
s(g567
I42
g568
Vinsert
p3097
I42
VSimpleName: Transaction
p3098
tp3099
I1
s(Vinsert
p3100
I42
VSimpleName: meta
p3101
Vinsert
p3102
I42
VSimpleName: meta
p3103
tp3104
F2.25
s(Vinsert
p3105
I42
VSimpleName: map
p3106
Vinsert
p3107
I42
VSimpleName: I2L
p3108
tp3109
I2
s(Vinsert
p3110
I42
VSimpleName: isPrimitive
p3111
Vinsert
p3112
I39
VPrimitiveType: boolean
p3113
tp3114
F0.25
s(g2397
I42
g2398
Vinsert
p3115
I42
VSimpleName: desc
p3116
tp3117
F0.25
s(g1157
I42
g1158
Vinsert
p3118
I41
VReturnStatement
p3119
tp3120
I13
s(Vinsert
p3121
I42
VSimpleName: contains
p3122
Vinsert
p3123
I42
VSimpleName: notFound
p3124
tp3125
F0.25
s(g1654
I42
g1655
Vinsert
p3126
I42
VSimpleName: ry
p3127
tp3128
I1
s(g852
I42
g853
Vinsert
p3129
I43
VSimpleType: Symbol
p3130
tp3131
I1
s(g1354
I42
g1355
Vinsert
p3132
I42
VSimpleName: set
p3133
tp3134
I1
s(Vinsert
p3135
I42
VSimpleName: getAnnotation
p3136
Vinsert
p3137
I42
VSimpleName: WarnBoxedMath
p3138
tp3139
I1
s(g661
I42
g662
Vinsert
p3140
I60
VVariableDeclarationStatement
p3141
tp3142
I3
s(g1515
I42
g1516
Vinsert
p3143
I42
VSimpleName: gen
p3144
tp3145
F0.25
s(Vinsert
p3146
I42
VSimpleName: equal
p3147
Vinsert
p3148
I8
VBlock
p3149
tp3150
I1
s(Vinsert
p3151
I42
VSimpleName: equal
p3152
Vinsert
p3153
I42
VSimpleName: forms
p3154
tp3155
I1
s(Vinsert
p3156
I42
VSimpleName: doSet
p3157
Vinsert
p3158
I43
VSimpleType: Object
p3159
tp3160
F0.25
s(Vinsert
p3161
I42
VSimpleName: hasheq
p3162
Vinsert
p3163
I42
VSimpleName: x
p3164
tp3165
I1
s(g1649
I42
g1650
Vinsert
p3166
I42
VSimpleName: trans
p3167
tp3168
I1
s(g755
I42
g756
Vinsert
p3169
I42
VSimpleName: visitLineNumber
p3170
tp3171
I1
s(g1807
I42
g1808
Vinsert
p3172
I37
VPostfixExpression: ++
p3173
tp3174
I1
s(Vinsert
p3175
I42
VSimpleName: resolve
p3176
Vinsert
p3177
I14
VClassInstanceCreation
p3178
tp3179
I1
s(Vinsert
p3180
I42
VSimpleName: readLock
p3181
Vinsert
p3182
I40
VQualifiedName: ver.val
p3183
tp3184
I1
s(g1419
I42
g1420
Vinsert
p3185
I27
VInfixExpression: &&
p3186
tp3187
I1
s(Vinsert
p3188
I42
VSimpleName: get
p3189
Vinsert
p3190
I34
VNumberLiteral: 0
p3191
tp3192
I2
s(Vinsert
p3193
I42
VSimpleName: pop
p3194
Vinsert
p3195
I8
VBlock
p3196
tp3197
F0.25
s(g91
I42
g92
Vinsert
p3198
I42
VSimpleName: name
p3199
tp3200
F3.25
s(Vinsert
p3201
I42
VSimpleName: storeArg
p3202
Vinsert
p3203
I32
VMethodInvocation
p3204
tp3205
I1
s(g2711
I42
g2712
Vinsert
p3206
I42
VSimpleName: String
p3207
tp3208
F0.5
s(g2822
I42
g2823
Vinsert
p3209
I11
VCastExpression
p3210
tp3211
I2
s(Vinsert
p3212
I42
VSimpleName: invoke
p3213
Vinsert
p3214
I22
VFieldAccess
p3215
tp3216
F2.5
s(g945
I42
g946
Vinsert
p3217
I57
VTypeLiteral
p3218
tp3219
I1
s(g1807
I42
g1808
Vinsert
p3220
I42
VSimpleName: i
p3221
tp3222
I2
s(g2068
I42
g2069
Vinsert
p3223
I44
VSingleVariableDeclaration
p3224
tp3225
F0.5
s(g262
I42
g263
Vinsert
p3226
I42
VSimpleName: Numbers
p3227
tp3228
I1
s(Vinsert
p3229
I42
VSimpleName: assocN
p3230
Vinsert
p3231
I43
VSimpleType: Object
p3232
tp3233
F0.25
s(g1368
I42
g1369
Vinsert
p3234
I42
VSimpleName: Exception
p3235
tp3236
F0.75
s(Vinsert
p3237
I42
VSimpleName: getType
p3238
Vinsert
p3239
I40
VQualifiedName: exclasses.length
p3240
tp3241
I1
s(g61
I42
g62
Vinsert
p3242
I27
VInfixExpression: <
p3243
tp3244
I1
s(g827
I42
g828
Vinsert
p3245
I42
VSimpleName: alter
p3246
tp3247
I1
s(g189
I42
g190
Vinsert
p3248
I39
VPrimitiveType: long
p3249
tp3250
I1
s(Vinsert
p3251
I42
VSimpleName: without
p3252
Vinsert
p3253
I42
VSimpleName: get
p3254
tp3255
I1
s(Vinsert
p3256
I42
VSimpleName: intern
p3257
Vinsert
p3258
I23
VFieldDeclaration
p3259
tp3260
F5.25
s(Vinsert
p3261
I42
VSimpleName: equal
p3262
Vinsert
p3263
I38
VPrefixExpression: !
p3264
tp3265
I2
s(Vinsert
p3266
I42
VSimpleName: findInternedVar
p3267
Vinsert
p3268
I27
VInfixExpression: +
p3269
tp3270
I2
s(Vinsert
p3271
I42
VSimpleName: intern
p3272
Vinsert
p3273
I45
VStringLiteral: "Method names must begin with '.': "
p3274
tp3275
I1
s(g1588
I42
g1589
Vinsert
p3276
I40
VQualifiedName: java.lang.reflect.Method
p3277
tp3278
I1
s(g613
I42
g614
Vinsert
p3279
I38
VPrefixExpression: ++
p3280
tp3281
F1.25
s(Vinsert
p3282
I42
VSimpleName: invoke
p3283
Vinsert
p3284
I43
VSimpleType: Var
p3285
tp3286
I1
s(g3261
I42
g3262
Vinsert
p3287
I25
VIfStatement
p3288
tp3289
I4
s(Vinsert
p3290
I42
VSimpleName: invokeVirtual
p3291
Vinsert
p3292
I21
VExpressionStatement
p3293
tp3294
F3.25
s(Vinsert
p3295
I42
VSimpleName: getSort
p3296
Vinsert
p3297
I25
VIfStatement
p3298
tp3299
I1
s(Vinsert
p3300
I42
VSimpleName: remove
p3301
Vinsert
p3302
I43
VSimpleType: Object
p3303
tp3304
F2.25
s(g1112
I42
g1113
Vinsert
p3305
I42
VSimpleName: lockSeq
p3306
tp3307
I1
s(g1611
I42
g1612
Vinsert
p3308
I42
VSimpleName: i
p3309
tp3310
F1.25
s(Vinsert
p3311
I42
VSimpleName: substring
p3312
Vinsert
p3313
I42
VSimpleName: substring
p3314
tp3315
I1
s(g2830
I42
g2831
Vinsert
p3316
I42
VSimpleName: len
p3317
tp3318
I1
s(g1977
I42
g1978
Vinsert
p3319
I42
VSimpleName: cljURL
p3320
tp3321
F0.25
s(g3311
I42
g3312
Vinsert
p3322
I42
VSimpleName: methodName
p3323
tp3324
I1
s(Vinsert
p3325
I42
VSimpleName: toString
p3326
Vinsert
p3327
I27
VInfixExpression: !=
p3328
tp3329
I1
s(Vinsert
p3330
I42
VSimpleName: getClass
p3331
Vinsert
p3332
I27
VInfixExpression: &&
p3333
tp3334
I4
s(g2697
I42
g2698
Vinsert
p3335
I33
VNullLiteral
p3336
tp3337
I1
s(g709
I42
g710
Vinsert
p3338
I39
VPrimitiveType: void
p3339
tp3340
F0.25
s(g3092
I42
g3093
Vinsert
p3341
I42
VSimpleName: IArray
p3342
tp3343
F0.25
s(g2018
I42
g2019
Vinsert
p3344
I42
VSimpleName: className
p3345
tp3346
F0.25
s(g2682
I42
g2683
Vinsert
p3347
I42
VSimpleName: RT
p3348
tp3349
I2
s(g1717
I42
g1718
Vinsert
p3350
I42
VSimpleName: nextID
p3351
tp3352
F0.25
s(g3201
I42
g3202
Vinsert
p3353
I40
VQualifiedName: lb.isArg
p3354
tp3355
I1
s(g1662
I42
g1663
Vinsert
p3356
I11
VCastExpression
p3357
tp3358
I2
s(g2896
I42
g2897
Vinsert
p3359
I42
VSimpleName: write
p3360
tp3361
I4
s(g1218
I42
g1219
Vinsert
p3362
I25
VIfStatement
p3363
tp3364
I1
s(Vinsert
p3365
I42
VSimpleName: write
p3366
Vinsert
p3367
I43
VSimpleType: Var
p3368
tp3369
I3
s(Vinsert
p3370
I42
VSimpleName: rest
p3371
Vinsert
p3372
I42
VSimpleName: seq
p3373
tp3374
F14.25
s(g2940
I42
g2941
Vinsert
p3375
I32
VMethodInvocation
p3376
tp3377
I1
s(g1683
I42
g1684
Vinsert
p3378
I32
VMethodInvocation
p3379
tp3380
I1
s(g1409
I42
g1410
Vinsert
p3381
I42
VSimpleName: bindings
p3382
tp3383
I1
s(Vinsert
p3384
I42
VSimpleName: capacity
p3385
Vinsert
p3386
I42
VSimpleName: Exception
p3387
tp3388
F0.25
s(Vinsert
p3389
I42
VSimpleName: deref
p3390
Vinsert
p3391
I40
VQualifiedName: RT.WARN_ON_REFLECTION
p3392
tp3393
I1
s(g567
I42
g568
Vinsert
p3394
I59
VVariableDeclarationFragment
p3395
tp3396
I1
s(g1157
I42
g1158
Vinsert
p3397
I42
VSimpleName: o
p3398
tp3399
I2
s(Vinsert
p3400
I42
VSimpleName: getProperty
p3401
Vinsert
p3402
I40
VQualifiedName: RT.ERR
p3403
tp3404
I1
s(Vinsert
p3405
I42
VSimpleName: deref
p3406
Vinsert
p3407
I42
VSimpleName: PrintWriter
p3408
tp3409
F1.25
s(g1331
I42
g1332
Vinsert
p3410
I27
VInfixExpression: <
p3411
tp3412
I1
s(g552
I42
g553
Vinsert
p3413
I43
VSimpleType: Symbol
p3414
tp3415
I2
s(Vinsert
p3416
I42
VSimpleName: get
p3417
Vinsert
p3418
I43
VSimpleType: ClassLoader
p3419
tp3420
F0.25
s(Vinsert
p3421
I42
VSimpleName: getType
p3422
Vinsert
p3423
I43
VSimpleType: ObjExpr
p3424
tp3425
I1
s(g363
I42
g364
Vinsert
p3426
I42
VSimpleName: getName
p3427
tp3428
I1
s(g1409
I42
g1410
Vinsert
p3429
I42
VSimpleName: cons
p3430
tp3431
I1
s(g1525
I42
g1526
Vinsert
p3432
I8
VBlock
p3433
tp3434
F3.25
s(g328
I42
g329
Vinsert
p3435
I45
VStringLiteral: "Mutable used after immutable call"
p3436
tp3437
F0.25
s(Vinsert
p3438
I42
VSimpleName: parseInt
p3439
Vinsert
p3440
I83
VModifier: static
p3441
tp3442
F0.25
s(g1621
I42
g1622
Vinsert
p3443
I42
VSimpleName: aq
p3444
tp3445
I1
s(g1900
I42
g1901
Vinsert
p3446
I14
VClassInstanceCreation
p3447
tp3448
F1.25
s(g2371
I42
g2372
Vinsert
p3449
I43
VSimpleType: Object
p3450
tp3451
F0.25
s(g2682
I42
g2683
Vinsert
p3452
I43
VSimpleType: Exception
p3453
tp3454
F0.75
s(Vinsert
p3455
I42
VSimpleName: swap
p3456
Vinsert
p3457
I42
VSimpleName: dup
p3458
tp3459
I1
s(Vinsert
p3460
I42
VSimpleName: makeClassLoader
p3461
Vinsert
p3462
I83
VModifier: final
p3463
tp3464
F3.25
s(Vinsert
p3465
I42
VSimpleName: assoc
p3466
Vinsert
p3467
I60
VVariableDeclarationStatement
p3468
tp3469
I3
s(g3135
I42
g3136
Vinsert
p3470
I42
VSimpleName: Numbers
p3471
tp3472
I1
s(g1807
I42
g1808
Vinsert
p3473
I39
VPrimitiveType: int
p3474
tp3475
I2
s(Vinsert
p3476
I42
VSimpleName: fromBigInteger
p3477
Vinsert
p3478
I25
VIfStatement
p3479
tp3480
F0.25
s(g2480
I42
g2481
Vinsert
p3481
I25
VIfStatement
p3482
tp3483
I2
s(g1596
I42
g1597
Vinsert
p3484
I43
VSimpleType: ITransientSet
p3485
tp3486
I2
s(Vinsert
p3487
I42
VSimpleName: valAt
p3488
Vinsert
p3489
I42
VSimpleName: gmap
p3490
tp3491
I1
s(g1182
I42
g1183
Vinsert
p3492
I42
VSimpleName: PersistentQueue
p3493
tp3494
I1
s(Vinsert
p3495
I42
VSimpleName: set
p3496
Vinsert
p3497
I74
VParameterizedType: AtomicReference<TVal>
p3498
tp3499
I1
s(Vinsert
p3500
I42
VSimpleName: getMethod
p3501
Vinsert
p3502
I57
VTypeLiteral
p3503
tp3504
I4
s(g3105
I42
g3106
Vinsert
p3505
I45
VStringLiteral: "public static long clojure.lang.RT.uncheckedLongCast(long)"
p3506
tp3507
I1
s(g989
I42
g990
Vinsert
p3508
I43
VSimpleType: Var
p3509
tp3510
I2
s(g285
I42
g286
Vinsert
p3511
I41
VReturnStatement
p3512
tp3513
I1
s(g1558
I42
g1559
Vinsert
p3514
I25
VIfStatement
p3515
tp3516
I3
s(Vinsert
p3517
I42
VSimpleName: seq
p3518
Vinsert
p3519
I42
VSimpleName: lnk
p3520
tp3521
F1.25
s(Vinsert
p3522
I42
VSimpleName: third
p3523
Vinsert
p3524
I32
VMethodInvocation
p3525
tp3526
I2
s(Vinsert
p3527
I42
VSimpleName: get
p3528
Vinsert
p3529
I42
VSimpleName: obj
p3530
tp3531
F1.5
s(g2405
I42
g2406
Vinsert
p3532
I42
VSimpleName: getCompilerOption
p3533
tp3534
F0.25
s(g973
I42
g974
Vinsert
p3535
I42
VSimpleName: escapeStr
p3536
tp3537
I1
s(g852
I42
g853
Vinsert
p3538
I62
VInstanceofExpression
p3539
tp3540
I1
s(Vinsert
p3541
I42
VSimpleName: read
p3542
Vinsert
p3543
I8
VBlock
p3544
tp3545
I5
s(g3076
I42
g3077
Vinsert
p3546
I42
VSimpleName: ctp
p3547
tp3548
I1
s(Vinsert
p3549
I42
VSimpleName: getAndIncrement
p3550
Vinsert
p3551
I43
VSimpleType: AtomicLong
p3552
tp3553
F0.5
s(Vinsert
p3554
I42
VSimpleName: rest
p3555
Vinsert
p3556
I13
VCharacterLiteral: '{'
p3557
tp3558
I1
s(g1905
I42
g1906
Vinsert
p3559
I42
VSimpleName: Exception
p3560
tp3561
F0.25
s(g730
I42
g731
Vinsert
p3562
I42
VSimpleName: cw
p3563
tp3564
I2
s(Vinsert
p3565
I42
VSimpleName: getClass
p3566
Vinsert
p3567
I42
VSimpleName: ya
p3568
tp3569
F0.25
s(g3384
I42
g3385
Vinsert
p3570
I25
VIfStatement
p3571
tp3572
I2
s(g2914
I42
g2915
Vinsert
p3573
I27
VInfixExpression: /
p3574
tp3575
I1
s(g2130
I42
g2131
Vinsert
p3576
I42
VSimpleName: n
p3577
tp3578
I3
s(g1505
I42
g1506
Vinsert
p3579
I42
VSimpleName: String
p3580
tp3581
I1
s(g2964
I42
g2965
Vinsert
p3582
I32
VMethodInvocation
p3583
tp3584
I1
s(g2528
I42
g2529
Vinsert
p3585
I3
VArrayCreation
p3586
tp3587
I1
s(g1649
I42
g1650
Vinsert
p3588
I43
VSimpleType: LockingTransaction
p3589
tp3590
I1
s(Vinsert
p3591
I42
VSimpleName: load
p3592
Vinsert
p3593
I45
VStringLiteral: "/zip.clj"
p3594
tp3595
I1
s(g101
I42
g102
Vinsert
p3596
I45
VStringLiteral: "clojure"
p3597
tp3598
F0.25
s(g1957
I42
g1958
Vinsert
p3599
I8
VBlock
p3600
tp3601
I2
s(g2964
I42
g2965
Vinsert
p3602
I42
VSimpleName: status
p3603
tp3604
F0.25
s(g1972
I42
g1973
Vinsert
p3605
I42
VSimpleName: args
p3606
tp3607
I1
s(g2636
I42
g2637
Vinsert
p3608
I42
VSimpleName: intValueOfMethod
p3609
tp3610
I1
s(g2257
I42
g2258
Vinsert
p3611
I43
VSimpleType: PathNode
p3612
tp3613
I1
s(Vinsert
p3614
I42
VSimpleName: seq
p3615
Vinsert
p3616
I43
VSimpleType: IFn
p3617
tp3618
F0.25
s(Vinsert
p3619
I42
VSimpleName: entrySet
p3620
Vinsert
p3621
I42
VSimpleName: put
p3622
tp3623
I1
s(g572
I42
g573
Vinsert
p3624
I32
VMethodInvocation
p3625
tp3626
I1
s(g1621
I42
g1622
Vinsert
p3627
I42
VSimpleName: Throwable
p3628
tp3629
F0.25
s(g641
I42
g642
Vinsert
p3630
I42
VSimpleName: ns
p3631
tp3632
F1.25
s(Vinsert
p3633
I42
VSimpleName: containsKey
p3634
Vinsert
p3635
I43
VSimpleType: IPersistentMap
p3636
tp3637
I2
s(g1192
I42
g1193
Vinsert
p3638
I32
VMethodInvocation
p3639
tp3640
I2
s(g1770
I42
g1771
Vinsert
p3641
I27
VInfixExpression: ||
p3642
tp3643
I1
s(Vinsert
p3644
I42
VSimpleName: create
p3645
Vinsert
p3646
I42
VSimpleName: Var
p3647
tp3648
I2
s(Vinsert
p3649
I42
VSimpleName: bind
p3650
Vinsert
p3651
I45
VStringLiteral: "test"
p3652
tp3653
I2
s(Vinsert
p3654
I42
VSimpleName: isPublic
p3655
Vinsert
p3656
I44
VSingleVariableDeclaration
p3657
tp3658
F0.5
s(Vinsert
p3659
I42
VSimpleName: count
p3660
Vinsert
p3661
I42
VSimpleName: PersistentIdentityListMap
p3662
tp3663
F0.25
s(g1326
I42
g1327
Vinsert
p3664
I42
VSimpleName: c
p3665
tp3666
F0.25
s(g1797
I42
g1798
Vinsert
p3667
I42
VSimpleName: k1
p3668
tp3669
I18
s(g2068
I42
g2069
Vinsert
p3670
I83
VModifier: static
p3671
tp3672
F0.5
s(g3389
I42
g3390
Vinsert
p3673
I42
VSimpleName: errPrintWriter
p3674
tp3675
F1.25
s(Vinsert
p3676
I42
VSimpleName: printStackTrace
p3677
Vinsert
p3678
I42
VSimpleName: loadFile
p3679
tp3680
I2
s(Vinsert
p3681
I42
VSimpleName: equiv
p3682
Vinsert
p3683
I41
VReturnStatement
p3684
tp3685
I3
s(g1717
I42
g1718
Vinsert
p3686
I36
VParenthesizedExpression
p3687
tp3688
F2.25
s(Vinsert
p3689
I42
VSimpleName: booleanCast
p3690
Vinsert
p3691
I42
VSimpleName: redefKey
p3692
tp3693
F0.25
s(g2371
I42
g2372
Vinsert
p3694
I83
VModifier: private
p3695
tp3696
F0.25
s(g1874
I42
g1875
Vinsert
p3697
I8
VBlock
p3698
tp3699
F5.25
s(g209
I42
g210
Vinsert
p3700
I42
VSimpleName: opts
p3701
tp3702
I2
s(g1014
I42
g1015
Vinsert
p3703
I42
VSimpleName: Exception
p3704
tp3705
F0.25
s(g2060
I42
g2061
Vinsert
p3706
I11
VCastExpression
p3707
tp3708
I1
s(Vinsert
p3709
I42
VSimpleName: compareTo
p3710
Vinsert
p3711
I42
VSimpleName: ns
p3712
tp3713
I1
s(g139
I42
g140
Vinsert
p3714
I16
VConditionalExpression
p3715
tp3716
F0.25
s(Vinsert
p3717
I42
VSimpleName: invoke
p3718
Vinsert
p3719
I42
VSimpleName: i
p3720
tp3721
I9
s(g1840
I42
g1841
Vinsert
p3722
I43
VSimpleType: ThreadLocal
p3723
tp3724
F1.0
s(g2037
I42
g2038
Vinsert
p3725
I42
VSimpleName: niters
p3726
tp3727
I2
s(Vinsert
p3728
I42
VSimpleName: count
p3729
Vinsert
p3730
I42
VSimpleName: visitTableSwitchInsn
p3731
tp3732
I1
s(g2822
I42
g2823
Vinsert
p3733
I60
VVariableDeclarationStatement
p3734
tp3735
I2
s(g819
I42
g820
Vinsert
p3736
I7
VAssignment: =
p3737
tp3738
F0.25
s(g2682
I42
g2683
Vinsert
p3739
I42
VSimpleName: v
p3740
tp3741
F1.25
s(g583
I42
g584
Vinsert
p3742
I39
VPrimitiveType: int
p3743
tp3744
I1
s(g2100
I42
g2101
Vinsert
p3745
I42
VSimpleName: pushbackReader
p3746
tp3747
I1
s(g950
I42
g951
Vinsert
p3748
I45
VStringLiteral: "*err*"
p3749
tp3750
F0.25
s(g431
I42
g432
Vinsert
p3751
I21
VExpressionStatement
p3752
tp3753
I2
s(Vinsert
p3754
I42
VSimpleName: nextInt
p3755
Vinsert
p3756
I61
VWhileStatement
p3757
tp3758
I1
s(g532
I42
g533
Vinsert
p3759
I43
VSimpleType: IFn
p3760
tp3761
F0.25
s(Vinsert
p3762
I42
VSimpleName: put
p3763
Vinsert
p3764
I43
VSimpleType: Cons
p3765
tp3766
F3.25
s(Vinsert
p3767
I42
VSimpleName: substring
p3768
Vinsert
p3769
I34
VNumberLiteral: 1
p3770
tp3771
I1
s(g267
I42
g268
Vinsert
p3772
I34
VNumberLiteral: 64
p3773
tp3774
I1
s(Vinsert
p3775
I42
VSimpleName: equiv
p3776
Vinsert
p3777
I43
VSimpleType: IPersistentCollection
p3778
tp3779
I2
s(g1050
I42
g1051
Vinsert
p3780
I42
VSimpleName: elide_meta
p3781
tp3782
I1
s(Vinsert
p3783
I42
VSimpleName: count
p3784
Vinsert
p3785
I42
VSimpleName: rec
p3786
tp3787
I2
s(g1611
I42
g1612
Vinsert
p3788
I40
VQualifiedName: array.length
p3789
tp3790
I1
s(g2231
I42
g2232
Vinsert
p3791
I42
VSimpleName: count
p3792
tp3793
I1
s(g2197
I42
g2198
Vinsert
p3794
I42
VSimpleName: frameCount
p3795
tp3796
I1
s(Vinsert
p3797
I42
VSimpleName: equals
p3798
Vinsert
p3799
I21
VExpressionStatement
p3800
tp3801
I4
s(g489
I42
g490
Vinsert
p3802
I43
VSimpleType: BindingInit
p3803
tp3804
I1
s(g1962
I42
g1963
Vinsert
p3805
I42
VSimpleName: kns
p3806
tp3807
I3
s(g1243
I42
g1244
Vinsert
p3808
I22
VFieldAccess
p3809
tp3810
F0.25
s(g1268
I42
g1269
Vinsert
p3811
I42
VSimpleName: restsym
p3812
tp3813
I1
s(Vinsert
p3814
I42
VSimpleName: get
p3815
Vinsert
p3816
I42
VSimpleName: msecs
p3817
tp3818
F0.25
s(Vinsert
p3819
I42
VSimpleName: create
p3820
Vinsert
p3821
I45
VStringLiteral: "clojure.lang.IFn"
p3822
tp3823
I1
s(g1396
I42
g1397
Vinsert
p3824
I34
VNumberLiteral: 0
p3825
tp3826
I2
s(g3146
I42
g3147
Vinsert
p3827
I43
VSimpleType: Exception
p3828
tp3829
F0.25
s(g3038
I42
g3039
Vinsert
p3830
I44
VSingleVariableDeclaration
p3831
tp3832
F0.25
s(Vinsert
p3833
I42
VSimpleName: invoke
p3834
Vinsert
p3835
I40
VQualifiedName: iters.length
p3836
tp3837
I1
s(g300
I42
g301
Vinsert
p3838
I42
VSimpleName: val
p3839
tp3840
I2
s(Vinsert
p3841
I42
VSimpleName: createFromMap
p3842
Vinsert
p3843
I43
VSimpleType: IPersistentMap
p3844
tp3845
F1.25
s(g1055
I42
g1056
Vinsert
p3846
I32
VMethodInvocation
p3847
tp3848
I2
s(Vinsert
p3849
I42
VSimpleName: runtimeException
p3850
Vinsert
p3851
I43
VSimpleType: IllegalAccessException
p3852
tp3853
I1
s(g189
I42
g190
Vinsert
p3854
I25
VIfStatement
p3855
tp3856
I1
s(g3676
I42
g3677
Vinsert
p3857
I42
VSimpleName: Exception
p3858
tp3859
I4
s(g2111
I42
g2112
Vinsert
p3860
I43
VSimpleType: clojure.lang.Fn
p3861
tp3862
I1
s(g2435
I42
g2436
Vinsert
p3863
I32
VMethodInvocation
p3864
tp3865
I3
s(g3076
I42
g3077
Vinsert
p3866
I60
VVariableDeclarationStatement
p3867
tp3868
I1
s(g562
I42
g563
Vinsert
p3869
I42
VSimpleName: k1
p3870
tp3871
I1
s(g376
I42
g377
Vinsert
p3872
I43
VSimpleType: IPersistentMap
p3873
tp3874
I1
s(Vinsert
p3875
I42
VSimpleName: contains
p3876
Vinsert
p3877
I27
VInfixExpression: +
p3878
tp3879
I1
s(Vinsert
p3880
I42
VSimpleName: intValue
p3881
Vinsert
p3882
I45
VStringLiteral: ", needed: "
p3883
tp3884
F0.25
s(g358
I42
g359
Vinsert
p3885
I39
VPrimitiveType: boolean
p3886
tp3887
F0.25
s(g2186
I42
g2187
Vinsert
p3888
I43
VSimpleType: Object
p3889
tp3890
F1.5
s(g471
I42
g472
Vinsert
p3891
I33
VNullLiteral
p3892
tp3893
F0.25
s(g1094
I42
g1095
Vinsert
p3894
I60
VVariableDeclarationStatement
p3895
tp3896
I4
s(g1634
I42
g1635
Vinsert
p3897
I43
VSimpleType: Object
p3898
tp3899
I1
s(g837
I42
g838
Vinsert
p3900
I8
VBlock
p3901
tp3902
I1
s(g2830
I42
g2831
Vinsert
p3903
I25
VIfStatement
p3904
tp3905
I1
s(g3681
I42
g3682
Vinsert
p3906
I42
VSimpleName: obj
p3907
tp3908
I2
s(g1326
I42
g1327
Vinsert
p3909
I42
VSimpleName: Class
p3910
tp3911
F0.25
s(g1027
I42
g1028
Vinsert
p3912
I27
VInfixExpression: ==
p3913
tp3914
I1
s(g593
I42
g594
Vinsert
p3915
I42
VSimpleName: ret
p3916
tp3917
I1
s(Vinsert
p3918
I42
VSimpleName: map
p3919
Vinsert
p3920
I42
VSimpleName: IOException
p3921
tp3922
F0.25
s(Vinsert
p3923
I42
VSimpleName: getClass
p3924
Vinsert
p3925
I42
VSimpleName: Map
p3926
tp3927
I1
s(g1014
I42
g1015
Vinsert
p3928
I41
VReturnStatement
p3929
tp3930
F0.25
s(g1797
I42
g1798
Vinsert
p3931
I42
VSimpleName: pcequiv
p3932
tp3933
I1
s(Vinsert
p3934
I42
VSimpleName: nextElement
p3935
Vinsert
p3936
I60
VVariableDeclarationStatement
p3937
tp3938
I1
s(g1009
I42
g1010
Vinsert
p3939
I40
VQualifiedName: RT.READER_RESOLVER
p3940
tp3941
I1
s(g2427
I42
g2428
Vinsert
p3942
I43
VSimpleType: CompilerException
p3943
tp3944
I2
s(g1812
I42
g1813
Vinsert
p3945
I43
VSimpleType: String
p3946
tp3947
F0.5
s(g1213
I42
g1214
Vinsert
p3948
I23
VFieldDeclaration
p3949
tp3950
F0.25
s(g3455
I42
g3456
Vinsert
p3951
I45
VStringLiteral: "ns"
p3952
tp3953
I1
s(g666
I42
g667
Vinsert
p3954
I42
VSimpleName: key
p3955
tp3956
I2
s(Vinsert
p3957
I42
VSimpleName: create
p3958
Vinsert
p3959
I42
VSimpleName: PushbackReader
p3960
tp3961
I2
s(Vinsert
p3962
I42
VSimpleName: isBound
p3963
Vinsert
p3964
I42
VSimpleName: Exception
p3965
tp3966
F0.25
s(g809
I42
g810
Vinsert
p3967
I42
VSimpleName: sym
p3968
tp3969
I2
s(g242
I42
g243
Vinsert
p3970
I42
VSimpleName: _str
p3971
tp3972
F2.25
s(Vinsert
p3973
I42
VSimpleName: compareTo
p3974
Vinsert
p3975
I42
VSimpleName: Object
p3976
tp3977
F0.5
s(g2239
I42
g2240
Vinsert
p3978
I40
VQualifiedName: sym.ns
p3979
tp3980
I1
s(Vinsert
p3981
I42
VSimpleName: add
p3982
Vinsert
p3983
I42
VSimpleName: multiplyBy
p3984
tp3985
F0.25
s(Vinsert
p3986
I42
VSimpleName: deref
p3987
Vinsert
p3988
I42
VSimpleName: ILookup
p3989
tp3990
I2
s(Vinsert
p3991
I42
VSimpleName: seq
p3992
Vinsert
p3993
I42
VSimpleName: next
p3994
tp3995
F1.25
s(g2456
I42
g2457
Vinsert
p3996
I42
VSimpleName: action
p3997
tp3998
I1
s(Vinsert
p3999
I42
VSimpleName: toLowerCase
p4000
Vinsert
p4001
I42
VSimpleName: s
p4002
tp4003
I2
s(Vinsert
p4004
I42
VSimpleName: next
p4005
Vinsert
p4006
I27
VInfixExpression: ==
p4007
tp4008
I1
s(g1991
I42
g1992
Vinsert
p4009
I42
VSimpleName: invoke
p4010
tp4011
F0.25
s(g628
I42
g629
Vinsert
p4012
I43
VSimpleType: Tail
p4013
tp4014
F0.25
s(g646
I42
g647
Vinsert
p4015
I11
VCastExpression
p4016
tp4017
I1
s(g2615
I42
g2616
Vinsert
p4018
I27
VInfixExpression: ==
p4019
tp4020
I1
s(Vinsert
p4021
I42
VSimpleName: cons
p4022
Vinsert
p4023
I42
VSimpleName: ISeq
p4024
tp4025
F0.5
s(g1137
I42
g1138
Vinsert
p4026
I42
VSimpleName: other
p4027
tp4028
F3.75
s(g510
I42
g511
Vinsert
p4029
I42
VSimpleName: s
p4030
tp4031
I1
s(g1822
I42
g1823
Vinsert
p4032
I27
VInfixExpression: !=
p4033
tp4034
I1
s(g557
I42
g558
Vinsert
p4035
I42
VSimpleName: key
p4036
tp4037
I1
s(g945
I42
g946
Vinsert
p4038
I42
VSimpleName: Symbol
p4039
tp4040
F1.5
s(Vinsert
p4041
I42
VSimpleName: visitSubroutine
p4042
Vinsert
p4043
I32
VMethodInvocation
p4044
tp4045
I1
s(Vinsert
p4046
I42
VSimpleName: lastIndexOf
p4047
Vinsert
p4048
I43
VSimpleType: String
p4049
tp4050
F1.25
s(g3633
I42
g3634
Vinsert
p4051
I43
VSimpleType: NullPointerException
p4052
tp4053
I1
s(Vinsert
p4054
I42
VSimpleName: runtimeException
p4055
Vinsert
p4056
I45
VStringLiteral: "EOF while reading regex"
p4057
tp4058
F0.5
s(Vinsert
p4059
I42
VSimpleName: getLength
p4060
Vinsert
p4061
I34
VNumberLiteral: 0
p4062
tp4063
F0.25
s(g2451
I42
g2452
Vinsert
p4064
I42
VSimpleName: args
p4065
tp4066
I1
s(g2186
I42
g2187
Vinsert
p4067
I42
VSimpleName: key
p4068
tp4069
F0.25
s(g1654
I42
g1655
Vinsert
p4070
I42
VSimpleName: Ratio
p4071
tp4072
I1
s(Vinsert
p4073
I42
VSimpleName: invokeStatic
p4074
Vinsert
p4075
I11
VCastExpression
p4076
tp4077
I1
s(g1792
I42
g1793
Vinsert
p4078
I27
VInfixExpression: ==
p4079
tp4080
I1
s(g745
I42
g746
Vinsert
p4081
I22
VFieldAccess
p4082
tp4083
F0.5
s(Vinsert
p4084
I42
VSimpleName: count
p4085
Vinsert
p4086
I42
VSimpleName: RandomAccess
p4087
tp4088
I1
s(g1654
I42
g1655
Vinsert
p4089
I32
VMethodInvocation
p4090
tp4091
I3
s(g1495
I42
g1496
Vinsert
p4092
I42
VSimpleName: f
p4093
tp4094
I1
s(g2687
I42
g2688
Vinsert
p4095
I43
VSimpleType: IPersistentMap
p4096
tp4097
I1
s(g431
I42
g432
Vinsert
p4098
I40
VQualifiedName: lb.name
p4099
tp4100
I1
s(g2435
I42
g2436
Vinsert
p4101
I27
VInfixExpression: &&
p4102
tp4103
I1
s(g730
I42
g731
Vinsert
p4104
I42
VSimpleName: size
p4105
tp4106
I2
s(g3957
I42
g3958
Vinsert
p4107
I42
VSimpleName: r
p4108
tp4109
I1
s(Vinsert
p4110
I42
VSimpleName: get
p4111
Vinsert
p4112
I42
VSimpleName: oldv
p4113
tp4114
F0.25
s(g2798
I42
g2799
Vinsert
p4115
I34
VNumberLiteral: 0
p4116
tp4117
I4
s(Vinsert
p4118
I42
VSimpleName: invoke
p4119
Vinsert
p4120
I42
VSimpleName: sequence
p4121
tp4122
F0.25
s(Vinsert
p4123
I42
VSimpleName: get
p4124
Vinsert
p4125
I42
VSimpleName: genPath
p4126
tp4127
I1
s(g804
I42
g805
Vinsert
p4128
I42
VSimpleName: considered
p4129
tp4130
F0.25
s(g1147
I42
g1148
Vinsert
p4131
I43
VSimpleType: ISeq
p4132
tp4133
F1.25
s(Vinsert
p4134
I42
VSimpleName: writeLock
p4135
Vinsert
p4136
I43
VSimpleType: IFn
p4137
tp4138
F0.25
s(g2278
I42
g2279
Vinsert
p4139
I60
VVariableDeclarationStatement
p4140
tp4141
I1
s(g3681
I42
g3682
Vinsert
p4142
I40
VQualifiedName: o.v0
p4143
tp4144
I1
s(g686
I42
g687
Vinsert
p4145
I27
VInfixExpression: &&
p4146
tp4147
I1
s(g583
I42
g584
Vinsert
p4148
I37
VPostfixExpression: ++
p4149
tp4150
I1
s(Vinsert
p4151
I42
VSimpleName: get
p4152
Vinsert
p4153
I42
VSimpleName: getEx
p4154
tp4155
F0.25
s(Vinsert
p4156
I42
VSimpleName: rest
p4157
Vinsert
p4158
I36
VParenthesizedExpression
p4159
tp4160
I16
s(Vinsert
p4161
I42
VSimpleName: newUTF8
p4162
Vinsert
p4163
I34
VNumberLiteral: 8
p4164
tp4165
I1
s(Vinsert
p4166
I42
VSimpleName: push
p4167
Vinsert
p4168
I42
VSimpleName: stack
p4169
tp4170
I1
s(Vinsert
p4171
I42
VSimpleName: readLock
p4172
Vinsert
p4173
I42
VSimpleName: ensures
p4174
tp4175
I2
s(Vinsert
p4176
I42
VSimpleName: seq
p4177
Vinsert
p4178
I40
VQualifiedName: ASeq.Src
p4179
tp4180
I1
s(g2803
I42
g2804
Vinsert
p4181
I40
VQualifiedName: sym.name
p4182
tp4183
I2
s(g4046
I42
g4047
Vinsert
p4184
I42
VSimpleName: name
p4185
tp4186
F8.25
s(g184
I42
g185
Vinsert
p4187
I43
VSimpleType: Sequential
p4188
tp4189
I5
s(Vinsert
p4190
I42
VSimpleName: intern
p4191
Vinsert
p4192
I42
VSimpleName: currentNS
p4193
tp4194
I3
s(g2262
I42
g2263
Vinsert
p4195
I42
VSimpleName: f
p4196
tp4197
F24.75
s(g2488
I42
g2489
Vinsert
p4198
I40
VQualifiedName: ret.length
p4199
tp4200
I1
s(g1192
I42
g1193
Vinsert
p4201
I62
VInstanceofExpression
p4202
tp4203
I1
s(g603
I42
g604
Vinsert
p4204
I42
VSimpleName: asTransient
p4205
tp4206
F1.0
s(g1117
I42
g1118
Vinsert
p4207
I52
VThisExpression
p4208
tp4209
F1.25
s(g318
I42
g319
Vinsert
p4210
I8
VBlock
p4211
tp4212
I1
s(g567
I42
g568
Vinsert
p4213
I32
VMethodInvocation
p4214
tp4215
I3
s(g194
I42
g195
Vinsert
p4216
I33
VNullLiteral
p4217
tp4218
I1
s(Vinsert
p4219
I42
VSimpleName: intern
p4220
Vinsert
p4221
I42
VSimpleName: create
p4222
tp4223
F4.0
s(Vinsert
p4224
I42
VSimpleName: createFromObject
p4225
Vinsert
p4226
I25
VIfStatement
p4227
tp4228
I1
s(g3256
I42
g3257
Vinsert
p4229
I42
VSimpleName: sym
p4230
tp4231
F0.25
s(Vinsert
p4232
I42
VSimpleName: bitLength
p4233
Vinsert
p4234
I42
VSimpleName: Number
p4235
tp4236
F0.25
s(Vinsert
p4237
I42
VSimpleName: arraycopy
p4238
Vinsert
p4239
I42
VSimpleName: cnt
p4240
tp4241
I1
s(g1137
I42
g1138
Vinsert
p4242
I59
VVariableDeclarationFragment
p4243
tp4244
I3
s(g1750
I42
g1751
Vinsert
p4245
I83
VModifier: final
p4246
tp4247
F0.5
s(Vinsert
p4248
I42
VSimpleName: getResourceAsStream
p4249
Vinsert
p4250
I43
VSimpleType: String
p4251
tp4252
F0.25
s(g2940
I42
g2941
Vinsert
p4253
I42
VSimpleName: ClassLoader
p4254
tp4255
F1.25
s(g1278
I42
g1279
Vinsert
p4256
I21
VExpressionStatement
p4257
tp4258
I4
s(Vinsert
p4259
I42
VSimpleName: getName
p4260
Vinsert
p4261
I42
VSimpleName: LocalBindingExpr
p4262
tp4263
I2
s(g3271
I42
g3272
Vinsert
p4264
I27
VInfixExpression: +
p4265
tp4266
F1.25
s(Vinsert
p4267
I42
VSimpleName: LA
p4268
Vinsert
p4269
I34
VNumberLiteral: 1
p4270
tp4271
I1
s(g3918
I42
g3919
Vinsert
p4272
I8
VBlock
p4273
tp4274
I2
s(g61
I42
g62
Vinsert
p4275
I42
VSimpleName: flipBit
p4276
tp4277
F0.25
s(g2692
I42
g2693
Vinsert
p4278
I70
VEnhancedForStatement
p4279
tp4280
I5
s(g2461
I42
g2462
Vinsert
p4281
I32
VMethodInvocation
p4282
tp4283
F10.25
s(Vinsert
p4284
I42
VSimpleName: first
p4285
Vinsert
p4286
I53
VThrowStatement
p4287
tp4288
I1
s(g1167
I42
g1168
Vinsert
p4289
I44
VSingleVariableDeclaration
p4290
tp4291
F0.25
s(g2348
I42
g2349
Vinsert
p4292
I60
VVariableDeclarationStatement
p4293
tp4294
I2
s(Vinsert
p4295
I42
VSimpleName: min
p4296
Vinsert
p4297
I32
VMethodInvocation
p4298
tp4299
F4.25
s(g804
I42
g805
Vinsert
p4300
I42
VSimpleName: Map
p4301
tp4302
F0.25
s(Vinsert
p4303
I42
VSimpleName: readLine
p4304
Vinsert
p4305
I42
VSimpleName: readLine
p4306
tp4307
F0.25
s(g2719
I42
g2720
Vinsert
p4308
I42
VSimpleName: a
p4309
tp4310
I1
s(g3962
I42
g3963
Vinsert
p4311
I21
VExpressionStatement
p4312
tp4313
F0.25
s(g1019
I42
g1020
Vinsert
p4314
I21
VExpressionStatement
p4315
tp4316
I10
s(g1626
I42
g1627
Vinsert
p4317
I42
VSimpleName: HostExpr
p4318
tp4319
I1
s(g537
I42
g538
Vinsert
p4320
I42
VSimpleName: push
p4321
tp4322
I2
s(Vinsert
p4323
I42
VSimpleName: startsWith
p4324
Vinsert
p4325
I66
VTextElement: Any number of Clojure files can be provided as path arguments; these
p4326
tp4327
F0.25
s(g1238
I42
g1239
Vinsert
p4328
I42
VSimpleName: y
p4329
tp4330
F0.25
s(g1228
I42
g1229
Vinsert
p4331
I42
VSimpleName: value
p4332
tp4333
I1
s(g924
I42
g925
Vinsert
p4334
I32
VMethodInvocation
p4335
tp4336
I8
s(g593
I42
g594
Vinsert
p4337
I43
VSimpleType: IOException
p4338
tp4339
F0.25
s(g204
I42
g205
Vinsert
p4340
I41
VReturnStatement
p4341
tp4342
I1
s(Vinsert
p4343
I42
VSimpleName: push
p4344
Vinsert
p4345
I44
VSingleVariableDeclaration
p4346
tp4347
F1.5
s(g1683
I42
g1684
Vinsert
p4348
I22
VFieldAccess
p4349
tp4350
I1
s(Vinsert
p4351
I42
VSimpleName: from
p4352
Vinsert
p4353
I42
VSimpleName: compareTo
p4354
tp4355
F0.25
s(g2186
I42
g2187
Vinsert
p4356
I42
VSimpleName: contains
p4357
tp4358
F0.25
s(g169
I42
g170
Vinsert
p4359
I60
VVariableDeclarationStatement
p4360
tp4361
I1
s(Vinsert
p4362
I42
VSimpleName: valueOf
p4363
Vinsert
p4364
I42
VSimpleName: Num
p4365
tp4366
F1.25
s(g1073
I42
g1074
Vinsert
p4367
I42
VSimpleName: var
p4368
tp4369
I1
s(g2435
I42
g2436
Vinsert
p4370
I40
VQualifiedName: v.ns
p4371
tp4372
I1
s(g4046
I42
g4047
Vinsert
p4373
I42
VSimpleName: String
p4374
tp4375
F1.25
s(g184
I42
g185
Vinsert
p4376
I27
VInfixExpression: &&
p4377
tp4378
I3
s(g681
I42
g682
Vinsert
p4379
I45
VStringLiteral: "splice not in list"
p4380
tp4381
I1
s(g3633
I42
g3634
Vinsert
p4382
I42
VSimpleName: getAliases
p4383
tp4384
I1
s(g3135
I42
g3136
Vinsert
p4385
I60
VVariableDeclarationStatement
p4386
tp4387
I1
s(g3400
I42
g3401
Vinsert
p4388
I60
VVariableDeclarationStatement
p4389
tp4390
I1
s(g1505
I42
g1506
Vinsert
p4391
I43
VSimpleType: IPersistentCollection
p4392
tp4393
I5
s(Vinsert
p4394
I42
VSimpleName: emit
p4395
Vinsert
p4396
I42
VSimpleName: targetClass
p4397
tp4398
I1
s(Vinsert
p4399
I42
VSimpleName: createNewFile
p4400
Vinsert
p4401
I21
VExpressionStatement
p4402
tp4403
I2
s(Vinsert
p4404
I42
VSimpleName: tagToClass
p4405
Vinsert
p4406
I16
VConditionalExpression
p4407
tp4408
I2
s(g3421
I42
g3422
Vinsert
p4409
I43
VSimpleType: Type
p4410
tp4411
I1
s(g2814
I42
g2815
Vinsert
p4412
I60
VVariableDeclarationStatement
p4413
tp4414
I1
s(g1568
I42
g1569
Vinsert
p4415
I42
VSimpleName: vals
p4416
tp4417
I1
s(g1027
I42
g1028
Vinsert
p4418
I9
VBooleanLiteral: true
p4419
tp4420
I1
s(g1456
I42
g1457
Vinsert
p4421
I42
VSimpleName: Keyword
p4422
tp4423
I1
s(g1248
I42
g1249
Vinsert
p4424
I42
VSimpleName: Num
p4425
tp4426
I1
s(g3709
I42
g3710
Vinsert
p4427
I42
VSimpleName: name
p4428
tp4429
I1
s(g184
I42
g185
Vinsert
p4430
I42
VSimpleName: o
p4431
tp4432
I5
s(g1535
I42
g1536
Vinsert
p4433
I27
VInfixExpression: &&
p4434
tp4435
I1
s(Vinsert
p4436
I42
VSimpleName: remove
p4437
Vinsert
p4438
I39
VPrimitiveType: void
p4439
tp4440
F0.25
s(g2803
I42
g2804
Vinsert
p4441
I34
VNumberLiteral: 1
p4442
tp4443
I1
s(g1866
I42
g1867
Vinsert
p4444
I52
VThisExpression
p4445
tp4446
I2
s(Vinsert
p4447
I42
VSimpleName: runtimeException
p4448
Vinsert
p4449
I42
VSimpleName: find
p4450
tp4451
I1
s(Vinsert
p4452
I42
VSimpleName: setMacro
p4453
Vinsert
p4454
I42
VSimpleName: nv
p4455
tp4456
I2
s(g1373
I42
g1374
Vinsert
p4457
I53
VThrowStatement
p4458
tp4459
I1
s(g1621
I42
g1622
Vinsert
p4460
I42
VSimpleName: getError
p4461
tp4462
F0.25
s(Vinsert
p4463
I42
VSimpleName: invokeInterface
p4464
Vinsert
p4465
I42
VSimpleName: visitCode
p4466
tp4467
I1
s(g1326
I42
g1327
Vinsert
p4468
I32
VMethodInvocation
p4469
tp4470
I1
s(g537
I42
g538
Vinsert
p4471
I42
VSimpleName: OBJECT
p4472
tp4473
I1
s(g1349
I42
g1350
Vinsert
p4474
I27
VInfixExpression: ==
p4475
tp4476
I5
s(g3689
I42
g3690
Vinsert
p4477
I27
VInfixExpression: &&
p4478
tp4479
I2
s(Vinsert
p4480
I42
VSimpleName: booleanCast
p4481
Vinsert
p4482
I42
VSimpleName: invoke
p4483
tp4484
I1
s(g2435
I42
g2436
Vinsert
p4485
I33
VNullLiteral
p4486
tp4487
I2
s(g1419
I42
g1420
Vinsert
p4488
I34
VNumberLiteral: 1
p4489
tp4490
I1
s(g2649
I42
g2650
Vinsert
p4491
I54
VTryStatement
p4492
tp4493
I1
s(g883
I42
g884
Vinsert
p4494
I27
VInfixExpression: +
p4495
tp4496
I1
s(Vinsert
p4497
I42
VSimpleName: format
p4498
Vinsert
p4499
I42
VSimpleName: IllegalStateException
p4500
tp4501
I1
s(g3754
I42
g3755
Vinsert
p4502
I42
VSimpleName: hash
p4503
tp4504
I1
s(g3962
I42
g3963
Vinsert
p4505
I43
VSimpleType: Exception
p4506
tp4507
F0.5
s(Vinsert
p4508
I42
VSimpleName: toString
p4509
Vinsert
p4510
I42
VSimpleName: source
p4511
tp4512
F1.25
s(g3775
I42
g3776
Vinsert
p4513
I62
VInstanceofExpression
p4514
tp4515
I1
s(Vinsert
p4516
I42
VSimpleName: getKey
p4517
Vinsert
p4518
I60
VVariableDeclarationStatement
p4519
tp4520
I1
s(g1414
I42
g1415
Vinsert
p4521
I40
VQualifiedName: PersistentArrayMap.EMPTY
p4522
tp4523
I1
s(g1745
I42
g1746
Vinsert
p4524
I42
VSimpleName: prefers
p4525
tp4526
I1
s(Vinsert
p4527
I42
VSimpleName: doubleValue
p4528
Vinsert
p4529
I27
VInfixExpression: +
p4530
tp4531
I1
s(g510
I42
g511
Vinsert
p4532
I42
VSimpleName: e
p4533
tp4534
I1
s(g4224
I42
g4225
Vinsert
p4535
I43
VSimpleType: Iterable
p4536
tp4537
I1
s(g3500
I42
g3501
Vinsert
p4538
I42
VSimpleName: Method
p4539
tp4540
I16
s(Vinsert
p4541
I42
VSimpleName: first
p4542
Vinsert
p4543
I27
VInfixExpression: ||
p4544
tp4545
I2
s(g1218
I42
g1219
Vinsert
p4546
I33
VNullLiteral
p4547
tp4548
I1
s(Vinsert
p4549
I42
VSimpleName: list
p4550
Vinsert
p4551
I42
VSimpleName: analyze
p4552
tp4553
I1
s(g781
I42
g782
Vinsert
p4554
I42
VSimpleName: wideOffset
p4555
tp4556
I1
s(Vinsert
p4557
I42
VSimpleName: indexOf
p4558
Vinsert
p4559
I59
VVariableDeclarationFragment
p4560
tp4561
I2
s(g2480
I42
g2481
Vinsert
p4562
I43
VSimpleType: Number
p4563
tp4564
I3
s(g1530
I42
g1531
Vinsert
p4565
I27
VInfixExpression: <
p4566
tp4567
I2
s(g1243
I42
g1244
Vinsert
p4568
I42
VSimpleName: Method
p4569
tp4570
F0.25
s(g36
I42
g37
Vinsert
p4571
I40
VQualifiedName: bi.binding.canBeCleared
p4572
tp4573
I1
s(g760
I42
g761
Vinsert
p4574
I38
VPrefixExpression: -
p4575
tp4576
I1
s(g2159
I42
g2160
Vinsert
p4577
I42
VSimpleName: arg1
p4578
tp4579
F0.25
s(g209
I42
g210
Vinsert
p4580
I38
VPrefixExpression: !
p4581
tp4582
I2
s(g1019
I42
g1020
Vinsert
p4583
I7
VAssignment: =
p4584
tp4585
I11
s(g2042
I42
g2043
Vinsert
p4586
I43
VSimpleType: Ratio
p4587
tp4588
I2
s(g929
I42
g930
Vinsert
p4589
I42
VSimpleName: key
p4590
tp4591
I2
s(g704
I42
g705
Vinsert
p4592
I42
VSimpleName: e
p4593
tp4594
I1
s(g1321
I42
g1322
Vinsert
p4595
I21
VExpressionStatement
p4596
tp4597
I1
s(g159
I42
g160
Vinsert
p4598
I41
VReturnStatement
p4599
tp4600
I1
s(g31
I42
g32
Vinsert
p4601
I41
VReturnStatement
p4602
tp4603
F1.5
s(Vinsert
p4604
I42
VSimpleName: getType
p4605
Vinsert
p4606
I42
VSimpleName: Double
p4607
tp4608
I1
s(g2221
I42
g2222
Vinsert
p4609
I83
VModifier: public
p4610
tp4611
F0.25
s(Vinsert
p4612
I42
VSimpleName: doubleValue
p4613
Vinsert
p4614
I42
VSimpleName: Float
p4615
tp4616
I1
s(g1127
I42
g1128
Vinsert
p4617
I43
VSimpleType: IllegalArgumentException
p4618
tp4619
I1
s(Vinsert
p4620
I42
VSimpleName: pow
p4621
Vinsert
p4622
I27
VInfixExpression: <
p4623
tp4624
I1
s(g857
I42
g858
Vinsert
p4625
I41
VReturnStatement
p4626
tp4627
F19.25
s(g209
I42
g210
Vinsert
p4628
I32
VMethodInvocation
p4629
tp4630
F14.75
s(g1162
I42
g1163
Vinsert
p4631
I45
VStringLiteral: ""
p4632
tp4633
I1
s(g1920
I42
g1921
Vinsert
p4634
I25
VIfStatement
p4635
tp4636
I1
s(g1727
I42
g1728
Vinsert
p4637
I42
VSimpleName: reqParms
p4638
tp4639
I1
s(Vinsert
p4640
I42
VSimpleName: visitMethodInsn
p4641
Vinsert
p4642
I83
VModifier: final
p4643
tp4644
F0.5
s(g862
I42
g863
Vinsert
p4645
I32
VMethodInvocation
p4646
tp4647
I2
s(g3689
I42
g3690
Vinsert
p4648
I38
VPrefixExpression: !
p4649
tp4650
I1
s(g1495
I42
g1496
Vinsert
p4651
I43
VSimpleType: Object
p4652
tp4653
I3
s(g1807
I42
g1808
Vinsert
p4654
I43
VSimpleType: Comparable
p4655
tp4656
I2
s(g814
I42
g815
Vinsert
p4657
I43
VSimpleType: Comparable
p4658
tp4659
F0.25
s(g174
I42
g175
Vinsert
p4660
I60
VVariableDeclarationStatement
p4661
tp4662
I1
s(Vinsert
p4663
I42
VSimpleName: getConstructorDescriptor
p4664
Vinsert
p4665
I43
VSimpleType: java.lang.reflect.Constructor
p4666
tp4667
F0.25
s(g3092
I42
g3093
Vinsert
p4668
I42
VSimpleName: _count
p4669
tp4670
I1
s(g3261
I42
g3262
Vinsert
p4671
I32
VMethodInvocation
p4672
tp4673
I9
s(g497
I42
g498
Vinsert
p4674
I83
VModifier: static
p4675
tp4676
F0.25
s(g2262
I42
g2263
Vinsert
p4677
I43
VSimpleType: Object
p4678
tp4679
F15.0
s(g3981
I42
g3982
Vinsert
p4680
I42
VSimpleName: x
p4681
tp4682
F1.25
s(g1268
I42
g1269
Vinsert
p4683
I42
VSimpleName: args
p4684
tp4685
I2
s(g2528
I42
g2529
Vinsert
p4686
I85
VDimension
p4687
tp4688
I1
s(Vinsert
p4689
I42
VSimpleName: assoc
p4690
Vinsert
p4691
I42
VSimpleName: Thread
p4692
tp4693
F0.25
s(Vinsert
p4694
I42
VSimpleName: from
p4695
Vinsert
p4696
I43
VSimpleType: IntegerNum
p4697
tp4698
I1
s(g2047
I42
g2048
Vinsert
p4699
I59
VVariableDeclarationFragment
p4700
tp4701
I1
s(Vinsert
p4702
I42
VSimpleName: assoc
p4703
Vinsert
p4704
I74
VParameterizedType: TRef<IPersistentMap>
p4705
tp4706
F0.25
s(g3438
I42
g3439
Vinsert
p4707
I42
VSimpleName: readPoint
p4708
tp4709
F0.5
s(g466
I42
g467
Vinsert
p4710
I25
VIfStatement
p4711
tp4712
I1
s(Vinsert
p4713
I42
VSimpleName: set
p4714
Vinsert
p4715
I43
VSimpleType: String
p4716
tp4717
I2
s(Vinsert
p4718
I42
VSimpleName: throwArity
p4719
Vinsert
p4720
I42
VSimpleName: arg15
p4721
tp4722
F0.25
s(g2310
I42
g2311
Vinsert
p4723
I42
VSimpleName: y
p4724
tp4725
I1
s(Vinsert
p4726
I42
VSimpleName: asList
p4727
Vinsert
p4728
I59
VVariableDeclarationFragment
p4729
tp4730
I1
s(g2239
I42
g2240
Vinsert
p4731
I27
VInfixExpression: ||
p4732
tp4733
I1
s(g124
I42
g125
Vinsert
p4734
I83
VModifier: final
p4735
tp4736
F0.5
s(g1132
I42
g1133
Vinsert
p4737
I42
VSimpleName: x
p4738
tp4739
I3
s(g735
I42
g736
Vinsert
p4740
I42
VSimpleName: val
p4741
tp4742
F2.0
s(Vinsert
p4743
I42
VSimpleName: returnValue
p4744
Vinsert
p4745
I42
VSimpleName: invokeConstructor
p4746
tp4747
I1
s(g1045
I42
g1046
Vinsert
p4748
I42
VSimpleName: FIND_NS
p4749
tp4750
I1
s(g3973
I42
g3974
Vinsert
p4751
I43
VSimpleType: Object
p4752
tp4753
F0.5
s(Vinsert
p4754
I42
VSimpleName: size
p4755
Vinsert
p4756
I27
VInfixExpression: <
p4757
tp4758
I2
s(g101
I42
g102
Vinsert
p4759
I42
VSimpleName: intern
p4760
tp4761
F0.25
s(g2480
I42
g2481
Vinsert
p4762
I27
VInfixExpression: <
p4763
tp4764
I1
s(Vinsert
p4765
I42
VSimpleName: newLabel
p4766
Vinsert
p4767
I21
VExpressionStatement
p4768
tp4769
I1
s(g532
I42
g533
Vinsert
p4770
I44
VSingleVariableDeclaration
p4771
tp4772
F0.25
s(g735
I42
g736
Vinsert
p4773
I42
VSimpleName: registerQuotedVal
p4774
tp4775
F0.25
s(g2169
I42
g2170
Vinsert
p4776
I42
VSimpleName: RET
p4777
tp4778
I1
s(g532
I42
g533
Vinsert
p4779
I42
VSimpleName: Object
p4780
tp4781
F8.75
s(g898
I42
g899
Vinsert
p4782
I32
VMethodInvocation
p4783
tp4784
I2
s(g1578
I42
g1579
Vinsert
p4785
I42
VSimpleName: ms
p4786
tp4787
I2
s(Vinsert
p4788
I42
VSimpleName: equals
p4789
Vinsert
p4790
I42
VSimpleName: attr_access
p4791
tp4792
F0.25
s(Vinsert
p4793
I42
VSimpleName: nth
p4794
Vinsert
p4795
I42
VSimpleName: analyze
p4796
tp4797
I1
s(g1223
I42
g1224
Vinsert
p4798
I11
VCastExpression
p4799
tp4800
I3
s(Vinsert
p4801
I42
VSimpleName: get
p4802
Vinsert
p4803
I42
VSimpleName: Box
p4804
tp4805
F1.25
s(g1258
I42
g1259
Vinsert
p4806
I42
VSimpleName: hashCode
p4807
tp4808
I1
s(g4323
I42
g4324
Vinsert
p4809
I42
VSimpleName: file
p4810
tp4811
I1
s(Vinsert
p4812
I42
VSimpleName: deref
p4813
Vinsert
p4814
I42
VSimpleName: column
p4815
tp4816
I1
s(g1781
I42
g1782
Vinsert
p4817
I27
VInfixExpression: *
p4818
tp4819
I1
s(g2278
I42
g2279
Vinsert
p4820
I21
VExpressionStatement
p4821
tp4822
I3
s(g656
I42
g657
Vinsert
p4823
I42
VSimpleName: context
p4824
tp4825
I1
s(Vinsert
p4826
I42
VSimpleName: assoc
p4827
Vinsert
p4828
I53
VThrowStatement
p4829
tp4830
F0.25
s(Vinsert
p4831
I42
VSimpleName: emitUnboxed
p4832
Vinsert
p4833
I40
VQualifiedName: bi.init
p4834
tp4835
I2
s(g2100
I42
g2101
Vinsert
p4836
I42
VSimpleName: read1
p4837
tp4838
I1
s(g6
I42
g7
Vinsert
p4839
I59
VVariableDeclarationFragment
p4840
tp4841
I21
s(g1750
I42
g1751
Vinsert
p4842
I42
VSimpleName: IFn
p4843
tp4844
F0.5
s(Vinsert
p4845
I42
VSimpleName: intern
p4846
Vinsert
p4847
I83
VModifier: private
p4848
tp4849
I1
s(g3092
I42
g3093
Vinsert
p4850
I8
VBlock
p4851
tp4852
I1
s(g2697
I42
g2698
Vinsert
p4853
I83
VModifier: public
p4854
tp4855
F0.25
s(Vinsert
p4856
I42
VSimpleName: find
p4857
Vinsert
p4858
I36
VParenthesizedExpression
p4859
tp4860
I1
s(g3300
I42
g3301
Vinsert
p4861
I54
VTryStatement
p4862
tp4863
I2
s(g1117
I42
g1118
Vinsert
p4864
I42
VSimpleName: getComponentType
p4865
tp4866
F0.25
s(Vinsert
p4867
I42
VSimpleName: currentThread
p4868
Vinsert
p4869
I32
VMethodInvocation
p4870
tp4871
F13.25
s(Vinsert
p4872
I42
VSimpleName: valueOf
p4873
Vinsert
p4874
I42
VSimpleName: box
p4875
tp4876
F1.5
s(g1014
I42
g1015
Vinsert
p4877
I44
VSingleVariableDeclaration
p4878
tp4879
F0.25
s(g929
I42
g930
Vinsert
p4880
I59
VVariableDeclarationFragment
p4881
tp4882
I10
s(g363
I42
g364
Vinsert
p4883
I42
VSimpleName: method
p4884
tp4885
I1
s(Vinsert
p4886
I42
VSimpleName: getCause
p4887
Vinsert
p4888
I60
VVariableDeclarationStatement
p4889
tp4890
I1
s(Vinsert
p4891
I42
VSimpleName: val
p4892
Vinsert
p4893
I42
VSimpleName: parent
p4894
tp4895
F2.5
s(g2883
I42
g2884
Vinsert
p4896
I42
VSimpleName: tinfo
p4897
tp4898
F0.25
s(g1611
I42
g1612
Vinsert
p4899
I33
VNullLiteral
p4900
tp4901
F3.25
s(g1167
I42
g1168
Vinsert
p4902
I43
VSimpleType: BigInteger
p4903
tp4904
F1.25
s(Vinsert
p4905
I42
VSimpleName: create
p4906
Vinsert
p4907
I42
VSimpleName: Exception
p4908
tp4909
F1.0
s(g717
I42
g718
Vinsert
p4910
I42
VSimpleName: Integer
p4911
tp4912
I2
s(g4110
I42
g4111
Vinsert
p4913
I42
VSimpleName: oldval
p4914
tp4915
I1
s(Vinsert
p4916
I42
VSimpleName: multiplyBy
p4917
Vinsert
p4918
I42
VSimpleName: add
p4919
tp4920
I1
s(g717
I42
g718
Vinsert
p4921
I42
VSimpleName: LINE_BEFORE
p4922
tp4923
I1
s(Vinsert
p4924
I42
VSimpleName: create
p4925
Vinsert
p4926
I11
VCastExpression
p4927
tp4928
I2
s(g2719
I42
g2720
Vinsert
p4929
I40
VQualifiedName: Long.TYPE
p4930
tp4931
I1
s(Vinsert
p4932
I42
VSimpleName: invokeInstanceMember
p4933
Vinsert
p4934
I42
VSimpleName: Object
p4935
tp4936
F1.5
s(Vinsert
p4937
I42
VSimpleName: intern
p4938
Vinsert
p4939
I83
VModifier: public
p4940
tp4941
F2.25
s(Vinsert
p4942
I42
VSimpleName: doubleValue
p4943
Vinsert
p4944
I42
VSimpleName: multiply
p4945
tp4946
F0.25
s(g3229
I42
g3230
Vinsert
p4947
I42
VSimpleName: val
p4948
tp4949
F0.25
s(g2286
I42
g2287
Vinsert
p4950
I42
VSimpleName: IPersistentMap
p4951
tp4952
I8
s(g898
I42
g899
Vinsert
p4953
I42
VSimpleName: sort
p4954
tp4955
I1
s(Vinsert
p4956
I42
VSimpleName: invoke
p4957
Vinsert
p4958
I7
VAssignment: +=
p4959
tp4960
I1
s(g1578
I42
g1579
Vinsert
p4961
I43
VSimpleType: LinkedList
p4962
tp4963
I2
s(g1223
I42
g1224
Vinsert
p4964
I42
VSimpleName: n
p4965
tp4966
I2
s(g2332
I42
g2333
Vinsert
p4967
I70
VEnhancedForStatement
p4968
tp4969
I1
s(g3728
I42
g3729
Vinsert
p4970
I42
VSimpleName: keywordCallsites
p4971
tp4972
I1
s(g1812
I42
g1813
Vinsert
p4973
I83
VModifier: final
p4974
tp4975
F0.5
s(g908
I42
g909
Vinsert
p4976
I42
VSimpleName: endTry
p4977
tp4978
I1
s(Vinsert
p4979
I42
VSimpleName: keys
p4980
Vinsert
p4981
I42
VSimpleName: m
p4982
tp4983
I2
s(g547
I42
g548
Vinsert
p4984
I83
VModifier: public
p4985
tp4986
F0.25
s(g888
I42
g889
Vinsert
p4987
I53
VThrowStatement
p4988
tp4989
F1.5
s(g2891
I42
g2892
Vinsert
p4990
I11
VCastExpression
p4991
tp4992
I8
s(g3161
I42
g3162
Vinsert
p4993
I42
VSimpleName: xs
p4994
tp4995
I1
s(g2278
I42
g2279
Vinsert
p4996
I42
VSimpleName: gen
p4997
tp4998
F3.5
s(g955
I42
g956
Vinsert
p4999
I42
VSimpleName: group
p5000
tp5001
I4
s(g3311
I42
g3312
Vinsert
p5002
I42
VSimpleName: method
p5003
tp5004
I2
s(g1845
I42
g1846
Vinsert
p5005
I27
VInfixExpression: >=
p5006
tp5007
I1
s(Vinsert
p5008
I42
VSimpleName: second
p5009
Vinsert
p5010
I45
VStringLiteral: "clojure.core"
p5011
tp5012
F0.25
s(g4886
I42
g4887
Vinsert
p5013
I42
VSimpleName: read
p5014
tp5015
I1
s(g2631
I42
g2632
Vinsert
p5016
I44
VSingleVariableDeclaration
p5017
tp5018
F1.25
s(Vinsert
p5019
I42
VSimpleName: hasNext
p5020
Vinsert
p5021
I42
VSimpleName: i
p5022
tp5023
I3
s(g1500
I42
g1501
Vinsert
p5024
I42
VSimpleName: intern
p5025
tp5026
I1
s(g1437
I42
g1438
Vinsert
p5027
I42
VSimpleName: key
p5028
tp5029
F0.5
s(g4743
I42
g4744
Vinsert
p5030
I43
VSimpleType: Method
p5031
tp5032
I1
s(g1009
I42
g1010
Vinsert
p5033
I32
VMethodInvocation
p5034
tp5035
F26.25
s(Vinsert
p5036
I42
VSimpleName: withMeta
p5037
Vinsert
p5038
I43
VSimpleType: PersistentListIdentityMap
p5039
tp5040
I1
s(g937
I42
g938
Vinsert
p5041
I43
VSimpleType: String
p5042
tp5043
F0.75
s(g1354
I42
g1355
Vinsert
p5044
I34
VNumberLiteral: 0
p5045
tp5046
I1
s(g593
I42
g594
Vinsert
p5047
I74
VParameterizedType: Enumeration<URL>
p5048
tp5049
I1
s(Vinsert
p5050
I42
VSimpleName: length
p5051
Vinsert
p5052
I42
VSimpleName: ByteVector
p5053
tp5054
F0.25
s(Vinsert
p5055
I42
VSimpleName: getDynamicBinding
p5056
Vinsert
p5057
I42
VSimpleName: Cons
p5058
tp5059
I1
s(g3100
I42
g3101
Vinsert
p5060
I42
VSimpleName: IPersistentMap
p5061
tp5062
F0.25
s(g1621
I42
g1622
Vinsert
p5063
I40
VQualifiedName: next.q
p5064
tp5065
F0.5
s(g1861
I42
g1862
Vinsert
p5066
I42
VSimpleName: BigDecimal
p5067
tp5068
I2
s(g164
I42
g165
Vinsert
p5069
I43
VSimpleType: Frame
p5070
tp5071
F0.25
s(Vinsert
p5072
I42
VSimpleName: sneakyThrow
p5073
Vinsert
p5074
I42
VSimpleName: RuntimeException
p5075
tp5076
F0.25
s(g2983
I42
g2984
Vinsert
p5077
I27
VInfixExpression: ==
p5078
tp5079
I1
s(Vinsert
p5080
I42
VSimpleName: list
p5081
Vinsert
p5082
I42
VSimpleName: arg1
p5083
tp5084
I8
s(g1202
I42
g1203
Vinsert
p5085
I25
VIfStatement
p5086
tp5087
I3
s(g3689
I42
g3690
Vinsert
p5088
I42
VSimpleName: RT
p5089
tp5090
F10.25
s(g124
I42
g125
Vinsert
p5091
I42
VSimpleName: obj
p5092
tp5093
I2
s(g4404
I42
g4405
Vinsert
p5094
I32
VMethodInvocation
p5095
tp5096
I2
s(g1197
I42
g1198
Vinsert
p5097
I27
VInfixExpression: !=
p5098
tp5099
F0.25
s(Vinsert
p5100
I42
VSimpleName: write
p5101
Vinsert
p5102
I42
VSimpleName: Pattern
p5103
tp5104
I3
s(g686
I42
g687
Vinsert
p5105
I42
VSimpleName: Object
p5106
tp5107
F1.25
s(g770
I42
g771
Vinsert
p5108
I42
VSimpleName: startsWith
p5109
tp5110
I1
s(Vinsert
p5111
I42
VSimpleName: loadArgs
p5112
Vinsert
p5113
I45
VStringLiteral: "main"
p5114
tp5115
I1
s(g2631
I42
g2632
Vinsert
p5116
I42
VSimpleName: Number
p5117
tp5118
F2.0
s(g1530
I42
g1531
Vinsert
p5119
I42
VSimpleName: i
p5120
tp5121
I2
s(Vinsert
p5122
I42
VSimpleName: next
p5123
Vinsert
p5124
I43
VSimpleType: ISeq
p5125
tp5126
I6
s(g1765
I42
g1766
Vinsert
p5127
I36
VParenthesizedExpression
p5128
tp5129
I7
s(Vinsert
p5130
I42
VSimpleName: subvec
p5131
Vinsert
p5132
I42
VSimpleName: toIndex
p5133
tp5134
F0.25
s(g4924
I42
g4925
Vinsert
p5135
I43
VSimpleType: Iterable
p5136
tp5137
I1
s(g1197
I42
g1198
Vinsert
p5138
I44
VSingleVariableDeclaration
p5139
tp5140
F0.25
s(g1073
I42
g1074
Vinsert
p5141
I42
VSimpleName: qualifiedName
p5142
tp5143
I1
s(g1817
I42
g1818
Vinsert
p5144
I21
VExpressionStatement
p5145
tp5146
I1
s(Vinsert
p5147
I42
VSimpleName: valAt
p5148
Vinsert
p5149
I33
VNullLiteral
p5150
tp5151
I1
s(Vinsert
p5152
I42
VSimpleName: rest
p5153
Vinsert
p5154
I61
VWhileStatement
p5155
tp5156
I1
s(g76
I42
g77
Vinsert
p5157
I42
VSimpleName: idx
p5158
tp5159
I2
s(g1291
I42
g1292
Vinsert
p5160
I83
VModifier: public
p5161
tp5162
F0.25
s(Vinsert
p5163
I42
VSimpleName: list
p5164
Vinsert
p5165
I42
VSimpleName: APPLY
p5166
tp5167
I1
s(g1991
I42
g1992
Vinsert
p5168
I42
VSimpleName: k
p5169
tp5170
F0.25
s(g2451
I42
g2452
Vinsert
p5171
I42
VSimpleName: allctors
p5172
tp5173
I1
s(g358
I42
g359
Vinsert
p5174
I42
VSimpleName: form
p5175
tp5176
I2
s(g4497
I42
g4498
Vinsert
p5177
I43
VSimpleType: IllegalStateException
p5178
tp5179
I1
s(g1081
I42
g1082
Vinsert
p5180
I42
VSimpleName: cr
p5181
tp5182
I1
s(g4267
I42
g4268
Vinsert
p5183
I39
VPrimitiveType: int
p5184
tp5185
I3
s(g1014
I42
g1015
Vinsert
p5186
I42
VSimpleName: sym
p5187
tp5188
F0.25
s(g862
I42
g863
Vinsert
p5189
I42
VSimpleName: CompilerException
p5190
tp5191
I2
s(g1373
I42
g1374
Vinsert
p5192
I42
VSimpleName: CompilerException
p5193
tp5194
I2
s(g1972
I42
g1973
Vinsert
p5195
I42
VSimpleName: count
p5196
tp5197
I1
s(Vinsert
p5198
I42
VSimpleName: list
p5199
Vinsert
p5200
I43
VSimpleType: Object
p5201
tp5202
F3.0
s(g628
I42
g629
Vinsert
p5203
I42
VSimpleName: Tail
p5204
tp5205
F0.25
s(Vinsert
p5206
I42
VSimpleName: toString
p5207
Vinsert
p5208
I45
VStringLiteral: "Invalid character constant: \u005c\u005cu"
p5209
tp5210
I1
s(g4867
I42
g4868
Vinsert
p5211
I43
VSimpleType: Thread
p5212
tp5213
F2.5
s(Vinsert
p5214
I42
VSimpleName: visit
p5215
Vinsert
p5216
I32
VMethodInvocation
p5217
tp5218
I2
s(g4937
I42
g4938
Vinsert
p5219
I42
VSimpleName: UNCHECKED_MATH
p5220
tp5221
I1
s(g456
I42
g457
Vinsert
p5222
I8
VBlock
p5223
tp5224
I1
s(g4743
I42
g4744
Vinsert
p5225
I42
VSimpleName: ctorgen
p5226
tp5227
I2
s(Vinsert
p5228
I42
VSimpleName: seq
p5229
Vinsert
p5230
I40
VQualifiedName: ret.internalName
p5231
tp5232
I1
s(g3261
I42
g3262
Vinsert
p5233
I42
VSimpleName: first
p5234
tp5235
I1
s(Vinsert
p5236
I42
VSimpleName: count
p5237
Vinsert
p5238
I42
VSimpleName: GeneratorAdapter
p5239
tp5240
F0.25
s(g2068
I42
g2069
Vinsert
p5241
I8
VBlock
p5242
tp5243
I3
s(g598
I42
g599
Vinsert
p5244
I22
VFieldAccess
p5245
tp5246
I1
s(g699
I42
g700
Vinsert
p5247
I25
VIfStatement
p5248
tp5249
I1
s(g3087
I42
g3088
Vinsert
p5250
I41
VReturnStatement
p5251
tp5252
I2
s(g3076
I42
g3077
Vinsert
p5253
I27
VInfixExpression: <=
p5254
tp5255
F0.25
s(Vinsert
p5256
I42
VSimpleName: get
p5257
Vinsert
p5258
I25
VIfStatement
p5259
tp5260
I13
s(g3981
I42
g3982
Vinsert
p5261
I42
VSimpleName: Num
p5262
tp5263
F0.5
s(Vinsert
p5264
I42
VSimpleName: addURL
p5265
Vinsert
p5266
I42
VSimpleName: url
p5267
tp5268
I2
s(g1050
I42
g1051
Vinsert
p5269
I42
VSimpleName: Var
p5270
tp5271
I7
s(g237
I42
g238
Vinsert
p5272
I11
VCastExpression
p5273
tp5274
I2
s(g1702
I42
g1703
Vinsert
p5275
I42
VSimpleName: tagOf
p5276
tp5277
I1
s(g2822
I42
g2823
Vinsert
p5278
I42
VSimpleName: retstr
p5279
tp5280
I1
s(g994
I42
g995
Vinsert
p5281
I83
VModifier: public
p5282
tp5283
F0.25
s(g3384
I42
g3385
Vinsert
p5284
I27
VInfixExpression: ==
p5285
tp5286
I2
s(g3487
I42
g3488
Vinsert
p5287
I45
VStringLiteral: "Gensym literal not in syntax-quote"
p5288
tp5289
I1
s(Vinsert
p5290
I42
VSimpleName: booleanCast
p5291
Vinsert
p5292
I42
VSimpleName: Symbol
p5293
tp5294
F0.25
s(g1094
I42
g1095
Vinsert
p5295
I44
VSingleVariableDeclaration
p5296
tp5297
F0.75
s(g2244
I42
g2245
Vinsert
p5298
I14
VClassInstanceCreation
p5299
tp5300
I2
s(g2578
I42
g2579
Vinsert
p5301
I10
VBreakStatement
p5302
tp5303
I2
s(g1167
I42
g1168
Vinsert
p5304
I42
VSimpleName: BigInteger
p5305
tp5306
F1.25
s(g1520
I42
g1521
Vinsert
p5307
I53
VThrowStatement
p5308
tp5309
F0.25
s(g2060
I42
g2061
Vinsert
p5310
I25
VIfStatement
p5311
tp5312
I1
s(g1177
I42
g1178
Vinsert
p5313
I34
VNumberLiteral: 1000000
p5314
tp5315
I1
s(g4123
I42
g4124
Vinsert
p5316
I42
VSimpleName: String
p5317
tp5318
F4.25
s(g603
I42
g604
Vinsert
p5319
I32
VMethodInvocation
p5320
tp5321
F3.75
s(g3022
I42
g3023
Vinsert
p5322
I85
VDimension
p5323
tp5324
I1
s(Vinsert
p5325
I42
VSimpleName: getName
p5326
Vinsert
p5327
I54
VTryStatement
p5328
tp5329
I1
s(g2018
I42
g2019
Vinsert
p5330
I42
VSimpleName: bytes
p5331
tp5332
F0.25
s(g3875
I42
g3876
Vinsert
p5333
I27
VInfixExpression: <
p5334
tp5335
I1
s(g699
I42
g700
Vinsert
p5336
I21
VExpressionStatement
p5337
tp5338
I1
s(g1525
I42
g1526
Vinsert
p5339
I27
VInfixExpression: &&
p5340
tp5341
F0.25
s(g2387
I42
g2388
Vinsert
p5342
I59
VVariableDeclarationFragment
p5343
tp5344
I2
s(g1962
I42
g1963
Vinsert
p5345
I25
VIfStatement
p5346
tp5347
I1
s(g209
I42
g210
Vinsert
p5348
I42
VSimpleName: o
p5349
tp5350
I2
s(g386
I42
g387
Vinsert
p5351
I14
VClassInstanceCreation
p5352
tp5353
F1.5
s(g3728
I42
g3729
Vinsert
p5354
I42
VSimpleName: newLabel
p5355
tp5356
I1
s(g456
I42
g457
Vinsert
p5357
I43
VSimpleType: Object
p5358
tp5359
F0.25
s(g5122
I42
g5123
Vinsert
p5360
I7
VAssignment: =
p5361
tp5362
I18
s(g572
I42
g573
Vinsert
p5363
I17
VConstructorInvocation
p5364
tp5365
F0.25
s(g1535
I42
g1536
Vinsert
p5366
I42
VSimpleName: tag
p5367
tp5368
F0.5
s(g2872
I42
g2873
Vinsert
p5369
I45
VStringLiteral: "Can't call public method of non-public class: "
p5370
tp5371
I1
s(Vinsert
p5372
I42
VSimpleName: invoke
p5373
Vinsert
p5374
I42
VSimpleName: rest
p5375
tp5376
F0.5
s(g572
I42
g573
Vinsert
p5377
I34
VNumberLiteral: 100
p5378
tp5379
I1
s(Vinsert
p5380
I42
VSimpleName: substring
p5381
Vinsert
p5382
I42
VSimpleName: cljfile
p5383
tp5384
I2
s(g2145
I42
g2146
Vinsert
p5385
I43
VSimpleType: StringWriter
p5386
tp5387
I1
s(g1112
I42
g1113
Vinsert
p5388
I43
VSimpleType: Lock
p5389
tp5390
F0.25
s(g515
I42
g516
Vinsert
p5391
I42
VSimpleName: RT
p5392
tp5393
I10
s(Vinsert
p5394
I42
VSimpleName: add
p5395
Vinsert
p5396
I21
VExpressionStatement
p5397
tp5398
I9
s(g411
I42
g412
Vinsert
p5399
I43
VSimpleType: ThreadLocalData
p5400
tp5401
F0.25
s(Vinsert
p5402
I42
VSimpleName: read
p5403
Vinsert
p5404
I43
VSimpleType: Reader
p5405
tp5406
F3.25
s(g1750
I42
g1751
Vinsert
p5407
I42
VSimpleName: fjfork
p5408
tp5409
F0.25
s(g628
I42
g629
Vinsert
p5410
I42
VSimpleName: r
p5411
tp5412
F0.25
s(g2169
I42
g2170
Vinsert
p5413
I38
VPrefixExpression: !
p5414
tp5415
I1
s(g623
I42
g624
Vinsert
p5416
I42
VSimpleName: c
p5417
tp5418
I3
s(g1081
I42
g1082
Vinsert
p5419
I42
VSimpleName: ce
p5420
tp5421
I1
s(g2692
I42
g2693
Vinsert
p5422
I43
VSimpleType: String
p5423
tp5424
I1
s(g4886
I42
g4887
Vinsert
p5425
I27
VInfixExpression: !=
p5426
tp5427
I1
s(Vinsert
p5428
I42
VSimpleName: charAt
p5429
Vinsert
p5430
I42
VSimpleName: Keyword
p5431
tp5432
I1
s(g641
I42
g642
Vinsert
p5433
I44
VSingleVariableDeclaration
p5434
tp5435
F0.5
s(Vinsert
p5436
I42
VSimpleName: eval
p5437
Vinsert
p5438
I42
VSimpleName: Compiler
p5439
tp5440
I1
s(g4224
I42
g4225
Vinsert
p5441
I42
VSimpleName: ArrayStream
p5442
tp5443
I1
s(g2935
I42
g2936
Vinsert
p5444
I40
VQualifiedName: parent.array
p5445
tp5446
I1
s(g1396
I42
g1397
Vinsert
p5447
I42
VSimpleName: putShort
p5448
tp5449
I1
s(g411
I42
g412
Vinsert
p5450
I42
VSimpleName: arglist
p5451
tp5452
F0.25
s(g1137
I42
g1138
Vinsert
p5453
I42
VSimpleName: EMPTY
p5454
tp5455
I3
s(g4932
I42
g4933
Vinsert
p5456
I41
VReturnStatement
p5457
tp5458
I3
s(g1162
I42
g1163
Vinsert
p5459
I60
VVariableDeclarationStatement
p5460
tp5461
I3
s(g1258
I42
g1259
Vinsert
p5462
I42
VSimpleName: x
p5463
tp5464
I1
s(g3201
I42
g3202
Vinsert
p5465
I21
VExpressionStatement
p5466
tp5467
F1.25
s(g2562
I42
g2563
Vinsert
p5468
I42
VSimpleName: arg4
p5469
tp5470
F0.25
s(g5055
I42
g5056
Vinsert
p5471
I32
VMethodInvocation
p5472
tp5473
I1
s(g3644
I42
g3645
Vinsert
p5474
I23
VFieldDeclaration
p5475
tp5476
I3
s(g1326
I42
g1327
Vinsert
p5477
I59
VVariableDeclarationFragment
p5478
tp5479
I1
s(g651
I42
g652
Vinsert
p5480
I30
VLabeledStatement
p5481
tp5482
I1
s(g1032
I42
g1033
Vinsert
p5483
I42
VSimpleName: internAccessor
p5484
tp5485
F0.25
s(g4295
I42
g4296
Vinsert
p5486
I42
VSimpleName: ARG_TYPES
p5487
tp5488
F0.25
s(g2376
I42
g2377
Vinsert
p5489
I21
VExpressionStatement
p5490
tp5491
I1
s(g2361
I42
g2362
Vinsert
p5492
I58
VVariableDeclarationExpression
p5493
tp5494
I7
s(Vinsert
p5495
I42
VSimpleName: rest
p5496
Vinsert
p5497
I42
VSimpleName: RT
p5498
tp5499
I3
s(Vinsert
p5500
I42
VSimpleName: push
p5501
Vinsert
p5502
I42
VSimpleName: FnExpr
p5503
tp5504
F0.5
s(Vinsert
p5505
I42
VSimpleName: set
p5506
Vinsert
p5507
I60
VVariableDeclarationStatement
p5508
tp5509
I3
s(g1727
I42
g1728
Vinsert
p5510
I31
VMethodDeclaration
p5511
tp5512
F1.5
s(g960
I42
g961
Vinsert
p5513
I42
VSimpleName: FnExpr
p5514
tp5515
F0.25
s(g3644
I42
g3645
Vinsert
p5516
I83
VModifier: static
p5517
tp5518
F3.25
s(g2930
I42
g2931
Vinsert
p5519
I8
VBlock
p5520
tp5521
I2
s(g4831
I42
g4832
Vinsert
p5522
I42
VSimpleName: primc
p5523
tp5524
I1
s(g3229
I42
g3230
Vinsert
p5525
I42
VSimpleName: assocN
p5526
tp5527
F0.25
s(Vinsert
p5528
I42
VSimpleName: getName
p5529
Vinsert
p5530
I42
VSimpleName: importClass
p5531
tp5532
F0.25
s(Vinsert
p5533
I42
VSimpleName: cons
p5534
Vinsert
p5535
I42
VSimpleName: PersistentVector
p5536
tp5537
I1
s(g4754
I42
g4755
Vinsert
p5538
I8
VBlock
p5539
tp5540
I2
s(g994
I42
g995
Vinsert
p5541
I8
VBlock
p5542
tp5543
I1
s(g2641
I42
g2642
Vinsert
p5544
I32
VMethodInvocation
p5545
tp5546
I1
s(g5122
I42
g5123
Vinsert
p5547
I27
VInfixExpression: !=
p5548
tp5549
I9
s(g2480
I42
g2481
Vinsert
p5550
I8
VBlock
p5551
tp5552
I3
s(g1949
I42
g1950
Vinsert
p5553
I42
VSimpleName: source
p5554
tp5555
I1
s(Vinsert
p5556
I42
VSimpleName: length
p5557
Vinsert
p5558
I11
VCastExpression
p5559
tp5560
I1
s(g1545
I42
g1546
Vinsert
p5561
I27
VInfixExpression: ==
p5562
tp5563
F4.25
s(g1702
I42
g1703
Vinsert
p5564
I59
VVariableDeclarationFragment
p5565
tp5566
I2
s(g4041
I42
g4042
Vinsert
p5567
I60
VVariableDeclarationStatement
p5568
tp5569
I1
s(g2273
I42
g2274
Vinsert
p5570
I42
VSimpleName: Num
p5571
tp5572
I1
s(g91
I42
g92
Vinsert
p5573
I45
VStringLiteral: "fn__"
p5574
tp5575
I3
s(Vinsert
p5576
I42
VSimpleName: lookupAlias
p5577
Vinsert
p5578
I42
VSimpleName: currentNS
p5579
tp5580
I1
s(g3619
I42
g3620
Vinsert
p5581
I74
VParameterizedType: Map.Entry<TRef,Object>
p5582
tp5583
I1
s(Vinsert
p5584
I42
VSimpleName: add
p5585
Vinsert
p5586
I42
VSimpleName: ret
p5587
tp5588
F0.25
s(g1094
I42
g1095
Vinsert
p5589
I59
VVariableDeclarationFragment
p5590
tp5591
F4.25
s(Vinsert
p5592
I42
VSimpleName: visitMaxs
p5593
Vinsert
p5594
I52
VThisExpression
p5595
tp5596
I2
s(g3654
I42
g3655
Vinsert
p5597
I42
VSimpleName: Method
p5598
tp5599
F0.25
s(g1253
I42
g1254
Vinsert
p5600
I42
VSimpleName: _next
p5601
tp5602
I2
s(g745
I42
g746
Vinsert
p5603
I42
VSimpleName: args
p5604
tp5605
F0.5
s(Vinsert
p5606
I42
VSimpleName: get
p5607
Vinsert
p5608
I42
VSimpleName: close
p5609
tp5610
F0.25
s(g1712
I42
g1713
Vinsert
p5611
I83
VModifier: static
p5612
tp5613
F0.5
s(g1099
I42
g1100
Vinsert
p5614
I8
VBlock
p5615
tp5616
I1
s(g1147
I42
g1148
Vinsert
p5617
I42
VSimpleName: EMPTY
p5618
tp5619
I1
s(g5592
I42
g5593
Vinsert
p5620
I42
VSimpleName: max
p5621
tp5622
I1
s(g6
I42
g7
Vinsert
p5623
I42
VSimpleName: i
p5624
tp5625
I19
s(g441
I42
g442
Vinsert
p5626
I40
VQualifiedName: array.length
p5627
tp5628
I5
s(Vinsert
p5629
I42
VSimpleName: create
p5630
Vinsert
p5631
I42
VSimpleName: QUOTE
p5632
tp5633
I1
s(Vinsert
p5634
I42
VSimpleName: format
p5635
Vinsert
p5636
I11
VCastExpression
p5637
tp5638
I1
s(g2397
I42
g2398
Vinsert
p5639
I21
VExpressionStatement
p5640
tp5641
I4
s(Vinsert
p5642
I42
VSimpleName: get
p5643
Vinsert
p5644
I2
VArrayAccess
p5645
tp5646
I1
s(g4295
I42
g4296
Vinsert
p5647
I45
VStringLiteral: "[LObject;"
p5648
tp5649
F0.25
s(g252
I42
g253
Vinsert
p5650
I8
VBlock
p5651
tp5652
I1
s(g1409
I42
g1410
Vinsert
p5653
I40
VQualifiedName: RT.F
p5654
tp5655
I1
s(Vinsert
p5656
I42
VSimpleName: parse
p5657
Vinsert
p5658
I21
VExpressionStatement
p5659
tp5660
I1
s(g2649
I42
g2650
Vinsert
p5661
I42
VSimpleName: Object
p5662
tp5663
F0.25
s(Vinsert
p5664
I42
VSimpleName: keys
p5665
Vinsert
p5666
I42
VSimpleName: gen
p5667
tp5668
F0.25
s(g3282
I42
g3283
Vinsert
p5669
I42
VSimpleName: in_ns
p5670
tp5671
I1
s(Vinsert
p5672
I42
VSimpleName: intValue
p5673
Vinsert
p5674
I42
VSimpleName: Exception
p5675
tp5676
F0.25
s(g5505
I42
g5506
Vinsert
p5677
I42
VSimpleName: arg1
p5678
tp5679
I2
s(g547
I42
g548
Vinsert
p5680
I42
VSimpleName: mv
p5681
tp5682
I5
s(g5500
I42
g5501
Vinsert
p5683
I42
VSimpleName: GeneratorAdapter
p5684
tp5685
F0.5
s(g929
I42
g930
Vinsert
p5686
I42
VSimpleName: Object
p5687
tp5688
F2.25
s(g300
I42
g301
Vinsert
p5689
I21
VExpressionStatement
p5690
tp5691
I1
s(g1520
I42
g1521
Vinsert
p5692
I14
VClassInstanceCreation
p5693
tp5694
F0.25
s(Vinsert
p5695
I42
VSimpleName: get
p5696
Vinsert
p5697
I43
VSimpleType: Var
p5698
tp5699
F3.25
s(g2060
I42
g2061
Vinsert
p5700
I41
VReturnStatement
p5701
tp5702
I2
s(g1456
I42
g1457
Vinsert
p5703
I43
VSimpleType: Keyword
p5704
tp5705
I1
s(g937
I42
g938
Vinsert
p5706
I42
VSimpleName: classForNameNonLoading
p5707
tp5708
F0.25
s(g2026
I42
g2027
Vinsert
p5709
I32
VMethodInvocation
p5710
tp5711
I10
s(g704
I42
g705
Vinsert
p5712
I42
VSimpleName: RuntimeException
p5713
tp5714
I2
s(g4134
I42
g4135
Vinsert
p5715
I39
VPrimitiveType: void
p5716
tp5717
F0.25
s(g21
I42
g22
Vinsert
p5718
I42
VSimpleName: IObj
p5719
tp5720
F3.25
s(g968
I42
g969
Vinsert
p5721
I42
VSimpleName: push
p5722
tp5723
F2.25
s(g2469
I42
g2470
Vinsert
p5724
I42
VSimpleName: coll
p5725
tp5726
I1
s(g1949
I42
g1950
Vinsert
p5727
I42
VSimpleName: SOURCE_PATH
p5728
tp5729
I1
s(g2073
I42
g2074
Vinsert
p5730
I83
VModifier: static
p5731
tp5732
I3
s(g252
I42
g253
Vinsert
p5733
I43
VSimpleType: Object
p5734
tp5735
F0.25
s(g1132
I42
g1133
Vinsert
p5736
I43
VSimpleType: Object
p5737
tp5738
F0.75
s(g883
I42
g884
Vinsert
p5739
I37
VPostfixExpression: ++
p5740
tp5741
I1
s(g4726
I42
g4727
Vinsert
p5742
I42
VSimpleName: List
p5743
tp5744
I1
s(g3135
I42
g3136
Vinsert
p5745
I25
VIfStatement
p5746
tp5747
I1
s(Vinsert
p5748
I42
VSimpleName: emit
p5749
Vinsert
p5750
I43
VSimpleType: FnExpr
p5751
tp5752
F0.5
s(g2822
I42
g2823
Vinsert
p5753
I59
VVariableDeclarationFragment
p5754
tp5755
I4
s(g5436
I42
g5437
Vinsert
p5756
I40
VQualifiedName: PersistentHashMap.EMPTY
p5757
tp5758
I1
s(Vinsert
p5759
I42
VSimpleName: invokeStaticMethod
p5760
Vinsert
p5761
I42
VSimpleName: Reflector
p5762
tp5763
I3
s(g2830
I42
g2831
Vinsert
p5764
I43
VSimpleType: Object
p5765
tp5766
I2
s(g1045
I42
g1046
Vinsert
p5767
I42
VSimpleName: Symbol
p5768
tp5769
I6
s(g2682
I42
g2683
Vinsert
p5770
I44
VSingleVariableDeclaration
p5771
tp5772
F1.25
s(g547
I42
g548
Vinsert
p5773
I42
VSimpleName: name
p5774
tp5775
F0.5
s(g154
I42
g155
Vinsert
p5776
I21
VExpressionStatement
p5777
tp5778
I14
s(g814
I42
g815
Vinsert
p5779
I41
VReturnStatement
p5780
tp5781
I2
s(g81
I42
g82
Vinsert
p5782
I42
VSimpleName: Long
p5783
tp5784
I1
s(g1832
I42
g1833
Vinsert
p5785
I52
VThisExpression
p5786
tp5787
I2
s(Vinsert
p5788
I42
VSimpleName: getLineNumber
p5789
Vinsert
p5790
I41
VReturnStatement
p5791
tp5792
I2
s(g4436
I42
g4437
Vinsert
p5793
I42
VSimpleName: _attrs
p5794
tp5795
F2.25
s(g3290
I42
g3291
Vinsert
p5796
I7
VAssignment: =
p5797
tp5798
F0.25
s(g4480
I42
g4481
Vinsert
p5799
I42
VSimpleName: o2
p5800
tp5801
I1
s(Vinsert
p5802
I42
VSimpleName: close
p5803
Vinsert
p5804
I59
VVariableDeclarationFragment
p5805
tp5806
I1
s(g4886
I42
g4887
Vinsert
p5807
I42
VSimpleName: ready
p5808
tp5809
I1
s(g5111
I42
g5112
Vinsert
p5810
I42
VSimpleName: maingen
p5811
tp5812
I3
s(g3188
I42
g3189
Vinsert
p5813
I42
VSimpleName: getTransaction
p5814
tp5815
F0.25
s(Vinsert
p5816
I42
VSimpleName: first
p5817
Vinsert
p5818
I40
VQualifiedName: Map.Entry
p5819
tp5820
I2
s(g318
I42
g319
Vinsert
p5821
I42
VSimpleName: ClassLoader
p5822
tp5823
F1.25
s(Vinsert
p5824
I42
VSimpleName: get
p5825
Vinsert
p5826
I42
VSimpleName: IdentityHashMap
p5827
tp5828
F0.25
s(g1807
I42
g1808
Vinsert
p5829
I42
VSimpleName: c
p5830
tp5831
I1
s(Vinsert
p5832
I42
VSimpleName: booleanCast
p5833
Vinsert
p5834
I42
VSimpleName: exprType
p5835
tp5836
F1.25
s(g5832
I42
g5833
Vinsert
p5837
I42
VSimpleName: defaultLabel
p5838
tp5839
F0.25
s(g2692
I42
g2693
Vinsert
p5840
I33
VNullLiteral
p5841
tp5842
I1
s(g2343
I42
g2344
Vinsert
p5843
I50
VSwitchStatement
p5844
tp5845
I1
s(g893
I42
g894
Vinsert
p5846
I42
VSimpleName: c2
p5847
tp5848
I1
s(g5290
I42
g5291
Vinsert
p5849
I14
VClassInstanceCreation
p5850
tp5851
F0.25
s(g1740
I42
g1741
Vinsert
p5852
I83
VModifier: synchronized
p5853
tp5854
F0.25
s(g1722
I42
g1723
Vinsert
p5855
I42
VSimpleName: Modifier
p5856
tp5857
I1
s(g1
I42
g2
Vinsert
p5858
I42
VSimpleName: coll
p5859
tp5860
I2
s(g1936
I42
g1937
Vinsert
p5861
I8
VBlock
p5862
tp5863
F0.25
s(g5556
I42
g5557
Vinsert
p5864
I9
VBooleanLiteral: false
p5865
tp5866
I1
s(g1326
I42
g1327
Vinsert
p5867
I27
VInfixExpression: >>
p5868
tp5869
I1
s(g2724
I42
g2725
Vinsert
p5870
I40
VQualifiedName: allmethods.length
p5871
tp5872
I1
s(g505
I42
g506
Vinsert
p5873
I42
VSimpleName: toString
p5874
tp5875
F0.25
s(g1424
I42
g1425
Vinsert
p5876
I32
VMethodInvocation
p5877
tp5878
I3
s(Vinsert
p5879
I42
VSimpleName: booleanCast
p5880
Vinsert
p5881
I42
VSimpleName: meta
p5882
tp5883
F0.25
s(g1596
I42
g1597
Vinsert
p5884
I42
VSimpleName: persistent
p5885
tp5886
F0.75
s(g1032
I42
g1033
Vinsert
p5887
I42
VSimpleName: findOrCreate
p5888
tp5889
I1
s(g1202
I42
g1203
Vinsert
p5890
I42
VSimpleName: Var
p5891
tp5892
I4
s(Vinsert
p5893
I42
VSimpleName: longValue
p5894
Vinsert
p5895
I62
VInstanceofExpression
p5896
tp5897
I2
s(g1192
I42
g1193
Vinsert
p5898
I41
VReturnStatement
p5899
tp5900
I1
s(g1601
I42
g1602
Vinsert
p5901
I40
VQualifiedName: nextMaster.basis
p5902
tp5903
I1
s(g4937
I42
g4938
Vinsert
p5904
I42
VSimpleName: Var
p5905
tp5906
F10.25
s(g3014
I42
g3015
Vinsert
p5907
I43
VSimpleType: Exception
p5908
tp5909
F0.25
s(g86
I42
g87
Vinsert
p5910
I21
VExpressionStatement
p5911
tp5912
F6.25
s(g2145
I42
g2146
Vinsert
p5913
I43
VSimpleType: Writer
p5914
tp5915
I1
s(Vinsert
p5916
I42
VSimpleName: valueOf
p5917
Vinsert
p5918
I42
VSimpleName: c
p5919
tp5920
I1
s(g5380
I42
g5381
Vinsert
p5921
I42
VSimpleName: ins
p5922
tp5923
I2
s(g1797
I42
g1798
Vinsert
p5924
I43
VSimpleType: IPersistentCollection
p5925
tp5926
I2
s(g1817
I42
g1818
Vinsert
p5927
I42
VSimpleName: elseExpr
p5928
tp5929
F0.5
s(g1553
I42
g1554
Vinsert
p5930
I39
VPrimitiveType: int
p5931
tp5932
I2
s(g1321
I42
g1322
Vinsert
p5933
I27
VInfixExpression: !=
p5934
tp5935
I1
s(g2872
I42
g2873
Vinsert
p5936
I14
VClassInstanceCreation
p5937
tp5938
I2
s(g4979
I42
g4980
Vinsert
p5939
I41
VReturnStatement
p5940
tp5941
I1
s(g583
I42
g584
Vinsert
p5942
I27
VInfixExpression: <
p5943
tp5944
I1
s(g1573
I42
g1574
Vinsert
p5945
I44
VSingleVariableDeclaration
p5946
tp5947
F0.25
s(g5206
I42
g5207
Vinsert
p5948
I13
VCharacterLiteral: '\u005cuD800'
p5949
tp5950
I1
s(g300
I42
g301
Vinsert
p5951
I43
VSimpleType: Symbol
p5952
tp5953
I1
s(g3100
I42
g3101
Vinsert
p5954
I25
VIfStatement
p5955
tp5956
I2
s(g421
I42
g422
Vinsert
p5957
I5
VArrayType: char[]
p5958
tp5959
I1
s(Vinsert
p5960
I42
VSimpleName: getWatches
p5961
Vinsert
p5962
I59
VVariableDeclarationFragment
p5963
tp5964
I1
s(g46
I42
g47
Vinsert
p5965
I42
VSimpleName: isReduced
p5966
tp5967
F0.5
s(g4557
I42
g4558
Vinsert
p5968
I39
VPrimitiveType: int
p5969
tp5970
I2
s(g194
I42
g195
Vinsert
p5971
I60
VVariableDeclarationStatement
p5972
tp5973
I2
s(g237
I42
g238
Vinsert
p5974
I36
VParenthesizedExpression
p5975
tp5976
I2
s(Vinsert
p5977
I42
VSimpleName: put
p5978
Vinsert
p5979
I42
VSimpleName: impl
p5980
tp5981
I2
s(Vinsert
p5982
I42
VSimpleName: next
p5983
Vinsert
p5984
I45
VStringLiteral: "Iterator must have elements to construct Iter"
p5985
tp5986
I2
s(g2697
I42
g2698
Vinsert
p5987
I8
VBlock
p5988
tp5989
I2
s(g3522
I42
g3523
Vinsert
p5990
I43
VSimpleType: Keyword
p5991
tp5992
I1
s(g391
I42
g392
Vinsert
p5993
I53
VThrowStatement
p5994
tp5995
F0.25
s(g765
I42
g766
Vinsert
p5996
I58
VVariableDeclarationExpression
p5997
tp5998
I2
s(g3261
I42
g3262
Vinsert
p5999
I42
VSimpleName: f
p6000
tp6001
I1
s(Vinsert
p6002
I42
VSimpleName: rest
p6003
Vinsert
p6004
I42
VSimpleName: comp
p6005
tp6006
I1
s(g1401
I42
g1402
Vinsert
p6007
I43
VSimpleType: V
p6008
tp6009
F0.25
s(g4549
I42
g4550
Vinsert
p6010
I42
VSimpleName: IPersistentCollection
p6011
tp6012
I1
s(g1263
I42
g1264
Vinsert
p6013
I42
VSimpleName: val
p6014
tp6015
F0.5
s(Vinsert
p6016
I42
VSimpleName: count
p6017
Vinsert
p6018
I42
VSimpleName: ListMap
p6019
tp6020
F0.25
s(Vinsert
p6021
I42
VSimpleName: get
p6022
Vinsert
p6023
I34
VNumberLiteral: 1
p6024
tp6025
I3
s(Vinsert
p6026
I42
VSimpleName: getClass
p6027
Vinsert
p6028
I45
VStringLiteral: "Expecting var, "
p6029
tp6030
I1
s(g199
I42
g200
Vinsert
p6031
I42
VSimpleName: visitMethodInsn
p6032
tp6033
I1
s(g1050
I42
g1051
Vinsert
p6034
I45
VStringLiteral: "clojure.elide.meta"
p6035
tp6036
I1
s(g814
I42
g815
Vinsert
p6037
I27
VInfixExpression: ==
p6038
tp6039
I1
s(Vinsert
p6040
I42
VSimpleName: intValue
p6041
Vinsert
p6042
I27
VInfixExpression: <<
p6043
tp6044
I1
s(Vinsert
p6045
I42
VSimpleName: getName
p6046
Vinsert
p6047
I42
VSimpleName: Modifier
p6048
tp6049
I1
s(g3619
I42
g3620
Vinsert
p6050
I43
VSimpleType: TRef
p6051
tp6052
I1
s(g1770
I42
g1771
Vinsert
p6053
I51
VSynchronizedStatement
p6054
tp6055
I1
s(g1014
I42
g1015
Vinsert
p6056
I8
VBlock
p6057
tp6058
F0.25
s(Vinsert
p6059
I42
VSimpleName: nth
p6060
Vinsert
p6061
I8
VBlock
p6062
tp6063
I9
s(g898
I42
g899
Vinsert
p6064
I42
VSimpleName: TRef
p6065
tp6066
I1
s(g2140
I42
g2141
Vinsert
p6067
I12
VCatchClause
p6068
tp6069
I1
s(g2159
I42
g2160
Vinsert
p6070
I32
VMethodInvocation
p6071
tp6072
I1
s(g4295
I42
g4296
Vinsert
p6073
I42
VSimpleName: getType
p6074
tp6075
F0.25
s(Vinsert
p6076
I42
VSimpleName: intValue
p6077
Vinsert
p6078
I59
VVariableDeclarationFragment
p6079
tp6080
I3
s(g358
I42
g359
Vinsert
p6081
I43
VSimpleType: ISeq
p6082
tp6083
I3
s(Vinsert
p6084
I42
VSimpleName: withMeta
p6085
Vinsert
p6086
I45
VStringLiteral: "Class"
p6087
tp6088
F0.25
s(g699
I42
g700
Vinsert
p6089
I36
VParenthesizedExpression
p6090
tp6091
I1
s(Vinsert
p6092
I42
VSimpleName: hashCode
p6093
Vinsert
p6094
I42
VSimpleName: ret
p6095
tp6096
I1
s(g3105
I42
g3106
Vinsert
p6097
I83
VModifier: static
p6098
tp6099
I1
s(g1167
I42
g1168
Vinsert
p6100
I32
VMethodInvocation
p6101
tp6102
I1
s(Vinsert
p6103
I42
VSimpleName: seq
p6104
Vinsert
p6105
I42
VSimpleName: IPersistentCollection
p6106
tp6107
I3
s(g2405
I42
g2406
Vinsert
p6108
I8
VBlock
p6109
tp6110
F38.25
s(g2964
I42
g2965
Vinsert
p6111
I42
VSimpleName: RetryException
p6112
tp6113
F0.25
s(Vinsert
p6114
I42
VSimpleName: iterator
p6115
Vinsert
p6116
I7
VAssignment: =
p6117
tp6118
I1
s(g994
I42
g995
Vinsert
p6119
I42
VSimpleName: n
p6120
tp6121
F1.25
s(g1611
I42
g1612
Vinsert
p6122
I32
VMethodInvocation
p6123
tp6124
F14.5
s(g3229
I42
g3230
Vinsert
p6125
I39
VPrimitiveType: int
p6126
tp6127
F0.25
s(g5982
I42
g5983
Vinsert
p6128
I14
VClassInstanceCreation
p6129
tp6130
I2
s(g572
I42
g573
Vinsert
p6131
I42
VSimpleName: i
p6132
tp6133
I1
s(g411
I42
g412
Vinsert
p6134
I43
VSimpleType: Exception
p6135
tp6136
F0.25
s(g2294
I42
g2295
Vinsert
p6137
I43
VSimpleType: StringSeq
p6138
tp6139
F0.25
s(Vinsert
p6140
I42
VSimpleName: load
p6141
Vinsert
p6142
I43
VSimpleType: InputStream
p6143
tp6144
I1
s(g1172
I42
g1173
Vinsert
p6145
I42
VSimpleName: v
p6146
tp6147
F1.25
s(g2073
I42
g2074
Vinsert
p6148
I43
VSimpleType: Boolean
p6149
tp6150
I1
s(g994
I42
g995
Vinsert
p6151
I32
VMethodInvocation
p6152
tp6153
I1
s(g154
I42
g155
Vinsert
p6154
I45
VStringLiteral: "Value out of range for long: "
p6155
tp6156
F0.25
s(g2596
I42
g2597
Vinsert
p6157
I27
VInfixExpression: *
p6158
tp6159
I1
s(g2729
I42
g2730
Vinsert
p6160
I14
VClassInstanceCreation
p6161
tp6162
I1
s(g6114
I42
g6115
Vinsert
p6163
I42
VSimpleName: add
p6164
tp6165
I3
s(Vinsert
p6166
I42
VSimpleName: hasNext
p6167
Vinsert
p6168
I42
VSimpleName: mi
p6169
tp6170
I1
s(g3500
I42
g3501
Vinsert
p6171
I42
VSimpleName: paramType
p6172
tp6173
I1
s(Vinsert
p6174
I42
VSimpleName: emit
p6175
Vinsert
p6176
I44
VSingleVariableDeclaration
p6177
tp6178
F1.25
s(g5019
I42
g5020
Vinsert
p6179
I42
VSimpleName: hash
p6180
tp6181
I1
s(g2615
I42
g2616
Vinsert
p6182
I42
VSimpleName: MATH_CONTEXT
p6183
tp6184
I1
s(g189
I42
g190
Vinsert
p6185
I39
VPrimitiveType: double
p6186
tp6187
I1
s(g3389
I42
g3390
Vinsert
p6188
I42
VSimpleName: SOURCE_PATH
p6189
tp6190
I1
s(g290
I42
g291
Vinsert
p6191
I83
VModifier: final
p6192
tp6193
F0.25
s(g2790
I42
g2791
Vinsert
p6194
I43
VSimpleType: IMapEntry
p6195
tp6196
I3
s(g760
I42
g761
Vinsert
p6197
I8
VBlock
p6198
tp6199
I2
s(g4404
I42
g4405
Vinsert
p6200
I42
VSimpleName: HostExpr
p6201
tp6202
I2
s(Vinsert
p6203
I42
VSimpleName: charAt
p6204
Vinsert
p6205
I39
VPrimitiveType: int
p6206
tp6207
I1
s(g4905
I42
g4906
Vinsert
p6208
I43
VSimpleType: Exception
p6209
tp6210
F1.0
s(g4956
I42
g4957
Vinsert
p6211
I34
VNumberLiteral: 2
p6212
tp6213
I1
s(g5634
I42
g5635
Vinsert
p6214
I43
VSimpleType: LineNumberingPushbackReader
p6215
tp6216
I2
s(g3405
I42
g3406
Vinsert
p6217
I43
VSimpleType: Writer
p6218
tp6219
I2
s(g5050
I42
g5051
Vinsert
p6220
I83
VModifier: final
p6221
tp6222
F1.25
s(g1386
I42
g1387
Vinsert
p6223
I42
VSimpleName: name
p6224
tp6225
I1
s(g5055
I42
g5056
Vinsert
p6226
I42
VSimpleName: getValue
p6227
tp6228
F0.25
s(Vinsert
p6229
I42
VSimpleName: size
p6230
Vinsert
p6231
I43
VSimpleType: Exception
p6232
tp6233
F0.25
s(Vinsert
p6234
I42
VSimpleName: replace
p6235
Vinsert
p6236
I25
VIfStatement
p6237
tp6238
I1
s(g333
I42
g334
Vinsert
p6239
I42
VSimpleName: keywords
p6240
tp6241
I1
s(g4259
I42
g4260
Vinsert
p6242
I42
VSimpleName: format
p6243
tp6244
I1
s(g4343
I42
g4344
Vinsert
p6245
I22
VFieldAccess
p6246
tp6247
F0.25
s(g5290
I42
g5291
Vinsert
p6248
I11
VCastExpression
p6249
tp6250
F1.25
s(g2657
I42
g2658
Vinsert
p6251
I42
VSimpleName: IdentityHashMap
p6252
tp6253
I2
s(g4891
I42
g4892
Vinsert
p6254
I42
VSimpleName: balanceLeft
p6255
tp6256
F0.5
s(g2037
I42
g2038
Vinsert
p6257
I37
VPostfixExpression: ++
p6258
tp6259
I2
s(g3541
I42
g3542
Vinsert
p6260
I49
VSwitchCase
p6261
tp6262
I2
s(g515
I42
g516
Vinsert
p6263
I42
VSimpleName: list
p6264
tp6265
I2
s(g3973
I42
g3974
Vinsert
p6266
I42
VSimpleName: o1
p6267
tp6268
F1.25
s(g1461
I42
g1462
Vinsert
p6269
I42
VSimpleName: Exception
p6270
tp6271
F1.75
s(g4612
I42
g4613
Vinsert
p6272
I14
VClassInstanceCreation
p6273
tp6274
I1
s(Vinsert
p6275
I42
VSimpleName: get
p6276
Vinsert
p6277
I42
VSimpleName: symbols
p6278
tp6279
I1
s(g5236
I42
g5237
Vinsert
p6280
I42
VSimpleName: exprs
p6281
tp6282
I1
s(g386
I42
g387
Vinsert
p6283
I27
VInfixExpression: >
p6284
tp6285
I1
s(g4557
I42
g4558
Vinsert
p6286
I42
VSimpleName: meth
p6287
tp6288
I1
s(Vinsert
p6289
I42
VSimpleName: get
p6290
Vinsert
p6291
I42
VSimpleName: method
p6292
tp6293
I1
s(g1273
I42
g1274
Vinsert
p6294
I62
VInstanceofExpression
p6295
tp6296
I1
s(g2883
I42
g2884
Vinsert
p6297
I40
VQualifiedName: Transaction.Info
p6298
tp6299
F0.25
s(Vinsert
p6300
I42
VSimpleName: setName
p6301
Vinsert
p6302
I8
VBlock
p6303
tp6304
I1
s(g2896
I42
g2897
Vinsert
p6305
I49
VSwitchCase
p6306
tp6307
I6
s(g857
I42
g858
Vinsert
p6308
I25
VIfStatement
p6309
tp6310
F24.25
s(g676
I42
g677
Vinsert
p6311
I8
VBlock
p6312
tp6313
I2
s(g318
I42
g319
Vinsert
p6314
I31
VMethodDeclaration
p6315
tp6316
F0.25
s(g1596
I42
g1597
Vinsert
p6317
I11
VCastExpression
p6318
tp6319
F4.25
s(g2371
I42
g2372
Vinsert
p6320
I42
VSimpleName: ObjectStreamException
p6321
tp6322
F0.25
s(g1037
I42
g1038
Vinsert
p6323
I59
VVariableDeclarationFragment
p6324
tp6325
I5
s(g114
I42
g115
Vinsert
p6326
I42
VSimpleName: arg7
p6327
tp6328
F0.25
s(g1707
I42
g1708
Vinsert
p6329
I43
VSimpleType: Number
p6330
tp6331
F0.5
s(g929
I42
g930
Vinsert
p6332
I42
VSimpleName: MapEntry
p6333
tp6334
I2
s(Vinsert
p6335
I42
VSimpleName: group
p6336
Vinsert
p6337
I21
VExpressionStatement
p6338
tp6339
I1
s(g3229
I42
g3230
Vinsert
p6340
I44
VSingleVariableDeclaration
p6341
tp6342
F0.5
s(g11
I42
g12
Vinsert
p6343
I42
VSimpleName: Numbers
p6344
tp6345
I1
s(g1401
I42
g1402
Vinsert
p6346
I42
VSimpleName: poll
p6347
tp6348
I1
s(Vinsert
p6349
I42
VSimpleName: getField
p6350
Vinsert
p6351
I42
VSimpleName: targetType
p6352
tp6353
I1
s(g1606
I42
g1607
Vinsert
p6354
I42
VSimpleName: eval
p6355
tp6356
I1
s(g3591
I42
g3592
Vinsert
p6357
I57
VTypeLiteral
p6358
tp6359
I2
s(g3282
I42
g3283
Vinsert
p6360
I45
VStringLiteral: "refer"
p6361
tp6362
I1
s(g3681
I42
g3682
Vinsert
p6363
I42
VSimpleName: o
p6364
tp6365
I2
s(g4394
I42
g4395
Vinsert
p6366
I25
VIfStatement
p6367
tp6368
I4
s(Vinsert
p6369
I42
VSimpleName: meta
p6370
Vinsert
p6371
I54
VTryStatement
p6372
tp6373
I1
s(g3087
I42
g3088
Vinsert
p6374
I42
VSimpleName: target
p6375
tp6376
F6.25
s(Vinsert
p6377
I42
VSimpleName: get
p6378
Vinsert
p6379
I42
VSimpleName: PrintWriter
p6380
tp6381
F2.75
s(g1127
I42
g1128
Vinsert
p6382
I42
VSimpleName: emitUnboxed
p6383
tp6384
I1
s(g6021
I42
g6022
Vinsert
p6385
I38
VPrefixExpression: -
p6386
tp6387
I1
s(g4110
I42
g4111
Vinsert
p6388
I42
VSimpleName: notifyWatches
p6389
tp6390
F0.25
s(g3841
I42
g3842
Vinsert
p6391
I32
VMethodInvocation
p6392
tp6393
F1.25
s(g1500
I42
g1501
Vinsert
p6394
I43
VSimpleType: Symbol
p6395
tp6396
I1
s(g295
I42
g296
Vinsert
p6397
I43
VSimpleType: Object
p6398
tp6399
F0.25
s(g4134
I42
g4135
Vinsert
p6400
I42
VSimpleName: setValidator
p6401
tp6402
F0.25
s(g119
I42
g120
Vinsert
p6403
I41
VReturnStatement
p6404
tp6405
I1
s(g770
I42
g771
Vinsert
p6406
I45
VStringLiteral: "+"
p6407
tp6408
I1
s(Vinsert
p6409
I42
VSimpleName: isPrimitive
p6410
Vinsert
p6411
I8
VBlock
p6412
tp6413
I3
s(g348
I42
g349
Vinsert
p6414
I62
VInstanceofExpression
p6415
tp6416
I3
s(g5664
I42
g5665
Vinsert
p6417
I60
VVariableDeclarationStatement
p6418
tp6419
I3
s(g3121
I42
g3122
Vinsert
p6420
I42
VSimpleName: ITransientSet
p6421
tp6422
I2
s(g323
I42
g324
Vinsert
p6423
I44
VSingleVariableDeclaration
p6424
tp6425
F0.5
s(g2332
I42
g2333
Vinsert
p6426
I38
VPrefixExpression: !
p6427
tp6428
I3
s(g2935
I42
g2936
Vinsert
p6429
I34
VNumberLiteral: 1
p6430
tp6431
I1
s(g814
I42
g815
Vinsert
p6432
I33
VNullLiteral
p6433
tp6434
I1
s(g5832
I42
g5833
Vinsert
p6435
I27
VInfixExpression: ==
p6436
tp6437
I2
s(g3175
I42
g3176
Vinsert
p6438
I42
VSimpleName: Label
p6439
tp6440
I1
s(g5695
I42
g5696
Vinsert
p6441
I43
VSimpleType: IllegalArgumentException
p6442
tp6443
I1
s(g4718
I42
g4719
Vinsert
p6444
I44
VSingleVariableDeclaration
p6445
tp6446
F1.5
s(g1977
I42
g1978
Vinsert
p6447
I27
VInfixExpression: +
p6448
tp6449
F0.25
s(Vinsert
p6450
I42
VSimpleName: hashCode
p6451
Vinsert
p6452
I27
VInfixExpression: &
p6453
tp6454
I1
s(Vinsert
p6455
I42
VSimpleName: set
p6456
Vinsert
p6457
I42
VSimpleName: root
p6458
tp6459
F0.5
s(g1490
I42
g1491
Vinsert
p6460
I43
VSimpleType: MethodVisitor
p6461
tp6462
I1
s(g2197
I42
g2198
Vinsert
p6463
I27
VInfixExpression: +
p6464
tp6465
I2
s(g466
I42
g467
Vinsert
p6466
I42
VSimpleName: coll
p6467
tp6468
I2
s(g3384
I42
g3385
Vinsert
p6469
I42
VSimpleName: newImpl
p6470
tp6471
I4
s(Vinsert
p6472
I42
VSimpleName: rest
p6473
Vinsert
p6474
I34
VNumberLiteral: 4
p6475
tp6476
I1
s(Vinsert
p6477
I42
VSimpleName: compare
p6478
Vinsert
p6479
I42
VSimpleName: x
p6480
tp6481
F0.25
s(g994
I42
g995
Vinsert
p6482
I43
VSimpleType: Object
p6483
tp6484
F0.25
s(g1797
I42
g1798
Vinsert
p6485
I42
VSimpleName: k2
p6486
tp6487
F9.25
s(g4694
I42
g4695
Vinsert
p6488
I36
VParenthesizedExpression
p6489
tp6490
I1
s(Vinsert
p6491
I42
VSimpleName: booleanCast
p6492
Vinsert
p6493
I42
VSimpleName: e
p6494
tp6495
I1
s(g343
I42
g344
Vinsert
p6496
I42
VSimpleName: findInMemoryClass
p6497
tp6498
I1
s(g588
I42
g589
Vinsert
p6499
I27
VInfixExpression: ==
p6500
tp6501
I1
s(g2273
I42
g2274
Vinsert
p6502
I8
VBlock
p6503
tp6504
I1
s(Vinsert
p6505
I42
VSimpleName: getReturnType
p6506
Vinsert
p6507
I14
VClassInstanceCreation
p6508
tp6509
I1
s(g847
I42
g848
Vinsert
p6510
I83
VModifier: final
p6511
tp6512
F0.5
s(Vinsert
p6513
I42
VSimpleName: pop
p6514
Vinsert
p6515
I42
VSimpleName: RT_TYPE
p6516
tp6517
I1
s(Vinsert
p6518
I42
VSimpleName: put
p6519
Vinsert
p6520
I42
VSimpleName: Symbol
p6521
tp6522
F1.25
s(g1263
I42
g1264
Vinsert
p6523
I42
VSimpleName: isBound
p6524
tp6525
F0.25
s(g1014
I42
g1015
Vinsert
p6526
I42
VSimpleName: Namespace
p6527
tp6528
F0.25
s(g1218
I42
g1219
Vinsert
p6529
I42
VSimpleName: valAt
p6530
tp6531
I1
s(g6059
I42
g6060
Vinsert
p6532
I42
VSimpleName: notFound
p6533
tp6534
F0.25
s(g471
I42
g472
Vinsert
p6535
I42
VSimpleName: T
p6536
tp6537
F0.25
s(g5495
I42
g5496
Vinsert
p6538
I42
VSimpleName: es
p6539
tp6540
I4
s(g4718
I42
g4719
Vinsert
p6541
I42
VSimpleName: AFn
p6542
tp6543
I3
s(g4267
I42
g4268
Vinsert
p6544
I53
VThrowStatement
p6545
tp6546
I1
s(g5008
I42
g5009
Vinsert
p6547
I42
VSimpleName: isUnquote
p6548
tp6549
F1.25
s(Vinsert
p6550
I42
VSimpleName: count
p6551
Vinsert
p6552
I42
VSimpleName: more
p6553
tp6554
F0.25
s(g2935
I42
g2936
Vinsert
p6555
I43
VSimpleType: Node
p6556
tp6557
I2
s(g237
I42
g238
Vinsert
p6558
I25
VIfStatement
p6559
tp6560
I1
s(Vinsert
p6561
I42
VSimpleName: checkCast
p6562
Vinsert
p6563
I25
VIfStatement
p6564
tp6565
I1
s(Vinsert
p6566
I42
VSimpleName: cons
p6567
Vinsert
p6568
I27
VInfixExpression: !=
p6569
tp6570
I1
s(g628
I42
g629
Vinsert
p6571
I27
VInfixExpression: ==
p6572
tp6573
F0.25
s(g2262
I42
g2263
Vinsert
p6574
I32
VMethodInvocation
p6575
tp6576
F55.0
s(g3033
I42
g3034
Vinsert
p6577
I34
VNumberLiteral: 0
p6578
tp6579
I2
s(g5122
I42
g5123
Vinsert
p6580
I42
VSimpleName: s
p6581
tp6582
I26
s(g16
I42
g17
Vinsert
p6583
I42
VSimpleName: RT
p6584
tp6585
I1
s(g1967
I42
g1968
Vinsert
p6586
I33
VNullLiteral
p6587
tp6588
F0.25
s(g4259
I42
g4260
Vinsert
p6589
I45
VStringLiteral: "Object ~A"
p6590
tp6591
I1
s(g562
I42
g563
Vinsert
p6592
I42
VSimpleName: Number
p6593
tp6594
I3
s(g285
I42
g286
Vinsert
p6595
I45
VStringLiteral: "jar"
p6596
tp6597
I1
s(g2221
I42
g2222
Vinsert
p6598
I42
VSimpleName: next
p6599
tp6600
F3.25
s(g6229
I42
g6230
Vinsert
p6601
I58
VVariableDeclarationExpression
p6602
tp6603
I1
s(g3237
I42
g3238
Vinsert
p6604
I42
VSimpleName: Type
p6605
tp6606
I5
s(g2803
I42
g2804
Vinsert
p6607
I34
VNumberLiteral: 0
p6608
tp6609
I1
s(Vinsert
p6610
I42
VSimpleName: intern
p6611
Vinsert
p6612
I42
VSimpleName: FILE_KEY
p6613
tp6614
I1
s(g1967
I42
g1968
Vinsert
p6615
I42
VSimpleName: Exception
p6616
tp6617
F0.5
s(g11
I42
g12
Vinsert
p6618
I8
VBlock
p6619
tp6620
I1
s(g6234
I42
g6235
Vinsert
p6621
I33
VNullLiteral
p6622
tp6623
I1
s(g2159
I42
g2160
Vinsert
p6624
I8
VBlock
p6625
tp6626
I1
s(g431
I42
g432
Vinsert
p6627
I43
VSimpleType: IllegalArgumentException
p6628
tp6629
I1
s(g888
I42
g889
Vinsert
p6630
I42
VSimpleName: getCause
p6631
tp6632
F1.75
s(g5505
I42
g5506
Vinsert
p6633
I42
VSimpleName: Symbol
p6634
tp6635
I1
s(g4718
I42
g4719
Vinsert
p6636
I43
VSimpleType: Object
p6637
tp6638
F1.25
s(Vinsert
p6639
I42
VSimpleName: getMethod
p6640
Vinsert
p6641
I42
VSimpleName: Symbol
p6642
tp6643
I2
s(g3522
I42
g3523
Vinsert
p6644
I38
VPrefixExpression: !
p6645
tp6646
I1
s(g3076
I42
g3077
Vinsert
p6647
I42
VSimpleName: msecs
p6648
tp6649
F0.25
s(Vinsert
p6650
I42
VSimpleName: runtimeException
p6651
Vinsert
p6652
I43
VSimpleType: ClassNotFoundException
p6653
tp6654
F0.5
s(g2387
I42
g2388
Vinsert
p6655
I32
VMethodInvocation
p6656
tp6657
I3
s(g973
I42
g974
Vinsert
p6658
I42
VSimpleName: sb
p6659
tp6660
I2
s(g4176
I42
g4177
Vinsert
p6661
I43
VSimpleType: Stream
p6662
tp6663
I3
s(g4452
I42
g4453
Vinsert
p6664
I43
VSimpleType: Var
p6665
tp6666
I1
s(g1991
I42
g1992
Vinsert
p6667
I32
VMethodInvocation
p6668
tp6669
I1
s(Vinsert
p6670
I42
VSimpleName: put
p6671
Vinsert
p6672
I43
VSimpleType: Namespace
p6673
tp6674
I1
s(g6670
I42
g6671
Vinsert
p6675
I42
VSimpleName: ns
p6676
tp6677
I2
s(g898
I42
g899
Vinsert
p6678
I21
VExpressionStatement
p6679
tp6680
I2
s(g999
I42
g1000
Vinsert
p6681
I32
VMethodInvocation
p6682
tp6683
I4
s(g46
I42
g47
Vinsert
p6684
I32
VMethodInvocation
p6685
tp6686
F2.5
s(g735
I42
g736
Vinsert
p6687
I42
VSimpleName: id
p6688
tp6689
F0.25
s(g552
I42
g553
Vinsert
p6690
I42
VSimpleName: Symbol
p6691
tp6692
I2
s(g2451
I42
g2452
Vinsert
p6693
I42
VSimpleName: length
p6694
tp6695
I1
s(Vinsert
p6696
I42
VSimpleName: put
p6697
Vinsert
p6698
I13
VCharacterLiteral: ':'
p6699
tp6700
I1
s(g4663
I42
g4664
Vinsert
p6701
I44
VSingleVariableDeclaration
p6702
tp6703
F0.25
s(Vinsert
p6704
I42
VSimpleName: cons
p6705
Vinsert
p6706
I14
VClassInstanceCreation
p6707
tp6708
I3
s(g199
I42
g200
Vinsert
p6709
I25
VIfStatement
p6710
tp6711
I1
s(g2883
I42
g2884
Vinsert
p6712
I43
VSimpleType: TVal
p6713
tp6714
I1
s(Vinsert
p6715
I42
VSimpleName: invoke
p6716
Vinsert
p6717
I43
VSimpleType: Iterate
p6718
tp6719
I1
s(g3541
I42
g3542
Vinsert
p6720
I10
VBreakStatement
p6721
tp6722
I1
s(g21
I42
g22
Vinsert
p6723
I43
VSimpleType: IObj
p6724
tp6725
F3.25
s(Vinsert
p6726
I42
VSimpleName: getJavaClass
p6727
Vinsert
p6728
I42
VSimpleName: size
p6729
tp6730
I1
s(g3092
I42
g3093
Vinsert
p6731
I44
VSingleVariableDeclaration
p6732
tp6733
F0.25
s(g5394
I42
g5395
Vinsert
p6734
I83
VModifier: public
p6735
tp6736
F0.5
s(Vinsert
p6737
I42
VSimpleName: invoke
p6738
Vinsert
p6739
I42
VSimpleName: start
p6740
tp6741
F1.25
s(Vinsert
p6742
I42
VSimpleName: next
p6743
Vinsert
p6744
I42
VSimpleName: doInvoke
p6745
tp6746
I1
s(g4447
I42
g4448
Vinsert
p6747
I42
VSimpleName: sym
p6748
tp6749
I1
s(g2904
I42
g2905
Vinsert
p6750
I42
VSimpleName: notFound
p6751
tp6752
F0.5
s(g3681
I42
g3682
Vinsert
p6753
I42
VSimpleName: T5
p6754
tp6755
I1
s(g3151
I42
g3152
Vinsert
p6756
I42
VSimpleName: Parser
p6757
tp6758
F0.25
s(Vinsert
p6759
I42
VSimpleName: set
p6760
Vinsert
p6761
I42
VSimpleName: rand2
p6762
tp6763
I1
s(g1045
I42
g1046
Vinsert
p6764
I42
VSimpleName: sym
p6765
tp6766
I1
s(g5664
I42
g5665
Vinsert
p6767
I32
VMethodInvocation
p6768
tp6769
I3
s(Vinsert
p6770
I42
VSimpleName: emit
p6771
Vinsert
p6772
I53
VThrowStatement
p6773
tp6774
I1
s(g2697
I42
g2698
Vinsert
p6775
I21
VExpressionStatement
p6776
tp6777
I1
s(g3229
I42
g3230
Vinsert
p6778
I41
VReturnStatement
p6779
tp6780
I1
s(Vinsert
p6781
I42
VSimpleName: length
p6782
Vinsert
p6783
I42
VSimpleName: ISeq
p6784
tp6785
F0.25
s(Vinsert
p6786
I42
VSimpleName: throwArity
p6787
Vinsert
p6788
I42
VSimpleName: arg2
p6789
tp6790
F0.25
s(g139
I42
g140
Vinsert
p6791
I42
VSimpleName: COMMITTING
p6792
tp6793
I1
s(g760
I42
g761
Vinsert
p6794
I39
VPrimitiveType: int
p6795
tp6796
I1
s(g4171
I42
g4172
Vinsert
p6797
I32
VMethodInvocation
p6798
tp6799
I9
s(g5008
I42
g5009
Vinsert
p6800
I42
VSimpleName: item
p6801
tp6802
I1
s(g3370
I42
g3371
Vinsert
p6803
I58
VVariableDeclarationExpression
p6804
tp6805
I15
s(Vinsert
p6806
I42
VSimpleName: get
p6807
Vinsert
p6808
I42
VSimpleName: watchers
p6809
tp6810
I1
s(g3841
I42
g3842
Vinsert
p6811
I42
VSimpleName: createFromMap
p6812
tp6813
F0.25
s(g2387
I42
g2388
Vinsert
p6814
I27
VInfixExpression: ==
p6815
tp6816
I2
s(g3973
I42
g3974
Vinsert
p6817
I44
VSingleVariableDeclaration
p6818
tp6819
F0.25
s(g5055
I42
g5056
Vinsert
p6820
I59
VVariableDeclarationFragment
p6821
tp6822
I1
s(Vinsert
p6823
I42
VSimpleName: var
p6824
Vinsert
p6825
I45
VStringLiteral: "*ns*"
p6826
tp6827
I1
s(g3400
I42
g3401
Vinsert
p6828
I42
VSimpleName: PrintWriter
p6829
tp6830
I1
s(g1273
I42
g1274
Vinsert
p6831
I32
VMethodInvocation
p6832
tp6833
I1
s(g1243
I42
g1244
Vinsert
p6834
I42
VSimpleName: isDynamic
p6835
tp6836
F0.75
s(Vinsert
p6837
I42
VSimpleName: vector
p6838
Vinsert
p6839
I32
VMethodInvocation
p6840
tp6841
F1.5
s(g3681
I42
g3682
Vinsert
p6842
I42
VSimpleName: Util
p6843
tp6844
I3
s(Vinsert
p6845
I42
VSimpleName: booleanCast
p6846
Vinsert
p6847
I16
VConditionalExpression
p6848
tp6849
I1
s(g1331
I42
g1332
Vinsert
p6850
I34
VNumberLiteral: 0
p6851
tp6852
I1
s(g3709
I42
g3710
Vinsert
p6853
I27
VInfixExpression: ==
p6854
tp6855
I1
s(g3400
I42
g3401
Vinsert
p6856
I59
VVariableDeclarationFragment
p6857
tp6858
I2
s(Vinsert
p6859
I42
VSimpleName: sneakyThrow
p6860
Vinsert
p6861
I43
VSimpleType: String
p6862
tp6863
F0.25
s(g1683
I42
g1684
Vinsert
p6864
I36
VParenthesizedExpression
p6865
tp6866
I1
s(g5592
I42
g5593
Vinsert
p6867
I42
VSimpleName: Math
p6868
tp6869
I1
s(g3105
I42
g3106
Vinsert
p6870
I59
VVariableDeclarationFragment
p6871
tp6872
I1
s(g1386
I42
g1387
Vinsert
p6873
I42
VSimpleName: intern
p6874
tp6875
I1
s(g1474
I42
g1475
Vinsert
p6876
I43
VSimpleType: Keyword
p6877
tp6878
I1
s(Vinsert
p6879
I42
VSimpleName: intern
p6880
Vinsert
p6881
I57
VTypeLiteral
p6882
tp6883
I2
s(Vinsert
p6884
I42
VSimpleName: hasheq
p6885
Vinsert
p6886
I33
VNullLiteral
p6887
tp6888
I2
s(g4224
I42
g4225
Vinsert
p6889
I41
VReturnStatement
p6890
tp6891
I1
s(g1905
I42
g1906
Vinsert
p6892
I42
VSimpleName: forName
p6893
tp6894
I1
s(g1192
I42
g1193
Vinsert
p6895
I43
VSimpleType: Ratio
p6896
tp6897
I2
s(g832
I42
g833
Vinsert
p6898
I42
VSimpleName: gen
p6899
tp6900
I9
s(g3229
I42
g3230
Vinsert
p6901
I32
VMethodInvocation
p6902
tp6903
I2
s(g4232
I42
g4233
Vinsert
p6904
I42
VSimpleName: reduce
p6905
tp6906
F0.25
s(g4303
I42
g4304
Vinsert
p6907
I32
VMethodInvocation
p6908
tp6909
I1
s(g2649
I42
g2650
Vinsert
p6910
I44
VSingleVariableDeclaration
p6911
tp6912
F0.5
s(g5111
I42
g5112
Vinsert
p6913
I42
VSimpleName: Method
p6914
tp6915
I1
s(Vinsert
p6916
I42
VSimpleName: nth
p6917
Vinsert
p6918
I42
VSimpleName: p
p6919
tp6920
I1
s(Vinsert
p6921
I42
VSimpleName: first
p6922
Vinsert
p6923
I27
VInfixExpression: !=
p6924
tp6925
I8
s(g1649
I42
g1650
Vinsert
p6926
I53
VThrowStatement
p6927
tp6928
I1
s(g1500
I42
g1501
Vinsert
p6929
I42
VSimpleName: require
p6930
tp6931
I1
s(g3151
I42
g3152
Vinsert
p6932
I59
VVariableDeclarationFragment
p6933
tp6934
I2
s(g1162
I42
g1163
Vinsert
p6935
I42
VSimpleName: RT
p6936
tp6937
F7.25
s(g3644
I42
g3645
Vinsert
p6938
I42
VSimpleName: Symbol
p6939
tp6940
I23
s(Vinsert
p6941
I42
VSimpleName: getClassName
p6942
Vinsert
p6943
I42
VSimpleName: getElementType
p6944
tp6945
I1
s(Vinsert
p6946
I42
VSimpleName: forName
p6947
Vinsert
p6948
I43
VSimpleType: ClassNotFoundException
p6949
tp6950
F0.25
s(g827
I42
g828
Vinsert
p6951
I43
VSimpleType: Exception
p6952
tp6953
F0.5
s(Vinsert
p6954
I42
VSimpleName: contains
p6955
Vinsert
p6956
I60
VVariableDeclarationStatement
p6957
tp6958
I2
s(g1238
I42
g1239
Vinsert
p6959
I42
VSimpleName: equiv
p6960
tp6961
F1.25
s(g348
I42
g349
Vinsert
p6962
I33
VNullLiteral
p6963
tp6964
I5
s(g3105
I42
g3106
Vinsert
p6965
I43
VSimpleType: IPersistentMap
p6966
tp6967
I1
s(g847
I42
g848
Vinsert
p6968
I32
VMethodInvocation
p6969
tp6970
I1
s(g656
I42
g657
Vinsert
p6971
I22
VFieldAccess
p6972
tp6973
F0.25
s(g4463
I42
g4464
Vinsert
p6974
I42
VSimpleName: loadThis
p6975
tp6976
I1
s(g2586
I42
g2587
Vinsert
p6977
I42
VSimpleName: append
p6978
tp6979
I2
s(g6084
I42
g6085
Vinsert
p6980
I42
VSimpleName: CLASS
p6981
tp6982
F0.25
s(g1822
I42
g1823
Vinsert
p6983
I42
VSimpleName: intern
p6984
tp6985
I1
s(g3121
I42
g3122
Vinsert
p6986
I25
VIfStatement
p6987
tp6988
I5
s(g149
I42
g150
Vinsert
p6989
I32
VMethodInvocation
p6990
tp6991
I2
s(g91
I42
g92
Vinsert
p6992
I40
VQualifiedName: nm.name
p6993
tp6994
I1
s(g6289
I42
g6290
Vinsert
p6995
I43
VSimpleType: FnMethod
p6996
tp6997
I2
s(g2221
I42
g2222
Vinsert
p6998
I41
VReturnStatement
p6999
tp7000
F2.25
s(g2687
I42
g2688
Vinsert
p7001
I42
VSimpleName: IPersistentMap
p7002
tp7003
I1
s(g1925
I42
g1926
Vinsert
p7004
I41
VReturnStatement
p7005
tp7006
I1
s(g1662
I42
g1663
Vinsert
p7007
I43
VSimpleType: MetaExpr
p7008
tp7009
I2
s(Vinsert
p7010
I42
VSimpleName: newLabel
p7011
Vinsert
p7012
I42
VSimpleName: clinitgen
p7013
tp7014
I2
s(g955
I42
g956
Vinsert
p7015
I25
VIfStatement
p7016
tp7017
I3
s(g4765
I42
g4766
Vinsert
p7018
I42
VSimpleName: emit
p7019
tp7020
I1
s(g5500
I42
g5501
Vinsert
p7021
I42
VSimpleName: context
p7022
tp7023
F0.5
s(g709
I42
g710
Vinsert
p7024
I42
VSimpleName: soloExecutor
p7025
tp7026
I1
s(g1601
I42
g1602
Vinsert
p7027
I7
VAssignment: =
p7028
tp7029
F1.25
s(g4743
I42
g4744
Vinsert
p7030
I42
VSimpleName: loadArgs
p7031
tp7032
I1
s(g1840
I42
g1841
Vinsert
p7033
I83
VModifier: private
p7034
tp7035
F0.5
s(g5394
I42
g5395
Vinsert
p7036
I43
VSimpleType: Object
p7037
tp7038
F0.5
s(g4295
I42
g4296
Vinsert
p7039
I42
VSimpleName: Math
p7040
tp7041
I4
s(g4620
I42
g4621
Vinsert
p7042
I59
VVariableDeclarationFragment
p7043
tp7044
I1
s(g1286
I42
g1287
Vinsert
p7045
I7
VAssignment: =
p7046
tp7047
F3.25
s(g1936
I42
g1937
Vinsert
p7048
I32
VMethodInvocation
p7049
tp7050
I2
s(g479
I42
g480
Vinsert
p7051
I42
VSimpleName: nodes
p7052
tp7053
I1
s(g71
I42
g72
Vinsert
p7054
I8
VBlock
p7055
tp7056
I1
s(g313
I42
g314
Vinsert
p7057
I42
VSimpleName: invoke
p7058
tp7059
F0.25
s(g3775
I42
g3776
Vinsert
p7060
I42
VSimpleName: IPersistentCollection
p7061
tp7062
I2
s(g6229
I42
g6230
Vinsert
p7063
I42
VSimpleName: i
p7064
tp7065
I2
s(g2891
I42
g2892
Vinsert
p7066
I41
VReturnStatement
p7067
tp7068
I9
s(g2197
I42
g2198
Vinsert
p7069
I42
VSimpleName: attrName
p7070
tp7071
I1
s(g4942
I42
g4943
Vinsert
p7072
I42
VSimpleName: from
p7073
tp7074
I1
s(g2964
I42
g2965
Vinsert
p7075
I43
VSimpleType: RetryException
p7076
tp7077
F0.25
s(g2286
I42
g2287
Vinsert
p7078
I43
VSimpleType: IPersistentMap
p7079
tp7080
I8
s(g6174
I42
g6175
Vinsert
p7081
I40
VQualifiedName: C.STATEMENT
p7082
tp7083
I2
s(g290
I42
g291
Vinsert
p7084
I59
VVariableDeclarationFragment
p7085
tp7086
F0.25
s(g3193
I42
g3194
Vinsert
p7087
I27
VInfixExpression: ==
p7088
tp7089
F1.25
s(g1104
I42
g1105
Vinsert
p7090
I42
VSimpleName: LineNumberReader
p7091
tp7092
I1
s(Vinsert
p7093
I42
VSimpleName: set
p7094
Vinsert
p7095
I42
VSimpleName: getTransaction
p7096
tp7097
I1
s(g4856
I42
g4857
Vinsert
p7098
I33
VNullLiteral
p7099
tp7100
I2
s(g6561
I42
g6562
Vinsert
p7101
I42
VSimpleName: emit
p7102
tp7103
I1
s(g3549
I42
g3550
Vinsert
p7104
I32
VMethodInvocation
p7105
tp7106
I6
s(g214
I42
g215
Vinsert
p7107
I43
VSimpleType: Class
p7108
tp7109
I3
s(g348
I42
g349
Vinsert
p7110
I42
VSimpleName: coll
p7111
tp7112
I6
s(Vinsert
p7113
I42
VSimpleName: valueOf
p7114
Vinsert
p7115
I42
VSimpleName: line
p7116
tp7117
I1
s(g960
I42
g961
Vinsert
p7118
I42
VSimpleName: C
p7119
tp7120
F0.25
s(g6335
I42
g6336
Vinsert
p7121
I36
VParenthesizedExpression
p7122
tp7123
I1
s(g1967
I42
g1968
Vinsert
p7124
I40
VQualifiedName: v.ns.name.name
p7125
tp7126
F0.25
s(g1122
I42
g1123
Vinsert
p7127
I42
VSimpleName: i
p7128
tp7129
F3.5
s(g1248
I42
g1249
Vinsert
p7130
I43
VSimpleType: Object
p7131
tp7132
F0.5
s(g4831
I42
g4832
Vinsert
p7133
I33
VNullLiteral
p7134
tp7135
I1
s(g2231
I42
g2232
Vinsert
p7136
I42
VSimpleName: Object
p7137
tp7138
I1
s(g2904
I42
g2905
Vinsert
p7139
I42
VSimpleName: Object
p7140
tp7141
F3.5
s(g2244
I42
g2245
Vinsert
p7142
I8
VBlock
p7143
tp7144
F1.25
s(g2315
I42
g2316
Vinsert
p7145
I59
VVariableDeclarationFragment
p7146
tp7147
I1
s(Vinsert
p7148
I42
VSimpleName: tagToClass
p7149
Vinsert
p7150
I27
VInfixExpression: ||
p7151
tp7152
F0.25
s(g3717
I42
g3718
Vinsert
p7153
I7
VAssignment: =
p7154
tp7155
F19.25
s(g1732
I42
g1733
Vinsert
p7156
I27
VInfixExpression: ==
p7157
tp7158
F0.5
s(g2111
I42
g2112
Vinsert
p7159
I40
VQualifiedName: java.util.Collection
p7160
tp7161
I1
s(g36
I42
g37
Vinsert
p7162
I32
VMethodInvocation
p7163
tp7164
F4.5
s(g1050
I42
g1051
Vinsert
p7165
I42
VSimpleName: RT
p7166
tp7167
I8
s(g878
I42
g879
Vinsert
p7168
I40
VQualifiedName: RT.NS_VAR
p7169
tp7170
I1
s(g4924
I42
g4925
Vinsert
p7171
I42
VSimpleName: PersistentVector
p7172
tp7173
I2
s(g466
I42
g467
Vinsert
p7174
I8
VBlock
p7175
tp7176
I5
s(g2159
I42
g2160
Vinsert
p7177
I42
VSimpleName: Exception
p7178
tp7179
F0.25
s(g4224
I42
g4225
Vinsert
p7180
I42
VSimpleName: coll
p7181
tp7182
I2
s(Vinsert
p7183
I42
VSimpleName: intern
p7184
Vinsert
p7185
I45
VStringLiteral: ".."
p7186
tp7187
F0.25
s(g2822
I42
g2823
Vinsert
p7188
I27
VInfixExpression: !=
p7189
tp7190
I1
s(g5256
I42
g5257
Vinsert
p7191
I42
VSimpleName: map
p7192
tp7193
I4
s(g247
I42
g248
Vinsert
p7194
I42
VSimpleName: u
p7195
tp7196
I1
s(g1683
I42
g1684
Vinsert
p7197
I42
VSimpleName: b
p7198
tp7199
I1
s(g4604
I42
g4605
Vinsert
p7200
I42
VSimpleName: bt
p7201
tp7202
I1
s(g1510
I42
g1511
Vinsert
p7203
I42
VSimpleName: kvs
p7204
tp7205
I1
s(g1596
I42
g1597
Vinsert
p7206
I43
VSimpleType: PersistentHashSet
p7207
tp7208
F2.25
s(g6696
I42
g6697
Vinsert
p7209
I42
VSimpleName: charAt
p7210
tp7211
I1
s(Vinsert
p7212
I42
VSimpleName: seq
p7213
Vinsert
p7214
I42
VSimpleName: ret
p7215
tp7216
I2
s(g396
I42
g397
Vinsert
p7217
I24
VForStatement
p7218
tp7219
I1
s(g4856
I42
g4857
Vinsert
p7220
I42
VSimpleName: coll
p7221
tp7222
F2.25
s(g4480
I42
g4481
Vinsert
p7223
I42
VSimpleName: Boolean
p7224
tp7225
I2
s(g2294
I42
g2295
Vinsert
p7226
I42
VSimpleName: Object
p7227
tp7228
F0.25
s(g6300
I42
g6301
Vinsert
p7229
I59
VVariableDeclarationFragment
p7230
tp7231
I1
s(g1037
I42
g1038
Vinsert
p7232
I27
VInfixExpression: +
p7233
tp7234
I1
s(g242
I42
g243
Vinsert
p7235
I21
VExpressionStatement
p7236
tp7237
I4
s(g5163
I42
g5164
Vinsert
p7238
I42
VSimpleName: list
p7239
tp7240
I1
s(g3649
I42
g3650
Vinsert
p7241
I42
VSimpleName: Namespace
p7242
tp7243
I1
s(g1456
I42
g1457
Vinsert
p7244
I53
VThrowStatement
p7245
tp7246
I3
s(g497
I42
g498
Vinsert
p7247
I32
VMethodInvocation
p7248
tp7249
I1
s(g1223
I42
g1224
Vinsert
p7250
I34
VNumberLiteral: 0
p7251
tp7252
I2
s(g786
I42
g787
Vinsert
p7253
I3
VArrayCreation
p7254
tp7255
I1
s(g1132
I42
g1133
Vinsert
p7256
I42
VSimpleName: n
p7257
tp7258
I6
s(g2018
I42
g2019
Vinsert
p7259
I42
VSimpleName: String
p7260
tp7261
F0.25
s(g4886
I42
g4887
Vinsert
p7262
I43
VSimpleType: Throwable
p7263
tp7264
I1
s(g86
I42
g87
Vinsert
p7265
I42
VSimpleName: emitClearThis
p7266
tp7267
F0.5
s(g4166
I42
g4167
Vinsert
p7268
I61
VWhileStatement
p7269
tp7270
I1
s(g318
I42
g319
Vinsert
p7271
I83
VModifier: public
p7272
tp7273
F0.25
s(g6455
I42
g6456
Vinsert
p7274
I42
VSimpleName: val
p7275
tp7276
F1.75
s(g2469
I42
g2470
Vinsert
p7277
I27
VInfixExpression: !=
p7278
tp7279
I1
s(g1157
I42
g1158
Vinsert
p7280
I43
VSimpleType: Var
p7281
tp7282
I1
s(g4942
I42
g4943
Vinsert
p7283
I27
VInfixExpression: *
p7284
tp7285
I1
s(g999
I42
g1000
Vinsert
p7286
I42
VSimpleName: ACC_PUBLIC
p7287
tp7288
I1
s(g827
I42
g828
Vinsert
p7289
I11
VCastExpression
p7290
tp7291
I1
s(g3549
I42
g3550
Vinsert
p7292
I46
VSuperConstructorInvocation
p7293
tp7294
I1
s(g1172
I42
g1173
Vinsert
p7295
I32
VMethodInvocation
p7296
tp7297
F78.0
s(g6234
I42
g6235
Vinsert
p7298
I27
VInfixExpression: !=
p7299
tp7300
I1
s(g1781
I42
g1782
Vinsert
p7301
I42
VSimpleName: s
p7302
tp7303
I26
s(Vinsert
p7304
I42
VSimpleName: equals
p7305
Vinsert
p7306
I14
VClassInstanceCreation
p7307
tp7308
F0.25
s(g2371
I42
g2372
Vinsert
p7309
I42
VSimpleName: sym
p7310
tp7311
F0.25
s(g837
I42
g838
Vinsert
p7312
I32
VMethodInvocation
p7313
tp7314
I6
s(g1678
I42
g1679
Vinsert
p7315
I42
VSimpleName: ret
p7316
tp7317
I2
s(g4831
I42
g4832
Vinsert
p7318
I8
VBlock
p7319
tp7320
I1
s(g888
I42
g889
Vinsert
p7321
I25
VIfStatement
p7322
tp7323
I3
s(g1626
I42
g1627
Vinsert
p7324
I43
VSimpleType: HostExpr
p7325
tp7326
I1
s(g2186
I42
g2187
Vinsert
p7327
I31
VMethodDeclaration
p7328
tp7329
F0.5
s(g1050
I42
g1051
Vinsert
p7330
I83
VModifier: private
p7331
tp7332
I3
s(g4497
I42
g4498
Vinsert
p7333
I38
VPrefixExpression: ++
p7334
tp7335
F0.5
s(Vinsert
p7336
I42
VSimpleName: get
p7337
Vinsert
p7338
I42
VSimpleName: PersistentIdentityListMap
p7339
tp7340
I2
s(g4867
I42
g4868
Vinsert
p7341
I33
VNullLiteral
p7342
tp7343
F0.5
s(g3522
I42
g3523
Vinsert
p7344
I42
VSimpleName: maybeField
p7345
tp7346
I1
s(g770
I42
g771
Vinsert
p7347
I42
VSimpleName: String
p7348
tp7349
I3
s(g1032
I42
g1033
Vinsert
p7350
I41
VReturnStatement
p7351
tp7352
I1
s(g1248
I42
g1249
Vinsert
p7353
I42
VSimpleName: num
p7354
tp7355
F0.25
s(g252
I42
g253
Vinsert
p7356
I42
VSimpleName: tld
p7357
tp7358
F1.25
s(g2930
I42
g2931
Vinsert
p7359
I51
VSynchronizedStatement
p7360
tp7361
I1
s(g2935
I42
g2936
Vinsert
p7362
I60
VVariableDeclarationStatement
p7363
tp7364
I1
s(g46
I42
g47
Vinsert
p7365
I25
VIfStatement
p7366
tp7367
I2
s(g2586
I42
g2587
Vinsert
p7368
I27
VInfixExpression: -
p7369
tp7370
I1
s(g2278
I42
g2279
Vinsert
p7371
I33
VNullLiteral
p7372
tp7373
I1
s(g1373
I42
g1374
Vinsert
p7374
I42
VSimpleName: LINE_BEFORE
p7375
tp7376
I1
s(g1755
I42
g1756
Vinsert
p7377
I59
VVariableDeclarationFragment
p7378
tp7379
I1
s(g1172
I42
g1173
Vinsert
p7380
I42
VSimpleName: sigtag
p7381
tp7382
I1
s(g2216
I42
g2217
Vinsert
p7383
I42
VSimpleName: LazyTransformer
p7384
tp7385
I1
s(g4343
I42
g4344
Vinsert
p7386
I59
VVariableDeclarationFragment
p7387
tp7388
F0.25
s(g1187
I42
g1188
Vinsert
p7389
I27
VInfixExpression: >=
p7390
tp7391
I1
s(g3193
I42
g3194
Vinsert
p7392
I42
VSimpleName: context
p7393
tp7394
F1.25
s(Vinsert
p7395
I42
VSimpleName: getJavaClass
p7396
Vinsert
p7397
I43
VSimpleType: MaybePrimitiveExpr
p7398
tp7399
I2
s(g608
I42
g609
Vinsert
p7400
I42
VSimpleName: mask
p7401
tp7402
I1
s(g4702
I42
g4703
Vinsert
p7403
I42
VSimpleName: TRef
p7404
tp7405
F0.25
s(g1515
I42
g1516
Vinsert
p7406
I32
VMethodInvocation
p7407
tp7408
I1
s(g1957
I42
g1958
Vinsert
p7409
I42
VSimpleName: fv
p7410
tp7411
F2.5
s(g1812
I42
g1813
Vinsert
p7412
I21
VExpressionStatement
p7413
tp7414
I1
s(g1112
I42
g1113
Vinsert
p7415
I42
VSimpleName: lock
p7416
tp7417
F0.25
s(g1027
I42
g1028
Vinsert
p7418
I42
VSimpleName: MACRO_CHECK_LOADING
p7419
tp7420
I1
s(g1424
I42
g1425
Vinsert
p7421
I42
VSimpleName: sc
p7422
tp7423
I4
s(g1432
I42
g1433
Vinsert
p7424
I53
VThrowStatement
p7425
tp7426
I1
s(Vinsert
p7427
I42
VSimpleName: second
p7428
Vinsert
p7429
I21
VExpressionStatement
p7430
tp7431
I2
s(g1535
I42
g1536
Vinsert
p7432
I52
VThisExpression
p7433
tp7434
F0.25
s(g955
I42
g956
Vinsert
p7435
I41
VReturnStatement
p7436
tp7437
I3
s(g6369
I42
g6370
Vinsert
p7438
I33
VNullLiteral
p7439
tp7440
I1
s(g3256
I42
g3257
Vinsert
p7441
I43
VSimpleType: Keyword
p7442
tp7443
F2.5
s(g247
I42
g248
Vinsert
p7444
I42
VSimpleName: readUTF8
p7445
tp7446
I1
s(g363
I42
g364
Vinsert
p7447
I42
VSimpleName: equals
p7448
tp7449
I1
s(g4886
I42
g4887
Vinsert
p7450
I42
VSimpleName: Throwable
p7451
tp7452
I1
s(g704
I42
g705
Vinsert
p7453
I42
VSimpleName: constants
p7454
tp7455
I2
s(g406
I42
g407
Vinsert
p7456
I43
VSimpleType: IDeref
p7457
tp7458
I4
s(g1802
I42
g1803
Vinsert
p7459
I43
VSimpleType: Namespace
p7460
tp7461
F0.25
s(g999
I42
g1000
Vinsert
p7462
I21
VExpressionStatement
p7463
tp7464
I1
s(g497
I42
g498
Vinsert
p7465
I42
VSimpleName: existingk
p7466
tp7467
I1
s(g3819
I42
g3820
Vinsert
p7468
I45
VStringLiteral: "clojure.lang.Var"
p7469
tp7470
I1
s(g4713
I42
g4714
Vinsert
p7471
I42
VSimpleName: Exception
p7472
tp7473
F0.5
s(g184
I42
g185
Vinsert
p7474
I62
VInstanceofExpression
p7475
tp7476
I7
s(g290
I42
g291
Vinsert
p7477
I52
VThisExpression
p7478
tp7479
I1
s(Vinsert
p7480
I42
VSimpleName: assoc
p7481
Vinsert
p7482
I42
VSimpleName: meta
p7483
tp7484
F3.25
s(g1316
I42
g1317
Vinsert
p7485
I42
VSimpleName: r
p7486
tp7487
F2.5
s(g1378
I42
g1379
Vinsert
p7488
I42
VSimpleName: isInteger
p7489
tp7490
F0.5
s(Vinsert
p7491
I42
VSimpleName: println
p7492
Vinsert
p7493
I42
VSimpleName: temp
p7494
tp7495
I1
s(g2631
I42
g2632
Vinsert
p7496
I42
VSimpleName: lpart
p7497
tp7498
I2
s(g1162
I42
g1163
Vinsert
p7499
I27
VInfixExpression: +
p7500
tp7501
I1
s(g1702
I42
g1703
Vinsert
p7502
I42
VSimpleName: Object
p7503
tp7504
I1
s(g5982
I42
g5983
Vinsert
p7505
I42
VSimpleName: IllegalStateException
p7506
tp7507
I2
s(g1765
I42
g1766
Vinsert
p7508
I43
VSimpleType: Counted
p7509
tp7510
I3
s(g755
I42
g756
Vinsert
p7511
I42
VSimpleName: mark
p7512
tp7513
F1.25
s(g2814
I42
g2815
Vinsert
p7514
I43
VSimpleType: Object
p7515
tp7516
I1
s(g1972
I42
g1973
Vinsert
p7517
I27
VInfixExpression: -
p7518
tp7519
I1
s(Vinsert
p7520
I42
VSimpleName: nth
p7521
Vinsert
p7522
I42
VSimpleName: cons
p7523
tp7524
I1
s(g4924
I42
g4925
Vinsert
p7525
I62
VInstanceofExpression
p7526
tp7527
I1
s(Vinsert
p7528
I42
VSimpleName: suppressRead
p7529
Vinsert
p7530
I25
VIfStatement
p7531
tp7532
I1
s(g4979
I42
g4980
Vinsert
p7533
I11
VCastExpression
p7534
tp7535
I1
s(g1662
I42
g1663
Vinsert
p7536
I42
VSimpleName: meta
p7537
tp7538
I2
s(g1525
I42
g1526
Vinsert
p7539
I21
VExpressionStatement
p7540
tp7541
I3
s(g2922
I42
g2923
Vinsert
p7542
I45
VStringLiteral: ":"
p7543
tp7544
F0.25
s(g3271
I42
g3272
Vinsert
p7545
I42
VSimpleName: dotname
p7546
tp7547
I1
s(g2719
I42
g2720
Vinsert
p7548
I42
VSimpleName: ctorgen
p7549
tp7550
I1
s(g725
I42
g726
Vinsert
p7551
I42
VSimpleName: bindings
p7552
tp7553
I1
s(g4059
I42
g4060
Vinsert
p7554
I43
VSimpleType: ArraySeq
p7555
tp7556
F0.25
s(g6859
I42
g6860
Vinsert
p7557
I43
VSimpleType: Exception
p7558
tp7559
F1.25
s(g1792
I42
g1793
Vinsert
p7560
I42
VSimpleName: xc
p7561
tp7562
I1
s(Vinsert
p7563
I42
VSimpleName: intern
p7564
Vinsert
p7565
I42
VSimpleName: meta
p7566
tp7567
I1
s(g613
I42
g614
Vinsert
p7568
I38
VPrefixExpression: !
p7569
tp7570
I1
s(g2964
I42
g2965
Vinsert
p7571
I42
VSimpleName: retryex
p7572
tp7573
F0.25
s(Vinsert
p7574
I42
VSimpleName: count
p7575
Vinsert
p7576
I42
VSimpleName: rv
p7577
tp7578
I1
s(g5960
I42
g5961
Vinsert
p7579
I42
VSimpleName: Object
p7580
tp7581
I1
s(Vinsert
p7582
I42
VSimpleName: equals
p7583
Vinsert
p7584
I43
VSimpleType: Number
p7585
tp7586
I1
s(g1248
I42
g1249
Vinsert
p7587
I42
VSimpleName: div
p7588
tp7589
F1.25
s(g924
I42
g925
Vinsert
p7590
I42
VSimpleName: y
p7591
tp7592
F0.5
s(g6726
I42
g6727
Vinsert
p7593
I25
VIfStatement
p7594
tp7595
I1
s(g3522
I42
g3523
Vinsert
p7596
I42
VSimpleName: form
p7597
tp7598
I1
s(g3681
I42
g3682
Vinsert
p7599
I11
VCastExpression
p7600
tp7601
I3
s(Vinsert
p7602
I42
VSimpleName: seq
p7603
Vinsert
p7604
I60
VVariableDeclarationStatement
p7605
tp7606
I5
s(g1949
I42
g1950
Vinsert
p7607
I45
VStringLiteral: "*S Clojure\u005cn"
p7608
tp7609
I1
s(g318
I42
g319
Vinsert
p7610
I41
VReturnStatement
p7611
tp7612
I1
s(Vinsert
p7613
I42
VSimpleName: visitInvokeDynamicInsn
p7614
Vinsert
p7615
I25
VIfStatement
p7616
tp7617
I2
s(Vinsert
p7618
I42
VSimpleName: longValue
p7619
Vinsert
p7620
I42
VSimpleName: Object
p7621
tp7622
F0.25
s(g1662
I42
g1663
Vinsert
p7623
I14
VClassInstanceCreation
p7624
tp7625
I2
s(g730
I42
g731
Vinsert
p7626
I39
VPrimitiveType: int
p7627
tp7628
I2
s(g2169
I42
g2170
Vinsert
p7629
I34
VNumberLiteral: 0
p7630
tp7631
I1
s(g1122
I42
g1123
Vinsert
p7632
I34
VNumberLiteral: 0
p7633
tp7634
I2
s(g4979
I42
g4980
Vinsert
p7635
I42
VSimpleName: impl
p7636
tp7637
I1
s(Vinsert
p7638
I42
VSimpleName: count
p7639
Vinsert
p7640
I43
VSimpleType: PersistentArrayList
p7641
tp7642
I2
s(g1182
I42
g1183
Vinsert
p7643
I34
VNumberLiteral: 0
p7644
tp7645
I1
s(g4516
I42
g4517
Vinsert
p7646
I42
VSimpleName: o
p7647
tp7648
I1
s(Vinsert
p7649
I42
VSimpleName: getName
p7650
Vinsert
p7651
I42
VSimpleName: Byte
p7652
tp7653
I1
s(g1563
I42
g1564
Vinsert
p7654
I59
VVariableDeclarationFragment
p7655
tp7656
I2
s(g6045
I42
g6046
Vinsert
p7657
I42
VSimpleName: isVolatile
p7658
tp7659
I1
s(g5394
I42
g5395
Vinsert
p7660
I42
VSimpleName: vals
p7661
tp7662
I1
s(g3775
I42
g3776
Vinsert
p7663
I42
VSimpleName: Object
p7664
tp7665
F0.25
s(g4694
I42
g4695
Vinsert
p7666
I42
VSimpleName: Object
p7667
tp7668
F0.5
s(Vinsert
p7669
I42
VSimpleName: equals
p7670
Vinsert
p7671
I78
VMarkerAnnotation
p7672
tp7673
F0.5
s(g2197
I42
g2198
Vinsert
p7674
I42
VSimpleName: v
p7675
tp7676
I2
s(g426
I42
g427
Vinsert
p7677
I40
VQualifiedName: fn.thisName
p7678
tp7679
F2.25
s(Vinsert
p7680
I42
VSimpleName: add
p7681
Vinsert
p7682
I43
VSimpleType: PersistentHashtableMap
p7683
tp7684
F0.25
s(g852
I42
g853
Vinsert
p7685
I59
VVariableDeclarationFragment
p7686
tp7687
I1
s(g537
I42
g538
Vinsert
p7688
I21
VExpressionStatement
p7689
tp7690
I2
s(g1228
I42
g1229
Vinsert
p7691
I60
VVariableDeclarationStatement
p7692
tp7693
I1
s(Vinsert
p7694
I42
VSimpleName: create
p7695
Vinsert
p7696
I42
VSimpleName: throwArity
p7697
tp7698
I1
s(g2231
I42
g2232
Vinsert
p7699
I42
VSimpleName: mk
p7700
tp7701
I1
s(g814
I42
g815
Vinsert
p7702
I42
VSimpleName: Comparable
p7703
tp7704
F0.25
s(g2729
I42
g2730
Vinsert
p7705
I42
VSimpleName: IteratorIter
p7706
tp7707
I1
s(g827
I42
g828
Vinsert
p7708
I42
VSimpleName: Exception
p7709
tp7710
F0.5
s(g456
I42
g457
Vinsert
p7711
I42
VSimpleName: String
p7712
tp7713
F0.25
s(Vinsert
p7714
I42
VSimpleName: count
p7715
Vinsert
p7716
I42
VSimpleName: pop
p7717
tp7718
F0.25
s(g7563
I42
g7564
Vinsert
p7719
I42
VSimpleName: RT
p7720
tp7721
I2
s(g4663
I42
g4664
Vinsert
p7722
I40
VQualifiedName: java.lang.reflect.Constructor
p7723
tp7724
F0.25
s(g1238
I42
g1239
Vinsert
p7725
I8
VBlock
p7726
tp7727
I1
s(g2615
I42
g2616
Vinsert
p7728
I42
VSimpleName: x
p7729
tp7730
I1
s(Vinsert
p7731
I42
VSimpleName: invoke
p7732
Vinsert
p7733
I61
VWhileStatement
p7734
tp7735
I2
s(g1722
I42
g1723
Vinsert
p7736
I42
VSimpleName: m
p7737
tp7738
I2
s(g3175
I42
g3176
Vinsert
p7739
I40
VQualifiedName: l.frame.owner
p7740
tp7741
I1
s(g3517
I42
g3518
Vinsert
p7742
I43
VSimpleType: Link
p7743
tp7744
F0.25
s(g1530
I42
g1531
Vinsert
p7745
I42
VSimpleName: load
p7746
tp7747
I1
s(g5592
I42
g5593
Vinsert
p7748
I42
VSimpleName: mv
p7749
tp7750
I1
s(g862
I42
g863
Vinsert
p7751
I42
VSimpleName: errorMsg
p7752
tp7753
I1
s(g3709
I42
g3710
Vinsert
p7754
I34
VNumberLiteral: 1
p7755
tp7756
I1
s(g5130
I42
g5131
Vinsert
p7757
I42
VSimpleName: RT
p7758
tp7759
I1
s(g189
I42
g190
Vinsert
p7760
I32
VMethodInvocation
p7761
tp7762
I1
s(g179
I42
g180
Vinsert
p7763
I11
VCastExpression
p7764
tp7765
I4
s(g5394
I42
g5395
Vinsert
p7766
I8
VBlock
p7767
tp7768
F7.25
s(Vinsert
p7769
I42
VSimpleName: from
p7770
Vinsert
p7771
I42
VSimpleName: multiply
p7772
tp7773
F0.75
s(g960
I42
g961
Vinsert
p7774
I44
VSingleVariableDeclaration
p7775
tp7776
F0.5
s(g6409
I42
g6410
Vinsert
p7777
I42
VSimpleName: visitInsn
p7778
tp7779
I1
s(g7093
I42
g7094
Vinsert
p7780
I42
VSimpleName: tref
p7781
tp7782
F0.25
s(Vinsert
p7783
I42
VSimpleName: equals
p7784
Vinsert
p7785
I42
VSimpleName: classname
p7786
tp7787
F1.5
s(g2130
I42
g2131
Vinsert
p7788
I42
VSimpleName: hash
p7789
tp7790
I2
s(g323
I42
g324
Vinsert
p7791
I43
VSimpleType: Class
p7792
tp7793
F0.5
s(g2111
I42
g2112
Vinsert
p7794
I40
VQualifiedName: clojure.lang.Fn
p7795
tp7796
I1
s(g4084
I42
g4085
Vinsert
p7797
I42
VSimpleName: obj
p7798
tp7799
I2
s(g71
I42
g72
Vinsert
p7800
I25
VIfStatement
p7801
tp7802
I1
s(g2068
I42
g2069
Vinsert
p7803
I5
VArrayType: char[]
p7804
tp7805
F0.5
s(g343
I42
g344
Vinsert
p7806
I21
VExpressionStatement
p7807
tp7808
I1
s(g2376
I42
g2377
Vinsert
p7809
I44
VSingleVariableDeclaration
p7810
tp7811
F0.25
s(g1243
I42
g1244
Vinsert
p7812
I42
VSimpleName: var
p7813
tp7814
I1
s(g852
I42
g853
Vinsert
p7815
I32
VMethodInvocation
p7816
tp7817
I2
s(g898
I42
g899
Vinsert
p7818
I42
VSimpleName: Collections
p7819
tp7820
I1
s(g3654
I42
g3655
Vinsert
p7821
I42
VSimpleName: m
p7822
tp7823
F0.25
s(g1182
I42
g1183
Vinsert
p7824
I32
VMethodInvocation
p7825
tp7826
I2
s(g651
I42
g652
Vinsert
p7827
I42
VSimpleName: alt23
p7828
tp7829
I1
s(g2649
I42
g2650
Vinsert
p7830
I42
VSimpleName: visitor
p7831
tp7832
F0.25
s(g3300
I42
g3301
Vinsert
p7833
I7
VAssignment: =
p7834
tp7835
I3
s(g6140
I42
g6141
Vinsert
p7836
I45
VStringLiteral: "/boot.clj"
p7837
tp7838
I1
s(g4059
I42
g4060
Vinsert
p7839
I42
VSimpleName: ArraySeq
p7840
tp7841
F0.25
s(g411
I42
g412
Vinsert
p7842
I42
VSimpleName: AFn
p7843
tp7844
I1
s(g2239
I42
g2240
Vinsert
p7845
I27
VInfixExpression: ==
p7846
tp7847
I3
s(g6300
I42
g6301
Vinsert
p7848
I43
VSimpleType: Thread
p7849
tp7850
I2
s(g1910
I42
g1911
Vinsert
p7851
I83
VModifier: public
p7852
tp7853
F0.5
s(g924
I42
g925
Vinsert
p7854
I42
VSimpleName: Num
p7855
tp7856
F9.25
s(g1972
I42
g1973
Vinsert
p7857
I42
VSimpleName: i
p7858
tp7859
I1
s(g4134
I42
g4135
Vinsert
p7860
I44
VSingleVariableDeclaration
p7861
tp7862
F0.25
s(g21
I42
g22
Vinsert
p7863
I36
VParenthesizedExpression
p7864
tp7865
I3
s(g1856
I42
g1857
Vinsert
p7866
I42
VSimpleName: form
p7867
tp7868
F0.25
s(g945
I42
g946
Vinsert
p7869
I42
VSimpleName: p
p7870
tp7871
I2
s(g466
I42
g467
Vinsert
p7872
I36
VParenthesizedExpression
p7873
tp7874
I1
s(g1451
I42
g1452
Vinsert
p7875
I42
VSimpleName: Long
p7876
tp7877
I1
s(g4557
I42
g4558
Vinsert
p7878
I42
VSimpleName: second
p7879
tp7880
I1
s(g7618
I42
g7619
Vinsert
p7881
I83
VModifier: public
p7882
tp7883
F0.25
s(g1722
I42
g1723
Vinsert
p7884
I59
VVariableDeclarationFragment
p7885
tp7886
I1
s(g583
I42
g584
Vinsert
p7887
I40
VQualifiedName: predOps.length
p7888
tp7889
I1
s(g4171
I42
g4172
Vinsert
p7890
I21
VExpressionStatement
p7891
tp7892
I4
s(g1437
I42
g1438
Vinsert
p7893
I43
VSimpleType: Mutable
p7894
tp7895
F0.25
s(g6884
I42
g6885
Vinsert
p7896
I42
VSimpleName: seq
p7897
tp7898
I1
s(g305
I42
g306
Vinsert
p7899
I27
VInfixExpression: !=
p7900
tp7901
I1
s(g3762
I42
g3763
Vinsert
p7902
I42
VSimpleName: Cons
p7903
tp7904
F3.25
s(g2145
I42
g2146
Vinsert
p7905
I42
VSimpleName: OUT
p7906
tp7907
I1
s(g7427
I42
g7428
Vinsert
p7908
I7
VAssignment: =
p7909
tp7910
I2
s(g686
I42
g687
Vinsert
p7911
I42
VSimpleName: iter
p7912
tp7913
F3.75
s(g671
I42
g672
Vinsert
p7914
I43
VSimpleType: Exception
p7915
tp7916
F0.5
s(g4156
I42
g4157
Vinsert
p7917
I42
VSimpleName: first
p7918
tp7919
I23
s(g4452
I42
g4453
Vinsert
p7920
I42
VSimpleName: LOADER_SUFFIX
p7921
tp7922
I1
s(g1812
I42
g1813
Vinsert
p7923
I32
VMethodInvocation
p7924
tp7925
I1
s(g3295
I42
g3296
Vinsert
p7926
I42
VSimpleName: String
p7927
tp7928
F0.25
s(g2883
I42
g2884
Vinsert
p7929
I7
VAssignment: =
p7930
tp7931
I1
s(g267
I42
g268
Vinsert
p7932
I42
VSimpleName: fromBigInteger
p7933
tp7934
I1
s(g3783
I42
g3784
Vinsert
p7935
I7
VAssignment: =
p7936
tp7937
F5.5
s(g2623
I42
g2624
Vinsert
p7938
I42
VSimpleName: IFn
p7939
tp7940
F0.25
s(g1596
I42
g1597
Vinsert
p7941
I42
VSimpleName: EMPTY
p7942
tp7943
I2
s(g7304
I42
g7305
Vinsert
p7944
I43
VSimpleType: ArithmeticException
p7945
tp7946
F0.25
s(Vinsert
p7947
I42
VSimpleName: longValue
p7948
Vinsert
p7949
I42
VSimpleName: y
p7950
tp7951
F0.25
s(g593
I42
g594
Vinsert
p7952
I8
VBlock
p7953
tp7954
I1
s(g1750
I42
g1751
Vinsert
p7955
I42
VSimpleName: tasks
p7956
tp7957
I1
s(g2872
I42
g2873
Vinsert
p7958
I53
VThrowStatement
p7959
tp7960
I2
s(g4323
I42
g4324
Vinsert
p7961
I66
VTextElement: </p>
p7962
tp7963
F0.75
s(g6770
I42
g6771
Vinsert
p7964
I43
VSimpleType: IllegalStateException
p7965
tp7966
I1
s(g1553
I42
g1554
Vinsert
p7967
I42
VSimpleName: bsm
p7968
tp7969
I1
s(Vinsert
p7970
I42
VSimpleName: containsKey
p7971
Vinsert
p7972
I43
VSimpleType: Map
p7973
tp7974
I6
s(g6450
I42
g6451
Vinsert
p7975
I22
VFieldAccess
p7976
tp7977
I1
s(g515
I42
g516
Vinsert
p7978
I14
VClassInstanceCreation
p7979
tp7980
I5
s(g7783
I42
g7784
Vinsert
p7981
I42
VSimpleName: isPrimitive
p7982
tp7983
F0.25
s(g6455
I42
g6456
Vinsert
p7984
I44
VSingleVariableDeclaration
p7985
tp7986
F1.0
s(g3076
I42
g3077
Vinsert
p7987
I32
VMethodInvocation
p7988
tp7989
I1
s(g1157
I42
g1158
Vinsert
p7990
I42
VSimpleName: currentNS
p7991
tp7992
I1
s(g1807
I42
g1808
Vinsert
p7993
I32
VMethodInvocation
p7994
tp7995
I4
s(g3389
I42
g3390
Vinsert
p7996
I42
VSimpleName: format
p7997
tp7998
I1
s(g5055
I42
g5056
Vinsert
p7999
I60
VVariableDeclarationStatement
p8000
tp8001
I1
s(g3728
I42
g3729
Vinsert
p8002
I27
VInfixExpression: -
p8003
tp8004
I3
s(g3619
I42
g3620
Vinsert
p8005
I42
VSimpleName: tref
p8006
tp8007
I1
s(g1104
I42
g1105
Vinsert
p8008
I39
VPrimitiveType: int
p8009
tp8010
F0.25
s(g809
I42
g810
Vinsert
p8011
I43
VSimpleType: InstanceMemberSymbol
p8012
tp8013
I2
s(g809
I42
g810
Vinsert
p8014
I27
VInfixExpression: ==
p8015
tp8016
I4
s(g4323
I42
g4324
Vinsert
p8017
I32
VMethodInvocation
p8018
tp8019
I1
s(g2456
I42
g2457
Vinsert
p8020
I42
VSimpleName: t
p8021
tp8022
F0.25
s(g3135
I42
g3136
Vinsert
p8023
I42
VSimpleName: equals
p8024
tp8025
I1
s(g3754
I42
g3755
Vinsert
p8026
I59
VVariableDeclarationFragment
p8027
tp8028
I1
s(g2501
I42
g2502
Vinsert
p8029
I42
VSimpleName: fromIntMethod
p8030
tp8031
I1
s(Vinsert
p8032
I42
VSimpleName: first
p8033
Vinsert
p8034
I43
VSimpleType: Symbol
p8035
tp8036
I2
s(g955
I42
g956
Vinsert
p8037
I33
VNullLiteral
p8038
tp8039
I3
s(g3654
I42
g3655
Vinsert
p8040
I42
VSimpleName: getAsMethodOfPublicBase
p8041
tp8042
F0.25
s(g2830
I42
g2831
Vinsert
p8043
I42
VSimpleName: dest
p8044
tp8045
I1
s(g1291
I42
g1292
Vinsert
p8046
I8
VBlock
p8047
tp8048
F1.25
s(g786
I42
g787
Vinsert
p8049
I5
VArrayType: Object[]
p8050
tp8051
I2
s(g7618
I42
g7619
Vinsert
p8052
I43
VSimpleType: Object
p8053
tp8054
F0.25
s(g348
I42
g349
Vinsert
p8055
I27
VInfixExpression: ==
p8056
tp8057
I3
s(g1099
I42
g1100
Vinsert
p8058
I27
VInfixExpression: &&
p8059
tp8060
I1
s(Vinsert
p8061
I42
VSimpleName: put
p8062
Vinsert
p8063
I43
VSimpleType: RBTree
p8064
tp8065
I2
s(Vinsert
p8066
I42
VSimpleName: intValue
p8067
Vinsert
p8068
I42
VSimpleName: invoke
p8069
tp8070
I1
s(g4452
I42
g4453
Vinsert
p8071
I42
VSimpleName: String
p8072
tp8073
I1
s(g7304
I42
g7305
Vinsert
p8074
I42
VSimpleName: d
p8075
tp8076
I1
s(g4323
I42
g4324
Vinsert
p8077
I66
VTextElement: </ol>
p8078
tp8079
F0.25
s(g3156
I42
g3157
Vinsert
p8080
I42
VSimpleName: ret
p8081
tp8082
I2
s(g1258
I42
g1259
Vinsert
p8083
I32
VMethodInvocation
p8084
tp8085
I2
s(g5206
I42
g5207
Vinsert
p8086
I43
VSimpleType: Exception
p8087
tp8088
I1
s(g1172
I42
g1173
Vinsert
p8089
I42
VSimpleName: vtag
p8090
tp8091
I1
s(g4232
I42
g4233
Vinsert
p8092
I31
VMethodDeclaration
p8093
tp8094
F0.25
s(g3754
I42
g3755
Vinsert
p8095
I27
VInfixExpression: ==
p8096
tp8097
I1
s(g6369
I42
g6370
Vinsert
p8098
I27
VInfixExpression: &&
p8099
tp8100
I1
s(g4303
I42
g4304
Vinsert
p8101
I11
VCastExpression
p8102
tp8103
I1
s(g3161
I42
g3162
Vinsert
p8104
I43
VSimpleType: Object
p8105
tp8106
I1
s(g1081
I42
g1082
Vinsert
p8107
I27
VInfixExpression: !=
p8108
tp8109
I1
s(Vinsert
p8110
I42
VSimpleName: invoke
p8111
Vinsert
p8112
I51
VSynchronizedStatement
p8113
tp8114
I1
s(g2315
I42
g2316
Vinsert
p8115
I42
VSimpleName: t
p8116
tp8117
I1
s(g4743
I42
g4744
Vinsert
p8118
I45
VStringLiteral: "<init>"
p8119
tp8120
I1
s(g328
I42
g329
Vinsert
p8121
I53
VThrowStatement
p8122
tp8123
F0.25
s(g7010
I42
g7011
Vinsert
p8124
I42
VSimpleName: end
p8125
tp8126
I3
s(g725
I42
g726
Vinsert
p8127
I42
VSimpleName: ISeq
p8128
tp8129
F2.25
s(Vinsert
p8130
I42
VSimpleName: hasNext
p8131
Vinsert
p8132
I42
VSimpleName: iterator
p8133
tp8134
F2.5
s(g1291
I42
g1292
Vinsert
p8135
I42
VSimpleName: tryExpr
p8136
tp8137
I1
s(Vinsert
p8138
I42
VSimpleName: setMeta
p8139
Vinsert
p8140
I42
VSimpleName: map
p8141
tp8142
I1
s(g2677
I42
g2678
Vinsert
p8143
I41
VReturnStatement
p8144
tp8145
I1
s(g6076
I42
g6077
Vinsert
p8146
I60
VVariableDeclarationStatement
p8147
tp8148
I3
s(g1099
I42
g1100
Vinsert
p8149
I43
VSimpleType: String
p8150
tp8151
F1.25
s(g4788
I42
g4789
Vinsert
p8152
I33
VNullLiteral
p8153
tp8154
I10
s(g3918
I42
g3919
Vinsert
p8155
I42
VSimpleName: pushThreadBindings
p8156
tp8157
I3
s(g1856
I42
g1857
Vinsert
p8158
I8
VBlock
p8159
tp8160
F2.25
s(g2991
I42
g2992
Vinsert
p8161
I45
VStringLiteral: "int intCast(Object)"
p8162
tp8163
I1
s(g11
I42
g12
Vinsert
p8164
I21
VExpressionStatement
p8165
tp8166
I2
s(g6837
I42
g6838
Vinsert
p8167
I42
VSimpleName: RT
p8168
tp8169
F1.5
s(g950
I42
g951
Vinsert
p8170
I43
VSimpleType: OutputStreamWriter
p8171
tp8172
F0.25
s(g1588
I42
g1589
Vinsert
p8173
I42
VSimpleName: rets
p8174
tp8175
I2
s(g2060
I42
g2061
Vinsert
p8176
I42
VSimpleName: Float
p8177
tp8178
I2
s(g1817
I42
g1818
Vinsert
p8179
I42
VSimpleName: testExpr
p8180
tp8181
I1
s(g5264
I42
g5265
Vinsert
p8182
I42
VSimpleName: ROOT_CLASSLOADER
p8183
tp8184
I1
s(g510
I42
g511
Vinsert
p8185
I42
VSimpleName: Object
p8186
tp8187
I1
s(g4867
I42
g4868
Vinsert
p8188
I43
VSimpleType: AtomicReference
p8189
tp8190
F2.25
s(g641
I42
g642
Vinsert
p8191
I42
VSimpleName: String
p8192
tp8193
F0.5
s(g3614
I42
g3615
Vinsert
p8194
I83
VModifier: final
p8195
tp8196
F0.25
s(g1525
I42
g1526
Vinsert
p8197
I32
VMethodInvocation
p8198
tp8199
F6.25
s(g1545
I42
g1546
Vinsert
p8200
I42
VSimpleName: _current
p8201
tp8202
F0.25
s(g1014
I42
g1015
Vinsert
p8203
I42
VSimpleName: Symbol
p8204
tp8205
F0.25
s(g4801
I42
g4802
Vinsert
p8206
I42
VSimpleName: getDynamicBinding
p8207
tp8208
F0.25
s(g1649
I42
g1650
Vinsert
p8209
I42
VSimpleName: LockingTransaction
p8210
tp8211
I2
s(g1055
I42
g1056
Vinsert
p8212
I27
VInfixExpression: &&
p8213
tp8214
I1
s(g832
I42
g833
Vinsert
p8215
I27
VInfixExpression: &&
p8216
tp8217
F0.25
s(g666
I42
g667
Vinsert
p8218
I34
VNumberLiteral: 1
p8219
tp8220
I3
s(g285
I42
g286
Vinsert
p8221
I36
VParenthesizedExpression
p8222
tp8223
I1
s(g1957
I42
g1958
Vinsert
p8224
I25
VIfStatement
p8225
tp8226
I1
s(g2216
I42
g2217
Vinsert
p8227
I40
VQualifiedName: et.rest
p8228
tp8229
I1
s(Vinsert
p8230
I42
VSimpleName: next
p8231
Vinsert
p8232
I42
VSimpleName: frm
p8233
tp8234
I1
s(g7528
I42
g7529
Vinsert
p8235
I8
VBlock
p8236
tp8237
F0.25
s(g5152
I42
g5153
Vinsert
p8238
I42
VSimpleName: keyvals
p8239
tp8240
I2
s(g46
I42
g47
Vinsert
p8241
I8
VBlock
p8242
tp8243
I2
s(g2872
I42
g2873
Vinsert
p8244
I43
VSimpleType: IllegalArgumentException
p8245
tp8246
I1
s(g968
I42
g969
Vinsert
p8247
I42
VSimpleName: nsname
p8248
tp8249
I1
s(g5642
I42
g5643
Vinsert
p8250
I42
VSimpleName: i
p8251
tp8252
F7.0
s(g2623
I42
g2624
Vinsert
p8253
I43
VSimpleType: IFn
p8254
tp8255
F0.25
s(g8130
I42
g8131
Vinsert
p8256
I42
VSimpleName: impl
p8257
tp8258
F0.25
s(g2641
I42
g2642
Vinsert
p8259
I8
VBlock
p8260
tp8261
I1
s(g2435
I42
g2436
Vinsert
p8262
I42
VSimpleName: currentNS
p8263
tp8264
I1
s(g4480
I42
g4481
Vinsert
p8265
I62
VInstanceofExpression
p8266
tp8267
F1.25
s(Vinsert
p8268
I42
VSimpleName: get
p8269
Vinsert
p8270
I40
VQualifiedName: master.load
p8271
tp8272
I1
s(Vinsert
p8273
I42
VSimpleName: bind
p8274
Vinsert
p8275
I42
VSimpleName: intern
p8276
tp8277
I2
s(g8230
I42
g8231
Vinsert
p8278
I42
VSimpleName: IParser
p8279
tp8280
F0.25
s(Vinsert
p8281
I42
VSimpleName: next
p8282
Vinsert
p8283
I42
VSimpleName: keys
p8284
tp8285
I1
s(g709
I42
g710
Vinsert
p8286
I25
VIfStatement
p8287
tp8288
I2
s(g1027
I42
g1028
Vinsert
p8289
I42
VSimpleName: MACRO_CHECK_LOCK
p8290
tp8291
I1
s(g4118
I42
g4119
Vinsert
p8292
I43
VSimpleType: ISeq
p8293
tp8294
F2.75
s(g950
I42
g951
Vinsert
p8295
I9
VBooleanLiteral: true
p8296
tp8297
F1.25
s(g3290
I42
g3291
Vinsert
p8298
I32
VMethodInvocation
p8299
tp8300
I3
s(g1172
I42
g1173
Vinsert
p8301
I42
VSimpleName: RT
p8302
tp8303
F7.25
s(g3121
I42
g3122
Vinsert
p8304
I62
VInstanceofExpression
p8305
tp8306
I1
s(g4259
I42
g4260
Vinsert
p8307
I42
VSimpleName: first
p8308
tp8309
I1
s(g1626
I42
g1627
Vinsert
p8310
I42
VSimpleName: HostSymbol
p8311
tp8312
I1
s(g1218
I42
g1219
Vinsert
p8313
I43
VSimpleType: Integer
p8314
tp8315
I1
s(g1037
I42
g1038
Vinsert
p8316
I8
VBlock
p8317
tp8318
I1
s(g3833
I42
g3834
Vinsert
p8319
I5
VArrayType: Object[]
p8320
tp8321
I1
s(g5576
I42
g5577
Vinsert
p8322
I83
VModifier: private
p8323
tp8324
F0.25
s(g572
I42
g573
Vinsert
p8325
I8
VBlock
p8326
tp8327
F0.25
s(g1770
I42
g1771
Vinsert
p8328
I40
VQualifiedName: dvout.dvals
p8329
tp8330
I1
s(g3087
I42
g3088
Vinsert
p8331
I14
VClassInstanceCreation
p8332
tp8333
I3
s(g1202
I42
g1203
Vinsert
p8334
I32
VMethodInvocation
p8335
tp8336
I4
s(g2578
I42
g2579
Vinsert
p8337
I32
VMethodInvocation
p8338
tp8339
I2
s(g1278
I42
g1279
Vinsert
p8340
I33
VNullLiteral
p8341
tp8342
I2
s(g5533
I42
g5534
Vinsert
p8343
I42
VSimpleName: EMPTY
p8344
tp8345
I1
s(g3754
I42
g3755
Vinsert
p8346
I60
VVariableDeclarationStatement
p8347
tp8348
I1
s(g547
I42
g548
Vinsert
p8349
I25
VIfStatement
p8350
tp8351
I2
s(g4937
I42
g4938
Vinsert
p8352
I42
VSimpleName: intern
p8353
tp8354
F5.5
s(Vinsert
p8355
I42
VSimpleName: get
p8356
Vinsert
p8357
I42
VSimpleName: WARN_ON_REFLECTION
p8358
tp8359
I2
s(g3022
I42
g3023
Vinsert
p8360
I42
VSimpleName: Class
p8361
tp8362
I1
s(g3100
I42
g3101
Vinsert
p8363
I32
VMethodInvocation
p8364
tp8365
I5
s(g6845
I42
g6846
Vinsert
p8366
I41
VReturnStatement
p8367
tp8368
F2.25
s(Vinsert
p8369
I42
VSimpleName: get
p8370
Vinsert
p8371
I42
VSimpleName: PersistentListIdentityMap
p8372
tp8373
I2
s(g1558
I42
g1559
Vinsert
p8374
I9
VBooleanLiteral: false
p8375
tp8376
I1
s(g6837
I42
g6838
Vinsert
p8377
I42
VSimpleName: v1
p8378
tp8379
F0.5
s(g222
I42
g223
Vinsert
p8380
I45
VStringLiteral: "*print-length*"
p8381
tp8382
I1
s(g1910
I42
g1911
Vinsert
p8383
I34
VNumberLiteral: 10
p8384
tp8385
F0.25
s(g2244
I42
g2245
Vinsert
p8386
I41
VReturnStatement
p8387
tp8388
F1.25
s(g3767
I42
g3768
Vinsert
p8389
I42
VSimpleName: BigDecimal
p8390
tp8391
I1
s(g760
I42
g761
Vinsert
p8392
I36
VParenthesizedExpression
p8393
tp8394
I2
s(g7669
I42
g7670
Vinsert
p8395
I17
VConstructorInvocation
p8396
tp8397
F0.25
s(Vinsert
p8398
I42
VSimpleName: asTransient
p8399
Vinsert
p8400
I43
VSimpleType: IPersistentMap
p8401
tp8402
F0.25
s(g2814
I42
g2815
Vinsert
p8403
I42
VSimpleName: IDENTITY
p8404
tp8405
F0.25
s(g3981
I42
g3982
Vinsert
p8406
I40
VQualifiedName: x.denominator
p8407
tp8408
F0.25
s(Vinsert
p8409
I42
VSimpleName: withMeta
p8410
Vinsert
p8411
I41
VReturnStatement
p8412
tp8413
I4
s(g3767
I42
g3768
Vinsert
p8414
I42
VSimpleName: s
p8415
tp8416
I3
s(Vinsert
p8417
I42
VSimpleName: invoke
p8418
Vinsert
p8419
I42
VSimpleName: vf
p8420
tp8421
F4.5
s(g1683
I42
g1684
Vinsert
p8422
I25
VIfStatement
p8423
tp8424
I1
s(g1936
I42
g1937
Vinsert
p8425
I83
VModifier: static
p8426
tp8427
I1
s(g3038
I42
g3039
Vinsert
p8428
I83
VModifier: public
p8429
tp8430
F0.25
s(g6921
I42
g6922
Vinsert
p8431
I33
VNullLiteral
p8432
tp8433
F10.75
s(g3654
I42
g3655
Vinsert
p8434
I43
VSimpleType: Method
p8435
tp8436
F0.25
s(g2343
I42
g2344
Vinsert
p8437
I42
VSimpleName: ArraySeq
p8438
tp8439
I2
s(g4248
I42
g4249
Vinsert
p8440
I42
VSimpleName: String
p8441
tp8442
F0.25
s(g2983
I42
g2984
Vinsert
p8443
I13
VCharacterLiteral: '/'
p8444
tp8445
I2
s(Vinsert
p8446
I42
VSimpleName: deref
p8447
Vinsert
p8448
I42
VSimpleName: v
p8449
tp8450
F0.25
s(g4867
I42
g4868
Vinsert
p8451
I74
VParameterizedType: AtomicReference<Thread>
p8452
tp8453
F2.25
s(g2111
I42
g2112
Vinsert
p8454
I57
VTypeLiteral
p8455
tp8456
I5
s(g2461
I42
g2462
Vinsert
p8457
I41
VReturnStatement
p8458
tp8459
I3
s(g4404
I42
g4405
Vinsert
p8460
I43
VSimpleType: Symbol
p8461
tp8462
F0.25
s(Vinsert
p8463
I42
VSimpleName: get
p8464
Vinsert
p8465
I42
VSimpleName: getMapping
p8466
tp8467
F0.25
s(g1861
I42
g1862
Vinsert
p8468
I32
VMethodInvocation
p8469
tp8470
I1
s(g179
I42
g180
Vinsert
p8471
I59
VVariableDeclarationFragment
p8472
tp8473
I3
s(g46
I42
g47
Vinsert
p8474
I42
VSimpleName: IDeref
p8475
tp8476
F0.5
s(g2729
I42
g2730
Vinsert
p8477
I36
VParenthesizedExpression
p8478
tp8479
I1
s(Vinsert
p8480
I42
VSimpleName: getClass
p8481
Vinsert
p8482
I42
VSimpleName: argType
p8483
tp8484
I1
s(g837
I42
g838
Vinsert
p8485
I42
VSimpleName: goTo
p8486
tp8487
I1
s(g5556
I42
g5557
Vinsert
p8488
I42
VSimpleName: key
p8489
tp8490
I1
s(g1391
I42
g1392
Vinsert
p8491
I70
VEnhancedForStatement
p8492
tp8493
I3
s(Vinsert
p8494
I42
VSimpleName: doubleValue
p8495
Vinsert
p8496
I42
VSimpleName: fn
p8497
tp8498
I1
s(g7528
I42
g7529
Vinsert
p8499
I42
VSimpleName: RT
p8500
tp8501
I1
s(g2697
I42
g2698
Vinsert
p8502
I42
VSimpleName: signature
p8503
tp8504
F0.25
s(g66
I42
g67
Vinsert
p8505
I40
VQualifiedName: method.body
p8506
tp8507
I1
s(g3421
I42
g3422
Vinsert
p8508
I83
VModifier: final
p8509
tp8510
I1
s(Vinsert
p8511
I42
VSimpleName: assoc
p8512
Vinsert
p8513
I42
VSimpleName: i
p8514
tp8515
F0.25
s(Vinsert
p8516
I42
VSimpleName: pushVal
p8517
Vinsert
p8518
I32
VMethodInvocation
p8519
tp8520
I1
s(g4508
I42
g4509
Vinsert
p8521
I44
VSingleVariableDeclaration
p8522
tp8523
F0.25
s(g6859
I42
g6860
Vinsert
p8524
I8
VBlock
p8525
tp8526
F2.25
s(g6076
I42
g6077
Vinsert
p8527
I42
VSimpleName: getClass
p8528
tp8529
I1
s(g1331
I42
g1332
Vinsert
p8530
I8
VBlock
p8531
tp8532
I2
s(g3022
I42
g3023
Vinsert
p8533
I5
VArrayType: Class[]
p8534
tp8535
I1
s(g593
I42
g594
Vinsert
p8536
I32
VMethodInvocation
p8537
tp8538
I2
s(g3644
I42
g3645
Vinsert
p8539
I42
VSimpleName: intern
p8540
tp8541
I2
s(g2657
I42
g2658
Vinsert
p8542
I42
VSimpleName: attrs
p8543
tp8544
I8
s(Vinsert
p8545
I42
VSimpleName: get
p8546
Vinsert
p8547
I42
VSimpleName: ensurePoint
p8548
tp8549
F0.25
s(g5505
I42
g5506
Vinsert
p8550
I43
VSimpleType: Symbol
p8551
tp8552
I1
s(Vinsert
p8553
I42
VSimpleName: visitInvokeDynamicInsn
p8554
Vinsert
p8555
I34
VNumberLiteral: 5
p8556
tp8557
I2
s(g3880
I42
g3881
Vinsert
p8558
I42
VSimpleName: arg
p8559
tp8560
F0.25
s(g353
I42
g354
Vinsert
p8561
I33
VNullLiteral
p8562
tp8563
I2
s(g2435
I42
g2436
Vinsert
p8564
I8
VBlock
p8565
tp8566
I1
s(g159
I42
g160
Vinsert
p8567
I43
VSimpleType: ISeq
p8568
tp8569
I2
s(g285
I42
g286
Vinsert
p8570
I32
VMethodInvocation
p8571
tp8572
I4
s(g4932
I42
g4933
Vinsert
p8573
I42
VSimpleName: Exception
p8574
tp8575
F0.75
s(Vinsert
p8576
I42
VSimpleName: execute
p8577
Vinsert
p8578
I40
VQualifiedName: agent.q
p8579
tp8580
I2
s(g1606
I42
g1607
Vinsert
p8581
I42
VSimpleName: Reflector
p8582
tp8583
I1
s(g1510
I42
g1511
Vinsert
p8584
I60
VVariableDeclarationStatement
p8585
tp8586
I3
s(g994
I42
g995
Vinsert
p8587
I42
VSimpleName: Object
p8588
tp8589
F0.25
s(g4323
I42
g4324
Vinsert
p8590
I8
VBlock
p8591
tp8592
I1
s(g636
I42
g637
Vinsert
p8593
I42
VSimpleName: FNS
p8594
tp8595
I1
s(g2226
I42
g2227
Vinsert
p8596
I42
VSimpleName: right
p8597
tp8598
I2
s(g6369
I42
g6370
Vinsert
p8599
I42
VSimpleName: LINE
p8600
tp8601
I1
s(Vinsert
p8602
I42
VSimpleName: invoke
p8603
Vinsert
p8604
I42
VSimpleName: str
p8605
tp8606
I1
s(g1949
I42
g1950
Vinsert
p8607
I45
VStringLiteral: "*F\u005cn"
p8608
tp8609
I1
s(g1248
I42
g1249
Vinsert
p8610
I44
VSingleVariableDeclaration
p8611
tp8612
F0.5
s(g1500
I42
g1501
Vinsert
p8613
I42
VSimpleName: Symbol
p8614
tp8615
I2
s(g4765
I42
g4766
Vinsert
p8616
I42
VSimpleName: eqLabel
p8617
tp8618
I1
s(g1316
I42
g1317
Vinsert
p8619
I16
VConditionalExpression
p8620
tp8621
I1
s(g704
I42
g705
Vinsert
p8622
I45
VStringLiteral: "Can't embed object in code, maybe print-dup not defined: "
p8623
tp8624
I1
s(g1213
I42
g1214
Vinsert
p8625
I45
VStringLiteral: "/"
p8626
tp8627
F0.25
s(g2930
I42
g2931
Vinsert
p8628
I21
VExpressionStatement
p8629
tp8630
I1
s(g681
I42
g682
Vinsert
p8631
I40
VQualifiedName: PersistentVector.EMPTY
p8632
tp8633
I1
s(g1972
I42
g1973
Vinsert
p8634
I16
VConditionalExpression
p8635
tp8636
I1
s(g3282
I42
g3283
Vinsert
p8637
I45
VStringLiteral: "clojure"
p8638
tp8639
I2
s(g3256
I42
g3257
Vinsert
p8640
I42
VSimpleName: READERS
p8641
tp8642
I1
s(Vinsert
p8643
I42
VSimpleName: visitInsn
p8644
Vinsert
p8645
I42
VSimpleName: LRETURN
p8646
tp8647
I1
s(g2135
I42
g2136
Vinsert
p8648
I7
VAssignment: =
p8649
tp8650
I1
s(g1490
I42
g1491
Vinsert
p8651
I42
VSimpleName: mv
p8652
tp8653
I1
s(g4942
I42
g4943
Vinsert
p8654
I42
VSimpleName: Num
p8655
tp8656
F1.25
s(Vinsert
p8657
I42
VSimpleName: next
p8658
Vinsert
p8659
I27
VInfixExpression: <
p8660
tp8661
I1
s(g6289
I42
g6290
Vinsert
p8662
I42
VSimpleName: METHOD
p8663
tp8664
I1
s(g149
I42
g150
Vinsert
p8665
I42
VSimpleName: Cons
p8666
tp8667
F0.5
s(g1545
I42
g1546
Vinsert
p8668
I42
VSimpleName: first
p8669
tp8670
F5.75
s(g1273
I42
g1274
Vinsert
p8671
I42
VSimpleName: LazySeq
p8672
tp8673
I2
s(g1745
I42
g1746
Vinsert
p8674
I42
VSimpleName: ps
p8675
tp8676
I4
s(Vinsert
p8677
I42
VSimpleName: invokeStaticMethod
p8678
Vinsert
p8679
I42
VSimpleName: arg15
p8680
tp8681
F0.25
s(g3193
I42
g3194
Vinsert
p8682
I40
VQualifiedName: C.STATEMENT
p8683
tp8684
F1.25
s(g5802
I42
g5803
Vinsert
p8685
I27
VInfixExpression: !=
p8686
tp8687
I1
s(g852
I42
g853
Vinsert
p8688
I8
VBlock
p8689
tp8690
I1
s(g1167
I42
g1168
Vinsert
p8691
I60
VVariableDeclarationStatement
p8692
tp8693
I1
s(g441
I42
g442
Vinsert
p8694
I34
VNumberLiteral: 1
p8695
tp8696
I5
s(g3237
I42
g3238
Vinsert
p8697
I42
VSimpleName: extypes
p8698
tp8699
I1
s(g1840
I42
g1841
Vinsert
p8700
I42
VSimpleName: values
p8701
tp8702
I2
s(g7563
I42
g7564
Vinsert
p8703
I42
VSimpleName: get
p8704
tp8705
I1
s(Vinsert
p8706
I42
VSimpleName: currentThread
p8707
Vinsert
p8708
I43
VSimpleType: Binding
p8709
tp8710
I2
s(g71
I42
g72
Vinsert
p8711
I62
VInstanceofExpression
p8712
tp8713
I1
s(g2451
I42
g2452
Vinsert
p8714
I42
VSimpleName: ctor
p8715
tp8716
I1
s(g1722
I42
g1723
Vinsert
p8717
I8
VBlock
p8718
tp8719
I1
s(g5832
I42
g5833
Vinsert
p8720
I42
VSimpleName: Label
p8721
tp8722
F0.25
s(g1009
I42
g1010
Vinsert
p8723
I60
VVariableDeclarationStatement
p8724
tp8725
I6
s(g6884
I42
g6885
Vinsert
p8726
I42
VSimpleName: s
p8727
tp8728
I2
s(Vinsert
p8729
I42
VSimpleName: val
p8730
Vinsert
p8731
I42
VSimpleName: n
p8732
tp8733
I3
s(g1583
I42
g1584
Vinsert
p8734
I42
VSimpleName: ListMap
p8735
tp8736
I1
s(g898
I42
g899
Vinsert
p8737
I44
VSingleVariableDeclaration
p8738
tp8739
I1
s(g1268
I42
g1269
Vinsert
p8740
I42
VSimpleName: sym
p8741
tp8742
I1
s(g4399
I42
g4400
Vinsert
p8743
I14
VClassInstanceCreation
p8744
tp8745
I1
s(g1104
I42
g1105
Vinsert
p8746
I44
VSingleVariableDeclaration
p8747
tp8748
F0.25
s(g786
I42
g787
Vinsert
p8749
I42
VSimpleName: args
p8750
tp8751
I1
s(g376
I42
g377
Vinsert
p8752
I42
VSimpleName: meta
p8753
tp8754
I2
s(g8273
I42
g8274
Vinsert
p8755
I45
VStringLiteral: "clojure"
p8756
tp8757
I1
s(g8511
I42
g8512
Vinsert
p8758
I39
VPrimitiveType: int
p8759
tp8760
F0.25
s(g3549
I42
g3550
Vinsert
p8761
I42
VSimpleName: AtomicLong
p8762
tp8763
F0.5
s(g2677
I42
g2678
Vinsert
p8764
I25
VIfStatement
p8765
tp8766
I1
s(g6114
I42
g6115
Vinsert
p8767
I40
VQualifiedName: ListMap.EMPTY
p8768
tp8769
I1
s(g7680
I42
g7681
Vinsert
p8770
I42
VSimpleName: createHT
p8771
tp8772
I1
s(g3973
I42
g3974
Vinsert
p8773
I42
VSimpleName: o2
p8774
tp8775
F0.25
s(g1223
I42
g1224
Vinsert
p8776
I59
VVariableDeclarationFragment
p8777
tp8778
I3
s(g6349
I42
g6350
Vinsert
p8779
I42
VSimpleName: Reflector
p8780
tp8781
I1
s(g3256
I42
g3257
Vinsert
p8782
I83
VModifier: static
p8783
tp8784
F5.25
s(g8463
I42
g8464
Vinsert
p8785
I42
VSimpleName: mappings
p8786
tp8787
I1
s(g515
I42
g516
Vinsert
p8788
I42
VSimpleName: LinkedList
p8789
tp8790
I2
s(g2286
I42
g2287
Vinsert
p8791
I52
VThisExpression
p8792
tp8793
F1.75
s(g2914
I42
g2915
Vinsert
p8794
I32
VMethodInvocation
p8795
tp8796
F2.25
s(g1822
I42
g1823
Vinsert
p8797
I33
VNullLiteral
p8798
tp8799
I1
s(g1558
I42
g1559
Vinsert
p8800
I42
VSimpleName: fieldName
p8801
tp8802
I1
s(g436
I42
g437
Vinsert
p8803
I45
VStringLiteral: "vector"
p8804
tp8805
F0.25
s(g6505
I42
g6506
Vinsert
p8806
I42
VSimpleName: args
p8807
tp8808
I1
s(g66
I42
g67
Vinsert
p8809
I45
VStringLiteral: " params"
p8810
tp8811
I1
s(g4726
I42
g4727
Vinsert
p8812
I43
VSimpleType: String
p8813
tp8814
F1.25
s(g4480
I42
g4481
Vinsert
p8815
I42
VSimpleName: o
p8816
tp8817
F4.5
s(g4916
I42
g4917
Vinsert
p8818
I42
VSimpleName: denominator
p8819
tp8820
I2
s(Vinsert
p8821
I42
VSimpleName: getValue
p8822
Vinsert
p8823
I43
VSimpleType: MapEntry
p8824
tp8825
I1
s(g3495
I42
g3496
Vinsert
p8826
I43
VSimpleType: TVal
p8827
tp8828
I1
s(g7680
I42
g7681
Vinsert
p8829
I42
VSimpleName: HASHTABLE_THRESHOLD
p8830
tp8831
I1
s(g3549
I42
g3550
Vinsert
p8832
I23
VFieldDeclaration
p8833
tp8834
F0.25
s(Vinsert
p8835
I42
VSimpleName: read
p8836
Vinsert
p8837
I44
VSingleVariableDeclaration
p8838
tp8839
F0.25
s(g4447
I42
g4448
Vinsert
p8840
I42
VSimpleName: resolvedNS
p8841
tp8842
I1
s(g2883
I42
g2884
Vinsert
p8843
I22
VFieldAccess
p8844
tp8845
I1
s(g2830
I42
g2831
Vinsert
p8846
I40
VQualifiedName: dest.length
p8847
tp8848
I1
s(g3676
I42
g3677
Vinsert
p8849
I42
VSimpleName: Compiler
p8850
tp8851
I1
s(g832
I42
g833
Vinsert
p8852
I27
VInfixExpression: !=
p8853
tp8854
F0.5
s(g2087
I42
g2088
Vinsert
p8855
I8
VBlock
p8856
tp8857
I1
s(g164
I42
g165
Vinsert
p8858
I60
VVariableDeclarationStatement
p8859
tp8860
F0.25
s(g5916
I42
g5917
Vinsert
p8861
I57
VTypeLiteral
p8862
tp8863
I1
s(g5290
I42
g5291
Vinsert
p8864
I42
VSimpleName: UnresolvedVarExpr
p8865
tp8866
F0.25
s(g3290
I42
g3291
Vinsert
p8867
I42
VSimpleName: identity
p8868
tp8869
F1.75
s(g3022
I42
g3023
Vinsert
p8870
I60
VVariableDeclarationStatement
p8871
tp8872
I1
s(g8268
I42
g8269
Vinsert
p8873
I42
VSimpleName: loadFactor
p8874
tp8875
F0.5
s(g7093
I42
g7094
Vinsert
p8876
I42
VSimpleName: tld
p8877
tp8878
F1.25
s(g950
I42
g951
Vinsert
p8879
I14
VClassInstanceCreation
p8880
tp8881
F1.5
s(g6002
I42
g6003
Vinsert
p8882
I42
VSimpleName: PersistentTreeMap
p8883
tp8884
I1
s(g149
I42
g150
Vinsert
p8885
I42
VSimpleName: tld
p8886
tp8887
F0.5
s(g4041
I42
g4042
Vinsert
p8888
I40
VQualifiedName: L.successor
p8889
tp8890
I1
s(g5505
I42
g5506
Vinsert
p8891
I11
VCastExpression
p8892
tp8893
I2
s(g257
I42
g258
Vinsert
p8894
I43
VSimpleType: V
p8895
tp8896
I1
s(g2891
I42
g2892
Vinsert
p8897
I32
VMethodInvocation
p8898
tp8899
F14.5
s(g6704
I42
g6705
Vinsert
p8900
I42
VSimpleName: isLoop
p8901
tp8902
I1
s(g1386
I42
g1387
Vinsert
p8903
I42
VSimpleName: munge
p8904
tp8905
I1
s(g3156
I42
g3157
Vinsert
p8906
I42
VSimpleName: val
p8907
tp8908
F0.25
s(g3290
I42
g3291
Vinsert
p8909
I22
VFieldAccess
p8910
tp8911
F0.25
s(g8273
I42
g8274
Vinsert
p8912
I42
VSimpleName: Module
p8913
tp8914
I1
s(g1273
I42
g1274
Vinsert
p8915
I36
VParenthesizedExpression
p8916
tp8917
I1
s(g3400
I42
g3401
Vinsert
p8918
I11
VCastExpression
p8919
tp8920
I1
s(g2186
I42
g2187
Vinsert
p8921
I52
VThisExpression
p8922
tp8923
F1.25
s(g6300
I42
g6301
Vinsert
p8924
I32
VMethodInvocation
p8925
tp8926
I1
s(g1157
I42
g1158
Vinsert
p8927
I42
VSimpleName: v
p8928
tp8929
I3
s(g4702
I42
g4703
Vinsert
p8930
I42
VSimpleName: set
p8931
tp8932
I1
s(g1941
I42
g1942
Vinsert
p8933
I42
VSimpleName: BitmapIndexedNode
p8934
tp8935
I1
s(g106
I42
g107
Vinsert
p8936
I11
VCastExpression
p8937
tp8938
I3
s(Vinsert
p8939
I42
VSimpleName: contains
p8940
Vinsert
p8941
I43
VSimpleType: IPersistentSet
p8942
tp8943
I3
s(g3717
I42
g3718
Vinsert
p8944
I27
VInfixExpression: <
p8945
tp8946
I9
s(g159
I42
g160
Vinsert
p8947
I43
VSimpleType: Cons
p8948
tp8949
F0.25
s(g2697
I42
g2698
Vinsert
p8950
I42
VSimpleName: access
p8951
tp8952
F0.25
s(g5634
I42
g5635
Vinsert
p8953
I42
VSimpleName: rdr
p8954
tp8955
I1
s(g819
I42
g820
Vinsert
p8956
I39
VPrimitiveType: int
p8957
tp8958
F0.5
s(g676
I42
g677
Vinsert
p8959
I42
VSimpleName: Num
p8960
tp8961
F1.0
s(g2456
I42
g2457
Vinsert
p8962
I42
VSimpleName: actions
p8963
tp8964
I1
s(Vinsert
p8965
I42
VSimpleName: map
p8966
Vinsert
p8967
I54
VTryStatement
p8968
tp8969
I1
s(g401
I42
g402
Vinsert
p8970
I43
VSimpleType: Exception
p8971
tp8972
F0.25
s(g2310
I42
g2311
Vinsert
p8973
I8
VBlock
p8974
tp8975
I1
s(g6726
I42
g6727
Vinsert
p8976
I33
VNullLiteral
p8977
tp8978
I1
s(g1127
I42
g1128
Vinsert
p8979
I42
VSimpleName: IllegalArgumentException
p8980
tp8981
I1
s(g4447
I42
g4448
Vinsert
p8982
I11
VCastExpression
p8983
tp8984
I1
s(g1177
I42
g1178
Vinsert
p8985
I45
VStringLiteral: ", time: "
p8986
tp8987
I1
s(g5147
I42
g5148
Vinsert
p8988
I42
VSimpleName: notFound
p8989
tp8990
F1.25
s(g1055
I42
g1056
Vinsert
p8991
I43
VSimpleType: Symbol
p8992
tp8993
I1
s(g5130
I42
g5131
Vinsert
p8994
I11
VCastExpression
p8995
tp8996
I1
s(g1461
I42
g1462
Vinsert
p8997
I42
VSimpleName: paramlists
p8998
tp8999
I3
s(g484
I42
g485
Vinsert
p9000
I43
VSimpleType: Keyword
p9001
tp9002
I2
s(g285
I42
g286
Vinsert
p9003
I42
VSimpleName: JarURLConnection
p9004
tp9005
I1
s(g3999
I42
g4000
Vinsert
p9006
I32
VMethodInvocation
p9007
tp9008
I2
s(g2573
I42
g2574
Vinsert
p9009
I42
VSimpleName: cons
p9010
tp9011
I1
s(Vinsert
p9012
I42
VSimpleName: arraycopy
p9013
Vinsert
p9014
I43
VSimpleType: Object
p9015
tp9016
I7
s(g5576
I42
g5577
Vinsert
p9017
I59
VVariableDeclarationFragment
p9018
tp9019
I1
s(g3814
I42
g3815
Vinsert
p9020
I42
VSimpleName: TRef
p9021
tp9022
F0.25
s(g3999
I42
g4000
Vinsert
p9023
I42
VSimpleName: i
p9024
tp9025
I1
s(g2443
I42
g2444
Vinsert
p9026
I29
VJavadoc
p9027
tp9028
F0.25
s(g1654
I42
g1655
Vinsert
p9029
I42
VSimpleName: y
p9030
tp9031
I1
s(g5256
I42
g5257
Vinsert
p9032
I27
VInfixExpression: !=
p9033
tp9034
I6
s(g2273
I42
g2274
Vinsert
p9035
I43
VSimpleType: Num
p9036
tp9037
I1
s(g6639
I42
g6640
Vinsert
p9038
I43
VSimpleType: Symbol
p9039
tp9040
I1
s(g2509
I42
g2510
Vinsert
p9041
I42
VSimpleName: tltest
p9042
tp9043
I1
s(g1248
I42
g1249
Vinsert
p9044
I41
VReturnStatement
p9045
tp9046
I1
s(g2677
I42
g2678
Vinsert
p9047
I54
VTryStatement
p9048
tp9049
I1
s(g333
I42
g334
Vinsert
p9050
I42
VSimpleName: Integer
p9051
tp9052
I2
s(g285
I42
g286
Vinsert
p9053
I8
VBlock
p9054
tp9055
I1
s(g5664
I42
g5665
Vinsert
p9056
I8
VBlock
p9057
tp9058
I2
s(g3151
I42
g3152
Vinsert
p9059
I60
VVariableDeclarationStatement
p9060
tp9061
I2
s(g1765
I42
g1766
Vinsert
p9062
I11
VCastExpression
p9063
tp9064
I5
s(g7694
I42
g7695
Vinsert
p9065
I34
VNumberLiteral: 15
p9066
tp9067
I1
s(g2348
I42
g2349
Vinsert
p9068
I39
VPrimitiveType: long
p9069
tp9070
I1
s(g1495
I42
g1496
Vinsert
p9071
I42
VSimpleName: newv
p9072
tp9073
I1
s(g1856
I42
g1857
Vinsert
p9074
I21
VExpressionStatement
p9075
tp9076
I1
s(g1925
I42
g1926
Vinsert
p9077
I42
VSimpleName: UnsupportedOperationException
p9078
tp9079
F0.25
s(g1802
I42
g1803
Vinsert
p9080
I42
VSimpleName: remove
p9081
tp9082
F0.25
s(g1396
I42
g1397
Vinsert
p9083
I34
VNumberLiteral: 2
p9084
tp9085
I1
s(g1583
I42
g1584
Vinsert
p9086
I36
VParenthesizedExpression
p9087
tp9088
I1
s(g489
I42
g490
Vinsert
p9089
I43
VSimpleType: Label
p9090
tp9091
I1
s(g6059
I42
g6060
Vinsert
p9092
I44
VSingleVariableDeclaration
p9093
tp9094
F2.25
s(g8130
I42
g8131
Vinsert
p9095
I42
VSimpleName: Iterator
p9096
tp9097
F2.5
s(g2480
I42
g2481
Vinsert
p9098
I43
VSimpleType: Object
p9099
tp9100
F0.25
s(g4267
I42
g4268
Vinsert
p9101
I42
VSimpleName: input
p9102
tp9103
I3
s(g2273
I42
g2274
Vinsert
p9104
I43
VSimpleType: RecognitionException
p9105
tp9106
F0.25
s(Vinsert
p9107
I42
VSimpleName: rest
p9108
Vinsert
p9109
I42
VSimpleName: hashCode
p9110
tp9111
I2
s(g4171
I42
g4172
Vinsert
p9112
I42
VSimpleName: ref
p9113
tp9114
I2
s(g666
I42
g667
Vinsert
p9115
I42
VSimpleName: i
p9116
tp9117
I7
s(g2677
I42
g2678
Vinsert
p9118
I42
VSimpleName: Numbers
p9119
tp9120
I1
s(g4303
I42
g4304
Vinsert
p9121
I42
VSimpleName: String
p9122
tp9123
F0.25
s(Vinsert
p9124
I42
VSimpleName: blacken
p9125
Vinsert
p9126
I42
VSimpleName: val
p9127
tp9128
I1
s(g6059
I42
g6060
Vinsert
p9129
I41
VReturnStatement
p9130
tp9131
F6.25
s(g740
I42
g741
Vinsert
p9132
I14
VClassInstanceCreation
p9133
tp9134
I1
s(g1461
I42
g1462
Vinsert
p9135
I42
VSimpleName: args
p9136
tp9137
F0.25
s(g1027
I42
g1028
Vinsert
p9138
I42
VSimpleName: RT
p9139
tp9140
I3
s(g5036
I42
g5037
Vinsert
p9141
I25
VIfStatement
p9142
tp9143
I2
s(g2596
I42
g2597
Vinsert
p9144
I42
VSimpleName: newArray
p9145
tp9146
I1
s(g3633
I42
g3634
Vinsert
p9147
I42
VSimpleName: NullPointerException
p9148
tp9149
I1
s(g2169
I42
g2170
Vinsert
p9150
I32
VMethodInvocation
p9151
tp9152
I1
s(g5019
I42
g5020
Vinsert
p9153
I34
VNumberLiteral: 1
p9154
tp9155
I1
s(g1197
I42
g1198
Vinsert
p9156
I43
VSimpleType: Class
p9157
tp9158
F0.25
s(g1137
I42
g1138
Vinsert
p9159
I43
VSimpleType: IPersistentMap
p9160
tp9161
I3
s(g1765
I42
g1766
Vinsert
p9162
I8
VBlock
p9163
tp9164
F17.75
s(g3212
I42
g3213
Vinsert
p9165
I52
VThisExpression
p9166
tp9167
F5.5
s(g2719
I42
g2720
Vinsert
p9168
I27
VInfixExpression: ==
p9169
tp9170
I2
s(g5606
I42
g5607
Vinsert
p9171
I42
VSimpleName: scriptbase
p9172
tp9173
F0.25
s(g1722
I42
g1723
Vinsert
p9174
I60
VVariableDeclarationStatement
p9175
tp9176
I1
s(g386
I42
g387
Vinsert
p9177
I43
VSimpleType: MonitorExitExpr
p9178
tp9179
F0.25
s(g1469
I42
g1470
Vinsert
p9180
I45
VStringLiteral: "let"
p9181
tp9182
I1
s(g6026
I42
g6027
Vinsert
p9183
I11
VCastExpression
p9184
tp9185
I1
s(g2883
I42
g2884
Vinsert
p9186
I42
VSimpleName: prior
p9187
tp9188
I1
s(Vinsert
p9189
I42
VSimpleName: printStackTrace
p9190
Vinsert
p9191
I42
VSimpleName: OUT
p9192
tp9193
I1
s(g888
I42
g889
Vinsert
p9194
I11
VCastExpression
p9195
tp9196
F1.25
s(g199
I42
g200
Vinsert
p9197
I42
VSimpleName: mv
p9198
tp9199
I2
s(g3797
I42
g3798
Vinsert
p9200
I7
VAssignment: =
p9201
tp9202
I5
s(g3229
I42
g3230
Vinsert
p9203
I42
VSimpleName: i
p9204
tp9205
F0.25
s(g4612
I42
g4613
Vinsert
p9206
I62
VInstanceofExpression
p9207
tp9208
I1
s(g994
I42
g995
Vinsert
p9209
I42
VSimpleName: Num
p9210
tp9211
F0.25
s(g391
I42
g392
Vinsert
p9212
I45
VStringLiteral: "Invalid number: "
p9213
tp9214
F0.25
s(g3644
I42
g3645
Vinsert
p9215
I83
VModifier: final
p9216
tp9217
I3
s(Vinsert
p9218
I42
VSimpleName: count
p9219
Vinsert
p9220
I27
VInfixExpression: >
p9221
tp9222
I3
s(g1162
I42
g1163
Vinsert
p9223
I45
VStringLiteral: "fn"
p9224
tp9225
I1
s(g2111
I42
g2112
Vinsert
p9226
I43
VSimpleType: clojure.lang.Namespace
p9227
tp9228
I1
s(g267
I42
g268
Vinsert
p9229
I16
VConditionalExpression
p9230
tp9231
I1
s(g1451
I42
g1452
Vinsert
p9232
I42
VSimpleName: ConstantExpr
p9233
tp9234
F0.25
s(g6786
I42
g6787
Vinsert
p9235
I42
VSimpleName: arg1
p9236
tp9237
F0.25
s(g401
I42
g402
Vinsert
p9238
I25
VIfStatement
p9239
tp9240
I1
s(g6941
I42
g6942
Vinsert
p9241
I32
VMethodInvocation
p9242
tp9243
I2
s(Vinsert
p9244
I42
VSimpleName: getName
p9245
Vinsert
p9246
I44
VSingleVariableDeclaration
p9247
tp9248
F0.75
s(g4702
I42
g4703
Vinsert
p9249
I42
VSimpleName: get
p9250
tp9251
F0.25
s(g2615
I42
g2616
Vinsert
p9252
I16
VConditionalExpression
p9253
tp9254
I1
s(g6229
I42
g6230
Vinsert
p9255
I42
VSimpleName: paramlists
p9256
tp9257
I1
s(g426
I42
g427
Vinsert
p9258
I33
VNullLiteral
p9259
tp9260
I2
s(g237
I42
g238
Vinsert
p9261
I42
VSimpleName: Short
p9262
tp9263
I2
s(Vinsert
p9264
I42
VSimpleName: invoke
p9265
Vinsert
p9266
I42
VSimpleName: getAsMethodOfPublicBase
p9267
tp9268
F0.25
s(g6140
I42
g6141
Vinsert
p9269
I59
VVariableDeclarationFragment
p9270
tp9271
I1
s(g1678
I42
g1679
Vinsert
p9272
I43
VSimpleType: PersistentTreeSet
p9273
tp9274
I1
s(g2294
I42
g2295
Vinsert
p9275
I14
VClassInstanceCreation
p9276
tp9277
F0.25
s(g6941
I42
g6942
Vinsert
p9278
I42
VSimpleName: ARRAY
p9279
tp9280
I1
s(g7669
I42
g7670
Vinsert
p9281
I40
VQualifiedName: Opcodes.ASM4
p9282
tp9283
F0.25
s(g421
I42
g422
Vinsert
p9284
I43
VSimpleType: String
p9285
tp9286
I2
s(g4452
I42
g4453
Vinsert
p9287
I42
VSimpleName: Var
p9288
tp9289
I1
s(g3767
I42
g3768
Vinsert
p9290
I41
VReturnStatement
p9291
tp9292
I1
s(g3455
I42
g3456
Vinsert
p9293
I42
VSimpleName: gen
p9294
tp9295
I3
s(g2026
I42
g2027
Vinsert
p9296
I42
VSimpleName: visitLineNumber
p9297
tp9298
I2
s(g1331
I42
g1332
Vinsert
p9299
I40
VQualifiedName: leaves.length
p9300
tp9301
I1
s(g5380
I42
g5381
Vinsert
p9302
I42
VSimpleName: InputStreamReader
p9303
tp9304
I1
s(g6076
I42
g6077
Vinsert
p9305
I42
VSimpleName: isArray
p9306
tp9307
I1
s(g937
I42
g938
Vinsert
p9308
I44
VSingleVariableDeclaration
p9309
tp9310
F0.75
s(g6806
I42
g6807
Vinsert
p9311
I42
VSimpleName: added
p9312
tp9313
I1
s(g3290
I42
g3291
Vinsert
p9314
I39
VPrimitiveType: boolean
p9315
tp9316
F0.25
s(g2262
I42
g2263
Vinsert
p9317
I42
VSimpleName: newv
p9318
tp9319
I2
s(Vinsert
p9320
I42
VSimpleName: invokeStatic
p9321
Vinsert
p9322
I27
VInfixExpression: !=
p9323
tp9324
I1
s(g3644
I42
g3645
Vinsert
p9325
I42
VSimpleName: IN_NS_VAR
p9326
tp9327
I1
s(g8446
I42
g8447
Vinsert
p9328
I43
VSimpleType: Object
p9329
tp9330
F0.25
s(g1278
I42
g1279
Vinsert
p9331
I43
VSimpleType: Object
p9332
tp9333
I1
s(g4916
I42
g4917
Vinsert
p9334
I42
VSimpleName: numerator
p9335
tp9336
I1
s(g6781
I42
g6782
Vinsert
p9337
I42
VSimpleName: form
p9338
tp9339
F0.25
s(g3076
I42
g3077
Vinsert
p9340
I41
VReturnStatement
p9341
tp9342
F0.5
s(g1634
I42
g1635
Vinsert
p9343
I60
VVariableDeclarationStatement
p9344
tp9345
I1
s(g2729
I42
g2730
Vinsert
p9346
I41
VReturnStatement
p9347
tp9348
I1
s(g3256
I42
g3257
Vinsert
p9349
I59
VVariableDeclarationFragment
p9350
tp9351
F11.5
s(g3880
I42
g3881
Vinsert
p9352
I42
VSimpleName: getJavaClass
p9353
tp9354
F0.25
s(g709
I42
g710
Vinsert
p9355
I8
VBlock
p9356
tp9357
I1
s(g2159
I42
g2160
Vinsert
p9358
I42
VSimpleName: Object
p9359
tp9360
F0.5
s(g618
I42
g619
Vinsert
p9361
I42
VSimpleName: s
p9362
tp9363
F2.25
s(g2776
I42
g2777
Vinsert
p9364
I43
VSimpleType: BigInteger
p9365
tp9366
F2.25
s(g1812
I42
g1813
Vinsert
p9367
I42
VSimpleName: cv
p9368
tp9369
I1
s(g2111
I42
g2112
Vinsert
p9370
I40
VQualifiedName: java.util.Map
p9371
tp9372
I1
s(g3717
I42
g3718
Vinsert
p9373
I37
VPostfixExpression: ++
p9374
tp9375
I5
s(g431
I42
g432
Vinsert
p9376
I42
VSimpleName: canEmitPrimitive
p9377
tp9378
I1
s(g1368
I42
g1369
Vinsert
p9379
I43
VSimpleType: Exception
p9380
tp9381
F0.75
s(g1515
I42
g1516
Vinsert
p9382
I43
VSimpleType: C
p9383
tp9384
F0.25
s(g6335
I42
g6336
Vinsert
p9385
I34
VNumberLiteral: 16
p9386
tp9387
I1
s(Vinsert
p9388
I42
VSimpleName: ret1
p9389
Vinsert
p9390
I41
VReturnStatement
p9391
tp9392
I1
s(g557
I42
g558
Vinsert
p9393
I85
VDimension
p9394
tp9395
I1
s(g6166
I42
g6167
Vinsert
p9396
I42
VSimpleName: APersistentMap
p9397
tp9398
F0.25
s(g989
I42
g990
Vinsert
p9399
I42
VSimpleName: varCallsites
p9400
tp9401
I1
s(g515
I42
g516
Vinsert
p9402
I24
VForStatement
p9403
tp9404
I2
s(g7491
I42
g7492
Vinsert
p9405
I51
VSynchronizedStatement
p9406
tp9407
I1
s(g164
I42
g165
Vinsert
p9408
I9
VBooleanLiteral: false
p9409
tp9410
F0.25
s(g999
I42
g1000
Vinsert
p9411
I33
VNullLiteral
p9412
tp9413
I1
s(g3644
I42
g3645
Vinsert
p9414
I43
VSimpleType: Var
p9415
tp9416
I1
s(Vinsert
p9417
I42
VSimpleName: group
p9418
Vinsert
p9419
I42
VSimpleName: String
p9420
tp9421
I2
s(g1611
I42
g1612
Vinsert
p9422
I8
VBlock
p9423
tp9424
I5
s(g7602
I42
g7603
Vinsert
p9425
I42
VSimpleName: map
p9426
tp9427
F2.25
s(g4110
I42
g4111
Vinsert
p9428
I42
VSimpleName: ret
p9429
tp9430
F0.25
s(g1401
I42
g1402
Vinsert
p9431
I8
VBlock
p9432
tp9433
I2
s(g1316
I42
g1317
Vinsert
p9434
I62
VInstanceofExpression
p9435
tp9436
I1
s(g4932
I42
g4933
Vinsert
p9437
I42
VSimpleName: Reflector
p9438
tp9439
I3
s(g318
I42
g319
Vinsert
p9440
I42
VSimpleName: makeClassLoader
p9441
tp9442
F0.25
s(g1228
I42
g1229
Vinsert
p9443
I21
VExpressionStatement
p9444
tp9445
I1
s(g6781
I42
g6782
Vinsert
p9446
I42
VSimpleName: C
p9447
tp9448
F0.25
s(g1949
I42
g1950
Vinsert
p9449
I42
VSimpleName: simpleName
p9450
tp9451
I1
s(g5759
I42
g5760
Vinsert
p9452
I21
VExpressionStatement
p9453
tp9454
I2
s(g3076
I42
g3077
Vinsert
p9455
I42
VSimpleName: Transaction
p9456
tp9457
I1
s(g2528
I42
g2529
Vinsert
p9458
I62
VInstanceofExpression
p9459
tp9460
I2
s(g2315
I42
g2316
Vinsert
p9461
I42
VSimpleName: IPersistentMap
p9462
tp9463
I2
s(g149
I42
g150
Vinsert
p9464
I43
VSimpleType: Cons
p9465
tp9466
F0.5
s(g154
I42
g155
Vinsert
p9467
I43
VSimpleType: BigInt
p9468
tp9469
I1
s(g1861
I42
g1862
Vinsert
p9470
I60
VVariableDeclarationStatement
p9471
tp9472
I1
s(g4924
I42
g4925
Vinsert
p9473
I42
VSimpleName: IReduceInit
p9474
tp9475
I1
s(g3689
I42
g3690
Vinsert
p9476
I83
VModifier: final
p9477
tp9478
F0.25
s(g4404
I42
g4405
Vinsert
p9479
I42
VSimpleName: Symbol
p9480
tp9481
F0.25
s(g3676
I42
g3677
Vinsert
p9482
I8
VBlock
p9483
tp9484
I6
s(g730
I42
g731
Vinsert
p9485
I59
VVariableDeclarationFragment
p9486
tp9487
I2
s(g401
I42
g402
Vinsert
p9488
I42
VSimpleName: Exception
p9489
tp9490
F0.25
s(g3135
I42
g3136
Vinsert
p9491
I42
VSimpleName: c
p9492
tp9493
I1
s(g214
I42
g215
Vinsert
p9494
I42
VSimpleName: String
p9495
tp9496
I1
s(g2461
I42
g2462
Vinsert
p9497
I42
VSimpleName: String
p9498
tp9499
F1.0
s(g1027
I42
g1028
Vinsert
p9500
I32
VMethodInvocation
p9501
tp9502
I6
s(g3654
I42
g3655
Vinsert
p9503
I42
VSimpleName: Modifier
p9504
tp9505
I1
s(g3918
I42
g3919
Vinsert
p9506
I42
VSimpleName: Var
p9507
tp9508
I2
s(g1373
I42
g1374
Vinsert
p9509
I14
VClassInstanceCreation
p9510
tp9511
I1
s(g6203
I42
g6204
Vinsert
p9512
I59
VVariableDeclarationFragment
p9513
tp9514
I1
s(g699
I42
g700
Vinsert
p9515
I42
VSimpleName: access
p9516
tp9517
I1
s(g3105
I42
g3106
Vinsert
p9518
I45
VStringLiteral: "public static long clojure.lang.RT.uncheckedLongCast(byte)"
p9519
tp9520
I1
s(g5198
I42
g5199
Vinsert
p9521
I33
VNullLiteral
p9522
tp9523
I1
s(g2026
I42
g2027
Vinsert
p9524
I42
VSimpleName: defaultLabel
p9525
tp9526
I1
s(g1812
I42
g1813
Vinsert
p9527
I42
VSimpleName: name
p9528
tp9529
F0.25
s(g3460
I42
g3461
Vinsert
p9530
I32
VMethodInvocation
p9531
tp9532
I1
s(g21
I42
g22
Vinsert
p9533
I42
VSimpleName: mform
p9534
tp9535
I1
s(g7010
I42
g7011
Vinsert
p9536
I59
VVariableDeclarationFragment
p9537
tp9538
F9.25
s(g4084
I42
g4085
Vinsert
p9539
I43
VSimpleType: RandomAccess
p9540
tp9541
I1
s(g532
I42
g533
Vinsert
p9542
I43
VSimpleType: Object
p9543
tp9544
F8.25
s(g2756
I42
g2757
Vinsert
p9545
I42
VSimpleName: keys
p9546
tp9547
F0.25
s(g4788
I42
g4789
Vinsert
p9548
I27
VInfixExpression: !=
p9549
tp9550
I4
s(g3237
I42
g3238
Vinsert
p9551
I21
VExpressionStatement
p9552
tp9553
I2
s(g1401
I42
g1402
Vinsert
p9554
I25
VIfStatement
p9555
tp9556
I1
s(g1505
I42
g1506
Vinsert
p9557
I42
VSimpleName: v
p9558
tp9559
I6
s(g3565
I42
g3566
Vinsert
p9560
I2
VArrayAccess
p9561
tp9562
F0.25
s(g8273
I42
g8274
Vinsert
p9563
I42
VSimpleName: OUT
p9564
tp9565
I1
s(g285
I42
g286
Vinsert
p9566
I42
VSimpleName: getProtocol
p9567
tp9568
I1
s(Vinsert
p9569
I42
VSimpleName: first
p9570
Vinsert
p9571
I27
VInfixExpression: >
p9572
tp9573
I1
s(g1662
I42
g1663
Vinsert
p9574
I43
VSimpleType: IObj
p9575
tp9576
I1
s(g1045
I42
g1046
Vinsert
p9577
I43
VSimpleType: Symbol
p9578
tp9579
I6
s(g169
I42
g170
Vinsert
p9580
I42
VSimpleName: cv
p9581
tp9582
I2
s(g2520
I42
g2521
Vinsert
p9583
I41
VReturnStatement
p9584
tp9585
I2
s(g4640
I42
g4641
Vinsert
p9586
I42
VSimpleName: String
p9587
tp9588
F0.5
s(g159
I42
g160
Vinsert
p9589
I36
VParenthesizedExpression
p9590
tp9591
I1
s(g26
I42
g27
Vinsert
p9592
I41
VReturnStatement
p9593
tp9594
I1
s(Vinsert
p9595
I42
VSimpleName: get
p9596
Vinsert
p9597
I42
VSimpleName: vars
p9598
tp9599
I2
s(Vinsert
p9600
I42
VSimpleName: set
p9601
Vinsert
p9602
I42
VSimpleName: in
p9603
tp9604
I2
s(g5802
I42
g5803
Vinsert
p9605
I8
VBlock
p9606
tp9607
I1
s(g1268
I42
g1269
Vinsert
p9608
I42
VSimpleName: i
p9609
tp9610
I2
s(g9012
I42
g9013
Vinsert
p9611
I5
VArrayType: Object[]
p9612
tp9613
I7
s(g8446
I42
g8447
Vinsert
p9614
I44
VSingleVariableDeclaration
p9615
tp9616
F0.25
s(Vinsert
p9617
I42
VSimpleName: get
p9618
Vinsert
p9619
I43
VSimpleType: Namespace
p9620
tp9621
F1.25
s(g4793
I42
g4794
Vinsert
p9622
I42
VSimpleName: module
p9623
tp9624
I1
s(g760
I42
g761
Vinsert
p9625
I42
VSimpleName: column
p9626
tp9627
I2
s(g1009
I42
g1010
Vinsert
p9628
I42
VSimpleName: resolver
p9629
tp9630
I1
s(g1892
I42
g1893
Vinsert
p9631
I42
VSimpleName: minSize
p9632
tp9633
I1
s(g1187
I42
g1188
Vinsert
p9634
I42
VSimpleName: i
p9635
tp9636
I3
s(g2387
I42
g2388
Vinsert
p9637
I43
VSimpleType: Var
p9638
tp9639
I2
s(g3438
I42
g3439
Vinsert
p9640
I42
VSimpleName: getReadPoint
p9641
tp9642
F0.25
s(g2087
I42
g2088
Vinsert
p9643
I42
VSimpleName: var
p9644
tp9645
F1.25
s(g436
I42
g437
Vinsert
p9646
I42
VSimpleName: VECTOR
p9647
tp9648
F0.25
s(g6884
I42
g6885
Vinsert
p9649
I41
VReturnStatement
p9650
tp9651
I4
s(g5528
I42
g5529
Vinsert
p9652
I43
VSimpleType: Class
p9653
tp9654
F0.5
s(g1866
I42
g1867
Vinsert
p9655
I42
VSimpleName: type
p9656
tp9657
I1
s(g6349
I42
g6350
Vinsert
p9658
I42
VSimpleName: targetClass
p9659
tp9660
I1
s(g1707
I42
g1708
Vinsert
p9661
I42
VSimpleName: Number
p9662
tp9663
F0.5
s(g1601
I42
g1602
Vinsert
p9664
I2
VArrayAccess
p9665
tp9666
I2
s(g6174
I42
g6175
Vinsert
p9667
I42
VSimpleName: FnExpr
p9668
tp9669
F0.75
s(g898
I42
g899
Vinsert
p9670
I8
VBlock
p9671
tp9672
I1
s(g2641
I42
g2642
Vinsert
p9673
I62
VInstanceofExpression
p9674
tp9675
I1
s(g3266
I42
g3267
Vinsert
p9676
I45
VStringLiteral: "No such namespace: "
p9677
tp9678
I2
s(g4166
I42
g4167
Vinsert
p9679
I42
VSimpleName: Node
p9680
tp9681
F0.25
s(g3135
I42
g3136
Vinsert
p9682
I43
VSimpleType: Numbers
p9683
tp9684
I1
s(g656
I42
g657
Vinsert
p9685
I52
VThisExpression
p9686
tp9687
F0.25
s(g1621
I42
g1622
Vinsert
p9688
I43
VSimpleType: Throwable
p9689
tp9690
F0.25
s(g7212
I42
g7213
Vinsert
p9691
I42
VSimpleName: i
p9692
tp9693
I2
s(g3999
I42
g4000
Vinsert
p9694
I42
VSimpleName: c
p9695
tp9696
I1
s(g1611
I42
g1612
Vinsert
p9697
I41
VReturnStatement
p9698
tp9699
I8
s(g8965
I42
g8966
Vinsert
p9700
I25
VIfStatement
p9701
tp9702
I2
s(g2623
I42
g2624
Vinsert
p9703
I42
VSimpleName: init
p9704
tp9705
F0.25
s(g3282
I42
g3283
Vinsert
p9706
I42
VSimpleName: Var
p9707
tp9708
I1
s(g5147
I42
g5148
Vinsert
p9709
I27
VInfixExpression: ==
p9710
tp9711
I1
s(g144
I42
g145
Vinsert
p9712
I21
VExpressionStatement
p9713
tp9714
I6
s(g305
I42
g306
Vinsert
p9715
I38
VPrefixExpression: !
p9716
tp9717
I1
s(g1050
I42
g1051
Vinsert
p9718
I42
VSimpleName: String
p9719
tp9720
I3
s(g1187
I42
g1188
Vinsert
p9721
I34
VNumberLiteral: 1
p9722
tp9723
I3
s(Vinsert
p9724
I42
VSimpleName: nth
p9725
Vinsert
p9726
I42
VSimpleName: bindingInits
p9727
tp9728
I2
s(g1817
I42
g1818
Vinsert
p9729
I39
VPrimitiveType: void
p9730
tp9731
F0.25
s(g376
I42
g377
Vinsert
p9732
I42
VSimpleName: IPersistentMap
p9733
tp9734
I1
s(g1354
I42
g1355
Vinsert
p9735
I7
VAssignment: =
p9736
tp9737
I3
s(g1563
I42
g1564
Vinsert
p9738
I32
VMethodInvocation
p9739
tp9740
I3
s(g3633
I42
g3634
Vinsert
p9741
I61
VWhileStatement
p9742
tp9743
I2
s(g6859
I42
g6860
Vinsert
p9744
I44
VSingleVariableDeclaration
p9745
tp9746
F0.5
s(g9107
I42
g9108
Vinsert
p9747
I42
VSimpleName: ms
p9748
tp9749
I1
s(g4303
I42
g4304
Vinsert
p9750
I43
VSimpleType: String
p9751
tp9752
F0.25
s(g547
I42
g548
Vinsert
p9753
I8
VBlock
p9754
tp9755
I4
s(g671
I42
g672
Vinsert
p9756
I42
VSimpleName: Exception
p9757
tp9758
F0.5
s(g1368
I42
g1369
Vinsert
p9759
I42
VSimpleName: ai
p9760
tp9761
I2
s(g3981
I42
g3982
Vinsert
p9762
I42
VSimpleName: subtractFrom
p9763
tp9764
F0.25
s(Vinsert
p9765
I42
VSimpleName: write
p9766
Vinsert
p9767
I13
VCharacterLiteral: '"'
p9768
tp9769
I1
s(g6300
I42
g6301
Vinsert
p9770
I21
VExpressionStatement
p9771
tp9772
I1
s(Vinsert
p9773
I42
VSimpleName: seq
p9774
Vinsert
p9775
I9
VBooleanLiteral: false
p9776
tp9777
I3
s(g1112
I42
g1113
Vinsert
p9778
I42
VSimpleName: Lock
p9779
tp9780
F0.25
s(g3918
I42
g3919
Vinsert
p9781
I42
VSimpleName: loadFrom
p9782
tp9783
F0.25
s(g2348
I42
g2349
Vinsert
p9784
I40
VQualifiedName: Long.MIN_VALUE
p9785
tp9786
I1
s(g1099
I42
g1100
Vinsert
p9787
I42
VSimpleName: String
p9788
tp9789
F1.25
s(g4826
I42
g4827
Vinsert
p9790
I43
VSimpleType: IObj
p9791
tp9792
F0.25
s(g562
I42
g563
Vinsert
p9793
I62
VInstanceofExpression
p9794
tp9795
I1
s(g3957
I42
g3958
Vinsert
p9796
I42
VSimpleName: ArgVector
p9797
tp9798
I1
s(g9773
I42
g9774
Vinsert
p9799
I42
VSimpleName: ms
p9800
tp9801
I4
s(g2480
I42
g2481
Vinsert
p9802
I42
VSimpleName: Number
p9803
tp9804
I3
s(g7618
I42
g7619
Vinsert
p9805
I41
VReturnStatement
p9806
tp9807
I3
s(g1253
I42
g1254
Vinsert
p9808
I33
VNullLiteral
p9809
tp9810
F4.0
s(g2361
I42
g2362
Vinsert
p9811
I59
VVariableDeclarationFragment
p9812
tp9813
F12.25
s(g978
I42
g979
Vinsert
p9814
I34
VNumberLiteral: 32
p9815
tp9816
I1
s(g1616
I42
g1617
Vinsert
p9817
I33
VNullLiteral
p9818
tp9819
I4
s(g91
I42
g92
Vinsert
p9820
I7
VAssignment: =
p9821
tp9822
F1.25
s(g8130
I42
g8131
Vinsert
p9823
I43
VSimpleType: Iterator
p9824
tp9825
F2.5
s(g1177
I42
g1178
Vinsert
p9826
I27
VInfixExpression: +
p9827
tp9828
I1
s(g3767
I42
g3768
Vinsert
p9829
I13
VCharacterLiteral: 'M'
p9830
tp9831
I1
s(g237
I42
g238
Vinsert
p9832
I43
VSimpleType: Short
p9833
tp9834
I2
s(g2159
I42
g2160
Vinsert
p9835
I44
VSingleVariableDeclaration
p9836
tp9837
F0.25
s(g194
I42
g195
Vinsert
p9838
I43
VSimpleType: INode
p9839
tp9840
I3
s(g2130
I42
g2131
Vinsert
p9841
I32
VMethodInvocation
p9842
tp9843
I6
s(Vinsert
p9844
I42
VSimpleName: invoke
p9845
Vinsert
p9846
I39
VPrimitiveType: int
p9847
tp9848
I2
s(g1530
I42
g1531
Vinsert
p9849
I24
VForStatement
p9850
tp9851
I2
s(g3500
I42
g3501
Vinsert
p9852
I42
VSimpleName: m
p9853
tp9854
I2
s(g5264
I42
g5265
Vinsert
p9855
I42
VSimpleName: URL
p9856
tp9857
I2
s(g252
I42
g253
Vinsert
p9858
I83
VModifier: public
p9859
tp9860
F0.25
s(Vinsert
p9861
I42
VSimpleName: min
p9862
Vinsert
p9863
I58
VVariableDeclarationExpression
p9864
tp9865
I2
s(Vinsert
p9866
I42
VSimpleName: var
p9867
Vinsert
p9868
I42
VSimpleName: unchecked_math
p9869
tp9870
I1
s(g5879
I42
g5880
Vinsert
p9871
I43
VSimpleType: LocalBinding
p9872
tp9873
F0.25
s(g1009
I42
g1010
Vinsert
p9874
I42
VSimpleName: getName
p9875
tp9876
F0.25
s(Vinsert
p9877
I42
VSimpleName: count
p9878
Vinsert
p9879
I42
VSimpleName: keyvals
p9880
tp9881
I1
s(g628
I42
g629
Vinsert
p9882
I14
VClassInstanceCreation
p9883
tp9884
F0.25
s(g1840
I42
g1841
Vinsert
p9885
I42
VSimpleName: ThreadLocal
p9886
tp9887
F0.5
s(g149
I42
g150
Vinsert
p9888
I42
VSimpleName: ThreadLocalData
p9889
tp9890
F0.5
s(g2140
I42
g2141
Vinsert
p9891
I54
VTryStatement
p9892
tp9893
I1
s(g2935
I42
g2936
Vinsert
p9894
I34
VNumberLiteral: 0x01f
p9895
tp9896
I1
s(g9189
I42
g9190
Vinsert
p9897
I42
VSimpleName: _CT_MODULE
p9898
tp9899
I1
s(g139
I42
g140
Vinsert
p9900
I40
VQualifiedName: ref.tvals.val
p9901
tp9902
F0.25
s(g31
I42
g32
Vinsert
p9903
I42
VSimpleName: meta
p9904
tp9905
I1
s(g3962
I42
g3963
Vinsert
p9906
I42
VSimpleName: binding
p9907
tp9908
F1.25
s(g1050
I42
g1051
Vinsert
p9909
I59
VVariableDeclarationFragment
p9910
tp9911
I9
s(g4041
I42
g4042
Vinsert
p9912
I40
VQualifiedName: L.status
p9913
tp9914
I1
s(g2814
I42
g2815
Vinsert
p9915
I59
VVariableDeclarationFragment
p9916
tp9917
I1
s(g2743
I42
g2744
Vinsert
p9918
I27
VInfixExpression: >
p9919
tp9920
F1.25
s(g5372
I42
g5373
Vinsert
p9921
I42
VSimpleName: restFn
p9922
tp9923
I2
s(g3135
I42
g3136
Vinsert
p9924
I42
VSimpleName: boxedMath
p9925
tp9926
I1
s(g542
I42
g543
Vinsert
p9927
I2
VArrayAccess
p9928
tp9929
I1
s(g666
I42
g667
Vinsert
p9930
I27
VInfixExpression: +
p9931
tp9932
I3
s(g267
I42
g268
Vinsert
p9933
I7
VAssignment: =
p9934
tp9935
I1
s(g497
I42
g498
Vinsert
p9936
I42
VSimpleName: table
p9937
tp9938
I1
s(g686
I42
g687
Vinsert
p9939
I3
VArrayCreation
p9940
tp9941
I1
s(g2294
I42
g2295
Vinsert
p9942
I42
VSimpleName: meta
p9943
tp9944
F0.25
s(g6770
I42
g6771
Vinsert
p9945
I42
VSimpleName: loopLabel
p9946
tp9947
I1
s(Vinsert
p9948
I42
VSimpleName: intern
p9949
Vinsert
p9950
I45
VStringLiteral: "clojure-user"
p9951
tp9952
I1
s(g159
I42
g160
Vinsert
p9953
I11
VCastExpression
p9954
tp9955
I1
s(g6289
I42
g6290
Vinsert
p9956
I40
VQualifiedName: C.RETURN
p9957
tp9958
I1
s(g1520
I42
g1521
Vinsert
p9959
I43
VSimpleType: IllegalArgumentException
p9960
tp9961
F0.25
s(g1258
I42
g1259
Vinsert
p9962
I42
VSimpleName: tmp
p9963
tp9964
I1
s(Vinsert
p9965
I42
VSimpleName: isNaN
p9966
Vinsert
p9967
I8
VBlock
p9968
tp9969
F1.25
s(Vinsert
p9970
I42
VSimpleName: put
p9971
Vinsert
p9972
I42
VSimpleName: popDynamicBinding
p9973
tp9974
F0.25
s(g973
I42
g974
Vinsert
p9975
I38
VPrefixExpression: !
p9976
tp9977
I1
s(g532
I42
g533
Vinsert
p9978
I42
VSimpleName: reduce
p9979
tp9980
F0.25
s(g4932
I42
g4933
Vinsert
p9981
I42
VSimpleName: arg13
p9982
tp9983
F0.5
s(g3251
I42
g3252
Vinsert
p9984
I42
VSimpleName: prior
p9985
tp9986
I3
s(g6092
I42
g6093
Vinsert
p9987
I42
VSimpleName: o
p9988
tp9989
I3
s(g2909
I42
g2910
Vinsert
p9990
I27
VInfixExpression: ==
p9991
tp9992
I2
s(g2542
I42
g2543
Vinsert
p9993
I11
VCastExpression
p9994
tp9995
I3
s(g2914
I42
g2915
Vinsert
p9996
I27
VInfixExpression: ==
p9997
tp9998
F2.25
s(g7613
I42
g7614
Vinsert
p9999
I33
VNullLiteral
p10000
tp10001
I2
s(g8602
I42
g8603
Vinsert
p10002
I43
VSimpleType: String
p10003
tp10004
I2
s(g7602
I42
g7603
Vinsert
p10005
I42
VSimpleName: IPersistentMap
p10006
tp10007
F0.25
s(g7528
I42
g7529
Vinsert
p10008
I21
VExpressionStatement
p10009
tp10010
F0.25
s(g5505
I42
g5506
Vinsert
p10011
I42
VSimpleName: CURRENT_NS
p10012
tp10013
I2
s(g1192
I42
g1193
Vinsert
p10014
I25
VIfStatement
p10015
tp10016
I1
s(g285
I42
g286
Vinsert
p10017
I43
VSimpleType: JarURLConnection
p10018
tp10019
I1
s(g4620
I42
g4621
Vinsert
p10020
I42
VSimpleName: bv
p10021
tp10022
I1
s(g3076
I42
g3077
Vinsert
p10023
I39
VPrimitiveType: long
p10024
tp10025
I1
s(g2010
I42
g2011
Vinsert
p10026
I42
VSimpleName: DynamicVar
p10027
tp10028
I1
s(g3991
I42
g3992
Vinsert
p10029
I42
VSimpleName: START
p10030
tp10031
I1
s(g6670
I42
g6671
Vinsert
p10032
I42
VSimpleName: Namespace
p10033
tp10034
I1
s(g3201
I42
g3202
Vinsert
p10035
I7
VAssignment: =
p10036
tp10037
F0.25
s(g4694
I42
g4695
Vinsert
p10038
I42
VSimpleName: x
p10039
tp10040
F1.75
s(g5100
I42
g5101
Vinsert
p10041
I43
VSimpleType: Pattern
p10042
tp10043
I3
s(g3649
I42
g3650
Vinsert
p10044
I42
VSimpleName: x
p10045
tp10046
F0.25
s(g3295
I42
g3296
Vinsert
p10047
I8
VBlock
p10048
tp10049
I1
s(g1009
I42
g1010
Vinsert
p10050
I11
VCastExpression
p10051
tp10052
I12
s(g1712
I42
g1713
Vinsert
p10053
I43
VSimpleType: Keyword
p10054
tp10055
F0.25
s(g4867
I42
g4868
Vinsert
p10056
I27
VInfixExpression: ==
p10057
tp10058
F0.25
s(g8821
I42
g8822
Vinsert
p10059
I42
VSimpleName: Integer
p10060
tp10061
I1
s(g6203
I42
g6204
Vinsert
p10062
I61
VWhileStatement
p10063
tp10064
I1
s(g3709
I42
g3710
Vinsert
p10065
I22
VFieldAccess
p10066
tp10067
I1
s(g7649
I42
g7650
Vinsert
p10068
I45
VStringLiteral: "((~A)~A)"
p10069
tp10070
I1
s(g9595
I42
g9596
Vinsert
p10071
I42
VSimpleName: sym
p10072
tp10073
F1.25
s(g2052
I42
g2053
Vinsert
p10074
I42
VSimpleName: f
p10075
tp10076
I2
s(g4831
I42
g4832
Vinsert
p10077
I36
VParenthesizedExpression
p10078
tp10079
I1
s(Vinsert
p10080
I42
VSimpleName: rest
p10081
Vinsert
p10082
I42
VSimpleName: bindings
p10083
tp10084
I2
s(g2835
I42
g2836
Vinsert
p10085
I27
VInfixExpression: !=
p10086
tp10087
I1
s(g2748
I42
g2749
Vinsert
p10088
I42
VSimpleName: ELIDE_META
p10089
tp10090
I1
s(g164
I42
g165
Vinsert
p10091
I38
VPrefixExpression: !
p10092
tp10093
F0.25
s(g937
I42
g938
Vinsert
p10094
I31
VMethodDeclaration
p10095
tp10096
F0.25
s(g804
I42
g805
Vinsert
p10097
I42
VSimpleName: c
p10098
tp10099
I3
s(Vinsert
p10100
I42
VSimpleName: forName
p10101
Vinsert
p10102
I60
VVariableDeclarationStatement
p10103
tp10104
I1
s(g9107
I42
g9108
Vinsert
p10105
I42
VSimpleName: ma
p10106
tp10107
I1
s(g1104
I42
g1105
Vinsert
p10108
I42
VSimpleName: line
p10109
tp10110
F0.25
s(g2743
I42
g2744
Vinsert
p10111
I42
VSimpleName: _count
p10112
tp10113
F0.5
s(g9244
I42
g9245
Vinsert
p10114
I42
VSimpleName: getClass
p10115
tp10116
I2
s(g5050
I42
g5051
Vinsert
p10117
I43
VSimpleType: String
p10118
tp10119
F0.25
s(g7574
I42
g7575
Vinsert
p10120
I42
VSimpleName: PersistentVector
p10121
tp10122
I2
s(g3689
I42
g3690
Vinsert
p10123
I45
VStringLiteral: "redef"
p10124
tp10125
F0.25
s(g3841
I42
g3842
Vinsert
p10126
I62
VInstanceofExpression
p10127
tp10128
I1
s(g8516
I42
g8517
Vinsert
p10129
I42
VSimpleName: push
p10130
tp10131
F0.25
s(g6409
I42
g6410
Vinsert
p10132
I42
VSimpleName: argclasses
p10133
tp10134
I1
s(g2422
I42
g2423
Vinsert
p10135
I42
VSimpleName: b
p10136
tp10137
I2
s(g562
I42
g563
Vinsert
p10138
I8
VBlock
p10139
tp10140
I3
s(g730
I42
g731
Vinsert
p10141
I21
VExpressionStatement
p10142
tp10143
I2
s(g194
I42
g195
Vinsert
p10144
I42
VSimpleName: keyOrNull
p10145
tp10146
I1
s(g2361
I42
g2362
Vinsert
p10147
I42
VSimpleName: i
p10148
tp10149
I13
s(g1765
I42
g1766
Vinsert
p10150
I42
VSimpleName: Object
p10151
tp10152
F2.75
s(g6806
I42
g6807
Vinsert
p10153
I7
VAssignment: =
p10154
tp10155
F4.5
s(g2623
I42
g2624
Vinsert
p10156
I32
VMethodInvocation
p10157
tp10158
I1
s(g1202
I42
g1203
Vinsert
p10159
I21
VExpressionStatement
p10160
tp10161
I4
s(g8677
I42
g8678
Vinsert
p10162
I41
VReturnStatement
p10163
tp10164
I1
s(g6455
I42
g6456
Vinsert
p10165
I42
VSimpleName: Object
p10166
tp10167
F1.5
s(g2371
I42
g2372
Vinsert
p10168
I42
VSimpleName: ns
p10169
tp10170
I1
s(g5050
I42
g5051
Vinsert
p10171
I42
VSimpleName: putUTF8
p10172
tp10173
F0.25
s(g4073
I42
g4074
Vinsert
p10174
I42
VSimpleName: value
p10175
tp10176
I1
s(g1331
I42
g1332
Vinsert
p10177
I42
VSimpleName: leaves
p10178
tp10179
I1
s(Vinsert
p10180
I42
VSimpleName: invoke
p10181
Vinsert
p10182
I41
VReturnStatement
p10183
tp10184
F10.25
s(g1520
I42
g1521
Vinsert
p10185
I57
VTypeLiteral
p10186
tp10187
F0.25
s(g2776
I42
g2777
Vinsert
p10188
I25
VIfStatement
p10189
tp10190
I2
s(g6455
I42
g6456
Vinsert
p10191
I83
VModifier: public
p10192
tp10193
F0.25
s(g2366
I42
g2367
Vinsert
p10194
I42
VSimpleName: getMappings
p10195
tp10196
I1
s(g2867
I42
g2868
Vinsert
p10197
I27
VInfixExpression: ==
p10198
tp10199
I1
s(Vinsert
p10200
I42
VSimpleName: get
p10201
Vinsert
p10202
I42
VSimpleName: doRun
p10203
tp10204
F0.25
s(g2239
I42
g2240
Vinsert
p10205
I42
VSimpleName: ns
p10206
tp10207
F1.25
s(g381
I42
g382
Vinsert
p10208
I42
VSimpleName: dup
p10209
tp10210
I1
s(g7395
I42
g7396
Vinsert
p10211
I27
VInfixExpression: ==
p10212
tp10213
I1
s(g6759
I42
g6760
Vinsert
p10214
I42
VSimpleName: Random
p10215
tp10216
I2
s(g2047
I42
g2048
Vinsert
p10217
I40
VQualifiedName: b.init
p10218
tp10219
F0.25
s(g363
I42
g364
Vinsert
p10220
I8
VBlock
p10221
tp10222
I1
s(g3325
I42
g3326
Vinsert
p10223
I42
VSimpleName: sym
p10224
tp10225
I2
s(g2509
I42
g2510
Vinsert
p10226
I7
VAssignment: +=
p10227
tp10228
I1
s(g1326
I42
g1327
Vinsert
p10229
I27
VInfixExpression: &
p10230
tp10231
I1
s(g1662
I42
g1663
Vinsert
p10232
I42
VSimpleName: frm
p10233
tp10234
I1
s(g242
I42
g243
Vinsert
p10235
I42
VSimpleName: String
p10236
tp10237
F5.25
s(g5036
I42
g5037
Vinsert
p10238
I42
VSimpleName: PersistentListIdentityMap
p10239
tp10240
I1
s(g2371
I42
g2372
Vinsert
p10241
I31
VMethodDeclaration
p10242
tp10243
F0.25
s(g6505
I42
g6506
Vinsert
p10244
I59
VVariableDeclarationFragment
p10245
tp10246
I1
s(Vinsert
p10247
I42
VSimpleName: ret1
p10248
Vinsert
p10249
I42
VSimpleName: arg9
p10250
tp10251
I1
s(g1286
I42
g1287
Vinsert
p10252
I52
VThisExpression
p10253
tp10254
F1.5
s(g86
I42
g87
Vinsert
p10255
I44
VSingleVariableDeclaration
p10256
tp10257
F0.5
s(g973
I42
g974
Vinsert
p10258
I21
VExpressionStatement
p10259
tp10260
I2
s(g1662
I42
g1663
Vinsert
p10261
I33
VNullLiteral
p10262
tp10263
I2
s(g209
I42
g210
Vinsert
p10264
I42
VSimpleName: r
p10265
tp10266
I1
s(g7520
I42
g7521
Vinsert
p10267
I43
VSimpleType: Expr
p10268
tp10269
I2
s(g6884
I42
g6885
Vinsert
p10270
I43
VSimpleType: ISeq
p10271
tp10272
I1
s(g1936
I42
g1937
Vinsert
p10273
I42
VSimpleName: e
p10274
tp10275
F0.25
s(g2964
I42
g2965
Vinsert
p10276
I21
VExpressionStatement
p10277
tp10278
F0.25
s(g1354
I42
g1355
Vinsert
p10279
I40
VQualifiedName: ref.tvals.next
p10280
tp10281
I1
s(g1967
I42
g1968
Vinsert
p10282
I43
VSimpleType: Exception
p10283
tp10284
F0.5
s(g8032
I42
g8033
Vinsert
p10285
I22
VFieldAccess
p10286
tp10287
I1
s(Vinsert
p10288
I42
VSimpleName: isPrimitive
p10289
Vinsert
p10290
I25
VIfStatement
p10291
tp10292
I7
s(g2631
I42
g2632
Vinsert
p10293
I25
VIfStatement
p10294
tp10295
I3
s(g2095
I42
g2096
Vinsert
p10296
I43
VSimpleType: IFn
p10297
tp10298
F1.5
s(g1573
I42
g1574
Vinsert
p10299
I43
VSimpleType: T
p10300
tp10301
F1.25
s(g267
I42
g268
Vinsert
p10302
I27
VInfixExpression: <
p10303
tp10304
I1
s(g4663
I42
g4664
Vinsert
p10305
I14
VClassInstanceCreation
p10306
tp10307
I1
s(g960
I42
g961
Vinsert
p10308
I43
VSimpleType: FnExpr
p10309
tp10310
F0.25
s(g908
I42
g909
Vinsert
p10311
I42
VSimpleName: startTry
p10312
tp10313
I1
s(Vinsert
p10314
I42
VSimpleName: rest
p10315
Vinsert
p10316
I83
VModifier: static
p10317
tp10318
F0.25
s(g1197
I42
g1198
Vinsert
p10319
I41
VReturnStatement
p10320
tp10321
F0.25
s(g3689
I42
g3690
Vinsert
p10322
I59
VVariableDeclarationFragment
p10323
tp10324
F2.25
s(g1495
I42
g1496
Vinsert
p10325
I42
VSimpleName: Object
p10326
tp10327
I3
s(g857
I42
g858
Vinsert
p10328
I45
VStringLiteral: "true"
p10329
tp10330
I1
s(g2542
I42
g2543
Vinsert
p10331
I42
VSimpleName: String
p10332
tp10333
I1
s(g760
I42
g761
Vinsert
p10334
I21
VExpressionStatement
p10335
tp10336
I1
s(g4404
I42
g4405
Vinsert
p10337
I22
VFieldAccess
p10338
tp10339
F0.5
s(g2405
I42
g2406
Vinsert
p10340
I83
VModifier: static
p10341
tp10342
F2.25
s(Vinsert
p10343
I42
VSimpleName: invokeStatic
p10344
Vinsert
p10345
I42
VSimpleName: MethodExpr
p10346
tp10347
I1
s(g1510
I42
g1511
Vinsert
p10348
I42
VSimpleName: iter
p10349
tp10350
I3
s(g4826
I42
g4827
Vinsert
p10351
I43
VSimpleType: UnsupportedOperationException
p10352
tp10353
F0.25
s(g2371
I42
g2372
Vinsert
p10354
I42
VSimpleName: Serialized
p10355
tp10356
I1
s(g9012
I42
g9013
Vinsert
p10357
I3
VArrayCreation
p10358
tp10359
I6
s(Vinsert
p10360
I42
VSimpleName: list
p10361
Vinsert
p10362
I43
VSimpleType: Exception
p10363
tp10364
F2.5
s(g8273
I42
g8274
Vinsert
p10365
I43
VSimpleType: Var
p10366
tp10367
I2
s(g1662
I42
g1663
Vinsert
p10368
I42
VSimpleName: ret
p10369
tp10370
I3
s(g1977
I42
g1978
Vinsert
p10371
I42
VSimpleName: scriptbase
p10372
tp10373
F0.25
s(Vinsert
p10374
I42
VSimpleName: create
p10375
Vinsert
p10376
I43
VSimpleType: Namespace
p10377
tp10378
F1.25
s(g479
I42
g480
Vinsert
p10379
I42
VSimpleName: shift
p10380
tp10381
I1
s(g1142
I42
g1143
Vinsert
p10382
I13
VCharacterLiteral: '\u005cf'
p10383
tp10384
I1
s(g786
I42
g787
Vinsert
p10385
I43
VSimpleType: Object
p10386
tp10387
I2
s(g3237
I42
g3238
Vinsert
p10388
I42
VSimpleName: i
p10389
tp10390
I4
s(g2631
I42
g2632
Vinsert
p10391
I42
VSimpleName: x
p10392
tp10393
F8.0
s(g2186
I42
g2187
Vinsert
p10394
I27
VInfixExpression: !=
p10395
tp10396
I1
s(g81
I42
g82
Vinsert
p10397
I34
VNumberLiteral: 8
p10398
tp10399
I1
s(g119
I42
g120
Vinsert
p10400
I27
VInfixExpression: !=
p10401
tp10402
I1
s(g6505
I42
g6506
Vinsert
p10403
I42
VSimpleName: m
p10404
tp10405
I1
s(g5008
I42
g5009
Vinsert
p10406
I41
VReturnStatement
p10407
tp10408
F0.25
s(g1807
I42
g1808
Vinsert
p10409
I42
VSimpleName: Comparable
p10410
tp10411
I2
s(g8273
I42
g8274
Vinsert
p10412
I45
VStringLiteral: "^module"
p10413
tp10414
I1
s(g8677
I42
g8678
Vinsert
p10415
I8
VBlock
p10416
tp10417
I1
s(g3438
I42
g3439
Vinsert
p10418
I42
VSimpleName: barrier
p10419
tp10420
F0.25
s(g4041
I42
g4042
Vinsert
p10421
I42
VSimpleName: L
p10422
tp10423
I1
s(g8138
I42
g8139
Vinsert
p10424
I7
VAssignment: =
p10425
tp10426
I1
s(g451
I42
g452
Vinsert
p10427
I32
VMethodInvocation
p10428
tp10429
I1
s(g9124
I42
g9125
Vinsert
p10430
I43
VSimpleType: Node
p10431
tp10432
F0.5
s(g313
I42
g314
Vinsert
p10433
I44
VSingleVariableDeclaration
p10434
tp10435
F0.75
s(g4726
I42
g4727
Vinsert
p10436
I42
VSimpleName: args
p10437
tp10438
F0.25
s(g4497
I42
g4498
Vinsert
p10439
I32
VMethodInvocation
p10440
tp10441
I3
s(g5163
I42
g5164
Vinsert
p10442
I45
VStringLiteral: "seq"
p10443
tp10444
F0.25
s(g5788
I42
g5789
Vinsert
p10445
I83
VModifier: public
p10446
tp10447
F0.5
s(g1792
I42
g1793
Vinsert
p10448
I42
VSimpleName: Byte
p10449
tp10450
I1
s(g9218
I42
g9219
Vinsert
p10451
I42
VSimpleName: runtimeException
p10452
tp10453
I1
s(g2111
I42
g2112
Vinsert
p10454
I40
VQualifiedName: java.lang.Number
p10455
tp10456
I1
s(g247
I42
g248
Vinsert
p10457
I42
VSimpleName: items
p10458
tp10459
I1
s(g5556
I42
g5557
Vinsert
p10460
I42
VSimpleName: IArray
p10461
tp10462
I2
s(g1182
I42
g1183
Vinsert
p10463
I11
VCastExpression
p10464
tp10465
I1
s(g937
I42
g938
Vinsert
p10466
I42
VSimpleName: name
p10467
tp10468
F0.75
s(g471
I42
g472
Vinsert
p10469
I83
VModifier: static
p10470
tp10471
F0.25
s(g8409
I42
g8410
Vinsert
p10472
I52
VThisExpression
p10473
tp10474
F1.25
s(g451
I42
g452
Vinsert
p10475
I43
VSimpleType: SAXException
p10476
tp10477
F0.25
s(g1391
I42
g1392
Vinsert
p10478
I43
VSimpleType: PersistentHashSet
p10479
tp10480
I2
s(g3311
I42
g3312
Vinsert
p10481
I42
VSimpleName: space
p10482
tp10483
I1
s(g1822
I42
g1823
Vinsert
p10484
I42
VSimpleName: find
p10485
tp10486
I1
s(g6859
I42
g6860
Vinsert
p10487
I32
VMethodInvocation
p10488
tp10489
I3
s(g4259
I42
g4260
Vinsert
p10490
I42
VSimpleName: reqs
p10491
tp10492
I1
s(g1344
I42
g1345
Vinsert
p10493
I42
VSimpleName: _more
p10494
tp10495
F0.25
s(g3201
I42
g3202
Vinsert
p10496
I39
VPrimitiveType: boolean
p10497
tp10498
F0.25
s(g2140
I42
g2141
Vinsert
p10499
I44
VSingleVariableDeclaration
p10500
tp10501
I1
s(g2835
I42
g2836
Vinsert
p10502
I33
VNullLiteral
p10503
tp10504
I1
s(g129
I42
g130
Vinsert
p10505
I41
VReturnStatement
p10506
tp10507
I5
s(g765
I42
g766
Vinsert
p10508
I43
VSimpleType: ISeq
p10509
tp10510
I1
s(g1127
I42
g1128
Vinsert
p10511
I42
VSimpleName: gen
p10512
tp10513
I1
s(g3076
I42
g3077
Vinsert
p10514
I33
VNullLiteral
p10515
tp10516
F0.25
s(g451
I42
g452
Vinsert
p10517
I42
VSimpleName: h
p10518
tp10519
I1
s(g1563
I42
g1564
Vinsert
p10520
I42
VSimpleName: ISeq
p10521
tp10522
F0.25
s(Vinsert
p10523
I42
VSimpleName: count
p10524
Vinsert
p10525
I42
VSimpleName: _rest
p10526
tp10527
F6.0
s(g204
I42
g205
Vinsert
p10528
I8
VBlock
p10529
tp10530
I1
s(g5824
I42
g5825
Vinsert
p10531
I42
VSimpleName: ThreadLocalData
p10532
tp10533
F2.5
s(g2435
I42
g2436
Vinsert
p10534
I9
VBooleanLiteral: false
p10535
tp10536
I1
s(g3295
I42
g3296
Vinsert
p10537
I44
VSingleVariableDeclaration
p10538
tp10539
F0.25
s(g955
I42
g956
Vinsert
p10540
I32
VMethodInvocation
p10541
tp10542
I6
s(g41
I42
g42
Vinsert
p10543
I42
VSimpleName: inTailCall
p10544
tp10545
F0.25
s(g5695
I42
g5696
Vinsert
p10546
I42
VSimpleName: ConcurrentHashMap
p10547
tp10548
I1
s(g5664
I42
g5665
Vinsert
p10549
I34
VNumberLiteral: 1
p10550
tp10551
I2
s(g8939
I42
g8940
Vinsert
p10552
I42
VSimpleName: IPersistentSet
p10553
tp10554
I3
s(g837
I42
g838
Vinsert
p10555
I27
VInfixExpression: !=
p10556
tp10557
I1
s(g1228
I42
g1229
Vinsert
p10558
I5
VArrayType: long[]
p10559
tp10560
I2
s(g2542
I42
g2543
Vinsert
p10561
I42
VSimpleName: RT
p10562
tp10563
I18
s(g242
I42
g243
Vinsert
p10564
I27
VInfixExpression: ==
p10565
tp10566
F3.25
s(g781
I42
g782
Vinsert
p10567
I42
VSimpleName: status
p10568
tp10569
I1
s(g3875
I42
g3876
Vinsert
p10570
I42
VSimpleName: localsUsedInCatchFinally
p10571
tp10572
I1
s(g5664
I42
g5665
Vinsert
p10573
I58
VVariableDeclarationExpression
p10574
tp10575
I2
s(g6859
I42
g6860
Vinsert
p10576
I53
VThrowStatement
p10577
tp10578
I3
s(g4604
I42
g4605
Vinsert
p10579
I42
VSimpleName: getType
p10580
tp10581
I1
s(g1540
I42
g1541
Vinsert
p10582
I42
VSimpleName: box
p10583
tp10584
F0.25
s(g532
I42
g533
Vinsert
p10585
I60
VVariableDeclarationStatement
p10586
tp10587
I16
s(g613
I42
g614
Vinsert
p10588
I42
VSimpleName: contains
p10589
tp10590
I1
s(Vinsert
p10591
I42
VSimpleName: getClass
p10592
Vinsert
p10593
I42
VSimpleName: List
p10594
tp10595
I1
s(g1122
I42
g1123
Vinsert
p10596
I33
VNullLiteral
p10597
tp10598
F3.5
s(g5228
I42
g5229
Vinsert
p10599
I13
VCharacterLiteral: '/'
p10600
tp10601
I1
s(g9320
I42
g9321
Vinsert
p10602
I42
VSimpleName: push
p10603
tp10604
I1
s(g9012
I42
g9013
Vinsert
p10605
I21
VExpressionStatement
p10606
tp10607
I11
s(g847
I42
g848
Vinsert
p10608
I8
VBlock
p10609
tp10610
I1
s(Vinsert
p10611
I42
VSimpleName: getCause
p10612
Vinsert
p10613
I43
VSimpleType: Exception
p10614
tp10615
I2
s(g1291
I42
g1292
Vinsert
p10616
I42
VSimpleName: Character
p10617
tp10618
F0.25
s(g9765
I42
g9766
Vinsert
p10619
I45
VStringLiteral: "\u005c\u005ct"
p10620
tp10621
I1
s(g4801
I42
g4802
Vinsert
p10622
I43
VSimpleType: Box
p10623
tp10624
F1.25
s(g1573
I42
g1574
Vinsert
p10625
I32
VMethodInvocation
p10626
tp10627
I2
s(g169
I42
g170
Vinsert
p10628
I14
VClassInstanceCreation
p10629
tp10630
I1
s(g3487
I42
g3488
Vinsert
p10631
I42
VSimpleName: IllegalStateException
p10632
tp10633
I1
s(g6921
I42
g6922
Vinsert
p10634
I25
VIfStatement
p10635
tp10636
I9
s(g1510
I42
g1511
Vinsert
p10637
I59
VVariableDeclarationFragment
p10638
tp10639
I12
s(g9417
I42
g9418
Vinsert
p10640
I34
VNumberLiteral: 1
p10641
tp10642
I1
s(g1583
I42
g1584
Vinsert
p10643
I42
VSimpleName: entries
p10644
tp10645
I1
s(g149
I42
g150
Vinsert
p10646
I43
VSimpleType: Exception
p10647
tp10648
F0.5
s(g1321
I42
g1322
Vinsert
p10649
I25
VIfStatement
p10650
tp10651
I1
s(g1525
I42
g1526
Vinsert
p10652
I42
VSimpleName: bargeTimeElapsed
p10653
tp10654
F0.25
s(g209
I42
g210
Vinsert
p10655
I42
VSimpleName: Util
p10656
tp10657
F11.75
s(g8657
I42
g8658
Vinsert
p10658
I37
VPostfixExpression: ++
p10659
tp10660
I1
s(g8409
I42
g8410
Vinsert
p10661
I42
VSimpleName: AFunction
p10662
tp10663
I1
s(g3256
I42
g3257
Vinsert
p10664
I42
VSimpleName: IPersistentMap
p10665
tp10666
F0.25
s(Vinsert
p10667
I42
VSimpleName: seq
p10668
Vinsert
p10669
I27
VInfixExpression: !=
p10670
tp10671
I2
s(g5584
I42
g5585
Vinsert
p10672
I12
VCatchClause
p10673
tp10674
F0.25
s(g1644
I42
g1645
Vinsert
p10675
I40
VQualifiedName: RT.NS_IMPORTS
p10676
tp10677
I2
s(g3819
I42
g3820
Vinsert
p10678
I45
VStringLiteral: "Var"
p10679
tp10680
I1
s(g2814
I42
g2815
Vinsert
p10681
I42
VSimpleName: Symbol
p10682
tp10683
F0.25
s(g5505
I42
g5506
Vinsert
p10684
I42
VSimpleName: ns
p10685
tp10686
I2
s(g10591
I42
g10592
Vinsert
p10687
I43
VSimpleType: Exception
p10688
tp10689
F1.25
s(g1396
I42
g1397
Vinsert
p10690
I42
VSimpleName: enclosingMethodOwner
p10691
tp10692
I1
s(g572
I42
g573
Vinsert
p10693
I34
VNumberLiteral: 0
p10694
tp10695
F1.25
s(g242
I42
g243
Vinsert
p10696
I36
VParenthesizedExpression
p10697
tp10698
I2
s(g4856
I42
g4857
Vinsert
p10699
I42
VSimpleName: Associative
p10700
tp10701
I1
s(g5394
I42
g5395
Vinsert
p10702
I44
VSingleVariableDeclaration
p10703
tp10704
F1.0
s(g3438
I42
g3439
Vinsert
p10705
I60
VVariableDeclarationStatement
p10706
tp10707
I1
s(g6726
I42
g6727
Vinsert
p10708
I34
VNumberLiteral: 0
p10709
tp10710
I1
s(g461
I42
g462
Vinsert
p10711
I27
VInfixExpression: &
p10712
tp10713
I1
s(g5802
I42
g5803
Vinsert
p10714
I25
VIfStatement
p10715
tp10716
I1
s(g9948
I42
g9949
Vinsert
p10717
I42
VSimpleName: USES
p10718
tp10719
I1
s(g7010
I42
g7011
Vinsert
p10720
I42
VSimpleName: finallyLabel
p10721
tp10722
I1
s(g1424
I42
g1425
Vinsert
p10723
I42
VSimpleName: getSuperclass
p10724
tp10725
I1
s(g1500
I42
g1501
Vinsert
p10726
I21
VExpressionStatement
p10727
tp10728
F26.25
s(g4323
I42
g4324
Vinsert
p10729
I66
VTextElement: Once the final script path has been loaded, the java process exits.
p10730
tp10731
F0.25
s(g1094
I42
g1095
Vinsert
p10732
I42
VSimpleName: Object
p10733
tp10734
F0.75
s(g3135
I42
g3136
Vinsert
p10735
I8
VBlock
p10736
tp10737
I1
s(g1515
I42
g1516
Vinsert
p10738
I44
VSingleVariableDeclaration
p10739
tp10740
F0.5
s(g4248
I42
g4249
Vinsert
p10741
I21
VExpressionStatement
p10742
tp10743
F0.25
s(g8516
I42
g8517
Vinsert
p10744
I43
VSimpleType: TVal
p10745
tp10746
F0.25
s(g3400
I42
g3401
Vinsert
p10747
I43
VSimpleType: String
p10748
tp10749
I1
s(g1112
I42
g1113
Vinsert
p10750
I7
VAssignment: =
p10751
tp10752
I1
s(g1127
I42
g1128
Vinsert
p10753
I32
VMethodInvocation
p10754
tp10755
F7.25
s(g10288
I42
g10289
Vinsert
p10756
I42
VSimpleName: tc
p10757
tp10758
I2
s(g3476
I42
g3477
Vinsert
p10759
I40
VQualifiedName: val.lpart
p10760
tp10761
F0.25
s(g348
I42
g349
Vinsert
p10762
I43
VSimpleType: Iterable
p10763
tp10764
I1
s(g1732
I42
g1733
Vinsert
p10765
I31
VMethodDeclaration
p10766
tp10767
F0.25
s(g1167
I42
g1168
Vinsert
p10768
I85
VDimension
p10769
tp10770
I1
s(g10523
I42
g10524
Vinsert
p10771
I42
VSimpleName: rest
p10772
tp10773
F2.75
s(g7010
I42
g7011
Vinsert
p10774
I43
VSimpleType: Label
p10775
tp10776
I9
s(g699
I42
g700
Vinsert
p10777
I33
VNullLiteral
p10778
tp10779
I1
s(g5130
I42
g5131
Vinsert
p10780
I39
VPrimitiveType: int
p10781
tp10782
F0.5
s(g1596
I42
g1597
Vinsert
p10783
I42
VSimpleName: ITransientSet
p10784
tp10785
I2
s(g7649
I42
g7650
Vinsert
p10786
I39
VPrimitiveType: byte
p10787
tp10788
I1
s(g888
I42
g889
Vinsert
p10789
I32
VMethodInvocation
p10790
tp10791
F6.25
s(g479
I42
g480
Vinsert
p10792
I2
VArrayAccess
p10793
tp10794
I1
s(g8398
I42
g8399
Vinsert
p10795
I11
VCastExpression
p10796
tp10797
F0.25
s(g791
I42
g792
Vinsert
p10798
I5
VArrayType: double[]
p10799
tp10800
I1
s(g2100
I42
g2101
Vinsert
p10801
I42
VSimpleName: ch
p10802
tp10803
I3
s(g5206
I42
g5207
Vinsert
p10804
I42
VSimpleName: c
p10805
tp10806
I2
s(g3175
I42
g3176
Vinsert
p10807
I40
VQualifiedName: l.frame
p10808
tp10809
I1
s(g6477
I42
g6478
Vinsert
p10810
I42
VSimpleName: comp
p10811
tp10812
I1
s(g3676
I42
g3677
Vinsert
p10813
I43
VSimpleType: Exception
p10814
tp10815
I4
s(g3266
I42
g3267
Vinsert
p10816
I14
VClassInstanceCreation
p10817
tp10818
I2
s(g2542
I42
g2543
Vinsert
p10819
I42
VSimpleName: third
p10820
tp10821
I1
s(g106
I42
g107
Vinsert
p10822
I27
VInfixExpression: &&
p10823
tp10824
I8
s(g1368
I42
g1369
Vinsert
p10825
I39
VPrimitiveType: int
p10826
tp10827
F3.25
s(g3649
I42
g3650
Vinsert
p10828
I60
VVariableDeclarationStatement
p10829
tp10830
I1
s(g2573
I42
g2574
Vinsert
p10831
I42
VSimpleName: sqExpandList
p10832
tp10833
I1
s(g144
I42
g145
Vinsert
p10834
I40
VQualifiedName: System.out
p10835
tp10836
I4
s(g5672
I42
g5673
Vinsert
p10837
I43
VSimpleType: Exception
p10838
tp10839
F0.25
s(g1936
I42
g1937
Vinsert
p10840
I34
VNumberLiteral: 2
p10841
tp10842
I1
s(g5072
I42
g5073
Vinsert
p10843
I83
VModifier: static
p10844
tp10845
F0.25
s(g9417
I42
g9418
Vinsert
p10846
I60
VVariableDeclarationStatement
p10847
tp10848
I1
s(g2145
I42
g2146
Vinsert
p10849
I42
VSimpleName: o
p10850
tp10851
I1
s(g26
I42
g27
Vinsert
p10852
I42
VSimpleName: isAssignableFrom
p10853
tp10854
I1
s(g9877
I42
g9878
Vinsert
p10855
I42
VSimpleName: allConstantKeysUnique
p10856
tp10857
I1
s(g2641
I42
g2642
Vinsert
p10858
I43
VSimpleType: Boolean
p10859
tp10860
I2
s(g8273
I42
g8274
Vinsert
p10861
I23
VFieldDeclaration
p10862
tp10863
I1
s(g1991
I42
g1992
Vinsert
p10864
I42
VSimpleName: Object
p10865
tp10866
F0.5
s(g2371
I42
g2372
Vinsert
p10867
I32
VMethodInvocation
p10868
tp10869
I25
s(g4267
I42
g4268
Vinsert
p10870
I42
VSimpleName: nvae
p10871
tp10872
I1
s(g1949
I42
g1950
Vinsert
p10873
I45
VStringLiteral: "SMAP\u005cn"
p10874
tp10875
I1
s(g363
I42
g364
Vinsert
p10876
I45
VStringLiteral: "hashCode"
p10877
tp10878
I1
s(g7669
I42
g7670
Vinsert
p10879
I45
VStringLiteral: "<clinit>"
p10880
tp10881
I1
s(g6837
I42
g6838
Vinsert
p10882
I42
VSimpleName: v0
p10883
tp10884
F0.5
s(g5960
I42
g5961
Vinsert
p10885
I33
VNullLiteral
p10886
tp10887
I1
s(g3237
I42
g3238
Vinsert
p10888
I37
VPostfixExpression: ++
p10889
tp10890
I1
s(g547
I42
g548
Vinsert
p10891
I33
VNullLiteral
p10892
tp10893
I2
s(g348
I42
g349
Vinsert
p10894
I43
VSimpleType: Seqable
p10895
tp10896
I1
s(g3999
I42
g4000
Vinsert
p10897
I42
VSimpleName: length
p10898
tp10899
I1
s(g791
I42
g792
Vinsert
p10900
I57
VTypeLiteral
p10901
tp10902
I1
s(g7649
I42
g7650
Vinsert
p10903
I45
VStringLiteral: "((Number)~A).byteValue()"
p10904
tp10905
I1
s(g119
I42
g120
Vinsert
p10906
I42
VSimpleName: getRootClassLoader
p10907
tp10908
F0.25
s(g5130
I42
g5131
Vinsert
p10909
I44
VSingleVariableDeclaration
p10910
tp10911
F0.5
s(g1510
I42
g1511
Vinsert
p10912
I43
VSimpleType: Object
p10913
tp10914
F2.25
s(g3517
I42
g3518
Vinsert
p10915
I42
VSimpleName: Link
p10916
tp10917
F0.25
s(g2697
I42
g2698
Vinsert
p10918
I42
VSimpleName: interfaces
p10919
tp10920
F0.25
s(g6203
I42
g6204
Vinsert
p10921
I42
VSimpleName: c
p10922
tp10923
I1
s(g2822
I42
g2823
Vinsert
p10924
I43
VSimpleType: Symbol
p10925
tp10926
I2
s(g4190
I42
g4191
Vinsert
p10927
I42
VSimpleName: maybeClass
p10928
tp10929
I1
s(g4604
I42
g4605
Vinsert
p10930
I42
VSimpleName: cc
p10931
tp10932
I1
s(g3405
I42
g3406
Vinsert
p10933
I42
VSimpleName: w
p10934
tp10935
I1
s(g661
I42
g662
Vinsert
p10936
I42
VSimpleName: rest
p10937
tp10938
F0.75
s(g1957
I42
g1958
Vinsert
p10939
I32
VMethodInvocation
p10940
tp10941
I1
s(g1396
I42
g1397
Vinsert
p10942
I42
VSimpleName: newUTF8
p10943
tp10944
I1
s(g2983
I42
g2984
Vinsert
p10945
I40
VQualifiedName: Opcodes.ACC_PUBLIC
p10946
tp10947
I1
s(g1197
I42
g1198
Vinsert
p10948
I42
VSimpleName: Class
p10949
tp10950
F0.25
s(g8369
I42
g8370
Vinsert
p10951
I42
VSimpleName: a
p10952
tp10953
I2
s(Vinsert
p10954
I42
VSimpleName: arraycopy
p10955
Vinsert
p10956
I40
VQualifiedName: editable.bitmap
p10957
tp10958
I1
s(g8061
I42
g8062
Vinsert
p10959
I42
VSimpleName: get
p10960
tp10961
I2
s(g159
I42
g160
Vinsert
p10962
I42
VSimpleName: ISeq
p10963
tp10964
I2
s(g613
I42
g614
Vinsert
p10965
I27
VInfixExpression: -
p10966
tp10967
I1
s(g2315
I42
g2316
Vinsert
p10968
I8
VBlock
p10969
tp10970
I1
s(g1321
I42
g1322
Vinsert
p10971
I42
VSimpleName: ILookupThunk
p10972
tp10973
F0.25
s(g1649
I42
g1650
Vinsert
p10974
I45
VStringLiteral: "Recursive change"
p10975
tp10976
I1
s(g2776
I42
g2777
Vinsert
p10977
I59
VVariableDeclarationFragment
p10978
tp10979
I1
s(Vinsert
p10980
I42
VSimpleName: invoke
p10981
Vinsert
p10982
I42
VSimpleName: n
p10983
tp10984
I1
s(g2244
I42
g2245
Vinsert
p10985
I33
VNullLiteral
p10986
tp10987
I1
s(g5008
I42
g5009
Vinsert
p10988
I42
VSimpleName: second
p10989
tp10990
F2.25
s(g5198
I42
g5199
Vinsert
p10991
I42
VSimpleName: read
p10992
tp10993
I1
s(g4549
I42
g4550
Vinsert
p10994
I43
VSimpleType: FnExpr
p10995
tp10996
I2
s(g1117
I42
g1118
Vinsert
p10997
I7
VAssignment: =
p10998
tp10999
I1
s(g1432
I42
g1433
Vinsert
p11000
I42
VSimpleName: read
p11001
tp11002
I1
s(g9765
I42
g9766
Vinsert
p11003
I13
VCharacterLiteral: '\u005ct'
p11004
tp11005
I1
s(g3554
I42
g3555
Vinsert
p11006
I42
VSimpleName: x
p11007
tp11008
F2.25
s(g2405
I42
g2406
Vinsert
p11009
I44
VSingleVariableDeclaration
p11010
tp11011
F3.5
s(g8643
I42
g8644
Vinsert
p11012
I42
VSimpleName: opcode
p11013
tp11014
I1
s(Vinsert
p11015
I42
VSimpleName: newLabel
p11016
Vinsert
p11017
I57
VTypeLiteral
p11018
tp11019
I1
s(g857
I42
g858
Vinsert
p11020
I32
VMethodInvocation
p11021
tp11022
F33.75
s(g6203
I42
g6204
Vinsert
p11023
I83
VModifier: final
p11024
tp11025
F0.25
s(g204
I42
g205
Vinsert
p11026
I83
VModifier: public
p11027
tp11028
F0.25
s(Vinsert
p11029
I42
VSimpleName: findInternedVar
p11030
Vinsert
p11031
I40
VQualifiedName: nsQualifiedSym.ns
p11032
tp11033
I2
s(g214
I42
g215
Vinsert
p11034
I42
VSimpleName: primclasses
p11035
tp11036
I1
s(g4932
I42
g4933
Vinsert
p11037
I44
VSingleVariableDeclaration
p11038
tp11039
F1.5
s(Vinsert
p11040
I42
VSimpleName: hasNext
p11041
Vinsert
p11042
I42
VSimpleName: i1
p11043
tp11044
F0.25
s(g2456
I42
g2457
Vinsert
p11045
I8
VBlock
p11046
tp11047
I1
s(g4549
I42
g4550
Vinsert
p11048
I8
VBlock
p11049
tp11050
I13
s(g2376
I42
g2377
Vinsert
p11051
I43
VSimpleType: GeneratorAdapter
p11052
tp11053
F0.25
s(Vinsert
p11054
I42
VSimpleName: containsKey
p11055
Vinsert
p11056
I25
VIfStatement
p11057
tp11058
I3
s(g6941
I42
g6942
Vinsert
p11059
I60
VVariableDeclarationStatement
p11060
tp11061
I1
s(g6045
I42
g6046
Vinsert
p11062
I42
VSimpleName: allmethods
p11063
tp11064
I4
s(g3814
I42
g3815
Vinsert
p11065
I43
VSimpleType: TRef
p11066
tp11067
F0.25
s(Vinsert
p11068
I42
VSimpleName: runtimeException
p11069
Vinsert
p11070
I42
VSimpleName: ensurePending
p11071
tp11072
I2
s(g1127
I42
g1128
Vinsert
p11073
I42
VSimpleName: retClass
p11074
tp11075
I1
s(g661
I42
g662
Vinsert
p11076
I42
VSimpleName: form
p11077
tp11078
F0.25
s(g11
I42
g12
Vinsert
p11079
I42
VSimpleName: arr
p11080
tp11081
I1
s(g2073
I42
g2074
Vinsert
p11082
I83
VModifier: final
p11083
tp11084
I3
s(g2822
I42
g2823
Vinsert
p11085
I43
VSimpleType: String
p11086
tp11087
I2
s(g583
I42
g584
Vinsert
p11088
I58
VVariableDeclarationExpression
p11089
tp11090
I1
s(g2914
I42
g2915
Vinsert
p11091
I8
VBlock
p11092
tp11093
I1
s(g1535
I42
g1536
Vinsert
p11094
I42
VSimpleName: letfn
p11095
tp11096
I2
s(g937
I42
g938
Vinsert
p11097
I42
VSimpleName: String
p11098
tp11099
F0.75
s(g8939
I42
g8940
Vinsert
p11100
I42
VSimpleName: set
p11101
tp11102
I2
s(g497
I42
g498
Vinsert
p11103
I42
VSimpleName: Keyword
p11104
tp11105
F0.25
s(g1286
I42
g1287
Vinsert
p11106
I21
VExpressionStatement
p11107
tp11108
F3.25
s(g3295
I42
g3296
Vinsert
p11109
I42
VSimpleName: internalName
p11110
tp11111
F0.25
s(Vinsert
p11112
I42
VSimpleName: equals
p11113
Vinsert
p11114
I9
VBooleanLiteral: true
p11115
tp11116
I1
s(g5264
I42
g5265
Vinsert
p11117
I11
VCastExpression
p11118
tp11119
I2
s(g1409
I42
g1410
Vinsert
p11120
I37
VPostfixExpression: ++
p11121
tp11122
I1
s(g1192
I42
g1193
Vinsert
p11123
I42
VSimpleName: longCast
p11124
tp11125
I1
s(Vinsert
p11126
I42
VSimpleName: get
p11127
Vinsert
p11128
I42
VSimpleName: compareAndSet
p11129
tp11130
I1
s(g1807
I42
g1808
Vinsert
p11131
I11
VCastExpression
p11132
tp11133
I2
s(g2122
I42
g2123
Vinsert
p11134
I41
VReturnStatement
p11135
tp11136
F0.25
s(g989
I42
g990
Vinsert
p11137
I42
VSimpleName: endLabel
p11138
tp11139
I1
s(Vinsert
p11140
I42
VSimpleName: lastIndexOf
p11141
Vinsert
p11142
I83
VModifier: public
p11143
tp11144
F0.25
s(g3365
I42
g3366
Vinsert
p11145
I42
VSimpleName: v
p11146
tp11147
I1
s(g537
I42
g538
Vinsert
p11148
I42
VSimpleName: DOUBLE
p11149
tp11150
I1
s(Vinsert
p11151
I42
VSimpleName: intern
p11152
Vinsert
p11153
I42
VSimpleName: keyword
p11154
tp11155
F0.25
s(g1432
I42
g1433
Vinsert
p11156
I34
VNumberLiteral: 1
p11157
tp11158
I1
s(g3633
I42
g3634
Vinsert
p11159
I59
VVariableDeclarationFragment
p11160
tp11161
I4
s(g3266
I42
g3267
Vinsert
p11162
I53
VThrowStatement
p11163
tp11164
I2
s(g3689
I42
g3690
Vinsert
p11165
I42
VSimpleName: Keyword
p11166
tp11167
F0.75
s(g5584
I42
g5585
Vinsert
p11168
I42
VSimpleName: list
p11169
tp11170
I1
s(g2636
I42
g2637
Vinsert
p11171
I43
VSimpleType: Byte
p11172
tp11173
I1
s(g199
I42
g200
Vinsert
p11174
I8
VBlock
p11175
tp11176
I1
s(g2914
I42
g2915
Vinsert
p11177
I42
VSimpleName: BigInt
p11178
tp11179
F2.5
s(g1515
I42
g1516
Vinsert
p11180
I21
VExpressionStatement
p11181
tp11182
I1
s(g6349
I42
g6350
Vinsert
p11183
I52
VThisExpression
p11184
tp11185
I2
s(g1750
I42
g1751
Vinsert
p11186
I44
VSingleVariableDeclaration
p11187
tp11188
F0.75
s(g7602
I42
g7603
Vinsert
p11189
I33
VNullLiteral
p11190
tp11191
I3
s(g924
I42
g925
Vinsert
p11192
I44
VSingleVariableDeclaration
p11193
tp11194
F1.75
s(g6726
I42
g6727
Vinsert
p11195
I9
VBooleanLiteral: true
p11196
tp11197
I1
s(g2830
I42
g2831
Vinsert
p11198
I32
VMethodInvocation
p11199
tp11200
F2.25
s(g857
I42
g858
Vinsert
p11201
I45
VStringLiteral: "false"
p11202
tp11203
I1
s(Vinsert
p11204
I42
VSimpleName: booleanCast
p11205
Vinsert
p11206
I40
VQualifiedName: System.err
p11207
tp11208
F0.25
s(g1258
I42
g1259
Vinsert
p11209
I59
VVariableDeclarationFragment
p11210
tp11211
I1
s(g6491
I42
g6492
Vinsert
p11212
I60
VVariableDeclarationStatement
p11213
tp11214
I1
s(g4399
I42
g4400
Vinsert
p11215
I42
VSimpleName: mkdirs
p11216
tp11217
I1
s(g6229
I42
g6230
Vinsert
p11218
I24
VForStatement
p11219
tp11220
I1
s(g1621
I42
g1622
Vinsert
p11221
I27
VInfixExpression: >
p11222
tp11223
F0.25
s(g305
I42
g306
Vinsert
p11224
I25
VIfStatement
p11225
tp11226
I1
s(g2427
I42
g2428
Vinsert
p11227
I62
VInstanceofExpression
p11228
tp11229
I1
s(g2037
I42
g2038
Vinsert
p11230
I60
VVariableDeclarationStatement
p11231
tp11232
I3
s(g6040
I42
g6041
Vinsert
p11233
I42
VSimpleName: shiftRight
p11234
tp11235
I1
s(g3754
I42
g3755
Vinsert
p11236
I34
VNumberLiteral: 0
p11237
tp11238
I1
s(g8480
I42
g8481
Vinsert
p11239
I42
VSimpleName: arg
p11240
tp11241
F1.25
s(g1991
I42
g1992
Vinsert
p11242
I43
VSimpleType: Object
p11243
tp11244
F0.5
s(g8677
I42
g8678
Vinsert
p11245
I42
VSimpleName: arg14
p11246
tp11247
F0.25
s(g1856
I42
g1857
Vinsert
p11248
I32
VMethodInvocation
p11249
tp11250
F2.25
s(g7427
I42
g7428
Vinsert
p11251
I22
VFieldAccess
p11252
tp11253
I2
s(g699
I42
g700
Vinsert
p11254
I8
VBlock
p11255
tp11256
I1
s(g4447
I42
g4448
Vinsert
p11257
I27
VInfixExpression: ==
p11258
tp11259
I2
s(g3295
I42
g3296
Vinsert
p11260
I32
VMethodInvocation
p11261
tp11262
I1
s(g9244
I42
g9245
Vinsert
p11263
I42
VSimpleName: IOException
p11264
tp11265
F0.5
s(g3717
I42
g3718
Vinsert
p11266
I34
VNumberLiteral: 0
p11267
tp11268
I6
s(g9218
I42
g9219
Vinsert
p11269
I42
VSimpleName: form
p11270
tp11271
F4.25
s(g1662
I42
g1663
Vinsert
p11272
I42
VSimpleName: MapExpr
p11273
tp11274
I4
s(Vinsert
p11275
I42
VSimpleName: getClass
p11276
Vinsert
p11277
I42
VSimpleName: classOf
p11278
tp11279
F0.25
s(g5759
I42
g5760
Vinsert
p11280
I42
VSimpleName: RT
p11281
tp11282
I1
s(g9244
I42
g9245
Vinsert
p11283
I42
VSimpleName: out
p11284
tp11285
F0.5
s(g2586
I42
g2587
Vinsert
p11286
I45
VStringLiteral: ")"
p11287
tp11288
I1
s(g363
I42
g364
Vinsert
p11289
I34
VNumberLiteral: 0
p11290
tp11291
I1
s(g16
I42
g17
Vinsert
p11292
I42
VSimpleName: map
p11293
tp11294
I1
s(g6409
I42
g6410
Vinsert
p11295
I2
VArrayAccess
p11296
tp11297
I4
s(g6513
I42
g6514
Vinsert
p11298
I42
VSimpleName: setMethod
p11299
tp11300
I1
s(g2687
I42
g2688
Vinsert
p11301
I27
VInfixExpression: &&
p11302
tp11303
I2
s(g10288
I42
g10289
Vinsert
p11304
I27
VInfixExpression: &&
p11305
tp11306
I3
s(g376
I42
g377
Vinsert
p11307
I42
VSimpleName: o
p11308
tp11309
I1
s(g537
I42
g538
Vinsert
p11310
I10
VBreakStatement
p11311
tp11312
I1
s(g1977
I42
g1978
Vinsert
p11313
I42
VSimpleName: SUPPRESS_READ
p11314
tp11315
I1
s(g3644
I42
g3645
Vinsert
p11316
I42
VSimpleName: create
p11317
tp11318
I13
s(g4073
I42
g4074
Vinsert
p11319
I32
VMethodInvocation
p11320
tp11321
I6
s(g3676
I42
g3677
Vinsert
p11322
I42
VSimpleName: file
p11323
tp11324
I2
s(g3962
I42
g3963
Vinsert
p11325
I14
VClassInstanceCreation
p11326
tp11327
F0.25
s(g676
I42
g677
Vinsert
p11328
I42
VSimpleName: addTo
p11329
tp11330
F0.5
s(Vinsert
p11331
I42
VSimpleName: get
p11332
Vinsert
p11333
I42
VSimpleName: Constructor
p11334
tp11335
I2
s(g4224
I42
g4225
Vinsert
p11336
I36
VParenthesizedExpression
p11337
tp11338
I1
s(g547
I42
g548
Vinsert
p11339
I42
VSimpleName: opcode
p11340
tp11341
F0.25
s(g1972
I42
g1973
Vinsert
p11342
I40
VQualifiedName: parameterTypes.length
p11343
tp11344
I1
s(g1344
I42
g1345
Vinsert
p11345
I42
VSimpleName: chunk
p11346
tp11347
F1.25
s(g5592
I42
g5593
Vinsert
p11348
I22
VFieldAccess
p11349
tp11350
I2
s(g1409
I42
g1410
Vinsert
p11351
I42
VSimpleName: recurMismatches
p11352
tp11353
I2
s(g1117
I42
g1118
Vinsert
p11354
I42
VSimpleName: array
p11355
tp11356
F1.25
s(g7010
I42
g7011
Vinsert
p11357
I32
VMethodInvocation
p11358
tp11359
I10
s(g2724
I42
g2725
Vinsert
p11360
I27
VInfixExpression: <
p11361
tp11362
I1
s(g656
I42
g657
Vinsert
p11363
I27
VInfixExpression: !=
p11364
tp11365
I1
s(g3271
I42
g3272
Vinsert
p11366
I42
VSimpleName: IllegalArgumentException
p11367
tp11368
I1
s(g3212
I42
g3213
Vinsert
p11369
I42
VSimpleName: next
p11370
tp11371
F0.25
s(g4224
I42
g4225
Vinsert
p11372
I11
VCastExpression
p11373
tp11374
I1
s(g799
I42
g800
Vinsert
p11375
I42
VSimpleName: Number
p11376
tp11377
F0.25
s(g174
I42
g175
Vinsert
p11378
I25
VIfStatement
p11379
tp11380
I1
s(g2940
I42
g2941
Vinsert
p11381
I41
VReturnStatement
p11382
tp11383
I1
s(g2387
I42
g2388
Vinsert
p11384
I42
VSimpleName: ns
p11385
tp11386
I5
s(g2100
I42
g2101
Vinsert
p11387
I42
VSimpleName: LispReader
p11388
tp11389
I3
s(g11331
I42
g11332
Vinsert
p11390
I42
VSimpleName: size
p11391
tp11392
I1
s(g1263
I42
g1264
Vinsert
p11393
I40
VQualifiedName: Transaction.ZERO_POINT
p11394
tp11395
F0.25
s(g2623
I42
g2624
Vinsert
p11396
I42
VSimpleName: Object
p11397
tp11398
F0.5
s(g1401
I42
g1402
Vinsert
p11399
I42
VSimpleName: V
p11400
tp11401
F0.25
s(g1712
I42
g1713
Vinsert
p11402
I23
VFieldDeclaration
p11403
tp11404
F0.25
s(g5264
I42
g5265
Vinsert
p11405
I32
VMethodInvocation
p11406
tp11407
I1
s(g2278
I42
g2279
Vinsert
p11408
I42
VSimpleName: supportsMeta
p11409
tp11410
F0.25
s(g1545
I42
g1546
Vinsert
p11411
I42
VSimpleName: current
p11412
tp11413
F2.25
s(g510
I42
g511
Vinsert
p11414
I60
VVariableDeclarationStatement
p11415
tp11416
I1
s(g4754
I42
g4755
Vinsert
p11417
I42
VSimpleName: coll
p11418
tp11419
I1
s(g497
I42
g498
Vinsert
p11420
I14
VClassInstanceCreation
p11421
tp11422
I1
s(g1055
I42
g1056
Vinsert
p11423
I42
VSimpleName: v
p11424
tp11425
I2
s(g7395
I42
g7396
Vinsert
p11426
I42
VSimpleName: MaybePrimitiveExpr
p11427
tp11428
I2
s(g1900
I42
g1901
Vinsert
p11429
I42
VSimpleName: fclass
p11430
tp11431
I1
s(g4620
I42
g4621
Vinsert
p11432
I42
VSimpleName: scale
p11433
tp11434
I3
s(g3681
I42
g3682
Vinsert
p11435
I43
VSimpleType: T5
p11436
tp11437
I1
s(g8677
I42
g8678
Vinsert
p11438
I43
VSimpleType: Exception
p11439
tp11440
F0.25
s(g1401
I42
g1402
Vinsert
p11441
I61
VWhileStatement
p11442
tp11443
I1
s(g466
I42
g467
Vinsert
p11444
I42
VSimpleName: UnsupportedOperationException
p11445
tp11446
F0.25
s(g2461
I42
g2462
Vinsert
p11447
I42
VSimpleName: data
p11448
tp11449
F1.25
s(g1278
I42
g1279
Vinsert
p11450
I42
VSimpleName: visitCode
p11451
tp11452
I1
s(g1553
I42
g1554
Vinsert
p11453
I42
VSimpleName: position
p11454
tp11455
I1
s(g5759
I42
g5760
Vinsert
p11456
I42
VSimpleName: invokeConstructor
p11457
tp11458
I1
s(g1781
I42
g1782
Vinsert
p11459
I42
VSimpleName: hash
p11460
tp11461
I2
s(g451
I42
g452
Vinsert
p11462
I42
VSimpleName: qName
p11463
tp11464
F0.25
s(g86
I42
g87
Vinsert
p11465
I42
VSimpleName: GeneratorAdapter
p11466
tp11467
F0.5
s(g4351
I42
g4352
Vinsert
p11468
I42
VSimpleName: other
p11469
tp11470
I1
s(g252
I42
g253
Vinsert
p11471
I42
VSimpleName: ThreadLocalData
p11472
tp11473
F0.25
s(g1962
I42
g1963
Vinsert
p11474
I32
VMethodInvocation
p11475
tp11476
I2
s(g199
I42
g200
Vinsert
p11477
I45
VStringLiteral: "valAt"
p11478
tp11479
I1
s(g5788
I42
g5789
Vinsert
p11480
I43
VSimpleType: LineNumberReader
p11481
tp11482
F2.5
s(g139
I42
g140
Vinsert
p11483
I40
VQualifiedName: ref.tvals
p11484
tp11485
F0.25
s(g381
I42
g382
Vinsert
p11486
I27
VInfixExpression: !=
p11487
tp11488
I2
s(g8273
I42
g8274
Vinsert
p11489
I83
VModifier: static
p11490
tp11491
I1
s(g3814
I42
g3815
Vinsert
p11492
I42
VSimpleName: tv
p11493
tp11494
I1
s(g2405
I42
g2406
Vinsert
p11495
I42
VSimpleName: Keyword
p11496
tp11497
F1.25
s(g416
I42
g417
Vinsert
p11498
I60
VVariableDeclarationStatement
p11499
tp11500
I1
s(g3654
I42
g3655
Vinsert
p11501
I41
VReturnStatement
p11502
tp11503
I2
s(g973
I42
g974
Vinsert
p11504
I43
VSimpleType: String
p11505
tp11506
I2
s(g2687
I42
g2688
Vinsert
p11507
I62
VInstanceofExpression
p11508
tp11509
I4
s(g114
I42
g115
Vinsert
p11510
I42
VSimpleName: arg10
p11511
tp11512
F0.5
s(g2231
I42
g2232
Vinsert
p11513
I42
VSimpleName: msig
p11514
tp11515
I1
s(g1678
I42
g1679
Vinsert
p11516
I8
VBlock
p11517
tp11518
I6
s(g2332
I42
g2333
Vinsert
p11519
I43
VSimpleType: Set
p11520
tp11521
I3
s(g71
I42
g72
Vinsert
p11522
I42
VSimpleName: String
p11523
tp11524
I1
s(g7491
I42
g7492
Vinsert
p11525
I42
VSimpleName: items
p11526
tp11527
I2
s(g8281
I42
g8282
Vinsert
p11528
I42
VSimpleName: vals
p11529
tp11530
I1
s(g10954
I42
g10955
Vinsert
p11531
I42
VSimpleName: bit
p11532
tp11533
I1
s(g4323
I42
g4324
Vinsert
p11534
I66
VTextElement: <p>
p11535
tp11536
F0.5
s(g1910
I42
g1911
Vinsert
p11537
I59
VVariableDeclarationFragment
p11538
tp11539
F0.25
s(g363
I42
g364
Vinsert
p11540
I32
VMethodInvocation
p11541
tp11542
I3
s(g5055
I42
g5056
Vinsert
p11543
I42
VSimpleName: tld
p11544
tp11545
F1.25
s(g2145
I42
g2146
Vinsert
p11546
I42
VSimpleName: StringWriter
p11547
tp11548
I1
s(g11
I42
g12
Vinsert
p11549
I42
VSimpleName: n
p11550
tp11551
I2
s(g6759
I42
g6760
Vinsert
p11552
I34
VNumberLiteral: 42
p11553
tp11554
I1
s(g2591
I42
g2592
Vinsert
p11555
I43
VSimpleType: UnsupportedOperationException
p11556
tp11557
I1
s(g2711
I42
g2712
Vinsert
p11558
I42
VSimpleName: nsName
p11559
tp11560
F0.25
s(g8516
I42
g8517
Vinsert
p11561
I21
VExpressionStatement
p11562
tp11563
I1
s(g4620
I42
g4621
Vinsert
p11564
I42
VSimpleName: bx
p11565
tp11566
I1
s(g5428
I42
g5429
Vinsert
p11567
I43
VSimpleType: Keyword
p11568
tp11569
I1
s(g71
I42
g72
Vinsert
p11570
I40
VQualifiedName: Type.DOUBLE_TYPE
p11571
tp11572
I1
s(g2461
I42
g2462
Vinsert
p11573
I8
VBlock
p11574
tp11575
I2
s(g9948
I42
g9949
Vinsert
p11576
I42
VSimpleName: DynamicVar
p11577
tp11578
I2
s(g313
I42
g314
Vinsert
p11579
I8
VBlock
p11580
tp11581
I2
s(g1137
I42
g1138
Vinsert
p11582
I43
VSimpleType: Object
p11583
tp11584
I4
s(g8409
I42
g8410
Vinsert
p11585
I83
VModifier: public
p11586
tp11587
F0.25
s(g505
I42
g506
Vinsert
p11588
I43
VSimpleType: String
p11589
tp11590
F1.25
s(g1308
I42
g1309
Vinsert
p11591
I42
VSimpleName: entries
p11592
tp11593
I4
s(Vinsert
p11594
I42
VSimpleName: invoke
p11595
Vinsert
p11596
I42
VSimpleName: v
p11597
tp11598
I1
s(g1104
I42
g1105
Vinsert
p11599
I11
VCastExpression
p11600
tp11601
I1
s(g1654
I42
g1655
Vinsert
p11602
I42
VSimpleName: x
p11603
tp11604
I1
s(g1667
I42
g1668
Vinsert
p11605
I42
VSimpleName: Var
p11606
tp11607
F0.25
s(g285
I42
g286
Vinsert
p11608
I11
VCastExpression
p11609
tp11610
I1
s(g96
I42
g97
Vinsert
p11611
I36
VParenthesizedExpression
p11612
tp11613
I2
s(g2776
I42
g2777
Vinsert
p11614
I42
VSimpleName: x
p11615
tp11616
I1
s(g1344
I42
g1345
Vinsert
p11617
I42
VSimpleName: meta
p11618
tp11619
F0.25
s(g2983
I42
g2984
Vinsert
p11620
I27
VInfixExpression: &
p11621
tp11622
I1
s(g1874
I42
g1875
Vinsert
p11623
I42
VSimpleName: writeLock
p11624
tp11625
F0.5
s(g1104
I42
g1105
Vinsert
p11626
I32
VMethodInvocation
p11627
tp11628
I1
s(Vinsert
p11629
I42
VSimpleName: get
p11630
Vinsert
p11631
I42
VSimpleName: subsumes
p11632
tp11633
I1
s(g1137
I42
g1138
Vinsert
p11634
I60
VVariableDeclarationStatement
p11635
tp11636
I3
s(g174
I42
g175
Vinsert
p11637
I43
VSimpleType: Exception
p11638
tp11639
F0.25
s(g3649
I42
g3650
Vinsert
p11640
I42
VSimpleName: toString
p11641
tp11642
F0.25
s(g4046
I42
g4047
Vinsert
p11643
I59
VVariableDeclarationFragment
p11644
tp11645
I3
s(g4248
I42
g4249
Vinsert
p11646
I42
VSimpleName: name
p11647
tp11648
F0.5
s(g1611
I42
g1612
Vinsert
p11649
I27
VInfixExpression: !=
p11650
tp11651
I1
s(g119
I42
g120
Vinsert
p11652
I21
VExpressionStatement
p11653
tp11654
F0.25
s(g3212
I42
g3213
Vinsert
p11655
I42
VSimpleName: _seed
p11656
tp11657
I2
s(g232
I42
g233
Vinsert
p11658
I42
VSimpleName: newTail
p11659
tp11660
I1
s(g878
I42
g879
Vinsert
p11661
I42
VSimpleName: sym
p11662
tp11663
I3
s(g5584
I42
g5585
Vinsert
p11664
I42
VSimpleName: rseq
p11665
tp11666
F0.25
s(g3110
I42
g3111
Vinsert
p11667
I42
VSimpleName: isPrimitive
p11668
tp11669
F0.25
s(g2286
I42
g2287
Vinsert
p11670
I42
VSimpleName: protocolOn
p11671
tp11672
I1
s(g189
I42
g190
Vinsert
p11673
I42
VSimpleName: retClass
p11674
tp11675
I2
s(g2278
I42
g2279
Vinsert
p11676
I32
VMethodInvocation
p11677
tp11678
F3.25
s(Vinsert
p11679
I42
VSimpleName: getMethod
p11680
Vinsert
p11681
I42
VSimpleName: emit
p11682
tp11683
I1
s(g4812
I42
g4813
Vinsert
p11684
I42
VSimpleName: COLUMN
p11685
tp11686
I1
s(g1
I42
g2
Vinsert
p11687
I36
VParenthesizedExpression
p11688
tp11689
I1
s(g852
I42
g853
Vinsert
p11690
I41
VReturnStatement
p11691
tp11692
I1
s(g5505
I42
g5506
Vinsert
p11693
I59
VVariableDeclarationFragment
p11694
tp11695
I5
s(g295
I42
g296
Vinsert
p11696
I42
VSimpleName: Number
p11697
tp11698
I1
s(g968
I42
g969
Vinsert
p11699
I21
VExpressionStatement
p11700
tp11701
F12.25
s(g5802
I42
g5803
Vinsert
p11702
I21
VExpressionStatement
p11703
tp11704
I1
s(g2677
I42
g2678
Vinsert
p11705
I59
VVariableDeclarationFragment
p11706
tp11707
I1
s(g4171
I42
g4172
Vinsert
p11708
I42
VSimpleName: remove
p11709
tp11710
I1
s(g1611
I42
g1612
Vinsert
p11711
I42
VSimpleName: array
p11712
tp11713
I1
s(g1750
I42
g1751
Vinsert
p11714
I8
VBlock
p11715
tp11716
I2
s(g6203
I42
g6204
Vinsert
p11717
I42
VSimpleName: desc
p11718
tp11719
F1.25
s(g681
I42
g682
Vinsert
p11720
I43
VSimpleType: PersistentVector
p11721
tp11722
I1
s(g608
I42
g609
Vinsert
p11723
I42
VSimpleName: val
p11724
tp11725
F0.25
s(g461
I42
g462
Vinsert
p11726
I27
VInfixExpression: ==
p11727
tp11728
I2
s(g6781
I42
g6782
Vinsert
p11729
I42
VSimpleName: parse
p11730
tp11731
F0.25
s(g1263
I42
g1264
Vinsert
p11732
I42
VSimpleName: TVal
p11733
tp11734
F1.25
s(g8511
I42
g8512
Vinsert
p11735
I42
VSimpleName: IPersistentVector
p11736
tp11737
I1
s(g3676
I42
g3677
Vinsert
p11738
I44
VSingleVariableDeclaration
p11739
tp11740
I4
s(g562
I42
g563
Vinsert
p11741
I42
VSimpleName: k2
p11742
tp11743
I1
s(g169
I42
g170
Vinsert
p11744
I43
VSimpleType: ClassWriter
p11745
tp11746
I1
s(Vinsert
p11747
I42
VSimpleName: count
p11748
Vinsert
p11749
I44
VSingleVariableDeclaration
p11750
tp11751
F0.75
s(g1688
I42
g1689
Vinsert
p11752
I42
VSimpleName: module
p11753
tp11754
I1
s(g686
I42
g687
Vinsert
p11755
I34
VNumberLiteral: 0
p11756
tp11757
I1
s(g3100
I42
g3101
Vinsert
p11758
I8
VBlock
p11759
tp11760
I1
s(g6450
I42
g6451
Vinsert
p11761
I7
VAssignment: =
p11762
tp11763
I1
s(g8355
I42
g8356
Vinsert
p11764
I42
VSimpleName: get
p11765
tp11766
F5.25
s(g4831
I42
g4832
Vinsert
p11767
I42
VSimpleName: maybePrimitiveType
p11768
tp11769
I1
s(g4541
I42
g4542
Vinsert
p11770
I42
VSimpleName: ms
p11771
tp11772
I4
s(g3384
I42
g3385
Vinsert
p11773
I59
VVariableDeclarationFragment
p11774
tp11775
I2
s(g5642
I42
g5643
Vinsert
p11776
I42
VSimpleName: bins
p11777
tp11778
I1
s(g709
I42
g710
Vinsert
p11779
I42
VSimpleName: pooledExecutor
p11780
tp11781
I1
s(g56
I42
g57
Vinsert
p11782
I41
VReturnStatement
p11783
tp11784
I1
s(g1991
I42
g1992
Vinsert
p11785
I8
VBlock
p11786
tp11787
I1
s(g3105
I42
g3106
Vinsert
p11788
I42
VSimpleName: IPersistentMap
p11789
tp11790
I1
s(g426
I42
g427
Vinsert
p11791
I16
VConditionalExpression
p11792
tp11793
I2
s(g3762
I42
g3763
Vinsert
p11794
I40
VQualifiedName: tld.dynamicBindings
p11795
tp11796
I1
s(g305
I42
g306
Vinsert
p11797
I34
VNumberLiteral: 0
p11798
tp11799
I1
s(g6409
I42
g6410
Vinsert
p11800
I38
VPrefixExpression: !
p11801
tp11802
I3
s(g8355
I42
g8356
Vinsert
p11803
I42
VSimpleName: Var
p11804
tp11805
F4.5
s(g1563
I42
g1564
Vinsert
p11806
I42
VSimpleName: args
p11807
tp11808
F0.25
s(g7970
I42
g7971
Vinsert
p11809
I8
VBlock
p11810
tp11811
I4
s(g1401
I42
g1402
Vinsert
p11812
I32
VMethodInvocation
p11813
tp11814
I2
s(g4718
I42
g4719
Vinsert
p11815
I42
VSimpleName: arg13
p11816
tp11817
F0.25
s(Vinsert
p11818
I42
VSimpleName: invoke
p11819
Vinsert
p11820
I42
VSimpleName: _firstFn
p11821
tp11822
I4
s(g149
I42
g150
Vinsert
p11823
I42
VSimpleName: ifn
p11824
tp11825
F0.25
s(g4891
I42
g4892
Vinsert
p11826
I31
VMethodDeclaration
p11827
tp11828
F0.5
s(g2830
I42
g2831
Vinsert
p11829
I5
VArrayType: Object[]
p11830
tp11831
I1
s(g1172
I42
g1173
Vinsert
p11832
I42
VSimpleName: sigTag
p11833
tp11834
I1
s(g1678
I42
g1679
Vinsert
p11835
I42
VSimpleName: items
p11836
tp11837
I10
s(Vinsert
p11838
I42
VSimpleName: rest
p11839
Vinsert
p11840
I42
VSimpleName: form
p11841
tp11842
I1
s(g6026
I42
g6027
Vinsert
p11843
I42
VSimpleName: o
p11844
tp11845
I3
s(g9861
I42
g9862
Vinsert
p11846
I24
VForStatement
p11847
tp11848
I2
s(g2883
I42
g2884
Vinsert
p11849
I11
VCastExpression
p11850
tp11851
I1
s(g2615
I42
g2616
Vinsert
p11852
I42
VSimpleName: toBigDecimal
p11853
tp11854
I1
s(g852
I42
g853
Vinsert
p11855
I60
VVariableDeclarationStatement
p11856
tp11857
I1
s(g3495
I42
g3496
Vinsert
p11858
I22
VFieldAccess
p11859
tp11860
I1
s(g1258
I42
g1259
Vinsert
p11861
I43
VSimpleType: BigDecimal
p11862
tp11863
I2
s(g2026
I42
g2027
Vinsert
p11864
I42
VSimpleName: i
p11865
tp11866
I1
s(g6289
I42
g6290
Vinsert
p11867
I42
VSimpleName: context
p11868
tp11869
I1
s(g10591
I42
g10592
Vinsert
p11870
I43
VSimpleType: List
p11871
tp11872
I1
s(g2776
I42
g2777
Vinsert
p11873
I42
VSimpleName: bi
p11874
tp11875
I2
s(g1019
I42
g1020
Vinsert
p11876
I32
VMethodInvocation
p11877
tp11878
F14.25
s(g5380
I42
g5381
Vinsert
p11879
I43
VSimpleType: InputStreamReader
p11880
tp11881
I1
s(Vinsert
p11882
I42
VSimpleName: write
p11883
Vinsert
p11884
I42
VSimpleName: String
p11885
tp11886
I1
s(g1474
I42
g1475
Vinsert
p11887
I42
VSimpleName: meta
p11888
tp11889
I3
s(g3728
I42
g3729
Vinsert
p11890
I42
VSimpleName: loadArg
p11891
tp11892
I1
s(g8516
I42
g8517
Vinsert
p11893
I42
VSimpleName: pool
p11894
tp11895
I1
s(Vinsert
p11896
I42
VSimpleName: intern
p11897
Vinsert
p11898
I40
VQualifiedName: ns.name
p11899
tp11900
I1
s(g2405
I42
g2406
Vinsert
p11901
I41
VReturnStatement
p11902
tp11903
F16.25
s(g9600
I42
g9601
Vinsert
p11904
I7
VAssignment: =
p11905
tp11906
I5
s(g3775
I42
g3776
Vinsert
p11907
I42
VSimpleName: k1
p11908
tp11909
I1
s(g1233
I42
g1234
Vinsert
p11910
I42
VSimpleName: IPersistentSet
p11911
tp11912
I2
s(g5664
I42
g5665
Vinsert
p11913
I24
VForStatement
p11914
tp11915
I2
s(g7970
I42
g7971
Vinsert
p11916
I11
VCastExpression
p11917
tp11918
I2
s(g3384
I42
g3385
Vinsert
p11919
I32
VMethodInvocation
p11920
tp11921
I4
s(g6884
I42
g6885
Vinsert
p11922
I25
VIfStatement
p11923
tp11924
I3
s(g5672
I42
g5673
Vinsert
p11925
I42
VSimpleName: arg1
p11926
tp11927
F1.25
s(g883
I42
g884
Vinsert
p11928
I42
VSimpleName: i
p11929
tp11930
I2
s(g4718
I42
g4719
Vinsert
p11931
I8
VBlock
p11932
tp11933
I3
s(g214
I42
g215
Vinsert
p11934
I60
VVariableDeclarationStatement
p11935
tp11936
I8
s(g547
I42
g548
Vinsert
p11937
I42
VSimpleName: desc
p11938
tp11939
F0.5
s(g8409
I42
g8410
Vinsert
p11940
I31
VMethodDeclaration
p11941
tp11942
F0.25
s(g618
I42
g619
Vinsert
p11943
I41
VReturnStatement
p11944
tp11945
F10.25
s(g5824
I42
g5825
Vinsert
p11946
I43
VSimpleType: IdentityHashMap
p11947
tp11948
F0.25
s(g1268
I42
g1269
Vinsert
p11949
I42
VSimpleName: cons
p11950
tp11951
I1
s(g1063
I42
g1064
Vinsert
p11952
I14
VClassInstanceCreation
p11953
tp11954
I3
s(g3256
I42
g3257
Vinsert
p11955
I42
VSimpleName: r
p11956
tp11957
F0.25
s(g456
I42
g457
Vinsert
p11958
I42
VSimpleName: symPat
p11959
tp11960
I1
s(g4021
I42
g4022
Vinsert
p11961
I43
VSimpleType: ISeq
p11962
tp11963
F0.5
s(g827
I42
g828
Vinsert
p11964
I42
VSimpleName: _meta
p11965
tp11966
I1
s(g2935
I42
g2936
Vinsert
p11967
I42
VSimpleName: cnt
p11968
tp11969
I1
s(g3841
I42
g3842
Vinsert
p11970
I40
VQualifiedName: APersistentMap.KeySeq
p11971
tp11972
F0.25
s(g847
I42
g848
Vinsert
p11973
I39
VPrimitiveType: void
p11974
tp11975
F0.25
s(g6639
I42
g6640
Vinsert
p11976
I42
VSimpleName: value
p11977
tp11978
I1
s(g8130
I42
g8131
Vinsert
p11979
I83
VModifier: public
p11980
tp11981
F0.75
s(g214
I42
g215
Vinsert
p11982
I42
VSimpleName: c
p11983
tp11984
I2
s(g7669
I42
g7670
Vinsert
p11985
I42
VSimpleName: cv
p11986
tp11987
F0.25
s(g2047
I42
g2048
Vinsert
p11988
I60
VVariableDeclarationStatement
p11989
tp11990
I1
s(g3022
I42
g3023
Vinsert
p11991
I8
VBlock
p11992
tp11993
I1
s(g406
I42
g407
Vinsert
p11994
I42
VSimpleName: RT
p11995
tp11996
I6
s(g2649
I42
g2650
Vinsert
p11997
I42
VSimpleName: IPersistentMap
p11998
tp11999
F0.25
s(g8061
I42
g8062
Vinsert
p12000
I42
VSimpleName: tld
p12001
tp12002
I3
s(g2122
I42
g2123
Vinsert
p12003
I42
VSimpleName: sym
p12004
tp12005
F0.5
s(g2964
I42
g2965
Vinsert
p12006
I42
VSimpleName: lastPoint
p12007
tp12008
I1
s(g994
I42
g995
Vinsert
p12009
I42
VSimpleName: zeroPred
p12010
tp12011
F0.25
s(g1187
I42
g1188
Vinsert
p12012
I8
VBlock
p12013
tp12014
F6.5
s(g4516
I42
g4517
Vinsert
p12015
I42
VSimpleName: assoc
p12016
tp12017
I1
s(g8230
I42
g8231
Vinsert
p12018
I21
VExpressionStatement
p12019
tp12020
I6
s(g1925
I42
g1926
Vinsert
p12021
I43
VSimpleType: Collection
p12022
tp12023
F0.25
s(g51
I42
g52
Vinsert
p12024
I25
VIfStatement
p12025
tp12026
I1
s(g2711
I42
g2712
Vinsert
p12027
I42
VSimpleName: ns
p12028
tp12029
I1
s(g101
I42
g102
Vinsert
p12030
I42
VSimpleName: T
p12031
tp12032
F0.25
s(g4351
I42
g4352
Vinsert
p12033
I42
VSimpleName: object
p12034
tp12035
F0.25
s(g2018
I42
g2019
Vinsert
p12036
I5
VArrayType: byte[]
p12037
tp12038
F0.25
s(g3709
I42
g3710
Vinsert
p12039
I42
VSimpleName: nsc
p12040
tp12041
I1
s(g515
I42
g516
Vinsert
p12042
I42
VSimpleName: s
p12043
tp12044
I5
s(Vinsert
p12045
I42
VSimpleName: count
p12046
Vinsert
p12047
I42
VSimpleName: start
p12048
tp12049
I2
s(g2930
I42
g2931
Vinsert
p12050
I42
VSimpleName: state
p12051
tp12052
I3
s(g3251
I42
g3252
Vinsert
p12053
I42
VSimpleName: compareAndSet
p12054
tp12055
I1
s(g8677
I42
g8678
Vinsert
p12056
I43
VSimpleType: Object
p12057
tp12058
F0.5
s(g4404
I42
g4405
Vinsert
p12059
I52
VThisExpression
p12060
tp12061
F0.5
s(g4399
I42
g4400
Vinsert
p12062
I43
VSimpleType: File
p12063
tp12064
I1
s(g2578
I42
g2579
Vinsert
p12065
I45
VStringLiteral: "java/lang/Float"
p12066
tp12067
I1
s(g5036
I42
g5037
Vinsert
p12068
I27
VInfixExpression: ==
p12069
tp12070
I2
s(g4663
I42
g4664
Vinsert
p12071
I42
VSimpleName: Type
p12072
tp12073
I1
s(g799
I42
g800
Vinsert
p12074
I42
VSimpleName: y
p12075
tp12076
F1.25
s(g1414
I42
g1415
Vinsert
p12077
I40
VQualifiedName: init.length
p12078
tp12079
I1
s(g1218
I42
g1219
Vinsert
p12080
I38
VPrefixExpression: !
p12081
tp12082
I1
s(g666
I42
g667
Vinsert
p12083
I2
VArrayAccess
p12084
tp12085
I6
s(g290
I42
g291
Vinsert
p12086
I2
VArrayAccess
p12087
tp12088
I1
s(g515
I42
g516
Vinsert
p12089
I43
VSimpleType: LinkedList
p12090
tp12091
I2
s(g431
I42
g432
Vinsert
p12092
I38
VPrefixExpression: !
p12093
tp12094
I1
s(g5664
I42
g5665
Vinsert
p12095
I42
VSimpleName: s
p12096
tp12097
I2
s(g11747
I42
g11748
Vinsert
p12098
I42
VSimpleName: equals
p12099
tp12100
F0.25
s(g2315
I42
g2316
Vinsert
p12101
I43
VSimpleType: IPersistentMap
p12102
tp12103
I2
s(g2692
I42
g2693
Vinsert
p12104
I61
VWhileStatement
p12105
tp12106
I1
s(g5759
I42
g5760
Vinsert
p12107
I42
VSimpleName: ret
p12108
tp12109
I2
s(g71
I42
g72
Vinsert
p12110
I42
VSimpleName: t
p12111
tp12112
I1
s(g1827
I42
g1828
Vinsert
p12113
I45
VStringLiteral: "java.lang.System"
p12114
tp12115
I1
s(g2803
I42
g2804
Vinsert
p12116
I21
VExpressionStatement
p12117
tp12118
I1
s(g862
I42
g863
Vinsert
p12119
I62
VInstanceofExpression
p12120
tp12121
I1
s(g2814
I42
g2815
Vinsert
p12122
I32
VMethodInvocation
p12123
tp12124
F1.25
s(g11204
I42
g11205
Vinsert
p12125
I42
VSimpleName: format
p12126
tp12127
F0.25
s(g3389
I42
g3390
Vinsert
p12128
I8
VBlock
p12129
tp12130
I6
s(g323
I42
g324
Vinsert
p12131
I42
VSimpleName: f
p12132
tp12133
F0.5
s(g1545
I42
g1546
Vinsert
p12134
I36
VParenthesizedExpression
p12135
tp12136
F9.25
s(g4743
I42
g4744
Vinsert
p12137
I42
VSimpleName: ctorTypes
p12138
tp12139
I1
s(g8729
I42
g8730
Vinsert
p12140
I16
VConditionalExpression
p12141
tp12142
I1
s(g4452
I42
g4453
Vinsert
p12143
I83
VModifier: public
p12144
tp12145
I1
s(g3649
I42
g3650
Vinsert
p12146
I42
VSimpleName: test
p12147
tp12148
I2
s(Vinsert
p12149
I42
VSimpleName: withMeta
p12150
Vinsert
p12151
I43
VSimpleType: PersistentListMap
p12152
tp12153
I1
s(g552
I42
g553
Vinsert
p12154
I42
VSimpleName: i
p12155
tp12156
F5.75
s(g2904
I42
g2905
Vinsert
p12157
I42
VSimpleName: valAt
p12158
tp12159
F0.5
s(g717
I42
g718
Vinsert
p12160
I43
VSimpleType: Integer
p12161
tp12162
I2
s(g8706
I42
g8707
Vinsert
p12163
I34
VNumberLiteral: 0
p12164
tp12165
I2
s(g2037
I42
g2038
Vinsert
p12166
I42
VSimpleName: start
p12167
tp12168
I2
s(g2501
I42
g2502
Vinsert
p12169
I42
VSimpleName: fromLongMethod
p12170
tp12171
I1
s(g8230
I42
g8231
Vinsert
p12172
I42
VSimpleName: form
p12173
tp12174
I1
s(g3775
I42
g3776
Vinsert
p12175
I36
VParenthesizedExpression
p12176
tp12177
I1
s(g6455
I42
g6456
Vinsert
p12178
I52
VThisExpression
p12179
tp12180
F3.25
s(g8657
I42
g8658
Vinsert
p12181
I27
VInfixExpression: &&
p12182
tp12183
I1
s(g3754
I42
g3755
Vinsert
p12184
I14
VClassInstanceCreation
p12185
tp12186
I1
s(g4399
I42
g4400
Vinsert
p12187
I32
VMethodInvocation
p12188
tp12189
I3
s(g6114
I42
g6115
Vinsert
p12190
I34
VNumberLiteral: 3
p12191
tp12192
I1
s(g9866
I42
g9867
Vinsert
p12193
I45
VStringLiteral: "clojure.compile.unchecked-math"
p12194
tp12195
I1
s(g2969
I42
g2970
Vinsert
p12196
I42
VSimpleName: _rest
p12197
tp12198
F0.5
s(g1432
I42
g1433
Vinsert
p12199
I14
VClassInstanceCreation
p12200
tp12201
I1
s(g154
I42
g155
Vinsert
p12202
I42
VSimpleName: BigInt
p12203
tp12204
I1
s(g2596
I42
g2597
Vinsert
p12205
I27
VInfixExpression: +
p12206
tp12207
I4
s(g6845
I42
g6846
Vinsert
p12208
I38
VPrefixExpression: -
p12209
tp12210
I1
s(Vinsert
p12211
I42
VSimpleName: intern
p12212
Vinsert
p12213
I22
VFieldAccess
p12214
tp12215
I1
s(g1424
I42
g1425
Vinsert
p12216
I25
VIfStatement
p12217
tp12218
I1
s(g1474
I42
g1475
Vinsert
p12219
I62
VInstanceofExpression
p12220
tp12221
I2
s(g6670
I42
g6671
Vinsert
p12222
I42
VSimpleName: find
p12223
tp12224
I1
s(g1187
I42
g1188
Vinsert
p12225
I40
VQualifiedName: array.length
p12226
tp12227
I1
s(g6696
I42
g6697
Vinsert
p12228
I42
VSimpleName: table
p12229
tp12230
I4
s(g6
I42
g7
Vinsert
p12231
I60
VVariableDeclarationStatement
p12232
tp12233
I4
s(g2262
I42
g2263
Vinsert
p12234
I42
VSimpleName: Object
p12235
tp12236
F15.75
s(g4726
I42
g4727
Vinsert
p12237
I60
VVariableDeclarationStatement
p12238
tp12239
I1
s(g583
I42
g584
Vinsert
p12240
I42
VSimpleName: i
p12241
tp12242
I3
s(g3256
I42
g3257
Vinsert
p12243
I32
VMethodInvocation
p12244
tp12245
F43.5
s(g3633
I42
g3634
Vinsert
p12246
I42
VSimpleName: map
p12247
tp12248
I5
s(g1050
I42
g1051
Vinsert
p12249
I83
VModifier: static
p12250
tp12251
I6
s(g1032
I42
g1033
Vinsert
p12252
I43
VSimpleType: String
p12253
tp12254
F0.5
s(g2904
I42
g2905
Vinsert
p12255
I43
VSimpleType: Object
p12256
tp12257
F3.25
s(g3076
I42
g3077
Vinsert
p12258
I40
VQualifiedName: tv.tstamp.msecs
p12259
tp12260
F0.25
s(g1258
I42
g1259
Vinsert
p12261
I40
VQualifiedName: BigDecimal.ZERO
p12262
tp12263
I1
s(g1760
I42
g1761
Vinsert
p12264
I42
VSimpleName: Label
p12265
tp12266
I1
s(g86
I42
g87
Vinsert
p12267
I31
VMethodDeclaration
p12268
tp12269
F0.75
s(g1553
I42
g1554
Vinsert
p12270
I60
VVariableDeclarationStatement
p12271
tp12272
I2
s(g2343
I42
g2344
Vinsert
p12273
I34
VNumberLiteral: 0
p12274
tp12275
I2
s(g56
I42
g57
Vinsert
p12276
I42
VSimpleName: id
p12277
tp12278
F1.25
s(g4151
I42
g4152
Vinsert
p12279
I43
VSimpleType: Transaction
p12280
tp12281
F1.5
s(g1424
I42
g1425
Vinsert
p12282
I42
VSimpleName: Modifier
p12283
tp12284
I1
s(g1278
I42
g1279
Vinsert
p12285
I24
VForStatement
p12286
tp12287
I3
s(g1368
I42
g1369
Vinsert
p12288
I42
VSimpleName: next
p12289
tp12290
F0.75
s(g955
I42
g956
Vinsert
p12291
I34
VNumberLiteral: 4
p12292
tp12293
I2
s(g2930
I42
g2931
Vinsert
p12294
I25
VIfStatement
p12295
tp12296
I1
s(g3783
I42
g3784
Vinsert
p12297
I52
VThisExpression
p12298
tp12299
F6.25
s(g119
I42
g120
Vinsert
p12300
I42
VSimpleName: ROOT_CLASSLOADER
p12301
tp12302
F1.25
s(g1887
I42
g1888
Vinsert
p12303
I42
VSimpleName: stare
p12304
tp12305
I1
s(g4754
I42
g4755
Vinsert
p12306
I42
VSimpleName: n
p12307
tp12308
I1
s(g6349
I42
g6350
Vinsert
p12309
I42
VSimpleName: target
p12310
tp12311
I2
s(g9244
I42
g9245
Vinsert
p12312
I43
VSimpleType: NotSerializableException
p12313
tp12314
I2
s(g1535
I42
g1536
Vinsert
p12315
I32
VMethodInvocation
p12316
tp12317
I1
s(g593
I42
g594
Vinsert
p12318
I59
VVariableDeclarationFragment
p12319
tp12320
I1
s(g3767
I42
g3768
Vinsert
p12321
I42
VSimpleName: charAt
p12322
tp12323
I1
s(g770
I42
g771
Vinsert
p12324
I25
VIfStatement
p12325
tp12326
I1
s(g9600
I42
g9601
Vinsert
p12327
I42
VSimpleName: out
p12328
tp12329
I2
s(g2883
I42
g2884
Vinsert
p12330
I42
VSimpleName: TVal
p12331
tp12332
I1
s(g2983
I42
g2984
Vinsert
p12333
I42
VSimpleName: replace
p12334
tp12335
I1
s(g1856
I42
g1857
Vinsert
p12336
I42
VSimpleName: freshLoader
p12337
tp12338
F0.5
s(g174
I42
g175
Vinsert
p12339
I27
VInfixExpression: ==
p12340
tp12341
I1
s(g6234
I42
g6235
Vinsert
p12342
I40
VQualifiedName: method.prim
p12343
tp12344
I4
s(g3934
I42
g3935
Vinsert
p12345
I43
VSimpleType: Integer
p12346
tp12347
I2
s(g5264
I42
g5265
Vinsert
p12348
I43
VSimpleType: URL
p12349
tp12350
I2
s(g3923
I42
g3924
Vinsert
p12351
I45
VStringLiteral: "Don't know how to get vals from: "
p12352
tp12353
I1
s(g3092
I42
g3093
Vinsert
p12354
I46
VSuperConstructorInvocation
p12355
tp12356
I1
s(g5533
I42
g5534
Vinsert
p12357
I42
VSimpleName: item
p12358
tp12359
I1
s(g11882
I42
g11883
Vinsert
p12360
I13
VCharacterLiteral: ')'
p12361
tp12362
I1
s(g4404
I42
g4405
Vinsert
p12363
I42
VSimpleName: tag
p12364
tp12365
F3.5
s(g1127
I42
g1128
Vinsert
p12366
I27
VInfixExpression: +
p12367
tp12368
I1
s(g2456
I42
g2457
Vinsert
p12369
I40
VQualifiedName: action.actor
p12370
tp12371
I1
s(g328
I42
g329
Vinsert
p12372
I45
VStringLiteral: "Mutable used by non-owner thread"
p12373
tp12374
F0.25
s(Vinsert
p12375
I42
VSimpleName: var
p12376
Vinsert
p12377
I42
VSimpleName: REFLECTION_WARNING_PROP
p12378
tp12379
I1
s(g6639
I42
g6640
Vinsert
p12380
I42
VSimpleName: Type
p12381
tp12382
I3
s(Vinsert
p12383
I42
VSimpleName: set
p12384
Vinsert
p12385
I14
VClassInstanceCreation
p12386
tp12387
I4
s(g8965
I42
g8966
Vinsert
p12388
I9
VBooleanLiteral: false
p12389
tp12390
I1
s(g4831
I42
g4832
Vinsert
p12391
I43
VSimpleType: MaybePrimitiveExpr
p12392
tp12393
I1
s(g1807
I42
g1808
Vinsert
p12394
I8
VBlock
p12395
tp12396
I2
s(g1717
I42
g1718
Vinsert
p12397
I45
VStringLiteral: "fn"
p12398
tp12399
F0.25
s(g466
I42
g467
Vinsert
p12400
I41
VReturnStatement
p12401
tp12402
I1
s(Vinsert
p12403
I42
VSimpleName: arraycopy
p12404
Vinsert
p12405
I40
VQualifiedName: array.length
p12406
tp12407
I2
s(g4351
I42
g4352
Vinsert
p12408
I60
VVariableDeclarationStatement
p12409
tp12410
I1
s(g1278
I42
g1279
Vinsert
p12411
I42
VSimpleName: Object
p12412
tp12413
F1.5
s(g4713
I42
g4714
Vinsert
p12414
I8
VBlock
p12415
tp12416
I6
s(g3957
I42
g3958
Vinsert
p12417
I42
VSimpleName: reader
p12418
tp12419
I1
s(Vinsert
p12420
I42
VSimpleName: get
p12421
Vinsert
p12422
I43
VSimpleType: Frame
p12423
tp12424
I3
s(g461
I42
g462
Vinsert
p12425
I42
VSimpleName: access
p12426
tp12427
I1
s(g461
I42
g462
Vinsert
p12428
I40
VQualifiedName: Opcodes.ACC_PRIVATE
p12429
tp12430
I1
s(g1218
I42
g1219
Vinsert
p12431
I11
VCastExpression
p12432
tp12433
I1
s(g2461
I42
g2462
Vinsert
p12434
I83
VModifier: public
p12435
tp12436
F0.5
s(g3875
I42
g3876
Vinsert
p12437
I37
VPostfixExpression: ++
p12438
tp12439
I1
s(g608
I42
g609
Vinsert
p12440
I14
VClassInstanceCreation
p12441
tp12442
I1
s(g46
I42
g47
Vinsert
p12443
I11
VCastExpression
p12444
tp12445
F0.5
s(g10314
I42
g10315
Vinsert
p12446
I43
VSimpleType: Object
p12447
tp12448
F0.25
s(g745
I42
g746
Vinsert
p12449
I42
VSimpleName: fn
p12450
tp12451
F0.5
s(g1218
I42
g1219
Vinsert
p12452
I27
VInfixExpression: !=
p12453
tp12454
I1
s(Vinsert
p12455
I42
VSimpleName: valueOf
p12456
Vinsert
p12457
I31
VMethodDeclaration
p12458
tp12459
F0.75
s(g1626
I42
g1627
Vinsert
p12460
I43
VSimpleType: HostSymbol
p12461
tp12462
I1
s(g7649
I42
g7650
Vinsert
p12463
I43
VSimpleType: Byte
p12464
tp12465
I1
s(g3105
I42
g3106
Vinsert
p12466
I42
VSimpleName: preds
p12467
tp12468
I1
s(g401
I42
g402
Vinsert
p12469
I42
VSimpleName: next
p12470
tp12471
F0.25
s(g1649
I42
g1650
Vinsert
p12472
I32
VMethodInvocation
p12473
tp12474
I1
s(g547
I42
g548
Vinsert
p12475
I32
VMethodInvocation
p12476
tp12477
I3
s(g4041
I42
g4042
Vinsert
p12478
I40
VQualifiedName: Label.VISITED2
p12479
tp12480
I1
s(g3517
I42
g3518
Vinsert
p12481
I40
VQualifiedName: lnk._rest
p12482
tp12483
I1
s(g5664
I42
g5665
Vinsert
p12484
I42
VSimpleName: a
p12485
tp12486
I2
s(g5206
I42
g5207
Vinsert
p12487
I27
VInfixExpression: &&
p12488
tp12489
I1
s(g3522
I42
g3523
Vinsert
p12490
I62
VInstanceofExpression
p12491
tp12492
I2
s(g1500
I42
g1501
Vinsert
p12493
I45
VStringLiteral: "clojure.core.server"
p12494
tp12495
I1
s(g396
I42
g397
Vinsert
p12496
I42
VSimpleName: ListIterator
p12497
tp12498
I1
s(g134
I42
g135
Vinsert
p12499
I42
VSimpleName: nop
p12500
tp12501
F0.25
s(g8130
I42
g8131
Vinsert
p12502
I8
VBlock
p12503
tp12504
I3
s(g1202
I42
g1203
Vinsert
p12505
I7
VAssignment: =
p12506
tp12507
I1
s(g4259
I42
g4260
Vinsert
p12508
I42
VSimpleName: be
p12509
tp12510
I1
s(Vinsert
p12511
I42
VSimpleName: invoke
p12512
Vinsert
p12513
I42
VSimpleName: off
p12514
tp12515
I1
s(g781
I42
g782
Vinsert
p12516
I42
VSimpleName: RESOLVED
p12517
tp12518
I1
s(g4541
I42
g4542
Vinsert
p12519
I42
VSimpleName: equal
p12520
tp12521
I2
s(Vinsert
p12522
I42
VSimpleName: map
p12523
Vinsert
p12524
I27
VInfixExpression: *
p12525
tp12526
I2
s(g4916
I42
g4917
Vinsert
p12527
I42
VSimpleName: Num
p12528
tp12529
I1
s(g466
I42
g467
Vinsert
p12530
I43
VSimpleType: Map
p12531
tp12532
I2
s(g608
I42
g609
Vinsert
p12533
I42
VSimpleName: key
p12534
tp12535
F0.25
s(g3076
I42
g3077
Vinsert
p12536
I25
VIfStatement
p12537
tp12538
F0.25
s(g6045
I42
g6046
Vinsert
p12539
I42
VSimpleName: getModifiers
p12540
tp12541
I1
s(g3229
I42
g3230
Vinsert
p12542
I42
VSimpleName: Object
p12543
tp12544
F0.25
s(g2914
I42
g2915
Vinsert
p12545
I33
VNullLiteral
p12546
tp12547
F2.25
s(g5592
I42
g5593
Vinsert
p12548
I42
VSimpleName: maxLocals
p12549
tp12550
I3
s(g6477
I42
g6478
Vinsert
p12551
I39
VPrimitiveType: int
p12552
tp12553
I1
s(Vinsert
p12554
I42
VSimpleName: containsKey
p12555
Vinsert
p12556
I42
VSimpleName: getMappings
p12557
tp12558
I1
s(g8369
I42
g8370
Vinsert
p12559
I43
VSimpleType: PersistentListIdentityMap
p12560
tp12561
I2
s(g8643
I42
g8644
Vinsert
p12562
I42
VSimpleName: ATHROW
p12563
tp12564
I1
s(g4399
I42
g4400
Vinsert
p12565
I42
VSimpleName: cf
p12566
tp12567
I3
s(g3100
I42
g3101
Vinsert
p12568
I83
VModifier: public
p12569
tp12570
F0.25
s(g4663
I42
g4664
Vinsert
p12571
I43
VSimpleType: Method
p12572
tp12573
I1
s(g2743
I42
g2744
Vinsert
p12574
I34
VNumberLiteral: 0
p12575
tp12576
F1.25
s(g750
I42
g751
Vinsert
p12577
I42
VSimpleName: args
p12578
tp12579
F0.25
s(g704
I42
g705
Vinsert
p12580
I43
VSimpleType: Exception
p12581
tp12582
I1
s(g6477
I42
g6478
Vinsert
p12583
I9
VBooleanLiteral: false
p12584
tp12585
I1
s(g9617
I42
g9618
Vinsert
p12586
I42
VSimpleName: findOrCreate
p12587
tp12588
F0.25
s(g4059
I42
g4060
Vinsert
p12589
I42
VSimpleName: Array
p12590
tp12591
F1.25
s(g1177
I42
g1178
Vinsert
p12592
I45
VStringLiteral: "count = "
p12593
tp12594
I1
s(g7731
I42
g7732
Vinsert
p12595
I42
VSimpleName: ret
p12596
tp12597
I11
s(g2159
I42
g2160
Vinsert
p12598
I41
VReturnStatement
p12599
tp12600
I1
s(g827
I42
g828
Vinsert
p12601
I42
VSimpleName: ISeq
p12602
tp12603
F0.5
s(g4362
I42
g4363
Vinsert
p12604
I42
VSimpleName: or
p12605
tp12606
I1
s(g252
I42
g253
Vinsert
p12607
I43
VSimpleType: ThreadLocalData
p12608
tp12609
F0.25
s(g189
I42
g190
Vinsert
p12610
I57
VTypeLiteral
p12611
tp12612
I2
s(g3180
I42
g3181
Vinsert
p12613
I42
VSimpleName: ver
p12614
tp12615
I1
s(g1104
I42
g1105
Vinsert
p12616
I43
VSimpleType: LineNumberReader
p12617
tp12618
I1
s(g5428
I42
g5429
Vinsert
p12619
I42
VSimpleName: sym
p12620
tp12621
I1
s(g3237
I42
g3238
Vinsert
p12622
I2
VArrayAccess
p12623
tp12624
I1
s(g1936
I42
g1937
Vinsert
p12625
I59
VVariableDeclarationFragment
p12626
tp12627
I1
s(g6059
I42
g6060
Vinsert
p12628
I39
VPrimitiveType: int
p12629
tp12630
F0.75
s(g2649
I42
g2650
Vinsert
p12631
I42
VSimpleName: addAnnotation
p12632
tp12633
F0.25
s(g1437
I42
g1438
Vinsert
p12634
I42
VSimpleName: val
p12635
tp12636
F0.25
s(g4232
I42
g4233
Vinsert
p12637
I42
VSimpleName: val
p12638
tp12639
F1.25
s(g6859
I42
g6860
Vinsert
p12640
I42
VSimpleName: Util
p12641
tp12642
I3
s(g1874
I42
g1875
Vinsert
p12643
I54
VTryStatement
p12644
tp12645
F2.25
s(g3487
I42
g3488
Vinsert
p12646
I43
VSimpleType: IllegalStateException
p12647
tp12648
I1
s(g12455
I42
g12456
Vinsert
p12649
I43
VSimpleType: BigDecimal
p12650
tp12651
F0.25
s(g1162
I42
g1163
Vinsert
p12652
I32
VMethodInvocation
p12653
tp12654
F8.5
s(g36
I42
g37
Vinsert
p12655
I9
VBooleanLiteral: false
p12656
tp12657
F0.25
s(g2239
I42
g2240
Vinsert
p12658
I42
VSimpleName: sym
p12659
tp12660
I2
s(g1967
I42
g1968
Vinsert
p12661
I42
VSimpleName: o
p12662
tp12663
F0.25
s(g770
I42
g771
Vinsert
p12664
I32
VMethodInvocation
p12665
tp12666
I14
s(g76
I42
g77
Vinsert
p12667
I42
VSimpleName: nodes
p12668
tp12669
I1
s(g2951
I42
g2952
Vinsert
p12670
I42
VSimpleName: e
p12671
tp12672
I3
s(g1253
I42
g1254
Vinsert
p12673
I21
VExpressionStatement
p12674
tp12675
F10.25
s(g1732
I42
g1733
Vinsert
p12676
I42
VSimpleName: dvals
p12677
tp12678
F0.25
s(g1027
I42
g1028
Vinsert
p12679
I51
VSynchronizedStatement
p12680
tp12681
I1
s(g290
I42
g291
Vinsert
p12682
I7
VAssignment: =
p12683
tp12684
I1
s(g4452
I42
g4453
Vinsert
p12685
I45
VStringLiteral: "__init"
p12686
tp12687
I1
s(g4248
I42
g4249
Vinsert
p12688
I43
VSimpleType: Exception
p12689
tp12690
F0.25
s(g2469
I42
g2470
Vinsert
p12691
I43
VSimpleType: IPersistentList
p12692
tp12693
I1
s(g6002
I42
g6003
Vinsert
p12694
I43
VSimpleType: PersistentTreeMap
p12695
tp12696
I1
s(g4793
I42
g4794
Vinsert
p12697
I40
VQualifiedName: C.EXPRESSION
p12698
tp12699
I1
s(g4161
I42
g4162
Vinsert
p12700
I25
VIfStatement
p12701
tp12702
I1
s(g1861
I42
g1862
Vinsert
p12703
I59
VVariableDeclarationFragment
p12704
tp12705
I2
s(g6513
I42
g6514
Vinsert
p12706
I42
VSimpleName: fn
p12707
tp12708
I1
s(g3416
I42
g3417
Vinsert
p12709
I45
VStringLiteral: "*use-context-classloader*"
p12710
tp12711
F0.25
s(g2719
I42
g2720
Vinsert
p12712
I27
VInfixExpression: ||
p12713
tp12714
I1
s(g4046
I42
g4047
Vinsert
p12715
I42
VSimpleName: suffix
p12716
tp12717
I1
s(g3421
I42
g3422
Vinsert
p12718
I9
VBooleanLiteral: false
p12719
tp12720
I1
s(g4620
I42
g4621
Vinsert
p12721
I14
VClassInstanceCreation
p12722
tp12723
I1
s(g1339
I42
g1340
Vinsert
p12724
I43
VSimpleType: Exception
p12725
tp12726
F0.5
s(g2748
I42
g2749
Vinsert
p12727
I42
VSimpleName: elides
p12728
tp12729
I1
s(g1286
I42
g1287
Vinsert
p12730
I42
VSimpleName: ns
p12731
tp12732
F0.25
s(g686
I42
g687
Vinsert
p12733
I42
VSimpleName: n
p12734
tp12735
I1
s(g61
I42
g62
Vinsert
p12736
I42
VSimpleName: toBigInteger
p12737
tp12738
F0.25
s(g1972
I42
g1973
Vinsert
p12739
I32
VMethodInvocation
p12740
tp12741
I2
s(g12522
I42
g12523
Vinsert
p12742
I42
VSimpleName: v
p12743
tp12744
I2
s(g4295
I42
g4296
Vinsert
p12745
I42
VSimpleName: a
p12746
tp12747
F0.25
s(g567
I42
g568
Vinsert
p12748
I42
VSimpleName: ThreadLocalData
p12749
tp12750
I3
s(g4303
I42
g4304
Vinsert
p12751
I8
VBlock
p12752
tp12753
I1
s(g2520
I42
g2521
Vinsert
p12754
I8
VBlock
p12755
tp12756
I2
s(g381
I42
g382
Vinsert
p12757
I40
VQualifiedName: tag.ns
p12758
tp12759
I1
s(g1182
I42
g1183
Vinsert
p12760
I36
VParenthesizedExpression
p12761
tp12762
I1
s(g2922
I42
g2923
Vinsert
p12763
I42
VSimpleName: source
p12764
tp12765
F0.75
s(g1326
I42
g1327
Vinsert
p12766
I43
VSimpleType: Class
p12767
tp12768
F0.25
s(g2520
I42
g2521
Vinsert
p12769
I43
VSimpleType: IMapEntry
p12770
tp12771
I4
s(g1253
I42
g1254
Vinsert
p12772
I42
VSimpleName: _chunk
p12773
tp12774
I1
s(g1485
I42
g1486
Vinsert
p12775
I42
VSimpleName: recurMismatches
p12776
tp12777
F0.25
s(g9965
I42
g9966
Vinsert
p12778
I42
VSimpleName: isNaN
p12779
tp12780
F1.25
s(g2130
I42
g2131
Vinsert
p12781
I38
VPrefixExpression: ++
p12782
tp12783
I1
s(g144
I42
g145
Vinsert
p12784
I43
VSimpleType: Object
p12785
tp12786
F0.5
s(g1339
I42
g1340
Vinsert
p12787
I8
VBlock
p12788
tp12789
I4
s(g804
I42
g805
Vinsert
p12790
I27
VInfixExpression: !=
p12791
tp12792
I1
s(g3689
I42
g3690
Vinsert
p12793
I42
VSimpleName: intern
p12794
tp12795
F0.5
s(Vinsert
p12796
I42
VSimpleName: list
p12797
Vinsert
p12798
I42
VSimpleName: arg4
p12799
tp12800
F2.5
s(g937
I42
g938
Vinsert
p12801
I42
VSimpleName: Class
p12802
tp12803
F5.25
s(g3767
I42
g3768
Vinsert
p12804
I42
VSimpleName: length
p12805
tp12806
I1
s(g3416
I42
g3417
Vinsert
p12807
I42
VSimpleName: USE_CONTEXT_CLASSLOADER
p12808
tp12809
I1
s(g1856
I42
g1857
Vinsert
p12810
I9
VBooleanLiteral: false
p12811
tp12812
F0.25
s(g1162
I42
g1163
Vinsert
p12813
I62
VInstanceofExpression
p12814
tp12815
I1
s(g1349
I42
g1350
Vinsert
p12816
I42
VSimpleName: existingk
p12817
tp12818
I1
s(g819
I42
g820
Vinsert
p12819
I59
VVariableDeclarationFragment
p12820
tp12821
F0.25
s(g9264
I42
g9265
Vinsert
p12822
I42
VSimpleName: Reflector
p12823
tp12824
F0.25
s(g8130
I42
g8131
Vinsert
p12825
I39
VPrimitiveType: boolean
p12826
tp12827
F0.5
s(g5748
I42
g5749
Vinsert
p12828
I43
VSimpleType: C
p12829
tp12830
F0.5
s(g6837
I42
g6838
Vinsert
p12831
I42
VSimpleName: vector
p12832
tp12833
F0.5
s(g5050
I42
g5051
Vinsert
p12834
I42
VSimpleName: String
p12835
tp12836
F0.25
s(Vinsert
p12837
I42
VSimpleName: intern
p12838
Vinsert
p12839
I42
VSimpleName: nsname
p12840
tp12841
F0.25
s(g588
I42
g589
Vinsert
p12842
I42
VSimpleName: length
p12843
tp12844
F1.25
s(g3421
I42
g3422
Vinsert
p12845
I42
VSimpleName: onceOnly
p12846
tp12847
I1
s(g1032
I42
g1033
Vinsert
p12848
I44
VSingleVariableDeclaration
p12849
tp12850
F0.5
s(g1702
I42
g1703
Vinsert
p12851
I42
VSimpleName: Class
p12852
tp12853
I1
s(g2060
I42
g2061
Vinsert
p12854
I32
VMethodInvocation
p12855
tp12856
I2
s(g3266
I42
g3267
Vinsert
p12857
I43
VSimpleType: Exception
p12858
tp12859
I1
s(g3438
I42
g3439
Vinsert
p12860
I42
VSimpleName: ninstances
p12861
tp12862
I1
s(g2748
I42
g2749
Vinsert
p12863
I43
VSimpleType: Collection
p12864
tp12865
I2
s(g3212
I42
g3213
Vinsert
p12866
I25
VIfStatement
p12867
tp12868
I10
s(g9861
I42
g9862
Vinsert
p12869
I34
VNumberLiteral: 0
p12870
tp12871
I4
s(g3654
I42
g3655
Vinsert
p12872
I42
VSimpleName: c
p12873
tp12874
F0.25
s(g1321
I42
g1322
Vinsert
p12875
I33
VNullLiteral
p12876
tp12877
I1
s(g2520
I42
g2521
Vinsert
p12878
I60
VVariableDeclarationStatement
p12879
tp12880
I2
s(g989
I42
g990
Vinsert
p12881
I42
VSimpleName: newLabel
p12882
tp12883
I1
s(g2724
I42
g2725
Vinsert
p12884
I37
VPostfixExpression: ++
p12885
tp12886
I1
s(g4190
I42
g4191
Vinsert
p12887
I42
VSimpleName: getMapping
p12888
tp12889
I1
s(g2940
I42
g2941
Vinsert
p12890
I42
VSimpleName: String
p12891
tp12892
F0.25
s(g1147
I42
g1148
Vinsert
p12893
I42
VSimpleName: Override
p12894
tp12895
F0.25
s(g6884
I42
g6885
Vinsert
p12896
I34
VNumberLiteral: 1
p12897
tp12898
I1
s(g1248
I42
g1249
Vinsert
p12899
I32
VMethodInvocation
p12900
tp12901
I2
s(g1861
I42
g1862
Vinsert
p12902
I42
VSimpleName: BigInteger
p12903
tp12904
I1
s(g1349
I42
g1350
Vinsert
p12905
I42
VSimpleName: existingRef
p12906
tp12907
I1
s(g2111
I42
g2112
Vinsert
p12908
I40
VQualifiedName: clojure.lang.Namespace
p12909
tp12910
I1
s(g2896
I42
g2897
Vinsert
p12911
I45
VStringLiteral: "\u005c\u005cf"
p12912
tp12913
I1
s(g3918
I42
g3919
Vinsert
p12914
I43
VSimpleType: IOException
p12915
tp12916
F0.25
s(g1606
I42
g1607
Vinsert
p12917
I42
VSimpleName: setInstanceField
p12918
tp12919
I1
s(Vinsert
p12920
I42
VSimpleName: nth
p12921
Vinsert
p12922
I37
VPostfixExpression: ++
p12923
tp12924
I3
s(g6946
I42
g6947
Vinsert
p12925
I21
VExpressionStatement
p12926
tp12927
I1
s(g7113
I42
g7114
Vinsert
p12928
I42
VSimpleName: newline
p12929
tp12930
I1
s(g1822
I42
g1823
Vinsert
p12931
I42
VSimpleName: check
p12932
tp12933
I2
s(g929
I42
g930
Vinsert
p12934
I43
VSimpleType: Object
p12935
tp12936
F2.25
s(g280
I42
g281
Vinsert
p12937
I43
VSimpleType: Indexed
p12938
tp12939
F0.25
s(g2615
I42
g2616
Vinsert
p12940
I43
VSimpleType: MathContext
p12941
tp12942
I1
s(g8545
I42
g8546
Vinsert
p12943
I40
VQualifiedName: tref.tvals
p12944
tp12945
I1
s(g799
I42
g800
Vinsert
p12946
I42
VSimpleName: combine
p12947
tp12948
I1
s(g159
I42
g160
Vinsert
p12949
I42
VSimpleName: Cons
p12950
tp12951
F0.25
s(g666
I42
g667
Vinsert
p12952
I42
VSimpleName: a
p12953
tp12954
I4
s(g1712
I42
g1713
Vinsert
p12955
I40
VQualifiedName: RT.READEVAL
p12956
tp12957
I1
s(g1321
I42
g1322
Vinsert
p12958
I32
VMethodInvocation
p12959
tp12960
I1
s(g353
I42
g354
Vinsert
p12961
I42
VSimpleName: Throwable
p12962
tp12963
I1
s(g3212
I42
g3213
Vinsert
p12964
I27
VInfixExpression: ==
p12965
tp12966
I4
s(g4527
I42
g4528
Vinsert
p12967
I31
VMethodDeclaration
p12968
tp12969
F0.25
s(g999
I42
g1000
Vinsert
p12970
I42
VSimpleName: visitField
p12971
tp12972
I1
s(g2392
I42
g2393
Vinsert
p12973
I42
VSimpleName: swap
p12974
tp12975
I1
s(g3161
I42
g3162
Vinsert
p12976
I42
VSimpleName: k1
p12977
tp12978
I1
s(g2315
I42
g2316
Vinsert
p12979
I42
VSimpleName: Object
p12980
tp12981
F0.25
s(g4508
I42
g4509
Vinsert
p12982
I42
VSimpleName: errorMsg
p12983
tp12984
I1
s(g1112
I42
g1113
Vinsert
p12985
I42
VSimpleName: nextSeq
p12986
tp12987
I1
s(g4463
I42
g4464
Vinsert
p12988
I42
VSimpleName: loadArgs
p12989
tp12990
I1
s(g134
I42
g135
Vinsert
p12991
I42
VSimpleName: mv
p12992
tp12993
I2
s(g2087
I42
g2088
Vinsert
p12994
I43
VSimpleType: Var
p12995
tp12996
F0.25
s(g5428
I42
g5429
Vinsert
p12997
I21
VExpressionStatement
p12998
tp12999
I1
s(g4084
I42
g4085
Vinsert
p13000
I27
VInfixExpression: <=
p13001
tp13002
I2
s(g4232
I42
g4233
Vinsert
p13003
I43
VSimpleType: Number
p13004
tp13005
F0.25
s(g7582
I42
g7583
Vinsert
p13006
I42
VSimpleName: Numbers
p13007
tp13008
I1
s(g3880
I42
g3881
Vinsert
p13009
I43
VSimpleType: Number
p13010
tp13011
I11
s(g4663
I42
g4664
Vinsert
p13012
I42
VSimpleName: Method
p13013
tp13014
I1
s(g8138
I42
g8139
Vinsert
p13015
I21
VExpressionStatement
p13016
tp13017
I2
s(g209
I42
g210
Vinsert
p13018
I33
VNullLiteral
p13019
tp13020
I3
s(g6781
I42
g6782
Vinsert
p13021
I27
VInfixExpression: !=
p13022
tp13023
I2
s(g4041
I42
g4042
Vinsert
p13024
I42
VSimpleName: subroutine
p13025
tp13026
I2
s(g1662
I42
g1663
Vinsert
p13027
I42
VSimpleName: MetaExpr
p13028
tp13029
I2
s(g6550
I42
g6551
Vinsert
p13030
I27
VInfixExpression: +
p13031
tp13032
I9
s(g3161
I42
g3162
Vinsert
p13033
I39
VPrimitiveType: int
p13034
tp13035
I1
s(g5802
I42
g5803
Vinsert
p13036
I60
VVariableDeclarationStatement
p13037
tp13038
I1
s(g12420
I42
g12421
Vinsert
p13039
I42
VSimpleName: Frame
p13040
tp13041
I3
s(g396
I42
g397
Vinsert
p13042
I42
VSimpleName: ret
p13043
tp13044
I1
s(g2591
I42
g2592
Vinsert
p13045
I45
VStringLiteral: "UnsupportedOperationException"
p13046
tp13047
I1
s(g3156
I42
g3157
Vinsert
p13048
I21
VExpressionStatement
p13049
tp13050
I1
s(g2631
I42
g2632
Vinsert
p13051
I59
VVariableDeclarationFragment
p13052
tp13053
I4
s(g1147
I42
g1148
Vinsert
p13054
I41
VReturnStatement
p13055
tp13056
F2.25
s(g8516
I42
g8517
Vinsert
p13057
I42
VSimpleName: TVal
p13058
tp13059
F0.25
s(g6455
I42
g6456
Vinsert
p13060
I42
VSimpleName: dvals
p13061
tp13062
I4
s(g1157
I42
g1158
Vinsert
p13063
I43
VSimpleType: Symbol
p13064
tp13065
I1
s(g8369
I42
g8370
Vinsert
p13066
I42
VSimpleName: length
p13067
tp13068
F2.25
s(g4259
I42
g4260
Vinsert
p13069
I43
VSimpleType: LocalBindingExpr
p13070
tp13071
I1
s(g5214
I42
g5215
Vinsert
p13072
I8
VBlock
p13073
tp13074
I2
s(g1510
I42
g1511
Vinsert
p13075
I42
VSimpleName: iterator
p13076
tp13077
I2
s(g368
I42
g369
Vinsert
p13078
I21
VExpressionStatement
p13079
tp13080
I3
s(g7010
I42
g7011
Vinsert
p13081
I42
VSimpleName: Label
p13082
tp13083
I9
s(g144
I42
g145
Vinsert
p13084
I42
VSimpleName: Exception
p13085
tp13086
F0.25
s(g4394
I42
g4395
Vinsert
p13087
I8
VBlock
p13088
tp13089
I5
s(g2244
I42
g2245
Vinsert
p13090
I43
VSimpleType: PersistentTree
p13091
tp13092
I1
s(g1962
I42
g1963
Vinsert
p13093
I42
VSimpleName: ks
p13094
tp13095
I1
s(g3522
I42
g3523
Vinsert
p13096
I36
VParenthesizedExpression
p13097
tp13098
I2
s(g10100
I42
g10101
Vinsert
p13099
I42
VSimpleName: className
p13100
tp13101
F0.25
s(g2169
I42
g2170
Vinsert
p13102
I25
VIfStatement
p13103
tp13104
I2
s(g199
I42
g200
Vinsert
p13105
I42
VSimpleName: k
p13106
tp13107
I1
s(g5832
I42
g5833
Vinsert
p13108
I43
VSimpleType: Label
p13109
tp13110
F0.25
s(g343
I42
g344
Vinsert
p13111
I32
VMethodInvocation
p13112
tp13113
I3
s(g2122
I42
g2123
Vinsert
p13114
I43
VSimpleType: Namespace
p13115
tp13116
F1.5
s(g4436
I42
g4437
Vinsert
p13117
I83
VModifier: public
p13118
tp13119
F0.25
s(g2443
I42
g2444
Vinsert
p13120
I36
VParenthesizedExpression
p13121
tp13122
I1
s(g2891
I42
g2892
Vinsert
p13123
I27
VInfixExpression: >
p13124
tp13125
I1
s(g1654
I42
g1655
Vinsert
p13126
I40
VQualifiedName: rx.numerator
p13127
tp13128
I1
s(g999
I42
g1000
Vinsert
p13129
I42
VSimpleName: lb
p13130
tp13131
I1
s(g4394
I42
g4395
Vinsert
p13132
I42
VSimpleName: target
p13133
tp13134
I2
s(g2060
I42
g2061
Vinsert
p13135
I36
VParenthesizedExpression
p13136
tp13137
I1
s(g9866
I42
g9867
Vinsert
p13138
I42
VSimpleName: UNCHECKED_MATH_PROP
p13139
tp13140
I1
s(g2719
I42
g2720
Vinsert
p13141
I42
VSimpleName: primc
p13142
tp13143
I3
s(g2456
I42
g2457
Vinsert
p13144
I32
VMethodInvocation
p13145
tp13146
I1
s(g2226
I42
g2227
Vinsert
p13147
I42
VSimpleName: del
p13148
tp13149
I1
s(g6409
I42
g6410
Vinsert
p13150
I42
VSimpleName: storeArg
p13151
tp13152
I1
s(g3229
I42
g3230
Vinsert
p13153
I42
VSimpleName: IPersistentVector
p13154
tp13155
F0.25
s(g3527
I42
g3528
Vinsert
p13156
I42
VSimpleName: notFound
p13157
tp13158
F0.25
s(g2729
I42
g2730
Vinsert
p13159
I42
VSimpleName: coll
p13160
tp13161
I2
s(g4237
I42
g4238
Vinsert
p13162
I27
VInfixExpression: -
p13163
tp13164
F1.25
s(g832
I42
g833
Vinsert
p13165
I40
VQualifiedName: Boolean.FALSE
p13166
tp13167
F0.25
s(g2814
I42
g2815
Vinsert
p13168
I42
VSimpleName: Object
p13169
tp13170
I1
s(g313
I42
g314
Vinsert
p13171
I83
VModifier: public
p13172
tp13173
F0.25
s(g4248
I42
g4249
Vinsert
p13174
I42
VSimpleName: c
p13175
tp13176
F1.25
s(g1905
I42
g1906
Vinsert
p13177
I32
VMethodInvocation
p13178
tp13179
I3
s(g6491
I42
g6492
Vinsert
p13180
I43
VSimpleType: Map.Entry
p13181
tp13182
I2
s(g1167
I42
g1168
Vinsert
p13183
I59
VVariableDeclarationFragment
p13184
tp13185
I1
s(g9877
I42
g9878
Vinsert
p13186
I42
VSimpleName: kval
p13187
tp13188
I1
s(g4021
I42
g4022
Vinsert
p13189
I41
VReturnStatement
p13190
tp13191
I2
s(g2803
I42
g2804
Vinsert
p13192
I33
VNullLiteral
p13193
tp13194
I1
s(g11679
I42
g11680
Vinsert
p13195
I40
VQualifiedName: C.EXPRESSION
p13196
tp13197
I1
s(g81
I42
g82
Vinsert
p13198
I34
VNumberLiteral: 0
p13199
tp13200
I1
s(g164
I42
g165
Vinsert
p13201
I11
VCastExpression
p13202
tp13203
F2.25
s(g4447
I42
g4448
Vinsert
p13204
I8
VBlock
p13205
tp13206
I3
s(g2578
I42
g2579
Vinsert
p13207
I40
VQualifiedName: Opcodes.GETSTATIC
p13208
tp13209
I1
s(g1268
I42
g1269
Vinsert
p13210
I21
VExpressionStatement
p13211
tp13212
I1
s(g3421
I42
g3422
Vinsert
p13213
I39
VPrimitiveType: boolean
p13214
tp13215
I1
s(g6059
I42
g6060
Vinsert
p13216
I43
VSimpleType: Object
p13217
tp13218
F1.0
s(g6823
I42
g6824
Vinsert
p13219
I45
VStringLiteral: "in-ns"
p13220
tp13221
I1
s(g1112
I42
g1113
Vinsert
p13222
I21
VExpressionStatement
p13223
tp13224
I1
s(g2657
I42
g2658
Vinsert
p13225
I27
VInfixExpression: ==
p13226
tp13227
I3
s(g179
I42
g180
Vinsert
p13228
I42
VSimpleName: e
p13229
tp13230
I7
s(g6715
I42
g6716
Vinsert
p13231
I42
VSimpleName: Iterate
p13232
tp13233
I1
s(g1606
I42
g1607
Vinsert
p13234
I42
VSimpleName: val
p13235
tp13236
F1.25
s(g1817
I42
g1818
Vinsert
p13237
I31
VMethodDeclaration
p13238
tp13239
F0.25
s(g1099
I42
g1100
Vinsert
p13240
I44
VSingleVariableDeclaration
p13241
tp13242
F0.25
s(g4248
I42
g4249
Vinsert
p13243
I42
VSimpleName: Exception
p13244
tp13245
F0.25
s(g3022
I42
g3023
Vinsert
p13246
I59
VVariableDeclarationFragment
p13247
tp13248
I1
s(g184
I42
g185
Vinsert
p13249
I36
VParenthesizedExpression
p13250
tp13251
I9
s(g4788
I42
g4789
Vinsert
p13252
I42
VSimpleName: name
p13253
tp13254
F5.5
s(g1596
I42
g1597
Vinsert
p13255
I32
VMethodInvocation
p13256
tp13257
F5.5
s(g2169
I42
g2170
Vinsert
p13258
I42
VSimpleName: l
p13259
tp13260
I1
s(g960
I42
g961
Vinsert
p13261
I43
VSimpleType: GeneratorAdapter
p13262
tp13263
F0.25
s(Vinsert
p13264
I42
VSimpleName: runtimeException
p13265
Vinsert
p13266
I42
VSimpleName: e
p13267
tp13268
F2.75
s(g6491
I42
g6492
Vinsert
p13269
I42
VSimpleName: methodTable
p13270
tp13271
I1
s(g3614
I42
g3615
Vinsert
p13272
I42
VSimpleName: IFn
p13273
tp13274
F0.25
s(g4793
I42
g4794
Vinsert
p13275
I42
VSimpleName: intern
p13276
tp13277
I1
s(g1354
I42
g1355
Vinsert
p13278
I40
VQualifiedName: ref.tvals.val
p13279
tp13280
I1
s(g1055
I42
g1056
Vinsert
p13281
I33
VNullLiteral
p13282
tp13283
I1
s(g960
I42
g961
Vinsert
p13284
I43
VSimpleType: C
p13285
tp13286
F0.25
s(g5556
I42
g5557
Vinsert
p13287
I43
VSimpleType: IArray
p13288
tp13289
I2
s(g2332
I42
g2333
Vinsert
p13290
I42
VSimpleName: obj
p13291
tp13292
I1
s(g237
I42
g238
Vinsert
p13293
I42
VSimpleName: s
p13294
tp13295
I1
s(g809
I42
g810
Vinsert
p13296
I7
VAssignment: =
p13297
tp13298
I2
s(g3962
I42
g3963
Vinsert
p13299
I42
VSimpleName: TRef
p13300
tp13301
F0.25
s(g4123
I42
g4124
Vinsert
p13302
I85
VDimension
p13303
tp13304
F0.75
s(g3934
I42
g3935
Vinsert
p13305
I61
VWhileStatement
p13306
tp13307
I1
s(g799
I42
g800
Vinsert
p13308
I43
VSimpleType: Number
p13309
tp13310
F0.25
s(g179
I42
g180
Vinsert
p13311
I60
VVariableDeclarationStatement
p13312
tp13313
I2
s(g547
I42
g548
Vinsert
p13314
I21
VExpressionStatement
p13315
tp13316
I4
s(g1474
I42
g1475
Vinsert
p13317
I43
VSimpleType: Symbol
p13318
tp13319
I1
s(g11151
I42
g11152
Vinsert
p13320
I44
VSingleVariableDeclaration
p13321
tp13322
F3.0
s(g8268
I42
g8269
Vinsert
p13323
I39
VPrimitiveType: double
p13324
tp13325
F0.5
s(g5436
I42
g5437
Vinsert
p13326
I42
VSimpleName: isBound
p13327
tp13328
I1
s(g6455
I42
g6456
Vinsert
p13329
I39
VPrimitiveType: void
p13330
tp13331
F0.25
s(g1866
I42
g1867
Vinsert
p13332
I22
VFieldAccess
p13333
tp13334
I2
s(g618
I42
g619
Vinsert
p13335
I25
VIfStatement
p13336
tp13337
F5.25
s(g3300
I42
g3301
Vinsert
p13338
I60
VVariableDeclarationStatement
p13339
tp13340
I2
s(g4765
I42
g4766
Vinsert
p13341
I42
VSimpleName: expr2
p13342
tp13343
I1
s(g2883
I42
g2884
Vinsert
p13344
I43
VSimpleType: Exception
p13345
tp13346
F0.25
s(g8576
I42
g8577
Vinsert
p13347
I42
VSimpleName: exec
p13348
tp13349
I2
s(g6921
I42
g6922
Vinsert
p13350
I42
VSimpleName: fseq
p13351
tp13352
I2
s(g6759
I42
g6760
Vinsert
p13353
I42
VSimpleName: oldp
p13354
tp13355
I2
s(g2405
I42
g2406
Vinsert
p13356
I42
VSimpleName: k
p13357
tp13358
F2.25
s(g2205
I42
g2206
Vinsert
p13359
I42
VSimpleName: C
p13360
tp13361
F0.25
s(g4718
I42
g4719
Vinsert
p13362
I42
VSimpleName: Exception
p13363
tp13364
F0.75
s(g2983
I42
g2984
Vinsert
p13365
I42
VSimpleName: packages
p13366
tp13367
I1
s(g2231
I42
g2232
Vinsert
p13368
I42
VSimpleName: matches
p13369
tp13370
I1
s(g5695
I42
g5696
Vinsert
p13371
I42
VSimpleName: IllegalArgumentException
p13372
tp13373
I1
s(g827
I42
g828
Vinsert
p13374
I42
VSimpleName: args
p13375
tp13376
F0.5
s(g11
I42
g12
Vinsert
p13377
I32
VMethodInvocation
p13378
tp13379
I1
s(g686
I42
g687
Vinsert
p13380
I5
VArrayType: Object[]
p13381
tp13382
I1
s(g1009
I42
g1010
Vinsert
p13383
I33
VNullLiteral
p13384
tp13385
F1.75
s(Vinsert
p13386
I42
VSimpleName: count
p13387
Vinsert
p13388
I42
VSimpleName: PersistentListMap
p13389
tp13390
F0.25
s(g343
I42
g344
Vinsert
p13391
I42
VSimpleName: name
p13392
tp13393
I1
s(g8576
I42
g8577
Vinsert
p13394
I42
VSimpleName: executor
p13395
tp13396
I1
s(g2205
I42
g2206
Vinsert
p13397
I43
VSimpleType: ISeq
p13398
tp13399
F0.25
s(g8268
I42
g8269
Vinsert
p13400
I27
VInfixExpression: /
p13401
tp13402
F0.25
s(g583
I42
g584
Vinsert
p13403
I34
VNumberLiteral: 1
p13404
tp13405
I1
s(g3455
I42
g3456
Vinsert
p13406
I8
VBlock
p13407
tp13408
I1
s(g5072
I42
g5073
Vinsert
p13409
I42
VSimpleName: throwCauseOrElseException
p13410
tp13411
F0.25
s(g3841
I42
g3842
Vinsert
p13412
I25
VIfStatement
p13413
tp13414
I1
s(Vinsert
p13415
I42
VSimpleName: keys
p13416
Vinsert
p13417
I42
VSimpleName: AFn
p13418
tp13419
I1
s(g3717
I42
g3718
Vinsert
p13420
I42
VSimpleName: init
p13421
tp13422
F6.25
s(g1202
I42
g1203
Vinsert
p13423
I42
VSimpleName: init
p13424
tp13425
I1
s(g456
I42
g457
Vinsert
p13426
I43
VSimpleType: Matcher
p13427
tp13428
I1
s(g5788
I42
g5789
Vinsert
p13429
I42
VSimpleName: in
p13430
tp13431
I2
s(g598
I42
g599
Vinsert
p13432
I11
VCastExpression
p13433
tp13434
I1
s(g4891
I42
g4892
Vinsert
p13435
I42
VSimpleName: Node
p13436
tp13437
F2.0
s(g3151
I42
g3152
Vinsert
p13438
I42
VSimpleName: IParser
p13439
tp13440
F0.25
s(g2257
I42
g2258
Vinsert
p13441
I60
VVariableDeclarationStatement
p13442
tp13443
I1
s(g2891
I42
g2892
Vinsert
p13444
I40
VQualifiedName: Integer.MAX_VALUE
p13445
tp13446
I2
s(g194
I42
g195
Vinsert
p13447
I32
VMethodInvocation
p13448
tp13449
I6
s(g4663
I42
g4664
Vinsert
p13450
I76
VWildcardType: ?
p13451
tp13452
F0.25
s(g5264
I42
g5265
Vinsert
p13453
I21
VExpressionStatement
p13454
tp13455
I1
s(g5960
I42
g5961
Vinsert
p13456
I42
VSimpleName: ref
p13457
tp13458
I1
s(g924
I42
g925
Vinsert
p13459
I31
VMethodDeclaration
p13460
tp13461
F1.25
s(g4404
I42
g4405
Vinsert
p13462
I33
VNullLiteral
p13463
tp13464
F2.25
s(Vinsert
p13465
I42
VSimpleName: nanoTime
p13466
Vinsert
p13467
I42
VSimpleName: nextHistory
p13468
tp13469
F0.25
s(g5130
I42
g5131
Vinsert
p13470
I8
VBlock
p13471
tp13472
I1
s(g6837
I42
g6838
Vinsert
p13473
I42
VSimpleName: v3
p13474
tp13475
F0.25
s(g3033
I42
g3034
Vinsert
p13476
I42
VSimpleName: name
p13477
tp13478
I3
s(g2798
I42
g2799
Vinsert
p13479
I39
VPrimitiveType: int
p13480
tp13481
I3
s(g2257
I42
g2258
Vinsert
p13482
I42
VSimpleName: looproot
p13483
tp13484
I1
s(g4620
I42
g4621
Vinsert
p13485
I34
VNumberLiteral: 0
p13486
tp13487
I1
s(g6450
I42
g6451
Vinsert
p13488
I21
VExpressionStatement
p13489
tp13490
I2
s(g1147
I42
g1148
Vinsert
p13491
I42
VSimpleName: ISeq
p13492
tp13493
F1.25
s(g7680
I42
g7681
Vinsert
p13494
I27
VInfixExpression: >
p13495
tp13496
I1
s(g3175
I42
g3176
Vinsert
p13497
I32
VMethodInvocation
p13498
tp13499
I1
s(g4046
I42
g4047
Vinsert
p13500
I32
VMethodInvocation
p13501
tp13502
I6
s(g613
I42
g614
Vinsert
p13503
I42
VSimpleName: set
p13504
tp13505
I1
s(g1957
I42
g1958
Vinsert
p13506
I83
VModifier: public
p13507
tp13508
F0.25
s(g5228
I42
g5229
Vinsert
p13509
I40
VQualifiedName: ret.objtype
p13510
tp13511
I1
s(g184
I42
g185
Vinsert
p13512
I43
VSimpleType: List
p13513
tp13514
I3
s(g16
I42
g17
Vinsert
p13515
I42
VSimpleName: NO_RECUR
p13516
tp13517
I1
s(g9600
I42
g9601
Vinsert
p13518
I42
VSimpleName: replaceVal
p13519
tp13520
I1
s(g1286
I42
g1287
Vinsert
p13521
I22
VFieldAccess
p13522
tp13523
F1.5
s(g1391
I42
g1392
Vinsert
p13524
I42
VSimpleName: Object
p13525
tp13526
I4
s(g994
I42
g995
Vinsert
p13527
I31
VMethodDeclaration
p13528
tp13529
F0.25
s(g6759
I42
g6760
Vinsert
p13530
I42
VSimpleName: PersistentArrayList
p13531
tp13532
I1
s(g1192
I42
g1193
Vinsert
p13533
I42
VSimpleName: x
p13534
tp13535
I2
s(g1515
I42
g1516
Vinsert
p13536
I42
VSimpleName: FnExpr
p13537
tp13538
F0.25
s(g5748
I42
g5749
Vinsert
p13539
I42
VSimpleName: C
p13540
tp13541
F0.5
s(g4362
I42
g4363
Vinsert
p13542
I42
VSimpleName: from
p13543
tp13544
I1
s(g8369
I42
g8370
Vinsert
p13545
I42
VSimpleName: b
p13546
tp13547
I2
s(g4726
I42
g4727
Vinsert
p13548
I42
VSimpleName: Arrays
p13549
tp13550
I1
s(g4497
I42
g4498
Vinsert
p13551
I14
VClassInstanceCreation
p13552
tp13553
I3
s(g2422
I42
g2423
Vinsert
p13554
I42
VSimpleName: locals
p13555
tp13556
I1
s(g3438
I42
g3439
Vinsert
p13557
I32
VMethodInvocation
p13558
tp13559
F1.25
s(g3819
I42
g3820
Vinsert
p13560
I45
VStringLiteral: "IFn"
p13561
tp13562
I1
s(g5228
I42
g5229
Vinsert
p13563
I40
VQualifiedName: ret.thisName
p13564
tp13565
I1
s(g169
I42
g170
Vinsert
p13566
I40
VQualifiedName: ClassWriter.COMPUTE_MAXS
p13567
tp13568
I1
s(g10360
I42
g10361
Vinsert
p13569
I44
VSingleVariableDeclaration
p13570
tp13571
F1.5
s(g3689
I42
g3690
Vinsert
p13572
I43
VSimpleType: Keyword
p13573
tp13574
F0.25
s(g1977
I42
g1978
Vinsert
p13575
I42
VSimpleName: booleanCast
p13576
tp13577
I2
s(g2641
I42
g2642
Vinsert
p13578
I42
VSimpleName: x
p13579
tp13580
F2.25
s(g2964
I42
g2965
Vinsert
p13581
I59
VVariableDeclarationFragment
p13582
tp13583
F0.25
s(g2692
I42
g2693
Vinsert
p13584
I74
VParameterizedType: Map.Entry<String,WeakReference<Class>>
p13585
tp13586
I1
s(g735
I42
g736
Vinsert
p13587
I43
VSimpleType: Object
p13588
tp13589
F1.5
s(g2376
I42
g2377
Vinsert
p13590
I8
VBlock
p13591
tp13592
I2
s(g1461
I42
g1462
Vinsert
p13593
I42
VSimpleName: ISeq
p13594
tp13595
F1.25
s(g86
I42
g87
Vinsert
p13596
I42
VSimpleName: tailPosition
p13597
tp13598
F0.75
s(g3500
I42
g3501
Vinsert
p13599
I7
VAssignment: =
p13600
tp13601
I1
s(g1727
I42
g1728
Vinsert
p13602
I42
VSimpleName: OBJECT_TYPE
p13603
tp13604
F0.25
s(g1354
I42
g1355
Vinsert
p13605
I40
VQualifiedName: ref.tvals
p13606
tp13607
I1
s(Vinsert
p13608
I42
VSimpleName: invoke
p13609
Vinsert
p13610
I31
VMethodDeclaration
p13611
tp13612
F0.75
s(g4190
I42
g4191
Vinsert
p13613
I40
VQualifiedName: sym.ns
p13614
tp13615
I1
s(g3918
I42
g3919
Vinsert
p13616
I42
VSimpleName: ClassNotFoundException
p13617
tp13618
F0.25
s(g641
I42
g642
Vinsert
p13619
I32
VMethodInvocation
p13620
tp13621
I2
s(g6505
I42
g6506
Vinsert
p13622
I42
VSimpleName: methodName
p13623
tp13624
I1
s(g2586
I42
g2587
Vinsert
p13625
I45
VStringLiteral: ", "
p13626
tp13627
I1
s(g1050
I42
g1051
Vinsert
p13628
I83
VModifier: final
p13629
tp13630
I6
s(g3962
I42
g3963
Vinsert
p13631
I42
VSimpleName: set
p13632
tp13633
F0.25
s(g1104
I42
g1105
Vinsert
p13634
I8
VBlock
p13635
tp13636
I1
s(g8677
I42
g8678
Vinsert
p13637
I42
VSimpleName: Exception
p13638
tp13639
F0.25
s(g924
I42
g925
Vinsert
p13640
I43
VSimpleType: BigInteger
p13641
tp13642
F0.5
s(g2867
I42
g2868
Vinsert
p13643
I42
VSimpleName: e
p13644
tp13645
I1
s(g8553
I42
g8554
Vinsert
p13646
I42
VSimpleName: minSize
p13647
tp13648
I1
s(g5505
I42
g5506
Vinsert
p13649
I42
VSimpleName: nsname
p13650
tp13651
I1
s(g1822
I42
g1823
Vinsert
p13652
I27
VInfixExpression: &&
p13653
tp13654
I1
s(g608
I42
g609
Vinsert
p13655
I44
VSingleVariableDeclaration
p13656
tp13657
F0.25
s(g3754
I42
g3755
Vinsert
p13658
I42
VSimpleName: rand
p13659
tp13660
I1
s(g755
I42
g756
Vinsert
p13661
I32
VMethodInvocation
p13662
tp13663
F4.25
s(g21
I42
g22
Vinsert
p13664
I21
VExpressionStatement
p13665
tp13666
I2
s(g1218
I42
g1219
Vinsert
p13667
I42
VSimpleName: Integer
p13668
tp13669
I1
s(g842
I42
g843
Vinsert
p13670
I7
VAssignment: =
p13671
tp13672
I10
s(g3300
I42
g3301
Vinsert
p13673
I21
VExpressionStatement
p13674
tp13675
I6
s(g1910
I42
g1911
Vinsert
p13676
I31
VMethodDeclaration
p13677
tp13678
F0.5
s(g489
I42
g490
Vinsert
p13679
I21
VExpressionStatement
p13680
tp13681
F14.25
s(g3934
I42
g3935
Vinsert
p13682
I42
VSimpleName: o
p13683
tp13684
I1
s(g4726
I42
g4727
Vinsert
p13685
I8
VBlock
p13686
tp13687
I1
s(g3175
I42
g3176
Vinsert
p13688
I43
VSimpleType: Label
p13689
tp13690
I1
s(g6770
I42
g6771
Vinsert
p13691
I42
VSimpleName: NIL_EXPR
p13692
tp13693
I1
s(g4527
I42
g4528
Vinsert
p13694
I38
VPrefixExpression: -
p13695
tp13696
F0.25
s(g5050
I42
g5051
Vinsert
p13697
I60
VVariableDeclarationStatement
p13698
tp13699
I2
s(g3918
I42
g3919
Vinsert
p13700
I76
VWildcardType: ?
p13701
tp13702
F0.25
s(g396
I42
g397
Vinsert
p13703
I32
VMethodInvocation
p13704
tp13705
I1
s(g106
I42
g107
Vinsert
p13706
I40
VQualifiedName: h.tag
p13707
tp13708
I1
s(g7113
I42
g7114
Vinsert
p13709
I42
VSimpleName: first
p13710
tp13711
F1.25
s(g1866
I42
g1867
Vinsert
p13712
I42
VSimpleName: floatVal
p13713
tp13714
F0.25
s(g1104
I42
g1105
Vinsert
p13715
I39
VPrimitiveType: void
p13716
tp13717
F0.25
s(g5879
I42
g5880
Vinsert
p13718
I42
VSimpleName: get
p13719
tp13720
F0.25
s(g1321
I42
g1322
Vinsert
p13721
I83
VModifier: final
p13722
tp13723
F0.25
s(g129
I42
g130
Vinsert
p13724
I62
VInstanceofExpression
p13725
tp13726
I2
s(g8446
I42
g8447
Vinsert
p13727
I42
VSimpleName: o
p13728
tp13729
F0.25
s(g2591
I42
g2592
Vinsert
p13730
I43
VSimpleType: AbstractMethodError
p13731
tp13732
I1
s(g1339
I42
g1340
Vinsert
p13733
I42
VSimpleName: s
p13734
tp13735
I1
s(g363
I42
g364
Vinsert
p13736
I42
VSimpleName: args
p13737
tp13738
I1
s(Vinsert
p13739
I42
VSimpleName: add
p13740
Vinsert
p13741
I42
VSimpleName: bridgeMethods
p13742
tp13743
I2
s(Vinsert
p13744
I42
VSimpleName: clone
p13745
Vinsert
p13746
I5
VArrayType: double[]
p13747
tp13748
F0.5
s(Vinsert
p13749
I42
VSimpleName: first
p13750
Vinsert
p13751
I42
VSimpleName: FnMethod
p13752
tp13753
I2
s(g1601
I42
g1602
Vinsert
p13754
I21
VExpressionStatement
p13755
tp13756
F1.25
s(g3762
I42
g3763
Vinsert
p13757
I42
VSimpleName: ret
p13758
tp13759
I1
s(g1432
I42
g1433
Vinsert
p13760
I42
VSimpleName: ch
p13761
tp13762
I1
s(g6021
I42
g6022
Vinsert
p13763
I42
VSimpleName: rets
p13764
tp13765
I1
s(g4224
I42
g4225
Vinsert
p13766
I42
VSimpleName: iterator
p13767
tp13768
I1
s(g21
I42
g22
Vinsert
p13769
I32
VMethodInvocation
p13770
tp13771
F8.25
s(g3633
I42
g3634
Vinsert
p13772
I14
VClassInstanceCreation
p13773
tp13774
I2
s(g3565
I42
g3566
Vinsert
p13775
I83
VModifier: static
p13776
tp13777
F0.25
s(g13264
I42
g13265
Vinsert
p13778
I42
VSimpleName: Exception
p13779
tp13780
I1
s(g2451
I42
g2452
Vinsert
p13781
I42
VSimpleName: i
p13782
tp13783
I1
s(g5592
I42
g5593
Vinsert
p13784
I32
VMethodInvocation
p13785
tp13786
I2
s(g2586
I42
g2587
Vinsert
p13787
I42
VSimpleName: sb
p13788
tp13789
I2
s(g5816
I42
g5817
Vinsert
p13790
I43
VSimpleType: Map.Entry
p13791
tp13792
I2
s(g2252
I42
g2253
Vinsert
p13793
I34
VNumberLiteral: 1
p13794
tp13795
I1
s(g134
I42
g135
Vinsert
p13796
I42
VSimpleName: desc
p13797
tp13798
F0.25
s(g66
I42
g67
Vinsert
p13799
I42
VSimpleName: analyze
p13800
tp13801
I1
s(g353
I42
g354
Vinsert
p13802
I21
VExpressionStatement
p13803
tp13804
I1
s(g1104
I42
g1105
Vinsert
p13805
I83
VModifier: public
p13806
tp13807
F0.25
s(g247
I42
g248
Vinsert
p13808
I42
VSimpleName: type
p13809
tp13810
I1
s(g6300
I42
g6301
Vinsert
p13811
I42
VSimpleName: thread
p13812
tp13813
I2
s(g4718
I42
g4719
Vinsert
p13814
I41
VReturnStatement
p13815
tp13816
I2
s(g1378
I42
g1379
Vinsert
p13817
I14
VClassInstanceCreation
p13818
tp13819
F0.25
s(g36
I42
g37
Vinsert
p13820
I27
VInfixExpression: &&
p13821
tp13822
I1
s(g4826
I42
g4827
Vinsert
p13823
I42
VSimpleName: UnsupportedOperationException
p13824
tp13825
F0.25
s(g6518
I42
g6519
Vinsert
p13826
I83
VModifier: final
p13827
tp13828
F0.25
s(g1634
I42
g1635
Vinsert
p13829
I42
VSimpleName: Object
p13830
tp13831
I1
s(g2343
I42
g2344
Vinsert
p13832
I42
VSimpleName: arg12
p13833
tp13834
F0.25
s(g2221
I42
g2222
Vinsert
p13835
I42
VSimpleName: nestedIter
p13836
tp13837
I1
s(g1291
I42
g1292
Vinsert
p13838
I43
VSimpleType: Exception
p13839
tp13840
F0.25
s(g3295
I42
g3296
Vinsert
p13841
I43
VSimpleType: Type
p13842
tp13843
F0.25
s(g4267
I42
g4268
Vinsert
p13844
I42
VSimpleName: LA1_16
p13845
tp13846
I1
s(g5214
I42
g5215
Vinsert
p13847
I7
VAssignment: =
p13848
tp13849
F0.25
s(g5163
I42
g5164
Vinsert
p13850
I42
VSimpleName: create
p13851
tp13852
F0.25
s(g2221
I42
g2222
Vinsert
p13853
I31
VMethodDeclaration
p13854
tp13855
F0.25
s(g7613
I42
g7614
Vinsert
p13856
I27
VInfixExpression: !=
p13857
tp13858
I2
s(g7528
I42
g7529
Vinsert
p13859
I43
VSimpleType: Object
p13860
tp13861
F0.5
s(g3300
I42
g3301
Vinsert
p13862
I42
VSimpleName: ret
p13863
tp13864
I4
s(g557
I42
g558
Vinsert
p13865
I5
VArrayType: Object[]
p13866
tp13867
I1
s(g6450
I42
g6451
Vinsert
p13868
I40
VQualifiedName: ClassWriter.INDY
p13869
tp13870
I1
s(g8355
I42
g8356
Vinsert
p13871
I42
VSimpleName: pushThreadBindings
p13872
tp13873
I1
s(g3201
I42
g3202
Vinsert
p13874
I52
VThisExpression
p13875
tp13876
F0.25
s(g7480
I42
g7481
Vinsert
p13877
I43
VSimpleType: IPersistentMap
p13878
tp13879
F2.5
s(Vinsert
p13880
I42
VSimpleName: next
p13881
Vinsert
p13882
I42
VSimpleName: meta
p13883
tp13884
I1
s(g2480
I42
g2481
Vinsert
p13885
I11
VCastExpression
p13886
tp13887
I4
s(g11015
I42
g11016
Vinsert
p13888
I39
VPrimitiveType: boolean
p13889
tp13890
I1
s(g1781
I42
g1782
Vinsert
p13891
I21
VExpressionStatement
p13892
tp13893
F4.25
s(g2197
I42
g2198
Vinsert
p13894
I42
VSimpleName: stackMap
p13895
tp13896
I1
s(g6610
I42
g6611
Vinsert
p13897
I42
VSimpleName: LINE_KEY
p13898
tp13899
I1
s(g6477
I42
g6478
Vinsert
p13900
I42
VSimpleName: t
p13901
tp13902
I1
s(g11204
I42
g11205
Vinsert
p13903
I42
VSimpleName: line
p13904
tp13905
F0.25
s(g2830
I42
g2831
Vinsert
p13906
I85
VDimension
p13907
tp13908
I1
s(g1702
I42
g1703
Vinsert
p13909
I42
VSimpleName: Reflector
p13910
tp13911
I1
s(g10374
I42
g10375
Vinsert
p13912
I42
VSimpleName: USER_NS
p13913
tp13914
I1
s(g4886
I42
g4887
Vinsert
p13915
I61
VWhileStatement
p13916
tp13917
I1
s(g1147
I42
g1148
Vinsert
p13918
I7
VAssignment: =
p13919
tp13920
I3
s(g8729
I42
g8730
Vinsert
p13921
I27
VInfixExpression: !=
p13922
tp13923
I1
s(g1409
I42
g1410
Vinsert
p13924
I42
VSimpleName: i
p13925
tp13926
I1
s(g2443
I42
g2444
Vinsert
p13927
I65
VTagElement: @return
p13928
tp13929
F0.25
s(g5664
I42
g5665
Vinsert
p13930
I39
VPrimitiveType: int
p13931
tp13932
I2
s(g1977
I42
g1978
Vinsert
p13933
I45
VStringLiteral: ".cljc"
p13934
tp13935
F0.25
s(g973
I42
g974
Vinsert
p13936
I42
VSimpleName: String
p13937
tp13938
I2
s(g2371
I42
g2372
Vinsert
p13939
I42
VSimpleName: writeReplace
p13940
tp13941
F0.25
s(g8729
I42
g8730
Vinsert
p13942
I33
VNullLiteral
p13943
tp13944
I1
s(g101
I42
g102
Vinsert
p13945
I42
VSimpleName: create
p13946
tp13947
F0.25
s(g2026
I42
g2027
Vinsert
p13948
I42
VSimpleName: get
p13949
tp13950
I1
s(g3092
I42
g3093
Vinsert
p13951
I43
VSimpleType: IArray
p13952
tp13953
F0.25
s(Vinsert
p13954
I42
VSimpleName: get
p13955
Vinsert
p13956
I42
VSimpleName: p
p13957
tp13958
I2
s(g6696
I42
g6697
Vinsert
p13959
I42
VSimpleName: Keyword
p13960
tp13961
I1
s(g8409
I42
g8410
Vinsert
p13962
I44
VSingleVariableDeclaration
p13963
tp13964
F0.75
s(g5629
I42
g5630
Vinsert
p13965
I42
VSimpleName: CLOJURE
p13966
tp13967
I1
s(g1339
I42
g1340
Vinsert
p13968
I42
VSimpleName: site
p13969
tp13970
I1
s(g2371
I42
g2372
Vinsert
p13971
I41
VReturnStatement
p13972
tp13973
I2
s(g9012
I42
g9013
Vinsert
p13974
I42
VSimpleName: arr2
p13975
tp13976
I1
s(g686
I42
g687
Vinsert
p13977
I42
VSimpleName: CHUNK_SIZE
p13978
tp13979
I1
s(g3549
I42
g3550
Vinsert
p13980
I83
VModifier: static
p13981
tp13982
F0.5
s(g1750
I42
g1751
Vinsert
p13983
I42
VSimpleName: fjtask
p13984
tp13985
F0.25
s(g4508
I42
g4509
Vinsert
p13986
I42
VSimpleName: line
p13987
tp13988
I1
s(g2814
I42
g2815
Vinsert
p13989
I45
VStringLiteral: "clojure.core"
p13990
tp13991
F0.25
s(g1228
I42
g1229
Vinsert
p13992
I85
VDimension
p13993
tp13994
I2
s(g12375
I42
g12376
Vinsert
p13995
I45
VStringLiteral: "clojure.compile.warn-on-reflection"
p13996
tp13997
I1
s(g2891
I42
g2892
Vinsert
p13998
I25
VIfStatement
p13999
tp14000
I2
s(g704
I42
g705
Vinsert
p14001
I43
VSimpleType: RuntimeException
p14002
tp14003
I2
s(g159
I42
g160
Vinsert
p14004
I25
VIfStatement
p14005
tp14006
I1
s(g583
I42
g584
Vinsert
p14007
I27
VInfixExpression: -
p14008
tp14009
I1
s(g745
I42
g746
Vinsert
p14010
I52
VThisExpression
p14011
tp14012
F0.5
s(g1750
I42
g1751
Vinsert
p14013
I42
VSimpleName: fjjoin
p14014
tp14015
F0.25
s(g2935
I42
g2936
Vinsert
p14016
I59
VVariableDeclarationFragment
p14017
tp14018
I1
s(g725
I42
g726
Vinsert
p14019
I43
VSimpleType: Exception
p14020
tp14021
F0.25
s(g6234
I42
g6235
Vinsert
p14022
I21
VExpressionStatement
p14023
tp14024
I2
s(g9417
I42
g9418
Vinsert
p14025
I59
VVariableDeclarationFragment
p14026
tp14027
I2
s(g5664
I42
g5665
Vinsert
p14028
I43
VSimpleType: ISeq
p14029
tp14030
I2
s(g3175
I42
g3176
Vinsert
p14031
I42
VSimpleName: Frame
p14032
tp14033
I1
s(g1004
I42
g1005
Vinsert
p14034
I43
VSimpleType: Exception
p14035
tp14036
F2.25
s(g11838
I42
g11839
Vinsert
p14037
I42
VSimpleName: ps
p14038
tp14039
I4
s(g2930
I42
g2931
Vinsert
p14040
I32
VMethodInvocation
p14041
tp14042
I3
s(g4021
I42
g4022
Vinsert
p14043
I42
VSimpleName: cons
p14044
tp14045
F0.25
s(g5428
I42
g5429
Vinsert
p14046
I14
VClassInstanceCreation
p14047
tp14048
I1
s(g4436
I42
g4437
Vinsert
p14049
I44
VSingleVariableDeclaration
p14050
tp14051
F0.25
s(g5500
I42
g5501
Vinsert
p14052
I43
VSimpleType: C
p14053
tp14054
F0.5
s(g5656
I42
g5657
Vinsert
p14055
I42
VSimpleName: form
p14056
tp14057
I1
s(Vinsert
p14058
I42
VSimpleName: nth
p14059
Vinsert
p14060
I42
VSimpleName: impl
p14061
tp14062
F1.25
s(g5394
I42
g5395
Vinsert
p14063
I42
VSimpleName: o1
p14064
tp14065
F0.25
s(g515
I42
g516
Vinsert
p14066
I59
VVariableDeclarationFragment
p14067
tp14068
F12.25
s(g8061
I42
g8062
Vinsert
p14069
I42
VSimpleName: RBTree
p14070
tp14071
I2
s(g510
I42
g511
Vinsert
p14072
I59
VVariableDeclarationFragment
p14073
tp14074
I1
s(g2315
I42
g2316
Vinsert
p14075
I42
VSimpleName: key
p14076
tp14077
F0.25
s(g1760
I42
g1761
Vinsert
p14078
I42
VSimpleName: loopLabel
p14079
tp14080
F0.25
s(g4232
I42
g4233
Vinsert
p14081
I83
VModifier: static
p14082
tp14083
F0.25
s(g1086
I42
g1087
Vinsert
p14084
I42
VSimpleName: clearErrors
p14085
tp14086
F0.25
s(g114
I42
g115
Vinsert
p14087
I42
VSimpleName: arg11
p14088
tp14089
F0.5
s(g6941
I42
g6942
Vinsert
p14090
I45
VStringLiteral: "double"
p14091
tp14092
I1
s(g2631
I42
g2632
Vinsert
p14093
I42
VSimpleName: hasheq
p14094
tp14095
F0.25
s(g2776
I42
g2777
Vinsert
p14096
I27
VInfixExpression: <
p14097
tp14098
I2
s(g2748
I42
g2749
Vinsert
p14099
I11
VCastExpression
p14100
tp14101
F26.0
s(g36
I42
g37
Vinsert
p14102
I42
VSimpleName: used
p14103
tp14104
F0.25
s(g6639
I42
g6640
Vinsert
p14105
I42
VSimpleName: getType
p14106
tp14107
I3
s(g9264
I42
g9265
Vinsert
p14108
I42
VSimpleName: getDeclaringClass
p14109
tp14110
F0.25
s(g1812
I42
g1813
Vinsert
p14111
I8
VBlock
p14112
tp14113
I1
s(g436
I42
g437
Vinsert
p14114
I83
VModifier: static
p14115
tp14116
F0.25
s(g2615
I42
g2616
Vinsert
p14117
I32
VMethodInvocation
p14118
tp14119
I3
s(g2169
I42
g2170
Vinsert
p14120
I7
VAssignment: |=
p14121
tp14122
I1
s(g7613
I42
g7614
Vinsert
p14123
I42
VSimpleName: Object
p14124
tp14125
F0.25
s(g4856
I42
g4857
Vinsert
p14126
I43
VSimpleType: Associative
p14127
tp14128
I1
s(g2743
I42
g2744
Vinsert
p14129
I42
VSimpleName: nth
p14130
tp14131
F0.25
s(g1563
I42
g1564
Vinsert
p14132
I43
VSimpleType: ISeq
p14133
tp14134
F0.25
s(g5100
I42
g5101
Vinsert
p14135
I42
VSimpleName: p
p14136
tp14137
I1
s(g937
I42
g938
Vinsert
p14138
I32
VMethodInvocation
p14139
tp14140
F4.25
s(g2641
I42
g2642
Vinsert
p14141
I42
VSimpleName: Boolean
p14142
tp14143
I2
s(g10180
I42
g10181
Vinsert
p14144
I42
VSimpleName: arg1
p14145
tp14146
F1.25
s(g656
I42
g657
Vinsert
p14147
I42
VSimpleName: retLocal
p14148
tp14149
F0.5
s(g1962
I42
g1963
Vinsert
p14150
I42
VSimpleName: Compiler
p14151
tp14152
I1
s(g9724
I42
g9725
Vinsert
p14153
I42
VSimpleName: BindingInit
p14154
tp14155
I2
s(g552
I42
g553
Vinsert
p14156
I36
VParenthesizedExpression
p14157
tp14158
I3
s(g2623
I42
g2624
Vinsert
p14159
I8
VBlock
p14160
tp14161
I1
s(g451
I42
g452
Vinsert
p14162
I42
VSimpleName: SAXException
p14163
tp14164
F0.25
s(g4224
I42
g4225
Vinsert
p14165
I42
VSimpleName: getClass
p14166
tp14167
I1
s(g623
I42
g624
Vinsert
p14168
I45
VStringLiteral: "double"
p14169
tp14170
I1
s(g2835
I42
g2836
Vinsert
p14171
I42
VSimpleName: getThreadBinding
p14172
tp14173
I1
s(g770
I42
g771
Vinsert
p14174
I21
VExpressionStatement
p14175
tp14176
I4
s(g562
I42
g563
Vinsert
p14177
I27
VInfixExpression: ==
p14178
tp14179
I2
s(Vinsert
p14180
I42
VSimpleName: first
p14181
Vinsert
p14182
I42
VSimpleName: method
p14183
tp14184
I2
s(g1644
I42
g1645
Vinsert
p14185
I45
VStringLiteral: "REPL"
p14186
tp14187
I1
s(g5256
I42
g5257
Vinsert
p14188
I42
VSimpleName: Entry
p14189
tp14190
I2
s(g1972
I42
g1973
Vinsert
p14191
I36
VParenthesizedExpression
p14192
tp14193
I1
s(g10080
I42
g10081
Vinsert
p14194
I42
VSimpleName: bs
p14195
tp14196
I5
s(g3549
I42
g3550
Vinsert
p14197
I39
VPrimitiveType: long
p14198
tp14199
F0.25
s(g1732
I42
g1733
Vinsert
p14200
I83
VModifier: public
p14201
tp14202
F0.25
s(g3038
I42
g3039
Vinsert
p14203
I43
VSimpleType: ISeq
p14204
tp14205
F0.25
s(g2776
I42
g2777
Vinsert
p14206
I32
VMethodInvocation
p14207
tp14208
I2
s(g149
I42
g150
Vinsert
p14209
I44
VSingleVariableDeclaration
p14210
tp14211
F1.0
s(g827
I42
g828
Vinsert
p14212
I44
VSingleVariableDeclaration
p14213
tp14214
F0.5
s(g3565
I42
g3566
Vinsert
p14215
I42
VSimpleName: a
p14216
tp14217
F0.25
s(g11331
I42
g11332
Vinsert
p14218
I42
VSimpleName: ctor
p14219
tp14220
I1
s(g3986
I42
g3987
Vinsert
p14221
I40
VQualifiedName: RT.DATA_READERS
p14222
tp14223
I1
s(g1456
I42
g1457
Vinsert
p14224
I42
VSimpleName: mmapVal
p14225
tp14226
I1
s(g3033
I42
g3034
Vinsert
p14227
I27
VInfixExpression: >=
p14228
tp14229
I1
s(g5402
I42
g5403
Vinsert
p14230
I42
VSimpleName: Reader
p14231
tp14232
F3.25
s(Vinsert
p14233
I42
VSimpleName: first
p14234
Vinsert
p14235
I42
VSimpleName: APersistentVector
p14236
tp14237
I2
s(g1
I42
g2
Vinsert
p14238
I41
VReturnStatement
p14239
tp14240
I2
s(g396
I42
g397
Vinsert
p14241
I42
VSimpleName: ISeq
p14242
tp14243
I1
s(g819
I42
g820
Vinsert
p14244
I44
VSingleVariableDeclaration
p14245
tp14246
F0.25
s(g4463
I42
g4464
Vinsert
p14247
I42
VSimpleName: gen
p14248
tp14249
I4
s(g2244
I42
g2245
Vinsert
p14250
I42
VSimpleName: PersistentTree
p14251
tp14252
I1
s(g1424
I42
g1425
Vinsert
p14253
I27
VInfixExpression: !=
p14254
tp14255
I1
s(g903
I42
g904
Vinsert
p14256
I37
VPostfixExpression: ++
p14257
tp14258
I1
s(g1861
I42
g1862
Vinsert
p14259
I43
VSimpleType: BigDecimal
p14260
tp14261
I2
s(g3151
I42
g3152
Vinsert
p14262
I42
VSimpleName: frms
p14263
tp14264
I1
s(g13465
I42
g13466
Vinsert
p14265
I42
VSimpleName: nextRev
p14266
tp14267
F0.75
s(g515
I42
g516
Vinsert
p14268
I32
VMethodInvocation
p14269
tp14270
I29
s(g10591
I42
g10592
Vinsert
p14271
I42
VSimpleName: meths
p14272
tp14273
I1
s(g7520
I42
g7521
Vinsert
p14274
I21
VExpressionStatement
p14275
tp14276
F1.25
s(g4620
I42
g4621
Vinsert
p14277
I43
VSimpleType: Ratio
p14278
tp14279
I1
s(g4151
I42
g4152
Vinsert
p14280
I42
VSimpleName: transaction
p14281
tp14282
I2
s(g13744
I42
g13745
Vinsert
p14283
I39
VPrimitiveType: double
p14284
tp14285
F0.5
s(g4932
I42
g4933
Vinsert
p14286
I8
VBlock
p14287
tp14288
I3
s(g5584
I42
g5585
Vinsert
p14289
I43
VSimpleType: CloneNotSupportedException
p14290
tp14291
F0.25
s(g978
I42
g979
Vinsert
p14292
I31
VMethodDeclaration
p14293
tp14294
F0.5
s(g7638
I42
g7639
Vinsert
p14295
I14
VClassInstanceCreation
p14296
tp14297
I1
s(g2226
I42
g2227
Vinsert
p14298
I42
VSimpleName: left
p14299
tp14300
I2
s(g937
I42
g938
Vinsert
p14301
I41
VReturnStatement
p14302
tp14303
F1.5
s(g883
I42
g884
Vinsert
p14304
I40
VQualifiedName: Opcodes.ACONST_NULL
p14305
tp14306
I1
s(g4663
I42
g4664
Vinsert
p14307
I45
VStringLiteral: "<init>"
p14308
tp14309
I1
s(g2814
I42
g2815
Vinsert
p14310
I42
VSimpleName: create
p14311
tp14312
F0.25
s(g1654
I42
g1655
Vinsert
p14313
I43
VSimpleType: Ratio
p14314
tp14315
I1
s(g1732
I42
g1733
Vinsert
p14316
I42
VSimpleName: tvals
p14317
tp14318
F0.25
s(g456
I42
g457
Vinsert
p14319
I42
VSimpleName: matchSymbol
p14320
tp14321
F0.25
s(g1879
I42
g1880
Vinsert
p14322
I43
VSimpleType: IObj
p14323
tp14324
F0.25
s(g6203
I42
g6204
Vinsert
p14325
I9
VBooleanLiteral: true
p14326
tp14327
I1
s(g1535
I42
g1536
Vinsert
p14328
I42
VSimpleName: bindsToStaticFn
p14329
tp14330
F0.25
s(g1654
I42
g1655
Vinsert
p14331
I42
VSimpleName: toRatio
p14332
tp14333
I1
s(g11126
I42
g11127
Vinsert
p14334
I43
VSimpleType: InheritableThreadLocal
p14335
tp14336
I1
s(g6045
I42
g6046
Vinsert
p14337
I42
VSimpleName: getMethod
p14338
tp14339
I2
s(g1451
I42
g1452
Vinsert
p14340
I43
VSimpleType: ConstantExpr
p14341
tp14342
F0.25
s(g2711
I42
g2712
Vinsert
p14343
I44
VSingleVariableDeclaration
p14344
tp14345
F0.25
s(g5050
I42
g5051
Vinsert
p14346
I32
VMethodInvocation
p14347
tp14348
I7
s(g1972
I42
g1973
Vinsert
p14349
I42
VSimpleName: arg
p14350
tp14351
I1
s(g1055
I42
g1056
Vinsert
p14352
I42
VSimpleName: Symbol
p14353
tp14354
I1
s(g2252
I42
g2253
Vinsert
p14355
I62
VInstanceofExpression
p14356
tp14357
I1
s(g12920
I42
g12921
Vinsert
p14358
I42
VSimpleName: CatchClause
p14359
tp14360
I2
s(g114
I42
g115
Vinsert
p14361
I42
VSimpleName: arg8
p14362
tp14363
F0.25
s(g671
I42
g672
Vinsert
p14364
I42
VSimpleName: AMap
p14365
tp14366
I3
s(g3689
I42
g3690
Vinsert
p14367
I83
VModifier: static
p14368
tp14369
F0.25
s(g6505
I42
g6506
Vinsert
p14370
I43
VSimpleType: Method
p14371
tp14372
I2
s(g878
I42
g879
Vinsert
p14373
I45
VStringLiteral: "in-ns"
p14374
tp14375
F0.25
s(g2692
I42
g2693
Vinsert
p14376
I27
VInfixExpression: !=
p14377
tp14378
I1
s(g1326
I42
g1327
Vinsert
p14379
I27
VInfixExpression: <<
p14380
tp14381
I1
s(g6946
I42
g6947
Vinsert
p14382
I42
VSimpleName: ClassNotFoundException
p14383
tp14384
F0.25
s(g2719
I42
g2720
Vinsert
p14385
I38
VPrefixExpression: ++
p14386
tp14387
I1
s(g1874
I42
g1875
Vinsert
p14388
I42
VSimpleName: unlock
p14389
tp14390
F0.25
s(g1611
I42
g1612
Vinsert
p14391
I43
VSimpleType: Long
p14392
tp14393
F0.25
s(g852
I42
g853
Vinsert
p14394
I42
VSimpleName: o
p14395
tp14396
I2
s(g2798
I42
g2799
Vinsert
p14397
I42
VSimpleName: i
p14398
tp14399
I17
s(g709
I42
g710
Vinsert
p14400
I31
VMethodDeclaration
p14401
tp14402
F0.25
s(g257
I42
g258
Vinsert
p14403
I43
VSimpleType: K
p14404
tp14405
I1
s(g3087
I42
g3088
Vinsert
p14406
I27
VInfixExpression: +
p14407
tp14408
F3.5
s(g1573
I42
g1574
Vinsert
p14409
I11
VCastExpression
p14410
tp14411
I1
s(g5505
I42
g5506
Vinsert
p14412
I32
VMethodInvocation
p14413
tp14414
I19
s(g4248
I42
g4249
Vinsert
p14415
I32
VMethodInvocation
p14416
tp14417
I1
s(g9388
I42
g9389
Vinsert
p14418
I42
VSimpleName: arg16
p14419
tp14420
I1
s(g2130
I42
g2131
Vinsert
p14421
I8
VBlock
p14422
tp14423
I3
s(g2776
I42
g2777
Vinsert
p14424
I60
VVariableDeclarationStatement
p14425
tp14426
I1
s(g497
I42
g498
Vinsert
p14427
I43
VSimpleType: ConcurrentHashMap
p14428
tp14429
F0.25
s(g194
I42
g195
Vinsert
p14430
I59
VVariableDeclarationFragment
p14431
tp14432
I3
s(g3100
I42
g3101
Vinsert
p14433
I31
VMethodDeclaration
p14434
tp14435
F0.25
s(g1702
I42
g1703
Vinsert
p14436
I42
VSimpleName: field
p14437
tp14438
I1
s(g26
I42
g27
Vinsert
p14439
I32
VMethodInvocation
p14440
tp14441
I2
s(g6505
I42
g6506
Vinsert
p14442
I60
VVariableDeclarationStatement
p14443
tp14444
I1
s(g3775
I42
g3776
Vinsert
p14445
I42
VSimpleName: k2
p14446
tp14447
F1.25
s(g174
I42
g175
Vinsert
p14448
I59
VVariableDeclarationFragment
p14449
tp14450
I1
s(g7093
I42
g7094
Vinsert
p14451
I43
VSimpleType: TRef
p14452
tp14453
F0.25
s(g1949
I42
g1950
Vinsert
p14454
I45
VStringLiteral: "+ 1 "
p14455
tp14456
I1
s(g973
I42
g974
Vinsert
p14457
I42
VSimpleName: first
p14458
tp14459
I1
s(g3256
I42
g3257
Vinsert
p14460
I42
VSimpleName: Keyword
p14461
tp14462
F7.5
s(g1213
I42
g1214
Vinsert
p14463
I45
VStringLiteral: "clojure"
p14464
tp14465
F0.25
s(g1037
I42
g1038
Vinsert
p14466
I60
VVariableDeclarationStatement
p14467
tp14468
I1
s(g4549
I42
g4550
Vinsert
p14469
I42
VSimpleName: FnExpr
p14470
tp14471
I2
s(g4508
I42
g4509
Vinsert
p14472
I39
VPrimitiveType: int
p14473
tp14474
F0.25
s(g5111
I42
g5112
Vinsert
p14475
I42
VSimpleName: invokeStatic
p14476
tp14477
I1
s(g12045
I42
g12046
Vinsert
p14478
I42
VSimpleName: end
p14479
tp14480
F2.25
s(g3100
I42
g3101
Vinsert
p14481
I27
VInfixExpression: !=
p14482
tp14483
I2
s(g411
I42
g412
Vinsert
p14484
I32
VMethodInvocation
p14485
tp14486
I1
s(g1253
I42
g1254
Vinsert
p14487
I27
VInfixExpression: !=
p14488
tp14489
I1
s(g6450
I42
g6451
Vinsert
p14490
I52
VThisExpression
p14491
tp14492
I1
s(g8516
I42
g8517
Vinsert
p14493
I22
VFieldAccess
p14494
tp14495
F0.25
s(g3076
I42
g3077
Vinsert
p14496
I8
VBlock
p14497
tp14498
I1
s(g3999
I42
g4000
Vinsert
p14499
I42
VSimpleName: Character
p14500
tp14501
I1
s(g656
I42
g657
Vinsert
p14502
I40
VQualifiedName: C.STATEMENT
p14503
tp14504
I1
s(g5163
I42
g5164
Vinsert
p14505
I45
VStringLiteral: "clojure.core"
p14506
tp14507
F0.25
s(g6229
I42
g6230
Vinsert
p14508
I34
VNumberLiteral: 0
p14509
tp14510
I1
s(g237
I42
g238
Vinsert
p14511
I32
VMethodInvocation
p14512
tp14513
I2
s(g4788
I42
g4789
Vinsert
p14514
I42
VSimpleName: innerName
p14515
tp14516
F0.25
s(g4248
I42
g4249
Vinsert
p14517
I8
VBlock
p14518
tp14519
F0.25
s(g376
I42
g377
Vinsert
p14520
I43
VSimpleType: IObj
p14521
tp14522
I1
s(g552
I42
g553
Vinsert
p14523
I42
VSimpleName: equals
p14524
tp14525
I1
s(g1157
I42
g1158
Vinsert
p14526
I42
VSimpleName: Var
p14527
tp14528
I1
s(g1845
I42
g1846
Vinsert
p14529
I27
VInfixExpression: -
p14530
tp14531
I1
s(g4620
I42
g4621
Vinsert
p14532
I40
VQualifiedName: BigInteger.TEN
p14533
tp14534
I1
s(g4812
I42
g4813
Vinsert
p14535
I42
VSimpleName: LINE
p14536
tp14537
I3
s(g1321
I42
g1322
Vinsert
p14538
I44
VSingleVariableDeclaration
p14539
tp14540
F0.25
s(g1202
I42
g1203
Vinsert
p14541
I33
VNullLiteral
p14542
tp14543
I1
s(g1157
I42
g1158
Vinsert
p14544
I62
VInstanceofExpression
p14545
tp14546
I1
s(g1202
I42
g1203
Vinsert
p14547
I45
VStringLiteral: ""
p14548
tp14549
I1
s(g2060
I42
g2061
Vinsert
p14550
I27
VInfixExpression: +
p14551
tp14552
F1.25
s(g1081
I42
g1082
Vinsert
p14553
I25
VIfStatement
p14554
tp14555
I2
s(g12420
I42
g12421
Vinsert
p14556
I42
VSimpleName: dvals
p14557
tp14558
I3
s(g862
I42
g863
Vinsert
p14559
I42
VSimpleName: line
p14560
tp14561
I1
s(g537
I42
g538
Vinsert
p14562
I49
VSwitchCase
p14563
tp14564
I1
s(g6884
I42
g6885
Vinsert
p14565
I42
VSimpleName: ISeq
p14566
tp14567
I1
s(g1187
I42
g1188
Vinsert
p14568
I42
VSimpleName: val
p14569
tp14570
F1.25
s(g2935
I42
g2936
Vinsert
p14571
I42
VSimpleName: ret
p14572
tp14573
I1
s(g8821
I42
g8822
Vinsert
p14574
I42
VSimpleName: key
p14575
tp14576
I1
s(g5050
I42
g5051
Vinsert
p14577
I59
VVariableDeclarationFragment
p14578
tp14579
I5
s(g1456
I42
g1457
Vinsert
p14580
I27
VInfixExpression: ==
p14581
tp14582
I2
s(g461
I42
g462
Vinsert
p14583
I27
VInfixExpression: |
p14584
tp14585
I1
s(g343
I42
g344
Vinsert
p14586
I42
VSimpleName: c
p14587
tp14588
I3
s(g3476
I42
g3477
Vinsert
p14589
I42
VSimpleName: num
p14590
tp14591
F0.25
s(g5879
I42
g5880
Vinsert
p14592
I42
VSimpleName: LocalBinding
p14593
tp14594
F0.25
s(g5428
I42
g5429
Vinsert
p14595
I25
VIfStatement
p14596
tp14597
I1
s(g3767
I42
g3768
Vinsert
p14598
I27
VInfixExpression: -
p14599
tp14600
I1
s(g5816
I42
g5817
Vinsert
p14601
I11
VCastExpression
p14602
tp14603
I17
s(g968
I42
g969
Vinsert
p14604
I8
VBlock
p14605
tp14606
I7
s(g6059
I42
g6060
Vinsert
p14607
I42
VSimpleName: v
p14608
tp14609
I3
s(g3022
I42
g3023
Vinsert
p14610
I42
VSimpleName: getModifiers
p14611
tp14612
I1
s(g5256
I42
g5257
Vinsert
p14613
I33
VNullLiteral
p14614
tp14615
F8.5
s(g4916
I42
g4917
Vinsert
p14616
I40
VQualifiedName: x.numerator
p14617
tp14618
I1
s(g2037
I42
g2038
Vinsert
p14619
I39
VPrimitiveType: long
p14620
tp14621
I3
s(g1
I42
g2
Vinsert
p14622
I33
VNullLiteral
p14623
tp14624
I2
s(g6
I42
g7
Vinsert
p14625
I42
VSimpleName: o
p14626
tp14627
I2
s(g3266
I42
g3267
Vinsert
p14628
I42
VSimpleName: Exception
p14629
tp14630
I1
s(g9600
I42
g9601
Vinsert
p14631
I42
VSimpleName: present
p14632
tp14633
I2
s(g386
I42
g387
Vinsert
p14634
I40
VQualifiedName: sym.name
p14635
tp14636
I2
s(g6114
I42
g6115
Vinsert
p14637
I34
VNumberLiteral: 2
p14638
tp14639
I1
s(g1957
I42
g1958
Vinsert
p14640
I52
VThisExpression
p14641
tp14642
F0.25
s(g1202
I42
g1203
Vinsert
p14643
I8
VBlock
p14644
tp14645
I6
s(g6335
I42
g6336
Vinsert
p14646
I42
VSimpleName: n
p14647
tp14648
I1
s(g11896
I42
g11897
Vinsert
p14649
I42
VSimpleName: imports
p14650
tp14651
I1
s(g4891
I42
g4892
Vinsert
p14652
I42
VSimpleName: black
p14653
tp14654
I3
s(g1920
I42
g1921
Vinsert
p14655
I41
VReturnStatement
p14656
tp14657
I1
s(g3986
I42
g3987
Vinsert
p14658
I43
VSimpleType: ILookup
p14659
tp14660
I2
s(g4663
I42
g4664
Vinsert
p14661
I74
VParameterizedType: java.lang.reflect.Constructor<?>
p14662
tp14663
F0.25
s(g557
I42
g558
Vinsert
p14664
I42
VSimpleName: array
p14665
tp14666
I1
s(g1936
I42
g1937
Vinsert
p14667
I10
VBreakStatement
p14668
tp14669
F0.5
s(g4267
I42
g4268
Vinsert
p14670
I60
VVariableDeclarationStatement
p14671
tp14672
I3
s(g1962
I42
g1963
Vinsert
p14673
I27
VInfixExpression: !=
p14674
tp14675
I1
s(g1278
I42
g1279
Vinsert
p14676
I42
VSimpleName: r
p14677
tp14678
F8.25
s(g4123
I42
g4124
Vinsert
p14679
I42
VSimpleName: COMPILE_PATH
p14680
tp14681
I1
s(g3175
I42
g3176
Vinsert
p14682
I42
VSimpleName: l
p14683
tp14684
I2
s(g973
I42
g974
Vinsert
p14685
I42
VSimpleName: s
p14686
tp14687
I1
s(g1495
I42
g1496
Vinsert
p14688
I60
VVariableDeclarationStatement
p14689
tp14690
I3
s(g2422
I42
g2423
Vinsert
p14691
I43
VSimpleType: LocalBinding
p14692
tp14693
I4
s(g2623
I42
g2624
Vinsert
p14694
I42
VSimpleName: NodeSeq
p14695
tp14696
I1
s(g5695
I42
g5696
Vinsert
p14697
I74
VParameterizedType: ConcurrentHashMap<Symbol,Var>
p14698
tp14699
I1
s(g1578
I42
g1579
Vinsert
p14700
I42
VSimpleName: Reflector
p14701
tp14702
F0.25
s(g1073
I42
g1074
Vinsert
p14703
I42
VSimpleName: s
p14704
tp14705
I3
s(g8446
I42
g8447
Vinsert
p14706
I42
VSimpleName: Object
p14707
tp14708
F0.5
s(g1583
I42
g1584
Vinsert
p14709
I42
VSimpleName: remEntries
p14710
tp14711
I1
s(g2677
I42
g2678
Vinsert
p14712
I42
VSimpleName: c
p14713
tp14714
I2
s(g4362
I42
g4363
Vinsert
p14715
I42
VSimpleName: bitOr
p14716
tp14717
F0.25
s(g2649
I42
g2650
Vinsert
p14718
I42
VSimpleName: ADD_ANNOTATIONS
p14719
tp14720
I1
s(g3841
I42
g3842
Vinsert
p14721
I40
VQualifiedName: APersistentMap.ValSeq
p14722
tp14723
I1
s(g5402
I42
g5403
Vinsert
p14724
I42
VSimpleName: Exception
p14725
tp14726
F0.5
s(g903
I42
g904
Vinsert
p14727
I42
VSimpleName: argexprs
p14728
tp14729
I1
s(g7618
I42
g7619
Vinsert
p14730
I42
VSimpleName: uncheckedLongCast
p14731
tp14732
F0.25
s(g11204
I42
g11205
Vinsert
p14733
I45
VStringLiteral: "Reflection warning, line: %d - call to %s can't be resolved.\u005cn"
p14734
tp14735
F0.25
s(g3633
I42
g3634
Vinsert
p14736
I32
VMethodInvocation
p14737
tp14738
I8
s(g5500
I42
g5501
Vinsert
p14739
I42
VSimpleName: C
p14740
tp14741
F0.5
s(g4267
I42
g4268
Vinsert
p14742
I10
VBreakStatement
p14743
tp14744
I1
s(g572
I42
g573
Vinsert
p14745
I39
VPrimitiveType: boolean
p14746
tp14747
F0.25
s(g5402
I42
g5403
Vinsert
p14748
I42
VSimpleName: reader
p14749
tp14750
I2
s(g4171
I42
g4172
Vinsert
p14751
I8
VBlock
p14752
tp14753
I4
s(g1573
I42
g1574
Vinsert
p14754
I43
VSimpleType: Exception
p14755
tp14756
F0.25
s(g2262
I42
g2263
Vinsert
p14757
I59
VVariableDeclarationFragment
p14758
tp14759
I21
s(g2914
I42
g2915
Vinsert
p14760
I36
VParenthesizedExpression
p14761
tp14762
I1
s(g3384
I42
g3385
Vinsert
p14763
I43
VSimpleType: Exception
p14764
tp14765
F0.25
s(g3290
I42
g3291
Vinsert
p14766
I52
VThisExpression
p14767
tp14768
F0.25
s(g11679
I42
g11680
Vinsert
p14769
I42
VSimpleName: dupX2
p14770
tp14771
I1
s(g857
I42
g858
Vinsert
p14772
I44
VSingleVariableDeclaration
p14773
tp14774
F2.25
s(g8576
I42
g8577
Vinsert
p14775
I42
VSimpleName: pop
p14776
tp14777
I1
s(g461
I42
g462
Vinsert
p14778
I42
VSimpleName: svuidFields
p14779
tp14780
I1
s(g3476
I42
g3477
Vinsert
p14781
I40
VQualifiedName: val.bipart
p14782
tp14783
F0.5
s(g1344
I42
g1345
Vinsert
p14784
I52
VThisExpression
p14785
tp14786
F0.5
s(g5802
I42
g5803
Vinsert
p14787
I42
VSimpleName: ins
p14788
tp14789
I3
s(g1558
I42
g1559
Vinsert
p14790
I42
VSimpleName: c
p14791
tp14792
I1
s(g3261
I42
g3262
Vinsert
p14793
I11
VCastExpression
p14794
tp14795
I3
s(g3500
I42
g3501
Vinsert
p14796
I27
VInfixExpression: ==
p14797
tp14798
I1
s(g1291
I42
g1292
Vinsert
p14799
I43
VSimpleType: Character
p14800
tp14801
F0.25
s(g4702
I42
g4703
Vinsert
p14802
I43
VSimpleType: TRef
p14803
tp14804
F0.25
s(g154
I42
g155
Vinsert
p14805
I25
VIfStatement
p14806
tp14807
I3
s(g2964
I42
g2965
Vinsert
p14808
I42
VSimpleName: set
p14809
tp14810
F0.25
s(g11747
I42
g11748
Vinsert
p14811
I42
VSimpleName: Sequential
p14812
tp14813
I1
s(g2969
I42
g2970
Vinsert
p14814
I22
VFieldAccess
p14815
tp14816
F0.25
s(g8369
I42
g8370
Vinsert
p14817
I42
VSimpleName: buckets
p14818
tp14819
I4
s(g3549
I42
g3550
Vinsert
p14820
I42
VSimpleName: meta
p14821
tp14822
I1
s(g1910
I42
g1911
Vinsert
p14823
I42
VSimpleName: getHistoryCount
p14824
tp14825
F0.25
s(g290
I42
g291
Vinsert
p14826
I34
VNumberLiteral: 0
p14827
tp14828
I1
s(g5050
I42
g5051
Vinsert
p14829
I42
VSimpleName: s
p14830
tp14831
F1.25
s(g36
I42
g37
Vinsert
p14832
I42
VSimpleName: gen
p14833
tp14834
F5.5
s(g6561
I42
g6562
Vinsert
p14835
I38
VPrefixExpression: !
p14836
tp14837
I1
s(g5759
I42
g5760
Vinsert
p14838
I42
VSimpleName: recordClass
p14839
tp14840
I1
s(g328
I42
g329
Vinsert
p14841
I43
VSimpleType: IllegalAccessError
p14842
tp14843
F0.5
s(g1238
I42
g1239
Vinsert
p14844
I39
VPrimitiveType: long
p14845
tp14846
F0.25
s(g4073
I42
g4074
Vinsert
p14847
I43
VSimpleType: Keyword
p14848
tp14849
I1
s(g842
I42
g843
Vinsert
p14850
I42
VSimpleName: Util
p14851
tp14852
I14
s(g1045
I42
g1046
Vinsert
p14853
I8
VBlock
p14854
tp14855
I3
s(g3330
I42
g3331
Vinsert
p14856
I83
VModifier: final
p14857
tp14858
F0.25
s(g333
I42
g334
Vinsert
p14859
I42
VSimpleName: emitKeyword
p14860
tp14861
F0.25
s(g3175
I42
g3176
Vinsert
p14862
I43
VSimpleType: Frame
p14863
tp14864
I1
s(g1243
I42
g1244
Vinsert
p14865
I21
VExpressionStatement
p14866
tp14867
F0.25
s(g5214
I42
g5215
Vinsert
p14868
I52
VThisExpression
p14869
tp14870
F0.25
s(g5500
I42
g5501
Vinsert
p14871
I42
VSimpleName: fn
p14872
tp14873
F0.5
s(g290
I42
g291
Vinsert
p14874
I21
VExpressionStatement
p14875
tp14876
I1
s(g2122
I42
g2123
Vinsert
p14877
I43
VSimpleType: Symbol
p14878
tp14879
F0.5
s(g1401
I42
g1402
Vinsert
p14880
I42
VSimpleName: cache
p14881
tp14882
F0.25
s(g505
I42
g506
Vinsert
p14883
I42
VSimpleName: val
p14884
tp14885
F4.5
s(g1456
I42
g1457
Vinsert
p14886
I45
VStringLiteral: "No method of interface: "
p14887
tp14888
I1
s(g3290
I42
g3291
Vinsert
p14889
I42
VSimpleName: gen
p14890
tp14891
F3.25
s(g3161
I42
g3162
Vinsert
p14892
I70
VEnhancedForStatement
p14893
tp14894
I1
s(g955
I42
g956
Vinsert
p14895
I8
VBlock
p14896
tp14897
I1
s(g2983
I42
g2984
Vinsert
p14898
I27
VInfixExpression: ||
p14899
tp14900
I1
s(g6377
I42
g6378
Vinsert
p14901
I36
VParenthesizedExpression
p14902
tp14903
F5.5
s(g1535
I42
g1536
Vinsert
p14904
I33
VNullLiteral
p14905
tp14906
I1
s(g11679
I42
g11680
Vinsert
p14907
I42
VSimpleName: objx
p14908
tp14909
I1
s(g3681
I42
g3682
Vinsert
p14910
I59
VVariableDeclarationFragment
p14911
tp14912
I2
s(g1162
I42
g1163
Vinsert
p14913
I27
VInfixExpression: !=
p14914
tp14915
I1
s(g10288
I42
g10289
Vinsert
p14916
I33
VNullLiteral
p14917
tp14918
I5
s(g10180
I42
g10181
Vinsert
p14919
I42
VSimpleName: fn
p14920
tp14921
I6
s(g4856
I42
g4857
Vinsert
p14922
I11
VCastExpression
p14923
tp14924
I1
s(g1147
I42
g1148
Vinsert
p14925
I78
VMarkerAnnotation
p14926
tp14927
F0.25
s(g2397
I42
g2398
Vinsert
p14928
I32
VMethodInvocation
p14929
tp14930
I3
s(g295
I42
g296
Vinsert
p14931
I44
VSingleVariableDeclaration
p14932
tp14933
F0.25
s(g3717
I42
g3718
Vinsert
p14934
I42
VSimpleName: count
p14935
tp14936
I2
s(g4845
I42
g4846
Vinsert
p14937
I42
VSimpleName: CLOJURE_MAIN_NS
p14938
tp14939
I1
s(g661
I42
g662
Vinsert
p14940
I42
VSimpleName: target
p14941
tp14942
F0.25
s(g5228
I42
g5229
Vinsert
p14943
I40
VQualifiedName: PersistentVector.EMPTY
p14944
tp14945
I1
s(g2387
I42
g2388
Vinsert
p14946
I41
VReturnStatement
p14947
tp14948
I2
s(g5130
I42
g5131
Vinsert
p14949
I42
VSimpleName: fromIndex
p14950
tp14951
F0.25
s(g1874
I42
g1875
Vinsert
p14952
I21
VExpressionStatement
p14953
tp14954
F3.25
s(g676
I42
g677
Vinsert
p14955
I42
VSimpleName: x
p14956
tp14957
F2.5
s(g686
I42
g687
Vinsert
p14958
I85
VDimension
p14959
tp14960
I1
s(g6092
I42
g6093
Vinsert
p14961
I7
VAssignment: ^=
p14962
tp14963
I1
s(g3161
I42
g3162
Vinsert
p14964
I44
VSingleVariableDeclaration
p14965
tp14966
I1
s(g646
I42
g647
Vinsert
p14967
I42
VSimpleName: other
p14968
tp14969
I1
s(g144
I42
g145
Vinsert
p14970
I8
VBlock
p14971
tp14972
I5
s(g5055
I42
g5056
Vinsert
p14973
I8
VBlock
p14974
tp14975
I1
s(g973
I42
g974
Vinsert
p14976
I32
VMethodInvocation
p14977
tp14978
I2
s(g1900
I42
g1901
Vinsert
p14979
I43
VSimpleType: ConstantExpr
p14980
tp14981
I1
s(g6
I42
g7
Vinsert
p14982
I27
VInfixExpression: !=
p14983
tp14984
I22
s(g5214
I42
g5215
Vinsert
p14985
I42
VSimpleName: av
p14986
tp14987
F2.5
s(g4932
I42
g4933
Vinsert
p14988
I42
VSimpleName: arg15
p14989
tp14990
F0.5
s(g1258
I42
g1259
Vinsert
p14991
I8
VBlock
p14992
tp14993
I1
s(g2244
I42
g2245
Vinsert
p14994
I43
VSimpleType: Exception
p14995
tp14996
I1
s(g6921
I42
g6922
Vinsert
p14997
I42
VSimpleName: next
p14998
tp14999
F7.75
s(g1233
I42
g1234
Vinsert
p15000
I42
VSimpleName: y
p15001
tp15002
F0.25
s(g6946
I42
g6947
Vinsert
p15003
I42
VSimpleName: loadClassForName
p15004
tp15005
F0.25
s(g3999
I42
g4000
Vinsert
p15006
I37
VPostfixExpression: ++
p15007
tp15008
I1
s(g8138
I42
g8139
Vinsert
p15009
I45
VStringLiteral: "Sets *ns* to the namespace named by the symbol, creating it if needed."
p15010
tp15011
I1
s(g2145
I42
g2146
Vinsert
p15012
I42
VSimpleName: T
p15013
tp15014
I1
s(g12455
I42
g12456
Vinsert
p15015
I83
VModifier: public
p15016
tp15017
F0.75
s(g8494
I42
g8495
Vinsert
p15018
I42
VSimpleName: xs
p15019
tp15020
I2
s(g955
I42
g956
Vinsert
p15021
I14
VClassInstanceCreation
p15022
tp15023
I2
s(g8821
I42
g8822
Vinsert
p15024
I8
VBlock
p15025
tp15026
I2
s(Vinsert
p15027
I42
VSimpleName: first
p15028
Vinsert
p15029
I42
VSimpleName: Keyword
p15030
tp15031
I2
s(g681
I42
g682
Vinsert
p15032
I42
VSimpleName: PersistentVector
p15033
tp15034
I1
s(g3986
I42
g3987
Vinsert
p15035
I42
VSimpleName: read
p15036
tp15037
I1
s(g4303
I42
g4304
Vinsert
p15038
I42
VSimpleName: LineNumberReader
p15039
tp15040
I1
s(g852
I42
g853
Vinsert
p15041
I43
VSimpleType: Object
p15042
tp15043
I1
s(g6770
I42
g6771
Vinsert
p15044
I27
VInfixExpression: ==
p15045
tp15046
I1
s(g6140
I42
g6141
Vinsert
p15047
I60
VVariableDeclarationStatement
p15048
tp15049
I1
s(g1027
I42
g1028
Vinsert
p15050
I25
VIfStatement
p15051
tp15052
I1
s(g908
I42
g909
Vinsert
p15053
I42
VSimpleName: visitTryCatchBlock
p15054
tp15055
I1
s(g3991
I42
g3992
Vinsert
p15056
I52
VThisExpression
p15057
tp15058
F1.25
s(g1391
I42
g1392
Vinsert
p15059
I43
VSimpleType: Object
p15060
tp15061
I4
s(g1962
I42
g1963
Vinsert
p15062
I7
VAssignment: =
p15063
tp15064
I2
s(g7714
I42
g7715
Vinsert
p15065
I83
VModifier: public
p15066
tp15067
F1.25
s(g179
I42
g180
Vinsert
p15068
I43
VSimpleType: String
p15069
tp15070
I6
s(g699
I42
g700
Vinsert
p15071
I42
VSimpleName: p
p15072
tp15073
I1
s(g2542
I42
g2543
Vinsert
p15074
I42
VSimpleName: form
p15075
tp15076
I2
s(g456
I42
g457
Vinsert
p15077
I60
VVariableDeclarationStatement
p15078
tp15079
I1
s(Vinsert
p15080
I42
VSimpleName: ret1
p15081
Vinsert
p15082
I42
VSimpleName: arg4
p15083
tp15084
I1
s(g9388
I42
g9389
Vinsert
p15085
I42
VSimpleName: doInvoke
p15086
tp15087
I1
s(g7520
I42
g7521
Vinsert
p15088
I42
VSimpleName: Expr
p15089
tp15090
I2
s(g1634
I42
g1635
Vinsert
p15091
I11
VCastExpression
p15092
tp15093
I1
s(g174
I42
g175
Vinsert
p15094
I42
VSimpleName: f
p15095
tp15096
I1
s(g7649
I42
g7650
Vinsert
p15097
I21
VExpressionStatement
p15098
tp15099
I3
s(g4046
I42
g4047
Vinsert
p15100
I60
VVariableDeclarationStatement
p15101
tp15102
I3
s(g11896
I42
g11897
Vinsert
p15103
I45
VStringLiteral: "*refers*"
p15104
tp15105
I1
s(g3654
I42
g3655
Vinsert
p15106
I42
VSimpleName: im
p15107
tp15108
I1
s(g6941
I42
g6942
Vinsert
p15109
I42
VSimpleName: StringBuffer
p15110
tp15111
I2
s(g5264
I42
g5265
Vinsert
p15112
I43
VSimpleType: String
p15113
tp15114
I1
s(g1887
I42
g1888
Vinsert
p15115
I42
VSimpleName: star3
p15116
tp15117
I1
s(g968
I42
g969
Vinsert
p15118
I25
VIfStatement
p15119
tp15120
I3
s(g426
I42
g427
Vinsert
p15121
I42
VSimpleName: intern
p15122
tp15123
I1
s(g1391
I42
g1392
Vinsert
p15124
I42
VSimpleName: init
p15125
tp15126
I2
s(g1263
I42
g1264
Vinsert
p15127
I43
VSimpleType: TVal
p15128
tp15129
F2.25
s(g2909
I42
g2910
Vinsert
p15130
I42
VSimpleName: doCompare
p15131
tp15132
I1
s(g2310
I42
g2311
Vinsert
p15133
I42
VSimpleName: Ops
p15134
tp15135
F0.75
s(g4689
I42
g4690
Vinsert
p15136
I42
VSimpleName: node
p15137
tp15138
I3
s(g8729
I42
g8730
Vinsert
p15139
I42
VSimpleName: find
p15140
tp15141
I1
s(g5122
I42
g5123
Vinsert
p15142
I58
VVariableDeclarationExpression
p15143
tp15144
I7
s(g7480
I42
g7481
Vinsert
p15145
I42
VSimpleName: IPersistentMap
p15146
tp15147
F3.25
s(g1339
I42
g1340
Vinsert
p15148
I42
VSimpleName: KeywordCallSite
p15149
tp15150
I2
s(g7669
I42
g7670
Vinsert
p15151
I42
VSimpleName: api
p15152
tp15153
F0.5
s(g5592
I42
g5593
Vinsert
p15154
I21
VExpressionStatement
p15155
tp15156
I2
s(g26
I42
g27
Vinsert
p15157
I42
VSimpleName: RestFn
p15158
tp15159
I2
s(g1563
I42
g1564
Vinsert
p15160
I60
VVariableDeclarationStatement
p15161
tp15162
I2
s(g421
I42
g422
Vinsert
p15163
I39
VPrimitiveType: char
p15164
tp15165
I1
s(g6
I42
g7
Vinsert
p15166
I24
VForStatement
p15167
tp15168
I19
s(g2186
I42
g2187
Vinsert
p15169
I83
VModifier: public
p15170
tp15171
F0.5
s(g1037
I42
g1038
Vinsert
p15172
I42
VSimpleName: ACC_PUBLIC
p15173
tp15174
I1
s(g750
I42
g751
Vinsert
p15175
I42
VSimpleName: Cons
p15176
tp15177
F0.25
s(g5788
I42
g5789
Vinsert
p15178
I31
VMethodDeclaration
p15179
tp15180
F0.5
s(g12920
I42
g12921
Vinsert
p15181
I43
VSimpleType: CatchClause
p15182
tp15183
I2
s(g3405
I42
g3406
Vinsert
p15184
I42
VSimpleName: Writer
p15185
tp15186
I2
s(g11747
I42
g11748
Vinsert
p15187
I42
VSimpleName: o
p15188
tp15189
F3.75
s(g10180
I42
g10181
Vinsert
p15190
I42
VSimpleName: Exception
p15191
tp15192
F3.75
s(g3151
I42
g3152
Vinsert
p15193
I42
VSimpleName: Object
p15194
tp15195
F0.75
s(g6059
I42
g6060
Vinsert
p15196
I42
VSimpleName: Object
p15197
tp15198
F1.25
s(g5802
I42
g5803
Vinsert
p15199
I32
VMethodInvocation
p15200
tp15201
I2
s(g1520
I42
g1521
Vinsert
p15202
I42
VSimpleName: argType
p15203
tp15204
I1
s(g1817
I42
g1818
Vinsert
p15205
I42
VSimpleName: format
p15206
tp15207
I1
s(g1866
I42
g1867
Vinsert
p15208
I32
VMethodInvocation
p15209
tp15210
I1
s(g1368
I42
g1369
Vinsert
p15211
I31
VMethodDeclaration
p15212
tp15213
F1.25
s(g1553
I42
g1554
Vinsert
p15214
I14
VClassInstanceCreation
p15215
tp15216
I1
s(g4343
I42
g4344
Vinsert
p15217
I42
VSimpleName: gen
p15218
tp15219
F11.5
s(g628
I42
g629
Vinsert
p15220
I42
VSimpleName: _key
p15221
tp15222
F0.5
s(g2615
I42
g2616
Vinsert
p15223
I42
VSimpleName: get
p15224
tp15225
I1
s(g5664
I42
g5665
Vinsert
p15226
I42
VSimpleName: RT
p15227
tp15228
I3
s(g1474
I42
g1475
Vinsert
p15229
I42
VSimpleName: Keyword
p15230
tp15231
I1
s(Vinsert
p15232
I42
VSimpleName: list
p15233
Vinsert
p15234
I42
VSimpleName: arg5
p15235
tp15236
F0.5
s(g3981
I42
g3982
Vinsert
p15237
I43
VSimpleType: Num
p15238
tp15239
F0.5
s(g1563
I42
g1564
Vinsert
p15240
I42
VSimpleName: Exception
p15241
tp15242
F0.25
s(g1856
I42
g1857
Vinsert
p15243
I9
VBooleanLiteral: true
p15244
tp15245
F0.25
s(g786
I42
g787
Vinsert
p15246
I34
VNumberLiteral: 4
p15247
tp15248
I1
s(g760
I42
g761
Vinsert
p15249
I7
VAssignment: =
p15250
tp15251
I1
s(g3092
I42
g3093
Vinsert
p15252
I39
VPrimitiveType: int
p15253
tp15254
F4.25
s(g686
I42
g687
Vinsert
p15255
I60
VVariableDeclarationStatement
p15256
tp15257
I4
s(g3300
I42
g3301
Vinsert
p15258
I42
VSimpleName: transaction
p15259
tp15260
I2
s(g4046
I42
g4047
Vinsert
p15261
I39
VPrimitiveType: int
p15262
tp15263
I2
s(g3251
I42
g3252
Vinsert
p15264
I42
VSimpleName: removed
p15265
tp15266
I1
s(g6409
I42
g6410
Vinsert
p15267
I21
VExpressionStatement
p15268
tp15269
I1
s(g2239
I42
g2240
Vinsert
p15270
I40
VQualifiedName: ns.name.name
p15271
tp15272
I1
s(g4924
I42
g4925
Vinsert
p15273
I42
VSimpleName: Iterable
p15274
tp15275
I1
s(g295
I42
g296
Vinsert
p15276
I8
VBlock
p15277
tp15278
I1
s(g4161
I42
g4162
Vinsert
p15279
I42
VSimpleName: value
p15280
tp15281
I1
s(g247
I42
g248
Vinsert
p15282
I59
VVariableDeclarationFragment
p15283
tp15284
I1
s(g1213
I42
g1214
Vinsert
p15285
I42
VSimpleName: create
p15286
tp15287
F0.5
s(g257
I42
g258
Vinsert
p15288
I42
VSimpleName: V
p15289
tp15290
I1
s(g3121
I42
g3122
Vinsert
p15291
I11
VCastExpression
p15292
tp15293
I4
s(g699
I42
g700
Vinsert
p15294
I27
VInfixExpression: &&
p15295
tp15296
I1
s(g2803
I42
g2804
Vinsert
p15297
I42
VSimpleName: csym
p15298
tp15299
I1
s(g4295
I42
g4296
Vinsert
p15300
I42
VSimpleName: MAX_POSITIONAL_ARITY
p15301
tp15302
F0.5
s(g1223
I42
g1224
Vinsert
p15303
I42
VSimpleName: e
p15304
tp15305
I6
s(g497
I42
g498
Vinsert
p15306
I42
VSimpleName: sym
p15307
tp15308
I1
s(g603
I42
g604
Vinsert
p15309
I40
VQualifiedName: java.util.Map.Entry
p15310
tp15311
F0.25
s(g1967
I42
g1968
Vinsert
p15312
I42
VSimpleName: create
p15313
tp15314
F0.25
s(g1573
I42
g1574
Vinsert
p15315
I42
VSimpleName: Transaction
p15316
tp15317
I1
s(g2397
I42
g2398
Vinsert
p15318
I42
VSimpleName: mv
p15319
tp15320
I5
s(g262
I42
g263
Vinsert
p15321
I42
VSimpleName: Number
p15322
tp15323
I1
s(g5528
I42
g5529
Vinsert
p15324
I42
VSimpleName: n
p15325
tp15326
I1
s(g1050
I42
g1051
Vinsert
p15327
I42
VSimpleName: ELIDE_META_PROP
p15328
tp15329
I1
s(g12455
I42
g12456
Vinsert
p15330
I42
VSimpleName: bipart
p15331
tp15332
I2
s(g2814
I42
g2815
Vinsert
p15333
I45
VStringLiteral: "identity"
p15334
tp15335
F0.25
s(g10667
I42
g10668
Vinsert
p15336
I42
VSimpleName: sites
p15337
tp15338
I2
s(g3161
I42
g3162
Vinsert
p15339
I34
VNumberLiteral: 0
p15340
tp15341
I2
s(g1949
I42
g1950
Vinsert
p15342
I45
VStringLiteral: "\u005cn"
p15343
tp15344
I1
s(g214
I42
g215
Vinsert
p15345
I11
VCastExpression
p15346
tp15347
I8
s(g343
I42
g344
Vinsert
p15348
I42
VSimpleName: getParent
p15349
tp15350
I1
s(g21
I42
g22
Vinsert
p15351
I59
VVariableDeclarationFragment
p15352
tp15353
F2.25
s(g5832
I42
g5833
Vinsert
p15354
I25
VIfStatement
p15355
tp15356
F8.25
s(Vinsert
p15357
I42
VSimpleName: emit
p15358
Vinsert
p15359
I42
VSimpleName: excExpr
p15360
tp15361
I1
s(g2145
I42
g2146
Vinsert
p15362
I42
VSimpleName: Writer
p15363
tp15364
I1
s(g4663
I42
g4664
Vinsert
p15365
I42
VSimpleName: c
p15366
tp15367
F0.25
s(g15027
I42
g15028
Vinsert
p15368
I42
VSimpleName: k
p15369
tp15370
I1
s(g4718
I42
g4719
Vinsert
p15371
I43
VSimpleType: Exception
p15372
tp15373
F0.75
s(g2145
I42
g2146
Vinsert
p15374
I42
VSimpleName: equal
p15375
tp15376
I1
s(g5100
I42
g5101
Vinsert
p15377
I11
VCastExpression
p15378
tp15379
I2
s(g11015
I42
g11016
Vinsert
p15380
I27
VInfixExpression: ==
p15381
tp15382
I1
s(g3934
I42
g3935
Vinsert
p15383
I42
VSimpleName: Integer
p15384
tp15385
I2
s(g4295
I42
g4296
Vinsert
p15386
I42
VSimpleName: i
p15387
tp15388
I5
s(g3565
I42
g3566
Vinsert
p15389
I31
VMethodDeclaration
p15390
tp15391
F0.25
s(g4702
I42
g4703
Vinsert
p15392
I40
VQualifiedName: PersistentHashMap.EMPTY
p15393
tp15394
F0.25
s(g1147
I42
g1148
Vinsert
p15395
I42
VSimpleName: jdx
p15396
tp15397
I1
s(g4497
I42
g4498
Vinsert
p15398
I42
VSimpleName: String
p15399
tp15400
I3
s(g6879
I42
g6880
Vinsert
p15401
I45
VStringLiteral: "Callable"
p15402
tp15403
I1
s(g4754
I42
g4755
Vinsert
p15404
I11
VCastExpression
p15405
tp15406
I1
s(g1707
I42
g1708
Vinsert
p15407
I8
VBlock
p15408
tp15409
I1
s(g2244
I42
g2245
Vinsert
p15410
I42
VSimpleName: comp
p15411
tp15412
I1
s(g1063
I42
g1064
Vinsert
p15413
I53
VThrowStatement
p15414
tp15415
I3
s(g6076
I42
g6077
Vinsert
p15416
I42
VSimpleName: coll
p15417
tp15418
I1
s(g1972
I42
g1973
Vinsert
p15419
I27
VInfixExpression: <
p15420
tp15421
I1
s(g1094
I42
g1095
Vinsert
p15422
I42
VSimpleName: category
p15423
tp15424
F0.25
s(g3121
I42
g3122
Vinsert
p15425
I41
VReturnStatement
p15426
tp15427
F2.25
s(g3923
I42
g3924
Vinsert
p15428
I43
VSimpleType: Map
p15429
tp15430
I1
s(g799
I42
g800
Vinsert
p15431
I41
VReturnStatement
p15432
tp15433
I1
s(g12455
I42
g12456
Vinsert
p15434
I42
VSimpleName: BigDecimal
p15435
tp15436
F1.25
s(g1765
I42
g1766
Vinsert
p15437
I62
VInstanceofExpression
p15438
tp15439
I6
s(g867
I42
g868
Vinsert
p15440
I43
VSimpleType: ITransientMap
p15441
tp15442
I1
s(g2711
I42
g2712
Vinsert
p15443
I43
VSimpleType: String
p15444
tp15445
F0.5
s(g1268
I42
g1269
Vinsert
p15446
I7
VAssignment: =
p15447
tp15448
I1
s(g2140
I42
g2141
Vinsert
p15449
I42
VSimpleName: InvocationTargetException
p15450
tp15451
I1
s(g2991
I42
g2992
Vinsert
p15452
I45
VStringLiteral: "float floatCast(Object)"
p15453
tp15454
I1
s(g730
I42
g731
Vinsert
p15455
I52
VThisExpression
p15456
tp15457
I1
s(g7113
I42
g7114
Vinsert
p15458
I45
VStringLiteral: ""
p15459
tp15460
I1
s(g5402
I42
g5403
Vinsert
p15461
I39
VPrimitiveType: int
p15462
tp15463
I5
s(g9218
I42
g9219
Vinsert
p15464
I45
VStringLiteral: "Too few arguments to throw, throw expects a single Throwable instance"
p15465
tp15466
I1
s(g10667
I42
g10668
Vinsert
p15467
I34
VNumberLiteral: 0
p15468
tp15469
I1
s(g5055
I42
g5056
Vinsert
p15470
I43
VSimpleType: Cons
p15471
tp15472
I1
s(g12554
I42
g12555
Vinsert
p15473
I53
VThrowStatement
p15474
tp15475
I1
s(g11126
I42
g11127
Vinsert
p15476
I42
VSimpleName: InheritableThreadLocal
p15477
tp15478
I1
s(g8273
I42
g8274
Vinsert
p15479
I32
VMethodInvocation
p15480
tp15481
I4
s(g7528
I42
g7529
Vinsert
p15482
I42
VSimpleName: Object
p15483
tp15484
F0.5
s(g730
I42
g731
Vinsert
p15485
I33
VNullLiteral
p15486
tp15487
I1
s(g8706
I42
g8707
Vinsert
p15488
I42
VSimpleName: threadBindings
p15489
tp15490
I2
s(g26
I42
g27
Vinsert
p15491
I42
VSimpleName: getType
p15492
tp15493
I1
s(g3033
I42
g3034
Vinsert
p15494
I13
VCharacterLiteral: '/'
p15495
tp15496
I1
s(g7574
I42
g7575
Vinsert
p15497
I43
VSimpleType: PersistentVector
p15498
tp15499
I2
s(g5055
I42
g5056
Vinsert
p15500
I42
VSimpleName: ThreadLocalData
p15501
tp15502
F0.25
s(g618
I42
g619
Vinsert
p15503
I45
VStringLiteral: "true"
p15504
tp15505
I1
s(g2803
I42
g2804
Vinsert
p15506
I42
VSimpleName: length
p15507
tp15508
I1
s(g3151
I42
g3152
Vinsert
p15509
I43
VSimpleType: IParser
p15510
tp15511
F0.25
s(g411
I42
g412
Vinsert
p15512
I42
VSimpleName: Cons
p15513
tp15514
F0.25
s(g3400
I42
g3401
Vinsert
p15515
I43
VSimpleType: PrintWriter
p15516
tp15517
I1
s(g542
I42
g543
Vinsert
p15518
I7
VAssignment: +=
p15519
tp15520
I1
s(g3619
I42
g3620
Vinsert
p15521
I42
VSimpleName: val
p15522
tp15523
I1
s(g3541
I42
g3542
Vinsert
p15524
I7
VAssignment: =
p15525
tp15526
I3
s(g3841
I42
g3842
Vinsert
p15527
I42
VSimpleName: IPersistentMap
p15528
tp15529
F1.25
s(g3767
I42
g3768
Vinsert
p15530
I43
VSimpleType: BigDecimal
p15531
tp15532
I1
s(g313
I42
g314
Vinsert
p15533
I42
VSimpleName: Object
p15534
tp15535
F1.0
s(g636
I42
g637
Vinsert
p15536
I7
VAssignment: =
p15537
tp15538
I4
s(g2164
I42
g2165
Vinsert
p15539
I46
VSuperConstructorInvocation
p15540
tp15541
F0.25
s(g1396
I42
g1397
Vinsert
p15542
I8
VBlock
p15543
tp15544
I4
s(g2940
I42
g2941
Vinsert
p15545
I33
VNullLiteral
p15546
tp15547
I1
s(g7480
I42
g7481
Vinsert
p15548
I42
VSimpleName: mm
p15549
tp15550
I2
s(g4497
I42
g4498
Vinsert
p15551
I53
VThrowStatement
p15552
tp15553
I4
s(g999
I42
g1000
Vinsert
p15554
I42
VSimpleName: cv
p15555
tp15556
I1
s(g4156
I42
g4157
Vinsert
p15557
I42
VSimpleName: arglist
p15558
tp15559
I25
s(g6103
I42
g6104
Vinsert
p15560
I43
VSimpleType: IPersistentCollection
p15561
tp15562
I3
s(g608
I42
g609
Vinsert
p15563
I8
VBlock
p15564
tp15565
I1
s(g1925
I42
g1926
Vinsert
p15566
I42
VSimpleName: collection
p15567
tp15568
F1.25
s(g7491
I42
g7492
Vinsert
p15569
I33
VNullLiteral
p15570
tp15571
I1
s(g1807
I42
g1808
Vinsert
p15572
I42
VSimpleName: nth
p15573
tp15574
I1
s(g471
I42
g472
Vinsert
p15575
I16
VConditionalExpression
p15576
tp15577
F0.25
s(g1962
I42
g1963
Vinsert
p15578
I21
VExpressionStatement
p15579
tp15580
I2
s(g2596
I42
g2597
Vinsert
p15581
I34
VNumberLiteral: 1
p15582
tp15583
F3.25
s(g3875
I42
g3876
Vinsert
p15584
I42
VSimpleName: i
p15585
tp15586
I2
s(g5325
I42
g5326
Vinsert
p15587
I42
VSimpleName: getParameterTypes
p15588
tp15589
I1
s(g3175
I42
g3176
Vinsert
p15590
I7
VAssignment: =
p15591
tp15592
I2
s(g9320
I42
g9321
Vinsert
p15593
I42
VSimpleName: context
p15594
tp15595
I1
s(g1662
I42
g1663
Vinsert
p15596
I42
VSimpleName: IObj
p15597
tp15598
I1
s(g12455
I42
g12456
Vinsert
p15599
I40
VQualifiedName: java.math.BigDecimal
p15600
tp15601
F0.25
s(g3400
I42
g3401
Vinsert
p15602
I32
VMethodInvocation
p15603
tp15604
I2
s(g2830
I42
g2831
Vinsert
p15605
I42
VSimpleName: Array
p15606
tp15607
I2
s(g9218
I42
g9219
Vinsert
p15608
I25
VIfStatement
p15609
tp15610
F14.0
s(g2803
I42
g2804
Vinsert
p15611
I7
VAssignment: =
p15612
tp15613
I1
s(g5111
I42
g5112
Vinsert
p15614
I42
VSimpleName: RT_TYPE
p15615
tp15616
I1
s(g1316
I42
g1317
Vinsert
p15617
I39
VPrimitiveType: int
p15618
tp15619
F1.5
s(g189
I42
g190
Vinsert
p15620
I27
VInfixExpression: ==
p15621
tp15622
I2
s(g466
I42
g467
Vinsert
p15623
I11
VCastExpression
p15624
tp15625
I1
s(g3365
I42
g3366
Vinsert
p15626
I42
VSimpleName: Var
p15627
tp15628
I3
s(g1866
I42
g1867
Vinsert
p15629
I40
VQualifiedName: ClassWriter.FLOAT
p15630
tp15631
I1
s(g13264
I42
g13265
Vinsert
p15632
I44
VSingleVariableDeclaration
p15633
tp15634
I2
s(g154
I42
g155
Vinsert
p15635
I62
VInstanceofExpression
p15636
tp15637
I3
s(g552
I42
g553
Vinsert
p15638
I45
VStringLiteral: "__hash"
p15639
tp15640
I1
s(g4932
I42
g4933
Vinsert
p15641
I43
VSimpleType: Exception
p15642
tp15643
F0.75
s(g119
I42
g120
Vinsert
p15644
I32
VMethodInvocation
p15645
tp15646
F1.5
s(g4937
I42
g4938
Vinsert
p15647
I43
VSimpleType: Var
p15648
tp15649
F4.25
s(g968
I42
g969
Vinsert
p15650
I42
VSimpleName: clinitgen
p15651
tp15652
I2
s(g406
I42
g407
Vinsert
p15653
I42
VSimpleName: ret
p15654
tp15655
I3
s(g1832
I42
g1833
Vinsert
p15656
I42
VSimpleName: ns
p15657
tp15658
I2
s(g363
I42
g364
Vinsert
p15659
I42
VSimpleName: proxy
p15660
tp15661
I1
s(g8545
I42
g8546
Vinsert
p15662
I23
VFieldDeclaration
p15663
tp15664
F0.25
s(g1936
I42
g1937
Vinsert
p15665
I39
VPrimitiveType: int
p15666
tp15667
I1
s(g646
I42
g647
Vinsert
p15668
I60
VVariableDeclarationStatement
p15669
tp15670
I2
s(g2122
I42
g2123
Vinsert
p15671
I32
VMethodInvocation
p15672
tp15673
I3
s(g2914
I42
g2915
Vinsert
p15674
I42
VSimpleName: bipart
p15675
tp15676
I1
s(g9948
I42
g9949
Vinsert
p15677
I43
VSimpleType: DynamicVar
p15678
tp15679
I1
s(g2578
I42
g2579
Vinsert
p15680
I42
VSimpleName: mv
p15681
tp15682
I2
s(g1925
I42
g1926
Vinsert
p15683
I42
VSimpleName: containsAll
p15684
tp15685
F0.25
s(g5556
I42
g5557
Vinsert
p15686
I42
VSimpleName: a
p15687
tp15688
I2
s(g1
I42
g2
Vinsert
p15689
I32
VMethodInvocation
p15690
tp15691
I1
s(g3087
I42
g3088
Vinsert
p15692
I42
VSimpleName: getInstanceField
p15693
tp15694
I1
s(g3110
I42
g3111
Vinsert
p15695
I83
VModifier: public
p15696
tp15697
F0.25
s(g1611
I42
g1612
Vinsert
p15698
I27
VInfixExpression: &&
p15699
tp15700
I1
s(g4924
I42
g4925
Vinsert
p15701
I43
VSimpleType: IReduceInit
p15702
tp15703
I1
s(g6021
I42
g6022
Vinsert
p15704
I9
VBooleanLiteral: false
p15705
tp15706
I1
s(g3100
I42
g3101
Vinsert
p15707
I42
VSimpleName: withMeta
p15708
tp15709
F0.25
s(g2002
I42
g2003
Vinsert
p15710
I27
VInfixExpression: ==
p15711
tp15712
I1
s(g646
I42
g647
Vinsert
p15713
I59
VVariableDeclarationFragment
p15714
tp15715
I2
s(g593
I42
g594
Vinsert
p15716
I60
VVariableDeclarationStatement
p15717
tp15718
I1
s(g3783
I42
g3784
Vinsert
p15719
I22
VFieldAccess
p15720
tp15721
F4.25
s(g5055
I42
g5056
Vinsert
p15722
I42
VSimpleName: binding
p15723
tp15724
I1
s(g2891
I42
g2892
Vinsert
p15725
I42
VSimpleName: lng
p15726
tp15727
I2
s(g4166
I42
g4167
Vinsert
p15728
I42
VSimpleName: t
p15729
tp15730
F1.25
s(Vinsert
p15731
I42
VSimpleName: next
p15732
Vinsert
p15733
I36
VParenthesizedExpression
p15734
tp15735
I3
s(g1094
I42
g1095
Vinsert
p15736
I43
VSimpleType: Object
p15737
tp15738
F0.75
s(g6696
I42
g6697
Vinsert
p15739
I42
VSimpleName: name
p15740
tp15741
I4
s(g5960
I42
g5961
Vinsert
p15742
I32
VMethodInvocation
p15743
tp15744
I2
s(g4303
I42
g4304
Vinsert
p15745
I83
VModifier: public
p15746
tp15747
F0.25
s(g3300
I42
g3301
Vinsert
p15748
I59
VVariableDeclarationFragment
p15749
tp15750
I2
s(g386
I42
g387
Vinsert
p15751
I41
VReturnStatement
p15752
tp15753
F1.25
s(g1770
I42
g1771
Vinsert
p15754
I32
VMethodInvocation
p15755
tp15756
I1
s(g6455
I42
g6456
Vinsert
p15757
I43
VSimpleType: Object
p15758
tp15759
F1.5
s(g2451
I42
g2452
Vinsert
p15760
I42
VSimpleName: getParameterTypes
p15761
tp15762
I1
s(g2451
I42
g2452
Vinsert
p15763
I22
VFieldAccess
p15764
tp15765
I1
s(g2042
I42
g2043
Vinsert
p15766
I42
VSimpleName: Ratio
p15767
tp15768
I2
s(g1414
I42
g1415
Vinsert
p15769
I43
VSimpleType: PersistentArrayMap
p15770
tp15771
I1
s(g13739
I42
g13740
Vinsert
p15772
I54
VTryStatement
p15773
tp15774
I1
s(g119
I42
g120
Vinsert
p15775
I43
VSimpleType: Compiler
p15776
tp15777
I1
s(g3295
I42
g3296
Vinsert
p15778
I41
VReturnStatement
p15779
tp15780
F0.25
s(Vinsert
p15781
I42
VSimpleName: count
p15782
Vinsert
p15783
I42
VSimpleName: initProvided
p15784
tp15785
F1.0
s(g1414
I42
g1415
Vinsert
p15786
I42
VSimpleName: PersistentHashMap
p15787
tp15788
I2
s(g3146
I42
g3147
Vinsert
p15789
I42
VSimpleName: val
p15790
tp15791
F0.25
s(g3522
I42
g3523
Vinsert
p15792
I42
VSimpleName: RT
p15793
tp15794
I2
s(g3295
I42
g3296
Vinsert
p15795
I42
VSimpleName: Type
p15796
tp15797
F0.25
s(g5380
I42
g5381
Vinsert
p15798
I42
VSimpleName: UTF8
p15799
tp15800
I1
s(g770
I42
g771
Vinsert
p15801
I60
VVariableDeclarationStatement
p15802
tp15803
I3
s(g8545
I42
g8546
Vinsert
p15804
I42
VSimpleName: lock
p15805
tp15806
F0.25
s(g1218
I42
g1219
Vinsert
p15807
I42
VSimpleName: v
p15808
tp15809
I2
s(g583
I42
g584
Vinsert
p15810
I34
VNumberLiteral: 0
p15811
tp15812
I1
s(g3591
I42
g3592
Vinsert
p15813
I42
VSimpleName: close
p15814
tp15815
I1
s(g5982
I42
g5983
Vinsert
p15816
I43
VSimpleType: IllegalStateException
p15817
tp15818
I2
s(g1045
I42
g1046
Vinsert
p15819
I11
VCastExpression
p15820
tp15821
I4
s(g1515
I42
g1516
Vinsert
p15822
I42
VSimpleName: GeneratorAdapter
p15823
tp15824
F0.25
s(g1540
I42
g1541
Vinsert
p15825
I39
VPrimitiveType: long
p15826
tp15827
F0.5
s(g2591
I42
g2592
Vinsert
p15828
I45
VStringLiteral: "AbstractMethodError"
p15829
tp15830
I1
s(g3814
I42
g3815
Vinsert
p15831
I42
VSimpleName: hist
p15832
tp15833
I1
s(g4612
I42
g4613
Vinsert
p15834
I43
VSimpleType: Float
p15835
tp15836
I1
s(g4872
I42
g4873
Vinsert
p15837
I42
VSimpleName: Double
p15838
tp15839
I1
s(g671
I42
g672
Vinsert
p15840
I62
VInstanceofExpression
p15841
tp15842
I1
s(g7395
I42
g7396
Vinsert
p15843
I42
VSimpleName: getJavaClass
p15844
tp15845
F1.25
s(g1874
I42
g1875
Vinsert
p15846
I32
VMethodInvocation
p15847
tp15848
F6.5
s(g9965
I42
g9966
Vinsert
p15849
I42
VSimpleName: x
p15850
tp15851
F2.5
s(g2631
I42
g2632
Vinsert
p15852
I32
VMethodInvocation
p15853
tp15854
F8.25
s(g10343
I42
g10344
Vinsert
p15855
I42
VSimpleName: keyvals
p15856
tp15857
I1
s(g6300
I42
g6301
Vinsert
p15858
I14
VClassInstanceCreation
p15859
tp15860
I1
s(g5372
I42
g5373
Vinsert
p15861
I42
VSimpleName: ISeq
p15862
tp15863
F2.5
s(g3880
I42
g3881
Vinsert
p15864
I42
VSimpleName: Number
p15865
tp15866
I11
s(g5214
I42
g5215
Vinsert
p15867
I83
VModifier: public
p15868
tp15869
F0.25
s(g1712
I42
g1713
Vinsert
p15870
I42
VSimpleName: Keyword
p15871
tp15872
F0.5
s(g4663
I42
g4664
Vinsert
p15873
I41
VReturnStatement
p15874
tp15875
I1
s(g2623
I42
g2624
Vinsert
p15876
I44
VSingleVariableDeclaration
p15877
tp15878
F0.5
s(g3614
I42
g3615
Vinsert
p15879
I42
VSimpleName: tap
p15880
tp15881
F0.25
s(g6837
I42
g6838
Vinsert
p15882
I42
VSimpleName: v2
p15883
tp15884
F0.5
s(g945
I42
g946
Vinsert
p15885
I42
VSimpleName: pc
p15886
tp15887
I1
s(g4267
I42
g4268
Vinsert
p15888
I59
VVariableDeclarationFragment
p15889
tp15890
I3
s(g1378
I42
g1379
Vinsert
p15891
I42
VSimpleName: IllegalArgumentException
p15892
tp15893
F0.25
s(g489
I42
g490
Vinsert
p15894
I43
VSimpleType: HashMap
p15895
tp15896
I2
s(g11015
I42
g11016
Vinsert
p15897
I42
VSimpleName: paramType
p15898
tp15899
I1
s(g376
I42
g377
Vinsert
p15900
I41
VReturnStatement
p15901
tp15902
I1
s(g1228
I42
g1229
Vinsert
p15903
I59
VVariableDeclarationFragment
p15904
tp15905
I1
s(g6704
I42
g6705
Vinsert
p15906
I42
VSimpleName: bindingInits
p15907
tp15908
I2
s(g1662
I42
g1663
Vinsert
p15909
I43
VSimpleType: MapExpr
p15910
tp15911
I2
s(g994
I42
g995
Vinsert
p15912
I43
VSimpleType: Num
p15913
tp15914
F0.25
s(g1321
I42
g1322
Vinsert
p15915
I43
VSimpleType: ILookupThunk
p15916
tp15917
F0.25
s(g46
I42
g47
Vinsert
p15918
I42
VSimpleName: RT
p15919
tp15920
F2.25
s(g3261
I42
g3262
Vinsert
p15921
I42
VSimpleName: ISeq
p15922
tp15923
I3
s(g656
I42
g657
Vinsert
p15924
I42
VSimpleName: finallyLocal
p15925
tp15926
F0.5
s(g1233
I42
g1234
Vinsert
p15927
I42
VSimpleName: preferTable
p15928
tp15929
I1
s(g489
I42
g490
Vinsert
p15930
I59
VVariableDeclarationFragment
p15931
tp15932
I8
s(g691
I42
g692
Vinsert
p15933
I43
VSimpleType: IObj
p15934
tp15935
I2
s(Vinsert
p15936
I42
VSimpleName: invoke
p15937
Vinsert
p15938
I58
VVariableDeclarationExpression
p15939
tp15940
I1
s(g4886
I42
g4887
Vinsert
p15941
I42
VSimpleName: rdr
p15942
tp15943
I1
s(g3087
I42
g3088
Vinsert
p15944
I53
VThrowStatement
p15945
tp15946
I3
s(g1925
I42
g1926
Vinsert
p15947
I83
VModifier: public
p15948
tp15949
F0.25
s(g2872
I42
g2873
Vinsert
p15950
I33
VNullLiteral
p15951
tp15952
I2
s(g3500
I42
g3501
Vinsert
p15953
I21
VExpressionStatement
p15954
tp15955
I4
s(g1409
I42
g1410
Vinsert
p15956
I42
VSimpleName: count
p15957
tp15958
I1
s(g4826
I42
g4827
Vinsert
p15959
I14
VClassInstanceCreation
p15960
tp15961
F0.25
s(g1991
I42
g1992
Vinsert
p15962
I42
VSimpleName: RT
p15963
tp15964
I1
s(g1019
I42
g1020
Vinsert
p15965
I42
VSimpleName: usedConstants
p15966
tp15967
F2.25
s(g323
I42
g324
Vinsert
p15968
I42
VSimpleName: Class
p15969
tp15970
F1.5
s(g2729
I42
g2730
Vinsert
p15971
I62
VInstanceofExpression
p15972
tp15973
I1
s(g199
I42
g200
Vinsert
p15974
I45
VStringLiteral: "clojure/lang/IPersistentMap"
p15975
tp15976
I1
s(g1525
I42
g1526
Vinsert
p15977
I27
VInfixExpression: <
p15978
tp15979
F2.25
s(g5264
I42
g5265
Vinsert
p15980
I36
VParenthesizedExpression
p15981
tp15982
I1
s(g2231
I42
g2232
Vinsert
p15983
I40
VQualifiedName: name.name
p15984
tp15985
I1
s(g5500
I42
g5501
Vinsert
p15986
I43
VSimpleType: FnExpr
p15987
tp15988
F0.5
s(g3438
I42
g3439
Vinsert
p15989
I39
VPrimitiveType: int
p15990
tp15991
I1
s(g2940
I42
g2941
Vinsert
p15992
I43
VSimpleType: String
p15993
tp15994
F0.25
s(g3237
I42
g3238
Vinsert
p15995
I59
VVariableDeclarationFragment
p15996
tp15997
I3
s(g2596
I42
g2597
Vinsert
p15998
I34
VNumberLiteral: 2
p15999
tp16000
I2
s(g7336
I42
g7337
Vinsert
p16001
I43
VSimpleType: PersistentIdentityListMap
p16002
tp16003
I2
s(g13264
I42
g13265
Vinsert
p16004
I43
VSimpleType: Exception
p16005
tp16006
I1
s(g542
I42
g543
Vinsert
p16007
I32
VMethodInvocation
p16008
tp16009
I1
s(g1424
I42
g1425
Vinsert
p16010
I8
VBlock
p16011
tp16012
I1
s(g406
I42
g407
Vinsert
p16013
I42
VSimpleName: isReduced
p16014
tp16015
I4
s(g1530
I42
g1531
Vinsert
p16016
I27
VInfixExpression: &&
p16017
tp16018
I1
s(g1634
I42
g1635
Vinsert
p16019
I42
VSimpleName: val
p16020
tp16021
I2
s(g4059
I42
g4060
Vinsert
p16022
I42
VSimpleName: get
p16023
tp16024
F0.25
s(g4224
I42
g4225
Vinsert
p16025
I42
VSimpleName: Iterable
p16026
tp16027
I1
s(g6550
I42
g6551
Vinsert
p16028
I40
VQualifiedName: LazySeq.EMPTY
p16029
tp16030
F0.25
s(g7680
I42
g7681
Vinsert
p16031
I42
VSimpleName: PersistentHashtableMap
p16032
tp16033
F0.25
s(g1649
I42
g1650
Vinsert
p16034
I14
VClassInstanceCreation
p16035
tp16036
I1
s(g1291
I42
g1292
Vinsert
p16037
I57
VTypeLiteral
p16038
tp16039
F0.25
s(g3251
I42
g3252
Vinsert
p16040
I21
VExpressionStatement
p16041
tp16042
I1
s(g10343
I42
g10344
Vinsert
p16043
I44
VSingleVariableDeclaration
p16044
tp16045
F0.25
s(g8965
I42
g8966
Vinsert
p16046
I42
VSimpleName: isBound
p16047
tp16048
I1
s(g6174
I42
g6175
Vinsert
p16049
I42
VSimpleName: context
p16050
tp16051
F2.5
s(g1962
I42
g1963
Vinsert
p16052
I40
VQualifiedName: ks.ns
p16053
tp16054
I1
s(g1683
I42
g1684
Vinsert
p16055
I27
VInfixExpression: &&
p16056
tp16057
I1
s(g1167
I42
g1168
Vinsert
p16058
I42
VSimpleName: d
p16059
tp16060
F0.25
s(g1
I42
g2
Vinsert
p16061
I43
VSimpleType: ISeq
p16062
tp16063
I2
s(g4232
I42
g4233
Vinsert
p16064
I44
VSingleVariableDeclaration
p16065
tp16066
F0.25
s(g4516
I42
g4517
Vinsert
p16067
I8
VBlock
p16068
tp16069
I1
s(g3783
I42
g3784
Vinsert
p16070
I42
VSimpleName: basecnt
p16071
tp16072
I1
s(g3146
I42
g3147
Vinsert
p16073
I42
VSimpleName: add
p16074
tp16075
F0.25
s(g7669
I42
g7670
Vinsert
p16076
I42
VSimpleName: Override
p16077
tp16078
F0.5
s(g3076
I42
g3077
Vinsert
p16079
I59
VVariableDeclarationFragment
p16080
tp16081
I1
s(g740
I42
g741
Vinsert
p16082
I43
VSimpleType: ArrayList
p16083
tp16084
I2
s(g11151
I42
g11152
Vinsert
p16085
I42
VSimpleName: ns
p16086
tp16087
F6.5
s(g686
I42
g687
Vinsert
p16088
I39
VPrimitiveType: int
p16089
tp16090
I2
s(g9724
I42
g9725
Vinsert
p16091
I42
VSimpleName: bi
p16092
tp16093
I1
s(g4171
I42
g4172
Vinsert
p16094
I42
VSimpleName: contains
p16095
tp16096
I1
s(g2159
I42
g2160
Vinsert
p16097
I83
VModifier: public
p16098
tp16099
F0.25
s(g4295
I42
g4296
Vinsert
p16100
I21
VExpressionStatement
p16101
tp16102
F1.25
s(g247
I42
g248
Vinsert
p16103
I42
VSimpleName: readUnsignedShort
p16104
tp16105
I1
s(g3465
I42
g3466
Vinsert
p16106
I59
VVariableDeclarationFragment
p16107
tp16108
I4
s(g1535
I42
g1536
Vinsert
p16109
I41
VReturnStatement
p16110
tp16111
I1
s(g4663
I42
g4664
Vinsert
p16112
I42
VSimpleName: getMethod
p16113
tp16114
F0.25
s(g10360
I42
g10361
Vinsert
p16115
I42
VSimpleName: Exception
p16116
tp16117
F2.5
s(g6941
I42
g6942
Vinsert
p16118
I41
VReturnStatement
p16119
tp16120
I1
s(g3455
I42
g3456
Vinsert
p16121
I42
VSimpleName: NS_TYPE
p16122
tp16123
I1
s(g461
I42
g462
Vinsert
p16124
I40
VQualifiedName: Opcodes.ACC_STATIC
p16125
tp16126
I1
s(g11015
I42
g11016
Vinsert
p16127
I25
VIfStatement
p16128
tp16129
I1
s(g3644
I42
g3645
Vinsert
p16130
I45
VStringLiteral: "ns"
p16131
tp16132
I1
s(g1639
I42
g1640
Vinsert
p16133
I42
VSimpleName: Exception
p16134
tp16135
F1.75
s(g7602
I42
g7603
Vinsert
p16136
I41
VReturnStatement
p16137
tp16138
I10
s(g31
I42
g32
Vinsert
p16139
I9
VBooleanLiteral: true
p16140
tp16141
F0.25
s(g2914
I42
g2915
Vinsert
p16142
I40
VQualifiedName: y.bipart
p16143
tp16144
I1
s(g699
I42
g700
Vinsert
p16145
I42
VSimpleName: value
p16146
tp16147
I1
s(g3934
I42
g3935
Vinsert
p16148
I42
VSimpleName: e
p16149
tp16150
I2
s(g1856
I42
g1857
Vinsert
p16151
I42
VSimpleName: Exception
p16152
tp16153
F0.5
s(g4872
I42
g4873
Vinsert
p16154
I42
VSimpleName: n
p16155
tp16156
F0.25
s(g2252
I42
g2253
Vinsert
p16157
I42
VSimpleName: o
p16158
tp16159
I1
s(g542
I42
g543
Vinsert
p16160
I21
VExpressionStatement
p16161
tp16162
I3
s(g641
I42
g642
Vinsert
p16163
I42
VSimpleName: internVar
p16164
tp16165
F0.25
s(g6203
I42
g6204
Vinsert
p16166
I8
VBlock
p16167
tp16168
I1
s(g4151
I42
g4152
Vinsert
p16169
I42
VSimpleName: Transaction
p16170
tp16171
F1.5
s(g2018
I42
g2019
Vinsert
p16172
I39
VPrimitiveType: byte
p16173
tp16174
F0.25
s(g1856
I42
g1857
Vinsert
p16175
I41
VReturnStatement
p16176
tp16177
F0.25
s(g4343
I42
g4344
Vinsert
p16178
I39
VPrimitiveType: boolean
p16179
tp16180
F0.25
s(g1925
I42
g1926
Vinsert
p16181
I14
VClassInstanceCreation
p16182
tp16183
F0.25
s(g641
I42
g642
Vinsert
p16184
I43
VSimpleType: String
p16185
tp16186
F0.5
s(g2641
I42
g2642
Vinsert
p16187
I25
VIfStatement
p16188
tp16189
I1
s(g11594
I42
g11595
Vinsert
p16190
I42
VSimpleName: get
p16191
tp16192
I1
s(g1050
I42
g1051
Vinsert
p16193
I43
VSimpleType: Var
p16194
tp16195
I7
s(g348
I42
g349
Vinsert
p16196
I42
VSimpleName: Iterable
p16197
tp16198
I1
s(g12420
I42
g12421
Vinsert
p16199
I42
VSimpleName: cloneThreadBindingFrame
p16200
tp16201
F0.25
s(g3105
I42
g3106
Vinsert
p16202
I45
VStringLiteral: "public static long clojure.lang.RT.uncheckedLongCast(int)"
p16203
tp16204
I1
s(g6140
I42
g6141
Vinsert
p16205
I42
VSimpleName: InputStream
p16206
tp16207
I1
s(g9012
I42
g9013
Vinsert
p16208
I42
VSimpleName: i
p16209
tp16210
F1.25
s(g2130
I42
g2131
Vinsert
p16211
I42
VSimpleName: count
p16212
tp16213
I1
s(g411
I42
g412
Vinsert
p16214
I42
VSimpleName: throwArity
p16215
tp16216
F0.25
s(g4765
I42
g4766
Vinsert
p16217
I42
VSimpleName: fn
p16218
tp16219
I1
s(g6174
I42
g6175
Vinsert
p16220
I42
VSimpleName: fn
p16221
tp16222
F0.75
s(g1822
I42
g1823
Vinsert
p16223
I36
VParenthesizedExpression
p16224
tp16225
I2
s(g164
I42
g165
Vinsert
p16226
I42
VSimpleName: TBox
p16227
tp16228
F0.25
s(g3135
I42
g3136
Vinsert
p16229
I59
VVariableDeclarationFragment
p16230
tp16231
I1
s(g1273
I42
g1274
Vinsert
p16232
I8
VBlock
p16233
tp16234
I1
s(g656
I42
g657
Vinsert
p16235
I42
VSimpleName: gen
p16236
tp16237
I3
s(g4845
I42
g4846
Vinsert
p16238
I42
VSimpleName: MAIN
p16239
tp16240
I1
s(g2867
I42
g2868
Vinsert
p16241
I42
VSimpleName: m
p16242
tp16243
I1
s(g842
I42
g843
Vinsert
p16244
I32
VMethodInvocation
p16245
tp16246
I15
s(g2830
I42
g2831
Vinsert
p16247
I8
VBlock
p16248
tp16249
I1
s(g6377
I42
g6378
Vinsert
p16250
I43
VSimpleType: PrintWriter
p16251
tp16252
F2.75
s(g804
I42
g805
Vinsert
p16253
I44
VSingleVariableDeclaration
p16254
tp16255
F0.25
s(g6166
I42
g6167
Vinsert
p16256
I14
VClassInstanceCreation
p16257
tp16258
F0.25
s(g3251
I42
g3252
Vinsert
p16259
I42
VSimpleName: watchers
p16260
tp16261
I2
s(g1545
I42
g1546
Vinsert
p16262
I32
VMethodInvocation
p16263
tp16264
F60.25
s(g1563
I42
g1564
Vinsert
p16265
I42
VSimpleName: LockingTransaction
p16266
tp16267
I1
s(g5402
I42
g5403
Vinsert
p16268
I11
VCastExpression
p16269
tp16270
I2
s(g1368
I42
g1369
Vinsert
p16271
I83
VModifier: public
p16272
tp16273
F1.25
s(g5206
I42
g5207
Vinsert
p16274
I13
VCharacterLiteral: '\u005cuDFFF'
p16275
tp16276
I1
s(g3384
I42
g3385
Vinsert
p16277
I43
VSimpleType: IPersistentMap
p16278
tp16279
I2
s(g3212
I42
g3213
Vinsert
p16280
I42
VSimpleName: _next
p16281
tp16282
F2.25
s(Vinsert
p16283
I42
VSimpleName: second
p16284
Vinsert
p16285
I40
VQualifiedName: fn.thisName
p16286
tp16287
I1
s(g750
I42
g751
Vinsert
p16288
I43
VSimpleType: Cons
p16289
tp16290
F0.25
s(g11679
I42
g11680
Vinsert
p16291
I40
VQualifiedName: ObjExpr.ILOOKUP_THUNK_TYPE
p16292
tp16293
I1
s(g1218
I42
g1219
Vinsert
p16294
I27
VInfixExpression: &&
p16295
tp16296
I1
s(g2872
I42
g2873
Vinsert
p16297
I27
VInfixExpression: ==
p16298
tp16299
I1
s(g2697
I42
g2698
Vinsert
p16300
I42
VSimpleName: cv
p16301
tp16302
I2
s(g16
I42
g17
Vinsert
p16303
I9
VBooleanLiteral: true
p16304
tp16305
I1
s(g3500
I42
g3501
Vinsert
p16306
I45
VStringLiteral: "float uncheckedFloatCast(Object)"
p16307
tp16308
I1
s(g1530
I42
g1531
Vinsert
p16309
I58
VVariableDeclarationExpression
p16310
tp16311
I1
s(g2692
I42
g2693
Vinsert
p16312
I44
VSingleVariableDeclaration
p16313
tp16314
I5
s(g4073
I42
g4074
Vinsert
p16315
I36
VParenthesizedExpression
p16316
tp16317
I1
s(g179
I42
g180
Vinsert
p16318
I32
VMethodInvocation
p16319
tp16320
I12
s(g903
I42
g904
Vinsert
p16321
I42
VSimpleName: arg
p16322
tp16323
I1
s(g1331
I42
g1332
Vinsert
p16324
I37
VPostfixExpression: ++
p16325
tp16326
I1
s(g4452
I42
g4453
Vinsert
p16327
I43
VSimpleType: String
p16328
tp16329
I1
s(g10200
I42
g10201
Vinsert
p16330
I42
VSimpleName: q
p16331
tp16332
I1
s(g1396
I42
g1397
Vinsert
p16333
I32
VMethodInvocation
p16334
tp16335
I4
s(g3295
I42
g3296
Vinsert
p16336
I42
VSimpleName: t
p16337
tp16338
F1.25
s(g9320
I42
g9321
Vinsert
p16339
I8
VBlock
p16340
tp16341
I3
s(g11140
I42
g11141
Vinsert
p16342
I8
VBlock
p16343
tp16344
I1
s(Vinsert
p16345
I42
VSimpleName: count
p16346
Vinsert
p16347
I42
VSimpleName: bindings
p16348
tp16349
I1
s(g5824
I42
g5825
Vinsert
p16350
I43
VSimpleType: ThreadLocalData
p16351
tp16352
F1.5
s(g3465
I42
g3466
Vinsert
p16353
I42
VSimpleName: INode
p16354
tp16355
I4
s(g1228
I42
g1229
Vinsert
p16356
I39
VPrimitiveType: long
p16357
tp16358
I2
s(g3022
I42
g3023
Vinsert
p16359
I32
VMethodInvocation
p16360
tp16361
I1
s(g510
I42
g511
Vinsert
p16362
I43
VSimpleType: Object
p16363
tp16364
I1
s(g252
I42
g253
Vinsert
p16365
I32
VMethodInvocation
p16366
tp16367
I2
s(g994
I42
g995
Vinsert
p16368
I41
VReturnStatement
p16369
tp16370
I1
s(g5036
I42
g5037
Vinsert
p16371
I33
VNullLiteral
p16372
tp16373
I2
s(g2427
I42
g2428
Vinsert
p16374
I42
VSimpleName: SOURCE
p16375
tp16376
I1
s(g2216
I42
g2217
Vinsert
p16377
I42
VSimpleName: et
p16378
tp16379
I2
s(g827
I42
g828
Vinsert
p16380
I43
VSimpleType: ISeq
p16381
tp16382
F0.5
s(g2018
I42
g2019
Vinsert
p16383
I44
VSingleVariableDeclaration
p16384
tp16385
F0.75
s(g1258
I42
g1259
Vinsert
p16386
I42
VSimpleName: BigDecimal
p16387
tp16388
I2
s(g3022
I42
g3023
Vinsert
p16389
I9
VBooleanLiteral: false
p16390
tp16391
I1
s(g3237
I42
g3238
Vinsert
p16392
I7
VAssignment: =
p16393
tp16394
I2
s(g1409
I42
g1410
Vinsert
p16395
I8
VBlock
p16396
tp16397
F7.25
s(g3460
I42
g3461
Vinsert
p16398
I42
VSimpleName: RT
p16399
tp16400
I1
s(g745
I42
g746
Vinsert
p16401
I7
VAssignment: =
p16402
tp16403
F6.5
s(g1027
I42
g1028
Vinsert
p16404
I33
VNullLiteral
p16405
tp16406
I1
s(g1957
I42
g1958
Vinsert
p16407
I41
VReturnStatement
p16408
tp16409
I1
s(g406
I42
g407
Vinsert
p16410
I42
VSimpleName: IDeref
p16411
tp16412
I5
s(g9765
I42
g9766
Vinsert
p16413
I45
VStringLiteral: "\u005c\u005cn"
p16414
tp16415
I1
s(g5436
I42
g5437
Vinsert
p16416
I38
VPrefixExpression: !
p16417
tp16418
I1
s(g7618
I42
g7619
Vinsert
p16419
I36
VParenthesizedExpression
p16420
tp16421
I3
s(g7395
I42
g7396
Vinsert
p16422
I42
VSimpleName: elseExpr
p16423
tp16424
I2
s(g1027
I42
g1028
Vinsert
p16425
I7
VAssignment: =
p16426
tp16427
I2
s(g7010
I42
g7011
Vinsert
p16428
I42
VSimpleName: newLabel
p16429
tp16430
I3
s(g114
I42
g115
Vinsert
p16431
I42
VSimpleName: arg12
p16432
tp16433
F0.25
s(g7113
I42
g7114
Vinsert
p16434
I49
VSwitchCase
p16435
tp16436
I2
s(g745
I42
g746
Vinsert
p16437
I42
VSimpleName: CFn
p16438
tp16439
F0.25
s(g532
I42
g533
Vinsert
p16440
I42
VSimpleName: ret
p16441
tp16442
I7
s(g5130
I42
g5131
Vinsert
p16443
I42
VSimpleName: subList
p16444
tp16445
F0.25
s(g3100
I42
g3101
Vinsert
p16446
I52
VThisExpression
p16447
tp16448
I1
s(g3654
I42
g3655
Vinsert
p16449
I27
VInfixExpression: ==
p16450
tp16451
I1
s(g381
I42
g382
Vinsert
p16452
I33
VNullLiteral
p16453
tp16454
I2
s(g313
I42
g314
Vinsert
p16455
I42
VSimpleName: arg1
p16456
tp16457
F0.5
s(g451
I42
g452
Vinsert
p16458
I43
VSimpleType: Attributes
p16459
tp16460
F0.25
s(g3633
I42
g3634
Vinsert
p16461
I45
VStringLiteral: "Expecting Symbol + Namespace"
p16462
tp16463
I1
s(g5122
I42
g5123
Vinsert
p16464
I24
VForStatement
p16465
tp16466
I7
s(g6
I42
g7
Vinsert
p16467
I34
VNumberLiteral: 0
p16468
tp16469
I11
s(g9218
I42
g9219
Vinsert
p16470
I42
VSimpleName: Util
p16471
tp16472
I1
s(g8268
I42
g8269
Vinsert
p16473
I40
VQualifiedName: master.maxLoad
p16474
tp16475
F0.25
s(g7563
I42
g7564
Vinsert
p16476
I42
VSimpleName: staticKey
p16477
tp16478
I1
s(g6335
I42
g6336
Vinsert
p16479
I42
VSimpleName: radix
p16480
tp16481
I1
s(g456
I42
g457
Vinsert
p16482
I42
VSimpleName: Matcher
p16483
tp16484
I1
s(g1812
I42
g1813
Vinsert
p16485
I44
VSingleVariableDeclaration
p16486
tp16487
F0.5
s(g456
I42
g457
Vinsert
p16488
I59
VVariableDeclarationFragment
p16489
tp16490
I1
s(g5055
I42
g5056
Vinsert
p16491
I43
VSimpleType: Exception
p16492
tp16493
F0.25
s(g4394
I42
g4395
Vinsert
p16494
I27
VInfixExpression: !=
p16495
tp16496
I3
s(g924
I42
g925
Vinsert
p16497
I8
VBlock
p16498
tp16499
F6.25
s(g603
I42
g604
Vinsert
p16500
I42
VSimpleName: persistent
p16501
tp16502
F1.0
s(g8273
I42
g8274
Vinsert
p16503
I21
VExpressionStatement
p16504
tp16505
I2
s(g10180
I42
g10181
Vinsert
p16506
I42
VSimpleName: arg2
p16507
tp16508
F0.5
s(g26
I42
g27
Vinsert
p16509
I42
VSimpleName: c
p16510
tp16511
I1
s(g1616
I42
g1617
Vinsert
p16512
I27
VInfixExpression: !=
p16513
tp16514
I1
s(g2361
I42
g2362
Vinsert
p16515
I27
VInfixExpression: <
p16516
tp16517
I8
s(g1202
I42
g1203
Vinsert
p16518
I34
VNumberLiteral: 0
p16519
tp16520
I2
s(g717
I42
g718
Vinsert
p16521
I42
VSimpleName: LINE_AFTER
p16522
tp16523
I1
s(g4826
I42
g4827
Vinsert
p16524
I45
VStringLiteral: "Vars are not values"
p16525
tp16526
F0.25
s(g2461
I42
g2462
Vinsert
p16527
I43
VSimpleType: String
p16528
tp16529
F1.0
s(g1892
I42
g1893
Vinsert
p16530
I42
VSimpleName: maxSize
p16531
tp16532
I1
s(g6289
I42
g6290
Vinsert
p16533
I42
VSimpleName: FnMethod
p16534
tp16535
I2
s(g7480
I42
g7481
Vinsert
p16536
I42
VSimpleName: sym
p16537
tp16538
I1
s(g4237
I42
g4238
Vinsert
p16539
I42
VSimpleName: trimmedTail
p16540
tp16541
I1
s(g9124
I42
g9125
Vinsert
p16542
I42
VSimpleName: right
p16543
tp16544
F0.5
s(g71
I42
g72
Vinsert
p16545
I42
VSimpleName: Type
p16546
tp16547
I1
s(g489
I42
g490
Vinsert
p16548
I42
VSimpleName: HashMap
p16549
tp16550
I2
s(g3619
I42
g3620
Vinsert
p16551
I42
VSimpleName: entry
p16552
tp16553
I1
s(g1601
I42
g1602
Vinsert
p16554
I40
VQualifiedName: e.rev
p16555
tp16556
I1
s(g2935
I42
g2936
Vinsert
p16557
I42
VSimpleName: Node
p16558
tp16559
I1
s(g1967
I42
g1968
Vinsert
p16560
I40
VQualifiedName: v.sym.name
p16561
tp16562
F0.25
s(g2376
I42
g2377
Vinsert
p16563
I42
VSimpleName: FnExpr
p16564
tp16565
F0.25
s(g11151
I42
g11152
Vinsert
p16566
I42
VSimpleName: name
p16567
tp16568
F3.25
s(g3229
I42
g3230
Vinsert
p16569
I43
VSimpleType: IPersistentVector
p16570
tp16571
F0.25
s(g12383
I42
g12384
Vinsert
p16572
I42
VSimpleName: InheritableThreadLocal
p16573
tp16574
I1
s(g290
I42
g291
Vinsert
p16575
I42
VSimpleName: _hash
p16576
tp16577
F1.5
s(g618
I42
g619
Vinsert
p16578
I45
VStringLiteral: "false"
p16579
tp16580
I1
s(g12554
I42
g12555
Vinsert
p16581
I45
VStringLiteral: "Can't intern namespace-qualified symbol"
p16582
tp16583
I1
s(g950
I42
g951
Vinsert
p16584
I42
VSimpleName: UTF8
p16585
tp16586
F0.25
s(g368
I42
g369
Vinsert
p16587
I32
VMethodInvocation
p16588
tp16589
I3
s(g6505
I42
g6506
Vinsert
p16590
I42
VSimpleName: Method
p16591
tp16592
I2
s(g2930
I42
g2931
Vinsert
p16593
I40
VQualifiedName: state.val
p16594
tp16595
I3
s(g8706
I42
g8707
Vinsert
p16596
I41
VReturnStatement
p16597
tp16598
I2
s(g1213
I42
g1214
Vinsert
p16599
I83
VModifier: static
p16600
tp16601
F0.75
s(g5879
I42
g5880
Vinsert
p16602
I40
VQualifiedName: lb.sym
p16603
tp16604
F0.25
s(g5380
I42
g5381
Vinsert
p16605
I8
VBlock
p16606
tp16607
I2
s(g6561
I42
g6562
Vinsert
p16608
I21
VExpressionStatement
p16609
tp16610
I1
s(g12511
I42
g12512
Vinsert
p16611
I42
VSimpleName: end
p16612
tp16613
I2
s(g12920
I42
g12921
Vinsert
p16614
I42
VSimpleName: clause
p16615
tp16616
I1
s(g451
I42
g452
Vinsert
p16617
I8
VBlock
p16618
tp16619
I1
s(g343
I42
g344
Vinsert
p16620
I25
VIfStatement
p16621
tp16622
I1
s(g1182
I42
g1183
Vinsert
p16623
I14
VClassInstanceCreation
p16624
tp16625
I1
s(g1094
I42
g1095
Vinsert
p16626
I42
VSimpleName: Class
p16627
tp16628
F2.75
s(g4394
I42
g4395
Vinsert
p16629
I33
VNullLiteral
p16630
tp16631
I2
s(g973
I42
g974
Vinsert
p16632
I59
VVariableDeclarationFragment
p16633
tp16634
I1
s(g2052
I42
g2053
Vinsert
p16635
I42
VSimpleName: prev
p16636
tp16637
I1
s(g567
I42
g568
Vinsert
p16638
I42
VSimpleName: t
p16639
tp16640
I3
s(g1019
I42
g1020
Vinsert
p16641
I42
VSimpleName: IPersistentSet
p16642
tp16643
I1
s(g6455
I42
g6456
Vinsert
p16644
I31
VMethodDeclaration
p16645
tp16646
F0.5
s(g827
I42
g828
Vinsert
p16647
I8
VBlock
p16648
tp16649
I3
s(g4021
I42
g4022
Vinsert
p16650
I42
VSimpleName: x
p16651
tp16652
F0.5
s(g1702
I42
g1703
Vinsert
p16653
I42
VSimpleName: k
p16654
tp16655
I1
s(g1469
I42
g1470
Vinsert
p16656
I45
VStringLiteral: "let*"
p16657
tp16658
I1
s(g5050
I42
g5051
Vinsert
p16659
I8
VBlock
p16660
tp16661
I2
s(g9264
I42
g9265
Vinsert
p16662
I42
VSimpleName: m
p16663
tp16664
F0.75
s(g5832
I42
g5833
Vinsert
p16665
I42
VSimpleName: Type
p16666
tp16667
F0.25
s(g2729
I42
g2730
Vinsert
p16668
I43
VSimpleType: Iterable
p16669
tp16670
I2
s(g2591
I42
g2592
Vinsert
p16671
I57
VTypeLiteral
p16672
tp16673
I2
s(g2343
I42
g2344
Vinsert
p16674
I42
VSimpleName: reqArity
p16675
tp16676
I2
s(g2724
I42
g2725
Vinsert
p16677
I34
VNumberLiteral: 0
p16678
tp16679
I1
s(Vinsert
p16680
I42
VSimpleName: capacity
p16681
Vinsert
p16682
I42
VSimpleName: key
p16683
tp16684
I1
s(g227
I42
g228
Vinsert
p16685
I42
VSimpleName: init
p16686
tp16687
F0.25
s(g2100
I42
g2101
Vinsert
p16688
I42
VSimpleName: isWhitespace
p16689
tp16690
I1
s(g164
I42
g165
Vinsert
p16691
I42
VSimpleName: Frame
p16692
tp16693
F0.25
s(g36
I42
g37
Vinsert
p16694
I38
VPrefixExpression: !
p16695
tp16696
I1
s(g3565
I42
g3566
Vinsert
p16697
I42
VSimpleName: i
p16698
tp16699
F0.5
s(g3180
I42
g3181
Vinsert
p16700
I40
VQualifiedName: ver.point
p16701
tp16702
I1
s(g1401
I42
g1402
Vinsert
p16703
I42
VSimpleName: rq
p16704
tp16705
I2
s(g960
I42
g961
Vinsert
p16706
I42
VSimpleName: fn
p16707
tp16708
F0.25
s(g924
I42
g925
Vinsert
p16709
I83
VModifier: public
p16710
tp16711
F1.5
s(g1760
I42
g1761
Vinsert
p16712
I59
VVariableDeclarationFragment
p16713
tp16714
I1
s(g4362
I42
g4363
Vinsert
p16715
I44
VSingleVariableDeclaration
p16716
tp16717
F0.25
s(g1
I42
g2
Vinsert
p16718
I11
VCastExpression
p16719
tp16720
I1
s(g6084
I42
g6085
Vinsert
p16721
I83
VModifier: final
p16722
tp16723
F0.25
s(g5198
I42
g5199
Vinsert
p16724
I9
VBooleanLiteral: true
p16725
tp16726
I2
s(g9388
I42
g9389
Vinsert
p16727
I42
VSimpleName: arg17
p16728
tp16729
I2
s(g10200
I42
g10201
Vinsert
p16730
I42
VSimpleName: queued
p16731
tp16732
I1
s(g8494
I42
g8495
Vinsert
p16733
I42
VSimpleName: i
p16734
tp16735
I2
s(g174
I42
g175
Vinsert
p16736
I43
VSimpleType: Class
p16737
tp16738
I1
s(g6566
I42
g6567
Vinsert
p16739
I42
VSimpleName: t
p16740
tp16741
I1
s(g4351
I42
g4352
Vinsert
p16742
I59
VVariableDeclarationFragment
p16743
tp16744
I1
s(g2273
I42
g2274
Vinsert
p16745
I42
VSimpleName: RecognitionException
p16746
tp16747
F0.25
s(g3325
I42
g3326
Vinsert
p16748
I16
VConditionalExpression
p16749
tp16750
I1
s(g1905
I42
g1906
Vinsert
p16751
I7
VAssignment: =
p16752
tp16753
I4
s(g4248
I42
g4249
Vinsert
p16754
I43
VSimpleType: Class
p16755
tp16756
F0.25
s(g735
I42
g736
Vinsert
p16757
I42
VSimpleName: Object
p16758
tp16759
F1.5
s(g3797
I42
g3798
Vinsert
p16760
I59
VVariableDeclarationFragment
p16761
tp16762
F5.5
s(g4891
I42
g4892
Vinsert
p16763
I43
VSimpleType: Node
p16764
tp16765
F2.0
s(g5256
I42
g5257
Vinsert
p16766
I43
VSimpleType: Entry
p16767
tp16768
I2
s(g9012
I42
g9013
Vinsert
p16769
I59
VVariableDeclarationFragment
p16770
tp16771
I6
s(g5533
I42
g5534
Vinsert
p16772
I42
VSimpleName: items
p16773
tp16774
I1
s(g5055
I42
g5056
Vinsert
p16775
I43
VSimpleType: ThreadLocalData
p16776
tp16777
F0.25
s(g2294
I42
g2295
Vinsert
p16778
I42
VSimpleName: StringSeq
p16779
tp16780
F0.25
s(g557
I42
g558
Vinsert
p16781
I42
VSimpleName: newEntries
p16782
tp16783
I1
s(g6234
I42
g6235
Vinsert
p16784
I32
VMethodInvocation
p16785
tp16786
I2
s(g3541
I42
g3542
Vinsert
p16787
I13
VCharacterLiteral: 'u'
p16788
tp16789
I1
s(g6114
I42
g6115
Vinsert
p16790
I32
VMethodInvocation
p16791
tp16792
I6
s(g2371
I42
g2372
Vinsert
p16793
I43
VSimpleType: ObjectStreamException
p16794
tp16795
F0.25
s(g3384
I42
g3385
Vinsert
p16796
I42
VSimpleName: add
p16797
tp16798
I1
s(g878
I42
g879
Vinsert
p16799
I42
VSimpleName: IN_NS
p16800
tp16801
F0.25
s(g2405
I42
g2406
Vinsert
p16802
I43
VSimpleType: Keyword
p16803
tp16804
F1.25
s(g547
I42
g548
Vinsert
p16805
I42
VSimpleName: owner
p16806
tp16807
F0.5
s(g2649
I42
g2650
Vinsert
p16808
I43
VSimpleType: IPersistentMap
p16809
tp16810
F0.25
s(g129
I42
g130
Vinsert
p16811
I42
VSimpleName: target
p16812
tp16813
I2
s(g2623
I42
g2624
Vinsert
p16814
I43
VSimpleType: Object
p16815
tp16816
F0.5
s(g1321
I42
g1322
Vinsert
p16817
I41
VReturnStatement
p16818
tp16819
F0.25
s(g8516
I42
g8517
Vinsert
p16820
I42
VSimpleName: tval
p16821
tp16822
F0.5
s(g3500
I42
g3501
Vinsert
p16823
I32
VMethodInvocation
p16824
tp16825
I19
s(g4937
I42
g4938
Vinsert
p16826
I83
VModifier: final
p16827
tp16828
I4
s(g2052
I42
g2053
Vinsert
p16829
I27
VInfixExpression: ==
p16830
tp16831
I1
s(g1228
I42
g1229
Vinsert
p16832
I8
VBlock
p16833
tp16834
I1
s(g2940
I42
g2941
Vinsert
p16835
I25
VIfStatement
p16836
tp16837
I1
s(g542
I42
g543
Vinsert
p16838
I42
VSimpleName: index
p16839
tp16840
I1
s(g2018
I42
g2019
Vinsert
p16841
I85
VDimension
p16842
tp16843
F0.25
s(g106
I42
g107
Vinsert
p16844
I27
VInfixExpression: ==
p16845
tp16846
I9
s(g2697
I42
g2698
Vinsert
p16847
I27
VInfixExpression: !=
p16848
tp16849
I1
s(Vinsert
p16850
I42
VSimpleName: nextID
p16851
Vinsert
p16852
I42
VSimpleName: munge
p16853
tp16854
I1
s(g11140
I42
g11141
Vinsert
p16855
I46
VSuperConstructorInvocation
p16856
tp16857
I1
s(g8138
I42
g8139
Vinsert
p16858
I42
VSimpleName: setMeta
p16859
tp16860
I1
s(g2135
I42
g2136
Vinsert
p16861
I42
VSimpleName: e
p16862
tp16863
I1
s(g4118
I42
g4119
Vinsert
p16864
I42
VSimpleName: seq
p16865
tp16866
F0.5
s(g4284
I42
g4285
Vinsert
p16867
I14
VClassInstanceCreation
p16868
tp16869
I1
s(g6704
I42
g6705
Vinsert
p16870
I42
VSimpleName: BindingInit
p16871
tp16872
I1
s(g2692
I42
g2693
Vinsert
p16873
I42
VSimpleName: poll
p16874
tp16875
I1
s(g2026
I42
g2027
Vinsert
p16876
I42
VSimpleName: mark
p16877
tp16878
I2
s(g1037
I42
g1038
Vinsert
p16879
I42
VSimpleName: clinitgen
p16880
tp16881
I1
s(g159
I42
g160
Vinsert
p16882
I62
VInstanceofExpression
p16883
tp16884
I1
s(g2930
I42
g2931
Vinsert
p16885
I7
VAssignment: =
p16886
tp16887
I1
s(g1792
I42
g1793
Vinsert
p16888
I43
VSimpleType: Byte
p16889
tp16890
I1
s(g4924
I42
g4925
Vinsert
p16891
I42
VSimpleName: obj
p16892
tp16893
I2
s(g8643
I42
g8644
Vinsert
p16894
I10
VBreakStatement
p16895
tp16896
I1
s(g1977
I42
g1978
Vinsert
p16897
I7
VAssignment: =
p16898
tp16899
F1.25
s(g8066
I42
g8067
Vinsert
p16900
I42
VSimpleName: o2
p16901
tp16902
I1
s(g2935
I42
g2936
Vinsert
p16903
I40
VQualifiedName: parent.edit
p16904
tp16905
I1
s(g5163
I42
g5164
Vinsert
p16906
I42
VSimpleName: Symbol
p16907
tp16908
F1.5
s(g10080
I42
g10081
Vinsert
p16909
I42
VSimpleName: bmap
p16910
tp16911
I1
s(g3300
I42
g3301
Vinsert
p16912
I42
VSimpleName: Object
p16913
tp16914
F2.25
s(g7680
I42
g7681
Vinsert
p16915
I40
VQualifiedName: array.length
p16916
tp16917
I1
s(g300
I42
g301
Vinsert
p16918
I7
VAssignment: =
p16919
tp16920
I1
s(g4284
I42
g4285
Vinsert
p16921
I45
VStringLiteral: "Actor has errors"
p16922
tp16923
I1
s(g8409
I42
g8410
Vinsert
p16924
I8
VBlock
p16925
tp16926
F4.25
s(g1807
I42
g1808
Vinsert
p16927
I59
VVariableDeclarationFragment
p16928
tp16929
I2
s(g1014
I42
g1015
Vinsert
p16930
I43
VSimpleType: Namespace
p16931
tp16932
F0.25
s(g6174
I42
g6175
Vinsert
p16933
I42
VSimpleName: GeneratorAdapter
p16934
tp16935
F0.75
s(g242
I42
g243
Vinsert
p16936
I7
VAssignment: =
p16937
tp16938
I4
s(g3295
I42
g3296
Vinsert
p16939
I27
VInfixExpression: ==
p16940
tp16941
I1
s(g1654
I42
g1655
Vinsert
p16942
I42
VSimpleName: lte
p16943
tp16944
I1
s(g3957
I42
g3958
Vinsert
p16945
I43
VSimpleType: PushbackReader
p16946
tp16947
I2
s(g11747
I42
g11748
Vinsert
p16948
I43
VSimpleType: Sequential
p16949
tp16950
I1
s(g4689
I42
g4690
Vinsert
p16951
I42
VSimpleName: edit
p16952
tp16953
F2.25
s(g1957
I42
g1958
Vinsert
p16954
I27
VInfixExpression: !=
p16955
tp16956
I1
s(g1936
I42
g1937
Vinsert
p16957
I42
VSimpleName: InterruptedException
p16958
tp16959
F0.25
s(g960
I42
g961
Vinsert
p16960
I42
VSimpleName: context
p16961
tp16962
F1.25
s(g5960
I42
g5961
Vinsert
p16963
I43
VSimpleType: Object
p16964
tp16965
I1
s(g5656
I42
g5657
Vinsert
p16966
I7
VAssignment: =
p16967
tp16968
I1
s(g416
I42
g417
Vinsert
p16969
I8
VBlock
p16970
tp16971
I2
s(g6859
I42
g6860
Vinsert
p16972
I42
VSimpleName: name
p16973
tp16974
F0.25
s(g252
I42
g253
Vinsert
p16975
I42
VSimpleName: Exception
p16976
tp16977
F0.25
s(g1817
I42
g1818
Vinsert
p16978
I42
VSimpleName: Exception
p16979
tp16980
F0.25
s(g837
I42
g838
Vinsert
p16981
I21
VExpressionStatement
p16982
tp16983
I4
s(g1840
I42
g1841
Vinsert
p16984
I5
VArrayType: Object[]
p16985
tp16986
F0.5
s(Vinsert
p16987
I42
VSimpleName: popThreadBinding
p16988
Vinsert
p16989
I42
VSimpleName: popThreadBinding
p16990
tp16991
I3
s(g2397
I42
g2398
Vinsert
p16992
I44
VSingleVariableDeclaration
p16993
tp16994
F1.0
s(g2940
I42
g2941
Vinsert
p16995
I8
VBlock
p16996
tp16997
I2
s(g1861
I42
g1862
Vinsert
p16998
I43
VSimpleType: BigInteger
p16999
tp17000
I1
s(g6114
I42
g6115
Vinsert
p17001
I34
VNumberLiteral: 1
p17002
tp17003
I1
s(g5055
I42
g5056
Vinsert
p17004
I44
VSingleVariableDeclaration
p17005
tp17006
F0.25
s(g5802
I42
g5803
Vinsert
p17007
I33
VNullLiteral
p17008
tp17009
I1
s(g929
I42
g930
Vinsert
p17010
I42
VSimpleName: v
p17011
tp17012
I4
s(g955
I42
g956
Vinsert
p17013
I42
VSimpleName: m
p17014
tp17015
I8
s(g1182
I42
g1183
Vinsert
p17016
I43
VSimpleType: SuspReverse
p17017
tp17018
I1
s(g4788
I42
g4789
Vinsert
p17019
I39
VPrimitiveType: int
p17020
tp17021
F1.5
s(g1649
I42
g1650
Vinsert
p17022
I8
VBlock
p17023
tp17024
I1
s(g1654
I42
g1655
Vinsert
p17025
I42
VSimpleName: Numbers
p17026
tp17027
I1
s(g3455
I42
g3456
Vinsert
p17028
I42
VSimpleName: getField
p17029
tp17030
I1
s(g9948
I42
g9949
Vinsert
p17031
I45
VStringLiteral: "clojure"
p17032
tp17033
I1
s(g1750
I42
g1751
Vinsert
p17034
I25
VIfStatement
p17035
tp17036
I1
s(g8061
I42
g8062
Vinsert
p17037
I11
VCastExpression
p17038
tp17039
I6
s(g1117
I42
g1118
Vinsert
p17040
I21
VExpressionStatement
p17041
tp17042
I2
s(g5505
I42
g5506
Vinsert
p17043
I43
VSimpleType: Namespace
p17044
tp17045
I1
s(g3875
I42
g3876
Vinsert
p17046
I42
VSimpleName: maxLocal
p17047
tp17048
I1
s(g9970
I42
g9971
Vinsert
p17049
I42
VSimpleName: dynamicBindings
p17050
tp17051
I1
s(g479
I42
g480
Vinsert
p17052
I42
VSimpleName: bitpos
p17053
tp17054
I1
s(g86
I42
g87
Vinsert
p17055
I39
VPrimitiveType: void
p17056
tp17057
F0.75
s(g5380
I42
g5381
Vinsert
p17058
I33
VNullLiteral
p17059
tp17060
I2
s(g2273
I42
g2274
Vinsert
p17061
I42
VSimpleName: val
p17062
tp17063
I1
s(g4166
I42
g4167
Vinsert
p17064
I39
VPrimitiveType: void
p17065
tp17066
F0.25
s(g735
I42
g736
Vinsert
p17067
I39
VPrimitiveType: int
p17068
tp17069
F0.25
s(g2216
I42
g2217
Vinsert
p17070
I42
VSimpleName: lt
p17071
tp17072
I1
s(g3522
I42
g3523
Vinsert
p17073
I16
VConditionalExpression
p17074
tp17075
I1
s(g1162
I42
g1163
Vinsert
p17076
I16
VConditionalExpression
p17077
tp17078
I2
s(g12149
I42
g12150
Vinsert
p17079
I42
VSimpleName: PersistentListMap
p17080
tp17081
I1
s(g4979
I42
g4980
Vinsert
p17082
I42
VSimpleName: PersistentTreeMap
p17083
tp17084
I2
s(g6103
I42
g6104
Vinsert
p17085
I42
VSimpleName: obj
p17086
tp17087
I3
s(g2387
I42
g2388
Vinsert
p17088
I42
VSimpleName: create
p17089
tp17090
I1
s(g1050
I42
g1051
Vinsert
p17091
I23
VFieldDeclaration
p17092
tp17093
I6
s(g666
I42
g667
Vinsert
p17094
I32
VMethodInvocation
p17095
tp17096
F11.75
s(g3038
I42
g3039
Vinsert
p17097
I42
VSimpleName: coll
p17098
tp17099
F0.5
s(g9124
I42
g9125
Vinsert
p17100
I42
VSimpleName: Node
p17101
tp17102
F0.75
s(g1717
I42
g1718
Vinsert
p17103
I54
VTryStatement
p17104
tp17105
F0.25
s(g547
I42
g548
Vinsert
p17106
I42
VSimpleName: visitFieldInsn
p17107
tp17108
F0.25
s(g1014
I42
g1015
Vinsert
p17109
I42
VSimpleName: n
p17110
tp17111
F1.25
s(g1644
I42
g1645
Vinsert
p17112
I40
VQualifiedName: Compiler.SOURCE
p17113
tp17114
I1
s(g1286
I42
g1287
Vinsert
p17115
I42
VSimpleName: hashCode
p17116
tp17117
F0.5
s(Vinsert
p17118
I42
VSimpleName: first
p17119
Vinsert
p17120
I42
VSimpleName: arglist
p17121
tp17122
I2
s(g1654
I42
g1655
Vinsert
p17123
I59
VVariableDeclarationFragment
p17124
tp17125
I1
s(g4754
I42
g4755
Vinsert
p17126
I42
VSimpleName: list
p17127
tp17128
I2
s(g862
I42
g863
Vinsert
p17129
I14
VClassInstanceCreation
p17130
tp17131
I1
s(g1563
I42
g1564
Vinsert
p17132
I41
VReturnStatement
p17133
tp17134
I1
s(g2111
I42
g2112
Vinsert
p17135
I43
VSimpleType: java.util.Map
p17136
tp17137
I1
s(g4059
I42
g4060
Vinsert
p17138
I42
VSimpleName: i
p17139
tp17140
F0.25
s(g5584
I42
g5585
Vinsert
p17141
I40
VQualifiedName: ret._meta
p17142
tp17143
F0.25
s(g1616
I42
g1617
Vinsert
p17144
I60
VVariableDeclarationStatement
p17145
tp17146
I5
s(g421
I42
g422
Vinsert
p17147
I59
VVariableDeclarationFragment
p17148
tp17149
I1
s(g1991
I42
g1992
Vinsert
p17150
I44
VSingleVariableDeclaration
p17151
tp17152
F0.5
s(g5214
I42
g5215
Vinsert
p17153
I33
VNullLiteral
p17154
tp17155
I1
s(g1273
I42
g1274
Vinsert
p17156
I42
VSimpleName: ls
p17157
tp17158
I3
s(g989
I42
g990
Vinsert
p17159
I59
VVariableDeclarationFragment
p17160
tp17161
I5
s(g1326
I42
g1327
Vinsert
p17162
I36
VParenthesizedExpression
p17163
tp17164
I2
s(g6040
I42
g6041
Vinsert
p17165
I8
VBlock
p17166
tp17167
I4
s(g421
I42
g422
Vinsert
p17168
I42
VSimpleName: chars
p17169
tp17170
I1
s(g7602
I42
g7603
Vinsert
p17171
I43
VSimpleType: IPersistentMap
p17172
tp17173
F0.25
s(g6059
I42
g6060
Vinsert
p17174
I42
VSimpleName: n
p17175
tp17176
F0.5
s(g5672
I42
g5673
Vinsert
p17177
I42
VSimpleName: nth
p17178
tp17179
I1
s(g194
I42
g195
Vinsert
p17180
I42
VSimpleName: n
p17181
tp17182
I2
s(g2578
I42
g2579
Vinsert
p17183
I42
VSimpleName: visitFieldInsn
p17184
tp17185
I1
s(g2493
I42
g2494
Vinsert
p17186
I42
VSimpleName: syntaxQuote
p17187
tp17188
I1
s(g1063
I42
g1064
Vinsert
p17189
I43
VSimpleType: IllegalArgumentException
p17190
tp17191
I1
s(g5977
I42
g5978
Vinsert
p17192
I42
VSimpleName: key
p17193
tp17194
F0.5
s(g4831
I42
g4832
Vinsert
p17195
I27
VInfixExpression: !=
p17196
tp17197
I1
s(g1432
I42
g1433
Vinsert
p17198
I38
VPrefixExpression: -
p17199
tp17200
I1
s(g36
I42
g37
Vinsert
p17201
I9
VBooleanLiteral: true
p17202
tp17203
F0.25
s(Vinsert
p17204
I42
VSimpleName: getClass
p17205
Vinsert
p17206
I45
VStringLiteral: "No matching ctor found"
p17207
tp17208
F0.5
s(g2573
I42
g2574
Vinsert
p17209
I42
VSimpleName: IPersistentSet
p17210
tp17211
I1
s(g11331
I42
g11332
Vinsert
p17212
I43
VSimpleType: Constructor
p17213
tp17214
I2
s(g214
I42
g215
Vinsert
p17215
I42
VSimpleName: s
p17216
tp17217
I1
s(g4452
I42
g4453
Vinsert
p17218
I83
VModifier: static
p17219
tp17220
I1
s(g2397
I42
g2398
Vinsert
p17221
I43
VSimpleType: Handle
p17222
tp17223
F0.25
s(g406
I42
g407
Vinsert
p17224
I36
VParenthesizedExpression
p17225
tp17226
I6
s(g2405
I42
g2406
Vinsert
p17227
I83
VModifier: public
p17228
tp17229
F2.0
s(g3251
I42
g3252
Vinsert
p17230
I7
VAssignment: =
p17231
tp17232
I1
s(g3676
I42
g3677
Vinsert
p17233
I12
VCatchClause
p17234
tp17235
I4
s(g10611
I42
g10612
Vinsert
p17236
I42
VSimpleName: Exception
p17237
tp17238
I2
s(g386
I42
g387
Vinsert
p17239
I43
VSimpleType: MonitorEnterExpr
p17240
tp17241
F0.25
s(g3110
I42
g3111
Vinsert
p17242
I27
VInfixExpression: !=
p17243
tp17244
I1
s(g497
I42
g498
Vinsert
p17245
I42
VSimpleName: intern
p17246
tp17247
F0.25
s(g618
I42
g619
Vinsert
p17248
I42
VSimpleName: equals
p17249
tp17250
I2
s(g4549
I42
g4550
Vinsert
p17251
I42
VSimpleName: fexpr
p17252
tp17253
I1
s(g567
I42
g568
Vinsert
p17254
I43
VSimpleType: Transaction
p17255
tp17256
I1
s(g5236
I42
g5237
Vinsert
p17257
I43
VSimpleType: GeneratorAdapter
p17258
tp17259
F0.25
s(g6300
I42
g6301
Vinsert
p17260
I42
VSimpleName: Runnable
p17261
tp17262
F0.25
s(g1278
I42
g1279
Vinsert
p17263
I42
VSimpleName: gen
p17264
tp17265
I1
s(g12920
I42
g12921
Vinsert
p17266
I42
VSimpleName: catchExprs
p17267
tp17268
I2
s(g1037
I42
g1038
Vinsert
p17269
I42
VSimpleName: n
p17270
tp17271
I1
s(g3754
I42
g3755
Vinsert
p17272
I42
VSimpleName: h
p17273
tp17274
I1
s(g305
I42
g306
Vinsert
p17275
I42
VSimpleName: access
p17276
tp17277
I1
s(g2756
I42
g2757
Vinsert
p17278
I39
VPrimitiveType: void
p17279
tp17280
F0.5
s(g4754
I42
g4755
Vinsert
p17281
I43
VSimpleType: List
p17282
tp17283
I2
s(g3841
I42
g3842
Vinsert
p17284
I41
VReturnStatement
p17285
tp17286
I1
s(g86
I42
g87
Vinsert
p17287
I42
VSimpleName: METHOD_RETURN_CONTEXT
p17288
tp17289
F0.25
s(g2940
I42
g2941
Vinsert
p17290
I42
VSimpleName: name
p17291
tp17292
F0.25
s(g2914
I42
g2915
Vinsert
p17293
I40
VQualifiedName: y.lpart
p17294
tp17295
I1
s(g1510
I42
g1511
Vinsert
p17296
I42
VSimpleName: Object
p17297
tp17298
F2.25
s(g9965
I42
g9966
Vinsert
p17299
I42
VSimpleName: Double
p17300
tp17301
I1
s(g1273
I42
g1274
Vinsert
p17302
I61
VWhileStatement
p17303
tp17304
I1
s(g2361
I42
g2362
Vinsert
p17305
I24
VForStatement
p17306
tp17307
I7
s(g6639
I42
g6640
Vinsert
p17308
I42
VSimpleName: invokeStatic
p17309
tp17310
I1
s(g2711
I42
g2712
Vinsert
p17311
I8
VBlock
p17312
tp17313
I1
s(g1009
I42
g1010
Vinsert
p17314
I42
VSimpleName: rns
p17315
tp17316
F0.25
s(g119
I42
g120
Vinsert
p17317
I42
VSimpleName: Compiler
p17318
tp17319
I1
s(g6561
I42
g6562
Vinsert
p17320
I40
VQualifiedName: C.EXPRESSION
p17321
tp17322
I1
s(g1326
I42
g1327
Vinsert
p17323
I42
VSimpleName: idx
p17324
tp17325
I1
s(g2060
I42
g2061
Vinsert
p17326
I43
VSimpleType: Float
p17327
tp17328
I2
s(g6335
I42
g6336
Vinsert
p17329
I7
VAssignment: =
p17330
tp17331
I2
s(g676
I42
g677
Vinsert
p17332
I41
VReturnStatement
p17333
tp17334
I2
s(g1291
I42
g1292
Vinsert
p17335
I42
VSimpleName: hasJavaClass
p17336
tp17337
F0.25
s(g4041
I42
g4042
Vinsert
p17338
I59
VVariableDeclarationFragment
p17339
tp17340
I1
s(g3161
I42
g3162
Vinsert
p17341
I59
VVariableDeclarationFragment
p17342
tp17343
I2
s(g4399
I42
g4400
Vinsert
p17344
I42
VSimpleName: getParentFile
p17345
tp17346
I1
s(g9595
I42
g9596
Vinsert
p17347
I42
VSimpleName: find
p17348
tp17349
F0.25
s(g765
I42
g766
Vinsert
p17350
I24
VForStatement
p17351
tp17352
I2
s(g862
I42
g863
Vinsert
p17353
I53
VThrowStatement
p17354
tp17355
I1
s(g9124
I42
g9125
Vinsert
p17356
I44
VSingleVariableDeclaration
p17357
tp17358
F0.25
s(g2677
I42
g2678
Vinsert
p17359
I27
VInfixExpression: >
p17360
tp17361
I1
s(g3121
I42
g3122
Vinsert
p17362
I36
VParenthesizedExpression
p17363
tp17364
I2
s(g7113
I42
g7114
Vinsert
p17365
I21
VExpressionStatement
p17366
tp17367
I1
s(g4932
I42
g4933
Vinsert
p17368
I42
VSimpleName: arg14
p17369
tp17370
F0.5
s(g144
I42
g145
Vinsert
p17371
I42
VSimpleName: invoke
p17372
tp17373
F0.25
s(g3591
I42
g3592
Vinsert
p17374
I42
VSimpleName: getResourceAsStream
p17375
tp17376
I2
s(g10591
I42
g10592
Vinsert
p17377
I42
VSimpleName: getMethods
p17378
tp17379
I1
s(g593
I42
g594
Vinsert
p17380
I43
VSimpleType: Enumeration
p17381
tp17382
I1
s(g1331
I42
g1332
Vinsert
p17383
I32
VMethodInvocation
p17384
tp17385
I2
s(g4718
I42
g4719
Vinsert
p17386
I42
VSimpleName: Object
p17387
tp17388
F1.5
s(g2205
I42
g2206
Vinsert
p17389
I42
VSimpleName: ISeq
p17390
tp17391
F0.25
s(g1601
I42
g1602
Vinsert
p17392
I42
VSimpleName: Entry
p17393
tp17394
I3
s(g2376
I42
g2377
Vinsert
p17395
I32
VMethodInvocation
p17396
tp17397
I1
s(g247
I42
g248
Vinsert
p17398
I34
VNumberLiteral: 8
p17399
tp17400
I1
s(g1634
I42
g1635
Vinsert
p17401
I59
VVariableDeclarationFragment
p17402
tp17403
I2
s(g4041
I42
g4042
Vinsert
p17404
I43
VSimpleType: Label
p17405
tp17406
I1
s(g1127
I42
g1128
Vinsert
p17407
I45
VStringLiteral: ", had: "
p17408
tp17409
I1
s(g4176
I42
g4177
Vinsert
p17410
I42
VSimpleName: Stream
p17411
tp17412
I3
s(g247
I42
g248
Vinsert
p17413
I42
VSimpleName: c
p17414
tp17415
I1
s(g3973
I42
g3974
Vinsert
p17416
I41
VReturnStatement
p17417
tp17418
I2
s(g2135
I42
g2136
Vinsert
p17419
I42
VSimpleName: buckets
p17420
tp17421
I2
s(g608
I42
g609
Vinsert
p17422
I42
VSimpleName: leaf
p17423
tp17424
I1
s(Vinsert
p17425
I42
VSimpleName: cons
p17426
Vinsert
p17427
I59
VVariableDeclarationFragment
p17428
tp17429
I3
s(g3438
I42
g3439
Vinsert
p17430
I43
VSimpleType: CyclicBarrier
p17431
tp17432
F0.25
s(g15080
I42
g15081
Vinsert
p17433
I42
VSimpleName: arg5
p17434
tp17435
I1
s(g1941
I42
g1942
Vinsert
p17436
I40
VQualifiedName: addedLeaf.val
p17437
tp17438
I1
s(g5505
I42
g5506
Vinsert
p17439
I42
VSimpleName: Namespace
p17440
tp17441
I2
s(g1278
I42
g1279
Vinsert
p17442
I59
VVariableDeclarationFragment
p17443
tp17444
I8
s(g51
I42
g52
Vinsert
p17445
I42
VSimpleName: PushbackReader
p17446
tp17447
I1
s(g2231
I42
g2232
Vinsert
p17448
I32
VMethodInvocation
p17449
tp17450
I4
s(g760
I42
g761
Vinsert
p17451
I43
VSimpleType: LineNumberingPushbackReader
p17452
tp17453
I3
s(g3819
I42
g3820
Vinsert
p17454
I45
VStringLiteral: "clojure.lang.Ref"
p17455
tp17456
I1
s(Vinsert
p17457
I42
VSimpleName: getAndIncrement
p17458
Vinsert
p17459
I42
VSimpleName: array
p17460
tp17461
F0.25
s(g11040
I42
g11041
Vinsert
p17462
I9
VBooleanLiteral: true
p17463
tp17464
F0.25
s(g1817
I42
g1818
Vinsert
p17465
I45
VStringLiteral: "if(~A ~A null)~%"
p17466
tp17467
I1
s(Vinsert
p17468
I42
VSimpleName: intern
p17469
Vinsert
p17470
I42
VSimpleName: var
p17471
tp17472
F1.25
s(g1662
I42
g1663
Vinsert
p17473
I32
VMethodInvocation
p17474
tp17475
I2
s(g5036
I42
g5037
Vinsert
p17476
I42
VSimpleName: _meta
p17477
tp17478
F3.5
s(g9965
I42
g9966
Vinsert
p17479
I25
VIfStatement
p17480
tp17481
I2
s(g4640
I42
g4641
Vinsert
p17482
I43
VSimpleType: String
p17483
tp17484
F0.5
s(g598
I42
g599
Vinsert
p17485
I43
VSimpleType: Symbol
p17486
tp17487
I1
s(g4237
I42
g4238
Vinsert
p17488
I42
VSimpleName: tailoff
p17489
tp17490
I1
s(g479
I42
g480
Vinsert
p17491
I42
VSimpleName: hash
p17492
tp17493
I1
s(g5394
I42
g5395
Vinsert
p17494
I31
VMethodDeclaration
p17495
tp17496
F0.5
s(g2376
I42
g2377
Vinsert
p17497
I27
VInfixExpression: !=
p17498
tp17499
I1
s(g46
I42
g47
Vinsert
p17500
I42
VSimpleName: ret
p17501
tp17502
F1.0
s(g11818
I42
g11819
Vinsert
p17503
I42
VSimpleName: first
p17504
tp17505
F0.5
s(g3619
I42
g3620
Vinsert
p17506
I42
VSimpleName: TRef
p17507
tp17508
I1
s(g7694
I42
g7695
Vinsert
p17509
I27
VInfixExpression: >
p17510
tp17511
I1
s(g1099
I42
g1100
Vinsert
p17512
I33
VNullLiteral
p17513
tp17514
F1.5
s(g386
I42
g387
Vinsert
p17515
I42
VSimpleName: MonitorEnterExpr
p17516
tp17517
F0.25
s(g154
I42
g155
Vinsert
p17518
I27
VInfixExpression: +
p17519
tp17520
F0.25
s(g4041
I42
g4042
Vinsert
p17521
I7
VAssignment: =
p17522
tp17523
I1
s(g2348
I42
g2349
Vinsert
p17524
I59
VVariableDeclarationFragment
p17525
tp17526
I2
s(g5634
I42
g5635
Vinsert
p17527
I60
VVariableDeclarationStatement
p17528
tp17529
I1
s(g2991
I42
g2992
Vinsert
p17530
I33
VNullLiteral
p17531
tp17532
I1
s(g3384
I42
g3385
Vinsert
p17533
I60
VVariableDeclarationStatement
p17534
tp17535
I2
s(g396
I42
g397
Vinsert
p17536
I43
VSimpleType: ListIterator
p17537
tp17538
I1
s(g1977
I42
g1978
Vinsert
p17539
I42
VSimpleName: getResource
p17540
tp17541
F0.25
s(g676
I42
g677
Vinsert
p17542
I44
VSingleVariableDeclaration
p17543
tp17544
F0.5
s(g6450
I42
g6451
Vinsert
p17545
I42
VSimpleName: bsmIndex
p17546
tp17547
I1
s(g6561
I42
g6562
Vinsert
p17548
I42
VSimpleName: target
p17549
tp17550
I1
s(g735
I42
g736
Vinsert
p17551
I31
VMethodDeclaration
p17552
tp17553
F0.5
s(g36
I42
g37
Vinsert
p17554
I21
VExpressionStatement
p17555
tp17556
F4.5
s(g2397
I42
g2398
Vinsert
p17557
I8
VBlock
p17558
tp17559
I4
s(g3405
I42
g3406
Vinsert
p17560
I42
VSimpleName: ERR
p17561
tp17562
I1
s(g8576
I42
g8577
Vinsert
p17563
I11
VCastExpression
p17564
tp17565
I1
s(g9244
I42
g9245
Vinsert
p17566
I42
VSimpleName: NotSerializableException
p17567
tp17568
I2
s(g2315
I42
g2316
Vinsert
p17569
I32
VMethodInvocation
p17570
tp17571
I1
s(g3455
I42
g3456
Vinsert
p17572
I42
VSimpleName: VAR_TYPE
p17573
tp17574
I1
s(g814
I42
g815
Vinsert
p17575
I9
VBooleanLiteral: false
p17576
tp17577
I1
s(g4463
I42
g4464
Vinsert
p17578
I32
VMethodInvocation
p17579
tp17580
I4
s(g10288
I42
g10289
Vinsert
p17581
I42
VSimpleName: ret
p17582
tp17583
I3
s(g222
I42
g223
Vinsert
p17584
I45
VStringLiteral: "clojure"
p17585
tp17586
I3
s(g5893
I42
g5894
Vinsert
p17587
I42
VSimpleName: Long
p17588
tp17589
I3
s(g989
I42
g990
Vinsert
p17590
I42
VSimpleName: Var
p17591
tp17592
I2
s(g1573
I42
g1574
Vinsert
p17593
I42
VSimpleName: T
p17594
tp17595
F1.25
s(g809
I42
g810
Vinsert
p17596
I34
VNumberLiteral: 0
p17597
tp17598
I2
s(g4224
I42
g4225
Vinsert
p17599
I32
VMethodInvocation
p17600
tp17601
I3
s(g2273
I42
g2274
Vinsert
p17602
I42
VSimpleName: input
p17603
tp17604
I1
s(g8965
I42
g8966
Vinsert
p17605
I42
VSimpleName: createdLoader
p17606
tp17607
I1
s(g1349
I42
g1350
Vinsert
p17608
I42
VSimpleName: rq
p17609
tp17610
I1
s(g10611
I42
g10612
Vinsert
p17611
I8
VBlock
p17612
tp17613
I3
s(g10360
I42
g10361
Vinsert
p17614
I42
VSimpleName: doInvoke
p17615
tp17616
I10
s(g2087
I42
g2088
Vinsert
p17617
I42
VSimpleName: Var
p17618
tp17619
F0.25
s(g8480
I42
g8481
Vinsert
p17620
I42
VSimpleName: paramType
p17621
tp17622
F0.25
s(g1967
I42
g1968
Vinsert
p17623
I42
VSimpleName: Symbol
p17624
tp17625
F0.25
s(g4549
I42
g4550
Vinsert
p17626
I60
VVariableDeclarationStatement
p17627
tp17628
I3
s(g2814
I42
g2815
Vinsert
p17629
I25
VIfStatement
p17630
tp17631
I1
s(g6409
I42
g6410
Vinsert
p17632
I42
VSimpleName: gen
p17633
tp17634
I2
s(g1137
I42
g1138
Vinsert
p17635
I42
VSimpleName: IPersistentMap
p17636
tp17637
I3
s(g1094
I42
g1095
Vinsert
p17638
I42
VSimpleName: xc
p17639
tp17640
I2
s(g3400
I42
g3401
Vinsert
p17641
I42
VSimpleName: err
p17642
tp17643
I1
s(g903
I42
g904
Vinsert
p17644
I42
VSimpleName: aclass
p17645
tp17646
I1
s(g1611
I42
g1612
Vinsert
p17647
I25
VIfStatement
p17648
tp17649
I5
s(g9877
I42
g9878
Vinsert
p17650
I9
VBooleanLiteral: false
p17651
tp17652
I1
s(g9244
I42
g9245
Vinsert
p17653
I42
VSimpleName: writeObject
p17654
tp17655
F0.5
s(g1760
I42
g1761
Vinsert
p17656
I40
VQualifiedName: lb.idx
p17657
tp17658
F0.25
s(g4743
I42
g4744
Vinsert
p17659
I42
VSimpleName: Method
p17660
tp17661
I1
s(g2520
I42
g2521
Vinsert
p17662
I42
VSimpleName: assoc
p17663
tp17664
I2
s(g2244
I42
g2245
Vinsert
p17665
I53
VThrowStatement
p17666
tp17667
I1
s(g7638
I42
g7639
Vinsert
p17668
I42
VSimpleName: ret
p17669
tp17670
I1
s(g852
I42
g853
Vinsert
p17671
I42
VSimpleName: Object
p17672
tp17673
I1
s(g1510
I42
g1511
Vinsert
p17674
I32
VMethodInvocation
p17675
tp17676
I35
s(g2197
I42
g2198
Vinsert
p17677
I34
VNumberLiteral: 6
p17678
tp17679
I1
s(g1949
I42
g1950
Vinsert
p17680
I45
VStringLiteral: "Clojure\u005cn"
p17681
tp17682
I1
s(g4110
I42
g4111
Vinsert
p17683
I42
VSimpleName: newv
p17684
tp17685
F0.5
s(g2197
I42
g2198
Vinsert
p17686
I42
VSimpleName: readUnsignedShort
p17687
tp17688
I1
s(g5130
I42
g5131
Vinsert
p17689
I32
VMethodInvocation
p17690
tp17691
I1
s(g9569
I42
g9570
Vinsert
p17692
I34
VNumberLiteral: 0
p17693
tp17694
I1
s(g8273
I42
g8274
Vinsert
p17695
I59
VVariableDeclarationFragment
p17696
tp17697
I2
s(g1688
I42
g1689
Vinsert
p17698
I42
VSimpleName: Module
p17699
tp17700
I1
s(g4831
I42
g4832
Vinsert
p17701
I11
VCastExpression
p17702
tp17703
I1
s(g6045
I42
g6046
Vinsert
p17704
I42
VSimpleName: i
p17705
tp17706
I4
s(g3201
I42
g3202
Vinsert
p17707
I9
VBooleanLiteral: false
p17708
tp17709
F0.5
s(g149
I42
g150
Vinsert
p17710
I42
VSimpleName: Exception
p17711
tp17712
F0.5
s(g1573
I42
g1574
Vinsert
p17713
I42
VSimpleName: val
p17714
tp17715
F0.25
s(g1866
I42
g1867
Vinsert
p17716
I42
VSimpleName: intVal
p17717
tp17718
I1
s(g4557
I42
g4558
Vinsert
p17719
I42
VSimpleName: rest
p17720
tp17721
I2
s(g3527
I42
g3528
Vinsert
p17722
I42
VSimpleName: invoke
p17723
tp17724
F0.25
s(g2983
I42
g2984
Vinsert
p17725
I13
VCharacterLiteral: '.'
p17726
tp17727
I1
s(g1050
I42
g1051
Vinsert
p17728
I32
VMethodInvocation
p17729
tp17730
I8
s(g3999
I42
g4000
Vinsert
p17731
I39
VPrimitiveType: char
p17732
tp17733
I1
s(g10374
I42
g10375
Vinsert
p17734
I42
VSimpleName: Namespace
p17735
tp17736
I3
s(g386
I42
g387
Vinsert
p17737
I27
VInfixExpression: ||
p17738
tp17739
I1
s(g1500
I42
g1501
Vinsert
p17740
I45
VStringLiteral: "require"
p17741
tp17742
I1
s(g91
I42
g92
Vinsert
p17743
I25
VIfStatement
p17744
tp17745
I1
s(g1568
I42
g1569
Vinsert
p17746
I85
VDimension
p17747
tp17748
I2
s(g1740
I42
g1741
Vinsert
p17749
I52
VThisExpression
p17750
tp17751
I1
s(g4267
I42
g4268
Vinsert
p17752
I34
VNumberLiteral: 15
p17753
tp17754
I1
s(g3014
I42
g3015
Vinsert
p17755
I41
VReturnStatement
p17756
tp17757
I1
s(g5584
I42
g5585
Vinsert
p17758
I33
VNullLiteral
p17759
tp17760
F0.25
s(g11818
I42
g11819
Vinsert
p17761
I54
VTryStatement
p17762
tp17763
I4
s(g4612
I42
g4613
Vinsert
p17764
I42
VSimpleName: BigDecimal
p17765
tp17766
I1
s(g3100
I42
g3101
Vinsert
p17767
I43
VSimpleType: Obj
p17768
tp17769
F0.25
s(Vinsert
p17770
I42
VSimpleName: printStackTrace
p17771
Vinsert
p17772
I54
VTryStatement
p17773
tp17774
I1
s(g1817
I42
g1818
Vinsert
p17775
I8
VBlock
p17776
tp17777
I1
s(g4118
I42
g4119
Vinsert
p17778
I83
VModifier: final
p17779
tp17780
F0.25
s(g6092
I42
g6093
Vinsert
p17781
I2
VArrayAccess
p17782
tp17783
I1
s(g572
I42
g573
Vinsert
p17784
I39
VPrimitiveType: long
p17785
tp17786
F0.25
s(g3405
I42
g3406
Vinsert
p17787
I43
VSimpleType: PrintWriter
p17788
tp17789
F1.25
s(g4726
I42
g4727
Vinsert
p17790
I85
VDimension
p17791
tp17792
F0.25
s(g3014
I42
g3015
Vinsert
p17793
I43
VSimpleType: Class
p17794
tp17795
F0.25
s(g842
I42
g843
Vinsert
p17796
I42
VSimpleName: ret1
p17797
tp17798
I9
s(Vinsert
p17799
I42
VSimpleName: first
p17800
Vinsert
p17801
I42
VSimpleName: nextElement
p17802
tp17803
F0.25
s(g1187
I42
g1188
Vinsert
p17804
I42
VSimpleName: array
p17805
tp17806
I1
s(g3156
I42
g3157
Vinsert
p17807
I42
VSimpleName: PersistentArray
p17808
tp17809
I1
s(g5528
I42
g5529
Vinsert
p17810
I42
VSimpleName: Class
p17811
tp17812
F0.5
s(g2822
I42
g2823
Vinsert
p17813
I42
VSimpleName: Symbol
p17814
tp17815
I2
s(g5206
I42
g5207
Vinsert
p17816
I27
VInfixExpression: <=
p17817
tp17818
I1
s(g5916
I42
g5917
Vinsert
p17819
I43
VSimpleType: Float
p17820
tp17821
I1
s(g598
I42
g599
Vinsert
p17822
I34
VNumberLiteral: 0
p17823
tp17824
I2
s(g489
I42
g490
Vinsert
p17825
I42
VSimpleName: Label
p17826
tp17827
I1
s(g4323
I42
g4324
Vinsert
p17828
I66
VTextElement: prefixed with a slash or not.</li>
p17829
tp17830
F0.25
s(g3728
I42
g3729
Vinsert
p17831
I42
VSimpleName: gen
p17832
tp17833
F3.25
s(g300
I42
g301
Vinsert
p17834
I25
VIfStatement
p17835
tp17836
I2
s(g999
I42
g1000
Vinsert
p17837
I42
VSimpleName: Type
p17838
tp17839
I1
s(g386
I42
g387
Vinsert
p17840
I25
VIfStatement
p17841
tp17842
I1
s(g5111
I42
g5112
Vinsert
p17843
I21
VExpressionStatement
p17844
tp17845
I2
s(g799
I42
g800
Vinsert
p17846
I42
VSimpleName: ops
p17847
tp17848
I2
s(g2729
I42
g2730
Vinsert
p17849
I25
VIfStatement
p17850
tp17851
I1
s(g6505
I42
g6506
Vinsert
p17852
I42
VSimpleName: Type
p17853
tp17854
I1
s(g847
I42
g848
Vinsert
p17855
I21
VExpressionStatement
p17856
tp17857
I1
s(g3438
I42
g3439
Vinsert
p17858
I23
VFieldDeclaration
p17859
tp17860
F0.25
s(g2047
I42
g2048
Vinsert
p17861
I40
VQualifiedName: bi.binding.name
p17862
tp17863
I1
s(g11204
I42
g11205
Vinsert
p17864
I42
VSimpleName: method
p17865
tp17866
I1
s(g91
I42
g92
Vinsert
p17867
I8
VBlock
p17868
tp17869
F1.25
s(g7680
I42
g7681
Vinsert
p17870
I42
VSimpleName: init
p17871
tp17872
F0.25
s(g3300
I42
g3301
Vinsert
p17873
I8
VBlock
p17874
tp17875
I9
s(g290
I42
g291
Vinsert
p17876
I39
VPrimitiveType: int
p17877
tp17878
F0.25
s(g1177
I42
g1178
Vinsert
p17879
I42
VSimpleName: println
p17880
tp17881
I1
s(g2451
I42
g2452
Vinsert
p17882
I42
VSimpleName: ctors
p17883
tp17884
I1
s(g2687
I42
g2688
Vinsert
p17885
I42
VSimpleName: opts
p17886
tp17887
I1
s(g898
I42
g899
Vinsert
p17888
I43
VSimpleType: TRef
p17889
tp17890
I1
s(g709
I42
g710
Vinsert
p17891
I32
VMethodInvocation
p17892
tp17893
I4
s(g242
I42
g243
Vinsert
p17894
I33
VNullLiteral
p17895
tp17896
F6.0
s(g5163
I42
g5164
Vinsert
p17897
I42
VSimpleName: HASHMAP
p17898
tp17899
I1
s(g2697
I42
g2698
Vinsert
p17900
I32
VMethodInvocation
p17901
tp17902
I1
s(g1500
I42
g1501
Vinsert
p17903
I42
VSimpleName: var
p17904
tp17905
I3
s(g406
I42
g407
Vinsert
p17906
I42
VSimpleName: deref
p17907
tp17908
F4.25
s(g3487
I42
g3488
Vinsert
p17909
I42
VSimpleName: gs
p17910
tp17911
I1
s(g1596
I42
g1597
Vinsert
p17912
I42
VSimpleName: asTransient
p17913
tp17914
I2
s(g1616
I42
g1617
Vinsert
p17915
I43
VSimpleType: IMap
p17916
tp17917
I3
s(g9012
I42
g9013
Vinsert
p17918
I85
VDimension
p17919
tp17920
I9
s(g760
I42
g761
Vinsert
p17921
I59
VVariableDeclarationFragment
p17922
tp17923
I1
s(g3105
I42
g3106
Vinsert
p17924
I42
VSimpleName: NOP
p17925
tp17926
I1
s(g3201
I42
g3202
Vinsert
p17927
I42
VSimpleName: gen
p17928
tp17929
I1
s(g827
I42
g828
Vinsert
p17930
I32
VMethodInvocation
p17931
tp17932
I4
s(g9948
I42
g9949
Vinsert
p17933
I45
VStringLiteral: "current-ns"
p17934
tp17935
I1
s(g6040
I42
g6041
Vinsert
p17936
I38
VPrefixExpression: -
p17937
tp17938
I1
s(g8138
I42
g8139
Vinsert
p17939
I59
VVariableDeclarationFragment
p17940
tp17941
I1
s(g2257
I42
g2258
Vinsert
p17942
I54
VTryStatement
p17943
tp17944
I2
s(g3261
I42
g3262
Vinsert
p17945
I42
VSimpleName: RT
p17946
tp17947
I5
s(g6040
I42
g6041
Vinsert
p17948
I27
VInfixExpression: <
p17949
tp17950
I1
s(g2278
I42
g2279
Vinsert
p17951
I43
VSimpleType: ISeq
p17952
tp17953
I1
s(g6806
I42
g6807
Vinsert
p17954
I42
VSimpleName: prior
p17955
tp17956
I4
s(g1451
I42
g1452
Vinsert
p17957
I43
VSimpleType: Long
p17958
tp17959
I1
s(g7183
I42
g7184
Vinsert
p17960
I45
VStringLiteral: "quote"
p17961
tp17962
F0.25
s(g6450
I42
g6451
Vinsert
p17963
I42
VSimpleName: strVal1
p17964
tp17965
I1
s(g2095
I42
g2096
Vinsert
p17966
I42
VSimpleName: IFn
p17967
tp17968
F1.75
s(g1525
I42
g1526
Vinsert
p17969
I42
VSimpleName: startPoint
p17970
tp17971
F0.25
s(g1845
I42
g1846
Vinsert
p17972
I40
VQualifiedName: argsarray.length
p17973
tp17974
I1
s(g3500
I42
g3501
Vinsert
p17975
I25
VIfStatement
p17976
tp17977
I1
s(g929
I42
g930
Vinsert
p17978
I42
VSimpleName: NOT_FOUND
p17979
tp17980
I4
s(g567
I42
g568
Vinsert
p17981
I42
VSimpleName: getTransaction
p17982
tp17983
I1
s(g2100
I42
g2101
Vinsert
p17984
I32
VMethodInvocation
p17985
tp17986
I3
s(g1456
I42
g1457
Vinsert
p17987
I42
VSimpleName: protocolOn
p17988
tp17989
I1
s(g6859
I42
g6860
Vinsert
p17990
I42
VSimpleName: Exception
p17991
tp17992
F1.25
s(g4557
I42
g4558
Vinsert
p17993
I60
VVariableDeclarationStatement
p17994
tp17995
I2
s(g2186
I42
g2187
Vinsert
p17996
I39
VPrimitiveType: boolean
p17997
tp17998
F0.25
s(g3033
I42
g3034
Vinsert
p17999
I42
VSimpleName: lastIndexOf
p18000
tp18001
I1
s(g593
I42
g594
Vinsert
p18002
I42
VSimpleName: URL
p18003
tp18004
I1
s(g6859
I42
g6860
Vinsert
p18005
I25
VIfStatement
p18006
tp18007
I3
s(g3880
I42
g3881
Vinsert
p18008
I42
VSimpleName: intValue
p18009
tp18010
F1.25
s(g4702
I42
g4703
Vinsert
p18011
I42
VSimpleName: table
p18012
tp18013
I1
s(g2216
I42
g2217
Vinsert
p18014
I42
VSimpleName: xform
p18015
tp18016
I3
s(g11275
I42
g11276
Vinsert
p18017
I27
VInfixExpression: !=
p18018
tp18019
I3
s(g4694
I42
g4695
Vinsert
p18020
I43
VSimpleType: Object
p18021
tp18022
F0.75
s(g1722
I42
g1723
Vinsert
p18023
I42
VSimpleName: c
p18024
tp18025
I1
s(g671
I42
g672
Vinsert
p18026
I42
VSimpleName: obj
p18027
tp18028
F3.25
s(g1639
I42
g1640
Vinsert
p18029
I42
VSimpleName: sourcePath
p18030
tp18031
I1
s(g8677
I42
g8678
Vinsert
p18032
I44
VSingleVariableDeclaration
p18033
tp18034
F0.5
s(g4447
I42
g4448
Vinsert
p18035
I42
VSimpleName: Namespace
p18036
tp18037
I1
s(g1707
I42
g1708
Vinsert
p18038
I44
VSingleVariableDeclaration
p18039
tp18040
F0.25
s(g396
I42
g397
Vinsert
p18041
I43
VSimpleType: ISeq
p18042
tp18043
I1
s(g3591
I42
g3592
Vinsert
p18044
I43
VSimpleType: RT
p18045
tp18046
I2
s(g4323
I42
g4324
Vinsert
p18047
I66
VTextElement: files are loaded in order, as if via <code>load-file</code>.  Filesystem and classpath
p18048
tp18049
F0.25
s(g2060
I42
g2061
Vinsert
p18050
I42
VSimpleName: x
p18051
tp18052
F3.5
s(g2657
I42
g2658
Vinsert
p18053
I43
VSimpleType: IdentityHashMap
p18054
tp18055
I2
s(g3180
I42
g3181
Vinsert
p18056
I7
VAssignment: =
p18057
tp18058
I1
s(g8706
I42
g8707
Vinsert
p18059
I42
VSimpleName: get
p18060
tp18061
I4
s(g9417
I42
g9418
Vinsert
p18062
I43
VSimpleType: String
p18063
tp18064
I2
s(g8511
I42
g8512
Vinsert
p18065
I43
VSimpleType: IPersistentVector
p18066
tp18067
I1
s(g5436
I42
g5437
Vinsert
p18068
I42
VSimpleName: bindRoot
p18069
tp18070
I1
s(g5163
I42
g5164
Vinsert
p18071
I59
VVariableDeclarationFragment
p18072
tp18073
F3.25
s(g3754
I42
g3755
Vinsert
p18074
I42
VSimpleName: Integer
p18075
tp18076
I2
s(g6092
I42
g6093
Vinsert
p18077
I42
VSimpleName: array
p18078
tp18079
I1
s(g194
I42
g195
Vinsert
p18080
I36
VParenthesizedExpression
p18081
tp18082
I1
s(g4831
I42
g4832
Vinsert
p18083
I42
VSimpleName: MaybePrimitiveExpr
p18084
tp18085
I1
s(g1081
I42
g1082
Vinsert
p18086
I27
VInfixExpression: ==
p18087
tp18088
I1
s(g222
I42
g223
Vinsert
p18089
I42
VSimpleName: var
p18090
tp18091
I3
s(g1760
I42
g1761
Vinsert
p18092
I42
VSimpleName: visitLocalVariable
p18093
tp18094
F0.25
s(g290
I42
g291
Vinsert
p18095
I32
VMethodInvocation
p18096
tp18097
I4
s(g2909
I42
g2910
Vinsert
p18098
I42
VSimpleName: stack
p18099
tp18100
F2.25
s(g8706
I42
g8707
Vinsert
p18101
I27
VInfixExpression: >
p18102
tp18103
I2
s(Vinsert
p18104
I42
VSimpleName: num
p18105
Vinsert
p18106
I2
VArrayAccess
p18107
tp18108
F0.25
s(g755
I42
g756
Vinsert
p18109
I42
VSimpleName: line
p18110
tp18111
F2.25
s(g1
I42
g2
Vinsert
p18112
I25
VIfStatement
p18113
tp18114
I1
s(g1368
I42
g1369
Vinsert
p18115
I60
VVariableDeclarationStatement
p18116
tp18117
I3
s(Vinsert
p18118
I42
VSimpleName: hashCombine
p18119
Vinsert
p18120
I41
VReturnStatement
p18121
tp18122
F1.25
s(g5436
I42
g5437
Vinsert
p18123
I42
VSimpleName: refers
p18124
tp18125
I2
s(g4886
I42
g4887
Vinsert
p18126
I42
VSimpleName: c
p18127
tp18128
I2
s(g3633
I42
g3634
Vinsert
p18129
I42
VSimpleName: IPersistentMap
p18130
tp18131
I2
s(g313
I42
g314
Vinsert
p18132
I42
VSimpleName: Exception
p18133
tp18134
F0.25
s(g9320
I42
g9321
Vinsert
p18135
I42
VSimpleName: className
p18136
tp18137
I1
s(g603
I42
g604
Vinsert
p18138
I42
VSimpleName: ret
p18139
tp18140
F1.0
s(g5788
I42
g5789
Vinsert
p18141
I8
VBlock
p18142
tp18143
I2
s(g827
I42
g828
Vinsert
p18144
I21
VExpressionStatement
p18145
tp18146
I1
s(g6845
I42
g6846
Vinsert
p18147
I34
VNumberLiteral: 1
p18148
tp18149
I1
s(g929
I42
g930
Vinsert
p18150
I27
VInfixExpression: !=
p18151
tp18152
I3
s(g598
I42
g599
Vinsert
p18153
I36
VParenthesizedExpression
p18154
tp18155
I1
s(g562
I42
g563
Vinsert
p18156
I32
VMethodInvocation
p18157
tp18158
I3
s(Vinsert
p18159
I42
VSimpleName: rest
p18160
Vinsert
p18161
I44
VSingleVariableDeclaration
p18162
tp18163
F0.5
s(g2332
I42
g2333
Vinsert
p18164
I59
VVariableDeclarationFragment
p18165
tp18166
I3
s(g4171
I42
g4172
Vinsert
p18167
I25
VIfStatement
p18168
tp18169
I3
s(g2376
I42
g2377
Vinsert
p18170
I42
VSimpleName: context
p18171
tp18172
I1
s(g618
I42
g619
Vinsert
p18173
I40
VQualifiedName: Boolean.FALSE
p18174
tp18175
I1
s(g4867
I42
g4868
Vinsert
p18176
I42
VSimpleName: Thread
p18177
tp18178
F7.5
s(g484
I42
g485
Vinsert
p18179
I42
VSimpleName: o
p18180
tp18181
I1
s(g497
I42
g498
Vinsert
p18182
I43
VSimpleType: Keyword
p18183
tp18184
F1.25
s(g4726
I42
g4727
Vinsert
p18185
I74
VParameterizedType: List<String>
p18186
tp18187
I1
s(g598
I42
g599
Vinsert
p18188
I27
VInfixExpression: ==
p18189
tp18190
I2
s(g5380
I42
g5381
Vinsert
p18191
I42
VSimpleName: Compiler
p18192
tp18193
I1
s(g1094
I42
g1095
Vinsert
p18194
I43
VSimpleType: Category
p18195
tp18196
F0.25
s(g3161
I42
g3162
Vinsert
p18197
I60
VVariableDeclarationStatement
p18198
tp18199
I1
s(g2456
I42
g2457
Vinsert
p18200
I40
VQualifiedName: Actor.Action
p18201
tp18202
I1
s(g6954
I42
g6955
Vinsert
p18203
I42
VSimpleName: s
p18204
tp18205
I2
s(g2387
I42
g2388
Vinsert
p18206
I25
VIfStatement
p18207
tp18208
I2
s(Vinsert
p18209
I42
VSimpleName: newLabel
p18210
Vinsert
p18211
I42
VSimpleName: not
p18212
tp18213
I2
s(g5802
I42
g5803
Vinsert
p18214
I43
VSimpleType: InputStream
p18215
tp18216
I1
s(g1683
I42
g1684
Vinsert
p18217
I43
VSimpleType: LocalBindingExpr
p18218
tp18219
I2
s(g3541
I42
g3542
Vinsert
p18220
I13
VCharacterLiteral: 'f'
p18221
tp18222
I1
s(g8965
I42
g8966
Vinsert
p18223
I38
VPrefixExpression: !
p18224
tp18225
I1
s(g8821
I42
g8822
Vinsert
p18226
I43
VSimpleType: Integer
p18227
tp18228
I1
s(g3986
I42
g3987
Vinsert
p18229
I42
VSimpleName: reader
p18230
tp18231
I1
s(g8138
I42
g8139
Vinsert
p18232
I42
VSimpleName: dockw
p18233
tp18234
I1
s(g8463
I42
g8464
Vinsert
p18235
I42
VSimpleName: name
p18236
tp18237
F1.25
s(g318
I42
g319
Vinsert
p18238
I11
VCastExpression
p18239
tp18240
I1
s(g770
I42
g771
Vinsert
p18241
I59
VVariableDeclarationFragment
p18242
tp18243
I4
s(g2480
I42
g2481
Vinsert
p18244
I44
VSingleVariableDeclaration
p18245
tp18246
F1.25
s(g3754
I42
g3755
Vinsert
p18247
I43
VSimpleType: Integer
p18248
tp18249
I2
s(g2711
I42
g2712
Vinsert
p18250
I59
VVariableDeclarationFragment
p18251
tp18252
I1
s(g7528
I42
g7529
Vinsert
p18253
I44
VSingleVariableDeclaration
p18254
tp18255
F0.5
s(g1349
I42
g1350
Vinsert
p18256
I43
VSimpleType: SoftReference
p18257
tp18258
I1
s(g9861
I42
g9862
Vinsert
p18259
I60
VVariableDeclarationStatement
p18260
tp18261
I2
s(g4718
I42
g4719
Vinsert
p18262
I42
VSimpleName: arg14
p18263
tp18264
F0.25
s(g1722
I42
g1723
Vinsert
p18265
I42
VSimpleName: getDeclaringClass
p18266
tp18267
I1
s(g2677
I42
g2678
Vinsert
p18268
I8
VBlock
p18269
tp18270
I2
s(g4713
I42
g4714
Vinsert
p18271
I42
VSimpleName: String
p18272
tp18273
I2
s(g13465
I42
g13466
Vinsert
p18274
I42
VSimpleName: master
p18275
tp18276
F0.25
s(g272
I42
g273
Vinsert
p18277
I27
VInfixExpression: &&
p18278
tp18279
I1
s(g3465
I42
g3466
Vinsert
p18280
I42
VSimpleName: keyOrNode
p18281
tp18282
I2
s(g1583
I42
g1584
Vinsert
p18283
I43
VSimpleType: ListMap
p18284
tp18285
I1
s(g6114
I42
g6115
Vinsert
p18286
I21
VExpressionStatement
p18287
tp18288
I1
s(g4054
I42
g4055
Vinsert
p18289
I45
VStringLiteral: "EOF while reading string"
p18290
tp18291
I2
s(g5500
I42
g5501
Vinsert
p18292
I43
VSimpleType: GeneratorAdapter
p18293
tp18294
F0.5
s(g4134
I42
g4135
Vinsert
p18295
I42
VSimpleName: IFn
p18296
tp18297
F0.25
s(g2343
I42
g2344
Vinsert
p18298
I49
VSwitchCase
p18299
tp18300
F2.25
s(g6477
I42
g6478
Vinsert
p18301
I42
VSimpleName: c
p18302
tp18303
I1
s(g5100
I42
g5101
Vinsert
p18304
I60
VVariableDeclarationStatement
p18305
tp18306
I2
s(g924
I42
g925
Vinsert
p18307
I42
VSimpleName: val
p18308
tp18309
F1.0
s(g204
I42
g205
Vinsert
p18310
I42
VSimpleName: IPersistentCollection
p18311
tp18312
F0.25
s(g1321
I42
g1322
Vinsert
p18313
I42
VSimpleName: host
p18314
tp18315
I1
s(g3833
I42
g3834
Vinsert
p18316
I85
VDimension
p18317
tp18318
I1
s(g7602
I42
g7603
Vinsert
p18319
I44
VSingleVariableDeclaration
p18320
tp18321
F0.75
s(g10288
I42
g10289
Vinsert
p18322
I41
VReturnStatement
p18323
tp18324
I5
s(g31
I42
g32
Vinsert
p18325
I43
VSimpleType: IPersistentMap
p18326
tp18327
I2
s(g5290
I42
g5291
Vinsert
p18328
I43
VSimpleType: UnresolvedVarExpr
p18329
tp18330
F0.25
s(g3400
I42
g3401
Vinsert
p18331
I42
VSimpleName: System
p18332
tp18333
I1
s(g295
I42
g296
Vinsert
p18334
I42
VSimpleName: x
p18335
tp18336
F1.25
s(g4219
I42
g4220
Vinsert
p18337
I43
VSimpleType: Symbol
p18338
tp18339
F3.25
s(g1378
I42
g1379
Vinsert
p18340
I43
VSimpleType: IllegalArgumentException
p18341
tp18342
F0.25
s(g7183
I42
g7184
Vinsert
p18343
I45
VStringLiteral: "meta"
p18344
tp18345
F0.25
s(g1578
I42
g1579
Vinsert
p18346
I42
VSimpleName: invokeMatchingMethod
p18347
tp18348
F0.25
s(g6941
I42
g6942
Vinsert
p18349
I49
VSwitchCase
p18350
tp18351
I1
s(g2641
I42
g2642
Vinsert
p18352
I11
VCastExpression
p18353
tp18354
I1
s(g6114
I42
g6115
Vinsert
p18355
I42
VSimpleName: it
p18356
tp18357
I1
s(g6166
I42
g6167
Vinsert
p18358
I1
VAnonymousClassDeclaration
p18359
tp18360
F0.25
s(g1822
I42
g1823
Vinsert
p18361
I25
VIfStatement
p18362
tp18363
I3
s(g2461
I42
g2462
Vinsert
p18364
I31
VMethodDeclaration
p18365
tp18366
F0.25
s(g2914
I42
g2915
Vinsert
p18367
I41
VReturnStatement
p18368
tp18369
F2.5
s(g1905
I42
g1906
Vinsert
p18370
I42
VSimpleName: c
p18371
tp18372
I2
s(g542
I42
g543
Vinsert
p18373
I42
VSimpleName: i
p18374
tp18375
I1
s(g1702
I42
g1703
Vinsert
p18376
I43
VSimpleType: Object
p18377
tp18378
I1
s(g1525
I42
g1526
Vinsert
p18379
I41
VReturnStatement
p18380
tp18381
F0.5
s(g7582
I42
g7583
Vinsert
p18382
I42
VSimpleName: Number
p18383
tp18384
I1
s(g6518
I42
g6519
Vinsert
p18385
I51
VSynchronizedStatement
p18386
tp18387
I1
s(g5394
I42
g5395
Vinsert
p18388
I42
VSimpleName: o2
p18389
tp18390
F0.25
s(g3400
I42
g3401
Vinsert
p18391
I42
VSimpleName: path
p18392
tp18393
I1
s(g174
I42
g175
Vinsert
p18394
I42
VSimpleName: fc
p18395
tp18396
I1
s(g10954
I42
g10955
Vinsert
p18397
I8
VBlock
p18398
tp18399
I2
s(g12383
I42
g12384
Vinsert
p18400
I43
VSimpleType: InheritableThreadLocal
p18401
tp18402
I1
s(g5916
I42
g5917
Vinsert
p18403
I42
VSimpleName: x
p18404
tp18405
I1
s(g2596
I42
g2597
Vinsert
p18406
I36
VParenthesizedExpression
p18407
tp18408
I1
s(g5960
I42
g5961
Vinsert
p18409
I40
VQualifiedName: ref.tvals.val
p18410
tp18411
I1
s(g3614
I42
g3615
Vinsert
p18412
I42
VSimpleName: makeSeq
p18413
tp18414
F0.25
s(g1649
I42
g1650
Vinsert
p18415
I42
VSimpleName: Exception
p18416
tp18417
I1
s(g862
I42
g863
Vinsert
p18418
I42
VSimpleName: e
p18419
tp18420
I2
s(g628
I42
g629
Vinsert
p18421
I52
VThisExpression
p18422
tp18423
F0.25
s(g6349
I42
g6350
Vinsert
p18424
I22
VFieldAccess
p18425
tp18426
I2
s(g4508
I42
g4509
Vinsert
p18427
I42
VSimpleName: e
p18428
tp18429
F0.25
s(g2130
I42
g2131
Vinsert
p18430
I27
VInfixExpression: *
p18431
tp18432
I1
s(g2052
I42
g2053
Vinsert
p18433
I40
VQualifiedName: Frame.TOP
p18434
tp18435
I1
s(g3295
I42
g3296
Vinsert
p18436
I33
VNullLiteral
p18437
tp18438
F0.25
s(g189
I42
g190
Vinsert
p18439
I8
VBlock
p18440
tp18441
I1
s(g6455
I42
g6456
Vinsert
p18442
I42
VSimpleName: pushThreadBinding
p18443
tp18444
F0.25
s(g6770
I42
g6771
Vinsert
p18445
I14
VClassInstanceCreation
p18446
tp18447
I1
s(g6369
I42
g6370
Vinsert
p18448
I42
VSimpleName: RT
p18449
tp18450
I2
s(g1583
I42
g1584
Vinsert
p18451
I42
VSimpleName: _count
p18452
tp18453
I1
s(g5629
I42
g5630
Vinsert
p18454
I45
VStringLiteral: "quote"
p18455
tp18456
I1
s(g3416
I42
g3417
Vinsert
p18457
I42
VSimpleName: baseLoader
p18458
tp18459
F0.5
s(g666
I42
g667
Vinsert
p18460
I21
VExpressionStatement
p18461
tp18462
F5.25
s(g106
I42
g107
Vinsert
p18463
I42
VSimpleName: owner
p18464
tp18465
I1
s(g2371
I42
g2372
Vinsert
p18466
I8
VBlock
p18467
tp18468
I6
s(g4620
I42
g4621
Vinsert
p18469
I41
VReturnStatement
p18470
tp18471
I1
s(g2018
I42
g2019
Vinsert
p18472
I43
VSimpleType: String
p18473
tp18474
F0.25
s(g4604
I42
g4605
Vinsert
p18475
I43
VSimpleType: Double
p18476
tp18477
I1
s(g1321
I42
g1322
Vinsert
p18478
I42
VSimpleName: c
p18479
tp18480
F0.25
s(g6781
I42
g6782
Vinsert
p18481
I43
VSimpleType: ISeq
p18482
tp18483
F0.25
s(g2891
I42
g2892
Vinsert
p18484
I42
VSimpleName: bint
p18485
tp18486
I1
s(g1588
I42
g1589
Vinsert
p18487
I42
VSimpleName: ArrayList
p18488
tp18489
I3
s(g1866
I42
g1867
Vinsert
p18490
I21
VExpressionStatement
p18491
tp18492
I2
s(g4557
I42
g4558
Vinsert
p18493
I42
VSimpleName: form
p18494
tp18495
I2
s(g4303
I42
g4304
Vinsert
p18496
I31
VMethodDeclaration
p18497
tp18498
F0.25
s(g3999
I42
g4000
Vinsert
p18499
I59
VVariableDeclarationFragment
p18500
tp18501
I1
s(g4118
I42
g4119
Vinsert
p18502
I42
VSimpleName: src
p18503
tp18504
I1
s(g994
I42
g995
Vinsert
p18505
I83
VModifier: static
p18506
tp18507
F0.25
s(g3991
I42
g3992
Vinsert
p18508
I7
VAssignment: =
p18509
tp18510
F4.25
s(g4123
I42
g4124
Vinsert
p18511
I43
VSimpleType: String
p18512
tp18513
F4.25
s(g1182
I42
g1183
Vinsert
p18514
I41
VReturnStatement
p18515
tp18516
I2
s(g7491
I42
g7492
Vinsert
p18517
I7
VAssignment: =
p18518
tp18519
I2
s(g8553
I42
g8554
Vinsert
p18520
I7
VAssignment: +=
p18521
tp18522
I2
s(g6561
I42
g6562
Vinsert
p18523
I32
VMethodInvocation
p18524
tp18525
I3
s(g2068
I42
g2069
Vinsert
p18526
I42
VSimpleName: xs
p18527
tp18528
F2.5
s(g2573
I42
g2574
Vinsert
p18529
I42
VSimpleName: HASHSET
p18530
tp18531
I1
s(g1316
I42
g1317
Vinsert
p18532
I11
VCastExpression
p18533
tp18534
I3
s(g1187
I42
g1188
Vinsert
p18535
I27
VInfixExpression: +
p18536
tp18537
I2
s(g436
I42
g437
Vinsert
p18538
I45
VStringLiteral: "clojure"
p18539
tp18540
F0.25
s(g3814
I42
g3815
Vinsert
p18541
I42
VSimpleName: tref
p18542
tp18543
F0.25
s(g3465
I42
g3466
Vinsert
p18544
I42
VSimpleName: n
p18545
tp18546
I2
s(g3541
I42
g3542
Vinsert
p18547
I13
VCharacterLiteral: '\u005cf'
p18548
tp18549
I1
s(g3100
I42
g3101
Vinsert
p18550
I44
VSingleVariableDeclaration
p18551
tp18552
F0.25
s(g999
I42
g1000
Vinsert
p18553
I42
VSimpleName: ACC_FINAL
p18554
tp18555
I1
s(g2315
I42
g2316
Vinsert
p18556
I43
VSimpleType: Exception
p18557
tp18558
F0.25
s(g4793
I42
g4794
Vinsert
p18559
I42
VSimpleName: macroexpand
p18560
tp18561
I1
s(g4612
I42
g4613
Vinsert
p18562
I41
VReturnStatement
p18563
tp18564
I3
s(g7613
I42
g7614
Vinsert
p18565
I43
VSimpleType: Object
p18566
tp18567
F0.25
s(g2872
I42
g2873
Vinsert
p18568
I42
VSimpleName: IllegalArgumentException
p18569
tp18570
I1
s(g4788
I42
g4789
Vinsert
p18571
I42
VSimpleName: String
p18572
tp18573
F0.75
s(g883
I42
g884
Vinsert
p18574
I42
VSimpleName: maxLocal
p18575
tp18576
I1
s(g2830
I42
g2831
Vinsert
p18577
I42
VSimpleName: Object
p18578
tp18579
I2
s(g4259
I42
g4260
Vinsert
p18580
I40
VQualifiedName: be.b
p18581
tp18582
I1
s(g1717
I42
g1718
Vinsert
p18583
I45
VStringLiteral: ""
p18584
tp18585
F0.25
s(g1616
I42
g1617
Vinsert
p18586
I42
VSimpleName: newEntries
p18587
tp18588
I2
s(g10314
I42
g10315
Vinsert
p18589
I83
VModifier: public
p18590
tp18591
F0.25
s(g1326
I42
g1327
Vinsert
p18592
I60
VVariableDeclarationStatement
p18593
tp18594
I1
s(g1147
I42
g1148
Vinsert
p18595
I8
VBlock
p18596
tp18597
F4.5
s(g5380
I42
g5381
Vinsert
p18598
I14
VClassInstanceCreation
p18599
tp18600
I2
s(g6770
I42
g6771
Vinsert
p18601
I42
VSimpleName: IllegalStateException
p18602
tp18603
I1
s(g5960
I42
g5961
Vinsert
p18604
I60
VVariableDeclarationStatement
p18605
tp18606
I1
s(g3014
I42
g3015
Vinsert
p18607
I83
VModifier: public
p18608
tp18609
F0.25
s(g6884
I42
g6885
Vinsert
p18610
I27
VInfixExpression: ==
p18611
tp18612
I2
s(g4743
I42
g4744
Vinsert
p18613
I14
VClassInstanceCreation
p18614
tp18615
I1
s(g199
I42
g200
Vinsert
p18616
I45
VStringLiteral: "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"
p18617
tp18618
I1
s(g1634
I42
g1635
Vinsert
p18619
I36
VParenthesizedExpression
p18620
tp18621
I2
s(g2682
I42
g2683
Vinsert
p18622
I42
VSimpleName: Object
p18623
tp18624
F0.75
s(g8516
I42
g8517
Vinsert
p18625
I31
VMethodDeclaration
p18626
tp18627
F0.25
s(g1094
I42
g1095
Vinsert
p18628
I43
VSimpleType: Class
p18629
tp18630
F3.75
s(g31
I42
g32
Vinsert
p18631
I42
VSimpleName: metaMap
p18632
tp18633
I1
s(g5802
I42
g5803
Vinsert
p18634
I42
VSimpleName: InputStream
p18635
tp18636
I1
s(g628
I42
g629
Vinsert
p18637
I42
VSimpleName: e
p18638
tp18639
I1
s(g883
I42
g884
Vinsert
p18640
I34
VNumberLiteral: 1
p18641
tp18642
I1
s(g4604
I42
g4605
Vinsert
p18643
I57
VTypeLiteral
p18644
tp18645
I2
s(g1722
I42
g1723
Vinsert
p18646
I32
VMethodInvocation
p18647
tp18648
I3
s(g6021
I42
g6022
Vinsert
p18649
I42
VSimpleName: matchIdx
p18650
tp18651
I2
s(g6726
I42
g6727
Vinsert
p18652
I42
VSimpleName: hasJavaClass
p18653
tp18654
F1.25
s(g8965
I42
g8966
Vinsert
p18655
I42
VSimpleName: LOADER
p18656
tp18657
I1
s(g5606
I42
g5607
Vinsert
p18658
I42
VSimpleName: ins
p18659
tp18660
F0.25
s(g5642
I42
g5643
Vinsert
p18661
I42
VSimpleName: r
p18662
tp18663
I2
s(g7113
I42
g7114
Vinsert
p18664
I10
VBreakStatement
p18665
tp18666
I1
s(g3487
I42
g3488
Vinsert
p18667
I53
VThrowStatement
p18668
tp18669
I1
s(g13608
I42
g13609
Vinsert
p18670
I39
VPrimitiveType: void
p18671
tp18672
F0.25
s(g1802
I42
g1803
Vinsert
p18673
I31
VMethodDeclaration
p18674
tp18675
F0.5
s(g2273
I42
g2274
Vinsert
p18676
I60
VVariableDeclarationStatement
p18677
tp18678
I2
s(g3541
I42
g3542
Vinsert
p18679
I42
VSimpleName: ch
p18680
tp18681
I5
s(g1456
I42
g1457
Vinsert
p18682
I43
VSimpleType: IllegalArgumentException
p18683
tp18684
I1
s(g416
I42
g417
Vinsert
p18685
I43
VSimpleType: T2
p18686
tp18687
I2
s(g7769
I42
g7770
Vinsert
p18688
I39
VPrimitiveType: int
p18689
tp18690
F0.75
s(g6859
I42
g6860
Vinsert
p18691
I42
VSimpleName: String
p18692
tp18693
F0.25
s(g5584
I42
g5585
Vinsert
p18694
I7
VAssignment: =
p18695
tp18696
I1
s(g888
I42
g889
Vinsert
p18697
I42
VSimpleName: Error
p18698
tp18699
F0.5
s(g11679
I42
g11680
Vinsert
p18700
I42
VSimpleName: invokeInterface
p18701
tp18702
I1
s(g4232
I42
g4233
Vinsert
p18703
I83
VModifier: public
p18704
tp18705
F0.25
s(g10591
I42
g10592
Vinsert
p18706
I43
VSimpleType: String
p18707
tp18708
F0.25
s(g5428
I42
g5429
Vinsert
p18709
I7
VAssignment: =
p18710
tp18711
I1
s(g1702
I42
g1703
Vinsert
p18712
I32
VMethodInvocation
p18713
tp18714
I3
s(g2822
I42
g2823
Vinsert
p18715
I33
VNullLiteral
p18716
tp18717
I2
s(g86
I42
g87
Vinsert
p18718
I32
VMethodInvocation
p18719
tp18720
F6.5
s(g2010
I42
g2011
Vinsert
p18721
I42
VSimpleName: map
p18722
tp18723
F0.5
s(g4541
I42
g4542
Vinsert
p18724
I38
VPrefixExpression: !
p18725
tp18726
I2
s(g12455
I42
g12456
Vinsert
p18727
I26
VImportDeclaration
p18728
tp18729
F0.25
s(g489
I42
g490
Vinsert
p18730
I42
VSimpleName: bindingLabels
p18731
tp18732
I2
s(g5198
I42
g5199
Vinsert
p18733
I42
VSimpleName: r
p18734
tp18735
I1
s(g1874
I42
g1875
Vinsert
p18736
I42
VSimpleName: lock
p18737
tp18738
F2.25
s(g3038
I42
g3039
Vinsert
p18739
I42
VSimpleName: vals
p18740
tp18741
F0.25
s(g651
I42
g652
Vinsert
p18742
I42
VSimpleName: loop23
p18743
tp18744
I1
s(g598
I42
g599
Vinsert
p18745
I13
VCharacterLiteral: '-'
p18746
tp18747
I1
s(g189
I42
g190
Vinsert
p18748
I42
VSimpleName: gen
p18749
tp18750
I1
s(g114
I42
g115
Vinsert
p18751
I42
VSimpleName: arg13
p18752
tp18753
F1.0
s(g12455
I42
g12456
Vinsert
p18754
I27
VInfixExpression: ==
p18755
tp18756
I3
s(g3681
I42
g3682
Vinsert
p18757
I42
VSimpleName: v0
p18758
tp18759
I1
s(g5584
I42
g5585
Vinsert
p18760
I42
VSimpleName: ignore
p18761
tp18762
F0.25
s(g2711
I42
g2712
Vinsert
p18763
I60
VVariableDeclarationStatement
p18764
tp18765
I1
s(g1014
I42
g1015
Vinsert
p18766
I83
VModifier: public
p18767
tp18768
F0.25
s(g4942
I42
g4943
Vinsert
p18769
I43
VSimpleType: BigInteger
p18770
tp18771
F0.25
s(g6229
I42
g6230
Vinsert
p18772
I42
VSimpleName: IPersistentVector
p18773
tp18774
F0.25
s(g10080
I42
g10081
Vinsert
p18775
I40
VQualifiedName: f.bmap
p18776
tp18777
I1
s(g2387
I42
g2388
Vinsert
p18778
I33
VNullLiteral
p18779
tp18780
I4
s(g730
I42
g731
Vinsert
p18781
I60
VVariableDeclarationStatement
p18782
tp18783
I2
s(g2983
I42
g2984
Vinsert
p18784
I34
VNumberLiteral: 0
p18785
tp18786
I1
s(g1500
I42
g1501
Vinsert
p18787
I42
VSimpleName: SERVER
p18788
tp18789
I1
s(g1490
I42
g1491
Vinsert
p18790
I42
VSimpleName: MethodVisitor
p18791
tp18792
I1
s(g2186
I42
g2187
Vinsert
p18793
I42
VSimpleName: Object
p18794
tp18795
F1.5
s(g613
I42
g614
Vinsert
p18796
I25
VIfStatement
p18797
tp18798
I1
s(g4295
I42
g4296
Vinsert
p18799
I27
VInfixExpression: <
p18800
tp18801
I3
s(g353
I42
g354
Vinsert
p18802
I42
VSimpleName: t
p18803
tp18804
I2
s(g2376
I42
g2377
Vinsert
p18805
I25
VIfStatement
p18806
tp18807
I1
s(g129
I42
g130
Vinsert
p18808
I36
VParenthesizedExpression
p18809
tp18810
I3
s(g3261
I42
g3262
Vinsert
p18811
I43
VSimpleType: ISeq
p18812
tp18813
I3
s(g1596
I42
g1597
Vinsert
p18814
I42
VSimpleName: ret
p18815
tp18816
F2.5
s(g1243
I42
g1244
Vinsert
p18817
I32
VMethodInvocation
p18818
tp18819
F9.25
s(g114
I42
g115
Vinsert
p18820
I42
VSimpleName: arg3
p18821
tp18822
F0.25
s(Vinsert
p18823
I42
VSimpleName: seq
p18824
Vinsert
p18825
I43
VSimpleType: ISequential
p18826
tp18827
I2
s(g1127
I42
g1128
Vinsert
p18828
I53
VThrowStatement
p18829
tp18830
I1
s(g3438
I42
g3439
Vinsert
p18831
I59
VVariableDeclarationFragment
p18832
tp18833
F1.25
s(g1081
I42
g1082
Vinsert
p18834
I33
VNullLiteral
p18835
tp18836
I2
s(g1391
I42
g1392
Vinsert
p18837
I44
VSingleVariableDeclaration
p18838
tp18839
F3.75
s(g333
I42
g334
Vinsert
p18840
I43
VSimpleType: Integer
p18841
tp18842
I2
s(g1545
I42
g1546
Vinsert
p18843
I41
VReturnStatement
p18844
tp18845
F5.25
s(g46
I42
g47
Vinsert
p18846
I36
VParenthesizedExpression
p18847
tp18848
F0.5
s(g6781
I42
g6782
Vinsert
p18849
I42
VSimpleName: Expr
p18850
tp18851
F0.25
s(g1639
I42
g1640
Vinsert
p18852
I42
VSimpleName: rest
p18853
tp18854
F19.25
s(g1316
I42
g1317
Vinsert
p18855
I42
VSimpleName: firstline
p18856
tp18857
I1
s(g2969
I42
g2970
Vinsert
p18858
I52
VThisExpression
p18859
tp18860
F0.25
s(g4303
I42
g4304
Vinsert
p18861
I43
VSimpleType: LineNumberReader
p18862
tp18863
I1
s(g4663
I42
g4664
Vinsert
p18864
I8
VBlock
p18865
tp18866
I1
s(g134
I42
g135
Vinsert
p18867
I83
VModifier: public
p18868
tp18869
F0.25
s(g1073
I42
g1074
Vinsert
p18870
I42
VSimpleName: getNamespace
p18871
tp18872
I1
s(g3330
I42
g3331
Vinsert
p18873
I42
VSimpleName: c
p18874
tp18875
F1.25
s(g6021
I42
g6022
Vinsert
p18876
I38
VPrefixExpression: !
p18877
tp18878
I5
s(g1972
I42
g1973
Vinsert
p18879
I34
VNumberLiteral: 1
p18880
tp18881
I1
s(g6513
I42
g6514
Vinsert
p18882
I42
VSimpleName: invokeStatic
p18883
tp18884
I1
s(g5505
I42
g5506
Vinsert
p18885
I21
VExpressionStatement
p18886
tp18887
I13
s(g6859
I42
g6860
Vinsert
p18888
I62
VInstanceofExpression
p18889
tp18890
I1
s(g497
I42
g498
Vinsert
p18891
I60
VVariableDeclarationStatement
p18892
tp18893
I2
s(g2776
I42
g2777
Vinsert
p18894
I11
VCastExpression
p18895
tp18896
I1
s(g6409
I42
g6410
Vinsert
p18897
I40
VQualifiedName: Opcodes.ACONST_NULL
p18898
tp18899
I1
s(g396
I42
g397
Vinsert
p18900
I42
VSimpleName: EMPTY
p18901
tp18902
I1
s(g2026
I42
g2027
Vinsert
p18903
I42
VSimpleName: expr
p18904
tp18905
I2
s(g2361
I42
g2362
Vinsert
p18906
I42
VSimpleName: args
p18907
tp18908
I3
s(g1213
I42
g1214
Vinsert
p18909
I43
VSimpleType: Symbol
p18910
tp18911
F0.5
s(g2073
I42
g2074
Vinsert
p18912
I23
VFieldDeclaration
p18913
tp18914
I3
s(g3783
I42
g3784
Vinsert
p18915
I42
VSimpleName: basefields
p18916
tp18917
I3
s(g353
I42
g354
Vinsert
p18918
I43
VSimpleType: Throwable
p18919
tp18920
I1
s(g16345
I42
g16346
Vinsert
p18921
I42
VSimpleName: bindingInits
p18922
tp18923
I1
s(g7304
I42
g7305
Vinsert
p18924
I42
VSimpleName: zerop
p18925
tp18926
F0.25
s(g2803
I42
g2804
Vinsert
p18927
I42
VSimpleName: substring
p18928
tp18929
I1
s(g699
I42
g700
Vinsert
p18930
I27
VInfixExpression: &
p18931
tp18932
I1
s(g3591
I42
g3592
Vinsert
p18933
I42
VSimpleName: Compiler
p18934
tp18935
I2
s(g4689
I42
g4690
Vinsert
p18936
I43
VSimpleType: Thread
p18937
tp18938
F0.25
s(g4404
I42
g4405
Vinsert
p18939
I21
VExpressionStatement
p18940
tp18941
F0.25
s(g898
I42
g899
Vinsert
p18942
I42
VSimpleName: tref
p18943
tp18944
I1
s(g6786
I42
g6787
Vinsert
p18945
I42
VSimpleName: arg3
p18946
tp18947
F0.25
s(g8576
I42
g8577
Vinsert
p18948
I27
VInfixExpression: !=
p18949
tp18950
I1
s(g391
I42
g392
Vinsert
p18951
I42
VSimpleName: n
p18952
tp18953
F0.75
s(g3465
I42
g3466
Vinsert
p18954
I43
VSimpleType: INode
p18955
tp18956
I4
s(g6
I42
g7
Vinsert
p18957
I42
VSimpleName: s
p18958
tp18959
I39
s(g1243
I42
g1244
Vinsert
p18960
I42
VSimpleName: getMethod
p18961
tp18962
F0.25
s(g5832
I42
g5833
Vinsert
p18963
I44
VSingleVariableDeclaration
p18964
tp18965
F1.5
s(Vinsert
p18966
I42
VSimpleName: arraycopy
p18967
Vinsert
p18968
I42
VSimpleName: ret
p18969
tp18970
I1
s(g262
I42
g263
Vinsert
p18971
I62
VInstanceofExpression
p18972
tp18973
I1
s(g2231
I42
g2232
Vinsert
p18974
I59
VVariableDeclarationFragment
p18975
tp18976
I3
s(g3754
I42
g3755
Vinsert
p18977
I8
VBlock
p18978
tp18979
I1
s(g11126
I42
g11127
Vinsert
p18980
I42
VSimpleName: dv
p18981
tp18982
F2.25
s(g2822
I42
g2823
Vinsert
p18983
I36
VParenthesizedExpression
p18984
tp18985
I2
s(g262
I42
g263
Vinsert
p18986
I43
VSimpleType: Number
p18987
tp18988
I1
s(g572
I42
g573
Vinsert
p18989
I39
VPrimitiveType: int
p18990
tp18991
I1
s(g1683
I42
g1684
Vinsert
p18992
I11
VCastExpression
p18993
tp18994
I1
s(g421
I42
g422
Vinsert
p18995
I60
VVariableDeclarationStatement
p18996
tp18997
I1
s(g6084
I42
g6085
Vinsert
p18998
I42
VSimpleName: create
p18999
tp19000
F0.25
s(g300
I42
g301
Vinsert
p19001
I41
VReturnStatement
p19002
tp19003
I1
s(g4021
I42
g4022
Vinsert
p19004
I42
VSimpleName: y
p19005
tp19006
I1
s(g2964
I42
g2965
Vinsert
p19007
I8
VBlock
p19008
tp19009
I1
s(g461
I42
g462
Vinsert
p19010
I34
VNumberLiteral: 0
p19011
tp19012
I2
s(g3421
I42
g3422
Vinsert
p19013
I42
VSimpleName: aFnType
p19014
tp19015
I1
s(g7731
I42
g7732
Vinsert
p19016
I42
VSimpleName: INFINITE
p19017
tp19018
I1
s(g3986
I42
g3987
Vinsert
p19019
I42
VSimpleName: data_readers
p19020
tp19021
I1
s(g2615
I42
g2616
Vinsert
p19022
I42
VSimpleName: MathContext
p19023
tp19024
I1
s(g4916
I42
g4917
Vinsert
p19025
I32
VMethodInvocation
p19026
tp19027
I5
s(g204
I42
g205
Vinsert
p19028
I43
VSimpleType: IPersistentCollection
p19029
tp19030
F0.25
s(g2631
I42
g2632
Vinsert
p19031
I43
VSimpleType: Number
p19032
tp19033
F2.0
s(g3797
I42
g3798
Vinsert
p19034
I42
VSimpleName: uncheckedMathProp
p19035
tp19036
I1
s(g18104
I42
g18105
Vinsert
p19037
I42
VSimpleName: num
p19038
tp19039
F1.0
s(g1278
I42
g1279
Vinsert
p19040
I42
VSimpleName: cv
p19041
tp19042
I1
s(Vinsert
p19043
I42
VSimpleName: boundedLength
p19044
Vinsert
p19045
I42
VSimpleName: applyTo
p19046
tp19047
F0.25
s(g7563
I42
g7564
Vinsert
p19048
I42
VSimpleName: cname
p19049
tp19050
I1
s(g6696
I42
g6697
Vinsert
p19051
I42
VSimpleName: sym
p19052
tp19053
F1.25
s(g5214
I42
g5215
Vinsert
p19054
I27
VInfixExpression: !=
p19055
tp19056
I1
s(g735
I42
g736
Vinsert
p19057
I83
VModifier: public
p19058
tp19059
F0.5
s(g1991
I42
g1992
Vinsert
p19060
I42
VSimpleName: Exception
p19061
tp19062
F0.25
s(g3549
I42
g3550
Vinsert
p19063
I14
VClassInstanceCreation
p19064
tp19065
F0.5
s(g8463
I42
g8464
Vinsert
p19066
I42
VSimpleName: Symbol
p19067
tp19068
F4.0
s(g8273
I42
g8274
Vinsert
p19069
I42
VSimpleName: Var
p19070
tp19071
I2
s(g572
I42
g573
Vinsert
p19072
I40
VQualifiedName: tref.lockedBy
p19073
tp19074
I1
s(g1019
I42
g1020
Vinsert
p19075
I25
VIfStatement
p19076
tp19077
F3.25
s(g6704
I42
g6705
Vinsert
p19078
I42
VSimpleName: loopLocals
p19079
tp19080
I2
s(g11
I42
g12
Vinsert
p19081
I37
VPostfixExpression: ++
p19082
tp19083
I1
s(g5788
I42
g5789
Vinsert
p19084
I42
VSimpleName: getLineNumber
p19085
tp19086
F0.5
s(g2909
I42
g2910
Vinsert
p19087
I40
VQualifiedName: t.key
p19088
tp19089
I1
s(g305
I42
g306
Vinsert
p19090
I42
VSimpleName: ignore
p19091
tp19092
I1
s(g2867
I42
g2868
Vinsert
p19093
I27
VInfixExpression: ||
p19094
tp19095
I1
s(g1152
I42
g1153
Vinsert
p19096
I42
VSimpleName: eval
p19097
tp19098
I2
s(g1432
I42
g1433
Vinsert
p19099
I45
VStringLiteral: "EOF while reading regex"
p19100
tp19101
I1
s(g3465
I42
g3466
Vinsert
p19102
I36
VParenthesizedExpression
p19103
tp19104
I2
s(g4916
I42
g4917
Vinsert
p19105
I40
VQualifiedName: x.denominator
p19106
tp19107
I1
s(g852
I42
g853
Vinsert
p19108
I25
VIfStatement
p19109
tp19110
I1
s(g1197
I42
g1198
Vinsert
p19111
I33
VNullLiteral
p19112
tp19113
F0.25
s(g2405
I42
g2406
Vinsert
p19114
I31
VMethodDeclaration
p19115
tp19116
F3.0
s(g704
I42
g705
Vinsert
p19117
I27
VInfixExpression: +
p19118
tp19119
I2
s(g552
I42
g553
Vinsert
p19120
I11
VCastExpression
p19121
tp19122
I6
s(g1308
I42
g1309
Vinsert
p19123
I42
VSimpleName: PersistentArray
p19124
tp19125
F0.25
s(g1856
I42
g1857
Vinsert
p19126
I42
VSimpleName: ret
p19127
tp19128
I1
s(g8643
I42
g8644
Vinsert
p19129
I49
VSwitchCase
p19130
tp19131
I3
s(g1432
I42
g1433
Vinsert
p19132
I8
VBlock
p19133
tp19134
I1
s(g2332
I42
g2333
Vinsert
p19135
I42
VSimpleName: Set
p19136
tp19137
I5
s(g1792
I42
g1793
Vinsert
p19138
I57
VTypeLiteral
p19139
tp19140
I2
s(g6450
I42
g6451
Vinsert
p19141
I27
VInfixExpression: +
p19142
tp19143
I1
s(g4497
I42
g4498
Vinsert
p19144
I40
VQualifiedName: v.dynamic
p19145
tp19146
I1
s(g837
I42
g838
Vinsert
p19147
I42
VSimpleName: gen
p19148
tp19149
F7.25
s(g8138
I42
g8139
Vinsert
p19150
I32
VMethodInvocation
p19151
tp19152
I3
s(g5198
I42
g5199
Vinsert
p19153
I42
VSimpleName: Object
p19154
tp19155
F4.0
s(g2164
I42
g2165
Vinsert
p19156
I42
VSimpleName: EMPTY
p19157
tp19158
I4
s(g2226
I42
g2227
Vinsert
p19159
I40
VQualifiedName: right.key
p19160
tp19161
I1
s(g1396
I42
g1397
Vinsert
p19162
I25
VIfStatement
p19163
tp19164
I3
s(g6203
I42
g6204
Vinsert
p19165
I60
VVariableDeclarationStatement
p19166
tp19167
I1
s(g396
I42
g397
Vinsert
p19168
I8
VBlock
p19169
tp19170
I1
s(g363
I42
g364
Vinsert
p19171
I42
VSimpleName: System
p19172
tp19173
I1
s(g2904
I42
g2905
Vinsert
p19174
I42
VSimpleName: key
p19175
tp19176
F0.5
s(g4689
I42
g4690
Vinsert
p19177
I27
VInfixExpression: ==
p19178
tp19179
I1
s(g280
I42
g281
Vinsert
p19180
I33
VNullLiteral
p19181
tp19182
I1
s(g6234
I42
g6235
Vinsert
p19183
I7
VAssignment: =
p19184
tp19185
I2
s(g3022
I42
g3023
Vinsert
p19186
I41
VReturnStatement
p19187
tp19188
I1
s(g3256
I42
g3257
Vinsert
p19189
I43
VSimpleType: IPersistentMap
p19190
tp19191
F0.25
s(g837
I42
g838
Vinsert
p19192
I25
VIfStatement
p19193
tp19194
I1
s(g3614
I42
g3615
Vinsert
p19195
I83
VModifier: static
p19196
tp19197
F0.25
s(g770
I42
g771
Vinsert
p19198
I42
VSimpleName: numerator
p19199
tp19200
I4
s(g5428
I42
g5429
Vinsert
p19201
I13
VCharacterLiteral: ':'
p19202
tp19203
I1
s(g421
I42
g422
Vinsert
p19204
I11
VCastExpression
p19205
tp19206
I1
s(g3256
I42
g3257
Vinsert
p19207
I11
VCastExpression
p19208
tp19209
F2.25
s(g735
I42
g736
Vinsert
p19210
I44
VSingleVariableDeclaration
p19211
tp19212
F1.5
s(g8066
I42
g8067
Vinsert
p19213
I42
VSimpleName: o1
p19214
tp19215
I1
s(g2122
I42
g2123
Vinsert
p19216
I42
VSimpleName: Namespace
p19217
tp19218
F1.5
s(g1019
I42
g1020
Vinsert
p19219
I42
VSimpleName: contains
p19220
tp19221
F0.25
s(g2273
I42
g2274
Vinsert
p19222
I32
VMethodInvocation
p19223
tp19224
I1
s(g4166
I42
g4167
Vinsert
p19225
I43
VSimpleType: Node
p19226
tp19227
F0.25
s(g227
I42
g228
Vinsert
p19228
I41
VReturnStatement
p19229
tp19230
F0.25
s(g1331
I42
g1332
Vinsert
p19231
I25
VIfStatement
p19232
tp19233
I2
s(g6550
I42
g6551
Vinsert
p19234
I42
VSimpleName: _more
p19235
tp19236
F0.5
s(g2278
I42
g2279
Vinsert
p19237
I27
VInfixExpression: ==
p19238
tp19239
I1
s(g8273
I42
g8274
Vinsert
p19240
I83
VModifier: public
p19241
tp19242
I1
s(g804
I42
g805
Vinsert
p19243
I7
VAssignment: =
p19244
tp19245
I1
s(g1177
I42
g1178
Vinsert
p19246
I42
VSimpleName: estimatedTime
p19247
tp19248
I1
s(g2935
I42
g2936
Vinsert
p19249
I27
VInfixExpression: -
p19250
tp19251
I1
s(g1344
I42
g1345
Vinsert
p19252
I42
VSimpleName: first
p19253
tp19254
F0.5
s(g2461
I42
g2462
Vinsert
p19255
I45
VStringLiteral: " "
p19256
tp19257
I1
s(g1014
I42
g1015
Vinsert
p19258
I43
VSimpleType: Object
p19259
tp19260
I1
s(g323
I42
g324
Vinsert
p19261
I42
VSimpleName: c
p19262
tp19263
F3.5
s(g2231
I42
g2232
Vinsert
p19264
I42
VSimpleName: overrideables
p19265
tp19266
I1
s(g2822
I42
g2823
Vinsert
p19267
I42
VSimpleName: String
p19268
tp19269
I2
s(g451
I42
g452
Vinsert
p19270
I42
VSimpleName: localName
p19271
tp19272
F0.25
s(g10100
I42
g10101
Vinsert
p19273
I59
VVariableDeclarationFragment
p19274
tp19275
I1
s(g6781
I42
g6782
Vinsert
p19276
I25
VIfStatement
p19277
tp19278
I2
s(g10374
I42
g10375
Vinsert
p19279
I42
VSimpleName: findOrCreate
p19280
tp19281
I2
s(g2244
I42
g2245
Vinsert
p19282
I32
VMethodInvocation
p19283
tp19284
I3
s(g1770
I42
g1771
Vinsert
p19285
I42
VSimpleName: replaceRoot
p19286
tp19287
I1
s(g406
I42
g407
Vinsert
p19288
I41
VReturnStatement
p19289
tp19290
I4
s(g489
I42
g490
Vinsert
p19291
I74
VParameterizedType: HashMap<BindingInit,Label>
p19292
tp19293
I1
s(g4845
I42
g4846
Vinsert
p19294
I45
VStringLiteral: "legacy-script"
p19295
tp19296
I1
s(g1770
I42
g1771
Vinsert
p19297
I25
VIfStatement
p19298
tp19299
I2
s(g1414
I42
g1415
Vinsert
p19300
I42
VSimpleName: init
p19301
tp19302
I1
s(g2692
I42
g2693
Vinsert
p19303
I42
VSimpleName: rq
p19304
tp19305
I1
s(g5050
I42
g5051
Vinsert
p19306
I44
VSingleVariableDeclaration
p19307
tp19308
F0.75
s(g2278
I42
g2279
Vinsert
p19309
I8
VBlock
p19310
tp19311
I4
s(g2257
I42
g2258
Vinsert
p19312
I42
VSimpleName: clearpath
p19313
tp19314
I1
s(g2677
I42
g2678
Vinsert
p19315
I32
VMethodInvocation
p19316
tp19317
I2
s(g6946
I42
g6947
Vinsert
p19318
I39
VPrimitiveType: boolean
p19319
tp19320
F0.25
s(g5606
I42
g5607
Vinsert
p19321
I42
VSimpleName: replace
p19322
tp19323
I1
s(g1727
I42
g1728
Vinsert
p19324
I42
VSimpleName: getDescriptor
p19325
tp19326
F0.25
s(g396
I42
g397
Vinsert
p19327
I59
VVariableDeclarationFragment
p19328
tp19329
I2
s(g11882
I42
g11883
Vinsert
p19330
I13
VCharacterLiteral: ' '
p19331
tp19332
I1
s(g10954
I42
g10955
Vinsert
p19333
I7
VAssignment: ^=
p19334
tp19335
I1
s(g2052
I42
g2053
Vinsert
p19336
I25
VIfStatement
p19337
tp19338
I2
s(g2940
I42
g2941
Vinsert
p19339
I27
VInfixExpression: ==
p19340
tp19341
I1
s(g1014
I42
g1015
Vinsert
p19342
I43
VSimpleType: Exception
p19343
tp19344
F0.25
s(g149
I42
g150
Vinsert
p19345
I8
VBlock
p19346
tp19347
I2
s(g300
I42
g301
Vinsert
p19348
I14
VClassInstanceCreation
p19349
tp19350
I1
s(Vinsert
p19351
I42
VSimpleName: ret1
p19352
Vinsert
p19353
I42
VSimpleName: arglist
p19354
tp19355
I2
s(Vinsert
p19356
I42
VSimpleName: create
p19357
Vinsert
p19358
I42
VSimpleName: Keyword
p19359
tp19360
I2
s(g7731
I42
g7732
Vinsert
p19361
I9
VBooleanLiteral: true
p19362
tp19363
I1
s(g451
I42
g452
Vinsert
p19364
I44
VSingleVariableDeclaration
p19365
tp19366
F0.5
s(g8729
I42
g8730
Vinsert
p19367
I42
VSimpleName: key
p19368
tp19369
I2
s(g1553
I42
g1554
Vinsert
p19370
I42
VSimpleName: ByteVector
p19371
tp19372
I1
s(g6045
I42
g6046
Vinsert
p19373
I2
VArrayAccess
p19374
tp19375
I4
s(g6715
I42
g6716
Vinsert
p19376
I14
VClassInstanceCreation
p19377
tp19378
I1
s(g691
I42
g692
Vinsert
p19379
I42
VSimpleName: newState
p19380
tp19381
I1
s(g4463
I42
g4464
Vinsert
p19382
I21
VExpressionStatement
p19383
tp19384
I4
s(g5606
I42
g5607
Vinsert
p19385
I40
VQualifiedName: Compiler.COMPILE_FILES
p19386
tp19387
I1
s(g1626
I42
g1627
Vinsert
p19388
I42
VSimpleName: sym
p19389
tp19390
I1
s(g4689
I42
g4690
Vinsert
p19391
I16
VConditionalExpression
p19392
tp19393
I1
s(g5436
I42
g5437
Vinsert
p19394
I21
VExpressionStatement
p19395
tp19396
I2
s(g3105
I42
g3106
Vinsert
p19397
I23
VFieldDeclaration
p19398
tp19399
I1
s(g2493
I42
g2494
Vinsert
p19400
I43
VSimpleType: IPersistentVector
p19401
tp19402
I1
s(g4176
I42
g4177
Vinsert
p19403
I43
VSimpleType: ASeq.Src
p19404
tp19405
I1
s(g164
I42
g165
Vinsert
p19406
I27
VInfixExpression: !=
p19407
tp19408
I1
s(g4557
I42
g4558
Vinsert
p19409
I42
VSimpleName: idx
p19410
tp19411
I1
s(g6561
I42
g6562
Vinsert
p19412
I42
VSimpleName: fn
p19413
tp19414
I1
s(g641
I42
g642
Vinsert
p19415
I42
VSimpleName: var
p19416
tp19417
F0.25
s(g3087
I42
g3088
Vinsert
p19418
I45
VStringLiteral: "No matching field found: "
p19419
tp19420
I1
s(g8061
I42
g8062
Vinsert
p19421
I42
VSimpleName: Transaction
p19422
tp19423
I2
s(g7602
I42
g7603
Vinsert
p19424
I25
VIfStatement
p19425
tp19426
I5
s(g2814
I42
g2815
Vinsert
p19427
I27
VInfixExpression: !=
p19428
tp19429
I1
s(g1396
I42
g1397
Vinsert
p19430
I45
VStringLiteral: "EnclosingMethod"
p19431
tp19432
I1
s(g2964
I42
g2965
Vinsert
p19433
I33
VNullLiteral
p19434
tp19435
F0.25
s(Vinsert
p19436
I42
VSimpleName: intValue
p19437
Vinsert
p19438
I42
VSimpleName: i
p19439
tp19440
I1
s(g2480
I42
g2481
Vinsert
p19441
I42
VSimpleName: x
p19442
tp19443
F6.0
s(g1905
I42
g1906
Vinsert
p19444
I42
VSimpleName: Class
p19445
tp19446
I1
s(g2435
I42
g2436
Vinsert
p19447
I38
VPrefixExpression: !
p19448
tp19449
I1
s(g5402
I42
g5403
Vinsert
p19450
I43
VSimpleType: Exception
p19451
tp19452
F0.5
s(g10591
I42
g10592
Vinsert
p19453
I42
VSimpleName: Exception
p19454
tp19455
F1.25
s(g3300
I42
g3301
Vinsert
p19456
I32
VMethodInvocation
p19457
tp19458
I4
s(g421
I42
g422
Vinsert
p19459
I36
VParenthesizedExpression
p19460
tp19461
I1
s(g651
I42
g652
Vinsert
p19462
I34
VNumberLiteral: 2
p19463
tp19464
I1
s(g4248
I42
g4249
Vinsert
p19465
I42
VSimpleName: Class
p19466
tp19467
F0.25
s(g3934
I42
g3935
Vinsert
p19468
I59
VVariableDeclarationFragment
p19469
tp19470
I1
s(g6450
I42
g6451
Vinsert
p19471
I34
VNumberLiteral: 0x7FFFFFFF
p19472
tp19473
I1
s(g1099
I42
g1100
Vinsert
p19474
I43
VSimpleType: Object
p19475
tp19476
F0.25
s(g129
I42
g130
Vinsert
p19477
I42
VSimpleName: ILookupSite
p19478
tp19479
F0.25
s(g199
I42
g200
Vinsert
p19480
I32
VMethodInvocation
p19481
tp19482
I3
s(g9124
I42
g9125
Vinsert
p19483
I42
VSimpleName: parent
p19484
tp19485
F0.25
s(g10343
I42
g10344
Vinsert
p19486
I42
VSimpleName: fn
p19487
tp19488
I1
s(g1055
I42
g1056
Vinsert
p19489
I9
VBooleanLiteral: false
p19490
tp19491
I1
s(g7304
I42
g7305
Vinsert
p19492
I53
VThrowStatement
p19493
tp19494
F0.25
s(Vinsert
p19495
I42
VSimpleName: invokeInstanceMember
p19496
Vinsert
p19497
I42
VSimpleName: arg3
p19498
tp19499
F0.25
s(g139
I42
g140
Vinsert
p19500
I42
VSimpleName: info
p19501
tp19502
F0.25
s(g3370
I42
g3371
Vinsert
p19503
I42
VSimpleName: ISeq
p19504
tp19505
F7.25
s(g9012
I42
g9013
Vinsert
p19506
I32
VMethodInvocation
p19507
tp19508
F12.25
s(g1827
I42
g1828
Vinsert
p19509
I45
VStringLiteral: "java.lang.Thread"
p19510
tp19511
I1
s(g10523
I42
g10524
Vinsert
p19512
I42
VSimpleName: _count
p19513
tp19514
I1
s(g1732
I42
g1733
Vinsert
p19515
I40
VQualifiedName: other.tvals
p19516
tp19517
F0.25
s(g10360
I42
g10361
Vinsert
p19518
I42
VSimpleName: tld
p19519
tp19520
I10
s(g3549
I42
g3550
Vinsert
p19521
I59
VVariableDeclarationFragment
p19522
tp19523
F3.75
s(g999
I42
g1000
Vinsert
p19524
I42
VSimpleName: getType
p19525
tp19526
I1
s(g6450
I42
g6451
Vinsert
p19527
I42
VSimpleName: desc
p19528
tp19529
I1
s(g8130
I42
g8131
Vinsert
p19530
I41
VReturnStatement
p19531
tp19532
F2.5
s(g4788
I42
g4789
Vinsert
p19533
I83
VModifier: final
p19534
tp19535
F1.0
s(g2719
I42
g2720
Vinsert
p19536
I25
VIfStatement
p19537
tp19538
I1
s(g4826
I42
g4827
Vinsert
p19539
I42
VSimpleName: IObj
p19540
tp19541
F0.25
s(g8355
I42
g8356
Vinsert
p19542
I42
VSimpleName: CURRENT_NS
p19543
tp19544
I2
s(g5100
I42
g5101
Vinsert
p19545
I59
VVariableDeclarationFragment
p19546
tp19547
I2
s(g3487
I42
g3488
Vinsert
p19548
I43
VSimpleType: Symbol
p19549
tp19550
I2
s(g3709
I42
g3710
Vinsert
p19551
I33
VNullLiteral
p19552
tp19553
I2
s(g3934
I42
g3935
Vinsert
p19554
I11
VCastExpression
p19555
tp19556
I1
s(g11882
I42
g11883
Vinsert
p19557
I43
VSimpleType: String
p19558
tp19559
I1
s(g1535
I42
g1536
Vinsert
p19560
I39
VPrimitiveType: boolean
p19561
tp19562
F0.25
s(g411
I42
g412
Vinsert
p19563
I44
VSingleVariableDeclaration
p19564
tp19565
F0.5
s(g1755
I42
g1756
Vinsert
p19566
I42
VSimpleName: method
p19567
tp19568
I1
s(g510
I42
g511
Vinsert
p19569
I42
VSimpleName: rest
p19570
tp19571
I1
s(g1182
I42
g1183
Vinsert
p19572
I42
VSimpleName: SuspReverse
p19573
tp19574
I1
s(g149
I42
g150
Vinsert
p19575
I42
VSimpleName: RT
p19576
tp19577
I2
s(g7212
I42
g7213
Vinsert
p19578
I42
VSimpleName: b
p19579
tp19580
I1
s(g1396
I42
g1397
Vinsert
p19581
I21
VExpressionStatement
p19582
tp19583
I2
s(g3565
I42
g3566
Vinsert
p19584
I42
VSimpleName: ops
p19585
tp19586
F0.25
s(g318
I42
g319
Vinsert
p19587
I32
VMethodInvocation
p19588
tp19589
I1
s(g699
I42
g700
Vinsert
p19590
I40
VQualifiedName: Opcodes.ACC_FINAL
p19591
tp19592
I1
s(g247
I42
g248
Vinsert
p19593
I2
VArrayAccess
p19594
tp19595
I1
s(g31
I42
g32
Vinsert
p19596
I40
VQualifiedName: RT.LINE_KEY
p19597
tp19598
F0.25
s(g411
I42
g412
Vinsert
p19599
I42
VSimpleName: tld
p19600
tp19601
F0.25
s(g4640
I42
g4641
Vinsert
p19602
I44
VSingleVariableDeclaration
p19603
tp19604
F0.5
s(g8516
I42
g8517
Vinsert
p19605
I44
VSingleVariableDeclaration
p19606
tp19607
F0.25
s(g3135
I42
g3136
Vinsert
p19608
I42
VSimpleName: m
p19609
tp19610
I1
s(g4497
I42
g4498
Vinsert
p19611
I21
VExpressionStatement
p19612
tp19613
F0.5
s(g9244
I42
g9245
Vinsert
p19614
I43
VSimpleType: IOException
p19615
tp19616
F0.5
s(g1354
I42
g1355
Vinsert
p19617
I21
VExpressionStatement
p19618
tp19619
I4
s(g1286
I42
g1287
Vinsert
p19620
I42
VSimpleName: hasheq
p19621
tp19622
F0.25
s(g709
I42
g710
Vinsert
p19623
I52
VThisExpression
p19624
tp19625
I1
s(Vinsert
p19626
I42
VSimpleName: runtimeException
p19627
Vinsert
p19628
I42
VSimpleName: toplevel
p19629
tp19630
I1
s(g2830
I42
g2831
Vinsert
p19631
I7
VAssignment: =
p19632
tp19633
I1
s(g13749
I42
g13750
Vinsert
p19634
I43
VSimpleType: FnMethod
p19635
tp19636
I2
s(g6639
I42
g6640
Vinsert
p19637
I42
VSimpleName: name
p19638
tp19639
I1
s(g661
I42
g662
Vinsert
p19640
I42
VSimpleName: listStar
p19641
tp19642
F0.25
s(g1712
I42
g1713
Vinsert
p19643
I45
VStringLiteral: "unknown"
p19644
tp19645
F0.25
s(g666
I42
g667
Vinsert
p19646
I42
VSimpleName: RT
p19647
tp19648
F8.5
s(g19626
I42
g19627
Vinsert
p19649
I21
VExpressionStatement
p19650
tp19651
I1
s(g396
I42
g397
Vinsert
p19652
I42
VSimpleName: i
p19653
tp19654
I1
s(g353
I42
g354
Vinsert
p19655
I42
VSimpleName: exception
p19656
tp19657
I2
s(g9218
I42
g9219
Vinsert
p19658
I42
VSimpleName: count
p19659
tp19660
F3.25
s(g4295
I42
g4296
Vinsert
p19661
I2
VArrayAccess
p19662
tp19663
F0.25
s(g8516
I42
g8517
Vinsert
p19664
I8
VBlock
p19665
tp19666
I1
s(g4436
I42
g4437
Vinsert
p19667
I31
VMethodDeclaration
p19668
tp19669
F0.25
s(g4497
I42
g4498
Vinsert
p19670
I38
VPrefixExpression: !
p19671
tp19672
I2
s(g6650
I42
g6651
Vinsert
p19673
I42
VSimpleName: ClassNotFoundException
p19674
tp19675
F0.75
s(g1192
I42
g1193
Vinsert
p19676
I42
VSimpleName: Ratio
p19677
tp19678
I2
s(g2573
I42
g2574
Vinsert
p19679
I42
VSimpleName: form
p19680
tp19681
I2
s(g7304
I42
g7305
Vinsert
p19682
I42
VSimpleName: ArithmeticException
p19683
tp19684
F0.25
s(g154
I42
g155
Vinsert
p19685
I32
VMethodInvocation
p19686
tp19687
F16.25
s(g2332
I42
g2333
Vinsert
p19688
I42
VSimpleName: s1
p19689
tp19690
I2
s(g12375
I42
g12376
Vinsert
p19691
I42
VSimpleName: warn_on_reflection
p19692
tp19693
I2
s(g11
I42
g12
Vinsert
p19694
I42
VSimpleName: val
p19695
tp19696
I2
s(g847
I42
g848
Vinsert
p19697
I42
VSimpleName: amount
p19698
tp19699
F0.25
s(g1553
I42
g1554
Vinsert
p19700
I42
VSimpleName: bootstrapMethods
p19701
tp19702
I1
s(g1192
I42
g1193
Vinsert
p19703
I11
VCastExpression
p19704
tp19705
I1
s(g431
I42
g432
Vinsert
p19706
I14
VClassInstanceCreation
p19707
tp19708
I1
s(g8409
I42
g8410
Vinsert
p19709
I42
VSimpleName: IPersistentMap
p19710
tp19711
F2.25
s(g9218
I42
g9219
Vinsert
p19712
I42
VSimpleName: RT
p19713
tp19714
I8
s(g2959
I42
g2960
Vinsert
p19715
I42
VSimpleName: PersistentTreeSet
p19716
tp19717
I1
s(g6845
I42
g6846
Vinsert
p19718
I42
VSimpleName: booleanCast
p19719
tp19720
I1
s(g11015
I42
g11016
Vinsert
p19721
I8
VBlock
p19722
tp19723
I2
s(g8516
I42
g8517
Vinsert
p19724
I33
VNullLiteral
p19725
tp19726
F0.25
s(g1515
I42
g1516
Vinsert
p19727
I8
VBlock
p19728
tp19729
I1
s(g46
I42
g47
Vinsert
p19730
I43
VSimpleType: IDeref
p19731
tp19732
F0.5
s(g1009
I42
g1010
Vinsert
p19733
I43
VSimpleType: Resolver
p19734
tp19735
I2
s(g3918
I42
g3919
Vinsert
p19736
I43
VSimpleType: ClassNotFoundException
p19737
tp19738
F0.25
s(g9965
I42
g9966
Vinsert
p19739
I32
VMethodInvocation
p19740
tp19741
I2
s(g1563
I42
g1564
Vinsert
p19742
I44
VSingleVariableDeclaration
p19743
tp19744
F0.5
s(g31
I42
g32
Vinsert
p19745
I60
VVariableDeclarationStatement
p19746
tp19747
I2
s(g2542
I42
g2543
Vinsert
p19748
I32
VMethodInvocation
p19749
tp19750
F30.25
s(g2231
I42
g2232
Vinsert
p19751
I42
VSimpleName: pclasses
p19752
tp19753
I1
s(g1147
I42
g1148
Vinsert
p19754
I83
VModifier: public
p19755
tp19756
F0.25
s(g1223
I42
g1224
Vinsert
p19757
I27
VInfixExpression: ==
p19758
tp19759
I2
s(g1649
I42
g1650
Vinsert
p19760
I43
VSimpleType: Exception
p19761
tp19762
I1
s(g56
I42
g57
Vinsert
p19763
I42
VSimpleName: nextID
p19764
tp19765
F0.25
s(g6879
I42
g6880
Vinsert
p19766
I42
VSimpleName: Callable
p19767
tp19768
I1
s(g4267
I42
g4268
Vinsert
p19769
I45
VStringLiteral: "121:1: expression returns [Object val] : (d= dotExpression | e= otherThanDotExpression );"
p19770
tp19771
I1
s(g3421
I42
g3422
Vinsert
p19772
I83
VModifier: static
p19773
tp19774
I1
s(g4046
I42
g4047
Vinsert
p19775
I42
VSimpleName: getSimpleName
p19776
tp19777
I1
s(g237
I42
g238
Vinsert
p19778
I39
VPrimitiveType: short
p19779
tp19780
F1.25
s(g4497
I42
g4498
Vinsert
p19781
I42
VSimpleName: rev
p19782
tp19783
F0.5
s(g3849
I42
g3850
Vinsert
p19784
I12
VCatchClause
p19785
tp19786
I1
s(g3438
I42
g3439
Vinsert
p19787
I42
VSimpleName: Integer
p19788
tp19789
I1
s(g3676
I42
g3677
Vinsert
p19790
I42
VSimpleName: e
p19791
tp19792
I8
s(g1099
I42
g1100
Vinsert
p19793
I25
VIfStatement
p19794
tp19795
I2
s(g9320
I42
g9321
Vinsert
p19796
I40
VQualifiedName: C.STATEMENT
p19797
tp19798
I1
s(g2047
I42
g2048
Vinsert
p19799
I27
VInfixExpression: ==
p19800
tp19801
F0.25
s(g101
I42
g102
Vinsert
p19802
I42
VSimpleName: PRINT_READABLY
p19803
tp19804
I1
s(g1218
I42
g1219
Vinsert
p19805
I42
VSimpleName: vars
p19806
tp19807
I1
s(g76
I42
g77
Vinsert
p19808
I39
VPrimitiveType: int
p19809
tp19810
I1
s(g5528
I42
g5529
Vinsert
p19811
I42
VSimpleName: c
p19812
tp19813
F3.25
s(g2711
I42
g2712
Vinsert
p19814
I32
VMethodInvocation
p19815
tp19816
I1
s(g4891
I42
g4892
Vinsert
p19817
I41
VReturnStatement
p19818
tp19819
F3.25
s(g12455
I42
g12456
Vinsert
p19820
I42
VSimpleName: toBigDecimal
p19821
tp19822
F0.25
s(g3384
I42
g3385
Vinsert
p19823
I42
VSimpleName: IPersistentMap
p19824
tp19825
I2
s(g681
I42
g682
Vinsert
p19826
I42
VSimpleName: IllegalStateException
p19827
tp19828
I1
s(g2231
I42
g2232
Vinsert
p19829
I60
VVariableDeclarationStatement
p19830
tp19831
I2
s(g2677
I42
g2678
Vinsert
p19832
I60
VVariableDeclarationStatement
p19833
tp19834
I1
s(g745
I42
g746
Vinsert
p19835
I42
VSimpleName: vals
p19836
tp19837
I1
s(g26
I42
g27
Vinsert
p19838
I25
VIfStatement
p19839
tp19840
I1
s(g1273
I42
g1274
Vinsert
p19841
I7
VAssignment: =
p19842
tp19843
I1
s(g9569
I42
g9570
Vinsert
p19844
I42
VSimpleName: len
p19845
tp19846
I1
s(g2935
I42
g2936
Vinsert
p19847
I42
VSimpleName: level
p19848
tp19849
I1
s(g4726
I42
g4727
Vinsert
p19850
I42
VSimpleName: String
p19851
tp19852
F1.25
s(g4267
I42
g4268
Vinsert
p19853
I32
VMethodInvocation
p19854
tp19855
I2
s(g1401
I42
g1402
Vinsert
p19856
I33
VNullLiteral
p19857
tp19858
I1
s(g8835
I42
g8836
Vinsert
p19859
I42
VSimpleName: readChar
p19860
tp19861
F0.25
s(g9861
I42
g9862
Vinsert
p19862
I42
VSimpleName: load
p19863
tp19864
I2
s(g3797
I42
g3798
Vinsert
p19865
I40
VQualifiedName: Boolean.FALSE
p19866
tp19867
I1
s(g765
I42
g766
Vinsert
p19868
I42
VSimpleName: nested
p19869
tp19870
I1
s(g903
I42
g904
Vinsert
p19871
I42
VSimpleName: pclass
p19872
tp19873
I2
s(g1707
I42
g1708
Vinsert
p19874
I83
VModifier: final
p19875
tp19876
F0.25
s(g3282
I42
g3283
Vinsert
p19877
I42
VSimpleName: refer
p19878
tp19879
I1
s(g5695
I42
g5696
Vinsert
p19880
I43
VSimpleType: ConcurrentHashMap
p19881
tp19882
I1
s(g3841
I42
g3842
Vinsert
p19883
I11
VCastExpression
p19884
tp19885
F0.25
s(g4004
I42
g4005
Vinsert
p19886
I52
VThisExpression
p19887
tp19888
I5
s(g2520
I42
g2521
Vinsert
p19889
I42
VSimpleName: e
p19890
tp19891
I4
s(g4480
I42
g4481
Vinsert
p19892
I43
VSimpleType: Boolean
p19893
tp19894
I2
s(g7528
I42
g7529
Vinsert
p19895
I42
VSimpleName: opts
p19896
tp19897
F1.25
s(g4812
I42
g4813
Vinsert
p19898
I42
VSimpleName: Integer
p19899
tp19900
I7
s(g3999
I42
g4000
Vinsert
p19901
I8
VBlock
p19902
tp19903
I1
s(g1578
I42
g1579
Vinsert
p19904
I41
VReturnStatement
p19905
tp19906
F2.75
s(g313
I42
g314
Vinsert
p19907
I31
VMethodDeclaration
p19908
tp19909
F0.25
s(g3161
I42
g3162
Vinsert
p19910
I42
VSimpleName: Object
p19911
tp19912
I1
s(g13739
I42
g13740
Vinsert
p19913
I25
VIfStatement
p19914
tp19915
I3
s(g1273
I42
g1274
Vinsert
p19916
I21
VExpressionStatement
p19917
tp19918
I1
s(g1474
I42
g1475
Vinsert
p19919
I42
VSimpleName: Symbol
p19920
tp19921
I1
s(g6941
I42
g6942
Vinsert
p19922
I43
VSimpleType: StringBuffer
p19923
tp19924
I2
s(g2872
I42
g2873
Vinsert
p19925
I25
VIfStatement
p19926
tp19927
I1
s(g827
I42
g828
Vinsert
p19928
I42
VSimpleName: IPersistentMap
p19929
tp19930
I1
s(g16850
I42
g16851
Vinsert
p19931
I42
VSimpleName: basename
p19932
tp19933
I1
s(g7602
I42
g7603
Vinsert
p19934
I27
VInfixExpression: ==
p19935
tp19936
I4
s(g479
I42
g480
Vinsert
p19937
I42
VSimpleName: bit
p19938
tp19939
I1
s(g9877
I42
g9878
Vinsert
p19940
I42
VSimpleName: allKeysConstant
p19941
tp19942
I2
s(g8643
I42
g8644
Vinsert
p19943
I42
VSimpleName: DRETURN
p19944
tp19945
I1
s(g3619
I42
g3620
Vinsert
p19946
I43
VSimpleType: Map.Entry
p19947
tp19948
I1
s(g1573
I42
g1574
Vinsert
p19949
I42
VSimpleName: Exception
p19950
tp19951
F0.25
s(g86
I42
g87
Vinsert
p19952
I8
VBlock
p19953
tp19954
F3.25
s(g3591
I42
g3592
Vinsert
p19955
I42
VSimpleName: ins
p19956
tp19957
I3
s(g8602
I42
g8603
Vinsert
p19958
I42
VSimpleName: String
p19959
tp19960
I2
s(g421
I42
g422
Vinsert
p19961
I42
VSimpleName: coll
p19962
tp19963
I1
s(g2872
I42
g2873
Vinsert
p19964
I42
VSimpleName: m
p19965
tp19966
I2
s(g184
I42
g185
Vinsert
p19967
I27
VInfixExpression: ||
p19968
tp19969
I2
s(g3689
I42
g3690
Vinsert
p19970
I33
VNullLiteral
p19971
tp19972
F2.25
s(g4041
I42
g4042
Vinsert
p19973
I40
VQualifiedName: l.successors.next.successor
p19974
tp19975
I1
s(g9218
I42
g9219
Vinsert
p19976
I53
VThrowStatement
p19977
tp19978
I1
s(g9595
I42
g9596
Vinsert
p19979
I51
VSynchronizedStatement
p19980
tp19981
I1
s(g8835
I42
g8836
Vinsert
p19982
I42
VSimpleName: ret
p19983
tp19984
I3
s(g401
I42
g402
Vinsert
p19985
I83
VModifier: synchronized
p19986
tp19987
F0.25
s(g2951
I42
g2952
Vinsert
p19988
I36
VParenthesizedExpression
p19989
tp19990
I1
s(g1253
I42
g1254
Vinsert
p19991
I42
VSimpleName: forceChunk
p19992
tp19993
I1
s(g4118
I42
g4119
Vinsert
p19994
I83
VModifier: public
p19995
tp19996
F1.0
s(g1391
I42
g1392
Vinsert
p19997
I42
VSimpleName: key
p19998
tp19999
I4
s(g386
I42
g387
Vinsert
p20000
I42
VSimpleName: parse
p20001
tp20002
F0.25
s(g4856
I42
g4857
Vinsert
p20003
I27
VInfixExpression: ==
p20004
tp20005
I1
s(g4497
I42
g4498
Vinsert
p20006
I25
VIfStatement
p20007
tp20008
I2
s(g862
I42
g863
Vinsert
p20009
I42
VSimpleName: source
p20010
tp20011
I1
s(g973
I42
g974
Vinsert
p20012
I25
VIfStatement
p20013
tp20014
I2
s(g6203
I42
g6204
Vinsert
p20015
I32
VMethodInvocation
p20016
tp20017
I5
s(g1490
I42
g1491
Vinsert
p20018
I5
VArrayType: String[]
p20019
tp20020
F0.25
s(g924
I42
g925
Vinsert
p20021
I42
VSimpleName: BigInteger
p20022
tp20023
F1.0
s(g2692
I42
g2693
Vinsert
p20024
I42
VSimpleName: classCache
p20025
tp20026
I1
s(g2073
I42
g2074
Vinsert
p20027
I42
VSimpleName: Boolean
p20028
tp20029
I1
s(g572
I42
g573
Vinsert
p20030
I38
VPrefixExpression: ++
p20031
tp20032
I1
s(g3087
I42
g3088
Vinsert
p20033
I42
VSimpleName: name
p20034
tp20035
F2.25
s(g1925
I42
g1926
Vinsert
p20036
I31
VMethodDeclaration
p20037
tp20038
F0.25
s(g1368
I42
g1369
Vinsert
p20039
I1
VAnonymousClassDeclaration
p20040
tp20041
F0.5
s(g129
I42
g130
Vinsert
p20042
I42
VSimpleName: site
p20043
tp20044
F0.25
s(g552
I42
g553
Vinsert
p20045
I22
VFieldAccess
p20046
tp20047
F2.25
s(g1750
I42
g1751
Vinsert
p20048
I32
VMethodInvocation
p20049
tp20050
I2
s(g9724
I42
g9725
Vinsert
p20051
I43
VSimpleType: BindingInit
p20052
tp20053
I2
s(g1568
I42
g1569
Vinsert
p20054
I5
VArrayType: Object[]
p20055
tp20056
I2
s(g989
I42
g990
Vinsert
p20057
I42
VSimpleName: clinitgen
p20058
tp20059
I1
s(g5816
I42
g5817
Vinsert
p20060
I42
VSimpleName: e
p20061
tp20062
I2
s(g5664
I42
g5665
Vinsert
p20063
I42
VSimpleName: ISeq
p20064
tp20065
I2
s(g7638
I42
g7639
Vinsert
p20066
I42
VSimpleName: PersistentArrayList
p20067
tp20068
I2
s(g10954
I42
g10955
Vinsert
p20069
I42
VSimpleName: edit
p20070
tp20071
I2
s(g819
I42
g820
Vinsert
p20072
I22
VFieldAccess
p20073
tp20074
F0.25
s(g421
I42
g422
Vinsert
p20075
I42
VSimpleName: String
p20076
tp20077
I2
s(g4754
I42
g4755
Vinsert
p20078
I42
VSimpleName: List
p20079
tp20080
I2
s(g3500
I42
g3501
Vinsert
p20081
I42
VSimpleName: getMethod
p20082
tp20083
I5
s(g1172
I42
g1173
Vinsert
p20084
I42
VSimpleName: Object
p20085
tp20086
F7.75
s(g2578
I42
g2579
Vinsert
p20087
I42
VSimpleName: CLDESC
p20088
tp20089
I2
s(g6859
I42
g6860
Vinsert
p20090
I42
VSimpleName: Class
p20091
tp20092
F0.25
s(g6040
I42
g6041
Vinsert
p20093
I34
VNumberLiteral: 0
p20094
tp20095
I1
s(g661
I42
g662
Vinsert
p20096
I42
VSimpleName: DOT
p20097
tp20098
F0.25
s(g8032
I42
g8033
Vinsert
p20099
I42
VSimpleName: Symbol
p20100
tp20101
I2
s(g542
I42
g543
Vinsert
p20102
I8
VBlock
p20103
tp20104
I2
s(g1223
I42
g1224
Vinsert
p20105
I42
VSimpleName: coll
p20106
tp20107
I2
s(g542
I42
g543
Vinsert
p20108
I40
VQualifiedName: Opcodes.TOP
p20109
tp20110
I1
s(g1127
I42
g1128
Vinsert
p20111
I42
VSimpleName: fn
p20112
tp20113
I1
s(g2159
I42
g2160
Vinsert
p20114
I43
VSimpleType: Exception
p20115
tp20116
F0.25
s(g1019
I42
g1020
Vinsert
p20117
I11
VCastExpression
p20118
tp20119
I4
s(g10360
I42
g10361
Vinsert
p20120
I42
VSimpleName: arg2
p20121
tp20122
F7.0
s(g2520
I42
g2521
Vinsert
p20123
I42
VSimpleName: IMapEntry
p20124
tp20125
I4
s(g6946
I42
g6947
Vinsert
p20126
I83
VModifier: public
p20127
tp20128
F0.25
s(g2469
I42
g2470
Vinsert
p20129
I42
VSimpleName: IPersistentList
p20130
tp20131
I1
s(g6203
I42
g6204
Vinsert
p20132
I34
VNumberLiteral: 1
p20133
tp20134
I2
s(g740
I42
g741
Vinsert
p20135
I42
VSimpleName: ArrayList
p20136
tp20137
I2
s(g2068
I42
g2069
Vinsert
p20138
I85
VDimension
p20139
tp20140
F1.0
s(g651
I42
g652
Vinsert
p20141
I42
VSimpleName: LA23_0
p20142
tp20143
I1
s(g6092
I42
g6093
Vinsert
p20144
I42
VSimpleName: i
p20145
tp20146
I1
s(g681
I42
g682
Vinsert
p20147
I43
VSimpleType: IllegalStateException
p20148
tp20149
I1
s(g56
I42
g57
Vinsert
p20150
I43
VSimpleType: AtomicInteger
p20151
tp20152
F0.25
s(g4557
I42
g4558
Vinsert
p20153
I8
VBlock
p20154
tp20155
F2.25
s(g4303
I42
g4304
Vinsert
p20156
I36
VParenthesizedExpression
p20157
tp20158
I1
s(g10343
I42
g10344
Vinsert
p20159
I43
VSimpleType: GeneratorAdapter
p20160
tp20161
F0.25
s(g5592
I42
g5593
Vinsert
p20162
I7
VAssignment: =
p20163
tp20164
I1
s(g4452
I42
g4453
Vinsert
p20165
I59
VVariableDeclarationFragment
p20166
tp20167
I2
s(g3180
I42
g3181
Vinsert
p20168
I27
VInfixExpression: <=
p20169
tp20170
I1
s(g3633
I42
g3634
Vinsert
p20171
I38
VPrefixExpression: !
p20172
tp20173
I1
s(g139
I42
g140
Vinsert
p20174
I40
VQualifiedName: info.status
p20175
tp20176
I1
s(g2068
I42
g2069
Vinsert
p20177
I39
VPrimitiveType: char
p20178
tp20179
F0.5
s(g10288
I42
g10289
Vinsert
p20180
I32
VMethodInvocation
p20181
tp20182
F9.25
s(g4041
I42
g4042
Vinsert
p20183
I38
VPrefixExpression: ~
p20184
tp20185
I1
s(g2586
I42
g2587
Vinsert
p20186
I21
VExpressionStatement
p20187
tp20188
I1
s(g2493
I42
g2494
Vinsert
p20189
I42
VSimpleName: PersistentVector
p20190
tp20191
I1
s(g204
I42
g205
Vinsert
p20192
I33
VNullLiteral
p20193
tp20194
I1
s(g1515
I42
g1516
Vinsert
p20195
I43
VSimpleType: FnExpr
p20196
tp20197
F0.25
s(g1037
I42
g1038
Vinsert
p20198
I43
VSimpleType: GeneratorAdapter
p20199
tp20200
I2
s(g4508
I42
g4509
Vinsert
p20201
I42
VSimpleName: cause
p20202
tp20203
I1
s(g4856
I42
g4857
Vinsert
p20204
I41
VReturnStatement
p20205
tp20206
I2
s(g3121
I42
g3122
Vinsert
p20207
I32
VMethodInvocation
p20208
tp20209
I7
s(g2371
I42
g2372
Vinsert
p20210
I42
VSimpleName: Object
p20211
tp20212
F0.25
s(g5634
I42
g5635
Vinsert
p20213
I42
VSimpleName: r
p20214
tp20215
I1
s(g149
I42
g150
Vinsert
p20216
I50
VSwitchStatement
p20217
tp20218
I2
s(g16987
I42
g16988
Vinsert
p20219
I21
VExpressionStatement
p20220
tp20221
I4
s(g4059
I42
g4060
Vinsert
p20222
I14
VClassInstanceCreation
p20223
tp20224
F0.25
s(g3038
I42
g3039
Vinsert
p20225
I42
VSimpleName: ISeq
p20226
tp20227
F0.25
s(g2159
I42
g2160
Vinsert
p20228
I42
VSimpleName: invoke
p20229
tp20230
F0.25
s(g19356
I42
g19357
Vinsert
p20231
I42
VSimpleName: arglistskw
p20232
tp20233
I1
s(g1490
I42
g1491
Vinsert
p20234
I42
VSimpleName: exceptions
p20235
tp20236
F0.25
s(g852
I42
g853
Vinsert
p20237
I42
VSimpleName: Symbol
p20238
tp20239
I1
s(g1291
I42
g1292
Vinsert
p20240
I31
VMethodDeclaration
p20241
tp20242
F0.25
s(g1745
I42
g1746
Vinsert
p20243
I42
VSimpleName: rest
p20244
tp20245
I8
s(g2376
I42
g2377
Vinsert
p20246
I42
VSimpleName: fn
p20247
tp20248
F0.25
s(g2835
I42
g2836
Vinsert
p20249
I41
VReturnStatement
p20250
tp20251
I2
s(g857
I42
g858
Vinsert
p20252
I39
VPrimitiveType: boolean
p20253
tp20254
F0.5
s(g3325
I42
g3326
Vinsert
p20255
I45
VStringLiteral: "#<Var: "
p20256
tp20257
I1
s(g431
I42
g432
Vinsert
p20258
I53
VThrowStatement
p20259
tp20260
I1
s(g313
I42
g314
Vinsert
p20261
I43
VSimpleType: Exception
p20262
tp20263
F0.25
s(g199
I42
g200
Vinsert
p20264
I42
VSimpleName: INVOKEINTERFACE
p20265
tp20266
I1
s(g2068
I42
g2069
Vinsert
p20267
I41
VReturnStatement
p20268
tp20269
I2
s(g4452
I42
g4453
Vinsert
p20270
I32
VMethodInvocation
p20271
tp20272
I1
s(g13954
I42
g13955
Vinsert
p20273
I42
VSimpleName: first
p20274
tp20275
F0.5
s(g4343
I42
g4344
Vinsert
p20276
I52
VThisExpression
p20277
tp20278
F0.25
s(g2649
I42
g2650
Vinsert
p20279
I42
VSimpleName: meta
p20280
tp20281
F0.25
s(g537
I42
g538
Vinsert
p20282
I40
VQualifiedName: ClassWriter.CLASS
p20283
tp20284
I1
s(g61
I42
g62
Vinsert
p20285
I34
VNumberLiteral: 64
p20286
tp20287
I1
s(g847
I42
g848
Vinsert
p20288
I83
VModifier: public
p20289
tp20290
F0.25
s(Vinsert
p20291
I42
VSimpleName: longValue
p20292
Vinsert
p20293
I42
VSimpleName: reduce
p20294
tp20295
I1
s(g2427
I42
g2428
Vinsert
p20296
I42
VSimpleName: CompilerException
p20297
tp20298
I2
s(g421
I42
g422
Vinsert
p20299
I32
VMethodInvocation
p20300
tp20301
I1
s(g5759
I42
g5760
Vinsert
p20302
I7
VAssignment: =
p20303
tp20304
I2
s(g1286
I42
g1287
Vinsert
p20305
I32
VMethodInvocation
p20306
tp20307
F5.5
s(g4620
I42
g4621
Vinsert
p20308
I32
VMethodInvocation
p20309
tp20310
I2
s(g1611
I42
g1612
Vinsert
p20311
I27
VInfixExpression: <
p20312
tp20313
I1
s(g1905
I42
g1906
Vinsert
p20314
I43
VSimpleType: Exception
p20315
tp20316
F0.25
s(g19356
I42
g19357
Vinsert
p20317
I42
VSimpleName: namesym
p20318
tp20319
I1
s(g2697
I42
g2698
Vinsert
p20320
I42
VSimpleName: name
p20321
tp20322
F0.25
s(g2964
I42
g2965
Vinsert
p20323
I23
VFieldDeclaration
p20324
tp20325
F0.25
s(g4452
I42
g4453
Vinsert
p20326
I60
VVariableDeclarationStatement
p20327
tp20328
I1
s(g2964
I42
g2965
Vinsert
p20329
I7
VAssignment: =
p20330
tp20331
F0.25
s(g7649
I42
g7650
Vinsert
p20332
I57
VTypeLiteral
p20333
tp20334
I2
s(g5008
I42
g5009
Vinsert
p20335
I42
VSimpleName: form
p20336
tp20337
F2.75
s(g451
I42
g452
Vinsert
p20338
I21
VExpressionStatement
p20339
tp20340
I1
s(g4694
I42
g4695
Vinsert
p20341
I11
VCastExpression
p20342
tp20343
I1
s(g7783
I42
g7784
Vinsert
p20344
I27
VInfixExpression: ||
p20345
tp20346
I2
s(g139
I42
g140
Vinsert
p20347
I27
VInfixExpression: ==
p20348
tp20349
F1.25
s(g6450
I42
g6451
Vinsert
p20350
I36
VParenthesizedExpression
p20351
tp20352
I1
s(g3880
I42
g3881
Vinsert
p20353
I42
VSimpleName: getName
p20354
tp20355
F0.5
s(g5695
I42
g5696
Vinsert
p20356
I45
VStringLiteral: "Var names must have namespace"
p20357
tp20358
I1
s(g3875
I42
g3876
Vinsert
p20359
I42
VSimpleName: numParams
p20360
tp20361
I1
s(g8576
I42
g8577
Vinsert
p20362
I33
VNullLiteral
p20363
tp20364
I1
s(g2159
I42
g2160
Vinsert
p20365
I31
VMethodDeclaration
p20366
tp20367
F0.25
s(g4190
I42
g4191
Vinsert
p20368
I42
VSimpleName: Compiler
p20369
tp20370
I1
s(g106
I42
g107
Vinsert
p20371
I42
VSimpleName: tag
p20372
tp20373
I1
s(g1545
I42
g1546
Vinsert
p20374
I83
VModifier: public
p20375
tp20376
F1.5
s(g1321
I42
g1322
Vinsert
p20377
I42
VSimpleName: t
p20378
tp20379
I1
s(g6561
I42
g6562
Vinsert
p20380
I42
VSimpleName: isInterface
p20381
tp20382
I1
s(g2951
I42
g2952
Vinsert
p20383
I62
VInstanceofExpression
p20384
tp20385
I1
s(g12211
I42
g12212
Vinsert
p20386
I52
VThisExpression
p20387
tp20388
I1
s(g1248
I42
g1249
Vinsert
p20389
I42
VSimpleName: from
p20390
tp20391
I1
s(g1545
I42
g1546
Vinsert
p20392
I42
VSimpleName: all
p20393
tp20394
F0.25
s(g19495
I42
g19496
Vinsert
p20395
I42
VSimpleName: arg1
p20396
tp20397
F0.25
s(g3229
I42
g3230
Vinsert
p20398
I42
VSimpleName: asVector
p20399
tp20400
I1
s(g2480
I42
g2481
Vinsert
p20401
I42
VSimpleName: Object
p20402
tp20403
F0.25
s(g164
I42
g165
Vinsert
p20404
I25
VIfStatement
p20405
tp20406
I3
s(g7304
I42
g7305
Vinsert
p20407
I45
VStringLiteral: "Divide by zero"
p20408
tp20409
F0.25
s(g2130
I42
g2131
Vinsert
p20410
I7
VAssignment: =
p20411
tp20412
I1
s(g2443
I42
g2444
Vinsert
p20413
I65
VTagElement: @param
p20414
tp20415
F0.5
s(g214
I42
g215
Vinsert
p20416
I42
VSimpleName: Class
p20417
tp20418
I3
s(g290
I42
g291
Vinsert
p20419
I23
VFieldDeclaration
p20420
tp20421
F0.25
s(g1535
I42
g1536
Vinsert
p20422
I27
VInfixExpression: !=
p20423
tp20424
I1
s(g3644
I42
g3645
Vinsert
p20425
I42
VSimpleName: CLOJURE_NS
p20426
tp20427
I1
s(g6092
I42
g6093
Vinsert
p20428
I27
VInfixExpression: !=
p20429
tp20430
I1
s(g6518
I42
g6519
Vinsert
p20431
I43
VSimpleType: Symbol
p20432
tp20433
F1.25
s(g4303
I42
g4304
Vinsert
p20434
I41
VReturnStatement
p20435
tp20436
I1
s(g6704
I42
g6705
Vinsert
p20437
I42
VSimpleName: bi
p20438
tp20439
I2
s(g5893
I42
g5894
Vinsert
p20440
I42
VSimpleName: val
p20441
tp20442
F3.25
s(g149
I42
g150
Vinsert
p20443
I43
VSimpleType: ThreadLocalData
p20444
tp20445
F0.5
s(g1112
I42
g1113
Vinsert
p20446
I52
VThisExpression
p20447
tp20448
I1
s(g16987
I42
g16988
Vinsert
p20449
I42
VSimpleName: METHOD
p20450
tp20451
I1
s(g9569
I42
g9570
Vinsert
p20452
I42
VSimpleName: Array
p20453
tp20454
I1
s(g10288
I42
g10289
Vinsert
p20455
I27
VInfixExpression: ==
p20456
tp20457
I5
s(g4073
I42
g4074
Vinsert
p20458
I22
VFieldAccess
p20459
tp20460
I3
s(g3256
I42
g3257
Vinsert
p20461
I42
VSimpleName: readTagged
p20462
tp20463
F0.25
s(g267
I42
g268
Vinsert
p20464
I41
VReturnStatement
p20465
tp20466
I2
s(g1563
I42
g1564
Vinsert
p20467
I42
VSimpleName: t
p20468
tp20469
I2
s(g2509
I42
g2510
Vinsert
p20470
I42
VSimpleName: n
p20471
tp20472
I1
s(g2026
I42
g2027
Vinsert
p20473
I42
VSimpleName: gen
p20474
tp20475
F4.75
s(g4765
I42
g4766
Vinsert
p20476
I40
VQualifiedName: C.EXPRESSION
p20477
tp20478
I1
s(g7680
I42
g7681
Vinsert
p20479
I42
VSimpleName: array
p20480
tp20481
I1
s(g1845
I42
g1846
Vinsert
p20482
I38
VPrefixExpression: --
p20483
tp20484
I1
s(g396
I42
g397
Vinsert
p20485
I58
VVariableDeclarationExpression
p20486
tp20487
I1
s(g8602
I42
g8603
Vinsert
p20488
I42
VSimpleName: doublequote
p20489
tp20490
F0.25
s(g71
I42
g72
Vinsert
p20491
I42
VSimpleName: typ
p20492
tp20493
I2
s(g5228
I42
g5229
Vinsert
p20494
I40
VQualifiedName: thisSym.name
p20495
tp20496
I1
s(g5960
I42
g5961
Vinsert
p20497
I27
VInfixExpression: >
p20498
tp20499
I1
s(g2397
I42
g2398
Vinsert
p20500
I42
VSimpleName: name
p20501
tp20502
F0.25
s(g2872
I42
g2873
Vinsert
p20503
I42
VSimpleName: oldm
p20504
tp20505
I2
s(g3465
I42
g3466
Vinsert
p20506
I11
VCastExpression
p20507
tp20508
I4
s(g7574
I42
g7575
Vinsert
p20509
I40
VQualifiedName: PersistentVector.EMPTY
p20510
tp20511
I2
s(g9244
I42
g9245
Vinsert
p20512
I40
VQualifiedName: java.io.ObjectOutputStream
p20513
tp20514
F0.5
s(Vinsert
p20515
I42
VSimpleName: invoke
p20516
Vinsert
p20517
I40
VQualifiedName: oa.length
p20518
tp20519
I1
s(g8821
I42
g8822
Vinsert
p20520
I42
VSimpleName: MapEntry
p20521
tp20522
I1
s(Vinsert
p20523
I42
VSimpleName: rest
p20524
Vinsert
p20525
I38
VPrefixExpression: ++
p20526
tp20527
I6
s(g1396
I42
g1397
Vinsert
p20528
I27
VInfixExpression: !=
p20529
tp20530
I2
s(g537
I42
g538
Vinsert
p20531
I42
VSimpleName: cw
p20532
tp20533
I1
s(g2896
I42
g2897
Vinsert
p20534
I10
VBreakStatement
p20535
tp20536
I6
s(g837
I42
g838
Vinsert
p20537
I42
VSimpleName: finallyExpr
p20538
tp20539
I1
s(g5916
I42
g5917
Vinsert
p20540
I42
VSimpleName: Float
p20541
tp20542
I1
s(g8409
I42
g8410
Vinsert
p20543
I43
VSimpleType: IPersistentMap
p20544
tp20545
F3.25
s(g4295
I42
g4296
Vinsert
p20546
I7
VAssignment: =
p20547
tp20548
F1.25
s(g1611
I42
g1612
Vinsert
p20549
I42
VSimpleName: next
p20550
tp20551
F0.25
s(g1286
I42
g1287
Vinsert
p20552
I42
VSimpleName: hashCombine
p20553
tp20554
F0.25
s(g1081
I42
g1082
Vinsert
p20555
I42
VSimpleName: c
p20556
tp20557
I2
s(g9617
I42
g9618
Vinsert
p20558
I42
VSimpleName: ns
p20559
tp20560
I2
s(g91
I42
g92
Vinsert
p20561
I27
VInfixExpression: +
p20562
tp20563
F6.25
s(g8553
I42
g8554
Vinsert
p20564
I42
VSimpleName: maxSize
p20565
tp20566
I1
s(g656
I42
g657
Vinsert
p20567
I21
VExpressionStatement
p20568
tp20569
F3.25
s(g656
I42
g657
Vinsert
p20570
I32
VMethodInvocation
p20571
tp20572
I3
s(g1
I42
g2
Vinsert
p20573
I42
VSimpleName: ISeq
p20574
tp20575
I2
s(g6566
I42
g6567
Vinsert
p20576
I61
VWhileStatement
p20577
tp20578
I1
s(g4932
I42
g4933
Vinsert
p20579
I43
VSimpleType: Object
p20580
tp20581
F1.5
s(g6103
I42
g6104
Vinsert
p20582
I11
VCastExpression
p20583
tp20584
I7
s(g6879
I42
g6880
Vinsert
p20585
I42
VSimpleName: MACRO_META
p20586
tp20587
I1
s(Vinsert
p20588
I42
VSimpleName: deref
p20589
Vinsert
p20590
I42
VSimpleName: init
p20591
tp20592
F8.25
s(g2951
I42
g2952
Vinsert
p20593
I8
VBlock
p20594
tp20595
I1
s(g169
I42
g170
Vinsert
p20596
I42
VSimpleName: ClassVisitor
p20597
tp20598
I1
s(g1032
I42
g1033
Vinsert
p20599
I8
VBlock
p20600
tp20601
I1
s(g8281
I42
g8282
Vinsert
p20602
I42
VSimpleName: RT
p20603
tp20604
I3
s(g86
I42
g87
Vinsert
p20605
I42
VSimpleName: gen
p20606
tp20607
F3.5
s(g6859
I42
g6860
Vinsert
p20608
I43
VSimpleType: Class
p20609
tp20610
F0.25
s(g2641
I42
g2642
Vinsert
p20611
I16
VConditionalExpression
p20612
tp20613
I1
s(g1606
I42
g1607
Vinsert
p20614
I42
VSimpleName: Expr
p20615
tp20616
F0.25
s(g1032
I42
g1033
Vinsert
p20617
I42
VSimpleName: String
p20618
tp20619
F0.5
s(g6610
I42
g6611
Vinsert
p20620
I45
VStringLiteral: "line"
p20621
tp20622
I1
s(g1822
I42
g1823
Vinsert
p20623
I42
VSimpleName: Var
p20624
tp20625
I1
s(g1167
I42
g1168
Vinsert
p20626
I5
VArrayType: BigInteger[]
p20627
tp20628
I1
s(g1925
I42
g1926
Vinsert
p20629
I43
VSimpleType: UnsupportedOperationException
p20630
tp20631
F0.25
s(g6026
I42
g6027
Vinsert
p20632
I45
VStringLiteral: " is mapped to "
p20633
tp20634
I1
s(g6781
I42
g6782
Vinsert
p20635
I43
VSimpleType: C
p20636
tp20637
F0.25
s(g1588
I42
g1589
Vinsert
p20638
I60
VVariableDeclarationStatement
p20639
tp20640
I4
s(g3033
I42
g3034
Vinsert
p20641
I16
VConditionalExpression
p20642
tp20643
I1
s(g3633
I42
g3634
Vinsert
p20644
I60
VVariableDeclarationStatement
p20645
tp20646
I4
s(g857
I42
g858
Vinsert
p20647
I40
VQualifiedName: Boolean.TRUE
p20648
tp20649
I2
s(g1063
I42
g1064
Vinsert
p20650
I42
VSimpleName: IllegalArgumentException
p20651
tp20652
I1
s(g7602
I42
g7603
Vinsert
p20653
I42
VSimpleName: seq
p20654
tp20655
F5.25
s(g16680
I42
g16681
Vinsert
p20656
I42
VSimpleName: put
p20657
tp20658
I1
s(g2169
I42
g2170
Vinsert
p20659
I27
VInfixExpression: !=
p20660
tp20661
I1
s(g6
I42
g7
Vinsert
p20662
I33
VNullLiteral
p20663
tp20664
I21
s(g6742
I42
g6743
Vinsert
p20665
I42
VSimpleName: args
p20666
tp20667
I4
s(g3201
I42
g3202
Vinsert
p20668
I25
VIfStatement
p20669
tp20670
I1
s(g5256
I42
g5257
Vinsert
p20671
I42
VSimpleName: e
p20672
tp20673
I2
s(g1182
I42
g1183
Vinsert
p20674
I43
VSimpleType: PersistentQueue
p20675
tp20676
I1
s(g199
I42
g200
Vinsert
p20677
I42
VSimpleName: isPrimitive
p20678
tp20679
I1
s(g1218
I42
g1219
Vinsert
p20680
I42
VSimpleName: varCallsites
p20681
tp20682
I1
s(g3146
I42
g3147
Vinsert
p20683
I44
VSingleVariableDeclaration
p20684
tp20685
F0.5
s(g6781
I42
g6782
Vinsert
p20686
I42
VSimpleName: RT
p20687
tp20688
I2
s(g5916
I42
g5917
Vinsert
p20689
I42
VSimpleName: y
p20690
tp20691
F1.25
s(g671
I42
g672
Vinsert
p20692
I41
VReturnStatement
p20693
tp20694
I3
s(g2520
I42
g2521
Vinsert
p20695
I32
VMethodInvocation
p20696
tp20697
I4
s(g8516
I42
g8517
Vinsert
p20698
I52
VThisExpression
p20699
tp20700
F0.25
s(g11679
I42
g11680
Vinsert
p20701
I42
VSimpleName: gen
p20702
tp20703
I4
s(g791
I42
g792
Vinsert
p20704
I39
VPrimitiveType: double
p20705
tp20706
I1
s(g12554
I42
g12555
Vinsert
p20707
I42
VSimpleName: IllegalArgumentException
p20708
tp20709
I1
s(g1520
I42
g1521
Vinsert
p20710
I42
VSimpleName: IllegalArgumentException
p20711
tp20712
F0.25
s(g4886
I42
g4887
Vinsert
p20713
I59
VVariableDeclarationFragment
p20714
tp20715
I1
s(g1515
I42
g1516
Vinsert
p20716
I42
VSimpleName: context
p20717
tp20718
F0.25
s(g2130
I42
g2131
Vinsert
p20719
I27
VInfixExpression: +
p20720
tp20721
I1
s(g7520
I42
g7521
Vinsert
p20722
I7
VAssignment: =
p20723
tp20724
F1.25
s(g1045
I42
g1046
Vinsert
p20725
I42
VSimpleName: equals
p20726
tp20727
I1
s(g1553
I42
g1554
Vinsert
p20728
I42
VSimpleName: hashCode
p20729
tp20730
I2
s(g3135
I42
g3136
Vinsert
p20731
I43
VSimpleType: WarnBoxedMath
p20732
tp20733
I1
s(g4549
I42
g4550
Vinsert
p20734
I40
VQualifiedName: C.EXPRESSION
p20735
tp20736
I1
s(g1601
I42
g1602
Vinsert
p20737
I40
VQualifiedName: nextMaster.array
p20738
tp20739
I1
s(g3880
I42
g3881
Vinsert
p20740
I42
VSimpleName: primc
p20741
tp20742
F0.25
s(g3681
I42
g3682
Vinsert
p20743
I32
VMethodInvocation
p20744
tp20745
I4
s(g1525
I42
g1526
Vinsert
p20746
I7
VAssignment: =
p20747
tp20748
I2
s(g1243
I42
g1244
Vinsert
p20749
I39
VPrimitiveType: boolean
p20750
tp20751
F0.25
s(g358
I42
g359
Vinsert
p20752
I42
VSimpleName: item
p20753
tp20754
F0.5
s(g1223
I42
g1224
Vinsert
p20755
I25
VIfStatement
p20756
tp20757
I2
s(g1291
I42
g1292
Vinsert
p20758
I41
VReturnStatement
p20759
tp20760
F1.25
s(g5977
I42
g5978
Vinsert
p20761
I42
VSimpleName: newImpl
p20762
tp20763
I2
s(g2456
I42
g2457
Vinsert
p20764
I70
VEnhancedForStatement
p20765
tp20766
I1
s(g760
I42
g761
Vinsert
p20767
I32
VMethodInvocation
p20768
tp20769
I2
s(g2026
I42
g2027
Vinsert
p20770
I21
VExpressionStatement
p20771
tp20772
I7
s(g4480
I42
g4481
Vinsert
p20773
I42
VSimpleName: o1
p20774
tp20775
I1
s(g16987
I42
g16988
Vinsert
p20776
I42
VSimpleName: _CT_OUT
p20777
tp20778
I1
s(g174
I42
g175
Vinsert
p20779
I42
VSimpleName: Class
p20780
tp20781
I1
s(g1856
I42
g1857
Vinsert
p20782
I39
VPrimitiveType: boolean
p20783
tp20784
F0.25
s(g5788
I42
g5789
Vinsert
p20785
I42
VSimpleName: LineNumberReader
p20786
tp20787
F2.5
s(g71
I42
g72
Vinsert
p20788
I32
VMethodInvocation
p20789
tp20790
I1
s(g5606
I42
g5607
Vinsert
p20791
I13
VCharacterLiteral: '.'
p20792
tp20793
I1
s(g1553
I42
g1554
Vinsert
p20794
I59
VVariableDeclarationFragment
p20795
tp20796
I3
s(g3295
I42
g3296
Vinsert
p20797
I31
VMethodDeclaration
p20798
tp20799
F0.25
s(g847
I42
g848
Vinsert
p20800
I44
VSingleVariableDeclaration
p20801
tp20802
F0.5
s(g3282
I42
g3283
Vinsert
p20803
I45
VStringLiteral: "in-ns"
p20804
tp20805
I1
s(g7618
I42
g7619
Vinsert
p20806
I11
VCastExpression
p20807
tp20808
I2
s(g227
I42
g228
Vinsert
p20809
I42
VSimpleName: IPersistentSet
p20810
tp20811
I1
s(g3841
I42
g3842
Vinsert
p20812
I42
VSimpleName: coll
p20813
tp20814
F1.25
s(g1104
I42
g1105
Vinsert
p20815
I21
VExpressionStatement
p20816
tp20817
I1
s(g6561
I42
g6562
Vinsert
p20818
I42
VSimpleName: gen
p20819
tp20820
I2
s(g6203
I42
g6204
Vinsert
p20821
I42
VSimpleName: n
p20822
tp20823
I1
s(g6726
I42
g6727
Vinsert
p20824
I42
VSimpleName: instance
p20825
tp20826
I3
s(g1770
I42
g1771
Vinsert
p20827
I42
VSimpleName: dvout
p20828
tp20829
I2
s(g1861
I42
g1862
Vinsert
p20830
I42
VSimpleName: bx
p20831
tp20832
I2
s(g466
I42
g467
Vinsert
p20833
I32
VMethodInvocation
p20834
tp20835
I8
s(g4436
I42
g4437
Vinsert
p20836
I42
VSimpleName: remove
p20837
tp20838
F0.25
s(g169
I42
g170
Vinsert
p20839
I43
VSimpleType: ClassVisitor
p20840
tp20841
I1
s(g1019
I42
g1020
Vinsert
p20842
I8
VBlock
p20843
tp20844
F5.25
s(g608
I42
g609
Vinsert
p20845
I42
VSimpleName: Object
p20846
tp20847
F0.5
s(g5055
I42
g5056
Vinsert
p20848
I42
VSimpleName: Exception
p20849
tp20850
F0.25
s(g411
I42
g412
Vinsert
p20851
I42
VSimpleName: ThreadLocalData
p20852
tp20853
F0.25
s(g76
I42
g77
Vinsert
p20854
I2
VArrayAccess
p20855
tp20856
I1
s(g1182
I42
g1183
Vinsert
p20857
I42
VSimpleName: m
p20858
tp20859
I1
s(g671
I42
g672
Vinsert
p20860
I36
VParenthesizedExpression
p20861
tp20862
I2
s(g4743
I42
g4744
Vinsert
p20863
I42
VSimpleName: objtype
p20864
tp20865
I1
s(g2964
I42
g2965
Vinsert
p20866
I42
VSimpleName: info
p20867
tp20868
F0.25
s(g2682
I42
g2683
Vinsert
p20869
I42
VSimpleName: m
p20870
tp20871
F0.25
s(g1495
I42
g1496
Vinsert
p20872
I59
VVariableDeclarationFragment
p20873
tp20874
I3
s(g1822
I42
g1823
Vinsert
p20875
I42
VSimpleName: Symbol
p20876
tp20877
I1
s(g7520
I42
g7521
Vinsert
p20878
I42
VSimpleName: argvs
p20879
tp20880
I2
s(g804
I42
g805
Vinsert
p20881
I42
VSimpleName: Set
p20882
tp20883
F0.25
s(g837
I42
g838
Vinsert
p20884
I42
VSimpleName: end
p20885
tp20886
F2.25
s(g6
I42
g7
Vinsert
p20887
I39
VPrimitiveType: int
p20888
tp20889
I11
s(g1649
I42
g1650
Vinsert
p20890
I25
VIfStatement
p20891
tp20892
I1
s(g4743
I42
g4744
Vinsert
p20893
I21
VExpressionStatement
p20894
tp20895
I2
s(g903
I42
g904
Vinsert
p20896
I42
VSimpleName: hasJavaClass
p20897
tp20898
I1
s(g4399
I42
g4400
Vinsert
p20899
I59
VVariableDeclarationFragment
p20900
tp20901
I1
s(g1991
I42
g1992
Vinsert
p20902
I43
VSimpleType: Exception
p20903
tp20904
F0.25
s(g3681
I42
g3682
Vinsert
p20905
I42
VSimpleName: equiv
p20906
tp20907
I1
s(g4604
I42
g4605
Vinsert
p20908
I25
VIfStatement
p20909
tp20910
I1
s(g3151
I42
g3152
Vinsert
p20911
I43
VSimpleType: Object
p20912
tp20913
F0.75
s(g2244
I42
g2245
Vinsert
p20914
I42
VSimpleName: t
p20915
tp20916
I2
s(g1866
I42
g1867
Vinsert
p20917
I42
VSimpleName: Float
p20918
tp20919
I1
s(g431
I42
g432
Vinsert
p20920
I25
VIfStatement
p20921
tp20922
I2
s(g2026
I42
g2027
Vinsert
p20923
I42
VSimpleName: line
p20924
tp20925
I2
s(g4046
I42
g4047
Vinsert
p20926
I42
VSimpleName: getClass
p20927
tp20928
I1
s(g4073
I42
g4074
Vinsert
p20929
I42
VSimpleName: name
p20930
tp20931
I1
s(g358
I42
g359
Vinsert
p20932
I42
VSimpleName: ISeq
p20933
tp20934
I3
s(g4084
I42
g4085
Vinsert
p20935
I27
VInfixExpression: ||
p20936
tp20937
I4
s(g3762
I42
g3763
Vinsert
p20938
I42
VSimpleName: getDynamicBinding
p20939
tp20940
I1
s(g1378
I42
g1379
Vinsert
p20941
I53
VThrowStatement
p20942
tp20943
F0.25
s(g3014
I42
g3015
Vinsert
p20944
I42
VSimpleName: Class
p20945
tp20946
F0.25
s(g1063
I42
g1064
Vinsert
p20947
I34
VNumberLiteral: 2
p20948
tp20949
I1
s(g1972
I42
g1973
Vinsert
p20950
I39
VPrimitiveType: boolean
p20951
tp20952
F0.25
s(g1432
I42
g1433
Vinsert
p20953
I27
VInfixExpression: ==
p20954
tp20955
I1
s(g5264
I42
g5265
Vinsert
p20956
I14
VClassInstanceCreation
p20957
tp20958
I1
s(g5394
I42
g5395
Vinsert
p20959
I42
VSimpleName: Object
p20960
tp20961
F0.5
s(g5130
I42
g5131
Vinsert
p20962
I43
VSimpleType: List
p20963
tp20964
I1
s(g31
I42
g32
Vinsert
p20965
I9
VBooleanLiteral: false
p20966
tp20967
F1.25
s(g8677
I42
g8678
Vinsert
p20968
I42
VSimpleName: Object
p20969
tp20970
F0.5
s(g4134
I42
g4135
Vinsert
p20971
I42
VSimpleName: vf
p20972
tp20973
F0.25
s(g353
I42
g354
Vinsert
p20974
I27
VInfixExpression: !=
p20975
tp20976
I2
s(g2332
I42
g2333
Vinsert
p20977
I8
VBlock
p20978
tp20979
I4
s(g4937
I42
g4938
Vinsert
p20980
I42
VSimpleName: Symbol
p20981
tp20982
F15.75
s(g204
I42
g205
Vinsert
p20983
I46
VSuperConstructorInvocation
p20984
tp20985
F0.25
s(g3212
I42
g3213
Vinsert
p20986
I42
VSimpleName: UNREALIZED_SEED
p20987
tp20988
I1
s(g431
I42
g432
Vinsert
p20989
I32
VMethodInvocation
p20990
tp20991
I4
s(g8511
I42
g8512
Vinsert
p20992
I42
VSimpleName: val
p20993
tp20994
F0.25
s(g2641
I42
g2642
Vinsert
p20995
I41
VReturnStatement
p20996
tp20997
I1
s(g3087
I42
g3088
Vinsert
p20998
I42
VSimpleName: IllegalArgumentException
p20999
tp21000
I2
s(g4604
I42
g4605
Vinsert
p21001
I27
VInfixExpression: ==
p21002
tp21003
I1
s(g1373
I42
g1374
Vinsert
p21004
I42
VSimpleName: e
p21005
tp21006
I1
s(g3135
I42
g3136
Vinsert
p21007
I32
VMethodInvocation
p21008
tp21009
I2
s(g11204
I42
g11205
Vinsert
p21010
I42
VSimpleName: methodName
p21011
tp21012
F0.25
s(g4793
I42
g4794
Vinsert
p21013
I42
VSimpleName: init
p21014
tp21015
I1
s(g222
I42
g223
Vinsert
p21016
I42
VSimpleName: print_level
p21017
tp21018
I1
s(g3100
I42
g3101
Vinsert
p21019
I42
VSimpleName: Obj
p21020
tp21021
F0.25
s(g2310
I42
g2311
Vinsert
p21022
I83
VModifier: public
p21023
tp21024
F0.25
s(g2087
I42
g2088
Vinsert
p21025
I42
VSimpleName: GeneratorAdapter
p21026
tp21027
F0.25
s(g4718
I42
g4719
Vinsert
p21028
I32
VMethodInvocation
p21029
tp21030
I3
s(g4110
I42
g4111
Vinsert
p21031
I21
VExpressionStatement
p21032
tp21033
F8.0
s(g1396
I42
g1397
Vinsert
p21034
I42
VSimpleName: len
p21035
tp21036
I1
s(g765
I42
g766
Vinsert
p21037
I42
VSimpleName: s
p21038
tp21039
I1
s(g129
I42
g130
Vinsert
p21040
I43
VSimpleType: ILookup
p21041
tp21042
I4
s(g809
I42
g810
Vinsert
p21043
I14
VClassInstanceCreation
p21044
tp21045
I2
s(g1568
I42
g1569
Vinsert
p21046
I3
VArrayCreation
p21047
tp21048
I1
s(g1525
I42
g1526
Vinsert
p21049
I42
VSimpleName: barged
p21050
tp21051
F0.25
s(g184
I42
g185
Vinsert
p21052
I42
VSimpleName: Sequential
p21053
tp21054
I5
s(g5214
I42
g5215
Vinsert
p21055
I21
VExpressionStatement
p21056
tp21057
I2
s(g4713
I42
g4714
Vinsert
p21058
I43
VSimpleType: Exception
p21059
tp21060
F0.5
s(g1856
I42
g1857
Vinsert
p21061
I42
VSimpleName: eval
p21062
tp21063
F0.25
s(g608
I42
g609
Vinsert
p21064
I36
VParenthesizedExpression
p21065
tp21066
I1
s(g717
I42
g718
Vinsert
p21067
I42
VSimpleName: lineAfter
p21068
tp21069
I1
s(g3814
I42
g3815
Vinsert
p21070
I39
VPrimitiveType: long
p21071
tp21072
F0.25
s(g9124
I42
g9125
Vinsert
p21073
I42
VSimpleName: left
p21074
tp21075
I1
s(g7113
I42
g7114
Vinsert
p21076
I7
VAssignment: =
p21077
tp21078
I1
s(g3121
I42
g3122
Vinsert
p21079
I43
VSimpleType: ITransientSet
p21080
tp21081
I2
s(g1626
I42
g1627
Vinsert
p21082
I11
VCastExpression
p21083
tp21084
I1
s(g3022
I42
g3023
Vinsert
p21085
I42
VSimpleName: types1
p21086
tp21087
I1
s(g1027
I42
g1028
Vinsert
p21088
I21
VExpressionStatement
p21089
tp21090
I5
s(g1122
I42
g1123
Vinsert
p21091
I27
VInfixExpression: <
p21092
tp21093
I1
s(g7010
I42
g7011
Vinsert
p21094
I60
VVariableDeclarationStatement
p21095
tp21096
I9
s(g1147
I42
g1148
Vinsert
p21097
I33
VNullLiteral
p21098
tp21099
F1.25
s(g2930
I42
g2931
Vinsert
p21100
I42
VSimpleName: iter
p21101
tp21102
I1
s(g11029
I42
g11030
Vinsert
p21103
I43
VSimpleType: IllegalArgumentException
p21104
tp21105
I1
s(g2743
I42
g2744
Vinsert
p21106
I41
VReturnStatement
p21107
tp21108
F0.5
s(g4436
I42
g4437
Vinsert
p21109
I42
VSimpleName: key
p21110
tp21111
F0.25
s(g11331
I42
g11332
Vinsert
p21112
I42
VSimpleName: ctors
p21113
tp21114
I2
s(g14233
I42
g14234
Vinsert
p21115
I42
VSimpleName: sig
p21116
tp21117
I1
s(g1286
I42
g1287
Vinsert
p21118
I42
VSimpleName: Util
p21119
tp21120
F1.25
s(g2122
I42
g2123
Vinsert
p21121
I8
VBlock
p21122
tp21123
F1.25
s(g2951
I42
g2952
Vinsert
p21124
I43
VSimpleType: CompilerException
p21125
tp21126
I2
s(g994
I42
g995
Vinsert
p21127
I44
VSingleVariableDeclaration
p21128
tp21129
F0.25
s(g1770
I42
g1771
Vinsert
p21130
I42
VSimpleName: present
p21131
tp21132
I1
s(g1432
I42
g1433
Vinsert
p21133
I43
VSimpleType: Exception
p21134
tp21135
I1
s(g9244
I42
g9245
Vinsert
p21136
I43
VSimpleType: java.io.ObjectOutputStream
p21137
tp21138
F0.5
s(g431
I42
g432
Vinsert
p21139
I27
VInfixExpression: +
p21140
tp21141
I1
s(g114
I42
g115
Vinsert
p21142
I42
VSimpleName: arg14
p21143
tp21144
F1.25
s(g1827
I42
g1828
Vinsert
p21145
I45
VStringLiteral: "StringBuilder"
p21146
tp21147
I1
s(g1202
I42
g1203
Vinsert
p21148
I42
VSimpleName: isLoop
p21149
tp21150
I2
s(g16987
I42
g16988
Vinsert
p21151
I42
VSimpleName: KEYWORDS
p21152
tp21153
I1
s(g1925
I42
g1926
Vinsert
p21154
I39
VPrimitiveType: boolean
p21155
tp21156
F0.25
s(g8130
I42
g8131
Vinsert
p21157
I42
VSimpleName: hasNext
p21158
tp21159
F0.75
s(g2310
I42
g2311
Vinsert
p21160
I41
VReturnStatement
p21161
tp21162
I1
s(g1331
I42
g1332
Vinsert
p21163
I27
VInfixExpression: !=
p21164
tp21165
I1
s(g3495
I42
g3496
Vinsert
p21166
I42
VSimpleName: TVal
p21167
tp21168
I1
s(g3875
I42
g3876
Vinsert
p21169
I34
VNumberLiteral: 1
p21170
tp21171
I2
s(g1386
I42
g1387
Vinsert
p21172
I60
VVariableDeclarationStatement
p21173
tp21174
I3
s(g21
I42
g22
Vinsert
p21175
I60
VVariableDeclarationStatement
p21176
tp21177
I2
s(g2135
I42
g2136
Vinsert
p21178
I42
VSimpleName: rest
p21179
tp21180
I1
s(g1104
I42
g1105
Vinsert
p21181
I36
VParenthesizedExpression
p21182
tp21183
I1
s(g4118
I42
g4119
Vinsert
p21184
I83
VModifier: synchronized
p21185
tp21186
F0.5
s(g2100
I42
g2101
Vinsert
p21187
I21
VExpressionStatement
p21188
tp21189
I1
s(g242
I42
g243
Vinsert
p21190
I8
VBlock
p21191
tp21192
I8
s(g2262
I42
g2263
Vinsert
p21193
I42
VSimpleName: oldv
p21194
tp21195
I1
s(g2397
I42
g2398
Vinsert
p21196
I42
VSimpleName: String
p21197
tp21198
F0.25
s(g2315
I42
g2316
Vinsert
p21199
I11
VCastExpression
p21200
tp21201
I1
s(g15731
I42
g15732
Vinsert
p21202
I42
VSimpleName: arglist
p21203
tp21204
I4
s(g368
I42
g369
Vinsert
p21205
I42
VSimpleName: notSameClassLabel
p21206
tp21207
I1
s(g114
I42
g115
Vinsert
p21208
I42
VSimpleName: arg4
p21209
tp21210
F0.25
s(g5824
I42
g5825
Vinsert
p21211
I42
VSimpleName: tld
p21212
tp21213
F3.25
s(g5893
I42
g5894
Vinsert
p21214
I43
VSimpleType: Long
p21215
tp21216
I3
s(g5206
I42
g5207
Vinsert
p21217
I42
VSimpleName: Integer
p21218
tp21219
I1
s(g4801
I42
g4802
Vinsert
p21220
I40
VQualifiedName: tld.dynamicBindings
p21221
tp21222
I1
s(g770
I42
g771
Vinsert
p21223
I43
VSimpleType: String
p21224
tp21225
I3
s(g3229
I42
g3230
Vinsert
p21226
I8
VBlock
p21227
tp21228
I1
s(g1147
I42
g1148
Vinsert
p21229
I42
VSimpleName: next
p21230
tp21231
F0.25
s(g3261
I42
g3262
Vinsert
p21232
I33
VNullLiteral
p21233
tp21234
I2
s(g1104
I42
g1105
Vinsert
p21235
I31
VMethodDeclaration
p21236
tp21237
F0.25
s(g4267
I42
g4268
Vinsert
p21238
I42
VSimpleName: NoViableAltException
p21239
tp21240
I1
s(g7491
I42
g7492
Vinsert
p21241
I42
VSimpleName: si
p21242
tp21243
I1
s(g2687
I42
g2688
Vinsert
p21244
I61
VWhileStatement
p21245
tp21246
I1
s(g8821
I42
g8822
Vinsert
p21247
I2
VArrayAccess
p21248
tp21249
I1
s(g832
I42
g833
Vinsert
p21250
I42
VSimpleName: t
p21251
tp21252
F0.75
s(g2896
I42
g2897
Vinsert
p21253
I45
VStringLiteral: "\u005c\u005cb"
p21254
tp21255
I2
s(g760
I42
g761
Vinsert
p21256
I11
VCastExpression
p21257
tp21258
I2
s(g8230
I42
g8231
Vinsert
p21259
I11
VCastExpression
p21260
tp21261
I1
s(g5214
I42
g5215
Vinsert
p21262
I22
VFieldAccess
p21263
tp21264
F0.25
s(g2631
I42
g2632
Vinsert
p21265
I39
VPrimitiveType: int
p21266
tp21267
F0.25
s(g9617
I42
g9618
Vinsert
p21268
I42
VSimpleName: Namespace
p21269
tp21270
F1.25
s(g3014
I42
g3015
Vinsert
p21271
I42
VSimpleName: Exception
p21272
tp21273
F0.25
s(g7395
I42
g7396
Vinsert
p21274
I62
VInstanceofExpression
p21275
tp21276
I2
s(g7970
I42
g7971
Vinsert
p21277
I42
VSimpleName: Map
p21278
tp21279
I6
s(g1900
I42
g1901
Vinsert
p21280
I42
VSimpleName: form
p21281
tp21282
I1
s(g71
I42
g72
Vinsert
p21283
I7
VAssignment: =
p21284
tp21285
I2
s(g144
I42
g145
Vinsert
p21286
I42
VSimpleName: Object
p21287
tp21288
F0.5
s(g1326
I42
g1327
Vinsert
p21289
I8
VBlock
p21290
tp21291
I1
s(g6229
I42
g6230
Vinsert
p21292
I39
VPrimitiveType: int
p21293
tp21294
I1
s(g4284
I42
g4285
Vinsert
p21295
I42
VSimpleName: errors
p21296
tp21297
F2.25
s(g3819
I42
g3820
Vinsert
p21298
I45
VStringLiteral: "Ref"
p21299
tp21300
I1
s(g1182
I42
g1183
Vinsert
p21301
I42
VSimpleName: lenfm
p21302
tp21303
I1
s(g4743
I42
g4744
Vinsert
p21304
I32
VMethodInvocation
p21305
tp21306
I2
s(g1920
I42
g1921
Vinsert
p21307
I62
VInstanceofExpression
p21308
tp21309
I1
s(g2835
I42
g2836
Vinsert
p21310
I42
VSimpleName: lock
p21311
tp21312
I1
s(g1755
I42
g1756
Vinsert
p21313
I40
VQualifiedName: Void.TYPE
p21314
tp21315
I1
s(g4343
I42
g4344
Vinsert
p21316
I42
VSimpleName: requireField
p21317
tp21318
F1.25
s(g1197
I42
g1198
Vinsert
p21319
I42
VSimpleName: seq
p21320
tp21321
F0.25
s(g4073
I42
g4074
Vinsert
p21322
I21
VExpressionStatement
p21323
tp21324
I6
s(g5606
I42
g5607
Vinsert
p21325
I13
VCharacterLiteral: '/'
p21326
tp21327
I1
s(g2631
I42
g2632
Vinsert
p21328
I8
VBlock
p21329
tp21330
I7
s(g3455
I42
g3456
Vinsert
p21331
I32
VMethodInvocation
p21332
tp21333
I3
s(g5122
I42
g5123
Vinsert
p21334
I33
VNullLiteral
p21335
tp21336
I9
s(g5122
I42
g5123
Vinsert
p21337
I42
VSimpleName: ISeq
p21338
tp21339
I6
s(g3619
I42
g3620
Vinsert
p21340
I40
VQualifiedName: Map.Entry
p21341
tp21342
I1
s(g3256
I42
g3257
Vinsert
p21343
I42
VSimpleName: opts
p21344
tp21345
F0.25
s(g2520
I42
g2521
Vinsert
p21346
I11
VCastExpression
p21347
tp21348
I2
s(g2814
I42
g2815
Vinsert
p21349
I42
VSimpleName: HostExpr
p21350
tp21351
I1
s(g2315
I42
g2316
Vinsert
p21352
I60
VVariableDeclarationStatement
p21353
tp21354
I1
s(g3522
I42
g3523
Vinsert
p21355
I42
VSimpleName: Keyword
p21356
tp21357
I1
s(g13608
I42
g13609
Vinsert
p21358
I42
VSimpleName: root
p21359
tp21360
F1.25
s(g1414
I42
g1415
Vinsert
p21361
I27
VInfixExpression: <=
p21362
tp21363
I1
s(g5394
I42
g5395
Vinsert
p21364
I32
VMethodInvocation
p21365
tp21366
I12
s(g5879
I42
g5880
Vinsert
p21367
I45
VStringLiteral: "unsynchronized-mutable"
p21368
tp21369
F0.25
s(g2435
I42
g2436
Vinsert
p21370
I25
VIfStatement
p21371
tp21372
I3
s(g5152
I42
g5153
Vinsert
p21373
I42
VSimpleName: r
p21374
tp21375
I1
s(g1892
I42
g1893
Vinsert
p21376
I34
VNumberLiteral: 3
p21377
tp21378
I2
s(g2273
I42
g2274
Vinsert
p21379
I39
VPrimitiveType: int
p21380
tp21381
I1
s(g9617
I42
g9618
Vinsert
p21382
I42
VSimpleName: namespaces
p21383
tp21384
I2
s(Vinsert
p21385
I42
VSimpleName: invoke
p21386
Vinsert
p21387
I42
VSimpleName: getFn
p21388
tp21389
I1
s(g1122
I42
g1123
Vinsert
p21390
I42
VSimpleName: nested
p21391
tp21392
I1
s(g937
I42
g938
Vinsert
p21393
I8
VBlock
p21394
tp21395
F5.25
s(g295
I42
g296
Vinsert
p21396
I42
VSimpleName: Object
p21397
tp21398
F0.25
s(g1495
I42
g1496
Vinsert
p21399
I42
VSimpleName: v
p21400
tp21401
I1
s(g2456
I42
g2457
Vinsert
p21402
I44
VSingleVariableDeclaration
p21403
tp21404
I1
s(g9600
I42
g9601
Vinsert
p21405
I27
VInfixExpression: &&
p21406
tp21407
I1
s(g305
I42
g306
Vinsert
p21408
I40
VQualifiedName: Opcodes.ACC_PUBLIC
p21409
tp21410
I1
s(g1202
I42
g1203
Vinsert
p21411
I45
VStringLiteral: "longCast"
p21412
tp21413
I1
s(g16987
I42
g16988
Vinsert
p21414
I42
VSimpleName: VARS
p21415
tp21416
I1
s(g1770
I42
g1771
Vinsert
p21417
I27
VInfixExpression: ==
p21418
tp21419
I1
s(g5802
I42
g5803
Vinsert
p21420
I42
VSimpleName: getLastModified
p21421
tp21422
I1
s(g6092
I42
g6093
Vinsert
p21423
I25
VIfStatement
p21424
tp21425
I1
s(g3121
I42
g3122
Vinsert
p21426
I16
VConditionalExpression
p21427
tp21428
I2
s(g968
I42
g969
Vinsert
p21429
I42
VSimpleName: equals
p21430
tp21431
I1
s(g4743
I42
g4744
Vinsert
p21432
I40
VQualifiedName: Type.VOID_TYPE
p21433
tp21434
I1
s(g4937
I42
g4938
Vinsert
p21435
I42
VSimpleName: Namespace
p21436
tp21437
I1
s(g3500
I42
g3501
Vinsert
p21438
I39
VPrimitiveType: double
p21439
tp21440
I1
s(g9012
I42
g9013
Vinsert
p21441
I42
VSimpleName: System
p21442
tp21443
I9
s(g2729
I42
g2730
Vinsert
p21444
I43
VSimpleType: IteratorIter
p21445
tp21446
I1
s(g7212
I42
g7213
Vinsert
p21447
I2
VArrayAccess
p21448
tp21449
I1
s(g532
I42
g533
Vinsert
p21450
I42
VSimpleName: IFn
p21451
tp21452
F0.25
s(g15731
I42
g15732
Vinsert
p21453
I42
VSimpleName: first
p21454
tp21455
I3
s(g8494
I42
g8495
Vinsert
p21456
I2
VArrayAccess
p21457
tp21458
I2
s(g2697
I42
g2698
Vinsert
p21459
I42
VSimpleName: superName
p21460
tp21461
F0.25
s(g2130
I42
g2131
Vinsert
p21462
I21
VExpressionStatement
p21463
tp21464
I1
s(g5050
I42
g5051
Vinsert
p21465
I42
VSimpleName: charLength
p21466
tp21467
I1
s(g3962
I42
g3963
Vinsert
p21468
I42
VSimpleName: val
p21469
tp21470
F0.25
s(g1722
I42
g1723
Vinsert
p21471
I42
VSimpleName: getModifiers
p21472
tp21473
I1
s(g676
I42
g677
Vinsert
p21474
I42
VSimpleName: subtractFrom
p21475
tp21476
F0.5
s(g999
I42
g1000
Vinsert
p21477
I40
VQualifiedName: lb.name
p21478
tp21479
I1
s(g704
I42
g705
Vinsert
p21480
I12
VCatchClause
p21481
tp21482
I1
s(g709
I42
g710
Vinsert
p21483
I42
VSimpleName: execute
p21484
tp21485
F1.25
s(g9218
I42
g9219
Vinsert
p21486
I27
VInfixExpression: ==
p21487
tp21488
F10.5
s(g6059
I42
g6060
Vinsert
p21489
I42
VSimpleName: coll
p21490
tp21491
F2.5
s(g3237
I42
g3238
Vinsert
p21492
I34
VNumberLiteral: 0
p21493
tp21494
I1
s(g3962
I42
g3963
Vinsert
p21495
I43
VSimpleType: TRef
p21496
tp21497
F0.25
s(g2578
I42
g2579
Vinsert
p21498
I45
VStringLiteral: "TYPE"
p21499
tp21500
I2
s(g1099
I42
g1100
Vinsert
p21501
I42
VSimpleName: readerOpts
p21502
tp21503
F0.25
s(g3389
I42
g3390
Vinsert
p21504
I45
VStringLiteral: "Reflection warning, %s:%d:%d - call to method %s can't be resolved (target class is unknown).\u005cn"
p21505
tp21506
I1
s(g66
I42
g67
Vinsert
p21507
I42
VSimpleName: MAX_POSITIONAL_ARITY
p21508
tp21509
I1
s(g2387
I42
g2388
Vinsert
p21510
I42
VSimpleName: Var
p21511
tp21512
I2
s(g1127
I42
g1128
Vinsert
p21513
I45
VStringLiteral: "Mismatched primitive return, expected: "
p21514
tp21515
I1
s(g10954
I42
g10955
Vinsert
p21516
I60
VVariableDeclarationStatement
p21517
tp21518
I3
s(g1732
I42
g1733
Vinsert
p21519
I39
VPrimitiveType: int
p21520
tp21521
F0.25
s(g847
I42
g848
Vinsert
p21522
I39
VPrimitiveType: int
p21523
tp21524
F0.5
s(g51
I42
g52
Vinsert
p21525
I62
VInstanceofExpression
p21526
tp21527
I1
s(g7649
I42
g7650
Vinsert
p21528
I42
VSimpleName: parameterType
p21529
tp21530
I2
s(g1510
I42
g1511
Vinsert
p21531
I61
VWhileStatement
p21532
tp21533
I1
s(g14233
I42
g14234
Vinsert
p21534
I43
VSimpleType: APersistentVector
p21535
tp21536
I2
s(g567
I42
g568
Vinsert
p21537
I60
VVariableDeclarationStatement
p21538
tp21539
I1
s(g7769
I42
g7770
Vinsert
p21540
I42
VSimpleName: valueOf
p21541
tp21542
F0.5
s(g978
I42
g979
Vinsert
p21543
I27
VInfixExpression: <=
p21544
tp21545
I1
s(g1063
I42
g1064
Vinsert
p21546
I27
VInfixExpression: !=
p21547
tp21548
I2
s(g5290
I42
g5291
Vinsert
p21549
I43
VSimpleType: Symbol
p21550
tp21551
F0.25
s(g6409
I42
g6410
Vinsert
p21552
I42
VSimpleName: i
p21553
tp21554
I5
s(g937
I42
g938
Vinsert
p21555
I83
VModifier: static
p21556
tp21557
F0.25
s(g1419
I42
g1420
Vinsert
p21558
I42
VSimpleName: count
p21559
tp21560
I4
s(g1616
I42
g1617
Vinsert
p21561
I42
VSimpleName: IMap
p21562
tp21563
I3
s(g9417
I42
g9418
Vinsert
p21564
I42
VSimpleName: ns
p21565
tp21566
I1
s(g2348
I42
g2349
Vinsert
p21567
I42
VSimpleName: BigInteger
p21568
tp21569
I4
s(g2371
I42
g2372
Vinsert
p21570
I14
VClassInstanceCreation
p21571
tp21572
I4
s(g1525
I42
g1526
Vinsert
p21573
I42
VSimpleName: startTime
p21574
tp21575
I2
s(g562
I42
g563
Vinsert
p21576
I33
VNullLiteral
p21577
tp21578
I2
s(g4979
I42
g4980
Vinsert
p21579
I39
VPrimitiveType: boolean
p21580
tp21581
F0.25
s(g7563
I42
g7564
Vinsert
p21582
I42
VSimpleName: v
p21583
tp21584
I1
s(g5206
I42
g5207
Vinsert
p21585
I27
VInfixExpression: >=
p21586
tp21587
I1
s(g6450
I42
g6451
Vinsert
p21588
I27
VInfixExpression: *
p21589
tp21590
I1
s(g4404
I42
g4405
Vinsert
p21591
I27
VInfixExpression: !=
p21592
tp21593
F2.25
s(g1573
I42
g1574
Vinsert
p21594
I41
VReturnStatement
p21595
tp21596
I1
s(g5960
I42
g5961
Vinsert
p21597
I25
VIfStatement
p21598
tp21599
I1
s(g2748
I42
g2749
Vinsert
p21600
I42
VSimpleName: Collection
p21601
tp21602
I2
s(g5402
I42
g5403
Vinsert
p21603
I60
VVariableDeclarationStatement
p21604
tp21605
I4
s(g2164
I42
g2165
Vinsert
p21606
I22
VFieldAccess
p21607
tp21608
F0.25
s(g6859
I42
g6860
Vinsert
p21609
I42
VSimpleName: e
p21610
tp21611
F1.25
s(g209
I42
g210
Vinsert
p21612
I36
VParenthesizedExpression
p21613
tp21614
I3
s(g17425
I42
g17426
Vinsert
p21615
I42
VSimpleName: next
p21616
tp21617
I1
s(g4726
I42
g4727
Vinsert
p21618
I42
VSimpleName: arglist
p21619
tp21620
I1
s(g1316
I42
g1317
Vinsert
p21621
I59
VVariableDeclarationFragment
p21622
tp21623
I1
s(g2803
I42
g2804
Vinsert
p21624
I27
VInfixExpression: -
p21625
tp21626
I1
s(g4826
I42
g4827
Vinsert
p21627
I42
VSimpleName: withMeta
p21628
tp21629
F0.25
s(g6369
I42
g6370
Vinsert
p21630
I42
VSimpleName: get
p21631
tp21632
I1
s(g1238
I42
g1239
Vinsert
p21633
I42
VSimpleName: Object
p21634
tp21635
F0.25
s(g10180
I42
g10181
Vinsert
p21636
I42
VSimpleName: load
p21637
tp21638
I1
s(g3918
I42
g3919
Vinsert
p21639
I42
VSimpleName: Class
p21640
tp21641
F0.25
s(g1391
I42
g1392
Vinsert
p21642
I42
VSimpleName: PersistentHashSet
p21643
tp21644
I2
s(g3212
I42
g3213
Vinsert
p21645
I33
VNullLiteral
p21646
tp21647
F6.25
s(g7563
I42
g7564
Vinsert
p21648
I60
VVariableDeclarationStatement
p21649
tp21650
I3
s(g5050
I42
g5051
Vinsert
p21651
I43
VSimpleType: ByteVector
p21652
tp21653
F0.25
s(g2830
I42
g2831
Vinsert
p21654
I27
VInfixExpression: >
p21655
tp21656
I1
s(g2376
I42
g2377
Vinsert
p21657
I42
VSimpleName: gen
p21658
tp21659
F1.25
s(g750
I42
g751
Vinsert
p21660
I42
VSimpleName: arg5
p21661
tp21662
F0.25
s(g937
I42
g938
Vinsert
p21663
I54
VTryStatement
p21664
tp21665
I2
s(g1326
I42
g1327
Vinsert
p21666
I39
VPrimitiveType: int
p21667
tp21668
I1
s(g2456
I42
g2457
Vinsert
p21669
I43
VSimpleType: Actor.Action
p21670
tp21671
I1
s(g4323
I42
g4324
Vinsert
p21672
I66
VTextElement: paths may be provided in any order, and be intermixed as necessary.
p21673
tp21674
F0.25
s(g1094
I42
g1095
Vinsert
p21675
I42
VSimpleName: Category
p21676
tp21677
F0.25
s(g3849
I42
g3850
Vinsert
p21678
I42
VSimpleName: IllegalAccessException
p21679
tp21680
I1
s(g955
I42
g956
Vinsert
p21681
I27
VInfixExpression: !=
p21682
tp21683
I3
s(g542
I42
g543
Vinsert
p21684
I34
VNumberLiteral: 1
p21685
tp21686
I1
s(g1228
I42
g1229
Vinsert
p21687
I32
VMethodInvocation
p21688
tp21689
I1
s(g5606
I42
g5607
Vinsert
p21690
I42
VSimpleName: booleanCast
p21691
tp21692
I2
s(g4891
I42
g4892
Vinsert
p21693
I40
VQualifiedName: parent.key
p21694
tp21695
I2
s(g799
I42
g800
Vinsert
p21696
I38
VPrefixExpression: !
p21697
tp21698
I1
s(g1765
I42
g1766
Vinsert
p21699
I42
VSimpleName: Counted
p21700
tp21701
I3
s(g1286
I42
g1287
Vinsert
p21702
I42
VSimpleName: hash
p21703
tp21704
F2.75
s(g4248
I42
g4249
Vinsert
p21705
I44
VSingleVariableDeclaration
p21706
tp21707
F0.5
s(g842
I42
g843
Vinsert
p21708
I42
VSimpleName: arg10
p21709
tp21710
I2
s(g2262
I42
g2263
Vinsert
p21711
I8
VBlock
p21712
tp21713
F41.25
s(g1368
I42
g1369
Vinsert
p21714
I42
VSimpleName: Object
p21715
tp21716
F0.75
s(g348
I42
g349
Vinsert
p21717
I42
VSimpleName: ISeq
p21718
tp21719
I1
s(g1727
I42
g1728
Vinsert
p21720
I40
VQualifiedName: k.k.sym
p21721
tp21722
F0.25
s(g1941
I42
g1942
Vinsert
p21723
I7
VAssignment: =
p21724
tp21725
I1
s(g2922
I42
g2923
Vinsert
p21726
I39
VPrimitiveType: int
p21727
tp21728
I1
s(g686
I42
g687
Vinsert
p21729
I61
VWhileStatement
p21730
tp21731
I3
s(g11140
I42
g11141
Vinsert
p21732
I44
VSingleVariableDeclaration
p21733
tp21734
F0.25
s(g1553
I42
g1554
Vinsert
p21735
I43
VSimpleType: ByteVector
p21736
tp21737
I1
s(g1368
I42
g1369
Vinsert
p21738
I43
VSimpleType: Object
p21739
tp21740
F0.75
s(g1727
I42
g1728
Vinsert
p21741
I42
VSimpleName: numParams
p21742
tp21743
F0.25
s(g7528
I42
g7529
Vinsert
p21744
I42
VSimpleName: pendingForms
p21745
tp21746
F1.25
s(g6300
I42
g6301
Vinsert
p21747
I42
VSimpleName: runnable
p21748
tp21749
F1.25
s(g3201
I42
g3202
Vinsert
p21750
I22
VFieldAccess
p21751
tp21752
F0.25
s(g4812
I42
g4813
Vinsert
p21753
I43
VSimpleType: Integer
p21754
tp21755
I7
s(g1162
I42
g1163
Vinsert
p21756
I36
VParenthesizedExpression
p21757
tp21758
I5
s(g4886
I42
g4887
Vinsert
p21759
I21
VExpressionStatement
p21760
tp21761
I1
s(g628
I42
g629
Vinsert
p21762
I42
VSimpleName: EMPTY
p21763
tp21764
F0.25
s(g1137
I42
g1138
Vinsert
p21765
I42
VSimpleName: ret
p21766
tp21767
I3
s(g6696
I42
g6697
Vinsert
p21768
I43
VSimpleType: Keyword
p21769
tp21770
I1
s(g4224
I42
g4225
Vinsert
p21771
I42
VSimpleName: isArray
p21772
tp21773
I1
s(g791
I42
g792
Vinsert
p21774
I45
VStringLiteral: "chars"
p21775
tp21776
I1
s(g5436
I42
g5437
Vinsert
p21777
I25
VIfStatement
p21778
tp21779
I1
s(g1515
I42
g1516
Vinsert
p21780
I42
VSimpleName: C
p21781
tp21782
F0.25
s(g6879
I42
g6880
Vinsert
p21783
I43
VSimpleType: Callable
p21784
tp21785
I1
s(g2221
I42
g2222
Vinsert
p21786
I9
VBooleanLiteral: false
p21787
tp21788
F0.25
s(g1755
I42
g1756
Vinsert
p21789
I42
VSimpleName: getReturnType
p21790
tp21791
I1
s(g10343
I42
g10344
Vinsert
p21792
I42
VSimpleName: emitArgsAsArray
p21793
tp21794
I1
s(g5634
I42
g5635
Vinsert
p21795
I42
VSimpleName: LineNumberingPushbackReader
p21796
tp21797
I2
s(g179
I42
g180
Vinsert
p21798
I42
VSimpleName: String
p21799
tp21800
I6
s(g1099
I42
g1100
Vinsert
p21801
I27
VInfixExpression: !=
p21802
tp21803
I1
s(g1510
I42
g1511
Vinsert
p21804
I8
VBlock
p21805
tp21806
I5
s(g1606
I42
g1607
Vinsert
p21807
I42
VSimpleName: target
p21808
tp21809
I1
s(g8409
I42
g8410
Vinsert
p21810
I42
VSimpleName: meta
p21811
tp21812
F1.25
s(g1228
I42
g1229
Vinsert
p21813
I42
VSimpleName: bv
p21814
tp21815
I1
s(g1278
I42
g1279
Vinsert
p21816
I32
VMethodInvocation
p21817
tp21818
I8
s(g725
I42
g726
Vinsert
p21819
I43
VSimpleType: ISeq
p21820
tp21821
I2
s(g804
I42
g805
Vinsert
p21822
I32
VMethodInvocation
p21823
tp21824
I1
s(g421
I42
g422
Vinsert
p21825
I85
VDimension
p21826
tp21827
I1
s(g955
I42
g956
Vinsert
p21828
I42
VSimpleName: matches
p21829
tp21830
I1
s(g66
I42
g67
Vinsert
p21831
I27
VInfixExpression: +
p21832
tp21833
I1
s(g2719
I42
g2720
Vinsert
p21834
I40
VQualifiedName: Double.TYPE
p21835
tp21836
I1
s(g955
I42
g956
Vinsert
p21837
I42
VSimpleName: BigDecimal
p21838
tp21839
I1
s(g2488
I42
g2489
Vinsert
p21840
I27
VInfixExpression: <
p21841
tp21842
I2
s(g6781
I42
g6782
Vinsert
p21843
I42
VSimpleName: context
p21844
tp21845
F0.25
s(g2461
I42
g2462
Vinsert
p21846
I42
VSimpleName: toString
p21847
tp21848
F0.5
s(g4932
I42
g4933
Vinsert
p21849
I32
VMethodInvocation
p21850
tp21851
I3
s(g2221
I42
g2222
Vinsert
p21852
I42
VSimpleName: f
p21853
tp21854
F0.25
s(g2060
I42
g2061
Vinsert
p21855
I62
VInstanceofExpression
p21856
tp21857
I1
s(g5111
I42
g5112
Vinsert
p21858
I45
VStringLiteral: "clojure.lang.Var var(String,String)"
p21859
tp21860
I1
s(g3689
I42
g3690
Vinsert
p21861
I32
VMethodInvocation
p21862
tp21863
F13.0
s(g3370
I42
g3371
Vinsert
p21864
I43
VSimpleType: ISeq
p21865
tp21866
F7.25
s(g7304
I42
g7305
Vinsert
p21867
I42
VSimpleName: ny
p21868
tp21869
F0.75
s(g2480
I42
g2481
Vinsert
p21870
I42
VSimpleName: y
p21871
tp21872
F2.0
s(g3400
I42
g3401
Vinsert
p21873
I42
VSimpleName: String
p21874
tp21875
I1
s(g3709
I42
g3710
Vinsert
p21876
I52
VThisExpression
p21877
tp21878
I1
s(g799
I42
g800
Vinsert
p21879
I8
VBlock
p21880
tp21881
I1
s(g978
I42
g979
Vinsert
p21882
I42
VSimpleName: coll
p21883
tp21884
I4
s(g4788
I42
g4789
Vinsert
p21885
I36
VParenthesizedExpression
p21886
tp21887
I3
s(g4452
I42
g4453
Vinsert
p21888
I83
VModifier: final
p21889
tp21890
I1
s(g1639
I42
g1640
Vinsert
p21891
I42
VSimpleName: nssym
p21892
tp21893
I2
s(g1167
I42
g1168
Vinsert
p21894
I42
VSimpleName: result
p21895
tp21896
I1
s(g8516
I42
g8517
Vinsert
p21897
I39
VPrimitiveType: void
p21898
tp21899
F0.25
s(Vinsert
p21900
I42
VSimpleName: getAndIncrement
p21901
Vinsert
p21902
I42
VSimpleName: an
p21903
tp21904
I1
s(g6561
I42
g6562
Vinsert
p21905
I42
VSimpleName: getDeclaringClass
p21906
tp21907
I1
s(g1765
I42
g1766
Vinsert
p21908
I41
VReturnStatement
p21909
tp21910
F12.75
s(g1515
I42
g1516
Vinsert
p21911
I42
VSimpleName: fn
p21912
tp21913
F0.25
s(g13264
I42
g13265
Vinsert
p21914
I42
VSimpleName: runtimeException
p21915
tp21916
F3.75
s(g2169
I42
g2170
Vinsert
p21917
I40
VQualifiedName: l.status
p21918
tp21919
I2
s(g1535
I42
g1536
Vinsert
p21920
I22
VFieldAccess
p21921
tp21922
F0.25
s(g924
I42
g925
Vinsert
p21923
I43
VSimpleType: Num
p21924
tp21925
F2.0
s(g1563
I42
g1564
Vinsert
p21926
I43
VSimpleType: Exception
p21927
tp21928
F0.25
s(g978
I42
g979
Vinsert
p21929
I38
VPrefixExpression: !
p21930
tp21931
I1
s(g31
I42
g32
Vinsert
p21932
I11
VCastExpression
p21933
tp21934
I2
s(g3797
I42
g3798
Vinsert
p21935
I42
VSimpleName: uncheckedMath
p21936
tp21937
I2
s(g1634
I42
g1635
Vinsert
p21938
I43
VSimpleType: ConstantExpr
p21939
tp21940
I2
s(g6300
I42
g6301
Vinsert
p21941
I42
VSimpleName: Thread
p21942
tp21943
I2
s(g2037
I42
g2038
Vinsert
p21944
I59
VVariableDeclarationFragment
p21945
tp21946
I5
s(g515
I42
g516
Vinsert
p21947
I43
VSimpleType: ISeq
p21948
tp21949
F10.25
s(g1055
I42
g1056
Vinsert
p21950
I27
VInfixExpression: !=
p21951
tp21952
I1
s(g898
I42
g899
Vinsert
p21953
I42
VSimpleName: locks
p21954
tp21955
I2
s(g7395
I42
g7396
Vinsert
p21956
I27
VInfixExpression: &&
p21957
tp21958
I3
s(g1553
I42
g1554
Vinsert
p21959
I32
VMethodInvocation
p21960
tp21961
I3
s(g3156
I42
g3157
Vinsert
p21962
I42
VSimpleName: Object
p21963
tp21964
F0.25
s(g1563
I42
g1564
Vinsert
p21965
I8
VBlock
p21966
tp21967
I2
s(g2461
I42
g2462
Vinsert
p21968
I27
VInfixExpression: +
p21969
tp21970
I4
s(g7669
I42
g7670
Vinsert
p21971
I42
VSimpleName: prefix
p21972
tp21973
F0.25
s(g1702
I42
g1703
Vinsert
p21974
I60
VVariableDeclarationStatement
p21975
tp21976
I1
s(g7395
I42
g7396
Vinsert
p21977
I42
VSimpleName: thenExpr
p21978
tp21979
I2
s(g1616
I42
g1617
Vinsert
p21980
I25
VIfStatement
p21981
tp21982
I6
s(g3849
I42
g3850
Vinsert
p21983
I54
VTryStatement
p21984
tp21985
I1
s(Vinsert
p21986
I42
VSimpleName: count
p21987
Vinsert
p21988
I42
VSimpleName: Character
p21989
tp21990
I1
s(g8273
I42
g8274
Vinsert
p21991
I42
VSimpleName: _CT_MODULE
p21992
tp21993
I1
s(g2909
I42
g2910
Vinsert
p21994
I42
VSimpleName: c
p21995
tp21996
I2
s(g6300
I42
g6301
Vinsert
p21997
I60
VVariableDeclarationStatement
p21998
tp21999
I1
s(g174
I42
g175
Vinsert
p22000
I33
VNullLiteral
p22001
tp22002
I1
s(g5206
I42
g5207
Vinsert
p22003
I42
VSimpleName: Exception
p22004
tp22005
I1
s(g3201
I42
g3202
Vinsert
p22006
I42
VSimpleName: isArg
p22007
tp22008
F0.75
s(g267
I42
g268
Vinsert
p22009
I42
VSimpleName: Numbers
p22010
tp22011
F4.0
s(g2542
I42
g2543
Vinsert
p22012
I21
VExpressionStatement
p22013
tp22014
I3
s(g3325
I42
g3326
Vinsert
p22015
I36
VParenthesizedExpression
p22016
tp22017
I1
s(g8545
I42
g8546
Vinsert
p22018
I40
VQualifiedName: tstamp.status
p22019
tp22020
F0.25
s(g5072
I42
g5073
Vinsert
p22021
I43
VSimpleType: RuntimeException
p22022
tp22023
F0.25
s(g3619
I42
g3620
Vinsert
p22024
I42
VSimpleName: sets
p22025
tp22026
I1
s(g1802
I42
g1803
Vinsert
p22027
I83
VModifier: public
p22028
tp22029
F0.25
s(g3709
I42
g3710
Vinsert
p22030
I40
VQualifiedName: s.ns
p22031
tp22032
I1
s(g3100
I42
g3101
Vinsert
p22033
I43
VSimpleType: IPersistentMap
p22034
tp22035
F0.25
s(g1781
I42
g1782
Vinsert
p22036
I7
VAssignment: =
p22037
tp22038
F5.25
s(g15027
I42
g15028
Vinsert
p22039
I43
VSimpleType: Keyword
p22040
tp22041
I2
s(g2586
I42
g2587
Vinsert
p22042
I42
VSimpleName: len
p22043
tp22044
I1
s(g1644
I42
g1645
Vinsert
p22045
I40
VQualifiedName: RT.CURRENT_NS_SYM
p22046
tp22047
I2
s(g1866
I42
g1867
Vinsert
p22048
I7
VAssignment: =
p22049
tp22050
I2
s(g5402
I42
g5403
Vinsert
p22051
I36
VParenthesizedExpression
p22052
tp22053
I1
s(g2169
I42
g2170
Vinsert
p22054
I8
VBlock
p22055
tp22056
I1
s(g2278
I42
g2279
Vinsert
p22057
I59
VVariableDeclarationFragment
p22058
tp22059
I1
s(g2068
I42
g2069
Vinsert
p22060
I42
VSimpleName: aclone
p22061
tp22062
F0.5
s(g1122
I42
g1123
Vinsert
p22063
I39
VPrimitiveType: int
p22064
tp22065
F1.25
s(g1520
I42
g1521
Vinsert
p22066
I45
VStringLiteral: "Unexpected param type"
p22067
tp22068
F0.25
s(g4295
I42
g4296
Vinsert
p22069
I42
VSimpleName: Type
p22070
tp22071
F0.25
s(g2456
I42
g2457
Vinsert
p22072
I33
VNullLiteral
p22073
tp22074
F0.5
s(g4073
I42
g4074
Vinsert
p22075
I42
VSimpleName: sym
p22076
tp22077
I1
s(g1094
I42
g1095
Vinsert
p22078
I8
VBlock
p22079
tp22080
I7
s(g827
I42
g828
Vinsert
p22081
I7
VAssignment: =
p22082
tp22083
I1
s(g1722
I42
g1723
Vinsert
p22084
I42
VSimpleName: Class
p22085
tp22086
I1
s(g5325
I42
g5326
Vinsert
p22087
I27
VInfixExpression: ||
p22088
tp22089
I1
s(g16987
I42
g16988
Vinsert
p22090
I32
VMethodInvocation
p22091
tp22092
I4
s(g2042
I42
g2043
Vinsert
p22093
I42
VSimpleName: arg0
p22094
tp22095
I3
s(g3180
I42
g3181
Vinsert
p22096
I42
VSimpleName: readPoint
p22097
tp22098
I1
s(g1573
I42
g1574
Vinsert
p22099
I42
VSimpleName: set
p22100
tp22101
F0.25
s(g4171
I42
g4172
Vinsert
p22102
I40
VQualifiedName: ref.lock
p22103
tp22104
I2
s(g593
I42
g594
Vinsert
p22105
I42
VSimpleName: name
p22106
tp22107
F0.25
s(g1822
I42
g1823
Vinsert
p22108
I32
VMethodInvocation
p22109
tp22110
F4.25
s(g3156
I42
g3157
Vinsert
p22111
I43
VSimpleType: PersistentArray
p22112
tp22113
I1
s(g5576
I42
g5577
Vinsert
p22114
I42
VSimpleName: ns
p22115
tp22116
I1
s(g1027
I42
g1028
Vinsert
p22117
I8
VBlock
p22118
tp22119
I3
s(g11
I42
g12
Vinsert
p22120
I7
VAssignment: =
p22121
tp22122
I2
s(g2052
I42
g2053
Vinsert
p22123
I42
VSimpleName: dvals
p22124
tp22125
I1
s(g2520
I42
g2521
Vinsert
p22126
I42
VSimpleName: o
p22127
tp22128
I2
s(g1525
I42
g1526
Vinsert
p22129
I42
VSimpleName: System
p22130
tp22131
I5
s(g1827
I42
g1828
Vinsert
p22132
I45
VStringLiteral: "Thread"
p22133
tp22134
I1
s(g2130
I42
g2131
Vinsert
p22135
I42
VSimpleName: Util
p22136
tp22137
I3
s(g1014
I42
g1015
Vinsert
p22138
I32
VMethodInvocation
p22139
tp22140
I1
s(g2169
I42
g2170
Vinsert
p22141
I27
VInfixExpression: &
p22142
tp22143
I1
s(g3517
I42
g3518
Vinsert
p22144
I22
VFieldAccess
p22145
tp22146
F0.25
s(g1223
I42
g1224
Vinsert
p22147
I40
VQualifiedName: Map.Entry
p22148
tp22149
I6
s(g6369
I42
g6370
Vinsert
p22150
I42
VSimpleName: form
p22151
tp22152
I1
s(g154
I42
g155
Vinsert
p22153
I42
VSimpleName: w
p22154
tp22155
I12
s(g2542
I42
g2543
Vinsert
p22156
I43
VSimpleType: String
p22157
tp22158
I1
s(g4905
I42
g4906
Vinsert
p22159
I31
VMethodDeclaration
p22160
tp22161
F0.75
s(g3833
I42
g3834
Vinsert
p22162
I11
VCastExpression
p22163
tp22164
I4
s(g1409
I42
g1410
Vinsert
p22165
I21
VExpressionStatement
p22166
tp22167
F1.25
s(g4557
I42
g4558
Vinsert
p22168
I42
VSimpleName: sname
p22169
tp22170
I1
s(g1177
I42
g1178
Vinsert
p22171
I27
VInfixExpression: /
p22172
tp22173
I1
s(g3135
I42
g3136
Vinsert
p22174
I57
VTypeLiteral
p22175
tp22176
I1
s(g2573
I42
g2574
Vinsert
p22177
I42
VSimpleName: APPLY
p22178
tp22179
I1
s(g1248
I42
g1249
Vinsert
p22180
I8
VBlock
p22181
tp22182
I1
s(g1373
I42
g1374
Vinsert
p22183
I42
VSimpleName: sourcePath
p22184
tp22185
I1
s(g9218
I42
g9219
Vinsert
p22186
I32
VMethodInvocation
p22187
tp22188
F42.75
s(g5982
I42
g5983
Vinsert
p22189
I22
VFieldAccess
p22190
tp22191
I2
s(g4004
I42
g4005
Vinsert
p22192
I51
VSynchronizedStatement
p22193
tp22194
I1
s(g4979
I42
g4980
Vinsert
p22195
I42
VSimpleName: ascending
p22196
tp22197
F0.25
s(g4620
I42
g4621
Vinsert
p22198
I42
VSimpleName: Ratio
p22199
tp22200
I1
s(g3295
I42
g3296
Vinsert
p22201
I43
VSimpleType: String
p22202
tp22203
F0.25
s(g11068
I42
g11069
Vinsert
p22204
I42
VSimpleName: pendingForms
p22205
tp22206
I4
s(g593
I42
g594
Vinsert
p22207
I43
VSimpleType: URL
p22208
tp22209
I1
s(g5111
I42
g5112
Vinsert
p22210
I32
VMethodInvocation
p22211
tp22212
I3
s(g1707
I42
g1708
Vinsert
p22213
I83
VModifier: public
p22214
tp22215
F0.25
s(g4303
I42
g4304
Vinsert
p22216
I43
VSimpleType: IOException
p22217
tp22218
F0.25
s(g6229
I42
g6230
Vinsert
p22219
I42
VSimpleName: Exception
p22220
tp22221
F0.25
s(g1905
I42
g1906
Vinsert
p22222
I42
VSimpleName: field
p22223
tp22224
F2.25
s(g552
I42
g553
Vinsert
p22225
I42
VSimpleName: name
p22226
tp22227
I2
s(g5147
I42
g5148
Vinsert
p22228
I42
VSimpleName: coll
p22229
tp22230
I2
s(g3495
I42
g3496
Vinsert
p22231
I43
VSimpleType: AtomicReference
p22232
tp22233
I1
s(g96
I42
g97
Vinsert
p22234
I27
VInfixExpression: ||
p22235
tp22236
I1
s(g929
I42
g930
Vinsert
p22237
I25
VIfStatement
p22238
tp22239
I8
s(g5402
I42
g5403
Vinsert
p22240
I42
VSimpleName: hash
p22241
tp22242
F0.25
s(g1451
I42
g1452
Vinsert
p22243
I42
VSimpleName: form
p22244
tp22245
F0.5
s(g159
I42
g160
Vinsert
p22246
I32
VMethodInvocation
p22247
tp22248
I1
s(g2790
I42
g2791
Vinsert
p22249
I42
VSimpleName: bs
p22250
tp22251
I3
s(g3400
I42
g3401
Vinsert
p22252
I42
VSimpleName: get
p22253
tp22254
I1
s(g26
I42
g27
Vinsert
p22255
I43
VSimpleType: AFn
p22256
tp22257
I1
s(g3022
I42
g3023
Vinsert
p22258
I42
VSimpleName: lhs
p22259
tp22260
I2
s(g1037
I42
g1038
Vinsert
p22261
I42
VSimpleName: ACC_STATIC
p22262
tp22263
I1
s(g3676
I42
g3677
Vinsert
p22264
I21
VExpressionStatement
p22265
tp22266
I10
s(g857
I42
g858
Vinsert
p22267
I8
VBlock
p22268
tp22269
F14.25
s(g3455
I42
g3456
Vinsert
p22270
I21
VExpressionStatement
p22271
tp22272
I3
s(g2122
I42
g2123
Vinsert
p22273
I42
VSimpleName: Symbol
p22274
tp22275
F0.5
s(g6174
I42
g6175
Vinsert
p22276
I43
VSimpleType: GeneratorAdapter
p22277
tp22278
F0.75
s(g3180
I42
g3181
Vinsert
p22279
I40
VQualifiedName: ver.prior
p22280
tp22281
I1
s(g2231
I42
g2232
Vinsert
p22282
I27
VInfixExpression: >
p22283
tp22284
I1
s(g101
I42
g102
Vinsert
p22285
I45
VStringLiteral: "*print-readably*"
p22286
tp22287
F0.25
s(g8494
I42
g8495
Vinsert
p22288
I7
VAssignment: =
p22289
tp22290
I1
s(g1316
I42
g1317
Vinsert
p22291
I32
VMethodInvocation
p22292
tp22293
I3
s(g451
I42
g452
Vinsert
p22294
I42
VSimpleName: String
p22295
tp22296
F0.25
s(g6229
I42
g6230
Vinsert
p22297
I42
VSimpleName: argexprs
p22298
tp22299
F0.25
s(g1760
I42
g1761
Vinsert
p22300
I40
VQualifiedName: lb.name
p22301
tp22302
F0.25
s(g2867
I42
g2868
Vinsert
p22303
I42
VSimpleName: find
p22304
tp22305
I1
s(g8643
I42
g8644
Vinsert
p22306
I42
VSimpleName: ARETURN
p22307
tp22308
I1
s(g2509
I42
g2510
Vinsert
p22309
I27
VInfixExpression: <
p22310
tp22311
I1
s(g3087
I42
g3088
Vinsert
p22312
I43
VSimpleType: IllegalArgumentException
p22313
tp22314
I2
s(g2273
I42
g2274
Vinsert
p22315
I59
VVariableDeclarationFragment
p22316
tp22317
I2
s(g883
I42
g884
Vinsert
p22318
I42
VSimpleName: visitInsn
p22319
tp22320
I1
s(g2509
I42
g2510
Vinsert
p22321
I37
VPostfixExpression: ++
p22322
tp22323
I3
s(g2310
I42
g2311
Vinsert
p22324
I42
VSimpleName: combine
p22325
tp22326
F0.25
s(g4059
I42
g4060
Vinsert
p22327
I32
VMethodInvocation
p22328
tp22329
F1.25
s(g214
I42
g215
Vinsert
p22330
I43
VSimpleType: String
p22331
tp22332
I1
s(g2392
I42
g2393
Vinsert
p22333
I42
VSimpleName: thunkType
p22334
tp22335
I1
s(g1009
I42
g1010
Vinsert
p22336
I42
VSimpleName: Resolver
p22337
tp22338
I2
s(g809
I42
g810
Vinsert
p22339
I42
VSimpleName: dot
p22340
tp22341
I2
s(g5759
I42
g5760
Vinsert
p22342
I32
VMethodInvocation
p22343
tp22344
I5
s(g19356
I42
g19357
Vinsert
p22345
I45
VStringLiteral: "arglists"
p22346
tp22347
I1
s(g2169
I42
g2170
Vinsert
p22348
I42
VSimpleName: VISITED2
p22349
tp22350
I1
s(g542
I42
g543
Vinsert
p22351
I42
VSimpleName: mv
p22352
tp22353
I1
s(g5380
I42
g5381
Vinsert
p22354
I42
VSimpleName: compile
p22355
tp22356
I1
s(g16680
I42
g16681
Vinsert
p22357
I8
VBlock
p22358
tp22359
I1
s(g1732
I42
g1733
Vinsert
p22360
I27
VInfixExpression: &&
p22361
tp22362
F0.25
s(g3156
I42
g3157
Vinsert
p22363
I42
VSimpleName: getSetArray
p22364
tp22365
I1
s(g11747
I42
g11748
Vinsert
p22366
I43
VSimpleType: Object
p22367
tp22368
F2.25
s(g1316
I42
g1317
Vinsert
p22369
I36
VParenthesizedExpression
p22370
tp22371
I4
s(g2909
I42
g2910
Vinsert
p22372
I34
VNumberLiteral: 0
p22373
tp22374
I2
s(g6491
I42
g6492
Vinsert
p22375
I40
VQualifiedName: Map.Entry
p22376
tp22377
I2
s(g11140
I42
g11141
Vinsert
p22378
I42
VSimpleName: lastDot
p22379
tp22380
I1
s(g1331
I42
g1332
Vinsert
p22381
I42
VSimpleName: i
p22382
tp22383
I4
s(Vinsert
p22384
I42
VSimpleName: invoke
p22385
Vinsert
p22386
I42
VSimpleName: kvreduce
p22387
tp22388
F0.25
s(g676
I42
g677
Vinsert
p22389
I42
VSimpleName: val
p22390
tp22391
F0.5
s(g1172
I42
g1173
Vinsert
p22392
I59
VVariableDeclarationFragment
p22393
tp22394
F32.25
s(g2711
I42
g2712
Vinsert
p22395
I43
VSimpleType: Namespace
p22396
tp22397
I1
s(g305
I42
g306
Vinsert
p22398
I27
VInfixExpression: &
p22399
tp22400
I1
s(g5122
I42
g5123
Vinsert
p22401
I42
VSimpleName: seq
p22402
tp22403
I7
s(g557
I42
g558
Vinsert
p22404
I42
VSimpleName: createArrayMap
p22405
tp22406
I1
s(g2135
I42
g2136
Vinsert
p22407
I42
VSimpleName: b
p22408
tp22409
I4
s(g4557
I42
g4558
Vinsert
p22410
I32
VMethodInvocation
p22411
tp22412
I5
s(g4059
I42
g4060
Vinsert
p22413
I42
VSimpleName: array
p22414
tp22415
F0.75
s(g1792
I42
g1793
Vinsert
p22416
I42
VSimpleName: Short
p22417
tp22418
I1
s(g3775
I42
g3776
Vinsert
p22419
I43
VSimpleType: Object
p22420
tp22421
F0.25
s(g1273
I42
g1274
Vinsert
p22422
I43
VSimpleType: LazySeq
p22423
tp22424
I2
s(g1117
I42
g1118
Vinsert
p22425
I42
VSimpleName: getClass
p22426
tp22427
F0.5
s(g2100
I42
g2101
Vinsert
p22428
I61
VWhileStatement
p22429
tp22430
I1
s(g209
I42
g210
Vinsert
p22431
I53
VThrowStatement
p22432
tp22433
I5
s(g699
I42
g700
Vinsert
p22434
I34
VNumberLiteral: 0
p22435
tp22436
I1
s(g8602
I42
g8603
Vinsert
p22437
I42
VSimpleName: stringrdr
p22438
tp22439
I1
s(g18823
I42
g18824
Vinsert
p22440
I42
VSimpleName: ISequential
p22441
tp22442
I2
s(g1905
I42
g1906
Vinsert
p22443
I21
VExpressionStatement
p22444
tp22445
I4
s(g323
I42
g324
Vinsert
p22446
I42
VSimpleName: getType
p22447
tp22448
F0.5
s(g2205
I42
g2206
Vinsert
p22449
I43
VSimpleType: Exception
p22450
tp22451
F0.25
s(g2244
I42
g2245
Vinsert
p22452
I45
VStringLiteral: "Key already present"
p22453
tp22454
I1
s(g227
I42
g228
Vinsert
p22455
I43
VSimpleType: IPersistentSet
p22456
tp22457
I1
s(g4267
I42
g4268
Vinsert
p22458
I8
VBlock
p22459
tp22460
I2
s(g4323
I42
g4324
Vinsert
p22461
I25
VIfStatement
p22462
tp22463
I1
s(g3193
I42
g3194
Vinsert
p22464
I42
VSimpleName: pop
p22465
tp22466
F0.5
s(g557
I42
g558
Vinsert
p22467
I3
VArrayCreation
p22468
tp22469
I1
s(g3237
I42
g3238
Vinsert
p22470
I32
VMethodInvocation
p22471
tp22472
I3
s(g8576
I42
g8577
Vinsert
p22473
I7
VAssignment: =
p22474
tp22475
I1
s(g4694
I42
g4695
Vinsert
p22476
I42
VSimpleName: bitNot
p22477
tp22478
F0.25
s(g1055
I42
g1056
Vinsert
p22479
I42
VSimpleName: op
p22480
tp22481
I2
s(g1147
I42
g1148
Vinsert
p22482
I31
VMethodDeclaration
p22483
tp22484
F0.25
s(g2315
I42
g2316
Vinsert
p22485
I42
VSimpleName: Exception
p22486
tp22487
F0.25
s(g968
I42
g969
Vinsert
p22488
I38
VPrefixExpression: !
p22489
tp22490
I1
s(g3022
I42
g3023
Vinsert
p22491
I43
VSimpleType: Class
p22492
tp22493
I1
s(g8446
I42
g8447
Vinsert
p22494
I40
VQualifiedName: RT.ERR
p22495
tp22496
I1
s(g4190
I42
g4191
Vinsert
p22497
I27
VInfixExpression: !=
p22498
tp22499
I2
s(g8230
I42
g8231
Vinsert
p22500
I42
VSimpleName: rform
p22501
tp22502
I1
s(g857
I42
g858
Vinsert
p22503
I42
VSimpleName: s
p22504
tp22505
F2.25
s(g613
I42
g614
Vinsert
p22506
I42
VSimpleName: c
p22507
tp22508
I1
s(g9569
I42
g9570
Vinsert
p22509
I42
VSimpleName: newInstance
p22510
tp22511
I1
s(g2361
I42
g2362
Vinsert
p22512
I39
VPrimitiveType: int
p22513
tp22514
F8.75
s(g3923
I42
g3924
Vinsert
p22515
I25
VIfStatement
p22516
tp22517
I2
s(g532
I42
g533
Vinsert
p22518
I42
VSimpleName: f
p22519
tp22520
F0.25
s(g4110
I42
g4111
Vinsert
p22521
I42
VSimpleName: state
p22522
tp22523
I1
s(g1099
I42
g1100
Vinsert
p22524
I42
VSimpleName: sourceName
p22525
tp22526
F2.25
s(g4527
I42
g4528
Vinsert
p22527
I42
VSimpleName: floatValue
p22528
tp22529
F0.5
s(g2111
I42
g2112
Vinsert
p22530
I43
VSimpleType: java.lang.Number
p22531
tp22532
I1
s(g17799
I42
g17800
Vinsert
p22533
I42
VSimpleName: seq
p22534
tp22535
F3.75
s(g8130
I42
g8131
Vinsert
p22536
I31
VMethodDeclaration
p22537
tp22538
F0.75
s(g169
I42
g170
Vinsert
p22539
I42
VSimpleName: cw
p22540
tp22541
I2
s(g114
I42
g115
Vinsert
p22542
I42
VSimpleName: invoke
p22543
tp22544
F0.25
s(g3991
I42
g3992
Vinsert
p22545
I8
VBlock
p22546
tp22547
I6
s(g2073
I42
g2074
Vinsert
p22548
I42
VSimpleName: booleanValueMethod
p22549
tp22550
I1
s(g3033
I42
g3034
Vinsert
p22551
I42
VSimpleName: slash
p22552
tp22553
I1
s(g676
I42
g677
Vinsert
p22554
I43
VSimpleType: Num
p22555
tp22556
F1.0
s(g257
I42
g258
Vinsert
p22557
I1
VAnonymousClassDeclaration
p22558
tp22559
I1
s(g2376
I42
g2377
Vinsert
p22560
I40
VQualifiedName: C.STATEMENT
p22561
tp22562
I1
s(g5130
I42
g5131
Vinsert
p22563
I42
VSimpleName: List
p22564
tp22565
F1.25
s(Vinsert
p22566
I42
VSimpleName: first
p22567
Vinsert
p22568
I42
VSimpleName: ks
p22569
tp22570
I2
s(g2729
I42
g2730
Vinsert
p22571
I42
VSimpleName: Iterable
p22572
tp22573
I2
s(g2615
I42
g2616
Vinsert
p22574
I33
VNullLiteral
p22575
tp22576
I1
s(g641
I42
g642
Vinsert
p22577
I41
VReturnStatement
p22578
tp22579
I1
s(g10360
I42
g10361
Vinsert
p22580
I42
VSimpleName: arg3
p22581
tp22582
F5.5
s(g5879
I42
g5880
Vinsert
p22583
I42
VSimpleName: lb
p22584
tp22585
F0.25
s(g497
I42
g498
Vinsert
p22586
I42
VSimpleName: ConcurrentHashMap
p22587
tp22588
F0.25
s(g1639
I42
g1640
Vinsert
p22589
I14
VClassInstanceCreation
p22590
tp22591
I2
s(g5264
I42
g5265
Vinsert
p22592
I42
VSimpleName: String
p22593
tp22594
I1
s(g3754
I42
g3755
Vinsert
p22595
I32
VMethodInvocation
p22596
tp22597
I1
s(g9012
I42
g9013
Vinsert
p22598
I42
VSimpleName: Object
p22599
tp22600
I8
s(g1915
I42
g1916
Vinsert
p22601
I42
VSimpleName: newRoot
p22602
tp22603
I1
s(g1588
I42
g1589
Vinsert
p22604
I14
VClassInstanceCreation
p22605
tp22606
F3.25
s(g227
I42
g228
Vinsert
p22607
I42
VSimpleName: create
p22608
tp22609
F0.25
s(g179
I42
g180
Vinsert
p22610
I42
VSimpleName: v
p22611
tp22612
I2
s(g1634
I42
g1635
Vinsert
p22613
I42
VSimpleName: ConstantExpr
p22614
tp22615
I2
s(g8821
I42
g8822
Vinsert
p22616
I41
VReturnStatement
p22617
tp22618
I1
s(g204
I42
g205
Vinsert
p22619
I42
VSimpleName: impl
p22620
tp22621
F1.25
s(g3495
I42
g3496
Vinsert
p22622
I42
VSimpleName: AtomicReference
p22623
tp22624
I1
s(g36
I42
g37
Vinsert
p22625
I7
VAssignment: =
p22626
tp22627
F0.25
s(g144
I42
g145
Vinsert
p22628
I44
VSingleVariableDeclaration
p22629
tp22630
F0.5
s(g1781
I42
g1782
Vinsert
p22631
I34
VNumberLiteral: 31
p22632
tp22633
I1
s(g9320
I42
g9321
Vinsert
p22634
I25
VIfStatement
p22635
tp22636
I1
s(g2278
I42
g2279
Vinsert
p22637
I25
VIfStatement
p22638
tp22639
I3
s(g9600
I42
g9601
Vinsert
p22640
I42
VSimpleName: sym
p22641
tp22642
I1
s(g3311
I42
g3312
Vinsert
p22643
I42
VSimpleName: returnType
p22644
tp22645
I1
s(g4891
I42
g4892
Vinsert
p22646
I44
VSingleVariableDeclaration
p22647
tp22648
F0.5
s(g1233
I42
g1234
Vinsert
p22649
I42
VSimpleName: xprefs
p22650
tp22651
I1
s(g3261
I42
g3262
Vinsert
p22652
I27
VInfixExpression: &&
p22653
tp22654
I1
s(g1991
I42
g1992
Vinsert
p22655
I41
VReturnStatement
p22656
tp22657
I1
s(g7731
I42
g7732
Vinsert
p22658
I42
VSimpleName: val
p22659
tp22660
F3.5
s(g6941
I42
g6942
Vinsert
p22661
I42
VSimpleName: b
p22662
tp22663
I1
s(g1414
I42
g1415
Vinsert
p22664
I42
VSimpleName: PersistentArrayMap
p22665
tp22666
I1
s(g12554
I42
g12555
Vinsert
p22667
I43
VSimpleType: IllegalArgumentException
p22668
tp22669
I1
s(g2469
I42
g2470
Vinsert
p22670
I40
VQualifiedName: C.STATEMENT
p22671
tp22672
I1
s(g1797
I42
g1798
Vinsert
p22673
I42
VSimpleName: IPersistentCollection
p22674
tp22675
I2
s(g2422
I42
g2423
Vinsert
p22676
I42
VSimpleName: LocalBinding
p22677
tp22678
I4
s(g19626
I42
g19627
Vinsert
p22679
I7
VAssignment: =
p22680
tp22681
I1
s(g3986
I42
g3987
Vinsert
p22682
I9
VBooleanLiteral: true
p22683
tp22684
F2.25
s(g169
I42
g170
Vinsert
p22685
I42
VSimpleName: ClassWriter
p22686
tp22687
I1
s(g8821
I42
g8822
Vinsert
p22688
I42
VSimpleName: vals
p22689
tp22690
I1
s(g9965
I42
g9966
Vinsert
p22691
I41
VReturnStatement
p22692
tp22693
F1.25
s(g9264
I42
g9265
Vinsert
p22694
I42
VSimpleName: method
p22695
tp22696
I2
s(g837
I42
g838
Vinsert
p22697
I33
VNullLiteral
p22698
tp22699
F2.25
s(Vinsert
p22700
I42
VSimpleName: get
p22701
Vinsert
p22702
I42
VSimpleName: key
p22703
tp22704
I1
s(g2310
I42
g2311
Vinsert
p22705
I42
VSimpleName: FloatArrayOps
p22706
tp22707
F0.25
s(g1223
I42
g1224
Vinsert
p22708
I32
VMethodInvocation
p22709
tp22710
I4
s(g2010
I42
g2011
Vinsert
p22711
I42
VSimpleName: _CRT_OUT
p22712
tp22713
F0.5
s(g91
I42
g92
Vinsert
p22714
I27
VInfixExpression: ==
p22715
tp22716
I1
s(g1639
I42
g1640
Vinsert
p22717
I53
VThrowStatement
p22718
tp22719
I1
s(g2310
I42
g2311
Vinsert
p22720
I32
VMethodInvocation
p22721
tp22722
I1
s(g4399
I42
g4400
Vinsert
p22723
I42
VSimpleName: path
p22724
tp22725
I1
s(g8545
I42
g8546
Vinsert
p22726
I42
VSimpleName: tstamp
p22727
tp22728
F0.25
s(g2343
I42
g2344
Vinsert
p22729
I42
VSimpleName: arg1
p22730
tp22731
I1
s(g2687
I42
g2688
Vinsert
p22732
I42
VSimpleName: rform
p22733
tp22734
I2
s(g1331
I42
g1332
Vinsert
p22735
I59
VVariableDeclarationFragment
p22736
tp22737
I1
s(g2835
I42
g2836
Vinsert
p22738
I54
VTryStatement
p22739
tp22740
I1
s(g300
I42
g301
Vinsert
p22741
I42
VSimpleName: Symbol
p22742
tp22743
I1
s(g1424
I42
g1425
Vinsert
p22744
I33
VNullLiteral
p22745
tp22746
I1
s(g4604
I42
g4605
Vinsert
p22747
I39
VPrimitiveType: float
p22748
tp22749
I1
s(g8138
I42
g8139
Vinsert
p22750
I42
VSimpleName: v
p22751
tp22752
I4
s(g5634
I42
g5635
Vinsert
p22753
I59
VVariableDeclarationFragment
p22754
tp22755
I1
s(g4793
I42
g4794
Vinsert
p22756
I42
VSimpleName: RT
p22757
tp22758
I1
s(g5163
I42
g5164
Vinsert
p22759
I42
VSimpleName: SEQ
p22760
tp22761
F0.25
s(g2883
I42
g2884
Vinsert
p22762
I21
VExpressionStatement
p22763
tp22764
I1
s(g3918
I42
g3919
Vinsert
p22765
I43
VSimpleType: Class
p22766
tp22767
F0.25
s(g862
I42
g863
Vinsert
p22768
I36
VParenthesizedExpression
p22769
tp22770
I1
s(g2677
I42
g2678
Vinsert
p22771
I40
VQualifiedName: Integer.MAX_VALUE
p22772
tp22773
I1
s(g1760
I42
g1761
Vinsert
p22774
I43
VSimpleType: Label
p22775
tp22776
I1
s(g411
I42
g412
Vinsert
p22777
I8
VBlock
p22778
tp22779
I1
s(g1722
I42
g1723
Vinsert
p22780
I42
VSimpleName: isPublic
p22781
tp22782
I1
s(g2294
I42
g2295
Vinsert
p22783
I42
VSimpleName: Character
p22784
tp22785
I1
s(g735
I42
g736
Vinsert
p22786
I42
VSimpleName: quotedVals
p22787
tp22788
I1
s(g3092
I42
g3093
Vinsert
p22789
I42
VSimpleName: init
p22790
tp22791
F1.25
s(g11029
I42
g11030
Vinsert
p22792
I42
VSimpleName: IllegalArgumentException
p22793
tp22794
I1
s(g804
I42
g805
Vinsert
p22795
I33
VNullLiteral
p22796
tp22797
I1
s(g1977
I42
g1978
Vinsert
p22798
I21
VExpressionStatement
p22799
tp22800
F3.5
s(g1104
I42
g1105
Vinsert
p22801
I42
VSimpleName: setLineNumber
p22802
tp22803
F0.25
s(g1520
I42
g1521
Vinsert
p22804
I42
VSimpleName: paramType
p22805
tp22806
I1
s(g3476
I42
g3477
Vinsert
p22807
I40
VQualifiedName: BigInt.ZERO
p22808
tp22809
F0.25
s(g3999
I42
g4000
Vinsert
p22810
I42
VSimpleName: charAt
p22811
tp22812
I1
s(g2891
I42
g2892
Vinsert
p22813
I40
VQualifiedName: Integer.MIN_VALUE
p22814
tp22815
I1
s(g1291
I42
g1292
Vinsert
p22816
I32
VMethodInvocation
p22817
tp22818
I1
s(g1456
I42
g1457
Vinsert
p22819
I42
VSimpleName: IllegalArgumentException
p22820
tp22821
I1
s(g2257
I42
g2258
Vinsert
p22822
I42
VSimpleName: PathNode
p22823
tp22824
I1
s(g2573
I42
g2574
Vinsert
p22825
I43
VSimpleType: IPersistentSet
p22826
tp22827
I1
s(g7520
I42
g7521
Vinsert
p22828
I42
VSimpleName: args
p22829
tp22830
I1
s(g4399
I42
g4400
Vinsert
p22831
I42
VSimpleName: File
p22832
tp22833
I1
s(g300
I42
g301
Vinsert
p22834
I42
VSimpleName: n
p22835
tp22836
I1
s(g3121
I42
g3122
Vinsert
p22837
I42
VSimpleName: coll
p22838
tp22839
I4
s(g6941
I42
g6942
Vinsert
p22840
I59
VVariableDeclarationFragment
p22841
tp22842
I1
s(g6377
I42
g6378
Vinsert
p22843
I40
VQualifiedName: RT.ERR
p22844
tp22845
F0.25
s(g4059
I42
g4060
Vinsert
p22846
I44
VSingleVariableDeclaration
p22847
tp22848
F0.25
s(g16680
I42
g16681
Vinsert
p22849
I42
VSimpleName: impl
p22850
tp22851
I1
s(g704
I42
g705
Vinsert
p22852
I42
VSimpleName: Exception
p22853
tp22854
I1
s(g10180
I42
g10181
Vinsert
p22855
I43
VSimpleType: Exception
p22856
tp22857
F3.75
s(g237
I42
g238
Vinsert
p22858
I42
VSimpleName: o
p22859
tp22860
I2
s(g4612
I42
g4613
Vinsert
p22861
I43
VSimpleType: BigDecimal
p22862
tp22863
I1
s(g1817
I42
g1818
Vinsert
p22864
I83
VModifier: public
p22865
tp22866
F0.25
s(g81
I42
g82
Vinsert
p22867
I40
VQualifiedName: BigInteger.ZERO
p22868
tp22869
I1
s(g1451
I42
g1452
Vinsert
p22870
I62
VInstanceofExpression
p22871
tp22872
I1
s(g3237
I42
g3238
Vinsert
p22873
I27
VInfixExpression: <
p22874
tp22875
I1
s(g3290
I42
g3291
Vinsert
p22876
I25
VIfStatement
p22877
tp22878
I1
s(g3251
I42
g3252
Vinsert
p22879
I54
VTryStatement
p22880
tp22881
I1
s(Vinsert
p22882
I42
VSimpleName: setDynamic
p22883
Vinsert
p22884
I42
VSimpleName: setDynamic
p22885
tp22886
I7
s(g6806
I42
g6807
Vinsert
p22887
I61
VWhileStatement
p22888
tp22889
I2
s(g5916
I42
g5917
Vinsert
p22890
I43
VSimpleType: BigInteger
p22891
tp22892
I1
s(g8409
I42
g8410
Vinsert
p22893
I42
VSimpleName: withMeta
p22894
tp22895
F0.25
s(g10343
I42
g10344
Vinsert
p22896
I42
VSimpleName: GeneratorAdapter
p22897
tp22898
F0.25
s(g656
I42
g657
Vinsert
p22899
I7
VAssignment: =
p22900
tp22901
F0.25
s(g2353
I42
g2354
Vinsert
p22902
I42
VSimpleName: AMap
p22903
tp22904
I1
s(g1243
I42
g1244
Vinsert
p22905
I52
VThisExpression
p22906
tp22907
F0.25
s(g6234
I42
g6235
Vinsert
p22908
I42
VSimpleName: parms
p22909
tp22910
I1
s(g154
I42
g155
Vinsert
p22911
I42
VSimpleName: IllegalArgumentException
p22912
tp22913
F0.25
s(g2387
I42
g2388
Vinsert
p22914
I42
VSimpleName: v
p22915
tp22916
I2
s(g598
I42
g599
Vinsert
p22917
I42
VSimpleName: Symbol
p22918
tp22919
I2
s(g2310
I42
g2311
Vinsert
p22920
I43
VSimpleType: Ops
p22921
tp22922
F0.75
s(g1545
I42
g1546
Vinsert
p22923
I16
VConditionalExpression
p22924
tp22925
F2.25
s(g5214
I42
g5215
Vinsert
p22926
I25
VIfStatement
p22927
tp22928
I1
s(g6021
I42
g6022
Vinsert
p22929
I42
VSimpleName: foundExact
p22930
tp22931
I2
s(g1817
I42
g1818
Vinsert
p22932
I43
VSimpleType: Exception
p22933
tp22934
F0.25
s(g691
I42
g692
Vinsert
p22935
I42
VSimpleName: o
p22936
tp22937
I1
s(g1122
I42
g1123
Vinsert
p22938
I37
VPostfixExpression: ++
p22939
tp22940
I1
s(g686
I42
g687
Vinsert
p22941
I59
VVariableDeclarationFragment
p22942
tp22943
F4.25
s(g194
I42
g195
Vinsert
p22944
I42
VSimpleName: INode
p22945
tp22946
I3
s(g3188
I42
g3189
Vinsert
p22947
I42
VSimpleName: tcount
p22948
tp22949
I1
s(g10314
I42
g10315
Vinsert
p22950
I41
VReturnStatement
p22951
tp22952
I1
s(g2294
I42
g2295
Vinsert
p22953
I42
VSimpleName: s
p22954
tp22955
F0.25
s(g3549
I42
g3550
Vinsert
p22956
I42
VSimpleName: ids
p22957
tp22958
F1.25
s(g2623
I42
g2624
Vinsert
p22959
I42
VSimpleName: f
p22960
tp22961
F0.25
s(g6059
I42
g6060
Vinsert
p22962
I25
VIfStatement
p22963
tp22964
I3
s(g5664
I42
g5665
Vinsert
p22965
I59
VVariableDeclarationFragment
p22966
tp22967
I5
s(g3999
I42
g4000
Vinsert
p22968
I60
VVariableDeclarationStatement
p22969
tp22970
I1
s(g2711
I42
g2712
Vinsert
p22971
I42
VSimpleName: Namespace
p22972
tp22973
I2
s(g8821
I42
g8822
Vinsert
p22974
I14
VClassInstanceCreation
p22975
tp22976
I1
s(g717
I42
g718
Vinsert
p22977
I27
VInfixExpression: +
p22978
tp22979
I2
s(g1707
I42
g1708
Vinsert
p22980
I42
VSimpleName: inc
p22981
tp22982
F0.25
s(g4161
I42
g4162
Vinsert
p22983
I42
VSimpleName: getSize
p22984
tp22985
F0.25
s(g4663
I42
g4664
Vinsert
p22986
I32
VMethodInvocation
p22987
tp22988
I1
s(g4343
I42
g4344
Vinsert
p22989
I7
VAssignment: =
p22990
tp22991
F0.25
s(g2422
I42
g2423
Vinsert
p22992
I42
VSimpleName: MapEntry
p22993
tp22994
I3
s(g661
I42
g662
Vinsert
p22995
I43
VSimpleType: Symbol
p22996
tp22997
I3
s(g1243
I42
g1244
Vinsert
p22998
I44
VSingleVariableDeclaration
p22999
tp23000
F0.25
s(g4059
I42
g4060
Vinsert
p23001
I42
VSimpleName: Object
p23002
tp23003
F0.25
s(g4937
I42
g4938
Vinsert
p23004
I42
VSimpleName: findOrCreate
p23005
tp23006
I2
s(g623
I42
g624
Vinsert
p23007
I40
VQualifiedName: Float.TYPE
p23008
tp23009
I1
s(g3421
I42
g3422
Vinsert
p23010
I23
VFieldDeclaration
p23011
tp23012
I2
s(g4942
I42
g4943
Vinsert
p23013
I42
VSimpleName: BigInteger
p23014
tp23015
F0.25
s(g2186
I42
g2187
Vinsert
p23016
I42
VSimpleName: impl
p23017
tp23018
I1
s(g2353
I42
g2354
Vinsert
p23019
I65
VTagElement: @throws
p23020
tp23021
F0.25
s(g9218
I42
g9219
Vinsert
p23022
I34
VNumberLiteral: 1
p23023
tp23024
I8
s(g6726
I42
g6727
Vinsert
p23025
I27
VInfixExpression: !=
p23026
tp23027
I2
s(g3487
I42
g3488
Vinsert
p23028
I42
VSimpleName: Symbol
p23029
tp23030
I2
s(g3999
I42
g4000
Vinsert
p23031
I50
VSwitchStatement
p23032
tp23033
I1
s(g3487
I42
g3488
Vinsert
p23034
I14
VClassInstanceCreation
p23035
tp23036
I1
s(g411
I42
g412
Vinsert
p23037
I43
VSimpleType: Cons
p23038
tp23039
F0.25
s(g6203
I42
g6204
Vinsert
p23040
I39
VPrimitiveType: char
p23041
tp23042
I1
s(g2883
I42
g2884
Vinsert
p23043
I52
VThisExpression
p23044
tp23045
I2
s(g19495
I42
g19496
Vinsert
p23046
I42
VSimpleName: arg2
p23047
tp23048
F0.25
s(g2461
I42
g2462
Vinsert
p23049
I42
VSimpleName: getMessage
p23050
tp23051
I1
s(g267
I42
g268
Vinsert
p23052
I42
VSimpleName: BigInt
p23053
tp23054
I1
s(g1228
I42
g1229
Vinsert
p23055
I42
VSimpleName: v
p23056
tp23057
I1
s(g562
I42
g563
Vinsert
p23058
I43
VSimpleType: Number
p23059
tp23060
I3
s(g898
I42
g899
Vinsert
p23061
I70
VEnhancedForStatement
p23062
tp23063
I1
s(g8657
I42
g8658
Vinsert
p23064
I42
VSimpleName: size
p23065
tp23066
I1
s(g66
I42
g67
Vinsert
p23067
I42
VSimpleName: Exception
p23068
tp23069
I1
s(g7528
I42
g7529
Vinsert
p23070
I32
VMethodInvocation
p23071
tp23072
I1
s(g593
I42
g594
Vinsert
p23073
I42
VSimpleName: getParent
p23074
tp23075
I1
s(g2231
I42
g2232
Vinsert
p23076
I43
VSimpleType: Object
p23077
tp23078
I1
s(g46
I42
g47
Vinsert
p23079
I42
VSimpleName: deref
p23080
tp23081
F0.5
s(g12522
I42
g12523
Vinsert
p23082
I34
VNumberLiteral: 2
p23083
tp23084
I2
s(g154
I42
g155
Vinsert
p23085
I42
VSimpleName: x
p23086
tp23087
F5.25
s(g8463
I42
g8464
Vinsert
p23088
I43
VSimpleType: Symbol
p23089
tp23090
F3.75
s(g1936
I42
g1937
Vinsert
p23091
I23
VFieldDeclaration
p23092
tp23093
I1
s(g6505
I42
g6506
Vinsert
p23094
I42
VSimpleName: method
p23095
tp23096
I1
s(g5394
I42
g5395
Vinsert
p23097
I42
VSimpleName: Many
p23098
tp23099
F0.25
s(g13465
I42
g13466
Vinsert
p23100
I14
VClassInstanceCreation
p23101
tp23102
F0.25
s(g106
I42
g107
Vinsert
p23103
I42
VSimpleName: h
p23104
tp23105
I1
s(g3797
I42
g3798
Vinsert
p23106
I60
VVariableDeclarationStatement
p23107
tp23108
I3
s(g2867
I42
g2868
Vinsert
p23109
I42
VSimpleName: me
p23110
tp23111
I2
s(g6505
I42
g6506
Vinsert
p23112
I42
VSimpleName: getParameterTypes
p23113
tp23114
I1
s(g804
I42
g805
Vinsert
p23115
I42
VSimpleName: mm
p23116
tp23117
F0.25
s(g1278
I42
g1279
Vinsert
p23118
I58
VVariableDeclarationExpression
p23119
tp23120
I2
s(g7427
I42
g7428
Vinsert
p23121
I42
VSimpleName: name
p23122
tp23123
I1
s(g12420
I42
g12421
Vinsert
p23124
I42
VSimpleName: f
p23125
tp23126
I2
s(g8545
I42
g8546
Vinsert
p23127
I42
VSimpleName: newStatus
p23128
tp23129
F0.25
s(g4021
I42
g4022
Vinsert
p23130
I33
VNullLiteral
p23131
tp23132
I2
s(g5050
I42
g5051
Vinsert
p23133
I39
VPrimitiveType: int
p23134
tp23135
I3
s(g6704
I42
g6705
Vinsert
p23136
I43
VSimpleType: BindingInit
p23137
tp23138
I1
s(g5008
I42
g5009
Vinsert
p23139
I45
VStringLiteral: "unquote"
p23140
tp23141
F0.25
s(g929
I42
g930
Vinsert
p23142
I42
VSimpleName: valAt
p23143
tp23144
I2
s(g10954
I42
g10955
Vinsert
p23145
I42
VSimpleName: editable
p23146
tp23147
I2
s(g3681
I42
g3682
Vinsert
p23148
I27
VInfixExpression: &&
p23149
tp23150
I2
s(g7970
I42
g7971
Vinsert
p23151
I42
VSimpleName: m
p23152
tp23153
I4
s(g4979
I42
g4980
Vinsert
p23154
I43
VSimpleType: PersistentTreeMap
p23155
tp23156
I2
s(g4123
I42
g4124
Vinsert
p23157
I42
VSimpleName: bytecode
p23158
tp23159
F0.25
s(g3261
I42
g3262
Vinsert
p23160
I36
VParenthesizedExpression
p23161
tp23162
I2
s(g6021
I42
g6022
Vinsert
p23163
I27
VInfixExpression: ||
p23164
tp23165
I2
s(g7947
I42
g7948
Vinsert
p23166
I42
VSimpleName: n
p23167
tp23168
F2.25
s(g1172
I42
g1173
Vinsert
p23169
I60
VVariableDeclarationStatement
p23170
tp23171
I26
s(g2935
I42
g2936
Vinsert
p23172
I14
VClassInstanceCreation
p23173
tp23174
I1
s(g3416
I42
g3417
Vinsert
p23175
I42
VSimpleName: ClassLoader
p23176
tp23177
F0.25
s(g91
I42
g92
Vinsert
p23178
I32
VMethodInvocation
p23179
tp23180
F7.25
s(g1424
I42
g1425
Vinsert
p23181
I42
VSimpleName: isPublic
p23182
tp23183
I1
s(g2692
I42
g2693
Vinsert
p23184
I42
VSimpleName: e
p23185
tp23186
I1
s(g2480
I42
g2481
Vinsert
p23187
I36
VParenthesizedExpression
p23188
tp23189
I4
s(g10314
I42
g10315
Vinsert
p23190
I42
VSimpleName: Object
p23191
tp23192
F0.25
s(g4004
I42
g4005
Vinsert
p23193
I42
VSimpleName: val
p23194
tp23195
I5
s(g2542
I42
g2543
Vinsert
p23196
I7
VAssignment: =
p23197
tp23198
I3
s(g18966
I42
g18967
Vinsert
p23199
I40
VQualifiedName: arr.length
p23200
tp23201
I1
s(g106
I42
g107
Vinsert
p23202
I42
VSimpleName: obj
p23203
tp23204
I1
s(g4916
I42
g4917
Vinsert
p23205
I42
VSimpleName: multiplyBy
p23206
tp23207
I2
s(g8061
I42
g8062
Vinsert
p23208
I42
VSimpleName: t
p23209
tp23210
I6
s(g4073
I42
g4074
Vinsert
p23211
I42
VSimpleName: ns
p23212
tp23213
I1
s(g257
I42
g258
Vinsert
p23214
I42
VSimpleName: Entry
p23215
tp23216
I1
s(g10954
I42
g10955
Vinsert
p23217
I42
VSimpleName: ensureEditable
p23218
tp23219
I2
s(g8494
I42
g8495
Vinsert
p23220
I42
VSimpleName: invoke
p23221
tp23222
I1
s(g2835
I42
g2836
Vinsert
p23223
I42
VSimpleName: b
p23224
tp23225
I2
s(g2456
I42
g2457
Vinsert
p23226
I21
VExpressionStatement
p23227
tp23228
I1
s(Vinsert
p23229
I42
VSimpleName: next
p23230
Vinsert
p23231
I42
VSimpleName: init
p23232
tp23233
I1
s(g431
I42
g432
Vinsert
p23234
I42
VSimpleName: IllegalArgumentException
p23235
tp23236
I1
s(g4084
I42
g4085
Vinsert
p23237
I27
VInfixExpression: &&
p23238
tp23239
I5
s(g1540
I42
g1541
Vinsert
p23240
I42
VSimpleName: ret
p23241
tp23242
F0.25
s(g2623
I42
g2624
Vinsert
p23243
I41
VReturnStatement
p23244
tp23245
I1
s(g2353
I42
g2354
Vinsert
p23246
I66
VTextElement:  the value of the attr or nil if not found
p23247
tp23248
F0.25
s(g3290
I42
g3291
Vinsert
p23249
I45
VStringLiteral: "int hashCode()"
p23250
tp23251
F0.25
s(g3676
I42
g3677
Vinsert
p23252
I32
VMethodInvocation
p23253
tp23254
I6
s(g1223
I42
g1224
Vinsert
p23255
I41
VReturnStatement
p23256
tp23257
I3
s(g3175
I42
g3176
Vinsert
p23258
I21
VExpressionStatement
p23259
tp23260
I3
s(g6084
I42
g6085
Vinsert
p23261
I83
VModifier: static
p23262
tp23263
F0.25
s(g3290
I42
g3291
Vinsert
p23264
I44
VSingleVariableDeclaration
p23265
tp23266
F0.5
s(g1558
I42
g1559
Vinsert
p23267
I27
VInfixExpression: !=
p23268
tp23269
I2
s(g2366
I42
g2367
Vinsert
p23270
I43
VSimpleType: IPersistentMap
p23271
tp23272
I2
s(g6941
I42
g6942
Vinsert
p23273
I14
VClassInstanceCreation
p23274
tp23275
I1
s(g781
I42
g782
Vinsert
p23276
I36
VParenthesizedExpression
p23277
tp23278
I1
s(g4362
I42
g4363
Vinsert
p23279
I39
VPrimitiveType: int
p23280
tp23281
F0.25
s(g2631
I42
g2632
Vinsert
p23282
I60
VVariableDeclarationStatement
p23283
tp23284
I4
s(g3146
I42
g3147
Vinsert
p23285
I42
VSimpleName: Exception
p23286
tp23287
F0.25
s(g3495
I42
g3496
Vinsert
p23288
I42
VSimpleName: tvals
p23289
tp23290
I2
s(g2940
I42
g2941
Vinsert
p23291
I44
VSingleVariableDeclaration
p23292
tp23293
F0.25
s(g8643
I42
g8644
Vinsert
p23294
I42
VSimpleName: onMethodExit
p23295
tp23296
I1
s(g2528
I42
g2529
Vinsert
p23297
I42
VSimpleName: sizeOrSeq
p23298
tp23299
I2
s(g1339
I42
g1340
Vinsert
p23300
I54
VTryStatement
p23301
tp23302
I1
s(g3014
I42
g3015
Vinsert
p23303
I8
VBlock
p23304
tp23305
I1
s(g1530
I42
g1531
Vinsert
p23306
I42
VSimpleName: init
p23307
tp23308
I1
s(g1770
I42
g1771
Vinsert
p23309
I40
VQualifiedName: dvout.root
p23310
tp23311
I1
s(g1817
I42
g1818
Vinsert
p23312
I32
VMethodInvocation
p23313
tp23314
I2
s(g1419
I42
g1420
Vinsert
p23315
I27
VInfixExpression: >=
p23316
tp23317
I1
s(g888
I42
g889
Vinsert
p23318
I62
VInstanceofExpression
p23319
tp23320
I3
s(g164
I42
g165
Vinsert
p23321
I43
VSimpleType: TBox
p23322
tp23323
F0.25
s(g3880
I42
g3881
Vinsert
p23324
I36
VParenthesizedExpression
p23325
tp23326
I7
s(g2591
I42
g2592
Vinsert
p23327
I42
VSimpleName: UnsupportedOperationException
p23328
tp23329
I1
s(g129
I42
g130
Vinsert
p23330
I8
VBlock
p23331
tp23332
I5
s(g6092
I42
g6093
Vinsert
p23333
I42
VSimpleName: Object
p23334
tp23335
I1
s(g368
I42
g369
Vinsert
p23336
I42
VSimpleName: swap
p23337
tp23338
I1
s(g1588
I42
g1589
Vinsert
p23339
I42
VSimpleName: m
p23340
tp23341
I2
s(g8677
I42
g8678
Vinsert
p23342
I42
VSimpleName: arg13
p23343
tp23344
F0.25
s(g3549
I42
g3550
Vinsert
p23345
I83
VModifier: final
p23346
tp23347
F0.25
s(g21
I42
g22
Vinsert
p23348
I43
VSimpleType: Object
p23349
tp23350
F2.5
s(g5111
I42
g5112
Vinsert
p23351
I42
VSimpleName: push
p23352
tp23353
I1
s(g456
I42
g457
Vinsert
p23354
I32
VMethodInvocation
p23355
tp23356
I1
s(g257
I42
g258
Vinsert
p23357
I42
VSimpleName: persistentMap
p23358
tp23359
I1
s(g1683
I42
g1684
Vinsert
p23360
I62
VInstanceofExpression
p23361
tp23362
I1
s(g1162
I42
g1163
Vinsert
p23363
I42
VSimpleName: simpleName
p23364
tp23365
I1
s(g489
I42
g490
Vinsert
p23366
I32
VMethodInvocation
p23367
tp23368
I23
s(g1861
I42
g1862
Vinsert
p23369
I42
VSimpleName: x
p23370
tp23371
I1
s(g5130
I42
g5131
Vinsert
p23372
I41
VReturnStatement
p23373
tp23374
I1
s(g1683
I42
g1684
Vinsert
p23375
I42
VSimpleName: fexpr
p23376
tp23377
I3
s(g3522
I42
g3523
Vinsert
p23378
I42
VSimpleName: third
p23379
tp23380
I1
s(g6076
I42
g6077
Vinsert
p23381
I42
VSimpleName: key
p23382
tp23383
I3
s(g318
I42
g319
Vinsert
p23384
I83
VModifier: static
p23385
tp23386
F0.25
s(g8268
I42
g8269
Vinsert
p23387
I27
VInfixExpression: >=
p23388
tp23389
I1
s(g1167
I42
g1168
Vinsert
p23390
I42
VSimpleName: n
p23391
tp23392
F1.25
s(g6234
I42
g6235
Vinsert
p23393
I42
VSimpleName: primInterface
p23394
tp23395
I1
s(g1291
I42
g1292
Vinsert
p23396
I42
VSimpleName: Exception
p23397
tp23398
F0.25
s(g11015
I42
g11016
Vinsert
p23399
I42
VSimpleName: isPrimitive
p23400
tp23401
I1
s(g4303
I42
g4304
Vinsert
p23402
I42
VSimpleName: in
p23403
tp23404
I1
s(Vinsert
p23405
I42
VSimpleName: count
p23406
Vinsert
p23407
I42
VSimpleName: PersistentListIdentityMap
p23408
tp23409
F0.25
s(g2682
I42
g2683
Vinsert
p23410
I42
VSimpleName: Exception
p23411
tp23412
F0.75
s(g4303
I42
g4304
Vinsert
p23413
I42
VSimpleName: IOException
p23414
tp23415
F0.25
s(g1558
I42
g1559
Vinsert
p23416
I42
VSimpleName: getField
p23417
tp23418
I1
s(g7970
I42
g7971
Vinsert
p23419
I42
VSimpleName: coll
p23420
tp23421
I3
s(g2397
I42
g2398
Vinsert
p23422
I42
VSimpleName: bsm
p23423
tp23424
F0.5
s(g3014
I42
g3015
Vinsert
p23425
I42
VSimpleName: lastExpr
p23426
tp23427
F1.25
s(g189
I42
g190
Vinsert
p23428
I21
VExpressionStatement
p23429
tp23430
I1
s(g2273
I42
g2274
Vinsert
p23431
I42
VSimpleName: ratioLiteral_StartIndex
p23432
tp23433
I1
s(g22700
I42
g22701
Vinsert
p23434
I42
VSimpleName: entriesFor
p23435
tp23436
I1
s(g2278
I42
g2279
Vinsert
p23437
I42
VSimpleName: ISeq
p23438
tp23439
I1
s(g456
I42
g457
Vinsert
p23440
I42
VSimpleName: s
p23441
tp23442
F0.25
s(g4404
I42
g4405
Vinsert
p23443
I7
VAssignment: =
p23444
tp23445
F0.5
s(g1678
I42
g1679
Vinsert
p23446
I42
VSimpleName: EMPTY
p23447
tp23448
I1
s(g2310
I42
g2311
Vinsert
p23449
I83
VModifier: static
p23450
tp23451
F0.25
s(g456
I42
g457
Vinsert
p23452
I42
VSimpleName: Object
p23453
tp23454
F0.25
s(g5576
I42
g5577
Vinsert
p23455
I60
VVariableDeclarationStatement
p23456
tp23457
I1
s(g661
I42
g662
Vinsert
p23458
I42
VSimpleName: meth
p23459
tp23460
F0.25
s(g7582
I42
g7583
Vinsert
p23461
I42
VSimpleName: equiv
p23462
tp23463
I1
s(g368
I42
g369
Vinsert
p23464
I42
VSimpleName: goTo
p23465
tp23466
I1
s(g6092
I42
g6093
Vinsert
p23467
I33
VNullLiteral
p23468
tp23469
I1
s(g86
I42
g87
Vinsert
p23470
I40
VQualifiedName: RT.T
p23471
tp23472
F0.25
s(g1957
I42
g1958
Vinsert
p23473
I7
VAssignment: =
p23474
tp23475
F0.25
s(g6759
I42
g6760
Vinsert
p23476
I43
VSimpleType: Random
p23477
tp23478
I2
s(g96
I42
g97
Vinsert
p23479
I42
VSimpleName: arg1
p23480
tp23481
I2
s(g9417
I42
g9418
Vinsert
p23482
I42
VSimpleName: name
p23483
tp23484
I1
s(g4726
I42
g4727
Vinsert
p23485
I32
VMethodInvocation
p23486
tp23487
I1
s(g13465
I42
g13466
Vinsert
p23488
I40
VQualifiedName: master.rev
p23489
tp23490
F0.25
s(g3991
I42
g3992
Vinsert
p23491
I21
VExpressionStatement
p23492
tp23493
F5.25
s(g1032
I42
g1033
Vinsert
p23494
I42
VSimpleName: ns
p23495
tp23496
F1.25
s(g8398
I42
g8399
Vinsert
p23497
I42
VSimpleName: IPersistentMap
p23498
tp23499
F0.25
s(g4151
I42
g4152
Vinsert
p23500
I42
VSimpleName: t
p23501
tp23502
I1
s(g916
I42
g917
Vinsert
p23503
I42
VSimpleName: x
p23504
tp23505
I12
s(g1451
I42
g1452
Vinsert
p23506
I14
VClassInstanceCreation
p23507
tp23508
F0.25
s(g11818
I42
g11819
Vinsert
p23509
I42
VSimpleName: _first
p23510
tp23511
F2.5
s(g847
I42
g848
Vinsert
p23512
I42
VSimpleName: mv
p23513
tp23514
I1
s(g6696
I42
g6697
Vinsert
p23515
I34
VNumberLiteral: 0
p23516
tp23517
I1
s(g1827
I42
g1828
Vinsert
p23518
I45
VStringLiteral: "System"
p23519
tp23520
I1
s(g6505
I42
g6506
Vinsert
p23521
I32
VMethodInvocation
p23522
tp23523
I2
s(g9861
I42
g9862
Vinsert
p23524
I59
VVariableDeclarationFragment
p23525
tp23526
I4
s(g4726
I42
g4727
Vinsert
p23527
I43
VSimpleType: List
p23528
tp23529
I1
s(g4041
I42
g4042
Vinsert
p23530
I21
VExpressionStatement
p23531
tp23532
I2
s(g21
I42
g22
Vinsert
p23533
I42
VSimpleName: form
p23534
tp23535
I3
s(g129
I42
g130
Vinsert
p23536
I42
VSimpleName: ILookup
p23537
tp23538
I4
s(g4916
I42
g4917
Vinsert
p23539
I42
VSimpleName: divide
p23540
tp23541
I1
s(g6561
I42
g6562
Vinsert
p23542
I42
VSimpleName: method
p23543
tp23544
I1
s(g4073
I42
g4074
Vinsert
p23545
I42
VSimpleName: gen
p23546
tp23547
F5.5
s(g5111
I42
g5112
Vinsert
p23548
I42
VSimpleName: getMethod
p23549
tp23550
I1
s(g4826
I42
g4827
Vinsert
p23551
I42
VSimpleName: _meta
p23552
tp23553
I1
s(g1451
I42
g1452
Vinsert
p23554
I42
VSimpleName: value
p23555
tp23556
I1
s(g1127
I42
g1128
Vinsert
p23557
I42
VSimpleName: be
p23558
tp23559
I2
s(g10591
I42
g10592
Vinsert
p23560
I42
VSimpleName: String
p23561
tp23562
F0.25
s(g3105
I42
g3106
Vinsert
p23563
I42
VSimpleName: D2L
p23564
tp23565
I1
s(g4694
I42
g4695
Vinsert
p23566
I42
VSimpleName: IntegerNum
p23567
tp23568
I1
s(g3384
I42
g3385
Vinsert
p23569
I42
VSimpleName: val
p23570
tp23571
F2.25
s(g2649
I42
g2650
Vinsert
p23572
I43
VSimpleType: Object
p23573
tp23574
F0.25
s(g666
I42
g667
Vinsert
p23575
I42
VSimpleName: val
p23576
tp23577
I2
s(g2392
I42
g2393
Vinsert
p23578
I42
VSimpleName: dupX1
p23579
tp23580
I1
s(g295
I42
g296
Vinsert
p23581
I43
VSimpleType: Number
p23582
tp23583
I1
s(g328
I42
g329
Vinsert
p23584
I42
VSimpleName: IllegalAccessError
p23585
tp23586
F0.5
s(g5916
I42
g5917
Vinsert
p23587
I11
VCastExpression
p23588
tp23589
I1
s(g267
I42
g268
Vinsert
p23590
I42
VSimpleName: bn
p23591
tp23592
I3
s(g646
I42
g647
Vinsert
p23593
I42
VSimpleName: Object
p23594
tp23595
F0.5
s(g4942
I42
g4943
Vinsert
p23596
I42
VSimpleName: val
p23597
tp23598
I1
s(g730
I42
g731
Vinsert
p23599
I32
VMethodInvocation
p23600
tp23601
I2
s(g1588
I42
g1589
Vinsert
p23602
I43
VSimpleType: java.lang.reflect.Method
p23603
tp23604
I1
s(g2586
I42
g2587
Vinsert
p23605
I34
VNumberLiteral: 1
p23606
tp23607
I1
s(Vinsert
p23608
I42
VSimpleName: invoke
p23609
Vinsert
p23610
I42
VSimpleName: arg15
p23611
tp23612
F0.25
s(g5960
I42
g5961
Vinsert
p23613
I42
VSimpleName: newval
p23614
tp23615
I4
s(g2803
I42
g2804
Vinsert
p23616
I42
VSimpleName: Compiler
p23617
tp23618
I1
s(g510
I42
g511
Vinsert
p23619
I8
VBlock
p23620
tp23621
F2.25
s(g3934
I42
g3935
Vinsert
p23622
I42
VSimpleName: hasMoreElements
p23623
tp23624
I1
s.