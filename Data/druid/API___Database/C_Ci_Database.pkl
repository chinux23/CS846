(dp0
(Vinsert
p1
I42
VSimpleName: getKey
p2
Vinsert
p3
I42
VSimpleName: getPreparedStatementHolder
p4
tp5
I1
s(Vinsert
p6
I42
VSimpleName: save
p7
Vinsert
p8
I59
VVariableDeclarationFragment
p9
tp10
I1
s(Vinsert
p11
I42
VSimpleName: console
p12
Vinsert
p13
I42
VSimpleName: assertEquals
p14
tp15
I1
s(Vinsert
p16
I42
VSimpleName: put
p17
Vinsert
p18
I42
VSimpleName: tableSource
p19
tp20
I1
s(Vinsert
p21
I42
VSimpleName: getSelectList
p22
Vinsert
p23
I43
VSimpleType: MySqlSelectQueryBlock
p24
tp25
I6
s(Vinsert
p26
I42
VSimpleName: nextToken
p27
Vinsert
p28
I42
VSimpleName: exprRest
p29
tp30
I1
s(Vinsert
p31
I42
VSimpleName: getQuery
p32
Vinsert
p33
I42
VSimpleName: alias
p34
tp35
I2
s(Vinsert
p36
I42
VSimpleName: stringVal
p37
Vinsert
p38
I42
VSimpleName: SQLExpr
p39
tp40
I1
s(Vinsert
p41
I42
VSimpleName: getLexer
p42
Vinsert
p43
I59
VVariableDeclarationFragment
p44
tp45
I4
s(Vinsert
p46
I42
VSimpleName: setValue
p47
Vinsert
p48
I21
VExpressionStatement
p49
tp50
I20
s(Vinsert
p51
I42
VSimpleName: getData
p52
Vinsert
p53
I27
VInfixExpression: ==
p54
tp55
I2
s(Vinsert
p56
I42
VSimpleName: setLinear
p57
Vinsert
p58
I21
VExpressionStatement
p59
tp60
I3
s(Vinsert
p61
I42
VSimpleName: isIPAddressInRange
p62
Vinsert
p63
I60
VVariableDeclarationStatement
p64
tp65
I1
s(Vinsert
p66
I42
VSimpleName: endVisit
p67
Vinsert
p68
I42
VSimpleName: initialSize
p69
tp70
I2
s(Vinsert
p71
I42
VSimpleName: normalizedName
p72
Vinsert
p73
I21
VExpressionStatement
p74
tp75
I1
s(Vinsert
p76
I42
VSimpleName: setId
p77
Vinsert
p78
I43
VSimpleType: SQLException
p79
tp80
I1
s(Vinsert
p81
I42
VSimpleName: equalsIgoreOrder
p82
Vinsert
p83
I43
VSimpleType: SQLBinaryOpExpr
p84
tp85
I3
s(Vinsert
p86
I42
VSimpleName: getGlobal
p87
Vinsert
p88
I44
VSingleVariableDeclaration
p89
tp90
I1
s(Vinsert
p91
I42
VSimpleName: getName
p92
Vinsert
p93
I27
VInfixExpression: &&
p94
tp95
I1
s(Vinsert
p96
I42
VSimpleName: getPartitionBy
p97
Vinsert
p98
I25
VIfStatement
p99
tp100
I1
s(Vinsert
p101
I42
VSimpleName: nativeSQL
p102
Vinsert
p103
I42
VSimpleName: assertEquals
p104
tp105
I1
s(Vinsert
p106
I42
VSimpleName: getPtcfree
p107
Vinsert
p108
I45
VStringLiteral: " PCTFREE "
p109
tp110
I1
s(Vinsert
p111
I42
VSimpleName: put
p112
Vinsert
p113
I42
VSimpleName: token
p114
tp115
I1
s(Vinsert
p116
I42
VSimpleName: getUrl
p117
Vinsert
p118
I39
VPrimitiveType: void
p119
tp120
I1
s(Vinsert
p121
I42
VSimpleName: setProcedureName
p122
Vinsert
p123
I43
VSimpleType: SQLCallStatement
p124
tp125
I2
s(Vinsert
p126
I42
VSimpleName: getClassLoader
p127
Vinsert
p128
I33
VNullLiteral
p129
tp130
I1
s(Vinsert
p131
I42
VSimpleName: setHaving
p132
Vinsert
p133
I42
VSimpleName: nextToken
p134
tp135
I2
s(Vinsert
p136
I42
VSimpleName: values
p137
Vinsert
p138
I52
VThisExpression
p139
tp140
I4
s(Vinsert
p141
I42
VSimpleName: get
p142
Vinsert
p143
I42
VSimpleName: print0
p144
tp145
I4
s(Vinsert
p146
I42
VSimpleName: getSelectList
p147
Vinsert
p148
I42
VSimpleName: dbType
p149
tp150
I1
s(Vinsert
p151
I42
VSimpleName: accept0
p152
Vinsert
p153
I42
VSimpleName: query
p154
tp155
I1
s(Vinsert
p156
I42
VSimpleName: take
p157
Vinsert
p158
I1
VAnonymousClassDeclaration
p159
tp160
I2
s(Vinsert
p161
I42
VSimpleName: add
p162
Vinsert
p163
I40
VQualifiedName: Token.PROCEDURE
p164
tp165
I1
s(Vinsert
p166
I42
VSimpleName: assertTrue
p167
Vinsert
p168
I45
VStringLiteral: "select * from t where len(fname) = 2"
p169
tp170
I1
s(Vinsert
p171
I42
VSimpleName: getWhere
p172
Vinsert
p173
I42
VSimpleName: setParent
p174
tp175
I4
s(Vinsert
p176
I42
VSimpleName: getAlias
p177
Vinsert
p178
I45
VStringLiteral: ")"
p179
tp180
I1
s(Vinsert
p181
I42
VSimpleName: setName
p182
Vinsert
p183
I42
VSimpleName: MySqlCreateTableStatement
p184
tp185
I2
s(Vinsert
p186
I42
VSimpleName: get
p187
Vinsert
p188
I42
VSimpleName: put
p189
tp190
I1
s(Vinsert
p191
I42
VSimpleName: setValue
p192
Vinsert
p193
I43
VSimpleType: MySqlIntervalExpr
p194
tp195
I2
s(Vinsert
p196
I42
VSimpleName: toSQLString
p197
Vinsert
p198
I45
VStringLiteral: "\u005ctFROM DMN_MKTG_PLAN_TYPE_TWO\u005cn"
p199
tp200
I1
s(Vinsert
p201
I42
VSimpleName: getOperator
p202
Vinsert
p203
I42
VSimpleName: wallConditionContext
p204
tp205
I2
s(Vinsert
p206
I42
VSimpleName: getDriver
p207
Vinsert
p208
I33
VNullLiteral
p209
tp210
I1
s(Vinsert
p211
I42
VSimpleName: equals
p212
Vinsert
p213
I43
VSimpleType: SQLJoinTableSource
p214
tp215
I1
s(Vinsert
p216
I42
VSimpleName: parseStatements
p217
Vinsert
p218
I40
VQualifiedName: SQLUtils.DEFAULT_LCASE_FORMAT_OPTION
p219
tp220
I24
s(Vinsert
p221
I42
VSimpleName: token
p222
Vinsert
p223
I53
VThrowStatement
p224
tp225
I18
s(Vinsert
p226
I42
VSimpleName: put
p227
Vinsert
p228
I42
VSimpleName: updateDataCount_0_1
p229
tp230
I1
s(Vinsert
p231
I42
VSimpleName: token
p232
Vinsert
p233
I42
VSimpleName: expr
p234
tp235
I23
s(Vinsert
p236
I42
VSimpleName: visit
p237
Vinsert
p238
I42
VSimpleName: setList
p239
tp240
I2
s(Vinsert
p241
I42
VSimpleName: getExpr
p242
Vinsert
p243
I42
VSimpleName: SQLName
p244
tp245
I2
s(Vinsert
p246
I42
VSimpleName: nextToken
p247
Vinsert
p248
I42
VSimpleName: setOrReplace
p249
tp250
I1
s(Vinsert
p251
I42
VSimpleName: callableStatement_getObject
p252
Vinsert
p253
I42
VSimpleName: SQLException
p254
tp255
I1
s(Vinsert
p256
I42
VSimpleName: isAll
p257
Vinsert
p258
I42
VSimpleName: forStatement
p259
tp260
I1
s(Vinsert
p261
I42
VSimpleName: getViolations
p262
Vinsert
p263
I41
VReturnStatement
p264
tp265
I1
s(Vinsert
p266
I42
VSimpleName: isEmpty
p267
Vinsert
p268
I42
VSimpleName: getTenantColumn
p269
tp270
I1
s(Vinsert
p271
I42
VSimpleName: assertEquals
p272
Vinsert
p273
I42
VSimpleName: EvalCaseThen
p274
tp275
I1
s(Vinsert
p276
I42
VSimpleName: toPGString
p277
Vinsert
p278
I45
VStringLiteral: "\u005cn\u005ct\u005ctSELECT n + 1"
p279
tp280
I1
s(Vinsert
p281
I42
VSimpleName: checkParameterize
p282
Vinsert
p283
I40
VQualifiedName: com.alibaba.druid.sql.ast.expr.SQLNullExpr
p284
tp285
I6
s(Vinsert
p286
I42
VSimpleName: murmurhash2_64
p287
Vinsert
p288
I42
VSimpleName: getSqlHash
p289
tp290
I2
s(Vinsert
p291
I42
VSimpleName: setSqlStat
p292
Vinsert
p293
I42
VSimpleName: context
p294
tp295
I3
s(Vinsert
p296
I42
VSimpleName: visit
p297
Vinsert
p298
I43
VSimpleType: SQLNullExpr
p299
tp300
I3
s(Vinsert
p301
I42
VSimpleName: assertTrue
p302
Vinsert
p303
I43
VSimpleType: String
p304
tp305
I20
s(Vinsert
p306
I42
VSimpleName: nextToken
p307
Vinsert
p308
I18
VContinueStatement
p309
tp310
I8
s(Vinsert
p311
I42
VSimpleName: setQueryTimeout
p312
Vinsert
p313
I42
VSimpleName: Statement
p314
tp315
I1
s(Vinsert
p316
I42
VSimpleName: entrySet
p317
Vinsert
p318
I74
VParameterizedType: Map.Entry<String,JdbcSqlStat>
p319
tp320
I2
s(Vinsert
p321
I42
VSimpleName: getContextClassLoader
p322
Vinsert
p323
I43
VSimpleType: URL
p324
tp325
I3
s(Vinsert
p326
I42
VSimpleName: createSQLStatementParser
p327
Vinsert
p328
I45
VStringLiteral: "col.id = ( \u005cn"
p329
tp330
I1
s(Vinsert
p331
I42
VSimpleName: getOf
p332
Vinsert
p333
I42
VSimpleName: getOf
p334
tp335
I1
s(Vinsert
p336
I42
VSimpleName: getPartitions
p337
Vinsert
p338
I52
VThisExpression
p339
tp340
I2
s(Vinsert
p341
I42
VSimpleName: loadClass
p342
Vinsert
p343
I33
VNullLiteral
p344
tp345
I4
s(Vinsert
p346
I42
VSimpleName: getWaitThreadCount
p347
Vinsert
p348
I42
VSimpleName: getLockQueueLength
p349
tp350
I1
s(Vinsert
p351
I42
VSimpleName: getClass
p352
Vinsert
p353
I32
VMethodInvocation
p354
tp355
I206
s(Vinsert
p356
I42
VSimpleName: getBrowserOperaCount
p357
Vinsert
p358
I32
VMethodInvocation
p359
tp360
I4
s(Vinsert
p361
I42
VSimpleName: assertTrue
p362
Vinsert
p363
I45
VStringLiteral: " `changed` datetime NOT NULL DEFAULT '1000-01-01 00:00:00',"
p364
tp365
I1
s(Vinsert
p366
I42
VSimpleName: trim
p367
Vinsert
p368
I42
VSimpleName: StringBuilder
p369
tp370
I1
s(Vinsert
p371
I42
VSimpleName: println
p372
Vinsert
p373
I40
VQualifiedName: JdbcConstants.H2
p374
tp375
I5
s(Vinsert
p376
I42
VSimpleName: parseStatements
p377
Vinsert
p378
I42
VSimpleName: parseStatements
p379
tp380
I1
s(Vinsert
p381
I42
VSimpleName: setModelClause
p382
Vinsert
p383
I32
VMethodInvocation
p384
tp385
I3
s(Vinsert
p386
I42
VSimpleName: toJSONString
p387
Vinsert
p388
I43
VSimpleType: HashMap
p389
tp390
I1
s(Vinsert
p391
I42
VSimpleName: isWork
p392
Vinsert
p393
I42
VSimpleName: SQLServerRollbackStatement
p394
tp395
I1
s(Vinsert
p396
I42
VSimpleName: setParent
p397
Vinsert
p398
I43
VSimpleType: SQLExprHint
p399
tp400
I4
s(g311
I42
g312
Vinsert
p401
I40
VQualifiedName: SpringLayout.EAST
p402
tp403
I1
s(Vinsert
p404
I42
VSimpleName: toSQLString
p405
Vinsert
p406
I45
VStringLiteral: "ENABLE QUERY REWRITE\u005cn"
p407
tp408
I1
s(Vinsert
p409
I42
VSimpleName: toSQLString
p410
Vinsert
p411
I40
VQualifiedName: x.dbType
p412
tp413
I1
s(Vinsert
p414
I42
VSimpleName: getOwner
p415
Vinsert
p416
I42
VSimpleName: tableName
p417
tp418
I1
s(Vinsert
p419
I42
VSimpleName: getXAConnection
p420
Vinsert
p421
I42
VSimpleName: XAConnection
p422
tp423
I1
s(Vinsert
p424
I42
VSimpleName: setParent
p425
Vinsert
p426
I42
VSimpleName: sortedBy
p427
tp428
I1
s(Vinsert
p429
I42
VSimpleName: resolve
p430
Vinsert
p431
I25
VIfStatement
p432
tp433
I1
s(Vinsert
p434
I42
VSimpleName: indexOf
p435
Vinsert
p436
I42
VSimpleName: sql
p437
tp438
I1
s(Vinsert
p439
I42
VSimpleName: setCharacterSet
p440
Vinsert
p441
I21
VExpressionStatement
p442
tp443
I2
s(Vinsert
p444
I42
VSimpleName: isConstArithmetic
p445
Vinsert
p446
I25
VIfStatement
p447
tp448
I1
s(Vinsert
p449
I42
VSimpleName: close
p450
Vinsert
p451
I42
VSimpleName: OracleUtils
p452
tp453
I1
s(Vinsert
p454
I42
VSimpleName: toCharArray
p455
Vinsert
p456
I8
VBlock
p457
tp458
I1
s(Vinsert
p459
I42
VSimpleName: assertEquals
p460
Vinsert
p461
I40
VQualifiedName: com.alibaba.druid.sql.SQLUtils
p462
tp463
I1
s(Vinsert
p464
I42
VSimpleName: setOutput
p465
Vinsert
p466
I42
VSimpleName: output
p467
tp468
I1
s(Vinsert
p469
I42
VSimpleName: getParent
p470
Vinsert
p471
I40
VQualifiedName: FnvHash.Constants.SQLCODE
p472
tp473
I1
s(g391
I42
g392
Vinsert
p474
I42
VSimpleName: print
p475
tp476
I1
s(Vinsert
p477
I42
VSimpleName: equals
p478
Vinsert
p479
I9
VBooleanLiteral: false
p480
tp481
I25
s(Vinsert
p482
I42
VSimpleName: println
p483
Vinsert
p484
I43
VSimpleType: SQLServerSchemaStatVisitor
p485
tp486
I44
s(Vinsert
p487
I42
VSimpleName: run
p488
Vinsert
p489
I83
VModifier: static
p490
tp491
I1
s(Vinsert
p492
I42
VSimpleName: clearStatementCache
p493
Vinsert
p494
I25
VIfStatement
p495
tp496
I1
s(Vinsert
p497
I42
VSimpleName: putIfAbsent
p498
Vinsert
p499
I59
VVariableDeclarationFragment
p500
tp501
I1
s(Vinsert
p502
I42
VSimpleName: parseOrderBy
p503
Vinsert
p504
I11
VCastExpression
p505
tp506
I1
s(Vinsert
p507
I42
VSimpleName: setQueryTimeout
p508
Vinsert
p509
I60
VVariableDeclarationStatement
p510
tp511
I2
s(Vinsert
p512
I42
VSimpleName: getLastErrorTime
p513
Vinsert
p514
I21
VExpressionStatement
p515
tp516
I2
s(Vinsert
p517
I42
VSimpleName: eq
p518
Vinsert
p519
I32
VMethodInvocation
p520
tp521
I2
s(Vinsert
p522
I42
VSimpleName: setCursorName
p523
Vinsert
p524
I14
VClassInstanceCreation
p525
tp526
I2
s(Vinsert
p527
I42
VSimpleName: getMessage
p528
Vinsert
p529
I34
VNumberLiteral: 1
p530
tp531
I1
s(Vinsert
p532
I42
VSimpleName: getSequence
p533
Vinsert
p534
I53
VThrowStatement
p535
tp536
I1
s(Vinsert
p537
I42
VSimpleName: getThreadId
p538
Vinsert
p539
I42
VSimpleName: getType
p540
tp541
I1
s(Vinsert
p542
I42
VSimpleName: formatOdps
p543
Vinsert
p544
I45
VStringLiteral: "\u005ct\u005ct'VerifyPasswordFormat', \u005cn"
p545
tp546
I1
s(Vinsert
p547
I42
VSimpleName: toSQLString
p548
Vinsert
p549
I45
VStringLiteral: "\u005ct, c.aboutus_image_path, c.aboutus_image_title, c.chinese_name, c.rowid AS c_rid, v.rowid AS v_rid\u005cn"
p550
tp551
I1
s(Vinsert
p552
I42
VSimpleName: getColumn
p553
Vinsert
p554
I45
VStringLiteral: "sharding rule violation, insert's values clause is null"
p555
tp556
I1
s(Vinsert
p557
I42
VSimpleName: translateOracleToMySql
p558
Vinsert
p559
I45
VStringLiteral: "\u005cnFROM (SELECT XX.*, ROWNUM AS RN"
p560
tp561
I1
s(Vinsert
p562
I42
VSimpleName: getInstance
p563
Vinsert
p564
I11
VCastExpression
p565
tp566
I1
s(Vinsert
p567
I42
VSimpleName: clearCache
p568
Vinsert
p569
I38
VPrefixExpression: ++
p570
tp571
I3
s(Vinsert
p572
I42
VSimpleName: getStatement
p573
Vinsert
p574
I42
VSimpleName: tableSource
p575
tp576
I2
s(Vinsert
p577
I42
VSimpleName: getMethodName
p578
Vinsert
p579
I42
VSimpleName: SQLMethodInvokeExpr
p580
tp581
I9
s(Vinsert
p582
I42
VSimpleName: println
p583
Vinsert
p584
I45
VStringLiteral: "FROM t"
p585
tp586
I1
s(Vinsert
p587
I42
VSimpleName: assertTrue
p588
Vinsert
p589
I45
VStringLiteral: ")"
p590
tp591
I1
s(Vinsert
p592
I42
VSimpleName: cloneTo
p593
Vinsert
p594
I25
VIfStatement
p595
tp596
I1
s(Vinsert
p597
I42
VSimpleName: isWarnEnabled
p598
Vinsert
p599
I42
VSimpleName: log
p600
tp601
I1
s(Vinsert
p602
I42
VSimpleName: setUrl
p603
Vinsert
p604
I42
VSimpleName: Exception
p605
tp606
I6
s(Vinsert
p607
I42
VSimpleName: length
p608
Vinsert
p609
I42
VSimpleName: getAttribute
p610
tp611
I1
s(Vinsert
p612
I42
VSimpleName: getSelectCount
p613
Vinsert
p614
I42
VSimpleName: stat
p615
tp616
I2
s(Vinsert
p617
I42
VSimpleName: error
p618
Vinsert
p619
I42
VSimpleName: getConfigLoadPeriodMillis
p620
tp621
I1
s(Vinsert
p622
I42
VSimpleName: setIsolation
p623
Vinsert
p624
I32
VMethodInvocation
p625
tp626
I3
s(Vinsert
p627
I42
VSimpleName: stringVal
p628
Vinsert
p629
I45
VStringLiteral: "@"
p630
tp631
I1
s(Vinsert
p632
I42
VSimpleName: callableStatement_setTime
p633
Vinsert
p634
I21
VExpressionStatement
p635
tp636
I1
s(Vinsert
p637
I42
VSimpleName: getCollate
p638
Vinsert
p639
I42
VSimpleName: getCollate
p640
tp641
I1
s(Vinsert
p642
I42
VSimpleName: println
p643
Vinsert
p644
I10
VBreakStatement
p645
tp646
I2
s(Vinsert
p647
I42
VSimpleName: put
p648
Vinsert
p649
I42
VSimpleName: Long
p650
tp651
I1
s(Vinsert
p652
I42
VSimpleName: getURIStatDataList
p653
Vinsert
p654
I59
VVariableDeclarationFragment
p655
tp656
I1
s(Vinsert
p657
I42
VSimpleName: fill
p658
Vinsert
p659
I43
VSimpleType: Exception
p660
tp661
I1
s(Vinsert
p662
I42
VSimpleName: getErrorCount
p663
Vinsert
p664
I42
VSimpleName: assertEquals
p665
tp666
I2
s(g131
I42
g132
Vinsert
p667
I42
VSimpleName: lexer
p668
tp669
I2
s(Vinsert
p670
I42
VSimpleName: getJdbcUrl
p671
Vinsert
p672
I8
VBlock
p673
tp674
I1
s(Vinsert
p675
I42
VSimpleName: assertNotNull
p676
Vinsert
p677
I42
VSimpleName: sql
p678
tp679
I1
s(Vinsert
p680
I42
VSimpleName: values
p681
Vinsert
p682
I43
VSimpleType: SpringMethodStat
p683
tp684
I1
s(Vinsert
p685
I42
VSimpleName: endVisit
p686
Vinsert
p687
I42
VSimpleName: getItems
p688
tp689
I3
s(Vinsert
p690
I42
VSimpleName: getClass
p691
Vinsert
p692
I42
VSimpleName: DruidDataSource
p693
tp694
I3
s(Vinsert
p695
I42
VSimpleName: putAll
p696
Vinsert
p697
I42
VSimpleName: sqlitemap
p698
tp699
I2
s(Vinsert
p700
I42
VSimpleName: indexOf
p701
Vinsert
p702
I22
VFieldAccess
p703
tp704
I1
s(g126
I42
g127
Vinsert
p705
I25
VIfStatement
p706
tp707
I1
s(Vinsert
p708
I42
VSimpleName: assertEquals
p709
Vinsert
p710
I45
VStringLiteral: "\u005cnfrom xxxx a-- xxxx"
p711
tp712
I1
s(Vinsert
p713
I42
VSimpleName: size
p714
Vinsert
p715
I34
VNumberLiteral: 4
p716
tp717
I2
s(Vinsert
p718
I42
VSimpleName: add
p719
Vinsert
p720
I74
VParameterizedType: ArrayList<SQLStatement>
p721
tp722
I1
s(Vinsert
p723
I42
VSimpleName: assertNotNull
p724
Vinsert
p725
I42
VSimpleName: assertTrue
p726
tp727
I1
s(Vinsert
p728
I42
VSimpleName: getMessage
p729
Vinsert
p730
I43
VSimpleType: Throwable
p731
tp732
I1
s(Vinsert
p733
I42
VSimpleName: await
p734
Vinsert
p735
I42
VSimpleName: run
p736
tp737
I7
s(Vinsert
p738
I42
VSimpleName: getSubQuery
p739
Vinsert
p740
I43
VSimpleType: HashMap
p741
tp742
I1
s(Vinsert
p743
I42
VSimpleName: newUpdater
p744
Vinsert
p745
I43
VSimpleType: JdbcSqlStat
p746
tp747
I3
s(Vinsert
p748
I42
VSimpleName: getResultSetRaw
p749
Vinsert
p750
I33
VNullLiteral
p751
tp752
I1
s(Vinsert
p753
I42
VSimpleName: getValue
p754
Vinsert
p755
I42
VSimpleName: entry
p756
tp757
I5
s(Vinsert
p758
I42
VSimpleName: getConstraintName
p759
Vinsert
p760
I21
VExpressionStatement
p761
tp762
I6
s(Vinsert
p763
I42
VSimpleName: setDataType
p764
Vinsert
p765
I42
VSimpleName: acceptIdentifier
p766
tp767
I1
s(Vinsert
p768
I42
VSimpleName: exportParameter
p769
Vinsert
p770
I42
VSimpleName: x
p771
tp772
I1
s(Vinsert
p773
I42
VSimpleName: stringVal
p774
Vinsert
p775
I42
VSimpleName: parseForeignKey
p776
tp777
I1
s(g552
I42
g553
Vinsert
p778
I42
VSimpleName: mappingRule
p779
tp780
I1
s(Vinsert
p781
I42
VSimpleName: getDbType
p782
Vinsert
p783
I42
VSimpleName: parent
p784
tp785
I2
s(Vinsert
p786
I42
VSimpleName: log
p787
Vinsert
p788
I43
VSimpleType: Throwable
p789
tp790
I1
s(Vinsert
p791
I42
VSimpleName: getParent
p792
Vinsert
p793
I7
VAssignment: =
p794
tp795
I3
s(Vinsert
p796
I42
VSimpleName: cancel
p797
Vinsert
p798
I43
VSimpleType: SQLException
p799
tp800
I2
s(Vinsert
p801
I42
VSimpleName: getLastSlowParameters
p802
Vinsert
p803
I42
VSimpleName: getDataSourceStat
p804
tp805
I1
s(Vinsert
p806
I42
VSimpleName: getEntity
p807
Vinsert
p808
I44
VSingleVariableDeclaration
p809
tp810
I2
s(Vinsert
p811
I42
VSimpleName: put
p812
Vinsert
p813
I40
VQualifiedName: statValue.transactionHistogram
p814
tp815
I1
s(Vinsert
p816
I42
VSimpleName: getConnectProperties
p817
Vinsert
p818
I42
VSimpleName: getConnectProperties
p819
tp820
I1
s(Vinsert
p821
I42
VSimpleName: apply
p822
Vinsert
p823
I42
VSimpleName: e
p824
tp825
I2
s(Vinsert
p826
I42
VSimpleName: put
p827
Vinsert
p828
I40
VQualifiedName: Token.ELSE
p829
tp830
I1
s(Vinsert
p831
I42
VSimpleName: assertEquals
p832
Vinsert
p833
I40
VQualifiedName: javax.management.ObjectName
p834
tp835
I1
s(Vinsert
p836
I42
VSimpleName: equalsIgnoreCase
p837
Vinsert
p838
I42
VSimpleName: indexType
p839
tp840
I2
s(Vinsert
p841
I42
VSimpleName: startsWith
p842
Vinsert
p843
I42
VSimpleName: ch
p844
tp845
I2
s(Vinsert
p846
I42
VSimpleName: getOnConflictConstraint
p847
Vinsert
p848
I45
VStringLiteral: ", "
p849
tp850
I1
s(Vinsert
p851
I42
VSimpleName: hashCode
p852
Vinsert
p853
I42
VSimpleName: prime
p854
tp855
I17
s(Vinsert
p856
I42
VSimpleName: parseBoolean
p857
Vinsert
p858
I52
VThisExpression
p859
tp860
I1
s(Vinsert
p861
I42
VSimpleName: query
p862
Vinsert
p863
I21
VExpressionStatement
p864
tp865
I1
s(Vinsert
p866
I42
VSimpleName: updateFloat
p867
Vinsert
p868
I42
VSimpleName: assertEquals
p869
tp870
I1
s(Vinsert
p871
I42
VSimpleName: getStatementList
p872
Vinsert
p873
I42
VSimpleName: parseStatementList
p874
tp875
I1
s(Vinsert
p876
I42
VSimpleName: println
p877
Vinsert
p878
I45
VStringLiteral: "\u005ctuserid VARCHAR(64),\u005cn"
p879
tp880
I1
s(Vinsert
p881
I42
VSimpleName: getColumn
p882
Vinsert
p883
I42
VSimpleName: Assert
p884
tp885
I1
s(Vinsert
p886
I42
VSimpleName: encrypt
p887
Vinsert
p888
I42
VSimpleName: String
p889
tp890
I2
s(Vinsert
p891
I42
VSimpleName: registerOutParameter
p892
Vinsert
p893
I54
VTryStatement
p894
tp895
I1
s(Vinsert
p896
I42
VSimpleName: getPassword
p897
Vinsert
p898
I45
VStringLiteral: " IDENTIFIED BY "
p899
tp900
I1
s(Vinsert
p901
I42
VSimpleName: substring
p902
Vinsert
p903
I27
VInfixExpression: ==
p904
tp905
I2
s(g627
I42
g628
Vinsert
p906
I42
VSimpleName: stringVal
p907
tp908
I3
s(Vinsert
p909
I42
VSimpleName: toSQLString
p910
Vinsert
p911
I45
VStringLiteral: "\u005ctvalue NUMBER(5)\u005cn"
p912
tp913
I1
s(Vinsert
p914
I42
VSimpleName: getPartitions
p915
Vinsert
p916
I42
VSimpleName: ucase
p917
tp918
I3
s(Vinsert
p919
I42
VSimpleName: setParent
p920
Vinsert
p921
I42
VSimpleName: parent
p922
tp923
I4
s(Vinsert
p924
I42
VSimpleName: remove
p925
Vinsert
p926
I78
VMarkerAnnotation
p927
tp928
I1
s(g801
I42
g802
Vinsert
p929
I42
VSimpleName: getSqlStat
p930
tp931
I1
s(Vinsert
p932
I42
VSimpleName: console
p933
Vinsert
p934
I39
VPrimitiveType: void
p935
tp936
I1
s(Vinsert
p937
I42
VSimpleName: encode
p938
Vinsert
p939
I39
VPrimitiveType: byte
p940
tp941
I1
s(Vinsert
p942
I42
VSimpleName: setFilters
p943
Vinsert
p944
I42
VSimpleName: setUsername
p945
tp946
I2
s(Vinsert
p947
I42
VSimpleName: setWhere
p948
Vinsert
p949
I21
VExpressionStatement
p950
tp951
I13
s(Vinsert
p952
I42
VSimpleName: getParameterTypes
p953
Vinsert
p954
I42
VSimpleName: length
p955
tp956
I1
s(Vinsert
p957
I42
VSimpleName: getDefaultExpr
p958
Vinsert
p959
I42
VSimpleName: print0
p960
tp961
I1
s(Vinsert
p962
I42
VSimpleName: findColumn
p963
Vinsert
p964
I42
VSimpleName: close
p965
tp966
I1
s(Vinsert
p967
I42
VSimpleName: print
p968
Vinsert
p969
I27
VInfixExpression: !=
p970
tp971
I2
s(Vinsert
p972
I42
VSimpleName: toSQLString
p973
Vinsert
p974
I45
VStringLiteral: "SELECT /*+ no_merge(lo) */ DO.object_name, lo.SESSION_ID, lo.oracle_username, lo.OS_USER_NAME, DECODE(locked_mode, 1, 'SELECT', 2, 'SELECT FOR UPDATE / LOCK ROW SHARE', 3, 'INSERT/UPDATE/DELETE/LOCK ROW EXCLUSIVE', 4, 'CREATE INDEX/LOCK SHARE', 5, 'LOCK SHARE ROW EXCLUSIVE', 6, 'ALTER TABLE/DROP TABLE/DROP INDEX/TRUNCATE TABLE/LOCK EXCLUSIVE') AS sql_actions\u005cn"
p975
tp976
I1
s(Vinsert
p977
I42
VSimpleName: compareToIgnoreCase
p978
Vinsert
p979
I42
VSimpleName: aggregateFunctions
p980
tp981
I2
s(Vinsert
p982
I42
VSimpleName: reset
p983
Vinsert
p984
I13
VCharacterLiteral: ' '
p985
tp986
I1
s(Vinsert
p987
I42
VSimpleName: setBinaryStream
p988
Vinsert
p989
I42
VSimpleName: stmt
p990
tp991
I1
s(Vinsert
p992
I42
VSimpleName: getTableElementList
p993
Vinsert
p994
I8
VBlock
p995
tp996
I1
s(Vinsert
p997
I42
VSimpleName: makeHistogram
p998
Vinsert
p999
I38
VPrefixExpression: ++
p1000
tp1001
I1
s(Vinsert
p1002
I42
VSimpleName: getInvokeCount
p1003
Vinsert
p1004
I39
VPrimitiveType: void
p1005
tp1006
I1
s(Vinsert
p1007
I42
VSimpleName: addPartitionColumn
p1008
Vinsert
p1009
I42
VSimpleName: column
p1010
tp1011
I1
s(Vinsert
p1012
I42
VSimpleName: setSchemaObject
p1013
Vinsert
p1014
I8
VBlock
p1015
tp1016
I3
s(Vinsert
p1017
I42
VSimpleName: clone
p1018
Vinsert
p1019
I42
VSimpleName: PGWithQuery
p1020
tp1021
I2
s(Vinsert
p1022
I42
VSimpleName: getConstructor
p1023
Vinsert
p1024
I27
VInfixExpression: ==
p1025
tp1026
I1
s(Vinsert
p1027
I42
VSimpleName: getMaxExtents
p1028
Vinsert
p1029
I52
VThisExpression
p1030
tp1031
I1
s(Vinsert
p1032
I42
VSimpleName: isModifiesSqlData
p1033
Vinsert
p1034
I42
VSimpleName: x
p1035
tp1036
I1
s(Vinsert
p1037
I42
VSimpleName: nextToken
p1038
Vinsert
p1039
I40
VQualifiedName: Token.COLON
p1040
tp1041
I1
s(Vinsert
p1042
I42
VSimpleName: setTestWhileIdle
p1043
Vinsert
p1044
I9
VBooleanLiteral: true
p1045
tp1046
I1
s(Vinsert
p1047
I42
VSimpleName: getLogger
p1048
Vinsert
p1049
I42
VSimpleName: loggerName
p1050
tp1051
I1
s(Vinsert
p1052
I42
VSimpleName: assertFalse
p1053
Vinsert
p1054
I40
VQualifiedName: MethodType.M1
p1055
tp1056
I1
s(g957
I42
g958
Vinsert
p1057
I42
VSimpleName: ucase
p1058
tp1059
I1
s(Vinsert
p1060
I42
VSimpleName: get
p1061
Vinsert
p1062
I42
VSimpleName: Method
p1063
tp1064
I2
s(Vinsert
p1065
I42
VSimpleName: execute
p1066
Vinsert
p1067
I42
VSimpleName: stmt
p1068
tp1069
I8
s(Vinsert
p1070
I42
VSimpleName: assertTrue
p1071
Vinsert
p1072
I65
VTagElement: @see
p1073
tp1074
I24
s(Vinsert
p1075
I42
VSimpleName: prepareStatement
p1076
Vinsert
p1077
I42
VSimpleName: pooledStmt0
p1078
tp1079
I2
s(Vinsert
p1080
I42
VSimpleName: toPGString
p1081
Vinsert
p1082
I45
VStringLiteral: "\u005ctAND lat > 0\u005cn"
p1083
tp1084
I2
s(Vinsert
p1085
I42
VSimpleName: add
p1086
Vinsert
p1087
I74
VParameterizedType: ArrayList<SQLObject>
p1088
tp1089
I27
s(Vinsert
p1090
I42
VSimpleName: addItem
p1091
Vinsert
p1092
I42
VSimpleName: SQLExpr
p1093
tp1094
I3
s(Vinsert
p1095
I42
VSimpleName: get
p1096
Vinsert
p1097
I43
VSimpleType: Object
p1098
tp1099
I16
s(Vinsert
p1100
I42
VSimpleName: setPublicKeyFile
p1101
Vinsert
p1102
I42
VSimpleName: DecryptException
p1103
tp1104
I1
s(Vinsert
p1105
I42
VSimpleName: currentTimeMillis
p1106
Vinsert
p1107
I32
VMethodInvocation
p1108
tp1109
I32
s(Vinsert
p1110
I42
VSimpleName: println
p1111
Vinsert
p1112
I45
VStringLiteral: "\u005ctAND b4.system_bom_id = c1.system_bom_id\u005cn"
p1113
tp1114
I1
s(Vinsert
p1115
I42
VSimpleName: hashCode
p1116
Vinsert
p1117
I42
VSimpleName: option
p1118
tp1119
I1
s(Vinsert
p1120
I42
VSimpleName: isCount
p1121
Vinsert
p1122
I78
VMarkerAnnotation
p1123
tp1124
I1
s(Vinsert
p1125
I42
VSimpleName: getDisableError
p1126
Vinsert
p1127
I32
VMethodInvocation
p1128
tp1129
I1
s(Vinsert
p1130
I42
VSimpleName: toSQLString
p1131
Vinsert
p1132
I45
VStringLiteral: "\u005ctAND p.prod_id = s.prod_id\u005cn"
p1133
tp1134
I1
s(Vinsert
p1135
I42
VSimpleName: incrementExecuteCount
p1136
Vinsert
p1137
I32
VMethodInvocation
p1138
tp1139
I4
s(Vinsert
p1140
I42
VSimpleName: afterExecute
p1141
Vinsert
p1142
I32
VMethodInvocation
p1143
tp1144
I3
s(Vinsert
p1145
I42
VSimpleName: isDebugEnabled
p1146
Vinsert
p1147
I42
VSimpleName: getLog
p1148
tp1149
I1
s(Vinsert
p1150
I42
VSimpleName: numberString
p1151
Vinsert
p1152
I42
VSimpleName: name
p1153
tp1154
I1
s(Vinsert
p1155
I42
VSimpleName: getBuckets
p1156
Vinsert
p1157
I42
VSimpleName: buckets
p1158
tp1159
I1
s(Vinsert
p1160
I42
VSimpleName: findOne
p1161
Vinsert
p1162
I42
VSimpleName: findById
p1163
tp1164
I1
s(Vinsert
p1165
I42
VSimpleName: setExpr
p1166
Vinsert
p1167
I43
VSimpleType: OracleSelectTableReference
p1168
tp1169
I1
s(Vinsert
p1170
I42
VSimpleName: incrementAndGet
p1171
Vinsert
p1172
I42
VSimpleName: resetCount
p1173
tp1174
I4
s(Vinsert
p1175
I42
VSimpleName: stringVal
p1176
Vinsert
p1177
I42
VSimpleName: name
p1178
tp1179
I3
s(Vinsert
p1180
I42
VSimpleName: insert
p1181
Vinsert
p1182
I21
VExpressionStatement
p1183
tp1184
I2
s(Vinsert
p1185
I42
VSimpleName: nextToken
p1186
Vinsert
p1187
I43
VSimpleType: MySqlShowPluginsStatement
p1188
tp1189
I1
s(g71
I42
g72
Vinsert
p1190
I36
VParenthesizedExpression
p1191
tp1192
I1
s(Vinsert
p1193
I42
VSimpleName: toUpperCase
p1194
Vinsert
p1195
I32
VMethodInvocation
p1196
tp1197
I2
s(Vinsert
p1198
I42
VSimpleName: transformOracleToPostgresql
p1199
Vinsert
p1200
I42
VSimpleName: SQLParserUtils
p1201
tp1202
I3
s(Vinsert
p1203
I42
VSimpleName: token
p1204
Vinsert
p1205
I40
VQualifiedName: Token.ORDER
p1206
tp1207
I1
s(Vinsert
p1208
I42
VSimpleName: read
p1209
Vinsert
p1210
I42
VSimpleName: test_merge
p1211
tp1212
I1
s(Vinsert
p1213
I42
VSimpleName: close
p1214
Vinsert
p1215
I42
VSimpleName: getResultSetConcurrency
p1216
tp1217
I1
s(Vinsert
p1218
I42
VSimpleName: hashCode64
p1219
Vinsert
p1220
I42
VSimpleName: findTableOrView
p1221
tp1222
I1
s(g507
I42
g508
Vinsert
p1223
I39
VPrimitiveType: int
p1224
tp1225
I1
s(Vinsert
p1226
I42
VSimpleName: put
p1227
Vinsert
p1228
I45
VStringLiteral: "CLOSE"
p1229
tp1230
I1
s(Vinsert
p1231
I42
VSimpleName: assertSame
p1232
Vinsert
p1233
I42
VSimpleName: dataSource
p1234
tp1235
I1
s(Vinsert
p1236
I42
VSimpleName: getUseCount
p1237
Vinsert
p1238
I83
VModifier: public
p1239
tp1240
I1
s(Vinsert
p1241
I42
VSimpleName: getInstances
p1242
Vinsert
p1243
I74
VParameterizedType: Set<DruidDataSource>
p1244
tp1245
I1
s(Vinsert
p1246
I42
VSimpleName: nextToken
p1247
Vinsert
p1248
I42
VSimpleName: primaryKey
p1249
tp1250
I3
s(Vinsert
p1251
I42
VSimpleName: parseLong
p1252
Vinsert
p1253
I42
VSimpleName: a
p1254
tp1255
I1
s(Vinsert
p1256
I42
VSimpleName: setJdbcUrl
p1257
Vinsert
p1258
I42
VSimpleName: setMaxConnectionsPerPartition
p1259
tp1260
I1
s(Vinsert
p1261
I42
VSimpleName: setLeft
p1262
Vinsert
p1263
I40
VQualifiedName: x.bracket
p1264
tp1265
I1
s(Vinsert
p1266
I42
VSimpleName: getColumns
p1267
Vinsert
p1268
I45
VStringLiteral: "*"
p1269
tp1270
I1
s(Vinsert
p1271
I42
VSimpleName: setRemoved
p1272
Vinsert
p1273
I32
VMethodInvocation
p1274
tp1275
I3
s(g1140
I42
g1141
Vinsert
p1276
I8
VBlock
p1277
tp1278
I2
s(Vinsert
p1279
I42
VSimpleName: addTrace
p1280
Vinsert
p1281
I60
VVariableDeclarationStatement
p1282
tp1283
I1
s(Vinsert
p1284
I42
VSimpleName: getReturning
p1285
Vinsert
p1286
I21
VExpressionStatement
p1287
tp1288
I3
s(Vinsert
p1289
I42
VSimpleName: parseInt
p1290
Vinsert
p1291
I42
VSimpleName: columnLabel
p1292
tp1293
I6
s(Vinsert
p1294
I42
VSimpleName: assertEquals
p1295
Vinsert
p1296
I26
VImportDeclaration
p1297
tp1298
I6
s(Vinsert
p1299
I42
VSimpleName: setMaxWait
p1300
Vinsert
p1301
I42
VSimpleName: getInitialSize
p1302
tp1303
I1
s(Vinsert
p1304
I42
VSimpleName: setLabelName
p1305
Vinsert
p1306
I8
VBlock
p1307
tp1308
I1
s(Vinsert
p1309
I42
VSimpleName: assertNotNull
p1310
Vinsert
p1311
I42
VSimpleName: getColumn
p1312
tp1313
I1
s(Vinsert
p1314
I42
VSimpleName: getUsing
p1315
Vinsert
p1316
I42
VSimpleName: first
p1317
tp1318
I1
s(Vinsert
p1319
I42
VSimpleName: println
p1320
Vinsert
p1321
I42
VSimpleName: exit
p1322
tp1323
I1
s(Vinsert
p1324
I42
VSimpleName: setOutParameter
p1325
Vinsert
p1326
I42
VSimpleName: lexer
p1327
tp1328
I2
s(Vinsert
p1329
I42
VSimpleName: formatOracle
p1330
Vinsert
p1331
I83
VModifier: public
p1332
tp1333
I1
s(Vinsert
p1334
I42
VSimpleName: toSQLString
p1335
Vinsert
p1336
I45
VStringLiteral: "\u005cn\u005ctEND_TIME_ TIMESTAMP(6),"
p1337
tp1338
I2
s(Vinsert
p1339
I42
VSimpleName: output
p1340
Vinsert
p1341
I21
VExpressionStatement
p1342
tp1343
I28
s(Vinsert
p1344
I42
VSimpleName: incrementAndGet
p1345
Vinsert
p1346
I38
VPrefixExpression: -
p1347
tp1348
I1
s(g1105
I42
g1106
Vinsert
p1349
I60
VVariableDeclarationStatement
p1350
tp1351
I17
s(Vinsert
p1352
I42
VSimpleName: getFetchRowCount
p1353
Vinsert
p1354
I42
VSimpleName: sqlStat
p1355
tp1356
I2
s(g1165
I42
g1166
Vinsert
p1357
I39
VPrimitiveType: void
p1358
tp1359
I1
s(Vinsert
p1360
I42
VSimpleName: charAt
p1361
Vinsert
p1362
I42
VSimpleName: name
p1363
tp1364
I13
s(Vinsert
p1365
I42
VSimpleName: getConnection
p1366
Vinsert
p1367
I45
VStringLiteral: "/"
p1368
tp1369
I1
s(Vinsert
p1370
I42
VSimpleName: getInitStackTrace
p1371
Vinsert
p1372
I59
VVariableDeclarationFragment
p1373
tp1374
I1
s(Vinsert
p1375
I42
VSimpleName: parseLong
p1376
Vinsert
p1377
I42
VSimpleName: val
p1378
tp1379
I1
s(Vinsert
p1380
I42
VSimpleName: setDatabase
p1381
Vinsert
p1382
I42
VSimpleName: SQLName
p1383
tp1384
I1
s(Vinsert
p1385
I42
VSimpleName: setOption
p1386
Vinsert
p1387
I21
VExpressionStatement
p1388
tp1389
I4
s(Vinsert
p1390
I42
VSimpleName: getAndIncrement
p1391
Vinsert
p1392
I42
VSimpleName: increment
p1393
tp1394
I2
s(Vinsert
p1395
I42
VSimpleName: getOperator
p1396
Vinsert
p1397
I27
VInfixExpression: >=
p1398
tp1399
I1
s(Vinsert
p1400
I42
VSimpleName: getHints
p1401
Vinsert
p1402
I42
VSimpleName: print
p1403
tp1404
I2
s(Vinsert
p1405
I42
VSimpleName: getShort
p1406
Vinsert
p1407
I42
VSimpleName: getBoolean
p1408
tp1409
I1
s(Vinsert
p1410
I42
VSimpleName: setSource
p1411
Vinsert
p1412
I43
VSimpleType: PGExtractExpr
p1413
tp1414
I1
s(Vinsert
p1415
I42
VSimpleName: setCondition
p1416
Vinsert
p1417
I8
VBlock
p1418
tp1419
I1
s(Vinsert
p1420
I42
VSimpleName: createOutputVisitor
p1421
Vinsert
p1422
I42
VSimpleName: SQLASTOutputVisitor
p1423
tp1424
I21
s(Vinsert
p1425
I42
VSimpleName: setTenantColumn
p1426
Vinsert
p1427
I42
VSimpleName: config
p1428
tp1429
I1
s(Vinsert
p1430
I42
VSimpleName: nextToken
p1431
Vinsert
p1432
I45
VStringLiteral: "/*hello \u005cnworld*/"
p1433
tp1434
I1
s(Vinsert
p1435
I42
VSimpleName: assertEquals
p1436
Vinsert
p1437
I45
VStringLiteral: "\u005cn\u005ctUPGRADE PARTITIONING"
p1438
tp1439
I1
s(g1218
I42
g1219
Vinsert
p1440
I39
VPrimitiveType: boolean
p1441
tp1442
I1
s(Vinsert
p1443
I42
VSimpleName: assertEquals
p1444
Vinsert
p1445
I45
VStringLiteral: "\u005cn\u005ctANALYZE PARTITION p1"
p1446
tp1447
I1
s(Vinsert
p1448
I42
VSimpleName: hashCode
p1449
Vinsert
p1450
I83
VModifier: public
p1451
tp1452
I3
s(g937
I42
g938
Vinsert
p1453
I42
VSimpleName: bytes
p1454
tp1455
I1
s(Vinsert
p1456
I42
VSimpleName: newInstance
p1457
Vinsert
p1458
I42
VSimpleName: className
p1459
tp1460
I1
s(Vinsert
p1461
I42
VSimpleName: setConnectionProperties
p1462
Vinsert
p1463
I42
VSimpleName: setFilters
p1464
tp1465
I1
s(Vinsert
p1466
I42
VSimpleName: nextToken
p1467
Vinsert
p1468
I42
VSimpleName: offset
p1469
tp1470
I1
s(Vinsert
p1471
I42
VSimpleName: countDown
p1472
Vinsert
p1473
I27
VInfixExpression: +
p1474
tp1475
I2
s(Vinsert
p1476
I42
VSimpleName: getLogger
p1477
Vinsert
p1478
I42
VSimpleName: resultSetLoggerName
p1479
tp1480
I3
s(Vinsert
p1481
I42
VSimpleName: getNCharacterStream
p1482
Vinsert
p1483
I59
VVariableDeclarationFragment
p1484
tp1485
I1
s(Vinsert
p1486
I42
VSimpleName: getExpr
p1487
Vinsert
p1488
I83
VModifier: public
p1489
tp1490
I7
s(Vinsert
p1491
I42
VSimpleName: getAopPatterns
p1492
Vinsert
p1493
I32
VMethodInvocation
p1494
tp1495
I1
s(Vinsert
p1496
I42
VSimpleName: evaluate
p1497
Vinsert
p1498
I60
VVariableDeclarationStatement
p1499
tp1500
I8
s(Vinsert
p1501
I42
VSimpleName: assertTrue
p1502
Vinsert
p1503
I34
VNumberLiteral: 1
p1504
tp1505
I1
s(Vinsert
p1506
I42
VSimpleName: setSubQuery
p1507
Vinsert
p1508
I42
VSimpleName: not
p1509
tp1510
I1
s(Vinsert
p1511
I42
VSimpleName: unwrap
p1512
Vinsert
p1513
I60
VVariableDeclarationStatement
p1514
tp1515
I4
s(Vinsert
p1516
I42
VSimpleName: add
p1517
Vinsert
p1518
I40
VQualifiedName: x.statements
p1519
tp1520
I1
s(Vinsert
p1521
I42
VSimpleName: assertNotNull
p1522
Vinsert
p1523
I43
VSimpleType: UnsupportedOperationException
p1524
tp1525
I1
s(Vinsert
p1526
I42
VSimpleName: token
p1527
Vinsert
p1528
I42
VSimpleName: intervalExpr
p1529
tp1530
I2
s(Vinsert
p1531
I42
VSimpleName: clone
p1532
Vinsert
p1533
I40
VQualifiedName: x.select
p1534
tp1535
I1
s(Vinsert
p1536
I42
VSimpleName: getDeclaredConstructor
p1537
Vinsert
p1538
I59
VVariableDeclarationFragment
p1539
tp1540
I1
s(g502
I42
g503
Vinsert
p1541
I42
VSimpleName: exprC
p1542
tp1543
I1
s(Vinsert
p1544
I42
VSimpleName: parseStatements
p1545
Vinsert
p1546
I43
VSimpleType: List
p1547
tp1548
I54
s(Vinsert
p1549
I42
VSimpleName: toPGString
p1550
Vinsert
p1551
I45
VStringLiteral: "\u005cnFROM films"
p1552
tp1553
I1
s(Vinsert
p1554
I42
VSimpleName: getLog
p1555
Vinsert
p1556
I22
VFieldAccess
p1557
tp1558
I1
s(Vinsert
p1559
I42
VSimpleName: loadFromFile
p1560
Vinsert
p1561
I74
VParameterizedType: HashSet<String>
p1562
tp1563
I3
s(Vinsert
p1564
I42
VSimpleName: getParamType
p1565
Vinsert
p1566
I25
VIfStatement
p1567
tp1568
I3
s(Vinsert
p1569
I42
VSimpleName: assertEquals
p1570
Vinsert
p1571
I42
VSimpleName: test_concat
p1572
tp1573
I1
s(Vinsert
p1574
I42
VSimpleName: assertEquals
p1575
Vinsert
p1576
I42
VSimpleName: toPGString
p1577
tp1578
I3
s(Vinsert
p1579
I42
VSimpleName: startsWith
p1580
Vinsert
p1581
I43
VSimpleType: String
p1582
tp1583
I7
s(Vinsert
p1584
I42
VSimpleName: setUser
p1585
Vinsert
p1586
I42
VSimpleName: SQLName
p1587
tp1588
I1
s(Vinsert
p1589
I42
VSimpleName: setAccessModel
p1590
Vinsert
p1591
I21
VExpressionStatement
p1592
tp1593
I2
s(Vinsert
p1594
I42
VSimpleName: getExternalDirectory
p1595
Vinsert
p1596
I42
VSimpleName: print0
p1597
tp1598
I1
s(Vinsert
p1599
I42
VSimpleName: stringVal
p1600
Vinsert
p1601
I40
VQualifiedName: SQLWithSubqueryClause.Entry
p1602
tp1603
I1
s(Vinsert
p1604
I42
VSimpleName: remove
p1605
Vinsert
p1606
I52
VThisExpression
p1607
tp1608
I2
s(g1456
I42
g1457
Vinsert
p1609
I60
VVariableDeclarationStatement
p1610
tp1611
I4
s(Vinsert
p1612
I42
VSimpleName: valueOf
p1613
Vinsert
p1614
I42
VSimpleName: prime
p1615
tp1616
I1
s(Vinsert
p1617
I42
VSimpleName: resultSet_setFetchDirection
p1618
Vinsert
p1619
I42
VSimpleName: createChain
p1620
tp1621
I1
s(Vinsert
p1622
I42
VSimpleName: setParent
p1623
Vinsert
p1624
I42
VSimpleName: SQLSubPartition
p1625
tp1626
I2
s(Vinsert
p1627
I42
VSimpleName: formatMySql
p1628
Vinsert
p1629
I42
VSimpleName: sql
p1630
tp1631
I3
s(Vinsert
p1632
I42
VSimpleName: expr
p1633
Vinsert
p1634
I43
VSimpleType: MySqlMatchAgainstExpr
p1635
tp1636
I1
s(Vinsert
p1637
I42
VSimpleName: setExpr
p1638
Vinsert
p1639
I42
VSimpleName: SQLNotExpr
p1640
tp1641
I2
s(Vinsert
p1642
I42
VSimpleName: getValidationQuery
p1643
Vinsert
p1644
I42
VSimpleName: context
p1645
tp1646
I2
s(Vinsert
p1647
I42
VSimpleName: list
p1648
Vinsert
p1649
I42
VSimpleName: LocalVirtualMachine
p1650
tp1651
I1
s(Vinsert
p1652
I42
VSimpleName: getMethodName
p1653
Vinsert
p1654
I83
VModifier: public
p1655
tp1656
I1
s(g1329
I42
g1330
Vinsert
p1657
I42
VSimpleName: SQLUtils
p1658
tp1659
I1
s(Vinsert
p1660
I42
VSimpleName: getTarget
p1661
Vinsert
p1662
I8
VBlock
p1663
tp1664
I2
s(Vinsert
p1665
I42
VSimpleName: toSQLString
p1666
Vinsert
p1667
I45
VStringLiteral: "), 'yyyy-mm-dd HH24:mi:ss'), t2.end_time = to_date((\u005cn"
p1668
tp1669
I1
s(Vinsert
p1670
I42
VSimpleName: getRight
p1671
Vinsert
p1672
I42
VSimpleName: x
p1673
tp1674
I18
s(Vinsert
p1675
I42
VSimpleName: setInt
p1676
Vinsert
p1677
I42
VSimpleName: COUNT
p1678
tp1679
I1
s(Vinsert
p1680
I42
VSimpleName: setExpr
p1681
Vinsert
p1682
I83
VModifier: public
p1683
tp1684
I4
s(Vinsert
p1685
I42
VSimpleName: add
p1686
Vinsert
p1687
I42
VSimpleName: Integer
p1688
tp1689
I1
s(Vinsert
p1690
I42
VSimpleName: equals
p1691
Vinsert
p1692
I42
VSimpleName: natural
p1693
tp1694
I2
s(Vinsert
p1695
I42
VSimpleName: getConnection
p1696
Vinsert
p1697
I42
VSimpleName: setMasterEnable
p1698
tp1699
I1
s(Vinsert
p1700
I42
VSimpleName: setSelectUnionCheck
p1701
Vinsert
p1702
I59
VVariableDeclarationFragment
p1703
tp1704
I1
s(Vinsert
p1705
I42
VSimpleName: getFirstEntity
p1706
Vinsert
p1707
I42
VSimpleName: getTableSource
p1708
tp1709
I4
s(Vinsert
p1710
I42
VSimpleName: getPlatformMBeanServer
p1711
Vinsert
p1712
I42
VSimpleName: MBeanServer
p1713
tp1714
I3
s(Vinsert
p1715
I42
VSimpleName: getRawConnection
p1716
Vinsert
p1717
I59
VVariableDeclarationFragment
p1718
tp1719
I2
s(Vinsert
p1720
I42
VSimpleName: createStatement
p1721
Vinsert
p1722
I42
VSimpleName: tableName
p1723
tp1724
I2
s(Vinsert
p1725
I42
VSimpleName: getSchemaObject
p1726
Vinsert
p1727
I36
VParenthesizedExpression
p1728
tp1729
I1
s(Vinsert
p1730
I42
VSimpleName: nextToken
p1731
Vinsert
p1732
I40
VQualifiedName: Token.WHEN
p1733
tp1734
I1
s(Vinsert
p1735
I42
VSimpleName: setParent
p1736
Vinsert
p1737
I42
VSimpleName: setTablespace
p1738
tp1739
I2
s(Vinsert
p1740
I42
VSimpleName: loadResource
p1741
Vinsert
p1742
I45
VStringLiteral: "META-INF/druid-filter-wall-permit-name-mysql-default.txt"
p1743
tp1744
I1
s(Vinsert
p1745
I42
VSimpleName: getValueExpr
p1746
Vinsert
p1747
I25
VIfStatement
p1748
tp1749
I1
s(Vinsert
p1750
I42
VSimpleName: createOutputVisitor
p1751
Vinsert
p1752
I44
VSingleVariableDeclaration
p1753
tp1754
I2
s(Vinsert
p1755
I42
VSimpleName: println
p1756
Vinsert
p1757
I43
VSimpleType: MySqlSchemaStatVisitor
p1758
tp1759
I129
s(Vinsert
p1760
I42
VSimpleName: unlock
p1761
Vinsert
p1762
I43
VSimpleType: ValidTask
p1763
tp1764
I1
s(Vinsert
p1765
I42
VSimpleName: getRelationships
p1766
Vinsert
p1767
I42
VSimpleName: visitor
p1768
tp1769
I12
s(Vinsert
p1770
I42
VSimpleName: setTenantValue
p1771
Vinsert
p1772
I42
VSimpleName: testMySql
p1773
tp1774
I6
s(Vinsert
p1775
I42
VSimpleName: nextToken
p1776
Vinsert
p1777
I40
VQualifiedName: Token.PRIMARY
p1778
tp1779
I1
s(Vinsert
p1780
I42
VSimpleName: getDruidDataSourceInstances
p1781
Vinsert
p1782
I31
VMethodDeclaration
p1783
tp1784
I1
s(Vinsert
p1785
I42
VSimpleName: values
p1786
Vinsert
p1787
I42
VSimpleName: getInstance
p1788
tp1789
I2
s(Vinsert
p1790
I42
VSimpleName: getClob
p1791
Vinsert
p1792
I43
VSimpleType: Clob
p1793
tp1794
I1
s(Vinsert
p1795
I42
VSimpleName: valueOf
p1796
Vinsert
p1797
I40
VQualifiedName: JdbcParameterNull.DATE
p1798
tp1799
I1
s(Vinsert
p1800
I42
VSimpleName: nanoTime
p1801
Vinsert
p1802
I42
VSimpleName: lastExecuteStartNano
p1803
tp1804
I1
s(Vinsert
p1805
I42
VSimpleName: assertTrue
p1806
Vinsert
p1807
I42
VSimpleName: MySqlWallTest12
p1808
tp1809
I1
s(Vinsert
p1810
I42
VSimpleName: parseStatements
p1811
Vinsert
p1812
I45
VStringLiteral: "    END LOOP;\u005cn"
p1813
tp1814
I1
s(Vinsert
p1815
I42
VSimpleName: getExpr
p1816
Vinsert
p1817
I21
VExpressionStatement
p1818
tp1819
I23
s(Vinsert
p1820
I42
VSimpleName: getUsers
p1821
Vinsert
p1822
I42
VSimpleName: MySqlDropUser
p1823
tp1824
I1
s(Vinsert
p1825
I42
VSimpleName: getConnection
p1826
Vinsert
p1827
I21
VExpressionStatement
p1828
tp1829
I32
s(Vinsert
p1830
I42
VSimpleName: execute
p1831
Vinsert
p1832
I42
VSimpleName: sql
p1833
tp1834
I2
s(Vinsert
p1835
I42
VSimpleName: getTableSpace
p1836
Vinsert
p1837
I32
VMethodInvocation
p1838
tp1839
I2
s(Vinsert
p1840
I42
VSimpleName: divide
p1841
Vinsert
p1842
I41
VReturnStatement
p1843
tp1844
I1
s(Vinsert
p1845
I42
VSimpleName: toSQLString
p1846
Vinsert
p1847
I45
VStringLiteral: "CREATE OR REPLACE TRIGGER ECC.GAPM_PROJECT_INFO_SYNC_IOA_t\u005cn"
p1848
tp1849
I1
s(g806
I42
g807
Vinsert
p1850
I42
VSimpleName: name
p1851
tp1852
I2
s(Vinsert
p1853
I42
VSimpleName: cloneTo
p1854
Vinsert
p1855
I60
VVariableDeclarationStatement
p1856
tp1857
I2
s(Vinsert
p1858
I42
VSimpleName: getInstance
p1859
Vinsert
p1860
I42
VSimpleName: PushServiceTest
p1861
tp1862
I1
s(Vinsert
p1863
I42
VSimpleName: put
p1864
Vinsert
p1865
I42
VSimpleName: context
p1866
tp1867
I1
s(Vinsert
p1868
I42
VSimpleName: createMockPreparedStatement
p1869
Vinsert
p1870
I42
VSimpleName: driver
p1871
tp1872
I1
s(Vinsert
p1873
I42
VSimpleName: setValue
p1874
Vinsert
p1875
I45
VStringLiteral: "TRUE"
p1876
tp1877
I1
s(Vinsert
p1878
I42
VSimpleName: equals
p1879
Vinsert
p1880
I43
VSimpleType: SQLExpr
p1881
tp1882
I3
s(Vinsert
p1883
I42
VSimpleName: isLinear
p1884
Vinsert
p1885
I42
VSimpleName: x
p1886
tp1887
I2
s(Vinsert
p1888
I42
VSimpleName: updateTime
p1889
Vinsert
p1890
I43
VSimpleType: SQLException
p1891
tp1892
I1
s(Vinsert
p1893
I42
VSimpleName: charAt
p1894
Vinsert
p1895
I42
VSimpleName: userName
p1896
tp1897
I1
s(Vinsert
p1898
I42
VSimpleName: append
p1899
Vinsert
p1900
I13
VCharacterLiteral: '\u005c\u005c'
p1901
tp1902
I2
s(Vinsert
p1903
I42
VSimpleName: getMinValue
p1904
Vinsert
p1905
I45
VStringLiteral: " NOMAXVALUE"
p1906
tp1907
I1
s(Vinsert
p1908
I42
VSimpleName: assertNotNull
p1909
Vinsert
p1910
I42
VSimpleName: TestCase
p1911
tp1912
I1
s(Vinsert
p1913
I42
VSimpleName: add
p1914
Vinsert
p1915
I43
VSimpleType: SQLName
p1916
tp1917
I1
s(Vinsert
p1918
I42
VSimpleName: add
p1919
Vinsert
p1920
I43
VSimpleType: SQLBinaryOpExpr
p1921
tp1922
I2
s(Vinsert
p1923
I42
VSimpleName: getTargetList
p1924
Vinsert
p1925
I42
VSimpleName: parameters
p1926
tp1927
I1
s(Vinsert
p1928
I42
VSimpleName: clone
p1929
Vinsert
p1930
I42
VSimpleName: setParent
p1931
tp1932
I1
s(Vinsert
p1933
I42
VSimpleName: assertNull
p1934
Vinsert
p1935
I42
VSimpleName: Exception
p1936
tp1937
I1
s(Vinsert
p1938
I42
VSimpleName: accept
p1939
Vinsert
p1940
I42
VSimpleName: visitor
p1941
tp1942
I400
s(Vinsert
p1943
I42
VSimpleName: getRawPreparedStatement
p1944
Vinsert
p1945
I42
VSimpleName: stmt
p1946
tp1947
I2
s(Vinsert
p1948
I42
VSimpleName: getTableName
p1949
Vinsert
p1950
I11
VCastExpression
p1951
tp1952
I1
s(Vinsert
p1953
I42
VSimpleName: setMaxFieldSize
p1954
Vinsert
p1955
I27
VInfixExpression: !=
p1956
tp1957
I1
s(Vinsert
p1958
I42
VSimpleName: toSQLString
p1959
Vinsert
p1960
I45
VStringLiteral: "\u005ct\u005ctSTORAGE (\u005cn"
p1961
tp1962
I6
s(Vinsert
p1963
I42
VSimpleName: setSimpleExpression
p1964
Vinsert
p1965
I27
VInfixExpression: !=
p1966
tp1967
I1
s(Vinsert
p1968
I42
VSimpleName: parseTableSource
p1969
Vinsert
p1970
I32
VMethodInvocation
p1971
tp1972
I5
s(Vinsert
p1973
I42
VSimpleName: getItems
p1974
Vinsert
p1975
I40
VQualifiedName: Token.LITERAL_ALIAS
p1976
tp1977
I1
s(Vinsert
p1978
I42
VSimpleName: getStatData
p1979
Vinsert
p1980
I42
VSimpleName: sessionStat
p1981
tp1982
I2
s(g341
I42
g342
Vinsert
p1983
I27
VInfixExpression: ==
p1984
tp1985
I2
s(Vinsert
p1986
I42
VSimpleName: evalExpr
p1987
Vinsert
p1988
I42
VSimpleName: TestCase
p1989
tp1990
I2
s(Vinsert
p1991
I42
VSimpleName: info
p1992
Vinsert
p1993
I52
VThisExpression
p1994
tp1995
I1
s(Vinsert
p1996
I42
VSimpleName: getValues
p1997
Vinsert
p1998
I42
VSimpleName: OdpsValuesTableSource
p1999
tp2000
I1
s(Vinsert
p2001
I42
VSimpleName: check
p2002
Vinsert
p2003
I32
VMethodInvocation
p2004
tp2005
I24
s(g464
I42
g465
Vinsert
p2006
I42
VSimpleName: clone
p2007
tp2008
I1
s(Vinsert
p2009
I42
VSimpleName: parseHints
p2010
Vinsert
p2011
I43
VSimpleType: List
p2012
tp2013
I1
s(Vinsert
p2014
I42
VSimpleName: setExpr
p2015
Vinsert
p2016
I27
VInfixExpression: !=
p2017
tp2018
I16
s(Vinsert
p2019
I42
VSimpleName: getTime
p2020
Vinsert
p2021
I42
VSimpleName: value
p2022
tp2023
I2
s(Vinsert
p2024
I42
VSimpleName: isEmpty
p2025
Vinsert
p2026
I42
VSimpleName: clear
p2027
tp2028
I1
s(Vinsert
p2029
I42
VSimpleName: set
p2030
Vinsert
p2031
I40
VQualifiedName: Token.ON
p2032
tp2033
I1
s(Vinsert
p2034
I42
VSimpleName: getName
p2035
Vinsert
p2036
I42
VSimpleName: Throwable
p2037
tp2038
I1
s(Vinsert
p2039
I42
VSimpleName: setUrl
p2040
Vinsert
p2041
I83
VModifier: public
p2042
tp2043
I2
s(Vinsert
p2044
I42
VSimpleName: computeDataType
p2045
Vinsert
p2046
I32
VMethodInvocation
p2047
tp2048
I3
s(Vinsert
p2049
I42
VSimpleName: toSQLString
p2050
Vinsert
p2051
I45
VStringLiteral: "\u005ctINITIAL 1048576\u005cn"
p2052
tp2053
I2
s(Vinsert
p2054
I42
VSimpleName: addExecuteTime
p2055
Vinsert
p2056
I42
VSimpleName: updateCountArray
p2057
tp2058
I1
s(Vinsert
p2059
I42
VSimpleName: substring
p2060
Vinsert
p2061
I42
VSimpleName: tableName
p2062
tp2063
I2
s(Vinsert
p2064
I42
VSimpleName: visit
p2065
Vinsert
p2066
I43
VSimpleType: OdpsSelectQueryBlock
p2067
tp2068
I1
s(Vinsert
p2069
I42
VSimpleName: incrementFunctionInvoke
p2070
Vinsert
p2071
I33
VNullLiteral
p2072
tp2073
I1
s(Vinsert
p2074
I42
VSimpleName: setReturnDataType
p2075
Vinsert
p2076
I59
VVariableDeclarationFragment
p2077
tp2078
I1
s(Vinsert
p2079
I42
VSimpleName: init
p2080
Vinsert
p2081
I43
VSimpleType: SQLException
p2082
tp2083
I3
s(Vinsert
p2084
I42
VSimpleName: invoke
p2085
Vinsert
p2086
I44
VSingleVariableDeclaration
p2087
tp2088
I1
s(Vinsert
p2089
I42
VSimpleName: assertFalse
p2090
Vinsert
p2091
I42
VSimpleName: isValidateMySql
p2092
tp2093
I3
s(Vinsert
p2094
I42
VSimpleName: getResultSetMetaDataRaw
p2095
Vinsert
p2096
I42
VSimpleName: getResultSetMetaDataRaw
p2097
tp2098
I7
s(Vinsert
p2099
I42
VSimpleName: updateDouble
p2100
Vinsert
p2101
I42
VSimpleName: getFloat
p2102
tp2103
I1
s(Vinsert
p2104
I42
VSimpleName: setDistributeBy
p2105
Vinsert
p2106
I60
VVariableDeclarationStatement
p2107
tp2108
I1
s(g1883
I42
g1884
Vinsert
p2109
I31
VMethodDeclaration
p2110
tp2111
I1
s(g881
I42
g882
Vinsert
p2112
I42
VSimpleName: isSelect
p2113
tp2114
I1
s(Vinsert
p2115
I42
VSimpleName: setColumn
p2116
Vinsert
p2117
I42
VSimpleName: x
p2118
tp2119
I2
s(Vinsert
p2120
I42
VSimpleName: identifierEquals
p2121
Vinsert
p2122
I42
VSimpleName: nextToken
p2123
tp2124
I3
s(Vinsert
p2125
I42
VSimpleName: getProfiletat
p2126
Vinsert
p2127
I8
VBlock
p2128
tp2129
I1
s(Vinsert
p2130
I42
VSimpleName: setTime
p2131
Vinsert
p2132
I40
VQualifiedName: java.sql.Time
p2133
tp2134
I1
s(Vinsert
p2135
I42
VSimpleName: length
p2136
Vinsert
p2137
I34
VNumberLiteral: 1
p2138
tp2139
I3
s(Vinsert
p2140
I42
VSimpleName: setOrderBy
p2141
Vinsert
p2142
I42
VSimpleName: setOrderBy
p2143
tp2144
I1
s(Vinsert
p2145
I42
VSimpleName: indexOf
p2146
Vinsert
p2147
I43
VSimpleType: Object
p2148
tp2149
I1
s(Vinsert
p2150
I42
VSimpleName: assertFalse
p2151
Vinsert
p2152
I42
VSimpleName: setHintAllow
p2153
tp2154
I1
s(g1883
I42
g1884
Vinsert
p2155
I8
VBlock
p2156
tp2157
I2
s(Vinsert
p2158
I42
VSimpleName: getReferencingColumns
p2159
Vinsert
p2160
I42
VSimpleName: accept
p2161
tp2162
I2
s(Vinsert
p2163
I42
VSimpleName: getLimit
p2164
Vinsert
p2165
I42
VSimpleName: SQLUpdateStatement
p2166
tp2167
I1
s(Vinsert
p2168
I42
VSimpleName: getAfterColumn
p2169
Vinsert
p2170
I8
VBlock
p2171
tp2172
I1
s(Vinsert
p2173
I42
VSimpleName: isEnabledFor
p2174
Vinsert
p2175
I42
VSimpleName: Override
p2176
tp2177
I1
s(Vinsert
p2178
I42
VSimpleName: append
p2179
Vinsert
p2180
I42
VSimpleName: SQLName
p2181
tp2182
I1
s(Vinsert
p2183
I42
VSimpleName: charAt
p2184
Vinsert
p2185
I2
VArrayAccess
p2186
tp2187
I1
s(Vinsert
p2188
I42
VSimpleName: get
p2189
Vinsert
p2190
I42
VSimpleName: arguments
p2191
tp2192
I5
s(Vinsert
p2193
I42
VSimpleName: prepareStatement
p2194
Vinsert
p2195
I32
VMethodInvocation
p2196
tp2197
I122
s(Vinsert
p2198
I42
VSimpleName: validateConnection
p2199
Vinsert
p2200
I42
VSimpleName: getConnection
p2201
tp2202
I1
s(Vinsert
p2203
I42
VSimpleName: getOnUpdate
p2204
Vinsert
p2205
I42
VSimpleName: mysqlColumn
p2206
tp2207
I2
s(Vinsert
p2208
I42
VSimpleName: assertSame
p2209
Vinsert
p2210
I45
VStringLiteral: "SELECT * FROM T WHERE ID IS NULL"
p2211
tp2212
I1
s(Vinsert
p2213
I42
VSimpleName: createTransactionId
p2214
Vinsert
p2215
I39
VPrimitiveType: long
p2216
tp2217
I1
s(Vinsert
p2218
I42
VSimpleName: get
p2219
Vinsert
p2220
I7
VAssignment: +=
p2221
tp2222
I1
s(Vinsert
p2223
I42
VSimpleName: get
p2224
Vinsert
p2225
I42
VSimpleName: token
p2226
tp2227
I1
s(Vinsert
p2228
I42
VSimpleName: getUserName
p2229
Vinsert
p2230
I8
VBlock
p2231
tp2232
I1
s(Vinsert
p2233
I42
VSimpleName: getTable
p2234
Vinsert
p2235
I60
VVariableDeclarationStatement
p2236
tp2237
I1
s(Vinsert
p2238
I42
VSimpleName: charAt
p2239
Vinsert
p2240
I42
VSimpleName: alias
p2241
tp2242
I2
s(Vinsert
p2243
I42
VSimpleName: setUseGloalDataSourceStat
p2244
Vinsert
p2245
I32
VMethodInvocation
p2246
tp2247
I3
s(Vinsert
p2248
I42
VSimpleName: normalize
p2249
Vinsert
p2250
I60
VVariableDeclarationStatement
p2251
tp2252
I2
s(Vinsert
p2253
I42
VSimpleName: getPrintStream
p2254
Vinsert
p2255
I32
VMethodInvocation
p2256
tp2257
I2
s(Vinsert
p2258
I42
VSimpleName: getAttribute
p2259
Vinsert
p2260
I43
VSimpleType: WallSqlStat
p2261
tp2262
I4
s(Vinsert
p2263
I42
VSimpleName: getConnectionStat
p2264
Vinsert
p2265
I59
VVariableDeclarationFragment
p2266
tp2267
I1
s(Vinsert
p2268
I42
VSimpleName: next
p2269
Vinsert
p2270
I25
VIfStatement
p2271
tp2272
I1
s(Vinsert
p2273
I42
VSimpleName: assertTrue
p2274
Vinsert
p2275
I42
VSimpleName: MySqlExceptionSorter
p2276
tp2277
I2
s(g1710
I42
g1711
Vinsert
p2278
I31
VMethodDeclaration
p2279
tp2280
I3
s(Vinsert
p2281
I42
VSimpleName: getKey
p2282
Vinsert
p2283
I42
VSimpleName: String
p2284
tp2285
I1
s(g1481
I42
g1482
Vinsert
p2286
I42
VSimpleName: error
p2287
tp2288
I2
s(Vinsert
p2289
I42
VSimpleName: write
p2290
Vinsert
p2291
I61
VWhileStatement
p2292
tp2293
I1
s(Vinsert
p2294
I42
VSimpleName: equals
p2295
Vinsert
p2296
I45
VStringLiteral: " rows between "
p2297
tp2298
I1
s(Vinsert
p2299
I42
VSimpleName: nextToken
p2300
Vinsert
p2301
I43
VSimpleType: SQLExpr
p2302
tp2303
I3
s(Vinsert
p2304
I42
VSimpleName: getViolations
p2305
Vinsert
p2306
I42
VSimpleName: isSelelctAllow
p2307
tp2308
I1
s(Vinsert
p2309
I42
VSimpleName: equals
p2310
Vinsert
p2311
I22
VFieldAccess
p2312
tp2313
I6
s(Vinsert
p2314
I42
VSimpleName: afterResolve
p2315
Vinsert
p2316
I8
VBlock
p2317
tp2318
I6
s(Vinsert
p2319
I42
VSimpleName: start
p2320
Vinsert
p2321
I40
VQualifiedName: threads.length
p2322
tp2323
I1
s(Vinsert
p2324
I42
VSimpleName: setLastExecuteStartNano
p2325
Vinsert
p2326
I36
VParenthesizedExpression
p2327
tp2328
I1
s(Vinsert
p2329
I42
VSimpleName: setUseGlobalDataSourceStat
p2330
Vinsert
p2331
I42
VSimpleName: getBoolean
p2332
tp2333
I1
s(Vinsert
p2334
I42
VSimpleName: put
p2335
Vinsert
p2336
I42
VSimpleName: getNotEmptyWaitMillis
p2337
tp2338
I1
s(Vinsert
p2339
I42
VSimpleName: getXmlPath
p2340
Vinsert
p2341
I45
VStringLiteral: "FOR XML "
p2342
tp2343
I1
s(Vinsert
p2344
I42
VSimpleName: token
p2345
Vinsert
p2346
I40
VQualifiedName: SQLParameter.ParameterType.INOUT
p2347
tp2348
I2
s(Vinsert
p2349
I42
VSimpleName: getBodyBeforeCommentsDirect
p2350
Vinsert
p2351
I21
VExpressionStatement
p2352
tp2353
I2
s(Vinsert
p2354
I42
VSimpleName: size
p2355
Vinsert
p2356
I45
VStringLiteral: "\u005ct\u005ctEXIT WHEN x = 5;\u005cn"
p2357
tp2358
I1
s(Vinsert
p2359
I42
VSimpleName: getCompositeType
p2360
Vinsert
p2361
I42
VSimpleName: JMException
p2362
tp2363
I1
s(Vinsert
p2364
I42
VSimpleName: doFinal
p2365
Vinsert
p2366
I42
VSimpleName: cipher
p2367
tp2368
I1
s(g1604
I42
g1605
Vinsert
p2369
I22
VFieldAccess
p2370
tp2371
I2
s(Vinsert
p2372
I42
VSimpleName: setConnectionProperties
p2373
Vinsert
p2374
I32
VMethodInvocation
p2375
tp2376
I18
s(g1898
I42
g1899
Vinsert
p2377
I39
VPrimitiveType: char
p2378
tp2379
I1
s(g131
I42
g132
Vinsert
p2380
I59
VVariableDeclarationFragment
p2381
tp2382
I2
s(Vinsert
p2383
I42
VSimpleName: isUseGloalDataSourceStat
p2384
Vinsert
p2385
I32
VMethodInvocation
p2386
tp2387
I2
s(Vinsert
p2388
I42
VSimpleName: getRight
p2389
Vinsert
p2390
I36
VParenthesizedExpression
p2391
tp2392
I4
s(Vinsert
p2393
I42
VSimpleName: getEntries
p2394
Vinsert
p2395
I45
VStringLiteral: " "
p2396
tp2397
I1
s(Vinsert
p2398
I42
VSimpleName: keySet
p2399
Vinsert
p2400
I43
VSimpleType: SQLException
p2401
tp2402
I1
s(Vinsert
p2403
I42
VSimpleName: setColumn
p2404
Vinsert
p2405
I43
VSimpleType: SQLColumnDefinition
p2406
tp2407
I1
s(Vinsert
p2408
I42
VSimpleName: getConnectErrorCount
p2409
Vinsert
p2410
I42
VSimpleName: dataSource
p2411
tp2412
I2
s(Vinsert
p2413
I42
VSimpleName: getSchema
p2414
Vinsert
p2415
I25
VIfStatement
p2416
tp2417
I1
s(Vinsert
p2418
I42
VSimpleName: setName
p2419
Vinsert
p2420
I40
VQualifiedName: Token.DATABASE
p2421
tp2422
I1
s(Vinsert
p2423
I42
VSimpleName: getBytes
p2424
Vinsert
p2425
I43
VSimpleType: Exception
p2426
tp2427
I2
s(Vinsert
p2428
I42
VSimpleName: token
p2429
Vinsert
p2430
I42
VSimpleName: setReferenceOn
p2431
tp2432
I1
s(g2099
I42
g2100
Vinsert
p2433
I42
VSimpleName: resultSet
p2434
tp2435
I2
s(g1501
I42
g1502
Vinsert
p2436
I85
VDimension
p2437
tp2438
I1
s(Vinsert
p2439
I42
VSimpleName: size
p2440
Vinsert
p2441
I78
VMarkerAnnotation
p2442
tp2443
I2
s(Vinsert
p2444
I42
VSimpleName: setBeginExpr
p2445
Vinsert
p2446
I42
VSimpleName: accept
p2447
tp2448
I1
s(Vinsert
p2449
I42
VSimpleName: setExpr
p2450
Vinsert
p2451
I43
VSimpleType: SQLPartitionByHash
p2452
tp2453
I2
s(Vinsert
p2454
I42
VSimpleName: hashCode64
p2455
Vinsert
p2456
I42
VSimpleName: server
p2457
tp2458
I2
s(Vinsert
p2459
I42
VSimpleName: getName
p2460
Vinsert
p2461
I45
VStringLiteral: "CREATE TYPE "
p2462
tp2463
I1
s(Vinsert
p2464
I42
VSimpleName: newConfigBuilder
p2465
Vinsert
p2466
I43
VSimpleType: Exception
p2467
tp2468
I1
s(Vinsert
p2469
I42
VSimpleName: getTable
p2470
Vinsert
p2471
I32
VMethodInvocation
p2472
tp2473
I6
s(Vinsert
p2474
I42
VSimpleName: getPartitionCount
p2475
Vinsert
p2476
I45
VStringLiteral: ")"
p2477
tp2478
I1
s(Vinsert
p2479
I42
VSimpleName: nextToken
p2480
Vinsert
p2481
I42
VSimpleName: dbType
p2482
tp2483
I1
s(Vinsert
p2484
I42
VSimpleName: getPartitions
p2485
Vinsert
p2486
I42
VSimpleName: print
p2487
tp2488
I2
s(Vinsert
p2489
I42
VSimpleName: doInBackground
p2490
Vinsert
p2491
I52
VThisExpression
p2492
tp2493
I2
s(Vinsert
p2494
I42
VSimpleName: add
p2495
Vinsert
p2496
I74
VParameterizedType: ArrayList<SQLCreateTableStatement>
p2497
tp2498
I1
s(Vinsert
p2499
I42
VSimpleName: getName
p2500
Vinsert
p2501
I45
VStringLiteral: "UNIQUE "
p2502
tp2503
I2
s(Vinsert
p2504
I42
VSimpleName: getMinRows
p2505
Vinsert
p2506
I32
VMethodInvocation
p2507
tp2508
I3
s(g1715
I42
g1716
Vinsert
p2509
I60
VVariableDeclarationStatement
p2510
tp2511
I1
s(g723
I42
g724
Vinsert
p2512
I43
VSimpleType: oracle.jdbc.OraclePreparedStatement
p2513
tp2514
I1
s(Vinsert
p2515
I42
VSimpleName: getText
p2516
Vinsert
p2517
I42
VSimpleName: text
p2518
tp2519
I2
s(Vinsert
p2520
I42
VSimpleName: visit
p2521
Vinsert
p2522
I42
VSimpleName: SQLServerASTVisitor
p2523
tp2524
I11
s(Vinsert
p2525
I42
VSimpleName: clone
p2526
Vinsert
p2527
I42
VSimpleName: s2
p2528
tp2529
I1
s(g1790
I42
g1791
Vinsert
p2530
I59
VVariableDeclarationFragment
p2531
tp2532
I1
s(Vinsert
p2533
I42
VSimpleName: nanoTime
p2534
Vinsert
p2535
I42
VSimpleName: nowNano
p2536
tp2537
I1
s(Vinsert
p2538
I42
VSimpleName: preparedStatement_executeQuery
p2539
Vinsert
p2540
I32
VMethodInvocation
p2541
tp2542
I1
s(Vinsert
p2543
I42
VSimpleName: hashCode64
p2544
Vinsert
p2545
I25
VIfStatement
p2546
tp2547
I10
s(Vinsert
p2548
I42
VSimpleName: toSQLExpr
p2549
Vinsert
p2550
I42
VSimpleName: getSQLDeleteStatement
p2551
tp2552
I1
s(Vinsert
p2553
I42
VSimpleName: setValue
p2554
Vinsert
p2555
I43
VSimpleType: PGMacAddrExpr
p2556
tp2557
I2
s(Vinsert
p2558
I42
VSimpleName: setCreate
p2559
Vinsert
p2560
I42
VSimpleName: parseCreateProcedure
p2561
tp2562
I1
s(Vinsert
p2563
I42
VSimpleName: setFirst
p2564
Vinsert
p2565
I40
VQualifiedName: Token.IDENTIFIER
p2566
tp2567
I1
s(Vinsert
p2568
I42
VSimpleName: printDruidStat
p2569
Vinsert
p2570
I45
VStringLiteral: "-id"
p2571
tp2572
I1
s(Vinsert
p2573
I42
VSimpleName: println
p2574
Vinsert
p2575
I42
VSimpleName: OdpsSchemaStatVisitor
p2576
tp2577
I6
s(Vinsert
p2578
I42
VSimpleName: getClass
p2579
Vinsert
p2580
I36
VParenthesizedExpression
p2581
tp2582
I1
s(g2319
I42
g2320
Vinsert
p2583
I34
VNumberLiteral: 0
p2584
tp2585
I2
s(Vinsert
p2586
I42
VSimpleName: getDeclaredField
p2587
Vinsert
p2588
I42
VSimpleName: sql
p2589
tp2590
I3
s(Vinsert
p2591
I42
VSimpleName: getLeft
p2592
Vinsert
p2593
I42
VSimpleName: leftBinaryExpr
p2594
tp2595
I2
s(Vinsert
p2596
I42
VSimpleName: setDefaultCatalog
p2597
Vinsert
p2598
I42
VSimpleName: dataSource
p2599
tp2600
I3
s(g2104
I42
g2105
Vinsert
p2601
I32
VMethodInvocation
p2602
tp2603
I3
s(Vinsert
p2604
I42
VSimpleName: connection_prepareStatement
p2605
Vinsert
p2606
I42
VSimpleName: SQLException
p2607
tp2608
I1
s(Vinsert
p2609
I42
VSimpleName: setDupCloseLogEnable
p2610
Vinsert
p2611
I42
VSimpleName: assertFalse
p2612
tp2613
I1
s(Vinsert
p2614
I42
VSimpleName: add
p2615
Vinsert
p2616
I42
VSimpleName: column2
p2617
tp2618
I4
s(Vinsert
p2619
I42
VSimpleName: put
p2620
Vinsert
p2621
I45
VStringLiteral: "DISTINCT"
p2622
tp2623
I2
s(Vinsert
p2624
I42
VSimpleName: incrementWarnnings
p2625
Vinsert
p2626
I42
VSimpleName: incrementUnionWarnnings
p2627
tp2628
I1
s(Vinsert
p2629
I42
VSimpleName: equals
p2630
Vinsert
p2631
I42
VSimpleName: b
p2632
tp2633
I6
s(Vinsert
p2634
I42
VSimpleName: addBeforeComment
p2635
Vinsert
p2636
I42
VSimpleName: parseDropSequece
p2637
tp2638
I1
s(Vinsert
p2639
I42
VSimpleName: getCount_10_20
p2640
Vinsert
p2641
I42
VSimpleName: getCount_5_10
p2642
tp2643
I1
s(g1938
I42
g1939
Vinsert
p2644
I42
VSimpleName: statementList
p2645
tp2646
I321
s(Vinsert
p2647
I42
VSimpleName: parse
p2648
Vinsert
p2649
I45
VStringLiteral: "{\u005c"\u005c\u005cu0006\u005c":\u005c"123\u005c"}"
p2650
tp2651
I1
s(Vinsert
p2652
I42
VSimpleName: name
p2653
Vinsert
p2654
I42
VSimpleName: insertStatement
p2655
tp2656
I1
s(Vinsert
p2657
I42
VSimpleName: add
p2658
Vinsert
p2659
I45
VStringLiteral: "support/monitor/resources"
p2660
tp2661
I1
s(Vinsert
p2662
I42
VSimpleName: setIgnoreDeleteTriggers
p2663
Vinsert
p2664
I32
VMethodInvocation
p2665
tp2666
I4
s(Vinsert
p2667
I42
VSimpleName: getConnection
p2668
Vinsert
p2669
I43
VSimpleType: PoolableConnection
p2670
tp2671
I2
s(Vinsert
p2672
I42
VSimpleName: setUppCase
p2673
Vinsert
p2674
I59
VVariableDeclarationFragment
p2675
tp2676
I4
s(Vinsert
p2677
I42
VSimpleName: assertEquals
p2678
Vinsert
p2679
I45
VStringLiteral: "insert overwrite table ttt partition (ds='20150710',hh='07') select tt_split(content, 60) as (f0, f1, f2, f3,f4,f5,f6) from xxx;"
p2680
tp2681
I1
s(Vinsert
p2682
I42
VSimpleName: getItems
p2683
Vinsert
p2684
I32
VMethodInvocation
p2685
tp2686
I68
s(Vinsert
p2687
I42
VSimpleName: createStatement
p2688
Vinsert
p2689
I2
VArrayAccess
p2690
tp2691
I1
s(Vinsert
p2692
I42
VSimpleName: equals
p2693
Vinsert
p2694
I45
VStringLiteral: "nvarchar2"
p2695
tp2696
I1
s(Vinsert
p2697
I42
VSimpleName: evalExpr
p2698
Vinsert
p2699
I34
VNumberLiteral: 1
p2700
tp2701
I7
s(Vinsert
p2702
I42
VSimpleName: getValidproc
p2703
Vinsert
p2704
I59
VVariableDeclarationFragment
p2705
tp2706
I1
s(Vinsert
p2707
I42
VSimpleName: getClassFromWebContainerOrCurrentClassLoader
p2708
Vinsert
p2709
I32
VMethodInvocation
p2710
tp2711
I1
s(Vinsert
p2712
I42
VSimpleName: equals
p2713
Vinsert
p2714
I42
VSimpleName: equals
p2715
tp2716
I32
s(Vinsert
p2717
I42
VSimpleName: equals
p2718
Vinsert
p2719
I42
VSimpleName: OracleSchemaStatVisitor
p2720
tp2721
I2
s(Vinsert
p2722
I42
VSimpleName: afterResolve
p2723
Vinsert
p2724
I21
VExpressionStatement
p2725
tp2726
I5
s(Vinsert
p2727
I42
VSimpleName: setOnConflictConstraint
p2728
Vinsert
p2729
I59
VVariableDeclarationFragment
p2730
tp2731
I1
s(Vinsert
p2732
I42
VSimpleName: getParent
p2733
Vinsert
p2734
I39
VPrimitiveType: boolean
p2735
tp2736
I2
s(Vinsert
p2737
I42
VSimpleName: writeLock
p2738
Vinsert
p2739
I42
VSimpleName: ReentrantReadWriteLock
p2740
tp2741
I1
s(Vinsert
p2742
I42
VSimpleName: getUnit
p2743
Vinsert
p2744
I52
VThisExpression
p2745
tp2746
I2
s(Vinsert
p2747
I42
VSimpleName: getComment
p2748
Vinsert
p2749
I45
VStringLiteral: " COMMENT "
p2750
tp2751
I3
s(g2319
I42
g2320
Vinsert
p2752
I39
VPrimitiveType: int
p2753
tp2754
I2
s(Vinsert
p2755
I42
VSimpleName: println
p2756
Vinsert
p2757
I45
VStringLiteral: " null;\u005cn"
p2758
tp2759
I2
s(Vinsert
p2760
I42
VSimpleName: getTableNames
p2761
Vinsert
p2762
I45
VStringLiteral: "TRUNCATE TABLE "
p2763
tp2764
I1
s(Vinsert
p2765
I42
VSimpleName: parseOptions
p2766
Vinsert
p2767
I32
VMethodInvocation
p2768
tp2769
I3
s(Vinsert
p2770
I42
VSimpleName: getValues
p2771
Vinsert
p2772
I22
VFieldAccess
p2773
tp2774
I1
s(Vinsert
p2775
I42
VSimpleName: putContext
p2776
Vinsert
p2777
I32
VMethodInvocation
p2778
tp2779
I1
s(Vinsert
p2780
I42
VSimpleName: accept
p2781
Vinsert
p2782
I43
VSimpleType: SQLSelect
p2783
tp2784
I1
s(Vinsert
p2785
I42
VSimpleName: invoke
p2786
Vinsert
p2787
I45
VStringLiteral: "getSessionStatDataList"
p2788
tp2789
I1
s(Vinsert
p2790
I42
VSimpleName: getConnection
p2791
Vinsert
p2792
I42
VSimpleName: ResultSet
p2793
tp2794
I4
s(Vinsert
p2795
I42
VSimpleName: readLine
p2796
Vinsert
p2797
I42
VSimpleName: is
p2798
tp2799
I1
s(Vinsert
p2800
I42
VSimpleName: getObject
p2801
Vinsert
p2802
I43
VSimpleType: MySqlDescribeStatement
p2803
tp2804
I2
s(Vinsert
p2805
I42
VSimpleName: getProxyDataSources
p2806
Vinsert
p2807
I74
VParameterizedType: ConcurrentMap<String,DataSourceProxyImpl>
p2808
tp2809
I1
s(g464
I42
g465
Vinsert
p2810
I42
VSimpleName: setTop
p2811
tp2812
I1
s(g876
I42
g877
Vinsert
p2813
I45
VStringLiteral: "INTO 256 BUCKETS\u005cn"
p2814
tp2815
I1
s(g1933
I42
g1934
Vinsert
p2816
I42
VSimpleName: getObjectInstance
p2817
tp2818
I1
s(Vinsert
p2819
I42
VSimpleName: createConnection
p2820
Vinsert
p2821
I32
VMethodInvocation
p2822
tp2823
I3
s(Vinsert
p2824
I42
VSimpleName: get
p2825
Vinsert
p2826
I42
VSimpleName: functions
p2827
tp2828
I5
s(Vinsert
p2829
I42
VSimpleName: setPasswordCallbackClassName
p2830
Vinsert
p2831
I42
VSimpleName: test_setPasswordCallbackClassName
p2832
tp2833
I1
s(g1898
I42
g1899
Vinsert
p2834
I60
VVariableDeclarationStatement
p2835
tp2836
I1
s(Vinsert
p2837
I42
VSimpleName: println
p2838
Vinsert
p2839
I42
VSimpleName: arr
p2840
tp2841
I1
s(Vinsert
p2842
I42
VSimpleName: getSubQuery
p2843
Vinsert
p2844
I11
VCastExpression
p2845
tp2846
I1
s(Vinsert
p2847
I42
VSimpleName: initWallTopStatementContext
p2848
Vinsert
p2849
I8
VBlock
p2850
tp2851
I3
s(Vinsert
p2852
I42
VSimpleName: checkInsert
p2853
Vinsert
p2854
I39
VPrimitiveType: boolean
p2855
tp2856
I1
s(Vinsert
p2857
I42
VSimpleName: setDefaultReadOnly
p2858
Vinsert
p2859
I42
VSimpleName: setTestOnBorrow
p2860
tp2861
I1
s(Vinsert
p2862
I42
VSimpleName: put
p2863
Vinsert
p2864
I45
VStringLiteral: "FROM"
p2865
tp2866
I6
s(g577
I42
g578
Vinsert
p2867
I25
VIfStatement
p2868
tp2869
I3
s(Vinsert
p2870
I42
VSimpleName: getAliasMap
p2871
Vinsert
p2872
I21
VExpressionStatement
p2873
tp2874
I3
s(Vinsert
p2875
I42
VSimpleName: setDriver
p2876
Vinsert
p2877
I42
VSimpleName: Exception
p2878
tp2879
I2
s(Vinsert
p2880
I42
VSimpleName: toSQLString
p2881
Vinsert
p2882
I45
VStringLiteral: "\u005cn\u005ct\u005ctCONSTRAINT loc_id_pk PRIMARY KEY,"
p2883
tp2884
I1
s(Vinsert
p2885
I42
VSimpleName: parseDeleteStatement
p2886
Vinsert
p2887
I41
VReturnStatement
p2888
tp2889
I4
s(Vinsert
p2890
I42
VSimpleName: add
p2891
Vinsert
p2892
I74
VParameterizedType: ArrayList<List<Object>>
p2893
tp2894
I1
s(Vinsert
p2895
I42
VSimpleName: setDatabase
p2896
Vinsert
p2897
I8
VBlock
p2898
tp2899
I3
s(Vinsert
p2900
I42
VSimpleName: equals
p2901
Vinsert
p2902
I42
VSimpleName: i
p2903
tp2904
I8
s(Vinsert
p2905
I42
VSimpleName: getResultSetType
p2906
Vinsert
p2907
I43
VSimpleType: SQLException
p2908
tp2909
I1
s(Vinsert
p2910
I42
VSimpleName: singletonList
p2911
Vinsert
p2912
I41
VReturnStatement
p2913
tp2914
I7
s(Vinsert
p2915
I42
VSimpleName: info
p2916
Vinsert
p2917
I25
VIfStatement
p2918
tp2919
I2
s(Vinsert
p2920
I42
VSimpleName: accept
p2921
Vinsert
p2922
I42
VSimpleName: getNestedTable
p2923
tp2924
I1
s(Vinsert
p2925
I42
VSimpleName: arraycopy
p2926
Vinsert
p2927
I25
VIfStatement
p2928
tp2929
I2
s(Vinsert
p2930
I42
VSimpleName: getValidate
p2931
Vinsert
p2932
I60
VVariableDeclarationStatement
p2933
tp2934
I1
s(Vinsert
p2935
I42
VSimpleName: toOdpsString
p2936
Vinsert
p2937
I31
VMethodDeclaration
p2938
tp2939
I2
s(Vinsert
p2940
I42
VSimpleName: visit
p2941
Vinsert
p2942
I42
VSimpleName: objectType
p2943
tp2944
I4
s(g1642
I42
g1643
Vinsert
p2945
I21
VExpressionStatement
p2946
tp2947
I1
s(Vinsert
p2948
I42
VSimpleName: getArguments
p2949
Vinsert
p2950
I34
VNumberLiteral: 0
p2951
tp2952
I1
s(Vinsert
p2953
I42
VSimpleName: setParent
p2954
Vinsert
p2955
I42
VSimpleName: setAddUndoFile
p2956
tp2957
I1
s(g1175
I42
g1176
Vinsert
p2958
I40
VQualifiedName: System.out
p2959
tp2960
I1
s(Vinsert
p2961
I42
VSimpleName: getCursorName
p2962
Vinsert
p2963
I39
VPrimitiveType: void
p2964
tp2965
I1
s(g126
I42
g127
Vinsert
p2966
I57
VTypeLiteral
p2967
tp2968
I1
s(Vinsert
p2969
I42
VSimpleName: toLowerCase
p2970
Vinsert
p2971
I31
VMethodDeclaration
p2972
tp2973
I2
s(g1289
I42
g1290
Vinsert
p2974
I42
VSimpleName: updateObject
p2975
tp2976
I5
s(Vinsert
p2977
I42
VSimpleName: toPGString
p2978
Vinsert
p2979
I45
VStringLiteral: "\u005ct(\u005cn"
p2980
tp2981
I1
s(Vinsert
p2982
I42
VSimpleName: setTransactionName
p2983
Vinsert
p2984
I42
VSimpleName: chain
p2985
tp2986
I1
s(Vinsert
p2987
I42
VSimpleName: getSimpleName
p2988
Vinsert
p2989
I44
VSingleVariableDeclaration
p2990
tp2991
I2
s(Vinsert
p2992
I42
VSimpleName: getSelectList
p2993
Vinsert
p2994
I42
VSimpleName: queryBlock
p2995
tp2996
I8
s(Vinsert
p2997
I42
VSimpleName: getConnectionHolder
p2998
Vinsert
p2999
I39
VPrimitiveType: void
p3000
tp3001
I1
s(Vinsert
p3002
I42
VSimpleName: setTo
p3003
Vinsert
p3004
I27
VInfixExpression: !=
p3005
tp3006
I1
s(Vinsert
p3007
I42
VSimpleName: getAttribute
p3008
Vinsert
p3009
I31
VMethodDeclaration
p3010
tp3011
I1
s(Vinsert
p3012
I42
VSimpleName: parseStatement
p3013
Vinsert
p3014
I42
VSimpleName: lexer
p3015
tp3016
I1
s(Vinsert
p3017
I42
VSimpleName: newInstance
p3018
Vinsert
p3019
I42
VSimpleName: ctor
p3020
tp3021
I1
s(Vinsert
p3022
I42
VSimpleName: isValidConnection
p3023
Vinsert
p3024
I22
VFieldAccess
p3025
tp3026
I1
s(Vinsert
p3027
I42
VSimpleName: parseArray
p3028
Vinsert
p3029
I42
VSimpleName: JSONArray
p3030
tp3031
I1
s(g2910
I42
g2911
Vinsert
p3032
I26
VImportDeclaration
p3033
tp3034
I10
s(Vinsert
p3035
I42
VSimpleName: isAfterSemi
p3036
Vinsert
p3037
I25
VIfStatement
p3038
tp3039
I1
s(Vinsert
p3040
I42
VSimpleName: setClosed
p3041
Vinsert
p3042
I42
VSimpleName: getStatementPool
p3043
tp3044
I1
s(Vinsert
p3045
I42
VSimpleName: append
p3046
Vinsert
p3047
I42
VSimpleName: timeZone
p3048
tp3049
I3
s(g2115
I42
g2116
Vinsert
p3050
I42
VSimpleName: SQLSubPartitionByList
p3051
tp3052
I2
s(Vinsert
p3053
I42
VSimpleName: setForceAllPartitions
p3054
Vinsert
p3055
I32
VMethodInvocation
p3056
tp3057
I3
s(Vinsert
p3058
I42
VSimpleName: toSQLString
p3059
Vinsert
p3060
I45
VStringLiteral: "\u005cn\u005ctINTO :NEW.\u005c"ID\u005c""
p3061
tp3062
I2
s(Vinsert
p3063
I42
VSimpleName: setHintAllow
p3064
Vinsert
p3065
I32
VMethodInvocation
p3066
tp3067
I2
s(Vinsert
p3068
I42
VSimpleName: endVisit
p3069
Vinsert
p3070
I42
VSimpleName: user
p3071
tp3072
I2
s(Vinsert
p3073
I42
VSimpleName: readAndResetComments
p3074
Vinsert
p3075
I42
VSimpleName: comments
p3076
tp3077
I4
s(Vinsert
p3078
I42
VSimpleName: setTestOnBorrow
p3079
Vinsert
p3080
I25
VIfStatement
p3081
tp3082
I1
s(Vinsert
p3083
I42
VSimpleName: assertSame
p3084
Vinsert
p3085
I39
VPrimitiveType: void
p3086
tp3087
I6
s(Vinsert
p3088
I42
VSimpleName: size
p3089
Vinsert
p3090
I42
VSimpleName: Put
p3091
tp3092
I1
s(Vinsert
p3093
I42
VSimpleName: getStatementProxy
p3094
Vinsert
p3095
I42
VSimpleName: chain
p3096
tp3097
I2
s(Vinsert
p3098
I42
VSimpleName: assertTrue
p3099
Vinsert
p3100
I42
VSimpleName: provider
p3101
tp3102
I43
s(Vinsert
p3103
I42
VSimpleName: createStatement
p3104
Vinsert
p3105
I60
VVariableDeclarationStatement
p3106
tp3107
I27
s(Vinsert
p3108
I42
VSimpleName: invoke
p3109
Vinsert
p3110
I60
VVariableDeclarationStatement
p3111
tp3112
I3
s(Vinsert
p3113
I42
VSimpleName: getParameters
p3114
Vinsert
p3115
I43
VSimpleType: SQLParameter
p3116
tp3117
I3
s(Vinsert
p3118
I42
VSimpleName: put
p3119
Vinsert
p3120
I40
VQualifiedName: Token.YEAR
p3121
tp3122
I1
s(Vinsert
p3123
I42
VSimpleName: getSimpleName
p3124
Vinsert
p3125
I22
VFieldAccess
p3126
tp3127
I2
s(g256
I42
g257
Vinsert
p3128
I39
VPrimitiveType: boolean
p3129
tp3130
I1
s(g2624
I42
g2625
Vinsert
p3131
I31
VMethodDeclaration
p3132
tp3133
I1
s(Vinsert
p3134
I42
VSimpleName: nextToken
p3135
Vinsert
p3136
I42
VSimpleName: LPAREN
p3137
tp3138
I1
s(Vinsert
p3139
I42
VSimpleName: size
p3140
Vinsert
p3141
I74
VParameterizedType: Map.Entry<K,V>
p3142
tp3143
I1
s(Vinsert
p3144
I42
VSimpleName: isLocal
p3145
Vinsert
p3146
I25
VIfStatement
p3147
tp3148
I4
s(Vinsert
p3149
I42
VSimpleName: setLeft
p3150
Vinsert
p3151
I42
VSimpleName: JoinType
p3152
tp3153
I1
s(Vinsert
p3154
I42
VSimpleName: setParent
p3155
Vinsert
p3156
I42
VSimpleName: enableLifeCycle
p3157
tp3158
I1
s(Vinsert
p3159
I42
VSimpleName: resultSet_updateCharacterStream
p3160
Vinsert
p3161
I42
VSimpleName: columnIndex
p3162
tp3163
I1
s(Vinsert
p3164
I42
VSimpleName: append
p3165
Vinsert
p3166
I45
VStringLiteral: "<table cellpadding='5' cellspacing='1' width='99%'>"
p3167
tp3168
I2
s(Vinsert
p3169
I42
VSimpleName: identifierEquals
p3170
Vinsert
p3171
I40
VQualifiedName: Token.EOF
p3172
tp3173
I1
s(Vinsert
p3174
I42
VSimpleName: assertEquals
p3175
Vinsert
p3176
I42
VSimpleName: EvalMethodTest_locate
p3177
tp3178
I1
s(Vinsert
p3179
I42
VSimpleName: loadResource
p3180
Vinsert
p3181
I42
VSimpleName: WallVisitorUtils
p3182
tp3183
I12
s(Vinsert
p3184
I42
VSimpleName: assertEquals
p3185
Vinsert
p3186
I43
VSimpleType: MockStatement
p3187
tp3188
I2
s(Vinsert
p3189
I42
VSimpleName: token
p3190
Vinsert
p3191
I43
VSimpleType: OracleGotoStatement
p3192
tp3193
I1
s(Vinsert
p3194
I42
VSimpleName: setParent
p3195
Vinsert
p3196
I42
VSimpleName: into
p3197
tp3198
I3
s(g1873
I42
g1874
Vinsert
p3199
I42
VSimpleName: nextToken
p3200
tp3201
I1
s(Vinsert
p3202
I42
VSimpleName: length
p3203
Vinsert
p3204
I32
VMethodInvocation
p3205
tp3206
I62
s(g2408
I42
g2409
Vinsert
p3207
I32
VMethodInvocation
p3208
tp3209
I3
s(g1160
I42
g1161
Vinsert
p3210
I42
VSimpleName: Long
p3211
tp3212
I1
s(Vinsert
p3213
I42
VSimpleName: setExpr
p3214
Vinsert
p3215
I43
VSimpleType: SQLExpr
p3216
tp3217
I4
s(Vinsert
p3218
I42
VSimpleName: replaceAll
p3219
Vinsert
p3220
I42
VSimpleName: text
p3221
tp3222
I6
s(Vinsert
p3223
I42
VSimpleName: setCompressForOltp
p3224
Vinsert
p3225
I8
VBlock
p3226
tp3227
I2
s(Vinsert
p3228
I42
VSimpleName: form
p3229
Vinsert
p3230
I78
VMarkerAnnotation
p3231
tp3232
I2
s(Vinsert
p3233
I42
VSimpleName: setParameterized
p3234
Vinsert
p3235
I43
VSimpleType: List
p3236
tp3237
I16
s(Vinsert
p3238
I42
VSimpleName: containsColumn
p3239
Vinsert
p3240
I42
VSimpleName: println
p3241
tp3242
I3
s(Vinsert
p3243
I42
VSimpleName: getParameter
p3244
Vinsert
p3245
I42
VSimpleName: request
p3246
tp3247
I2
s(Vinsert
p3248
I42
VSimpleName: info
p3249
Vinsert
p3250
I42
VSimpleName: String
p3251
tp3252
I4
s(Vinsert
p3253
I42
VSimpleName: getConnection
p3254
Vinsert
p3255
I42
VSimpleName: mockStmt
p3256
tp3257
I1
s(g914
I42
g915
Vinsert
p3258
I42
VSimpleName: SQLAlterTableCheckPartition
p3259
tp3260
I1
s(Vinsert
p3261
I42
VSimpleName: addValueCause
p3262
Vinsert
p3263
I21
VExpressionStatement
p3264
tp3265
I2
s(Vinsert
p3266
I42
VSimpleName: get
p3267
Vinsert
p3268
I42
VSimpleName: currentLocal
p3269
tp3270
I1
s(Vinsert
p3271
I42
VSimpleName: getWhiteListHitCount
p3272
Vinsert
p3273
I42
VSimpleName: statValue
p3274
tp3275
I2
s(g2982
I42
g2983
Vinsert
p3276
I32
VMethodInvocation
p3277
tp3278
I1
s(g2760
I42
g2761
Vinsert
p3279
I42
VSimpleName: SQLTruncateStatement
p3280
tp3281
I1
s(Vinsert
p3282
I42
VSimpleName: isWait
p3283
Vinsert
p3284
I42
VSimpleName: ucase
p3285
tp3286
I1
s(Vinsert
p3287
I42
VSimpleName: emptyList
p3288
Vinsert
p3289
I43
VSimpleType: String
p3290
tp3291
I1
s(Vinsert
p3292
I42
VSimpleName: length
p3293
Vinsert
p3294
I42
VSimpleName: numberCount
p3295
tp3296
I2
s(Vinsert
p3297
I42
VSimpleName: addAndGet
p3298
Vinsert
p3299
I31
VMethodDeclaration
p3300
tp3301
I9
s(Vinsert
p3302
I42
VSimpleName: assertTrue
p3303
Vinsert
p3304
I42
VSimpleName: visitor
p3305
tp3306
I20
s(Vinsert
p3307
I42
VSimpleName: getClass
p3308
Vinsert
p3309
I42
VSimpleName: methodStat
p3310
tp3311
I2
s(Vinsert
p3312
I42
VSimpleName: setUseUnfairLock
p3313
Vinsert
p3314
I45
VStringLiteral: "druid.useUnfairLock"
p3315
tp3316
I1
s(Vinsert
p3317
I42
VSimpleName: assertTrue
p3318
Vinsert
p3319
I45
VStringLiteral: "/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */"
p3320
tp3321
I1
s(Vinsert
p3322
I42
VSimpleName: parseStatements
p3323
Vinsert
p3324
I45
VStringLiteral: "\u005ctFOREIGN KEY (XTBH) REFERENCES XT_DJ_XT (XTBH),\u005cn"
p3325
tp3326
I1
s(Vinsert
p3327
I42
VSimpleName: setQuery
p3328
Vinsert
p3329
I42
VSimpleName: expr
p3330
tp3331
I1
s(Vinsert
p3332
I42
VSimpleName: next
p3333
Vinsert
p3334
I43
VSimpleType: String
p3335
tp3336
I1
s(Vinsert
p3337
I42
VSimpleName: getSelect
p3338
Vinsert
p3339
I62
VInstanceofExpression
p3340
tp3341
I2
s(g2494
I42
g2495
Vinsert
p3342
I42
VSimpleName: stmtList
p3343
tp3344
I1
s(Vinsert
p3345
I42
VSimpleName: accept0
p3346
Vinsert
p3347
I44
VSingleVariableDeclaration
p3348
tp3349
I32
s(Vinsert
p3350
I42
VSimpleName: clone
p3351
Vinsert
p3352
I42
VSimpleName: dataDirectory
p3353
tp3354
I2
s(Vinsert
p3355
I42
VSimpleName: toBytes
p3356
Vinsert
p3357
I42
VSimpleName: result
p3358
tp3359
I1
s(Vinsert
p3360
I42
VSimpleName: isValidateMySql
p3361
Vinsert
p3362
I42
VSimpleName: WallUtils
p3363
tp3364
I8
s(Vinsert
p3365
I42
VSimpleName: getParameters
p3366
Vinsert
p3367
I43
VSimpleType: Reader
p3368
tp3369
I1
s(Vinsert
p3370
I42
VSimpleName: getClass
p3371
Vinsert
p3372
I9
VBooleanLiteral: false
p3373
tp3374
I48
s(g2168
I42
g2169
Vinsert
p3375
I42
VSimpleName: print
p3376
tp3377
I2
s(Vinsert
p3378
I42
VSimpleName: assertEquals
p3379
Vinsert
p3380
I45
VStringLiteral: "WHERE `team_type` = 'normal' AND 1 = 1 AND `city_id` IN (0,10)"
p3381
tp3382
I1
s(Vinsert
p3383
I42
VSimpleName: getStatDataForMBean
p3384
Vinsert
p3385
I41
VReturnStatement
p3386
tp3387
I1
s(Vinsert
p3388
I42
VSimpleName: info
p3389
Vinsert
p3390
I42
VSimpleName: Exception
p3391
tp3392
I4
s(g3139
I42
g3140
Vinsert
p3393
I43
VSimpleType: V
p3394
tp3395
I1
s(Vinsert
p3396
I42
VSimpleName: parseStatements
p3397
Vinsert
p3398
I45
VStringLiteral: "SELECT \u005c"MY_PK\u005c", \u005c"FK_EMP\u005c", \u005c"FK_DEPT\u005c", \u005c"FK_DUTY\u005c", \u005c"DUTYLEVEL\u005c"\u005cn"
p3399
tp3400
I1
s(Vinsert
p3401
I42
VSimpleName: currentTimeMillis
p3402
Vinsert
p3403
I14
VClassInstanceCreation
p3404
tp3405
I2
s(g2304
I42
g2305
Vinsert
p3406
I42
VSimpleName: config
p3407
tp3408
I4
s(Vinsert
p3409
I42
VSimpleName: setCreateCount
p3410
Vinsert
p3411
I21
VExpressionStatement
p3412
tp3413
I1
s(g2223
I42
g2224
Vinsert
p3414
I34
VNumberLiteral: 0
p3415
tp3416
I25
s(Vinsert
p3417
I42
VSimpleName: parseInt
p3418
Vinsert
p3419
I42
VSimpleName: p2
p3420
tp3421
I1
s(Vinsert
p3422
I42
VSimpleName: assertTrue
p3423
Vinsert
p3424
I34
VNumberLiteral: 14
p3425
tp3426
I2
s(Vinsert
p3427
I42
VSimpleName: executeQuery
p3428
Vinsert
p3429
I42
VSimpleName: setInt
p3430
tp3431
I2
s(Vinsert
p3432
I42
VSimpleName: setTestOnBorrow
p3433
Vinsert
p3434
I42
VSimpleName: testOnReturn
p3435
tp3436
I1
s(Vinsert
p3437
I42
VSimpleName: getConnection
p3438
Vinsert
p3439
I42
VSimpleName: DruidDataSource
p3440
tp3441
I3
s(Vinsert
p3442
I42
VSimpleName: size
p3443
Vinsert
p3444
I45
VStringLiteral: "connect by prior employee_id = manager_id\u005cn"
p3445
tp3446
I2
s(Vinsert
p3447
I42
VSimpleName: isSupported
p3448
Vinsert
p3449
I21
VExpressionStatement
p3450
tp3451
I4
s(Vinsert
p3452
I42
VSimpleName: setMinIdle
p3453
Vinsert
p3454
I21
VExpressionStatement
p3455
tp3456
I8
s(Vinsert
p3457
I42
VSimpleName: setSubQuery
p3458
Vinsert
p3459
I42
VSimpleName: x
p3460
tp3461
I9
s(Vinsert
p3462
I42
VSimpleName: setConditionOpXorAllow
p3463
Vinsert
p3464
I42
VSimpleName: config
p3465
tp3466
I2
s(Vinsert
p3467
I42
VSimpleName: setTarget
p3468
Vinsert
p3469
I21
VExpressionStatement
p3470
tp3471
I1
s(Vinsert
p3472
I42
VSimpleName: getForcePartition
p3473
Vinsert
p3474
I60
VVariableDeclarationStatement
p3475
tp3476
I1
s(g3068
I42
g3069
Vinsert
p3477
I8
VBlock
p3478
tp3479
I44
s(Vinsert
p3480
I42
VSimpleName: nanoTime
p3481
Vinsert
p3482
I42
VSimpleName: constructNano
p3483
tp3484
I2
s(Vinsert
p3485
I42
VSimpleName: token
p3486
Vinsert
p3487
I42
VSimpleName: setKeyOrIndex
p3488
tp3489
I1
s(Vinsert
p3490
I42
VSimpleName: token
p3491
Vinsert
p3492
I18
VContinueStatement
p3493
tp3494
I8
s(Vinsert
p3495
I42
VSimpleName: createSQLSelectParser
p3496
Vinsert
p3497
I43
VSimpleType: SQLSelect
p3498
tp3499
I1
s(Vinsert
p3500
I42
VSimpleName: createMappingVisitor
p3501
Vinsert
p3502
I32
VMethodInvocation
p3503
tp3504
I3
s(g366
I42
g367
Vinsert
p3505
I43
VSimpleType: StringBuilder
p3506
tp3507
I1
s(Vinsert
p3508
I42
VSimpleName: check
p3509
Vinsert
p3510
I42
VSimpleName: SQLSelectItem
p3511
tp3512
I3
s(Vinsert
p3513
I42
VSimpleName: getItems
p3514
Vinsert
p3515
I38
VPrefixExpression: ++
p3516
tp3517
I1
s(Vinsert
p3518
I42
VSimpleName: put
p3519
Vinsert
p3520
I42
VSimpleName: getAliasMap
p3521
tp3522
I1
s(Vinsert
p3523
I42
VSimpleName: getColumns
p3524
Vinsert
p3525
I42
VSimpleName: size
p3526
tp3527
I10
s(Vinsert
p3528
I42
VSimpleName: name_hash_lower
p3529
Vinsert
p3530
I32
VMethodInvocation
p3531
tp3532
I6
s(Vinsert
p3533
I42
VSimpleName: accept
p3534
Vinsert
p3535
I27
VInfixExpression: !=
p3536
tp3537
I13
s(g816
I42
g817
Vinsert
p3538
I42
VSimpleName: assertEquals
p3539
tp3540
I2
s(g572
I42
g573
Vinsert
p3541
I42
VSimpleName: SQLCreateTableStatement
p3542
tp3543
I4
s(Vinsert
p3544
I42
VSimpleName: formatOdps
p3545
Vinsert
p3546
I45
VStringLiteral: "\u005ct\u005ctlateral view explode(t1.ver) t3 as ver\u005cn"
p3547
tp3548
I1
s(Vinsert
p3549
I42
VSimpleName: next
p3550
Vinsert
p3551
I43
VSimpleType: PreparedStatementHolder
p3552
tp3553
I1
s(Vinsert
p3554
I42
VSimpleName: setParameterizedMergeInList
p3555
Vinsert
p3556
I59
VVariableDeclarationFragment
p3557
tp3558
I1
s(Vinsert
p3559
I42
VSimpleName: append
p3560
Vinsert
p3561
I40
VQualifiedName: Type.GLOBAL_TEMPORARY
p3562
tp3563
I1
s(Vinsert
p3564
I42
VSimpleName: setMaxPoolSize
p3565
Vinsert
p3566
I21
VExpressionStatement
p3567
tp3568
I3
s(Vinsert
p3569
I42
VSimpleName: setWindowing
p3570
Vinsert
p3571
I43
VSimpleType: OracleAnalytic
p3572
tp3573
I1
s(Vinsert
p3574
I42
VSimpleName: parameterize
p3575
Vinsert
p3576
I43
VSimpleType: String
p3577
tp3578
I15
s(Vinsert
p3579
I42
VSimpleName: getTop
p3580
Vinsert
p3581
I7
VAssignment: =
p3582
tp3583
I1
s(Vinsert
p3584
I42
VSimpleName: isClosed
p3585
Vinsert
p3586
I42
VSimpleName: unwrap
p3587
tp3588
I1
s(g439
I42
g440
Vinsert
p3589
I42
VSimpleName: lexer
p3590
tp3591
I1
s(g1486
I42
g1487
Vinsert
p3592
I31
VMethodDeclaration
p3593
tp3594
I7
s(g2001
I42
g2002
Vinsert
p3595
I42
VSimpleName: Assert
p3596
tp3597
I1
s(Vinsert
p3598
I42
VSimpleName: setDbName
p3599
Vinsert
p3600
I42
VSimpleName: d1
p3601
tp3602
I1
s(Vinsert
p3603
I42
VSimpleName: getColumns
p3604
Vinsert
p3605
I42
VSimpleName: print
p3606
tp3607
I8
s(Vinsert
p3608
I42
VSimpleName: putAttribute
p3609
Vinsert
p3610
I21
VExpressionStatement
p3611
tp3612
I12
s(Vinsert
p3613
I42
VSimpleName: getProperty
p3614
Vinsert
p3615
I45
VStringLiteral: "filters"
p3616
tp3617
I1
s(Vinsert
p3618
I42
VSimpleName: createClob
p3619
Vinsert
p3620
I42
VSimpleName: createClob
p3621
tp3622
I1
s(Vinsert
p3623
I42
VSimpleName: put
p3624
Vinsert
p3625
I42
VSimpleName: getContextPath
p3626
tp3627
I1
s(g2578
I42
g2579
Vinsert
p3628
I27
VInfixExpression: &&
p3629
tp3630
I2
s(Vinsert
p3631
I42
VSimpleName: getConnections
p3632
Vinsert
p3633
I42
VSimpleName: connections
p3634
tp3635
I1
s(Vinsert
p3636
I42
VSimpleName: getColumns
p3637
Vinsert
p3638
I42
VSimpleName: createSchemaStatVisitor
p3639
tp3640
I3
s(Vinsert
p3641
I42
VSimpleName: put
p3642
Vinsert
p3643
I27
VInfixExpression: >
p3644
tp3645
I5
s(g2344
I42
g2345
Vinsert
p3646
I40
VQualifiedName: SQLParameter.ParameterType.IN
p3647
tp3648
I2
s(Vinsert
p3649
I42
VSimpleName: println
p3650
Vinsert
p3651
I43
VSimpleType: Token
p3652
tp3653
I2
s(Vinsert
p3654
I42
VSimpleName: getExprParser
p3655
Vinsert
p3656
I42
VSimpleName: accept
p3657
tp3658
I1
s(Vinsert
p3659
I42
VSimpleName: integerValue
p3660
Vinsert
p3661
I42
VSimpleName: Integer
p3662
tp3663
I1
s(Vinsert
p3664
I42
VSimpleName: getAsExpr
p3665
Vinsert
p3666
I45
VStringLiteral: " AS ("
p3667
tp3668
I1
s(Vinsert
p3669
I42
VSimpleName: setParent
p3670
Vinsert
p3671
I42
VSimpleName: setCursorName
p3672
tp3673
I3
s(Vinsert
p3674
I42
VSimpleName: getValue
p3675
Vinsert
p3676
I42
VSimpleName: getType
p3677
tp3678
I1
s(Vinsert
p3679
I42
VSimpleName: parseLong
p3680
Vinsert
p3681
I59
VVariableDeclarationFragment
p3682
tp3683
I3
s(Vinsert
p3684
I42
VSimpleName: createSQLStatementParser
p3685
Vinsert
p3686
I45
VStringLiteral: "SELECT `mtk_p_mg`.`id` AS `id`, `mtk_p_mg`.`gmt_create` AS `gmtCreate`, `mtk_p_mg`.`gmt_modified` AS `gmtModified`, `mtk_p_mg`.`target` AS `target`, `mtk_p_mg`.`msg_id` AS `msgId` , `mtk_p_mg`.`uuid` AS `uuid`, `mtk_p_mg`.`app_key` AS `appKey`, `mtk_p_mg`.`utdid` AS `utdid`, `mtk_p_mg`.`digest` AS `digest`, `mtk_p_mg`.`content` AS `content` , `mtk_p_mg`.`user_info` AS `userInfo`, `mtk_p_mg`.`status` AS `status`, `mtk_p_mg`.`mesg_status` AS `mesgStatus`, `mtk_p_mg`.`start_time` AS `startTime`, `mtk_p_mg`.`expired` AS `expired` , `mtk_p_mg`.`online` AS `online`, `mtk_p_mg`.`gmt_commit` AS `gmtCommit`, `mtk_p_mg`.`extra_info` AS `extraInfo`, `mtk_p_mg`.`auto_commit` AS `autoCommit`, `mtk_p_mg`.`task_id` AS `taskId` , `mtk_p_mg`.`msg_type` AS `msgType`, `mtk_p_mg`.`push_user_token` AS `pushUserToken`, `mtk_p_mg`.`tb_app_device_token` AS `tbAppDeviceToken`, `mtk_p_mg`.`sdk_version` AS `sdkVersion`, `mtk_p_mg`.`biz_ext_info` AS `bizExtInfo` FROM mtk_p_mg `mtk_p_mg` FORCE INDEX (idx_targetid) WHERE `mtk_p_mg`.`target` = ? ORDER BY `mtk_p_mg`.`id` DESC LIMIT ?, ?"
p3687
tp3688
I1
s(Vinsert
p3689
I42
VSimpleName: setBackground
p3690
Vinsert
p3691
I42
VSimpleName: JConsoleContext
p3692
tp3693
I1
s(Vinsert
p3694
I42
VSimpleName: assertEquals
p3695
Vinsert
p3696
I45
VStringLiteral: "\u005cn\u005ctPARTITION p0 VALUES LESS THAN (100),"
p3697
tp3698
I1
s(Vinsert
p3699
I42
VSimpleName: getConnection
p3700
Vinsert
p3701
I42
VSimpleName: error
p3702
tp3703
I2
s(Vinsert
p3704
I42
VSimpleName: toSQLString
p3705
Vinsert
p3706
I42
VSimpleName: condition
p3707
tp3708
I1
s(Vinsert
p3709
I42
VSimpleName: remove
p3710
Vinsert
p3711
I42
VSimpleName: ArrayList
p3712
tp3713
I1
s(Vinsert
p3714
I42
VSimpleName: getTableOptions
p3715
Vinsert
p3716
I42
VSimpleName: ParserException
p3717
tp3718
I1
s(Vinsert
p3719
I42
VSimpleName: size
p3720
Vinsert
p3721
I45
VStringLiteral: "delete force all partitions car_tt\u005cn"
p3722
tp3723
I1
s(Vinsert
p3724
I42
VSimpleName: console
p3725
Vinsert
p3726
I45
VStringLiteral: "TABLESPACE \u005c"ECC_CPR_TSP\u005c"\u005cn"
p3727
tp3728
I1
s(g3467
I42
g3468
Vinsert
p3729
I25
VIfStatement
p3730
tp3731
I1
s(Vinsert
p3732
I42
VSimpleName: getValue
p3733
Vinsert
p3734
I40
VQualifiedName: Boolean.TRUE
p3735
tp3736
I2
s(Vinsert
p3737
I42
VSimpleName: nextToken
p3738
Vinsert
p3739
I40
VQualifiedName: Token.QUES
p3740
tp3741
I1
s(Vinsert
p3742
I42
VSimpleName: parseOptions
p3743
Vinsert
p3744
I45
VStringLiteral: "1319"
p3745
tp3746
I1
s(g2464
I42
g2465
Vinsert
p3747
I42
VSimpleName: test_calcite
p3748
tp3749
I1
s(Vinsert
p3750
I42
VSimpleName: assertEquals
p3751
Vinsert
p3752
I42
VSimpleName: DataSourceDisableException
p3753
tp3754
I2
s(Vinsert
p3755
I42
VSimpleName: output
p3756
Vinsert
p3757
I45
VStringLiteral: "CREATE LOCAL TEMPORARY TABLE "
p3758
tp3759
I1
s(Vinsert
p3760
I42
VSimpleName: setLevel
p3761
Vinsert
p3762
I8
VBlock
p3763
tp3764
I1
s(Vinsert
p3765
I42
VSimpleName: println
p3766
Vinsert
p3767
I45
VStringLiteral: "SELECT fund_base_cv_creative_ocr_judge_control_words_1422189630695(a.tfs, b.ocr_text, a.cates)"
p3768
tp3769
I1
s(Vinsert
p3770
I42
VSimpleName: setShort
p3771
Vinsert
p3772
I42
VSimpleName: setByte
p3773
tp3774
I2
s(Vinsert
p3775
I42
VSimpleName: setParent
p3776
Vinsert
p3777
I42
VSimpleName: endExpr
p3778
tp3779
I2
s(Vinsert
p3780
I42
VSimpleName: assertNotNull
p3781
Vinsert
p3782
I39
VPrimitiveType: void
p3783
tp3784
I2
s(g886
I42
g887
Vinsert
p3785
I60
VVariableDeclarationStatement
p3786
tp3787
I2
s(Vinsert
p3788
I42
VSimpleName: isAdminOption
p3789
Vinsert
p3790
I42
VSimpleName: print
p3791
tp3792
I2
s(Vinsert
p3793
I42
VSimpleName: unmodifiableList
p3794
Vinsert
p3795
I41
VReturnStatement
p3796
tp3797
I1
s(g1256
I42
g1257
Vinsert
p3798
I42
VSimpleName: setDriverClass
p3799
tp3800
I1
s(Vinsert
p3801
I42
VSimpleName: nextToken
p3802
Vinsert
p3803
I43
VSimpleType: PGLexer
p3804
tp3805
I2
s(Vinsert
p3806
I42
VSimpleName: getUser
p3807
Vinsert
p3808
I42
VSimpleName: getUser
p3809
tp3810
I2
s(Vinsert
p3811
I42
VSimpleName: isEndOfCommit
p3812
Vinsert
p3813
I8
VBlock
p3814
tp3815
I2
s(Vinsert
p3816
I42
VSimpleName: getHoldability
p3817
Vinsert
p3818
I21
VExpressionStatement
p3819
tp3820
I2
s(Vinsert
p3821
I42
VSimpleName: getFields
p3822
Vinsert
p3823
I42
VSimpleName: containsKey
p3824
tp3825
I1
s(Vinsert
p3826
I42
VSimpleName: getClassLoader
p3827
Vinsert
p3828
I42
VSimpleName: String
p3829
tp3830
I1
s(Vinsert
p3831
I42
VSimpleName: setParent
p3832
Vinsert
p3833
I42
VSimpleName: SQLQueryExpr
p3834
tp3835
I1
s(Vinsert
p3836
I42
VSimpleName: doubleValue
p3837
Vinsert
p3838
I25
VIfStatement
p3839
tp3840
I1
s(Vinsert
p3841
I42
VSimpleName: getStatementList
p3842
Vinsert
p3843
I42
VSimpleName: SQLStatement
p3844
tp3845
I1
s(g1647
I42
g1648
Vinsert
p3846
I42
VSimpleName: VirtualMachineDescriptor
p3847
tp3848
I1
s(g2228
I42
g2229
Vinsert
p3849
I42
VSimpleName: Override
p3850
tp3851
I1
s(Vinsert
p3852
I42
VSimpleName: parseStatementList
p3853
Vinsert
p3854
I43
VSimpleType: MySqlShowMasterStatusStatement
p3855
tp3856
I2
s(Vinsert
p3857
I42
VSimpleName: set
p3858
Vinsert
p3859
I31
VMethodDeclaration
p3860
tp3861
I3
s(g2253
I42
g2254
Vinsert
p3862
I42
VSimpleName: PrintStream
p3863
tp3864
I2
s(Vinsert
p3865
I42
VSimpleName: append
p3866
Vinsert
p3867
I42
VSimpleName: incrementCreateCount
p3868
tp3869
I2
s(Vinsert
p3870
I42
VSimpleName: visit
p3871
Vinsert
p3872
I42
VSimpleName: SQLColumnConstraint
p3873
tp3874
I1
s(Vinsert
p3875
I42
VSimpleName: set
p3876
Vinsert
p3877
I25
VIfStatement
p3878
tp3879
I1
s(Vinsert
p3880
I42
VSimpleName: getDeclaringClass
p3881
Vinsert
p3882
I14
VClassInstanceCreation
p3883
tp3884
I1
s(Vinsert
p3885
I42
VSimpleName: assertEquals
p3886
Vinsert
p3887
I83
VModifier: public
p3888
tp3889
I149
s(g2001
I42
g2002
Vinsert
p3890
I42
VSimpleName: provider
p3891
tp3892
I26
s(Vinsert
p3893
I42
VSimpleName: setUsing
p3894
Vinsert
p3895
I42
VSimpleName: x
p3896
tp3897
I1
s(Vinsert
p3898
I42
VSimpleName: getContext
p3899
Vinsert
p3900
I42
VSimpleName: SQLSelectItem
p3901
tp3902
I1
s(Vinsert
p3903
I42
VSimpleName: isInstance
p3904
Vinsert
p3905
I43
VSimpleType: T
p3906
tp3907
I1
s(Vinsert
p3908
I42
VSimpleName: incrementReusedCount
p3909
Vinsert
p3910
I33
VNullLiteral
p3911
tp3912
I1
s(Vinsert
p3913
I42
VSimpleName: getName
p3914
Vinsert
p3915
I43
VSimpleType: OracleCreateTableStatement.OIDIndex
p3916
tp3917
I1
s(g1815
I42
g1816
Vinsert
p3918
I45
VStringLiteral: "@@"
p3919
tp3920
I2
s(Vinsert
p3921
I42
VSimpleName: getParent
p3922
Vinsert
p3923
I41
VReturnStatement
p3924
tp3925
I2
s(Vinsert
p3926
I42
VSimpleName: parseStatements
p3927
Vinsert
p3928
I43
VSimpleType: Throwable
p3929
tp3930
I2
s(Vinsert
p3931
I42
VSimpleName: setDesensitize
p3932
Vinsert
p3933
I42
VSimpleName: String
p3934
tp3935
I1
s(g76
I42
g77
Vinsert
p3936
I8
VBlock
p3937
tp3938
I1
s(Vinsert
p3939
I42
VSimpleName: evalExpr
p3940
Vinsert
p3941
I42
VSimpleName: error
p3942
tp3943
I13
s(Vinsert
p3944
I42
VSimpleName: setTableSource
p3945
Vinsert
p3946
I42
VSimpleName: getTableName
p3947
tp3948
I1
s(Vinsert
p3949
I42
VSimpleName: getValues
p3950
Vinsert
p3951
I11
VCastExpression
p3952
tp3953
I2
s(Vinsert
p3954
I42
VSimpleName: getSelect
p3955
Vinsert
p3956
I21
VExpressionStatement
p3957
tp3958
I4
s(g454
I42
g455
Vinsert
p3959
I43
VSimpleType: String
p3960
tp3961
I1
s(Vinsert
p3962
I42
VSimpleName: addAndGet
p3963
Vinsert
p3964
I42
VSimpleName: addReadBytesLength
p3965
tp3966
I1
s(Vinsert
p3967
I42
VSimpleName: resultSet_updateCharacterStream
p3968
Vinsert
p3969
I22
VFieldAccess
p3970
tp3971
I1
s(Vinsert
p3972
I42
VSimpleName: accept
p3973
Vinsert
p3974
I42
VSimpleName: getReturnStatus
p3975
tp3976
I1
s(Vinsert
p3977
I42
VSimpleName: close
p3978
Vinsert
p3979
I42
VSimpleName: extractor
p3980
tp3981
I5
s(Vinsert
p3982
I42
VSimpleName: setSlave
p3983
Vinsert
p3984
I83
VModifier: public
p3985
tp3986
I1
s(Vinsert
p3987
I42
VSimpleName: getLeft
p3988
Vinsert
p3989
I42
VSimpleName: right
p3990
tp3991
I1
s(Vinsert
p3992
I42
VSimpleName: isUseAllow
p3993
Vinsert
p3994
I21
VExpressionStatement
p3995
tp3996
I2
s(Vinsert
p3997
I42
VSimpleName: setOrderBy
p3998
Vinsert
p3999
I43
VSimpleType: SQLOver
p4000
tp4001
I2
s(Vinsert
p4002
I42
VSimpleName: close
p4003
Vinsert
p4004
I42
VSimpleName: MockPreparedStatement
p4005
tp4006
I1
s(Vinsert
p4007
I42
VSimpleName: setParent
p4008
Vinsert
p4009
I42
VSimpleName: setCollate
p4010
tp4011
I1
s(g1647
I42
g1648
Vinsert
p4012
I74
VParameterizedType: List<VirtualMachineDescriptor>
p4013
tp4014
I1
s(Vinsert
p4015
I42
VSimpleName: isEmpty
p4016
Vinsert
p4017
I42
VSimpleName: initInternal
p4018
tp4019
I1
s(g439
I42
g440
Vinsert
p4020
I40
VQualifiedName: Token.IDENTIFIER
p4021
tp4022
I1
s(g3452
I42
g3453
Vinsert
p4023
I59
VVariableDeclarationFragment
p4024
tp4025
I1
s(g2319
I42
g2320
Vinsert
p4026
I8
VBlock
p4027
tp4028
I5
s(g537
I42
g538
Vinsert
p4029
I42
VSimpleName: equals
p4030
tp4031
I1
s(g1271
I42
g1272
Vinsert
p4032
I42
VSimpleName: stat
p4033
tp4034
I3
s(Vinsert
p4035
I42
VSimpleName: getDefaultTransactionIsolation
p4036
Vinsert
p4037
I42
VSimpleName: dataSource
p4038
tp4039
I2
s(Vinsert
p4040
I42
VSimpleName: findParameter
p4041
Vinsert
p4042
I60
VVariableDeclarationStatement
p4043
tp4044
I1
s(Vinsert
p4045
I42
VSimpleName: reset
p4046
Vinsert
p4047
I42
VSimpleName: filter
p4048
tp4049
I1
s(Vinsert
p4050
I42
VSimpleName: getParameters
p4051
Vinsert
p4052
I42
VSimpleName: print0
p4053
tp4054
I4
s(Vinsert
p4055
I42
VSimpleName: getParameter
p4056
Vinsert
p4057
I42
VSimpleName: parametersSize
p4058
tp4059
I2
s(Vinsert
p4060
I42
VSimpleName: toMySqlString
p4061
Vinsert
p4062
I13
VCharacterLiteral: '\u005cn'
p4063
tp4064
I1
s(Vinsert
p4065
I42
VSimpleName: isUnderlyingAutoCommit
p4066
Vinsert
p4067
I42
VSimpleName: autoCommit
p4068
tp4069
I1
s(Vinsert
p4070
I42
VSimpleName: put
p4071
Vinsert
p4072
I42
VSimpleName: getErrorCompositeData
p4073
tp4074
I2
s(Vinsert
p4075
I42
VSimpleName: groupBy
p4076
Vinsert
p4077
I59
VVariableDeclarationFragment
p4078
tp4079
I1
s(Vinsert
p4080
I42
VSimpleName: toLong
p4081
Vinsert
p4082
I43
VSimpleType: java.sql.Timestamp
p4083
tp4084
I1
s(g532
I42
g533
Vinsert
p4085
I42
VSimpleName: ParserException
p4086
tp4087
I1
s(Vinsert
p4088
I42
VSimpleName: beforeFirst
p4089
Vinsert
p4090
I33
VNullLiteral
p4091
tp4092
I1
s(Vinsert
p4093
I42
VSimpleName: isTestOnBorrow
p4094
Vinsert
p4095
I32
VMethodInvocation
p4096
tp4097
I4
s(Vinsert
p4098
I42
VSimpleName: parseStatements
p4099
Vinsert
p4100
I45
VStringLiteral: "select * from emp a,dmp b;"
p4101
tp4102
I1
s(g2910
I42
g2911
Vinsert
p4103
I40
VQualifiedName: java.util.Collections
p4104
tp4105
I5
s(Vinsert
p4106
I42
VSimpleName: createSqlStat
p4107
Vinsert
p4108
I34
VNumberLiteral: 1
p4109
tp4110
I1
s(Vinsert
p4111
I42
VSimpleName: length
p4112
Vinsert
p4113
I7
VAssignment: +=
p4114
tp4115
I2
s(Vinsert
p4116
I42
VSimpleName: getPassword
p4117
Vinsert
p4118
I42
VSimpleName: getUser
p4119
tp4120
I1
s(Vinsert
p4121
I42
VSimpleName: size
p4122
Vinsert
p4123
I45
VStringLiteral: "\u005ctELSE\u005cn"
p4124
tp4125
I1
s(Vinsert
p4126
I42
VSimpleName: append
p4127
Vinsert
p4128
I45
VStringLiteral: "\u005c", CachedStatementCount:"
p4129
tp4130
I1
s(g1963
I42
g1964
Vinsert
p4131
I32
VMethodInvocation
p4132
tp4133
I3
s(Vinsert
p4134
I42
VSimpleName: getNetworkInterfaces
p4135
Vinsert
p4136
I43
VSimpleType: InetAddress
p4137
tp4138
I1
s(Vinsert
p4139
I42
VSimpleName: add
p4140
Vinsert
p4141
I42
VSimpleName: setClob
p4142
tp4143
I1
s(Vinsert
p4144
I42
VSimpleName: setColumnType
p4145
Vinsert
p4146
I42
VSimpleName: i
p4147
tp4148
I1
s(g2319
I42
g2320
Vinsert
p4149
I59
VVariableDeclarationFragment
p4150
tp4151
I4
s(Vinsert
p4152
I42
VSimpleName: substring
p4153
Vinsert
p4154
I34
VNumberLiteral: 1
p4155
tp4156
I4
s(g1299
I42
g1300
Vinsert
p4157
I21
VExpressionStatement
p4158
tp4159
I2
s(Vinsert
p4160
I42
VSimpleName: getLockQueueLength
p4161
Vinsert
p4162
I32
VMethodInvocation
p4163
tp4164
I2
s(Vinsert
p4165
I42
VSimpleName: isEmpty
p4166
Vinsert
p4167
I27
VInfixExpression: ==
p4168
tp4169
I2
s(Vinsert
p4170
I42
VSimpleName: integerExpr
p4171
Vinsert
p4172
I22
VFieldAccess
p4173
tp4174
I1
s(g1908
I42
g1909
Vinsert
p4175
I55
VTypeDeclaration
p4176
tp4177
I1
s(Vinsert
p4178
I42
VSimpleName: getStatementPool
p4179
Vinsert
p4180
I8
VBlock
p4181
tp4182
I1
s(Vinsert
p4183
I42
VSimpleName: size
p4184
Vinsert
p4185
I45
VStringLiteral: "\u005ct\u005ct\u005ctj := j + 1;\u005cn"
p4186
tp4187
I1
s(Vinsert
p4188
I42
VSimpleName: asList
p4189
Vinsert
p4190
I8
VBlock
p4191
tp4192
I4
s(g1491
I42
g1492
Vinsert
p4193
I83
VModifier: public
p4194
tp4195
I1
s(Vinsert
p4196
I42
VSimpleName: equals
p4197
Vinsert
p4198
I40
VQualifiedName: JdbcConstants.H2
p4199
tp4200
I1
s(g4170
I42
g4171
Vinsert
p4201
I42
VSimpleName: exprParser
p4202
tp4203
I1
s(Vinsert
p4204
I42
VSimpleName: toMySqlString
p4205
Vinsert
p4206
I45
VStringLiteral: "SELECT l_suppkey AS supplier_no, SUM(l_extendedprice * (1 - l_discount)) AS total_revenue\u005cn"
p4207
tp4208
I1
s(g542
I42
g543
Vinsert
p4209
I45
VStringLiteral: "group by process, \u005cn"
p4210
tp4211
I1
s(Vinsert
p4212
I42
VSimpleName: setValue
p4213
Vinsert
p4214
I43
VSimpleType: PGInetExpr
p4215
tp4216
I2
s(Vinsert
p4217
I42
VSimpleName: getExpr
p4218
Vinsert
p4219
I60
VVariableDeclarationStatement
p4220
tp4221
I10
s(Vinsert
p4222
I42
VSimpleName: getName
p4223
Vinsert
p4224
I42
VSimpleName: ref
p4225
tp4226
I1
s(Vinsert
p4227
I42
VSimpleName: intValue
p4228
Vinsert
p4229
I22
VFieldAccess
p4230
tp4231
I1
s(g1218
I42
g1219
Vinsert
p4232
I31
VMethodDeclaration
p4233
tp4234
I5
s(g2824
I42
g2825
Vinsert
p4235
I42
VSimpleName: getFunction
p4236
tp4237
I5
s(Vinsert
p4238
I42
VSimpleName: setCursorName
p4239
Vinsert
p4240
I32
VMethodInvocation
p4241
tp4242
I5
s(Vinsert
p4243
I42
VSimpleName: getSeed
p4244
Vinsert
p4245
I45
VStringLiteral: "identity ("
p4246
tp4247
I1
s(Vinsert
p4248
I42
VSimpleName: nextToken
p4249
Vinsert
p4250
I42
VSimpleName: token
p4251
tp4252
I58
s(Vinsert
p4253
I42
VSimpleName: printStackTrace
p4254
Vinsert
p4255
I42
VSimpleName: Exception
p4256
tp4257
I2
s(Vinsert
p4258
I42
VSimpleName: setTableMapping
p4259
Vinsert
p4260
I32
VMethodInvocation
p4261
tp4262
I1
s(Vinsert
p4263
I42
VSimpleName: connection_close
p4264
Vinsert
p4265
I21
VExpressionStatement
p4266
tp4267
I1
s(Vinsert
p4268
I42
VSimpleName: getTriggerType
p4269
Vinsert
p4270
I32
VMethodInvocation
p4271
tp4272
I5
s(Vinsert
p4273
I42
VSimpleName: isInstance
p4274
Vinsert
p4275
I42
VSimpleName: iface
p4276
tp4277
I20
s(Vinsert
p4278
I42
VSimpleName: console
p4279
Vinsert
p4280
I45
VStringLiteral: "| c_int        | int(11)      | NO   | MUL | NULL                |                             |\u005cn"
p4281
tp4282
I1
s(Vinsert
p4283
I42
VSimpleName: setCollate
p4284
Vinsert
p4285
I21
VExpressionStatement
p4286
tp4287
I2
s(Vinsert
p4288
I42
VSimpleName: setAlgorithm
p4289
Vinsert
p4290
I42
VSimpleName: setAlgorithm
p4291
tp4292
I2
s(Vinsert
p4293
I42
VSimpleName: deleteRow
p4294
Vinsert
p4295
I42
VSimpleName: assertNotNull
p4296
tp4297
I1
s(Vinsert
p4298
I42
VSimpleName: getAccessModel
p4299
Vinsert
p4300
I42
VSimpleName: getIsolationLevel
p4301
tp4302
I1
s(Vinsert
p4303
I42
VSimpleName: toSQLString
p4304
Vinsert
p4305
I45
VStringLiteral: "\u005ctMEMBER FUNCTION ODCIAggregateMerge (self IN OUT connstrBycomma, ctx2 IN connstrBycomma) RETURN number\u005cn"
p4306
tp4307
I1
s(Vinsert
p4308
I42
VSimpleName: putLong
p4309
Vinsert
p4310
I8
VBlock
p4311
tp4312
I1
s(Vinsert
p4313
I42
VSimpleName: getSql
p4314
Vinsert
p4315
I42
VSimpleName: PreparedStatementProxy
p4316
tp4317
I2
s(Vinsert
p4318
I42
VSimpleName: getType
p4319
Vinsert
p4320
I42
VSimpleName: accept
p4321
tp4322
I2
s(Vinsert
p4323
I42
VSimpleName: get
p4324
Vinsert
p4325
I45
VStringLiteral: "connection is null"
p4326
tp4327
I1
s(g3233
I42
g3234
Vinsert
p4328
I42
VSimpleName: List
p4329
tp4330
I16
s(g1145
I42
g1146
Vinsert
p4331
I59
VVariableDeclarationFragment
p4332
tp4333
I1
s(Vinsert
p4334
I42
VSimpleName: lock
p4335
Vinsert
p4336
I25
VIfStatement
p4337
tp4338
I1
s(Vinsert
p4339
I42
VSimpleName: getStatementList
p4340
Vinsert
p4341
I42
VSimpleName: getStatementList
p4342
tp4343
I1
s(Vinsert
p4344
I42
VSimpleName: put
p4345
Vinsert
p4346
I45
VStringLiteral: "ONLY"
p4347
tp4348
I1
s(g3659
I42
g3660
Vinsert
p4349
I60
VVariableDeclarationStatement
p4350
tp4351
I1
s(Vinsert
p4352
I42
VSimpleName: formatOdps
p4353
Vinsert
p4354
I45
VStringLiteral: "\u005cn\u005ctENABLE LIFECYCLE"
p4355
tp4356
I1
s(Vinsert
p4357
I42
VSimpleName: getValues
p4358
Vinsert
p4359
I44
VSingleVariableDeclaration
p4360
tp4361
I1
s(Vinsert
p4362
I42
VSimpleName: get
p4363
Vinsert
p4364
I42
VSimpleName: functionStats
p4365
tp4366
I1
s(g4258
I42
g4259
Vinsert
p4367
I42
VSimpleName: Map
p4368
tp4369
I1
s(Vinsert
p4370
I42
VSimpleName: info
p4371
Vinsert
p4372
I42
VSimpleName: SQLCreateTableStatement
p4373
tp4374
I2
s(g2479
I42
g2480
Vinsert
p4375
I43
VSimpleType: SQLDropEventStatement
p4376
tp4377
I1
s(g2533
I42
g2534
Vinsert
p4378
I34
VNumberLiteral: 1000
p4379
tp4380
I2
s(Vinsert
p4381
I42
VSimpleName: println
p4382
Vinsert
p4383
I58
VVariableDeclarationExpression
p4384
tp4385
I1
s(Vinsert
p4386
I42
VSimpleName: getClass
p4387
Vinsert
p4388
I43
VSimpleType: SpringStat
p4389
tp4390
I1
s(Vinsert
p4391
I42
VSimpleName: commitTransaction
p4392
Vinsert
p4393
I32
VMethodInvocation
p4394
tp4395
I2
s(g3528
I42
g3529
Vinsert
p4396
I25
VIfStatement
p4397
tp4398
I2
s(Vinsert
p4399
I42
VSimpleName: getReferenceOn
p4400
Vinsert
p4401
I32
VMethodInvocation
p4402
tp4403
I5
s(Vinsert
p4404
I42
VSimpleName: parseLimit
p4405
Vinsert
p4406
I27
VInfixExpression: ==
p4407
tp4408
I1
s(Vinsert
p4409
I42
VSimpleName: toSQLExpr
p4410
Vinsert
p4411
I60
VVariableDeclarationStatement
p4412
tp4413
I7
s(Vinsert
p4414
I42
VSimpleName: parseTableSource
p4415
Vinsert
p4416
I42
VSimpleName: into
p4417
tp4418
I1
s(Vinsert
p4419
I42
VSimpleName: isExceptionFatal
p4420
Vinsert
p4421
I42
VSimpleName: MySqlExceptionSorter
p4422
tp4423
I4
s(Vinsert
p4424
I42
VSimpleName: setTime
p4425
Vinsert
p4426
I21
VExpressionStatement
p4427
tp4428
I3
s(Vinsert
p4429
I42
VSimpleName: get
p4430
Vinsert
p4431
I42
VSimpleName: getConcurrentMax
p4432
tp4433
I1
s(g1385
I42
g1386
Vinsert
p4434
I9
VBooleanLiteral: true
p4435
tp4436
I2
s(Vinsert
p4437
I42
VSimpleName: put
p4438
Vinsert
p4439
I42
VSimpleName: setValidationQuery
p4440
tp4441
I1
s(Vinsert
p4442
I42
VSimpleName: getPlatformMBeanServer
p4443
Vinsert
p4444
I54
VTryStatement
p4445
tp4446
I1
s(Vinsert
p4447
I42
VSimpleName: setWhiteListEnable
p4448
Vinsert
p4449
I42
VSimpleName: setBlackListEnable
p4450
tp4451
I1
s(Vinsert
p4452
I42
VSimpleName: keySet
p4453
Vinsert
p4454
I31
VMethodDeclaration
p4455
tp4456
I1
s(Vinsert
p4457
I42
VSimpleName: getStatementStat
p4458
Vinsert
p4459
I42
VSimpleName: stat
p4460
tp4461
I3
s(Vinsert
p4462
I42
VSimpleName: add
p4463
Vinsert
p4464
I45
VStringLiteral: "SPLIT"
p4465
tp4466
I1
s(Vinsert
p4467
I42
VSimpleName: visit
p4468
Vinsert
p4469
I39
VPrimitiveType: boolean
p4470
tp4471
I27
s(Vinsert
p4472
I42
VSimpleName: keySet
p4473
Vinsert
p4474
I42
VSimpleName: method
p4475
tp4476
I1
s(Vinsert
p4477
I42
VSimpleName: skipSeparator
p4478
Vinsert
p4479
I42
VSimpleName: sut
p4480
tp4481
I2
s(g116
I42
g117
Vinsert
p4482
I42
VSimpleName: dataSource
p4483
tp4484
I4
s(Vinsert
p4485
I42
VSimpleName: setParent
p4486
Vinsert
p4487
I42
VSimpleName: setIndexIn
p4488
tp4489
I1
s(Vinsert
p4490
I42
VSimpleName: query
p4491
Vinsert
p4492
I42
VSimpleName: selectParser
p4493
tp4494
I8
s(Vinsert
p4495
I42
VSimpleName: indexOf
p4496
Vinsert
p4497
I34
VNumberLiteral: 29276
p4498
tp4499
I1
s(Vinsert
p4500
I42
VSimpleName: assertTrue
p4501
Vinsert
p4502
I45
VStringLiteral: "select * from t where id  != id + 3"
p4503
tp4504
I1
s(Vinsert
p4505
I42
VSimpleName: getOn
p4506
Vinsert
p4507
I42
VSimpleName: print
p4508
tp4509
I2
s(Vinsert
p4510
I42
VSimpleName: assertTrue
p4511
Vinsert
p4512
I42
VSimpleName: assertNotEquals
p4513
tp4514
I1
s(Vinsert
p4515
I42
VSimpleName: toSQLString
p4516
Vinsert
p4517
I45
VStringLiteral: "\u005cn\u005ct\u005c"ID\u005c" NUMBER(38, 0) NOT NULL ENABLE,"
p4518
tp4519
I1
s(Vinsert
p4520
I42
VSimpleName: putAttribute
p4521
Vinsert
p4522
I41
VReturnStatement
p4523
tp4524
I1
s(Vinsert
p4525
I42
VSimpleName: accept
p4526
Vinsert
p4527
I42
VSimpleName: SQLASTOutputVisitor
p4528
tp4529
I1
s(Vinsert
p4530
I42
VSimpleName: accept
p4531
Vinsert
p4532
I42
VSimpleName: SQLObject
p4533
tp4534
I7
s(g3472
I42
g3473
Vinsert
p4535
I16
VConditionalExpression
p4536
tp4537
I1
s(Vinsert
p4538
I42
VSimpleName: createSchemaStatVisitor
p4539
Vinsert
p4540
I43
VSimpleType: SQLStatement
p4541
tp4542
I3
s(Vinsert
p4543
I42
VSimpleName: length
p4544
Vinsert
p4545
I41
VReturnStatement
p4546
tp4547
I6
s(Vinsert
p4548
I42
VSimpleName: getTables
p4549
Vinsert
p4550
I43
VSimpleType: OracleSchemaStatVisitor
p4551
tp4552
I34
s(Vinsert
p4553
I42
VSimpleName: token
p4554
Vinsert
p4555
I43
VSimpleType: SQLCreateViewStatement.Column
p4556
tp4557
I1
s(Vinsert
p4558
I42
VSimpleName: assertEquals
p4559
Vinsert
p4560
I43
VSimpleType: Date
p4561
tp4562
I2
s(Vinsert
p4563
I42
VSimpleName: setParent
p4564
Vinsert
p4565
I42
VSimpleName: accept
p4566
tp4567
I2
s(Vinsert
p4568
I42
VSimpleName: clone
p4569
Vinsert
p4570
I42
VSimpleName: item
p4571
tp4572
I16
s(g3417
I42
g3418
Vinsert
p4573
I41
VReturnStatement
p4574
tp4575
I1
s(g1725
I42
g1726
Vinsert
p4576
I42
VSimpleName: SchemaObject
p4577
tp4578
I1
s(Vinsert
p4579
I42
VSimpleName: exprList
p4580
Vinsert
p4581
I40
VQualifiedName: Token.LPAREN
p4582
tp4583
I6
s(Vinsert
p4584
I42
VSimpleName: remove
p4585
Vinsert
p4586
I42
VSimpleName: unique
p4587
tp4588
I1
s(Vinsert
p4589
I42
VSimpleName: clone
p4590
Vinsert
p4591
I42
VSimpleName: cachedColumns2
p4592
tp4593
I1
s(Vinsert
p4594
I42
VSimpleName: cancel
p4595
Vinsert
p4596
I27
VInfixExpression: !=
p4597
tp4598
I1
s(g557
I42
g558
Vinsert
p4599
I45
VStringLiteral: "\u005cn\u005ct\u005ct) XX"
p4600
tp4601
I1
s(Vinsert
p4602
I42
VSimpleName: getLeft
p4603
Vinsert
p4604
I43
VSimpleType: SQLSetStatement
p4605
tp4606
I2
s(Vinsert
p4607
I42
VSimpleName: visit
p4608
Vinsert
p4609
I42
VSimpleName: dataType
p4610
tp4611
I4
s(g2504
I42
g2505
Vinsert
p4612
I42
VSimpleName: print0
p4613
tp4614
I1
s(Vinsert
p4615
I42
VSimpleName: setIdentifiedBy
p4616
Vinsert
p4617
I21
VExpressionStatement
p4618
tp4619
I3
s(Vinsert
p4620
I42
VSimpleName: setRef
p4621
Vinsert
p4622
I8
VBlock
p4623
tp4624
I1
s(Vinsert
p4625
I42
VSimpleName: stringVal
p4626
Vinsert
p4627
I44
VSingleVariableDeclaration
p4628
tp4629
I1
s(Vinsert
p4630
I42
VSimpleName: isUpdateWhereNoneCheck
p4631
Vinsert
p4632
I60
VVariableDeclarationStatement
p4633
tp4634
I1
s(Vinsert
p4635
I42
VSimpleName: getColumnName
p4636
Vinsert
p4637
I42
VSimpleName: MySqlAlterTableChangeColumn
p4638
tp4639
I1
s(Vinsert
p4640
I42
VSimpleName: setBytes
p4641
Vinsert
p4642
I42
VSimpleName: error
p4643
tp4644
I1
s(Vinsert
p4645
I42
VSimpleName: getClass
p4646
Vinsert
p4647
I42
VSimpleName: uri
p4648
tp4649
I1
s(g1284
I42
g1285
Vinsert
p4650
I42
VSimpleName: print0
p4651
tp4652
I1
s(g2324
I42
g2325
Vinsert
p4653
I39
VPrimitiveType: long
p4654
tp4655
I1
s(Vinsert
p4656
I42
VSimpleName: add
p4657
Vinsert
p4658
I42
VSimpleName: fileName
p4659
tp4660
I1
s(Vinsert
p4661
I42
VSimpleName: isBuiltinDataType
p4662
Vinsert
p4663
I8
VBlock
p4664
tp4665
I1
s(g96
I42
g97
Vinsert
p4666
I27
VInfixExpression: >
p4667
tp4668
I1
s(Vinsert
p4669
I42
VSimpleName: setEndTimeMillis
p4670
Vinsert
p4671
I42
VSimpleName: transcationInfo
p4672
tp4673
I2
s(Vinsert
p4674
I42
VSimpleName: equalsIgnoreCase
p4675
Vinsert
p4676
I42
VSimpleName: param
p4677
tp4678
I1
s(Vinsert
p4679
I42
VSimpleName: getLock
p4680
Vinsert
p4681
I9
VBooleanLiteral: true
p4682
tp4683
I1
s(Vinsert
p4684
I42
VSimpleName: setLimit
p4685
Vinsert
p4686
I32
VMethodInvocation
p4687
tp4688
I3
s(Vinsert
p4689
I42
VSimpleName: toSQLString
p4690
Vinsert
p4691
I45
VStringLiteral: "\u005ct\u005ct\u005ct, SYS_ITEM.ITEM_CODE, P.CONFIRM_COST_PRICE04, SYS_ITEM.ITEM_ID AS PROD_ATTRIBUTE_ID, SYS_ITEM.ITEM_CHIP\u005cn"
p4692
tp4693
I1
s(Vinsert
p4694
I42
VSimpleName: toSQLString
p4695
Vinsert
p4696
I45
VStringLiteral: "\u005ct\u005ctINITIAL 65536\u005cn"
p4697
tp4698
I3
s(Vinsert
p4699
I42
VSimpleName: assertEquals
p4700
Vinsert
p4701
I42
VSimpleName: assertEquals
p4702
tp4703
I106
s(Vinsert
p4704
I42
VSimpleName: addAll
p4705
Vinsert
p4706
I45
VStringLiteral: "format.body_before_comment"
p4707
tp4708
I1
s(Vinsert
p4709
I42
VSimpleName: assertTrue
p4710
Vinsert
p4711
I43
VSimpleType: WallConfig
p4712
tp4713
I8
s(g3528
I42
g3529
Vinsert
p4714
I44
VSingleVariableDeclaration
p4715
tp4716
I3
s(g2543
I42
g2544
Vinsert
p4717
I8
VBlock
p4718
tp4719
I18
s(Vinsert
p4720
I42
VSimpleName: nextToken
p4721
Vinsert
p4722
I42
VSimpleName: item
p4723
tp4724
I2
s(Vinsert
p4725
I42
VSimpleName: print
p4726
Vinsert
p4727
I42
VSimpleName: out
p4728
tp4729
I3
s(Vinsert
p4730
I42
VSimpleName: getParamType
p4731
Vinsert
p4732
I42
VSimpleName: getParamType
p4733
tp4734
I1
s(Vinsert
p4735
I42
VSimpleName: formatOdps
p4736
Vinsert
p4737
I45
VStringLiteral: "\u005cnFROM t1;"
p4738
tp4739
I1
s(Vinsert
p4740
I42
VSimpleName: isRemoveAbandoned
p4741
Vinsert
p4742
I33
VNullLiteral
p4743
tp4744
I1
s(Vinsert
p4745
I42
VSimpleName: assertNotSame
p4746
Vinsert
p4747
I42
VSimpleName: prepareStatement
p4748
tp4749
I1
s(Vinsert
p4750
I42
VSimpleName: setName
p4751
Vinsert
p4752
I33
VNullLiteral
p4753
tp4754
I4
s(Vinsert
p4755
I42
VSimpleName: connection_rollback
p4756
Vinsert
p4757
I53
VThrowStatement
p4758
tp4759
I1
s(Vinsert
p4760
I42
VSimpleName: name
p4761
Vinsert
p4762
I42
VSimpleName: print
p4763
tp4764
I1
s(Vinsert
p4765
I42
VSimpleName: isHex
p4766
Vinsert
p4767
I7
VAssignment: =
p4768
tp4769
I1
s(Vinsert
p4770
I42
VSimpleName: getFrom
p4771
Vinsert
p4772
I43
VSimpleType: SQLTableSource
p4773
tp4774
I2
s(Vinsert
p4775
I42
VSimpleName: wrap
p4776
Vinsert
p4777
I32
VMethodInvocation
p4778
tp4779
I3
s(Vinsert
p4780
I42
VSimpleName: isAssignableFrom
p4781
Vinsert
p4782
I8
VBlock
p4783
tp4784
I3
s(Vinsert
p4785
I42
VSimpleName: check
p4786
Vinsert
p4787
I42
VSimpleName: OracleWallProvider
p4788
tp4789
I6
s(g1180
I42
g1181
Vinsert
p4790
I32
VMethodInvocation
p4791
tp4792
I4
s(Vinsert
p4793
I42
VSimpleName: assertEquals
p4794
Vinsert
p4795
I42
VSimpleName: test_sub
p4796
tp4797
I1
s(g947
I42
g948
Vinsert
p4798
I27
VInfixExpression: !=
p4799
tp4800
I2
s(Vinsert
p4801
I42
VSimpleName: connect
p4802
Vinsert
p4803
I32
VMethodInvocation
p4804
tp4805
I6
s(Vinsert
p4806
I42
VSimpleName: getMethodName
p4807
Vinsert
p4808
I42
VSimpleName: SQLAggregateExpr
p4809
tp4810
I2
s(g3811
I42
g3812
Vinsert
p4811
I42
VSimpleName: print
p4812
tp4813
I1
s(Vinsert
p4814
I42
VSimpleName: getTableSource
p4815
Vinsert
p4816
I42
VSimpleName: SQLInsertStatement
p4817
tp4818
I2
s(Vinsert
p4819
I42
VSimpleName: assertEquals
p4820
Vinsert
p4821
I45
VStringLiteral: "\u005cn\u005ct\u005ctOR d.indkey[7] = a.attnum"
p4822
tp4823
I1
s(Vinsert
p4824
I42
VSimpleName: parseObject
p4825
Vinsert
p4826
I43
VSimpleType: JSONObject
p4827
tp4828
I1
s(Vinsert
p4829
I42
VSimpleName: checkValid
p4830
Vinsert
p4831
I42
VSimpleName: Assert
p4832
tp4833
I2
s(Vinsert
p4834
I42
VSimpleName: getProxyFilters
p4835
Vinsert
p4836
I60
VVariableDeclarationStatement
p4837
tp4838
I4
s(Vinsert
p4839
I42
VSimpleName: from
p4840
Vinsert
p4841
I32
VMethodInvocation
p4842
tp4843
I4
s(Vinsert
p4844
I42
VSimpleName: setParent
p4845
Vinsert
p4846
I48
VSuperMethodInvocation
p4847
tp4848
I1
s(Vinsert
p4849
I42
VSimpleName: executeQuery
p4850
Vinsert
p4851
I42
VSimpleName: pstmt2
p4852
tp4853
I1
s(Vinsert
p4854
I42
VSimpleName: clone
p4855
Vinsert
p4856
I42
VSimpleName: setExceptionsInto
p4857
tp4858
I1
s(Vinsert
p4859
I42
VSimpleName: match
p4860
Vinsert
p4861
I42
VSimpleName: MappingRuleEntry
p4862
tp4863
I1
s(g562
I42
g563
Vinsert
p4864
I42
VSimpleName: DruidDataSourceStatManager
p4865
tp4866
I4
s(Vinsert
p4867
I42
VSimpleName: getRunningCount
p4868
Vinsert
p4869
I42
VSimpleName: entry
p4870
tp4871
I1
s(g2049
I42
g2050
Vinsert
p4872
I45
VStringLiteral: "INITRANS 1\u005cn"
p4873
tp4874
I11
s(Vinsert
p4875
I42
VSimpleName: getName
p4876
Vinsert
p4877
I42
VSimpleName: var
p4878
tp4879
I8
s(Vinsert
p4880
I42
VSimpleName: toSQLString
p4881
Vinsert
p4882
I42
VSimpleName: size
p4883
tp4884
I30
s(Vinsert
p4885
I42
VSimpleName: getActivePeakTime
p4886
Vinsert
p4887
I16
VConditionalExpression
p4888
tp4889
I1
s(Vinsert
p4890
I42
VSimpleName: statement_executeBatch
p4891
Vinsert
p4892
I42
VSimpleName: getAttributes
p4893
tp4894
I1
s(g972
I42
g973
Vinsert
p4895
I45
VStringLiteral: "\u005ct, DECODE(locked_mode, 1, 'NULL', 2, 'SS - SUB SHARE', 3, 'SX - SUB EXCLUSIVE', 4, 'S - SHARE', 5, 'SSX - SHARE/SUB EXCLUSIVE', 6, 'X - EXCLUSIVE') AS Lock_mode\u005cn"
p4896
tp4897
I1
s(Vinsert
p4898
I42
VSimpleName: setCache
p4899
Vinsert
p4900
I42
VSimpleName: stmt
p4901
tp4902
I1
s(Vinsert
p4903
I42
VSimpleName: getMajorVersion
p4904
Vinsert
p4905
I42
VSimpleName: isOracleDriver10
p4906
tp4907
I1
s(Vinsert
p4908
I42
VSimpleName: get
p4909
Vinsert
p4910
I43
VSimpleType: SQLStatement
p4911
tp4912
I153
s(g3442
I42
g3443
Vinsert
p4913
I45
VStringLiteral: "from employees\u005cn"
p4914
tp4915
I2
s(Vinsert
p4916
I42
VSimpleName: assertEquals
p4917
Vinsert
p4918
I42
VSimpleName: EvalMethodLengthTest
p4919
tp4920
I1
s(Vinsert
p4921
I42
VSimpleName: getUsing
p4922
Vinsert
p4923
I45
VStringLiteral: "order siblings by "
p4924
tp4925
I1
s(Vinsert
p4926
I42
VSimpleName: getConnectionEventListeners
p4927
Vinsert
p4928
I70
VEnhancedForStatement
p4929
tp4930
I1
s(Vinsert
p4931
I42
VSimpleName: isIfExists
p4932
Vinsert
p4933
I43
VSimpleType: SQLDropTableSpaceStatement
p4934
tp4935
I1
s(Vinsert
p4936
I42
VSimpleName: exprRest
p4937
Vinsert
p4938
I40
VQualifiedName: Token.COMMA
p4939
tp4940
I2
s(Vinsert
p4941
I42
VSimpleName: initCause
p4942
Vinsert
p4943
I42
VSimpleName: SystemException
p4944
tp4945
I1
s(Vinsert
p4946
I42
VSimpleName: getRight
p4947
Vinsert
p4948
I60
VVariableDeclarationStatement
p4949
tp4950
I5
s(Vinsert
p4951
I42
VSimpleName: assertEquals
p4952
Vinsert
p4953
I14
VClassInstanceCreation
p4954
tp4955
I35
s(Vinsert
p4956
I42
VSimpleName: valueOf
p4957
Vinsert
p4958
I42
VSimpleName: setUnit
p4959
tp4960
I1
s(g3724
I42
g3725
Vinsert
p4961
I45
VStringLiteral: "\u005ctINITIAL 65536\u005cn"
p4962
tp4963
I1
s(Vinsert
p4964
I42
VSimpleName: prepareCall
p4965
Vinsert
p4966
I42
VSimpleName: getDataSource
p4967
tp4968
I1
s(g1032
I42
g1033
Vinsert
p4969
I25
VIfStatement
p4970
tp4971
I1
s(Vinsert
p4972
I42
VSimpleName: nextToken
p4973
Vinsert
p4974
I40
VQualifiedName: Token.RPAREN
p4975
tp4976
I3
s(Vinsert
p4977
I42
VSimpleName: nextToken
p4978
Vinsert
p4979
I45
VStringLiteral: "CREATE SYNONYM"
p4980
tp4981
I1
s(Vinsert
p4982
I42
VSimpleName: getWaitTime
p4983
Vinsert
p4984
I42
VSimpleName: isNoWait
p4985
tp4986
I1
s(Vinsert
p4987
I42
VSimpleName: println
p4988
Vinsert
p4989
I42
VSimpleName: comments
p4990
tp4991
I2
s(Vinsert
p4992
I42
VSimpleName: assertFalse
p4993
Vinsert
p4994
I27
VInfixExpression: <
p4995
tp4996
I1
s(Vinsert
p4997
I42
VSimpleName: emptyList
p4998
Vinsert
p4999
I42
VSimpleName: SQLObject
p5000
tp5001
I8
s(Vinsert
p5002
I42
VSimpleName: getDomainName
p5003
Vinsert
p5004
I32
VMethodInvocation
p5005
tp5006
I2
s(Vinsert
p5007
I42
VSimpleName: createMockCallableStatement
p5008
Vinsert
p5009
I42
VSimpleName: createMockCallableStatement
p5010
tp5011
I2
s(Vinsert
p5012
I42
VSimpleName: primaryRest
p5013
Vinsert
p5014
I22
VFieldAccess
p5015
tp5016
I2
s(Vinsert
p5017
I42
VSimpleName: buildInsertSql
p5018
Vinsert
p5019
I42
VSimpleName: String
p5020
tp5021
I1
s(Vinsert
p5022
I42
VSimpleName: assertEquals
p5023
Vinsert
p5024
I45
VStringLiteral: "\u005cn\u005ct\u005ct\u005ct\u005ctUNION"
p5025
tp5026
I1
s(g1160
I42
g1161
Vinsert
p5027
I44
VSingleVariableDeclaration
p5028
tp5029
I1
s(Vinsert
p5030
I42
VSimpleName: getItems
p5031
Vinsert
p5032
I42
VSimpleName: orderByItem
p5033
tp5034
I1
s(Vinsert
p5035
I42
VSimpleName: parameterize
p5036
Vinsert
p5037
I42
VSimpleName: Assert
p5038
tp5039
I2
s(Vinsert
p5040
I42
VSimpleName: skipFirstHintsOrMultiCommentAndNextToken
p5041
Vinsert
p5042
I43
VSimpleType: MySqlLexer
p5043
tp5044
I2
s(Vinsert
p5045
I42
VSimpleName: getAttributes
p5046
Vinsert
p5047
I83
VModifier: public
p5048
tp5049
I1
s(g4452
I42
g4453
Vinsert
p5050
I78
VMarkerAnnotation
p5051
tp5052
I1
s(Vinsert
p5053
I42
VSimpleName: getMethod
p5054
Vinsert
p5055
I42
VSimpleName: Method
p5056
tp5057
I3
s(Vinsert
p5058
I42
VSimpleName: put
p5059
Vinsert
p5060
I42
VSimpleName: getConnectionCount_Alive_6_12_Hours
p5061
tp5062
I1
s(g1878
I42
g1879
Vinsert
p5063
I42
VSimpleName: SQLMethodInvokeExpr
p5064
tp5065
I1
s(g3345
I42
g3346
Vinsert
p5066
I42
VSimpleName: Override
p5067
tp5068
I31
s(Vinsert
p5069
I42
VSimpleName: createExprParser
p5070
Vinsert
p5071
I42
VSimpleName: stmt
p5072
tp5073
I1
s(Vinsert
p5074
I42
VSimpleName: token
p5075
Vinsert
p5076
I42
VSimpleName: setDefaultExpr
p5077
tp5078
I1
s(Vinsert
p5079
I42
VSimpleName: close
p5080
Vinsert
p5081
I42
VSimpleName: Exception
p5082
tp5083
I21
s(Vinsert
p5084
I42
VSimpleName: getName
p5085
Vinsert
p5086
I45
VStringLiteral: "CREATE DATABASE "
p5087
tp5088
I1
s(Vinsert
p5089
I42
VSimpleName: parseStatements
p5090
Vinsert
p5091
I45
VStringLiteral: "  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)\u005cn"
p5092
tp5093
I1
s(g1155
I42
g1156
Vinsert
p5094
I42
VSimpleName: sortedBy
p5095
tp5096
I1
s(Vinsert
p5097
I42
VSimpleName: setPoolPreparedStatements
p5098
Vinsert
p5099
I42
VSimpleName: maxActive
p5100
tp5101
I1
s(g141
I42
g142
Vinsert
p5102
I42
VSimpleName: column
p5103
tp5104
I3
s(Vinsert
p5105
I42
VSimpleName: getItems
p5106
Vinsert
p5107
I42
VSimpleName: visit
p5108
tp5109
I1
s(g1471
I42
g1472
Vinsert
p5110
I21
VExpressionStatement
p5111
tp5112
I7
s(Vinsert
p5113
I42
VSimpleName: setType
p5114
Vinsert
p5115
I42
VSimpleName: clause
p5116
tp5117
I4
s(Vinsert
p5118
I42
VSimpleName: getLog
p5119
Vinsert
p5120
I31
VMethodDeclaration
p5121
tp5122
I1
s(Vinsert
p5123
I42
VSimpleName: pow
p5124
Vinsert
p5125
I27
VInfixExpression: <
p5126
tp5127
I1
s(Vinsert
p5128
I42
VSimpleName: console
p5129
Vinsert
p5130
I45
VStringLiteral: "| c_blob       | blob         | NO   |     | NULL    |       |\u005cn"
p5131
tp5132
I1
s(Vinsert
p5133
I42
VSimpleName: getAttributes
p5134
Vinsert
p5135
I27
VInfixExpression: ==
p5136
tp5137
I1
s(Vinsert
p5138
I42
VSimpleName: size
p5139
Vinsert
p5140
I43
VSimpleType: MySqlSchemaStatVisitor
p5141
tp5142
I1
s(Vinsert
p5143
I42
VSimpleName: getConnection
p5144
Vinsert
p5145
I42
VSimpleName: connectionErrorOccurred
p5146
tp5147
I1
s(Vinsert
p5148
I42
VSimpleName: getMBeanServerConnection
p5149
Vinsert
p5150
I42
VSimpleName: Object
p5151
tp5152
I1
s(g3462
I42
g3463
Vinsert
p5153
I60
VVariableDeclarationStatement
p5154
tp5155
I1
s(Vinsert
p5156
I42
VSimpleName: setLockType
p5157
Vinsert
p5158
I42
VSimpleName: lexer
p5159
tp5160
I3
s(Vinsert
p5161
I42
VSimpleName: assertEquals
p5162
Vinsert
p5163
I45
VStringLiteral: "\u005cnLIMIT ? OFFSET ?"
p5164
tp5165
I1
s(Vinsert
p5166
I42
VSimpleName: assertEquals
p5167
Vinsert
p5168
I45
VStringLiteral: "SELECT * FROM T WHERE FID = ? OR FID LIKE 1"
p5169
tp5170
I1
s(Vinsert
p5171
I42
VSimpleName: error
p5172
Vinsert
p5173
I45
VStringLiteral: "getMaxRows error"
p5174
tp5175
I1
s(Vinsert
p5176
I42
VSimpleName: getTableNames
p5177
Vinsert
p5178
I59
VVariableDeclarationFragment
p5179
tp5180
I2
s(g3659
I42
g3660
Vinsert
p5181
I59
VVariableDeclarationFragment
p5182
tp5183
I1
s(Vinsert
p5184
I42
VSimpleName: assertFalse
p5185
Vinsert
p5186
I45
VStringLiteral: "SELECT F1, F2 FROM ALL_ALL_TABLES"
p5187
tp5188
I2
s(g196
I42
g197
Vinsert
p5189
I45
VStringLiteral: "\u005ctAND T1.SCENE_ID = T2.SCENE_ID\u005cn"
p5190
tp5191
I1
s(g4679
I42
g4680
Vinsert
p5192
I42
VSimpleName: ReentrantLock
p5193
tp5194
I1
s(Vinsert
p5195
I42
VSimpleName: getExprParser
p5196
Vinsert
p5197
I38
VPrefixExpression: !
p5198
tp5199
I1
s(Vinsert
p5200
I42
VSimpleName: setOpaque
p5201
Vinsert
p5202
I8
VBlock
p5203
tp5204
I2
s(g3821
I42
g3822
Vinsert
p5205
I27
VInfixExpression: ==
p5206
tp5207
I1
s(g3544
I42
g3545
Vinsert
p5208
I45
VStringLiteral: "\u005ct\u005ctt2.os, \u005cn"
p5209
tp5210
I1
s(Vinsert
p5211
I42
VSimpleName: assertEquals
p5212
Vinsert
p5213
I45
VStringLiteral: "\u005cn\u005ctname varchar(20)"
p5214
tp5215
I1
s(Vinsert
p5216
I42
VSimpleName: getHeader
p5217
Vinsert
p5218
I42
VSimpleName: remoteAddr
p5219
tp5220
I2
s(Vinsert
p5221
I42
VSimpleName: setUrl
p5222
Vinsert
p5223
I42
VSimpleName: test_1
p5224
tp5225
I1
s(Vinsert
p5226
I42
VSimpleName: prepareStatement
p5227
Vinsert
p5228
I42
VSimpleName: checkConnection
p5229
tp5230
I1
s(g2697
I42
g2698
Vinsert
p5231
I21
VExpressionStatement
p5232
tp5233
I29
s(g4050
I42
g4051
Vinsert
p5234
I42
VSimpleName: OraclePipeRowStatement
p5235
tp5236
I1
s(Vinsert
p5237
I42
VSimpleName: length
p5238
Vinsert
p5239
I45
VStringLiteral: "druid.filters"
p5240
tp5241
I1
s(Vinsert
p5242
I42
VSimpleName: getName
p5243
Vinsert
p5244
I42
VSimpleName: OracleDropSequenceStatement
p5245
tp5246
I1
s(Vinsert
p5247
I42
VSimpleName: formatOdps
p5248
Vinsert
p5249
I45
VStringLiteral: "REMOVE STATISTIC tbl_shop COLUMN_SUM shop_name"
p5250
tp5251
I1
s(Vinsert
p5252
I42
VSimpleName: parameterize
p5253
Vinsert
p5254
I45
VStringLiteral: "\u005ct\u005ct  \u005cn"
p5255
tp5256
I1
s(Vinsert
p5257
I42
VSimpleName: set
p5258
Vinsert
p5259
I43
VSimpleType: String
p5260
tp5261
I5
s(Vinsert
p5262
I42
VSimpleName: getMappedStatement
p5263
Vinsert
p5264
I43
VSimpleType: SqlMapClientImpl
p5265
tp5266
I2
s(Vinsert
p5267
I42
VSimpleName: evalExpr
p5268
Vinsert
p5269
I31
VMethodDeclaration
p5270
tp5271
I8
s(Vinsert
p5272
I42
VSimpleName: select
p5273
Vinsert
p5274
I26
VImportDeclaration
p5275
tp5276
I1
s(Vinsert
p5277
I42
VSimpleName: printStackTrace
p5278
Vinsert
p5279
I25
VIfStatement
p5280
tp5281
I2
s(Vinsert
p5282
I42
VSimpleName: expr
p5283
Vinsert
p5284
I42
VSimpleName: identifierEquals
p5285
tp5286
I3
s(Vinsert
p5287
I42
VSimpleName: visit
p5288
Vinsert
p5289
I43
VSimpleType: MySqlASTVisitor
p5290
tp5291
I87
s(Vinsert
p5292
I42
VSimpleName: println
p5293
Vinsert
p5294
I45
VStringLiteral: "VALUES (8, 'Loki', 32, 'Hyderabad', 3000);"
p5295
tp5296
I1
s(Vinsert
p5297
I42
VSimpleName: getArguments
p5298
Vinsert
p5299
I42
VSimpleName: printExpr
p5300
tp5301
I1
s(g1873
I42
g1874
Vinsert
p5302
I42
VSimpleName: token
p5303
tp5304
I1
s(Vinsert
p5305
I42
VSimpleName: isKeepComments
p5306
Vinsert
p5307
I42
VSimpleName: lexer
p5308
tp5309
I8
s(Vinsert
p5310
I42
VSimpleName: asList
p5311
Vinsert
p5312
I43
VSimpleType: Object
p5313
tp5314
I2
s(Vinsert
p5315
I42
VSimpleName: clone
p5316
Vinsert
p5317
I43
VSimpleType: SQLBinaryOpExpr
p5318
tp5319
I1
s(Vinsert
p5320
I42
VSimpleName: lock
p5321
Vinsert
p5322
I32
VMethodInvocation
p5323
tp5324
I9
s(g3806
I42
g3807
Vinsert
p5325
I8
VBlock
p5326
tp5327
I3
s(Vinsert
p5328
I42
VSimpleName: setConnectedTimeNano
p5329
Vinsert
p5330
I32
VMethodInvocation
p5331
tp5332
I1
s(Vinsert
p5333
I42
VSimpleName: getTypeName
p5334
Vinsert
p5335
I40
VQualifiedName: Types.INTEGER
p5336
tp5337
I1
s(Vinsert
p5338
I42
VSimpleName: getFrom
p5339
Vinsert
p5340
I42
VSimpleName: subQueryTableSource
p5341
tp5342
I1
s(Vinsert
p5343
I42
VSimpleName: elements
p5344
Vinsert
p5345
I42
VSimpleName: ColumnGroup
p5346
tp5347
I1
s(g2439
I42
g2440
Vinsert
p5348
I83
VModifier: public
p5349
tp5350
I8
s(Vinsert
p5351
I42
VSimpleName: configFromProperties
p5352
Vinsert
p5353
I43
VSimpleType: ValidConnectionCheckerAdapter
p5354
tp5355
I2
s(Vinsert
p5356
I42
VSimpleName: size
p5357
Vinsert
p5358
I42
VSimpleName: e
p5359
tp5360
I1
s(g4424
I42
g4425
Vinsert
p5361
I43
VSimpleType: Exception
p5362
tp5363
I1
s(Vinsert
p5364
I42
VSimpleName: visit
p5365
Vinsert
p5366
I43
VSimpleType: OracleASTVisitor
p5367
tp5368
I63
s(Vinsert
p5369
I42
VSimpleName: getUser
p5370
Vinsert
p5371
I83
VModifier: public
p5372
tp5373
I1
s(Vinsert
p5374
I42
VSimpleName: getDistionOption
p5375
Vinsert
p5376
I42
VSimpleName: select
p5377
tp5378
I2
s(Vinsert
p5379
I42
VSimpleName: getClass
p5380
Vinsert
p5381
I39
VPrimitiveType: void
p5382
tp5383
I3
s(Vinsert
p5384
I42
VSimpleName: isInsertAllow
p5385
Vinsert
p5386
I42
VSimpleName: visit
p5387
tp5388
I2
s(Vinsert
p5389
I42
VSimpleName: trim
p5390
Vinsert
p5391
I22
VFieldAccess
p5392
tp5393
I3
s(Vinsert
p5394
I42
VSimpleName: setOrderBy
p5395
Vinsert
p5396
I42
VSimpleName: lexer
p5397
tp5398
I1
s(Vinsert
p5399
I42
VSimpleName: unlock
p5400
Vinsert
p5401
I42
VSimpleName: destroyCount
p5402
tp5403
I1
s(Vinsert
p5404
I42
VSimpleName: get
p5405
Vinsert
p5406
I42
VSimpleName: firstStmt
p5407
tp5408
I1
s(Vinsert
p5409
I42
VSimpleName: currentThread
p5410
Vinsert
p5411
I32
VMethodInvocation
p5412
tp5413
I35
s(Vinsert
p5414
I42
VSimpleName: getTableName
p5415
Vinsert
p5416
I32
VMethodInvocation
p5417
tp5418
I12
s(Vinsert
p5419
I42
VSimpleName: create
p5420
Vinsert
p5421
I59
VVariableDeclarationFragment
p5422
tp5423
I2
s(Vinsert
p5424
I42
VSimpleName: checkValid
p5425
Vinsert
p5426
I42
VSimpleName: config
p5427
tp5428
I6
s(Vinsert
p5429
I42
VSimpleName: setOn
p5430
Vinsert
p5431
I31
VMethodDeclaration
p5432
tp5433
I1
s(Vinsert
p5434
I42
VSimpleName: valueOf
p5435
Vinsert
p5436
I33
VNullLiteral
p5437
tp5438
I4
s(Vinsert
p5439
I42
VSimpleName: getConnection
p5440
Vinsert
p5441
I42
VSimpleName: size
p5442
tp5443
I1
s(g992
I42
g993
Vinsert
p5444
I34
VNumberLiteral: 0
p5445
tp5446
I1
s(g3383
I42
g3384
Vinsert
p5447
I43
VSimpleType: DruidDataSource
p5448
tp5449
I2
s(Vinsert
p5450
I42
VSimpleName: getMethodName
p5451
Vinsert
p5452
I42
VSimpleName: currentThread
p5453
tp5454
I2
s(Vinsert
p5455
I42
VSimpleName: setParent
p5456
Vinsert
p5457
I74
VParameterizedType: ArrayList<SQLUpdateSetItem>
p5458
tp5459
I1
s(Vinsert
p5460
I42
VSimpleName: isPrettyFormat
p5461
Vinsert
p5462
I21
VExpressionStatement
p5463
tp5464
I1
s(Vinsert
p5465
I42
VSimpleName: current
p5466
Vinsert
p5467
I42
VSimpleName: String
p5468
tp5469
I1
s(Vinsert
p5470
I42
VSimpleName: parseCreateTableSupplementalLogingProps
p5471
Vinsert
p5472
I42
VSimpleName: dbType
p5473
tp5474
I1
s(Vinsert
p5475
I42
VSimpleName: afterInvoke
p5476
Vinsert
p5477
I42
VSimpleName: nanoTime
p5478
tp5479
I1
s(Vinsert
p5480
I42
VSimpleName: assertTrue
p5481
Vinsert
p5482
I43
VSimpleType: DruidDataSource
p5483
tp5484
I1
s(Vinsert
p5485
I42
VSimpleName: setTablespace
p5486
Vinsert
p5487
I32
VMethodInvocation
p5488
tp5489
I1
s(Vinsert
p5490
I42
VSimpleName: parameterize
p5491
Vinsert
p5492
I83
VModifier: public
p5493
tp5494
I1
s(Vinsert
p5495
I42
VSimpleName: incrementAndGet
p5496
Vinsert
p5497
I42
VSimpleName: SQLException
p5498
tp5499
I1
s(Vinsert
p5500
I42
VSimpleName: setExpr
p5501
Vinsert
p5502
I43
VSimpleType: SQLObject
p5503
tp5504
I2
s(Vinsert
p5505
I42
VSimpleName: prepareStatement
p5506
Vinsert
p5507
I34
VNumberLiteral: 1
p5508
tp5509
I1
s(Vinsert
p5510
I42
VSimpleName: println
p5511
Vinsert
p5512
I45
VStringLiteral: "mysql"
p5513
tp5514
I1
s(Vinsert
p5515
I42
VSimpleName: shrink
p5516
Vinsert
p5517
I83
VModifier: public
p5518
tp5519
I2
s(Vinsert
p5520
I42
VSimpleName: update
p5521
Vinsert
p5522
I45
VStringLiteral: "System doesn't support MD5 algorithm."
p5523
tp5524
I1
s(g1617
I42
g1618
Vinsert
p5525
I44
VSingleVariableDeclaration
p5526
tp5527
I1
s(Vinsert
p5528
I42
VSimpleName: clearContext
p5529
Vinsert
p5530
I32
VMethodInvocation
p5531
tp5532
I2
s(Vinsert
p5533
I42
VSimpleName: setParent
p5534
Vinsert
p5535
I42
VSimpleName: setTargetAffectRow
p5536
tp5537
I1
s(Vinsert
p5538
I42
VSimpleName: getFieldType
p5539
Vinsert
p5540
I42
VSimpleName: field
p5541
tp5542
I3
s(Vinsert
p5543
I42
VSimpleName: getItems
p5544
Vinsert
p5545
I7
VAssignment: =
p5546
tp5547
I1
s(g3841
I42
g3842
Vinsert
p5548
I27
VInfixExpression: !=
p5549
tp5550
I1
s(g2079
I42
g2080
Vinsert
p5551
I14
VClassInstanceCreation
p5552
tp5553
I2
s(Vinsert
p5554
I42
VSimpleName: read
p5555
Vinsert
p5556
I42
VSimpleName: JdbcUtils
p5557
tp5558
I1
s(Vinsert
p5559
I42
VSimpleName: assertEquals
p5560
Vinsert
p5561
I45
VStringLiteral: "SELECT /*+ INDEX(t1 i1) , INDEX(t2 i2)*/ *"
p5562
tp5563
I1
s(Vinsert
p5564
I42
VSimpleName: computeAlias
p5565
Vinsert
p5566
I42
VSimpleName: selectItem
p5567
tp5568
I2
s(Vinsert
p5569
I42
VSimpleName: getParameters
p5570
Vinsert
p5571
I33
VNullLiteral
p5572
tp5573
I4
s(Vinsert
p5574
I42
VSimpleName: getDataSourceName
p5575
Vinsert
p5576
I42
VSimpleName: getProxyFilters
p5577
tp5578
I1
s(Vinsert
p5579
I42
VSimpleName: toStatementList
p5580
Vinsert
p5581
I45
VStringLiteral: "FOREIGN DATA WRAPPER mysql\u005cn"
p5582
tp5583
I1
s(Vinsert
p5584
I42
VSimpleName: putAttribute
p5585
Vinsert
p5586
I42
VSimpleName: EVAL_VALUE_NULL
p5587
tp5588
I1
s(Vinsert
p5589
I42
VSimpleName: token
p5590
Vinsert
p5591
I42
VSimpleName: parenFlag
p5592
tp5593
I1
s(g567
I42
g568
Vinsert
p5594
I42
VSimpleName: i
p5595
tp5596
I9
s(Vinsert
p5597
I42
VSimpleName: setFrom
p5598
Vinsert
p5599
I43
VSimpleType: SQLSubqueryTableSource
p5600
tp5601
I4
s(g5305
I42
g5306
Vinsert
p5602
I32
VMethodInvocation
p5603
tp5604
I9
s(Vinsert
p5605
I42
VSimpleName: forName
p5606
Vinsert
p5607
I43
VSimpleType: String
p5608
tp5609
I1
s(Vinsert
p5610
I42
VSimpleName: clear
p5611
Vinsert
p5612
I42
VSimpleName: statementPool
p5613
tp5614
I2
s(Vinsert
p5615
I42
VSimpleName: setConnectionCustomizerClassName
p5616
Vinsert
p5617
I42
VSimpleName: getMaxConnectionAge
p5618
tp5619
I1
s(g1261
I42
g1262
Vinsert
p5620
I42
VSimpleName: SQLUnionQuery
p5621
tp5622
I4
s(Vinsert
p5623
I42
VSimpleName: error
p5624
Vinsert
p5625
I43
VSimpleType: IOException
p5626
tp5627
I3
s(Vinsert
p5628
I42
VSimpleName: equals
p5629
Vinsert
p5630
I45
VStringLiteral: "isnull"
p5631
tp5632
I1
s(Vinsert
p5633
I42
VSimpleName: warn
p5634
Vinsert
p5635
I9
VBooleanLiteral: true
p5636
tp5637
I3
s(Vinsert
p5638
I42
VSimpleName: connection_isClosed
p5639
Vinsert
p5640
I42
VSimpleName: isClosed
p5641
tp5642
I1
s(Vinsert
p5643
I42
VSimpleName: getDefaultRowPrefetch
p5644
Vinsert
p5645
I39
VPrimitiveType: int
p5646
tp5647
I1
s(Vinsert
p5648
I42
VSimpleName: getRowCount
p5649
Vinsert
p5650
I41
VReturnStatement
p5651
tp5652
I1
s(Vinsert
p5653
I42
VSimpleName: nextToken
p5654
Vinsert
p5655
I42
VSimpleName: ModelRulesClause
p5656
tp5657
I2
s(g1978
I42
g1979
Vinsert
p5658
I25
VIfStatement
p5659
tp5660
I1
s(Vinsert
p5661
I42
VSimpleName: addParameter
p5662
Vinsert
p5663
I70
VEnhancedForStatement
p5664
tp5665
I1
s(Vinsert
p5666
I42
VSimpleName: get
p5667
Vinsert
p5668
I42
VSimpleName: DataSourceData
p5669
tp5670
I1
s(g3574
I42
g3575
Vinsert
p5671
I42
VSimpleName: ArrayList
p5672
tp5673
I1
s(g4045
I42
g4046
Vinsert
p5674
I43
VSimpleType: StatFilter
p5675
tp5676
I3
s(Vinsert
p5677
I42
VSimpleName: info
p5678
Vinsert
p5679
I42
VSimpleName: Override
p5680
tp5681
I3
s(g2905
I42
g2906
Vinsert
p5682
I54
VTryStatement
p5683
tp5684
I1
s(Vinsert
p5685
I42
VSimpleName: buildCondition
p5686
Vinsert
p5687
I42
VSimpleName: rowCount
p5688
tp5689
I1
s(g3035
I42
g3036
Vinsert
p5690
I32
VMethodInvocation
p5691
tp5692
I3
s(g708
I42
g709
Vinsert
p5693
I45
VStringLiteral: "\u005cnwhere id > 0;"
p5694
tp5695
I1
s(g3312
I42
g3313
Vinsert
p5696
I42
VSimpleName: Boolean
p5697
tp5698
I1
s(Vinsert
p5699
I42
VSimpleName: addItem
p5700
Vinsert
p5701
I42
VSimpleName: caseItem
p5702
tp5703
I1
s(Vinsert
p5704
I42
VSimpleName: setParent
p5705
Vinsert
p5706
I42
VSimpleName: setQuery
p5707
tp5708
I2
s(Vinsert
p5709
I42
VSimpleName: matches
p5710
Vinsert
p5711
I42
VSimpleName: bogusPatterns
p5712
tp5713
I1
s(Vinsert
p5714
I42
VSimpleName: parseStatements
p5715
Vinsert
p5716
I45
VStringLiteral: "(partition part1 values less than (to_date('2010-01-01','YYYY-MM-DD')),\u005cn"
p5717
tp5718
I1
s(Vinsert
p5719
I42
VSimpleName: toSQL
p5720
Vinsert
p5721
I59
VVariableDeclarationFragment
p5722
tp5723
I1
s(Vinsert
p5724
I42
VSimpleName: setClientEncoding
p5725
Vinsert
p5726
I32
VMethodInvocation
p5727
tp5728
I1
s(Vinsert
p5729
I42
VSimpleName: getTableElementList
p5730
Vinsert
p5731
I42
VSimpleName: parseConstaint
p5732
tp5733
I1
s(Vinsert
p5734
I42
VSimpleName: setString
p5735
Vinsert
p5736
I42
VSimpleName: stmt
p5737
tp5738
I4
s(Vinsert
p5739
I42
VSimpleName: size
p5740
Vinsert
p5741
I42
VSimpleName: config
p5742
tp5743
I1
s(Vinsert
p5744
I42
VSimpleName: createExprParser
p5745
Vinsert
p5746
I42
VSimpleName: expr
p5747
tp5748
I3
s(g4725
I42
g4726
Vinsert
p5749
I42
VSimpleName: values
p5750
tp5751
I1
s(Vinsert
p5752
I42
VSimpleName: toSQLString
p5753
Vinsert
p5754
I45
VStringLiteral: "PIPE ROW(substr(p_string, v_start));"
p5755
tp5756
I1
s(Vinsert
p5757
I42
VSimpleName: setHints
p5758
Vinsert
p5759
I32
VMethodInvocation
p5760
tp5761
I4
s(Vinsert
p5762
I42
VSimpleName: getDataSource
p5763
Vinsert
p5764
I41
VReturnStatement
p5765
tp5766
I1
s(Vinsert
p5767
I42
VSimpleName: getInstance
p5768
Vinsert
p5769
I40
VQualifiedName: com.alibaba.druid.stat.JdbcStatManager
p5770
tp5771
I1
s(Vinsert
p5772
I42
VSimpleName: getClassName
p5773
Vinsert
p5774
I42
VSimpleName: b1
p5775
tp5776
I2
s(Vinsert
p5777
I42
VSimpleName: setParent
p5778
Vinsert
p5779
I42
VSimpleName: transactionName
p5780
tp5781
I3
s(Vinsert
p5782
I42
VSimpleName: toString
p5783
Vinsert
p5784
I42
VSimpleName: propertyExpr
p5785
tp5786
I2
s(Vinsert
p5787
I42
VSimpleName: isTestWhileIdle
p5788
Vinsert
p5789
I43
VSimpleType: DruidDataSource
p5790
tp5791
I1
s(Vinsert
p5792
I42
VSimpleName: getUsers
p5793
Vinsert
p5794
I42
VSimpleName: MySqlAlterUserStatement
p5795
tp5796
I1
s(Vinsert
p5797
I42
VSimpleName: getMethodName
p5798
Vinsert
p5799
I42
VSimpleName: methodExpr
p5800
tp5801
I2
s(g632
I42
g633
Vinsert
p5802
I40
VQualifiedName: java.sql.Time
p5803
tp5804
I1
s(Vinsert
p5805
I42
VSimpleName: createStatement
p5806
Vinsert
p5807
I42
VSimpleName: COUNT
p5808
tp5809
I1
s(g1853
I42
g1854
Vinsert
p5810
I40
VQualifiedName: SQLWithSubqueryClause.Entry
p5811
tp5812
I2
s(Vinsert
p5813
I42
VSimpleName: toString
p5814
Vinsert
p5815
I42
VSimpleName: visit
p5816
tp5817
I1
s(Vinsert
p5818
I42
VSimpleName: getSessionStatData
p5819
Vinsert
p5820
I32
VMethodInvocation
p5821
tp5822
I1
s(g4824
I42
g4825
Vinsert
p5823
I8
VBlock
p5824
tp5825
I1
s(Vinsert
p5826
I42
VSimpleName: setAlias
p5827
Vinsert
p5828
I44
VSingleVariableDeclaration
p5829
tp5830
I3
s(Vinsert
p5831
I42
VSimpleName: findTable
p5832
Vinsert
p5833
I42
VSimpleName: schemaObject
p5834
tp5835
I2
s(g5638
I42
g5639
Vinsert
p5836
I52
VThisExpression
p5837
tp5838
I1
s(Vinsert
p5839
I42
VSimpleName: setPoolPreparedStatements
p5840
Vinsert
p5841
I42
VSimpleName: setFilters
p5842
tp5843
I2
s(Vinsert
p5844
I42
VSimpleName: setParent
p5845
Vinsert
p5846
I40
VQualifiedName: lexer.token
p5847
tp5848
I2
s(Vinsert
p5849
I42
VSimpleName: parseLong
p5850
Vinsert
p5851
I42
VSimpleName: getConnectProperties
p5852
tp5853
I1
s(Vinsert
p5854
I42
VSimpleName: parseHints
p5855
Vinsert
p5856
I32
VMethodInvocation
p5857
tp5858
I3
s(Vinsert
p5859
I42
VSimpleName: matcher
p5860
Vinsert
p5861
I8
VBlock
p5862
tp5863
I1
s(Vinsert
p5864
I42
VSimpleName: parseSelectOrderByItem
p5865
Vinsert
p5866
I11
VCastExpression
p5867
tp5868
I1
s(g3659
I42
g3660
Vinsert
p5869
I42
VSimpleName: token
p5870
tp5871
I1
s(Vinsert
p5872
I42
VSimpleName: getFirstQueryBlock
p5873
Vinsert
p5874
I59
VVariableDeclarationFragment
p5875
tp5876
I2
s(Vinsert
p5877
I42
VSimpleName: intValue
p5878
Vinsert
p5879
I45
VStringLiteral: "druid.wall.timer.threadCount"
p5880
tp5881
I1
s(Vinsert
p5882
I42
VSimpleName: aliasHashCode64
p5883
Vinsert
p5884
I42
VSimpleName: SQLSubqueryTableSource
p5885
tp5886
I1
s(Vinsert
p5887
I42
VSimpleName: getPartitionBy
p5888
Vinsert
p5889
I42
VSimpleName: exprList
p5890
tp5891
I1
s(Vinsert
p5892
I42
VSimpleName: setKeepComments
p5893
Vinsert
p5894
I43
VSimpleType: MySqlLexer
p5895
tp5896
I1
s(g3939
I42
g3940
Vinsert
p5897
I42
VSimpleName: Exception
p5898
tp5899
I40
s(g469
I42
g470
Vinsert
p5900
I40
VQualifiedName: FnvHash.Constants.ISOPEN
p5901
tp5902
I1
s(Vinsert
p5903
I42
VSimpleName: isPrimaryKey
p5904
Vinsert
p5905
I42
VSimpleName: x
p5906
tp5907
I1
s(Vinsert
p5908
I42
VSimpleName: getFrom
p5909
Vinsert
p5910
I27
VInfixExpression: !=
p5911
tp5912
I2
s(Vinsert
p5913
I42
VSimpleName: append
p5914
Vinsert
p5915
I42
VSimpleName: incrementDropIndexCount
p5916
tp5917
I1
s(Vinsert
p5918
I42
VSimpleName: equals
p5919
Vinsert
p5920
I45
VStringLiteral: "error"
p5921
tp5922
I1
s(g316
I42
g317
Vinsert
p5923
I42
VSimpleName: Iterator
p5924
tp5925
I1
s(Vinsert
p5926
I42
VSimpleName: getData
p5927
Vinsert
p5928
I42
VSimpleName: setRightComponent
p5929
tp5930
I1
s(Vinsert
p5931
I42
VSimpleName: getOutParameter
p5932
Vinsert
p5933
I42
VSimpleName: x
p5934
tp5935
I2
s(Vinsert
p5936
I42
VSimpleName: formatOdps
p5937
Vinsert
p5938
I45
VStringLiteral: "\u005ct\u005ct\u005ctselect prov\u005cn"
p5939
tp5940
I1
s(Vinsert
p5941
I42
VSimpleName: toString
p5942
Vinsert
p5943
I42
VSimpleName: writeObject
p5944
tp5945
I1
s(Vinsert
p5946
I42
VSimpleName: getConfig
p5947
Vinsert
p5948
I43
VSimpleType: SQLException
p5949
tp5950
I1
s(g3068
I42
g3069
Vinsert
p5951
I52
VThisExpression
p5952
tp5953
I83
s(Vinsert
p5954
I42
VSimpleName: setDataSource
p5955
Vinsert
p5956
I60
VVariableDeclarationStatement
p5957
tp5958
I3
s(Vinsert
p5959
I42
VSimpleName: getStatement
p5960
Vinsert
p5961
I45
VStringLiteral: "EXPLAIN"
p5962
tp5963
I1
s(Vinsert
p5964
I42
VSimpleName: getValue
p5965
Vinsert
p5966
I42
VSimpleName: entrySet
p5967
tp5968
I1
s(Vinsert
p5969
I42
VSimpleName: size
p5970
Vinsert
p5971
I42
VSimpleName: close
p5972
tp5973
I1
s(Vinsert
p5974
I42
VSimpleName: connection_connect
p5975
Vinsert
p5976
I60
VVariableDeclarationStatement
p5977
tp5978
I1
s(Vinsert
p5979
I42
VSimpleName: setPrettyFormat
p5980
Vinsert
p5981
I42
VSimpleName: prettyFormat
p5982
tp5983
I3
s(g5379
I42
g5380
Vinsert
p5984
I44
VSingleVariableDeclaration
p5985
tp5986
I10
s(Vinsert
p5987
I42
VSimpleName: setCursorName
p5988
Vinsert
p5989
I43
VSimpleType: MySqlCursorOpenStatement
p5990
tp5991
I2
s(g4500
I42
g4501
Vinsert
p5992
I42
VSimpleName: assertFalse
p5993
tp5994
I1
s(Vinsert
p5995
I42
VSimpleName: assertEquals
p5996
Vinsert
p5997
I42
VSimpleName: getValue
p5998
tp5999
I6
s(Vinsert
p6000
I42
VSimpleName: indexOf
p6001
Vinsert
p6002
I40
VQualifiedName: bytes.length
p6003
tp6004
I1
s(Vinsert
p6005
I42
VSimpleName: check
p6006
Vinsert
p6007
I14
VClassInstanceCreation
p6008
tp6009
I11
s(Vinsert
p6010
I42
VSimpleName: assertEquals
p6011
Vinsert
p6012
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION s5"
p6013
tp6014
I1
s(g2464
I42
g2465
Vinsert
p6015
I42
VSimpleName: Frameworks
p6016
tp6017
I1
s(Vinsert
p6018
I42
VSimpleName: size
p6019
Vinsert
p6020
I45
VStringLiteral: "from emp\u005cn"
p6021
tp6022
I1
s(Vinsert
p6023
I42
VSimpleName: prepareStatement
p6024
Vinsert
p6025
I42
VSimpleName: getDefaultRowPrefetch
p6026
tp6027
I1
s(g2722
I42
g2723
Vinsert
p6028
I42
VSimpleName: createMappingVisitor
p6029
tp6030
I1
s(Vinsert
p6031
I42
VSimpleName: getInterval
p6032
Vinsert
p6033
I42
VSimpleName: print
p6034
tp6035
I1
s(Vinsert
p6036
I42
VSimpleName: isCursorSpecificSegment
p6037
Vinsert
p6038
I45
VStringLiteral: " IN_MEMORY_METADATA"
p6039
tp6040
I1
s(Vinsert
p6041
I42
VSimpleName: setMustParameterized
p6042
Vinsert
p6043
I42
VSimpleName: WallConfig
p6044
tp6045
I5
s(Vinsert
p6046
I42
VSimpleName: getAliasList
p6047
Vinsert
p6048
I42
VSimpleName: print
p6049
tp6050
I1
s(Vinsert
p6051
I42
VSimpleName: getOffset
p6052
Vinsert
p6053
I42
VSimpleName: ucase
p6054
tp6055
I1
s(Vinsert
p6056
I42
VSimpleName: getQuery
p6057
Vinsert
p6058
I42
VSimpleName: visit
p6059
tp6060
I1
s(Vinsert
p6061
I42
VSimpleName: getDefaultValue
p6062
Vinsert
p6063
I42
VSimpleName: getDefaultValue
p6064
tp6065
I2
s(Vinsert
p6066
I42
VSimpleName: setTestOnBorrow
p6067
Vinsert
p6068
I7
VAssignment: =
p6069
tp6070
I1
s(g1660
I42
g1661
Vinsert
p6071
I54
VTryStatement
p6072
tp6073
I1
s(Vinsert
p6074
I42
VSimpleName: setColumnName
p6075
Vinsert
p6076
I32
VMethodInvocation
p6077
tp6078
I2
s(Vinsert
p6079
I42
VSimpleName: toOracleString
p6080
Vinsert
p6081
I45
VStringLiteral: "\u005cn\u005ctWHERE tbek_code != ?)"
p6082
tp6083
I1
s(Vinsert
p6084
I42
VSimpleName: rset
p6085
Vinsert
p6086
I21
VExpressionStatement
p6087
tp6088
I2
s(Vinsert
p6089
I42
VSimpleName: close
p6090
Vinsert
p6091
I45
VStringLiteral: "SELECT 1"
p6092
tp6093
I1
s(g758
I42
g759
Vinsert
p6094
I8
VBlock
p6095
tp6096
I3
s(g4344
I42
g4345
Vinsert
p6097
I40
VQualifiedName: Token.ONLY
p6098
tp6099
I1
s(g4144
I42
g4145
Vinsert
p6100
I43
VSimpleType: SQLCharExpr
p6101
tp6102
I1
s(Vinsert
p6103
I42
VSimpleName: setDropTableAllow
p6104
Vinsert
p6105
I42
VSimpleName: getConfig
p6106
tp6107
I1
s(g386
I42
g387
Vinsert
p6108
I42
VSimpleName: String
p6109
tp6110
I3
s(Vinsert
p6111
I42
VSimpleName: getConnection
p6112
Vinsert
p6113
I42
VSimpleName: test_0
p6114
tp6115
I3
s(Vinsert
p6116
I42
VSimpleName: getHaDataSource
p6117
Vinsert
p6118
I59
VVariableDeclarationFragment
p6119
tp6120
I1
s(Vinsert
p6121
I42
VSimpleName: setTraceEnable
p6122
Vinsert
p6123
I34
VNumberLiteral: 0
p6124
tp6125
I1
s(Vinsert
p6126
I42
VSimpleName: getLockType
p6127
Vinsert
p6128
I22
VFieldAccess
p6129
tp6130
I1
s(g286
I42
g287
Vinsert
p6131
I34
VNumberLiteral: 0
p6132
tp6133
I2
s(Vinsert
p6134
I42
VSimpleName: getViolations
p6135
Vinsert
p6136
I59
VVariableDeclarationFragment
p6137
tp6138
I2
s(Vinsert
p6139
I42
VSimpleName: toOracleString
p6140
Vinsert
p6141
I42
VSimpleName: SQLUtils
p6142
tp6143
I24
s(Vinsert
p6144
I42
VSimpleName: incrementAndGet
p6145
Vinsert
p6146
I42
VSimpleName: incrementSessionCount
p6147
tp6148
I1
s(g1032
I42
g1033
Vinsert
p6149
I16
VConditionalExpression
p6150
tp6151
I1
s(Vinsert
p6152
I42
VSimpleName: isEnabled
p6153
Vinsert
p6154
I42
VSimpleName: isEnabled
p6155
tp6156
I5
s(Vinsert
p6157
I42
VSimpleName: setExpr
p6158
Vinsert
p6159
I14
VClassInstanceCreation
p6160
tp6161
I20
s(Vinsert
p6162
I42
VSimpleName: setParent
p6163
Vinsert
p6164
I44
VSingleVariableDeclaration
p6165
tp6166
I166
s(Vinsert
p6167
I42
VSimpleName: queryBlockFromIsNull
p6168
Vinsert
p6169
I42
VSimpleName: visitor
p6170
tp6171
I1
s(Vinsert
p6172
I42
VSimpleName: toOracleString
p6173
Vinsert
p6174
I42
VSimpleName: OracleASTVisitor
p6175
tp6176
I1
s(Vinsert
p6177
I42
VSimpleName: assertEquals
p6178
Vinsert
p6179
I45
VStringLiteral: "select * from a full outer join b on a.id=b.id"
p6180
tp6181
I1
s(Vinsert
p6182
I42
VSimpleName: setDesensitize
p6183
Vinsert
p6184
I45
VStringLiteral: "(supplier_id, supplier_name)\u005cn"
p6185
tp6186
I1
s(Vinsert
p6187
I42
VSimpleName: toSQLString
p6188
Vinsert
p6189
I45
VStringLiteral: "\u005ct\u005c"OWNER_MEMBER_ID\u005c", \u005cn"
p6190
tp6191
I1
s(Vinsert
p6192
I42
VSimpleName: addItem
p6193
Vinsert
p6194
I8
VBlock
p6195
tp6196
I1
s(Vinsert
p6197
I42
VSimpleName: token
p6198
Vinsert
p6199
I42
VSimpleName: SQLSelectOrderByItem
p6200
tp6201
I1
s(Vinsert
p6202
I42
VSimpleName: getDruidDataSourceInstances
p6203
Vinsert
p6204
I25
VIfStatement
p6205
tp6206
I1
s(Vinsert
p6207
I42
VSimpleName: getObjectType
p6208
Vinsert
p6209
I27
VInfixExpression: !=
p6210
tp6211
I1
s(Vinsert
p6212
I42
VSimpleName: getActiveCount
p6213
Vinsert
p6214
I42
VSimpleName: dataSource
p6215
tp6216
I5
s(g3447
I42
g3448
Vinsert
p6217
I7
VAssignment: =
p6218
tp6219
I2
s(Vinsert
p6220
I42
VSimpleName: toSQLString
p6221
Vinsert
p6222
I45
VStringLiteral: "\u005cn\u005ct\u005c"USER_ID\u005c" NUMBER(38, 0),"
p6223
tp6224
I2
s(Vinsert
p6225
I42
VSimpleName: setParent
p6226
Vinsert
p6227
I42
VSimpleName: addTableSource
p6228
tp6229
I2
s(g11
I42
g12
Vinsert
p6230
I45
VStringLiteral: "test1\u005cn"
p6231
tp6232
I1
s(g2780
I42
g2781
Vinsert
p6233
I42
VSimpleName: select
p6234
tp6235
I3
s(Vinsert
p6236
I42
VSimpleName: addItem
p6237
Vinsert
p6238
I42
VSimpleName: toName
p6239
tp6240
I1
s(g6139
I42
g6140
Vinsert
p6241
I60
VVariableDeclarationStatement
p6242
tp6243
I19
s(Vinsert
p6244
I42
VSimpleName: toString
p6245
Vinsert
p6246
I42
VSimpleName: name
p6247
tp6248
I3
s(g6036
I42
g6037
Vinsert
p6249
I42
VSimpleName: accept
p6250
tp6251
I1
s(Vinsert
p6252
I42
VSimpleName: getTo
p6253
Vinsert
p6254
I42
VSimpleName: SQLRollbackStatement
p6255
tp6256
I1
s(Vinsert
p6257
I42
VSimpleName: getPercent
p6258
Vinsert
p6259
I8
VBlock
p6260
tp6261
I1
s(g3327
I42
g3328
Vinsert
p6262
I42
VSimpleName: exprParser
p6263
tp6264
I1
s(Vinsert
p6265
I42
VSimpleName: getName
p6266
Vinsert
p6267
I78
VMarkerAnnotation
p6268
tp6269
I3
s(Vinsert
p6270
I42
VSimpleName: length
p6271
Vinsert
p6272
I42
VSimpleName: alias
p6273
tp6274
I2
s(Vinsert
p6275
I42
VSimpleName: executeQuery
p6276
Vinsert
p6277
I42
VSimpleName: dataSource
p6278
tp6279
I1
s(g1284
I42
g1285
Vinsert
p6280
I8
VBlock
p6281
tp6282
I2
s(Vinsert
p6283
I42
VSimpleName: toLowerCase
p6284
Vinsert
p6285
I25
VIfStatement
p6286
tp6287
I7
s(Vinsert
p6288
I42
VSimpleName: getRuntimeMXBean
p6289
Vinsert
p6290
I42
VSimpleName: arguments
p6291
tp6292
I1
s(Vinsert
p6293
I42
VSimpleName: getColumnName
p6294
Vinsert
p6295
I42
VSimpleName: SQLException
p6296
tp6297
I1
s(Vinsert
p6298
I42
VSimpleName: getDataSources
p6299
Vinsert
p6300
I42
VSimpleName: holder
p6301
tp6302
I3
s(Vinsert
p6303
I42
VSimpleName: clone
p6304
Vinsert
p6305
I42
VSimpleName: localPartitionIndex
p6306
tp6307
I1
s(Vinsert
p6308
I42
VSimpleName: format
p6309
Vinsert
p6310
I11
VCastExpression
p6311
tp6312
I1
s(Vinsert
p6313
I42
VSimpleName: setIfExists
p6314
Vinsert
p6315
I21
VExpressionStatement
p6316
tp6317
I3
s(Vinsert
p6318
I42
VSimpleName: setParameterized
p6319
Vinsert
p6320
I42
VSimpleName: MySqlExportParameterVisitor
p6321
tp6322
I2
s(Vinsert
p6323
I42
VSimpleName: isBuiltinFunction
p6324
Vinsert
p6325
I42
VSimpleName: assertTrue
p6326
tp6327
I1
s(Vinsert
p6328
I42
VSimpleName: assertNull
p6329
Vinsert
p6330
I43
VSimpleType: String
p6331
tp6332
I1
s(Vinsert
p6333
I42
VSimpleName: getType
p6334
Vinsert
p6335
I42
VSimpleName: x
p6336
tp6337
I14
s(Vinsert
p6338
I42
VSimpleName: getUrl
p6339
Vinsert
p6340
I43
VSimpleType: String
p6341
tp6342
I1
s(Vinsert
p6343
I42
VSimpleName: setMinusAllow
p6344
Vinsert
p6345
I21
VExpressionStatement
p6346
tp6347
I2
s(g3396
I42
g3397
Vinsert
p6348
I45
VStringLiteral: "FROM hr_deptemp t1, struct t2\u005cn"
p6349
tp6350
I1
s(g5979
I42
g5980
Vinsert
p6351
I39
VPrimitiveType: boolean
p6352
tp6353
I2
s(Vinsert
p6354
I42
VSimpleName: getClass
p6355
Vinsert
p6356
I43
VSimpleType: SQLExprTableSource
p6357
tp6358
I1
s(Vinsert
p6359
I42
VSimpleName: getCharsetExpr
p6360
Vinsert
p6361
I45
VStringLiteral: " CHARSET "
p6362
tp6363
I1
s(Vinsert
p6364
I42
VSimpleName: setUser
p6365
Vinsert
p6366
I42
VSimpleName: setDriverUrl
p6367
tp6368
I1
s(g5839
I42
g5840
Vinsert
p6369
I32
VMethodInvocation
p6370
tp6371
I18
s(g2672
I42
g2673
Vinsert
p6372
I21
VExpressionStatement
p6373
tp6374
I6
s(Vinsert
p6375
I42
VSimpleName: errorConvert
p6376
Vinsert
p6377
I42
VSimpleName: OracleXAException
p6378
tp6379
I1
s(Vinsert
p6380
I42
VSimpleName: parseStatementList
p6381
Vinsert
p6382
I43
VSimpleType: ArrayList
p6383
tp6384
I1
s(g4070
I42
g4071
Vinsert
p6385
I42
VSimpleName: JMXUtils
p6386
tp6387
I2
s(Vinsert
p6388
I42
VSimpleName: parseStatements
p6389
Vinsert
p6390
I42
VSimpleName: i
p6391
tp6392
I1
s(g5762
I42
g5763
Vinsert
p6393
I42
VSimpleName: LOG
p6394
tp6395
I1
s(Vinsert
p6396
I42
VSimpleName: getPublicKey
p6397
Vinsert
p6398
I42
VSimpleName: Certificate
p6399
tp6400
I1
s(g4490
I42
g4491
Vinsert
p6401
I42
VSimpleName: sql
p6402
tp6403
I4
s(g1110
I42
g1111
Vinsert
p6404
I45
VStringLiteral: "WHERE sites.site_id = c1.site_id\u005cn"
p6405
tp6406
I1
s(g366
I42
g367
Vinsert
p6407
I14
VClassInstanceCreation
p6408
tp6409
I5
s(g1491
I42
g1492
Vinsert
p6410
I41
VReturnStatement
p6411
tp6412
I1
s(g341
I42
g342
Vinsert
p6413
I42
VSimpleName: Utils
p6414
tp6415
I2
s(Vinsert
p6416
I42
VSimpleName: assertEquals
p6417
Vinsert
p6418
I42
VSimpleName: sql
p6419
tp6420
I66
s(Vinsert
p6421
I42
VSimpleName: token
p6422
Vinsert
p6423
I40
VQualifiedName: FnvHash.Constants.NOVALIDATE
p6424
tp6425
I1
s(g3472
I42
g3473
Vinsert
p6426
I21
VExpressionStatement
p6427
tp6428
I1
s(Vinsert
p6429
I42
VSimpleName: checkHaving
p6430
Vinsert
p6431
I9
VBooleanLiteral: true
p6432
tp6433
I1
s(Vinsert
p6434
I42
VSimpleName: equals
p6435
Vinsert
p6436
I40
VQualifiedName: JdbcConstants.DB2
p6437
tp6438
I3
s(g6061
I42
g6062
Vinsert
p6439
I27
VInfixExpression: !=
p6440
tp6441
I2
s(Vinsert
p6442
I42
VSimpleName: checkValid
p6443
Vinsert
p6444
I45
VStringLiteral: "        from sys_info.orders "
p6445
tp6446
I1
s(g6313
I42
g6314
Vinsert
p6447
I42
VSimpleName: stmt
p6448
tp6449
I1
s(Vinsert
p6450
I42
VSimpleName: toInt
p6451
Vinsert
p6452
I32
VMethodInvocation
p6453
tp6454
I4
s(Vinsert
p6455
I42
VSimpleName: getActivePeak
p6456
Vinsert
p6457
I14
VClassInstanceCreation
p6458
tp6459
I1
s(Vinsert
p6460
I42
VSimpleName: toSQLString
p6461
Vinsert
p6462
I45
VStringLiteral: "\u005ct\u005c"KEEP\u005c", \u005cn"
p6463
tp6464
I1
s(Vinsert
p6465
I42
VSimpleName: clone
p6466
Vinsert
p6467
I42
VSimpleName: subPartition
p6468
tp6469
I1
s(Vinsert
p6470
I42
VSimpleName: getRight
p6471
Vinsert
p6472
I42
VSimpleName: Entity
p6473
tp6474
I4
s(Vinsert
p6475
I42
VSimpleName: wasNull
p6476
Vinsert
p6477
I42
VSimpleName: test_wasNull
p6478
tp6479
I1
s(Vinsert
p6480
I42
VSimpleName: indexOf
p6481
Vinsert
p6482
I42
VSimpleName: errorText
p6483
tp6484
I1
s(Vinsert
p6485
I42
VSimpleName: newInstance
p6486
Vinsert
p6487
I43
VSimpleType: Object
p6488
tp6489
I2
s(Vinsert
p6490
I42
VSimpleName: token
p6491
Vinsert
p6492
I42
VSimpleName: parseInsert
p6493
tp6494
I1
s(Vinsert
p6495
I42
VSimpleName: parseInt
p6496
Vinsert
p6497
I42
VSimpleName: size
p6498
tp6499
I1
s(g1155
I42
g1156
Vinsert
p6500
I13
VCharacterLiteral: ')'
p6501
tp6502
I1
s(Vinsert
p6503
I42
VSimpleName: incrementSelectCount
p6504
Vinsert
p6505
I42
VSimpleName: incrementInsertCount
p6506
tp6507
I2
s(g2662
I42
g2663
Vinsert
p6508
I42
VSimpleName: nextToken
p6509
tp6510
I1
s(Vinsert
p6511
I42
VSimpleName: assertEquals
p6512
Vinsert
p6513
I43
VSimpleType: SQLBinaryOpExpr
p6514
tp6515
I8
s(Vinsert
p6516
I42
VSimpleName: readLock
p6517
Vinsert
p6518
I74
VParameterizedType: HashMap<String,JdbcSqlStat>
p6519
tp6520
I1
s(Vinsert
p6521
I42
VSimpleName: getText
p6522
Vinsert
p6523
I83
VModifier: public
p6524
tp6525
I1
s(g5772
I42
g5773
Vinsert
p6526
I43
VSimpleType: B
p6527
tp6528
I1
s(Vinsert
p6529
I42
VSimpleName: getSqlStatById
p6530
Vinsert
p6531
I42
VSimpleName: getDruidDataSourceById
p6532
tp6533
I1
s(Vinsert
p6534
I42
VSimpleName: get
p6535
Vinsert
p6536
I10
VBreakStatement
p6537
tp6538
I1
s(Vinsert
p6539
I42
VSimpleName: toSQLString
p6540
Vinsert
p6541
I45
VStringLiteral: "CREATE TABLE dept_20 ("
p6542
tp6543
I6
s(Vinsert
p6544
I42
VSimpleName: nextToken
p6545
Vinsert
p6546
I42
VSimpleName: chars
p6547
tp6548
I1
s(g2398
I42
g2399
Vinsert
p6549
I42
VSimpleName: tableName
p6550
tp6551
I1
s(Vinsert
p6552
I42
VSimpleName: setName
p6553
Vinsert
p6554
I42
VSimpleName: sqlStat
p6555
tp6556
I1
s(Vinsert
p6557
I42
VSimpleName: containsAlias
p6558
Vinsert
p6559
I27
VInfixExpression: &&
p6560
tp6561
I1
s(Vinsert
p6562
I42
VSimpleName: close
p6563
Vinsert
p6564
I59
VVariableDeclarationFragment
p6565
tp6566
I5
s(Vinsert
p6567
I42
VSimpleName: assertSame
p6568
Vinsert
p6569
I42
VSimpleName: assertNotNull
p6570
tp6571
I1
s(Vinsert
p6572
I42
VSimpleName: getConnection
p6573
Vinsert
p6574
I44
VSingleVariableDeclaration
p6575
tp6576
I2
s(Vinsert
p6577
I42
VSimpleName: toPGString
p6578
Vinsert
p6579
I45
VStringLiteral: "GROUP BY id"
p6580
tp6581
I2
s(Vinsert
p6582
I42
VSimpleName: set
p6583
Vinsert
p6584
I42
VSimpleName: aliasLocal
p6585
tp6586
I1
s(Vinsert
p6587
I42
VSimpleName: isEmpty
p6588
Vinsert
p6589
I42
VSimpleName: StringUtils
p6590
tp6591
I4
s(Vinsert
p6592
I42
VSimpleName: unmodifiableCollection
p6593
Vinsert
p6594
I43
VSimpleType: HMappingColumn
p6595
tp6596
I2
s(Vinsert
p6597
I42
VSimpleName: getFile
p6598
Vinsert
p6599
I42
VSimpleName: Thread
p6600
tp6601
I1
s(Vinsert
p6602
I42
VSimpleName: get
p6603
Vinsert
p6604
I42
VSimpleName: item
p6605
tp6606
I2
s(Vinsert
p6607
I42
VSimpleName: setUpdateAllow
p6608
Vinsert
p6609
I31
VMethodDeclaration
p6610
tp6611
I1
s(Vinsert
p6612
I42
VSimpleName: getModulus
p6613
Vinsert
p6614
I42
VSimpleName: RSAPublicKey
p6615
tp6616
I1
s(Vinsert
p6617
I42
VSimpleName: sort
p6618
Vinsert
p6619
I42
VSimpleName: ArrayList
p6620
tp6621
I2
s(Vinsert
p6622
I42
VSimpleName: parseConstaint
p6623
Vinsert
p6624
I42
VSimpleName: SQLConstaint
p6625
tp6626
I1
s(g6252
I42
g6253
Vinsert
p6627
I21
VExpressionStatement
p6628
tp6629
I1
s(Vinsert
p6630
I42
VSimpleName: setLeft
p6631
Vinsert
p6632
I33
VNullLiteral
p6633
tp6634
I2
s(Vinsert
p6635
I42
VSimpleName: init
p6636
Vinsert
p6637
I22
VFieldAccess
p6638
tp6639
I1
s(Vinsert
p6640
I42
VSimpleName: setFilters
p6641
Vinsert
p6642
I45
VStringLiteral: "SELECT 1"
p6643
tp6644
I1
s(Vinsert
p6645
I42
VSimpleName: accept
p6646
Vinsert
p6647
I43
VSimpleType: SchemaStatVisitor
p6648
tp6649
I16
s(Vinsert
p6650
I42
VSimpleName: findSelectItem
p6651
Vinsert
p6652
I27
VInfixExpression: !=
p6653
tp6654
I2
s(Vinsert
p6655
I42
VSimpleName: setSavepoint
p6656
Vinsert
p6657
I27
VInfixExpression: ==
p6658
tp6659
I1
s(g6074
I42
g6075
Vinsert
p6660
I42
VSimpleName: SQLAlterTableDropColumnItem
p6661
tp6662
I2
s(Vinsert
p6663
I42
VSimpleName: isPermitSchema
p6664
Vinsert
p6665
I25
VIfStatement
p6666
tp6667
I1
s(g5123
I42
g5124
Vinsert
p6668
I38
VPrefixExpression: ++
p6669
tp6670
I1
s(Vinsert
p6671
I42
VSimpleName: toMySqlString
p6672
Vinsert
p6673
I42
VSimpleName: isHintAllow
p6674
tp6675
I1
s(Vinsert
p6676
I42
VSimpleName: of
p6677
Vinsert
p6678
I43
VSimpleType: String
p6679
tp6680
I1
s(g4288
I42
g4289
Vinsert
p6681
I21
VExpressionStatement
p6682
tp6683
I4
s(Vinsert
p6684
I42
VSimpleName: set
p6685
Vinsert
p6686
I42
VSimpleName: password
p6687
tp6688
I1
s(Vinsert
p6689
I42
VSimpleName: getConfig
p6690
Vinsert
p6691
I42
VSimpleName: put
p6692
tp6693
I1
s(Vinsert
p6694
I42
VSimpleName: getTableSource
p6695
Vinsert
p6696
I42
VSimpleName: input
p6697
tp6698
I1
s(Vinsert
p6699
I42
VSimpleName: setConstArithmeticAllow
p6700
Vinsert
p6701
I21
VExpressionStatement
p6702
tp6703
I2
s(g429
I42
g430
Vinsert
p6704
I27
VInfixExpression: ==
p6705
tp6706
I1
s(Vinsert
p6707
I42
VSimpleName: nextToken
p6708
Vinsert
p6709
I42
VSimpleName: StringBuilder
p6710
tp6711
I2
s(Vinsert
p6712
I42
VSimpleName: getOperator
p6713
Vinsert
p6714
I42
VSimpleName: SQLBinaryOperator
p6715
tp6716
I2
s(Vinsert
p6717
I42
VSimpleName: evaluate
p6718
Vinsert
p6719
I42
VSimpleName: result
p6720
tp6721
I6
s(Vinsert
p6722
I42
VSimpleName: toString
p6723
Vinsert
p6724
I45
VStringLiteral: "BEGIN\u005cn"
p6725
tp6726
I1
s(Vinsert
p6727
I42
VSimpleName: isUpgradePatiting
p6728
Vinsert
p6729
I42
VSimpleName: println
p6730
tp6731
I1
s(Vinsert
p6732
I42
VSimpleName: put
p6733
Vinsert
p6734
I42
VSimpleName: partitions
p6735
tp6736
I1
s(Vinsert
p6737
I42
VSimpleName: parameterize
p6738
Vinsert
p6739
I40
VQualifiedName: SQLParserFeature.UseInsertColumnsCache
p6740
tp6741
I1
s(Vinsert
p6742
I42
VSimpleName: addAll
p6743
Vinsert
p6744
I43
VSimpleType: SQLObject
p6745
tp6746
I9
s(g5470
I42
g5471
Vinsert
p6747
I42
VSimpleName: equals
p6748
tp6749
I1
s(Vinsert
p6750
I42
VSimpleName: put
p6751
Vinsert
p6752
I38
VPrefixExpression: ++
p6753
tp6754
I1
s(Vinsert
p6755
I42
VSimpleName: getContext
p6756
Vinsert
p6757
I7
VAssignment: =
p6758
tp6759
I2
s(Vinsert
p6760
I42
VSimpleName: matches
p6761
Vinsert
p6762
I8
VBlock
p6763
tp6764
I2
s(g1790
I42
g1791
Vinsert
p6765
I43
VSimpleType: SQLException
p6766
tp6767
I1
s(g3992
I42
g3993
Vinsert
p6768
I32
VMethodInvocation
p6769
tp6770
I1
s(Vinsert
p6771
I42
VSimpleName: getIdentifiedBy
p6772
Vinsert
p6773
I42
VSimpleName: getIdentifiedBy
p6774
tp6775
I1
s(Vinsert
p6776
I42
VSimpleName: stringVal
p6777
Vinsert
p6778
I42
VSimpleName: interval
p6779
tp6780
I1
s(Vinsert
p6781
I42
VSimpleName: unwrapShardingTable
p6782
Vinsert
p6783
I42
VSimpleName: unwrapShardingTable
p6784
tp6785
I1
s(Vinsert
p6786
I42
VSimpleName: getColName
p6787
Vinsert
p6788
I21
VExpressionStatement
p6789
tp6790
I3
s(Vinsert
p6791
I42
VSimpleName: getActiveCount
p6792
Vinsert
p6793
I42
VSimpleName: pstmt
p6794
tp6795
I1
s(Vinsert
p6796
I42
VSimpleName: get
p6797
Vinsert
p6798
I34
VNumberLiteral: 1000
p6799
tp6800
I4
s(Vinsert
p6801
I42
VSimpleName: acceptChild
p6802
Vinsert
p6803
I25
VIfStatement
p6804
tp6805
I1
s(Vinsert
p6806
I42
VSimpleName: startsWith
p6807
Vinsert
p6808
I27
VInfixExpression: ||
p6809
tp6810
I5
s(Vinsert
p6811
I42
VSimpleName: println
p6812
Vinsert
p6813
I42
VSimpleName: stmtList
p6814
tp6815
I1
s(g5533
I42
g5534
Vinsert
p6816
I42
VSimpleName: targetAffectRow
p6817
tp6818
I3
s(g3233
I42
g3234
Vinsert
p6819
I42
VSimpleName: Object
p6820
tp6821
I32
s(Vinsert
p6822
I42
VSimpleName: add
p6823
Vinsert
p6824
I42
VSimpleName: ref
p6825
tp6826
I2
s(g532
I42
g533
Vinsert
p6827
I10
VBreakStatement
p6828
tp6829
I1
s(Vinsert
p6830
I42
VSimpleName: createSQLStatementParser
p6831
Vinsert
p6832
I42
VSimpleName: Assert
p6833
tp6834
I1
s(g3992
I42
g3993
Vinsert
p6835
I42
VSimpleName: denyMessage
p6836
tp6837
I1
s(g2163
I42
g2164
Vinsert
p6838
I42
VSimpleName: MySqlUpdateStatement
p6839
tp6840
I1
s(g366
I42
g367
Vinsert
p6841
I44
VSingleVariableDeclaration
p6842
tp6843
I1
s(g1760
I42
g1761
Vinsert
p6844
I42
VSimpleName: validDataSourceCheckPeriodMillis
p6845
tp6846
I2
s(Vinsert
p6847
I42
VSimpleName: toString
p6848
Vinsert
p6849
I42
VSimpleName: SQLStatement
p6850
tp6851
I3
s(Vinsert
p6852
I42
VSimpleName: getItem
p6853
Vinsert
p6854
I21
VExpressionStatement
p6855
tp6856
I2
s(g2059
I42
g2060
Vinsert
p6857
I42
VSimpleName: destTableName
p6858
tp6859
I1
s(g1329
I42
g1330
Vinsert
p6860
I42
VSimpleName: TestCase
p6861
tp6862
I1
s(g5262
I42
g5263
Vinsert
p6863
I11
VCastExpression
p6864
tp6865
I1
s(Vinsert
p6866
I42
VSimpleName: expr
p6867
Vinsert
p6868
I43
VSimpleType: SQLExistsExpr
p6869
tp6870
I1
s(Vinsert
p6871
I42
VSimpleName: getLabel
p6872
Vinsert
p6873
I43
VSimpleType: SQLName
p6874
tp6875
I1
s(g4765
I42
g4766
Vinsert
p6876
I32
VMethodInvocation
p6877
tp6878
I1
s(g4227
I42
g4228
Vinsert
p6879
I59
VVariableDeclarationFragment
p6880
tp6881
I2
s(Vinsert
p6882
I42
VSimpleName: console
p6883
Vinsert
p6884
I45
VStringLiteral: "\u005ctKEY `k_c` (`c_tinyint`, `c_int`)\u005cn"
p6885
tp6886
I1
s(g5267
I42
g5268
Vinsert
p6887
I42
VSimpleName: test_Date
p6888
tp6889
I2
s(g924
I42
g925
Vinsert
p6890
I42
VSimpleName: connectionEventListeners
p6891
tp6892
I1
s(Vinsert
p6893
I42
VSimpleName: hasXor
p6894
Vinsert
p6895
I22
VFieldAccess
p6896
tp6897
I1
s(g5744
I42
g5745
Vinsert
p6898
I11
VCastExpression
p6899
tp6900
I4
s(Vinsert
p6901
I42
VSimpleName: getCursorName
p6902
Vinsert
p6903
I42
VSimpleName: print
p6904
tp6905
I4
s(g6597
I42
g6598
Vinsert
p6906
I42
VSimpleName: currentThread
p6907
tp6908
I1
s(Vinsert
p6909
I42
VSimpleName: prepareStatement
p6910
Vinsert
p6911
I43
VSimpleType: DruidPooledPreparedStatement
p6912
tp6913
I1
s(g6212
I42
g6213
Vinsert
p6914
I43
VSimpleType: Integer
p6915
tp6916
I2
s(Vinsert
p6917
I42
VSimpleName: getHitCount
p6918
Vinsert
p6919
I42
VSimpleName: Assert
p6920
tp6921
I4
s(Vinsert
p6922
I42
VSimpleName: assertEquals
p6923
Vinsert
p6924
I42
VSimpleName: getActiveCount
p6925
tp6926
I2
s(Vinsert
p6927
I42
VSimpleName: valueOf
p6928
Vinsert
p6929
I32
VMethodInvocation
p6930
tp6931
I10
s(g1002
I42
g1003
Vinsert
p6932
I42
VSimpleName: addSqlFunctionStat
p6933
tp6934
I1
s(g6742
I42
g6743
Vinsert
p6935
I25
VIfStatement
p6936
tp6937
I4
s(Vinsert
p6938
I42
VSimpleName: createSQLStatementParser
p6939
Vinsert
p6940
I42
VSimpleName: StringBuilder
p6941
tp6942
I2
s(Vinsert
p6943
I42
VSimpleName: currentThread
p6944
Vinsert
p6945
I43
VSimpleType: WeakReference
p6946
tp6947
I1
s(Vinsert
p6948
I42
VSimpleName: assertTrue
p6949
Vinsert
p6950
I55
VTypeDeclaration
p6951
tp6952
I2
s(g4770
I42
g4771
Vinsert
p6953
I42
VSimpleName: item
p6954
tp6955
I2
s(Vinsert
p6956
I42
VSimpleName: toSQLExpr
p6957
Vinsert
p6958
I43
VSimpleType: SQLUpdateStatement
p6959
tp6960
I2
s(Vinsert
p6961
I42
VSimpleName: length
p6962
Vinsert
p6963
I42
VSimpleName: servletPath
p6964
tp6965
I1
s(Vinsert
p6966
I42
VSimpleName: token
p6967
Vinsert
p6968
I42
VSimpleName: SQLListExpr
p6969
tp6970
I2
s(Vinsert
p6971
I42
VSimpleName: currentTimeMillis
p6972
Vinsert
p6973
I27
VInfixExpression: <
p6974
tp6975
I3
s(Vinsert
p6976
I42
VSimpleName: assertEquals
p6977
Vinsert
p6978
I42
VSimpleName: test_trim
p6979
tp6980
I1
s(g1085
I42
g1086
Vinsert
p6981
I42
VSimpleName: SQLObject
p6982
tp6983
I33
s(Vinsert
p6984
I42
VSimpleName: nextToken
p6985
Vinsert
p6986
I40
VQualifiedName: Token.AT
p6987
tp6988
I1
s(g1845
I42
g1846
Vinsert
p6989
I45
VStringLiteral: "\u005ctINTO :New.PROJECT_SYN_ID\u005cn"
p6990
tp6991
I1
s(Vinsert
p6992
I42
VSimpleName: getConcurrentMax
p6993
Vinsert
p6994
I42
VSimpleName: setConcurrentMax
p6995
tp6996
I1
s(Vinsert
p6997
I42
VSimpleName: parseStatements
p6998
Vinsert
p6999
I45
VStringLiteral: "EAIREP"
p7000
tp7001
I1
s(Vinsert
p7002
I42
VSimpleName: getCreateTableScript
p7003
Vinsert
p7004
I42
VSimpleName: conn
p7005
tp7006
I2
s(Vinsert
p7007
I42
VSimpleName: getConnectProperties
p7008
Vinsert
p7009
I42
VSimpleName: MockConnection
p7010
tp7011
I1
s(Vinsert
p7012
I42
VSimpleName: put
p7013
Vinsert
p7014
I42
VSimpleName: aliasLocal
p7015
tp7016
I2
s(g1150
I42
g1151
Vinsert
p7017
I42
VSimpleName: lexer
p7018
tp7019
I2
s(g3880
I42
g3881
Vinsert
p7020
I43
VSimpleType: MethodInfo
p7021
tp7022
I1
s(Vinsert
p7023
I42
VSimpleName: setName
p7024
Vinsert
p7025
I42
VSimpleName: getProperty
p7026
tp7027
I1
s(g4035
I42
g4036
Vinsert
p7028
I42
VSimpleName: assertEquals
p7029
tp7030
I2
s(Vinsert
p7031
I42
VSimpleName: accept0
p7032
Vinsert
p7033
I43
VSimpleType: SQLExpr
p7034
tp7035
I1
s(g5734
I42
g5735
Vinsert
p7036
I21
VExpressionStatement
p7037
tp7038
I2
s(Vinsert
p7039
I42
VSimpleName: toSQLString
p7040
Vinsert
p7041
I45
VStringLiteral: "\u005cn\u005ct),"
p7042
tp7043
I2
s(g3169
I42
g3170
Vinsert
p7044
I25
VIfStatement
p7045
tp7046
I7
s(Vinsert
p7047
I42
VSimpleName: assertTrue
p7048
Vinsert
p7049
I42
VSimpleName: toString
p7050
tp7051
I1
s(Vinsert
p7052
I42
VSimpleName: resultSetMetaData_getSchemaName
p7053
Vinsert
p7054
I25
VIfStatement
p7055
tp7056
I1
s(g3312
I42
g3313
Vinsert
p7057
I42
VSimpleName: properties
p7058
tp7059
I1
s(g6516
I42
g6517
Vinsert
p7060
I43
VSimpleType: String
p7061
tp7062
I3
s(Vinsert
p7063
I42
VSimpleName: incrementRunningCount
p7064
Vinsert
p7065
I43
VSimpleType: JdbcSqlStat
p7066
tp7067
I2
s(Vinsert
p7068
I42
VSimpleName: nextToken
p7069
Vinsert
p7070
I42
VSimpleName: nameHashCode64
p7071
tp7072
I1
s(Vinsert
p7073
I42
VSimpleName: setMaxIdle
p7074
Vinsert
p7075
I32
VMethodInvocation
p7076
tp7077
I2
s(Vinsert
p7078
I42
VSimpleName: getType
p7079
Vinsert
p7080
I42
VSimpleName: decrementIndent
p7081
tp7082
I1
s(Vinsert
p7083
I42
VSimpleName: addSymbol
p7084
Vinsert
p7085
I21
VExpressionStatement
p7086
tp7087
I13
s(g454
I42
g455
Vinsert
p7088
I41
VReturnStatement
p7089
tp7090
I1
s(Vinsert
p7091
I42
VSimpleName: createStatementId
p7092
Vinsert
p7093
I42
VSimpleName: createStatementId
p7094
tp7095
I1
s(g6396
I42
g6397
Vinsert
p7096
I42
VSimpleName: generateCertificate
p7097
tp7098
I1
s(g6480
I42
g6481
Vinsert
p7099
I42
VSimpleName: message
p7100
tp7101
I2
s(g6396
I42
g6397
Vinsert
p7102
I52
VThisExpression
p7103
tp7104
I1
s(g434
I42
g435
Vinsert
p7105
I40
VQualifiedName: JdbcConstants.DB2
p7106
tp7107
I1
s(g4293
I42
g4294
Vinsert
p7108
I31
VMethodDeclaration
p7109
tp7110
I1
s(Vinsert
p7111
I42
VSimpleName: getParent
p7112
Vinsert
p7113
I33
VNullLiteral
p7114
tp7115
I5
s(Vinsert
p7116
I42
VSimpleName: getConditions
p7117
Vinsert
p7118
I34
VNumberLiteral: 24
p7119
tp7120
I1
s(Vinsert
p7121
I42
VSimpleName: parse
p7122
Vinsert
p7123
I74
VParameterizedType: List<Map<String,Object>>
p7124
tp7125
I1
s(Vinsert
p7126
I42
VSimpleName: getLeft
p7127
Vinsert
p7128
I42
VSimpleName: add
p7129
tp7130
I1
s(Vinsert
p7131
I42
VSimpleName: fnv1a_64
p7132
Vinsert
p7133
I42
VSimpleName: hash
p7134
tp7135
I1
s(Vinsert
p7136
I42
VSimpleName: clone
p7137
Vinsert
p7138
I48
VSuperMethodInvocation
p7139
tp7140
I3
s(Vinsert
p7141
I42
VSimpleName: fnv1a_64
p7142
Vinsert
p7143
I34
VNumberLiteral: 1000
p7144
tp7145
I2
s(g5543
I42
g5544
Vinsert
p7146
I52
VThisExpression
p7147
tp7148
I5
s(g1511
I42
g1512
Vinsert
p7149
I42
VSimpleName: conn
p7150
tp7151
I16
s(g4964
I42
g4965
Vinsert
p7152
I14
VClassInstanceCreation
p7153
tp7154
I1
s(g4890
I42
g4891
Vinsert
p7155
I39
VPrimitiveType: int
p7156
tp7157
I1
s(Vinsert
p7158
I42
VSimpleName: getMetaData
p7159
Vinsert
p7160
I42
VSimpleName: Override
p7161
tp7162
I1
s(Vinsert
p7163
I42
VSimpleName: clone
p7164
Vinsert
p7165
I33
VNullLiteral
p7166
tp7167
I19
s(g3409
I42
g3410
Vinsert
p7168
I42
VSimpleName: setAlterCount
p7169
tp7170
I1
s(Vinsert
p7171
I42
VSimpleName: setParent
p7172
Vinsert
p7173
I42
VSimpleName: valueClause
p7174
tp7175
I2
s(Vinsert
p7176
I42
VSimpleName: getWith
p7177
Vinsert
p7178
I43
VSimpleType: PGSelectStatement
p7179
tp7180
I3
s(g136
I42
g137
Vinsert
p7181
I70
VEnhancedForStatement
p7182
tp7183
I5
s(Vinsert
p7184
I42
VSimpleName: assertFalse
p7185
Vinsert
p7186
I42
VSimpleName: Assert
p7187
tp7188
I66
s(g4750
I42
g4751
Vinsert
p7189
I8
VBlock
p7190
tp7191
I13
s(g2178
I42
g2179
Vinsert
p7192
I43
VSimpleType: SQLName
p7193
tp7194
I1
s(g5887
I42
g5888
Vinsert
p7195
I42
VSimpleName: nextToken
p7196
tp7197
I1
s(g1456
I42
g1457
Vinsert
p7198
I43
VSimpleType: DruidDataSourceStatLogger
p7199
tp7200
I2
s(Vinsert
p7201
I42
VSimpleName: entrySet
p7202
Vinsert
p7203
I42
VSimpleName: lock
p7204
tp7205
I1
s(Vinsert
p7206
I42
VSimpleName: getUrlPattern
p7207
Vinsert
p7208
I33
VNullLiteral
p7209
tp7210
I1
s(Vinsert
p7211
I42
VSimpleName: setParent
p7212
Vinsert
p7213
I42
VSimpleName: SQLAlterCharacter
p7214
tp7215
I1
s(Vinsert
p7216
I42
VSimpleName: eval
p7217
Vinsert
p7218
I42
VSimpleName: SQLEvalVisitorUtils
p7219
tp7220
I2
s(g592
I42
g593
Vinsert
p7221
I43
VSimpleType: MySqlUnique
p7222
tp7223
I2
s(Vinsert
p7224
I42
VSimpleName: equalsIgnoreCase
p7225
Vinsert
p7226
I45
VStringLiteral: "char"
p7227
tp7228
I1
s(g6066
I42
g6067
Vinsert
p7229
I45
VStringLiteral: "jdbc:mock:xxx"
p7230
tp7231
I1
s(g2309
I42
g2310
Vinsert
p7232
I42
VSimpleName: context
p7233
tp7234
I2
s(Vinsert
p7235
I42
VSimpleName: getConnection
p7236
Vinsert
p7237
I45
VStringLiteral: "jdbc:wrap-jdbc:filters=default:name=clobTest:jdbc:derby:memory:clobTestDB;create=true"
p7238
tp7239
I1
s(Vinsert
p7240
I42
VSimpleName: check
p7241
Vinsert
p7242
I43
VSimpleType: SQLCreateTableStatement
p7243
tp7244
I2
s(Vinsert
p7245
I42
VSimpleName: remove
p7246
Vinsert
p7247
I43
VSimpleType: PreparedStatementHolder
p7248
tp7249
I1
s(g3058
I42
g3059
Vinsert
p7250
I45
VStringLiteral: "CREATE TRIGGER \u005c"AO_4AEACD_WEBHOOK_D367380484\u005c""
p7251
tp7252
I2
s(g326
I42
g327
Vinsert
p7253
I45
VStringLiteral: "    order by type, quantileno)"
p7254
tp7255
I1
s(Vinsert
p7256
I42
VSimpleName: createStatement
p7257
Vinsert
p7258
I42
VSimpleName: Connection
p7259
tp7260
I5
s(g2203
I42
g2204
Vinsert
p7261
I45
VStringLiteral: " ON UPDATE "
p7262
tp7263
I1
s(Vinsert
p7264
I42
VSimpleName: isVariantCheck
p7265
Vinsert
p7266
I27
VInfixExpression: &&
p7267
tp7268
I1
s(g5564
I42
g5565
Vinsert
p7269
I32
VMethodInvocation
p7270
tp7271
I1
s(g1735
I42
g1736
Vinsert
p7272
I42
VSimpleName: tablespace
p7273
tp7274
I6
s(Vinsert
p7275
I42
VSimpleName: limit
p7276
Vinsert
p7277
I8
VBlock
p7278
tp7279
I9
s(Vinsert
p7280
I42
VSimpleName: getMessage
p7281
Vinsert
p7282
I43
VSimpleType: UnsupportedEncodingException
p7283
tp7284
I1
s(g2469
I42
g2470
Vinsert
p7285
I43
VSimpleType: OdpsSetLabelStatement
p7286
tp7287
I1
s(Vinsert
p7288
I42
VSimpleName: getReadStringLength
p7289
Vinsert
p7290
I34
VNumberLiteral: 0
p7291
tp7292
I1
s(Vinsert
p7293
I42
VSimpleName: setShort
p7294
Vinsert
p7295
I43
VSimpleType: Exception
p7296
tp7297
I1
s(g1908
I42
g1909
Vinsert
p7298
I43
VSimpleType: TestCase
p7299
tp7300
I1
s(g241
I42
g242
Vinsert
p7301
I34
VNumberLiteral: 0L
p7302
tp7303
I1
s(g6066
I42
g6067
Vinsert
p7304
I43
VSimpleType: DruidDataSource
p7305
tp7306
I1
s(g6421
I42
g6422
Vinsert
p7307
I40
VQualifiedName: FnvHash.Constants.CURRVAL
p7308
tp7309
I1
s(Vinsert
p7310
I42
VSimpleName: incrementAndGet
p7311
Vinsert
p7312
I14
VClassInstanceCreation
p7313
tp7314
I12
s(Vinsert
p7315
I42
VSimpleName: get
p7316
Vinsert
p7317
I42
VSimpleName: cd
p7318
tp7319
I2
s(Vinsert
p7320
I42
VSimpleName: getRawObject
p7321
Vinsert
p7322
I25
VIfStatement
p7323
tp7324
I1
s(Vinsert
p7325
I42
VSimpleName: setExpr
p7326
Vinsert
p7327
I42
VSimpleName: SQLExprHint
p7328
tp7329
I2
s(Vinsert
p7330
I42
VSimpleName: assertFalse
p7331
Vinsert
p7332
I42
VSimpleName: setCommentAllow
p7333
tp7334
I4
s(Vinsert
p7335
I42
VSimpleName: length
p7336
Vinsert
p7337
I42
VSimpleName: get
p7338
tp7339
I1
s(g1968
I42
g1969
Vinsert
p7340
I42
VSimpleName: lexer
p7341
tp7342
I3
s(g1241
I42
g1242
Vinsert
p7343
I43
VSimpleType: DruidDataSource
p7344
tp7345
I1
s(Vinsert
p7346
I42
VSimpleName: token
p7347
Vinsert
p7348
I42
VSimpleName: substring
p7349
tp7350
I1
s(Vinsert
p7351
I42
VSimpleName: assertEquals
p7352
Vinsert
p7353
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION s1"
p7354
tp7355
I1
s(Vinsert
p7356
I42
VSimpleName: getTransactionThresholdMillis
p7357
Vinsert
p7358
I42
VSimpleName: currentTimeMillis
p7359
tp7360
I3
s(g1486
I42
g1487
Vinsert
p7361
I78
VMarkerAnnotation
p7362
tp7363
I6
s(g4447
I42
g4448
Vinsert
p7364
I9
VBooleanLiteral: false
p7365
tp7366
I1
s(g41
I42
g42
Vinsert
p7367
I42
VSimpleName: endOfComment
p7368
tp7369
I2
s(Vinsert
p7370
I42
VSimpleName: toLowerCase
p7371
Vinsert
p7372
I42
VSimpleName: alias
p7373
tp7374
I2
s(Vinsert
p7375
I42
VSimpleName: execute
p7376
Vinsert
p7377
I42
VSimpleName: Statement
p7378
tp7379
I2
s(g3793
I42
g3794
Vinsert
p7380
I74
VParameterizedType: List<DruidDataSource>
p7381
tp7382
I1
s(g3579
I42
g3580
Vinsert
p7383
I8
VBlock
p7384
tp7385
I1
s(g4370
I42
g4371
Vinsert
p7386
I60
VVariableDeclarationStatement
p7387
tp7388
I1
s(Vinsert
p7389
I42
VSimpleName: toSQLString
p7390
Vinsert
p7391
I45
VStringLiteral: "TABLESPACE \u005c"ZEUS_IND\u005c"\u005cn"
p7392
tp7393
I1
s(Vinsert
p7394
I42
VSimpleName: getFatalErrorCodes
p7395
Vinsert
p7396
I42
VSimpleName: getFatalErrorCodes
p7397
tp7398
I1
s(Vinsert
p7399
I42
VSimpleName: lock
p7400
Vinsert
p7401
I40
VQualifiedName: segments.length
p7402
tp7403
I1
s(Vinsert
p7404
I42
VSimpleName: getAttributes
p7405
Vinsert
p7406
I42
VSimpleName: param3
p7407
tp7408
I1
s(Vinsert
p7409
I42
VSimpleName: setProperty
p7410
Vinsert
p7411
I31
VMethodDeclaration
p7412
tp7413
I2
s(g3821
I42
g3822
Vinsert
p7414
I21
VExpressionStatement
p7415
tp7416
I3
s(Vinsert
p7417
I42
VSimpleName: incrementReplaceCunt
p7418
Vinsert
p7419
I32
VMethodInvocation
p7420
tp7421
I4
s(Vinsert
p7422
I42
VSimpleName: setUrl
p7423
Vinsert
p7424
I43
VSimpleType: MockPreparedStatement
p7425
tp7426
I1
s(Vinsert
p7427
I42
VSimpleName: getConnection
p7428
Vinsert
p7429
I43
VSimpleType: Clob
p7430
tp7431
I1
s(Vinsert
p7432
I42
VSimpleName: isInstance
p7433
Vinsert
p7434
I9
VBooleanLiteral: true
p7435
tp7436
I1
s(g4936
I42
g4937
Vinsert
p7437
I8
VBlock
p7438
tp7439
I2
s(Vinsert
p7440
I42
VSimpleName: getWhere
p7441
Vinsert
p7442
I42
VSimpleName: allawTrueWhere
p7443
tp7444
I1
s(Vinsert
p7445
I42
VSimpleName: get
p7446
Vinsert
p7447
I45
VStringLiteral: "ErrorCount"
p7448
tp7449
I1
s(Vinsert
p7450
I42
VSimpleName: hasMoreElements
p7451
Vinsert
p7452
I42
VSimpleName: getColumns
p7453
tp7454
I1
s(g1604
I42
g1605
Vinsert
p7455
I27
VInfixExpression: !=
p7456
tp7457
I1
s(g4452
I42
g4453
Vinsert
p7458
I8
VBlock
p7459
tp7460
I5
s(Vinsert
p7461
I42
VSimpleName: equals
p7462
Vinsert
p7463
I43
VSimpleType: FormatOption
p7464
tp7465
I1
s(g4227
I42
g4228
Vinsert
p7466
I52
VThisExpression
p7467
tp7468
I1
s(Vinsert
p7469
I42
VSimpleName: setRightComponent
p7470
Vinsert
p7471
I60
VVariableDeclarationStatement
p7472
tp7473
I1
s(g4750
I42
g4751
Vinsert
p7474
I42
VSimpleName: x
p7475
tp7476
I4
s(Vinsert
p7477
I42
VSimpleName: identityHashCode
p7478
Vinsert
p7479
I27
VInfixExpression: ==
p7480
tp7481
I1
s(Vinsert
p7482
I42
VSimpleName: hashCode64
p7483
Vinsert
p7484
I9
VBooleanLiteral: false
p7485
tp7486
I1
s(Vinsert
p7487
I42
VSimpleName: size
p7488
Vinsert
p7489
I42
VSimpleName: valuesList
p7490
tp7491
I3
s(Vinsert
p7492
I42
VSimpleName: formatOdps
p7493
Vinsert
p7494
I45
VStringLiteral: "\u005cn\u005ctDISABLE LIFECYCLE"
p7495
tp7496
I1
s(Vinsert
p7497
I42
VSimpleName: warn
p7498
Vinsert
p7499
I43
VSimpleType: SQLUtils
p7500
tp7501
I1
s(Vinsert
p7502
I42
VSimpleName: setResultSetLogger
p7503
Vinsert
p7504
I14
VClassInstanceCreation
p7505
tp7506
I1
s(Vinsert
p7507
I42
VSimpleName: assertEquals
p7508
Vinsert
p7509
I42
VSimpleName: test_now
p7510
tp7511
I1
s(Vinsert
p7512
I42
VSimpleName: getBigDecimal
p7513
Vinsert
p7514
I60
VVariableDeclarationStatement
p7515
tp7516
I1
s(Vinsert
p7517
I42
VSimpleName: getText
p7518
Vinsert
p7519
I13
VCharacterLiteral: '\u005c''
p7520
tp7521
I1
s(Vinsert
p7522
I42
VSimpleName: isEnable
p7523
Vinsert
p7524
I42
VSimpleName: item
p7525
tp7526
I2
s(Vinsert
p7527
I42
VSimpleName: copyOf
p7528
Vinsert
p7529
I25
VIfStatement
p7530
tp7531
I2
s(Vinsert
p7532
I42
VSimpleName: setMaxWidth
p7533
Vinsert
p7534
I34
VNumberLiteral: 50
p7535
tp7536
I1
s(Vinsert
p7537
I42
VSimpleName: preparedStatement_setClob
p7538
Vinsert
p7539
I42
VSimpleName: x
p7540
tp7541
I1
s(Vinsert
p7542
I42
VSimpleName: isOracle
p7543
Vinsert
p7544
I42
VSimpleName: holder
p7545
tp7546
I1
s(Vinsert
p7547
I42
VSimpleName: console
p7548
Vinsert
p7549
I45
VStringLiteral: "\u005ctc_blob blob,\u005cn"
p7550
tp7551
I2
s(Vinsert
p7552
I42
VSimpleName: setTestOnBorrow
p7553
Vinsert
p7554
I42
VSimpleName: setTimeBetweenEvictionRunsMillis
p7555
tp7556
I1
s(g492
I42
g493
Vinsert
p7557
I33
VNullLiteral
p7558
tp7559
I1
s(Vinsert
p7560
I42
VSimpleName: getName
p7561
Vinsert
p7562
I42
VSimpleName: getLeft
p7563
tp7564
I1
s(Vinsert
p7565
I42
VSimpleName: getDatabase
p7566
Vinsert
p7567
I44
VSingleVariableDeclaration
p7568
tp7569
I2
s(g6689
I42
g6690
Vinsert
p7570
I21
VExpressionStatement
p7571
tp7572
I75
s(Vinsert
p7573
I42
VSimpleName: visit
p7574
Vinsert
p7575
I42
VSimpleName: indexName
p7576
tp7577
I2
s(Vinsert
p7578
I42
VSimpleName: getWhere
p7579
Vinsert
p7580
I43
VSimpleType: SQLExpr
p7581
tp7582
I1
s(g1410
I42
g1411
Vinsert
p7583
I42
VSimpleName: source
p7584
tp7585
I1
s(g3083
I42
g3084
Vinsert
p7586
I42
VSimpleName: Assert
p7587
tp7588
I9
s(Vinsert
p7589
I42
VSimpleName: token
p7590
Vinsert
p7591
I40
VQualifiedName: Token.DISTINCT
p7592
tp7593
I1
s(Vinsert
p7594
I42
VSimpleName: createContext
p7595
Vinsert
p7596
I59
VVariableDeclarationFragment
p7597
tp7598
I1
s(g51
I42
g52
Vinsert
p7599
I57
VTypeLiteral
p7600
tp7601
I1
s(Vinsert
p7602
I42
VSimpleName: token
p7603
Vinsert
p7604
I42
VSimpleName: unionRest
p7605
tp7606
I1
s(Vinsert
p7607
I42
VSimpleName: nextToken
p7608
Vinsert
p7609
I40
VQualifiedName: MySqlShowProfileStatement.Type.CPU
p7610
tp7611
I1
s(Vinsert
p7612
I42
VSimpleName: getOptimizeFor
p7613
Vinsert
p7614
I42
VSimpleName: println
p7615
tp7616
I1
s(g5520
I42
g5521
Vinsert
p7617
I42
VSimpleName: NoSuchAlgorithmException
p7618
tp7619
I1
s(Vinsert
p7620
I42
VSimpleName: getForeignDataWrapper
p7621
Vinsert
p7622
I42
VSimpleName: x
p7623
tp7624
I2
s(g351
I42
g352
Vinsert
p7625
I45
VStringLiteral: ", minIdle "
p7626
tp7627
I1
s(g2054
I42
g2055
Vinsert
p7628
I8
VBlock
p7629
tp7630
I1
s(Vinsert
p7631
I42
VSimpleName: printDataSourceData
p7632
Vinsert
p7633
I43
VSimpleType: String
p7634
tp7635
I1
s(g6722
I42
g6723
Vinsert
p7636
I42
VSimpleName: accept
p7637
tp7638
I1
s(g2084
I42
g2085
Vinsert
p7639
I42
VSimpleName: Method
p7640
tp7641
I3
s(Vinsert
p7642
I42
VSimpleName: getParameters
p7643
Vinsert
p7644
I42
VSimpleName: SQLSelectQueryBlock
p7645
tp7646
I1
s(g552
I42
g553
Vinsert
p7647
I53
VThrowStatement
p7648
tp7649
I1
s(Vinsert
p7650
I42
VSimpleName: abs
p7651
Vinsert
p7652
I42
VSimpleName: loopCount
p7653
tp7654
I1
s(Vinsert
p7655
I42
VSimpleName: setTestWhileIdle
p7656
Vinsert
p7657
I39
VPrimitiveType: void
p7658
tp7659
I1
s(Vinsert
p7660
I42
VSimpleName: assertEquals
p7661
Vinsert
p7662
I45
VStringLiteral: "\u005cn('a3', 'b3')"
p7663
tp7664
I2
s(Vinsert
p7665
I42
VSimpleName: getGlobalTransactionId
p7666
Vinsert
p7667
I8
VBlock
p7668
tp7669
I1
s(g2639
I42
g2640
Vinsert
p7670
I42
VSimpleName: put
p7671
tp7672
I2
s(Vinsert
p7673
I42
VSimpleName: reset
p7674
Vinsert
p7675
I42
VSimpleName: equalsIgnoreCase
p7676
tp7677
I1
s(Vinsert
p7678
I42
VSimpleName: explainToSQLObject
p7679
Vinsert
p7680
I42
VSimpleName: provider
p7681
tp7682
I1
s(g459
I42
g460
Vinsert
p7683
I45
VStringLiteral: "\u005cn\u005ctprice numeric"
p7684
tp7685
I1
s(Vinsert
p7686
I42
VSimpleName: toLowerCase
p7687
Vinsert
p7688
I39
VPrimitiveType: int
p7689
tp7690
I2
s(g1390
I42
g1391
Vinsert
p7691
I21
VExpressionStatement
p7692
tp7693
I2
s(g16
I42
g17
Vinsert
p7694
I42
VSimpleName: tableSourceMap
p7695
tp7696
I1
s(Vinsert
p7697
I42
VSimpleName: println
p7698
Vinsert
p7699
I45
VStringLiteral: "\u005ct\u005ctUNION ALL\u005cn"
p7700
tp7701
I1
s(Vinsert
p7702
I42
VSimpleName: getPrimaryKey
p7703
Vinsert
p7704
I21
VExpressionStatement
p7705
tp7706
I2
s(Vinsert
p7707
I42
VSimpleName: setFull
p7708
Vinsert
p7709
I60
VVariableDeclarationStatement
p7710
tp7711
I1
s(Vinsert
p7712
I42
VSimpleName: contains
p7713
Vinsert
p7714
I45
VStringLiteral: "tmall_campaign"
p7715
tp7716
I2
s(g3742
I42
g3743
Vinsert
p7717
I45
VStringLiteral: "-s2"
p7718
tp7719
I1
s(Vinsert
p7720
I42
VSimpleName: getActiveConnectionStackTraceByDataSourceId
p7721
Vinsert
p7722
I42
VSimpleName: Integer
p7723
tp7724
I3
s(g6298
I42
g6299
Vinsert
p7725
I44
VSingleVariableDeclaration
p7726
tp7727
I3
s(Vinsert
p7728
I42
VSimpleName: toSQLString
p7729
Vinsert
p7730
I45
VStringLiteral: "\u005cn\u005ctcust_last_name varchar2(20),"
p7731
tp7732
I2
s(g748
I42
g749
Vinsert
p7733
I27
VInfixExpression: ==
p7734
tp7735
I1
s(Vinsert
p7736
I42
VSimpleName: setRowPrefetch
p7737
Vinsert
p7738
I42
VSimpleName: sql
p7739
tp7740
I2
s(Vinsert
p7741
I42
VSimpleName: setParent
p7742
Vinsert
p7743
I18
VContinueStatement
p7744
tp7745
I1
s(Vinsert
p7746
I42
VSimpleName: token
p7747
Vinsert
p7748
I42
VSimpleName: parent
p7749
tp7750
I1
s(Vinsert
p7751
I42
VSimpleName: getObjectInstance
p7752
Vinsert
p7753
I42
VSimpleName: assertNull
p7754
tp7755
I1
s(Vinsert
p7756
I42
VSimpleName: findFunction
p7757
Vinsert
p7758
I42
VSimpleName: Schema
p7759
tp7760
I1
s(g2795
I42
g2796
Vinsert
p7761
I42
VSimpleName: InputStreamReader
p7762
tp7763
I1
s(Vinsert
p7764
I42
VSimpleName: getExpr
p7765
Vinsert
p7766
I42
VSimpleName: SQLExprHint
p7767
tp7768
I1
s(Vinsert
p7769
I42
VSimpleName: print
p7770
Vinsert
p7771
I45
VStringLiteral: "owner"
p7772
tp7773
I1
s(g2034
I42
g2035
Vinsert
p7774
I42
VSimpleName: args
p7775
tp7776
I1
s(Vinsert
p7777
I42
VSimpleName: setDbType
p7778
Vinsert
p7779
I42
VSimpleName: dbType
p7780
tp7781
I3
s(Vinsert
p7782
I42
VSimpleName: setParent
p7783
Vinsert
p7784
I42
VSimpleName: connectBy
p7785
tp7786
I3
s(Vinsert
p7787
I42
VSimpleName: setReferencedTableName
p7788
Vinsert
p7789
I42
VSimpleName: referencedTableName
p7790
tp7791
I1
s(Vinsert
p7792
I42
VSimpleName: getWhere
p7793
Vinsert
p7794
I78
VMarkerAnnotation
p7795
tp7796
I1
s(Vinsert
p7797
I42
VSimpleName: fireEvent
p7798
Vinsert
p7799
I41
VReturnStatement
p7800
tp7801
I1
s(Vinsert
p7802
I42
VSimpleName: prepareStatement
p7803
Vinsert
p7804
I43
VSimpleType: DruidPooledConnection
p7805
tp7806
I38
s(Vinsert
p7807
I42
VSimpleName: emptyList
p7808
Vinsert
p7809
I42
VSimpleName: Override
p7810
tp7811
I12
s(Vinsert
p7812
I42
VSimpleName: getName
p7813
Vinsert
p7814
I42
VSimpleName: isPublic
p7815
tp7816
I1
s(Vinsert
p7817
I42
VSimpleName: unwrap
p7818
Vinsert
p7819
I42
VSimpleName: ResultSet
p7820
tp7821
I2
s(Vinsert
p7822
I42
VSimpleName: setParent
p7823
Vinsert
p7824
I42
VSimpleName: listExpr
p7825
tp7826
I3
s(Vinsert
p7827
I42
VSimpleName: getMinorVersion
p7828
Vinsert
p7829
I22
VFieldAccess
p7830
tp7831
I2
s(g1790
I42
g1791
Vinsert
p7832
I42
VSimpleName: ResultSet
p7833
tp7834
I1
s(Vinsert
p7835
I42
VSimpleName: setParameters
p7836
Vinsert
p7837
I42
VSimpleName: parameters
p7838
tp7839
I4
s(Vinsert
p7840
I42
VSimpleName: setQuery
p7841
Vinsert
p7842
I42
VSimpleName: query
p7843
tp7844
I1
s(Vinsert
p7845
I42
VSimpleName: add
p7846
Vinsert
p7847
I42
VSimpleName: SQLSetStatement
p7848
tp7849
I1
s(Vinsert
p7850
I42
VSimpleName: token
p7851
Vinsert
p7852
I42
VSimpleName: parameter
p7853
tp7854
I2
s(Vinsert
p7855
I42
VSimpleName: equals
p7856
Vinsert
p7857
I42
VSimpleName: right
p7858
tp7859
I2
s(g1685
I42
g1686
Vinsert
p7860
I42
VSimpleName: toString
p7861
tp7862
I1
s(Vinsert
p7863
I42
VSimpleName: equals
p7864
Vinsert
p7865
I40
VQualifiedName: sqlOver.windowingBetweenEndFollowing
p7866
tp7867
I1
s(Vinsert
p7868
I42
VSimpleName: accept
p7869
Vinsert
p7870
I43
VSimpleType: SQLExpr
p7871
tp7872
I5
s(Vinsert
p7873
I42
VSimpleName: size
p7874
Vinsert
p7875
I42
VSimpleName: physical_connection_connect
p7876
tp7877
I1
s(Vinsert
p7878
I42
VSimpleName: endVisit
p7879
Vinsert
p7880
I42
VSimpleName: interval
p7881
tp7882
I1
s(Vinsert
p7883
I42
VSimpleName: getMessage
p7884
Vinsert
p7885
I9
VBooleanLiteral: true
p7886
tp7887
I1
s(Vinsert
p7888
I42
VSimpleName: parseDeleteStatement
p7889
Vinsert
p7890
I42
VSimpleName: String
p7891
tp7892
I3
s(Vinsert
p7893
I42
VSimpleName: getProperty
p7894
Vinsert
p7895
I59
VVariableDeclarationFragment
p7896
tp7897
I21
s(Vinsert
p7898
I42
VSimpleName: parseStatements
p7899
Vinsert
p7900
I43
VSimpleType: SQLSelectStatement
p7901
tp7902
I2
s(Vinsert
p7903
I42
VSimpleName: isIntited
p7904
Vinsert
p7905
I25
VIfStatement
p7906
tp7907
I1
s(Vinsert
p7908
I42
VSimpleName: dataSource_connect
p7909
Vinsert
p7910
I42
VSimpleName: conn
p7911
tp7912
I2
s(g2717
I42
g2718
Vinsert
p7913
I40
VQualifiedName: JdbcUtils.MYSQL
p7914
tp7915
I4
s(g1352
I42
g1353
Vinsert
p7916
I25
VIfStatement
p7917
tp7918
I1
s(Vinsert
p7919
I42
VSimpleName: getColumns
p7920
Vinsert
p7921
I43
VSimpleType: MySqlInsertStatement
p7922
tp7923
I2
s(g2413
I42
g2414
Vinsert
p7924
I42
VSimpleName: print
p7925
tp7926
I1
s(Vinsert
p7927
I42
VSimpleName: names
p7928
Vinsert
p7929
I42
VSimpleName: nextToken
p7930
tp7931
I3
s(Vinsert
p7932
I42
VSimpleName: getString
p7933
Vinsert
p7934
I42
VSimpleName: String
p7935
tp7936
I3
s(Vinsert
p7937
I42
VSimpleName: equals
p7938
Vinsert
p7939
I40
VQualifiedName: com.alibaba.druid.sql.dialect.teradata.visitor.TeradataSchemaStatVisitor
p7940
tp7941
I1
s(Vinsert
p7942
I42
VSimpleName: nextToken
p7943
Vinsert
p7944
I45
VStringLiteral: "QUEUE_ON_PK"
p7945
tp7946
I1
s(Vinsert
p7947
I42
VSimpleName: exportParamterAndAccept
p7948
Vinsert
p7949
I21
VExpressionStatement
p7950
tp7951
I5
s(g1105
I42
g1106
Vinsert
p7952
I59
VVariableDeclarationFragment
p7953
tp7954
I23
s(Vinsert
p7955
I42
VSimpleName: setExceptionSorterClassName
p7956
Vinsert
p7957
I62
VInstanceofExpression
p7958
tp7959
I1
s(Vinsert
p7960
I42
VSimpleName: toString
p7961
Vinsert
p7962
I42
VSimpleName: getColumnName
p7963
tp7964
I1
s(Vinsert
p7965
I42
VSimpleName: explainToSelectSQLObject
p7966
Vinsert
p7967
I52
VThisExpression
p7968
tp7969
I1
s(Vinsert
p7970
I42
VSimpleName: isSetAllow
p7971
Vinsert
p7972
I42
VSimpleName: x
p7973
tp7974
I2
s(Vinsert
p7975
I42
VSimpleName: setParent
p7976
Vinsert
p7977
I42
VSimpleName: authid
p7978
tp7979
I3
s(g5200
I42
g5201
Vinsert
p7980
I52
VThisExpression
p7981
tp7982
I1
s(g1385
I42
g1386
Vinsert
p7983
I42
VSimpleName: nextToken
p7984
tp7985
I2
s(Vinsert
p7986
I42
VSimpleName: getExprParser
p7987
Vinsert
p7988
I8
VBlock
p7989
tp7990
I4
s(Vinsert
p7991
I42
VSimpleName: setDropTableAllow
p7992
Vinsert
p7993
I42
VSimpleName: Exception
p7994
tp7995
I2
s(Vinsert
p7996
I42
VSimpleName: getWhere
p7997
Vinsert
p7998
I45
VStringLiteral: "IGNORE "
p7999
tp8000
I1
s(Vinsert
p8001
I42
VSimpleName: getResolvedTableSource
p8002
Vinsert
p8003
I59
VVariableDeclarationFragment
p8004
tp8005
I1
s(Vinsert
p8006
I42
VSimpleName: isIdentifierChar
p8007
Vinsert
p8008
I39
VPrimitiveType: boolean
p8009
tp8010
I1
s(Vinsert
p8011
I42
VSimpleName: getHeight
p8012
Vinsert
p8013
I42
VSimpleName: getWidth
p8014
tp8015
I1
s(g6429
I42
g6430
Vinsert
p8016
I39
VPrimitiveType: boolean
p8017
tp8018
I1
s(g4661
I42
g4662
Vinsert
p8019
I43
VSimpleType: Exception
p8020
tp8021
I1
s(Vinsert
p8022
I42
VSimpleName: getColumns
p8023
Vinsert
p8024
I42
VSimpleName: SQLAlterTableDropColumnItem
p8025
tp8026
I2
s(g3027
I42
g3028
Vinsert
p8027
I42
VSimpleName: paramsArray
p8028
tp8029
I1
s(Vinsert
p8030
I42
VSimpleName: endsWith
p8031
Vinsert
p8032
I42
VSimpleName: String
p8033
tp8034
I1
s(g5084
I42
g5085
Vinsert
p8035
I43
VSimpleType: SQLCreateDatabaseStatement
p8036
tp8037
I1
s(Vinsert
p8038
I42
VSimpleName: queryForList
p8039
Vinsert
p8040
I8
VBlock
p8041
tp8042
I2
s(g4050
I42
g4051
Vinsert
p8043
I45
VStringLiteral: "PIPE ROW("
p8044
tp8045
I1
s(g723
I42
g724
Vinsert
p8046
I42
VSimpleName: isWrapperFor
p8047
tp8048
I1
s(g846
I42
g847
Vinsert
p8049
I42
VSimpleName: onConflictTarget
p8050
tp8051
I1
s(Vinsert
p8052
I42
VSimpleName: setParamType
p8053
Vinsert
p8054
I40
VQualifiedName: Token.OUT
p8055
tp8056
I1
s(Vinsert
p8057
I42
VSimpleName: clearWallTopStatementContext
p8058
Vinsert
p8059
I43
VSimpleType: SQLDeleteStatement
p8060
tp8061
I1
s(Vinsert
p8062
I42
VSimpleName: setClob
p8063
Vinsert
p8064
I42
VSimpleName: test_setClob_2
p8065
tp8066
I1
s(Vinsert
p8067
I42
VSimpleName: isEmpty
p8068
Vinsert
p8069
I41
VReturnStatement
p8070
tp8071
I1
s(g2309
I42
g2310
Vinsert
p8072
I42
VSimpleName: current
p8073
tp8074
I1
s(Vinsert
p8075
I42
VSimpleName: setDbLink
p8076
Vinsert
p8077
I43
VSimpleType: SQLNumericLiteralExpr
p8078
tp8079
I1
s(Vinsert
p8080
I42
VSimpleName: get
p8081
Vinsert
p8082
I42
VSimpleName: visitor
p8083
tp8084
I3
s(Vinsert
p8085
I42
VSimpleName: getClass
p8086
Vinsert
p8087
I43
VSimpleType: HBQLVisitor
p8088
tp8089
I1
s(Vinsert
p8090
I42
VSimpleName: setType
p8091
Vinsert
p8092
I14
VClassInstanceCreation
p8093
tp8094
I3
s(g4620
I42
g4621
Vinsert
p8095
I42
VSimpleName: identifierEquals
p8096
tp8097
I1
s(Vinsert
p8098
I42
VSimpleName: getSession
p8099
Vinsert
p8100
I42
VSimpleName: httpRequest
p8101
tp8102
I2
s(Vinsert
p8103
I42
VSimpleName: getMaxPoolPreparedStatementPerConnectionSize
p8104
Vinsert
p8105
I42
VSimpleName: V
p8106
tp8107
I1
s(Vinsert
p8108
I42
VSimpleName: equals
p8109
Vinsert
p8110
I43
VSimpleType: String
p8111
tp8112
I11
s(Vinsert
p8113
I42
VSimpleName: current
p8114
Vinsert
p8115
I42
VSimpleName: x
p8116
tp8117
I1
s(Vinsert
p8118
I42
VSimpleName: unwrap
p8119
Vinsert
p8120
I43
VSimpleType: PreparedStatementProxy
p8121
tp8122
I2
s(g3554
I42
g3555
Vinsert
p8123
I42
VSimpleName: createOutputVisitor
p8124
tp8125
I1
s(g3213
I42
g3214
Vinsert
p8126
I52
VThisExpression
p8127
tp8128
I9
s(Vinsert
p8129
I42
VSimpleName: size
p8130
Vinsert
p8131
I42
VSimpleName: i
p8132
tp8133
I39
s(Vinsert
p8134
I42
VSimpleName: visit
p8135
Vinsert
p8136
I42
VSimpleName: statementName
p8137
tp8138
I2
s(g1261
I42
g1262
Vinsert
p8139
I25
VIfStatement
p8140
tp8141
I1
s(Vinsert
p8142
I42
VSimpleName: setParent
p8143
Vinsert
p8144
I42
VSimpleName: identifierEquals
p8145
tp8146
I1
s(g1840
I42
g1841
Vinsert
p8147
I32
VMethodInvocation
p8148
tp8149
I2
s(Vinsert
p8150
I42
VSimpleName: get
p8151
Vinsert
p8152
I42
VSimpleName: getCommitCount
p8153
tp8154
I1
s(Vinsert
p8155
I42
VSimpleName: acceptChild
p8156
Vinsert
p8157
I33
VNullLiteral
p8158
tp8159
I2
s(g7216
I42
g7217
Vinsert
p8160
I42
VSimpleName: SQLBinaryExpr
p8161
tp8162
I1
s(g3297
I42
g3298
Vinsert
p8163
I42
VSimpleName: updateCount
p8164
tp8165
I1
s(Vinsert
p8166
I42
VSimpleName: sort
p8167
Vinsert
p8168
I42
VSimpleName: fnv_64_lower
p8169
tp8170
I1
s(Vinsert
p8171
I42
VSimpleName: getColumn
p8172
Vinsert
p8173
I42
VSimpleName: SQLAlterTableAlterColumn
p8174
tp8175
I1
s(g6516
I42
g6517
Vinsert
p8176
I42
VSimpleName: String
p8177
tp8178
I3
s(Vinsert
p8179
I42
VSimpleName: getMethodStatData
p8180
Vinsert
p8181
I43
VSimpleType: Object
p8182
tp8183
I1
s(Vinsert
p8184
I42
VSimpleName: setRunningCount
p8185
Vinsert
p8186
I42
VSimpleName: getExecuteCount
p8187
tp8188
I1
s(g1536
I42
g1537
Vinsert
p8189
I43
VSimpleType: Exception
p8190
tp8191
I1
s(Vinsert
p8192
I42
VSimpleName: token
p8193
Vinsert
p8194
I43
VSimpleType: SQLDropSequenceStatement
p8195
tp8196
I1
s(g7678
I42
g7679
Vinsert
p8197
I43
VSimpleType: Appendable
p8198
tp8199
I1
s(g1155
I42
g1156
Vinsert
p8200
I42
VSimpleName: printAndAccept
p8201
tp8202
I1
s(Vinsert
p8203
I42
VSimpleName: token
p8204
Vinsert
p8205
I42
VSimpleName: acceptCreate
p8206
tp8207
I2
s(Vinsert
p8208
I42
VSimpleName: getConditions
p8209
Vinsert
p8210
I27
VInfixExpression: +
p8211
tp8212
I8
s(g346
I42
g347
Vinsert
p8213
I45
VStringLiteral: "LockQueueLength"
p8214
tp8215
I1
s(g4982
I42
g4983
Vinsert
p8216
I42
VSimpleName: ucase
p8217
tp8218
I1
s(g3893
I42
g3894
Vinsert
p8219
I40
VQualifiedName: x.ignore
p8220
tp8221
I1
s(Vinsert
p8222
I42
VSimpleName: toHexString
p8223
Vinsert
p8224
I21
VExpressionStatement
p8225
tp8226
I2
s(g2304
I42
g2305
Vinsert
p8227
I38
VPrefixExpression: !
p8228
tp8229
I3
s(g86
I42
g87
Vinsert
p8230
I25
VIfStatement
p8231
tp8232
I1
s(Vinsert
p8233
I42
VSimpleName: parseUnique
p8234
Vinsert
p8235
I42
VSimpleName: unique
p8236
tp8237
I1
s(Vinsert
p8238
I42
VSimpleName: computeUserAgent
p8239
Vinsert
p8240
I21
VExpressionStatement
p8241
tp8242
I2
s(Vinsert
p8243
I42
VSimpleName: getParameters
p8244
Vinsert
p8245
I45
VStringLiteral: " ("
p8246
tp8247
I2
s(g71
I42
g72
Vinsert
p8248
I8
VBlock
p8249
tp8250
I1
s(g6671
I42
g6672
Vinsert
p8251
I42
VSimpleName: provider
p8252
tp8253
I1
s(Vinsert
p8254
I42
VSimpleName: assertEquals
p8255
Vinsert
p8256
I45
VStringLiteral: "\u005cnSUBPARTITION BY HASH (TO_DAYS(purchased)) SUBPARTITIONS 2"
p8257
tp8258
I1
s(Vinsert
p8259
I42
VSimpleName: size
p8260
Vinsert
p8261
I42
VSimpleName: getParametersSize
p8262
tp8263
I1
s(Vinsert
p8264
I42
VSimpleName: clone
p8265
Vinsert
p8266
I42
VSimpleName: c
p8267
tp8268
I6
s(Vinsert
p8269
I42
VSimpleName: indexOf
p8270
Vinsert
p8271
I39
VPrimitiveType: char
p8272
tp8273
I1
s(g597
I42
g598
Vinsert
p8274
I39
VPrimitiveType: boolean
p8275
tp8276
I1
s(Vinsert
p8277
I42
VSimpleName: fnv_64_lower
p8278
Vinsert
p8279
I70
VEnhancedForStatement
p8280
tp8281
I4
s(Vinsert
p8282
I42
VSimpleName: andRest
p8283
Vinsert
p8284
I52
VThisExpression
p8285
tp8286
I1
s(g2568
I42
g2569
Vinsert
p8287
I45
VStringLiteral: "1"
p8288
tp8289
I1
s(g3383
I42
g3384
Vinsert
p8290
I42
VSimpleName: druidDatasource
p8291
tp8292
I2
s(Vinsert
p8293
I42
VSimpleName: setBeanFactory
p8294
Vinsert
p8295
I42
VSimpleName: StatAnnotationAdvisor
p8296
tp8297
I2
s(Vinsert
p8298
I42
VSimpleName: add
p8299
Vinsert
p8300
I42
VSimpleName: keep
p8301
tp8302
I1
s(g206
I42
g207
Vinsert
p8303
I59
VVariableDeclarationFragment
p8304
tp8305
I1
s(Vinsert
p8306
I42
VSimpleName: setErrorEnabled
p8307
Vinsert
p8308
I32
VMethodInvocation
p8309
tp8310
I3
s(Vinsert
p8311
I42
VSimpleName: methodNameHashCode64
p8312
Vinsert
p8313
I44
VSingleVariableDeclaration
p8314
tp8315
I1
s(Vinsert
p8316
I42
VSimpleName: close
p8317
Vinsert
p8318
I45
VStringLiteral: "config"
p8319
tp8320
I1
s(g8243
I42
g8244
Vinsert
p8321
I45
VStringLiteral: "GROUPING SETS"
p8322
tp8323
I2
s(Vinsert
p8324
I42
VSimpleName: toSQLString
p8325
Vinsert
p8326
I45
VStringLiteral: "\u005ct\u005ctDEFAULT DIRECTORY \u005c"DIR_MQ\u005c"\u005cn"
p8327
tp8328
I1
s(Vinsert
p8329
I42
VSimpleName: setParent
p8330
Vinsert
p8331
I42
VSimpleName: token
p8332
tp8333
I1
s(g6562
I42
g6563
Vinsert
p8334
I24
VForStatement
p8335
tp8336
I1
s(g2742
I42
g2743
Vinsert
p8337
I42
VSimpleName: getValue
p8338
tp8339
I2
s(Vinsert
p8340
I42
VSimpleName: trim
p8341
Vinsert
p8342
I2
VArrayAccess
p8343
tp8344
I2
s(Vinsert
p8345
I42
VSimpleName: getDeleteWhere
p8346
Vinsert
p8347
I45
VStringLiteral: "WHERE "
p8348
tp8349
I2
s(Vinsert
p8350
I42
VSimpleName: equals
p8351
Vinsert
p8352
I42
VSimpleName: error
p8353
tp8354
I2
s(Vinsert
p8355
I42
VSimpleName: getName
p8356
Vinsert
p8357
I53
VThrowStatement
p8358
tp8359
I1
s(Vinsert
p8360
I42
VSimpleName: setIndexName
p8361
Vinsert
p8362
I42
VSimpleName: key
p8363
tp8364
I1
s(Vinsert
p8365
I42
VSimpleName: dataSource_connect
p8366
Vinsert
p8367
I42
VSimpleName: filter
p8368
tp8369
I1
s(g5633
I42
g5634
Vinsert
p8370
I21
VExpressionStatement
p8371
tp8372
I16
s(Vinsert
p8373
I42
VSimpleName: endVisit
p8374
Vinsert
p8375
I42
VSimpleName: Override
p8376
tp8377
I2
s(g2281
I42
g2282
Vinsert
p8378
I42
VSimpleName: list
p8379
tp8380
I1
s(Vinsert
p8381
I42
VSimpleName: accept0
p8382
Vinsert
p8383
I59
VVariableDeclarationFragment
p8384
tp8385
I1
s(Vinsert
p8386
I42
VSimpleName: remove
p8387
Vinsert
p8388
I42
VSimpleName: toLowerCase
p8389
tp8390
I1
s(Vinsert
p8391
I42
VSimpleName: addCondition
p8392
Vinsert
p8393
I43
VSimpleType: Exception
p8394
tp8395
I5
s(g1334
I42
g1335
Vinsert
p8396
I45
VStringLiteral: "\u005cn\u005ctPROC_DEF_ID_ NVARCHAR2(64) NOT NULL,"
p8397
tp8398
I2
s(Vinsert
p8399
I42
VSimpleName: doPrivileged
p8400
Vinsert
p8401
I83
VModifier: public
p8402
tp8403
I1
s(Vinsert
p8404
I42
VSimpleName: getDataSource
p8405
Vinsert
p8406
I42
VSimpleName: getConnectionHolder
p8407
tp8408
I1
s(Vinsert
p8409
I42
VSimpleName: getMethodInfo
p8410
Vinsert
p8411
I8
VBlock
p8412
tp8413
I1
s(g5439
I42
g5440
Vinsert
p8414
I42
VSimpleName: test_prepare
p8415
tp8416
I1
s(Vinsert
p8417
I42
VSimpleName: fnv_64_lower_normalized
p8418
Vinsert
p8419
I42
VSimpleName: SQLSelectItem
p8420
tp8421
I1
s(g6455
I42
g6456
Vinsert
p8422
I52
VThisExpression
p8423
tp8424
I1
s(Vinsert
p8425
I42
VSimpleName: getAlterCount
p8426
Vinsert
p8427
I42
VSimpleName: assertNotNull
p8428
tp8429
I1
s(Vinsert
p8430
I42
VSimpleName: formatOdps
p8431
Vinsert
p8432
I45
VStringLiteral: "ALTER TABLE sale_detail"
p8433
tp8434
I1
s(g1544
I42
g1545
Vinsert
p8435
I74
VParameterizedType: List<SQLStatement>
p8436
tp8437
I52
s(Vinsert
p8438
I42
VSimpleName: getPartitions
p8439
Vinsert
p8440
I42
VSimpleName: MySqlPartitioningDef
p8441
tp8442
I1
s(g2895
I42
g2896
Vinsert
p8443
I42
VSimpleName: token
p8444
tp8445
I1
s(g7955
I42
g7956
Vinsert
p8446
I42
VSimpleName: setExceptionSorterClassName
p8447
tp8448
I1
s(Vinsert
p8449
I42
VSimpleName: isDigit
p8450
Vinsert
p8451
I38
VPrefixExpression: !
p8452
tp8453
I1
s(g1304
I42
g1305
Vinsert
p8454
I14
VClassInstanceCreation
p8455
tp8456
I1
s(Vinsert
p8457
I42
VSimpleName: visit
p8458
Vinsert
p8459
I43
VSimpleType: HBQLVisitor
p8460
tp8461
I1
s(g4859
I42
g4860
Vinsert
p8462
I22
VFieldAccess
p8463
tp8464
I1
s(Vinsert
p8465
I42
VSimpleName: getFirst
p8466
Vinsert
p8467
I42
VSimpleName: x
p8468
tp8469
I2
s(Vinsert
p8470
I42
VSimpleName: checkCondition
p8471
Vinsert
p8472
I42
VSimpleName: SQLSelectQueryBlock
p8473
tp8474
I1
s(Vinsert
p8475
I42
VSimpleName: substring
p8476
Vinsert
p8477
I42
VSimpleName: String
p8478
tp8479
I5
s(Vinsert
p8480
I42
VSimpleName: setPrimaryKey
p8481
Vinsert
p8482
I52
VThisExpression
p8483
tp8484
I1
s(Vinsert
p8485
I42
VSimpleName: getOperator
p8486
Vinsert
p8487
I42
VSimpleName: expr
p8488
tp8489
I1
s(g4543
I42
g4544
Vinsert
p8490
I42
VSimpleName: entry
p8491
tp8492
I3
s(g429
I42
g430
Vinsert
p8493
I42
VSimpleName: getParent
p8494
tp8495
I1
s(g738
I42
g739
Vinsert
p8496
I43
VSimpleType: String
p8497
tp8498
I2
s(Vinsert
p8499
I42
VSimpleName: getLabelName
p8500
Vinsert
p8501
I21
VExpressionStatement
p8502
tp8503
I1
s(Vinsert
p8504
I42
VSimpleName: token
p8505
Vinsert
p8506
I46
VSuperConstructorInvocation
p8507
tp8508
I1
s(Vinsert
p8509
I42
VSimpleName: load
p8510
Vinsert
p8511
I42
VSimpleName: properties
p8512
tp8513
I2
s(Vinsert
p8514
I42
VSimpleName: clone
p8515
Vinsert
p8516
I42
VSimpleName: h
p8517
tp8518
I2
s(g1246
I42
g1247
Vinsert
p8519
I42
VSimpleName: setValidate
p8520
tp8521
I1
s(g4839
I42
g4840
Vinsert
p8522
I42
VSimpleName: builder
p8523
tp8524
I2
s(g1873
I42
g1874
Vinsert
p8525
I42
VSimpleName: lexer
p8526
tp8527
I2
s(Vinsert
p8528
I42
VSimpleName: put
p8529
Vinsert
p8530
I42
VSimpleName: object
p8531
tp8532
I1
s(g7822
I42
g7823
Vinsert
p8533
I42
VSimpleName: getItems
p8534
tp8535
I1
s(g5118
I42
g5119
Vinsert
p8536
I39
VPrimitiveType: void
p8537
tp8538
I1
s(g3159
I42
g3160
Vinsert
p8539
I42
VSimpleName: chain
p8540
tp8541
I1
s(Vinsert
p8542
I42
VSimpleName: putAttribute
p8543
Vinsert
p8544
I42
VSimpleName: leftValue
p8545
tp8546
I4
s(Vinsert
p8547
I42
VSimpleName: setProperty
p8548
Vinsert
p8549
I60
VVariableDeclarationStatement
p8550
tp8551
I2
s(g527
I42
g528
Vinsert
p8552
I38
VPrefixExpression: -
p8553
tp8554
I1
s(g8103
I42
g8104
Vinsert
p8555
I27
VInfixExpression: >
p8556
tp8557
I1
s(g881
I42
g882
Vinsert
p8558
I45
VStringLiteral: "name"
p8559
tp8560
I1
s(g2692
I42
g2693
Vinsert
p8561
I42
VSimpleName: dataTypeName
p8562
tp8563
I4
s(Vinsert
p8564
I42
VSimpleName: getOwner
p8565
Vinsert
p8566
I42
VSimpleName: SQLExpr
p8567
tp8568
I2
s(g1700
I42
g1701
Vinsert
p8569
I42
VSimpleName: testUnion
p8570
tp8571
I1
s(g3826
I42
g3827
Vinsert
p8572
I42
VSimpleName: IOException
p8573
tp8574
I1
s(Vinsert
p8575
I42
VSimpleName: nextToken
p8576
Vinsert
p8577
I42
VSimpleName: SQLStatement
p8578
tp8579
I3
s(g6074
I42
g6075
Vinsert
p8580
I14
VClassInstanceCreation
p8581
tp8582
I2
s(Vinsert
p8583
I42
VSimpleName: isFail
p8584
Vinsert
p8585
I32
VMethodInvocation
p8586
tp8587
I1
s(Vinsert
p8588
I42
VSimpleName: getConfig
p8589
Vinsert
p8590
I59
VVariableDeclarationFragment
p8591
tp8592
I70
s(Vinsert
p8593
I42
VSimpleName: assertFalse
p8594
Vinsert
p8595
I45
VStringLiteral: "com/alibaba/druid/jmx/spring_stat_export.xml"
p8596
tp8597
I1
s(Vinsert
p8598
I42
VSimpleName: setSubQuery
p8599
Vinsert
p8600
I43
VSimpleType: SQLQueryExpr
p8601
tp8602
I2
s(Vinsert
p8603
I42
VSimpleName: getPermitObjects
p8604
Vinsert
p8605
I42
VSimpleName: getPermitTables
p8606
tp8607
I2
s(g7275
I42
g7276
Vinsert
p8608
I42
VSimpleName: Exception
p8609
tp8610
I9
s(g7141
I42
g7142
Vinsert
p8611
I8
VBlock
p8612
tp8613
I1
s(g2707
I42
g2708
Vinsert
p8614
I59
VVariableDeclarationFragment
p8615
tp8616
I1
s(Vinsert
p8617
I42
VSimpleName: getAttributes
p8618
Vinsert
p8619
I42
VSimpleName: getRight
p8620
tp8621
I1
s(Vinsert
p8622
I42
VSimpleName: substring
p8623
Vinsert
p8624
I45
VStringLiteral: "@@"
p8625
tp8626
I1
s(Vinsert
p8627
I42
VSimpleName: split
p8628
Vinsert
p8629
I43
VSimpleType: SQLExprParser
p8630
tp8631
I1
s(g4679
I42
g4680
Vinsert
p8632
I32
VMethodInvocation
p8633
tp8634
I3
s(Vinsert
p8635
I42
VSimpleName: assertEquals
p8636
Vinsert
p8637
I42
VSimpleName: DruidDataSourceStatManager
p8638
tp8639
I3
s(g6917
I42
g6918
Vinsert
p8640
I32
VMethodInvocation
p8641
tp8642
I10
s(Vinsert
p8643
I42
VSimpleName: setEngine
p8644
Vinsert
p8645
I59
VVariableDeclarationFragment
p8646
tp8647
I1
s(Vinsert
p8648
I42
VSimpleName: forName
p8649
Vinsert
p8650
I76
VWildcardType: ?
p8651
tp8652
I2
s(Vinsert
p8653
I42
VSimpleName: currentThread
p8654
Vinsert
p8655
I83
VModifier: protected
p8656
tp8657
I1
s(g5628
I42
g5629
Vinsert
p8658
I45
VStringLiteral: "if"
p8659
tp8660
I1
s(Vinsert
p8661
I42
VSimpleName: put
p8662
Vinsert
p8663
I45
VStringLiteral: "MATCHED"
p8664
tp8665
I2
s(g937
I42
g938
Vinsert
p8666
I42
VSimpleName: text
p8667
tp8668
I1
s(Vinsert
p8669
I42
VSimpleName: incrementWarnnings
p8670
Vinsert
p8671
I42
VSimpleName: context
p8672
tp8673
I3
s(g7136
I42
g7137
Vinsert
p8674
I42
VSimpleName: searchClause
p8675
tp8676
I2
s(Vinsert
p8677
I42
VSimpleName: assertEquals
p8678
Vinsert
p8679
I5
VArrayType: int[]
p8680
tp8681
I1
s(Vinsert
p8682
I42
VSimpleName: println
p8683
Vinsert
p8684
I45
VStringLiteral: "CALL \u005c"test.redisson.h2cluster.trigger.ClusterTrigger\u005c"()"
p8685
tp8686
I1
s(Vinsert
p8687
I42
VSimpleName: exec
p8688
Vinsert
p8689
I21
VExpressionStatement
p8690
tp8691
I1
s(Vinsert
p8692
I42
VSimpleName: handle
p8693
Vinsert
p8694
I25
VIfStatement
p8695
tp8696
I5
s(g1160
I42
g1161
Vinsert
p8697
I42
VSimpleName: userDao
p8698
tp8699
I1
s(g3053
I42
g3054
Vinsert
p8700
I42
VSimpleName: lexer
p8701
tp8702
I2
s(g3719
I42
g3720
Vinsert
p8703
I42
VSimpleName: SQLUtils
p8704
tp8705
I8
s(Vinsert
p8706
I42
VSimpleName: nextToken
p8707
Vinsert
p8708
I40
VQualifiedName: Token.HAVING
p8709
tp8710
I1
s(Vinsert
p8711
I42
VSimpleName: nextToken
p8712
Vinsert
p8713
I34
VNumberLiteral: 1
p8714
tp8715
I1
s(Vinsert
p8716
I42
VSimpleName: getHistogram
p8717
Vinsert
p8718
I42
VSimpleName: histogram_10000_100000
p8719
tp8720
I1
s(Vinsert
p8721
I42
VSimpleName: getValue
p8722
Vinsert
p8723
I42
VSimpleName: parameters
p8724
tp8725
I1
s(Vinsert
p8726
I42
VSimpleName: setParent
p8727
Vinsert
p8728
I42
VSimpleName: setTableSource
p8729
tp8730
I2
s(g2790
I42
g2791
Vinsert
p8731
I42
VSimpleName: stmt
p8732
tp8733
I7
s(Vinsert
p8734
I42
VSimpleName: setIfNotExists
p8735
Vinsert
p8736
I42
VSimpleName: lexer
p8737
tp8738
I1
s(g4694
I42
g4695
Vinsert
p8739
I45
VStringLiteral: "\u005ctNOCACHE\u005cn"
p8740
tp8741
I6
s(Vinsert
p8742
I42
VSimpleName: setDatabase
p8743
Vinsert
p8744
I43
VSimpleType: SQLUseStatement
p8745
tp8746
I2
s(Vinsert
p8747
I42
VSimpleName: sort
p8748
Vinsert
p8749
I40
VQualifiedName: MySqlLexer.DEFAULT_MYSQL_KEYWORDS
p8750
tp8751
I1
s(Vinsert
p8752
I42
VSimpleName: hasNext
p8753
Vinsert
p8754
I42
VSimpleName: entrySet
p8755
tp8756
I1
s(g341
I42
g342
Vinsert
p8757
I54
VTryStatement
p8758
tp8759
I2
s(Vinsert
p8760
I42
VSimpleName: toSQLString
p8761
Vinsert
p8762
I43
VSimpleType: SQLSelectStatement
p8763
tp8764
I2
s(Vinsert
p8765
I42
VSimpleName: assertFalse
p8766
Vinsert
p8767
I45
VStringLiteral: " UNION ALL SELECT 2 FROM dual "
p8768
tp8769
I1
s(Vinsert
p8770
I42
VSimpleName: assertNotNull
p8771
Vinsert
p8772
I42
VSimpleName: getName
p8773
tp8774
I2
s(g1705
I42
g1706
Vinsert
p8775
I32
VMethodInvocation
p8776
tp8777
I8
s(Vinsert
p8778
I42
VSimpleName: currentTimeMillis
p8779
Vinsert
p8780
I27
VInfixExpression: ==
p8781
tp8782
I4
s(Vinsert
p8783
I42
VSimpleName: visit
p8784
Vinsert
p8785
I42
VSimpleName: SQLAllColumnExpr
p8786
tp8787
I3
s(Vinsert
p8788
I42
VSimpleName: visit
p8789
Vinsert
p8790
I42
VSimpleName: resolveVisitor
p8791
tp8792
I2
s(g1800
I42
g1801
Vinsert
p8793
I21
VExpressionStatement
p8794
tp8795
I2
s(Vinsert
p8796
I42
VSimpleName: hasComment
p8797
Vinsert
p8798
I59
VVariableDeclarationFragment
p8799
tp8800
I1
s(g7427
I42
g7428
Vinsert
p8801
I42
VSimpleName: clob
p8802
tp8803
I1
s(g642
I42
g643
Vinsert
p8804
I42
VSimpleName: tok
p8805
tp8806
I6
s(g6018
I42
g6019
Vinsert
p8807
I45
VStringLiteral: "select EmpID, EmpName, MgrId, Level\u005cn"
p8808
tp8809
I1
s(Vinsert
p8810
I42
VSimpleName: setValue
p8811
Vinsert
p8812
I42
VSimpleName: SQLIdentifierExpr
p8813
tp8814
I1
s(Vinsert
p8815
I42
VSimpleName: getConnection
p8816
Vinsert
p8817
I42
VSimpleName: Assert
p8818
tp8819
I2
s(g3631
I42
g3632
Vinsert
p8820
I59
VVariableDeclarationFragment
p8821
tp8822
I1
s(Vinsert
p8823
I42
VSimpleName: setNCharacterStream
p8824
Vinsert
p8825
I42
VSimpleName: setNCharacterStream
p8826
tp8827
I1
s(Vinsert
p8828
I42
VSimpleName: stringVal
p8829
Vinsert
p8830
I45
VStringLiteral: "INDEX DIRECTORY"
p8831
tp8832
I1
s(Vinsert
p8833
I42
VSimpleName: length
p8834
Vinsert
p8835
I42
VSimpleName: words
p8836
tp8837
I1
s(g8208
I42
g8209
Vinsert
p8838
I42
VSimpleName: println
p8839
tp8840
I8
s(Vinsert
p8841
I42
VSimpleName: setWithCube
p8842
Vinsert
p8843
I45
VStringLiteral: "CUBE"
p8844
tp8845
I1
s(g597
I42
g598
Vinsert
p8846
I42
VSimpleName: infoCount
p8847
tp8848
I1
s(Vinsert
p8849
I42
VSimpleName: getBytes
p8850
Vinsert
p8851
I8
VBlock
p8852
tp8853
I3
s(g7612
I42
g7613
Vinsert
p8854
I25
VIfStatement
p8855
tp8856
I1
s(g5040
I42
g5041
Vinsert
p8857
I40
VQualifiedName: SQLParserFeature.OptimizedForParameterized
p8858
tp8859
I1
s(g7797
I42
g7798
Vinsert
p8860
I21
VExpressionStatement
p8861
tp8862
I1
s(Vinsert
p8863
I42
VSimpleName: setAccessible
p8864
Vinsert
p8865
I42
VSimpleName: Field
p8866
tp8867
I6
s(Vinsert
p8868
I42
VSimpleName: toBytes
p8869
Vinsert
p8870
I43
VSimpleType: String
p8871
tp8872
I3
s(Vinsert
p8873
I42
VSimpleName: getParameters
p8874
Vinsert
p8875
I42
VSimpleName: token
p8876
tp8877
I1
s(Vinsert
p8878
I42
VSimpleName: assertEquals
p8879
Vinsert
p8880
I45
VStringLiteral: "select sum(if(a > 0, 1, 0)) from t1"
p8881
tp8882
I1
s(g2044
I42
g2045
Vinsert
p8883
I42
VSimpleName: rightDataType
p8884
tp8885
I1
s(Vinsert
p8886
I42
VSimpleName: getJdbcRollbackCount
p8887
Vinsert
p8888
I45
VStringLiteral: "JdbcRollbackCount"
p8889
tp8890
I1
s(Vinsert
p8891
I42
VSimpleName: setBigDecimal
p8892
Vinsert
p8893
I21
VExpressionStatement
p8894
tp8895
I2
s(Vinsert
p8896
I42
VSimpleName: nextToken
p8897
Vinsert
p8898
I42
VSimpleName: setInitrans
p8899
tp8900
I1
s(Vinsert
p8901
I42
VSimpleName: assertEquals
p8902
Vinsert
p8903
I42
VSimpleName: EvalMethodAsciiTest
p8904
tp8905
I1
s(Vinsert
p8906
I42
VSimpleName: getMemoryMXBean
p8907
Vinsert
p8908
I43
VSimpleType: HashMap
p8909
tp8910
I1
s(g5520
I42
g5521
Vinsert
p8911
I32
VMethodInvocation
p8912
tp8913
I1
s(Vinsert
p8914
I42
VSimpleName: addDataSource
p8915
Vinsert
p8916
I14
VClassInstanceCreation
p8917
tp8918
I1
s(Vinsert
p8919
I42
VSimpleName: select
p8920
Vinsert
p8921
I42
VSimpleName: OracleSelectParser
p8922
tp8923
I1
s(Vinsert
p8924
I42
VSimpleName: scheduleAtFixedRate
p8925
Vinsert
p8926
I33
VNullLiteral
p8927
tp8928
I1
s(Vinsert
p8929
I42
VSimpleName: current
p8930
Vinsert
p8931
I7
VAssignment: =
p8932
tp8933
I1
s(g1675
I42
g1676
Vinsert
p8934
I27
VInfixExpression: <
p8935
tp8936
I1
s(Vinsert
p8937
I42
VSimpleName: toString
p8938
Vinsert
p8939
I42
VSimpleName: addCondition
p8940
tp8941
I1
s(g5480
I42
g5481
Vinsert
p8942
I42
VSimpleName: DruidDataSource
p8943
tp8944
I1
s(g8311
I42
g8312
Vinsert
p8945
I59
VVariableDeclarationFragment
p8946
tp8947
I1
s(g5343
I42
g5344
Vinsert
p8948
I33
VNullLiteral
p8949
tp8950
I2
s(Vinsert
p8951
I42
VSimpleName: toLowerCase
p8952
Vinsert
p8953
I42
VSimpleName: lowerTable
p8954
tp8955
I1
s(Vinsert
p8956
I42
VSimpleName: incrementAndGetExecuteCount
p8957
Vinsert
p8958
I27
VInfixExpression: !=
p8959
tp8960
I1
s(g5859
I42
g5860
Vinsert
p8961
I42
VSimpleName: String
p8962
tp8963
I1
s(Vinsert
p8964
I42
VSimpleName: trim
p8965
Vinsert
p8966
I42
VSimpleName: o
p8967
tp8968
I1
s(Vinsert
p8969
I42
VSimpleName: findById
p8970
Vinsert
p8971
I42
VSimpleName: list
p8972
tp8973
I1
s(Vinsert
p8974
I42
VSimpleName: get
p8975
Vinsert
p8976
I42
VSimpleName: error
p8977
tp8978
I1
s(Vinsert
p8979
I42
VSimpleName: accept
p8980
Vinsert
p8981
I42
VSimpleName: DB2SchemaStatVisitor
p8982
tp8983
I40
s(g4288
I42
g4289
Vinsert
p8984
I52
VThisExpression
p8985
tp8986
I2
s(g4183
I42
g4184
Vinsert
p8987
I45
VStringLiteral: "\u005ct\u005ct\u005ctEXIT inner_loop WHEN j > 5;\u005cn"
p8988
tp8989
I1
s(Vinsert
p8990
I42
VSimpleName: removeLocal
p8991
Vinsert
p8992
I42
VSimpleName: getProfiletat
p8993
tp8994
I1
s(Vinsert
p8995
I42
VSimpleName: nextToken
p8996
Vinsert
p8997
I43
VSimpleType: MySqlShowCharacterSetStatement
p8998
tp8999
I1
s(g2760
I42
g2761
Vinsert
p9000
I42
VSimpleName: x
p9001
tp9002
I2
s(g8238
I42
g8239
Vinsert
p9003
I45
VStringLiteral: ""
p9004
tp9005
I2
s(Vinsert
p9006
I42
VSimpleName: close
p9007
Vinsert
p9008
I52
VThisExpression
p9009
tp9010
I4
s(g2852
I42
g2853
Vinsert
p9011
I31
VMethodDeclaration
p9012
tp9013
I1
s(g2273
I42
g2274
Vinsert
p9014
I42
VSimpleName: test_true_3
p9015
tp9016
I1
s(Vinsert
p9017
I42
VSimpleName: getValue
p9018
Vinsert
p9019
I11
VCastExpression
p9020
tp9021
I3
s(g1476
I42
g1477
Vinsert
p9022
I43
VSimpleType: String
p9023
tp9024
I2
s(g8298
I42
g8299
Vinsert
p9025
I8
VBlock
p9026
tp9027
I69
s(Vinsert
p9028
I42
VSimpleName: getObjno
p9029
Vinsert
p9030
I21
VExpressionStatement
p9031
tp9032
I2
s(Vinsert
p9033
I42
VSimpleName: getOrderBy
p9034
Vinsert
p9035
I42
VSimpleName: token
p9036
tp9037
I1
s(g4111
I42
g4112
Vinsert
p9038
I42
VSimpleName: indexFrom
p9039
tp9040
I1
s(Vinsert
p9041
I42
VSimpleName: getComment
p9042
Vinsert
p9043
I42
VSimpleName: x
p9044
tp9045
I9
s(g6202
I42
g6203
Vinsert
p9046
I42
VSimpleName: size
p9047
tp9048
I3
s(g2314
I42
g2315
Vinsert
p9049
I39
VPrimitiveType: void
p9050
tp9051
I3
s(g6187
I42
g6188
Vinsert
p9052
I45
VStringLiteral: "\u005ct\u005c"ID\u005c", \u005cn"
p9053
tp9054
I1
s(Vinsert
p9055
I42
VSimpleName: getParameters
p9056
Vinsert
p9057
I42
VSimpleName: Object
p9058
tp9059
I3
s(Vinsert
p9060
I42
VSimpleName: toLowerCase
p9061
Vinsert
p9062
I52
VThisExpression
p9063
tp9064
I10
s(Vinsert
p9065
I42
VSimpleName: expr
p9066
Vinsert
p9067
I42
VSimpleName: SQLUnaryExpr
p9068
tp9069
I4
s(Vinsert
p9070
I42
VSimpleName: expr
p9071
Vinsert
p9072
I43
VSimpleType: PGLineSegmentsExpr
p9073
tp9074
I2
s(g6207
I42
g6208
Vinsert
p9075
I25
VIfStatement
p9076
tp9077
I1
s(g341
I42
g342
Vinsert
p9078
I21
VExpressionStatement
p9079
tp9080
I3
s(g6036
I42
g6037
Vinsert
p9081
I42
VSimpleName: print
p9082
tp9083
I1
s(Vinsert
p9084
I42
VSimpleName: getStatement
p9085
Vinsert
p9086
I43
VSimpleType: PreparedStatementHolder
p9087
tp9088
I2
s(Vinsert
p9089
I42
VSimpleName: getDbType
p9090
Vinsert
p9091
I32
VMethodInvocation
p9092
tp9093
I12
s(g5277
I42
g5278
Vinsert
p9094
I22
VFieldAccess
p9095
tp9096
I1
s(g1052
I42
g1053
Vinsert
p9097
I34
VNumberLiteral: 1
p9098
tp9099
I1
s(g1840
I42
g1841
Vinsert
p9100
I42
VSimpleName: _decimal
p9101
tp9102
I1
s(Vinsert
p9103
I42
VSimpleName: setColumnLabel
p9104
Vinsert
p9105
I21
VExpressionStatement
p9106
tp9107
I1
s(Vinsert
p9108
I42
VSimpleName: getColumns
p9109
Vinsert
p9110
I40
VQualifiedName: Token.LPAREN
p9111
tp9112
I1
s(Vinsert
p9113
I42
VSimpleName: get
p9114
Vinsert
p9115
I42
VSimpleName: DataSourceHolder
p9116
tp9117
I1
s(g6244
I42
g6245
Vinsert
p9118
I52
VThisExpression
p9119
tp9120
I2
s(g5262
I42
g5263
Vinsert
p9121
I36
VParenthesizedExpression
p9122
tp9123
I1
s(Vinsert
p9124
I42
VSimpleName: getSelect
p9125
Vinsert
p9126
I42
VSimpleName: getSelectLimit
p9127
tp9128
I4
s(Vinsert
p9129
I42
VSimpleName: token
p9130
Vinsert
p9131
I42
VSimpleName: SQLDefaultExpr
p9132
tp9133
I2
s(g8692
I42
g8693
Vinsert
p9134
I33
VNullLiteral
p9135
tp9136
I3
s(Vinsert
p9137
I42
VSimpleName: rewriteSelect
p9138
Vinsert
p9139
I62
VInstanceofExpression
p9140
tp9141
I1
s(Vinsert
p9142
I42
VSimpleName: setFilters
p9143
Vinsert
p9144
I42
VSimpleName: setMinIdle
p9145
tp9146
I1
s(g1105
I42
g1106
Vinsert
p9147
I40
VQualifiedName: holder.dataSource
p9148
tp9149
I1
s(Vinsert
p9150
I42
VSimpleName: clearProperty
p9151
Vinsert
p9152
I42
VSimpleName: Exception
p9153
tp9154
I1
s(g8956
I42
g8957
Vinsert
p9155
I33
VNullLiteral
p9156
tp9157
I2
s(Vinsert
p9158
I42
VSimpleName: accept
p9159
Vinsert
p9160
I42
VSimpleName: OracleCursorExpr
p9161
tp9162
I1
s(Vinsert
p9163
I42
VSimpleName: startsWith
p9164
Vinsert
p9165
I78
VMarkerAnnotation
p9166
tp9167
I1
s(g2009
I42
g2010
Vinsert
p9168
I26
VImportDeclaration
p9169
tp9170
I1
s(Vinsert
p9171
I42
VSimpleName: token
p9172
Vinsert
p9173
I7
VAssignment: =
p9174
tp9175
I9
s(g8269
I42
g8270
Vinsert
p9176
I83
VModifier: public
p9177
tp9178
I1
s(g1710
I42
g1711
Vinsert
p9179
I83
VModifier: public
p9180
tp9181
I5
s(Vinsert
p9182
I42
VSimpleName: setTableSource
p9183
Vinsert
p9184
I43
VSimpleType: SQLTableSource
p9185
tp9186
I1
s(g5628
I42
g5629
Vinsert
p9187
I42
VSimpleName: put
p9188
tp9189
I2
s(Vinsert
p9190
I42
VSimpleName: setOutputParameters
p9191
Vinsert
p9192
I43
VSimpleType: Object
p9193
tp9194
I1
s(Vinsert
p9195
I42
VSimpleName: createSQLStatementParser
p9196
Vinsert
p9197
I42
VSimpleName: sql
p9198
tp9199
I8
s(g3447
I42
g3448
Vinsert
p9200
I40
VQualifiedName: FileConfigLoader.SYS_PROP_CONFIG_FILE
p9201
tp9202
I1
s(g7091
I42
g7092
Vinsert
p9203
I42
VSimpleName: connection
p9204
tp9205
I2
s(g8752
I42
g8753
Vinsert
p9206
I42
VSimpleName: iter
p9207
tp9208
I2
s(Vinsert
p9209
I42
VSimpleName: put
p9210
Vinsert
p9211
I43
VSimpleType: Exception
p9212
tp9213
I1
s(g196
I42
g197
Vinsert
p9214
I45
VStringLiteral: "\u005ctFROM DMN_MKTG_PLAN_TYPE\u005cn"
p9215
tp9216
I2
s(Vinsert
p9217
I42
VSimpleName: add
p9218
Vinsert
p9219
I42
VSimpleName: parseStaticClause
p9220
tp9221
I1
s(Vinsert
p9222
I42
VSimpleName: hasAfterComment
p9223
Vinsert
p9224
I42
VSimpleName: lineItemCount
p9225
tp9226
I1
s(g3253
I42
g3254
Vinsert
p9227
I43
VSimpleType: MockPreparedStatement
p9228
tp9229
I1
s(Vinsert
p9230
I42
VSimpleName: clone
p9231
Vinsert
p9232
I7
VAssignment: =
p9233
tp9234
I8
s(Vinsert
p9235
I42
VSimpleName: getExecuteCount
p9236
Vinsert
p9237
I45
VStringLiteral: "LoginTimeout"
p9238
tp9239
I1
s(g1963
I42
g1964
Vinsert
p9240
I42
VSimpleName: into
p9241
tp9242
I1
s(Vinsert
p9243
I42
VSimpleName: setTableSource
p9244
Vinsert
p9245
I14
VClassInstanceCreation
p9246
tp9247
I1
s(g1256
I42
g1257
Vinsert
p9248
I42
VSimpleName: setMinConnectionsPerPartition
p9249
tp9250
I1
s(Vinsert
p9251
I42
VSimpleName: eq
p9252
Vinsert
p9253
I42
VSimpleName: Override
p9254
tp9255
I1
s(g8465
I42
g8466
Vinsert
p9256
I33
VNullLiteral
p9257
tp9258
I1
s(Vinsert
p9259
I42
VSimpleName: error
p9260
Vinsert
p9261
I42
VSimpleName: filterClass
p9262
tp9263
I2
s(g3574
I42
g3575
Vinsert
p9264
I59
VVariableDeclarationFragment
p9265
tp9266
I18
s(Vinsert
p9267
I42
VSimpleName: getCompositeType
p9268
Vinsert
p9269
I42
VSimpleName: Object
p9270
tp9271
I1
s(g136
I42
g137
Vinsert
p9272
I42
VSimpleName: objects
p9273
tp9274
I1
s(g6089
I42
g6090
Vinsert
p9275
I42
VSimpleName: getStatement
p9276
tp9277
I1
s(Vinsert
p9278
I42
VSimpleName: createExprParser
p9279
Vinsert
p9280
I45
VStringLiteral: "number(12, 0)"
p9281
tp9282
I2
s(g2364
I42
g2365
Vinsert
p9283
I42
VSimpleName: encryptedPassword
p9284
tp9285
I1
s(Vinsert
p9286
I42
VSimpleName: getDataType
p9287
Vinsert
p9288
I43
VSimpleType: SQLIdentifierExpr
p9289
tp9290
I1
s(g5320
I42
g5321
Vinsert
p9291
I23
VFieldDeclaration
p9292
tp9293
I4
s(Vinsert
p9294
I42
VSimpleName: parseStatementList
p9295
Vinsert
p9296
I42
VSimpleName: PGSQLStatementParser
p9297
tp9298
I9
s(Vinsert
p9299
I42
VSimpleName: expr
p9300
Vinsert
p9301
I42
VSimpleName: subPartitionHash
p9302
tp9303
I2
s(g5216
I42
g5217
Vinsert
p9304
I42
VSimpleName: request
p9305
tp9306
I2
s(Vinsert
p9307
I42
VSimpleName: getTableStat
p9308
Vinsert
p9309
I43
VSimpleType: WallTableStat
p9310
tp9311
I5
s(Vinsert
p9312
I42
VSimpleName: charAt
p9313
Vinsert
p9314
I42
VSimpleName: text
p9315
tp9316
I9
s(Vinsert
p9317
I42
VSimpleName: visit
p9318
Vinsert
p9319
I42
VSimpleName: getUpdate
p9320
tp9321
I1
s(Vinsert
p9322
I42
VSimpleName: append
p9323
Vinsert
p9324
I42
VSimpleName: number
p9325
tp9326
I4
s(Vinsert
p9327
I42
VSimpleName: readFromResource
p9328
Vinsert
p9329
I42
VSimpleName: IOUtils
p9330
tp9331
I1
s(Vinsert
p9332
I42
VSimpleName: putAttribute
p9333
Vinsert
p9334
I42
VSimpleName: x
p9335
tp9336
I8
s(g8306
I42
g8307
Vinsert
p9337
I11
VCastExpression
p9338
tp9339
I3
s(Vinsert
p9340
I42
VSimpleName: setName
p9341
Vinsert
p9342
I42
VSimpleName: SQLConstraintImpl
p9343
tp9344
I1
s(Vinsert
p9345
I42
VSimpleName: equals
p9346
Vinsert
p9347
I42
VSimpleName: rowIndex
p9348
tp9349
I1
s(Vinsert
p9350
I42
VSimpleName: toString
p9351
Vinsert
p9352
I43
VSimpleType: SQLName
p9353
tp9354
I2
s(Vinsert
p9355
I42
VSimpleName: setLeft
p9356
Vinsert
p9357
I42
VSimpleName: nextToken
p9358
tp9359
I2
s(Vinsert
p9360
I42
VSimpleName: printDataSourceData
p9361
Vinsert
p9362
I43
VSimpleType: List
p9363
tp9364
I2
s(g7532
I42
g7533
Vinsert
p9365
I9
VBooleanLiteral: true
p9366
tp9367
I1
s(g1110
I42
g1111
Vinsert
p9368
I45
VStringLiteral: "\u005ctAND c1.partition_date = :partiondate;"
p9369
tp9370
I1
s(g3533
I42
g3534
Vinsert
p9371
I42
VSimpleName: print
p9372
tp9373
I21
s(g8142
I42
g8143
Vinsert
p9374
I59
VVariableDeclarationFragment
p9375
tp9376
I22
s(g5584
I42
g5585
Vinsert
p9377
I27
VInfixExpression: !=
p9378
tp9379
I1
s(Vinsert
p9380
I42
VSimpleName: setProxyFilters
p9381
Vinsert
p9382
I42
VSimpleName: Filter
p9383
tp9384
I1
s(g3793
I42
g3794
Vinsert
p9385
I43
VSimpleType: DruidDataSource
p9386
tp9387
I2
s(g6187
I42
g6188
Vinsert
p9388
I45
VStringLiteral: "\u005ct\u005c"IND_BY_GROUP\u005c", \u005cn"
p9389
tp9390
I1
s(g2145
I42
g2146
Vinsert
p9391
I42
VSimpleName: target
p9392
tp9393
I1
s(g801
I42
g802
Vinsert
p9394
I21
VExpressionStatement
p9395
tp9396
I1
s(Vinsert
p9397
I42
VSimpleName: parseOpen
p9398
Vinsert
p9399
I60
VVariableDeclarationStatement
p9400
tp9401
I1
s(g8863
I42
g8864
Vinsert
p9402
I42
VSimpleName: DruidDataSource
p9403
tp9404
I6
s(Vinsert
p9405
I42
VSimpleName: loadResource
p9406
Vinsert
p9407
I45
VStringLiteral: "META-INF/druid-filter-wall-permit-schema-oracle.txt"
p9408
tp9409
I1
s(Vinsert
p9410
I42
VSimpleName: register
p9411
Vinsert
p9412
I8
VBlock
p9413
tp9414
I1
s(Vinsert
p9415
I42
VSimpleName: booleanValue
p9416
Vinsert
p9417
I42
VSimpleName: value
p9418
tp9419
I2
s(Vinsert
p9420
I42
VSimpleName: name_hash_lower
p9421
Vinsert
p9422
I42
VSimpleName: test_issue_1
p9423
tp9424
I2
s(g4050
I42
g4051
Vinsert
p9425
I42
VSimpleName: ucase
p9426
tp9427
I2
s(Vinsert
p9428
I42
VSimpleName: checkParameterize
p9429
Vinsert
p9430
I42
VSimpleName: visit
p9431
tp9432
I9
s(Vinsert
p9433
I42
VSimpleName: scheduleAtFixedRate
p9434
Vinsert
p9435
I42
VSimpleName: destroySchedulerFuture
p9436
tp9437
I1
s(Vinsert
p9438
I42
VSimpleName: token
p9439
Vinsert
p9440
I42
VSimpleName: parseColumn
p9441
tp9442
I1
s(g6771
I42
g6772
Vinsert
p9443
I21
VExpressionStatement
p9444
tp9445
I2
s(Vinsert
p9446
I42
VSimpleName: getKeyword
p9447
Vinsert
p9448
I42
VSimpleName: Token
p9449
tp9450
I2
s(Vinsert
p9451
I42
VSimpleName: debug
p9452
Vinsert
p9453
I42
VSimpleName: isDebugEnabled
p9454
tp9455
I1
s(Vinsert
p9456
I42
VSimpleName: parsePrimaryKey
p9457
Vinsert
p9458
I42
VSimpleName: SQLPrimaryKey
p9459
tp9460
I1
s(Vinsert
p9461
I42
VSimpleName: setParent
p9462
Vinsert
p9463
I38
VPrefixExpression: !
p9464
tp9465
I1
s(g9307
I42
g9308
Vinsert
p9466
I42
VSimpleName: String
p9467
tp9468
I1
s(g4615
I42
g4616
Vinsert
p9469
I42
VSimpleName: lexer
p9470
tp9471
I2
s(g7280
I42
g7281
Vinsert
p9472
I42
VSimpleName: reader
p9473
tp9474
I1
s(Vinsert
p9475
I42
VSimpleName: toSQLString
p9476
Vinsert
p9477
I45
VStringLiteral: "\u005ctMAXEXTENTS 2147483645\u005cn"
p9478
tp9479
I2
s(g1705
I42
g1706
Vinsert
p9480
I8
VBlock
p9481
tp9482
I4
s(Vinsert
p9483
I42
VSimpleName: prepareStatement
p9484
Vinsert
p9485
I42
VSimpleName: Properties
p9486
tp9487
I1
s(Vinsert
p9488
I42
VSimpleName: getConnection
p9489
Vinsert
p9490
I34
VNumberLiteral: 10
p9491
tp9492
I2
s(Vinsert
p9493
I42
VSimpleName: assertTrue
p9494
Vinsert
p9495
I42
VSimpleName: println
p9496
tp9497
I1
s(Vinsert
p9498
I42
VSimpleName: nextToken
p9499
Vinsert
p9500
I42
VSimpleName: setHost
p9501
tp9502
I1
s(Vinsert
p9503
I42
VSimpleName: getWallStatValue
p9504
Vinsert
p9505
I21
VExpressionStatement
p9506
tp9507
I1
s(Vinsert
p9508
I42
VSimpleName: close
p9509
Vinsert
p9510
I45
VStringLiteral: "oracle"
p9511
tp9512
I1
s(g542
I42
g543
Vinsert
p9513
I32
VMethodInvocation
p9514
tp9515
I30
s(g5389
I42
g5390
Vinsert
p9516
I42
VSimpleName: dataSource
p9517
tp9518
I1
s(Vinsert
p9519
I42
VSimpleName: isReadOnly
p9520
Vinsert
p9521
I42
VSimpleName: connection
p9522
tp9523
I1
s(Vinsert
p9524
I42
VSimpleName: formatOdps
p9525
Vinsert
p9526
I45
VStringLiteral: "\u005cton UT.ad_session = CLK.ad_session\u005cn"
p9527
tp9528
I1
s(Vinsert
p9529
I42
VSimpleName: setCommentAllow
p9530
Vinsert
p9531
I43
VSimpleType: MySqlWallProvider
p9532
tp9533
I1
s(Vinsert
p9534
I42
VSimpleName: incrementInUseCount
p9535
Vinsert
p9536
I44
VSingleVariableDeclaration
p9537
tp9538
I1
s(Vinsert
p9539
I42
VSimpleName: getSelect
p9540
Vinsert
p9541
I43
VSimpleType: SQLSubqueryTableSource
p9542
tp9543
I11
s(Vinsert
p9544
I42
VSimpleName: assertEquals
p9545
Vinsert
p9546
I45
VStringLiteral: "SELECT cq.uuid FROM ce_queue cq "
p9547
tp9548
I1
s(Vinsert
p9549
I42
VSimpleName: assertEquals
p9550
Vinsert
p9551
I45
VStringLiteral: "\u005cn\u005ctADD PARTITION (PARTITION p3 VALUES LESS THAN (2000))"
p9552
tp9553
I1
s(Vinsert
p9554
I42
VSimpleName: incrementAndGet
p9555
Vinsert
p9556
I42
VSimpleName: getOSWindows8Count
p9557
tp9558
I1
s(Vinsert
p9559
I42
VSimpleName: setMetaData
p9560
Vinsert
p9561
I60
VVariableDeclarationStatement
p9562
tp9563
I1
s(Vinsert
p9564
I42
VSimpleName: visit
p9565
Vinsert
p9566
I40
VQualifiedName: com.alibaba.druid.sql.ast.expr.SQLBinaryExpr
p9567
tp9568
I2
s(Vinsert
p9569
I42
VSimpleName: handleException
p9570
Vinsert
p9571
I8
VBlock
p9572
tp9573
I2
s(g6220
I42
g6221
Vinsert
p9574
I45
VStringLiteral: "\u005cnSTORAGE (INITIAL 65536 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)"
p9575
tp9576
I1
s(g2538
I42
g2539
Vinsert
p9577
I42
VSimpleName: preparedStatement_executeQuery
p9578
tp9579
I1
s(g2454
I42
g2455
Vinsert
p9580
I42
VSimpleName: SQLPropertyExpr
p9581
tp9582
I5
s(g1344
I42
g1345
Vinsert
p9583
I34
VNumberLiteral: 1
p9584
tp9585
I1
s(g723
I42
g724
Vinsert
p9586
I57
VTypeLiteral
p9587
tp9588
I2
s(g6167
I42
g6168
Vinsert
p9589
I41
VReturnStatement
p9590
tp9591
I1
s(g4859
I42
g4860
Vinsert
p9592
I52
VThisExpression
p9593
tp9594
I1
s(Vinsert
p9595
I42
VSimpleName: restartDataSource
p9596
Vinsert
p9597
I52
VThisExpression
p9598
tp9599
I2
s(g5554
I42
g5555
Vinsert
p9600
I42
VSimpleName: is
p9601
tp9602
I1
s(Vinsert
p9603
I42
VSimpleName: getEntries
p9604
Vinsert
p9605
I42
VSimpleName: println
p9606
tp9607
I1
s(Vinsert
p9608
I42
VSimpleName: getInstance
p9609
Vinsert
p9610
I14
VClassInstanceCreation
p9611
tp9612
I1
s(Vinsert
p9613
I42
VSimpleName: parseStatementList
p9614
Vinsert
p9615
I42
VSimpleName: MySqlShowGrantsStatement
p9616
tp9617
I2
s(Vinsert
p9618
I42
VSimpleName: parseStatementList
p9619
Vinsert
p9620
I43
VSimpleType: MySqlStatementParser
p9621
tp9622
I151
s(g5734
I42
g5735
Vinsert
p9623
I43
VSimpleType: PreparedStatement
p9624
tp9625
I2
s(g7594
I42
g7595
Vinsert
p9626
I42
VSimpleName: ctx
p9627
tp9628
I1
s(Vinsert
p9629
I42
VSimpleName: form
p9630
Vinsert
p9631
I42
VSimpleName: name
p9632
tp9633
I9
s(Vinsert
p9634
I42
VSimpleName: setWhere
p9635
Vinsert
p9636
I42
VSimpleName: condition
p9637
tp9638
I1
s(Vinsert
p9639
I42
VSimpleName: toSQLString
p9640
Vinsert
p9641
I45
VStringLiteral: "\u005ctEND IF;\u005cn"
p9642
tp9643
I3
s(g6084
I42
g6085
Vinsert
p9644
I42
VSimpleName: WebAppStatUtils
p9645
tp9646
I1
s(Vinsert
p9647
I42
VSimpleName: token
p9648
Vinsert
p9649
I31
VMethodDeclaration
p9650
tp9651
I6
s(Vinsert
p9652
I42
VSimpleName: addInitParameter
p9653
Vinsert
p9654
I42
VSimpleName: registrationBean
p9655
tp9656
I2
s(Vinsert
p9657
I42
VSimpleName: println
p9658
Vinsert
p9659
I42
VSimpleName: file
p9660
tp9661
I1
s(Vinsert
p9662
I42
VSimpleName: getLabel
p9663
Vinsert
p9664
I39
VPrimitiveType: boolean
p9665
tp9666
I1
s(g7002
I42
g7003
Vinsert
p9667
I42
VSimpleName: createTableScript
p9668
tp9669
I2
s(Vinsert
p9670
I42
VSimpleName: assertEquals
p9671
Vinsert
p9672
I34
VNumberLiteral: 0
p9673
tp9674
I161
s(g2243
I42
g2244
Vinsert
p9675
I42
VSimpleName: setUseGloalDataSourceStat
p9676
tp9677
I1
s(Vinsert
p9678
I42
VSimpleName: prepareStatement
p9679
Vinsert
p9680
I45
VStringLiteral: "select 2"
p9681
tp9682
I1
s(Vinsert
p9683
I42
VSimpleName: assertNull
p9684
Vinsert
p9685
I42
VSimpleName: select
p9686
tp9687
I2
s(Vinsert
p9688
I42
VSimpleName: getConfig
p9689
Vinsert
p9690
I42
VSimpleName: SQLServerWallProvider
p9691
tp9692
I7
s(g5315
I42
g5316
Vinsert
p9693
I42
VSimpleName: target
p9694
tp9695
I2
s(Vinsert
p9696
I42
VSimpleName: openConnection
p9697
Vinsert
p9698
I43
VSimpleType: JarURLConnection
p9699
tp9700
I2
s(g3452
I42
g3453
Vinsert
p9701
I40
VQualifiedName: org.apache.tomcat.jdbc.pool.DataSource
p9702
tp9703
I2
s(Vinsert
p9704
I42
VSimpleName: getTableCellRendererComponent
p9705
Vinsert
p9706
I42
VSimpleName: table
p9707
tp9708
I1
s(Vinsert
p9709
I42
VSimpleName: getFactionalSecondsPrecision
p9710
Vinsert
p9711
I8
VBlock
p9712
tp9713
I1
s(Vinsert
p9714
I42
VSimpleName: assertEquals
p9715
Vinsert
p9716
I45
VStringLiteral: "analyze table t partition(pt='1') compute statistics"
p9717
tp9718
I1
s(g2829
I42
g2830
Vinsert
p9719
I31
VMethodDeclaration
p9720
tp9721
I1
s(Vinsert
p9722
I42
VSimpleName: getLeft
p9723
Vinsert
p9724
I60
VVariableDeclarationStatement
p9725
tp9726
I9
s(Vinsert
p9727
I42
VSimpleName: setExecuteCount
p9728
Vinsert
p9729
I32
VMethodInvocation
p9730
tp9731
I2
s(Vinsert
p9732
I42
VSimpleName: isEnable
p9733
Vinsert
p9734
I42
VSimpleName: isSlaveEnable
p9735
tp9736
I1
s(g419
I42
g420
Vinsert
p9737
I42
VSimpleName: username
p9738
tp9739
I1
s(g6655
I42
g6656
Vinsert
p9740
I45
VStringLiteral: "connection not init"
p9741
tp9742
I1
s(Vinsert
p9743
I42
VSimpleName: name
p9744
Vinsert
p9745
I42
VSimpleName: setName
p9746
tp9747
I4
s(Vinsert
p9748
I42
VSimpleName: getRowCount
p9749
Vinsert
p9750
I42
VSimpleName: accept
p9751
tp9752
I1
s(Vinsert
p9753
I42
VSimpleName: setValues
p9754
Vinsert
p9755
I42
VSimpleName: subPartition
p9756
tp9757
I1
s(Vinsert
p9758
I42
VSimpleName: setParent
p9759
Vinsert
p9760
I42
VSimpleName: setExternalRejectLimit
p9761
tp9762
I1
s(Vinsert
p9763
I42
VSimpleName: parseStatementList
p9764
Vinsert
p9765
I42
VSimpleName: OdpsStatementParser
p9766
tp9767
I26
s(Vinsert
p9768
I42
VSimpleName: getName
p9769
Vinsert
p9770
I42
VSimpleName: endVisit
p9771
tp9772
I1
s(Vinsert
p9773
I42
VSimpleName: setTableName
p9774
Vinsert
p9775
I14
VClassInstanceCreation
p9776
tp9777
I1
s(Vinsert
p9778
I42
VSimpleName: setIndexType
p9779
Vinsert
p9780
I42
VSimpleName: x
p9781
tp9782
I3
s(g2281
I42
g2282
Vinsert
p9783
I44
VSingleVariableDeclaration
p9784
tp9785
I1
s(Vinsert
p9786
I42
VSimpleName: setName
p9787
Vinsert
p9788
I42
VSimpleName: SQLDeclareItem
p9789
tp9790
I1
s(Vinsert
p9791
I42
VSimpleName: put
p9792
Vinsert
p9793
I42
VSimpleName: cache
p9794
tp9795
I2
s(Vinsert
p9796
I42
VSimpleName: nextToken
p9797
Vinsert
p9798
I42
VSimpleName: ParserException
p9799
tp9800
I3
s(g9475
I42
g9476
Vinsert
p9801
I45
VStringLiteral: "\u005ctINITIAL 81920\u005cn"
p9802
tp9803
I2
s(g4931
I42
g4932
Vinsert
p9804
I42
VSimpleName: print
p9805
tp9806
I3
s(g4602
I42
g4603
Vinsert
p9807
I40
VQualifiedName: SQLBinaryOperator.Assignment
p9808
tp9809
I1
s(g5839
I42
g5840
Vinsert
p9810
I42
VSimpleName: setDbType
p9811
tp9812
I1
s(g8282
I42
g8283
Vinsert
p9813
I21
VExpressionStatement
p9814
tp9815
I1
s(Vinsert
p9816
I42
VSimpleName: assertTrue
p9817
Vinsert
p9818
I42
VSimpleName: MySqlWallTest11
p9819
tp9820
I1
s(g4170
I42
g4171
Vinsert
p9821
I42
VSimpleName: SQLAlterTableCoalescePartition
p9822
tp9823
I2
s(g6655
I42
g6656
Vinsert
p9824
I43
VSimpleType: SQLException
p9825
tp9826
I1
s(Vinsert
p9827
I42
VSimpleName: getDenseRank
p9828
Vinsert
p9829
I31
VMethodDeclaration
p9830
tp9831
I1
s(g7206
I42
g7207
Vinsert
p9832
I42
VSimpleName: addUrlMappings
p9833
tp9834
I1
s(g8901
I42
g8902
Vinsert
p9835
I42
VSimpleName: test_ascii
p9836
tp9837
I3
s(Vinsert
p9838
I42
VSimpleName: setConstraint
p9839
Vinsert
p9840
I25
VIfStatement
p9841
tp9842
I1
s(Vinsert
p9843
I42
VSimpleName: set
p9844
Vinsert
p9845
I45
VStringLiteral: "hbase.zookeeper.quorum"
p9846
tp9847
I1
s(g8113
I42
g8114
Vinsert
p9848
I42
VSimpleName: getSimleName
p9849
tp9850
I1
s(g4745
I42
g4746
Vinsert
p9851
I42
VSimpleName: pooledStmt2
p9852
tp9853
I1
s(Vinsert
p9854
I42
VSimpleName: getSortedBy
p9855
Vinsert
p9856
I45
VStringLiteral: ","
p9857
tp9858
I1
s(g5470
I42
g5471
Vinsert
p9859
I42
VSimpleName: equalsIgnoreCase
p9860
tp9861
I1
s(Vinsert
p9862
I42
VSimpleName: setParent
p9863
Vinsert
p9864
I42
VSimpleName: setDefiner
p9865
tp9866
I2
s(g7121
I42
g7122
Vinsert
p9867
I43
VSimpleType: Object
p9868
tp9869
I9
s(g7440
I42
g7441
Vinsert
p9870
I42
VSimpleName: queryBlock
p9871
tp9872
I2
s(Vinsert
p9873
I42
VSimpleName: getObject
p9874
Vinsert
p9875
I42
VSimpleName: ResultSet
p9876
tp9877
I2
s(Vinsert
p9878
I42
VSimpleName: getOperator
p9879
Vinsert
p9880
I42
VSimpleName: SQLOrderingSpecification
p9881
tp9882
I1
s(Vinsert
p9883
I42
VSimpleName: setProcedureName
p9884
Vinsert
p9885
I7
VAssignment: =
p9886
tp9887
I2
s(g5148
I42
g5149
Vinsert
p9888
I44
VSingleVariableDeclaration
p9889
tp9890
I1
s(Vinsert
p9891
I42
VSimpleName: add
p9892
Vinsert
p9893
I27
VInfixExpression: <
p9894
tp9895
I1
s(g7797
I42
g7798
Vinsert
p9896
I25
VIfStatement
p9897
tp9898
I1
s(Vinsert
p9899
I42
VSimpleName: parseOptions
p9900
Vinsert
p9901
I42
VSimpleName: cmdArray
p9902
tp9903
I2
s(Vinsert
p9904
I42
VSimpleName: hashCode
p9905
Vinsert
p9906
I42
VSimpleName: offset
p9907
tp9908
I2
s(Vinsert
p9909
I42
VSimpleName: size
p9910
Vinsert
p9911
I42
VSimpleName: SQLStatement
p9912
tp9913
I59
s(Vinsert
p9914
I42
VSimpleName: error
p9915
Vinsert
p9916
I27
VInfixExpression: *
p9917
tp9918
I1
s(Vinsert
p9919
I42
VSimpleName: select
p9920
Vinsert
p9921
I42
VSimpleName: exprParser
p9922
tp9923
I2
s(Vinsert
p9924
I42
VSimpleName: setTraceEnable
p9925
Vinsert
p9926
I32
VMethodInvocation
p9927
tp9928
I5
s(Vinsert
p9929
I42
VSimpleName: token
p9930
Vinsert
p9931
I43
VSimpleType: SQLParseException
p9932
tp9933
I2
s(Vinsert
p9934
I42
VSimpleName: getName
p9935
Vinsert
p9936
I43
VSimpleType: SQLColumnDefinition
p9937
tp9938
I1
s(Vinsert
p9939
I42
VSimpleName: isAbandonded
p9940
Vinsert
p9941
I25
VIfStatement
p9942
tp9943
I1
s(Vinsert
p9944
I42
VSimpleName: toSQLString
p9945
Vinsert
p9946
I45
VStringLiteral: "CREATE VIEW emp_sal (\u005cn"
p9947
tp9948
I1
s(Vinsert
p9949
I42
VSimpleName: getBlock
p9950
Vinsert
p9951
I11
VCastExpression
p9952
tp9953
I2
s(Vinsert
p9954
I42
VSimpleName: setInvokeCount
p9955
Vinsert
p9956
I32
VMethodInvocation
p9957
tp9958
I1
s(Vinsert
p9959
I42
VSimpleName: create
p9960
Vinsert
p9961
I83
VModifier: public
p9962
tp9963
I2
s(Vinsert
p9964
I42
VSimpleName: getExpr
p9965
Vinsert
p9966
I42
VSimpleName: tableSource
p9967
tp9968
I7
s(Vinsert
p9969
I42
VSimpleName: getParameters
p9970
Vinsert
p9971
I42
VSimpleName: blockStatement
p9972
tp9973
I2
s(g1425
I42
g1426
Vinsert
p9974
I42
VSimpleName: tenantColumn
p9975
tp9976
I2
s(Vinsert
p9977
I42
VSimpleName: getProxyDataSources
p9978
Vinsert
p9979
I40
VQualifiedName: com.alibaba.druid.stat.JdbcStatManager
p9980
tp9981
I12
s(Vinsert
p9982
I42
VSimpleName: size
p9983
Vinsert
p9984
I45
VStringLiteral: "END;"
p9985
tp9986
I5
s(Vinsert
p9987
I42
VSimpleName: expr
p9988
Vinsert
p9989
I42
VSimpleName: SQLNotExpr
p9990
tp9991
I1
s(Vinsert
p9992
I42
VSimpleName: token
p9993
Vinsert
p9994
I42
VSimpleName: CHARACTER
p9995
tp9996
I1
s(g1710
I42
g1711
Vinsert
p9997
I42
VSimpleName: getObject
p9998
tp9999
I2
s(g9222
I42
g9223
Vinsert
p10000
I32
VMethodInvocation
p10001
tp10002
I6
s(g791
I42
g792
Vinsert
p10003
I59
VVariableDeclarationFragment
p10004
tp10005
I12
s(Vinsert
p10006
I42
VSimpleName: getAttributes
p10007
Vinsert
p10008
I43
VSimpleType: SQLNullExpr
p10009
tp10010
I1
s(Vinsert
p10011
I42
VSimpleName: getHTable
p10012
Vinsert
p10013
I32
VMethodInvocation
p10014
tp10015
I2
s(Vinsert
p10016
I42
VSimpleName: getValue
p10017
Vinsert
p10018
I59
VVariableDeclarationFragment
p10019
tp10020
I4
s(Vinsert
p10021
I42
VSimpleName: setHandlers
p10022
Vinsert
p10023
I14
VClassInstanceCreation
p10024
tp10025
I1
s(Vinsert
p10026
I42
VSimpleName: assertEquals
p10027
Vinsert
p10028
I45
VStringLiteral: "insert overwrite table ttt partition (ds='20150710',hh='07') select tt_split(content, 60) as (f0, f1, f2, f3) from xxx;"
p10029
tp10030
I1
s(Vinsert
p10031
I42
VSimpleName: getConnection
p10032
Vinsert
p10033
I11
VCastExpression
p10034
tp10035
I2
s(g4849
I42
g4850
Vinsert
p10036
I4
VArrayInitializer
p10037
tp10038
I1
s(Vinsert
p10039
I42
VSimpleName: getInstance
p10040
Vinsert
p10041
I42
VSimpleName: JdbcTraceManager
p10042
tp10043
I1
s(Vinsert
p10044
I42
VSimpleName: getColumns
p10045
Vinsert
p10046
I83
VModifier: public
p10047
tp10048
I2
s(g4926
I42
g4927
Vinsert
p10049
I42
VSimpleName: ConnectionEventListener
p10050
tp10051
I1
s(g5297
I42
g5298
Vinsert
p10052
I41
VReturnStatement
p10053
tp10054
I2
s(g695
I42
g696
Vinsert
p10055
I74
VParameterizedType: HashMap<String,Token>
p10056
tp10057
I3
s(g612
I42
g613
Vinsert
p10058
I39
VPrimitiveType: long
p10059
tp10060
I1
s(Vinsert
p10061
I42
VSimpleName: setFilters
p10062
Vinsert
p10063
I45
VStringLiteral: "spring.datasource.druid.filters"
p10064
tp10065
I1
s(Vinsert
p10066
I42
VSimpleName: getOwnernName
p10067
Vinsert
p10068
I33
VNullLiteral
p10069
tp10070
I8
s(g7898
I42
g7899
Vinsert
p10071
I42
VSimpleName: test_0
p10072
tp10073
I1
s(Vinsert
p10074
I42
VSimpleName: moveToInsertRow
p10075
Vinsert
p10076
I42
VSimpleName: stmt
p10077
tp10078
I1
s(g3569
I42
g3570
Vinsert
p10079
I25
VIfStatement
p10080
tp10081
I1
s(Vinsert
p10082
I42
VSimpleName: isValidateOracle
p10083
Vinsert
p10084
I42
VSimpleName: assertFalse
p10085
tp10086
I1
s(Vinsert
p10087
I42
VSimpleName: resetStat
p10088
Vinsert
p10089
I52
VThisExpression
p10090
tp10091
I2
s(g1637
I42
g1638
Vinsert
p10092
I43
VSimpleType: SQLNotExpr
p10093
tp10094
I2
s(Vinsert
p10095
I42
VSimpleName: put
p10096
Vinsert
p10097
I45
VStringLiteral: "violationCount"
p10098
tp10099
I1
s(Vinsert
p10100
I42
VSimpleName: getOutputStream
p10101
Vinsert
p10102
I32
VMethodInvocation
p10103
tp10104
I2
s(Vinsert
p10105
I42
VSimpleName: getExpr
p10106
Vinsert
p10107
I43
VSimpleType: SQLIdentifierExpr
p10108
tp10109
I2
s(g1780
I42
g1781
Vinsert
p10110
I43
VSimpleType: DruidDataSource
p10111
tp10112
I4
s(g9251
I42
g9252
Vinsert
p10113
I39
VPrimitiveType: boolean
p10114
tp10115
I1
s(Vinsert
p10116
I42
VSimpleName: getTransactionRegistry
p10117
Vinsert
p10118
I42
VSimpleName: xaConnectionFactory
p10119
tp10120
I2
s(g9753
I42
g9754
Vinsert
p10121
I52
VThisExpression
p10122
tp10123
I1
s(Vinsert
p10124
I42
VSimpleName: add
p10125
Vinsert
p10126
I43
VSimpleType: DruidPooledResultSet
p10127
tp10128
I2
s(g9939
I42
g9940
Vinsert
p10129
I8
VBlock
p10130
tp10131
I1
s(g341
I42
g342
Vinsert
p10132
I8
VBlock
p10133
tp10134
I11
s(Vinsert
p10135
I42
VSimpleName: token
p10136
Vinsert
p10137
I45
VStringLiteral: "READ"
p10138
tp10139
I1
s(Vinsert
p10140
I42
VSimpleName: accept
p10141
Vinsert
p10142
I42
VSimpleName: comment
p10143
tp10144
I2
s(g8355
I42
g8356
Vinsert
p10145
I42
VSimpleName: MTable
p10146
tp10147
I1
s(g6699
I42
g6700
Vinsert
p10148
I43
VSimpleType: WallConfig
p10149
tp10150
I4
s(g1410
I42
g1411
Vinsert
p10151
I21
VExpressionStatement
p10152
tp10153
I2
s(Vinsert
p10154
I42
VSimpleName: visit
p10155
Vinsert
p10156
I42
VSimpleName: mysqlVisitor
p10157
tp10158
I2
s(Vinsert
p10159
I42
VSimpleName: getDataSourceStat
p10160
Vinsert
p10161
I34
VNumberLiteral: 1
p10162
tp10163
I1
s(Vinsert
p10164
I42
VSimpleName: assertTrue
p10165
Vinsert
p10166
I42
VSimpleName: MySqlWallTest20
p10167
tp10168
I1
s(Vinsert
p10169
I42
VSimpleName: getName
p10170
Vinsert
p10171
I42
VSimpleName: MySqlPartitioningDef
p10172
tp10173
I1
s(Vinsert
p10174
I42
VSimpleName: isTableCheck
p10175
Vinsert
p10176
I38
VPrefixExpression: !
p10177
tp10178
I1
s(g3636
I42
g3637
Vinsert
p10179
I42
VSimpleName: println
p10180
tp10181
I70
s(Vinsert
p10182
I42
VSimpleName: getNumber
p10183
Vinsert
p10184
I43
VSimpleType: SQLPrintableVisitor
p10185
tp10186
I1
s(g8564
I42
g8565
Vinsert
p10187
I59
VVariableDeclarationFragment
p10188
tp10189
I6
s(Vinsert
p10190
I42
VSimpleName: entrySet
p10191
Vinsert
p10192
I42
VSimpleName: getDataSourceStat
p10193
tp10194
I1
s(Vinsert
p10195
I42
VSimpleName: toSQLString
p10196
Vinsert
p10197
I45
VStringLiteral: "\u005cn\u005ctpromo_begin_date DATE,"
p10198
tp10199
I4
s(g9312
I42
g9313
Vinsert
p10200
I42
VSimpleName: i
p10201
tp10202
I19
s(g627
I42
g628
Vinsert
p10203
I42
VSimpleName: expr
p10204
tp10205
I3
s(g7697
I42
g7698
Vinsert
p10206
I45
VStringLiteral: "\u005ct\u005ctFROM graph g\u005cn"
p10207
tp10208
I1
s(Vinsert
p10209
I42
VSimpleName: size
p10210
Vinsert
p10211
I42
VSimpleName: rtrim
p10212
tp10213
I2
s(Vinsert
p10214
I42
VSimpleName: length
p10215
Vinsert
p10216
I52
VThisExpression
p10217
tp10218
I4
s(g3949
I42
g3950
Vinsert
p10219
I43
VSimpleType: SQLCharExpr
p10220
tp10221
I4
s(Vinsert
p10222
I42
VSimpleName: warn
p10223
Vinsert
p10224
I33
VNullLiteral
p10225
tp10226
I2
s(g251
I42
g252
Vinsert
p10227
I42
VSimpleName: obj
p10228
tp10229
I1
s(g3649
I42
g3650
Vinsert
p10230
I60
VVariableDeclarationStatement
p10231
tp10232
I13
s(g4227
I42
g4228
Vinsert
p10233
I42
VSimpleName: number
p10234
tp10235
I1
s(g8627
I42
g8628
Vinsert
p10236
I42
VSimpleName: SQLExprParser
p10237
tp10238
I1
s(Vinsert
p10239
I42
VSimpleName: get
p10240
Vinsert
p10241
I42
VSimpleName: fillCount
p10242
tp10243
I1
s(g4334
I42
g4335
Vinsert
p10244
I34
VNumberLiteral: 1
p10245
tp10246
I1
s(Vinsert
p10247
I42
VSimpleName: getDbType
p10248
Vinsert
p10249
I45
VStringLiteral: "jdbc:log4jdbc:mysql://localhost:8066/test"
p10250
tp10251
I2
s(Vinsert
p10252
I42
VSimpleName: size
p10253
Vinsert
p10254
I43
VSimpleType: SQLExpr
p10255
tp10256
I4
s(Vinsert
p10257
I42
VSimpleName: executeQuery
p10258
Vinsert
p10259
I43
VSimpleType: PreparedStatement
p10260
tp10261
I3
s(Vinsert
p10262
I42
VSimpleName: setIfNotExiists
p10263
Vinsert
p10264
I32
VMethodInvocation
p10265
tp10266
I4
s(Vinsert
p10267
I42
VSimpleName: getRawUrl
p10268
Vinsert
p10269
I22
VFieldAccess
p10270
tp10271
I2
s(g6622
I42
g6623
Vinsert
p10272
I43
VSimpleType: SQLConstaint
p10273
tp10274
I1
s(Vinsert
p10275
I42
VSimpleName: getWithQuery
p10276
Vinsert
p10277
I24
VForStatement
p10278
tp10279
I1
s(g7356
I42
g7357
Vinsert
p10280
I42
VSimpleName: transactionInfo
p10281
tp10282
I1
s(g841
I42
g842
Vinsert
p10283
I13
VCharacterLiteral: '-'
p10284
tp10285
I1
s(g4040
I42
g4041
Vinsert
p10286
I40
VQualifiedName: parentCtx.object
p10287
tp10288
I1
s(g101
I42
g102
Vinsert
p10289
I40
VQualifiedName: ResultSet.TYPE_SCROLL_INSENSITIVE
p10290
tp10291
I1
s(Vinsert
p10292
I42
VSimpleName: getProperty
p10293
Vinsert
p10294
I25
VIfStatement
p10295
tp10296
I2
s(Vinsert
p10297
I42
VSimpleName: toStatementList
p10298
Vinsert
p10299
I45
VStringLiteral: "create definer = 'ivan'@'%' event testevent1 on schedule every 1 hour ends '2016-11-05 23:59:00'\u005cn"
p10300
tp10301
I1
s(g2359
I42
g2360
Vinsert
p10302
I43
VSimpleType: JMException
p10303
tp10304
I1
s(Vinsert
p10305
I42
VSimpleName: print
p10306
Vinsert
p10307
I43
VSimpleType: SQLNullExpr
p10308
tp10309
I1
s(Vinsert
p10310
I42
VSimpleName: equals
p10311
Vinsert
p10312
I42
VSimpleName: paramExpr
p10313
tp10314
I2
s(Vinsert
p10315
I42
VSimpleName: assertEquals
p10316
Vinsert
p10317
I42
VSimpleName: EvalMethodTest_Elt_1
p10318
tp10319
I1
s(Vinsert
p10320
I42
VSimpleName: loadResource
p10321
Vinsert
p10322
I39
VPrimitiveType: void
p10323
tp10324
I2
s(Vinsert
p10325
I42
VSimpleName: token
p10326
Vinsert
p10327
I42
VSimpleName: primary
p10328
tp10329
I1
s(g4472
I42
g4473
Vinsert
p10330
I43
VSimpleType: Method
p10331
tp10332
I1
s(Vinsert
p10333
I42
VSimpleName: put
p10334
Vinsert
p10335
I43
VSimpleType: WallCheckResult
p10336
tp10337
I2
s(Vinsert
p10338
I42
VSimpleName: identifierEquals
p10339
Vinsert
p10340
I40
VQualifiedName: SQLIntervalUnit.YEAR
p10341
tp10342
I1
s(g4765
I42
g4766
Vinsert
p10343
I24
VForStatement
p10344
tp10345
I1
s(g4070
I42
g4071
Vinsert
p10346
I45
VStringLiteral: "LastError"
p10347
tp10348
I2
s(g5262
I42
g5263
Vinsert
p10349
I21
VExpressionStatement
p10350
tp10351
I1
s(g1675
I42
g1676
Vinsert
p10352
I38
VPrefixExpression: ++
p10353
tp10354
I1
s(Vinsert
p10355
I42
VSimpleName: getConnection
p10356
Vinsert
p10357
I43
VSimpleType: Exception
p10358
tp10359
I23
s(Vinsert
p10360
I42
VSimpleName: println
p10361
Vinsert
p10362
I42
VSimpleName: sql
p10363
tp10364
I9
s(g4615
I42
g4616
Vinsert
p10365
I42
VSimpleName: nextToken
p10366
tp10367
I1
s(Vinsert
p10368
I42
VSimpleName: append
p10369
Vinsert
p10370
I43
VSimpleType: StackTraceElement
p10371
tp10372
I1
s(g6079
I42
g6080
Vinsert
p10373
I45
VStringLiteral: "\u005cn\u005ct\u005ctSELECT tbek_code"
p10374
tp10375
I1
s(Vinsert
p10376
I42
VSimpleName: get
p10377
Vinsert
p10378
I45
VStringLiteral: "values"
p10379
tp10380
I1
s(Vinsert
p10381
I42
VSimpleName: containsColumn
p10382
Vinsert
p10383
I45
VStringLiteral: "SELLER_SEQ"
p10384
tp10385
I1
s(g3017
I42
g3018
Vinsert
p10386
I42
VSimpleName: instance
p10387
tp10388
I1
s(g5719
I42
g5720
Vinsert
p10389
I42
VSimpleName: parameters
p10390
tp10391
I1
s(g8617
I42
g8618
Vinsert
p10392
I42
VSimpleName: GreaterThanOrEqual
p10393
tp10394
I1
s(g6917
I42
g6918
Vinsert
p10395
I57
VTypeLiteral
p10396
tp10397
I2
s(Vinsert
p10398
I42
VSimpleName: getLimit
p10399
Vinsert
p10400
I42
VSimpleName: maxLimit
p10401
tp10402
I1
s(g9299
I42
g9300
Vinsert
p10403
I22
VFieldAccess
p10404
tp10405
I8
s(g10105
I42
g10106
Vinsert
p10406
I42
VSimpleName: getFrom
p10407
tp10408
I2
s(g2398
I42
g2399
Vinsert
p10409
I42
VSimpleName: makeInsertToTableSql
p10410
tp10411
I1
s(Vinsert
p10412
I42
VSimpleName: getReferencedColumns
p10413
Vinsert
p10414
I45
VStringLiteral: " DROP DEFAULT"
p10415
tp10416
I1
s(Vinsert
p10417
I42
VSimpleName: token
p10418
Vinsert
p10419
I42
VSimpleName: parseUpsert
p10420
tp10421
I1
s(Vinsert
p10422
I42
VSimpleName: next
p10423
Vinsert
p10424
I39
VPrimitiveType: void
p10425
tp10426
I2
s(g4404
I42
g4405
Vinsert
p10427
I42
VSimpleName: token
p10428
tp10429
I1
s(g627
I42
g628
Vinsert
p10430
I42
VSimpleName: startsWith
p10431
tp10432
I1
s(Vinsert
p10433
I42
VSimpleName: readLock
p10434
Vinsert
p10435
I27
VInfixExpression: !=
p10436
tp10437
I1
s(Vinsert
p10438
I42
VSimpleName: toOdpsString
p10439
Vinsert
p10440
I42
VSimpleName: match
p10441
tp10442
I1
s(g3083
I42
g3084
Vinsert
p10443
I32
VMethodInvocation
p10444
tp10445
I12
s(g9977
I42
g9978
Vinsert
p10446
I39
VPrimitiveType: void
p10447
tp10448
I12
s(Vinsert
p10449
I42
VSimpleName: equals
p10450
Vinsert
p10451
I42
VSimpleName: visit
p10452
tp10453
I5
s(Vinsert
p10454
I42
VSimpleName: getViolations
p10455
Vinsert
p10456
I43
VSimpleType: String
p10457
tp10458
I1
s(Vinsert
p10459
I42
VSimpleName: getFrom
p10460
Vinsert
p10461
I25
VIfStatement
p10462
tp10463
I3
s(g10454
I42
g10455
Vinsert
p10464
I42
VSimpleName: checkResult
p10465
tp10466
I1
s(Vinsert
p10467
I42
VSimpleName: getInstance
p10468
Vinsert
p10469
I43
VSimpleType: Map
p10470
tp10471
I3
s(g4065
I42
g4066
Vinsert
p10472
I25
VIfStatement
p10473
tp10474
I2
s(Vinsert
p10475
I42
VSimpleName: remove
p10476
Vinsert
p10477
I42
VSimpleName: getWebAppStatSet
p10478
tp10479
I1
s(Vinsert
p10480
I42
VSimpleName: findTableSourceWithColumn
p10481
Vinsert
p10482
I42
VSimpleName: tableSource
p10483
tp10484
I3
s(Vinsert
p10485
I42
VSimpleName: createExprParser
p10486
Vinsert
p10487
I27
VInfixExpression: ==
p10488
tp10489
I1
s(g8381
I42
g8382
Vinsert
p10490
I42
VSimpleName: getUpdate
p10491
tp10492
I1
s(Vinsert
p10493
I42
VSimpleName: purgeImplicitCache
p10494
Vinsert
p10495
I59
VVariableDeclarationFragment
p10496
tp10497
I1
s(Vinsert
p10498
I42
VSimpleName: createMetaDataId
p10499
Vinsert
p10500
I32
VMethodInvocation
p10501
tp10502
I1
s(Vinsert
p10503
I42
VSimpleName: names
p10504
Vinsert
p10505
I42
VSimpleName: SQLAlterTableDropColumnItem
p10506
tp10507
I2
s(Vinsert
p10508
I42
VSimpleName: dataSource_connect
p10509
Vinsert
p10510
I22
VFieldAccess
p10511
tp10512
I1
s(Vinsert
p10513
I42
VSimpleName: acceptChild
p10514
Vinsert
p10515
I8
VBlock
p10516
tp10517
I6
s(g5409
I42
g5410
Vinsert
p10518
I60
VVariableDeclarationStatement
p10519
tp10520
I7
s(g821
I42
g822
Vinsert
p10521
I43
VSimpleType: MySqlTableIndex
p10522
tp10523
I2
s(g6134
I42
g6135
Vinsert
p10524
I32
VMethodInvocation
p10525
tp10526
I19
s(Vinsert
p10527
I42
VSimpleName: nextToken
p10528
Vinsert
p10529
I42
VSimpleName: setPartition
p10530
tp10531
I1
s(Vinsert
p10532
I42
VSimpleName: add
p10533
Vinsert
p10534
I43
VSimpleType: Violation
p10535
tp10536
I1
s(Vinsert
p10537
I42
VSimpleName: add
p10538
Vinsert
p10539
I42
VSimpleName: valueExpr
p10540
tp10541
I2
s(Vinsert
p10542
I42
VSimpleName: stringVal
p10543
Vinsert
p10544
I40
VQualifiedName: Token.LITERAL_CHARS
p10545
tp10546
I2
s(g3780
I42
g3781
Vinsert
p10547
I32
VMethodInvocation
p10548
tp10549
I61
s(Vinsert
p10550
I42
VSimpleName: decrypt
p10551
Vinsert
p10552
I60
VVariableDeclarationStatement
p10553
tp10554
I6
s(g5666
I42
g5667
Vinsert
p10555
I14
VClassInstanceCreation
p10556
tp10557
I10
s(Vinsert
p10558
I42
VSimpleName: length
p10559
Vinsert
p10560
I42
VSimpleName: input
p10561
tp10562
I4
s(Vinsert
p10563
I42
VSimpleName: getLeft
p10564
Vinsert
p10565
I24
VForStatement
p10566
tp10567
I2
s(g8677
I42
g8678
Vinsert
p10568
I4
VArrayInitializer
p10569
tp10570
I1
s(Vinsert
p10571
I42
VSimpleName: indexOf
p10572
Vinsert
p10573
I42
VSimpleName: to
p10574
tp10575
I1
s(Vinsert
p10576
I42
VSimpleName: nextToken
p10577
Vinsert
p10578
I40
VQualifiedName: JdbcConstants.MYSQL
p10579
tp10580
I1
s(Vinsert
p10581
I42
VSimpleName: forName
p10582
Vinsert
p10583
I31
VMethodDeclaration
p10584
tp10585
I1
s(Vinsert
p10586
I42
VSimpleName: isClosed
p10587
Vinsert
p10588
I42
VSimpleName: JdbcUtils
p10589
tp10590
I1
s(Vinsert
p10591
I42
VSimpleName: getOperator
p10592
Vinsert
p10593
I42
VSimpleName: println
p10594
tp10595
I1
s(g1471
I42
g1472
Vinsert
p10596
I14
VClassInstanceCreation
p10597
tp10598
I7
s(Vinsert
p10599
I42
VSimpleName: assertFalse
p10600
Vinsert
p10601
I42
VSimpleName: isStatementLogErrorEnabled
p10602
tp10603
I1
s(Vinsert
p10604
I42
VSimpleName: getAttributes
p10605
Vinsert
p10606
I42
VSimpleName: accept
p10607
tp10608
I5
s(g1948
I42
g1949
Vinsert
p10609
I42
VSimpleName: ident
p10610
tp10611
I1
s(g9182
I42
g9183
Vinsert
p10612
I42
VSimpleName: createSelectParser
p10613
tp10614
I1
s(g4227
I42
g4228
Vinsert
p10615
I32
VMethodInvocation
p10616
tp10617
I4
s(Vinsert
p10618
I42
VSimpleName: equals
p10619
Vinsert
p10620
I42
VSimpleName: perPageCount
p10621
tp10622
I1
s(g5338
I42
g5339
Vinsert
p10623
I43
VSimpleType: SQLSelectQueryBlock
p10624
tp10625
I2
s(Vinsert
p10626
I42
VSimpleName: getFilterClassNames
p10627
Vinsert
p10628
I42
VSimpleName: getName
p10629
tp10630
I1
s(Vinsert
p10631
I42
VSimpleName: setWithCascaded
p10632
Vinsert
p10633
I40
VQualifiedName: Token.WITH
p10634
tp10635
I1
s(g3027
I42
g3028
Vinsert
p10636
I32
VMethodInvocation
p10637
tp10638
I2
s(g6475
I42
g6476
Vinsert
p10639
I42
VSimpleName: Exception
p10640
tp10641
I1
s(Vinsert
p10642
I42
VSimpleName: isMatched
p10643
Vinsert
p10644
I42
VSimpleName: s
p10645
tp10646
I3
s(g2494
I42
g2495
Vinsert
p10647
I70
VEnhancedForStatement
p10648
tp10649
I2
s(Vinsert
p10650
I42
VSimpleName: getBytes
p10651
Vinsert
p10652
I43
VSimpleType: DESKeySpec
p10653
tp10654
I2
s(Vinsert
p10655
I42
VSimpleName: signal
p10656
Vinsert
p10657
I27
VInfixExpression: ==
p10658
tp10659
I1
s(Vinsert
p10660
I42
VSimpleName: console
p10661
Vinsert
p10662
I45
VStringLiteral: "\u005ct`c_blob` blob COMMENT 'blob',\u005cn"
p10663
tp10664
I2
s(g4170
I42
g4171
Vinsert
p10665
I42
VSimpleName: item
p10666
tp10667
I1
s(g4308
I42
g4309
Vinsert
p10668
I39
VPrimitiveType: int
p10669
tp10670
I1
s(Vinsert
p10671
I42
VSimpleName: assertEquals
p10672
Vinsert
p10673
I45
VStringLiteral: "alter table sale_detail add if not exists partition (sale_date='201312', region='hangzhou');"
p10674
tp10675
I1
s(g2629
I42
g2630
Vinsert
p10676
I11
VCastExpression
p10677
tp10678
I5
s(g2173
I42
g2174
Vinsert
p10679
I78
VMarkerAnnotation
p10680
tp10681
I1
s(Vinsert
p10682
I42
VSimpleName: findColumn
p10683
Vinsert
p10684
I11
VCastExpression
p10685
tp10686
I3
s(Vinsert
p10687
I42
VSimpleName: preparedStatement_executeUpdate
p10688
Vinsert
p10689
I42
VSimpleName: RuntimeException
p10690
tp10691
I1
s(Vinsert
p10692
I42
VSimpleName: addAll
p10693
Vinsert
p10694
I14
VClassInstanceCreation
p10695
tp10696
I4
s(Vinsert
p10697
I42
VSimpleName: getPermitNames
p10698
Vinsert
p10699
I32
VMethodInvocation
p10700
tp10701
I10
s(Vinsert
p10702
I42
VSimpleName: startsWith
p10703
Vinsert
p10704
I45
VStringLiteral: "*"
p10705
tp10706
I2
s(g4579
I42
g4580
Vinsert
p10707
I42
VSimpleName: lexer
p10708
tp10709
I5
s(Vinsert
p10710
I42
VSimpleName: assertNotNull
p10711
Vinsert
p10712
I42
VSimpleName: cmdArray
p10713
tp10714
I1
s(Vinsert
p10715
I42
VSimpleName: parseStatements
p10716
Vinsert
p10717
I45
VStringLiteral: "select next value for orderId"
p10718
tp10719
I1
s(g5419
I42
g5420
Vinsert
p10720
I43
VSimpleType: DruidDataSource
p10721
tp10722
I1
s(g1070
I42
g1071
Vinsert
p10723
I42
VSimpleName: PGWallTest1
p10724
tp10725
I1
s(Vinsert
p10726
I42
VSimpleName: length
p10727
Vinsert
p10728
I43
VSimpleType: String
p10729
tp10730
I5
s(Vinsert
p10731
I42
VSimpleName: getAsciiStream
p10732
Vinsert
p10733
I42
VSimpleName: close
p10734
tp10735
I1
s(Vinsert
p10736
I42
VSimpleName: currentTimeMillis
p10737
Vinsert
p10738
I34
VNumberLiteral: 13
p10739
tp10740
I1
s(g6871
I42
g6872
Vinsert
p10741
I42
VSimpleName: ucase
p10742
tp10743
I1
s(g3332
I42
g3333
Vinsert
p10744
I74
VParameterizedType: Map.Entry<String,JdbcSqlStat>
p10745
tp10746
I1
s(Vinsert
p10747
I42
VSimpleName: size
p10748
Vinsert
p10749
I42
VSimpleName: sqlList
p10750
tp10751
I2
s(Vinsert
p10752
I42
VSimpleName: getIsolation
p10753
Vinsert
p10754
I32
VMethodInvocation
p10755
tp10756
I5
s(Vinsert
p10757
I42
VSimpleName: init
p10758
Vinsert
p10759
I45
VStringLiteral: "file://"
p10760
tp10761
I2
s(g2125
I42
g2126
Vinsert
p10762
I41
VReturnStatement
p10763
tp10764
I1
s(Vinsert
p10765
I42
VSimpleName: setRight
p10766
Vinsert
p10767
I21
VExpressionStatement
p10768
tp10769
I5
s(g6288
I42
g6289
Vinsert
p10770
I42
VSimpleName: List
p10771
tp10772
I1
s(g602
I42
g603
Vinsert
p10773
I83
VModifier: protected
p10774
tp10775
I2
s(g3821
I42
g3822
Vinsert
p10776
I14
VClassInstanceCreation
p10777
tp10778
I2
s(Vinsert
p10779
I42
VSimpleName: add
p10780
Vinsert
p10781
I42
VSimpleName: tableElementList
p10782
tp10783
I1
s(Vinsert
p10784
I42
VSimpleName: getValuesList
p10785
Vinsert
p10786
I42
VSimpleName: accept
p10787
tp10788
I1
s(g10262
I42
g10263
Vinsert
p10789
I42
VSimpleName: accept
p10790
tp10791
I2
s(Vinsert
p10792
I42
VSimpleName: format
p10793
Vinsert
p10794
I40
VQualifiedName: java.util.Date
p10795
tp10796
I1
s(Vinsert
p10797
I42
VSimpleName: getConditionValue
p10798
Vinsert
p10799
I42
VSimpleName: x
p10800
tp10801
I1
s(g4188
I42
g4189
Vinsert
p10802
I42
VSimpleName: Override
p10803
tp10804
I2
s(g6577
I42
g6578
Vinsert
p10805
I45
VStringLiteral: "                            3\u005cn"
p10806
tp10807
I2
s(Vinsert
p10808
I42
VSimpleName: append
p10809
Vinsert
p10810
I27
VInfixExpression: *
p10811
tp10812
I1
s(Vinsert
p10813
I42
VSimpleName: prepareStatement
p10814
Vinsert
p10815
I7
VAssignment: +=
p10816
tp10817
I2
s(g9722
I42
g9723
Vinsert
p10818
I42
VSimpleName: binaryOpExpr
p10819
tp10820
I9
s(g786
I42
g787
Vinsert
p10821
I42
VSimpleName: s
p10822
tp10823
I3
s(Vinsert
p10824
I42
VSimpleName: startsWith
p10825
Vinsert
p10826
I42
VSimpleName: HBaseConnection
p10827
tp10828
I1
s(Vinsert
p10829
I42
VSimpleName: hasMoreTokens
p10830
Vinsert
p10831
I43
VSimpleType: List
p10832
tp10833
I1
s(g2717
I42
g2718
Vinsert
p10834
I34
VNumberLiteral: 1
p10835
tp10836
I1
s(g1632
I42
g1633
Vinsert
p10837
I42
VSimpleName: MySqlMatchAgainstExpr
p10838
tp10839
I1
s(g4824
I42
g4825
Vinsert
p10840
I83
VModifier: protected
p10841
tp10842
I1
s(g8022
I42
g8023
Vinsert
p10843
I52
VThisExpression
p10844
tp10845
I3
s(Vinsert
p10846
I42
VSimpleName: openConnection
p10847
Vinsert
p10848
I8
VBlock
p10849
tp10850
I1
s(g9634
I42
g9635
Vinsert
p10851
I59
VVariableDeclarationFragment
p10852
tp10853
I2
s(Vinsert
p10854
I42
VSimpleName: getOperator
p10855
Vinsert
p10856
I42
VSimpleName: binaryOpExpr
p10857
tp10858
I6
s(Vinsert
p10859
I42
VSimpleName: assertEquals
p10860
Vinsert
p10861
I45
VStringLiteral: "\u005cn and -- comment_1"
p10862
tp10863
I1
s(Vinsert
p10864
I42
VSimpleName: showTables
p10865
Vinsert
p10866
I40
VQualifiedName: JdbcConstants.MYSQL
p10867
tp10868
I1
s(Vinsert
p10869
I42
VSimpleName: getId
p10870
Vinsert
p10871
I39
VPrimitiveType: boolean
p10872
tp10873
I2
s(Vinsert
p10874
I42
VSimpleName: write
p10875
Vinsert
p10876
I14
VClassInstanceCreation
p10877
tp10878
I1
s(g846
I42
g847
Vinsert
p10879
I42
VSimpleName: SQLName
p10880
tp10881
I1
s(Vinsert
p10882
I42
VSimpleName: unwrap
p10883
Vinsert
p10884
I43
VSimpleType: CallableStatement
p10885
tp10886
I2
s(Vinsert
p10887
I42
VSimpleName: getReferencingColumns
p10888
Vinsert
p10889
I22
VFieldAccess
p10890
tp10891
I1
s(Vinsert
p10892
I42
VSimpleName: toSQLString
p10893
Vinsert
p10894
I45
VStringLiteral: "\u005ct\u005ct\u005ct\u005ctFROM TABLE(SPLIT(STR, SEP))\u005cn"
p10895
tp10896
I1
s(Vinsert
p10897
I42
VSimpleName: add
p10898
Vinsert
p10899
I42
VSimpleName: resultSet
p10900
tp10901
I1
s(g4689
I42
g4690
Vinsert
p10902
I45
VStringLiteral: "\u005ct\u005ctWHERE ITEM.INVENTORY_ITEM_ID = P.INVENTORY_ITEM_ID\u005cn"
p10903
tp10904
I1
s(g3765
I42
g3766
Vinsert
p10905
I45
VStringLiteral: "\u005cn JOIN fund_base_cv_ad_auction_ocr_pv_tfs_ocr b ON a.tfs = b.tfs"
p10906
tp10907
I1
s(g2178
I42
g2179
Vinsert
p10908
I42
VSimpleName: methodOrBinary
p10909
tp10910
I2
s(Vinsert
p10911
I42
VSimpleName: assertTrue
p10912
Vinsert
p10913
I42
VSimpleName: containsKey
p10914
tp10915
I1
s(g5040
I42
g5041
Vinsert
p10916
I42
VSimpleName: mySqlLexer
p10917
tp10918
I2
s(Vinsert
p10919
I42
VSimpleName: setRemoteAddr
p10920
Vinsert
p10921
I42
VSimpleName: init
p10922
tp10923
I1
s(Vinsert
p10924
I42
VSimpleName: assertTrue
p10925
Vinsert
p10926
I42
VSimpleName: MySqlWallTest17
p10927
tp10928
I1
s(Vinsert
p10929
I42
VSimpleName: setParent
p10930
Vinsert
p10931
I42
VSimpleName: name
p10932
tp10933
I36
s(g4689
I42
g4690
Vinsert
p10934
I45
VStringLiteral: "\u005ct\u005ct\u005ctAND ITEM.ENABLED_FLAG = 'Y'\u005cn"
p10935
tp10936
I1
s(Vinsert
p10937
I42
VSimpleName: getConnection
p10938
Vinsert
p10939
I45
VStringLiteral: "selelct 1"
p10940
tp10941
I1
s(Vinsert
p10942
I42
VSimpleName: getColumnName
p10943
Vinsert
p10944
I43
VSimpleType: SQLAlterTableDropColumnItem
p10945
tp10946
I1
s(g2178
I42
g2179
Vinsert
p10947
I41
VReturnStatement
p10948
tp10949
I3
s(g3053
I42
g3054
Vinsert
p10950
I42
VSimpleName: acceptIdentifier
p10951
tp10952
I1
s(Vinsert
p10953
I42
VSimpleName: parseSelectList
p10954
Vinsert
p10955
I32
VMethodInvocation
p10956
tp10957
I3
s(g3636
I42
g3637
Vinsert
p10958
I42
VSimpleName: visitor
p10959
tp10960
I91
s(Vinsert
p10961
I42
VSimpleName: size
p10962
Vinsert
p10963
I42
VSimpleName: println
p10964
tp10965
I10
s(Vinsert
p10966
I42
VSimpleName: initializeDataSourceBuilder
p10967
Vinsert
p10968
I42
VSimpleName: DataSourceProperties
p10969
tp10970
I1
s(Vinsert
p10971
I42
VSimpleName: incrementAndGet
p10972
Vinsert
p10973
I42
VSimpleName: incrementPreparedStatementCount
p10974
tp10975
I2
s(g1715
I42
g1716
Vinsert
p10976
I42
VSimpleName: validate
p10977
tp10978
I1
s(g7211
I42
g7212
Vinsert
p10979
I43
VSimpleType: SQLAlterCharacter
p10980
tp10981
I1
s(g9060
I42
g9061
Vinsert
p10982
I32
VMethodInvocation
p10983
tp10984
I30
s(g8184
I42
g8185
Vinsert
p10985
I42
VSimpleName: sqlStat
p10986
tp10987
I1
s(g6197
I42
g6198
Vinsert
p10988
I42
VSimpleName: stmt
p10989
tp10990
I25
s(Vinsert
p10991
I42
VSimpleName: clone
p10992
Vinsert
p10993
I42
VSimpleName: setOf
p10994
tp10995
I1
s(Vinsert
p10996
I42
VSimpleName: assertEquals
p10997
Vinsert
p10998
I42
VSimpleName: engine
p10999
tp11000
I4
s(Vinsert
p11001
I42
VSimpleName: setValue
p11002
Vinsert
p11003
I7
VAssignment: =
p11004
tp11005
I1
s(g2795
I42
g2796
Vinsert
p11006
I42
VSimpleName: String
p11007
tp11008
I1
s(g3179
I42
g3180
Vinsert
p11009
I42
VSimpleName: permitFunctions
p11010
tp11011
I2
s(g4704
I42
g4705
Vinsert
p11012
I42
VSimpleName: attributes
p11013
tp11014
I2
s(Vinsert
p11015
I42
VSimpleName: getLimit
p11016
Vinsert
p11017
I42
VSimpleName: query
p11018
tp11019
I4
s(Vinsert
p11020
I42
VSimpleName: stringVal
p11021
Vinsert
p11022
I42
VSimpleName: get
p11023
tp11024
I1
s(Vinsert
p11025
I42
VSimpleName: setExpr
p11026
Vinsert
p11027
I42
VSimpleName: check
p11028
tp11029
I2
s(g4144
I42
g4145
Vinsert
p11030
I42
VSimpleName: row
p11031
tp11032
I1
s(Vinsert
p11033
I42
VSimpleName: getConfig
p11034
Vinsert
p11035
I31
VMethodDeclaration
p11036
tp11037
I2
s(g6847
I42
g6848
Vinsert
p11038
I43
VSimpleType: List
p11039
tp11040
I1
s(Vinsert
p11041
I42
VSimpleName: parseInt
p11042
Vinsert
p11043
I42
VSimpleName: val
p11044
tp11045
I1
s(Vinsert
p11046
I42
VSimpleName: append
p11047
Vinsert
p11048
I42
VSimpleName: UnsupportedOperationException
p11049
tp11050
I1
s(Vinsert
p11051
I42
VSimpleName: getPartitionedBy
p11052
Vinsert
p11053
I21
VExpressionStatement
p11054
tp11055
I2
s(g3574
I42
g3575
Vinsert
p11056
I74
VParameterizedType: ArrayList<Object>
p11057
tp11058
I1
s(g6676
I42
g6677
Vinsert
p11059
I42
VSimpleName: i
p11060
tp11061
I2
s(Vinsert
p11062
I42
VSimpleName: getConnectionHolder
p11063
Vinsert
p11064
I43
VSimpleType: DruidPooledConnection
p11065
tp11066
I1
s(Vinsert
p11067
I42
VSimpleName: getText
p11068
Vinsert
p11069
I62
VInstanceofExpression
p11070
tp11071
I2
s(Vinsert
p11072
I42
VSimpleName: checkValid
p11073
Vinsert
p11074
I27
VInfixExpression: <
p11075
tp11076
I1
s(g2489
I42
g2490
Vinsert
p11077
I42
VSimpleName: Override
p11078
tp11079
I1
s(g5903
I42
g5904
Vinsert
p11080
I42
VSimpleName: count
p11081
tp11082
I1
s(g1425
I42
g1426
Vinsert
p11083
I21
VExpressionStatement
p11084
tp11085
I1
s(Vinsert
p11086
I42
VSimpleName: visit
p11087
Vinsert
p11088
I42
VSimpleName: outFileIgnoreLinesNumber
p11089
tp11090
I1
s(Vinsert
p11091
I42
VSimpleName: accept
p11092
Vinsert
p11093
I42
VSimpleName: item
p11094
tp11095
I7
s(g871
I42
g872
Vinsert
p11096
I40
VQualifiedName: Token.BEGIN
p11097
tp11098
I1
s(g5762
I42
g5763
Vinsert
p11099
I21
VExpressionStatement
p11100
tp11101
I7
s(g1973
I42
g1974
Vinsert
p11102
I42
VSimpleName: parseAlterColumn
p11103
tp11104
I2
s(Vinsert
p11105
I42
VSimpleName: assertEquals
p11106
Vinsert
p11107
I42
VSimpleName: TestCase
p11108
tp11109
I48
s(Vinsert
p11110
I42
VSimpleName: setCursorName
p11111
Vinsert
p11112
I40
VQualifiedName: x.constant
p11113
tp11114
I1
s(g5538
I42
g5539
Vinsert
p11115
I40
VQualifiedName: com.alibaba.druid.wall.WallProviderStatValue
p11116
tp11117
I1
s(g10480
I42
g10481
Vinsert
p11118
I11
VCastExpression
p11119
tp11120
I1
s(g5772
I42
g5773
Vinsert
p11121
I32
VMethodInvocation
p11122
tp11123
I6
s(Vinsert
p11124
I42
VSimpleName: setSelect
p11125
Vinsert
p11126
I52
VThisExpression
p11127
tp11128
I1
s(g10116
I42
g10117
Vinsert
p11129
I42
VSimpleName: LocalXAConnectionFactory
p11130
tp11131
I1
s(g9456
I42
g9457
Vinsert
p11132
I11
VCastExpression
p11133
tp11134
I1
s(g5826
I42
g5827
Vinsert
p11135
I42
VSimpleName: parseLateralView
p11136
tp11137
I1
s(g3149
I42
g3150
Vinsert
p11138
I42
VSimpleName: SQLTableSource
p11139
tp11140
I1
s(g7417
I42
g7418
Vinsert
p11141
I42
VSimpleName: rightBinary
p11142
tp11143
I2
s(g1710
I42
g1711
Vinsert
p11144
I43
VSimpleType: Exception
p11145
tp11146
I2
s(g6139
I42
g6140
Vinsert
p11147
I59
VVariableDeclarationFragment
p11148
tp11149
I22
s(Vinsert
p11150
I42
VSimpleName: getName
p11151
Vinsert
p11152
I43
VSimpleType: SQLIdentifierExpr
p11153
tp11154
I39
s(g4152
I42
g4153
Vinsert
p11155
I41
VReturnStatement
p11156
tp11157
I3
s(g56
I42
g57
Vinsert
p11158
I42
VSimpleName: linera
p11159
tp11160
I2
s(Vinsert
p11161
I42
VSimpleName: token
p11162
Vinsert
p11163
I42
VSimpleName: SQLAggregateExpr
p11164
tp11165
I2
s(g6084
I42
g6085
Vinsert
p11166
I44
VSingleVariableDeclaration
p11167
tp11168
I2
s(Vinsert
p11169
I42
VSimpleName: assertEquals
p11170
Vinsert
p11171
I45
VStringLiteral: "create table t1 (f0 bigint) partitioned by (ds string, hh string);"
p11172
tp11173
I1
s(g10039
I42
g10040
Vinsert
p11174
I39
VPrimitiveType: void
p11175
tp11176
I5
s(Vinsert
p11177
I42
VSimpleName: accept
p11178
Vinsert
p11179
I42
VSimpleName: getHints
p11180
tp11181
I1
s(Vinsert
p11182
I42
VSimpleName: incrementAndGet
p11183
Vinsert
p11184
I83
VModifier: public
p11185
tp11186
I15
s(Vinsert
p11187
I42
VSimpleName: getSqlStat
p11188
Vinsert
p11189
I7
VAssignment: =
p11190
tp11191
I2
s(Vinsert
p11192
I42
VSimpleName: equals
p11193
Vinsert
p11194
I40
VQualifiedName: SQLBinaryOperator.Modulus
p11195
tp11196
I1
s(Vinsert
p11197
I42
VSimpleName: println
p11198
Vinsert
p11199
I42
VSimpleName: relationship
p11200
tp11201
I1
s(g256
I42
g257
Vinsert
p11202
I42
VSimpleName: OracleForStatement
p11203
tp11204
I1
s(g2464
I42
g2465
Vinsert
p11205
I83
VModifier: final
p11206
tp11207
I1
s(g6396
I42
g6397
Vinsert
p11208
I42
VSimpleName: in
p11209
tp11210
I1
s(g7565
I42
g7566
Vinsert
p11211
I45
VStringLiteral: "USE "
p11212
tp11213
I2
s(g2672
I42
g2673
Vinsert
p11214
I32
VMethodInvocation
p11215
tp11216
I4
s(Vinsert
p11217
I42
VSimpleName: getDataType
p11218
Vinsert
p11219
I43
VSimpleType: SQLDataType
p11220
tp11221
I2
s(g2992
I42
g2993
Vinsert
p11222
I74
VParameterizedType: List<SQLSelectItem>
p11223
tp11224
I3
s(g2084
I42
g2085
Vinsert
p11225
I42
VSimpleName: parameters
p11226
tp11227
I1
s(g3584
I42
g3585
Vinsert
p11228
I9
VBooleanLiteral: false
p11229
tp11230
I3
s(Vinsert
p11231
I42
VSimpleName: getMethodName
p11232
Vinsert
p11233
I42
VSimpleName: print
p11234
tp11235
I2
s(Vinsert
p11236
I42
VSimpleName: createSQLSelectParser
p11237
Vinsert
p11238
I42
VSimpleName: accept
p11239
tp11240
I1
s(g5638
I42
g5639
Vinsert
p11241
I8
VBlock
p11242
tp11243
I1
s(g6364
I42
g6365
Vinsert
p11244
I42
VSimpleName: jdbcUrl
p11245
tp11246
I1
s(g1241
I42
g1242
Vinsert
p11247
I43
VSimpleType: Set
p11248
tp11249
I1
s(g10417
I42
g10418
Vinsert
p11250
I42
VSimpleName: insertStatement
p11251
tp11252
I1
s(g5892
I42
g5893
Vinsert
p11253
I60
VVariableDeclarationStatement
p11254
tp11255
I1
s(g5729
I42
g5730
Vinsert
p11256
I42
VSimpleName: createTable
p11257
tp11258
I3
s(Vinsert
p11259
I42
VSimpleName: substring
p11260
Vinsert
p11261
I39
VPrimitiveType: int
p11262
tp11263
I1
s(g261
I42
g262
Vinsert
p11264
I22
VFieldAccess
p11265
tp11266
I1
s(g9954
I42
g9955
Vinsert
p11267
I59
VVariableDeclarationFragment
p11268
tp11269
I1
s(Vinsert
p11270
I42
VSimpleName: execute
p11271
Vinsert
p11272
I8
VBlock
p11273
tp11274
I2
s(g10503
I42
g10504
Vinsert
p11275
I60
VVariableDeclarationStatement
p11276
tp11277
I1
s(g5864
I42
g5865
Vinsert
p11278
I21
VExpressionStatement
p11279
tp11280
I1
s(Vinsert
p11281
I42
VSimpleName: clone
p11282
Vinsert
p11283
I43
VSimpleType: SQLHint
p11284
tp11285
I4
s(Vinsert
p11286
I42
VSimpleName: getConnection
p11287
Vinsert
p11288
I1
VAnonymousClassDeclaration
p11289
tp11290
I3
s(g8956
I42
g8957
Vinsert
p11291
I43
VSimpleType: WallSqlStat
p11292
tp11293
I1
s(g4222
I42
g4223
Vinsert
p11294
I43
VSimpleType: DataSource
p11295
tp11296
I1
s(Vinsert
p11297
I42
VSimpleName: startsWith
p11298
Vinsert
p11299
I45
VStringLiteral: "OSAndroid41Count"
p11300
tp11301
I1
s(Vinsert
p11302
I42
VSimpleName: accept
p11303
Vinsert
p11304
I43
VSimpleType: TeradataOutputVisitor
p11305
tp11306
I1
s(Vinsert
p11307
I42
VSimpleName: set
p11308
Vinsert
p11309
I74
VParameterizedType: List<SQLExpr>
p11310
tp11311
I1
s(Vinsert
p11312
I42
VSimpleName: currentTimeMillis
p11313
Vinsert
p11314
I34
VNumberLiteral: 1000
p11315
tp11316
I2
s(g2268
I42
g2269
Vinsert
p11317
I42
VSimpleName: executeQuery
p11318
tp11319
I4
s(Vinsert
p11320
I42
VSimpleName: loadClass
p11321
Vinsert
p11322
I42
VSimpleName: validConnectionChecker
p11323
tp11324
I1
s(Vinsert
p11325
I42
VSimpleName: getYoungGC
p11326
Vinsert
p11327
I44
VSingleVariableDeclaration
p11328
tp11329
I1
s(Vinsert
p11330
I42
VSimpleName: accept
p11331
Vinsert
p11332
I13
VCharacterLiteral: '\u005c''
p11333
tp11334
I1
s(Vinsert
p11335
I42
VSimpleName: assertFalse
p11336
Vinsert
p11337
I42
VSimpleName: i
p11338
tp11339
I5
s(g1878
I42
g1879
Vinsert
p11340
I42
VSimpleName: ifnull
p11341
tp11342
I1
s(g2634
I42
g2635
Vinsert
p11343
I43
VSimpleType: SQLStatement
p11344
tp11345
I1
s(g2034
I42
g2035
Vinsert
p11346
I85
VDimension
p11347
tp11348
I1
s(g4238
I42
g4239
Vinsert
p11349
I42
VSimpleName: setParent
p11350
tp11351
I1
s(Vinsert
p11352
I42
VSimpleName: get
p11353
Vinsert
p11354
I43
VSimpleType: SQLUpdateStatement
p11355
tp11356
I2
s(g871
I42
g872
Vinsert
p11357
I59
VVariableDeclarationFragment
p11358
tp11359
I2
s(Vinsert
p11360
I42
VSimpleName: getValuesList
p11361
Vinsert
p11362
I59
VVariableDeclarationFragment
p11363
tp11364
I1
s(Vinsert
p11365
I42
VSimpleName: getTargetAffectRow
p11366
Vinsert
p11367
I42
VSimpleName: isQueryOnPk
p11368
tp11369
I1
s(g2359
I42
g2360
Vinsert
p11370
I60
VVariableDeclarationStatement
p11371
tp11372
I1
s(g1923
I42
g1924
Vinsert
p11373
I70
VEnhancedForStatement
p11374
tp11375
I2
s(Vinsert
p11376
I42
VSimpleName: nextToken
p11377
Vinsert
p11378
I42
VSimpleName: MySqlLexer
p11379
tp11380
I2
s(g2657
I42
g2658
Vinsert
p11381
I43
VSimpleType: HashSet
p11382
tp11383
I1
s(g7594
I42
g7595
Vinsert
p11384
I43
VSimpleType: SchemaResolveVisitor.Context
p11385
tp11386
I1
s(g4116
I42
g4117
Vinsert
p11387
I27
VInfixExpression: !=
p11388
tp11389
I2
s(Vinsert
p11390
I42
VSimpleName: size
p11391
Vinsert
p11392
I42
VSimpleName: stat
p11393
tp11394
I2
s(g3908
I42
g3909
Vinsert
p11395
I21
VExpressionStatement
p11396
tp11397
I1
s(Vinsert
p11398
I42
VSimpleName: nextToken
p11399
Vinsert
p11400
I43
VSimpleType: OracleLexer
p11401
tp11402
I1
s(Vinsert
p11403
I42
VSimpleName: endVisit
p11404
Vinsert
p11405
I42
VSimpleName: where
p11406
tp11407
I3
s(g81
I42
g82
Vinsert
p11408
I25
VIfStatement
p11409
tp11410
I1
s(g6192
I42
g6193
Vinsert
p11411
I43
VSimpleType: Item
p11412
tp11413
I1
s(g3636
I42
g3637
Vinsert
p11414
I21
VExpressionStatement
p11415
tp11416
I71
s(g5171
I42
g5172
Vinsert
p11417
I42
VSimpleName: SQLException
p11418
tp11419
I2
s(Vinsert
p11420
I42
VSimpleName: parseUpdateStatement
p11421
Vinsert
p11422
I8
VBlock
p11423
tp11424
I1
s(g4238
I42
g4239
Vinsert
p11425
I44
VSingleVariableDeclaration
p11426
tp11427
I1
s(Vinsert
p11428
I42
VSimpleName: reset
p11429
Vinsert
p11430
I31
VMethodDeclaration
p11431
tp11432
I1
s(g9243
I42
g9244
Vinsert
p11433
I60
VVariableDeclarationStatement
p11434
tp11435
I2
s(g10310
I42
g10311
Vinsert
p11436
I42
VSimpleName: getParameters
p11437
tp11438
I1
s(g126
I42
g127
Vinsert
p11439
I42
VSimpleName: getResource
p11440
tp11441
I1
s(g1360
I42
g1361
Vinsert
p11442
I59
VVariableDeclarationFragment
p11443
tp11444
I19
s(g1755
I42
g1756
Vinsert
p11445
I42
VSimpleName: SchemaStatVisitor
p11446
tp11447
I14
s(Vinsert
p11448
I42
VSimpleName: getActiveCount
p11449
Vinsert
p11450
I42
VSimpleName: getCreateCount
p11451
tp11452
I1
s(Vinsert
p11453
I42
VSimpleName: getTableStat
p11454
Vinsert
p11455
I60
VVariableDeclarationStatement
p11456
tp11457
I13
s(g336
I42
g337
Vinsert
p11458
I42
VSimpleName: exprParser
p11459
tp11460
I1
s(g1180
I42
g1181
Vinsert
p11461
I83
VModifier: public
p11462
tp11463
I2
s(Vinsert
p11464
I42
VSimpleName: add
p11465
Vinsert
p11466
I43
VSimpleType: JLabel
p11467
tp11468
I2
s(Vinsert
p11469
I42
VSimpleName: setWhere
p11470
Vinsert
p11471
I42
VSimpleName: deleteStatement
p11472
tp11473
I1
s(Vinsert
p11474
I42
VSimpleName: toStatementList
p11475
Vinsert
p11476
I43
VSimpleType: List
p11477
tp11478
I7
s(Vinsert
p11479
I42
VSimpleName: size
p11480
Vinsert
p11481
I9
VBooleanLiteral: true
p11482
tp11483
I2
s(Vinsert
p11484
I42
VSimpleName: getOwner
p11485
Vinsert
p11486
I42
VSimpleName: propExpr
p11487
tp11488
I7
s(g7965
I42
g7966
Vinsert
p11489
I42
VSimpleName: parameters
p11490
tp11491
I1
s(Vinsert
p11492
I42
VSimpleName: setLocal
p11493
Vinsert
p11494
I42
VSimpleName: executor
p11495
tp11496
I2
s(g8499
I42
g8500
Vinsert
p11497
I42
VSimpleName: x
p11498
tp11499
I2
s(g5954
I42
g5955
Vinsert
p11500
I32
VMethodInvocation
p11501
tp11502
I6
s(g477
I42
g478
Vinsert
p11503
I27
VInfixExpression: !=
p11504
tp11505
I23
s(Vinsert
p11506
I42
VSimpleName: setName
p11507
Vinsert
p11508
I42
VSimpleName: holder
p11509
tp11510
I2
s(Vinsert
p11511
I42
VSimpleName: getKeyword
p11512
Vinsert
p11513
I42
VSimpleName: offsetCache
p11514
tp11515
I1
s(Vinsert
p11516
I42
VSimpleName: hasUnorderedLimit
p11517
Vinsert
p11518
I43
VSimpleType: String
p11519
tp11520
I5
s(g8648
I42
g8649
Vinsert
p11521
I34
VNumberLiteral: 5
p11522
tp11523
I1
s(Vinsert
p11524
I42
VSimpleName: createExprParser
p11525
Vinsert
p11526
I42
VSimpleName: createExprParser
p11527
tp11528
I1
s(Vinsert
p11529
I42
VSimpleName: await
p11530
Vinsert
p11531
I39
VPrimitiveType: long
p11532
tp11533
I1
s(g10864
I42
g10865
Vinsert
p11534
I42
VSimpleName: MySqlUtils
p11535
tp11536
I1
s(Vinsert
p11537
I42
VSimpleName: getNumber
p11538
Vinsert
p11539
I43
VSimpleType: SQLNumericLiteralExpr
p11540
tp11541
I8
s(Vinsert
p11542
I42
VSimpleName: getHints
p11543
Vinsert
p11544
I8
VBlock
p11545
tp11546
I6
s(Vinsert
p11547
I42
VSimpleName: visit
p11548
Vinsert
p11549
I42
VSimpleName: SQLSelectSubqueryQuery
p11550
tp11551
I1
s(g5328
I42
g5329
Vinsert
p11552
I34
VNumberLiteral: 0
p11553
tp11554
I1
s(Vinsert
p11555
I42
VSimpleName: setTestOnBorrow
p11556
Vinsert
p11557
I42
VSimpleName: setUrl
p11558
tp11559
I2
s(g8499
I42
g8500
Vinsert
p11560
I32
VMethodInvocation
p11561
tp11562
I2
s(g2099
I42
g2100
Vinsert
p11563
I21
VExpressionStatement
p11564
tp11565
I2
s(Vinsert
p11566
I42
VSimpleName: getConnectionHolder
p11567
Vinsert
p11568
I42
VSimpleName: holder
p11569
tp11570
I2
s(g3977
I42
g3978
Vinsert
p11571
I43
VSimpleType: MockCallableStatement
p11572
tp11573
I4
s(Vinsert
p11574
I42
VSimpleName: exprList
p11575
Vinsert
p11576
I42
VSimpleName: PGArrayExpr
p11577
tp11578
I2
s(g695
I42
g696
Vinsert
p11579
I32
VMethodInvocation
p11580
tp11581
I3
s(g1324
I42
g1325
Vinsert
p11582
I40
VQualifiedName: Token.EQ
p11583
tp11584
I1
s(Vinsert
p11585
I42
VSimpleName: getReplaceCount
p11586
Vinsert
p11587
I41
VReturnStatement
p11588
tp11589
I1
s(Vinsert
p11590
I42
VSimpleName: getNumber
p11591
Vinsert
p11592
I42
VSimpleName: firstVar
p11593
tp11594
I2
s(g11072
I42
g11073
Vinsert
p11595
I27
VInfixExpression: *
p11596
tp11597
I1
s(g5719
I42
g5720
Vinsert
p11598
I42
VSimpleName: explainToDeleteSQLObject
p11599
tp11600
I1
s(Vinsert
p11601
I42
VSimpleName: setPivot
p11602
Vinsert
p11603
I42
VSimpleName: cloneTo
p11604
tp11605
I1
s(Vinsert
p11606
I42
VSimpleName: token
p11607
Vinsert
p11608
I42
VSimpleName: hasComment
p11609
tp11610
I1
s(Vinsert
p11611
I42
VSimpleName: formatOdps
p11612
Vinsert
p11613
I42
VSimpleName: sql
p11614
tp11615
I11
s(Vinsert
p11616
I42
VSimpleName: clone
p11617
Vinsert
p11618
I42
VSimpleName: SQLExpr
p11619
tp11620
I25
s(g627
I42
g628
Vinsert
p11621
I59
VVariableDeclarationFragment
p11622
tp11623
I19
s(Vinsert
p11624
I42
VSimpleName: get
p11625
Vinsert
p11626
I43
VSimpleType: SQLParameter
p11627
tp11628
I1
s(Vinsert
p11629
I42
VSimpleName: clear
p11630
Vinsert
p11631
I43
VSimpleType: Exception
p11632
tp11633
I1
s(Vinsert
p11634
I42
VSimpleName: createSqlInfo
p11635
Vinsert
p11636
I32
VMethodInvocation
p11637
tp11638
I1
s(Vinsert
p11639
I42
VSimpleName: name
p11640
Vinsert
p11641
I42
VSimpleName: SQLDropViewStatement
p11642
tp11643
I1
s(Vinsert
p11644
I42
VSimpleName: visit
p11645
Vinsert
p11646
I42
VSimpleName: elseItem
p11647
tp11648
I1
s(Vinsert
p11649
I42
VSimpleName: getExceptionSorter
p11650
Vinsert
p11651
I32
VMethodInvocation
p11652
tp11653
I2
s(Vinsert
p11654
I42
VSimpleName: getOnDelete
p11655
Vinsert
p11656
I21
VExpressionStatement
p11657
tp11658
I1
s(Vinsert
p11659
I42
VSimpleName: getName
p11660
Vinsert
p11661
I42
VSimpleName: getSimpleName
p11662
tp11663
I2
s(g9415
I42
g9416
Vinsert
p11664
I62
VInstanceofExpression
p11665
tp11666
I1
s(Vinsert
p11667
I42
VSimpleName: getConnectionCount_Alive_3_more_Day
p11668
Vinsert
p11669
I42
VSimpleName: stat
p11670
tp11671
I2
s(g11639
I42
g11640
Vinsert
p11672
I43
VSimpleType: SQLDropViewStatement
p11673
tp11674
I1
s(g3972
I42
g3973
Vinsert
p11675
I43
VSimpleType: SQLName
p11676
tp11677
I1
s(Vinsert
p11678
I42
VSimpleName: isIgnore
p11679
Vinsert
p11680
I25
VIfStatement
p11681
tp11682
I2
s(g2624
I42
g2625
Vinsert
p11683
I21
VExpressionStatement
p11684
tp11685
I2
s(Vinsert
p11686
I42
VSimpleName: toSQLString
p11687
Vinsert
p11688
I45
VStringLiteral: "\u005cn\u005ctcategory_id NUMBER(2),"
p11689
tp11690
I2
s(Vinsert
p11691
I42
VSimpleName: getSelect
p11692
Vinsert
p11693
I42
VSimpleName: selectListCache
p11694
tp11695
I1
s(Vinsert
p11696
I42
VSimpleName: toSQLString
p11697
Vinsert
p11698
I45
VStringLiteral: "\u005ctAND rsi.e_boardid IN (?)\u005cn"
p11699
tp11700
I1
s(Vinsert
p11701
I42
VSimpleName: isValidateSqlServer
p11702
Vinsert
p11703
I42
VSimpleName: test_permitTable
p11704
tp11705
I1
s(Vinsert
p11706
I42
VSimpleName: getQueueLength
p11707
Vinsert
p11708
I27
VInfixExpression: >
p11709
tp11710
I2
s(Vinsert
p11711
I42
VSimpleName: getText
p11712
Vinsert
p11713
I27
VInfixExpression: ==
p11714
tp11715
I1
s(g9954
I42
g9955
Vinsert
p11716
I42
VSimpleName: reset
p11717
tp11718
I1
s(Vinsert
p11719
I42
VSimpleName: token
p11720
Vinsert
p11721
I42
VSimpleName: tok
p11722
tp11723
I1
s(g51
I42
g52
Vinsert
p11724
I36
VParenthesizedExpression
p11725
tp11726
I1
s(Vinsert
p11727
I42
VSimpleName: readLock
p11728
Vinsert
p11729
I9
VBooleanLiteral: false
p11730
tp11731
I1
s(Vinsert
p11732
I42
VSimpleName: getPoolingCount
p11733
Vinsert
p11734
I42
VSimpleName: getMinIdle
p11735
tp11736
I1
s(Vinsert
p11737
I42
VSimpleName: select
p11738
Vinsert
p11739
I43
VSimpleType: Map
p11740
tp11741
I1
s(g6612
I42
g6613
Vinsert
p11742
I11
VCastExpression
p11743
tp11744
I1
s(Vinsert
p11745
I42
VSimpleName: setBlob
p11746
Vinsert
p11747
I11
VCastExpression
p11748
tp11749
I1
s(g10454
I42
g10455
Vinsert
p11750
I43
VSimpleType: WallCheckResult
p11751
tp11752
I1
s(g4679
I42
g4680
Vinsert
p11753
I36
VParenthesizedExpression
p11754
tp11755
I1
s(g4674
I42
g4675
Vinsert
p11756
I42
VSimpleName: size
p11757
tp11758
I1
s(g2795
I42
g2796
Vinsert
p11759
I43
VSimpleType: String
p11760
tp11761
I1
s(g8692
I42
g8693
Vinsert
p11762
I42
VSimpleName: keepComments
p11763
tp11764
I1
s(Vinsert
p11765
I42
VSimpleName: newInstance
p11766
Vinsert
p11767
I57
VTypeLiteral
p11768
tp11769
I1
s(g2334
I42
g2335
Vinsert
p11770
I42
VSimpleName: json
p11771
tp11772
I2
s(g632
I42
g633
Vinsert
p11773
I43
VSimpleType: SQLException
p11774
tp11775
I1
s(g7888
I42
g7889
Vinsert
p11776
I42
VSimpleName: parser
p11777
tp11778
I6
s(g2548
I42
g2549
Vinsert
p11779
I42
VSimpleName: exprObj
p11780
tp11781
I2
s(g2150
I42
g2151
Vinsert
p11782
I60
VVariableDeclarationStatement
p11783
tp11784
I31
s(Vinsert
p11785
I42
VSimpleName: assertEquals
p11786
Vinsert
p11787
I45
VStringLiteral: "com.xxx.a(int)"
p11788
tp11789
I1
s(Vinsert
p11790
I42
VSimpleName: registerMBean
p11791
Vinsert
p11792
I42
VSimpleName: objectName
p11793
tp11794
I3
s(Vinsert
p11795
I42
VSimpleName: getErrorCode
p11796
Vinsert
p11797
I59
VVariableDeclarationFragment
p11798
tp11799
I2
s(g7840
I42
g7841
Vinsert
p11800
I43
VSimpleType: OracleCursorExpr
p11801
tp11802
I2
s(Vinsert
p11803
I42
VSimpleName: token
p11804
Vinsert
p11805
I42
VSimpleName: TeradataSelectQueryBlock
p11806
tp11807
I2
s(Vinsert
p11808
I42
VSimpleName: setName
p11809
Vinsert
p11810
I21
VExpressionStatement
p11811
tp11812
I26
s(g1135
I42
g1136
Vinsert
p11813
I42
VSimpleName: stat
p11814
tp11815
I3
s(Vinsert
p11816
I42
VSimpleName: formatOdps
p11817
Vinsert
p11818
I45
VStringLiteral: "\u005ct\u005ctfirst_name range 90 preceding) as department_total\u005cn"
p11819
tp11820
I1
s(g4694
I42
g4695
Vinsert
p11821
I45
VStringLiteral: "\u005ct\u005ctCELL_FLASH_CACHE DEFAULT\u005cn"
p11822
tp11823
I5
s(g9595
I42
g9596
Vinsert
p11824
I42
VSimpleName: restartMaster
p11825
tp11826
I1
s(Vinsert
p11827
I42
VSimpleName: newUpdater
p11828
Vinsert
p11829
I42
VSimpleName: jdbcExecuteTimeNano
p11830
tp11831
I1
s(g4308
I42
g4309
Vinsert
p11832
I40
VQualifiedName: words.length
p11833
tp11834
I1
s(Vinsert
p11835
I42
VSimpleName: toLowerCase
p11836
Vinsert
p11837
I42
VSimpleName: function
p11838
tp11839
I2
s(Vinsert
p11840
I42
VSimpleName: getNumber
p11841
Vinsert
p11842
I8
VBlock
p11843
tp11844
I9
s(Vinsert
p11845
I42
VSimpleName: getDistionOption
p11846
Vinsert
p11847
I42
VSimpleName: getDistionOption
p11848
tp11849
I2
s(Vinsert
p11850
I42
VSimpleName: equals
p11851
Vinsert
p11852
I37
VPostfixExpression: ++
p11853
tp11854
I1
s(Vinsert
p11855
I42
VSimpleName: accept
p11856
Vinsert
p11857
I42
VSimpleName: itemSize
p11858
tp11859
I1
s(g3770
I42
g3771
Vinsert
p11860
I62
VInstanceofExpression
p11861
tp11862
I2
s(g11420
I42
g11421
Vinsert
p11863
I42
VSimpleName: stmt
p11864
tp11865
I1
s(g4982
I42
g4983
Vinsert
p11866
I42
VSimpleName: print0
p11867
tp11868
I1
s(Vinsert
p11869
I42
VSimpleName: getRelationships
p11870
Vinsert
p11871
I42
VSimpleName: size
p11872
tp11873
I1
s(g10626
I42
g10627
Vinsert
p11874
I42
VSimpleName: getFilterClassNames
p11875
tp11876
I1
s(g2454
I42
g2455
Vinsert
p11877
I42
VSimpleName: schema
p11878
tp11879
I2
s(Vinsert
p11880
I42
VSimpleName: toSQLString
p11881
Vinsert
p11882
I45
VStringLiteral: "\u005cn\u005ctcust_email VARCHAR2(40)"
p11883
tp11884
I2
s(Vinsert
p11885
I42
VSimpleName: token
p11886
Vinsert
p11887
I40
VQualifiedName: SQLJoinTableSource.JoinType.CROSS_APPLY
p11888
tp11889
I1
s(Vinsert
p11890
I42
VSimpleName: primary
p11891
Vinsert
p11892
I42
VSimpleName: accept
p11893
tp11894
I2
s(g10066
I42
g10067
Vinsert
p11895
I8
VBlock
p11896
tp11897
I8
s(g11270
I42
g11271
Vinsert
p11898
I45
VStringLiteral: "msg"
p11899
tp11900
I1
s(g517
I42
g518
Vinsert
p11901
I22
VFieldAccess
p11902
tp11903
I1
s(g2024
I42
g2025
Vinsert
p11904
I42
VSimpleName: map
p11905
tp11906
I4
s(g7083
I42
g7084
Vinsert
p11907
I42
VSimpleName: ch
p11908
tp11909
I7
s(Vinsert
p11910
I42
VSimpleName: isRef
p11911
Vinsert
p11912
I25
VIfStatement
p11913
tp11914
I1
s(Vinsert
p11915
I42
VSimpleName: setMinEvictableIdleTimeMillis
p11916
Vinsert
p11917
I54
VTryStatement
p11918
tp11919
I1
s(Vinsert
p11920
I42
VSimpleName: addEnvironment
p11921
Vinsert
p11922
I52
VThisExpression
p11923
tp11924
I1
s(Vinsert
p11925
I42
VSimpleName: isInfoEnabled
p11926
Vinsert
p11927
I22
VFieldAccess
p11928
tp11929
I1
s(Vinsert
p11930
I42
VSimpleName: addTableSource
p11931
Vinsert
p11932
I52
VThisExpression
p11933
tp11934
I1
s(Vinsert
p11935
I42
VSimpleName: setInterval
p11936
Vinsert
p11937
I21
VExpressionStatement
p11938
tp11939
I2
s(Vinsert
p11940
I42
VSimpleName: start
p11941
Vinsert
p11942
I43
VSimpleType: ServletContextEvent
p11943
tp11944
I1
s(g1042
I42
g1043
Vinsert
p11945
I42
VSimpleName: setTestOnBorrow
p11946
tp11947
I2
s(g5450
I42
g5451
Vinsert
p11948
I42
VSimpleName: getMethodName
p11949
tp11950
I1
s(g5633
I42
g5634
Vinsert
p11951
I8
VBlock
p11952
tp11953
I11
s(g7275
I42
g7276
Vinsert
p11954
I42
VSimpleName: resultSql
p11955
tp11956
I1
s(g10765
I42
g10766
Vinsert
p11957
I52
VThisExpression
p11958
tp11959
I1
s(Vinsert
p11960
I42
VSimpleName: accept
p11961
Vinsert
p11962
I42
VSimpleName: getSegementName
p11963
tp11964
I1
s(Vinsert
p11965
I42
VSimpleName: set
p11966
Vinsert
p11967
I42
VSimpleName: SQLClientInfoException
p11968
tp11969
I1
s(g2469
I42
g2470
Vinsert
p11970
I78
VMarkerAnnotation
p11971
tp11972
I1
s(Vinsert
p11973
I42
VSimpleName: assertTrue
p11974
Vinsert
p11975
I45
VStringLiteral: " FROM `paybank` AS `Extent1`"
p11976
tp11977
I1
s(Vinsert
p11978
I42
VSimpleName: assertNotNull
p11979
Vinsert
p11980
I42
VSimpleName: getQuery
p11981
tp11982
I2
s(Vinsert
p11983
I42
VSimpleName: parseStatement
p11984
Vinsert
p11985
I43
VSimpleType: SQLStatement
p11986
tp11987
I10
s(g4563
I42
g4564
Vinsert
p11988
I40
VQualifiedName: Token.END
p11989
tp11990
I1
s(Vinsert
p11991
I42
VSimpleName: size
p11992
Vinsert
p11993
I43
VSimpleType: ArrayList
p11994
tp11995
I5
s(Vinsert
p11996
I42
VSimpleName: equals
p11997
Vinsert
p11998
I10
VBreakStatement
p11999
tp12000
I2
s(Vinsert
p12001
I42
VSimpleName: assertTrue
p12002
Vinsert
p12003
I45
VStringLiteral: "LOCK TABLES `m_rpt_adgroupeffect` READ /*!32311 LOCAL */"
p12004
tp12005
I1
s(Vinsert
p12006
I42
VSimpleName: token
p12007
Vinsert
p12008
I45
VStringLiteral: "Error"
p12009
tp12010
I1
s(Vinsert
p12011
I42
VSimpleName: getSubQuery
p12012
Vinsert
p12013
I42
VSimpleName: print
p12014
tp12015
I1
s(g2707
I42
g2708
Vinsert
p12016
I76
VWildcardType: ?
p12017
tp12018
I1
s(Vinsert
p12019
I42
VSimpleName: equals
p12020
Vinsert
p12021
I42
VSimpleName: createPhysicalXAConnetion
p12022
tp12023
I1
s(Vinsert
p12024
I42
VSimpleName: add
p12025
Vinsert
p12026
I42
VSimpleName: ValuesClause
p12027
tp12028
I1
s(Vinsert
p12029
I42
VSimpleName: createStatement
p12030
Vinsert
p12031
I43
VSimpleType: Exception
p12032
tp12033
I3
s(Vinsert
p12034
I42
VSimpleName: acceptChild
p12035
Vinsert
p12036
I21
VExpressionStatement
p12037
tp12038
I18
s(g10257
I42
g10258
Vinsert
p12039
I42
VSimpleName: PreparedStatement
p12040
tp12041
I3
s(g7542
I42
g7543
Vinsert
p12042
I25
VIfStatement
p12043
tp12044
I1
s(Vinsert
p12045
I42
VSimpleName: get
p12046
Vinsert
p12047
I3
VArrayCreation
p12048
tp12049
I1
s(Vinsert
p12050
I42
VSimpleName: toPGString
p12051
Vinsert
p12052
I45
VStringLiteral: "\u005ct\u005ct\u005ct\u005ctUNION ALL\u005cn"
p12053
tp12054
I1
s(Vinsert
p12055
I42
VSimpleName: setLowBound
p12056
Vinsert
p12057
I21
VExpressionStatement
p12058
tp12059
I1
s(g3623
I42
g3624
Vinsert
p12060
I45
VStringLiteral: "RunningCount"
p12061
tp12062
I1
s(g5699
I42
g5700
Vinsert
p12063
I42
VSimpleName: stmt
p12064
tp12065
I2
s(g3485
I42
g3486
Vinsert
p12066
I40
VQualifiedName: Token.KEY.name
p12067
tp12068
I1
s(Vinsert
p12069
I42
VSimpleName: name
p12070
Vinsert
p12071
I14
VClassInstanceCreation
p12072
tp12073
I9
s(g10513
I42
g10514
Vinsert
p12074
I42
VSimpleName: setSelect
p12075
tp12076
I2
s(Vinsert
p12077
I42
VSimpleName: indexFor
p12078
Vinsert
p12079
I41
VReturnStatement
p12080
tp12081
I1
s(Vinsert
p12082
I42
VSimpleName: parseCreateFunction
p12083
Vinsert
p12084
I21
VExpressionStatement
p12085
tp12086
I1
s(g8849
I42
g8850
Vinsert
p12087
I42
VSimpleName: bytes
p12088
tp12089
I1
s(Vinsert
p12090
I42
VSimpleName: getSQLState
p12091
Vinsert
p12092
I42
VSimpleName: e
p12093
tp12094
I2
s(Vinsert
p12095
I42
VSimpleName: toSQLString
p12096
Vinsert
p12097
I45
VStringLiteral: "\u005cn\u005ct\u005c"DATA\u005c" BLOB,"
p12098
tp12099
I2
s(g5429
I42
g5430
Vinsert
p12100
I52
VThisExpression
p12101
tp12102
I2
s(Vinsert
p12103
I42
VSimpleName: toSQLString
p12104
Vinsert
p12105
I42
VSimpleName: queryBlock
p12106
tp12107
I4
s(g10267
I42
g10268
Vinsert
p12108
I52
VThisExpression
p12109
tp12110
I2
s(g7947
I42
g7948
Vinsert
p12111
I42
VSimpleName: x
p12112
tp12113
I5
s(g2604
I42
g2605
Vinsert
p12114
I8
VBlock
p12115
tp12116
I1
s(Vinsert
p12117
I42
VSimpleName: nextToken
p12118
Vinsert
p12119
I42
VSimpleName: charsetExpr
p12120
tp12121
I1
s(g1022
I42
g1023
Vinsert
p12122
I32
VMethodInvocation
p12123
tp12124
I1
s(Vinsert
p12125
I42
VSimpleName: getString
p12126
Vinsert
p12127
I42
VSimpleName: response
p12128
tp12129
I1
s(g3554
I42
g3555
Vinsert
p12130
I42
VSimpleName: visitor
p12131
tp12132
I3
s(Vinsert
p12133
I42
VSimpleName: setTestOnBorrow
p12134
Vinsert
p12135
I42
VSimpleName: getProxyFilters
p12136
tp12137
I1
s(Vinsert
p12138
I42
VSimpleName: toSQLString
p12139
Vinsert
p12140
I45
VStringLiteral: "SELECT seller_no, invoice_date, SUM(invoice_amt) AS sales_amt\u005cn"
p12141
tp12142
I1
s(Vinsert
p12143
I42
VSimpleName: set
p12144
Vinsert
p12145
I42
VSimpleName: jdbcExecuteTimeNano
p12146
tp12147
I1
s(g10116
I42
g10117
Vinsert
p12148
I21
VExpressionStatement
p12149
tp12150
I1
s(g597
I42
g598
Vinsert
p12151
I41
VReturnStatement
p12152
tp12153
I2
s(Vinsert
p12154
I42
VSimpleName: getWhere
p12155
Vinsert
p12156
I42
VSimpleName: SQLSelectQueryBlock
p12157
tp12158
I6
s(Vinsert
p12159
I42
VSimpleName: getMethodStatDataList
p12160
Vinsert
p12161
I57
VTypeLiteral
p12162
tp12163
I1
s(g11611
I42
g11612
Vinsert
p12164
I45
VStringLiteral: "SELECT /*+mapjoin(tt)*/ id\u005cn"
p12165
tp12166
I1
s(g7440
I42
g7441
Vinsert
p12167
I39
VPrimitiveType: boolean
p12168
tp12169
I2
s(g2639
I42
g2640
Vinsert
p12170
I52
VThisExpression
p12171
tp12172
I2
s(Vinsert
p12173
I42
VSimpleName: isMergeAllow
p12174
Vinsert
p12175
I32
VMethodInvocation
p12176
tp12177
I2
s(g2775
I42
g2776
Vinsert
p12178
I42
VSimpleName: event
p12179
tp12180
I2
s(g306
I42
g307
Vinsert
p12181
I42
VSimpleName: identifierEquals
p12182
tp12183
I52
s(Vinsert
p12184
I42
VSimpleName: getItems
p12185
Vinsert
p12186
I42
VSimpleName: setName
p12187
tp12188
I1
s(Vinsert
p12189
I42
VSimpleName: getErrorCode
p12190
Vinsert
p12191
I33
VNullLiteral
p12192
tp12193
I1
s(g8166
I42
g8167
Vinsert
p12194
I7
VAssignment: =
p12195
tp12196
I1
s(g1012
I42
g1013
Vinsert
p12197
I42
VSimpleName: tableName
p12198
tp12199
I2
s(g932
I42
g933
Vinsert
p12200
I43
VSimpleType: Exception
p12201
tp12202
I1
s(g2930
I42
g2931
Vinsert
p12203
I45
VStringLiteral: " RELY"
p12204
tp12205
I1
s(g9433
I42
g9434
Vinsert
p12206
I21
VExpressionStatement
p12207
tp12208
I3
s(Vinsert
p12209
I42
VSimpleName: emptySet
p12210
Vinsert
p12211
I43
VSimpleType: Set
p12212
tp12213
I1
s(Vinsert
p12214
I42
VSimpleName: size
p12215
Vinsert
p12216
I42
VSimpleName: output
p12217
tp12218
I3
s(g7512
I42
g7513
Vinsert
p12219
I42
VSimpleName: SQLException
p12220
tp12221
I1
s(Vinsert
p12222
I42
VSimpleName: setLogName
p12223
Vinsert
p12224
I21
VExpressionStatement
p12225
tp12226
I2
s(Vinsert
p12227
I42
VSimpleName: createSQLStatementParser
p12228
Vinsert
p12229
I45
VStringLiteral: "\u005ct, ?)"
p12230
tp12231
I1
s(g5069
I42
g5070
Vinsert
p12232
I42
VSimpleName: insertStatement
p12233
tp12234
I1
s(Vinsert
p12235
I42
VSimpleName: getFile
p12236
Vinsert
p12237
I42
VSimpleName: getResourceURL
p12238
tp12239
I1
s(Vinsert
p12240
I42
VSimpleName: resolveTableName
p12241
Vinsert
p12242
I78
VMarkerAnnotation
p12243
tp12244
I2
s(g7310
I42
g7311
Vinsert
p12245
I40
VQualifiedName: java.util.concurrent.atomic.AtomicLong
p12246
tp12247
I3
s(g156
I42
g157
Vinsert
p12248
I54
VTryStatement
p12249
tp12250
I2
s(g937
I42
g938
Vinsert
p12251
I5
VArrayType: byte[]
p12252
tp12253
I1
s(Vinsert
p12254
I42
VSimpleName: evalExpr
p12255
Vinsert
p12256
I42
VSimpleName: test_abs_error_1
p12257
tp12258
I3
s(g9041
I42
g9042
Vinsert
p12259
I45
VStringLiteral: "SET COMMENT "
p12260
tp12261
I1
s(Vinsert
p12262
I42
VSimpleName: reset
p12263
Vinsert
p12264
I42
VSimpleName: reset
p12265
tp12266
I2
s(g987
I42
g988
Vinsert
p12267
I42
VSimpleName: test_setBinaryStream
p12268
tp12269
I1
s(Vinsert
p12270
I42
VSimpleName: assertEquals
p12271
Vinsert
p12272
I45
VStringLiteral: "\u005cn\u005ctPARTITION p2 VALUES LESS THAN MAXVALUE"
p12273
tp12274
I5
s(g8873
I42
g8874
Vinsert
p12275
I21
VExpressionStatement
p12276
tp12277
I19
s(Vinsert
p12278
I42
VSimpleName: getFetchDirection
p12279
Vinsert
p12280
I45
VStringLiteral: "cName"
p12281
tp12282
I1
s(g1700
I42
g1701
Vinsert
p12283
I42
VSimpleName: Exception
p12284
tp12285
I1
s(g11330
I42
g11331
Vinsert
p12286
I42
VSimpleName: block
p12287
tp12288
I1
s(Vinsert
p12289
I42
VSimpleName: output
p12290
Vinsert
p12291
I42
VSimpleName: owner
p12292
tp12293
I3
s(Vinsert
p12294
I42
VSimpleName: toString
p12295
Vinsert
p12296
I42
VSimpleName: callerFQCN
p12297
tp12298
I2
s(Vinsert
p12299
I42
VSimpleName: getTableName
p12300
Vinsert
p12301
I43
VSimpleType: Object
p12302
tp12303
I2
s(g567
I42
g568
Vinsert
p12304
I42
VSimpleName: provider
p12305
tp12306
I3
s(g3118
I42
g3119
Vinsert
p12307
I40
VQualifiedName: Token.DAY
p12308
tp12309
I1
s(g6534
I42
g6535
Vinsert
p12310
I42
VSimpleName: delta
p12311
tp12312
I1
s(Vinsert
p12313
I42
VSimpleName: setValue
p12314
Vinsert
p12315
I42
VSimpleName: PGCircleExpr
p12316
tp12317
I2
s(g5012
I42
g5013
Vinsert
p12318
I42
VSimpleName: token
p12319
tp12320
I2
s(g713
I42
g714
Vinsert
p12321
I42
VSimpleName: parseStatements
p12322
tp12323
I2
s(Vinsert
p12324
I42
VSimpleName: isGlobal
p12325
Vinsert
p12326
I42
VSimpleName: print
p12327
tp12328
I1
s(g5564
I42
g5565
Vinsert
p12329
I60
VVariableDeclarationStatement
p12330
tp12331
I1
s(Vinsert
p12332
I42
VSimpleName: getClass
p12333
Vinsert
p12334
I42
VSimpleName: methodParam
p12335
tp12336
I1
s(g10116
I42
g10117
Vinsert
p12337
I42
VSimpleName: connectionFactory
p12338
tp12339
I1
s(g8075
I42
g8076
Vinsert
p12340
I25
VIfStatement
p12341
tp12342
I1
s(g9243
I42
g9244
Vinsert
p12343
I32
VMethodInvocation
p12344
tp12345
I13
s(Vinsert
p12346
I42
VSimpleName: setPassword
p12347
Vinsert
p12348
I32
VMethodInvocation
p12349
tp12350
I1
s(g607
I42
g608
Vinsert
p12351
I42
VSimpleName: trim_option
p12352
tp12353
I2
s(Vinsert
p12354
I42
VSimpleName: removeTrace
p12355
Vinsert
p12356
I42
VSimpleName: isPoolPreparedStatements
p12357
tp12358
I1
s(Vinsert
p12359
I42
VSimpleName: setValue
p12360
Vinsert
p12361
I42
VSimpleName: OracleSizeExpr
p12362
tp12363
I2
s(g10031
I42
g10032
Vinsert
p12364
I7
VAssignment: =
p12365
tp12366
I13
s(g1958
I42
g1959
Vinsert
p12367
I45
VStringLiteral: "\u005ct\u005ct\u005ctCELL_FLASH_CACHE DEFAULT\u005cn"
p12368
tp12369
I3
s(g7741
I42
g7742
Vinsert
p12370
I49
VSwitchCase
p12371
tp12372
I1
s(g251
I42
g252
Vinsert
p12373
I42
VSimpleName: statement
p12374
tp12375
I1
s(g2770
I42
g2771
Vinsert
p12376
I42
VSimpleName: values
p12377
tp12378
I1
s(g4854
I42
g4855
Vinsert
p12379
I42
VSimpleName: setUsing
p12380
tp12381
I1
s(g557
I42
g558
Vinsert
p12382
I45
VStringLiteral: "\u005cn\u005ctWHERE ROWNUM <= 20"
p12383
tp12384
I1
s(g9410
I42
g9411
Vinsert
p12385
I42
VSimpleName: DruidDataSource
p12386
tp12387
I2
s(g7477
I42
g7478
Vinsert
p12388
I8
VBlock
p12389
tp12390
I2
s(g11365
I42
g11366
Vinsert
p12391
I42
VSimpleName: print0
p12392
tp12393
I1
s(g10412
I42
g10413
Vinsert
p12394
I42
VSimpleName: x
p12395
tp12396
I2
s(Vinsert
p12397
I42
VSimpleName: toPGString
p12398
Vinsert
p12399
I45
VStringLiteral: "\u005ct\u005ctOR M.OWNER LIKE ('%' || ? || '%')\u005cn"
p12400
tp12401
I1
s(g1675
I42
g1676
Vinsert
p12402
I58
VVariableDeclarationExpression
p12403
tp12404
I1
s(g404
I42
g405
Vinsert
p12405
I45
VStringLiteral: "WHERE s.time_id = t.time_id\u005cn"
p12406
tp12407
I1
s(g6265
I42
g6266
Vinsert
p12408
I31
VMethodDeclaration
p12409
tp12410
I3
s(g7697
I42
g7698
Vinsert
p12411
I45
VStringLiteral: "\u005ct\u005ctSELECT g.id, g.link, g.data, sg.depth + 1\u005cn"
p12412
tp12413
I1
s(Vinsert
p12414
I42
VSimpleName: assertTrue
p12415
Vinsert
p12416
I45
VStringLiteral: "select last_batch,spid=cast(spid as varchar(20)),(SELECT text FROM sys.dm_exec_sql_text(sql_handle)) AS query_text,(SELECT text FROM sys.dm_exec_sql_text(context_info)) AS query_text1,* from master..sysprocesses where dbid=db_id('heecerp') order by master..sysprocesses.last_batch desc"
p12417
tp12418
I1
s(Vinsert
p12419
I42
VSimpleName: setParent
p12420
Vinsert
p12421
I42
VSimpleName: withinGroup
p12422
tp12423
I3
s(g2697
I42
g2698
Vinsert
p12424
I32
VMethodInvocation
p12425
tp12426
I53
s(Vinsert
p12427
I42
VSimpleName: parseTop
p12428
Vinsert
p12429
I42
VSimpleName: top
p12430
tp12431
I1
s(g9662
I42
g9663
Vinsert
p12432
I42
VSimpleName: print
p12433
tp12434
I1
s(Vinsert
p12435
I42
VSimpleName: getWith
p12436
Vinsert
p12437
I42
VSimpleName: visit
p12438
tp12439
I1
s(g6475
I42
g6476
Vinsert
p12440
I42
VSimpleName: error
p12441
tp12442
I1
s(Vinsert
p12443
I42
VSimpleName: setExceptionsInto
p12444
Vinsert
p12445
I27
VInfixExpression: !=
p12446
tp12447
I3
s(Vinsert
p12448
I42
VSimpleName: stringVal
p12449
Vinsert
p12450
I40
VQualifiedName: Token.WITH
p12451
tp12452
I1
s(Vinsert
p12453
I42
VSimpleName: getTables
p12454
Vinsert
p12455
I45
VStringLiteral: "fields : "
p12456
tp12457
I5
s(g1155
I42
g1156
Vinsert
p12458
I59
VVariableDeclarationFragment
p12459
tp12460
I1
s(g6252
I42
g6253
Vinsert
p12461
I45
VStringLiteral: "ROLLBACK"
p12462
tp12463
I1
s(Vinsert
p12464
I42
VSimpleName: put
p12465
Vinsert
p12466
I42
VSimpleName: colData
p12467
tp12468
I2
s(g5554
I42
g5555
Vinsert
p12469
I43
VSimpleType: InputStreamReader
p12470
tp12471
I1
s(g7707
I42
g7708
Vinsert
p12472
I32
VMethodInvocation
p12473
tp12474
I2
s(Vinsert
p12475
I42
VSimpleName: getConnectionHolder
p12476
Vinsert
p12477
I34
VNumberLiteral: 0
p12478
tp12479
I1
s(Vinsert
p12480
I42
VSimpleName: nameHashCode64
p12481
Vinsert
p12482
I42
VSimpleName: column
p12483
tp12484
I2
s(g8155
I42
g8156
Vinsert
p12485
I43
VSimpleType: SQLExprTableSource
p12486
tp12487
I2
s(Vinsert
p12488
I42
VSimpleName: getTableSources
p12489
Vinsert
p12490
I32
VMethodInvocation
p12491
tp12492
I2
s(g6622
I42
g6623
Vinsert
p12493
I21
VExpressionStatement
p12494
tp12495
I1
s(g4669
I42
g4670
Vinsert
p12496
I21
VExpressionStatement
p12497
tp12498
I1
s(g12103
I42
g12104
Vinsert
p12499
I42
VSimpleName: getQuery
p12500
tp12501
I2
s(g7216
I42
g7217
Vinsert
p12502
I14
VClassInstanceCreation
p12503
tp12504
I1
s(Vinsert
p12505
I42
VSimpleName: getInstance
p12506
Vinsert
p12507
I42
VSimpleName: dataSourceStats
p12508
tp12509
I2
s(g5343
I42
g5344
Vinsert
p12510
I42
VSimpleName: Enumeration
p12511
tp12512
I1
s(Vinsert
p12513
I42
VSimpleName: getClass
p12514
Vinsert
p12515
I45
VStringLiteral: "passwordCallback Error"
p12516
tp12517
I1
s(Vinsert
p12518
I42
VSimpleName: assertEquals
p12519
Vinsert
p12520
I38
VPrefixExpression: ++
p12521
tp12522
I2
s(Vinsert
p12523
I42
VSimpleName: getGroupBy
p12524
Vinsert
p12525
I42
VSimpleName: setParent
p12526
tp12527
I1
s(g8233
I42
g8234
Vinsert
p12528
I42
VSimpleName: token
p12529
tp12530
I1
s(g101
I42
g102
Vinsert
p12531
I34
VNumberLiteral: 1
p12532
tp12533
I1
s(Vinsert
p12534
I42
VSimpleName: decode
p12535
Vinsert
p12536
I40
VQualifiedName: com.alibaba.druid.util.IOUtils
p12537
tp12538
I1
s(g10087
I42
g10088
Vinsert
p12539
I54
VTryStatement
p12540
tp12541
I1
s(Vinsert
p12542
I42
VSimpleName: setValue
p12543
Vinsert
p12544
I42
VSimpleName: PGLineSegmentsExpr
p12545
tp12546
I2
s(Vinsert
p12547
I42
VSimpleName: get
p12548
Vinsert
p12549
I83
VModifier: static
p12550
tp12551
I4
s(g3332
I42
g3333
Vinsert
p12552
I42
VSimpleName: iter
p12553
tp12554
I4
s(Vinsert
p12555
I42
VSimpleName: getURIStatData
p12556
Vinsert
p12557
I42
VSimpleName: Object
p12558
tp12559
I1
s(Vinsert
p12560
I42
VSimpleName: getConfig
p12561
Vinsert
p12562
I42
VSimpleName: getViolations
p12563
tp12564
I1
s(Vinsert
p12565
I42
VSimpleName: unwrap
p12566
Vinsert
p12567
I42
VSimpleName: ps
p12568
tp12569
I2
s(g7264
I42
g7265
Vinsert
p12570
I42
VSimpleName: config
p12571
tp12572
I1
s(Vinsert
p12573
I42
VSimpleName: queryForList
p12574
Vinsert
p12575
I21
VExpressionStatement
p12576
tp12577
I1
s(Vinsert
p12578
I42
VSimpleName: getTables
p12579
Vinsert
p12580
I42
VSimpleName: PhoenixSchemaStatVisitor
p12581
tp12582
I1
s(g11727
I42
g11728
Vinsert
p12583
I39
VPrimitiveType: boolean
p12584
tp12585
I1
s(Vinsert
p12586
I42
VSimpleName: add
p12587
Vinsert
p12588
I42
VSimpleName: statementList
p12589
tp12590
I9
s(g2364
I42
g2365
Vinsert
p12591
I42
VSimpleName: Base64
p12592
tp12593
I1
s(g11659
I42
g11660
Vinsert
p12594
I42
VSimpleName: assertEquals
p12595
tp12596
I2
s(g2304
I42
g2305
Vinsert
p12597
I42
VSimpleName: PGSelectStatement
p12598
tp12599
I1
s(Vinsert
p12600
I42
VSimpleName: assertTrue
p12601
Vinsert
p12602
I42
VSimpleName: tearDown
p12603
tp12604
I1
s(g12573
I42
g12574
Vinsert
p12605
I42
VSimpleName: executor
p12606
tp12607
I2
s(g1652
I42
g1653
Vinsert
p12608
I44
VSingleVariableDeclaration
p12609
tp12610
I1
s(Vinsert
p12611
I42
VSimpleName: error
p12612
Vinsert
p12613
I42
VSimpleName: value
p12614
tp12615
I1
s(Vinsert
p12616
I42
VSimpleName: assertEquals
p12617
Vinsert
p12618
I42
VSimpleName: sin
p12619
tp12620
I1
s(g4640
I42
g4641
Vinsert
p12621
I39
VPrimitiveType: void
p12622
tp12623
I1
s(g1125
I42
g1126
Vinsert
p12624
I8
VBlock
p12625
tp12626
I1
s(g7532
I42
g7533
Vinsert
p12627
I42
VSimpleName: row
p12628
tp12629
I1
s(g8449
I42
g8450
Vinsert
p12630
I25
VIfStatement
p12631
tp12632
I1
s(g4288
I42
g4289
Vinsert
p12633
I44
VSingleVariableDeclaration
p12634
tp12635
I2
s(g3022
I42
g3023
Vinsert
p12636
I52
VThisExpression
p12637
tp12638
I1
s(Vinsert
p12639
I42
VSimpleName: toString
p12640
Vinsert
p12641
I45
VStringLiteral: "abcd\u005cn"
p12642
tp12643
I6
s(g4640
I42
g4641
Vinsert
p12644
I42
VSimpleName: assertNotNull
p12645
tp12646
I1
s(g7707
I42
g7708
Vinsert
p12647
I42
VSimpleName: MySqlShowProcessListStatement
p12648
tp12649
I2
s(g7903
I42
g7904
Vinsert
p12650
I42
VSimpleName: setMaxPoolSize
p12651
tp12652
I1
s(Vinsert
p12653
I42
VSimpleName: expr
p12654
Vinsert
p12655
I43
VSimpleType: MySqlBinlogStatement
p12656
tp12657
I1
s(g1564
I42
g1565
Vinsert
p12658
I42
VSimpleName: x
p12659
tp12660
I3
s(Vinsert
p12661
I42
VSimpleName: nextToken
p12662
Vinsert
p12663
I62
VInstanceofExpression
p12664
tp12665
I1
s(Vinsert
p12666
I42
VSimpleName: equals
p12667
Vinsert
p12668
I42
VSimpleName: tab
p12669
tp12670
I2
s(Vinsert
p12671
I42
VSimpleName: setSubPartitionsCount
p12672
Vinsert
p12673
I42
VSimpleName: intValue
p12674
tp12675
I1
s(g10433
I42
g10434
Vinsert
p12676
I33
VNullLiteral
p12677
tp12678
I1
s(Vinsert
p12679
I42
VSimpleName: add
p12680
Vinsert
p12681
I42
VSimpleName: classes
p12682
tp12683
I1
s(g176
I42
g177
Vinsert
p12684
I42
VSimpleName: println
p12685
tp12686
I1
s(g3261
I42
g3262
Vinsert
p12687
I52
VThisExpression
p12688
tp12689
I1
s(g10209
I42
g10210
Vinsert
p12690
I40
VQualifiedName: statValue.connectCount
p12691
tp12692
I1
s(g2223
I42
g2224
Vinsert
p12693
I62
VInstanceofExpression
p12694
tp12695
I2
s(g4689
I42
g4690
Vinsert
p12696
I45
VStringLiteral: "\u005ct\u005ct\u005ct, ITEM.ITEM_QUANTITY, SYS_ITEM.CATALOG_SOFTWARE_FLAG, P.COST_PRICE, P.COST_PRICE_PARAMETER, P.CONFIRM_FLAG\u005cn"
p12697
tp12698
I1
s(g2289
I42
g2290
Vinsert
p12699
I34
VNumberLiteral: 1024
p12700
tp12701
I1
s(g11335
I42
g11336
Vinsert
p12702
I45
VStringLiteral: "select * from t where id = "
p12703
tp12704
I1
s(g4694
I42
g4695
Vinsert
p12705
I45
VStringLiteral: "\u005ctENABLE STORAGE IN ROW\u005cn"
p12706
tp12707
I3
s(g2168
I42
g2169
Vinsert
p12708
I52
VThisExpression
p12709
tp12710
I1
s(Vinsert
p12711
I42
VSimpleName: getMemoryMXBean
p12712
Vinsert
p12713
I43
VSimpleType: JdbcSqlStat
p12714
tp12715
I1
s(Vinsert
p12716
I42
VSimpleName: createTransactionId
p12717
Vinsert
p12718
I32
VMethodInvocation
p12719
tp12720
I4
s(Vinsert
p12721
I42
VSimpleName: expr
p12722
Vinsert
p12723
I42
VSimpleName: lexer
p12724
tp12725
I11
s(Vinsert
p12726
I42
VSimpleName: setReadOnly
p12727
Vinsert
p12728
I42
VSimpleName: PoolableConnection
p12729
tp12730
I1
s(g6
I42
g7
Vinsert
p12731
I34
VNumberLiteral: 100
p12732
tp12733
I1
s(Vinsert
p12734
I42
VSimpleName: visit
p12735
Vinsert
p12736
I42
VSimpleName: full
p12737
tp12738
I1
s(g3775
I42
g3776
Vinsert
p12739
I42
VSimpleName: testExpr
p12740
tp12741
I3
s(Vinsert
p12742
I42
VSimpleName: size
p12743
Vinsert
p12744
I42
VSimpleName: MySqlCreateTableStatement
p12745
tp12746
I1
s(g8734
I42
g8735
Vinsert
p12747
I32
VMethodInvocation
p12748
tp12749
I4
s(g9670
I42
g9671
Vinsert
p12750
I42
VSimpleName: parser
p12751
tp12752
I91
s(Vinsert
p12753
I42
VSimpleName: endVisit
p12754
Vinsert
p12755
I42
VSimpleName: comment
p12756
tp12757
I1
s(Vinsert
p12758
I42
VSimpleName: add
p12759
Vinsert
p12760
I42
VSimpleName: setMaxActive
p12761
tp12762
I1
s(Vinsert
p12763
I42
VSimpleName: setFilters
p12764
Vinsert
p12765
I42
VSimpleName: driver
p12766
tp12767
I1
s(Vinsert
p12768
I42
VSimpleName: size
p12769
Vinsert
p12770
I42
VSimpleName: params
p12771
tp12772
I2
s(g10011
I42
g10012
Vinsert
p12773
I42
VSimpleName: statement
p12774
tp12775
I1
s(Vinsert
p12776
I42
VSimpleName: incrementTruncateCount
p12777
Vinsert
p12778
I42
VSimpleName: incrementSelectCount
p12779
tp12780
I1
s(Vinsert
p12781
I42
VSimpleName: currentTimeMillis
p12782
Vinsert
p12783
I42
VSimpleName: startFGC
p12784
tp12785
I1
s(Vinsert
p12786
I42
VSimpleName: toSQLString
p12787
Vinsert
p12788
I42
VSimpleName: SQLTransformUtils
p12789
tp12790
I1
s(Vinsert
p12791
I42
VSimpleName: getUsing
p12792
Vinsert
p12793
I34
VNumberLiteral: 0
p12794
tp12795
I1
s(Vinsert
p12796
I42
VSimpleName: setUpdateAllow
p12797
Vinsert
p12798
I42
VSimpleName: sql
p12799
tp12800
I1
s(Vinsert
p12801
I42
VSimpleName: setObject
p12802
Vinsert
p12803
I60
VVariableDeclarationStatement
p12804
tp12805
I1
s(g5787
I42
g5788
Vinsert
p12806
I42
VSimpleName: Assert
p12807
tp12808
I1
s(g6328
I42
g6329
Vinsert
p12809
I34
VNumberLiteral: 4
p12810
tp12811
I1
s(Vinsert
p12812
I42
VSimpleName: loadClass
p12813
Vinsert
p12814
I42
VSimpleName: Class
p12815
tp12816
I1
s(Vinsert
p12817
I42
VSimpleName: expr
p12818
Vinsert
p12819
I43
VSimpleType: MySqlBooleanExpr
p12820
tp12821
I1
s(Vinsert
p12822
I42
VSimpleName: newCondition
p12823
Vinsert
p12824
I42
VSimpleName: lock
p12825
tp12826
I2
s(g11808
I42
g11809
Vinsert
p12827
I42
VSimpleName: stmt
p12828
tp12829
I11
s(g1665
I42
g1666
Vinsert
p12830
I45
VStringLiteral: "\u005ctSELECT to_char(SYSDATE + INTERVAL '1' YEAR, 'yyyy-mm-dd HH24:mi:ss')\u005cn"
p12831
tp12832
I1
s(Vinsert
p12833
I42
VSimpleName: println
p12834
Vinsert
p12835
I42
VSimpleName: result
p12836
tp12837
I2
s(g6992
I42
g6993
Vinsert
p12838
I11
VCastExpression
p12839
tp12840
I2
s(g11634
I42
g11635
Vinsert
p12841
I43
VSimpleType: JdbcSqlStat
p12842
tp12843
I2
s(Vinsert
p12844
I42
VSimpleName: getColumns
p12845
Vinsert
p12846
I59
VVariableDeclarationFragment
p12847
tp12848
I10
s(Vinsert
p12849
I42
VSimpleName: simplify
p12850
Vinsert
p12851
I43
VSimpleType: SQLIdentifierExpr
p12852
tp12853
I2
s(Vinsert
p12854
I42
VSimpleName: getXAConnectionID
p12855
Vinsert
p12856
I42
VSimpleName: Xid
p12857
tp12858
I1
s(Vinsert
p12859
I42
VSimpleName: put
p12860
Vinsert
p12861
I45
VStringLiteral: "AT"
p12862
tp12863
I1
s(Vinsert
p12864
I42
VSimpleName: parseInt
p12865
Vinsert
p12866
I42
VSimpleName: property
p12867
tp12868
I1
s(Vinsert
p12869
I42
VSimpleName: checkUnion
p12870
Vinsert
p12871
I43
VSimpleType: SQLUnionQuery
p12872
tp12873
I1
s(g2900
I42
g2901
Vinsert
p12874
I42
VSimpleName: StackTraceElement
p12875
tp12876
I1
s(g2992
I42
g2993
Vinsert
p12877
I8
VBlock
p12878
tp12879
I7
s(Vinsert
p12880
I42
VSimpleName: assertEquals
p12881
Vinsert
p12882
I42
VSimpleName: getBrowserSafariCount
p12883
tp12884
I1
s(g11020
I42
g11021
Vinsert
p12885
I42
VSimpleName: unit
p12886
tp12887
I2
s(Vinsert
p12888
I42
VSimpleName: accept
p12889
Vinsert
p12890
I42
VSimpleName: x
p12891
tp12892
I34
s(Vinsert
p12893
I42
VSimpleName: isEmpty
p12894
Vinsert
p12895
I40
VQualifiedName: JdbcConstants.MYSQL
p12896
tp12897
I1
s(g3002
I42
g3003
Vinsert
p12898
I25
VIfStatement
p12899
tp12900
I1
s(Vinsert
p12901
I42
VSimpleName: getOSAndroid43Count
p12902
Vinsert
p12903
I42
VSimpleName: data
p12904
tp12905
I2
s(Vinsert
p12906
I42
VSimpleName: addAndGet
p12907
Vinsert
p12908
I42
VSimpleName: stringReadLength
p12909
tp12910
I2
s(Vinsert
p12911
I42
VSimpleName: getMaxActive
p12912
Vinsert
p12913
I42
VSimpleName: assertEquals
p12914
tp12915
I2
s(g7007
I42
g7008
Vinsert
p12916
I59
VVariableDeclarationFragment
p12917
tp12918
I1
s(g1559
I42
g1560
Vinsert
p12919
I7
VAssignment: =
p12920
tp12921
I3
s(Vinsert
p12922
I42
VSimpleName: size
p12923
Vinsert
p12924
I42
VSimpleName: conditions
p12925
tp12926
I2
s(g4819
I42
g4820
Vinsert
p12927
I45
VStringLiteral: "\u005cn\u005ct\u005ctOR d.indkey[4] = a.attnum"
p12928
tp12929
I1
s(Vinsert
p12930
I42
VSimpleName: getOrderBy
p12931
Vinsert
p12932
I42
VSimpleName: getOrderBy
p12933
tp12934
I1
s(g2329
I42
g2330
Vinsert
p12935
I42
VSimpleName: properties
p12936
tp12937
I1
s(Vinsert
p12938
I42
VSimpleName: setErrorLogging
p12939
Vinsert
p12940
I42
VSimpleName: clone
p12941
tp12942
I1
s(Vinsert
p12943
I42
VSimpleName: clone
p12944
Vinsert
p12945
I42
VSimpleName: block
p12946
tp12947
I1
s(Vinsert
p12948
I42
VSimpleName: getAttribute
p12949
Vinsert
p12950
I42
VSimpleName: getWallConditionContext
p12951
tp12952
I1
s(Vinsert
p12953
I42
VSimpleName: stringVal
p12954
Vinsert
p12955
I45
VStringLiteral: "UNKOWN TRANSACTION LEVEL : "
p12956
tp12957
I1
s(g7620
I42
g7621
Vinsert
p12958
I42
VSimpleName: MySqlCreateServerStatement
p12959
tp12960
I1
s(Vinsert
p12961
I42
VSimpleName: append
p12962
Vinsert
p12963
I42
VSimpleName: dao
p12964
tp12965
I1
s(g2707
I42
g2708
Vinsert
p12966
I42
VSimpleName: SuppressWarnings
p12967
tp12968
I1
s(Vinsert
p12969
I42
VSimpleName: assertEquals
p12970
Vinsert
p12971
I39
VPrimitiveType: double
p12972
tp12973
I1
s(g6567
I42
g6568
Vinsert
p12974
I42
VSimpleName: provider
p12975
tp12976
I2
s(Vinsert
p12977
I42
VSimpleName: assertEquals
p12978
Vinsert
p12979
I45
VStringLiteral: "SELECT /*+ topk(90 1000) */ SUM(c2), c1"
p12980
tp12981
I1
s(g1720
I42
g1721
Vinsert
p12982
I45
VStringLiteral: " where "
p12983
tp12984
I1
s(Vinsert
p12985
I42
VSimpleName: isValidateSqlServer
p12986
Vinsert
p12987
I31
VMethodDeclaration
p12988
tp12989
I2
s(g3068
I42
g3069
Vinsert
p12990
I42
VSimpleName: name
p12991
tp12992
I6
s(Vinsert
p12993
I42
VSimpleName: getConnection
p12994
Vinsert
p12995
I42
VSimpleName: setUsername
p12996
tp12997
I1
s(g2915
I42
g2916
Vinsert
p12998
I53
VThrowStatement
p12999
tp13000
I4
s(Vinsert
p13001
I42
VSimpleName: getUrl
p13002
Vinsert
p13003
I42
VSimpleName: build
p13004
tp13005
I2
s(g9534
I42
g9535
Vinsert
p13006
I42
VSimpleName: initStatement
p13007
tp13008
I1
s(g6089
I42
g6090
Vinsert
p13009
I43
VSimpleType: PoolableStatement
p13010
tp13011
I1
s(Vinsert
p13012
I42
VSimpleName: equals
p13013
Vinsert
p13014
I42
VSimpleName: OracleStatementParser
p13015
tp13016
I2
s(Vinsert
p13017
I42
VSimpleName: parseStatement
p13018
Vinsert
p13019
I42
VSimpleName: MySqlLockTableStatement
p13020
tp13021
I2
s(Vinsert
p13022
I42
VSimpleName: add
p13023
Vinsert
p13024
I42
VSimpleName: violations
p13025
tp13026
I5
s(Vinsert
p13027
I42
VSimpleName: getRight
p13028
Vinsert
p13029
I42
VSimpleName: getValue
p13030
tp13031
I2
s(Vinsert
p13032
I42
VSimpleName: setKeep
p13033
Vinsert
p13034
I42
VSimpleName: arg
p13035
tp13036
I1
s(Vinsert
p13037
I42
VSimpleName: assertEquals
p13038
Vinsert
p13039
I45
VStringLiteral: "select total_day_cnt * EXP(-datediff(to_date('20150819', 'yyyymmdd'), last_time, 'dd') / 60) from dual"
p13040
tp13041
I1
s(Vinsert
p13042
I42
VSimpleName: isLogical
p13043
Vinsert
p13044
I27
VInfixExpression: !=
p13045
tp13046
I1
s(g5709
I42
g5710
Vinsert
p13047
I2
VArrayAccess
p13048
tp13049
I2
s(Vinsert
p13050
I42
VSimpleName: getLog
p13051
Vinsert
p13052
I33
VNullLiteral
p13053
tp13054
I2
s(g962
I42
g963
Vinsert
p13055
I42
VSimpleName: raw
p13056
tp13057
I1
s(g7502
I42
g7503
Vinsert
p13058
I43
VSimpleType: FakeLogger
p13059
tp13060
I1
s(Vinsert
p13061
I42
VSimpleName: replaceAll
p13062
Vinsert
p13063
I59
VVariableDeclarationFragment
p13064
tp13065
I4
s(Vinsert
p13066
I42
VSimpleName: setCreate
p13067
Vinsert
p13068
I42
VSimpleName: parseFunction
p13069
tp13070
I1
s(Vinsert
p13071
I42
VSimpleName: debug
p13072
Vinsert
p13073
I45
VStringLiteral: "} enter cache"
p13074
tp13075
I1
s(g2263
I42
g2264
Vinsert
p13076
I60
VVariableDeclarationStatement
p13077
tp13078
I1
s(Vinsert
p13079
I42
VSimpleName: put
p13080
Vinsert
p13081
I42
VSimpleName: x
p13082
tp13083
I5
s(Vinsert
p13084
I42
VSimpleName: toPGString
p13085
Vinsert
p13086
I42
VSimpleName: get
p13087
tp13088
I13
s(Vinsert
p13089
I42
VSimpleName: init
p13090
Vinsert
p13091
I42
VSimpleName: FilterEventAdapter
p13092
tp13093
I2
s(Vinsert
p13094
I42
VSimpleName: startsWith
p13095
Vinsert
p13096
I27
VInfixExpression: -
p13097
tp13098
I1
s(Vinsert
p13099
I42
VSimpleName: size
p13100
Vinsert
p13101
I42
VSimpleName: AtomicInteger
p13102
tp13103
I1
s(g6582
I42
g6583
Vinsert
p13104
I42
VSimpleName: SQLSelectStatement
p13105
tp13106
I1
s(g3732
I42
g3733
Vinsert
p13107
I45
VStringLiteral: "2 <= 2"
p13108
tp13109
I1
s(g4283
I42
g4284
Vinsert
p13110
I43
VSimpleType: SQLExpr
p13111
tp13112
I1
s(g3073
I42
g3074
Vinsert
p13113
I32
VMethodInvocation
p13114
tp13115
I18
s(g10310
I42
g10311
Vinsert
p13116
I45
VStringLiteral: "+"
p13117
tp13118
I1
s(g6529
I42
g6530
Vinsert
p13119
I43
VSimpleType: JdbcSqlStat
p13120
tp13121
I1
s(g9524
I42
g9525
Vinsert
p13122
I45
VStringLiteral: ") A\u005cn"
p13123
tp13124
I1
s(Vinsert
p13125
I42
VSimpleName: accept
p13126
Vinsert
p13127
I42
VSimpleName: stmtList
p13128
tp13129
I18
s(g2263
I42
g2264
Vinsert
p13130
I83
VModifier: public
p13131
tp13132
I1
s(g11696
I42
g11697
Vinsert
p13133
I45
VStringLiteral: "\u005ctJOIN ktv_epm.ktv_eq_rprsenditem rsi ON rsi.e_rprboardid = rbi.e_rprboardid\u005cn"
p13134
tp13135
I1
s(Vinsert
p13136
I42
VSimpleName: nextToken
p13137
Vinsert
p13138
I42
VSimpleName: selectParser
p13139
tp13140
I1
s(g1720
I42
g1721
Vinsert
p13141
I42
VSimpleName: i
p13142
tp13143
I8
s(g7991
I42
g7992
Vinsert
p13144
I43
VSimpleType: WallConfig
p13145
tp13146
I1
s(Vinsert
p13147
I42
VSimpleName: assertFalse
p13148
Vinsert
p13149
I42
VSimpleName: Exception
p13150
tp13151
I40
s(Vinsert
p13152
I42
VSimpleName: getDataSources
p13153
Vinsert
p13154
I39
VPrimitiveType: boolean
p13155
tp13156
I2
s(g4144
I42
g4145
Vinsert
p13157
I42
VSimpleName: getText
p13158
tp13159
I1
s(g2634
I42
g2635
Vinsert
p13160
I42
VSimpleName: beforeComments
p13161
tp13162
I3
s(g7736
I42
g7737
Vinsert
p13163
I34
VNumberLiteral: 1
p13164
tp13165
I2
s(Vinsert
p13166
I42
VSimpleName: getForQuery
p13167
Vinsert
p13168
I27
VInfixExpression: !=
p13169
tp13170
I1
s(Vinsert
p13171
I42
VSimpleName: getObject
p13172
Vinsert
p13173
I83
VModifier: public
p13174
tp13175
I1
s(Vinsert
p13176
I42
VSimpleName: equals
p13177
Vinsert
p13178
I42
VSimpleName: flashback
p13179
tp13180
I4
s(Vinsert
p13181
I42
VSimpleName: isIfExists
p13182
Vinsert
p13183
I45
VStringLiteral: "DROP TABLE "
p13184
tp13185
I1
s(Vinsert
p13186
I42
VSimpleName: getClass
p13187
Vinsert
p13188
I42
VSimpleName: methodParams
p13189
tp13190
I1
s(Vinsert
p13191
I42
VSimpleName: getDataSourceStat
p13192
Vinsert
p13193
I42
VSimpleName: prepareStatement
p13194
tp13195
I3
s(Vinsert
p13196
I42
VSimpleName: lock
p13197
Vinsert
p13198
I41
VReturnStatement
p13199
tp13200
I1
s(Vinsert
p13201
I42
VSimpleName: setBeginExpr
p13202
Vinsert
p13203
I42
VSimpleName: x
p13204
tp13205
I1
s(g7012
I42
g7013
Vinsert
p13206
I42
VSimpleName: get
p13207
tp13208
I2
s(g3806
I42
g3807
Vinsert
p13209
I42
VSimpleName: print
p13210
tp13211
I2
s(Vinsert
p13212
I42
VSimpleName: close
p13213
Vinsert
p13214
I42
VSimpleName: Assert
p13215
tp13216
I11
s(g3788
I42
g3789
Vinsert
p13217
I25
VIfStatement
p13218
tp13219
I1
s(g8298
I42
g8299
Vinsert
p13220
I42
VSimpleName: arguments
p13221
tp13222
I1
s(Vinsert
p13223
I42
VSimpleName: valueOf
p13224
Vinsert
p13225
I42
VSimpleName: e
p13226
tp13227
I1
s(Vinsert
p13228
I42
VSimpleName: visit
p13229
Vinsert
p13230
I43
VSimpleType: SQLASTOutputVisitor
p13231
tp13232
I1
s(g12154
I42
g12155
Vinsert
p13233
I42
VSimpleName: query
p13234
tp13235
I3
s(g12721
I42
g12722
Vinsert
p13236
I42
VSimpleName: token
p13237
tp13238
I4
s(Vinsert
p13239
I42
VSimpleName: assertEquals
p13240
Vinsert
p13241
I42
VSimpleName: dataSourceStat
p13242
tp13243
I2
s(g12448
I42
g12449
Vinsert
p13244
I42
VSimpleName: select
p13245
tp13246
I1
s(g2213
I42
g2214
Vinsert
p13247
I42
VSimpleName: transcationInfo
p13248
tp13249
I1
s(g1943
I42
g1944
Vinsert
p13250
I42
VSimpleName: PoolablePreparedStatement
p13251
tp13252
I1
s(g2880
I42
g2881
Vinsert
p13253
I45
VStringLiteral: "\u005cn\u005ctcountry_id CHAR(2)"
p13254
tp13255
I2
s(g7827
I42
g7828
Vinsert
p13256
I33
VNullLiteral
p13257
tp13258
I1
s(Vinsert
p13259
I42
VSimpleName: expr
p13260
Vinsert
p13261
I42
VSimpleName: binaryExpr
p13262
tp13263
I1
s(Vinsert
p13264
I42
VSimpleName: put
p13265
Vinsert
p13266
I40
VQualifiedName: Token.MAXTRANS
p13267
tp13268
I1
s(g2824
I42
g2825
Vinsert
p13269
I44
VSingleVariableDeclaration
p13270
tp13271
I19
s(Vinsert
p13272
I42
VSimpleName: getTableName
p13273
Vinsert
p13274
I27
VInfixExpression: !=
p13275
tp13276
I1
s(Vinsert
p13277
I42
VSimpleName: setParent
p13278
Vinsert
p13279
I43
VSimpleType: SQLAssignItem
p13280
tp13281
I4
s(Vinsert
p13282
I42
VSimpleName: equals
p13283
Vinsert
p13284
I40
VQualifiedName: other.parameters
p13285
tp13286
I1
s(g3500
I42
g3501
Vinsert
p13287
I42
VSimpleName: Appendable
p13288
tp13289
I1
s(g2494
I42
g2495
Vinsert
p13290
I43
VSimpleType: SQLCreateTableStatement
p13291
tp13292
I1
s(Vinsert
p13293
I42
VSimpleName: charAt
p13294
Vinsert
p13295
I83
VModifier: final
p13296
tp13297
I1
s(Vinsert
p13298
I42
VSimpleName: name
p13299
Vinsert
p13300
I40
VQualifiedName: lexer.stringVal
p13301
tp13302
I1
s(Vinsert
p13303
I42
VSimpleName: getPartitions
p13304
Vinsert
p13305
I42
VSimpleName: printAndAccept
p13306
tp13307
I1
s(g3134
I42
g3135
Vinsert
p13308
I42
VSimpleName: sqlExpr
p13309
tp13310
I3
s(Vinsert
p13311
I42
VSimpleName: toSQLString
p13312
Vinsert
p13313
I45
VStringLiteral: "\u005cn\u005ctpart_no NUMBER"
p13314
tp13315
I2
s(Vinsert
p13316
I42
VSimpleName: setTableName
p13317
Vinsert
p13318
I40
VQualifiedName: Token.LPAREN
p13319
tp13320
I1
s(Vinsert
p13321
I42
VSimpleName: nextToken
p13322
Vinsert
p13323
I42
VSimpleName: setType
p13324
tp13325
I1
s(Vinsert
p13326
I42
VSimpleName: getQuery
p13327
Vinsert
p13328
I59
VVariableDeclarationFragment
p13329
tp13330
I19
s(Vinsert
p13331
I42
VSimpleName: isJdbc4
p13332
Vinsert
p13333
I40
VQualifiedName: com.mysql.jdbc.ConnectionImpl
p13334
tp13335
I1
s(Vinsert
p13336
I42
VSimpleName: put
p13337
Vinsert
p13338
I45
VStringLiteral: "StatementExecuteCount_2000_5000_Millis"
p13339
tp13340
I1
s(g5384
I42
g5385
Vinsert
p13341
I25
VIfStatement
p13342
tp13343
I2
s(g12555
I42
g12556
Vinsert
p13344
I8
VBlock
p13345
tp13346
I1
s(g3388
I42
g3389
Vinsert
p13347
I43
VSimpleType: Exception
p13348
tp13349
I4
s(g1800
I42
g1801
Vinsert
p13350
I42
VSimpleName: setLastExecuteStartNano
p13351
tp13352
I2
s(g46
I42
g47
Vinsert
p13353
I43
VSimpleType: MySqlExtractExpr
p13354
tp13355
I2
s(g5839
I42
g5840
Vinsert
p13356
I45
VStringLiteral: "mergeStat"
p13357
tp13358
I1
s(Vinsert
p13359
I42
VSimpleName: add
p13360
Vinsert
p13361
I42
VSimpleName: name
p13362
tp13363
I12
s(Vinsert
p13364
I42
VSimpleName: incrementAndGet
p13365
Vinsert
p13366
I42
VSimpleName: cachedPreparedStatementMissCount
p13367
tp13368
I2
s(Vinsert
p13369
I42
VSimpleName: assertTrue
p13370
Vinsert
p13371
I42
VSimpleName: OracleWallTest1
p13372
tp13373
I1
s(Vinsert
p13374
I42
VSimpleName: setParent
p13375
Vinsert
p13376
I42
VSimpleName: right
p13377
tp13378
I5
s(Vinsert
p13379
I42
VSimpleName: setName
p13380
Vinsert
p13381
I45
VStringLiteral: "SEQUENCE"
p13382
tp13383
I1
s(g12034
I42
g12035
Vinsert
p13384
I59
VVariableDeclarationFragment
p13385
tp13386
I1
s(g4674
I42
g4675
Vinsert
p13387
I43
VSimpleType: SQLCharExpr
p13388
tp13389
I1
s(Vinsert
p13390
I42
VSimpleName: parseStatements
p13391
Vinsert
p13392
I45
VStringLiteral: "CREATE OR REPLACE FORCE VIEW \u005c"CMIS\u005c".\u005c"WFI_AGENT_LOGEND\u005c" (\u005c"INSTANCEID\u005c", \u005c"WFID\u005c", \u005c"WFSIGN\u005c", \u005c"NODEID\u005c", \u005c"NODESTARTTIME\u005c", \u005c"ORIGINALUSER\u005c", \u005c"REPLACER\u005c", \u005c"SYSID\u005c", \u005c"PK_VALUE\u005c", \u005c"APPL_TYPE\u005c", \u005c"WFI_END_ORG\u005c", \u005c"WFI_STATUS\u005c") AS \u005cn"
p13393
tp13394
I1
s(Vinsert
p13395
I42
VSimpleName: compareTo
p13396
Vinsert
p13397
I11
VCastExpression
p13398
tp13399
I1
s(g3022
I42
g3023
Vinsert
p13400
I27
VInfixExpression: !=
p13401
tp13402
I1
s(g351
I42
g352
Vinsert
p13403
I42
VSimpleName: dataSource
p13404
tp13405
I1
s(g391
I42
g392
Vinsert
p13406
I45
VStringLiteral: "ROLLBACK"
p13407
tp13408
I1
s(g9629
I42
g9630
Vinsert
p13409
I42
VSimpleName: String
p13410
tp13411
I2
s(g2044
I42
g2045
Vinsert
p13412
I42
VSimpleName: left
p13413
tp13414
I2
s(g4227
I42
g4228
Vinsert
p13415
I42
VSimpleName: lexer
p13416
tp13417
I1
s(g3332
I42
g3333
Vinsert
p13418
I42
VSimpleName: String
p13419
tp13420
I1
s(g7720
I42
g7721
Vinsert
p13421
I43
VSimpleType: List
p13422
tp13423
I3
s(Vinsert
p13424
I42
VSimpleName: setDriverClassName
p13425
Vinsert
p13426
I42
VSimpleName: Exception
p13427
tp13428
I1
s(Vinsert
p13429
I42
VSimpleName: accept
p13430
Vinsert
p13431
I43
VSimpleType: SQLCommentHint
p13432
tp13433
I4
s(g6943
I42
g6944
Vinsert
p13434
I74
VParameterizedType: WeakReference<Thread>
p13435
tp13436
I1
s(Vinsert
p13437
I42
VSimpleName: println
p13438
Vinsert
p13439
I45
VStringLiteral: "\u005ct\u005ctSELECT st.regid, to_char(wmsys.WM_CONCAT(DISTINCT so.orgname)) AS note\u005cn"
p13440
tp13441
I1
s(g11453
I42
g11454
Vinsert
p13442
I42
VSimpleName: stmt
p13443
tp13444
I7
s(Vinsert
p13445
I42
VSimpleName: getSelectList
p13446
Vinsert
p13447
I70
VEnhancedForStatement
p13448
tp13449
I1
s(g10100
I42
g10101
Vinsert
p13450
I42
VSimpleName: wr
p13451
tp13452
I1
s(g2158
I42
g2159
Vinsert
p13453
I59
VVariableDeclarationFragment
p13454
tp13455
I1
s(g2900
I42
g2901
Vinsert
p13456
I2
VArrayAccess
p13457
tp13458
I5
s(g3618
I42
g3619
Vinsert
p13459
I27
VInfixExpression: !=
p13460
tp13461
I1
s(g11072
I42
g11073
Vinsert
p13462
I42
VSimpleName: i
p13463
tp13464
I3
s(g816
I42
g817
Vinsert
p13465
I21
VExpressionStatement
p13466
tp13467
I1
s(g7356
I42
g7357
Vinsert
p13468
I60
VVariableDeclarationStatement
p13469
tp13470
I1
s(g2533
I42
g2534
Vinsert
p13471
I60
VVariableDeclarationStatement
p13472
tp13473
I1
s(g2568
I42
g2569
Vinsert
p13474
I45
VStringLiteral: "-detail"
p13475
tp13476
I1
s(g492
I42
g493
Vinsert
p13477
I27
VInfixExpression: !=
p13478
tp13479
I1
s(g4890
I42
g4891
Vinsert
p13480
I32
VMethodInvocation
p13481
tp13482
I2
s(Vinsert
p13483
I42
VSimpleName: setColumn
p13484
Vinsert
p13485
I42
VSimpleName: getItems
p13486
tp13487
I2
s(Vinsert
p13488
I42
VSimpleName: setFilters
p13489
Vinsert
p13490
I45
VStringLiteral: "jdbc:mysql://10.232.36.171:45447/"
p13491
tp13492
I1
s(Vinsert
p13493
I42
VSimpleName: print
p13494
Vinsert
p13495
I8
VBlock
p13496
tp13497
I7
s(g2647
I42
g2648
Vinsert
p13498
I60
VVariableDeclarationStatement
p13499
tp13500
I2
s(g680
I42
g681
Vinsert
p13501
I42
VSimpleName: SpringMethodStatValue
p13502
tp13503
I1
s(Vinsert
p13504
I42
VSimpleName: translateOracleToMySql
p13505
Vinsert
p13506
I32
VMethodInvocation
p13507
tp13508
I4
s(g8849
I42
g8850
Vinsert
p13509
I32
VMethodInvocation
p13510
tp13511
I3
s(Vinsert
p13512
I42
VSimpleName: parse
p13513
Vinsert
p13514
I42
VSimpleName: parserManager
p13515
tp13516
I1
s(Vinsert
p13517
I42
VSimpleName: size
p13518
Vinsert
p13519
I42
VSimpleName: getColumns
p13520
tp13521
I6
s(g2329
I42
g2330
Vinsert
p13522
I27
VInfixExpression: !=
p13523
tp13524
I1
s(Vinsert
p13525
I42
VSimpleName: add
p13526
Vinsert
p13527
I42
VSimpleName: MySqlOutFileExpr
p13528
tp13529
I1
s(Vinsert
p13530
I42
VSimpleName: setParent
p13531
Vinsert
p13532
I42
VSimpleName: definer
p13533
tp13534
I3
s(g3083
I42
g3084
Vinsert
p13535
I42
VSimpleName: Exception
p13536
tp13537
I6
s(Vinsert
p13538
I42
VSimpleName: getInstance
p13539
Vinsert
p13540
I34
VNumberLiteral: 0
p13541
tp13542
I5
s(Vinsert
p13543
I42
VSimpleName: toString
p13544
Vinsert
p13545
I42
VSimpleName: statementList
p13546
tp13547
I1
s(g6771
I42
g6772
Vinsert
p13548
I42
VSimpleName: print
p13549
tp13550
I1
s(Vinsert
p13551
I42
VSimpleName: size
p13552
Vinsert
p13553
I42
VSimpleName: indexNames
p13554
tp13555
I1
s(g6416
I42
g6417
Vinsert
p13556
I42
VSimpleName: List
p13557
tp13558
I3
s(Vinsert
p13559
I42
VSimpleName: size
p13560
Vinsert
p13561
I42
VSimpleName: inputParameters
p13562
tp13563
I1
s(Vinsert
p13564
I42
VSimpleName: equals
p13565
Vinsert
p13566
I40
VQualifiedName: other.query
p13567
tp13568
I1
s(Vinsert
p13569
I42
VSimpleName: checkUnion
p13570
Vinsert
p13571
I32
VMethodInvocation
p13572
tp13573
I2
s(Vinsert
p13574
I42
VSimpleName: assertEquals
p13575
Vinsert
p13576
I45
VStringLiteral: "select secods:ip_region('192.168.1.1', 'city') from dual"
p13577
tp13578
I1
s(g12776
I42
g12777
Vinsert
p13579
I42
VSimpleName: tableStat
p13580
tp13581
I2
s(g627
I42
g628
Vinsert
p13582
I41
VReturnStatement
p13583
tp13584
I1
s(g10449
I42
g10450
Vinsert
p13585
I42
VSimpleName: SQLIntegerExpr
p13586
tp13587
I5
s(Vinsert
p13588
I42
VSimpleName: accept
p13589
Vinsert
p13590
I42
VSimpleName: Appendable
p13591
tp13592
I2
s(Vinsert
p13593
I42
VSimpleName: getConnectionErrorRetryAttempts
p13594
Vinsert
p13595
I42
VSimpleName: unreturnedConnectionTimeout
p13596
tp13597
I1
s(g3053
I42
g3054
Vinsert
p13598
I42
VSimpleName: nextToken
p13599
tp13600
I1
s(g5931
I42
g5932
Vinsert
p13601
I21
VExpressionStatement
p13602
tp13603
I2
s(g1309
I42
g1310
Vinsert
p13604
I43
VSimpleType: Column
p13605
tp13606
I1
s(Vinsert
p13607
I42
VSimpleName: toString
p13608
Vinsert
p13609
I43
VSimpleType: Number
p13610
tp13611
I2
s(Vinsert
p13612
I42
VSimpleName: put
p13613
Vinsert
p13614
I43
VSimpleType: PoolablePreparedStatement
p13615
tp13616
I1
s(Vinsert
p13617
I42
VSimpleName: isSqlModified
p13618
Vinsert
p13619
I42
VSimpleName: result
p13620
tp13621
I2
s(Vinsert
p13622
I42
VSimpleName: error
p13623
Vinsert
p13624
I42
VSimpleName: i
p13625
tp13626
I1
s(Vinsert
p13627
I42
VSimpleName: formatOdps
p13628
Vinsert
p13629
I45
VStringLiteral: "\u005cn)"
p13630
tp13631
I1
s(Vinsert
p13632
I42
VSimpleName: visit
p13633
Vinsert
p13634
I42
VSimpleName: partition
p13635
tp13636
I3
s(g4238
I42
g4239
Vinsert
p13637
I31
VMethodDeclaration
p13638
tp13639
I1
s(g8391
I42
g8392
Vinsert
p13640
I8
VBlock
p13641
tp13642
I5
s(Vinsert
p13643
I42
VSimpleName: isErrorEnabled
p13644
Vinsert
p13645
I8
VBlock
p13646
tp13647
I2
s(g201
I42
g202
Vinsert
p13648
I42
VSimpleName: setBitwise
p13649
tp13650
I1
s(g6375
I42
g6376
Vinsert
p13651
I32
VMethodInvocation
p13652
tp13653
I1
s(Vinsert
p13654
I42
VSimpleName: append
p13655
Vinsert
p13656
I42
VSimpleName: hex
p13657
tp13658
I1
s(Vinsert
p13659
I42
VSimpleName: refactor
p13660
Vinsert
p13661
I42
VSimpleName: Exception
p13662
tp13663
I9
s(Vinsert
p13664
I42
VSimpleName: getItems
p13665
Vinsert
p13666
I25
VIfStatement
p13667
tp13668
I4
s(Vinsert
p13669
I42
VSimpleName: nextToken
p13670
Vinsert
p13671
I40
VQualifiedName: Token.NOT
p13672
tp13673
I2
s(g13659
I42
g13660
Vinsert
p13674
I8
VBlock
p13675
tp13676
I9
s(Vinsert
p13677
I42
VSimpleName: getSchemaObject
p13678
Vinsert
p13679
I42
VSimpleName: left
p13680
tp13681
I1
s(g12844
I42
g12845
Vinsert
p13682
I60
VVariableDeclarationStatement
p13683
tp13684
I4
s(Vinsert
p13685
I42
VSimpleName: split
p13686
Vinsert
p13687
I42
VSimpleName: String
p13688
tp13689
I1
s(Vinsert
p13690
I42
VSimpleName: clear
p13691
Vinsert
p13692
I70
VEnhancedForStatement
p13693
tp13694
I1
s(Vinsert
p13695
I42
VSimpleName: add
p13696
Vinsert
p13697
I42
VSimpleName: indexName
p13698
tp13699
I1
s(Vinsert
p13700
I42
VSimpleName: nextToken
p13701
Vinsert
p13702
I42
VSimpleName: sql
p13703
tp13704
I27
s(g9217
I42
g9218
Vinsert
p13705
I42
VSimpleName: setStatisticClause
p13706
tp13707
I1
s(g8238
I42
g8239
Vinsert
p13708
I59
VVariableDeclarationFragment
p13709
tp13710
I2
s(g1554
I42
g1555
Vinsert
p13711
I7
VAssignment: =
p13712
tp13713
I4
s(g4457
I42
g4458
Vinsert
p13714
I25
VIfStatement
p13715
tp13716
I1
s(g1042
I42
g1043
Vinsert
p13717
I21
VExpressionStatement
p13718
tp13719
I13
s(Vinsert
p13720
I42
VSimpleName: containsColumn
p13721
Vinsert
p13722
I45
VStringLiteral: "MKTG_H_EXEC_RESULT_FACT"
p13723
tp13724
I2
s(g2568
I42
g2569
Vinsert
p13725
I32
VMethodInvocation
p13726
tp13727
I2
s(g8929
I42
g8930
Vinsert
p13728
I42
VSimpleName: requestStat
p13729
tp13730
I1
s(g4357
I42
g4358
Vinsert
p13731
I42
VSimpleName: visit
p13732
tp13733
I1
s(g5813
I42
g5814
Vinsert
p13734
I39
VPrimitiveType: boolean
p13735
tp13736
I1
s(g12090
I42
g12091
Vinsert
p13737
I8
VBlock
p13738
tp13739
I1
s(Vinsert
p13740
I42
VSimpleName: startsWith
p13741
Vinsert
p13742
I45
VStringLiteral: "jdbc:sqlite:"
p13743
tp13744
I1
s(Vinsert
p13745
I42
VSimpleName: add
p13746
Vinsert
p13747
I42
VSimpleName: partition
p13748
tp13749
I2
s(Vinsert
p13750
I42
VSimpleName: assertTrue
p13751
Vinsert
p13752
I42
VSimpleName: MySqlWallTest2
p13753
tp13754
I1
s(g507
I42
g508
Vinsert
p13755
I32
VMethodInvocation
p13756
tp13757
I3
s(g5724
I42
g5725
Vinsert
p13758
I60
VVariableDeclarationStatement
p13759
tp13760
I1
s(g5475
I42
g5476
Vinsert
p13761
I32
VMethodInvocation
p13762
tp13763
I2
s(Vinsert
p13764
I42
VSimpleName: startsWith
p13765
Vinsert
p13766
I12
VCatchClause
p13767
tp13768
I1
s(g13720
I42
g13721
Vinsert
p13769
I21
VExpressionStatement
p13770
tp13771
I20
s(g5216
I42
g5217
Vinsert
p13772
I8
VBlock
p13773
tp13774
I2
s(g2069
I42
g2070
Vinsert
p13775
I42
VSimpleName: current
p13776
tp13777
I1
s(g4253
I42
g4254
Vinsert
p13778
I42
VSimpleName: conn
p13779
tp13780
I1
s(g2837
I42
g2838
Vinsert
p13781
I34
VNumberLiteral: 512
p13782
tp13783
I1
s(Vinsert
p13784
I42
VSimpleName: nextToken
p13785
Vinsert
p13786
I42
VSimpleName: Token
p13787
tp13788
I1
s(Vinsert
p13789
I42
VSimpleName: setToType
p13790
Vinsert
p13791
I8
VBlock
p13792
tp13793
I1
s(g1554
I42
g1555
Vinsert
p13794
I21
VExpressionStatement
p13795
tp13796
I4
s(g8692
I42
g8693
Vinsert
p13797
I42
VSimpleName: commentHandler
p13798
tp13799
I6
s(Vinsert
p13800
I42
VSimpleName: handle
p13801
Vinsert
p13802
I40
VQualifiedName: Token.LINE_COMMENT
p13803
tp13804
I1
s(g6699
I42
g6700
Vinsert
p13805
I59
VVariableDeclarationFragment
p13806
tp13807
I2
s(Vinsert
p13808
I42
VSimpleName: getSimpleName
p13809
Vinsert
p13810
I59
VVariableDeclarationFragment
p13811
tp13812
I2
s(Vinsert
p13813
I42
VSimpleName: size
p13814
Vinsert
p13815
I42
VSimpleName: append
p13816
tp13817
I1
s(Vinsert
p13818
I42
VSimpleName: getParameters
p13819
Vinsert
p13820
I42
VSimpleName: SQLCreateProcedureStatement
p13821
tp13822
I1
s(Vinsert
p13823
I42
VSimpleName: parseStatementList
p13824
Vinsert
p13825
I74
VParameterizedType: List<SQLStatement>
p13826
tp13827
I83
s(g1780
I42
g1781
Vinsert
p13828
I42
VSimpleName: Exception
p13829
tp13830
I1
s(g11428
I42
g11429
Vinsert
p13831
I40
VQualifiedName: savePoint.stringVal
p13832
tp13833
I1
s(g10485
I42
g10486
Vinsert
p13834
I43
VSimpleType: SQLOrderBy
p13835
tp13836
I1
s(g2775
I42
g2776
Vinsert
p13837
I21
VExpressionStatement
p13838
tp13839
I1
s(Vinsert
p13840
I42
VSimpleName: name
p13841
Vinsert
p13842
I40
VQualifiedName: Token.INTO
p13843
tp13844
I1
s(g9410
I42
g9411
Vinsert
p13845
I42
VSimpleName: dataSource
p13846
tp13847
I1
s(g12189
I42
g12190
Vinsert
p13848
I83
VModifier: final
p13849
tp13850
I1
s(g3169
I42
g3170
Vinsert
p13851
I32
VMethodInvocation
p13852
tp13853
I16
s(g3898
I42
g3899
Vinsert
p13854
I43
VSimpleType: SQLAllColumnExpr
p13855
tp13856
I1
s(Vinsert
p13857
I42
VSimpleName: add
p13858
Vinsert
p13859
I45
VStringLiteral: "name"
p13860
tp13861
I1
s(g12006
I42
g12007
Vinsert
p13862
I34
VNumberLiteral: 0
p13863
tp13864
I2
s(g1830
I42
g1831
Vinsert
p13865
I43
VSimpleType: PreparedStatement
p13866
tp13867
I2
s(Vinsert
p13868
I42
VSimpleName: collectSql
p13869
Vinsert
p13870
I34
VNumberLiteral: 1
p13871
tp13872
I1
s(Vinsert
p13873
I42
VSimpleName: setRowCount
p13874
Vinsert
p13875
I21
VExpressionStatement
p13876
tp13877
I4
s(g1700
I42
g1701
Vinsert
p13878
I60
VVariableDeclarationStatement
p13879
tp13880
I1
s(Vinsert
p13881
I42
VSimpleName: isCreate
p13882
Vinsert
p13883
I42
VSimpleName: x
p13884
tp13885
I1
s(Vinsert
p13886
I42
VSimpleName: setInitialSize
p13887
Vinsert
p13888
I42
VSimpleName: Exception
p13889
tp13890
I4
s(Vinsert
p13891
I42
VSimpleName: casNext
p13892
Vinsert
p13893
I27
VInfixExpression: !=
p13894
tp13895
I2
s(Vinsert
p13896
I42
VSimpleName: decrypt
p13897
Vinsert
p13898
I43
VSimpleType: BlowfishDecrypter
p13899
tp13900
I2
s(Vinsert
p13901
I42
VSimpleName: get
p13902
Vinsert
p13903
I42
VSimpleName: dupCloseCount
p13904
tp13905
I2
s(Vinsert
p13906
I42
VSimpleName: put
p13907
Vinsert
p13908
I42
VSimpleName: createTransactionId
p13909
tp13910
I1
s(Vinsert
p13911
I42
VSimpleName: setCollectWebURIEnable
p13912
Vinsert
p13913
I33
VNullLiteral
p13914
tp13915
I1
s(g7370
I42
g7371
Vinsert
p13916
I43
VSimpleType: SQLObject
p13917
tp13918
I1
s(g1938
I42
g1939
Vinsert
p13919
I42
VSimpleName: stmt
p13920
tp13921
I302
s(g13538
I42
g13539
Vinsert
p13922
I42
VSimpleName: JdbcStatManager
p13923
tp13924
I9
s(g4936
I42
g4937
Vinsert
p13925
I42
VSimpleName: token
p13926
tp13927
I3
s(Vinsert
p13928
I42
VSimpleName: getOrderBy
p13929
Vinsert
p13930
I42
VSimpleName: assertNull
p13931
tp13932
I1
s(Vinsert
p13933
I42
VSimpleName: parseStorage
p13934
Vinsert
p13935
I27
VInfixExpression: ==
p13936
tp13937
I1
s(Vinsert
p13938
I42
VSimpleName: getMessage
p13939
Vinsert
p13940
I59
VVariableDeclarationFragment
p13941
tp13942
I3
s(g6157
I42
g6158
Vinsert
p13943
I43
VSimpleType: SQLArgument
p13944
tp13945
I1
s(g6847
I42
g6848
Vinsert
p13946
I8
VBlock
p13947
tp13948
I19
s(g61
I42
g62
Vinsert
p13949
I8
VBlock
p13950
tp13951
I1
s(Vinsert
p13952
I42
VSimpleName: getOrderBy
p13953
Vinsert
p13954
I42
VSimpleName: visit
p13955
tp13956
I1
s(Vinsert
p13957
I42
VSimpleName: entrySet
p13958
Vinsert
p13959
I43
VSimpleType: Token
p13960
tp13961
I1
s(g1888
I42
g1889
Vinsert
p13962
I32
VMethodInvocation
p13963
tp13964
I1
s(g5216
I42
g5217
Vinsert
p13965
I59
VVariableDeclarationFragment
p13966
tp13967
I1
s(Vinsert
p13968
I42
VSimpleName: get
p13969
Vinsert
p13970
I42
VSimpleName: containsKey
p13971
tp13972
I3
s(Vinsert
p13973
I42
VSimpleName: getDecrypter
p13974
Vinsert
p13975
I42
VSimpleName: Assert
p13976
tp13977
I2
s(g10919
I42
g10920
Vinsert
p13978
I42
VSimpleName: servlet
p13979
tp13980
I1
s(Vinsert
p13981
I42
VSimpleName: read
p13982
Vinsert
p13983
I59
VVariableDeclarationFragment
p13984
tp13985
I4
s(Vinsert
p13986
I42
VSimpleName: toString
p13987
Vinsert
p13988
I43
VSimpleType: OracleBinaryFloatExpr
p13989
tp13990
I1
s(Vinsert
p13991
I42
VSimpleName: set
p13992
Vinsert
p13993
I74
VParameterizedType: PrivilegedAction<T>
p13994
tp13995
I1
s(Vinsert
p13996
I42
VSimpleName: setExpr
p13997
Vinsert
p13998
I42
VSimpleName: OracleDbLinkExpr
p13999
tp14000
I2
s(Vinsert
p14001
I42
VSimpleName: getConnection
p14002
Vinsert
p14003
I42
VSimpleName: connHolder
p14004
tp14005
I2
s(Vinsert
p14006
I42
VSimpleName: setUppCase
p14007
Vinsert
p14008
I42
VSimpleName: FormatOption
p14009
tp14010
I3
s(g982
I42
g983
Vinsert
p14011
I42
VSimpleName: c3
p14012
tp14013
I1
s(g1150
I42
g1151
Vinsert
p14014
I60
VVariableDeclarationStatement
p14015
tp14016
I1
s(g8277
I42
g8278
Vinsert
p14017
I40
VQualifiedName: AGGREGATE_FUNCTIONS_CODES.length
p14018
tp14019
I4
s(g1647
I42
g1648
Vinsert
p14020
I60
VVariableDeclarationStatement
p14021
tp14022
I1
s(g2459
I42
g2460
Vinsert
p14023
I45
VStringLiteral: "create type "
p14024
tp14025
I1
s(Vinsert
p14026
I42
VSimpleName: setOffset
p14027
Vinsert
p14028
I8
VBlock
p14029
tp14030
I7
s(g5267
I42
g5268
Vinsert
p14031
I40
VQualifiedName: java.util.Date
p14032
tp14033
I2
s(Vinsert
p14034
I42
VSimpleName: formatOdps
p14035
Vinsert
p14036
I45
VStringLiteral: "SELECT *\u005cn"
p14037
tp14038
I1
s(Vinsert
p14039
I42
VSimpleName: parseStatementList
p14040
Vinsert
p14041
I8
VBlock
p14042
tp14043
I10
s(Vinsert
p14044
I42
VSimpleName: toSQLString
p14045
Vinsert
p14046
I45
VStringLiteral: "SELECT cust_last_name, nls_language, credit_limit\u005cn"
p14047
tp14048
I1
s(g4183
I42
g4184
Vinsert
p14049
I45
VStringLiteral: "\u005ctDBMS_OUTPUT.PUT_LINE('The sum of products equals: ' || TO_CHAR(s));\u005cn"
p14050
tp14051
I1
s(g6534
I42
g6535
Vinsert
p14052
I42
VSimpleName: getUpdateCountMax
p14053
tp14054
I1
s(Vinsert
p14055
I42
VSimpleName: setTo
p14056
Vinsert
p14057
I42
VSimpleName: name
p14058
tp14059
I1
s(g567
I42
g568
Vinsert
p14060
I34
VNumberLiteral: 0
p14061
tp14062
I3
s(g356
I42
g357
Vinsert
p14063
I42
VSimpleName: stat
p14064
tp14065
I2
s(g4819
I42
g4820
Vinsert
p14066
I45
VStringLiteral: "\u005cn\u005ct\u005ctOR d.indkey[6] = a.attnum"
p14067
tp14068
I1
s(g3022
I42
g3023
Vinsert
p14069
I8
VBlock
p14070
tp14071
I1
s(Vinsert
p14072
I42
VSimpleName: checkCondition
p14073
Vinsert
p14074
I31
VMethodDeclaration
p14075
tp14076
I3
s(g1660
I42
g1661
Vinsert
p14077
I43
VSimpleType: Object
p14078
tp14079
I1
s(g992
I42
g993
Vinsert
p14080
I42
VSimpleName: x
p14081
tp14082
I1
s(Vinsert
p14083
I42
VSimpleName: endTransaction
p14084
Vinsert
p14085
I42
VSimpleName: startTransaction
p14086
tp14087
I2
s(Vinsert
p14088
I42
VSimpleName: newUpdater
p14089
Vinsert
p14090
I83
VModifier: static
p14091
tp14092
I9
s(Vinsert
p14093
I42
VSimpleName: getConnection
p14094
Vinsert
p14095
I42
VSimpleName: getSqlStat
p14096
tp14097
I1
s(g13504
I42
g13505
Vinsert
p14098
I8
VBlock
p14099
tp14100
I1
s(g6587
I42
g6588
Vinsert
p14101
I8
VBlock
p14102
tp14103
I6
s(g4447
I42
g4448
Vinsert
p14104
I21
VExpressionStatement
p14105
tp14106
I3
s(g12050
I42
g12051
Vinsert
p14107
I45
VStringLiteral: "\u005ct\u005ctWITH RECURSIVE menuTemp (menu_id, parent_id) AS (\u005cn"
p14108
tp14109
I1
s(Vinsert
p14110
I42
VSimpleName: resultSet_getObject
p14111
Vinsert
p14112
I59
VVariableDeclarationFragment
p14113
tp14114
I2
s(g3088
I42
g3089
Vinsert
p14115
I42
VSimpleName: put
p14116
tp14117
I1
s(Vinsert
p14118
I42
VSimpleName: nameEquals
p14119
Vinsert
p14120
I36
VParenthesizedExpression
p14121
tp14122
I2
s(Vinsert
p14123
I42
VSimpleName: nextToken
p14124
Vinsert
p14125
I45
VStringLiteral: "CURRENT"
p14126
tp14127
I1
s(Vinsert
p14128
I42
VSimpleName: setParent
p14129
Vinsert
p14130
I42
VSimpleName: setPrecision
p14131
tp14132
I1
s(g14110
I42
g14111
Vinsert
p14133
I42
VSimpleName: FilterChainImpl
p14134
tp14135
I2
s(g4253
I42
g4254
Vinsert
p14136
I44
VSingleVariableDeclaration
p14137
tp14138
I3
s(Vinsert
p14139
I42
VSimpleName: getParameters
p14140
Vinsert
p14141
I42
VSimpleName: prepareStatement
p14142
tp14143
I1
s(g6966
I42
g6967
Vinsert
p14144
I43
VSimpleType: SQLListExpr
p14145
tp14146
I1
s(Vinsert
p14147
I42
VSimpleName: getLeft
p14148
Vinsert
p14149
I39
VPrimitiveType: boolean
p14150
tp14151
I1
s(g6852
I42
g6853
Vinsert
p14152
I42
VSimpleName: stmt
p14153
tp14154
I1
s(Vinsert
p14155
I42
VSimpleName: connection_setSavepoint
p14156
Vinsert
p14157
I42
VSimpleName: connection
p14158
tp14159
I1
s(Vinsert
p14160
I42
VSimpleName: getConnectionDirect
p14161
Vinsert
p14162
I39
VPrimitiveType: long
p14163
tp14164
I1
s(g7023
I42
g7024
Vinsert
p14165
I42
VSimpleName: property
p14166
tp14167
I2
s(g11511
I42
g11512
Vinsert
p14168
I42
VSimpleName: sizeCache
p14169
tp14170
I1
s(Vinsert
p14171
I42
VSimpleName: parseStatementList
p14172
Vinsert
p14173
I42
VSimpleName: MySqlShowCharacterSetStatement
p14174
tp14175
I2
s(Vinsert
p14176
I42
VSimpleName: assertTrue
p14177
Vinsert
p14178
I45
VStringLiteral: "\u005c"C0\u005c""
p14179
tp14180
I1
s(g9420
I42
g9421
Vinsert
p14181
I42
VSimpleName: Exception
p14182
tp14183
I2
s(g356
I42
g357
Vinsert
p14184
I42
VSimpleName: getBrowserIE9Count
p14185
tp14186
I1
s(Vinsert
p14187
I42
VSimpleName: isLoggable
p14188
Vinsert
p14189
I42
VSimpleName: infoCount
p14190
tp14191
I1
s(g7158
I42
g7159
Vinsert
p14192
I32
VMethodInvocation
p14193
tp14194
I1
s(Vinsert
p14195
I42
VSimpleName: output
p14196
Vinsert
p14197
I42
VSimpleName: alias
p14198
tp14199
I1
s(g7131
I42
g7132
Vinsert
p14200
I39
VPrimitiveType: long
p14201
tp14202
I1
s(g2268
I42
g2269
Vinsert
p14203
I42
VSimpleName: table
p14204
tp14205
I1
s(g12189
I42
g12190
Vinsert
p14206
I41
VReturnStatement
p14207
tp14208
I1
s(g2657
I42
g2658
Vinsert
p14209
I42
VSimpleName: String
p14210
tp14211
I5
s(Vinsert
p14212
I42
VSimpleName: getURIStatDataList
p14213
Vinsert
p14214
I27
VInfixExpression: ==
p14215
tp14216
I1
s(g12726
I42
g12727
Vinsert
p14217
I42
VSimpleName: getStartTransactionTimeMillis
p14218
tp14219
I1
s(g381
I42
g382
Vinsert
p14220
I33
VNullLiteral
p14221
tp14222
I1
s(g6699
I42
g6700
Vinsert
p14223
I60
VVariableDeclarationStatement
p14224
tp14225
I2
s(Vinsert
p14226
I42
VSimpleName: getFunction
p14227
Vinsert
p14228
I21
VExpressionStatement
p14229
tp14230
I2
s(g13147
I42
g13148
Vinsert
p14231
I42
VSimpleName: test_false
p14232
tp14233
I25
s(Vinsert
p14234
I42
VSimpleName: clob_getSubString
p14235
Vinsert
p14236
I41
VReturnStatement
p14237
tp14238
I1
s(Vinsert
p14239
I42
VSimpleName: createSchemaStatVisitor
p14240
Vinsert
p14241
I45
VStringLiteral: "stmtList size : "
p14242
tp14243
I1
s(Vinsert
p14244
I42
VSimpleName: getRunningCount
p14245
Vinsert
p14246
I42
VSimpleName: buf
p14247
tp14248
I2
s(g3893
I42
g3894
Vinsert
p14249
I21
VExpressionStatement
p14250
tp14251
I2
s(g5156
I42
g5157
Vinsert
p14252
I21
VExpressionStatement
p14253
tp14254
I5
s(g301
I42
g302
Vinsert
p14255
I21
VExpressionStatement
p14256
tp14257
I151
s(g1002
I42
g1003
Vinsert
p14258
I8
VBlock
p14259
tp14260
I1
s(Vinsert
p14261
I42
VSimpleName: assertEquals
p14262
Vinsert
p14263
I42
VSimpleName: toJSONString
p14264
tp14265
I1
s(Vinsert
p14266
I42
VSimpleName: setLockMode
p14267
Vinsert
p14268
I40
VQualifiedName: Token.SHARE
p14269
tp14270
I1
s(g11803
I42
g11804
Vinsert
p14271
I42
VSimpleName: queryRest
p14272
tp14273
I2
s(Vinsert
p14274
I42
VSimpleName: listFiles
p14275
Vinsert
p14276
I42
VSimpleName: child
p14277
tp14278
I1
s(Vinsert
p14279
I42
VSimpleName: toSQLString
p14280
Vinsert
p14281
I45
VStringLiteral: "\u005ct, a.SID AS SID, a.TYPE AS lock_type, a.row_wait_file#, a.row_wait_block#, a.row_wait_row#\u005cn"
p14282
tp14283
I1
s(g10459
I42
g10460
Vinsert
p14284
I42
VSimpleName: queryBlock
p14285
tp14286
I2
s(g11307
I42
g11308
Vinsert
p14287
I22
VFieldAccess
p14288
tp14289
I2
s(Vinsert
p14290
I42
VSimpleName: incrementAndGet
p14291
Vinsert
p14292
I39
VPrimitiveType: int
p14293
tp14294
I1
s(Vinsert
p14295
I42
VSimpleName: setWithRollUp
p14296
Vinsert
p14297
I32
VMethodInvocation
p14298
tp14299
I4
s(g381
I42
g382
Vinsert
p14300
I42
VSimpleName: hint1
p14301
tp14302
I1
s(Vinsert
p14303
I42
VSimpleName: getInstance
p14304
Vinsert
p14305
I42
VSimpleName: wallStats
p14306
tp14307
I1
s(g886
I42
g887
Vinsert
p14308
I32
VMethodInvocation
p14309
tp14310
I1
s(Vinsert
p14311
I42
VSimpleName: close
p14312
Vinsert
p14313
I42
VSimpleName: sql
p14314
tp14315
I8
s(Vinsert
p14316
I42
VSimpleName: recode
p14317
Vinsert
p14318
I40
VQualifiedName: StatementExecuteType.ExecuteQuery
p14319
tp14320
I1
s(g10864
I42
g10865
Vinsert
p14321
I43
VSimpleType: String
p14322
tp14323
I1
s(Vinsert
p14324
I42
VSimpleName: get
p14325
Vinsert
p14326
I41
VReturnStatement
p14327
tp14328
I39
s(g6684
I42
g6685
Vinsert
p14329
I7
VAssignment: =
p14330
tp14331
I3
s(g7631
I42
g7632
Vinsert
p14332
I42
VSimpleName: invokeService
p14333
tp14334
I2
s(Vinsert
p14335
I42
VSimpleName: createExprParser
p14336
Vinsert
p14337
I45
VStringLiteral: "dec(19,1)"
p14338
tp14339
I1
s(g13027
I42
g13028
Vinsert
p14340
I42
VSimpleName: leftResult
p14341
tp14342
I1
s(Vinsert
p14343
I42
VSimpleName: transfer
p14344
Vinsert
p14345
I8
VBlock
p14346
tp14347
I1
s(Vinsert
p14348
I42
VSimpleName: config
p14349
Vinsert
p14350
I44
VSingleVariableDeclaration
p14351
tp14352
I2
s(Vinsert
p14353
I42
VSimpleName: isExceptionFatal
p14354
Vinsert
p14355
I59
VVariableDeclarationFragment
p14356
tp14357
I3
s(g502
I42
g503
Vinsert
p14358
I43
VSimpleType: SQLExprParser
p14359
tp14360
I1
s(Vinsert
p14361
I42
VSimpleName: check
p14362
Vinsert
p14363
I42
VSimpleName: x
p14364
tp14365
I11
s(g4635
I42
g4636
Vinsert
p14366
I83
VModifier: public
p14367
tp14368
I2
s(g11474
I42
g11475
Vinsert
p14369
I32
VMethodInvocation
p14370
tp14371
I7
s(Vinsert
p14372
I42
VSimpleName: getQuery
p14373
Vinsert
p14374
I42
VSimpleName: println
p14375
tp14376
I1
s(g6429
I42
g6430
Vinsert
p14377
I9
VBooleanLiteral: false
p14378
tp14379
I1
s(g11727
I42
g11728
Vinsert
p14380
I42
VSimpleName: sessionStatLock
p14381
tp14382
I1
s(g10292
I42
g10293
Vinsert
p14383
I42
VSimpleName: propValue
p14384
tp14385
I1
s(g2586
I42
g2587
Vinsert
p14386
I33
VNullLiteral
p14387
tp14388
I6
s(Vinsert
p14389
I42
VSimpleName: charAt
p14390
Vinsert
p14391
I42
VSimpleName: stringVal
p14392
tp14393
I2
s(g9006
I42
g9007
Vinsert
p14394
I42
VSimpleName: latch
p14395
tp14396
I6
s(Vinsert
p14397
I42
VSimpleName: toSQLString
p14398
Vinsert
p14399
I45
VStringLiteral: "\u005ctDISABLE STORAGE IN ROW\u005cn"
p14400
tp14401
I1
s(Vinsert
p14402
I42
VSimpleName: size
p14403
Vinsert
p14404
I42
VSimpleName: data
p14405
tp14406
I1
s(g9350
I42
g9351
Vinsert
p14407
I42
VSimpleName: columnName
p14408
tp14409
I3
s(g5633
I42
g5634
Vinsert
p14410
I40
VQualifiedName: java.sql.SQLFeatureNotSupportedException
p14411
tp14412
I1
s(g3350
I42
g3351
Vinsert
p14413
I42
VSimpleName: setValues
p14414
tp14415
I1
s(Vinsert
p14416
I42
VSimpleName: assertEquals
p14417
Vinsert
p14418
I40
VQualifiedName: JdbcConstants.INFORMIX
p14419
tp14420
I1
s(Vinsert
p14421
I42
VSimpleName: getFilterClassNames
p14422
Vinsert
p14423
I42
VSimpleName: getProxyFilters
p14424
tp14425
I1
s(Vinsert
p14426
I42
VSimpleName: getBean
p14427
Vinsert
p14428
I42
VSimpleName: test_wrap
p14429
tp14430
I1
s(Vinsert
p14431
I42
VSimpleName: normalize
p14432
Vinsert
p14433
I42
VSimpleName: functionName
p14434
tp14435
I1
s(g733
I42
g734
Vinsert
p14436
I21
VExpressionStatement
p14437
tp14438
I9
s(g10829
I42
g10830
Vinsert
p14439
I59
VVariableDeclarationFragment
p14440
tp14441
I1
s(Vinsert
p14442
I42
VSimpleName: accept
p14443
Vinsert
p14444
I45
VStringLiteral: " FROM "
p14445
tp14446
I1
s(Vinsert
p14447
I42
VSimpleName: toLowerCase
p14448
Vinsert
p14449
I42
VSimpleName: lowerName
p14450
tp14451
I2
s(Vinsert
p14452
I42
VSimpleName: count
p14453
Vinsert
p14454
I42
VSimpleName: result
p14455
tp14456
I7
s(Vinsert
p14457
I42
VSimpleName: token
p14458
Vinsert
p14459
I38
VPrefixExpression: -
p14460
tp14461
I1
s(g8760
I42
g8761
Vinsert
p14462
I43
VSimpleType: SQLSelect
p14463
tp14464
I1
s(g7532
I42
g7533
Vinsert
p14465
I42
VSimpleName: column
p14466
tp14467
I1
s(Vinsert
p14468
I42
VSimpleName: form
p14469
Vinsert
p14470
I42
VSimpleName: containsPermitSchema
p14471
tp14472
I1
s(g10275
I42
g10276
Vinsert
p14473
I60
VVariableDeclarationStatement
p14474
tp14475
I1
s(g8849
I42
g8850
Vinsert
p14476
I11
VCastExpression
p14477
tp14478
I1
s(Vinsert
p14479
I42
VSimpleName: warn
p14480
Vinsert
p14481
I43
VSimpleType: UnsupportedOperationException
p14482
tp14483
I1
s(Vinsert
p14484
I42
VSimpleName: accept
p14485
Vinsert
p14486
I42
VSimpleName: ParameterizedVisitor
p14487
tp14488
I1
s(Vinsert
p14489
I42
VSimpleName: findColumn
p14490
Vinsert
p14491
I36
VParenthesizedExpression
p14492
tp14493
I2
s(g7497
I42
g7498
Vinsert
p14494
I43
VSimpleType: SQLParseException
p14495
tp14496
I1
s(Vinsert
p14497
I42
VSimpleName: get
p14498
Vinsert
p14499
I42
VSimpleName: lastCreateErrorTimeMillis
p14500
tp14501
I1
s(g6927
I42
g6928
Vinsert
p14502
I40
VQualifiedName: Token.IDENTIFIER
p14503
tp14504
I1
s(g6275
I42
g6276
Vinsert
p14505
I42
VSimpleName: getConnection
p14506
tp14507
I1
s(g1410
I42
g1411
Vinsert
p14508
I27
VInfixExpression: !=
p14509
tp14510
I1
s(g9519
I42
g9520
Vinsert
p14511
I42
VSimpleName: xid
p14512
tp14513
I1
s(g6544
I42
g6545
Vinsert
p14514
I42
VSimpleName: concat
p14515
tp14516
I1
s(Vinsert
p14517
I42
VSimpleName: getColumns
p14518
Vinsert
p14519
I42
VSimpleName: SQLUniqueConstraint
p14520
tp14521
I2
s(Vinsert
p14522
I42
VSimpleName: toSQLString
p14523
Vinsert
p14524
I45
VStringLiteral: "CREATE OR REPLEACE TRIGGER projects_idt\u005cn"
p14525
tp14526
I1
s(Vinsert
p14527
I42
VSimpleName: identifierEquals
p14528
Vinsert
p14529
I40
VQualifiedName: lexer.token
p14530
tp14531
I3
s(g10412
I42
g10413
Vinsert
p14532
I42
VSimpleName: print
p14533
tp14534
I1
s(Vinsert
p14535
I42
VSimpleName: toSQLString
p14536
Vinsert
p14537
I45
VStringLiteral: "\u005ct\u005ctAND outer.dbinc_key = bdf.dbinc_key\u005cn"
p14538
tp14539
I1
s(Vinsert
p14540
I42
VSimpleName: resultSet_insertRow
p14541
Vinsert
p14542
I21
VExpressionStatement
p14543
tp14544
I1
s(g4640
I42
g4641
Vinsert
p14545
I31
VMethodDeclaration
p14546
tp14547
I1
s(g12435
I42
g12436
Vinsert
p14548
I44
VSingleVariableDeclaration
p14549
tp14550
I1
s(Vinsert
p14551
I42
VSimpleName: getLabel
p14552
Vinsert
p14553
I41
VReturnStatement
p14554
tp14555
I1
s(g1599
I42
g1600
Vinsert
p14556
I22
VFieldAccess
p14557
tp14558
I1
s(g4885
I42
g4886
Vinsert
p14559
I27
VInfixExpression: ==
p14560
tp14561
I2
s(g2775
I42
g2776
Vinsert
p14562
I43
VSimpleType: TraceErrorEvent
p14563
tp14564
I1
s(g5156
I42
g5157
Vinsert
p14565
I42
VSimpleName: stmt
p14566
tp14567
I3
s(g1198
I42
g1199
Vinsert
p14568
I42
VSimpleName: SQLDataType
p14569
tp14570
I3
s(g8823
I42
g8824
Vinsert
p14571
I33
VNullLiteral
p14572
tp14573
I2
s(g2910
I42
g2911
Vinsert
p14574
I42
VSimpleName: Collections
p14575
tp14576
I7
s(g6539
I42
g6540
Vinsert
p14577
I45
VStringLiteral: "\u005cn\u005ctdepartment_id"
p14578
tp14579
I2
s(g11330
I42
g11331
Vinsert
p14580
I45
VStringLiteral: "LANGUAGE JAVA NAME '"
p14581
tp14582
I1
s(Vinsert
p14583
I42
VSimpleName: currentTimeMillis
p14584
Vinsert
p14585
I42
VSimpleName: ping_1000
p14586
tp14587
I2
s(g2538
I42
g2539
Vinsert
p14588
I43
VSimpleType: PreparedStatementProxy
p14589
tp14590
I1
s(g5887
I42
g5888
Vinsert
p14591
I42
VSimpleName: token
p14592
tp14593
I1
s(g7883
I42
g7884
Vinsert
p14594
I83
VModifier: final
p14595
tp14596
I1
s(Vinsert
p14597
I42
VSimpleName: getStatement
p14598
Vinsert
p14599
I42
VSimpleName: stmt
p14600
tp14601
I9
s(g9732
I42
g9733
Vinsert
p14602
I33
VNullLiteral
p14603
tp14604
I1
s(Vinsert
p14605
I42
VSimpleName: setUsername
p14606
Vinsert
p14607
I27
VInfixExpression: !=
p14608
tp14609
I1
s(g3307
I42
g3308
Vinsert
p14610
I42
VSimpleName: methodSignature
p14611
tp14612
I1
s(g6056
I42
g6057
Vinsert
p14613
I43
VSimpleType: OracleCursorExpr
p14614
tp14615
I1
s(g3078
I42
g3079
Vinsert
p14616
I8
VBlock
p14617
tp14618
I2
s(g7787
I42
g7788
Vinsert
p14619
I27
VInfixExpression: !=
p14620
tp14621
I1
s(Vinsert
p14622
I42
VSimpleName: set
p14623
Vinsert
p14624
I52
VThisExpression
p14625
tp14626
I2
s(g816
I42
g817
Vinsert
p14627
I32
VMethodInvocation
p14628
tp14629
I7
s(Vinsert
p14630
I42
VSimpleName: toOracleString
p14631
Vinsert
p14632
I43
VSimpleType: SQLObject
p14633
tp14634
I1
s(Vinsert
p14635
I42
VSimpleName: entrySet
p14636
Vinsert
p14637
I42
VSimpleName: getFirstEntity
p14638
tp14639
I1
s(Vinsert
p14640
I42
VSimpleName: setFunctionCheck
p14641
Vinsert
p14642
I42
VSimpleName: WallConfig
p14643
tp14644
I2
s(g1456
I42
g1457
Vinsert
p14645
I42
VSimpleName: clazz
p14646
tp14647
I6
s(g8528
I42
g8529
Vinsert
p14648
I42
VSimpleName: SchemaObject
p14649
tp14650
I2
s(Vinsert
p14651
I42
VSimpleName: assertEquals
p14652
Vinsert
p14653
I42
VSimpleName: Log4jFilter
p14654
tp14655
I1
s(g3793
I42
g3794
Vinsert
p14656
I83
VModifier: public
p14657
tp14658
I1
s(Vinsert
p14659
I42
VSimpleName: set
p14660
Vinsert
p14661
I42
VSimpleName: condition
p14662
tp14663
I1
s(Vinsert
p14664
I42
VSimpleName: toSQLString
p14665
Vinsert
p14666
I45
VStringLiteral: "\u005cn\u005ctdiv_no NUMBER(2),"
p14667
tp14668
I2
s(g7063
I42
g7064
Vinsert
p14669
I45
VStringLiteral: "select 2"
p14670
tp14671
I1
s(Vinsert
p14672
I42
VSimpleName: startsWith
p14673
Vinsert
p14674
I9
VBooleanLiteral: false
p14675
tp14676
I1
s(g14155
I42
g14156
Vinsert
p14677
I8
VBlock
p14678
tp14679
I1
s(Vinsert
p14680
I42
VSimpleName: println
p14681
Vinsert
p14682
I42
VSimpleName: toJSONString
p14683
tp14684
I1
s(g14664
I42
g14665
Vinsert
p14685
I45
VStringLiteral: "CREATE TABLE divisions ("
p14686
tp14687
I4
s(g4452
I42
g4453
Vinsert
p14688
I42
VSimpleName: Set
p14689
tp14690
I1
s(g10257
I42
g10258
Vinsert
p14691
I42
VSimpleName: prepareStatement
p14692
tp14693
I7
s(g8075
I42
g8076
Vinsert
p14694
I42
VSimpleName: expr
p14695
tp14696
I1
s(Vinsert
p14697
I42
VSimpleName: containsKey
p14698
Vinsert
p14699
I42
VSimpleName: map
p14700
tp14701
I2
s(Vinsert
p14702
I42
VSimpleName: assertEquals
p14703
Vinsert
p14704
I42
VSimpleName: DruidDataSource
p14705
tp14706
I1
s(g5787
I42
g5788
Vinsert
p14707
I42
VSimpleName: assertTrue
p14708
tp14709
I1
s(g4134
I42
g4135
Vinsert
p14710
I60
VVariableDeclarationStatement
p14711
tp14712
I1
s(g1835
I42
g1836
Vinsert
p14713
I13
VCharacterLiteral: '('
p14714
tp14715
I1
s(g8956
I42
g8957
Vinsert
p14716
I21
VExpressionStatement
p14717
tp14718
I1
s(g13331
I42
g13332
Vinsert
p14719
I40
VQualifiedName: com.mysql.jdbc.jdbc2.optional.SuspendableXAConnection
p14720
tp14721
I1
s(Vinsert
p14722
I42
VSimpleName: isRegistered
p14723
Vinsert
p14724
I42
VSimpleName: ManagementFactory
p14725
tp14726
I1
s(g1448
I42
g1449
Vinsert
p14727
I60
VVariableDeclarationStatement
p14728
tp14729
I3
s(Vinsert
p14730
I42
VSimpleName: getClass
p14731
Vinsert
p14732
I42
VSimpleName: cause
p14733
tp14734
I2
s(g8373
I42
g8374
Vinsert
p14735
I43
VSimpleType: SQLServerInsertStatement
p14736
tp14737
I2
s(g4824
I42
g4825
Vinsert
p14738
I43
VSimpleType: SQLException
p14739
tp14740
I1
s(g3780
I42
g3781
Vinsert
p14741
I21
VExpressionStatement
p14742
tp14743
I82
s(Vinsert
p14744
I42
VSimpleName: format
p14745
Vinsert
p14746
I42
VSimpleName: SimpleDateFormat
p14747
tp14748
I6
s(Vinsert
p14749
I42
VSimpleName: addSelectItem
p14750
Vinsert
p14751
I21
VExpressionStatement
p14752
tp14753
I2
s(Vinsert
p14754
I42
VSimpleName: createXAConnection
p14755
Vinsert
p14756
I42
VSimpleName: error
p14757
tp14758
I1
s(g11537
I42
g11538
Vinsert
p14759
I42
VSimpleName: rowCount
p14760
tp14761
I1
s(g3040
I42
g3041
Vinsert
p14762
I42
VSimpleName: poolableStatement
p14763
tp14764
I3
s(Vinsert
p14765
I42
VSimpleName: getFilter
p14766
Vinsert
p14767
I42
VSimpleName: scan
p14768
tp14769
I2
s(g12222
I42
g12223
Vinsert
p14770
I42
VSimpleName: stmt
p14771
tp14772
I1
s(g9355
I42
g9356
Vinsert
p14773
I42
VSimpleName: union
p14774
tp14775
I5
s(g3500
I42
g3501
Vinsert
p14776
I42
VSimpleName: createOutputVisitor
p14777
tp14778
I1
s(g11996
I42
g11997
Vinsert
p14779
I45
VStringLiteral: "1"
p14780
tp14781
I1
s(Vinsert
p14782
I42
VSimpleName: getDatabase
p14783
Vinsert
p14784
I27
VInfixExpression: !=
p14785
tp14786
I2
s(g14006
I42
g14007
Vinsert
p14787
I42
VSimpleName: dbType
p14788
tp14789
I1
s(Vinsert
p14790
I42
VSimpleName: getConditionExpr
p14791
Vinsert
p14792
I40
VQualifiedName: SQLCaseStatement.Item
p14793
tp14794
I1
s(g13617
I42
g13618
Vinsert
p14795
I25
VIfStatement
p14796
tp14797
I1
s(g4409
I42
g4410
Vinsert
p14798
I32
VMethodInvocation
p14799
tp14800
I7
s(Vinsert
p14801
I42
VSimpleName: name
p14802
Vinsert
p14803
I43
VSimpleType: MysqlDeallocatePrepareStatement
p14804
tp14805
I2
s(g2624
I42
g2625
Vinsert
p14806
I34
VNumberLiteral: 0
p14807
tp14808
I1
s(Vinsert
p14809
I42
VSimpleName: getTargetList
p14810
Vinsert
p14811
I42
VSimpleName: param
p14812
tp14813
I1
s(g13050
I42
g13051
Vinsert
p14814
I25
VIfStatement
p14815
tp14816
I1
s(g8080
I42
g8081
Vinsert
p14817
I42
VSimpleName: param2
p14818
tp14819
I1
s(g11732
I42
g11733
Vinsert
p14820
I34
VNumberLiteral: 0
p14821
tp14822
I1
s(g1715
I42
g1716
Vinsert
p14823
I42
VSimpleName: PoolableConnection
p14824
tp14825
I1
s(g6162
I42
g6163
Vinsert
p14826
I33
VNullLiteral
p14827
tp14828
I195
s(Vinsert
p14829
I42
VSimpleName: toMySqlString
p14830
Vinsert
p14831
I43
VSimpleType: SQLStatement
p14832
tp14833
I2
s(Vinsert
p14834
I42
VSimpleName: setBeanFactory
p14835
Vinsert
p14836
I8
VBlock
p14837
tp14838
I1
s(Vinsert
p14839
I42
VSimpleName: getCloseCount
p14840
Vinsert
p14841
I32
VMethodInvocation
p14842
tp14843
I7
s(Vinsert
p14844
I42
VSimpleName: nextToken
p14845
Vinsert
p14846
I42
VSimpleName: getTableOptions
p14847
tp14848
I1
s(g2413
I42
g2414
Vinsert
p14849
I43
VSimpleType: MySqlShowEventsStatement
p14850
tp14851
I1
s(g5767
I42
g5768
Vinsert
p14852
I42
VSimpleName: resetAllStat
p14853
tp14854
I2
s(g1180
I42
g1181
Vinsert
p14855
I42
VSimpleName: getSqlMapClientTemplate
p14856
tp14857
I2
s(g9778
I42
g9779
Vinsert
p14858
I42
VSimpleName: getColumns
p14859
tp14860
I1
s(g1521
I42
g1522
Vinsert
p14861
I42
VSimpleName: UnsupportedOperationException
p14862
tp14863
I1
s(g13868
I42
g13869
Vinsert
p14864
I42
VSimpleName: size
p14865
tp14866
I1
s(g9959
I42
g9960
Vinsert
p14867
I42
VSimpleName: Bean
p14868
tp14869
I2
s(g3709
I42
g3710
Vinsert
p14870
I74
VParameterizedType: ArrayList<DruidDataSource>
p14871
tp14872
I1
s(g7888
I42
g7889
Vinsert
p14873
I42
VSimpleName: sql
p14874
tp14875
I6
s(Vinsert
p14876
I42
VSimpleName: setType
p14877
Vinsert
p14878
I42
VSimpleName: expr
p14879
tp14880
I1
s(Vinsert
p14881
I42
VSimpleName: record
p14882
Vinsert
p14883
I42
VSimpleName: lastAccessTimeMillis
p14884
tp14885
I3
s(Vinsert
p14886
I42
VSimpleName: size
p14887
Vinsert
p14888
I45
VStringLiteral: "\u005ctEXECUTE IMMEDIATE 'DROP SEQUENCE properties_seq';\u005cn"
p14889
tp14890
I1
s(Vinsert
p14891
I42
VSimpleName: isEmpty
p14892
Vinsert
p14893
I27
VInfixExpression: &&
p14894
tp14895
I4
s(Vinsert
p14896
I42
VSimpleName: checkSelelct
p14897
Vinsert
p14898
I44
VSingleVariableDeclaration
p14899
tp14900
I1
s(g7736
I42
g7737
Vinsert
p14901
I61
VWhileStatement
p14902
tp14903
I1
s(Vinsert
p14904
I42
VSimpleName: executeQuery
p14905
Vinsert
p14906
I42
VSimpleName: globalConnection
p14907
tp14908
I1
s(Vinsert
p14909
I42
VSimpleName: clone
p14910
Vinsert
p14911
I42
VSimpleName: maxExtents
p14912
tp14913
I1
s(g3472
I42
g3473
Vinsert
p14914
I45
VStringLiteral: "force all partitions "
p14915
tp14916
I1
s(Vinsert
p14917
I42
VSimpleName: toPGString
p14918
Vinsert
p14919
I45
VStringLiteral: "\u005ct\u005ct\u005ctAND st_intersects(st_transform(ST_GeomFromText(?, 4326), 26986), st_transform(polygon, 26986))\u005cn"
p14920
tp14921
I1
s(g8661
I42
g8662
Vinsert
p14922
I40
VQualifiedName: Token.USING
p14923
tp14924
I2
s(Vinsert
p14925
I42
VSimpleName: assertEquals
p14926
Vinsert
p14927
I42
VSimpleName: getPassword
p14928
tp14929
I2
s(g2765
I42
g2766
Vinsert
p14930
I45
VStringLiteral: "200"
p14931
tp14932
I1
s(Vinsert
p14933
I42
VSimpleName: toMySqlString
p14934
Vinsert
p14935
I41
VReturnStatement
p14936
tp14937
I1
s(Vinsert
p14938
I42
VSimpleName: accept
p14939
Vinsert
p14940
I45
VStringLiteral: "\u005cn\u005ctVERSION INTEGER,"
p14941
tp14942
I1
s(Vinsert
p14943
I42
VSimpleName: assertTrue
p14944
Vinsert
p14945
I43
VSimpleType: MockResultSetMetaData
p14946
tp14947
I2
s(g6323
I42
g6324
Vinsert
p14948
I83
VModifier: public
p14949
tp14950
I1
s(Vinsert
p14951
I42
VSimpleName: assertNotNull
p14952
Vinsert
p14953
I42
VSimpleName: ex
p14954
tp14955
I54
s(g14402
I42
g14403
Vinsert
p14956
I42
VSimpleName: scan
p14957
tp14958
I1
s(g3636
I42
g3637
Vinsert
p14959
I40
VQualifiedName: System.out
p14960
tp14961
I70
s(Vinsert
p14962
I42
VSimpleName: nextToken
p14963
Vinsert
p14964
I45
VStringLiteral: "NOSORT"
p14965
tp14966
I1
s(Vinsert
p14967
I42
VSimpleName: stringVal
p14968
Vinsert
p14969
I45
VStringLiteral: "USING"
p14970
tp14971
I1
s(Vinsert
p14972
I42
VSimpleName: substring
p14973
Vinsert
p14974
I42
VSimpleName: indexOf
p14975
tp14976
I1
s(g3821
I42
g3822
Vinsert
p14977
I40
VQualifiedName: TableStat.Name
p14978
tp14979
I1
s(Vinsert
p14980
I42
VSimpleName: close
p14981
Vinsert
p14982
I43
VSimpleType: PoolableResultSet
p14983
tp14984
I1
s(Vinsert
p14985
I42
VSimpleName: getUnderlyingTransactionIsolation
p14986
Vinsert
p14987
I42
VSimpleName: getDataSource
p14988
tp14989
I1
s(Vinsert
p14990
I42
VSimpleName: addAndGet
p14991
Vinsert
p14992
I42
VSimpleName: readerOpenCount
p14993
tp14994
I2
s(g14635
I42
g14636
Vinsert
p14995
I42
VSimpleName: entities
p14996
tp14997
I1
s(g4188
I42
g4189
Vinsert
p14998
I26
VImportDeclaration
p14999
tp15000
I4
s(g3302
I42
g3303
Vinsert
p15001
I42
VSimpleName: contains
p15002
tp15003
I13
s(g6630
I42
g6631
Vinsert
p15004
I32
VMethodInvocation
p15005
tp15006
I7
s(g14881
I42
g14882
Vinsert
p15007
I27
VInfixExpression: -
p15008
tp15009
I1
s(Vinsert
p15010
I42
VSimpleName: setDebugUnreturnedConnectionStackTraces
p15011
Vinsert
p15012
I33
VNullLiteral
p15013
tp15014
I1
s(g13933
I42
g13934
Vinsert
p15015
I42
VSimpleName: token
p15016
tp15017
I1
s(Vinsert
p15018
I42
VSimpleName: getPartition
p15019
Vinsert
p15020
I32
VMethodInvocation
p15021
tp15022
I3
s(g4298
I42
g4299
Vinsert
p15023
I33
VNullLiteral
p15024
tp15025
I1
s(g11808
I42
g11809
Vinsert
p15026
I42
VSimpleName: setDbType
p15027
tp15028
I2
s(Vinsert
p15029
I42
VSimpleName: longValue
p15030
Vinsert
p15031
I39
VPrimitiveType: long
p15032
tp15033
I1
s(g11542
I42
g11543
Vinsert
p15034
I43
VSimpleType: SQLCommentHint
p15035
tp15036
I1
s(g2742
I42
g2743
Vinsert
p15037
I42
VSimpleName: value
p15038
tp15039
I1
s(g306
I42
g307
Vinsert
p15040
I42
VSimpleName: statementList
p15041
tp15042
I3
s(Vinsert
p15043
I42
VSimpleName: get
p15044
Vinsert
p15045
I42
VSimpleName: fireEventCount
p15046
tp15047
I1
s(Vinsert
p15048
I42
VSimpleName: setColumnType
p15049
Vinsert
p15050
I42
VSimpleName: column
p15051
tp15052
I5
s(g6737
I42
g6738
Vinsert
p15053
I42
VSimpleName: features
p15054
tp15055
I1
s(g11072
I42
g11073
Vinsert
p15056
I8
VBlock
p15057
tp15058
I5
s(g11795
I42
g11796
Vinsert
p15059
I42
VSimpleName: e
p15060
tp15061
I3
s(g4704
I42
g4705
Vinsert
p15062
I42
VSimpleName: attrComments
p15063
tp15064
I4
s(g5414
I42
g5415
Vinsert
p15065
I16
VConditionalExpression
p15066
tp15067
I1
s(Vinsert
p15068
I42
VSimpleName: getParameters
p15069
Vinsert
p15070
I42
VSimpleName: subParamExpr
p15071
tp15072
I1
s(g6116
I42
g6117
Vinsert
p15073
I42
VSimpleName: sql
p15074
tp15075
I1
s(g4134
I42
g4135
Vinsert
p15076
I8
VBlock
p15077
tp15078
I2
s(g276
I42
g277
Vinsert
p15079
I45
VStringLiteral: "\u005cnLIMIT 100"
p15080
tp15081
I1
s(Vinsert
p15082
I42
VSimpleName: currentTimeMillis
p15083
Vinsert
p15084
I25
VIfStatement
p15085
tp15086
I3
s(Vinsert
p15087
I42
VSimpleName: getObjectName
p15088
Vinsert
p15089
I42
VSimpleName: ManagementFactory
p15090
tp15091
I1
s(Vinsert
p15092
I42
VSimpleName: append
p15093
Vinsert
p15094
I42
VSimpleName: statementList
p15095
tp15096
I1
s(Vinsert
p15097
I42
VSimpleName: assertFalse
p15098
Vinsert
p15099
I42
VSimpleName: isValidateSqlServer
p15100
tp15101
I1
s(g5633
I42
g5634
Vinsert
p15102
I32
VMethodInvocation
p15103
tp15104
I15
s(g6992
I42
g6993
Vinsert
p15105
I42
VSimpleName: sqlStatInfo
p15106
tp15107
I2
s(Vinsert
p15108
I42
VSimpleName: getAndIncrement
p15109
Vinsert
p15110
I43
VSimpleType: Connection
p15111
tp15112
I1
s(g4630
I42
g4631
Vinsert
p15113
I27
VInfixExpression: &&
p15114
tp15115
I1
s(g1700
I42
g1701
Vinsert
p15116
I21
VExpressionStatement
p15117
tp15118
I1
s(Vinsert
p15119
I42
VSimpleName: getGlobalPartitions
p15120
Vinsert
p15121
I42
VSimpleName: stmt
p15122
tp15123
I2
s(g2977
I42
g2978
Vinsert
p15124
I45
VStringLiteral: "FROM sel\u005cn"
p15125
tp15126
I1
s(Vinsert
p15127
I42
VSimpleName: nextToken
p15128
Vinsert
p15129
I42
VSimpleName: SQLServerLexer
p15130
tp15131
I2
s(g5854
I42
g5855
Vinsert
p15132
I42
VSimpleName: lexer
p15133
tp15134
I1
s(g11479
I42
g11480
Vinsert
p15135
I42
VSimpleName: setExpr
p15136
tp15137
I1
s(g11983
I42
g11984
Vinsert
p15138
I42
VSimpleName: SQLStatementParser
p15139
tp15140
I2
s(g6781
I42
g6782
Vinsert
p15141
I21
VExpressionStatement
p15142
tp15143
I2
s(g13223
I42
g13224
Vinsert
p15144
I42
VSimpleName: SQLException
p15145
tp15146
I1
s(g10813
I42
g10814
Vinsert
p15147
I45
VStringLiteral: "?"
p15148
tp15149
I1
s(g801
I42
g802
Vinsert
p15150
I42
VSimpleName: assertNotNull
p15151
tp15152
I1
s(Vinsert
p15153
I42
VSimpleName: setUpdateWhereNoneCheck
p15154
Vinsert
p15155
I32
VMethodInvocation
p15156
tp15157
I1
s(g2672
I42
g2673
Vinsert
p15158
I25
VIfStatement
p15159
tp15160
I3
s(Vinsert
p15161
I42
VSimpleName: assertNotNull
p15162
Vinsert
p15163
I45
VStringLiteral: "Int"
p15164
tp15165
I1
s(Vinsert
p15166
I42
VSimpleName: println
p15167
Vinsert
p15168
I42
VSimpleName: desens_Sql
p15169
tp15170
I1
s(g301
I42
g302
Vinsert
p15171
I42
VSimpleName: Assert
p15172
tp15173
I156
s(g14659
I42
g14660
Vinsert
p15174
I34
VNumberLiteral: 2
p15175
tp15176
I1
s(Vinsert
p15177
I42
VSimpleName: clear
p15178
Vinsert
p15179
I42
VSimpleName: setProviders
p15180
tp15181
I1
s(g61
I42
g62
Vinsert
p15182
I42
VSimpleName: rang
p15183
tp15184
I2
s(g4334
I42
g4335
Vinsert
p15185
I42
VSimpleName: nanoTime
p15186
tp15187
I1
s(Vinsert
p15188
I42
VSimpleName: toSQLString
p15189
Vinsert
p15190
I33
VNullLiteral
p15191
tp15192
I2
s(Vinsert
p15193
I42
VSimpleName: putAttribute
p15194
Vinsert
p15195
I42
VSimpleName: intValue
p15196
tp15197
I2
s(g2737
I42
g2738
Vinsert
p15198
I54
VTryStatement
p15199
tp15200
I1
s(g9529
I42
g9530
Vinsert
p15201
I32
VMethodInvocation
p15202
tp15203
I2
s(Vinsert
p15204
I42
VSimpleName: initWallTopStatementContext
p15205
Vinsert
p15206
I83
VModifier: public
p15207
tp15208
I2
s(Vinsert
p15209
I42
VSimpleName: nextToken
p15210
Vinsert
p15211
I42
VSimpleName: setObjectType
p15212
tp15213
I1
s(g11706
I42
g11707
Vinsert
p15214
I39
VPrimitiveType: int
p15215
tp15216
I1
s(g8311
I42
g8312
Vinsert
p15217
I42
VSimpleName: SQLMethodInvokeExpr
p15218
tp15219
I1
s(Vinsert
p15220
I42
VSimpleName: getRawDriverClassName
p15221
Vinsert
p15222
I45
VStringLiteral: "RawDriverClassName"
p15223
tp15224
I1
s(g4839
I42
g4840
Vinsert
p15225
I42
VSimpleName: SQLUpdateBuilder
p15226
tp15227
I1
s(g12055
I42
g12056
Vinsert
p15228
I14
VClassInstanceCreation
p15229
tp15230
I1
s(g791
I42
g792
Vinsert
p15231
I42
VSimpleName: parent
p15232
tp15233
I18
s(g4370
I42
g4371
Vinsert
p15234
I42
VSimpleName: LOG
p15235
tp15236
I4
s(g2765
I42
g2766
Vinsert
p15237
I45
VStringLiteral: "5"
p15238
tp15239
I1
s(g13061
I42
g13062
Vinsert
p15240
I45
VStringLiteral: "[1957025290,1,\u005c"2017-10-16 23:34:28.519\u005c",\u005c"2017-10-16 23:34:28.519\u005c",2933220011L,[0,-1],0,20]"
p15241
tp15242
I1
s(g3457
I42
g3458
Vinsert
p15243
I8
VBlock
p15244
tp15245
I5
s(g6396
I42
g6397
Vinsert
p15246
I42
VSimpleName: cer
p15247
tp15248
I2
s(g3282
I42
g3283
Vinsert
p15249
I25
VIfStatement
p15250
tp15251
I1
s(g9380
I42
g9381
Vinsert
p15252
I42
VSimpleName: List
p15253
tp15254
I1
s(Vinsert
p15255
I42
VSimpleName: sleep
p15256
Vinsert
p15257
I42
VSimpleName: stmt
p15258
tp15259
I1
s(g5782
I42
g5783
Vinsert
p15260
I43
VSimpleType: SQLIdentifierExpr
p15261
tp15262
I1
s(Vinsert
p15263
I42
VSimpleName: callObjectMethod
p15264
Vinsert
p15265
I42
VSimpleName: JdbcSqlStat
p15266
tp15267
I2
s(g7068
I42
g7069
Vinsert
p15268
I42
VSimpleName: identExpr
p15269
tp15270
I4
s(g8653
I42
g8654
Vinsert
p15271
I42
VSimpleName: Exception
p15272
tp15273
I3
s(g6270
I42
g6271
Vinsert
p15274
I42
VSimpleName: getName
p15275
tp15276
I1
s(g321
I42
g322
Vinsert
p15277
I42
VSimpleName: URL
p15278
tp15279
I3
s(g2383
I42
g2384
Vinsert
p15280
I42
VSimpleName: dataSource
p15281
tp15282
I2
s(g4801
I42
g4802
Vinsert
p15283
I59
VVariableDeclarationFragment
p15284
tp15285
I12
s(g2727
I42
g2728
Vinsert
p15286
I42
VSimpleName: SQLName
p15287
tp15288
I1
s(Vinsert
p15289
I42
VSimpleName: visit
p15290
Vinsert
p15291
I42
VSimpleName: SQLSelectGroupByClause
p15292
tp15293
I1
s(Vinsert
p15294
I42
VSimpleName: setPartitionCount
p15295
Vinsert
p15296
I42
VSimpleName: password
p15297
tp15298
I1
s(Vinsert
p15299
I42
VSimpleName: getStatements
p15300
Vinsert
p15301
I42
VSimpleName: incrementIndent
p15302
tp15303
I1
s(Vinsert
p15304
I42
VSimpleName: equals
p15305
Vinsert
p15306
I40
VQualifiedName: com.alibaba.druid.sql.dialect.db2.visitor.DB2SchemaStatVisitor
p15307
tp15308
I1
s(Vinsert
p15309
I42
VSimpleName: setParent
p15310
Vinsert
p15311
I42
VSimpleName: entry
p15312
tp15313
I1
s(Vinsert
p15314
I42
VSimpleName: emptyList
p15315
Vinsert
p15316
I40
VQualifiedName: JdbcConstants.MYSQL
p15317
tp15318
I1
s(g9428
I42
g9429
Vinsert
p15319
I42
VSimpleName: SQLHexExpr
p15320
tp15321
I2
s(g8373
I42
g8374
Vinsert
p15322
I42
VSimpleName: x
p15323
tp15324
I2
s(g11706
I42
g11707
Vinsert
p15325
I34
VNumberLiteral: 0
p15326
tp15327
I1
s(g14722
I42
g14723
Vinsert
p15328
I42
VSimpleName: getPlatformMBeanServer
p15329
tp15330
I1
s(g1324
I42
g1325
Vinsert
p15331
I40
VQualifiedName: Token.QUES
p15332
tp15333
I1
s(Vinsert
p15334
I42
VSimpleName: println
p15335
Vinsert
p15336
I43
VSimpleType: DB2ASTVisitorAdapter
p15337
tp15338
I1
s(g2987
I42
g2988
Vinsert
p15339
I42
VSimpleName: nameEquals
p15340
tp15341
I2
s(g1155
I42
g1156
Vinsert
p15342
I21
VExpressionStatement
p15343
tp15344
I2
s(Vinsert
p15345
I42
VSimpleName: getCause
p15346
Vinsert
p15347
I42
VSimpleName: e
p15348
tp15349
I2
s(g2982
I42
g2983
Vinsert
p15350
I27
VInfixExpression: !=
p15351
tp15352
I1
s(g14962
I42
g14963
Vinsert
p15353
I42
VSimpleName: setSort
p15354
tp15355
I1
s(g10687
I42
g10688
Vinsert
p15356
I42
VSimpleName: filter
p15357
tp15358
I1
s(Vinsert
p15359
I42
VSimpleName: createDataSource
p15360
Vinsert
p15361
I42
VSimpleName: DruidDataSourceFactory
p15362
tp15363
I1
s(g8648
I42
g8649
Vinsert
p15364
I27
VInfixExpression: ==
p15365
tp15366
I1
s(Vinsert
p15367
I42
VSimpleName: forName
p15368
Vinsert
p15369
I42
VSimpleName: Class
p15370
tp15371
I7
s(g7908
I42
g7909
Vinsert
p15372
I42
VSimpleName: dataSource
p15373
tp15374
I1
s(g4839
I42
g4840
Vinsert
p15375
I42
VSimpleName: createUpdateBuilder
p15376
tp15377
I1
s(g1740
I42
g1741
Vinsert
p15378
I42
VSimpleName: permitNames
p15379
tp15380
I2
s(g14790
I42
g14791
Vinsert
p15381
I8
VBlock
p15382
tp15383
I1
s(g6676
I42
g6677
Vinsert
p15384
I42
VSimpleName: String
p15385
tp15386
I1
s(Vinsert
p15387
I42
VSimpleName: getClass
p15388
Vinsert
p15389
I43
VSimpleType: SQLBooleanExpr
p15390
tp15391
I1
s(Vinsert
p15392
I42
VSimpleName: getItems
p15393
Vinsert
p15394
I42
VSimpleName: stmt
p15395
tp15396
I8
s(Vinsert
p15397
I42
VSimpleName: setClob
p15398
Vinsert
p15399
I43
VSimpleType: SQLDataException
p15400
tp15401
I1
s(Vinsert
p15402
I42
VSimpleName: setMinEvictableIdleTimeMillis
p15403
Vinsert
p15404
I42
VSimpleName: setMaxActive
p15405
tp15406
I2
s(Vinsert
p15407
I42
VSimpleName: getKeyName
p15408
Vinsert
p15409
I16
VConditionalExpression
p15410
tp15411
I1
s(Vinsert
p15412
I42
VSimpleName: token
p15413
Vinsert
p15414
I42
VSimpleName: identifierEquals
p15415
tp15416
I5
s(g4992
I42
g4993
Vinsert
p15417
I24
VForStatement
p15418
tp15419
I1
s(g9524
I42
g9525
Vinsert
p15420
I45
VStringLiteral: "\u005ct\u005ct\u005ctand hh = 0\u005cn"
p15421
tp15422
I1
s(g10726
I42
g10727
Vinsert
p15423
I42
VSimpleName: String
p15424
tp15425
I12
s(g2233
I42
g2234
Vinsert
p15426
I59
VVariableDeclarationFragment
p15427
tp15428
I1
s(Vinsert
p15429
I42
VSimpleName: assertTrue
p15430
Vinsert
p15431
I45
VStringLiteral: "departments"
p15432
tp15433
I1
s(g7631
I42
g7632
Vinsert
p15434
I42
VSimpleName: jmxConn
p15435
tp15436
I2
s(g5379
I42
g5380
Vinsert
p15437
I43
VSimpleType: SQLASTVisitor
p15438
tp15439
I2
s(g9722
I42
g9723
Vinsert
p15440
I59
VVariableDeclarationFragment
p15441
tp15442
I11
s(Vinsert
p15443
I42
VSimpleName: isForBrowse
p15444
Vinsert
p15445
I25
VIfStatement
p15446
tp15447
I1
s(Vinsert
p15448
I42
VSimpleName: setMinIdle
p15449
Vinsert
p15450
I42
VSimpleName: maxActive
p15451
tp15452
I1
s(g7417
I42
g7418
Vinsert
p15453
I43
VSimpleType: SQLBinaryOpExpr
p15454
tp15455
I1
s(Vinsert
p15456
I42
VSimpleName: getDriverClassName
p15457
Vinsert
p15458
I42
VSimpleName: JdbcUtils
p15459
tp15460
I2
s(Vinsert
p15461
I42
VSimpleName: add
p15462
Vinsert
p15463
I40
VQualifiedName: x.items
p15464
tp15465
I3
s(g3457
I42
g3458
Vinsert
p15466
I25
VIfStatement
p15467
tp15468
I5
s(g5903
I42
g5904
Vinsert
p15469
I32
VMethodInvocation
p15470
tp15471
I2
s(g6192
I42
g6193
Vinsert
p15472
I43
VSimpleType: SQLCaseExpr
p15473
tp15474
I1
s(Vinsert
p15475
I42
VSimpleName: token
p15476
Vinsert
p15477
I40
VQualifiedName: Token.PRIMARY
p15478
tp15479
I1
s(Vinsert
p15480
I42
VSimpleName: getLogger
p15481
Vinsert
p15482
I42
VSimpleName: statementLoggerName
p15483
tp15484
I1
s(Vinsert
p15485
I42
VSimpleName: getProxyFilters
p15486
Vinsert
p15487
I42
VSimpleName: connection
p15488
tp15489
I1
s(Vinsert
p15490
I42
VSimpleName: incrementAndGet
p15491
Vinsert
p15492
I12
VCatchClause
p15493
tp15494
I2
s(Vinsert
p15495
I42
VSimpleName: isWarnEnabled
p15496
Vinsert
p15497
I42
VSimpleName: getName
p15498
tp15499
I1
s(Vinsert
p15500
I42
VSimpleName: doInBackground
p15501
Vinsert
p15502
I42
VSimpleName: panel
p15503
tp15504
I1
s(g4170
I42
g4171
Vinsert
p15505
I60
VVariableDeclarationStatement
p15506
tp15507
I1
s(g6167
I42
g6168
Vinsert
p15508
I32
VMethodInvocation
p15509
tp15510
I3
s(g4217
I42
g4218
Vinsert
p15511
I42
VSimpleName: SQLSelectItem
p15512
tp15513
I3
s(Vinsert
p15514
I42
VSimpleName: isEnabled
p15515
Vinsert
p15516
I43
VSimpleType: VisitorFeature
p15517
tp15518
I1
s(Vinsert
p15519
I42
VSimpleName: assertEquals
p15520
Vinsert
p15521
I45
VStringLiteral: "f1 like '%'"
p15522
tp15523
I1
s(g14622
I42
g14623
Vinsert
p15524
I42
VSimpleName: reset
p15525
tp15526
I2
s(g3388
I42
g3389
Vinsert
p15527
I42
VSimpleName: impl
p15528
tp15529
I12
s(g10655
I42
g10656
Vinsert
p15530
I52
VThisExpression
p15531
tp15532
I1
s(g13911
I42
g13912
Vinsert
p15533
I52
VThisExpression
p15534
tp15535
I1
s(Vinsert
p15536
I42
VSimpleName: getServletContext
p15537
Vinsert
p15538
I42
VSimpleName: serverUrl
p15539
tp15540
I1
s(g5002
I42
g5003
Vinsert
p15541
I42
VSimpleName: list
p15542
tp15543
I1
s(g602
I42
g603
Vinsert
p15544
I21
VExpressionStatement
p15545
tp15546
I21
s(Vinsert
p15547
I42
VSimpleName: assertEquals
p15548
Vinsert
p15549
I42
VSimpleName: EvalMethodTest_insert_2
p15550
tp15551
I1
s(g5148
I42
g5149
Vinsert
p15552
I42
VSimpleName: context
p15553
tp15554
I2
s(g2915
I42
g2916
Vinsert
p15555
I42
VSimpleName: token
p15556
tp15557
I1
s(Vinsert
p15558
I42
VSimpleName: assertEquals
p15559
Vinsert
p15560
I43
VSimpleType: OracleDateExpr
p15561
tp15562
I3
s(g13395
I42
g13396
Vinsert
p15563
I36
VParenthesizedExpression
p15564
tp15565
I1
s(Vinsert
p15566
I42
VSimpleName: size
p15567
Vinsert
p15568
I45
VStringLiteral: "["
p15569
tp15570
I1
s(Vinsert
p15571
I42
VSimpleName: assertEquals
p15572
Vinsert
p15573
I45
VStringLiteral: "\u005cn\u005ctseparated DATE NOT NULL DEFAULT '9999-12-31', "
p15574
tp15575
I1
s(g3636
I42
g3637
Vinsert
p15576
I42
VSimpleName: stmt
p15577
tp15578
I5
s(g10581
I42
g10582
Vinsert
p15579
I21
VExpressionStatement
p15580
tp15581
I3
s(g7792
I42
g7793
Vinsert
p15582
I42
VSimpleName: visit
p15583
tp15584
I1
s(g1130
I42
g1131
Vinsert
p15585
I45
VStringLiteral: "CREATE MATERIALIZED VIEW sales_mv\u005cn"
p15586
tp15587
I1
s(g5849
I42
g5850
Vinsert
p15588
I45
VStringLiteral: "executeSleep"
p15589
tp15590
I1
s(g3893
I42
g3894
Vinsert
p15591
I8
VBlock
p15592
tp15593
I1
s(Vinsert
p15594
I42
VSimpleName: setCheckSelectAlwayTrueCondition
p15595
Vinsert
p15596
I42
VSimpleName: loadExtend
p15597
tp15598
I1
s(g4579
I42
g4580
Vinsert
p15599
I21
VExpressionStatement
p15600
tp15601
I15
s(Vinsert
p15602
I42
VSimpleName: token
p15603
Vinsert
p15604
I42
VSimpleName: toString
p15605
tp15606
I1
s(g7702
I42
g7703
Vinsert
p15607
I42
VSimpleName: SQLAlterTableAddPrimaryKey
p15608
tp15609
I1
s(Vinsert
p15610
I42
VSimpleName: primary
p15611
Vinsert
p15612
I45
VStringLiteral: "FIRST"
p15613
tp15614
I2
s(g14630
I42
g14631
Vinsert
p15615
I42
VSimpleName: Collections
p15616
tp15617
I1
s(g6742
I42
g6743
Vinsert
p15618
I42
VSimpleName: children
p15619
tp15620
I10
s(Vinsert
p15621
I42
VSimpleName: config
p15622
Vinsert
p15623
I32
VMethodInvocation
p15624
tp15625
I3
s(g9559
I42
g9560
Vinsert
p15626
I59
VVariableDeclarationFragment
p15627
tp15628
I1
s(g4204
I42
g4205
Vinsert
p15629
I45
VStringLiteral: "WHERE l_shipdate >= DATE '1993-01-01'\u005cn"
p15630
tp15631
I1
s(Vinsert
p15632
I42
VSimpleName: toSQLString
p15633
Vinsert
p15634
I45
VStringLiteral: "\u005ct\u005ctFROM employees\u005cn"
p15635
tp15636
I1
s(Vinsert
p15637
I42
VSimpleName: parseStatementList
p15638
Vinsert
p15639
I42
VSimpleName: OracleStatementParser
p15640
tp15641
I47
s(g13066
I42
g13067
Vinsert
p15642
I42
VSimpleName: SQLCreateFunctionStatement
p15643
tp15644
I2
s(g7960
I42
g7961
Vinsert
p15645
I2
VArrayAccess
p15646
tp15647
I1
s(Vinsert
p15648
I42
VSimpleName: getLexer
p15649
Vinsert
p15650
I74
VParameterizedType: List<SQLStatement>
p15651
tp15652
I1
s(g8677
I42
g8678
Vinsert
p15653
I85
VDimension
p15654
tp15655
I1
s(Vinsert
p15656
I42
VSimpleName: assertEquals
p15657
Vinsert
p15658
I42
VSimpleName: dbType
p15659
tp15660
I3
s(g1840
I42
g1841
Vinsert
p15661
I27
VInfixExpression: ||
p15662
tp15663
I1
s(g4997
I42
g4998
Vinsert
p15664
I74
VParameterizedType: List<SQLObject>
p15665
tp15666
I7
s(g12184
I42
g12185
Vinsert
p15667
I43
VSimpleType: SQLAlterTableAddForeignKey
p15668
tp15669
I2
s(Vinsert
p15670
I42
VSimpleName: close
p15671
Vinsert
p15672
I42
VSimpleName: dispose
p15673
tp15674
I1
s(g6806
I42
g6807
Vinsert
p15675
I45
VStringLiteral: "jdbc:log4jdbc:microsoft:"
p15676
tp15677
I1
s(g11732
I42
g11733
Vinsert
p15678
I42
VSimpleName: i
p15679
tp15680
I3
s(g9954
I42
g9955
Vinsert
p15681
I14
VClassInstanceCreation
p15682
tp15683
I1
s(g10829
I42
g10830
Vinsert
p15684
I42
VSimpleName: delimiters
p15685
tp15686
I1
s(Vinsert
p15687
I42
VSimpleName: getRight
p15688
Vinsert
p15689
I42
VSimpleName: leftColumn
p15690
tp15691
I2
s(Vinsert
p15692
I42
VSimpleName: get
p15693
Vinsert
p15694
I42
VSimpleName: getWallConditionContext
p15695
tp15696
I1
s(Vinsert
p15697
I42
VSimpleName: getCommitCount
p15698
Vinsert
p15699
I42
VSimpleName: dataSource
p15700
tp15701
I2
s(Vinsert
p15702
I42
VSimpleName: getDeleteWhere
p15703
Vinsert
p15704
I25
VIfStatement
p15705
tp15706
I3
s(g1405
I42
g1406
Vinsert
p15707
I42
VSimpleName: resultSet
p15708
tp15709
I4
s(g2474
I42
g2475
Vinsert
p15710
I42
VSimpleName: print
p15711
tp15712
I1
s(g3271
I42
g3272
Vinsert
p15713
I32
VMethodInvocation
p15714
tp15715
I4
s(g1466
I42
g1467
Vinsert
p15716
I45
VStringLiteral: "FETCH"
p15717
tp15718
I1
s(g2398
I42
g2399
Vinsert
p15719
I42
VSimpleName: SQLException
p15720
tp15721
I1
s(g404
I42
g405
Vinsert
p15722
I45
VStringLiteral: "GROUP BY t.calendar_month_desc, c.cust_state_province;"
p15723
tp15724
I1
s(g723
I42
g724
Vinsert
p15725
I40
VQualifiedName: oracle.jdbc.OraclePreparedStatement
p15726
tp15727
I1
s(Vinsert
p15728
I42
VSimpleName: name
p15729
Vinsert
p15730
I42
VSimpleName: setIfExists
p15731
tp15732
I1
s(g5615
I42
g5616
Vinsert
p15733
I21
VExpressionStatement
p15734
tp15735
I1
s(g8006
I42
g8007
Vinsert
p15736
I27
VInfixExpression: !=
p15737
tp15738
I1
s(g7023
I42
g7024
Vinsert
p15739
I42
VSimpleName: properties
p15740
tp15741
I1
s(g15294
I42
g15295
Vinsert
p15742
I42
VSimpleName: setConnectionTestStatement
p15743
tp15744
I1
s(Vinsert
p15745
I42
VSimpleName: getFields
p15746
Vinsert
p15747
I9
VBooleanLiteral: true
p15748
tp15749
I1
s(g2895
I42
g2896
Vinsert
p15750
I42
VSimpleName: nextToken
p15751
tp15752
I2
s(Vinsert
p15753
I42
VSimpleName: getParent
p15754
Vinsert
p15755
I42
VSimpleName: SQLASTOutputVisitorUtils
p15756
tp15757
I1
s(g8823
I42
g8824
Vinsert
p15758
I34
VNumberLiteral: 1
p15759
tp15760
I2
s(Vinsert
p15761
I42
VSimpleName: getPartitionBy
p15762
Vinsert
p15763
I8
VBlock
p15764
tp15765
I3
s(Vinsert
p15766
I42
VSimpleName: isClosed
p15767
Vinsert
p15768
I43
VSimpleType: String
p15769
tp15770
I1
s(g3931
I42
g3932
Vinsert
p15771
I40
VQualifiedName: SQLUtils.FormatOption
p15772
tp15773
I10
s(g3345
I42
g3346
Vinsert
p15774
I83
VModifier: protected
p15775
tp15776
I31
s(Vinsert
p15777
I42
VSimpleName: add
p15778
Vinsert
p15779
I42
VSimpleName: parseLeave
p15780
tp15781
I1
s(g8593
I42
g8594
Vinsert
p15782
I42
VSimpleName: ObjectName
p15783
tp15784
I2
s(Vinsert
p15785
I42
VSimpleName: getInstance
p15786
Vinsert
p15787
I42
VSimpleName: close
p15788
tp15789
I1
s(g6364
I42
g6365
Vinsert
p15790
I42
VSimpleName: setDriver
p15791
tp15792
I1
s(Vinsert
p15793
I42
VSimpleName: nameEquals
p15794
Vinsert
p15795
I42
VSimpleName: apply
p15796
tp15797
I1
s(g7477
I42
g7478
Vinsert
p15798
I39
VPrimitiveType: int
p15799
tp15800
I1
s(g6781
I42
g6782
Vinsert
p15801
I8
VBlock
p15802
tp15803
I1
s(Vinsert
p15804
I42
VSimpleName: setParent
p15805
Vinsert
p15806
I42
VSimpleName: interval
p15807
tp15808
I3
s(g10190
I42
g10191
Vinsert
p15809
I42
VSimpleName: getSqlStatMap
p15810
tp15811
I1
s(g404
I42
g405
Vinsert
p15812
I45
VStringLiteral: "SELECT t.calendar_month_desc, c.cust_state_province, SUM(s.amount_sold) AS sum_sales\u005cn"
p15813
tp15814
I1
s(g4409
I42
g4410
Vinsert
p15815
I34
VNumberLiteral: 1
p15816
tp15817
I1
s(Vinsert
p15818
I42
VSimpleName: getSessionStatDataList
p15819
Vinsert
p15820
I42
VSimpleName: Object
p15821
tp15822
I1
s(Vinsert
p15823
I42
VSimpleName: setTable
p15824
Vinsert
p15825
I41
VReturnStatement
p15826
tp15827
I1
s(Vinsert
p15828
I42
VSimpleName: getWhere
p15829
Vinsert
p15830
I21
VExpressionStatement
p15831
tp15832
I12
s(g13808
I42
g13809
Vinsert
p15833
I32
VMethodInvocation
p15834
tp15835
I6
s(g2515
I42
g2516
Vinsert
p15836
I60
VVariableDeclarationStatement
p15837
tp15838
I2
s(g3564
I42
g3565
Vinsert
p15839
I42
VSimpleName: setDriver
p15840
tp15841
I1
s(g201
I42
g202
Vinsert
p15842
I9
VBooleanLiteral: false
p15843
tp15844
I1
s(g3383
I42
g3384
Vinsert
p15845
I27
VInfixExpression: ==
p15846
tp15847
I1
s(Vinsert
p15848
I42
VSimpleName: parseStatements
p15849
Vinsert
p15850
I45
VStringLiteral: "END;"
p15851
tp15852
I2
s(Vinsert
p15853
I42
VSimpleName: setParent
p15854
Vinsert
p15855
I42
VSimpleName: rowCount
p15856
tp15857
I4
s(g9267
I42
g9268
Vinsert
p15858
I42
VSimpleName: write
p15859
tp15860
I1
s(g5089
I42
g5090
Vinsert
p15861
I45
VStringLiteral: "  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645\u005cn"
p15862
tp15863
I1
s(Vinsert
p15864
I42
VSimpleName: readFromResource
p15865
Vinsert
p15866
I31
VMethodDeclaration
p15867
tp15868
I1
s(g14295
I42
g14296
Vinsert
p15869
I42
VSimpleName: identifierEquals
p15870
tp15871
I1
s(g12159
I42
g12160
Vinsert
p15872
I11
VCastExpression
p15873
tp15874
I1
s(Vinsert
p15875
I42
VSimpleName: writeLock
p15876
Vinsert
p15877
I8
VBlock
p15878
tp15879
I6
s(g14540
I42
g14541
Vinsert
p15880
I8
VBlock
p15881
tp15882
I1
s(g492
I42
g493
Vinsert
p15883
I32
VMethodInvocation
p15884
tp15885
I1
s(Vinsert
p15886
I42
VSimpleName: name
p15887
Vinsert
p15888
I40
VQualifiedName: Token.KEY
p15889
tp15890
I1
s(g46
I42
g47
Vinsert
p15891
I8
VBlock
p15892
tp15893
I22
s(Vinsert
p15894
I42
VSimpleName: info
p15895
Vinsert
p15896
I31
VMethodDeclaration
p15897
tp15898
I5
s(Vinsert
p15899
I42
VSimpleName: currentThread
p15900
Vinsert
p15901
I11
VCastExpression
p15902
tp15903
I1
s(g5500
I42
g5501
Vinsert
p15904
I42
VSimpleName: Collections
p15905
tp15906
I1
s(g41
I42
g42
Vinsert
p15907
I42
VSimpleName: config
p15908
tp15909
I1
s(g1032
I42
g1033
Vinsert
p15910
I42
VSimpleName: println
p15911
tp15912
I1
s(g1584
I42
g1585
Vinsert
p15913
I42
VSimpleName: name
p15914
tp15915
I2
s(g6005
I42
g6006
Vinsert
p15916
I42
VSimpleName: WallCheckResult
p15917
tp15918
I9
s(Vinsert
p15919
I42
VSimpleName: assertEquals
p15920
Vinsert
p15921
I42
VSimpleName: binaryOpExpr
p15922
tp15923
I1
s(g4931
I42
g4932
Vinsert
p15924
I32
VMethodInvocation
p15925
tp15926
I6
s(g4139
I42
g4140
Vinsert
p15927
I43
VSimpleType: Clob
p15928
tp15929
I1
s(Vinsert
p15930
I42
VSimpleName: close
p15931
Vinsert
p15932
I9
VBooleanLiteral: true
p15933
tp15934
I8
s(g7023
I42
g7024
Vinsert
p15935
I42
VSimpleName: String
p15936
tp15937
I3
s(g4334
I42
g4335
Vinsert
p15938
I27
VInfixExpression: !=
p15939
tp15940
I1
s(g13272
I42
g13273
Vinsert
p15941
I25
VIfStatement
p15942
tp15943
I2
s(g6442
I42
g6443
Vinsert
p15944
I45
VStringLiteral: "    select distinct buyer_nick "
p15945
tp15946
I1
s(g1549
I42
g1550
Vinsert
p15947
I45
VStringLiteral: "\u005cnINTO films_recent"
p15948
tp15949
I1
s(Vinsert
p15950
I42
VSimpleName: endVisit
p15951
Vinsert
p15952
I42
VSimpleName: to
p15953
tp15954
I1
s(g13720
I42
g13721
Vinsert
p15955
I42
VSimpleName: statVisitor
p15956
tp15957
I2
s(g5058
I42
g5059
Vinsert
p15958
I45
VStringLiteral: "ConnectionCount_Alive_6_12_Hours"
p15959
tp15960
I1
s(Vinsert
p15961
I42
VSimpleName: getColumns
p15962
Vinsert
p15963
I34
VNumberLiteral: 13
p15964
tp15965
I2
s(Vinsert
p15966
I42
VSimpleName: assertNotNull
p15967
Vinsert
p15968
I42
VSimpleName: MockConnectionClosedException
p15969
tp15970
I1
s(g1415
I42
g1416
Vinsert
p15971
I42
VSimpleName: ElseIf
p15972
tp15973
I2
s(g6429
I42
g6430
Vinsert
p15974
I42
VSimpleName: SQLSelectGroupByClause
p15975
tp15976
I1
s(g6252
I42
g6253
Vinsert
p15977
I27
VInfixExpression: !=
p15978
tp15979
I1
s(g1471
I42
g1472
Vinsert
p15980
I39
VPrimitiveType: void
p15981
tp15982
I7
s(g6663
I42
g6664
Vinsert
p15983
I42
VSimpleName: getSchema
p15984
tp15985
I1
s(Vinsert
p15986
I42
VSimpleName: findColumn
p15987
Vinsert
p15988
I43
VSimpleType: String
p15989
tp15990
I1
s(Vinsert
p15991
I42
VSimpleName: getName
p15992
Vinsert
p15993
I52
VThisExpression
p15994
tp15995
I15
s(g5729
I42
g5730
Vinsert
p15996
I42
VSimpleName: exprParser
p15997
tp15998
I2
s(g4679
I42
g4680
Vinsert
p15999
I43
VSimpleType: ReentrantLock
p16000
tp16001
I1
s(g7527
I42
g7528
Vinsert
p16002
I40
VQualifiedName: array.length
p16003
tp16004
I1
s(Vinsert
p16005
I42
VSimpleName: putIfAbsent
p16006
Vinsert
p16007
I44
VSingleVariableDeclaration
p16008
tp16009
I1
s(g743
I42
g744
Vinsert
p16010
I74
VParameterizedType: AtomicLongFieldUpdater<JdbcSqlStat>
p16011
tp16012
I2
s(g15010
I42
g15011
Vinsert
p16013
I21
VExpressionStatement
p16014
tp16015
I3
s(g3857
I42
g3858
Vinsert
p16016
I39
VPrimitiveType: void
p16017
tp16018
I3
s(g5017
I42
g5018
Vinsert
p16019
I14
VClassInstanceCreation
p16020
tp16021
I1
s(g6917
I42
g6918
Vinsert
p16022
I34
VNumberLiteral: 0
p16023
tp16024
I2
s(Vinsert
p16025
I42
VSimpleName: put
p16026
Vinsert
p16027
I42
VSimpleName: fetchRowCount
p16028
tp16029
I1
s(Vinsert
p16030
I42
VSimpleName: toMySqlString
p16031
Vinsert
p16032
I45
VStringLiteral: "\u005cn\u005ctinner join t2 a2\u005cnwhere a1.id = a2.id"
p16033
tp16034
I1
s(g8129
I42
g8130
Vinsert
p16035
I42
VSimpleName: getTypes
p16036
tp16037
I1
s(g1755
I42
g1756
Vinsert
p16038
I42
VSimpleName: MySqlSchemaStatVisitor
p16039
tp16040
I129
s(Vinsert
p16041
I42
VSimpleName: accept
p16042
Vinsert
p16043
I34
VNumberLiteral: 10
p16044
tp16045
I1
s(Vinsert
p16046
I42
VSimpleName: setGlobal
p16047
Vinsert
p16048
I42
VSimpleName: JdbcStatManager
p16049
tp16050
I1
s(g10498
I42
g10499
Vinsert
p16051
I27
VInfixExpression: ==
p16052
tp16053
I1
s(g15594
I42
g15595
Vinsert
p16054
I8
VBlock
p16055
tp16056
I2
s(g9055
I42
g9056
Vinsert
p16057
I42
VSimpleName: item
p16058
tp16059
I3
s(Vinsert
p16060
I42
VSimpleName: isNoMaxValue
p16061
Vinsert
p16062
I32
VMethodInvocation
p16063
tp16064
I3
s(Vinsert
p16065
I42
VSimpleName: put
p16066
Vinsert
p16067
I45
VStringLiteral: "RESTART"
p16068
tp16069
I1
s(Vinsert
p16070
I42
VSimpleName: setParent
p16071
Vinsert
p16072
I42
VSimpleName: using
p16073
tp16074
I3
s(Vinsert
p16075
I42
VSimpleName: getComment
p16076
Vinsert
p16077
I42
VSimpleName: accept
p16078
tp16079
I1
s(Vinsert
p16080
I42
VSimpleName: get
p16081
Vinsert
p16082
I42
VSimpleName: IllegalArgumentException
p16083
tp16084
I3
s(g4946
I42
g4947
Vinsert
p16085
I42
VSimpleName: nameGTEQ
p16086
tp16087
I1
s(g6056
I42
g6057
Vinsert
p16088
I44
VSingleVariableDeclaration
p16089
tp16090
I1
s(Vinsert
p16091
I42
VSimpleName: booleanValue
p16092
Vinsert
p16093
I42
VSimpleName: compactValues
p16094
tp16095
I3
s(g3569
I42
g3570
Vinsert
p16096
I21
VExpressionStatement
p16097
tp16098
I2
s(Vinsert
p16099
I42
VSimpleName: getDbType
p16100
Vinsert
p16101
I42
VSimpleName: length
p16102
tp16103
I1
s(g1978
I42
g1979
Vinsert
p16104
I42
VSimpleName: String
p16105
tp16106
I1
s(Vinsert
p16107
I42
VSimpleName: setPartition
p16108
Vinsert
p16109
I42
VSimpleName: setPivot
p16110
tp16111
I1
s(Vinsert
p16112
I42
VSimpleName: setUrl
p16113
Vinsert
p16114
I42
VSimpleName: setContextClassLoader
p16115
tp16116
I1
s(g8113
I42
g8114
Vinsert
p16117
I42
VSimpleName: context
p16118
tp16119
I1
s(g6162
I42
g6163
Vinsert
p16120
I25
VIfStatement
p16121
tp16122
I183
s(Vinsert
p16123
I42
VSimpleName: getSession
p16124
Vinsert
p16125
I42
VSimpleName: ContainsUser
p16126
tp16127
I1
s(g1531
I42
g1532
Vinsert
p16128
I42
VSimpleName: select
p16129
tp16130
I2
s(g12090
I42
g12091
Vinsert
p16131
I43
VSimpleType: String
p16132
tp16133
I1
s(g1410
I42
g1411
Vinsert
p16134
I7
VAssignment: =
p16135
tp16136
I1
s(g7812
I42
g7813
Vinsert
p16137
I45
VStringLiteral: "DATABASE LINK "
p16138
tp16139
I1
s(Vinsert
p16140
I42
VSimpleName: assertEquals
p16141
Vinsert
p16142
I45
VStringLiteral: "alter table test_lifecycle set lifecycle 50;"
p16143
tp16144
I1
s(Vinsert
p16145
I42
VSimpleName: getMessage
p16146
Vinsert
p16147
I42
VSimpleName: executeErrorLastMessage
p16148
tp16149
I1
s(g6318
I42
g6319
Vinsert
p16150
I42
VSimpleName: StringWriter
p16151
tp16152
I1
s(Vinsert
p16153
I42
VSimpleName: equals
p16154
Vinsert
p16155
I42
VSimpleName: SQLBinaryOpExpr
p16156
tp16157
I1
s(g9332
I42
g9333
Vinsert
p16158
I11
VCastExpression
p16159
tp16160
I3
s(g14917
I42
g14918
Vinsert
p16161
I45
VStringLiteral: "\u005ctON b.objid = p.objid\u005cn"
p16162
tp16163
I1
s(g8129
I42
g8130
Vinsert
p16164
I42
VSimpleName: size
p16165
tp16166
I11
s(Vinsert
p16167
I42
VSimpleName: getSelect
p16168
Vinsert
p16169
I42
VSimpleName: subQuery
p16170
tp16171
I1
s(g12666
I42
g12667
Vinsert
p16172
I42
VSimpleName: V
p16173
tp16174
I2
s(g6283
I42
g6284
Vinsert
p16175
I43
VSimpleType: String
p16176
tp16177
I11
s(Vinsert
p16178
I42
VSimpleName: toPGString
p16179
Vinsert
p16180
I42
VSimpleName: Assert
p16181
tp16182
I4
s(g12324
I42
g12325
Vinsert
p16183
I32
VMethodInvocation
p16184
tp16185
I2
s(g206
I42
g207
Vinsert
p16186
I42
VSimpleName: getDataSource
p16187
tp16188
I1
s(g7996
I42
g7997
Vinsert
p16189
I32
VMethodInvocation
p16190
tp16191
I34
s(Vinsert
p16192
I42
VSimpleName: setParent
p16193
Vinsert
p16194
I43
VSimpleType: Entry
p16195
tp16196
I1
s(g7777
I42
g7778
Vinsert
p16197
I44
VSingleVariableDeclaration
p16198
tp16199
I1
s(Vinsert
p16200
I42
VSimpleName: setReturning
p16201
Vinsert
p16202
I43
VSimpleType: OracleMultiInsertStatement.InsertIntoClause
p16203
tp16204
I2
s(g1544
I42
g1545
Vinsert
p16205
I59
VVariableDeclarationFragment
p16206
tp16207
I68
s(Vinsert
p16208
I42
VSimpleName: setUrl
p16209
Vinsert
p16210
I42
VSimpleName: maxPoolSize
p16211
tp16212
I1
s(Vinsert
p16213
I42
VSimpleName: parseInt
p16214
Vinsert
p16215
I45
VStringLiteral: "@"
p16216
tp16217
I1
s(g4283
I42
g4284
Vinsert
p16218
I59
VVariableDeclarationFragment
p16219
tp16220
I1
s(g10797
I42
g10798
Vinsert
p16221
I42
VSimpleName: ucase
p16222
tp16223
I1
s(Vinsert
p16224
I42
VSimpleName: assertTrue
p16225
Vinsert
p16226
I45
VStringLiteral: "wl_ship_order"
p16227
tp16228
I1
s(g512
I42
g513
Vinsert
p16229
I42
VSimpleName: map
p16230
tp16231
I2
s(Vinsert
p16232
I42
VSimpleName: toSQLString
p16233
Vinsert
p16234
I45
VStringLiteral: "e1Yq3QQJoEoNKIeJlbgLoLdSgogwgxDcf8vWfHSKbuowFOXFKoj9MqYGqWyRxeeCUVqNVIO1\u005cn"
p16235
tp16236
I1
s(g14055
I42
g14056
Vinsert
p16237
I42
VSimpleName: setColumn
p16238
tp16239
I1
s(Vinsert
p16240
I42
VSimpleName: toSQLString
p16241
Vinsert
p16242
I45
VStringLiteral: "\u005ctCOMPRESS\u005cn"
p16243
tp16244
I1
s(g6116
I42
g6117
Vinsert
p16245
I42
VSimpleName: dataSource
p16246
tp16247
I1
s(Vinsert
p16248
I42
VSimpleName: equals
p16249
Vinsert
p16250
I42
VSimpleName: param
p16251
tp16252
I1
s(g781
I42
g782
Vinsert
p16253
I43
VSimpleType: SQLStatement
p16254
tp16255
I2
s(Vinsert
p16256
I42
VSimpleName: getValue
p16257
Vinsert
p16258
I45
VStringLiteral: "polygon "
p16259
tp16260
I1
s(g6061
I42
g6062
Vinsert
p16261
I45
VStringLiteral: " := "
p16262
tp16263
I2
s(Vinsert
p16264
I42
VSimpleName: load
p16265
Vinsert
p16266
I42
VSimpleName: setUp
p16267
tp16268
I1
s(g11307
I42
g11308
Vinsert
p16269
I43
VSimpleType: ArrayList
p16270
tp16271
I1
s(g4334
I42
g4335
Vinsert
p16272
I33
VNullLiteral
p16273
tp16274
I1
s(g419
I42
g420
Vinsert
p16275
I32
VMethodInvocation
p16276
tp16277
I1
s(g286
I42
g287
Vinsert
p16278
I8
VBlock
p16279
tp16280
I3
s(Vinsert
p16281
I42
VSimpleName: length
p16282
Vinsert
p16283
I42
VSimpleName: isEmpty
p16284
tp16285
I1
s(g2885
I42
g2886
Vinsert
p16286
I8
VBlock
p16287
tp16288
I5
s(Vinsert
p16289
I42
VSimpleName: setFilters
p16290
Vinsert
p16291
I7
VAssignment: =
p16292
tp16293
I3
s(Vinsert
p16294
I42
VSimpleName: getLeft
p16295
Vinsert
p16296
I42
VSimpleName: SQLJoinTableSource
p16297
tp16298
I3
s(Vinsert
p16299
I42
VSimpleName: setSubQuery
p16300
Vinsert
p16301
I42
VSimpleName: SQLAnyExpr
p16302
tp16303
I2
s(Vinsert
p16304
I42
VSimpleName: getName
p16305
Vinsert
p16306
I42
VSimpleName: isHasConstaint
p16307
tp16308
I1
s(g14527
I42
g14528
Vinsert
p16309
I40
VQualifiedName: FNVUtils.CONNECT
p16310
tp16311
I1
s(g11785
I42
g11786
Vinsert
p16312
I40
VQualifiedName: Profiler.PROFILE_TYPE_SPRING
p16313
tp16314
I1
s(g4931
I42
g4932
Vinsert
p16315
I42
VSimpleName: x
p16316
tp16317
I6
s(g3417
I42
g3418
Vinsert
p16318
I32
VMethodInvocation
p16319
tp16320
I21
s(Vinsert
p16321
I42
VSimpleName: toBytes
p16322
Vinsert
p16323
I59
VVariableDeclarationFragment
p16324
tp16325
I7
s(g241
I42
g242
Vinsert
p16326
I42
VSimpleName: getTableSource
p16327
tp16328
I2
s(g3083
I42
g3084
Vinsert
p16329
I42
VSimpleName: String
p16330
tp16331
I6
s(g6684
I42
g6685
Vinsert
p16332
I42
VSimpleName: setOption
p16333
tp16334
I1
s(Vinsert
p16335
I42
VSimpleName: getDuplicateKeyUpdate
p16336
Vinsert
p16337
I25
VIfStatement
p16338
tp16339
I1
s(g9150
I42
g9151
Vinsert
p16340
I31
VMethodDeclaration
p16341
tp16342
I1
s(g13991
I42
g13992
Vinsert
p16343
I42
VSimpleName: T
p16344
tp16345
I3
s(Vinsert
p16346
I42
VSimpleName: expr
p16347
Vinsert
p16348
I43
VSimpleType: SQLCastExpr
p16349
tp16350
I1
s(g56
I42
g57
Vinsert
p16351
I8
VBlock
p16352
tp16353
I2
s(Vinsert
p16354
I42
VSimpleName: getWeightRegionEnd
p16355
Vinsert
p16356
I42
VSimpleName: master
p16357
tp16358
I2
s(Vinsert
p16359
I42
VSimpleName: getPassword
p16360
Vinsert
p16361
I43
VSimpleType: SQLExpr
p16362
tp16363
I1
s(g15204
I42
g15205
Vinsert
p16364
I44
VSingleVariableDeclaration
p16365
tp16366
I2
s(Vinsert
p16367
I42
VSimpleName: put
p16368
Vinsert
p16369
I42
VSimpleName: PreparedStatementPool
p16370
tp16371
I2
s(g1968
I42
g1969
Vinsert
p16372
I40
VQualifiedName: Token.FROM
p16373
tp16374
I1
s(Vinsert
p16375
I42
VSimpleName: getCharSetName
p16376
Vinsert
p16377
I42
VSimpleName: x
p16378
tp16379
I2
s(Vinsert
p16380
I42
VSimpleName: getHeader
p16381
Vinsert
p16382
I42
VSimpleName: length
p16383
tp16384
I1
s(g987
I42
g988
Vinsert
p16385
I8
VBlock
p16386
tp16387
I1
s(g12547
I42
g12548
Vinsert
p16388
I42
VSimpleName: properties
p16389
tp16390
I7
s(g6475
I42
g6476
Vinsert
p16391
I31
VMethodDeclaration
p16392
tp16393
I1
s(g10692
I42
g10693
Vinsert
p16394
I43
VSimpleType: List
p16395
tp16396
I4
s(Vinsert
p16397
I42
VSimpleName: accept
p16398
Vinsert
p16399
I42
VSimpleName: repository
p16400
tp16401
I1
s(Vinsert
p16402
I42
VSimpleName: connection_abort
p16403
Vinsert
p16404
I43
VSimpleType: SQLException
p16405
tp16406
I1
s(g2019
I42
g2020
Vinsert
p16407
I11
VCastExpression
p16408
tp16409
I1
s(g7356
I42
g7357
Vinsert
p16410
I42
VSimpleName: dataSource
p16411
tp16412
I1
s(g4399
I42
g4400
Vinsert
p16413
I21
VExpressionStatement
p16414
tp16415
I2
s(g281
I42
g282
Vinsert
p16416
I42
VSimpleName: SQLNullExpr
p16417
tp16418
I6
s(g4227
I42
g4228
Vinsert
p16419
I39
VPrimitiveType: int
p16420
tp16421
I1
s(g7091
I42
g7092
Vinsert
p16422
I42
VSimpleName: statement
p16423
tp16424
I2
s(g15818
I42
g15819
Vinsert
p16425
I43
VSimpleType: String
p16426
tp16427
I1
s(Vinsert
p16428
I42
VSimpleName: translateOracleToMySql
p16429
Vinsert
p16430
I45
VStringLiteral: "\u005cnWHERE ROWNUM < 10"
p16431
tp16432
I1
s(g11925
I42
g11926
Vinsert
p16433
I39
VPrimitiveType: boolean
p16434
tp16435
I2
s(g2525
I42
g2526
Vinsert
p16436
I43
VSimpleType: SQLStatement
p16437
tp16438
I6
s(Vinsert
p16439
I42
VSimpleName: start
p16440
Vinsert
p16441
I42
VSimpleName: threadCount
p16442
tp16443
I1
s(g3982
I42
g3983
Vinsert
p16444
I8
VBlock
p16445
tp16446
I1
s(Vinsert
p16447
I42
VSimpleName: setOwner
p16448
Vinsert
p16449
I22
VFieldAccess
p16450
tp16451
I1
s(Vinsert
p16452
I42
VSimpleName: assertTrue
p16453
Vinsert
p16454
I43
VSimpleType: Date
p16455
tp16456
I1
s(g12069
I42
g12070
Vinsert
p16457
I43
VSimpleType: SQLReplaceStatement
p16458
tp16459
I1
s(Vinsert
p16460
I42
VSimpleName: length
p16461
Vinsert
p16462
I45
VStringLiteral: " : "
p16463
tp16464
I1
s(g1100
I42
g1101
Vinsert
p16465
I43
VSimpleType: RsaDecrypter
p16466
tp16467
I2
s(g1395
I42
g1396
Vinsert
p16468
I42
VSimpleName: Comparable
p16469
tp16470
I2
s(Vinsert
p16471
I42
VSimpleName: toPGString
p16472
Vinsert
p16473
I45
VStringLiteral: "\u005ctFUNCTION VARCHAR(1002),\u005cn"
p16474
tp16475
I2
s(g15875
I42
g15876
Vinsert
p16476
I42
VSimpleName: clearBlackList
p16477
tp16478
I1
s(Vinsert
p16479
I42
VSimpleName: getTableSource
p16480
Vinsert
p16481
I43
VSimpleType: MappingEngine
p16482
tp16483
I2
s(Vinsert
p16484
I42
VSimpleName: fnv_64_lower
p16485
Vinsert
p16486
I42
VSimpleName: FNVUtils
p16487
tp16488
I8
s(g4144
I42
g4145
Vinsert
p16489
I2
VArrayAccess
p16490
tp16491
I1
s(g13808
I42
g13809
Vinsert
p16492
I42
VSimpleName: name
p16493
tp16494
I3
s(g7068
I42
g7069
Vinsert
p16495
I42
VSimpleName: SQLIdentifierExpr
p16496
tp16497
I4
s(g9891
I42
g9892
Vinsert
p16498
I39
VPrimitiveType: int
p16499
tp16500
I5
s(Vinsert
p16501
I42
VSimpleName: identifierEquals
p16502
Vinsert
p16503
I42
VSimpleName: markBp
p16504
tp16505
I1
s(g9878
I42
g9879
Vinsert
p16506
I42
VSimpleName: ucase
p16507
tp16508
I2
s(g5118
I42
g5119
Vinsert
p16509
I44
VSingleVariableDeclaration
p16510
tp16511
I1
s(Vinsert
p16512
I42
VSimpleName: startsWith
p16513
Vinsert
p16514
I9
VBooleanLiteral: true
p16515
tp16516
I1
s(Vinsert
p16517
I42
VSimpleName: expr
p16518
Vinsert
p16519
I42
VSimpleName: parser
p16520
tp16521
I82
s(g4814
I42
g4815
Vinsert
p16522
I42
VSimpleName: String
p16523
tp16524
I2
s(Vinsert
p16525
I42
VSimpleName: isRow
p16526
Vinsert
p16527
I14
VClassInstanceCreation
p16528
tp16529
I3
s(g15092
I42
g15093
Vinsert
p16530
I34
VNumberLiteral: 0
p16531
tp16532
I12
s(g2074
I42
g2075
Vinsert
p16533
I42
VSimpleName: accept
p16534
tp16535
I1
s(g8833
I42
g8834
Vinsert
p16536
I42
VSimpleName: wordIndex
p16537
tp16538
I1
s(g16402
I42
g16403
Vinsert
p16539
I8
VBlock
p16540
tp16541
I2
s(g6544
I42
g6545
Vinsert
p16542
I42
VSimpleName: stringVal
p16543
tp16544
I11
s(g5831
I42
g5832
Vinsert
p16545
I42
VSimpleName: table
p16546
tp16547
I1
s(g15594
I42
g15595
Vinsert
p16548
I52
VThisExpression
p16549
tp16550
I1
s(Vinsert
p16551
I42
VSimpleName: incrementAndGet
p16552
Vinsert
p16553
I7
VAssignment: =
p16554
tp16555
I2
s(Vinsert
p16556
I42
VSimpleName: assertNotNull
p16557
Vinsert
p16558
I42
VSimpleName: url
p16559
tp16560
I1
s(g14876
I42
g14877
Vinsert
p16561
I42
VSimpleName: token
p16562
tp16563
I1
s(g6207
I42
g6208
Vinsert
p16564
I45
VStringLiteral: " ON "
p16565
tp16566
I1
s(g15127
I42
g15128
Vinsert
p16567
I43
VSimpleType: SQLServerLexer
p16568
tp16569
I2
s(Vinsert
p16570
I42
VSimpleName: toSQLString
p16571
Vinsert
p16572
I45
VStringLiteral: "\u005ct\u005ctTABLESPACE \u005c"NIRVANA1M\u005c"\u005cn"
p16573
tp16574
I1
s(g7736
I42
g7737
Vinsert
p16575
I32
VMethodInvocation
p16576
tp16577
I3
s(g10021
I42
g10022
Vinsert
p16578
I59
VVariableDeclarationFragment
p16579
tp16580
I1
s(Vinsert
p16581
I42
VSimpleName: recordFetchRowCount
p16582
Vinsert
p16583
I25
VIfStatement
p16584
tp16585
I1
s(Vinsert
p16586
I42
VSimpleName: fnv_64_lower_normalized
p16587
Vinsert
p16588
I42
VSimpleName: columnNameHash
p16589
tp16590
I2
s(g4263
I42
g4264
Vinsert
p16591
I59
VVariableDeclarationFragment
p16592
tp16593
I1
s(g16153
I42
g16154
Vinsert
p16594
I52
VThisExpression
p16595
tp16596
I9
s(g11727
I42
g11728
Vinsert
p16597
I44
VSingleVariableDeclaration
p16598
tp16599
I1
s(g9939
I42
g9940
Vinsert
p16600
I59
VVariableDeclarationFragment
p16601
tp16602
I1
s(g14834
I42
g14835
Vinsert
p16603
I22
VFieldAccess
p16604
tp16605
I2
s(Vinsert
p16606
I42
VSimpleName: getWhere
p16607
Vinsert
p16608
I42
VSimpleName: checkCondition
p16609
tp16610
I1
s(g6084
I42
g6085
Vinsert
p16611
I42
VSimpleName: stat
p16612
tp16613
I2
s(g336
I42
g337
Vinsert
p16614
I42
VSimpleName: add
p16615
tp16616
I1
s(g6577
I42
g6578
Vinsert
p16617
I45
VStringLiteral: "                            1\u005cn"
p16618
tp16619
I2
s(Vinsert
p16620
I42
VSimpleName: getProperty
p16621
Vinsert
p16622
I7
VAssignment: =
p16623
tp16624
I4
s(Vinsert
p16625
I42
VSimpleName: getMessage
p16626
Vinsert
p16627
I42
VSimpleName: println
p16628
tp16629
I1
s(Vinsert
p16630
I42
VSimpleName: setDbType
p16631
Vinsert
p16632
I43
VSimpleType: StatFilter
p16633
tp16634
I2
s(g15745
I42
g15746
Vinsert
p16635
I43
VSimpleType: Column
p16636
tp16637
I1
s(Vinsert
p16638
I42
VSimpleName: select
p16639
Vinsert
p16640
I42
VSimpleName: select
p16641
tp16642
I3
s(Vinsert
p16643
I42
VSimpleName: setParent
p16644
Vinsert
p16645
I42
VSimpleName: setCacheValue
p16646
tp16647
I1
s(Vinsert
p16648
I42
VSimpleName: nameEquals
p16649
Vinsert
p16650
I41
VReturnStatement
p16651
tp16652
I7
s(Vinsert
p16653
I42
VSimpleName: token
p16654
Vinsert
p16655
I42
VSimpleName: setSearchModifier
p16656
tp16657
I1
s(g14925
I42
g14926
Vinsert
p16658
I42
VSimpleName: test_decrypt5
p16659
tp16660
I1
s(g8603
I42
g8604
Vinsert
p16661
I32
VMethodInvocation
p16662
tp16663
I10
s(g9753
I42
g9754
Vinsert
p16664
I42
VSimpleName: SQLPartitionValue
p16665
tp16666
I1
s(g7131
I42
g7132
Vinsert
p16667
I59
VVariableDeclarationFragment
p16668
tp16669
I2
s(g9299
I42
g9300
Vinsert
p16670
I42
VSimpleName: accept
p16671
tp16672
I3
s(g6023
I42
g6024
Vinsert
p16673
I34
VNumberLiteral: 50
p16674
tp16675
I1
s(g7409
I42
g7410
Vinsert
p16676
I42
VSimpleName: Assert
p16677
tp16678
I1
s(g3689
I42
g3690
Vinsert
p16679
I32
VMethodInvocation
p16680
tp16681
I1
s(g6257
I42
g6258
Vinsert
p16682
I42
VSimpleName: isBlock
p16683
tp16684
I1
s(Vinsert
p16685
I42
VSimpleName: assertEquals
p16686
Vinsert
p16687
I45
VStringLiteral: "test"
p16688
tp16689
I1
s(g15986
I42
g15987
Vinsert
p16690
I41
VReturnStatement
p16691
tp16692
I7
s(g9652
I42
g9653
Vinsert
p16693
I16
VConditionalExpression
p16694
tp16695
I1
s(Vinsert
p16696
I42
VSimpleName: parseCreateTable
p16697
Vinsert
p16698
I59
VVariableDeclarationFragment
p16699
tp16700
I32
s(g2393
I42
g2394
Vinsert
p16701
I32
VMethodInvocation
p16702
tp16703
I8
s(g5844
I42
g5845
Vinsert
p16704
I43
VSimpleType: OracleExprParser
p16705
tp16706
I1
s(g11325
I42
g11326
Vinsert
p16707
I42
VSimpleName: TestUtils
p16708
tp16709
I3
s(Vinsert
p16710
I42
VSimpleName: nextToken
p16711
Vinsert
p16712
I42
VSimpleName: info
p16713
tp16714
I1
s(Vinsert
p16715
I42
VSimpleName: equals
p16716
Vinsert
p16717
I45
VStringLiteral: "sqlserver"
p16718
tp16719
I1
s(g14680
I42
g14681
Vinsert
p16720
I42
VSimpleName: values
p16721
tp16722
I1
s(Vinsert
p16723
I42
VSimpleName: exprList
p16724
Vinsert
p16725
I42
VSimpleName: accept
p16726
tp16727
I6
s(Vinsert
p16728
I42
VSimpleName: addSymbol
p16729
Vinsert
p16730
I7
VAssignment: =
p16731
tp16732
I9
s(g7163
I42
g7164
Vinsert
p16733
I42
VSimpleName: xx
p16734
tp16735
I1
s(g5384
I42
g5385
Vinsert
p16736
I8
VBlock
p16737
tp16738
I2
s(g2770
I42
g2771
Vinsert
p16739
I52
VThisExpression
p16740
tp16741
I1
s(g13868
I42
g13869
Vinsert
p16742
I42
VSimpleName: assertEquals
p16743
tp16744
I1
s(Vinsert
p16745
I42
VSimpleName: setNCharacterStream
p16746
Vinsert
p16747
I42
VSimpleName: assertNotNull
p16748
tp16749
I1
s(g10726
I42
g10727
Vinsert
p16750
I27
VInfixExpression: ||
p16751
tp16752
I9
s(g6521
I42
g6522
Vinsert
p16753
I42
VSimpleName: visit
p16754
tp16755
I1
s(g12045
I42
g12046
Vinsert
p16756
I40
VQualifiedName: columns.length
p16757
tp16758
I1
s(Vinsert
p16759
I42
VSimpleName: getColumns
p16760
Vinsert
p16761
I42
VSimpleName: columnn
p16762
tp16763
I1
s(g7356
I42
g7357
Vinsert
p16764
I21
VExpressionStatement
p16765
tp16766
I1
s(Vinsert
p16767
I42
VSimpleName: addItem
p16768
Vinsert
p16769
I42
VSimpleName: toSQLExpr
p16770
tp16771
I1
s(g9503
I42
g9504
Vinsert
p16772
I59
VVariableDeclarationFragment
p16773
tp16774
I1
s(g9670
I42
g9671
Vinsert
p16775
I60
VVariableDeclarationStatement
p16776
tp16777
I218
s(Vinsert
p16778
I42
VSimpleName: setValidationQuery
p16779
Vinsert
p16780
I21
VExpressionStatement
p16781
tp16782
I2
s(g8475
I42
g8476
Vinsert
p16783
I42
VSimpleName: SQLSelectQueryBlock
p16784
tp16785
I1
s(g16354
I42
g16355
Vinsert
p16786
I41
VReturnStatement
p16787
tp16788
I2
s(g13664
I42
g13665
Vinsert
p16789
I45
VStringLiteral: "RENAME"
p16790
tp16791
I1
s(Vinsert
p16792
I42
VSimpleName: setColumnName
p16793
Vinsert
p16794
I42
VSimpleName: add
p16795
tp16796
I1
s(g8306
I42
g8307
Vinsert
p16797
I42
VSimpleName: NoLoggingImpl
p16798
tp16799
I5
s(g1120
I42
g1121
Vinsert
p16800
I42
VSimpleName: x
p16801
tp16802
I2
s(g7792
I42
g7793
Vinsert
p16803
I44
VSingleVariableDeclaration
p16804
tp16805
I1
s(Vinsert
p16806
I42
VSimpleName: getConnection
p16807
Vinsert
p16808
I42
VSimpleName: test_execute_2
p16809
tp16810
I1
s(g9727
I42
g9728
Vinsert
p16811
I59
VVariableDeclarationFragment
p16812
tp16813
I2
s(g3452
I42
g3453
Vinsert
p16814
I14
VClassInstanceCreation
p16815
tp16816
I1
s(g10475
I42
g10476
Vinsert
p16817
I44
VSingleVariableDeclaration
p16818
tp16819
I2
s(g5030
I42
g5031
Vinsert
p16820
I42
VSimpleName: orderBy
p16821
tp16822
I5
s(g8742
I42
g8743
Vinsert
p16823
I14
VClassInstanceCreation
p16824
tp16825
I1
s(Vinsert
p16826
I42
VSimpleName: length
p16827
Vinsert
p16828
I42
VSimpleName: remoteAddresses
p16829
tp16830
I1
s(Vinsert
p16831
I42
VSimpleName: setWrite
p16832
Vinsert
p16833
I25
VIfStatement
p16834
tp16835
I1
s(g2173
I42
g2174
Vinsert
p16836
I32
VMethodInvocation
p16837
tp16838
I1
s(g3462
I42
g3463
Vinsert
p16839
I14
VClassInstanceCreation
p16840
tp16841
I1
s(g2857
I42
g2858
Vinsert
p16842
I42
VSimpleName: value
p16843
tp16844
I5
s(g7720
I42
g7721
Vinsert
p16845
I74
VParameterizedType: List<String>
p16846
tp16847
I3
s(g9827
I42
g9828
Vinsert
p16848
I42
VSimpleName: x
p16849
tp16850
I2
s(g9743
I42
g9744
Vinsert
p16851
I11
VCastExpression
p16852
tp16853
I1
s(g962
I42
g963
Vinsert
p16854
I43
VSimpleType: SQLException
p16855
tp16856
I1
s(g9657
I42
g9658
Vinsert
p16857
I42
VSimpleName: PrintWriter
p16858
tp16859
I1
s(g4926
I42
g4927
Vinsert
p16860
I32
VMethodInvocation
p16861
tp16862
I1
s(Vinsert
p16863
I42
VSimpleName: setMustParameterized
p16864
Vinsert
p16865
I65
VTagElement: @see
p16866
tp16867
I1
s(Vinsert
p16868
I42
VSimpleName: getConnection
p16869
Vinsert
p16870
I42
VSimpleName: SQLException
p16871
tp16872
I5
s(g1594
I42
g1595
Vinsert
p16873
I32
VMethodInvocation
p16874
tp16875
I4
s(g316
I42
g317
Vinsert
p16876
I43
VSimpleType: JdbcSqlStat
p16877
tp16878
I2
s(g3908
I42
g3909
Vinsert
p16879
I27
VInfixExpression: !=
p16880
tp16881
I1
s(g962
I42
g963
Vinsert
p16882
I54
VTryStatement
p16883
tp16884
I1
s(g5936
I42
g5937
Vinsert
p16885
I45
VStringLiteral: "\u005ct\u005ct\u005ct\u005ct, sum(cnt) as cnt\u005cn"
p16886
tp16887
I1
s(Vinsert
p16888
I42
VSimpleName: pos
p16889
Vinsert
p16890
I25
VIfStatement
p16891
tp16892
I1
s(g7631
I42
g7632
Vinsert
p16893
I43
VSimpleType: Object
p16894
tp16895
I1
s(g13873
I42
g13874
Vinsert
p16896
I14
VClassInstanceCreation
p16897
tp16898
I2
s(Vinsert
p16899
I42
VSimpleName: normalize
p16900
Vinsert
p16901
I42
VSimpleName: ident_normalized
p16902
tp16903
I1
s(Vinsert
p16904
I42
VSimpleName: nextToken
p16905
Vinsert
p16906
I40
VQualifiedName: Token.CONNECT
p16907
tp16908
I1
s(g4510
I42
g4511
Vinsert
p16909
I42
VSimpleName: exprA
p16910
tp16911
I2
s(g6121
I42
g6122
Vinsert
p16912
I42
VSimpleName: getProxyFilters
p16913
tp16914
I1
s(g3654
I42
g3655
Vinsert
p16915
I40
VQualifiedName: Token.LPAREN
p16916
tp16917
I1
s(g4926
I42
g4927
Vinsert
p16918
I59
VVariableDeclarationFragment
p16919
tp16920
I1
s(g8643
I42
g8644
Vinsert
p16921
I22
VFieldAccess
p16922
tp16923
I1
s(g9854
I42
g9855
Vinsert
p16924
I42
VSimpleName: sortedBy
p16925
tp16926
I1
s(Vinsert
p16927
I42
VSimpleName: addUser
p16928
Vinsert
p16929
I42
VSimpleName: user
p16930
tp16931
I4
s(g5818
I42
g5819
Vinsert
p16932
I43
VSimpleType: Object
p16933
tp16934
I1
s(Vinsert
p16935
I42
VSimpleName: getInstance
p16936
Vinsert
p16937
I22
VFieldAccess
p16938
tp16939
I1
s(g2538
I42
g2539
Vinsert
p16940
I43
VSimpleType: SQLException
p16941
tp16942
I1
s(Vinsert
p16943
I42
VSimpleName: close
p16944
Vinsert
p16945
I43
VSimpleType: DruidDataSource
p16946
tp16947
I2
s(Vinsert
p16948
I42
VSimpleName: isSearchable
p16949
Vinsert
p16950
I42
VSimpleName: isAutoIncrement
p16951
tp16952
I1
s(g5475
I42
g5476
Vinsert
p16953
I42
VSimpleName: request
p16954
tp16955
I1
s(g6655
I42
g6656
Vinsert
p16956
I33
VNullLiteral
p16957
tp16958
I1
s(Vinsert
p16959
I42
VSimpleName: visit
p16960
Vinsert
p16961
I42
VSimpleName: authenticatedPassword
p16962
tp16963
I1
s(g136
I42
g137
Vinsert
p16964
I60
VVariableDeclarationStatement
p16965
tp16966
I2
s(Vinsert
p16967
I42
VSimpleName: equalsIgnoreCase
p16968
Vinsert
p16969
I42
VSimpleName: tableNames
p16970
tp16971
I1
s(g6475
I42
g6476
Vinsert
p16972
I42
VSimpleName: Assert
p16973
tp16974
I1
s(Vinsert
p16975
I42
VSimpleName: size
p16976
Vinsert
p16977
I43
VSimpleType: MultiDataSourceConnection
p16978
tp16979
I1
s(Vinsert
p16980
I42
VSimpleName: getAndIncrement
p16981
Vinsert
p16982
I39
VPrimitiveType: long
p16983
tp16984
I2
s(Vinsert
p16985
I42
VSimpleName: equals
p16986
Vinsert
p16987
I42
VSimpleName: sorted
p16988
tp16989
I1
s(g14754
I42
g14755
Vinsert
p16990
I32
VMethodInvocation
p16991
tp16992
I1
s(Vinsert
p16993
I42
VSimpleName: parseStatementList
p16994
Vinsert
p16995
I43
VSimpleType: MySqlShowProfileStatement
p16996
tp16997
I2
s(g12616
I42
g12617
Vinsert
p16998
I45
VStringLiteral: "sin(1)"
p16999
tp17000
I1
s(g13424
I42
g13425
Vinsert
p17001
I60
VVariableDeclarationStatement
p17002
tp17003
I1
s(g2702
I42
g2703
Vinsert
p17004
I42
VSimpleName: validproc
p17005
tp17006
I1
s(Vinsert
p17007
I42
VSimpleName: setDriver
p17008
Vinsert
p17009
I42
VSimpleName: testInitInvalidDecrypt
p17010
tp17011
I1
s(Vinsert
p17012
I42
VSimpleName: getMajorVersion
p17013
Vinsert
p17014
I83
VModifier: public
p17015
tp17016
I1
s(Vinsert
p17017
I42
VSimpleName: setProperty
p17018
Vinsert
p17019
I42
VSimpleName: p
p17020
tp17021
I1
s(Vinsert
p17022
I42
VSimpleName: endVisit
p17023
Vinsert
p17024
I42
VSimpleName: tableSource
p17025
tp17026
I1
s(g7330
I42
g7331
Vinsert
p17027
I42
VSimpleName: setConditionAndAlwayTrueAllow
p17028
tp17029
I4
s(Vinsert
p17030
I42
VSimpleName: clone
p17031
Vinsert
p17032
I40
VQualifiedName: x.methodName
p17033
tp17034
I1
s(Vinsert
p17035
I42
VSimpleName: size
p17036
Vinsert
p17037
I42
VSimpleName: addUpdateCount
p17038
tp17039
I1
s(g15188
I42
g15189
Vinsert
p17040
I32
VMethodInvocation
p17041
tp17042
I225
s(g8142
I42
g8143
Vinsert
p17043
I42
VSimpleName: parseMerge
p17044
tp17045
I1
s(g12671
I42
g12672
Vinsert
p17046
I43
VSimpleType: SQLNumberExpr
p17047
tp17048
I2
s(g13099
I42
g13100
Vinsert
p17049
I42
VSimpleName: requestCount
p17050
tp17051
I1
s(Vinsert
p17052
I42
VSimpleName: setParent
p17053
Vinsert
p17054
I42
VSimpleName: setPassword
p17055
tp17056
I1
s(g10124
I42
g10125
Vinsert
p17057
I42
VSimpleName: DruidPooledResultSet
p17058
tp17059
I2
s(g8282
I42
g8283
Vinsert
p17060
I42
VSimpleName: where
p17061
tp17062
I2
s(g7275
I42
g7276
Vinsert
p17063
I42
VSimpleName: sql
p17064
tp17065
I10
s(Vinsert
p17066
I42
VSimpleName: createSqlStat
p17067
Vinsert
p17068
I42
VSimpleName: COUNT
p17069
tp17070
I1
s(g1012
I42
g1013
Vinsert
p17071
I32
VMethodInvocation
p17072
tp17073
I6
s(Vinsert
p17074
I42
VSimpleName: toMySqlString
p17075
Vinsert
p17076
I45
VStringLiteral: "\u005ctUNIQUE `uk_a` (`c_tinyint`),\u005cn"
p17077
tp17078
I1
s(g11816
I42
g11817
Vinsert
p17079
I45
VStringLiteral: "order by department_id, \u005cn"
p17080
tp17081
I1
s(Vinsert
p17082
I42
VSimpleName: openSession
p17083
Vinsert
p17084
I43
VSimpleType: SqlMapSession
p17085
tp17086
I2
s(g6712
I42
g6713
Vinsert
p17087
I32
VMethodInvocation
p17088
tp17089
I34
s(g11231
I42
g11232
Vinsert
p17090
I52
VThisExpression
p17091
tp17092
I1
s(Vinsert
p17093
I42
VSimpleName: callObjectMethod
p17094
Vinsert
p17095
I74
VParameterizedType: Map<String,Object>
p17096
tp17097
I3
s(Vinsert
p17098
I42
VSimpleName: size
p17099
Vinsert
p17100
I42
VSimpleName: ResultSet
p17101
tp17102
I2
s(g2364
I42
g2365
Vinsert
p17103
I42
VSimpleName: passwordBytes
p17104
tp17105
I1
s(Vinsert
p17106
I42
VSimpleName: setResetStatEnable
p17107
Vinsert
p17108
I42
VSimpleName: getProperty
p17109
tp17110
I1
s(g5282
I42
g5283
Vinsert
p17111
I42
VSimpleName: stmt
p17112
tp17113
I4
s(Vinsert
p17114
I42
VSimpleName: getPoolingConnectionInfo
p17115
Vinsert
p17116
I42
VSimpleName: getDruidDataSourceById
p17117
tp17118
I3
s(g6116
I42
g6117
Vinsert
p17119
I44
VSingleVariableDeclaration
p17120
tp17121
I1
s(g13094
I42
g13095
Vinsert
p17122
I27
VInfixExpression: ==
p17123
tp17124
I4
s(Vinsert
p17125
I42
VSimpleName: init
p17126
Vinsert
p17127
I83
VModifier: final
p17128
tp17129
I1
s(g7375
I42
g7376
Vinsert
p17130
I42
VSimpleName: createStatement
p17131
tp17132
I2
s(Vinsert
p17133
I42
VSimpleName: createConnection
p17134
Vinsert
p17135
I42
VSimpleName: getInitialSize
p17136
tp17137
I1
s(Vinsert
p17138
I42
VSimpleName: assertTrue
p17139
Vinsert
p17140
I42
VSimpleName: SQLServerWallTest_1
p17141
tp17142
I1
s(g7007
I42
g7008
Vinsert
p17143
I33
VNullLiteral
p17144
tp17145
I1
s(Vinsert
p17146
I42
VSimpleName: putAttribute
p17147
Vinsert
p17148
I52
VThisExpression
p17149
tp17150
I1
s(g3513
I42
g3514
Vinsert
p17151
I42
VSimpleName: size
p17152
tp17153
I2
s(g5262
I42
g5263
Vinsert
p17154
I7
VAssignment: =
p17155
tp17156
I1
s(g2935
I42
g2936
Vinsert
p17157
I44
VSingleVariableDeclaration
p17158
tp17159
I2
s(g12948
I42
g12949
Vinsert
p17160
I42
VSimpleName: WallVisitorUtils
p17161
tp17162
I1
s(Vinsert
p17163
I42
VSimpleName: get
p17164
Vinsert
p17165
I42
VSimpleName: getAndSet
p17166
tp17167
I2
s(g8783
I42
g8784
Vinsert
p17168
I42
VSimpleName: MappingVisitorUtils
p17169
tp17170
I3
s(g7991
I42
g7992
Vinsert
p17171
I42
VSimpleName: config
p17172
tp17173
I2
s(Vinsert
p17174
I42
VSimpleName: toMySqlString
p17175
Vinsert
p17176
I45
VStringLiteral: "CREATE OR REPLACE DEFINER = current_user\u005cn"
p17177
tp17178
I1
s(g8648
I42
g8649
Vinsert
p17179
I42
VSimpleName: majorVersion
p17180
tp17181
I1
s(Vinsert
p17182
I42
VSimpleName: getExpr
p17183
Vinsert
p17184
I40
VQualifiedName: OdpsStatisticClause.ExpressionCondition
p17185
tp17186
I1
s(g13239
I42
g13240
Vinsert
p17187
I42
VSimpleName: init
p17188
tp17189
I2
s(g1883
I42
g1884
Vinsert
p17190
I43
VSimpleType: MySqlSubPartitionByKey
p17191
tp17192
I1
s(g977
I42
g978
Vinsert
p17193
I34
VNumberLiteral: 0
p17194
tp17195
I3
s(g1047
I42
g1048
Vinsert
p17196
I83
VModifier: public
p17197
tp17198
I1
s(Vinsert
p17199
I42
VSimpleName: equalsIgnoreCase
p17200
Vinsert
p17201
I45
VStringLiteral: "CHARSET"
p17202
tp17203
I1
s(g16625
I42
g16626
Vinsert
p17204
I40
VQualifiedName: System.out
p17205
tp17206
I1
s(g12776
I42
g12777
Vinsert
p17207
I43
VSimpleType: SQLTruncateStatement
p17208
tp17209
I1
s(g14489
I42
g14490
Vinsert
p17210
I42
VSimpleName: statement
p17211
tp17212
I4
s(Vinsert
p17213
I42
VSimpleName: get
p17214
Vinsert
p17215
I42
VSimpleName: blobOpenCount
p17216
tp17217
I4
s(g11428
I42
g11429
Vinsert
p17218
I42
VSimpleName: stringVal
p17219
tp17220
I2
s(Vinsert
p17221
I42
VSimpleName: matchOwner
p17222
Vinsert
p17223
I36
VParenthesizedExpression
p17224
tp17225
I1
s(g5058
I42
g5059
Vinsert
p17226
I45
VStringLiteral: "ConnectionCount_Alive_12_24_Hours"
p17227
tp17228
I1
s(g552
I42
g553
Vinsert
p17229
I43
VSimpleType: ShardingRuntimeException
p17230
tp17231
I1
s(g15204
I42
g15205
Vinsert
p17232
I42
VSimpleName: SQLUpdateStatement
p17233
tp17234
I1
s(Vinsert
p17235
I42
VSimpleName: get
p17236
Vinsert
p17237
I42
VSimpleName: parseStatements
p17238
tp17239
I23
s(Vinsert
p17240
I42
VSimpleName: getInto
p17241
Vinsert
p17242
I25
VIfStatement
p17243
tp17244
I2
s(Vinsert
p17245
I42
VSimpleName: close
p17246
Vinsert
p17247
I42
VSimpleName: RuntimeException
p17248
tp17249
I1
s(Vinsert
p17250
I42
VSimpleName: token
p17251
Vinsert
p17252
I24
VForStatement
p17253
tp17254
I10
s(g6689
I42
g6690
Vinsert
p17255
I42
VSimpleName: wallProvider
p17256
tp17257
I2
s(g16581
I42
g16582
Vinsert
p17258
I21
VExpressionStatement
p17259
tp17260
I2
s(Vinsert
p17261
I42
VSimpleName: getItems
p17262
Vinsert
p17263
I42
VSimpleName: accept
p17264
tp17265
I6
s(Vinsert
p17266
I42
VSimpleName: equals
p17267
Vinsert
p17268
I42
VSimpleName: SQLObject
p17269
tp17270
I1
s(g14651
I42
g14652
Vinsert
p17271
I43
VSimpleType: Log4jFilter
p17272
tp17273
I1
s(g10829
I42
g10830
Vinsert
p17274
I42
VSimpleName: StringTokenizer
p17275
tp17276
I1
s(g14896
I42
g14897
Vinsert
p17277
I83
VModifier: public
p17278
tp17279
I1
s(g6066
I42
g6067
Vinsert
p17280
I14
VClassInstanceCreation
p17281
tp17282
I1
s(Vinsert
p17283
I42
VSimpleName: getConnection
p17284
Vinsert
p17285
I42
VSimpleName: isInited
p17286
tp17287
I1
s(g14535
I42
g14536
Vinsert
p17288
I45
VStringLiteral: "\u005ct\u005ctAND outer.db_key = bdf.db_key\u005cn"
p17289
tp17290
I1
s(Vinsert
p17291
I42
VSimpleName: toSQL
p17292
Vinsert
p17293
I42
VSimpleName: IllegalSQLObjectViolation
p17294
tp17295
I1
s(Vinsert
p17296
I42
VSimpleName: getLeft
p17297
Vinsert
p17298
I42
VSimpleName: SQLExpr
p17299
tp17300
I1
s(Vinsert
p17301
I42
VSimpleName: as
p17302
Vinsert
p17303
I8
VBlock
p17304
tp17305
I1
s(Vinsert
p17306
I42
VSimpleName: token
p17307
Vinsert
p17308
I42
VSimpleName: SQLReturnStatement
p17309
tp17310
I4
s(Vinsert
p17311
I42
VSimpleName: setUsername
p17312
Vinsert
p17313
I42
VSimpleName: dataSource
p17314
tp17315
I3
s(g6475
I42
g6476
Vinsert
p17316
I42
VSimpleName: assertNotNull
p17317
tp17318
I1
s(g13886
I42
g13887
Vinsert
p17319
I43
VSimpleType: Exception
p17320
tp17321
I4
s(g8340
I42
g8341
Vinsert
p17322
I42
VSimpleName: items
p17323
tp17324
I4
s(g4806
I42
g4807
Vinsert
p17325
I42
VSimpleName: aggregateExpr
p17326
tp17327
I2
s(g1198
I42
g1199
Vinsert
p17328
I42
VSimpleName: pgDataType
p17329
tp17330
I3
s(g14026
I42
g14027
Vinsert
p17331
I32
VMethodInvocation
p17332
tp17333
I11
s(Vinsert
p17334
I42
VSimpleName: close
p17335
Vinsert
p17336
I53
VThrowStatement
p17337
tp17338
I5
s(g56
I42
g57
Vinsert
p17339
I42
VSimpleName: clause
p17340
tp17341
I1
s(g11611
I42
g11612
Vinsert
p17342
I21
VExpressionStatement
p17343
tp17344
I11
s(g10417
I42
g10418
Vinsert
p17345
I27
VInfixExpression: ||
p17346
tp17347
I6
s(g4780
I42
g4781
Vinsert
p17348
I32
VMethodInvocation
p17349
tp17350
I2
s(g6495
I42
g6496
Vinsert
p17351
I42
VSimpleName: registerOutParameter
p17352
tp17353
I3
s(g4088
I42
g4089
Vinsert
p17354
I42
VSimpleName: close
p17355
tp17356
I1
s(g10082
I42
g10083
Vinsert
p17357
I42
VSimpleName: TestCase
p17358
tp17359
I1
s(g7712
I42
g7713
Vinsert
p17360
I42
VSimpleName: assertTrue
p17361
tp17362
I2
s(g8653
I42
g8654
Vinsert
p17363
I39
VPrimitiveType: void
p17364
tp17365
I1
s(g14730
I42
g14731
Vinsert
p17366
I43
VSimpleType: SocketTimeoutException
p17367
tp17368
I1
s(Vinsert
p17369
I42
VSimpleName: assertEquals
p17370
Vinsert
p17371
I45
VStringLiteral: "\u005cn -- yyy"
p17372
tp17373
I3
s(Vinsert
p17374
I42
VSimpleName: toSQLString
p17375
Vinsert
p17376
I45
VStringLiteral: "TABLESPACE \u005c"APP_DATA1K\u005c"\u005cn"
p17377
tp17378
I1
s(Vinsert
p17379
I42
VSimpleName: afterDataSourceChanged
p17380
Vinsert
p17381
I42
VSimpleName: multiDataSource
p17382
tp17383
I3
s(g9704
I42
g9705
Vinsert
p17384
I42
VSimpleName: JTable
p17385
tp17386
I1
s(Vinsert
p17387
I42
VSimpleName: getColumn
p17388
Vinsert
p17389
I42
VSimpleName: stmt
p17390
tp17391
I2
s(g15991
I42
g15992
Vinsert
p17392
I42
VSimpleName: param
p17393
tp17394
I4
s(Vinsert
p17395
I42
VSimpleName: getInstance
p17396
Vinsert
p17397
I45
VStringLiteral: "stat"
p17398
tp17399
I2
s(g12565
I42
g12566
Vinsert
p17400
I43
VSimpleType: PreparedStatement
p17401
tp17402
I4
s(Vinsert
p17403
I42
VSimpleName: expr
p17404
Vinsert
p17405
I40
VQualifiedName: Token.DEFAULT
p17406
tp17407
I1
s(Vinsert
p17408
I42
VSimpleName: getFullGC
p17409
Vinsert
p17410
I59
VVariableDeclarationFragment
p17411
tp17412
I2
s(g3811
I42
g3812
Vinsert
p17413
I21
VExpressionStatement
p17414
tp17415
I1
s(g11270
I42
g11271
Vinsert
p17416
I14
VClassInstanceCreation
p17417
tp17418
I1
s(g1105
I42
g1106
Vinsert
p17419
I40
VQualifiedName: holder.lastActiveTimeMillis
p17420
tp17421
I1
s(g9420
I42
g9421
Vinsert
p17422
I21
VExpressionStatement
p17423
tp17424
I2
s(g7121
I42
g7122
Vinsert
p17425
I43
VSimpleType: List
p17426
tp17427
I1
s(Vinsert
p17428
I42
VSimpleName: equalsIgnoreCase
p17429
Vinsert
p17430
I42
VSimpleName: exprParser
p17431
tp17432
I1
s(g13911
I42
g13912
Vinsert
p17433
I42
VSimpleName: Boolean
p17434
tp17435
I1
s(g3684
I42
g3685
Vinsert
p17436
I42
VSimpleName: statementParser
p17437
tp17438
I1
s(Vinsert
p17439
I42
VSimpleName: getAndSet
p17440
Vinsert
p17441
I42
VSimpleName: executeCount
p17442
tp17443
I1
s(g1100
I42
g1101
Vinsert
p17444
I14
VClassInstanceCreation
p17445
tp17446
I1
s(g6031
I42
g6032
Vinsert
p17447
I27
VInfixExpression: !=
p17448
tp17449
I1
s(Vinsert
p17450
I42
VSimpleName: hashCode
p17451
Vinsert
p17452
I52
VThisExpression
p17453
tp17454
I2
s(g758
I42
g759
Vinsert
p17455
I45
VStringLiteral: "DROP CONSTRAINT "
p17456
tp17457
I1
s(g15536
I42
g15537
Vinsert
p17458
I43
VSimpleType: PushService
p17459
tp17460
I1
s(g6220
I42
g6221
Vinsert
p17461
I45
VStringLiteral: "\u005cn\u005ct\u005c"ORDER_INDEX\u005c" NUMBER(38, 0),"
p17462
tp17463
I2
s(g206
I42
g207
Vinsert
p17464
I42
VSimpleName: holder
p17465
tp17466
I1
s(Vinsert
p17467
I42
VSimpleName: getReferencingColumns
p17468
Vinsert
p17469
I42
VSimpleName: getName
p17470
tp17471
I1
s(g7245
I42
g7246
Vinsert
p17472
I33
VNullLiteral
p17473
tp17474
I2
s(g12050
I42
g12051
Vinsert
p17475
I45
VStringLiteral: "\u005ct\u005ct\u005ct\u005ctWHERE menu_id IN ('M00006')\u005cn"
p17476
tp17477
I1
s(g15220
I42
g15221
Vinsert
p17478
I42
VSimpleName: getCreatedTime
p17479
tp17480
I1
s(g3982
I42
g3983
Vinsert
p17481
I42
VSimpleName: master
p17482
tp17483
I2
s(g2120
I42
g2121
Vinsert
p17484
I42
VSimpleName: setIsolation
p17485
tp17486
I1
s(g6152
I42
g6153
Vinsert
p17487
I32
VMethodInvocation
p17488
tp17489
I5
s(Vinsert
p17490
I42
VSimpleName: assertEquals
p17491
Vinsert
p17492
I45
VStringLiteral: "\u005cnPARTITION BY RANGE (YEAR(separated))"
p17493
tp17494
I1
s(g13643
I42
g13644
Vinsert
p17495
I25
VIfStatement
p17496
tp17497
I1
s(g17066
I42
g17067
Vinsert
p17498
I38
VPrefixExpression: ++
p17499
tp17500
I2
s(g3472
I42
g3473
Vinsert
p17501
I42
VSimpleName: print0
p17502
tp17503
I1
s(g10731
I42
g10732
Vinsert
p17504
I32
VMethodInvocation
p17505
tp17506
I5
s(Vinsert
p17507
I42
VSimpleName: getForeignKey
p17508
Vinsert
p17509
I43
VSimpleType: SQLAlterTableAddForeignKey
p17510
tp17511
I1
s(Vinsert
p17512
I42
VSimpleName: initWallTopStatementContext
p17513
Vinsert
p17514
I43
VSimpleType: SQLSelectStatement
p17515
tp17516
I1
s(g9891
I42
g9892
Vinsert
p17517
I42
VSimpleName: size
p17518
tp17519
I2
s(g652
I42
g653
Vinsert
p17520
I42
VSimpleName: uriStatDataList
p17521
tp17522
I1
s(g2662
I42
g2663
Vinsert
p17523
I40
VQualifiedName: Token.DELETE
p17524
tp17525
I1
s(Vinsert
p17526
I42
VSimpleName: getLimit
p17527
Vinsert
p17528
I13
VCharacterLiteral: ' '
p17529
tp17530
I1
s(g7211
I42
g7212
Vinsert
p17531
I42
VSimpleName: setCharacter
p17532
tp17533
I1
s(Vinsert
p17534
I42
VSimpleName: put
p17535
Vinsert
p17536
I45
VStringLiteral: "connectionId"
p17537
tp17538
I1
s(Vinsert
p17539
I42
VSimpleName: assertEquals
p17540
Vinsert
p17541
I42
VSimpleName: toSQLServerString
p17542
tp17543
I1
s(g5974
I42
g5975
Vinsert
p17544
I42
VSimpleName: error
p17545
tp17546
I1
s(g13538
I42
g13539
Vinsert
p17547
I42
VSimpleName: setGlobal
p17548
tp17549
I1
s(Vinsert
p17550
I42
VSimpleName: equals
p17551
Vinsert
p17552
I34
VNumberLiteral: 102
p17553
tp17554
I1
s(g7417
I42
g7418
Vinsert
p17555
I21
VExpressionStatement
p17556
tp17557
I3
s(g3035
I42
g3036
Vinsert
p17558
I16
VConditionalExpression
p17559
tp17560
I1
s(g4243
I42
g4244
Vinsert
p17561
I42
VSimpleName: ucase
p17562
tp17563
I1
s(Vinsert
p17564
I42
VSimpleName: addSymbol
p17565
Vinsert
p17566
I2
VArrayAccess
p17567
tp17568
I4
s(g497
I42
g498
Vinsert
p17569
I21
VExpressionStatement
p17570
tp17571
I3
s(g13873
I42
g13874
Vinsert
p17572
I59
VVariableDeclarationFragment
p17573
tp17574
I2
s(Vinsert
p17575
I42
VSimpleName: hasAfterComment
p17576
Vinsert
p17577
I27
VInfixExpression: -
p17578
tp17579
I1
s(Vinsert
p17580
I42
VSimpleName: length
p17581
Vinsert
p17582
I42
VSimpleName: tableName
p17583
tp17584
I9
s(g1380
I42
g1381
Vinsert
p17585
I42
VSimpleName: exprParser
p17586
tp17587
I1
s(g512
I42
g513
Vinsert
p17588
I45
VStringLiteral: "PreparedStatementCacheAccessCount"
p17589
tp17590
I1
s(g7631
I42
g7632
Vinsert
p17591
I40
VQualifiedName: Option.DATA_SOURCE
p17592
tp17593
I2
s(Vinsert
p17594
I42
VSimpleName: evalExpr
p17595
Vinsert
p17596
I34
VNumberLiteral: 123
p17597
tp17598
I1
s(g9534
I42
g9535
Vinsert
p17599
I39
VPrimitiveType: void
p17600
tp17601
I1
s(Vinsert
p17602
I42
VSimpleName: getProperty
p17603
Vinsert
p17604
I42
VSimpleName: outputProperty
p17605
tp17606
I4
s(g11737
I42
g11738
Vinsert
p17607
I42
VSimpleName: mapping
p17608
tp17609
I1
s(g16232
I42
g16233
Vinsert
p17610
I45
VStringLiteral: "FR8K7jT7X58k8xK9uYlZv5LhV71a7A=="
p17611
tp17612
I1
s(g9595
I42
g9596
Vinsert
p17613
I45
VStringLiteral: "master"
p17614
tp17615
I1
s(g10618
I42
g10619
Vinsert
p17616
I42
VSimpleName: stringToInteger
p17617
tp17618
I1
s(g16060
I42
g16061
Vinsert
p17619
I16
VConditionalExpression
p17620
tp17621
I1
s(g4152
I42
g4153
Vinsert
p17622
I27
VInfixExpression: -
p17623
tp17624
I2
s(g3223
I42
g3224
Vinsert
p17625
I9
VBooleanLiteral: true
p17626
tp17627
I1
s(Vinsert
p17628
I42
VSimpleName: newUpdater
p17629
Vinsert
p17630
I42
VSimpleName: executeErrorCountUpdater
p17631
tp17632
I1
s(Vinsert
p17633
I42
VSimpleName: clone
p17634
Vinsert
p17635
I42
VSimpleName: SQLParameter
p17636
tp17637
I4
s(g11516
I42
g11517
Vinsert
p17638
I32
VMethodInvocation
p17639
tp17640
I10
s(g4921
I42
g4922
Vinsert
p17641
I32
VMethodInvocation
p17642
tp17643
I27
s(g3533
I42
g3534
Vinsert
p17644
I42
VSimpleName: println
p17645
tp17646
I10
s(Vinsert
p17647
I42
VSimpleName: assertEquals
p17648
Vinsert
p17649
I45
VStringLiteral: " select region from sale_detail distribute by region sort by f1 asc;"
p17650
tp17651
I1
s(Vinsert
p17652
I42
VSimpleName: getName
p17653
Vinsert
p17654
I83
VModifier: public
p17655
tp17656
I4
s(g2533
I42
g2534
Vinsert
p17657
I39
VPrimitiveType: long
p17658
tp17659
I2
s(Vinsert
p17660
I42
VSimpleName: getAlias
p17661
Vinsert
p17662
I42
VSimpleName: getAlias
p17663
tp17664
I2
s(Vinsert
p17665
I42
VSimpleName: preparedStatement_setFloat
p17666
Vinsert
p17667
I42
VSimpleName: x
p17668
tp17669
I2
s(Vinsert
p17670
I42
VSimpleName: toMySqlString
p17671
Vinsert
p17672
I39
VPrimitiveType: int
p17673
tp17674
I1
s(g3083
I42
g3084
Vinsert
p17675
I8
VBlock
p17676
tp17677
I7
s(Vinsert
p17678
I42
VSimpleName: incrementAndGet
p17679
Vinsert
p17680
I42
VSimpleName: incrementBusySkipCount
p17681
tp17682
I1
s(Vinsert
p17683
I42
VSimpleName: getConnection
p17684
Vinsert
p17685
I43
VSimpleType: String
p17686
tp17687
I12
s(g15761
I42
g15762
Vinsert
p17688
I21
VExpressionStatement
p17689
tp17690
I5
s(g2596
I42
g2597
Vinsert
p17691
I32
VMethodInvocation
p17692
tp17693
I3
s(Vinsert
p17694
I42
VSimpleName: assertFalse
p17695
Vinsert
p17696
I42
VSimpleName: MySqlWallTest19
p17697
tp17698
I1
s(Vinsert
p17699
I42
VSimpleName: accept
p17700
Vinsert
p17701
I42
VSimpleName: HiveOutputVisitor
p17702
tp17703
I2
s(Vinsert
p17704
I42
VSimpleName: get
p17705
Vinsert
p17706
I42
VSimpleName: Property
p17707
tp17708
I2
s(g1370
I42
g1371
Vinsert
p17709
I39
VPrimitiveType: void
p17710
tp17711
I1
s(g3893
I42
g3894
Vinsert
p17712
I33
VNullLiteral
p17713
tp17714
I1
s(g7131
I42
g7132
Vinsert
p17715
I45
VStringLiteral: "kkk#abc0#aa"
p17716
tp17717
I1
s(Vinsert
p17718
I42
VSimpleName: formatOdps
p17719
Vinsert
p17720
I45
VStringLiteral: "DROP TABLE a PURGE;"
p17721
tp17722
I1
s(Vinsert
p17723
I42
VSimpleName: loadClass
p17724
Vinsert
p17725
I42
VSimpleName: mysql_driver_version_6
p17726
tp17727
I3
s(g4898
I42
g4899
Vinsert
p17728
I21
VExpressionStatement
p17729
tp17730
I2
s(g11182
I42
g11183
Vinsert
p17731
I42
VSimpleName: AtomicLongFieldUpdater
p17732
tp17733
I1
s(Vinsert
p17734
I42
VSimpleName: getAndIncrement
p17735
Vinsert
p17736
I42
VSimpleName: r
p17737
tp17738
I2
s(Vinsert
p17739
I42
VSimpleName: get
p17740
Vinsert
p17741
I42
VSimpleName: port
p17742
tp17743
I1
s(g11835
I42
g11836
Vinsert
p17744
I42
VSimpleName: function_lower
p17745
tp17746
I1
s(Vinsert
p17747
I42
VSimpleName: set
p17748
Vinsert
p17749
I43
VSimpleType: SQLException
p17750
tp17751
I2
s(g16321
I42
g16322
Vinsert
p17752
I42
VSimpleName: Bytes
p17753
tp17754
I7
s(g3233
I42
g3234
Vinsert
p17755
I43
VSimpleType: ArrayList
p17756
tp17757
I16
s(g5012
I42
g5013
Vinsert
p17758
I7
VAssignment: =
p17759
tp17760
I2
s(g16
I42
g17
Vinsert
p17761
I43
VSimpleType: SQLTableSource
p17762
tp17763
I1
s(Vinsert
p17764
I42
VSimpleName: startsWith
p17765
Vinsert
p17766
I31
VMethodDeclaration
p17767
tp17768
I2
s(Vinsert
p17769
I42
VSimpleName: startsWith
p17770
Vinsert
p17771
I45
VStringLiteral: "jdbc:phoenix://"
p17772
tp17773
I1
s(g4253
I42
g4254
Vinsert
p17774
I43
VSimpleType: MapHandler
p17775
tp17776
I1
s(Vinsert
p17777
I42
VSimpleName: getCharset
p17778
Vinsert
p17779
I42
VSimpleName: ucase
p17780
tp17781
I1
s(g6534
I42
g6535
Vinsert
p17782
I42
VSimpleName: compareAndSet
p17783
tp17784
I1
s(Vinsert
p17785
I42
VSimpleName: nextToken
p17786
Vinsert
p17787
I40
VQualifiedName: Token.LOGGING
p17788
tp17789
I1
s(g3674
I42
g3675
Vinsert
p17790
I40
VQualifiedName: ConditionType.SQLSTATE
p17791
tp17792
I1
s(Vinsert
p17793
I42
VSimpleName: put
p17794
Vinsert
p17795
I42
VSimpleName: props
p17796
tp17797
I3
s(g444
I42
g445
Vinsert
p17798
I42
VSimpleName: alwayTrueCheck
p17799
tp17800
I2
s(g2029
I42
g2030
Vinsert
p17801
I42
VSimpleName: value
p17802
tp17803
I3
s(g10412
I42
g10413
Vinsert
p17804
I8
VBlock
p17805
tp17806
I1
s(g276
I42
g277
Vinsert
p17807
I45
VStringLiteral: "\u005cn\u005ct)"
p17808
tp17809
I1
s(g11667
I42
g11668
Vinsert
p17810
I45
VStringLiteral: "ConnectionCount_Alive_1_3_Day"
p17811
tp17812
I1
s(g9360
I42
g9361
Vinsert
p17813
I59
VVariableDeclarationFragment
p17814
tp17815
I1
s(Vinsert
p17816
I42
VSimpleName: toMySqlString
p17817
Vinsert
p17818
I42
VSimpleName: match
p17819
tp17820
I6
s(g10433
I42
g10434
Vinsert
p17821
I8
VBlock
p17822
tp17823
I4
s(Vinsert
p17824
I42
VSimpleName: close
p17825
Vinsert
p17826
I45
VStringLiteral: "mysql"
p17827
tp17828
I1
s(g16359
I42
g16360
Vinsert
p17829
I59
VVariableDeclarationFragment
p17830
tp17831
I1
s(g9190
I42
g9191
Vinsert
p17832
I21
VExpressionStatement
p17833
tp17834
I1
s(Vinsert
p17835
I42
VSimpleName: assertEquals
p17836
Vinsert
p17837
I42
VSimpleName: assertFalse
p17838
tp17839
I2
s(g8150
I42
g8151
Vinsert
p17840
I42
VSimpleName: rollbackCount
p17841
tp17842
I1
s(g16525
I42
g16526
Vinsert
p17843
I33
VNullLiteral
p17844
tp17845
I3
s(g6742
I42
g6743
Vinsert
p17846
I27
VInfixExpression: !=
p17847
tp17848
I2
s(g821
I42
g822
Vinsert
p17849
I32
VMethodInvocation
p17850
tp17851
I1
s(g1908
I42
g1909
Vinsert
p17852
I42
VSimpleName: EvalMethodRandom
p17853
tp17854
I1
s(g10892
I42
g10893
Vinsert
p17855
I45
VStringLiteral: "\u005ct\u005ct\u005ctSELECT STR\u005cn"
p17856
tp17857
I1
s(g8030
I42
g8031
Vinsert
p17858
I42
VSimpleName: dir
p17859
tp17860
I3
s(Vinsert
p17861
I42
VSimpleName: getDataSourceStat
p17862
Vinsert
p17863
I42
VSimpleName: ds
p17864
tp17865
I1
s(g386
I42
g387
Vinsert
p17866
I43
VSimpleType: String
p17867
tp17868
I2
s(g4982
I42
g4983
Vinsert
p17869
I16
VConditionalExpression
p17870
tp17871
I1
s(g5424
I42
g5425
Vinsert
p17872
I14
VClassInstanceCreation
p17873
tp17874
I3
s(g14664
I42
g14665
Vinsert
p17875
I45
VStringLiteral: "\u005cn\u005ctlocation VARCHAR2(13)"
p17876
tp17877
I2
s(Vinsert
p17878
I42
VSimpleName: getConnection
p17879
Vinsert
p17880
I42
VSimpleName: test_getObject_2
p17881
tp17882
I1
s(Vinsert
p17883
I42
VSimpleName: setParent
p17884
Vinsert
p17885
I42
VSimpleName: tableSource
p17886
tp17887
I20
s(g8760
I42
g8761
Vinsert
p17888
I42
VSimpleName: SQLSelect
p17889
tp17890
I1
s(g14535
I42
g14536
Vinsert
p17891
I45
VStringLiteral: "\u005ct\u005ctAND outer.file# = file#\u005cn"
p17892
tp17893
I2
s(Vinsert
p17894
I42
VSimpleName: endVisit
p17895
Vinsert
p17896
I22
VFieldAccess
p17897
tp17898
I38
s(g657
I42
g658
Vinsert
p17899
I32
VMethodInvocation
p17900
tp17901
I1
s(Vinsert
p17902
I42
VSimpleName: add
p17903
Vinsert
p17904
I43
VSimpleType: OracleCommitStatement
p17905
tp17906
I4
s(g7932
I42
g7933
Vinsert
p17907
I42
VSimpleName: s2
p17908
tp17909
I2
s(Vinsert
p17910
I42
VSimpleName: assertFalse
p17911
Vinsert
p17912
I42
VSimpleName: MySqlWallTest30
p17913
tp17914
I1
s(Vinsert
p17915
I42
VSimpleName: getValue
p17916
Vinsert
p17917
I42
VSimpleName: MySqlBooleanExpr
p17918
tp17919
I2
s(g8682
I42
g8683
Vinsert
p17920
I45
VStringLiteral: "CREATE TRIGGER employee_trigger\u005cn"
p17921
tp17922
I1
s(g12082
I42
g12083
Vinsert
p17923
I42
VSimpleName: markBp
p17924
tp17925
I1
s(Vinsert
p17926
I42
VSimpleName: getQuery
p17927
Vinsert
p17928
I42
VSimpleName: SQLSubqueryTableSource
p17929
tp17930
I1
s(g7537
I42
g7538
Vinsert
p17931
I44
VSingleVariableDeclaration
p17932
tp17933
I2
s(g3261
I42
g3262
Vinsert
p17934
I32
VMethodInvocation
p17935
tp17936
I3
s(g15818
I42
g15819
Vinsert
p17937
I42
VSimpleName: List
p17938
tp17939
I1
s(Vinsert
p17940
I42
VSimpleName: assertNotNull
p17941
Vinsert
p17942
I42
VSimpleName: stmtClosedError
p17943
tp17944
I1
s(g16863
I42
g16864
Vinsert
p17945
I42
VSimpleName: SQLServerWallProvider
p17946
tp17947
I1
s(g6036
I42
g6037
Vinsert
p17948
I32
VMethodInvocation
p17949
tp17950
I3
s(Vinsert
p17951
I42
VSimpleName: setExpr
p17952
Vinsert
p17953
I42
VSimpleName: array
p17954
tp17955
I2
s(Vinsert
p17956
I42
VSimpleName: getProperty
p17957
Vinsert
p17958
I52
VThisExpression
p17959
tp17960
I1
s(Vinsert
p17961
I42
VSimpleName: assertEquals
p17962
Vinsert
p17963
I42
VSimpleName: EvalMethodTest_substring_3
p17964
tp17965
I1
s(Vinsert
p17966
I42
VSimpleName: assertEquals
p17967
Vinsert
p17968
I45
VStringLiteral: "\u005cn\u005ctPARTITION p0 VALUES LESS THAN (6),"
p17969
tp17970
I2
s(g3699
I42
g3700
Vinsert
p17971
I42
VSimpleName: THREAD_COUNT
p17972
tp17973
I1
s(g17575
I42
g17576
Vinsert
p17974
I13
VCharacterLiteral: ','
p17975
tp17976
I1
s(g4921
I42
g4922
Vinsert
p17977
I21
VExpressionStatement
p17978
tp17979
I13
s(g2223
I42
g2224
Vinsert
p17980
I36
VParenthesizedExpression
p17981
tp17982
I6
s(Vinsert
p17983
I42
VSimpleName: assertEquals
p17984
Vinsert
p17985
I42
VSimpleName: dataSource
p17986
tp17987
I28
s(g11855
I42
g11856
Vinsert
p17988
I45
VStringLiteral: ", "
p17989
tp17990
I1
s(g4227
I42
g4228
Vinsert
p17991
I42
VSimpleName: Integer
p17992
tp17993
I2
s(g9355
I42
g9356
Vinsert
p17994
I60
VVariableDeclarationStatement
p17995
tp17996
I2
s(Vinsert
p17997
I42
VSimpleName: toOdpsString
p17998
Vinsert
p17999
I42
VSimpleName: ArrayList
p18000
tp18001
I1
s(g7039
I42
g7040
Vinsert
p18002
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITIONS 8,"
p18003
tp18004
I2
s(Vinsert
p18005
I42
VSimpleName: formatMySql
p18006
Vinsert
p18007
I45
VStringLiteral: " PRIMARY KEY (`id`)"
p18008
tp18009
I1
s(g2074
I42
g2075
Vinsert
p18010
I42
VSimpleName: acceptIdentifier
p18011
tp18012
I1
s(g5724
I42
g5725
Vinsert
p18013
I43
VSimpleType: CharsetParameter
p18014
tp18015
I2
s(Vinsert
p18016
I42
VSimpleName: add
p18017
Vinsert
p18018
I42
VSimpleName: addConfigFilter
p18019
tp18020
I1
s(Vinsert
p18021
I42
VSimpleName: endVisit
p18022
Vinsert
p18023
I42
VSimpleName: OracleASTVisitor
p18024
tp18025
I1
s(Vinsert
p18026
I42
VSimpleName: getOperator
p18027
Vinsert
p18028
I62
VInstanceofExpression
p18029
tp18030
I1
s(Vinsert
p18031
I42
VSimpleName: writeLock
p18032
Vinsert
p18033
I21
VExpressionStatement
p18034
tp18035
I7
s(Vinsert
p18036
I42
VSimpleName: getOperator
p18037
Vinsert
p18038
I40
VQualifiedName: SQLBinaryOperator.LessThanOrEqual
p18039
tp18040
I1
s(g6051
I42
g6052
Vinsert
p18041
I33
VNullLiteral
p18042
tp18043
I1
s(Vinsert
p18044
I42
VSimpleName: setPartition
p18045
Vinsert
p18046
I42
VSimpleName: accept
p18047
tp18048
I1
s(Vinsert
p18049
I42
VSimpleName: setWhere
p18050
Vinsert
p18051
I40
VQualifiedName: Token.DELETE
p18052
tp18053
I2
s(Vinsert
p18054
I42
VSimpleName: getConditions
p18055
Vinsert
p18056
I42
VSimpleName: getAliasMap
p18057
tp18058
I1
s(g13957
I42
g13958
Vinsert
p18059
I42
VSimpleName: hashArray
p18060
tp18061
I1
s(g1334
I42
g1335
Vinsert
p18062
I45
VStringLiteral: "\u005cn\u005ctSUPER_PROCESS_INSTANCE_ID_ NVARCHAR2(64),"
p18063
tp18064
I2
s(Vinsert
p18065
I42
VSimpleName: setExportTables
p18066
Vinsert
p18067
I33
VNullLiteral
p18068
tp18069
I1
s(Vinsert
p18070
I42
VSimpleName: setValue
p18071
Vinsert
p18072
I39
VPrimitiveType: void
p18073
tp18074
I4
s(g8098
I42
g8099
Vinsert
p18075
I42
VSimpleName: HttpSession
p18076
tp18077
I1
s(Vinsert
p18078
I42
VSimpleName: toSQLString
p18079
Vinsert
p18080
I45
VStringLiteral: "\u005ctON hr_structure\u005cn"
p18081
tp18082
I1
s(g12938
I42
g12939
Vinsert
p18083
I25
VIfStatement
p18084
tp18085
I1
s(Vinsert
p18086
I42
VSimpleName: put
p18087
Vinsert
p18088
I42
VSimpleName: Function
p18089
tp18090
I1
s(Vinsert
p18091
I42
VSimpleName: assertEquals
p18092
Vinsert
p18093
I45
VStringLiteral: "orderBy : "
p18094
tp18095
I3
s(g6587
I42
g6588
Vinsert
p18096
I42
VSimpleName: ucase
p18097
tp18098
I1
s(g1334
I42
g1335
Vinsert
p18099
I45
VStringLiteral: "\u005cn\u005ctSTART_USER_ID_ NVARCHAR2(255),"
p18100
tp18101
I2
s(Vinsert
p18102
I42
VSimpleName: nextToken
p18103
Vinsert
p18104
I40
VQualifiedName: Token.SEGMENT
p18105
tp18106
I1
s(g15632
I42
g15633
Vinsert
p18107
I45
VStringLiteral: "\u005ct\u005ctIF curr_comm IS NULL THEN\u005cn"
p18108
tp18109
I1
s(g602
I42
g603
Vinsert
p18110
I42
VSimpleName: dataSource
p18111
tp18112
I22
s(Vinsert
p18113
I42
VSimpleName: getObject
p18114
Vinsert
p18115
I60
VVariableDeclarationStatement
p18116
tp18117
I2
s(g15082
I42
g15083
Vinsert
p18118
I42
VSimpleName: endTimeMillis
p18119
tp18120
I4
s(g16107
I42
g16108
Vinsert
p18121
I42
VSimpleName: pivot
p18122
tp18123
I1
s(g11217
I42
g11218
Vinsert
p18124
I83
VModifier: public
p18125
tp18126
I2
s(g6134
I42
g6135
Vinsert
p18127
I42
VSimpleName: size
p18128
tp18129
I1
s(g4563
I42
g4564
Vinsert
p18130
I34
VNumberLiteral: 1
p18131
tp18132
I1
s(g6298
I42
g6299
Vinsert
p18133
I8
VBlock
p18134
tp18135
I4
s(g4248
I42
g4249
Vinsert
p18136
I27
VInfixExpression: ==
p18137
tp18138
I56
s(g2484
I42
g2485
Vinsert
p18139
I13
VCharacterLiteral: ','
p18140
tp18141
I1
s(g2459
I42
g2460
Vinsert
p18142
I21
VExpressionStatement
p18143
tp18144
I57
s(Vinsert
p18145
I42
VSimpleName: getConnectionProxy
p18146
Vinsert
p18147
I43
VSimpleType: SQLException
p18148
tp18149
I1
s(g685
I42
g686
Vinsert
p18150
I42
VSimpleName: getName
p18151
tp18152
I1
s(g9286
I42
g9287
Vinsert
p18153
I42
VSimpleName: SQLIdentifierExpr
p18154
tp18155
I1
s(g6737
I42
g6738
Vinsert
p18156
I40
VQualifiedName: SQLParserFeature.EnableSQLBinaryOpExprGroup
p18157
tp18158
I1
s(g17534
I42
g17535
Vinsert
p18159
I42
VSimpleName: getConnectionId
p18160
tp18161
I1
s(g141
I42
g142
Vinsert
p18162
I42
VSimpleName: println
p18163
tp18164
I3
s(g8417
I42
g8418
Vinsert
p18165
I43
VSimpleType: SQLSelectItem
p18166
tp18167
I1
s(Vinsert
p18168
I42
VSimpleName: token
p18169
Vinsert
p18170
I45
VStringLiteral: "GRANT OPTION"
p18171
tp18172
I1
s(Vinsert
p18173
I42
VSimpleName: isRegistered
p18174
Vinsert
p18175
I14
VClassInstanceCreation
p18176
tp18177
I3
s(g3427
I42
g3428
Vinsert
p18178
I45
VStringLiteral: "select * from T where fid = ?"
p18179
tp18180
I1
s(g5200
I42
g5201
Vinsert
p18181
I40
VQualifiedName: Color.lightGray
p18182
tp18183
I1
s(g14497
I42
g14498
Vinsert
p18184
I43
VSimpleType: Date
p18185
tp18186
I1
s(Vinsert
p18187
I42
VSimpleName: setConditionOpBitwseAllow
p18188
Vinsert
p18189
I59
VVariableDeclarationFragment
p18190
tp18191
I4
s(Vinsert
p18192
I42
VSimpleName: getConnection
p18193
Vinsert
p18194
I27
VInfixExpression: ==
p18195
tp18196
I1
s(g2667
I42
g2668
Vinsert
p18197
I42
VSimpleName: test_error_10
p18198
tp18199
I1
s(g7746
I42
g7747
Vinsert
p18200
I33
VNullLiteral
p18201
tp18202
I4
s(g12639
I42
g12640
Vinsert
p18203
I45
VStringLiteral: "121 134\u005cn"
p18204
tp18205
I1
s(g9919
I42
g9920
Vinsert
p18206
I60
VVariableDeclarationStatement
p18207
tp18208
I7
s(Vinsert
p18209
I42
VSimpleName: get
p18210
Vinsert
p18211
I74
VParameterizedType: List<Map<String,Object>>
p18212
tp18213
I1
s(Vinsert
p18214
I42
VSimpleName: getClass
p18215
Vinsert
p18216
I42
VSimpleName: item
p18217
tp18218
I2
s(Vinsert
p18219
I42
VSimpleName: endVisit
p18220
Vinsert
p18221
I42
VSimpleName: column
p18222
tp18223
I3
s(Vinsert
p18224
I42
VSimpleName: newInstance
p18225
Vinsert
p18226
I54
VTryStatement
p18227
tp18228
I3
s(g3184
I42
g3185
Vinsert
p18229
I42
VSimpleName: unwrap
p18230
tp18231
I3
s(g6562
I42
g6563
Vinsert
p18232
I42
VSimpleName: i
p18233
tp18234
I5
s(Vinsert
p18235
I42
VSimpleName: name
p18236
Vinsert
p18237
I43
VSimpleType: SQLSubPartition
p18238
tp18239
I1
s(g7497
I42
g7498
Vinsert
p18240
I42
VSimpleName: SQLUtils
p18241
tp18242
I1
s(g17408
I42
g17409
Vinsert
p18243
I39
VPrimitiveType: long
p18244
tp18245
I2
s(g251
I42
g252
Vinsert
p18246
I43
VSimpleType: String
p18247
tp18248
I1
s(g10061
I42
g10062
Vinsert
p18249
I32
VMethodInvocation
p18250
tp18251
I24
s(g2604
I42
g2605
Vinsert
p18252
I42
VSimpleName: columnNames
p18253
tp18254
I1
s(g14640
I42
g14641
Vinsert
p18255
I43
VSimpleType: Exception
p18256
tp18257
I1
s(g7908
I42
g7909
Vinsert
p18258
I44
VSingleVariableDeclaration
p18259
tp18260
I1
s(g16335
I42
g16336
Vinsert
p18261
I27
VInfixExpression: ==
p18262
tp18263
I1
s(g2444
I42
g2445
Vinsert
p18264
I42
VSimpleName: setTestExpr
p18265
tp18266
I1
s(g17408
I42
g17409
Vinsert
p18267
I42
VSimpleName: startYGC
p18268
tp18269
I1
s(Vinsert
p18270
I42
VSimpleName: setOutFileColumnsEscaped
p18271
Vinsert
p18272
I32
VMethodInvocation
p18273
tp18274
I4
s(g8208
I42
g8209
Vinsert
p18275
I45
VStringLiteral: "coditions : "
p18276
tp18277
I3
s(Vinsert
p18278
I42
VSimpleName: getItem
p18279
Vinsert
p18280
I42
VSimpleName: print
p18281
tp18282
I1
s(g1647
I42
g1648
Vinsert
p18283
I43
VSimpleType: LocalVirtualMachine
p18284
tp18285
I1
s(g16980
I42
g16981
Vinsert
p18286
I31
VMethodDeclaration
p18287
tp18288
I4
s(Vinsert
p18289
I42
VSimpleName: debug
p18290
Vinsert
p18291
I8
VBlock
p18292
tp18293
I6
s(g1715
I42
g1716
Vinsert
p18294
I25
VIfStatement
p18295
tp18296
I1
s(g15495
I42
g15496
Vinsert
p18297
I42
VSimpleName: DruidDataSource
p18298
tp18299
I1
s(Vinsert
p18300
I42
VSimpleName: setSeed
p18301
Vinsert
p18302
I42
VSimpleName: accept
p18303
tp18304
I1
s(g13066
I42
g13067
Vinsert
p18305
I21
VExpressionStatement
p18306
tp18307
I2
s(Vinsert
p18308
I42
VSimpleName: assertTrue
p18309
Vinsert
p18310
I42
VSimpleName: charsetConvert
p18311
tp18312
I2
s(g17291
I42
g17292
Vinsert
p18313
I32
VMethodInvocation
p18314
tp18315
I6
s(g1150
I42
g1151
Vinsert
p18316
I59
VVariableDeclarationFragment
p18317
tp18318
I1
s(g10971
I42
g10972
Vinsert
p18319
I42
VSimpleName: incrementAndGet
p18320
tp18321
I1
s(g404
I42
g405
Vinsert
p18322
I45
VStringLiteral: "CREATE MATERIALIZED VIEW sales_by_month_by_state\u005cn"
p18323
tp18324
I1
s(g3750
I42
g3751
Vinsert
p18325
I43
VSimpleType: DataSourceDisableException
p18326
tp18327
I2
s(g7052
I42
g7053
Vinsert
p18328
I52
VThisExpression
p18329
tp18330
I1
s(g13700
I42
g13701
Vinsert
p18331
I42
VSimpleName: DB2Lexer
p18332
tp18333
I2
s(g1725
I42
g1726
Vinsert
p18334
I42
VSimpleName: tableSource
p18335
tp18336
I2
s(g1160
I42
g1161
Vinsert
p18337
I42
VSimpleName: Override
p18338
tp18339
I1
s(g6712
I42
g6713
Vinsert
p18340
I43
VSimpleType: SQLBinaryOpExpr
p18341
tp18342
I13
s(g16402
I42
g16403
Vinsert
p18343
I42
VSimpleName: filterSize
p18344
tp18345
I1
s(g522
I42
g523
Vinsert
p18346
I27
VInfixExpression: !=
p18347
tp18348
I2
s(g61
I42
g62
Vinsert
p18349
I42
VSimpleName: IPRange
p18350
tp18351
I2
s(g4765
I42
g4766
Vinsert
p18352
I42
VSimpleName: SQLSyntaxErrorException
p18353
tp18354
I1
s(Vinsert
p18355
I42
VSimpleName: name
p18356
Vinsert
p18357
I42
VSimpleName: SQLFetchStatement
p18358
tp18359
I2
s(g8179
I42
g8180
Vinsert
p18360
I42
VSimpleName: SpringStatUtils
p18361
tp18362
I1
s(g4538
I42
g4539
Vinsert
p18363
I42
VSimpleName: stmt
p18364
tp18365
I6
s(g4500
I42
g4501
Vinsert
p18366
I45
VStringLiteral: "select * from t where id  = ? ORDER BY 1"
p18367
tp18368
I1
s(g31
I42
g32
Vinsert
p18369
I42
VSimpleName: x
p18370
tp18371
I5
s(g14522
I42
g14523
Vinsert
p18372
I45
VStringLiteral: "\u005ct\u005ctINTO :new.id\u005cn"
p18373
tp18374
I1
s(Vinsert
p18375
I42
VSimpleName: stringVal
p18376
Vinsert
p18377
I42
VSimpleName: value
p18378
tp18379
I2
s(g3679
I42
g3680
Vinsert
p18380
I32
VMethodInvocation
p18381
tp18382
I8
s(Vinsert
p18383
I42
VSimpleName: charAt
p18384
Vinsert
p18385
I37
VPostfixExpression: ++
p18386
tp18387
I1
s(Vinsert
p18388
I42
VSimpleName: visit
p18389
Vinsert
p18390
I42
VSimpleName: errorLogs
p18391
tp18392
I2
s(g9939
I42
g9940
Vinsert
p18393
I42
VSimpleName: conn
p18394
tp18395
I1
s(g2647
I42
g2648
Vinsert
p18396
I83
VModifier: public
p18397
tp18398
I2
s(Vinsert
p18399
I42
VSimpleName: isClosed
p18400
Vinsert
p18401
I42
VSimpleName: ResultSet
p18402
tp18403
I1
s(Vinsert
p18404
I42
VSimpleName: toSQLString
p18405
Vinsert
p18406
I45
VStringLiteral: "\u005ct\u005ctRETURN r;\u005cn"
p18407
tp18408
I1
s(g2474
I42
g2475
Vinsert
p18409
I42
VSimpleName: x
p18410
tp18411
I2
s(g5007
I42
g5008
Vinsert
p18412
I41
VReturnStatement
p18413
tp18414
I1
s(Vinsert
p18415
I42
VSimpleName: getObject
p18416
Vinsert
p18417
I8
VBlock
p18418
tp18419
I3
s(g11930
I42
g11931
Vinsert
p18420
I42
VSimpleName: addTableSource
p18421
tp18422
I1
s(g5633
I42
g5634
Vinsert
p18423
I42
VSimpleName: SQLFeatureNotSupportedException
p18424
tp18425
I1
s(g1231
I42
g1232
Vinsert
p18426
I42
VSimpleName: test_h2
p18427
tp18428
I1
s(Vinsert
p18429
I42
VSimpleName: add
p18430
Vinsert
p18431
I42
VSimpleName: setValues
p18432
tp18433
I1
s(g3574
I42
g3575
Vinsert
p18434
I42
VSimpleName: Object
p18435
tp18436
I2
s(Vinsert
p18437
I42
VSimpleName: setDriverClassName
p18438
Vinsert
p18439
I42
VSimpleName: DruidDataSource
p18440
tp18441
I3
s(g1360
I42
g1361
Vinsert
p18442
I42
VSimpleName: c0
p18443
tp18444
I5
s(Vinsert
p18445
I42
VSimpleName: getId
p18446
Vinsert
p18447
I42
VSimpleName: WrapperProxy
p18448
tp18449
I2
s(g11920
I42
g11921
Vinsert
p18450
I42
VSimpleName: addEnvironment
p18451
tp18452
I1
s(Vinsert
p18453
I42
VSimpleName: containsColumn
p18454
Vinsert
p18455
I45
VStringLiteral: "out_order_id"
p18456
tp18457
I1
s(Vinsert
p18458
I42
VSimpleName: getDeviceAndroidCount
p18459
Vinsert
p18460
I34
VNumberLiteral: 1
p18461
tp18462
I2
s(g5792
I42
g5793
Vinsert
p18463
I42
VSimpleName: print
p18464
tp18465
I2
s(g1963
I42
g1964
Vinsert
p18466
I42
VSimpleName: x
p18467
tp18468
I2
s(Vinsert
p18469
I42
VSimpleName: size
p18470
Vinsert
p18471
I42
VSimpleName: executeBefore
p18472
tp18473
I1
s(g1943
I42
g1944
Vinsert
p18474
I59
VVariableDeclarationFragment
p18475
tp18476
I1
s(Vinsert
p18477
I42
VSimpleName: assertEquals
p18478
Vinsert
p18479
I43
VSimpleType: WallTableStat
p18480
tp18481
I1
s(g8179
I42
g8180
Vinsert
p18482
I42
VSimpleName: Map
p18483
tp18484
I1
s(g8150
I42
g8151
Vinsert
p18485
I42
VSimpleName: commitCount
p18486
tp18487
I1
s(g8480
I42
g8481
Vinsert
p18488
I42
VSimpleName: SQLAlterTableAddPrimaryKey
p18489
tp18490
I2
s(Vinsert
p18491
I42
VSimpleName: assertEquals
p18492
Vinsert
p18493
I45
VStringLiteral: "'a' REGEXP '^[a-d]'"
p18494
tp18495
I1
s(Vinsert
p18496
I42
VSimpleName: getOn
p18497
Vinsert
p18498
I83
VModifier: public
p18499
tp18500
I1
s(g4538
I42
g4539
Vinsert
p18501
I34
VNumberLiteral: 0
p18502
tp18503
I23
s(g1032
I42
g1033
Vinsert
p18504
I42
VSimpleName: ucase
p18505
tp18506
I1
s(Vinsert
p18507
I42
VSimpleName: append
p18508
Vinsert
p18509
I42
VSimpleName: Override
p18510
tp18511
I7
s(Vinsert
p18512
I42
VSimpleName: hashCode64
p18513
Vinsert
p18514
I42
VSimpleName: operator
p18515
tp18516
I2
s(g16745
I42
g16746
Vinsert
p18517
I42
VSimpleName: Assert
p18518
tp18519
I1
s(g1853
I42
g1854
Vinsert
p18520
I59
VVariableDeclarationFragment
p18521
tp18522
I2
s(Vinsert
p18523
I42
VSimpleName: close
p18524
Vinsert
p18525
I42
VSimpleName: getNumBusyConnections
p18526
tp18527
I1
s(g439
I42
g440
Vinsert
p18528
I60
VVariableDeclarationStatement
p18529
tp18530
I1
s(Vinsert
p18531
I42
VSimpleName: setQuery
p18532
Vinsert
p18533
I43
VSimpleType: SQLPropertyExpr
p18534
tp18535
I2
s(g577
I42
g578
Vinsert
p18536
I42
VSimpleName: SQLUtils
p18537
tp18538
I3
s(g3737
I42
g3738
Vinsert
p18539
I45
VStringLiteral: "?"
p18540
tp18541
I2
s(g957
I42
g958
Vinsert
p18542
I8
VBlock
p18543
tp18544
I1
s(g9924
I42
g9925
Vinsert
p18545
I60
VVariableDeclarationStatement
p18546
tp18547
I4
s(g4770
I42
g4771
Vinsert
p18548
I8
VBlock
p18549
tp18550
I5
s(Vinsert
p18551
I42
VSimpleName: size
p18552
Vinsert
p18553
I42
VSimpleName: tableNames
p18554
tp18555
I1
s(g507
I42
g508
Vinsert
p18556
I42
VSimpleName: stmt
p18557
tp18558
I3
s(g11360
I42
g11361
Vinsert
p18559
I42
VSimpleName: SQLServerInsertStatement
p18560
tp18561
I2
s(g18300
I42
g18301
Vinsert
p18562
I59
VVariableDeclarationFragment
p18563
tp18564
I1
s(g5864
I42
g5865
Vinsert
p18565
I42
VSimpleName: accept
p18566
tp18567
I1
s(Vinsert
p18568
I42
VSimpleName: values
p18569
Vinsert
p18570
I42
VSimpleName: TabularData
p18571
tp18572
I1
s(Vinsert
p18573
I42
VSimpleName: incrementInsertCount
p18574
Vinsert
p18575
I42
VSimpleName: setCurrentTable
p18576
tp18577
I1
s(g582
I42
g583
Vinsert
p18578
I42
VSimpleName: toOracleString
p18579
tp18580
I2
s(Vinsert
p18581
I42
VSimpleName: toString
p18582
Vinsert
p18583
I42
VSimpleName: getNameAsString
p18584
tp18585
I1
s(g3836
I42
g3837
Vinsert
p18586
I33
VNullLiteral
p18587
tp18588
I1
s(g1815
I42
g1816
Vinsert
p18589
I44
VSingleVariableDeclaration
p18590
tp18591
I17
s(g8514
I42
g8515
Vinsert
p18592
I42
VSimpleName: SQLCommentHint
p18593
tp18594
I2
s(g4931
I42
g4932
Vinsert
p18595
I83
VModifier: public
p18596
tp18597
I3
s(g1549
I42
g1550
Vinsert
p18598
I45
VStringLiteral: "\u005cnWHERE date_prod >= '2002-01-01'"
p18599
tp18600
I1
s(Vinsert
p18601
I42
VSimpleName: setName
p18602
Vinsert
p18603
I40
VQualifiedName: Token.LITERAL_ALIAS
p18604
tp18605
I1
s(Vinsert
p18606
I42
VSimpleName: equalsIgnoreCase
p18607
Vinsert
p18608
I42
VSimpleName: SQLAssignItem
p18609
tp18610
I1
s(Vinsert
p18611
I42
VSimpleName: setProperty
p18612
Vinsert
p18613
I42
VSimpleName: DruidDataSourceFactory
p18614
tp18615
I1
s(g10631
I42
g10632
Vinsert
p18616
I42
VSimpleName: nextToken
p18617
tp18618
I1
s(Vinsert
p18619
I42
VSimpleName: clone
p18620
Vinsert
p18621
I42
VSimpleName: stmt2
p18622
tp18623
I2
s(g1425
I42
g1426
Vinsert
p18624
I32
VMethodInvocation
p18625
tp18626
I1
s(Vinsert
p18627
I42
VSimpleName: assertEquals
p18628
Vinsert
p18629
I45
VStringLiteral: "alter table sale_detail partition (sale_date='201312', region='hangzhou')"
p18630
tp18631
I1
s(Vinsert
p18632
I42
VSimpleName: checkParameterize
p18633
Vinsert
p18634
I42
VSimpleName: MySqlCharExpr
p18635
tp18636
I1
s(g1289
I42
g1290
Vinsert
p18637
I43
VSimpleType: Object
p18638
tp18639
I2
s(g4684
I42
g4685
Vinsert
p18640
I43
VSimpleType: SQLExpr
p18641
tp18642
I1
s(Vinsert
p18643
I42
VSimpleName: getColumns
p18644
Vinsert
p18645
I27
VInfixExpression: >
p18646
tp18647
I2
s(Vinsert
p18648
I42
VSimpleName: classForName
p18649
Vinsert
p18650
I66
VTextElement: this method you should call it before calling any other iBATIS method.
p18651
tp18652
I1
s(g9267
I42
g9268
Vinsert
p18653
I34
VNumberLiteral: 0
p18654
tp18655
I1
s(g2304
I42
g2305
Vinsert
p18656
I21
VExpressionStatement
p18657
tp18658
I5
s(Vinsert
p18659
I42
VSimpleName: record
p18660
Vinsert
p18661
I34
VNumberLiteral: 102
p18662
tp18663
I1
s(g15153
I42
g15154
Vinsert
p18664
I42
VSimpleName: Exception
p18665
tp18666
I1
s(Vinsert
p18667
I42
VSimpleName: setName
p18668
Vinsert
p18669
I42
VSimpleName: MySqlShowCreateProcedureStatement
p18670
tp18671
I2
s(Vinsert
p18672
I42
VSimpleName: getStatementProxy
p18673
Vinsert
p18674
I25
VIfStatement
p18675
tp18676
I2
s(g3954
I42
g3955
Vinsert
p18677
I42
VSimpleName: assertTrue
p18678
tp18679
I1
s(Vinsert
p18680
I42
VSimpleName: getFamily
p18681
Vinsert
p18682
I5
VArrayType: byte[]
p18683
tp18684
I2
s(g1329
I42
g1330
Vinsert
p18685
I42
VSimpleName: OracleFormatTest
p18686
tp18687
I1
s(g8233
I42
g8234
Vinsert
p18688
I42
VSimpleName: SQLUnique
p18689
tp18690
I1
s(Vinsert
p18691
I42
VSimpleName: reset
p18692
Vinsert
p18693
I45
VStringLiteral: "PUBLIC"
p18694
tp18695
I1
s(g13764
I42
g13765
Vinsert
p18696
I42
VSimpleName: property
p18697
tp18698
I1
s(g10792
I42
g10793
Vinsert
p18699
I42
VSimpleName: date
p18700
tp18701
I1
s(g1070
I42
g1071
Vinsert
p18702
I42
VSimpleName: TestCase
p18703
tp18704
I26
s(g3169
I42
g3170
Vinsert
p18705
I40
VQualifiedName: LayoutCharacters.EOI
p18706
tp18707
I1
s(g10882
I42
g10883
Vinsert
p18708
I42
VSimpleName: stmt
p18709
tp18710
I12
s(g16826
I42
g16827
Vinsert
p18711
I70
VEnhancedForStatement
p18712
tp18713
I1
s(g2489
I42
g2490
Vinsert
p18714
I1
VAnonymousClassDeclaration
p18715
tp18716
I1
s(g17240
I42
g17241
Vinsert
p18717
I60
VVariableDeclarationStatement
p18718
tp18719
I1
s(g10493
I42
g10494
Vinsert
p18720
I42
VSimpleName: OracleConnection
p18721
tp18722
I1
s(Vinsert
p18723
I42
VSimpleName: parseStatementList
p18724
Vinsert
p18725
I7
VAssignment: =
p18726
tp18727
I5
s(g17526
I42
g17527
Vinsert
p18728
I33
VNullLiteral
p18729
tp18730
I2
s(g16831
I42
g16832
Vinsert
p18731
I42
VSimpleName: lexer
p18732
tp18733
I1
s(g429
I42
g430
Vinsert
p18734
I27
VInfixExpression: !=
p18735
tp18736
I1
s(g4409
I42
g4410
Vinsert
p18737
I43
VSimpleType: SQLExpr
p18738
tp18739
I4
s(g17816
I42
g17817
Vinsert
p18740
I42
VSimpleName: parseStatementList
p18741
tp18742
I6
s(g3880
I42
g3881
Vinsert
p18743
I42
VSimpleName: MethodInfo
p18744
tp18745
I1
s(g8038
I42
g8039
Vinsert
p18746
I41
VReturnStatement
p18747
tp18748
I1
s(Vinsert
p18749
I42
VSimpleName: setConstraintName
p18750
Vinsert
p18751
I14
VClassInstanceCreation
p18752
tp18753
I5
s(g4308
I42
g4309
Vinsert
p18754
I42
VSimpleName: i
p18755
tp18756
I3
s(g12961
I42
g12962
Vinsert
p18757
I42
VSimpleName: getTableName
p18758
tp18759
I1
s(g987
I42
g988
Vinsert
p18760
I31
VMethodDeclaration
p18761
tp18762
I1
s(Vinsert
p18763
I42
VSimpleName: get
p18764
Vinsert
p18765
I42
VSimpleName: v1
p18766
tp18767
I2
s(Vinsert
p18768
I42
VSimpleName: setTableSource
p18769
Vinsert
p18770
I83
VModifier: public
p18771
tp18772
I3
s(Vinsert
p18773
I42
VSimpleName: getWhere
p18774
Vinsert
p18775
I27
VInfixExpression: ==
p18776
tp18777
I5
s(g14881
I42
g14882
Vinsert
p18778
I22
VFieldAccess
p18779
tp18780
I1
s(g763
I42
g764
Vinsert
p18781
I45
VStringLiteral: "REF"
p18782
tp18783
I1
s(g6084
I42
g6085
Vinsert
p18784
I59
VVariableDeclarationFragment
p18785
tp18786
I2
s(g9332
I42
g9333
Vinsert
p18787
I39
VPrimitiveType: int
p18788
tp18789
I2
s(g4630
I42
g4631
Vinsert
p18790
I42
VSimpleName: addViolation
p18791
tp18792
I1
s(g7660
I42
g7661
Vinsert
p18793
I45
VStringLiteral: "INSERT INTO t"
p18794
tp18795
I2
s(Vinsert
p18796
I42
VSimpleName: addArgument
p18797
Vinsert
p18798
I32
VMethodInvocation
p18799
tp18800
I1
s(Vinsert
p18801
I42
VSimpleName: getStatementLoggerName
p18802
Vinsert
p18803
I32
VMethodInvocation
p18804
tp18805
I4
s(g8113
I42
g8114
Vinsert
p18806
I42
VSimpleName: WallContext
p18807
tp18808
I4
s(g15048
I42
g15049
Vinsert
p18809
I14
VClassInstanceCreation
p18810
tp18811
I2
s(g14234
I42
g14235
Vinsert
p18812
I39
VPrimitiveType: long
p18813
tp18814
I1
s(Vinsert
p18815
I42
VSimpleName: getName
p18816
Vinsert
p18817
I36
VParenthesizedExpression
p18818
tp18819
I18
s(Vinsert
p18820
I42
VSimpleName: setKey
p18821
Vinsert
p18822
I42
VSimpleName: DesDecrypter
p18823
tp18824
I2
s(g2193
I42
g2194
Vinsert
p18825
I54
VTryStatement
p18826
tp18827
I3
s(g1110
I42
g1111
Vinsert
p18828
I45
VStringLiteral: "\u005ctAND osg.quantity > 0\u005cn"
p18829
tp18830
I1
s(Vinsert
p18831
I42
VSimpleName: println
p18832
Vinsert
p18833
I78
VMarkerAnnotation
p18834
tp18835
I1
s(Vinsert
p18836
I42
VSimpleName: isSessionStatEnable
p18837
Vinsert
p18838
I21
VExpressionStatement
p18839
tp18840
I2
s(Vinsert
p18841
I42
VSimpleName: setCondition
p18842
Vinsert
p18843
I42
VSimpleName: nextToken
p18844
tp18845
I1
s(g1002
I42
g1003
Vinsert
p18846
I52
VThisExpression
p18847
tp18848
I1
s(g13886
I42
g13887
Vinsert
p18849
I43
VSimpleType: BasicDataSource
p18850
tp18851
I8
s(Vinsert
p18852
I42
VSimpleName: warn
p18853
Vinsert
p18854
I62
VInstanceofExpression
p18855
tp18856
I1
s(g3826
I42
g3827
Vinsert
p18857
I32
VMethodInvocation
p18858
tp18859
I5
s(g6557
I42
g6558
Vinsert
p18860
I36
VParenthesizedExpression
p18861
tp18862
I1
s(Vinsert
p18863
I42
VSimpleName: getColumns
p18864
Vinsert
p18865
I45
VStringLiteral: ",   user.name as creator"
p18866
tp18867
I1
s(g1047
I42
g1048
Vinsert
p18868
I42
VSimpleName: SLF4JImpl
p18869
tp18870
I1
s(Vinsert
p18871
I42
VSimpleName: parseOrderBy
p18872
Vinsert
p18873
I21
VExpressionStatement
p18874
tp18875
I3
s(g4065
I42
g4066
Vinsert
p18876
I42
VSimpleName: holder
p18877
tp18878
I2
s(g14896
I42
g14897
Vinsert
p18879
I8
VBlock
p18880
tp18881
I1
s(g12475
I42
g12476
Vinsert
p18882
I42
VSimpleName: setLastActiveTimeMillis
p18883
tp18884
I1
s(g3893
I42
g3894
Vinsert
p18885
I25
VIfStatement
p18886
tp18887
I1
s(g10422
I42
g10423
Vinsert
p18888
I42
VSimpleName: assertNotNull
p18889
tp18890
I2
s(Vinsert
p18891
I42
VSimpleName: nextToken
p18892
Vinsert
p18893
I40
VQualifiedName: Lexer.CommentHandler
p18894
tp18895
I1
s(g14886
I42
g14887
Vinsert
p18896
I45
VStringLiteral: "\u005ctWHEN OTHERS THEN\u005cn"
p18897
tp18898
I1
s(Vinsert
p18899
I42
VSimpleName: getAttribute
p18900
Vinsert
p18901
I42
VSimpleName: updateCount
p18902
tp18903
I2
s(g9977
I42
g9978
Vinsert
p18904
I42
VSimpleName: tearDown
p18905
tp18906
I12
s(Vinsert
p18907
I42
VSimpleName: assertTrue
p18908
Vinsert
p18909
I45
VStringLiteral: "        DROP COLUMN diff_value_3,\u005cn"
p18910
tp18911
I1
s(g5161
I42
g5162
Vinsert
p18912
I45
VStringLiteral: "\u005cn\u005ct, roles, register_date"
p18913
tp18914
I1
s(g6976
I42
g6977
Vinsert
p18915
I42
VSimpleName: EvalMethodTrimTest
p18916
tp18917
I1
s(g9854
I42
g9855
Vinsert
p18918
I21
VExpressionStatement
p18919
tp18920
I3
s(g5128
I42
g5129
Vinsert
p18921
I45
VStringLiteral: "| c_text       | text         | NO   |     | NULL    |       |\u005cn"
p18922
tp18923
I1
s(g2619
I42
g2620
Vinsert
p18924
I40
VQualifiedName: Token.XOR
p18925
tp18926
I2
s(g1352
I42
g1353
Vinsert
p18927
I42
VSimpleName: concurrentMax
p18928
tp18929
I3
s(Vinsert
p18930
I42
VSimpleName: getModel
p18931
Vinsert
p18932
I38
VPrefixExpression: ++
p18933
tp18934
I1
s(g6822
I42
g6823
Vinsert
p18935
I45
VStringLiteral: "javax.sql.DataSource"
p18936
tp18937
I1
s(Vinsert
p18938
I42
VSimpleName: getSelect
p18939
Vinsert
p18940
I42
VSimpleName: SQLSelect
p18941
tp18942
I10
s(g9380
I42
g9381
Vinsert
p18943
I74
VParameterizedType: List<Filter>
p18944
tp18945
I1
s(g6333
I42
g6334
Vinsert
p18946
I16
VConditionalExpression
p18947
tp18948
I2
s(Vinsert
p18949
I42
VSimpleName: getClass
p18950
Vinsert
p18951
I43
VSimpleType: Object
p18952
tp18953
I6
s(g9456
I42
g9457
Vinsert
p18954
I60
VVariableDeclarationStatement
p18955
tp18956
I1
s(g6567
I42
g6568
Vinsert
p18957
I42
VSimpleName: blackSql_1
p18958
tp18959
I1
s(g7512
I42
g7513
Vinsert
p18960
I42
VSimpleName: assertNotNull
p18961
tp18962
I1
s(Vinsert
p18963
I42
VSimpleName: visit
p18964
Vinsert
p18965
I43
VSimpleType: HiveASTVisitor
p18966
tp18967
I1
s(g7461
I42
g7462
Vinsert
p18968
I40
VQualifiedName: JdbcConstants.HIVE
p18969
tp18970
I2
s(g4510
I42
g4511
Vinsert
p18971
I42
VSimpleName: assertEquals
p18972
tp18973
I3
s(g6079
I42
g6080
Vinsert
p18974
I45
VStringLiteral: "\u005cn\u005ct\u005ctSTART WITH tbek_code = ?"
p18975
tp18976
I1
s(g3857
I42
g3858
Vinsert
p18977
I43
VSimpleType: Object
p18978
tp18979
I2
s(g9163
I42
g9164
Vinsert
p18980
I42
VSimpleName: isSupported
p18981
tp18982
I1
s(g16888
I42
g16889
Vinsert
p18983
I42
VSimpleName: isEnabled
p18984
tp18985
I1
s(g17507
I42
g17508
Vinsert
p18986
I32
VMethodInvocation
p18987
tp18988
I3
s(g4699
I42
g4700
Vinsert
p18989
I42
VSimpleName: visitor
p18990
tp18991
I64
s(g13017
I42
g13018
Vinsert
p18992
I43
VSimpleType: MySqlStatementParser
p18993
tp18994
I15
s(g13789
I42
g13790
Vinsert
p18995
I32
VMethodInvocation
p18996
tp18997
I3
s(g3579
I42
g3580
Vinsert
p18998
I9
VBooleanLiteral: true
p18999
tp19000
I1
s(g10021
I42
g10022
Vinsert
p19001
I32
VMethodInvocation
p19002
tp19003
I1
s(g13617
I42
g13618
Vinsert
p19004
I60
VVariableDeclarationStatement
p19005
tp19006
I1
s(g2905
I42
g2906
Vinsert
p19007
I42
VSimpleName: stmt
p19008
tp19009
I2
s(Vinsert
p19010
I42
VSimpleName: put
p19011
Vinsert
p19012
I42
VSimpleName: isTestWhileIdle
p19013
tp19014
I1
s(g4801
I42
g4802
Vinsert
p19015
I14
VClassInstanceCreation
p19016
tp19017
I6
s(Vinsert
p19018
I42
VSimpleName: getClass
p19019
Vinsert
p19020
I42
VSimpleName: getChildren
p19021
tp19022
I2
s(g3073
I42
g3074
Vinsert
p19023
I42
VSimpleName: isKeepComments
p19024
tp19025
I6
s(g7908
I42
g7909
Vinsert
p19026
I42
VSimpleName: chain
p19027
tp19028
I1
s(g12505
I42
g12506
Vinsert
p19029
I41
VReturnStatement
p19030
tp19031
I3
s(g10765
I42
g10766
Vinsert
p19032
I42
VSimpleName: nextToken
p19033
tp19034
I1
s(Vinsert
p19035
I42
VSimpleName: getAttribute
p19036
Vinsert
p19037
I43
VSimpleType: WallUpdateCheckItem
p19038
tp19039
I2
s(g4859
I42
g4860
Vinsert
p19040
I42
VSimpleName: entry
p19041
tp19042
I2
s(Vinsert
p19043
I42
VSimpleName: assertTrue
p19044
Vinsert
p19045
I42
VSimpleName: stmt
p19046
tp19047
I6
s(g7965
I42
g7966
Vinsert
p19048
I43
VSimpleType: Object
p19049
tp19050
I1
s(g4318
I42
g4319
Vinsert
p19051
I42
VSimpleName: print
p19052
tp19053
I6
s(g11015
I42
g11016
Vinsert
p19054
I11
VCastExpression
p19055
tp19056
I2
s(g11973
I42
g11974
Vinsert
p19057
I45
VStringLiteral: " WHERE (`Extent1`.`State` > -1)"
p19058
tp19059
I1
s(Vinsert
p19060
I42
VSimpleName: assertEquals
p19061
Vinsert
p19062
I42
VSimpleName: EvalMethodRightTest
p19063
tp19064
I1
s(g2870
I42
g2871
Vinsert
p19065
I42
VSimpleName: accept
p19066
tp19067
I3
s(g7427
I42
g7428
Vinsert
p19068
I27
VInfixExpression: !=
p19069
tp19070
I1
s(g12911
I42
g12912
Vinsert
p19071
I21
VExpressionStatement
p19072
tp19073
I1
s(g2294
I42
g2295
Vinsert
p19074
I40
VQualifiedName: SQLOver.WindowingType.RANGE
p19075
tp19076
I1
s(Vinsert
p19077
I42
VSimpleName: getDataSource
p19078
Vinsert
p19079
I33
VNullLiteral
p19080
tp19081
I4
s(g15475
I42
g15476
Vinsert
p19082
I40
VQualifiedName: Token.CHECK
p19083
tp19084
I1
s(g4558
I42
g4559
Vinsert
p19085
I42
VSimpleName: orderByKey
p19086
tp19087
I1
s(g1294
I42
g1295
Vinsert
p19088
I42
VSimpleName: getProxyDataSources
p19089
tp19090
I2
s(g10066
I42
g10067
Vinsert
p19091
I25
VIfStatement
p19092
tp19093
I8
s(g4298
I42
g4299
Vinsert
p19094
I32
VMethodInvocation
p19095
tp19096
I3
s(g821
I42
g822
Vinsert
p19097
I42
VSimpleName: MySqlTableIndex
p19098
tp19099
I2
s(g14876
I42
g14877
Vinsert
p19100
I42
VSimpleName: SQLSelectOrderByItem
p19101
tp19102
I1
s(g2268
I42
g2269
Vinsert
p19103
I42
VSimpleName: rs
p19104
tp19105
I8
s(g13823
I42
g13824
Vinsert
p19106
I60
VVariableDeclarationStatement
p19107
tp19108
I271
s(g13881
I42
g13882
Vinsert
p19109
I60
VVariableDeclarationStatement
p19110
tp19111
I1
s(g11182
I42
g11183
Vinsert
p19112
I57
VTypeLiteral
p19113
tp19114
I1
s(Vinsert
p19115
I42
VSimpleName: conditionContainsTable
p19116
Vinsert
p19117
I62
VInstanceofExpression
p19118
tp19119
I1
s(Vinsert
p19120
I42
VSimpleName: append
p19121
Vinsert
p19122
I42
VSimpleName: pid
p19123
tp19124
I2
s(g5470
I42
g5471
Vinsert
p19125
I42
VSimpleName: stringVal
p19126
tp19127
I1
s(Vinsert
p19128
I42
VSimpleName: getConnection
p19129
Vinsert
p19130
I42
VSimpleName: wallFilter
p19131
tp19132
I1
s(g5475
I42
g5476
Vinsert
p19133
I59
VVariableDeclarationFragment
p19134
tp19135
I1
s(g10747
I42
g10748
Vinsert
p19136
I74
VParameterizedType: List<String>
p19137
tp19138
I1
s(Vinsert
p19139
I42
VSimpleName: setExecuteErrorCount
p19140
Vinsert
p19141
I39
VPrimitiveType: long
p19142
tp19143
I1
s(Vinsert
p19144
I42
VSimpleName: getFirstQueryBlock
p19145
Vinsert
p19146
I43
VSimpleType: SQLUnionQuery
p19147
tp19148
I6
s(g15986
I42
g15987
Vinsert
p19149
I42
VSimpleName: from
p19150
tp19151
I3
s(Vinsert
p19152
I42
VSimpleName: getMemoryMXBean
p19153
Vinsert
p19154
I42
VSimpleName: items
p19155
tp19156
I6
s(g3417
I42
g3418
Vinsert
p19157
I39
VPrimitiveType: int
p19158
tp19159
I3
s(g4303
I42
g4304
Vinsert
p19160
I45
VStringLiteral: "END"
p19161
tp19162
I1
s(Vinsert
p19163
I42
VSimpleName: setDriver
p19164
Vinsert
p19165
I31
VMethodDeclaration
p19166
tp19167
I1
s(g11696
I42
g11697
Vinsert
p19168
I45
VStringLiteral: "FOR UPDATE(rbi.rma_id)"
p19169
tp19170
I1
s(g1420
I42
g1421
Vinsert
p19171
I59
VVariableDeclarationFragment
p19172
tp19173
I39
s(Vinsert
p19174
I42
VSimpleName: assertEquals
p19175
Vinsert
p19176
I27
VInfixExpression: >
p19177
tp19178
I1
s(Vinsert
p19179
I42
VSimpleName: fnv1a_64_lower
p19180
Vinsert
p19181
I85
VDimension
p19182
tp19183
I2
s(g13593
I42
g13594
Vinsert
p19184
I42
VSimpleName: setLogAbandoned
p19185
tp19186
I1
s(g5343
I42
g5344
Vinsert
p19187
I74
VParameterizedType: Enumeration<ColumnGroup>
p19188
tp19189
I1
s(Vinsert
p19190
I42
VSimpleName: assertTrue
p19191
Vinsert
p19192
I57
VTypeLiteral
p19193
tp19194
I8
s(g680
I42
g681
Vinsert
p19195
I42
VSimpleName: methodStats
p19196
tp19197
I2
s(g15263
I42
g15264
Vinsert
p19198
I44
VSingleVariableDeclaration
p19199
tp19200
I1
s(g7450
I42
g7451
Vinsert
p19201
I42
VSimpleName: getColumnModel
p19202
tp19203
I1
s(g11537
I42
g11538
Vinsert
p19204
I60
VVariableDeclarationStatement
p19205
tp19206
I2
s(Vinsert
p19207
I42
VSimpleName: token
p19208
Vinsert
p19209
I42
VSimpleName: OracleReturningClause
p19210
tp19211
I2
s(Vinsert
p19212
I42
VSimpleName: assertEquals
p19213
Vinsert
p19214
I42
VSimpleName: getFilterClassNames
p19215
tp19216
I2
s(g4452
I42
g4453
Vinsert
p19217
I41
VReturnStatement
p19218
tp19219
I1
s(g8103
I42
g8104
Vinsert
p19220
I42
VSimpleName: eldest
p19221
tp19222
I1
s(Vinsert
p19223
I42
VSimpleName: get
p19224
Vinsert
p19225
I42
VSimpleName: getParent
p19226
tp19227
I1
s(g7370
I42
g7371
Vinsert
p19228
I42
VSimpleName: alias_lcase
p19229
tp19230
I1
s(g7427
I42
g7428
Vinsert
p19231
I42
VSimpleName: Clob
p19232
tp19233
I1
s(Vinsert
p19234
I42
VSimpleName: visit
p19235
Vinsert
p19236
I42
VSimpleName: PGTruncateStatement
p19237
tp19238
I1
s(g5661
I42
g5662
Vinsert
p19239
I52
VThisExpression
p19240
tp19241
I1
s(Vinsert
p19242
I42
VSimpleName: equals
p19243
Vinsert
p19244
I42
VSimpleName: Arrays
p19245
tp19246
I1
s(g3139
I42
g3140
Vinsert
p19247
I42
VSimpleName: V
p19248
tp19249
I1
s(g6455
I42
g6456
Vinsert
p19250
I21
VExpressionStatement
p19251
tp19252
I1
s(Vinsert
p19253
I42
VSimpleName: endVisit
p19254
Vinsert
p19255
I42
VSimpleName: values
p19256
tp19257
I2
s(Vinsert
p19258
I42
VSimpleName: assertEquals
p19259
Vinsert
p19260
I42
VSimpleName: getQuery
p19261
tp19262
I1
s(g1820
I42
g1821
Vinsert
p19263
I45
VStringLiteral: "DROP USER "
p19264
tp19265
I1
s(g12721
I42
g12722
Vinsert
p19266
I21
VExpressionStatement
p19267
tp19268
I44
s(g6529
I42
g6530
Vinsert
p19269
I42
VSimpleName: getSqlStatById
p19270
tp19271
I1
s(g13659
I42
g13660
Vinsert
p19272
I31
VMethodDeclaration
p19273
tp19274
I9
s(g1012
I42
g1013
Vinsert
p19275
I42
VSimpleName: getName
p19276
tp19277
I2
s(Vinsert
p19278
I42
VSimpleName: setSequence
p19279
Vinsert
p19280
I25
VIfStatement
p19281
tp19282
I1
s(Vinsert
p19283
I42
VSimpleName: setMaxFieldSize
p19284
Vinsert
p19285
I54
VTryStatement
p19286
tp19287
I1
s(Vinsert
p19288
I42
VSimpleName: evalExpr
p19289
Vinsert
p19290
I42
VSimpleName: test_error_1
p19291
tp19292
I9
s(g13911
I42
g13912
Vinsert
p19293
I32
VMethodInvocation
p19294
tp19295
I2
s(g4602
I42
g4603
Vinsert
p19296
I42
VSimpleName: stmt
p19297
tp19298
I1
s(g5333
I42
g5334
Vinsert
p19299
I42
VSimpleName: JdbcUtils
p19300
tp19301
I3
s(Vinsert
p19302
I42
VSimpleName: toSQLString
p19303
Vinsert
p19304
I45
VStringLiteral: "\u005ct\u005ctPCTUSED 40\u005cn"
p19305
tp19306
I2
s(Vinsert
p19307
I42
VSimpleName: isRestrictWhenDeleteTriggers
p19308
Vinsert
p19309
I42
VSimpleName: x
p19310
tp19311
I2
s(g6612
I42
g6613
Vinsert
p19312
I43
VSimpleType: RSAPrivateKeySpec
p19313
tp19314
I2
s(Vinsert
p19315
I42
VSimpleName: getStatements
p19316
Vinsert
p19317
I43
VSimpleType: SQLStatement
p19318
tp19319
I2
s(g13873
I42
g13874
Vinsert
p19320
I8
VBlock
p19321
tp19322
I3
s(Vinsert
p19323
I42
VSimpleName: getConnection
p19324
Vinsert
p19325
I42
VSimpleName: nodeInfo
p19326
tp19327
I4
s(g18404
I42
g18405
Vinsert
p19328
I45
VStringLiteral: "\u005ct\u005ctdenominator := denominator / gcd;\u005cn"
p19329
tp19330
I1
s(g2140
I42
g2141
Vinsert
p19331
I42
VSimpleName: select
p19332
tp19333
I3
s(Vinsert
p19334
I42
VSimpleName: acceptChild
p19335
Vinsert
p19336
I42
VSimpleName: like
p19337
tp19338
I3
s(Vinsert
p19339
I42
VSimpleName: startsWith
p19340
Vinsert
p19341
I42
VSimpleName: ALI_ORACLE_DRIVER
p19342
tp19343
I1
s(Vinsert
p19344
I42
VSimpleName: accept
p19345
Vinsert
p19346
I42
VSimpleName: NotNullConstraint
p19347
tp19348
I1
s(g1835
I42
g1836
Vinsert
p19349
I21
VExpressionStatement
p19350
tp19351
I1
s(g1745
I42
g1746
Vinsert
p19352
I42
VSimpleName: EVAL_VALUE
p19353
tp19354
I1
s(Vinsert
p19355
I42
VSimpleName: visit
p19356
Vinsert
p19357
I42
VSimpleName: SQLQueryExpr
p19358
tp19359
I4
s(g7720
I42
g7721
Vinsert
p19360
I41
VReturnStatement
p19361
tp19362
I3
s(g4625
I42
g4626
Vinsert
p19363
I42
VSimpleName: explain
p19364
tp19365
I1
s(g937
I42
g938
Vinsert
p19366
I60
VVariableDeclarationStatement
p19367
tp19368
I1
s(Vinsert
p19369
I42
VSimpleName: getLocalPartitions
p19370
Vinsert
p19371
I45
VStringLiteral: " SORT"
p19372
tp19373
I1
s(g15991
I42
g15992
Vinsert
p19374
I42
VSimpleName: SQLParameter
p19375
tp19376
I2
s(g4625
I42
g4626
Vinsert
p19377
I42
VSimpleName: extended
p19378
tp19379
I1
s(g15397
I42
g15398
Vinsert
p19380
I42
VSimpleName: ex
p19381
tp19382
I1
s(Vinsert
p19383
I42
VSimpleName: close
p19384
Vinsert
p19385
I2
VArrayAccess
p19386
tp19387
I3
s(g9129
I42
g9130
Vinsert
p19388
I45
VStringLiteral: "not support token:"
p19389
tp19390
I2
s(Vinsert
p19391
I42
VSimpleName: get
p19392
Vinsert
p19393
I42
VSimpleName: violations
p19394
tp19395
I1
s(Vinsert
p19396
I42
VSimpleName: assertEquals
p19397
Vinsert
p19398
I45
VStringLiteral: "\u005cnHAVING COUNT(resource_value) >= ?"
p19399
tp19400
I1
s(g13032
I42
g13033
Vinsert
p19401
I33
VNullLiteral
p19402
tp19403
I1
s(Vinsert
p19404
I42
VSimpleName: print
p19405
Vinsert
p19406
I42
VSimpleName: value
p19407
tp19408
I1
s(g10438
I42
g10439
Vinsert
p19409
I60
VVariableDeclarationStatement
p19410
tp19411
I1
s(Vinsert
p19412
I42
VSimpleName: assertEquals
p19413
Vinsert
p19414
I45
VStringLiteral: "select * from table1;--comment1 goes here"
p19415
tp19416
I1
s(g10116
I42
g10117
Vinsert
p19417
I43
VSimpleType: LocalXAConnectionFactory
p19418
tp19419
I1
s(g10550
I42
g10551
Vinsert
p19420
I42
VSimpleName: SensitiveParameters
p19421
tp19422
I3
s(g4589
I42
g4590
Vinsert
p19423
I37
VPostfixExpression: ++
p19424
tp19425
I1
s(g4424
I42
g4425
Vinsert
p19426
I39
VPrimitiveType: void
p19427
tp19428
I1
s(g4926
I42
g4927
Vinsert
p19429
I43
VSimpleType: ConnectionEventListener
p19430
tp19431
I1
s(g1360
I42
g1361
Vinsert
p19432
I8
VBlock
p19433
tp19434
I15
s(Vinsert
p19435
I42
VSimpleName: setParent
p19436
Vinsert
p19437
I42
VSimpleName: y
p19438
tp19439
I4
s(g17182
I42
g17183
Vinsert
p19440
I43
VSimpleType: OdpsStatisticClause.ExpressionCondition
p19441
tp19442
I1
s(Vinsert
p19443
I42
VSimpleName: getConnection
p19444
Vinsert
p19445
I45
VStringLiteral: "log4j"
p19446
tp19447
I3
s(g5305
I42
g5306
Vinsert
p19448
I27
VInfixExpression: &&
p19449
tp19450
I3
s(Vinsert
p19451
I42
VSimpleName: equals
p19452
Vinsert
p19453
I42
VSimpleName: SESSION_USER_KEY
p19454
tp19455
I2
s(Vinsert
p19456
I42
VSimpleName: equals
p19457
Vinsert
p19458
I40
VQualifiedName: com.alibaba.druid.sql.dialect.hive.parser.HiveStatementParser
p19459
tp19460
I1
s(Vinsert
p19461
I42
VSimpleName: getTableSource
p19462
Vinsert
p19463
I21
VExpressionStatement
p19464
tp19465
I3
s(g10174
I42
g10175
Vinsert
p19466
I22
VFieldAccess
p19467
tp19468
I1
s(g7751
I42
g7752
Vinsert
p19469
I8
VBlock
p19470
tp19471
I1
s(g5297
I42
g5298
Vinsert
p19472
I43
VSimpleType: PGTypeCastExpr
p19473
tp19474
I1
s(Vinsert
p19475
I42
VSimpleName: clone
p19476
Vinsert
p19477
I42
VSimpleName: indexType
p19478
tp19479
I1
s(g17030
I42
g17031
Vinsert
p19480
I42
VSimpleName: methodName
p19481
tp19482
I1
s(g3780
I42
g3781
Vinsert
p19483
I42
VSimpleName: testDatabaseOperations
p19484
tp19485
I1
s(Vinsert
p19486
I42
VSimpleName: setDesensitize
p19487
Vinsert
p19488
I45
VStringLiteral: "  city varchar2(50)\u005cn"
p19489
tp19490
I1
s(g11072
I42
g11073
Vinsert
p19491
I59
VVariableDeclarationFragment
p19492
tp19493
I5
s(g527
I42
g528
Vinsert
p19494
I27
VInfixExpression: &&
p19495
tp19496
I1
s(g11991
I42
g11992
Vinsert
p19497
I74
VParameterizedType: ArrayList<SQLExpr>
p19498
tp19499
I1
s(g3636
I42
g3637
Vinsert
p19500
I45
VStringLiteral: "fields : "
p19501
tp19502
I37
s(g19139
I42
g19140
Vinsert
p19503
I42
VSimpleName: statValue
p19504
tp19505
I1
s(g10854
I42
g10855
Vinsert
p19506
I42
VSimpleName: op
p19507
tp19508
I1
s(g7835
I42
g7836
Vinsert
p19509
I43
VSimpleType: List
p19510
tp19511
I2
s(g8841
I42
g8842
Vinsert
p19512
I42
VSimpleName: identifierEquals
p19513
tp19514
I1
s(g4750
I42
g4751
Vinsert
p19515
I25
VIfStatement
p19516
tp19517
I4
s(g17250
I42
g17251
Vinsert
p19518
I42
VSimpleName: Token
p19519
tp19520
I2
s(g14155
I42
g14156
Vinsert
p19521
I42
VSimpleName: chain
p19522
tp19523
I1
s(g11015
I42
g11016
Vinsert
p19524
I42
VSimpleName: MySqlSelectQueryBlock
p19525
tp19526
I2
s(g13201
I42
g13202
Vinsert
p19527
I42
VSimpleName: testExpr
p19528
tp19529
I1
s(g4635
I42
g4636
Vinsert
p19530
I42
VSimpleName: SQLName
p19531
tp19532
I1
s(g7947
I42
g7948
Vinsert
p19533
I31
VMethodDeclaration
p19534
tp19535
I5
s(g8969
I42
g8970
Vinsert
p19536
I41
VReturnStatement
p19537
tp19538
I1
s(Vinsert
p19539
I42
VSimpleName: get
p19540
Vinsert
p19541
I42
VSimpleName: getQuery
p19542
tp19543
I2
s(g16935
I42
g16936
Vinsert
p19544
I42
VSimpleName: value
p19545
tp19546
I1
s(g3793
I42
g3794
Vinsert
p19547
I8
VBlock
p19548
tp19549
I1
s(g306
I42
g307
Vinsert
p19550
I42
VSimpleName: add
p19551
tp19552
I8
s(g15448
I42
g15449
Vinsert
p19553
I42
VSimpleName: BasicDataSource
p19554
tp19555
I1
s(g9683
I42
g9684
Vinsert
p19556
I60
VVariableDeclarationStatement
p19557
tp19558
I4
s(g1845
I42
g1846
Vinsert
p19559
I45
VStringLiteral: "\u005ctBEFORE INSERT\u005cn"
p19560
tp19561
I2
s(g19139
I42
g19140
Vinsert
p19562
I32
VMethodInvocation
p19563
tp19564
I1
s(Vinsert
p19565
I42
VSimpleName: console
p19566
Vinsert
p19567
I42
VSimpleName: console
p19568
tp19569
I3
s(g3880
I42
g3881
Vinsert
p19570
I33
VNullLiteral
p19571
tp19572
I1
s(Vinsert
p19573
I42
VSimpleName: shrink
p19574
Vinsert
p19575
I34
VNumberLiteral: 10
p19576
tp19577
I1
s(Vinsert
p19578
I42
VSimpleName: append
p19579
Vinsert
p19580
I42
VSimpleName: value
p19581
tp19582
I4
s(g7797
I42
g7798
Vinsert
p19583
I42
VSimpleName: NotificationTraceEventListener
p19584
tp19585
I1
s(g10697
I42
g10698
Vinsert
p19586
I42
VSimpleName: config
p19587
tp19588
I10
s(g17301
I42
g17302
Vinsert
p19589
I27
VInfixExpression: ||
p19590
tp19591
I1
s(g4495
I42
g4496
Vinsert
p19592
I10
VBreakStatement
p19593
tp19594
I1
s(Vinsert
p19595
I42
VSimpleName: isValidateSqlServer
p19596
Vinsert
p19597
I45
VStringLiteral: "SELECT name FROM master..syslogins WHERE sysadmin = \u20191\u2032 "
p19598
tp19599
I1
s(g10016
I42
g10017
Vinsert
p19600
I32
VMethodInvocation
p19601
tp19602
I53
s(g2213
I42
g2214
Vinsert
p19603
I8
VBlock
p19604
tp19605
I2
s(g4409
I42
g4410
Vinsert
p19606
I40
VQualifiedName: JdbcConstants.ORACLE
p19607
tp19608
I1
s(g17221
I42
g17222
Vinsert
p19609
I11
VCastExpression
p19610
tp19611
I1
s(g7955
I42
g7956
Vinsert
p19612
I42
VSimpleName: getExceptionSoter
p19613
tp19614
I1
s(g7417
I42
g7418
Vinsert
p19615
I59
VVariableDeclarationFragment
p19616
tp19617
I1
s(Vinsert
p19618
I42
VSimpleName: current
p19619
Vinsert
p19620
I42
VSimpleName: Override
p19621
tp19622
I1
s(g1279
I42
g1280
Vinsert
p19623
I42
VSimpleName: holder
p19624
tp19625
I2
s(Vinsert
p19626
I42
VSimpleName: toSQLString
p19627
Vinsert
p19628
I45
VStringLiteral: "WHERE department_id = 20;"
p19629
tp19630
I1
s(g2905
I42
g2906
Vinsert
p19631
I32
VMethodInvocation
p19632
tp19633
I1
s(g7965
I42
g7966
Vinsert
p19634
I43
VSimpleType: List
p19635
tp19636
I1
s(g6597
I42
g6598
Vinsert
p19637
I60
VVariableDeclarationStatement
p19638
tp19639
I1
s(Vinsert
p19640
I42
VSimpleName: setProperty
p19641
Vinsert
p19642
I45
VStringLiteral: "minIdle"
p19643
tp19644
I1
s(Vinsert
p19645
I42
VSimpleName: trim
p19646
Vinsert
p19647
I42
VSimpleName: exceptionSorter
p19648
tp19649
I3
s(g13559
I42
g13560
Vinsert
p19650
I27
VInfixExpression: &&
p19651
tp19652
I7
s(g2069
I42
g2070
Vinsert
p19653
I59
VVariableDeclarationFragment
p19654
tp19655
I1
s(Vinsert
p19656
I42
VSimpleName: getSelect
p19657
Vinsert
p19658
I42
VSimpleName: query
p19659
tp19660
I1
s(g1150
I42
g1151
Vinsert
p19661
I45
VStringLiteral: ":"
p19662
tp19663
I1
s(g2034
I42
g2035
Vinsert
p19664
I43
VSimpleType: Object
p19665
tp19666
I1
s(g2790
I42
g2791
Vinsert
p19667
I43
VSimpleType: ResultSet
p19668
tp19669
I4
s(g10503
I42
g10504
Vinsert
p19670
I42
VSimpleName: item
p19671
tp19672
I1
s(Vinsert
p19673
I42
VSimpleName: nextToken
p19674
Vinsert
p19675
I40
VQualifiedName: Token.AS
p19676
tp19677
I2
s(Vinsert
p19678
I42
VSimpleName: checkState
p19679
Vinsert
p19680
I36
VParenthesizedExpression
p19681
tp19682
I1
s(g1125
I42
g1126
Vinsert
p19683
I21
VExpressionStatement
p19684
tp19685
I1
s(Vinsert
p19686
I42
VSimpleName: getLog
p19687
Vinsert
p19688
I42
VSimpleName: Log
p19689
tp19690
I3
s(Vinsert
p19691
I42
VSimpleName: add
p19692
Vinsert
p19693
I42
VSimpleName: parseUse
p19694
tp19695
I1
s(g10438
I42
g10439
Vinsert
p19696
I40
VQualifiedName: Token.EOF
p19697
tp19698
I1
s(g11696
I42
g11697
Vinsert
p19699
I45
VStringLiteral: "SELECT rbi.rma_id, rbi.last_update_time\u005cn"
p19700
tp19701
I1
s(g6187
I42
g6188
Vinsert
p19702
I45
VStringLiteral: "\u005ct, OWNER_MEMBER_SEQ, gmt_modified\u005cn"
p19703
tp19704
I1
s(g2905
I42
g2906
Vinsert
p19705
I42
VSimpleName: error
p19706
tp19707
I1
s(Vinsert
p19708
I42
VSimpleName: executeQuery
p19709
Vinsert
p19710
I41
VReturnStatement
p19711
tp19712
I1
s(g15702
I42
g15703
Vinsert
p19713
I21
VExpressionStatement
p19714
tp19715
I6
s(g9883
I42
g9884
Vinsert
p19716
I27
VInfixExpression: !=
p19717
tp19718
I1
s(g10061
I42
g10062
Vinsert
p19719
I42
VSimpleName: equals
p19720
tp19721
I1
s(g4452
I42
g4453
Vinsert
p19722
I43
VSimpleType: Set
p19723
tp19724
I1
s(Vinsert
p19725
I42
VSimpleName: toSQLString
p19726
Vinsert
p19727
I45
VStringLiteral: "\u005cn(departments_seq.nextval, 'Entertainment', 162, 1400)"
p19728
tp19729
I1
s(g11124
I42
g11125
Vinsert
p19730
I42
VSimpleName: select
p19731
tp19732
I1
s(g14343
I42
g14344
Vinsert
p19733
I42
VSimpleName: value
p19734
tp19735
I1
s(Vinsert
p19736
I42
VSimpleName: createStruct
p19737
Vinsert
p19738
I12
VCatchClause
p19739
tp19740
I1
s(Vinsert
p19741
I42
VSimpleName: setFile
p19742
Vinsert
p19743
I42
VSimpleName: outFile
p19744
tp19745
I2
s(g15761
I42
g15762
Vinsert
p19746
I42
VSimpleName: print
p19747
tp19748
I2
s(Vinsert
p19749
I42
VSimpleName: tr
p19750
Vinsert
p19751
I14
VClassInstanceCreation
p19752
tp19753
I2
s(g18496
I42
g18497
Vinsert
p19754
I32
VMethodInvocation
p19755
tp19756
I7
s(g5648
I42
g5649
Vinsert
p19757
I8
VBlock
p19758
tp19759
I1
s(g5757
I42
g5758
Vinsert
p19760
I42
VSimpleName: hints
p19761
tp19762
I1
s(g1815
I42
g1816
Vinsert
p19763
I32
VMethodInvocation
p19764
tp19765
I59
s(Vinsert
p19766
I42
VSimpleName: token
p19767
Vinsert
p19768
I43
VSimpleType: SQLStartTransactionStatement
p19769
tp19770
I2
s(g652
I42
g653
Vinsert
p19771
I43
VSimpleType: Object
p19772
tp19773
I1
s(g4620
I42
g4621
Vinsert
p19774
I25
VIfStatement
p19775
tp19776
I1
s(Vinsert
p19777
I42
VSimpleName: getLimit
p19778
Vinsert
p19779
I21
VExpressionStatement
p19780
tp19781
I4
s(g8643
I42
g8644
Vinsert
p19782
I21
VExpressionStatement
p19783
tp19784
I1
s(g796
I42
g797
Vinsert
p19785
I42
VSimpleName: oracleConn
p19786
tp19787
I4
s(Vinsert
p19788
I42
VSimpleName: visit
p19789
Vinsert
p19790
I42
VSimpleName: tableNames
p19791
tp19792
I1
s(g11973
I42
g11974
Vinsert
p19793
I45
VStringLiteral: " `Extent1`.`Zone`, "
p19794
tp19795
I1
s(Vinsert
p19796
I42
VSimpleName: token
p19797
Vinsert
p19798
I40
VQualifiedName: SQLBinaryOperator.BooleanOr
p19799
tp19800
I1
s(g1
I42
g2
Vinsert
p19801
I42
VSimpleName: getKey
p19802
tp19803
I1
s(g12090
I42
g12091
Vinsert
p19804
I60
VVariableDeclarationStatement
p19805
tp19806
I1
s(g2213
I42
g2214
Vinsert
p19807
I59
VVariableDeclarationFragment
p19808
tp19809
I1
s(Vinsert
p19810
I42
VSimpleName: methodRest
p19811
Vinsert
p19812
I14
VClassInstanceCreation
p19813
tp19814
I1
s(g11529
I42
g11530
Vinsert
p19815
I59
VVariableDeclarationFragment
p19816
tp19817
I1
s(Vinsert
p19818
I42
VSimpleName: get
p19819
Vinsert
p19820
I42
VSimpleName: selectList
p19821
tp19822
I1
s(Vinsert
p19823
I42
VSimpleName: setRemoveAbandonedTimeout
p19824
Vinsert
p19825
I42
VSimpleName: dataSource
p19826
tp19827
I3
s(g13061
I42
g13062
Vinsert
p19828
I43
VSimpleType: String
p19829
tp19830
I3
s(Vinsert
p19831
I42
VSimpleName: size
p19832
Vinsert
p19833
I42
VSimpleName: mergedListParams
p19834
tp19835
I1
s(Vinsert
p19836
I42
VSimpleName: createStatement
p19837
Vinsert
p19838
I42
VSimpleName: Exception
p19839
tp19840
I4
s(Vinsert
p19841
I42
VSimpleName: init
p19842
Vinsert
p19843
I45
VStringLiteral: "druid.timeBetweenLogStatsMillis"
p19844
tp19845
I1
s(g8564
I42
g8565
Vinsert
p19846
I43
VSimpleType: SQLPropertyExpr
p19847
tp19848
I8
s(Vinsert
p19849
I42
VSimpleName: setIndexName
p19850
Vinsert
p19851
I42
VSimpleName: accept
p19852
tp19853
I1
s(g7807
I42
g7808
Vinsert
p19854
I32
VMethodInvocation
p19855
tp19856
I21
s(g9727
I42
g9728
Vinsert
p19857
I60
VVariableDeclarationStatement
p19858
tp19859
I2
s(g14155
I42
g14156
Vinsert
p19860
I42
VSimpleName: String
p19861
tp19862
I1
s(g11020
I42
g11021
Vinsert
p19863
I42
VSimpleName: getParameters
p19864
tp19865
I1
s(g2339
I42
g2340
Vinsert
p19866
I21
VExpressionStatement
p19867
tp19868
I3
s(g728
I42
g729
Vinsert
p19869
I42
VSimpleName: ksql
p19870
tp19871
I1
s(g9883
I42
g9884
Vinsert
p19872
I42
VSimpleName: x
p19873
tp19874
I1
s(Vinsert
p19875
I42
VSimpleName: setWhere
p19876
Vinsert
p19877
I42
VSimpleName: expr
p19878
tp19879
I2
s(Vinsert
p19880
I42
VSimpleName: equalsIgnoreCase
p19881
Vinsert
p19882
I42
VSimpleName: sqlExpr
p19883
tp19884
I1
s(g13973
I42
g13974
Vinsert
p19885
I32
VMethodInvocation
p19886
tp19887
I5
s(Vinsert
p19888
I42
VSimpleName: getInherits
p19889
Vinsert
p19890
I27
VInfixExpression: !=
p19891
tp19892
I1
s(g7650
I42
g7651
Vinsert
p19893
I34
VNumberLiteral: 0
p19894
tp19895
I1
s(g5995
I42
g5996
Vinsert
p19896
I45
VStringLiteral: "(select count(*) from t) > 0"
p19897
tp19898
I2
s(g6343
I42
g6344
Vinsert
p19899
I42
VSimpleName: test_true
p19900
tp19901
I2
s(g4694
I42
g4695
Vinsert
p19902
I45
VStringLiteral: "\u005ctCHUNK 8192\u005cn"
p19903
tp19904
I6
s(Vinsert
p19905
I42
VSimpleName: getDruidDataSourceInstances
p19906
Vinsert
p19907
I42
VSimpleName: getDataSourceList
p19908
tp19909
I1
s(g1456
I42
g1457
Vinsert
p19910
I42
VSimpleName: DruidDataSourceStatLogger
p19911
tp19912
I2
s(g15087
I42
g15088
Vinsert
p19913
I43
VSimpleType: MBeanServer
p19914
tp19915
I1
s(Vinsert
p19916
I42
VSimpleName: parseStatements
p19917
Vinsert
p19918
I43
VSimpleType: SQLAlterTableStatement
p19919
tp19920
I1
s(g4283
I42
g4284
Vinsert
p19921
I42
VSimpleName: exprParser
p19922
tp19923
I1
s(Vinsert
p19924
I42
VSimpleName: createDeleteBuilder
p19925
Vinsert
p19926
I42
VSimpleName: builder
p19927
tp19928
I1
s(g19565
I42
g19566
Vinsert
p19929
I45
VStringLiteral: "\u005ct`c_longblob` longblob COMMENT 'longblob',\u005cn"
p19930
tp19931
I3
s(g5734
I42
g5735
Vinsert
p19932
I42
VSimpleName: conn
p19933
tp19934
I2
s(g2819
I42
g2820
Vinsert
p19935
I43
VSimpleType: MockPreparedStatementFactory
p19936
tp19937
I1
s(Vinsert
p19938
I42
VSimpleName: assertEquals
p19939
Vinsert
p19940
I42
VSimpleName: execute
p19941
tp19942
I1
s(g361
I42
g362
Vinsert
p19943
I45
VStringLiteral: ") /*!40000 ENGINE=INNODB */ /*!40101 CHARACTER SET utf8 COLLATE utf8_general_ci */ "
p19944
tp19945
I1
s(g4040
I42
g4041
Vinsert
p19946
I59
VVariableDeclarationFragment
p19947
tp19948
I2
s(g4635
I42
g4636
Vinsert
p19949
I60
VVariableDeclarationStatement
p19950
tp19951
I1
s(g12443
I42
g12444
Vinsert
p19952
I25
VIfStatement
p19953
tp19954
I3
s(g18768
I42
g18769
Vinsert
p19955
I31
VMethodDeclaration
p19956
tp19957
I3
s(g7835
I42
g7836
Vinsert
p19958
I44
VSingleVariableDeclaration
p19959
tp19960
I2
s(g13700
I42
g13701
Vinsert
p19961
I43
VSimpleType: SQLParserFeature
p19962
tp19963
I4
s(Vinsert
p19964
I42
VSimpleName: name
p19965
Vinsert
p19966
I27
VInfixExpression: ==
p19967
tp19968
I1
s(g4635
I42
g4636
Vinsert
p19969
I42
VSimpleName: apply
p19970
tp19971
I1
s(g19035
I42
g19036
Vinsert
p19972
I74
VParameterizedType: List<WallUpdateCheckItem>
p19973
tp19974
I2
s(g1670
I42
g1671
Vinsert
p19975
I42
VSimpleName: hasBeforeComment
p19976
tp19977
I1
s(g5528
I42
g5529
Vinsert
p19978
I54
VTryStatement
p19979
tp19980
I1
s(g4217
I42
g4218
Vinsert
p19981
I42
VSimpleName: SQLExpr
p19982
tp19983
I6
s(Vinsert
p19984
I42
VSimpleName: setScale
p19985
Vinsert
p19986
I42
VSimpleName: decimalB
p19987
tp19988
I2
s(g1241
I42
g1242
Vinsert
p19989
I42
VSimpleName: dataSources
p19990
tp19991
I1
s(g1559
I42
g1560
Vinsert
p19992
I8
VBlock
p19993
tp19994
I3
s(g10726
I42
g10727
Vinsert
p19995
I8
VBlock
p19996
tp19997
I19
s(g4477
I42
g4478
Vinsert
p19998
I59
VVariableDeclarationFragment
p19999
tp20000
I1
s(g2084
I42
g2085
Vinsert
p20001
I42
VSimpleName: m
p20002
tp20003
I6
s(g11001
I42
g11002
Vinsert
p20004
I43
VSimpleType: OracleArgumentExpr
p20005
tp20006
I1
s(g4088
I42
g4089
Vinsert
p20007
I21
VExpressionStatement
p20008
tp20009
I1
s(Vinsert
p20010
I42
VSimpleName: add
p20011
Vinsert
p20012
I37
VPostfixExpression: ++
p20013
tp20014
I1
s(g14348
I42
g14349
Vinsert
p20015
I42
VSimpleName: SQLParserFeature
p20016
tp20017
I1
s(g276
I42
g277
Vinsert
p20018
I42
VSimpleName: result
p20019
tp20020
I2
s(g5320
I42
g5321
Vinsert
p20021
I43
VSimpleType: Lock
p20022
tp20023
I4
s(g9428
I42
g9429
Vinsert
p20024
I32
VMethodInvocation
p20025
tp20026
I9
s(g9827
I42
g9828
Vinsert
p20027
I42
VSimpleName: visit
p20028
tp20029
I1
s(Vinsert
p20030
I42
VSimpleName: currentThread
p20031
Vinsert
p20032
I42
VSimpleName: className
p20033
tp20034
I1
s(Vinsert
p20035
I42
VSimpleName: setCaseConditionConstAllow
p20036
Vinsert
p20037
I32
VMethodInvocation
p20038
tp20039
I1
s(g3742
I42
g3743
Vinsert
p20040
I3
VArrayCreation
p20041
tp20042
I1
s(g1770
I42
g1771
Vinsert
p20043
I32
VMethodInvocation
p20044
tp20045
I12
s(Vinsert
p20046
I42
VSimpleName: setName
p20047
Vinsert
p20048
I42
VSimpleName: renameStmt
p20049
tp20050
I1
s(Vinsert
p20051
I42
VSimpleName: getUsing
p20052
Vinsert
p20053
I42
VSimpleName: SQLForeignKeyImpl
p20054
tp20055
I1
s(g5813
I42
g5814
Vinsert
p20056
I42
VSimpleName: SQLServerObjectReferenceExpr
p20057
tp20058
I1
s(g449
I42
g450
Vinsert
p20059
I42
VSimpleName: exitImplicitCacheToActive
p20060
tp20061
I1
s(g12324
I42
g12325
Vinsert
p20062
I25
VIfStatement
p20063
tp20064
I1
s(Vinsert
p20065
I42
VSimpleName: nextToken
p20066
Vinsert
p20067
I42
VSimpleName: parseConstraint
p20068
tp20069
I1
s(g4538
I42
g4539
Vinsert
p20070
I60
VVariableDeclarationStatement
p20071
tp20072
I32
s(g13593
I42
g13594
Vinsert
p20073
I42
VSimpleName: isLogAbandoned
p20074
tp20075
I1
s(g7320
I42
g7321
Vinsert
p20076
I8
VBlock
p20077
tp20078
I1
s(Vinsert
p20079
I42
VSimpleName: assertNotNull
p20080
Vinsert
p20081
I42
VSimpleName: moveToCurrentRow
p20082
tp20083
I1
s(Vinsert
p20084
I42
VSimpleName: handle
p20085
Vinsert
p20086
I8
VBlock
p20087
tp20088
I1
s(g10797
I42
g10798
Vinsert
p20089
I32
VMethodInvocation
p20090
tp20091
I4
s(Vinsert
p20092
I42
VSimpleName: getClass
p20093
Vinsert
p20094
I42
VSimpleName: validConnectionChecker
p20095
tp20096
I2
s(g1105
I42
g1106
Vinsert
p20097
I39
VPrimitiveType: long
p20098
tp20099
I17
s(Vinsert
p20100
I42
VSimpleName: createSQLSelectParser
p20101
Vinsert
p20102
I25
VIfStatement
p20103
tp20104
I1
s(Vinsert
p20105
I42
VSimpleName: expr
p20106
Vinsert
p20107
I42
VSimpleName: setObjectType
p20108
tp20109
I1
s(g10710
I42
g10711
Vinsert
p20110
I45
VStringLiteral: "-id"
p20111
tp20112
I1
s(Vinsert
p20113
I42
VSimpleName: setReturning
p20114
Vinsert
p20115
I42
VSimpleName: OracleInsertStatement
p20116
tp20117
I4
s(g4477
I42
g4478
Vinsert
p20118
I42
VSimpleName: testSkipSeparator
p20119
tp20120
I1
s(g4472
I42
g4473
Vinsert
p20121
I44
VSingleVariableDeclaration
p20122
tp20123
I1
s(Vinsert
p20124
I42
VSimpleName: length
p20125
Vinsert
p20126
I39
VPrimitiveType: boolean
p20127
tp20128
I2
s(g12138
I42
g12139
Vinsert
p20129
I45
VStringLiteral: "CREATE MATERIALIZED VIEW sales_summary\u005cn"
p20130
tp20131
I1
s(g9854
I42
g9855
Vinsert
p20132
I74
VParameterizedType: List<SQLSelectOrderByItem>
p20133
tp20134
I1
s(g13089
I42
g13090
Vinsert
p20135
I1
VAnonymousClassDeclaration
p20136
tp20137
I1
s(g1
I42
g2
Vinsert
p20138
I42
VSimpleName: PreparedStatementHolder
p20139
tp20140
I1
s(g8643
I42
g8644
Vinsert
p20141
I52
VThisExpression
p20142
tp20143
I1
s(g10966
I42
g10967
Vinsert
p20144
I41
VReturnStatement
p20145
tp20146
I1
s(g2064
I42
g2065
Vinsert
p20147
I42
VSimpleName: OdpsSelectQueryBlock
p20148
tp20149
I1
s(g16980
I42
g16981
Vinsert
p20150
I42
VSimpleName: createMetaDataId
p20151
tp20152
I1
s(g5053
I42
g5054
Vinsert
p20153
I32
VMethodInvocation
p20154
tp20155
I12
s(g542
I42
g543
Vinsert
p20156
I45
VStringLiteral: "\u005ct\u005ct'register', \u005cn"
p20157
tp20158
I1
s(g12763
I42
g12764
Vinsert
p20159
I42
VSimpleName: setDriver
p20160
tp20161
I1
s(g8052
I42
g8053
Vinsert
p20162
I42
VSimpleName: parameter
p20163
tp20164
I2
s(Vinsert
p20165
I42
VSimpleName: getWhere
p20166
Vinsert
p20167
I42
VSimpleName: visitor
p20168
tp20169
I3
s(g9939
I42
g9940
Vinsert
p20170
I32
VMethodInvocation
p20171
tp20172
I1
s(Vinsert
p20173
I42
VSimpleName: fnv_64_lower
p20174
Vinsert
p20175
I25
VIfStatement
p20176
tp20177
I5
s(g15397
I42
g15398
Vinsert
p20178
I12
VCatchClause
p20179
tp20180
I1
s(g5854
I42
g5855
Vinsert
p20181
I42
VSimpleName: exprParser
p20182
tp20183
I2
s(g4620
I42
g4621
Vinsert
p20184
I40
VQualifiedName: Token.AS
p20185
tp20186
I1
s(g9529
I42
g9530
Vinsert
p20187
I8
VBlock
p20188
tp20189
I1
s(g396
I42
g397
Vinsert
p20190
I42
VSimpleName: hint
p20191
tp20192
I6
s(Vinsert
p20193
I42
VSimpleName: assertEquals
p20194
Vinsert
p20195
I42
VSimpleName: test_oracle
p20196
tp20197
I3
s(g4116
I42
g4117
Vinsert
p20198
I42
VSimpleName: accept
p20199
tp20200
I1
s(g1405
I42
g1406
Vinsert
p20201
I32
VMethodInvocation
p20202
tp20203
I3
s(g18477
I42
g18478
Vinsert
p20204
I45
VStringLiteral: "lhwbbs_posts_reply"
p20205
tp20206
I1
s(g1491
I42
g1492
Vinsert
p20207
I42
VSimpleName: advisor
p20208
tp20209
I1
s(Vinsert
p20210
I42
VSimpleName: assertEquals
p20211
Vinsert
p20212
I43
VSimpleType: SensitiveParameters
p20213
tp20214
I2
s(Vinsert
p20215
I42
VSimpleName: booleanValue
p20216
Vinsert
p20217
I27
VInfixExpression: !=
p20218
tp20219
I3
s(g3149
I42
g3150
Vinsert
p20220
I42
VSimpleName: joinType
p20221
tp20222
I1
s(g8113
I42
g8114
Vinsert
p20223
I32
VMethodInvocation
p20224
tp20225
I9
s(Vinsert
p20226
I42
VSimpleName: getViolations
p20227
Vinsert
p20228
I43
VSimpleType: OracleMultiInsertStatement
p20229
tp20230
I2
s(g5475
I42
g5476
Vinsert
p20231
I27
VInfixExpression: -
p20232
tp20233
I1
s(g9608
I42
g9609
Vinsert
p20234
I43
VSimpleType: X509EncodedKeySpec
p20235
tp20236
I2
s(g19880
I42
g19881
Vinsert
p20237
I60
VVariableDeclarationStatement
p20238
tp20239
I3
s(Vinsert
p20240
I42
VSimpleName: close
p20241
Vinsert
p20242
I45
VStringLiteral: "dataSource is null"
p20243
tp20244
I1
s(g7216
I42
g7217
Vinsert
p20245
I42
VSimpleName: assertEquals
p20246
tp20247
I1
s(Vinsert
p20248
I42
VSimpleName: getLockType
p20249
Vinsert
p20250
I27
VInfixExpression: !=
p20251
tp20252
I1
s(g2596
I42
g2597
Vinsert
p20253
I40
VQualifiedName: Connection.TRANSACTION_SERIALIZABLE
p20254
tp20255
I1
s(g9195
I42
g9196
Vinsert
p20256
I42
VSimpleName: dbType
p20257
tp20258
I5
s(Vinsert
p20259
I42
VSimpleName: getRight
p20260
Vinsert
p20261
I27
VInfixExpression: ==
p20262
tp20263
I2
s(g6650
I42
g6651
Vinsert
p20264
I42
VSimpleName: subQuery
p20265
tp20266
I1
s(g9959
I42
g9960
Vinsert
p20267
I42
VSimpleName: Environment
p20268
tp20269
I2
s(g9827
I42
g9828
Vinsert
p20270
I43
VSimpleType: SQLKeep
p20271
tp20272
I1
s(g4165
I42
g4166
Vinsert
p20273
I39
VPrimitiveType: int
p20274
tp20275
I1
s(g8873
I42
g8874
Vinsert
p20276
I52
VThisExpression
p20277
tp20278
I8
s(g1888
I42
g1889
Vinsert
p20279
I44
VSingleVariableDeclaration
p20280
tp20281
I2
s(g10824
I42
g10825
Vinsert
p20282
I14
VClassInstanceCreation
p20283
tp20284
I1
s(g5480
I42
g5481
Vinsert
p20285
I45
VStringLiteral: "jdbc:mock:xxx"
p20286
tp20287
I1
s(Vinsert
p20288
I42
VSimpleName: getName
p20289
Vinsert
p20290
I42
VSimpleName: DECLARE
p20291
tp20292
I1
s(Vinsert
p20293
I42
VSimpleName: setDatabase
p20294
Vinsert
p20295
I42
VSimpleName: SQLPropertyExpr
p20296
tp20297
I6
s(Vinsert
p20298
I42
VSimpleName: getParameters
p20299
Vinsert
p20300
I42
VSimpleName: firstValue
p20301
tp20302
I1
s(g376
I42
g377
Vinsert
p20303
I40
VQualifiedName: JdbcConstants.ODPS
p20304
tp20305
I1
s(Vinsert
p20306
I42
VSimpleName: close
p20307
Vinsert
p20308
I42
VSimpleName: dataSources
p20309
tp20310
I1
s(g301
I42
g302
Vinsert
p20311
I42
VSimpleName: sql
p20312
tp20313
I26
s(g18680
I42
g18681
Vinsert
p20314
I42
VSimpleName: family
p20315
tp20316
I2
s(g19741
I42
g19742
Vinsert
p20317
I21
VExpressionStatement
p20318
tp20319
I2
s(Vinsert
p20320
I42
VSimpleName: setReferencedTable
p20321
Vinsert
p20322
I52
VThisExpression
p20323
tp20324
I2
s(Vinsert
p20325
I42
VSimpleName: addAndGet
p20326
Vinsert
p20327
I42
VSimpleName: addJdbcExecuteErrorCount
p20328
tp20329
I1
s(g3931
I42
g3932
Vinsert
p20330
I45
VStringLiteral: "select id, name from \u005c"mytable\u005c" where id = 3"
p20331
tp20332
I1
s(g316
I42
g317
Vinsert
p20333
I42
VSimpleName: JdbcSqlStat
p20334
tp20335
I2
s(g6727
I42
g6728
Vinsert
p20336
I45
VStringLiteral: "remove partitioning"
p20337
tp20338
I1
s(g3495
I42
g3496
Vinsert
p20339
I21
VExpressionStatement
p20340
tp20341
I3
s(Vinsert
p20342
I42
VSimpleName: parseStatements
p20343
Vinsert
p20344
I45
VStringLiteral: "   and setl_ind = 'N'\u005cn"
p20345
tp20346
I1
s(g2125
I42
g2126
Vinsert
p20347
I42
VSimpleName: ProfileStat
p20348
tp20349
I1
s(g5475
I42
g5476
Vinsert
p20350
I42
VSimpleName: System
p20351
tp20352
I1
s(g4442
I42
g4443
Vinsert
p20353
I60
VVariableDeclarationStatement
p20354
tp20355
I1
s(g10438
I42
g10439
Vinsert
p20356
I42
VSimpleName: parser
p20357
tp20358
I1
s(Vinsert
p20359
I42
VSimpleName: assertEquals
p20360
Vinsert
p20361
I43
VSimpleType: CompositeData
p20362
tp20363
I2
s(Vinsert
p20364
I42
VSimpleName: assertEquals
p20365
Vinsert
p20366
I34
VNumberLiteral: 11
p20367
tp20368
I1
s(Vinsert
p20369
I42
VSimpleName: getTableName
p20370
Vinsert
p20371
I45
VStringLiteral: "INTO "
p20372
tp20373
I1
s(Vinsert
p20374
I42
VSimpleName: putAttribute
p20375
Vinsert
p20376
I42
VSimpleName: isNaN
p20377
tp20378
I1
s(g5762
I42
g5763
Vinsert
p20379
I60
VVariableDeclarationStatement
p20380
tp20381
I5
s(Vinsert
p20382
I42
VSimpleName: getChars
p20383
Vinsert
p20384
I39
VPrimitiveType: char
p20385
tp20386
I2
s(g5045
I42
g5046
Vinsert
p20387
I21
VExpressionStatement
p20388
tp20389
I8
s(g2586
I42
g2587
Vinsert
p20390
I43
VSimpleType: Field
p20391
tp20392
I3
s(g6727
I42
g6728
Vinsert
p20393
I42
VSimpleName: ucase
p20394
tp20395
I1
s(g16402
I42
g16403
Vinsert
p20396
I21
VExpressionStatement
p20397
tp20398
I3
s(g14839
I42
g14840
Vinsert
p20399
I27
VInfixExpression: +
p20400
tp20401
I2
s(g8011
I42
g8012
Vinsert
p20402
I42
VSimpleName: w
p20403
tp20404
I1
s(g71
I42
g72
Vinsert
p20405
I42
VSimpleName: SQLPropertyExpr
p20406
tp20407
I2
s(g14730
I42
g14731
Vinsert
p20408
I42
VSimpleName: SocketTimeoutException
p20409
tp20410
I1
s(Vinsert
p20411
I42
VSimpleName: setNestedTable
p20412
Vinsert
p20413
I32
VMethodInvocation
p20414
tp20415
I1
s(g9124
I42
g9125
Vinsert
p20416
I42
VSimpleName: config
p20417
tp20418
I4
s(g14980
I42
g14981
Vinsert
p20419
I33
VNullLiteral
p20420
tp20421
I2
s(g12019
I42
g12020
Vinsert
p20422
I42
VSimpleName: physicalConn
p20423
tp20424
I2
s(g2364
I42
g2365
Vinsert
p20425
I39
VPrimitiveType: byte
p20426
tp20427
I1
s(g2732
I42
g2733
Vinsert
p20428
I44
VSingleVariableDeclaration
p20429
tp20430
I2
s(g1958
I42
g1959
Vinsert
p20431
I45
VStringLiteral: "\u005ct\u005ctLOGGING\u005cn"
p20432
tp20433
I2
s(Vinsert
p20434
I42
VSimpleName: translateOracleToMySql
p20435
Vinsert
p20436
I45
VStringLiteral: "\u005cnFROM (SELECT *"
p20437
tp20438
I2
s(Vinsert
p20439
I42
VSimpleName: setObject
p20440
Vinsert
p20441
I32
VMethodInvocation
p20442
tp20443
I3
s(g3569
I42
g3570
Vinsert
p20444
I32
VMethodInvocation
p20445
tp20446
I2
s(g552
I42
g553
Vinsert
p20447
I43
VSimpleType: String
p20448
tp20449
I1
s(g281
I42
g282
Vinsert
p20450
I43
VSimpleType: SQLNullExpr
p20451
tp20452
I6
s(g14730
I42
g14731
Vinsert
p20453
I21
VExpressionStatement
p20454
tp20455
I5
s(Vinsert
p20456
I42
VSimpleName: error
p20457
Vinsert
p20458
I31
VMethodDeclaration
p20459
tp20460
I2
s(g16060
I42
g16061
Vinsert
p20461
I42
VSimpleName: ucase
p20462
tp20463
I1
s(g19115
I42
g19116
Vinsert
p20464
I41
VReturnStatement
p20465
tp20466
I2
s(g17777
I42
g17778
Vinsert
p20467
I8
VBlock
p20468
tp20469
I1
s(Vinsert
p20470
I42
VSimpleName: fnv1a_64_lower
p20471
Vinsert
p20472
I42
VSimpleName: dbType
p20473
tp20474
I1
s(Vinsert
p20475
I42
VSimpleName: info
p20476
Vinsert
p20477
I42
VSimpleName: parseCreateTableSupplementalLogingProps
p20478
tp20479
I1
s(g4477
I42
g4478
Vinsert
p20480
I32
VMethodInvocation
p20481
tp20482
I1
s(g19736
I42
g19737
Vinsert
p20483
I8
VBlock
p20484
tp20485
I2
s(Vinsert
p20486
I42
VSimpleName: getDruidDataSourceInstances
p20487
Vinsert
p20488
I42
VSimpleName: DataSourceInfo
p20489
tp20490
I1
s(g14744
I42
g14745
Vinsert
p20491
I42
VSimpleName: format
p20492
tp20493
I6
s(g10631
I42
g10632
Vinsert
p20494
I21
VExpressionStatement
p20495
tp20496
I2
s(g3261
I42
g3262
Vinsert
p20497
I22
VFieldAccess
p20498
tp20499
I1
s(Vinsert
p20500
I42
VSimpleName: toString
p20501
Vinsert
p20502
I42
VSimpleName: getCreateCount
p20503
tp20504
I1
s(g20113
I42
g20114
Vinsert
p20505
I42
VSimpleName: stmt
p20506
tp20507
I6
s(g5569
I42
g5570
Vinsert
p20508
I42
VSimpleName: parameters
p20509
tp20510
I2
s(g14702
I42
g14703
Vinsert
p20511
I42
VSimpleName: System
p20512
tp20513
I1
s(g9959
I42
g9960
Vinsert
p20514
I42
VSimpleName: DataSource
p20515
tp20516
I3
s(g10626
I42
g10627
Vinsert
p20517
I42
VSimpleName: get
p20518
tp20519
I1
s(g1002
I42
g1003
Vinsert
p20520
I42
VSimpleName: sqlFunctionStat
p20521
tp20522
I2
s(g2479
I42
g2480
Vinsert
p20523
I42
VSimpleName: SQLDropEventStatement
p20524
tp20525
I1
s(g9498
I42
g9499
Vinsert
p20526
I42
VSimpleName: userName
p20527
tp20528
I1
s(Vinsert
p20529
I42
VSimpleName: setTransactionIsolation
p20530
Vinsert
p20531
I8
VBlock
p20532
tp20533
I2
s(g9137
I42
g9138
Vinsert
p20534
I32
VMethodInvocation
p20535
tp20536
I1
s(g11659
I42
g11660
Vinsert
p20537
I42
VSimpleName: get
p20538
tp20539
I2
s(Vinsert
p20540
I42
VSimpleName: assertTrue
p20541
Vinsert
p20542
I42
VSimpleName: conn
p20543
tp20544
I3
s(g14551
I42
g14552
Vinsert
p20545
I52
VThisExpression
p20546
tp20547
I1
s(Vinsert
p20548
I42
VSimpleName: getId
p20549
Vinsert
p20550
I39
VPrimitiveType: long
p20551
tp20552
I1
s(g9483
I42
g9484
Vinsert
p20553
I42
VSimpleName: connect
p20554
tp20555
I1
s(g3002
I42
g3003
Vinsert
p20556
I21
VExpressionStatement
p20557
tp20558
I3
s(Vinsert
p20559
I42
VSimpleName: compareAndSet
p20560
Vinsert
p20561
I42
VSimpleName: max
p20562
tp20563
I2
s(Vinsert
p20564
I42
VSimpleName: getEntities
p20565
Vinsert
p20566
I43
VSimpleType: Map.Entry
p20567
tp20568
I1
s(g3742
I42
g3743
Vinsert
p20569
I5
VArrayType: String[]
p20570
tp20571
I1
s(g2489
I42
g2490
Vinsert
p20572
I43
VSimpleType: Object
p20573
tp20574
I3
s(g17291
I42
g17292
Vinsert
p20575
I21
VExpressionStatement
p20576
tp20577
I2
s(g5739
I42
g5740
Vinsert
p20578
I42
VSimpleName: assertNotNull
p20579
tp20580
I1
s(g6495
I42
g6496
Vinsert
p20581
I14
VClassInstanceCreation
p20582
tp20583
I1
s(g4339
I42
g4340
Vinsert
p20584
I43
VSimpleType: SQLBlockStatement
p20585
tp20586
I1
s(g8103
I42
g8104
Vinsert
p20587
I8
VBlock
p20588
tp20589
I1
s(g19315
I42
g19316
Vinsert
p20590
I60
VVariableDeclarationStatement
p20591
tp20592
I2
s(g12090
I42
g12091
Vinsert
p20593
I42
VSimpleName: sqlState
p20594
tp20595
I1
s(Vinsert
p20596
I42
VSimpleName: setType
p20597
Vinsert
p20598
I42
VSimpleName: setType
p20599
tp20600
I2
s(g9428
I42
g9429
Vinsert
p20601
I38
VPrefixExpression: !
p20602
tp20603
I9
s(g3954
I42
g3955
Vinsert
p20604
I43
VSimpleType: PGSelectStatement
p20605
tp20606
I2
s(Vinsert
p20607
I42
VSimpleName: output
p20608
Vinsert
p20609
I42
VSimpleName: condition
p20610
tp20611
I1
s(g3401
I42
g3402
Vinsert
p20612
I42
VSimpleName: MySqlSchemaStatVisitor
p20613
tp20614
I1
s(g10765
I42
g10766
Vinsert
p20615
I7
VAssignment: =
p20616
tp20617
I1
s(Vinsert
p20618
I42
VSimpleName: nextToken
p20619
Vinsert
p20620
I40
VQualifiedName: Token.PRIOR
p20621
tp20622
I1
s(g4065
I42
g4066
Vinsert
p20623
I59
VVariableDeclarationFragment
p20624
tp20625
I1
s(Vinsert
p20626
I42
VSimpleName: isAssignableFrom
p20627
Vinsert
p20628
I33
VNullLiteral
p20629
tp20630
I2
s(g12985
I42
g12986
Vinsert
p20631
I42
VSimpleName: WallUtils
p20632
tp20633
I4
s(g1996
I42
g1997
Vinsert
p20634
I32
VMethodInvocation
p20635
tp20636
I16
s(g1853
I42
g1854
Vinsert
p20637
I43
VSimpleType: OracleWithSubqueryEntry
p20638
tp20639
I1
s(g17074
I42
g17075
Vinsert
p20640
I45
VStringLiteral: "\u005ctKEY `k_c` (`c_mediumint`, `c_int`)\u005cn"
p20641
tp20642
I1
s(Vinsert
p20643
I42
VSimpleName: assertEquals
p20644
Vinsert
p20645
I45
VStringLiteral: "create table sales (f1 bigint)"
p20646
tp20647
I1
s(g16335
I42
g16336
Vinsert
p20648
I34
VNumberLiteral: 5
p20649
tp20650
I1
s(g16091
I42
g16092
Vinsert
p20651
I44
VSingleVariableDeclaration
p20652
tp20653
I1
s(g16551
I42
g16552
Vinsert
p20654
I42
VSimpleName: reset
p20655
tp20656
I1
s(g4111
I42
g4112
Vinsert
p20657
I42
VSimpleName: to
p20658
tp20659
I1
s(g10100
I42
g10101
Vinsert
p20660
I43
VSimpleType: OutputStreamWriter
p20661
tp20662
I1
s(g18209
I42
g18210
Vinsert
p20663
I43
VSimpleType: Map
p20664
tp20665
I5
s(g17221
I42
g17222
Vinsert
p20666
I42
VSimpleName: left
p20667
tp20668
I2
s(g4669
I42
g4670
Vinsert
p20669
I27
VInfixExpression: !=
p20670
tp20671
I1
s(g18289
I42
g18290
Vinsert
p20672
I43
VSimpleType: String
p20673
tp20674
I3
s(Vinsert
p20675
I42
VSimpleName: setParent
p20676
Vinsert
p20677
I42
VSimpleName: setTableSpace
p20678
tp20679
I1
s(Vinsert
p20680
I42
VSimpleName: visit
p20681
Vinsert
p20682
I42
VSimpleName: object
p20683
tp20684
I1
s(g10919
I42
g10920
Vinsert
p20685
I42
VSimpleName: MockHttpServletRequest
p20686
tp20687
I2
s(g1715
I42
g1716
Vinsert
p20688
I42
VSimpleName: getConnectionInternal
p20689
tp20690
I1
s(Vinsert
p20691
I42
VSimpleName: getColumns
p20692
Vinsert
p20693
I42
VSimpleName: getName
p20694
tp20695
I1
s(g19831
I42
g19832
Vinsert
p20696
I43
VSimpleType: List
p20697
tp20698
I5
s(g12050
I42
g12051
Vinsert
p20699
I45
VStringLiteral: "\u005ct\u005ct\u005ct\u005ctSELECT menu_id, parent_id\u005cn"
p20700
tp20701
I1
s(Vinsert
p20702
I42
VSimpleName: getConnection
p20703
Vinsert
p20704
I42
VSimpleName: url
p20705
tp20706
I2
s(Vinsert
p20707
I42
VSimpleName: token
p20708
Vinsert
p20709
I42
VSimpleName: SQLBinaryOpExpr
p20710
tp20711
I2
s(g9503
I42
g9504
Vinsert
p20712
I42
VSimpleName: getWallStatMap
p20713
tp20714
I1
s(Vinsert
p20715
I42
VSimpleName: createSQLStatementParser
p20716
Vinsert
p20717
I45
VStringLiteral: "\u005ct\u005ct, ?, ?, ?, ?, ?)"
p20718
tp20719
I1
s(Vinsert
p20720
I42
VSimpleName: assertEquals
p20721
Vinsert
p20722
I45
VStringLiteral: "SHOW INDEX FROM tblname"
p20723
tp20724
I1
s(Vinsert
p20725
I42
VSimpleName: getTableStat
p20726
Vinsert
p20727
I42
VSimpleName: assertTrue
p20728
tp20729
I4
s(g2484
I42
g2485
Vinsert
p20730
I42
VSimpleName: println
p20731
tp20732
I1
s(Vinsert
p20733
I42
VSimpleName: assertEquals
p20734
Vinsert
p20735
I45
VStringLiteral: "\u005cninsert overwrite table c partition(ds='20150711')"
p20736
tp20737
I1
s(g1599
I42
g1600
Vinsert
p20738
I42
VSimpleName: withQueryClause
p20739
tp20740
I1
s(g3282
I42
g3283
Vinsert
p20741
I42
VSimpleName: printExpr
p20742
tp20743
I1
s(g6089
I42
g6090
Vinsert
p20744
I36
VParenthesizedExpression
p20745
tp20746
I1
s(g1888
I42
g1889
Vinsert
p20747
I42
VSimpleName: String
p20748
tp20749
I1
s(Vinsert
p20750
I42
VSimpleName: endVisit
p20751
Vinsert
p20752
I42
VSimpleName: getTableSource
p20753
tp20754
I1
s(g5315
I42
g5316
Vinsert
p20755
I42
VSimpleName: SQLBinaryOpExpr
p20756
tp20757
I1
s(g901
I42
g902
Vinsert
p20758
I42
VSimpleName: c0
p20759
tp20760
I1
s(g2852
I42
g2853
Vinsert
p20761
I42
VSimpleName: Override
p20762
tp20763
I1
s(Vinsert
p20764
I42
VSimpleName: getClass
p20765
Vinsert
p20766
I42
VSimpleName: HiveASTVisitor
p20767
tp20768
I2
s(Vinsert
p20769
I42
VSimpleName: size
p20770
Vinsert
p20771
I42
VSimpleName: methodStats
p20772
tp20773
I1
s(g2158
I42
g2159
Vinsert
p20774
I42
VSimpleName: MySqlForeignKey
p20775
tp20776
I2
s(Vinsert
p20777
I42
VSimpleName: size
p20778
Vinsert
p20779
I44
VSingleVariableDeclaration
p20780
tp20781
I10
s(Vinsert
p20782
I42
VSimpleName: names
p20783
Vinsert
p20784
I43
VSimpleType: SQLName
p20785
tp20786
I2
s(g4982
I42
g4983
Vinsert
p20787
I32
VMethodInvocation
p20788
tp20789
I3
s(g7469
I42
g7470
Vinsert
p20790
I59
VVariableDeclarationFragment
p20791
tp20792
I1
s(g8873
I42
g8874
Vinsert
p20793
I42
VSimpleName: nextToken
p20794
tp20795
I1
s(Vinsert
p20796
I42
VSimpleName: clear
p20797
Vinsert
p20798
I31
VMethodDeclaration
p20799
tp20800
I1
s(Vinsert
p20801
I42
VSimpleName: currentTimeMillis
p20802
Vinsert
p20803
I42
VSimpleName: url
p20804
tp20805
I1
s(Vinsert
p20806
I42
VSimpleName: equalsIgnoreCase
p20807
Vinsert
p20808
I45
VStringLiteral: "INTEGER"
p20809
tp20810
I1
s(Vinsert
p20811
I42
VSimpleName: getMessage
p20812
Vinsert
p20813
I53
VThrowStatement
p20814
tp20815
I5
s(g19573
I42
g19574
Vinsert
p20816
I42
VSimpleName: Assert
p20817
tp20818
I1
s(g3063
I42
g3064
Vinsert
p20819
I42
VSimpleName: WallConfig
p20820
tp20821
I4
s(Vinsert
p20822
I42
VSimpleName: setName
p20823
Vinsert
p20824
I40
VQualifiedName: Token.UNIQUE
p20825
tp20826
I1
s(Vinsert
p20827
I42
VSimpleName: currentTimeMillis
p20828
Vinsert
p20829
I83
VModifier: private
p20830
tp20831
I1
s(g15930
I42
g15931
Vinsert
p20832
I42
VSimpleName: setTestOnBorrow
p20833
tp20834
I1
s(Vinsert
p20835
I42
VSimpleName: getTable
p20836
Vinsert
p20837
I43
VSimpleType: String
p20838
tp20839
I2
s(Vinsert
p20840
I42
VSimpleName: getObject
p20841
Vinsert
p20842
I42
VSimpleName: print
p20843
tp20844
I4
s(g5133
I42
g5134
Vinsert
p20845
I41
VReturnStatement
p20846
tp20847
I1
s(g14426
I42
g14427
Vinsert
p20848
I42
VSimpleName: context
p20849
tp20850
I2
s(Vinsert
p20851
I42
VSimpleName: debug
p20852
Vinsert
p20853
I39
VPrimitiveType: void
p20854
tp20855
I2
s(Vinsert
p20856
I42
VSimpleName: parseUpdateSetItem
p20857
Vinsert
p20858
I42
VSimpleName: SQLUpdateSetItem
p20859
tp20860
I1
s(g3266
I42
g3267
Vinsert
p20861
I43
VSimpleType: ProfileEntry
p20862
tp20863
I1
s(g17017
I42
g17018
Vinsert
p20864
I42
VSimpleName: testLoadConfigBySystemProperty
p20865
tp20866
I1
s(g577
I42
g578
Vinsert
p20867
I42
VSimpleName: column
p20868
tp20869
I2
s(g8547
I42
g8548
Vinsert
p20870
I42
VSimpleName: Properties
p20871
tp20872
I4
s(g4661
I42
g4662
Vinsert
p20873
I43
VSimpleType: TestCase
p20874
tp20875
I1
s(g1105
I42
g1106
Vinsert
p20876
I27
VInfixExpression: -
p20877
tp20878
I9
s(g2795
I42
g2796
Vinsert
p20879
I42
VSimpleName: line
p20880
tp20881
I1
s(g5007
I42
g5008
Vinsert
p20882
I25
VIfStatement
p20883
tp20884
I1
s(g1948
I42
g1949
Vinsert
p20885
I42
VSimpleName: String
p20886
tp20887
I1
s(Vinsert
p20888
I42
VSimpleName: getAndSet
p20889
Vinsert
p20890
I42
VSimpleName: keepAliveCheckCount
p20891
tp20892
I2
s(Vinsert
p20893
I42
VSimpleName: token
p20894
Vinsert
p20895
I42
VSimpleName: SQLTableSource
p20896
tp20897
I1
s(g8001
I42
g8002
Vinsert
p20898
I8
VBlock
p20899
tp20900
I1
s(g1835
I42
g1836
Vinsert
p20901
I42
VSimpleName: print
p20902
tp20903
I2
s(Vinsert
p20904
I42
VSimpleName: getStatValueAndReset
p20905
Vinsert
p20906
I59
VVariableDeclarationFragment
p20907
tp20908
I1
s(Vinsert
p20909
I42
VSimpleName: getLiteral
p20910
Vinsert
p20911
I42
VSimpleName: print
p20912
tp20913
I3
s(Vinsert
p20914
I42
VSimpleName: getClassName
p20915
Vinsert
p20916
I42
VSimpleName: parameters
p20917
tp20918
I1
s(g14640
I42
g14641
Vinsert
p20919
I60
VVariableDeclarationStatement
p20920
tp20921
I1
s(g1410
I42
g1411
Vinsert
p20922
I33
VNullLiteral
p20923
tp20924
I1
s(g9914
I42
g9915
Vinsert
p20925
I42
VSimpleName: setMaxEvictableIdleTimeMillis
p20926
tp20927
I1
s(Vinsert
p20928
I42
VSimpleName: getAndSet
p20929
Vinsert
p20930
I40
VQualifiedName: val.resultSetHoldTimeNano
p20931
tp20932
I1
s(Vinsert
p20933
I42
VSimpleName: getStatements
p20934
Vinsert
p20935
I44
VSingleVariableDeclaration
p20936
tp20937
I1
s(g9878
I42
g9879
Vinsert
p20938
I16
VConditionalExpression
p20939
tp20940
I2
s(g231
I42
g232
Vinsert
p20941
I42
VSimpleName: updateClause
p20942
tp20943
I2
s(g10082
I42
g10083
Vinsert
p20944
I42
VSimpleName: Assert
p20945
tp20946
I1
s(Vinsert
p20947
I42
VSimpleName: getProxyFilters
p20948
Vinsert
p20949
I34
VNumberLiteral: 13
p20950
tp20951
I1
s(g18005
I42
g18006
Vinsert
p20952
I45
VStringLiteral: " \u005cn/*!40101 SET character_set_client = @saved_cs_client */;"
p20953
tp20954
I1
s(g10320
I42
g10321
Vinsert
p20955
I31
VMethodDeclaration
p20956
tp20957
I2
s(g17734
I42
g17735
Vinsert
p20958
I42
VSimpleName: newThread
p20959
tp20960
I1
s(Vinsert
p20961
I42
VSimpleName: get
p20962
Vinsert
p20963
I42
VSimpleName: ident
p20964
tp20965
I1
s(g14522
I42
g14523
Vinsert
p20966
I45
VStringLiteral: "\u005ctON projects\u005cn"
p20967
tp20968
I1
s(g1165
I42
g1166
Vinsert
p20969
I83
VModifier: private
p20970
tp20971
I1
s(g2737
I42
g2738
Vinsert
p20972
I42
VSimpleName: writeLock
p20973
tp20974
I1
s(Vinsert
p20975
I42
VSimpleName: loadSqlList
p20976
Vinsert
p20977
I42
VSimpleName: Map
p20978
tp20979
I1
s(Vinsert
p20980
I42
VSimpleName: getClass
p20981
Vinsert
p20982
I42
VSimpleName: getID
p20983
tp20984
I1
s(g15766
I42
g15767
Vinsert
p20985
I8
VBlock
p20986
tp20987
I2
s(g8470
I42
g8471
Vinsert
p20988
I43
VSimpleType: SQLSelectQueryBlock
p20989
tp20990
I1
s(g13789
I42
g13790
Vinsert
p20991
I21
VExpressionStatement
p20992
tp20993
I3
s(g3035
I42
g3036
Vinsert
p20994
I42
VSimpleName: print0
p20995
tp20996
I2
s(g7835
I42
g7836
Vinsert
p20997
I21
VExpressionStatement
p20998
tp20999
I2
s(g18113
I42
g18114
Vinsert
p21000
I42
VSimpleName: createSynonym
p21001
tp21002
I2
s(g532
I42
g533
Vinsert
p21003
I45
VStringLiteral: "not support function : "
p21004
tp21005
I1
s(Vinsert
p21006
I42
VSimpleName: parseStatements
p21007
Vinsert
p21008
I45
VStringLiteral: "\u005ctDBID DECIMAL(38),\u005cn"
p21009
tp21010
I1
s(g5490
I42
g5491
Vinsert
p21011
I43
VSimpleType: Exception
p21012
tp21013
I1
s(g11930
I42
g11931
Vinsert
p21014
I8
VBlock
p21015
tp21016
I1
s(g4956
I42
g4957
Vinsert
p21017
I59
VVariableDeclarationFragment
p21018
tp21019
I1
s(Vinsert
p21020
I42
VSimpleName: format
p21021
Vinsert
p21022
I60
VVariableDeclarationStatement
p21023
tp21024
I17
s(Vinsert
p21025
I42
VSimpleName: add
p21026
Vinsert
p21027
I40
VQualifiedName: com.alibaba.druid.sql.SQLUtils
p21028
tp21029
I1
s(g6475
I42
g6476
Vinsert
p21030
I8
VBlock
p21031
tp21032
I1
s(g3287
I42
g3288
Vinsert
p21033
I44
VSingleVariableDeclaration
p21034
tp21035
I1
s(g13986
I42
g13987
Vinsert
p21036
I43
VSimpleType: OracleBinaryDoubleExpr
p21037
tp21038
I1
s(Vinsert
p21039
I42
VSimpleName: getColumn
p21040
Vinsert
p21041
I45
VStringLiteral: "RENAME COLUMN "
p21042
tp21043
I1
s(g13311
I42
g13312
Vinsert
p21044
I45
VStringLiteral: "\u005cn\u005ct\u005ctCONSTRAINT nn_qty NOT NULL"
p21045
tp21046
I2
s(g1642
I42
g1643
Vinsert
p21047
I27
VInfixExpression: +
p21048
tp21049
I1
s(g7665
I42
g7666
Vinsert
p21050
I5
VArrayType: byte[]
p21051
tp21052
I1
s(g8409
I42
g8410
Vinsert
p21053
I32
VMethodInvocation
p21054
tp21055
I2
s(Vinsert
p21056
I42
VSimpleName: setParent
p21057
Vinsert
p21058
I42
VSimpleName: getParent
p21059
tp21060
I1
s(Vinsert
p21061
I42
VSimpleName: getContentPane
p21062
Vinsert
p21063
I32
VMethodInvocation
p21064
tp21065
I2
s(g11925
I42
g11926
Vinsert
p21066
I21
VExpressionStatement
p21067
tp21068
I2
s(g3022
I42
g3023
Vinsert
p21069
I33
VNullLiteral
p21070
tp21071
I1
s(g3719
I42
g3720
Vinsert
p21072
I42
VSimpleName: toMySqlString
p21073
tp21074
I2
s(g7932
I42
g7933
Vinsert
p21075
I42
VSimpleName: Date
p21076
tp21077
I2
s(g3992
I42
g3993
Vinsert
p21078
I42
VSimpleName: allow
p21079
tp21080
I1
s(g19404
I42
g19405
Vinsert
p21081
I40
VQualifiedName: Types.TIMESTAMP
p21082
tp21083
I1
s(Vinsert
p21084
I42
VSimpleName: isSameRM
p21085
Vinsert
p21086
I43
VSimpleType: XAResource
p21087
tp21088
I1
s(g13493
I42
g13494
Vinsert
p21089
I83
VModifier: static
p21090
tp21091
I3
s(g4391
I42
g4392
Vinsert
p21092
I42
VSimpleName: transactionIsolation
p21093
tp21094
I1
s(g15029
I42
g15030
Vinsert
p21095
I42
VSimpleName: Long
p21096
tp21097
I2
s(g2885
I42
g2886
Vinsert
p21098
I27
VInfixExpression: ==
p21099
tp21100
I2
s(g1360
I42
g1361
Vinsert
p21101
I52
VThisExpression
p21102
tp21103
I3
s(g3472
I42
g3473
Vinsert
p21104
I59
VVariableDeclarationFragment
p21105
tp21106
I1
s(g14722
I42
g14723
Vinsert
p21107
I60
VVariableDeclarationStatement
p21108
tp21109
I1
s(g6760
I42
g6761
Vinsert
p21110
I42
VSimpleName: String
p21111
tp21112
I2
s(Vinsert
p21113
I42
VSimpleName: token
p21114
Vinsert
p21115
I36
VParenthesizedExpression
p21116
tp21117
I1
s(g12001
I42
g12002
Vinsert
p21118
I42
VSimpleName: test_true_7
p21119
tp21120
I1
s(g16868
I42
g16869
Vinsert
p21121
I42
VSimpleName: unwrapType
p21122
tp21123
I1
s(g1070
I42
g1071
Vinsert
p21124
I31
VMethodDeclaration
p21125
tp21126
I31
s(Vinsert
p21127
I42
VSimpleName: next
p21128
Vinsert
p21129
I45
VStringLiteral: "user-5"
p21130
tp21131
I1
s(g20835
I42
g20836
Vinsert
p21132
I42
VSimpleName: tablePool
p21133
tp21134
I1
s(g487
I42
g488
Vinsert
p21135
I42
VSimpleName: InterruptedException
p21136
tp21137
I1
s(g7091
I42
g7092
Vinsert
p21138
I42
VSimpleName: sql
p21139
tp21140
I2
s(g5969
I42
g5970
Vinsert
p21141
I42
VSimpleName: dataSourceList
p21142
tp21143
I2
s(g2044
I42
g2045
Vinsert
p21144
I21
VExpressionStatement
p21145
tp21146
I1
s(Vinsert
p21147
I42
VSimpleName: assertTrue
p21148
Vinsert
p21149
I45
VStringLiteral: "select * from t where id = "
p21150
tp21151
I2
s(g21
I42
g22
Vinsert
p21152
I11
VCastExpression
p21153
tp21154
I3
s(Vinsert
p21155
I42
VSimpleName: isEqualTo
p21156
Vinsert
p21157
I45
VStringLiteral: "sa"
p21158
tp21159
I1
s(g18209
I42
g18210
Vinsert
p21160
I42
VSimpleName: resultMap
p21161
tp21162
I1
s(g16967
I42
g16968
Vinsert
p21163
I70
VEnhancedForStatement
p21164
tp21165
I1
s(Vinsert
p21166
I42
VSimpleName: visit
p21167
Vinsert
p21168
I42
VSimpleName: select
p21169
tp21170
I1
s(Vinsert
p21171
I42
VSimpleName: setParent
p21172
Vinsert
p21173
I42
VSimpleName: subPartitionBy
p21174
tp21175
I1
s(g9299
I42
g9300
Vinsert
p21176
I40
VQualifiedName: Token.LPAREN
p21177
tp21178
I2
s(Vinsert
p21179
I42
VSimpleName: name
p21180
Vinsert
p21181
I42
VSimpleName: tablespace
p21182
tp21183
I1
s(g291
I42
g292
Vinsert
p21184
I25
VIfStatement
p21185
tp21186
I1
s(g4859
I42
g4860
Vinsert
p21187
I42
VSimpleName: entries
p21188
tp21189
I1
s(Vinsert
p21190
I42
VSimpleName: toSQLString
p21191
Vinsert
p21192
I45
VStringLiteral: "\u005ctSELECT order_total\u005cn"
p21193
tp21194
I1
s(g91
I42
g92
Vinsert
p21195
I42
VSimpleName: i
p21196
tp21197
I2
s(Vinsert
p21198
I42
VSimpleName: visit
p21199
Vinsert
p21200
I42
VSimpleName: parameterized
p21201
tp21202
I1
s(g9089
I42
g9090
Vinsert
p21203
I31
VMethodDeclaration
p21204
tp21205
I1
s(g2054
I42
g2055
Vinsert
p21206
I42
VSimpleName: sqlStat
p21207
tp21208
I3
s(g3931
I42
g3932
Vinsert
p21209
I32
VMethodInvocation
p21210
tp21211
I5
s(Vinsert
p21212
I42
VSimpleName: setParent
p21213
Vinsert
p21214
I42
VSimpleName: valuesList
p21215
tp21216
I2
s(g9919
I42
g9920
Vinsert
p21217
I42
VSimpleName: token
p21218
tp21219
I1
s(g5719
I42
g5720
Vinsert
p21220
I60
VVariableDeclarationStatement
p21221
tp21222
I1
s(g14891
I42
g14892
Vinsert
p21223
I33
VNullLiteral
p21224
tp21225
I7
s(g9827
I42
g9828
Vinsert
p21226
I39
VPrimitiveType: boolean
p21227
tp21228
I1
s(g8391
I42
g8392
Vinsert
p21229
I39
VPrimitiveType: void
p21230
tp21231
I5
s(g20840
I42
g20841
Vinsert
p21232
I27
VInfixExpression: !=
p21233
tp21234
I2
s(g2852
I42
g2853
Vinsert
p21235
I9
VBooleanLiteral: true
p21236
tp21237
I1
s(g14881
I42
g14882
Vinsert
p21238
I34
VNumberLiteral: 0
p21239
tp21240
I1
s(g7845
I42
g7846
Vinsert
p21241
I42
VSimpleName: items
p21242
tp21243
I1
s(Vinsert
p21244
I42
VSimpleName: getDirectDataSource
p21245
Vinsert
p21246
I60
VVariableDeclarationStatement
p21247
tp21248
I2
s(g7712
I42
g7713
Vinsert
p21249
I43
VSimpleType: TableStat.Name
p21250
tp21251
I2
s(Vinsert
p21252
I42
VSimpleName: setTable
p21253
Vinsert
p21254
I42
VSimpleName: setParent
p21255
tp21256
I1
s(Vinsert
p21257
I42
VSimpleName: assertTrue
p21258
Vinsert
p21259
I45
VStringLiteral: "                 where t.ccounty_code = us.carea_code"
p21260
tp21261
I1
s(g20888
I42
g20889
Vinsert
p21262
I32
VMethodInvocation
p21263
tp21264
I6
s(Vinsert
p21265
I42
VSimpleName: assertEquals
p21266
Vinsert
p21267
I42
VSimpleName: getSelectCount
p21268
tp21269
I1
s(g9006
I42
g9007
Vinsert
p21270
I83
VModifier: public
p21271
tp21272
I5
s(g2870
I42
g2871
Vinsert
p21273
I42
VSimpleName: stmtList
p21274
tp21275
I3
s(Vinsert
p21276
I42
VSimpleName: toMySqlString
p21277
Vinsert
p21278
I42
VSimpleName: size
p21279
tp21280
I2
s(g13223
I42
g13224
Vinsert
p21281
I42
VSimpleName: savePoint
p21282
tp21283
I1
s(Vinsert
p21284
I42
VSimpleName: currentThread
p21285
Vinsert
p21286
I42
VSimpleName: contextLoader
p21287
tp21288
I1
s(g4635
I42
g4636
Vinsert
p21289
I43
VSimpleType: MySqlAlterTableChangeColumn
p21290
tp21291
I1
s(g19565
I42
g19566
Vinsert
p21292
I45
VStringLiteral: "\u005ctFULLTEXT INDEX name4_idx_c_longblob(c_longblob),\u005cn"
p21293
tp21294
I1
s(Vinsert
p21295
I42
VSimpleName: getExpr
p21296
Vinsert
p21297
I42
VSimpleName: OraclePriorExpr
p21298
tp21299
I1
s(g3327
I42
g3328
Vinsert
p21300
I42
VSimpleName: stmt
p21301
tp21302
I1
s(g18763
I42
g18764
Vinsert
p21303
I43
VSimpleType: K
p21304
tp21305
I1
s(g4814
I42
g4815
Vinsert
p21306
I60
VVariableDeclarationStatement
p21307
tp21308
I2
s(g2398
I42
g2399
Vinsert
p21309
I42
VSimpleName: Object
p21310
tp21311
I1
s(g1208
I42
g1209
Vinsert
p21312
I43
VSimpleType: String
p21313
tp21314
I2
s(Vinsert
p21315
I42
VSimpleName: createSQLSelectParser
p21316
Vinsert
p21317
I42
VSimpleName: OracleSelect
p21318
tp21319
I1
s(g1271
I42
g1272
Vinsert
p21320
I8
VBlock
p21321
tp21322
I1
s(g15443
I42
g15444
Vinsert
p21323
I8
VBlock
p21324
tp21325
I1
s(g3093
I42
g3094
Vinsert
p21326
I21
VExpressionStatement
p21327
tp21328
I3
s(g12090
I42
g12091
Vinsert
p21329
I83
VModifier: public
p21330
tp21331
I1
s(Vinsert
p21332
I42
VSimpleName: setExpr
p21333
Vinsert
p21334
I42
VSimpleName: createItem
p21335
tp21336
I1
s(g16335
I42
g16336
Vinsert
p21337
I42
VSimpleName: x
p21338
tp21339
I1
s(Vinsert
p21340
I42
VSimpleName: add
p21341
Vinsert
p21342
I42
VSimpleName: to
p21343
tp21344
I1
s(Vinsert
p21345
I42
VSimpleName: charAt
p21346
Vinsert
p21347
I34
VNumberLiteral: 0
p21348
tp21349
I7
s(g1858
I42
g1859
Vinsert
p21350
I42
VSimpleName: test_0
p21351
tp21352
I1
s(g6557
I42
g6558
Vinsert
p21353
I25
VIfStatement
p21354
tp21355
I1
s(Vinsert
p21356
I42
VSimpleName: getExpr
p21357
Vinsert
p21358
I43
VSimpleType: SQLCastExpr
p21359
tp21360
I2
s(g4982
I42
g4983
Vinsert
p21361
I21
VExpressionStatement
p21362
tp21363
I1
s(g17665
I42
g17666
Vinsert
p21364
I42
VSimpleName: statement
p21365
tp21366
I2
s(g8360
I42
g8361
Vinsert
p21367
I33
VNullLiteral
p21368
tp21369
I1
s(Vinsert
p21370
I42
VSimpleName: getDataSourceStat
p21371
Vinsert
p21372
I42
VSimpleName: datasource
p21373
tp21374
I2
s(Vinsert
p21375
I42
VSimpleName: setTestWhileIdle
p21376
Vinsert
p21377
I42
VSimpleName: setUrl
p21378
tp21379
I1
s(g6442
I42
g6443
Vinsert
p21380
I45
VStringLiteral: "        where 1=1  and created > '2013-07-28' "
p21381
tp21382
I1
s(g7565
I42
g7566
Vinsert
p21383
I43
VSimpleType: SQLUseStatement
p21384
tp21385
I1
s(g6717
I42
g6718
Vinsert
p21386
I83
VModifier: public
p21387
tp21388
I6
s(g13952
I42
g13953
Vinsert
p21389
I39
VPrimitiveType: boolean
p21390
tp21391
I1
s(g4584
I42
g4585
Vinsert
p21392
I8
VBlock
p21393
tp21394
I10
s(g17403
I42
g17404
Vinsert
p21395
I40
VQualifiedName: Token.SET
p21396
tp21397
I1
s(g15092
I42
g15093
Vinsert
p21398
I27
VInfixExpression: >
p21399
tp21400
I5
s(g9924
I42
g9925
Vinsert
p21401
I43
VSimpleType: JdbcStatContext
p21402
tp21403
I8
s(g2609
I42
g2610
Vinsert
p21404
I8
VBlock
p21405
tp21406
I1
s(g6663
I42
g6664
Vinsert
p21407
I8
VBlock
p21408
tp21409
I1
s(g2558
I42
g2559
Vinsert
p21410
I25
VIfStatement
p21411
tp21412
I1
s(Vinsert
p21413
I42
VSimpleName: addAndGet
p21414
Vinsert
p21415
I42
VSimpleName: executeErrorLastTime
p21416
tp21417
I1
s(g9657
I42
g9658
Vinsert
p21418
I42
VSimpleName: FileWriter
p21419
tp21420
I1
s(g1135
I42
g1136
Vinsert
p21421
I42
VSimpleName: ProfileEntryReqStat
p21422
tp21423
I1
s(Vinsert
p21424
I42
VSimpleName: setRight
p21425
Vinsert
p21426
I42
VSimpleName: setLeft
p21427
tp21428
I1
s(g9944
I42
g9945
Vinsert
p21429
I45
VStringLiteral: "\u005ctemail UNIQUE, \u005cn"
p21430
tp21431
I1
s(g6207
I42
g6208
Vinsert
p21432
I33
VNullLiteral
p21433
tp21434
I1
s(g9554
I42
g9555
Vinsert
p21435
I42
VSimpleName: put
p21436
tp21437
I1
s(g2629
I42
g2630
Vinsert
p21438
I42
VSimpleName: x_a
p21439
tp21440
I1
s(g1471
I42
g1472
Vinsert
p21441
I45
VStringLiteral: "thread-"
p21442
tp21443
I2
s(g404
I42
g405
Vinsert
p21444
I45
VStringLiteral: "PARALLEL 4\u005cn"
p21445
tp21446
I1
s(g4755
I42
g4756
Vinsert
p21447
I8
VBlock
p21448
tp21449
I1
s(Vinsert
p21450
I42
VSimpleName: put
p21451
Vinsert
p21452
I45
VStringLiteral: "ENGINE"
p21453
tp21454
I1
s(g3063
I42
g3064
Vinsert
p21455
I60
VVariableDeclarationStatement
p21456
tp21457
I2
s(Vinsert
p21458
I42
VSimpleName: getDataSources
p21459
Vinsert
p21460
I42
VSimpleName: items
p21461
tp21462
I1
s(g16005
I42
g16006
Vinsert
p21463
I42
VSimpleName: tableName
p21464
tp21465
I1
s(g9559
I42
g9560
Vinsert
p21466
I22
VFieldAccess
p21467
tp21468
I1
s(g19315
I42
g19316
Vinsert
p21469
I42
VSimpleName: println
p21470
tp21471
I2
s(g2203
I42
g2204
Vinsert
p21472
I33
VNullLiteral
p21473
tp21474
I2
s(g7335
I42
g7336
Vinsert
p21475
I42
VSimpleName: set
p21476
tp21477
I1
s(g3261
I42
g3262
Vinsert
p21478
I42
VSimpleName: addValue
p21479
tp21480
I1
s(Vinsert
p21481
I42
VSimpleName: print
p21482
Vinsert
p21483
I42
VSimpleName: SQLCharExpr
p21484
tp21485
I1
s(g1963
I42
g1964
Vinsert
p21486
I42
VSimpleName: setInto
p21487
tp21488
I1
s(Vinsert
p21489
I42
VSimpleName: error
p21490
Vinsert
p21491
I27
VInfixExpression: ==
p21492
tp21493
I3
s(Vinsert
p21494
I42
VSimpleName: assertTrue
p21495
Vinsert
p21496
I45
VStringLiteral: "SELECT * FROM t where a=1 #this is comment \u005cn and b=1"
p21497
tp21498
I1
s(Vinsert
p21499
I42
VSimpleName: is
p21500
Vinsert
p21501
I42
VSimpleName: JdbcUtils
p21502
tp21503
I1
s(Vinsert
p21504
I42
VSimpleName: getExpr
p21505
Vinsert
p21506
I42
VSimpleName: returnning
p21507
tp21508
I1
s(Vinsert
p21509
I42
VSimpleName: getAlias
p21510
Vinsert
p21511
I42
VSimpleName: getTableName
p21512
tp21513
I1
s(g10581
I42
g10582
Vinsert
p21514
I45
VStringLiteral: "SELECT * FROM AV_INFO WHERE ID = ?"
p21515
tp21516
I1
s(Vinsert
p21517
I42
VSimpleName: setExpr
p21518
Vinsert
p21519
I43
VSimpleType: PGShowStatement
p21520
tp21521
I2
s(g5012
I42
g5013
Vinsert
p21522
I21
VExpressionStatement
p21523
tp21524
I2
s(g20928
I42
g20929
Vinsert
p21525
I42
VSimpleName: resultSetHoldTimeNanoUpdater
p21526
tp21527
I1
s(g16256
I42
g16257
Vinsert
p21528
I43
VSimpleType: PGPolygonExpr
p21529
tp21530
I1
s(g5839
I42
g5840
Vinsert
p21531
I42
VSimpleName: setConnectionProperties
p21532
tp21533
I1
s(Vinsert
p21534
I42
VSimpleName: unwrap
p21535
Vinsert
p21536
I43
VSimpleType: Connection
p21537
tp21538
I4
s(g21332
I42
g21333
Vinsert
p21539
I60
VVariableDeclarationStatement
p21540
tp21541
I5
s(g1208
I42
g1209
Vinsert
p21542
I42
VSimpleName: IOUtils
p21543
tp21544
I1
s(g2019
I42
g2020
Vinsert
p21545
I32
VMethodInvocation
p21546
tp21547
I1
s(g8030
I42
g8031
Vinsert
p21548
I27
VInfixExpression: +
p21549
tp21550
I1
s(Vinsert
p21551
I42
VSimpleName: createExprParser
p21552
Vinsert
p21553
I42
VSimpleName: dataType
p21554
tp21555
I9
s(Vinsert
p21556
I42
VSimpleName: append
p21557
Vinsert
p21558
I42
VSimpleName: timeZoneValue
p21559
tp21560
I2
s(Vinsert
p21561
I42
VSimpleName: addAndGet
p21562
Vinsert
p21563
I42
VSimpleName: addInsertDataCount
p21564
tp21565
I1
s(g5653
I42
g5654
Vinsert
p21566
I45
VStringLiteral: "RULES"
p21567
tp21568
I1
s(g15495
I42
g15496
Vinsert
p21569
I21
VExpressionStatement
p21570
tp21571
I3
s(Vinsert
p21572
I42
VSimpleName: setReturnDataType
p21573
Vinsert
p21574
I32
VMethodInvocation
p21575
tp21576
I4
s(Vinsert
p21577
I42
VSimpleName: getExecuteCount
p21578
Vinsert
p21579
I25
VIfStatement
p21580
tp21581
I3
s(g13071
I42
g13072
Vinsert
p21582
I42
VSimpleName: message
p21583
tp21584
I1
s(Vinsert
p21585
I42
VSimpleName: createSchemaStatVisitor
p21586
Vinsert
p21587
I42
VSimpleName: assertEquals
p21588
tp21589
I24
s(g6909
I42
g6910
Vinsert
p21590
I42
VSimpleName: assertTrue
p21591
tp21592
I1
s(Vinsert
p21593
I42
VSimpleName: indexOf
p21594
Vinsert
p21595
I42
VSimpleName: i
p21596
tp21597
I3
s(Vinsert
p21598
I42
VSimpleName: add
p21599
Vinsert
p21600
I27
VInfixExpression: ==
p21601
tp21602
I4
s(g13445
I42
g13446
Vinsert
p21603
I42
VSimpleName: selectItem
p21604
tp21605
I1
s(g15745
I42
g15746
Vinsert
p21606
I42
VSimpleName: assertEquals
p21607
tp21608
I1
s(g8841
I42
g8842
Vinsert
p21609
I21
VExpressionStatement
p21610
tp21611
I3
s(Vinsert
p21612
I42
VSimpleName: replaceAll
p21613
Vinsert
p21614
I45
VStringLiteral: "5''TW'"
p21615
tp21616
I1
s(g19810
I42
g19811
Vinsert
p21617
I32
VMethodInvocation
p21618
tp21619
I2
s(g14290
I42
g14291
Vinsert
p21620
I42
VSimpleName: sqlStatIdSeed
p21621
tp21622
I2
s(g186
I42
g187
Vinsert
p21623
I45
VStringLiteral: "timespan"
p21624
tp21625
I1
s(g16630
I42
g16631
Vinsert
p21626
I59
VVariableDeclarationFragment
p21627
tp21628
I1
s(g7650
I42
g7651
Vinsert
p21629
I10
VBreakStatement
p21630
tp21631
I1
s(Vinsert
p21632
I42
VSimpleName: accept
p21633
Vinsert
p21634
I16
VConditionalExpression
p21635
tp21636
I5
s(g2930
I42
g2931
Vinsert
p21637
I42
VSimpleName: x
p21638
tp21639
I1
s(g6455
I42
g6456
Vinsert
p21640
I43
VSimpleType: IllegalArgumentException
p21641
tp21642
I1
s(Vinsert
p21643
I42
VSimpleName: getValue
p21644
Vinsert
p21645
I45
VStringLiteral: "INTERVAL "
p21646
tp21647
I2
s(Vinsert
p21648
I42
VSimpleName: assertFalse
p21649
Vinsert
p21650
I42
VSimpleName: MySqlWallTest28
p21651
tp21652
I1
s(g13191
I42
g13192
Vinsert
p21653
I42
VSimpleName: stmt
p21654
tp21655
I3
s(g5661
I42
g5662
Vinsert
p21656
I8
VBlock
p21657
tp21658
I1
s(g13176
I42
g13177
Vinsert
p21659
I40
VQualifiedName: that.pivot
p21660
tp21661
I2
s(Vinsert
p21662
I42
VSimpleName: setParent
p21663
Vinsert
p21664
I74
VParameterizedType: ArrayList<SQLSubPartition>
p21665
tp21666
I1
s(Vinsert
p21667
I42
VSimpleName: contains
p21668
Vinsert
p21669
I42
VSimpleName: tableName
p21670
tp21671
I2
s(g19369
I42
g19370
Vinsert
p21672
I42
VSimpleName: print0
p21673
tp21674
I1
s(g10869
I42
g10870
Vinsert
p21675
I45
VStringLiteral: "connect setAutoComment "
p21676
tp21677
I2
s(g1022
I42
g1023
Vinsert
p21678
I57
VTypeLiteral
p21679
tp21680
I1
s(Vinsert
p21681
I42
VSimpleName: findColumn
p21682
Vinsert
p21683
I7
VAssignment: =
p21684
tp21685
I1
s(Vinsert
p21686
I42
VSimpleName: isWritable
p21687
Vinsert
p21688
I27
VInfixExpression: !=
p21689
tp21690
I1
s(Vinsert
p21691
I42
VSimpleName: assertEquals
p21692
Vinsert
p21693
I34
VNumberLiteral: 4
p21694
tp21695
I4
s(Vinsert
p21696
I42
VSimpleName: getName
p21697
Vinsert
p21698
I34
VNumberLiteral: 6
p21699
tp21700
I1
s(g8006
I42
g8007
Vinsert
p21701
I8
VBlock
p21702
tp21703
I1
s(g8891
I42
g8892
Vinsert
p21704
I27
VInfixExpression: +
p21705
tp21706
I2
s(g1790
I42
g1791
Vinsert
p21707
I60
VVariableDeclarationStatement
p21708
tp21709
I1
s(g17213
I42
g17214
Vinsert
p21710
I43
VSimpleType: AtomicLong
p21711
tp21712
I12
s(g13981
I42
g13982
Vinsert
p21713
I34
VNumberLiteral: 0
p21714
tp21715
I2
s(Vinsert
p21716
I42
VSimpleName: setExpr
p21717
Vinsert
p21718
I43
VSimpleType: OracleOuterExpr
p21719
tp21720
I2
s(Vinsert
p21721
I42
VSimpleName: getConnection
p21722
Vinsert
p21723
I42
VSimpleName: pstmt
p21724
tp21725
I1
s(g3123
I42
g3124
Vinsert
p21726
I52
VThisExpression
p21727
tp21728
I2
s(g31
I42
g32
Vinsert
p21729
I42
VSimpleName: subQueryMap
p21730
tp21731
I1
s(g3821
I42
g3822
Vinsert
p21732
I42
VSimpleName: Assert
p21733
tp21734
I2
s(g8796
I42
g8797
Vinsert
p21735
I42
VSimpleName: tableSrc
p21736
tp21737
I1
s(g20293
I42
g20294
Vinsert
p21738
I42
VSimpleName: propExpr
p21739
tp21740
I2
s(Vinsert
p21741
I42
VSimpleName: visit
p21742
Vinsert
p21743
I42
VSimpleName: MySqlBinaryExpr
p21744
tp21745
I1
s(Vinsert
p21746
I42
VSimpleName: getStatementName
p21747
Vinsert
p21748
I42
VSimpleName: MysqlDeallocatePrepareStatement
p21749
tp21750
I1
s(g16696
I42
g16697
Vinsert
p21751
I42
VSimpleName: sql
p21752
tp21753
I16
s(g19144
I42
g19145
Vinsert
p21754
I11
VCastExpression
p21755
tp21756
I3
s(g6577
I42
g6578
Vinsert
p21757
I45
VStringLiteral: "                         , \u005cn"
p21758
tp21759
I4
s(Vinsert
p21760
I42
VSimpleName: unwrap
p21761
Vinsert
p21762
I42
VSimpleName: c
p21763
tp21764
I1
s(Vinsert
p21765
I42
VSimpleName: getStatement
p21766
Vinsert
p21767
I43
VSimpleType: PoolableStatement
p21768
tp21769
I4
s(Vinsert
p21770
I42
VSimpleName: parseStatements
p21771
Vinsert
p21772
I45
VStringLiteral: "[Ad_Wait_Start_Time] varchar(255) NULL,\u005cn"
p21773
tp21774
I1
s(g5017
I42
g5018
Vinsert
p21775
I42
VSimpleName: MonitorDaoJdbcImpl
p21776
tp21777
I2
s(Vinsert
p21778
I42
VSimpleName: setCollectTimeMillis
p21779
Vinsert
p21780
I7
VAssignment: =
p21781
tp21782
I1
s(Vinsert
p21783
I42
VSimpleName: get
p21784
Vinsert
p21785
I42
VSimpleName: SQLCreateTableStatement
p21786
tp21787
I2
s(g5257
I42
g5258
Vinsert
p21788
I42
VSimpleName: String
p21789
tp21790
I6
s(g9524
I42
g9525
Vinsert
p21791
I45
VStringLiteral: "\u005ct\u005ctwhere ds = 20170627\u005cn"
p21792
tp21793
I1
s(g2824
I42
g2825
Vinsert
p21794
I78
VMarkerAnnotation
p21795
tp21796
I5
s(g4620
I42
g4621
Vinsert
p21797
I32
VMethodInvocation
p21798
tp21799
I4
s(g18831
I42
g18832
Vinsert
p21800
I39
VPrimitiveType: void
p21801
tp21802
I3
s(g8547
I42
g8548
Vinsert
p21803
I21
VExpressionStatement
p21804
tp21805
I11
s(g2299
I42
g2300
Vinsert
p21806
I40
VQualifiedName: Token.COLONCOLON
p21807
tp21808
I2
s(Vinsert
p21809
I42
VSimpleName: getName
p21810
Vinsert
p21811
I43
VSimpleType: JdbcDataSourceStat
p21812
tp21813
I2
s(g1309
I42
g1310
Vinsert
p21814
I42
VSimpleName: column
p21815
tp21816
I1
s(Vinsert
p21817
I42
VSimpleName: nextToken
p21818
Vinsert
p21819
I43
VSimpleType: PhoenixLexer
p21820
tp21821
I1
s(Vinsert
p21822
I42
VSimpleName: assertSame
p21823
Vinsert
p21824
I27
VInfixExpression: +
p21825
tp21826
I1
s(g10784
I42
g10785
Vinsert
p21827
I42
VSimpleName: decrementIndent
p21828
tp21829
I1
s(g2223
I42
g2224
Vinsert
p21830
I42
VSimpleName: lexer
p21831
tp21832
I2
s(g5699
I42
g5700
Vinsert
p21833
I40
VQualifiedName: SQLCaseStatement.Item
p21834
tp21835
I2
s(g1365
I42
g1366
Vinsert
p21836
I42
VSimpleName: setConfigLoader
p21837
tp21838
I1
s(g18938
I42
g18939
Vinsert
p21839
I42
VSimpleName: selectSubqueryTableSource
p21840
tp21841
I2
s(g14917
I42
g14918
Vinsert
p21842
I45
VStringLiteral: "\u005ct\u005ctAND b.type = p.type\u005cn"
p21843
tp21844
I1
s(Vinsert
p21845
I42
VSimpleName: setMaxPoolPreparedStatementPerConnectionSize
p21846
Vinsert
p21847
I21
VExpressionStatement
p21848
tp21849
I2
s(g2454
I42
g2455
Vinsert
p21850
I42
VSimpleName: database
p21851
tp21852
I2
s(g14951
I42
g14952
Vinsert
p21853
I54
VTryStatement
p21854
tp21855
I6
s(Vinsert
p21856
I42
VSimpleName: unwrap
p21857
Vinsert
p21858
I43
VSimpleType: DruidDataSource
p21859
tp21860
I1
s(g9267
I42
g9268
Vinsert
p21861
I70
VEnhancedForStatement
p21862
tp21863
I1
s(g3931
I42
g3932
Vinsert
p21864
I14
VClassInstanceCreation
p21865
tp21866
I5
s(g18278
I42
g18279
Vinsert
p21867
I42
VSimpleName: x
p21868
tp21869
I2
s(g4936
I42
g4937
Vinsert
p21870
I21
VExpressionStatement
p21871
tp21872
I3
s(g18016
I42
g18017
Vinsert
p21873
I43
VSimpleType: ConfigFilter
p21874
tp21875
I1
s(Vinsert
p21876
I42
VSimpleName: getMajorVersion
p21877
Vinsert
p21878
I45
VStringLiteral: "not support oracle driver "
p21879
tp21880
I1
s(Vinsert
p21881
I42
VSimpleName: hashCode
p21882
Vinsert
p21883
I42
VSimpleName: field
p21884
tp21885
I2
s(g19831
I42
g19832
Vinsert
p21886
I42
VSimpleName: mergedList
p21887
tp21888
I1
s(g20811
I42
g20812
Vinsert
p21889
I43
VSimpleType: SQLException
p21890
tp21891
I3
s(Vinsert
p21892
I42
VSimpleName: assertNull
p21893
Vinsert
p21894
I42
VSimpleName: getClob
p21895
tp21896
I1
s(g18224
I42
g18225
Vinsert
p21897
I42
VSimpleName: createSyntaxException
p21898
tp21899
I2
s(Vinsert
p21900
I42
VSimpleName: hashCode
p21901
Vinsert
p21902
I7
VAssignment: =
p21903
tp21904
I19
s(g6602
I42
g6603
Vinsert
p21905
I42
VSimpleName: get
p21906
tp21907
I10
s(Vinsert
p21908
I42
VSimpleName: toSQLString
p21909
Vinsert
p21910
I45
VStringLiteral: "\u005cn\u005ctdirectory_position NUMERIC,"
p21911
tp21912
I1
s(Vinsert
p21913
I42
VSimpleName: equals
p21914
Vinsert
p21915
I42
VSimpleName: Number
p21916
tp21917
I1
s(g647
I42
g648
Vinsert
p21918
I42
VSimpleName: declares
p21919
tp21920
I2
s(g6056
I42
g6057
Vinsert
p21921
I42
VSimpleName: print
p21922
tp21923
I1
s(Vinsert
p21924
I42
VSimpleName: setParent
p21925
Vinsert
p21926
I42
VSimpleName: setOrderBySiblings
p21927
tp21928
I1
s(g16289
I42
g16290
Vinsert
p21929
I14
VClassInstanceCreation
p21930
tp21931
I3
s(g11453
I42
g11454
Vinsert
p21932
I42
VSimpleName: visitor
p21933
tp21934
I14
s(g7888
I42
g7889
Vinsert
p21935
I42
VSimpleName: SQLServerStatementParser
p21936
tp21937
I2
s(g6689
I42
g6690
Vinsert
p21938
I45
VStringLiteral: "t_orders.status"
p21939
tp21940
I1
s(g972
I42
g973
Vinsert
p21941
I45
VStringLiteral: "\u005ct\u005c"ORACLE_USERNAME\u005c", \u005cn"
p21942
tp21943
I1
s(g871
I42
g872
Vinsert
p21944
I43
VSimpleType: MySqlBlockStatement
p21945
tp21946
I1
s(Vinsert
p21947
I42
VSimpleName: setParent
p21948
Vinsert
p21949
I42
VSimpleName: setOn
p21950
tp21951
I1
s(g4669
I42
g4670
Vinsert
p21952
I32
VMethodInvocation
p21953
tp21954
I1
s(g16213
I42
g16214
Vinsert
p21955
I85
VDimension
p21956
tp21957
I1
s(g20259
I42
g20260
Vinsert
p21958
I42
VSimpleName: binaryOpExpr
p21959
tp21960
I4
s(g1256
I42
g1257
Vinsert
p21961
I32
VMethodInvocation
p21962
tp21963
I3
s(g20811
I42
g20812
Vinsert
p21964
I42
VSimpleName: e
p21965
tp21966
I16
s(g13933
I42
g13934
Vinsert
p21967
I11
VCastExpression
p21968
tp21969
I1
s(g439
I42
g440
Vinsert
p21970
I59
VVariableDeclarationFragment
p21971
tp21972
I1
s(g20359
I42
g20360
Vinsert
p21973
I42
VSimpleName: row
p21974
tp21975
I1
s(g3022
I42
g3023
Vinsert
p21976
I42
VSimpleName: validConnectionChecker
p21977
tp21978
I4
s(g6562
I42
g6563
Vinsert
p21979
I38
VPrefixExpression: ++
p21980
tp21981
I1
s(Vinsert
p21982
I42
VSimpleName: getLiteral
p21983
Vinsert
p21984
I16
VConditionalExpression
p21985
tp21986
I1
s(g251
I42
g252
Vinsert
p21987
I44
VSingleVariableDeclaration
p21988
tp21989
I1
s(g10726
I42
g10727
Vinsert
p21990
I33
VNullLiteral
p21991
tp21992
I20
s(g14640
I42
g14641
Vinsert
p21993
I43
VSimpleType: WallConfig
p21994
tp21995
I2
s(Vinsert
p21996
I42
VSimpleName: assertEquals
p21997
Vinsert
p21998
I45
VStringLiteral: "set xxx=aaa;--ssss"
p21999
tp22000
I2
s(Vinsert
p22001
I42
VSimpleName: length
p22002
Vinsert
p22003
I42
VSimpleName: pos
p22004
tp22005
I1
s(g13331
I42
g13332
Vinsert
p22006
I32
VMethodInvocation
p22007
tp22008
I2
s(Vinsert
p22009
I42
VSimpleName: expr
p22010
Vinsert
p22011
I42
VSimpleName: SQLBinaryOpExpr
p22012
tp22013
I7
s(g11124
I42
g11125
Vinsert
p22014
I17
VConstructorInvocation
p22015
tp22016
I1
s(g17633
I42
g17634
Vinsert
p22017
I43
VSimpleType: SQLParameter
p22018
tp22019
I4
s(Vinsert
p22020
I42
VSimpleName: close
p22021
Vinsert
p22022
I42
VSimpleName: MockConnection
p22023
tp22024
I2
s(Vinsert
p22025
I42
VSimpleName: get
p22026
Vinsert
p22027
I42
VSimpleName: getJdbcPoolConnectionOpenCount
p22028
tp22029
I1
s(g434
I42
g435
Vinsert
p22030
I42
VSimpleName: PagerUtils
p22031
tp22032
I1
s(Vinsert
p22033
I42
VSimpleName: newUpdater
p22034
Vinsert
p22035
I74
VParameterizedType: AtomicIntegerFieldUpdater<WebSessionStat>
p22036
tp22037
I1
s(Vinsert
p22038
I42
VSimpleName: assertEquals
p22039
Vinsert
p22040
I40
VQualifiedName: JdbcUtils.MYSQL
p22041
tp22042
I4
s(g1380
I42
g1381
Vinsert
p22043
I60
VVariableDeclarationStatement
p22044
tp22045
I4
s(Vinsert
p22046
I42
VSimpleName: equalsIgnoreCase
p22047
Vinsert
p22048
I14
VClassInstanceCreation
p22049
tp22050
I1
s(g61
I42
g62
Vinsert
p22051
I42
VSimpleName: assertTrue
p22052
tp22053
I1
s(Vinsert
p22054
I42
VSimpleName: assertTrue
p22055
Vinsert
p22056
I42
VSimpleName: MySqlWallTest24
p22057
tp22058
I1
s(g14896
I42
g14897
Vinsert
p22059
I42
VSimpleName: Override
p22060
tp22061
I1
s(g4472
I42
g4473
Vinsert
p22062
I43
VSimpleType: Exception
p22063
tp22064
I1
s(g3134
I42
g3135
Vinsert
p22065
I10
VBreakStatement
p22066
tp22067
I1
s(g2228
I42
g2229
Vinsert
p22068
I44
VSingleVariableDeclaration
p22069
tp22070
I1
s(g4510
I42
g4511
Vinsert
p22071
I42
VSimpleName: exprB
p22072
tp22073
I1
s(g12547
I42
g12548
Vinsert
p22074
I43
VSimpleType: String
p22075
tp22076
I36
s(g5734
I42
g5735
Vinsert
p22077
I42
VSimpleName: getConnection
p22078
tp22079
I2
s(g16723
I42
g16724
Vinsert
p22080
I42
VSimpleName: acceptIdentifier
p22081
tp22082
I2
s(Vinsert
p22083
I42
VSimpleName: append
p22084
Vinsert
p22085
I45
VStringLiteral: "{name="
p22086
tp22087
I2
s(g4055
I42
g4056
Vinsert
p22088
I42
VSimpleName: parameter
p22089
tp22090
I1
s(g17022
I42
g17023
Vinsert
p22091
I42
VSimpleName: method
p22092
tp22093
I1
s(g16
I42
g17
Vinsert
p22094
I42
VSimpleName: addTableSource
p22095
tp22096
I1
s(g5384
I42
g5385
Vinsert
p22097
I43
VSimpleType: SQLInsertStatement
p22098
tp22099
I2
s(g21572
I42
g21573
Vinsert
p22100
I42
VSimpleName: SQLDataType
p22101
tp22102
I2
s(g3103
I42
g3104
Vinsert
p22103
I33
VNullLiteral
p22104
tp22105
I10
s(g3880
I42
g3881
Vinsert
p22106
I42
VSimpleName: invocation
p22107
tp22108
I1
s(g4391
I42
g4392
Vinsert
p22109
I39
VPrimitiveType: void
p22110
tp22111
I1
s(g5709
I42
g5710
Vinsert
p22112
I60
VVariableDeclarationStatement
p22113
tp22114
I1
s(Vinsert
p22115
I42
VSimpleName: setRemoveAbandonedTimeoutMillis
p22116
Vinsert
p22117
I42
VSimpleName: setTimeBetweenEvictionRunsMillis
p22118
tp22119
I1
s(g9150
I42
g9151
Vinsert
p22120
I83
VModifier: protected
p22121
tp22122
I1
s(g20342
I42
g20343
Vinsert
p22123
I45
VStringLiteral: "left join cs_coln coln on loan.loan_no = coln.loan_no\u005cn"
p22124
tp22125
I1
s(Vinsert
p22126
I42
VSimpleName: connectionClosed
p22127
Vinsert
p22128
I42
VSimpleName: getConnectionEventListeners
p22129
tp22130
I1
s(g14072
I42
g14073
Vinsert
p22131
I83
VModifier: public
p22132
tp22133
I3
s(g6776
I42
g6777
Vinsert
p22134
I42
VSimpleName: setValue
p22135
tp22136
I1
s(g3836
I42
g3837
Vinsert
p22137
I41
VReturnStatement
p22138
tp22139
I1
s(g13911
I42
g13912
Vinsert
p22140
I45
VStringLiteral: "druid.monitor.client.collectWebURIEnable"
p22141
tp22142
I1
s(g2474
I42
g2475
Vinsert
p22143
I32
VMethodInvocation
p22144
tp22145
I4
s(g4801
I42
g4802
Vinsert
p22146
I42
VSimpleName: driver
p22147
tp22148
I12
s(g14279
I42
g14280
Vinsert
p22149
I45
VStringLiteral: "\u005ct\u005ctAND a.SID = b.SID\u005cn"
p22150
tp22151
I1
s(Vinsert
p22152
I42
VSimpleName: assertEquals
p22153
Vinsert
p22154
I42
VSimpleName: test_add_4
p22155
tp22156
I1
s(g8108
I42
g8109
Vinsert
p22157
I42
VSimpleName: String
p22158
tp22159
I12
s(g111
I42
g112
Vinsert
p22160
I42
VSimpleName: lexer
p22161
tp22162
I3
s(Vinsert
p22163
I42
VSimpleName: mergeSql
p22164
Vinsert
p22165
I42
VSimpleName: setDbType
p22166
tp22167
I1
s(g21845
I42
g21846
Vinsert
p22168
I42
VSimpleName: Integer
p22169
tp22170
I1
s(g632
I42
g633
Vinsert
p22171
I32
VMethodInvocation
p22172
tp22173
I2
s(g16060
I42
g16061
Vinsert
p22174
I42
VSimpleName: x
p22175
tp22176
I2
s(Vinsert
p22177
I42
VSimpleName: readLock
p22178
Vinsert
p22179
I42
VSimpleName: hashSet
p22180
tp22181
I1
s(Vinsert
p22182
I42
VSimpleName: append
p22183
Vinsert
p22184
I42
VSimpleName: OracleTypeDef
p22185
tp22186
I1
s(g156
I42
g157
Vinsert
p22187
I21
VExpressionStatement
p22188
tp22189
I2
s(g20035
I42
g20036
Vinsert
p22190
I21
VExpressionStatement
p22191
tp22192
I1
s(Vinsert
p22193
I42
VSimpleName: connection_abort
p22194
Vinsert
p22195
I42
VSimpleName: createChain
p22196
tp22197
I1
s(Vinsert
p22198
I42
VSimpleName: setHints
p22199
Vinsert
p22200
I60
VVariableDeclarationStatement
p22201
tp22202
I1
s(g8030
I42
g8031
Vinsert
p22203
I39
VPrimitiveType: void
p22204
tp22205
I1
s(Vinsert
p22206
I42
VSimpleName: get
p22207
Vinsert
p22208
I42
VSimpleName: row
p22209
tp22210
I10
s(g3926
I42
g3927
Vinsert
p22211
I54
VTryStatement
p22212
tp22213
I2
s(Vinsert
p22214
I42
VSimpleName: setUrl
p22215
Vinsert
p22216
I60
VVariableDeclarationStatement
p22217
tp22218
I5
s(Vinsert
p22219
I42
VSimpleName: token
p22220
Vinsert
p22221
I43
VSimpleType: SQLServerTop
p22222
tp22223
I1
s(g4065
I42
g4066
Vinsert
p22224
I8
VBlock
p22225
tp22226
I1
s(g13483
I42
g13484
Vinsert
p22227
I42
VSimpleName: list
p22228
tp22229
I2
s(g7728
I42
g7729
Vinsert
p22230
I45
VStringLiteral: "\u005cn\u005ctcustomer_id number(6),"
p22231
tp22232
I2
s(Vinsert
p22233
I42
VSimpleName: nextToken
p22234
Vinsert
p22235
I40
VQualifiedName: Token.COMMIT
p22236
tp22237
I1
s(Vinsert
p22238
I42
VSimpleName: getInstance
p22239
Vinsert
p22240
I26
VImportDeclaration
p22241
tp22242
I1
s(g1251
I42
g1252
Vinsert
p22243
I42
VSimpleName: Object
p22244
tp22245
I2
s(g2997
I42
g2998
Vinsert
p22246
I39
VPrimitiveType: boolean
p22247
tp22248
I1
s(g7206
I42
g7207
Vinsert
p22249
I42
VSimpleName: config
p22250
tp22251
I2
s(g9327
I42
g9328
Vinsert
p22252
I42
VSimpleName: datasource
p22253
tp22254
I1
s(g17125
I42
g17126
Vinsert
p22255
I42
VSimpleName: serialVersionUID
p22256
tp22257
I1
s(g9405
I42
g9406
Vinsert
p22258
I45
VStringLiteral: "META-INF/druid-filter-wall-permit-function-oracle.txt"
p22259
tp22260
I1
s(g8480
I42
g8481
Vinsert
p22261
I21
VExpressionStatement
p22262
tp22263
I1
s(g8778
I42
g8779
Vinsert
p22264
I10
VBreakStatement
p22265
tp22266
I1
s(g4357
I42
g4358
Vinsert
p22267
I42
VSimpleName: print
p22268
tp22269
I1
s(g7965
I42
g7966
Vinsert
p22270
I59
VVariableDeclarationFragment
p22271
tp22272
I1
s(Vinsert
p22273
I42
VSimpleName: nextToken
p22274
Vinsert
p22275
I40
VQualifiedName: Token.START
p22276
tp22277
I1
s(g3360
I42
g3361
Vinsert
p22278
I42
VSimpleName: assertFalse
p22279
tp22280
I4
s(Vinsert
p22281
I42
VSimpleName: setPoolPreparedStatements
p22282
Vinsert
p22283
I42
VSimpleName: setPoolPreparedStatements
p22284
tp22285
I2
s(g10275
I42
g10276
Vinsert
p22286
I8
VBlock
p22287
tp22288
I1
s(Vinsert
p22289
I42
VSimpleName: assertTrue
p22290
Vinsert
p22291
I45
VStringLiteral: "SHOW FULL TABLES WHERE Table_type != 'VIEW'"
p22292
tp22293
I1
s(Vinsert
p22294
I42
VSimpleName: accept
p22295
Vinsert
p22296
I62
VInstanceofExpression
p22297
tp22298
I3
s(g20975
I42
g20976
Vinsert
p22299
I42
VSimpleName: JdbcSqlStatValue
p22300
tp22301
I1
s(g14324
I42
g14325
Vinsert
p22302
I42
VSimpleName: tableElementList
p22303
tp22304
I3
s(g11616
I42
g11617
Vinsert
p22305
I42
VSimpleName: e2
p22306
tp22307
I2
s(g12671
I42
g12672
Vinsert
p22308
I14
VClassInstanceCreation
p22309
tp22310
I1
s(g8465
I42
g8466
Vinsert
p22311
I8
VBlock
p22312
tp22313
I1
s(g21778
I42
g21779
Vinsert
p22314
I32
VMethodInvocation
p22315
tp22316
I1
s(g1070
I42
g1071
Vinsert
p22317
I43
VSimpleType: TestCase
p22318
tp22319
I26
s(g1978
I42
g1979
Vinsert
p22320
I43
VSimpleType: Object
p22321
tp22322
I1
s(g9410
I42
g9411
Vinsert
p22323
I42
VSimpleName: JMXUtils
p22324
tp22325
I1
s(g18672
I42
g18673
Vinsert
p22326
I43
VSimpleType: ResultSet
p22327
tp22328
I2
s(Vinsert
p22329
I42
VSimpleName: put
p22330
Vinsert
p22331
I34
VNumberLiteral: 2
p22332
tp22333
I1
s(g5826
I42
g5827
Vinsert
p22334
I40
VQualifiedName: Token.VIEW
p22335
tp22336
I1
s(g21006
I42
g21007
Vinsert
p22337
I45
VStringLiteral: "\u005ctWHAT VARCHAR(4000),\u005cn"
p22338
tp22339
I1
s(g836
I42
g837
Vinsert
p22340
I16
VConditionalExpression
p22341
tp22342
I1
s(g806
I42
g807
Vinsert
p22343
I83
VModifier: public
p22344
tp22345
I2
s(g14540
I42
g14541
Vinsert
p22346
I32
VMethodInvocation
p22347
tp22348
I1
s(g356
I42
g357
Vinsert
p22349
I21
VExpressionStatement
p22350
tp22351
I2
s(g1075
I42
g1076
Vinsert
p22352
I42
VSimpleName: stmt2
p22353
tp22354
I1
s(g14876
I42
g14877
Vinsert
p22355
I27
VInfixExpression: ==
p22356
tp22357
I1
s(g6587
I42
g6588
Vinsert
p22358
I45
VStringLiteral: "set "
p22359
tp22360
I1
s(g18531
I42
g18532
Vinsert
p22361
I14
VClassInstanceCreation
p22362
tp22363
I5
s(Vinsert
p22364
I42
VSimpleName: assertTrue
p22365
Vinsert
p22366
I83
VModifier: public
p22367
tp22368
I61
s(g6676
I42
g6677
Vinsert
p22369
I38
VPrefixExpression: ++
p22370
tp22371
I1
s(g2829
I42
g2830
Vinsert
p22372
I42
VSimpleName: serialVersionUID
p22373
tp22374
I1
s(Vinsert
p22375
I42
VSimpleName: getMessage
p22376
Vinsert
p22377
I43
VSimpleType: InstantiationException
p22378
tp22379
I1
s(g17861
I42
g17862
Vinsert
p22380
I42
VSimpleName: array
p22381
tp22382
I1
s(g17301
I42
g17302
Vinsert
p22383
I45
VStringLiteral: "CONNECT"
p22384
tp22385
I1
s(Vinsert
p22386
I42
VSimpleName: token
p22387
Vinsert
p22388
I43
VSimpleType: MySqlShowEventsStatement
p22389
tp22390
I2
s(g9103
I42
g9104
Vinsert
p22391
I32
VMethodInvocation
p22392
tp22393
I2
s(g8475
I42
g8476
Vinsert
p22394
I42
VSimpleName: parent
p22395
tp22396
I2
s(g11516
I42
g11517
Vinsert
p22397
I42
VSimpleName: test_true_1
p22398
tp22399
I1
s(g14212
I42
g14213
Vinsert
p22400
I42
VSimpleName: WebAppStat
p22401
tp22402
I2
s(g21039
I42
g21040
Vinsert
p22403
I44
VSingleVariableDeclaration
p22404
tp22405
I2
s(Vinsert
p22406
I42
VSimpleName: evalExpr
p22407
Vinsert
p22408
I42
VSimpleName: test_BigInteger
p22409
tp22410
I2
s(g3287
I42
g3288
Vinsert
p22411
I21
VExpressionStatement
p22412
tp22413
I2
s(g20947
I42
g20948
Vinsert
p22414
I42
VSimpleName: DruidDataSource
p22415
tp22416
I1
s(g5926
I42
g5927
Vinsert
p22417
I42
VSimpleName: sheet
p22418
tp22419
I1
s(g4045
I42
g4046
Vinsert
p22420
I11
VCastExpression
p22421
tp22422
I1
s(Vinsert
p22423
I42
VSimpleName: assertFalse
p22424
Vinsert
p22425
I42
VSimpleName: driverWrapper
p22426
tp22427
I1
s(g6134
I42
g6135
Vinsert
p22428
I42
VSimpleName: result
p22429
tp22430
I4
s(g19741
I42
g19742
Vinsert
p22431
I42
VSimpleName: lexer
p22432
tp22433
I1
s(Vinsert
p22434
I42
VSimpleName: lock
p22435
Vinsert
p22436
I83
VModifier: public
p22437
tp22438
I2
s(Vinsert
p22439
I42
VSimpleName: charAt
p22440
Vinsert
p22441
I13
VCharacterLiteral: '-'
p22442
tp22443
I1
s(Vinsert
p22444
I42
VSimpleName: isEmpty
p22445
Vinsert
p22446
I43
VSimpleType: SQLCommentHint
p22447
tp22448
I2
s(Vinsert
p22449
I42
VSimpleName: current
p22450
Vinsert
p22451
I42
VSimpleName: Exception
p22452
tp22453
I1
s(g19315
I42
g19316
Vinsert
p22454
I21
VExpressionStatement
p22455
tp22456
I3
s(g9195
I42
g9196
Vinsert
p22457
I42
VSimpleName: SQLStatementParser
p22458
tp22459
I13
s(g1584
I42
g1585
Vinsert
p22460
I42
VSimpleName: exprParser
p22461
tp22462
I1
s(g1486
I42
g1487
Vinsert
p22463
I43
VSimpleType: PGTypeCastExpr
p22464
tp22465
I2
s(g8765
I42
g8766
Vinsert
p22466
I45
VStringLiteral: "SELECT 1, 2, 3"
p22467
tp22468
I1
s(Vinsert
p22469
I42
VSimpleName: isExceptionFatal
p22470
Vinsert
p22471
I14
VClassInstanceCreation
p22472
tp22473
I7
s(Vinsert
p22474
I42
VSimpleName: error
p22475
Vinsert
p22476
I43
VSimpleType: WallRuntimeException
p22477
tp22478
I1
s(g1491
I42
g1492
Vinsert
p22479
I44
VSingleVariableDeclaration
p22480
tp22481
I1
s(g6323
I42
g6324
Vinsert
p22482
I43
VSimpleType: TestCase
p22483
tp22484
I1
s(g11231
I42
g11232
Vinsert
p22485
I42
VSimpleName: accept
p22486
tp22487
I1
s(g632
I42
g633
Vinsert
p22488
I42
VSimpleName: createChain
p22489
tp22490
I1
s(g10604
I42
g10605
Vinsert
p22491
I42
VSimpleName: param0Value
p22492
tp22493
I4
s(Vinsert
p22494
I42
VSimpleName: token
p22495
Vinsert
p22496
I43
VSimpleType: SQLCharExpr
p22497
tp22498
I1
s(g1352
I42
g1353
Vinsert
p22499
I39
VPrimitiveType: int
p22500
tp22501
I1
s(g20909
I42
g20910
Vinsert
p22502
I13
VCharacterLiteral: '\u005c''
p22503
tp22504
I1
s(g547
I42
g548
Vinsert
p22505
I45
VStringLiteral: "\u005ct, c.ownership_type, c.established_year, c.principal, c.annual_purchase, c.certification\u005cn"
p22506
tp22507
I1
s(g12189
I42
g12190
Vinsert
p22508
I45
VStringLiteral: "08"
p22509
tp22510
I1
s(g8067
I42
g8068
Vinsert
p22511
I42
VSimpleName: result
p22512
tp22513
I3
s(g2712
I42
g2713
Vinsert
p22514
I42
VSimpleName: SQLBlockStatement
p22515
tp22516
I2
s(g22449
I42
g22450
Vinsert
p22517
I39
VPrimitiveType: void
p22518
tp22519
I2
s(g10599
I42
g10600
Vinsert
p22520
I42
VSimpleName: filter
p22521
tp22522
I2
s(g5564
I42
g5565
Vinsert
p22523
I59
VVariableDeclarationFragment
p22524
tp22525
I1
s(g2464
I42
g2465
Vinsert
p22526
I83
VModifier: public
p22527
tp22528
I1
s(g19018
I42
g19019
Vinsert
p22529
I43
VSimpleType: List
p22530
tp22531
I2
s(g3719
I42
g3720
Vinsert
p22532
I21
VExpressionStatement
p22533
tp22534
I192
s(g7163
I42
g7164
Vinsert
p22535
I25
VIfStatement
p22536
tp22537
I19
s(Vinsert
p22538
I42
VSimpleName: getTarget
p22539
Vinsert
p22540
I59
VVariableDeclarationFragment
p22541
tp22542
I3
s(g17114
I42
g17115
Vinsert
p22543
I32
VMethodInvocation
p22544
tp22545
I6
s(Vinsert
p22546
I42
VSimpleName: token
p22547
Vinsert
p22548
I42
VSimpleName: name
p22549
tp22550
I12
s(Vinsert
p22551
I42
VSimpleName: toPGString
p22552
Vinsert
p22553
I42
VSimpleName: statementList
p22554
tp22555
I4
s(Vinsert
p22556
I42
VSimpleName: startsWith
p22557
Vinsert
p22558
I42
VSimpleName: entry
p22559
tp22560
I1
s(g12346
I42
g12347
Vinsert
p22561
I33
VNullLiteral
p22562
tp22563
I1
s(g8222
I42
g8223
Vinsert
p22564
I45
VStringLiteral: "\u005c\u005cu00"
p22565
tp22566
I1
s(g3417
I42
g3418
Vinsert
p22567
I34
VNumberLiteral: 1
p22568
tp22569
I3
s(g9028
I42
g9029
Vinsert
p22570
I8
VBlock
p22571
tp22572
I1
s(g3417
I42
g3418
Vinsert
p22573
I59
VVariableDeclarationFragment
p22574
tp22575
I5
s(g12475
I42
g12476
Vinsert
p22576
I42
VSimpleName: getConnectionHolder
p22577
tp22578
I2
s(Vinsert
p22579
I42
VSimpleName: indexOf
p22580
Vinsert
p22581
I42
VSimpleName: getMessage
p22582
tp22583
I1
s(g7440
I42
g7441
Vinsert
p22584
I27
VInfixExpression: ||
p22585
tp22586
I1
s(Vinsert
p22587
I42
VSimpleName: prepareCall
p22588
Vinsert
p22589
I42
VSimpleName: dataSource
p22590
tp22591
I1
s(Vinsert
p22592
I42
VSimpleName: visit
p22593
Vinsert
p22594
I43
VSimpleType: OracleCreateTableStatement
p22595
tp22596
I1
s(g14640
I42
g14641
Vinsert
p22597
I42
VSimpleName: test_true
p22598
tp22599
I1
s(g11574
I42
g11575
Vinsert
p22600
I60
VVariableDeclarationStatement
p22601
tp22602
I2
s(Vinsert
p22603
I42
VSimpleName: setAlias
p22604
Vinsert
p22605
I43
VSimpleType: String
p22606
tp22607
I1
s(g2258
I42
g2259
Vinsert
p22608
I44
VSingleVariableDeclaration
p22609
tp22610
I2
s(Vinsert
p22611
I42
VSimpleName: size
p22612
Vinsert
p22613
I42
VSimpleName: showKeys
p22614
tp22615
I1
s(Vinsert
p22616
I42
VSimpleName: nextToken
p22617
Vinsert
p22618
I45
VStringLiteral: "TABLE OF "
p22619
tp22620
I1
s(g17114
I42
g17115
Vinsert
p22621
I59
VVariableDeclarationFragment
p22622
tp22623
I3
s(g3636
I42
g3637
Vinsert
p22624
I42
VSimpleName: accept
p22625
tp22626
I8
s(g9977
I42
g9978
Vinsert
p22627
I26
VImportDeclaration
p22628
tp22629
I24
s(g7320
I42
g7321
Vinsert
p22630
I36
VParenthesizedExpression
p22631
tp22632
I1
s(g156
I42
g157
Vinsert
p22633
I43
VSimpleType: Thread
p22634
tp22635
I1
s(Vinsert
p22636
I42
VSimpleName: toSQLString
p22637
Vinsert
p22638
I42
VSimpleName: String
p22639
tp22640
I8
s(g16075
I42
g16076
Vinsert
p22641
I42
VSimpleName: decrementIndent
p22642
tp22643
I1
s(g15314
I42
g15315
Vinsert
p22644
I40
VQualifiedName: System.out
p22645
tp22646
I1
s(Vinsert
p22647
I42
VSimpleName: toSQLString
p22648
Vinsert
p22649
I45
VStringLiteral: "\u005ctsnapshot_id,\u005cn"
p22650
tp22651
I1
s(g4946
I42
g4947
Vinsert
p22652
I40
VQualifiedName: SQLBinaryOperator.GreaterThanOrEqual
p22653
tp22654
I1
s(g469
I42
g470
Vinsert
p22655
I42
VSimpleName: x
p22656
tp22657
I18
s(Vinsert
p22658
I42
VSimpleName: formatOdps
p22659
Vinsert
p22660
I45
VStringLiteral: "\u005cnfrom table1;"
p22661
tp22662
I1
s(Vinsert
p22663
I42
VSimpleName: get
p22664
Vinsert
p22665
I42
VSimpleName: executeCount
p22666
tp22667
I2
s(g4814
I42
g4815
Vinsert
p22668
I36
VParenthesizedExpression
p22669
tp22670
I2
s(g216
I42
g217
Vinsert
p22671
I42
VSimpleName: formatOdps
p22672
tp22673
I24
s(g2034
I42
g2035
Vinsert
p22674
I42
VSimpleName: method
p22675
tp22676
I2
s(g301
I42
g302
Vinsert
p22677
I32
VMethodInvocation
p22678
tp22679
I217
s(g4745
I42
g4746
Vinsert
p22680
I42
VSimpleName: conn
p22681
tp22682
I1
s(g18871
I42
g18872
Vinsert
p22683
I40
VQualifiedName: Token.GROUP
p22684
tp22685
I1
s(g20856
I42
g20857
Vinsert
p22686
I60
VVariableDeclarationStatement
p22687
tp22688
I1
s(g567
I42
g568
Vinsert
p22689
I59
VVariableDeclarationFragment
p22690
tp22691
I3
s(g2842
I42
g2843
Vinsert
p22692
I32
VMethodInvocation
p22693
tp22694
I10
s(g13089
I42
g13090
Vinsert
p22695
I42
VSimpleName: DataSourceProxyImpl
p22696
tp22697
I1
s(g7346
I42
g7347
Vinsert
p22698
I43
VSimpleType: MySqlBinaryExpr
p22699
tp22700
I1
s(g10571
I42
g10572
Vinsert
p22701
I27
VInfixExpression: ==
p22702
tp22703
I4
s(g12138
I42
g12139
Vinsert
p22704
I45
VStringLiteral: "ORDER BY seller_no, invoice_date;"
p22705
tp22706
I1
s(g5195
I42
g5196
Vinsert
p22707
I42
VSimpleName: SQLServerOutput
p22708
tp22709
I1
s(g5903
I42
g5904
Vinsert
p22710
I45
VStringLiteral: "all"
p22711
tp22712
I1
s(g821
I42
g822
Vinsert
p22713
I36
VParenthesizedExpression
p22714
tp22715
I1
s(g6572
I42
g6573
Vinsert
p22716
I42
VSimpleName: printWP_ORDERS
p22717
tp22718
I1
s(g1627
I42
g1628
Vinsert
p22719
I60
VVariableDeclarationStatement
p22720
tp22721
I6
s(g1145
I42
g1146
Vinsert
p22722
I57
VTypeLiteral
p22723
tp22724
I1
s(g18512
I42
g18513
Vinsert
p22725
I42
VSimpleName: owner
p22726
tp22727
I1
s(g6607
I42
g6608
Vinsert
p22728
I32
VMethodInvocation
p22729
tp22730
I3
s(g16927
I42
g16928
Vinsert
p22731
I44
VSingleVariableDeclaration
p22732
tp22733
I2
s(g9124
I42
g9125
Vinsert
p22734
I34
VNumberLiteral: 0
p22735
tp22736
I4
s(g13784
I42
g13785
Vinsert
p22737
I42
VSimpleName: tok
p22738
tp22739
I2
s(Vinsert
p22740
I42
VSimpleName: token
p22741
Vinsert
p22742
I40
VQualifiedName: Token.RPAREN
p22743
tp22744
I3
s(g4170
I42
g4171
Vinsert
p22745
I52
VThisExpression
p22746
tp22747
I1
s(g6712
I42
g6713
Vinsert
p22748
I43
VSimpleType: SQLBinaryOperator
p22749
tp22750
I2
s(g16
I42
g17
Vinsert
p22751
I39
VPrimitiveType: long
p22752
tp22753
I2
s(g2568
I42
g2569
Vinsert
p22754
I42
VSimpleName: pid
p22755
tp22756
I1
s(Vinsert
p22757
I42
VSimpleName: token
p22758
Vinsert
p22759
I74
VParameterizedType: List<SQLHint>
p22760
tp22761
I2
s(g18852
I42
g18853
Vinsert
p22762
I42
VSimpleName: cause
p22763
tp22764
I2
s(g10642
I42
g10643
Vinsert
p22765
I42
VSimpleName: b
p22766
tp22767
I1
s(g11555
I42
g11556
Vinsert
p22768
I42
VSimpleName: DruidXADataSource
p22769
tp22770
I1
s(g7063
I42
g7064
Vinsert
p22771
I42
VSimpleName: JdbcSqlStat
p22772
tp22773
I2
s(Vinsert
p22774
I42
VSimpleName: printStackTrace
p22775
Vinsert
p22776
I54
VTryStatement
p22777
tp22778
I1
s(g4457
I42
g4458
Vinsert
p22779
I42
VSimpleName: lastStatementError
p22780
tp22781
I2
s(Vinsert
p22782
I42
VSimpleName: setCluster
p22783
Vinsert
p22784
I45
VStringLiteral: "default"
p22785
tp22786
I1
s(g15632
I42
g15633
Vinsert
p22787
I45
VStringLiteral: "\u005ct\u005ct\u005ctSET commission_pct = commission_pct + comm_incr;\u005cn"
p22788
tp22789
I1
s(g7955
I42
g7956
Vinsert
p22790
I42
VSimpleName: dataSource
p22791
tp22792
I2
s(g4298
I42
g4299
Vinsert
p22793
I25
VIfStatement
p22794
tp22795
I2
s(g5176
I42
g5177
Vinsert
p22796
I42
VSimpleName: stmt
p22797
tp22798
I2
s(g266
I42
g267
Vinsert
p22799
I42
VSimpleName: tenantColumn
p22800
tp22801
I2
s(Vinsert
p22802
I42
VSimpleName: toSQLString
p22803
Vinsert
p22804
I45
VStringLiteral: " DROP ANY MATERIALIZED VIEW,"
p22805
tp22806
I1
s(Vinsert
p22807
I42
VSimpleName: put
p22808
Vinsert
p22809
I42
VSimpleName: username
p22810
tp22811
I2
s(Vinsert
p22812
I42
VSimpleName: get
p22813
Vinsert
p22814
I42
VSimpleName: arg
p22815
tp22816
I2
s(g11360
I42
g11361
Vinsert
p22817
I43
VSimpleType: SQLServerInsertStatement
p22818
tp22819
I2
s(g8306
I42
g8307
Vinsert
p22820
I42
VSimpleName: dataSourceLog
p22821
tp22822
I5
s(g14990
I42
g14991
Vinsert
p22823
I42
VSimpleName: count
p22824
tp22825
I1
s(Vinsert
p22826
I42
VSimpleName: getCollate
p22827
Vinsert
p22828
I45
VStringLiteral: " CHARACTER SET "
p22829
tp22830
I1
s(g4543
I42
g4544
Vinsert
p22831
I14
VClassInstanceCreation
p22832
tp22833
I3
s(g11983
I42
g11984
Vinsert
p22834
I32
VMethodInvocation
p22835
tp22836
I14
s(g20626
I42
g20627
Vinsert
p22837
I45
VStringLiteral: "unchecked"
p22838
tp22839
I1
s(Vinsert
p22840
I42
VSimpleName: assertFalse
p22841
Vinsert
p22842
I42
VSimpleName: MySqlWallTest7
p22843
tp22844
I1
s(g1448
I42
g1449
Vinsert
p22845
I42
VSimpleName: Override
p22846
tp22847
I2
s(Vinsert
p22848
I42
VSimpleName: getStatementProxy
p22849
Vinsert
p22850
I42
VSimpleName: Clob
p22851
tp22852
I1
s(g1943
I42
g1944
Vinsert
p22853
I42
VSimpleName: PreparedStatement
p22854
tp22855
I1
s(g17012
I42
g17013
Vinsert
p22856
I8
VBlock
p22857
tp22858
I2
s(g997
I42
g998
Vinsert
p22859
I27
VInfixExpression: <
p22860
tp22861
I1
s(g15632
I42
g15633
Vinsert
p22862
I45
VStringLiteral: "\u005ctEND\u005cn"
p22863
tp22864
I1
s(g8409
I42
g8410
Vinsert
p22865
I42
VSimpleName: SpringMethodStat
p22866
tp22867
I1
s(g4268
I42
g4269
Vinsert
p22868
I42
VSimpleName: print
p22869
tp22870
I2
s(g10182
I42
g10183
Vinsert
p22871
I42
VSimpleName: SQLPrintableVisitor
p22872
tp22873
I1
s(Vinsert
p22874
I42
VSimpleName: executeQuery
p22875
Vinsert
p22876
I43
VSimpleType: Statement
p22877
tp22878
I6
s(g5045
I42
g5046
Vinsert
p22879
I42
VSimpleName: SQLBooleanExpr
p22880
tp22881
I1
s(g16
I42
g17
Vinsert
p22882
I83
VModifier: public
p22883
tp22884
I5
s(g2193
I42
g2194
Vinsert
p22885
I59
VVariableDeclarationFragment
p22886
tp22887
I110
s(g8716
I42
g8717
Vinsert
p22888
I42
VSimpleName: histogram_1000_10000
p22889
tp22890
I1
s(g13808
I42
g13809
Vinsert
p22891
I42
VSimpleName: schema
p22892
tp22893
I1
s(Vinsert
p22894
I42
VSimpleName: assertEquals
p22895
Vinsert
p22896
I42
VSimpleName: ResultSetProxy
p22897
tp22898
I2
s(g18445
I42
g18446
Vinsert
p22899
I7
VAssignment: =
p22900
tp22901
I1
s(g3271
I42
g3272
Vinsert
p22902
I42
VSimpleName: Assert
p22903
tp22904
I2
s(Vinsert
p22905
I42
VSimpleName: expr
p22906
Vinsert
p22907
I43
VSimpleType: OracleIntervalExpr
p22908
tp22909
I1
s(g13191
I42
g13192
Vinsert
p22910
I59
VVariableDeclarationFragment
p22911
tp22912
I7
s(Vinsert
p22913
I42
VSimpleName: error
p22914
Vinsert
p22915
I42
VSimpleName: DruidAbstractDataSource
p22916
tp22917
I1
s(g13808
I42
g13809
Vinsert
p22918
I42
VSimpleName: getDefaultSchema
p22919
tp22920
I1
s(g14234
I42
g14235
Vinsert
p22921
I42
VSimpleName: pos
p22922
tp22923
I1
s(Vinsert
p22924
I42
VSimpleName: expr
p22925
Vinsert
p22926
I43
VSimpleType: PGCidrExpr
p22927
tp22928
I2
s(Vinsert
p22929
I42
VSimpleName: getOperator
p22930
Vinsert
p22931
I40
VQualifiedName: SQLBinaryOperator.NotEqual
p22932
tp22933
I1
s(g4890
I42
g4891
Vinsert
p22934
I85
VDimension
p22935
tp22936
I1
s(Vinsert
p22937
I42
VSimpleName: parseStatements
p22938
Vinsert
p22939
I45
VStringLiteral: "  PRIMARY KEY (`id`,`c_tinyint`),\u005cn"
p22940
tp22941
I1
s(g18383
I42
g18384
Vinsert
p22942
I42
VSimpleName: ch0
p22943
tp22944
I1
s(g14006
I42
g14007
Vinsert
p22945
I44
VSingleVariableDeclaration
p22946
tp22947
I1
s(g8919
I42
g8920
Vinsert
p22948
I42
VSimpleName: lexer
p22949
tp22950
I1
s(g346
I42
g347
Vinsert
p22951
I42
VSimpleName: map
p22952
tp22953
I2
s(g17311
I42
g17312
Vinsert
p22954
I42
VSimpleName: setDriverClass
p22955
tp22956
I1
s(g6485
I42
g6486
Vinsert
p22957
I33
VNullLiteral
p22958
tp22959
I1
s(g2697
I42
g2698
Vinsert
p22960
I40
VQualifiedName: JdbcConstants.MYSQL
p22961
tp22962
I1
s(g2824
I42
g2825
Vinsert
p22963
I31
VMethodDeclaration
p22964
tp22965
I25
s(g8760
I42
g8761
Vinsert
p22966
I42
VSimpleName: SQLSelectStatement
p22967
tp22968
I2
s(g11634
I42
g11635
Vinsert
p22969
I14
VClassInstanceCreation
p22970
tp22971
I1
s(g12138
I42
g12139
Vinsert
p22972
I45
VStringLiteral: "WHERE invoice_date < CURRENT_DATE\u005cn"
p22973
tp22974
I1
s(Vinsert
p22975
I42
VSimpleName: getBean
p22976
Vinsert
p22977
I21
VExpressionStatement
p22978
tp22979
I1
s(g5351
I42
g5352
Vinsert
p22980
I42
VSimpleName: ValidConnectionCheckerAdapter
p22981
tp22982
I2
s(g1695
I42
g1696
Vinsert
p22983
I42
VSimpleName: getUrl
p22984
tp22985
I1
s(Vinsert
p22986
I42
VSimpleName: values
p22987
Vinsert
p22988
I43
VSimpleType: ConcurrentHashMap
p22989
tp22990
I1
s(g6871
I42
g6872
Vinsert
p22991
I42
VSimpleName: label
p22992
tp22993
I1
s(g6830
I42
g6831
Vinsert
p22994
I45
VStringLiteral: "SELECT *\u005cn"
p22995
tp22996
I1
s(g9503
I42
g9504
Vinsert
p22997
I43
VSimpleType: WallProviderStatValue
p22998
tp22999
I2
s(g14274
I42
g14275
Vinsert
p23000
I42
VSimpleName: Exception
p23001
tp23002
I1
s(g19741
I42
g19742
Vinsert
p23003
I42
VSimpleName: MySqlOutFileExpr
p23004
tp23005
I2
s(g7620
I42
g7621
Vinsert
p23006
I42
VSimpleName: ucase
p23007
tp23008
I1
s(Vinsert
p23009
I42
VSimpleName: visit
p23010
Vinsert
p23011
I42
VSimpleName: Values
p23012
tp23013
I1
s(g700
I42
g701
Vinsert
p23014
I42
VSimpleName: connectProperties
p23015
tp23016
I1
s(g11390
I42
g11391
Vinsert
p23017
I42
VSimpleName: lowerCaseName
p23018
tp23019
I1
s(g4594
I42
g4595
Vinsert
p23020
I52
VThisExpression
p23021
tp23022
I1
s(g18187
I42
g18188
Vinsert
p23023
I42
VSimpleName: Exception
p23024
tp23025
I4
s(Vinsert
p23026
I42
VSimpleName: equals
p23027
Vinsert
p23028
I40
VQualifiedName: JdbcUtils.HBASE
p23029
tp23030
I2
s(Vinsert
p23031
I42
VSimpleName: clear
p23032
Vinsert
p23033
I42
VSimpleName: writeLock
p23034
tp23035
I1
s(g18086
I42
g18087
Vinsert
p23036
I42
VSimpleName: functions
p23037
tp23038
I7
s(g6544
I42
g6545
Vinsert
p23039
I59
VVariableDeclarationFragment
p23040
tp23041
I28
s(g1360
I42
g1361
Vinsert
p23042
I60
VVariableDeclarationStatement
p23043
tp23044
I17
s(Vinsert
p23045
I42
VSimpleName: getType
p23046
Vinsert
p23047
I42
VSimpleName: MySqlKillStatement
p23048
tp23049
I1
s(g7477
I42
g7478
Vinsert
p23050
I42
VSimpleName: System
p23051
tp23052
I1
s(g5643
I42
g5644
Vinsert
p23053
I42
VSimpleName: oracleConn
p23054
tp23055
I2
s(Vinsert
p23056
I42
VSimpleName: nextToken
p23057
Vinsert
p23058
I45
VStringLiteral: "WITH"
p23059
tp23060
I1
s(g11365
I42
g11366
Vinsert
p23061
I32
VMethodInvocation
p23062
tp23063
I3
s(g16792
I42
g16793
Vinsert
p23064
I43
VSimpleType: ColumnMetaData
p23065
tp23066
I2
s(g1125
I42
g1126
Vinsert
p23067
I25
VIfStatement
p23068
tp23069
I1
s(g7855
I42
g7856
Vinsert
p23070
I40
VQualifiedName: that.joinType
p23071
tp23072
I1
s(g16778
I42
g16779
Vinsert
p23073
I42
VSimpleName: getMajorVersion
p23074
tp23075
I2
s(g1883
I42
g1884
Vinsert
p23076
I42
VSimpleName: visit
p23077
tp23078
I1
s(g3664
I42
g3665
Vinsert
p23079
I42
VSimpleName: x
p23080
tp23081
I2
s(g16005
I42
g16006
Vinsert
p23082
I39
VPrimitiveType: void
p23083
tp23084
I1
s(g3144
I42
g3145
Vinsert
p23085
I21
VExpressionStatement
p23086
tp23087
I2
s(Vinsert
p23088
I42
VSimpleName: getProperty
p23089
Vinsert
p23090
I83
VModifier: final
p23091
tp23092
I2
s(Vinsert
p23093
I42
VSimpleName: name
p23094
Vinsert
p23095
I45
VStringLiteral: "ROW EXCLUSIVE"
p23096
tp23097
I1
s(g18749
I42
g18750
Vinsert
p23098
I32
VMethodInvocation
p23099
tp23100
I9
s(g19323
I42
g19324
Vinsert
p23101
I42
VSimpleName: getData
p23102
tp23103
I2
s(g1858
I42
g1859
Vinsert
p23104
I42
VSimpleName: PushService
p23105
tp23106
I1
s(g15119
I42
g15120
Vinsert
p23107
I42
VSimpleName: setParent
p23108
tp23109
I1
s(g9267
I42
g9268
Vinsert
p23110
I32
VMethodInvocation
p23111
tp23112
I4
s(Vinsert
p23113
I42
VSimpleName: setDefaultRowPretch
p23114
Vinsert
p23115
I59
VVariableDeclarationFragment
p23116
tp23117
I1
s(Vinsert
p23118
I42
VSimpleName: size
p23119
Vinsert
p23120
I42
VSimpleName: DruidDataSourceStatManager
p23121
tp23122
I2
s(g8052
I42
g8053
Vinsert
p23123
I21
VExpressionStatement
p23124
tp23125
I2
s(Vinsert
p23126
I42
VSimpleName: nextToken
p23127
Vinsert
p23128
I43
VSimpleType: SQLSequenceExpr
p23129
tp23130
I4
s(g6152
I42
g6153
Vinsert
p23131
I40
VQualifiedName: VisitorFeature.OutputParameterized
p23132
tp23133
I4
s(g8682
I42
g8683
Vinsert
p23134
I45
VStringLiteral: "\u005ctON employee\u005cn"
p23135
tp23136
I1
s(g15443
I42
g15444
Vinsert
p23137
I42
VSimpleName: SQLServerSelect
p23138
tp23139
I1
s(g4584
I42
g4585
Vinsert
p23140
I42
VSimpleName: SQLUtils
p23141
tp23142
I3
s(g1765
I42
g1766
Vinsert
p23143
I21
VExpressionStatement
p23144
tp23145
I6
s(g19823
I42
g19824
Vinsert
p23146
I32
VMethodInvocation
p23147
tp23148
I3
s(Vinsert
p23149
I42
VSimpleName: accept0
p23150
Vinsert
p23151
I45
VStringLiteral: "INTERVAL YEAR"
p23152
tp23153
I1
s(Vinsert
p23154
I42
VSimpleName: getName
p23155
Vinsert
p23156
I42
VSimpleName: owner
p23157
tp23158
I3
s(g7932
I42
g7933
Vinsert
p23159
I42
VSimpleName: rs
p23160
tp23161
I4
s(g7512
I42
g7513
Vinsert
p23162
I21
VExpressionStatement
p23163
tp23164
I1
s(g5685
I42
g5686
Vinsert
p23165
I32
VMethodInvocation
p23166
tp23167
I1
s(g13868
I42
g13869
Vinsert
p23168
I42
VSimpleName: println
p23169
tp23170
I1
s(g1279
I42
g1280
Vinsert
p23171
I42
VSimpleName: CallableStatement
p23172
tp23173
I1
s(Vinsert
p23174
I42
VSimpleName: visit
p23175
Vinsert
p23176
I42
VSimpleName: fractionalSecondsPrecision
p23177
tp23178
I2
s(g21632
I42
g21633
Vinsert
p23179
I42
VSimpleName: getSubQuery
p23180
tp23181
I3
s(g7996
I42
g7997
Vinsert
p23182
I45
VStringLiteral: "SET "
p23183
tp23184
I1
s(g13612
I42
g13613
Vinsert
p23185
I42
VSimpleName: list
p23186
tp23187
I2
s(g8969
I42
g8970
Vinsert
p23188
I42
VSimpleName: Long
p23189
tp23190
I1
s(g7477
I42
g7478
Vinsert
p23191
I59
VVariableDeclarationFragment
p23192
tp23193
I1
s(g670
I42
g671
Vinsert
p23194
I32
VMethodInvocation
p23195
tp23196
I1
s(Vinsert
p23197
I42
VSimpleName: assertNotNull
p23198
Vinsert
p23199
I42
VSimpleName: getRef
p23200
tp23201
I1
s(Vinsert
p23202
I42
VSimpleName: assertTrue
p23203
Vinsert
p23204
I42
VSimpleName: dsStmt
p23205
tp23206
I1
s(g6750
I42
g6751
Vinsert
p23207
I24
VForStatement
p23208
tp23209
I1
s(Vinsert
p23210
I42
VSimpleName: evaluate
p23211
Vinsert
p23212
I21
VExpressionStatement
p23213
tp23214
I1
s(g8648
I42
g8649
Vinsert
p23215
I59
VVariableDeclarationFragment
p23216
tp23217
I4
s(g10726
I42
g10727
Vinsert
p23218
I25
VIfStatement
p23219
tp23220
I26
s(g6737
I42
g6738
Vinsert
p23221
I42
VSimpleName: SQLParserFeature
p23222
tp23223
I1
s(g5252
I42
g5253
Vinsert
p23224
I45
VStringLiteral: "\u005ct\u005ctt_temp (processId,resultId,gmt_create,gmt_modified,result_content,result_number)\u005cn"
p23225
tp23226
I1
s(g2596
I42
g2597
Vinsert
p23227
I34
VNumberLiteral: 1
p23228
tp23229
I1
s(g753
I42
g754
Vinsert
p23230
I42
VSimpleName: map
p23231
tp23232
I1
s(g11890
I42
g11891
Vinsert
p23233
I42
VSimpleName: SQLExpr
p23234
tp23235
I4
s(g11880
I42
g11881
Vinsert
p23236
I45
VStringLiteral: "\u005cn\u005ctPARTITION europe VALUES ('GERMANY', 'ITALY', 'SWITZERLAND'), "
p23237
tp23238
I2
s(g5012
I42
g5013
Vinsert
p23239
I42
VSimpleName: exprParser
p23240
tp23241
I2
s(Vinsert
p23242
I42
VSimpleName: getAttribute
p23243
Vinsert
p23244
I42
VSimpleName: wallConditionContext
p23245
tp23246
I1
s(g16178
I42
g16179
Vinsert
p23247
I45
VStringLiteral: "SELECT task_id\u005cn"
p23248
tp23249
I1
s(Vinsert
p23250
I42
VSimpleName: getName
p23251
Vinsert
p23252
I42
VSimpleName: SQLDropSequenceStatement
p23253
tp23254
I1
s(g22757
I42
g22758
Vinsert
p23255
I42
VSimpleName: hints
p23256
tp23257
I4
s(Vinsert
p23258
I42
VSimpleName: getCharset
p23259
Vinsert
p23260
I42
VSimpleName: parseStatement
p23261
tp23262
I1
s(Vinsert
p23263
I42
VSimpleName: getConnection
p23264
Vinsert
p23265
I42
VSimpleName: lobCreator
p23266
tp23267
I1
s(g16927
I42
g16928
Vinsert
p23268
I42
VSimpleName: setId
p23269
tp23270
I2
s(Vinsert
p23271
I42
VSimpleName: fnv_64_lower
p23272
Vinsert
p23273
I9
VBooleanLiteral: true
p23274
tp23275
I2
s(g4323
I42
g4324
Vinsert
p23276
I42
VSimpleName: NullPointerException
p23277
tp23278
I1
s(g10747
I42
g10748
Vinsert
p23279
I42
VSimpleName: MAX_RECORD_SQL_COUNT
p23280
tp23281
I1
s(g8891
I42
g8892
Vinsert
p23282
I38
VPrefixExpression: ++
p23283
tp23284
I2
s(g7612
I42
g7613
Vinsert
p23285
I42
VSimpleName: isForReadOnly
p23286
tp23287
I1
s(Vinsert
p23288
I42
VSimpleName: close
p23289
Vinsert
p23290
I42
VSimpleName: JdbcUtils
p23291
tp23292
I12
s(Vinsert
p23293
I42
VSimpleName: getQuery
p23294
Vinsert
p23295
I42
VSimpleName: selectStmt
p23296
tp23297
I2
s(g3579
I42
g3580
Vinsert
p23298
I42
VSimpleName: paren
p23299
tp23300
I2
s(g11840
I42
g11841
Vinsert
p23301
I42
VSimpleName: left
p23302
tp23303
I1
s(g3355
I42
g3356
Vinsert
p23304
I85
VDimension
p23305
tp23306
I2
s(g15153
I42
g15154
Vinsert
p23307
I42
VSimpleName: config
p23308
tp23309
I2
s(g6597
I42
g6598
Vinsert
p23310
I42
VSimpleName: resource
p23311
tp23312
I3
s(Vinsert
p23313
I42
VSimpleName: toSQLString
p23314
Vinsert
p23315
I45
VStringLiteral: "\u005ct\u005ct\u005ctINITIAL 65536\u005cn"
p23316
tp23317
I2
s(g13504
I42
g13505
Vinsert
p23318
I43
VSimpleType: String
p23319
tp23320
I5
s(g12278
I42
g12279
Vinsert
p23321
I40
VQualifiedName: ResultSet.FETCH_REVERSE
p23322
tp23323
I1
s(g1725
I42
g1726
Vinsert
p23324
I42
VSimpleName: table
p23325
tp23326
I1
s(Vinsert
p23327
I42
VSimpleName: parseInt
p23328
Vinsert
p23329
I42
VSimpleName: getDouble
p23330
tp23331
I1
s(g16778
I42
g16779
Vinsert
p23332
I39
VPrimitiveType: int
p23333
tp23334
I2
s(g5520
I42
g5521
Vinsert
p23335
I42
VSimpleName: e
p23336
tp23337
I1
s(Vinsert
p23338
I42
VSimpleName: println
p23339
Vinsert
p23340
I42
VSimpleName: createSchemaStatVisitor
p23341
tp23342
I12
s(g6421
I42
g6422
Vinsert
p23343
I42
VSimpleName: dataType
p23344
tp23345
I1
s(g11217
I42
g11218
Vinsert
p23346
I25
VIfStatement
p23347
tp23348
I3
s(g14244
I42
g14245
Vinsert
p23349
I42
VSimpleName: get
p23350
tp23351
I1
s(g14160
I42
g14161
Vinsert
p23352
I42
VSimpleName: DruidDataSource
p23353
tp23354
I1
s(g9397
I42
g9398
Vinsert
p23355
I32
VMethodInvocation
p23356
tp23357
I2
s(g18145
I42
g18146
Vinsert
p23358
I45
VStringLiteral: "{conn-"
p23359
tp23360
I1
s(g2875
I42
g2876
Vinsert
p23361
I42
VSimpleName: ds
p23362
tp23363
I4
s(g2760
I42
g2761
Vinsert
p23364
I43
VSimpleType: SQLTruncateStatement
p23365
tp23366
I1
s(Vinsert
p23367
I42
VSimpleName: assertEquals
p23368
Vinsert
p23369
I42
VSimpleName: test_select
p23370
tp23371
I1
s(g19115
I42
g19116
Vinsert
p23372
I25
VIfStatement
p23373
tp23374
I1
s(g8038
I42
g8039
Vinsert
p23375
I42
VSimpleName: paramObject
p23376
tp23377
I1
s(g86
I42
g87
Vinsert
p23378
I32
VMethodInvocation
p23379
tp23380
I1
s(g8542
I42
g8543
Vinsert
p23381
I9
VBooleanLiteral: true
p23382
tp23383
I2
s(Vinsert
p23384
I42
VSimpleName: equals
p23385
Vinsert
p23386
I42
VSimpleName: setShardingSupport
p23387
tp23388
I1
s(g5839
I42
g5840
Vinsert
p23389
I21
VExpressionStatement
p23390
tp23391
I18
s(Vinsert
p23392
I42
VSimpleName: get
p23393
Vinsert
p23394
I43
VSimpleType: ObjectName
p23395
tp23396
I1
s(g14597
I42
g14598
Vinsert
p23397
I42
VSimpleName: SQLStatement
p23398
tp23399
I2
s(g11453
I42
g11454
Vinsert
p23400
I43
VSimpleType: TableStat
p23401
tp23402
I7
s(Vinsert
p23403
I42
VSimpleName: setParent
p23404
Vinsert
p23405
I43
VSimpleType: SQLServerParameter
p23406
tp23407
I2
s(g22474
I42
g22475
Vinsert
p23408
I42
VSimpleName: WallRuntimeException
p23409
tp23410
I1
s(g19461
I42
g19462
Vinsert
p23411
I8
VBlock
p23412
tp23413
I4
s(Vinsert
p23414
I42
VSimpleName: getLeft
p23415
Vinsert
p23416
I10
VBreakStatement
p23417
tp23418
I2
s(g3383
I42
g3384
Vinsert
p23419
I36
VParenthesizedExpression
p23420
tp23421
I1
s(g6192
I42
g6193
Vinsert
p23422
I59
VVariableDeclarationFragment
p23423
tp23424
I3
s(g5148
I42
g5149
Vinsert
p23425
I43
VSimpleType: JConsoleContext
p23426
tp23427
I1
s(Vinsert
p23428
I42
VSimpleName: invoke
p23429
Vinsert
p23430
I45
VStringLiteral: "getURIStatDataList"
p23431
tp23432
I1
s(Vinsert
p23433
I42
VSimpleName: clone
p23434
Vinsert
p23435
I42
VSimpleName: items
p23436
tp23437
I4
s(g16484
I42
g16485
Vinsert
p23438
I42
VSimpleName: hashCode64
p23439
tp23440
I2
s(g10267
I42
g10268
Vinsert
p23441
I42
VSimpleName: driverClass
p23442
tp23443
I1
s(g8886
I42
g8887
Vinsert
p23444
I42
VSimpleName: data
p23445
tp23446
I2
s(g6005
I42
g6006
Vinsert
p23447
I43
VSimpleType: WallCheckResult
p23448
tp23449
I9
s(g20288
I42
g20289
Vinsert
p23450
I42
VSimpleName: BLOCK
p23451
tp23452
I1
s(g2263
I42
g2264
Vinsert
p23453
I31
VMethodDeclaration
p23454
tp23455
I1
s(g9634
I42
g9635
Vinsert
p23456
I42
VSimpleName: update
p23457
tp23458
I2
s(g19686
I42
g19687
Vinsert
p23459
I59
VVariableDeclarationFragment
p23460
tp23461
I3
s(g4429
I42
g4430
Vinsert
p23462
I42
VSimpleName: runningCount
p23463
tp23464
I1
s(Vinsert
p23465
I42
VSimpleName: nextToken
p23466
Vinsert
p23467
I42
VSimpleName: HiveLexer
p23468
tp23469
I2
s(g4060
I42
g4061
Vinsert
p23470
I13
VCharacterLiteral: '|'
p23471
tp23472
I1
s(g1284
I42
g1285
Vinsert
p23473
I42
VSimpleName: printAndAccept
p23474
tp23475
I1
s(Vinsert
p23476
I42
VSimpleName: toPGString
p23477
Vinsert
p23478
I45
VStringLiteral: "\u005ct, IFNULL(size$, -1), pctfree$\u005cn"
p23479
tp23480
I1
s(Vinsert
p23481
I42
VSimpleName: beforeExecute
p23482
Vinsert
p23483
I32
VMethodInvocation
p23484
tp23485
I4
s(g16145
I42
g16146
Vinsert
p23486
I22
VFieldAccess
p23487
tp23488
I1
s(g2354
I42
g2355
Vinsert
p23489
I45
VStringLiteral: "\u005ct\u005ctEND IF;\u005cn"
p23490
tp23491
I2
s(g20173
I42
g20174
Vinsert
p23492
I33
VNullLiteral
p23493
tp23494
I3
s(g10475
I42
g10476
Vinsert
p23495
I42
VSimpleName: add
p23496
tp23497
I1
s(g16145
I42
g16146
Vinsert
p23498
I27
VInfixExpression: !=
p23499
tp23500
I1
s(Vinsert
p23501
I42
VSimpleName: sort
p23502
Vinsert
p23503
I42
VSimpleName: pseudoColumnHashCodes
p23504
tp23505
I1
s(Vinsert
p23506
I42
VSimpleName: assertEquals
p23507
Vinsert
p23508
I42
VSimpleName: count
p23509
tp23510
I1
s(g9182
I42
g9183
Vinsert
p23511
I42
VSimpleName: parseTableSource
p23512
tp23513
I1
s(g7835
I42
g7836
Vinsert
p23514
I25
VIfStatement
p23515
tp23516
I2
s(g6157
I42
g6158
Vinsert
p23517
I40
VQualifiedName: x.type
p23518
tp23519
I3
s(g3472
I42
g3473
Vinsert
p23520
I32
VMethodInvocation
p23521
tp23522
I2
s(g6852
I42
g6853
Vinsert
p23523
I45
VStringLiteral: "PROFILE"
p23524
tp23525
I1
s(Vinsert
p23526
I42
VSimpleName: getConnectionProxy
p23527
Vinsert
p23528
I42
VSimpleName: getStatementProxy
p23529
tp23530
I1
s(g18643
I42
g18644
Vinsert
p23531
I45
VStringLiteral: "("
p23532
tp23533
I2
s(Vinsert
p23534
I42
VSimpleName: assertNotNull
p23535
Vinsert
p23536
I42
VSimpleName: Exception
p23537
tp23538
I10
s(g23384
I42
g23385
Vinsert
p23539
I42
VSimpleName: property
p23540
tp23541
I3
s(g2727
I42
g2728
Vinsert
p23542
I32
VMethodInvocation
p23543
tp23544
I2
s(g6760
I42
g6761
Vinsert
p23545
I42
VSimpleName: pathMatcher
p23546
tp23547
I2
s(g4308
I42
g4309
Vinsert
p23548
I58
VVariableDeclarationExpression
p23549
tp23550
I1
s(g3437
I42
g3438
Vinsert
p23551
I45
VStringLiteral: "jdbc:mock:xxx"
p23552
tp23553
I2
s(g2795
I42
g2796
Vinsert
p23554
I42
VSimpleName: reader
p23555
tp23556
I1
s(Vinsert
p23557
I42
VSimpleName: equals
p23558
Vinsert
p23559
I42
VSimpleName: getCause
p23560
tp23561
I1
s(g3544
I42
g3545
Vinsert
p23562
I45
VStringLiteral: "\u005ctgroup by t1.uid, \u005cn"
p23563
tp23564
I1
s(g3954
I42
g3955
Vinsert
p23565
I42
VSimpleName: PGSelectStatement
p23566
tp23567
I2
s(g647
I42
g648
Vinsert
p23568
I43
VSimpleType: Long
p23569
tp23570
I1
s(g4620
I42
g4621
Vinsert
p23571
I52
VThisExpression
p23572
tp23573
I1
s(g2629
I42
g2630
Vinsert
p23574
I42
VSimpleName: SQLIdentifierExpr
p23575
tp23576
I4
s(g18507
I42
g18508
Vinsert
p23577
I42
VSimpleName: cursorName
p23578
tp23579
I1
s(g5974
I42
g5975
Vinsert
p23580
I42
VSimpleName: filter
p23581
tp23582
I1
s(g316
I42
g317
Vinsert
p23583
I42
VSimpleName: iter
p23584
tp23585
I1
s(Vinsert
p23586
I42
VSimpleName: visit
p23587
Vinsert
p23588
I42
VSimpleName: end
p23589
tp23590
I1
s(g4584
I42
g4585
Vinsert
p23591
I42
VSimpleName: nameEquals
p23592
tp23593
I2
s(g22546
I42
g22547
Vinsert
p23594
I42
VSimpleName: setInto
p23595
tp23596
I1
s(g9190
I42
g9191
Vinsert
p23597
I32
VMethodInvocation
p23598
tp23599
I1
s(g9017
I42
g9018
Vinsert
p23600
I21
VExpressionStatement
p23601
tp23602
I23
s(Vinsert
p23603
I42
VSimpleName: getEntities
p23604
Vinsert
p23605
I42
VSimpleName: getParameters
p23606
tp23607
I3
s(g3724
I42
g3725
Vinsert
p23608
I45
VStringLiteral: "LOGGING\u005cn"
p23609
tp23610
I1
s(g17093
I42
g17094
Vinsert
p23611
I43
VSimpleType: String
p23612
tp23613
I3
s(Vinsert
p23614
I42
VSimpleName: toOracleString
p23615
Vinsert
p23616
I42
VSimpleName: result_lcase
p23617
tp23618
I3
s(g17594
I42
g17595
Vinsert
p23619
I40
VQualifiedName: JdbcUtils.MYSQL
p23620
tp23621
I1
s(g6717
I42
g6718
Vinsert
p23622
I42
VSimpleName: ExportConditions
p23623
tp23624
I6
s(g7537
I42
g7538
Vinsert
p23625
I42
VSimpleName: parameterIndex
p23626
tp23627
I1
s(g1938
I42
g1939
Vinsert
p23628
I43
VSimpleType: OracleSchemaStatVisitor
p23629
tp23630
I305
s(g14155
I42
g14156
Vinsert
p23631
I59
VVariableDeclarationFragment
p23632
tp23633
I1
s(g16091
I42
g16092
Vinsert
p23634
I42
VSimpleName: dbType
p23635
tp23636
I1
s(g2765
I42
g2766
Vinsert
p23637
I45
VStringLiteral: "-ds"
p23638
tp23639
I2
s(Vinsert
p23640
I42
VSimpleName: getUsers
p23641
Vinsert
p23642
I42
VSimpleName: user
p23643
tp23644
I2
s(g12812
I42
g12813
Vinsert
p23645
I43
VSimpleType: Class
p23646
tp23647
I1
s(g17199
I42
g17200
Vinsert
p23648
I42
VSimpleName: equals
p23649
tp23650
I1
s(g4258
I42
g4259
Vinsert
p23651
I33
VNullLiteral
p23652
tp23653
I1
s(g8391
I42
g8392
Vinsert
p23654
I42
VSimpleName: Assert
p23655
tp23656
I5
s(Vinsert
p23657
I42
VSimpleName: getFields
p23658
Vinsert
p23659
I27
VInfixExpression: +
p23660
tp23661
I2
s(g4278
I42
g4279
Vinsert
p23662
I45
VStringLiteral: "| c_mediumint  | mediumint(9) | NO   |     | NULL                |                             |\u005cn"
p23663
tp23664
I1
s(g5287
I42
g5288
Vinsert
p23665
I42
VSimpleName: MySqlASTVisitor
p23666
tp23667
I87
s(g9595
I42
g9596
Vinsert
p23668
I39
VPrimitiveType: void
p23669
tp23670
I1
s(g5351
I42
g5352
Vinsert
p23671
I8
VBlock
p23672
tp23673
I1
s(g17747
I42
g17748
Vinsert
p23674
I43
VSimpleType: AtomicReference
p23675
tp23676
I2
s(g22469
I42
g22470
Vinsert
p23677
I45
VStringLiteral: "Could not retrieve transation read-only status server"
p23678
tp23679
I2
s(g2982
I42
g2983
Vinsert
p23680
I40
VQualifiedName: x.release
p23681
tp23682
I1
s(g2712
I42
g2713
Vinsert
p23683
I8
VBlock
p23684
tp23685
I80
s(g15702
I42
g15703
Vinsert
p23686
I32
VMethodInvocation
p23687
tp23688
I12
s(Vinsert
p23689
I42
VSimpleName: parameterize
p23690
Vinsert
p23691
I45
VStringLiteral: "/* 0ab23d3915048393791723851d05b8/9.1.19.1.10176122173.14//8b4757d2/ */SELECT pay_order_id, total_fee, title, alipay_seller_id, alipay_buyer_id, pay_status, out_pay_id, pay_time, end_time, gmt_create, gmt_modified, coupon_fee, actual_total_fee, discount_fee, adjust_fee, closer, point_fee, real_point_fee, obtain_point, refund_fee, confirm_paid_fee, cod_fee, from_group, attributes, attribute_cc, buyer_id, seller_id FROM tc_pay_order_3134 AS tc_pay_order WHERE pay_order_id = 52708022289887078"
p23692
tp23693
I1
s(g23689
I42
g23690
Vinsert
p23694
I8
VBlock
p23695
tp23696
I3
s(Vinsert
p23697
I42
VSimpleName: values
p23698
Vinsert
p23699
I42
VSimpleName: DataSourceHolder
p23700
tp23701
I2
s(g419
I42
g420
Vinsert
p23702
I42
VSimpleName: xaConnection
p23703
tp23704
I2
s(g1720
I42
g1721
Vinsert
p23705
I45
VStringLiteral: ".id = "
p23706
tp23707
I1
s(g17739
I42
g17740
Vinsert
p23708
I42
VSimpleName: hostName
p23709
tp23710
I1
s(g16289
I42
g16290
Vinsert
p23711
I42
VSimpleName: DruidDataSource
p23712
tp23713
I4
s(g11880
I42
g11881
Vinsert
p23714
I45
VStringLiteral: "\u005cn\u005ctnls_territory VARCHAR2(30),"
p23715
tp23716
I2
s(Vinsert
p23717
I42
VSimpleName: get
p23718
Vinsert
p23719
I42
VSimpleName: hash
p23720
tp23721
I1
s(g8841
I42
g8842
Vinsert
p23722
I42
VSimpleName: nextToken
p23723
tp23724
I1
s(Vinsert
p23725
I42
VSimpleName: indexOf
p23726
Vinsert
p23727
I43
VSimpleType: String
p23728
tp23729
I4
s(g612
I42
g613
Vinsert
p23730
I83
VModifier: public
p23731
tp23732
I1
s(g15087
I42
g15088
Vinsert
p23733
I42
VSimpleName: getPlatformMBeanServer
p23734
tp23735
I1
s(g17030
I42
g17031
Vinsert
p23736
I42
VSimpleName: setOwner
p23737
tp23738
I1
s(Vinsert
p23739
I42
VSimpleName: setName
p23740
Vinsert
p23741
I22
VFieldAccess
p23742
tp23743
I2
s(Vinsert
p23744
I42
VSimpleName: containsColumn
p23745
Vinsert
p23746
I45
VStringLiteral: "snap_id"
p23747
tp23748
I1
s(g748
I42
g749
Vinsert
p23749
I41
VReturnStatement
p23750
tp23751
I1
s(g7787
I42
g7788
Vinsert
p23752
I25
VIfStatement
p23753
tp23754
I1
s(g14680
I42
g14681
Vinsert
p23755
I42
VSimpleName: item
p23756
tp23757
I1
s(g19595
I42
g19596
Vinsert
p23758
I42
VSimpleName: isValidateSqlServer
p23759
tp23760
I1
s(Vinsert
p23761
I42
VSimpleName: setTenantTablePattern
p23762
Vinsert
p23763
I14
VClassInstanceCreation
p23764
tp23765
I2
s(g1795
I42
g1796
Vinsert
p23766
I40
VQualifiedName: JdbcParameterNull.DECIMAL
p23767
tp23768
I1
s(g6212
I42
g6213
Vinsert
p23769
I8
VBlock
p23770
tp23771
I4
s(g2765
I42
g2766
Vinsert
p23772
I45
VStringLiteral: "-detail"
p23773
tp23774
I1
s(g12222
I42
g12223
Vinsert
p23775
I27
VInfixExpression: ==
p23776
tp23777
I1
s(g3903
I42
g3904
Vinsert
p23778
I52
VThisExpression
p23779
tp23780
I2
s(g4424
I42
g4425
Vinsert
p23781
I42
VSimpleName: stmt
p23782
tp23783
I2
s(g2019
I42
g2020
Vinsert
p23784
I25
VIfStatement
p23785
tp23786
I1
s(g13823
I42
g13824
Vinsert
p23787
I42
VSimpleName: SQLStatement
p23788
tp23789
I222
s(g3523
I42
g3524
Vinsert
p23790
I42
VSimpleName: assertEquals
p23791
tp23792
I12
s(Vinsert
p23793
I42
VSimpleName: toSQLString
p23794
Vinsert
p23795
I45
VStringLiteral: "\u005cnSUBPARTITION BY HASH (nls_territory)"
p23796
tp23797
I2
s(Vinsert
p23798
I42
VSimpleName: assertEquals
p23799
Vinsert
p23800
I42
VSimpleName: setValidationQueryTimeout
p23801
tp23802
I1
s(g2294
I42
g2295
Vinsert
p23803
I42
VSimpleName: getWindowingType
p23804
tp23805
I1
s(g386
I42
g387
Vinsert
p23806
I59
VVariableDeclarationFragment
p23807
tp23808
I1
s(Vinsert
p23809
I42
VSimpleName: assertEquals
p23810
Vinsert
p23811
I45
VStringLiteral: "select * from t where ds='20160303' and hour in ('18') "
p23812
tp23813
I1
s(g14527
I42
g14528
Vinsert
p23814
I40
VQualifiedName: FNVUtils.PRIOR
p23815
tp23816
I1
s(g6893
I42
g6894
Vinsert
p23817
I42
VSimpleName: current
p23818
tp23819
I1
s(Vinsert
p23820
I42
VSimpleName: accept
p23821
Vinsert
p23822
I45
VStringLiteral: " TIME "
p23823
tp23824
I1
s(g2213
I42
g2214
Vinsert
p23825
I42
VSimpleName: autoCommit
p23826
tp23827
I1
s(Vinsert
p23828
I42
VSimpleName: newUpdater
p23829
Vinsert
p23830
I42
VSimpleName: denyCount
p23831
tp23832
I1
s(g758
I42
g759
Vinsert
p23833
I43
VSimpleType: SQLAlterTableDropConstraint
p23834
tp23835
I1
s(g8030
I42
g8031
Vinsert
p23836
I25
VIfStatement
p23837
tp23838
I1
s(Vinsert
p23839
I42
VSimpleName: invoke
p23840
Vinsert
p23841
I45
VStringLiteral: "handleFatalError"
p23842
tp23843
I1
s(Vinsert
p23844
I42
VSimpleName: toLowerCase
p23845
Vinsert
p23846
I60
VVariableDeclarationStatement
p23847
tp23848
I10
s(Vinsert
p23849
I42
VSimpleName: murmurhash2_64
p23850
Vinsert
p23851
I31
VMethodDeclaration
p23852
tp23853
I1
s(Vinsert
p23854
I42
VSimpleName: openProxySession
p23855
Vinsert
p23856
I43
VSimpleType: OracleConnection
p23857
tp23858
I2
s(Vinsert
p23859
I42
VSimpleName: getRight
p23860
Vinsert
p23861
I40
VQualifiedName: SQLBinaryOperator.NotEqual
p23862
tp23863
I1
s(g19888
I42
g19889
Vinsert
p23864
I42
VSimpleName: print
p23865
tp23866
I1
s(Vinsert
p23867
I42
VSimpleName: clone
p23868
Vinsert
p23869
I43
VSimpleType: SQLName
p23870
tp23871
I11
s(Vinsert
p23872
I42
VSimpleName: visit
p23873
Vinsert
p23874
I42
VSimpleName: SQLStatementImpl
p23875
tp23876
I1
s(g866
I42
g867
Vinsert
p23877
I34
VNumberLiteral: 45
p23878
tp23879
I2
s(g9909
I42
g9910
Vinsert
p23880
I60
VVariableDeclarationStatement
p23881
tp23882
I39
s(g16888
I42
g16889
Vinsert
p23883
I40
VQualifiedName: SQLParserFeature.KeepInsertValueClauseOriginalString
p23884
tp23885
I1
s(Vinsert
p23886
I42
VSimpleName: setParent
p23887
Vinsert
p23888
I42
VSimpleName: subQuery
p23889
tp23890
I6
s(Vinsert
p23891
I42
VSimpleName: println
p23892
Vinsert
p23893
I45
VStringLiteral: " AND apserialno = _gbk '201405120002300002170013205458'"
p23894
tp23895
I1
s(g12050
I42
g12051
Vinsert
p23896
I45
VStringLiteral: "\u005ct\u005ct\u005ct\u005ctSELECT a.menu_id, a.parent_id\u005cn"
p23897
tp23898
I1
s(Vinsert
p23899
I42
VSimpleName: setExceptionSoter
p23900
Vinsert
p23901
I42
VSimpleName: PROP_EXCEPTION_SORTER
p23902
tp23903
I1
s(g5369
I42
g5370
Vinsert
p23904
I39
VPrimitiveType: boolean
p23905
tp23906
I1
s(g12055
I42
g12056
Vinsert
p23907
I32
VMethodInvocation
p23908
tp23909
I1
s(g11606
I42
g11607
Vinsert
p23910
I42
VSimpleName: isKeepComments
p23911
tp23912
I1
s(Vinsert
p23913
I42
VSimpleName: setInt
p23914
Vinsert
p23915
I21
VExpressionStatement
p23916
tp23917
I7
s(g3598
I42
g3599
Vinsert
p23918
I42
VSimpleName: Record
p23919
tp23920
I1
s(g20914
I42
g20915
Vinsert
p23921
I42
VSimpleName: SQLException
p23922
tp23923
I1
s(Vinsert
p23924
I42
VSimpleName: get
p23925
Vinsert
p23926
I38
VPrefixExpression: ++
p23927
tp23928
I6
s(Vinsert
p23929
I42
VSimpleName: append
p23930
Vinsert
p23931
I42
VSimpleName: charset
p23932
tp23933
I1
s(Vinsert
p23934
I42
VSimpleName: getOrderByColumns
p23935
Vinsert
p23936
I40
VQualifiedName: System.out
p23937
tp23938
I6
s(g6005
I42
g6006
Vinsert
p23939
I60
VVariableDeclarationStatement
p23940
tp23941
I15
s(g3885
I42
g3886
Vinsert
p23942
I43
VSimpleType: Exception
p23943
tp23944
I116
s(g1800
I42
g1801
Vinsert
p23945
I39
VPrimitiveType: void
p23946
tp23947
I1
s(g3248
I42
g3249
Vinsert
p23948
I42
VSimpleName: logger
p23949
tp23950
I1
s(g5648
I42
g5649
Vinsert
p23951
I27
VInfixExpression: ==
p23952
tp23953
I1
s(Vinsert
p23954
I42
VSimpleName: getClass
p23955
Vinsert
p23956
I42
VSimpleName: sessionScope
p23957
tp23958
I3
s(g1324
I42
g1325
Vinsert
p23959
I32
VMethodInvocation
p23960
tp23961
I3
s(g14155
I42
g14156
Vinsert
p23962
I42
VSimpleName: name
p23963
tp23964
I1
s(g21686
I42
g21687
Vinsert
p23965
I41
VReturnStatement
p23966
tp23967
I1
s(g7083
I42
g7084
Vinsert
p23968
I7
VAssignment: ^=
p23969
tp23970
I2
s(g8311
I42
g8312
Vinsert
p23971
I42
VSimpleName: x
p23972
tp23973
I2
s(g9982
I42
g9983
Vinsert
p23974
I45
VStringLiteral: "\u005ctEXECUTE IMMEDIATE 'DELETE FROM dept WHERE deptno = :num' USING dept_id;\u005cn"
p23975
tp23976
I1
s(g23913
I42
g23914
Vinsert
p23977
I34
VNumberLiteral: 3
p23978
tp23979
I3
s(g7873
I42
g7874
Vinsert
p23980
I39
VPrimitiveType: void
p23981
tp23982
I2
s(Vinsert
p23983
I42
VSimpleName: toSQLString
p23984
Vinsert
p23985
I45
VStringLiteral: "\u005ct\u005ctLOGGING,\u005cn"
p23986
tp23987
I1
s(g5844
I42
g5845
Vinsert
p23988
I42
VSimpleName: OracleExprParser
p23989
tp23990
I1
s(Vinsert
p23991
I42
VSimpleName: booleanValue
p23992
Vinsert
p23993
I42
VSimpleName: println
p23994
tp23995
I1
s(Vinsert
p23996
I42
VSimpleName: accept
p23997
Vinsert
p23998
I42
VSimpleName: statemen
p23999
tp24000
I135
s(g196
I42
g197
Vinsert
p24001
I45
VStringLiteral: "GROUP BY T1.AREA_ID, RTRIM(TO_CHAR(T2.PID))"
p24002
tp24003
I1
s(g21632
I42
g21633
Vinsert
p24004
I45
VStringLiteral: "as"
p24005
tp24006
I1
s(Vinsert
p24007
I42
VSimpleName: emptyList
p24008
Vinsert
p24009
I42
VSimpleName: name
p24010
tp24011
I2
s(Vinsert
p24012
I42
VSimpleName: close
p24013
Vinsert
p24014
I42
VSimpleName: assertNotNull
p24015
tp24016
I4
s(g14925
I42
g14926
Vinsert
p24017
I45
VStringLiteral: "abcdefg1234567890"
p24018
tp24019
I1
s(g21006
I42
g21007
Vinsert
p24020
I45
VStringLiteral: "\u005ctFAILURES DECIMAL(38),\u005cn"
p24021
tp24022
I1
s(Vinsert
p24023
I42
VSimpleName: getAfterCommentsDirect
p24024
Vinsert
p24025
I42
VSimpleName: printComment
p24026
tp24027
I1
s(g1790
I42
g1791
Vinsert
p24028
I8
VBlock
p24029
tp24030
I1
s(g18145
I42
g18146
Vinsert
p24031
I43
VSimpleType: PreparedStatementProxy
p24032
tp24033
I1
s(g13607
I42
g13608
Vinsert
p24034
I43
VSimpleType: Boolean
p24035
tp24036
I2
s(g8360
I42
g8361
Vinsert
p24037
I32
VMethodInvocation
p24038
tp24039
I4
s(g13493
I42
g13494
Vinsert
p24040
I32
VMethodInvocation
p24041
tp24042
I21
s(Vinsert
p24043
I42
VSimpleName: setTestWhileIdle
p24044
Vinsert
p24045
I34
VNumberLiteral: 180
p24046
tp24047
I1
s(g6380
I42
g6381
Vinsert
p24048
I42
VSimpleName: list
p24049
tp24050
I1
s(Vinsert
p24051
I42
VSimpleName: getRight
p24052
Vinsert
p24053
I74
VParameterizedType: ArrayList<SQLExpr>
p24054
tp24055
I1
s(g10074
I42
g10075
Vinsert
p24056
I42
VSimpleName: refreshRow
p24057
tp24058
I1
s(g20084
I42
g20085
Vinsert
p24059
I22
VFieldAccess
p24060
tp24061
I1
s(Vinsert
p24062
I42
VSimpleName: toSQLString
p24063
Vinsert
p24064
I45
VStringLiteral: "\u005ct\u005ct\u005ctINITIAL 83886080\u005cn"
p24065
tp24066
I1
s(Vinsert
p24067
I42
VSimpleName: setName
p24068
Vinsert
p24069
I24
VForStatement
p24070
tp24071
I1
s(Vinsert
p24072
I42
VSimpleName: size
p24073
Vinsert
p24074
I42
VSimpleName: getFrom
p24075
tp24076
I1
s(Vinsert
p24077
I42
VSimpleName: assertEquals
p24078
Vinsert
p24079
I45
VStringLiteral: "SELECT /*+ parallel(5) */ COUNT(*)"
p24080
tp24081
I1
s(g8022
I42
g8023
Vinsert
p24082
I42
VSimpleName: exprParser
p24083
tp24084
I1
s(Vinsert
p24085
I42
VSimpleName: assertNotNull
p24086
Vinsert
p24087
I42
VSimpleName: insert
p24088
tp24089
I2
s(g1027
I42
g1028
Vinsert
p24090
I16
VConditionalExpression
p24091
tp24092
I1
s(g15702
I42
g15703
Vinsert
p24093
I42
VSimpleName: getWhere
p24094
tp24095
I3
s(g12578
I42
g12579
Vinsert
p24096
I43
VSimpleType: PhoenixSchemaStatVisitor
p24097
tp24098
I1
s(g6587
I42
g6588
Vinsert
p24099
I21
VExpressionStatement
p24100
tp24101
I9
s(Vinsert
p24102
I42
VSimpleName: callObjectMethod
p24103
Vinsert
p24104
I42
VSimpleName: Object
p24105
tp24106
I7
s(g8499
I42
g8500
Vinsert
p24107
I8
VBlock
p24108
tp24109
I1
s(g4263
I42
g4264
Vinsert
p24110
I42
VSimpleName: error
p24111
tp24112
I1
s(g8765
I42
g8766
Vinsert
p24113
I45
VStringLiteral: " UNION ALL SELECT  a  from tt "
p24114
tp24115
I1
s(g15119
I42
g15120
Vinsert
p24116
I42
VSimpleName: partitionByRange
p24117
tp24118
I2
s(g16460
I42
g16461
Vinsert
p24119
I27
VInfixExpression: +
p24120
tp24121
I4
s(g24023
I42
g24024
Vinsert
p24122
I8
VBlock
p24123
tp24124
I1
s(Vinsert
p24125
I42
VSimpleName: getConnectionProxy
p24126
Vinsert
p24127
I42
VSimpleName: ClobProxyImpl
p24128
tp24129
I1
s(g9410
I42
g9411
Vinsert
p24130
I43
VSimpleType: Exception
p24131
tp24132
I1
s(g454
I42
g455
Vinsert
p24133
I42
VSimpleName: String
p24134
tp24135
I1
s(g587
I42
g588
Vinsert
p24136
I45
VStringLiteral: "INSERT INTO T01_CHECKIN_CUSTOMER"
p24137
tp24138
I1
s(g14809
I42
g14810
Vinsert
p24139
I42
VSimpleName: getConfig
p24140
tp24141
I1
s(Vinsert
p24142
I42
VSimpleName: token
p24143
Vinsert
p24144
I45
VStringLiteral: "syntax error, expect identifier, but "
p24145
tp24146
I1
s(g14426
I42
g14427
Vinsert
p24147
I39
VPrimitiveType: void
p24148
tp24149
I1
s(g3760
I42
g3761
Vinsert
p24150
I42
VSimpleName: stmt
p24151
tp24152
I2
s(g16767
I42
g16768
Vinsert
p24153
I42
VSimpleName: setGroupBy
p24154
tp24155
I1
s(g17213
I42
g17214
Vinsert
p24156
I42
VSimpleName: set
p24157
tp24158
I5
s(Vinsert
p24159
I42
VSimpleName: indexOf
p24160
Vinsert
p24161
I42
VSimpleName: IllegalArgumentException
p24162
tp24163
I1
s(g7802
I42
g7803
Vinsert
p24164
I42
VSimpleName: PreparedStatement
p24165
tp24166
I58
s(g14316
I42
g14317
Vinsert
p24167
I44
VSingleVariableDeclaration
p24168
tp24169
I1
s(Vinsert
p24170
I42
VSimpleName: getTables
p24171
Vinsert
p24172
I34
VNumberLiteral: 2
p24173
tp24174
I7
s(g18680
I42
g18681
Vinsert
p24175
I60
VVariableDeclarationStatement
p24176
tp24177
I2
s(g8924
I42
g8925
Vinsert
p24178
I39
VPrimitiveType: boolean
p24179
tp24180
I1
s(g22782
I42
g22783
Vinsert
p24181
I42
VSimpleName: ctx
p24182
tp24183
I2
s(Vinsert
p24184
I42
VSimpleName: isEnable
p24185
Vinsert
p24186
I42
VSimpleName: array
p24187
tp24188
I1
s(g2354
I42
g2355
Vinsert
p24189
I45
VStringLiteral: "\u005ct\u005ct\u005ctCONTINUE;\u005cn"
p24190
tp24191
I1
s(g46
I42
g47
Vinsert
p24192
I32
VMethodInvocation
p24193
tp24194
I23
s(Vinsert
p24195
I42
VSimpleName: assertFalse
p24196
Vinsert
p24197
I42
VSimpleName: OracleWallTest
p24198
tp24199
I1
s(g11529
I42
g11530
Vinsert
p24200
I60
VVariableDeclarationStatement
p24201
tp24202
I1
s(g17777
I42
g17778
Vinsert
p24203
I21
VExpressionStatement
p24204
tp24205
I3
s(Vinsert
p24206
I42
VSimpleName: toSQLString
p24207
Vinsert
p24208
I45
VStringLiteral: "\u005ctCOL NUMBER(8),\u005cn"
p24209
tp24210
I1
s(Vinsert
p24211
I42
VSimpleName: getExprList
p24212
Vinsert
p24213
I8
VBlock
p24214
tp24215
I1
s(Vinsert
p24216
I42
VSimpleName: prepareStatement
p24217
Vinsert
p24218
I43
VSimpleType: OraclePreparedStatement
p24219
tp24220
I1
s(g19278
I42
g19279
Vinsert
p24221
I42
VSimpleName: x
p24222
tp24223
I2
s(g4946
I42
g4947
Vinsert
p24224
I43
VSimpleType: SQLBinaryOpExpr
p24225
tp24226
I7
s(g10581
I42
g10582
Vinsert
p24227
I83
VModifier: public
p24228
tp24229
I2
s(Vinsert
p24230
I42
VSimpleName: visit
p24231
Vinsert
p24232
I42
VSimpleName: items
p24233
tp24234
I4
s(g7275
I42
g7276
Vinsert
p24235
I42
VSimpleName: String
p24236
tp24237
I19
s(g738
I42
g739
Vinsert
p24238
I42
VSimpleName: HashMap
p24239
tp24240
I1
s(g20904
I42
g20905
Vinsert
p24241
I42
VSimpleName: close
p24242
tp24243
I2
s(g6051
I42
g6052
Vinsert
p24244
I27
VInfixExpression: !=
p24245
tp24246
I1
s(Vinsert
p24247
I42
VSimpleName: resolveTableName
p24248
Vinsert
p24249
I42
VSimpleName: resolveTableName
p24250
tp24251
I3
s(g3654
I42
g3655
Vinsert
p24252
I21
VExpressionStatement
p24253
tp24254
I4
s(g3307
I42
g3308
Vinsert
p24255
I42
VSimpleName: getMethodStatData
p24256
tp24257
I1
s(g4495
I42
g4496
Vinsert
p24258
I8
VBlock
p24259
tp24260
I10
s(g13395
I42
g13396
Vinsert
p24261
I62
VInstanceofExpression
p24262
tp24263
I1
s(g14933
I42
g14934
Vinsert
p24264
I83
VModifier: public
p24265
tp24266
I1
s(g4217
I42
g4218
Vinsert
p24267
I22
VFieldAccess
p24268
tp24269
I2
s(g10485
I42
g10486
Vinsert
p24270
I42
VSimpleName: token
p24271
tp24272
I1
s(Vinsert
p24273
I42
VSimpleName: getRight
p24274
Vinsert
p24275
I43
VSimpleType: SQLPropertyExpr
p24276
tp24277
I1
s(Vinsert
p24278
I42
VSimpleName: trim
p24279
Vinsert
p24280
I27
VInfixExpression: !=
p24281
tp24282
I2
s(g15490
I42
g15491
Vinsert
p24283
I42
VSimpleName: errorCount
p24284
tp24285
I1
s(g7991
I42
g7992
Vinsert
p24286
I32
VMethodInvocation
p24287
tp24288
I3
s(g4699
I42
g4700
Vinsert
p24289
I42
VSimpleName: size
p24290
tp24291
I29
s(g16213
I42
g16214
Vinsert
p24292
I7
VAssignment: =
p24293
tp24294
I1
s(g4543
I42
g4544
Vinsert
p24295
I43
VSimpleType: Entry
p24296
tp24297
I1
s(g3063
I42
g3064
Vinsert
p24298
I8
VBlock
p24299
tp24300
I2
s(g23126
I42
g23127
Vinsert
p24301
I42
VSimpleName: SQLSequenceExpr
p24302
tp24303
I4
s(g6503
I42
g6504
Vinsert
p24304
I42
VSimpleName: Select
p24305
tp24306
I1
s(g17408
I42
g17409
Vinsert
p24307
I60
VVariableDeclarationStatement
p24308
tp24309
I2
s(Vinsert
p24310
I42
VSimpleName: println
p24311
Vinsert
p24312
I42
VSimpleName: getConditions
p24313
tp24314
I8
s(g22647
I42
g22648
Vinsert
p24315
I45
VStringLiteral: "SELECT CAST(duplications_index_seq.NEXTVAL AS NUMBER(38)) AS \u005c"ID\u005c", project_snapshot_id, snapshot_id, hash, index_in_file\u005cn"
p24316
tp24317
I1
s(g12443
I42
g12444
Vinsert
p24318
I42
VSimpleName: setUsing
p24319
tp24320
I3
s(g4740
I42
g4741
Vinsert
p24321
I43
VSimpleType: HttpServletResponse
p24322
tp24323
I1
s(g6882
I42
g6883
Vinsert
p24324
I45
VStringLiteral: "\u005ct`c_bigint` bigint(20) DEFAULT NULL COMMENT 'bigint',\u005cn"
p24325
tp24326
I1
s(g13800
I42
g13801
Vinsert
p24327
I42
VSimpleName: subString
p24328
tp24329
I1
s(g11555
I42
g11556
Vinsert
p24330
I34
VNumberLiteral: 1
p24331
tp24332
I1
s(Vinsert
p24333
I42
VSimpleName: warn
p24334
Vinsert
p24335
I45
VStringLiteral: "can'r find class in current thread context classLoader "
p24336
tp24337
I1
s(g6901
I42
g6902
Vinsert
p24338
I43
VSimpleType: SQLFetchStatement
p24339
tp24340
I1
s(g13808
I42
g13809
Vinsert
p24341
I42
VSimpleName: String
p24342
tp24343
I2
s(g8810
I42
g8811
Vinsert
p24344
I42
VSimpleName: name
p24345
tp24346
I2
s(g8233
I42
g8234
Vinsert
p24347
I32
VMethodInvocation
p24348
tp24349
I2
s(g5854
I42
g5855
Vinsert
p24350
I25
VIfStatement
p24351
tp24352
I1
s(g8868
I42
g8869
Vinsert
p24353
I42
VSimpleName: strValue
p24354
tp24355
I1
s(g5818
I42
g5819
Vinsert
p24356
I42
VSimpleName: stats
p24357
tp24358
I1
s(g16985
I42
g16986
Vinsert
p24359
I39
VPrimitiveType: boolean
p24360
tp24361
I12
s(g13677
I42
g13678
Vinsert
p24362
I43
VSimpleType: SQLExprTableSource
p24363
tp24364
I4
s(g4188
I42
g4189
Vinsert
p24365
I32
VMethodInvocation
p24366
tp24367
I6
s(Vinsert
p24368
I42
VSimpleName: toLowerCase
p24369
Vinsert
p24370
I45
VStringLiteral: "INSTEAD OF"
p24371
tp24372
I1
s(g3345
I42
g3346
Vinsert
p24373
I78
VMarkerAnnotation
p24374
tp24375
I31
s(g4770
I42
g4771
Vinsert
p24376
I21
VExpressionStatement
p24377
tp24378
I7
s(Vinsert
p24379
I42
VSimpleName: setTableSource
p24380
Vinsert
p24381
I25
VIfStatement
p24382
tp24383
I1
s(Vinsert
p24384
I42
VSimpleName: getPoolingCount
p24385
Vinsert
p24386
I42
VSimpleName: getCloseCount
p24387
tp24388
I1
s(g1415
I42
g1416
Vinsert
p24389
I42
VSimpleName: x
p24390
tp24391
I2
s(g10275
I42
g10276
Vinsert
p24392
I42
VSimpleName: withClause
p24393
tp24394
I1
s(g662
I42
g663
Vinsert
p24395
I21
VExpressionStatement
p24396
tp24397
I2
s(g3063
I42
g3064
Vinsert
p24398
I42
VSimpleName: Exception
p24399
tp24400
I2
s(g24125
I42
g24126
Vinsert
p24401
I42
VSimpleName: stmt
p24402
tp24403
I2
s(g1299
I42
g1300
Vinsert
p24404
I42
VSimpleName: properties
p24405
tp24406
I2
s(Vinsert
p24407
I42
VSimpleName: getParameters
p24408
Vinsert
p24409
I34
VNumberLiteral: 0
p24410
tp24411
I2
s(g19686
I42
g19687
Vinsert
p24412
I83
VModifier: final
p24413
tp24414
I3
s(Vinsert
p24415
I42
VSimpleName: getExpr
p24416
Vinsert
p24417
I42
VSimpleName: tableNameExpr
p24418
tp24419
I1
s(g8184
I42
g8185
Vinsert
p24420
I42
VSimpleName: setExecuteCount
p24421
tp24422
I1
s(g2079
I42
g2080
Vinsert
p24423
I32
VMethodInvocation
p24424
tp24425
I18
s(g20529
I42
g20530
Vinsert
p24426
I32
VMethodInvocation
p24427
tp24428
I2
s(g18278
I42
g18279
Vinsert
p24429
I42
VSimpleName: SQLAssignItem
p24430
tp24431
I1
s(g522
I42
g523
Vinsert
p24432
I42
VSimpleName: x
p24433
tp24434
I3
s(g3709
I42
g3710
Vinsert
p24435
I14
VClassInstanceCreation
p24436
tp24437
I1
s(g4903
I42
g4904
Vinsert
p24438
I22
VFieldAccess
p24439
tp24440
I2
s(g10942
I42
g10943
Vinsert
p24441
I42
VSimpleName: print
p24442
tp24443
I1
s(g3649
I42
g3650
Vinsert
p24444
I42
VSimpleName: IDENTIFIER
p24445
tp24446
I2
s(g1978
I42
g1979
Vinsert
p24447
I8
VBlock
p24448
tp24449
I2
s(g14943
I42
g14944
Vinsert
p24450
I42
VSimpleName: MockResultSetMetaData
p24451
tp24452
I2
s(g13395
I42
g13396
Vinsert
p24453
I42
VSimpleName: String
p24454
tp24455
I3
s(g4640
I42
g4641
Vinsert
p24456
I21
VExpressionStatement
p24457
tp24458
I2
s(g17678
I42
g17679
Vinsert
p24459
I43
VSimpleType: Condition
p24460
tp24461
I1
s(Vinsert
p24462
I42
VSimpleName: setColumnNames
p24463
Vinsert
p24464
I42
VSimpleName: sql
p24465
tp24466
I2
s(g5666
I42
g5667
Vinsert
p24467
I42
VSimpleName: dataSourceInfo
p24468
tp24469
I1
s(g2479
I42
g2480
Vinsert
p24470
I42
VSimpleName: stmt
p24471
tp24472
I25
s(g6460
I42
g6461
Vinsert
p24473
I45
VStringLiteral: "\u005ct, bs.start_time, bs.completion_time, abs((bs.completion_time - bs.start_time) * 86400) AS elapsed_seconds, bs.status, bs.controlfile_included\u005cn"
p24474
tp24475
I1
s(g16863
I42
g16864
Vinsert
p24476
I42
VSimpleName: test_true
p24477
tp24478
I1
s(Vinsert
p24479
I42
VSimpleName: executeQuery
p24480
Vinsert
p24481
I34
VNumberLiteral: 6
p24482
tp24483
I1
s(g13437
I42
g13438
Vinsert
p24484
I45
VStringLiteral: "\u005ctINNER JOIN (\u005cn"
p24485
tp24486
I1
s(g5434
I42
g5435
Vinsert
p24487
I42
VSimpleName: sqlType
p24488
tp24489
I1
s(Vinsert
p24490
I42
VSimpleName: parseStatementList
p24491
Vinsert
p24492
I43
VSimpleType: MySqlShowPluginsStatement
p24493
tp24494
I2
s(Vinsert
p24495
I42
VSimpleName: getClass
p24496
Vinsert
p24497
I42
VSimpleName: driver
p24498
tp24499
I1
s(g15412
I42
g15413
Vinsert
p24500
I42
VSimpleName: setMaxRows
p24501
tp24502
I1
s(Vinsert
p24503
I42
VSimpleName: add
p24504
Vinsert
p24505
I42
VSimpleName: addTrace
p24506
tp24507
I1
s(g2178
I42
g2179
Vinsert
p24508
I52
VThisExpression
p24509
tp24510
I31
s(g2842
I42
g2843
Vinsert
p24511
I60
VVariableDeclarationStatement
p24512
tp24513
I1
s(g15823
I42
g15824
Vinsert
p24514
I31
VMethodDeclaration
p24515
tp24516
I2
s(g4283
I42
g4284
Vinsert
p24517
I42
VSimpleName: collate
p24518
tp24519
I1
s(g9924
I42
g9925
Vinsert
p24520
I59
VVariableDeclarationFragment
p24521
tp24522
I4
s(g3857
I42
g3858
Vinsert
p24523
I42
VSimpleName: guardValueLocal
p24524
tp24525
I1
s(Vinsert
p24526
I42
VSimpleName: create
p24527
Vinsert
p24528
I43
VSimpleType: StatementProxy
p24529
tp24530
I1
s(Vinsert
p24531
I42
VSimpleName: findTableSourceWithColumn
p24532
Vinsert
p24533
I42
VSimpleName: SQLTableSource
p24534
tp24535
I1
s(g12077
I42
g12078
Vinsert
p24536
I8
VBlock
p24537
tp24538
I2
s(g17174
I42
g17175
Vinsert
p24539
I45
VStringLiteral: "\u005ct1c, \u005cn"
p24540
tp24541
I1
s(Vinsert
p24542
I42
VSimpleName: visit
p24543
Vinsert
p24544
I42
VSimpleName: selectStatement
p24545
tp24546
I1
s(g5892
I42
g5893
Vinsert
p24547
I45
VStringLiteral: "/*test sql*/select age from user where name = 'xx';"
p24548
tp24549
I1
s(g5277
I42
g5278
Vinsert
p24550
I42
VSimpleName: clazz
p24551
tp24552
I2
s(g7517
I42
g7518
Vinsert
p24553
I42
VSimpleName: visitor
p24554
tp24555
I1
s(g21982
I42
g21983
Vinsert
p24556
I42
VSimpleName: x
p24557
tp24558
I3
s(g429
I42
g430
Vinsert
p24559
I33
VNullLiteral
p24560
tp24561
I2
s(g6529
I42
g6530
Vinsert
p24562
I42
VSimpleName: id
p24563
tp24564
I2
s(g5470
I42
g5471
Vinsert
p24565
I45
VStringLiteral: "SUPPLEMENTAL"
p24566
tp24567
I1
s(Vinsert
p24568
I42
VSimpleName: append
p24569
Vinsert
p24570
I42
VSimpleName: SQLNullExpr
p24571
tp24572
I1
s(g11890
I42
g11891
Vinsert
p24573
I43
VSimpleType: SQLExpr
p24574
tp24575
I4
s(g10897
I42
g10898
Vinsert
p24576
I42
VSimpleName: ResultSet
p24577
tp24578
I2
s(Vinsert
p24579
I42
VSimpleName: getItems
p24580
Vinsert
p24581
I42
VSimpleName: stat
p24582
tp24583
I1
s(g7932
I42
g7933
Vinsert
p24584
I43
VSimpleType: Date
p24585
tp24586
I2
s(Vinsert
p24587
I42
VSimpleName: assertEquals
p24588
Vinsert
p24589
I45
VStringLiteral: "? IN (1, 2, 3)"
p24590
tp24591
I1
s(g4755
I42
g4756
Vinsert
p24592
I34
VNumberLiteral: 3
p24593
tp24594
I1
s(g16778
I42
g16779
Vinsert
p24595
I41
VReturnStatement
p24596
tp24597
I2
s(g3709
I42
g3710
Vinsert
p24598
I42
VSimpleName: removed
p24599
tp24600
I1
s(Vinsert
p24601
I42
VSimpleName: expr
p24602
Vinsert
p24603
I42
VSimpleName: setMaxValue
p24604
tp24605
I1
s(g4694
I42
g4695
Vinsert
p24606
I45
VStringLiteral: "\u005ct\u005ctFREELIST GROUPS 1\u005cn"
p24607
tp24608
I7
s(g2847
I42
g2848
Vinsert
p24609
I42
VSimpleName: WallVisitorUtils
p24610
tp24611
I5
s(g3332
I42
g3333
Vinsert
p24612
I43
VSimpleType: JdbcSqlStat
p24613
tp24614
I1
s(g8951
I42
g8952
Vinsert
p24615
I42
VSimpleName: table
p24616
tp24617
I4
s(g4093
I42
g4094
Vinsert
p24618
I45
VStringLiteral: "jdbc:mock:config-1"
p24619
tp24620
I1
s(g15397
I42
g15398
Vinsert
p24621
I33
VNullLiteral
p24622
tp24623
I1
s(g10267
I42
g10268
Vinsert
p24624
I32
VMethodInvocation
p24625
tp24626
I2
s(g6288
I42
g6289
Vinsert
p24627
I43
VSimpleType: List
p24628
tp24629
I1
s(g1853
I42
g1854
Vinsert
p24630
I42
VSimpleName: OracleWithSubqueryEntry
p24631
tp24632
I1
s(Vinsert
p24633
I42
VSimpleName: setParent
p24634
Vinsert
p24635
I42
VSimpleName: SQLKeep
p24636
tp24637
I1
s(g13089
I42
g13090
Vinsert
p24638
I42
VSimpleName: config
p24639
tp24640
I1
s(Vinsert
p24641
I42
VSimpleName: getIdentity
p24642
Vinsert
p24643
I42
VSimpleName: x
p24644
tp24645
I2
s(g5176
I42
g5177
Vinsert
p24646
I8
VBlock
p24647
tp24648
I3
s(Vinsert
p24649
I42
VSimpleName: isWithReadLock
p24650
Vinsert
p24651
I42
VSimpleName: tables
p24652
tp24653
I1
s(g10919
I42
g10920
Vinsert
p24654
I32
VMethodInvocation
p24655
tp24656
I2
s(g6475
I42
g6476
Vinsert
p24657
I21
VExpressionStatement
p24658
tp24659
I2
s(g3248
I42
g3249
Vinsert
p24660
I42
VSimpleName: isLogEnable
p24661
tp24662
I1
s(g12518
I42
g12519
Vinsert
p24663
I42
VSimpleName: put
p24664
tp24665
I2
s(g6755
I42
g6756
Vinsert
p24666
I42
VSimpleName: StdScheduler
p24667
tp24668
I1
s(Vinsert
p24669
I42
VSimpleName: currentThread
p24670
Vinsert
p24671
I74
VParameterizedType: Class<?>
p24672
tp24673
I1
s(g15818
I42
g15819
Vinsert
p24674
I74
VParameterizedType: Map<String,Object>
p24675
tp24676
I1
s(g7947
I42
g7948
Vinsert
p24677
I42
VSimpleName: Override
p24678
tp24679
I5
s(g18891
I42
g18892
Vinsert
p24680
I43
VSimpleType: Lexer.CommentHandler
p24681
tp24682
I1
s(g14274
I42
g14275
Vinsert
p24683
I42
VSimpleName: File
p24684
tp24685
I1
s(Vinsert
p24686
I42
VSimpleName: withAlias
p24687
Vinsert
p24688
I43
VSimpleType: MutablePropertyValues
p24689
tp24690
I1
s(Vinsert
p24691
I42
VSimpleName: rset
p24692
Vinsert
p24693
I42
VSimpleName: getSpringStatSet
p24694
tp24695
I1
s(g10642
I42
g10643
Vinsert
p24696
I36
VParenthesizedExpression
p24697
tp24698
I1
s(Vinsert
p24699
I42
VSimpleName: parseStatementList
p24700
Vinsert
p24701
I42
VSimpleName: SQLSetStatement
p24702
tp24703
I2
s(g7970
I42
g7971
Vinsert
p24704
I42
VSimpleName: MySqlSetNamesStatement
p24705
tp24706
I1
s(g15823
I42
g15824
Vinsert
p24707
I52
VThisExpression
p24708
tp24709
I3
s(g13277
I42
g13278
Vinsert
p24710
I42
VSimpleName: target
p24711
tp24712
I4
s(g4525
I42
g4526
Vinsert
p24713
I43
VSimpleType: SQLASTOutputVisitor
p24714
tp24715
I1
s(g9873
I42
g9874
Vinsert
p24716
I42
VSimpleName: MockCallableStatement
p24717
tp24718
I1
s(Vinsert
p24719
I42
VSimpleName: assertEquals
p24720
Vinsert
p24721
I45
VStringLiteral: "alter table sale_detail"
p24722
tp24723
I1
s(g1471
I42
g1472
Vinsert
p24724
I32
VMethodInvocation
p24725
tp24726
I7
s(g21020
I42
g21021
Vinsert
p24727
I8
VBlock
p24728
tp24729
I10
s(Vinsert
p24730
I42
VSimpleName: getDataSource
p24731
Vinsert
p24732
I7
VAssignment: =
p24733
tp24734
I1
s(g5757
I42
g5758
Vinsert
p24735
I42
VSimpleName: SQLSelectStatement
p24736
tp24737
I1
s(g2842
I42
g2843
Vinsert
p24738
I42
VSimpleName: withSubqueryClause
p24739
tp24740
I1
s(g6442
I42
g6443
Vinsert
p24741
I45
VStringLiteral: ") b using(buyer_nick)"
p24742
tp24743
I1
s(g592
I42
g593
Vinsert
p24744
I42
VSimpleName: MySqlUnique
p24745
tp24746
I1
s(g12324
I42
g12325
Vinsert
p24747
I42
VSimpleName: visit
p24748
tp24749
I1
s(Vinsert
p24750
I42
VSimpleName: clone
p24751
Vinsert
p24752
I42
VSimpleName: CycleClause
p24753
tp24754
I1
s(Vinsert
p24755
I42
VSimpleName: setParent
p24756
Vinsert
p24757
I42
VSimpleName: OracleStorageClause
p24758
tp24759
I1
s(g11062
I42
g11063
Vinsert
p24760
I42
VSimpleName: dataSource
p24761
tp24762
I1
s(g1017
I42
g1018
Vinsert
p24763
I42
VSimpleName: withQuery
p24764
tp24765
I1
s(Vinsert
p24766
I42
VSimpleName: accept
p24767
Vinsert
p24768
I42
VSimpleName: getOptionHints
p24769
tp24770
I1
s(g10305
I42
g10306
Vinsert
p24771
I42
VSimpleName: SQLNullExpr
p24772
tp24773
I1
s(g22294
I42
g22295
Vinsert
p24774
I13
VCharacterLiteral: ' '
p24775
tp24776
I6
s(g22826
I42
g22827
Vinsert
p24777
I42
VSimpleName: ucase
p24778
tp24779
I1
s(g5272
I42
g5273
Vinsert
p24780
I42
VSimpleName: SQLSelectParser
p24781
tp24782
I2
s(g14651
I42
g14652
Vinsert
p24783
I9
VBooleanLiteral: false
p24784
tp24785
I4
s(g4635
I42
g4636
Vinsert
p24786
I42
VSimpleName: item
p24787
tp24788
I2
s(g9959
I42
g9960
Vinsert
p24789
I42
VSimpleName: dataSource
p24790
tp24791
I3
s(g1918
I42
g1919
Vinsert
p24792
I60
VVariableDeclarationStatement
p24793
tp24794
I15
s(g492
I42
g493
Vinsert
p24795
I52
VThisExpression
p24796
tp24797
I3
s(g14782
I42
g14783
Vinsert
p24798
I42
VSimpleName: print
p24799
tp24800
I4
s(g9259
I42
g9260
Vinsert
p24801
I42
VSimpleName: filterName
p24802
tp24803
I1
s(g10757
I42
g10758
Vinsert
p24804
I42
VSimpleName: getConnectProperties
p24805
tp24806
I2
s(g18214
I42
g18215
Vinsert
p24807
I42
VSimpleName: method
p24808
tp24809
I17
s(g15991
I42
g15992
Vinsert
p24810
I22
VFieldAccess
p24811
tp24812
I9
s(g2408
I42
g2409
Vinsert
p24813
I21
VExpressionStatement
p24814
tp24815
I1
s(g22579
I42
g22580
Vinsert
p24816
I43
VSimpleType: IOException
p24817
tp24818
I1
s(g5053
I42
g5054
Vinsert
p24819
I42
VSimpleName: forName
p24820
tp24821
I1
s(g7665
I42
g7666
Vinsert
p24822
I42
VSimpleName: isLocalTransaction
p24823
tp24824
I1
s(Vinsert
p24825
I42
VSimpleName: visit
p24826
Vinsert
p24827
I42
VSimpleName: all
p24828
tp24829
I1
s(g1150
I42
g1151
Vinsert
p24830
I8
VBlock
p24831
tp24832
I1
s(g7083
I42
g7084
Vinsert
p24833
I7
VAssignment: *=
p24834
tp24835
I2
s(g5079
I42
g5080
Vinsert
p24836
I31
VMethodDeclaration
p24837
tp24838
I26
s(g11110
I42
g11111
Vinsert
p24839
I42
VSimpleName: constant
p24840
tp24841
I1
s(g20124
I42
g20125
Vinsert
p24842
I42
VSimpleName: quote
p24843
tp24844
I1
s(g13390
I42
g13391
Vinsert
p24845
I45
VStringLiteral: " WITH READ ONLY"
p24846
tp24847
I1
s(g856
I42
g857
Vinsert
p24848
I21
VExpressionStatement
p24849
tp24850
I1
s(g1780
I42
g1781
Vinsert
p24851
I44
VSingleVariableDeclaration
p24852
tp24853
I4
s(g9446
I42
g9447
Vinsert
p24854
I42
VSimpleName: addSymbol
p24855
tp24856
I2
s(g7620
I42
g7621
Vinsert
p24857
I16
VConditionalExpression
p24858
tp24859
I1
s(g12555
I42
g12556
Vinsert
p24860
I43
VSimpleType: String
p24861
tp24862
I1
s(g19035
I42
g19036
Vinsert
p24863
I42
VSimpleName: List
p24864
tp24865
I2
s(g17240
I42
g17241
Vinsert
p24866
I42
VSimpleName: parent
p24867
tp24868
I1
s(g17387
I42
g17388
Vinsert
p24869
I14
VClassInstanceCreation
p24870
tp24871
I3
s(g1448
I42
g1449
Vinsert
p24872
I42
VSimpleName: hashCode
p24873
tp24874
I3
s(g11930
I42
g11931
Vinsert
p24875
I39
VPrimitiveType: void
p24876
tp24877
I1
s(g7678
I42
g7679
Vinsert
p24878
I31
VMethodDeclaration
p24879
tp24880
I1
s(g3949
I42
g3950
Vinsert
p24881
I42
VSimpleName: SQLInsertStatement
p24882
tp24883
I2
s(g3760
I42
g3761
Vinsert
p24884
I42
VSimpleName: identifierEquals
p24885
tp24886
I1
s(g414
I42
g415
Vinsert
p24887
I8
VBlock
p24888
tp24889
I2
s(Vinsert
p24890
I42
VSimpleName: getExpr
p24891
Vinsert
p24892
I45
VStringLiteral: "CHECK "
p24893
tp24894
I1
s(g5638
I42
g5639
Vinsert
p24895
I31
VMethodDeclaration
p24896
tp24897
I1
s(g7502
I42
g7503
Vinsert
p24898
I32
VMethodInvocation
p24899
tp24900
I2
s(g4824
I42
g4825
Vinsert
p24901
I42
VSimpleName: handleResponseMessage
p24902
tp24903
I1
s(Vinsert
p24904
I42
VSimpleName: nextToken
p24905
Vinsert
p24906
I40
VQualifiedName: Token.IMMEDIATE
p24907
tp24908
I1
s(g6966
I42
g6967
Vinsert
p24909
I42
VSimpleName: list
p24910
tp24911
I2
s(g5903
I42
g5904
Vinsert
p24912
I42
VSimpleName: print0
p24913
tp24914
I1
s(Vinsert
p24915
I42
VSimpleName: getConnection
p24916
Vinsert
p24917
I42
VSimpleName: test_unwrap
p24918
tp24919
I1
s(g3806
I42
g3807
Vinsert
p24920
I27
VInfixExpression: !=
p24921
tp24922
I2
s(Vinsert
p24923
I42
VSimpleName: fromSysSchema
p24924
Vinsert
p24925
I42
VSimpleName: WallTopStatementContext
p24926
tp24927
I2
s(g20856
I42
g20857
Vinsert
p24928
I42
VSimpleName: SQLExprParser
p24929
tp24930
I1
s(g13991
I42
g13992
Vinsert
p24931
I42
VSimpleName: action
p24932
tp24933
I1
s(g3083
I42
g3084
Vinsert
p24934
I60
VVariableDeclarationStatement
p24935
tp24936
I6
s(g3724
I42
g3725
Vinsert
p24937
I45
VStringLiteral: "\u005ctMAXEXTENTS 2147483645\u005cn"
p24938
tp24939
I1
s(g6434
I42
g6435
Vinsert
p24940
I43
VSimpleType: MySqlSelectQueryBlock
p24941
tp24942
I2
s(Vinsert
p24943
I42
VSimpleName: incrementSelectCount
p24944
Vinsert
p24945
I40
VQualifiedName: com.alibaba.druid.stat.TableStat.Mode
p24946
tp24947
I1
s(g9251
I42
g9252
Vinsert
p24948
I41
VReturnStatement
p24949
tp24950
I1
s(g1339
I42
g1340
Vinsert
p24951
I42
VSimpleName: buf
p24952
tp24953
I28
s(Vinsert
p24954
I42
VSimpleName: findTableSource
p24955
Vinsert
p24956
I42
VSimpleName: parent
p24957
tp24958
I1
s(Vinsert
p24959
I42
VSimpleName: isPoolPreparedStatements
p24960
Vinsert
p24961
I8
VBlock
p24962
tp24963
I3
s(g366
I42
g367
Vinsert
p24964
I7
VAssignment: =
p24965
tp24966
I3
s(g8090
I42
g8091
Vinsert
p24967
I42
VSimpleName: acceptIdentifier
p24968
tp24969
I2
s(g3218
I42
g3219
Vinsert
p24970
I42
VSimpleName: ucase
p24971
tp24972
I1
s(g12716
I42
g12717
Vinsert
p24973
I42
VSimpleName: transactionInfo
p24974
tp24975
I1
s(g19686
I42
g19687
Vinsert
p24976
I26
VImportDeclaration
p24977
tp24978
I6
s(Vinsert
p24979
I42
VSimpleName: put
p24980
Vinsert
p24981
I45
VStringLiteral: "StatementExecuteCount_0_1_Millis"
p24982
tp24983
I1
s(g5017
I42
g5018
Vinsert
p24984
I32
VMethodInvocation
p24985
tp24986
I1
s(Vinsert
p24987
I42
VSimpleName: incrementReplaceCunt
p24988
Vinsert
p24989
I42
VSimpleName: changed
p24990
tp24991
I2
s(g2339
I42
g2340
Vinsert
p24992
I42
VSimpleName: x
p24993
tp24994
I1
s(g1780
I42
g1781
Vinsert
p24995
I42
VSimpleName: DruidDataSourceStatManager
p24996
tp24997
I5
s(g6630
I42
g6631
Vinsert
p24998
I42
VSimpleName: OracleSelectTableReference
p24999
tp25000
I1
s(Vinsert
p25001
I42
VSimpleName: unwrap
p25002
Vinsert
p25003
I42
VSimpleName: value
p25004
tp25005
I1
s(Vinsert
p25006
I42
VSimpleName: println
p25007
Vinsert
p25008
I42
VSimpleName: SQLStatement
p25009
tp25010
I11
s(g12671
I42
g12672
Vinsert
p25011
I42
VSimpleName: numExpr
p25012
tp25013
I1
s(Vinsert
p25014
I42
VSimpleName: setProperty
p25015
Vinsert
p25016
I45
VStringLiteral: "30"
p25017
tp25018
I1
s(g16728
I42
g16729
Vinsert
p25019
I42
VSimpleName: bufPos
p25020
tp25021
I1
s(Vinsert
p25022
I42
VSimpleName: getStatement
p25023
Vinsert
p25024
I27
VInfixExpression: ==
p25025
tp25026
I1
s(g8449
I42
g8450
Vinsert
p25027
I39
VPrimitiveType: int
p25028
tp25029
I1
s(g17146
I42
g17147
Vinsert
p25030
I22
VFieldAccess
p25031
tp25032
I1
s(g18026
I42
g18027
Vinsert
p25033
I36
VParenthesizedExpression
p25034
tp25035
I2
s(g20529
I42
g20530
Vinsert
p25036
I21
VExpressionStatement
p25037
tp25038
I2
s(g7275
I42
g7276
Vinsert
p25039
I83
VModifier: public
p25040
tp25041
I1
s(g9934
I42
g9935
Vinsert
p25042
I42
VSimpleName: column
p25043
tp25044
I3
s(g11795
I42
g11796
Vinsert
p25045
I83
VModifier: public
p25046
tp25047
I1
s(g1564
I42
g1565
Vinsert
p25048
I42
VSimpleName: select
p25049
tp25050
I1
s(g16685
I42
g16686
Vinsert
p25051
I42
VSimpleName: factory
p25052
tp25053
I1
s(g23258
I42
g23259
Vinsert
p25054
I43
VSimpleType: MySqlLoadDataInFileStatement
p25055
tp25056
I1
s(g8365
I42
g8366
Vinsert
p25057
I33
VNullLiteral
p25058
tp25059
I1
s(g24462
I42
g24463
Vinsert
p25060
I42
VSimpleName: stmt
p25061
tp25062
I2
s(Vinsert
p25063
I42
VSimpleName: getItems
p25064
Vinsert
p25065
I42
VSimpleName: udpateStatement
p25066
tp25067
I2
s(g3017
I42
g3018
Vinsert
p25068
I42
VSimpleName: obj
p25069
tp25070
I1
s(g8564
I42
g8565
Vinsert
p25071
I11
VCastExpression
p25072
tp25073
I11
s(Vinsert
p25074
I42
VSimpleName: getResolvedColumn
p25075
Vinsert
p25076
I21
VExpressionStatement
p25077
tp25078
I1
s(g1928
I42
g1929
Vinsert
p25079
I27
VInfixExpression: !=
p25080
tp25081
I18
s(g9883
I42
g9884
Vinsert
p25082
I42
VSimpleName: calcFoundRows
p25083
tp25084
I1
s(g454
I42
g455
Vinsert
p25085
I83
VModifier: static
p25086
tp25087
I1
s(g10124
I42
g10125
Vinsert
p25088
I42
VSimpleName: obj
p25089
tp25090
I1
s(g17439
I42
g17440
Vinsert
p25091
I21
VExpressionStatement
p25092
tp25093
I4
s(g17012
I42
g17013
Vinsert
p25094
I43
VSimpleType: String
p25095
tp25096
I1
s(Vinsert
p25097
I42
VSimpleName: fnv_64_lower
p25098
Vinsert
p25099
I42
VSimpleName: normalize
p25100
tp25101
I1
s(g6192
I42
g6193
Vinsert
p25102
I42
VSimpleName: Item
p25103
tp25104
I1
s(g18496
I42
g18497
Vinsert
p25105
I42
VSimpleName: visit
p25106
tp25107
I1
s(Vinsert
p25108
I42
VSimpleName: token
p25109
Vinsert
p25110
I42
VSimpleName: SQLDropDatabaseStatement
p25111
tp25112
I2
s(g5252
I42
g5253
Vinsert
p25113
I45
VStringLiteral: "insert into\u005cn"
p25114
tp25115
I1
s(g12611
I42
g12612
Vinsert
p25116
I42
VSimpleName: maxActive
p25117
tp25118
I2
s(g4964
I42
g4965
Vinsert
p25119
I42
VSimpleName: PoolableCallableStatement
p25120
tp25121
I1
s(g1830
I42
g1831
Vinsert
p25122
I42
VSimpleName: PreparedStatement
p25123
tp25124
I2
s(Vinsert
p25125
I42
VSimpleName: getPublicKey
p25126
Vinsert
p25127
I42
VSimpleName: key
p25128
tp25129
I1
s(Vinsert
p25130
I42
VSimpleName: append
p25131
Vinsert
p25132
I42
VSimpleName: arguments
p25133
tp25134
I1
s(g11816
I42
g11817
Vinsert
p25135
I45
VStringLiteral: "\u005cthire_date;"
p25136
tp25137
I1
s(Vinsert
p25138
I42
VSimpleName: put
p25139
Vinsert
p25140
I45
VStringLiteral: "char"
p25141
tp25142
I1
s(g4859
I42
g4860
Vinsert
p25143
I25
VIfStatement
p25144
tp25145
I1
s(g3569
I42
g3570
Vinsert
p25146
I42
VSimpleName: x
p25147
tp25148
I2
s(g24159
I42
g24160
Vinsert
p25149
I45
VStringLiteral: "Invalid IP range"
p25150
tp25151
I1
s(Vinsert
p25152
I42
VSimpleName: xa_close
p25153
Vinsert
p25154
I83
VModifier: public
p25155
tp25156
I1
s(Vinsert
p25157
I42
VSimpleName: getInitParameter
p25158
Vinsert
p25159
I59
VVariableDeclarationFragment
p25160
tp25161
I2
s(g5569
I42
g5570
Vinsert
p25162
I43
VSimpleType: ExportParameterVisitor
p25163
tp25164
I2
s(Vinsert
p25165
I42
VSimpleName: getConnectCount
p25166
Vinsert
p25167
I21
VExpressionStatement
p25168
tp25169
I2
s(g18568
I42
g18569
Vinsert
p25170
I42
VSimpleName: dataSourcesList
p25171
tp25172
I2
s(g19163
I42
g19164
Vinsert
p25173
I42
VSimpleName: driver
p25174
tp25175
I1
s(g8914
I42
g8915
Vinsert
p25176
I32
VMethodInvocation
p25177
tp25178
I2
s(g1536
I42
g1537
Vinsert
p25179
I42
VSimpleName: ConnectionImpl
p25180
tp25181
I2
s(g8873
I42
g8874
Vinsert
p25182
I42
VSimpleName: lexer
p25183
tp25184
I2
s(g15304
I42
g15305
Vinsert
p25185
I42
VSimpleName: DB2OutputVisitor
p25186
tp25187
I1
s(g4293
I42
g4294
Vinsert
p25188
I39
VPrimitiveType: void
p25189
tp25190
I1
s(Vinsert
p25191
I42
VSimpleName: getParent
p25192
Vinsert
p25193
I42
VSimpleName: MySqlShowStatement
p25194
tp25195
I1
s(Vinsert
p25196
I42
VSimpleName: assertNull
p25197
Vinsert
p25198
I43
VSimpleType: MyPreparedStatement
p25199
tp25200
I2
s(g6592
I42
g6593
Vinsert
p25201
I43
VSimpleType: Collection
p25202
tp25203
I1
s(g1536
I42
g1537
Vinsert
p25204
I32
VMethodInvocation
p25205
tp25206
I1
s(Vinsert
p25207
I42
VSimpleName: createSchemaStatVisitor
p25208
Vinsert
p25209
I40
VQualifiedName: System.out
p25210
tp25211
I2
s(g6727
I42
g6728
Vinsert
p25212
I45
VStringLiteral: "REMOVE PARTITIONING"
p25213
tp25214
I1
s(g5184
I42
g5185
Vinsert
p25215
I43
VSimpleType: OracleWallProvider
p25216
tp25217
I4
s(Vinsert
p25218
I42
VSimpleName: append
p25219
Vinsert
p25220
I42
VSimpleName: StringBuffer
p25221
tp25222
I36
s(g13991
I42
g13992
Vinsert
p25223
I42
VSimpleName: PrivilegedAction
p25224
tp25225
I1
s(g8293
I42
g8294
Vinsert
p25226
I59
VVariableDeclarationFragment
p25227
tp25228
I1
s(g15571
I42
g15572
Vinsert
p25229
I45
VStringLiteral: "\u005cn\u005cthired DATE NOT NULL DEFAULT '1970-01-01', "
p25230
tp25231
I1
s(g12753
I42
g12754
Vinsert
p25232
I21
VExpressionStatement
p25233
tp25234
I168
s(g4951
I42
g4952
Vinsert
p25235
I42
VSimpleName: OracleSchemaStatVisitor
p25236
tp25237
I4
s(g4457
I42
g4458
Vinsert
p25238
I32
VMethodInvocation
p25239
tp25240
I7
s(Vinsert
p25241
I42
VSimpleName: unwrap
p25242
Vinsert
p25243
I33
VNullLiteral
p25244
tp25245
I2
s(g13264
I42
g13265
Vinsert
p25246
I45
VStringLiteral: "MAXTRANS"
p25247
tp25248
I1
s(Vinsert
p25249
I42
VSimpleName: getEntities
p25250
Vinsert
p25251
I42
VSimpleName: MappingEngine
p25252
tp25253
I2
s(g2997
I42
g2998
Vinsert
p25254
I8
VBlock
p25255
tp25256
I2
s(Vinsert
p25257
I42
VSimpleName: visit
p25258
Vinsert
p25259
I43
VSimpleType: DB2SelectQueryBlock
p25260
tp25261
I1
s(g18852
I42
g18853
Vinsert
p25262
I43
VSimpleType: SQLException
p25263
tp25264
I2
s(g18852
I42
g18853
Vinsert
p25265
I9
VBooleanLiteral: false
p25266
tp25267
I1
s(Vinsert
p25268
I42
VSimpleName: assertEquals
p25269
Vinsert
p25270
I45
VStringLiteral: "name"
p25271
tp25272
I1
s(g2563
I42
g2564
Vinsert
p25273
I42
VSimpleName: item
p25274
tp25275
I2
s(g10626
I42
g10627
Vinsert
p25276
I42
VSimpleName: assertEquals
p25277
tp25278
I3
s(Vinsert
p25279
I42
VSimpleName: toSQLString
p25280
Vinsert
p25281
I45
VStringLiteral: "4YeykduDwWpKI7JeaWrDQ5SWiVgwg5n0dLhcWvou/6GX6rh0K6W/m8Ayy8xQjwlppZmB8L8z\u005cn"
p25282
tp25283
I1
s(g21489
I42
g21490
Vinsert
p25284
I59
VVariableDeclarationFragment
p25285
tp25286
I2
s(g21982
I42
g21983
Vinsert
p25287
I32
VMethodInvocation
p25288
tp25289
I7
s(g9006
I42
g9007
Vinsert
p25290
I78
VMarkerAnnotation
p25291
tp25292
I6
s(Vinsert
p25293
I42
VSimpleName: assertTrue
p25294
Vinsert
p25295
I42
VSimpleName: SQLEvalVisitorUtils
p25296
tp25297
I1
s(Vinsert
p25298
I42
VSimpleName: getConnection
p25299
Vinsert
p25300
I2
VArrayAccess
p25301
tp25302
I5
s(g18963
I42
g18964
Vinsert
p25303
I83
VModifier: protected
p25304
tp25305
I108
s(Vinsert
p25306
I42
VSimpleName: getInstance
p25307
Vinsert
p25308
I42
VSimpleName: Deprecated
p25309
tp25310
I1
s(g3931
I42
g3932
Vinsert
p25311
I42
VSimpleName: sql
p25312
tp25313
I2
s(g18145
I42
g18146
Vinsert
p25314
I42
VSimpleName: statementLog
p25315
tp25316
I1
s(Vinsert
p25317
I42
VSimpleName: add
p25318
Vinsert
p25319
I74
VParameterizedType: ArrayList<Object>
p25320
tp25321
I3
s(g5216
I42
g5217
Vinsert
p25322
I32
VMethodInvocation
p25323
tp25324
I4
s(g6791
I42
g6792
Vinsert
p25325
I34
VNumberLiteral: 0
p25326
tp25327
I2
s(Vinsert
p25328
I42
VSimpleName: getClass
p25329
Vinsert
p25330
I43
VSimpleType: T
p25331
tp25332
I1
s(g20782
I42
g20783
Vinsert
p25333
I59
VVariableDeclarationFragment
p25334
tp25335
I2
s(g15536
I42
g15537
Vinsert
p25336
I59
VVariableDeclarationFragment
p25337
tp25338
I2
s(Vinsert
p25339
I42
VSimpleName: limit
p25340
Vinsert
p25341
I40
VQualifiedName: com.alibaba.druid.sql.PagerUtils
p25342
tp25343
I1
s(g3793
I42
g3794
Vinsert
p25344
I42
VSimpleName: ArrayList
p25345
tp25346
I1
s(g2349
I42
g2350
Vinsert
p25347
I42
VSimpleName: isPrettyFormat
p25348
tp25349
I1
s(g12565
I42
g12566
Vinsert
p25350
I42
VSimpleName: getNativePreparedStatement
p25351
tp25352
I1
s(Vinsert
p25353
I42
VSimpleName: token
p25354
Vinsert
p25355
I43
VSimpleType: SQLSelectQueryBlock
p25356
tp25357
I1
s(Vinsert
p25358
I42
VSimpleName: setParent
p25359
Vinsert
p25360
I42
VSimpleName: qualify
p25361
tp25362
I3
s(g12090
I42
g12091
Vinsert
p25363
I32
VMethodInvocation
p25364
tp25365
I1
s(g1344
I42
g1345
Vinsert
p25366
I42
VSimpleName: isLinux
p25367
tp25368
I1
s(g18891
I42
g18892
Vinsert
p25369
I43
VSimpleType: OdpsLexer
p25370
tp25371
I3
s(g10752
I42
g10753
Vinsert
p25372
I8
VBlock
p25373
tp25374
I1
s(g336
I42
g337
Vinsert
p25375
I14
VClassInstanceCreation
p25376
tp25377
I1
s(g1853
I42
g1854
Vinsert
p25378
I42
VSimpleName: entry
p25379
tp25380
I1
s(Vinsert
p25381
I42
VSimpleName: setMaxWait
p25382
Vinsert
p25383
I42
VSimpleName: Exception
p25384
tp25385
I1
s(g1284
I42
g1285
Vinsert
p25386
I34
VNumberLiteral: 0
p25387
tp25388
I1
s(Vinsert
p25389
I42
VSimpleName: currentThread
p25390
Vinsert
p25391
I42
VSimpleName: OracleValidConnectionChecker
p25392
tp25393
I1
s(g7293
I42
g7294
Vinsert
p25394
I42
VSimpleName: Assert
p25395
tp25396
I1
s(g3584
I42
g3585
Vinsert
p25397
I42
VSimpleName: mockStmt
p25398
tp25399
I2
s(g12844
I42
g12845
Vinsert
p25400
I42
VSimpleName: unique
p25401
tp25402
I7
s(g6207
I42
g6208
Vinsert
p25403
I42
VSimpleName: getObjectType
p25404
tp25405
I1
s(g670
I42
g671
Vinsert
p25406
I21
VExpressionStatement
p25407
tp25408
I2
s(Vinsert
p25409
I42
VSimpleName: length
p25410
Vinsert
p25411
I42
VSimpleName: startsWith
p25412
tp25413
I1
s(g7602
I42
g7603
Vinsert
p25414
I42
VSimpleName: union
p25415
tp25416
I1
s(Vinsert
p25417
I42
VSimpleName: setConnectionProperties
p25418
Vinsert
p25419
I42
VSimpleName: DruidDataSource
p25420
tp25421
I1
s(Vinsert
p25422
I42
VSimpleName: setUser
p25423
Vinsert
p25424
I42
VSimpleName: lexer
p25425
tp25426
I3
s(g16512
I42
g16513
Vinsert
p25427
I42
VSimpleName: hasResource
p25428
tp25429
I2
s(Vinsert
p25430
I42
VSimpleName: stringVal
p25431
Vinsert
p25432
I45
VStringLiteral: "trim_option"
p25433
tp25434
I1
s(g5610
I42
g5611
Vinsert
p25435
I25
VIfStatement
p25436
tp25437
I1
s(g19678
I42
g19679
Vinsert
p25438
I52
VThisExpression
p25439
tp25440
I2
s(g1928
I42
g1929
Vinsert
p25441
I42
VSimpleName: pivot
p25442
tp25443
I2
s(g5569
I42
g5570
Vinsert
p25444
I22
VFieldAccess
p25445
tp25446
I1
s(g22375
I42
g22376
Vinsert
p25447
I42
VSimpleName: InstantiationException
p25448
tp25449
I1
s(Vinsert
p25450
I42
VSimpleName: assertEquals
p25451
Vinsert
p25452
I42
VSimpleName: getDeviceAndroidCount
p25453
tp25454
I7
s(g15407
I42
g15408
Vinsert
p25455
I45
VStringLiteral: "DROP KEY "
p25456
tp25457
I1
s(Vinsert
p25458
I42
VSimpleName: accept
p25459
Vinsert
p25460
I42
VSimpleName: HiveSchemaStatVisitor
p25461
tp25462
I14
s(g3159
I42
g3160
Vinsert
p25463
I8
VBlock
p25464
tp25465
I3
s(g22009
I42
g22010
Vinsert
p25466
I43
VSimpleType: SQLExprParser
p25467
tp25468
I3
s(g13643
I42
g13644
Vinsert
p25469
I42
VSimpleName: Exception
p25470
tp25471
I1
s(g13042
I42
g13043
Vinsert
p25472
I27
VInfixExpression: &&
p25473
tp25474
I3
s(g17408
I42
g17409
Vinsert
p25475
I42
VSimpleName: TestUtil
p25476
tp25477
I2
s(g9534
I42
g9535
Vinsert
p25478
I42
VSimpleName: SQLException
p25479
tp25480
I1
s(g13617
I42
g13618
Vinsert
p25481
I43
VSimpleType: String
p25482
tp25483
I1
s(g2359
I42
g2360
Vinsert
p25484
I43
VSimpleType: CompositeType
p25485
tp25486
I1
s(g4801
I42
g4802
Vinsert
p25487
I43
VSimpleType: HBaseDriver
p25488
tp25489
I8
s(g4268
I42
g4269
Vinsert
p25490
I21
VExpressionStatement
p25491
tp25492
I2
s(Vinsert
p25493
I42
VSimpleName: size
p25494
Vinsert
p25495
I42
VSimpleName: incrementIndent
p25496
tp25497
I1
s(g5724
I42
g5725
Vinsert
p25498
I14
VClassInstanceCreation
p25499
tp25500
I1
s(g14640
I42
g14641
Vinsert
p25501
I14
VClassInstanceCreation
p25502
tp25503
I1
s(g1770
I42
g1771
Vinsert
p25504
I45
VStringLiteral: "tenant"
p25505
tp25506
I6
s(g9854
I42
g9855
Vinsert
p25507
I42
VSimpleName: List
p25508
tp25509
I1
s(g617
I42
g618
Vinsert
p25510
I42
VSimpleName: configLoadPeriodMillis
p25511
tp25512
I1
s(Vinsert
p25513
I42
VSimpleName: assertTrue
p25514
Vinsert
p25515
I45
VStringLiteral: "begin\u005cn"
p25516
tp25517
I1
s(g4015
I42
g4016
Vinsert
p25518
I42
VSimpleName: url
p25519
tp25520
I2
s(g11601
I42
g11602
Vinsert
p25521
I25
VIfStatement
p25522
tp25523
I1
s(Vinsert
p25524
I42
VSimpleName: set
p25525
Vinsert
p25526
I42
VSimpleName: values
p25527
tp25528
I1
s(g18086
I42
g18087
Vinsert
p25529
I42
VSimpleName: registerFunction
p25530
tp25531
I1
s(g7665
I42
g7666
Vinsert
p25532
I44
VSingleVariableDeclaration
p25533
tp25534
I1
s(g15119
I42
g15120
Vinsert
p25535
I42
VSimpleName: getExprParser
p25536
tp25537
I1
s(g5628
I42
g5629
Vinsert
p25538
I45
VStringLiteral: "CURRENT_USER"
p25539
tp25540
I1
s(g14790
I42
g14791
Vinsert
p25541
I16
VConditionalExpression
p25542
tp25543
I1
s(g16321
I42
g16322
Vinsert
p25544
I42
VSimpleName: intValue
p25545
tp25546
I4
s(g17012
I42
g17013
Vinsert
p25547
I27
VInfixExpression: &&
p25548
tp25549
I3
s(g18831
I42
g18832
Vinsert
p25550
I42
VSimpleName: Object
p25551
tp25552
I1
s(g19849
I42
g19850
Vinsert
p25553
I14
VClassInstanceCreation
p25554
tp25555
I1
s(Vinsert
p25556
I42
VSimpleName: getConfig
p25557
Vinsert
p25558
I42
VSimpleName: ispPivileged
p25559
tp25560
I1
s(g4303
I42
g4304
Vinsert
p25561
I45
VStringLiteral: "\u005ct\u005ctIF ctx2.currentstr IS NULL THEN\u005cn"
p25562
tp25563
I1
s(g11025
I42
g11026
Vinsert
p25564
I40
VQualifiedName: Token.LPAREN
p25565
tp25566
I1
s(g3664
I42
g3665
Vinsert
p25567
I16
VConditionalExpression
p25568
tp25569
I1
s(g3508
I42
g3509
Vinsert
p25570
I43
VSimpleType: SQLSelectItem
p25571
tp25572
I3
s(Vinsert
p25573
I42
VSimpleName: getMethod
p25574
Vinsert
p25575
I54
VTryStatement
p25576
tp25577
I2
s(Vinsert
p25578
I42
VSimpleName: getExecuteCount
p25579
Vinsert
p25580
I42
VSimpleName: statValue
p25581
tp25582
I5
s(g972
I42
g973
Vinsert
p25583
I45
VStringLiteral: "\u005ct\u005c"LOCK_MODE\u005c"\u005cn"
p25584
tp25585
I1
s(Vinsert
p25586
I42
VSimpleName: fnv_64_lower
p25587
Vinsert
p25588
I42
VSimpleName: Exception
p25589
tp25590
I1
s(g19077
I42
g19078
Vinsert
p25591
I32
VMethodInvocation
p25592
tp25593
I27
s(Vinsert
p25594
I42
VSimpleName: exportParameter
p25595
Vinsert
p25596
I27
VInfixExpression: ||
p25597
tp25598
I1
s(Vinsert
p25599
I42
VSimpleName: setParent
p25600
Vinsert
p25601
I42
VSimpleName: renameTo
p25602
tp25603
I6
s(g8583
I42
g8584
Vinsert
p25604
I42
VSimpleName: slave
p25605
tp25606
I2
s(g11217
I42
g11218
Vinsert
p25607
I27
VInfixExpression: !=
p25608
tp25609
I3
s(g19924
I42
g19925
Vinsert
p25610
I8
VBlock
p25611
tp25612
I1
s(g9006
I42
g9007
Vinsert
p25613
I42
VSimpleName: Override
p25614
tp25615
I6
s(Vinsert
p25616
I42
VSimpleName: toSQLString
p25617
Vinsert
p25618
I45
VStringLiteral: "\u005ct, utl_raw.cast_to_raw(CONTRACT_SERIAL) AS CONTRACT_SERIAL, IS_MERGED\u005cn"
p25619
tp25620
I1
s(g13429
I42
g13430
Vinsert
p25621
I42
VSimpleName: hints
p25622
tp25623
I4
s(Vinsert
p25624
I42
VSimpleName: setParent
p25625
Vinsert
p25626
I42
VSimpleName: addUser
p25627
tp25628
I1
s(g1627
I42
g1628
Vinsert
p25629
I32
VMethodInvocation
p25630
tp25631
I4
s(g8514
I42
g8515
Vinsert
p25632
I42
VSimpleName: h2
p25633
tp25634
I2
s(g15367
I42
g15368
Vinsert
p25635
I8
VBlock
p25636
tp25637
I5
s(g10433
I42
g10434
Vinsert
p25638
I42
VSimpleName: entryStat
p25639
tp25640
I2
s(Vinsert
p25641
I42
VSimpleName: size
p25642
Vinsert
p25643
I42
VSimpleName: listener
p25644
tp25645
I2
s(g8863
I42
g8864
Vinsert
p25646
I43
VSimpleType: Field
p25647
tp25648
I6
s(g8598
I42
g8599
Vinsert
p25649
I42
VSimpleName: SQLQueryExpr
p25650
tp25651
I2
s(Vinsert
p25652
I42
VSimpleName: size
p25653
Vinsert
p25654
I42
VSimpleName: getLine
p25655
tp25656
I2
s(g24641
I42
g24642
Vinsert
p25657
I33
VNullLiteral
p25658
tp25659
I1
s(g23118
I42
g23119
Vinsert
p25660
I42
VSimpleName: getInstance
p25661
tp25662
I2
s(g4075
I42
g4076
Vinsert
p25663
I14
VClassInstanceCreation
p25664
tp25665
I1
s(g291
I42
g292
Vinsert
p25666
I21
VExpressionStatement
p25667
tp25668
I1
s(g5648
I42
g5649
Vinsert
p25669
I7
VAssignment: =
p25670
tp25671
I1
s(g10697
I42
g10698
Vinsert
p25672
I42
VSimpleName: getPermitSchemas
p25673
tp25674
I2
s(Vinsert
p25675
I42
VSimpleName: getSqlList
p25676
Vinsert
p25677
I42
VSimpleName: SQLException
p25678
tp25679
I1
s(g13022
I42
g13023
Vinsert
p25680
I42
VSimpleName: IllegalSQLObjectViolation
p25681
tp25682
I1
s(Vinsert
p25683
I42
VSimpleName: stringVal
p25684
Vinsert
p25685
I43
VSimpleType: SQLIdentifierExpr
p25686
tp25687
I3
s(g18672
I42
g18673
Vinsert
p25688
I41
VReturnStatement
p25689
tp25690
I1
s(g1770
I42
g1771
Vinsert
p25691
I42
VSimpleName: config
p25692
tp25693
I6
s(g20035
I42
g20036
Vinsert
p25694
I60
VVariableDeclarationStatement
p25695
tp25696
I1
s(g4160
I42
g4161
Vinsert
p25697
I31
VMethodDeclaration
p25698
tp25699
I1
s(g11420
I42
g11421
Vinsert
p25700
I43
VSimpleType: PGUpdateStatement
p25701
tp25702
I2
s(g4045
I42
g4046
Vinsert
p25703
I42
VSimpleName: countFilter
p25704
tp25705
I2
s(g7111
I42
g7112
Vinsert
p25706
I42
VSimpleName: resolve
p25707
tp25708
I1
s(g16335
I42
g16336
Vinsert
p25709
I8
VBlock
p25710
tp25711
I2
s(g1
I42
g2
Vinsert
p25712
I83
VModifier: public
p25713
tp25714
I1
s(g22546
I42
g22547
Vinsert
p25715
I42
VSimpleName: SQLExprTableSource
p25716
tp25717
I1
s(g7375
I42
g7376
Vinsert
p25718
I42
VSimpleName: execute
p25719
tp25720
I2
s(Vinsert
p25721
I42
VSimpleName: handleSleep
p25722
Vinsert
p25723
I42
VSimpleName: mockConnection
p25724
tp25725
I8
s(g9704
I42
g9705
Vinsert
p25726
I43
VSimpleType: Component
p25727
tp25728
I1
s(g4404
I42
g4405
Vinsert
p25729
I52
VThisExpression
p25730
tp25731
I1
s(g17221
I42
g17222
Vinsert
p25732
I41
VReturnStatement
p25733
tp25734
I1
s(Vinsert
p25735
I42
VSimpleName: getName
p25736
Vinsert
p25737
I42
VSimpleName: MySqlShowCreateTableStatement
p25738
tp25739
I2
s(Vinsert
p25740
I42
VSimpleName: expr
p25741
Vinsert
p25742
I43
VSimpleType: SQLBetweenExpr
p25743
tp25744
I1
s(g4926
I42
g4927
Vinsert
p25745
I14
VClassInstanceCreation
p25746
tp25747
I1
s(g20051
I42
g20052
Vinsert
p25748
I43
VSimpleType: SQLForeignKeyImpl
p25749
tp25750
I1
s(Vinsert
p25751
I42
VSimpleName: lock
p25752
Vinsert
p25753
I52
VThisExpression
p25754
tp25755
I3
s(Vinsert
p25756
I42
VSimpleName: put
p25757
Vinsert
p25758
I42
VSimpleName: ident
p25759
tp25760
I2
s(g76
I42
g77
Vinsert
p25761
I59
VVariableDeclarationFragment
p25762
tp25763
I1
s(g12095
I42
g12096
Vinsert
p25764
I45
VStringLiteral: "\u005cnLOB (\u005c"DATA\u005c") STORE AS SECUREFILE (TABLESPACE \u005c"USERS\u005c" ENABLE STORAGE IN ROW CHUNK 8192 NOCACHE LOGGING NOCOMPRESS KEEP_DUPLICATES)"
p25765
tp25766
I2
s(g12993
I42
g12994
Vinsert
p25767
I45
VStringLiteral: "root"
p25768
tp25769
I2
s(g17997
I42
g17998
Vinsert
p25770
I74
VParameterizedType: ArrayList<SQLSelectOrderByItem>
p25771
tp25772
I1
s(Vinsert
p25773
I42
VSimpleName: nextToken
p25774
Vinsert
p25775
I42
VSimpleName: MySqlSetPasswordStatement
p25776
tp25777
I1
s(g12034
I42
g12035
Vinsert
p25778
I83
VModifier: protected
p25779
tp25780
I1
s(g15177
I42
g15178
Vinsert
p25781
I42
VSimpleName: List
p25782
tp25783
I1
s(g7908
I42
g7909
Vinsert
p25784
I59
VVariableDeclarationFragment
p25785
tp25786
I3
s(g8184
I42
g8185
Vinsert
p25787
I32
VMethodInvocation
p25788
tp25789
I3
s(g3360
I42
g3361
Vinsert
p25790
I32
VMethodInvocation
p25791
tp25792
I16
s(g11795
I42
g11796
Vinsert
p25793
I42
VSimpleName: SQLException
p25794
tp25795
I1
s(g4303
I42
g4304
Vinsert
p25796
I45
VStringLiteral: "\u005ctBEGIN\u005cn"
p25797
tp25798
I4
s(g7702
I42
g7703
Vinsert
p25799
I32
VMethodInvocation
p25800
tp25801
I3
s(g14139
I42
g14140
Vinsert
p25802
I74
VParameterizedType: Map<Integer,JdbcParameter>
p25803
tp25804
I3
s(g13001
I42
g13002
Vinsert
p25805
I43
VSimpleType: DruidDataSourceProperties
p25806
tp25807
I1
s(g5195
I42
g5196
Vinsert
p25808
I42
VSimpleName: stringVal
p25809
tp25810
I1
s(Vinsert
p25811
I42
VSimpleName: nextToken
p25812
Vinsert
p25813
I45
VStringLiteral: "LOGS"
p25814
tp25815
I1
s(g12262
I42
g12263
Vinsert
p25816
I42
VSimpleName: markBp
p25817
tp25818
I3
s(g14605
I42
g14606
Vinsert
p25819
I8
VBlock
p25820
tp25821
I1
s(g16447
I42
g16448
Vinsert
p25822
I8
VBlock
p25823
tp25824
I1
s(g11765
I42
g11766
Vinsert
p25825
I76
VWildcardType: ?
p25826
tp25827
I2
s(g17594
I42
g17595
Vinsert
p25828
I45
VStringLiteral: "A"
p25829
tp25830
I2
s(g9524
I42
g9525
Vinsert
p25831
I45
VStringLiteral: "\u005ct\u005ctand UT.item_id = CLK.item_id\u005cn"
p25832
tp25833
I1
s(Vinsert
p25834
I42
VSimpleName: fnv_64_lower_normalized
p25835
Vinsert
p25836
I33
VNullLiteral
p25837
tp25838
I3
s(g21900
I42
g21901
Vinsert
p25839
I27
VInfixExpression: *
p25840
tp25841
I19
s(g22986
I42
g22987
Vinsert
p25842
I14
VClassInstanceCreation
p25843
tp25844
I1
s(g9534
I42
g9535
Vinsert
p25845
I32
VMethodInvocation
p25846
tp25847
I1
s(g9529
I42
g9530
Vinsert
p25848
I42
VSimpleName: Exception
p25849
tp25850
I1
s(g17439
I42
g17440
Vinsert
p25851
I40
VQualifiedName: value.executeCount
p25852
tp25853
I1
s(Vinsert
p25854
I42
VSimpleName: contains
p25855
Vinsert
p25856
I42
VSimpleName: Properties
p25857
tp25858
I2
s(g25152
I42
g25153
Vinsert
p25859
I42
VSimpleName: connection
p25860
tp25861
I1
s(g12849
I42
g12850
Vinsert
p25862
I42
VSimpleName: normalizedOwner
p25863
tp25864
I3
s(g8622
I42
g8623
Vinsert
p25865
I42
VSimpleName: varName
p25866
tp25867
I5
s(Vinsert
p25868
I42
VSimpleName: formatOdps
p25869
Vinsert
p25870
I45
VStringLiteral: "\u005ct\u005ctAND status IN ('master_appointed', 'trade_complete', 'trade_close')\u005cn"
p25871
tp25872
I1
s(g2538
I42
g2539
Vinsert
p25873
I41
VReturnStatement
p25874
tp25875
I1
s(g9873
I42
g9874
Vinsert
p25876
I57
VTypeLiteral
p25877
tp25878
I1
s(g8583
I42
g8584
Vinsert
p25879
I25
VIfStatement
p25880
tp25881
I1
s(Vinsert
p25882
I42
VSimpleName: getParameters
p25883
Vinsert
p25884
I39
VPrimitiveType: void
p25885
tp25886
I1
s(g13191
I42
g13192
Vinsert
p25887
I42
VSimpleName: dataSource
p25888
tp25889
I4
s(g10100
I42
g10101
Vinsert
p25890
I42
VSimpleName: OutputStreamWriter
p25891
tp25892
I1
s(g1968
I42
g1969
Vinsert
p25893
I60
VVariableDeclarationStatement
p25894
tp25895
I2
s(g13223
I42
g13224
Vinsert
p25896
I42
VSimpleName: savePointString
p25897
tp25898
I1
s(g4819
I42
g4820
Vinsert
p25899
I45
VStringLiteral: "\u005cn\u005ct\u005ctOR d.indkey[3] = a.attnum"
p25900
tp25901
I1
s(g2707
I42
g2708
Vinsert
p25902
I83
VModifier: private
p25903
tp25904
I1
s(g919
I42
g920
Vinsert
p25905
I42
VSimpleName: insertStatement
p25906
tp25907
I1
s(Vinsert
p25908
I42
VSimpleName: size
p25909
Vinsert
p25910
I34
VNumberLiteral: 7
p25911
tp25912
I1
s(Vinsert
p25913
I42
VSimpleName: token
p25914
Vinsert
p25915
I42
VSimpleName: markChar
p25916
tp25917
I1
s(g8399
I42
g8400
Vinsert
p25918
I42
VSimpleName: Exception
p25919
tp25920
I1
s(g4931
I42
g4932
Vinsert
p25921
I42
VSimpleName: visit
p25922
tp25923
I3
s(Vinsert
p25924
I42
VSimpleName: size
p25925
Vinsert
p25926
I42
VSimpleName: beanInfo
p25927
tp25928
I1
s(g2900
I42
g2901
Vinsert
p25929
I45
VStringLiteral: "com.mysql.jdbc.RowDataDynamic"
p25930
tp25931
I1
s(g23934
I42
g23935
Vinsert
p25932
I45
VStringLiteral: "orderBy : "
p25933
tp25934
I3
s(g13166
I42
g13167
Vinsert
p25935
I42
VSimpleName: print
p25936
tp25937
I1
s(g3689
I42
g3690
Vinsert
p25938
I44
VSingleVariableDeclaration
p25939
tp25940
I1
s(g18187
I42
g18188
Vinsert
p25941
I42
VSimpleName: WallConfig
p25942
tp25943
I8
s(g20470
I42
g20471
Vinsert
p25944
I42
VSimpleName: sql
p25945
tp25946
I1
s(g8103
I42
g8104
Vinsert
p25947
I41
VReturnStatement
p25948
tp25949
I1
s(Vinsert
p25950
I42
VSimpleName: assertEquals
p25951
Vinsert
p25952
I42
VSimpleName: callableStatement_getClob
p25953
tp25954
I2
s(g10550
I42
g10551
Vinsert
p25955
I42
VSimpleName: AesDecrypter
p25956
tp25957
I2
s(g10493
I42
g10494
Vinsert
p25958
I43
VSimpleType: SQLException
p25959
tp25960
I1
s(Vinsert
p25961
I42
VSimpleName: findColumn
p25962
Vinsert
p25963
I42
VSimpleName: table
p25964
tp25965
I1
s(g9420
I42
g9421
Vinsert
p25966
I42
VSimpleName: assertEquals
p25967
tp25968
I2
s(g23934
I42
g23935
Vinsert
p25969
I42
VSimpleName: visitor
p25970
tp25971
I6
s(g9230
I42
g9231
Vinsert
p25972
I42
VSimpleName: setExpr
p25973
tp25974
I1
s(Vinsert
p25975
I42
VSimpleName: getHints
p25976
Vinsert
p25977
I27
VInfixExpression: >
p25978
tp25979
I2
s(Vinsert
p25980
I42
VSimpleName: accept0
p25981
Vinsert
p25982
I42
VSimpleName: dbLink
p25983
tp25984
I1
s(Vinsert
p25985
I42
VSimpleName: println
p25986
Vinsert
p25987
I42
VSimpleName: toString
p25988
tp25989
I2
s(Vinsert
p25990
I42
VSimpleName: assertEquals
p25991
Vinsert
p25992
I45
VStringLiteral: "\u005cndrop function if exists mytables;"
p25993
tp25994
I1
s(g1198
I42
g1199
Vinsert
p25995
I60
VVariableDeclarationStatement
p25996
tp25997
I3
s(g5389
I42
g5390
Vinsert
p25998
I42
VSimpleName: dbType
p25999
tp26000
I2
s(g25594
I42
g25595
Vinsert
p26001
I62
VInstanceofExpression
p26002
tp26003
I2
s(g6207
I42
g6208
Vinsert
p26004
I42
VSimpleName: x
p26005
tp26006
I2
s(g6252
I42
g6253
Vinsert
p26007
I42
VSimpleName: visit
p26008
tp26009
I1
s(g18036
I42
g18037
Vinsert
p26010
I42
VSimpleName: getOperator
p26011
tp26012
I3
s(Vinsert
p26013
I42
VSimpleName: toString
p26014
Vinsert
p26015
I42
VSimpleName: initStackTrace
p26016
tp26017
I1
s(g4839
I42
g4840
Vinsert
p26018
I60
VVariableDeclarationStatement
p26019
tp26020
I1
s(g4490
I42
g4491
Vinsert
p26021
I42
VSimpleName: MySqlSelectParser
p26022
tp26023
I2
s(Vinsert
p26024
I42
VSimpleName: assertEquals
p26025
Vinsert
p26026
I45
VStringLiteral: "select * from t where -- comment_xx"
p26027
tp26028
I1
s(g7522
I42
g7523
Vinsert
p26029
I42
VSimpleName: i
p26030
tp26031
I2
s(g6717
I42
g6718
Vinsert
p26032
I39
VPrimitiveType: void
p26033
tp26034
I6
s(g670
I42
g671
Vinsert
p26035
I42
VSimpleName: dataSource
p26036
tp26037
I4
s(g1665
I42
g1666
Vinsert
p26038
I45
VStringLiteral: "UPDATE x1_use_agent t2\u005cn"
p26039
tp26040
I1
s(g18145
I42
g18146
Vinsert
p26041
I27
VInfixExpression: +
p26042
tp26043
I1
s(g10966
I42
g10967
Vinsert
p26044
I42
VSimpleName: XADataSource
p26045
tp26046
I1
s(g11845
I42
g11846
Vinsert
p26047
I42
VSimpleName: ucase
p26048
tp26049
I1
s(g5118
I42
g5119
Vinsert
p26050
I42
VSimpleName: setLoggerName
p26051
tp26052
I1
s(g25306
I42
g25307
Vinsert
p26053
I43
VSimpleType: JdbcStatementStat
p26054
tp26055
I1
s(g7502
I42
g7503
Vinsert
p26056
I42
VSimpleName: setStatementLogger
p26057
tp26058
I1
s(g41
I42
g42
Vinsert
p26059
I7
VAssignment: =
p26060
tp26061
I1
s(g1943
I42
g1944
Vinsert
p26062
I43
VSimpleType: PreparedStatement
p26063
tp26064
I1
s(g1135
I42
g1136
Vinsert
p26065
I7
VAssignment: =
p26066
tp26067
I1
s(g6786
I42
g6787
Vinsert
p26068
I33
VNullLiteral
p26069
tp26070
I2
s(g2158
I42
g2159
Vinsert
p26071
I43
VSimpleType: MySqlForeignKey
p26072
tp26073
I2
s(g5040
I42
g5041
Vinsert
p26074
I42
VSimpleName: isEnabled
p26075
tp26076
I1
s(g627
I42
g628
Vinsert
p26077
I42
VSimpleName: lexer
p26078
tp26079
I60
s(Vinsert
p26080
I42
VSimpleName: getEventType
p26081
Vinsert
p26082
I8
VBlock
p26083
tp26084
I1
s(g11667
I42
g11668
Vinsert
p26085
I42
VSimpleName: map
p26086
tp26087
I2
s(g11654
I42
g11655
Vinsert
p26088
I16
VConditionalExpression
p26089
tp26090
I1
s(g18113
I42
g18114
Vinsert
p26091
I43
VSimpleType: SQLName
p26092
tp26093
I1
s(g1370
I42
g1371
Vinsert
p26094
I31
VMethodDeclaration
p26095
tp26096
I1
s(g3816
I42
g3817
Vinsert
p26097
I42
VSimpleName: conn
p26098
tp26099
I2
s(g20470
I42
g20471
Vinsert
p26100
I60
VVariableDeclarationStatement
p26101
tp26102
I3
s(g2268
I42
g2269
Vinsert
p26103
I8
VBlock
p26104
tp26105
I5
s(g13981
I42
g13982
Vinsert
p26106
I32
VMethodInvocation
p26107
tp26108
I3
s(g25556
I42
g25557
Vinsert
p26109
I42
VSimpleName: connection
p26110
tp26111
I1
s(g23045
I42
g23046
Vinsert
p26112
I42
VSimpleName: visit
p26113
tp26114
I1
s(g15480
I42
g15481
Vinsert
p26115
I42
VSimpleName: statementLogger
p26116
tp26117
I1
s(g4997
I42
g4998
Vinsert
p26118
I43
VSimpleType: SQLObject
p26119
tp26120
I8
s(g16248
I42
g16249
Vinsert
p26121
I42
VSimpleName: printChars
p26122
tp26123
I1
s(Vinsert
p26124
I42
VSimpleName: getColumns
p26125
Vinsert
p26126
I45
VStringLiteral: "MATCH ("
p26127
tp26128
I1
s(g25811
I42
g25812
Vinsert
p26129
I42
VSimpleName: setErrorLogs
p26130
tp26131
I1
s(g13677
I42
g13678
Vinsert
p26132
I42
VSimpleName: right
p26133
tp26134
I1
s(Vinsert
p26135
I42
VSimpleName: visit
p26136
Vinsert
p26137
I42
VSimpleName: constraintName
p26138
tp26139
I3
s(g1471
I42
g1472
Vinsert
p26140
I42
VSimpleName: startLatch
p26141
tp26142
I6
s(Vinsert
p26143
I42
VSimpleName: toBytes
p26144
Vinsert
p26145
I32
VMethodInvocation
p26146
tp26147
I11
s(g6343
I42
g6344
Vinsert
p26148
I43
VSimpleType: Exception
p26149
tp26150
I2
s(g24686
I42
g24687
Vinsert
p26151
I21
VExpressionStatement
p26152
tp26153
I1
s(g10480
I42
g10481
Vinsert
p26154
I33
VNullLiteral
p26155
tp26156
I2
s(g7965
I42
g7966
Vinsert
p26157
I42
VSimpleName: List
p26158
tp26159
I1
s(Vinsert
p26160
I42
VSimpleName: toSQLString
p26161
Vinsert
p26162
I43
VSimpleType: IllegalSQLObjectViolation
p26163
tp26164
I1
s(g1544
I42
g1545
Vinsert
p26165
I32
VMethodInvocation
p26166
tp26167
I87
s(g22913
I42
g22914
Vinsert
p26168
I43
VSimpleType: DruidAbstractDataSource
p26169
tp26170
I1
s(g2875
I42
g2876
Vinsert
p26171
I43
VSimpleType: ProxoolDataSource
p26172
tp26173
I4
s(Vinsert
p26174
I42
VSimpleName: set
p26175
Vinsert
p26176
I42
VSimpleName: executeErrorCount
p26177
tp26178
I1
s(Vinsert
p26179
I42
VSimpleName: clone
p26180
Vinsert
p26181
I42
VSimpleName: name
p26182
tp26183
I3
s(g6333
I42
g6334
Vinsert
p26184
I45
VStringLiteral: "organization "
p26185
tp26186
I1
s(g14680
I42
g14681
Vinsert
p26187
I42
VSimpleName: JSON
p26188
tp26189
I1
s(g3233
I42
g3234
Vinsert
p26190
I32
VMethodInvocation
p26191
tp26192
I17
s(g11217
I42
g11218
Vinsert
p26193
I8
VBlock
p26194
tp26195
I5
s(g11297
I42
g11298
Vinsert
p26196
I42
VSimpleName: data
p26197
tp26198
I1
s(Vinsert
p26199
I42
VSimpleName: size
p26200
Vinsert
p26201
I43
VSimpleType: OracleOutputVisitor
p26202
tp26203
I1
s(g497
I42
g498
Vinsert
p26204
I54
VTryStatement
p26205
tp26206
I1
s(g13228
I42
g13229
Vinsert
p26207
I42
VSimpleName: StringBuffer
p26208
tp26209
I2
s(g796
I42
g797
Vinsert
p26210
I42
VSimpleName: OracleConnection
p26211
tp26212
I2
s(Vinsert
p26213
I42
VSimpleName: assertTrue
p26214
Vinsert
p26215
I42
VSimpleName: getConfig
p26216
tp26217
I3
s(g1309
I42
g1310
Vinsert
p26218
I42
VSimpleName: Column
p26219
tp26220
I1
s(Vinsert
p26221
I42
VSimpleName: add
p26222
Vinsert
p26223
I42
VSimpleName: objectName
p26224
tp26225
I3
s(g7927
I42
g7928
Vinsert
p26226
I42
VSimpleName: exprParser
p26227
tp26228
I4
s(g700
I42
g701
Vinsert
p26229
I42
VSimpleName: jdbcUrl
p26230
tp26231
I1
s(g2842
I42
g2843
Vinsert
p26232
I41
VReturnStatement
p26233
tp26234
I1
s(g11654
I42
g11655
Vinsert
p26235
I42
VSimpleName: getOnDelete
p26236
tp26237
I1
s(g15359
I42
g15360
Vinsert
p26238
I42
VSimpleName: properties
p26239
tp26240
I1
s(g14754
I42
g14755
Vinsert
p26241
I43
VSimpleType: PGUtils
p26242
tp26243
I1
s(Vinsert
p26244
I42
VSimpleName: getBlobOpenCount
p26245
Vinsert
p26246
I42
VSimpleName: getSqlStat
p26247
tp26248
I1
s(g2805
I42
g2806
Vinsert
p26249
I43
VSimpleType: ConcurrentMap
p26250
tp26251
I1
s(Vinsert
p26252
I42
VSimpleName: put
p26253
Vinsert
p26254
I21
VExpressionStatement
p26255
tp26256
I183
s(g3921
I42
g3922
Vinsert
p26257
I24
VForStatement
p26258
tp26259
I2
s(Vinsert
p26260
I42
VSimpleName: getLike
p26261
Vinsert
p26262
I25
VIfStatement
p26263
tp26264
I3
s(Vinsert
p26265
I42
VSimpleName: accept
p26266
Vinsert
p26267
I42
VSimpleName: SQLCreateViewStatement
p26268
tp26269
I1
s(g11611
I42
g11612
Vinsert
p26270
I42
VSimpleName: assertEquals
p26271
tp26272
I13
s(g3282
I42
g3283
Vinsert
p26273
I45
VStringLiteral: " INITIAL_SIZE "
p26274
tp26275
I1
s(g9415
I42
g9416
Vinsert
p26276
I59
VVariableDeclarationFragment
p26277
tp26278
I1
s(g4293
I42
g4294
Vinsert
p26279
I42
VSimpleName: Assert
p26280
tp26281
I1
s(g22840
I42
g22841
Vinsert
p26282
I42
VSimpleName: test_stuff
p26283
tp26284
I4
s(g12671
I42
g12672
Vinsert
p26285
I42
VSimpleName: subPartitionByClause
p26286
tp26287
I1
s(g4745
I42
g4746
Vinsert
p26288
I42
VSimpleName: stmt2
p26289
tp26290
I1
s(g10829
I42
g10830
Vinsert
p26291
I43
VSimpleType: StringTokenizer
p26292
tp26293
I1
s(g2289
I42
g2290
Vinsert
p26294
I42
VSimpleName: read
p26295
tp26296
I1
s(g1329
I42
g1330
Vinsert
p26297
I43
VSimpleType: String
p26298
tp26299
I1
s(Vinsert
p26300
I42
VSimpleName: put
p26301
Vinsert
p26302
I42
VSimpleName: selectCount
p26303
tp26304
I1
s(g19849
I42
g19850
Vinsert
p26305
I40
VQualifiedName: Token.INDEX
p26306
tp26307
I1
s(g20079
I42
g20080
Vinsert
p26308
I42
VSimpleName: resultSet
p26309
tp26310
I2
s(g6338
I42
g6339
Vinsert
p26311
I42
VSimpleName: master
p26312
tp26313
I2
s(g13277
I42
g13278
Vinsert
p26314
I42
VSimpleName: value
p26315
tp26316
I6
s(g5872
I42
g5873
Vinsert
p26317
I27
VInfixExpression: ==
p26318
tp26319
I2
s(g9190
I42
g9191
Vinsert
p26320
I27
VInfixExpression: !=
p26321
tp26322
I1
s(g13089
I42
g13090
Vinsert
p26323
I60
VVariableDeclarationStatement
p26324
tp26325
I1
s(Vinsert
p26326
I42
VSimpleName: setConstraintName
p26327
Vinsert
p26328
I42
VSimpleName: SQLAlterTableDisableConstraint
p26329
tp26330
I2
s(g6597
I42
g6598
Vinsert
p26331
I42
VSimpleName: getContextClassLoader
p26332
tp26333
I1
s(Vinsert
p26334
I42
VSimpleName: getParent
p26335
Vinsert
p26336
I42
VSimpleName: isFirst
p26337
tp26338
I1
s(g16586
I42
g16587
Vinsert
p26339
I44
VSingleVariableDeclaration
p26340
tp26341
I2
s(g477
I42
g478
Vinsert
p26342
I42
VSimpleName: operator
p26343
tp26344
I2
s(g7631
I42
g7632
Vinsert
p26345
I74
VParameterizedType: Map<String,Object>
p26346
tp26347
I1
s(Vinsert
p26348
I42
VSimpleName: nextToken
p26349
Vinsert
p26350
I42
VSimpleName: brace
p26351
tp26352
I1
s(g15514
I42
g15515
Vinsert
p26353
I39
VPrimitiveType: boolean
p26354
tp26355
I1
s(g2935
I42
g2936
Vinsert
p26356
I8
VBlock
p26357
tp26358
I2
s(g9883
I42
g9884
Vinsert
p26359
I21
VExpressionStatement
p26360
tp26361
I4
s(g9350
I42
g9351
Vinsert
p26362
I42
VSimpleName: getSimpleName
p26363
tp26364
I1
s(g3880
I42
g3881
Vinsert
p26365
I42
VSimpleName: method
p26366
tp26367
I2
s(g17106
I42
g17107
Vinsert
p26368
I42
VSimpleName: property
p26369
tp26370
I2
s(g12299
I42
g12300
Vinsert
p26371
I42
VSimpleName: List
p26372
tp26373
I2
s(Vinsert
p26374
I42
VSimpleName: nextToken
p26375
Vinsert
p26376
I40
VQualifiedName: FnvHash.Constants.HOUR
p26377
tp26378
I1
s(g22449
I42
g22450
Vinsert
p26379
I42
VSimpleName: test_random
p26380
tp26381
I1
s(g1594
I42
g1595
Vinsert
p26382
I45
VStringLiteral: "default directory "
p26383
tp26384
I1
s(Vinsert
p26385
I42
VSimpleName: getTableOptions
p26386
Vinsert
p26387
I43
VSimpleType: MySqlSchemaStatVisitor
p26388
tp26389
I1
s(g2489
I42
g2490
Vinsert
p26390
I42
VSimpleName: Object
p26391
tp26392
I3
s(Vinsert
p26393
I42
VSimpleName: trim
p26394
Vinsert
p26395
I42
VSimpleName: buf
p26396
tp26397
I4
s(g17379
I42
g17380
Vinsert
p26398
I42
VSimpleName: enable
p26399
tp26400
I2
s(g346
I42
g347
Vinsert
p26401
I21
VExpressionStatement
p26402
tp26403
I2
s(Vinsert
p26404
I42
VSimpleName: close
p26405
Vinsert
p26406
I42
VSimpleName: Timestamp
p26407
tp26408
I1
s(Vinsert
p26409
I42
VSimpleName: assertEquals
p26410
Vinsert
p26411
I45
VStringLiteral: " select /* + mapjoin(a) */"
p26412
tp26413
I1
s(g21746
I42
g21747
Vinsert
p26414
I42
VSimpleName: x
p26415
tp26416
I2
s(g14001
I42
g14002
Vinsert
p26417
I43
VSimpleType: MultiConnectionHolder
p26418
tp26419
I1
s(g6455
I42
g6456
Vinsert
p26420
I22
VFieldAccess
p26421
tp26422
I1
s(g226
I42
g227
Vinsert
p26423
I42
VSimpleName: updateDataCount_100_1000
p26424
tp26425
I1
s(g15823
I42
g15824
Vinsert
p26426
I42
VSimpleName: setTable
p26427
tp26428
I2
s(g18445
I42
g18446
Vinsert
p26429
I43
VSimpleType: WrapperProxy
p26430
tp26431
I2
s(g17379
I42
g17380
Vinsert
p26432
I32
VMethodInvocation
p26433
tp26434
I1
s(g3401
I42
g3402
Vinsert
p26435
I43
VSimpleType: MySqlSchemaStatVisitor
p26436
tp26437
I1
s(g5084
I42
g5085
Vinsert
p26438
I42
VSimpleName: SQLCreateDatabaseStatement
p26439
tp26440
I1
s(g10061
I42
g10062
Vinsert
p26441
I54
VTryStatement
p26442
tp26443
I1
s(g24923
I42
g24924
Vinsert
p26444
I32
VMethodInvocation
p26445
tp26446
I4
s(g1617
I42
g1618
Vinsert
p26447
I39
VPrimitiveType: void
p26448
tp26449
I1
s(Vinsert
p26450
I42
VSimpleName: getType
p26451
Vinsert
p26452
I43
VSimpleType: AsOfFlashbackQueryClause
p26453
tp26454
I1
s(Vinsert
p26455
I42
VSimpleName: isRow
p26456
Vinsert
p26457
I22
VFieldAccess
p26458
tp26459
I1
s(g612
I42
g613
Vinsert
p26460
I42
VSimpleName: addSqlTableStat
p26461
tp26462
I1
s(Vinsert
p26463
I42
VSimpleName: toSQLString
p26464
Vinsert
p26465
I45
VStringLiteral: "\u005cn\u005ctCONSTRAINT check_sal CHECK (salary * commission_pct <= 5000)"
p26466
tp26467
I2
s(g13525
I42
g13526
Vinsert
p26468
I42
VSimpleName: visit
p26469
tp26470
I3
s(g6116
I42
g6117
Vinsert
p26471
I60
VVariableDeclarationStatement
p26472
tp26473
I1
s(g18796
I42
g18797
Vinsert
p26474
I7
VAssignment: =
p26475
tp26476
I1
s(g5677
I42
g5678
Vinsert
p26477
I42
VSimpleName: msg
p26478
tp26479
I3
s(g5414
I42
g5415
Vinsert
p26480
I42
VSimpleName: ucase
p26481
tp26482
I1
s(g4477
I42
g4478
Vinsert
p26483
I42
VSimpleName: SQLLexer
p26484
tp26485
I2
s(g5470
I42
g5471
Vinsert
p26486
I52
VThisExpression
p26487
tp26488
I1
s(g11808
I42
g11809
Vinsert
p26489
I43
VSimpleType: SQLDropTypeStatement
p26490
tp26491
I1
s(g3078
I42
g3079
Vinsert
p26492
I21
VExpressionStatement
p26493
tp26494
I16
s(g25022
I42
g25023
Vinsert
p26495
I41
VReturnStatement
p26496
tp26497
I1
s(g4829
I42
g4830
Vinsert
p26498
I45
VStringLiteral: "select count(1) from [Tiger_Help] where 1 = 1 and id = 1"
p26499
tp26500
I1
s(Vinsert
p26501
I42
VSimpleName: visit
p26502
Vinsert
p26503
I42
VSimpleName: parameters
p26504
tp26505
I7
s(g13881
I42
g13882
Vinsert
p26506
I21
VExpressionStatement
p26507
tp26508
I1
s(g3982
I42
g3983
Vinsert
p26509
I31
VMethodDeclaration
p26510
tp26511
I1
s(g19451
I42
g19452
Vinsert
p26512
I45
VStringLiteral: "/login.html"
p26513
tp26514
I2
s(g1800
I42
g1801
Vinsert
p26515
I42
VSimpleName: System
p26516
tp26517
I3
s(g6567
I42
g6568
Vinsert
p26518
I42
VSimpleName: getSqlStat
p26519
tp26520
I2
s(Vinsert
p26521
I42
VSimpleName: substring
p26522
Vinsert
p26523
I42
VSimpleName: value
p26524
tp26525
I1
s(Vinsert
p26526
I42
VSimpleName: match
p26527
Vinsert
p26528
I21
VExpressionStatement
p26529
tp26530
I17
s(Vinsert
p26531
I42
VSimpleName: assertNotNull
p26532
Vinsert
p26533
I42
VSimpleName: getSelect
p26534
tp26535
I4
s(g17534
I42
g17535
Vinsert
p26536
I42
VSimpleName: connHolder
p26537
tp26538
I1
s(g8588
I42
g8589
Vinsert
p26539
I14
VClassInstanceCreation
p26540
tp26541
I70
s(g6655
I42
g6656
Vinsert
p26542
I42
VSimpleName: SQLException
p26543
tp26544
I2
s(g1385
I42
g1386
Vinsert
p26545
I42
VSimpleName: identifierEquals
p26546
tp26547
I2
s(Vinsert
p26548
I42
VSimpleName: base64ToByteArray
p26549
Vinsert
p26550
I34
VNumberLiteral: 0
p26551
tp26552
I1
s(Vinsert
p26553
I42
VSimpleName: getIndexName
p26554
Vinsert
p26555
I44
VSingleVariableDeclaration
p26556
tp26557
I1
s(g7320
I42
g7321
Vinsert
p26558
I11
VCastExpression
p26559
tp26560
I1
s(g14702
I42
g14703
Vinsert
p26561
I42
VSimpleName: setProperty
p26562
tp26563
I1
s(g5515
I42
g5516
Vinsert
p26564
I42
VSimpleName: Override
p26565
tp26566
I2
s(g11686
I42
g11687
Vinsert
p26567
I45
VStringLiteral: "\u005cn\u005ctproduct_status VARCHAR2(20),"
p26568
tp26569
I2
s(g20975
I42
g20976
Vinsert
p26570
I32
VMethodInvocation
p26571
tp26572
I1
s(Vinsert
p26573
I42
VSimpleName: getExpr
p26574
Vinsert
p26575
I45
VStringLiteral: "VALUES "
p26576
tp26577
I1
s(g6288
I42
g6289
Vinsert
p26578
I43
VSimpleType: String
p26579
tp26580
I1
s(Vinsert
p26581
I42
VSimpleName: getSchema
p26582
Vinsert
p26583
I59
VVariableDeclarationFragment
p26584
tp26585
I1
s(g4293
I42
g4294
Vinsert
p26586
I8
VBlock
p26587
tp26588
I1
s(g12639
I42
g12640
Vinsert
p26589
I42
VSimpleName: stmt
p26590
tp26591
I10
s(Vinsert
p26592
I42
VSimpleName: setConnectionProperties
p26593
Vinsert
p26594
I34
VNumberLiteral: 0
p26595
tp26596
I1
s(g572
I42
g573
Vinsert
p26597
I42
VSimpleName: getSchemaObject
p26598
tp26599
I2
s(g4055
I42
g4056
Vinsert
p26600
I42
VSimpleName: i
p26601
tp26602
I2
s(Vinsert
p26603
I42
VSimpleName: assertEquals
p26604
Vinsert
p26605
I42
VSimpleName: setQueryTimeout
p26606
tp26607
I1
s(Vinsert
p26608
I42
VSimpleName: getReturning
p26609
Vinsert
p26610
I42
VSimpleName: SQLInsertStatement
p26611
tp26612
I1
s(Vinsert
p26613
I42
VSimpleName: assertTrue
p26614
Vinsert
p26615
I42
VSimpleName: test_resetEnable_empty
p26616
tp26617
I1
s(g23327
I42
g23328
Vinsert
p26618
I42
VSimpleName: parseInt
p26619
tp26620
I2
s(g16767
I42
g16768
Vinsert
p26621
I42
VSimpleName: dbType
p26622
tp26623
I1
s(Vinsert
p26624
I42
VSimpleName: setRowCount
p26625
Vinsert
p26626
I33
VNullLiteral
p26627
tp26628
I1
s(g1180
I42
g1181
Vinsert
p26629
I42
VSimpleName: User
p26630
tp26631
I2
s(g11352
I42
g11353
Vinsert
p26632
I42
VSimpleName: SQLUpdateStatement
p26633
tp26634
I2
s(g4362
I42
g4363
Vinsert
p26635
I43
VSimpleType: WallSqlFunctionStat
p26636
tp26637
I1
s(Vinsert
p26638
I42
VSimpleName: get
p26639
Vinsert
p26640
I45
VStringLiteral: "ALL"
p26641
tp26642
I1
s(g6717
I42
g6718
Vinsert
p26643
I42
VSimpleName: test_export_conditions
p26644
tp26645
I6
s(g17283
I42
g17284
Vinsert
p26646
I45
VStringLiteral: "update x"
p26647
tp26648
I1
s(g3012
I42
g3013
Vinsert
p26649
I7
VAssignment: =
p26650
tp26651
I2
s(g1700
I42
g1701
Vinsert
p26652
I14
VClassInstanceCreation
p26653
tp26654
I1
s(g16359
I42
g16360
Vinsert
p26655
I21
VExpressionStatement
p26656
tp26657
I5
s(g4946
I42
g4947
Vinsert
p26658
I42
VSimpleName: left
p26659
tp26660
I3
s(g21809
I42
g21810
Vinsert
p26661
I83
VModifier: final
p26662
tp26663
I1
s(g13201
I42
g13202
Vinsert
p26664
I40
VQualifiedName: x.not
p26665
tp26666
I1
s(g10874
I42
g10875
Vinsert
p26667
I32
VMethodInvocation
p26668
tp26669
I4
s(Vinsert
p26670
I42
VSimpleName: assertEquals
p26671
Vinsert
p26672
I42
VSimpleName: getErrorCount
p26673
tp26674
I1
s(Vinsert
p26675
I42
VSimpleName: accept
p26676
Vinsert
p26677
I42
VSimpleName: query
p26678
tp26679
I2
s(g291
I42
g292
Vinsert
p26680
I42
VSimpleName: WallContext
p26681
tp26682
I2
s(g21783
I42
g21784
Vinsert
p26683
I43
VSimpleType: SQLCreateTableStatement
p26684
tp26685
I2
s(g5661
I42
g5662
Vinsert
p26686
I32
VMethodInvocation
p26687
tp26688
I2
s(g1923
I42
g1924
Vinsert
p26689
I42
VSimpleName: x
p26690
tp26691
I2
s(g10485
I42
g10486
Vinsert
p26692
I52
VThisExpression
p26693
tp26694
I7
s(g26603
I42
g26604
Vinsert
p26695
I42
VSimpleName: getFetchSize
p26696
tp26697
I1
s(g23093
I42
g23094
Vinsert
p26698
I42
VSimpleName: SHARE_UPDATE
p26699
tp26700
I1
s(g21244
I42
g21245
Vinsert
p26701
I8
VBlock
p26702
tp26703
I2
s(g10021
I42
g10022
Vinsert
p26704
I42
VSimpleName: StatViewServlet
p26705
tp26706
I1
s(g2304
I42
g2305
Vinsert
p26707
I43
VSimpleType: PGSelectStatement
p26708
tp26709
I1
s(g10864
I42
g10865
Vinsert
p26710
I43
VSimpleType: SQLException
p26711
tp26712
I1
s(g19736
I42
g19737
Vinsert
p26713
I42
VSimpleName: createSQLXML
p26714
tp26715
I1
s(g14244
I42
g14245
Vinsert
p26716
I42
VSimpleName: sqlList
p26717
tp26718
I1
s(g2785
I42
g2786
Vinsert
p26719
I43
VSimpleType: Object
p26720
tp26721
I3
s(Vinsert
p26722
I42
VSimpleName: getItems
p26723
Vinsert
p26724
I34
VNumberLiteral: 1
p26725
tp26726
I1
s(g10195
I42
g10196
Vinsert
p26727
I45
VStringLiteral: "\u005cn\u005ctUSING INDEX PCTFREE 20 TABLESPACE stocks"
p26728
tp26729
I2
s(g17777
I42
g17778
Vinsert
p26730
I42
VSimpleName: x
p26731
tp26732
I2
s(g2464
I42
g2465
Vinsert
p26733
I39
VPrimitiveType: void
p26734
tp26735
I1
s(g3452
I42
g3453
Vinsert
p26736
I42
VSimpleName: maxPoolSize
p26737
tp26738
I1
s(Vinsert
p26739
I42
VSimpleName: length
p26740
Vinsert
p26741
I42
VSimpleName: result
p26742
tp26743
I1
s(g7932
I42
g7933
Vinsert
p26744
I32
VMethodInvocation
p26745
tp26746
I6
s(Vinsert
p26747
I42
VSimpleName: setParent
p26748
Vinsert
p26749
I42
VSimpleName: limit
p26750
tp26751
I3
s(g22020
I42
g22021
Vinsert
p26752
I43
VSimpleType: MSSQLValidConnectionChecker
p26753
tp26754
I1
s(g16778
I42
g16779
Vinsert
p26755
I14
VClassInstanceCreation
p26756
tp26757
I2
s(g2393
I42
g2394
Vinsert
p26758
I42
VSimpleName: size
p26759
tp26760
I1
s(g26260
I42
g26261
Vinsert
p26761
I21
VExpressionStatement
p26762
tp26763
I5
s(g846
I42
g847
Vinsert
p26764
I32
VMethodInvocation
p26765
tp26766
I3
s(g1770
I42
g1771
Vinsert
p26767
I83
VModifier: public
p26768
tp26769
I6
s(g17133
I42
g17134
Vinsert
p26770
I42
VSimpleName: size
p26771
tp26772
I1
s(Vinsert
p26773
I42
VSimpleName: assertTrue
p26774
Vinsert
p26775
I42
VSimpleName: MySqlWallTest15
p26776
tp26777
I1
s(Vinsert
p26778
I42
VSimpleName: toBytes
p26779
Vinsert
p26780
I44
VSingleVariableDeclaration
p26781
tp26782
I1
s(g8627
I42
g8628
Vinsert
p26783
I42
VSimpleName: sql
p26784
tp26785
I1
s(g3992
I42
g3993
Vinsert
p26786
I42
VSimpleName: SQLUseStatement
p26787
tp26788
I1
s(Vinsert
p26789
I42
VSimpleName: get
p26790
Vinsert
p26791
I59
VVariableDeclarationFragment
p26792
tp26793
I243
s(g17125
I42
g17126
Vinsert
p26794
I83
VModifier: public
p26795
tp26796
I2
s(g24247
I42
g24248
Vinsert
p26797
I32
VMethodInvocation
p26798
tp26799
I5
s(g3233
I42
g3234
Vinsert
p26800
I42
VSimpleName: ArrayList
p26801
tp26802
I16
s(g24601
I42
g24602
Vinsert
p26803
I45
VStringLiteral: "MAXVALUE"
p26804
tp26805
I1
s(g10571
I42
g10572
Vinsert
p26806
I32
VMethodInvocation
p26807
tp26808
I25
s(g5872
I42
g5873
Vinsert
p26809
I42
VSimpleName: SQLSelectQueryBlock
p26810
tp26811
I4
s(g5892
I42
g5893
Vinsert
p26812
I21
VExpressionStatement
p26813
tp26814
I1
s(g12209
I42
g12210
Vinsert
p26815
I42
VSimpleName: provider
p26816
tp26817
I1
s(Vinsert
p26818
I42
VSimpleName: getAlias
p26819
Vinsert
p26820
I27
VInfixExpression: !=
p26821
tp26822
I9
s(g3908
I42
g3909
Vinsert
p26823
I42
VSimpleName: holder
p26824
tp26825
I3
s(Vinsert
p26826
I42
VSimpleName: getParameters
p26827
Vinsert
p26828
I40
VQualifiedName: Token.RPAREN
p26829
tp26830
I1
s(g7665
I42
g7666
Vinsert
p26831
I42
VSimpleName: Xid
p26832
tp26833
I1
s(g3631
I42
g3632
Vinsert
p26834
I42
VSimpleName: Long
p26835
tp26836
I1
s(g22848
I42
g22849
Vinsert
p26837
I43
VSimpleType: Object
p26838
tp26839
I1
s(g3223
I42
g3224
Vinsert
p26840
I25
VIfStatement
p26841
tp26842
I3
s(Vinsert
p26843
I42
VSimpleName: get
p26844
Vinsert
p26845
I42
VSimpleName: url
p26846
tp26847
I1
s(g11686
I42
g11687
Vinsert
p26848
I45
VStringLiteral: "\u005cnSTORE IN (tbs_01, tbs_02, tbs_03, tbs_04)"
p26849
tp26850
I2
s(g1579
I42
g1580
Vinsert
p26851
I25
VIfStatement
p26852
tp26853
I26
s(Vinsert
p26854
I42
VSimpleName: setExpr
p26855
Vinsert
p26856
I42
VSimpleName: not
p26857
tp26858
I1
s(g8653
I42
g8654
Vinsert
p26859
I42
VSimpleName: setUp
p26860
tp26861
I1
s(g24490
I42
g24491
Vinsert
p26862
I42
VSimpleName: MySqlShowPluginsStatement
p26863
tp26864
I2
s(g4462
I42
g4463
Vinsert
p26865
I45
VStringLiteral: "LENGTH"
p26866
tp26867
I1
s(Vinsert
p26868
I42
VSimpleName: accept
p26869
Vinsert
p26870
I42
VSimpleName: getExpr
p26871
tp26872
I2
s(Vinsert
p26873
I42
VSimpleName: getDbType
p26874
Vinsert
p26875
I42
VSimpleName: dbType
p26876
tp26877
I10
s(g25409
I42
g25410
Vinsert
p26878
I42
VSimpleName: equalsIgnoreCase
p26879
tp26880
I1
s(g5045
I42
g5046
Vinsert
p26881
I42
VSimpleName: Override
p26882
tp26883
I1
s(g17306
I42
g17307
Vinsert
p26884
I43
VSimpleType: SQLReturnStatement
p26885
tp26886
I4
s(g2682
I42
g2683
Vinsert
p26887
I42
VSimpleName: alter
p26888
tp26889
I1
s(g24333
I42
g24334
Vinsert
p26890
I42
VSimpleName: debug
p26891
tp26892
I1
s(Vinsert
p26893
I42
VSimpleName: setParent
p26894
Vinsert
p26895
I42
VSimpleName: having
p26896
tp26897
I2
s(g2862
I42
g2863
Vinsert
p26898
I45
VStringLiteral: "WHERE"
p26899
tp26900
I4
s(Vinsert
p26901
I42
VSimpleName: getStackTrace
p26902
Vinsert
p26903
I42
VSimpleName: writeString
p26904
tp26905
I2
s(g14303
I42
g14304
Vinsert
p26906
I42
VSimpleName: getDataSourceList
p26907
tp26908
I1
s(Vinsert
p26909
I42
VSimpleName: setParent
p26910
Vinsert
p26911
I42
VSimpleName: setSelect
p26912
tp26913
I2
s(g21746
I42
g21747
Vinsert
p26914
I32
VMethodInvocation
p26915
tp26916
I3
s(g1120
I42
g1121
Vinsert
p26917
I42
VSimpleName: visit
p26918
tp26919
I1
s(g10011
I42
g10012
Vinsert
p26920
I42
VSimpleName: htable
p26921
tp26922
I1
s(g4452
I42
g4453
Vinsert
p26923
I74
VParameterizedType: Set<String>
p26924
tp26925
I1
s(g5903
I42
g5904
Vinsert
p26926
I16
VConditionalExpression
p26927
tp26928
I1
s(g3982
I42
g3983
Vinsert
p26929
I32
VMethodInvocation
p26930
tp26931
I1
s(g2930
I42
g2931
Vinsert
p26932
I43
VSimpleType: Boolean
p26933
tp26934
I1
s(g10618
I42
g10619
Vinsert
p26935
I42
VSimpleName: request
p26936
tp26937
I1
s(g1835
I42
g1836
Vinsert
p26938
I45
VStringLiteral: "BASICFILE "
p26939
tp26940
I1
s(g1012
I42
g1013
Vinsert
p26941
I25
VIfStatement
p26942
tp26943
I3
s(Vinsert
p26944
I42
VSimpleName: toSQLString
p26945
Vinsert
p26946
I45
VStringLiteral: "TABLESPACE \u005c"APPDATA1M\u005c"\u005cn"
p26947
tp26948
I2
s(g13906
I42
g13907
Vinsert
p26949
I43
VSimpleType: TransactionInfo
p26950
tp26951
I1
s(g6544
I42
g6545
Vinsert
p26952
I42
VSimpleName: addParameter
p26953
tp26954
I1
s(g7502
I42
g7503
Vinsert
p26955
I45
VStringLiteral: "_connection_"
p26956
tp26957
I1
s(g10412
I42
g10413
Vinsert
p26958
I42
VSimpleName: isDropDefault
p26959
tp26960
I1
s(g5455
I42
g5456
Vinsert
p26961
I42
VSimpleName: ArrayList
p26962
tp26963
I2
s(g6298
I42
g6299
Vinsert
p26964
I42
VSimpleName: totalWeight
p26965
tp26966
I1
s(g2104
I42
g2105
Vinsert
p26967
I42
VSimpleName: queryBlock
p26968
tp26969
I1
s(g25389
I42
g25390
Vinsert
p26970
I83
VModifier: public
p26971
tp26972
I1
s(g15648
I42
g15649
Vinsert
p26973
I27
VInfixExpression: !=
p26974
tp26975
I1
s(g1933
I42
g1934
Vinsert
p26976
I31
VMethodDeclaration
p26977
tp26978
I2
s(g26244
I42
g26245
Vinsert
p26979
I42
VSimpleName: sql
p26980
tp26981
I1
s(g6727
I42
g6728
Vinsert
p26982
I25
VIfStatement
p26983
tp26984
I1
s(Vinsert
p26985
I42
VSimpleName: get
p26986
Vinsert
p26987
I42
VSimpleName: parse
p26988
tp26989
I1
s(Vinsert
p26990
I42
VSimpleName: accept
p26991
Vinsert
p26992
I42
VSimpleName: WindowClause
p26993
tp26994
I1
s(g2130
I42
g2131
Vinsert
p26995
I42
VSimpleName: Calendar
p26996
tp26997
I1
s(Vinsert
p26998
I42
VSimpleName: warn
p26999
Vinsert
p27000
I43
VSimpleType: Log
p27001
tp27002
I2
s(Vinsert
p27003
I42
VSimpleName: createExprParser
p27004
Vinsert
p27005
I45
VStringLiteral: "varchar(2000)"
p27006
tp27007
I1
s(g5257
I42
g5258
Vinsert
p27008
I42
VSimpleName: beforeInvoke
p27009
tp27010
I1
s(g5030
I42
g5031
Vinsert
p27011
I74
VParameterizedType: ArrayList<SQLSelectOrderByItem>
p27012
tp27013
I1
s(g12034
I42
g12035
Vinsert
p27014
I42
VSimpleName: buckets
p27015
tp27016
I1
s(g3058
I42
g3059
Vinsert
p27017
I45
VStringLiteral: "\u005cn\u005ctSELECT \u005c"AO_4AEACD_WEBHOOK_DAO_ID_SEQ\u005c".NEXTVAL"
p27018
tp27019
I2
s(g10942
I42
g10943
Vinsert
p27020
I45
VStringLiteral: "DROP COLUMN "
p27021
tp27022
I1
s(g8006
I42
g8007
Vinsert
p27023
I42
VSimpleName: CharTypes
p27024
tp27025
I1
s(g7991
I42
g7992
Vinsert
p27026
I83
VModifier: protected
p27027
tp27028
I1
s(Vinsert
p27029
I42
VSimpleName: token
p27030
Vinsert
p27031
I40
VQualifiedName: Token.COMMENT
p27032
tp27033
I1
s(Vinsert
p27034
I42
VSimpleName: visit
p27035
Vinsert
p27036
I42
VSimpleName: level
p27037
tp27038
I5
s(g3908
I42
g3909
Vinsert
p27039
I43
VSimpleType: PreparedStatementHolder
p27040
tp27041
I2
s(g24043
I42
g24044
Vinsert
p27042
I34
VNumberLiteral: 1000
p27043
tp27044
I2
s(g21155
I42
g21156
Vinsert
p27045
I42
VSimpleName: getDriverClassName
p27046
tp27047
I1
s(g21876
I42
g21877
Vinsert
p27048
I42
VSimpleName: SQLException
p27049
tp27050
I1
s(Vinsert
p27051
I42
VSimpleName: assertFalse
p27052
Vinsert
p27053
I45
VStringLiteral: "select count(*) from messages a where a.id in (2 and 1 AND 9881=IF((ORD(MID((IFNULL(CAST(DATABASE() AS CHAR),0x20)),6,1))>117),SLEEP(5),9881)) and a.message <> 'hello' and a.message like 'Little'"
p27054
tp27055
I1
s(Vinsert
p27056
I42
VSimpleName: token
p27057
Vinsert
p27058
I42
VSimpleName: charType
p27059
tp27060
I1
s(g18437
I42
g18438
Vinsert
p27061
I32
VMethodInvocation
p27062
tp27063
I2
s(g2785
I42
g2786
Vinsert
p27064
I42
VSimpleName: getMethod
p27065
tp27066
I4
s(g24278
I42
g24279
Vinsert
p27067
I25
VIfStatement
p27068
tp27069
I4
s(Vinsert
p27070
I42
VSimpleName: getDbType
p27071
Vinsert
p27072
I22
VFieldAccess
p27073
tp27074
I4
s(g10697
I42
g10698
Vinsert
p27075
I42
VSimpleName: getPermitNames
p27076
tp27077
I2
s(g10586
I42
g10587
Vinsert
p27078
I42
VSimpleName: assertTrue
p27079
tp27080
I2
s(g5485
I42
g5486
Vinsert
p27081
I40
VQualifiedName: x.pctthreshold
p27082
tp27083
I1
s(g1461
I42
g1462
Vinsert
p27084
I45
VStringLiteral: "jdbc:mock:xx"
p27085
tp27086
I1
s(g6617
I42
g6618
Vinsert
p27087
I42
VSimpleName: Collections
p27088
tp27089
I2
s(g16145
I42
g16146
Vinsert
p27090
I7
VAssignment: =
p27091
tp27092
I1
s(g17739
I42
g17740
Vinsert
p27093
I42
VSimpleName: key
p27094
tp27095
I1
s(g12822
I42
g12823
Vinsert
p27096
I38
VPrefixExpression: !
p27097
tp27098
I1
s(g2805
I42
g2806
Vinsert
p27099
I43
VSimpleType: String
p27100
tp27101
I1
s(Vinsert
p27102
I42
VSimpleName: unwrap
p27103
Vinsert
p27104
I42
VSimpleName: StatementProxy
p27105
tp27106
I2
s(g20626
I42
g20627
Vinsert
p27107
I42
VSimpleName: iface
p27108
tp27109
I2
s(g13551
I42
g13552
Vinsert
p27110
I85
VDimension
p27111
tp27112
I1
s(g7827
I42
g7828
Vinsert
p27113
I27
VInfixExpression: ==
p27114
tp27115
I1
s(g20434
I42
g20435
Vinsert
p27116
I45
VStringLiteral: "\u005cnWHERE ROWNUM <= 10"
p27117
tp27118
I1
s(g15594
I42
g15595
Vinsert
p27119
I7
VAssignment: =
p27120
tp27121
I2
s(g5216
I42
g5217
Vinsert
p27122
I25
VIfStatement
p27123
tp27124
I1
s(g4834
I42
g4835
Vinsert
p27125
I42
VSimpleName: filters
p27126
tp27127
I1
s(g8090
I42
g8091
Vinsert
p27128
I8
VBlock
p27129
tp27130
I5
s(g14985
I42
g14986
Vinsert
p27131
I42
VSimpleName: holder
p27132
tp27133
I2
s(Vinsert
p27134
I42
VSimpleName: assertEquals
p27135
Vinsert
p27136
I34
VNumberLiteral: 12L
p27137
tp27138
I2
s(g3432
I42
g3433
Vinsert
p27139
I42
VSimpleName: numTestsPerEvictionRun
p27140
tp27141
I1
s(Vinsert
p27142
I42
VSimpleName: toLowerCase
p27143
Vinsert
p27144
I42
VSimpleName: type
p27145
tp27146
I2
s(g10239
I42
g10240
Vinsert
p27147
I34
VNumberLiteral: 100
p27148
tp27149
I2
s(g11325
I42
g11326
Vinsert
p27150
I42
VSimpleName: String
p27151
tp27152
I1
s(g13938
I42
g13939
Vinsert
p27153
I36
VParenthesizedExpression
p27154
tp27155
I2
s(g15571
I42
g15572
Vinsert
p27156
I45
VStringLiteral: "\u005cn\u005ctjob_code INT, "
p27157
tp27158
I1
s(g16778
I42
g16779
Vinsert
p27159
I34
VNumberLiteral: 10
p27160
tp27161
I2
s(g15188
I42
g15189
Vinsert
p27162
I8
VBlock
p27163
tp27164
I8
s(g6074
I42
g6075
Vinsert
p27165
I59
VVariableDeclarationFragment
p27166
tp27167
I2
s(g17734
I42
g17735
Vinsert
p27168
I42
VSimpleName: nameStart
p27169
tp27170
I1
s(g2183
I42
g2184
Vinsert
p27171
I7
VAssignment: =
p27172
tp27173
I1
s(g136
I42
g137
Vinsert
p27174
I39
VPrimitiveType: int
p27175
tp27176
I2
s(Vinsert
p27177
I42
VSimpleName: assertNotNull
p27178
Vinsert
p27179
I42
VSimpleName: InitErrorDriver
p27180
tp27181
I1
s(g76
I42
g77
Vinsert
p27182
I21
VExpressionStatement
p27183
tp27184
I1
s(g8006
I42
g8007
Vinsert
p27185
I42
VSimpleName: c
p27186
tp27187
I2
s(g7736
I42
g7737
Vinsert
p27188
I42
VSimpleName: oracleStmt
p27189
tp27190
I2
s(g4594
I42
g4595
Vinsert
p27191
I25
VIfStatement
p27192
tp27193
I1
s(g18026
I42
g18027
Vinsert
p27194
I27
VInfixExpression: &&
p27195
tp27196
I2
s(Vinsert
p27197
I42
VSimpleName: check
p27198
Vinsert
p27199
I43
VSimpleType: SQLAlterTableStatement
p27200
tp27201
I1
s(g1710
I42
g1711
Vinsert
p27202
I43
VSimpleType: FactoryBean
p27203
tp27204
I2
s(g4867
I42
g4868
Vinsert
p27205
I25
VIfStatement
p27206
tp27207
I1
s(Vinsert
p27208
I42
VSimpleName: setUppCase
p27209
Vinsert
p27210
I42
VSimpleName: String
p27211
tp27212
I1
s(g16075
I42
g16076
Vinsert
p27213
I52
VThisExpression
p27214
tp27215
I1
s(g12262
I42
g12263
Vinsert
p27216
I42
VSimpleName: identifierEquals
p27217
tp27218
I3
s(g14343
I42
g14344
Vinsert
p27219
I21
VExpressionStatement
p27220
tp27221
I1
s(g10039
I42
g10040
Vinsert
p27222
I31
VMethodDeclaration
p27223
tp27224
I5
s(g1670
I42
g1671
Vinsert
p27225
I42
VSimpleName: isPrettyFormat
p27226
tp27227
I1
s(g7947
I42
g7948
Vinsert
p27228
I44
VSingleVariableDeclaration
p27229
tp27230
I5
s(g2515
I42
g2516
Vinsert
p27231
I42
VSimpleName: param0
p27232
tp27233
I2
s(Vinsert
p27234
I42
VSimpleName: getReaderContext
p27235
Vinsert
p27236
I42
VSimpleName: getRegistry
p27237
tp27238
I1
s(Vinsert
p27239
I42
VSimpleName: println
p27240
Vinsert
p27241
I42
VSimpleName: outputOracle
p27242
tp27243
I1
s(g12173
I42
g12174
Vinsert
p27244
I42
VSimpleName: config
p27245
tp27246
I2
s(g2548
I42
g2549
Vinsert
p27247
I42
VSimpleName: SQLDeleteStatement
p27248
tp27249
I1
s(g4258
I42
g4259
Vinsert
p27250
I42
VSimpleName: tableMapping
p27251
tp27252
I2
s(Vinsert
p27253
I42
VSimpleName: getCloseCount
p27254
Vinsert
p27255
I42
VSimpleName: getConnectErrorCount
p27256
tp27257
I1
s(g22579
I42
g22580
Vinsert
p27258
I42
VSimpleName: IOException
p27259
tp27260
I1
s(g8990
I42
g8991
Vinsert
p27261
I25
VIfStatement
p27262
tp27263
I1
s(g2707
I42
g2708
Vinsert
p27264
I60
VVariableDeclarationStatement
p27265
tp27266
I1
s(g2099
I42
g2100
Vinsert
p27267
I9
VBooleanLiteral: true
p27268
tp27269
I1
s(g20840
I42
g20841
Vinsert
p27270
I21
VExpressionStatement
p27271
tp27272
I5
s(g5287
I42
g5288
Vinsert
p27273
I25
VIfStatement
p27274
tp27275
I199
s(Vinsert
p27276
I42
VSimpleName: error
p27277
Vinsert
p27278
I42
VSimpleName: LOG
p27279
tp27280
I20
s(g24641
I42
g24642
Vinsert
p27281
I32
VMethodInvocation
p27282
tp27283
I4
s(g1319
I42
g1320
Vinsert
p27284
I83
VModifier: private
p27285
tp27286
I1
s(g836
I42
g837
Vinsert
p27287
I45
VStringLiteral: "fulltext "
p27288
tp27289
I1
s(Vinsert
p27290
I42
VSimpleName: setParent
p27291
Vinsert
p27292
I42
VSimpleName: getEndLabel
p27293
tp27294
I1
s(g2662
I42
g2663
Vinsert
p27295
I42
VSimpleName: stmt
p27296
tp27297
I1
s(Vinsert
p27298
I42
VSimpleName: put
p27299
Vinsert
p27300
I40
VQualifiedName: Token.BEGIN
p27301
tp27302
I1
s(g14782
I42
g14783
Vinsert
p27303
I42
VSimpleName: x
p27304
tp27305
I8
s(g2697
I42
g2698
Vinsert
p27306
I34
VNumberLiteral: 0
p27307
tp27308
I2
s(g12893
I42
g12894
Vinsert
p27309
I42
VSimpleName: dbType
p27310
tp27311
I2
s(g26393
I42
g26394
Vinsert
p27312
I27
VInfixExpression: +
p27313
tp27314
I4
s(Vinsert
p27315
I42
VSimpleName: close
p27316
Vinsert
p27317
I42
VSimpleName: connections
p27318
tp27319
I1
s(Vinsert
p27320
I42
VSimpleName: parseStatementList
p27321
Vinsert
p27322
I42
VSimpleName: MySqlShowIndexesStatement
p27323
tp27324
I2
s(g8306
I42
g8307
Vinsert
p27325
I62
VInstanceofExpression
p27326
tp27327
I2
s(g14765
I42
g14766
Vinsert
p27328
I42
VSimpleName: filter
p27329
tp27330
I1
s(Vinsert
p27331
I42
VSimpleName: equals
p27332
Vinsert
p27333
I42
VSimpleName: WebAppStat
p27334
tp27335
I3
s(Vinsert
p27336
I42
VSimpleName: length
p27337
Vinsert
p27338
I34
VNumberLiteral: 0xcbf29ce484222325L
p27339
tp27340
I1
s(g14361
I42
g14362
Vinsert
p27341
I8
VBlock
p27342
tp27343
I15
s(g836
I42
g837
Vinsert
p27344
I45
VStringLiteral: "FULLTEXT "
p27345
tp27346
I1
s(g19179
I42
g19180
Vinsert
p27347
I8
VBlock
p27348
tp27349
I2
s(Vinsert
p27350
I42
VSimpleName: accept
p27351
Vinsert
p27352
I43
VSimpleType: SQLStatement
p27353
tp27354
I51
s(Vinsert
p27355
I42
VSimpleName: emptyMap
p27356
Vinsert
p27357
I7
VAssignment: =
p27358
tp27359
I2
s(g21598
I42
g21599
Vinsert
p27360
I42
VSimpleName: SQLSelectOrderByItem
p27361
tp27362
I3
s(g24526
I42
g24527
Vinsert
p27363
I43
VSimpleType: WallContext
p27364
tp27365
I1
s(g2203
I42
g2204
Vinsert
p27366
I21
VExpressionStatement
p27367
tp27368
I2
s(g16065
I42
g16066
Vinsert
p27369
I40
VQualifiedName: Token.RESTART
p27370
tp27371
I1
s(Vinsert
p27372
I42
VSimpleName: getNumber
p27373
Vinsert
p27374
I42
VSimpleName: right
p27375
tp27376
I2
s(g12299
I42
g12300
Vinsert
p27377
I42
VSimpleName: Entity
p27378
tp27379
I2
s(g18415
I42
g18416
Vinsert
p27380
I43
VSimpleType: OdpsListStmt
p27381
tp27382
I1
s(g25298
I42
g25299
Vinsert
p27383
I42
VSimpleName: connections_A
p27384
tp27385
I1
s(g3223
I42
g3224
Vinsert
p27386
I42
VSimpleName: identifierEquals
p27387
tp27388
I1
s(g15204
I42
g15205
Vinsert
p27389
I42
VSimpleName: clearWallTopStatementContext
p27390
tp27391
I1
s(g286
I42
g287
Vinsert
p27392
I21
VExpressionStatement
p27393
tp27394
I2
s(g17301
I42
g17302
Vinsert
p27395
I32
VMethodInvocation
p27396
tp27397
I3
s(g1496
I42
g1497
Vinsert
p27398
I43
VSimpleType: String
p27399
tp27400
I9
s(g4568
I42
g4569
Vinsert
p27401
I52
VThisExpression
p27402
tp27403
I1
s(g9924
I42
g9925
Vinsert
p27404
I14
VClassInstanceCreation
p27405
tp27406
I4
s(Vinsert
p27407
I42
VSimpleName: getLeft
p27408
Vinsert
p27409
I43
VSimpleType: SQLIdentifierExpr
p27410
tp27411
I2
s(g6455
I42
g6456
Vinsert
p27412
I32
VMethodInvocation
p27413
tp27414
I1
s(g23392
I42
g23393
Vinsert
p27415
I74
VParameterizedType: IdentityHashMap<Object,ObjectName>
p27416
tp27417
I1
s(Vinsert
p27418
I42
VSimpleName: createSQLStatementParser
p27419
Vinsert
p27420
I44
VSingleVariableDeclaration
p27421
tp27422
I2
s(Vinsert
p27423
I42
VSimpleName: toSQLString
p27424
Vinsert
p27425
I62
VInstanceofExpression
p27426
tp27427
I1
s(Vinsert
p27428
I42
VSimpleName: size
p27429
Vinsert
p27430
I42
VSimpleName: accept
p27431
tp27432
I5
s(g537
I42
g538
Vinsert
p27433
I8
VBlock
p27434
tp27435
I1
s(g12090
I42
g12091
Vinsert
p27436
I43
VSimpleType: SQLException
p27437
tp27438
I1
s(g66
I42
g67
Vinsert
p27439
I42
VSimpleName: engine
p27440
tp27441
I2
s(g201
I42
g202
Vinsert
p27442
I9
VBooleanLiteral: true
p27443
tp27444
I1
s(g14343
I42
g14344
Vinsert
p27445
I38
VPrefixExpression: ++
p27446
tp27447
I1
s(g25652
I42
g25653
Vinsert
p27448
I42
VSimpleName: line1
p27449
tp27450
I1
s(g1594
I42
g1595
Vinsert
p27451
I42
VSimpleName: println
p27452
tp27453
I1
s(Vinsert
p27454
I42
VSimpleName: setInt
p27455
Vinsert
p27456
I42
VSimpleName: addBatch
p27457
tp27458
I1
s(Vinsert
p27459
I42
VSimpleName: setUrl
p27460
Vinsert
p27461
I45
VStringLiteral: "1000"
p27462
tp27463
I1
s(g11020
I42
g11021
Vinsert
p27464
I42
VSimpleName: methodInvokeExpr
p27465
tp27466
I1
s(g4414
I42
g4415
Vinsert
p27467
I40
VQualifiedName: Token.INTO
p27468
tp27469
I1
s(g15766
I42
g15767
Vinsert
p27470
I42
VSimpleName: getValidationQuery
p27471
tp27472
I1
s(g972
I42
g973
Vinsert
p27473
I45
VStringLiteral: "FROM sys.V_$LOCKED_OBJECT lo, TB_002 DO\u005cn"
p27474
tp27475
I1
s(g16213
I42
g16214
Vinsert
p27476
I43
VSimpleType: String
p27477
tp27478
I3
s(g1830
I42
g1831
Vinsert
p27479
I42
VSimpleName: prepareStatement
p27480
tp27481
I2
s(Vinsert
p27482
I42
VSimpleName: equals
p27483
Vinsert
p27484
I40
VQualifiedName: JoinType.LEFT_OUTER_JOIN
p27485
tp27486
I1
s(g19323
I42
g19324
Vinsert
p27487
I43
VSimpleType: DataSourceInfo
p27488
tp27489
I2
s(g6375
I42
g6376
Vinsert
p27490
I42
VSimpleName: returnVal
p27491
tp27492
I2
s(Vinsert
p27493
I42
VSimpleName: get
p27494
Vinsert
p27495
I45
VStringLiteral: "("
p27496
tp27497
I1
s(Vinsert
p27498
I42
VSimpleName: accept0
p27499
Vinsert
p27500
I45
VStringLiteral: "INTERVAL DAY"
p27501
tp27502
I1
s(g8906
I42
g8907
Vinsert
p27503
I42
VSimpleName: HashMap
p27504
tp27505
I1
s(g3073
I42
g3074
Vinsert
p27506
I21
VExpressionStatement
p27507
tp27508
I6
s(g18863
I42
g18864
Vinsert
p27509
I45
VStringLiteral: ",   user.name as modifier"
p27510
tp27511
I1
s(g4318
I42
g4319
Vinsert
p27512
I42
VSimpleName: getWild
p27513
tp27514
I1
s(g20010
I42
g20011
Vinsert
p27515
I42
VSimpleName: savepoints
p27516
tp27517
I1
s(g2079
I42
g2080
Vinsert
p27518
I43
VSimpleType: PreparedStatementProxy
p27519
tp27520
I1
s(g2388
I42
g2389
Vinsert
p27521
I38
VPrefixExpression: !
p27522
tp27523
I2
s(g1334
I42
g1335
Vinsert
p27524
I45
VStringLiteral: "\u005cn)"
p27525
tp27526
I46
s(g4283
I42
g4284
Vinsert
p27527
I42
VSimpleName: SQLExpr
p27528
tp27529
I1
s(Vinsert
p27530
I42
VSimpleName: clone
p27531
Vinsert
p27532
I14
VClassInstanceCreation
p27533
tp27534
I6
s(g952
I42
g953
Vinsert
p27535
I42
VSimpleName: getParameterTypes
p27536
tp27537
I1
s(Vinsert
p27538
I42
VSimpleName: clone
p27539
Vinsert
p27540
I42
VSimpleName: linear
p27541
tp27542
I1
s(Vinsert
p27543
I42
VSimpleName: nextToken
p27544
Vinsert
p27545
I40
VQualifiedName: SQLSequenceExpr.Function.NextVal
p27546
tp27547
I1
s(g19777
I42
g19778
Vinsert
p27548
I42
VSimpleName: PGLimit
p27549
tp27550
I1
s(g7158
I42
g7159
Vinsert
p27551
I42
VSimpleName: stmt
p27552
tp27553
I1
s(g2857
I42
g2858
Vinsert
p27554
I42
VSimpleName: setTestOnReturn
p27555
tp27556
I1
s(g6655
I42
g6656
Vinsert
p27557
I14
VClassInstanceCreation
p27558
tp27559
I1
s(g25834
I42
g25835
Vinsert
p27560
I41
VReturnStatement
p27561
tp27562
I3
s(g5384
I42
g5385
Vinsert
p27563
I42
VSimpleName: config
p27564
tp27565
I2
s(g13868
I42
g13869
Vinsert
p27566
I32
VMethodInvocation
p27567
tp27568
I4
s(g5012
I42
g5013
Vinsert
p27569
I25
VIfStatement
p27570
tp27571
I2
s(Vinsert
p27572
I42
VSimpleName: isSupported
p27573
Vinsert
p27574
I27
VInfixExpression: +
p27575
tp27576
I1
s(g196
I42
g197
Vinsert
p27577
I45
VStringLiteral: "WHERE T1.THE_DATE = TRUNC(SYSDATE)\u005cn"
p27578
tp27579
I1
s(g6056
I42
g6057
Vinsert
p27580
I45
VStringLiteral: "CURSOR("
p27581
tp27582
I1
s(g10480
I42
g10481
Vinsert
p27583
I25
VIfStatement
p27584
tp27585
I2
s(Vinsert
p27586
I42
VSimpleName: getViolations
p27587
Vinsert
p27588
I12
VCatchClause
p27589
tp27590
I2
s(g12173
I42
g12174
Vinsert
p27591
I42
VSimpleName: isUpdateAllow
p27592
tp27593
I1
s(g5409
I42
g5410
Vinsert
p27594
I43
VSimpleType: InputStream
p27595
tp27596
I4
s(g10275
I42
g10276
Vinsert
p27597
I42
VSimpleName: setRecursive
p27598
tp27599
I1
s(g26080
I42
g26081
Vinsert
p27600
I60
VVariableDeclarationStatement
p27601
tp27602
I1
s(g1007
I42
g1008
Vinsert
p27603
I60
VVariableDeclarationStatement
p27604
tp27605
I1
s(g76
I42
g77
Vinsert
p27606
I32
VMethodInvocation
p27607
tp27608
I1
s(g4134
I42
g4135
Vinsert
p27609
I42
VSimpleName: netInterfaces
p27610
tp27611
I1
s(g1
I42
g2
Vinsert
p27612
I41
VReturnStatement
p27613
tp27614
I1
s(Vinsert
p27615
I42
VSimpleName: assertTrue
p27616
Vinsert
p27617
I45
VStringLiteral: "union select synonym_name"
p27618
tp27619
I2
s(Vinsert
p27620
I42
VSimpleName: resolve
p27621
Vinsert
p27622
I21
VExpressionStatement
p27623
tp27624
I3
s(Vinsert
p27625
I42
VSimpleName: setParent
p27626
Vinsert
p27627
I43
VSimpleType: SQLCommentHint
p27628
tp27629
I1
s(Vinsert
p27630
I42
VSimpleName: assertEquals
p27631
Vinsert
p27632
I42
VSimpleName: RuntimeException
p27633
tp27634
I1
s(g924
I42
g925
Vinsert
p27635
I43
VSimpleType: ConnectionEventListener
p27636
tp27637
I1
s(g10752
I42
g10753
Vinsert
p27638
I42
VSimpleName: print
p27639
tp27640
I2
s(g14951
I42
g14952
Vinsert
p27641
I12
VCatchClause
p27642
tp27643
I32
s(Vinsert
p27644
I42
VSimpleName: setMapping
p27645
Vinsert
p27646
I83
VModifier: public
p27647
tp27648
I1
s(Vinsert
p27649
I42
VSimpleName: println
p27650
Vinsert
p27651
I45
VStringLiteral: "ORDER BY 1 NULLS LAST;"
p27652
tp27653
I1
s(g4931
I42
g4932
Vinsert
p27654
I42
VSimpleName: SQLDropTableSpaceStatement
p27655
tp27656
I1
s(g8001
I42
g8002
Vinsert
p27657
I25
VIfStatement
p27658
tp27659
I1
s(Vinsert
p27660
I42
VSimpleName: add
p27661
Vinsert
p27662
I42
VSimpleName: mainSplit
p27663
tp27664
I2
s(g4268
I42
g4269
Vinsert
p27665
I45
VStringLiteral: "INSTEAD OF"
p27666
tp27667
I1
s(g3569
I42
g3570
Vinsert
p27668
I14
VClassInstanceCreation
p27669
tp27670
I1
s(g16
I42
g17
Vinsert
p27671
I42
VSimpleName: alias_hash
p27672
tp27673
I1
s(g4640
I42
g4641
Vinsert
p27674
I32
VMethodInvocation
p27675
tp27676
I2
s(g662
I42
g663
Vinsert
p27677
I34
VNumberLiteral: 1
p27678
tp27679
I1
s(Vinsert
p27680
I42
VSimpleName: equalsIgnoreCase
p27681
Vinsert
p27682
I42
VSimpleName: b
p27683
tp27684
I3
s(g3992
I42
g3993
Vinsert
p27685
I42
VSimpleName: config
p27686
tp27687
I1
s(g6116
I42
g6117
Vinsert
p27688
I43
VSimpleType: String
p27689
tp27690
I1
s(g7991
I42
g7992
Vinsert
p27691
I59
VVariableDeclarationFragment
p27692
tp27693
I2
s(g25961
I42
g25962
Vinsert
p27694
I42
VSimpleName: columnName
p27695
tp27696
I3
s(g3631
I42
g3632
Vinsert
p27697
I43
VSimpleType: ConcurrentMap
p27698
tp27699
I1
s(Vinsert
p27700
I42
VSimpleName: formatOdps
p27701
Vinsert
p27702
I45
VStringLiteral: "\u005cn\u005ctTOUCH"
p27703
tp27704
I1
s(g14226
I42
g14227
Vinsert
p27705
I42
VSimpleName: x
p27706
tp27707
I1
s(Vinsert
p27708
I42
VSimpleName: isValidateMySql
p27709
Vinsert
p27710
I31
VMethodDeclaration
p27711
tp27712
I2
s(g25165
I42
g25166
Vinsert
p27713
I45
VStringLiteral: "ConnectionConnectErrorLastStackTrace"
p27714
tp27715
I1
s(g22894
I42
g22895
Vinsert
p27716
I62
VInstanceofExpression
p27717
tp27718
I4
s(g2145
I42
g2146
Vinsert
p27719
I42
VSimpleName: Integer
p27720
tp27721
I1
s(Vinsert
p27722
I42
VSimpleName: setResultSetHoldability
p27723
Vinsert
p27724
I42
VSimpleName: resultSetConcurrency
p27725
tp27726
I1
s(g1471
I42
g1472
Vinsert
p27727
I42
VSimpleName: Thread
p27728
tp27729
I7
s(g753
I42
g754
Vinsert
p27730
I74
VParameterizedType: Map<String,Object>
p27731
tp27732
I1
s(g4227
I42
g4228
Vinsert
p27733
I36
VParenthesizedExpression
p27734
tp27735
I1
s(Vinsert
p27736
I42
VSimpleName: getArguments
p27737
Vinsert
p27738
I8
VBlock
p27739
tp27740
I2
s(g13293
I42
g13294
Vinsert
p27741
I42
VSimpleName: startIndex
p27742
tp27743
I1
s(Vinsert
p27744
I42
VSimpleName: toPGString
p27745
Vinsert
p27746
I45
VStringLiteral: "\u005cnFROM t"
p27747
tp27748
I2
s(g13084
I42
g13085
Vinsert
p27749
I45
VStringLiteral: "FROM TABLE\u005cn"
p27750
tp27751
I1
s(Vinsert
p27752
I42
VSimpleName: incrementAndGet
p27753
Vinsert
p27754
I38
VPrefixExpression: ++
p27755
tp27756
I1
s(Vinsert
p27757
I42
VSimpleName: setConfig
p27758
Vinsert
p27759
I43
VSimpleType: WallFilter
p27760
tp27761
I2
s(g15397
I42
g15398
Vinsert
p27762
I42
VSimpleName: cstmt
p27763
tp27764
I1
s(g2765
I42
g2766
Vinsert
p27765
I45
VStringLiteral: "3"
p27766
tp27767
I1
s(g7840
I42
g7841
Vinsert
p27768
I27
VInfixExpression: !=
p27769
tp27770
I1
s(g9433
I42
g9434
Vinsert
p27771
I7
VAssignment: =
p27772
tp27773
I3
s(g13808
I42
g13809
Vinsert
p27774
I42
VSimpleName: tableName
p27775
tp27776
I1
s(g23258
I42
g23259
Vinsert
p27777
I42
VSimpleName: stmt
p27778
tp27779
I2
s(g1903
I42
g1904
Vinsert
p27780
I8
VBlock
p27781
tp27782
I1
s(Vinsert
p27783
I42
VSimpleName: assertEquals
p27784
Vinsert
p27785
I45
VStringLiteral: "fields : "
p27786
tp27787
I1
s(g12324
I42
g12325
Vinsert
p27788
I44
VSingleVariableDeclaration
p27789
tp27790
I1
s(g19964
I42
g19965
Vinsert
p27791
I42
VSimpleName: token
p27792
tp27793
I5
s(g26252
I42
g26253
Vinsert
p27794
I32
VMethodInvocation
p27795
tp27796
I221
s(g5908
I42
g5909
Vinsert
p27797
I42
VSimpleName: x
p27798
tp27799
I4
s(Vinsert
p27800
I42
VSimpleName: assertNotNull
p27801
Vinsert
p27802
I33
VNullLiteral
p27803
tp27804
I9
s(g12209
I42
g12210
Vinsert
p27805
I42
VSimpleName: Collections
p27806
tp27807
I1
s(Vinsert
p27808
I42
VSimpleName: assertEquals
p27809
Vinsert
p27810
I45
VStringLiteral: "select f1 -- aaa"
p27811
tp27812
I1
s(g1375
I42
g1376
Vinsert
p27813
I42
VSimpleName: castToInteger
p27814
tp27815
I1
s(g22001
I42
g22002
Vinsert
p27816
I42
VSimpleName: isNumber
p27817
tp27818
I1
s(g26080
I42
g26081
Vinsert
p27819
I43
VSimpleType: Notification
p27820
tp27821
I2
s(Vinsert
p27822
I42
VSimpleName: fnv_64_lower_normalized
p27823
Vinsert
p27824
I34
VNumberLiteral: 0
p27825
tp27826
I1
s(g51
I42
g52
Vinsert
p27827
I42
VSimpleName: JdbcSqlStat
p27828
tp27829
I2
s(Vinsert
p27830
I42
VSimpleName: expr
p27831
Vinsert
p27832
I43
VSimpleType: MySqlBinaryExpr
p27833
tp27834
I1
s(Vinsert
p27835
I42
VSimpleName: setParent
p27836
Vinsert
p27837
I42
VSimpleName: forExpr
p27838
tp27839
I3
s(Vinsert
p27840
I42
VSimpleName: getBlobAsBytes
p27841
Vinsert
p27842
I42
VSimpleName: getBlobAsBytes
p27843
tp27844
I1
s(Vinsert
p27845
I42
VSimpleName: refactor
p27846
Vinsert
p27847
I42
VSimpleName: test_mapping_pg
p27848
tp27849
I6
s(g1491
I42
g1492
Vinsert
p27850
I42
VSimpleName: RegexpMethodPointcutAdvisor
p27851
tp27852
I1
s(Vinsert
p27853
I42
VSimpleName: setParent
p27854
Vinsert
p27855
I42
VSimpleName: setFrom
p27856
tp27857
I2
s(g17678
I42
g17679
Vinsert
p27858
I42
VSimpleName: busySkipCount
p27859
tp27860
I1
s(Vinsert
p27861
I42
VSimpleName: getColumns
p27862
Vinsert
p27863
I58
VVariableDeclarationExpression
p27864
tp27865
I1
s(g9982
I42
g9983
Vinsert
p27866
I42
VSimpleName: result
p27867
tp27868
I8
s(g18601
I42
g18602
Vinsert
p27869
I45
VStringLiteral: "\u005c""
p27870
tp27871
I2
s(g5882
I42
g5883
Vinsert
p27872
I27
VInfixExpression: &&
p27873
tp27874
I1
s(g12753
I42
g12754
Vinsert
p27875
I42
VSimpleName: renameTo
p27876
tp27877
I1
s(g1329
I42
g1330
Vinsert
p27878
I43
VSimpleType: TestCase
p27879
tp27880
I1
s(Vinsert
p27881
I42
VSimpleName: getClass
p27882
Vinsert
p27883
I42
VSimpleName: methodName
p27884
tp27885
I1
s(g6144
I42
g6145
Vinsert
p27886
I42
VSimpleName: sessionCount
p27887
tp27888
I2
s(g15864
I42
g15865
Vinsert
p27889
I42
VSimpleName: Exception
p27890
tp27891
I1
s(g3523
I42
g3524
Vinsert
p27892
I34
VNumberLiteral: 1
p27893
tp27894
I5
s(g6771
I42
g6772
Vinsert
p27895
I27
VInfixExpression: !=
p27896
tp27897
I1
s(g26624
I42
g26625
Vinsert
p27898
I42
VSimpleName: Limit
p27899
tp27900
I2
s(g6364
I42
g6365
Vinsert
p27901
I42
VSimpleName: setMaximumConnectionCount
p27902
tp27903
I1
s(g10467
I42
g10468
Vinsert
p27904
I42
VSimpleName: String
p27905
tp27906
I5
s(g5022
I42
g5023
Vinsert
p27907
I45
VStringLiteral: "\u005cn\u005ct\u005ct\u005ct\u005ct\u005ct) t5"
p27908
tp27909
I1
s(g17133
I42
g17134
Vinsert
p27910
I59
VVariableDeclarationFragment
p27911
tp27912
I1
s(g6323
I42
g6324
Vinsert
p27913
I42
VSimpleName: Exception
p27914
tp27915
I1
s(g2805
I42
g2806
Vinsert
p27916
I42
VSimpleName: ConcurrentMap
p27917
tp27918
I1
s(g14754
I42
g14755
Vinsert
p27919
I14
VClassInstanceCreation
p27920
tp27921
I1
s(g3908
I42
g3909
Vinsert
p27922
I32
VMethodInvocation
p27923
tp27924
I1
s(g7827
I42
g7828
Vinsert
p27925
I52
VThisExpression
p27926
tp27927
I2
s(g1448
I42
g1449
Vinsert
p27928
I33
VNullLiteral
p27929
tp27930
I25
s(g4801
I42
g4802
Vinsert
p27931
I43
VSimpleType: Connection
p27932
tp27933
I6
s(g23258
I42
g23259
Vinsert
p27934
I59
VVariableDeclarationFragment
p27935
tp27936
I1
s(g2847
I42
g2848
Vinsert
p27937
I43
VSimpleType: SQLExprTableSource
p27938
tp27939
I1
s(g4844
I42
g4845
Vinsert
p27940
I42
VSimpleName: fractionalSeconds
p27941
tp27942
I1
s(Vinsert
p27943
I42
VSimpleName: toSQLString
p27944
Vinsert
p27945
I45
VStringLiteral: "\u005ctON employees\u005cn"
p27946
tp27947
I1
s(g733
I42
g734
Vinsert
p27948
I39
VPrimitiveType: void
p27949
tp27950
I7
s(g9670
I42
g9671
Vinsert
p27951
I42
VSimpleName: Assert
p27952
tp27953
I601
s(Vinsert
p27954
I42
VSimpleName: loadClass
p27955
Vinsert
p27956
I42
VSimpleName: ClassNotFoundException
p27957
tp27958
I1
s(g21458
I42
g21459
Vinsert
p27959
I42
VSimpleName: scheduler
p27960
tp27961
I1
s(g17017
I42
g17018
Vinsert
p27962
I42
VSimpleName: getProperty
p27963
tp27964
I1
s(g24526
I42
g24527
Vinsert
p27965
I42
VSimpleName: statement
p27966
tp27967
I1
s(g4834
I42
g4835
Vinsert
p27968
I39
VPrimitiveType: void
p27969
tp27970
I1
s(g6031
I42
g6032
Vinsert
p27971
I21
VExpressionStatement
p27972
tp27973
I2
s(Vinsert
p27974
I42
VSimpleName: getInto
p27975
Vinsert
p27976
I42
VSimpleName: print
p27977
tp27978
I1
s(g4065
I42
g4066
Vinsert
p27979
I32
VMethodInvocation
p27980
tp27981
I3
s(g15480
I42
g15481
Vinsert
p27982
I43
VSimpleType: Log4JLogger
p27983
tp27984
I2
s(Vinsert
p27985
I42
VSimpleName: error
p27986
Vinsert
p27987
I42
VSimpleName: in
p27988
tp27989
I2
s(g1820
I42
g1821
Vinsert
p27990
I43
VSimpleType: MySqlDropUser
p27991
tp27992
I1
s(g26722
I42
g26723
Vinsert
p27993
I42
VSimpleName: OracleUpdateSetListClause
p27994
tp27995
I1
s(g2115
I42
g2116
Vinsert
p27996
I33
VNullLiteral
p27997
tp27998
I1
s(g3967
I42
g3968
Vinsert
p27999
I27
VInfixExpression: <
p28000
tp28001
I1
s(Vinsert
p28002
I42
VSimpleName: trim
p28003
Vinsert
p28004
I34
VNumberLiteral: 0
p28005
tp28006
I1
s(Vinsert
p28007
I42
VSimpleName: getClass
p28008
Vinsert
p28009
I42
VSimpleName: String
p28010
tp28011
I2
s(g3383
I42
g3384
Vinsert
p28012
I32
VMethodInvocation
p28013
tp28014
I2
s(g7751
I42
g7752
Vinsert
p28015
I42
VSimpleName: factory
p28016
tp28017
I2
s(g146
I42
g147
Vinsert
p28018
I14
VClassInstanceCreation
p28019
tp28020
I2
s(g25450
I42
g25451
Vinsert
p28021
I42
VSimpleName: getBrowserIE10Count
p28022
tp28023
I6
s(g20293
I42
g20294
Vinsert
p28024
I11
VCastExpression
p28025
tp28026
I2
s(g3921
I42
g3922
Vinsert
p28027
I60
VVariableDeclarationStatement
p28028
tp28029
I8
s(g6699
I42
g6700
Vinsert
p28030
I32
VMethodInvocation
p28031
tp28032
I2
s(g12854
I42
g12855
Vinsert
p28033
I42
VSimpleName: xid
p28034
tp28035
I1
s(g2359
I42
g2360
Vinsert
p28036
I42
VSimpleName: CompositeType
p28037
tp28038
I1
s(g23242
I42
g23243
Vinsert
p28039
I40
VQualifiedName: SQLBinaryOperator.BooleanAnd
p28040
tp28041
I1
s(Vinsert
p28042
I42
VSimpleName: sort
p28043
Vinsert
p28044
I60
VVariableDeclarationStatement
p28045
tp28046
I5
s(g5787
I42
g5788
Vinsert
p28047
I32
VMethodInvocation
p28048
tp28049
I2
s(g16070
I42
g16071
Vinsert
p28050
I42
VSimpleName: setUsing
p28051
tp28052
I1
s(g20733
I42
g20734
Vinsert
p28053
I45
VStringLiteral: "\u005cnwhere name rlike 'kk';"
p28054
tp28055
I1
s(Vinsert
p28056
I42
VSimpleName: assertEquals
p28057
Vinsert
p28058
I45
VStringLiteral: "\u005cnWHERE t1.c1 = 1"
p28059
tp28060
I1
s(g9704
I42
g9705
Vinsert
p28061
I8
VBlock
p28062
tp28063
I1
s(g12435
I42
g12436
Vinsert
p28064
I42
VSimpleName: x
p28065
tp28066
I2
s(Vinsert
p28067
I42
VSimpleName: assertEquals
p28068
Vinsert
p28069
I42
VSimpleName: getDataSourceConnectCount
p28070
tp28071
I1
s(Vinsert
p28072
I42
VSimpleName: add
p28073
Vinsert
p28074
I42
VSimpleName: p2
p28075
tp28076
I2
s(g13840
I42
g13841
Vinsert
p28077
I42
VSimpleName: exceptionsInto
p28078
tp28079
I1
s(g5569
I42
g5570
Vinsert
p28080
I27
VInfixExpression: ||
p28081
tp28082
I1
s(g3223
I42
g3224
Vinsert
p28083
I18
VContinueStatement
p28084
tp28085
I1
s(g7728
I42
g7729
Vinsert
p28086
I45
VStringLiteral: "CREATE TABLE customers_demo ("
p28087
tp28088
I2
s(g86
I42
g87
Vinsert
p28089
I42
VSimpleName: Override
p28090
tp28091
I1
s(g20769
I42
g20770
Vinsert
p28092
I42
VSimpleName: Map
p28093
tp28094
I3
s(g13612
I42
g13613
Vinsert
p28095
I42
VSimpleName: PoolablePreparedStatement
p28096
tp28097
I1
s(g10682
I42
g10683
Vinsert
p28098
I8
VBlock
p28099
tp28100
I10
s(g19283
I42
g19284
Vinsert
p28101
I43
VSimpleType: SQLException
p28102
tp28103
I1
s(g4921
I42
g4922
Vinsert
p28104
I42
VSimpleName: ucase
p28105
tp28106
I1
s(Vinsert
p28107
I42
VSimpleName: token
p28108
Vinsert
p28109
I10
VBreakStatement
p28110
tp28111
I1
s(g3007
I42
g3008
Vinsert
p28112
I83
VModifier: public
p28113
tp28114
I1
s(g13986
I42
g13987
Vinsert
p28115
I42
VSimpleName: endVisit
p28116
tp28117
I1
s(Vinsert
p28118
I42
VSimpleName: getArguments
p28119
Vinsert
p28120
I42
VSimpleName: getOrderBy
p28121
tp28122
I1
s(g6416
I42
g6417
Vinsert
p28123
I43
VSimpleType: List
p28124
tp28125
I2
s(g24062
I42
g24063
Vinsert
p28126
I45
VStringLiteral: "CLUSTER \u005c"SEARCHTEST\u005c".\u005c"CLUSTER_PRODUCT_COMPANY_ID\u005c" (\u005c"COMPANY_ID\u005c")"
p28127
tp28128
I1
s(g1750
I42
g1751
Vinsert
p28129
I42
VSimpleName: StringBuffer
p28130
tp28131
I4
s(g3857
I42
g3858
Vinsert
p28132
I42
VSimpleName: setGuardValue
p28133
tp28134
I1
s(g2263
I42
g2264
Vinsert
p28135
I42
VSimpleName: getConnectionCount_Alive_10_30_Minutes
p28136
tp28137
I1
s(Vinsert
p28138
I42
VSimpleName: getHints
p28139
Vinsert
p28140
I59
VVariableDeclarationFragment
p28141
tp28142
I4
s(g20914
I42
g20915
Vinsert
p28143
I27
VInfixExpression: -
p28144
tp28145
I1
s(g20856
I42
g20857
Vinsert
p28146
I32
VMethodInvocation
p28147
tp28148
I2
s(g3228
I42
g3229
Vinsert
p28149
I42
VSimpleName: obj
p28150
tp28151
I2
s(g1160
I42
g1161
Vinsert
p28152
I78
VMarkerAnnotation
p28153
tp28154
I1
s(g7835
I42
g7836
Vinsert
p28155
I42
VSimpleName: visitor
p28156
tp28157
I2
s(g27644
I42
g27645
Vinsert
p28158
I42
VSimpleName: singleTableQueryExecuetePlan
p28159
tp28160
I1
s(g14605
I42
g14606
Vinsert
p28161
I52
VThisExpression
p28162
tp28163
I1
s(g5987
I42
g5988
Vinsert
p28164
I40
VQualifiedName: Token.OPEN
p28165
tp28166
I1
s(g801
I42
g802
Vinsert
p28167
I42
VSimpleName: String
p28168
tp28169
I1
s(g10874
I42
g10875
Vinsert
p28170
I8
VBlock
p28171
tp28172
I1
s(g17512
I42
g17513
Vinsert
p28173
I42
VSimpleName: initWallTopStatementContext
p28174
tp28175
I1
s(g5409
I42
g5410
Vinsert
p28176
I8
VBlock
p28177
tp28178
I10
s(g9977
I42
g9978
Vinsert
p28179
I8
VBlock
p28180
tp28181
I12
s(g3500
I42
g3501
Vinsert
p28182
I43
VSimpleType: SQLASTOutputVisitor
p28183
tp28184
I1
s(Vinsert
p28185
I42
VSimpleName: warn
p28186
Vinsert
p28187
I43
VSimpleType: DruidPooledPreparedStatement
p28188
tp28189
I1
s(Vinsert
p28190
I42
VSimpleName: getFetchRowCount
p28191
Vinsert
p28192
I42
VSimpleName: rs
p28193
tp28194
I2
s(g206
I42
g207
Vinsert
p28195
I25
VIfStatement
p28196
tp28197
I1
s(g4308
I42
g4309
Vinsert
p28198
I59
VVariableDeclarationFragment
p28199
tp28200
I1
s(g16375
I42
g16376
Vinsert
p28201
I32
VMethodInvocation
p28202
tp28203
I4
s(Vinsert
p28204
I42
VSimpleName: nextToken
p28205
Vinsert
p28206
I42
VSimpleName: database
p28207
tp28208
I1
s(g4908
I42
g4909
Vinsert
p28209
I42
VSimpleName: List
p28210
tp28211
I67
s(g26548
I42
g26549
Vinsert
p28212
I33
VNullLiteral
p28213
tp28214
I1
s(g18512
I42
g18513
Vinsert
p28215
I42
VSimpleName: tableSourceExpr
p28216
tp28217
I1
s(g6893
I42
g6894
Vinsert
p28218
I39
VPrimitiveType: boolean
p28219
tp28220
I1
s(Vinsert
p28221
I42
VSimpleName: getVersionNumber
p28222
Vinsert
p28223
I40
VQualifiedName: oracle.jdbc.internal.OracleConnection
p28224
tp28225
I2
s(g3780
I42
g3781
Vinsert
p28226
I8
VBlock
p28227
tp28228
I40
s(g15648
I42
g15649
Vinsert
p28229
I25
VIfStatement
p28230
tp28231
I1
s(Vinsert
p28232
I42
VSimpleName: info
p28233
Vinsert
p28234
I43
VSimpleType: SQLIdentifierExpr
p28235
tp28236
I1
s(g5455
I42
g5456
Vinsert
p28237
I42
VSimpleName: SQLUpdateSetItem
p28238
tp28239
I1
s(g5877
I42
g5878
Vinsert
p28240
I42
VSimpleName: value
p28241
tp28242
I3
s(g22033
I42
g22034
Vinsert
p28243
I42
VSimpleName: requestIntervalHistogram_10000000_more_Updater
p28244
tp28245
I1
s(g4248
I42
g4249
Vinsert
p28246
I21
VExpressionStatement
p28247
tp28248
I208
s(g10846
I42
g10847
Vinsert
p28249
I42
VSimpleName: url
p28250
tp28251
I1
s(g2760
I42
g2761
Vinsert
p28252
I42
VSimpleName: visit
p28253
tp28254
I1
s(g876
I42
g877
Vinsert
p28255
I45
VStringLiteral: ")\u005cn"
p28256
tp28257
I3
s(g10655
I42
g10656
Vinsert
p28258
I32
VMethodInvocation
p28259
tp28260
I2
s(g5017
I42
g5018
Vinsert
p28261
I59
VVariableDeclarationFragment
p28262
tp28263
I2
s(g12869
I42
g12870
Vinsert
p28264
I9
VBooleanLiteral: true
p28265
tp28266
I1
s(g3022
I42
g3023
Vinsert
p28267
I21
VExpressionStatement
p28268
tp28269
I1
s(g11745
I42
g11746
Vinsert
p28270
I42
VSimpleName: setBlob
p28271
tp28272
I1
s(Vinsert
p28273
I42
VSimpleName: getTables
p28274
Vinsert
p28275
I42
VSimpleName: println
p28276
tp28277
I69
s(Vinsert
p28278
I42
VSimpleName: reset
p28279
Vinsert
p28280
I42
VSimpleName: privilege
p28281
tp28282
I1
s(g21284
I42
g21285
Vinsert
p28283
I14
VClassInstanceCreation
p28284
tp28285
I2
s(g23725
I42
g23726
Vinsert
p28286
I27
VInfixExpression: +
p28287
tp28288
I1
s(g3118
I42
g3119
Vinsert
p28289
I45
VStringLiteral: "DAY"
p28290
tp28291
I1
s(g7835
I42
g7836
Vinsert
p28292
I27
VInfixExpression: !=
p28293
tp28294
I2
s(Vinsert
p28295
I42
VSimpleName: append
p28296
Vinsert
p28297
I42
VSimpleName: visitor
p28298
tp28299
I2
s(g26818
I42
g26819
Vinsert
p28300
I42
VSimpleName: aliasMap
p28301
tp28302
I5
s(g2639
I42
g2640
Vinsert
p28303
I45
VStringLiteral: "Count_10_20"
p28304
tp28305
I1
s(g8924
I42
g8925
Vinsert
p28306
I31
VMethodDeclaration
p28307
tp28308
I1
s(g20811
I42
g20812
Vinsert
p28309
I42
VSimpleName: newInstance
p28310
tp28311
I2
s(g1155
I42
g1156
Vinsert
p28312
I39
VPrimitiveType: int
p28313
tp28314
I1
s(g15402
I42
g15403
Vinsert
p28315
I34
VNumberLiteral: 2
p28316
tp28317
I4
s(g424
I42
g425
Vinsert
p28318
I43
VSimpleType: SQLSelectOrderByItem
p28319
tp28320
I6
s(Vinsert
p28321
I42
VSimpleName: add
p28322
Vinsert
p28323
I42
VSimpleName: PoolableResultSet
p28324
tp28325
I2
s(g26526
I42
g26527
Vinsert
p28326
I43
VSimpleType: SQLStatement
p28327
tp28328
I17
s(g6460
I42
g6461
Vinsert
p28329
I45
VStringLiteral: "\u005ct, bs.set_stamp, bs.set_count, bs.bck_type AS backup_type, bs.incr_level AS incremental_level, bs.pieces\u005cn"
p28330
tp28331
I1
s(g15220
I42
g15221
Vinsert
p28332
I42
VSimpleName: dataSourceInfo
p28333
tp28334
I3
s(g6421
I42
g6422
Vinsert
p28335
I40
VQualifiedName: FnvHash.Constants.DEFERRABLE
p28336
tp28337
I2
s(g14702
I42
g14703
Vinsert
p28338
I45
VStringLiteral: "select 1"
p28339
tp28340
I1
s(g17066
I42
g17067
Vinsert
p28341
I34
VNumberLiteral: 0
p28342
tp28343
I2
s(g7482
I42
g7483
Vinsert
p28344
I62
VInstanceofExpression
p28345
tp28346
I2
s(Vinsert
p28347
I42
VSimpleName: getOwner
p28348
Vinsert
p28349
I43
VSimpleType: SQLIdentifierExpr
p28350
tp28351
I1
s(g18173
I42
g18174
Vinsert
p28352
I25
VIfStatement
p28353
tp28354
I2
s(g1180
I42
g1181
Vinsert
p28355
I44
VSingleVariableDeclaration
p28356
tp28357
I2
s(Vinsert
p28358
I42
VSimpleName: expr
p28359
Vinsert
p28360
I43
VSimpleType: PGInetExpr
p28361
tp28362
I2
s(g8752
I42
g8753
Vinsert
p28363
I42
VSimpleName: sessionStatMap
p28364
tp28365
I1
s(g26548
I42
g26549
Vinsert
p28366
I27
VInfixExpression: !=
p28367
tp28368
I1
s(g22126
I42
g22127
Vinsert
p28369
I70
VEnhancedForStatement
p28370
tp28371
I1
s(g5465
I42
g5466
Vinsert
p28372
I42
VSimpleName: WallCheckResult
p28373
tp28374
I1
s(Vinsert
p28375
I42
VSimpleName: getClass
p28376
Vinsert
p28377
I42
VSimpleName: getSessionStatData
p28378
tp28379
I1
s(g6480
I42
g6481
Vinsert
p28380
I42
VSimpleName: String
p28381
tp28382
I5
s(g9559
I42
g9560
Vinsert
p28383
I42
VSimpleName: resultMetaData
p28384
tp28385
I2
s(g4452
I42
g4453
Vinsert
p28386
I43
VSimpleType: String
p28387
tp28388
I2
s(g5597
I42
g5598
Vinsert
p28389
I21
VExpressionStatement
p28390
tp28391
I2
s(Vinsert
p28392
I42
VSimpleName: toString
p28393
Vinsert
p28394
I42
VSimpleName: Long
p28395
tp28396
I1
s(g7320
I42
g7321
Vinsert
p28397
I42
VSimpleName: ConnectionProxy
p28398
tp28399
I2
s(Vinsert
p28400
I42
VSimpleName: assertEquals
p28401
Vinsert
p28402
I42
VSimpleName: LOOP_COUNT
p28403
tp28404
I1
s(g3513
I42
g3514
Vinsert
p28405
I42
VSimpleName: println
p28406
tp28407
I1
s(g3664
I42
g3665
Vinsert
p28408
I42
VSimpleName: print0
p28409
tp28410
I1
s(Vinsert
p28411
I42
VSimpleName: parseStatementList
p28412
Vinsert
p28413
I43
VSimpleType: MySqlShowVariantsStatement
p28414
tp28415
I2
s(g15087
I42
g15088
Vinsert
p28416
I21
VExpressionStatement
p28417
tp28418
I1
s(g4188
I42
g4189
Vinsert
p28419
I41
VReturnStatement
p28420
tp28421
I3
s(g7039
I42
g7040
Vinsert
p28422
I45
VStringLiteral: "\u005cn\u005ctPARTITION SALES_Q2_2000 VALUES LESS THAN (TO_DATE('01-JUL-2000', 'DD-MON-YYYY'))"
p28423
tp28424
I2
s(Vinsert
p28425
I42
VSimpleName: accept
p28426
Vinsert
p28427
I42
VSimpleName: SQLTableElement
p28428
tp28429
I1
s(g10433
I42
g10434
Vinsert
p28430
I42
VSimpleName: entries
p28431
tp28432
I1
s(g6901
I42
g6902
Vinsert
p28433
I8
VBlock
p28434
tp28435
I4
s(g26818
I42
g26819
Vinsert
p28436
I32
VMethodInvocation
p28437
tp28438
I20
s(g20702
I42
g20703
Vinsert
p28439
I45
VStringLiteral: "jdbc:mysql://172.22.32.5/beidou?useUnicode=true&characterEncoding=UTF-8"
p28440
tp28441
I1
s(Vinsert
p28442
I42
VSimpleName: assertEquals
p28443
Vinsert
p28444
I45
VStringLiteral: "\u005cn\u005ctREPAIR PARTITION p1"
p28445
tp28446
I1
s(Vinsert
p28447
I42
VSimpleName: assertEquals
p28448
Vinsert
p28449
I42
VSimpleName: test_basic
p28450
tp28451
I1
s(g10214
I42
g10215
Vinsert
p28452
I22
VFieldAccess
p28453
tp28454
I4
s(Vinsert
p28455
I42
VSimpleName: expr
p28456
Vinsert
p28457
I42
VSimpleName: SQLSubPartitionByHash
p28458
tp28459
I2
s(g15402
I42
g15403
Vinsert
p28460
I42
VSimpleName: setMaxIdle
p28461
tp28462
I2
s(g16484
I42
g16485
Vinsert
p28463
I42
VSimpleName: host
p28464
tp28465
I1
s(g16556
I42
g16557
Vinsert
p28466
I76
VWildcardType: ?
p28467
tp28468
I1
s(g21345
I42
g21346
Vinsert
p28469
I42
VSimpleName: charAt
p28470
tp28471
I1
s(g4661
I42
g4662
Vinsert
p28472
I42
VSimpleName: TestCase
p28473
tp28474
I1
s(g11737
I42
g11738
Vinsert
p28475
I42
VSimpleName: String
p28476
tp28477
I1
s(g9569
I42
g9570
Vinsert
p28478
I21
VExpressionStatement
p28479
tp28480
I1
s(g21370
I42
g21371
Vinsert
p28481
I44
VSingleVariableDeclaration
p28482
tp28483
I2
s(g10660
I42
g10661
Vinsert
p28484
I45
VStringLiteral: "\u005ct`c_char` char(10) DEFAULT NULL COMMENT 'char',\u005cn"
p28485
tp28486
I2
s(g26526
I42
g26527
Vinsert
p28487
I42
VSimpleName: stmt
p28488
tp28489
I17
s(g12864
I42
g12865
Vinsert
p28490
I42
VSimpleName: value
p28491
tp28492
I1
s(Vinsert
p28493
I42
VSimpleName: println
p28494
Vinsert
p28495
I43
VSimpleType: PGSchemaStatVisitor
p28496
tp28497
I8
s(g15594
I42
g15595
Vinsert
p28498
I21
VExpressionStatement
p28499
tp28500
I3
s(g7822
I42
g7823
Vinsert
p28501
I40
VQualifiedName: Token.RPAREN
p28502
tp28503
I1
s(g25381
I42
g25382
Vinsert
p28504
I42
VSimpleName: ds
p28505
tp28506
I2
s(Vinsert
p28507
I42
VSimpleName: error
p28508
Vinsert
p28509
I37
VPostfixExpression: ++
p28510
tp28511
I1
s(g18836
I42
g18837
Vinsert
p28512
I42
VSimpleName: appStat
p28513
tp28514
I1
s(Vinsert
p28515
I42
VSimpleName: stringVal
p28516
Vinsert
p28517
I45
VStringLiteral: "MAXVALUE"
p28518
tp28519
I1
s(Vinsert
p28520
I42
VSimpleName: setFilters
p28521
Vinsert
p28522
I45
VStringLiteral: "trace"
p28523
tp28524
I1
s(g7288
I42
g7289
Vinsert
p28525
I32
VMethodInvocation
p28526
tp28527
I4
s(g21061
I42
g21062
Vinsert
p28528
I42
VSimpleName: DruidPanel
p28529
tp28530
I2
s(g5903
I42
g5904
Vinsert
p28531
I37
VPostfixExpression: ++
p28532
tp28533
I1
s(Vinsert
p28534
I42
VSimpleName: size
p28535
Vinsert
p28536
I42
VSimpleName: withSubQuery
p28537
tp28538
I1
s(g18065
I42
g18066
Vinsert
p28539
I8
VBlock
p28540
tp28541
I1
s(Vinsert
p28542
I42
VSimpleName: expr
p28543
Vinsert
p28544
I42
VSimpleName: SQLInSubQueryExpr
p28545
tp28546
I3
s(g3931
I42
g3932
Vinsert
p28547
I60
VVariableDeclarationStatement
p28548
tp28549
I5
s(g3437
I42
g3438
Vinsert
p28550
I42
VSimpleName: setUrl
p28551
tp28552
I2
s(g2263
I42
g2264
Vinsert
p28553
I39
VPrimitiveType: long
p28554
tp28555
I2
s(g1642
I42
g1643
Vinsert
p28556
I42
VSimpleName: ds
p28557
tp28558
I1
s(Vinsert
p28559
I42
VSimpleName: println
p28560
Vinsert
p28561
I34
VNumberLiteral: 4
p28562
tp28563
I1
s(g786
I42
g787
Vinsert
p28564
I42
VSimpleName: String
p28565
tp28566
I2
s(g8365
I42
g8366
Vinsert
p28567
I53
VThrowStatement
p28568
tp28569
I1
s(g19369
I42
g19370
Vinsert
p28570
I42
VSimpleName: ucase
p28571
tp28572
I1
s(g8391
I42
g8392
Vinsert
p28573
I42
VSimpleName: SQLUtils
p28574
tp28575
I5
s(g26521
I42
g26522
Vinsert
p28576
I42
VSimpleName: matches
p28577
tp28578
I1
s(g13617
I42
g13618
Vinsert
p28579
I7
VAssignment: =
p28580
tp28581
I2
s(g21716
I42
g21717
Vinsert
p28582
I42
VSimpleName: OracleOuterExpr
p28583
tp28584
I2
s(g8090
I42
g8091
Vinsert
p28585
I59
VVariableDeclarationFragment
p28586
tp28587
I2
s(g13272
I42
g13273
Vinsert
p28588
I83
VModifier: public
p28589
tp28590
I1
s(g6712
I42
g6713
Vinsert
p28591
I42
VSimpleName: operator
p28592
tp28593
I1
s(g7417
I42
g7418
Vinsert
p28594
I11
VCastExpression
p28595
tp28596
I1
s(g15263
I42
g15264
Vinsert
p28597
I8
VBlock
p28598
tp28599
I4
s(g464
I42
g465
Vinsert
p28600
I25
VIfStatement
p28601
tp28602
I1
s(g5030
I42
g5031
Vinsert
p28603
I42
VSimpleName: notContainsOrderBy
p28604
tp28605
I1
s(g6607
I42
g6608
Vinsert
p28606
I83
VModifier: protected
p28607
tp28608
I1
s(g3360
I42
g3361
Vinsert
p28609
I45
VStringLiteral: "select f1, f2 from t where id=1 union select 1, 2"
p28610
tp28611
I1
s(g7547
I42
g7548
Vinsert
p28612
I45
VStringLiteral: "\u005ctc_date date,\u005cn"
p28613
tp28614
I2
s(g11051
I42
g11052
Vinsert
p28615
I27
VInfixExpression: !=
p28616
tp28617
I1
s(g2009
I42
g2010
Vinsert
p28618
I40
VQualifiedName: com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlCreateTableStatement
p28619
tp28620
I1
s(Vinsert
p28621
I42
VSimpleName: getSelect
p28622
Vinsert
p28623
I42
VSimpleName: incrementIndent
p28624
tp28625
I1
s(g4775
I42
g4776
Vinsert
p28626
I62
VInstanceofExpression
p28627
tp28628
I1
s(g25157
I42
g25158
Vinsert
p28629
I43
VSimpleType: String
p28630
tp28631
I4
s(g16354
I42
g16355
Vinsert
p28632
I31
VMethodDeclaration
p28633
tp28634
I1
s(Vinsert
p28635
I42
VSimpleName: equals
p28636
Vinsert
p28637
I42
VSimpleName: methodName
p28638
tp28639
I2
s(Vinsert
p28640
I42
VSimpleName: getOperator
p28641
Vinsert
p28642
I42
VSimpleName: getLeft
p28643
tp28644
I3
s(g9629
I42
g9630
Vinsert
p28645
I43
VSimpleType: String
p28646
tp28647
I2
s(g5262
I42
g5263
Vinsert
p28648
I42
VSimpleName: SqlMapClientImpl
p28649
tp28650
I2
s(g2349
I42
g2350
Vinsert
p28651
I8
VBlock
p28652
tp28653
I1
s(g3608
I42
g3609
Vinsert
p28654
I42
VSimpleName: mergedList
p28655
tp28656
I2
s(g61
I42
g62
Vinsert
p28657
I45
VStringLiteral: "10.16.200.0/24"
p28658
tp28659
I1
s(g18289
I42
g18290
Vinsert
p28660
I42
VSimpleName: e
p28661
tp28662
I3
s(Vinsert
p28663
I42
VSimpleName: print
p28664
Vinsert
p28665
I42
VSimpleName: getInt
p28666
tp28667
I2
s(g15220
I42
g15221
Vinsert
p28668
I32
VMethodInvocation
p28669
tp28670
I3
s(g2702
I42
g2703
Vinsert
p28671
I42
VSimpleName: SQLName
p28672
tp28673
I1
s(g7642
I42
g7643
Vinsert
p28674
I11
VCastExpression
p28675
tp28676
I5
s(g15761
I42
g15762
Vinsert
p28677
I42
VSimpleName: x
p28678
tp28679
I4
s(g11365
I42
g11366
Vinsert
p28680
I45
VStringLiteral: "queue_on_pk "
p28681
tp28682
I1
s(g8282
I42
g8283
Vinsert
p28683
I42
VSimpleName: rightExp
p28684
tp28685
I1
s(g9919
I42
g9920
Vinsert
p28686
I43
VSimpleType: SQLSelect
p28687
tp28688
I4
s(g3417
I42
g3418
Vinsert
p28689
I38
VPrefixExpression: -
p28690
tp28691
I1
s(g5267
I42
g5268
Vinsert
p28692
I39
VPrimitiveType: void
p28693
tp28694
I13
s(g4222
I42
g4223
Vinsert
p28695
I43
VSimpleType: Reference
p28696
tp28697
I2
s(Vinsert
p28698
I42
VSimpleName: setValues
p28699
Vinsert
p28700
I42
VSimpleName: x
p28701
tp28702
I2
s(g20470
I42
g20471
Vinsert
p28703
I42
VSimpleName: hash2
p28704
tp28705
I1
s(Vinsert
p28706
I42
VSimpleName: setParent
p28707
Vinsert
p28708
I42
VSimpleName: option2
p28709
tp28710
I2
s(g16294
I42
g16295
Vinsert
p28711
I36
VParenthesizedExpression
p28712
tp28713
I3
s(g7802
I42
g7803
Vinsert
p28714
I60
VVariableDeclarationStatement
p28715
tp28716
I108
s(g3154
I42
g3155
Vinsert
p28717
I42
VSimpleName: getPartition
p28718
tp28719
I2
s(Vinsert
p28720
I42
VSimpleName: get
p28721
Vinsert
p28722
I42
VSimpleName: stat
p28723
tp28724
I3
s(g9137
I42
g9138
Vinsert
p28725
I25
VIfStatement
p28726
tp28727
I1
s(g1830
I42
g1831
Vinsert
p28728
I21
VExpressionStatement
p28729
tp28730
I6
s(g13928
I42
g13929
Vinsert
p28731
I42
VSimpleName: select
p28732
tp28733
I1
s(g8979
I42
g8980
Vinsert
p28734
I43
VSimpleType: DB2SchemaStatVisitor
p28735
tp28736
I40
s(g18289
I42
g18290
Vinsert
p28737
I44
VSingleVariableDeclaration
p28738
tp28739
I6
s(g4357
I42
g4358
Vinsert
p28740
I42
VSimpleName: PGArrayExpr
p28741
tp28742
I1
s(g3939
I42
g3940
Vinsert
p28743
I33
VNullLiteral
p28744
tp28745
I13
s(g23859
I42
g23860
Vinsert
p28746
I42
VSimpleName: getLeft
p28747
tp28748
I8
s(g25268
I42
g25269
Vinsert
p28749
I42
VSimpleName: test_select_1
p28750
tp28751
I1
s(g12555
I42
g12556
Vinsert
p28752
I60
VVariableDeclarationStatement
p28753
tp28754
I1
s(g18648
I42
g18649
Vinsert
p28755
I66
VTextElement: Note that this method is only effective for log classes obtained after calling this method. If you intend to use
p28756
tp28757
I1
s(g11935
I42
g11936
Vinsert
p28758
I32
VMethodInvocation
p28759
tp28760
I3
s(g22115
I42
g22116
Vinsert
p28761
I42
VSimpleName: dataSource
p28762
tp28763
I3
s(Vinsert
p28764
I42
VSimpleName: isInfoEnabled
p28765
Vinsert
p28766
I37
VPostfixExpression: ++
p28767
tp28768
I1
s(g26160
I42
g26161
Vinsert
p28769
I42
VSimpleName: getViolations
p28770
tp28771
I1
s(Vinsert
p28772
I42
VSimpleName: getTable
p28773
Vinsert
p28774
I45
VStringLiteral: "SHOW KEYS"
p28775
tp28776
I1
s(Vinsert
p28777
I42
VSimpleName: getConnection
p28778
Vinsert
p28779
I42
VSimpleName: conn_8
p28780
tp28781
I1
s(g6056
I42
g6057
Vinsert
p28782
I42
VSimpleName: OracleCursorExpr
p28783
tp28784
I1
s(Vinsert
p28785
I42
VSimpleName: assertEquals
p28786
Vinsert
p28787
I45
VStringLiteral: "\u005cnOUTPUT INSERTED.ScrapReasonID, INSERTED.Name, INSERTED.ModifiedDate"
p28788
tp28789
I2
s(Vinsert
p28790
I42
VSimpleName: check
p28791
Vinsert
p28792
I2
VArrayAccess
p28793
tp28794
I1
s(Vinsert
p28795
I42
VSimpleName: toMySqlString
p28796
Vinsert
p28797
I45
VStringLiteral: "\u005cnFROM articles"
p28798
tp28799
I1
s(g8030
I42
g8031
Vinsert
p28800
I32
VMethodInvocation
p28801
tp28802
I1
s(g6388
I42
g6389
Vinsert
p28803
I38
VPrefixExpression: ++
p28804
tp28805
I1
s(g2563
I42
g2564
Vinsert
p28806
I32
VMethodInvocation
p28807
tp28808
I3
s(g14160
I42
g14161
Vinsert
p28809
I42
VSimpleName: dataSource_connect
p28810
tp28811
I1
s(Vinsert
p28812
I42
VSimpleName: getTables
p28813
Vinsert
p28814
I45
VStringLiteral: "orderBy : "
p28815
tp28816
I4
s(Vinsert
p28817
I42
VSimpleName: assertEquals
p28818
Vinsert
p28819
I45
VStringLiteral: "SELECT *"
p28820
tp28821
I2
s(g22281
I42
g22282
Vinsert
p28822
I42
VSimpleName: setDriverClassName
p28823
tp28824
I2
s(g14484
I42
g14485
Vinsert
p28825
I42
VSimpleName: dbType
p28826
tp28827
I7
s(g8863
I42
g8864
Vinsert
p28828
I59
VVariableDeclarationFragment
p28829
tp28830
I6
s(g26
I42
g27
Vinsert
p28831
I40
VQualifiedName: Token.COLONEQ
p28832
tp28833
I1
s(g4093
I42
g4094
Vinsert
p28834
I21
VExpressionStatement
p28835
tp28836
I2
s(g16501
I42
g16502
Vinsert
p28837
I40
VQualifiedName: Token.CREATE
p28838
tp28839
I1
s(Vinsert
p28840
I42
VSimpleName: entrySet
p28841
Vinsert
p28842
I42
VSimpleName: Object
p28843
tp28844
I1
s(g13659
I42
g13660
Vinsert
p28845
I42
VSimpleName: SQLUtils
p28846
tp28847
I9
s(g9028
I42
g9029
Vinsert
p28848
I25
VIfStatement
p28849
tp28850
I1
s(g21499
I42
g21500
Vinsert
p28851
I42
VSimpleName: getDriverClassName
p28852
tp28853
I1
s(g3831
I42
g3832
Vinsert
p28854
I43
VSimpleType: SQLQueryExpr
p28855
tp28856
I1
s(g351
I42
g352
Vinsert
p28857
I42
VSimpleName: getPoolingCount
p28858
tp28859
I1
s(g21746
I42
g21747
Vinsert
p28860
I45
VStringLiteral: "DEALLOCATE PREPARE "
p28861
tp28862
I1
s(g5297
I42
g5298
Vinsert
p28863
I27
VInfixExpression: ==
p28864
tp28865
I1
s(g351
I42
g352
Vinsert
p28866
I40
VQualifiedName: dataSource.driver
p28867
tp28868
I1
s(g7797
I42
g7798
Vinsert
p28869
I42
VSimpleName: notificationListener
p28870
tp28871
I2
s(Vinsert
p28872
I42
VSimpleName: isKeepComments
p28873
Vinsert
p28874
I42
VSimpleName: hasComment
p28875
tp28876
I2
s(g8643
I42
g8644
Vinsert
p28877
I42
VSimpleName: expr
p28878
tp28879
I1
s(Vinsert
p28880
I42
VSimpleName: getExpr
p28881
Vinsert
p28882
I42
VSimpleName: putAliasMap
p28883
tp28884
I1
s(Vinsert
p28885
I42
VSimpleName: getOperator
p28886
Vinsert
p28887
I42
VSimpleName: compareOp
p28888
tp28889
I2
s(g4080
I42
g4081
Vinsert
p28890
I32
VMethodInvocation
p28891
tp28892
I2
s(g11124
I42
g11125
Vinsert
p28893
I42
VSimpleName: SQLSelect
p28894
tp28895
I1
s(Vinsert
p28896
I42
VSimpleName: token
p28897
Vinsert
p28898
I40
VQualifiedName: Token.ERROR
p28899
tp28900
I1
s(g20975
I42
g20976
Vinsert
p28901
I43
VSimpleType: Map
p28902
tp28903
I1
s(g3287
I42
g3288
Vinsert
p28904
I42
VSimpleName: SQLException
p28905
tp28906
I1
s(g2634
I42
g2635
Vinsert
p28907
I27
VInfixExpression: !=
p28908
tp28909
I2
s(g11105
I42
g11106
Vinsert
p28910
I55
VTypeDeclaration
p28911
tp28912
I48
s(g10061
I42
g10062
Vinsert
p28913
I45
VStringLiteral: "spring.datasource.druid.StatViewServlet.enabled"
p28914
tp28915
I1
s(g24023
I42
g24024
Vinsert
p28916
I21
VExpressionStatement
p28917
tp28918
I2
s(Vinsert
p28919
I42
VSimpleName: setParent
p28920
Vinsert
p28921
I46
VSuperConstructorInvocation
p28922
tp28923
I1
s(g26826
I42
g26827
Vinsert
p28924
I42
VSimpleName: accept
p28925
tp28926
I1
s(g3194
I42
g3195
Vinsert
p28927
I42
VSimpleName: setInto
p28928
tp28929
I1
s(g15010
I42
g15011
Vinsert
p28930
I42
VSimpleName: setAutoCommitOnClose
p28931
tp28932
I1
s(g786
I42
g787
Vinsert
p28933
I32
VMethodInvocation
p28934
tp28935
I2
s(g12671
I42
g12672
Vinsert
p28936
I21
VExpressionStatement
p28937
tp28938
I1
s(g12299
I42
g12300
Vinsert
p28939
I74
VParameterizedType: List<Object>
p28940
tp28941
I2
s(g9483
I42
g9484
Vinsert
p28942
I45
VStringLiteral: "jdbc:druid-hbase:10.20.153.63"
p28943
tp28944
I1
s(g2009
I42
g2010
Vinsert
p28945
I74
VParameterizedType: List<SQLCommentHint>
p28946
tp28947
I1
s(g9595
I42
g9596
Vinsert
p28948
I42
VSimpleName: restartSlave
p28949
tp28950
I1
s(g18214
I42
g18215
Vinsert
p28951
I42
VSimpleName: keySet
p28952
tp28953
I1
s(g17093
I42
g17094
Vinsert
p28954
I42
VSimpleName: Map
p28955
tp28956
I3
s(g647
I42
g648
Vinsert
p28957
I8
VBlock
p28958
tp28959
I33
s(g5200
I42
g5201
Vinsert
p28960
I21
VExpressionStatement
p28961
tp28962
I2
s(g12077
I42
g12078
Vinsert
p28963
I31
VMethodDeclaration
p28964
tp28965
I1
s(g1425
I42
g1426
Vinsert
p28966
I22
VFieldAccess
p28967
tp28968
I1
s(g25157
I42
g25158
Vinsert
p28969
I42
VSimpleName: GenericServlet
p28970
tp28971
I2
s(Vinsert
p28972
I42
VSimpleName: name
p28973
Vinsert
p28974
I42
VSimpleName: item
p28975
tp28976
I6
s(g15823
I42
g15824
Vinsert
p28977
I8
VBlock
p28978
tp28979
I4
s(g9446
I42
g9447
Vinsert
p28980
I43
VSimpleType: Token
p28981
tp28982
I2
s(g2372
I42
g2373
Vinsert
p28983
I27
VInfixExpression: !=
p28984
tp28985
I1
s(Vinsert
p28986
I42
VSimpleName: setParent
p28987
Vinsert
p28988
I42
VSimpleName: OdpsInsert
p28989
tp28990
I1
s(g9235
I42
g9236
Vinsert
p28991
I42
VSimpleName: dataSource
p28992
tp28993
I2
s(g28812
I42
g28813
Vinsert
p28994
I42
VSimpleName: getOrderByColumns
p28995
tp28996
I4
s(g2423
I42
g2424
Vinsert
p28997
I42
VSimpleName: spec
p28998
tp28999
I2
s(g10527
I42
g10528
Vinsert
p29000
I42
VSimpleName: getFor
p29001
tp29002
I1
s(Vinsert
p29003
I42
VSimpleName: printStackTrace
p29004
Vinsert
p29005
I42
VSimpleName: getMessage
p29006
tp29007
I1
s(g3297
I42
g3298
Vinsert
p29008
I83
VModifier: public
p29009
tp29010
I9
s(Vinsert
p29011
I42
VSimpleName: getMessage
p29012
Vinsert
p29013
I42
VSimpleName: Class
p29014
tp29015
I1
s(g909
I42
g910
Vinsert
p29016
I45
VStringLiteral: ")"
p29017
tp29018
I25
s(g19035
I42
g19036
Vinsert
p29019
I11
VCastExpression
p29020
tp29021
I5
s(Vinsert
p29022
I42
VSimpleName: setParent
p29023
Vinsert
p29024
I42
VSimpleName: setParent
p29025
tp29026
I12
s(g9595
I42
g9596
Vinsert
p29027
I31
VMethodDeclaration
p29028
tp29029
I1
s(g1968
I42
g1969
Vinsert
p29030
I42
VSimpleName: SQLTableSource
p29031
tp29032
I2
s(g26868
I42
g26869
Vinsert
p29033
I43
VSimpleType: SQLArrayExpr
p29034
tp29035
I1
s(g5954
I42
g5955
Vinsert
p29036
I42
VSimpleName: SQLUpdateStatement
p29037
tp29038
I1
s(g15745
I42
g15746
Vinsert
p29039
I42
VSimpleName: Column
p29040
tp29041
I1
s(Vinsert
p29042
I42
VSimpleName: getDbType
p29043
Vinsert
p29044
I40
VQualifiedName: com.alibaba.druid.util.JdbcUtils
p29045
tp29046
I1
s(g6694
I42
g6695
Vinsert
p29047
I7
VAssignment: =
p29048
tp29049
I1
s(g4060
I42
g4061
Vinsert
p29050
I49
VSwitchCase
p29051
tp29052
I2
s(g796
I42
g797
Vinsert
p29053
I42
VSimpleName: conn
p29054
tp29055
I3
s(g2464
I42
g2465
Vinsert
p29056
I59
VVariableDeclarationFragment
p29057
tp29058
I1
s(Vinsert
p29059
I42
VSimpleName: visit
p29060
Vinsert
p29061
I43
VSimpleType: SQLNumberExpr
p29062
tp29063
I3
s(g4819
I42
g4820
Vinsert
p29064
I45
VStringLiteral: "\u005cnORDER BY i.relname"
p29065
tp29066
I1
s(g6079
I42
g6080
Vinsert
p29067
I45
VStringLiteral: "\u005cn\u005ctFROM ("
p29068
tp29069
I1
s(g5628
I42
g5629
Vinsert
p29070
I42
VSimpleName: functions
p29071
tp29072
I2
s(g2168
I42
g2169
Vinsert
p29073
I21
VExpressionStatement
p29074
tp29075
I2
s(g7141
I42
g7142
Vinsert
p29076
I42
VSimpleName: val
p29077
tp29078
I1
s(Vinsert
p29079
I42
VSimpleName: getName
p29080
Vinsert
p29081
I42
VSimpleName: SQLPropertyExpr
p29082
tp29083
I4
s(g14886
I42
g14887
Vinsert
p29084
I45
VStringLiteral: "\u005ct\u005ct\u005ctRAISE;\u005cn"
p29085
tp29086
I1
s(g4625
I42
g4626
Vinsert
p29087
I42
VSimpleName: MySqlExplainStatement
p29088
tp29089
I2
s(g7807
I42
g7808
Vinsert
p29090
I42
VSimpleName: List
p29091
tp29092
I14
s(g15793
I42
g15794
Vinsert
p29093
I39
VPrimitiveType: boolean
p29094
tp29095
I1
s(g1845
I42
g1846
Vinsert
p29096
I45
VStringLiteral: "\u005ctFROM dual;\u005cn"
p29097
tp29098
I1
s(g20827
I42
g20828
Vinsert
p29099
I42
VSimpleName: start
p29100
tp29101
I1
s(g9554
I42
g9555
Vinsert
p29102
I25
VIfStatement
p29103
tp29104
I2
s(g942
I42
g943
Vinsert
p29105
I42
VSimpleName: setUrl
p29106
tp29107
I7
s(g7039
I42
g7040
Vinsert
p29108
I45
VStringLiteral: "\u005cn\u005ctPARTITION SALES_Q4_2000 VALUES LESS THAN (MAXVALUE)"
p29109
tp29110
I2
s(Vinsert
p29111
I42
VSimpleName: parameterize
p29112
Vinsert
p29113
I45
VStringLiteral: "select id from t where id = 3 /*!30000union all select 2*/"
p29114
tp29115
I1
s(g14426
I42
g14427
Vinsert
p29116
I60
VVariableDeclarationStatement
p29117
tp29118
I2
s(g2755
I42
g2756
Vinsert
p29119
I45
VStringLiteral: "begin\u005cn"
p29120
tp29121
I1
s(g1175
I42
g1176
Vinsert
p29122
I45
VStringLiteral: "\u005ct\u005ct"
p29123
tp29124
I1
s(g2464
I42
g2465
Vinsert
p29125
I32
VMethodInvocation
p29126
tp29127
I2
s(Vinsert
p29128
I42
VSimpleName: equals
p29129
Vinsert
p29130
I43
VSimpleType: PGSelectBuilderImpl
p29131
tp29132
I2
s(g6429
I42
g6430
Vinsert
p29133
I44
VSingleVariableDeclaration
p29134
tp29135
I1
s(Vinsert
p29136
I42
VSimpleName: parseStatements
p29137
Vinsert
p29138
I42
VSimpleName: getDynamicSql
p29139
tp29140
I1
s(g7063
I42
g7064
Vinsert
p29141
I42
VSimpleName: sqlStat1
p29142
tp29143
I2
s(g3202
I42
g3203
Vinsert
p29144
I42
VSimpleName: i
p29145
tp29146
I18
s(g22812
I42
g22813
Vinsert
p29147
I22
VFieldAccess
p29148
tp29149
I9
s(g17199
I42
g17200
Vinsert
p29150
I7
VAssignment: =
p29151
tp29152
I2
s(g14904
I42
g14905
Vinsert
p29153
I54
VTryStatement
p29154
tp29155
I1
s(g22193
I42
g22194
Vinsert
p29156
I42
VSimpleName: schema
p29157
tp29158
I1
s(g15448
I42
g15449
Vinsert
p29159
I43
VSimpleType: BasicDataSource
p29160
tp29161
I1
s(g24072
I42
g24073
Vinsert
p29162
I42
VSimpleName: getQueryBlock
p29163
tp29164
I1
s(Vinsert
p29165
I42
VSimpleName: setUrl
p29166
Vinsert
p29167
I42
VSimpleName: test_0
p29168
tp29169
I2
s(g11365
I42
g11366
Vinsert
p29170
I42
VSimpleName: ucase
p29171
tp29172
I1
s(g206
I42
g207
Vinsert
p29173
I32
VMethodInvocation
p29174
tp29175
I2
s(g7888
I42
g7889
Vinsert
p29176
I60
VVariableDeclarationStatement
p29177
tp29178
I3
s(Vinsert
p29179
I42
VSimpleName: append
p29180
Vinsert
p29181
I42
VSimpleName: ref
p29182
tp29183
I1
s(g4452
I42
g4453
Vinsert
p29184
I42
VSimpleName: String
p29185
tp29186
I2
s(g9969
I42
g9970
Vinsert
p29187
I27
VInfixExpression: >
p29188
tp29189
I2
s(Vinsert
p29190
I42
VSimpleName: assertFalse
p29191
Vinsert
p29192
I42
VSimpleName: setSelectWhereAlwayTrueCheck
p29193
tp29194
I1
s(g13933
I42
g13934
Vinsert
p29195
I8
VBlock
p29196
tp29197
I1
s(g19077
I42
g19078
Vinsert
p29198
I52
VThisExpression
p29199
tp29200
I2
s(g627
I42
g628
Vinsert
p29201
I43
VSimpleType: String
p29202
tp29203
I13
s(g9519
I42
g9520
Vinsert
p29204
I32
VMethodInvocation
p29205
tp29206
I1
s(Vinsert
p29207
I42
VSimpleName: parameterize
p29208
Vinsert
p29209
I45
VStringLiteral: ", ?, ?, NULL, NULL, NULL\u005cn"
p29210
tp29211
I1
s(Vinsert
p29212
I42
VSimpleName: accept
p29213
Vinsert
p29214
I43
VSimpleType: SQLServerSchemaStatVisitor
p29215
tp29216
I10
s(g14834
I42
g14835
Vinsert
p29217
I43
VSimpleType: BeanFactoryAware
p29218
tp29219
I2
s(g7655
I42
g7656
Vinsert
p29220
I42
VSimpleName: setTestWhileIdle
p29221
tp29222
I1
s(g3307
I42
g3308
Vinsert
p29223
I42
VSimpleName: clazz
p29224
tp29225
I1
s(g5305
I42
g5306
Vinsert
p29226
I8
VBlock
p29227
tp29228
I5
s(g11845
I42
g11846
Vinsert
p29229
I45
VStringLiteral: "distinct "
p29230
tp29231
I1
s(g19307
I42
g19308
Vinsert
p29232
I45
VStringLiteral: " IGNORE DELETE TRIGGERS"
p29233
tp29234
I1
s(g7970
I42
g7971
Vinsert
p29235
I62
VInstanceofExpression
p29236
tp29237
I2
s(g8399
I42
g8400
Vinsert
p29238
I42
VSimpleName: test_1
p29239
tp29240
I1
s(g4409
I42
g4410
Vinsert
p29241
I25
VIfStatement
p29242
tp29243
I1
s(g1027
I42
g1028
Vinsert
p29244
I25
VIfStatement
p29245
tp29246
I1
s(g4620
I42
g4621
Vinsert
p29247
I21
VExpressionStatement
p29248
tp29249
I2
s(g1165
I42
g1166
Vinsert
p29250
I42
VSimpleName: parseTableSourceQueryTableExpr
p29251
tp29252
I1
s(g17564
I42
g17565
Vinsert
p29253
I42
VSimpleName: sp
p29254
tp29255
I4
s(g3027
I42
g3028
Vinsert
p29256
I45
VStringLiteral: "\u005c\u005c\u005c""
p29257
tp29258
I1
s(g11182
I42
g11183
Vinsert
p29259
I42
VSimpleName: incrementAndGetEffectRowCount
p29260
tp29261
I1
s(g11067
I42
g11068
Vinsert
p29262
I8
VBlock
p29263
tp29264
I7
s(g14702
I42
g14703
Vinsert
p29265
I7
VAssignment: =
p29266
tp29267
I2
s(g20210
I42
g20211
Vinsert
p29268
I44
VSingleVariableDeclaration
p29269
tp29270
I1
s(g7835
I42
g7836
Vinsert
p29271
I33
VNullLiteral
p29272
tp29273
I2
s(g1700
I42
g1701
Vinsert
p29274
I43
VSimpleType: WallConfig
p29275
tp29276
I2
s(g6450
I42
g6451
Vinsert
p29277
I59
VVariableDeclarationFragment
p29278
tp29279
I2
s(g3724
I42
g3725
Vinsert
p29280
I45
VStringLiteral: "STORAGE (\u005cn"
p29281
tp29282
I1
s(g3564
I42
g3565
Vinsert
p29283
I32
VMethodInvocation
p29284
tp29285
I3
s(g2029
I42
g2030
Vinsert
p29286
I42
VSimpleName: SQLIdentifierExpr
p29287
tp29288
I1
s(g6760
I42
g6761
Vinsert
p29289
I70
VEnhancedForStatement
p29290
tp29291
I1
s(g10869
I42
g10870
Vinsert
p29292
I42
VSimpleName: connectionLog
p29293
tp29294
I2
s(Vinsert
p29295
I42
VSimpleName: parameterize
p29296
Vinsert
p29297
I45
VStringLiteral: "select * from `user_0000` `user`"
p29298
tp29299
I1
s(Vinsert
p29300
I42
VSimpleName: getOrderBy
p29301
Vinsert
p29302
I42
VSimpleName: x
p29303
tp29304
I3
s(g6313
I42
g6314
Vinsert
p29305
I32
VMethodInvocation
p29306
tp29307
I3
s(g6162
I42
g6163
Vinsert
p29308
I42
VSimpleName: SQLName
p29309
tp29310
I51
s(g4399
I42
g4400
Vinsert
p29311
I42
VSimpleName: print
p29312
tp29313
I2
s(g13823
I42
g13824
Vinsert
p29314
I42
VSimpleName: statementList
p29315
tp29316
I32
s(g10459
I42
g10460
Vinsert
p29317
I11
VCastExpression
p29318
tp29319
I2
s(Vinsert
p29320
I42
VSimpleName: hashCode64
p29321
Vinsert
p29322
I42
VSimpleName: hash
p29323
tp29324
I1
s(g21424
I42
g21425
Vinsert
p29325
I42
VSimpleName: getRight
p29326
tp29327
I1
s(g532
I42
g533
Vinsert
p29328
I14
VClassInstanceCreation
p29329
tp29330
I1
s(g20382
I42
g20383
Vinsert
p29331
I3
VArrayCreation
p29332
tp29333
I1
s(Vinsert
p29334
I42
VSimpleName: name
p29335
Vinsert
p29336
I45
VStringLiteral: "SEQUENCE"
p29337
tp29338
I1
s(g8355
I42
g8356
Vinsert
p29339
I27
VInfixExpression: +
p29340
tp29341
I1
s(g4106
I42
g4107
Vinsert
p29342
I42
VSimpleName: stat
p29343
tp29344
I1
s(Vinsert
p29345
I42
VSimpleName: getDataSource
p29346
Vinsert
p29347
I18
VContinueStatement
p29348
tp29349
I1
s(Vinsert
p29350
I42
VSimpleName: setDriver
p29351
Vinsert
p29352
I7
VAssignment: =
p29353
tp29354
I2
s(g7394
I42
g7395
Vinsert
p29355
I42
VSimpleName: contains
p29356
tp29357
I1
s(g6938
I42
g6939
Vinsert
p29358
I14
VClassInstanceCreation
p29359
tp29360
I1
s(g2847
I42
g2848
Vinsert
p29361
I42
VSimpleName: x
p29362
tp29363
I4
s(g6318
I42
g6319
Vinsert
p29364
I42
VSimpleName: out
p29365
tp29366
I1
s(Vinsert
p29367
I42
VSimpleName: assertEquals
p29368
Vinsert
p29369
I45
VStringLiteral: "\u005cn\u005ctwhere tbek_code != ?)"
p29370
tp29371
I1
s(g21265
I42
g21266
Vinsert
p29372
I45
VStringLiteral: "x"
p29373
tp29374
I1
s(g10082
I42
g10083
Vinsert
p29375
I43
VSimpleType: TestCase
p29376
tp29377
I1
s(g8166
I42
g8167
Vinsert
p29378
I42
VSimpleName: strings
p29379
tp29380
I1
s(g2479
I42
g2480
Vinsert
p29381
I42
VSimpleName: setDbType
p29382
tp29383
I2
s(g19875
I42
g19876
Vinsert
p29384
I44
VSingleVariableDeclaration
p29385
tp29386
I1
s(g1425
I42
g1426
Vinsert
p29387
I83
VModifier: public
p29388
tp29389
I1
s(g4630
I42
g4631
Vinsert
p29390
I27
VInfixExpression: ==
p29391
tp29392
I1
s(Vinsert
p29393
I42
VSimpleName: visit
p29394
Vinsert
p29395
I42
VSimpleName: authPlugin
p29396
tp29397
I1
s(Vinsert
p29398
I42
VSimpleName: getSortedBy
p29399
Vinsert
p29400
I52
VThisExpression
p29401
tp29402
I1
s(g22774
I42
g22775
Vinsert
p29403
I83
VModifier: public
p29404
tp29405
I1
s(g1241
I42
g1242
Vinsert
p29406
I8
VBlock
p29407
tp29408
I1
s(g6010
I42
g6011
Vinsert
p29409
I45
VStringLiteral: "\u005cn\u005ct("
p29410
tp29411
I3
s(g2775
I42
g2776
Vinsert
p29412
I42
VSimpleName: startMillis
p29413
tp29414
I1
s(g1022
I42
g1023
Vinsert
p29415
I42
VSimpleName: JdbcXAConnection
p29416
tp29417
I1
s(g12518
I42
g12519
Vinsert
p29418
I42
VSimpleName: keys
p29419
tp29420
I1
s(g14266
I42
g14267
Vinsert
p29421
I8
VBlock
p29422
tp29423
I2
s(g4814
I42
g4815
Vinsert
p29424
I11
VCastExpression
p29425
tp29426
I2
s(g5404
I42
g5405
Vinsert
p29427
I42
VSimpleName: isKeepComments
p29428
tp29429
I1
s(Vinsert
p29430
I42
VSimpleName: currentThread
p29431
Vinsert
p29432
I42
VSimpleName: getContextClassLoader
p29433
tp29434
I1
s(Vinsert
p29435
I42
VSimpleName: assertEquals
p29436
Vinsert
p29437
I42
VSimpleName: NClobProxy
p29438
tp29439
I1
s(Vinsert
p29440
I42
VSimpleName: nameEquals
p29441
Vinsert
p29442
I40
VQualifiedName: SQLCommentStatement.Type.TABLE
p29443
tp29444
I1
s(g26553
I42
g26554
Vinsert
p29445
I42
VSimpleName: print
p29446
tp29447
I1
s(g11124
I42
g11125
Vinsert
p29448
I42
VSimpleName: String
p29449
tp29450
I1
s(g17580
I42
g17581
Vinsert
p29451
I42
VSimpleName: SQLExprTableSource
p29452
tp29453
I3
s(g3223
I42
g3224
Vinsert
p29454
I42
VSimpleName: parseSegmentAttributes
p29455
tp29456
I1
s(g1501
I42
g1502
Vinsert
p29457
I5
VArrayType: Object[]
p29458
tp29459
I1
s(g11469
I42
g11470
Vinsert
p29460
I42
VSimpleName: name
p29461
tp29462
I1
s(g11015
I42
g11016
Vinsert
p29463
I43
VSimpleType: MySqlSelectQueryBlock
p29464
tp29465
I2
s(g386
I42
g387
Vinsert
p29466
I60
VVariableDeclarationStatement
p29467
tp29468
I1
s(g1755
I42
g1756
Vinsert
p29469
I59
VVariableDeclarationFragment
p29470
tp29471
I147
s(g14431
I42
g14432
Vinsert
p29472
I42
VSimpleName: SQLUtils
p29473
tp29474
I6
s(Vinsert
p29475
I42
VSimpleName: groupBy
p29476
Vinsert
p29477
I45
VStringLiteral: "count(*) cnt"
p29478
tp29479
I1
s(g2765
I42
g2766
Vinsert
p29480
I45
VStringLiteral: "-id"
p29481
tp29482
I1
s(Vinsert
p29483
I42
VSimpleName: getLexer
p29484
Vinsert
p29485
I32
VMethodInvocation
p29486
tp29487
I10
s(Vinsert
p29488
I42
VSimpleName: get
p29489
Vinsert
p29490
I42
VSimpleName: uriStat
p29491
tp29492
I1
s(Vinsert
p29493
I42
VSimpleName: checkValid
p29494
Vinsert
p29495
I43
VSimpleType: PGWallProvider
p29496
tp29497
I2
s(g6429
I42
g6430
Vinsert
p29498
I21
VExpressionStatement
p29499
tp29500
I1
s(g5538
I42
g5539
Vinsert
p29501
I40
VQualifiedName: com.alibaba.druid.wall.WallTableStatValue
p29502
tp29503
I1
s(g1476
I42
g1477
Vinsert
p29504
I7
VAssignment: =
p29505
tp29506
I4
s(g18773
I42
g18774
Vinsert
p29507
I60
VVariableDeclarationStatement
p29508
tp29509
I4
s(g23725
I42
g23726
Vinsert
p29510
I42
VSimpleName: keyNow
p29511
tp29512
I4
s(g5450
I42
g5451
Vinsert
p29513
I42
VSimpleName: getStackTrace
p29514
tp29515
I2
s(g5872
I42
g5873
Vinsert
p29516
I8
VBlock
p29517
tp29518
I7
s(g29488
I42
g29489
Vinsert
p29519
I42
VSimpleName: WebSessionStat
p29520
tp29521
I1
s(Vinsert
p29522
I42
VSimpleName: toString
p29523
Vinsert
p29524
I42
VSimpleName: repository
p29525
tp29526
I1
s(g10829
I42
g10830
Vinsert
p29527
I32
VMethodInvocation
p29528
tp29529
I1
s(g10874
I42
g10875
Vinsert
p29530
I42
VSimpleName: out
p29531
tp29532
I3
s(g23867
I42
g23868
Vinsert
p29533
I42
VSimpleName: clone
p29534
tp29535
I17
s(g28515
I42
g28516
Vinsert
p29536
I42
VSimpleName: identifierEquals
p29537
tp29538
I4
s(g9195
I42
g9196
Vinsert
p29539
I45
VStringLiteral: "create table t(fid varchar(20))"
p29540
tp29541
I1
s(g14891
I42
g14892
Vinsert
p29542
I52
VThisExpression
p29543
tp29544
I3
s(g4093
I42
g4094
Vinsert
p29545
I9
VBooleanLiteral: false
p29546
tp29547
I1
s(g434
I42
g435
Vinsert
p29548
I34
VNumberLiteral: 20
p29549
tp29550
I1
s(g2982
I42
g2983
Vinsert
p29551
I42
VSimpleName: release
p29552
tp29553
I1
s(Vinsert
p29554
I42
VSimpleName: stringVal
p29555
Vinsert
p29556
I13
VCharacterLiteral: ' '
p29557
tp29558
I1
s(Vinsert
p29559
I42
VSimpleName: setParent
p29560
Vinsert
p29561
I42
VSimpleName: add
p29562
tp29563
I3
s(g1755
I42
g1756
Vinsert
p29564
I14
VClassInstanceCreation
p29565
tp29566
I120
s(Vinsert
p29567
I42
VSimpleName: prepareStatement
p29568
Vinsert
p29569
I43
VSimpleType: Connection
p29570
tp29571
I6
s(g21577
I42
g21578
Vinsert
p29572
I32
VMethodInvocation
p29573
tp29574
I14
s(g2140
I42
g2141
Vinsert
p29575
I42
VSimpleName: orderBy
p29576
tp29577
I9
s(g11365
I42
g11366
Vinsert
p29578
I25
VIfStatement
p29579
tp29580
I1
s(g1155
I42
g1156
Vinsert
p29581
I45
VStringLiteral: ","
p29582
tp29583
I1
s(g10765
I42
g10766
Vinsert
p29584
I42
VSimpleName: rightTableSource
p29585
tp29586
I1
s(g291
I42
g292
Vinsert
p29587
I27
VInfixExpression: !=
p29588
tp29589
I1
s(g4098
I42
g4099
Vinsert
p29590
I42
VSimpleName: stmtList
p29591
tp29592
I15
s(g2314
I42
g2315
Vinsert
p29593
I31
VMethodDeclaration
p29594
tp29595
I3
s(Vinsert
p29596
I42
VSimpleName: toSQLString
p29597
Vinsert
p29598
I42
VSimpleName: withTimeZone
p29599
tp29600
I1
s(g1032
I42
g1033
Vinsert
p29601
I42
VSimpleName: isNoSql
p29602
tp29603
I1
s(Vinsert
p29604
I42
VSimpleName: getYoungGC
p29605
Vinsert
p29606
I42
VSimpleName: getFullGC
p29607
tp29608
I1
s(g9949
I42
g9950
Vinsert
p29609
I36
VParenthesizedExpression
p29610
tp29611
I2
s(g972
I42
g973
Vinsert
p29612
I45
VStringLiteral: "\u005ct\u005c"SESSION_ID\u005c", \u005cn"
p29613
tp29614
I1
s(g14452
I42
g14453
Vinsert
p29615
I42
VSimpleName: Exception
p29616
tp29617
I7
s(g20215
I42
g20216
Vinsert
p29618
I42
VSimpleName: sessionBefore
p29619
tp29620
I4
s(g5772
I42
g5773
Vinsert
p29621
I42
VSimpleName: b2
p29622
tp29623
I1
s(g7720
I42
g7721
Vinsert
p29624
I42
VSimpleName: druidDataSourceStatStrategy
p29625
tp29626
I3
s(Vinsert
p29627
I42
VSimpleName: getAlias
p29628
Vinsert
p29629
I42
VSimpleName: left
p29630
tp29631
I1
s(g20500
I42
g20501
Vinsert
p29632
I42
VSimpleName: dataSource
p29633
tp29634
I2
s(g23242
I42
g23243
Vinsert
p29635
I27
VInfixExpression: !=
p29636
tp29637
I2
s(Vinsert
p29638
I42
VSimpleName: parseStatementList
p29639
Vinsert
p29640
I42
VSimpleName: MySqlShowOpenTablesStatement
p29641
tp29642
I2
s(g1835
I42
g1836
Vinsert
p29643
I60
VVariableDeclarationStatement
p29644
tp29645
I1
s(g20888
I42
g20889
Vinsert
p29646
I39
VPrimitiveType: long
p29647
tp29648
I2
s(g3228
I42
g3229
Vinsert
p29649
I42
VSimpleName: Override
p29650
tp29651
I2
s(g20626
I42
g20627
Vinsert
p29652
I27
VInfixExpression: ==
p29653
tp29654
I1
s(g8643
I42
g8644
Vinsert
p29655
I42
VSimpleName: nextToken
p29656
tp29657
I1
s(Vinsert
p29658
I42
VSimpleName: name
p29659
Vinsert
p29660
I42
VSimpleName: SQLName
p29661
tp29662
I19
s(g6597
I42
g6598
Vinsert
p29663
I14
VClassInstanceCreation
p29664
tp29665
I2
s(g26739
I42
g26740
Vinsert
p29666
I43
VSimpleType: StringBuilder
p29667
tp29668
I2
s(g9332
I42
g9333
Vinsert
p29669
I42
VSimpleName: result
p29670
tp29671
I3
s(Vinsert
p29672
I42
VSimpleName: getStatement
p29673
Vinsert
p29674
I43
VSimpleType: MySqlCreateTableStatement
p29675
tp29676
I2
s(g3452
I42
g3453
Vinsert
p29677
I32
VMethodInvocation
p29678
tp29679
I9
s(g9340
I42
g9341
Vinsert
p29680
I42
VSimpleName: cloneTo
p29681
tp29682
I1
s(g341
I42
g342
Vinsert
p29683
I7
VAssignment: =
p29684
tp29685
I3
s(Vinsert
p29686
I42
VSimpleName: setParent
p29687
Vinsert
p29688
I42
VSimpleName: groupBy
p29689
tp29690
I1
s(g6786
I42
g6787
Vinsert
p29691
I45
VStringLiteral: " "
p29692
tp29693
I1
s(g13061
I42
g13062
Vinsert
p29694
I45
VStringLiteral: "\u005ctAND `buyer_resource`.`seller_id` = ?\u005cn"
p29695
tp29696
I1
s(g1627
I42
g1628
Vinsert
p29697
I42
VSimpleName: String
p29698
tp29699
I6
s(g4926
I42
g4927
Vinsert
p29700
I42
VSimpleName: eventListener
p29701
tp29702
I1
s(g11845
I42
g11846
Vinsert
p29703
I40
VQualifiedName: SQLSetQuantifier.UNIQUE
p29704
tp29705
I2
s(g3714
I42
g3715
Vinsert
p29706
I14
VClassInstanceCreation
p29707
tp29708
I1
s(g6503
I42
g6504
Vinsert
p29709
I42
VSimpleName: Update
p29710
tp29711
I1
s(g2314
I42
g2315
Vinsert
p29712
I42
VSimpleName: MappingVisitorUtils
p29713
tp29714
I3
s(g28138
I42
g28139
Vinsert
p29715
I42
VSimpleName: hint
p29716
tp29717
I4
s(Vinsert
p29718
I42
VSimpleName: toSQLString
p29719
Vinsert
p29720
I45
VStringLiteral: "\u005cnLOGGING"
p29721
tp29722
I5
s(g801
I42
g802
Vinsert
p29723
I42
VSimpleName: slowParameters
p29724
tp29725
I1
s(g25063
I42
g25064
Vinsert
p29726
I42
VSimpleName: setValue
p29727
tp29728
I2
s(g2039
I42
g2040
Vinsert
p29729
I42
VSimpleName: jdbcUrl
p29730
tp29731
I1
s(g10480
I42
g10481
Vinsert
p29732
I32
VMethodInvocation
p29733
tp29734
I3
s(g7642
I42
g7643
Vinsert
p29735
I42
VSimpleName: toChar
p29736
tp29737
I1
s(g391
I42
g392
Vinsert
p29738
I42
VSimpleName: visit
p29739
tp29740
I1
s(Vinsert
p29741
I42
VSimpleName: output
p29742
Vinsert
p29743
I78
VMarkerAnnotation
p29744
tp29745
I3
s(g16653
I42
g16654
Vinsert
p29746
I40
VQualifiedName: SearchModifier.IN_BOOLEAN_MODE
p29747
tp29748
I1
s(g19888
I42
g19889
Vinsert
p29749
I32
VMethodInvocation
p29750
tp29751
I4
s(g3035
I42
g3036
Vinsert
p29752
I8
VBlock
p29753
tp29754
I1
s(g1612
I42
g1613
Vinsert
p29755
I42
VSimpleName: parenthesized
p29756
tp29757
I2
s(g19077
I42
g19078
Vinsert
p29758
I43
VSimpleType: ConnectionHolder
p29759
tp29760
I2
s(g2469
I42
g2470
Vinsert
p29761
I25
VIfStatement
p29762
tp29763
I2
s(g20382
I42
g20383
Vinsert
p29764
I32
VMethodInvocation
p29765
tp29766
I1
s(Vinsert
p29767
I42
VSimpleName: nextToken
p29768
Vinsert
p29769
I42
VSimpleName: array
p29770
tp29771
I2
s(g10449
I42
g10450
Vinsert
p29772
I13
VCharacterLiteral: '?'
p29773
tp29774
I5
s(g2193
I42
g2194
Vinsert
p29775
I21
VExpressionStatement
p29776
tp29777
I13
s(g4323
I42
g4324
Vinsert
p29778
I53
VThrowStatement
p29779
tp29780
I2
s(g2930
I42
g2931
Vinsert
p29781
I16
VConditionalExpression
p29782
tp29783
I1
s(g2398
I42
g2399
Vinsert
p29784
I42
VSimpleName: data
p29785
tp29786
I2
s(g6313
I42
g6314
Vinsert
p29787
I40
VQualifiedName: Token.EXISTS
p29788
tp29789
I1
s(g2925
I42
g2926
Vinsert
p29790
I42
VSimpleName: scanChar
p29791
tp29792
I2
s(Vinsert
p29793
I42
VSimpleName: createIfNotExists
p29794
Vinsert
p29795
I54
VTryStatement
p29796
tp29797
I1
s(g8653
I42
g8654
Vinsert
p29798
I31
VMethodDeclaration
p29799
tp29800
I1
s(g12586
I42
g12587
Vinsert
p29801
I42
VSimpleName: SQLScriptCommitStatement
p29802
tp29803
I1
s(g26260
I42
g26261
Vinsert
p29804
I42
VSimpleName: print
p29805
tp29806
I3
s(g12034
I42
g12035
Vinsert
p29807
I23
VFieldDeclaration
p29808
tp29809
I1
s(g2862
I42
g2863
Vinsert
p29810
I40
VQualifiedName: Token.FROM
p29811
tp29812
I6
s(Vinsert
p29813
I42
VSimpleName: getStatements
p29814
Vinsert
p29815
I27
VInfixExpression: <
p29816
tp29817
I1
s(g3836
I42
g3837
Vinsert
p29818
I32
VMethodInvocation
p29819
tp29820
I2
s(g26722
I42
g26723
Vinsert
p29821
I42
VSimpleName: getSetClause
p29822
tp29823
I1
s(g10116
I42
g10117
Vinsert
p29824
I32
VMethodInvocation
p29825
tp29826
I2
s(g4661
I42
g4662
Vinsert
p29827
I21
VExpressionStatement
p29828
tp29829
I1
s(g6630
I42
g6631
Vinsert
p29830
I8
VBlock
p29831
tp29832
I3
s(g2372
I42
g2373
Vinsert
p29833
I25
VIfStatement
p29834
tp29835
I1
s(g5974
I42
g5975
Vinsert
p29836
I8
VBlock
p29837
tp29838
I1
s(Vinsert
p29839
I42
VSimpleName: setErrorEnabled
p29840
Vinsert
p29841
I27
VInfixExpression: !=
p29842
tp29843
I1
s(Vinsert
p29844
I42
VSimpleName: isTestOnReturn
p29845
Vinsert
p29846
I42
VSimpleName: dataSource
p29847
tp29848
I2
s(g331
I42
g332
Vinsert
p29849
I21
VExpressionStatement
p29850
tp29851
I2
s(g6152
I42
g6153
Vinsert
p29852
I52
VThisExpression
p29853
tp29854
I3
s(g14088
I42
g14089
Vinsert
p29855
I42
VSimpleName: directCreateCount
p29856
tp29857
I1
s(Vinsert
p29858
I42
VSimpleName: newUpdater
p29859
Vinsert
p29860
I45
VStringLiteral: "deleteDataCount_100_1000"
p29861
tp29862
I1
s(g16367
I42
g16368
Vinsert
p29863
I40
VQualifiedName: MethodType.M1
p29864
tp29865
I1
s(g16248
I42
g16249
Vinsert
p29866
I40
VQualifiedName: JdbcUtils.ORACLE
p29867
tp29868
I5
s(g23481
I42
g23482
Vinsert
p29869
I8
VBlock
p29870
tp29871
I1
s(g1027
I42
g1028
Vinsert
p29872
I21
VExpressionStatement
p29873
tp29874
I1
s(g22115
I42
g22116
Vinsert
p29875
I34
VNumberLiteral: 300
p29876
tp29877
I1
s(g14361
I42
g14362
Vinsert
p29878
I31
VMethodDeclaration
p29879
tp29880
I9
s(g27853
I42
g27854
Vinsert
p29881
I43
VSimpleType: SQLTableSource
p29882
tp29883
I3
s(g9041
I42
g9042
Vinsert
p29884
I21
VExpressionStatement
p29885
tp29886
I10
s(g2538
I42
g2539
Vinsert
p29887
I42
VSimpleName: chain
p29888
tp29889
I2
s(g5887
I42
g5888
Vinsert
p29890
I36
VParenthesizedExpression
p29891
tp29892
I1
s(g8399
I42
g8400
Vinsert
p29893
I42
VSimpleName: WallUtils
p29894
tp29895
I1
s(g19435
I42
g19436
Vinsert
p29896
I42
VSimpleName: getLeft
p29897
tp29898
I1
s(g21686
I42
g21687
Vinsert
p29899
I42
VSimpleName: isWritable
p29900
tp29901
I1
s(g22038
I42
g22039
Vinsert
p29902
I45
VStringLiteral: "? * ?"
p29903
tp29904
I1
s(Vinsert
p29905
I42
VSimpleName: nextToken
p29906
Vinsert
p29907
I40
VQualifiedName: Token.WITH
p29908
tp29909
I2
s(g5926
I42
g5927
Vinsert
p29910
I42
VSimpleName: nodeInfo
p29911
tp29912
I2
s(g6328
I42
g6329
Vinsert
p29913
I42
VSimpleName: NoSuchMethodError
p29914
tp29915
I1
s(g4615
I42
g4616
Vinsert
p29916
I42
VSimpleName: token
p29917
tp29918
I1
s(g20320
I42
g20321
Vinsert
p29919
I42
VSimpleName: value
p29920
tp29921
I1
s(g16512
I42
g16513
Vinsert
p29922
I42
VSimpleName: in
p29923
tp29924
I1
s(g20811
I42
g20812
Vinsert
p29925
I42
VSimpleName: SQLException
p29926
tp29927
I3
s(Vinsert
p29928
I42
VSimpleName: token
p29929
Vinsert
p29930
I42
VSimpleName: MySqlShowProcedureStatusStatement
p29931
tp29932
I2
s(g12888
I42
g12889
Vinsert
p29933
I42
VSimpleName: column
p29934
tp29935
I2
s(g23603
I42
g23604
Vinsert
p29936
I42
VSimpleName: List
p29937
tp29938
I1
s(g26573
I42
g26574
Vinsert
p29939
I43
VSimpleType: DB2ValuesStatement
p29940
tp29941
I1
s(g1420
I42
g1421
Vinsert
p29942
I42
VSimpleName: dbType
p29943
tp29944
I2
s(g10209
I42
g10210
Vinsert
p29945
I40
VQualifiedName: statValue.sqlList
p29946
tp29947
I1
s(g6997
I42
g6998
Vinsert
p29948
I42
VSimpleName: stmts
p29949
tp29950
I1
s(g10687
I42
g10688
Vinsert
p29951
I33
VNullLiteral
p29952
tp29953
I1
s(g22551
I42
g22552
Vinsert
p29954
I45
VStringLiteral: ")"
p29955
tp29956
I4
s(g22986
I42
g22987
Vinsert
p29957
I43
VSimpleType: DruidDataSource
p29958
tp29959
I1
s(g14985
I42
g14986
Vinsert
p29960
I8
VBlock
p29961
tp29962
I1
s(g13374
I42
g13375
Vinsert
p29963
I42
VSimpleName: setLeft
p29964
tp29965
I1
s(Vinsert
p29966
I42
VSimpleName: setOffset
p29967
Vinsert
p29968
I42
VSimpleName: expr
p29969
tp29970
I2
s(g11469
I42
g11470
Vinsert
p29971
I42
VSimpleName: cursorName
p29972
tp29973
I1
s(g8643
I42
g8644
Vinsert
p29974
I43
VSimpleType: SQLExpr
p29975
tp29976
I1
s(g21982
I42
g21983
Vinsert
p29977
I45
VStringLiteral: "DATE '"
p29978
tp29979
I1
s(g12427
I42
g12428
Vinsert
p29980
I40
VQualifiedName: com.alibaba.druid.sql.dialect.sqlserver.ast.SQLServerTop
p29981
tp29982
I1
s(g24649
I42
g24650
Vinsert
p29983
I42
VSimpleName: print
p29984
tp29985
I1
s(g2604
I42
g2605
Vinsert
p29986
I42
VSimpleName: String
p29987
tp29988
I2
s(g8269
I42
g8270
Vinsert
p29989
I83
VModifier: final
p29990
tp29991
I1
s(g6429
I42
g6430
Vinsert
p29992
I8
VBlock
p29993
tp29994
I1
s(g10016
I42
g10017
Vinsert
p29995
I42
VSimpleName: get
p29996
tp29997
I1
s(g4323
I42
g4324
Vinsert
p29998
I43
VSimpleType: XAResource
p29999
tp30000
I2
s(Vinsert
p30001
I42
VSimpleName: accept
p30002
Vinsert
p30003
I42
VSimpleName: SQLAlterTableItem
p30004
tp30005
I1
s(g14244
I42
g14245
Vinsert
p30006
I32
VMethodInvocation
p30007
tp30008
I7
s(g21778
I42
g21779
Vinsert
p30009
I39
VPrimitiveType: void
p30010
tp30011
I1
s(Vinsert
p30012
I42
VSimpleName: assertNotNull
p30013
Vinsert
p30014
I42
VSimpleName: SQLXML
p30015
tp30016
I1
s(g301
I42
g302
Vinsert
p30017
I45
VStringLiteral: "select *\u005cn"
p30018
tp30019
I1
s(g464
I42
g465
Vinsert
p30020
I42
VSimpleName: top
p30021
tp30022
I1
s(Vinsert
p30023
I42
VSimpleName: currentTimeMillis
p30024
Vinsert
p30025
I42
VSimpleName: seconds
p30026
tp30027
I1
s(g22038
I42
g22039
Vinsert
p30028
I42
VSimpleName: SQLEvalVisitorUtils
p30029
tp30030
I6
s(Vinsert
p30031
I42
VSimpleName: getClass
p30032
Vinsert
p30033
I42
VSimpleName: jdbcSqlStat
p30034
tp30035
I2
s(g2900
I42
g2901
Vinsert
p30036
I43
VSimpleType: StackTraceElement
p30037
tp30038
I1
s(g14343
I42
g14344
Vinsert
p30039
I34
VNumberLiteral: 10
p30040
tp30041
I1
s(g17369
I42
g17370
Vinsert
p30042
I45
VStringLiteral: "-- xxx"
p30043
tp30044
I3
s(g23210
I42
g23211
Vinsert
p30045
I45
VStringLiteral: "\u005cn WHERE a.ds=20150819 and b.ds=20150819;"
p30046
tp30047
I1
s(g14295
I42
g14296
Vinsert
p30048
I40
VQualifiedName: Token.LPAREN
p30049
tp30050
I1
s(g27722
I42
g27723
Vinsert
p30051
I59
VVariableDeclarationFragment
p30052
tp30053
I1
s(g8098
I42
g8099
Vinsert
p30054
I43
VSimpleType: HttpSession
p30055
tp30056
I1
s(g2289
I42
g2290
Vinsert
p30057
I27
VInfixExpression: !=
p30058
tp30059
I1
s(Vinsert
p30060
I42
VSimpleName: copyOf
p30061
Vinsert
p30062
I40
VQualifiedName: buf.length
p30063
tp30064
I1
s(Vinsert
p30065
I42
VSimpleName: nextToken
p30066
Vinsert
p30067
I42
VSimpleName: SQLSelectQuery
p30068
tp30069
I1
s(g17739
I42
g17740
Vinsert
p30070
I42
VSimpleName: cache
p30071
tp30072
I1
s(g25022
I42
g25023
Vinsert
p30073
I42
VSimpleName: schemaObject
p30074
tp30075
I2
s(g5859
I42
g5860
Vinsert
p30076
I44
VSingleVariableDeclaration
p30077
tp30078
I1
s(g7537
I42
g7538
Vinsert
p30079
I43
VSimpleType: SQLException
p30080
tp30081
I1
s(g17066
I42
g17067
Vinsert
p30082
I39
VPrimitiveType: int
p30083
tp30084
I2
s(g21908
I42
g21909
Vinsert
p30085
I45
VStringLiteral: "\u005cn\u005ctID NUMERIC not null,"
p30086
tp30087
I1
s(g20411
I42
g20412
Vinsert
p30088
I42
VSimpleName: x
p30089
tp30090
I2
s(g19139
I42
g19140
Vinsert
p30091
I42
VSimpleName: WallSqlStat
p30092
tp30093
I1
s(Vinsert
p30094
I42
VSimpleName: accept
p30095
Vinsert
p30096
I42
VSimpleName: match
p30097
tp30098
I2
s(g14026
I42
g14027
Vinsert
p30099
I14
VClassInstanceCreation
p30100
tp30101
I4
s(g5813
I42
g5814
Vinsert
p30102
I78
VMarkerAnnotation
p30103
tp30104
I2
s(Vinsert
p30105
I42
VSimpleName: setGlobal
p30106
Vinsert
p30107
I42
VSimpleName: dataSourceStat
p30108
tp30109
I1
s(g4088
I42
g4089
Vinsert
p30110
I60
VVariableDeclarationStatement
p30111
tp30112
I1
s(Vinsert
p30113
I42
VSimpleName: identifierEquals
p30114
Vinsert
p30115
I45
VStringLiteral: "DEBUG"
p30116
tp30117
I1
s(Vinsert
p30118
I42
VSimpleName: createSchemaStatVisitor
p30119
Vinsert
p30120
I42
VSimpleName: dbType
p30121
tp30122
I2
s(g3495
I42
g3496
Vinsert
p30123
I40
VQualifiedName: Token.AS
p30124
tp30125
I1
s(g22848
I42
g22849
Vinsert
p30126
I43
VSimpleType: Clob
p30127
tp30128
I1
s(g3243
I42
g3244
Vinsert
p30129
I32
VMethodInvocation
p30130
tp30131
I4
s(g6650
I42
g6651
Vinsert
p30132
I33
VNullLiteral
p30133
tp30134
I1
s(g14640
I42
g14641
Vinsert
p30135
I42
VSimpleName: Exception
p30136
tp30137
I1
s(g9163
I42
g9164
Vinsert
p30138
I42
VSimpleName: Override
p30139
tp30140
I1
s(Vinsert
p30141
I42
VSimpleName: assertEquals
p30142
Vinsert
p30143
I42
VSimpleName: callableStatement_getObject
p30144
tp30145
I1
s(g4045
I42
g4046
Vinsert
p30146
I59
VVariableDeclarationFragment
p30147
tp30148
I1
s(g957
I42
g958
Vinsert
p30149
I33
VNullLiteral
p30150
tp30151
I1
s(Vinsert
p30152
I42
VSimpleName: accept0
p30153
Vinsert
p30154
I42
VSimpleName: pivot
p30155
tp30156
I1
s(g743
I42
g744
Vinsert
p30157
I45
VStringLiteral: "updateCount_10_100"
p30158
tp30159
I1
s(g3780
I42
g3781
Vinsert
p30160
I42
VSimpleName: Assert
p30161
tp30162
I49
s(g17539
I42
g17540
Vinsert
p30163
I43
VSimpleType: String
p30164
tp30165
I103
s(g3002
I42
g3003
Vinsert
p30166
I42
VSimpleName: setTo
p30167
tp30168
I1
s(g22538
I42
g22539
Vinsert
p30169
I42
VSimpleName: getItems
p30170
tp30171
I1
s(g17723
I42
g17724
Vinsert
p30172
I27
VInfixExpression: !=
p30173
tp30174
I2
s(g21084
I42
g21085
Vinsert
p30175
I32
VMethodInvocation
p30176
tp30177
I1
s(g5287
I42
g5288
Vinsert
p30178
I8
VBlock
p30179
tp30180
I295
s(g7320
I42
g7321
Vinsert
p30181
I62
VInstanceofExpression
p30182
tp30183
I1
s(Vinsert
p30184
I42
VSimpleName: setOffset
p30185
Vinsert
p30186
I43
VSimpleType: PGLimit
p30187
tp30188
I5
s(g5465
I42
g5466
Vinsert
p30189
I44
VSingleVariableDeclaration
p30190
tp30191
I1
s(g2525
I42
g2526
Vinsert
p30192
I32
VMethodInvocation
p30193
tp30194
I77
s(g12560
I42
g12561
Vinsert
p30195
I27
VInfixExpression: ==
p30196
tp30197
I1
s(g8721
I42
g8722
Vinsert
p30198
I42
VSimpleName: getParameter
p30199
tp30200
I1
s(Vinsert
p30201
I42
VSimpleName: accept
p30202
Vinsert
p30203
I45
VStringLiteral: " LIKE "
p30204
tp30205
I1
s(g10074
I42
g10075
Vinsert
p30206
I21
VExpressionStatement
p30207
tp30208
I3
s(Vinsert
p30209
I42
VSimpleName: println
p30210
Vinsert
p30211
I43
VSimpleType: NumberFormatException
p30212
tp30213
I1
s(g13239
I42
g13240
Vinsert
p30214
I40
VQualifiedName: com.alibaba.druid.stat.JdbcDataSourceStat
p30215
tp30216
I2
s(g5097
I42
g5098
Vinsert
p30217
I42
VSimpleName: maxIdle
p30218
tp30219
I1
s(g13643
I42
g13644
Vinsert
p30220
I43
VSimpleType: Exception
p30221
tp30222
I1
s(g12077
I42
g12078
Vinsert
p30223
I32
VMethodInvocation
p30224
tp30225
I1
s(g23761
I42
g23762
Vinsert
p30226
I60
VVariableDeclarationStatement
p30227
tp30228
I1
s(Vinsert
p30229
I42
VSimpleName: isSharePreparedStatements
p30230
Vinsert
p30231
I42
VSimpleName: isUnderlyingAutoCommit
p30232
tp30233
I1
s(g15087
I42
g15088
Vinsert
p30234
I60
VVariableDeclarationStatement
p30235
tp30236
I1
s(g13395
I42
g13396
Vinsert
p30237
I42
VSimpleName: b
p30238
tp30239
I1
s(g12055
I42
g12056
Vinsert
p30240
I25
VIfStatement
p30241
tp30242
I1
s(g19242
I42
g19243
Vinsert
p30243
I40
VQualifiedName: that.autoGeneratedKeys
p30244
tp30245
I1
s(g5818
I42
g5819
Vinsert
p30246
I8
VBlock
p30247
tp30248
I1
s(g4339
I42
g4340
Vinsert
p30249
I42
VSimpleName: SQLBlockStatement
p30250
tp30251
I1
s(Vinsert
p30252
I42
VSimpleName: start
p30253
Vinsert
p30254
I42
VSimpleName: server
p30255
tp30256
I4
s(Vinsert
p30257
I42
VSimpleName: assertEquals
p30258
Vinsert
p30259
I42
VSimpleName: EvalMethodTest_left
p30260
tp30261
I1
s(g17647
I42
g17648
Vinsert
p30262
I42
VSimpleName: test_distribute_by_2
p30263
tp30264
I1
s(Vinsert
p30265
I42
VSimpleName: assertEquals
p30266
Vinsert
p30267
I45
VStringLiteral: "\u005cnset yyy=123;"
p30268
tp30269
I1
s(g25675
I42
g25676
Vinsert
p30270
I27
VInfixExpression: ==
p30271
tp30272
I1
s(g11706
I42
g11707
Vinsert
p30273
I60
VVariableDeclarationStatement
p30274
tp30275
I1
s(g9554
I42
g9555
Vinsert
p30276
I45
VStringLiteral: "Windows NT 6.2"
p30277
tp30278
I1
s(g5661
I42
g5662
Vinsert
p30279
I42
VSimpleName: params
p30280
tp30281
I1
s(g20342
I42
g20343
Vinsert
p30282
I45
VStringLiteral: "where loan.LOAN_OD_IND='Y' and loan.LOAN_STS='ACTV'"
p30283
tp30284
I1
s(g4770
I42
g4771
Vinsert
p30285
I43
VSimpleType: SQLUpdateSetItem
p30286
tp30287
I1
s(g8391
I42
g8392
Vinsert
p30288
I42
VSimpleName: Exception
p30289
tp30290
I5
s(g5892
I42
g5893
Vinsert
p30291
I59
VVariableDeclarationFragment
p30292
tp30293
I2
s(Vinsert
p30294
I42
VSimpleName: next
p30295
Vinsert
p30296
I43
VSimpleType: ResultSet
p30297
tp30298
I3
s(g23242
I42
g23243
Vinsert
p30299
I42
VSimpleName: x
p30300
tp30301
I4
s(g532
I42
g533
Vinsert
p30302
I42
VSimpleName: x
p30303
tp30304
I1
s(g3939
I42
g3940
Vinsert
p30305
I42
VSimpleName: test_abs_error
p30306
tp30307
I1
s(Vinsert
p30308
I42
VSimpleName: get
p30309
Vinsert
p30310
I43
VSimpleType: MySqlSchemaStatVisitor
p30311
tp30312
I4
s(g1720
I42
g1721
Vinsert
p30313
I45
VStringLiteral: "select * from "
p30314
tp30315
I1
s(g5792
I42
g5793
Vinsert
p30316
I70
VEnhancedForStatement
p30317
tp30318
I1
s(g23886
I42
g23887
Vinsert
p30319
I42
VSimpleName: withReadOnly
p30320
tp30321
I2
s(Vinsert
p30322
I42
VSimpleName: stringVal
p30323
Vinsert
p30324
I45
VStringLiteral: "TODO : "
p30325
tp30326
I3
s(g30209
I42
g30210
Vinsert
p30327
I45
VStringLiteral: "vmid argument is not a integer!"
p30328
tp30329
I1
s(g2183
I42
g2184
Vinsert
p30330
I42
VSimpleName: incount
p30331
tp30332
I1
s(g27757
I42
g27758
Vinsert
p30333
I14
VClassInstanceCreation
p30334
tp30335
I1
s(Vinsert
p30336
I42
VSimpleName: newUpdater
p30337
Vinsert
p30338
I43
VSimpleType: ProfileEntryStat
p30339
tp30340
I1
s(Vinsert
p30341
I42
VSimpleName: writeLock
p30342
Vinsert
p30343
I27
VInfixExpression: !=
p30344
tp30345
I1
s(g10911
I42
g10912
Vinsert
p30346
I40
VQualifiedName: TableStat.Name
p30347
tp30348
I1
s(g19207
I42
g19208
Vinsert
p30349
I83
VModifier: private
p30350
tp30351
I2
s(g14881
I42
g14882
Vinsert
p30352
I42
VSimpleName: interval
p30353
tp30354
I1
s(g1304
I42
g1305
Vinsert
p30355
I32
VMethodInvocation
p30356
tp30357
I1
s(g7176
I42
g7177
Vinsert
p30358
I21
VExpressionStatement
p30359
tp30360
I1
s(g3598
I42
g3599
Vinsert
p30361
I32
VMethodInvocation
p30362
tp30363
I2
s(Vinsert
p30364
I42
VSimpleName: assertEquals
p30365
Vinsert
p30366
I45
VStringLiteral: "\u005cn;"
p30367
tp30368
I1
s(g4834
I42
g4835
Vinsert
p30369
I8
VBlock
p30370
tp30371
I4
s(g9929
I42
g9930
Vinsert
p30372
I42
VSimpleName: SQLParseException
p30373
tp30374
I2
s(Vinsert
p30375
I42
VSimpleName: printStackTrace
p30376
Vinsert
p30377
I42
VSimpleName: logWriter
p30378
tp30379
I1
s(g18016
I42
g18017
Vinsert
p30380
I42
VSimpleName: filters
p30381
tp30382
I4
s(g4165
I42
g4166
Vinsert
p30383
I42
VSimpleName: validateQuery
p30384
tp30385
I2
s(g2258
I42
g2259
Vinsert
p30386
I42
VSimpleName: PreparedStatementProxy
p30387
tp30388
I1
s(g7642
I42
g7643
Vinsert
p30389
I42
VSimpleName: queryBlock
p30390
tp30391
I2
s(g12721
I42
g12722
Vinsert
p30392
I42
VSimpleName: of
p30393
tp30394
I1
s(g14730
I42
g14731
Vinsert
p30395
I43
VSimpleType: IOException
p30396
tp30397
I1
s(Vinsert
p30398
I42
VSimpleName: nameEquals
p30399
Vinsert
p30400
I52
VThisExpression
p30401
tp30402
I3
s(g4462
I42
g4463
Vinsert
p30403
I42
VSimpleName: builtInFunctions
p30404
tp30405
I3
s(g4050
I42
g4051
Vinsert
p30406
I42
VSimpleName: x
p30407
tp30408
I31
s(g12812
I42
g12813
Vinsert
p30409
I76
VWildcardType: ?
p30410
tp30411
I1
s(g2372
I42
g2373
Vinsert
p30412
I52
VThisExpression
p30413
tp30414
I1
s(g4635
I42
g4636
Vinsert
p30415
I32
VMethodInvocation
p30416
tp30417
I5
s(Vinsert
p30418
I42
VSimpleName: getMaxRowSize
p30419
Vinsert
p30420
I8
VBlock
p30421
tp30422
I1
s(g21572
I42
g21573
Vinsert
p30423
I83
VModifier: public
p30424
tp30425
I1
s(g25834
I42
g25835
Vinsert
p30426
I25
VIfStatement
p30427
tp30428
I3
s(Vinsert
p30429
I42
VSimpleName: setName
p30430
Vinsert
p30431
I42
VSimpleName: accept
p30432
tp30433
I3
s(g861
I42
g862
Vinsert
p30434
I42
VSimpleName: setLeft
p30435
tp30436
I1
s(Vinsert
p30437
I42
VSimpleName: stringVal
p30438
Vinsert
p30439
I42
VSimpleName: nextToken
p30440
tp30441
I11
s(g14484
I42
g14485
Vinsert
p30442
I43
VSimpleType: ParameterizedVisitor
p30443
tp30444
I1
s(g11816
I42
g11817
Vinsert
p30445
I45
VStringLiteral: "select last_name\u005cn"
p30446
tp30447
I1
s(g5030
I42
g5031
Vinsert
p30448
I14
VClassInstanceCreation
p30449
tp30450
I4
s(g41
I42
g42
Vinsert
p30451
I9
VBooleanLiteral: false
p30452
tp30453
I1
s(g24067
I42
g24068
Vinsert
p30454
I43
VSimpleType: PGParameter
p30455
tp30456
I2
s(Vinsert
p30457
I42
VSimpleName: assertTrue
p30458
Vinsert
p30459
I45
VStringLiteral: "parts"
p30460
tp30461
I1
s(g27744
I42
g27745
Vinsert
p30462
I45
VStringLiteral: "\u005cn\u005ct\u005ctLIMIT 1"
p30463
tp30464
I1
s(Vinsert
p30465
I42
VSimpleName: assertEquals
p30466
Vinsert
p30467
I45
VStringLiteral: "\u005cn\u005ctREBUILD PARTITION p1"
p30468
tp30469
I1
s(g12781
I42
g12782
Vinsert
p30470
I42
VSimpleName: TestUtils
p30471
tp30472
I2
s(g9340
I42
g9341
Vinsert
p30473
I44
VSingleVariableDeclaration
p30474
tp30475
I5
s(g5729
I42
g5730
Vinsert
p30476
I42
VSimpleName: setParent
p30477
tp30478
I1
s(g2624
I42
g2625
Vinsert
p30479
I52
VThisExpression
p30480
tp30481
I2
s(g5200
I42
g5201
Vinsert
p30482
I25
VIfStatement
p30483
tp30484
I1
s(g5762
I42
g5763
Vinsert
p30485
I42
VSimpleName: DruidAbstractDataSource
p30486
tp30487
I4
s(g27708
I42
g27709
Vinsert
p30488
I83
VModifier: public
p30489
tp30490
I2
s(Vinsert
p30491
I42
VSimpleName: startsWith
p30492
Vinsert
p30493
I45
VStringLiteral: "jdbc:wrap-jdbc:filters=default:name=com.alibaba.dragoon.master:jdbc:mysql:"
p30494
tp30495
I1
s(Vinsert
p30496
I42
VSimpleName: token
p30497
Vinsert
p30498
I45
VStringLiteral: "syntax error : "
p30499
tp30500
I1
s(g7932
I42
g7933
Vinsert
p30501
I60
VVariableDeclarationStatement
p30502
tp30503
I3
s(g1840
I42
g1841
Vinsert
p30504
I42
VSimpleName: BigDecimal
p30505
tp30506
I2
s(Vinsert
p30507
I42
VSimpleName: setExpr
p30508
Vinsert
p30509
I48
VSuperMethodInvocation
p30510
tp30511
I1
s(g15010
I42
g15011
Vinsert
p30512
I42
VSimpleName: setCheckoutTimeout
p30513
tp30514
I1
s(g18512
I42
g18513
Vinsert
p30515
I42
VSimpleName: SQLName
p30516
tp30517
I5
s(g14279
I42
g14280
Vinsert
p30518
I45
VStringLiteral: "\u005ctSELECT /*+ no_merge(a) no_merge(b) */ a.username, a.SID, a.row_wait_obj#, a.ROW_WAIT_FILE#, a.ROW_WAIT_BLOCK#\u005cn"
p30519
tp30520
I1
s(Vinsert
p30521
I42
VSimpleName: setExpr
p30522
Vinsert
p30523
I43
VSimpleType: SQLReturnStatement
p30524
tp30525
I2
s(g3669
I42
g3670
Vinsert
p30526
I42
VSimpleName: cursorName
p30527
tp30528
I9
s(g18113
I42
g18114
Vinsert
p30529
I42
VSimpleName: SQLName
p30530
tp30531
I1
s(g1770
I42
g1771
Vinsert
p30532
I39
VPrimitiveType: void
p30533
tp30534
I6
s(g2198
I42
g2199
Vinsert
p30535
I32
VMethodInvocation
p30536
tp30537
I1
s(g2403
I42
g2404
Vinsert
p30538
I42
VSimpleName: exprParser
p30539
tp30540
I1
s(Vinsert
p30541
I42
VSimpleName: setName
p30542
Vinsert
p30543
I42
VSimpleName: value
p30544
tp30545
I1
s(g753
I42
g754
Vinsert
p30546
I42
VSimpleName: Object
p30547
tp30548
I1
s(g29207
I42
g29208
Vinsert
p30549
I45
VStringLiteral: "VALUES (?, ?, ?, ?, ?\u005cn"
p30550
tp30551
I1
s(g13659
I42
g13660
Vinsert
p30552
I59
VVariableDeclarationFragment
p30553
tp30554
I9
s(g22009
I42
g22010
Vinsert
p30555
I42
VSimpleName: i
p30556
tp30557
I1
s(g3169
I42
g3170
Vinsert
p30558
I42
VSimpleName: stmt
p30559
tp30560
I3
s(Vinsert
p30561
I42
VSimpleName: assertEquals
p30562
Vinsert
p30563
I43
VSimpleType: JdbcConnectionStat.Entry
p30564
tp30565
I1
s(g12716
I42
g12717
Vinsert
p30566
I43
VSimpleType: TransactionInfo
p30567
tp30568
I1
s(g14353
I42
g14354
Vinsert
p30569
I42
VSimpleName: SybaseExceptionSorter
p30570
tp30571
I2
s(g7697
I42
g7698
Vinsert
p30572
I45
VStringLiteral: "\u005ct\u005ctFROM graph g, search_graph sg\u005cn"
p30573
tp30574
I1
s(Vinsert
p30575
I42
VSimpleName: getParent
p30576
Vinsert
p30577
I42
VSimpleName: isTopNoneFromSelect
p30578
tp30579
I1
s(g7827
I42
g7828
Vinsert
p30580
I41
VReturnStatement
p30581
tp30582
I2
s(g11542
I42
g11543
Vinsert
p30583
I42
VSimpleName: SQLCommentHint
p30584
tp30585
I1
s(g9924
I42
g9925
Vinsert
p30586
I21
VExpressionStatement
p30587
tp30588
I4
s(g10016
I42
g10017
Vinsert
p30589
I42
VSimpleName: getItems
p30590
tp30591
I1
s(g6375
I42
g6376
Vinsert
p30592
I34
VNumberLiteral: 0
p30593
tp30594
I1
s(g8648
I42
g8649
Vinsert
p30595
I42
VSimpleName: clazz_ConnectionImpl
p30596
tp30597
I1
s(g15456
I42
g15457
Vinsert
p30598
I32
VMethodInvocation
p30599
tp30600
I3
s(g19190
I42
g19191
Vinsert
p30601
I42
VSimpleName: unwrap
p30602
tp30603
I8
s(g5053
I42
g5054
Vinsert
p30604
I21
VExpressionStatement
p30605
tp30606
I4
s(Vinsert
p30607
I42
VSimpleName: toSQLString
p30608
Vinsert
p30609
I45
VStringLiteral: "RETURN varchar2\u005cn"
p30610
tp30611
I1
s(g14452
I42
g14453
Vinsert
p30612
I45
VStringLiteral: "select ht.* from t_books ht"
p30613
tp30614
I1
s(g8430
I42
g8431
Vinsert
p30615
I45
VStringLiteral: "\u005cn\u005ctDROP IF NOT EXISTS PARTITION (sale_date = '201312', region = 'hangzhou')"
p30616
tp30617
I1
s(g9041
I42
g9042
Vinsert
p30618
I32
VMethodInvocation
p30619
tp30620
I18
s(g4040
I42
g4041
Vinsert
p30621
I11
VCastExpression
p30622
tp30623
I1
s(g2001
I42
g2002
Vinsert
p30624
I7
VAssignment: =
p30625
tp30626
I2
s(g21845
I42
g21846
Vinsert
p30627
I39
VPrimitiveType: int
p30628
tp30629
I1
s(g14402
I42
g14403
Vinsert
p30630
I42
VSimpleName: endTimeMillis
p30631
tp30632
I1
s(g5328
I42
g5329
Vinsert
p30633
I25
VIfStatement
p30634
tp30635
I1
s(Vinsert
p30636
I42
VSimpleName: isAllowDoPrivileged
p30637
Vinsert
p30638
I42
VSimpleName: WallProvider
p30639
tp30640
I1
s(g8090
I42
g8091
Vinsert
p30641
I45
VStringLiteral: "ORGANIZATION"
p30642
tp30643
I1
s(g3719
I42
g3720
Vinsert
p30644
I42
VSimpleName: statementList
p30645
tp30646
I251
s(g4964
I42
g4965
Vinsert
p30647
I42
VSimpleName: key
p30648
tp30649
I1
s(g8052
I42
g8053
Vinsert
p30650
I8
VBlock
p30651
tp30652
I1
s(Vinsert
p30653
I42
VSimpleName: assertNotNull
p30654
Vinsert
p30655
I42
VSimpleName: prepareCall
p30656
tp30657
I1
s(g8643
I42
g8644
Vinsert
p30658
I42
VSimpleName: exprParser
p30659
tp30660
I1
s(g5343
I42
g5344
Vinsert
p30661
I32
VMethodInvocation
p30662
tp30663
I1
s(g22193
I42
g22194
Vinsert
p30664
I59
VVariableDeclarationFragment
p30665
tp30666
I1
s(g11
I42
g12
Vinsert
p30667
I45
VStringLiteral: "test5\u005cn"
p30668
tp30669
I1
s(Vinsert
p30670
I42
VSimpleName: put
p30671
Vinsert
p30672
I45
VStringLiteral: "KEEP"
p30673
tp30674
I1
s(g7245
I42
g7246
Vinsert
p30675
I42
VSimpleName: map
p30676
tp30677
I1
s(g4931
I42
g4932
Vinsert
p30678
I45
VStringLiteral: "DROP TABLESPACE "
p30679
tp30680
I1
s(g1405
I42
g1406
Vinsert
p30681
I42
VSimpleName: getByte
p30682
tp30683
I1
s(g10021
I42
g10022
Vinsert
p30684
I45
VStringLiteral: "/*"
p30685
tp30686
I1
s(g9534
I42
g9535
Vinsert
p30687
I43
VSimpleType: SQLException
p30688
tp30689
I1
s(g12523
I42
g12524
Vinsert
p30690
I21
VExpressionStatement
p30691
tp30692
I1
s(g9727
I42
g9728
Vinsert
p30693
I8
VBlock
p30694
tp30695
I2
s(g2489
I42
g2490
Vinsert
p30696
I8
VBlock
p30697
tp30698
I1
s(g16831
I42
g16832
Vinsert
p30699
I45
VStringLiteral: "WRITE"
p30700
tp30701
I1
s(g10100
I42
g10101
Vinsert
p30702
I34
VNumberLiteral: 1000
p30703
tp30704
I1
s(g5854
I42
g5855
Vinsert
p30705
I33
VNullLiteral
p30706
tp30707
I1
s(g16321
I42
g16322
Vinsert
p30708
I43
VSimpleType: Integer
p30709
tp30710
I2
s(g20904
I42
g20905
Vinsert
p30711
I21
VExpressionStatement
p30712
tp30713
I2
s(g7620
I42
g7621
Vinsert
p30714
I32
VMethodInvocation
p30715
tp30716
I3
s(g11474
I42
g11475
Vinsert
p30717
I60
VVariableDeclarationStatement
p30718
tp30719
I7
s(g29596
I42
g29597
Vinsert
p30720
I40
VQualifiedName: other.withTimeZone
p30721
tp30722
I1
s(g25721
I42
g25722
Vinsert
p30723
I32
VMethodInvocation
p30724
tp30725
I4
s(g19810
I42
g19811
Vinsert
p30726
I42
VSimpleName: ParserException
p30727
tp30728
I1
s(g9103
I42
g9104
Vinsert
p30729
I8
VBlock
p30730
tp30731
I1
s(Vinsert
p30732
I42
VSimpleName: toString
p30733
Vinsert
p30734
I42
VSimpleName: output
p30735
tp30736
I1
s(Vinsert
p30737
I42
VSimpleName: parseStatementList
p30738
Vinsert
p30739
I42
VSimpleName: String
p30740
tp30741
I6
s(Vinsert
p30742
I42
VSimpleName: expr
p30743
Vinsert
p30744
I43
VSimpleType: PGTypeCastExpr
p30745
tp30746
I2
s(g12679
I42
g12680
Vinsert
p30747
I74
VParameterizedType: ArrayList<String>
p30748
tp30749
I1
s(Vinsert
p30750
I42
VSimpleName: parseStatementList
p30751
Vinsert
p30752
I42
VSimpleName: MySqlShowKeysStatement
p30753
tp30754
I2
s(g13627
I42
g13628
Vinsert
p30755
I45
VStringLiteral: "CREATE TABLE tt ("
p30756
tp30757
I1
s(g13166
I42
g13167
Vinsert
p30758
I45
VStringLiteral: " FOR QUERY "
p30759
tp30760
I1
s(g14426
I42
g14427
Vinsert
p30761
I43
VSimpleType: SqlMapClientImpl
p30762
tp30763
I2
s(Vinsert
p30764
I42
VSimpleName: setExpr
p30765
Vinsert
p30766
I43
VSimpleType: SQLServerTop
p30767
tp30768
I2
s(g27649
I42
g27650
Vinsert
p30769
I45
VStringLiteral: "\u005ctFROM TEST\u005cn"
p30770
tp30771
I2
s(Vinsert
p30772
I42
VSimpleName: check
p30773
Vinsert
p30774
I45
VStringLiteral: "CREATE TABLE test_pg_wall (col_int INT NOT NULL, col_double_x DOUBLE PRECISION NOT NULL DEFAULT 0, col_varchar VARCHAR(200) NULL)"
p30775
tp30776
I1
s(g11033
I42
g11034
Vinsert
p30777
I42
VSimpleName: HEngine
p30778
tp30779
I2
s(g7741
I42
g7742
Vinsert
p30780
I42
VSimpleName: CASE
p30781
tp30782
I1
s(Vinsert
p30783
I42
VSimpleName: close
p30784
Vinsert
p30785
I45
VStringLiteral: "stat"
p30786
tp30787
I1
s(Vinsert
p30788
I42
VSimpleName: getConnection
p30789
Vinsert
p30790
I42
VSimpleName: metaRs
p30791
tp30792
I1
s(g11696
I42
g11697
Vinsert
p30793
I45
VStringLiteral: "AND rsi.e_boardid = rbi.e_boardid \u005cn"
p30794
tp30795
I1
s(g11737
I42
g11738
Vinsert
p30796
I42
VSimpleName: list
p30797
tp30798
I1
s(g602
I42
g603
Vinsert
p30799
I14
VClassInstanceCreation
p30800
tp30801
I9
s(g23640
I42
g23641
Vinsert
p30802
I42
VSimpleName: acceptIdentifier
p30803
tp30804
I2
s(g1266
I42
g1267
Vinsert
p30805
I42
VSimpleName: contains
p30806
tp30807
I2
s(Vinsert
p30808
I42
VSimpleName: accept
p30809
Vinsert
p30810
I42
VSimpleName: MySqlSetNamesStatement
p30811
tp30812
I1
s(g7206
I42
g7207
Vinsert
p30813
I32
VMethodInvocation
p30814
tp30815
I3
s(g10061
I42
g10062
Vinsert
p30816
I45
VStringLiteral: "true"
p30817
tp30818
I1
s(g11745
I42
g11746
Vinsert
p30819
I32
VMethodInvocation
p30820
tp30821
I2
s(g6966
I42
g6967
Vinsert
p30822
I14
VClassInstanceCreation
p30823
tp30824
I39
s(Vinsert
p30825
I42
VSimpleName: toSQLString
p30826
Vinsert
p30827
I45
VStringLiteral: "\u005cnVALUES"
p30828
tp30829
I7
s(g821
I42
g822
Vinsert
p30830
I42
VSimpleName: tableElementList
p30831
tp30832
I1
s(g13569
I42
g13570
Vinsert
p30833
I78
VMarkerAnnotation
p30834
tp30835
I2
s(g1647
I42
g1648
Vinsert
p30836
I42
VSimpleName: map
p30837
tp30838
I1
s(g20835
I42
g20836
Vinsert
p30839
I41
VReturnStatement
p30840
tp30841
I2
s(Vinsert
p30842
I42
VSimpleName: computeHashCode64
p30843
Vinsert
p30844
I11
VCastExpression
p30845
tp30846
I2
s(Vinsert
p30847
I42
VSimpleName: setColumnType
p30848
Vinsert
p30849
I42
VSimpleName: SQLIntegerExpr
p30850
tp30851
I1
s(g9647
I42
g9648
Vinsert
p30852
I39
VPrimitiveType: boolean
p30853
tp30854
I6
s(Vinsert
p30855
I42
VSimpleName: equals
p30856
Vinsert
p30857
I43
VSimpleType: OracleExceptionSorter
p30858
tp30859
I1
s(g652
I42
g653
Vinsert
p30860
I42
VSimpleName: Map
p30861
tp30862
I1
s(g16359
I42
g16360
Vinsert
p30863
I42
VSimpleName: SQLExpr
p30864
tp30865
I1
s(g10485
I42
g10486
Vinsert
p30866
I42
VSimpleName: lexer
p30867
tp30868
I2
s(g256
I42
g257
Vinsert
p30869
I25
VIfStatement
p30870
tp30871
I1
s(g5017
I42
g5018
Vinsert
p30872
I43
VSimpleType: MonitorDaoJdbcImpl
p30873
tp30874
I2
s(g14522
I42
g14523
Vinsert
p30875
I45
VStringLiteral: "\u005ct\u005ctFROM dual;\u005cn"
p30876
tp30877
I1
s(g10784
I42
g10785
Vinsert
p30878
I45
VStringLiteral: ")"
p30879
tp30880
I1
s(g542
I42
g543
Vinsert
p30881
I45
VStringLiteral: "\u005ct\u005ct'SendMobileCheckcode', \u005cn"
p30882
tp30883
I1
s(g17133
I42
g17134
Vinsert
p30884
I42
VSimpleName: conn
p30885
tp30886
I1
s(g11365
I42
g11366
Vinsert
p30887
I45
VStringLiteral: "QUEUE_ON_PK "
p30888
tp30889
I1
s(g3962
I42
g3963
Vinsert
p30890
I42
VSimpleName: readBytesLength
p30891
tp30892
I2
s(g28400
I42
g28401
Vinsert
p30893
I34
VNumberLiteral: 1000
p30894
tp30895
I2
s(Vinsert
p30896
I42
VSimpleName: resolve
p30897
Vinsert
p30898
I39
VPrimitiveType: boolean
p30899
tp30900
I1
s(g28042
I42
g28043
Vinsert
p30901
I42
VSimpleName: SQLUtils
p30902
tp30903
I2
s(g16745
I42
g16746
Vinsert
p30904
I8
VBlock
p30905
tp30906
I2
s(g8514
I42
g8515
Vinsert
p30907
I42
VSimpleName: headHints
p30908
tp30909
I1
s(g11150
I42
g11151
Vinsert
p30910
I60
VVariableDeclarationStatement
p30911
tp30912
I22
s(Vinsert
p30913
I42
VSimpleName: toSQLString
p30914
Vinsert
p30915
I45
VStringLiteral: "\u005cn\u005ct\u005ctCONSTRAINT check_divno CHECK (div_no BETWEEN 10 AND 99) DISABLE,"
p30916
tp30917
I2
s(g4814
I42
g4815
Vinsert
p30918
I42
VSimpleName: sqlStmt
p30919
tp30920
I2
s(g2329
I42
g2330
Vinsert
p30921
I25
VIfStatement
p30922
tp30923
I1
s(g9150
I42
g9151
Vinsert
p30924
I45
VStringLiteral: "druid.parameterized.shardingSupport"
p30925
tp30926
I1
s(g6244
I42
g6245
Vinsert
p30927
I42
VSimpleName: owner
p30928
tp30929
I2
s(g1256
I42
g1257
Vinsert
p30930
I42
VSimpleName: dataSource
p30931
tp30932
I3
s(g8350
I42
g8351
Vinsert
p30933
I21
VExpressionStatement
p30934
tp30935
I16
s(g19486
I42
g19487
Vinsert
p30936
I45
VStringLiteral: ");"
p30937
tp30938
I1
s(g30294
I42
g30295
Vinsert
p30939
I42
VSimpleName: ResultSet
p30940
tp30941
I3
s(g12427
I42
g12428
Vinsert
p30942
I32
VMethodInvocation
p30943
tp30944
I3
s(Vinsert
p30945
I42
VSimpleName: getConfig
p30946
Vinsert
p30947
I42
VSimpleName: setMultiStatementAllow
p30948
tp30949
I1
s(g11611
I42
g11612
Vinsert
p30950
I45
VStringLiteral: "FROM tt"
p30951
tp30952
I1
s(g15818
I42
g15819
Vinsert
p30953
I32
VMethodInvocation
p30954
tp30955
I1
s(g7275
I42
g7276
Vinsert
p30956
I32
VMethodInvocation
p30957
tp30958
I10
s(g8103
I42
g8104
Vinsert
p30959
I43
VSimpleType: V
p30960
tp30961
I1
s(g18086
I42
g18087
Vinsert
p30962
I42
VSimpleName: funcName
p30963
tp30964
I1
s(g1745
I42
g1746
Vinsert
p30965
I42
VSimpleName: conditionValue
p30966
tp30967
I1
s(g9415
I42
g9416
Vinsert
p30968
I39
VPrimitiveType: boolean
p30969
tp30970
I1
s(g577
I42
g578
Vinsert
p30971
I36
VParenthesizedExpression
p30972
tp30973
I3
s(g6684
I42
g6685
Vinsert
p30974
I42
VSimpleName: SQLExpr
p30975
tp30976
I4
s(g5734
I42
g5735
Vinsert
p30977
I32
VMethodInvocation
p30978
tp30979
I6
s(g21924
I42
g21925
Vinsert
p30980
I42
VSimpleName: orderBySiblings
p30981
tp30982
I3
s(g17694
I42
g17695
Vinsert
p30983
I42
VSimpleName: test_true
p30984
tp30985
I2
s(Vinsert
p30986
I42
VSimpleName: assertNotNull
p30987
Vinsert
p30988
I42
VSimpleName: getArray
p30989
tp30990
I1
s(g22273
I42
g22274
Vinsert
p30991
I45
VStringLiteral: "START"
p30992
tp30993
I1
s(g2393
I42
g2394
Vinsert
p30994
I24
VForStatement
p30995
tp30996
I1
s(g6056
I42
g6057
Vinsert
p30997
I39
VPrimitiveType: boolean
p30998
tp30999
I1
s(g1853
I42
g1854
Vinsert
p31000
I43
VSimpleType: SQLWithSubqueryClause.Entry
p31001
tp31002
I2
s(g8129
I42
g8130
Vinsert
p31003
I42
VSimpleName: types
p31004
tp31005
I2
s(g18930
I42
g18931
Vinsert
p31006
I32
VMethodInvocation
p31007
tp31008
I2
s(g7264
I42
g7265
Vinsert
p31009
I27
VInfixExpression: ==
p31010
tp31011
I1
s(g25207
I42
g25208
Vinsert
p31012
I42
VSimpleName: println
p31013
tp31014
I2
s(g7275
I42
g7276
Vinsert
p31015
I59
VVariableDeclarationFragment
p31016
tp31017
I19
s(g12077
I42
g12078
Vinsert
p31018
I42
VSimpleName: balancer
p31019
tp31020
I3
s(g25074
I42
g25075
Vinsert
p31021
I42
VSimpleName: tableSource
p31022
tp31023
I1
s(g4819
I42
g4820
Vinsert
p31024
I45
VStringLiteral: "\u005cn\u005ct\u005ctOR d.indkey[8] = a.attnum"
p31025
tp31026
I1
s(g21947
I42
g21948
Vinsert
p31027
I42
VSimpleName: SQLExprTableSource
p31028
tp31029
I10
s(g14226
I42
g14227
Vinsert
p31030
I13
VCharacterLiteral: '.'
p31031
tp31032
I1
s(Vinsert
p31033
I42
VSimpleName: setParent
p31034
Vinsert
p31035
I42
VSimpleName: addItem
p31036
tp31037
I10
s(g26221
I42
g26222
Vinsert
p31038
I42
VSimpleName: MultiDataSourceStatManager
p31039
tp31040
I1
s(Vinsert
p31041
I42
VSimpleName: close
p31042
Vinsert
p31043
I42
VSimpleName: pooledConnection
p31044
tp31045
I2
s(g11629
I42
g11630
Vinsert
p31046
I42
VSimpleName: exceptionSoters
p31047
tp31048
I1
s(g28764
I42
g28765
Vinsert
p31049
I33
VNullLiteral
p31050
tp31051
I2
s(g19984
I42
g19985
Vinsert
p31052
I32
VMethodInvocation
p31053
tp31054
I4
s(g25014
I42
g25015
Vinsert
p31055
I42
VSimpleName: setProperty
p31056
tp31057
I4
s(g20822
I42
g20823
Vinsert
p31058
I42
VSimpleName: pk
p31059
tp31060
I2
s(g2727
I42
g2728
Vinsert
p31061
I42
VSimpleName: stmt
p31062
tp31063
I1
s(g30184
I42
g30185
Vinsert
p31064
I34
VNumberLiteral: 0
p31065
tp31066
I2
s(g10859
I42
g10860
Vinsert
p31067
I45
VStringLiteral: "\u005cn and -- comment_3"
p31068
tp31069
I1
s(g1963
I42
g1964
Vinsert
p31070
I8
VBlock
p31071
tp31072
I1
s(g8233
I42
g8234
Vinsert
p31073
I27
VInfixExpression: ==
p31074
tp31075
I1
s(g987
I42
g988
Vinsert
p31076
I39
VPrimitiveType: void
p31077
tp31078
I1
s(g4303
I42
g4304
Vinsert
p31079
I45
VStringLiteral: "\u005ct\u005ct\u005ctself.currentstr := self.currentstr || currentseprator || ctx2.currentstr;\u005cn"
p31080
tp31081
I1
s(g5118
I42
g5119
Vinsert
p31082
I42
VSimpleName: logger
p31083
tp31084
I2
s(g6046
I42
g6047
Vinsert
p31085
I39
VPrimitiveType: int
p31086
tp31087
I1
s(g9939
I42
g9940
Vinsert
p31088
I39
VPrimitiveType: int
p31089
tp31090
I1
s(g4288
I42
g4289
Vinsert
p31091
I7
VAssignment: =
p31092
tp31093
I2
s(g8381
I42
g8382
Vinsert
p31094
I42
VSimpleName: update
p31095
tp31096
I3
s(g26608
I42
g26609
Vinsert
p31097
I27
VInfixExpression: !=
p31098
tp31099
I1
s(g6712
I42
g6713
Vinsert
p31100
I11
VCastExpression
p31101
tp31102
I7
s(g12726
I42
g12727
Vinsert
p31103
I21
VExpressionStatement
p31104
tp31105
I3
s(g4457
I42
g4458
Vinsert
p31106
I8
VBlock
p31107
tp31108
I1
s(g12324
I42
g12325
Vinsert
p31109
I21
VExpressionStatement
p31110
tp31111
I1
s(g27757
I42
g27758
Vinsert
p31112
I32
VMethodInvocation
p31113
tp31114
I1
s(g8914
I42
g8915
Vinsert
p31115
I42
VSimpleName: HADataSource
p31116
tp31117
I1
s(g21876
I42
g21877
Vinsert
p31118
I27
VInfixExpression: <
p31119
tp31120
I1
s(g2765
I42
g2766
Vinsert
p31121
I7
VAssignment: =
p31122
tp31123
I2
s(g1236
I42
g1237
Vinsert
p31124
I32
VMethodInvocation
p31125
tp31126
I2
s(Vinsert
p31127
I42
VSimpleName: token
p31128
Vinsert
p31129
I40
VQualifiedName: Token.TABLESPACE
p31130
tp31131
I2
s(g13512
I42
g13513
Vinsert
p31132
I45
VStringLiteral: "ALTER TABLE `test`.`tb1`  ADD INDEX `ix` (`f2` ASC) ;"
p31133
tp31134
I1
s(g21244
I42
g21245
Vinsert
p31135
I59
VVariableDeclarationFragment
p31136
tp31137
I2
s(g11474
I42
g11475
Vinsert
p31138
I45
VStringLiteral: "CREATE LOGFILE GROUP lg1 ADD UNDOFILE 'undo.dat' INITIAL_SIZE = 10M ENGINE = InnoDB;"
p31139
tp31140
I1
s(g13911
I42
g13912
Vinsert
p31141
I42
VSimpleName: getBoolean
p31142
tp31143
I1
s(g1958
I42
g1959
Vinsert
p31144
I45
VStringLiteral: "\u005ct\u005ct\u005ctFREELIST GROUPS 1\u005cn"
p31145
tp31146
I6
s(g10039
I42
g10040
Vinsert
p31147
I45
VStringLiteral: "deprecation"
p31148
tp31149
I1
s(g4457
I42
g4458
Vinsert
p31150
I45
VStringLiteral: "StatementLastErrorTime"
p31151
tp31152
I1
s(g12299
I42
g12300
Vinsert
p31153
I42
VSimpleName: entity
p31154
tp31155
I4
s(g19278
I42
g19279
Vinsert
p31156
I42
VSimpleName: sequence
p31157
tp31158
I1
s(g28455
I42
g28456
Vinsert
p31159
I14
VClassInstanceCreation
p31160
tp31161
I44
s(g3793
I42
g3794
Vinsert
p31162
I42
VSimpleName: Collections
p31163
tp31164
I1
s(g6597
I42
g6598
Vinsert
p31165
I42
VSimpleName: getResource
p31166
tp31167
I1
s(g11850
I42
g11851
Vinsert
p31168
I42
VSimpleName: pattDirs
p31169
tp31170
I1
s(g20914
I42
g20915
Vinsert
p31171
I34
VNumberLiteral: 1
p31172
tp31173
I1
s(g1410
I42
g1411
Vinsert
p31174
I42
VSimpleName: PGExtractExpr
p31175
tp31176
I1
s(Vinsert
p31177
I42
VSimpleName: error
p31178
Vinsert
p31179
I42
VSimpleName: dupCloseLogEnable
p31180
tp31181
I1
s(g1780
I42
g1781
Vinsert
p31182
I42
VSimpleName: setUp
p31183
tp31184
I1
s(g2248
I42
g2249
Vinsert
p31185
I43
VSimpleType: String
p31186
tp31187
I2
s(g16359
I42
g16360
Vinsert
p31188
I16
VConditionalExpression
p31189
tp31190
I1
s(g19456
I42
g19457
Vinsert
p31191
I40
VQualifiedName: JdbcUtils.ELASTIC_SEARCH
p31192
tp31193
I1
s(g7245
I42
g7246
Vinsert
p31194
I42
VSimpleName: stmtHolder
p31195
tp31196
I2
s(g2403
I42
g2404
Vinsert
p31197
I42
VSimpleName: alterColumn
p31198
tp31199
I1
s(g24719
I42
g24720
Vinsert
p31200
I45
VStringLiteral: "\u005cn\u005ctdrop if not exists partition (sale_date = '201312', region = 'hangzhou');"
p31201
tp31202
I1
s(Vinsert
p31203
I42
VSimpleName: put
p31204
Vinsert
p31205
I42
VSimpleName: getConnectionStat
p31206
tp31207
I2
s(g11320
I42
g11321
Vinsert
p31208
I42
VSimpleName: setPasswordCallbackClassName
p31209
tp31210
I1
s(Vinsert
p31211
I42
VSimpleName: setParent
p31212
Vinsert
p31213
I42
VSimpleName: SQLSelectItem
p31214
tp31215
I2
s(g21295
I42
g21296
Vinsert
p31216
I45
VStringLiteral: "PRIOR "
p31217
tp31218
I1
s(Vinsert
p31219
I42
VSimpleName: getSelectList
p31220
Vinsert
p31221
I34
VNumberLiteral: 1
p31222
tp31223
I1
s(Vinsert
p31224
I42
VSimpleName: getSelectList
p31225
Vinsert
p31226
I5
VArrayType: Object[]
p31227
tp31228
I2
s(g17240
I42
g17241
Vinsert
p31229
I32
VMethodInvocation
p31230
tp31231
I5
s(g3098
I42
g3099
Vinsert
p31232
I42
VSimpleName: MySqlWallProvider
p31233
tp31234
I32
s(Vinsert
p31235
I42
VSimpleName: currentThread
p31236
Vinsert
p31237
I42
VSimpleName: in
p31238
tp31239
I2
s(g1314
I42
g1315
Vinsert
p31240
I42
VSimpleName: SQLUnique
p31241
tp31242
I1
s(g22807
I42
g22808
Vinsert
p31243
I22
VFieldAccess
p31244
tp31245
I7
s(g9380
I42
g9381
Vinsert
p31246
I83
VModifier: public
p31247
tp31248
I1
s(g6313
I42
g6314
Vinsert
p31249
I42
VSimpleName: lexer
p31250
tp31251
I2
s(Vinsert
p31252
I42
VSimpleName: assertEquals
p31253
Vinsert
p31254
I45
VStringLiteral: "read sale_detail 10"
p31255
tp31256
I1
s(Vinsert
p31257
I42
VSimpleName: getConditions
p31258
Vinsert
p31259
I34
VNumberLiteral: 5
p31260
tp31261
I1
s(Vinsert
p31262
I42
VSimpleName: assertEquals
p31263
Vinsert
p31264
I42
VSimpleName: EvalMethodBinTest
p31265
tp31266
I1
s(g7908
I42
g7909
Vinsert
p31267
I43
VSimpleType: DruidPooledConnection
p31268
tp31269
I2
s(g15621
I42
g15622
Vinsert
p31270
I42
VSimpleName: prettyFormat
p31271
tp31272
I1
s(g8425
I42
g8426
Vinsert
p31273
I34
VNumberLiteral: 1
p31274
tp31275
I1
s(g18891
I42
g18892
Vinsert
p31276
I42
VSimpleName: commentHandler
p31277
tp31278
I2
s(g4391
I42
g4392
Vinsert
p31279
I42
VSimpleName: commitTransaction
p31280
tp31281
I1
s(g4977
I42
g4978
Vinsert
p31282
I42
VSimpleName: addPrivileges
p31283
tp31284
I1
s(g86
I42
g87
Vinsert
p31285
I42
VSimpleName: x
p31286
tp31287
I2
s(g136
I42
g137
Vinsert
p31288
I42
VSimpleName: count
p31289
tp31290
I1
s(Vinsert
p31291
I42
VSimpleName: getMethod
p31292
Vinsert
p31293
I16
VConditionalExpression
p31294
tp31295
I1
s(Vinsert
p31296
I42
VSimpleName: setExpr
p31297
Vinsert
p31298
I42
VSimpleName: OracleAnalyticWindowing
p31299
tp31300
I1
s(g12480
I42
g12481
Vinsert
p31301
I11
VCastExpression
p31302
tp31303
I1
s(g2193
I42
g2194
Vinsert
p31304
I7
VAssignment: =
p31305
tp31306
I9
s(g18070
I42
g18071
Vinsert
p31307
I27
VInfixExpression: ==
p31308
tp31309
I4
s(g612
I42
g613
Vinsert
p31310
I59
VVariableDeclarationFragment
p31311
tp31312
I1
s(g1685
I42
g1686
Vinsert
p31313
I42
VSimpleName: setText
p31314
tp31315
I1
s(g8716
I42
g8717
Vinsert
p31316
I42
VSimpleName: histogram_1000000_more
p31317
tp31318
I1
s(g4785
I42
g4786
Vinsert
p31319
I43
VSimpleType: OracleWallProvider
p31320
tp31321
I6
s(g14754
I42
g14755
Vinsert
p31322
I54
VTryStatement
p31323
tp31324
I1
s(g3992
I42
g3993
Vinsert
p31325
I7
VAssignment: =
p31326
tp31327
I2
s(g8399
I42
g8400
Vinsert
p31328
I8
VBlock
p31329
tp31330
I1
s(g1145
I42
g1146
Vinsert
p31331
I42
VSimpleName: LogFactory
p31332
tp31333
I1
s(g24755
I42
g24756
Vinsert
p31334
I43
VSimpleType: OracleStorageClause
p31335
tp31336
I1
s(g14468
I42
g14469
Vinsert
p31337
I40
VQualifiedName: com.alibaba.druid.filter.wall.spi.WallVisitorUtils
p31338
tp31339
I1
s(g8873
I42
g8874
Vinsert
p31340
I42
VSimpleName: parserParameters
p31341
tp31342
I1
s(g20411
I42
g20412
Vinsert
p31343
I42
VSimpleName: nestedTable
p31344
tp31345
I1
s(g8485
I42
g8486
Vinsert
p31346
I50
VSwitchStatement
p31347
tp31348
I3
s(g15514
I42
g15515
Vinsert
p31349
I83
VModifier: public
p31350
tp31351
I1
s(Vinsert
p31352
I42
VSimpleName: getParameters
p31353
Vinsert
p31354
I42
VSimpleName: eval
p31355
tp31356
I1
s(g7827
I42
g7828
Vinsert
p31357
I38
VPrefixExpression: -
p31358
tp31359
I1
s(g14730
I42
g14731
Vinsert
p31360
I9
VBooleanLiteral: true
p31361
tp31362
I49
s(g14088
I42
g14089
Vinsert
p31363
I42
VSimpleName: directCreateCountUpdater
p31364
tp31365
I1
s(Vinsert
p31366
I42
VSimpleName: nextToken
p31367
Vinsert
p31368
I43
VSimpleType: SQLBinaryOpExpr
p31369
tp31370
I1
s(Vinsert
p31371
I42
VSimpleName: name
p31372
Vinsert
p31373
I42
VSimpleName: OracleAlterTableAddConstaint
p31374
tp31375
I2
s(g13764
I42
g13765
Vinsert
p31376
I43
VSimpleType: Exception
p31377
tp31378
I1
s(g8311
I42
g8312
Vinsert
p31379
I83
VModifier: static
p31380
tp31381
I1
s(g3737
I42
g3738
Vinsert
p31382
I42
VSimpleName: SQLVariantRefExpr
p31383
tp31384
I1
s(Vinsert
p31385
I42
VSimpleName: getMessage
p31386
Vinsert
p31387
I83
VModifier: public
p31388
tp31389
I1
s(g12864
I42
g12865
Vinsert
p31390
I54
VTryStatement
p31391
tp31392
I1
s(g4515
I42
g4516
Vinsert
p31393
I45
VStringLiteral: "\u005cn) PCTFREE 10 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING TABLESPACE \u005c"USERS\u005c""
p31394
tp31395
I1
s(g876
I42
g877
Vinsert
p31396
I42
VSimpleName: text
p31397
tp31398
I16
s(g16525
I42
g16526
Vinsert
p31399
I21
VExpressionStatement
p31400
tp31401
I3
s(Vinsert
p31402
I42
VSimpleName: toMySqlString
p31403
Vinsert
p31404
I45
VStringLiteral: "CREATE OR REPLACE DEFINER = 'ivan'@'%'\u005cn"
p31405
tp31406
I1
s(g4144
I42
g4145
Vinsert
p31407
I36
VParenthesizedExpression
p31408
tp31409
I1
s(g13823
I42
g13824
Vinsert
p31410
I43
VSimpleType: SQLStatement
p31411
tp31412
I222
s(g1903
I42
g1904
Vinsert
p31413
I27
VInfixExpression: !=
p31414
tp31415
I1
s(g18173
I42
g18174
Vinsert
p31416
I42
VSimpleName: ObjectName
p31417
tp31418
I4
s(g9629
I42
g9630
Vinsert
p31419
I8
VBlock
p31420
tp31421
I4
s(g11845
I42
g11846
Vinsert
p31422
I16
VConditionalExpression
p31423
tp31424
I1
s(g12397
I42
g12398
Vinsert
p31425
I45
VStringLiteral: "\u005ct\u005ctOR A.CITY LIKE ('%' || ? || '%')\u005cn"
p31426
tp31427
I1
s(g3811
I42
g3812
Vinsert
p31428
I25
VIfStatement
p31429
tp31430
I2
s(g10869
I42
g10870
Vinsert
p31431
I45
VStringLiteral: ". id "
p31432
tp31433
I2
s(g9524
I42
g9525
Vinsert
p31434
I45
VStringLiteral: "\u005ct\u005ctgroup by pv_id, \u005cn"
p31435
tp31436
I1
s(g8796
I42
g8797
Vinsert
p31437
I42
VSimpleName: parseTableSourceQueryTableExpr
p31438
tp31439
I1
s(g497
I42
g498
Vinsert
p31440
I8
VBlock
p31441
tp31442
I4
s(g8238
I42
g8239
Vinsert
p31443
I14
VClassInstanceCreation
p31444
tp31445
I2
s(g6607
I42
g6608
Vinsert
p31446
I42
VSimpleName: Exception
p31447
tp31448
I1
s(g22587
I42
g22588
Vinsert
p31449
I43
VSimpleType: CallableStatement
p31450
tp31451
I1
s(Vinsert
p31452
I42
VSimpleName: token
p31453
Vinsert
p31454
I42
VSimpleName: flashback
p31455
tp31456
I2
s(g14187
I42
g14188
Vinsert
p31457
I83
VModifier: public
p31458
tp31459
I1
s(g2885
I42
g2886
Vinsert
p31460
I52
VThisExpression
p31461
tp31462
I2
s(Vinsert
p31463
I42
VSimpleName: connect
p31464
Vinsert
p31465
I43
VSimpleType: DruidDriver
p31466
tp31467
I2
s(g11360
I42
g11361
Vinsert
p31468
I32
VMethodInvocation
p31469
tp31470
I7
s(g8465
I42
g8466
Vinsert
p31471
I42
VSimpleName: print
p31472
tp31473
I1
s(Vinsert
p31474
I42
VSimpleName: get
p31475
Vinsert
p31476
I42
VSimpleName: clobOpenCount
p31477
tp31478
I3
s(g8669
I42
g8670
Vinsert
p31479
I33
VNullLiteral
p31480
tp31481
I1
s(g17652
I42
g17653
Vinsert
p31482
I43
VSimpleType: SQLAlterTableStatement
p31483
tp31484
I2
s(g20035
I42
g20036
Vinsert
p31485
I59
VVariableDeclarationFragment
p31486
tp31487
I2
s(Vinsert
p31488
I42
VSimpleName: setParent
p31489
Vinsert
p31490
I42
VSimpleName: deaultValue
p31491
tp31492
I1
s(g3513
I42
g3514
Vinsert
p31493
I42
VSimpleName: x
p31494
tp31495
I10
s(g7893
I42
g7894
Vinsert
p31496
I60
VVariableDeclarationStatement
p31497
tp31498
I18
s(g21190
I42
g21191
Vinsert
p31499
I45
VStringLiteral: "\u005ctRETURN acc_bal;\u005cn"
p31500
tp31501
I1
s(g16551
I42
g16552
Vinsert
p31502
I42
VSimpleName: lastDenyTimeMillis
p31503
tp31504
I1
s(Vinsert
p31505
I42
VSimpleName: free
p31506
Vinsert
p31507
I8
VBlock
p31508
tp31509
I3
s(g17718
I42
g17719
Vinsert
p31510
I43
VSimpleType: Exception
p31511
tp31512
I1
s(Vinsert
p31513
I42
VSimpleName: size
p31514
Vinsert
p31515
I42
VSimpleName: PGValuesQuery
p31516
tp31517
I1
s(g12397
I42
g12398
Vinsert
p31518
I45
VStringLiteral: "WHERE ROWNUM <= 10"
p31519
tp31520
I1
s(g8001
I42
g8002
Vinsert
p31521
I43
VSimpleType: SQLTableSource
p31522
tp31523
I1
s(g31291
I42
g31292
Vinsert
p31524
I42
VSimpleName: println
p31525
tp31526
I1
s(g10631
I42
g10632
Vinsert
p31527
I32
VMethodInvocation
p31528
tp31529
I3
s(g5559
I42
g5560
Vinsert
p31530
I45
VStringLiteral: "\u005cnFROM t1, t2"
p31531
tp31532
I1
s(g1410
I42
g1411
Vinsert
p31533
I42
VSimpleName: x
p31534
tp31535
I1
s(Vinsert
p31536
I42
VSimpleName: getType
p31537
Vinsert
p31538
I42
VSimpleName: key
p31539
tp31540
I2
s(g5297
I42
g5298
Vinsert
p31541
I9
VBooleanLiteral: false
p31542
tp31543
I2
s(Vinsert
p31544
I42
VSimpleName: nextToken
p31545
Vinsert
p31546
I45
VStringLiteral: "STATISTIC"
p31547
tp31548
I1
s(Vinsert
p31549
I42
VSimpleName: expr
p31550
Vinsert
p31551
I42
VSimpleName: OracleTimestampExpr
p31552
tp31553
I1
s(g16648
I42
g16649
Vinsert
p31554
I42
VSimpleName: String
p31555
tp31556
I2
s(g27142
I42
g27143
Vinsert
p31557
I42
VSimpleName: print0
p31558
tp31559
I3
s(g444
I42
g445
Vinsert
p31560
I27
VInfixExpression: &&
p31561
tp31562
I1
s(Vinsert
p31563
I42
VSimpleName: getTables
p31564
Vinsert
p31565
I42
VSimpleName: assertTrue
p31566
tp31567
I2
s(Vinsert
p31568
I42
VSimpleName: get
p31569
Vinsert
p31570
I27
VInfixExpression: ==
p31571
tp31572
I10
s(g4941
I42
g4942
Vinsert
p31573
I44
VSingleVariableDeclaration
p31574
tp31575
I1
s(Vinsert
p31576
I42
VSimpleName: setParent
p31577
Vinsert
p31578
I42
VSimpleName: setLifecycle
p31579
tp31580
I1
s(g8687
I42
g8688
Vinsert
p31581
I31
VMethodDeclaration
p31582
tp31583
I1
s(g19678
I42
g19679
Vinsert
p31584
I42
VSimpleName: connection
p31585
tp31586
I2
s(g2243
I42
g2244
Vinsert
p31587
I21
VExpressionStatement
p31588
tp31589
I2
s(g6172
I42
g6173
Vinsert
p31590
I43
VSimpleType: SQLASTVisitor
p31591
tp31592
I1
s(g18836
I42
g18837
Vinsert
p31593
I42
VSimpleName: assertFalse
p31594
tp31595
I1
s(g10710
I42
g10711
Vinsert
p31596
I42
VSimpleName: opt
p31597
tp31598
I1
s(g13764
I42
g13765
Vinsert
p31599
I42
VSimpleName: putAll
p31600
tp31601
I1
s(g6236
I42
g6237
Vinsert
p31602
I42
VSimpleName: setColumn
p31603
tp31604
I1
s(g7461
I42
g7462
Vinsert
p31605
I42
VSimpleName: FormatOption
p31606
tp31607
I1
s(g866
I42
g867
Vinsert
p31608
I42
VSimpleName: Assert
p31609
tp31610
I1
s(g21778
I42
g21779
Vinsert
p31611
I42
VSimpleName: dataSourceStat
p31612
tp31613
I1
s(g4253
I42
g4254
Vinsert
p31614
I14
VClassInstanceCreation
p31615
tp31616
I3
s(g4625
I42
g4626
Vinsert
p31617
I39
VPrimitiveType: boolean
p31618
tp31619
I1
s(Vinsert
p31620
I42
VSimpleName: visit
p31621
Vinsert
p31622
I43
VSimpleType: SQLCaseExpr
p31623
tp31624
I1
s(g2049
I42
g2050
Vinsert
p31625
I45
VStringLiteral: "MAXTRANS 255\u005cn"
p31626
tp31627
I11
s(g13147
I42
g13148
Vinsert
p31628
I43
VSimpleType: Exception
p31629
tp31630
I39
s(g1175
I42
g1176
Vinsert
p31631
I42
VSimpleName: println
p31632
tp31633
I1
s(g14535
I42
g14536
Vinsert
p31634
I45
VStringLiteral: "\u005ctUNION\u005cn"
p31635
tp31636
I1
s(g3836
I42
g3837
Vinsert
p31637
I43
VSimpleType: Number
p31638
tp31639
I1
s(g4313
I42
g4314
Vinsert
p31640
I42
VSimpleName: statement
p31641
tp31642
I2
s(g13525
I42
g13526
Vinsert
p31643
I45
VStringLiteral: "outfile"
p31644
tp31645
I1
s(g15648
I42
g15649
Vinsert
p31646
I43
VSimpleType: List
p31647
tp31648
I1
s(Vinsert
p31649
I42
VSimpleName: put
p31650
Vinsert
p31651
I45
VStringLiteral: "StatementExecuteCount_10_30_Minutes"
p31652
tp31653
I1
s(g14083
I42
g14084
Vinsert
p31654
I42
VSimpleName: endTransaction
p31655
tp31656
I1
s(g1052
I42
g1053
Vinsert
p31657
I43
VSimpleType: PreparedStatementKey
p31658
tp31659
I1
s(g7589
I42
g7590
Vinsert
p31660
I42
VSimpleName: setDistionOption
p31661
tp31662
I1
s(g9949
I42
g9950
Vinsert
p31663
I42
VSimpleName: OracleFunctionDataType
p31664
tp31665
I4
s(g6617
I42
g6618
Vinsert
p31666
I42
VSimpleName: keySet
p31667
tp31668
I2
s(g9838
I42
g9839
Vinsert
p31669
I33
VNullLiteral
p31670
tp31671
I1
s(Vinsert
p31672
I42
VSimpleName: accept
p31673
Vinsert
p31674
I42
VSimpleName: mysqlColumn
p31675
tp31676
I2
s(g19315
I42
g19316
Vinsert
p31677
I42
VSimpleName: stmt
p31678
tp31679
I1
s(Vinsert
p31680
I42
VSimpleName: setParent
p31681
Vinsert
p31682
I42
VSimpleName: clone
p31683
tp31684
I6
s(g14187
I42
g14188
Vinsert
p31685
I39
VPrimitiveType: int
p31686
tp31687
I1
s(g22603
I42
g22604
Vinsert
p31688
I43
VSimpleType: SQLExpr
p31689
tp31690
I1
s(Vinsert
p31691
I42
VSimpleName: getQuery
p31692
Vinsert
p31693
I42
VSimpleName: queryBlock
p31694
tp31695
I14
s(Vinsert
p31696
I42
VSimpleName: getFieldType
p31697
Vinsert
p31698
I42
VSimpleName: append
p31699
tp31700
I1
s(g13607
I42
g13608
Vinsert
p31701
I42
VSimpleName: Number
p31702
tp31703
I2
s(g1314
I42
g1315
Vinsert
p31704
I43
VSimpleType: SQLUnique
p31705
tp31706
I1
s(g17387
I42
g17388
Vinsert
p31707
I42
VSimpleName: accept
p31708
tp31709
I2
s(g4589
I42
g4590
Vinsert
p31710
I42
VSimpleName: i
p31711
tp31712
I3
s(g2354
I42
g2355
Vinsert
p31713
I45
VStringLiteral: "\u005ctDBMS_OUTPUT.PUT_LINE(' After loop:  x = ' || TO_CHAR(x));\u005cn"
p31714
tp31715
I1
s(g12901
I42
g12902
Vinsert
p31716
I52
VThisExpression
p31717
tp31718
I2
s(g27142
I42
g27143
Vinsert
p31719
I16
VConditionalExpression
p31720
tp31721
I8
s(g424
I42
g425
Vinsert
p31722
I42
VSimpleName: item
p31723
tp31724
I43
s(g11015
I42
g11016
Vinsert
p31725
I42
VSimpleName: limit
p31726
tp31727
I4
s(g18469
I42
g18470
Vinsert
p31728
I42
VSimpleName: inTransaction
p31729
tp31730
I1
s(g2444
I42
g2445
Vinsert
p31731
I42
VSimpleName: SQLIdentifierExpr
p31732
tp31733
I1
s(g18187
I42
g18188
Vinsert
p31734
I14
VClassInstanceCreation
p31735
tp31736
I4
s(g1410
I42
g1411
Vinsert
p31737
I8
VBlock
p31738
tp31739
I1
s(g2619
I42
g2620
Vinsert
p31740
I45
VStringLiteral: "XOR"
p31741
tp31742
I2
s(g18680
I42
g18681
Vinsert
p31743
I32
VMethodInvocation
p31744
tp31745
I2
s(g16447
I42
g16448
Vinsert
p31746
I42
VSimpleName: SQLPropertyExpr
p31747
tp31748
I1
s(Vinsert
p31749
I42
VSimpleName: size
p31750
Vinsert
p31751
I42
VSimpleName: getOrderByColumns
p31752
tp31753
I1
s(Vinsert
p31754
I42
VSimpleName: add
p31755
Vinsert
p31756
I40
VQualifiedName: x.tableElementList
p31757
tp31758
I1
s(g12324
I42
g12325
Vinsert
p31759
I45
VStringLiteral: "SHOW "
p31760
tp31761
I1
s(g3608
I42
g3609
Vinsert
p31762
I7
VAssignment: =
p31763
tp31764
I3
s(g557
I42
g558
Vinsert
p31765
I45
VStringLiteral: "\u005cn\u005ct\u005ctFROM t"
p31766
tp31767
I1
s(g547
I42
g548
Vinsert
p31768
I45
VStringLiteral: "\u005ct\u005ctOR v.service_type = 'cnfm'\u005cn"
p31769
tp31770
I1
s(g2722
I42
g2723
Vinsert
p31771
I42
VSimpleName: visitor
p31772
tp31773
I3
s(g7201
I42
g7202
Vinsert
p31774
I25
VIfStatement
p31775
tp31776
I1
s(g11217
I42
g11218
Vinsert
p31777
I42
VSimpleName: SQLDataType
p31778
tp31779
I2
s(g6495
I42
g6496
Vinsert
p31780
I27
VInfixExpression: -
p31781
tp31782
I1
s(g26739
I42
g26740
Vinsert
p31783
I45
VStringLiteral: "select "
p31784
tp31785
I1
s(g5297
I42
g5298
Vinsert
p31786
I42
VSimpleName: dataType
p31787
tp31788
I1
s(g21778
I42
g21779
Vinsert
p31789
I22
VFieldAccess
p31790
tp31791
I1
s(g8635
I42
g8636
Vinsert
p31792
I42
VSimpleName: getInstance
p31793
tp31794
I4
s(g4735
I42
g4736
Vinsert
p31795
I45
VStringLiteral: "\u005cnFROM t2"
p31796
tp31797
I1
s(Vinsert
p31798
I42
VSimpleName: getParameters
p31799
Vinsert
p31800
I42
VSimpleName: param0
p31801
tp31802
I6
s(Vinsert
p31803
I42
VSimpleName: parseStatementList
p31804
Vinsert
p31805
I42
VSimpleName: MySqlShowProcessListStatement
p31806
tp31807
I2
s(g6167
I42
g6168
Vinsert
p31808
I42
VSimpleName: isSelectUnionCheck
p31809
tp31810
I1
s(g3719
I42
g3720
Vinsert
p31811
I40
VQualifiedName: SQLUtils.DEFAULT_LCASE_FORMAT_OPTION
p31812
tp31813
I2
s(g17966
I42
g17967
Vinsert
p31814
I45
VStringLiteral: "\u005cn\u005ctPARTITION p1 VALUES LESS THAN (11),"
p31815
tp31816
I2
s(g20715
I42
g20716
Vinsert
p31817
I45
VStringLiteral: "VALUES (?, ?, ?, ?, ?\u005cn"
p31818
tp31819
I2
s(g9748
I42
g9749
Vinsert
p31820
I42
VSimpleName: x
p31821
tp31822
I2
s(g17311
I42
g17312
Vinsert
p31823
I42
VSimpleName: driverClass
p31824
tp31825
I1
s(Vinsert
p31826
I42
VSimpleName: size
p31827
Vinsert
p31828
I27
VInfixExpression: <
p31829
tp31830
I20
s(g9355
I42
g9356
Vinsert
p31831
I42
VSimpleName: lexer
p31832
tp31833
I2
s(g13001
I42
g13002
Vinsert
p31834
I45
VStringLiteral: "filters"
p31835
tp31836
I1
s(g20439
I42
g20440
Vinsert
p31837
I39
VPrimitiveType: int
p31838
tp31839
I1
s(g1
I42
g2
Vinsert
p31840
I31
VMethodDeclaration
p31841
tp31842
I1
s(g16354
I42
g16355
Vinsert
p31843
I32
VMethodInvocation
p31844
tp31845
I2
s(g9883
I42
g9884
Vinsert
p31846
I32
VMethodInvocation
p31847
tp31848
I3
s(g11624
I42
g11625
Vinsert
p31849
I42
VSimpleName: parent
p31850
tp31851
I3
s(g26521
I42
g26522
Vinsert
p31852
I42
VSimpleName: map
p31853
tp31854
I1
s(g23854
I42
g23855
Vinsert
p31855
I8
VBlock
p31856
tp31857
I1
s(g20100
I42
g20101
Vinsert
p31858
I40
VQualifiedName: Token.LPAREN
p31859
tp31860
I3
s(g17439
I42
g17440
Vinsert
p31861
I7
VAssignment: =
p31862
tp31863
I4
s(g13690
I42
g13691
Vinsert
p31864
I42
VSimpleName: evictList
p31865
tp31866
I1
s(g12901
I42
g12902
Vinsert
p31867
I21
VExpressionStatement
p31868
tp31869
I2
s(g25257
I42
g25258
Vinsert
p31870
I42
VSimpleName: DB2SelectQueryBlock
p31871
tp31872
I1
s(g15294
I42
g15295
Vinsert
p31873
I21
VExpressionStatement
p31874
tp31875
I3
s(g7827
I42
g7828
Vinsert
p31876
I32
VMethodInvocation
p31877
tp31878
I1
s(Vinsert
p31879
I42
VSimpleName: normalize
p31880
Vinsert
p31881
I8
VBlock
p31882
tp31883
I4
s(g7176
I42
g7177
Vinsert
p31884
I11
VCastExpression
p31885
tp31886
I1
s(Vinsert
p31887
I42
VSimpleName: setDbType
p31888
Vinsert
p31889
I42
VSimpleName: getProxyFilters
p31890
tp31891
I1
s(Vinsert
p31892
I42
VSimpleName: createExprParser
p31893
Vinsert
p31894
I42
VSimpleName: setInto
p31895
tp31896
I1
s(g7052
I42
g7053
Vinsert
p31897
I32
VMethodInvocation
p31898
tp31899
I2
s(g3836
I42
g3837
Vinsert
p31900
I42
VSimpleName: getObject
p31901
tp31902
I1
s(g26581
I42
g26582
Vinsert
p31903
I42
VSimpleName: String
p31904
tp31905
I1
s(Vinsert
p31906
I42
VSimpleName: visit
p31907
Vinsert
p31908
I42
VSimpleName: SQLStatement
p31909
tp31910
I4
s(g14917
I42
g14918
Vinsert
p31911
I45
VStringLiteral: "\u005ctJOIN (\u005cn"
p31912
tp31913
I1
s(g15345
I42
g15346
Vinsert
p31914
I60
VVariableDeclarationStatement
p31915
tp31916
I1
s(g5045
I42
g5046
Vinsert
p31917
I8
VBlock
p31918
tp31919
I3
s(Vinsert
p31920
I42
VSimpleName: getConnection
p31921
Vinsert
p31922
I42
VSimpleName: ds
p31923
tp31924
I1
s(g517
I42
g518
Vinsert
p31925
I42
VSimpleName: values
p31926
tp31927
I1
s(g20835
I42
g20836
Vinsert
p31928
I42
VSimpleName: HTableInterface
p31929
tp31930
I1
s(g31257
I42
g31258
Vinsert
p31931
I42
VSimpleName: getColumns
p31932
tp31933
I7
s(Vinsert
p31934
I42
VSimpleName: get
p31935
Vinsert
p31936
I42
VSimpleName: Integer
p31937
tp31938
I4
s(g8293
I42
g8294
Vinsert
p31939
I9
VBooleanLiteral: true
p31940
tp31941
I1
s(g24247
I42
g24248
Vinsert
p31942
I42
VSimpleName: getEntities
p31943
tp31944
I3
s(g7777
I42
g7778
Vinsert
p31945
I42
VSimpleName: String
p31946
tp31947
I1
s(g4040
I42
g4041
Vinsert
p31948
I42
VSimpleName: block
p31949
tp31950
I2
s(g19258
I42
g19259
Vinsert
p31951
I42
VSimpleName: assertNull
p31952
tp31953
I1
s(g20173
I42
g20174
Vinsert
p31954
I27
VInfixExpression: ==
p31955
tp31956
I5
s(Vinsert
p31957
I42
VSimpleName: createSQLStatementParser
p31958
Vinsert
p31959
I45
VStringLiteral: "select t.a,t.b from t where cast(t.statdate as decimal) >=20160626"
p31960
tp31961
I1
s(g20084
I42
g20085
Vinsert
p31962
I59
VVariableDeclarationFragment
p31963
tp31964
I1
s(g19880
I42
g19881
Vinsert
p31965
I42
VSimpleName: ident
p31966
tp31967
I4
s(g14933
I42
g14934
Vinsert
p31968
I31
VMethodDeclaration
p31969
tp31970
I1
s(g29367
I42
g29368
Vinsert
p31971
I45
VStringLiteral: "\u005cn)"
p31972
tp31973
I17
s(g617
I42
g618
Vinsert
p31974
I41
VReturnStatement
p31975
tp31976
I1
s(g3737
I42
g3738
Vinsert
p31977
I43
VSimpleType: SQLVariantRefExpr
p31978
tp31979
I1
s(g17769
I42
g17770
Vinsert
p31980
I45
VStringLiteral: "org.apache.phoenix.queryserver.client.Driver"
p31981
tp31982
I1
s(g9451
I42
g9452
Vinsert
p31983
I25
VIfStatement
p31984
tp31985
I1
s(g15621
I42
g15622
Vinsert
p31986
I42
VSimpleName: features
p31987
tp31988
I2
s(g1289
I42
g1290
Vinsert
p31989
I42
VSimpleName: x
p31990
tp31991
I3
s(g2819
I42
g2820
Vinsert
p31992
I44
VSingleVariableDeclaration
p31993
tp31994
I1
s(g419
I42
g420
Vinsert
p31995
I59
VVariableDeclarationFragment
p31996
tp31997
I1
s(g9312
I42
g9313
Vinsert
p31998
I42
VSimpleName: length
p31999
tp32000
I8
s(Vinsert
p32001
I42
VSimpleName: assertFalse
p32002
Vinsert
p32003
I45
VStringLiteral: "    AND 8600=CONVERT(INT,(SELECT CHAR(113)+CHAR(118)+CHAR(100)+CHAR(114)+CHAR(113)+(SELECT (CASE WHEN (8600=8600) THEN CHAR(49) ELSE CHAR(48) END))+CHAR(113)+CHAR(118)+CHAR(98)+CHAR(97)+CHAR(113))) AND '%'=''"
p32004
tp32005
I1
s(g11453
I42
g11454
Vinsert
p32006
I40
VQualifiedName: JdbcConstants.MYSQL
p32007
tp32008
I7
s(g15899
I42
g15900
Vinsert
p32009
I42
VSimpleName: assertEquals
p32010
tp32011
I1
s(g19461
I42
g19462
Vinsert
p32012
I42
VSimpleName: visit
p32013
tp32014
I2
s(g14749
I42
g14750
Vinsert
p32015
I43
VSimpleType: SQLIdentifierExpr
p32016
tp32017
I2
s(g4227
I42
g4228
Vinsert
p32018
I11
VCastExpression
p32019
tp32020
I1
s(g856
I42
g857
Vinsert
p32021
I42
VSimpleName: String
p32022
tp32023
I1
s(g2885
I42
g2886
Vinsert
p32024
I42
VSimpleName: parseInsert
p32025
tp32026
I1
s(g10571
I42
g10572
Vinsert
p32027
I16
VConditionalExpression
p32028
tp32029
I1
s(g22198
I42
g22199
Vinsert
p32030
I14
VClassInstanceCreation
p32031
tp32032
I1
s(g28663
I42
g28664
Vinsert
p32033
I45
VStringLiteral: "id"
p32034
tp32035
I2
s(g20782
I42
g20783
Vinsert
p32036
I43
VSimpleType: ArrayList
p32037
tp32038
I1
s(g557
I42
g558
Vinsert
p32039
I45
VStringLiteral: "\u005cn\u005ct\u005ctORDER BY id"
p32040
tp32041
I1
s(g3704
I42
g3705
Vinsert
p32042
I40
VQualifiedName: SQLBinaryOperator.BooleanAnd
p32043
tp32044
I1
s(g8716
I42
g8717
Vinsert
p32045
I32
VMethodInvocation
p32046
tp32047
I2
s(g11453
I42
g11454
Vinsert
p32048
I59
VVariableDeclarationFragment
p32049
tp32050
I13
s(g5719
I42
g5720
Vinsert
p32051
I42
VSimpleName: rawSql
p32052
tp32053
I1
s(g10368
I42
g10369
Vinsert
p32054
I42
VSimpleName: StackTraceElement
p32055
tp32056
I1
s(g13873
I42
g13874
Vinsert
p32057
I42
VSimpleName: limit
p32058
tp32059
I6
s(g10016
I42
g10017
Vinsert
p32060
I34
VNumberLiteral: 0
p32061
tp32062
I2
s(g23603
I42
g23604
Vinsert
p32063
I42
VSimpleName: parameters
p32064
tp32065
I4
s(g286
I42
g287
Vinsert
p32066
I7
VAssignment: =
p32067
tp32068
I2
s(Vinsert
p32069
I42
VSimpleName: setRemoveAbandoned
p32070
Vinsert
p32071
I43
VSimpleType: DruidDataSource
p32072
tp32073
I1
s(g6917
I42
g6918
Vinsert
p32074
I42
VSimpleName: PreparedStatementHolder
p32075
tp32076
I2
s(g27822
I42
g27823
Vinsert
p32077
I42
VSimpleName: alias_hash
p32078
tp32079
I2
s(g19152
I42
g19153
Vinsert
p32080
I2
VArrayAccess
p32081
tp32082
I6
s(g753
I42
g754
Vinsert
p32083
I42
VSimpleName: Map
p32084
tp32085
I1
s(g16935
I42
g16936
Vinsert
p32086
I42
VSimpleName: autoRegisterToGlobalTimer
p32087
tp32088
I2
s(g9657
I42
g9658
Vinsert
p32089
I43
VSimpleType: FileWriter
p32090
tp32091
I1
s(g5661
I42
g5662
Vinsert
p32092
I42
VSimpleName: methodName
p32093
tp32094
I1
s(g2639
I42
g2640
Vinsert
p32095
I32
VMethodInvocation
p32096
tp32097
I4
s(g1125
I42
g1126
Vinsert
p32098
I42
VSimpleName: conn
p32099
tp32100
I2
s(g2910
I42
g2911
Vinsert
p32101
I40
VQualifiedName: java.util.List
p32102
tp32103
I5
s(g881
I42
g882
Vinsert
p32104
I45
VStringLiteral: "usergroups"
p32105
tp32106
I1
s(Vinsert
p32107
I42
VSimpleName: getConnectionProxy
p32108
Vinsert
p32109
I42
VSimpleName: getDirectDataSource
p32110
tp32111
I1
s(Vinsert
p32112
I42
VSimpleName: setParent
p32113
Vinsert
p32114
I42
VSimpleName: equals
p32115
tp32116
I1
s(g16863
I42
g16864
Vinsert
p32117
I59
VVariableDeclarationFragment
p32118
tp32119
I6
s(g28698
I42
g28699
Vinsert
p32120
I27
VInfixExpression: !=
p32121
tp32122
I2
s(g16447
I42
g16448
Vinsert
p32123
I33
VNullLiteral
p32124
tp32125
I1
s(g14605
I42
g14606
Vinsert
p32126
I25
VIfStatement
p32127
tp32128
I1
s(Vinsert
p32129
I42
VSimpleName: accept
p32130
Vinsert
p32131
I45
VStringLiteral: "DISTRIBUTE BY "
p32132
tp32133
I1
s(g12222
I42
g12223
Vinsert
p32134
I42
VSimpleName: token
p32135
tp32136
I1
s(g7176
I42
g7177
Vinsert
p32137
I32
VMethodInvocation
p32138
tp32139
I5
s(g2383
I42
g2384
Vinsert
p32140
I45
VStringLiteral: "true"
p32141
tp32142
I1
s(g30336
I42
g30337
Vinsert
p32143
I42
VSimpleName: executeTimeNanosUpdater
p32144
tp32145
I1
s(g8075
I42
g8076
Vinsert
p32146
I27
VInfixExpression: ==
p32147
tp32148
I1
s(g6630
I42
g6631
Vinsert
p32149
I42
VSimpleName: tableSource
p32150
tp32151
I1
s(g4982
I42
g4983
Vinsert
p32152
I27
VInfixExpression: !=
p32153
tp32154
I1
s(g12173
I42
g12174
Vinsert
p32155
I40
VQualifiedName: ErrorCode.DELETE_NOT_ALLOW
p32156
tp32157
I1
s(g6313
I42
g6314
Vinsert
p32158
I42
VSimpleName: token
p32159
tp32160
I1
s(g10310
I42
g10311
Vinsert
p32161
I42
VSimpleName: get
p32162
tp32163
I1
s(g2672
I42
g2673
Vinsert
p32164
I42
VSimpleName: option
p32165
tp32166
I8
s(g17221
I42
g17222
Vinsert
p32167
I62
VInstanceofExpression
p32168
tp32169
I1
s(g9103
I42
g9104
Vinsert
p32170
I25
VIfStatement
p32171
tp32172
I1
s(g23113
I42
g23114
Vinsert
p32173
I34
VNumberLiteral: 1
p32174
tp32175
I1
s(g612
I42
g613
Vinsert
p32176
I32
VMethodInvocation
p32177
tp32178
I1
s(g5176
I42
g5177
Vinsert
p32179
I43
VSimpleType: SQLName
p32180
tp32181
I2
s(g9608
I42
g9609
Vinsert
p32182
I43
VSimpleType: KeyFactory
p32183
tp32184
I1
s(g1241
I42
g1242
Vinsert
p32185
I42
VSimpleName: DruidDataSource
p32186
tp32187
I2
s(Vinsert
p32188
I42
VSimpleName: setKey
p32189
Vinsert
p32190
I43
VSimpleType: HMappingColumn
p32191
tp32192
I2
s(g4303
I42
g4304
Vinsert
p32193
I45
VStringLiteral: "\u005ctIS\u005cn"
p32194
tp32195
I3
s(g5460
I42
g5461
Vinsert
p32196
I8
VBlock
p32197
tp32198
I1
s(g29844
I42
g29845
Vinsert
p32199
I42
VSimpleName: put
p32200
tp32201
I2
s(Vinsert
p32202
I42
VSimpleName: toPGString
p32203
Vinsert
p32204
I45
VStringLiteral: "LIMIT 1"
p32205
tp32206
I1
s(g28425
I42
g28426
Vinsert
p32207
I42
VSimpleName: columnConsumer
p32208
tp32209
I1
s(g3149
I42
g3150
Vinsert
p32210
I43
VSimpleType: SQLTableSource
p32211
tp32212
I1
s(g464
I42
g465
Vinsert
p32213
I21
VExpressionStatement
p32214
tp32215
I2
s(g1002
I42
g1003
Vinsert
p32216
I42
VSimpleName: invokeCount
p32217
tp32218
I1
s(g6755
I42
g6756
Vinsert
p32219
I11
VCastExpression
p32220
tp32221
I2
s(g9267
I42
g9268
Vinsert
p32222
I42
VSimpleName: entryIndex
p32223
tp32224
I1
s(g21598
I42
g21599
Vinsert
p32225
I43
VSimpleType: SQLSelectOrderByItem
p32226
tp32227
I3
s(g9883
I42
g9884
Vinsert
p32228
I33
VNullLiteral
p32229
tp32230
I1
s(g9662
I42
g9663
Vinsert
p32231
I45
VStringLiteral: "<<"
p32232
tp32233
I1
s(g6943
I42
g6944
Vinsert
p32234
I43
VSimpleType: Thread
p32235
tp32236
I2
s(g30141
I42
g30142
Vinsert
p32237
I42
VSimpleName: chain
p32238
tp32239
I3
s(g5287
I42
g5288
Vinsert
p32240
I32
VMethodInvocation
p32241
tp32242
I278
s(g4921
I42
g4922
Vinsert
p32243
I42
VSimpleName: print0
p32244
tp32245
I1
s(g1815
I42
g1816
Vinsert
p32246
I42
VSimpleName: printExpr
p32247
tp32248
I2
s(g14083
I42
g14084
Vinsert
p32249
I32
VMethodInvocation
p32250
tp32251
I4
s(g947
I42
g948
Vinsert
p32252
I32
VMethodInvocation
p32253
tp32254
I17
s(g24102
I42
g24103
Vinsert
p32255
I42
VSimpleName: invokeRes
p32256
tp32257
I1
s(g3579
I42
g3580
Vinsert
p32258
I45
VStringLiteral: ")"
p32259
tp32260
I1
s(g24526
I42
g24527
Vinsert
p32261
I42
VSimpleName: context
p32262
tp32263
I1
s(g14730
I42
g14731
Vinsert
p32264
I41
VReturnStatement
p32265
tp32266
I101
s(g9704
I42
g9705
Vinsert
p32267
I43
VSimpleType: JTable
p32268
tp32269
I1
s(g4288
I42
g4289
Vinsert
p32270
I39
VPrimitiveType: void
p32271
tp32272
I2
s(g1425
I42
g1426
Vinsert
p32273
I42
VSimpleName: String
p32274
tp32275
I1
s(g15991
I42
g15992
Vinsert
p32276
I70
VEnhancedForStatement
p32277
tp32278
I2
s(g13886
I42
g13887
Vinsert
p32279
I42
VSimpleName: BasicDataSource
p32280
tp32281
I8
s(g3271
I42
g3272
Vinsert
p32282
I21
VExpressionStatement
p32283
tp32284
I2
s(g10333
I42
g10334
Vinsert
p32285
I42
VSimpleName: WallCheckResult
p32286
tp32287
I2
s(g7512
I42
g7513
Vinsert
p32288
I42
VSimpleName: error
p32289
tp32290
I2
s(g19924
I42
g19925
Vinsert
p32291
I43
VSimpleType: Exception
p32292
tp32293
I1
s(g19412
I42
g19413
Vinsert
p32294
I45
VStringLiteral: "\u005cnselect * from table2;;select * from table3;"
p32295
tp32296
I1
s(g9483
I42
g9484
Vinsert
p32297
I43
VSimpleType: Properties
p32298
tp32299
I1
s(g2248
I42
g2249
Vinsert
p32300
I42
VSimpleName: identExpr
p32301
tp32302
I1
s(g21190
I42
g21191
Vinsert
p32303
I45
VStringLiteral: "\u005ctWHERE customer_id = acc_no;\u005cn"
p32304
tp32305
I1
s(Vinsert
p32306
I42
VSimpleName: visit
p32307
Vinsert
p32308
I42
VSimpleName: orderingColumn
p32309
tp32310
I1
s(g13331
I42
g13332
Vinsert
p32311
I43
VSimpleType: com.mysql.jdbc.ConnectionImpl
p32312
tp32313
I1
s(g21572
I42
g21573
Vinsert
p32314
I52
VThisExpression
p32315
tp32316
I1
s(g13326
I42
g13327
Vinsert
p32317
I42
VSimpleName: SQLSelect
p32318
tp32319
I4
s(g8399
I42
g8400
Vinsert
p32320
I39
VPrimitiveType: void
p32321
tp32322
I1
s(g31691
I42
g31692
Vinsert
p32323
I43
VSimpleType: MySqlSelectQueryBlock
p32324
tp32325
I28
s(g7547
I42
g7548
Vinsert
p32326
I45
VStringLiteral: "\u005ctc_varchar varchar(10),\u005cn"
p32327
tp32328
I2
s(g16335
I42
g16336
Vinsert
p32329
I32
VMethodInvocation
p32330
tp32331
I4
s(g25513
I42
g25514
Vinsert
p32332
I45
VStringLiteral: "end"
p32333
tp32334
I1
s(g6755
I42
g6756
Vinsert
p32335
I59
VVariableDeclarationFragment
p32336
tp32337
I1
s(g12547
I42
g12548
Vinsert
p32338
I42
VSimpleName: String
p32339
tp32340
I38
s(g10333
I42
g10334
Vinsert
p32341
I42
VSimpleName: sqlStat
p32342
tp32343
I2
s(g29475
I42
g29476
Vinsert
p32344
I42
VSimpleName: from
p32345
tp32346
I1
s(g20835
I42
g20836
Vinsert
p32347
I42
VSimpleName: String
p32348
tp32349
I2
s(Vinsert
p32350
I42
VSimpleName: getParameters
p32351
Vinsert
p32352
I42
VSimpleName: expr
p32353
tp32354
I1
s(g14904
I42
g14905
Vinsert
p32355
I42
VSimpleName: pstmt
p32356
tp32357
I2
s(g20856
I42
g20857
Vinsert
p32358
I59
VVariableDeclarationFragment
p32359
tp32360
I2
s(g9919
I42
g9920
Vinsert
p32361
I52
VThisExpression
p32362
tp32363
I4
s(g7965
I42
g7966
Vinsert
p32364
I44
VSingleVariableDeclaration
p32365
tp32366
I1
s(g56
I42
g57
Vinsert
p32367
I32
VMethodInvocation
p32368
tp32369
I2
s(g11325
I42
g11326
Vinsert
p32370
I32
VMethodInvocation
p32371
tp32372
I3
s(g18496
I42
g18497
Vinsert
p32373
I25
VIfStatement
p32374
tp32375
I1
s(g2268
I42
g2269
Vinsert
p32376
I7
VAssignment: =
p32377
tp32378
I1
s(g6663
I42
g6664
Vinsert
p32379
I42
VSimpleName: config
p32380
tp32381
I2
s(g15407
I42
g15408
Vinsert
p32382
I32
VMethodInvocation
p32383
tp32384
I3
s(g3544
I42
g3545
Vinsert
p32385
I45
VStringLiteral: "\u005ct\u005ctlateral view explode(t1.os) t2 as os\u005cn"
p32386
tp32387
I1
s(g7288
I42
g7289
Vinsert
p32388
I42
VSimpleName: sqlStat
p32389
tp32390
I2
s(g20725
I42
g20726
Vinsert
p32391
I42
VSimpleName: Assert
p32392
tp32393
I4
s(g1007
I42
g1008
Vinsert
p32394
I42
VSimpleName: exprParser
p32395
tp32396
I1
s(g5123
I42
g5124
Vinsert
p32397
I8
VBlock
p32398
tp32399
I1
s(g12184
I42
g12185
Vinsert
p32400
I42
VSimpleName: SQLAlterTableAddForeignKey
p32401
tp32402
I2
s(g7996
I42
g7997
Vinsert
p32403
I27
VInfixExpression: !=
p32404
tp32405
I3
s(g5638
I42
g5639
Vinsert
p32406
I42
VSimpleName: Override
p32407
tp32408
I1
s(g8298
I42
g8299
Vinsert
p32409
I21
VExpressionStatement
p32410
tp32411
I136
s(g1996
I42
g1997
Vinsert
p32412
I42
VSimpleName: ucase
p32413
tp32414
I1
s(g13593
I42
g13594
Vinsert
p32415
I42
VSimpleName: dataSource
p32416
tp32417
I5
s(g17769
I42
g17770
Vinsert
p32418
I45
VStringLiteral: "jdbc:phoenix:thin:"
p32419
tp32420
I1
s(g7224
I42
g7225
Vinsert
p32421
I42
VSimpleName: dataTypeName
p32422
tp32423
I2
s(g26013
I42
g26014
Vinsert
p32424
I42
VSimpleName: JdbcUtils
p32425
tp32426
I1
s(g18477
I42
g18478
Vinsert
p32427
I42
VSimpleName: getTableStat
p32428
tp32429
I2
s(g21061
I42
g21062
Vinsert
p32430
I42
VSimpleName: panel
p32431
tp32432
I1
s(g2329
I42
g2330
Vinsert
p32433
I45
VStringLiteral: "druid.useGloalDataSourceStat"
p32434
tp32435
I1
s(Vinsert
p32436
I42
VSimpleName: setParent
p32437
Vinsert
p32438
I42
VSimpleName: column
p32439
tp32440
I46
s(g7052
I42
g7053
Vinsert
p32441
I42
VSimpleName: nextFilter
p32442
tp32443
I1
s(g23258
I42
g23259
Vinsert
p32444
I11
VCastExpression
p32445
tp32446
I1
s(g22782
I42
g22783
Vinsert
p32447
I42
VSimpleName: setDomain
p32448
tp32449
I1
s(g9569
I42
g9570
Vinsert
p32450
I54
VTryStatement
p32451
tp32452
I1
s(g266
I42
g267
Vinsert
p32453
I40
VQualifiedName: StatementType.SELECT
p32454
tp32455
I1
s(g19810
I42
g19811
Vinsert
p32456
I27
VInfixExpression: !=
p32457
tp32458
I1
s(g11051
I42
g11052
Vinsert
p32459
I42
VSimpleName: x
p32460
tp32461
I3
s(g26265
I42
g26266
Vinsert
p32462
I43
VSimpleType: SQLCreateViewStatement
p32463
tp32464
I1
s(g19823
I42
g19824
Vinsert
p32465
I42
VSimpleName: removeAbandoned
p32466
tp32467
I1
s(g28507
I42
g28508
Vinsert
p32468
I42
VSimpleName: tryCount
p32469
tp32470
I1
s(Vinsert
p32471
I42
VSimpleName: info
p32472
Vinsert
p32473
I45
VStringLiteral: "syntax error. "
p32474
tp32475
I7
s(g30855
I42
g30856
Vinsert
p32476
I42
VSimpleName: exceptionSoter
p32477
tp32478
I2
s(g2208
I42
g2209
Vinsert
p32479
I42
VSimpleName: test_3
p32480
tp32481
I1
s(g6126
I42
g6127
Vinsert
p32482
I8
VBlock
p32483
tp32484
I1
s(g7512
I42
g7513
Vinsert
p32485
I43
VSimpleType: SQLException
p32486
tp32487
I1
s(g6684
I42
g6685
Vinsert
p32488
I60
VVariableDeclarationStatement
p32489
tp32490
I5
s(g5045
I42
g5046
Vinsert
p32491
I42
VSimpleName: x
p32492
tp32493
I5
s(Vinsert
p32494
I42
VSimpleName: setValue
p32495
Vinsert
p32496
I42
VSimpleName: PGPointExpr
p32497
tp32498
I2
s(g24641
I42
g24642
Vinsert
p32499
I13
VCharacterLiteral: ' '
p32500
tp32501
I1
s(g6966
I42
g6967
Vinsert
p32502
I42
VSimpleName: intoExpr
p32503
tp32504
I1
s(g2364
I42
g2365
Vinsert
p32505
I42
VSimpleName: decryptedBytes
p32506
tp32507
I1
s(Vinsert
p32508
I42
VSimpleName: nextToken
p32509
Vinsert
p32510
I42
VSimpleName: setNoWait
p32511
tp32512
I1
s(g31563
I42
g31564
Vinsert
p32513
I42
VSimpleName: size
p32514
tp32515
I2
s(g937
I42
g938
Vinsert
p32516
I42
VSimpleName: HexBin
p32517
tp32518
I1
s(Vinsert
p32519
I42
VSimpleName: close
p32520
Vinsert
p32521
I42
VSimpleName: MySQLException
p32522
tp32523
I1
s(g7631
I42
g7632
Vinsert
p32524
I21
VExpressionStatement
p32525
tp32526
I2
s(g4308
I42
g4309
Vinsert
p32527
I21
VExpressionStatement
p32528
tp32529
I1
s(Vinsert
p32530
I42
VSimpleName: setType
p32531
Vinsert
p32532
I45
VStringLiteral: "SCN"
p32533
tp32534
I1
s(g4362
I42
g4363
Vinsert
p32535
I42
VSimpleName: tableName
p32536
tp32537
I1
s(g12354
I42
g12355
Vinsert
p32538
I42
VSimpleName: holder
p32539
tp32540
I2
s(g16648
I42
g16649
Vinsert
p32541
I43
VSimpleType: String
p32542
tp32543
I2
s(Vinsert
p32544
I42
VSimpleName: endVisit
p32545
Vinsert
p32546
I42
VSimpleName: endVisit
p32547
tp32548
I5
s(g26160
I42
g26161
Vinsert
p32549
I42
VSimpleName: x
p32550
tp32551
I1
s(g8038
I42
g8039
Vinsert
p32552
I32
VMethodInvocation
p32553
tp32554
I4
s(g14597
I42
g14598
Vinsert
p32555
I42
VSimpleName: tableStmt
p32556
tp32557
I1
s(g10542
I42
g10543
Vinsert
p32558
I42
VSimpleName: hash_lower
p32559
tp32560
I1
s(g14497
I42
g14498
Vinsert
p32561
I42
VSimpleName: getCachedPreparedStatementAccessCount
p32562
tp32563
I1
s(g5633
I42
g5634
Vinsert
p32564
I12
VCatchClause
p32565
tp32566
I6
s(Vinsert
p32567
I42
VSimpleName: getName
p32568
Vinsert
p32569
I43
VSimpleType: MySqlShowCreateProcedureStatement
p32570
tp32571
I1
s(Vinsert
p32572
I42
VSimpleName: println
p32573
Vinsert
p32574
I42
VSimpleName: statementList
p32575
tp32576
I13
s(g16551
I42
g16552
Vinsert
p32577
I34
VNumberLiteral: 0
p32578
tp32579
I6
s(g856
I42
g857
Vinsert
p32580
I39
VPrimitiveType: void
p32581
tp32582
I1
s(g6737
I42
g6738
Vinsert
p32583
I85
VDimension
p32584
tp32585
I1
s(g7947
I42
g7948
Vinsert
p32586
I9
VBooleanLiteral: false
p32587
tp32588
I5
s(Vinsert
p32589
I42
VSimpleName: accept
p32590
Vinsert
p32591
I42
VSimpleName: getElseIfList
p32592
tp32593
I1
s(Vinsert
p32594
I42
VSimpleName: getPartitions
p32595
Vinsert
p32596
I34
VNumberLiteral: 0
p32597
tp32598
I3
s(g8734
I42
g8735
Vinsert
p32599
I42
VSimpleName: stmt
p32600
tp32601
I1
s(g19190
I42
g19191
Vinsert
p32602
I42
VSimpleName: Statement
p32603
tp32604
I5
s(g17539
I42
g17540
Vinsert
p32605
I42
VSimpleName: String
p32606
tp32607
I103
s(g5292
I42
g5293
Vinsert
p32608
I42
VSimpleName: SQLUtils
p32609
tp32610
I18
s(g22603
I42
g22604
Vinsert
p32611
I52
VThisExpression
p32612
tp32613
I1
s(g7245
I42
g7246
Vinsert
p32614
I42
VSimpleName: SQLException
p32615
tp32616
I1
s(Vinsert
p32617
I42
VSimpleName: getMethod
p32618
Vinsert
p32619
I42
VSimpleName: driver
p32620
tp32621
I1
s(g9639
I42
g9640
Vinsert
p32622
I45
VStringLiteral: "\u005ct\u005ct\u005ctRESULT := '1';\u005cn"
p32623
tp32624
I1
s(g1770
I42
g1771
Vinsert
p32625
I42
VSimpleName: Exception
p32626
tp32627
I6
s(Vinsert
p32628
I42
VSimpleName: equals
p32629
Vinsert
p32630
I42
VSimpleName: NullsOrderType
p32631
tp32632
I1
s(Vinsert
p32633
I42
VSimpleName: getColumn
p32634
Vinsert
p32635
I42
VSimpleName: ucase
p32636
tp32637
I1
s(g9307
I42
g9308
Vinsert
p32638
I43
VSimpleType: String
p32639
tp32640
I1
s(g1780
I42
g1781
Vinsert
p32641
I40
VQualifiedName: com.alibaba.druid.util.JdbcUtils
p32642
tp32643
I1
s(g6298
I42
g6299
Vinsert
p32644
I59
VVariableDeclarationFragment
p32645
tp32646
I4
s(g12565
I42
g12566
Vinsert
p32647
I8
VBlock
p32648
tp32649
I25
s(g4684
I42
g4685
Vinsert
p32650
I42
VSimpleName: expr
p32651
tp32652
I1
s(g6650
I42
g6651
Vinsert
p32653
I42
VSimpleName: getFirstQueryBlock
p32654
tp32655
I1
s(Vinsert
p32656
I42
VSimpleName: setExpr
p32657
Vinsert
p32658
I42
VSimpleName: OracleDatetimeExpr
p32659
tp32660
I2
s(g8964
I42
g8965
Vinsert
p32661
I42
VSimpleName: toString
p32662
tp32663
I1
s(g1903
I42
g1904
Vinsert
p32664
I25
VIfStatement
p32665
tp32666
I2
s(g2499
I42
g2500
Vinsert
p32667
I45
VStringLiteral: "INDEX "
p32668
tp32669
I1
s(g12555
I42
g12556
Vinsert
p32670
I43
VSimpleType: Object
p32671
tp32672
I1
s(g14160
I42
g14161
Vinsert
p32673
I41
VReturnStatement
p32674
tp32675
I1
s(g11925
I42
g11926
Vinsert
p32676
I42
VSimpleName: isLogEnable
p32677
tp32678
I1
s(g17793
I42
g17794
Vinsert
p32679
I45
VStringLiteral: "java.naming.factory.initial"
p32680
tp32681
I1
s(g1155
I42
g1156
Vinsert
p32682
I42
VSimpleName: print
p32683
tp32684
I1
s(g8113
I42
g8114
Vinsert
p32685
I42
VSimpleName: getName
p32686
tp32687
I1
s(g6197
I42
g6198
Vinsert
p32688
I43
VSimpleType: SQLSelectOrderByItem
p32689
tp32690
I1
s(g391
I42
g392
Vinsert
p32691
I39
VPrimitiveType: boolean
p32692
tp32693
I1
s(g29813
I42
g29814
Vinsert
p32694
I42
VSimpleName: item
p32695
tp32696
I1
s(g11150
I42
g11151
Vinsert
p32697
I59
VVariableDeclarationFragment
p32698
tp32699
I31
s(g15209
I42
g15210
Vinsert
p32700
I45
VStringLiteral: "PACKAGE"
p32701
tp32702
I1
s(g2824
I42
g2825
Vinsert
p32703
I43
VSimpleType: Function
p32704
tp32705
I5
s(g5333
I42
g5334
Vinsert
p32706
I40
VQualifiedName: Types.FLOAT
p32707
tp32708
I1
s(g16460
I42
g16461
Vinsert
p32709
I40
VQualifiedName: System.out
p32710
tp32711
I1
s(Vinsert
p32712
I42
VSimpleName: append
p32713
Vinsert
p32714
I42
VSimpleName: FieldInfo
p32715
tp32716
I1
s(g15766
I42
g15767
Vinsert
p32717
I42
VSimpleName: query
p32718
tp32719
I1
s(g4075
I42
g4076
Vinsert
p32720
I42
VSimpleName: fieldInfo
p32721
tp32722
I2
s(g10874
I42
g10875
Vinsert
p32723
I21
VExpressionStatement
p32724
tp32725
I3
s(g16586
I42
g16587
Vinsert
p32726
I83
VModifier: public
p32727
tp32728
I3
s(g28107
I42
g28108
Vinsert
p32729
I49
VSwitchCase
p32730
tp32731
I1
s(g12173
I42
g12174
Vinsert
p32732
I40
VQualifiedName: ErrorCode.INSERT_NOT_ALLOW
p32733
tp32734
I1
s(g26778
I42
g26779
Vinsert
p32735
I43
VSimpleType: SQLException
p32736
tp32737
I1
s(Vinsert
p32738
I42
VSimpleName: nextToken
p32739
Vinsert
p32740
I19
VDoStatement
p32741
tp32742
I1
s(g3355
I42
g3356
Vinsert
p32743
I42
VSimpleName: getRow
p32744
tp32745
I1
s(g11795
I42
g11796
Vinsert
p32746
I42
VSimpleName: isExceptionFatal
p32747
tp32748
I1
s(g7720
I42
g7721
Vinsert
p32749
I42
VSimpleName: List
p32750
tp32751
I3
s(g10422
I42
g10423
Vinsert
p32752
I43
VSimpleType: Exception
p32753
tp32754
I2
s(g16208
I42
g16209
Vinsert
p32755
I42
VSimpleName: setPoolPreparedStatements
p32756
tp32757
I1
s(g2727
I42
g2728
Vinsert
p32758
I60
VVariableDeclarationStatement
p32759
tp32760
I1
s(Vinsert
p32761
I42
VSimpleName: replaceAll
p32762
Vinsert
p32763
I45
VStringLiteral: "''"
p32764
tp32765
I1
s(Vinsert
p32766
I42
VSimpleName: parseStatementList
p32767
Vinsert
p32768
I40
VQualifiedName: SQLParserFeature.KeepInsertValueClauseOriginalString
p32769
tp32770
I1
s(Vinsert
p32771
I42
VSimpleName: getTables
p32772
Vinsert
p32773
I42
VSimpleName: MySqlSchemaStatVisitor
p32774
tp32775
I20
s(g23392
I42
g23393
Vinsert
p32776
I42
VSimpleName: IdentityHashMap
p32777
tp32778
I1
s(g12611
I42
g12612
Vinsert
p32779
I27
VInfixExpression: +
p32780
tp32781
I3
s(Vinsert
p32782
I42
VSimpleName: decode
p32783
Vinsert
p32784
I42
VSimpleName: SQLExprImpl
p32785
tp32786
I2
s(g7201
I42
g7202
Vinsert
p32787
I33
VNullLiteral
p32788
tp32789
I1
s(g29554
I42
g29555
Vinsert
p32790
I7
VAssignment: +=
p32791
tp32792
I1
s(g15087
I42
g15088
Vinsert
p32793
I42
VSimpleName: MBeanServer
p32794
tp32795
I1
s(g3447
I42
g3448
Vinsert
p32796
I32
VMethodInvocation
p32797
tp32798
I4
s(Vinsert
p32799
I42
VSimpleName: get
p32800
Vinsert
p32801
I42
VSimpleName: incrementAndGet
p32802
tp32803
I1
s(g2852
I42
g2853
Vinsert
p32804
I83
VModifier: public
p32805
tp32806
I1
s(g30808
I42
g30809
Vinsert
p32807
I43
VSimpleType: MySqlSetNamesStatement
p32808
tp32809
I1
s(Vinsert
p32810
I42
VSimpleName: containsColumn
p32811
Vinsert
p32812
I45
VStringLiteral: "file_name"
p32813
tp32814
I1
s(g404
I42
g405
Vinsert
p32815
I45
VStringLiteral: "\u005ctAND s.cust_id = c.cust_id\u005cn"
p32816
tp32817
I1
s(g9982
I42
g9983
Vinsert
p32818
I45
VStringLiteral: "\u005ctEXECUTE IMMEDIATE plsql_block USING 7788, 500;\u005cn"
p32819
tp32820
I1
s(g5040
I42
g5041
Vinsert
p32821
I59
VVariableDeclarationFragment
p32822
tp32823
I1
s(g21190
I42
g21191
Vinsert
p32824
I45
VStringLiteral: "\u005ctFROM orders\u005cn"
p32825
tp32826
I1
s(g11659
I42
g11660
Vinsert
p32827
I34
VNumberLiteral: 8
p32828
tp32829
I1
s(g9317
I42
g9318
Vinsert
p32830
I42
VSimpleName: MySqlUpdateTableSource
p32831
tp32832
I1
s(Vinsert
p32833
I42
VSimpleName: getRestartIdentity
p32834
Vinsert
p32835
I42
VSimpleName: x
p32836
tp32837
I2
s(g987
I42
g988
Vinsert
p32838
I42
VSimpleName: error
p32839
tp32840
I1
s(g3218
I42
g3219
Vinsert
p32841
I42
VSimpleName: print
p32842
tp32843
I1
s(g24206
I42
g24207
Vinsert
p32844
I45
VStringLiteral: "\u005ct\u005ctTABLESPACE HASH_TS03\u005cn"
p32845
tp32846
I1
s(Vinsert
p32847
I42
VSimpleName: append
p32848
Vinsert
p32849
I27
VInfixExpression: !=
p32850
tp32851
I11
s(Vinsert
p32852
I42
VSimpleName: visit
p32853
Vinsert
p32854
I42
VSimpleName: subQuery
p32855
tp32856
I2
s(g1027
I42
g1028
Vinsert
p32857
I42
VSimpleName: x
p32858
tp32859
I2
s(g27722
I42
g27723
Vinsert
p32860
I42
VSimpleName: resultSetType
p32861
tp32862
I1
s(g1765
I42
g1766
Vinsert
p32863
I45
VStringLiteral: "relationships : "
p32864
tp32865
I4
s(g26374
I42
g26375
Vinsert
p32866
I42
VSimpleName: nextToken
p32867
tp32868
I23
s(g1448
I42
g1449
Vinsert
p32869
I39
VPrimitiveType: int
p32870
tp32871
I5
s(g16200
I42
g16201
Vinsert
p32872
I60
VVariableDeclarationStatement
p32873
tp32874
I1
s(Vinsert
p32875
I42
VSimpleName: get
p32876
Vinsert
p32877
I42
VSimpleName: Set
p32878
tp32879
I2
s(g1765
I42
g1766
Vinsert
p32880
I42
VSimpleName: println
p32881
tp32882
I9
s(g81
I42
g82
Vinsert
p32883
I32
VMethodInvocation
p32884
tp32885
I1
s(g31385
I42
g31386
Vinsert
p32886
I42
VSimpleName: getMessage
p32887
tp32888
I3
s(g7960
I42
g7961
Vinsert
p32889
I42
VSimpleName: rows
p32890
tp32891
I1
s(g577
I42
g578
Vinsert
p32892
I42
VSimpleName: nameEquals
p32893
tp32894
I3
s(g10571
I42
g10572
Vinsert
p32895
I39
VPrimitiveType: int
p32896
tp32897
I8
s(g9327
I42
g9328
Vinsert
p32898
I27
VInfixExpression: ==
p32899
tp32900
I1
s(g18907
I42
g18908
Vinsert
p32901
I45
VStringLiteral: "        DROP COLUMN diff_value_2,\u005cn"
p32902
tp32903
I1
s(g2464
I42
g2465
Vinsert
p32904
I60
VVariableDeclarationStatement
p32905
tp32906
I1
s(g5615
I42
g5616
Vinsert
p32907
I42
VSimpleName: test_connectionCustomizerClassName
p32908
tp32909
I1
s(g4548
I42
g4549
Vinsert
p32910
I42
VSimpleName: OracleSchemaStatVisitor
p32911
tp32912
I34
s(g5002
I42
g5003
Vinsert
p32913
I43
VSimpleType: MonitorContext
p32914
tp32915
I1
s(g4824
I42
g4825
Vinsert
p32916
I42
VSimpleName: SQLException
p32917
tp32918
I1
s(g3569
I42
g3570
Vinsert
p32919
I27
VInfixExpression: !=
p32920
tp32921
I1
s(g13617
I42
g13618
Vinsert
p32922
I42
VSimpleName: visitor
p32923
tp32924
I1
s(g7477
I42
g7478
Vinsert
p32925
I42
VSimpleName: id
p32926
tp32927
I1
s(g6694
I42
g6695
Vinsert
p32928
I25
VIfStatement
p32929
tp32930
I3
s(g25675
I42
g25676
Vinsert
p32931
I42
VSimpleName: transactionInfo
p32932
tp32933
I3
s(Vinsert
p32934
I42
VSimpleName: println
p32935
Vinsert
p32936
I42
VSimpleName: SQLTimestampExpr
p32937
tp32938
I2
s(g5543
I42
g5544
Vinsert
p32939
I22
VFieldAccess
p32940
tp32941
I3
s(g9307
I42
g9308
Vinsert
p32942
I52
VThisExpression
p32943
tp32944
I1
s(g30607
I42
g30608
Vinsert
p32945
I45
VStringLiteral: "PARALLEL_ENABLE\u005cn"
p32946
tp32947
I1
s(Vinsert
p32948
I42
VSimpleName: assertEquals
p32949
Vinsert
p32950
I45
VStringLiteral: "SELECT pageid, adid FROM pageAds LATERAL VIEW explode(adid_list) adTable AS adid;"
p32951
tp32952
I1
s(g10813
I42
g10814
Vinsert
p32953
I42
VSimpleName: sql
p32954
tp32955
I9
s(Vinsert
p32956
I42
VSimpleName: put
p32957
Vinsert
p32958
I42
VSimpleName: value
p32959
tp32960
I3
s(g10159
I42
g10160
Vinsert
p32961
I34
VNumberLiteral: 2
p32962
tp32963
I1
s(Vinsert
p32964
I42
VSimpleName: assertTrue
p32965
Vinsert
p32966
I42
VSimpleName: MySqlWallTest21
p32967
tp32968
I1
s(g1760
I42
g1761
Vinsert
p32969
I42
VSimpleName: scheduleAtFixedRate
p32970
tp32971
I1
s(g6587
I42
g6588
Vinsert
p32972
I45
VStringLiteral: "SET "
p32973
tp32974
I1
s(g469
I42
g470
Vinsert
p32975
I25
VIfStatement
p32976
tp32977
I6
s(g15345
I42
g15346
Vinsert
p32978
I12
VCatchClause
p32979
tp32980
I1
s(g4640
I42
g4641
Vinsert
p32981
I42
VSimpleName: Assert
p32982
tp32983
I1
s(g336
I42
g337
Vinsert
p32984
I42
VSimpleName: SQLIdentifierExpr
p32985
tp32986
I1
s(g20856
I42
g20857
Vinsert
p32987
I42
VSimpleName: createExprParser
p32988
tp32989
I1
s(g6587
I42
g6588
Vinsert
p32990
I16
VConditionalExpression
p32991
tp32992
I1
s(g5685
I42
g5686
Vinsert
p32993
I42
VSimpleName: rowCountExpr
p32994
tp32995
I1
s(g18078
I42
g18079
Vinsert
p32996
I45
VStringLiteral: "\u005ct\u005ct, isdept, type, selfcode, POS, createdate\u005cn"
p32997
tp32998
I1
s(Vinsert
p32999
I42
VSimpleName: toMySqlString
p33000
Vinsert
p33001
I45
VStringLiteral: "replace into t1 (id, name)\u005cn"
p33002
tp33003
I1
s(Vinsert
p33004
I42
VSimpleName: newUpdater
p33005
Vinsert
p33006
I43
VSimpleType: WallSqlStat
p33007
tp33008
I1
s(g21770
I42
g21771
Vinsert
p33009
I45
VStringLiteral: "[Order_ID] varchar(255) NOT NULL\u005cn"
p33010
tp33011
I1
s(g2329
I42
g2330
Vinsert
p33012
I8
VBlock
p33013
tp33014
I1
s(g11696
I42
g11697
Vinsert
p33015
I45
VStringLiteral: "JOIN ktv_epm.ktv_eq_rma_header rma ON rma.rma_id = rbi.rma_id \u005cn"
p33016
tp33017
I1
s(Vinsert
p33018
I42
VSimpleName: getRight
p33019
Vinsert
p33020
I42
VSimpleName: last
p33021
tp33022
I1
s(g29718
I42
g29719
Vinsert
p33023
I45
VStringLiteral: "\u005cn\u005ctPRIMARY KEY (\u005c"ID\u005c")"
p33024
tp33025
I5
s(g7399
I42
g7400
Vinsert
p33026
I34
VNumberLiteral: 0
p33027
tp33028
I1
s(Vinsert
p33029
I42
VSimpleName: setConnectionProperties
p33030
Vinsert
p33031
I42
VSimpleName: setTestOnReturn
p33032
tp33033
I2
s(g25389
I42
g25390
Vinsert
p33034
I42
VSimpleName: oracleConnection
p33035
tp33036
I1
s(g21778
I42
g21779
Vinsert
p33037
I42
VSimpleName: collectPeriodSeconds
p33038
tp33039
I3
s(g4987
I42
g4988
Vinsert
p33040
I27
VInfixExpression: !=
p33041
tp33042
I1
s(g17311
I42
g17312
Vinsert
p33043
I42
VSimpleName: jdbcUrl
p33044
tp33045
I1
s(g21612
I42
g21613
Vinsert
p33046
I45
VStringLiteral: "5''CN'"
p33047
tp33048
I1
s(g4217
I42
g4218
Vinsert
p33049
I42
VSimpleName: item
p33050
tp33051
I6
s(g18531
I42
g18532
Vinsert
p33052
I45
VStringLiteral: "tx_read_only"
p33053
tp33054
I2
s(g311
I42
g312
Vinsert
p33055
I42
VSimpleName: createStatement
p33056
tp33057
I1
s(g3495
I42
g3496
Vinsert
p33058
I8
VBlock
p33059
tp33060
I3
s(g4227
I42
g4228
Vinsert
p33061
I43
VSimpleType: Integer
p33062
tp33063
I1
s(g17769
I42
g17770
Vinsert
p33064
I42
VSimpleName: rawUrl
p33065
tp33066
I13
s(g13569
I42
g13570
Vinsert
p33067
I39
VPrimitiveType: boolean
p33068
tp33069
I2
s(g12235
I42
g12236
Vinsert
p33070
I8
VBlock
p33071
tp33072
I1
s(g1271
I42
g1272
Vinsert
p33073
I27
VInfixExpression: &&
p33074
tp33075
I1
s(g13538
I42
g13539
Vinsert
p33076
I42
VSimpleName: dataSourceB
p33077
tp33078
I1
s(Vinsert
p33079
I42
VSimpleName: setMaxPoolPreparedStatementPerConnectionSize
p33080
Vinsert
p33081
I42
VSimpleName: isSharePreparedStatements
p33082
tp33083
I1
s(g1715
I42
g1716
Vinsert
p33084
I42
VSimpleName: testConnection
p33085
tp33086
I1
s(g2324
I42
g2325
Vinsert
p33087
I42
VSimpleName: nanos
p33088
tp33089
I1
s(Vinsert
p33090
I42
VSimpleName: assertEquals
p33091
Vinsert
p33092
I42
VSimpleName: test_get_0
p33093
tp33094
I1
s(g4273
I42
g4274
Vinsert
p33095
I42
VSimpleName: SQLException
p33096
tp33097
I5
s(Vinsert
p33098
I42
VSimpleName: length
p33099
Vinsert
p33100
I42
VSimpleName: System
p33101
tp33102
I2
s(Vinsert
p33103
I42
VSimpleName: token
p33104
Vinsert
p33105
I40
VQualifiedName: Token.SELECT
p33106
tp33107
I1
s(g2289
I42
g2290
Vinsert
p33108
I36
VParenthesizedExpression
p33109
tp33110
I1
s(g30375
I42
g30376
Vinsert
p33111
I42
VSimpleName: printStackTrace
p33112
tp33113
I1
s(g23118
I42
g23119
Vinsert
p33114
I43
VSimpleType: Exception
p33115
tp33116
I2
s(g1130
I42
g1131
Vinsert
p33117
I45
VStringLiteral: "SELECT t.calendar_year, p.prod_id, SUM(s.amount_sold) AS sum_sales\u005cn"
p33118
tp33119
I1
s(g23242
I42
g23243
Vinsert
p33120
I27
VInfixExpression: ==
p33121
tp33122
I2
s(g5320
I42
g5321
Vinsert
p33123
I26
VImportDeclaration
p33124
tp33125
I2
s(Vinsert
p33126
I42
VSimpleName: reset
p33127
Vinsert
p33128
I34
VNumberLiteral: 10
p33129
tp33130
I2
s(g20715
I42
g20716
Vinsert
p33131
I45
VStringLiteral: "\u005ct\u005ct, ?, ?, ?, ?, ?\u005cn"
p33132
tp33133
I2
s(g11325
I42
g11326
Vinsert
p33134
I42
VSimpleName: startYGC
p33135
tp33136
I1
s(Vinsert
p33137
I42
VSimpleName: getConnection
p33138
Vinsert
p33139
I42
VSimpleName: connections
p33140
tp33141
I4
s(g11537
I42
g11538
Vinsert
p33142
I42
VSimpleName: top
p33143
tp33144
I1
s(g7256
I42
g7257
Vinsert
p33145
I42
VSimpleName: getConnection
p33146
tp33147
I5
s(g8103
I42
g8104
Vinsert
p33148
I42
VSimpleName: K
p33149
tp33150
I1
s(Vinsert
p33151
I42
VSimpleName: put
p33152
Vinsert
p33153
I42
VSimpleName: item
p33154
tp33155
I2
s(g25074
I42
g25075
Vinsert
p33156
I42
VSimpleName: x
p33157
tp33158
I1
s(g5156
I42
g5157
Vinsert
p33159
I40
VQualifiedName: LockType.READ_LOCAL
p33160
tp33161
I1
s(g4253
I42
g4254
Vinsert
p33162
I42
VSimpleName: sql
p33163
tp33164
I1
s(g2732
I42
g2733
Vinsert
p33165
I42
VSimpleName: SQLPropertyExpr
p33166
tp33167
I1
s(g738
I42
g739
Vinsert
p33168
I42
VSimpleName: aliasLocal
p33169
tp33170
I1
s(Vinsert
p33171
I42
VSimpleName: cancel
p33172
Vinsert
p33173
I57
VTypeLiteral
p33174
tp33175
I1
s(g27943
I42
g27944
Vinsert
p33176
I45
VStringLiteral: "CALL check_sal(:new.job_id, :new.salary, :new.last_name)"
p33177
tp33178
I1
s(g17633
I42
g17634
Vinsert
p33179
I42
VSimpleName: isStatic
p33180
tp33181
I1
s(g22913
I42
g22914
Vinsert
p33182
I45
VStringLiteral: "load validConnectionCheckerClass error : "
p33183
tp33184
I1
s(g10480
I42
g10481
Vinsert
p33185
I42
VSimpleName: getResolvedTableSource
p33186
tp33187
I1
s(g19369
I42
g19370
Vinsert
p33188
I16
VConditionalExpression
p33189
tp33190
I1
s(g1060
I42
g1061
Vinsert
p33191
I42
VSimpleName: method
p33192
tp33193
I4
s(g20904
I42
g20905
Vinsert
p33194
I42
VSimpleName: DruidDataSourceStatValue
p33195
tp33196
I1
s(g2001
I42
g2002
Vinsert
p33197
I21
VExpressionStatement
p33198
tp33199
I11
s(g6871
I42
g6872
Vinsert
p33200
I45
VStringLiteral: "continue"
p33201
tp33202
I1
s(g14212
I42
g14213
Vinsert
p33203
I32
VMethodInvocation
p33204
tp33205
I3
s(g3788
I42
g3789
Vinsert
p33206
I42
VSimpleName: getObjectType
p33207
tp33208
I1
s(g2393
I42
g2394
Vinsert
p33209
I42
VSimpleName: i
p33210
tp33211
I1
s(g27660
I42
g27661
Vinsert
p33212
I42
VSimpleName: treePanel
p33213
tp33214
I1
s(g11601
I42
g11602
Vinsert
p33215
I8
VBlock
p33216
tp33217
I1
s(g29627
I42
g29628
Vinsert
p33218
I42
VSimpleName: tableSource
p33219
tp33220
I1
s(g2398
I42
g2399
Vinsert
p33221
I60
VVariableDeclarationStatement
p33222
tp33223
I2
s(g17704
I42
g17705
Vinsert
p33224
I43
VSimpleType: Property
p33225
tp33226
I2
s(g15255
I42
g15256
Vinsert
p33227
I9
VBooleanLiteral: false
p33228
tp33229
I1
s(g6901
I42
g6902
Vinsert
p33230
I21
VExpressionStatement
p33231
tp33232
I8
s(g13493
I42
g13494
Vinsert
p33233
I39
VPrimitiveType: boolean
p33234
tp33235
I3
s(g454
I42
g455
Vinsert
p33236
I42
VSimpleName: symbol
p33237
tp33238
I2
s(Vinsert
p33239
I42
VSimpleName: setParenthesized
p33240
Vinsert
p33241
I11
VCastExpression
p33242
tp33243
I1
s(g1140
I42
g1141
Vinsert
p33244
I42
VSimpleName: beforeExecute
p33245
tp33246
I2
s(Vinsert
p33247
I42
VSimpleName: size
p33248
Vinsert
p33249
I42
VSimpleName: value
p33250
tp33251
I1
s(g1918
I42
g1919
Vinsert
p33252
I40
VQualifiedName: SQLBinaryOperator.Equality
p33253
tp33254
I1
s(g8528
I42
g8529
Vinsert
p33255
I42
VSimpleName: objects
p33256
tp33257
I1
s(g2444
I42
g2445
Vinsert
p33258
I42
VSimpleName: betweenExpr
p33259
tp33260
I2
s(g25157
I42
g25158
Vinsert
p33261
I60
VVariableDeclarationStatement
p33262
tp33263
I2
s(g9939
I42
g9940
Vinsert
p33264
I58
VVariableDeclarationExpression
p33265
tp33266
I1
s(Vinsert
p33267
I42
VSimpleName: toPGString
p33268
Vinsert
p33269
I45
VStringLiteral: "WHERE gmt = #{time}::timestamp WITHOUT TIME ZONE"
p33270
tp33271
I1
s(Vinsert
p33272
I42
VSimpleName: setValue
p33273
Vinsert
p33274
I42
VSimpleName: primary
p33275
tp33276
I1
s(g4584
I42
g4585
Vinsert
p33277
I42
VSimpleName: getIndexName
p33278
tp33279
I2
s(Vinsert
p33280
I42
VSimpleName: nameEquals
p33281
Vinsert
p33282
I43
VSimpleType: SQLExpr
p33283
tp33284
I1
s(g547
I42
g548
Vinsert
p33285
I45
VStringLiteral: "\u005ct, c.recommended, c.country, c.province, c.city, c.address\u005cn"
p33286
tp33287
I1
s(g22807
I42
g22808
Vinsert
p33288
I43
VSimpleType: DruidDataSourceBuilder
p33289
tp33290
I1
s(g2948
I42
g2949
Vinsert
p33291
I45
VStringLiteral: "("
p33292
tp33293
I1
s(g2702
I42
g2703
Vinsert
p33294
I52
VThisExpression
p33295
tp33296
I1
s(g276
I42
g277
Vinsert
p33297
I45
VStringLiteral: "\u005cn\u005ct\u005ctFROM t"
p33298
tp33299
I1
s(g3118
I42
g3119
Vinsert
p33300
I45
VStringLiteral: "YEAR"
p33301
tp33302
I1
s(g8716
I42
g8717
Vinsert
p33303
I52
VThisExpression
p33304
tp33305
I1
s(g7578
I42
g7579
Vinsert
p33306
I42
VSimpleName: add
p33307
tp33308
I1
s(g14324
I42
g14325
Vinsert
p33309
I38
VPrefixExpression: -
p33310
tp33311
I1
s(g5787
I42
g5788
Vinsert
p33312
I7
VAssignment: =
p33313
tp33314
I1
s(g3078
I42
g3079
Vinsert
p33315
I42
VSimpleName: equals
p33316
tp33317
I1
s(g2842
I42
g2843
Vinsert
p33318
I42
VSimpleName: stmt
p33319
tp33320
I1
s(g3417
I42
g3418
Vinsert
p33321
I42
VSimpleName: index
p33322
tp33323
I1
s(g26608
I42
g26609
Vinsert
p33324
I25
VIfStatement
p33325
tp33326
I1
s(g11015
I42
g11016
Vinsert
p33327
I40
VQualifiedName: MySqlSelectQueryBlock.Limit
p33328
tp33329
I1
s(g7986
I42
g7987
Vinsert
p33330
I42
VSimpleName: lexer
p33331
tp33332
I3
s(g1973
I42
g1974
Vinsert
p33333
I42
VSimpleName: lexer
p33334
tp33335
I3
s(g15456
I42
g15457
Vinsert
p33336
I21
VExpressionStatement
p33337
tp33338
I1
s(Vinsert
p33339
I42
VSimpleName: add
p33340
Vinsert
p33341
I42
VSimpleName: from
p33342
tp33343
I1
s(g8575
I42
g8576
Vinsert
p33344
I42
VSimpleName: parseRaise
p33345
tp33346
I2
s(g9340
I42
g9341
Vinsert
p33347
I39
VPrimitiveType: void
p33348
tp33349
I1
s(g6612
I42
g6613
Vinsert
p33350
I43
VSimpleType: RSAPublicKey
p33351
tp33352
I1
s(g8504
I42
g8505
Vinsert
p33353
I44
VSingleVariableDeclaration
p33354
tp33355
I16
s(g14226
I42
g14227
Vinsert
p33356
I42
VSimpleName: accept
p33357
tp33358
I1
s(g3261
I42
g3262
Vinsert
p33359
I42
VSimpleName: expr
p33360
tp33361
I1
s(g5818
I42
g5819
Vinsert
p33362
I60
VVariableDeclarationStatement
p33363
tp33364
I1
s(g5002
I42
g5003
Vinsert
p33365
I37
VPostfixExpression: ++
p33366
tp33367
I1
s(g4982
I42
g4983
Vinsert
p33368
I25
VIfStatement
p33369
tp33370
I1
s(g7487
I42
g7488
Vinsert
p33371
I74
VParameterizedType: List<ValuesClause>
p33372
tp33373
I1
s(Vinsert
p33374
I42
VSimpleName: toSQLString
p33375
Vinsert
p33376
I45
VStringLiteral: "CREATE FUNCTION StockPivot (\u005cn"
p33377
tp33378
I1
s(g4298
I42
g4299
Vinsert
p33379
I45
VStringLiteral: "ISOLATION LEVEL "
p33380
tp33381
I1
s(Vinsert
p33382
I42
VSimpleName: token
p33383
Vinsert
p33384
I42
VSimpleName: alias
p33385
tp33386
I5
s(Vinsert
p33387
I42
VSimpleName: getItems
p33388
Vinsert
p33389
I24
VForStatement
p33390
tp33391
I1
s(g748
I42
g749
Vinsert
p33392
I43
VSimpleType: ResultSetMetaData
p33393
tp33394
I1
s(g1953
I42
g1954
Vinsert
p33395
I42
VSimpleName: currentMaxFieldSize
p33396
tp33397
I1
s(g19736
I42
g19737
Vinsert
p33398
I43
VSimpleType: SQLFeatureNotSupportedException
p33399
tp33400
I1
s(g21809
I42
g21810
Vinsert
p33401
I42
VSimpleName: JdbcDataSourceStat
p33402
tp33403
I2
s(g3282
I42
g3283
Vinsert
p33404
I45
VStringLiteral: " initial_size "
p33405
tp33406
I1
s(g7720
I42
g7721
Vinsert
p33407
I8
VBlock
p33408
tp33409
I3
s(g21494
I42
g21495
Vinsert
p33410
I45
VStringLiteral: "/*!40101fff*/ select * from t"
p33411
tp33412
I1
s(g13316
I42
g13317
Vinsert
p33413
I42
VSimpleName: accept
p33414
tp33415
I1
s(g932
I42
g933
Vinsert
p33416
I42
VSimpleName: Exception
p33417
tp33418
I1
s(g20259
I42
g20260
Vinsert
p33419
I42
VSimpleName: isValue
p33420
tp33421
I1
s(g1531
I42
g1532
Vinsert
p33422
I42
VSimpleName: SQLSubqueryTableSource
p33423
tp33424
I1
s(Vinsert
p33425
I42
VSimpleName: clone
p33426
Vinsert
p33427
I42
VSimpleName: SQLListExpr
p33428
tp33429
I1
s(g14730
I42
g14731
Vinsert
p33430
I42
VSimpleName: className
p33431
tp33432
I1
s(Vinsert
p33433
I42
VSimpleName: isIfExists
p33434
Vinsert
p33435
I42
VSimpleName: SQLDropDatabaseStatement
p33436
tp33437
I1
s(g2755
I42
g2756
Vinsert
p33438
I45
VStringLiteral: "end;"
p33439
tp33440
I1
s(g18659
I42
g18660
Vinsert
p33441
I42
VSimpleName: record
p33442
tp33443
I3
s(Vinsert
p33444
I42
VSimpleName: computeDataType
p33445
Vinsert
p33446
I43
VSimpleType: SQLDataType
p33447
tp33448
I1
s(g3123
I42
g3124
Vinsert
p33449
I21
VExpressionStatement
p33450
tp33451
I2
s(Vinsert
p33452
I42
VSimpleName: isTopNoneFromSelect
p33453
Vinsert
p33454
I25
VIfStatement
p33455
tp33456
I1
s(g25868
I42
g25869
Vinsert
p33457
I45
VStringLiteral: "WHERE t1.add_date = '${date_minus_1}'\u005cn"
p33458
tp33459
I1
s(g29844
I42
g29845
Vinsert
p33460
I42
VSimpleName: dataMap
p33461
tp33462
I2
s(Vinsert
p33463
I42
VSimpleName: getMemoryMXBean
p33464
Vinsert
p33465
I42
VSimpleName: WebSessionStat
p33466
tp33467
I1
s(g6622
I42
g6623
Vinsert
p33468
I60
VVariableDeclarationStatement
p33469
tp33470
I1
s(g16625
I42
g16626
Vinsert
p33471
I42
VSimpleName: getConn
p33472
tp33473
I1
s(g1304
I42
g1305
Vinsert
p33474
I60
VVariableDeclarationStatement
p33475
tp33476
I1
s(g26990
I42
g26991
Vinsert
p33477
I43
VSimpleType: FetchClause
p33478
tp33479
I1
s(g5369
I42
g5370
Vinsert
p33480
I42
VSimpleName: visit
p33481
tp33482
I1
s(g27840
I42
g27841
Vinsert
p33483
I42
VSimpleName: handler
p33484
tp33485
I3
s(g11991
I42
g11992
Vinsert
p33486
I42
VSimpleName: ValuesClause
p33487
tp33488
I2
s(Vinsert
p33489
I42
VSimpleName: containsColumn
p33490
Vinsert
p33491
I45
VStringLiteral: "ids_openapp_dau_d"
p33492
tp33493
I1
s(g5579
I42
g5580
Vinsert
p33494
I45
VStringLiteral: "CREATE SERVER s\u005cn"
p33495
tp33496
I1
s(g21257
I42
g21258
Vinsert
p33497
I45
VStringLiteral: "                   and t.ctype = '201'"
p33498
tp33499
I1
s(g5287
I42
g5288
Vinsert
p33500
I39
VPrimitiveType: void
p33501
tp33502
I239
s(g211
I42
g212
Vinsert
p33503
I42
VSimpleName: join
p33504
tp33505
I1
s(Vinsert
p33506
I42
VSimpleName: get
p33507
Vinsert
p33508
I45
VStringLiteral: "init"
p33509
tp33510
I1
s(Vinsert
p33511
I42
VSimpleName: get
p33512
Vinsert
p33513
I42
VSimpleName: getFilter
p33514
tp33515
I1
s(g17997
I42
g17998
Vinsert
p33516
I43
VSimpleType: ArrayList
p33517
tp33518
I1
s(g786
I42
g787
Vinsert
p33519
I42
VSimpleName: e
p33520
tp33521
I2
s(g31649
I42
g31650
Vinsert
p33522
I42
VSimpleName: stat
p33523
tp33524
I10
s(g6755
I42
g6756
Vinsert
p33525
I23
VFieldDeclaration
p33526
tp33527
I1
s(g12346
I42
g12347
Vinsert
p33528
I42
VSimpleName: Exception
p33529
tp33530
I1
s(g19810
I42
g19811
Vinsert
p33531
I25
VIfStatement
p33532
tp33533
I1
s(Vinsert
p33534
I42
VSimpleName: equals
p33535
Vinsert
p33536
I45
VStringLiteral: "DATA DIRECTORY"
p33537
tp33538
I1
s(g28764
I42
g28765
Vinsert
p33539
I42
VSimpleName: Override
p33540
tp33541
I1
s(g5022
I42
g5023
Vinsert
p33542
I45
VStringLiteral: "\u005cn\u005ct\u005ct\u005ct\u005ctSELECT 50, 11 * s1"
p33543
tp33544
I1
s(g31920
I42
g31921
Vinsert
p33545
I42
VSimpleName: count
p33546
tp33547
I4
s(g7240
I42
g7241
Vinsert
p33548
I52
VThisExpression
p33549
tp33550
I2
s(g4625
I42
g4626
Vinsert
p33551
I43
VSimpleType: MySqlExplainStatement
p33552
tp33553
I1
s(g1193
I42
g1194
Vinsert
p33554
I25
VIfStatement
p33555
tp33556
I1
s(g15188
I42
g15189
Vinsert
p33557
I36
VParenthesizedExpression
p33558
tp33559
I1
s(g26526
I42
g26527
Vinsert
p33560
I59
VVariableDeclarationFragment
p33561
tp33562
I17
s(g3893
I42
g3894
Vinsert
p33563
I27
VInfixExpression: !=
p33564
tp33565
I1
s(g11072
I42
g11073
Vinsert
p33566
I21
VExpressionStatement
p33567
tp33568
I3
s(g2727
I42
g2728
Vinsert
p33569
I42
VSimpleName: exprParser
p33570
tp33571
I1
s(g14972
I42
g14973
Vinsert
p33572
I42
VSimpleName: part
p33573
tp33574
I3
s(g17066
I42
g17067
Vinsert
p33575
I21
VExpressionStatement
p33576
tp33577
I2
s(g10581
I42
g10582
Vinsert
p33578
I42
VSimpleName: Exception
p33579
tp33580
I2
s(g9709
I42
g9710
Vinsert
p33581
I21
VExpressionStatement
p33582
tp33583
I2
s(g20382
I42
g20383
Vinsert
p33584
I42
VSimpleName: src
p33585
tp33586
I1
s(Vinsert
p33587
I42
VSimpleName: accept
p33588
Vinsert
p33589
I42
VSimpleName: getMaxQueriesPerHour
p33590
tp33591
I1
s(g32956
I42
g32957
Vinsert
p33592
I42
VSimpleName: parameters
p33593
tp33594
I6
s(g4941
I42
g4942
Vinsert
p33595
I53
VThrowStatement
p33596
tp33597
I1
s(g29398
I42
g29399
Vinsert
p33598
I40
VQualifiedName: Token.LPAREN
p33599
tp33600
I1
s(g28392
I42
g28393
Vinsert
p33601
I42
VSimpleName: test_genKeys1024
p33602
tp33603
I1
s(g8038
I42
g8039
Vinsert
p33604
I43
VSimpleType: String
p33605
tp33606
I1
s(g7007
I42
g7008
Vinsert
p33607
I27
VInfixExpression: !=
p33608
tp33609
I2
s(g17379
I42
g17380
Vinsert
p33610
I25
VIfStatement
p33611
tp33612
I1
s(g13938
I42
g13939
Vinsert
p33613
I39
VPrimitiveType: boolean
p33614
tp33615
I1
s(g4579
I42
g4580
Vinsert
p33616
I42
VSimpleName: queryBlock
p33617
tp33618
I1
s(Vinsert
p33619
I42
VSimpleName: reset
p33620
Vinsert
p33621
I42
VSimpleName: token
p33622
tp33623
I2
s(g5709
I42
g5710
Vinsert
p33624
I42
VSimpleName: bogusSource
p33625
tp33626
I1
s(Vinsert
p33627
I42
VSimpleName: visit
p33628
Vinsert
p33629
I42
VSimpleName: SQLVariantRefExpr
p33630
tp33631
I1
s(g14266
I42
g14267
Vinsert
p33632
I7
VAssignment: =
p33633
tp33634
I1
s(g7787
I42
g7788
Vinsert
p33635
I42
VSimpleName: cloneTo
p33636
tp33637
I1
s(g21845
I42
g21846
Vinsert
p33638
I32
VMethodInvocation
p33639
tp33640
I3
s(g17439
I42
g17440
Vinsert
p33641
I42
VSimpleName: createErrorCount
p33642
tp33643
I1
s(g16380
I42
g16381
Vinsert
p33644
I42
VSimpleName: ip
p33645
tp33646
I3
s(g24379
I42
g24380
Vinsert
p33647
I42
VSimpleName: x
p33648
tp33649
I1
s(g12888
I42
g12889
Vinsert
p33650
I8
VBlock
p33651
tp33652
I100
s(g713
I42
g714
Vinsert
p33653
I40
VQualifiedName: JdbcConstants.ORACLE
p33654
tp33655
I1
s(Vinsert
p33656
I42
VSimpleName: getClass
p33657
Vinsert
p33658
I42
VSimpleName: accept0
p33659
tp33660
I23
s(g2130
I42
g2131
Vinsert
p33661
I43
VSimpleType: java.sql.Time
p33662
tp33663
I1
s(g381
I42
g382
Vinsert
p33664
I27
VInfixExpression: !=
p33665
tp33666
I1
s(g718
I42
g719
Vinsert
p33667
I42
VSimpleName: statements
p33668
tp33669
I1
s(g7527
I42
g7528
Vinsert
p33670
I34
VNumberLiteral: 0
p33671
tp33672
I1
s(g15864
I42
g15865
Vinsert
p33673
I42
VSimpleName: TestCase
p33674
tp33675
I1
s(g16397
I42
g16398
Vinsert
p33676
I42
VSimpleName: getParent
p33677
tp33678
I1
s(Vinsert
p33679
I42
VSimpleName: assertTrue
p33680
Vinsert
p33681
I42
VSimpleName: test_wrap
p33682
tp33683
I1
s(g1496
I42
g1497
Vinsert
p33684
I45
VStringLiteral: "\u005cn WHERE ds=20150819"
p33685
tp33686
I1
s(Vinsert
p33687
I42
VSimpleName: setPoolPreparedStatements
p33688
Vinsert
p33689
I42
VSimpleName: setPassword
p33690
tp33691
I1
s(g11920
I42
g11921
Vinsert
p33692
I22
VFieldAccess
p33693
tp33694
I1
s(g4814
I42
g4815
Vinsert
p33695
I59
VVariableDeclarationFragment
p33696
tp33697
I2
s(g7320
I42
g7321
Vinsert
p33698
I21
VExpressionStatement
p33699
tp33700
I1
s(g5605
I42
g5606
Vinsert
p33701
I42
VSimpleName: String
p33702
tp33703
I1
s(g9939
I42
g9940
Vinsert
p33704
I34
VNumberLiteral: 0
p33705
tp33706
I1
s(g13201
I42
g13202
Vinsert
p33707
I42
VSimpleName: clone
p33708
tp33709
I1
s(g10550
I42
g10551
Vinsert
p33710
I43
VSimpleType: SensitiveParameters
p33711
tp33712
I3
s(g4404
I42
g4405
Vinsert
p33713
I32
VMethodInvocation
p33714
tp33715
I2
s(g11629
I42
g11630
Vinsert
p33716
I42
VSimpleName: setExceptionSoters
p33717
tp33718
I1
s(g5338
I42
g5339
Vinsert
p33719
I36
VParenthesizedExpression
p33720
tp33721
I1
s(Vinsert
p33722
I42
VSimpleName: getConnection
p33723
Vinsert
p33724
I34
VNumberLiteral: 1000
p33725
tp33726
I3
s(g32112
I42
g32113
Vinsert
p33727
I40
VQualifiedName: JdbcConstants.POSTGRESQL
p33728
tp33729
I1
s(g3765
I42
g3766
Vinsert
p33730
I43
VSimpleType: String
p33731
tp33732
I8
s(g19686
I42
g19687
Vinsert
p33733
I40
VQualifiedName: com.alibaba.druid.jconsole.SQLPanel
p33734
tp33735
I1
s(g3967
I42
g3968
Vinsert
p33736
I42
VSimpleName: filterSize
p33737
tp33738
I1
s(Vinsert
p33739
I42
VSimpleName: getHitCount
p33740
Vinsert
p33741
I42
VSimpleName: getDbType
p33742
tp33743
I1
s(Vinsert
p33744
I42
VSimpleName: accept0
p33745
Vinsert
p33746
I42
VSimpleName: errorLogging
p33747
tp33748
I2
s(g13685
I42
g13686
Vinsert
p33749
I43
VSimpleType: String
p33750
tp33751
I1
s(g7216
I42
g7217
Vinsert
p33752
I42
VSimpleName: Assert
p33753
tp33754
I1
s(g30561
I42
g30562
Vinsert
p33755
I40
VQualifiedName: JdbcConnectionStat.Entry
p33756
tp33757
I1
s(g3714
I42
g3715
Vinsert
p33758
I40
VQualifiedName: Token.IDENTIFIER
p33759
tp33760
I1
s(g12716
I42
g12717
Vinsert
p33761
I42
VSimpleName: holder
p33762
tp33763
I1
s(g27372
I42
g27373
Vinsert
p33764
I32
VMethodInvocation
p33765
tp33766
I18
s(g2349
I42
g2350
Vinsert
p33767
I42
VSimpleName: print
p33768
tp33769
I1
s(g8635
I42
g8636
Vinsert
p33770
I42
VSimpleName: getDataSourceList
p33771
tp33772
I3
s(g28007
I42
g28008
Vinsert
p33773
I42
VSimpleName: getExceptionSorterClassName
p33774
tp33775
I1
s(Vinsert
p33776
I42
VSimpleName: getUrl
p33777
Vinsert
p33778
I45
VStringLiteral: "unregister mbean failed. url "
p33779
tp33780
I1
s(g8504
I42
g8505
Vinsert
p33781
I42
VSimpleName: SQLExprParser
p33782
tp33783
I1
s(g5782
I42
g5783
Vinsert
p33784
I62
VInstanceofExpression
p33785
tp33786
I6
s(g10433
I42
g10434
Vinsert
p33787
I32
VMethodInvocation
p33788
tp33789
I9
s(g2910
I42
g2911
Vinsert
p33790
I83
VModifier: public
p33791
tp33792
I7
s(g28392
I42
g28393
Vinsert
p33793
I42
VSimpleName: cipherText
p33794
tp33795
I1
s(g2657
I42
g2658
Vinsert
p33796
I74
VParameterizedType: HashSet<String>
p33797
tp33798
I1
s(Vinsert
p33799
I42
VSimpleName: assertEquals
p33800
Vinsert
p33801
I42
VSimpleName: EvalMethodAtanTest
p33802
tp33803
I1
s(g10222
I42
g10223
Vinsert
p33804
I42
VSimpleName: conn
p33805
tp33806
I1
s(g13186
I42
g13187
Vinsert
p33807
I42
VSimpleName: m
p33808
tp33809
I3
s(g1496
I42
g1497
Vinsert
p33810
I42
VSimpleName: text
p33811
tp33812
I1
s(g5040
I42
g5041
Vinsert
p33813
I32
VMethodInvocation
p33814
tp33815
I1
s(g7863
I42
g7864
Vinsert
p33816
I42
VSimpleName: windowingBetweenEndFollowing
p33817
tp33818
I1
s(g23839
I42
g23840
Vinsert
p33819
I42
VSimpleName: DruidPooledConnection
p33820
tp33821
I1
s(g2168
I42
g2169
Vinsert
p33822
I27
VInfixExpression: !=
p33823
tp33824
I1
s(g2977
I42
g2978
Vinsert
p33825
I45
VStringLiteral: "\u005ctsel\u005cn"
p33826
tp33827
I1
s(g26531
I42
g26532
Vinsert
p33828
I43
VSimpleType: SQLSelectStatement
p33829
tp33830
I4
s(g11420
I42
g11421
Vinsert
p33831
I42
VSimpleName: PGUpdateStatement
p33832
tp33833
I2
s(Vinsert
p33834
I42
VSimpleName: setDataSource
p33835
Vinsert
p33836
I43
VSimpleType: SQLInsertStatement
p33837
tp33838
I2
s(Vinsert
p33839
I42
VSimpleName: println
p33840
Vinsert
p33841
I42
VSimpleName: println
p33842
tp33843
I59
s(g25854
I42
g25855
Vinsert
p33844
I52
VThisExpression
p33845
tp33846
I1
s(g10480
I42
g10481
Vinsert
p33847
I43
VSimpleType: SQLIdentifierExpr
p33848
tp33849
I1
s(g6544
I42
g6545
Vinsert
p33850
I42
VSimpleName: String
p33851
tp33852
I12
s(g10797
I42
g10798
Vinsert
p33853
I45
VStringLiteral: "SQLSTATE "
p33854
tp33855
I1
s(g13957
I42
g13958
Vinsert
p33856
I42
VSimpleName: Token
p33857
tp33858
I1
s(g16638
I42
g16639
Vinsert
p33859
I42
VSimpleName: PGSelectParser
p33860
tp33861
I1
s(g27298
I42
g27299
Vinsert
p33862
I45
VStringLiteral: "BEGIN"
p33863
tp33864
I1
s(g11398
I42
g11399
Vinsert
p33865
I42
VSimpleName: text
p33866
tp33867
I1
s(g2795
I42
g2796
Vinsert
p33868
I32
VMethodInvocation
p33869
tp33870
I1
s(g22033
I42
g22034
Vinsert
p33871
I42
VSimpleName: WebSessionStat
p33872
tp33873
I3
s(g4709
I42
g4710
Vinsert
p33874
I42
VSimpleName: config
p33875
tp33876
I6
s(g4844
I42
g4845
Vinsert
p33877
I70
VEnhancedForStatement
p33878
tp33879
I2
s(g19223
I42
g19224
Vinsert
p33880
I42
VSimpleName: WallConditionContext
p33881
tp33882
I4
s(g9773
I42
g9774
Vinsert
p33883
I21
VExpressionStatement
p33884
tp33885
I3
s(g19018
I42
g19019
Vinsert
p33886
I74
VParameterizedType: List<SQLObject>
p33887
tp33888
I2
s(Vinsert
p33889
I42
VSimpleName: get
p33890
Vinsert
p33891
I43
VSimpleType: StatementProxy
p33892
tp33893
I1
s(g5887
I42
g5888
Vinsert
p33894
I42
VSimpleName: over
p33895
tp33896
I1
s(Vinsert
p33897
I42
VSimpleName: get
p33898
Vinsert
p33899
I42
VSimpleName: columnn
p33900
tp33901
I1
s(g419
I42
g420
Vinsert
p33902
I7
VAssignment: =
p33903
tp33904
I1
s(g11745
I42
g11746
Vinsert
p33905
I42
VSimpleName: stmt
p33906
tp33907
I2
s(g10864
I42
g10865
Vinsert
p33908
I32
VMethodInvocation
p33909
tp33910
I2
s(g4520
I42
g4521
Vinsert
p33911
I42
VSimpleName: NotEqual
p33912
tp33913
I1
s(g26778
I42
g26779
Vinsert
p33914
I42
VSimpleName: SQLException
p33915
tp33916
I1
s(Vinsert
p33917
I42
VSimpleName: toMySqlString
p33918
Vinsert
p33919
I45
VStringLiteral: "\u005ctcol2\u005cn"
p33920
tp33921
I1
s(g10011
I42
g10012
Vinsert
p33922
I60
VVariableDeclarationStatement
p33923
tp33924
I2
s(g25854
I42
g25855
Vinsert
p33925
I60
VVariableDeclarationStatement
p33926
tp33927
I1
s(g19924
I42
g19925
Vinsert
p33928
I42
VSimpleName: SQLBuilderFactory
p33929
tp33930
I1
s(Vinsert
p33931
I42
VSimpleName: nextToken
p33932
Vinsert
p33933
I40
VQualifiedName: Token.UNION
p33934
tp33935
I1
s(g6298
I42
g6299
Vinsert
p33936
I32
VMethodInvocation
p33937
tp33938
I9
s(g14072
I42
g14073
Vinsert
p33939
I39
VPrimitiveType: boolean
p33940
tp33941
I3
s(Vinsert
p33942
I42
VSimpleName: fnv_64_lower_normalized
p33943
Vinsert
p33944
I42
VSimpleName: columName
p33945
tp33946
I1
s(g7751
I42
g7752
Vinsert
p33947
I60
VVariableDeclarationStatement
p33948
tp33949
I1
s(g18938
I42
g18939
Vinsert
p33950
I42
VSimpleName: select
p33951
tp33952
I11
s(g5460
I42
g5461
Vinsert
p33953
I32
VMethodInvocation
p33954
tp33955
I3
s(g11925
I42
g11926
Vinsert
p33956
I41
VReturnStatement
p33957
tp33958
I2
s(g9190
I42
g9191
Vinsert
p33959
I44
VSingleVariableDeclaration
p33960
tp33961
I1
s(Vinsert
p33962
I42
VSimpleName: visit
p33963
Vinsert
p33964
I42
VSimpleName: SQLServerDeclareItem
p33965
tp33966
I1
s(g1973
I42
g1974
Vinsert
p33967
I42
VSimpleName: alterColumn
p33968
tp33969
I2
s(g3159
I42
g3160
Vinsert
p33970
I21
VExpressionStatement
p33971
tp33972
I2
s(g17926
I42
g17927
Vinsert
p33973
I62
VInstanceofExpression
p33974
tp33975
I1
s(g7201
I42
g7202
Vinsert
p33976
I21
VExpressionStatement
p33977
tp33978
I1
s(g14353
I42
g14354
Vinsert
p33979
I60
VVariableDeclarationStatement
p33980
tp33981
I3
s(g3793
I42
g3794
Vinsert
p33982
I32
VMethodInvocation
p33983
tp33984
I1
s(g1304
I42
g1305
Vinsert
p33985
I59
VVariableDeclarationFragment
p33986
tp33987
I1
s(g10874
I42
g10875
Vinsert
p33988
I33
VNullLiteral
p33989
tp33990
I1
s(g4661
I42
g4662
Vinsert
p33991
I83
VModifier: public
p33992
tp33993
I1
s(g8643
I42
g8644
Vinsert
p33994
I42
VSimpleName: SQLExpr
p33995
tp33996
I1
s(g21686
I42
g21687
Vinsert
p33997
I83
VModifier: public
p33998
tp33999
I1
s(Vinsert
p34000
I42
VSimpleName: setParent
p34001
Vinsert
p34002
I42
VSimpleName: SQLVariantRefExpr
p34003
tp34004
I1
s(g4956
I42
g4957
Vinsert
p34005
I43
VSimpleType: OracleExtractExpr
p34006
tp34007
I1
s(g7537
I42
g7538
Vinsert
p34008
I42
VSimpleName: SQLException
p34009
tp34010
I1
s(g6212
I42
g6213
Vinsert
p34011
I41
VReturnStatement
p34012
tp34013
I2
s(g5485
I42
g5486
Vinsert
p34014
I33
VNullLiteral
p34015
tp34016
I1
s(g13061
I42
g13062
Vinsert
p34017
I45
VStringLiteral: "LIMIT ?, ?"
p34018
tp34019
I1
s(g8171
I42
g8172
Vinsert
p34020
I45
VStringLiteral: "ALTER COLUMN "
p34021
tp34022
I1
s(g8282
I42
g8283
Vinsert
p34023
I42
VSimpleName: SQLBinaryOpExpr
p34024
tp34025
I1
s(g2178
I42
g2179
Vinsert
p34026
I42
VSimpleName: appender
p34027
tp34028
I1
s(g15018
I42
g15019
Vinsert
p34029
I42
VSimpleName: x
p34030
tp34031
I1
s(g5610
I42
g5611
Vinsert
p34032
I33
VNullLiteral
p34033
tp34034
I1
s(g27644
I42
g27645
Vinsert
p34035
I8
VBlock
p34036
tp34037
I1
s(g16581
I42
g16582
Vinsert
p34038
I42
VSimpleName: stmt
p34039
tp34040
I1
s(g19396
I42
g19397
Vinsert
p34041
I45
VStringLiteral: "\u005cn\u005ctSELECT *"
p34042
tp34043
I1
s(Vinsert
p34044
I42
VSimpleName: accept
p34045
Vinsert
p34046
I42
VSimpleName: parseStatementList
p34047
tp34048
I2
s(g20691
I42
g20692
Vinsert
p34049
I45
VStringLiteral: "VIEW "
p34050
tp34051
I1
s(g20165
I42
g20166
Vinsert
p34052
I9
VBooleanLiteral: true
p34053
tp34054
I1
s(Vinsert
p34055
I42
VSimpleName: token
p34056
Vinsert
p34057
I42
VSimpleName: SQLSetStatement
p34058
tp34059
I2
s(g251
I42
g252
Vinsert
p34060
I42
VSimpleName: chain
p34061
tp34062
I1
s(g8873
I42
g8874
Vinsert
p34063
I42
VSimpleName: procedureDataType
p34064
tp34065
I1
s(g4263
I42
g4264
Vinsert
p34066
I33
VNullLiteral
p34067
tp34068
I1
s(g12849
I42
g12850
Vinsert
p34069
I42
VSimpleName: SQLIdentifierExpr
p34070
tp34071
I2
s(Vinsert
p34072
I42
VSimpleName: visit
p34073
Vinsert
p34074
I42
VSimpleName: exception
p34075
tp34076
I1
s(g6694
I42
g6695
Vinsert
p34077
I27
VInfixExpression: !=
p34078
tp34079
I1
s(g13700
I42
g13701
Vinsert
p34080
I43
VSimpleType: DB2Lexer
p34081
tp34082
I2
s(g3108
I42
g3109
Vinsert
p34083
I45
VStringLiteral: "/sql.json"
p34084
tp34085
I1
s(g3992
I42
g3993
Vinsert
p34086
I45
VStringLiteral: "show not allow"
p34087
tp34088
I1
s(g19163
I42
g19164
Vinsert
p34089
I39
VPrimitiveType: void
p34090
tp34091
I1
s(g786
I42
g787
Vinsert
p34092
I42
VSimpleName: Throwable
p34093
tp34094
I1
s(g6442
I42
g6443
Vinsert
p34095
I45
VStringLiteral: "    where 1=1  and seller_nick in ('\u521b\u7ef4\u5b98\u65b9\u65d7\u8230\u5e97') "
p34096
tp34097
I1
s(g4222
I42
g4223
Vinsert
p34098
I42
VSimpleName: Reference
p34099
tp34100
I2
s(g547
I42
g548
Vinsert
p34101
I45
VStringLiteral: "\u005ct, c.homepage_url, c.reg_address, c.trade_region, c.trade_region_user, c.reg_capital\u005cn"
p34102
tp34103
I1
s(g5859
I42
g5860
Vinsert
p34104
I70
VEnhancedForStatement
p34105
tp34106
I1
s(g19461
I42
g19462
Vinsert
p34107
I43
VSimpleType: OdpsShowPartitionsStmt
p34108
tp34109
I1
s(g3040
I42
g3041
Vinsert
p34110
I21
VExpressionStatement
p34111
tp34112
I2
s(g10682
I42
g10683
Vinsert
p34113
I27
VInfixExpression: !=
p34114
tp34115
I3
s(g2578
I42
g2579
Vinsert
p34116
I42
VSimpleName: WrapperProxy
p34117
tp34118
I1
s(g13607
I42
g13608
Vinsert
p34119
I42
VSimpleName: Boolean
p34120
tp34121
I2
s(Vinsert
p34122
I42
VSimpleName: setKey
p34123
Vinsert
p34124
I42
VSimpleName: AesDecrypter
p34125
tp34126
I2
s(g24206
I42
g24207
Vinsert
p34127
I45
VStringLiteral: "\u005ctPARTITION PART01\u005cn"
p34128
tp34129
I1
s(Vinsert
p34130
I42
VSimpleName: nextToken
p34131
Vinsert
p34132
I40
VQualifiedName: Initially.DEFERRED
p34133
tp34134
I1
s(g7007
I42
g7008
Vinsert
p34135
I42
VSimpleName: stmt
p34136
tp34137
I1
s(g9683
I42
g9684
Vinsert
p34138
I43
VSimpleType: MySqlSelectQueryBlock
p34139
tp34140
I4
s(g861
I42
g862
Vinsert
p34141
I52
VThisExpression
p34142
tp34143
I1
s(g17012
I42
g17013
Vinsert
p34144
I27
VInfixExpression: ==
p34145
tp34146
I2
s(g10292
I42
g10293
Vinsert
p34147
I33
VNullLiteral
p34148
tp34149
I2
s(g30825
I42
g30826
Vinsert
p34150
I45
VStringLiteral: "\u005cn(280, 'Recreation', 121, 1700)"
p34151
tp34152
I2
s(g5882
I42
g5883
Vinsert
p34153
I27
VInfixExpression: ==
p34154
tp34155
I1
s(g2014
I42
g2015
Vinsert
p34156
I43
VSimpleType: SQLCastExpr
p34157
tp34158
I2
s(g3007
I42
g3008
Vinsert
p34159
I39
VPrimitiveType: boolean
p34160
tp34161
I1
s(g12977
I42
g12978
Vinsert
p34162
I45
VStringLiteral: "\u005cnGROUP BY c1"
p34163
tp34164
I1
s(g28772
I42
g28773
Vinsert
p34165
I43
VSimpleType: MySqlShowKeysStatement
p34166
tp34167
I1
s(g4740
I42
g4741
Vinsert
p34168
I41
VReturnStatement
p34169
tp34170
I1
s(g1095
I42
g1096
Vinsert
p34171
I42
VSimpleName: map
p34172
tp34173
I3
s(g14088
I42
g14089
Vinsert
p34174
I42
VSimpleName: DruidAbstractDataSource
p34175
tp34176
I1
s(g14551
I42
g14552
Vinsert
p34177
I45
VStringLiteral: "to "
p34178
tp34179
I1
s(g11537
I42
g11538
Vinsert
p34180
I59
VVariableDeclarationFragment
p34181
tp34182
I2
s(g17490
I42
g17491
Vinsert
p34183
I45
VStringLiteral: "\u005cn\u005ctPARTITION p1 VALUES LESS THAN (1996),"
p34184
tp34185
I1
s(Vinsert
p34186
I42
VSimpleName: indexOf
p34187
Vinsert
p34188
I42
VSimpleName: indexOf
p34189
tp34190
I8
s(g15495
I42
g15496
Vinsert
p34191
I57
VTypeLiteral
p34192
tp34193
I1
s(g25306
I42
g25307
Vinsert
p34194
I45
VStringLiteral: "stat.tx"
p34195
tp34196
I1
s(g20801
I42
g20802
Vinsert
p34197
I42
VSimpleName: Properties
p34198
tp34199
I1
s(g30896
I42
g30897
Vinsert
p34200
I31
VMethodDeclaration
p34201
tp34202
I1
s(g6421
I42
g6422
Vinsert
p34203
I42
VSimpleName: dbType
p34204
tp34205
I1
s(g27253
I42
g27254
Vinsert
p34206
I34
VNumberLiteral: 0
p34207
tp34208
I2
s(g2273
I42
g2274
Vinsert
p34209
I43
VSimpleType: MySqlExceptionSorter
p34210
tp34211
I2
s(g497
I42
g498
Vinsert
p34212
I32
VMethodInvocation
p34213
tp34214
I3
s(g4126
I42
g4127
Vinsert
p34215
I42
VSimpleName: getStatementPool
p34216
tp34217
I1
s(g336
I42
g337
Vinsert
p34218
I42
VSimpleName: names
p34219
tp34220
I1
s(g11915
I42
g11916
Vinsert
p34221
I42
VSimpleName: Exception
p34222
tp34223
I2
s(g5017
I42
g5018
Vinsert
p34224
I43
VSimpleType: String
p34225
tp34226
I1
s(g8480
I42
g8481
Vinsert
p34227
I43
VSimpleType: SQLAlterTableAddPrimaryKey
p34228
tp34229
I2
s(g13823
I42
g13824
Vinsert
p34230
I32
VMethodInvocation
p34231
tp34232
I463
s(g32810
I42
g32811
Vinsert
p34233
I45
VStringLiteral: "sys.dba_data_files"
p34234
tp34235
I1
s(g6293
I42
g6294
Vinsert
p34236
I41
VReturnStatement
p34237
tp34238
I1
s(Vinsert
p34239
I42
VSimpleName: visit
p34240
Vinsert
p34241
I42
VSimpleName: columns
p34242
tp34243
I5
s(g14622
I42
g14623
Vinsert
p34244
I42
VSimpleName: val
p34245
tp34246
I1
s(g1476
I42
g1477
Vinsert
p34247
I42
VSimpleName: LogManager
p34248
tp34249
I1
s(g25207
I42
g25208
Vinsert
p34250
I42
VSimpleName: toSQLString
p34251
tp34252
I1
s(g19128
I42
g19129
Vinsert
p34253
I42
VSimpleName: getTableStat
p34254
tp34255
I1
s(g23934
I42
g23935
Vinsert
p34256
I45
VStringLiteral: "relationships : "
p34257
tp34258
I3
s(g6893
I42
g6894
Vinsert
p34259
I44
VSingleVariableDeclaration
p34260
tp34261
I1
s(Vinsert
p34262
I42
VSimpleName: formatMySql
p34263
Vinsert
p34264
I45
VStringLiteral: "update t set name = 'x' where id < 100 limit 10"
p34265
tp34266
I1
s(g2145
I42
g2146
Vinsert
p34267
I42
VSimpleName: objIndex
p34268
tp34269
I1
s(g6359
I42
g6360
Vinsert
p34270
I32
VMethodInvocation
p34271
tp34272
I4
s(g3345
I42
g3346
Vinsert
p34273
I42
VSimpleName: SQLASTVisitor
p34274
tp34275
I31
s(g7522
I42
g7523
Vinsert
p34276
I42
VSimpleName: needRetry
p34277
tp34278
I1
s(g13968
I42
g13969
Vinsert
p34279
I42
VSimpleName: owner
p34280
tp34281
I2
s(g19823
I42
g19824
Vinsert
p34282
I42
VSimpleName: setRemoveAbandoned
p34283
tp34284
I1
s(g1095
I42
g1096
Vinsert
p34285
I42
VSimpleName: name
p34286
tp34287
I6
s(g18796
I42
g18797
Vinsert
p34288
I8
VBlock
p34289
tp34290
I2
s(g16112
I42
g16113
Vinsert
p34291
I33
VNullLiteral
p34292
tp34293
I2
s(Vinsert
p34294
I42
VSimpleName: startsWith
p34295
Vinsert
p34296
I42
VSimpleName: sql
p34297
tp34298
I3
s(g4941
I42
g4942
Vinsert
p34299
I43
VSimpleType: SQLException
p34300
tp34301
I2
s(g23844
I42
g23845
Vinsert
p34302
I42
VSimpleName: name_lower
p34303
tp34304
I3
s(g1627
I42
g1628
Vinsert
p34305
I45
VStringLiteral: "select * from order"
p34306
tp34307
I1
s(g9410
I42
g9411
Vinsert
p34308
I14
VClassInstanceCreation
p34309
tp34310
I1
s(g17296
I42
g17297
Vinsert
p34311
I43
VSimpleType: SQLExpr
p34312
tp34313
I1
s(g20113
I42
g20114
Vinsert
p34314
I59
VVariableDeclarationFragment
p34315
tp34316
I3
s(g16792
I42
g16793
Vinsert
p34317
I42
VSimpleName: column
p34318
tp34319
I3
s(g487
I42
g488
Vinsert
p34320
I44
VSingleVariableDeclaration
p34321
tp34322
I1
s(g23859
I42
g23860
Vinsert
p34323
I42
VSimpleName: SQLIntegerExpr
p34324
tp34325
I1
s(g15359
I42
g15360
Vinsert
p34326
I21
VExpressionStatement
p34327
tp34328
I3
s(g141
I42
g142
Vinsert
p34329
I43
VSimpleType: SQLExpr
p34330
tp34331
I10
s(g2525
I42
g2526
Vinsert
p34332
I60
VVariableDeclarationStatement
p34333
tp34334
I36
s(g4765
I42
g4766
Vinsert
p34335
I39
VPrimitiveType: boolean
p34336
tp34337
I1
s(g18300
I42
g18301
Vinsert
p34338
I60
VVariableDeclarationStatement
p34339
tp34340
I1
s(g3164
I42
g3165
Vinsert
p34341
I42
VSimpleName: content
p34342
tp34343
I6
s(g3184
I42
g3185
Vinsert
p34344
I42
VSimpleName: mockStmt
p34345
tp34346
I1
s(Vinsert
p34347
I42
VSimpleName: toString
p34348
Vinsert
p34349
I42
VSimpleName: str
p34350
tp34351
I1
s(g9977
I42
g9978
Vinsert
p34352
I42
VSimpleName: Exception
p34353
tp34354
I12
s(g29022
I42
g29023
Vinsert
p34355
I42
VSimpleName: output
p34356
tp34357
I2
s(g3719
I42
g3720
Vinsert
p34358
I42
VSimpleName: assertEquals
p34359
tp34360
I137
s(g9914
I42
g9915
Vinsert
p34361
I39
VPrimitiveType: long
p34362
tp34363
I1
s(g8919
I42
g8920
Vinsert
p34364
I43
VSimpleType: OracleSelectParser
p34365
tp34366
I1
s(g3228
I42
g3229
Vinsert
p34367
I42
VSimpleName: toSQL
p34368
tp34369
I2
s(g10011
I42
g10012
Vinsert
p34370
I59
VVariableDeclarationFragment
p34371
tp34372
I2
s(g15828
I42
g15829
Vinsert
p34373
I42
VSimpleName: hasBeforeComment
p34374
tp34375
I1
s(g6359
I42
g6360
Vinsert
p34376
I8
VBlock
p34377
tp34378
I1
s(g13643
I42
g13644
Vinsert
p34379
I7
VAssignment: =
p34380
tp34381
I1
s(g429
I42
g430
Vinsert
p34382
I42
VSimpleName: x
p34383
tp34384
I3
s(g6521
I42
g6522
Vinsert
p34385
I40
VQualifiedName: com.alibaba.druid.sql.dialect.oracle.ast.OracleHint
p34386
tp34387
I1
s(g25882
I42
g25883
Vinsert
p34388
I39
VPrimitiveType: int
p34389
tp34390
I1
s(Vinsert
p34391
I42
VSimpleName: assertFalse
p34392
Vinsert
p34393
I42
VSimpleName: setUpdateWhereAlayTrueCheck
p34394
tp34395
I1
s(Vinsert
p34396
I42
VSimpleName: token
p34397
Vinsert
p34398
I52
VThisExpression
p34399
tp34400
I15
s(g5528
I42
g5529
Vinsert
p34401
I42
VSimpleName: originalContext
p34402
tp34403
I2
s(g246
I42
g247
Vinsert
p34404
I42
VSimpleName: accept
p34405
tp34406
I10
s(g10571
I42
g10572
Vinsert
p34407
I34
VNumberLiteral: 0
p34408
tp34409
I6
s(Vinsert
p34410
I42
VSimpleName: assertEquals
p34411
Vinsert
p34412
I42
VSimpleName: EvalMethodTest_len
p34413
tp34414
I1
s(g28347
I42
g28348
Vinsert
p34415
I7
VAssignment: =
p34416
tp34417
I1
s(Vinsert
p34418
I42
VSimpleName: assertNotNull
p34419
Vinsert
p34420
I42
VSimpleName: e
p34421
tp34422
I11
s(Vinsert
p34423
I42
VSimpleName: printStackTrace
p34424
Vinsert
p34425
I60
VVariableDeclarationStatement
p34426
tp34427
I2
s(g5872
I42
g5873
Vinsert
p34428
I41
VReturnStatement
p34429
tp34430
I4
s(g3261
I42
g3262
Vinsert
p34431
I42
VSimpleName: value
p34432
tp34433
I2
s(g11616
I42
g11617
Vinsert
p34434
I42
VSimpleName: into
p34435
tp34436
I1
s(g2253
I42
g2254
Vinsert
p34437
I42
VSimpleName: opt
p34438
tp34439
I2
s(g8677
I42
g8678
Vinsert
p34440
I42
VSimpleName: writeObject
p34441
tp34442
I1
s(g31352
I42
g31353
Vinsert
p34443
I42
VSimpleName: SQLEvalVisitor
p34444
tp34445
I1
s(g32948
I42
g32949
Vinsert
p34446
I42
VSimpleName: test_drop_function
p34447
tp34448
I4
s(Vinsert
p34449
I42
VSimpleName: getParameters
p34450
Vinsert
p34451
I7
VAssignment: =
p34452
tp34453
I1
s(g33739
I42
g33740
Vinsert
p34454
I42
VSimpleName: stmt
p34455
tp34456
I1
s(g8788
I42
g8789
Vinsert
p34457
I42
VSimpleName: options
p34458
tp34459
I1
s(g5744
I42
g5745
Vinsert
p34460
I45
VStringLiteral: "numtodsinterval(1, 'day')"
p34461
tp34462
I1
s(Vinsert
p34463
I42
VSimpleName: parseStatements
p34464
Vinsert
p34465
I45
VStringLiteral: "select * from t where not match('', '') or (c > 0 and d >0)"
p34466
tp34467
I1
s(Vinsert
p34468
I42
VSimpleName: set
p34469
Vinsert
p34470
I42
VSimpleName: ident
p34471
tp34472
I4
s(g5610
I42
g5611
Vinsert
p34473
I42
VSimpleName: clearStatementCache
p34474
tp34475
I1
s(g15500
I42
g15501
Vinsert
p34476
I42
VSimpleName: put
p34477
tp34478
I1
s(g738
I42
g739
Vinsert
p34479
I42
VSimpleName: String
p34480
tp34481
I2
s(Vinsert
p34482
I42
VSimpleName: assertTrue
p34483
Vinsert
p34484
I45
VStringLiteral: "DELETE SYS_ACCNBAL WHERE ISNULL(AMTN_Y,0)=0 AND ISNULL(AMTN_B,0)=0 AND ISNULL(AMTN_D,0)=0 AND ISNULL(AMTN_C,0)=0"
p34485
tp34486
I1
s(g25675
I42
g25676
Vinsert
p34487
I8
VBlock
p34488
tp34489
I1
s(g9503
I42
g9504
Vinsert
p34490
I42
VSimpleName: ArrayList
p34491
tp34492
I1
s(g13543
I42
g13544
Vinsert
p34493
I45
VStringLiteral: "DELETE FROM ecc_cpr.ccg_gts_Boardlw AS i\u005cn"
p34494
tp34495
I1
s(Vinsert
p34496
I42
VSimpleName: getAttribute
p34497
Vinsert
p34498
I42
VSimpleName: trim_option
p34499
tp34500
I1
s(g5079
I42
g5080
Vinsert
p34501
I42
VSimpleName: tearDown
p34502
tp34503
I20
s(g2019
I42
g2020
Vinsert
p34504
I8
VBlock
p34505
tp34506
I1
s(g8627
I42
g8628
Vinsert
p34507
I32
VMethodInvocation
p34508
tp34509
I3
s(Vinsert
p34510
I42
VSimpleName: token
p34511
Vinsert
p34512
I42
VSimpleName: SQLExpr
p34513
tp34514
I5
s(g12822
I42
g12823
Vinsert
p34515
I7
VAssignment: =
p34516
tp34517
I1
s(Vinsert
p34518
I42
VSimpleName: add
p34519
Vinsert
p34520
I42
VSimpleName: SQLAssignItem
p34521
tp34522
I1
s(g502
I42
g503
Vinsert
p34523
I42
VSimpleName: parser
p34524
tp34525
I2
s(g206
I42
g207
Vinsert
p34526
I42
VSimpleName: dataSource
p34527
tp34528
I3
s(g14034
I42
g14035
Vinsert
p34529
I45
VStringLiteral: "insert into table a select * from b limit 1"
p34530
tp34531
I1
s(g1589
I42
g1590
Vinsert
p34532
I32
VMethodInvocation
p34533
tp34534
I3
s(g8090
I42
g8091
Vinsert
p34535
I40
VQualifiedName: OracleCreateTableStatement.Organization
p34536
tp34537
I2
s(g1830
I42
g1831
Vinsert
p34538
I42
VSimpleName: conn
p34539
tp34540
I4
s(g31920
I42
g31921
Vinsert
p34541
I34
VNumberLiteral: 0
p34542
tp34543
I9
s(g18437
I42
g18438
Vinsert
p34544
I45
VStringLiteral: "com.mysql.jdbc.Driver"
p34545
tp34546
I1
s(g10422
I42
g10423
Vinsert
p34547
I42
VSimpleName: error
p34548
tp34549
I2
s(g5597
I42
g5598
Vinsert
p34550
I42
VSimpleName: from
p34551
tp34552
I2
s(g11574
I42
g11575
Vinsert
p34553
I42
VSimpleName: array
p34554
tp34555
I1
s(g1135
I42
g1136
Vinsert
p34556
I14
VClassInstanceCreation
p34557
tp34558
I1
s(g8627
I42
g8628
Vinsert
p34559
I14
VClassInstanceCreation
p34560
tp34561
I1
s(g7502
I42
g7503
Vinsert
p34562
I9
VBooleanLiteral: false
p34563
tp34564
I2
s(Vinsert
p34565
I42
VSimpleName: format
p34566
Vinsert
p34567
I39
VPrimitiveType: void
p34568
tp34569
I1
s(g16868
I42
g16869
Vinsert
p34570
I42
VSimpleName: unwrap
p34571
tp34572
I1
s(g5195
I42
g5196
Vinsert
p34573
I42
VSimpleName: equalsIgnoreCase
p34574
tp34575
I1
s(Vinsert
p34576
I42
VSimpleName: equals
p34577
Vinsert
p34578
I40
VQualifiedName: com.alibaba.druid.sql.ast.expr.SQLVariantRefExpr
p34579
tp34580
I1
s(g2624
I42
g2625
Vinsert
p34581
I83
VModifier: public
p34582
tp34583
I1
s(g11297
I42
g11298
Vinsert
p34584
I42
VSimpleName: isAndroid
p34585
tp34586
I2
s(g3654
I42
g3655
Vinsert
p34587
I14
VClassInstanceCreation
p34588
tp34589
I1
s(g9355
I42
g9356
Vinsert
p34590
I59
VVariableDeclarationFragment
p34591
tp34592
I2
s(g3365
I42
g3366
Vinsert
p34593
I42
VSimpleName: IOUtils
p34594
tp34595
I1
s(g10991
I42
g10992
Vinsert
p34596
I42
VSimpleName: setWindowing
p34597
tp34598
I1
s(g15632
I42
g15633
Vinsert
p34599
I45
VStringLiteral: "\u005ct\u005ctINTO curr_comm\u005cn"
p34600
tp34601
I1
s(g2314
I42
g2315
Vinsert
p34602
I42
VSimpleName: SQLExpr
p34603
tp34604
I3
s(g14361
I42
g14362
Vinsert
p34605
I42
VSimpleName: visit
p34606
tp34607
I9
s(Vinsert
p34608
I42
VSimpleName: checkValid
p34609
Vinsert
p34610
I42
VSimpleName: SQLServerProvider
p34611
tp34612
I2
s(g26868
I42
g26869
Vinsert
p34613
I78
VMarkerAnnotation
p34614
tp34615
I2
s(g17633
I42
g17634
Vinsert
p34616
I42
VSimpleName: parameters
p34617
tp34618
I3
s(g8480
I42
g8481
Vinsert
p34619
I60
VVariableDeclarationStatement
p34620
tp34621
I1
s(Vinsert
p34622
I42
VSimpleName: getLoginTimeout
p34623
Vinsert
p34624
I42
VSimpleName: getLogWriter
p34625
tp34626
I1
s(g17199
I42
g17200
Vinsert
p34627
I42
VSimpleName: dbType
p34628
tp34629
I1
s(g10508
I42
g10509
Vinsert
p34630
I42
VSimpleName: filterSize
p34631
tp34632
I1
s(g7678
I42
g7679
Vinsert
p34633
I52
VThisExpression
p34634
tp34635
I2
s(g12090
I42
g12091
Vinsert
p34636
I42
VSimpleName: isExceptionFatal
p34637
tp34638
I1
s(g1443
I42
g1444
Vinsert
p34639
I45
VStringLiteral: "ALTER TABLE tnrange"
p34640
tp34641
I19
s(g2987
I42
g2988
Vinsert
p34642
I42
VSimpleName: a
p34643
tp34644
I2
s(g6162
I42
g6163
Vinsert
p34645
I42
VSimpleName: x
p34646
tp34647
I74
s(g34186
I42
g34187
Vinsert
p34648
I45
VStringLiteral: "session_user"
p34649
tp34650
I1
s(g1594
I42
g1595
Vinsert
p34651
I42
VSimpleName: x
p34652
tp34653
I1
s(Vinsert
p34654
I42
VSimpleName: toMySqlString
p34655
Vinsert
p34656
I45
VStringLiteral: "\u005ct\u005ctAND a.acct_day = '03')\u005cn"
p34657
tp34658
I1
s(g20596
I42
g20597
Vinsert
p34659
I45
VStringLiteral: "UNIQUE CLUSTERED"
p34660
tp34661
I1
s(Vinsert
p34662
I42
VSimpleName: assertEquals
p34663
Vinsert
p34664
I45
VStringLiteral: "CREATE TABLE xxx\u005cn"
p34665
tp34666
I1
s(g2765
I42
g2766
Vinsert
p34667
I42
VSimpleName: opt
p34668
tp34669
I3
s(g9433
I42
g9434
Vinsert
p34670
I8
VBlock
p34671
tp34672
I3
s(g19573
I42
g19574
Vinsert
p34673
I42
VSimpleName: assertEquals
p34674
tp34675
I1
s(g21499
I42
g21500
Vinsert
p34676
I42
VSimpleName: URL
p34677
tp34678
I1
s(g14110
I42
g14111
Vinsert
p34679
I11
VCastExpression
p34680
tp34681
I2
s(g4589
I42
g4590
Vinsert
p34682
I42
VSimpleName: add
p34683
tp34684
I1
s(Vinsert
p34685
I42
VSimpleName: nextToken
p34686
Vinsert
p34687
I45
VStringLiteral: "GROUPING"
p34688
tp34689
I1
s(g14001
I42
g14002
Vinsert
p34690
I43
VSimpleType: DataSourceHolder
p34691
tp34692
I1
s(g6791
I42
g6792
Vinsert
p34693
I42
VSimpleName: Assert
p34694
tp34695
I3
s(g7707
I42
g7708
Vinsert
p34696
I43
VSimpleType: MySqlShowProcessListStatement
p34697
tp34698
I2
s(g31568
I42
g31569
Vinsert
p34699
I42
VSimpleName: valueExpr
p34700
tp34701
I3
s(g1261
I42
g1262
Vinsert
p34702
I27
VInfixExpression: !=
p34703
tp34704
I1
s(Vinsert
p34705
I42
VSimpleName: toBytes
p34706
Vinsert
p34707
I43
VSimpleType: BigDecimal
p34708
tp34709
I4
s(g3040
I42
g3041
Vinsert
p34710
I52
VThisExpression
p34711
tp34712
I1
s(g962
I42
g963
Vinsert
p34713
I42
VSimpleName: error
p34714
tp34715
I1
s(Vinsert
p34716
I42
VSimpleName: charAt
p34717
Vinsert
p34718
I27
VInfixExpression: +
p34719
tp34720
I1
s(Vinsert
p34721
I42
VSimpleName: println
p34722
Vinsert
p34723
I45
VStringLiteral: "LIMIT 1000;"
p34724
tp34725
I1
s(g15490
I42
g15491
Vinsert
p34726
I42
VSimpleName: e
p34727
tp34728
I1
s(g3684
I42
g3685
Vinsert
p34729
I42
VSimpleName: add
p34730
tp34731
I1
s(g23271
I42
g23272
Vinsert
p34732
I13
VCharacterLiteral: ']'
p34733
tp34734
I2
s(g2019
I42
g2020
Vinsert
p34735
I42
VSimpleName: conditionValue
p34736
tp34737
I1
s(Vinsert
p34738
I42
VSimpleName: println
p34739
Vinsert
p34740
I42
VSimpleName: toSQLString
p34741
tp34742
I5
s(g25279
I42
g25280
Vinsert
p34743
I45
VStringLiteral: "W757xtr4B5ICysO43qOCpqYu0laZ;"
p34744
tp34745
I1
s(g1594
I42
g1595
Vinsert
p34746
I45
VStringLiteral: "DEFAULT DIRECTORY "
p34747
tp34748
I1
s(g7764
I42
g7765
Vinsert
p34749
I43
VSimpleType: SQLExprHint
p34750
tp34751
I1
s(g1564
I42
g1565
Vinsert
p34752
I42
VSimpleName: decrementIndent
p34753
tp34754
I1
s(g8409
I42
g8410
Vinsert
p34755
I42
VSimpleName: methodInfo
p34756
tp34757
I1
s(g14088
I42
g14089
Vinsert
p34758
I32
VMethodInvocation
p34759
tp34760
I10
s(g14664
I42
g14665
Vinsert
p34761
I45
VStringLiteral: "\u005cnSTORAGE (INITIAL 8M MAXSIZE 1G)"
p34762
tp34763
I2
s(g14917
I42
g14918
Vinsert
p34764
I45
VStringLiteral: "WHERE b.cp_code = ?\u005cn"
p34765
tp34766
I1
s(g14431
I42
g14432
Vinsert
p34767
I7
VAssignment: =
p34768
tp34769
I3
s(g14361
I42
g14362
Vinsert
p34770
I78
VMarkerAnnotation
p34771
tp34772
I7
s(g542
I42
g543
Vinsert
p34773
I45
VStringLiteral: "\u005ct\u005ct'VerifyMobileCheckCode', \u005cn"
p34774
tp34775
I1
s(g336
I42
g337
Vinsert
p34776
I45
VStringLiteral: "ALL"
p34777
tp34778
I1
s(g8603
I42
g8604
Vinsert
p34779
I42
VSimpleName: getPermitSchemas
p34780
tp34781
I2
s(g22469
I42
g22470
Vinsert
p34782
I42
VSimpleName: CommunicationsException
p34783
tp34784
I1
s(Vinsert
p34785
I42
VSimpleName: setParent
p34786
Vinsert
p34787
I45
VStringLiteral: "CURRENT_TIMESTAMP"
p34788
tp34789
I1
s(Vinsert
p34790
I42
VSimpleName: length
p34791
Vinsert
p34792
I42
VSimpleName: h
p34793
tp34794
I2
s(g12849
I42
g12850
Vinsert
p34795
I8
VBlock
p34796
tp34797
I1
s(g5176
I42
g5177
Vinsert
p34798
I32
VMethodInvocation
p34799
tp34800
I9
s(g8682
I42
g8683
Vinsert
p34801
I45
VStringLiteral: "\u005ctAFTER INSERT OR DELETE OR UPDATE\u005cn"
p34802
tp34803
I1
s(Vinsert
p34804
I42
VSimpleName: assertFalse
p34805
Vinsert
p34806
I42
VSimpleName: testMySql
p34807
tp34808
I2
s(Vinsert
p34809
I42
VSimpleName: getConnection
p34810
Vinsert
p34811
I42
VSimpleName: setFilters
p34812
tp34813
I1
s(g26548
I42
g26549
Vinsert
p34814
I32
VMethodInvocation
p34815
tp34816
I2
s(g2829
I42
g2830
Vinsert
p34817
I8
VBlock
p34818
tp34819
I1
s(g18235
I42
g18236
Vinsert
p34820
I42
VSimpleName: SQLSubPartition
p34821
tp34822
I2
s(g9055
I42
g9056
Vinsert
p34823
I42
VSimpleName: SQLExpr
p34824
tp34825
I12
s(g19777
I42
g19778
Vinsert
p34826
I42
VSimpleName: setRowCount
p34827
tp34828
I1
s(Vinsert
p34829
I42
VSimpleName: currentTimeMillis
p34830
Vinsert
p34831
I42
VSimpleName: id
p34832
tp34833
I3
s(g20411
I42
g20412
Vinsert
p34834
I59
VVariableDeclarationFragment
p34835
tp34836
I1
s(g25001
I42
g25002
Vinsert
p34837
I39
VPrimitiveType: int
p34838
tp34839
I1
s(g2847
I42
g2848
Vinsert
p34840
I42
VSimpleName: SQLExprTableSource
p34841
tp34842
I1
s(g21147
I42
g21148
Vinsert
p34843
I38
VPrefixExpression: ++
p34844
tp34845
I2
s(g4263
I42
g4264
Vinsert
p34846
I32
VMethodInvocation
p34847
tp34848
I1
s(g9397
I42
g9398
Vinsert
p34849
I8
VBlock
p34850
tp34851
I1
s(g9243
I42
g9244
Vinsert
p34852
I43
VSimpleType: SQLLateralViewTableSource
p34853
tp34854
I2
s(Vinsert
p34855
I42
VSimpleName: replaceAll
p34856
Vinsert
p34857
I25
VIfStatement
p34858
tp34859
I1
s(g15848
I42
g15849
Vinsert
p34860
I45
VStringLiteral: "\u005ctDROP TABLE _tmp;\u005cn"
p34861
tp34862
I1
s(Vinsert
p34863
I42
VSimpleName: getLeft
p34864
Vinsert
p34865
I27
VInfixExpression: +
p34866
tp34867
I1
s(Vinsert
p34868
I42
VSimpleName: token
p34869
Vinsert
p34870
I40
VQualifiedName: Token.OR
p34871
tp34872
I1
s(g2268
I42
g2269
Vinsert
p34873
I54
VTryStatement
p34874
tp34875
I1
s(g7158
I42
g7159
Vinsert
p34876
I43
VSimpleType: SQLException
p34877
tp34878
I1
s(g9028
I42
g9029
Vinsert
p34879
I42
VSimpleName: x
p34880
tp34881
I2
s(g15875
I42
g15876
Vinsert
p34882
I83
VModifier: public
p34883
tp34884
I1
s(g3179
I42
g3180
Vinsert
p34885
I42
VSimpleName: permitSchemas
p34886
tp34887
I4
s(g562
I42
g563
Vinsert
p34888
I42
VSimpleName: CompositeData
p34889
tp34890
I2
s(g8113
I42
g8114
Vinsert
p34891
I11
VCastExpression
p34892
tp34893
I1
s(g2178
I42
g2179
Vinsert
p34894
I27
VInfixExpression: ==
p34895
tp34896
I6
s(g15177
I42
g15178
Vinsert
p34897
I8
VBlock
p34898
tp34899
I8
s(g18907
I42
g18908
Vinsert
p34900
I45
VStringLiteral: "        ADD COLUMN variation_value_2 DECIMAL(30, 20) NULL DEFAULT NULL,\u005cn"
p34901
tp34902
I1
s(g28635
I42
g28636
Vinsert
p34903
I42
VSimpleName: className
p34904
tp34905
I2
s(g15894
I42
g15895
Vinsert
p34906
I45
VStringLiteral: "TODO "
p34907
tp34908
I3
s(g16145
I42
g16146
Vinsert
p34909
I33
VNullLiteral
p34910
tp34911
I3
s(g11601
I42
g11602
Vinsert
p34912
I27
VInfixExpression: !=
p34913
tp34914
I1
s(g6676
I42
g6677
Vinsert
p34915
I34
VNumberLiteral: 1000
p34916
tp34917
I2
s(g5805
I42
g5806
Vinsert
p34918
I34
VNumberLiteral: 1000
p34919
tp34920
I1
s(Vinsert
p34921
I42
VSimpleName: assertEquals
p34922
Vinsert
p34923
I45
VStringLiteral: "drop view if exists view_name;"
p34924
tp34925
I1
s(g11701
I42
g11702
Vinsert
p34926
I43
VSimpleType: TestCase
p34927
tp34928
I1
s(g748
I42
g749
Vinsert
p34929
I59
VVariableDeclarationFragment
p34930
tp34931
I1
s(g14540
I42
g14541
Vinsert
p34932
I42
VSimpleName: chain
p34933
tp34934
I2
s(g4477
I42
g4478
Vinsert
p34935
I60
VVariableDeclarationStatement
p34936
tp34937
I1
s(g22423
I42
g22424
Vinsert
p34938
I42
VSimpleName: acceptsURL
p34939
tp34940
I1
s(g8184
I42
g8185
Vinsert
p34941
I42
VSimpleName: setSql
p34942
tp34943
I1
s(g8542
I42
g8543
Vinsert
p34944
I42
VSimpleName: eq
p34945
tp34946
I3
s(g1710
I42
g1711
Vinsert
p34947
I32
VMethodInvocation
p34948
tp34949
I3
s(g18768
I42
g18769
Vinsert
p34950
I39
VPrimitiveType: void
p34951
tp34952
I3
s(g13136
I42
g13137
Vinsert
p34953
I40
VQualifiedName: Token.FROM
p34954
tp34955
I3
s(g5176
I42
g5177
Vinsert
p34956
I42
VSimpleName: name
p34957
tp34958
I4
s(g10604
I42
g10605
Vinsert
p34959
I34
VNumberLiteral: 0
p34960
tp34961
I3
s(g1027
I42
g1028
Vinsert
p34962
I42
VSimpleName: accept
p34963
tp34964
I1
s(g5597
I42
g5598
Vinsert
p34965
I42
VSimpleName: SQLSubqueryTableSource
p34966
tp34967
I4
s(g46
I42
g47
Vinsert
p34968
I27
VInfixExpression: !=
p34969
tp34970
I12
s(g12143
I42
g12144
Vinsert
p34971
I42
VSimpleName: jdbcExecuteCount
p34972
tp34973
I1
s(g3073
I42
g3074
Vinsert
p34974
I33
VNullLiteral
p34975
tp34976
I6
s(g4615
I42
g4616
Vinsert
p34977
I32
VMethodInvocation
p34978
tp34979
I3
s(Vinsert
p34980
I42
VSimpleName: clone
p34981
Vinsert
p34982
I42
VSimpleName: value
p34983
tp34984
I5
s(g19678
I42
g19679
Vinsert
p34985
I8
VBlock
p34986
tp34987
I1
s(Vinsert
p34988
I42
VSimpleName: token
p34989
Vinsert
p34990
I39
VPrimitiveType: int
p34991
tp34992
I1
s(g8006
I42
g8007
Vinsert
p34993
I41
VReturnStatement
p34994
tp34995
I1
s(Vinsert
p34996
I42
VSimpleName: currentTimeMillis
p34997
Vinsert
p34998
I42
VSimpleName: idleTimeCount
p34999
tp35000
I3
s(g5176
I42
g5177
Vinsert
p35001
I22
VFieldAccess
p35002
tp35003
I2
s(g2054
I42
g2055
Vinsert
p35004
I42
VSimpleName: decrementExecutingCount
p35005
tp35006
I1
s(Vinsert
p35007
I42
VSimpleName: hashCode
p35008
Vinsert
p35009
I43
VSimpleType: PreparedStatementKey
p35010
tp35011
I2
s(g449
I42
g450
Vinsert
p35012
I42
VSimpleName: pstmt
p35013
tp35014
I13
s(g20369
I42
g20370
Vinsert
p35015
I42
VSimpleName: isIgnore
p35016
tp35017
I1
s(g4362
I42
g4363
Vinsert
p35018
I42
VSimpleName: lowerCaseName
p35019
tp35020
I1
s(Vinsert
p35021
I42
VSimpleName: forName
p35022
Vinsert
p35023
I42
VSimpleName: clazz
p35024
tp35025
I1
s(Vinsert
p35026
I42
VSimpleName: getLexer
p35027
Vinsert
p35028
I41
VReturnStatement
p35029
tp35030
I1
s(g7450
I42
g7451
Vinsert
p35031
I59
VVariableDeclarationFragment
p35032
tp35033
I1
s(Vinsert
p35034
I42
VSimpleName: getException
p35035
Vinsert
p35036
I32
VMethodInvocation
p35037
tp35038
I4
s(g3714
I42
g3715
Vinsert
p35039
I53
VThrowStatement
p35040
tp35041
I1
s(g3949
I42
g3950
Vinsert
p35042
I60
VVariableDeclarationStatement
p35043
tp35044
I2
s(g3857
I42
g3858
Vinsert
p35045
I44
VSingleVariableDeclaration
p35046
tp35047
I5
s(g12776
I42
g12777
Vinsert
p35048
I42
VSimpleName: incrementSelectIntoCount
p35049
tp35050
I1
s(Vinsert
p35051
I42
VSimpleName: assertEquals
p35052
Vinsert
p35053
I42
VSimpleName: EvalMethodTest_lcase
p35054
tp35055
I1
s(g15728
I42
g15729
Vinsert
p35056
I9
VBooleanLiteral: true
p35057
tp35058
I1
s(g7184
I42
g7185
Vinsert
p35059
I42
VSimpleName: configFromProperties
p35060
tp35061
I1
s(g9786
I42
g9787
Vinsert
p35062
I40
VQualifiedName: Token.RPAREN
p35063
tp35064
I1
s(g7802
I42
g7803
Vinsert
p35065
I42
VSimpleName: DruidPooledConnection
p35066
tp35067
I38
s(g17082
I42
g17083
Vinsert
p35068
I42
VSimpleName: SqlMapSession
p35069
tp35070
I2
s(g15188
I42
g15189
Vinsert
p35071
I41
VReturnStatement
p35072
tp35073
I7
s(g821
I42
g822
Vinsert
p35074
I62
VInstanceofExpression
p35075
tp35076
I1
s(g20456
I42
g20457
Vinsert
p35077
I42
VSimpleName: log
p35078
tp35079
I2
s(g27276
I42
g27277
Vinsert
p35080
I42
VSimpleName: list
p35081
tp35082
I1
s(Vinsert
p35083
I42
VSimpleName: token
p35084
Vinsert
p35085
I25
VIfStatement
p35086
tp35087
I120
s(g997
I42
g998
Vinsert
p35088
I42
VSimpleName: COUNT
p35089
tp35090
I1
s(g4447
I42
g4448
Vinsert
p35091
I42
VSimpleName: setSelectUnionCheck
p35092
tp35093
I1
s(g9327
I42
g9328
Vinsert
p35094
I25
VIfStatement
p35095
tp35096
I1
s(g6455
I42
g6456
Vinsert
p35097
I8
VBlock
p35098
tp35099
I1
s(Vinsert
p35100
I42
VSimpleName: setValue
p35101
Vinsert
p35102
I43
VSimpleType: PGPolygonExpr
p35103
tp35104
I2
s(g4477
I42
g4478
Vinsert
p35105
I39
VPrimitiveType: void
p35106
tp35107
I1
s(g34980
I42
g34981
Vinsert
p35108
I42
VSimpleName: values
p35109
tp35110
I2
s(g1579
I42
g1580
Vinsert
p35111
I32
VMethodInvocation
p35112
tp35113
I33
s(Vinsert
p35114
I42
VSimpleName: init
p35115
Vinsert
p35116
I34
VNumberLiteral: 1
p35117
tp35118
I2
s(g15048
I42
g15049
Vinsert
p35119
I42
VSimpleName: Object
p35120
tp35121
I1
s(g8661
I42
g8662
Vinsert
p35122
I45
VStringLiteral: "USING"
p35123
tp35124
I2
s(g14583
I42
g14584
Vinsert
p35125
I44
VSingleVariableDeclaration
p35126
tp35127
I4
s(g11320
I42
g11321
Vinsert
p35128
I60
VVariableDeclarationStatement
p35129
tp35130
I2
s(g11428
I42
g11429
Vinsert
p35131
I22
VFieldAccess
p35132
tp35133
I1
s(Vinsert
p35134
I42
VSimpleName: visit
p35135
Vinsert
p35136
I42
VSimpleName: SQLExpr
p35137
tp35138
I6
s(g371
I42
g372
Vinsert
p35139
I45
VStringLiteral: "WHERE ID = 1"
p35140
tp35141
I1
s(g14551
I42
g14552
Vinsert
p35142
I45
VStringLiteral: " TO "
p35143
tp35144
I1
s(Vinsert
p35145
I42
VSimpleName: readAndResetComments
p35146
Vinsert
p35147
I42
VSimpleName: beforeComments
p35148
tp35149
I2
s(g13089
I42
g13090
Vinsert
p35150
I33
VNullLiteral
p35151
tp35152
I1
s(g6434
I42
g6435
Vinsert
p35153
I42
VSimpleName: OracleSelectQueryBlock
p35154
tp35155
I1
s(g7206
I42
g7207
Vinsert
p35156
I16
VConditionalExpression
p35157
tp35158
I1
s(g13084
I42
g13085
Vinsert
p35159
I21
VExpressionStatement
p35160
tp35161
I15
s(g2009
I42
g2010
Vinsert
p35162
I59
VVariableDeclarationFragment
p35163
tp35164
I1
s(g2657
I42
g2658
Vinsert
p35165
I46
VSuperConstructorInvocation
p35166
tp35167
I1
s(g1471
I42
g1472
Vinsert
p35168
I42
VSimpleName: run
p35169
tp35170
I7
s(Vinsert
p35171
I42
VSimpleName: getName
p35172
Vinsert
p35173
I43
VSimpleType: SQLVariantRefExpr
p35174
tp35175
I3
s(g5936
I42
g5937
Vinsert
p35176
I45
VStringLiteral: "\u005ct\u005ctfrom (\u005cn"
p35177
tp35178
I1
s(g14985
I42
g14986
Vinsert
p35179
I27
VInfixExpression: ==
p35180
tp35181
I1
s(Vinsert
p35182
I42
VSimpleName: name
p35183
Vinsert
p35184
I40
VQualifiedName: MySqlRenameTableStatement.Item
p35185
tp35186
I4
s(g13664
I42
g13665
Vinsert
p35187
I42
VSimpleName: identifierEquals
p35188
tp35189
I2
s(g15480
I42
g15481
Vinsert
p35190
I36
VParenthesizedExpression
p35191
tp35192
I1
s(g6074
I42
g6075
Vinsert
p35193
I42
VSimpleName: lexer
p35194
tp35195
I1
s(g34449
I42
g34450
Vinsert
p35196
I42
VSimpleName: mockPstmt
p35197
tp35198
I2
s(g14551
I42
g14552
Vinsert
p35199
I25
VIfStatement
p35200
tp35201
I1
s(g18065
I42
g18066
Vinsert
p35202
I42
VSimpleName: setParameterized
p35203
tp35204
I1
s(g5969
I42
g5970
Vinsert
p35205
I42
VSimpleName: TabularData
p35206
tp35207
I1
s(g1334
I42
g1335
Vinsert
p35208
I45
VStringLiteral: "\u005cn\u005ctDURATION_ NUMBER(19, 0),"
p35209
tp35210
I2
s(g8350
I42
g8351
Vinsert
p35211
I12
VCatchClause
p35212
tp35213
I1
s(g12716
I42
g12717
Vinsert
p35214
I14
VClassInstanceCreation
p35215
tp35216
I1
s(g4116
I42
g4117
Vinsert
p35217
I13
VCharacterLiteral: ' '
p35218
tp35219
I1
s(g4227
I42
g4228
Vinsert
p35220
I60
VVariableDeclarationStatement
p35221
tp35222
I1
s(Vinsert
p35223
I42
VSimpleName: setPoolPreparedStatements
p35224
Vinsert
p35225
I45
VStringLiteral: "stat"
p35226
tp35227
I1
s(g8179
I42
g8180
Vinsert
p35228
I42
VSimpleName: stats
p35229
tp35230
I1
s(g6727
I42
g6728
Vinsert
p35231
I21
VExpressionStatement
p35232
tp35233
I2
s(g24278
I42
g24279
Vinsert
p35234
I27
VInfixExpression: &&
p35235
tp35236
I1
s(Vinsert
p35237
I42
VSimpleName: add
p35238
Vinsert
p35239
I74
VParameterizedType: ArrayList<Filter>
p35240
tp35241
I1
s(g10174
I42
g10175
Vinsert
p35242
I32
VMethodInvocation
p35243
tp35244
I1
s(g2233
I42
g2234
Vinsert
p35245
I42
VSimpleName: OracleLockTableStatement
p35246
tp35247
I1
s(Vinsert
p35248
I42
VSimpleName: getGlobalPartitions
p35249
Vinsert
p35250
I13
VCharacterLiteral: ')'
p35251
tp35252
I1
s(g1536
I42
g1537
Vinsert
p35253
I43
VSimpleType: Constructor
p35254
tp35255
I1
s(g670
I42
g671
Vinsert
p35256
I52
VThisExpression
p35257
tp35258
I2
s(g18531
I42
g18532
Vinsert
p35259
I42
VSimpleName: SQLPropertyExpr
p35260
tp35261
I2
s(g4357
I42
g4358
Vinsert
p35262
I45
VStringLiteral: "ARRAY["
p35263
tp35264
I1
s(g9987
I42
g9988
Vinsert
p35265
I43
VSimpleType: SQLNotExpr
p35266
tp35267
I1
s(g1506
I42
g1507
Vinsert
p35268
I43
VSimpleType: SQLExistsExpr
p35269
tp35270
I1
s(g26385
I42
g26386
Vinsert
p35271
I42
VSimpleName: assertEquals
p35272
tp35273
I1
s(g1825
I42
g1826
Vinsert
p35274
I42
VSimpleName: Connection
p35275
tp35276
I66
s(g6172
I42
g6173
Vinsert
p35277
I11
VCastExpression
p35278
tp35279
I1
s(g1750
I42
g1751
Vinsert
p35280
I43
VSimpleType: StringBuffer
p35281
tp35282
I4
s(g2915
I42
g2916
Vinsert
p35283
I40
VQualifiedName: Token.FROM
p35284
tp35285
I1
s(g1622
I42
g1623
Vinsert
p35286
I42
VSimpleName: addSubPartition
p35287
tp35288
I1
s(g9446
I42
g9447
Vinsert
p35289
I42
VSimpleName: keywods
p35290
tp35291
I2
s(g12346
I42
g12347
Vinsert
p35292
I43
VSimpleType: Exception
p35293
tp35294
I1
s(g10726
I42
g10727
Vinsert
p35295
I27
VInfixExpression: ==
p35296
tp35297
I21
s(g2819
I42
g2820
Vinsert
p35298
I42
VSimpleName: setPreparedStatementFactory
p35299
tp35300
I1
s(g20486
I42
g20487
Vinsert
p35301
I42
VSimpleName: dataSource
p35302
tp35303
I3
s(g29658
I42
g29659
Vinsert
p35304
I42
VSimpleName: accept
p35305
tp35306
I6
s(Vinsert
p35307
I42
VSimpleName: exprRest
p35308
Vinsert
p35309
I42
VSimpleName: exprParser
p35310
tp35311
I1
s(g7650
I42
g7651
Vinsert
p35312
I41
VReturnStatement
p35313
tp35314
I1
s(g8924
I42
g8925
Vinsert
p35315
I42
VSimpleName: startFailureDetectScheduleTask
p35316
tp35317
I1
s(g20888
I42
g20889
Vinsert
p35318
I31
VMethodDeclaration
p35319
tp35320
I1
s(g8409
I42
g8410
Vinsert
p35321
I42
VSimpleName: values
p35322
tp35323
I1
s(g7607
I42
g7608
Vinsert
p35324
I42
VSimpleName: getTypes
p35325
tp35326
I1
s(g22647
I42
g22648
Vinsert
p35327
I45
VStringLiteral: "FROM duplications_index"
p35328
tp35329
I1
s(Vinsert
p35330
I42
VSimpleName: accept
p35331
Vinsert
p35332
I42
VSimpleName: getProvider
p35333
tp35334
I1
s(g9529
I42
g9530
Vinsert
p35335
I21
VExpressionStatement
p35336
tp35337
I1
s(g15314
I42
g15315
Vinsert
p35338
I42
VSimpleName: SQLUtils
p35339
tp35340
I1
s(g15602
I42
g15603
Vinsert
p35341
I42
VSimpleName: user
p35342
tp35343
I1
s(g12324
I42
g12325
Vinsert
p35344
I8
VBlock
p35345
tp35346
I1
s(g9251
I42
g9252
Vinsert
p35347
I42
VSimpleName: partition
p35348
tp35349
I1
s(g13032
I42
g13033
Vinsert
p35350
I42
VSimpleName: x
p35351
tp35352
I2
s(g21577
I42
g21578
Vinsert
p35353
I27
VInfixExpression: ==
p35354
tp35355
I2
s(g16696
I42
g16697
Vinsert
p35356
I42
VSimpleName: parser
p35357
tp35358
I32
s(g22281
I42
g22282
Vinsert
p35359
I9
VBooleanLiteral: true
p35360
tp35361
I2
s(g27350
I42
g27351
Vinsert
p35362
I44
VSingleVariableDeclaration
p35363
tp35364
I58
s(g733
I42
g734
Vinsert
p35365
I8
VBlock
p35366
tp35367
I14
s(g19278
I42
g19279
Vinsert
p35368
I43
VSimpleType: SQLSequenceExpr
p35369
tp35370
I2
s(g8409
I42
g8410
Vinsert
p35371
I42
VSimpleName: methodStats
p35372
tp35373
I1
s(Vinsert
p35374
I42
VSimpleName: clone
p35375
Vinsert
p35376
I42
VSimpleName: SQLGroupingSetExpr
p35377
tp35378
I1
s(Vinsert
p35379
I42
VSimpleName: get
p35380
Vinsert
p35381
I9
VBooleanLiteral: true
p35382
tp35383
I1
s(g4775
I42
g4776
Vinsert
p35384
I42
VSimpleName: FilterChainImpl
p35385
tp35386
I1
s(g13094
I42
g13095
Vinsert
p35387
I42
VSimpleName: args
p35388
tp35389
I1
s(g4725
I42
g4726
Vinsert
p35390
I42
VSimpleName: get
p35391
tp35392
I1
s(g8617
I42
g8618
Vinsert
p35393
I42
VSimpleName: value
p35394
tp35395
I1
s(g16232
I42
g16233
Vinsert
p35396
I45
VStringLiteral: "14a fb\u005cn"
p35397
tp35398
I1
s(g4801
I42
g4802
Vinsert
p35399
I42
VSimpleName: HBaseDriver
p35400
tp35401
I8
s(Vinsert
p35402
I42
VSimpleName: setOrderBy
p35403
Vinsert
p35404
I42
VSimpleName: x
p35405
tp35406
I1
s(g28190
I42
g28191
Vinsert
p35407
I42
VSimpleName: Assert
p35408
tp35409
I2
s(g76
I42
g77
Vinsert
p35410
I42
VSimpleName: rs
p35411
tp35412
I1
s(g11542
I42
g11543
Vinsert
p35413
I42
VSimpleName: size
p35414
tp35415
I5
s(g13607
I42
g13608
Vinsert
p35416
I42
VSimpleName: print
p35417
tp35418
I3
s(g16831
I42
g16832
Vinsert
p35419
I21
VExpressionStatement
p35420
tp35421
I2
s(g9033
I42
g9034
Vinsert
p35422
I42
VSimpleName: lexer
p35423
tp35424
I1
s(Vinsert
p35425
I42
VSimpleName: assertNotNull
p35426
Vinsert
p35427
I42
VSimpleName: InputStream
p35428
tp35429
I1
s(Vinsert
p35430
I42
VSimpleName: executeQuery
p35431
Vinsert
p35432
I42
VSimpleName: setNull
p35433
tp35434
I1
s(g11719
I42
g11720
Vinsert
p35435
I42
VSimpleName: SQLLexer
p35436
tp35437
I1
s(g8547
I42
g8548
Vinsert
p35438
I27
VInfixExpression: *
p35439
tp35440
I1
s(Vinsert
p35441
I42
VSimpleName: assertEquals
p35442
Vinsert
p35443
I45
VStringLiteral: "select RANK() OVER (PARTITION BY ui ORDER BY duration DESC) rank from dual"
p35444
tp35445
I1
s(g25353
I42
g25354
Vinsert
p35446
I42
VSimpleName: parseFrom
p35447
tp35448
I1
s(g32508
I42
g32509
Vinsert
p35449
I42
VSimpleName: queryBlock
p35450
tp35451
I2
s(Vinsert
p35452
I42
VSimpleName: setOffset
p35453
Vinsert
p35454
I42
VSimpleName: setParent
p35455
tp35456
I1
s(g9544
I42
g9545
Vinsert
p35457
I45
VStringLiteral: "WHERE cq.status = ? AND NOT EXISTS (SELECT ? FROM ce_queue cq2 WHERE cq.component_uuid = cq2.component_uuid AND cq2.status <> ?) "
p35458
tp35459
I1
s(g1599
I42
g1600
Vinsert
p35460
I42
VSimpleName: entry
p35461
tp35462
I1
s(g12209
I42
g12210
Vinsert
p35463
I42
VSimpleName: String
p35464
tp35465
I1
s(g12679
I42
g12680
Vinsert
p35466
I42
VSimpleName: filter
p35467
tp35468
I1
s(g2359
I42
g2360
Vinsert
p35469
I8
VBlock
p35470
tp35471
I1
s(g12324
I42
g12325
Vinsert
p35472
I42
VSimpleName: x
p35473
tp35474
I2
s(g622
I42
g623
Vinsert
p35475
I45
VStringLiteral: "RR"
p35476
tp35477
I1
s(g2314
I42
g2315
Vinsert
p35478
I42
VSimpleName: afterResolve
p35479
tp35480
I3
s(g10618
I42
g10619
Vinsert
p35481
I45
VStringLiteral: "desc"
p35482
tp35483
I1
s(g22658
I42
g22659
Vinsert
p35484
I45
VStringLiteral: "\u005cnselect *"
p35485
tp35486
I2
s(g7083
I42
g7084
Vinsert
p35487
I34
VNumberLiteral: 0x100000001b3L
p35488
tp35489
I3
s(g11706
I42
g11707
Vinsert
p35490
I25
VIfStatement
p35491
tp35492
I2
s(g14630
I42
g14631
Vinsert
p35493
I31
VMethodDeclaration
p35494
tp35495
I1
s(g5118
I42
g5119
Vinsert
p35496
I42
VSimpleName: loggerName
p35497
tp35498
I1
s(g1352
I42
g1353
Vinsert
p35499
I42
VSimpleName: getConcurrentMax
p35500
tp35501
I1
s(g11015
I42
g11016
Vinsert
p35502
I36
VParenthesizedExpression
p35503
tp35504
I1
s(Vinsert
p35505
I42
VSimpleName: fnv_64_lower_normalized
p35506
Vinsert
p35507
I42
VSimpleName: SQLTableSource
p35508
tp35509
I1
s(g11920
I42
g11921
Vinsert
p35510
I45
VStringLiteral: "timeBetweenEvictionRunsMillis=10000"
p35511
tp35512
I1
s(g26244
I42
g26245
Vinsert
p35513
I21
VExpressionStatement
p35514
tp35515
I1
s(Vinsert
p35516
I42
VSimpleName: assertEquals
p35517
Vinsert
p35518
I45
VStringLiteral: "\u005cn\u005ctDROP PARTITION p1"
p35519
tp35520
I1
s(g13493
I42
g13494
Vinsert
p35521
I42
VSimpleName: SQLVariantRefExpr
p35522
tp35523
I1
s(g27954
I42
g27955
Vinsert
p35524
I43
VSimpleType: String
p35525
tp35526
I3
s(g10687
I42
g10688
Vinsert
p35527
I53
VThrowStatement
p35528
tp35529
I1
s(g3248
I42
g3249
Vinsert
p35530
I42
VSimpleName: log
p35531
tp35532
I4
s(g1923
I42
g1924
Vinsert
p35533
I43
VSimpleType: SQLExpr
p35534
tp35535
I2
s(g21765
I42
g21766
Vinsert
p35536
I7
VAssignment: =
p35537
tp35538
I2
s(g6308
I42
g6309
Vinsert
p35539
I42
VSimpleName: value
p35540
tp35541
I1
s(g22826
I42
g22827
Vinsert
p35542
I32
VMethodInvocation
p35543
tp35544
I7
s(Vinsert
p35545
I42
VSimpleName: equalsIgnoreCase
p35546
Vinsert
p35547
I45
VStringLiteral: "org.apache.log4j.Logger"
p35548
tp35549
I1
s(g1415
I42
g1416
Vinsert
p35550
I42
VSimpleName: condition
p35551
tp35552
I1
s(g25074
I42
g25075
Vinsert
p35553
I43
VSimpleType: SQLColumnDefinition
p35554
tp35555
I1
s(g6847
I42
g6848
Vinsert
p35556
I44
VSingleVariableDeclaration
p35557
tp35558
I5
s(g13569
I42
g13570
Vinsert
p35559
I21
VExpressionStatement
p35560
tp35561
I2
s(g35545
I42
g35546
Vinsert
p35562
I45
VStringLiteral: "com.alibaba.druid.support.logging.SLF4JImpl"
p35563
tp35564
I1
s(g567
I42
g568
Vinsert
p35565
I24
VForStatement
p35566
tp35567
I3
s(g32633
I42
g32634
Vinsert
p35568
I42
VSimpleName: print0
p35569
tp35570
I1
s(g6582
I42
g6583
Vinsert
p35571
I42
VSimpleName: endVisit
p35572
tp35573
I1
s(g6051
I42
g6052
Vinsert
p35574
I45
VStringLiteral: "limit "
p35575
tp35576
I1
s(Vinsert
p35577
I42
VSimpleName: append
p35578
Vinsert
p35579
I42
VSimpleName: flag
p35580
tp35581
I1
s(g15637
I42
g15638
Vinsert
p35582
I43
VSimpleType: OracleStatementParser
p35583
tp35584
I47
s(g3113
I42
g3114
Vinsert
p35585
I42
VSimpleName: param
p35586
tp35587
I4
s(g28885
I42
g28886
Vinsert
p35588
I42
VSimpleName: toCompareOp
p35589
tp35590
I1
s(g25882
I42
g25883
Vinsert
p35591
I42
VSimpleName: setParameter
p35592
tp35593
I1
s(g7073
I42
g7074
Vinsert
p35594
I8
VBlock
p35595
tp35596
I1
s(Vinsert
p35597
I42
VSimpleName: resetStat
p35598
Vinsert
p35599
I42
VSimpleName: dataSource
p35600
tp35601
I2
s(g5892
I42
g5893
Vinsert
p35602
I32
VMethodInvocation
p35603
tp35604
I1
s(Vinsert
p35605
I42
VSimpleName: setParent
p35606
Vinsert
p35607
I42
VSimpleName: table
p35608
tp35609
I6
s(g743
I42
g744
Vinsert
p35610
I42
VSimpleName: updateCount_100_1000_Updater
p35611
tp35612
I1
s(g8340
I42
g8341
Vinsert
p35613
I34
VNumberLiteral: 1
p35614
tp35615
I1
s(g30341
I42
g30342
Vinsert
p35616
I7
VAssignment: =
p35617
tp35618
I1
s(g6635
I42
g6636
Vinsert
p35619
I42
VSimpleName: setProperty
p35620
tp35621
I1
s(g5831
I42
g5832
Vinsert
p35622
I8
VBlock
p35623
tp35624
I1
s(g4936
I42
g4937
Vinsert
p35625
I7
VAssignment: =
p35626
tp35627
I3
s(g15334
I42
g15335
Vinsert
p35628
I31
VMethodDeclaration
p35629
tp35630
I3
s(Vinsert
p35631
I42
VSimpleName: add
p35632
Vinsert
p35633
I42
VSimpleName: filterName
p35634
tp35635
I1
s(g27752
I42
g27753
Vinsert
p35636
I34
VNumberLiteral: 1000
p35637
tp35638
I3
s(g5030
I42
g5031
Vinsert
p35639
I42
VSimpleName: SQLSelectOrderByItem
p35640
tp35641
I3
s(g32771
I42
g32772
Vinsert
p35642
I42
VSimpleName: visitor
p35643
tp35644
I164
s(g2647
I42
g2648
Vinsert
p35645
I42
VSimpleName: JSONUtils
p35646
tp35647
I6
s(g31649
I42
g31650
Vinsert
p35648
I42
VSimpleName: getCount_10_30_minutes
p35649
tp35650
I1
s(g2140
I42
g2141
Vinsert
p35651
I8
VBlock
p35652
tp35653
I8
s(g3462
I42
g3463
Vinsert
p35654
I42
VSimpleName: test_true
p35655
tp35656
I1
s(g8752
I42
g8753
Vinsert
p35657
I42
VSimpleName: String
p35658
tp35659
I1
s(g13881
I42
g13882
Vinsert
p35660
I42
VSimpleName: create
p35661
tp35662
I1
s(g8001
I42
g8002
Vinsert
p35663
I36
VParenthesizedExpression
p35664
tp35665
I1
s(g27208
I42
g27209
Vinsert
p35666
I45
VStringLiteral: "select total_day_cnt * EXP(-datediff(to_date('20150819', 'yyyymmdd'), last_time, 'dd') / 60) from dual"
p35667
tp35668
I1
s(g22193
I42
g22194
Vinsert
p35669
I42
VSimpleName: chain
p35670
tp35671
I3
s(Vinsert
p35672
I42
VSimpleName: addAndGet
p35673
Vinsert
p35674
I42
VSimpleName: deleteDataCount
p35675
tp35676
I1
s(Vinsert
p35677
I42
VSimpleName: get
p35678
Vinsert
p35679
I42
VSimpleName: sqlStat
p35680
tp35681
I2
s(g30294
I42
g30295
Vinsert
p35682
I60
VVariableDeclarationStatement
p35683
tp35684
I5
s(g13543
I42
g13544
Vinsert
p35685
I42
VSimpleName: get
p35686
tp35687
I1
s(g25152
I42
g25153
Vinsert
p35688
I8
VBlock
p35689
tp35690
I2
s(g9017
I42
g9018
Vinsert
p35691
I42
VSimpleName: SQLValuableExpr
p35692
tp35693
I2
s(g21084
I42
g21085
Vinsert
p35694
I42
VSimpleName: xaResource
p35695
tp35696
I1
s(g21257
I42
g21258
Vinsert
p35697
I45
VStringLiteral: "                   and (ur.nrole_id = '1' or ur.nrole_id = '20'))"
p35698
tp35699
I1
s(g9773
I42
g9774
Vinsert
p35700
I32
VMethodInvocation
p35701
tp35702
I5
s(g7642
I42
g7643
Vinsert
p35703
I43
VSimpleType: SQLMethodInvokeExpr
p35704
tp35705
I8
s(g4424
I42
g4425
Vinsert
p35706
I42
VSimpleName: test_setTime
p35707
tp35708
I1
s(g29741
I42
g29742
Vinsert
p35709
I42
VSimpleName: Override
p35710
tp35711
I3
s(g24987
I42
g24988
Vinsert
p35712
I42
VSimpleName: get
p35713
tp35714
I1
s(g14006
I42
g14007
Vinsert
p35715
I43
VSimpleType: FormatOption
p35716
tp35717
I3
s(g9084
I42
g9085
Vinsert
p35718
I42
VSimpleName: getStatement
p35719
tp35720
I2
s(g27822
I42
g27823
Vinsert
p35721
I7
VAssignment: =
p35722
tp35723
I1
s(g14967
I42
g14968
Vinsert
p35724
I42
VSimpleName: primaryKey
p35725
tp35726
I1
s(g19823
I42
g19824
Vinsert
p35727
I42
VSimpleName: setTestOnBorrow
p35728
tp35729
I2
s(g8583
I42
g8584
Vinsert
p35730
I8
VBlock
p35731
tp35732
I2
s(Vinsert
p35733
I42
VSimpleName: assertFalse
p35734
Vinsert
p35735
I8
VBlock
p35736
tp35737
I45
s(g10467
I42
g10468
Vinsert
p35738
I42
VSimpleName: Object
p35739
tp35740
I5
s(g34809
I42
g34810
Vinsert
p35741
I42
VSimpleName: init
p35742
tp35743
I1
s(g20564
I42
g20565
Vinsert
p35744
I42
VSimpleName: String
p35745
tp35746
I1
s(g9222
I42
g9223
Vinsert
p35747
I21
VExpressionStatement
p35748
tp35749
I3
s(g29554
I42
g29555
Vinsert
p35750
I42
VSimpleName: typeName
p35751
tp35752
I2
s(g28042
I42
g28043
Vinsert
p35753
I59
VVariableDeclarationFragment
p35754
tp35755
I5
s(g21190
I42
g21191
Vinsert
p35756
I45
VStringLiteral: "CREATE FUNCTION get_bal (\u005cn"
p35757
tp35758
I1
s(g2349
I42
g2350
Vinsert
p35759
I42
VSimpleName: hasBodyBeforeComment
p35760
tp35761
I1
s(g25241
I42
g25242
Vinsert
p35762
I27
VInfixExpression: &&
p35763
tp35764
I1
s(g4543
I42
g4544
Vinsert
p35765
I7
VAssignment: =
p35766
tp35767
I5
s(g20626
I42
g20627
Vinsert
p35768
I42
VSimpleName: SuppressWarnings
p35769
tp35770
I1
s(Vinsert
p35771
I42
VSimpleName: hashCode64
p35772
Vinsert
p35773
I45
VStringLiteral: "t1.f0"
p35774
tp35775
I1
s(g2418
I42
g2419
Vinsert
p35776
I43
VSimpleType: SQLCreateDatabaseStatement
p35777
tp35778
I2
s(g4288
I42
g4289
Vinsert
p35779
I39
VPrimitiveType: short
p35780
tp35781
I2
s(g7927
I42
g7928
Vinsert
p35782
I21
VExpressionStatement
p35783
tp35784
I10
s(Vinsert
p35785
I42
VSimpleName: toLowerCase
p35786
Vinsert
p35787
I42
VSimpleName: System
p35788
tp35789
I1
s(g22986
I42
g22987
Vinsert
p35790
I42
VSimpleName: ConcurrentHashMap
p35791
tp35792
I1
s(Vinsert
p35793
I42
VSimpleName: assertEquals
p35794
Vinsert
p35795
I45
VStringLiteral: "select shop_name, customer_id, total_price;\u005cn"
p35796
tp35797
I1
s(g8564
I42
g8565
Vinsert
p35798
I43
VSimpleType: SQLExpr
p35799
tp35800
I1
s(g2423
I42
g2424
Vinsert
p35801
I14
VClassInstanceCreation
p35802
tp35803
I2
s(g31934
I42
g31935
Vinsert
p35804
I42
VSimpleName: idStr
p35805
tp35806
I2
s(Vinsert
p35807
I42
VSimpleName: setParent
p35808
Vinsert
p35809
I42
VSimpleName: upBound
p35810
tp35811
I1
s(Vinsert
p35812
I42
VSimpleName: accept
p35813
Vinsert
p35814
I42
VSimpleName: MySqlSchemaStatVisitor
p35815
tp35816
I269
s(g12278
I42
g12279
Vinsert
p35817
I42
VSimpleName: mockStmt
p35818
tp35819
I2
s(g1710
I42
g1711
Vinsert
p35820
I8
VBlock
p35821
tp35822
I4
s(g7650
I42
g7651
Vinsert
p35823
I42
VSimpleName: cause
p35824
tp35825
I2
s(g321
I42
g322
Vinsert
p35826
I45
VStringLiteral: "bvt/parser/antlr_grammers_v4_mysql/examples/"
p35827
tp35828
I1
s(g4730
I42
g4731
Vinsert
p35829
I42
VSimpleName: print
p35830
tp35831
I1
s(g3022
I42
g3023
Vinsert
p35832
I54
VTryStatement
p35833
tp35834
I1
s(g11691
I42
g11692
Vinsert
p35835
I32
VMethodInvocation
p35836
tp35837
I27
s(g5089
I42
g5090
Vinsert
p35838
I45
VStringLiteral: " PARTITION \u005c"AUTO_P_2013_03_01\u005c"  VALUES LESS THAN (TO_DATE(' 2013-03-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN')) \u005cn"
p35839
tp35840
I1
s(g6061
I42
g6062
Vinsert
p35841
I42
VSimpleName: x
p35842
tp35843
I4
s(g35402
I42
g35403
Vinsert
p35844
I43
VSimpleType: SQLKeep
p35845
tp35846
I1
s(g391
I42
g392
Vinsert
p35847
I43
VSimpleType: SQLServerRollbackStatement
p35848
tp35849
I1
s(g5287
I42
g5288
Vinsert
p35850
I44
VSingleVariableDeclaration
p35851
tp35852
I268
s(g5305
I42
g5306
Vinsert
p35853
I21
VExpressionStatement
p35854
tp35855
I3
s(g8914
I42
g8915
Vinsert
p35856
I21
VExpressionStatement
p35857
tp35858
I3
s(g6602
I42
g6603
Vinsert
p35859
I42
VSimpleName: conditionExpr
p35860
tp35861
I1
s(g992
I42
g993
Vinsert
p35862
I42
VSimpleName: i
p35863
tp35864
I1
s(g5744
I42
g5745
Vinsert
p35865
I42
VSimpleName: SQLParserUtils
p35866
tp35867
I12
s(g449
I42
g450
Vinsert
p35868
I42
VSimpleName: addColumn
p35869
tp35870
I1
s(g17221
I42
g17222
Vinsert
p35871
I8
VBlock
p35872
tp35873
I1
s(g17012
I42
g17013
Vinsert
p35874
I43
VSimpleType: ServletContext
p35875
tp35876
I1
s(Vinsert
p35877
I42
VSimpleName: getOperator
p35878
Vinsert
p35879
I42
VSimpleName: toString
p35880
tp35881
I1
s(Vinsert
p35882
I42
VSimpleName: getFirstQueryBlock
p35883
Vinsert
p35884
I7
VAssignment: =
p35885
tp35886
I1
s(g9397
I42
g9398
Vinsert
p35887
I40
VQualifiedName: Token.OPEN
p35888
tp35889
I1
s(g34468
I42
g34469
Vinsert
p35890
I42
VSimpleName: aliasMap
p35891
tp35892
I2
s(Vinsert
p35893
I42
VSimpleName: stringVal
p35894
Vinsert
p35895
I42
VSimpleName: javaCallSpec
p35896
tp35897
I1
s(g1825
I42
g1826
Vinsert
p35898
I60
VVariableDeclarationStatement
p35899
tp35900
I92
s(g19043
I42
g19044
Vinsert
p35901
I42
VSimpleName: get
p35902
tp35903
I1
s(g2770
I42
g2771
Vinsert
p35904
I42
VSimpleName: accept
p35905
tp35906
I1
s(g6755
I42
g6756
Vinsert
p35907
I42
VSimpleName: scheduler
p35908
tp35909
I1
s(g2359
I42
g2360
Vinsert
p35910
I42
VSimpleName: getSqlList
p35911
tp35912
I1
s(Vinsert
p35913
I42
VSimpleName: setTimestamp
p35914
Vinsert
p35915
I42
VSimpleName: stmt
p35916
tp35917
I3
s(g15745
I42
g15746
Vinsert
p35918
I42
VSimpleName: getFields
p35919
tp35920
I1
s(g2997
I42
g2998
Vinsert
p35921
I83
VModifier: public
p35922
tp35923
I1
s(g21572
I42
g21573
Vinsert
p35924
I42
VSimpleName: setDataType
p35925
tp35926
I1
s(g3078
I42
g3079
Vinsert
p35927
I42
VSimpleName: System
p35928
tp35929
I1
s(g20529
I42
g20530
Vinsert
p35930
I42
VSimpleName: setCatalog
p35931
tp35932
I1
s(g1800
I42
g1801
Vinsert
p35933
I31
VMethodDeclaration
p35934
tp35935
I2
s(g10355
I42
g10356
Vinsert
p35936
I39
VPrimitiveType: void
p35937
tp35938
I24
s(g17550
I42
g17551
Vinsert
p35939
I42
VSimpleName: PreparedStatementKey
p35940
tp35941
I1
s(g20051
I42
g20052
Vinsert
p35942
I42
VSimpleName: OracleForeignKey
p35943
tp35944
I1
s(g7527
I42
g7528
Vinsert
p35945
I42
VSimpleName: Arrays
p35946
tp35947
I2
s(g12849
I42
g12850
Vinsert
p35948
I21
VExpressionStatement
p35949
tp35950
I1
s(g8022
I42
g8023
Vinsert
p35951
I22
VFieldAccess
p35952
tp35953
I1
s(g8627
I42
g8628
Vinsert
p35954
I42
VSimpleName: SQLBinaryOpExpr
p35955
tp35956
I1
s(g6192
I42
g6193
Vinsert
p35957
I42
VSimpleName: items
p35958
tp35959
I1
s(g1271
I42
g1272
Vinsert
p35960
I42
VSimpleName: getExecuteCount
p35961
tp35962
I1
s(g23854
I42
g23855
Vinsert
p35963
I21
VExpressionStatement
p35964
tp35965
I1
s(g9060
I42
g9061
Vinsert
p35966
I21
VExpressionStatement
p35967
tp35968
I15
s(g2218
I42
g2219
Vinsert
p35969
I42
VSimpleName: rangeCounters
p35970
tp35971
I1
s(Vinsert
p35972
I42
VSimpleName: length
p35973
Vinsert
p35974
I42
VSimpleName: properties
p35975
tp35976
I2
s(g8863
I42
g8864
Vinsert
p35977
I42
VSimpleName: getDeclaredField
p35978
tp35979
I6
s(g3383
I42
g3384
Vinsert
p35980
I42
VSimpleName: DruidDataSource
p35981
tp35982
I2
s(Vinsert
p35983
I42
VSimpleName: toLowerCase
p35984
Vinsert
p35985
I40
VQualifiedName: SchemaObjectType.Table
p35986
tp35987
I1
s(g23202
I42
g23203
Vinsert
p35988
I42
VSimpleName: MultiDataSourceStatement
p35989
tp35990
I2
s(g27423
I42
g27424
Vinsert
p35991
I43
VSimpleType: OracleSQLObject
p35992
tp35993
I1
s(Vinsert
p35994
I42
VSimpleName: setParent
p35995
Vinsert
p35996
I43
VSimpleType: SQLWithSubqueryClause
p35997
tp35998
I3
s(g22025
I42
g22026
Vinsert
p35999
I42
VSimpleName: jdbcPoolConnectionOpenCount
p36000
tp36001
I1
s(g25834
I42
g25835
Vinsert
p36002
I42
VSimpleName: findColumn
p36003
tp36004
I2
s(Vinsert
p36005
I42
VSimpleName: singletonList
p36006
Vinsert
p36007
I27
VInfixExpression: !=
p36008
tp36009
I1
s(g18749
I42
g18750
Vinsert
p36010
I42
VSimpleName: token
p36011
tp36012
I1
s(g1284
I42
g1285
Vinsert
p36013
I42
VSimpleName: ucase
p36014
tp36015
I1
s(g3679
I42
g3680
Vinsert
p36016
I42
VSimpleName: Long
p36017
tp36018
I4
s(g76
I42
g77
Vinsert
p36019
I43
VSimpleType: MonitorCluster
p36020
tp36021
I2
s(g13445
I42
g13446
Vinsert
p36022
I43
VSimpleType: HResultSetMetaData
p36023
tp36024
I2
s(g3307
I42
g3308
Vinsert
p36025
I42
VSimpleName: SpringStat
p36026
tp36027
I2
s(Vinsert
p36028
I42
VSimpleName: token
p36029
Vinsert
p36030
I11
VCastExpression
p36031
tp36032
I1
s(g9554
I42
g9555
Vinsert
p36033
I42
VSimpleName: startsWith
p36034
tp36035
I1
s(g3679
I42
g3680
Vinsert
p36036
I34
VNumberLiteral: 0
p36037
tp36038
I2
s(g18930
I42
g18931
Vinsert
p36039
I27
VInfixExpression: <
p36040
tp36041
I1
s(g17007
I42
g17008
Vinsert
p36042
I32
VMethodInvocation
p36043
tp36044
I7
s(g33433
I42
g33434
Vinsert
p36045
I45
VStringLiteral: "DROP DATABASE "
p36046
tp36047
I1
s(g10044
I42
g10045
Vinsert
p36048
I78
VMarkerAnnotation
p36049
tp36050
I2
s(g409
I42
g410
Vinsert
p36051
I31
VMethodDeclaration
p36052
tp36053
I2
s(g6051
I42
g6052
Vinsert
p36054
I16
VConditionalExpression
p36055
tp36056
I1
s(g11474
I42
g11475
Vinsert
p36057
I42
VSimpleName: stmtList
p36058
tp36059
I7
s(Vinsert
p36060
I42
VSimpleName: isExceptionFatal
p36061
Vinsert
p36062
I43
VSimpleType: SocketTimeoutException
p36063
tp36064
I1
s(g86
I42
g87
Vinsert
p36065
I39
VPrimitiveType: void
p36066
tp36067
I1
s(g18659
I42
g18660
Vinsert
p36068
I42
VSimpleName: histo
p36069
tp36070
I3
s(g10542
I42
g10543
Vinsert
p36071
I25
VIfStatement
p36072
tp36073
I9
s(g13720
I42
g13721
Vinsert
p36074
I45
VStringLiteral: "AREA_ID"
p36075
tp36076
I1
s(g11217
I42
g11218
Vinsert
p36077
I41
VReturnStatement
p36078
tp36079
I3
s(g14457
I42
g14458
Vinsert
p36080
I34
VNumberLiteral: 1
p36081
tp36082
I3
s(Vinsert
p36083
I42
VSimpleName: nextToken
p36084
Vinsert
p36085
I40
VQualifiedName: Token.VARIANT
p36086
tp36087
I1
s(g10467
I42
g10468
Vinsert
p36088
I42
VSimpleName: SpringStatManager
p36089
tp36090
I2
s(g20374
I42
g20375
Vinsert
p36091
I42
VSimpleName: EVAL_VALUE
p36092
tp36093
I1
s(g11270
I42
g11271
Vinsert
p36094
I43
VSimpleType: NutDao
p36095
tp36096
I1
s(g131
I42
g132
Vinsert
p36097
I14
VClassInstanceCreation
p36098
tp36099
I2
s(g10267
I42
g10268
Vinsert
p36100
I42
VSimpleName: config
p36101
tp36102
I2
s(g23717
I42
g23718
Vinsert
p36103
I43
VSimpleType: Long
p36104
tp36105
I4
s(Vinsert
p36106
I42
VSimpleName: assertNotNull
p36107
Vinsert
p36108
I42
VSimpleName: test_loadClassPath
p36109
tp36110
I1
s(g21822
I42
g21823
Vinsert
p36111
I45
VStringLiteral: "user0_.login_name as login3_0_, user0_.name as name0_, "
p36112
tp36113
I1
s(g17387
I42
g17388
Vinsert
p36114
I42
VSimpleName: column
p36115
tp36116
I3
s(g21534
I42
g21535
Vinsert
p36117
I43
VSimpleType: ConnectionProxy
p36118
tp36119
I2
s(g1370
I42
g1371
Vinsert
p36120
I32
VMethodInvocation
p36121
tp36122
I2
s(g23126
I42
g23127
Vinsert
p36123
I40
VQualifiedName: SQLSequenceExpr.Function.CurrVal
p36124
tp36125
I1
s(g21913
I42
g21914
Vinsert
p36126
I42
VSimpleName: Utils
p36127
tp36128
I2
s(g9919
I42
g9920
Vinsert
p36129
I8
VBlock
p36130
tp36131
I2
s(g27757
I42
g27758
Vinsert
p36132
I59
VVariableDeclarationFragment
p36133
tp36134
I1
s(Vinsert
p36135
I42
VSimpleName: getValue
p36136
Vinsert
p36137
I52
VThisExpression
p36138
tp36139
I1
s(g22826
I42
g22827
Vinsert
p36140
I25
VIfStatement
p36141
tp36142
I1
s(g20840
I42
g20841
Vinsert
p36143
I42
VSimpleName: getObjectType
p36144
tp36145
I1
s(g81
I42
g82
Vinsert
p36146
I42
VSimpleName: itemA
p36147
tp36148
I2
s(g136
I42
g137
Vinsert
p36149
I32
VMethodInvocation
p36150
tp36151
I16
s(g2263
I42
g2264
Vinsert
p36152
I41
VReturnStatement
p36153
tp36154
I1
s(g31696
I42
g31697
Vinsert
p36155
I42
VSimpleName: equals
p36156
tp36157
I1
s(g13891
I42
g13892
Vinsert
p36158
I42
VSimpleName: isMatched
p36159
tp36160
I1
s(g12893
I42
g12894
Vinsert
p36161
I42
VSimpleName: formatMethod
p36162
tp36163
I4
s(g1481
I42
g1482
Vinsert
p36164
I32
VMethodInvocation
p36165
tp36166
I1
s(g3584
I42
g3585
Vinsert
p36167
I57
VTypeLiteral
p36168
tp36169
I1
s(g33239
I42
g33240
Vinsert
p36170
I62
VInstanceofExpression
p36171
tp36172
I1
s(g14452
I42
g14453
Vinsert
p36173
I42
VSimpleName: PagerUtils
p36174
tp36175
I7
s(g3007
I42
g3008
Vinsert
p36176
I42
VSimpleName: equals
p36177
tp36178
I1
s(Vinsert
p36179
I42
VSimpleName: clearWallTopStatementContext
p36180
Vinsert
p36181
I31
VMethodDeclaration
p36182
tp36183
I4
s(g27660
I42
g27661
Vinsert
p36184
I40
VQualifiedName: JSplitPane.LEFT
p36185
tp36186
I1
s(g3544
I42
g3545
Vinsert
p36187
I45
VStringLiteral: "\u005cttt.ver;"
p36188
tp36189
I1
s(g10581
I42
g10582
Vinsert
p36190
I42
VSimpleName: driverClass
p36191
tp36192
I1
s(g2294
I42
g2295
Vinsert
p36193
I42
VSimpleName: print0
p36194
tp36195
I1
s(g8062
I42
g8063
Vinsert
p36196
I32
VMethodInvocation
p36197
tp36198
I3
s(g14640
I42
g14641
Vinsert
p36199
I21
VExpressionStatement
p36200
tp36201
I1
s(g10467
I42
g10468
Vinsert
p36202
I43
VSimpleType: String
p36203
tp36204
I5
s(Vinsert
p36205
I42
VSimpleName: primaryRest
p36206
Vinsert
p36207
I42
VSimpleName: nextTokenComma
p36208
tp36209
I1
s(g31505
I42
g31506
Vinsert
p36210
I32
VMethodInvocation
p36211
tp36212
I1
s(Vinsert
p36213
I42
VSimpleName: create
p36214
Vinsert
p36215
I42
VSimpleName: ConfigurationProperties
p36216
tp36217
I1
s(g11983
I42
g11984
Vinsert
p36218
I14
VClassInstanceCreation
p36219
tp36220
I12
s(g2135
I42
g2136
Vinsert
p36221
I42
VSimpleName: substring
p36222
tp36223
I3
s(g1150
I42
g1151
Vinsert
p36224
I43
VSimpleType: String
p36225
tp36226
I1
s(g5892
I42
g5893
Vinsert
p36227
I43
VSimpleType: Lexer
p36228
tp36229
I1
s(g7665
I42
g7666
Vinsert
p36230
I60
VVariableDeclarationStatement
p36231
tp36232
I1
s(g30507
I42
g30508
Vinsert
p36233
I43
VSimpleType: SQLColumnCheck
p36234
tp36235
I1
s(g3549
I42
g3550
Vinsert
p36236
I74
VParameterizedType: Entry<PreparedStatementKey,PreparedStatementHolder>
p36237
tp36238
I1
s(g15314
I42
g15315
Vinsert
p36239
I42
VSimpleName: format
p36240
tp36241
I1
s(g18796
I42
g18797
Vinsert
p36242
I42
VSimpleName: arguments
p36243
tp36244
I1
s(g14605
I42
g14606
Vinsert
p36245
I33
VNullLiteral
p36246
tp36247
I1
s(g7275
I42
g7276
Vinsert
p36248
I43
VSimpleType: Exception
p36249
tp36250
I1
s(g2634
I42
g2635
Vinsert
p36251
I32
VMethodInvocation
p36252
tp36253
I4
s(g11365
I42
g11366
Vinsert
p36254
I27
VInfixExpression: !=
p36255
tp36256
I1
s(g1705
I42
g1706
Vinsert
p36257
I25
VIfStatement
p36258
tp36259
I4
s(g2339
I42
g2340
Vinsert
p36260
I16
VConditionalExpression
p36261
tp36262
I1
s(g919
I42
g920
Vinsert
p36263
I43
VSimpleType: SQLObject
p36264
tp36265
I4
s(g7898
I42
g7899
Vinsert
p36266
I42
VSimpleName: Exception
p36267
tp36268
I2
s(g1208
I42
g1209
Vinsert
p36269
I42
VSimpleName: close
p36270
tp36271
I1
s(g2469
I42
g2470
Vinsert
p36272
I8
VBlock
p36273
tp36274
I4
s(g2977
I42
g2978
Vinsert
p36275
I45
VStringLiteral: "UPDATE goods_detail\u005cn"
p36276
tp36277
I1
s(g3282
I42
g3283
Vinsert
p36278
I42
VSimpleName: initialSize
p36279
tp36280
I1
s(g21489
I42
g21490
Vinsert
p36281
I43
VSimpleType: OraclePreparedStatement
p36282
tp36283
I1
s(g14597
I42
g14598
Vinsert
p36284
I8
VBlock
p36285
tp36286
I8
s(g3027
I42
g3028
Vinsert
p36287
I42
VSimpleName: JSON
p36288
tp36289
I1
s(g8090
I42
g8091
Vinsert
p36290
I32
VMethodInvocation
p36291
tp36292
I12
s(g5002
I42
g5003
Vinsert
p36293
I42
VSimpleName: stmt
p36294
tp36295
I1
s(g176
I42
g177
Vinsert
p36296
I21
VExpressionStatement
p36297
tp36298
I8
s(g4170
I42
g4171
Vinsert
p36299
I43
VSimpleType: SQLAlterTableCoalescePartition
p36300
tp36301
I1
s(g28542
I42
g28543
Vinsert
p36302
I43
VSimpleType: SQLInSubQueryExpr
p36303
tp36304
I3
s(g8355
I42
g8356
Vinsert
p36305
I42
VSimpleName: annotation
p36306
tp36307
I1
s(g14522
I42
g14523
Vinsert
p36308
I45
VStringLiteral: "\u005ctIF :new.id IS NULL THEN\u005cn"
p36309
tp36310
I1
s(g3811
I42
g3812
Vinsert
p36311
I13
VCharacterLiteral: ';'
p36312
tp36313
I1
s(g6187
I42
g6188
Vinsert
p36314
I45
VStringLiteral: "FROM DUAL"
p36315
tp36316
I1
s(g27644
I42
g27645
Vinsert
p36317
I21
VExpressionStatement
p36318
tp36319
I1
s(g34705
I42
g34706
Vinsert
p36320
I42
VSimpleName: BigDecimal
p36321
tp36322
I4
s(Vinsert
p36323
I42
VSimpleName: substring
p36324
Vinsert
p36325
I45
VStringLiteral: "'"
p36326
tp36327
I2
s(g13176
I42
g13177
Vinsert
p36328
I42
VSimpleName: pivot
p36329
tp36330
I1
s(g806
I42
g807
Vinsert
p36331
I32
VMethodInvocation
p36332
tp36333
I2
s(g16653
I42
g16654
Vinsert
p36334
I42
VSimpleName: matchAgainstExpr
p36335
tp36336
I1
s(Vinsert
p36337
I42
VSimpleName: indexOf
p36338
Vinsert
p36339
I42
VSimpleName: parametersArray
p36340
tp36341
I1
s(g846
I42
g847
Vinsert
p36342
I42
VSimpleName: print
p36343
tp36344
I1
s(g1599
I42
g1600
Vinsert
p36345
I42
VSimpleName: setParent
p36346
tp36347
I1
s(g8360
I42
g8361
Vinsert
p36348
I21
VExpressionStatement
p36349
tp36350
I3
s(g557
I42
g558
Vinsert
p36351
I45
VStringLiteral: "\u005cn\u005ct) XXX"
p36352
tp36353
I1
s(g11890
I42
g11891
Vinsert
p36354
I22
VFieldAccess
p36355
tp36356
I4
s(Vinsert
p36357
I42
VSimpleName: getParent
p36358
Vinsert
p36359
I42
VSimpleName: SQLSelect
p36360
tp36361
I1
s(g11737
I42
g11738
Vinsert
p36362
I74
VParameterizedType: Map<String,Object>
p36363
tp36364
I1
s(g10011
I42
g10012
Vinsert
p36365
I42
VSimpleName: getConnection
p36366
tp36367
I1
s(g16517
I42
g16518
Vinsert
p36368
I42
VSimpleName: SQLBinaryExpr
p36369
tp36370
I2
s(g1800
I42
g1801
Vinsert
p36371
I83
VModifier: public
p36372
tp36373
I2
s(g2712
I42
g2713
Vinsert
p36374
I43
VSimpleType: SQLBlockStatement
p36375
tp36376
I1
s(g14782
I42
g14783
Vinsert
p36377
I25
VIfStatement
p36378
tp36379
I2
s(g8417
I42
g8418
Vinsert
p36380
I42
VSimpleName: findSelectItem
p36381
tp36382
I1
s(g13437
I42
g13438
Vinsert
p36383
I45
VStringLiteral: "\u005ct, supReg.Feedbackdate, supReg.Feedbackperoid, supReg.Feedbackday, supReg.dateSend, supReg.status\u005cn"
p36384
tp36385
I1
s(g1958
I42
g1959
Vinsert
p36386
I45
VStringLiteral: "\u005ct\u005ct\u005ctINITIAL 8388608\u005cn"
p36387
tp36388
I1
s(g10454
I42
g10455
Vinsert
p36389
I42
VSimpleName: sql
p36390
tp36391
I3
s(g26450
I42
g26451
Vinsert
p36392
I42
VSimpleName: AsOfFlashbackQueryClause
p36393
tp36394
I1
s(g22894
I42
g22895
Vinsert
p36395
I42
VSimpleName: clob
p36396
tp36397
I4
s(g19810
I42
g19811
Vinsert
p36398
I41
VReturnStatement
p36399
tp36400
I1
s(g23983
I42
g23984
Vinsert
p36401
I45
VStringLiteral: "\u005ctSUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS,\u005cn"
p36402
tp36403
I1
s(g6786
I42
g6787
Vinsert
p36404
I27
VInfixExpression: !=
p36405
tp36406
I2
s(g28621
I42
g28622
Vinsert
p36407
I42
VSimpleName: print
p36408
tp36409
I1
s(g20975
I42
g20976
Vinsert
p36410
I42
VSimpleName: filters
p36411
tp36412
I1
s(g5685
I42
g5686
Vinsert
p36413
I43
VSimpleType: SQLExpr
p36414
tp36415
I2
s(g3689
I42
g3690
Vinsert
p36416
I8
VBlock
p36417
tp36418
I1
s(g8011
I42
g8012
Vinsert
p36419
I32
VMethodInvocation
p36420
tp36421
I2
s(g2158
I42
g2159
Vinsert
p36422
I42
VSimpleName: names
p36423
tp36424
I2
s(g8891
I42
g8892
Vinsert
p36425
I42
VSimpleName: stmt
p36426
tp36427
I2
s(g12103
I42
g12104
Vinsert
p36428
I42
VSimpleName: assertNull
p36429
tp36430
I2
s(g1052
I42
g1053
Vinsert
p36431
I42
VSimpleName: hashCode
p36432
tp36433
I1
s(g11062
I42
g11063
Vinsert
p36434
I42
VSimpleName: DruidPooledConnection
p36435
tp36436
I1
s(Vinsert
p36437
I42
VSimpleName: accept
p36438
Vinsert
p36439
I42
VSimpleName: param1
p36440
tp36441
I2
s(Vinsert
p36442
I42
VSimpleName: getExpr
p36443
Vinsert
p36444
I42
VSimpleName: OracleDatetimeExpr
p36445
tp36446
I1
s(g5615
I42
g5616
Vinsert
p36447
I39
VPrimitiveType: void
p36448
tp36449
I1
s(g5510
I42
g5511
Vinsert
p36450
I45
VStringLiteral: "-----------------------"
p36451
tp36452
I1
s(g13643
I42
g13644
Vinsert
p36453
I42
VSimpleName: LOG
p36454
tp36455
I1
s(g41
I42
g42
Vinsert
p36456
I27
VInfixExpression: &&
p36457
tp36458
I1
s(g512
I42
g513
Vinsert
p36459
I42
VSimpleName: getCachedPreparedStatementAccessCount
p36460
tp36461
I1
s(g91
I42
g92
Vinsert
p36462
I42
VSimpleName: ch
p36463
tp36464
I1
s(g2354
I42
g2355
Vinsert
p36465
I45
VStringLiteral: "\u005ct\u005ctDBMS_OUTPUT.PUT_LINE('Inside loop, after CONTINUE:  x = ' || TO_CHAR(x));\u005cn"
p36466
tp36467
I1
s(g9446
I42
g9447
Vinsert
p36468
I21
VExpressionStatement
p36469
tp36470
I1
s(g10966
I42
g10967
Vinsert
p36471
I8
VBlock
p36472
tp36473
I1
s(g15188
I42
g15189
Vinsert
p36474
I42
VSimpleName: query
p36475
tp36476
I1
s(g20928
I42
g20929
Vinsert
p36477
I33
VNullLiteral
p36478
tp36479
I1
s(g3841
I42
g3842
Vinsert
p36480
I60
VVariableDeclarationStatement
p36481
tp36482
I1
s(g21551
I42
g21552
Vinsert
p36483
I42
VSimpleName: SQLDataType
p36484
tp36485
I9
s(Vinsert
p36486
I42
VSimpleName: load
p36487
Vinsert
p36488
I42
VSimpleName: loader
p36489
tp36490
I2
s(g3664
I42
g3665
Vinsert
p36491
I33
VNullLiteral
p36492
tp36493
I1
s(g1329
I42
g1330
Vinsert
p36494
I42
VSimpleName: test_formatOracle
p36495
tp36496
I1
s(g25196
I42
g25197
Vinsert
p36497
I42
VSimpleName: MyPreparedStatement
p36498
tp36499
I2
s(g15648
I42
g15649
Vinsert
p36500
I42
VSimpleName: List
p36501
tp36502
I1
s(g20733
I42
g20734
Vinsert
p36503
I45
VStringLiteral: "\u005cnselect f0, f1, f2"
p36504
tp36505
I2
s(g4263
I42
g4264
Vinsert
p36506
I8
VBlock
p36507
tp36508
I2
s(g19708
I42
g19709
Vinsert
p36509
I52
VThisExpression
p36510
tp36511
I2
s(Vinsert
p36512
I42
VSimpleName: getAlias
p36513
Vinsert
p36514
I42
VSimpleName: put
p36515
tp36516
I1
s(g16208
I42
g16209
Vinsert
p36517
I42
VSimpleName: setDriverClassName
p36518
tp36519
I1
s(g3002
I42
g3003
Vinsert
p36520
I31
VMethodDeclaration
p36521
tp36522
I1
s(g13659
I42
g13660
Vinsert
p36523
I43
VSimpleType: String
p36524
tp36525
I9
s(g12776
I42
g12777
Vinsert
p36526
I42
VSimpleName: parent
p36527
tp36528
I1
s(g34685
I42
g34686
Vinsert
p36529
I42
VSimpleName: GroupingSetExpr
p36530
tp36531
I2
s(g5528
I42
g5529
Vinsert
p36532
I59
VVariableDeclarationFragment
p36533
tp36534
I1
s(g11727
I42
g11728
Vinsert
p36535
I42
VSimpleName: create
p36536
tp36537
I1
s(g15188
I42
g15189
Vinsert
p36538
I25
VIfStatement
p36539
tp36540
I2
s(Vinsert
p36541
I42
VSimpleName: toPGString
p36542
Vinsert
p36543
I45
VStringLiteral: "\u005cnwhere name like ?"
p36544
tp36545
I1
s(g28919
I42
g28920
Vinsert
p36546
I43
VSimpleType: String
p36547
tp36548
I1
s(g18871
I42
g18872
Vinsert
p36549
I32
VMethodInvocation
p36550
tp36551
I4
s(g19152
I42
g19153
Vinsert
p36552
I7
VAssignment: =
p36553
tp36554
I3
s(g4684
I42
g4685
Vinsert
p36555
I60
VVariableDeclarationStatement
p36556
tp36557
I1
s(g11915
I42
g11916
Vinsert
p36558
I42
VSimpleName: dataSource
p36559
tp36560
I7
s(g10797
I42
g10798
Vinsert
p36561
I16
VConditionalExpression
p36562
tp36563
I1
s(Vinsert
p36564
I42
VSimpleName: size
p36565
Vinsert
p36566
I34
VNumberLiteral: 2
p36567
tp36568
I1
s(Vinsert
p36569
I42
VSimpleName: getUsing
p36570
Vinsert
p36571
I40
VQualifiedName: Token.LPAREN
p36572
tp36573
I1
s(g2775
I42
g2776
Vinsert
p36574
I42
VSimpleName: ex
p36575
tp36576
I1
s(g5987
I42
g5988
Vinsert
p36577
I42
VSimpleName: accept
p36578
tp36579
I1
s(g5002
I42
g5003
Vinsert
p36580
I21
VExpressionStatement
p36581
tp36582
I1
s(g35597
I42
g35598
Vinsert
p36583
I59
VVariableDeclarationFragment
p36584
tp36585
I1
s(Vinsert
p36586
I42
VSimpleName: put
p36587
Vinsert
p36588
I74
VParameterizedType: HashMap<String,Object>
p36589
tp36590
I2
s(g23934
I42
g23935
Vinsert
p36591
I27
VInfixExpression: +
p36592
tp36593
I6
s(Vinsert
p36594
I42
VSimpleName: nextToken
p36595
Vinsert
p36596
I42
VSimpleName: SQLExprTableSource
p36597
tp36598
I2
s(g3093
I42
g3094
Vinsert
p36599
I43
VSimpleType: FilterChainImpl
p36600
tp36601
I1
s(Vinsert
p36602
I42
VSimpleName: getInstance
p36603
Vinsert
p36604
I42
VSimpleName: WebAppStatManager
p36605
tp36606
I2
s(g5969
I42
g5970
Vinsert
p36607
I42
VSimpleName: JdbcUtils
p36608
tp36609
I1
s(g13906
I42
g13907
Vinsert
p36610
I42
VSimpleName: transInfo
p36611
tp36612
I1
s(g10687
I42
g10688
Vinsert
p36613
I60
VVariableDeclarationStatement
p36614
tp36615
I1
s(g768
I42
g769
Vinsert
p36616
I42
VSimpleName: v
p36617
tp36618
I2
s(g7356
I42
g7357
Vinsert
p36619
I83
VModifier: final
p36620
tp36621
I1
s(g14730
I42
g14731
Vinsert
p36622
I62
VInstanceofExpression
p36623
tp36624
I2
s(g4253
I42
g4254
Vinsert
p36625
I8
VBlock
p36626
tp36627
I7
s(g2349
I42
g2350
Vinsert
p36628
I32
VMethodInvocation
p36629
tp36630
I4
s(g3709
I42
g3710
Vinsert
p36631
I24
VForStatement
p36632
tp36633
I1
s(g21155
I42
g21156
Vinsert
p36634
I42
VSimpleName: getPassword
p36635
tp36636
I1
s(g13196
I42
g13197
Vinsert
p36637
I42
VSimpleName: activeCount
p36638
tp36639
I1
s(g35983
I42
g35984
Vinsert
p36640
I42
VSimpleName: x
p36641
tp36642
I1
s(g16264
I42
g16265
Vinsert
p36643
I32
VMethodInvocation
p36644
tp36645
I3
s(g3880
I42
g3881
Vinsert
p36646
I27
VInfixExpression: ==
p36647
tp36648
I1
s(g6927
I42
g6928
Vinsert
p36649
I42
VSimpleName: CharTypes
p36650
tp36651
I1
s(g34396
I42
g34397
Vinsert
p36652
I22
VFieldAccess
p36653
tp36654
I10
s(g6992
I42
g6993
Vinsert
p36655
I21
VExpressionStatement
p36656
tp36657
I1
s(Vinsert
p36658
I42
VSimpleName: accept
p36659
Vinsert
p36660
I43
VSimpleType: SqlServerOutputVisitor
p36661
tp36662
I1
s(g11706
I42
g11707
Vinsert
p36663
I59
VVariableDeclarationFragment
p36664
tp36665
I1
s(g1390
I42
g1391
Vinsert
p36666
I33
VNullLiteral
p36667
tp36668
I2
s(g18078
I42
g18079
Vinsert
p36669
I45
VStringLiteral: "\u005ct\u005ct, :NEW.isdept, :NEW.type, :NEW.selfcode, :NEW.POS, SYSDATE\u005cn"
p36670
tp36671
I1
s(g28621
I42
g28622
Vinsert
p36672
I45
VStringLiteral: "("
p36673
tp36674
I1
s(g21686
I42
g21687
Vinsert
p36675
I42
VSimpleName: master
p36676
tp36677
I1
s(g3327
I42
g3328
Vinsert
p36678
I52
VThisExpression
p36679
tp36680
I1
s(g2819
I42
g2820
Vinsert
p36681
I52
VThisExpression
p36682
tp36683
I1
s(g8391
I42
g8392
Vinsert
p36684
I45
VStringLiteral: "DELETE FROM t"
p36685
tp36686
I5
s(g17997
I42
g17998
Vinsert
p36687
I74
VParameterizedType: List<SQLSelectOrderByItem>
p36688
tp36689
I1
s(g3987
I42
g3988
Vinsert
p36690
I42
VSimpleName: a
p36691
tp36692
I1
s(g10586
I42
g10587
Vinsert
p36693
I42
VSimpleName: isClosed
p36694
tp36695
I1
s(g19736
I42
g19737
Vinsert
p36696
I54
VTryStatement
p36697
tp36698
I1
s(g24462
I42
g24463
Vinsert
p36699
I42
VSimpleName: HBasePreparedStatement
p36700
tp36701
I1
s(g6126
I42
g6127
Vinsert
p36702
I13
VCharacterLiteral: ' '
p36703
tp36704
I1
s(g5648
I42
g5649
Vinsert
p36705
I42
VSimpleName: limit
p36706
tp36707
I4
s(g10846
I42
g10847
Vinsert
p36708
I54
VTryStatement
p36709
tp36710
I1
s(Vinsert
p36711
I42
VSimpleName: createSQLStatementParser
p36712
Vinsert
p36713
I42
VSimpleName: Exception
p36714
tp36715
I1
s(g6333
I42
g6334
Vinsert
p36716
I21
VExpressionStatement
p36717
tp36718
I10
s(g24641
I42
g24642
Vinsert
p36719
I8
VBlock
p36720
tp36721
I1
s(g1888
I42
g1889
Vinsert
p36722
I8
VBlock
p36723
tp36724
I1
s(g13201
I42
g13202
Vinsert
p36725
I32
VMethodInvocation
p36726
tp36727
I5
s(g34122
I42
g34123
Vinsert
p36728
I42
VSimpleName: DecryptException
p36729
tp36730
I2
s(g3852
I42
g3853
Vinsert
p36731
I42
VSimpleName: MySqlShowMasterStatusStatement
p36732
tp36733
I2
s(g8669
I42
g8670
Vinsert
p36734
I42
VSimpleName: WallContext
p36735
tp36736
I1
s(Vinsert
p36737
I42
VSimpleName: assertEquals
p36738
Vinsert
p36739
I42
VSimpleName: e
p36740
tp36741
I2
s(g17507
I42
g17508
Vinsert
p36742
I45
VStringLiteral: "ADD "
p36743
tp36744
I1
s(g3302
I42
g3303
Vinsert
p36745
I42
VSimpleName: assertTrue
p36746
tp36747
I23
s(Vinsert
p36748
I42
VSimpleName: stringVal
p36749
Vinsert
p36750
I42
VSimpleName: fieldName
p36751
tp36752
I1
s(g1085
I42
g1086
Vinsert
p36753
I43
VSimpleType: SQLObject
p36754
tp36755
I33
s(g20173
I42
g20174
Vinsert
p36756
I21
VExpressionStatement
p36757
tp36758
I9
s(g19010
I42
g19011
Vinsert
p36759
I45
VStringLiteral: "TestWhileIdle"
p36760
tp36761
I1
s(g121
I42
g122
Vinsert
p36762
I45
VStringLiteral: "CALL"
p36763
tp36764
I1
s(g186
I42
g187
Vinsert
p36765
I42
VSimpleName: timespan
p36766
tp36767
I2
s(g4745
I42
g4746
Vinsert
p36768
I42
VSimpleName: sql
p36769
tp36770
I1
s(g602
I42
g603
Vinsert
p36771
I8
VBlock
p36772
tp36773
I8
s(g4880
I42
g4881
Vinsert
p36774
I34
VNumberLiteral: 1
p36775
tp36776
I18
s(g25006
I42
g25007
Vinsert
p36777
I43
VSimpleType: SQLStatement
p36778
tp36779
I11
s(g6480
I42
g6481
Vinsert
p36780
I36
VParenthesizedExpression
p36781
tp36782
I2
s(g6126
I42
g6127
Vinsert
p36783
I42
VSimpleName: print
p36784
tp36785
I3
s(g12034
I42
g12035
Vinsert
p36786
I42
VSimpleName: SQLName
p36787
tp36788
I1
s(g8264
I42
g8265
Vinsert
p36789
I42
VSimpleName: c2
p36790
tp36791
I8
s(g14261
I42
g14262
Vinsert
p36792
I42
VSimpleName: statMapC
p36793
tp36794
I2
s(g20439
I42
g20440
Vinsert
p36795
I42
VSimpleName: i
p36796
tp36797
I3
s(g5030
I42
g5031
Vinsert
p36798
I43
VSimpleType: ArrayList
p36799
tp36800
I1
s(Vinsert
p36801
I42
VSimpleName: setParent
p36802
Vinsert
p36803
I42
VSimpleName: of
p36804
tp36805
I3
s(g12125
I42
g12126
Vinsert
p36806
I42
VSimpleName: JSON
p36807
tp36808
I1
s(g5839
I42
g5840
Vinsert
p36809
I42
VSimpleName: dataSource
p36810
tp36811
I18
s(g3608
I42
g3609
Vinsert
p36812
I43
VSimpleType: SQLObject
p36813
tp36814
I1
s(Vinsert
p36815
I42
VSimpleName: sort
p36816
Vinsert
p36817
I42
VSimpleName: Exception
p36818
tp36819
I1
s(g1251
I42
g1252
Vinsert
p36820
I42
VSimpleName: b
p36821
tp36822
I1
s(g12776
I42
g12777
Vinsert
p36823
I21
VExpressionStatement
p36824
tp36825
I2
s(Vinsert
p36826
I42
VSimpleName: setTraceEnable
p36827
Vinsert
p36828
I40
VQualifiedName: com.alibaba.druid.stat.JdbcStatManager
p36829
tp36830
I2
s(g19565
I42
g19566
Vinsert
p36831
I45
VStringLiteral: "\u005ctCONSTRAINT name5_pk PRIMARY KEY (c_bigint)\u005cn"
p36832
tp36833
I1
s(g1180
I42
g1181
Vinsert
p36834
I8
VBlock
p36835
tp36836
I2
s(g5434
I42
g5435
Vinsert
p36837
I41
VReturnStatement
p36838
tp36839
I4
s(g2895
I42
g2896
Vinsert
p36840
I40
VQualifiedName: Token.FROM
p36841
tp36842
I1
s(Vinsert
p36843
I42
VSimpleName: getColumns
p36844
Vinsert
p36845
I45
VStringLiteral: "Tables : "
p36846
tp36847
I33
s(g5831
I42
g5832
Vinsert
p36848
I42
VSimpleName: schema
p36849
tp36850
I2
s(g10631
I42
g10632
Vinsert
p36851
I45
VStringLiteral: "CASCADED"
p36852
tp36853
I1
s(g22757
I42
g22758
Vinsert
p36854
I43
VSimpleType: SQLHint
p36855
tp36856
I2
s(g9696
I42
g9697
Vinsert
p36857
I59
VVariableDeclarationFragment
p36858
tp36859
I2
s(g9089
I42
g9090
Vinsert
p36860
I33
VNullLiteral
p36861
tp36862
I3
s(g7002
I42
g7003
Vinsert
p36863
I32
VMethodInvocation
p36864
tp36865
I4
s(g30764
I42
g30765
Vinsert
p36866
I42
VSimpleName: SQLServerTop
p36867
tp36868
I4
s(g5643
I42
g5644
Vinsert
p36869
I11
VCastExpression
p36870
tp36871
I1
s(Vinsert
p36872
I42
VSimpleName: getConnection
p36873
Vinsert
p36874
I42
VSimpleName: test_getTimestamp_1
p36875
tp36876
I1
s(g6938
I42
g6939
Vinsert
p36877
I42
VSimpleName: out
p36878
tp36879
I1
s(g2168
I42
g2169
Vinsert
p36880
I32
VMethodInvocation
p36881
tp36882
I4
s(g8391
I42
g8392
Vinsert
p36883
I45
VStringLiteral: "\u005cnWHERE id = 0"
p36884
tp36885
I5
s(g21892
I42
g21893
Vinsert
p36886
I43
VSimpleType: Clob
p36887
tp36888
I1
s(g4217
I42
g4218
Vinsert
p36889
I52
VThisExpression
p36890
tp36891
I2
s(g3631
I42
g3632
Vinsert
p36892
I43
VSimpleType: JdbcConnectionStat.Entry
p36893
tp36894
I1
s(Vinsert
p36895
I42
VSimpleName: hashCode
p36896
Vinsert
p36897
I34
VNumberLiteral: 0
p36898
tp36899
I22
s(Vinsert
p36900
I42
VSimpleName: getFrom
p36901
Vinsert
p36902
I42
VSimpleName: select
p36903
tp36904
I2
s(g2263
I42
g2264
Vinsert
p36905
I32
VMethodInvocation
p36906
tp36907
I2
s(g25834
I42
g25835
Vinsert
p36908
I27
VInfixExpression: ==
p36909
tp36910
I3
s(g15485
I42
g15486
Vinsert
p36911
I43
VSimpleType: ConnectionProxy
p36912
tp36913
I1
s(g35597
I42
g35598
Vinsert
p36914
I42
VSimpleName: DruidDataSource
p36915
tp36916
I2
s(Vinsert
p36917
I42
VSimpleName: assertEquals
p36918
Vinsert
p36919
I45
VStringLiteral: "\u005cn\u005ctADD PARTITION PARTITIONS 18"
p36920
tp36921
I1
s(g10919
I42
g10920
Vinsert
p36922
I59
VVariableDeclarationFragment
p36923
tp36924
I1
s(g1710
I42
g1711
Vinsert
p36925
I43
VSimpleType: MBeanServer
p36926
tp36927
I3
s(Vinsert
p36928
I42
VSimpleName: getConnectionProxy
p36929
Vinsert
p36930
I52
VThisExpression
p36931
tp36932
I1
s(g4885
I42
g4886
Vinsert
p36933
I42
VSimpleName: toString
p36934
tp36935
I1
s(g34423
I42
g34424
Vinsert
p36936
I42
VSimpleName: Throwable
p36937
tp36938
I2
s(g497
I42
g498
Vinsert
p36939
I43
VSimpleType: Exception
p36940
tp36941
I1
s(g17199
I42
g17200
Vinsert
p36942
I42
VSimpleName: mysqlSpecial
p36943
tp36944
I1
s(g33239
I42
g33240
Vinsert
p36945
I21
VExpressionStatement
p36946
tp36947
I1
s(g7986
I42
g7987
Vinsert
p36948
I42
VSimpleName: fk
p36949
tp36950
I2
s(Vinsert
p36951
I42
VSimpleName: get
p36952
Vinsert
p36953
I42
VSimpleName: param1
p36954
tp36955
I4
s(g24384
I42
g24385
Vinsert
p36956
I34
VNumberLiteral: 1
p36957
tp36958
I2
s(g20707
I42
g20708
Vinsert
p36959
I42
VSimpleName: rightExp
p36960
tp36961
I2
s(g16294
I42
g16295
Vinsert
p36962
I42
VSimpleName: tableSource
p36963
tp36964
I2
s(g8222
I42
g8223
Vinsert
p36965
I27
VInfixExpression: <
p36966
tp36967
I1
s(g2140
I42
g2141
Vinsert
p36968
I33
VNullLiteral
p36969
tp36970
I4
s(g21643
I42
g21644
Vinsert
p36971
I42
VSimpleName: PGIntervalExpr
p36972
tp36973
I2
s(g1544
I42
g1545
Vinsert
p36974
I42
VSimpleName: List
p36975
tp36976
I55
s(g13201
I42
g13202
Vinsert
p36977
I21
VExpressionStatement
p36978
tp36979
I5
s(g13094
I42
g13095
Vinsert
p36980
I40
VQualifiedName: args.length
p36981
tp36982
I2
s(g22782
I42
g22783
Vinsert
p36983
I7
VAssignment: =
p36984
tp36985
I1
s(g33272
I42
g33273
Vinsert
p36986
I60
VVariableDeclarationStatement
p36987
tp36988
I1
s(g5772
I42
g5773
Vinsert
p36989
I21
VExpressionStatement
p36990
tp36991
I1
s(Vinsert
p36992
I42
VSimpleName: getPivot
p36993
Vinsert
p36994
I21
VExpressionStatement
p36995
tp36996
I3
s(g2553
I42
g2554
Vinsert
p36997
I42
VSimpleName: PGMacAddrExpr
p36998
tp36999
I2
s(g3836
I42
g3837
Vinsert
p37000
I42
VSimpleName: Number
p37001
tp37002
I1
s(g28273
I42
g28274
Vinsert
p37003
I42
VSimpleName: DB2SchemaStatVisitor
p37004
tp37005
I6
s(g2765
I42
g2766
Vinsert
p37006
I42
VSimpleName: Option
p37007
tp37008
I4
s(g24051
I42
g24052
Vinsert
p37009
I42
VSimpleName: SQLExpr
p37010
tp37011
I2
s(g19849
I42
g19850
Vinsert
p37012
I42
VSimpleName: SQLDropIndexStatement
p37013
tp37014
I2
s(g6031
I42
g6032
Vinsert
p37015
I42
VSimpleName: printAndAccept
p37016
tp37017
I1
s(g4188
I42
g4189
Vinsert
p37018
I40
VQualifiedName: java.util.Arrays
p37019
tp37020
I1
s(Vinsert
p37021
I42
VSimpleName: stringVal
p37022
Vinsert
p37023
I43
VSimpleType: ParserException
p37024
tp37025
I6
s(g10736
I42
g10737
Vinsert
p37026
I42
VSimpleName: currentTimeMillis
p37027
tp37028
I2
s(g16452
I42
g16453
Vinsert
p37029
I42
VSimpleName: Date
p37030
tp37031
I1
s(g16767
I42
g16768
Vinsert
p37032
I42
VSimpleName: expr
p37033
tp37034
I1
s(g4814
I42
g4815
Vinsert
p37035
I42
VSimpleName: insertStmt
p37036
tp37037
I2
s(Vinsert
p37038
I42
VSimpleName: getMethod
p37039
Vinsert
p37040
I42
VSimpleName: m
p37041
tp37042
I1
s(g28278
I42
g28279
Vinsert
p37043
I25
VIfStatement
p37044
tp37045
I7
s(g967
I42
g968
Vinsert
p37046
I42
VSimpleName: i
p37047
tp37048
I3
s(Vinsert
p37049
I42
VSimpleName: setExpr
p37050
Vinsert
p37051
I42
VSimpleName: SQLSubPartitionByHash
p37052
tp37053
I2
s(g14044
I42
g14045
Vinsert
p37054
I45
VStringLiteral: "WITH READ ONLY;"
p37055
tp37056
I1
s(g6283
I42
g6284
Vinsert
p37057
I27
VInfixExpression: ==
p37058
tp37059
I7
s(g4170
I42
g4171
Vinsert
p37060
I32
VMethodInvocation
p37061
tp37062
I1
s(Vinsert
p37063
I42
VSimpleName: add
p37064
Vinsert
p37065
I43
VSimpleType: Blob
p37066
tp37067
I1
s(g3836
I42
g3837
Vinsert
p37068
I42
VSimpleName: number
p37069
tp37070
I3
s(g13690
I42
g13691
Vinsert
p37071
I42
VSimpleName: clear
p37072
tp37073
I1
s(Vinsert
p37074
I42
VSimpleName: hashCode64
p37075
Vinsert
p37076
I45
VStringLiteral: "HT_TASK_TRADE_HISTORY_NEW"
p37077
tp37078
I1
s(g22636
I42
g22637
Vinsert
p37079
I42
VSimpleName: stmtList
p37080
tp37081
I3
s(g19163
I42
g19164
Vinsert
p37082
I43
VSimpleType: Driver
p37083
tp37084
I1
s(g10591
I42
g10592
Vinsert
p37085
I42
VSimpleName: incrementIndent
p37086
tp37087
I1
s(Vinsert
p37088
I42
VSimpleName: getConstraintName
p37089
Vinsert
p37090
I45
VStringLiteral: "DISABLE CONSTRAINT "
p37091
tp37092
I1
s(g3271
I42
g3272
Vinsert
p37093
I34
VNumberLiteral: 2
p37094
tp37095
I1
s(g26404
I42
g26405
Vinsert
p37096
I43
VSimpleType: Timestamp
p37097
tp37098
I1
s(g14421
I42
g14422
Vinsert
p37099
I34
VNumberLiteral: 1
p37100
tp37101
I1
s(g30507
I42
g30508
Vinsert
p37102
I42
VSimpleName: SQLColumnCheck
p37103
tp37104
I1
s(g6516
I42
g6517
Vinsert
p37105
I43
VSimpleType: HashMap
p37106
tp37107
I1
s(g28273
I42
g28274
Vinsert
p37108
I43
VSimpleType: DB2SchemaStatVisitor
p37109
tp37110
I6
s(g15495
I42
g15496
Vinsert
p37111
I42
VSimpleName: isDebugEnabled
p37112
tp37113
I1
s(g35972
I42
g35973
Vinsert
p37114
I45
VStringLiteral: "druid.initialSize"
p37115
tp37116
I1
s(g7817
I42
g7818
Vinsert
p37117
I42
VSimpleName: rs
p37118
tp37119
I4
s(g16556
I42
g16557
Vinsert
p37120
I42
VSimpleName: getDriverClassName
p37121
tp37122
I1
s(g2079
I42
g2080
Vinsert
p37123
I21
VExpressionStatement
p37124
tp37125
I14
s(g21113
I42
g21114
Vinsert
p37126
I42
VSimpleName: parseUpdateStatement
p37127
tp37128
I1
s(g6139
I42
g6140
Vinsert
p37129
I32
VMethodInvocation
p37130
tp37131
I41
s(g19339
I42
g19340
Vinsert
p37132
I42
VSimpleName: ALI_ORACLE
p37133
tp37134
I1
s(g14234
I42
g14235
Vinsert
p37135
I32
VMethodInvocation
p37136
tp37137
I2
s(Vinsert
p37138
I42
VSimpleName: length
p37139
Vinsert
p37140
I42
VSimpleName: encoded
p37141
tp37142
I6
s(g1760
I42
g1761
Vinsert
p37143
I21
VExpressionStatement
p37144
tp37145
I5
s(g2538
I42
g2539
Vinsert
p37146
I8
VBlock
p37147
tp37148
I1
s(g7370
I42
g7371
Vinsert
p37149
I44
VSingleVariableDeclaration
p37150
tp37151
I1
s(g4273
I42
g4274
Vinsert
p37152
I41
VReturnStatement
p37153
tp37154
I8
s(Vinsert
p37155
I42
VSimpleName: set
p37156
Vinsert
p37157
I42
VSimpleName: x
p37158
tp37159
I3
s(g6375
I42
g6376
Vinsert
p37160
I36
VParenthesizedExpression
p37161
tp37162
I2
s(g29483
I42
g29484
Vinsert
p37163
I42
VSimpleName: SQLExprParser
p37164
tp37165
I3
s(g5328
I42
g5329
Vinsert
p37166
I42
VSimpleName: connectStackTrace
p37167
tp37168
I2
s(Vinsert
p37169
I42
VSimpleName: name
p37170
Vinsert
p37171
I8
VBlock
p37172
tp37173
I18
s(g28232
I42
g28233
Vinsert
p37174
I42
VSimpleName: recordFormat
p37175
tp37176
I1
s(g36737
I42
g36738
Vinsert
p37177
I42
VSimpleName: assertNotNull
p37178
tp37179
I1
s(g22848
I42
g22849
Vinsert
p37180
I42
VSimpleName: Object
p37181
tp37182
I1
s(g4495
I42
g4496
Vinsert
p37183
I34
VNumberLiteral: 30676
p37184
tp37185
I1
s(g8528
I42
g8529
Vinsert
p37186
I60
VVariableDeclarationStatement
p37187
tp37188
I7
s(g1780
I42
g1781
Vinsert
p37189
I42
VSimpleName: DruidDataSource
p37190
tp37191
I4
s(g5597
I42
g5598
Vinsert
p37192
I42
VSimpleName: accept
p37193
tp37194
I2
s(g23258
I42
g23259
Vinsert
p37195
I45
VStringLiteral: "utf8"
p37196
tp37197
I1
s(g16248
I42
g16249
Vinsert
p37198
I18
VContinueStatement
p37199
tp37200
I1
s(g1780
I42
g1781
Vinsert
p37201
I8
VBlock
p37202
tp37203
I3
s(Vinsert
p37204
I42
VSimpleName: lock
p37205
Vinsert
p37206
I42
VSimpleName: Exception
p37207
tp37208
I1
s(g1339
I42
g1340
Vinsert
p37209
I31
VMethodDeclaration
p37210
tp37211
I23
s(g13588
I42
g13589
Vinsert
p37212
I39
VPrimitiveType: void
p37213
tp37214
I1
s(g22782
I42
g22783
Vinsert
p37215
I42
VSimpleName: cluster
p37216
tp37217
I1
s(g12443
I42
g12444
Vinsert
p37218
I32
VMethodInvocation
p37219
tp37220
I9
s(g13857
I42
g13858
Vinsert
p37221
I42
VSimpleName: Map
p37222
tp37223
I1
s(g5903
I42
g5904
Vinsert
p37224
I8
VBlock
p37225
tp37226
I1
s(g28764
I42
g28765
Vinsert
p37227
I78
VMarkerAnnotation
p37228
tp37229
I1
s(g17291
I42
g17292
Vinsert
p37230
I8
VBlock
p37231
tp37232
I1
s(g1840
I42
g1841
Vinsert
p37233
I8
VBlock
p37234
tp37235
I1
s(g8796
I42
g8797
Vinsert
p37236
I60
VVariableDeclarationStatement
p37237
tp37238
I1
s(g19451
I42
g19452
Vinsert
p37239
I42
VSimpleName: isRequireAuth
p37240
tp37241
I1
s(g851
I42
g852
Vinsert
p37242
I42
VSimpleName: function
p37243
tp37244
I2
s(g9722
I42
g9723
Vinsert
p37245
I42
VSimpleName: resolveExpr
p37246
tp37247
I1
s(g14659
I42
g14660
Vinsert
p37248
I34
VNumberLiteral: 1
p37249
tp37250
I1
s(g1996
I42
g1997
Vinsert
p37251
I16
VConditionalExpression
p37252
tp37253
I1
s(g20030
I42
g20031
Vinsert
p37254
I27
VInfixExpression: ==
p37255
tp37256
I1
s(g17633
I42
g17634
Vinsert
p37257
I42
VSimpleName: parameter
p37258
tp37259
I2
s(Vinsert
p37260
I42
VSimpleName: nextToken
p37261
Vinsert
p37262
I45
VStringLiteral: "SEMI"
p37263
tp37264
I1
s(g10016
I42
g10017
Vinsert
p37265
I42
VSimpleName: value
p37266
tp37267
I3
s(g2464
I42
g2465
Vinsert
p37268
I42
VSimpleName: Exception
p37269
tp37270
I1
s(g8409
I42
g8410
Vinsert
p37271
I42
VSimpleName: SpringMethodInfo
p37272
tp37273
I1
s(g7792
I42
g7793
Vinsert
p37274
I83
VModifier: public
p37275
tp37276
I1
s(g17580
I42
g17581
Vinsert
p37277
I42
VSimpleName: tableSource
p37278
tp37279
I1
s(Vinsert
p37280
I42
VSimpleName: createDataSource
p37281
Vinsert
p37282
I54
VTryStatement
p37283
tp37284
I1
s(Vinsert
p37285
I42
VSimpleName: getColumns
p37286
Vinsert
p37287
I43
VSimpleType: SQLExpr
p37288
tp37289
I1
s(g6103
I42
g6104
Vinsert
p37290
I60
VVariableDeclarationStatement
p37291
tp37292
I1
s(g14535
I42
g14536
Vinsert
p37293
I45
VStringLiteral: "\u005ctSELECT 1\u005cn"
p37294
tp37295
I1
s(g444
I42
g445
Vinsert
p37296
I7
VAssignment: =
p37297
tp37298
I1
s(g11686
I42
g11687
Vinsert
p37299
I45
VStringLiteral: "\u005cn\u005ctCONSTRAINT product_status_lov_demo CHECK (product_status IN ('orderable', 'planned', 'under development', 'obsolete'))"
p37300
tp37301
I2
s(g6298
I42
g6299
Vinsert
p37302
I43
VSimpleType: DataSourceHolder
p37303
tp37304
I3
s(g738
I42
g739
Vinsert
p37305
I42
VSimpleName: accept
p37306
tp37307
I1
s(g7450
I42
g7451
Vinsert
p37308
I61
VWhileStatement
p37309
tp37310
I1
s(g34423
I42
g34424
Vinsert
p37311
I43
VSimpleType: StringWriter
p37312
tp37313
I4
s(g13957
I42
g13958
Vinsert
p37314
I42
VSimpleName: keywords
p37315
tp37316
I1
s(g10498
I42
g10499
Vinsert
p37317
I8
VBlock
p37318
tp37319
I2
s(g8653
I42
g8654
Vinsert
p37320
I42
VSimpleName: contextClassLoader
p37321
tp37322
I1
s(g18496
I42
g18497
Vinsert
p37323
I43
VSimpleType: SQLGrantStatement
p37324
tp37325
I1
s(g13223
I42
g13224
Vinsert
p37326
I12
VCatchClause
p37327
tp37328
I1
s(g997
I42
g998
Vinsert
p37329
I34
VNumberLiteral: 0
p37330
tp37331
I1
s(Vinsert
p37332
I42
VSimpleName: exprList
p37333
Vinsert
p37334
I42
VSimpleName: nextToken
p37335
tp37336
I3
s(g8254
I42
g8255
Vinsert
p37337
I45
VStringLiteral: "\u005cnPARTITION BY RANGE (YEAR(purchased))"
p37338
tp37339
I1
s(g2624
I42
g2625
Vinsert
p37340
I22
VFieldAccess
p37341
tp37342
I1
s(g51
I42
g52
Vinsert
p37343
I41
VReturnStatement
p37344
tp37345
I2
s(g690
I42
g691
Vinsert
p37346
I43
VSimpleType: DruidDataSource
p37347
tp37348
I3
s(Vinsert
p37349
I42
VSimpleName: size
p37350
Vinsert
p37351
I27
VInfixExpression: >=
p37352
tp37353
I1
s(g3857
I42
g3858
Vinsert
p37354
I42
VSimpleName: Object
p37355
tp37356
I2
s(g9559
I42
g9560
Vinsert
p37357
I43
VSimpleType: HBaseResultSet
p37358
tp37359
I1
s(g25108
I42
g25109
Vinsert
p37360
I43
VSimpleType: SQLDropDatabaseStatement
p37361
tp37362
I2
s(g5305
I42
g5306
Vinsert
p37363
I42
VSimpleName: addAfterComment
p37364
tp37365
I3
s(g18289
I42
g18290
Vinsert
p37366
I37
VPostfixExpression: ++
p37367
tp37368
I1
s(g2084
I42
g2085
Vinsert
p37369
I41
VReturnStatement
p37370
tp37371
I3
s(g9529
I42
g9530
Vinsert
p37372
I42
VSimpleName: getConfig
p37373
tp37374
I1
s(g13017
I42
g13018
Vinsert
p37375
I42
VSimpleName: parser3
p37376
tp37377
I2
s(g6323
I42
g6324
Vinsert
p37378
I8
VBlock
p37379
tp37380
I1
s(g31224
I42
g31225
Vinsert
p37381
I85
VDimension
p37382
tp37383
I2
s(g16745
I42
g16746
Vinsert
p37384
I42
VSimpleName: error
p37385
tp37386
I2
s(g5328
I42
g5329
Vinsert
p37387
I21
VExpressionStatement
p37388
tp37389
I1
s(g15818
I42
g15819
Vinsert
p37390
I42
VSimpleName: WebAppStatUtils
p37391
tp37392
I1
s(g13336
I42
g13337
Vinsert
p37393
I42
VSimpleName: getCount_2000_5000_Millis
p37394
tp37395
I1
s(g2525
I42
g2526
Vinsert
p37396
I70
VEnhancedForStatement
p37397
tp37398
I33
s(g6288
I42
g6289
Vinsert
p37399
I32
VMethodInvocation
p37400
tp37401
I3
s(g12125
I42
g12126
Vinsert
p37402
I43
VSimpleType: JSONObject
p37403
tp37404
I1
s(g19339
I42
g19340
Vinsert
p37405
I83
VModifier: final
p37406
tp37407
I1
s(g10508
I42
g10509
Vinsert
p37408
I25
VIfStatement
p37409
tp37410
I1
s(g23258
I42
g23259
Vinsert
p37411
I42
VSimpleName: MySqlLoadDataInFileStatement
p37412
tp37413
I1
s(g4740
I42
g4741
Vinsert
p37414
I25
VIfStatement
p37415
tp37416
I2
s(g8833
I42
g8834
Vinsert
p37417
I34
VNumberLiteral: 6
p37418
tp37419
I1
s(g11973
I42
g11974
Vinsert
p37420
I45
VStringLiteral: " `Extent1`.`OpeningBank`, "
p37421
tp37422
I1
s(g12943
I42
g12944
Vinsert
p37423
I42
VSimpleName: percent
p37424
tp37425
I1
s(g336
I42
g337
Vinsert
p37426
I21
VExpressionStatement
p37427
tp37428
I11
s(g1705
I42
g1706
Vinsert
p37429
I43
VSimpleType: Entity
p37430
tp37431
I4
s(g11701
I42
g11702
Vinsert
p37432
I42
VSimpleName: TestCase
p37433
tp37434
I1
s(Vinsert
p37435
I42
VSimpleName: getName
p37436
Vinsert
p37437
I42
VSimpleName: name
p37438
tp37439
I4
s(g27276
I42
g27277
Vinsert
p37440
I42
VSimpleName: e
p37441
tp37442
I9
s(g5148
I42
g5149
Vinsert
p37443
I21
VExpressionStatement
p37444
tp37445
I1
s(g116
I42
g117
Vinsert
p37446
I8
VBlock
p37447
tp37448
I5
s(g2324
I42
g2325
Vinsert
p37449
I45
VStringLiteral: " ("
p37450
tp37451
I1
s(g10082
I42
g10083
Vinsert
p37452
I42
VSimpleName: Exception
p37453
tp37454
I1
s(g13700
I42
g13701
Vinsert
p37455
I14
VClassInstanceCreation
p37456
tp37457
I42
s(g4183
I42
g4184
Vinsert
p37458
I45
VStringLiteral: "\u005ct\u005ct\u005cts := s + i * j;\u005cn"
p37459
tp37460
I1
s(g4278
I42
g4279
Vinsert
p37461
I45
VStringLiteral: "| c_date       | date         | NO   |     | 0000-00-00          |                             |\u005cn"
p37462
tp37463
I1
s(g8711
I42
g8712
Vinsert
p37464
I45
VStringLiteral: "CONSTANT"
p37465
tp37466
I1
s(g28321
I42
g28322
Vinsert
p37467
I42
VSimpleName: getResultSet
p37468
tp37469
I1
s(Vinsert
p37470
I42
VSimpleName: getInstance
p37471
Vinsert
p37472
I42
VSimpleName: SpringMethodStatValue
p37473
tp37474
I1
s(g34122
I42
g34123
Vinsert
p37475
I59
VVariableDeclarationFragment
p37476
tp37477
I2
s(g17012
I42
g17013
Vinsert
p37478
I42
VSimpleName: context
p37479
tp37480
I2
s(g11611
I42
g11612
Vinsert
p37481
I45
VStringLiteral: "INSERT OVERWRITE TABLE ff PARTITION (c='c', d='d')\u005cn"
p37482
tp37483
I1
s(g2364
I42
g2365
Vinsert
p37484
I5
VArrayType: byte[]
p37485
tp37486
I1
s(g9964
I42
g9965
Vinsert
p37487
I42
VSimpleName: SQLExprTableSource
p37488
tp37489
I7
s(Vinsert
p37490
I42
VSimpleName: nextToken
p37491
Vinsert
p37492
I42
VSimpleName: setRowCount
p37493
tp37494
I1
s(g10660
I42
g10661
Vinsert
p37495
I45
VStringLiteral: "\u005ct`c_timestamp` timestamp NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'timestamp',\u005cn"
p37496
tp37497
I2
s(g22894
I42
g22895
Vinsert
p37498
I42
VSimpleName: mockResultSet
p37499
tp37500
I1
s(g6252
I42
g6253
Vinsert
p37501
I32
VMethodInvocation
p37502
tp37503
I2
s(Vinsert
p37504
I42
VSimpleName: assertEquals
p37505
Vinsert
p37506
I42
VSimpleName: EvalMethodTest_insert_1
p37507
tp37508
I1
s(g9529
I42
g9530
Vinsert
p37509
I42
VSimpleName: MySqlWallProvider
p37510
tp37511
I1
s(g7356
I42
g7357
Vinsert
p37512
I59
VVariableDeclarationFragment
p37513
tp37514
I2
s(g34468
I42
g34469
Vinsert
p37515
I27
VInfixExpression: &&
p37516
tp37517
I1
s(g14659
I42
g14660
Vinsert
p37518
I42
VSimpleName: set
p37519
tp37520
I10
s(g14844
I42
g14845
Vinsert
p37521
I42
VSimpleName: put
p37522
tp37523
I1
s(g10765
I42
g10766
Vinsert
p37524
I42
VSimpleName: join
p37525
tp37526
I4
s(g33776
I42
g33777
Vinsert
p37527
I42
VSimpleName: getObjectName
p37528
tp37529
I1
s(g3027
I42
g3028
Vinsert
p37530
I59
VVariableDeclarationFragment
p37531
tp37532
I1
s(g6592
I42
g6593
Vinsert
p37533
I8
VBlock
p37534
tp37535
I1
s(Vinsert
p37536
I42
VSimpleName: exprList
p37537
Vinsert
p37538
I45
VStringLiteral: "SETS"
p37539
tp37540
I1
s(g11033
I42
g11034
Vinsert
p37541
I42
VSimpleName: engine
p37542
tp37543
I10
s(g9084
I42
g9085
Vinsert
p37544
I14
VClassInstanceCreation
p37545
tp37546
I2
s(g723
I42
g724
Vinsert
p37547
I42
VSimpleName: DruidPooledPreparedStatement
p37548
tp37549
I1
s(g14605
I42
g14606
Vinsert
p37550
I32
VMethodInvocation
p37551
tp37552
I5
s(g6212
I42
g6213
Vinsert
p37553
I83
VModifier: public
p37554
tp37555
I2
s(g5892
I42
g5893
Vinsert
p37556
I14
VClassInstanceCreation
p37557
tp37558
I1
s(g816
I42
g817
Vinsert
p37559
I34
VNumberLiteral: 3
p37560
tp37561
I1
s(g8603
I42
g8604
Vinsert
p37562
I40
VQualifiedName: com.alibaba.druid.filter.wall.spi.WallVisitorUtils.loadResource
p37563
tp37564
I2
s(g2930
I42
g2931
Vinsert
p37565
I42
VSimpleName: ucase
p37566
tp37567
I1
s(g33489
I42
g33490
Vinsert
p37568
I45
VStringLiteral: "openapp_log_d"
p37569
tp37570
I1
s(g15761
I42
g15762
Vinsert
p37571
I45
VStringLiteral: "OVER ("
p37572
tp37573
I1
s(g26548
I42
g26549
Vinsert
p37574
I60
VVariableDeclarationStatement
p37575
tp37576
I1
s(Vinsert
p37577
I42
VSimpleName: equals
p37578
Vinsert
p37579
I40
VQualifiedName: JdbcUtils.PHOENIX
p37580
tp37581
I2
s(g30496
I42
g30497
Vinsert
p37582
I40
VQualifiedName: Token.LITERAL_INT
p37583
tp37584
I1
s(g17114
I42
g17115
Vinsert
p37585
I41
VReturnStatement
p37586
tp37587
I6
s(g13071
I42
g13072
Vinsert
p37588
I45
VStringLiteral: ", pstmt-"
p37589
tp37590
I1
s(g19179
I42
g19180
Vinsert
p37591
I43
VSimpleType: String
p37592
tp37593
I2
s(g5946
I42
g5947
Vinsert
p37594
I42
VSimpleName: T
p37595
tp37596
I1
s(g9190
I42
g9191
Vinsert
p37597
I42
VSimpleName: List
p37598
tp37599
I1
s(g2604
I42
g2605
Vinsert
p37600
I43
VSimpleType: SQLException
p37601
tp37602
I1
s(g5854
I42
g5855
Vinsert
p37603
I8
VBlock
p37604
tp37605
I1
s(g1685
I42
g1686
Vinsert
p37606
I42
VSimpleName: get
p37607
tp37608
I1
s(g22757
I42
g22758
Vinsert
p37609
I42
VSimpleName: SQLHint
p37610
tp37611
I2
s(g469
I42
g470
Vinsert
p37612
I42
VSimpleName: hashCode64
p37613
tp37614
I3
s(g12488
I42
g12489
Vinsert
p37615
I42
VSimpleName: stmt
p37616
tp37617
I2
s(g14551
I42
g14552
Vinsert
p37618
I42
VSimpleName: accept
p37619
tp37620
I1
s(g4238
I42
g4239
Vinsert
p37621
I8
VBlock
p37622
tp37623
I3
s(g1750
I42
g1751
Vinsert
p37624
I83
VModifier: public
p37625
tp37626
I2
s(g13084
I42
g13085
Vinsert
p37627
I45
VStringLiteral: "SELECT COL1\u005cn"
p37628
tp37629
I1
s(g627
I42
g628
Vinsert
p37630
I32
VMethodInvocation
p37631
tp37632
I81
s(g13764
I42
g13765
Vinsert
p37633
I42
VSimpleName: Exception
p37634
tp37635
I1
s(g8381
I42
g8382
Vinsert
p37636
I43
VSimpleType: MySqlUpdateStatement
p37637
tp37638
I1
s(g7039
I42
g7040
Vinsert
p37639
I45
VStringLiteral: "\u005cn\u005ctPARTITION SALES_Q3_2000 VALUES LESS THAN (TO_DATE('01-OCT-2000', 'DD-MON-YYYY'))"
p37640
tp37641
I2
s(Vinsert
p37642
I42
VSimpleName: assertEquals
p37643
Vinsert
p37644
I42
VSimpleName: EvalMethodTest_instr
p37645
tp37646
I1
s(g2281
I42
g2282
Vinsert
p37647
I42
VSimpleName: desc
p37648
tp37649
I2
s(g15345
I42
g15346
Vinsert
p37650
I44
VSingleVariableDeclaration
p37651
tp37652
I1
s(g4452
I42
g4453
Vinsert
p37653
I42
VSimpleName: getSubSchemaNames
p37654
tp37655
I1
s(g7947
I42
g7948
Vinsert
p37656
I8
VBlock
p37657
tp37658
I5
s(g10655
I42
g10656
Vinsert
p37659
I42
VSimpleName: initedLatch
p37660
tp37661
I1
s(g9089
I42
g9090
Vinsert
p37662
I42
VSimpleName: assertEquals
p37663
tp37664
I1
s(g16479
I42
g16480
Vinsert
p37665
I27
VInfixExpression: ==
p37666
tp37667
I2
s(g10338
I42
g10339
Vinsert
p37668
I42
VSimpleName: SQLIntervalExpr
p37669
tp37670
I1
s(Vinsert
p37671
I42
VSimpleName: assertTrue
p37672
Vinsert
p37673
I45
VStringLiteral: "test"
p37674
tp37675
I4
s(g32934
I42
g32935
Vinsert
p37676
I43
VSimpleType: SQLTimestampExpr
p37677
tp37678
I2
s(g7330
I42
g7331
Vinsert
p37679
I9
VBooleanLiteral: true
p37680
tp37681
I13
s(Vinsert
p37682
I42
VSimpleName: setParent
p37683
Vinsert
p37684
I42
VSimpleName: setValidproc
p37685
tp37686
I1
s(g10082
I42
g10083
Vinsert
p37687
I42
VSimpleName: WallUtils
p37688
tp37689
I1
s(g30229
I42
g30230
Vinsert
p37690
I32
VMethodInvocation
p37691
tp37692
I2
s(g12354
I42
g12355
Vinsert
p37693
I8
VBlock
p37694
tp37695
I1
s(g18841
I42
g18842
Vinsert
p37696
I40
VQualifiedName: SQLIfStatement.ElseIf
p37697
tp37698
I2
s(g19461
I42
g19462
Vinsert
p37699
I45
VStringLiteral: "SHOW PARTITIONS "
p37700
tp37701
I1
s(g11827
I42
g11828
Vinsert
p37702
I83
VModifier: volatile
p37703
tp37704
I1
s(g12666
I42
g12667
Vinsert
p37705
I42
VSimpleName: e
p37706
tp37707
I6
s(g2930
I42
g2931
Vinsert
p37708
I59
VVariableDeclarationFragment
p37709
tp37710
I1
s(Vinsert
p37711
I42
VSimpleName: endVisit
p37712
Vinsert
p37713
I42
VSimpleName: connectBy
p37714
tp37715
I1
s(Vinsert
p37716
I42
VSimpleName: get
p37717
Vinsert
p37718
I42
VSimpleName: raw
p37719
tp37720
I1
s(g532
I42
g533
Vinsert
p37721
I49
VSwitchCase
p37722
tp37723
I1
s(g10697
I42
g10698
Vinsert
p37724
I42
VSimpleName: getPermitFunctions
p37725
tp37726
I2
s(g2997
I42
g2998
Vinsert
p37727
I52
VThisExpression
p37728
tp37729
I1
s(g9503
I42
g9504
Vinsert
p37730
I32
VMethodInvocation
p37731
tp37732
I2
s(g29844
I42
g29845
Vinsert
p37733
I32
VMethodInvocation
p37734
tp37735
I4
s(g8692
I42
g8693
Vinsert
p37736
I32
VMethodInvocation
p37737
tp37738
I4
s(Vinsert
p37739
I42
VSimpleName: getParameters
p37740
Vinsert
p37741
I43
VSimpleType: List
p37742
tp37743
I1
s(Vinsert
p37744
I42
VSimpleName: setStorage
p37745
Vinsert
p37746
I8
VBlock
p37747
tp37748
I1
s(g20893
I42
g20894
Vinsert
p37749
I62
VInstanceofExpression
p37750
tp37751
I3
s(g2925
I42
g2926
Vinsert
p37752
I42
VSimpleName: System
p37753
tp37754
I2
s(g14540
I42
g14541
Vinsert
p37755
I31
VMethodDeclaration
p37756
tp37757
I1
s(g8849
I42
g8850
Vinsert
p37758
I5
VArrayType: byte[]
p37759
tp37760
I1
s(g6650
I42
g6651
Vinsert
p37761
I42
VSimpleName: SQLSelectQueryBlock
p37762
tp37763
I1
s(g14343
I42
g14344
Vinsert
p37764
I32
VMethodInvocation
p37765
tp37766
I1
s(g21504
I42
g21505
Vinsert
p37767
I70
VEnhancedForStatement
p37768
tp37769
I1
s(g18796
I42
g18797
Vinsert
p37770
I42
VSimpleName: arg
p37771
tp37772
I1
s(g20733
I42
g20734
Vinsert
p37773
I45
VStringLiteral: "\u005cnwhere name rlike 'xxxx'"
p37774
tp37775
I1
s(g10100
I42
g10101
Vinsert
p37776
I42
VSimpleName: setConnectTimeout
p37777
tp37778
I1
s(g25074
I42
g25075
Vinsert
p37779
I42
VSimpleName: findTableSource
p37780
tp37781
I1
s(g10864
I42
g10865
Vinsert
p37782
I25
VIfStatement
p37783
tp37784
I1
s(Vinsert
p37785
I42
VSimpleName: println
p37786
Vinsert
p37787
I45
VStringLiteral: "\u005ctSELECT *\u005cn"
p37788
tp37789
I1
s(Vinsert
p37790
I42
VSimpleName: setLastSlowParameters
p37791
Vinsert
p37792
I42
VSimpleName: val
p37793
tp37794
I1
s(g11420
I42
g11421
Vinsert
p37795
I52
VThisExpression
p37796
tp37797
I1
s(g21598
I42
g21599
Vinsert
p37798
I42
VSimpleName: addColumn
p37799
tp37800
I1
s(g4977
I42
g4978
Vinsert
p37801
I45
VStringLiteral: "SYNONYM"
p37802
tp37803
I1
s(g26608
I42
g26609
Vinsert
p37804
I43
VSimpleType: OracleInsertStatement
p37805
tp37806
I1
s(Vinsert
p37807
I42
VSimpleName: visit
p37808
Vinsert
p37809
I42
VSimpleName: exprList
p37810
tp37811
I1
s(g5465
I42
g5466
Vinsert
p37812
I42
VSimpleName: originalContext
p37813
tp37814
I1
s(Vinsert
p37815
I42
VSimpleName: toString
p37816
Vinsert
p37817
I42
VSimpleName: table
p37818
tp37819
I2
s(g12125
I42
g12126
Vinsert
p37820
I42
VSimpleName: json
p37821
tp37822
I2
s(g3875
I42
g3876
Vinsert
p37823
I42
VSimpleName: context
p37824
tp37825
I2
s(g12791
I42
g12792
Vinsert
p37826
I45
VStringLiteral: " USING ("
p37827
tp37828
I1
s(g17387
I42
g17388
Vinsert
p37829
I42
VSimpleName: visitor
p37830
tp37831
I6
s(g8742
I42
g8743
Vinsert
p37832
I40
VQualifiedName: com.alibaba.druid.sql.ast.statement.SQLUseStatement
p37833
tp37834
I1
s(g20456
I42
g20457
Vinsert
p37835
I42
VSimpleName: s
p37836
tp37837
I4
s(g4898
I42
g4899
Vinsert
p37838
I42
VSimpleName: nextToken
p37839
tp37840
I1
s(g35034
I42
g35035
Vinsert
p37841
I42
VSimpleName: print
p37842
tp37843
I1
s(g31505
I42
g31506
Vinsert
p37844
I21
VExpressionStatement
p37845
tp37846
I1
s(g14801
I42
g14802
Vinsert
p37847
I42
VSimpleName: statementName
p37848
tp37849
I1
s(g17997
I42
g17998
Vinsert
p37850
I14
VClassInstanceCreation
p37851
tp37852
I1
s(g2329
I42
g2330
Vinsert
p37853
I42
VSimpleName: value
p37854
tp37855
I2
s(g3939
I42
g3940
Vinsert
p37856
I43
VSimpleType: Exception
p37857
tp37858
I40
s(g11270
I42
g11271
Vinsert
p37859
I42
VSimpleName: druid
p37860
tp37861
I1
s(g286
I42
g287
Vinsert
p37862
I42
VSimpleName: Utils
p37863
tp37864
I2
s(g5520
I42
g5521
Vinsert
p37865
I42
VSimpleName: IllegalStateException
p37866
tp37867
I1
s(g7216
I42
g7217
Vinsert
p37868
I42
VSimpleName: ArrayList
p37869
tp37870
I1
s(g4689
I42
g4690
Vinsert
p37871
I45
VStringLiteral: "\u005ct) I ON Mod.CONTRACT_MODULE_ID = I.CONTRACT_MODULE_ID "
p37872
tp37873
I1
s(g35330
I42
g35331
Vinsert
p37874
I43
VSimpleType: ExportParameterVisitor
p37875
tp37876
I1
s(g20240
I42
g20241
Vinsert
p37877
I25
VIfStatement
p37878
tp37879
I1
s(g6429
I42
g6430
Vinsert
p37880
I41
VReturnStatement
p37881
tp37882
I1
s(Vinsert
p37883
I42
VSimpleName: parseStatementList
p37884
Vinsert
p37885
I43
VSimpleType: TeradataStatementParser
p37886
tp37887
I1
s(Vinsert
p37888
I42
VSimpleName: getConfig
p37889
Vinsert
p37890
I42
VSimpleName: visitor
p37891
tp37892
I4
s(Vinsert
p37893
I42
VSimpleName: setParent
p37894
Vinsert
p37895
I42
VSimpleName: group
p37896
tp37897
I3
s(g9055
I42
g9056
Vinsert
p37898
I43
VSimpleType: SQLExpr
p37899
tp37900
I12
s(g23839
I42
g23840
Vinsert
p37901
I21
VExpressionStatement
p37902
tp37903
I1
s(g6380
I42
g6381
Vinsert
p37904
I52
VThisExpression
p37905
tp37906
I1
s(Vinsert
p37907
I42
VSimpleName: substring
p37908
Vinsert
p37909
I40
VQualifiedName: lexer.mark
p37910
tp37911
I2
s(g231
I42
g232
Vinsert
p37912
I42
VSimpleName: setWhere
p37913
tp37914
I1
s(g5123
I42
g5124
Vinsert
p37915
I7
VAssignment: =
p37916
tp37917
I1
s(g321
I42
g322
Vinsert
p37918
I42
VSimpleName: currentThread
p37919
tp37920
I3
s(g35114
I42
g35115
Vinsert
p37921
I42
VSimpleName: setTestOnBorrow
p37922
tp37923
I1
s(g27208
I42
g27209
Vinsert
p37924
I60
VVariableDeclarationStatement
p37925
tp37926
I1
s(Vinsert
p37927
I42
VSimpleName: size
p37928
Vinsert
p37929
I42
VSimpleName: check
p37930
tp37931
I1
s(g30418
I42
g30419
Vinsert
p37932
I42
VSimpleName: SQLException
p37933
tp37934
I1
s(g23113
I42
g23114
Vinsert
p37935
I39
VPrimitiveType: int
p37936
tp37937
I1
s(g20564
I42
g20565
Vinsert
p37938
I74
VParameterizedType: Map.Entry<String,Entity>
p37939
tp37940
I1
s(g22603
I42
g22604
Vinsert
p37941
I17
VConstructorInvocation
p37942
tp37943
I1
s(g16985
I42
g16986
Vinsert
p37944
I42
VSimpleName: simplify
p37945
tp37946
I1
s(g1725
I42
g1726
Vinsert
p37947
I43
VSimpleType: SchemaObject
p37948
tp37949
I1
s(g23113
I42
g23114
Vinsert
p37950
I32
VMethodInvocation
p37951
tp37952
I2
s(Vinsert
p37953
I42
VSimpleName: limit
p37954
Vinsert
p37955
I45
VStringLiteral: "select * from t where age > 100"
p37956
tp37957
I1
s(g2586
I42
g2587
Vinsert
p37958
I57
VTypeLiteral
p37959
tp37960
I3
s(g26990
I42
g26991
Vinsert
p37961
I42
VSimpleName: PGASTVisitorAdapter
p37962
tp37963
I1
s(g4740
I42
g4741
Vinsert
p37964
I27
VInfixExpression: ==
p37965
tp37966
I1
s(g27615
I42
g27616
Vinsert
p37967
I45
VStringLiteral: "  where asq.sequence_name = us.table_name"
p37968
tp37969
I2
s(g26893
I42
g26894
Vinsert
p37970
I42
VSimpleName: rollUp
p37971
tp37972
I2
s(Vinsert
p37973
I42
VSimpleName: expr
p37974
Vinsert
p37975
I60
VVariableDeclarationStatement
p37976
tp37977
I23
s(g19139
I42
g19140
Vinsert
p37978
I8
VBlock
p37979
tp37980
I1
s(g1135
I42
g1136
Vinsert
p37981
I42
VSimpleName: current
p37982
tp37983
I2
s(g567
I42
g568
Vinsert
p37984
I39
VPrimitiveType: int
p37985
tp37986
I3
s(g13952
I42
g13953
Vinsert
p37987
I44
VSingleVariableDeclaration
p37988
tp37989
I1
s(g8103
I42
g8104
Vinsert
p37990
I42
VSimpleName: Entry
p37991
tp37992
I1
s(g25165
I42
g25166
Vinsert
p37993
I42
VSimpleName: stat
p37994
tp37995
I1
s(Vinsert
p37996
I42
VSimpleName: count
p37997
Vinsert
p37998
I45
VStringLiteral: "select id, name from t order by id"
p37999
tp38000
I3
s(g547
I42
g548
Vinsert
p38001
I45
VStringLiteral: "\u005ct, c.certification_2, c.contact_manufacturing, c.years_oem, v.stage AS create_type, c.video_path\u005cn"
p38002
tp38003
I1
s(g4755
I42
g4756
Vinsert
p38004
I25
VIfStatement
p38005
tp38006
I1
s(g10039
I42
g10040
Vinsert
p38007
I43
VSimpleType: Exception
p38008
tp38009
I5
s(g1370
I42
g1371
Vinsert
p38010
I42
VSimpleName: dataSource
p38011
tp38012
I2
s(Vinsert
p38013
I42
VSimpleName: append
p38014
Vinsert
p38015
I42
VSimpleName: from
p38016
tp38017
I2
s(g20035
I42
g20036
Vinsert
p38018
I45
VStringLiteral: "SELECT * from city_list where 2 = case when 2=1 then 1 else 2 END"
p38019
tp38020
I1
s(g2707
I42
g2708
Vinsert
p38021
I42
VSimpleName: initByClassLoader
p38022
tp38023
I1
s(g5297
I42
g5298
Vinsert
p38024
I62
VInstanceofExpression
p38025
tp38026
I1
s(g2727
I42
g2728
Vinsert
p38027
I52
VThisExpression
p38028
tp38029
I1
s(g5166
I42
g5167
Vinsert
p38030
I42
VSimpleName: MySqlWallProvider
p38031
tp38032
I3
s(g21681
I42
g21682
Vinsert
p38033
I42
VSimpleName: getResolvedColumn
p38034
tp38035
I1
s(g1720
I42
g1721
Vinsert
p38036
I42
VSimpleName: String
p38037
tp38038
I3
s(g2829
I42
g2830
Vinsert
p38039
I83
VModifier: final
p38040
tp38041
I1
s(g3012
I42
g3013
Vinsert
p38042
I42
VSimpleName: block
p38043
tp38044
I2
s(g7293
I42
g7294
Vinsert
p38045
I42
VSimpleName: error
p38046
tp38047
I1
s(g454
I42
g455
Vinsert
p38048
I44
VSingleVariableDeclaration
p38049
tp38050
I1
s(g1652
I42
g1653
Vinsert
p38051
I8
VBlock
p38052
tp38053
I1
s(g17764
I42
g17765
Vinsert
p38054
I39
VPrimitiveType: boolean
p38055
tp38056
I2
s(g6992
I42
g6993
Vinsert
p38057
I39
VPrimitiveType: int
p38058
tp38059
I2
s(g6544
I42
g6545
Vinsert
p38060
I43
VSimpleType: String
p38061
tp38062
I9
s(g8062
I42
g8063
Vinsert
p38063
I42
VSimpleName: Exception
p38064
tp38065
I1
s(g21770
I42
g21771
Vinsert
p38066
I45
VStringLiteral: "[Ad_Work_Stop_Time] varchar(255) NULL,\u005cn"
p38067
tp38068
I1
s(g16091
I42
g16092
Vinsert
p38069
I43
VSimpleType: Boolean
p38070
tp38071
I3
s(g11869
I42
g11870
Vinsert
p38072
I42
VSimpleName: assertEquals
p38073
tp38074
I3
s(g11150
I42
g11151
Vinsert
p38075
I32
VMethodInvocation
p38076
tp38077
I144
s(g5589
I42
g5590
Vinsert
p38078
I40
VQualifiedName: Token.LPAREN
p38079
tp38080
I4
s(Vinsert
p38081
I42
VSimpleName: size
p38082
Vinsert
p38083
I10
VBreakStatement
p38084
tp38085
I1
s(g23891
I42
g23892
Vinsert
p38086
I45
VStringLiteral: "SELECT appsheetserialno FROM app_trans WHERE nodeid = _gbk '619' "
p38087
tp38088
I1
s(Vinsert
p38089
I42
VSimpleName: accept
p38090
Vinsert
p38091
I42
VSimpleName: toOracleString
p38092
tp38093
I2
s(Vinsert
p38094
I42
VSimpleName: getTableOptions
p38095
Vinsert
p38096
I42
VSimpleName: accept
p38097
tp38098
I2
s(Vinsert
p38099
I42
VSimpleName: getColumns
p38100
Vinsert
p38101
I34
VNumberLiteral: 19
p38102
tp38103
I2
s(g21084
I42
g21085
Vinsert
p38104
I78
VMarkerAnnotation
p38105
tp38106
I1
s(g20801
I42
g20802
Vinsert
p38107
I43
VSimpleType: Properties
p38108
tp38109
I1
s(g26252
I42
g26253
Vinsert
p38110
I40
VQualifiedName: Token.CONCAT
p38111
tp38112
I2
s(g14635
I42
g14636
Vinsert
p38113
I42
VSimpleName: Entity
p38114
tp38115
I2
s(g11795
I42
g11796
Vinsert
p38116
I44
VSingleVariableDeclaration
p38117
tp38118
I1
s(g12573
I42
g12574
Vinsert
p38119
I59
VVariableDeclarationFragment
p38120
tp38121
I1
s(g23031
I42
g23032
Vinsert
p38122
I42
VSimpleName: sessionStatLock
p38123
tp38124
I1
s(g5877
I42
g5878
Vinsert
p38125
I27
VInfixExpression: !=
p38126
tp38127
I1
s(g19396
I42
g19397
Vinsert
p38128
I45
VStringLiteral: "\u005cn\u005ct\u005ctAND to_char(begin_time, 'yyyy-MM-dd') <= ?"
p38129
tp38130
I1
s(g33739
I42
g33740
Vinsert
p38131
I27
VInfixExpression: ==
p38132
tp38133
I1
s(g2727
I42
g2728
Vinsert
p38134
I40
VQualifiedName: Token.CONSTRAINT
p38135
tp38136
I1
s(g15193
I42
g15194
Vinsert
p38137
I42
VSimpleName: Number
p38138
tp38139
I1
s(g12801
I42
g12802
Vinsert
p38140
I42
VSimpleName: MySqlDescribeStatement
p38141
tp38142
I2
s(g7883
I42
g7884
Vinsert
p38143
I34
VNumberLiteral: 12299
p38144
tp38145
I1
s(g1060
I42
g1061
Vinsert
p38146
I42
VSimpleName: existsMethod
p38147
tp38148
I2
s(g23991
I42
g23992
Vinsert
p38149
I42
VSimpleName: getCompress
p38150
tp38151
I1
s(g20904
I42
g20905
Vinsert
p38152
I32
VMethodInvocation
p38153
tp38154
I3
s(g32771
I42
g32772
Vinsert
p38155
I42
VSimpleName: stmt
p38156
tp38157
I52
s(g1554
I42
g1555
Vinsert
p38158
I42
VSimpleName: dataSourceLog
p38159
tp38160
I2
s(g4243
I42
g4244
Vinsert
p38161
I32
VMethodInvocation
p38162
tp38163
I3
s(g2935
I42
g2936
Vinsert
p38164
I42
VSimpleName: visitor
p38165
tp38166
I2
s(g23657
I42
g23658
Vinsert
p38167
I45
VStringLiteral: "Tables : "
p38168
tp38169
I1
s(g10485
I42
g10486
Vinsert
p38170
I42
VSimpleName: orderBy
p38171
tp38172
I1
s(Vinsert
p38173
I42
VSimpleName: getConnection
p38174
Vinsert
p38175
I45
VStringLiteral: "com.mysql.jdbc.Driver"
p38176
tp38177
I2
s(g5143
I42
g5144
Vinsert
p38178
I42
VSimpleName: event
p38179
tp38180
I1
s(g23433
I42
g23434
Vinsert
p38181
I42
VSimpleName: SQLSelectOrderByItem
p38182
tp38183
I6
s(g22177
I42
g22178
Vinsert
p38184
I42
VSimpleName: HashSet
p38185
tp38186
I1
s(g2760
I42
g2761
Vinsert
p38187
I42
VSimpleName: printAndAccept
p38188
tp38189
I1
s(g2408
I42
g2409
Vinsert
p38190
I42
VSimpleName: getConnectCount
p38191
tp38192
I1
s(g76
I42
g77
Vinsert
p38193
I42
VSimpleName: MonitorCluster
p38194
tp38195
I2
s(g25430
I42
g25431
Vinsert
p38196
I45
VStringLiteral: "TRAILING"
p38197
tp38198
I1
s(g11840
I42
g11841
Vinsert
p38199
I62
VInstanceofExpression
p38200
tp38201
I2
s(g16460
I42
g16461
Vinsert
p38202
I45
VStringLiteral: "table : "
p38203
tp38204
I1
s(g9683
I42
g9684
Vinsert
p38205
I42
VSimpleName: queryBlock
p38206
tp38207
I2
s(g7121
I42
g7122
Vinsert
p38208
I74
VParameterizedType: Map<String,Object>
p38209
tp38210
I5
s(Vinsert
p38211
I42
VSimpleName: expr
p38212
Vinsert
p38213
I43
VSimpleType: SQLInListExpr
p38214
tp38215
I1
s(g30913
I42
g30914
Vinsert
p38216
I45
VStringLiteral: "\u005cn\u005ct\u005ctCONSTRAINT check_office CHECK (office IN ('DALLAS', 'BOSTON', 'PARIS', 'TOKYO')) DISABLE"
p38217
tp38218
I2
s(g492
I42
g493
Vinsert
p38219
I42
VSimpleName: handleException
p38220
tp38221
I1
s(g6236
I42
g6237
Vinsert
p38222
I42
VSimpleName: renameColumn
p38223
tp38224
I2
s(g4780
I42
g4781
Vinsert
p38225
I43
VSimpleType: RuntimeException
p38226
tp38227
I1
s(g10275
I42
g10276
Vinsert
p38228
I59
VVariableDeclarationFragment
p38229
tp38230
I1
s(g7835
I42
g7836
Vinsert
p38231
I42
VSimpleName: List
p38232
tp38233
I2
s(g21643
I42
g21644
Vinsert
p38234
I43
VSimpleType: PGIntervalExpr
p38235
tp38236
I2
s(g32633
I42
g32634
Vinsert
p38237
I16
VConditionalExpression
p38238
tp38239
I1
s(g29522
I42
g29523
Vinsert
p38240
I42
VSimpleName: x
p38241
tp38242
I5
s(g13504
I42
g13505
Vinsert
p38243
I42
VSimpleName: sql
p38244
tp38245
I3
s(g12716
I42
g12717
Vinsert
p38246
I42
VSimpleName: TransactionInfo
p38247
tp38248
I1
s(g8924
I42
g8925
Vinsert
p38249
I42
VSimpleName: failureDetectFuture
p38250
tp38251
I2
s(g24062
I42
g24063
Vinsert
p38252
I45
VStringLiteral: "\u005ct\u005ctINITRANS 2\u005cn"
p38253
tp38254
I1
s(g6587
I42
g6588
Vinsert
p38255
I42
VSimpleName: x
p38256
tp38257
I3
s(Vinsert
p38258
I42
VSimpleName: getClass
p38259
Vinsert
p38260
I42
VSimpleName: lastError
p38261
tp38262
I2
s(g1279
I42
g1280
Vinsert
p38263
I42
VSimpleName: setClosed
p38264
tp38265
I1
s(g8373
I42
g8374
Vinsert
p38266
I78
VMarkerAnnotation
p38267
tp38268
I2
s(g5739
I42
g5740
Vinsert
p38269
I42
VSimpleName: loadConfig
p38270
tp38271
I1
s(g6567
I42
g6568
Vinsert
p38272
I42
VSimpleName: whiteSql_1
p38273
tp38274
I1
s(g10031
I42
g10032
Vinsert
p38275
I62
VInstanceofExpression
p38276
tp38277
I1
s(g5744
I42
g5745
Vinsert
p38278
I60
VVariableDeclarationStatement
p38279
tp38280
I23
s(g3679
I42
g3680
Vinsert
p38281
I60
VVariableDeclarationStatement
p38282
tp38283
I3
s(Vinsert
p38284
I42
VSimpleName: nextToken
p38285
Vinsert
p38286
I45
VStringLiteral: "error : "
p38287
tp38288
I1
s(Vinsert
p38289
I42
VSimpleName: setParent
p38290
Vinsert
p38291
I42
VSimpleName: setExpr
p38292
tp38293
I4
s(g10966
I42
g10967
Vinsert
p38294
I42
VSimpleName: DataSource
p38295
tp38296
I1
s(g9854
I42
g9855
Vinsert
p38297
I42
VSimpleName: SQLSelectOrderByItem
p38298
tp38299
I1
s(g26531
I42
g26532
Vinsert
p38300
I11
VCastExpression
p38301
tp38302
I5
s(g6516
I42
g6517
Vinsert
p38303
I59
VVariableDeclarationFragment
p38304
tp38305
I2
s(g8080
I42
g8081
Vinsert
p38306
I34
VNumberLiteral: 3
p38307
tp38308
I1
s(Vinsert
p38309
I42
VSimpleName: getHaving
p38310
Vinsert
p38311
I31
VMethodDeclaration
p38312
tp38313
I1
s(g14829
I42
g14830
Vinsert
p38314
I42
VSimpleName: stmtList
p38315
tp38316
I3
s(g17395
I42
g17396
Vinsert
p38317
I42
VSimpleName: setFilters
p38318
tp38319
I2
s(g16927
I42
g16928
Vinsert
p38320
I8
VBlock
p38321
tp38322
I2
s(g1830
I42
g1831
Vinsert
p38323
I42
VSimpleName: pstmt
p38324
tp38325
I2
s(g8129
I42
g8130
Vinsert
p38326
I42
VSimpleName: x
p38327
tp38328
I3
s(g1375
I42
g1376
Vinsert
p38329
I42
VSimpleName: list
p38330
tp38331
I1
s(g46
I42
g47
Vinsert
p38332
I14
VClassInstanceCreation
p38333
tp38334
I14
s(g29398
I42
g29399
Vinsert
p38335
I22
VFieldAccess
p38336
tp38337
I1
s(Vinsert
p38338
I42
VSimpleName: name
p38339
Vinsert
p38340
I42
VSimpleName: indexName
p38341
tp38342
I2
s(g20851
I42
g20852
Vinsert
p38343
I83
VModifier: public
p38344
tp38345
I2
s(g101
I42
g102
Vinsert
p38346
I42
VSimpleName: conn
p38347
tp38348
I2
s(g11182
I42
g11183
Vinsert
p38349
I41
VReturnStatement
p38350
tp38351
I6
s(g19573
I42
g19574
Vinsert
p38352
I42
VSimpleName: sleep
p38353
tp38354
I1
s(g33739
I42
g33740
Vinsert
p38355
I45
VStringLiteral: "oracle"
p38356
tp38357
I1
s(Vinsert
p38358
I42
VSimpleName: endVisit
p38359
Vinsert
p38360
I42
VSimpleName: hierachicalQueryClause
p38361
tp38362
I1
s(g14426
I42
g14427
Vinsert
p38363
I42
VSimpleName: client
p38364
tp38365
I1
s(g15766
I42
g15767
Vinsert
p38366
I42
VSimpleName: conn
p38367
tp38368
I2
s(g15648
I42
g15649
Vinsert
p38369
I43
VSimpleType: SQLStatement
p38370
tp38371
I1
s(g2624
I42
g2625
Vinsert
p38372
I8
VBlock
p38373
tp38374
I4
s(g30252
I42
g30253
Vinsert
p38375
I42
VSimpleName: HttpServer
p38376
tp38377
I4
s(g36357
I42
g36358
Vinsert
p38378
I43
VSimpleType: SQLSelect
p38379
tp38380
I1
s(g1420
I42
g1421
Vinsert
p38381
I42
VSimpleName: SQLUtils
p38382
tp38383
I21
s(Vinsert
p38384
I42
VSimpleName: count
p38385
Vinsert
p38386
I45
VStringLiteral: "select distinct id from t order by id"
p38387
tp38388
I1
s(g21741
I42
g21742
Vinsert
p38389
I43
VSimpleType: MySqlBinaryExpr
p38390
tp38391
I1
s(g36951
I42
g36952
Vinsert
p38392
I42
VSimpleName: x
p38393
tp38394
I10
s(g18214
I42
g18215
Vinsert
p38395
I54
VTryStatement
p38396
tp38397
I18
s(g18224
I42
g18225
Vinsert
p38398
I32
VMethodInvocation
p38399
tp38400
I6
s(g23384
I42
g23385
Vinsert
p38401
I45
VStringLiteral: "false"
p38402
tp38403
I4
s(g33374
I42
g33375
Vinsert
p38404
I45
VStringLiteral: "\u005ctp refcur_pkg.refcur_t\u005cn"
p38405
tp38406
I1
s(g2359
I42
g2360
Vinsert
p38407
I42
VSimpleName: JdbcSqlStat
p38408
tp38409
I1
s(Vinsert
p38410
I42
VSimpleName: getLike
p38411
Vinsert
p38412
I39
VPrimitiveType: boolean
p38413
tp38414
I1
s(g1612
I42
g1613
Vinsert
p38415
I42
VSimpleName: result
p38416
tp38417
I2
s(g12346
I42
g12347
Vinsert
p38418
I42
VSimpleName: Assert
p38419
tp38420
I1
s(g2203
I42
g2204
Vinsert
p38421
I42
VSimpleName: getOnUpdate
p38422
tp38423
I1
s(g7427
I42
g7428
Vinsert
p38424
I42
VSimpleName: ps
p38425
tp38426
I1
s(g15536
I42
g15537
Vinsert
p38427
I42
VSimpleName: PushService
p38428
tp38429
I2
s(Vinsert
p38430
I42
VSimpleName: accept
p38431
Vinsert
p38432
I42
VSimpleName: orderBy
p38433
tp38434
I3
s(g2044
I42
g2045
Vinsert
p38435
I25
VIfStatement
p38436
tp38437
I2
s(g17575
I42
g17576
Vinsert
p38438
I52
VThisExpression
p38439
tp38440
I2
s(g7502
I42
g7503
Vinsert
p38441
I45
VStringLiteral: "_statement_"
p38442
tp38443
I1
s(g2604
I42
g2605
Vinsert
p38444
I43
VSimpleType: String
p38445
tp38446
I2
s(g13868
I42
g13869
Vinsert
p38447
I42
VSimpleName: Assert
p38448
tp38449
I1
s(g3073
I42
g3074
Vinsert
p38450
I25
VIfStatement
p38451
tp38452
I6
s(g9854
I42
g9855
Vinsert
p38453
I60
VVariableDeclarationStatement
p38454
tp38455
I1
s(g14110
I42
g14111
Vinsert
p38456
I32
VMethodInvocation
p38457
tp38458
I2
s(g31649
I42
g31650
Vinsert
p38459
I42
VSimpleName: getStatementStat
p38460
tp38461
I5
s(g3724
I42
g3725
Vinsert
p38462
I45
VStringLiteral: "\u005ctFREELISTS 1\u005cn"
p38463
tp38464
I1
s(g5564
I42
g5565
Vinsert
p38465
I8
VBlock
p38466
tp38467
I1
s(g25157
I42
g25158
Vinsert
p38468
I8
VBlock
p38469
tp38470
I2
s(g33444
I42
g33445
Vinsert
p38471
I42
VSimpleName: item
p38472
tp38473
I1
s(g3447
I42
g3448
Vinsert
p38474
I42
VSimpleName: setProperty
p38475
tp38476
I1
s(g12346
I42
g12347
Vinsert
p38477
I42
VSimpleName: assertNotNull
p38478
tp38479
I1
s(Vinsert
p38480
I42
VSimpleName: get
p38481
Vinsert
p38482
I42
VSimpleName: clobFreeCount
p38483
tp38484
I1
s(Vinsert
p38485
I42
VSimpleName: nextToken
p38486
Vinsert
p38487
I42
VSimpleName: partition
p38488
tp38489
I3
s(g29718
I42
g29719
Vinsert
p38490
I45
VStringLiteral: "\u005cnMAXTRANS 255"
p38491
tp38492
I5
s(g9428
I42
g9429
Vinsert
p38493
I43
VSimpleType: SQLHexExpr
p38494
tp38495
I2
s(g5216
I42
g5217
Vinsert
p38496
I7
VAssignment: =
p38497
tp38498
I2
s(Vinsert
p38499
I42
VSimpleName: currentTimeMillis
p38500
Vinsert
p38501
I42
VSimpleName: connectedTime
p38502
tp38503
I2
s(g15048
I42
g15049
Vinsert
p38504
I32
VMethodInvocation
p38505
tp38506
I4
s(g25298
I42
g25299
Vinsert
p38507
I42
VSimpleName: run
p38508
tp38509
I2
s(Vinsert
p38510
I42
VSimpleName: expr
p38511
Vinsert
p38512
I42
VSimpleName: SQLSomeExpr
p38513
tp38514
I1
s(g4839
I42
g4840
Vinsert
p38515
I42
VSimpleName: SQLBuilderFactory
p38516
tp38517
I1
s(Vinsert
p38518
I42
VSimpleName: accept0
p38519
Vinsert
p38520
I42
VSimpleName: columns
p38521
tp38522
I1
s(g21593
I42
g21594
Vinsert
p38523
I27
VInfixExpression: <
p38524
tp38525
I1
s(g15986
I42
g15987
Vinsert
p38526
I33
VNullLiteral
p38527
tp38528
I7
s(g2910
I42
g2911
Vinsert
p38529
I8
VBlock
p38530
tp38531
I7
s(g12948
I42
g12949
Vinsert
p38532
I42
VSimpleName: wallContext
p38533
tp38534
I2
s(g9652
I42
g9653
Vinsert
p38535
I33
VNullLiteral
p38536
tp38537
I1
s(g32202
I42
g32203
Vinsert
p38538
I45
VStringLiteral: "ORDER BY public.v_poi.geom <-> st_point(?, ?)\u005cn"
p38539
tp38540
I1
s(g21
I42
g22
Vinsert
p38541
I42
VSimpleName: x
p38542
tp38543
I6
s(g12849
I42
g12850
Vinsert
p38544
I25
VIfStatement
p38545
tp38546
I1
s(g2044
I42
g2045
Vinsert
p38547
I8
VBlock
p38548
tp38549
I2
s(g1415
I42
g1416
Vinsert
p38550
I25
VIfStatement
p38551
tp38552
I1
s(g11845
I42
g11846
Vinsert
p38553
I21
VExpressionStatement
p38554
tp38555
I2
s(g24007
I42
g24008
Vinsert
p38556
I27
VInfixExpression: !=
p38557
tp38558
I1
s(g221
I42
g222
Vinsert
p38559
I27
VInfixExpression: +
p38560
tp38561
I21
s(g8682
I42
g8683
Vinsert
p38562
I45
VStringLiteral: "\u005ctFOR EACH ROW\u005cn"
p38563
tp38564
I1
s(g24023
I42
g24024
Vinsert
p38565
I42
VSimpleName: hasAfterComment
p38566
tp38567
I1
s(g21778
I42
g21779
Vinsert
p38568
I8
VBlock
p38569
tp38570
I1
s(g38485
I42
g38486
Vinsert
p38571
I42
VSimpleName: setStorage
p38572
tp38573
I1
s(g21061
I42
g21062
Vinsert
p38574
I14
VClassInstanceCreation
p38575
tp38576
I2
s(g2104
I42
g2105
Vinsert
p38577
I40
VQualifiedName: Token.BY
p38578
tp38579
I1
s(g2870
I42
g2871
Vinsert
p38580
I60
VVariableDeclarationStatement
p38581
tp38582
I3
s(g6288
I42
g6289
Vinsert
p38583
I42
VSimpleName: getProperty
p38584
tp38585
I1
s(g29627
I42
g29628
Vinsert
p38586
I41
VReturnStatement
p38587
tp38588
I1
s(g9595
I42
g9596
Vinsert
p38589
I21
VExpressionStatement
p38590
tp38591
I2
s(g13643
I42
g13644
Vinsert
p38592
I44
VSingleVariableDeclaration
p38593
tp38594
I1
s(g18113
I42
g18114
Vinsert
p38595
I59
VVariableDeclarationFragment
p38596
tp38597
I3
s(g1760
I42
g1761
Vinsert
p38598
I42
VSimpleName: inited
p38599
tp38600
I1
s(g32188
I42
g32189
Vinsert
p38601
I83
VModifier: public
p38602
tp38603
I2
s(g2099
I42
g2100
Vinsert
p38604
I27
VInfixExpression: ==
p38605
tp38606
I1
s(g1745
I42
g1746
Vinsert
p38607
I32
VMethodInvocation
p38608
tp38609
I4
s(g31505
I42
g31506
Vinsert
p38610
I33
VNullLiteral
p38611
tp38612
I1
s(g13559
I42
g13560
Vinsert
p38613
I42
VSimpleName: parameters
p38614
tp38615
I7
s(g10320
I42
g10321
Vinsert
p38616
I45
VStringLiteral: "META-INF/druid-filter-wall-permit-object-mysql.txt"
p38617
tp38618
I1
s(g6707
I42
g6708
Vinsert
p38619
I42
VSimpleName: buf
p38620
tp38621
I1
s(g126
I42
g127
Vinsert
p38622
I42
VSimpleName: resource
p38623
tp38624
I1
s(Vinsert
p38625
I42
VSimpleName: expr
p38626
Vinsert
p38627
I42
VSimpleName: typeExpr
p38628
tp38629
I1
s(g17379
I42
g17380
Vinsert
p38630
I21
VExpressionStatement
p38631
tp38632
I1
s(g21424
I42
g21425
Vinsert
p38633
I42
VSimpleName: x
p38634
tp38635
I1
s(Vinsert
p38636
I42
VSimpleName: name
p38637
Vinsert
p38638
I42
VSimpleName: setDatabase
p38639
tp38640
I2
s(g14290
I42
g14291
Vinsert
p38641
I42
VSimpleName: createSqlStatId
p38642
tp38643
I1
s(g28785
I42
g28786
Vinsert
p38644
I45
VStringLiteral: "\u005cn\u005ctINTO @MyTableVar"
p38645
tp38646
I2
s(Vinsert
p38647
I42
VSimpleName: substring
p38648
Vinsert
p38649
I42
VSimpleName: strValue
p38650
tp38651
I1
s(g29440
I42
g29441
Vinsert
p38652
I42
VSimpleName: type
p38653
tp38654
I2
s(g27234
I42
g27235
Vinsert
p38655
I32
VMethodInvocation
p38656
tp38657
I4
s(g19307
I42
g19308
Vinsert
p38658
I45
VStringLiteral: " ignore delete triggers"
p38659
tp38660
I1
s(Vinsert
p38661
I42
VSimpleName: token
p38662
Vinsert
p38663
I45
VStringLiteral: "SPATIAL"
p38664
tp38665
I1
s(g2842
I42
g2843
Vinsert
p38666
I43
VSimpleType: SQLExprTableSource
p38667
tp38668
I1
s(g6597
I42
g6598
Vinsert
p38669
I42
VSimpleName: dir
p38670
tp38671
I1
s(Vinsert
p38672
I42
VSimpleName: assertEquals
p38673
Vinsert
p38674
I42
VSimpleName: test_http_config
p38675
tp38676
I1
s(g13152
I42
g13153
Vinsert
p38677
I42
VSimpleName: String
p38678
tp38679
I2
s(g1496
I42
g1497
Vinsert
p38680
I59
VVariableDeclarationFragment
p38681
tp38682
I9
s(g11307
I42
g11308
Vinsert
p38683
I42
VSimpleName: ArrayList
p38684
tp38685
I1
s(g26901
I42
g26902
Vinsert
p38686
I32
VMethodInvocation
p38687
tp38688
I5
s(g3223
I42
g3224
Vinsert
p38689
I32
VMethodInvocation
p38690
tp38691
I3
s(g7728
I42
g7729
Vinsert
p38692
I45
VStringLiteral: "\u005cnPARTITION BY RANGE (credit_limit) INTERVAL 1000"
p38693
tp38694
I2
s(g806
I42
g807
Vinsert
p38695
I43
VSimpleType: Entity
p38696
tp38697
I2
s(g22020
I42
g22021
Vinsert
p38698
I42
VSimpleName: checker
p38699
tp38700
I1
s(g14697
I42
g14698
Vinsert
p38701
I42
VSimpleName: contains
p38702
tp38703
I1
s(g12985
I42
g12986
Vinsert
p38704
I8
VBlock
p38705
tp38706
I2
s(g81
I42
g82
Vinsert
p38707
I62
VInstanceofExpression
p38708
tp38709
I1
s(g7512
I42
g7513
Vinsert
p38710
I8
VBlock
p38711
tp38712
I2
s(g9854
I42
g9855
Vinsert
p38713
I43
VSimpleType: List
p38714
tp38715
I1
s(g14212
I42
g14213
Vinsert
p38716
I11
VCastExpression
p38717
tp38718
I1
s(g18224
I42
g18225
Vinsert
p38719
I42
VSimpleName: exceptionClass
p38720
tp38721
I1
s(g32782
I42
g32783
Vinsert
p38722
I41
VReturnStatement
p38723
tp38724
I2
s(g24686
I42
g24687
Vinsert
p38725
I22
VFieldAccess
p38726
tp38727
I1
s(g10550
I42
g10551
Vinsert
p38728
I42
VSimpleName: parameters
p38729
tp38730
I3
s(g141
I42
g142
Vinsert
p38731
I42
VSimpleName: SQLExpr
p38732
tp38733
I10
s(g386
I42
g387
Vinsert
p38734
I74
VParameterizedType: HashMap<String,Object>
p38735
tp38736
I1
s(g4765
I42
g4766
Vinsert
p38737
I42
VSimpleName: quoteMode
p38738
tp38739
I1
s(g13868
I42
g13869
Vinsert
p38740
I21
VExpressionStatement
p38741
tp38742
I2
s(g7477
I42
g7478
Vinsert
p38743
I32
VMethodInvocation
p38744
tp38745
I1
s(g18065
I42
g18066
Vinsert
p38746
I42
VSimpleName: physicalNames
p38747
tp38748
I1
s(g29858
I42
g29859
Vinsert
p38749
I43
VSimpleType: WallTableStat
p38750
tp38751
I2
s(g1425
I42
g1426
Vinsert
p38752
I31
VMethodDeclaration
p38753
tp38754
I1
s(g4543
I42
g4544
Vinsert
p38755
I42
VSimpleName: hash
p38756
tp38757
I4
s(g2895
I42
g2896
Vinsert
p38758
I27
VInfixExpression: ==
p38759
tp38760
I1
s(g23433
I42
g23434
Vinsert
p38761
I43
VSimpleType: SQLSelectOrderByItem
p38762
tp38763
I6
s(Vinsert
p38764
I42
VSimpleName: nextToken
p38765
Vinsert
p38766
I42
VSimpleName: insertStatement
p38767
tp38768
I1
s(g871
I42
g872
Vinsert
p38769
I14
VClassInstanceCreation
p38770
tp38771
I1
s(Vinsert
p38772
I42
VSimpleName: assertTrue
p38773
Vinsert
p38774
I42
VSimpleName: MySqlWallTest34
p38775
tp38776
I1
s(Vinsert
p38777
I42
VSimpleName: clone
p38778
Vinsert
p38779
I42
VSimpleName: returningStatement
p38780
tp38781
I2
s(g4834
I42
g4835
Vinsert
p38782
I42
VSimpleName: Test
p38783
tp38784
I1
s(g2319
I42
g2320
Vinsert
p38785
I2
VArrayAccess
p38786
tp38787
I2
s(Vinsert
p38788
I42
VSimpleName: getRelationships
p38789
Vinsert
p38790
I42
VSimpleName: Assert
p38791
tp38792
I1
s(g5007
I42
g5008
Vinsert
p38793
I83
VModifier: private
p38794
tp38795
I1
s(g5864
I42
g5865
Vinsert
p38796
I32
VMethodInvocation
p38797
tp38798
I5
s(g4780
I42
g4781
Vinsert
p38799
I42
VSimpleName: e
p38800
tp38801
I2
s(g24247
I42
g24248
Vinsert
p38802
I42
VSimpleName: String
p38803
tp38804
I2
s(g6172
I42
g6173
Vinsert
p38805
I44
VSingleVariableDeclaration
p38806
tp38807
I1
s(g10532
I42
g10533
Vinsert
p38808
I42
VSimpleName: Violation
p38809
tp38810
I1
s(g81
I42
g82
Vinsert
p38811
I42
VSimpleName: SQLBinaryOpExpr
p38812
tp38813
I3
s(g15048
I42
g15049
Vinsert
p38814
I43
VSimpleType: ColumnMetaData
p38815
tp38816
I4
s(Vinsert
p38817
I42
VSimpleName: visit
p38818
Vinsert
p38819
I42
VSimpleName: pgVisitor
p38820
tp38821
I2
s(Vinsert
p38822
I42
VSimpleName: accept
p38823
Vinsert
p38824
I42
VSimpleName: parseStatement
p38825
tp38826
I1
s(g9696
I42
g9697
Vinsert
p38827
I11
VCastExpression
p38828
tp38829
I2
s(g2647
I42
g2648
Vinsert
p38830
I42
VSimpleName: text
p38831
tp38832
I1
s(g10398
I42
g10399
Vinsert
p38833
I27
VInfixExpression: ==
p38834
tp38835
I1
s(Vinsert
p38836
I42
VSimpleName: assertEquals
p38837
Vinsert
p38838
I42
VSimpleName: filter
p38839
tp38840
I5
s(g21686
I42
g21687
Vinsert
p38841
I27
VInfixExpression: &&
p38842
tp38843
I1
s(g13881
I42
g13882
Vinsert
p38844
I39
VPrimitiveType: boolean
p38845
tp38846
I1
s(g18899
I42
g18900
Vinsert
p38847
I7
VAssignment: +=
p38848
tp38849
I1
s(Vinsert
p38850
I42
VSimpleName: addAndGet
p38851
Vinsert
p38852
I42
VSimpleName: resultSetIdSeed
p38853
tp38854
I1
s(g19573
I42
g19574
Vinsert
p38855
I42
VSimpleName: getPoolingCount
p38856
tp38857
I1
s(g126
I42
g127
Vinsert
p38858
I21
VExpressionStatement
p38859
tp38860
I1
s(g22616
I42
g22617
Vinsert
p38861
I42
VSimpleName: itemStmt
p38862
tp38863
I1
s(g1007
I42
g1008
Vinsert
p38864
I21
VExpressionStatement
p38865
tp38866
I1
s(g5495
I42
g5496
Vinsert
p38867
I42
VSimpleName: connectErrorCount
p38868
tp38869
I2
s(g35913
I42
g35914
Vinsert
p38870
I33
VNullLiteral
p38871
tp38872
I3
s(g26080
I42
g26081
Vinsert
p38873
I44
VSingleVariableDeclaration
p38874
tp38875
I1
s(g5475
I42
g5476
Vinsert
p38876
I42
VSimpleName: webAppStat
p38877
tp38878
I1
s(g11940
I42
g11941
Vinsert
p38879
I42
VSimpleName: event
p38880
tp38881
I1
s(Vinsert
p38882
I42
VSimpleName: nextToken
p38883
Vinsert
p38884
I42
VSimpleName: SQLPropertyExpr
p38885
tp38886
I1
s(g7224
I42
g7225
Vinsert
p38887
I45
VStringLiteral: "nchar"
p38888
tp38889
I1
s(g11325
I42
g11326
Vinsert
p38890
I8
VBlock
p38891
tp38892
I1
s(g14985
I42
g14986
Vinsert
p38893
I42
VSimpleName: isUseLocalSessionState
p38894
tp38895
I1
s(g1105
I42
g1106
Vinsert
p38896
I42
VSimpleName: dataSource
p38897
tp38898
I3
s(Vinsert
p38899
I42
VSimpleName: equals
p38900
Vinsert
p38901
I42
VSimpleName: LogFactory
p38902
tp38903
I1
s(g24923
I42
g24924
Vinsert
p38904
I59
VVariableDeclarationFragment
p38905
tp38906
I2
s(g9919
I42
g9920
Vinsert
p38907
I22
VFieldAccess
p38908
tp38909
I3
s(Vinsert
p38910
I42
VSimpleName: visit
p38911
Vinsert
p38912
I42
VSimpleName: columnName
p38913
tp38914
I1
s(g9410
I42
g9411
Vinsert
p38915
I42
VSimpleName: test_0
p38916
tp38917
I1
s(g31203
I42
g31204
Vinsert
p38918
I42
VSimpleName: getErrorLastTime
p38919
tp38920
I1
s(g6684
I42
g6685
Vinsert
p38921
I59
VVariableDeclarationFragment
p38922
tp38923
I7
s(g23867
I42
g23868
Vinsert
p38924
I42
VSimpleName: SQLName
p38925
tp38926
I11
s(g6046
I42
g6047
Vinsert
p38927
I24
VForStatement
p38928
tp38929
I1
s(Vinsert
p38930
I42
VSimpleName: incrementAndGet
p38931
Vinsert
p38932
I42
VSimpleName: cachedPreparedStatementCount
p38933
tp38934
I2
s(g16778
I42
g16779
Vinsert
p38935
I8
VBlock
p38936
tp38937
I2
s(g13331
I42
g13332
Vinsert
p38938
I8
VBlock
p38939
tp38940
I1
s(g5002
I42
g5003
Vinsert
p38941
I44
VSingleVariableDeclaration
p38942
tp38943
I1
s(g4563
I42
g4564
Vinsert
p38944
I42
VSimpleName: parseStatementList
p38945
tp38946
I1
s(g9190
I42
g9191
Vinsert
p38947
I43
VSimpleType: List
p38948
tp38949
I1
s(g1642
I42
g1643
Vinsert
p38950
I45
VStringLiteral: "time-between-eviction-runs-millis=10000"
p38951
tp38952
I1
s(g13326
I42
g13327
Vinsert
p38953
I32
VMethodInvocation
p38954
tp38955
I49
s(Vinsert
p38956
I42
VSimpleName: getOperator
p38957
Vinsert
p38958
I42
VSimpleName: SQLExpr
p38959
tp38960
I1
s(g17983
I42
g17984
Vinsert
p38961
I45
VStringLiteral: "encoding"
p38962
tp38963
I1
s(g4362
I42
g4363
Vinsert
p38964
I42
VSimpleName: WallSqlFunctionStat
p38965
tp38966
I1
s(g37907
I42
g37908
Vinsert
p38967
I40
VQualifiedName: lexer.text
p38968
tp38969
I2
s(g23210
I42
g23211
Vinsert
p38970
I45
VStringLiteral: "\u005cn AS (tfs, control_word, ocr_word, control_type, cates)"
p38971
tp38972
I1
s(g2428
I42
g2429
Vinsert
p38973
I45
VStringLiteral: "syntax error, expect DELETE or UPDATE, actual "
p38974
tp38975
I1
s(g3144
I42
g3145
Vinsert
p38976
I42
VSimpleName: x
p38977
tp38978
I4
s(g35034
I42
g35035
Vinsert
p38979
I42
VSimpleName: getException
p38980
tp38981
I1
s(Vinsert
p38982
I42
VSimpleName: assertTrue
p38983
Vinsert
p38984
I42
VSimpleName: SQLServerWallTest_2
p38985
tp38986
I1
s(g6343
I42
g6344
Vinsert
p38987
I42
VSimpleName: WallConfig
p38988
tp38989
I4
s(g4273
I42
g4274
Vinsert
p38990
I27
VInfixExpression: ==
p38991
tp38992
I7
s(g17133
I42
g17134
Vinsert
p38993
I38
VPrefixExpression: ++
p38994
tp38995
I1
s(g4579
I42
g4580
Vinsert
p38996
I8
VBlock
p38997
tp38998
I3
s(g24462
I42
g24463
Vinsert
p38999
I14
VClassInstanceCreation
p39000
tp39001
I2
s(g4170
I42
g4171
Vinsert
p39002
I59
VVariableDeclarationFragment
p39003
tp39004
I2
s(g25458
I42
g25459
Vinsert
p39005
I43
VSimpleType: HiveSchemaStatVisitor
p39006
tp39007
I14
s(g35083
I42
g35084
Vinsert
p39008
I42
VSimpleName: clause
p39009
tp39010
I7
s(g19369
I42
g19370
Vinsert
p39011
I45
VStringLiteral: " nosort"
p39012
tp39013
I1
s(g16980
I42
g16981
Vinsert
p39014
I41
VReturnStatement
p39015
tp39016
I3
s(g38956
I42
g38957
Vinsert
p39017
I42
VSimpleName: leftEvalExpr
p39018
tp39019
I1
s(g6511
I42
g6512
Vinsert
p39020
I42
VSimpleName: SQLBinaryOpExpr
p39021
tp39022
I8
s(g22177
I42
g22178
Vinsert
p39023
I74
VParameterizedType: HashSet<String>
p39024
tp39025
I1
s(g32572
I42
g32573
Vinsert
p39026
I34
VNumberLiteral: 0
p39027
tp39028
I9
s(g15334
I42
g15335
Vinsert
p39029
I43
VSimpleType: SQLUnionQuery
p39030
tp39031
I1
s(g7620
I42
g7621
Vinsert
p39032
I42
VSimpleName: printExpr
p39033
tp39034
I1
s(g5424
I42
g5425
Vinsert
p39035
I42
VSimpleName: DB2WallProvider
p39036
tp39037
I2
s(g1241
I42
g1242
Vinsert
p39038
I59
VVariableDeclarationFragment
p39039
tp39040
I1
s(g37973
I42
g37974
Vinsert
p39041
I59
VVariableDeclarationFragment
p39042
tp39043
I54
s(g18453
I42
g18454
Vinsert
p39044
I42
VSimpleName: Assert
p39045
tp39046
I7
s(g13981
I42
g13982
Vinsert
p39047
I42
VSimpleName: input
p39048
tp39049
I2
s(g24987
I42
g24988
Vinsert
p39050
I42
VSimpleName: targetList
p39051
tp39052
I1
s(Vinsert
p39053
I42
VSimpleName: getConnection
p39054
Vinsert
p39055
I42
VSimpleName: conn_5
p39056
tp39057
I1
s(g10897
I42
g10898
Vinsert
p39058
I42
VSimpleName: resultSetTrace
p39059
tp39060
I6
s(g25740
I42
g25741
Vinsert
p39061
I42
VSimpleName: SQLBetweenExpr
p39062
tp39063
I1
s(g15536
I42
g15537
Vinsert
p39064
I42
VSimpleName: pushService
p39065
tp39066
I1
s(g11182
I42
g11183
Vinsert
p39067
I43
VSimpleType: WallSqlStat
p39068
tp39069
I1
s(Vinsert
p39070
I42
VSimpleName: put
p39071
Vinsert
p39072
I42
VSimpleName: aggregate
p39073
tp39074
I4
s(Vinsert
p39075
I42
VSimpleName: names
p39076
Vinsert
p39077
I42
VSimpleName: fk
p39078
tp39079
I1
s(g26854
I42
g26855
Vinsert
p39080
I40
VQualifiedName: x.not
p39081
tp39082
I1
s(g13042
I42
g13043
Vinsert
p39083
I42
VSimpleName: isLogical
p39084
tp39085
I1
s(g14039
I42
g14040
Vinsert
p39086
I33
VNullLiteral
p39087
tp39088
I4
s(g32833
I42
g32834
Vinsert
p39089
I21
VExpressionStatement
p39090
tp39091
I2
s(g11
I42
g12
Vinsert
p39092
I45
VStringLiteral: "test2\u005cn"
p39093
tp39094
I1
s(g14951
I42
g14952
Vinsert
p39095
I44
VSingleVariableDeclaration
p39096
tp39097
I32
s(g13379
I42
g13380
Vinsert
p39098
I42
VSimpleName: OracleCreateSequenceStatement
p39099
tp39100
I2
s(g35793
I42
g35794
Vinsert
p39101
I45
VStringLiteral: "insert overwrite table sale_detail_multi partition (sale_date='2010', region='china' )\u005cn"
p39102
tp39103
I1
s(g4992
I42
g4993
Vinsert
p39104
I39
VPrimitiveType: int
p39105
tp39106
I1
s(g1236
I42
g1237
Vinsert
p39107
I42
VSimpleName: holder
p39108
tp39109
I2
s(g21913
I42
g21914
Vinsert
p39110
I42
VSimpleName: number
p39111
tp39112
I1
s(g11325
I42
g11326
Vinsert
p39113
I31
VMethodDeclaration
p39114
tp39115
I1
s(g3949
I42
g3950
Vinsert
p39116
I59
VVariableDeclarationFragment
p39117
tp39118
I2
s(Vinsert
p39119
I42
VSimpleName: getType
p39120
Vinsert
p39121
I42
VSimpleName: getExpr
p39122
tp39123
I1
s(g9182
I42
g9183
Vinsert
p39124
I42
VSimpleName: exprParser
p39125
tp39126
I1
s(g316
I42
g317
Vinsert
p39127
I43
VSimpleType: Iterator
p39128
tp39129
I1
s(g17240
I42
g17241
Vinsert
p39130
I27
VInfixExpression: !=
p39131
tp39132
I2
s(g7002
I42
g7003
Vinsert
p39133
I43
VSimpleType: Connection
p39134
tp39135
I2
s(g23031
I42
g23032
Vinsert
p39136
I34
VNumberLiteral: 0
p39137
tp39138
I1
s(g20559
I42
g20560
Vinsert
p39139
I39
VPrimitiveType: int
p39140
tp39141
I1
s(g11051
I42
g11052
Vinsert
p39142
I33
VNullLiteral
p39143
tp39144
I1
s(g3898
I42
g3899
Vinsert
p39145
I14
VClassInstanceCreation
p39146
tp39147
I2
s(g5887
I42
g5888
Vinsert
p39148
I42
VSimpleName: lexer
p39149
tp39150
I2
s(Vinsert
p39151
I42
VSimpleName: acceptChild
p39152
Vinsert
p39153
I42
VSimpleName: name
p39154
tp39155
I2
s(g1198
I42
g1199
Vinsert
p39156
I40
VQualifiedName: JdbcConstants.ORACLE
p39157
tp39158
I3
s(Vinsert
p39159
I42
VSimpleName: stringVal
p39160
Vinsert
p39161
I42
VSimpleName: item
p39162
tp39163
I1
s(g11890
I42
g11891
Vinsert
p39164
I42
VSimpleName: name
p39165
tp39166
I1
s(g23392
I42
g23393
Vinsert
p39167
I43
VSimpleType: IdentityHashMap
p39168
tp39169
I1
s(g22937
I42
g22938
Vinsert
p39170
I45
VStringLiteral: "  KEY `k_d` (`c_char`,`c_bigint`)\u005cn"
p39171
tp39172
I1
s(g14044
I42
g14045
Vinsert
p39173
I45
VStringLiteral: "\u005ctcredit\u005cn"
p39174
tp39175
I1
s(g19810
I42
g19811
Vinsert
p39176
I8
VBlock
p39177
tp39178
I1
s(g32628
I42
g32629
Vinsert
p39179
I42
VSimpleName: NullsLast
p39180
tp39181
I1
s(g36594
I42
g36595
Vinsert
p39182
I45
VStringLiteral: "USING"
p39183
tp39184
I4
s(g28817
I42
g28818
Vinsert
p39185
I45
VStringLiteral: "\u005cnFROM tnhash PARTITION (p0)"
p39186
tp39187
I1
s(g517
I42
g518
Vinsert
p39188
I42
VSimpleName: value
p39189
tp39190
I2
s(g9786
I42
g9787
Vinsert
p39191
I43
VSimpleType: SQLDeclareItem
p39192
tp39193
I2
s(g9569
I42
g9570
Vinsert
p39194
I42
VSimpleName: conn
p39195
tp39196
I1
s(g12427
I42
g12428
Vinsert
p39197
I26
VImportDeclaration
p39198
tp39199
I1
s(g18815
I42
g18816
Vinsert
p39200
I42
VSimpleName: String
p39201
tp39202
I17
s(g6529
I42
g6530
Vinsert
p39203
I44
VSingleVariableDeclaration
p39204
tp39205
I1
s(g21284
I42
g21285
Vinsert
p39206
I43
VSimpleType: MyClassLoader
p39207
tp39208
I2
s(g15043
I42
g15044
Vinsert
p39209
I42
VSimpleName: getEventFiredCount
p39210
tp39211
I1
s(g18871
I42
g18872
Vinsert
p39212
I60
VVariableDeclarationStatement
p39213
tp39214
I1
s(g6041
I42
g6042
Vinsert
p39215
I42
VSimpleName: setUp
p39216
tp39217
I5
s(g13677
I42
g13678
Vinsert
p39218
I25
VIfStatement
p39219
tp39220
I1
s(g861
I42
g862
Vinsert
p39221
I42
VSimpleName: union
p39222
tp39223
I2
s(g2268
I42
g2269
Vinsert
p39224
I21
VExpressionStatement
p39225
tp39226
I6
s(g4538
I42
g4539
Vinsert
p39227
I59
VVariableDeclarationFragment
p39228
tp39229
I39
s(g3826
I42
g3827
Vinsert
p39230
I42
VSimpleName: getWebAppsPath
p39231
tp39232
I1
s(g1685
I42
g1686
Vinsert
p39233
I42
VSimpleName: decrementAndGet
p39234
tp39235
I1
s(g9652
I42
g9653
Vinsert
p39236
I45
VStringLiteral: "/*"
p39237
tp39238
I1
s(g4080
I42
g4081
Vinsert
p39239
I42
VSimpleName: bytes
p39240
tp39241
I1
s(g25074
I42
g25075
Vinsert
p39242
I42
VSimpleName: propertyExpr
p39243
tp39244
I1
s(g25683
I42
g25684
Vinsert
p39245
I14
VClassInstanceCreation
p39246
tp39247
I10
s(Vinsert
p39248
I42
VSimpleName: toCharArray
p39249
Vinsert
p39250
I42
VSimpleName: np
p39251
tp39252
I3
s(g29300
I42
g29301
Vinsert
p39253
I40
VQualifiedName: com.alibaba.druid.sql.ast.SQLOrderBy
p39254
tp39255
I1
s(g13659
I42
g13660
Vinsert
p39256
I60
VVariableDeclarationStatement
p39257
tp39258
I9
s(g7073
I42
g7074
Vinsert
p39259
I34
VNumberLiteral: 14
p39260
tp39261
I1
s(g10257
I42
g10258
Vinsert
p39262
I42
VSimpleName: ResultSet
p39263
tp39264
I12
s(g5974
I42
g5975
Vinsert
p39265
I14
VClassInstanceCreation
p39266
tp39267
I1
s(g19841
I42
g19842
Vinsert
p39268
I42
VSimpleName: clearProperty
p39269
tp39270
I1
s(g9944
I42
g9945
Vinsert
p39271
I45
VStringLiteral: "\u005ctlast_name, \u005cn"
p39272
tp39273
I1
s(g32782
I42
g32783
Vinsert
p39274
I8
VBlock
p39275
tp39276
I2
s(g572
I42
g573
Vinsert
p39277
I43
VSimpleType: SQLCreateTableStatement
p39278
tp39279
I4
s(Vinsert
p39280
I42
VSimpleName: stringVal
p39281
Vinsert
p39282
I42
VSimpleName: setType
p39283
tp39284
I1
s(g8583
I42
g8584
Vinsert
p39285
I9
VBooleanLiteral: false
p39286
tp39287
I1
s(g17550
I42
g17551
Vinsert
p39288
I34
VNumberLiteral: 103
p39289
tp39290
I1
s(g19391
I42
g19392
Vinsert
p39291
I42
VSimpleName: violation
p39292
tp39293
I1
s(g3931
I42
g3932
Vinsert
p39294
I42
VSimpleName: option
p39295
tp39296
I10
s(g1304
I42
g1305
Vinsert
p39297
I42
VSimpleName: label
p39298
tp39299
I1
s(g25594
I42
g25595
Vinsert
p39300
I42
VSimpleName: ExportParameterVisitorUtils
p39301
tp39302
I2
s(g4755
I42
g4756
Vinsert
p39303
I42
VSimpleName: count
p39304
tp39305
I1
s(g3793
I42
g3794
Vinsert
p39306
I42
VSimpleName: List
p39307
tp39308
I1
s(g758
I42
g759
Vinsert
p39309
I39
VPrimitiveType: boolean
p39310
tp39311
I3
s(g3826
I42
g3827
Vinsert
p39312
I42
VSimpleName: url
p39313
tp39314
I3
s(g10095
I42
g10096
Vinsert
p39315
I42
VSimpleName: getViolationCount
p39316
tp39317
I1
s(Vinsert
p39318
I42
VSimpleName: setParent
p39319
Vinsert
p39320
I43
VSimpleType: SQLIdentifierExpr
p39321
tp39322
I2
s(g10082
I42
g10083
Vinsert
p39323
I31
VMethodDeclaration
p39324
tp39325
I1
s(g14226
I42
g14227
Vinsert
p39326
I42
VSimpleName: print0
p39327
tp39328
I1
s(g4160
I42
g4161
Vinsert
p39329
I83
VModifier: public
p39330
tp39331
I1
s(g14749
I42
g14750
Vinsert
p39332
I45
VStringLiteral: "apply_carriage_fee"
p39333
tp39334
I1
s(g24023
I42
g24024
Vinsert
p39335
I34
VNumberLiteral: 1
p39336
tp39337
I1
s(g13061
I42
g13062
Vinsert
p39338
I45
VStringLiteral: "\u005ctAND `buyer_resource`.`END_TIME` >= ?\u005cn"
p39339
tp39340
I1
s(g5699
I42
g5700
Vinsert
p39341
I42
VSimpleName: caseStmt
p39342
tp39343
I1
s(g3926
I42
g3927
Vinsert
p39344
I33
VNullLiteral
p39345
tp39346
I2
s(g1675
I42
g1676
Vinsert
p39347
I59
VVariableDeclarationFragment
p39348
tp39349
I1
s(g8603
I42
g8604
Vinsert
p39350
I42
VSimpleName: config
p39351
tp39352
I10
s(g12518
I42
g12519
Vinsert
p39353
I2
VArrayAccess
p39354
tp39355
I1
s(Vinsert
p39356
I42
VSimpleName: getProperty
p39357
Vinsert
p39358
I83
VModifier: public
p39359
tp39360
I1
s(g17311
I42
g17312
Vinsert
p39361
I42
VSimpleName: maxPoolSize
p39362
tp39363
I1
s(g2543
I42
g2544
Vinsert
p39364
I27
VInfixExpression: !=
p39365
tp39366
I1
s(g19924
I42
g19925
Vinsert
p39367
I42
VSimpleName: test_0
p39368
tp39369
I1
s(g8687
I42
g8688
Vinsert
p39370
I83
VModifier: final
p39371
tp39372
I1
s(g2702
I42
g2703
Vinsert
p39373
I45
VStringLiteral: "IN DATABASE "
p39374
tp39375
I1
s(g14622
I42
g14623
Vinsert
p39376
I42
VSimpleName: histogram_1000000_more_Updater
p39377
tp39378
I1
s(g5704
I42
g5705
Vinsert
p39379
I42
VSimpleName: query
p39380
tp39381
I6
s(g37470
I42
g37471
Vinsert
p39382
I42
VSimpleName: stats
p39383
tp39384
I1
s(g23828
I42
g23829
Vinsert
p39385
I39
VPrimitiveType: long
p39386
tp39387
I3
s(g4946
I42
g4947
Vinsert
p39388
I42
VSimpleName: SQLBinaryOpExpr
p39389
tp39390
I7
s(g5926
I42
g5927
Vinsert
p39391
I40
VQualifiedName: NodeType.DataSource
p39392
tp39393
I1
s(g13326
I42
g13327
Vinsert
p39394
I42
VSimpleName: stmt
p39395
tp39396
I4
s(g8438
I42
g8439
Vinsert
p39397
I43
VSimpleType: List
p39398
tp39399
I1
s(Vinsert
p39400
I42
VSimpleName: visit
p39401
Vinsert
p39402
I42
VSimpleName: from
p39403
tp39404
I3
s(g12786
I42
g12787
Vinsert
p39405
I43
VSimpleType: SQLExpr
p39406
tp39407
I1
s(g22083
I42
g22084
Vinsert
p39408
I14
VClassInstanceCreation
p39409
tp39410
I5
s(g657
I42
g658
Vinsert
p39411
I39
VPrimitiveType: int
p39412
tp39413
I1
s(g5954
I42
g5955
Vinsert
p39414
I42
VSimpleName: MappingVisitorUtils
p39415
tp39416
I6
s(Vinsert
p39417
I42
VSimpleName: assertEquals
p39418
Vinsert
p39419
I45
VStringLiteral: "? between 1 and 3"
p39420
tp39421
I1
s(g5338
I42
g5339
Vinsert
p39422
I42
VSimpleName: selectQuery
p39423
tp39424
I2
s(g29212
I42
g29213
Vinsert
p39425
I45
VStringLiteral: "\u005cn\u005ctdirectory_position NUMERIC,"
p39426
tp39427
I1
s(g1700
I42
g1701
Vinsert
p39428
I8
VBlock
p39429
tp39430
I1
s(g276
I42
g277
Vinsert
p39431
I45
VStringLiteral: "\u005cn\u005ct\u005ctUNION ALL"
p39432
tp39433
I1
s(g16153
I42
g16154
Vinsert
p39434
I42
VSimpleName: left
p39435
tp39436
I3
s(g24159
I42
g24160
Vinsert
p39437
I43
VSimpleType: IllegalArgumentException
p39438
tp39439
I1
s(g1226
I42
g1227
Vinsert
p39440
I40
VQualifiedName: Token.CLOSE
p39441
tp39442
I1
s(g20411
I42
g20412
Vinsert
p39443
I8
VBlock
p39444
tp39445
I1
s(g30418
I42
g30419
Vinsert
p39446
I42
VSimpleName: getMaxCatalogNameLength
p39447
tp39448
I1
s(g786
I42
g787
Vinsert
p39449
I8
VBlock
p39450
tp39451
I2
s(Vinsert
p39452
I42
VSimpleName: accept
p39453
Vinsert
p39454
I42
VSimpleName: OracleOutputVisitor
p39455
tp39456
I5
s(g13298
I42
g13299
Vinsert
p39457
I45
VStringLiteral: "\u005ct\u005ct"
p39458
tp39459
I1
s(g4765
I42
g4766
Vinsert
p39460
I42
VSimpleName: offsetCache
p39461
tp39462
I1
s(g23271
I42
g23272
Vinsert
p39463
I42
VSimpleName: quote
p39464
tp39465
I4
s(g11790
I42
g11791
Vinsert
p39466
I8
VBlock
p39467
tp39468
I1
s(g7965
I42
g7966
Vinsert
p39469
I74
VParameterizedType: List<Object>
p39470
tp39471
I1
s(g26553
I42
g26554
Vinsert
p39472
I8
VBlock
p39473
tp39474
I1
s(g18749
I42
g18750
Vinsert
p39475
I21
VExpressionStatement
p39476
tp39477
I9
s(g27355
I42
g27356
Vinsert
p39478
I42
VSimpleName: Collections
p39479
tp39480
I3
s(g19018
I42
g19019
Vinsert
p39481
I42
VSimpleName: UnsupportedOperationException
p39482
tp39483
I4
s(g13228
I42
g13229
Vinsert
p39484
I43
VSimpleType: StringBuffer
p39485
tp39486
I2
s(g18863
I42
g18864
Vinsert
p39487
I45
VStringLiteral: ",   host.creator_id as creatorId"
p39488
tp39489
I1
s(g18496
I42
g18497
Vinsert
p39490
I44
VSingleVariableDeclaration
p39491
tp39492
I1
s(g14933
I42
g14934
Vinsert
p39493
I42
VSimpleName: accept0
p39494
tp39495
I1
s(g6134
I42
g6135
Vinsert
p39496
I8
VBlock
p39497
tp39498
I11
s(g8233
I42
g8234
Vinsert
p39499
I8
VBlock
p39500
tp39501
I1
s(g13868
I42
g13869
Vinsert
p39502
I42
VSimpleName: sqlList
p39503
tp39504
I1
s(g17030
I42
g17031
Vinsert
p39505
I42
VSimpleName: owner
p39506
tp39507
I2
s(g449
I42
g450
Vinsert
p39508
I42
VSimpleName: executeQuery
p39509
tp39510
I1
s(g3631
I42
g3632
Vinsert
p39511
I42
VSimpleName: filter
p39512
tp39513
I1
s(g7720
I42
g7721
Vinsert
p39514
I83
VModifier: public
p39515
tp39516
I3
s(g20764
I42
g20765
Vinsert
p39517
I43
VSimpleType: HiveASTVisitor
p39518
tp39519
I2
s(g16630
I42
g16631
Vinsert
p39520
I42
VSimpleName: filter
p39521
tp39522
I2
s(g35083
I42
g35084
Vinsert
p39523
I42
VSimpleName: lexer
p39524
tp39525
I189
s(g46
I42
g47
Vinsert
p39526
I59
VVariableDeclarationFragment
p39527
tp39528
I12
s(g301
I42
g302
Vinsert
p39529
I45
VStringLiteral: "   and rownum < 1000"
p39530
tp39531
I1
s(g2289
I42
g2290
Vinsert
p39532
I3
VArrayCreation
p39533
tp39534
I1
s(g26747
I42
g26748
Vinsert
p39535
I43
VSimpleType: SQLLimit
p39536
tp39537
I1
s(g17564
I42
g17565
Vinsert
p39538
I52
VThisExpression
p39539
tp39540
I4
s(g11808
I42
g11809
Vinsert
p39541
I42
VSimpleName: acceptIdentifier
p39542
tp39543
I2
s(g32782
I42
g32783
Vinsert
p39544
I42
VSimpleName: toBytes
p39545
tp39546
I2
s(Vinsert
p39547
I42
VSimpleName: getSelect
p39548
Vinsert
p39549
I42
VSimpleName: subSelect
p39550
tp39551
I1
s(g7310
I42
g7311
Vinsert
p39552
I42
VSimpleName: violationCount
p39553
tp39554
I2
s(g22198
I42
g22199
Vinsert
p39555
I42
VSimpleName: MySqlHintStatement
p39556
tp39557
I3
s(g2847
I42
g2848
Vinsert
p39558
I52
VThisExpression
p39559
tp39560
I1
s(g3893
I42
g3894
Vinsert
p39561
I32
VMethodInvocation
p39562
tp39563
I1
s(Vinsert
p39564
I42
VSimpleName: assertEquals
p39565
Vinsert
p39566
I45
VStringLiteral: "alter table trans"
p39567
tp39568
I2
s(g6265
I42
g6266
Vinsert
p39569
I43
VSimpleType: SQLUnique
p39570
tp39571
I1
s(g15500
I42
g15501
Vinsert
p39572
I43
VSimpleType: SwingWorker
p39573
tp39574
I1
s(g2319
I42
g2320
Vinsert
p39575
I42
VSimpleName: i
p39576
tp39577
I8
s(Vinsert
p39578
I42
VSimpleName: size
p39579
Vinsert
p39580
I42
VSimpleName: print
p39581
tp39582
I39
s(g6450
I42
g6451
Vinsert
p39583
I42
VSimpleName: bytes
p39584
tp39585
I4
s(Vinsert
p39586
I42
VSimpleName: toMySqlString
p39587
Vinsert
p39588
I40
VQualifiedName: System.out
p39589
tp39590
I2
s(g34738
I42
g34739
Vinsert
p39591
I45
VStringLiteral: "AS\u005cn"
p39592
tp39593
I1
s(g4568
I42
g4569
Vinsert
p39594
I43
VSimpleType: SQLSelectItem
p39595
tp39596
I2
s(g6516
I42
g6517
Vinsert
p39597
I42
VSimpleName: HashMap
p39598
tp39599
I1
s(g4640
I42
g4641
Vinsert
p39600
I42
VSimpleName: Exception
p39601
tp39602
I1
s(g952
I42
g953
Vinsert
p39603
I22
VFieldAccess
p39604
tp39605
I2
s(g13991
I42
g13992
Vinsert
p39606
I42
VSimpleName: doPrivileged
p39607
tp39608
I1
s(g22206
I42
g22207
Vinsert
p39609
I42
VSimpleName: columnIndex
p39610
tp39611
I6
s(g21458
I42
g21459
Vinsert
p39612
I5
VArrayType: Object[]
p39613
tp39614
I1
s(g14361
I42
g14362
Vinsert
p39615
I43
VSimpleType: MySqlCreateTableStatement
p39616
tp39617
I1
s(Vinsert
p39618
I42
VSimpleName: nextToken
p39619
Vinsert
p39620
I45
VStringLiteral: "XMLSCHEMA"
p39621
tp39622
I1
s(g11711
I42
g11712
Vinsert
p39623
I42
VSimpleName: getText
p39624
tp39625
I1
s(g11033
I42
g11034
Vinsert
p39626
I83
VModifier: public
p39627
tp39628
I2
s(g6529
I42
g6530
Vinsert
p39629
I32
VMethodInvocation
p39630
tp39631
I1
s(g22647
I42
g22648
Vinsert
p39632
I45
VStringLiteral: "\u005ctend_line\u005cn"
p39633
tp39634
I1
s(Vinsert
p39635
I42
VSimpleName: getInstance
p39636
Vinsert
p39637
I42
VSimpleName: assertTrue
p39638
tp39639
I1
s(Vinsert
p39640
I42
VSimpleName: toSQLString
p39641
Vinsert
p39642
I45
VStringLiteral: "\u005cn\u005ctname person_name,"
p39643
tp39644
I2
s(g35913
I42
g35914
Vinsert
p39645
I21
VExpressionStatement
p39646
tp39647
I2
s(g25882
I42
g25883
Vinsert
p39648
I42
VSimpleName: parameterIndex
p39649
tp39650
I1
s(g23113
I42
g23114
Vinsert
p39651
I42
VSimpleName: getDefaultRowPretch
p39652
tp39653
I1
s(g30184
I42
g30185
Vinsert
p39654
I25
VIfStatement
p39655
tp39656
I4
s(g3322
I42
g3323
Vinsert
p39657
I45
VStringLiteral: "\u005cn"
p39658
tp39659
I5
s(g4834
I42
g4835
Vinsert
p39660
I43
VSimpleType: Filter
p39661
tp39662
I1
s(g2905
I42
g2906
Vinsert
p39663
I42
VSimpleName: getStatement
p39664
tp39665
I1
s(g13395
I42
g13396
Vinsert
p39666
I8
VBlock
p39667
tp39668
I1
s(g1120
I42
g1121
Vinsert
p39669
I32
VMethodInvocation
p39670
tp39671
I1
s(Vinsert
p39672
I42
VSimpleName: assertFalse
p39673
Vinsert
p39674
I42
VSimpleName: MySqlWallTest33
p39675
tp39676
I1
s(g9838
I42
g9839
Vinsert
p39677
I42
VSimpleName: x
p39678
tp39679
I2
s(g13152
I42
g13153
Vinsert
p39680
I52
VThisExpression
p39681
tp39682
I3
s(g18278
I42
g18279
Vinsert
p39683
I45
VStringLiteral: "SET "
p39684
tp39685
I1
s(g12029
I42
g12030
Vinsert
p39686
I43
VSimpleType: SQLExecutor
p39687
tp39688
I3
s(g6450
I42
g6451
Vinsert
p39689
I25
VIfStatement
p39690
tp39691
I2
s(g1471
I42
g1472
Vinsert
p39692
I42
VSimpleName: i
p39693
tp39694
I2
s(Vinsert
p39695
I42
VSimpleName: getExprParser
p39696
Vinsert
p39697
I43
VSimpleType: OracleHint
p39698
tp39699
I1
s(g2079
I42
g2080
Vinsert
p39700
I42
VSimpleName: PreparedStatementProxy
p39701
tp39702
I1
s(g8011
I42
g8012
Vinsert
p39703
I60
VVariableDeclarationStatement
p39704
tp39705
I2
s(g29350
I42
g29351
Vinsert
p39706
I42
VSimpleName: mockStatement
p39707
tp39708
I1
s(g9182
I42
g9183
Vinsert
p39709
I22
VFieldAccess
p39710
tp39711
I1
s(g251
I42
g252
Vinsert
p39712
I42
VSimpleName: String
p39713
tp39714
I1
s(Vinsert
p39715
I42
VSimpleName: setParent
p39716
Vinsert
p39717
I42
VSimpleName: SQLDataType
p39718
tp39719
I2
s(g9796
I42
g9797
Vinsert
p39720
I43
VSimpleType: ParserException
p39721
tp39722
I3
s(g35597
I42
g35598
Vinsert
p39723
I44
VSingleVariableDeclaration
p39724
tp39725
I1
s(g7594
I42
g7595
Vinsert
p39726
I8
VBlock
p39727
tp39728
I1
s(Vinsert
p39729
I42
VSimpleName: assertEquals
p39730
Vinsert
p39731
I42
VSimpleName: stmt
p39732
tp39733
I142
s(g2454
I42
g2455
Vinsert
p39734
I42
VSimpleName: hashCode64
p39735
tp39736
I9
s(g35171
I42
g35172
Vinsert
p39737
I42
VSimpleName: SQLVariantRefExpr
p39738
tp39739
I3
s(g1042
I42
g1043
Vinsert
p39740
I45
VStringLiteral: "SELECT 1"
p39741
tp39742
I1
s(g4880
I42
g4881
Vinsert
p39743
I42
VSimpleName: print
p39744
tp39745
I2
s(g23242
I42
g23243
Vinsert
p39746
I25
VIfStatement
p39747
tp39748
I5
s(g29658
I42
g29659
Vinsert
p39749
I42
VSimpleName: lexer
p39750
tp39751
I17
s(g13588
I42
g13589
Vinsert
p39752
I42
VSimpleName: output
p39753
tp39754
I5
s(g10116
I42
g10117
Vinsert
p39755
I59
VVariableDeclarationFragment
p39756
tp39757
I1
s(g642
I42
g643
Vinsert
p39758
I42
VSimpleName: lexer
p39759
tp39760
I4
s(g7991
I42
g7992
Vinsert
p39761
I31
VMethodDeclaration
p39762
tp39763
I1
s(Vinsert
p39764
I42
VSimpleName: close
p39765
Vinsert
p39766
I42
VSimpleName: dataSourceLog
p39767
tp39768
I1
s(g13789
I42
g13790
Vinsert
p39769
I42
VSimpleName: intValue
p39770
tp39771
I1
s(g4625
I42
g4626
Vinsert
p39772
I27
VInfixExpression: &&
p39773
tp39774
I1
s(g4409
I42
g4410
Vinsert
p39775
I40
VQualifiedName: JdbcConstants.SQL_SERVER
p39776
tp39777
I1
s(Vinsert
p39778
I42
VSimpleName: getTableElementList
p39779
Vinsert
p39780
I60
VVariableDeclarationStatement
p39781
tp39782
I1
s(g9704
I42
g9705
Vinsert
p39783
I32
VMethodInvocation
p39784
tp39785
I1
s(g25586
I42
g25587
Vinsert
p39786
I42
VSimpleName: test_fnv_lower
p39787
tp39788
I1
s(g8669
I42
g8670
Vinsert
p39789
I59
VVariableDeclarationFragment
p39790
tp39791
I1
s(g18477
I42
g18478
Vinsert
p39792
I42
VSimpleName: WallTableStat
p39793
tp39794
I1
s(g15048
I42
g15049
Vinsert
p39795
I45
VStringLiteral: "on"
p39796
tp39797
I1
s(g18930
I42
g18931
Vinsert
p39798
I8
VBlock
p39799
tp39800
I1
s(g10808
I42
g10809
Vinsert
p39801
I27
VInfixExpression: <=
p39802
tp39803
I1
s(g12844
I42
g12845
Vinsert
p39804
I42
VSimpleName: column
p39805
tp39806
I1
s(g14034
I42
g14035
Vinsert
p39807
I45
VStringLiteral: "INSERT INTO TABLE a\u005cn"
p39808
tp39809
I1
s(g27208
I42
g27209
Vinsert
p39810
I42
VSimpleName: sql
p39811
tp39812
I1
s(g20173
I42
g20174
Vinsert
p39813
I32
VMethodInvocation
p39814
tp39815
I13
s(g4303
I42
g4304
Vinsert
p39816
I45
VStringLiteral: "\u005ct\u005ctEND IF;\u005cn"
p39817
tp39818
I5
s(g8783
I42
g8784
Vinsert
p39819
I40
VQualifiedName: com.alibaba.druid.sql.ast.expr.SQLAllColumnExpr
p39820
tp39821
I3
s(g6162
I42
g6163
Vinsert
p39822
I39
VPrimitiveType: void
p39823
tp39824
I155
s(g7620
I42
g7621
Vinsert
p39825
I8
VBlock
p39826
tp39827
I1
s(g19278
I42
g19279
Vinsert
p39828
I33
VNullLiteral
p39829
tp39830
I1
s(g791
I42
g792
Vinsert
p39831
I43
VSimpleType: SQLObject
p39832
tp39833
I5
s(g31672
I42
g31673
Vinsert
p39834
I42
VSimpleName: getStorage
p39835
tp39836
I2
s(g9483
I42
g9484
Vinsert
p39837
I42
VSimpleName: driver
p39838
tp39839
I1
s(g1415
I42
g1416
Vinsert
p39840
I14
VClassInstanceCreation
p39841
tp39842
I2
s(g3636
I42
g3637
Vinsert
p39843
I40
VQualifiedName: JdbcConstants.MYSQL
p39844
tp39845
I3
s(g31224
I42
g31225
Vinsert
p39846
I3
VArrayCreation
p39847
tp39848
I1
s(g20928
I42
g20929
Vinsert
p39849
I42
VSimpleName: lastSlowParameters
p39850
tp39851
I1
s(g10829
I42
g10830
Vinsert
p39852
I42
VSimpleName: ArrayList
p39853
tp39854
I1
s(g5166
I42
g5167
Vinsert
p39855
I42
VSimpleName: checkValid
p39856
tp39857
I5
s(g27620
I42
g27621
Vinsert
p39858
I42
VSimpleName: repository
p39859
tp39860
I4
s(g6293
I42
g6294
Vinsert
p39861
I42
VSimpleName: getColumnName
p39862
tp39863
I1
s(g20010
I42
g20011
Vinsert
p39864
I42
VSimpleName: savepoint
p39865
tp39866
I1
s(g517
I42
g518
Vinsert
p39867
I52
VThisExpression
p39868
tp39869
I1
s(g21244
I42
g21245
Vinsert
p39870
I42
VSimpleName: dbType
p39871
tp39872
I2
s(g18399
I42
g18400
Vinsert
p39873
I43
VSimpleType: ResultSet
p39874
tp39875
I1
s(g20782
I42
g20783
Vinsert
p39876
I42
VSimpleName: names
p39877
tp39878
I1
s(g5333
I42
g5334
Vinsert
p39879
I32
VMethodInvocation
p39880
tp39881
I3
s(g4745
I42
g4746
Vinsert
p39882
I21
VExpressionStatement
p39883
tp39884
I1
s(g23934
I42
g23935
Vinsert
p39885
I42
VSimpleName: println
p39886
tp39887
I6
s(g3613
I42
g3614
Vinsert
p39888
I83
VModifier: private
p39889
tp39890
I1
s(g9195
I42
g9196
Vinsert
p39891
I32
VMethodInvocation
p39892
tp39893
I15
s(Vinsert
p39894
I42
VSimpleName: get
p39895
Vinsert
p39896
I42
VSimpleName: getParameters
p39897
tp39898
I3
s(g6139
I42
g6140
Vinsert
p39899
I43
VSimpleType: OracleSchemaStatVisitor
p39900
tp39901
I15
s(g34785
I42
g34786
Vinsert
p39902
I34
VNumberLiteral: 0
p39903
tp39904
I1
s(g8324
I42
g8325
Vinsert
p39905
I45
VStringLiteral: "\u005ct\u005ct\u005ctFIELDS TERMINATED BY '|'\u005cn"
p39906
tp39907
I1
s(g10864
I42
g10865
Vinsert
p39908
I42
VSimpleName: SQLException
p39909
tp39910
I1
s(g9634
I42
g9635
Vinsert
p39911
I42
VSimpleName: op
p39912
tp39913
I1
s(g25854
I42
g25855
Vinsert
p39914
I22
VFieldAccess
p39915
tp39916
I1
s(g6671
I42
g6672
Vinsert
p39917
I42
VSimpleName: addViolation
p39918
tp39919
I2
s(g25157
I42
g25158
Vinsert
p39920
I42
VSimpleName: key
p39921
tp39922
I2
s(g6630
I42
g6631
Vinsert
p39923
I21
VExpressionStatement
p39924
tp39925
I9
s(Vinsert
p39926
I42
VSimpleName: acceptChild
p39927
Vinsert
p39928
I42
VSimpleName: cache
p39929
tp39930
I3
s(g20470
I42
g20471
Vinsert
p39931
I39
VPrimitiveType: long
p39932
tp39933
I3
s(Vinsert
p39934
I42
VSimpleName: stringVal
p39935
Vinsert
p39936
I40
VQualifiedName: Token.EQ
p39937
tp39938
I3
s(g29793
I42
g29794
Vinsert
p39939
I42
VSimpleName: createIfNotExists
p39940
tp39941
I1
s(Vinsert
p39942
I42
VSimpleName: getValue
p39943
Vinsert
p39944
I45
VStringLiteral: "BOX "
p39945
tp39946
I1
s(g31224
I42
g31225
Vinsert
p39947
I43
VSimpleType: Object
p39948
tp39949
I2
s(g7497
I42
g7498
Vinsert
p39950
I42
VSimpleName: SQLParseException
p39951
tp39952
I1
s(Vinsert
p39953
I42
VSimpleName: println
p39954
Vinsert
p39955
I40
VQualifiedName: JdbcUtils.POSTGRESQL
p39956
tp39957
I1
s(g20933
I42
g20934
Vinsert
p39958
I39
VPrimitiveType: boolean
p39959
tp39960
I1
s(Vinsert
p39961
I42
VSimpleName: log
p39962
Vinsert
p39963
I31
VMethodDeclaration
p39964
tp39965
I1
s(g34654
I42
g34655
Vinsert
p39966
I45
VStringLiteral: ") hd"
p39967
tp39968
I1
s(g4152
I42
g4153
Vinsert
p39969
I32
VMethodInvocation
p39970
tp39971
I24
s(Vinsert
p39972
I42
VSimpleName: indexOf
p39973
Vinsert
p39974
I13
VCharacterLiteral: ';'
p39975
tp39976
I1
s(g9982
I42
g9983
Vinsert
p39977
I45
VStringLiteral: "\u005ctEXECUTE IMMEDIATE 'ALTER SESSION SET SQL_TRACE TRUE';\u005cn"
p39978
tp39979
I1
s(g1963
I42
g1964
Vinsert
p39980
I42
VSimpleName: clone
p39981
tp39982
I1
s(g16967
I42
g16968
Vinsert
p39983
I42
VSimpleName: tableName
p39984
tp39985
I1
s(g7594
I42
g7595
Vinsert
p39986
I43
VSimpleType: SQLIfStatement
p39987
tp39988
I1
s(g5936
I42
g5937
Vinsert
p39989
I45
VStringLiteral: "\u005ctand name != 'none'\u005cn"
p39990
tp39991
I1
s(Vinsert
p39992
I42
VSimpleName: getDataSource
p39993
Vinsert
p39994
I83
VModifier: private
p39995
tp39996
I1
s(g13784
I42
g13785
Vinsert
p39997
I42
VSimpleName: TRUE
p39998
tp39999
I1
s(g542
I42
g543
Vinsert
p40000
I45
VStringLiteral: "\u005ct\u005ct'VerifyScrollCheckcode', \u005cn"
p40001
tp40002
I1
s(g3554
I42
g3555
Vinsert
p40003
I32
VMethodInvocation
p40004
tp40005
I3
s(g1471
I42
g1472
Vinsert
p40006
I31
VMethodDeclaration
p40007
tp40008
I7
s(g2145
I42
g2146
Vinsert
p40009
I42
VSimpleName: list
p40010
tp40011
I1
s(Vinsert
p40012
I42
VSimpleName: put
p40013
Vinsert
p40014
I43
VSimpleType: LinkedHashMap
p40015
tp40016
I11
s(g9688
I42
g9689
Vinsert
p40017
I43
VSimpleType: SQLServerWallProvider
p40018
tp40019
I7
s(g7612
I42
g7613
Vinsert
p40020
I32
VMethodInvocation
p40021
tp40022
I4
s(g14697
I42
g14698
Vinsert
p40023
I42
VSimpleName: assertTrue
p40024
tp40025
I2
s(Vinsert
p40026
I42
VSimpleName: getDataSource
p40027
Vinsert
p40028
I39
VPrimitiveType: boolean
p40029
tp40030
I1
s(g32530
I42
g32531
Vinsert
p40031
I43
VSimpleType: AsOfFlashbackQueryClause
p40032
tp40033
I2
s(g18512
I42
g18513
Vinsert
p40034
I42
VSimpleName: column
p40035
tp40036
I2
s(g1903
I42
g1904
Vinsert
p40037
I42
VSimpleName: isNoMaxValue
p40038
tp40039
I1
s(g20733
I42
g20734
Vinsert
p40040
I45
VStringLiteral: "\u005cninsert overwrite table b partition(ds='20150711')"
p40041
tp40042
I1
s(g2568
I42
g2569
Vinsert
p40043
I7
VAssignment: =
p40044
tp40045
I1
s(g1481
I42
g1482
Vinsert
p40046
I42
VSimpleName: SQLException
p40047
tp40048
I1
s(g1536
I42
g1537
Vinsert
p40049
I74
VParameterizedType: Constructor<ConnectionImpl>
p40050
tp40051
I1
s(Vinsert
p40052
I42
VSimpleName: eval
p40053
Vinsert
p40054
I42
VSimpleName: condition
p40055
tp40056
I1
s(Vinsert
p40057
I42
VSimpleName: getName
p40058
Vinsert
p40059
I42
VSimpleName: isReferenced
p40060
tp40061
I1
s(g6676
I42
g6677
Vinsert
p40062
I59
VVariableDeclarationFragment
p40063
tp40064
I1
s(g26326
I42
g26327
Vinsert
p40065
I43
VSimpleType: SQLAlterTableDisableConstraint
p40066
tp40067
I2
s(g28278
I42
g28279
Vinsert
p40068
I32
VMethodInvocation
p40069
tp40070
I22
s(g28232
I42
g28233
Vinsert
p40071
I42
VSimpleName: setDelimitedBy
p40072
tp40073
I1
s(g6323
I42
g6324
Vinsert
p40074
I42
VSimpleName: TestCase
p40075
tp40076
I1
s(Vinsert
p40077
I42
VSimpleName: setExecuteCount
p40078
Vinsert
p40079
I42
VSimpleName: val
p40080
tp40081
I2
s(g1720
I42
g1721
Vinsert
p40082
I27
VInfixExpression: +
p40083
tp40084
I1
s(g7522
I42
g7523
Vinsert
p40085
I39
VPrimitiveType: boolean
p40086
tp40087
I2
s(g34000
I42
g34001
Vinsert
p40088
I42
VSimpleName: incrementReplaceCount
p40089
tp40090
I1
s(g1476
I42
g1477
Vinsert
p40091
I42
VSimpleName: String
p40092
tp40093
I1
s(Vinsert
p40094
I42
VSimpleName: token
p40095
Vinsert
p40096
I43
VSimpleType: OracleUpdateStatement
p40097
tp40098
I1
s(g2228
I42
g2229
Vinsert
p40099
I78
VMarkerAnnotation
p40100
tp40101
I1
s(g2059
I42
g2060
Vinsert
p40102
I42
VSimpleName: length
p40103
tp40104
I1
s(Vinsert
p40105
I42
VSimpleName: assertTrue
p40106
Vinsert
p40107
I42
VSimpleName: test_false
p40108
tp40109
I14
s(Vinsert
p40110
I42
VSimpleName: nextToken
p40111
Vinsert
p40112
I42
VSimpleName: LITERAL_ALIAS
p40113
tp40114
I1
s(g6722
I42
g6723
Vinsert
p40115
I42
VSimpleName: assertEquals
p40116
tp40117
I3
s(g6167
I42
g6168
Vinsert
p40118
I38
VPrefixExpression: !
p40119
tp40120
I1
s(g16581
I42
g16582
Vinsert
p40121
I37
VPostfixExpression: ++
p40122
tp40123
I1
s(g5384
I42
g5385
Vinsert
p40124
I44
VSingleVariableDeclaration
p40125
tp40126
I2
s(g7039
I42
g7040
Vinsert
p40127
I45
VStringLiteral: "\u005cn\u005ct("
p40128
tp40129
I2
s(g9569
I42
g9570
Vinsert
p40130
I52
VThisExpression
p40131
tp40132
I1
s(g32519
I42
g32520
Vinsert
p40133
I43
VSimpleType: MySQLException
p40134
tp40135
I1
s(Vinsert
p40136
I42
VSimpleName: getAttribute
p40137
Vinsert
p40138
I42
VSimpleName: String
p40139
tp40140
I4
s(g4602
I42
g4603
Vinsert
p40141
I42
VSimpleName: SQLSetStatement
p40142
tp40143
I2
s(g21856
I42
g21857
Vinsert
p40144
I42
VSimpleName: unwrap
p40145
tp40146
I1
s(g22214
I42
g22215
Vinsert
p40147
I42
VSimpleName: String
p40148
tp40149
I3
s(g15687
I42
g15688
Vinsert
p40150
I42
VSimpleName: toString
p40151
tp40152
I2
s(g4467
I42
g4468
Vinsert
p40153
I42
VSimpleName: x
p40154
tp40155
I41
s(g11325
I42
g11326
Vinsert
p40156
I42
VSimpleName: perfMySql
p40157
tp40158
I1
s(Vinsert
p40159
I42
VSimpleName: size
p40160
Vinsert
p40161
I42
VSimpleName: createParameterizedOutputVisitor
p40162
tp40163
I1
s(g1042
I42
g1043
Vinsert
p40164
I42
VSimpleName: setValidationQuery
p40165
tp40166
I1
s(g21746
I42
g21747
Vinsert
p40167
I42
VSimpleName: ucase
p40168
tp40169
I1
s(g38094
I42
g38095
Vinsert
p40170
I45
VStringLiteral: "AUTO_INCREMENT"
p40171
tp40172
I1
s(g4589
I42
g4590
Vinsert
p40173
I42
VSimpleName: get
p40174
tp40175
I1
s(Vinsert
p40176
I42
VSimpleName: getItems
p40177
Vinsert
p40178
I27
VInfixExpression: ==
p40179
tp40180
I1
s(g17106
I42
g17107
Vinsert
p40181
I59
VVariableDeclarationFragment
p40182
tp40183
I1
s(g29350
I42
g29351
Vinsert
p40184
I42
VSimpleName: sql
p40185
tp40186
I2
s(g18773
I42
g18774
Vinsert
p40187
I59
VVariableDeclarationFragment
p40188
tp40189
I5
s(g7612
I42
g7613
Vinsert
p40190
I21
VExpressionStatement
p40191
tp40192
I2
s(g1042
I42
g1043
Vinsert
p40193
I42
VSimpleName: setPassword
p40194
tp40195
I1
s(g3297
I42
g3298
Vinsert
p40196
I42
VSimpleName: addUpdateCount
p40197
tp40198
I1
s(g13677
I42
g13678
Vinsert
p40199
I32
VMethodInvocation
p40200
tp40201
I2
s(g17507
I42
g17508
Vinsert
p40202
I21
VExpressionStatement
p40203
tp40204
I2
s(g11420
I42
g11421
Vinsert
p40205
I40
VQualifiedName: Token.UPDATE
p40206
tp40207
I1
s(Vinsert
p40208
I42
VSimpleName: setParent
p40209
Vinsert
p40210
I42
VSimpleName: setMaxRows
p40211
tp40212
I1
s(g2692
I42
g2693
Vinsert
p40213
I45
VStringLiteral: "char"
p40214
tp40215
I1
s(g26124
I42
g26125
Vinsert
p40216
I42
VSimpleName: MySqlMatchAgainstExpr
p40217
tp40218
I1
s(g11935
I42
g11936
Vinsert
p40219
I42
VSimpleName: expr
p40220
tp40221
I1
s(g967
I42
g968
Vinsert
p40222
I25
VIfStatement
p40223
tp40224
I3
s(g2079
I42
g2080
Vinsert
p40225
I42
VSimpleName: chain
p40226
tp40227
I1
s(g1745
I42
g1746
Vinsert
p40228
I42
VSimpleName: value
p40229
tp40230
I1
s(Vinsert
p40231
I42
VSimpleName: getDeviceAndroidCount
p40232
Vinsert
p40233
I34
VNumberLiteral: 0
p40234
tp40235
I4
s(g12055
I42
g12056
Vinsert
p40236
I42
VSimpleName: lowBound
p40237
tp40238
I1
s(g9456
I42
g9457
Vinsert
p40239
I8
VBlock
p40240
tp40241
I1
s(g2213
I42
g2214
Vinsert
p40242
I22
VFieldAccess
p40243
tp40244
I1
s(g6776
I42
g6777
Vinsert
p40245
I45
VStringLiteral: "syntax error : "
p40246
tp40247
I1
s(g647
I42
g648
Vinsert
p40248
I43
VSimpleType: SQLDeclareItem
p40249
tp40250
I1
s(g7047
I42
g7048
Vinsert
p40251
I45
VStringLiteral: "search.retl_table_config_search"
p40252
tp40253
I1
s(g10182
I42
g10183
Vinsert
p40254
I42
VSimpleName: x
p40255
tp40256
I2
s(g27708
I42
g27709
Vinsert
p40257
I43
VSimpleType: Exception
p40258
tp40259
I2
s(g13891
I42
g13892
Vinsert
p40260
I21
VExpressionStatement
p40261
tp40262
I1
s(g997
I42
g998
Vinsert
p40263
I2
VArrayAccess
p40264
tp40265
I1
s(g31691
I42
g31692
Vinsert
p40266
I42
VSimpleName: MySqlSelectQueryBlock
p40267
tp40268
I28
s(Vinsert
p40269
I42
VSimpleName: assertEquals
p40270
Vinsert
p40271
I45
VStringLiteral: "org.apache.derby.jdbc.EmbeddedDriver"
p40272
tp40273
I1
s(g3908
I42
g3909
Vinsert
p40274
I59
VVariableDeclarationFragment
p40275
tp40276
I1
s(g21585
I42
g21586
Vinsert
p40277
I34
VNumberLiteral: 1
p40278
tp40279
I24
s(g6503
I42
g6504
Vinsert
p40280
I21
VExpressionStatement
p40281
tp40282
I2
s(g27142
I42
g27143
Vinsert
p40283
I45
VStringLiteral: "ORGANIZATION "
p40284
tp40285
I1
s(g31211
I42
g31212
Vinsert
p40286
I43
VSimpleType: SQLSelectItem
p40287
tp40288
I2
s(g3312
I42
g3313
Vinsert
p40289
I27
VInfixExpression: !=
p40290
tp40291
I1
s(g1830
I42
g1831
Vinsert
p40292
I42
VSimpleName: getConnection
p40293
tp40294
I1
s(g8627
I42
g8628
Vinsert
p40295
I43
VSimpleType: List
p40296
tp40297
I1
s(g20364
I42
g20365
Vinsert
p40298
I34
VNumberLiteral: 10
p40299
tp40300
I6
s(g20725
I42
g20726
Vinsert
p40301
I42
VSimpleName: checkValid
p40302
tp40303
I4
s(g6298
I42
g6299
Vinsert
p40304
I39
VPrimitiveType: int
p40305
tp40306
I1
s(g6079
I42
g6080
Vinsert
p40307
I45
VStringLiteral: "\u005cn\u005ct\u005ctCONNECT BY PRIOR tbek_pk = tbek_parent"
p40308
tp40309
I1
s(g12901
I42
g12902
Vinsert
p40310
I42
VSimpleName: put
p40311
tp40312
I2
s(g16759
I42
g16760
Vinsert
p40313
I42
VSimpleName: SQLName
p40314
tp40315
I1
s(g11880
I42
g11881
Vinsert
p40316
I45
VStringLiteral: "\u005cn\u005ctPARTITION west VALUES ('AMERICA'), "
p40317
tp40318
I2
s(g2183
I42
g2184
Vinsert
p40319
I21
VExpressionStatement
p40320
tp40321
I1
s(g16630
I42
g16631
Vinsert
p40322
I8
VBlock
p40323
tp40324
I1
s(g25317
I42
g25318
Vinsert
p40325
I43
VSimpleType: Object
p40326
tp40327
I8
s(g27454
I42
g27455
Vinsert
p40328
I42
VSimpleName: stmt
p40329
tp40330
I4
s(g6771
I42
g6772
Vinsert
p40331
I45
VStringLiteral: " IDENTIFIED BY "
p40332
tp40333
I1
s(g662
I42
g663
Vinsert
p40334
I42
VSimpleName: impl
p40335
tp40336
I2
s(Vinsert
p40337
I42
VSimpleName: assertEquals
p40338
Vinsert
p40339
I45
VStringLiteral: "\u005cn\u005ct('a3', 'b3')"
p40340
tp40341
I3
s(g2372
I42
g2373
Vinsert
p40342
I8
VBlock
p40343
tp40344
I1
s(g5564
I42
g5565
Vinsert
p40345
I42
VSimpleName: getSelectList
p40346
tp40347
I1
s(g18437
I42
g18438
Vinsert
p40348
I43
VSimpleType: DruidDataSource
p40349
tp40350
I3
s(g5460
I42
g5461
Vinsert
p40351
I42
VSimpleName: print
p40352
tp40353
I1
s(g18573
I42
g18574
Vinsert
p40354
I42
VSimpleName: stat
p40355
tp40356
I2
s(Vinsert
p40357
I42
VSimpleName: getContext
p40358
Vinsert
p40359
I42
VSimpleName: put
p40360
tp40361
I1
s(g25152
I42
g25153
Vinsert
p40362
I32
VMethodInvocation
p40363
tp40364
I1
s(g13622
I42
g13623
Vinsert
p40365
I43
VSimpleType: Exception
p40366
tp40367
I2
s(g33489
I42
g33490
Vinsert
p40368
I45
VStringLiteral: "dt"
p40369
tp40370
I1
s(g22020
I42
g22021
Vinsert
p40371
I60
VVariableDeclarationStatement
p40372
tp40373
I2
s(g25306
I42
g25307
Vinsert
p40374
I83
VModifier: protected
p40375
tp40376
I2
s(g18938
I42
g18939
Vinsert
p40377
I42
VSimpleName: tableSource
p40378
tp40379
I1
s(g2423
I42
g2424
Vinsert
p40380
I42
VSimpleName: Exception
p40381
tp40382
I2
s(g27372
I42
g27373
Vinsert
p40383
I11
VCastExpression
p40384
tp40385
I7
s(g27070
I42
g27071
Vinsert
p40386
I27
VInfixExpression: !=
p40387
tp40388
I1
s(g11827
I42
g11828
Vinsert
p40389
I74
VParameterizedType: AtomicLongFieldUpdater<WebSessionStat>
p40390
tp40391
I1
s(g7477
I42
g7478
Vinsert
p40392
I42
VSimpleName: objectName
p40393
tp40394
I2
s(g12505
I42
g12506
Vinsert
p40395
I74
VParameterizedType: ConcurrentMap<String,JdbcDataSourceStat>
p40396
tp40397
I2
s(g3027
I42
g3028
Vinsert
p40398
I45
VStringLiteral: "'"
p40399
tp40400
I1
s(Vinsert
p40401
I42
VSimpleName: parseStatements
p40402
Vinsert
p40403
I45
VStringLiteral: "\u005ctSCHEMA VARCHAR(20)\u005cn"
p40404
tp40405
I1
s(g3982
I42
g3983
Vinsert
p40406
I43
VSimpleType: DataSourceHolder
p40407
tp40408
I2
s(g6
I42
g7
Vinsert
p40409
I42
VSimpleName: userDao
p40410
tp40411
I1
s(g17602
I42
g17603
Vinsert
p40412
I42
VSimpleName: text
p40413
tp40414
I4
s(g18659
I42
g18660
Vinsert
p40415
I34
VNumberLiteral: 103
p40416
tp40417
I1
s(g30607
I42
g30608
Vinsert
p40418
I45
VStringLiteral: "USING strcat_type;"
p40419
tp40420
I1
s(g21517
I42
g21518
Vinsert
p40421
I42
VSimpleName: PGShowStatement
p40422
tp40423
I2
s(g6046
I42
g6047
Vinsert
p40424
I34
VNumberLiteral: 0
p40425
tp40426
I1
s(g26581
I42
g26582
Vinsert
p40427
I32
VMethodInvocation
p40428
tp40429
I3
s(g35021
I42
g35022
Vinsert
p40430
I42
VSimpleName: className
p40431
tp40432
I1
s(g11015
I42
g11016
Vinsert
p40433
I32
VMethodInvocation
p40434
tp40435
I11
s(g341
I42
g342
Vinsert
p40436
I32
VMethodInvocation
p40437
tp40438
I7
s(g758
I42
g759
Vinsert
p40439
I42
VSimpleName: visit
p40440
tp40441
I3
s(Vinsert
p40442
I42
VSimpleName: get
p40443
Vinsert
p40444
I42
VSimpleName: startTransactionCount
p40445
tp40446
I2
s(g5520
I42
g5521
Vinsert
p40447
I21
VExpressionStatement
p40448
tp40449
I1
s(g21084
I42
g21085
Vinsert
p40450
I42
VSimpleName: other
p40451
tp40452
I1
s(g2403
I42
g2404
Vinsert
p40453
I52
VThisExpression
p40454
tp40455
I1
s(g6396
I42
g6397
Vinsert
p40456
I7
VAssignment: =
p40457
tp40458
I1
s(Vinsert
p40459
I42
VSimpleName: getValue
p40460
Vinsert
p40461
I45
VStringLiteral: "COMMENT"
p40462
tp40463
I1
s(Vinsert
p40464
I42
VSimpleName: length
p40465
Vinsert
p40466
I42
VSimpleName: from
p40467
tp40468
I2
s(g15048
I42
g15049
Vinsert
p40469
I42
VSimpleName: ColumnMetaData
p40470
tp40471
I4
s(g6943
I42
g6944
Vinsert
p40472
I42
VSimpleName: WeakReference
p40473
tp40474
I1
s(g14261
I42
g14262
Vinsert
p40475
I42
VSimpleName: getStatsMap
p40476
tp40477
I1
s(g3816
I42
g3817
Vinsert
p40478
I32
VMethodInvocation
p40479
tp40480
I2
s(g24247
I42
g24248
Vinsert
p40481
I42
VSimpleName: propertyValues
p40482
tp40483
I2
s(g19924
I42
g19925
Vinsert
p40484
I32
VMethodInvocation
p40485
tp40486
I1
s(g4982
I42
g4983
Vinsert
p40487
I8
VBlock
p40488
tp40489
I1
s(g16778
I42
g16779
Vinsert
p40490
I1
VAnonymousClassDeclaration
p40491
tp40492
I2
s(g61
I42
g62
Vinsert
p40493
I32
VMethodInvocation
p40494
tp40495
I2
s(g8365
I42
g8366
Vinsert
p40496
I42
VSimpleName: error
p40497
tp40498
I1
s(g10011
I42
g10012
Vinsert
p40499
I42
VSimpleName: connection
p40500
tp40501
I2
s(g19369
I42
g19370
Vinsert
p40502
I27
VInfixExpression: >
p40503
tp40504
I1
s(g12513
I42
g12514
Vinsert
p40505
I42
VSimpleName: SQLException
p40506
tp40507
I1
s(g806
I42
g807
Vinsert
p40508
I42
VSimpleName: MappingVisitorUtils
p40509
tp40510
I2
s(g2268
I42
g2269
Vinsert
p40511
I42
VSimpleName: stmt
p40512
tp40513
I6
s(g3396
I42
g3397
Vinsert
p40514
I45
VStringLiteral: "\u005ct, \u005c"LEADER\u005c", \u005c"DEPT\u005c", \u005c"STORENO\u005c", \u005c"AREA\u005c", \u005c"TYPE\u005c"\u005cn"
p40515
tp40516
I1
s(g8311
I42
g8312
Vinsert
p40517
I43
VSimpleType: SQLExpr
p40518
tp40519
I1
s(Vinsert
p40520
I42
VSimpleName: assertEquals
p40521
Vinsert
p40522
I42
VSimpleName: SQLInsertStatement
p40523
tp40524
I16
s(Vinsert
p40525
I42
VSimpleName: output
p40526
Vinsert
p40527
I42
VSimpleName: subQuery
p40528
tp40529
I10
s(g9182
I42
g9183
Vinsert
p40530
I52
VThisExpression
p40531
tp40532
I4
s(Vinsert
p40533
I42
VSimpleName: endVisit
p40534
Vinsert
p40535
I42
VSimpleName: using
p40536
tp40537
I2
s(Vinsert
p40538
I42
VSimpleName: assertEquals
p40539
Vinsert
p40540
I42
VSimpleName: test_config
p40541
tp40542
I3
s(g13321
I42
g13322
Vinsert
p40543
I40
VQualifiedName: MySqlKillStatement.Type.QUERY
p40544
tp40545
I1
s(g15108
I42
g15109
Vinsert
p40546
I42
VSimpleName: SQLException
p40547
tp40548
I1
s(g8355
I42
g8356
Vinsert
p40549
I42
VSimpleName: clazz
p40550
tp40551
I1
s(g23045
I42
g23046
Vinsert
p40552
I39
VPrimitiveType: boolean
p40553
tp40554
I1
s(g6694
I42
g6695
Vinsert
p40555
I43
VSimpleType: MySqlUpdateStatement
p40556
tp40557
I1
s(g11991
I42
g11992
Vinsert
p40558
I43
VSimpleType: ValuesClause
p40559
tp40560
I2
s(g13311
I42
g13312
Vinsert
p40561
I45
VStringLiteral: "\u005cn\u005ct\u005ctCONSTRAINT fk_oid REFERENCES oe.orders (order_id),"
p40562
tp40563
I2
s(g31934
I42
g31935
Vinsert
p40564
I42
VSimpleName: dsStat
p40565
tp40566
I2
s(g111
I42
g112
Vinsert
p40567
I27
VInfixExpression: ==
p40568
tp40569
I3
s(g5297
I42
g5298
Vinsert
p40570
I32
VMethodInvocation
p40571
tp40572
I17
s(g8179
I42
g8180
Vinsert
p40573
I42
VSimpleName: stat
p40574
tp40575
I1
s(g21551
I42
g21552
Vinsert
p40576
I45
VStringLiteral: "TIMESTAMP WITH TIME ZONE"
p40577
tp40578
I1
s(Vinsert
p40579
I42
VSimpleName: add
p40580
Vinsert
p40581
I42
VSimpleName: parseTruncate
p40582
tp40583
I1
s(Vinsert
p40584
I42
VSimpleName: getValue
p40585
Vinsert
p40586
I42
VSimpleName: SQLBinaryExpr
p40587
tp40588
I1
s(g487
I42
g488
Vinsert
p40589
I39
VPrimitiveType: void
p40590
tp40591
I1
s(g4334
I42
g4335
Vinsert
p40592
I42
VSimpleName: dataSource
p40593
tp40594
I1
s(g7394
I42
g7395
Vinsert
p40595
I34
VNumberLiteral: 1
p40596
tp40597
I1
s(Vinsert
p40598
I42
VSimpleName: put
p40599
Vinsert
p40600
I42
VSimpleName: entities
p40601
tp40602
I2
s(Vinsert
p40603
I42
VSimpleName: toPGString
p40604
Vinsert
p40605
I45
VStringLiteral: "WHERE 1 = 1\u005cn"
p40606
tp40607
I1
s(g13789
I42
g13790
Vinsert
p40608
I42
VSimpleName: accept
p40609
tp40610
I1
s(Vinsert
p40611
I42
VSimpleName: getName
p40612
Vinsert
p40613
I42
VSimpleName: getExpr
p40614
tp40615
I1
s(g10355
I42
g10356
Vinsert
p40616
I45
VStringLiteral: "log4j2"
p40617
tp40618
I1
s(g9380
I42
g9381
Vinsert
p40619
I42
VSimpleName: dataSource
p40620
tp40621
I1
s(g7955
I42
g7956
Vinsert
p40622
I42
VSimpleName: NullExceptionSorter
p40623
tp40624
I1
s(g1913
I42
g1914
Vinsert
p40625
I24
VForStatement
p40626
tp40627
I1
s(g12801
I42
g12802
Vinsert
p40628
I42
VSimpleName: acceptIdentifier
p40629
tp40630
I1
s(g23793
I42
g23794
Vinsert
p40631
I45
VStringLiteral: "\u005cn\u005ctPARTITION p1 VALUES LESS THAN (1000),"
p40632
tp40633
I2
s(g9380
I42
g9381
Vinsert
p40634
I43
VSimpleType: Filter
p40635
tp40636
I1
s(Vinsert
p40637
I42
VSimpleName: getInstance
p40638
Vinsert
p40639
I42
VSimpleName: getFilters
p40640
tp40641
I1
s(g6375
I42
g6376
Vinsert
p40642
I8
VBlock
p40643
tp40644
I1
s(g444
I42
g445
Vinsert
p40645
I21
VExpressionStatement
p40646
tp40647
I1
s(g16525
I42
g16526
Vinsert
p40648
I27
VInfixExpression: ==
p40649
tp40650
I3
s(Vinsert
p40651
I42
VSimpleName: unwrap
p40652
Vinsert
p40653
I42
VSimpleName: MockConnection
p40654
tp40655
I1
s(g6197
I42
g6198
Vinsert
p40656
I8
VBlock
p40657
tp40658
I76
s(g9924
I42
g9925
Vinsert
p40659
I42
VSimpleName: setFilters
p40660
tp40661
I1
s(Vinsert
p40662
I42
VSimpleName: nextToken
p40663
Vinsert
p40664
I42
VSimpleName: PGAnalytic
p40665
tp40666
I1
s(g9773
I42
g9774
Vinsert
p40667
I42
VSimpleName: name
p40668
tp40669
I2
s(g1775
I42
g1776
Vinsert
p40670
I42
VSimpleName: getItems
p40671
tp40672
I2
s(Vinsert
p40673
I42
VSimpleName: getParameters
p40674
Vinsert
p40675
I42
VSimpleName: isStatementExecutableSqlLogEnable
p40676
tp40677
I2
s(Vinsert
p40678
I42
VSimpleName: assertTrue
p40679
Vinsert
p40680
I42
VSimpleName: test_stuff
p40681
tp40682
I3
s(g32875
I42
g32876
Vinsert
p40683
I43
VSimpleType: Set
p40684
tp40685
I2
s(g4160
I42
g4161
Vinsert
p40686
I42
VSimpleName: getWaitThreadCount
p40687
tp40688
I1
s(g12513
I42
g12514
Vinsert
p40689
I43
VSimpleType: SQLException
p40690
tp40691
I1
s(g15991
I42
g15992
Vinsert
p40692
I42
VSimpleName: parameters
p40693
tp40694
I2
s(g15177
I42
g15178
Vinsert
p40695
I74
VParameterizedType: List<WallProvider>
p40696
tp40697
I1
s(g20165
I42
g20166
Vinsert
p40698
I42
VSimpleName: addViolation
p40699
tp40700
I1
s(g4964
I42
g4965
Vinsert
p40701
I41
VReturnStatement
p40702
tp40703
I2
s(g14517
I42
g14518
Vinsert
p40704
I11
VCastExpression
p40705
tp40706
I3
s(g86
I42
g87
Vinsert
p40707
I27
VInfixExpression: ==
p40708
tp40709
I1
s(g14896
I42
g14897
Vinsert
p40710
I42
VSimpleName: x
p40711
tp40712
I1
s(g6103
I42
g6104
Vinsert
p40713
I42
VSimpleName: provider
p40714
tp40715
I2
s(g27954
I42
g27955
Vinsert
p40716
I42
VSimpleName: name
p40717
tp40718
I2
s(Vinsert
p40719
I42
VSimpleName: accept
p40720
Vinsert
p40721
I13
VCharacterLiteral: ')'
p40722
tp40723
I2
s(Vinsert
p40724
I42
VSimpleName: accept
p40725
Vinsert
p40726
I45
VStringLiteral: " identified by "
p40727
tp40728
I1
s(g9786
I42
g9787
Vinsert
p40729
I42
VSimpleName: item
p40730
tp40731
I4
s(g7965
I42
g7966
Vinsert
p40732
I32
VMethodInvocation
p40733
tp40734
I1
s(Vinsert
p40735
I42
VSimpleName: expr
p40736
Vinsert
p40737
I42
VSimpleName: OracleDbLinkExpr
p40738
tp40739
I1
s(g7655
I42
g7656
Vinsert
p40740
I39
VPrimitiveType: boolean
p40741
tp40742
I1
s(g11935
I42
g11936
Vinsert
p40743
I27
VInfixExpression: !=
p40744
tp40745
I1
s(g4880
I42
g4881
Vinsert
p40746
I45
VStringLiteral: "CREATE OR REPLACE TYPE \u005c"VARRAY_DEPT_TYPE\u005c" VARRAY (7000) OF NUMBER(10)"
p40747
tp40748
I1
s(g131
I42
g132
Vinsert
p40749
I32
VMethodInvocation
p40750
tp40751
I4
s(g12480
I42
g12481
Vinsert
p40752
I8
VBlock
p40753
tp40754
I1
s(g27757
I42
g27758
Vinsert
p40755
I42
VSimpleName: wallConfig
p40756
tp40757
I1
s(g15097
I42
g15098
Vinsert
p40758
I83
VModifier: public
p40759
tp40760
I33
s(g16192
I42
g16193
Vinsert
p40761
I42
VSimpleName: Entry
p40762
tp40763
I1
s(g6416
I42
g6417
Vinsert
p40764
I74
VParameterizedType: List<SQLStatement>
p40765
tp40766
I2
s(g10105
I42
g10106
Vinsert
p40767
I42
VSimpleName: tableName
p40768
tp40769
I3
s(Vinsert
p40770
I42
VSimpleName: endVisit
p40771
Vinsert
p40772
I42
VSimpleName: objectType
p40773
tp40774
I1
s(g11973
I42
g11974
Vinsert
p40775
I45
VStringLiteral: " `Extent1`.`State`, "
p40776
tp40777
I1
s(Vinsert
p40778
I42
VSimpleName: toMySqlString
p40779
Vinsert
p40780
I45
VStringLiteral: "insert low_priority delayed high_priority ignore into tbl_name (a, b, c)\u005cnvalues (1, 2, 3)"
p40781
tp40782
I1
s(g2258
I42
g2259
Vinsert
p40783
I43
VSimpleType: PreparedStatementProxy
p40784
tp40785
I1
s(g24379
I42
g24380
Vinsert
p40786
I8
VBlock
p40787
tp40788
I7
s(g1299
I42
g1300
Vinsert
p40789
I42
VSimpleName: getMaxWait
p40790
tp40791
I1
s(g7594
I42
g7595
Vinsert
p40792
I60
VVariableDeclarationStatement
p40793
tp40794
I1
s(g5399
I42
g5400
Vinsert
p40795
I42
VSimpleName: createConnectionCount
p40796
tp40797
I1
s(g4217
I42
g4218
Vinsert
p40798
I43
VSimpleType: SQLSelectItem
p40799
tp40800
I3
s(g15456
I42
g15457
Vinsert
p40801
I83
VModifier: public
p40802
tp40803
I2
s(g16745
I42
g16746
Vinsert
p40804
I59
VVariableDeclarationFragment
p40805
tp40806
I1
s(g33917
I42
g33918
Vinsert
p40807
I45
VStringLiteral: "WITH CHECK OPTION;"
p40808
tp40809
I1
s(g7840
I42
g7841
Vinsert
p40810
I8
VBlock
p40811
tp40812
I2
s(Vinsert
p40813
I42
VSimpleName: createExprParser
p40814
Vinsert
p40815
I45
VStringLiteral: "integer"
p40816
tp40817
I1
s(g4594
I42
g4595
Vinsert
p40818
I7
VAssignment: =
p40819
tp40820
I1
s(g3788
I42
g3789
Vinsert
p40821
I42
VSimpleName: x
p40822
tp40823
I2
s(g942
I42
g943
Vinsert
p40824
I42
VSimpleName: setPassword
p40825
tp40826
I2
s(g1339
I42
g1340
Vinsert
p40827
I42
VSimpleName: output
p40828
tp40829
I23
s(g4793
I42
g4794
Vinsert
p40830
I45
VStringLiteral: "3"
p40831
tp40832
I1
s(g12768
I42
g12769
Vinsert
p40833
I45
VStringLiteral: "FROM t\u005cn"
p40834
tp40835
I1
s(g4890
I42
g4891
Vinsert
p40836
I60
VVariableDeclarationStatement
p40837
tp40838
I1
s(g14001
I42
g14002
Vinsert
p40839
I42
VSimpleName: MultiConnectionHolder
p40840
tp40841
I1
s(g8075
I42
g8076
Vinsert
p40842
I32
VMethodInvocation
p40843
tp40844
I2
s(g27355
I42
g27356
Vinsert
p40845
I42
VSimpleName: violations
p40846
tp40847
I1
s(g14497
I42
g14498
Vinsert
p40848
I42
VSimpleName: Date
p40849
tp40850
I1
s(g6450
I42
g6451
Vinsert
p40851
I33
VNullLiteral
p40852
tp40853
I2
s(g7031
I42
g7032
Vinsert
p40854
I7
VAssignment: =
p40855
tp40856
I1
s(g40459
I42
g40460
Vinsert
p40857
I13
VCharacterLiteral: '\u005c''
p40858
tp40859
I2
s(g4055
I42
g4056
Vinsert
p40860
I39
VPrimitiveType: int
p40861
tp40862
I1
s(g26739
I42
g26740
Vinsert
p40863
I42
VSimpleName: StringBuilder
p40864
tp40865
I2
s(Vinsert
p40866
I42
VSimpleName: getInstance
p40867
Vinsert
p40868
I42
VSimpleName: FactoryBean
p40869
tp40870
I1
s(g439
I42
g440
Vinsert
p40871
I42
VSimpleName: stringVal
p40872
tp40873
I1
s(Vinsert
p40874
I42
VSimpleName: nextToken
p40875
Vinsert
p40876
I45
VStringLiteral: "STARTING"
p40877
tp40878
I1
s(g4477
I42
g4478
Vinsert
p40879
I45
VStringLiteral: "/**/ \u005ct\u005cn\u005cr\u005cn -- \u005cn#\u005cn"
p40880
tp40881
I1
s(g1022
I42
g1023
Vinsert
p40882
I43
VSimpleType: JdbcXAConnection
p40883
tp40884
I1
s(g11790
I42
g11791
Vinsert
p40885
I32
VMethodInvocation
p40886
tp40887
I1
s(g21686
I42
g21687
Vinsert
p40888
I42
VSimpleName: slave
p40889
tp40890
I2
s(g1415
I42
g1416
Vinsert
p40891
I59
VVariableDeclarationFragment
p40892
tp40893
I2
s(g121
I42
g122
Vinsert
p40894
I42
VSimpleName: stmt
p40895
tp40896
I2
s(g11983
I42
g11984
Vinsert
p40897
I60
VVariableDeclarationStatement
p40898
tp40899
I12
s(g201
I42
g202
Vinsert
p40900
I41
VReturnStatement
p40901
tp40902
I4
s(Vinsert
p40903
I42
VSimpleName: toSQLString
p40904
Vinsert
p40905
I45
VStringLiteral: "\u005cn(280, 'Recreation', DEFAULT, 1700)"
p40906
tp40907
I2
s(g4188
I42
g4189
Vinsert
p40908
I42
VSimpleName: Arrays
p40909
tp40910
I4
s(g35083
I42
g35084
Vinsert
p40911
I21
VExpressionStatement
p40912
tp40913
I80
s(g28698
I42
g28699
Vinsert
p40914
I8
VBlock
p40915
tp40916
I2
s(g2969
I42
g2970
Vinsert
p40917
I83
VModifier: private
p40918
tp40919
I2
s(g4080
I42
g4081
Vinsert
p40920
I40
VQualifiedName: java.sql.Date
p40921
tp40922
I1
s(g7310
I42
g7311
Vinsert
p40923
I59
VVariableDeclarationFragment
p40924
tp40925
I12
s(g6689
I42
g6690
Vinsert
p40926
I32
VMethodInvocation
p40927
tp40928
I166
s(g13042
I42
g13043
Vinsert
p40929
I42
VSimpleName: op
p40930
tp40931
I2
s(g40012
I42
g40013
Vinsert
p40932
I43
VSimpleType: Object
p40933
tp40934
I27
s(g23983
I42
g23984
Vinsert
p40935
I45
VStringLiteral: "\u005ctSUPPLEMENTAL LOG DATA (UNIQUE INDEX) COLUMNS,\u005cn"
p40936
tp40937
I1
s(g19307
I42
g19308
Vinsert
p40938
I42
VSimpleName: ucase
p40939
tp40940
I1
s(g1052
I42
g1053
Vinsert
p40941
I33
VNullLiteral
p40942
tp40943
I2
s(g4640
I42
g4641
Vinsert
p40944
I43
VSimpleType: Exception
p40945
tp40946
I1
s(g24211
I42
g24212
Vinsert
p40947
I32
VMethodInvocation
p40948
tp40949
I3
s(g8324
I42
g8325
Vinsert
p40950
I45
VStringLiteral: "\u005ctREJECT LIMIT UNLIMITED"
p40951
tp40952
I1
s(g2961
I42
g2962
Vinsert
p40953
I83
VModifier: public
p40954
tp40955
I1
s(g32202
I42
g32203
Vinsert
p40956
I45
VStringLiteral: "\u005ct, address, street, number, geom\u005cn"
p40957
tp40958
I1
s(g11051
I42
g11052
Vinsert
p40959
I42
VSimpleName: println
p40960
tp40961
I1
s(g15793
I42
g15794
Vinsert
p40962
I42
VSimpleName: item
p40963
tp40964
I1
s(g18289
I42
g18290
Vinsert
p40965
I42
VSimpleName: log
p40966
tp40967
I3
s(g19924
I42
g19925
Vinsert
p40968
I43
VSimpleType: SQLDeleteBuilder
p40969
tp40970
I1
s(g29966
I42
g29967
Vinsert
p40971
I42
VSimpleName: temp
p40972
tp40973
I1
s(g13569
I42
g13570
Vinsert
p40974
I42
VSimpleName: MySqlUnionQuery
p40975
tp40976
I1
s(Vinsert
p40977
I42
VSimpleName: addAll
p40978
Vinsert
p40979
I45
VStringLiteral: "format.before_comment"
p40980
tp40981
I1
s(g17125
I42
g17126
Vinsert
p40982
I59
VVariableDeclarationFragment
p40983
tp40984
I2
s(g8282
I42
g8283
Vinsert
p40985
I22
VFieldAccess
p40986
tp40987
I1
s(g2829
I42
g2830
Vinsert
p40988
I34
VNumberLiteral: 1L
p40989
tp40990
I1
s(g8269
I42
g8270
Vinsert
p40991
I44
VSingleVariableDeclaration
p40992
tp40993
I4
s(Vinsert
p40994
I42
VSimpleName: createStatement
p40995
Vinsert
p40996
I42
VSimpleName: Statement
p40997
tp40998
I15
s(g21020
I42
g21021
Vinsert
p40999
I42
VSimpleName: formatted
p41000
tp41001
I1
s(g38899
I42
g38900
Vinsert
p41002
I42
VSimpleName: DruidConnectionHolder
p41003
tp41004
I1
s(g1559
I42
g1560
Vinsert
p41005
I21
VExpressionStatement
p41006
tp41007
I6
s(Vinsert
p41008
I42
VSimpleName: nextToken
p41009
Vinsert
p41010
I42
VSimpleName: OdpsListStmt
p41011
tp41012
I2
s(g781
I42
g782
Vinsert
p41013
I36
VParenthesizedExpression
p41014
tp41015
I1
s(g7293
I42
g7294
Vinsert
p41016
I83
VModifier: public
p41017
tp41018
I1
s(g4238
I42
g4239
Vinsert
p41019
I83
VModifier: public
p41020
tp41021
I1
s(g16888
I42
g16889
Vinsert
p41022
I42
VSimpleName: pos
p41023
tp41024
I1
s(g4370
I42
g4371
Vinsert
p41025
I21
VExpressionStatement
p41026
tp41027
I15
s(g8006
I42
g8007
Vinsert
p41028
I31
VMethodDeclaration
p41029
tp41030
I1
s(g28392
I42
g28393
Vinsert
p41031
I39
VPrimitiveType: void
p41032
tp41033
I1
s(g8627
I42
g8628
Vinsert
p41034
I42
VSimpleName: items
p41035
tp41036
I1
s(g1110
I42
g1111
Vinsert
p41037
I45
VStringLiteral: "INNER JOIN tcp_cpr.con_osg3a_headers osg ON c1.contract_config_id = osg.parent_id \u005cn"
p41038
tp41039
I1
s(g5854
I42
g5855
Vinsert
p41040
I42
VSimpleName: token
p41041
tp41042
I1
s(g14426
I42
g14427
Vinsert
p41043
I11
VCastExpression
p41044
tp41045
I2
s(g23093
I42
g23094
Vinsert
p41046
I45
VStringLiteral: "SHARE ROW EXCLUSIVE"
p41047
tp41048
I1
s(Vinsert
p41049
I42
VSimpleName: getRight
p41050
Vinsert
p41051
I42
VSimpleName: SQLUtils
p41052
tp41053
I4
s(g8103
I42
g8104
Vinsert
p41054
I43
VSimpleType: Entry
p41055
tp41056
I1
s(Vinsert
p41057
I42
VSimpleName: assertFalse
p41058
Vinsert
p41059
I42
VSimpleName: tearDown
p41060
tp41061
I1
s(g2372
I42
g2373
Vinsert
p41062
I42
VSimpleName: property
p41063
tp41064
I2
s(g1559
I42
g1560
Vinsert
p41065
I43
VSimpleType: String
p41066
tp41067
I3
s(g13559
I42
g13560
Vinsert
p41068
I42
VSimpleName: Object
p41069
tp41070
I5
s(Vinsert
p41071
I42
VSimpleName: toSQLString
p41072
Vinsert
p41073
I45
VStringLiteral: "GRANT REFERENCES(employee_id),"
p41074
tp41075
I1
s(g3202
I42
g3203
Vinsert
p41076
I60
VVariableDeclarationStatement
p41077
tp41078
I14
s(g5903
I42
g5904
Vinsert
p41079
I25
VIfStatement
p41080
tp41081
I1
s(g18611
I42
g18612
Vinsert
p41082
I43
VSimpleType: DruidDataSourceFactory
p41083
tp41084
I1
s(g4765
I42
g4766
Vinsert
p41085
I42
VSimpleName: scanHexaDecimal
p41086
tp41087
I1
s(g34122
I42
g34123
Vinsert
p41088
I43
VSimpleType: AesDecrypter
p41089
tp41090
I2
s(g16060
I42
g16061
Vinsert
p41091
I52
VThisExpression
p41092
tp41093
I1
s(g29136
I42
g29137
Vinsert
p41094
I42
VSimpleName: x
p41095
tp41096
I1
s(g1516
I42
g1517
Vinsert
p41097
I42
VSimpleName: stmt2
p41098
tp41099
I2
s(g22538
I42
g22539
Vinsert
p41100
I42
VSimpleName: SQLAssignItem
p41101
tp41102
I1
s(g26873
I42
g26874
Vinsert
p41103
I43
VSimpleType: String
p41104
tp41105
I10
s(g6676
I42
g6677
Vinsert
p41106
I27
VInfixExpression: *
p41107
tp41108
I1
s(g23872
I42
g23873
Vinsert
p41109
I43
VSimpleType: SQLASTVisitor
p41110
tp41111
I55
s(g1898
I42
g1899
Vinsert
p41112
I42
VSimpleName: ch
p41113
tp41114
I3
s(Vinsert
p41115
I42
VSimpleName: add
p41116
Vinsert
p41117
I42
VSimpleName: expr
p41118
tp41119
I2
s(g6396
I42
g6397
Vinsert
p41120
I42
VSimpleName: factory
p41121
tp41122
I1
s(g4238
I42
g4239
Vinsert
p41123
I42
VSimpleName: setCursorName
p41124
tp41125
I1
s(Vinsert
p41126
I42
VSimpleName: size
p41127
Vinsert
p41128
I42
VSimpleName: getHintsSize
p41129
tp41130
I4
s(g26592
I42
g26593
Vinsert
p41131
I42
VSimpleName: getResetCount
p41132
tp41133
I1
s(g20548
I42
g20549
Vinsert
p41134
I60
VVariableDeclarationStatement
p41135
tp41136
I2
s(g10808
I42
g10809
Vinsert
p41137
I34
VNumberLiteral: 1000
p41138
tp41139
I1
s(g13808
I42
g13809
Vinsert
p41140
I41
VReturnStatement
p41141
tp41142
I2
s(g6460
I42
g6461
Vinsert
p41143
I45
VStringLiteral: "\u005ct\u005c"KEEP_UNTIL\u005c", \u005cn"
p41144
tp41145
I1
s(g7310
I42
g7311
Vinsert
p41146
I42
VSimpleName: AtomicLong
p41147
tp41148
I22
s(g21982
I42
g21983
Vinsert
p41149
I42
VSimpleName: print0
p41150
tp41151
I2
s(g28042
I42
g28043
Vinsert
p41152
I32
VMethodInvocation
p41153
tp41154
I11
s(g2354
I42
g2355
Vinsert
p41155
I45
VStringLiteral: "\u005ct\u005ctIF x < 3 THEN\u005cn"
p41156
tp41157
I1
s(g336
I42
g337
Vinsert
p41158
I22
VFieldAccess
p41159
tp41160
I1
s(Vinsert
p41161
I42
VSimpleName: mergeSql
p41162
Vinsert
p41163
I32
VMethodInvocation
p41164
tp41165
I3
s(g13986
I42
g13987
Vinsert
p41166
I42
VSimpleName: OracleBinaryFloatExpr
p41167
tp41168
I1
s(g10626
I42
g10627
Vinsert
p41169
I42
VSimpleName: Assert
p41170
tp41171
I2
s(g326
I42
g327
Vinsert
p41172
I45
VStringLiteral: "col.id = dist.sample_column_dist_column_id and \u005cn"
p41173
tp41174
I1
s(g23640
I42
g23641
Vinsert
p41175
I24
VForStatement
p41176
tp41177
I1
s(g28919
I42
g28920
Vinsert
p41178
I42
VSimpleName: String
p41179
tp41180
I2
s(g5638
I42
g5639
Vinsert
p41181
I43
VSimpleType: SQLException
p41182
tp41183
I1
s(Vinsert
p41184
I42
VSimpleName: unwrap
p41185
Vinsert
p41186
I43
VSimpleType: com.mysql.jdbc.Connection
p41187
tp41188
I2
s(g31513
I42
g31514
Vinsert
p41189
I7
VAssignment: =
p41190
tp41191
I3
s(g30842
I42
g30843
Vinsert
p41192
I59
VVariableDeclarationFragment
p41193
tp41194
I2
s(g14452
I42
g14453
Vinsert
p41195
I43
VSimpleType: String
p41196
tp41197
I14
s(g22449
I42
g22450
Vinsert
p41198
I21
VExpressionStatement
p41199
tp41200
I3
s(g13191
I42
g13192
Vinsert
p41201
I45
VStringLiteral: "select 'x'"
p41202
tp41203
I3
s(g23924
I42
g23925
Vinsert
p41204
I42
VSimpleName: dialectStmt
p41205
tp41206
I1
s(g24142
I42
g24143
Vinsert
p41207
I40
VQualifiedName: Token.IDENTIFIER
p41208
tp41209
I1
s(g19749
I42
g19750
Vinsert
p41210
I60
VVariableDeclarationStatement
p41211
tp41212
I1
s(g26124
I42
g26125
Vinsert
p41213
I43
VSimpleType: MySqlMatchAgainstExpr
p41214
tp41215
I1
s(g1868
I42
g1869
Vinsert
p41216
I43
VSimpleType: MockPreparedStatementFactory
p41217
tp41218
I1
s(g34785
I42
g34786
Vinsert
p41219
I42
VSimpleName: SQLIntegerExpr
p41220
tp41221
I1
s(g1198
I42
g1199
Vinsert
p41222
I42
VSimpleName: parseDataType
p41223
tp41224
I3
s(g12209
I42
g12210
Vinsert
p41225
I27
VInfixExpression: ==
p41226
tp41227
I1
s(g12985
I42
g12986
Vinsert
p41228
I42
VSimpleName: test_permitFunction01
p41229
tp41230
I1
s(g9529
I42
g9530
Vinsert
p41231
I60
VVariableDeclarationStatement
p41232
tp41233
I1
s(g4424
I42
g4425
Vinsert
p41234
I42
VSimpleName: assertNotNull
p41235
tp41236
I1
s(g20725
I42
g20726
Vinsert
p41237
I8
VBlock
p41238
tp41239
I1
s(g6343
I42
g6344
Vinsert
p41240
I59
VVariableDeclarationFragment
p41241
tp41242
I2
s(g6257
I42
g6258
Vinsert
p41243
I42
VSimpleName: print
p41244
tp41245
I3
s(g7728
I42
g7729
Vinsert
p41246
I45
VStringLiteral: "\u005cn\u005ctcust_first_name varchar2(20),"
p41247
tp41248
I2
s(g6893
I42
g6894
Vinsert
p41249
I25
VIfStatement
p41250
tp41251
I1
s(g886
I42
g887
Vinsert
p41252
I8
VBlock
p41253
tp41254
I1
s(g25594
I42
g25595
Vinsert
p41255
I8
VBlock
p41256
tp41257
I3
s(g9554
I42
g9555
Vinsert
p41258
I34
VNumberLiteral: 13
p41259
tp41260
I1
s(g20439
I42
g20440
Vinsert
p41261
I27
VInfixExpression: <
p41262
tp41263
I1
s(g2722
I42
g2723
Vinsert
p41264
I42
VSimpleName: stmt
p41265
tp41266
I1
s(g15485
I42
g15486
Vinsert
p41267
I53
VThrowStatement
p41268
tp41269
I1
s(Vinsert
p41270
I42
VSimpleName: accept
p41271
Vinsert
p41272
I45
VStringLiteral: "skip "
p41273
tp41274
I1
s(g2439
I42
g2440
Vinsert
p41275
I42
VSimpleName: String
p41276
tp41277
I10
s(g351
I42
g352
Vinsert
p41278
I42
VSimpleName: lastValidIdleMillis
p41279
tp41280
I1
s(g8222
I42
g8223
Vinsert
p41281
I34
VNumberLiteral: 32
p41282
tp41283
I1
s(g30364
I42
g30365
Vinsert
p41284
I45
VStringLiteral: "\u005cnand flag & 127 > 0 -- comment kkkkk"
p41285
tp41286
I1
s(g12133
I42
g12134
Vinsert
p41287
I34
VNumberLiteral: 13
p41288
tp41289
I1
s(g20470
I42
g20471
Vinsert
p41290
I59
VVariableDeclarationFragment
p41291
tp41292
I4
s(g9142
I42
g9143
Vinsert
p41293
I34
VNumberLiteral: 2
p41294
tp41295
I2
s(Vinsert
p41296
I42
VSimpleName: token
p41297
Vinsert
p41298
I42
VSimpleName: getTableNames
p41299
tp41300
I1
s(g11795
I42
g11796
Vinsert
p41301
I43
VSimpleType: SQLException
p41302
tp41303
I1
s(g8277
I42
g8278
Vinsert
p41304
I42
VSimpleName: strings
p41305
tp41306
I4
s(g10074
I42
g10075
Vinsert
p41307
I42
VSimpleName: insertRow
p41308
tp41309
I1
s(g5297
I42
g5298
Vinsert
p41310
I42
VSimpleName: PGTypeCastExpr
p41311
tp41312
I1
s(g1279
I42
g1280
Vinsert
p41313
I59
VVariableDeclarationFragment
p41314
tp41315
I1
s(g957
I42
g958
Vinsert
p41316
I45
VStringLiteral: " set default "
p41317
tp41318
I1
s(g4447
I42
g4448
Vinsert
p41319
I42
VSimpleName: getConfig
p41320
tp41321
I1
s(g16927
I42
g16928
Vinsert
p41322
I42
VSimpleName: sequenceService
p41323
tp41324
I2
s(g3921
I42
g3922
Vinsert
p41325
I42
VSimpleName: SQLSelectQueryBlock
p41326
tp41327
I5
s(g5936
I42
g5937
Vinsert
p41328
I45
VStringLiteral: "\u005ctand prov in (select prov\u005cn"
p41329
tp41330
I1
s(g13607
I42
g13608
Vinsert
p41331
I27
VInfixExpression: ||
p41332
tp41333
I3
s(g20100
I42
g20101
Vinsert
p41334
I42
VSimpleName: token
p41335
tp41336
I2
s(g5384
I42
g5385
Vinsert
p41337
I42
VSimpleName: SQLInsertStatement
p41338
tp41339
I2
s(g30105
I42
g30106
Vinsert
p41340
I21
VExpressionStatement
p41341
tp41342
I4
s(g2765
I42
g2766
Vinsert
p41343
I4
VArrayInitializer
p41344
tp41345
I3
s(g6893
I42
g6894
Vinsert
p41346
I27
VInfixExpression: &&
p41347
tp41348
I1
s(g15407
I42
g15408
Vinsert
p41349
I42
VSimpleName: x
p41350
tp41351
I2
s(g9380
I42
g9381
Vinsert
p41352
I43
VSimpleType: List
p41353
tp41354
I1
s(g18270
I42
g18271
Vinsert
p41355
I8
VBlock
p41356
tp41357
I1
s(Vinsert
p41358
I42
VSimpleName: expr
p41359
Vinsert
p41360
I43
VSimpleType: MySqlIntervalExpr
p41361
tp41362
I1
s(g9428
I42
g9429
Vinsert
p41363
I26
VImportDeclaration
p41364
tp41365
I9
s(g5470
I42
g5471
Vinsert
p41366
I32
VMethodInvocation
p41367
tp41368
I4
s(g3608
I42
g3609
Vinsert
p41369
I14
VClassInstanceCreation
p41370
tp41371
I1
s(g11474
I42
g11475
Vinsert
p41372
I59
VVariableDeclarationFragment
p41373
tp41374
I13
s(g7769
I42
g7770
Vinsert
p41375
I42
VSimpleName: rs
p41376
tp41377
I3
s(g22647
I42
g22648
Vinsert
p41378
I45
VStringLiteral: "\u005ctstart_line,\u005cn"
p41379
tp41380
I1
s(g18573
I42
g18574
Vinsert
p41381
I43
VSimpleType: TableStat
p41382
tp41383
I1
s(g11307
I42
g11308
Vinsert
p41384
I42
VSimpleName: List
p41385
tp41386
I1
s(g24206
I42
g24207
Vinsert
p41387
I45
VStringLiteral: "\u005ct\u005ctTABLESPACE HASH_TS02, \u005cn"
p41388
tp41389
I1
s(g5123
I42
g5124
Vinsert
p41390
I11
VCastExpression
p41391
tp41392
I1
s(Vinsert
p41393
I42
VSimpleName: expr
p41394
Vinsert
p41395
I42
VSimpleName: SQLAggregateExpr
p41396
tp41397
I2
s(g2586
I42
g2587
Vinsert
p41398
I42
VSimpleName: Field
p41399
tp41400
I3
s(g7777
I42
g7778
Vinsert
p41401
I42
VSimpleName: sqlStat
p41402
tp41403
I1
s(g11236
I42
g11237
Vinsert
p41404
I42
VSimpleName: tableSrc
p41405
tp41406
I1
s(g3139
I42
g3140
Vinsert
p41407
I42
VSimpleName: K
p41408
tp41409
I1
s(g4543
I42
g4544
Vinsert
p41410
I42
VSimpleName: symbol
p41411
tp41412
I2
s(g11585
I42
g11586
Vinsert
p41413
I32
VMethodInvocation
p41414
tp41415
I1
s(g7986
I42
g7987
Vinsert
p41416
I25
VIfStatement
p41417
tp41418
I3
s(g35577
I42
g35578
Vinsert
p41419
I42
VSimpleName: schema
p41420
tp41421
I1
s(g763
I42
g764
Vinsert
p41422
I42
VSimpleName: varItem
p41423
tp41424
I1
s(g39764
I42
g39765
Vinsert
p41425
I34
VNumberLiteral: 1
p41426
tp41427
I3
s(g7542
I42
g7543
Vinsert
p41428
I8
VBlock
p41429
tp41430
I1
s(g10731
I42
g10732
Vinsert
p41431
I34
VNumberLiteral: 1
p41432
tp41433
I1
s(g14402
I42
g14403
Vinsert
p41434
I42
VSimpleName: DataSourceInfo
p41435
tp41436
I1
s(g28559
I42
g28560
Vinsert
p41437
I7
VAssignment: *=
p41438
tp41439
I1
s(g25735
I42
g25736
Vinsert
p41440
I42
VSimpleName: showCreateTableStmt
p41441
tp41442
I2
s(g5554
I42
g5555
Vinsert
p41443
I42
VSimpleName: reader
p41444
tp41445
I1
s(g21147
I42
g21148
Vinsert
p41446
I34
VNumberLiteral: 301
p41447
tp41448
I1
s(g2243
I42
g2244
Vinsert
p41449
I9
VBooleanLiteral: true
p41450
tp41451
I1
s(g9150
I42
g9151
Vinsert
p41452
I42
VSimpleName: tearDown
p41453
tp41454
I1
s(g16899
I42
g16900
Vinsert
p41455
I42
VSimpleName: ident
p41456
tp41457
I1
s(g7073
I42
g7074
Vinsert
p41458
I7
VAssignment: =
p41459
tp41460
I2
s(g5882
I42
g5883
Vinsert
p41461
I59
VVariableDeclarationFragment
p41462
tp41463
I1
s(g7091
I42
g7092
Vinsert
p41464
I42
VSimpleName: dataSource
p41465
tp41466
I2
s(Vinsert
p41467
I42
VSimpleName: hashCode
p41468
Vinsert
p41469
I42
VSimpleName: from
p41470
tp41471
I2
s(g876
I42
g877
Vinsert
p41472
I45
VStringLiteral: "STORE AS ORC;"
p41473
tp41474
I1
s(g3098
I42
g3099
Vinsert
p41475
I42
VSimpleName: WallProvider
p41476
tp41477
I35
s(g4467
I42
g4468
Vinsert
p41478
I42
VSimpleName: SQLIntegerExpr
p41479
tp41480
I1
s(Vinsert
p41481
I42
VSimpleName: setParent
p41482
Vinsert
p41483
I42
VSimpleName: setFirst
p41484
tp41485
I1
s(g10702
I42
g10703
Vinsert
p41486
I42
VSimpleName: lastIndexOf
p41487
tp41488
I1
s(g23798
I42
g23799
Vinsert
p41489
I42
VSimpleName: getMaxWaitThreadCount
p41490
tp41491
I1
s(g16354
I42
g16355
Vinsert
p41492
I8
VBlock
p41493
tp41494
I2
s(g32350
I42
g32351
Vinsert
p41495
I42
VSimpleName: methodInvokeExp
p41496
tp41497
I2
s(g15367
I42
g15368
Vinsert
p41498
I32
VMethodInvocation
p41499
tp41500
I6
s(g25616
I42
g25617
Vinsert
p41501
I45
VStringLiteral: "\u005ct, utl_raw.cast_to_raw(IS_RENEW_UPGRADE) AS IS_RENEW_UPGRADE, CATEGORY_ID_1, CATEGORY_ID_2, FIRST_RECEIPT_DATE, utl_raw.cast_to_raw(RECEIPT_REMARK) AS RECEIPT_REMARK\u005cn"
p41502
tp41503
I1
s(g17035
I42
g17036
Vinsert
p41504
I42
VSimpleName: updateCount
p41505
tp41506
I1
s(g19626
I42
g19627
Vinsert
p41507
I45
VStringLiteral: "FROM employees\u005cn"
p41508
tp41509
I2
s(g25683
I42
g25684
Vinsert
p41510
I42
VSimpleName: SQLIdentifierExpr
p41511
tp41512
I3
s(g18573
I42
g18574
Vinsert
p41513
I42
VSimpleName: getTableStat
p41514
tp41515
I1
s(Vinsert
p41516
I42
VSimpleName: getNumber
p41517
Vinsert
p41518
I42
VSimpleName: param
p41519
tp41520
I2
s(Vinsert
p41521
I42
VSimpleName: accept
p41522
Vinsert
p41523
I42
VSimpleName: MySqlOutputVisitor
p41524
tp41525
I1
s(g39695
I42
g39696
Vinsert
p41526
I83
VModifier: public
p41527
tp41528
I1
s(g13617
I42
g13618
Vinsert
p41529
I21
VExpressionStatement
p41530
tp41531
I1
s(g3417
I42
g3418
Vinsert
p41532
I8
VBlock
p41533
tp41534
I6
s(g1559
I42
g1560
Vinsert
p41535
I32
VMethodInvocation
p41536
tp41537
I3
s(g17245
I42
g17246
Vinsert
p41538
I43
VSimpleType: RuntimeException
p41539
tp41540
I1
s(Vinsert
p41541
I42
VSimpleName: getMethodName
p41542
Vinsert
p41543
I42
VSimpleName: expr
p41544
tp41545
I5
s(g13659
I42
g13660
Vinsert
p41546
I43
VSimpleType: Exception
p41547
tp41548
I9
s(g11691
I42
g11692
Vinsert
p41549
I42
VSimpleName: SQLSelectQueryBlock
p41550
tp41551
I1
s(g7052
I42
g7053
Vinsert
p41552
I42
VSimpleName: pos
p41553
tp41554
I1
s(g9969
I42
g9970
Vinsert
p41555
I42
VSimpleName: SQLBlockStatement
p41556
tp41557
I2
s(g5554
I42
g5555
Vinsert
p41558
I42
VSimpleName: Reader
p41559
tp41560
I1
s(g11524
I42
g11525
Vinsert
p41561
I7
VAssignment: =
p41562
tp41563
I2
s(Vinsert
p41564
I42
VSimpleName: size
p41565
Vinsert
p41566
I42
VSimpleName: getWhiteList
p41567
tp41568
I1
s(g14640
I42
g14641
Vinsert
p41569
I42
VSimpleName: config
p41570
tp41571
I2
s(g24526
I42
g24527
Vinsert
p41572
I42
VSimpleName: StatementProxy
p41573
tp41574
I1
s(g34468
I42
g34469
Vinsert
p41575
I42
VSimpleName: containsKey
p41576
tp41577
I1
s(Vinsert
p41578
I42
VSimpleName: get
p41579
Vinsert
p41580
I42
VSimpleName: dataSource
p41581
tp41582
I2
s(g19875
I42
g19876
Vinsert
p41583
I27
VInfixExpression: ==
p41584
tp41585
I1
s(g4457
I42
g4458
Vinsert
p41586
I33
VNullLiteral
p41587
tp41588
I1
s(Vinsert
p41589
I42
VSimpleName: nextToken
p41590
Vinsert
p41591
I42
VSimpleName: List
p41592
tp41593
I1
s(g5643
I42
g5644
Vinsert
p41594
I59
VVariableDeclarationFragment
p41595
tp41596
I2
s(g3765
I42
g3766
Vinsert
p41597
I45
VStringLiteral: "\u005cn FROM fund_base_cv_ad_auction_ocr_pv_tfs a"
p41598
tp41599
I1
s(g25641
I42
g25642
Vinsert
p41600
I42
VSimpleName: listeners
p41601
tp41602
I4
s(Vinsert
p41603
I42
VSimpleName: println
p41604
Vinsert
p41605
I45
VStringLiteral: "*           Druid \u52a0\u5bc6\u5de5\u5177            *"
p41606
tp41607
I1
s(g8277
I42
g8278
Vinsert
p41608
I44
VSingleVariableDeclaration
p41609
tp41610
I4
s(g6275
I42
g6276
Vinsert
p41611
I42
VSimpleName: createStatement
p41612
tp41613
I8
s(g8588
I42
g8589
Vinsert
p41614
I42
VSimpleName: provider
p41615
tp41616
I145
s(g12985
I42
g12986
Vinsert
p41617
I32
VMethodInvocation
p41618
tp41619
I8
s(g1642
I42
g1643
Vinsert
p41620
I52
VThisExpression
p41621
tp41622
I2
s(g5356
I42
g5357
Vinsert
p41623
I27
VInfixExpression: ==
p41624
tp41625
I19
s(g14765
I42
g14766
Vinsert
p41626
I44
VSingleVariableDeclaration
p41627
tp41628
I2
s(g29367
I42
g29368
Vinsert
p41629
I45
VStringLiteral: "\u005cn\u005ct\u005ctleft join acduser.vw_sc_kreis_code_lv2 f on e.xzqh = f.short_kreis_code "
p41630
tp41631
I1
s(g21577
I42
g21578
Vinsert
p41632
I42
VSimpleName: functionStatValue
p41633
tp41634
I1
s(Vinsert
p41635
I42
VSimpleName: assertEquals
p41636
Vinsert
p41637
I45
VStringLiteral: "\u005cn\u005ctPARTITION p3 VALUES LESS THAN MAXVALUE"
p41638
tp41639
I2
s(Vinsert
p41640
I42
VSimpleName: setExpr
p41641
Vinsert
p41642
I42
VSimpleName: SQLCheck
p41643
tp41644
I4
s(g14348
I42
g14349
Vinsert
p41645
I42
VSimpleName: lexer
p41646
tp41647
I1
s(g9670
I42
g9671
Vinsert
p41648
I42
VSimpleName: get
p41649
tp41650
I140
s(g25268
I42
g25269
Vinsert
p41651
I45
VStringLiteral: "select id from t"
p41652
tp41653
I1
s(g6187
I42
g6188
Vinsert
p41654
I45
VStringLiteral: "\u005ct\u005c"IND_BY_ALL\u005c", \u005cn"
p41655
tp41656
I1
s(g7602
I42
g7603
Vinsert
p41657
I42
VSimpleName: MySqlUnionQuery
p41658
tp41659
I1
s(Vinsert
p41660
I42
VSimpleName: shrink
p41661
Vinsert
p41662
I42
VSimpleName: shrink
p41663
tp41664
I1
s(g40724
I42
g40725
Vinsert
p41665
I45
VStringLiteral: " IDENTIFIED BY "
p41666
tp41667
I1
s(g30670
I42
g30671
Vinsert
p41668
I45
VStringLiteral: "NONE"
p41669
tp41670
I1
s(g11920
I42
g11921
Vinsert
p41671
I21
VExpressionStatement
p41672
tp41673
I2
s(g23854
I42
g23855
Vinsert
p41674
I42
VSimpleName: unwrap
p41675
tp41676
I1
s(g86
I42
g87
Vinsert
p41677
I42
VSimpleName: MySqlSetTransactionIsolationLevelStatement
p41678
tp41679
I1
s(g9657
I42
g9658
Vinsert
p41680
I45
VStringLiteral: "=test1"
p41681
tp41682
I1
s(g8828
I42
g8829
Vinsert
p41683
I42
VSimpleName: stmt
p41684
tp41685
I2
s(g14234
I42
g14235
Vinsert
p41686
I43
VSimpleType: SQLException
p41687
tp41688
I1
s(g29672
I42
g29673
Vinsert
p41689
I42
VSimpleName: MySqlCreateTableStatement
p41690
tp41691
I2
s(g18601
I42
g18602
Vinsert
p41692
I43
VSimpleType: SQLIdentifierExpr
p41693
tp41694
I1
s(g28347
I42
g28348
Vinsert
p41695
I42
VSimpleName: owner
p41696
tp41697
I1
s(g146
I42
g147
Vinsert
p41698
I42
VSimpleName: countQueryBlock
p41699
tp41700
I2
s(g6359
I42
g6360
Vinsert
p41701
I42
VSimpleName: print
p41702
tp41703
I1
s(g18907
I42
g18908
Vinsert
p41704
I45
VStringLiteral: "        ADD COLUMN variation_value_3 DECIMAL(30, 20) NULL DEFAULT NULL,\u005cn"
p41705
tp41706
I1
s(g16080
I42
g16081
Vinsert
p41707
I45
VStringLiteral: "not support multi-statement :"
p41708
tp41709
I2
s(g19461
I42
g19462
Vinsert
p41710
I32
VMethodInvocation
p41711
tp41712
I12
s(g5946
I42
g5947
Vinsert
p41713
I42
VSimpleName: iface
p41714
tp41715
I1
s(g10869
I42
g10870
Vinsert
p41716
I44
VSingleVariableDeclaration
p41717
tp41718
I2
s(g2682
I42
g2683
Vinsert
p41719
I70
VEnhancedForStatement
p41720
tp41721
I5
s(g13239
I42
g13240
Vinsert
p41722
I42
VSimpleName: next
p41723
tp41724
I2
s(Vinsert
p41725
I42
VSimpleName: createSchemaStatVisitor
p41726
Vinsert
p41727
I42
VSimpleName: Assert
p41728
tp41729
I4
s(g9006
I42
g9007
Vinsert
p41730
I54
VTryStatement
p41731
tp41732
I5
s(g18531
I42
g18532
Vinsert
p41733
I21
VExpressionStatement
p41734
tp41735
I5
s(g1
I42
g2
Vinsert
p41736
I42
VSimpleName: sql
p41737
tp41738
I1
s(g2795
I42
g2796
Vinsert
p41739
I24
VForStatement
p41740
tp41741
I1
s(g25594
I42
g25595
Vinsert
p41742
I27
VInfixExpression: !=
p41743
tp41744
I1
s(Vinsert
p41745
I42
VSimpleName: getDriverClassName
p41746
Vinsert
p41747
I42
VSimpleName: String
p41748
tp41749
I1
s(g7216
I42
g7217
Vinsert
p41750
I74
VParameterizedType: ArrayList<Object>
p41751
tp41752
I1
s(g18512
I42
g18513
Vinsert
p41753
I43
VSimpleType: SQLName
p41754
tp41755
I5
s(g19278
I42
g19279
Vinsert
p41756
I8
VBlock
p41757
tp41758
I1
s(g35034
I42
g35035
Vinsert
p41759
I21
VExpressionStatement
p41760
tp41761
I2
s(g2228
I42
g2229
Vinsert
p41762
I42
VSimpleName: visit
p41763
tp41764
I1
s(g22163
I42
g22164
Vinsert
p41765
I21
VExpressionStatement
p41766
tp41767
I1
s(g9559
I42
g9560
Vinsert
p41768
I42
VSimpleName: resultSet
p41769
tp41770
I2
s(g8499
I42
g8500
Vinsert
p41771
I83
VModifier: public
p41772
tp41773
I1
s(g9397
I42
g9398
Vinsert
p41774
I42
VSimpleName: stmt
p41775
tp41776
I1
s(g13001
I42
g13002
Vinsert
p41777
I27
VInfixExpression: !=
p41778
tp41779
I1
s(g1100
I42
g1101
Vinsert
p41780
I42
VSimpleName: testDecrypt
p41781
tp41782
I1
s(g4956
I42
g4957
Vinsert
p41783
I42
VSimpleName: accept
p41784
tp41785
I1
s(g5528
I42
g5529
Vinsert
p41786
I21
VExpressionStatement
p41787
tp41788
I1
s(g2029
I42
g2030
Vinsert
p41789
I32
VMethodInvocation
p41790
tp41791
I36
s(g5379
I42
g5380
Vinsert
p41792
I83
VModifier: protected
p41793
tp41794
I2
s(g2895
I42
g2896
Vinsert
p41795
I42
VSimpleName: SQLShowTablesStatement
p41796
tp41797
I1
s(g7507
I42
g7508
Vinsert
p41798
I42
VSimpleName: EvalMethodNowTest
p41799
tp41800
I1
s(g12095
I42
g12096
Vinsert
p41801
I45
VStringLiteral: "\u005cn\u005ct\u005c"USER_LOGIN\u005c" VARCHAR2(40 BYTE),"
p41802
tp41803
I2
s(g1352
I42
g1353
Vinsert
p41804
I60
VVariableDeclarationStatement
p41805
tp41806
I1
s(g19283
I42
g19284
Vinsert
p41807
I59
VVariableDeclarationFragment
p41808
tp41809
I1
s(g532
I42
g533
Vinsert
p41810
I43
VSimpleType: ParserException
p41811
tp41812
I1
s(g29718
I42
g29719
Vinsert
p41813
I45
VStringLiteral: "\u005cnNOCOMPRESS"
p41814
tp41815
I5
s(g38956
I42
g38957
Vinsert
p41816
I42
VSimpleName: right
p41817
tp41818
I2
s(Vinsert
p41819
I42
VSimpleName: getExpr
p41820
Vinsert
p41821
I43
VSimpleType: OracleMethodInvokeStatement
p41822
tp41823
I1
s(Vinsert
p41824
I42
VSimpleName: replaceAll
p41825
Vinsert
p41826
I45
VStringLiteral: "[[1200000,1250000]]"
p41827
tp41828
I1
s(g25339
I42
g25340
Vinsert
p41829
I42
VSimpleName: sqlLimit
p41830
tp41831
I1
s(g9969
I42
g9970
Vinsert
p41832
I43
VSimpleType: SQLBlockStatement
p41833
tp41834
I2
s(g25108
I42
g25109
Vinsert
p41835
I40
VQualifiedName: Token.DATABASE
p41836
tp41837
I1
s(g1486
I42
g1487
Vinsert
p41838
I42
VSimpleName: PGTypeCastExpr
p41839
tp41840
I2
s(g26789
I42
g26790
Vinsert
p41841
I32
VMethodInvocation
p41842
tp41843
I365
s(g11601
I42
g11602
Vinsert
p41844
I21
VExpressionStatement
p41845
tp41846
I2
s(g7960
I42
g7961
Vinsert
p41847
I39
VPrimitiveType: int
p41848
tp41849
I1
s(Vinsert
p41850
I42
VSimpleName: addAll
p41851
Vinsert
p41852
I42
VSimpleName: WallSqlStat
p41853
tp41854
I1
s(g1289
I42
g1290
Vinsert
p41855
I44
VSingleVariableDeclaration
p41856
tp41857
I2
s(g23501
I42
g23502
Vinsert
p41858
I40
VQualifiedName: FNVUtils.CURRENT_TIMESTAMP
p41859
tp41860
I1
s(g5864
I42
g5865
Vinsert
p41861
I42
VSimpleName: searchClause
p41862
tp41863
I1
s(g5926
I42
g5927
Vinsert
p41864
I42
VSimpleName: mainSplit
p41865
tp41866
I1
s(g1410
I42
g1411
Vinsert
p41867
I25
VIfStatement
p41868
tp41869
I1
s(g12034
I42
g12035
Vinsert
p41870
I39
VPrimitiveType: int
p41871
tp41872
I1
s(g23689
I42
g23690
Vinsert
p41873
I42
VSimpleName: Lexer
p41874
tp41875
I1
s(Vinsert
p41876
I42
VSimpleName: getDataSource
p41877
Vinsert
p41878
I42
VSimpleName: incrementPreparedStatementCount
p41879
tp41880
I4
s(g24102
I42
g24103
Vinsert
p41881
I32
VMethodInvocation
p41882
tp41883
I5
s(g20456
I42
g20457
Vinsert
p41884
I43
VSimpleType: String
p41885
tp41886
I2
s(g13201
I42
g13202
Vinsert
p41887
I33
VNullLiteral
p41888
tp41889
I1
s(g9397
I42
g9398
Vinsert
p41890
I59
VVariableDeclarationFragment
p41891
tp41892
I1
s(g32188
I42
g32189
Vinsert
p41893
I31
VMethodDeclaration
p41894
tp41895
I2
s(Vinsert
p41896
I42
VSimpleName: createOutputVisitor
p41897
Vinsert
p41898
I42
VSimpleName: outputVisitor
p41899
tp41900
I1
s(g7746
I42
g7747
Vinsert
p41901
I43
VSimpleType: String
p41902
tp41903
I1
s(g1185
I42
g1186
Vinsert
p41904
I42
VSimpleName: MySqlShowPluginsStatement
p41905
tp41906
I1
s(g1261
I42
g1262
Vinsert
p41907
I42
VSimpleName: bracket
p41908
tp41909
I1
s(g26873
I42
g26874
Vinsert
p41910
I45
VStringLiteral: "jdbc:log4jdbc:derby://localhost:1527//db-derby-10.2.2.0-bin/databases/MyDatabase"
p41911
tp41912
I1
s(Vinsert
p41913
I42
VSimpleName: nextToken
p41914
Vinsert
p41915
I42
VSimpleName: setCommentHandler
p41916
tp41917
I1
s(g34716
I42
g34717
Vinsert
p41918
I42
VSimpleName: pos
p41919
tp41920
I2
s(g12859
I42
g12860
Vinsert
p41921
I40
VQualifiedName: Token.AT
p41922
tp41923
I1
s(g4268
I42
g4269
Vinsert
p41924
I42
VSimpleName: getTriggerType
p41925
tp41926
I1
s(Vinsert
p41927
I42
VSimpleName: setRowCount
p41928
Vinsert
p41929
I45
VStringLiteral: "OFFSET"
p41930
tp41931
I1
s(g16375
I42
g16376
Vinsert
p41932
I25
VIfStatement
p41933
tp41934
I1
s(g9433
I42
g9434
Vinsert
p41935
I34
VNumberLiteral: 1000
p41936
tp41937
I1
s(g27276
I42
g27277
Vinsert
p41938
I43
VSimpleType: NumberFormatException
p41939
tp41940
I1
s(g21499
I42
g21500
Vinsert
p41941
I21
VExpressionStatement
p41942
tp41943
I1
s(g24072
I42
g24073
Vinsert
p41944
I42
VSimpleName: toString
p41945
tp41946
I1
s(g28056
I42
g28057
Vinsert
p41947
I45
VStringLiteral: "DELETE /*+ INDEX(t1 i1) */ FROM t1"
p41948
tp41949
I1
s(g13740
I42
g13741
Vinsert
p41950
I45
VStringLiteral: "jdbc:ingres:"
p41951
tp41952
I2
s(g25556
I42
g25557
Vinsert
p41953
I25
VIfStatement
p41954
tp41955
I4
s(g9559
I42
g9560
Vinsert
p41956
I42
VSimpleName: HBaseResultSet
p41957
tp41958
I1
s(g316
I42
g317
Vinsert
p41959
I74
VParameterizedType: Iterator<Map.Entry<String,JdbcSqlStat>>
p41960
tp41961
I1
s(g9519
I42
g9520
Vinsert
p41962
I25
VIfStatement
p41963
tp41964
I1
s(g9603
I42
g9604
Vinsert
p41965
I45
VStringLiteral: "WITH"
p41966
tp41967
I1
s(g4694
I42
g4695
Vinsert
p41968
I45
VStringLiteral: "\u005ct)\u005cn"
p41969
tp41970
I8
s(g4908
I42
g4909
Vinsert
p41971
I42
VSimpleName: SQLStatement
p41972
tp41973
I175
s(g4931
I42
g4932
Vinsert
p41974
I25
VIfStatement
p41975
tp41976
I3
s(g40052
I42
g40053
Vinsert
p41977
I42
VSimpleName: getName
p41978
tp41979
I1
s(g8716
I42
g8717
Vinsert
p41980
I45
VStringLiteral: "Histogram"
p41981
tp41982
I1
s(g9017
I42
g9018
Vinsert
p41983
I25
VIfStatement
p41984
tp41985
I4
s(g12801
I42
g12802
Vinsert
p41986
I43
VSimpleType: MySqlDescribeStatement
p41987
tp41988
I2
s(g1883
I42
g1884
Vinsert
p41989
I42
VSimpleName: Override
p41990
tp41991
I1
s(g5729
I42
g5730
Vinsert
p41992
I32
VMethodInvocation
p41993
tp41994
I12
s(g13881
I42
g13882
Vinsert
p41995
I8
VBlock
p41996
tp41997
I2
s(g8465
I42
g8466
Vinsert
p41998
I42
VSimpleName: println
p41999
tp42000
I1
s(g18219
I42
g18220
Vinsert
p42001
I42
VSimpleName: subPartitionsCount
p42002
tp42003
I4
s(g9137
I42
g9138
Vinsert
p42004
I8
VBlock
p42005
tp42006
I1
s(g12776
I42
g12777
Vinsert
p42007
I32
VMethodInvocation
p42008
tp42009
I2
s(g33917
I42
g33918
Vinsert
p42010
I45
VStringLiteral: "\u005ctcol1, \u005cn"
p42011
tp42012
I1
s(Vinsert
p42013
I42
VSimpleName: statement_getResultSet
p42014
Vinsert
p42015
I21
VExpressionStatement
p42016
tp42017
I1
s(Vinsert
p42018
I42
VSimpleName: assertEquals
p42019
Vinsert
p42020
I42
VSimpleName: test_coalesce
p42021
tp42022
I1
s(g21585
I42
g21586
Vinsert
p42023
I42
VSimpleName: size
p42024
tp42025
I25
s(g17747
I42
g17748
Vinsert
p42026
I42
VSimpleName: AtomicReference
p42027
tp42028
I2
s(g5226
I42
g5227
Vinsert
p42029
I43
VSimpleType: SQLException
p42030
tp42031
I1
s(Vinsert
p42032
I42
VSimpleName: assertEquals
p42033
Vinsert
p42034
I45
VStringLiteral: "\u005cnselect 2 from t2"
p42035
tp42036
I1
s(g10532
I42
g10533
Vinsert
p42037
I42
VSimpleName: WallCheckResult
p42038
tp42039
I2
s(g19323
I42
g19324
Vinsert
p42040
I42
VSimpleName: DataSourceInfo
p42041
tp42042
I2
s(g12222
I42
g12223
Vinsert
p42043
I42
VSimpleName: MySqlShowRelayLogEventsStatement
p42044
tp42045
I1
s(g22826
I42
g22827
Vinsert
p42046
I16
VConditionalExpression
p42047
tp42048
I1
s(g4293
I42
g4294
Vinsert
p42049
I32
VMethodInvocation
p42050
tp42051
I2
s(g34804
I42
g34805
Vinsert
p42052
I42
VSimpleName: setUp
p42053
tp42054
I2
s(g23839
I42
g23840
Vinsert
p42055
I43
VSimpleType: SQLException
p42056
tp42057
I1
s(g29839
I42
g29840
Vinsert
p42058
I25
VIfStatement
p42059
tp42060
I1
s(g17266
I42
g17267
Vinsert
p42061
I42
VSimpleName: checkParameterize
p42062
tp42063
I2
s(g23293
I42
g23294
Vinsert
p42064
I42
VSimpleName: Assert
p42065
tp42066
I16
s(g11935
I42
g11936
Vinsert
p42067
I42
VSimpleName: setExpr
p42068
tp42069
I1
s(g6866
I42
g6867
Vinsert
p42070
I42
VSimpleName: SQLExistsExpr
p42071
tp42072
I1
s(g31291
I42
g31292
Vinsert
p42073
I42
VSimpleName: ucase
p42074
tp42075
I1
s(g8528
I42
g8529
Vinsert
p42076
I43
VSimpleType: SchemaObject
p42077
tp42078
I2
s(g4584
I42
g4585
Vinsert
p42079
I42
VSimpleName: getName
p42080
tp42081
I2
s(g29042
I42
g29043
Vinsert
p42082
I83
VModifier: private
p42083
tp42084
I1
s(g1198
I42
g1199
Vinsert
p42085
I42
VSimpleName: SQLTransformUtils
p42086
tp42087
I3
s(g40651
I42
g40652
Vinsert
p42088
I42
VSimpleName: countDown
p42089
tp42090
I1
s(g12095
I42
g12096
Vinsert
p42091
I45
VStringLiteral: "\u005cn\u005ct\u005c"ACTIVE_RULE_ID\u005c" NUMBER(38, 0),"
p42092
tp42093
I2
s(g3432
I42
g3433
Vinsert
p42094
I42
VSimpleName: setNumTestsPerEvictionRun
p42095
tp42096
I1
s(Vinsert
p42097
I42
VSimpleName: getConditions
p42098
Vinsert
p42099
I34
VNumberLiteral: 0
p42100
tp42101
I5
s(g3401
I42
g3402
Vinsert
p42102
I21
VExpressionStatement
p42103
tp42104
I12
s(g5460
I42
g5461
Vinsert
p42105
I27
VInfixExpression: -
p42106
tp42107
I1
s(g2852
I42
g2853
Vinsert
p42108
I21
VExpressionStatement
p42109
tp42110
I1
s(g13483
I42
g13484
Vinsert
p42111
I43
VSimpleType: SQLListExpr
p42112
tp42113
I2
s(Vinsert
p42114
I42
VSimpleName: add
p42115
Vinsert
p42116
I1
VAnonymousClassDeclaration
p42117
tp42118
I1
s(g3490
I42
g3491
Vinsert
p42119
I40
VQualifiedName: TriggerEvent.INSERT
p42120
tp42121
I1
s(g18005
I42
g18006
Vinsert
p42122
I45
VStringLiteral: "\u005cnCREATE TABLE `item_similarity` ("
p42123
tp42124
I1
s(g6046
I42
g6047
Vinsert
p42125
I45
VStringLiteral: " AS ("
p42126
tp42127
I1
s(g13303
I42
g13304
Vinsert
p42128
I45
VStringLiteral: " into ("
p42129
tp42130
I1
s(g16831
I42
g16832
Vinsert
p42131
I45
VStringLiteral: "ONLY"
p42132
tp42133
I1
s(g20548
I42
g20549
Vinsert
p42134
I42
VSimpleName: threadId
p42135
tp42136
I1
s(g2393
I42
g2394
Vinsert
p42137
I21
VExpressionStatement
p42138
tp42139
I5
s(g3480
I42
g3481
Vinsert
p42140
I22
VFieldAccess
p42141
tp42142
I2
s(g5685
I42
g5686
Vinsert
p42143
I60
VVariableDeclarationStatement
p42144
tp42145
I1
s(g27644
I42
g27645
Vinsert
p42146
I42
VSimpleName: HMapping
p42147
tp42148
I1
s(Vinsert
p42149
I42
VSimpleName: token
p42150
Vinsert
p42151
I42
VSimpleName: nameRest
p42152
tp42153
I1
s(g15485
I42
g15486
Vinsert
p42154
I42
VSimpleName: ConnectionProxy
p42155
tp42156
I1
s(g9420
I42
g9421
Vinsert
p42157
I43
VSimpleType: SQLIdentifierExpr
p42158
tp42159
I1
s(g502
I42
g503
Vinsert
p42160
I14
VClassInstanceCreation
p42161
tp42162
I1
s(g19120
I42
g19121
Vinsert
p42163
I45
VStringLiteral: "pid"
p42164
tp42165
I1
s(g6901
I42
g6902
Vinsert
p42166
I45
VStringLiteral: "FETCH "
p42167
tp42168
I2
s(g5538
I42
g5539
Vinsert
p42169
I25
VIfStatement
p42170
tp42171
I2
s(g3462
I42
g3463
Vinsert
p42172
I43
VSimpleType: Exception
p42173
tp42174
I1
s(g572
I42
g573
Vinsert
p42175
I11
VCastExpression
p42176
tp42177
I5
s(g22937
I42
g22938
Vinsert
p42178
I45
VStringLiteral: "  KEY `k_c` (`c_tinyint`,`c_int`),\u005cn"
p42179
tp42180
I1
s(g10021
I42
g10022
Vinsert
p42181
I43
VSimpleType: HandlerList
p42182
tp42183
I2
s(g728
I42
g729
Vinsert
p42184
I42
VSimpleName: ParserException
p42185
tp42186
I1
s(g286
I42
g287
Vinsert
p42187
I32
VMethodInvocation
p42188
tp42189
I3
s(Vinsert
p42190
I42
VSimpleName: visit
p42191
Vinsert
p42192
I42
VSimpleName: storage
p42193
tp42194
I5
s(g11795
I42
g11796
Vinsert
p42195
I42
VSimpleName: Override
p42196
tp42197
I1
s(g29430
I42
g29431
Vinsert
p42198
I42
VSimpleName: ClassLoader
p42199
tp42200
I2
s(g13191
I42
g13192
Vinsert
p42201
I42
VSimpleName: sqlStat
p42202
tp42203
I6
s(Vinsert
p42204
I42
VSimpleName: executeQuery
p42205
Vinsert
p42206
I42
VSimpleName: sql
p42207
tp42208
I1
s(g8891
I42
g8892
Vinsert
p42209
I45
VStringLiteral: "user-"
p42210
tp42211
I2
s(g39119
I42
g39120
Vinsert
p42212
I44
VSingleVariableDeclaration
p42213
tp42214
I3
s(g14829
I42
g14830
Vinsert
p42215
I42
VSimpleName: SQLStatement
p42216
tp42217
I2
s(g3689
I42
g3690
Vinsert
p42218
I7
VAssignment: =
p42219
tp42220
I1
s(g17507
I42
g17508
Vinsert
p42221
I39
VPrimitiveType: boolean
p42222
tp42223
I1
s(g1236
I42
g1237
Vinsert
p42224
I8
VBlock
p42225
tp42226
I1
s(g11808
I42
g11809
Vinsert
p42227
I42
VSimpleName: SQLDropTypeStatement
p42228
tp42229
I1
s(g11286
I42
g11287
Vinsert
p42230
I42
VSimpleName: call
p42231
tp42232
I1
s(Vinsert
p42233
I42
VSimpleName: loadFromFile
p42234
Vinsert
p42235
I42
VSimpleName: words
p42236
tp42237
I2
s(g12050
I42
g12051
Vinsert
p42238
I45
VStringLiteral: "\u005ct\u005ctSELECT menu_id\u005cn"
p42239
tp42240
I1
s(g10182
I42
g10183
Vinsert
p42241
I44
VSingleVariableDeclaration
p42242
tp42243
I1
s(g22975
I42
g22976
Vinsert
p42244
I43
VSimpleType: TestFilter
p42245
tp42246
I2
s(g4941
I42
g4942
Vinsert
p42247
I43
VSimpleType: SystemException
p42248
tp42249
I1
s(g4941
I42
g4942
Vinsert
p42250
I14
VClassInstanceCreation
p42251
tp42252
I1
s(g14697
I42
g14698
Vinsert
p42253
I32
VMethodInvocation
p42254
tp42255
I4
s(g2742
I42
g2743
Vinsert
p42256
I21
VExpressionStatement
p42257
tp42258
I3
s(g18648
I42
g18649
Vinsert
p42259
I42
VSimpleName: Resources
p42260
tp42261
I1
s(Vinsert
p42262
I42
VSimpleName: assertEquals
p42263
Vinsert
p42264
I43
VSimpleType: BigDecimal
p42265
tp42266
I2
s(g2829
I42
g2830
Vinsert
p42267
I43
VSimpleType: Exception
p42268
tp42269
I1
s(g3108
I42
g3109
Vinsert
p42270
I59
VVariableDeclarationFragment
p42271
tp42272
I8
s(g6375
I42
g6376
Vinsert
p42273
I42
VSimpleName: x_e
p42274
tp42275
I1
s(g2009
I42
g2010
Vinsert
p42276
I43
VSimpleType: SQLCommentHint
p42277
tp42278
I1
s(g2001
I42
g2002
Vinsert
p42279
I45
VStringLiteral: "lock table dsdfsdf read local"
p42280
tp42281
I1
s(g36541
I42
g36542
Vinsert
p42282
I45
VStringLiteral: "select id, login_name, name, password, salt"
p42283
tp42284
I1
s(g1810
I42
g1811
Vinsert
p42285
I45
VStringLiteral: "      V_RETURN := V_RETURN || 'Z';\u005cn"
p42286
tp42287
I1
s(g562
I42
g563
Vinsert
p42288
I60
VVariableDeclarationStatement
p42289
tp42290
I7
s(g7893
I42
g7894
Vinsert
p42291
I45
VStringLiteral: "illegal property 'druid.minIdle'"
p42292
tp42293
I1
s(g4075
I42
g4076
Vinsert
p42294
I60
VVariableDeclarationStatement
p42295
tp42296
I1
s(g16060
I42
g16061
Vinsert
p42297
I42
VSimpleName: getMaxValue
p42298
tp42299
I1
s(g13191
I42
g13192
Vinsert
p42300
I42
VSimpleName: JdbcSqlStat
p42301
tp42302
I5
s(g2403
I42
g2404
Vinsert
p42303
I42
VSimpleName: SQLColumnDefinition
p42304
tp42305
I1
s(g3322
I42
g3323
Vinsert
p42306
I45
VStringLiteral: "\u005ctCONSTRAINT PK_XT_DJ_GN PRIMARY KEY (GNBH),\u005cn"
p42307
tp42308
I1
s(g10542
I42
g10543
Vinsert
p42309
I21
VExpressionStatement
p42310
tp42311
I28
s(g9899
I42
g9900
Vinsert
p42312
I45
VStringLiteral: "-sql"
p42313
tp42314
I1
s(g9696
I42
g9697
Vinsert
p42315
I42
VSimpleName: VERSION
p42316
tp42317
I1
s(g6717
I42
g6718
Vinsert
p42318
I43
VSimpleType: Exception
p42319
tp42320
I6
s(g13017
I42
g13018
Vinsert
p42321
I43
VSimpleType: MySqlLockTableStatement
p42322
tp42323
I2
s(g3035
I42
g3036
Vinsert
p42324
I45
VStringLiteral: " WRAPPED "
p42325
tp42326
I1
s(g18187
I42
g18188
Vinsert
p42327
I42
VSimpleName: test_true
p42328
tp42329
I4
s(g3755
I42
g3756
Vinsert
p42330
I45
VStringLiteral: "CREATE TABLE "
p42331
tp42332
I1
s(g6144
I42
g6145
Vinsert
p42333
I42
VSimpleName: set
p42334
tp42335
I1
s(g11616
I42
g11617
Vinsert
p42336
I42
VSimpleName: e
p42337
tp42338
I4
s(g25074
I42
g25075
Vinsert
p42339
I42
VSimpleName: column
p42340
tp42341
I1
s(g10381
I42
g10382
Vinsert
p42342
I45
VStringLiteral: "parent_id"
p42343
tp42344
I1
s(g1554
I42
g1555
Vinsert
p42345
I11
VCastExpression
p42346
tp42347
I1
s(g6172
I42
g6173
Vinsert
p42348
I42
VSimpleName: accept0
p42349
tp42350
I1
s(g13891
I42
g13892
Vinsert
p42351
I42
VSimpleName: n
p42352
tp42353
I2
s(g10320
I42
g10321
Vinsert
p42354
I8
VBlock
p42355
tp42356
I2
s(Vinsert
p42357
I42
VSimpleName: accept
p42358
Vinsert
p42359
I42
VSimpleName: BINARY
p42360
tp42361
I1
s(g11691
I42
g11692
Vinsert
p42362
I25
VIfStatement
p42363
tp42364
I5
s(g6781
I42
g6782
Vinsert
p42365
I45
VStringLiteral: "t_like_count_0057"
p42366
tp42367
I1
s(g36486
I42
g36487
Vinsert
p42368
I42
VSimpleName: URLConnectionConfigLoader
p42369
tp42370
I2
s(g19344
I42
g19345
Vinsert
p42371
I43
VSimpleType: SQLUpdateStatement
p42372
tp42373
I1
s(g6182
I42
g6183
Vinsert
p42374
I45
VStringLiteral: "FROM customers\u005cn"
p42375
tp42376
I1
s(g13027
I42
g13028
Vinsert
p42377
I42
VSimpleName: rightResult
p42378
tp42379
I1
s(g35223
I42
g35224
Vinsert
p42380
I42
VSimpleName: setTestOnBorrow
p42381
tp42382
I1
s(g14943
I42
g14944
Vinsert
p42383
I42
VSimpleName: meta
p42384
tp42385
I1
s(g3816
I42
g3817
Vinsert
p42386
I42
VSimpleName: defaultReadOnly
p42387
tp42388
I1
s(g5287
I42
g5288
Vinsert
p42389
I52
VThisExpression
p42390
tp42391
I61
s(g331
I42
g332
Vinsert
p42392
I45
VStringLiteral: " of "
p42393
tp42394
I1
s(g1410
I42
g1411
Vinsert
p42395
I32
VMethodInvocation
p42396
tp42397
I1
s(g7007
I42
g7008
Vinsert
p42398
I8
VBlock
p42399
tp42400
I1
s(g5460
I42
g5461
Vinsert
p42401
I25
VIfStatement
p42402
tp42403
I1
s(g21686
I42
g21687
Vinsert
p42404
I8
VBlock
p42405
tp42406
I1
s(g8653
I42
g8654
Vinsert
p42407
I43
VSimpleType: Exception
p42408
tp42409
I2
s(g527
I42
g528
Vinsert
p42410
I42
VSimpleName: indexOf
p42411
tp42412
I1
s(g2459
I42
g2460
Vinsert
p42413
I42
VSimpleName: x
p42414
tp42415
I56
s(g11330
I42
g11331
Vinsert
p42416
I9
VBooleanLiteral: false
p42417
tp42418
I2
s(g13504
I42
g13505
Vinsert
p42419
I59
VVariableDeclarationFragment
p42420
tp42421
I5
s(g41516
I42
g41517
Vinsert
p42422
I43
VSimpleType: Object
p42423
tp42424
I1
s(g4635
I42
g4636
Vinsert
p42425
I39
VPrimitiveType: boolean
p42426
tp42427
I2
s(g12555
I42
g12556
Vinsert
p42428
I42
VSimpleName: statData
p42429
tp42430
I1
s(g14226
I42
g14227
Vinsert
p42431
I52
VThisExpression
p42432
tp42433
I1
s(g6557
I42
g6558
Vinsert
p42434
I42
VSimpleName: rightOwnerName
p42435
tp42436
I1
s(g12024
I42
g12025
Vinsert
p42437
I42
VSimpleName: valueClauseList
p42438
tp42439
I2
s(g13331
I42
g13332
Vinsert
p42440
I42
VSimpleName: mysqlConn
p42441
tp42442
I2
s(g1526
I42
g1527
Vinsert
p42443
I40
VQualifiedName: Token.INTERVAL
p42444
tp42445
I2
s(g592
I42
g593
Vinsert
p42446
I42
VSimpleName: item
p42447
tp42448
I2
s(Vinsert
p42449
I42
VSimpleName: loadResource
p42450
Vinsert
p42451
I45
VStringLiteral: "META-INF/druid-filter-wall-permit-schema-oracle-default.txt"
p42452
tp42453
I1
s(g22848
I42
g22849
Vinsert
p42454
I59
VVariableDeclarationFragment
p42455
tp42456
I1
s(g12354
I42
g12355
Vinsert
p42457
I32
VMethodInvocation
p42458
tp42459
I4
s(g5714
I42
g5715
Vinsert
p42460
I45
VStringLiteral: "interval(numtoyminterval (1,'month'))\u005cn"
p42461
tp42462
I1
s(Vinsert
p42463
I42
VSimpleName: assertEquals
p42464
Vinsert
p42465
I42
VSimpleName: EvalMethodTest_locate_1
p42466
tp42467
I1
s(g20835
I42
g20836
Vinsert
p42468
I42
VSimpleName: tableName
p42469
tp42470
I2
s(g11890
I42
g11891
Vinsert
p42471
I40
VQualifiedName: Token.COMMENT
p42472
tp42473
I1
s(g12443
I42
g12444
Vinsert
p42474
I33
VNullLiteral
p42475
tp42476
I3
s(g1705
I42
g1706
Vinsert
p42477
I42
VSimpleName: Entity
p42478
tp42479
I4
s(g8969
I42
g8970
Vinsert
p42480
I42
VSimpleName: PathVariable
p42481
tp42482
I1
s(g35083
I42
g35084
Vinsert
p42483
I42
VSimpleName: shortValue
p42484
tp42485
I1
s(Vinsert
p42486
I42
VSimpleName: close
p42487
Vinsert
p42488
I42
VSimpleName: getConnection
p42489
tp42490
I2
s(g20010
I42
g20011
Vinsert
p42491
I42
VSimpleName: savepointIdSeed
p42492
tp42493
I1
s(g6041
I42
g6042
Vinsert
p42494
I43
VSimpleType: WallConfig
p42495
tp42496
I5
s(Vinsert
p42497
I42
VSimpleName: visit
p42498
Vinsert
p42499
I42
VSimpleName: varList
p42500
tp42501
I2
s(g34130
I42
g34131
Vinsert
p42502
I42
VSimpleName: setInitially
p42503
tp42504
I1
s(g25196
I42
g25197
Vinsert
p42505
I42
VSimpleName: stmt
p42506
tp42507
I1
s(g27822
I42
g27823
Vinsert
p42508
I22
VFieldAccess
p42509
tp42510
I2
s(g6041
I42
g6042
Vinsert
p42511
I83
VModifier: protected
p42512
tp42513
I5
s(g11585
I42
g11586
Vinsert
p42514
I31
VMethodDeclaration
p42515
tp42516
I1
s(g26080
I42
g26081
Vinsert
p42517
I42
VSimpleName: notification
p42518
tp42519
I1
s(Vinsert
p42520
I42
VSimpleName: evalExpr
p42521
Vinsert
p42522
I42
VSimpleName: Math
p42523
tp42524
I6
s(g25913
I42
g25914
Vinsert
p42525
I42
VSimpleName: reset
p42526
tp42527
I1
s(Vinsert
p42528
I42
VSimpleName: assertEquals
p42529
Vinsert
p42530
I42
VSimpleName: test_method
p42531
tp42532
I23
s(g15864
I42
g15865
Vinsert
p42533
I59
VVariableDeclarationFragment
p42534
tp42535
I2
s(g28785
I42
g28786
Vinsert
p42536
I45
VStringLiteral: "INSERT INTO Production.ScrapReason"
p42537
tp42538
I2
s(g19626
I42
g19627
Vinsert
p42539
I45
VStringLiteral: "SELECT last_name, salary * 12 AS annual_salary\u005cn"
p42540
tp42541
I1
s(g3345
I42
g3346
Vinsert
p42542
I8
VBlock
p42543
tp42544
I44
s(g8238
I42
g8239
Vinsert
p42545
I60
VVariableDeclarationStatement
p42546
tp42547
I2
s(g6187
I42
g6188
Vinsert
p42548
I45
VStringLiteral: "\u005ct\u005c"OWNER_MEMBER_SEQ\u005c", \u005cn"
p42549
tp42550
I1
s(g8627
I42
g8628
Vinsert
p42551
I42
VSimpleName: expr
p42552
tp42553
I1
s(g4253
I42
g4254
Vinsert
p42554
I42
VSimpleName: query
p42555
tp42556
I1
s(g16863
I42
g16864
Vinsert
p42557
I14
VClassInstanceCreation
p42558
tp42559
I6
s(g753
I42
g754
Vinsert
p42560
I43
VSimpleType: String
p42561
tp42562
I1
s(Vinsert
p42563
I42
VSimpleName: toSQLString
p42564
Vinsert
p42565
I45
VStringLiteral: "\u005cn\u005ctpromo_end_date DATE"
p42566
tp42567
I2
s(g22782
I42
g22783
Vinsert
p42568
I21
VExpressionStatement
p42569
tp42570
I4
s(g13166
I42
g13167
Vinsert
p42571
I42
VSimpleName: getForQuery
p42572
tp42573
I1
s(g14834
I42
g14835
Vinsert
p42574
I21
VExpressionStatement
p42575
tp42576
I2
s(g4579
I42
g4580
Vinsert
p42577
I32
VMethodInvocation
p42578
tp42579
I20
s(g434
I42
g435
Vinsert
p42580
I42
VSimpleName: limit
p42581
tp42582
I1
s(g19708
I42
g19709
Vinsert
p42583
I25
VIfStatement
p42584
tp42585
I1
s(g12801
I42
g12802
Vinsert
p42586
I45
VStringLiteral: "DESCRIBE"
p42587
tp42588
I1
s(g5762
I42
g5763
Vinsert
p42589
I45
VStringLiteral: "dup close"
p42590
tp42591
I1
s(g10797
I42
g10798
Vinsert
p42592
I45
VStringLiteral: "sqlstate "
p42593
tp42594
I1
s(g8603
I42
g8604
Vinsert
p42595
I42
VSimpleName: getPermitFunctions
p42596
tp42597
I2
s(g31826
I42
g31827
Vinsert
p42598
I9
VBooleanLiteral: false
p42599
tp42600
I2
s(g9662
I42
g9663
Vinsert
p42601
I44
VSingleVariableDeclaration
p42602
tp42603
I1
s(g12397
I42
g12398
Vinsert
p42604
I45
VStringLiteral: "\u005ct\u005ctOR A.COUNTRY LIKE ('%' || ? || '%')\u005cn"
p42605
tp42606
I1
s(g35807
I42
g35808
Vinsert
p42607
I42
VSimpleName: setUpBound
p42608
tp42609
I1
s(g11516
I42
g11517
Vinsert
p42610
I8
VBlock
p42611
tp42612
I5
s(g14187
I42
g14188
Vinsert
p42613
I42
VSimpleName: log
p42614
tp42615
I1
s(g14034
I42
g14035
Vinsert
p42616
I45
VStringLiteral: "LIMIT 1"
p42617
tp42618
I1
s(Vinsert
p42619
I42
VSimpleName: getExpr
p42620
Vinsert
p42621
I43
VSimpleType: SQLSelectOrderByItem
p42622
tp42623
I2
s(g17575
I42
g17576
Vinsert
p42624
I42
VSimpleName: accept
p42625
tp42626
I1
s(Vinsert
p42627
I42
VSimpleName: assertEquals
p42628
Vinsert
p42629
I42
VSimpleName: getExecuteLastStartTime
p42630
tp42631
I1
s(g2125
I42
g2126
Vinsert
p42632
I42
VSimpleName: profiletat
p42633
tp42634
I1
s(g597
I42
g598
Vinsert
p42635
I78
VMarkerAnnotation
p42636
tp42637
I1
s(g13813
I42
g13814
Vinsert
p42638
I42
VSimpleName: buf
p42639
tp42640
I1
s(Vinsert
p42641
I42
VSimpleName: get
p42642
Vinsert
p42643
I42
VSimpleName: getColumns
p42644
tp42645
I1
s(g8449
I42
g8450
Vinsert
p42646
I42
VSimpleName: sz
p42647
tp42648
I1
s(g17133
I42
g17134
Vinsert
p42649
I42
VSimpleName: Connection
p42650
tp42651
I1
s(g3472
I42
g3473
Vinsert
p42652
I45
VStringLiteral: "FORCE ALL PARTITIONS "
p42653
tp42654
I1
s(g5045
I42
g5046
Vinsert
p42655
I39
VPrimitiveType: boolean
p42656
tp42657
I2
s(g5272
I42
g5273
Vinsert
p42658
I43
VSimpleType: SQLSelectParser
p42659
tp42660
I2
s(g7970
I42
g7971
Vinsert
p42661
I42
VSimpleName: MySqlSetCharSetStatement
p42662
tp42663
I1
s(g176
I42
g177
Vinsert
p42664
I52
VThisExpression
p42665
tp42666
I2
s(g21257
I42
g21258
Vinsert
p42667
I45
VStringLiteral: "                  from bas_user auser, bas_user_role ur"
p42668
tp42669
I1
s(g13800
I42
g13801
Vinsert
p42670
I42
VSimpleName: mark
p42671
tp42672
I1
s(g10195
I42
g10196
Vinsert
p42673
I45
VStringLiteral: "\u005cn\u005ctpromo_end_date DATE,"
p42674
tp42675
I2
s(g14551
I42
g14552
Vinsert
p42676
I42
VSimpleName: printCreateTable
p42677
tp42678
I1
s(g10174
I42
g10175
Vinsert
p42679
I42
VSimpleName: violations
p42680
tp42681
I1
s(g1213
I42
g1214
Vinsert
p42682
I40
VQualifiedName: ResultSet.CLOSE_CURSORS_AT_COMMIT
p42683
tp42684
I1
s(g14118
I42
g14119
Vinsert
p42685
I9
VBooleanLiteral: false
p42686
tp42687
I3
s(g24890
I42
g24891
Vinsert
p42688
I42
VSimpleName: SQLColumnCheck
p42689
tp42690
I1
s(g38764
I42
g38765
Vinsert
p42691
I42
VSimpleName: setAlias
p42692
tp42693
I1
s(g31826
I42
g31827
Vinsert
p42694
I33
VNullLiteral
p42695
tp42696
I21
s(g1790
I42
g1791
Vinsert
p42697
I32
VMethodInvocation
p42698
tp42699
I1
s(g14155
I42
g14156
Vinsert
p42700
I44
VSingleVariableDeclaration
p42701
tp42702
I1
s(g6450
I42
g6451
Vinsert
p42703
I8
VBlock
p42704
tp42705
I2
s(g23828
I42
g23829
Vinsert
p42706
I43
VSimpleType: WallDenyStat
p42707
tp42708
I1
s(g23293
I42
g23294
Vinsert
p42709
I21
VExpressionStatement
p42710
tp42711
I8
s(g23534
I42
g23535
Vinsert
p42712
I34
VNumberLiteral: 1
p42713
tp42714
I3
s(g10961
I42
g10962
Vinsert
p42715
I40
VQualifiedName: System.out
p42716
tp42717
I8
s(g4661
I42
g4662
Vinsert
p42718
I42
VSimpleName: test_builtin_dataTypes
p42719
tp42720
I1
s(g4694
I42
g4695
Vinsert
p42721
I45
VStringLiteral: "\u005ct\u005ctFLASH_CACHE DEFAULT\u005cn"
p42722
tp42723
I5
s(g13911
I42
g13912
Vinsert
p42724
I42
VSimpleName: properties
p42725
tp42726
I1
s(g16200
I42
g16201
Vinsert
p42727
I42
VSimpleName: clause
p42728
tp42729
I3
s(g22579
I42
g22580
Vinsert
p42730
I12
VCatchClause
p42731
tp42732
I1
s(g12586
I42
g12587
Vinsert
p42733
I43
VSimpleType: SQLScriptCommitStatement
p42734
tp42735
I1
s(g16899
I42
g16900
Vinsert
p42736
I27
VInfixExpression: ==
p42737
tp42738
I1
s(g30653
I42
g30654
Vinsert
p42739
I45
VStringLiteral: "SELECT 1"
p42740
tp42741
I1
s(g17734
I42
g17735
Vinsert
p42742
I42
VSimpleName: threadNo
p42743
tp42744
I1
s(g27056
I42
g27057
Vinsert
p42745
I43
VSimpleType: SQLCharactorDataType
p42746
tp42747
I2
s(Vinsert
p42748
I42
VSimpleName: remove
p42749
Vinsert
p42750
I42
VSimpleName: item
p42751
tp42752
I1
s(g24649
I42
g24650
Vinsert
p42753
I32
VMethodInvocation
p42754
tp42755
I3
s(g14001
I42
g14002
Vinsert
p42756
I42
VSimpleName: DataSourceHolder
p42757
tp42758
I1
s(g35812
I42
g35813
Vinsert
p42759
I43
VSimpleType: MySqlSchemaStatVisitor
p42760
tp42761
I269
s(Vinsert
p42762
I42
VSimpleName: getProperty
p42763
Vinsert
p42764
I42
VSimpleName: Property
p42765
tp42766
I1
s(g5343
I42
g5344
Vinsert
p42767
I8
VBlock
p42768
tp42769
I1
s(g10692
I42
g10693
Vinsert
p42770
I42
VSimpleName: ArrayList
p42771
tp42772
I4
s(g8810
I42
g8811
Vinsert
p42773
I43
VSimpleType: String
p42774
tp42775
I1
s(g16948
I42
g16949
Vinsert
p42776
I42
VSimpleName: add
p42777
tp42778
I1
s(g9878
I42
g9879
Vinsert
p42779
I42
VSimpleName: type
p42780
tp42781
I1
s(g7650
I42
g7651
Vinsert
p42782
I38
VPrefixExpression: --
p42783
tp42784
I1
s(g14839
I42
g14840
Vinsert
p42785
I42
VSimpleName: dataSource
p42786
tp42787
I4
s(g15632
I42
g15633
Vinsert
p42788
I45
VStringLiteral: "\u005ct\u005ct\u005ctUPDATE employees\u005cn"
p42789
tp42790
I1
s(g3549
I42
g3550
Vinsert
p42791
I43
VSimpleType: PreparedStatementKey
p42792
tp42793
I1
s(g5528
I42
g5529
Vinsert
p42794
I25
VIfStatement
p42795
tp42796
I1
s(g6699
I42
g6700
Vinsert
p42797
I8
VBlock
p42798
tp42799
I2
s(g19163
I42
g19164
Vinsert
p42800
I42
VSimpleName: Driver
p42801
tp42802
I1
s(g4755
I42
g4756
Vinsert
p42803
I43
VSimpleType: RuntimeException
p42804
tp42805
I1
s(g17012
I42
g17013
Vinsert
p42806
I83
VModifier: static
p42807
tp42808
I1
s(g33151
I42
g33152
Vinsert
p42809
I42
VSimpleName: var
p42810
tp42811
I1
s(g33656
I42
g33657
Vinsert
p42812
I42
VSimpleName: MySqlASTVisitor
p42813
tp42814
I17
s(g13690
I42
g13691
Vinsert
p42815
I42
VSimpleName: checkList
p42816
tp42817
I1
s(g11585
I42
g11586
Vinsert
p42818
I83
VModifier: public
p42819
tp42820
I1
s(g8564
I42
g8565
Vinsert
p42821
I60
VVariableDeclarationStatement
p42822
tp42823
I2
s(g982
I42
g983
Vinsert
p42824
I13
VCharacterLiteral: 'E'
p42825
tp42826
I1
s(g4080
I42
g4081
Vinsert
p42827
I43
VSimpleType: java.sql.Date
p42828
tp42829
I1
s(g7522
I42
g7523
Vinsert
p42830
I60
VVariableDeclarationStatement
p42831
tp42832
I2
s(g7908
I42
g7909
Vinsert
p42833
I39
VPrimitiveType: long
p42834
tp42835
I1
s(g19796
I42
g19797
Vinsert
p42836
I42
VSimpleName: and
p42837
tp42838
I1
s(g32956
I42
g32957
Vinsert
p42839
I45
VStringLiteral: "name"
p42840
tp42841
I2
s(Vinsert
p42842
I42
VSimpleName: assertEquals
p42843
Vinsert
p42844
I42
VSimpleName: TestUtils
p42845
tp42846
I2
s(g9519
I42
g9520
Vinsert
p42847
I8
VBlock
p42848
tp42849
I2
s(g9410
I42
g9411
Vinsert
p42850
I43
VSimpleType: DruidDataSource
p42851
tp42852
I2
s(g11187
I42
g11188
Vinsert
p42853
I40
VQualifiedName: com.alibaba.druid.stat.JdbcSqlStat
p42854
tp42855
I2
s(g28042
I42
g28043
Vinsert
p42856
I45
VStringLiteral: "CREATE SYNONYM offices \u005cn"
p42857
tp42858
I1
s(g8409
I42
g8410
Vinsert
p42859
I59
VVariableDeclarationFragment
p42860
tp42861
I1
s(g6157
I42
g6158
Vinsert
p42862
I42
VSimpleName: SQLArgument
p42863
tp42864
I2
s(g9103
I42
g9104
Vinsert
p42865
I42
VSimpleName: selectItem
p42866
tp42867
I1
s(g12893
I42
g12894
Vinsert
p42868
I45
VStringLiteral: "STR_TO_DATE"
p42869
tp42870
I2
s(g11297
I42
g11298
Vinsert
p42871
I42
VSimpleName: put
p42872
tp42873
I1
s(g15864
I42
g15865
Vinsert
p42874
I39
VPrimitiveType: void
p42875
tp42876
I1
s(Vinsert
p42877
I42
VSimpleName: assertEquals
p42878
Vinsert
p42879
I45
VStringLiteral: "trace"
p42880
tp42881
I1
s(g1604
I42
g1605
Vinsert
p42882
I42
VSimpleName: activeXid
p42883
tp42884
I2
s(g20113
I42
g20114
Vinsert
p42885
I32
VMethodInvocation
p42886
tp42887
I6
s(g40136
I42
g40137
Vinsert
p42888
I42
VSimpleName: dataType
p42889
tp42890
I1
s(g38258
I42
g38259
Vinsert
p42891
I31
VMethodDeclaration
p42892
tp42893
I1
s(g662
I42
g663
Vinsert
p42894
I42
VSimpleName: getInfoCount
p42895
tp42896
I1
s(g12055
I42
g12056
Vinsert
p42897
I43
VSimpleType: OracleRangeExpr
p42898
tp42899
I2
s(g4442
I42
g4443
Vinsert
p42900
I83
VModifier: static
p42901
tp42902
I1
s(g32999
I42
g33000
Vinsert
p42903
I45
VStringLiteral: "REPLACE INTO t1 (id, name)\u005cn"
p42904
tp42905
I1
s(g8547
I42
g8548
Vinsert
p42906
I59
VVariableDeclarationFragment
p42907
tp42908
I2
s(g2543
I42
g2544
Vinsert
p42909
I42
VSimpleName: FnvHash
p42910
tp42911
I5
s(Vinsert
p42912
I42
VSimpleName: token
p42913
Vinsert
p42914
I40
VQualifiedName: Token.WHEN
p42915
tp42916
I1
s(g4765
I42
g4766
Vinsert
p42917
I21
VExpressionStatement
p42918
tp42919
I1
s(g40651
I42
g40652
Vinsert
p42920
I43
VSimpleType: MockConnection
p42921
tp42922
I1
s(g3345
I42
g3346
Vinsert
p42923
I42
VSimpleName: visitor
p42924
tp42925
I31
s(g9883
I42
g9884
Vinsert
p42926
I40
VQualifiedName: x.cache
p42927
tp42928
I1
s(g21667
I42
g21668
Vinsert
p42929
I41
VReturnStatement
p42930
tp42931
I1
s(g3760
I42
g3761
Vinsert
p42932
I25
VIfStatement
p42933
tp42934
I1
s(g4834
I42
g4835
Vinsert
p42935
I42
VSimpleName: Filter
p42936
tp42937
I1
s(g22115
I42
g22116
Vinsert
p42938
I21
VExpressionStatement
p42939
tp42940
I3
s(g326
I42
g327
Vinsert
p42941
I45
VStringLiteral: "    WHERE sample_column_name = 'gmt_modified'\u005cn"
p42942
tp42943
I1
s(g14839
I42
g14840
Vinsert
p42944
I42
VSimpleName: getConnectCount
p42945
tp42946
I1
s(g15853
I42
g15854
Vinsert
p42947
I42
VSimpleName: setRowCount
p42948
tp42949
I1
s(g670
I42
g671
Vinsert
p42950
I7
VAssignment: =
p42951
tp42952
I2
s(Vinsert
p42953
I42
VSimpleName: singletonList
p42954
Vinsert
p42955
I42
VSimpleName: visitor
p42956
tp42957
I1
s(g6612
I42
g6613
Vinsert
p42958
I42
VSimpleName: publicKey
p42959
tp42960
I1
s(g9949
I42
g9950
Vinsert
p42961
I8
VBlock
p42962
tp42963
I2
s(g7068
I42
g7069
Vinsert
p42964
I40
VQualifiedName: FnvHash.Constants.NEXT
p42965
tp42966
I1
s(g25306
I42
g25307
Vinsert
p42967
I42
VSimpleName: ATTR_TRANSACTION
p42968
tp42969
I1
s(g2069
I42
g2070
Vinsert
p42970
I43
VSimpleType: WallContext
p42971
tp42972
I1
s(g15632
I42
g15633
Vinsert
p42973
I45
VStringLiteral: "END emp_mgmt;"
p42974
tp42975
I1
s(g13212
I42
g13213
Vinsert
p42976
I42
VSimpleName: assertEquals
p42977
tp42978
I8
s(g13326
I42
g13327
Vinsert
p42979
I36
VParenthesizedExpression
p42980
tp42981
I1
s(g6288
I42
g6289
Vinsert
p42982
I59
VVariableDeclarationFragment
p42983
tp42984
I1
s(g3472
I42
g3473
Vinsert
p42985
I42
VSimpleName: x
p42986
tp42987
I1
s(g15610
I42
g15611
Vinsert
p42988
I42
VSimpleName: first
p42989
tp42990
I3
s(g5903
I42
g5904
Vinsert
p42991
I42
VSimpleName: isAll
p42992
tp42993
I1
s(Vinsert
p42994
I42
VSimpleName: toStatementList
p42995
Vinsert
p42996
I27
VInfixExpression: +
p42997
tp42998
I2
s(g7712
I42
g7713
Vinsert
p42999
I42
VSimpleName: containsKey
p43000
tp43001
I2
s(g8480
I42
g8481
Vinsert
p43002
I59
VVariableDeclarationFragment
p43003
tp43004
I1
s(g6359
I42
g6360
Vinsert
p43005
I42
VSimpleName: mysqlColumn
p43006
tp43007
I2
s(g27234
I42
g27235
Vinsert
p43008
I8
VBlock
p43009
tp43010
I1
s(Vinsert
p43011
I42
VSimpleName: getQuery
p43012
Vinsert
p43013
I43
VSimpleType: SQLSelectQueryBlock
p43014
tp43015
I3
s(g19077
I42
g19078
Vinsert
p43016
I59
VVariableDeclarationFragment
p43017
tp43018
I7
s(g23717
I42
g23718
Vinsert
p43019
I42
VSimpleName: statValue
p43020
tp43021
I1
s(g4243
I42
g4244
Vinsert
p43022
I16
VConditionalExpression
p43023
tp43024
I1
s(g13374
I42
g13375
Vinsert
p43025
I42
VSimpleName: left
p43026
tp43027
I5
s(Vinsert
p43028
I42
VSimpleName: getProxyFilters
p43029
Vinsert
p43030
I42
VSimpleName: StatFilter
p43031
tp43032
I6
s(Vinsert
p43033
I42
VSimpleName: format
p43034
Vinsert
p43035
I42
VSimpleName: SQLUtils
p43036
tp43037
I6
s(Vinsert
p43038
I42
VSimpleName: setParent
p43039
Vinsert
p43040
I42
VSimpleName: Column
p43041
tp43042
I1
s(g20298
I42
g20299
Vinsert
p43043
I45
VStringLiteral: "length"
p43044
tp43045
I1
s(Vinsert
p43046
I42
VSimpleName: setParent
p43047
Vinsert
p43048
I42
VSimpleName: comment
p43049
tp43050
I9
s(g9060
I42
g9061
Vinsert
p43051
I42
VSimpleName: name_lcase
p43052
tp43053
I8
s(g12346
I42
g12347
Vinsert
p43054
I42
VSimpleName: error
p43055
tp43056
I2
s(g13928
I42
g13929
Vinsert
p43057
I42
VSimpleName: getQuery
p43058
tp43059
I1
s(g26675
I42
g26676
Vinsert
p43060
I43
VSimpleType: SQLDeleteStatement
p43061
tp43062
I1
s(g18078
I42
g18079
Vinsert
p43063
I45
VStringLiteral: "\u005ctAFTER INSERT\u005cn"
p43064
tp43065
I1
s(g3365
I42
g3366
Vinsert
p43066
I42
VSimpleName: assertEquals
p43067
tp43068
I1
s(g4694
I42
g4695
Vinsert
p43069
I45
VStringLiteral: "\u005ctSTORAGE (\u005cn"
p43070
tp43071
I7
s(g5633
I42
g5634
Vinsert
p43072
I7
VAssignment: =
p43073
tp43074
I4
s(g3770
I42
g3771
Vinsert
p43075
I42
VSimpleName: val
p43076
tp43077
I4
s(g13789
I42
g13790
Vinsert
p43078
I42
VSimpleName: interval
p43079
tp43080
I1
s(g4579
I42
g4580
Vinsert
p43081
I42
VSimpleName: exprParser
p43082
tp43083
I5
s(g12488
I42
g12489
Vinsert
p43084
I42
VSimpleName: name
p43085
tp43086
I1
s(g35807
I42
g35808
Vinsert
p43087
I42
VSimpleName: lowBound
p43088
tp43089
I3
s(g8990
I42
g8991
Vinsert
p43090
I21
VExpressionStatement
p43091
tp43092
I2
s(g18496
I42
g18497
Vinsert
p43093
I39
VPrimitiveType: boolean
p43094
tp43095
I1
s(g7728
I42
g7729
Vinsert
p43096
I45
VStringLiteral: "\u005cn\u005ctcredit_limit number(9, 2)"
p43097
tp43098
I2
s(g14583
I42
g14584
Vinsert
p43099
I43
VSimpleType: SQLException
p43100
tp43101
I3
s(Vinsert
p43102
I42
VSimpleName: assertTrue
p43103
Vinsert
p43104
I45
VStringLiteral: "bsvariety"
p43105
tp43106
I1
s(g14072
I42
g14073
Vinsert
p43107
I8
VBlock
p43108
tp43109
I3
s(g25422
I42
g25423
Vinsert
p43110
I25
VIfStatement
p43111
tp43112
I1
s(g15153
I42
g15154
Vinsert
p43113
I14
VClassInstanceCreation
p43114
tp43115
I1
s(Vinsert
p43116
I42
VSimpleName: stringVal
p43117
Vinsert
p43118
I45
VStringLiteral: "'"
p43119
tp43120
I1
s(Vinsert
p43121
I42
VSimpleName: assertEquals
p43122
Vinsert
p43123
I42
VSimpleName: test_if
p43124
tp43125
I9
s(g6722
I42
g6723
Vinsert
p43126
I45
VStringLiteral: "IS\u005cn"
p43127
tp43128
I1
s(g14881
I42
g14882
Vinsert
p43129
I42
VSimpleName: requestIntervalHistogram
p43130
tp43131
I1
s(g10320
I42
g10321
Vinsert
p43132
I42
VSimpleName: permitObjects
p43133
tp43134
I2
s(g4669
I42
g4670
Vinsert
p43135
I42
VSimpleName: conn
p43136
tp43137
I1
s(g5118
I42
g5119
Vinsert
p43138
I42
VSimpleName: LogFactory
p43139
tp43140
I5
s(g1825
I42
g1826
Vinsert
p43141
I42
VSimpleName: field
p43142
tp43143
I1
s(Vinsert
p43144
I42
VSimpleName: append
p43145
Vinsert
p43146
I42
VSimpleName: dataType
p43147
tp43148
I2
s(g41927
I42
g41928
Vinsert
p43149
I42
VSimpleName: expr
p43150
tp43151
I1
s(g8990
I42
g8991
Vinsert
p43152
I42
VSimpleName: record
p43153
tp43154
I1
s(g18445
I42
g18446
Vinsert
p43155
I42
VSimpleName: connectionId
p43156
tp43157
I1
s(Vinsert
p43158
I42
VSimpleName: setAlias
p43159
Vinsert
p43160
I42
VSimpleName: lexer
p43161
tp43162
I1
s(g28772
I42
g28773
Vinsert
p43163
I42
VSimpleName: print
p43164
tp43165
I1
s(Vinsert
p43166
I42
VSimpleName: next
p43167
Vinsert
p43168
I42
VSimpleName: prepareStatement
p43169
tp43170
I1
s(g3631
I42
g3632
Vinsert
p43171
I74
VParameterizedType: ConcurrentMap<Long,JdbcConnectionStat.Entry>
p43172
tp43173
I1
s(g2727
I42
g2728
Vinsert
p43174
I22
VFieldAccess
p43175
tp43176
I1
s(g4178
I42
g4179
Vinsert
p43177
I42
VSimpleName: i
p43178
tp43179
I2
s(g5166
I42
g5167
Vinsert
p43180
I42
VSimpleName: provider
p43181
tp43182
I11
s(g17777
I42
g17778
Vinsert
p43183
I42
VSimpleName: print0
p43184
tp43185
I1
s(Vinsert
p43186
I42
VSimpleName: createExprParser
p43187
Vinsert
p43188
I45
VStringLiteral: "trunc(CURRENT_TIMESTAMP)"
p43189
tp43190
I1
s(g23839
I42
g23840
Vinsert
p43191
I42
VSimpleName: SQLException
p43192
tp43193
I1
s(g21257
I42
g21258
Vinsert
p43194
I45
VStringLiteral: "                 where auser.cuser_code = ur.cuser_code"
p43195
tp43196
I1
s(g5485
I42
g5486
Vinsert
p43197
I27
VInfixExpression: !=
p43198
tp43199
I1
s(Vinsert
p43200
I42
VSimpleName: size
p43201
Vinsert
p43202
I42
VSimpleName: obj
p43203
tp43204
I1
s(g3770
I42
g3771
Vinsert
p43205
I8
VBlock
p43206
tp43207
I3
s(g38850
I42
g38851
Vinsert
p43208
I42
VSimpleName: statementIdSeed
p43209
tp43210
I1
s(g41745
I42
g41746
Vinsert
p43211
I42
VSimpleName: TestCase
p43212
tp43213
I1
s(g6909
I42
g6910
Vinsert
p43214
I42
VSimpleName: isInUse
p43215
tp43216
I1
s(g27423
I42
g27424
Vinsert
p43217
I42
VSimpleName: OracleSQLObject
p43218
tp43219
I1
s(g5941
I42
g5942
Vinsert
p43220
I42
VSimpleName: JSONWriter
p43221
tp43222
I2
s(g9704
I42
g9705
Vinsert
p43223
I42
VSimpleName: Dimension
p43224
tp43225
I1
s(Vinsert
p43226
I42
VSimpleName: assertFalse
p43227
Vinsert
p43228
I42
VSimpleName: MySqlWallTest29
p43229
tp43230
I1
s(g2634
I42
g2635
Vinsert
p43231
I42
VSimpleName: SQLStatement
p43232
tp43233
I1
s(g14324
I42
g14325
Vinsert
p43234
I9
VBooleanLiteral: false
p43235
tp43236
I1
s(g11973
I42
g11974
Vinsert
p43237
I45
VStringLiteral: " `Extent1`.`BankAccount`, "
p43238
tp43239
I1
s(g7707
I42
g7708
Vinsert
p43240
I42
VSimpleName: nextToken
p43241
tp43242
I1
s(g4584
I42
g4585
Vinsert
p43243
I32
VMethodInvocation
p43244
tp43245
I18
s(g13928
I42
g13929
Vinsert
p43246
I42
VSimpleName: Assert
p43247
tp43248
I1
s(g4238
I42
g4239
Vinsert
p43249
I43
VSimpleType: String
p43250
tp43251
I1
s(g10292
I42
g10293
Vinsert
p43252
I27
VInfixExpression: !=
p43253
tp43254
I2
s(g11187
I42
g11188
Vinsert
p43255
I43
VSimpleType: JdbcSqlStat
p43256
tp43257
I2
s(g6650
I42
g6651
Vinsert
p43258
I8
VBlock
p43259
tp43260
I1
s(g33452
I42
g33453
Vinsert
p43261
I38
VPrefixExpression: !
p43262
tp43263
I1
s(g14605
I42
g14606
Vinsert
p43264
I42
VSimpleName: property
p43265
tp43266
I2
s(g331
I42
g332
Vinsert
p43267
I42
VSimpleName: x
p43268
tp43269
I2
s(g2842
I42
g2843
Vinsert
p43270
I43
VSimpleType: SQLWithSubqueryClause
p43271
tp43272
I1
s(Vinsert
p43273
I42
VSimpleName: nextToken
p43274
Vinsert
p43275
I40
VQualifiedName: Token.PERCENT
p43276
tp43277
I1
s(g9428
I42
g9429
Vinsert
p43278
I44
VSingleVariableDeclaration
p43279
tp43280
I9
s(g4699
I42
g4700
Vinsert
p43281
I34
VNumberLiteral: 3
p43282
tp43283
I5
s(g8528
I42
g8529
Vinsert
p43284
I42
VSimpleName: name
p43285
tp43286
I4
s(g21696
I42
g21697
Vinsert
p43287
I34
VNumberLiteral: 7
p43288
tp43289
I1
s(g35631
I42
g35632
Vinsert
p43290
I43
VSimpleType: SQLException
p43291
tp43292
I6
s(g13700
I42
g13701
Vinsert
p43293
I17
VConstructorInvocation
p43294
tp43295
I13
s(g7893
I42
g7894
Vinsert
p43296
I42
VSimpleName: LOG
p43297
tp43298
I2
s(g6359
I42
g6360
Vinsert
p43299
I27
VInfixExpression: !=
p43300
tp43301
I1
s(g607
I42
g608
Vinsert
p43302
I45
VStringLiteral: "trim_option"
p43303
tp43304
I1
s(g3709
I42
g3710
Vinsert
p43305
I59
VVariableDeclarationFragment
p43306
tp43307
I1
s(g8742
I42
g8743
Vinsert
p43308
I40
VQualifiedName: Token.USE
p43309
tp43310
I1
s(g31262
I42
g31263
Vinsert
p43311
I42
VSimpleName: test_reverse
p43312
tp43313
I11
s(g3078
I42
g3079
Vinsert
p43314
I32
VMethodInvocation
p43315
tp43316
I18
s(g4253
I42
g4254
Vinsert
p43317
I21
VExpressionStatement
p43318
tp43319
I6
s(g3719
I42
g3720
Vinsert
p43320
I42
VSimpleName: stmt
p43321
tp43322
I65
s(g15697
I42
g15698
Vinsert
p43323
I21
VExpressionStatement
p43324
tp43325
I2
s(g4558
I42
g4559
Vinsert
p43326
I42
VSimpleName: map2
p43327
tp43328
I1
s(Vinsert
p43329
I42
VSimpleName: setTestWhileIdle
p43330
Vinsert
p43331
I34
VNumberLiteral: 5000
p43332
tp43333
I1
s(Vinsert
p43334
I42
VSimpleName: put
p43335
Vinsert
p43336
I45
VStringLiteral: "ENABLE"
p43337
tp43338
I1
s(g8863
I42
g8864
Vinsert
p43339
I43
VSimpleType: DruidDataSource
p43340
tp43341
I6
s(g201
I42
g202
Vinsert
p43342
I33
VNullLiteral
p43343
tp43344
I3
s(g7965
I42
g7966
Vinsert
p43345
I43
VSimpleType: SQLSelectQueryBlock
p43346
tp43347
I1
s(g32833
I42
g32834
Vinsert
p43348
I42
VSimpleName: printlnAndAccept
p43349
tp43350
I1
s(Vinsert
p43351
I42
VSimpleName: parseStatement
p43352
Vinsert
p43353
I42
VSimpleName: stmt
p43354
tp43355
I8
s(g16380
I42
g16381
Vinsert
p43356
I34
VNumberLiteral: 0
p43357
tp43358
I1
s(g13559
I42
g13560
Vinsert
p43359
I27
VInfixExpression: >
p43360
tp43361
I11
s(g1750
I42
g1751
Vinsert
p43362
I42
VSimpleName: output
p43363
tp43364
I2
s(g18836
I42
g18837
Vinsert
p43365
I42
VSimpleName: Assert
p43366
tp43367
I2
s(g15029
I42
g15030
Vinsert
p43368
I32
VMethodInvocation
p43369
tp43370
I1
s(g6607
I42
g6608
Vinsert
p43371
I8
VBlock
p43372
tp43373
I1
s(g3169
I42
g3170
Vinsert
p43374
I41
VReturnStatement
p43375
tp43376
I3
s(g24184
I42
g24185
Vinsert
p43377
I43
VSimpleType: DruidDataSource
p43378
tp43379
I2
s(Vinsert
p43380
I42
VSimpleName: getOperator
p43381
Vinsert
p43382
I25
VIfStatement
p43383
tp43384
I8
s(g22206
I42
g22207
Vinsert
p43385
I42
VSimpleName: rows
p43386
tp43387
I2
s(g3396
I42
g3397
Vinsert
p43388
I45
VStringLiteral: "WHERE t1.FK_DEPT = t2.dept"
p43389
tp43390
I1
s(g9251
I42
g9252
Vinsert
p43391
I78
VMarkerAnnotation
p43392
tp43393
I1
s(g6333
I42
g6334
Vinsert
p43394
I42
VSimpleName: ucase
p43395
tp43396
I2
s(g21257
I42
g21258
Vinsert
p43397
I45
VStringLiteral: " where rownum <= 30"
p43398
tp43399
I1
s(g40026
I42
g40027
Vinsert
p43400
I42
VSimpleName: recyle
p43401
tp43402
I1
s(g5826
I42
g5827
Vinsert
p43403
I42
VSimpleName: SQLTableSource
p43404
tp43405
I2
s(g5610
I42
g5611
Vinsert
p43406
I41
VReturnStatement
p43407
tp43408
I1
s(g14765
I42
g14766
Vinsert
p43409
I39
VPrimitiveType: void
p43410
tp43411
I1
s(Vinsert
p43412
I42
VSimpleName: limit
p43413
Vinsert
p43414
I45
VStringLiteral: "select * from t"
p43415
tp43416
I1
s(g24062
I42
g24063
Vinsert
p43417
I45
VStringLiteral: "\u005ct\u005ctENABLE\u005cn"
p43418
tp43419
I1
s(g20240
I42
g20241
Vinsert
p43420
I42
VSimpleName: Closeable
p43421
tp43422
I1
s(g136
I42
g137
Vinsert
p43423
I42
VSimpleName: getViewCount
p43424
tp43425
I1
s(g19461
I42
g19462
Vinsert
p43426
I44
VSingleVariableDeclaration
p43427
tp43428
I6
s(g3554
I42
g3555
Vinsert
p43429
I42
VSimpleName: dbType
p43430
tp43431
I1
s(g14044
I42
g14045
Vinsert
p43432
I45
VStringLiteral: "\u005ctlanguage, \u005cn"
p43433
tp43434
I1
s(g41161
I42
g41162
Vinsert
p43435
I60
VVariableDeclarationStatement
p43436
tp43437
I3
s(Vinsert
p43438
I42
VSimpleName: println
p43439
Vinsert
p43440
I45
VStringLiteral: "Tables : "
p43441
tp43442
I26
s(g6396
I42
g6397
Vinsert
p43443
I43
VSimpleType: Certificate
p43444
tp43445
I1
s(g32771
I42
g32772
Vinsert
p43446
I42
VSimpleName: Assert
p43447
tp43448
I23
s(g34496
I42
g34497
Vinsert
p43449
I45
VStringLiteral: "("
p43450
tp43451
I1
s(g34347
I42
g34348
Vinsert
p43452
I42
VSimpleName: param1Value
p43453
tp43454
I1
s(g9939
I42
g9940
Vinsert
p43455
I38
VPrefixExpression: ++
p43456
tp43457
I1
s(g12222
I42
g12223
Vinsert
p43458
I42
VSimpleName: nextToken
p43459
tp43460
I1
s(g8311
I42
g8312
Vinsert
p43461
I39
VPrimitiveType: long
p43462
tp43463
I1
s(g23991
I42
g23992
Vinsert
p43464
I42
VSimpleName: compress
p43465
tp43466
I3
s(g14295
I42
g14296
Vinsert
p43467
I42
VSimpleName: nextToken
p43468
tp43469
I1
s(g5724
I42
g5725
Vinsert
p43470
I39
VPrimitiveType: void
p43471
tp43472
I1
s(g6852
I42
g6853
Vinsert
p43473
I42
VSimpleName: identifierEquals
p43474
tp43475
I3
s(g18763
I42
g18764
Vinsert
p43476
I43
VSimpleType: V
p43477
tp43478
I1
s(g11659
I42
g11660
Vinsert
p43479
I43
VSimpleType: SQLCreateTableStatement
p43480
tp43481
I3
s(g12448
I42
g12449
Vinsert
p43482
I43
VSimpleType: SQLWithSubqueryClause
p43483
tp43484
I1
s(g9235
I42
g9236
Vinsert
p43485
I45
VStringLiteral: "ExecuteCount"
p43486
tp43487
I1
s(g13823
I42
g13824
Vinsert
p43488
I43
VSimpleType: List
p43489
tp43490
I84
s(g8108
I42
g8109
Vinsert
p43491
I42
VSimpleName: normalizeName
p43492
tp43493
I1
s(g21039
I42
g21040
Vinsert
p43494
I39
VPrimitiveType: boolean
p43495
tp43496
I2
s(g4699
I42
g4700
Vinsert
p43497
I42
VSimpleName: getTables
p43498
tp43499
I12
s(g6529
I42
g6530
Vinsert
p43500
I42
VSimpleName: JdbcSqlStat
p43501
tp43502
I1
s(g20975
I42
g20976
Vinsert
p43503
I8
VBlock
p43504
tp43505
I1
s(g4283
I42
g4284
Vinsert
p43506
I52
VThisExpression
p43507
tp43508
I1
s(g10892
I42
g10893
Vinsert
p43509
I45
VStringLiteral: "\u005ct\u005ct\u005ct\u005ctSELECT ROWNUM AS ITEM, COLUMN_VALUE AS STR\u005cn"
p43510
tp43511
I1
s(g768
I42
g769
Vinsert
p43512
I42
VSimpleName: getParameters
p43513
tp43514
I1
s(g14829
I42
g14830
Vinsert
p43515
I34
VNumberLiteral: 0
p43516
tp43517
I13
s(g18078
I42
g18079
Vinsert
p43518
I45
VStringLiteral: "\u005ct\u005ct, issync, syncdate, deptsale)\u005cn"
p43519
tp43520
I1
s(g38499
I42
g38500
Vinsert
p43521
I42
VSimpleName: setConnectedTime
p43522
tp43523
I1
s(g6927
I42
g6928
Vinsert
p43524
I42
VSimpleName: token
p43525
tp43526
I1
s(g10252
I42
g10253
Vinsert
p43527
I42
VSimpleName: SQLExpr
p43528
tp43529
I4
s(g7660
I42
g7661
Vinsert
p43530
I45
VStringLiteral: "\u005cn\u005ct(a, b)"
p43531
tp43532
I2
s(g29966
I42
g29967
Vinsert
p43533
I42
VSimpleName: token
p43534
tp43535
I2
s(g24072
I42
g24073
Vinsert
p43536
I42
VSimpleName: getSelect
p43537
tp43538
I1
s(g16710
I42
g16711
Vinsert
p43539
I40
VQualifiedName: Token.BANG
p43540
tp43541
I1
s(Vinsert
p43542
I42
VSimpleName: setParent
p43543
Vinsert
p43544
I42
VSimpleName: offset
p43545
tp43546
I8
s(g19749
I42
g19750
Vinsert
p43547
I59
VVariableDeclarationFragment
p43548
tp43549
I2
s(g41876
I42
g41877
Vinsert
p43550
I42
VSimpleName: getDataSource
p43551
tp43552
I4
s(g15692
I42
g15693
Vinsert
p43553
I74
VParameterizedType: ThreadLocal<WallConditionContext>
p43554
tp43555
I1
s(g42032
I42
g42033
Vinsert
p43556
I45
VStringLiteral: "select * from ("
p43557
tp43558
I1
s(g27134
I42
g27135
Vinsert
p43559
I45
VStringLiteral: "abs(?)"
p43560
tp43561
I1
s(g11732
I42
g11733
Vinsert
p43562
I38
VPrefixExpression: ++
p43563
tp43564
I1
s(g38788
I42
g38789
Vinsert
p43565
I42
VSimpleName: getRelationships
p43566
tp43567
I1
s(g18399
I42
g18400
Vinsert
p43568
I60
VVariableDeclarationStatement
p43569
tp43570
I2
s(g41927
I42
g41928
Vinsert
p43571
I42
VSimpleName: setRowCount
p43572
tp43573
I1
s(g816
I42
g817
Vinsert
p43574
I45
VStringLiteral: "true"
p43575
tp43576
I1
s(g947
I42
g948
Vinsert
p43577
I42
VSimpleName: clone
p43578
tp43579
I2
s(g4339
I42
g4340
Vinsert
p43580
I8
VBlock
p43581
tp43582
I2
s(g9683
I42
g9684
Vinsert
p43583
I11
VCastExpression
p43584
tp43585
I2
s(g11678
I42
g11679
Vinsert
p43586
I42
VSimpleName: x
p43587
tp43588
I2
s(g18680
I42
g18681
Vinsert
p43589
I42
VSimpleName: result
p43590
tp43591
I2
s(Vinsert
p43592
I42
VSimpleName: token
p43593
Vinsert
p43594
I42
VSimpleName: database
p43595
tp43596
I2
s(g20796
I42
g20797
Vinsert
p43597
I42
VSimpleName: parameters
p43598
tp43599
I2
s(g5195
I42
g5196
Vinsert
p43600
I45
VStringLiteral: "OUTPUT"
p43601
tp43602
I1
s(g6742
I42
g6743
Vinsert
p43603
I8
VBlock
p43604
tp43605
I6
s(g18289
I42
g18290
Vinsert
p43606
I42
VSimpleName: debugCount
p43607
tp43608
I1
s(g11634
I42
g11635
Vinsert
p43609
I43
VSimpleType: Exception
p43610
tp43611
I1
s(g23828
I42
g23829
Vinsert
p43612
I42
VSimpleName: WallDenyStat
p43613
tp43614
I1
s(g3233
I42
g3234
Vinsert
p43615
I14
VClassInstanceCreation
p43616
tp43617
I18
s(g23501
I42
g23502
Vinsert
p43618
I4
VArrayInitializer
p43619
tp43620
I1
s(g27644
I42
g27645
Vinsert
p43621
I42
VSimpleName: mapping
p43622
tp43623
I3
s(g9065
I42
g9066
Vinsert
p43624
I43
VSimpleType: SQLUnaryExpr
p43625
tp43626
I4
s(g14234
I42
g14235
Vinsert
p43627
I39
VPrimitiveType: int
p43628
tp43629
I1
s(g8470
I42
g8471
Vinsert
p43630
I42
VSimpleName: getHaving
p43631
tp43632
I1
s(g2439
I42
g2440
Vinsert
p43633
I42
VSimpleName: fieldNames
p43634
tp43635
I2
s(g34855
I42
g34856
Vinsert
p43636
I9
VBooleanLiteral: true
p43637
tp43638
I1
s(g1770
I42
g1771
Vinsert
p43639
I21
VExpressionStatement
p43640
tp43641
I12
s(g1339
I42
g1340
Vinsert
p43642
I8
VBlock
p43643
tp43644
I27
s(Vinsert
p43645
I42
VSimpleName: assertEquals
p43646
Vinsert
p43647
I42
VSimpleName: test_connectPropertiesChange
p43648
tp43649
I1
s(g20382
I42
g20383
Vinsert
p43650
I42
VSimpleName: len
p43651
tp43652
I1
s(g3012
I42
g3013
Vinsert
p43653
I21
VExpressionStatement
p43654
tp43655
I2
s(g24959
I42
g24960
Vinsert
p43656
I32
VMethodInvocation
p43657
tp43658
I3
s(g26638
I42
g26639
Vinsert
p43659
I27
VInfixExpression: &&
p43660
tp43661
I2
s(g14535
I42
g14536
Vinsert
p43662
I45
VStringLiteral: "\u005ct\u005ctAND outer.stamp < bs.stamp\u005cn"
p43663
tp43664
I1
s(g10829
I42
g10830
Vinsert
p43665
I42
VSimpleName: str
p43666
tp43667
I1
s(g28273
I42
g28274
Vinsert
p43668
I40
VQualifiedName: System.out
p43669
tp43670
I69
s(g301
I42
g302
Vinsert
p43671
I27
VInfixExpression: +
p43672
tp43673
I10
s(g6116
I42
g6117
Vinsert
p43674
I8
VBlock
p43675
tp43676
I1
s(g2805
I42
g2806
Vinsert
p43677
I59
VVariableDeclarationFragment
p43678
tp43679
I1
s(Vinsert
p43680
I42
VSimpleName: assertTrue
p43681
Vinsert
p43682
I42
VSimpleName: MySqlWallTest25
p43683
tp43684
I1
s(g7673
I42
g7674
Vinsert
p43685
I40
VQualifiedName: Token.COMMA
p43686
tp43687
I2
s(g17174
I42
g17175
Vinsert
p43688
I45
VStringLiteral: "\u005ctc1_2\u005cn"
p43689
tp43690
I1
s(g35171
I42
g35172
Vinsert
p43691
I38
VPrefixExpression: !
p43692
tp43693
I1
s(g419
I42
g420
Vinsert
p43694
I33
VNullLiteral
p43695
tp43696
I1
s(g6539
I42
g6540
Vinsert
p43697
I45
VStringLiteral: "\u005cn\u005ctcommission_pct NUMBER(7, 2),"
p43698
tp43699
I6
s(Vinsert
p43700
I42
VSimpleName: assertEquals
p43701
Vinsert
p43702
I42
VSimpleName: EvalMethodTest_ltrim
p43703
tp43704
I1
s(g17199
I42
g17200
Vinsert
p43705
I45
VStringLiteral: "CHARACTER SET"
p43706
tp43707
I1
s(g2173
I42
g2174
Vinsert
p43708
I83
VModifier: public
p43709
tp43710
I1
s(Vinsert
p43711
I42
VSimpleName: endVisit
p43712
Vinsert
p43713
I42
VSimpleName: partition
p43714
tp43715
I2
s(Vinsert
p43716
I42
VSimpleName: assertEquals
p43717
Vinsert
p43718
I40
VQualifiedName: JdbcConstants.SQL_SERVER
p43719
tp43720
I3
s(g3737
I42
g3738
Vinsert
p43721
I42
VSimpleName: varExpr
p43722
tp43723
I1
s(Vinsert
p43724
I42
VSimpleName: accept
p43725
Vinsert
p43726
I42
VSimpleName: setParameterized
p43727
tp43728
I1
s(Vinsert
p43729
I42
VSimpleName: setParent
p43730
Vinsert
p43731
I42
VSimpleName: database
p43732
tp43733
I3
s(Vinsert
p43734
I42
VSimpleName: getClass
p43735
Vinsert
p43736
I42
VSimpleName: connection
p43737
tp43738
I1
s(g33679
I42
g33680
Vinsert
p43739
I42
VSimpleName: getCreateCount
p43740
tp43741
I1
s(g6116
I42
g6117
Vinsert
p43742
I42
VSimpleName: MultiDataSource
p43743
tp43744
I1
s(Vinsert
p43745
I42
VSimpleName: assertEquals
p43746
Vinsert
p43747
I42
VSimpleName: MySqlUpdateStatement
p43748
tp43749
I2
s(g43200
I42
g43201
Vinsert
p43750
I42
VSimpleName: strategyList
p43751
tp43752
I1
s(g841
I42
g842
Vinsert
p43753
I42
VSimpleName: text
p43754
tp43755
I1
s(g14551
I42
g14552
Vinsert
p43756
I9
VBooleanLiteral: false
p43757
tp43758
I1
s(g34622
I42
g34623
Vinsert
p43759
I42
VSimpleName: setLoginTimeout
p43760
tp43761
I1
s(g9732
I42
g9733
Vinsert
p43762
I42
VSimpleName: setEnable
p43763
tp43764
I1
s(g20320
I42
g20321
Vinsert
p43765
I8
VBlock
p43766
tp43767
I1
s(g19355
I42
g19356
Vinsert
p43768
I43
VSimpleType: SQLQueryExpr
p43769
tp43770
I4
s(g19315
I42
g19316
Vinsert
p43771
I34
VNumberLiteral: 1
p43772
tp43773
I1
s(g18383
I42
g18384
Vinsert
p43774
I42
VSimpleName: numFullGroups
p43775
tp43776
I1
s(g7893
I42
g7894
Vinsert
p43777
I8
VBlock
p43778
tp43779
I15
s(g5262
I42
g5263
Vinsert
p43780
I32
VMethodInvocation
p43781
tp43782
I1
s(g6557
I42
g6558
Vinsert
p43783
I42
VSimpleName: getOwnernName
p43784
tp43785
I1
s(g10655
I42
g10656
Vinsert
p43786
I25
VIfStatement
p43787
tp43788
I1
s(g11910
I42
g11911
Vinsert
p43789
I32
VMethodInvocation
p43790
tp43791
I3
s(g12930
I42
g12931
Vinsert
p43792
I42
VSimpleName: SQLOrderBy
p43793
tp43794
I3
s(g6617
I42
g6618
Vinsert
p43795
I43
VSimpleType: ArrayList
p43796
tp43797
I2
s(g1584
I42
g1585
Vinsert
p43798
I22
VFieldAccess
p43799
tp43800
I1
s(g19875
I42
g19876
Vinsert
p43801
I42
VSimpleName: addCondition
p43802
tp43803
I1
s(Vinsert
p43804
I42
VSimpleName: getInstance
p43805
Vinsert
p43806
I42
VSimpleName: context
p43807
tp43808
I2
s(g11091
I42
g11092
Vinsert
p43809
I42
VSimpleName: getStatements
p43810
tp43811
I1
s(g18723
I42
g18724
Vinsert
p43812
I45
VStringLiteral: "SHOW FULL TABLES"
p43813
tp43814
I1
s(g11187
I42
g11188
Vinsert
p43815
I83
VModifier: final
p43816
tp43817
I2
s(g19315
I42
g19316
Vinsert
p43818
I42
VSimpleName: size
p43819
tp43820
I4
s(Vinsert
p43821
I42
VSimpleName: add
p43822
Vinsert
p43823
I42
VSimpleName: add
p43824
tp43825
I10
s(g38510
I42
g38511
Vinsert
p43826
I43
VSimpleType: SQLSomeExpr
p43827
tp43828
I1
s(Vinsert
p43829
I42
VSimpleName: assertFalse
p43830
Vinsert
p43831
I42
VSimpleName: k3
p43832
tp43833
I2
s(g23924
I42
g23925
Vinsert
p43834
I27
VInfixExpression: <
p43835
tp43836
I7
s(g19678
I42
g19679
Vinsert
p43837
I11
VCastExpression
p43838
tp43839
I1
s(g6699
I42
g6700
Vinsert
p43840
I14
VClassInstanceCreation
p43841
tp43842
I2
s(g20215
I42
g20216
Vinsert
p43843
I25
VIfStatement
p43844
tp43845
I4
s(g487
I42
g488
Vinsert
p43846
I43
VSimpleType: String
p43847
tp43848
I1
s(g15490
I42
g15491
Vinsert
p43849
I44
VSingleVariableDeclaration
p43850
tp43851
I2
s(Vinsert
p43852
I42
VSimpleName: nextToken
p43853
Vinsert
p43854
I40
VQualifiedName: Token.ANY
p43855
tp43856
I1
s(Vinsert
p43857
I42
VSimpleName: append
p43858
Vinsert
p43859
I42
VSimpleName: child
p43860
tp43861
I1
s(g14279
I42
g14280
Vinsert
p43862
I45
VStringLiteral: "\u005ctFROM sys.V_$SESSION a, sys.V_$LOCK b\u005cn"
p43863
tp43864
I1
s(g4288
I42
g4289
Vinsert
p43865
I42
VSimpleName: x
p43866
tp43867
I2
s(g16460
I42
g16461
Vinsert
p43868
I42
VSimpleName: totalLen
p43869
tp43870
I1
s(g14535
I42
g14536
Vinsert
p43871
I45
VStringLiteral: "\u005ct)"
p43872
tp43873
I1
s(g3388
I42
g3389
Vinsert
p43874
I45
VStringLiteral: ""
p43875
tp43876
I8
s(g29488
I42
g29489
Vinsert
p43877
I42
VSimpleName: getSessionStatData
p43878
tp43879
I1
s(g1790
I42
g1791
Vinsert
p43880
I44
VSingleVariableDeclaration
p43881
tp43882
I1
s(g26526
I42
g26527
Vinsert
p43883
I42
VSimpleName: parseStatementList
p43884
tp43885
I17
s(g21982
I42
g21983
Vinsert
p43886
I45
VStringLiteral: "date '"
p43887
tp43888
I1
s(Vinsert
p43889
I42
VSimpleName: assertEquals
p43890
Vinsert
p43891
I42
VSimpleName: EvalMethodTest_Char
p43892
tp43893
I1
s(g146
I42
g147
Vinsert
p43894
I42
VSimpleName: SQLServerSelectQueryBlock
p43895
tp43896
I2
s(g40401
I42
g40402
Vinsert
p43897
I45
VStringLiteral: "CREATE TABLE ZEUS.USER_LOGIN (\u005cn"
p43898
tp43899
I1
s(g42262
I42
g42263
Vinsert
p43900
I45
VStringLiteral: "10"
p43901
tp43902
I1
s(g18551
I42
g18552
Vinsert
p43903
I42
VSimpleName: setTableName
p43904
tp43905
I1
s(g12822
I42
g12823
Vinsert
p43906
I42
VSimpleName: useUnfairLock
p43907
tp43908
I1
s(g9420
I42
g9421
Vinsert
p43909
I43
VSimpleType: Exception
p43910
tp43911
I2
s(g5434
I42
g5435
Vinsert
p43912
I42
VSimpleName: value
p43913
tp43914
I1
s(g7741
I42
g7742
Vinsert
p43915
I42
VSimpleName: parseCase
p43916
tp43917
I1
s(g18355
I42
g18356
Vinsert
p43918
I43
VSimpleType: SQLFetchStatement
p43919
tp43920
I2
s(g8692
I42
g8693
Vinsert
p43921
I34
VNumberLiteral: 1
p43922
tp43923
I1
s(g6663
I42
g6664
Vinsert
p43924
I42
VSimpleName: isPermitSchema
p43925
tp43926
I1
s(g5792
I42
g5793
Vinsert
p43927
I43
VSimpleType: MySqlAlterUserStatement
p43928
tp43929
I1
s(Vinsert
p43930
I42
VSimpleName: createOutputVisitor
p43931
Vinsert
p43932
I42
VSimpleName: out
p43933
tp43934
I17
s(g2837
I42
g2838
Vinsert
p43935
I45
VStringLiteral: "privateKey:"
p43936
tp43937
I1
s(g16980
I42
g16981
Vinsert
p43938
I83
VModifier: public
p43939
tp43940
I4
s(g5729
I42
g5730
Vinsert
p43941
I22
VFieldAccess
p43942
tp43943
I2
s(Vinsert
p43944
I42
VSimpleName: parseStatements
p43945
Vinsert
p43946
I45
VStringLiteral: "select * from t1;select * from t2;"
p43947
tp43948
I1
s(g31505
I42
g31506
Vinsert
p43949
I54
VTryStatement
p43950
tp43951
I1
s(Vinsert
p43952
I42
VSimpleName: formatMySql
p43953
Vinsert
p43954
I21
VExpressionStatement
p43955
tp43956
I1
s(Vinsert
p43957
I42
VSimpleName: add
p43958
Vinsert
p43959
I42
VSimpleName: tableName
p43960
tp43961
I2
s(Vinsert
p43962
I42
VSimpleName: setParent
p43963
Vinsert
p43964
I42
VSimpleName: statement
p43965
tp43966
I3
s(g35893
I42
g35894
Vinsert
p43967
I45
VStringLiteral: "NAME"
p43968
tp43969
I1
s(g19152
I42
g19153
Vinsert
p43970
I59
VVariableDeclarationFragment
p43971
tp43972
I6
s(g38822
I42
g38823
Vinsert
p43973
I42
VSimpleName: sql
p43974
tp43975
I4
s(g5849
I42
g5850
Vinsert
p43976
I42
VSimpleName: propertyValue
p43977
tp43978
I1
s(g19435
I42
g19436
Vinsert
p43979
I42
VSimpleName: setRight
p43980
tp43981
I2
s(g4339
I42
g4340
Vinsert
p43982
I42
VSimpleName: block
p43983
tp43984
I3
s(g4725
I42
g4726
Vinsert
p43985
I43
VSimpleType: Attribute
p43986
tp43987
I1
s(Vinsert
p43988
I42
VSimpleName: output
p43989
Vinsert
p43990
I42
VSimpleName: name
p43991
tp43992
I3
s(g136
I42
g137
Vinsert
p43993
I8
VBlock
p43994
tp43995
I5
s(g652
I42
g653
Vinsert
p43996
I43
VSimpleType: Map
p43997
tp43998
I1
s(g40052
I42
g40053
Vinsert
p43999
I42
VSimpleName: getLeft
p44000
tp44001
I1
s(g5757
I42
g5758
Vinsert
p44002
I43
VSimpleType: SQLSelectStatement
p44003
tp44004
I1
s(g28534
I42
g28535
Vinsert
p44005
I36
VParenthesizedExpression
p44006
tp44007
I1
s(Vinsert
p44008
I42
VSimpleName: decrypt
p44009
Vinsert
p44010
I42
VSimpleName: RsaDecrypter
p44011
tp44012
I2
s(g6577
I42
g6578
Vinsert
p44013
I45
VStringLiteral: "WHERE a IN (?)\u005cn"
p44014
tp44015
I2
s(g221
I42
g222
Vinsert
p44016
I45
VStringLiteral: "syntax error, expect TABLES or TABLE, actual "
p44017
tp44018
I1
s(g14765
I42
g14766
Vinsert
p44019
I27
VInfixExpression: ==
p44020
tp44021
I1
s(g27649
I42
g27650
Vinsert
p44022
I45
VStringLiteral: "\u005ctUNION\u005cn"
p44023
tp44024
I1
s(g15255
I42
g15256
Vinsert
p44025
I42
VSimpleName: Thread
p44026
tp44027
I1
s(g111
I42
g112
Vinsert
p44028
I42
VSimpleName: nextToken
p44029
tp44030
I2
s(g10135
I42
g10136
Vinsert
p44031
I42
VSimpleName: setForReadOnly
p44032
tp44033
I1
s(g3719
I42
g3720
Vinsert
p44034
I42
VSimpleName: Assert
p44035
tp44036
I87
s(g7686
I42
g7687
Vinsert
p44037
I42
VSimpleName: tableHashCode
p44038
tp44039
I1
s(g4188
I42
g4189
Vinsert
p44040
I78
VMarkerAnnotation
p44041
tp44042
I2
s(Vinsert
p44043
I42
VSimpleName: assertEquals
p44044
Vinsert
p44045
I42
VSimpleName: EvalMethodAtan2Test
p44046
tp44047
I1
s(g6671
I42
g6672
Vinsert
p44048
I40
VQualifiedName: ErrorCode.EVIL_HINTS
p44049
tp44050
I2
s(g3417
I42
g3418
Vinsert
p44051
I33
VNullLiteral
p44052
tp44053
I2
s(g444
I42
g445
Vinsert
p44054
I8
VBlock
p44055
tp44056
I1
s(g11649
I42
g11650
Vinsert
p44057
I59
VVariableDeclarationFragment
p44058
tp44059
I1
s(g12289
I42
g12290
Vinsert
p44060
I33
VNullLiteral
p44061
tp44062
I1
s(g5113
I42
g5114
Vinsert
p44063
I45
VStringLiteral: "TIMESTAMP"
p44064
tp44065
I1
s(g9415
I42
g9416
Vinsert
p44066
I60
VVariableDeclarationStatement
p44067
tp44068
I1
s(g11996
I42
g11997
Vinsert
p44069
I42
VSimpleName: putAttribute
p44070
tp44071
I1
s(g4859
I42
g4860
Vinsert
p44072
I44
VSingleVariableDeclaration
p44073
tp44074
I1
s(g8716
I42
g8717
Vinsert
p44075
I42
VSimpleName: histogram_10_100
p44076
tp44077
I1
s(g1978
I42
g1979
Vinsert
p44078
I32
VMethodInvocation
p44079
tp44080
I1
s(g11737
I42
g11738
Vinsert
p44081
I42
VSimpleName: List
p44082
tp44083
I1
s(g4824
I42
g4825
Vinsert
p44084
I42
VSimpleName: JSON
p44085
tp44086
I1
s(g16321
I42
g16322
Vinsert
p44087
I39
VPrimitiveType: int
p44088
tp44089
I2
s(Vinsert
p44090
I42
VSimpleName: assertEquals
p44091
Vinsert
p44092
I45
VStringLiteral: "SHOW COUNT(*) WARNINGS"
p44093
tp44094
I1
s(g17439
I42
g17440
Vinsert
p44095
I22
VFieldAccess
p44096
tp44097
I1
s(g17291
I42
g17292
Vinsert
p44098
I42
VSimpleName: add
p44099
tp44100
I1
s(g17017
I42
g17018
Vinsert
p44101
I45
VStringLiteral: "username"
p44102
tp44103
I1
s(g4040
I42
g4041
Vinsert
p44104
I42
VSimpleName: SQLBlockStatement
p44105
tp44106
I2
s(g2044
I42
g2045
Vinsert
p44107
I59
VVariableDeclarationFragment
p44108
tp44109
I2
s(g2702
I42
g2703
Vinsert
p44110
I42
VSimpleName: print
p44111
tp44112
I1
s(g14353
I42
g14354
Vinsert
p44113
I42
VSimpleName: assertFalse
p44114
tp44115
I1
s(g11816
I42
g11817
Vinsert
p44116
I45
VStringLiteral: "from employee\u005cn"
p44117
tp44118
I1
s(g25409
I42
g25410
Vinsert
p44119
I42
VSimpleName: ident
p44120
tp44121
I2
s(g10736
I42
g10737
Vinsert
p44122
I42
VSimpleName: setObject
p44123
tp44124
I1
s(g1007
I42
g1008
Vinsert
p44125
I22
VFieldAccess
p44126
tp44127
I1
s(g4824
I42
g4825
Vinsert
p44128
I60
VVariableDeclarationStatement
p44129
tp44130
I1
s(g26143
I42
g26144
Vinsert
p44131
I25
VIfStatement
p44132
tp44133
I1
s(Vinsert
p44134
I42
VSimpleName: getWhere
p44135
Vinsert
p44136
I42
VSimpleName: getFrom
p44137
tp44138
I2
s(g572
I42
g573
Vinsert
p44139
I32
VMethodInvocation
p44140
tp44141
I16
s(g17301
I42
g17302
Vinsert
p44142
I45
VStringLiteral: "START"
p44143
tp44144
I1
s(g18031
I42
g18032
Vinsert
p44145
I42
VSimpleName: syntaxError
p44146
tp44147
I5
s(g26143
I42
g26144
Vinsert
p44148
I7
VAssignment: =
p44149
tp44150
I7
s(g7409
I42
g7410
Vinsert
p44151
I83
VModifier: public
p44152
tp44153
I2
s(g1150
I42
g1151
Vinsert
p44154
I32
VMethodInvocation
p44155
tp44156
I2
s(g9878
I42
g9879
Vinsert
p44157
I40
VQualifiedName: com.alibaba.druid.sql.ast.SQLOrderingSpecification
p44158
tp44159
I1
s(g7171
I42
g7172
Vinsert
p44160
I42
VSimpleName: addValueCause
p44161
tp44162
I1
s(g1193
I42
g1194
Vinsert
p44163
I8
VBlock
p44164
tp44165
I1
s(g16224
I42
g16225
Vinsert
p44166
I45
VStringLiteral: "forwarder_service"
p44167
tp44168
I1
s(g7450
I42
g7451
Vinsert
p44169
I32
VMethodInvocation
p44170
tp44171
I3
s(g18054
I42
g18055
Vinsert
p44172
I45
VStringLiteral: "alias : "
p44173
tp44174
I1
s(g32107
I42
g32108
Vinsert
p44175
I42
VSimpleName: getDbType
p44176
tp44177
I1
s(g7720
I42
g7721
Vinsert
p44178
I42
VSimpleName: getActiveConnectionStackTraceByDataSourceId
p44179
tp44180
I3
s(g602
I42
g603
Vinsert
p44181
I39
VPrimitiveType: void
p44182
tp44183
I4
s(g29627
I42
g29628
Vinsert
p44184
I60
VVariableDeclarationStatement
p44185
tp44186
I1
s(Vinsert
p44187
I42
VSimpleName: limit
p44188
Vinsert
p44189
I45
VStringLiteral: "select * from t1 where id > 1"
p44190
tp44191
I2
s(g15697
I42
g15698
Vinsert
p44192
I45
VStringLiteral: "StartTransactionCount"
p44193
tp44194
I1
s(g8282
I42
g8283
Vinsert
p44195
I14
VClassInstanceCreation
p44196
tp44197
I1
s(Vinsert
p44198
I42
VSimpleName: assertEquals
p44199
Vinsert
p44200
I42
VSimpleName: GroupingSetExpr
p44201
tp44202
I3
s(g14001
I42
g14002
Vinsert
p44203
I42
VSimpleName: dataSourceHolder
p44204
tp44205
I1
s(g12869
I42
g12870
Vinsert
p44206
I42
VSimpleName: SQLUnionQuery
p44207
tp44208
I1
s(g5638
I42
g5639
Vinsert
p44209
I42
VSimpleName: connection_getWarnings
p44210
tp44211
I1
s(g13079
I42
g13080
Vinsert
p44212
I27
VInfixExpression: !=
p44213
tp44214
I7
s(g6640
I42
g6641
Vinsert
p44215
I9
VBooleanLiteral: true
p44216
tp44217
I1
s(g16359
I42
g16360
Vinsert
p44218
I60
VVariableDeclarationStatement
p44219
tp44220
I1
s(g1883
I42
g1884
Vinsert
p44221
I25
VIfStatement
p44222
tp44223
I1
s(g13981
I42
g13982
Vinsert
p44224
I42
VSimpleName: n
p44225
tp44226
I2
s(g1825
I42
g1826
Vinsert
p44227
I42
VSimpleName: setAccessible
p44228
tp44229
I1
s(g15456
I42
g15457
Vinsert
p44230
I43
VSimpleType: Exception
p44231
tp44232
I2
s(g37155
I42
g37156
Vinsert
p44233
I42
VSimpleName: getTableNames
p44234
tp44235
I2
s(g18581
I42
g18582
Vinsert
p44236
I43
VSimpleType: String
p44237
tp44238
I7
s(g4334
I42
g4335
Vinsert
p44239
I27
VInfixExpression: ==
p44240
tp44241
I1
s(Vinsert
p44242
I42
VSimpleName: error
p44243
Vinsert
p44244
I45
VStringLiteral: "validationQuery not set"
p44245
tp44246
I1
s(g5844
I42
g5845
Vinsert
p44247
I40
VQualifiedName: Token.CONSTRAINT
p44248
tp44249
I1
s(g27459
I42
g27460
Vinsert
p44250
I42
VSimpleName: System
p44251
tp44252
I1
s(Vinsert
p44253
I42
VSimpleName: stringVal
p44254
Vinsert
p44255
I43
VSimpleType: SQLNCharExpr
p44256
tp44257
I1
s(g8155
I42
g8156
Vinsert
p44258
I42
VSimpleName: inherits
p44259
tp44260
I3
s(g21171
I42
g21172
Vinsert
p44261
I42
VSimpleName: partitionsCount
p44262
tp44263
I2
s(g27680
I42
g27681
Vinsert
p44264
I27
VInfixExpression: ==
p44265
tp44266
I8
s(g13957
I42
g13958
Vinsert
p44267
I42
VSimpleName: entry
p44268
tp44269
I4
s(g17012
I42
g17013
Vinsert
p44270
I44
VSingleVariableDeclaration
p44271
tp44272
I1
s(g6313
I42
g6314
Vinsert
p44273
I8
VBlock
p44274
tp44275
I1
s(g4834
I42
g4835
Vinsert
p44276
I42
VSimpleName: dataSource
p44277
tp44278
I12
s(g23739
I42
g23740
Vinsert
p44279
I43
VSimpleType: String
p44280
tp44281
I2
s(g8956
I42
g8957
Vinsert
p44282
I42
VSimpleName: WallCheckResult
p44283
tp44284
I1
s(g4679
I42
g4680
Vinsert
p44285
I21
VExpressionStatement
p44286
tp44287
I1
s(g13593
I42
g13594
Vinsert
p44288
I42
VSimpleName: debugUnreturnedConnectionStackTraces
p44289
tp44290
I1
s(g41745
I42
g41746
Vinsert
p44291
I43
VSimpleType: String
p44292
tp44293
I1
s(g2359
I42
g2360
Vinsert
p44294
I42
VSimpleName: rowType
p44295
tp44296
I1
s(g24023
I42
g24024
Vinsert
p44297
I32
VMethodInvocation
p44298
tp44299
I4
s(Vinsert
p44300
I42
VSimpleName: parseStatements
p44301
Vinsert
p44302
I45
VStringLiteral: "LEFT JOIN dbo.[Order History] AS oh   \u005cn"
p44303
tp44304
I1
s(g9433
I42
g9434
Vinsert
p44305
I27
VInfixExpression: <=
p44306
tp44307
I1
s(g6031
I42
g6032
Vinsert
p44308
I42
VSimpleName: getColumns
p44309
tp44310
I1
s(g6023
I42
g6024
Vinsert
p44311
I42
VSimpleName: oracleConn
p44312
tp44313
I1
s(Vinsert
p44314
I42
VSimpleName: visit
p44315
Vinsert
p44316
I42
VSimpleName: name
p44317
tp44318
I11
s(g1060
I42
g1061
Vinsert
p44319
I43
VSimpleType: Method
p44320
tp44321
I2
s(g4134
I42
g4135
Vinsert
p44322
I54
VTryStatement
p44323
tp44324
I1
s(g27372
I42
g27373
Vinsert
p44325
I43
VSimpleType: SQLIntegerExpr
p44326
tp44327
I4
s(g10919
I42
g10920
Vinsert
p44328
I14
VClassInstanceCreation
p44329
tp44330
I1
s(g3159
I42
g3160
Vinsert
p44331
I32
VMethodInvocation
p44332
tp44333
I3
s(g3159
I42
g3160
Vinsert
p44334
I42
VSimpleName: x
p44335
tp44336
I1
s(g4243
I42
g4244
Vinsert
p44337
I42
VSimpleName: print
p44338
tp44339
I1
s(Vinsert
p44340
I42
VSimpleName: currentTimeMillis
p44341
Vinsert
p44342
I38
VPrefixExpression: ++
p44343
tp44344
I5
s(g32628
I42
g32629
Vinsert
p44345
I83
VModifier: static
p44346
tp44347
I2
s(g5584
I42
g5585
Vinsert
p44348
I25
VIfStatement
p44349
tp44350
I1
s(g13617
I42
g13618
Vinsert
p44351
I8
VBlock
p44352
tp44353
I1
s(g5211
I42
g5212
Vinsert
p44354
I45
VStringLiteral: "CREATE TABLE k2 ("
p44355
tp44356
I1
s(g141
I42
g142
Vinsert
p44357
I42
VSimpleName: columns
p44358
tp44359
I3
s(g18606
I42
g18607
Vinsert
p44360
I52
VThisExpression
p44361
tp44362
I1
s(g14316
I42
g14317
Vinsert
p44363
I42
VSimpleName: StatementExecuteType
p44364
tp44365
I1
s(g13050
I42
g13051
Vinsert
p44366
I42
VSimpleName: LOG
p44367
tp44368
I6
s(g13789
I42
g13790
Vinsert
p44369
I42
VSimpleName: lexer
p44370
tp44371
I2
s(g25328
I42
g25329
Vinsert
p44372
I42
VSimpleName: Class
p44373
tp44374
I1
s(g14765
I42
g14766
Vinsert
p44375
I8
VBlock
p44376
tp44377
I1
s(g1284
I42
g1285
Vinsert
p44378
I45
VStringLiteral: "select "
p44379
tp44380
I1
s(g14055
I42
g14056
Vinsert
p44381
I42
VSimpleName: accept
p44382
tp44383
I1
s(g30636
I42
g30637
Vinsert
p44384
I42
VSimpleName: chain
p44385
tp44386
I1
s(g28515
I42
g28516
Vinsert
p44387
I42
VSimpleName: maxValue
p44388
tp44389
I1
s(Vinsert
p44390
I42
VSimpleName: query
p44391
Vinsert
p44392
I42
VSimpleName: OracleSelectParser
p44393
tp44394
I2
s(g13136
I42
g13137
Vinsert
p44395
I42
VSimpleName: tableSource
p44396
tp44397
I1
s(g7394
I42
g7395
Vinsert
p44398
I42
VSimpleName: assertTrue
p44399
tp44400
I2
s(g12938
I42
g12939
Vinsert
p44401
I27
VInfixExpression: !=
p44402
tp44403
I1
s(g16123
I42
g16124
Vinsert
p44404
I59
VVariableDeclarationFragment
p44405
tp44406
I3
s(g977
I42
g978
Vinsert
p44407
I42
VSimpleName: i
p44408
tp44409
I12
s(g9428
I42
g9429
Vinsert
p44410
I42
VSimpleName: x
p44411
tp44412
I9
s(Vinsert
p44413
I42
VSimpleName: assertFalse
p44414
Vinsert
p44415
I42
VSimpleName: MySqlWallTest6
p44416
tp44417
I1
s(g5356
I42
g5357
Vinsert
p44418
I42
VSimpleName: fail
p44419
tp44420
I1
s(Vinsert
p44421
I42
VSimpleName: put
p44422
Vinsert
p44423
I42
VSimpleName: entryData
p44424
tp44425
I2
s(g21913
I42
g21914
Vinsert
p44426
I34
VNumberLiteral: 0
p44427
tp44428
I2
s(g21534
I42
g21535
Vinsert
p44429
I42
VSimpleName: ConnectionProxy
p44430
tp44431
I2
s(g7063
I42
g7064
Vinsert
p44432
I59
VVariableDeclarationFragment
p44433
tp44434
I1
s(g3885
I42
g3886
Vinsert
p44435
I45
VStringLiteral: "select * from db_00.t_00_00 where id > 1;"
p44436
tp44437
I1
s(g2880
I42
g2881
Vinsert
p44438
I45
VStringLiteral: "\u005cn\u005ctstate_province VARCHAR2(25),"
p44439
tp44440
I4
s(g2309
I42
g2310
Vinsert
p44441
I42
VSimpleName: WallContext
p44442
tp44443
I1
s(g15818
I42
g15819
Vinsert
p44444
I59
VVariableDeclarationFragment
p44445
tp44446
I1
s(g2464
I42
g2465
Vinsert
p44447
I8
VBlock
p44448
tp44449
I1
s(g1963
I42
g1964
Vinsert
p44450
I33
VNullLiteral
p44451
tp44452
I1
s(g36737
I42
g36738
Vinsert
p44453
I42
VSimpleName: error
p44454
tp44455
I2
s(g24579
I42
g24580
Vinsert
p44456
I42
VSimpleName: tableName
p44457
tp44458
I1
s(Vinsert
p44459
I42
VSimpleName: hashCode
p44460
Vinsert
p44461
I42
VSimpleName: value
p44462
tp44463
I16
s(g27680
I42
g27681
Vinsert
p44464
I9
VBooleanLiteral: false
p44465
tp44466
I2
s(g6539
I42
g6540
Vinsert
p44467
I45
VStringLiteral: "\u005cn\u005ctemployee_id NUMBER(4),"
p44468
tp44469
I4
s(g8969
I42
g8970
Vinsert
p44470
I42
VSimpleName: userService
p44471
tp44472
I1
s(g4839
I42
g4840
Vinsert
p44473
I59
VVariableDeclarationFragment
p44474
tp44475
I1
s(g6
I42
g7
Vinsert
p44476
I39
VPrimitiveType: int
p44477
tp44478
I1
s(g7756
I42
g7757
Vinsert
p44479
I8
VBlock
p44480
tp44481
I3
s(g17182
I42
g17183
Vinsert
p44482
I45
VStringLiteral: "EXPRESSION_CONDITION "
p44483
tp44484
I1
s(g2568
I42
g2569
Vinsert
p44485
I42
VSimpleName: DruidStat
p44486
tp44487
I1
s(g21494
I42
g21495
Vinsert
p44488
I42
VSimpleName: checkValid
p44489
tp44490
I2
s(g2339
I42
g2340
Vinsert
p44491
I42
VSimpleName: ucase
p44492
tp44493
I1
s(g1344
I42
g1345
Vinsert
p44494
I42
VSimpleName: indexOf
p44495
tp44496
I1
s(g20827
I42
g20828
Vinsert
p44497
I43
VSimpleType: Exception
p44498
tp44499
I1
s(g17428
I42
g17429
Vinsert
p44500
I42
VSimpleName: String
p44501
tp44502
I5
s(g9243
I42
g9244
Vinsert
p44503
I59
VVariableDeclarationFragment
p44504
tp44505
I2
s(g7083
I42
g7084
Vinsert
p44506
I42
VSimpleName: hash
p44507
tp44508
I4
s(g11991
I42
g11992
Vinsert
p44509
I42
VSimpleName: ArrayList
p44510
tp44511
I5
s(g6061
I42
g6062
Vinsert
p44512
I42
VSimpleName: print
p44513
tp44514
I2
s(g10618
I42
g10619
Vinsert
p44515
I42
VSimpleName: Integer
p44516
tp44517
I1
s(g32782
I42
g32783
Vinsert
p44518
I31
VMethodDeclaration
p44519
tp44520
I2
s(g8796
I42
g8797
Vinsert
p44521
I32
VMethodInvocation
p44522
tp44523
I3
s(g22802
I42
g22803
Vinsert
p44524
I45
VStringLiteral: " GLOBAL QUERY REWRITE"
p44525
tp44526
I1
s(g19120
I42
g19121
Vinsert
p44527
I42
VSimpleName: getInteger
p44528
tp44529
I1
s(g3063
I42
g3064
Vinsert
p44530
I43
VSimpleType: Exception
p44531
tp44532
I2
s(g14212
I42
g14213
Vinsert
p44533
I43
VSimpleType: WebAppStat
p44534
tp44535
I2
s(Vinsert
p44536
I42
VSimpleName: createSQLStatementParser
p44537
Vinsert
p44538
I45
VStringLiteral: "SELECT UMID, HWID, MAC, GUID, RID , GMT_CREATE, GMT_MODIFIED FROM umid_rid "
p44539
tp44540
I1
s(g2905
I42
g2906
Vinsert
p44541
I59
VVariableDeclarationFragment
p44542
tp44543
I1
s(g2059
I42
g2060
Vinsert
p44544
I42
VSimpleName: tableMapping
p44545
tp44546
I1
s(g18235
I42
g18236
Vinsert
p44547
I42
VSimpleName: subPartition
p44548
tp44549
I1
s(g9006
I42
g9007
Vinsert
p44550
I42
VSimpleName: conn
p44551
tp44552
I31
s(g7655
I42
g7656
Vinsert
p44553
I42
VSimpleName: testWhileIdle
p44554
tp44555
I3
s(g34044
I42
g34045
Vinsert
p44556
I34
VNumberLiteral: 0
p44557
tp44558
I7
s(g1968
I42
g1969
Vinsert
p44559
I42
VSimpleName: token
p44560
tp44561
I2
s(g10297
I42
g10298
Vinsert
p44562
I45
VStringLiteral: "do begin select * from test.t2; end; -- //"
p44563
tp44564
I1
s(g7522
I42
g7523
Vinsert
p44565
I38
VPrefixExpression: ++
p44566
tp44567
I1
s(g10498
I42
g10499
Vinsert
p44568
I42
VSimpleName: metaData
p44569
tp44570
I2
s(g30060
I42
g30061
Vinsert
p44571
I42
VSimpleName: buf
p44572
tp44573
I1
s(g37169
I42
g37170
Vinsert
p44574
I43
VSimpleType: SQLSetStatement.Option
p44575
tp44576
I1
s(g29658
I42
g29659
Vinsert
p44577
I32
VMethodInvocation
p44578
tp44579
I66
s(g23481
I42
g23482
Vinsert
p44580
I42
VSimpleName: beforeExecute
p44581
tp44582
I1
s(g36323
I42
g36324
Vinsert
p44583
I42
VSimpleName: endsWith
p44584
tp44585
I1
s(Vinsert
p44586
I42
VSimpleName: put
p44587
Vinsert
p44588
I45
VStringLiteral: "ErrorCount"
p44589
tp44590
I2
s(g21190
I42
g21191
Vinsert
p44591
I45
VStringLiteral: "acc_bal NUMBER(11, 2);\u005cn"
p44592
tp44593
I1
s(Vinsert
p44594
I42
VSimpleName: parseStatements
p44595
Vinsert
p44596
I45
VStringLiteral: "dbType"
p44597
tp44598
I1
s(g13886
I42
g13887
Vinsert
p44599
I14
VClassInstanceCreation
p44600
tp44601
I4
s(g14896
I42
g14897
Vinsert
p44602
I40
VQualifiedName: com.alibaba.druid.sql.dialect.db2.ast.stmt.DB2SelectQueryBlock
p44603
tp44604
I1
s(g34809
I42
g34810
Vinsert
p44605
I45
VStringLiteral: "stat"
p44606
tp44607
I1
s(g31536
I42
g31537
Vinsert
p44608
I31
VMethodDeclaration
p44609
tp44610
I2
s(g4839
I42
g4840
Vinsert
p44611
I21
VExpressionStatement
p44612
tp44613
I1
s(g29345
I42
g29346
Vinsert
p44614
I42
VSimpleName: item
p44615
tp44616
I4
s(g31536
I42
g31537
Vinsert
p44617
I83
VModifier: public
p44618
tp44619
I2
s(g25074
I42
g25075
Vinsert
p44620
I32
VMethodInvocation
p44621
tp44622
I2
s(g15966
I42
g15967
Vinsert
p44623
I43
VSimpleType: MockConnectionClosedException
p44624
tp44625
I1
s(g9103
I42
g9104
Vinsert
p44626
I33
VNullLiteral
p44627
tp44628
I1
s(g17387
I42
g17388
Vinsert
p44629
I21
VExpressionStatement
p44630
tp44631
I9
s(g17575
I42
g17576
Vinsert
p44632
I42
VSimpleName: isPrettyFormat
p44633
tp44634
I1
s(g7417
I42
g7418
Vinsert
p44635
I42
VSimpleName: v
p44636
tp44637
I2
s(g2324
I42
g2325
Vinsert
p44638
I21
VExpressionStatement
p44639
tp44640
I1
s(g42013
I42
g42014
Vinsert
p44641
I43
VSimpleType: FilterChainImpl
p44642
tp44643
I2
s(g532
I42
g533
Vinsert
p44644
I45
VStringLiteral: "next value for "
p44645
tp44646
I1
s(g11124
I42
g11125
Vinsert
p44647
I44
VSingleVariableDeclaration
p44648
tp44649
I2
s(g20434
I42
g20435
Vinsert
p44650
I45
VStringLiteral: "\u005cn\u005ctORDER BY id"
p44651
tp44652
I2
s(Vinsert
p44653
I42
VSimpleName: parseStatementList
p44654
Vinsert
p44655
I42
VSimpleName: MySqlShowTableStatusStatement
p44656
tp44657
I2
s(g16556
I42
g16557
Vinsert
p44658
I43
VSimpleType: Class
p44659
tp44660
I1
s(g28698
I42
g28699
Vinsert
p44661
I33
VNullLiteral
p44662
tp44663
I2
s(g1785
I42
g1786
Vinsert
p44664
I43
VSimpleType: Object
p44665
tp44666
I2
s(g14274
I42
g14275
Vinsert
p44667
I43
VSimpleType: Exception
p44668
tp44669
I1
s(g8062
I42
g8063
Vinsert
p44670
I42
VSimpleName: Assert
p44671
tp44672
I1
s(g19035
I42
g19036
Vinsert
p44673
I42
VSimpleName: statement
p44674
tp44675
I4
s(g21908
I42
g21909
Vinsert
p44676
I45
VStringLiteral: "\u005cn\u005ctcreated_date DATETIME,"
p44677
tp44678
I1
s(g26374
I42
g26375
Vinsert
p44679
I42
VSimpleName: type
p44680
tp44681
I1
s(g2474
I42
g2475
Vinsert
p44682
I42
VSimpleName: getExpr
p44683
tp44684
I1
s(g2193
I42
g2194
Vinsert
p44685
I42
VSimpleName: pstmt
p44686
tp44687
I40
s(g41161
I42
g41162
Vinsert
p44688
I43
VSimpleType: String
p44689
tp44690
I2
s(g2034
I42
g2035
Vinsert
p44691
I42
VSimpleName: Method
p44692
tp44693
I1
s(Vinsert
p44694
I42
VSimpleName: getValue
p44695
Vinsert
p44696
I42
VSimpleName: getName
p44697
tp44698
I1
s(Vinsert
p44699
I42
VSimpleName: parseStatementList
p44700
Vinsert
p44701
I42
VSimpleName: stmtList
p44702
tp44703
I53
s(g11654
I42
g11655
Vinsert
p44704
I45
VStringLiteral: " ON UPDATE "
p44705
tp44706
I1
s(g19736
I42
g19737
Vinsert
p44707
I32
VMethodInvocation
p44708
tp44709
I2
s(g6475
I42
g6476
Vinsert
p44710
I42
VSimpleName: resultSet
p44711
tp44712
I1
s(g13685
I42
g13686
Vinsert
p44713
I41
VReturnStatement
p44714
tp44715
I1
s(g19043
I42
g19044
Vinsert
p44716
I42
VSimpleName: parser
p44717
tp44718
I1
s(Vinsert
p44719
I42
VSimpleName: substring
p44720
Vinsert
p44721
I42
VSimpleName: acceptsURL
p44722
tp44723
I2
s(g1991
I42
g1992
Vinsert
p44724
I22
VFieldAccess
p44725
tp44726
I1
s(g4775
I42
g4776
Vinsert
p44727
I42
VSimpleName: conn
p44728
tp44729
I1
s(g26826
I42
g26827
Vinsert
p44730
I14
VClassInstanceCreation
p44731
tp44732
I2
s(g1978
I42
g1979
Vinsert
p44733
I42
VSimpleName: Object
p44734
tp44735
I1
s(g12034
I42
g12035
Vinsert
p44736
I42
VSimpleName: acceptChild
p44737
tp44738
I6
s(g8914
I42
g8915
Vinsert
p44739
I7
VAssignment: =
p44740
tp44741
I1
s(Vinsert
p44742
I42
VSimpleName: getName
p44743
Vinsert
p44744
I42
VSimpleName: MySqlASTVisitor
p44745
tp44746
I1
s(g301
I42
g302
Vinsert
p44747
I45
VStringLiteral: "   and not exists (select 1 from M where code = v.code)\u005cn"
p44748
tp44749
I1
s(g4258
I42
g4259
Vinsert
p44750
I43
VSimpleType: String
p44751
tp44752
I2
s(g23854
I42
g23855
Vinsert
p44753
I32
VMethodInvocation
p44754
tp44755
I2
s(g321
I42
g322
Vinsert
p44756
I42
VSimpleName: Thread
p44757
tp44758
I3
s(g6288
I42
g6289
Vinsert
p44759
I74
VParameterizedType: List<String>
p44760
tp44761
I1
s(g37155
I42
g37156
Vinsert
p44762
I42
VSimpleName: toString
p44763
tp44764
I2
s(g8340
I42
g8341
Vinsert
p44765
I42
VSimpleName: sql
p44766
tp44767
I2
s(Vinsert
p44768
I42
VSimpleName: equals
p44769
Vinsert
p44770
I39
VPrimitiveType: int
p44771
tp44772
I2
s(g27253
I42
g27254
Vinsert
p44773
I42
VSimpleName: Assert
p44774
tp44775
I2
s(g156
I42
g157
Vinsert
p44776
I42
VSimpleName: run
p44777
tp44778
I2
s(Vinsert
p44779
I42
VSimpleName: output
p44780
Vinsert
p44781
I45
VStringLiteral: " BETWEEN "
p44782
tp44783
I1
s(g361
I42
g362
Vinsert
p44784
I45
VStringLiteral: " `vars` mediumtext NOT NULL,"
p44785
tp44786
I1
s(g6587
I42
g6588
Vinsert
p44787
I25
VIfStatement
p44788
tp44789
I10
s(g11706
I42
g11707
Vinsert
p44790
I8
VBlock
p44791
tp44792
I1
s(g25358
I42
g25359
Vinsert
p44793
I42
VSimpleName: setQualifyClause
p44794
tp44795
I1
s(g20725
I42
g20726
Vinsert
p44796
I42
VSimpleName: provider
p44797
tp44798
I8
s(g33151
I42
g33152
Vinsert
p44799
I11
VCastExpression
p44800
tp44801
I1
s(g31211
I42
g31212
Vinsert
p44802
I42
VSimpleName: List
p44803
tp44804
I1
s(g3253
I42
g3254
Vinsert
p44805
I42
VSimpleName: MockPreparedStatement
p44806
tp44807
I1
s(g26409
I42
g26410
Vinsert
p44808
I45
VStringLiteral: "\u005cnon a.shop_name = b.shop_name;"
p44809
tp44810
I1
s(Vinsert
p44811
I42
VSimpleName: put
p44812
Vinsert
p44813
I42
VSimpleName: add
p44814
tp44815
I1
s(g8990
I42
g8991
Vinsert
p44816
I33
VNullLiteral
p44817
tp44818
I1
s(g37280
I42
g37281
Vinsert
p44819
I39
VPrimitiveType: void
p44820
tp44821
I1
s(g44719
I42
g44720
Vinsert
p44822
I33
VNullLiteral
p44823
tp44824
I2
s(g21190
I42
g21191
Vinsert
p44825
I45
VStringLiteral: "AS\u005cn"
p44826
tp44827
I14
s(g26199
I42
g26200
Vinsert
p44828
I42
VSimpleName: OracleOutputVisitor
p44829
tp44830
I1
s(g2054
I42
g2055
Vinsert
p44831
I32
VMethodInvocation
p44832
tp44833
I3
s(g20548
I42
g20549
Vinsert
p44834
I42
VSimpleName: ConnectionImpl
p44835
tp44836
I2
s(g12055
I42
g12056
Vinsert
p44837
I33
VNullLiteral
p44838
tp44839
I1
s(g13886
I42
g13887
Vinsert
p44840
I83
VModifier: final
p44841
tp44842
I4
s(g25913
I42
g25914
Vinsert
p44843
I42
VSimpleName: accept
p44844
tp44845
I18
s(g36928
I42
g36929
Vinsert
p44846
I25
VIfStatement
p44847
tp44848
I2
s(g2248
I42
g2249
Vinsert
p44849
I42
VSimpleName: name
p44850
tp44851
I2
s(Vinsert
p44852
I42
VSimpleName: isRow
p44853
Vinsert
p44854
I52
VThisExpression
p44855
tp44856
I2
s(g16831
I42
g16832
Vinsert
p44857
I42
VSimpleName: identifierEquals
p44858
tp44859
I1
s(g937
I42
g938
Vinsert
p44860
I32
VMethodInvocation
p44861
tp44862
I1
s(g517
I42
g518
Vinsert
p44863
I42
VSimpleName: SQLEvalVisitorUtils
p44864
tp44865
I2
s(g20811
I42
g20812
Vinsert
p44866
I14
VClassInstanceCreation
p44867
tp44868
I6
s(g3972
I42
g3973
Vinsert
p44869
I42
VSimpleName: SQLName
p44870
tp44871
I1
s(g14754
I42
g14755
Vinsert
p44872
I60
VVariableDeclarationStatement
p44873
tp44874
I1
s(g22546
I42
g22547
Vinsert
p44875
I42
VSimpleName: output
p44876
tp44877
I1
s(g9190
I42
g9191
Vinsert
p44878
I42
VSimpleName: Object
p44879
tp44880
I1
s(g8788
I42
g8789
Vinsert
p44881
I33
VNullLiteral
p44882
tp44883
I2
s(g8350
I42
g8351
Vinsert
p44884
I43
VSimpleType: Throwable
p44885
tp44886
I1
s(Vinsert
p44887
I42
VSimpleName: token
p44888
Vinsert
p44889
I42
VSimpleName: List
p44890
tp44891
I6
s(g13424
I42
g13425
Vinsert
p44892
I42
VSimpleName: test_0
p44893
tp44894
I1
s(g4775
I42
g4776
Vinsert
p44895
I43
VSimpleType: FilterChainImpl
p44896
tp44897
I1
s(g6288
I42
g6289
Vinsert
p44898
I42
VSimpleName: System
p44899
tp44900
I1
s(g5528
I42
g5529
Vinsert
p44901
I42
VSimpleName: current
p44902
tp44903
I1
s(g3297
I42
g3298
Vinsert
p44904
I32
VMethodInvocation
p44905
tp44906
I12
s(g27530
I42
g27531
Vinsert
p44907
I43
VSimpleType: OracleIntervalExpr
p44908
tp44909
I1
s(g10642
I42
g10643
Vinsert
p44910
I27
VInfixExpression: !=
p44911
tp44912
I2
s(Vinsert
p44913
I42
VSimpleName: setParent
p44914
Vinsert
p44915
I43
VSimpleType: Item
p44916
tp44917
I2
s(Vinsert
p44918
I42
VSimpleName: toPGString
p44919
Vinsert
p44920
I45
VStringLiteral: "\u005ctid bigint,\u005cn"
p44921
tp44922
I1
s(g32999
I42
g33000
Vinsert
p44923
I45
VStringLiteral: "values ('1', 'aa'), ('2', 'bb')"
p44924
tp44925
I1
s(g22083
I42
g22084
Vinsert
p44926
I43
VSimpleType: StringBuilder
p44927
tp44928
I5
s(Vinsert
p44929
I42
VSimpleName: getMessage
p44930
Vinsert
p44931
I42
VSimpleName: forName
p44932
tp44933
I2
s(g30842
I42
g30843
Vinsert
p44934
I8
VBlock
p44935
tp44936
I2
s(g4684
I42
g4685
Vinsert
p44937
I42
VSimpleName: nextToken
p44938
tp44939
I1
s(g3409
I42
g3410
Vinsert
p44940
I32
VMethodInvocation
p44941
tp44942
I5
s(g11474
I42
g11475
Vinsert
p44943
I43
VSimpleType: String
p44944
tp44945
I4
s(g4352
I42
g4353
Vinsert
p44946
I45
VStringLiteral: "ALTER TABLE trans  ENABLE LIFECYCLE;"
p44947
tp44948
I1
s(g9428
I42
g9429
Vinsert
p44949
I8
VBlock
p44950
tp44951
I9
s(g5105
I42
g5106
Vinsert
p44952
I43
VSimpleType: SQLListExpr
p44953
tp44954
I1
s(g1324
I42
g1325
Vinsert
p44955
I42
VSimpleName: accept
p44956
tp44957
I1
s(g9534
I42
g9535
Vinsert
p44958
I21
VExpressionStatement
p44959
tp44960
I1
s(g5040
I42
g5041
Vinsert
p44961
I42
VSimpleName: lexer
p44962
tp44963
I1
s(g9089
I42
g9090
Vinsert
p44964
I45
VStringLiteral: "jdbc:elastic://100.69.202.4:9300/tcbuyer?cluster.name=refund_cluster"
p44965
tp44966
I1
s(g15864
I42
g15865
Vinsert
p44967
I42
VSimpleName: text
p44968
tp44969
I2
s(g23557
I42
g23558
Vinsert
p44970
I42
VSimpleName: SocketTimeoutException
p44971
tp44972
I1
s(g1395
I42
g1396
Vinsert
p44973
I43
VSimpleType: Comparable
p44974
tp44975
I2
s(g17997
I42
g17998
Vinsert
p44976
I42
VSimpleName: toString
p44977
tp44978
I3
s(g13331
I42
g13332
Vinsert
p44979
I25
VIfStatement
p44980
tp44981
I2
s(Vinsert
p44982
I42
VSimpleName: assertEquals
p44983
Vinsert
p44984
I45
VStringLiteral: "\u005cn\u005ctDISCARD PARTITION p1"
p44985
tp44986
I1
s(g2489
I42
g2490
Vinsert
p44987
I43
VSimpleType: Exception
p44988
tp44989
I1
s(g10599
I42
g10600
Vinsert
p44990
I42
VSimpleName: setStatementLogErrorEnabled
p44991
tp44992
I1
s(g8833
I42
g8834
Vinsert
p44993
I36
VParenthesizedExpression
p44994
tp44995
I9
s(g20035
I42
g20036
Vinsert
p44996
I43
VSimpleType: WallConfig
p44997
tp44998
I2
s(Vinsert
p44999
I42
VSimpleName: println
p45000
Vinsert
p45001
I40
VQualifiedName: SQLBinaryOperator.Multiply
p45002
tp45003
I1
s(g9670
I42
g9671
Vinsert
p45004
I32
VMethodInvocation
p45005
tp45006
I1133
s(g15443
I42
g15444
Vinsert
p45007
I32
VMethodInvocation
p45008
tp45009
I1
s(g17301
I42
g17302
Vinsert
p45010
I33
VNullLiteral
p45011
tp45012
I2
s(g32799
I42
g32800
Vinsert
p45013
I39
VPrimitiveType: void
p45014
tp45015
I1
s(g15864
I42
g15865
Vinsert
p45016
I42
VSimpleName: test_parse
p45017
tp45018
I1
s(g30001
I42
g30002
Vinsert
p45019
I42
VSimpleName: getItems
p45020
tp45021
I1
s(Vinsert
p45022
I42
VSimpleName: getExpr
p45023
Vinsert
p45024
I42
VSimpleName: exprTableSource
p45025
tp45026
I2
s(g2120
I42
g2121
Vinsert
p45027
I42
VSimpleName: DB2SelectQueryBlock
p45028
tp45029
I1
s(g12781
I42
g12782
Vinsert
p45030
I42
VSimpleName: getFullGC
p45031
tp45032
I1
s(g34863
I42
g34864
Vinsert
p45033
I42
VSimpleName: paramCount
p45034
tp45035
I1
s(g19924
I42
g19925
Vinsert
p45036
I39
VPrimitiveType: void
p45037
tp45038
I1
s(g6323
I42
g6324
Vinsert
p45039
I43
VSimpleType: Exception
p45040
tp45041
I1
s(g7792
I42
g7793
Vinsert
p45042
I42
VSimpleName: Override
p45043
tp45044
I1
s(g14489
I42
g14490
Vinsert
p45045
I62
VInstanceofExpression
p45046
tp45047
I2
s(g29440
I42
g29441
Vinsert
p45048
I38
VPrefixExpression: !
p45049
tp45050
I2
s(g9727
I42
g9728
Vinsert
p45051
I42
VSimpleName: WallSqlStatValue
p45052
tp45053
I2
s(g6676
I42
g6677
Vinsert
p45054
I32
VMethodInvocation
p45055
tp45056
I2
s(g9150
I42
g9151
Vinsert
p45057
I45
VStringLiteral: "false"
p45058
tp45059
I1
s(g34654
I42
g34655
Vinsert
p45060
I45
VStringLiteral: "\u005ct\u005ctAND b.state = 1\u005cn"
p45061
tp45062
I1
s(g26789
I42
g26790
Vinsert
p45063
I42
VSimpleName: SQLSetStatement
p45064
tp45065
I2
s(g29718
I42
g29719
Vinsert
p45066
I45
VStringLiteral: "\u005cn\u005ct\u005c"PERSON_ID\u005c" NUMBER(38, 0) NOT NULL ENABLE,"
p45067
tp45068
I2
s(g15068
I42
g15069
Vinsert
p45069
I42
VSimpleName: paramMethodExpr
p45070
tp45071
I2
s(Vinsert
p45072
I42
VSimpleName: visit
p45073
Vinsert
p45074
I42
VSimpleName: OracleUpdateSetValueClause
p45075
tp45076
I1
s(g7650
I42
g7651
Vinsert
p45077
I32
VMethodInvocation
p45078
tp45079
I2
s(g9108
I42
g9109
Vinsert
p45080
I42
VSimpleName: exprList
p45081
tp45082
I1
s(g40136
I42
g40137
Vinsert
p45083
I43
VSimpleType: String
p45084
tp45085
I4
s(g952
I42
g953
Vinsert
p45086
I42
VSimpleName: equals
p45087
tp45088
I1
s(g2682
I42
g2683
Vinsert
p45089
I8
VBlock
p45090
tp45091
I12
s(g9380
I42
g9381
Vinsert
p45092
I31
VMethodDeclaration
p45093
tp45094
I1
s(g497
I42
g498
Vinsert
p45095
I42
VSimpleName: map
p45096
tp45097
I1
s(g11678
I42
g11679
Vinsert
p45098
I32
VMethodInvocation
p45099
tp45100
I4
s(g753
I42
g754
Vinsert
p45101
I18
VContinueStatement
p45102
tp45103
I2
s(g2707
I42
g2708
Vinsert
p45104
I8
VBlock
p45105
tp45106
I1
s(g25074
I42
g25075
Vinsert
p45107
I42
VSimpleName: extractColumns
p45108
tp45109
I1
s(g647
I42
g648
Vinsert
p45110
I74
VParameterizedType: HashMap<Long,SQLDeclareItem>
p45111
tp45112
I1
s(g4447
I42
g4448
Vinsert
p45113
I32
VMethodInvocation
p45114
tp45115
I4
s(g6051
I42
g6052
Vinsert
p45116
I32
VMethodInvocation
p45117
tp45118
I3
s(g24247
I42
g24248
Vinsert
p45119
I43
VSimpleType: String
p45120
tp45121
I2
s(g6801
I42
g6802
Vinsert
p45122
I42
VSimpleName: visit
p45123
tp45124
I1
s(g3388
I42
g3389
Vinsert
p45125
I42
VSimpleName: debug
p45126
tp45127
I8
s(g876
I42
g877
Vinsert
p45128
I45
VStringLiteral: "CREATE TABLE pageviews (\u005cn"
p45129
tp45130
I1
s(g6927
I42
g6928
Vinsert
p45131
I21
VExpressionStatement
p45132
tp45133
I6
s(g1928
I42
g1929
Vinsert
p45134
I42
VSimpleName: cloneTo
p45135
tp45136
I4
s(g36028
I42
g36029
Vinsert
p45137
I42
VSimpleName: HiveCreateTableStatement
p45138
tp45139
I2
s(g10731
I42
g10732
Vinsert
p45140
I21
VExpressionStatement
p45141
tp45142
I2
s(Vinsert
p45143
I42
VSimpleName: connect
p45144
Vinsert
p45145
I43
VSimpleType: MockDriver
p45146
tp45147
I2
s(g22177
I42
g22178
Vinsert
p45148
I43
VSimpleType: HashSet
p45149
tp45150
I1
s(g8863
I42
g8864
Vinsert
p45151
I42
VSimpleName: field
p45152
tp45153
I12
s(g4045
I42
g4046
Vinsert
p45154
I42
VSimpleName: StatFilter
p45155
tp45156
I3
s(g2687
I42
g2688
Vinsert
p45157
I40
VQualifiedName: connections.length
p45158
tp45159
I1
s(g748
I42
g749
Vinsert
p45160
I42
VSimpleName: metaData
p45161
tp45162
I1
s(g15490
I42
g15491
Vinsert
p45163
I43
VSimpleType: SQLException
p45164
tp45165
I2
s(g3345
I42
g3346
Vinsert
p45166
I21
VExpressionStatement
p45167
tp45168
I34
s(g4890
I42
g4891
Vinsert
p45169
I42
VSimpleName: updateCounts
p45170
tp45171
I1
s(g10195
I42
g10196
Vinsert
p45172
I45
VStringLiteral: "\u005cn\u005ctpromo_cost NUMBER(10, 2),"
p45173
tp45174
I4
s(Vinsert
p45175
I42
VSimpleName: get
p45176
Vinsert
p45177
I42
VSimpleName: aliveNanoMax
p45178
tp45179
I2
s(g13099
I42
g13100
Vinsert
p45180
I42
VSimpleName: getAndIncrement
p45181
tp45182
I1
s(g9299
I42
g9300
Vinsert
p45183
I42
VSimpleName: exprParser
p45184
tp45185
I8
s(g17428
I42
g17429
Vinsert
p45186
I43
VSimpleType: String
p45187
tp45188
I3
s(g459
I42
g460
Vinsert
p45189
I45
VStringLiteral: "\u005cn\u005ctname text,"
p45190
tp45191
I1
s(g381
I42
g382
Vinsert
p45192
I42
VSimpleName: add
p45193
tp45194
I1
s(g22647
I42
g22648
Vinsert
p45195
I45
VStringLiteral: "\u005ctproject_snapshot_id,\u005cn"
p45196
tp45197
I1
s(g17007
I42
g17008
Vinsert
p45198
I42
VSimpleName: DruidDataSource
p45199
tp45200
I4
s(g28221
I42
g28222
Vinsert
p45201
I43
VSimpleType: oracle.jdbc.internal.OracleConnection
p45202
tp45203
I2
s(g32594
I42
g32595
Vinsert
p45204
I45
VStringLiteral: " partition ("
p45205
tp45206
I1
s(g3719
I42
g3720
Vinsert
p45207
I32
VMethodInvocation
p45208
tp45209
I550
s(g977
I42
g978
Vinsert
p45210
I38
VPrefixExpression: ++
p45211
tp45212
I3
s(g20124
I42
g20125
Vinsert
p45213
I42
VSimpleName: owner
p45214
tp45215
I1
s(g30521
I42
g30522
Vinsert
p45216
I42
VSimpleName: SQLReturnStatement
p45217
tp45218
I2
s(g4490
I42
g4491
Vinsert
p45219
I43
VSimpleType: MySqlSelectParser
p45220
tp45221
I2
s(g1032
I42
g1033
Vinsert
p45222
I21
VExpressionStatement
p45223
tp45224
I2
s(Vinsert
p45225
I42
VSimpleName: getName
p45226
Vinsert
p45227
I42
VSimpleName: visitor
p45228
tp45229
I9
s(g12189
I42
g12190
Vinsert
p45230
I42
VSimpleName: state
p45231
tp45232
I1
s(g26998
I42
g26999
Vinsert
p45233
I83
VModifier: final
p45234
tp45235
I2
s(g7903
I42
g7904
Vinsert
p45236
I8
VBlock
p45237
tp45238
I1
s(g7163
I42
g7164
Vinsert
p45239
I42
VSimpleName: nameHashCode64
p45240
tp45241
I1
s(g8891
I42
g8892
Vinsert
p45242
I27
VInfixExpression: <
p45243
tp45244
I2
s(g1544
I42
g1545
Vinsert
p45245
I60
VVariableDeclarationStatement
p45246
tp45247
I57
s(g8179
I42
g8180
Vinsert
p45248
I43
VSimpleType: String
p45249
tp45250
I1
s(g25961
I42
g25962
Vinsert
p45251
I42
VSimpleName: item
p45252
tp45253
I1
s(g12034
I42
g12035
Vinsert
p45254
I42
VSimpleName: visitor
p45255
tp45256
I7
s(g17951
I42
g17952
Vinsert
p45257
I43
VSimpleType: PGArrayExpr
p45258
tp45259
I2
s(g6313
I42
g6314
Vinsert
p45260
I40
VQualifiedName: Token.IF
p45261
tp45262
I1
s(g10355
I42
g10356
Vinsert
p45263
I42
VSimpleName: Exception
p45264
tp45265
I28
s(g801
I42
g802
Vinsert
p45266
I60
VVariableDeclarationStatement
p45267
tp45268
I1
s(g11187
I42
g11188
Vinsert
p45269
I83
VModifier: protected
p45270
tp45271
I2
s(g3569
I42
g3570
Vinsert
p45272
I42
VSimpleName: windowing
p45273
tp45274
I1
s(g7927
I42
g7928
Vinsert
p45275
I32
VMethodInvocation
p45276
tp45277
I12
s(g10687
I42
g10688
Vinsert
p45278
I54
VTryStatement
p45279
tp45280
I1
s(g11182
I42
g11183
Vinsert
p45281
I45
VStringLiteral: "effectRowCount"
p45282
tp45283
I1
s(g29627
I42
g29628
Vinsert
p45284
I42
VSimpleName: matchTableName
p45285
tp45286
I1
s(g34423
I42
g34424
Vinsert
p45287
I42
VSimpleName: buf
p45288
tp45289
I2
s(Vinsert
p45290
I42
VSimpleName: visit
p45291
Vinsert
p45292
I42
VSimpleName: when
p45293
tp45294
I1
s(g13559
I42
g13560
Vinsert
p45295
I27
VInfixExpression: !=
p45296
tp45297
I7
s(g156
I42
g157
Vinsert
p45298
I42
VSimpleName: Thread
p45299
tp45300
I2
s(g41049
I42
g41050
Vinsert
p45301
I42
VSimpleName: rightLiteral
p45302
tp45303
I2
s(Vinsert
p45304
I42
VSimpleName: error
p45305
Vinsert
p45306
I43
VSimpleType: JMException
p45307
tp45308
I1
s(g30229
I42
g30230
Vinsert
p45309
I42
VSimpleName: transaction
p45310
tp45311
I2
s(g15621
I42
g15622
Vinsert
p45312
I40
VQualifiedName: VisitorFeature.OutputUCase
p45313
tp45314
I1
s(g8499
I42
g8500
Vinsert
p45315
I43
VSimpleType: MySqlLeaveStatement
p45316
tp45317
I1
s(g26221
I42
g26222
Vinsert
p45318
I43
VSimpleType: ObjectName
p45319
tp45320
I1
s(g15177
I42
g15178
Vinsert
p45321
I52
VThisExpression
p45322
tp45323
I5
s(g9456
I42
g9457
Vinsert
p45324
I43
VSimpleType: MySqlExprParser
p45325
tp45326
I1
s(g9420
I42
g9421
Vinsert
p45327
I31
VMethodDeclaration
p45328
tp45329
I1
s(g14072
I42
g14073
Vinsert
p45330
I78
VMarkerAnnotation
p45331
tp45332
I3
s(g675
I42
g676
Vinsert
p45333
I42
VSimpleName: sqlStat
p45334
tp45335
I1
s(g6852
I42
g6853
Vinsert
p45336
I45
VStringLiteral: "XML"
p45337
tp45338
I1
s(g1491
I42
g1492
Vinsert
p45339
I8
VBlock
p45340
tp45341
I1
s(g20796
I42
g20797
Vinsert
p45342
I42
VSimpleName: clearParameters
p45343
tp45344
I1
s(g28067
I42
g28068
Vinsert
p45345
I42
VSimpleName: getConnection
p45346
tp45347
I1
s(g29627
I42
g29628
Vinsert
p45348
I42
VSimpleName: SQLExpr
p45349
tp45350
I1
s(g9267
I42
g9268
Vinsert
p45351
I13
VCharacterLiteral: '{'
p45352
tp45353
I1
s(g7537
I42
g7538
Vinsert
p45354
I42
VSimpleName: createChain
p45355
tp45356
I1
s(g24007
I42
g24008
Vinsert
p45357
I25
VIfStatement
p45358
tp45359
I1
s(Vinsert
p45360
I42
VSimpleName: getType
p45361
Vinsert
p45362
I45
VStringLiteral: " "
p45363
tp45364
I1
s(g24211
I42
g24212
Vinsert
p45365
I43
VSimpleType: QueryPartitionClause
p45366
tp45367
I1
s(g2647
I42
g2648
Vinsert
p45368
I42
VSimpleName: test_parse
p45369
tp45370
I1
s(g25616
I42
g25617
Vinsert
p45371
I45
VStringLiteral: "\u005ct, CANCELED_CASH, RECEIVERD_CASH, O_S_CASH, utl_raw.cast_to_raw(REMARK) AS REMARK, FENTAN_CHECK\u005cn"
p45372
tp45373
I1
s(g18831
I42
g18832
Vinsert
p45374
I43
VSimpleType: Object
p45375
tp45376
I1
s(Vinsert
p45377
I42
VSimpleName: getHaving
p45378
Vinsert
p45379
I8
VBlock
p45380
tp45381
I3
s(g32436
I42
g32437
Vinsert
p45382
I43
VSimpleType: SQLColumnDefinition
p45383
tp45384
I3
s(g5818
I42
g5819
Vinsert
p45385
I42
VSimpleName: statData
p45386
tp45387
I1
s(g14187
I42
g14188
Vinsert
p45388
I41
VReturnStatement
p45389
tp45390
I2
s(g6927
I42
g6928
Vinsert
p45391
I25
VIfStatement
p45392
tp45393
I3
s(g8514
I42
g8515
Vinsert
p45394
I43
VSimpleType: SQLCommentHint
p45395
tp45396
I2
s(g17997
I42
g17998
Vinsert
p45397
I34
VNumberLiteral: 2
p45398
tp45399
I1
s(g17683
I42
g17684
Vinsert
p45400
I45
VStringLiteral: "SELECT * FROM T"
p45401
tp45402
I1
s(g29350
I42
g29351
Vinsert
p45403
I41
VReturnStatement
p45404
tp45405
I2
s(g27700
I42
g27701
Vinsert
p45406
I45
VStringLiteral: "alter table test_lifecycle touch;"
p45407
tp45408
I1
s(g86
I42
g87
Vinsert
p45409
I78
VMarkerAnnotation
p45410
tp45411
I1
s(g4268
I42
g4269
Vinsert
p45412
I8
VBlock
p45413
tp45414
I2
s(g5128
I42
g5129
Vinsert
p45415
I45
VStringLiteral: "| c_longblob   | longblob     | NO   |     | NULL    |       |\u005cn"
p45416
tp45417
I1
s(g22603
I42
g22604
Vinsert
p45418
I42
VSimpleName: SQLExpr
p45419
tp45420
I1
s(g1329
I42
g1330
Vinsert
p45421
I32
VMethodInvocation
p45422
tp45423
I1
s(g13282
I42
g13283
Vinsert
p45424
I42
VSimpleName: parameters
p45425
tp45426
I2
s(g18863
I42
g18864
Vinsert
p45427
I45
VStringLiteral: " FROM notice_close_node host left join sys_user user on user.id = host.modifier_id"
p45428
tp45429
I1
s(g18005
I42
g18006
Vinsert
p45430
I42
VSimpleName: rs
p45431
tp45432
I2
s(g25578
I42
g25579
Vinsert
p45433
I42
VSimpleName: getPhysicalCloseCount
p45434
tp45435
I2
s(g7986
I42
g7987
Vinsert
p45436
I42
VSimpleName: MysqlForeignKey
p45437
tp45438
I2
s(g12938
I42
g12939
Vinsert
p45439
I33
VNullLiteral
p45440
tp45441
I1
s(g16525
I42
g16526
Vinsert
p45442
I42
VSimpleName: mapping
p45443
tp45444
I9
s(g15536
I42
g15537
Vinsert
p45445
I32
VMethodInvocation
p45446
tp45447
I3
s(g2019
I42
g2020
Vinsert
p45448
I41
VReturnStatement
p45449
tp45450
I1
s(g13823
I42
g13824
Vinsert
p45451
I59
VVariableDeclarationFragment
p45452
tp45453
I410
s(g5767
I42
g5768
Vinsert
p45454
I42
VSimpleName: RESULT_CODE_SUCCESS
p45455
tp45456
I1
s(Vinsert
p45457
I42
VSimpleName: toSQLString
p45458
Vinsert
p45459
I45
VStringLiteral: "\u005ct\u005ctTABLESPACE \u005c"APP_DATA1K\u005c"\u005cn"
p45460
tp45461
I1
s(g9748
I42
g9749
Vinsert
p45462
I42
VSimpleName: getOffset
p45463
tp45464
I1
s(g8075
I42
g8076
Vinsert
p45465
I8
VBlock
p45466
tp45467
I1
s(Vinsert
p45468
I42
VSimpleName: getMemoryMXBean
p45469
Vinsert
p45470
I42
VSimpleName: A
p45471
tp45472
I1
s(g21084
I42
g21085
Vinsert
p45473
I8
VBlock
p45474
tp45475
I1
s(g27482
I42
g27483
Vinsert
p45476
I45
VStringLiteral: "LEFT OUTER JOIN"
p45477
tp45478
I1
s(g26553
I42
g26554
Vinsert
p45479
I43
VSimpleType: SQLDropIndexStatement
p45480
tp45481
I1
s(Vinsert
p45482
I42
VSimpleName: assertFalse
p45483
Vinsert
p45484
I55
VTypeDeclaration
p45485
tp45486
I3
s(g37739
I42
g37740
Vinsert
p45487
I42
VSimpleName: List
p45488
tp45489
I1
s(g419
I42
g420
Vinsert
p45490
I21
VExpressionStatement
p45491
tp45492
I1
s(g26901
I42
g26902
Vinsert
p45493
I42
VSimpleName: getMessage
p45494
tp45495
I1
s(g7078
I42
g7079
Vinsert
p45496
I42
VSimpleName: println
p45497
tp45498
I1
s(g21982
I42
g21983
Vinsert
p45499
I21
VExpressionStatement
p45500
tp45501
I5
s(g18841
I42
g18842
Vinsert
p45502
I42
VSimpleName: elseIf
p45503
tp45504
I2
s(Vinsert
p45505
I42
VSimpleName: expr
p45506
Vinsert
p45507
I42
VSimpleName: SQLQueryExpr
p45508
tp45509
I2
s(g14484
I42
g14485
Vinsert
p45510
I42
VSimpleName: StringBuilder
p45511
tp45512
I13
s(g7673
I42
g7674
Vinsert
p45513
I42
VSimpleName: bp
p45514
tp45515
I2
s(Vinsert
p45516
I42
VSimpleName: nextToken
p45517
Vinsert
p45518
I42
VSimpleName: SQLSelectQueryBlock
p45519
tp45520
I1
s(g786
I42
g787
Vinsert
p45521
I83
VModifier: public
p45522
tp45523
I2
s(g20456
I42
g20457
Vinsert
p45524
I42
VSimpleName: String
p45525
tp45526
I2
s(g16943
I42
g16944
Vinsert
p45527
I42
VSimpleName: DruidDataSource
p45528
tp45529
I2
s(g12397
I42
g12398
Vinsert
p45530
I45
VStringLiteral: "\u005ct\u005ctOR A.ZIPCODE LIKE ('%' || ? || '%')\u005cn"
p45531
tp45532
I1
s(g10459
I42
g10460
Vinsert
p45533
I42
VSimpleName: parent
p45534
tp45535
I1
s(g28812
I42
g28813
Vinsert
p45536
I34
VNumberLiteral: 3
p45537
tp45538
I2
s(g9838
I42
g9839
Vinsert
p45539
I43
VSimpleType: CheckOption
p45540
tp45541
I2
s(g36135
I42
g36136
Vinsert
p45542
I43
VSimpleType: SQLLiteralExpr
p45543
tp45544
I1
s(g34186
I42
g34187
Vinsert
p45545
I38
VPrefixExpression: -
p45546
tp45547
I7
s(g9743
I42
g9744
Vinsert
p45548
I43
VSimpleType: SQLIdentifierExpr
p45549
tp45550
I1
s(g19841
I42
g19842
Vinsert
p45551
I42
VSimpleName: test_0
p45552
tp45553
I1
s(g9559
I42
g9560
Vinsert
p45554
I7
VAssignment: =
p45555
tp45556
I1
s(g9827
I42
g9828
Vinsert
p45557
I42
VSimpleName: Override
p45558
tp45559
I1
s(g20210
I42
g20211
Vinsert
p45560
I42
VSimpleName: Override
p45561
tp45562
I1
s(g16863
I42
g16864
Vinsert
p45563
I43
VSimpleType: Exception
p45564
tp45565
I6
s(g3327
I42
g3328
Vinsert
p45566
I40
VQualifiedName: Token.LPAREN
p45567
tp45568
I1
s(g20439
I42
g20440
Vinsert
p45569
I42
VSimpleName: stmt
p45570
tp45571
I3
s(g6364
I42
g6365
Vinsert
p45572
I42
VSimpleName: maxIdle
p45573
tp45574
I1
s(g33776
I42
g33777
Vinsert
p45575
I7
VAssignment: =
p45576
tp45577
I1
s(g9519
I42
g9520
Vinsert
p45578
I66
VTextElement:  XAResource.XA_RDONLY if the connection.isReadOnly(); XAResource.XA_OK otherwise
p45579
tp45580
I1
s(g11067
I42
g11068
Vinsert
p45581
I25
VIfStatement
p45582
tp45583
I4
s(g17291
I42
g17292
Vinsert
p45584
I43
VSimpleType: IllegalSQLObjectViolation
p45585
tp45586
I1
s(g4824
I42
g4825
Vinsert
p45587
I42
VSimpleName: json
p45588
tp45589
I1
s(g30184
I42
g30185
Vinsert
p45590
I42
VSimpleName: PGLimit
p45591
tp45592
I5
s(g11678
I42
g11679
Vinsert
p45593
I42
VSimpleName: print
p45594
tp45595
I2
s(Vinsert
p45596
I42
VSimpleName: println
p45597
Vinsert
p45598
I42
VSimpleName: getColumns
p45599
tp45600
I20
s(g22214
I42
g22215
Vinsert
p45601
I42
VSimpleName: user
p45602
tp45603
I1
s(g3017
I42
g3018
Vinsert
p45604
I42
VSimpleName: getConstructor
p45605
tp45606
I1
s(g22219
I42
g22220
Vinsert
p45607
I42
VSimpleName: SQLServerTop
p45608
tp45609
I1
s(g32847
I42
g32848
Vinsert
p45610
I42
VSimpleName: chars
p45611
tp45612
I2
s(g1830
I42
g1831
Vinsert
p45613
I32
VMethodInvocation
p45614
tp45615
I16
s(g16935
I42
g16936
Vinsert
p45616
I25
VIfStatement
p45617
tp45618
I2
s(g15153
I42
g15154
Vinsert
p45619
I42
VSimpleName: test_false
p45620
tp45621
I1
s(g31505
I42
g31506
Vinsert
p45622
I42
VSimpleName: Clob
p45623
tp45624
I1
s(g17007
I42
g17008
Vinsert
p45625
I8
VBlock
p45626
tp45627
I5
s(g43334
I42
g43335
Vinsert
p45628
I40
VQualifiedName: Token.ENABLE
p45629
tp45630
I1
s(g15048
I42
g15049
Vinsert
p45631
I4
VArrayInitializer
p45632
tp45633
I1
s(g1705
I42
g1706
Vinsert
p45634
I33
VNullLiteral
p45635
tp45636
I4
s(g4520
I42
g4521
Vinsert
p45637
I38
VPrefixExpression: !
p45638
tp45639
I1
s(g1815
I42
g1816
Vinsert
p45640
I42
VSimpleName: OracleRunStatement
p45641
tp45642
I2
s(g1720
I42
g1721
Vinsert
p45643
I43
VSimpleType: String
p45644
tp45645
I3
s(g18749
I42
g18750
Vinsert
p45646
I42
VSimpleName: item
p45647
tp45648
I10
s(g13166
I42
g13167
Vinsert
p45649
I8
VBlock
p45650
tp45651
I1
s(g32107
I42
g32108
Vinsert
p45652
I42
VSimpleName: connection
p45653
tp45654
I1
s(g25773
I42
g25774
Vinsert
p45655
I43
VSimpleType: MySqlSetPasswordStatement
p45656
tp45657
I1
s(g5954
I42
g5955
Vinsert
p45658
I43
VSimpleType: SQLUpdateStatement
p45659
tp45660
I1
s(g3714
I42
g3715
Vinsert
p45661
I25
VIfStatement
p45662
tp45663
I1
s(g2842
I42
g2843
Vinsert
p45664
I42
VSimpleName: x
p45665
tp45666
I3
s(g657
I42
g658
Vinsert
p45667
I42
VSimpleName: fillCount
p45668
tp45669
I2
s(g18399
I42
g18400
Vinsert
p45670
I42
VSimpleName: Assert
p45671
tp45672
I5
s(Vinsert
p45673
I42
VSimpleName: name
p45674
Vinsert
p45675
I7
VAssignment: =
p45676
tp45677
I1
s(Vinsert
p45678
I42
VSimpleName: parameterize
p45679
Vinsert
p45680
I45
VStringLiteral: "select * from t where id = 101 and age = 102 or name = 'wenshao'"
p45681
tp45682
I1
s(g924
I42
g925
Vinsert
p45683
I42
VSimpleName: Override
p45684
tp45685
I1
s(Vinsert
p45686
I42
VSimpleName: putIfAbsent
p45687
Vinsert
p45688
I42
VSimpleName: schemaName
p45689
tp45690
I1
s(g652
I42
g653
Vinsert
p45691
I42
VSimpleName: List
p45692
tp45693
I1
s(g14187
I42
g14188
Vinsert
p45694
I32
VMethodInvocation
p45695
tp45696
I1
s(g10571
I42
g10572
Vinsert
p45697
I60
VVariableDeclarationStatement
p45698
tp45699
I8
s(g3457
I42
g3458
Vinsert
p45700
I21
VExpressionStatement
p45701
tp45702
I6
s(Vinsert
p45703
I42
VSimpleName: get
p45704
Vinsert
p45705
I42
VSimpleName: EVAL_ERROR
p45706
tp45707
I1
s(g602
I42
g603
Vinsert
p45708
I43
VSimpleType: Exception
p45709
tp45710
I6
s(g22611
I42
g22612
Vinsert
p45711
I42
VSimpleName: columnIndex
p45712
tp45713
I1
s(Vinsert
p45714
I42
VSimpleName: visit
p45715
Vinsert
p45716
I42
VSimpleName: List
p45717
tp45718
I1
s(g22163
I42
g22164
Vinsert
p45719
I42
VSimpleName: MergeStatFilter
p45720
tp45721
I1
s(g226
I42
g227
Vinsert
p45722
I42
VSimpleName: updateDataCount_1_10
p45723
tp45724
I1
s(g5936
I42
g5937
Vinsert
p45725
I45
VStringLiteral: "\u005ct\u005ct\u005ctwhere ds = 20160920\u005cn"
p45726
tp45727
I1
s(g40724
I42
g40725
Vinsert
p45728
I42
VSimpleName: getPassword
p45729
tp45730
I1
s(Vinsert
p45731
I42
VSimpleName: nextToken
p45732
Vinsert
p45733
I43
VSimpleType: OracleConstraint
p45734
tp45735
I1
s(g9657
I42
g9658
Vinsert
p45736
I42
VSimpleName: out
p45737
tp45738
I2
s(g18437
I42
g18438
Vinsert
p45739
I7
VAssignment: =
p45740
tp45741
I2
s(g2408
I42
g2409
Vinsert
p45742
I42
VSimpleName: setConnectCount
p45743
tp45744
I1
s(g16299
I42
g16300
Vinsert
p45745
I43
VSimpleType: SQLAnyExpr
p45746
tp45747
I2
s(g1032
I42
g1033
Vinsert
p45748
I8
VBlock
p45749
tp45750
I1
s(Vinsert
p45751
I42
VSimpleName: token
p45752
Vinsert
p45753
I42
VSimpleName: dotRest
p45754
tp45755
I1
s(g10697
I42
g10698
Vinsert
p45756
I42
VSimpleName: getPermitTables
p45757
tp45758
I2
s(g8721
I42
g8722
Vinsert
p45759
I42
VSimpleName: statement
p45760
tp45761
I1
s(g1511
I42
g1512
Vinsert
p45762
I11
VCastExpression
p45763
tp45764
I4
s(g40337
I42
g40338
Vinsert
p45765
I45
VStringLiteral: "\u005cnVALUES ('a1', 'b1'),"
p45766
tp45767
I3
s(g7986
I42
g7987
Vinsert
p45768
I27
VInfixExpression: ==
p45769
tp45770
I2
s(g11890
I42
g11891
Vinsert
p45771
I59
VVariableDeclarationFragment
p45772
tp45773
I4
s(g13094
I42
g13095
Vinsert
p45774
I34
VNumberLiteral: 1
p45775
tp45776
I1
s(g15048
I42
g15049
Vinsert
p45777
I21
VExpressionStatement
p45778
tp45779
I4
s(g8828
I42
g8829
Vinsert
p45780
I42
VSimpleName: put
p45781
tp45782
I2
s(g9569
I42
g9570
Vinsert
p45783
I42
VSimpleName: e
p45784
tp45785
I1
s(g25422
I42
g25423
Vinsert
p45786
I42
VSimpleName: nextToken
p45787
tp45788
I2
s(g18383
I42
g18384
Vinsert
p45789
I42
VSimpleName: base64toInt
p45790
tp45791
I1
s(g391
I42
g392
Vinsert
p45792
I44
VSingleVariableDeclaration
p45793
tp45794
I1
s(g1617
I42
g1618
Vinsert
p45795
I21
VExpressionStatement
p45796
tp45797
I1
s(g758
I42
g759
Vinsert
p45798
I32
VMethodInvocation
p45799
tp45800
I9
s(g5520
I42
g5521
Vinsert
p45801
I43
VSimpleType: IllegalStateException
p45802
tp45803
I1
s(g26199
I42
g26200
Vinsert
p45804
I43
VSimpleType: StringBuilder
p45805
tp45806
I1
s(g18415
I42
g18416
Vinsert
p45807
I39
VPrimitiveType: boolean
p45808
tp45809
I3
s(g2880
I42
g2881
Vinsert
p45810
I45
VStringLiteral: "\u005cn\u005ctcity VARCHAR2(30),"
p45811
tp45812
I4
s(g14659
I42
g14660
Vinsert
p45813
I42
VSimpleName: parameters
p45814
tp45815
I3
s(Vinsert
p45816
I42
VSimpleName: hashCode
p45817
Vinsert
p45818
I42
VSimpleName: expr
p45819
tp45820
I2
s(g13001
I42
g13002
Vinsert
p45821
I42
VSimpleName: properties
p45822
tp45823
I3
s(g17956
I42
g17957
Vinsert
p45824
I9
VBooleanLiteral: true
p45825
tp45826
I1
s(g861
I42
g862
Vinsert
p45827
I42
VSimpleName: setOperator
p45828
tp45829
I1
s(g14917
I42
g14918
Vinsert
p45830
I45
VStringLiteral: "\u005ct\u005ct\u005ct\u005ctAND p.cp_code IS NULL))\u005cn"
p45831
tp45832
I1
s(g5069
I42
g5070
Vinsert
p45833
I42
VSimpleName: OracleInsertStatement
p45834
tp45835
I3
s(g2870
I42
g2871
Vinsert
p45836
I32
VMethodInvocation
p45837
tp45838
I9
s(Vinsert
p45839
I42
VSimpleName: assertTrue
p45840
Vinsert
p45841
I42
VSimpleName: testOracle
p45842
tp45843
I3
s(g3709
I42
g3710
Vinsert
p45844
I43
VSimpleType: ArrayList
p45845
tp45846
I1
s(g4931
I42
g4932
Vinsert
p45847
I8
VBlock
p45848
tp45849
I3
s(g11745
I42
g11746
Vinsert
p45850
I42
VSimpleName: Blob
p45851
tp45852
I1
s(g10381
I42
g10382
Vinsert
p45853
I45
VStringLiteral: "BUSINESS_ORDER"
p45854
tp45855
I2
s(g25854
I42
g25855
Vinsert
p45856
I59
VVariableDeclarationFragment
p45857
tp45858
I1
s(g4775
I42
g4776
Vinsert
p45859
I42
VSimpleName: getConnection
p45860
tp45861
I1
s(g1284
I42
g1285
Vinsert
p45862
I16
VConditionalExpression
p45863
tp45864
I1
s(g45678
I42
g45679
Vinsert
p45865
I42
VSimpleName: sql
p45866
tp45867
I9
s(g5409
I42
g5410
Vinsert
p45868
I42
VSimpleName: Thread
p45869
tp45870
I17
s(Vinsert
p45871
I42
VSimpleName: getLog
p45872
Vinsert
p45873
I40
VQualifiedName: com.alibaba.druid.pool.PoolableStatement
p45874
tp45875
I1
s(g7461
I42
g7462
Vinsert
p45876
I42
VSimpleName: sql
p45877
tp45878
I10
s(g18863
I42
g18864
Vinsert
p45879
I45
VStringLiteral: ",   host.modifier_id as modifierId"
p45880
tp45881
I1
s(Vinsert
p45882
I42
VSimpleName: expr
p45883
Vinsert
p45884
I42
VSimpleName: SQLNumberExpr
p45885
tp45886
I1
s(g8849
I42
g8850
Vinsert
p45887
I59
VVariableDeclarationFragment
p45888
tp45889
I3
s(g2915
I42
g2916
Vinsert
p45890
I27
VInfixExpression: ==
p45891
tp45892
I1
s(g42449
I42
g42450
Vinsert
p45893
I45
VStringLiteral: "META-INF/druid-filter-wall-permit-name-oracle-default.txt"
p45894
tp45895
I1
s(g35034
I42
g35035
Vinsert
p45896
I42
VSimpleName: x
p45897
tp45898
I2
s(g657
I42
g658
Vinsert
p45899
I83
VModifier: public
p45900
tp45901
I1
s(Vinsert
p45902
I42
VSimpleName: prepareStatement
p45903
Vinsert
p45904
I42
VSimpleName: SQLException
p45905
tp45906
I2
s(g3261
I42
g3262
Vinsert
p45907
I42
VSimpleName: values
p45908
tp45909
I1
s(g18078
I42
g18079
Vinsert
p45910
I45
VStringLiteral: "\u005ct\u005ct, 'N', NULL, :NEW.deptsale);\u005cn"
p45911
tp45912
I1
s(Vinsert
p45913
I42
VSimpleName: nextToken
p45914
Vinsert
p45915
I42
VSimpleName: primary
p45916
tp45917
I2
s(g8969
I42
g8970
Vinsert
p45918
I42
VSimpleName: User
p45919
tp45920
I1
s(Vinsert
p45921
I42
VSimpleName: setParent
p45922
Vinsert
p45923
I42
VSimpleName: SQLPartition
p45924
tp45925
I1
s(g32771
I42
g32772
Vinsert
p45926
I42
VSimpleName: accept
p45927
tp45928
I71
s(g2647
I42
g2648
Vinsert
p45929
I59
VVariableDeclarationFragment
p45930
tp45931
I7
s(g11001
I42
g11002
Vinsert
p45932
I40
VQualifiedName: x.argumentName
p45933
tp45934
I1
s(g13617
I42
g13618
Vinsert
p45935
I59
VVariableDeclarationFragment
p45936
tp45937
I1
s(Vinsert
p45938
I42
VSimpleName: visit
p45939
Vinsert
p45940
I42
VSimpleName: tableName
p45941
tp45942
I1
s(g18209
I42
g18210
Vinsert
p45943
I42
VSimpleName: Map
p45944
tp45945
I5
s(g17221
I42
g17222
Vinsert
p45946
I25
VIfStatement
p45947
tp45948
I2
s(g11542
I42
g11543
Vinsert
p45949
I60
VVariableDeclarationStatement
p45950
tp45951
I2
s(g9420
I42
g9421
Vinsert
p45952
I83
VModifier: public
p45953
tp45954
I2
s(g41589
I42
g41590
Vinsert
p45955
I40
VQualifiedName: Token.VALUES
p45956
tp45957
I1
s(g18086
I42
g18087
Vinsert
p45958
I43
VSimpleType: Function
p45959
tp45960
I1
s(g4543
I42
g4544
Vinsert
p45961
I42
VSimpleName: Entry
p45962
tp45963
I1
s(g3724
I42
g3725
Vinsert
p45964
I45
VStringLiteral: ");"
p45965
tp45966
I1
s(Vinsert
p45967
I42
VSimpleName: setParent
p45968
Vinsert
p45969
I42
VSimpleName: to
p45970
tp45971
I9
s(g42619
I42
g42620
Vinsert
p45972
I25
VIfStatement
p45973
tp45974
I2
s(g2847
I42
g2848
Vinsert
p45975
I21
VExpressionStatement
p45976
tp45977
I5
s(g2319
I42
g2320
Vinsert
p45978
I42
VSimpleName: threads
p45979
tp45980
I2
s(g30418
I42
g30419
Vinsert
p45981
I83
VModifier: public
p45982
tp45983
I1
s(g1665
I42
g1666
Vinsert
p45984
I45
VStringLiteral: "\u005ctSELECT to_char(SYSDATE, 'yyyy-mm-dd HH24:mi:ss')\u005cn"
p45985
tp45986
I1
s(g5787
I42
g5788
Vinsert
p45987
I21
VExpressionStatement
p45988
tp45989
I2
s(Vinsert
p45990
I42
VSimpleName: isLocal
p45991
Vinsert
p45992
I45
VStringLiteral: "ANALYZE "
p45993
tp45994
I1
s(g4921
I42
g4922
Vinsert
p45995
I27
VInfixExpression: !=
p45996
tp45997
I5
s(g3944
I42
g3945
Vinsert
p45998
I42
VSimpleName: setTableName
p45999
tp46000
I1
s(g1760
I42
g1761
Vinsert
p46001
I9
VBooleanLiteral: true
p46002
tp46003
I1
s(g17665
I42
g17666
Vinsert
p46004
I42
VSimpleName: preparedStatement_setDouble
p46005
tp46006
I1
s(g4080
I42
g4081
Vinsert
p46007
I40
VQualifiedName: java.sql.Timestamp
p46008
tp46009
I1
s(g8778
I42
g8779
Vinsert
p46010
I40
VQualifiedName: Token.ERROR
p46011
tp46012
I1
s(Vinsert
p46013
I42
VSimpleName: append
p46014
Vinsert
p46015
I42
VSimpleName: len
p46016
tp46017
I1
s(g7469
I42
g7470
Vinsert
p46018
I43
VSimpleType: DataSourceInfo
p46019
tp46020
I3
s(g577
I42
g578
Vinsert
p46021
I27
VInfixExpression: &&
p46022
tp46023
I3
s(g14160
I42
g14161
Vinsert
p46024
I42
VSimpleName: SQLException
p46025
tp46026
I1
s(g3040
I42
g3041
Vinsert
p46027
I42
VSimpleName: get
p46028
tp46029
I1
s(g21822
I42
g21823
Vinsert
p46030
I45
VStringLiteral: "user0_.password as password0_ "
p46031
tp46032
I1
s(g19212
I42
g19213
Vinsert
p46033
I42
VSimpleName: clone
p46034
tp46035
I2
s(g1903
I42
g1904
Vinsert
p46036
I32
VMethodInvocation
p46037
tp46038
I3
s(g20928
I42
g20929
Vinsert
p46039
I40
VQualifiedName: val.inTransactionCount
p46040
tp46041
I1
s(g18749
I42
g18750
Vinsert
p46042
I59
VVariableDeclarationFragment
p46043
tp46044
I5
s(g9433
I42
g9434
Vinsert
p46045
I32
VMethodInvocation
p46046
tp46047
I2
s(Vinsert
p46048
I42
VSimpleName: parseStatementList
p46049
Vinsert
p46050
I42
VSimpleName: MySqlShowPrivilegesStatement
p46051
tp46052
I2
s(g12324
I42
g12325
Vinsert
p46053
I83
VModifier: public
p46054
tp46055
I1
s(g16863
I42
g16864
Vinsert
p46056
I32
VMethodInvocation
p46057
tp46058
I7
s(g13873
I42
g13874
Vinsert
p46059
I60
VVariableDeclarationStatement
p46060
tp46061
I2
s(g9433
I42
g9434
Vinsert
p46062
I42
VSimpleName: period
p46063
tp46064
I2
s(g45143
I42
g45144
Vinsert
p46065
I42
VSimpleName: MockDriver
p46066
tp46067
I2
s(g12812
I42
g12813
Vinsert
p46068
I43
VSimpleType: Exception
p46069
tp46070
I1
s(g17628
I42
g17629
Vinsert
p46071
I7
VAssignment: =
p46072
tp46073
I3
s(g11479
I42
g11480
Vinsert
p46074
I42
VSimpleName: to
p46075
tp46076
I1
s(g8990
I42
g8991
Vinsert
p46077
I8
VBlock
p46078
tp46079
I1
s(Vinsert
p46080
I42
VSimpleName: clone
p46081
Vinsert
p46082
I42
VSimpleName: operator
p46083
tp46084
I1
s(g22658
I42
g22659
Vinsert
p46085
I45
VStringLiteral: "\u005cnfrom table2;"
p46086
tp46087
I1
s(g21913
I42
g21914
Vinsert
p46088
I40
VQualifiedName: com.alibaba.druid.util.Utils
p46089
tp46090
I1
s(g28392
I42
g28393
Vinsert
p46091
I31
VMethodDeclaration
p46092
tp46093
I4
s(g4745
I42
g4746
Vinsert
p46094
I43
VSimpleType: DruidPooledPreparedStatement
p46095
tp46096
I2
s(g17507
I42
g17508
Vinsert
p46097
I8
VBlock
p46098
tp46099
I1
s(g10882
I42
g10883
Vinsert
p46100
I42
VSimpleName: CallableStatementProxy
p46101
tp46102
I2
s(g8238
I42
g8239
Vinsert
p46103
I8
VBlock
p46104
tp46105
I2
s(Vinsert
p46106
I42
VSimpleName: getItems
p46107
Vinsert
p46108
I43
VSimpleType: SQLAlterTableDisableKeys
p46109
tp46110
I2
s(g25675
I42
g25676
Vinsert
p46111
I42
VSimpleName: sql
p46112
tp46113
I1
s(g4334
I42
g4335
Vinsert
p46114
I42
VSimpleName: i
p46115
tp46116
I5
s(g24923
I42
g24924
Vinsert
p46117
I42
VSimpleName: topStatementContext
p46118
tp46119
I6
s(g1017
I42
g1018
Vinsert
p46120
I42
VSimpleName: recursive
p46121
tp46122
I1
s(g7903
I42
g7904
Vinsert
p46123
I43
VSimpleType: SQLException
p46124
tp46125
I1
s(g44811
I42
g44812
Vinsert
p46126
I42
VSimpleName: DruidDataSource
p46127
tp46128
I1
s(g33004
I42
g33005
Vinsert
p46129
I42
VSimpleName: executeCount
p46130
tp46131
I1
s(g2304
I42
g2305
Vinsert
p46132
I52
VThisExpression
p46133
tp46134
I4
s(g13079
I42
g13080
Vinsert
p46135
I42
VSimpleName: getAlias
p46136
tp46137
I4
s(g1795
I42
g1796
Vinsert
p46138
I42
VSimpleName: x
p46139
tp46140
I2
s(g2538
I42
g2539
Vinsert
p46141
I43
VSimpleType: FilterChain
p46142
tp46143
I1
s(g12833
I42
g12834
Vinsert
p46144
I42
VSimpleName: privateKey
p46145
tp46146
I1
s(g6116
I42
g6117
Vinsert
p46147
I43
VSimpleType: SQLException
p46148
tp46149
I1
s(g12726
I42
g12727
Vinsert
p46150
I42
VSimpleName: getConnection
p46151
tp46152
I1
s(g23793
I42
g23794
Vinsert
p46153
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION west VALUES ('AMERICA', 'GERMANY', 'ITALY', 'SWITZERLAND'),"
p46154
tp46155
I2
s(g6
I42
g7
Vinsert
p46156
I8
VBlock
p46157
tp46158
I1
s(g25556
I42
g25557
Vinsert
p46159
I42
VSimpleName: chain
p46160
tp46161
I1
s(g24633
I42
g24634
Vinsert
p46162
I43
VSimpleType: SQLKeep
p46163
tp46164
I1
s(g982
I42
g983
Vinsert
p46165
I42
VSimpleName: c6
p46166
tp46167
I1
s(Vinsert
p46168
I42
VSimpleName: startsWith
p46169
Vinsert
p46170
I45
VStringLiteral: "com.ingres.jdbc.IngresDriver"
p46171
tp46172
I1
s(g18768
I42
g18769
Vinsert
p46173
I42
VSimpleName: setName
p46174
tp46175
I2
s(g20486
I42
g20487
Vinsert
p46176
I14
VClassInstanceCreation
p46177
tp46178
I1
s(g14187
I42
g14188
Vinsert
p46179
I42
VSimpleName: isWarnEnabled
p46180
tp46181
I1
s(g9939
I42
g9940
Vinsert
p46182
I42
VSimpleName: i
p46183
tp46184
I3
s(g16397
I42
g16398
Vinsert
p46185
I42
VSimpleName: resolve
p46186
tp46187
I1
s(g2150
I42
g2151
Vinsert
p46188
I9
VBooleanLiteral: false
p46189
tp46190
I3
s(g8425
I42
g8426
Vinsert
p46191
I32
VMethodInvocation
p46192
tp46193
I4
s(g46
I42
g47
Vinsert
p46194
I42
VSimpleName: MySqlExtractExpr
p46195
tp46196
I2
s(g6084
I42
g6085
Vinsert
p46197
I8
VBlock
p46198
tp46199
I2
s(g5123
I42
g5124
Vinsert
p46200
I42
VSimpleName: Math
p46201
tp46202
I1
s(Vinsert
p46203
I42
VSimpleName: length
p46204
Vinsert
p46205
I42
VSimpleName: getTenantTablePattern
p46206
tp46207
I1
s(g10642
I42
g10643
Vinsert
p46208
I7
VAssignment: =
p46209
tp46210
I1
s(g2130
I42
g2131
Vinsert
p46211
I44
VSingleVariableDeclaration
p46212
tp46213
I2
s(g31680
I42
g31681
Vinsert
p46214
I42
VSimpleName: columns
p46215
tp46216
I4
s(g27372
I42
g27373
Vinsert
p46217
I42
VSimpleName: operator
p46218
tp46219
I1
s(g9380
I42
g9381
Vinsert
p46220
I42
VSimpleName: filters
p46221
tp46222
I1
s(g28885
I42
g28886
Vinsert
p46223
I42
VSimpleName: condition
p46224
tp46225
I3
s(g4222
I42
g4223
Vinsert
p46226
I43
VSimpleType: DruidDataSourceFactory
p46227
tp46228
I1
s(g24641
I42
g24642
Vinsert
p46229
I25
VIfStatement
p46230
tp46231
I1
s(g45686
I42
g45687
Vinsert
p46232
I42
VSimpleName: deniedSchemas
p46233
tp46234
I2
s(g30105
I42
g30106
Vinsert
p46235
I22
VFieldAccess
p46236
tp46237
I1
s(g8711
I42
g8712
Vinsert
p46238
I38
VPrefixExpression: -
p46239
tp46240
I1
s(g29079
I42
g29080
Vinsert
p46241
I42
VSimpleName: proExpr
p46242
tp46243
I4
s(g19115
I42
g19116
Vinsert
p46244
I11
VCastExpression
p46245
tp46246
I1
s(g2895
I42
g2896
Vinsert
p46247
I42
VSimpleName: stmt
p46248
tp46249
I4
s(g23844
I42
g23845
Vinsert
p46250
I59
VVariableDeclarationFragment
p46251
tp46252
I13
s(g40269
I42
g40270
Vinsert
p46253
I42
VSimpleName: getRawDriverClassName
p46254
tp46255
I1
s(g45731
I42
g45732
Vinsert
p46256
I42
VSimpleName: OracleConstraint
p46257
tp46258
I1
s(g10660
I42
g10661
Vinsert
p46259
I45
VStringLiteral: "\u005ct`c_date` date DEFAULT '0000-00-00' COMMENT 'date',\u005cn"
p46260
tp46261
I2
s(g17739
I42
g17740
Vinsert
p46262
I42
VSimpleName: password
p46263
tp46264
I1
s(Vinsert
p46265
I42
VSimpleName: select
p46266
Vinsert
p46267
I42
VSimpleName: sql
p46268
tp46269
I1
s(g5156
I42
g5157
Vinsert
p46270
I42
VSimpleName: setLockType
p46271
tp46272
I1
s(g15314
I42
g15315
Vinsert
p46273
I42
VSimpleName: dataSource
p46274
tp46275
I1
s(Vinsert
p46276
I42
VSimpleName: visit
p46277
Vinsert
p46278
I42
VSimpleName: to
p46279
tp46280
I4
s(g3292
I42
g3293
Vinsert
p46281
I37
VPostfixExpression: ++
p46282
tp46283
I2
s(g2712
I42
g2713
Vinsert
p46284
I42
VSimpleName: parent
p46285
tp46286
I1
s(g30772
I42
g30773
Vinsert
p46287
I42
VSimpleName: WallConfig
p46288
tp46289
I2
s(g5035
I42
g5036
Vinsert
p46290
I40
VQualifiedName: JdbcConstants.ORACLE
p46291
tp46292
I1
s(g1765
I42
g1766
Vinsert
p46293
I42
VSimpleName: getConditions
p46294
tp46295
I5
s(g9569
I42
g9570
Vinsert
p46296
I42
VSimpleName: connectionClosed
p46297
tp46298
I1
s(g14622
I42
g14623
Vinsert
p46299
I40
VQualifiedName: val.histogram_1000000_more
p46300
tp46301
I1
s(g12453
I42
g12454
Vinsert
p46302
I42
VSimpleName: getFields
p46303
tp46304
I5
s(g25165
I42
g25166
Vinsert
p46305
I42
VSimpleName: put
p46306
tp46307
I2
s(g5414
I42
g5415
Vinsert
p46308
I8
VBlock
p46309
tp46310
I8
s(g6760
I42
g6761
Vinsert
p46311
I43
VSimpleType: String
p46312
tp46313
I2
s(Vinsert
p46314
I42
VSimpleName: assertTrue
p46315
Vinsert
p46316
I45
VStringLiteral: "WHERE s.scope='PRJ'"
p46317
tp46318
I1
s(g4477
I42
g4478
Vinsert
p46319
I8
VBlock
p46320
tp46321
I1
s(g15010
I42
g15011
Vinsert
p46322
I32
VMethodInvocation
p46323
tp46324
I3
s(g35807
I42
g35808
Vinsert
p46325
I42
VSimpleName: setLowBound
p46326
tp46327
I1
s(g14324
I42
g14325
Vinsert
p46328
I43
VSimpleType: SQLColumnDefinition
p46329
tp46330
I2
s(g18680
I42
g18681
Vinsert
p46331
I42
VSimpleName: String
p46332
tp46333
I2
s(Vinsert
p46334
I42
VSimpleName: setParent
p46335
Vinsert
p46336
I42
VSimpleName: setReturnDataType
p46337
tp46338
I1
s(g12324
I42
g12325
Vinsert
p46339
I43
VSimpleType: MySqlShowVariantsStatement
p46340
tp46341
I1
s(g3598
I42
g3599
Vinsert
p46342
I21
VExpressionStatement
p46343
tp46344
I3
s(g24462
I42
g24463
Vinsert
p46345
I41
VReturnStatement
p46346
tp46347
I1
s(g23983
I42
g23984
Vinsert
p46348
I45
VStringLiteral: "TABLESPACE \u005c"USERS\u005c""
p46349
tp46350
I1
s(g24669
I42
g24670
Vinsert
p46351
I76
VWildcardType: ?
p46352
tp46353
I1
s(g15029
I42
g15030
Vinsert
p46354
I62
VInstanceofExpression
p46355
tp46356
I1
s(g46314
I42
g46315
Vinsert
p46357
I45
VStringLiteral: " AND status='P'"
p46358
tp46359
I1
s(g4543
I42
g4544
Vinsert
p46360
I40
VQualifiedName: entry.value
p46361
tp46362
I1
s(g4859
I42
g4860
Vinsert
p46363
I43
VSimpleType: MappingRuleEntry
p46364
tp46365
I1
s(g796
I42
g797
Vinsert
p46366
I43
VSimpleType: OracleConnection
p46367
tp46368
I2
s(g14442
I42
g14443
Vinsert
p46369
I45
VStringLiteral: " from "
p46370
tp46371
I1
s(g3724
I42
g3725
Vinsert
p46372
I45
VStringLiteral: "\u005ctMINEXTENTS 1\u005cn"
p46373
tp46374
I1
s(g1835
I42
g1836
Vinsert
p46375
I27
VInfixExpression: !=
p46376
tp46377
I1
s(g14006
I42
g14007
Vinsert
p46378
I27
VInfixExpression: !=
p46379
tp46380
I1
s(g37280
I42
g37281
Vinsert
p46381
I42
VSimpleName: Map
p46382
tp46383
I1
s(g3679
I42
g3680
Vinsert
p46384
I42
VSimpleName: property
p46385
tp46386
I1
s(g4765
I42
g4766
Vinsert
p46387
I8
VBlock
p46388
tp46389
I1
s(g8365
I42
g8366
Vinsert
p46390
I42
VSimpleName: Throwable
p46391
tp46392
I1
s(g4318
I42
g4319
Vinsert
p46393
I13
VCharacterLiteral: ' '
p46394
tp46395
I1
s(g9519
I42
g9520
Vinsert
p46396
I83
VModifier: synchronized
p46397
tp46398
I1
s(g7720
I42
g7721
Vinsert
p46399
I42
VSimpleName: String
p46400
tp46401
I3
s(g1476
I42
g1477
Vinsert
p46402
I22
VFieldAccess
p46403
tp46404
I3
s(g5369
I42
g5370
Vinsert
p46405
I78
VMarkerAnnotation
p46406
tp46407
I1
s(g8687
I42
g8688
Vinsert
p46408
I8
VBlock
p46409
tp46410
I2
s(g20259
I42
g20260
Vinsert
p46411
I32
VMethodInvocation
p46412
tp46413
I47
s(g1150
I42
g1151
Vinsert
p46414
I27
VInfixExpression: +
p46415
tp46416
I1
s(g7908
I42
g7909
Vinsert
p46417
I42
VSimpleName: SQLException
p46418
tp46419
I2
s(g9696
I42
g9697
Vinsert
p46420
I60
VVariableDeclarationStatement
p46421
tp46422
I1
s(g8465
I42
g8466
Vinsert
p46423
I21
VExpressionStatement
p46424
tp46425
I3
s(g28118
I42
g28119
Vinsert
p46426
I42
VSimpleName: accept
p46427
tp46428
I1
s(g1584
I42
g1585
Vinsert
p46429
I43
VSimpleType: SQLName
p46430
tp46431
I1
s(g5097
I42
g5098
Vinsert
p46432
I42
VSimpleName: setMaxWait
p46433
tp46434
I1
s(g31696
I42
g31697
Vinsert
p46435
I39
VPrimitiveType: int
p46436
tp46437
I1
s(g40094
I42
g40095
Vinsert
p46438
I42
VSimpleName: OracleUpdateStatement
p46439
tp46440
I1
s(g13201
I42
g13202
Vinsert
p46441
I42
VSimpleName: not
p46442
tp46443
I1
s(g577
I42
g578
Vinsert
p46444
I11
VCastExpression
p46445
tp46446
I5
s(g3078
I42
g3079
Vinsert
p46447
I59
VVariableDeclarationFragment
p46448
tp46449
I1
s(g7807
I42
g7808
Vinsert
p46450
I26
VImportDeclaration
p46451
tp46452
I16
s(g846
I42
g847
Vinsert
p46453
I42
VSimpleName: x
p46454
tp46455
I1
s(g16778
I42
g16779
Vinsert
p46456
I42
VSimpleName: setDriver
p46457
tp46458
I2
s(g3169
I42
g3170
Vinsert
p46459
I42
VSimpleName: length
p46460
tp46461
I1
s(g22115
I42
g22116
Vinsert
p46462
I34
VNumberLiteral: 1000
p46463
tp46464
I1
s(g3880
I42
g3881
Vinsert
p46465
I32
VMethodInvocation
p46466
tp46467
I2
s(g26581
I42
g26582
Vinsert
p46468
I31
VMethodDeclaration
p46469
tp46470
I1
s(Vinsert
p46471
I42
VSimpleName: get
p46472
Vinsert
p46473
I42
VSimpleName: getValues
p46474
tp46475
I1
s(g21913
I42
g21914
Vinsert
p46476
I42
VSimpleName: getNumber
p46477
tp46478
I1
s(g7522
I42
g7523
Vinsert
p46479
I25
VIfStatement
p46480
tp46481
I3
s(Vinsert
p46482
I42
VSimpleName: assertTrue
p46483
Vinsert
p46484
I40
VQualifiedName: com.alibaba.druid.pool.PoolableConnection
p46485
tp46486
I1
s(g31798
I42
g31799
Vinsert
p46487
I42
VSimpleName: getParameters
p46488
tp46489
I7
s(g42619
I42
g42620
Vinsert
p46490
I27
VInfixExpression: ==
p46491
tp46492
I1
s(g42762
I42
g42763
Vinsert
p46493
I42
VSimpleName: entity
p46494
tp46495
I2
s(g1948
I42
g1949
Vinsert
p46496
I42
VSimpleName: SQLIdentifierExpr
p46497
tp46498
I2
s(g391
I42
g392
Vinsert
p46499
I21
VExpressionStatement
p46500
tp46501
I1
s(g10550
I42
g10551
Vinsert
p46502
I32
VMethodInvocation
p46503
tp46504
I3
s(g13881
I42
g13882
Vinsert
p46505
I32
VMethodInvocation
p46506
tp46507
I3
s(g20240
I42
g20241
Vinsert
p46508
I43
VSimpleType: IllegalArgumentException
p46509
tp46510
I1
s(g8355
I42
g8356
Vinsert
p46511
I43
VSimpleType: IllegalArgumentException
p46512
tp46513
I1
s(g126
I42
g127
Vinsert
p46514
I7
VAssignment: =
p46515
tp46516
I1
s(g361
I42
g362
Vinsert
p46517
I45
VStringLiteral: " INDEX `changed_index` (`changed`)"
p46518
tp46519
I1
s(g1491
I42
g1492
Vinsert
p46520
I14
VClassInstanceCreation
p46521
tp46522
I1
s(Vinsert
p46523
I42
VSimpleName: resultSet_updateSQLXML
p46524
Vinsert
p46525
I42
VSimpleName: chain
p46526
tp46527
I1
s(g15092
I42
g15093
Vinsert
p46528
I37
VPostfixExpression: ++
p46529
tp46530
I7
s(g11983
I42
g11984
Vinsert
p46531
I42
VSimpleName: OracleStatementParser
p46532
tp46533
I4
s(g5079
I42
g5080
Vinsert
p46534
I8
VBlock
p46535
tp46536
I47
s(g3732
I42
g3733
Vinsert
p46537
I42
VSimpleName: assertEquals
p46538
tp46539
I2
s(g6388
I42
g6389
Vinsert
p46540
I42
VSimpleName: stmt
p46541
tp46542
I2
s(g15864
I42
g15865
Vinsert
p46543
I42
VSimpleName: String
p46544
tp46545
I2
s(g6635
I42
g6636
Vinsert
p46546
I40
VQualifiedName: FileConfigLoader.PROTOCOL_PREFIX
p46547
tp46548
I1
s(g9554
I42
g9555
Vinsert
p46549
I42
VSimpleName: userAgent
p46550
tp46551
I2
s(g8547
I42
g8548
Vinsert
p46552
I34
VNumberLiteral: 1000
p46553
tp46554
I2
s(g10892
I42
g10893
Vinsert
p46555
I45
VStringLiteral: "\u005ct\u005ctFROM TABLE(SPLIT(STR, SEP));\u005cn"
p46556
tp46557
I1
s(g22556
I42
g22557
Vinsert
p46558
I42
VSimpleName: getKey
p46559
tp46560
I1
s(g14702
I42
g14703
Vinsert
p46561
I45
VStringLiteral: "druid.validationQuery"
p46562
tp46563
I1
s(g14484
I42
g14485
Vinsert
p46564
I42
VSimpleName: v1
p46565
tp46566
I1
s(g7537
I42
g7538
Vinsert
p46567
I42
VSimpleName: Reader
p46568
tp46569
I1
s(g5465
I42
g5466
Vinsert
p46570
I8
VBlock
p46571
tp46572
I5
s(g18601
I42
g18602
Vinsert
p46573
I27
VInfixExpression: +
p46574
tp46575
I1
s(g40337
I42
g40338
Vinsert
p46576
I45
VStringLiteral: "\u005cn\u005ct('a2', 'b2'),"
p46577
tp46578
I3
s(g8687
I42
g8688
Vinsert
p46579
I42
VSimpleName: Trans
p46580
tp46581
I1
s(g16447
I42
g16448
Vinsert
p46582
I40
VQualifiedName: propertyExpr.name
p46583
tp46584
I1
s(g18031
I42
g18032
Vinsert
p46585
I42
VSimpleName: lock
p46586
tp46587
I6
s(g26334
I42
g26335
Vinsert
p46588
I42
VSimpleName: binaryExpr
p46589
tp46590
I2
s(g11529
I42
g11530
Vinsert
p46591
I42
VSimpleName: getYoungGC
p46592
tp46593
I1
s(g11910
I42
g11911
Vinsert
p46594
I45
VStringLiteral: " AS "
p46595
tp46596
I1
s(Vinsert
p46597
I42
VSimpleName: setHintAllow
p46598
Vinsert
p46599
I42
VSimpleName: test_true_5
p46600
tp46601
I1
s(g3040
I42
g3041
Vinsert
p46602
I32
VMethodInvocation
p46603
tp46604
I2
s(g1660
I42
g1661
Vinsert
p46605
I42
VSimpleName: targetSource
p46606
tp46607
I2
s(g20456
I42
g20457
Vinsert
p46608
I83
VModifier: public
p46609
tp46610
I2
s(g32069
I42
g32070
Vinsert
p46611
I42
VSimpleName: setDriver
p46612
tp46613
I1
s(Vinsert
p46614
I42
VSimpleName: parseStatements
p46615
Vinsert
p46616
I45
VStringLiteral: "select 1 from hhh as select 1"
p46617
tp46618
I1
s(g16354
I42
g16355
Vinsert
p46619
I83
VModifier: public
p46620
tp46621
I1
s(g4956
I42
g4957
Vinsert
p46622
I14
VClassInstanceCreation
p46623
tp46624
I1
s(g5908
I42
g5909
Vinsert
p46625
I42
VSimpleName: get
p46626
tp46627
I1
s(g6010
I42
g6011
Vinsert
p46628
I45
VStringLiteral: "\u005cn\u005ct),"
p46629
tp46630
I2
s(Vinsert
p46631
I42
VSimpleName: parseStatements
p46632
Vinsert
p46633
I45
VStringLiteral: "select top 1 (CAST(OriganID AS VARCHAR(20)) + ',' + MobilePhoneUrl) FROM T"
p46634
tp46635
I1
s(g2992
I42
g2993
Vinsert
p46636
I42
VSimpleName: List
p46637
tp46638
I3
s(g1760
I42
g1761
Vinsert
p46639
I42
VSimpleName: ValidTask
p46640
tp46641
I1
s(Vinsert
p46642
I42
VSimpleName: reset
p46643
Vinsert
p46644
I9
VBooleanLiteral: true
p46645
tp46646
I1
s(g14234
I42
g14235
Vinsert
p46647
I42
VSimpleName: getSubString
p46648
tp46649
I1
s(g10710
I42
g10711
Vinsert
p46650
I4
VArrayInitializer
p46651
tp46652
I1
s(g2413
I42
g2414
Vinsert
p46653
I27
VInfixExpression: !=
p46654
tp46655
I1
s(g4987
I42
g4988
Vinsert
p46656
I33
VNullLiteral
p46657
tp46658
I1
s(g17074
I42
g17075
Vinsert
p46659
I45
VStringLiteral: "\u005ct`c_longblob` longblob COMMENT 'longblob',\u005cn"
p46660
tp46661
I1
s(g21612
I42
g21613
Vinsert
p46662
I42
VSimpleName: sql
p46663
tp46664
I4
s(g44300
I42
g44301
Vinsert
p46665
I45
VStringLiteral: "    ON c.customer_id=oh.customer_id;"
p46666
tp46667
I1
s(g15443
I42
g15444
Vinsert
p46668
I83
VModifier: public
p46669
tp46670
I1
s(g18173
I42
g18174
Vinsert
p46671
I42
VSimpleName: objectName
p46672
tp46673
I2
s(g23793
I42
g23794
Vinsert
p46674
I45
VStringLiteral: "\u005cnPARTITION BY RANGE (credit_limit)"
p46675
tp46676
I2
s(g7184
I42
g7185
Vinsert
p46677
I59
VVariableDeclarationFragment
p46678
tp46679
I43
s(g7469
I42
g7470
Vinsert
p46680
I42
VSimpleName: DataSourceInfo
p46681
tp46682
I3
s(g6592
I42
g6593
Vinsert
p46683
I32
VMethodInvocation
p46684
tp46685
I1
s(g1800
I42
g1801
Vinsert
p46686
I25
VIfStatement
p46687
tp46688
I2
s(g16556
I42
g16557
Vinsert
p46689
I42
VSimpleName: String
p46690
tp46691
I1
s(g10581
I42
g10582
Vinsert
p46692
I42
VSimpleName: test_0
p46693
tp46694
I2
s(Vinsert
p46695
I42
VSimpleName: parseStatementList
p46696
Vinsert
p46697
I45
VStringLiteral: "SHOW FULL TABLES IN SUNTEST  LIKE '%DDD%' "
p46698
tp46699
I1
s(g5305
I42
g5306
Vinsert
p46700
I40
VQualifiedName: Token.COMMA
p46701
tp46702
I1
s(g15177
I42
g15178
Vinsert
p46703
I39
VPrimitiveType: void
p46704
tp46705
I3
s(g3312
I42
g3313
Vinsert
p46706
I21
VExpressionStatement
p46707
tp46708
I1
s(Vinsert
p46709
I42
VSimpleName: endVisit
p46710
Vinsert
p46711
I42
VSimpleName: usingIndex
p46712
tp46713
I1
s(g5343
I42
g5344
Vinsert
p46714
I43
VSimpleType: Enumeration
p46715
tp46716
I1
s(Vinsert
p46717
I42
VSimpleName: set
p46718
Vinsert
p46719
I42
VSimpleName: rangeCounters
p46720
tp46721
I1
s(Vinsert
p46722
I42
VSimpleName: assertEquals
p46723
Vinsert
p46724
I45
VStringLiteral: "\u005cn\u005ctOPTIMIZE PARTITION p1"
p46725
tp46726
I1
s(Vinsert
p46727
I42
VSimpleName: getTables
p46728
Vinsert
p46729
I8
VBlock
p46730
tp46731
I4
s(g632
I42
g633
Vinsert
p46732
I42
VSimpleName: x
p46733
tp46734
I1
s(g5200
I42
g5201
Vinsert
p46735
I36
VParenthesizedExpression
p46736
tp46737
I1
s(g4165
I42
g4166
Vinsert
p46738
I34
VNumberLiteral: 1
p46739
tp46740
I1
s(Vinsert
p46741
I42
VSimpleName: expr
p46742
Vinsert
p46743
I43
VSimpleType: OracleExprParser
p46744
tp46745
I20
s(g1352
I42
g1353
Vinsert
p46746
I32
VMethodInvocation
p46747
tp46748
I6
s(g32001
I42
g32002
Vinsert
p46749
I42
VSimpleName: MySqlWallProvider
p46750
tp46751
I22
s(g13525
I42
g13526
Vinsert
p46752
I78
VMarkerAnnotation
p46753
tp46754
I2
s(g5685
I42
g5686
Vinsert
p46755
I43
VSimpleType: SQLIntegerExpr
p46756
tp46757
I1
s(g2742
I42
g2743
Vinsert
p46758
I42
VSimpleName: SQLIntervalUnit
p46759
tp46760
I1
s(g11965
I42
g11966
Vinsert
p46761
I42
VSimpleName: config
p46762
tp46763
I4
s(g6212
I42
g6213
Vinsert
p46764
I46
VSuperConstructorInvocation
p46765
tp46766
I2
s(g2504
I42
g2505
Vinsert
p46767
I45
VStringLiteral: " MIN_ROWS "
p46768
tp46769
I1
s(g11678
I42
g11679
Vinsert
p46770
I45
VStringLiteral: "HIGH_PRIORITY "
p46771
tp46772
I1
s(g17106
I42
g17107
Vinsert
p46773
I32
VMethodInvocation
p46774
tp46775
I3
s(g2193
I42
g2194
Vinsert
p46776
I42
VSimpleName: rs
p46777
tp46778
I2
s(g36541
I42
g36542
Vinsert
p46779
I26
VImportDeclaration
p46780
tp46781
I1
s(g4391
I42
g4392
Vinsert
p46782
I42
VSimpleName: SQLException
p46783
tp46784
I1
s(g12844
I42
g12845
Vinsert
p46785
I27
VInfixExpression: ==
p46786
tp46787
I1
s(g8238
I42
g8239
Vinsert
p46788
I43
VSimpleType: Exception
p46789
tp46790
I2
s(g12077
I42
g12078
Vinsert
p46791
I42
VSimpleName: indexFor
p46792
tp46793
I1
s(g32107
I42
g32108
Vinsert
p46794
I42
VSimpleName: dbType
p46795
tp46796
I2
s(Vinsert
p46797
I42
VSimpleName: getStatementPool
p46798
Vinsert
p46799
I32
VMethodInvocation
p46800
tp46801
I7
s(g14361
I42
g14362
Vinsert
p46802
I39
VPrimitiveType: boolean
p46803
tp46804
I9
s(g28840
I42
g28841
Vinsert
p46805
I42
VSimpleName: entries
p46806
tp46807
I1
s(g3921
I42
g3922
Vinsert
p46808
I42
VSimpleName: queryBlock
p46809
tp46810
I3
s(g2029
I42
g2030
Vinsert
p46811
I21
VExpressionStatement
p46812
tp46813
I27
s(g1017
I42
g1018
Vinsert
p46814
I43
VSimpleType: PGWithQuery
p46815
tp46816
I2
s(g9954
I42
g9955
Vinsert
p46817
I43
VSimpleType: WallFunctionStatValue
p46818
tp46819
I2
s(g3179
I42
g3180
Vinsert
p46820
I21
VExpressionStatement
p46821
tp46822
I10
s(g2533
I42
g2534
Vinsert
p46823
I42
VSimpleName: getConnectionConnectAliveMillisMin
p46824
tp46825
I1
s(g19749
I42
g19750
Vinsert
p46826
I43
VSimpleType: PGExceptionSorter
p46827
tp46828
I1
s(g35812
I42
g35813
Vinsert
p46829
I42
VSimpleName: parser
p46830
tp46831
I35
s(g35248
I42
g35249
Vinsert
p46832
I60
VVariableDeclarationStatement
p46833
tp46834
I1
s(g14026
I42
g14027
Vinsert
p46835
I39
VPrimitiveType: int
p46836
tp46837
I1
s(g1120
I42
g1121
Vinsert
p46838
I39
VPrimitiveType: boolean
p46839
tp46840
I1
s(g6343
I42
g6344
Vinsert
p46841
I43
VSimpleType: WallConfig
p46842
tp46843
I4
s(g16240
I42
g16241
Vinsert
p46844
I45
VStringLiteral: "\u005ctMAXTRANS 255\u005cn"
p46845
tp46846
I1
s(g24954
I42
g24955
Vinsert
p46847
I43
VSimpleType: SQLSelectQueryBlock
p46848
tp46849
I2
s(g17106
I42
g17107
Vinsert
p46850
I45
VStringLiteral: "druid.resetStatEnable"
p46851
tp46852
I1
s(g6663
I42
g6664
Vinsert
p46853
I43
VSimpleType: SQLServerObjectReferenceExpr
p46854
tp46855
I1
s(g24503
I42
g24504
Vinsert
p46856
I42
VSimpleName: statementTrace
p46857
tp46858
I1
s(g6938
I42
g6939
Vinsert
p46859
I43
VSimpleType: StringBuilder
p46860
tp46861
I2
s(g3261
I42
g3262
Vinsert
p46862
I59
VVariableDeclarationFragment
p46863
tp46864
I1
s(Vinsert
p46865
I42
VSimpleName: setParent
p46866
Vinsert
p46867
I42
VSimpleName: setStoredAs
p46868
tp46869
I1
s(Vinsert
p46870
I42
VSimpleName: toSQLString
p46871
Vinsert
p46872
I45
VStringLiteral: "\u005cn\u005ctcountry_id CHAR(2),"
p46873
tp46874
I2
s(g17777
I42
g17778
Vinsert
p46875
I32
VMethodInvocation
p46876
tp46877
I6
s(g6121
I42
g6122
Vinsert
p46878
I42
VSimpleName: statContext
p46879
tp46880
I2
s(g13896
I42
g13897
Vinsert
p46881
I42
VSimpleName: BlowfishDecrypter
p46882
tp46883
I2
s(g2454
I42
g2455
Vinsert
p46884
I43
VSimpleType: SQLPropertyExpr
p46885
tp46886
I5
s(g1918
I42
g1919
Vinsert
p46887
I42
VSimpleName: value
p46888
tp46889
I2
s(g4248
I42
g4249
Vinsert
p46890
I42
VSimpleName: lexer
p46891
tp46892
I236
s(g7158
I42
g7159
Vinsert
p46893
I43
VSimpleType: ResultSetMetaData
p46894
tp46895
I1
s(Vinsert
p46896
I42
VSimpleName: token
p46897
Vinsert
p46898
I45
VStringLiteral: "KEY"
p46899
tp46900
I1
s(g23242
I42
g23243
Vinsert
p46901
I33
VNullLiteral
p46902
tp46903
I2
s(g2039
I42
g2040
Vinsert
p46904
I42
VSimpleName: setJdbcUrl
p46905
tp46906
I1
s(g9299
I42
g9300
Vinsert
p46907
I42
VSimpleName: setExpr
p46908
tp46909
I1
s(g10882
I42
g10883
Vinsert
p46910
I42
VSimpleName: CallableStatement
p46911
tp46912
I2
s(g46642
I42
g46643
Vinsert
p46913
I42
VSimpleName: replace
p46914
tp46915
I2
s(g126
I42
g127
Vinsert
p46916
I42
VSimpleName: DruidDriver
p46917
tp46918
I1
s(g18891
I42
g18892
Vinsert
p46919
I42
VSimpleName: OdpsLexer
p46920
tp46921
I3
s(g8778
I42
g8779
Vinsert
p46922
I8
VBlock
p46923
tp46924
I19
s(g21061
I42
g21062
Vinsert
p46925
I59
VVariableDeclarationFragment
p46926
tp46927
I1
s(g10765
I42
g10766
Vinsert
p46928
I25
VIfStatement
p46929
tp46930
I2
s(g19339
I42
g19340
Vinsert
p46931
I45
VStringLiteral: "com.alibaba.jdbc.AlibabaDriver"
p46932
tp46933
I1
s(g4640
I42
g4641
Vinsert
p46934
I8
VBlock
p46935
tp46936
I1
s(g10513
I42
g10514
Vinsert
p46937
I42
VSimpleName: SQLSelect
p46938
tp46939
I2
s(g14072
I42
g14073
Vinsert
p46940
I32
VMethodInvocation
p46941
tp46942
I3
s(g1090
I42
g1091
Vinsert
p46943
I42
VSimpleName: dataType
p46944
tp46945
I1
s(g27276
I42
g27277
Vinsert
p46946
I42
VSimpleName: NumberFormatException
p46947
tp46948
I1
s(g28375
I42
g28376
Vinsert
p46949
I42
VSimpleName: sessionId
p46950
tp46951
I1
s(g21778
I42
g21779
Vinsert
p46952
I21
VExpressionStatement
p46953
tp46954
I2
s(g2459
I42
g2460
Vinsert
p46955
I16
VConditionalExpression
p46956
tp46957
I6
s(g27708
I42
g27709
Vinsert
p46958
I42
VSimpleName: test_having
p46959
tp46960
I1
s(g16728
I42
g16729
Vinsert
p46961
I42
VSimpleName: text
p46962
tp46963
I1
s(g17997
I42
g17998
Vinsert
p46964
I41
VReturnStatement
p46965
tp46966
I3
s(g4238
I42
g4239
Vinsert
p46967
I21
VExpressionStatement
p46968
tp46969
I6
s(g19749
I42
g19750
Vinsert
p46970
I43
VSimpleType: PSQLException
p46971
tp46972
I2
s(g2819
I42
g2820
Vinsert
p46973
I7
VAssignment: =
p46974
tp46975
I1
s(g16863
I42
g16864
Vinsert
p46976
I66
VTextElement:  1.0, 2012-3-18
p46977
tp46978
I1
s(g12294
I42
g12295
Vinsert
p46979
I40
VQualifiedName: Level.WARN
p46980
tp46981
I1
s(g2805
I42
g2806
Vinsert
p46982
I43
VSimpleType: CompositeType
p46983
tp46984
I1
s(g8575
I42
g8576
Vinsert
p46985
I43
VSimpleType: SQLStatement
p46986
tp46987
I3
s(g5623
I42
g5624
Vinsert
p46988
I54
VTryStatement
p46989
tp46990
I5
s(g16380
I42
g16381
Vinsert
p46991
I42
VSimpleName: equalsIgnoreCase
p46992
tp46993
I1
s(g12812
I42
g12813
Vinsert
p46994
I42
VSimpleName: Exception
p46995
tp46996
I1
s(g14951
I42
g14952
Vinsert
p46997
I7
VAssignment: =
p46998
tp46999
I35
s(g13517
I42
g13518
Vinsert
p47000
I45
VStringLiteral: "fields : "
p47001
tp47002
I1
s(Vinsert
p47003
I42
VSimpleName: assertEquals
p47004
Vinsert
p47005
I45
VStringLiteral: "CREATE TABLE tnhash ("
p47006
tp47007
I1
s(g32934
I42
g32935
Vinsert
p47008
I42
VSimpleName: expr
p47009
tp47010
I2
s(g15193
I42
g15194
Vinsert
p47011
I42
VSimpleName: ch
p47012
tp47013
I1
s(g10061
I42
g10062
Vinsert
p47014
I21
VExpressionStatement
p47015
tp47016
I25
s(g25306
I42
g25307
Vinsert
p47017
I78
VMarkerAnnotation
p47018
tp47019
I2
s(g3007
I42
g3008
Vinsert
p47020
I40
VQualifiedName: Boolean.TRUE
p47021
tp47022
I1
s(g11033
I42
g11034
Vinsert
p47023
I43
VSimpleType: HEngine
p47024
tp47025
I2
s(g20439
I42
g20440
Vinsert
p47026
I58
VVariableDeclarationExpression
p47027
tp47028
I1
s(g2213
I42
g2214
Vinsert
p47029
I60
VVariableDeclarationStatement
p47030
tp47031
I1
s(g35577
I42
g35578
Vinsert
p47032
I13
VCharacterLiteral: '.'
p47033
tp47034
I1
s(g25279
I42
g25280
Vinsert
p47035
I45
VStringLiteral: "vbLLUrKeK2fhZ1JJscqkTZ4s6sZ86o5CkZQ1+fmoCEHRnn2mVV986ixuyTCSREZA25hXQFfU\u005cn"
p47036
tp47037
I1
s(g5123
I42
g5124
Vinsert
p47038
I21
VExpressionStatement
p47039
tp47040
I1
s(g15818
I42
g15819
Vinsert
p47041
I42
VSimpleName: String
p47042
tp47043
I1
s(Vinsert
p47044
I42
VSimpleName: parseStatements
p47045
Vinsert
p47046
I45
VStringLiteral: "\u005ct\u005c"GMT_JOIN_MEMBER\u005c" DATE, \u005cn"
p47047
tp47048
I1
s(Vinsert
p47049
I42
VSimpleName: add
p47050
Vinsert
p47051
I7
VAssignment: =
p47052
tp47053
I9
s(g36106
I42
g36107
Vinsert
p47054
I42
VSimpleName: ConfigFilter
p47055
tp47056
I2
s(g28278
I42
g28279
Vinsert
p47057
I45
VStringLiteral: "CONNECT"
p47058
tp47059
I1
s(g26409
I42
g26410
Vinsert
p47060
I45
VStringLiteral: "\u005cna.shop_name,"
p47061
tp47062
I1
s(g34044
I42
g34045
Vinsert
p47063
I42
VSimpleName: statVisitor
p47064
tp47065
I2
s(g429
I42
g430
Vinsert
p47066
I27
VInfixExpression: &&
p47067
tp47068
I1
s(g2178
I42
g2179
Vinsert
p47069
I8
VBlock
p47070
tp47071
I83
s(g26080
I42
g26081
Vinsert
p47072
I32
VMethodInvocation
p47073
tp47074
I1
s(g1370
I42
g1371
Vinsert
p47075
I42
VSimpleName: close
p47076
tp47077
I1
s(g3841
I42
g3842
Vinsert
p47078
I42
VSimpleName: stmt
p47079
tp47080
I1
s(g34122
I42
g34123
Vinsert
p47081
I42
VSimpleName: testDecrypt
p47082
tp47083
I2
s(g17428
I42
g17429
Vinsert
p47084
I42
VSimpleName: stringVal
p47085
tp47086
I3
s(g21900
I42
g21901
Vinsert
p47087
I27
VInfixExpression: +
p47088
tp47089
I19
s(g2702
I42
g2703
Vinsert
p47090
I60
VVariableDeclarationStatement
p47091
tp47092
I1
s(g14274
I42
g14275
Vinsert
p47093
I32
VMethodInvocation
p47094
tp47095
I2
s(g23828
I42
g23829
Vinsert
p47096
I74
VParameterizedType: AtomicLongFieldUpdater<WallDenyStat>
p47097
tp47098
I1
s(g32107
I42
g32108
Vinsert
p47099
I43
VSimpleType: String
p47100
tp47101
I1
s(g10736
I42
g10737
Vinsert
p47102
I40
VQualifiedName: java.sql.Time
p47103
tp47104
I1
s(g346
I42
g347
Vinsert
p47105
I45
VStringLiteral: "WaitThreadCount"
p47106
tp47107
I1
s(g25074
I42
g25075
Vinsert
p47108
I42
VSimpleName: columns
p47109
tp47110
I1
s(g9332
I42
g9333
Vinsert
p47111
I42
VSimpleName: intResult
p47112
tp47113
I1
s(g20100
I42
g20101
Vinsert
p47114
I42
VSimpleName: tableSource
p47115
tp47116
I1
s(g22986
I42
g22987
Vinsert
p47117
I43
VSimpleType: String
p47118
tp47119
I2
s(g1868
I42
g1869
Vinsert
p47120
I33
VNullLiteral
p47121
tp47122
I1
s(g8687
I42
g8688
Vinsert
p47123
I42
VSimpleName: Dao
p47124
tp47125
I1
s(g7552
I42
g7553
Vinsert
p47126
I42
VSimpleName: setTestWhileIdle
p47127
tp47128
I1
s(Vinsert
p47129
I42
VSimpleName: close
p47130
Vinsert
p47131
I45
VStringLiteral: "pt_dragoon_test"
p47132
tp47133
I1
s(g2629
I42
g2630
Vinsert
p47134
I42
VSimpleName: a
p47135
tp47136
I8
s(Vinsert
p47137
I42
VSimpleName: nextToken
p47138
Vinsert
p47139
I42
VSimpleName: name
p47140
tp47141
I12
s(g5310
I42
g5311
Vinsert
p47142
I42
VSimpleName: select
p47143
tp47144
I1
s(g2722
I42
g2723
Vinsert
p47145
I59
VVariableDeclarationFragment
p47146
tp47147
I1
s(g12812
I42
g12813
Vinsert
p47148
I74
VParameterizedType: Class<?>
p47149
tp47150
I1
s(g7937
I42
g7938
Vinsert
p47151
I40
VQualifiedName: JdbcConstants.TERADATA
p47152
tp47153
I2
s(g18907
I42
g18908
Vinsert
p47154
I45
VStringLiteral: "ALTER TABLE project_measures\u005cn"
p47155
tp47156
I1
s(g32712
I42
g32713
Vinsert
p47157
I42
VSimpleName: get
p47158
tp47159
I1
s(g6031
I42
g6032
Vinsert
p47160
I45
VStringLiteral: ", "
p47161
tp47162
I1
s(g11474
I42
g11475
Vinsert
p47163
I42
VSimpleName: SQLUtils
p47164
tp47165
I7
s(g7594
I42
g7595
Vinsert
p47166
I43
VSimpleType: SchemaResolveVisitor
p47167
tp47168
I1
s(g23859
I42
g23860
Vinsert
p47169
I43
VSimpleType: SQLIntegerExpr
p47170
tp47171
I1
s(g3144
I42
g3145
Vinsert
p47172
I42
VSimpleName: isNoWriteToBinlog
p47173
tp47174
I2
s(g7039
I42
g7040
Vinsert
p47175
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION ch_t"
p47176
tp47177
I2
s(g10066
I42
g10067
Vinsert
p47178
I41
VReturnStatement
p47179
tp47180
I16
s(Vinsert
p47181
I42
VSimpleName: hashCode64
p47182
Vinsert
p47183
I42
VSimpleName: userNameHashCod64
p47184
tp47185
I3
s(g44913
I42
g44914
Vinsert
p47186
I42
VSimpleName: Item
p47187
tp47188
I2
s(g26868
I42
g26869
Vinsert
p47189
I42
VSimpleName: SQLArrayExpr
p47190
tp47191
I1
s(Vinsert
p47192
I42
VSimpleName: getName
p47193
Vinsert
p47194
I45
VStringLiteral: "BEGIN TRANSACTION"
p47195
tp47196
I1
s(g2469
I42
g2470
Vinsert
p47197
I27
VInfixExpression: !=
p47198
tp47199
I2
s(g4770
I42
g4771
Vinsert
p47200
I42
VSimpleName: SQLUpdateSetItem
p47201
tp47202
I1
s(g20618
I42
g20619
Vinsert
p47203
I42
VSimpleName: hierachical
p47204
tp47205
I1
s(g5699
I42
g5700
Vinsert
p47206
I42
VSimpleName: lexer
p47207
tp47208
I1
s(g5931
I42
g5932
Vinsert
p47209
I45
VStringLiteral: "{"
p47210
tp47211
I1
s(g8849
I42
g8850
Vinsert
p47212
I85
VDimension
p47213
tp47214
I1
s(Vinsert
p47215
I42
VSimpleName: visit
p47216
Vinsert
p47217
I42
VSimpleName: withQuery
p47218
tp47219
I2
s(g15919
I42
g15920
Vinsert
p47220
I42
VSimpleName: expr
p47221
tp47222
I1
s(g6592
I42
g6593
Vinsert
p47223
I83
VModifier: public
p47224
tp47225
I1
s(g8617
I42
g8618
Vinsert
p47226
I42
VSimpleName: getAttribute
p47227
tp47228
I1
s(g23899
I42
g23900
Vinsert
p47229
I21
VExpressionStatement
p47230
tp47231
I2
s(g1385
I42
g1386
Vinsert
p47232
I8
VBlock
p47233
tp47234
I2
s(g6927
I42
g6928
Vinsert
p47235
I42
VSimpleName: bufPos
p47236
tp47237
I1
s(g23603
I42
g23604
Vinsert
p47238
I74
VParameterizedType: List<Object>
p47239
tp47240
I3
s(g8425
I42
g8426
Vinsert
p47241
I45
VStringLiteral: "Test2"
p47242
tp47243
I1
s(g12616
I42
g12617
Vinsert
p47244
I42
VSimpleName: Math
p47245
tp47246
I1
s(g25573
I42
g25574
Vinsert
p47247
I43
VSimpleType: Object
p47248
tp47249
I1
s(g23414
I42
g23415
Vinsert
p47250
I27
VInfixExpression: !=
p47251
tp47252
I1
s(g12888
I42
g12889
Vinsert
p47253
I21
VExpressionStatement
p47254
tp47255
I505
s(g9041
I42
g9042
Vinsert
p47256
I44
VSingleVariableDeclaration
p47257
tp47258
I1
s(g9456
I42
g9457
Vinsert
p47259
I40
VQualifiedName: Token.PRIMARY
p47260
tp47261
I1
s(g8480
I42
g8481
Vinsert
p47262
I42
VSimpleName: item
p47263
tp47264
I2
s(Vinsert
p47265
I42
VSimpleName: visit
p47266
Vinsert
p47267
I42
VSimpleName: reuseSettings
p47268
tp47269
I2
s(g9613
I42
g9614
Vinsert
p47270
I43
VSimpleType: MySqlShowGrantsStatement
p47271
tp47272
I2
s(g8956
I42
g8957
Vinsert
p47273
I32
VMethodInvocation
p47274
tp47275
I1
s(g2805
I42
g2806
Vinsert
p47276
I42
VSimpleName: dataSources
p47277
tp47278
I1
s(g2819
I42
g2820
Vinsert
p47279
I42
VSimpleName: preparedStatementFactory
p47280
tp47281
I3
s(g25961
I42
g25962
Vinsert
p47282
I42
VSimpleName: createTableStmt
p47283
tp47284
I3
s(g6521
I42
g6522
Vinsert
p47285
I39
VPrimitiveType: boolean
p47286
tp47287
I1
s(g8052
I42
g8053
Vinsert
p47288
I32
VMethodInvocation
p47289
tp47290
I3
s(Vinsert
p47291
I42
VSimpleName: setParent
p47292
Vinsert
p47293
I42
VSimpleName: setComment
p47294
tp47295
I4
s(g477
I42
g478
Vinsert
p47296
I40
VQualifiedName: other.operator
p47297
tp47298
I1
s(g3495
I42
g3496
Vinsert
p47299
I42
VSimpleName: nextToken
p47300
tp47301
I3
s(g17082
I42
g17083
Vinsert
p47302
I42
VSimpleName: session
p47303
tp47304
I1
s(g20835
I42
g20836
Vinsert
p47305
I42
VSimpleName: config
p47306
tp47307
I1
s(g4584
I42
g4585
Vinsert
p47308
I25
VIfStatement
p47309
tp47310
I4
s(g11192
I42
g11193
Vinsert
p47311
I42
VSimpleName: printOpSpace
p47312
tp47313
I1
s(g29483
I42
g29484
Vinsert
p47314
I43
VSimpleType: SQLExprParser
p47315
tp47316
I3
s(g29767
I42
g29768
Vinsert
p47317
I42
VSimpleName: setExpr
p47318
tp47319
I2
s(g6577
I42
g6578
Vinsert
p47320
I45
VStringLiteral: "                            2\u005cn"
p47321
tp47322
I2
s(g26675
I42
g26676
Vinsert
p47323
I42
VSimpleName: SQLDeleteStatement
p47324
tp47325
I1
s(g8062
I42
g8063
Vinsert
p47326
I42
VSimpleName: error
p47327
tp47328
I1
s(g522
I42
g523
Vinsert
p47329
I43
VSimpleType: SQLCurrentOfCursorExpr
p47330
tp47331
I2
s(g20564
I42
g20565
Vinsert
p47332
I70
VEnhancedForStatement
p47333
tp47334
I1
s(g8886
I42
g8887
Vinsert
p47335
I52
VThisExpression
p47336
tp47337
I2
s(Vinsert
p47338
I42
VSimpleName: size
p47339
Vinsert
p47340
I34
VNumberLiteral: 9
p47341
tp47342
I2
s(g5369
I42
g5370
Vinsert
p47343
I43
VSimpleType: UserSpecification
p47344
tp47345
I1
s(g30636
I42
g30637
Vinsert
p47346
I27
VInfixExpression: &&
p47347
tp47348
I1
s(g36992
I42
g36993
Vinsert
p47349
I42
VSimpleName: getPivot
p47350
tp47351
I1
s(g20293
I42
g20294
Vinsert
p47352
I43
VSimpleType: SQLPropertyExpr
p47353
tp47354
I6
s(g38899
I42
g38900
Vinsert
p47355
I42
VSimpleName: getLog
p47356
tp47357
I1
s(g3035
I42
g3036
Vinsert
p47358
I21
VExpressionStatement
p47359
tp47360
I2
s(g41660
I42
g41661
Vinsert
p47361
I42
VSimpleName: isEnable
p47362
tp47363
I1
s(g20822
I42
g20823
Vinsert
p47364
I42
VSimpleName: MySqlUnique
p47365
tp47366
I1
s(g9380
I42
g9381
Vinsert
p47367
I32
VMethodInvocation
p47368
tp47369
I1
s(g6539
I42
g6540
Vinsert
p47370
I45
VStringLiteral: "\u005cn\u005ctmanager_id NUMBER(4),"
p47371
tp47372
I6
s(g17739
I42
g17740
Vinsert
p47373
I42
VSimpleName: proxyClient
p47374
tp47375
I1
s(g5465
I42
g5466
Vinsert
p47376
I43
VSimpleType: WallCheckResult
p47377
tp47378
I1
s(g11737
I42
g11738
Vinsert
p47379
I43
VSimpleType: Object
p47380
tp47381
I1
s(Vinsert
p47382
I42
VSimpleName: visit
p47383
Vinsert
p47384
I43
VSimpleType: TeradataASTVisitor
p47385
tp47386
I2
s(g17174
I42
g17175
Vinsert
p47387
I45
VStringLiteral: "\u005ctVIEW my_view4 (\u005cn"
p47388
tp47389
I1
s(g11624
I42
g11625
Vinsert
p47390
I42
VSimpleName: parameters
p47391
tp47392
I9
s(g8956
I42
g8957
Vinsert
p47393
I42
VSimpleName: result
p47394
tp47395
I2
s(g31177
I42
g31178
Vinsert
p47396
I42
VSimpleName: holder
p47397
tp47398
I3
s(g35793
I42
g35794
Vinsert
p47399
I45
VStringLiteral: "select shop_name, customer_id, total_price\u005cn"
p47400
tp47401
I1
s(g3442
I42
g3443
Vinsert
p47402
I45
VStringLiteral: "select last_name, employee_id, manager_id, LEVEL\u005cn"
p47403
tp47404
I2
s(g6429
I42
g6430
Vinsert
p47405
I42
VSimpleName: x
p47406
tp47407
I1
s(g5429
I42
g5430
Vinsert
p47408
I83
VModifier: public
p47409
tp47410
I1
s(g3213
I42
g3214
Vinsert
p47411
I42
VSimpleName: SQLExpr
p47412
tp47413
I4
s(g21257
I42
g21258
Vinsert
p47414
I45
VStringLiteral: "                select Distinct auser.cunit_code"
p47415
tp47416
I1
s(g13973
I42
g13974
Vinsert
p47417
I42
VSimpleName: assertNotNull
p47418
tp47419
I1
s(g10953
I42
g10954
Vinsert
p47420
I42
VSimpleName: queryBlock
p47421
tp47422
I1
s(g612
I42
g613
Vinsert
p47423
I42
VSimpleName: WallSqlTableStat
p47424
tp47425
I1
s(g18496
I42
g18497
Vinsert
p47426
I37
VPostfixExpression: ++
p47427
tp47428
I1
s(Vinsert
p47429
I42
VSimpleName: toSQLString
p47430
Vinsert
p47431
I45
VStringLiteral: "GRANT CREATE SESSION TO hr"
p47432
tp47433
I1
s(g36213
I42
g36214
Vinsert
p47434
I42
VSimpleName: dataSourceOne
p47435
tp47436
I1
s(Vinsert
p47437
I42
VSimpleName: createStatement
p47438
Vinsert
p47439
I42
VSimpleName: setFilters
p47440
tp47441
I1
s(g8588
I42
g8589
Vinsert
p47442
I8
VBlock
p47443
tp47444
I75
s(g28790
I42
g28791
Vinsert
p47445
I42
VSimpleName: i
p47446
tp47447
I1
s(g20051
I42
g20052
Vinsert
p47448
I43
VSimpleType: OracleForeignKey
p47449
tp47450
I1
s(Vinsert
p47451
I42
VSimpleName: visit
p47452
Vinsert
p47453
I42
VSimpleName: definition
p47454
tp47455
I1
s(g4298
I42
g4299
Vinsert
p47456
I42
VSimpleName: x
p47457
tp47458
I2
s(g14540
I42
g14541
Vinsert
p47459
I59
VVariableDeclarationFragment
p47460
tp47461
I1
s(g1978
I42
g1979
Vinsert
p47462
I27
VInfixExpression: ==
p47463
tp47464
I1
s(Vinsert
p47465
I42
VSimpleName: createStatement
p47466
Vinsert
p47467
I42
VSimpleName: c
p47468
tp47469
I2
s(g5515
I42
g5516
Vinsert
p47470
I34
VNumberLiteral: 5
p47471
tp47472
I1
s(g10731
I42
g10732
Vinsert
p47473
I45
VStringLiteral: "abc"
p47474
tp47475
I1
s(g11197
I42
g11198
Vinsert
p47476
I43
VSimpleType: TableStat.Relationship
p47477
tp47478
I1
s(g11105
I42
g11106
Vinsert
p47479
I42
VSimpleName: JdbcUtilsTest_for_odps
p47480
tp47481
I1
s(g12781
I42
g12782
Vinsert
p47482
I42
VSimpleName: startMillis
p47483
tp47484
I6
s(g13390
I42
g13391
Vinsert
p47485
I45
VStringLiteral: "  SELECT INSTANCEID,WFID,WFSIGN,NODEID,NODESTARTTIME,ORIGINALUSER,REPLACER,SYSID,PK_VALUE,APPL_TYPE,WFI_END_ORG,WFI_STATUS FROM (SELECT ROWID ROWIDTMP, AA.* FROM (SELECT A.INSTANCEID INSTANCEID,A.WFID WFID,A.WFSIGN WFSIGN,A.NODEID NODEID,A.NODESTARTTIME NODESTARTTIME,A.ORIGINALUSER ORIGINALUSER,A.REPLACER REPLACER,A.SYSID SYSID,B.PK_VALUE PK_VALUE,B.APPL_TYPE APPL_TYPE,B.WFI_END_ORG WFI_END_ORG,B.WFI_STATUS WFI_STATUS FROM WF_AGENT_LOG A, WFI_JOIN_HIS B WHERE A.INSTANCEID=B.INSTANCEID) AA) WHERE ROWIDTMP IN (SELECT ROWIDMAX FROM ( SELECT MAX(ROWID) ROWIDMAX,INSTANCEID FROM(SELECT A.INSTANCEID INSTANCEID FROM WF_AGENT_LOG A, WFI_JOIN_HIS B WHERE A.INSTANCEID=B.INSTANCEID) AA GROUP BY  INSTANCEID ))\u005cn"
p47486
tp47487
I1
s(g13677
I42
g13678
Vinsert
p47488
I11
VCastExpression
p47489
tp47490
I2
s(g27680
I42
g27681
Vinsert
p47491
I27
VInfixExpression: ||
p47492
tp47493
I6
s(g5515
I42
g5516
Vinsert
p47494
I39
VPrimitiveType: void
p47495
tp47496
I2
s(Vinsert
p47497
I42
VSimpleName: assertEquals
p47498
Vinsert
p47499
I42
VSimpleName: EvalLikeTest
p47500
tp47501
I1
s(g5414
I42
g5415
Vinsert
p47502
I42
VSimpleName: x
p47503
tp47504
I5
s(g47003
I42
g47004
Vinsert
p47505
I45
VStringLiteral: "\u005cn\u005ctname VARCHAR(5)"
p47506
tp47507
I2
s(g5805
I42
g5806
Vinsert
p47508
I39
VPrimitiveType: int
p47509
tp47510
I1
s(Vinsert
p47511
I42
VSimpleName: nextToken
p47512
Vinsert
p47513
I42
VSimpleName: connectByRoot
p47514
tp47515
I2
s(g19035
I42
g19036
Vinsert
p47516
I32
VMethodInvocation
p47517
tp47518
I12
s(Vinsert
p47519
I42
VSimpleName: getConstraintName
p47520
Vinsert
p47521
I42
VSimpleName: SQLAlterTableEnableConstraint
p47522
tp47523
I1
s(g13996
I42
g13997
Vinsert
p47524
I43
VSimpleType: OracleDbLinkExpr
p47525
tp47526
I2
s(g371
I42
g372
Vinsert
p47527
I45
VStringLiteral: "EXPLAIN\u005cn"
p47528
tp47529
I1
s(g13891
I42
g13892
Vinsert
p47530
I36
VParenthesizedExpression
p47531
tp47532
I1
s(g14980
I42
g14981
Vinsert
p47533
I42
VSimpleName: mock
p47534
tp47535
I1
s(g6529
I42
g6530
Vinsert
p47536
I43
VSimpleType: Integer
p47537
tp47538
I1
s(g13311
I42
g13312
Vinsert
p47539
I45
VStringLiteral: "\u005cn\u005ct\u005ctCONSTRAINT check_qty CHECK (quantity > 0),"
p47540
tp47541
I2
s(Vinsert
p47542
I42
VSimpleName: append
p47543
Vinsert
p47544
I42
VSimpleName: columns
p47545
tp47546
I1
s(g33739
I42
g33740
Vinsert
p47547
I42
VSimpleName: holder
p47548
tp47549
I1
s(g14212
I42
g14213
Vinsert
p47550
I36
VParenthesizedExpression
p47551
tp47552
I1
s(g1943
I42
g1944
Vinsert
p47553
I44
VSingleVariableDeclaration
p47554
tp47555
I1
s(g24959
I42
g24960
Vinsert
p47556
I25
VIfStatement
p47557
tp47558
I3
s(g14426
I42
g14427
Vinsert
p47559
I42
VSimpleName: SqlMapClientImpl
p47560
tp47561
I2
s(g7417
I42
g7418
Vinsert
p47562
I25
VIfStatement
p47563
tp47564
I2
s(g4926
I42
g4927
Vinsert
p47565
I52
VThisExpression
p47566
tp47567
I1
s(Vinsert
p47568
I42
VSimpleName: close
p47569
Vinsert
p47570
I42
VSimpleName: execute
p47571
tp47572
I8
s(Vinsert
p47573
I42
VSimpleName: put
p47574
Vinsert
p47575
I42
VSimpleName: String
p47576
tp47577
I27
s(g9345
I42
g9346
Vinsert
p47578
I43
VSimpleType: HTableDescriptor
p47579
tp47580
I1
s(Vinsert
p47581
I42
VSimpleName: isInstance
p47582
Vinsert
p47583
I76
VWildcardType: ?
p47584
tp47585
I3
s(g5389
I42
g5390
Vinsert
p47586
I27
VInfixExpression: ==
p47587
tp47588
I3
s(g8011
I42
g8012
Vinsert
p47589
I42
VSimpleName: dialog
p47590
tp47591
I2
s(g14274
I42
g14275
Vinsert
p47592
I43
VSimpleType: File
p47593
tp47594
I1
s(g13001
I42
g13002
Vinsert
p47595
I44
VSingleVariableDeclaration
p47596
tp47597
I1
s(g25594
I42
g25595
Vinsert
p47598
I33
VNullLiteral
p47599
tp47600
I1
s(g7073
I42
g7074
Vinsert
p47601
I42
VSimpleName: setMaxActive
p47602
tp47603
I1
s(Vinsert
p47604
I42
VSimpleName: formatOdps
p47605
Vinsert
p47606
I45
VStringLiteral: "\u005cn;"
p47607
tp47608
I7
s(g487
I42
g488
Vinsert
p47609
I85
VDimension
p47610
tp47611
I1
s(g26854
I42
g26855
Vinsert
p47612
I43
VSimpleType: SQLInSubQueryExpr
p47613
tp47614
I1
s(g16975
I42
g16976
Vinsert
p47615
I42
VSimpleName: indexFor
p47616
tp47617
I1
s(g21212
I42
g21213
Vinsert
p47618
I42
VSimpleName: v2
p47619
tp47620
I2
s(g11297
I42
g11298
Vinsert
p47621
I38
VPrefixExpression: !
p47622
tp47623
I3
s(g17665
I42
g17666
Vinsert
p47624
I42
VSimpleName: parameterIndex
p47625
tp47626
I2
s(g25409
I42
g25410
Vinsert
p47627
I40
VQualifiedName: JdbcConstants.MYSQL
p47628
tp47629
I1
s(g20173
I42
g20174
Vinsert
p47630
I40
VQualifiedName: FnvHash.BASIC
p47631
tp47632
I1
s(g19810
I42
g19811
Vinsert
p47633
I52
VThisExpression
p47634
tp47635
I1
s(g4760
I42
g4761
Vinsert
p47636
I33
VNullLiteral
p47637
tp47638
I1
s(g11624
I42
g11625
Vinsert
p47639
I42
VSimpleName: param
p47640
tp47641
I1
s(g2727
I42
g2728
Vinsert
p47642
I42
VSimpleName: accept
p47643
tp47644
I1
s(g12849
I42
g12850
Vinsert
p47645
I36
VParenthesizedExpression
p47646
tp47647
I1
s(g316
I42
g317
Vinsert
p47648
I42
VSimpleName: sqlStatMap
p47649
tp47650
I1
s(g5007
I42
g5008
Vinsert
p47651
I8
VBlock
p47652
tp47653
I2
s(g5242
I42
g5243
Vinsert
p47654
I43
VSimpleType: OracleDropSequenceStatement
p47655
tp47656
I1
s(Vinsert
p47657
I42
VSimpleName: equals
p47658
Vinsert
p47659
I42
VSimpleName: connectionLogEnabled
p47660
tp47661
I2
s(g21876
I42
g21877
Vinsert
p47662
I53
VThrowStatement
p47663
tp47664
I1
s(g13643
I42
g13644
Vinsert
p47665
I32
VMethodInvocation
p47666
tp47667
I1
s(g4238
I42
g4239
Vinsert
p47668
I42
VSimpleName: String
p47669
tp47670
I1
s(g12911
I42
g12912
Vinsert
p47671
I32
VMethodInvocation
p47672
tp47673
I4
s(g12639
I42
g12640
Vinsert
p47674
I45
VStringLiteral: "VMoRHfX6apzfyMkvWhzQLCYvAcq6Zu7++E7PrXNxUJzk/FZW8P9eRgyyyMFnDj53aP1cDje9\u005cn"
p47675
tp47676
I1
s(g947
I42
g948
Vinsert
p47677
I8
VBlock
p47678
tp47679
I6
s(g6781
I42
g6782
Vinsert
p47680
I45
VStringLiteral: "t_like_count"
p47681
tp47682
I2
s(Vinsert
p47683
I42
VSimpleName: nextToken
p47684
Vinsert
p47685
I45
VStringLiteral: "DATABASE"
p47686
tp47687
I1
s(g36005
I42
g36006
Vinsert
p47688
I25
VIfStatement
p47689
tp47690
I1
s(g3811
I42
g3812
Vinsert
p47691
I38
VPrefixExpression: !
p47692
tp47693
I2
s(Vinsert
p47694
I42
VSimpleName: visit
p47695
Vinsert
p47696
I42
VSimpleName: value
p47697
tp47698
I3
s(g34186
I42
g34187
Vinsert
p47699
I42
VSimpleName: text
p47700
tp47701
I9
s(g1647
I42
g1648
Vinsert
p47702
I32
VMethodInvocation
p47703
tp47704
I1
s(g42842
I42
g42843
Vinsert
p47705
I42
VSimpleName: outputOracle
p47706
tp47707
I1
s(g3816
I42
g3817
Vinsert
p47708
I42
VSimpleName: isReadOnly
p47709
tp47710
I1
s(g14754
I42
g14755
Vinsert
p47711
I42
VSimpleName: Exception
p47712
tp47713
I1
s(g492
I42
g493
Vinsert
p47714
I8
VBlock
p47715
tp47716
I1
s(g19938
I42
g19939
Vinsert
p47717
I42
VSimpleName: pstmt
p47718
tp47719
I2
s(g15209
I42
g15210
Vinsert
p47720
I40
VQualifiedName: SQLObjectType.ROLE
p47721
tp47722
I1
s(g14917
I42
g14918
Vinsert
p47723
I45
VStringLiteral: "\u005ct\u005ctAND (b.cp_code = p.cp_code\u005cn"
p47724
tp47725
I1
s(g13493
I42
g13494
Vinsert
p47726
I42
VSimpleName: v
p47727
tp47728
I6
s(g1365
I42
g1366
Vinsert
p47729
I42
VSimpleName: schema
p47730
tp47731
I1
s(g16264
I42
g16265
Vinsert
p47732
I42
VSimpleName: Properties
p47733
tp47734
I4
s(g733
I42
g734
Vinsert
p47735
I54
VTryStatement
p47736
tp47737
I7
s(g4238
I42
g4239
Vinsert
p47738
I52
VThisExpression
p47739
tp47740
I2
s(g7965
I42
g7966
Vinsert
p47741
I42
VSimpleName: sqlObject
p47742
tp47743
I1
s(g10542
I42
g10543
Vinsert
p47744
I7
VAssignment: =
p47745
tp47746
I6
s(g33839
I42
g33840
Vinsert
p47747
I42
VSimpleName: getOperator
p47748
tp47749
I2
s(Vinsert
p47750
I42
VSimpleName: expr
p47751
Vinsert
p47752
I43
VSimpleType: PGMacAddrExpr
p47753
tp47754
I2
s(g5267
I42
g5268
Vinsert
p47755
I83
VModifier: public
p47756
tp47757
I8
s(g2875
I42
g2876
Vinsert
p47758
I43
VSimpleType: Exception
p47759
tp47760
I2
s(g4849
I42
g4850
Vinsert
p47761
I45
VStringLiteral: "SELECT * FROM T_PRE_STMT_TEST ORDER BY 2"
p47762
tp47763
I1
s(g11737
I42
g11738
Vinsert
p47764
I42
VSimpleName: Map
p47765
tp47766
I1
s(g5257
I42
g5258
Vinsert
p47767
I42
VSimpleName: uri
p47768
tp47769
I2
s(g19307
I42
g19308
Vinsert
p47770
I42
VSimpleName: print0
p47771
tp47772
I1
s(g27722
I42
g27723
Vinsert
p47773
I21
VExpressionStatement
p47774
tp47775
I3
s(g3598
I42
g3599
Vinsert
p47776
I43
VSimpleType: Record
p47777
tp47778
I1
s(g18049
I42
g18050
Vinsert
p47779
I42
VSimpleName: lexer
p47780
tp47781
I4
s(g8179
I42
g8180
Vinsert
p47782
I43
VSimpleType: Map
p47783
tp47784
I1
s(g19741
I42
g19742
Vinsert
p47785
I32
VMethodInvocation
p47786
tp47787
I2
s(g25381
I42
g25382
Vinsert
p47788
I42
VSimpleName: test_0
p47789
tp47790
I1
s(g10513
I42
g10514
Vinsert
p47791
I7
VAssignment: =
p47792
tp47793
I5
s(g34863
I42
g34864
Vinsert
p47794
I42
VSimpleName: x
p47795
tp47796
I10
s(Vinsert
p47797
I42
VSimpleName: get
p47798
Vinsert
p47799
I42
VSimpleName: attributes
p47800
tp47801
I3
s(g16080
I42
g16081
Vinsert
p47802
I42
VSimpleName: SQLDeleteStatement
p47803
tp47804
I2
s(g12930
I42
g12931
Vinsert
p47805
I60
VVariableDeclarationStatement
p47806
tp47807
I4
s(g11691
I42
g11692
Vinsert
p47808
I8
VBlock
p47809
tp47810
I11
s(g587
I42
g588
Vinsert
p47811
I45
VStringLiteral: ",POSTCODE,PHONE,FAX,EMAIL,ADDRESS,FIRST_NAME,LAST_NAME,sex) "
p47812
tp47813
I1
s(Vinsert
p47814
I42
VSimpleName: put
p47815
Vinsert
p47816
I45
VStringLiteral: "LOOP"
p47817
tp47818
I1
s(g1448
I42
g1449
Vinsert
p47819
I16
VConditionalExpression
p47820
tp47821
I23
s(g19741
I42
g19742
Vinsert
p47822
I43
VSimpleType: MySqlOutFileExpr
p47823
tp47824
I2
s(g5520
I42
g5521
Vinsert
p47825
I12
VCatchClause
p47826
tp47827
I1
s(g9878
I42
g9879
Vinsert
p47828
I42
VSimpleName: x
p47829
tp47830
I12
s(g5974
I42
g5975
Vinsert
p47831
I21
VExpressionStatement
p47832
tp47833
I1
s(g116
I42
g117
Vinsert
p47834
I78
VMarkerAnnotation
p47835
tp47836
I1
s(g3058
I42
g3059
Vinsert
p47837
I45
VStringLiteral: "\u005cn\u005ctFOR EACH ROW"
p47838
tp47839
I2
s(g18308
I42
g18309
Vinsert
p47840
I45
VStringLiteral: ""
p47841
tp47842
I1
s(g6901
I42
g6902
Vinsert
p47843
I42
VSimpleName: SQLFetchStatement
p47844
tp47845
I1
s(g8457
I42
g8458
Vinsert
p47846
I42
VSimpleName: serialVersionUID
p47847
tp47848
I12
s(Vinsert
p47849
I42
VSimpleName: accept
p47850
Vinsert
p47851
I42
VSimpleName: StringBuffer
p47852
tp47853
I1
s(g4630
I42
g4631
Vinsert
p47854
I42
VSimpleName: x
p47855
tp47856
I1
s(g21598
I42
g21599
Vinsert
p47857
I41
VReturnStatement
p47858
tp47859
I1
s(g4806
I42
g4807
Vinsert
p47860
I43
VSimpleType: SQLAggregateExpr
p47861
tp47862
I2
s(g36748
I42
g36749
Vinsert
p47863
I42
VSimpleName: extract
p47864
tp47865
I1
s(g7702
I42
g7703
Vinsert
p47866
I45
VStringLiteral: "ADD "
p47867
tp47868
I1
s(g20382
I42
g20383
Vinsert
p47869
I60
VVariableDeclarationStatement
p47870
tp47871
I1
s(g16525
I42
g16526
Vinsert
p47872
I32
VMethodInvocation
p47873
tp47874
I2
s(g20811
I42
g20812
Vinsert
p47875
I42
VSimpleName: IllegalAccessException
p47876
tp47877
I2
s(g8588
I42
g8589
Vinsert
p47878
I42
VSimpleName: MySqlWallProvider
p47879
tp47880
I63
s(g26581
I42
g26582
Vinsert
p47881
I42
VSimpleName: acceptView
p47882
tp47883
I1
s(g700
I42
g701
Vinsert
p47884
I21
VExpressionStatement
p47885
tp47886
I1
s(Vinsert
p47887
I42
VSimpleName: assertTrue
p47888
Vinsert
p47889
I42
VSimpleName: MySqlWallTest14
p47890
tp47891
I1
s(g1675
I42
g1676
Vinsert
p47892
I42
VSimpleName: i
p47893
tp47894
I3
s(g6323
I42
g6324
Vinsert
p47895
I42
VSimpleName: OracleUtils
p47896
tp47897
I1
s(g17915
I42
g17916
Vinsert
p47898
I43
VSimpleType: MySqlBooleanExpr
p47899
tp47900
I2
s(g13311
I42
g13312
Vinsert
p47901
I45
VStringLiteral: "\u005cn\u005ct\u005ctCONSTRAINT fk_pno REFERENCES oe.product_information (product_id),"
p47902
tp47903
I2
s(g19640
I42
g19641
Vinsert
p47904
I45
VStringLiteral: "3"
p47905
tp47906
I1
s(g15495
I42
g15496
Vinsert
p47907
I32
VMethodInvocation
p47908
tp47909
I4
s(g13957
I42
g13958
Vinsert
p47910
I43
VSimpleType: Map.Entry
p47911
tp47912
I5
s(g28880
I42
g28881
Vinsert
p47913
I42
VSimpleName: aliasMap
p47914
tp47915
I1
s(g4849
I42
g4850
Vinsert
p47916
I39
VPrimitiveType: int
p47917
tp47918
I1
s(g18445
I42
g18446
Vinsert
p47919
I22
VFieldAccess
p47920
tp47921
I1
s(g12419
I42
g12420
Vinsert
p47922
I42
VSimpleName: setWithinGroup
p47923
tp47924
I1
s(g17507
I42
g17508
Vinsert
p47925
I42
VSimpleName: x
p47926
tp47927
I2
s(g2722
I42
g2723
Vinsert
p47928
I52
VThisExpression
p47929
tp47930
I1
s(Vinsert
p47931
I42
VSimpleName: parseStatementList
p47932
Vinsert
p47933
I43
VSimpleType: MySqlShowProcedureStatusStatement
p47934
tp47935
I2
s(g8365
I42
g8366
Vinsert
p47936
I43
VSimpleType: Throwable
p47937
tp47938
I1
s(g19139
I42
g19140
Vinsert
p47939
I43
VSimpleType: WallSqlStat
p47940
tp47941
I1
s(g12505
I42
g12506
Vinsert
p47942
I43
VSimpleType: JdbcDataSourceStat
p47943
tp47944
I2
s(g10124
I42
g10125
Vinsert
p47945
I42
VSimpleName: rs
p47946
tp47947
I2
s(g13228
I42
g13229
Vinsert
p47948
I42
VSimpleName: buf
p47949
tp47950
I4
s(g4679
I42
g4680
Vinsert
p47951
I42
VSimpleName: setMaxWait
p47952
tp47953
I1
s(g37280
I42
g37281
Vinsert
p47954
I43
VSimpleType: Map
p47955
tp47956
I1
s(Vinsert
p47957
I42
VSimpleName: incrementAndGet
p47958
Vinsert
p47959
I42
VSimpleName: delta
p47960
tp47961
I2
s(g1155
I42
g1156
Vinsert
p47962
I42
VSimpleName: x
p47963
tp47964
I1
s(g9727
I42
g9728
Vinsert
p47965
I21
VExpressionStatement
p47966
tp47967
I2
s(g38956
I42
g38957
Vinsert
p47968
I42
VSimpleName: getAttribute
p47969
tp47970
I1
s(g23761
I42
g23762
Vinsert
p47971
I32
VMethodInvocation
p47972
tp47973
I1
s(Vinsert
p47974
I42
VSimpleName: format
p47975
Vinsert
p47976
I42
VSimpleName: text
p47977
tp47978
I1
s(g29966
I42
g29967
Vinsert
p47979
I36
VParenthesizedExpression
p47980
tp47981
I2
s(g5118
I42
g5119
Vinsert
p47982
I83
VModifier: public
p47983
tp47984
I1
s(g11325
I42
g11326
Vinsert
p47985
I83
VModifier: static
p47986
tp47987
I1
s(g3528
I42
g3529
Vinsert
p47988
I43
VSimpleType: SQLName
p47989
tp47990
I2
s(g1218
I42
g1219
Vinsert
p47991
I44
VSingleVariableDeclaration
p47992
tp47993
I1
s(g18852
I42
g18853
Vinsert
p47994
I42
VSimpleName: getCause
p47995
tp47996
I1
s(g30229
I42
g30230
Vinsert
p47997
I59
VVariableDeclarationFragment
p47998
tp47999
I1
s(g366
I42
g367
Vinsert
p48000
I42
VSimpleName: addr
p48001
tp48002
I3
s(g22636
I42
g22637
Vinsert
p48003
I60
VVariableDeclarationStatement
p48004
tp48005
I7
s(g8277
I42
g8278
Vinsert
p48006
I60
VVariableDeclarationStatement
p48007
tp48008
I5
s(g26409
I42
g26410
Vinsert
p48009
I45
VStringLiteral: "\u005cnb.total_price"
p48010
tp48011
I1
s(g32628
I42
g32629
Vinsert
p48012
I42
VSimpleName: toFormalString
p48013
tp48014
I1
s(g12227
I42
g12228
Vinsert
p48015
I42
VSimpleName: assertEquals
p48016
tp48017
I2
s(g3714
I42
g3715
Vinsert
p48018
I45
VStringLiteral: "STORAGE"
p48019
tp48020
I1
s(g2054
I42
g2055
Vinsert
p48021
I21
VExpressionStatement
p48022
tp48023
I3
s(g15456
I42
g15457
Vinsert
p48024
I40
VQualifiedName: JdbcConstants.KINGBASE_DRIVER
p48025
tp48026
I1
s(g10604
I42
g10605
Vinsert
p48027
I42
VSimpleName: visitor
p48028
tp48029
I6
s(g96
I42
g97
Vinsert
p48030
I42
VSimpleName: PGAnalytic
p48031
tp48032
I1
s(g3613
I42
g3614
Vinsert
p48033
I42
VSimpleName: PROP_FILTERS
p48034
tp48035
I2
s(g17956
I42
g17957
Vinsert
p48036
I42
VSimpleName: setTestWhileIdle
p48037
tp48038
I1
s(g4035
I42
g4036
Vinsert
p48039
I45
VStringLiteral: "jdbc:mock:xxx"
p48040
tp48041
I1
s(g6699
I42
g6700
Vinsert
p48042
I42
VSimpleName: config
p48043
tp48044
I4
s(g14640
I42
g14641
Vinsert
p48045
I32
VMethodInvocation
p48046
tp48047
I1
s(g4093
I42
g4094
Vinsert
p48048
I42
VSimpleName: assertEquals
p48049
tp48050
I2
s(g16525
I42
g16526
Vinsert
p48051
I8
VBlock
p48052
tp48053
I3
s(g1047
I42
g1048
Vinsert
p48054
I31
VMethodDeclaration
p48055
tp48056
I1
s(g6375
I42
g6376
Vinsert
p48057
I59
VVariableDeclarationFragment
p48058
tp48059
I1
s(g2281
I42
g2282
Vinsert
p48060
I70
VEnhancedForStatement
p48061
tp48062
I1
s(g5931
I42
g5932
Vinsert
p48063
I8
VBlock
p48064
tp48065
I1
s(g5734
I42
g5735
Vinsert
p48066
I60
VVariableDeclarationStatement
p48067
tp48068
I2
s(g12985
I42
g12986
Vinsert
p48069
I42
VSimpleName: Exception
p48070
tp48071
I2
s(g19565
I42
g19566
Vinsert
p48072
I45
VStringLiteral: "\u005ct`c_mediumtext` mediumtext COMMENT 'mediumtext',\u005cn"
p48073
tp48074
I3
s(g2183
I42
g2184
Vinsert
p48075
I42
VSimpleName: out
p48076
tp48077
I1
s(g25422
I42
g25423
Vinsert
p48078
I27
VInfixExpression: ==
p48079
tp48080
I1
s(g1845
I42
g1846
Vinsert
p48081
I45
VStringLiteral: "\u005ctSELECT ECC.GAPM_PROJECT_INFO_SYNC_IOA_S.Nextval\u005cn"
p48082
tp48083
I1
s(Vinsert
p48084
I42
VSimpleName: toSQLString
p48085
Vinsert
p48086
I45
VStringLiteral: "\u005cnSTORAGE ( INITIAL 65536 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)"
p48087
tp48088
I1
s(g10082
I42
g10083
Vinsert
p48089
I8
VBlock
p48090
tp48091
I1
s(g3780
I42
g3781
Vinsert
p48092
I42
VSimpleName: jdbcTemplate
p48093
tp48094
I1
s(g14279
I42
g14280
Vinsert
p48095
I45
VStringLiteral: "WHERE object_id = a.row_wait_obj#"
p48096
tp48097
I1
s(g1481
I42
g1482
Vinsert
p48098
I60
VVariableDeclarationStatement
p48099
tp48100
I1
s(Vinsert
p48101
I42
VSimpleName: assertEquals
p48102
Vinsert
p48103
I38
VPrefixExpression: -
p48104
tp48105
I1
s(g27454
I42
g27455
Vinsert
p48106
I45
VStringLiteral: "update t SET fname = 'xx' where FID = ?"
p48107
tp48108
I1
s(g9595
I42
g9596
Vinsert
p48109
I32
VMethodInvocation
p48110
tp48111
I2
s(g36179
I42
g36180
Vinsert
p48112
I42
VSimpleName: endVisit
p48113
tp48114
I4
s(g29627
I42
g29628
Vinsert
p48115
I42
VSimpleName: right
p48116
tp48117
I1
s(g8593
I42
g8594
Vinsert
p48118
I42
VSimpleName: objectName
p48119
tp48120
I1
s(g18078
I42
g18079
Vinsert
p48121
I45
VStringLiteral: "CREATE TRIGGER AUTH.TRG_HR_STRUCTURE_AFTINST\u005cn"
p48122
tp48123
I1
s(g3103
I42
g3104
Vinsert
p48124
I42
VSimpleName: ResultSet
p48125
tp48126
I4
s(g20240
I42
g20241
Vinsert
p48127
I83
VModifier: final
p48128
tp48129
I1
s(g14754
I42
g14755
Vinsert
p48130
I43
VSimpleType: Exception
p48131
tp48132
I1
s(g2489
I42
g2490
Vinsert
p48133
I31
VMethodDeclaration
p48134
tp48135
I1
s(g4222
I42
g4223
Vinsert
p48136
I42
VSimpleName: DruidDataSourceFactory
p48137
tp48138
I1
s(g8166
I42
g8167
Vinsert
p48139
I42
VSimpleName: hashCodes
p48140
tp48141
I1
s(g497
I42
g498
Vinsert
p48142
I42
VSimpleName: Exception
p48143
tp48144
I1
s(g532
I42
g533
Vinsert
p48145
I42
VSimpleName: printExpr
p48146
tp48147
I1
s(g1815
I42
g1816
Vinsert
p48148
I42
VSimpleName: print0
p48149
tp48150
I2
s(g19618
I42
g19619
Vinsert
p48151
I42
VSimpleName: stat
p48152
tp48153
I1
s(g30105
I42
g30106
Vinsert
p48154
I43
VSimpleType: JdbcDataSourceStat
p48155
tp48156
I1
s(g2258
I42
g2259
Vinsert
p48157
I42
VSimpleName: WallSqlStat
p48158
tp48159
I4
s(g9773
I42
g9774
Vinsert
p48160
I43
VSimpleType: SQLReplaceStatement
p48161
tp48162
I1
s(g9652
I42
g9653
Vinsert
p48163
I27
VInfixExpression: !=
p48164
tp48165
I1
s(g25751
I42
g25752
Vinsert
p48166
I42
VSimpleName: inited
p48167
tp48168
I1
s(g32833
I42
g32834
Vinsert
p48169
I42
VSimpleName: print
p48170
tp48171
I1
s(g24206
I42
g24207
Vinsert
p48172
I45
VStringLiteral: "\u005ctPARTITION PART03\u005cn"
p48173
tp48174
I1
s(g15697
I42
g15698
Vinsert
p48175
I42
VSimpleName: map
p48176
tp48177
I2
s(Vinsert
p48178
I42
VSimpleName: equals
p48179
Vinsert
p48180
I40
VQualifiedName: JdbcUtils.DB2
p48181
tp48182
I5
s(g1309
I42
g1310
Vinsert
p48183
I42
VSimpleName: visitor
p48184
tp48185
I1
s(g9704
I42
g9705
Vinsert
p48186
I42
VSimpleName: Component
p48187
tp48188
I1
s(g2697
I42
g2698
Vinsert
p48189
I9
VBooleanLiteral: false
p48190
tp48191
I3
s(g35785
I42
g35786
Vinsert
p48192
I42
VSimpleName: getProperty
p48193
tp48194
I1
s(g7960
I42
g7961
Vinsert
p48195
I42
VSimpleName: columnNames
p48196
tp48197
I1
s(g21643
I42
g21644
Vinsert
p48198
I44
VSingleVariableDeclaration
p48199
tp48200
I6
s(Vinsert
p48201
I42
VSimpleName: isInstance
p48202
Vinsert
p48203
I22
VFieldAccess
p48204
tp48205
I1
s(g748
I42
g749
Vinsert
p48206
I42
VSimpleName: resultSet
p48207
tp48208
I2
s(g22469
I42
g22470
Vinsert
p48209
I43
VSimpleType: SQLException
p48210
tp48211
I3
s(g13685
I42
g13686
Vinsert
p48212
I85
VDimension
p48213
tp48214
I1
s(g6630
I42
g6631
Vinsert
p48215
I14
VClassInstanceCreation
p48216
tp48217
I5
s(g23689
I42
g23690
Vinsert
p48218
I42
VSimpleName: target
p48219
tp48220
I1
s(g11484
I42
g11485
Vinsert
p48221
I43
VSimpleType: SQLName
p48222
tp48223
I4
s(g15359
I42
g15360
Vinsert
p48224
I42
VSimpleName: dataSource
p48225
tp48226
I2
s(g21458
I42
g21459
Vinsert
p48227
I43
VSimpleType: Object
p48228
tp48229
I1
s(g12930
I42
g12931
Vinsert
p48230
I42
VSimpleName: selectQuery
p48231
tp48232
I1
s(g16294
I42
g16295
Vinsert
p48233
I42
VSimpleName: SQLTableSource
p48234
tp48235
I3
s(g12222
I42
g12223
Vinsert
p48236
I25
VIfStatement
p48237
tp48238
I1
s(g46471
I42
g46472
Vinsert
p48239
I42
VSimpleName: ValuesClause
p48240
tp48241
I1
s(g5123
I42
g5124
Vinsert
p48242
I32
VMethodInvocation
p48243
tp48244
I1
s(g4956
I42
g4957
Vinsert
p48245
I42
VSimpleName: OracleExtractExpr
p48246
tp48247
I1
s(g3689
I42
g3690
Vinsert
p48248
I22
VFieldAccess
p48249
tp48250
I1
s(g13973
I42
g13974
Vinsert
p48251
I42
VSimpleName: DecrypterFactory
p48252
tp48253
I2
s(g12911
I42
g12912
Vinsert
p48254
I42
VSimpleName: dataSource
p48255
tp48256
I2
s(g1996
I42
g1997
Vinsert
p48257
I42
VSimpleName: print0
p48258
tp48259
I1
s(g5954
I42
g5955
Vinsert
p48260
I42
VSimpleName: engine
p48261
tp48262
I3
s(g1415
I42
g1416
Vinsert
p48263
I32
VMethodInvocation
p48264
tp48265
I3
s(g35379
I42
g35380
Vinsert
p48266
I43
VSimpleType: Log
p48267
tp48268
I2
s(g8399
I42
g8400
Vinsert
p48269
I21
VExpressionStatement
p48270
tp48271
I1
s(g8038
I42
g8039
Vinsert
p48272
I44
VSingleVariableDeclaration
p48273
tp48274
I2
s(g9873
I42
g9874
Vinsert
p48275
I43
VSimpleType: ResultSet
p48276
tp48277
I2
s(g24379
I42
g24380
Vinsert
p48278
I40
VQualifiedName: x.sqlSecurity
p48279
tp48280
I1
s(g9854
I42
g9855
Vinsert
p48281
I42
VSimpleName: x
p48282
tp48283
I1
s(g23250
I42
g23251
Vinsert
p48284
I45
VStringLiteral: "DROP SEQUENCE "
p48285
tp48286
I2
s(Vinsert
p48287
I42
VSimpleName: assertEquals
p48288
Vinsert
p48289
I42
VSimpleName: MySqlSchemaStatVisitor
p48290
tp48291
I20
s(g13745
I42
g13746
Vinsert
p48292
I42
VSimpleName: partitions
p48293
tp48294
I1
s(Vinsert
p48295
I42
VSimpleName: setValue
p48296
Vinsert
p48297
I43
VSimpleType: PGBoxExpr
p48298
tp48299
I2
s(g251
I42
g252
Vinsert
p48300
I59
VVariableDeclarationFragment
p48301
tp48302
I1
s(g21643
I42
g21644
Vinsert
p48303
I42
VSimpleName: x
p48304
tp48305
I14
s(g8687
I42
g8688
Vinsert
p48306
I43
VSimpleType: Dao
p48307
tp48308
I1
s(g3875
I42
g3876
Vinsert
p48309
I27
VInfixExpression: ==
p48310
tp48311
I3
s(g14452
I42
g14453
Vinsert
p48312
I42
VSimpleName: String
p48313
tp48314
I14
s(g9235
I42
g9236
Vinsert
p48315
I42
VSimpleName: put
p48316
tp48317
I2
s(g1231
I42
g1232
Vinsert
p48318
I42
VSimpleName: close
p48319
tp48320
I1
s(g10655
I42
g10656
Vinsert
p48321
I42
VSimpleName: lowWater
p48322
tp48323
I1
s(g662
I42
g663
Vinsert
p48324
I42
VSimpleName: Assert
p48325
tp48326
I2
s(g5903
I42
g5904
Vinsert
p48327
I42
VSimpleName: ucase
p48328
tp48329
I1
s(g32847
I42
g32848
Vinsert
p48330
I83
VModifier: public
p48331
tp48332
I35
s(g3893
I42
g3894
Vinsert
p48333
I40
VQualifiedName: x.quick
p48334
tp48335
I1
s(Vinsert
p48336
I42
VSimpleName: nextToken
p48337
Vinsert
p48338
I45
VStringLiteral: "FIRST"
p48339
tp48340
I1
s(g23534
I42
g23535
Vinsert
p48341
I43
VSimpleType: Exception
p48342
tp48343
I10
s(g30418
I42
g30419
Vinsert
p48344
I43
VSimpleType: SQLException
p48345
tp48346
I1
s(g8269
I42
g8270
Vinsert
p48347
I42
VSimpleName: fromIndex
p48348
tp48349
I1
s(g1284
I42
g1285
Vinsert
p48350
I42
VSimpleName: x
p48351
tp48352
I4
s(Vinsert
p48353
I42
VSimpleName: toLowerCase
p48354
Vinsert
p48355
I42
VSimpleName: key
p48356
tp48357
I2
s(g2624
I42
g2625
Vinsert
p48358
I25
VIfStatement
p48359
tp48360
I3
s(g1690
I42
g1691
Vinsert
p48361
I42
VSimpleName: lexer
p48362
tp48363
I1
s(g5305
I42
g5306
Vinsert
p48364
I25
VIfStatement
p48365
tp48366
I3
s(g8924
I42
g8925
Vinsert
p48367
I42
VSimpleName: scheduler
p48368
tp48369
I1
s(g8103
I42
g8104
Vinsert
p48370
I43
VSimpleType: K
p48371
tp48372
I1
s(g34496
I42
g34497
Vinsert
p48373
I21
VExpressionStatement
p48374
tp48375
I2
s(g13690
I42
g13691
Vinsert
p48376
I42
VSimpleName: idleList
p48377
tp48378
I1
s(g11732
I42
g11733
Vinsert
p48379
I8
VBlock
p48380
tp48381
I1
s(g4490
I42
g4491
Vinsert
p48382
I11
VCastExpression
p48383
tp48384
I4
s(g15594
I42
g15595
Vinsert
p48385
I25
VIfStatement
p48386
tp48387
I1
s(g7720
I42
g7721
Vinsert
p48388
I44
VSingleVariableDeclaration
p48389
tp48390
I3
s(g4890
I42
g4891
Vinsert
p48391
I42
VSimpleName: chain
p48392
tp48393
I1
s(g71
I42
g72
Vinsert
p48394
I32
VMethodInvocation
p48395
tp48396
I1
s(g20306
I42
g20307
Vinsert
p48397
I70
VEnhancedForStatement
p48398
tp48399
I1
s(g6084
I42
g6085
Vinsert
p48400
I42
VSimpleName: getWebAppStatSet
p48401
tp48402
I1
s(g19115
I42
g19116
Vinsert
p48403
I42
VSimpleName: SQLBinaryOpExpr
p48404
tp48405
I2
s(Vinsert
p48406
I42
VSimpleName: assertFalse
p48407
Vinsert
p48408
I45
VStringLiteral: "select 1, 2, 3 from t where id  = 7"
p48409
tp48410
I1
s(Vinsert
p48411
I42
VSimpleName: setOrderBy
p48412
Vinsert
p48413
I83
VModifier: public
p48414
tp48415
I2
s(g14348
I42
g14349
Vinsert
p48416
I39
VPrimitiveType: void
p48417
tp48418
I1
s(g27407
I42
g27408
Vinsert
p48419
I42
VSimpleName: getLeft
p48420
tp48421
I3
s(g3770
I42
g3771
Vinsert
p48422
I43
VSimpleType: Byte
p48423
tp48424
I2
s(g5974
I42
g5975
Vinsert
p48425
I43
VSimpleType: SQLException
p48426
tp48427
I1
s(g18606
I42
g18607
Vinsert
p48428
I43
VSimpleType: SQLAssignItem
p48429
tp48430
I1
s(g33739
I42
g33740
Vinsert
p48431
I8
VBlock
p48432
tp48433
I1
s(g5184
I42
g5185
Vinsert
p48434
I42
VSimpleName: OracleWallProvider
p48435
tp48436
I4
s(g16479
I42
g16480
Vinsert
p48437
I42
VSimpleName: engine
p48438
tp48439
I2
s(g31203
I42
g31204
Vinsert
p48440
I42
VSimpleName: getAliveMillisMax
p48441
tp48442
I1
s(Vinsert
p48443
I42
VSimpleName: visit
p48444
Vinsert
p48445
I42
VSimpleName: refObject
p48446
tp48447
I2
s(g6333
I42
g6334
Vinsert
p48448
I45
VStringLiteral: "ORGANIZATION "
p48449
tp48450
I1
s(g32107
I42
g32108
Vinsert
p48451
I42
VSimpleName: String
p48452
tp48453
I1
s(g3282
I42
g3283
Vinsert
p48454
I32
VMethodInvocation
p48455
tp48456
I3
s(g25125
I42
g25126
Vinsert
p48457
I59
VVariableDeclarationFragment
p48458
tp48459
I3
s(g9639
I42
g9640
Vinsert
p48460
I45
VStringLiteral: "EXCEPTION\u005cn"
p48461
tp48462
I1
s(g5941
I42
g5942
Vinsert
p48463
I42
VSimpleName: o
p48464
tp48465
I1
s(g31224
I42
g31225
Vinsert
p48466
I42
VSimpleName: Object
p48467
tp48468
I2
s(g11187
I42
g11188
Vinsert
p48469
I21
VExpressionStatement
p48470
tp48471
I2
s(g40052
I42
g40053
Vinsert
p48472
I43
VSimpleType: SQLIdentifierExpr
p48473
tp48474
I1
s(g29367
I42
g29368
Vinsert
p48475
I45
VStringLiteral: "\u005cn\u005ct)"
p48476
tp48477
I4
s(g13066
I42
g13067
Vinsert
p48478
I42
VSimpleName: accept
p48479
tp48480
I1
s(g6503
I42
g6504
Vinsert
p48481
I49
VSwitchCase
p48482
tp48483
I2
s(g22115
I42
g22116
Vinsert
p48484
I32
VMethodInvocation
p48485
tp48486
I3
s(g11453
I42
g11454
Vinsert
p48487
I42
VSimpleName: accept
p48488
tp48489
I7
s(g17785
I42
g17786
Vinsert
p48490
I45
VStringLiteral: "LOGGING"
p48491
tp48492
I1
s(g2977
I42
g2978
Vinsert
p48493
I45
VStringLiteral: "WHERE gd_id = gdid"
p48494
tp48495
I1
s(g20928
I42
g20929
Vinsert
p48496
I42
VSimpleName: inTransactionCountUpdater
p48497
tp48498
I1
s(g3544
I42
g3545
Vinsert
p48499
I45
VStringLiteral: ") tt\u005cn"
p48500
tp48501
I1
s(Vinsert
p48502
I42
VSimpleName: setParent
p48503
Vinsert
p48504
I42
VSimpleName: setRedoBufferSize
p48505
tp48506
I1
s(g11187
I42
g11188
Vinsert
p48507
I42
VSimpleName: JdbcSqlStat
p48508
tp48509
I2
s(g8098
I42
g8099
Vinsert
p48510
I43
VSimpleType: String
p48511
tp48512
I1
s(Vinsert
p48513
I42
VSimpleName: size
p48514
Vinsert
p48515
I42
VSimpleName: stringVal
p48516
tp48517
I1
s(Vinsert
p48518
I42
VSimpleName: visit
p48519
Vinsert
p48520
I43
VSimpleType: DB2ASTVisitor
p48521
tp48522
I2
s(g12173
I42
g12174
Vinsert
p48523
I42
VSimpleName: errorCode
p48524
tp48525
I3
s(Vinsert
p48526
I42
VSimpleName: format
p48527
Vinsert
p48528
I42
VSimpleName: result
p48529
tp48530
I1
s(Vinsert
p48531
I42
VSimpleName: add
p48532
Vinsert
p48533
I42
VSimpleName: statement
p48534
tp48535
I1
s(g2961
I42
g2962
Vinsert
p48536
I42
VSimpleName: error
p48537
tp48538
I1
s(g6712
I42
g6713
Vinsert
p48539
I42
VSimpleName: where
p48540
tp48541
I2
s(g6396
I42
g6397
Vinsert
p48542
I42
VSimpleName: publicKey
p48543
tp48544
I1
s(g24062
I42
g24063
Vinsert
p48545
I45
VStringLiteral: "\u005ct\u005ctCOMPUTE STATISTICS\u005cn"
p48546
tp48547
I1
s(g2439
I42
g2440
Vinsert
p48548
I42
VSimpleName: Override
p48549
tp48550
I1
s(g25652
I42
g25653
Vinsert
p48551
I42
VSimpleName: line0
p48552
tp48553
I1
s(g4903
I42
g4904
Vinsert
p48554
I27
VInfixExpression: !=
p48555
tp48556
I1
s(g2520
I42
g2521
Vinsert
p48557
I43
VSimpleType: SQLServerASTVisitor
p48558
tp48559
I11
s(g13823
I42
g13824
Vinsert
p48560
I42
VSimpleName: parser
p48561
tp48562
I497
s(g3350
I42
g3351
Vinsert
p48563
I42
VSimpleName: setDataDirectory
p48564
tp48565
I1
s(Vinsert
p48566
I42
VSimpleName: assertEquals
p48567
Vinsert
p48568
I42
VSimpleName: toStatementList
p48569
tp48570
I1
s(g2044
I42
g2045
Vinsert
p48571
I7
VAssignment: =
p48572
tp48573
I1
s(g20364
I42
g20365
Vinsert
p48574
I42
VSimpleName: providerB
p48575
tp48576
I1
s(g20529
I42
g20530
Vinsert
p48577
I27
VInfixExpression: !=
p48578
tp48579
I1
s(g8833
I42
g8834
Vinsert
p48580
I27
VInfixExpression: >>
p48581
tp48582
I1
s(g763
I42
g764
Vinsert
p48583
I42
VSimpleName: accept
p48584
tp48585
I2
s(g5744
I42
g5745
Vinsert
p48586
I43
VSimpleType: SQLMethodInvokeExpr
p48587
tp48588
I6
s(g5974
I42
g5975
Vinsert
p48589
I59
VVariableDeclarationFragment
p48590
tp48591
I1
s(g21424
I42
g21425
Vinsert
p48592
I27
VInfixExpression: ==
p48593
tp48594
I1
s(g14834
I42
g14835
Vinsert
p48595
I32
VMethodInvocation
p48596
tp48597
I3
s(g32202
I42
g32203
Vinsert
p48598
I45
VStringLiteral: "FROM public.v_poi\u005cn"
p48599
tp48600
I1
s(g14909
I42
g14910
Vinsert
p48601
I42
VSimpleName: setMinExtents
p48602
tp48603
I1
s(g18224
I42
g18225
Vinsert
p48604
I31
VMethodDeclaration
p48605
tp48606
I1
s(g10422
I42
g10423
Vinsert
p48607
I42
VSimpleName: Exception
p48608
tp48609
I2
s(g18270
I42
g18271
Vinsert
p48610
I42
VSimpleName: accept
p48611
tp48612
I1
s(Vinsert
p48613
I42
VSimpleName: assertEquals
p48614
Vinsert
p48615
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION s2,"
p48616
tp48617
I1
s(Vinsert
p48618
I42
VSimpleName: put
p48619
Vinsert
p48620
I40
VQualifiedName: Token.INSERT
p48621
tp48622
I3
s(g226
I42
g227
Vinsert
p48623
I41
VReturnStatement
p48624
tp48625
I3
s(g6470
I42
g6471
Vinsert
p48626
I42
VSimpleName: MAPPING_PROPERTY
p48627
tp48628
I2
s(g1180
I42
g1181
Vinsert
p48629
I43
VSimpleType: IUserDao
p48630
tp48631
I2
s(g886
I42
g887
Vinsert
p48632
I43
VSimpleType: String
p48633
tp48634
I2
s(g11601
I42
g11602
Vinsert
p48635
I32
VMethodInvocation
p48636
tp48637
I2
s(g11634
I42
g11635
Vinsert
p48638
I45
VStringLiteral: "select 1"
p48639
tp48640
I1
s(g381
I42
g382
Vinsert
p48641
I25
VIfStatement
p48642
tp48643
I1
s(g28278
I42
g28279
Vinsert
p48644
I42
VSimpleName: nextToken
p48645
tp48646
I3
s(g9696
I42
g9697
Vinsert
p48647
I57
VTypeLiteral
p48648
tp48649
I1
s(g21809
I42
g21810
Vinsert
p48650
I42
VSimpleName: dataSourceStat
p48651
tp48652
I2
s(g3297
I42
g3298
Vinsert
p48653
I41
VReturnStatement
p48654
tp48655
I4
s(g9089
I42
g9090
Vinsert
p48656
I42
VSimpleName: JdbcUtils
p48657
tp48658
I6
s(g6539
I42
g6540
Vinsert
p48659
I45
VStringLiteral: "\u005cn\u005ctlast_name VARCHAR2(10),"
p48660
tp48661
I6
s(g11231
I42
g11232
Vinsert
p48662
I45
VStringLiteral: ":"
p48663
tp48664
I1
s(g997
I42
g998
Vinsert
p48665
I32
VMethodInvocation
p48666
tp48667
I1
s(g13071
I42
g13072
Vinsert
p48668
I42
VSimpleName: LOG
p48669
tp48670
I3
s(g4770
I42
g4771
Vinsert
p48671
I42
VSimpleName: from
p48672
tp48673
I1
s(g42627
I42
g42628
Vinsert
p48674
I43
VSimpleType: JdbcSqlStat
p48675
tp48676
I1
s(g2647
I42
g2648
Vinsert
p48677
I43
VSimpleType: Exception
p48678
tp48679
I2
s(g16375
I42
g16376
Vinsert
p48680
I42
VSimpleName: print
p48681
tp48682
I1
s(g9595
I42
g9596
Vinsert
p48683
I8
VBlock
p48684
tp48685
I2
s(g6597
I42
g6598
Vinsert
p48686
I43
VSimpleType: File
p48687
tp48688
I3
s(g18065
I42
g18066
Vinsert
p48689
I42
VSimpleName: setParameterizedMergeInList
p48690
tp48691
I1
s(g40662
I42
g40663
Vinsert
p48692
I45
VStringLiteral: "PARTITION"
p48693
tp48694
I1
s(g2213
I42
g2214
Vinsert
p48695
I52
VThisExpression
p48696
tp48697
I1
s(Vinsert
p48698
I42
VSimpleName: getClass
p48699
Vinsert
p48700
I42
VSimpleName: aI
p48701
tp48702
I1
s(g10765
I42
g10766
Vinsert
p48703
I42
VSimpleName: parseTableSource
p48704
tp48705
I1
s(g4303
I42
g4304
Vinsert
p48706
I45
VStringLiteral: "\u005ct\u005ct\u005ctself.currentstr := ctx2.currentstr;\u005cn"
p48707
tp48708
I1
s(g28764
I42
g28765
Vinsert
p48709
I42
VSimpleName: log
p48710
tp48711
I1
s(g23313
I42
g23314
Vinsert
p48712
I45
VStringLiteral: "\u005ct\u005ctTABLESPACE \u005c"USERS\u005c"\u005cn"
p48713
tp48714
I1
s(g25001
I42
g25002
Vinsert
p48715
I42
VSimpleName: oracleConn
p48716
tp48717
I1
s(g16335
I42
g16336
Vinsert
p48718
I21
VExpressionStatement
p48719
tp48720
I1
s(g34449
I42
g34450
Vinsert
p48721
I42
VSimpleName: MockPreparedStatement
p48722
tp48723
I2
s(g9380
I42
g9381
Vinsert
p48724
I44
VSingleVariableDeclaration
p48725
tp48726
I1
s(g3472
I42
g3473
Vinsert
p48727
I8
VBlock
p48728
tp48729
I1
s(Vinsert
p48730
I42
VSimpleName: put
p48731
Vinsert
p48732
I40
VQualifiedName: javax.management.openmbean.CompositeDataSupport
p48733
tp48734
I1
s(g36992
I42
g36993
Vinsert
p48735
I32
VMethodInvocation
p48736
tp48737
I5
s(g587
I42
g588
Vinsert
p48738
I45
VStringLiteral: "from dual "
p48739
tp48740
I1
s(g15029
I42
g15030
Vinsert
p48741
I11
VCastExpression
p48742
tp48743
I1
s(g9652
I42
g9653
Vinsert
p48744
I42
VSimpleName: addUrlPatterns
p48745
tp48746
I1
s(g8661
I42
g8662
Vinsert
p48747
I40
VQualifiedName: Token.MATCHED
p48748
tp48749
I2
s(g2682
I42
g2683
Vinsert
p48750
I42
VSimpleName: item
p48751
tp48752
I8
s(g7404
I42
g7405
Vinsert
p48753
I42
VSimpleName: param2Value
p48754
tp48755
I1
s(g5719
I42
g5720
Vinsert
p48756
I42
VSimpleName: exportParameters
p48757
tp48758
I1
s(g10971
I42
g10972
Vinsert
p48759
I42
VSimpleName: closedPreparedStatementCount
p48760
tp48761
I1
s(g18796
I42
g18797
Vinsert
p48762
I42
VSimpleName: SQLExpr
p48763
tp48764
I1
s(g18044
I42
g18045
Vinsert
p48765
I42
VSimpleName: lexer
p48766
tp48767
I2
s(g10475
I42
g10476
Vinsert
p48768
I42
VSimpleName: remove
p48769
tp48770
I1
s(g4165
I42
g4166
Vinsert
p48771
I42
VSimpleName: seconds
p48772
tp48773
I1
s(Vinsert
p48774
I42
VSimpleName: assertEquals
p48775
Vinsert
p48776
I45
VStringLiteral: "stat"
p48777
tp48778
I1
s(g13321
I42
g13322
Vinsert
p48779
I45
VStringLiteral: "QUERY"
p48780
tp48781
I1
s(g1845
I42
g1846
Vinsert
p48782
I45
VStringLiteral: "\u005ctFOR EACH ROW\u005cn"
p48783
tp48784
I4
s(g14072
I42
g14073
Vinsert
p48785
I9
VBooleanLiteral: true
p48786
tp48787
I2
s(g14171
I42
g14172
Vinsert
p48788
I43
VSimpleType: MySqlShowCharacterSetStatement
p48789
tp48790
I2
s(g14933
I42
g14934
Vinsert
p48791
I11
VCastExpression
p48792
tp48793
I1
s(g16581
I42
g16582
Vinsert
p48794
I8
VBlock
p48795
tp48796
I1
s(g26526
I42
g26527
Vinsert
p48797
I42
VSimpleName: sql
p48798
tp48799
I17
s(g36541
I42
g36542
Vinsert
p48800
I45
VStringLiteral: "\u005cnlimit ? offset ?"
p48801
tp48802
I1
s(g43158
I42
g43159
Vinsert
p48803
I42
VSimpleName: insertStatement
p48804
tp48805
I1
s(g8929
I42
g8930
Vinsert
p48806
I52
VThisExpression
p48807
tp48808
I1
s(g11686
I42
g11687
Vinsert
p48809
I45
VStringLiteral: "\u005cn\u005ctweight_class NUMBER(1),"
p48810
tp48811
I2
s(g1080
I42
g1081
Vinsert
p48812
I45
VStringLiteral: "SELECT *\u005cn"
p48813
tp48814
I4
s(Vinsert
p48815
I42
VSimpleName: toSQLString
p48816
Vinsert
p48817
I45
VStringLiteral: "INSERT INTO employees@remote"
p48818
tp48819
I2
s(g16710
I42
g16711
Vinsert
p48820
I42
VSimpleName: QUES
p48821
tp48822
I2
s(g6480
I42
g6481
Vinsert
p48823
I27
VInfixExpression: &&
p48824
tp48825
I3
s(g38850
I42
g38851
Vinsert
p48826
I42
VSimpleName: addAndGet
p48827
tp48828
I2
s(g12639
I42
g12640
Vinsert
p48829
I45
VStringLiteral: "6iuxETwA5Pu2mwx3"
p48830
tp48831
I1
s(g1150
I42
g1151
Vinsert
p48832
I42
VSimpleName: String
p48833
tp48834
I1
s(g5272
I42
g5273
Vinsert
p48835
I40
VQualifiedName: com.alibaba.druid.sql.ast.statement.SQLSelect
p48836
tp48837
I1
s(g2213
I42
g2214
Vinsert
p48838
I27
VInfixExpression: ==
p48839
tp48840
I1
s(g22469
I42
g22470
Vinsert
p48841
I42
VSimpleName: sorter
p48842
tp48843
I8
s(g9914
I42
g9915
Vinsert
p48844
I34
VNumberLiteral: 30
p48845
tp48846
I1
s(g23793
I42
g23794
Vinsert
p48847
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION other VALUES (DEFAULT)"
p48848
tp48849
I2
s(g5633
I42
g5634
Vinsert
p48850
I42
VSimpleName: holdabilityUnsupported
p48851
tp48852
I3
s(g12090
I42
g12091
Vinsert
p48853
I39
VPrimitiveType: boolean
p48854
tp48855
I1
s(g13303
I42
g13304
Vinsert
p48856
I45
VStringLiteral: " INTO ("
p48857
tp48858
I1
s(g1700
I42
g1701
Vinsert
p48859
I32
VMethodInvocation
p48860
tp48861
I1
s(g10061
I42
g10062
Vinsert
p48862
I42
VSimpleName: dataSource
p48863
tp48864
I22
s(g881
I42
g882
Vinsert
p48865
I42
VSimpleName: getColumn
p48866
tp48867
I1
s(g31
I42
g32
Vinsert
p48868
I42
VSimpleName: getSubQuery
p48869
tp48870
I1
s(g12565
I42
g12566
Vinsert
p48871
I42
VSimpleName: PreparedStatement
p48872
tp48873
I5
s(g15407
I42
g15408
Vinsert
p48874
I8
VBlock
p48875
tp48876
I1
s(g16927
I42
g16928
Vinsert
p48877
I42
VSimpleName: User
p48878
tp48879
I2
s(g4334
I42
g4335
Vinsert
p48880
I42
VSimpleName: MAX_RETRY
p48881
tp48882
I1
s(g14160
I42
g14161
Vinsert
p48883
I42
VSimpleName: dataSource
p48884
tp48885
I2
s(g6465
I42
g6466
Vinsert
p48886
I40
VQualifiedName: x.subPartition
p48887
tp48888
I1
s(g171
I42
g172
Vinsert
p48889
I42
VSimpleName: accept
p48890
tp48891
I2
s(g7039
I42
g7040
Vinsert
p48892
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION ch_i,"
p48893
tp48894
I2
s(g10631
I42
g10632
Vinsert
p48895
I42
VSimpleName: createView
p48896
tp48897
I1
s(g46168
I42
g46169
Vinsert
p48898
I45
VStringLiteral: "org.h2.Driver"
p48899
tp48900
I1
s(g9438
I42
g9439
Vinsert
p48901
I42
VSimpleName: column
p48902
tp48903
I5
s(g18659
I42
g18660
Vinsert
p48904
I32
VMethodInvocation
p48905
tp48906
I4
s(g4080
I42
g4081
Vinsert
p48907
I49
VSwitchCase
p48908
tp48909
I1
s(g811
I42
g812
Vinsert
p48910
I45
VStringLiteral: "connectionHoldTimeHistogram"
p48911
tp48912
I1
s(g14951
I42
g14952
Vinsert
p48913
I42
VSimpleName: error
p48914
tp48915
I34
s(Vinsert
p48916
I42
VSimpleName: accept
p48917
Vinsert
p48918
I42
VSimpleName: index
p48919
tp48920
I1
s(g3806
I42
g3807
Vinsert
p48921
I21
VExpressionStatement
p48922
tp48923
I5
s(g15687
I42
g15688
Vinsert
p48924
I42
VSimpleName: rightColumn
p48925
tp48926
I2
s(g5744
I42
g5745
Vinsert
p48927
I42
VSimpleName: sql
p48928
tp48929
I12
s(g6587
I42
g6588
Vinsert
p48930
I43
VSimpleType: PGSetStatement
p48931
tp48932
I1
s(g1339
I42
g1340
Vinsert
p48933
I32
VMethodInvocation
p48934
tp48935
I30
s(g1385
I42
g1386
Vinsert
p48936
I42
VSimpleName: setTemporary
p48937
tp48938
I2
s(g18021
I42
g18022
Vinsert
p48939
I43
VSimpleType: OracleASTVisitor
p48940
tp48941
I1
s(g27708
I42
g27709
Vinsert
p48942
I43
VSimpleType: TestCase
p48943
tp48944
I1
s(g36900
I42
g36901
Vinsert
p48945
I45
VStringLiteral: "FROM "
p48946
tp48947
I1
s(g414
I42
g415
Vinsert
p48948
I62
VInstanceofExpression
p48949
tp48950
I1
s(g8391
I42
g8392
Vinsert
p48951
I21
VExpressionStatement
p48952
tp48953
I5
s(Vinsert
p48954
I42
VSimpleName: getFrom
p48955
Vinsert
p48956
I45
VStringLiteral: " FROM "
p48957
tp48958
I1
s(g17074
I42
g17075
Vinsert
p48959
I45
VStringLiteral: "\u005ctKEY `k_b` (`c_smallint`),\u005cn"
p48960
tp48961
I1
s(g35994
I42
g35995
Vinsert
p48962
I42
VSimpleName: with
p48963
tp48964
I9
s(g2188
I42
g2189
Vinsert
p48965
I42
VSimpleName: SQLDataType
p48966
tp48967
I1
s(g4313
I42
g4314
Vinsert
p48968
I32
VMethodInvocation
p48969
tp48970
I1
s(g19077
I42
g19078
Vinsert
p48971
I42
VSimpleName: ConnectionHolder
p48972
tp48973
I2
s(g17017
I42
g17018
Vinsert
p48974
I78
VMarkerAnnotation
p48975
tp48976
I1
s(g37490
I42
g37491
Vinsert
p48977
I45
VStringLiteral: "OFFSET"
p48978
tp48979
I1
s(g5394
I42
g5395
Vinsert
p48980
I42
VSimpleName: parseOrderBy
p48981
tp48982
I1
s(g9475
I42
g9476
Vinsert
p48983
I45
VStringLiteral: "\u005ctPCTINCREASE 0\u005cn"
p48984
tp48985
I2
s(g15828
I42
g15829
Vinsert
p48986
I8
VBlock
p48987
tp48988
I9
s(g46168
I42
g46169
Vinsert
p48989
I45
VStringLiteral: "jdbc:h2:"
p48990
tp48991
I1
s(g33656
I42
g33657
Vinsert
p48992
I42
VSimpleName: IllegalArgumentException
p48993
tp48994
I22
s(g2243
I42
g2244
Vinsert
p48995
I52
VThisExpression
p48996
tp48997
I2
s(g13326
I42
g13327
Vinsert
p48998
I43
VSimpleType: SQLInsertStatement
p48999
tp49000
I2
s(g37138
I42
g37139
Vinsert
p49001
I42
VSimpleName: lengthData
p49002
tp49003
I2
s(g1339
I42
g1340
Vinsert
p49004
I42
VSimpleName: StringBuffer
p49005
tp49006
I24
s(g141
I42
g142
Vinsert
p49007
I21
VExpressionStatement
p49008
tp49009
I51
s(g33433
I42
g33434
Vinsert
p49010
I43
VSimpleType: SQLDropDatabaseStatement
p49011
tp49012
I1
s(g13071
I42
g13072
Vinsert
p49013
I42
VSimpleName: getConnectionProxy
p49014
tp49015
I1
s(Vinsert
p49016
I42
VSimpleName: size
p49017
Vinsert
p49018
I42
VSimpleName: statemen
p49019
tp49020
I15
s(g587
I42
g588
Vinsert
p49021
I45
VStringLiteral: "(WEB_USER_ID,NAME,COUNTRY,PROVINCE,CITY"
p49022
tp49023
I1
s(Vinsert
p49024
I42
VSimpleName: append
p49025
Vinsert
p49026
I43
VSimpleType: Date
p49027
tp49028
I1
s(g8937
I42
g8938
Vinsert
p49029
I45
VStringLiteral: "id = 3"
p49030
tp49031
I1
s(g19984
I42
g19985
Vinsert
p49032
I8
VBlock
p49033
tp49034
I1
s(g30913
I42
g30914
Vinsert
p49035
I45
VStringLiteral: "\u005cn\u005ctdiv_name VARCHAR2(9)"
p49036
tp49037
I2
s(g26789
I42
g26790
Vinsert
p49038
I42
VSimpleName: parseStatementList
p49039
tp49040
I64
s(g26521
I42
g26522
Vinsert
p49041
I42
VSimpleName: keyStr
p49042
tp49043
I2
s(g15407
I42
g15408
Vinsert
p49044
I45
VStringLiteral: "drop key "
p49045
tp49046
I1
s(g5053
I42
g5054
Vinsert
p49047
I8
VBlock
p49048
tp49049
I5
s(g41481
I42
g41482
Vinsert
p49050
I42
VSimpleName: first
p49051
tp49052
I3
s(g1991
I42
g1992
Vinsert
p49053
I7
VAssignment: =
p49054
tp49055
I1
s(g11360
I42
g11361
Vinsert
p49056
I42
VSimpleName: assertEquals
p49057
tp49058
I1
s(g45673
I42
g45674
Vinsert
p49059
I42
VSimpleName: name
p49060
tp49061
I8
s(g15087
I42
g15088
Vinsert
p49062
I59
VVariableDeclarationFragment
p49063
tp49064
I1
s(g12938
I42
g12939
Vinsert
p49065
I42
VSimpleName: x
p49066
tp49067
I2
s(g8085
I42
g8086
Vinsert
p49068
I42
VSimpleName: HBQLVisitor
p49069
tp49070
I1
s(g36815
I42
g36816
Vinsert
p49071
I8
VBlock
p49072
tp49073
I3
s(g6041
I42
g6042
Vinsert
p49074
I21
VExpressionStatement
p49075
tp49076
I5
s(g13395
I42
g13396
Vinsert
p49077
I43
VSimpleType: String
p49078
tp49079
I3
s(g35100
I42
g35101
Vinsert
p49080
I42
VSimpleName: PGPolygonExpr
p49081
tp49082
I2
s(g662
I42
g663
Vinsert
p49083
I34
VNumberLiteral: 2
p49084
tp49085
I1
s(g46717
I42
g46718
Vinsert
p49086
I27
VInfixExpression: <
p49087
tp49088
I1
s(g7970
I42
g7971
Vinsert
p49089
I42
VSimpleName: allow
p49090
tp49091
I1
s(g10550
I42
g10551
Vinsert
p49092
I14
VClassInstanceCreation
p49093
tp49094
I3
s(g700
I42
g701
Vinsert
p49095
I52
VThisExpression
p49096
tp49097
I2
s(g7797
I42
g7798
Vinsert
p49098
I42
VSimpleName: getNotificationListener
p49099
tp49100
I1
s(g17082
I42
g17083
Vinsert
p49101
I8
VBlock
p49102
tp49103
I1
s(g38930
I42
g38931
Vinsert
p49104
I42
VSimpleName: incrementCachedPreparedStatementCount
p49105
tp49106
I1
s(g27943
I42
g27944
Vinsert
p49107
I45
VStringLiteral: "CREATE TRIGGER salary_check\u005cn"
p49108
tp49109
I1
s(g22494
I42
g22495
Vinsert
p49110
I42
VSimpleName: nextTokenComma
p49111
tp49112
I1
s(g5414
I42
g5415
Vinsert
p49113
I45
VStringLiteral: "DELETE "
p49114
tp49115
I1
s(g9222
I42
g9223
Vinsert
p49116
I34
VNumberLiteral: 0
p49117
tp49118
I1
s(g1385
I42
g1386
Vinsert
p49119
I42
VSimpleName: lexer
p49120
tp49121
I2
s(g9380
I42
g9381
Vinsert
p49122
I39
VPrimitiveType: void
p49123
tp49124
I1
s(g226
I42
g227
Vinsert
p49125
I42
VSimpleName: updateDataCount_1000_10000
p49126
tp49127
I1
s(g26221
I42
g26222
Vinsert
p49128
I42
VSimpleName: ObjectName
p49129
tp49130
I1
s(g3139
I42
g3140
Vinsert
p49131
I43
VSimpleType: K
p49132
tp49133
I1
s(g6197
I42
g6198
Vinsert
p49134
I60
VVariableDeclarationStatement
p49135
tp49136
I23
s(g9647
I42
g9648
Vinsert
p49137
I42
VSimpleName: SQLAlterTableDropPartition
p49138
tp49139
I1
s(g9554
I42
g9555
Vinsert
p49140
I45
VStringLiteral: "OSWindows8Count"
p49141
tp49142
I1
s(g4615
I42
g4616
Vinsert
p49143
I42
VSimpleName: accept
p49144
tp49145
I1
s(Vinsert
p49146
I42
VSimpleName: setDesensitize
p49147
Vinsert
p49148
I45
VStringLiteral: "DELETE FROM customers\u005cn"
p49149
tp49150
I1
s(g10966
I42
g10967
Vinsert
p49151
I83
VModifier: public
p49152
tp49153
I1
s(g6760
I42
g6761
Vinsert
p49154
I42
VSimpleName: excludesPattern
p49155
tp49156
I3
s(g1324
I42
g1325
Vinsert
p49157
I8
VBlock
p49158
tp49159
I1
s(g14457
I42
g14458
Vinsert
p49160
I42
VSimpleName: max
p49161
tp49162
I1
s(Vinsert
p49163
I42
VSimpleName: getAndIncrement
p49164
Vinsert
p49165
I34
VNumberLiteral: 0
p49166
tp49167
I1
s(g15919
I42
g15920
Vinsert
p49168
I45
VStringLiteral: "AGE > 5"
p49169
tp49170
I1
s(g4381
I42
g4382
Vinsert
p49171
I39
VPrimitiveType: int
p49172
tp49173
I1
s(g24691
I42
g24692
Vinsert
p49174
I42
VSimpleName: SpringStatUtils
p49175
tp49176
I1
s(g414
I42
g415
Vinsert
p49177
I25
VIfStatement
p49178
tp49179
I2
s(g13022
I42
g13023
Vinsert
p49180
I42
VSimpleName: getCommentCount
p49181
tp49182
I1
s(g5757
I42
g5758
Vinsert
p49183
I42
VSimpleName: setHeadHints
p49184
tp49185
I1
s(g5480
I42
g5481
Vinsert
p49186
I42
VSimpleName: setUrl
p49187
tp49188
I1
s(g42032
I42
g42033
Vinsert
p49189
I45
VStringLiteral: ") xx"
p49190
tp49191
I1
s(g16525
I42
g16526
Vinsert
p49192
I25
VIfStatement
p49193
tp49194
I3
s(g14226
I42
g14227
Vinsert
p49195
I22
VFieldAccess
p49196
tp49197
I1
s(g41358
I42
g41359
Vinsert
p49198
I42
VSimpleName: MySqlIntervalExpr
p49199
tp49200
I1
s(Vinsert
p49201
I42
VSimpleName: assertEquals
p49202
Vinsert
p49203
I42
VSimpleName: setSchemaCheck
p49204
tp49205
I1
s(g3788
I42
g3789
Vinsert
p49206
I13
VCharacterLiteral: ' '
p49207
tp49208
I1
s(g161
I42
g162
Vinsert
p49209
I43
VSimpleType: SQLDropProcedureStatement
p49210
tp49211
I1
s(g2940
I42
g2941
Vinsert
p49212
I22
VFieldAccess
p49213
tp49214
I5
s(g3040
I42
g3041
Vinsert
p49215
I8
VBlock
p49216
tp49217
I1
s(g17450
I42
g17451
Vinsert
p49218
I22
VFieldAccess
p49219
tp49220
I2
s(g42994
I42
g42995
Vinsert
p49221
I45
VStringLiteral: "on completion preserve do begin insert into test.t1 values (33), (111);select * from test.t1; end; -- //"
p49222
tp49223
I1
s(g22782
I42
g22783
Vinsert
p49224
I42
VSimpleName: domain
p49225
tp49226
I1
s(g15018
I42
g15019
Vinsert
p49227
I45
VStringLiteral: "SUBPARTITION "
p49228
tp49229
I1
s(g19315
I42
g19316
Vinsert
p49230
I8
VBlock
p49231
tp49232
I3
s(g1007
I42
g1008
Vinsert
p49233
I42
VSimpleName: info
p49234
tp49235
I1
s(g21517
I42
g21518
Vinsert
p49236
I40
VQualifiedName: Token.SHOW
p49237
tp49238
I1
s(g4755
I42
g4756
Vinsert
p49239
I27
VInfixExpression: %
p49240
tp49241
I1
s(g2747
I42
g2748
Vinsert
p49242
I33
VNullLiteral
p49243
tp49244
I3
s(Vinsert
p49245
I42
VSimpleName: getPartitions
p49246
Vinsert
p49247
I59
VVariableDeclarationFragment
p49248
tp49249
I2
s(g10433
I42
g10434
Vinsert
p49250
I42
VSimpleName: lock
p49251
tp49252
I3
s(g8409
I42
g8410
Vinsert
p49253
I42
VSimpleName: methodStat
p49254
tp49255
I2
s(g1339
I42
g1340
Vinsert
p49256
I42
VSimpleName: value
p49257
tp49258
I10
s(Vinsert
p49259
I42
VSimpleName: clearWallTopStatementContext
p49260
Vinsert
p49261
I43
VSimpleType: OracleMultiInsertStatement
p49262
tp49263
I1
s(g5859
I42
g5860
Vinsert
p49264
I42
VSimpleName: validIp
p49265
tp49266
I1
s(g5490
I42
g5491
Vinsert
p49267
I42
VSimpleName: test_mergeCall_oracle
p49268
tp49269
I1
s(g11566
I42
g11567
Vinsert
p49270
I43
VSimpleType: DruidConnectionHolder
p49271
tp49272
I2
s(g18672
I42
g18673
Vinsert
p49273
I42
VSimpleName: wrap
p49274
tp49275
I2
s(g4684
I42
g4685
Vinsert
p49276
I59
VVariableDeclarationFragment
p49277
tp49278
I1
s(g1670
I42
g1671
Vinsert
p49279
I42
VSimpleName: printlnComments
p49280
tp49281
I1
s(g11634
I42
g11635
Vinsert
p49282
I60
VVariableDeclarationStatement
p49283
tp49284
I1
s(g1665
I42
g1666
Vinsert
p49285
I45
VStringLiteral: "WHERE t2.attr2 = 'ZB201708311440560'"
p49286
tp49287
I1
s(g8643
I42
g8644
Vinsert
p49288
I42
VSimpleName: engine
p49289
tp49290
I1
s(g6338
I42
g6339
Vinsert
p49291
I27
VInfixExpression: ==
p49292
tp49293
I2
s(g11062
I42
g11063
Vinsert
p49294
I42
VSimpleName: getConnection
p49295
tp49296
I1
s(g3292
I42
g3293
Vinsert
p49297
I42
VSimpleName: numPos
p49298
tp49299
I1
s(g12133
I42
g12134
Vinsert
p49300
I42
VSimpleName: setMaxActive
p49301
tp49302
I1
s(g21284
I42
g21285
Vinsert
p49303
I42
VSimpleName: MyClassLoader
p49304
tp49305
I2
s(g11574
I42
g11575
Vinsert
p49306
I14
VClassInstanceCreation
p49307
tp49308
I2
s(g22126
I42
g22127
Vinsert
p49309
I43
VSimpleType: ConnectionEventListener
p49310
tp49311
I1
s(g10591
I42
g10592
Vinsert
p49312
I39
VPrimitiveType: boolean
p49313
tp49314
I1
s(g3679
I42
g3680
Vinsert
p49315
I42
VSimpleName: value
p49316
tp49317
I1
s(g8669
I42
g8670
Vinsert
p49318
I27
VInfixExpression: !=
p49319
tp49320
I1
s(g987
I42
g988
Vinsert
p49321
I21
VExpressionStatement
p49322
tp49323
I2
s(g19595
I42
g19596
Vinsert
p49324
I45
VStringLiteral: "SELECT is_srvrolemember(\u2018sysadmin\u2019, \u2018sa\u2019); "
p49325
tp49326
I1
s(g26526
I42
g26527
Vinsert
p49327
I34
VNumberLiteral: 0
p49328
tp49329
I17
s(g14343
I42
g14344
Vinsert
p49330
I42
VSimpleName: q
p49331
tp49332
I1
s(g9415
I42
g9416
Vinsert
p49333
I42
VSimpleName: booleanValue
p49334
tp49335
I1
s(g5414
I42
g5415
Vinsert
p49336
I42
VSimpleName: from
p49337
tp49338
I1
s(g9410
I42
g9411
Vinsert
p49339
I32
VMethodInvocation
p49340
tp49341
I1
s(g20226
I42
g20227
Vinsert
p49342
I42
VSimpleName: OracleMultiInsertStatement
p49343
tp49344
I2
s(g3159
I42
g3160
Vinsert
p49345
I40
VQualifiedName: java.io.Reader
p49346
tp49347
I1
s(g27680
I42
g27681
Vinsert
p49348
I42
VSimpleName: a
p49349
tp49350
I4
s(g9267
I42
g9268
Vinsert
p49351
I43
VSimpleType: Object
p49352
tp49353
I1
s(g15359
I42
g15360
Vinsert
p49354
I45
VStringLiteral: ";;select 123"
p49355
tp49356
I1
s(g37883
I42
g37884
Vinsert
p49357
I42
VSimpleName: TeradataStatementParser
p49358
tp49359
I1
s(g16123
I42
g16124
Vinsert
p49360
I39
VPrimitiveType: boolean
p49361
tp49362
I1
s(g657
I42
g658
Vinsert
p49363
I31
VMethodDeclaration
p49364
tp49365
I1
s(g25339
I42
g25340
Vinsert
p49366
I45
VStringLiteral: " select * from brandinfo where 1=1 and brandid > 100 order by brandid asc"
p49367
tp49368
I1
s(g1928
I42
g1929
Vinsert
p49369
I42
VSimpleName: OracleSelectSubqueryTableSource
p49370
tp49371
I1
s(g21632
I42
g21633
Vinsert
p49372
I42
VSimpleName: ucase
p49373
tp49374
I5
s(Vinsert
p49375
I42
VSimpleName: get
p49376
Vinsert
p49377
I45
VStringLiteral: "EffectedRowCount"
p49378
tp49379
I1
s(g24633
I42
g24634
Vinsert
p49380
I42
VSimpleName: keep
p49381
tp49382
I3
s(g21155
I42
g21156
Vinsert
p49383
I32
VMethodInvocation
p49384
tp49385
I6
s(Vinsert
p49386
I42
VSimpleName: size
p49387
Vinsert
p49388
I40
VQualifiedName: JdbcConstants.MYSQL
p49389
tp49390
I1
s(g22198
I42
g22199
Vinsert
p49391
I43
VSimpleType: MySqlHintStatement
p49392
tp49393
I3
s(g13677
I42
g13678
Vinsert
p49394
I42
VSimpleName: rightExprTableSource
p49395
tp49396
I1
s(g21504
I42
g21505
Vinsert
p49397
I42
VSimpleName: itemExpr
p49398
tp49399
I1
s(g13272
I42
g13273
Vinsert
p49400
I38
VPrefixExpression: !
p49401
tp49402
I1
s(Vinsert
p49403
I42
VSimpleName: parseStatementList
p49404
Vinsert
p49405
I42
VSimpleName: MySqlShowRelayLogEventsStatement
p49406
tp49407
I2
s(g901
I42
g902
Vinsert
p49408
I42
VSimpleName: x0
p49409
tp49410
I1
s(g2915
I42
g2916
Vinsert
p49411
I14
VClassInstanceCreation
p49412
tp49413
I9
s(g17125
I42
g17126
Vinsert
p49414
I34
VNumberLiteral: 1L
p49415
tp49416
I1
s(g5597
I42
g5598
Vinsert
p49417
I14
VClassInstanceCreation
p49418
tp49419
I2
s(g14279
I42
g14280
Vinsert
p49420
I45
VStringLiteral: ") a\u005cn"
p49421
tp49422
I1
s(g18899
I42
g18900
Vinsert
p49423
I34
VNumberLiteral: 0
p49424
tp49425
I1
s(g14343
I42
g14344
Vinsert
p49426
I42
VSimpleName: Object
p49427
tp49428
I1
s(g2203
I42
g2204
Vinsert
p49429
I32
VMethodInvocation
p49430
tp49431
I4
s(g35248
I42
g35249
Vinsert
p49432
I45
VStringLiteral: ", "
p49433
tp49434
I1
s(g3058
I42
g3059
Vinsert
p49435
I45
VStringLiteral: "\u005cnEND"
p49436
tp49437
I2
s(g25430
I42
g25431
Vinsert
p49438
I42
VSimpleName: methodExpr
p49439
tp49440
I1
s(Vinsert
p49441
I42
VSimpleName: assertEquals
p49442
Vinsert
p49443
I42
VSimpleName: getConnectionstat
p49444
tp49445
I1
s(g16471
I42
g16472
Vinsert
p49446
I45
VStringLiteral: "\u005ctROLE VARCHAR(100),\u005cn"
p49447
tp49448
I2
s(g3569
I42
g3570
Vinsert
p49449
I8
VBlock
p49450
tp49451
I1
s(g15068
I42
g15069
Vinsert
p49452
I42
VSimpleName: getMethodName
p49453
tp49454
I1
s(g2905
I42
g2906
Vinsert
p49455
I21
VExpressionStatement
p49456
tp49457
I1
s(g6521
I42
g6522
Vinsert
p49458
I31
VMethodDeclaration
p49459
tp49460
I1
s(g1536
I42
g1537
Vinsert
p49461
I42
VSimpleName: constructor
p49462
tp49463
I1
s(g48916
I42
g48917
Vinsert
p49464
I43
VSimpleType: Collection
p49465
tp49466
I1
s(g9569
I42
g9570
Vinsert
p49467
I42
VSimpleName: Exception
p49468
tp49469
I1
s(g18496
I42
g18497
Vinsert
p49470
I42
VSimpleName: i
p49471
tp49472
I1
s(g30294
I42
g30295
Vinsert
p49473
I61
VWhileStatement
p49474
tp49475
I2
s(g5739
I42
g5740
Vinsert
p49476
I42
VSimpleName: druidFilterConfigList
p49477
tp49478
I3
s(g18930
I42
g18931
Vinsert
p49479
I42
VSimpleName: table
p49480
tp49481
I1
s(g4293
I42
g4294
Vinsert
p49482
I21
VExpressionStatement
p49483
tp49484
I2
s(g33834
I42
g33835
Vinsert
p49485
I42
VSimpleName: SQLInsertStatement
p49486
tp49487
I2
s(g2130
I42
g2131
Vinsert
p49488
I42
VSimpleName: x
p49489
tp49490
I1
s(g675
I42
g676
Vinsert
p49491
I42
VSimpleName: rs
p49492
tp49493
I1
s(g4447
I42
g4448
Vinsert
p49494
I42
VSimpleName: provider
p49495
tp49496
I3
s(g33776
I42
g33777
Vinsert
p49497
I42
VSimpleName: objectName
p49498
tp49499
I2
s(g11330
I42
g11331
Vinsert
p49500
I45
VStringLiteral: "language java name '"
p49501
tp49502
I1
s(g12523
I42
g12524
Vinsert
p49503
I42
VSimpleName: x
p49504
tp49505
I4
s(g20904
I42
g20905
Vinsert
p49506
I42
VSimpleName: dataSource
p49507
tp49508
I1
s(g3073
I42
g3074
Vinsert
p49509
I27
VInfixExpression: &&
p49510
tp49511
I6
s(g10480
I42
g10481
Vinsert
p49512
I42
VSimpleName: SQLIdentifierExpr
p49513
tp49514
I1
s(g10757
I42
g10758
Vinsert
p49515
I42
VSimpleName: file
p49516
tp49517
I2
s(g5133
I42
g5134
Vinsert
p49518
I42
VSimpleName: getSqlStat
p49519
tp49520
I1
s(g33444
I42
g33445
Vinsert
p49521
I42
VSimpleName: dataType
p49522
tp49523
I1
s(Vinsert
p49524
I42
VSimpleName: token
p49525
Vinsert
p49526
I40
VQualifiedName: Token.WITH
p49527
tp49528
I1
s(g28221
I42
g28222
Vinsert
p49529
I11
VCastExpression
p49530
tp49531
I1
s(g5941
I42
g5942
Vinsert
p49532
I43
VSimpleType: JSONWriter
p49533
tp49534
I2
s(g1883
I42
g1884
Vinsert
p49535
I42
VSimpleName: MySqlSubPartitionByKey
p49536
tp49537
I1
s(g18070
I42
g18071
Vinsert
p49538
I42
VSimpleName: setNumber
p49539
tp49540
I4
s(g25306
I42
g25307
Vinsert
p49541
I23
VFieldDeclaration
p49542
tp49543
I1
s(Vinsert
p49544
I42
VSimpleName: nextToken
p49545
Vinsert
p49546
I42
VSimpleName: getDbType
p49547
tp49548
I3
s(g3821
I42
g3822
Vinsert
p49549
I42
VSimpleName: getTables
p49550
tp49551
I2
s(g6450
I42
g6451
Vinsert
p49552
I42
VSimpleName: getBytes
p49553
tp49554
I2
s(g6288
I42
g6289
Vinsert
p49555
I60
VVariableDeclarationStatement
p49556
tp49557
I1
s(g20715
I42
g20716
Vinsert
p49558
I42
VSimpleName: psql
p49559
tp49560
I3
s(g4477
I42
g4478
Vinsert
p49561
I21
VExpressionStatement
p49562
tp49563
I1
s(g9709
I42
g9710
Vinsert
p49564
I42
VSimpleName: print
p49565
tp49566
I1
s(g9503
I42
g9504
Vinsert
p49567
I60
VVariableDeclarationStatement
p49568
tp49569
I1
s(g622
I42
g623
Vinsert
p49570
I21
VExpressionStatement
p49571
tp49572
I2
s(g9959
I42
g9960
Vinsert
p49573
I42
VSimpleName: DruidDataSourceBuilder
p49574
tp49575
I3
s(g31127
I42
g31128
Vinsert
p49576
I43
VSimpleType: SQLDropTableSpaceStatement
p49577
tp49578
I2
s(Vinsert
p49579
I42
VSimpleName: toMySqlString
p49580
Vinsert
p49581
I42
VSimpleName: createSchemaStatVisitor
p49582
tp49583
I4
s(g2104
I42
g2105
Vinsert
p49584
I42
VSimpleName: expr
p49585
tp49586
I1
s(g29367
I42
g29368
Vinsert
p49587
I45
VStringLiteral: "\u005cn\u005ct\u005ctstart with tbek_code = ?"
p49588
tp49589
I1
s(g2629
I42
g2630
Vinsert
p49590
I43
VSimpleType: SQLIdentifierExpr
p49591
tp49592
I4
s(g48178
I42
g48179
Vinsert
p49593
I42
VSimpleName: out
p49594
tp49595
I3
s(g20626
I42
g20627
Vinsert
p49596
I79
VSingleMemberAnnotation
p49597
tp49598
I1
s(g2805
I42
g2806
Vinsert
p49599
I42
VSimpleName: CompositeType
p49600
tp49601
I1
s(g4381
I42
g4382
Vinsert
p49602
I34
VNumberLiteral: 5
p49603
tp49604
I1
s(g9060
I42
g9061
Vinsert
p49605
I22
VFieldAccess
p49606
tp49607
I10
s(g15294
I42
g15295
Vinsert
p49608
I42
VSimpleName: setUsername
p49609
tp49610
I1
s(g37739
I42
g37740
Vinsert
p49611
I83
VModifier: final
p49612
tp49613
I1
s(g28072
I42
g28073
Vinsert
p49614
I40
VQualifiedName: x.parameters
p49615
tp49616
I1
s(g4490
I42
g4491
Vinsert
p49617
I32
VMethodInvocation
p49618
tp49619
I6
s(g20827
I42
g20828
Vinsert
p49620
I42
VSimpleName: Exception
p49621
tp49622
I1
s(Vinsert
p49623
I42
VSimpleName: assertNotNull
p49624
Vinsert
p49625
I42
VSimpleName: PoolableConnection
p49626
tp49627
I2
s(g2614
I42
g2615
Vinsert
p49628
I42
VSimpleName: setParent
p49629
tp49630
I12
s(g16264
I42
g16265
Vinsert
p49631
I43
VSimpleType: Exception
p49632
tp49633
I1
s(g3618
I42
g3619
Vinsert
p49634
I42
VSimpleName: Clob
p49635
tp49636
I1
s(g30636
I42
g30637
Vinsert
p49637
I8
VBlock
p49638
tp49639
I1
s(g32999
I42
g33000
Vinsert
p49640
I45
VStringLiteral: "VALUES ('1', 'aa'), ('2', 'bb')"
p49641
tp49642
I1
s(g28640
I42
g28641
Vinsert
p49643
I42
VSimpleName: left
p49644
tp49645
I4
s(g49623
I42
g49624
Vinsert
p49646
I42
VSimpleName: conn
p49647
tp49648
I1
s(Vinsert
p49649
I42
VSimpleName: getAlias
p49650
Vinsert
p49651
I42
VSimpleName: get
p49652
tp49653
I1
s(g12639
I42
g12640
Vinsert
p49654
I45
VStringLiteral: "7\u005cn"
p49655
tp49656
I1
s(g4278
I42
g4279
Vinsert
p49657
I45
VStringLiteral: "| c_varchar    | varchar(10)  | NO   |     | hello               |                             |\u005cn"
p49658
tp49659
I1
s(g26818
I42
g26819
Vinsert
p49660
I59
VVariableDeclarationFragment
p49661
tp49662
I4
s(g5969
I42
g5970
Vinsert
p49663
I43
VSimpleType: TabularData
p49664
tp49665
I1
s(g4404
I42
g4405
Vinsert
p49666
I42
VSimpleName: exprParser
p49667
tp49668
I1
s(g18173
I42
g18174
Vinsert
p49669
I43
VSimpleType: ObjectName
p49670
tp49671
I4
s(g45686
I42
g45687
Vinsert
p49672
I42
VSimpleName: get
p49673
tp49674
I1
s(Vinsert
p49675
I42
VSimpleName: append
p49676
Vinsert
p49677
I42
VSimpleName: tableElementList
p49678
tp49679
I1
s(g3826
I42
g3827
Vinsert
p49680
I42
VSimpleName: URL
p49681
tp49682
I1
s(Vinsert
p49683
I42
VSimpleName: getProperty
p49684
Vinsert
p49685
I42
VSimpleName: level
p49686
tp49687
I2
s(g4867
I42
g4868
Vinsert
p49688
I42
VSimpleName: stat
p49689
tp49690
I2
s(g10604
I42
g10605
Vinsert
p49691
I43
VSimpleType: Object
p49692
tp49693
I5
s(g18224
I42
g18225
Vinsert
p49694
I43
VSimpleType: SQLException
p49695
tp49696
I2
s(g11124
I42
g11125
Vinsert
p49697
I43
VSimpleType: String
p49698
tp49699
I1
s(g19139
I42
g19140
Vinsert
p49700
I42
VSimpleName: newUpdater
p49701
tp49702
I1
s(g22469
I42
g22470
Vinsert
p49703
I42
VSimpleName: assertTrue
p49704
tp49705
I4
s(g8438
I42
g8439
Vinsert
p49706
I42
VSimpleName: accept
p49707
tp49708
I1
s(g2439
I42
g2440
Vinsert
p49709
I42
VSimpleName: getFieldNames
p49710
tp49711
I1
s(g30418
I42
g30419
Vinsert
p49712
I39
VPrimitiveType: int
p49713
tp49714
I1
s(g13991
I42
g13992
Vinsert
p49715
I42
VSimpleName: privileged
p49716
tp49717
I1
s(g856
I42
g857
Vinsert
p49718
I7
VAssignment: =
p49719
tp49720
I1
s(Vinsert
p49721
I42
VSimpleName: equals
p49722
Vinsert
p49723
I40
VQualifiedName: JdbcConstants.ODPS
p49724
tp49725
I1
s(g9360
I42
g9361
Vinsert
p49726
I74
VParameterizedType: List<Map<String,Object>>
p49727
tp49728
I1
s(g36179
I42
g36180
Vinsert
p49729
I42
VSimpleName: WallVisitorUtils
p49730
tp49731
I4
s(g997
I42
g998
Vinsert
p49732
I7
VAssignment: =
p49733
tp49734
I1
s(Vinsert
p49735
I42
VSimpleName: invoke
p49736
Vinsert
p49737
I42
VSimpleName: Integer
p49738
tp49739
I2
s(g8166
I42
g8167
Vinsert
p49740
I25
VIfStatement
p49741
tp49742
I1
s(g1963
I42
g1964
Vinsert
p49743
I25
VIfStatement
p49744
tp49745
I1
s(Vinsert
p49746
I42
VSimpleName: println
p49747
Vinsert
p49748
I42
VSimpleName: DB2SchemaStatVisitor
p49749
tp49750
I4
s(g1913
I42
g1914
Vinsert
p49751
I42
VSimpleName: SQLName
p49752
tp49753
I1
s(Vinsert
p49754
I42
VSimpleName: get
p49755
Vinsert
p49756
I42
VSimpleName: computeDataType
p49757
tp49758
I1
s(Vinsert
p49759
I42
VSimpleName: getColumns
p49760
Vinsert
p49761
I42
VSimpleName: MySqlPartitionByKey
p49762
tp49763
I4
s(g11845
I42
g11846
Vinsert
p49764
I32
VMethodInvocation
p49765
tp49766
I5
s(g14431
I42
g14432
Vinsert
p49767
I32
VMethodInvocation
p49768
tp49769
I7
s(g11845
I42
g11846
Vinsert
p49770
I42
VSimpleName: x
p49771
tp49772
I2
s(g20470
I42
g20471
Vinsert
p49773
I42
VSimpleName: hash1
p49774
tp49775
I1
s(g3549
I42
g3550
Vinsert
p49776
I43
VSimpleType: Entry
p49777
tp49778
I1
s(g12050
I42
g12051
Vinsert
p49779
I45
VStringLiteral: "WHERE menu_id IN (\u005cn"
p49780
tp49781
I1
s(g19686
I42
g19687
Vinsert
p49782
I23
VFieldDeclaration
p49783
tp49784
I3
s(g19984
I42
g19985
Vinsert
p49785
I21
VExpressionStatement
p49786
tp49787
I1
s(g1160
I42
g1161
Vinsert
p49788
I31
VMethodDeclaration
p49789
tp49790
I1
s(g4429
I42
g4430
Vinsert
p49791
I42
VSimpleName: concurrentMax
p49792
tp49793
I1
s(g9954
I42
g9955
Vinsert
p49794
I42
VSimpleName: WallFunctionStatValue
p49795
tp49796
I2
s(g4775
I42
g4776
Vinsert
p49797
I21
VExpressionStatement
p49798
tp49799
I1
s(g9969
I42
g9970
Vinsert
p49800
I25
VIfStatement
p49801
tp49802
I4
s(Vinsert
p49803
I42
VSimpleName: accept0
p49804
Vinsert
p49805
I42
VSimpleName: objType
p49806
tp49807
I1
s(g47957
I42
g47958
Vinsert
p49808
I42
VSimpleName: addAndGet
p49809
tp49810
I1
s(g5864
I42
g5865
Vinsert
p49811
I42
VSimpleName: OracleOrderByItem
p49812
tp49813
I1
s(g14426
I42
g14427
Vinsert
p49814
I8
VBlock
p49815
tp49816
I1
s(g1476
I42
g1477
Vinsert
p49817
I42
VSimpleName: resultSetLogger
p49818
tp49819
I1
s(Vinsert
p49820
I42
VSimpleName: stringVal
p49821
Vinsert
p49822
I45
VStringLiteral: "CHARACTER SET"
p49823
tp49824
I1
s(g29042
I42
g29043
Vinsert
p49825
I26
VImportDeclaration
p49826
tp49827
I1
s(g3533
I42
g3534
Vinsert
p49828
I25
VIfStatement
p49829
tp49830
I14
s(g10829
I42
g10830
Vinsert
p49831
I61
VWhileStatement
p49832
tp49833
I1
s(g48353
I42
g48354
Vinsert
p49834
I34
VNumberLiteral: 0
p49835
tp49836
I1
s(g17575
I42
g17576
Vinsert
p49837
I42
VSimpleName: partitionSize
p49838
tp49839
I1
s(g6755
I42
g6756
Vinsert
p49840
I42
VSimpleName: setUp
p49841
tp49842
I1
s(g2253
I42
g2254
Vinsert
p49843
I59
VVariableDeclarationFragment
p49844
tp49845
I2
s(Vinsert
p49846
I42
VSimpleName: stringVal
p49847
Vinsert
p49848
I42
VSimpleName: equalsIgnoreCase
p49849
tp49850
I2
s(g31620
I42
g31621
Vinsert
p49851
I42
VSimpleName: SQLCaseExpr
p49852
tp49853
I1
s(g23859
I42
g23860
Vinsert
p49854
I42
VSimpleName: getOperator
p49855
tp49856
I3
s(g2852
I42
g2853
Vinsert
p49857
I44
VSingleVariableDeclaration
p49858
tp49859
I1
s(g20434
I42
g20435
Vinsert
p49860
I45
VStringLiteral: "\u005cn\u005ctFROM t"
p49861
tp49862
I2
s(g9190
I42
g9191
Vinsert
p49863
I8
VBlock
p49864
tp49865
I1
s(g1835
I42
g1836
Vinsert
p49866
I42
VSimpleName: first
p49867
tp49868
I1
s(Vinsert
p49869
I42
VSimpleName: parseStatement
p49870
Vinsert
p49871
I43
VSimpleType: SQLServerStatementParser
p49872
tp49873
I1
s(g386
I42
g387
Vinsert
p49874
I32
VMethodInvocation
p49875
tp49876
I1
s(g3495
I42
g3496
Vinsert
p49877
I42
VSimpleName: lexer
p49878
tp49879
I4
s(g8823
I42
g8824
Vinsert
p49880
I32
VMethodInvocation
p49881
tp49882
I4
s(g29207
I42
g29208
Vinsert
p49883
I45
VStringLiteral: "INSERT INTO mycart.`member_cart_0172` (`cart_id`, `sku_id`, `item_id`, `quantity`, `user_id`\u005cn"
p49884
tp49885
I1
s(g4055
I42
g4056
Vinsert
p49886
I27
VInfixExpression: <
p49887
tp49888
I1
s(g12573
I42
g12574
Vinsert
p49889
I42
VSimpleName: setClientImpl
p49890
tp49891
I1
s(g35983
I42
g35984
Vinsert
p49892
I42
VSimpleName: object
p49893
tp49894
I1
s(g7356
I42
g7357
Vinsert
p49895
I32
VMethodInvocation
p49896
tp49897
I2
s(g9559
I42
g9560
Vinsert
p49898
I8
VBlock
p49899
tp49900
I1
s(g2997
I42
g2998
Vinsert
p49901
I42
VSimpleName: asyncCloseEnable
p49902
tp49903
I1
s(g8465
I42
g8466
Vinsert
p49904
I45
VStringLiteral: "FETCH FIRST "
p49905
tp49906
I1
s(g3422
I42
g3423
Vinsert
p49907
I42
VSimpleName: getTables
p49908
tp49909
I3
s(g8386
I42
g8387
Vinsert
p49910
I42
VSimpleName: fromTableName
p49911
tp49912
I2
s(g13042
I42
g13043
Vinsert
p49913
I36
VParenthesizedExpression
p49914
tp49915
I1
s(g537
I42
g538
Vinsert
p49916
I40
VQualifiedName: MySqlKillStatement.Type.QUERY
p49917
tp49918
I1
s(g13952
I42
g13953
Vinsert
p49919
I43
VSimpleType: MySqlSelectQueryBlock
p49920
tp49921
I2
s(g20559
I42
g20560
Vinsert
p49922
I42
VSimpleName: running
p49923
tp49924
I1
s(Vinsert
p49925
I42
VSimpleName: expr
p49926
Vinsert
p49927
I40
VQualifiedName: Token.UPDATE
p49928
tp49929
I1
s(g17240
I42
g17241
Vinsert
p49930
I42
VSimpleName: SQLSelectQueryBlock
p49931
tp49932
I3
s(g9704
I42
g9705
Vinsert
p49933
I59
VVariableDeclarationFragment
p49934
tp49935
I1
s(g7893
I42
g7894
Vinsert
p49936
I42
VSimpleName: properties
p49937
tp49938
I6
s(g23793
I42
g23794
Vinsert
p49939
I45
VStringLiteral: "\u005cn\u005ctPARTITION p3 VALUES LESS THAN (MAXVALUE)"
p49940
tp49941
I2
s(g7970
I42
g7971
Vinsert
p49942
I32
VMethodInvocation
p49943
tp49944
I1
s(g27350
I42
g27351
Vinsert
p49945
I42
VSimpleName: SQLStatement
p49946
tp49947
I51
s(g9696
I42
g9697
Vinsert
p49948
I42
VSimpleName: res
p49949
tp49950
I1
s(g18680
I42
g18681
Vinsert
p49951
I42
VSimpleName: Result
p49952
tp49953
I2
s(g11124
I42
g11125
Vinsert
p49954
I42
VSimpleName: SQLSelectStatement
p49955
tp49956
I1
s(g7642
I42
g7643
Vinsert
p49957
I60
VVariableDeclarationStatement
p49958
tp49959
I23
s(g17526
I42
g17527
Vinsert
p49960
I42
VSimpleName: print
p49961
tp49962
I1
s(g2697
I42
g2698
Vinsert
p49963
I45
VStringLiteral: "?>0 && ?>0"
p49964
tp49965
I1
s(g17221
I42
g17222
Vinsert
p49966
I43
VSimpleType: SQLPropertyExpr
p49967
tp49968
I2
s(g37907
I42
g37908
Vinsert
p49969
I27
VInfixExpression: +
p49970
tp49971
I1
s(g1324
I42
g1325
Vinsert
p49972
I42
VSimpleName: token
p49973
tp49974
I1
s(g43011
I42
g43012
Vinsert
p49975
I42
VSimpleName: selectQueryBlcok
p49976
tp49977
I1
s(g10604
I42
g10605
Vinsert
p49978
I42
VSimpleName: get
p49979
tp49980
I4
s(Vinsert
p49981
I42
VSimpleName: toLowerCase
p49982
Vinsert
p49983
I40
VQualifiedName: joinType.name
p49984
tp49985
I1
s(g28278
I42
g28279
Vinsert
p49986
I40
VQualifiedName: Token.USER
p49987
tp49988
I1
s(g40052
I42
g40053
Vinsert
p49989
I11
VCastExpression
p49990
tp49991
I1
s(g14990
I42
g14991
Vinsert
p49992
I42
VSimpleName: get
p49993
tp49994
I4
s(g23697
I42
g23698
Vinsert
p49995
I43
VSimpleType: DataSourceHolder
p49996
tp49997
I2
s(g35034
I42
g35035
Vinsert
p49998
I33
VNullLiteral
p49999
tp50000
I1
s(g30322
I42
g30323
Vinsert
p50001
I45
VStringLiteral: " "
p50002
tp50003
I3
s(g2533
I42
g2534
Vinsert
p50004
I59
VVariableDeclarationFragment
p50005
tp50006
I1
s(g2515
I42
g2516
Vinsert
p50007
I42
VSimpleName: String
p50008
tp50009
I2
s(g8243
I42
g8244
Vinsert
p50010
I45
VStringLiteral: "grouping sets"
p50011
tp50012
I1
s(g7399
I42
g7400
Vinsert
p50013
I42
VSimpleName: segments
p50014
tp50015
I1
s(g2935
I42
g2936
Vinsert
p50016
I83
VModifier: public
p50017
tp50018
I2
s(g9569
I42
g9570
Vinsert
p50019
I22
VFieldAccess
p50020
tp50021
I1
s(g1448
I42
g1449
Vinsert
p50022
I32
VMethodInvocation
p50023
tp50024
I26
s(g6722
I42
g6723
Vinsert
p50025
I27
VInfixExpression: +
p50026
tp50027
I4
s(Vinsert
p50028
I42
VSimpleName: visit
p50029
Vinsert
p50030
I40
VQualifiedName: com.alibaba.druid.sql.visitor.SQLASTVisitor
p50031
tp50032
I1
s(g6429
I42
g6430
Vinsert
p50033
I31
VMethodDeclaration
p50034
tp50035
I1
s(g37744
I42
g37745
Vinsert
p50036
I25
VIfStatement
p50037
tp50038
I1
s(g14147
I42
g14148
Vinsert
p50039
I62
VInstanceofExpression
p50040
tp50041
I7
s(Vinsert
p50042
I42
VSimpleName: parseStatementList
p50043
Vinsert
p50044
I42
VSimpleName: createSQLStatementParser
p50045
tp50046
I10
s(g1266
I42
g1267
Vinsert
p50047
I43
VSimpleType: Column
p50048
tp50049
I1
s(g29638
I42
g29639
Vinsert
p50050
I43
VSimpleType: MySqlShowOpenTablesStatement
p50051
tp50052
I2
s(Vinsert
p50053
I42
VSimpleName: token
p50054
Vinsert
p50055
I42
VSimpleName: setHints
p50056
tp50057
I1
s(g10626
I42
g10627
Vinsert
p50058
I42
VSimpleName: EncodingConvertFilter
p50059
tp50060
I1
s(g1022
I42
g1023
Vinsert
p50061
I42
VSimpleName: constructor
p50062
tp50063
I2
s(g3365
I42
g3366
Vinsert
p50064
I42
VSimpleName: length
p50065
tp50066
I1
s(g28190
I42
g28191
Vinsert
p50067
I34
VNumberLiteral: 1
p50068
tp50069
I1
s(Vinsert
p50070
I42
VSimpleName: clone
p50071
Vinsert
p50072
I42
VSimpleName: columnClone
p50073
tp50074
I1
s(g37815
I42
g37816
Vinsert
p50075
I36
VParenthesizedExpression
p50076
tp50077
I1
s(g11270
I42
g11271
Vinsert
p50078
I42
VSimpleName: exists
p50079
tp50080
I1
s(g41824
I42
g41825
Vinsert
p50081
I45
VStringLiteral: "SELECT id, name, x, y, city_code FROM `geo_poi_raw_data` `geo_poi_raw_data` WHERE 1 = 1 AND `id` > ? ORDER BY `id`"
p50082
tp50083
I1
s(g3608
I42
g3609
Vinsert
p50084
I8
VBlock
p50085
tp50086
I6
s(g32628
I42
g32629
Vinsert
p50087
I83
VModifier: public
p50088
tp50089
I7
s(g21892
I42
g21893
Vinsert
p50090
I42
VSimpleName: x
p50091
tp50092
I1
s(g32069
I42
g32070
Vinsert
p50093
I32
VMethodInvocation
p50094
tp50095
I2
s(g3058
I42
g3059
Vinsert
p50096
I45
VStringLiteral: "\u005cn\u005ctFROM DUAL;"
p50097
tp50098
I2
s(g1695
I42
g1696
Vinsert
p50099
I42
VSimpleName: mockConn
p50100
tp50101
I1
s(g4867
I42
g4868
Vinsert
p50102
I43
VSimpleType: JdbcSqlStat
p50103
tp50104
I1
s(g10159
I42
g10160
Vinsert
p50105
I42
VSimpleName: histogram
p50106
tp50107
I2
s(g16471
I42
g16472
Vinsert
p50108
I45
VStringLiteral: "\u005ctURL VARCHAR(150),\u005cn"
p50109
tp50110
I2
s(g71
I42
g72
Vinsert
p50111
I11
VCastExpression
p50112
tp50113
I1
s(g7970
I42
g7971
Vinsert
p50114
I43
VSimpleType: MySqlSetNamesStatement
p50115
tp50116
I1
s(g597
I42
g598
Vinsert
p50117
I39
VPrimitiveType: int
p50118
tp50119
I1
s(g8438
I42
g8439
Vinsert
p50120
I43
VSimpleType: MySqlPartitioningDef
p50121
tp50122
I1
s(g5615
I42
g5616
Vinsert
p50123
I42
VSimpleName: assertEquals
p50124
tp50125
I1
s(g9209
I42
g9210
Vinsert
p50126
I42
VSimpleName: test_factory
p50127
tp50128
I1
s(g15397
I42
g15398
Vinsert
p50129
I42
VSimpleName: SQLDataException
p50130
tp50131
I1
s(g33004
I42
g33005
Vinsert
p50132
I42
VSimpleName: WallSqlStat
p50133
tp50134
I1
s(g39942
I42
g39943
Vinsert
p50135
I43
VSimpleType: PGBoxExpr
p50136
tp50137
I1
s(g19539
I42
g19540
Vinsert
p50138
I42
VSimpleName: currentTableLocal
p50139
tp50140
I2
s(g1042
I42
g1043
Vinsert
p50141
I42
VSimpleName: dataSource
p50142
tp50143
I13
s(g46717
I42
g46718
Vinsert
p50144
I39
VPrimitiveType: int
p50145
tp50146
I1
s(g19823
I42
g19824
Vinsert
p50147
I42
VSimpleName: testWhileIdle
p50148
tp50149
I1
s(g7492
I42
g7493
Vinsert
p50150
I45
VStringLiteral: "ALTER TABLE trans  DISABLE LIFECYCLE;"
p50151
tp50152
I1
s(g19984
I42
g19985
Vinsert
p50153
I42
VSimpleName: unwrap
p50154
tp50155
I2
s(g4780
I42
g4781
Vinsert
p50156
I45
VStringLiteral: "Unable to resolve pingDatabase method:"
p50157
tp50158
I1
s(g39564
I42
g39565
Vinsert
p50159
I42
VSimpleName: formatOdps
p50160
tp50161
I3
s(g14239
I42
g14240
Vinsert
p50162
I27
VInfixExpression: +
p50163
tp50164
I1
s(Vinsert
p50165
I42
VSimpleName: get
p50166
Vinsert
p50167
I40
VQualifiedName: JdbcConstants.ODPS
p50168
tp50169
I9
s(g32471
I42
g32472
Vinsert
p50170
I42
VSimpleName: info
p50171
tp50172
I15
s(Vinsert
p50173
I42
VSimpleName: assertEquals
p50174
Vinsert
p50175
I45
VStringLiteral: "alter table sale_detail set comment 'new coments for table sale_detail';"
p50176
tp50177
I1
s(g35171
I42
g35172
Vinsert
p50178
I27
VInfixExpression: ||
p50179
tp50180
I1
s(g35223
I42
g35224
Vinsert
p50181
I9
VBooleanLiteral: false
p50182
tp50183
I1
s(Vinsert
p50184
I42
VSimpleName: containsColumn
p50185
Vinsert
p50186
I42
VSimpleName: getTables
p50187
tp50188
I2
s(Vinsert
p50189
I42
VSimpleName: accept
p50190
Vinsert
p50191
I42
VSimpleName: PGSchemaStatVisitor
p50192
tp50193
I48
s(g502
I42
g503
Vinsert
p50194
I42
VSimpleName: sql_c
p50195
tp50196
I1
s(g2961
I42
g2962
Vinsert
p50197
I42
VSimpleName: Exception
p50198
tp50199
I1
s(g18289
I42
g18290
Vinsert
p50200
I32
VMethodInvocation
p50201
tp50202
I8
s(g3962
I42
g3963
Vinsert
p50203
I42
VSimpleName: length
p50204
tp50205
I2
s(g11105
I42
g11106
Vinsert
p50206
I43
VSimpleType: TestCase
p50207
tp50208
I48
s(g7650
I42
g7651
Vinsert
p50209
I25
VIfStatement
p50210
tp50211
I1
s(g16638
I42
g16639
Vinsert
p50212
I42
VSimpleName: parseSelect
p50213
tp50214
I1
s(g7542
I42
g7543
Vinsert
p50215
I43
VSimpleType: PreparedStatementHolder
p50216
tp50217
I1
s(g3618
I42
g3619
Vinsert
p50218
I42
VSimpleName: driver
p50219
tp50220
I2
s(g27861
I42
g27862
Vinsert
p50221
I39
VPrimitiveType: int
p50222
tp50223
I1
s(g8828
I42
g8829
Vinsert
p50224
I42
VSimpleName: getTableOptions
p50225
tp50226
I2
s(g9137
I42
g9138
Vinsert
p50227
I42
VSimpleName: stmt
p50228
tp50229
I2
s(g2504
I42
g2505
Vinsert
p50230
I16
VConditionalExpression
p50231
tp50232
I1
s(g5854
I42
g5855
Vinsert
p50233
I52
VThisExpression
p50234
tp50235
I2
s(g29844
I42
g29845
Vinsert
p50236
I21
VExpressionStatement
p50237
tp50238
I2
s(Vinsert
p50239
I42
VSimpleName: getName
p50240
Vinsert
p50241
I42
VSimpleName: SQLReleaseSavePointStatement
p50242
tp50243
I2
s(g1334
I42
g1335
Vinsert
p50244
I45
VStringLiteral: "\u005cn\u005ctSTART_TIME_ TIMESTAMP(6) NOT NULL,"
p50245
tp50246
I2
s(Vinsert
p50247
I42
VSimpleName: getName
p50248
Vinsert
p50249
I42
VSimpleName: OracleCreateProcedureStatement
p50250
tp50251
I1
s(g17793
I42
g17794
Vinsert
p50252
I45
VStringLiteral: "org.osjava.sj.SimpleContextFactory"
p50253
tp50254
I1
s(g2408
I42
g2409
Vinsert
p50255
I42
VSimpleName: dataSourceStat
p50256
tp50257
I2
s(g17066
I42
g17067
Vinsert
p50258
I42
VSimpleName: j
p50259
tp50260
I3
s(g17098
I42
g17099
Vinsert
p50261
I42
VSimpleName: lastResultSet
p50262
tp50263
I2
s(g22238
I42
g22239
Vinsert
p50264
I40
VQualifiedName: junit.framework.TestCase
p50265
tp50266
I1
s(g2992
I42
g2993
Vinsert
p50267
I60
VVariableDeclarationStatement
p50268
tp50269
I7
s(g17951
I42
g17952
Vinsert
p50270
I40
VQualifiedName: Token.LBRACKET
p50271
tp50272
I1
s(g6442
I42
g6443
Vinsert
p50273
I45
VStringLiteral: "    from sys_info.orders "
p50274
tp50275
I1
s(g40866
I42
g40867
Vinsert
p50276
I42
VSimpleName: getObject
p50277
tp50278
I1
s(g1042
I42
g1043
Vinsert
p50279
I45
VStringLiteral: "druid_test"
p50280
tp50281
I1
s(g46523
I42
g46524
Vinsert
p50282
I8
VBlock
p50283
tp50284
I1
s(g7736
I42
g7737
Vinsert
p50285
I45
VStringLiteral: "SELECT * FROM WS_OFFER WHERE ROWNUM <= ?"
p50286
tp50287
I1
s(g19749
I42
g19750
Vinsert
p50288
I42
VSimpleName: ex
p50289
tp50290
I1
s(g48613
I42
g48614
Vinsert
p50291
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION s3"
p50292
tp50293
I1
s(g4344
I42
g4345
Vinsert
p50294
I40
VQualifiedName: Token.FIRST
p50295
tp50296
I1
s(Vinsert
p50297
I42
VSimpleName: assertEquals
p50298
Vinsert
p50299
I45
VStringLiteral: "\u005cn\u005ctREBUILD PARTITION ALL"
p50300
tp50301
I1
s(Vinsert
p50302
I42
VSimpleName: select
p50303
Vinsert
p50304
I43
VSimpleType: SQLSelectStatement
p50305
tp50306
I2
s(g15670
I42
g15671
Vinsert
p50307
I34
VNumberLiteral: 600
p50308
tp50309
I1
s(g2474
I42
g2475
Vinsert
p50310
I52
VThisExpression
p50311
tp50312
I1
s(g25616
I42
g25617
Vinsert
p50313
I45
VStringLiteral: "\u005ct\u005c"IS_MERGED\u005c"\u005cn"
p50314
tp50315
I1
s(g38777
I42
g38778
Vinsert
p50316
I42
VSimpleName: Entry
p50317
tp50318
I1
s(g17564
I42
g17565
Vinsert
p50319
I42
VSimpleName: bp
p50320
tp50321
I4
s(g8815
I42
g8816
Vinsert
p50322
I42
VSimpleName: assertTrue
p50323
tp50324
I1
s(g16556
I42
g16557
Vinsert
p50325
I74
VParameterizedType: Class<?>
p50326
tp50327
I1
s(g4424
I42
g4425
Vinsert
p50328
I42
VSimpleName: Exception
p50329
tp50330
I1
s(g23118
I42
g23119
Vinsert
p50331
I42
VSimpleName: Exception
p50332
tp50333
I2
s(g351
I42
g352
Vinsert
p50334
I45
VStringLiteral: ", timeBetweenEvictionRunsMillis "
p50335
tp50336
I1
s(g36711
I42
g36712
Vinsert
p50337
I45
VStringLiteral: "select * from t whe id = 1"
p50338
tp50339
I1
s(g35402
I42
g35403
Vinsert
p50340
I7
VAssignment: =
p50341
tp50342
I1
s(g44918
I42
g44919
Vinsert
p50343
I45
VStringLiteral: "\u005ctTYPE varchar(20)\u005cn"
p50344
tp50345
I1
s(g3053
I42
g3054
Vinsert
p50346
I42
VSimpleName: token
p50347
tp50348
I1
s(g14782
I42
g14783
Vinsert
p50349
I42
VSimpleName: getDatabase
p50350
tp50351
I2
s(g11051
I42
g11052
Vinsert
p50352
I42
VSimpleName: getPartitionedBy
p50353
tp50354
I1
s(g21681
I42
g21682
Vinsert
p50355
I42
VSimpleName: identExpr
p50356
tp50357
I1
s(g7482
I42
g7483
Vinsert
p50358
I42
VSimpleName: orderByExpr
p50359
tp50360
I2
s(g24023
I42
g24024
Vinsert
p50361
I42
VSimpleName: selectItem
p50362
tp50363
I2
s(g14896
I42
g14897
Vinsert
p50364
I32
VMethodInvocation
p50365
tp50366
I1
s(g23367
I42
g23368
Vinsert
p50367
I42
VSimpleName: EvalSelectTest
p50368
tp50369
I1
s(g4740
I42
g4741
Vinsert
p50370
I42
VSimpleName: response
p50371
tp50372
I1
s(g12560
I42
g12561
Vinsert
p50373
I42
VSimpleName: getWhere
p50374
tp50375
I2
s(g1770
I42
g1771
Vinsert
p50376
I42
VSimpleName: WallProvider
p50377
tp50378
I6
s(g25152
I42
g25153
Vinsert
p50379
I39
VPrimitiveType: void
p50380
tp50381
I1
s(g763
I42
g764
Vinsert
p50382
I21
VExpressionStatement
p50383
tp50384
I4
s(g19190
I42
g19191
Vinsert
p50385
I43
VSimpleType: Statement
p50386
tp50387
I5
s(g27276
I42
g27277
Vinsert
p50388
I32
VMethodInvocation
p50389
tp50390
I29
s(g12639
I42
g12640
Vinsert
p50391
I45
VStringLiteral: "ZdGr2VmJHIw0ZNHBYhDdR+du5U5Yy47a6dJHXFW9eNyxBHtXZDuiWYTUtlnueHQV9iYDwE+r\u005cn"
p50392
tp50393
I1
s(g2213
I42
g2214
Vinsert
p50394
I42
VSimpleName: transactionId
p50395
tp50396
I1
s(g2795
I42
g2796
Vinsert
p50397
I60
VVariableDeclarationStatement
p50398
tp50399
I1
s(g33656
I42
g33657
Vinsert
p50400
I43
VSimpleType: IllegalArgumentException
p50401
tp50402
I23
s(g1125
I42
g1126
Vinsert
p50403
I42
VSimpleName: disableError
p50404
tp50405
I1
s(g1002
I42
g1003
Vinsert
p50406
I83
VModifier: public
p50407
tp50408
I1
s(g11231
I42
g11232
Vinsert
p50409
I21
VExpressionStatement
p50410
tp50411
I2
s(g13212
I42
g13213
Vinsert
p50412
I42
VSimpleName: getErrorCount
p50413
tp50414
I1
s(g15177
I42
g15178
Vinsert
p50415
I44
VSingleVariableDeclaration
p50416
tp50417
I2
s(g27840
I42
g27841
Vinsert
p50418
I34
VNumberLiteral: 1
p50419
tp50420
I1
s(Vinsert
p50421
I42
VSimpleName: visit
p50422
Vinsert
p50423
I42
VSimpleName: ifNotExists
p50424
tp50425
I1
s(g1835
I42
g1836
Vinsert
p50426
I42
VSimpleName: x
p50427
tp50428
I1
s(g9647
I42
g9648
Vinsert
p50429
I43
VSimpleType: SQLAlterTableDropPartition
p50430
tp50431
I1
s(g14234
I42
g14235
Vinsert
p50432
I42
VSimpleName: SQLException
p50433
tp50434
I1
s(g32107
I42
g32108
Vinsert
p50435
I60
VVariableDeclarationStatement
p50436
tp50437
I2
s(g14147
I42
g14148
Vinsert
p50438
I42
VSimpleName: isJoinCondition
p50439
tp50440
I1
s(g2474
I42
g2475
Vinsert
p50441
I21
VExpressionStatement
p50442
tp50443
I2
s(g3134
I42
g3135
Vinsert
p50444
I43
VSimpleType: SQLUnaryExpr
p50445
tp50446
I1
s(g992
I42
g993
Vinsert
p50447
I13
VCharacterLiteral: ','
p50448
tp50449
I1
s(Vinsert
p50450
I42
VSimpleName: visit
p50451
Vinsert
p50452
I42
VSimpleName: users
p50453
tp50454
I2
s(g14316
I42
g14317
Vinsert
p50455
I43
VSimpleType: StatementExecuteType
p50456
tp50457
I1
s(g46482
I42
g46483
Vinsert
p50458
I43
VSimpleType: PoolableConnection
p50459
tp50460
I2
s(g46797
I42
g46798
Vinsert
p50461
I42
VSimpleName: holder
p50462
tp50463
I3
s(g1511
I42
g1512
Vinsert
p50464
I7
VAssignment: =
p50465
tp50466
I3
s(g28185
I42
g28186
Vinsert
p50467
I54
VTryStatement
p50468
tp50469
I2
s(g1705
I42
g1706
Vinsert
p50470
I42
VSimpleName: stmt
p50471
tp50472
I8
s(g3967
I42
g3968
Vinsert
p50473
I42
VSimpleName: reader
p50474
tp50475
I1
s(g27530
I42
g27531
Vinsert
p50476
I42
VSimpleName: OracleIntervalExpr
p50477
tp50478
I1
s(g11182
I42
g11183
Vinsert
p50479
I42
VSimpleName: effectRowCountUpdater
p50480
tp50481
I1
s(g28190
I42
g28191
Vinsert
p50482
I42
VSimpleName: next
p50483
tp50484
I1
s(g1991
I42
g1992
Vinsert
p50485
I42
VSimpleName: maxActive
p50486
tp50487
I2
s(g35672
I42
g35673
Vinsert
p50488
I42
VSimpleName: deleteDataCountUpdater
p50489
tp50490
I1
s(g24462
I42
g24463
Vinsert
p50491
I52
VThisExpression
p50492
tp50493
I2
s(g27954
I42
g27955
Vinsert
p50494
I42
VSimpleName: loader
p50495
tp50496
I1
s(Vinsert
p50497
I42
VSimpleName: assertEquals
p50498
Vinsert
p50499
I45
VStringLiteral: "\u005cn);"
p50500
tp50501
I1
s(g56
I42
g57
Vinsert
p50502
I42
VSimpleName: nextToken
p50503
tp50504
I1
s(g21577
I42
g21578
Vinsert
p50505
I42
VSimpleName: sqlStatValue
p50506
tp50507
I1
s(g25157
I42
g25158
Vinsert
p50508
I42
VSimpleName: property
p50509
tp50510
I2
s(Vinsert
p50511
I42
VSimpleName: assertTrue
p50512
Vinsert
p50513
I42
VSimpleName: isValidateMySql
p50514
tp50515
I2
s(g3213
I42
g3214
Vinsert
p50516
I42
VSimpleName: target
p50517
tp50518
I2
s(g6139
I42
g6140
Vinsert
p50519
I42
VSimpleName: OracleSchemaStatVisitor
p50520
tp50521
I15
s(g826
I42
g827
Vinsert
p50522
I40
VQualifiedName: Token.IF
p50523
tp50524
I1
s(Vinsert
p50525
I42
VSimpleName: createSQLStatementParser
p50526
Vinsert
p50527
I45
VStringLiteral: "select count(*) from t"
p50528
tp50529
I1
s(g6755
I42
g6756
Vinsert
p50530
I42
VSimpleName: props
p50531
tp50532
I2
s(g19888
I42
g19889
Vinsert
p50533
I25
VIfStatement
p50534
tp50535
I1
s(g4854
I42
g4855
Vinsert
p50536
I42
VSimpleName: exceptionsInto
p50537
tp50538
I2
s(g6333
I42
g6334
Vinsert
p50539
I32
VMethodInvocation
p50540
tp50541
I28
s(g14938
I42
g14939
Vinsert
p50542
I45
VStringLiteral: "\u005cn\u005ctCONSTRAINT pk_AO_E8B6CC_ISSUE_MAPPING_V2_ID PRIMARY KEY (ID)"
p50543
tp50544
I1
s(g22802
I42
g22803
Vinsert
p50545
I45
VStringLiteral: " WITH ADMIN OPTION"
p50546
tp50547
I1
s(g4770
I42
g4771
Vinsert
p50548
I42
VSimpleName: SQLTableSource
p50549
tp50550
I2
s(g12985
I42
g12986
Vinsert
p50551
I83
VModifier: public
p50552
tp50553
I2
s(g20801
I42
g20802
Vinsert
p50554
I42
VSimpleName: String
p50555
tp50556
I1
s(g1531
I42
g1532
Vinsert
p50557
I43
VSimpleType: SQLSubqueryTableSource
p50558
tp50559
I1
s(g31892
I42
g31893
Vinsert
p50560
I42
VSimpleName: identifierEquals
p50561
tp50562
I1
s(Vinsert
p50563
I42
VSimpleName: setConstraintName
p50564
Vinsert
p50565
I43
VSimpleType: SQLAlterTableEnableConstraint
p50566
tp50567
I2
s(g5859
I42
g5860
Vinsert
p50568
I42
VSimpleName: pat
p50569
tp50570
I1
s(g14274
I42
g14275
Vinsert
p50571
I42
VSimpleName: isDirectory
p50572
tp50573
I1
s(g12019
I42
g12020
Vinsert
p50574
I48
VSuperMethodInvocation
p50575
tp50576
I1
s(g841
I42
g842
Vinsert
p50577
I42
VSimpleName: isDigit
p50578
tp50579
I1
s(g16447
I42
g16448
Vinsert
p50580
I52
VThisExpression
p50581
tp50582
I1
s(g17163
I42
g17164
Vinsert
p50583
I42
VSimpleName: reset
p50584
tp50585
I4
s(g6354
I42
g6355
Vinsert
p50586
I25
VIfStatement
p50587
tp50588
I105
s(g11965
I42
g11966
Vinsert
p50589
I43
VSimpleType: SQLClientInfoException
p50590
tp50591
I1
s(g13886
I42
g13887
Vinsert
p50592
I8
VBlock
p50593
tp50594
I4
s(g7665
I42
g7666
Vinsert
p50595
I85
VDimension
p50596
tp50597
I1
s(g30541
I42
g30542
Vinsert
p50598
I42
VSimpleName: dataType
p50599
tp50600
I1
s(g6475
I42
g6476
Vinsert
p50601
I39
VPrimitiveType: void
p50602
tp50603
I1
s(g13201
I42
g13202
Vinsert
p50604
I8
VBlock
p50605
tp50606
I1
s(g2805
I42
g2806
Vinsert
p50607
I43
VSimpleType: DataSourceProxyImpl
p50608
tp50609
I1
s(g3508
I42
g3509
Vinsert
p50610
I40
VQualifiedName: com.alibaba.druid.sql.ast.statement.SQLSelectItem
p50611
tp50612
I2
s(g3500
I42
g3501
Vinsert
p50613
I43
VSimpleType: Appendable
p50614
tp50615
I1
s(g901
I42
g902
Vinsert
p50616
I27
VInfixExpression: &&
p50617
tp50618
I3
s(g6212
I42
g6213
Vinsert
p50619
I42
VSimpleName: Integer
p50620
tp50621
I2
s(g13677
I42
g13678
Vinsert
p50622
I59
VVariableDeclarationFragment
p50623
tp50624
I2
s(g24125
I42
g24126
Vinsert
p50625
I43
VSimpleType: NClob
p50626
tp50627
I1
s(g11711
I42
g11712
Vinsert
p50628
I42
VSimpleName: x
p50629
tp50630
I7
s(g24954
I42
g24955
Vinsert
p50631
I42
VSimpleName: tableSource
p50632
tp50633
I1
s(g14187
I42
g14188
Vinsert
p50634
I39
VPrimitiveType: boolean
p50635
tp50636
I1
s(g21593
I42
g21594
Vinsert
p50637
I42
VSimpleName: index
p50638
tp50639
I3
s(g26143
I42
g26144
Vinsert
p50640
I36
VParenthesizedExpression
p50641
tp50642
I3
s(g15359
I42
g15360
Vinsert
p50643
I43
VSimpleType: DruidDataSource
p50644
tp50645
I1
s(g16767
I42
g16768
Vinsert
p50646
I42
VSimpleName: SQLUtils
p50647
tp50648
I1
s(g10116
I42
g10117
Vinsert
p50649
I42
VSimpleName: transactionRegistry
p50650
tp50651
I1
s(g507
I42
g508
Vinsert
p50652
I42
VSimpleName: queryTimeout
p50653
tp50654
I1
s(g7840
I42
g7841
Vinsert
p50655
I25
VIfStatement
p50656
tp50657
I1
s(g9727
I42
g9728
Vinsert
p50658
I43
VSimpleType: WallSqlStatValue
p50659
tp50660
I2
s(Vinsert
p50661
I42
VSimpleName: getProxyFilters
p50662
Vinsert
p50663
I42
VSimpleName: setPoolPreparedStatements
p50664
tp50665
I1
s(g15018
I42
g15019
Vinsert
p50666
I45
VStringLiteral: "PARTITION "
p50667
tp50668
I1
s(g5133
I42
g5134
Vinsert
p50669
I59
VVariableDeclarationFragment
p50670
tp50671
I6
s(g29128
I42
g29129
Vinsert
p50672
I42
VSimpleName: PGSelectBuilderImpl
p50673
tp50674
I2
s(g17114
I42
g17115
Vinsert
p50675
I42
VSimpleName: datasource
p50676
tp50677
I9
s(g13084
I42
g13085
Vinsert
p50678
I45
VStringLiteral: "WHERE NID = ANY(ARRAY[1, 2, 3])"
p50679
tp50680
I1
s(Vinsert
p50681
I42
VSimpleName: visit
p50682
Vinsert
p50683
I42
VSimpleName: SQLSelectItem
p50684
tp50685
I1
s(g15220
I42
g15221
Vinsert
p50686
I45
VStringLiteral: "CreatedTime"
p50687
tp50688
I1
s(g1471
I42
g1472
Vinsert
p50689
I43
VSimpleType: Thread
p50690
tp50691
I7
s(g11566
I42
g11567
Vinsert
p50692
I42
VSimpleName: conn
p50693
tp50694
I8
s(g51
I42
g52
Vinsert
p50695
I32
VMethodInvocation
p50696
tp50697
I5
s(g5156
I42
g5157
Vinsert
p50698
I45
VStringLiteral: "LOCAL"
p50699
tp50700
I2
s(g25422
I42
g25423
Vinsert
p50701
I8
VBlock
p50702
tp50703
I1
s(Vinsert
p50704
I42
VSimpleName: assertTrue
p50705
Vinsert
p50706
I45
VStringLiteral: "SNAP_ID"
p50707
tp50708
I1
s(g4740
I42
g4741
Vinsert
p50709
I43
VSimpleType: IOException
p50710
tp50711
I1
s(g12930
I42
g12931
Vinsert
p50712
I59
VVariableDeclarationFragment
p50713
tp50714
I5
s(g20933
I42
g20934
Vinsert
p50715
I42
VSimpleName: MySqlRepeatStatement
p50716
tp50717
I1
s(g15848
I42
g15849
Vinsert
p50718
I45
VStringLiteral: "\u005ctFROM _result;\u005cn"
p50719
tp50720
I1
s(g12854
I42
g12855
Vinsert
p50721
I42
VSimpleName: xa_forget
p50722
tp50723
I1
s(g2652
I42
g2653
Vinsert
p50724
I42
VSimpleName: values
p50725
tp50726
I1
s(g19323
I42
g19324
Vinsert
p50727
I43
VSimpleType: SQLPanel
p50728
tp50729
I2
s(g16927
I42
g16928
Vinsert
p50730
I42
VSimpleName: dao
p50731
tp50732
I2
s(g4941
I42
g4942
Vinsert
p50733
I42
VSimpleName: SQLException
p50734
tp50735
I2
s(g700
I42
g701
Vinsert
p50736
I7
VAssignment: =
p50737
tp50738
I1
s(Vinsert
p50739
I42
VSimpleName: setParent
p50740
Vinsert
p50741
I42
VSimpleName: setTo
p50742
tp50743
I2
s(g15571
I42
g15572
Vinsert
p50744
I45
VStringLiteral: "\u005cn\u005ctstore_id INT"
p50745
tp50746
I1
s(g4674
I42
g4675
Vinsert
p50747
I42
VSimpleName: i
p50748
tp50749
I1
s(g11983
I42
g11984
Vinsert
p50750
I43
VSimpleType: OracleStatementParser
p50751
tp50752
I4
s(g517
I42
g518
Vinsert
p50753
I70
VEnhancedForStatement
p50754
tp50755
I1
s(Vinsert
p50756
I42
VSimpleName: setParent
p50757
Vinsert
p50758
I42
VSimpleName: setValue
p50759
tp50760
I1
s(g856
I42
g857
Vinsert
p50761
I44
VSingleVariableDeclaration
p50762
tp50763
I1
s(g32782
I42
g32783
Vinsert
p50764
I39
VPrimitiveType: byte
p50765
tp50766
I2
s(g3982
I42
g3983
Vinsert
p50767
I39
VPrimitiveType: void
p50768
tp50769
I1
s(g9919
I42
g9920
Vinsert
p50770
I40
VQualifiedName: Token.SELECT
p50771
tp50772
I2
s(g20369
I42
g20370
Vinsert
p50773
I42
VSimpleName: print
p50774
tp50775
I2
s(g8886
I42
g8887
Vinsert
p50776
I42
VSimpleName: getJdbcCommitCount
p50777
tp50778
I1
s(Vinsert
p50779
I42
VSimpleName: expr
p50780
Vinsert
p50781
I45
VStringLiteral: "PARTITIONS"
p50782
tp50783
I1
s(g33739
I42
g33740
Vinsert
p50784
I42
VSimpleName: equals
p50785
tp50786
I1
s(g7797
I42
g7798
Vinsert
p50787
I83
VModifier: public
p50788
tp50789
I1
s(g2609
I42
g2610
Vinsert
p50790
I32
VMethodInvocation
p50791
tp50792
I3
s(g9909
I42
g9910
Vinsert
p50793
I42
VSimpleName: get
p50794
tp50795
I102
s(g44242
I42
g44243
Vinsert
p50796
I34
VNumberLiteral: 0
p50797
tp50798
I1
s(g4903
I42
g4904
Vinsert
p50799
I33
VNullLiteral
p50800
tp50801
I1
s(g2722
I42
g2723
Vinsert
p50802
I42
VSimpleName: accept
p50803
tp50804
I1
s(g27070
I42
g27071
Vinsert
p50805
I52
VThisExpression
p50806
tp50807
I4
s(Vinsert
p50808
I42
VSimpleName: getItems
p50809
Vinsert
p50810
I45
VStringLiteral: ", "
p50811
tp50812
I2
s(g56
I42
g57
Vinsert
p50813
I25
VIfStatement
p50814
tp50815
I1
s(g2727
I42
g2728
Vinsert
p50816
I43
VSimpleType: SQLName
p50817
tp50818
I1
s(Vinsert
p50819
I42
VSimpleName: fnv_64_lower
p50820
Vinsert
p50821
I13
VCharacterLiteral: '['
p50822
tp50823
I1
s(g977
I42
g978
Vinsert
p50824
I27
VInfixExpression: <
p50825
tp50826
I3
s(g21020
I42
g21021
Vinsert
p50827
I59
VVariableDeclarationFragment
p50828
tp50829
I18
s(g12911
I42
g12912
Vinsert
p50830
I42
VSimpleName: getActiveCount
p50831
tp50832
I1
s(g16927
I42
g16928
Vinsert
p50833
I43
VSimpleType: User
p50834
tp50835
I2
s(g20559
I42
g20560
Vinsert
p50836
I42
VSimpleName: get
p50837
tp50838
I1
s(g6354
I42
g6355
Vinsert
p50839
I42
VSimpleName: RuntimeException
p50840
tp50841
I1
s(g1289
I42
g1290
Vinsert
p50842
I43
VSimpleType: SQLException
p50843
tp50844
I3
s(Vinsert
p50845
I42
VSimpleName: getItems
p50846
Vinsert
p50847
I42
VSimpleName: groupBy
p50848
tp50849
I1
s(g38956
I42
g38957
Vinsert
p50850
I43
VSimpleType: SQLExpr
p50851
tp50852
I1
s(g22214
I42
g22215
Vinsert
p50853
I42
VSimpleName: password
p50854
tp50855
I1
s(g1448
I42
g1449
Vinsert
p50856
I8
VBlock
p50857
tp50858
I3
s(g5485
I42
g5486
Vinsert
p50859
I42
VSimpleName: pctthreshold
p50860
tp50861
I1
s(g33151
I42
g33152
Vinsert
p50862
I43
VSimpleType: SQLVariantRefExpr
p50863
tp50864
I2
s(g44811
I42
g44812
Vinsert
p50865
I42
VSimpleName: instances
p50866
tp50867
I1
s(g18648
I42
g18649
Vinsert
p50868
I66
VTextElement: useful in situations where you want to use Log4J to log iBATIS activity but commons logging is on the classpath.
p50869
tp50870
I1
s(g3139
I42
g3140
Vinsert
p50871
I43
VSimpleType: Map.Entry
p50872
tp50873
I1
s(g9519
I42
g9520
Vinsert
p50874
I44
VSingleVariableDeclaration
p50875
tp50876
I1
s(g24641
I42
g24642
Vinsert
p50877
I21
VExpressionStatement
p50878
tp50879
I2
s(g5156
I42
g5157
Vinsert
p50880
I8
VBlock
p50881
tp50882
I3
s(g4946
I42
g4947
Vinsert
p50883
I42
VSimpleName: nameIS
p50884
tp50885
I1
s(g8355
I42
g8356
Vinsert
p50886
I42
VSimpleName: IllegalArgumentException
p50887
tp50888
I1
s(g4288
I42
g4289
Vinsert
p50889
I22
VFieldAccess
p50890
tp50891
I2
s(g3495
I42
g3496
Vinsert
p50892
I42
VSimpleName: select
p50893
tp50894
I2
s(g2281
I42
g2282
Vinsert
p50895
I43
VSimpleType: String
p50896
tp50897
I1
s(g14295
I42
g14296
Vinsert
p50898
I21
VExpressionStatement
p50899
tp50900
I3
s(g16759
I42
g16760
Vinsert
p50901
I42
VSimpleName: x
p50902
tp50903
I20
s(g19749
I42
g19750
Vinsert
p50904
I32
VMethodInvocation
p50905
tp50906
I1
s(g13720
I42
g13721
Vinsert
p50907
I45
VStringLiteral: "THE_DATE"
p50908
tp50909
I1
s(g10687
I42
g10688
Vinsert
p50910
I32
VMethodInvocation
p50911
tp50912
I1
s(g891
I42
g892
Vinsert
p50913
I12
VCatchClause
p50914
tp50915
I1
s(g409
I42
g410
Vinsert
p50916
I42
VSimpleName: toString
p50917
tp50918
I2
s(g18031
I42
g18032
Vinsert
p50919
I43
VSimpleType: WallSqlStat
p50920
tp50921
I1
s(g5974
I42
g5975
Vinsert
p50922
I33
VNullLiteral
p50923
tp50924
I1
s(g16248
I42
g16249
Vinsert
p50925
I43
VSimpleType: SQLCharExpr
p50926
tp50927
I2
s(g3631
I42
g3632
Vinsert
p50928
I42
VSimpleName: StatFilter
p50929
tp50930
I1
s(g20210
I42
g20211
Vinsert
p50931
I43
VSimpleType: DecryptException
p50932
tp50933
I1
s(g37577
I42
g37578
Vinsert
p50934
I43
VSimpleType: PhoenixStatementParser
p50935
tp50936
I1
s(g13911
I42
g13912
Vinsert
p50937
I21
VExpressionStatement
p50938
tp50939
I1
s(g7184
I42
g7185
Vinsert
p50940
I21
VExpressionStatement
p50941
tp50942
I80
s(g7673
I42
g7674
Vinsert
p50943
I45
VStringLiteral: "ADD"
p50944
tp50945
I1
s(g8969
I42
g8970
Vinsert
p50946
I83
VModifier: public
p50947
tp50948
I1
s(g3266
I42
g3267
Vinsert
p50949
I42
VSimpleName: ProfileEntry
p50950
tp50951
I1
s(g18187
I42
g18188
Vinsert
p50952
I60
VVariableDeclarationStatement
p50953
tp50954
I4
s(Vinsert
p50955
I42
VSimpleName: getConnection
p50956
Vinsert
p50957
I42
VSimpleName: test_2
p50958
tp50959
I1
s(g5040
I42
g5041
Vinsert
p50960
I8
VBlock
p50961
tp50962
I1
s(g856
I42
g857
Vinsert
p50963
I83
VModifier: public
p50964
tp50965
I1
s(g101
I42
g102
Vinsert
p50966
I40
VQualifiedName: ResultSet.CONCUR_UPDATABLE
p50967
tp50968
I1
s(g37973
I42
g37974
Vinsert
p50969
I43
VSimpleType: SQLExpr
p50970
tp50971
I9
s(g733
I42
g734
Vinsert
p50972
I14
VClassInstanceCreation
p50973
tp50974
I5
s(g7707
I42
g7708
Vinsert
p50975
I21
VExpressionStatement
p50976
tp50977
I2
s(g2824
I42
g2825
Vinsert
p50978
I42
VSimpleName: funcName
p50979
tp50980
I5
s(g35083
I42
g35084
Vinsert
p50981
I32
VMethodInvocation
p50982
tp50983
I284
s(g11516
I42
g11517
Vinsert
p50984
I42
VSimpleName: String
p50985
tp50986
I5
s(g8001
I42
g8002
Vinsert
p50987
I42
VSimpleName: resolvedTableSource
p50988
tp50989
I1
s(g34565
I42
g34566
Vinsert
p50990
I31
VMethodDeclaration
p50991
tp50992
I1
s(g8752
I42
g8753
Vinsert
p50993
I59
VVariableDeclarationFragment
p50994
tp50995
I1
s(g2469
I42
g2470
Vinsert
p50996
I42
VSimpleName: x
p50997
tp50998
I6
s(g464
I42
g465
Vinsert
p50999
I27
VInfixExpression: !=
p51000
tp51001
I1
s(g14155
I42
g14156
Vinsert
p51002
I42
VSimpleName: savepoint
p51003
tp51004
I1
s(g36895
I42
g36896
Vinsert
p51005
I42
VSimpleName: arguments
p51006
tp51007
I1
s(g18091
I42
g18092
Vinsert
p51008
I42
VSimpleName: getOrderByColumns
p51009
tp51010
I4
s(g8311
I42
g8312
Vinsert
p51011
I42
VSimpleName: SQLExpr
p51012
tp51013
I1
s(g23761
I42
g23762
Vinsert
p51014
I42
VSimpleName: config
p51015
tp51016
I2
s(g39635
I42
g39636
Vinsert
p51017
I42
VSimpleName: isSessionStatEnable
p51018
tp51019
I1
s(g32471
I42
g32472
Vinsert
p51020
I42
VSimpleName: lexer
p51021
tp51022
I16
s(g18078
I42
g18079
Vinsert
p51023
I45
VStringLiteral: "\u005ct\u005ct(com_code, CODE, NAME, status, sjcode\u005cn"
p51024
tp51025
I1
s(g25594
I42
g25595
Vinsert
p51026
I52
VThisExpression
p51027
tp51028
I2
s(g21643
I42
g21644
Vinsert
p51029
I42
VSimpleName: print
p51030
tp51031
I11
s(g4679
I42
g4680
Vinsert
p51032
I11
VCastExpression
p51033
tp51034
I1
s(g26143
I42
g26144
Vinsert
p51035
I62
VInstanceofExpression
p51036
tp51037
I1
s(g12938
I42
g12939
Vinsert
p51038
I8
VBlock
p51039
tp51040
I1
s(g5320
I42
g5321
Vinsert
p51041
I14
VClassInstanceCreation
p51042
tp51043
I5
s(g1294
I42
g1295
Vinsert
p51044
I40
VQualifiedName: com.alibaba.druid.proxy.DruidDriver
p51045
tp51046
I2
s(g25616
I42
g25617
Vinsert
p51047
I45
VStringLiteral: "FROM TB_002"
p51048
tp51049
I1
s(g10942
I42
g10943
Vinsert
p51050
I42
VSimpleName: SQLAlterTableDropColumnItem
p51051
tp51052
I1
s(g17816
I42
g17817
Vinsert
p51053
I42
VSimpleName: parser
p51054
tp51055
I6
s(g5277
I42
g5278
Vinsert
p51056
I42
VSimpleName: error
p51057
tp51058
I1
s(g39695
I42
g39696
Vinsert
p51059
I74
VParameterizedType: List<OracleHint>
p51060
tp51061
I1
s(g5564
I42
g5565
Vinsert
p51062
I70
VEnhancedForStatement
p51063
tp51064
I1
s(g9456
I42
g9457
Vinsert
p51065
I36
VParenthesizedExpression
p51066
tp51067
I1
s(g4409
I42
g4410
Vinsert
p51068
I59
VVariableDeclarationFragment
p51069
tp51070
I7
s(g4437
I42
g4438
Vinsert
p51071
I45
VStringLiteral: "select 1"
p51072
tp51073
I1
s(g28790
I42
g28791
Vinsert
p51074
I42
VSimpleName: items
p51075
tp51076
I1
s(g4258
I42
g4259
Vinsert
p51077
I27
VInfixExpression: !=
p51078
tp51079
I1
s(g3608
I42
g3609
Vinsert
p51080
I32
VMethodInvocation
p51081
tp51082
I13
s(g18648
I42
g18649
Vinsert
p51083
I83
VModifier: static
p51084
tp51085
I1
s(g2150
I42
g2151
Vinsert
p51086
I45
VStringLiteral: "select * from person where id = '3'/**/union select 0,1,v from (select 1,2,user/*!() as v*/) a where '1'<>''"
p51087
tp51088
I1
s(g31352
I42
g31353
Vinsert
p51089
I42
VSimpleName: visitor
p51090
tp51091
I1
s(g532
I42
g533
Vinsert
p51092
I32
VMethodInvocation
p51093
tp51094
I2
s(g31892
I42
g31893
Vinsert
p51095
I42
VSimpleName: nextToken
p51096
tp51097
I1
s(g27649
I42
g27650
Vinsert
p51098
I45
VStringLiteral: "\u005ctSELECT NULL, COUNT(*)\u005cn"
p51099
tp51100
I1
s(Vinsert
p51101
I42
VSimpleName: indexOf
p51102
Vinsert
p51103
I42
VSimpleName: comment
p51104
tp51105
I3
s(g2819
I42
g2820
Vinsert
p51106
I39
VPrimitiveType: void
p51107
tp51108
I1
s(g6871
I42
g6872
Vinsert
p51109
I45
VStringLiteral: "CONTINUE"
p51110
tp51111
I1
s(g21778
I42
g21779
Vinsert
p51112
I39
VPrimitiveType: int
p51113
tp51114
I1
s(g16289
I42
g16290
Vinsert
p51115
I42
VSimpleName: size
p51116
tp51117
I2
s(g191
I42
g192
Vinsert
p51118
I42
VSimpleName: MySqlIntervalExpr
p51119
tp51120
I2
s(g18871
I42
g18872
Vinsert
p51121
I43
VSimpleType: SQLOrderBy
p51122
tp51123
I2
s(g17301
I42
g17302
Vinsert
p51124
I41
VReturnStatement
p51125
tp51126
I2
s(g15397
I42
g15398
Vinsert
p51127
I42
VSimpleName: Reader
p51128
tp51129
I1
s(g9919
I42
g9920
Vinsert
p51130
I32
VMethodInvocation
p51131
tp51132
I9
s(g10571
I42
g10572
Vinsert
p51133
I42
VSimpleName: start
p51134
tp51135
I2
s(g11930
I42
g11931
Vinsert
p51136
I21
VExpressionStatement
p51137
tp51138
I1
s(g8038
I42
g8039
Vinsert
p51139
I42
VSimpleName: String
p51140
tp51141
I1
s(Vinsert
p51142
I42
VSimpleName: getContextClassLoader
p51143
Vinsert
p51144
I45
VStringLiteral: "bvt/parser/antlr_grammers_v4_plsql/examples-sql-script/"
p51145
tp51146
I1
s(g8238
I42
g8239
Vinsert
p51147
I42
VSimpleName: stat
p51148
tp51149
I4
s(g28785
I42
g28786
Vinsert
p51150
I45
VStringLiteral: "\u005cnVALUES"
p51151
tp51152
I4
s(g2563
I42
g2564
Vinsert
p51153
I8
VBlock
p51154
tp51155
I2
s(g22937
I42
g22938
Vinsert
p51156
I45
VStringLiteral: ") ENGINE=InnoDB AUTO_INCREMENT=1769503 DEFAULT CHARSET=utf8mb4 COMMENT='10000000'"
p51157
tp51158
I1
s(g5805
I42
g5806
Vinsert
p51159
I42
VSimpleName: testOnBorrow
p51160
tp51161
I2
s(Vinsert
p51162
I42
VSimpleName: createExprParser
p51163
Vinsert
p51164
I45
VStringLiteral: "number(*)"
p51165
tp51166
I1
s(g3103
I42
g3104
Vinsert
p51167
I54
VTryStatement
p51168
tp51169
I5
s(g20500
I42
g20501
Vinsert
p51170
I34
VNumberLiteral: 2
p51171
tp51172
I1
s(g2961
I42
g2962
Vinsert
p51173
I42
VSimpleName: assertNotNull
p51174
tp51175
I1
s(g11453
I42
g11454
Vinsert
p51176
I42
VSimpleName: createSchemaStatVisitor
p51177
tp51178
I7
s(g3179
I42
g3180
Vinsert
p51179
I42
VSimpleName: loadResource
p51180
tp51181
I6
s(g5007
I42
g5008
Vinsert
p51182
I42
VSimpleName: sql
p51183
tp51184
I1
s(g1496
I42
g1497
Vinsert
p51185
I45
VStringLiteral: "\u005cn FROM fund_base_cv_ad_auction_ocr_pv_tfs a"
p51186
tp51187
I2
s(g28221
I42
g28222
Vinsert
p51188
I8
VBlock
p51189
tp51190
I1
s(g4824
I42
g4825
Vinsert
p51191
I32
VMethodInvocation
p51192
tp51193
I1
s(g4116
I42
g4117
Vinsert
p51194
I42
VSimpleName: print
p51195
tp51196
I4
s(g2223
I42
g2224
Vinsert
p51197
I27
VInfixExpression: ||
p51198
tp51199
I1
s(g27459
I42
g27460
Vinsert
p51200
I45
VStringLiteral: "druid.timeBetweenLogStatsMillis"
p51201
tp51202
I1
s(g34423
I42
g34424
Vinsert
p51203
I59
VVariableDeclarationFragment
p51204
tp51205
I2
s(g26789
I42
g26790
Vinsert
p51206
I60
VVariableDeclarationStatement
p51207
tp51208
I141
s(g24125
I42
g24126
Vinsert
p51209
I41
VReturnStatement
p51210
tp51211
I3
s(g11033
I42
g11034
Vinsert
p51212
I42
VSimpleName: getEngine
p51213
tp51214
I2
s(g13818
I42
g13819
Vinsert
p51215
I42
VSimpleName: parseCreateProcedure
p51216
tp51217
I1
s(g38499
I42
g38500
Vinsert
p51218
I52
VThisExpression
p51219
tp51220
I4
s(g3898
I42
g3899
Vinsert
p51221
I42
VSimpleName: alias
p51222
tp51223
I2
s(g29658
I42
g29659
Vinsert
p51224
I43
VSimpleType: SQLName
p51225
tp51226
I19
s(g7937
I42
g7938
Vinsert
p51227
I43
VSimpleType: TeradataOutputVisitor
p51228
tp51229
I1
s(g3574
I42
g3575
Vinsert
p51230
I43
VSimpleType: ArrayList
p51231
tp51232
I1
s(g10726
I42
g10727
Vinsert
p51233
I39
VPrimitiveType: void
p51234
tp51235
I1
s(g11795
I42
g11796
Vinsert
p51236
I39
VPrimitiveType: boolean
p51237
tp51238
I1
s(g11516
I42
g11517
Vinsert
p51239
I45
VStringLiteral: "select * from (select * from t where id > 1 ) where rownum < 1000"
p51240
tp51241
I1
s(g7565
I42
g7566
Vinsert
p51242
I42
VSimpleName: SQLUseStatement
p51243
tp51244
I1
s(g11795
I42
g11796
Vinsert
p51245
I8
VBlock
p51246
tp51247
I2
s(g276
I42
g277
Vinsert
p51248
I8
VBlock
p51249
tp51250
I1
s(g7275
I42
g7276
Vinsert
p51251
I42
VSimpleName: PagerUtils
p51252
tp51253
I9
s(g15761
I42
g15762
Vinsert
p51254
I32
VMethodInvocation
p51255
tp51256
I10
s(g856
I42
g857
Vinsert
p51257
I43
VSimpleType: String
p51258
tp51259
I1
s(g1564
I42
g1565
Vinsert
p51260
I42
VSimpleName: getDefaultValue
p51261
tp51262
I1
s(g76
I42
g77
Vinsert
p51263
I14
VClassInstanceCreation
p51264
tp51265
I1
s(g11281
I42
g11282
Vinsert
p51266
I42
VSimpleName: hint2
p51267
tp51268
I1
s(g10498
I42
g10499
Vinsert
p51269
I42
VSimpleName: dataSource
p51270
tp51271
I1
s(g9743
I42
g9744
Vinsert
p51272
I42
VSimpleName: SQLIdentifierExpr
p51273
tp51274
I1
s(g3788
I42
g3789
Vinsert
p51275
I21
VExpressionStatement
p51276
tp51277
I2
s(Vinsert
p51278
I42
VSimpleName: assertSame
p51279
Vinsert
p51280
I45
VStringLiteral: "CREATE TABLE dbo.AO_B9A0F0_APPLIED_TEMPLATE ( ID INTEGER IDENTITY(1,1) NOT NULL, PROJECT_ID BIGINT CONSTRAINT df_AO_B9A0F0_APPLIED_TEMPLATE_PROJECT_ID DEFAULT 0, PROJECT_TEMPLATE_MODULE_KEY VARCHAR(255), PROJECT_TEMPLATE_WEB_ITEM_KEY VARCHAR(255), CONSTRAINT pk_AO_B9A0F0_APPLIED_TEMPLATE_ID PRIMARY KEY(ID) )"
p51281
tp51282
I1
s(g2997
I42
g2998
Vinsert
p51283
I59
VVariableDeclarationFragment
p51284
tp51285
I5
s(g5564
I42
g5565
Vinsert
p51286
I44
VSingleVariableDeclaration
p51287
tp51288
I1
s(g10824
I42
g10825
Vinsert
p51289
I42
VSimpleName: prefix
p51290
tp51291
I1
s(g15490
I42
g15491
Vinsert
p51292
I8
VBlock
p51293
tp51294
I26
s(Vinsert
p51295
I42
VSimpleName: isClosed
p51296
Vinsert
p51297
I42
VSimpleName: executeQuery
p51298
tp51299
I2
s(g13395
I42
g13396
Vinsert
p51300
I42
VSimpleName: a
p51301
tp51302
I1
s(g3447
I42
g3448
Vinsert
p51303
I42
VSimpleName: configLoader
p51304
tp51305
I2
s(g8547
I42
g8548
Vinsert
p51306
I43
VSimpleType: Properties
p51307
tp51308
I4
s(g14479
I42
g14480
Vinsert
p51309
I38
VPrefixExpression: !
p51310
tp51311
I1
s(g17633
I42
g17634
Vinsert
p51312
I42
VSimpleName: p2
p51313
tp51314
I5
s(g8873
I42
g8874
Vinsert
p51315
I32
VMethodInvocation
p51316
tp51317
I75
s(g3035
I42
g3036
Vinsert
p51318
I42
VSimpleName: x
p51319
tp51320
I1
s(Vinsert
p51321
I42
VSimpleName: visit
p51322
Vinsert
p51323
I42
VSimpleName: lockType
p51324
tp51325
I4
s(g1725
I42
g1726
Vinsert
p51326
I8
VBlock
p51327
tp51328
I1
s(g8350
I42
g8351
Vinsert
p51329
I42
VSimpleName: Throwable
p51330
tp51331
I1
s(g18796
I42
g18797
Vinsert
p51332
I40
VQualifiedName: x.name
p51333
tp51334
I1
s(g5782
I42
g5783
Vinsert
p51335
I42
VSimpleName: SQLPropertyExpr
p51336
tp51337
I1
s(g21561
I42
g21562
Vinsert
p51338
I42
VSimpleName: insertDataCountUpdater
p51339
tp51340
I1
s(g17467
I42
g17468
Vinsert
p51341
I52
VThisExpression
p51342
tp51343
I5
s(g6343
I42
g6344
Vinsert
p51344
I32
VMethodInvocation
p51345
tp51346
I2
s(Vinsert
p51347
I42
VSimpleName: get
p51348
Vinsert
p51349
I42
VSimpleName: leftResult
p51350
tp51351
I1
s(g32847
I42
g32848
Vinsert
p51352
I39
VPrimitiveType: void
p51353
tp51354
I36
s(g25207
I42
g25208
Vinsert
p51355
I42
VSimpleName: sql
p51356
tp51357
I3
s(g13277
I42
g13278
Vinsert
p51358
I42
VSimpleName: SQLAssignItem
p51359
tp51360
I5
s(g17670
I42
g17671
Vinsert
p51361
I34
VNumberLiteral: 1000
p51362
tp51363
I2
s(g2568
I42
g2569
Vinsert
p51364
I42
VSimpleName: opt
p51365
tp51366
I1
s(g12985
I42
g12986
Vinsert
p51367
I21
VExpressionStatement
p51368
tp51369
I4
s(Vinsert
p51370
I42
VSimpleName: getExecuteCount
p51371
Vinsert
p51372
I59
VVariableDeclarationFragment
p51373
tp51374
I1
s(Vinsert
p51375
I42
VSimpleName: substring
p51376
Vinsert
p51377
I43
VSimpleType: SQLAssignItem
p51378
tp51379
I1
s(g16359
I42
g16360
Vinsert
p51380
I45
VStringLiteral: " WITH PASSWORD = "
p51381
tp51382
I1
s(g6460
I42
g6461
Vinsert
p51383
I45
VStringLiteral: "WHERE db.db_key = bs.db_key"
p51384
tp51385
I1
s(g30113
I42
g30114
Vinsert
p51386
I42
VSimpleName: setDebug
p51387
tp51388
I1
s(g7427
I42
g7428
Vinsert
p51389
I42
VSimpleName: asciiStream
p51390
tp51391
I1
s(g8011
I42
g8012
Vinsert
p51392
I39
VPrimitiveType: int
p51393
tp51394
I2
s(g5017
I42
g5018
Vinsert
p51395
I60
VVariableDeclarationStatement
p51396
tp51397
I2
s(g3816
I42
g3817
Vinsert
p51398
I7
VAssignment: =
p51399
tp51400
I2
s(g21370
I42
g21371
Vinsert
p51401
I8
VBlock
p51402
tp51403
I1
s(g30945
I42
g30946
Vinsert
p51404
I9
VBooleanLiteral: false
p51405
tp51406
I1
s(g26393
I42
g26394
Vinsert
p51407
I36
VParenthesizedExpression
p51408
tp51409
I4
s(g6602
I42
g6603
Vinsert
p51410
I42
VSimpleName: setConditionExpr
p51411
tp51412
I1
s(g7678
I42
g7679
Vinsert
p51413
I42
VSimpleName: Appendable
p51414
tp51415
I1
s(g1471
I42
g1472
Vinsert
p51416
I1
VAnonymousClassDeclaration
p51417
tp51418
I7
s(Vinsert
p51419
I42
VSimpleName: parse
p51420
Vinsert
p51421
I42
VSimpleName: resultMap
p51422
tp51423
I2
s(g156
I42
g157
Vinsert
p51424
I42
VSimpleName: q
p51425
tp51426
I2
s(g7141
I42
g7142
Vinsert
p51427
I42
VSimpleName: i
p51428
tp51429
I3
s(g26334
I42
g26335
Vinsert
p51430
I43
VSimpleType: SQLBinaryOpExpr
p51431
tp51432
I2
s(g39992
I42
g39993
Vinsert
p51433
I39
VPrimitiveType: void
p51434
tp51435
I1
s(Vinsert
p51436
I42
VSimpleName: accept0
p51437
Vinsert
p51438
I42
VSimpleName: parameters
p51439
tp51440
I1
s(g27315
I42
g27316
Vinsert
p51441
I27
VInfixExpression: -
p51442
tp51443
I1
s(g28772
I42
g28773
Vinsert
p51444
I42
VSimpleName: MySqlShowKeysStatement
p51445
tp51446
I1
s(g44390
I42
g44391
Vinsert
p51447
I42
VSimpleName: OracleSelectQueryBlock
p51448
tp51449
I4
s(g8627
I42
g8628
Vinsert
p51450
I42
VSimpleName: SQLExpr
p51451
tp51452
I1
s(g47849
I42
g47850
Vinsert
p51453
I43
VSimpleType: DB2OutputVisitor
p51454
tp51455
I3
s(g31892
I42
g31893
Vinsert
p51456
I42
VSimpleName: queryBlock
p51457
tp51458
I1
s(g32782
I42
g32783
Vinsert
p51459
I40
VQualifiedName: com.alibaba.druid.sql.ast.SQLExprImpl
p51460
tp51461
I1
s(g12069
I42
g12070
Vinsert
p51462
I42
VSimpleName: stmt
p51463
tp51464
I8
s(g7288
I42
g7289
Vinsert
p51465
I21
VExpressionStatement
p51466
tp51467
I1
s(g28896
I42
g28897
Vinsert
p51468
I45
VStringLiteral: "syntax error, token: "
p51469
tp51470
I1
s(g4144
I42
g4145
Vinsert
p51471
I7
VAssignment: =
p51472
tp51473
I1
s(g44300
I42
g44301
Vinsert
p51474
I45
VStringLiteral: "WITH (SNAPSHOT)   \u005cn"
p51475
tp51476
I1
s(g37790
I42
g37791
Vinsert
p51477
I42
VSimpleName: get
p51478
tp51479
I6
s(g1165
I42
g1166
Vinsert
p51480
I42
VSimpleName: parseTableSourceRest
p51481
tp51482
I1
s(Vinsert
p51483
I42
VSimpleName: visit
p51484
Vinsert
p51485
I42
VSimpleName: spStatement
p51486
tp51487
I1
s(g6684
I42
g6685
Vinsert
p51488
I42
VSimpleName: user
p51489
tp51490
I2
s(g21856
I42
g21857
Vinsert
p51491
I42
VSimpleName: Assert
p51492
tp51493
I2
s(g24051
I42
g24052
Vinsert
p51494
I14
VClassInstanceCreation
p51495
tp51496
I2
s(g31672
I42
g31673
Vinsert
p51497
I45
VStringLiteral: " STORAGE "
p51498
tp51499
I1
s(g47437
I42
g47438
Vinsert
p51500
I42
VSimpleName: setDbType
p51501
tp51502
I1
s(g20046
I42
g20047
Vinsert
p51503
I43
VSimpleType: MySqlRenameTableStatement.Item
p51504
tp51505
I2
s(g2573
I42
g2574
Vinsert
p51506
I43
VSimpleType: OdpsSchemaStatVisitor
p51507
tp51508
I6
s(g6511
I42
g6512
Vinsert
p51509
I42
VSimpleName: where
p51510
tp51511
I4
s(g2248
I42
g2249
Vinsert
p51512
I42
VSimpleName: getName
p51513
tp51514
I1
s(g42357
I42
g42358
Vinsert
p51515
I49
VSwitchCase
p51516
tp51517
I3
s(g49746
I42
g49747
Vinsert
p51518
I43
VSimpleType: DB2SchemaStatVisitor
p51519
tp51520
I4
s(g8969
I42
g8970
Vinsert
p51521
I8
VBlock
p51522
tp51523
I1
s(g13437
I42
g13438
Vinsert
p51524
I45
VStringLiteral: "FROM sup_registration supReg\u005cn"
p51525
tp51526
I1
s(g30575
I42
g30576
Vinsert
p51527
I83
VModifier: public
p51528
tp51529
I1
s(g753
I42
g754
Vinsert
p51530
I43
VSimpleType: Object
p51531
tp51532
I1
s(g32107
I42
g32108
Vinsert
p51533
I59
VVariableDeclarationFragment
p51534
tp51535
I3
s(g37790
I42
g37791
Vinsert
p51536
I32
VMethodInvocation
p51537
tp51538
I1
s(g5053
I42
g5054
Vinsert
p51539
I42
VSimpleName: utilClass
p51540
tp51541
I2
s(g16943
I42
g16944
Vinsert
p51542
I7
VAssignment: =
p51543
tp51544
I10
s(g49981
I42
g49982
Vinsert
p51545
I40
VQualifiedName: joinType.name_lcase
p51546
tp51547
I1
s(g351
I42
g352
Vinsert
p51548
I45
VStringLiteral: ", driver "
p51549
tp51550
I1
s(g29658
I42
g29659
Vinsert
p51551
I21
VExpressionStatement
p51552
tp51553
I29
s(g10765
I42
g10766
Vinsert
p51554
I32
VMethodInvocation
p51555
tp51556
I6
s(g3659
I42
g3660
Vinsert
p51557
I32
VMethodInvocation
p51558
tp51559
I2
s(g20215
I42
g20216
Vinsert
p51560
I7
VAssignment: =
p51561
tp51562
I1
s(g19139
I42
g19140
Vinsert
p51563
I21
VExpressionStatement
p51564
tp51565
I1
s(g4982
I42
g4983
Vinsert
p51566
I42
VSimpleName: x
p51567
tp51568
I2
s(g45751
I42
g45752
Vinsert
p51569
I42
VSimpleName: backet
p51570
tp51571
I1
s(g7751
I42
g7752
Vinsert
p51572
I32
VMethodInvocation
p51573
tp51574
I2
s(g6343
I42
g6344
Vinsert
p51575
I14
VClassInstanceCreation
p51576
tp51577
I2
s(g32069
I42
g32070
Vinsert
p51578
I7
VAssignment: =
p51579
tp51580
I1
s(g2596
I42
g2597
Vinsert
p51581
I9
VBooleanLiteral: true
p51582
tp51583
I1
s(g5772
I42
g5773
Vinsert
p51584
I42
VSimpleName: assertEquals
p51585
tp51586
I1
s(g2383
I42
g2384
Vinsert
p51587
I42
VSimpleName: DruidDataSource
p51588
tp51589
I1
s(g3169
I42
g3170
Vinsert
p51590
I42
VSimpleName: lexer
p51591
tp51592
I33
s(g29522
I42
g29523
Vinsert
p51593
I60
VVariableDeclarationStatement
p51594
tp51595
I7
s(g5282
I42
g5283
Vinsert
p51596
I42
VSimpleName: setDelay
p51597
tp51598
I1
s(g13996
I42
g13997
Vinsert
p51599
I42
VSimpleName: nextToken
p51600
tp51601
I1
s(g23031
I42
g23032
Vinsert
p51602
I54
VTryStatement
p51603
tp51604
I1
s(g4188
I42
g4189
Vinsert
p51605
I43
VSimpleType: List
p51606
tp51607
I2
s(g9934
I42
g9935
Vinsert
p51608
I42
VSimpleName: setName
p51609
tp51610
I1
s(g51375
I42
g51376
Vinsert
p51611
I62
VInstanceofExpression
p51612
tp51613
I2
s(Vinsert
p51614
I42
VSimpleName: loadClass
p51615
Vinsert
p51616
I44
VSingleVariableDeclaration
p51617
tp51618
I2
s(g14896
I42
g14897
Vinsert
p51619
I42
VSimpleName: WallVisitorUtils
p51620
tp51621
I1
s(g22603
I42
g22604
Vinsert
p51622
I42
VSimpleName: String
p51623
tp51624
I1
s(g9534
I42
g9535
Vinsert
p51625
I31
VMethodDeclaration
p51626
tp51627
I1
s(g20210
I42
g20211
Vinsert
p51628
I42
VSimpleName: parameters
p51629
tp51630
I1
s(g6375
I42
g6376
Vinsert
p51631
I34
VNumberLiteral: 3
p51632
tp51633
I1
s(g12278
I42
g12279
Vinsert
p51634
I42
VSimpleName: getCursorName
p51635
tp51636
I1
s(g6760
I42
g6761
Vinsert
p51637
I59
VVariableDeclarationFragment
p51638
tp51639
I2
s(g24649
I42
g24650
Vinsert
p51640
I21
VExpressionStatement
p51641
tp51642
I2
s(Vinsert
p51643
I42
VSimpleName: add
p51644
Vinsert
p51645
I42
VSimpleName: token
p51646
tp51647
I4
s(g12159
I42
g12160
Vinsert
p51648
I42
VSimpleName: getClass
p51649
tp51650
I1
s(g24102
I42
g24103
Vinsert
p51651
I42
VSimpleName: method
p51652
tp51653
I2
s(g24641
I42
g24642
Vinsert
p51654
I42
VSimpleName: getIdentity
p51655
tp51656
I1
s(g3544
I42
g3545
Vinsert
p51657
I45
VStringLiteral: "\u005ct\u005ctfrom openapp_log_d\u005cn"
p51658
tp51659
I1
s(g41270
I42
g41271
Vinsert
p51660
I45
VStringLiteral: "SKIP "
p51661
tp51662
I1
s(g13789
I42
g13790
Vinsert
p51663
I42
VSimpleName: nextToken
p51664
tp51665
I1
s(g5143
I42
g5144
Vinsert
p51666
I43
VSimpleType: ConnectionEvent
p51667
tp51668
I1
s(Vinsert
p51669
I42
VSimpleName: getExpr
p51670
Vinsert
p51671
I42
VSimpleName: SQLInListExpr
p51672
tp51673
I1
s(g15745
I42
g15746
Vinsert
p51674
I45
VStringLiteral: "id"
p51675
tp51676
I1
s(g26581
I42
g26582
Vinsert
p51677
I43
VSimpleType: String
p51678
tp51679
I1
s(g19152
I42
g19153
Vinsert
p51680
I32
VMethodInvocation
p51681
tp51682
I18
s(g2702
I42
g2703
Vinsert
p51683
I42
VSimpleName: accept
p51684
tp51685
I1
s(g9534
I42
g9535
Vinsert
p51686
I42
VSimpleName: stmtHolder
p51687
tp51688
I3
s(g21686
I42
g21687
Vinsert
p51689
I32
VMethodInvocation
p51690
tp51691
I2
s(g3022
I42
g3023
Vinsert
p51692
I41
VReturnStatement
p51693
tp51694
I1
s(g20782
I42
g20783
Vinsert
p51695
I74
VParameterizedType: ArrayList<SQLName>
p51696
tp51697
I1
s(g17550
I42
g17551
Vinsert
p51698
I43
VSimpleType: PreparedStatementKey
p51699
tp51700
I1
s(g24278
I42
g24279
Vinsert
p51701
I32
VMethodInvocation
p51702
tp51703
I18
s(g22193
I42
g22194
Vinsert
p51704
I41
VReturnStatement
p51705
tp51706
I1
s(g22009
I42
g22010
Vinsert
p51707
I43
VSimpleType: SQLBinaryOpExpr
p51708
tp51709
I7
s(g6298
I42
g6299
Vinsert
p51710
I60
VVariableDeclarationStatement
p51711
tp51712
I4
s(g5854
I42
g5855
Vinsert
p51713
I21
VExpressionStatement
p51714
tp51715
I1
s(g37744
I42
g37745
Vinsert
p51716
I42
VSimpleName: MySqlSQLColumnDefinition
p51717
tp51718
I2
s(g47511
I42
g47512
Vinsert
p51719
I9
VBooleanLiteral: false
p51720
tp51721
I2
s(g15818
I42
g15819
Vinsert
p51722
I43
VSimpleType: Object
p51723
tp51724
I1
s(g18187
I42
g18188
Vinsert
p51725
I32
VMethodInvocation
p51726
tp51727
I4
s(Vinsert
p51728
I42
VSimpleName: incrementAndGet
p51729
Vinsert
p51730
I42
VSimpleName: incrementCachedPreparedStatementDeleteCount
p51731
tp51732
I1
s(g25721
I42
g25722
Vinsert
p51733
I33
VNullLiteral
p51734
tp51735
I4
s(g17861
I42
g17862
Vinsert
p51736
I14
VClassInstanceCreation
p51737
tp51738
I1
s(g1627
I42
g1628
Vinsert
p51739
I8
VBlock
p51740
tp51741
I3
s(g40525
I42
g40526
Vinsert
p51742
I22
VFieldAccess
p51743
tp51744
I20
s(g24954
I42
g24955
Vinsert
p51745
I42
VSimpleName: SQLSelectQueryBlock
p51746
tp51747
I2
s(g2125
I42
g2126
Vinsert
p51748
I42
VSimpleName: put
p51749
tp51750
I1
s(g5648
I42
g5649
Vinsert
p51751
I33
VNullLiteral
p51752
tp51753
I2
s(g5826
I42
g5827
Vinsert
p51754
I32
VMethodInvocation
p51755
tp51756
I6
s(g12888
I42
g12889
Vinsert
p51757
I60
VVariableDeclarationStatement
p51758
tp51759
I371
s(g42013
I42
g42014
Vinsert
p51760
I14
VClassInstanceCreation
p51761
tp51762
I1
s(g876
I42
g877
Vinsert
p51763
I32
VMethodInvocation
p51764
tp51765
I549
s(g642
I42
g643
Vinsert
p51766
I42
VSimpleName: HINT
p51767
tp51768
I2
s(g3780
I42
g3781
Vinsert
p51769
I31
VMethodDeclaration
p51770
tp51771
I2
s(g19396
I42
g19397
Vinsert
p51772
I45
VStringLiteral: "\u005cnFROM ("
p51773
tp51774
I1
s(g16
I42
g17
Vinsert
p51775
I39
VPrimitiveType: void
p51776
tp51777
I4
s(g11880
I42
g11881
Vinsert
p51778
I45
VStringLiteral: "\u005cn\u005ctPARTITION asia VALUES ('CHINA', 'THAILAND'), "
p51779
tp51780
I2
s(g24750
I42
g24751
Vinsert
p51781
I42
VSimpleName: alias2
p51782
tp51783
I1
s(g33098
I42
g33099
Vinsert
p51784
I45
VStringLiteral: "druid.globalDbType"
p51785
tp51786
I1
s(g4015
I42
g4016
Vinsert
p51787
I42
VSimpleName: SQLException
p51788
tp51789
I1
s(g16107
I42
g16108
Vinsert
p51790
I27
VInfixExpression: !=
p51791
tp51792
I1
s(g5648
I42
g5649
Vinsert
p51793
I25
VIfStatement
p51794
tp51795
I2
s(g21212
I42
g21213
Vinsert
p51796
I42
VSimpleName: v
p51797
tp51798
I2
s(g9243
I42
g9244
Vinsert
p51799
I42
VSimpleName: lateralViewTabSrc
p51800
tp51801
I2
s(g37260
I42
g37261
Vinsert
p51802
I45
VStringLiteral: "ANTI"
p51803
tp51804
I1
s(g12600
I42
g12601
Vinsert
p51805
I48
VSuperMethodInvocation
p51806
tp51807
I1
s(Vinsert
p51808
I42
VSimpleName: assertEquals
p51809
Vinsert
p51810
I42
VSimpleName: statement
p51811
tp51812
I4
s(g7537
I42
g7538
Vinsert
p51813
I8
VBlock
p51814
tp51815
I1
s(g5959
I42
g5960
Vinsert
p51816
I21
VExpressionStatement
p51817
tp51818
I5
s(g9428
I42
g9429
Vinsert
p51819
I39
VPrimitiveType: boolean
p51820
tp51821
I9
s(g4055
I42
g4056
Vinsert
p51822
I42
VSimpleName: statement
p51823
tp51824
I1
s(g26548
I42
g26549
Vinsert
p51825
I42
VSimpleName: passwordBytes
p51826
tp51827
I1
s(g2344
I42
g2345
Vinsert
p51828
I42
VSimpleName: setType
p51829
tp51830
I3
s(g4227
I42
g4228
Vinsert
p51831
I42
VSimpleName: intVal
p51832
tp51833
I1
s(g6270
I42
g6271
Vinsert
p51834
I42
VSimpleName: SQLPropertyExpr
p51835
tp51836
I1
s(g12159
I42
g12160
Vinsert
p51837
I36
VParenthesizedExpression
p51838
tp51839
I1
s(Vinsert
p51840
I42
VSimpleName: name_hash_lower
p51841
Vinsert
p51842
I43
VSimpleType: SQLPropertyExpr
p51843
tp51844
I1
s(g15367
I42
g15368
Vinsert
p51845
I42
VSimpleName: loadClass
p51846
tp51847
I1
s(g17628
I42
g17629
Vinsert
p51848
I8
VBlock
p51849
tp51850
I1
s(g1617
I42
g1618
Vinsert
p51851
I8
VBlock
p51852
tp51853
I1
s(g9380
I42
g9381
Vinsert
p51854
I8
VBlock
p51855
tp51856
I1
s(g2314
I42
g2315
Vinsert
p51857
I42
VSimpleName: unresolveList
p51858
tp51859
I3
s(g321
I42
g322
Vinsert
p51860
I43
VSimpleType: String
p51861
tp51862
I3
s(g45686
I42
g45687
Vinsert
p51863
I42
VSimpleName: denyStat
p51864
tp51865
I1
s(g7547
I42
g7548
Vinsert
p51866
I45
VStringLiteral: "\u005ctc_int int(11),\u005cn"
p51867
tp51868
I2
s(g2383
I42
g2384
Vinsert
p51869
I21
VExpressionStatement
p51870
tp51871
I2
s(Vinsert
p51872
I42
VSimpleName: visit
p51873
Vinsert
p51874
I42
VSimpleName: cascade
p51875
tp51876
I2
s(g5007
I42
g5008
Vinsert
p51877
I31
VMethodDeclaration
p51878
tp51879
I1
s(g14139
I42
g14140
Vinsert
p51880
I42
VSimpleName: Map
p51881
tp51882
I3
s(g9919
I42
g9920
Vinsert
p51883
I42
VSimpleName: query
p51884
tp51885
I1
s(g11217
I42
g11218
Vinsert
p51886
I31
VMethodDeclaration
p51887
tp51888
I2
s(g11745
I42
g11746
Vinsert
p51889
I34
VNumberLiteral: 0L
p51890
tp51891
I1
s(g9519
I42
g9520
Vinsert
p51892
I42
VSimpleName: prepare
p51893
tp51894
I1
s(g12791
I42
g12792
Vinsert
p51895
I42
VSimpleName: print
p51896
tp51897
I7
s(Vinsert
p51898
I42
VSimpleName: toSQLString
p51899
Vinsert
p51900
I45
VStringLiteral: "WITH CHECK OPTION;"
p51901
tp51902
I1
s(g6645
I42
g6646
Vinsert
p51903
I40
VQualifiedName: JdbcConstants.ORACLE
p51904
tp51905
I41
s(g20475
I42
g20476
Vinsert
p51906
I42
VSimpleName: stmt
p51907
tp51908
I1
s(g4477
I42
g4478
Vinsert
p51909
I43
VSimpleType: SQLLexer
p51910
tp51911
I2
s(g356
I42
g357
Vinsert
p51912
I34
VNumberLiteral: 0
p51913
tp51914
I2
s(g2299
I42
g2300
Vinsert
p51915
I42
VSimpleName: SQLExpr
p51916
tp51917
I3
s(g9529
I42
g9530
Vinsert
p51918
I59
VVariableDeclarationFragment
p51919
tp51920
I1
s(g17379
I42
g17380
Vinsert
p51921
I52
VThisExpression
p51922
tp51923
I2
s(g3144
I42
g3145
Vinsert
p51924
I45
VStringLiteral: "OPTIMIZE "
p51925
tp51926
I1
s(g4579
I42
g4580
Vinsert
p51927
I27
VInfixExpression: &&
p51928
tp51929
I1
s(g4903
I42
g4904
Vinsert
p51930
I42
VSimpleName: driver
p51931
tp51932
I4
s(g12791
I42
g12792
Vinsert
p51933
I42
VSimpleName: size
p51934
tp51935
I1
s(g50497
I42
g50498
Vinsert
p51936
I45
VStringLiteral: "ds string, -- c_1"
p51937
tp51938
I1
s(g6375
I42
g6376
Vinsert
p51939
I27
VInfixExpression: !=
p51940
tp51941
I2
s(g6375
I42
g6376
Vinsert
p51942
I60
VVariableDeclarationStatement
p51943
tp51944
I1
s(g14605
I42
g14606
Vinsert
p51945
I42
VSimpleName: getProperty
p51946
tp51947
I1
s(g4160
I42
g4161
Vinsert
p51948
I41
VReturnStatement
p51949
tp51950
I2
s(g33004
I42
g33005
Vinsert
p51951
I74
VParameterizedType: AtomicLongFieldUpdater<WallSqlStat>
p51952
tp51953
I1
s(g27350
I42
g27351
Vinsert
p51954
I42
VSimpleName: createSchemaStatVisitor
p51955
tp51956
I35
s(g9041
I42
g9042
Vinsert
p51957
I42
VSimpleName: print
p51958
tp51959
I4
s(g13001
I42
g13002
Vinsert
p51960
I25
VIfStatement
p51961
tp51962
I3
s(g30855
I42
g30856
Vinsert
p51963
I42
VSimpleName: OracleExceptionSorter
p51964
tp51965
I1
s(Vinsert
p51966
I42
VSimpleName: setDriver
p51967
Vinsert
p51968
I42
VSimpleName: executeQuery
p51969
tp51970
I1
s(g15818
I42
g15819
Vinsert
p51971
I60
VVariableDeclarationStatement
p51972
tp51973
I1
s(g861
I42
g862
Vinsert
p51974
I42
VSimpleName: selectQuery
p51975
tp51976
I1
s(g3967
I42
g3968
Vinsert
p51977
I25
VIfStatement
p51978
tp51979
I1
s(Vinsert
p51980
I42
VSimpleName: append
p51981
Vinsert
p51982
I42
VSimpleName: over
p51983
tp51984
I2
s(g9267
I42
g9268
Vinsert
p51985
I44
VSingleVariableDeclaration
p51986
tp51987
I1
s(Vinsert
p51988
I42
VSimpleName: clone
p51989
Vinsert
p51990
I42
VSimpleName: duplicateKeyUpdate
p51991
tp51992
I1
s(g8222
I42
g8223
Vinsert
p51993
I42
VSimpleName: c
p51994
tp51995
I2
s(g3664
I42
g3665
Vinsert
p51996
I42
VSimpleName: ucase
p51997
tp51998
I1
s(g4568
I42
g4569
Vinsert
p51999
I42
VSimpleName: SQLSelectItem
p52000
tp52001
I3
s(g5685
I42
g5686
Vinsert
p52002
I59
VVariableDeclarationFragment
p52003
tp52004
I2
s(g48201
I42
g48202
Vinsert
p52005
I7
VAssignment: =
p52006
tp52007
I1
s(Vinsert
p52008
I42
VSimpleName: visit
p52009
Vinsert
p52010
I42
VSimpleName: lockMode
p52011
tp52012
I1
s(g2183
I42
g2184
Vinsert
p52013
I42
VSimpleName: str
p52014
tp52015
I1
s(g18113
I42
g18114
Vinsert
p52016
I43
VSimpleType: OracleCreateSynonymStatement
p52017
tp52018
I2
s(g1820
I42
g1821
Vinsert
p52019
I42
VSimpleName: visit
p52020
tp52021
I1
s(g30575
I42
g30576
Vinsert
p52022
I42
VSimpleName: SQLExpr
p52023
tp52024
I1
s(Vinsert
p52025
I42
VSimpleName: getProperty
p52026
Vinsert
p52027
I45
VStringLiteral: "druid.config.encryptedPassword"
p52028
tp52029
I1
s(Vinsert
p52030
I42
VSimpleName: setParent
p52031
Vinsert
p52032
I42
VSimpleName: setFor
p52033
tp52034
I2
s(g18763
I42
g18764
Vinsert
p52035
I42
VSimpleName: K
p52036
tp52037
I1
s(g7697
I42
g7698
Vinsert
p52038
I45
VStringLiteral: "\u005ct)\u005cn"
p52039
tp52040
I1
s(g9524
I42
g9525
Vinsert
p52041
I45
VStringLiteral: "\u005ct\u005ct\u005ctitem_it\u005cn"
p52042
tp52043
I1
s(g16060
I42
g16061
Vinsert
p52044
I42
VSimpleName: print0
p52045
tp52046
I1
s(g2765
I42
g2766
Vinsert
p52047
I21
VExpressionStatement
p52048
tp52049
I2
s(g9089
I42
g9090
Vinsert
p52050
I40
VQualifiedName: JdbcConstants.ELASTIC_SEARCH
p52051
tp52052
I1
s(g3674
I42
g3675
Vinsert
p52053
I42
VSimpleName: print0
p52054
tp52055
I2
s(g7702
I42
g7703
Vinsert
p52056
I42
VSimpleName: x
p52057
tp52058
I2
s(g26789
I42
g26790
Vinsert
p52059
I43
VSimpleType: SQLSetStatement
p52060
tp52061
I2
s(g11706
I42
g11707
Vinsert
p52062
I42
VSimpleName: maxWaitThreadCount
p52063
tp52064
I2
s(g27331
I42
g27332
Vinsert
p52065
I43
VSimpleType: WebAppStat
p52066
tp52067
I3
s(g8006
I42
g8007
Vinsert
p52068
I27
VInfixExpression: &&
p52069
tp52070
I1
s(g577
I42
g578
Vinsert
p52071
I32
VMethodInvocation
p52072
tp52073
I19
s(g13429
I42
g13430
Vinsert
p52074
I42
VSimpleName: hint
p52075
tp52076
I8
s(g39564
I42
g39565
Vinsert
p52077
I45
VStringLiteral: "\u005cn\u005ctdisable lifecycle;"
p52078
tp52079
I1
s(g11453
I42
g11454
Vinsert
p52080
I42
VSimpleName: SQLUtils
p52081
tp52082
I7
s(g5787
I42
g5788
Vinsert
p52083
I42
VSimpleName: DruidDataSource
p52084
tp52085
I1
s(g336
I42
g337
Vinsert
p52086
I43
VSimpleType: SQLIdentifierExpr
p52087
tp52088
I1
s(g20411
I42
g20412
Vinsert
p52089
I33
VNullLiteral
p52090
tp52091
I1
s(g10239
I42
g10240
Vinsert
p52092
I39
VPrimitiveType: int
p52093
tp52094
I5
s(Vinsert
p52095
I42
VSimpleName: close
p52096
Vinsert
p52097
I42
VSimpleName: Error
p52098
tp52099
I1
s(Vinsert
p52100
I42
VSimpleName: get
p52101
Vinsert
p52102
I42
VSimpleName: getColumnClassName
p52103
tp52104
I1
s(g19686
I42
g19687
Vinsert
p52105
I83
VModifier: private
p52106
tp52107
I3
s(g6475
I42
g6476
Vinsert
p52108
I32
VMethodInvocation
p52109
tp52110
I2
s(g419
I42
g420
Vinsert
p52111
I27
VInfixExpression: ==
p52112
tp52113
I1
s(g10784
I42
g10785
Vinsert
p52114
I42
VSimpleName: x
p52115
tp52116
I1
s(g201
I42
g202
Vinsert
p52117
I27
VInfixExpression: !=
p52118
tp52119
I1
s(g482
I42
g483
Vinsert
p52120
I42
VSimpleName: SQLServerSchemaStatVisitor
p52121
tp52122
I44
s(g12082
I42
g12083
Vinsert
p52123
I43
VSimpleType: SQLStatement
p52124
tp52125
I1
s(g5022
I42
g5023
Vinsert
p52126
I45
VStringLiteral: "\u005cn\u005ct\u005ct\u005ct\u005ctSELECT 50, 77"
p52127
tp52128
I1
s(g47814
I42
g47815
Vinsert
p52129
I40
VQualifiedName: Token.LOOP
p52130
tp52131
I1
s(g39640
I42
g39641
Vinsert
p52132
I45
VStringLiteral: "CREATE TABLE students ("
p52133
tp52134
I2
s(g15407
I42
g15408
Vinsert
p52135
I43
VSimpleType: SQLAlterTableDropKey
p52136
tp52137
I1
s(g18065
I42
g18066
Vinsert
p52138
I27
VInfixExpression: !=
p52139
tp52140
I1
s(Vinsert
p52141
I42
VSimpleName: length
p52142
Vinsert
p52143
I85
VDimension
p52144
tp52145
I1
s(g11634
I42
g11635
Vinsert
p52146
I42
VSimpleName: Exception
p52147
tp52148
I1
s(g3495
I42
g3496
Vinsert
p52149
I32
VMethodInvocation
p52150
tp52151
I13
s(Vinsert
p52152
I42
VSimpleName: limit
p52153
Vinsert
p52154
I45
VStringLiteral: "select * from t1 union select * from t2"
p52155
tp52156
I3
s(g9259
I42
g9260
Vinsert
p52157
I42
VSimpleName: loadClass
p52158
tp52159
I1
s(g16888
I42
g16889
Vinsert
p52160
I8
VBlock
p52161
tp52162
I1
s(g3355
I42
g3356
Vinsert
p52163
I5
VArrayType: byte[]
p52164
tp52165
I2
s(g1180
I42
g1181
Vinsert
p52166
I42
VSimpleName: addUser
p52167
tp52168
I2
s(g21450
I42
g21451
Vinsert
p52169
I42
VSimpleName: getTableOptions
p52170
tp52171
I1
s(g32202
I42
g32203
Vinsert
p52172
I45
VStringLiteral: "SELECT gid, kind, mapid, poi_id, telephone\u005cn"
p52173
tp52174
I1
s(g1898
I42
g1899
Vinsert
p52175
I50
VSwitchStatement
p52176
tp52177
I1
s(g2248
I42
g2249
Vinsert
p52178
I59
VVariableDeclarationFragment
p52179
tp52180
I2
s(g10116
I42
g10117
Vinsert
p52181
I14
VClassInstanceCreation
p52182
tp52183
I1
s(g20306
I42
g20307
Vinsert
p52184
I42
VSimpleName: item
p52185
tp52186
I2
s(g13196
I42
g13197
Vinsert
p52187
I31
VMethodDeclaration
p52188
tp52189
I1
s(g13593
I42
g13594
Vinsert
p52190
I42
VSimpleName: setRemoveAbandonedTimeout
p52191
tp52192
I1
s(g21612
I42
g21613
Vinsert
p52193
I45
VStringLiteral: "5'TW'"
p52194
tp52195
I1
s(g36179
I42
g36180
Vinsert
p52196
I83
VModifier: public
p52197
tp52198
I4
s(g24051
I42
g24052
Vinsert
p52199
I59
VVariableDeclarationFragment
p52200
tp52201
I6
s(g19888
I42
g19889
Vinsert
p52202
I42
VSimpleName: getInherits
p52203
tp52204
I1
s(g30060
I42
g30061
Vinsert
p52205
I34
VNumberLiteral: 32
p52206
tp52207
I1
s(g1790
I42
g1791
Vinsert
p52208
I42
VSimpleName: columnIndex
p52209
tp52210
I1
s(g2125
I42
g2126
Vinsert
p52211
I42
VSimpleName: getProfiletat
p52212
tp52213
I1
s(g12547
I42
g12548
Vinsert
p52214
I42
VSimpleName: value
p52215
tp52216
I5
s(g9959
I42
g9960
Vinsert
p52217
I32
VMethodInvocation
p52218
tp52219
I7
s(g16107
I42
g16108
Vinsert
p52220
I42
VSimpleName: x
p52221
tp52222
I2
s(g28885
I42
g28886
Vinsert
p52223
I42
VSimpleName: CompareOp
p52224
tp52225
I1
s(g2294
I42
g2295
Vinsert
p52226
I45
VStringLiteral: " ROWS BETWEEN "
p52227
tp52228
I1
s(g8648
I42
g8649
Vinsert
p52229
I43
VSimpleType: Class
p52230
tp52231
I2
s(g20470
I42
g20471
Vinsert
p52232
I32
VMethodInvocation
p52233
tp52234
I4
s(g15294
I42
g15295
Vinsert
p52235
I42
VSimpleName: setPassword
p52236
tp52237
I1
s(g26985
I42
g26986
Vinsert
p52238
I42
VSimpleName: statements
p52239
tp52240
I3
s(g8075
I42
g8076
Vinsert
p52241
I42
VSimpleName: lexer
p52242
tp52243
I1
s(g1685
I42
g1686
Vinsert
p52244
I42
VSimpleName: txtConnecting
p52245
tp52246
I1
s(g4088
I42
g4089
Vinsert
p52247
I32
VMethodInvocation
p52248
tp52249
I2
s(g1958
I42
g1959
Vinsert
p52250
I45
VStringLiteral: "\u005ct\u005ct\u005ctFREELISTS 1\u005cn"
p52251
tp52252
I6
s(g9089
I42
g9090
Vinsert
p52253
I42
VSimpleName: Exception
p52254
tp52255
I3
s(g8734
I42
g8735
Vinsert
p52256
I21
VExpressionStatement
p52257
tp52258
I4
s(g13437
I42
g13438
Vinsert
p52259
I45
VStringLiteral: "\u005ct\u005ct\u005ctINNER JOIN sys_org so ON st.orgid = so.orgid \u005cn"
p52260
tp52261
I1
s(g16060
I42
g16061
Vinsert
p52262
I45
VStringLiteral: " maxvalue "
p52263
tp52264
I1
s(g9028
I42
g9029
Vinsert
p52265
I42
VSimpleName: getObjno
p52266
tp52267
I1
s(g35631
I42
g35632
Vinsert
p52268
I43
VSimpleType: IllegalAccessException
p52269
tp52270
I2
s(g33018
I42
g33019
Vinsert
p52271
I42
VSimpleName: where
p52272
tp52273
I1
s(g19573
I42
g19574
Vinsert
p52274
I42
VSimpleName: Thread
p52275
tp52276
I1
s(g12082
I42
g12083
Vinsert
p52277
I42
VSimpleName: stmt
p52278
tp52279
I1
s(g48526
I42
g48527
Vinsert
p52280
I45
VStringLiteral: "SELECT brand, size, sum(sales) FROM items_sold GROUP BY GROUPING SETS ((brand), (size), ());"
p52281
tp52282
I1
s(g3811
I42
g3812
Vinsert
p52283
I42
VSimpleName: x
p52284
tp52285
I2
s(g8103
I42
g8104
Vinsert
p52286
I36
VParenthesizedExpression
p52287
tp52288
I1
s(g2104
I42
g2105
Vinsert
p52289
I59
VVariableDeclarationFragment
p52290
tp52291
I1
s(g3608
I42
g3609
Vinsert
p52292
I74
VParameterizedType: ArrayList<SQLObject>
p52293
tp52294
I1
s(g2115
I42
g2116
Vinsert
p52295
I14
VClassInstanceCreation
p52296
tp52297
I4
s(g21845
I42
g21846
Vinsert
p52298
I34
VNumberLiteral: 0
p52299
tp52300
I1
s(Vinsert
p52301
I42
VSimpleName: nextToken
p52302
Vinsert
p52303
I43
VSimpleType: SQLBinaryOperator
p52304
tp52305
I2
s(Vinsert
p52306
I42
VSimpleName: getParent
p52307
Vinsert
p52308
I43
VSimpleType: SQLStatement
p52309
tp52310
I1
s(g14722
I42
g14723
Vinsert
p52311
I38
VPrefixExpression: !
p52312
tp52313
I1
s(g43028
I42
g43029
Vinsert
p52314
I42
VSimpleName: dataSourceB
p52315
tp52316
I1
s(g9483
I42
g9484
Vinsert
p52317
I14
VClassInstanceCreation
p52318
tp52319
I1
s(g21084
I42
g21085
Vinsert
p52320
I83
VModifier: public
p52321
tp52322
I1
s(g2910
I42
g2911
Vinsert
p52323
I42
VSimpleName: getChildren
p52324
tp52325
I7
s(g1246
I42
g1247
Vinsert
p52326
I40
VQualifiedName: Boolean.TRUE
p52327
tp52328
I2
s(g21
I42
g22
Vinsert
p52329
I42
VSimpleName: visit
p52330
tp52331
I3
s(g3462
I42
g3463
Vinsert
p52332
I59
VVariableDeclarationFragment
p52333
tp52334
I1
s(g14006
I42
g14007
Vinsert
p52335
I42
VSimpleName: parameters
p52336
tp52337
I1
s(g6207
I42
g6208
Vinsert
p52338
I42
VSimpleName: print
p52339
tp52340
I2
s(g6197
I42
g6198
Vinsert
p52341
I42
VSimpleName: item
p52342
tp52343
I5
s(g25854
I42
g25855
Vinsert
p52344
I42
VSimpleName: properties
p52345
tp52346
I4
s(g5475
I42
g5476
Vinsert
p52347
I39
VPrimitiveType: long
p52348
tp52349
I1
s(g6328
I42
g6329
Vinsert
p52350
I42
VSimpleName: String
p52351
tp52352
I1
s(g17114
I42
g17115
Vinsert
p52353
I27
VInfixExpression: ==
p52354
tp52355
I3
s(g5045
I42
g5046
Vinsert
p52356
I32
VMethodInvocation
p52357
tp52358
I29
s(Vinsert
p52359
I42
VSimpleName: identifierEquals
p52360
Vinsert
p52361
I24
VForStatement
p52362
tp52363
I2
s(g29367
I42
g29368
Vinsert
p52364
I45
VStringLiteral: "\u005cnwhere kreis_code in (select *"
p52365
tp52366
I1
s(g29345
I42
g29346
Vinsert
p52367
I42
VSimpleName: isEnable
p52368
tp52369
I2
s(g11320
I42
g11321
Vinsert
p52370
I42
VSimpleName: clazz
p52371
tp52372
I3
s(g20856
I42
g20857
Vinsert
p52373
I43
VSimpleType: SQLUpdateSetItem
p52374
tp52375
I1
s(g9773
I42
g9774
Vinsert
p52376
I43
VSimpleType: SQLName
p52377
tp52378
I2
s(Vinsert
p52379
I42
VSimpleName: getTables
p52380
Vinsert
p52381
I43
VSimpleType: TeradataSchemaStatVisitor
p52382
tp52383
I1
s(g24495
I42
g24496
Vinsert
p52384
I22
VFieldAccess
p52385
tp52386
I2
s(g9838
I42
g9839
Vinsert
p52387
I42
VSimpleName: constraint
p52388
tp52389
I1
s(g14622
I42
g14623
Vinsert
p52390
I41
VReturnStatement
p52391
tp52392
I3
s(g11611
I42
g11612
Vinsert
p52393
I59
VVariableDeclarationFragment
p52394
tp52395
I11
s(g21084
I42
g21085
Vinsert
p52396
I42
VSimpleName: Override
p52397
tp52398
I1
s(g47137
I42
g47138
Vinsert
p52399
I42
VSimpleName: alias
p52400
tp52401
I2
s(g40603
I42
g40604
Vinsert
p52402
I45
VStringLiteral: "\u005ctAND cs.CreateDate <= to_date('2017-08-31 23:00:00', 'YYYY-MM-DD HH24:MI:SS')\u005cn"
p52403
tp52404
I1
s(g987
I42
g988
Vinsert
p52405
I42
VSimpleName: assertNotNull
p52406
tp52407
I1
s(g5559
I42
g5560
Vinsert
p52408
I45
VStringLiteral: "\u005cnWHERE t1.c1 = t2.c1"
p52409
tp52410
I1
s(g48178
I42
g48179
Vinsert
p52411
I40
VQualifiedName: JdbcUtils.ALI_ORACLE
p52412
tp52413
I1
s(g15334
I42
g15335
Vinsert
p52414
I83
VModifier: public
p52415
tp52416
I3
s(g13326
I42
g13327
Vinsert
p52417
I11
VCastExpression
p52418
tp52419
I16
s(g11973
I42
g11974
Vinsert
p52420
I45
VStringLiteral: " `Extent1`.`AccountantMobile`, "
p52421
tp52422
I1
s(g19258
I42
g19259
Vinsert
p52423
I42
VSimpleName: getOrderBy
p52424
tp52425
I1
s(g12768
I42
g12769
Vinsert
p52426
I27
VInfixExpression: +
p52427
tp52428
I7
s(g12758
I42
g12759
Vinsert
p52429
I45
VStringLiteral: "jdbc:mock:config-3"
p52430
tp52431
I1
s(g24531
I42
g24532
Vinsert
p52432
I42
VSimpleName: left
p52433
tp52434
I2
s(g14139
I42
g14140
Vinsert
p52435
I43
VSimpleType: Integer
p52436
tp52437
I3
s(g6909
I42
g6910
Vinsert
p52438
I42
VSimpleName: stmt_1_A
p52439
tp52440
I1
s(g9662
I42
g9663
Vinsert
p52441
I42
VSimpleName: visit
p52442
tp52443
I1
s(g16046
I42
g16047
Vinsert
p52444
I34
VNumberLiteral: 0
p52445
tp52446
I1
s(g17240
I42
g17241
Vinsert
p52447
I8
VBlock
p52448
tp52449
I2
s(g19741
I42
g19742
Vinsert
p52450
I42
VSimpleName: nextToken
p52451
tp52452
I1
s(g28534
I42
g28535
Vinsert
p52453
I42
VSimpleName: hints
p52454
tp52455
I10
s(g36541
I42
g36542
Vinsert
p52456
I42
VSimpleName: toPGString
p52457
tp52458
I1
s(g18214
I42
g18215
Vinsert
p52459
I42
VSimpleName: dataSources
p52460
tp52461
I1
s(g15766
I42
g15767
Vinsert
p52462
I54
VTryStatement
p52463
tp52464
I1
s(g4088
I42
g4089
Vinsert
p52465
I43
VSimpleType: SQLException
p52466
tp52467
I1
s(g14234
I42
g14235
Vinsert
p52468
I44
VSingleVariableDeclaration
p52469
tp52470
I2
s(g1380
I42
g1381
Vinsert
p52471
I43
VSimpleType: SQLName
p52472
tp52473
I1
s(g21356
I42
g21357
Vinsert
p52474
I62
VInstanceofExpression
p52475
tp52476
I2
s(g5133
I42
g5134
Vinsert
p52477
I42
VSimpleName: sqlStat
p52478
tp52479
I2
s(g9230
I42
g9231
Vinsert
p52480
I42
VSimpleName: expr
p52481
tp52482
I10
s(g25353
I42
g25354
Vinsert
p52483
I42
VSimpleName: SQLSelectQueryBlock
p52484
tp52485
I1
s(g376
I42
g377
Vinsert
p52486
I45
VStringLiteral: "select * from a"
p52487
tp52488
I1
s(g6041
I42
g6042
Vinsert
p52489
I31
VMethodDeclaration
p52490
tp52491
I5
s(g3559
I42
g3560
Vinsert
p52492
I42
VSimpleName: type
p52493
tp52494
I1
s(g1344
I42
g1345
Vinsert
p52495
I42
VSimpleName: isBSD
p52496
tp52497
I1
s(g2281
I42
g2282
Vinsert
p52498
I42
VSimpleName: key
p52499
tp52500
I1
s(g19283
I42
g19284
Vinsert
p52501
I42
VSimpleName: error
p52502
tp52503
I2
s(g51643
I42
g51644
Vinsert
p52504
I42
VSimpleName: label
p52505
tp52506
I2
s(g12547
I42
g12548
Vinsert
p52507
I45
VStringLiteral: "phyTimeoutMillis"
p52508
tp52509
I1
s(g6421
I42
g6422
Vinsert
p52510
I42
VSimpleName: setDbType
p52511
tp52512
I1
s(Vinsert
p52513
I42
VSimpleName: assertEquals
p52514
Vinsert
p52515
I42
VSimpleName: SQLServerInsertStatement
p52516
tp52517
I4
s(g2423
I42
g2424
Vinsert
p52518
I43
VSimpleType: SecretKeySpec
p52519
tp52520
I2
s(g13891
I42
g13892
Vinsert
p52521
I42
VSimpleName: b
p52522
tp52523
I1
s(Vinsert
p52524
I42
VSimpleName: toSQLString
p52525
Vinsert
p52526
I45
VStringLiteral: "TABLESPACE \u005c"BOPSDATATS\u005c"\u005cn"
p52527
tp52528
I1
s(g10911
I42
g10912
Vinsert
p52529
I45
VStringLiteral: "accounts"
p52530
tp52531
I1
s(g19179
I42
g19180
Vinsert
p52532
I70
VEnhancedForStatement
p52533
tp52534
I2
s(Vinsert
p52535
I42
VSimpleName: assertTrue
p52536
Vinsert
p52537
I40
VQualifiedName: oracle.jdbc.OraclePreparedStatement
p52538
tp52539
I2
s(g2647
I42
g2648
Vinsert
p52540
I39
VPrimitiveType: void
p52541
tp52542
I2
s(g7497
I42
g7498
Vinsert
p52543
I42
VSimpleName: ex
p52544
tp52545
I1
s(g7620
I42
g7621
Vinsert
p52546
I45
VStringLiteral: " foreign data wrapper "
p52547
tp52548
I1
s(g6966
I42
g6967
Vinsert
p52549
I42
VSimpleName: addItem
p52550
tp52551
I1
s(g23263
I42
g23264
Vinsert
p52552
I14
VClassInstanceCreation
p52553
tp52554
I5
s(g6257
I42
g6258
Vinsert
p52555
I45
VStringLiteral: "("
p52556
tp52557
I1
s(g15010
I42
g15011
Vinsert
p52558
I42
VSimpleName: setAutomaticTestTable
p52559
tp52560
I1
s(g5123
I42
g5124
Vinsert
p52561
I39
VPrimitiveType: long
p52562
tp52563
I1
s(g6036
I42
g6037
Vinsert
p52564
I25
VIfStatement
p52565
tp52566
I2
s(g11516
I42
g11517
Vinsert
p52567
I21
VExpressionStatement
p52568
tp52569
I5
s(g10687
I42
g10688
Vinsert
p52570
I43
VSimpleType: RuntimeException
p52571
tp52572
I1
s(g15991
I42
g15992
Vinsert
p52573
I25
VIfStatement
p52574
tp52575
I27
s(g15894
I42
g15895
Vinsert
p52576
I42
VSimpleName: parseCreatePackage
p52577
tp52578
I1
s(g12854
I42
g12855
Vinsert
p52579
I43
VSimpleType: XAException
p52580
tp52581
I1
s(g18907
I42
g18908
Vinsert
p52582
I45
VStringLiteral: "        ADD COLUMN variation_value_5 DECIMAL(30, 20) NULL DEFAULT NULL"
p52583
tp52584
I1
s(g932
I42
g933
Vinsert
p52585
I42
VSimpleName: test_for_issue
p52586
tp52587
I1
s(g30105
I42
g30106
Vinsert
p52588
I7
VAssignment: =
p52589
tp52590
I1
s(g18404
I42
g18405
Vinsert
p52591
I45
VStringLiteral: "\u005ct\u005ctnumerator := numerator / gcd;\u005cn"
p52592
tp52593
I1
s(g11925
I42
g11926
Vinsert
p52594
I7
VAssignment: =
p52595
tp52596
I1
s(g8528
I42
g8529
Vinsert
p52597
I40
VQualifiedName: SchemaObject.Type.Sequence
p52598
tp52599
I1
s(g22294
I42
g22295
Vinsert
p52600
I13
VCharacterLiteral: '('
p52601
tp52602
I3
s(g11281
I42
g11282
Vinsert
p52603
I42
VSimpleName: hints
p52604
tp52605
I2
s(g5074
I42
g5075
Vinsert
p52606
I42
VSimpleName: parseColumnRest
p52607
tp52608
I1
s(g4472
I42
g4473
Vinsert
p52609
I42
VSimpleName: Method
p52610
tp52611
I1
s(g24125
I42
g24126
Vinsert
p52612
I42
VSimpleName: wrap
p52613
tp52614
I2
s(g37815
I42
g37816
Vinsert
p52615
I7
VAssignment: =
p52616
tp52617
I4
s(g20434
I42
g20435
Vinsert
p52618
I27
VInfixExpression: +
p52619
tp52620
I2
s(g27620
I42
g27621
Vinsert
p52621
I43
VSimpleType: String
p52622
tp52623
I1
s(g12888
I42
g12889
Vinsert
p52624
I32
VMethodInvocation
p52625
tp52626
I914
s(g45468
I42
g45469
Vinsert
p52627
I43
VSimpleType: A
p52628
tp52629
I1
s(g9163
I42
g9164
Vinsert
p52630
I42
VSimpleName: protocol
p52631
tp52632
I2
s(g8990
I42
g8991
Vinsert
p52633
I42
VSimpleName: requestStatsMap
p52634
tp52635
I1
s(Vinsert
p52636
I42
VSimpleName: accept
p52637
Vinsert
p52638
I42
VSimpleName: tablespace
p52639
tp52640
I2
s(g2383
I42
g2384
Vinsert
p52641
I42
VSimpleName: assertTrue
p52642
tp52643
I1
s(g6116
I42
g6117
Vinsert
p52644
I42
VSimpleName: SQLException
p52645
tp52646
I1
s(g20914
I42
g20915
Vinsert
p52647
I42
VSimpleName: param
p52648
tp52649
I2
s(g1085
I42
g1086
Vinsert
p52650
I43
VSimpleType: ArrayList
p52651
tp52652
I41
s(g5257
I42
g5258
Vinsert
p52653
I42
VSimpleName: currentLocal
p52654
tp52655
I1
s(g3002
I42
g3003
Vinsert
p52656
I42
VSimpleName: SQLExprTableSource
p52657
tp52658
I1
s(Vinsert
p52659
I42
VSimpleName: currentTimeMillis
p52660
Vinsert
p52661
I43
VSimpleType: OracleConnection
p52662
tp52663
I1
s(g49759
I42
g49760
Vinsert
p52664
I42
VSimpleName: visit
p52665
tp52666
I5
s(Vinsert
p52667
I42
VSimpleName: setParent
p52668
Vinsert
p52669
I42
VSimpleName: setOriginColumn
p52670
tp52671
I1
s(g6992
I42
g6993
Vinsert
p52672
I42
VSimpleName: sqlStat
p52673
tp52674
I2
s(g1883
I42
g1884
Vinsert
p52675
I78
VMarkerAnnotation
p52676
tp52677
I1
s(g6167
I42
g6168
Vinsert
p52678
I27
VInfixExpression: ||
p52679
tp52680
I1
s(g9732
I42
g9733
Vinsert
p52681
I41
VReturnStatement
p52682
tp52683
I1
s(Vinsert
p52684
I42
VSimpleName: get
p52685
Vinsert
p52686
I42
VSimpleName: visit
p52687
tp52688
I1
s(g2474
I42
g2475
Vinsert
p52689
I27
VInfixExpression: !=
p52690
tp52691
I1
s(g2852
I42
g2853
Vinsert
p52692
I42
VSimpleName: WallVisitorUtils
p52693
tp52694
I1
s(g6134
I42
g6135
Vinsert
p52695
I42
VSimpleName: getViolations
p52696
tp52697
I1
s(g13569
I42
g13570
Vinsert
p52698
I42
VSimpleName: x
p52699
tp52700
I2
s(g2667
I42
g2668
Vinsert
p52701
I42
VSimpleName: PoolableConnection
p52702
tp52703
I2
s(Vinsert
p52704
I42
VSimpleName: close
p52705
Vinsert
p52706
I42
VSimpleName: setTimeBetweenEvictionRunsMillis
p52707
tp52708
I2
s(g12922
I42
g12923
Vinsert
p52709
I42
VSimpleName: getConditions
p52710
tp52711
I1
s(Vinsert
p52712
I42
VSimpleName: parseStatements
p52713
Vinsert
p52714
I45
VStringLiteral: "  CLOSE cur1;\u005cn"
p52715
tp52716
I1
s(g26990
I42
g26991
Vinsert
p52717
I43
VSimpleType: WindowClause
p52718
tp52719
I1
s(g3123
I42
g3124
Vinsert
p52720
I42
VSimpleName: column
p52721
tp52722
I3
s(Vinsert
p52723
I42
VSimpleName: getParameters
p52724
Vinsert
p52725
I42
VSimpleName: buf
p52726
tp52727
I1
s(g25721
I42
g25722
Vinsert
p52728
I27
VInfixExpression: !=
p52729
tp52730
I2
s(Vinsert
p52731
I42
VSimpleName: nextToken
p52732
Vinsert
p52733
I42
VSimpleName: parseCreateDatabase
p52734
tp52735
I1
s(g19077
I42
g19078
Vinsert
p52736
I27
VInfixExpression: &&
p52737
tp52738
I2
s(g12721
I42
g12722
Vinsert
p52739
I40
VQualifiedName: Token.OF
p52740
tp52741
I1
s(g50808
I42
g50809
Vinsert
p52742
I27
VInfixExpression: !=
p52743
tp52744
I2
s(g30896
I42
g30897
Vinsert
p52745
I52
VThisExpression
p52746
tp52747
I1
s(g20796
I42
g20797
Vinsert
p52748
I42
VSimpleName: SQLException
p52749
tp52750
I1
s(g2604
I42
g2605
Vinsert
p52751
I32
VMethodInvocation
p52752
tp52753
I1
s(Vinsert
p52754
I42
VSimpleName: nextToken
p52755
Vinsert
p52756
I45
VStringLiteral: "UNSIGNED"
p52757
tp52758
I1
s(Vinsert
p52759
I42
VSimpleName: assertEquals
p52760
Vinsert
p52761
I42
VSimpleName: parseStatements
p52762
tp52763
I8
s(g10021
I42
g10022
Vinsert
p52764
I42
VSimpleName: handlers
p52765
tp52766
I2
s(Vinsert
p52767
I42
VSimpleName: assertEquals
p52768
Vinsert
p52769
I45
VStringLiteral: "\u005cn\u005ctIMPORT PARTITION ALL"
p52770
tp52771
I1
s(g46
I42
g47
Vinsert
p52772
I42
VSimpleName: value
p52773
tp52774
I15
s(Vinsert
p52775
I42
VSimpleName: limit
p52776
Vinsert
p52777
I42
VSimpleName: result
p52778
tp52779
I8
s(g37049
I42
g37050
Vinsert
p52780
I43
VSimpleType: SQLSubPartitionByHash
p52781
tp52782
I2
s(Vinsert
p52783
I42
VSimpleName: assertEquals
p52784
Vinsert
p52785
I45
VStringLiteral: "(select count(*) from t) < 0"
p52786
tp52787
I1
s(g2697
I42
g2698
Vinsert
p52788
I42
VSimpleName: assertEquals
p52789
tp52790
I17
s(Vinsert
p52791
I42
VSimpleName: getStatement
p52792
Vinsert
p52793
I42
VSimpleName: table
p52794
tp52795
I4
s(g7756
I42
g7757
Vinsert
p52796
I43
VSimpleType: Schema
p52797
tp52798
I1
s(g5643
I42
g5644
Vinsert
p52799
I43
VSimpleType: OracleConnection
p52800
tp52801
I2
s(g5787
I42
g5788
Vinsert
p52802
I14
VClassInstanceCreation
p52803
tp52804
I1
s(g11574
I42
g11575
Vinsert
p52805
I43
VSimpleType: PGArrayExpr
p52806
tp52807
I2
s(g13818
I42
g13819
Vinsert
p52808
I42
VSimpleName: block
p52809
tp52810
I2
s(g738
I42
g739
Vinsert
p52811
I14
VClassInstanceCreation
p52812
tp52813
I1
s(g46013
I42
g46014
Vinsert
p52814
I24
VForStatement
p52815
tp52816
I2
s(g23839
I42
g23840
Vinsert
p52817
I42
VSimpleName: DruidDataSource
p52818
tp52819
I1
s(g2314
I42
g2315
Vinsert
p52820
I78
VMarkerAnnotation
p52821
tp52822
I3
s(g11691
I42
g11692
Vinsert
p52823
I43
VSimpleType: SQLSelectQueryBlock
p52824
tp52825
I1
s(g1130
I42
g1131
Vinsert
p52826
I45
VStringLiteral: "FROM times t, products p, sales s\u005cn"
p52827
tp52828
I1
s(g7986
I42
g7987
Vinsert
p52829
I59
VVariableDeclarationFragment
p52830
tp52831
I3
s(g1647
I42
g1648
Vinsert
p52832
I43
VSimpleType: VirtualMachineDescriptor
p52833
tp52834
I1
s(g2289
I42
g2290
Vinsert
p52835
I42
VSimpleName: getContextClassLoader
p52836
tp52837
I1
s(g19315
I42
g19316
Vinsert
p52838
I59
VVariableDeclarationFragment
p52839
tp52840
I4
s(g6470
I42
g6471
Vinsert
p52841
I42
VSimpleName: MAPPING_ENTITY
p52842
tp52843
I4
s(g27423
I42
g27424
Vinsert
p52844
I7
VAssignment: =
p52845
tp52846
I2
s(g24531
I42
g24532
Vinsert
p52847
I60
VVariableDeclarationStatement
p52848
tp52849
I1
s(g14266
I42
g14267
Vinsert
p52850
I27
VInfixExpression: ==
p52851
tp52852
I2
s(g49721
I42
g49722
Vinsert
p52853
I42
VSimpleName: keepComments
p52854
tp52855
I1
s(g10417
I42
g10418
Vinsert
p52856
I42
VSimpleName: SQLInsertStatement
p52857
tp52858
I2
s(g2469
I42
g2470
Vinsert
p52859
I39
VPrimitiveType: boolean
p52860
tp52861
I3
s(g8316
I42
g8317
Vinsert
p52862
I42
VSimpleName: setFilters
p52863
tp52864
I1
s(g5045
I42
g5046
Vinsert
p52865
I44
VSingleVariableDeclaration
p52866
tp52867
I3
s(g6490
I42
g6491
Vinsert
p52868
I42
VSimpleName: OracleInsertParser
p52869
tp52870
I1
s(g28072
I42
g28073
Vinsert
p52871
I42
VSimpleName: SQLParameter
p52872
tp52873
I1
s(g23465
I42
g23466
Vinsert
p52874
I43
VSimpleType: HiveLexer
p52875
tp52876
I2
s(g3618
I42
g3619
Vinsert
p52877
I43
VSimpleType: Clob
p52878
tp52879
I1
s(g5305
I42
g5306
Vinsert
p52880
I42
VSimpleName: column
p52881
tp52882
I4
s(g7264
I42
g7265
Vinsert
p52883
I33
VNullLiteral
p52884
tp52885
I1
s(g6742
I42
g6743
Vinsert
p52886
I42
VSimpleName: add
p52887
tp52888
I1
s(g3898
I42
g3899
Vinsert
p52889
I42
VSimpleName: SQLAllColumnExpr
p52890
tp52891
I1
s(g13968
I42
g13969
Vinsert
p52892
I42
VSimpleName: getName
p52893
tp52894
I2
s(g26450
I42
g26451
Vinsert
p52895
I45
VStringLiteral: "AS OF "
p52896
tp52897
I1
s(g1180
I42
g1181
Vinsert
p52898
I42
VSimpleName: IUserDao
p52899
tp52900
I2
s(g26747
I42
g26748
Vinsert
p52901
I42
VSimpleName: SQLLimit
p52902
tp52903
I1
s(g1017
I42
g1018
Vinsert
p52904
I42
VSimpleName: w
p52905
tp52906
I2
s(g38822
I42
g38823
Vinsert
p52907
I42
VSimpleName: createShardingVisitor
p52908
tp52909
I1
s(g44253
I42
g44254
Vinsert
p52910
I40
VQualifiedName: Token.LITERAL_NCHARS
p52911
tp52912
I1
s(g12586
I42
g12587
Vinsert
p52913
I42
VSimpleName: nextToken
p52914
tp52915
I4
s(g4258
I42
g4259
Vinsert
p52916
I25
VIfStatement
p52917
tp52918
I1
s(g19174
I42
g19175
Vinsert
p52919
I42
VSimpleName: getCreateTimespanNano
p52920
tp52921
I1
s(g12125
I42
g12126
Vinsert
p52922
I42
VSimpleName: parseObject
p52923
tp52924
I1
s(g12069
I42
g12070
Vinsert
p52925
I42
VSimpleName: SQLReplaceStatement
p52926
tp52927
I1
s(g27428
I42
g27429
Vinsert
p52928
I42
VSimpleName: MySqlSchemaStatVisitor
p52929
tp52930
I4
s(g10252
I42
g10253
Vinsert
p52931
I42
VSimpleName: group
p52932
tp52933
I2
s(g1996
I42
g1997
Vinsert
p52934
I42
VSimpleName: printAndAccept
p52935
tp52936
I2
s(g50779
I42
g50780
Vinsert
p52937
I42
VSimpleName: setPartitionCount
p52938
tp52939
I1
s(g2324
I42
g2325
Vinsert
p52940
I32
VMethodInvocation
p52941
tp52942
I1
s(g36005
I42
g36006
Vinsert
p52943
I42
VSimpleName: unit
p52944
tp52945
I1
s(g44594
I42
g44595
Vinsert
p52946
I42
VSimpleName: getProperty
p52947
tp52948
I1
s(g49869
I42
g49870
Vinsert
p52949
I42
VSimpleName: SQLServerStatementParser
p52950
tp52951
I1
s(g16359
I42
g16360
Vinsert
p52952
I42
VSimpleName: x
p52953
tp52954
I4
s(g4689
I42
g4690
Vinsert
p52955
I45
VStringLiteral: "\u005ct\u005ct\u005ctAND ITEM.INVENTORY_ITEM_ID = SYS_ITEM.INVENTORY_ITEM_ID\u005cn"
p52956
tp52957
I1
s(g11537
I42
g11538
Vinsert
p52958
I42
VSimpleName: SQLNumericLiteralExpr
p52959
tp52960
I8
s(g9299
I42
g9300
Vinsert
p52961
I42
VSimpleName: setKey
p52962
tp52963
I1
s(g6257
I42
g6258
Vinsert
p52964
I45
VStringLiteral: "BLOCK "
p52965
tp52966
I1
s(g21667
I42
g21668
Vinsert
p52967
I42
VSimpleName: getDenyTables
p52968
tp52969
I1
s(g6781
I42
g6782
Vinsert
p52970
I42
VSimpleName: visitor
p52971
tp52972
I2
s(g7141
I42
g7142
Vinsert
p52973
I34
VNumberLiteral: 0
p52974
tp52975
I1
s(g42032
I42
g42033
Vinsert
p52976
I45
VStringLiteral: "\u005cn union all "
p52977
tp52978
I2
s(g7450
I42
g7451
Vinsert
p52979
I74
VParameterizedType: Enumeration<TableColumn>
p52980
tp52981
I1
s(g11785
I42
g11786
Vinsert
p52982
I42
VSimpleName: getExecuteCount
p52983
tp52984
I1
s(g11420
I42
g11421
Vinsert
p52985
I60
VVariableDeclarationStatement
p52986
tp52987
I1
s(g6036
I42
g6037
Vinsert
p52988
I42
VSimpleName: x
p52989
tp52990
I2
s(Vinsert
p52991
I42
VSimpleName: assertEquals
p52992
Vinsert
p52993
I40
VQualifiedName: Token.EOF
p52994
tp52995
I5
s(g18044
I42
g18045
Vinsert
p52996
I42
VSimpleName: partition
p52997
tp52998
I2
s(g18300
I42
g18301
Vinsert
p52999
I32
VMethodInvocation
p53000
tp53001
I2
s(g8340
I42
g8341
Vinsert
p53002
I42
VSimpleName: split
p53003
tp53004
I2
s(g7126
I42
g7127
Vinsert
p53005
I42
VSimpleName: getRight
p53006
tp53007
I5
s(g17926
I42
g17927
Vinsert
p53008
I42
VSimpleName: subqueryTabSrc
p53009
tp53010
I1
s(g40533
I42
g40534
Vinsert
p53011
I42
VSimpleName: exceptionsInto
p53012
tp53013
I1
s(g7245
I42
g7246
Vinsert
p53014
I41
VReturnStatement
p53015
tp53016
I3
s(g3564
I42
g3565
Vinsert
p53017
I42
VSimpleName: setJdbcUrl
p53018
tp53019
I1
s(g9428
I42
g9429
Vinsert
p53020
I42
VSimpleName: ParameterizedOutputVisitorUtils
p53021
tp53022
I9
s(g13525
I42
g13526
Vinsert
p53023
I43
VSimpleType: MySqlOutFileExpr
p53024
tp53025
I1
s(g50845
I42
g50846
Vinsert
p53026
I42
VSimpleName: groupingSet
p53027
tp53028
I1
s(g19307
I42
g19308
Vinsert
p53029
I25
VIfStatement
p53030
tp53031
I2
s(g6676
I42
g6677
Vinsert
p53032
I8
VBlock
p53033
tp53034
I1
s(g2484
I42
g2485
Vinsert
p53035
I42
VSimpleName: i
p53036
tp53037
I2
s(g836
I42
g837
Vinsert
p53038
I21
VExpressionStatement
p53039
tp53040
I7
s(g9959
I42
g9960
Vinsert
p53041
I42
VSimpleName: environment
p53042
tp53043
I1
s(g5053
I42
g5054
Vinsert
p53044
I43
VSimpleType: Method
p53045
tp53046
I3
s(g15602
I42
g15603
Vinsert
p53047
I42
VSimpleName: SQLIdentifierExpr
p53048
tp53049
I1
s(g5351
I42
g5352
Vinsert
p53050
I42
VSimpleName: Exception
p53051
tp53052
I1
s(g19461
I42
g19462
Vinsert
p53053
I39
VPrimitiveType: boolean
p53054
tp53055
I2
s(g22587
I42
g22588
Vinsert
p53056
I32
VMethodInvocation
p53057
tp53058
I4
s(g4313
I42
g4314
Vinsert
p53059
I7
VAssignment: =
p53060
tp53061
I1
s(g972
I42
g973
Vinsert
p53062
I45
VStringLiteral: "\u005ct\u005c"SQL_ACTIONS\u005c", \u005cn"
p53063
tp53064
I1
s(g37815
I42
g37816
Vinsert
p53065
I42
VSimpleName: tableName
p53066
tp53067
I7
s(g13569
I42
g13570
Vinsert
p53068
I42
VSimpleName: WallVisitorUtils
p53069
tp53070
I2
s(g11566
I42
g11567
Vinsert
p53071
I25
VIfStatement
p53072
tp53073
I1
s(g3462
I42
g3463
Vinsert
p53074
I42
VSimpleName: WallConfig
p53075
tp53076
I2
s(g12893
I42
g12894
Vinsert
p53077
I45
VStringLiteral: ""
p53078
tp53079
I2
s(g4447
I42
g4448
Vinsert
p53080
I9
VBooleanLiteral: true
p53081
tp53082
I1
s(g18102
I42
g18103
Vinsert
p53083
I40
VQualifiedName: Token.MAXTRANS
p53084
tp53085
I2
s(g41008
I42
g41009
Vinsert
p53086
I45
VStringLiteral: "LIST"
p53087
tp53088
I1
s(g6592
I42
g6593
Vinsert
p53089
I42
VSimpleName: Collection
p53090
tp53091
I1
s(g17007
I42
g17008
Vinsert
p53092
I42
VSimpleName: SQLException
p53093
tp53094
I2
s(g3317
I42
g3318
Vinsert
p53095
I42
VSimpleName: test_true_1
p53096
tp53097
I4
s(g2459
I42
g2460
Vinsert
p53098
I45
VStringLiteral: "CREATE OR REPLACE TYPE "
p53099
tp53100
I1
s(g5685
I42
g5686
Vinsert
p53101
I42
VSimpleName: SQLIntegerExpr
p53102
tp53103
I1
s(g3724
I42
g3725
Vinsert
p53104
I21
VExpressionStatement
p53105
tp53106
I5
s(g9791
I42
g9792
Vinsert
p53107
I34
VNumberLiteral: 0.75f
p53108
tp53109
I1
s(g6036
I42
g6037
Vinsert
p53110
I8
VBlock
p53111
tp53112
I1
s(g15345
I42
g15346
Vinsert
p53113
I43
VSimpleType: InvocationTargetException
p53114
tp53115
I1
s(g3821
I42
g3822
Vinsert
p53116
I32
VMethodInvocation
p53117
tp53118
I9
s(g29839
I42
g29840
Vinsert
p53119
I33
VNullLiteral
p53120
tp53121
I1
s(g1825
I42
g1826
Vinsert
p53122
I42
VSimpleName: getDeclaredField
p53123
tp53124
I1
s(g9475
I42
g9476
Vinsert
p53125
I45
VStringLiteral: "\u005ctNEXT 1048576\u005cn"
p53126
tp53127
I2
s(g6005
I42
g6006
Vinsert
p53128
I43
VSimpleType: WallProvider
p53129
tp53130
I1
s(g861
I42
g862
Vinsert
p53131
I43
VSimpleType: SQLSelectQuery
p53132
tp53133
I1
s(g19018
I42
g19019
Vinsert
p53134
I43
VSimpleType: UnsupportedOperationException
p53135
tp53136
I4
s(g5450
I42
g5451
Vinsert
p53137
I42
VSimpleName: clazzName
p53138
tp53139
I1
s(g29858
I42
g29859
Vinsert
p53140
I74
VParameterizedType: AtomicIntegerFieldUpdater<WallTableStat>
p53141
tp53142
I1
s(g33452
I42
g33453
Vinsert
p53143
I60
VVariableDeclarationStatement
p53144
tp53145
I1
s(g5661
I42
g5662
Vinsert
p53146
I42
VSimpleName: SQLExpr
p53147
tp53148
I1
s(g11880
I42
g11881
Vinsert
p53149
I45
VStringLiteral: "\u005cnPARTITION BY LIST (nls_territory)"
p53150
tp53151
I2
s(g4859
I42
g4860
Vinsert
p53152
I42
VSimpleName: Object
p53153
tp53154
I1
s(g7631
I42
g7632
Vinsert
p53155
I43
VSimpleType: Map
p53156
tp53157
I1
s(g24007
I42
g24008
Vinsert
p53158
I33
VNullLiteral
p53159
tp53160
I1
s(g33079
I42
g33080
Vinsert
p53161
I31
VMethodDeclaration
p53162
tp53163
I1
s(g8891
I42
g8892
Vinsert
p53164
I34
VNumberLiteral: 0
p53165
tp53166
I2
s(g8340
I42
g8341
Vinsert
p53167
I45
VStringLiteral: "---------------------------"
p53168
tp53169
I2
s(g26901
I42
g26902
Vinsert
p53170
I45
VStringLiteral: ",\u005c"StackTrace\u005c":"
p53171
tp53172
I1
s(g12854
I42
g12855
Vinsert
p53173
I21
VExpressionStatement
p53174
tp53175
I1
s(g5356
I42
g5357
Vinsert
p53176
I25
VIfStatement
p53177
tp53178
I25
s(g9629
I42
g9630
Vinsert
p53179
I39
VPrimitiveType: boolean
p53180
tp53181
I2
s(g23657
I42
g23658
Vinsert
p53182
I42
VSimpleName: println
p53183
tp53184
I2
s(g12611
I42
g12612
Vinsert
p53185
I45
VStringLiteral: " < "
p53186
tp53187
I1
s(g21746
I42
g21747
Vinsert
p53188
I8
VBlock
p53189
tp53190
I1
s(g2870
I42
g2871
Vinsert
p53191
I43
VSimpleType: SQLTableSource
p53192
tp53193
I3
s(g12776
I42
g12777
Vinsert
p53194
I62
VInstanceofExpression
p53195
tp53196
I1
s(g23501
I42
g23502
Vinsert
p53197
I39
VPrimitiveType: long
p53198
tp53199
I1
s(g48513
I42
g48514
Vinsert
p53200
I42
VSimpleName: lexer
p53201
tp53202
I3
s(g28138
I42
g28139
Vinsert
p53203
I43
VSimpleType: MySqlIgnoreIndexHint
p53204
tp53205
I2
s(g6948
I42
g6949
Vinsert
p53206
I42
VSimpleName: OracleWallTest2
p53207
tp53208
I1
s(g6742
I42
g6743
Vinsert
p53209
I42
VSimpleName: SQLObject
p53210
tp53211
I9
s(g26080
I42
g26081
Vinsert
p53212
I14
VClassInstanceCreation
p53213
tp53214
I1
s(Vinsert
p53215
I42
VSimpleName: token
p53216
Vinsert
p53217
I42
VSimpleName: limit
p53218
tp53219
I2
s(g1160
I42
g1161
Vinsert
p53220
I43
VSimpleType: User
p53221
tp53222
I1
s(Vinsert
p53223
I42
VSimpleName: endVisit
p53224
Vinsert
p53225
I42
VSimpleName: simpleExpression
p53226
tp53227
I1
s(g43745
I42
g43746
Vinsert
p53228
I42
VSimpleName: updateStmt
p53229
tp53230
I1
s(g18611
I42
g18612
Vinsert
p53231
I42
VSimpleName: factory
p53232
tp53233
I1
s(g10100
I42
g10101
Vinsert
p53234
I34
VNumberLiteral: 5
p53235
tp53236
I1
s(g37888
I42
g37889
Vinsert
p53237
I42
VSimpleName: addViolation
p53238
tp53239
I1
s(g796
I42
g797
Vinsert
p53240
I8
VBlock
p53241
tp53242
I4
s(g17966
I42
g17967
Vinsert
p53243
I45
VStringLiteral: "\u005cn("
p53244
tp53245
I6
s(g3360
I42
g3361
Vinsert
p53246
I42
VSimpleName: isValidateMySql
p53247
tp53248
I4
s(g14527
I42
g14528
Vinsert
p53249
I40
VQualifiedName: Token.CONNECT
p53250
tp53251
I1
s(g38485
I42
g38486
Vinsert
p53252
I40
VQualifiedName: Token.INITRANS
p53253
tp53254
I1
s(g7728
I42
g7729
Vinsert
p53255
I45
VStringLiteral: "\u005cn\u005ctPARTITION p1 VALUES LESS THAN (5001)"
p53256
tp53257
I2
s(g12488
I42
g12489
Vinsert
p53258
I44
VSingleVariableDeclaration
p53259
tp53260
I1
s(g10325
I42
g10326
Vinsert
p53261
I40
VQualifiedName: Token.VARIANT
p53262
tp53263
I2
s(g18005
I42
g18006
Vinsert
p53264
I45
VStringLiteral: " `sellerId` bigint(20) DEFAULT NULL,"
p53265
tp53266
I1
s(g2173
I42
g2174
Vinsert
p53267
I31
VMethodDeclaration
p53268
tp53269
I1
s(g32530
I42
g32531
Vinsert
p53270
I42
VSimpleName: AsOfFlashbackQueryClause
p53271
tp53272
I2
s(g17983
I42
g17984
Vinsert
p53273
I42
VSimpleName: getProxyFilters
p53274
tp53275
I1
s(g16980
I42
g16981
Vinsert
p53276
I34
VNumberLiteral: 100000
p53277
tp53278
I1
s(g31252
I42
g31253
Vinsert
p53279
I42
VSimpleName: test_read_limit
p53280
tp53281
I1
s(g34449
I42
g34450
Vinsert
p53282
I43
VSimpleType: MockPreparedStatement
p53283
tp53284
I1
s(g3058
I42
g3059
Vinsert
p53285
I45
VStringLiteral: "\u005cn\u005ctON \u005c"AO_4AEACD_WEBHOOK_DAO\u005c""
p53286
tp53287
I2
s(g2359
I42
g2360
Vinsert
p53288
I43
VSimpleType: TabularData
p53289
tp53290
I1
s(g632
I42
g633
Vinsert
p53291
I42
VSimpleName: Calendar
p53292
tp53293
I1
s(g35007
I42
g35008
Vinsert
p53294
I42
VSimpleName: k1
p53295
tp53296
I1
s(Vinsert
p53297
I42
VSimpleName: getAndIncrement
p53298
Vinsert
p53299
I42
VSimpleName: AtomicInteger
p53300
tp53301
I3
s(g3908
I42
g3909
Vinsert
p53302
I60
VVariableDeclarationStatement
p53303
tp53304
I1
s(g21244
I42
g21245
Vinsert
p53305
I42
VSimpleName: connection
p53306
tp53307
I2
s(g12222
I42
g12223
Vinsert
p53308
I32
VMethodInvocation
p53309
tp53310
I3
s(g30336
I42
g30337
Vinsert
p53311
I42
VSimpleName: newUpdater
p53312
tp53313
I1
s(g41745
I42
g41746
Vinsert
p53314
I42
VSimpleName: driverClass
p53315
tp53316
I1
s(g1978
I42
g1979
Vinsert
p53317
I42
VSimpleName: getSessionStatData
p53318
tp53319
I1
s(g2837
I42
g2838
Vinsert
p53320
I2
VArrayAccess
p53321
tp53322
I1
s(g1170
I42
g1171
Vinsert
p53323
I83
VModifier: protected
p53324
tp53325
I1
s(g8796
I42
g8797
Vinsert
p53326
I25
VIfStatement
p53327
tp53328
I1
s(g246
I42
g247
Vinsert
p53329
I40
VQualifiedName: Token.REPLACE
p53330
tp53331
I1
s(g24051
I42
g24052
Vinsert
p53332
I42
VSimpleName: rightList
p53333
tp53334
I2
s(g9150
I42
g9151
Vinsert
p53335
I8
VBlock
p53336
tp53337
I1
s(g7542
I42
g7543
Vinsert
p53338
I43
VSimpleType: SQLException
p53339
tp53340
I1
s(g9397
I42
g9398
Vinsert
p53341
I27
VInfixExpression: ==
p53342
tp53343
I1
s(g12786
I42
g12787
Vinsert
p53344
I42
VSimpleName: transformDecode
p53345
tp53346
I1
s(g1120
I42
g1121
Vinsert
p53347
I42
VSimpleName: MySqlShowErrorsStatement
p53348
tp53349
I1
s(g695
I42
g696
Vinsert
p53350
I43
VSimpleType: Token
p53351
tp53352
I6
s(g2905
I42
g2906
Vinsert
p53353
I42
VSimpleName: SQLException
p53354
tp53355
I1
s(g1208
I42
g1209
Vinsert
p53356
I42
VSimpleName: sql
p53357
tp53358
I1
s(g20320
I42
g20321
Vinsert
p53359
I21
VExpressionStatement
p53360
tp53361
I2
s(g3857
I42
g3858
Vinsert
p53362
I83
VModifier: static
p53363
tp53364
I1
s(g8142
I42
g8143
Vinsert
p53365
I43
VSimpleType: SQLStatement
p53366
tp53367
I7
s(g19234
I42
g19235
Vinsert
p53368
I43
VSimpleType: PGTruncateStatement
p53369
tp53370
I1
s(Vinsert
p53371
I42
VSimpleName: get
p53372
Vinsert
p53373
I45
VStringLiteral: "connectTime"
p53374
tp53375
I1
s(g35983
I42
g35984
Vinsert
p53376
I14
VClassInstanceCreation
p53377
tp53378
I1
s(Vinsert
p53379
I42
VSimpleName: assertEquals
p53380
Vinsert
p53381
I43
VSimpleType: SQLSelectQueryBlock
p53382
tp53383
I3
s(g39070
I42
g39071
Vinsert
p53384
I80
VMemberValuePair
p53385
tp53386
I4
s(g2115
I42
g2116
Vinsert
p53387
I21
VExpressionStatement
p53388
tp53389
I6
s(Vinsert
p53390
I42
VSimpleName: setParent
p53391
Vinsert
p53392
I42
VSimpleName: createSelectParser
p53393
tp53394
I1
s(g45921
I42
g45922
Vinsert
p53395
I43
VSimpleType: SQLPartition
p53396
tp53397
I1
s(g18168
I42
g18169
Vinsert
p53398
I42
VSimpleName: acceptIdentifier
p53399
tp53400
I6
s(g331
I42
g332
Vinsert
p53401
I45
VStringLiteral: " OF "
p53402
tp53403
I1
s(g16208
I42
g16209
Vinsert
p53404
I42
VSimpleName: driverClass
p53405
tp53406
I1
s(g2657
I42
g2658
Vinsert
p53407
I42
VSimpleName: MonitorClientServlet
p53408
tp53409
I1
s(Vinsert
p53410
I42
VSimpleName: size
p53411
Vinsert
p53412
I43
VSimpleType: OracleToMySqlOutputVisitor
p53413
tp53414
I1
s(g14881
I42
g14882
Vinsert
p53415
I59
VVariableDeclarationFragment
p53416
tp53417
I1
s(g30105
I42
g30106
Vinsert
p53418
I42
VSimpleName: dbType
p53419
tp53420
I1
s(g3238
I42
g3239
Vinsert
p53421
I42
VSimpleName: getColumns
p53422
tp53423
I3
s(g2634
I42
g2635
Vinsert
p53424
I42
VSimpleName: stmt
p53425
tp53426
I4
s(g16948
I42
g16949
Vinsert
p53427
I42
VSimpleName: column
p53428
tp53429
I1
s(Vinsert
p53430
I42
VSimpleName: assertSame
p53431
Vinsert
p53432
I45
VStringLiteral: "CREATE TABLE `snapshot_data` (`id` int(11) DEFAULT NULL auto_increment PRIMARY KEY, `snapshot_id` integer, `resource_id` integer, `snapshot_data` mediumtext, `data_type` varchar(50), `created_at` datetime, `updated_at` datetime) ENGINE=InnoDB CHARACTER SET utf8 COLLATE utf8_bin"
p53433
tp53434
I1
s(g19283
I42
g19284
Vinsert
p53435
I42
VSimpleName: Assert
p53436
tp53437
I1
s(g8233
I42
g8234
Vinsert
p53438
I42
VSimpleName: lexer
p53439
tp53440
I1
s(g1903
I42
g1904
Vinsert
p53441
I42
VSimpleName: x
p53442
tp53443
I2
s(g713
I42
g714
Vinsert
p53444
I42
VSimpleName: sql
p53445
tp53446
I5
s(g4065
I42
g4066
Vinsert
p53447
I27
VInfixExpression: ==
p53448
tp53449
I1
s(g20065
I42
g20066
Vinsert
p53450
I42
VSimpleName: constraint
p53451
tp53452
I2
s(g20439
I42
g20440
Vinsert
p53453
I8
VBlock
p53454
tp53455
I1
s(g8504
I42
g8505
Vinsert
p53456
I42
VSimpleName: selectListCache
p53457
tp53458
I2
s(g9503
I42
g9504
Vinsert
p53459
I42
VSimpleName: wallStatValue
p53460
tp53461
I1
s(g10642
I42
g10643
Vinsert
p53462
I27
VInfixExpression: &&
p53463
tp53464
I4
s(g6796
I42
g6797
Vinsert
p53465
I27
VInfixExpression: *
p53466
tp53467
I2
s(g19344
I42
g19345
Vinsert
p53468
I42
VSimpleName: adapter
p53469
tp53470
I7
s(g16354
I42
g16355
Vinsert
p53471
I42
VSimpleName: getMasterWeightRegionEnd
p53472
tp53473
I1
s(g16460
I42
g16461
Vinsert
p53474
I42
VSimpleName: println
p53475
tp53476
I1
s(g31879
I42
g31880
Vinsert
p53477
I25
VIfStatement
p53478
tp53479
I3
s(g459
I42
g460
Vinsert
p53480
I45
VStringLiteral: "CREATE TABLE products ("
p53481
tp53482
I1
s(g33272
I42
g33273
Vinsert
p53483
I42
VSimpleName: cidr
p53484
tp53485
I2
s(g459
I42
g460
Vinsert
p53486
I45
VStringLiteral: "\u005cn\u005ct\u005ctCHECK (price > 0)"
p53487
tp53488
I1
s(g42627
I42
g42628
Vinsert
p53489
I42
VSimpleName: JdbcSqlStat
p53490
tp53491
I1
s(g4931
I42
g4932
Vinsert
p53492
I39
VPrimitiveType: boolean
p53493
tp53494
I3
s(g35034
I42
g35035
Vinsert
p53495
I13
VCharacterLiteral: ' '
p53496
tp53497
I1
s(g6871
I42
g6872
Vinsert
p53498
I60
VVariableDeclarationStatement
p53499
tp53500
I1
s(g11732
I42
g11733
Vinsert
p53501
I42
VSimpleName: dataSource
p53502
tp53503
I4
s(g13311
I42
g13312
Vinsert
p53504
I45
VStringLiteral: "\u005cn\u005ctorder_id NUMBER"
p53505
tp53506
I2
s(g4188
I42
g4189
Vinsert
p53507
I31
VMethodDeclaration
p53508
tp53509
I2
s(g5528
I42
g5529
Vinsert
p53510
I27
VInfixExpression: ==
p53511
tp53512
I1
s(g24579
I42
g24580
Vinsert
p53513
I42
VSimpleName: setCurrentTable
p53514
tp53515
I1
s(g10996
I42
g10997
Vinsert
p53516
I42
VSimpleName: explainToSelectSQL
p53517
tp53518
I2
s(g23026
I42
g23027
Vinsert
p53519
I40
VQualifiedName: com.alibaba.druid.hbase.hbql.parser.HBQLStatementParser
p53520
tp53521
I1
s(g12077
I42
g12078
Vinsert
p53522
I22
VFieldAccess
p53523
tp53524
I1
s(g11516
I42
g11517
Vinsert
p53525
I43
VSimpleType: Exception
p53526
tp53527
I5
s(g46314
I42
g46315
Vinsert
p53528
I45
VStringLiteral: "SELECT s.id FROM snapshots s "
p53529
tp53530
I1
s(g36711
I42
g36712
Vinsert
p53531
I8
VBlock
p53532
tp53533
I3
s(g3409
I42
g3410
Vinsert
p53534
I52
VThisExpression
p53535
tp53536
I3
s(g2586
I42
g2587
Vinsert
p53537
I43
VSimpleType: PreparedStatementProxyImpl
p53538
tp53539
I6
s(g2987
I42
g2988
Vinsert
p53540
I43
VSimpleType: SQLName
p53541
tp53542
I4
s(g4684
I42
g4685
Vinsert
p53543
I42
VSimpleName: SQLExpr
p53544
tp53545
I1
s(g27644
I42
g27645
Vinsert
p53546
I32
VMethodInvocation
p53547
tp53548
I1
s(g8841
I42
g8842
Vinsert
p53549
I32
VMethodInvocation
p53550
tp53551
I4
s(g20851
I42
g20852
Vinsert
p53552
I42
VSimpleName: debug
p53553
tp53554
I2
s(g29483
I42
g29484
Vinsert
p53555
I44
VSingleVariableDeclaration
p53556
tp53557
I3
s(g3908
I42
g3909
Vinsert
p53558
I42
VSimpleName: PreparedStatementHolder
p53559
tp53560
I2
s(g48411
I42
g48412
Vinsert
p53561
I52
VThisExpression
p53562
tp53563
I1
s(g13593
I42
g13594
Vinsert
p53564
I32
VMethodInvocation
p53565
tp53566
I4
s(g33489
I42
g33490
Vinsert
p53567
I45
VStringLiteral: "uid"
p53568
tp53569
I1
s(g4442
I42
g4443
Vinsert
p53570
I42
VSimpleName: mbeanServer
p53571
tp53572
I1
s(Vinsert
p53573
I42
VSimpleName: accept
p53574
Vinsert
p53575
I45
VStringLiteral: "\u005cn\u005ctdisabled NVARCHAR(60),"
p53576
tp53577
I1
s(g21257
I42
g21258
Vinsert
p53578
I45
VStringLiteral: "                   and t.ccounty_code = 'CP'"
p53579
tp53580
I1
s(g34738
I42
g34739
Vinsert
p53581
I42
VSimpleName: stmt
p53582
tp53583
I113
s(g2173
I42
g2174
Vinsert
p53584
I8
VBlock
p53585
tp53586
I1
s(g19396
I42
g19397
Vinsert
p53587
I45
VStringLiteral: "\u005cnGROUP BY resource_value, http_method"
p53588
tp53589
I1
s(g7141
I42
g7142
Vinsert
p53590
I27
VInfixExpression: *
p53591
tp53592
I1
s(Vinsert
p53593
I42
VSimpleName: nextToken
p53594
Vinsert
p53595
I42
VSimpleName: SQLRollbackStatement
p53596
tp53597
I2
s(g19344
I42
g19345
Vinsert
p53598
I42
VSimpleName: SQLUpdateStatement
p53599
tp53600
I1
s(g16367
I42
g16368
Vinsert
p53601
I42
VSimpleName: pool
p53602
tp53603
I2
s(g4227
I42
g4228
Vinsert
p53604
I42
VSimpleName: integerValue
p53605
tp53606
I1
s(g26385
I42
g26386
Vinsert
p53607
I42
VSimpleName: visitor
p53608
tp53609
I1
s(g1835
I42
g1836
Vinsert
p53610
I9
VBooleanLiteral: true
p53611
tp53612
I1
s(g15188
I42
g15189
Vinsert
p53613
I42
VSimpleName: dbType
p53614
tp53615
I7
s(g9924
I42
g9925
Vinsert
p53616
I42
VSimpleName: context
p53617
tp53618
I6
s(g13808
I42
g13809
Vinsert
p53619
I33
VNullLiteral
p53620
tp53621
I1
s(g5351
I42
g5352
Vinsert
p53622
I43
VSimpleType: Exception
p53623
tp53624
I1
s(g16778
I42
g16779
Vinsert
p53625
I83
VModifier: public
p53626
tp53627
I2
s(g91
I42
g92
Vinsert
p53628
I34
VNumberLiteral: 0
p53629
tp53630
I1
s(g2329
I42
g2330
Vinsert
p53631
I32
VMethodInvocation
p53632
tp53633
I2
s(g311
I42
g312
Vinsert
p53634
I43
VSimpleType: Statement
p53635
tp53636
I1
s(g26747
I42
g26748
Vinsert
p53637
I42
VSimpleName: setLimit
p53638
tp53639
I1
s(Vinsert
p53640
I42
VSimpleName: equals
p53641
Vinsert
p53642
I40
VQualifiedName: JdbcUtils.H2
p53643
tp53644
I2
s(g3022
I42
g3023
Vinsert
p53645
I32
VMethodInvocation
p53646
tp53647
I1
s(g30023
I42
g30024
Vinsert
p53648
I24
VForStatement
p53649
tp53650
I1
s(g3103
I42
g3104
Vinsert
p53651
I43
VSimpleType: ResultSet
p53652
tp53653
I4
s(g826
I42
g827
Vinsert
p53654
I45
VStringLiteral: "ELSE"
p53655
tp53656
I1
s(g56
I42
g57
Vinsert
p53657
I7
VAssignment: =
p53658
tp53659
I1
s(Vinsert
p53660
I42
VSimpleName: size
p53661
Vinsert
p53662
I42
VSimpleName: numTestsPerEvictionRun
p53663
tp53664
I1
s(g10493
I42
g10494
Vinsert
p53665
I42
VSimpleName: unwrap
p53666
tp53667
I1
s(g326
I42
g327
Vinsert
p53668
I45
VStringLiteral: "    ORDER BY id DESC LIMIT 1 \u005cn"
p53669
tp53670
I1
s(g738
I42
g739
Vinsert
p53671
I21
VExpressionStatement
p53672
tp53673
I5
s(g13700
I42
g13701
Vinsert
p53674
I42
VSimpleName: SQLParserFeature
p53675
tp53676
I4
s(g14896
I42
g14897
Vinsert
p53677
I39
VPrimitiveType: boolean
p53678
tp53679
I1
s(g32799
I42
g32800
Vinsert
p53680
I42
VSimpleName: getConnectionCloseCount
p53681
tp53682
I1
s(g781
I42
g782
Vinsert
p53683
I42
VSimpleName: SQLStatement
p53684
tp53685
I2
s(g36900
I42
g36901
Vinsert
p53686
I42
VSimpleName: println
p53687
tp53688
I1
s(g9446
I42
g9447
Vinsert
p53689
I42
VSimpleName: tok
p53690
tp53691
I2
s(g6847
I42
g6848
Vinsert
p53692
I59
VVariableDeclarationFragment
p53693
tp53694
I10
s(g21845
I42
g21846
Vinsert
p53695
I8
VBlock
p53696
tp53697
I4
s(g11041
I42
g11042
Vinsert
p53698
I42
VSimpleName: c4
p53699
tp53700
I1
s(g22469
I42
g22470
Vinsert
p53701
I43
VSimpleType: CommunicationsException
p53702
tp53703
I1
s(g15177
I42
g15178
Vinsert
p53704
I42
VSimpleName: WallProvider
p53705
tp53706
I1
s(g45304
I42
g45305
Vinsert
p53707
I45
VStringLiteral: "com.alibaba.druid:type=DruidDataSource,id="
p53708
tp53709
I1
s(g512
I42
g513
Vinsert
p53710
I32
VMethodInvocation
p53711
tp53712
I4
s(g14055
I42
g14056
Vinsert
p53713
I40
VQualifiedName: Token.TO
p53714
tp53715
I1
s(g4926
I42
g4927
Vinsert
p53716
I42
VSimpleName: ConnectionEvent
p53717
tp53718
I2
s(g12299
I42
g12300
Vinsert
p53719
I41
VReturnStatement
p53720
tp53721
I4
s(g26179
I42
g26180
Vinsert
p53722
I42
VSimpleName: setName
p53723
tp53724
I1
s(g11197
I42
g11198
Vinsert
p53725
I42
VSimpleName: getRelationships
p53726
tp53727
I1
s(g9332
I42
g9333
Vinsert
p53728
I40
VQualifiedName: Integer.MAX_VALUE
p53729
tp53730
I1
s(g7850
I42
g7851
Vinsert
p53731
I42
VSimpleName: setParamType
p53732
tp53733
I2
s(g16759
I42
g16760
Vinsert
p53734
I34
VNumberLiteral: 0
p53735
tp53736
I5
s(g17734
I42
g17735
Vinsert
p53737
I42
VSimpleName: Thread
p53738
tp53739
I2
s(g291
I42
g292
Vinsert
p53740
I8
VBlock
p53741
tp53742
I1
s(g23603
I42
g23604
Vinsert
p53743
I31
VMethodDeclaration
p53744
tp53745
I6
s(g27530
I42
g27531
Vinsert
p53746
I42
VSimpleName: setValue
p53747
tp53748
I1
s(Vinsert
p53749
I42
VSimpleName: exprList
p53750
Vinsert
p53751
I42
VSimpleName: valuesQuery
p53752
tp53753
I1
s(g17052
I42
g17053
Vinsert
p53754
I42
VSimpleName: password
p53755
tp53756
I3
s(g21020
I42
g21021
Vinsert
p53757
I40
VQualifiedName: com.alibaba.druid.sql.SQLUtils
p53758
tp53759
I1
s(g5623
I42
g5624
Vinsert
p53760
I42
VSimpleName: IOException
p53761
tp53762
I3
s(g21244
I42
g21245
Vinsert
p53763
I42
VSimpleName: SQLException
p53764
tp53765
I2
s(g21686
I42
g21687
Vinsert
p53766
I31
VMethodDeclaration
p53767
tp53768
I1
s(g9438
I42
g9439
Vinsert
p53769
I42
VSimpleName: addColumn
p53770
tp53771
I1
s(g33511
I42
g33512
Vinsert
p53772
I42
VSimpleName: alias
p53773
tp53774
I1
s(g10655
I42
g10656
Vinsert
p53775
I21
VExpressionStatement
p53776
tp53777
I2
s(g2504
I42
g2505
Vinsert
p53778
I8
VBlock
p53779
tp53780
I1
s(g33917
I42
g33918
Vinsert
p53781
I45
VStringLiteral: "CREATE ALGORITHM = merge\u005cn"
p53782
tp53783
I1
s(g30561
I42
g30562
Vinsert
p53784
I42
VSimpleName: getEstablishTime
p53785
tp53786
I1
s(g9722
I42
g9723
Vinsert
p53787
I42
VSimpleName: visitor
p53788
tp53789
I1
s(g25152
I42
g25153
Vinsert
p53790
I42
VSimpleName: XASupport
p53791
tp53792
I1
s(Vinsert
p53793
I42
VSimpleName: nextToken
p53794
Vinsert
p53795
I42
VSimpleName: SQLTimestampExpr
p53796
tp53797
I1
s(g2393
I42
g2394
Vinsert
p53798
I42
VSimpleName: x
p53799
tp53800
I2
s(g6650
I42
g6651
Vinsert
p53801
I42
VSimpleName: queryBlock
p53802
tp53803
I3
s(Vinsert
p53804
I42
VSimpleName: name
p53805
Vinsert
p53806
I42
VSimpleName: authid
p53807
tp53808
I1
s(g1481
I42
g1482
Vinsert
p53809
I42
VSimpleName: stmt
p53810
tp53811
I1
s(g7288
I42
g7289
Vinsert
p53812
I42
VSimpleName: getSqlStat
p53813
tp53814
I1
s(g572
I42
g573
Vinsert
p53815
I60
VVariableDeclarationStatement
p53816
tp53817
I5
s(g14697
I42
g14698
Vinsert
p53818
I21
VExpressionStatement
p53819
tp53820
I2
s(g26143
I42
g26144
Vinsert
p53821
I42
VSimpleName: value
p53822
tp53823
I6
s(g5844
I42
g5845
Vinsert
p53824
I27
VInfixExpression: ==
p53825
tp53826
I2
s(Vinsert
p53827
I42
VSimpleName: append
p53828
Vinsert
p53829
I27
VInfixExpression: ||
p53830
tp53831
I1
s(g33444
I42
g33445
Vinsert
p53832
I42
VSimpleName: expr
p53833
tp53834
I2
s(g14540
I42
g14541
Vinsert
p53835
I41
VReturnStatement
p53836
tp53837
I1
s(g11217
I42
g11218
Vinsert
p53838
I42
VSimpleName: computeDataType
p53839
tp53840
I2
s(g47974
I42
g47975
Vinsert
p53841
I42
VSimpleName: formatedText
p53842
tp53843
I1
s(g13066
I42
g13067
Vinsert
p53844
I43
VSimpleType: SQLCreateFunctionStatement
p53845
tp53846
I2
s(g1080
I42
g1081
Vinsert
p53847
I45
VStringLiteral: "AS\u005cn"
p53848
tp53849
I2
s(g37790
I42
g37791
Vinsert
p53850
I52
VThisExpression
p53851
tp53852
I7
s(g35631
I42
g35632
Vinsert
p53853
I45
VStringLiteral: "load managed jdbc driver event listener error. "
p53854
tp53855
I2
s(g497
I42
g498
Vinsert
p53856
I42
VSimpleName: assertNotNull
p53857
tp53858
I1
s(g8192
I42
g8193
Vinsert
p53859
I40
VQualifiedName: Token.SEQUENCE
p53860
tp53861
I1
s(g146
I42
g147
Vinsert
p53862
I42
VSimpleName: toSQLString
p53863
tp53864
I1
s(g9982
I42
g9983
Vinsert
p53865
I45
VStringLiteral: "\u005ctplsql_block := 'BEGIN emp_pkg.raise_salary(:id, :amt); END;';\u005cn"
p53866
tp53867
I1
s(g562
I42
g563
Vinsert
p53868
I59
VVariableDeclarationFragment
p53869
tp53870
I12
s(g12154
I42
g12155
Vinsert
p53871
I43
VSimpleType: SQLSelectQueryBlock
p53872
tp53873
I4
s(g12209
I42
g12210
Vinsert
p53874
I43
VSimpleType: String
p53875
tp53876
I1
s(g19810
I42
g19811
Vinsert
p53877
I42
VSimpleName: token
p53878
tp53879
I1
s(g101
I42
g102
Vinsert
p53880
I21
VExpressionStatement
p53881
tp53882
I2
s(g31224
I42
g31225
Vinsert
p53883
I42
VSimpleName: row
p53884
tp53885
I1
s(g12854
I42
g12855
Vinsert
p53886
I8
VBlock
p53887
tp53888
I1
s(g4217
I42
g4218
Vinsert
p53889
I42
VSimpleName: expr
p53890
tp53891
I7
s(g3312
I42
g3313
Vinsert
p53892
I25
VIfStatement
p53893
tp53894
I1
s(g33839
I42
g33840
Vinsert
p53895
I45
VStringLiteral: "values  : "
p53896
tp53897
I1
s(g10991
I42
g10992
Vinsert
p53898
I42
VSimpleName: of
p53899
tp53900
I1
s(g23392
I42
g23393
Vinsert
p53901
I42
VSimpleName: instances
p53902
tp53903
I1
s(g5936
I42
g5937
Vinsert
p53904
I45
VStringLiteral: "\u005ct\u005ct\u005ctlimit 5\u005cn"
p53905
tp53906
I1
s(g11611
I42
g11612
Vinsert
p53907
I45
VStringLiteral: "insert overwrite table ff partition (c='c',d='d') select /*+mapjoin(tt)*/ id,name from tt"
p53908
tp53909
I1
s(g1675
I42
g1676
Vinsert
p53910
I8
VBlock
p53911
tp53912
I1
s(g37285
I42
g37286
Vinsert
p53913
I42
VSimpleName: SQLExpr
p53914
tp53915
I1
s(g8425
I42
g8426
Vinsert
p53916
I42
VSimpleName: getTableStat
p53917
tp53918
I1
s(g15345
I42
g15346
Vinsert
p53919
I32
VMethodInvocation
p53920
tp53921
I1
s(g14457
I42
g14458
Vinsert
p53922
I41
VReturnStatement
p53923
tp53924
I13
s(Vinsert
p53925
I42
VSimpleName: setParent
p53926
Vinsert
p53927
I42
VSimpleName: setLockOption
p53928
tp53929
I1
s(Vinsert
p53930
I42
VSimpleName: toSQLString
p53931
Vinsert
p53932
I45
VStringLiteral: "TABLESPACE \u005c"PERFSTAT\u005c"\u005cn"
p53933
tp53934
I1
s(Vinsert
p53935
I42
VSimpleName: assertTrue
p53936
Vinsert
p53937
I42
VSimpleName: MySqlWallTest22
p53938
tp53939
I1
s(g22802
I42
g22803
Vinsert
p53940
I45
VStringLiteral: " TO dw_manager"
p53941
tp53942
I1
s(g16402
I42
g16403
Vinsert
p53943
I42
VSimpleName: executor
p53944
tp53945
I1
s(g27757
I42
g27758
Vinsert
p53946
I42
VSimpleName: WallConfig
p53947
tp53948
I1
s(g1324
I42
g1325
Vinsert
p53949
I42
VSimpleName: stmt
p53950
tp53951
I1
s(g18399
I42
g18400
Vinsert
p53952
I59
VVariableDeclarationFragment
p53953
tp53954
I3
s(g17240
I42
g17241
Vinsert
p53955
I59
VVariableDeclarationFragment
p53956
tp53957
I1
s(g6612
I42
g6613
Vinsert
p53958
I42
VSimpleName: RSAPrivateKeySpec
p53959
tp53960
I2
s(g37927
I42
g37928
Vinsert
p53961
I42
VSimpleName: checkValid
p53962
tp53963
I1
s(g16264
I42
g16265
Vinsert
p53964
I42
VSimpleName: Exception
p53965
tp53966
I1
s(g17652
I42
g17653
Vinsert
p53967
I42
VSimpleName: table
p53968
tp53969
I4
s(g10174
I42
g10175
Vinsert
p53970
I8
VBlock
p53971
tp53972
I1
s(g36179
I42
g36180
Vinsert
p53973
I44
VSingleVariableDeclaration
p53974
tp53975
I4
s(g25594
I42
g25595
Vinsert
p53976
I42
VSimpleName: parameters
p53977
tp53978
I1
s(g30896
I42
g30897
Vinsert
p53979
I83
VModifier: public
p53980
tp53981
I1
s(g7845
I42
g7846
Vinsert
p53982
I42
VSimpleName: target
p53983
tp53984
I1
s(g15119
I42
g15120
Vinsert
p53985
I42
VSimpleName: partitionClauseRest
p53986
tp53987
I1
s(g1953
I42
g1954
Vinsert
p53988
I25
VIfStatement
p53989
tp53990
I1
s(g41161
I42
g41162
Vinsert
p53991
I42
VSimpleName: psql
p53992
tp53993
I1
s(g5714
I42
g5715
Vinsert
p53994
I45
VStringLiteral: "partition by range(c3)\u005cn"
p53995
tp53996
I1
s(g20259
I42
g20260
Vinsert
p53997
I40
VQualifiedName: SQLBinaryOperator.Subtract
p53998
tp53999
I1
s(g49869
I42
g49870
Vinsert
p54000
I42
VSimpleName: SQLSelectStatement
p54001
tp54002
I2
s(g31536
I42
g31537
Vinsert
p54003
I41
VReturnStatement
p54004
tp54005
I2
s(g3457
I42
g3458
Vinsert
p54006
I32
VMethodInvocation
p54007
tp54008
I5
s(Vinsert
p54009
I42
VSimpleName: visit
p54010
Vinsert
p54011
I42
VSimpleName: keyName
p54012
tp54013
I1
s(g19412
I42
g19413
Vinsert
p54014
I45
VStringLiteral: "\u005cn--comment2 goes here"
p54015
tp54016
I1
s(g14348
I42
g14349
Vinsert
p54017
I21
VExpressionStatement
p54018
tp54019
I1
s(g49623
I42
g49624
Vinsert
p54020
I43
VSimpleType: PoolableConnection
p54021
tp54022
I2
s(g8499
I42
g8500
Vinsert
p54023
I39
VPrimitiveType: boolean
p54024
tp54025
I1
s(g7927
I42
g7928
Vinsert
p54026
I40
VQualifiedName: Token.LPAREN
p54027
tp54028
I3
s(g5964
I42
g5965
Vinsert
p54029
I42
VSimpleName: dataSources
p54030
tp54031
I1
s(g17379
I42
g17380
Vinsert
p54032
I27
VInfixExpression: !=
p54033
tp54034
I1
s(g13395
I42
g13396
Vinsert
p54035
I27
VInfixExpression: <
p54036
tp54037
I1
s(g19144
I42
g19145
Vinsert
p54038
I42
VSimpleName: SQLUnionQuery
p54039
tp54040
I6
s(g2634
I42
g2635
Vinsert
p54041
I21
VExpressionStatement
p54042
tp54043
I3
s(g7720
I42
g7721
Vinsert
p54044
I42
VSimpleName: id
p54045
tp54046
I3
s(g10475
I42
g10476
Vinsert
p54047
I43
VSimpleType: Object
p54048
tp54049
I1
s(g13239
I42
g13240
Vinsert
p54050
I42
VSimpleName: JdbcDataSourceStat
p54051
tp54052
I2
s(g25594
I42
g25595
Vinsert
p54053
I25
VIfStatement
p54054
tp54055
I2
s(g4258
I42
g4259
Vinsert
p54056
I43
VSimpleType: Map
p54057
tp54058
I1
s(g14749
I42
g14750
Vinsert
p54059
I32
VMethodInvocation
p54060
tp54061
I2
s(g3154
I42
g3155
Vinsert
p54062
I42
VSimpleName: renamePartition
p54063
tp54064
I1
s(g29430
I42
g29431
Vinsert
p54065
I42
VSimpleName: currentThread
p54066
tp54067
I1
s(g1918
I42
g1919
Vinsert
p54068
I42
VSimpleName: e
p54069
tp54070
I6
s(Vinsert
p54071
I42
VSimpleName: setSubQuery
p54072
Vinsert
p54073
I42
VSimpleName: SQLSomeExpr
p54074
tp54075
I2
s(g45304
I42
g45305
Vinsert
p54076
I42
VSimpleName: ObjectName
p54077
tp54078
I1
s(g27355
I42
g27356
Vinsert
p54079
I42
VSimpleName: tableStats
p54080
tp54081
I1
s(g7840
I42
g7841
Vinsert
p54082
I60
VVariableDeclarationStatement
p54083
tp54084
I2
s(g25249
I42
g25250
Vinsert
p54085
I43
VSimpleType: MappingEngine
p54086
tp54087
I2
s(g31505
I42
g31506
Vinsert
p54088
I27
VInfixExpression: ==
p54089
tp54090
I1
s(g786
I42
g787
Vinsert
p54091
I44
VSingleVariableDeclaration
p54092
tp54093
I3
s(g2140
I42
g2141
Vinsert
p54094
I25
VIfStatement
p54095
tp54096
I2
s(g7121
I42
g7122
Vinsert
p54097
I11
VCastExpression
p54098
tp54099
I5
s(Vinsert
p54100
I42
VSimpleName: lock
p54101
Vinsert
p54102
I83
VModifier: final
p54103
tp54104
I3
s(g12324
I42
g12325
Vinsert
p54105
I39
VPrimitiveType: boolean
p54106
tp54107
I1
s(g27757
I42
g27758
Vinsert
p54108
I8
VBlock
p54109
tp54110
I1
s(g8788
I42
g8789
Vinsert
p54111
I42
VSimpleName: SchemaResolveVisitor
p54112
tp54113
I1
s(g2742
I42
g2743
Vinsert
p54114
I43
VSimpleType: SQLIntervalUnit
p54115
tp54116
I1
s(g7903
I42
g7904
Vinsert
p54117
I39
VPrimitiveType: void
p54118
tp54119
I1
s(g3179
I42
g3180
Vinsert
p54120
I52
VThisExpression
p54121
tp54122
I11
s(g28295
I42
g28296
Vinsert
p54123
I42
VSimpleName: accept
p54124
tp54125
I2
s(g2609
I42
g2610
Vinsert
p54126
I42
VSimpleName: dataSource
p54127
tp54128
I2
s(g1549
I42
g1550
Vinsert
p54129
I42
VSimpleName: result_lcase
p54130
tp54131
I1
s(g14972
I42
g14973
Vinsert
p54132
I42
VSimpleName: commentIndex
p54133
tp54134
I1
s(g4075
I42
g4076
Vinsert
p54135
I74
VParameterizedType: ArrayList<FieldInfo>
p54136
tp54137
I1
s(g9142
I42
g9143
Vinsert
p54138
I45
VStringLiteral: "jdbc:h2:mem:test"
p54139
tp54140
I1
s(g13543
I42
g13544
Vinsert
p54141
I34
VNumberLiteral: 0
p54142
tp54143
I1
s(g9569
I42
g9570
Vinsert
p54144
I43
VSimpleType: Exception
p54145
tp54146
I1
s(g29483
I42
g29484
Vinsert
p54147
I42
VSimpleName: OdpsSelectParser
p54148
tp54149
I1
s(g4936
I42
g4937
Vinsert
p54150
I42
VSimpleName: primaryRest
p54151
tp54152
I1
s(g12555
I42
g12556
Vinsert
p54153
I59
VVariableDeclarationFragment
p54154
tp54155
I1
s(g26199
I42
g26200
Vinsert
p54156
I42
VSimpleName: StringBuilder
p54157
tp54158
I2
s(g1815
I42
g1816
Vinsert
p54159
I42
VSimpleName: x
p54160
tp54161
I30
s(g10869
I42
g10870
Vinsert
p54162
I27
VInfixExpression: +
p54163
tp54164
I2
s(g3035
I42
g3036
Vinsert
p54165
I42
VSimpleName: ucase
p54166
tp54167
I1
s(g3169
I42
g3170
Vinsert
p54168
I40
VQualifiedName: lexer.text
p54169
tp54170
I1
s(g11492
I42
g11493
Vinsert
p54171
I42
VSimpleName: setLocal
p54172
tp54173
I2
s(g3002
I42
g3003
Vinsert
p54174
I42
VSimpleName: to
p54175
tp54176
I2
s(g31563
I42
g31564
Vinsert
p54177
I42
VSimpleName: getConditions
p54178
tp54179
I2
s(g5792
I42
g5793
Vinsert
p54180
I44
VSingleVariableDeclaration
p54181
tp54182
I2
s(g4620
I42
g4621
Vinsert
p54183
I45
VStringLiteral: "REF"
p54184
tp54185
I1
s(g39053
I42
g39054
Vinsert
p54186
I42
VSimpleName: conn_4
p54187
tp54188
I1
s(g12611
I42
g12612
Vinsert
p54189
I27
VInfixExpression: >
p54190
tp54191
I1
s(g9041
I42
g9042
Vinsert
p54192
I39
VPrimitiveType: boolean
p54193
tp54194
I1
s(g29367
I42
g29368
Vinsert
p54195
I45
VStringLiteral: "\u005cn\u005ct\u005ctselect tbek_code"
p54196
tp54197
I1
s(g4689
I42
g4690
Vinsert
p54198
I45
VStringLiteral: ") Mod\u005cn"
p54199
tp54200
I1
s(g15018
I42
g15019
Vinsert
p54201
I8
VBlock
p54202
tp54203
I2
s(g15632
I42
g15633
Vinsert
p54204
I45
VStringLiteral: "\u005ct\u005ctWHERE employees.employee_id = increase_comm.employee_id;\u005cn"
p54205
tp54206
I1
s(g22579
I42
g22580
Vinsert
p54207
I42
VSimpleName: e
p54208
tp54209
I2
s(g23557
I42
g23558
Vinsert
p54210
I43
VSimpleType: SocketTimeoutException
p54211
tp54212
I1
s(g7216
I42
g7217
Vinsert
p54213
I42
VSimpleName: Object
p54214
tp54215
I2
s(g25735
I42
g25736
Vinsert
p54216
I42
VSimpleName: stmt
p54217
tp54218
I5
s(g17739
I42
g17740
Vinsert
p54219
I43
VSimpleType: ProxyClient
p54220
tp54221
I1
s(g11935
I42
g11936
Vinsert
p54222
I42
VSimpleName: interval
p54223
tp54224
I1
s(g9914
I42
g9915
Vinsert
p54225
I34
VNumberLiteral: 1000
p54226
tp54227
I1
s(g5709
I42
g5710
Vinsert
p54228
I42
VSimpleName: i
p54229
tp54230
I1
s(g14990
I42
g14991
Vinsert
p54231
I42
VSimpleName: addReaderOpenCount
p54232
tp54233
I1
s(Vinsert
p54234
I42
VSimpleName: assertEquals
p54235
Vinsert
p54236
I42
VSimpleName: print
p54237
tp54238
I83
s(g2304
I42
g2305
Vinsert
p54239
I42
VSimpleName: x
p54240
tp54241
I3
s(g20173
I42
g20174
Vinsert
p54242
I42
VSimpleName: hash
p54243
tp54244
I7
s(g39356
I42
g39357
Vinsert
p54245
I42
VSimpleName: ObjectName
p54246
tp54247
I1
s(g22647
I42
g22648
Vinsert
p54248
I45
VStringLiteral: "\u005ctindex_in_file,\u005cn"
p54249
tp54250
I1
s(g5831
I42
g5832
Vinsert
p54251
I27
VInfixExpression: !=
p54252
tp54253
I1
s(g43724
I42
g43725
Vinsert
p54254
I9
VBooleanLiteral: true
p54255
tp54256
I3
s(g32589
I42
g32590
Vinsert
p54257
I43
VSimpleType: SQLIfStatement.ElseIf
p54258
tp54259
I1
s(g13331
I42
g13332
Vinsert
p54260
I60
VVariableDeclarationStatement
p54261
tp54262
I1
s(g266
I42
g267
Vinsert
p54263
I43
VSimpleType: String
p54264
tp54265
I1
s(g24195
I42
g24196
Vinsert
p54266
I42
VSimpleName: testWall
p54267
tp54268
I1
s(g17747
I42
g17748
Vinsert
p54269
I83
VModifier: final
p54270
tp54271
I1
s(g2614
I42
g2615
Vinsert
p54272
I42
VSimpleName: SQLExpr
p54273
tp54274
I6
s(g14123
I42
g14124
Vinsert
p54275
I42
VSimpleName: getName
p54276
tp54277
I1
s(g9410
I42
g9411
Vinsert
p54278
I21
VExpressionStatement
p54279
tp54280
I1
s(g11686
I42
g11687
Vinsert
p54281
I45
VStringLiteral: "\u005cn\u005ctmin_price NUMBER(8, 2),"
p54282
tp54283
I2
s(Vinsert
p54284
I42
VSimpleName: endVisit
p54285
Vinsert
p54286
I42
VSimpleName: addDataFile
p54287
tp54288
I1
s(g1986
I42
g1987
Vinsert
p54289
I34
VNumberLiteral: 0.0D
p54290
tp54291
I1
s(g12985
I42
g12986
Vinsert
p54292
I42
VSimpleName: Assert
p54293
tp54294
I4
s(g1208
I42
g1209
Vinsert
p54295
I8
VBlock
p54296
tp54297
I1
s(g3218
I42
g3219
Vinsert
p54298
I8
VBlock
p54299
tp54300
I3
s(g4645
I42
g4646
Vinsert
p54301
I42
VSimpleName: WebAppStat
p54302
tp54303
I3
s(g11634
I42
g11635
Vinsert
p54304
I21
VExpressionStatement
p54305
tp54306
I1
s(g27454
I42
g27455
Vinsert
p54307
I42
VSimpleName: prepareStatement
p54308
tp54309
I1
s(g50661
I42
g50662
Vinsert
p54310
I9
VBooleanLiteral: true
p54311
tp54312
I1
s(g3297
I42
g3298
Vinsert
p54313
I42
VSimpleName: getUpdateCount
p54314
tp54315
I1
s(g21822
I42
g21823
Vinsert
p54316
I45
VStringLiteral: "where user0_.login_name=? limit ?"
p54317
tp54318
I1
s(g2742
I42
g2743
Vinsert
p54319
I60
VVariableDeclarationStatement
p54320
tp54321
I1
s(g10066
I42
g10067
Vinsert
p54322
I42
VSimpleName: name
p54323
tp54324
I16
s(g6607
I42
g6608
Vinsert
p54325
I21
VExpressionStatement
p54326
tp54327
I2
s(g21
I42
g22
Vinsert
p54328
I42
VSimpleName: MySqlSelectQueryBlock
p54329
tp54330
I6
s(Vinsert
p54331
I42
VSimpleName: incrementAndGet
p54332
Vinsert
p54333
I42
VSimpleName: createConnectionId
p54334
tp54335
I2
s(g8298
I42
g8299
Vinsert
p54336
I42
VSimpleName: children
p54337
tp54338
I63
s(g9222
I42
g9223
Vinsert
p54339
I42
VSimpleName: preSelectItem
p54340
tp54341
I1
s(g24159
I42
g24160
Vinsert
p54342
I42
VSimpleName: range
p54343
tp54344
I2
s(g4645
I42
g4646
Vinsert
p54345
I43
VSimpleType: WebAppStat
p54346
tp54347
I3
s(g18477
I42
g18478
Vinsert
p54348
I42
VSimpleName: tableStat
p54349
tp54350
I2
s(g86
I42
g87
Vinsert
p54351
I42
VSimpleName: endVisit
p54352
tp54353
I1
s(g7756
I42
g7757
Vinsert
p54354
I42
VSimpleName: getSchemas
p54355
tp54356
I1
s(g351
I42
g352
Vinsert
p54357
I40
VQualifiedName: dataSource.minIdle
p54358
tp54359
I1
s(g1012
I42
g1013
Vinsert
p54360
I7
VAssignment: =
p54361
tp54362
I3
s(Vinsert
p54363
I42
VSimpleName: assertEquals
p54364
Vinsert
p54365
I45
VStringLiteral: "\u005cn from t1"
p54366
tp54367
I2
s(Vinsert
p54368
I42
VSimpleName: append
p54369
Vinsert
p54370
I40
VQualifiedName: SQLUnaryOperator.Plus
p54371
tp54372
I1
s(g25586
I42
g25587
Vinsert
p54373
I39
VPrimitiveType: void
p54374
tp54375
I1
s(g29345
I42
g29346
Vinsert
p54376
I42
VSimpleName: activeCount
p54377
tp54378
I1
s(g1002
I42
g1003
Vinsert
p54379
I21
VExpressionStatement
p54380
tp54381
I1
s(g33534
I42
g33535
Vinsert
p54382
I42
VSimpleName: getValue
p54383
tp54384
I1
s(g8038
I42
g8039
Vinsert
p54385
I42
VSimpleName: Object
p54386
tp54387
I1
s(g17793
I42
g17794
Vinsert
p54388
I45
VStringLiteral: "org.osjava.sj.root"
p54389
tp54390
I1
s(g4134
I42
g4135
Vinsert
p54391
I76
VWildcardType: ?
p54392
tp54393
I1
s(g13084
I42
g13085
Vinsert
p54394
I59
VVariableDeclarationFragment
p54395
tp54396
I5
s(g9629
I42
g9630
Vinsert
p54397
I32
VMethodInvocation
p54398
tp54399
I6
s(g1080
I42
g1081
Vinsert
p54400
I45
VStringLiteral: "\u005ctAND site_id = '17814';"
p54401
tp54402
I2
s(g6036
I42
g6037
Vinsert
p54403
I42
VSimpleName: getTablespace
p54404
tp54405
I1
s(g12849
I42
g12850
Vinsert
p54406
I32
VMethodInvocation
p54407
tp54408
I1
s(g53640
I42
g53641
Vinsert
p54409
I43
VSimpleType: MySqlLexer
p54410
tp54411
I1
s(g36486
I42
g36487
Vinsert
p54412
I43
VSimpleType: URLConnectionConfigLoader
p54413
tp54414
I2
s(Vinsert
p54415
I42
VSimpleName: get
p54416
Vinsert
p54417
I42
VSimpleName: types
p54418
tp54419
I1
s(g4956
I42
g4957
Vinsert
p54420
I42
VSimpleName: OracleDateTimeUnit
p54421
tp54422
I1
s(g39356
I42
g39357
Vinsert
p54423
I31
VMethodDeclaration
p54424
tp54425
I1
s(g1481
I42
g1482
Vinsert
p54426
I54
VTryStatement
p54427
tp54428
I1
s(g4661
I42
g4662
Vinsert
p54429
I42
VSimpleName: MySqlUtils
p54430
tp54431
I1
s(g4589
I42
g4590
Vinsert
p54432
I27
VInfixExpression: <
p54433
tp54434
I1
s(g3040
I42
g3041
Vinsert
p54435
I27
VInfixExpression: !=
p54436
tp54437
I1
s(g33452
I42
g33453
Vinsert
p54438
I39
VPrimitiveType: boolean
p54439
tp54440
I1
s(g7594
I42
g7595
Vinsert
p54441
I42
VSimpleName: x
p54442
tp54443
I1
s(g25389
I42
g25390
Vinsert
p54444
I45
VStringLiteral: "rawtypes"
p54445
tp54446
I1
s(g32782
I42
g32783
Vinsert
p54447
I85
VDimension
p54448
tp54449
I2
s(g12480
I42
g12481
Vinsert
p54450
I43
VSimpleType: SQLName
p54451
tp54452
I2
s(g15018
I42
g15019
Vinsert
p54453
I25
VIfStatement
p54454
tp54455
I1
s(g37169
I42
g37170
Vinsert
p54456
I27
VInfixExpression: !=
p54457
tp54458
I2
s(g10100
I42
g10101
Vinsert
p54459
I21
VExpressionStatement
p54460
tp54461
I2
s(g6354
I42
g6355
Vinsert
p54462
I42
VSimpleName: e
p54463
tp54464
I2
s(g7126
I42
g7127
Vinsert
p54465
I7
VAssignment: =
p54466
tp54467
I1
s(g53660
I42
g53661
Vinsert
p54468
I42
VSimpleName: count
p54469
tp54470
I2
s(g19163
I42
g19164
Vinsert
p54471
I42
VSimpleName: getDriver
p54472
tp54473
I1
s(g1938
I42
g1939
Vinsert
p54474
I42
VSimpleName: size
p54475
tp54476
I292
s(Vinsert
p54477
I42
VSimpleName: getSimpleName
p54478
Vinsert
p54479
I11
VCastExpression
p54480
tp54481
I1
s(g7275
I42
g7276
Vinsert
p54482
I60
VVariableDeclarationStatement
p54483
tp54484
I19
s(g30847
I42
g30848
Vinsert
p54485
I43
VSimpleType: SQLIntegerExpr
p54486
tp54487
I1
s(g20529
I42
g20530
Vinsert
p54488
I42
VSimpleName: transactionLeval
p54489
tp54490
I1
s(g16232
I42
g16233
Vinsert
p54491
I45
VStringLiteral: "Ae06nawFpOJIAYpBf9wBVC+ZrjU/nuEtokBqCce6HWIoF6rYgz0V0W/47x5KpOnQ2i7X3kFe\u005cn"
p54492
tp54493
I1
s(g7394
I42
g7395
Vinsert
p54494
I32
VMethodInvocation
p54495
tp54496
I5
s(g11150
I42
g11151
Vinsert
p54497
I9
VBooleanLiteral: false
p54498
tp54499
I1
s(g42114
I42
g42115
Vinsert
p54500
I42
VSimpleName: PoolableStatement
p54501
tp54502
I2
s(g11678
I42
g11679
Vinsert
p54503
I8
VBlock
p54504
tp54505
I1
s(g20215
I42
g20216
Vinsert
p54506
I42
VSimpleName: stmt
p54507
tp54508
I1
s(g5648
I42
g5649
Vinsert
p54509
I52
VThisExpression
p54510
tp54511
I2
s(g2775
I42
g2776
Vinsert
p54512
I42
VSimpleName: TraceErrorEvent
p54513
tp54514
I2
s(g9959
I42
g9960
Vinsert
p54515
I44
VSingleVariableDeclaration
p54516
tp54517
I3
s(g22658
I42
g22659
Vinsert
p54518
I45
VStringLiteral: "\u005cnfrom table3;--comment2 goes here"
p54519
tp54520
I1
s(g29475
I42
g29476
Vinsert
p54521
I45
VStringLiteral: "f1"
p54522
tp54523
I1
s(Vinsert
p54524
I42
VSimpleName: toString
p54525
Vinsert
p54526
I42
VSimpleName: tableMapping
p54527
tp54528
I1
s(g20777
I42
g20778
Vinsert
p54529
I39
VPrimitiveType: boolean
p54530
tp54531
I2
s(g12090
I42
g12091
Vinsert
p54532
I42
VSimpleName: SQLException
p54533
tp54534
I1
s(g18871
I42
g18872
Vinsert
p54535
I52
VThisExpression
p54536
tp54537
I1
s(g9727
I42
g9728
Vinsert
p54538
I83
VModifier: final
p54539
tp54540
I1
s(g3836
I42
g3837
Vinsert
p54541
I27
VInfixExpression: ==
p54542
tp54543
I1
s(g33739
I42
g33740
Vinsert
p54544
I27
VInfixExpression: &&
p54545
tp54546
I1
s(g14279
I42
g14280
Vinsert
p54547
I45
VStringLiteral: "SELECT owner AS obj_owner, object_name AS obj_name, object_type AS obj_type, dbms_rowid.rowid_create(1, row_wait_obj#, ROW_WAIT_FILE#, ROW_WAIT_BLOCK#, ROW_WAIT_ROW#) AS obj_rowid, a.username AS db_user\u005cn"
p54548
tp54549
I1
s(g2742
I42
g2743
Vinsert
p54550
I42
VSimpleName: unit
p54551
tp54552
I1
s(g17007
I42
g17008
Vinsert
p54553
I43
VSimpleType: DruidDataSource
p54554
tp54555
I4
s(g9534
I42
g9535
Vinsert
p54556
I43
VSimpleType: PreparedStatementHolder
p54557
tp54558
I1
s(Vinsert
p54559
I42
VSimpleName: token
p54560
Vinsert
p54561
I45
VStringLiteral: "DISCARD"
p54562
tp54563
I1
s(g972
I42
g973
Vinsert
p54564
I45
VStringLiteral: "WHERE DO.object_id = lo.object_id"
p54565
tp54566
I1
s(g49759
I42
g49760
Vinsert
p54567
I44
VSingleVariableDeclaration
p54568
tp54569
I5
s(g48954
I42
g48955
Vinsert
p54570
I42
VSimpleName: print
p54571
tp54572
I2
s(g35237
I42
g35238
Vinsert
p54573
I43
VSimpleType: Filter
p54574
tp54575
I3
s(g22636
I42
g22637
Vinsert
p54576
I42
VSimpleName: text
p54577
tp54578
I3
s(g16075
I42
g16076
Vinsert
p54579
I27
VInfixExpression: !=
p54580
tp54581
I4
s(g15255
I42
g15256
Vinsert
p54582
I21
VExpressionStatement
p54583
tp54584
I3
s(g24699
I42
g24700
Vinsert
p54585
I43
VSimpleType: SQLSetStatement
p54586
tp54587
I2
s(g15448
I42
g15449
Vinsert
p54588
I42
VSimpleName: initialSize
p54589
tp54590
I1
s(g17526
I42
g17527
Vinsert
p54591
I25
VIfStatement
p54592
tp54593
I4
s(g17199
I42
g17200
Vinsert
p54594
I42
VSimpleName: equalsIgnoreCase
p54595
tp54596
I7
s(g27276
I42
g27277
Vinsert
p54597
I44
VSingleVariableDeclaration
p54598
tp54599
I13
s(g6051
I42
g6052
Vinsert
p54600
I42
VSimpleName: x
p54601
tp54602
I2
s(g5574
I42
g5575
Vinsert
p54603
I21
VExpressionStatement
p54604
tp54605
I2
s(g12069
I42
g12070
Vinsert
p54606
I42
VSimpleName: tableName
p54607
tp54608
I2
s(g6760
I42
g6761
Vinsert
p54609
I42
VSimpleName: pattern
p54610
tp54611
I1
s(g11654
I42
g11655
Vinsert
p54612
I32
VMethodInvocation
p54613
tp54614
I4
s(g15986
I42
g15987
Vinsert
p54615
I42
VSimpleName: String
p54616
tp54617
I2
s(g41071
I42
g41072
Vinsert
p54618
I45
VStringLiteral: " UPDATE(employee_id, salary, commission_pct)"
p54619
tp54620
I1
s(g21517
I42
g21518
Vinsert
p54621
I42
VSimpleName: stmt
p54622
tp54623
I2
s(g16778
I42
g16779
Vinsert
p54624
I32
VMethodInvocation
p54625
tp54626
I2
s(g642
I42
g643
Vinsert
p54627
I45
VStringLiteral: "\u005ct\u005ct"
p54628
tp54629
I2
s(g9028
I42
g9029
Vinsert
p54630
I45
VStringLiteral: " OBJNO "
p54631
tp54632
I1
s(g20618
I42
g20619
Vinsert
p54633
I42
VSimpleName: setPrior
p54634
tp54635
I1
s(g6622
I42
g6623
Vinsert
p54636
I42
VSimpleName: acceptIdentifier
p54637
tp54638
I2
s(g8449
I42
g8450
Vinsert
p54639
I34
VNumberLiteral: 0
p54640
tp54641
I1
s(g21845
I42
g21846
Vinsert
p54642
I54
VTryStatement
p54643
tp54644
I1
s(g4293
I42
g4294
Vinsert
p54645
I42
VSimpleName: test_insertRow
p54646
tp54647
I1
s(g10174
I42
g10175
Vinsert
p54648
I25
VIfStatement
p54649
tp54650
I1
s(g2372
I42
g2373
Vinsert
p54651
I45
VStringLiteral: "druid.connectProperties"
p54652
tp54653
I1
s(g7751
I42
g7752
Vinsert
p54654
I59
VVariableDeclarationFragment
p54655
tp54656
I1
s(g15514
I42
g15515
Vinsert
p54657
I31
VMethodDeclaration
p54658
tp54659
I1
s(g5931
I42
g5932
Vinsert
p54660
I33
VNullLiteral
p54661
tp54662
I1
s(g11983
I42
g11984
Vinsert
p54663
I42
VSimpleName: sql
p54664
tp54665
I10
s(g10757
I42
g10758
Vinsert
p54666
I27
VInfixExpression: +
p54667
tp54668
I3
s(g4055
I42
g4056
Vinsert
p54669
I38
VPrefixExpression: ++
p54670
tp54671
I1
s(g4775
I42
g4776
Vinsert
p54672
I59
VVariableDeclarationFragment
p54673
tp54674
I1
s(g20811
I42
g20812
Vinsert
p54675
I44
VSingleVariableDeclaration
p54676
tp54677
I8
s(g2672
I42
g2673
Vinsert
p54678
I7
VAssignment: =
p54679
tp54680
I2
s(g3108
I42
g3109
Vinsert
p54681
I42
VSimpleName: url
p54682
tp54683
I1
s(g1032
I42
g1033
Vinsert
p54684
I42
VSimpleName: print
p54685
tp54686
I1
s(g19152
I42
g19153
Vinsert
p54687
I42
VSimpleName: i
p54688
tp54689
I6
s(g11790
I42
g11791
Vinsert
p54690
I42
VSimpleName: getNameInternal
p54691
tp54692
I1
s(g12639
I42
g12640
Vinsert
p54693
I45
VStringLiteral: "Pf3/wD+9ncRZhp3XxTMUO3yIRvswg+nQ7UhqfHRG2vg+SD7x9XzsDUFWbdwCJVEOLKBBRuH6\u005cn"
p54694
tp54695
I1
s(g8062
I42
g8063
Vinsert
p54696
I31
VMethodDeclaration
p54697
tp54698
I1
s(g9380
I42
g9381
Vinsert
p54699
I21
VExpressionStatement
p54700
tp54701
I1
s(g3574
I42
g3575
Vinsert
p54702
I14
VClassInstanceCreation
p54703
tp54704
I1
s(g4050
I42
g4051
Vinsert
p54705
I42
VSimpleName: printAndAccept
p54706
tp54707
I3
s(g286
I42
g287
Vinsert
p54708
I42
VSimpleName: sqlHash
p54709
tp54710
I5
s(g53827
I42
g53828
Vinsert
p54711
I40
VQualifiedName: Token.IDENTIFIER
p54712
tp54713
I1
s(g18496
I42
g18497
Vinsert
p54714
I31
VMethodDeclaration
p54715
tp54716
I1
s(g6592
I42
g6593
Vinsert
p54717
I31
VMethodDeclaration
p54718
tp54719
I1
s(g8166
I42
g8167
Vinsert
p54720
I42
VSimpleName: sort
p54721
tp54722
I1
s(g20909
I42
g20910
Vinsert
p54723
I42
VSimpleName: isWithTimeZone
p54724
tp54725
I1
s(g7620
I42
g7621
Vinsert
p54726
I21
VExpressionStatement
p54727
tp54728
I2
s(g8324
I42
g8325
Vinsert
p54729
I45
VStringLiteral: "\u005ct\u005ctTYPE ORACLE_LOADER\u005cn"
p54730
tp54731
I1
s(g9569
I42
g9570
Vinsert
p54732
I44
VSingleVariableDeclaration
p54733
tp54734
I1
s(g6529
I42
g6530
Vinsert
p54735
I31
VMethodDeclaration
p54736
tp54737
I1
s(g34239
I42
g34240
Vinsert
p54738
I43
VSimpleType: OdpsASTVisitor
p54739
tp54740
I20
s(g3053
I42
g3054
Vinsert
p54741
I45
VStringLiteral: "PARTITIONS"
p54742
tp54743
I1
s(g3312
I42
g3313
Vinsert
p54744
I59
VVariableDeclarationFragment
p54745
tp54746
I1
s(g27234
I42
g27235
Vinsert
p54747
I42
VSimpleName: containsBeanDefinition
p54748
tp54749
I1
s(Vinsert
p54750
I42
VSimpleName: assertEquals
p54751
Vinsert
p54752
I45
VStringLiteral: "SHOW CREATE TABLE tblname"
p54753
tp54754
I1
s(g29658
I42
g29659
Vinsert
p54755
I42
VSimpleName: nextToken
p54756
tp54757
I14
s(g10702
I42
g10703
Vinsert
p54758
I42
VSimpleName: end
p54759
tp54760
I1
s(g11
I42
g12
Vinsert
p54761
I45
VStringLiteral: "test3\u005cn"
p54762
tp54763
I1
s(g11910
I42
g11911
Vinsert
p54764
I52
VThisExpression
p54765
tp54766
I1
s(g1622
I42
g1623
Vinsert
p54767
I43
VSimpleType: SQLSubPartition
p54768
tp54769
I2
s(g16321
I42
g16322
Vinsert
p54770
I42
VSimpleName: bytes
p54771
tp54772
I6
s(g34855
I42
g34856
Vinsert
p54773
I42
VSimpleName: ch
p54774
tp54775
I1
s(g14110
I42
g14111
Vinsert
p54776
I42
VSimpleName: chain
p54777
tp54778
I4
s(g1526
I42
g1527
Vinsert
p54779
I43
VSimpleType: PGIntervalExpr
p54780
tp54781
I4
s(Vinsert
p54782
I42
VSimpleName: setParent
p54783
Vinsert
p54784
I42
VSimpleName: xmlPath
p54785
tp54786
I3
s(g4040
I42
g4041
Vinsert
p54787
I42
VSimpleName: parameter
p54788
tp54789
I1
s(g6212
I42
g6213
Vinsert
p54790
I78
VMarkerAnnotation
p54791
tp54792
I2
s(g13906
I42
g13907
Vinsert
p54793
I42
VSimpleName: getDirectDataSource
p54794
tp54795
I1
s(g4669
I42
g4670
Vinsert
p54796
I8
VBlock
p54797
tp54798
I3
s(g4088
I42
g4089
Vinsert
p54799
I8
VBlock
p54800
tp54801
I2
s(Vinsert
p54802
I42
VSimpleName: getStatementStat
p54803
Vinsert
p54804
I43
VSimpleType: Throwable
p54805
tp54806
I1
s(g11678
I42
g11679
Vinsert
p54807
I21
VExpressionStatement
p54808
tp54809
I1
s(g16759
I42
g16760
Vinsert
p54810
I43
VSimpleType: SQLName
p54811
tp54812
I1
s(g2682
I42
g2683
Vinsert
p54813
I9
VBooleanLiteral: false
p54814
tp54815
I1
s(g8098
I42
g8099
Vinsert
p54816
I42
VSimpleName: sessionId
p54817
tp54818
I1
s(g18512
I42
g18513
Vinsert
p54819
I39
VPrimitiveType: long
p54820
tp54821
I7
s(g6534
I42
g6535
Vinsert
p54822
I42
VSimpleName: max
p54823
tp54824
I2
s(g20320
I42
g20321
Vinsert
p54825
I27
VInfixExpression: ==
p54826
tp54827
I1
s(g7522
I42
g7523
Vinsert
p54828
I59
VVariableDeclarationFragment
p54829
tp54830
I2
s(g4278
I42
g4279
Vinsert
p54831
I45
VStringLiteral: "| c_datetime   | datetime     | NO   |     | 0000-00-00 00:00:00 |                             |\u005cn"
p54832
tp54833
I1
s(g26901
I42
g26902
Vinsert
p54834
I42
VSimpleName: error
p54835
tp54836
I1
s(g4424
I42
g4425
Vinsert
p54837
I42
VSimpleName: Assert
p54838
tp54839
I1
s(g19018
I42
g19019
Vinsert
p54840
I52
VThisExpression
p54841
tp54842
I8
s(g48201
I42
g48202
Vinsert
p54843
I42
VSimpleName: Wrapper
p54844
tp54845
I1
s(g8849
I42
g8850
Vinsert
p54846
I42
VSimpleName: param0Value
p54847
tp54848
I1
s(g13084
I42
g13085
Vinsert
p54849
I42
VSimpleName: stmtList
p54850
tp54851
I5
s(g10267
I42
g10268
Vinsert
p54852
I21
VExpressionStatement
p54853
tp54854
I2
s(g26675
I42
g26676
Vinsert
p54855
I42
VSimpleName: explainToDeleteSQLObject
p54856
tp54857
I1
s(g20933
I42
g20934
Vinsert
p54858
I42
VSimpleName: accept
p54859
tp54860
I1
s(g25961
I42
g25962
Vinsert
p54861
I42
VSimpleName: column
p54862
tp54863
I5
s(g10493
I42
g10494
Vinsert
p54864
I42
VSimpleName: oracleConn
p54865
tp54866
I2
s(g27234
I42
g27235
Vinsert
p54867
I42
VSimpleName: STAT_ANNOTATION_PROCESSOR_BEAN_NAME
p54868
tp54869
I1
s(g806
I42
g807
Vinsert
p54870
I41
VReturnStatement
p54871
tp54872
I4
s(g29483
I42
g29484
Vinsert
p54873
I43
VSimpleType: SQLSelectListCache
p54874
tp54875
I1
s(g5744
I42
g5745
Vinsert
p54876
I59
VVariableDeclarationFragment
p54877
tp54878
I26
s(Vinsert
p54879
I42
VSimpleName: expr
p54880
Vinsert
p54881
I42
VSimpleName: OracleExtractExpr
p54882
tp54883
I1
s(g10829
I42
g10830
Vinsert
p54884
I14
VClassInstanceCreation
p54885
tp54886
I1
s(g316
I42
g317
Vinsert
p54887
I59
VVariableDeclarationFragment
p54888
tp54889
I1
s(g6997
I42
g6998
Vinsert
p54890
I42
VSimpleName: parameters
p54891
tp54892
I1
s(g31385
I42
g31386
Vinsert
p54893
I27
VInfixExpression: ==
p54894
tp54895
I3
s(g47291
I42
g47292
Vinsert
p54896
I42
VSimpleName: SQLExpr
p54897
tp54898
I70
s(g24923
I42
g24924
Vinsert
p54899
I36
VParenthesizedExpression
p54900
tp54901
I2
s(g17534
I42
g17535
Vinsert
p54902
I42
VSimpleName: incrementKeepAliveCheckCount
p54903
tp54904
I1
s(g4689
I42
g4690
Vinsert
p54905
I45
VStringLiteral: "\u005ct\u005ctFROM TPC_CPR.TPC_CPR_ITEMS ITEM, TPC_CPR.TPC_CPR_SYSTEM_ITEMS SYS_ITEM, TPC_CPR.TPC_CPR_PRICE P\u005cn"
p54906
tp54907
I1
s(g12209
I42
g12210
Vinsert
p54908
I41
VReturnStatement
p54909
tp54910
I1
s(g13957
I42
g13958
Vinsert
p54911
I70
VEnhancedForStatement
p54912
tp54913
I5
s(g11785
I42
g11786
Vinsert
p54914
I34
VNumberLiteral: 100
p54915
tp54916
I1
s(g1180
I42
g1181
Vinsert
p54917
I31
VMethodDeclaration
p54918
tp54919
I2
s(g9317
I42
g9318
Vinsert
p54920
I43
VSimpleType: MySqlUpdateTableSource
p54921
tp54922
I1
s(g13911
I42
g13912
Vinsert
p54923
I42
VSimpleName: value
p54924
tp54925
I2
s(g27736
I42
g27737
Vinsert
p54926
I42
VSimpleName: print
p54927
tp54928
I2
s(g6442
I42
g6443
Vinsert
p54929
I45
VStringLiteral: "    ) recent_days "
p54930
tp54931
I1
s(g11537
I42
g11538
Vinsert
p54932
I39
VPrimitiveType: int
p54933
tp54934
I1
s(g2163
I42
g2164
Vinsert
p54935
I43
VSimpleType: SQLUpdateStatement
p54936
tp54937
I1
s(g30636
I42
g30637
Vinsert
p54938
I25
VIfStatement
p54939
tp54940
I1
s(g10966
I42
g10967
Vinsert
p54941
I42
VSimpleName: properties
p54942
tp54943
I2
s(g34122
I42
g34123
Vinsert
p54944
I43
VSimpleType: DecryptException
p54945
tp54946
I2
s(g6252
I42
g6253
Vinsert
p54947
I42
VSimpleName: print
p54948
tp54949
I1
s(g7404
I42
g7405
Vinsert
p54950
I42
VSimpleName: EVAL_VALUE
p54951
tp54952
I2
s(Vinsert
p54953
I42
VSimpleName: assertEquals
p54954
Vinsert
p54955
I45
VStringLiteral: "\u005cn\u005ctANALYZE PARTITION ALL"
p54956
tp54957
I1
s(g2948
I42
g2949
Vinsert
p54958
I42
VSimpleName: size
p54959
tp54960
I1
s(g42262
I42
g42263
Vinsert
p54961
I42
VSimpleName: BigDecimal
p54962
tp54963
I2
s(g19163
I42
g19164
Vinsert
p54964
I42
VSimpleName: setDriver
p54965
tp54966
I1
s(g6293
I42
g6294
Vinsert
p54967
I42
VSimpleName: metaData
p54968
tp54969
I1
s(g24542
I42
g24543
Vinsert
p54970
I60
VVariableDeclarationStatement
p54971
tp54972
I4
s(g46
I42
g47
Vinsert
p54973
I33
VNullLiteral
p54974
tp54975
I16
s(g11624
I42
g11625
Vinsert
p54976
I74
VParameterizedType: List<SQLParameter>
p54977
tp54978
I1
s(g49759
I42
g49760
Vinsert
p54979
I43
VSimpleType: MySqlPartitionByKey
p54980
tp54981
I4
s(g47192
I42
g47193
Vinsert
p54982
I45
VStringLiteral: "begin transaction"
p54983
tp54984
I1
s(g3189
I42
g3190
Vinsert
p54985
I42
VSimpleName: label
p54986
tp54987
I1
s(g29844
I42
g29845
Vinsert
p54988
I45
VStringLiteral: "TestOnReturn"
p54989
tp54990
I1
s(Vinsert
p54991
I42
VSimpleName: toSQLString
p54992
Vinsert
p54993
I45
VStringLiteral: "LOB (\u005c"CONTENT\u005c") STORE AS (\u005cn"
p54994
tp54995
I1
s(g9959
I42
g9960
Vinsert
p54996
I43
VSimpleType: DataSource
p54997
tp54998
I2
s(g6244
I42
g6245
Vinsert
p54999
I22
VFieldAccess
p55000
tp55001
I2
s(g632
I42
g633
Vinsert
p55002
I43
VSimpleType: Calendar
p55003
tp55004
I1
s(g1193
I42
g1194
Vinsert
p55005
I42
VSimpleName: errorText
p55006
tp55007
I3
s(g9327
I42
g9328
Vinsert
p55008
I43
VSimpleType: IOException
p55009
tp55010
I1
s(g14118
I42
g14119
Vinsert
p55011
I43
VSimpleType: SQLIdentifierExpr
p55012
tp55013
I6
s(g17861
I42
g17862
Vinsert
p55014
I42
VSimpleName: JSONArray
p55015
tp55016
I2
s(Vinsert
p55017
I42
VSimpleName: visit
p55018
Vinsert
p55019
I42
VSimpleName: PGASTVisitor
p55020
tp55021
I23
s(g7063
I42
g7064
Vinsert
p55022
I14
VClassInstanceCreation
p55023
tp55024
I1
s(g40598
I42
g40599
Vinsert
p55025
I42
VSimpleName: Entity
p55026
tp55027
I1
s(g6182
I42
g6183
Vinsert
p55028
I45
VStringLiteral: "WHERE customer_id > 5000;"
p55029
tp55030
I1
s(g25417
I42
g25418
Vinsert
p55031
I42
VSimpleName: setTestOnBorrow
p55032
tp55033
I3
s(g23202
I42
g23203
Vinsert
p55034
I43
VSimpleType: MultiDataSourceStatement
p55035
tp55036
I2
s(g13938
I42
g13939
Vinsert
p55037
I42
VSimpleName: errorText
p55038
tp55039
I1
s(g924
I42
g925
Vinsert
p55040
I39
VPrimitiveType: void
p55041
tp55042
I1
s(g16080
I42
g16081
Vinsert
p55043
I43
VSimpleType: SQLDeleteStatement
p55044
tp55045
I2
s(g10480
I42
g10481
Vinsert
p55046
I41
VReturnStatement
p55047
tp55048
I1
s(g3462
I42
g3463
Vinsert
p55049
I43
VSimpleType: WallConfig
p55050
tp55051
I2
s(g20975
I42
g20976
Vinsert
p55052
I43
VSimpleType: Object
p55053
tp55054
I1
s(g5757
I42
g5758
Vinsert
p55055
I42
VSimpleName: stmt
p55056
tp55057
I5
s(g24211
I42
g24212
Vinsert
p55058
I42
VSimpleName: x
p55059
tp55060
I2
s(g16213
I42
g16214
Vinsert
p55061
I42
VSimpleName: items
p55062
tp55063
I1
s(g44719
I42
g44720
Vinsert
p55064
I42
VSimpleName: rest
p55065
tp55066
I2
s(g12523
I42
g12524
Vinsert
p55067
I42
VSimpleName: accept
p55068
tp55069
I1
s(g12427
I42
g12428
Vinsert
p55070
I40
VQualifiedName: Token.UPDATE
p55071
tp55072
I1
s(g26160
I42
g26161
Vinsert
p55073
I42
VSimpleName: visitor
p55074
tp55075
I1
s(g2173
I42
g2174
Vinsert
p55076
I21
VExpressionStatement
p55077
tp55078
I1
s(g18907
I42
g18908
Vinsert
p55079
I45
VStringLiteral: "        DROP COLUMN diff_value_1,\u005cn"
p55080
tp55081
I1
s(g20856
I42
g20857
Vinsert
p55082
I42
VSimpleName: SQLParserUtils
p55083
tp55084
I1
s(g13424
I42
g13425
Vinsert
p55085
I43
VSimpleType: Exception
p55086
tp55087
I1
s(g6167
I42
g6168
Vinsert
p55088
I42
VSimpleName: WallVisitorUtils
p55089
tp55090
I1
s(g1218
I42
g1219
Vinsert
p55091
I83
VModifier: public
p55092
tp55093
I5
s(Vinsert
p55094
I42
VSimpleName: getValue
p55095
Vinsert
p55096
I42
VSimpleName: SQLBooleanExpr
p55097
tp55098
I1
s(g856
I42
g857
Vinsert
p55099
I42
VSimpleName: jmx
p55100
tp55101
I2
s(Vinsert
p55102
I42
VSimpleName: currentTimeMillis
p55103
Vinsert
p55104
I42
VSimpleName: exec
p55105
tp55106
I1
s(g19223
I42
g19224
Vinsert
p55107
I43
VSimpleType: WallConditionContext
p55108
tp55109
I4
s(g7522
I42
g7523
Vinsert
p55110
I38
VPrefixExpression: !
p55111
tp55112
I2
s(g13808
I42
g13809
Vinsert
p55113
I60
VVariableDeclarationStatement
p55114
tp55115
I2
s(g50845
I42
g50846
Vinsert
p55116
I42
VSimpleName: createExprParser
p55117
tp55118
I1
s(g40459
I42
g40460
Vinsert
p55119
I42
VSimpleName: option
p55120
tp55121
I1
s(g3202
I42
g3203
Vinsert
p55122
I27
VInfixExpression: <
p55123
tp55124
I9
s(Vinsert
p55125
I42
VSimpleName: visit
p55126
Vinsert
p55127
I42
VSimpleName: SQLCharExpr
p55128
tp55129
I2
s(g44594
I42
g44595
Vinsert
p55130
I42
VSimpleName: getConnectProperties
p55131
tp55132
I1
s(g7665
I42
g7666
Vinsert
p55133
I39
VPrimitiveType: boolean
p55134
tp55135
I1
s(g45377
I42
g45378
Vinsert
p55136
I44
VSingleVariableDeclaration
p55137
tp55138
I2
s(g9267
I42
g9268
Vinsert
p55139
I42
VSimpleName: compositeData
p55140
tp55141
I1
s(g3780
I42
g3781
Vinsert
p55142
I78
VMarkerAnnotation
p55143
tp55144
I1
s(g8891
I42
g8892
Vinsert
p55145
I8
VBlock
p55146
tp55147
I2
s(g16264
I42
g16265
Vinsert
p55148
I42
VSimpleName: props
p55149
tp55150
I2
s(g12833
I42
g12834
Vinsert
p55151
I45
VStringLiteral: "publicKey"
p55152
tp55153
I1
s(g9124
I42
g9125
Vinsert
p55154
I42
VSimpleName: selectLimit
p55155
tp55156
I4
s(g932
I42
g933
Vinsert
p55157
I43
VSimpleType: SchemaRepository
p55158
tp55159
I1
s(g2829
I42
g2830
Vinsert
p55160
I39
VPrimitiveType: long
p55161
tp55162
I1
s(g7970
I42
g7971
Vinsert
p55163
I21
VExpressionStatement
p55164
tp55165
I1
s(g1745
I42
g1746
Vinsert
p55166
I42
VSimpleName: getConditionExpr
p55167
tp55168
I1
s(g21778
I42
g21779
Vinsert
p55169
I52
VThisExpression
p55170
tp55171
I1
s(g6167
I42
g6168
Vinsert
p55172
I42
VSimpleName: x
p55173
tp55174
I1
s(g10422
I42
g10423
Vinsert
p55175
I83
VModifier: public
p55176
tp55177
I2
s(g26901
I42
g26902
Vinsert
p55178
I21
VExpressionStatement
p55179
tp55180
I3
s(g2712
I42
g2713
Vinsert
p55181
I41
VReturnStatement
p55182
tp55183
I53
s(g15188
I42
g15189
Vinsert
p55184
I27
VInfixExpression: !=
p55185
tp55186
I2
s(g2228
I42
g2229
Vinsert
p55187
I43
VSimpleType: MySqlUserName
p55188
tp55189
I1
s(g16145
I42
g16146
Vinsert
p55190
I32
VMethodInvocation
p55191
tp55192
I19
s(g4755
I42
g4756
Vinsert
p55193
I14
VClassInstanceCreation
p55194
tp55195
I1
s(g13933
I42
g13934
Vinsert
p55196
I42
VSimpleName: storage
p55197
tp55198
I1
s(Vinsert
p55199
I42
VSimpleName: indexOf
p55200
Vinsert
p55201
I45
VStringLiteral: "truncate"
p55202
tp55203
I1
s(g17374
I42
g17375
Vinsert
p55204
I45
VStringLiteral: "PCTFREE 0\u005cn"
p55205
tp55206
I1
s(g10911
I42
g10912
Vinsert
p55207
I43
VSimpleType: TableStat.Name
p55208
tp55209
I1
s(g13504
I42
g13505
Vinsert
p55210
I42
VSimpleName: String
p55211
tp55212
I5
s(g5872
I42
g5873
Vinsert
p55213
I43
VSimpleType: SQLSelectQueryBlock
p55214
tp55215
I2
s(g557
I42
g558
Vinsert
p55216
I45
VStringLiteral: "\u005cn\u005ctFROM (SELECT *"
p55217
tp55218
I1
s(g37470
I42
g37471
Vinsert
p55219
I74
VParameterizedType: Set<Object>
p55220
tp55221
I1
s(g101
I42
g102
Vinsert
p55222
I40
VQualifiedName: ResultSet.CLOSE_CURSORS_AT_COMMIT
p55223
tp55224
I1
s(g18016
I42
g18017
Vinsert
p55225
I42
VSimpleName: ConfigFilter
p55226
tp55227
I1
s(g24462
I42
g24463
Vinsert
p55228
I32
VMethodInvocation
p55229
tp55230
I1
s(g12159
I42
g12160
Vinsert
p55231
I8
VBlock
p55232
tp55233
I1
s(g4134
I42
g4135
Vinsert
p55234
I32
VMethodInvocation
p55235
tp55236
I1
s(g1913
I42
g1914
Vinsert
p55237
I10
VBreakStatement
p55238
tp55239
I1
s(g1027
I42
g1028
Vinsert
p55240
I27
VInfixExpression: !=
p55241
tp55242
I1
s(g11297
I42
g11298
Vinsert
p55243
I7
VAssignment: =
p55244
tp55245
I2
s(g11706
I42
g11707
Vinsert
p55246
I42
VSimpleName: lock
p55247
tp55248
I1
s(Vinsert
p55249
I42
VSimpleName: setParent
p55250
Vinsert
p55251
I42
VSimpleName: addStatement
p55252
tp55253
I1
s(g791
I42
g792
Vinsert
p55254
I42
VSimpleName: getParent
p55255
tp55256
I4
s(g16525
I42
g16526
Vinsert
p55257
I43
VSimpleType: HMappingDefaultImpl
p55258
tp55259
I3
s(g18831
I42
g18832
Vinsert
p55260
I45
VStringLiteral: "tenant"
p55261
tp55262
I1
s(g4293
I42
g4294
Vinsert
p55263
I43
VSimpleType: Exception
p55264
tp55265
I1
s(g34186
I42
g34187
Vinsert
p55266
I34
VNumberLiteral: 1
p55267
tp55268
I7
s(g7264
I42
g7265
Vinsert
p55269
I32
VMethodInvocation
p55270
tp55271
I2
s(g6283
I42
g6284
Vinsert
p55272
I41
VReturnStatement
p55273
tp55274
I6
s(g22874
I42
g22875
Vinsert
p55275
I42
VSimpleName: Statement
p55276
tp55277
I6
s(g2652
I42
g2653
Vinsert
p55278
I42
VSimpleName: getValuesList
p55279
tp55280
I1
s(Vinsert
p55281
I42
VSimpleName: check
p55282
Vinsert
p55283
I42
VSimpleName: SQLBinaryOpExpr
p55284
tp55285
I2
s(g9493
I42
g9494
Vinsert
p55286
I45
VStringLiteral: "*"
p55287
tp55288
I2
s(g19749
I42
g19750
Vinsert
p55289
I42
VSimpleName: GT
p55290
tp55291
I1
s(g7522
I42
g7523
Vinsert
p55292
I42
VSimpleName: MAX_RETRY
p55293
tp55294
I1
s(Vinsert
p55295
I42
VSimpleName: parseDeleteStatement
p55296
Vinsert
p55297
I43
VSimpleType: OracleStatementParser
p55298
tp55299
I2
s(g2819
I42
g2820
Vinsert
p55300
I42
VSimpleName: connectionFactory
p55301
tp55302
I2
s(g26675
I42
g26676
Vinsert
p55303
I43
VSimpleType: String
p55304
tp55305
I1
s(g21084
I42
g21085
Vinsert
p55306
I43
VSimpleType: XAException
p55307
tp55308
I1
s(Vinsert
p55309
I42
VSimpleName: endVisit
p55310
Vinsert
p55311
I42
VSimpleName: partitionBy
p55312
tp55313
I1
s(g11654
I42
g11655
Vinsert
p55314
I42
VSimpleName: ucase
p55315
tp55316
I1
s(g27298
I42
g27299
Vinsert
p55317
I40
VQualifiedName: Token.SHARE
p55318
tp55319
I1
s(g5500
I42
g5501
Vinsert
p55320
I42
VSimpleName: singletonList
p55321
tp55322
I1
s(g29813
I42
g29814
Vinsert
p55323
I38
VPrefixExpression: ++
p55324
tp55325
I1
s(g9652
I42
g9653
Vinsert
p55326
I42
VSimpleName: config
p55327
tp55328
I2
s(g12354
I42
g12355
Vinsert
p55329
I42
VSimpleName: stmt
p55330
tp55331
I2
s(g4243
I42
g4244
Vinsert
p55332
I40
VQualifiedName: SQLColumnDefinition.Identity
p55333
tp55334
I1
s(g2915
I42
g2916
Vinsert
p55335
I42
VSimpleName: ParserException
p55336
tp55337
I4
s(g3972
I42
g3973
Vinsert
p55338
I42
VSimpleName: returnStatus
p55339
tp55340
I3
s(g10702
I42
g10703
Vinsert
p55341
I39
VPrimitiveType: int
p55342
tp55343
I1
s(g7594
I42
g7595
Vinsert
p55344
I40
VQualifiedName: SchemaResolveVisitor.Context
p55345
tp55346
I1
s(g15407
I42
g15408
Vinsert
p55347
I42
VSimpleName: ucase
p55348
tp55349
I1
s(g15314
I42
g15315
Vinsert
p55350
I42
VSimpleName: println
p55351
tp55352
I1
s(g1820
I42
g1821
Vinsert
p55353
I42
VSimpleName: printAndAccept
p55354
tp55355
I1
s(Vinsert
p55356
I42
VSimpleName: assertEquals
p55357
Vinsert
p55358
I42
VSimpleName: limit
p55359
tp55360
I1
s(g1022
I42
g1023
Vinsert
p55361
I54
VTryStatement
p55362
tp55363
I1
s(g6539
I42
g6540
Vinsert
p55364
I45
VStringLiteral: "\u005cn\u005ct\u005ctCONSTRAINT fk_deptno REFERENCES departments (department_id)"
p55365
tp55366
I2
s(g12397
I42
g12398
Vinsert
p55367
I45
VStringLiteral: "\u005ct\u005ctOR A.COUNTY LIKE ('%' || ? || '%')\u005cn"
p55368
tp55369
I1
s(g8692
I42
g8693
Vinsert
p55370
I27
VInfixExpression: &&
p55371
tp55372
I3
s(g28347
I42
g28348
Vinsert
p55373
I42
VSimpleName: server
p55374
tp55375
I1
s(Vinsert
p55376
I42
VSimpleName: setParent
p55377
Vinsert
p55378
I42
VSimpleName: SQLOrderBy
p55379
tp55380
I5
s(g5638
I42
g5639
Vinsert
p55381
I83
VModifier: public
p55382
tp55383
I1
s(g5528
I42
g5529
Vinsert
p55384
I8
VBlock
p55385
tp55386
I2
s(g19115
I42
g19116
Vinsert
p55387
I32
VMethodInvocation
p55388
tp55389
I1
s(g27070
I42
g27071
Vinsert
p55390
I42
VSimpleName: dataSource
p55391
tp55392
I4
s(g10631
I42
g10632
Vinsert
p55393
I42
VSimpleName: lexer
p55394
tp55395
I1
s(g12716
I42
g12717
Vinsert
p55396
I7
VAssignment: =
p55397
tp55398
I1
s(g1329
I42
g1330
Vinsert
p55399
I39
VPrimitiveType: void
p55400
tp55401
I1
s(g21061
I42
g21062
Vinsert
p55402
I42
VSimpleName: JFrame
p55403
tp55404
I1
s(g6529
I42
g6530
Vinsert
p55405
I42
VSimpleName: druidDataSourceStatStrategy
p55406
tp55407
I1
s(g9939
I42
g9940
Vinsert
p55408
I34
VNumberLiteral: 100
p55409
tp55410
I1
s(g28278
I42
g28279
Vinsert
p55411
I8
VBlock
p55412
tp55413
I10
s(g517
I42
g518
Vinsert
p55414
I43
VSimpleType: Object
p55415
tp55416
I2
s(g47044
I42
g47045
Vinsert
p55417
I45
VStringLiteral: "\u005ct\u005c"IS_JOIN\u005c" CHAR(1) NOT NULL ENABLE\u005cn"
p55418
tp55419
I1
s(g1027
I42
g1028
Vinsert
p55420
I42
VSimpleName: getMinExtents
p55421
tp55422
I1
s(g2586
I42
g2587
Vinsert
p55423
I42
VSimpleName: field
p55424
tp55425
I3
s(g19163
I42
g19164
Vinsert
p55426
I83
VModifier: public
p55427
tp55428
I1
s(g5211
I42
g5212
Vinsert
p55429
I45
VStringLiteral: "\u005cnPARTITION BY KEY () PARTITIONS 2"
p55430
tp55431
I1
s(g2125
I42
g2126
Vinsert
p55432
I52
VThisExpression
p55433
tp55434
I1
s(g121
I42
g122
Vinsert
p55435
I60
VVariableDeclarationStatement
p55436
tp55437
I1
s(g5719
I42
g5720
Vinsert
p55438
I42
VSimpleName: String
p55439
tp55440
I1
s(g846
I42
g847
Vinsert
p55441
I42
VSimpleName: onConflictConstraint
p55442
tp55443
I1
s(g39934
I42
g39935
Vinsert
p55444
I42
VSimpleName: charset
p55445
tp55446
I1
s(g27783
I42
g27784
Vinsert
p55447
I40
VQualifiedName: System.out
p55448
tp55449
I11
s(g14551
I42
g14552
Vinsert
p55450
I42
VSimpleName: x
p55451
tp55452
I5
s(g23476
I42
g23477
Vinsert
p55453
I45
VStringLiteral: "\u005ct, IFNULL(spare1, 0)\u005cn"
p55454
tp55455
I1
s(g12138
I42
g12139
Vinsert
p55456
I45
VStringLiteral: "GROUP BY seller_no, invoice_date\u005cn"
p55457
tp55458
I1
s(g13223
I42
g13224
Vinsert
p55459
I43
VSimpleType: SQLException
p55460
tp55461
I1
s(Vinsert
p55462
I42
VSimpleName: getExpr
p55463
Vinsert
p55464
I43
VSimpleType: PGShowStatement
p55465
tp55466
I1
s(g3078
I42
g3079
Vinsert
p55467
I42
VSimpleName: getProperty
p55468
tp55469
I1
s(g11566
I42
g11567
Vinsert
p55470
I42
VSimpleName: DruidConnectionHolder
p55471
tp55472
I2
s(Vinsert
p55473
I42
VSimpleName: expr
p55474
Vinsert
p55475
I42
VSimpleName: SQLCaseExpr
p55476
tp55477
I1
s(g47604
I42
g47605
Vinsert
p55478
I45
VStringLiteral: "add statistic tbl_shop column_sum shop_name;"
p55479
tp55480
I1
s(g2383
I42
g2384
Vinsert
p55481
I43
VSimpleType: DruidDataSource
p55482
tp55483
I1
s(g54782
I42
g54783
Vinsert
p55484
I42
VSimpleName: setXmlPath
p55485
tp55486
I1
s(Vinsert
p55487
I42
VSimpleName: add
p55488
Vinsert
p55489
I42
VSimpleName: with
p55490
tp55491
I1
s(Vinsert
p55492
I42
VSimpleName: assertFalse
p55493
Vinsert
p55494
I42
VSimpleName: setDropTableAllow
p55495
tp55496
I1
s(g3266
I42
g3267
Vinsert
p55497
I42
VSimpleName: startNano
p55498
tp55499
I1
s(g8449
I42
g8450
Vinsert
p55500
I59
VVariableDeclarationFragment
p55501
tp55502
I1
s(g1425
I42
g1426
Vinsert
p55503
I43
VSimpleType: String
p55504
tp55505
I1
s(g9235
I42
g9236
Vinsert
p55506
I21
VExpressionStatement
p55507
tp55508
I2
s(g3674
I42
g3675
Vinsert
p55509
I45
VStringLiteral: " sqlstate "
p55510
tp55511
I1
s(g13868
I42
g13869
Vinsert
p55512
I42
VSimpleName: client
p55513
tp55514
I1
s(g11711
I42
g11712
Vinsert
p55515
I33
VNullLiteral
p55516
tp55517
I1
s(g10100
I42
g10101
Vinsert
p55518
I27
VInfixExpression: *
p55519
tp55520
I1
s(g48201
I42
g48202
Vinsert
p55521
I44
VSingleVariableDeclaration
p55522
tp55523
I1
s(g8734
I42
g8735
Vinsert
p55524
I40
VQualifiedName: Token.NOT
p55525
tp55526
I1
s(g567
I42
g568
Vinsert
p55527
I32
VMethodInvocation
p55528
tp55529
I3
s(Vinsert
p55530
I42
VSimpleName: assertNotNull
p55531
Vinsert
p55532
I42
VSimpleName: getRowId
p55533
tp55534
I1
s(g13084
I42
g13085
Vinsert
p55535
I34
VNumberLiteral: 0
p55536
tp55537
I13
s(g11991
I42
g11992
Vinsert
p55538
I42
VSimpleName: values
p55539
tp55540
I4
s(g18581
I42
g18582
Vinsert
p55541
I42
VSimpleName: String
p55542
tp55543
I7
s(g1780
I42
g1781
Vinsert
p55544
I42
VSimpleName: item
p55545
tp55546
I1
s(g11686
I42
g11687
Vinsert
p55547
I45
VStringLiteral: "\u005cn\u005ctsupplier_id NUMBER(6),"
p55548
tp55549
I2
s(g44340
I42
g44341
Vinsert
p55550
I42
VSimpleName: sql
p55551
tp55552
I2
s(g14160
I42
g14161
Vinsert
p55553
I32
VMethodInvocation
p55554
tp55555
I1
s(g5818
I42
g5819
Vinsert
p55556
I42
VSimpleName: WebAppStatUtils
p55557
tp55558
I1
s(g4819
I42
g4820
Vinsert
p55559
I45
VStringLiteral: "\u005cn\u005ct\u005ctOR d.indkey[5] = a.attnum"
p55560
tp55561
I1
s(g2039
I42
g2040
Vinsert
p55562
I31
VMethodDeclaration
p55563
tp55564
I1
s(g4362
I42
g4363
Vinsert
p55565
I42
VSimpleName: toLowerCase
p55566
tp55567
I1
s(g21499
I42
g21500
Vinsert
p55568
I42
VSimpleName: driverClass
p55569
tp55570
I2
s(g61
I42
g62
Vinsert
p55571
I59
VVariableDeclarationFragment
p55572
tp55573
I1
s(g23744
I42
g23745
Vinsert
p55574
I45
VStringLiteral: "wrh$_tempfile"
p55575
tp55576
I2
s(g46797
I42
g46798
Vinsert
p55577
I42
VSimpleName: put
p55578
tp55579
I2
s(g12854
I42
g12855
Vinsert
p55580
I42
VSimpleName: XASupport
p55581
tp55582
I1
s(Vinsert
p55583
I42
VSimpleName: nextToken
p55584
Vinsert
p55585
I40
VQualifiedName: Token.DATABASE
p55586
tp55587
I1
s(g37063
I42
g37064
Vinsert
p55588
I42
VSimpleName: setBlob
p55589
tp55590
I1
s(g542
I42
g543
Vinsert
p55591
I45
VStringLiteral: "\u005ct\u005ct'CheckMobileConflict', \u005cn"
p55592
tp55593
I1
s(g16367
I42
g16368
Vinsert
p55594
I42
VSimpleName: PreparedStatementKey
p55595
tp55596
I1
s(g5017
I42
g5018
Vinsert
p55597
I42
VSimpleName: sql
p55598
tp55599
I1
s(g8386
I42
g8387
Vinsert
p55600
I42
VSimpleName: referencedTables
p55601
tp55602
I1
s(g43158
I42
g43159
Vinsert
p55603
I40
VQualifiedName: Token.IDENTIFIER
p55604
tp55605
I1
s(g10953
I42
g10954
Vinsert
p55606
I42
VSimpleName: selectParser
p55607
tp55608
I2
s(g36569
I42
g36570
Vinsert
p55609
I27
VInfixExpression: ==
p55610
tp55611
I1
s(g4921
I42
g4922
Vinsert
p55612
I25
VIfStatement
p55613
tp55614
I5
s(g8627
I42
g8628
Vinsert
p55615
I59
VVariableDeclarationFragment
p55616
tp55617
I2
s(g14343
I42
g14344
Vinsert
p55618
I60
VVariableDeclarationStatement
p55619
tp55620
I1
s(g18938
I42
g18939
Vinsert
p55621
I43
VSimpleType: SQLSelect
p55622
tp55623
I10
s(g5450
I42
g5451
Vinsert
p55624
I34
VNumberLiteral: 1
p55625
tp55626
I2
s(g6617
I42
g6618
Vinsert
p55627
I74
VParameterizedType: ArrayList<String>
p55628
tp55629
I2
s(g4144
I42
g4145
Vinsert
p55630
I42
VSimpleName: SQLCharExpr
p55631
tp55632
I1
s(g17678
I42
g17679
Vinsert
p55633
I42
VSimpleName: getNotFail
p55634
tp55635
I1
s(g27744
I42
g27745
Vinsert
p55636
I45
VStringLiteral: "\u005cn\u005ct\u005ctSELECT project_deduct_mandays"
p55637
tp55638
I1
s(g42762
I42
g42763
Vinsert
p55639
I42
VSimpleName: tableSource
p55640
tp55641
I1
s(g7807
I42
g7808
Vinsert
p55642
I43
VSimpleType: List
p55643
tp55644
I14
s(g20439
I42
g20440
Vinsert
p55645
I21
VExpressionStatement
p55646
tp55647
I3
s(g17106
I42
g17107
Vinsert
p55648
I45
VStringLiteral: "true"
p55649
tp55650
I1
s(g4188
I42
g4189
Vinsert
p55651
I40
VQualifiedName: java.util.Collections
p55652
tp55653
I2
s(g32633
I42
g32634
Vinsert
p55654
I42
VSimpleName: x
p55655
tp55656
I6
s(g3780
I42
g3781
Vinsert
p55657
I59
VVariableDeclarationFragment
p55658
tp55659
I11
s(g7409
I42
g7410
Vinsert
p55660
I8
VBlock
p55661
tp55662
I2
s(g3139
I42
g3140
Vinsert
p55663
I40
VQualifiedName: Map.Entry
p55664
tp55665
I1
s(g3584
I42
g3585
Vinsert
p55666
I43
VSimpleType: MockStatement
p55667
tp55668
I1
s(g13445
I42
g13446
Vinsert
p55669
I42
VSimpleName: HResultSetMetaData
p55670
tp55671
I2
s(g7264
I42
g7265
Vinsert
p55672
I41
VReturnStatement
p55673
tp55674
I1
s(g16501
I42
g16502
Vinsert
p55675
I42
VSimpleName: parseCreateType
p55676
tp55677
I1
s(g962
I42
g963
Vinsert
p55678
I42
VSimpleName: resultSet
p55679
tp55680
I1
s(Vinsert
p55681
I42
VSimpleName: assertTrue
p55682
Vinsert
p55683
I42
VSimpleName: wrap
p55684
tp55685
I2
s(g10082
I42
g10083
Vinsert
p55686
I43
VSimpleType: Exception
p55687
tp55688
I1
s(g29345
I42
g29346
Vinsert
p55689
I38
VPrefixExpression: !
p55690
tp55691
I2
s(g1324
I42
g1325
Vinsert
p55692
I42
VSimpleName: nextToken
p55693
tp55694
I1
s(g856
I42
g857
Vinsert
p55695
I42
VSimpleName: Boolean
p55696
tp55697
I1
s(g12555
I42
g12556
Vinsert
p55698
I74
VParameterizedType: Map<String,Object>
p55699
tp55700
I1
s(g48774
I42
g48775
Vinsert
p55701
I42
VSimpleName: getFilters
p55702
tp55703
I1
s(g1496
I42
g1497
Vinsert
p55704
I42
VSimpleName: sql
p55705
tp55706
I2
s(g1375
I42
g1376
Vinsert
p55707
I42
VSimpleName: get
p55708
tp55709
I2
s(g8022
I42
g8023
Vinsert
p55710
I43
VSimpleType: SQLAlterTableDropColumnItem
p55711
tp55712
I2
s(g9629
I42
g9630
Vinsert
p55713
I7
VAssignment: =
p55714
tp55715
I4
s(g10066
I42
g10067
Vinsert
p55716
I36
VParenthesizedExpression
p55717
tp55718
I8
s(g35307
I42
g35308
Vinsert
p55719
I40
VQualifiedName: Token.RPAREN
p55720
tp55721
I1
s(g2558
I42
g2559
Vinsert
p55722
I42
VSimpleName: token
p55723
tp55724
I1
s(Vinsert
p55725
I42
VSimpleName: assertTrue
p55726
Vinsert
p55727
I45
VStringLiteral: "DROP TRIGGER \u005c"AO_4AEACD_WEBHOOK_D367380484\u005c""
p55728
tp55729
I1
s(g1933
I42
g1934
Vinsert
p55730
I42
VSimpleName: test_getObjectInstance_1
p55731
tp55732
I1
s(g33280
I42
g33281
Vinsert
p55733
I42
VSimpleName: columns
p55734
tp55735
I1
s(g26244
I42
g26245
Vinsert
p55736
I34
VNumberLiteral: 0
p55737
tp55738
I1
s(g8142
I42
g8143
Vinsert
p55739
I8
VBlock
p55740
tp55741
I380
s(g891
I42
g892
Vinsert
p55742
I43
VSimpleType: SQLFeatureNotSupportedException
p55743
tp55744
I1
s(g763
I42
g764
Vinsert
p55745
I40
VQualifiedName: Token.CURSOR
p55746
tp55747
I1
s(g2198
I42
g2199
Vinsert
p55748
I54
VTryStatement
p55749
tp55750
I1
s(Vinsert
p55751
I42
VSimpleName: append
p55752
Vinsert
p55753
I42
VSimpleName: incrementMergeCount
p55754
tp55755
I1
s(Vinsert
p55756
I42
VSimpleName: createExprParser
p55757
Vinsert
p55758
I45
VStringLiteral: "bfile"
p55759
tp55760
I1
s(g14402
I42
g14403
Vinsert
p55761
I43
VSimpleType: Long
p55762
tp55763
I2
s(g15500
I42
g15501
Vinsert
p55764
I74
VParameterizedType: SwingWorker<Object,Object>
p55765
tp55766
I1
s(Vinsert
p55767
I42
VSimpleName: assertEquals
p55768
Vinsert
p55769
I42
VSimpleName: EvalIsNullTest
p55770
tp55771
I1
s(Vinsert
p55772
I42
VSimpleName: prepareStatement
p55773
Vinsert
p55774
I43
VSimpleType: java.sql.Connection
p55775
tp55776
I2
s(g2525
I42
g2526
Vinsert
p55777
I8
VBlock
p55778
tp55779
I58
s(g26553
I42
g26554
Vinsert
p55780
I45
VStringLiteral: "DROP INDEX "
p55781
tp55782
I1
s(g1299
I42
g1300
Vinsert
p55783
I27
VInfixExpression: !=
p55784
tp55785
I1
s(g22009
I42
g22010
Vinsert
p55786
I42
VSimpleName: toString
p55787
tp55788
I1
s(Vinsert
p55789
I42
VSimpleName: get
p55790
Vinsert
p55791
I25
VIfStatement
p55792
tp55793
I17
s(g4745
I42
g4746
Vinsert
p55794
I59
VVariableDeclarationFragment
p55795
tp55796
I1
s(g9451
I42
g9452
Vinsert
p55797
I42
VSimpleName: conn
p55798
tp55799
I1
s(g33126
I42
g33127
Vinsert
p55800
I27
VInfixExpression: *
p55801
tp55802
I3
s(g11654
I42
g11655
Vinsert
p55803
I22
VFieldAccess
p55804
tp55805
I1
s(Vinsert
p55806
I42
VSimpleName: assertEquals
p55807
Vinsert
p55808
I42
VSimpleName: commit
p55809
tp55810
I1
s(g9033
I42
g9034
Vinsert
p55811
I27
VInfixExpression: &&
p55812
tp55813
I1
s(g24979
I42
g24980
Vinsert
p55814
I42
VSimpleName: getCount_20000_more_Millis
p55815
tp55816
I1
s(g9954
I42
g9955
Vinsert
p55817
I44
VSingleVariableDeclaration
p55818
tp55819
I1
s(g8969
I42
g8970
Vinsert
p55820
I43
VSimpleType: User
p55821
tp55822
I1
s(g11935
I42
g11936
Vinsert
p55823
I33
VNullLiteral
p55824
tp55825
I1
s(g44586
I42
g44587
Vinsert
p55826
I42
VSimpleName: getErrorCount
p55827
tp55828
I2
s(g34122
I42
g34123
Vinsert
p55829
I21
VExpressionStatement
p55830
tp55831
I4
s(g301
I42
g302
Vinsert
p55832
I60
VVariableDeclarationStatement
p55833
tp55834
I57
s(g4248
I42
g4249
Vinsert
p55835
I25
VIfStatement
p55836
tp55837
I98
s(g19179
I42
g19180
Vinsert
p55838
I42
VSimpleName: String
p55839
tp55840
I2
s(g13166
I42
g13167
Vinsert
p55841
I32
VMethodInvocation
p55842
tp55843
I4
s(g15294
I42
g15295
Vinsert
p55844
I42
VSimpleName: validationQuery
p55845
tp55846
I1
s(g1933
I42
g1934
Vinsert
p55847
I39
VPrimitiveType: void
p55848
tp55849
I1
s(g24247
I42
g24248
Vinsert
p55850
I44
VSingleVariableDeclaration
p55851
tp55852
I3
s(g22636
I42
g22637
Vinsert
p55853
I42
VSimpleName: sql
p55854
tp55855
I2
s(g5872
I42
g5873
Vinsert
p55856
I32
VMethodInvocation
p55857
tp55858
I5
s(g10942
I42
g10943
Vinsert
p55859
I42
VSimpleName: visit
p55860
tp55861
I1
s(g25191
I42
g25192
Vinsert
p55862
I42
VSimpleName: SQLSelectStatement
p55863
tp55864
I1
s(g18930
I42
g18931
Vinsert
p55865
I34
VNumberLiteral: 0
p55866
tp55867
I1
s(g2614
I42
g2615
Vinsert
p55868
I40
VQualifiedName: x.columns
p55869
tp55870
I3
s(g30252
I42
g30253
Vinsert
p55871
I42
VSimpleName: test_httpServer
p55872
tp55873
I2
s(g11973
I42
g11974
Vinsert
p55874
I45
VStringLiteral: " `Extent1`.`IsPublic`"
p55875
tp55876
I1
s(g2604
I42
g2605
Vinsert
p55877
I41
VReturnStatement
p55878
tp55879
I1
s(g5584
I42
g5585
Vinsert
p55880
I42
VSimpleName: value
p55881
tp55882
I2
s(g37088
I42
g37089
Vinsert
p55883
I42
VSimpleName: SQLAlterTableDisableConstraint
p55884
tp55885
I1
s(g21481
I42
g21482
Vinsert
p55886
I43
VSimpleType: SQLCharExpr
p55887
tp55888
I1
s(g6192
I42
g6193
Vinsert
p55889
I14
VClassInstanceCreation
p55890
tp55891
I2
s(g13493
I42
g13494
Vinsert
p55892
I21
VExpressionStatement
p55893
tp55894
I12
s(g7224
I42
g7225
Vinsert
p55895
I45
VStringLiteral: "varchar"
p55896
tp55897
I1
s(g748
I42
g749
Vinsert
p55898
I42
VSimpleName: ResultSetMetaData
p55899
tp55900
I1
s(g15177
I42
g15178
Vinsert
p55901
I32
VMethodInvocation
p55902
tp55903
I12
s(g23501
I42
g23502
Vinsert
p55904
I85
VDimension
p55905
tp55906
I1
s(g34662
I42
g34663
Vinsert
p55907
I45
VStringLiteral: "AS\u005cn"
p55908
tp55909
I1
s(g2413
I42
g2414
Vinsert
p55910
I42
VSimpleName: visit
p55911
tp55912
I1
s(g31879
I42
g31880
Vinsert
p55913
I41
VReturnStatement
p55914
tp55915
I2
s(g8142
I42
g8143
Vinsert
p55916
I60
VVariableDeclarationStatement
p55917
tp55918
I20
s(g18648
I42
g18649
Vinsert
p55919
I39
VPrimitiveType: void
p55920
tp55921
I1
s(g8282
I42
g8283
Vinsert
p55922
I7
VAssignment: =
p55923
tp55924
I1
s(g49259
I42
g49260
Vinsert
p55925
I42
VSimpleName: OracleMultiInsertStatement
p55926
tp55927
I1
s(g37973
I42
g37974
Vinsert
p55928
I42
VSimpleName: item
p55929
tp55930
I1
s(g15571
I42
g15572
Vinsert
p55931
I45
VStringLiteral: "\u005cnPARTITION BY HASH (YEAR(hired)) PARTITIONS 4"
p55932
tp55933
I1
s(g10292
I42
g10293
Vinsert
p55934
I43
VSimpleType: Configuration
p55935
tp55936
I1
s(g1903
I42
g1904
Vinsert
p55937
I21
VExpressionStatement
p55938
tp55939
I1
s(g5554
I42
g5555
Vinsert
p55940
I43
VSimpleType: Reader
p55941
tp55942
I1
s(g7409
I42
g7410
Vinsert
p55943
I42
VSimpleName: isTestOnBorrow
p55944
tp55945
I1
s(Vinsert
p55946
I42
VSimpleName: length
p55947
Vinsert
p55948
I45
VStringLiteral: "druid.oracle.pingTimeout"
p55949
tp55950
I1
s(g21499
I42
g21500
Vinsert
p55951
I42
VSimpleName: assertThat
p55952
tp55953
I1
s(g5704
I42
g5705
Vinsert
p55954
I43
VSimpleType: SQLSelect
p55955
tp55956
I2
s(g26334
I42
g26335
Vinsert
p55957
I42
VSimpleName: SQLBinaryOpExpr
p55958
tp55959
I2
s(g32001
I42
g32002
Vinsert
p55960
I43
VSimpleType: MySqlWallProvider
p55961
tp55962
I22
s(g4111
I42
g4112
Vinsert
p55963
I42
VSimpleName: start
p55964
tp55965
I1
s(g47849
I42
g47850
Vinsert
p55966
I52
VThisExpression
p55967
tp55968
I4
s(g13588
I42
g13589
Vinsert
p55969
I43
VSimpleType: Appendable
p55970
tp55971
I2
s(g41
I42
g42
Vinsert
p55972
I42
VSimpleName: isStrictSyntaxCheck
p55973
tp55974
I1
s(g3149
I42
g3150
Vinsert
p55975
I43
VSimpleType: JoinType
p55976
tp55977
I1
s(g7039
I42
g7040
Vinsert
p55978
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION ch_c,"
p55979
tp55980
I2
s(g4615
I42
g4616
Vinsert
p55981
I42
VSimpleName: stmt
p55982
tp55983
I1
s(g13700
I42
g13701
Vinsert
p55984
I42
VSimpleName: features
p55985
tp55986
I7
s(g12077
I42
g12078
Vinsert
p55987
I83
VModifier: protected
p55988
tp55989
I1
s(g35771
I42
g35772
Vinsert
p55990
I45
VStringLiteral: "t1"
p55991
tp55992
I1
s(g28507
I42
g28508
Vinsert
p55993
I7
VAssignment: =
p55994
tp55995
I1
s(g9919
I42
g9920
Vinsert
p55996
I43
VSimpleType: MySqlSelectParser
p55997
tp55998
I2
s(g8542
I42
g8543
Vinsert
p55999
I42
VSimpleName: second
p56000
tp56001
I1
s(g14540
I42
g14541
Vinsert
p56002
I83
VModifier: public
p56003
tp56004
I1
s(g37260
I42
g37261
Vinsert
p56005
I40
VQualifiedName: SQLJoinTableSource.JoinType.LEFT_SEMI_JOIN
p56006
tp56007
I1
s(g52301
I42
g52302
Vinsert
p56008
I40
VQualifiedName: SQLBinaryOperator.LessThan
p56009
tp56010
I1
s(g7002
I42
g7003
Vinsert
p56011
I8
VBlock
p56012
tp56013
I2
s(g136
I42
g137
Vinsert
p56014
I22
VFieldAccess
p56015
tp56016
I4
s(g866
I42
g867
Vinsert
p56017
I42
VSimpleName: updateLong
p56018
tp56019
I1
s(g8499
I42
g8500
Vinsert
p56020
I27
VInfixExpression: +
p56021
tp56022
I1
s(g3689
I42
g3690
Vinsert
p56023
I42
VSimpleName: context
p56024
tp56025
I3
s(g26592
I42
g26593
Vinsert
p56026
I42
VSimpleName: dataSource
p56027
tp56028
I15
s(g1554
I42
g1555
Vinsert
p56029
I42
VSimpleName: Log4jImpl
p56030
tp56031
I2
s(g46797
I42
g46798
Vinsert
p56032
I42
VSimpleName: getStatementPool
p56033
tp56034
I2
s(g19223
I42
g19224
Vinsert
p56035
I42
VSimpleName: current
p56036
tp56037
I2
s(g47568
I42
g47569
Vinsert
p56038
I42
VSimpleName: stmt
p56039
tp56040
I19
s(g31826
I42
g31827
Vinsert
p56041
I8
VBlock
p56042
tp56043
I44
s(g3002
I42
g3003
Vinsert
p56044
I52
VThisExpression
p56045
tp56046
I2
s(g2464
I42
g2465
Vinsert
p56047
I43
VSimpleType: FrameworkConfig
p56048
tp56049
I1
s(g23899
I42
g23900
Vinsert
p56050
I42
VSimpleName: value
p56051
tp56052
I2
s(g695
I42
g696
Vinsert
p56053
I14
VClassInstanceCreation
p56054
tp56055
I3
s(Vinsert
p56056
I42
VSimpleName: hashCode
p56057
Vinsert
p56058
I42
VSimpleName: over
p56059
tp56060
I2
s(g31879
I42
g31880
Vinsert
p56061
I27
VInfixExpression: !=
p56062
tp56063
I1
s(g444
I42
g445
Vinsert
p56064
I42
VSimpleName: current
p56065
tp56066
I1
s(g12443
I42
g12444
Vinsert
p56067
I42
VSimpleName: exceptionsInto
p56068
tp56069
I3
s(g937
I42
g938
Vinsert
p56070
I42
VSimpleName: objec
p56071
tp56072
I1
s(g28425
I42
g28426
Vinsert
p56073
I22
VFieldAccess
p56074
tp56075
I1
s(g9559
I42
g9560
Vinsert
p56076
I52
VThisExpression
p56077
tp56078
I1
s(g32782
I42
g32783
Vinsert
p56079
I40
VQualifiedName: com.alibaba.druid.util.HexBin
p56080
tp56081
I2
s(g48201
I42
g48202
Vinsert
p56082
I42
VSimpleName: wraaper
p56083
tp56084
I3
s(g11880
I42
g11881
Vinsert
p56085
I45
VStringLiteral: "\u005cn\u005ctcust_address CUST_ADDRESS_TYP,"
p56086
tp56087
I2
s(g4490
I42
g4491
Vinsert
p56088
I42
VSimpleName: query
p56089
tp56090
I4
s(g32069
I42
g32070
Vinsert
p56091
I42
VSimpleName: driver
p56092
tp56093
I1
s(g8030
I42
g8031
Vinsert
p56094
I8
VBlock
p56095
tp56096
I1
s(g434
I42
g435
Vinsert
p56097
I42
VSimpleName: fetchRowIndex
p56098
tp56099
I1
s(g6103
I42
g6104
Vinsert
p56100
I43
VSimpleType: OracleWallProvider
p56101
tp56102
I1
s(g2183
I42
g2184
Vinsert
p56103
I42
VSimpleName: count
p56104
tp56105
I1
s(g18031
I42
g18032
Vinsert
p56106
I42
VSimpleName: tableStats
p56107
tp56108
I1
s(g23313
I42
g23314
Vinsert
p56109
I45
VStringLiteral: "\u005ct\u005ctINITRANS 1\u005cn"
p56110
tp56111
I3
s(g27586
I42
g27587
Vinsert
p56112
I42
VSimpleName: isStrictSyntaxCheck
p56113
tp56114
I1
s(g6956
I42
g6957
Vinsert
p56115
I42
VSimpleName: SQLUpdateStatement
p56116
tp56117
I2
s(g47049
I42
g47050
Vinsert
p56118
I42
VSimpleName: updateCheckItems
p56119
tp56120
I15
s(g29300
I42
g29301
Vinsert
p56121
I43
VSimpleType: SQLSelectGroupByClause
p56122
tp56123
I1
s(g3982
I42
g3983
Vinsert
p56124
I44
VSingleVariableDeclaration
p56125
tp56126
I1
s(g23697
I42
g23698
Vinsert
p56127
I42
VSimpleName: dataSources
p56128
tp56129
I3
s(g2647
I42
g2648
Vinsert
p56130
I21
VExpressionStatement
p56131
tp56132
I2
s(g6516
I42
g6517
Vinsert
p56133
I42
VSimpleName: map
p56134
tp56135
I1
s(g156
I42
g157
Vinsert
p56136
I32
VMethodInvocation
p56137
tp56138
I2
s(Vinsert
p56139
I42
VSimpleName: assertEquals
p56140
Vinsert
p56141
I39
VPrimitiveType: short
p56142
tp56143
I1
s(g2423
I42
g2424
Vinsert
p56144
I42
VSimpleName: keyString
p56145
tp56146
I2
s(g13223
I42
g13224
Vinsert
p56147
I42
VSimpleName: getSavepointName
p56148
tp56149
I1
s(g21332
I42
g21333
Vinsert
p56150
I42
VSimpleName: SQLOrderingSpecification
p56151
tp56152
I1
s(g25125
I42
g25126
Vinsert
p56153
I42
VSimpleName: rsaDecrypter
p56154
tp56155
I2
s(g10074
I42
g10075
Vinsert
p56156
I42
VSimpleName: executeQuery
p56157
tp56158
I1
s(g10061
I42
g10062
Vinsert
p56159
I42
VSimpleName: getProperty
p56160
tp56161
I1
s(g29844
I42
g29845
Vinsert
p56162
I42
VSimpleName: getExceptionSorterClassName
p56163
tp56164
I1
s(g341
I42
g342
Vinsert
p56165
I27
VInfixExpression: &&
p56166
tp56167
I1
s(g10726
I42
g10727
Vinsert
p56168
I42
VSimpleName: addCondition
p56169
tp56170
I1
s(g24102
I42
g24103
Vinsert
p56171
I43
VSimpleType: Object
p56172
tp56173
I7
s(g6676
I42
g6677
Vinsert
p56174
I42
VSimpleName: psql
p56175
tp56176
I1
s(g25594
I42
g25595
Vinsert
p56177
I43
VSimpleType: ExportParameterVisitor
p56178
tp56179
I3
s(g12050
I42
g12051
Vinsert
p56180
I45
VStringLiteral: "\u005ct\u005ctFROM menuTemp\u005cn"
p56181
tp56182
I1
s(g9696
I42
g9697
Vinsert
p56183
I42
VSimpleName: conn
p56184
tp56185
I2
s(g1193
I42
g1194
Vinsert
p56186
I41
VReturnStatement
p56187
tp56188
I1
s(g12555
I42
g12556
Vinsert
p56189
I42
VSimpleName: WebAppStatUtils
p56190
tp56191
I1
s(g15875
I42
g15876
Vinsert
p56192
I39
VPrimitiveType: void
p56193
tp56194
I1
s(g10422
I42
g10423
Vinsert
p56195
I42
VSimpleName: resultSet
p56196
tp56197
I2
s(g20811
I42
g20812
Vinsert
p56198
I42
VSimpleName: loadClass
p56199
tp56200
I1
s(g3022
I42
g3023
Vinsert
p56201
I25
VIfStatement
p56202
tp56203
I1
s(g39695
I42
g39696
Vinsert
p56204
I44
VSingleVariableDeclaration
p56205
tp56206
I1
s(g2543
I42
g2544
Vinsert
p56207
I42
VSimpleName: nameHashCode64
p56208
tp56209
I6
s(g14187
I42
g14188
Vinsert
p56210
I78
VMarkerAnnotation
p56211
tp56212
I1
s(g16375
I42
g16376
Vinsert
p56213
I42
VSimpleName: getArguments
p56214
tp56215
I1
s(g31513
I42
g31514
Vinsert
p56216
I42
VSimpleName: bracket
p56217
tp56218
I1
s(Vinsert
p56219
I42
VSimpleName: setDesensitize
p56220
Vinsert
p56221
I45
VStringLiteral: "UPDATE customers\u005cn"
p56222
tp56223
I1
s(g28559
I42
g28560
Vinsert
p56224
I38
VPrefixExpression: ++
p56225
tp56226
I1
s(g11325
I42
g11326
Vinsert
p56227
I43
VSimpleType: String
p56228
tp56229
I1
s(g9709
I42
g9710
Vinsert
p56230
I33
VNullLiteral
p56231
tp56232
I1
s(g341
I42
g342
Vinsert
p56233
I42
VSimpleName: class_MysqlIO_Error
p56234
tp56235
I1
s(g2099
I42
g2100
Vinsert
p56236
I42
VSimpleName: Assert
p56237
tp56238
I1
s(g4452
I42
g4453
Vinsert
p56239
I42
VSimpleName: Override
p56240
tp56241
I1
s(g17777
I42
g17778
Vinsert
p56242
I16
VConditionalExpression
p56243
tp56244
I1
s(g37204
I42
g37205
Vinsert
p56245
I43
VSimpleType: Exception
p56246
tp56247
I1
s(g1888
I42
g1889
Vinsert
p56248
I40
VQualifiedName: java.sql.Time
p56249
tp56250
I1
s(g2314
I42
g2315
Vinsert
p56251
I83
VModifier: public
p56252
tp56253
I3
s(g1745
I42
g1746
Vinsert
p56254
I8
VBlock
p56255
tp56256
I1
s(g1193
I42
g1194
Vinsert
p56257
I27
VInfixExpression: ==
p56258
tp56259
I1
s(g2115
I42
g2116
Vinsert
p56260
I42
VSimpleName: column
p56261
tp56262
I1
s(g15514
I42
g15515
Vinsert
p56263
I83
VModifier: final
p56264
tp56265
I1
s(g3002
I42
g3003
Vinsert
p56266
I32
VMethodInvocation
p56267
tp56268
I5
s(g11634
I42
g11635
Vinsert
p56269
I42
VSimpleName: sqlStat
p56270
tp56271
I1
s(g48101
I42
g48102
Vinsert
p56272
I42
VSimpleName: SQLException
p56273
tp56274
I1
s(g12397
I42
g12398
Vinsert
p56275
I45
VStringLiteral: "\u005ct\u005ctOR A.PROVINCE LIKE ('%' || ? || '%')\u005cn"
p56276
tp56277
I1
s(g26868
I42
g26869
Vinsert
p56278
I39
VPrimitiveType: boolean
p56279
tp56280
I3
s(g7602
I42
g7603
Vinsert
p56281
I42
VSimpleName: SQLUnionQuery
p56282
tp56283
I2
s(g8391
I42
g8392
Vinsert
p56284
I42
VSimpleName: test_delete
p56285
tp56286
I5
s(g3949
I42
g3950
Vinsert
p56287
I42
VSimpleName: charExpr
p56288
tp56289
I2
s(g29483
I42
g29484
Vinsert
p56290
I42
VSimpleName: selectListCache
p56291
tp56292
I1
s(g7527
I42
g7528
Vinsert
p56293
I32
VMethodInvocation
p56294
tp56295
I2
s(g6587
I42
g6588
Vinsert
p56296
I38
VPrefixExpression: !
p56297
tp56298
I5
s(g3169
I42
g3170
Vinsert
p56299
I39
VPrimitiveType: char
p56300
tp56301
I1
s(Vinsert
p56302
I42
VSimpleName: accept
p56303
Vinsert
p56304
I45
VStringLiteral: "\u005cn\u005ctUSERNAME VARCHAR(255)"
p56305
tp56306
I1
s(Vinsert
p56307
I42
VSimpleName: visit
p56308
Vinsert
p56309
I42
VSimpleName: constraint
p56310
tp56311
I3
s(Vinsert
p56312
I42
VSimpleName: getColumns
p56313
Vinsert
p56314
I42
VSimpleName: getIgnoreLinesNumber
p56315
tp56316
I1
s(g6485
I42
g6486
Vinsert
p56317
I42
VSimpleName: object
p56318
tp56319
I2
s(g7330
I42
g7331
Vinsert
p56320
I42
VSimpleName: setDeleteWhereAlwayTrueCheck
p56321
tp56322
I1
s(g4689
I42
g4690
Vinsert
p56323
I45
VStringLiteral: "\u005ct\u005ctAND D.CONTRACT_DEVICE_ID = S.CONTRACT_DEVICE_ID\u005cn"
p56324
tp56325
I1
s(g54802
I42
g54803
Vinsert
p56326
I42
VSimpleName: getErrorCount
p56327
tp56328
I1
s(g23026
I42
g23027
Vinsert
p56329
I42
VSimpleName: HBQLStatementParser
p56330
tp56331
I1
s(g9195
I42
g9196
Vinsert
p56332
I59
VVariableDeclarationFragment
p56333
tp56334
I20
s(g1604
I42
g1605
Vinsert
p56335
I42
VSimpleName: xidHash
p56336
tp56337
I1
s(g20548
I42
g20549
Vinsert
p56338
I32
VMethodInvocation
p56339
tp56340
I6
s(g9977
I42
g9978
Vinsert
p56341
I42
VSimpleName: DruidDriver
p56342
tp56343
I13
s(g16075
I42
g16076
Vinsert
p56344
I42
VSimpleName: getColumns
p56345
tp56346
I1
s(g13032
I42
g13033
Vinsert
p56347
I32
VMethodInvocation
p56348
tp56349
I3
s(g18049
I42
g18050
Vinsert
p56350
I42
VSimpleName: nextToken
p56351
tp56352
I2
s(g6283
I42
g6284
Vinsert
p56353
I83
VModifier: public
p56354
tp56355
I2
s(g6684
I42
g6685
Vinsert
p56356
I40
VQualifiedName: SQLSetStatement.Option.PASSWORD
p56357
tp56358
I1
s(Vinsert
p56359
I42
VSimpleName: await
p56360
Vinsert
p56361
I45
VStringLiteral: "thread-"
p56362
tp56363
I2
s(g8849
I42
g8850
Vinsert
p56364
I42
VSimpleName: String
p56365
tp56366
I4
s(g30336
I42
g30337
Vinsert
p56367
I45
VStringLiteral: "executeCount"
p56368
tp56369
I1
s(g4381
I42
g4382
Vinsert
p56370
I24
VForStatement
p56371
tp56372
I1
s(g19139
I42
g19140
Vinsert
p56373
I31
VMethodDeclaration
p56374
tp56375
I1
s(g14361
I42
g14362
Vinsert
p56376
I42
VSimpleName: Override
p56377
tp56378
I7
s(g10011
I42
g10012
Vinsert
p56379
I43
VSimpleType: HBaseConnection
p56380
tp56381
I1
s(g46717
I42
g46718
Vinsert
p56382
I40
VQualifiedName: rangeCounters.length
p56383
tp56384
I1
s(g947
I42
g948
Vinsert
p56385
I42
VSimpleName: tableSource
p56386
tp56387
I1
s(g25961
I42
g25962
Vinsert
p56388
I59
VVariableDeclarationFragment
p56389
tp56390
I4
s(g6275
I42
g6276
Vinsert
p56391
I7
VAssignment: =
p56392
tp56393
I5
s(g19077
I42
g19078
Vinsert
p56394
I27
VInfixExpression: !=
p56395
tp56396
I4
s(g10485
I42
g10486
Vinsert
p56397
I42
VSimpleName: SQLOrderBy
p56398
tp56399
I1
s(g6323
I42
g6324
Vinsert
p56400
I42
VSimpleName: OracleUtilsTest
p56401
tp56402
I1
s(g9843
I42
g9844
Vinsert
p56403
I45
VStringLiteral: "10.20.153.63"
p56404
tp56405
I1
s(g8734
I42
g8735
Vinsert
p56406
I42
VSimpleName: accept
p56407
tp56408
I2
s(g19810
I42
g19811
Vinsert
p56409
I42
VSimpleName: lexer
p56410
tp56411
I1
s(g12055
I42
g12056
Vinsert
p56412
I42
VSimpleName: OracleRangeExpr
p56413
tp56414
I2
s(g5305
I42
g5306
Vinsert
p56415
I7
VAssignment: =
p56416
tp56417
I1
s(g13996
I42
g13997
Vinsert
p56418
I42
VSimpleName: dblink
p56419
tp56420
I2
s(g8306
I42
g8307
Vinsert
p56421
I21
VExpressionStatement
p56422
tp56423
I5
s(g21632
I42
g21633
Vinsert
p56424
I45
VStringLiteral: "AS"
p56425
tp56426
I1
s(g2198
I42
g2199
Vinsert
p56427
I8
VBlock
p56428
tp56429
I2
s(g39715
I42
g39716
Vinsert
p56430
I42
VSimpleName: setTableOf
p56431
tp56432
I1
s(g14343
I42
g14344
Vinsert
p56433
I27
VInfixExpression: <
p56434
tp56435
I1
s(g37739
I42
g37740
Vinsert
p56436
I74
VParameterizedType: List<SQLExpr>
p56437
tp56438
I1
s(g25257
I42
g25258
Vinsert
p56439
I40
VQualifiedName: com.alibaba.druid.sql.dialect.db2.ast.stmt.DB2SelectQueryBlock
p56440
tp56441
I1
s(g5892
I42
g5893
Vinsert
p56442
I42
VSimpleName: sql
p56443
tp56444
I2
s(g4931
I42
g4932
Vinsert
p56445
I44
VSingleVariableDeclaration
p56446
tp56447
I3
s(g2525
I42
g2526
Vinsert
p56448
I42
VSimpleName: stmt
p56449
tp56450
I6
s(g17966
I42
g17967
Vinsert
p56451
I45
VStringLiteral: "\u005cn\u005ctPARTITION p3 VALUES LESS THAN (21)"
p56452
tp56453
I1
s(g6455
I42
g6456
Vinsert
p56454
I45
VStringLiteral: "logger can not be null"
p56455
tp56456
I1
s(g13032
I42
g13033
Vinsert
p56457
I27
VInfixExpression: !=
p56458
tp56459
I1
s(g14088
I42
g14089
Vinsert
p56460
I43
VSimpleType: DruidAbstractDataSource
p56461
tp56462
I1
s(g6167
I42
g6168
Vinsert
p56463
I42
VSimpleName: getConfig
p56464
tp56465
I1
s(g36826
I42
g36827
Vinsert
p56466
I40
VQualifiedName: com.alibaba.druid.stat.JdbcStatContext
p56467
tp56468
I2
s(g2428
I42
g2429
Vinsert
p56469
I42
VSimpleName: fk
p56470
tp56471
I1
s(g801
I42
g802
Vinsert
p56472
I42
VSimpleName: Assert
p56473
tp56474
I1
s(g43158
I42
g43159
Vinsert
p56475
I27
VInfixExpression: ==
p56476
tp56477
I2
s(g24531
I42
g24532
Vinsert
p56478
I42
VSimpleName: String
p56479
tp56480
I1
s(g10239
I42
g10240
Vinsert
p56481
I58
VVariableDeclarationExpression
p56482
tp56483
I1
s(g23433
I42
g23434
Vinsert
p56484
I42
VSimpleName: type
p56485
tp56486
I1
s(g4740
I42
g4741
Vinsert
p56487
I32
VMethodInvocation
p56488
tp56489
I1
s(g14155
I42
g14156
Vinsert
p56490
I42
VSimpleName: Savepoint
p56491
tp56492
I1
s(g8653
I42
g8654
Vinsert
p56493
I78
VMarkerAnnotation
p56494
tp56495
I1
s(g3427
I42
g3428
Vinsert
p56496
I21
VExpressionStatement
p56497
tp56498
I8
s(g6612
I42
g6613
Vinsert
p56499
I14
VClassInstanceCreation
p56500
tp56501
I1
s(g18801
I42
g18802
Vinsert
p56502
I21
VExpressionStatement
p56503
tp56504
I2
s(g5475
I42
g5476
Vinsert
p56505
I60
VVariableDeclarationStatement
p56506
tp56507
I1
s(g18005
I42
g18006
Vinsert
p56508
I45
VStringLiteral: " ) ENGINE=InnoDB DEFAULT CHARSET=utf8;"
p56509
tp56510
I1
s(g11691
I42
g11692
Vinsert
p56511
I42
VSimpleName: queryBlock
p56512
tp56513
I1
s(g3378
I42
g3379
Vinsert
p56514
I45
VStringLiteral: "SELECT COUNT(1) AS count FROM `team` "
p56515
tp56516
I1
s(g20259
I42
g20260
Vinsert
p56517
I41
VReturnStatement
p56518
tp56519
I5
s(g9722
I42
g9723
Vinsert
p56520
I43
VSimpleType: SQLBinaryOpExpr
p56521
tp56522
I17
s(g10682
I42
g10683
Vinsert
p56523
I43
VSimpleType: SQLCreateTableStatement
p56524
tp56525
I6
s(g17764
I42
g17765
Vinsert
p56526
I83
VModifier: public
p56527
tp56528
I2
s(g8509
I42
g8510
Vinsert
p56529
I42
VSimpleName: openStream
p56530
tp56531
I1
s(g17678
I42
g17679
Vinsert
p56532
I42
VSimpleName: notFail
p56533
tp56534
I1
s(g1745
I42
g1746
Vinsert
p56535
I42
VSimpleName: item
p56536
tp56537
I2
s(g8269
I42
g8270
Vinsert
p56538
I42
VSimpleName: ch
p56539
tp56540
I1
s(g17594
I42
g17595
Vinsert
p56541
I45
VStringLiteral: "?"
p56542
tp56543
I1
s(g4661
I42
g4662
Vinsert
p56544
I42
VSimpleName: assertTrue
p56545
tp56546
I1
s(g13493
I42
g13494
Vinsert
p56547
I43
VSimpleType: SQLVariantRefExpr
p56548
tp56549
I1
s(g22929
I42
g22930
Vinsert
p56550
I40
VQualifiedName: Boolean.FALSE
p56551
tp56552
I1
s(g17665
I42
g17666
Vinsert
p56553
I32
VMethodInvocation
p56554
tp56555
I3
s(g15108
I42
g15109
Vinsert
p56556
I43
VSimpleType: SQLException
p56557
tp56558
I1
s(g3144
I42
g3145
Vinsert
p56559
I45
VStringLiteral: "NO_WRITE_TO_BINLOG "
p56560
tp56561
I2
s(g6893
I42
g6894
Vinsert
p56562
I32
VMethodInvocation
p56563
tp56564
I1
s(g38836
I42
g38837
Vinsert
p56565
I42
VSimpleName: setMergeSql
p56566
tp56567
I1
s(g4075
I42
g4076
Vinsert
p56568
I25
VIfStatement
p56569
tp56570
I1
s(g15823
I42
g15824
Vinsert
p56571
I42
VSimpleName: table
p56572
tp56573
I3
s(g50661
I42
g50662
Vinsert
p56574
I9
VBooleanLiteral: false
p56575
tp56576
I1
s(g5399
I42
g5400
Vinsert
p56577
I34
VNumberLiteral: 0
p56578
tp56579
I3
s(g10039
I42
g10040
Vinsert
p56580
I42
VSimpleName: TestCase
p56581
tp56582
I3
s(g1155
I42
g1156
Vinsert
p56583
I32
VMethodInvocation
p56584
tp56585
I3
s(g39961
I42
g39962
Vinsert
p56586
I40
VQualifiedName: Level.SEVERE
p56587
tp56588
I1
s(g5813
I42
g5814
Vinsert
p56589
I42
VSimpleName: Override
p56590
tp56591
I2
s(g3467
I42
g3468
Vinsert
p56592
I42
VSimpleName: x
p56593
tp56594
I2
s(g8075
I42
g8076
Vinsert
p56595
I42
VSimpleName: SQLNumericLiteralExpr
p56596
tp56597
I1
s(g11506
I42
g11507
Vinsert
p56598
I42
VSimpleName: ServletHolder
p56599
tp56600
I2
s(g16948
I42
g16949
Vinsert
p56601
I32
VMethodInvocation
p56602
tp56603
I3
s(g48101
I42
g48102
Vinsert
p56604
I34
VNumberLiteral: 79757
p56605
tp56606
I1
s(g5954
I42
g5955
Vinsert
p56607
I21
VExpressionStatement
p56608
tp56609
I6
s(g17439
I42
g17440
Vinsert
p56610
I40
VQualifiedName: value.physicalConnectErrorCount
p56611
tp56612
I1
s(g4457
I42
g4458
Vinsert
p56613
I42
VSimpleName: map
p56614
tp56615
I1
s(g1334
I42
g1335
Vinsert
p56616
I45
VStringLiteral: "\u005cn\u005ctEND_ACT_ID_ NVARCHAR2(255),"
p56617
tp56618
I2
s(g13437
I42
g13438
Vinsert
p56619
I45
VStringLiteral: "\u005ct\u005ctGROUP BY st.regid\u005cn"
p56620
tp56621
I1
s(Vinsert
p56622
I42
VSimpleName: setSchemaObject
p56623
Vinsert
p56624
I42
VSimpleName: expr
p56625
tp56626
I1
s(g19888
I42
g19889
Vinsert
p56627
I45
VStringLiteral: " INHERITS ("
p56628
tp56629
I1
s(g9662
I42
g9663
Vinsert
p56630
I43
VSimpleType: OracleLabelStatement
p56631
tp56632
I1
s(g5351
I42
g5352
Vinsert
p56633
I42
VSimpleName: test_adapter
p56634
tp56635
I1
s(g16367
I42
g16368
Vinsert
p56636
I45
VStringLiteral: "x1"
p56637
tp56638
I1
s(g4760
I42
g4761
Vinsert
p56639
I42
VSimpleName: getOption
p56640
tp56641
I1
s(g5936
I42
g5937
Vinsert
p56642
I45
VStringLiteral: "limit 800"
p56643
tp56644
I1
s(g12930
I42
g12931
Vinsert
p56645
I42
VSimpleName: queryBlock
p56646
tp56647
I5
s(g13084
I42
g13085
Vinsert
p56648
I32
VMethodInvocation
p56649
tp56650
I44
s(g10021
I42
g10022
Vinsert
p56651
I60
VVariableDeclarationStatement
p56652
tp56653
I1
s(g14744
I42
g14745
Vinsert
p56654
I41
VReturnStatement
p56655
tp56656
I5
s(g29475
I42
g29476
Vinsert
p56657
I45
VStringLiteral: "mytable"
p56658
tp56659
I1
s(g2847
I42
g2848
Vinsert
p56660
I42
VSimpleName: checkFunctionInTableSource
p56661
tp56662
I1
s(g14244
I42
g14245
Vinsert
p56663
I21
VExpressionStatement
p56664
tp56665
I2
s(g12753
I42
g12754
Vinsert
p56666
I32
VMethodInvocation
p56667
tp56668
I196
s(g7660
I42
g7661
Vinsert
p56669
I45
VStringLiteral: "\u005cn('a2', 'b2'),"
p56670
tp56671
I2
s(g53223
I42
g53224
Vinsert
p56672
I42
VSimpleName: limit
p56673
tp56674
I1
s(g14834
I42
g14835
Vinsert
p56675
I11
VCastExpression
p56676
tp56677
I1
s(g14535
I42
g14536
Vinsert
p56678
I45
VStringLiteral: "\u005ct\u005ctAND outer.stamp < stamp\u005cn"
p56679
tp56680
I1
s(g5520
I42
g5521
Vinsert
p56681
I14
VClassInstanceCreation
p56682
tp56683
I1
s(Vinsert
p56684
I42
VSimpleName: getStatementProxy
p56685
Vinsert
p56686
I42
VSimpleName: StringBuffer
p56687
tp56688
I1
s(g8404
I42
g8405
Vinsert
p56689
I42
VSimpleName: conn
p56690
tp56691
I1
s(g2383
I42
g2384
Vinsert
p56692
I45
VStringLiteral: "druid.useGloalDataSourceStat"
p56693
tp56694
I1
s(g27644
I42
g27645
Vinsert
p56695
I42
VSimpleName: getMapping
p56696
tp56697
I1
s(g602
I42
g603
Vinsert
p56698
I32
VMethodInvocation
p56699
tp56700
I18
s(Vinsert
p56701
I42
VSimpleName: equals
p56702
Vinsert
p56703
I42
VSimpleName: _string
p56704
tp56705
I1
s(g6490
I42
g6491
Vinsert
p56706
I43
VSimpleType: OracleInsertParser
p56707
tp56708
I1
s(g7002
I42
g7003
Vinsert
p56709
I60
VVariableDeclarationStatement
p56710
tp56711
I4
s(g7389
I42
g7390
Vinsert
p56712
I45
VStringLiteral: "\u005ctINITIAL 50331648\u005cn"
p56713
tp56714
I1
s(g51614
I42
g51615
Vinsert
p56715
I42
VSimpleName: className
p56716
tp56717
I1
s(g53297
I42
g53298
Vinsert
p56718
I42
VSimpleName: createConnectionId
p56719
tp56720
I1
s(g20046
I42
g20047
Vinsert
p56721
I40
VQualifiedName: MySqlRenameTableStatement.Item
p56722
tp56723
I2
s(g2790
I42
g2791
Vinsert
p56724
I42
VSimpleName: rs
p56725
tp56726
I4
s(g43166
I42
g43167
Vinsert
p56727
I42
VSimpleName: conn
p56728
tp56729
I1
s(g3826
I42
g3827
Vinsert
p56730
I43
VSimpleType: IOException
p56731
tp56732
I1
s(g5661
I42
g5662
Vinsert
p56733
I43
VSimpleType: SQLExpr
p56734
tp56735
I1
s(g7399
I42
g7400
Vinsert
p56736
I39
VPrimitiveType: int
p56737
tp56738
I1
s(g2712
I42
g2713
Vinsert
p56739
I25
VIfStatement
p56740
tp56741
I107
s(g4467
I42
g4468
Vinsert
p56742
I43
VSimpleType: SQLIntegerExpr
p56743
tp56744
I1
s(g8399
I42
g8400
Vinsert
p56745
I31
VMethodDeclaration
p56746
tp56747
I1
s(g3113
I42
g3114
Vinsert
p56748
I42
VSimpleName: SQLParameter
p56749
tp56750
I3
s(Vinsert
p56751
I42
VSimpleName: clone
p56752
Vinsert
p56753
I43
VSimpleType: OracleDbLinkExpr
p56754
tp56755
I1
s(g48353
I42
g48354
Vinsert
p56756
I42
VSimpleName: print
p56757
tp56758
I1
s(g7502
I42
g7503
Vinsert
p56759
I21
VExpressionStatement
p56760
tp56761
I2
s(g2737
I42
g2738
Vinsert
p56762
I43
VSimpleType: ReentrantReadWriteLock
p56763
tp56764
I1
s(g4992
I42
g4993
Vinsert
p56765
I58
VVariableDeclarationExpression
p56766
tp56767
I1
s(g2775
I42
g2776
Vinsert
p56768
I45
VStringLiteral: "StatementExecuteUpdateError"
p56769
tp56770
I1
s(g32782
I42
g32783
Vinsert
p56771
I5
VArrayType: byte[]
p56772
tp56773
I2
s(g27102
I42
g27103
Vinsert
p56774
I42
VSimpleName: Statement
p56775
tp56776
I2
s(g5097
I42
g5098
Vinsert
p56777
I42
VSimpleName: setMaxActive
p56778
tp56779
I1
s(g33917
I42
g33918
Vinsert
p56780
I45
VStringLiteral: "AS\u005cn"
p56781
tp56782
I4
s(g12427
I42
g12428
Vinsert
p56783
I52
VThisExpression
p56784
tp56785
I1
s(g12586
I42
g12587
Vinsert
p56786
I42
VSimpleName: stmt
p56787
tp56788
I12
s(g6737
I42
g6738
Vinsert
p56789
I4
VArrayInitializer
p56790
tp56791
I1
s(g3002
I42
g3003
Vinsert
p56792
I83
VModifier: public
p56793
tp56794
I1
s(g8399
I42
g8400
Vinsert
p56795
I42
VSimpleName: WallProvider
p56796
tp56797
I1
s(g206
I42
g207
Vinsert
p56798
I7
VAssignment: =
p56799
tp56800
I1
s(g7578
I42
g7579
Vinsert
p56801
I14
VClassInstanceCreation
p56802
tp56803
I1
s(g10257
I42
g10258
Vinsert
p56804
I43
VSimpleType: ResultSet
p56805
tp56806
I12
s(g30322
I42
g30323
Vinsert
p56807
I42
VSimpleName: parseColumnRest
p56808
tp56809
I1
s(g20626
I42
g20627
Vinsert
p56810
I9
VBooleanLiteral: true
p56811
tp56812
I1
s(g23839
I42
g23840
Vinsert
p56813
I57
VTypeLiteral
p56814
tp56815
I5
s(g5844
I42
g5845
Vinsert
p56816
I40
VQualifiedName: Token.PRIMARY
p56817
tp56818
I1
s(g1241
I42
g1242
Vinsert
p56819
I26
VImportDeclaration
p56820
tp56821
I1
s(g20733
I42
g20734
Vinsert
p56822
I45
VStringLiteral: "from (select * from xxx) a"
p56823
tp56824
I1
s(g2707
I42
g2708
Vinsert
p56825
I42
VSimpleName: Class
p56826
tp56827
I1
s(Vinsert
p56828
I42
VSimpleName: getConnection
p56829
Vinsert
p56830
I42
VSimpleName: test_queryTimeout
p56831
tp56832
I2
s(Vinsert
p56833
I42
VSimpleName: println
p56834
Vinsert
p56835
I45
VStringLiteral: "columns : "
p56836
tp56837
I1
s(g14353
I42
g14354
Vinsert
p56838
I42
VSimpleName: Assert
p56839
tp56840
I3
s(g14622
I42
g14623
Vinsert
p56841
I42
VSimpleName: histogram_100000_1000000_Updater
p56842
tp56843
I1
s(g9420
I42
g9421
Vinsert
p56844
I14
VClassInstanceCreation
p56845
tp56846
I2
s(g21489
I42
g21490
Vinsert
p56847
I42
VSimpleName: unwrapped
p56848
tp56849
I2
s(Vinsert
p56850
I42
VSimpleName: assertEquals
p56851
Vinsert
p56852
I42
VSimpleName: EvalMethodTest_lower
p56853
tp56854
I1
s(g4144
I42
g4145
Vinsert
p56855
I42
VSimpleName: expr
p56856
tp56857
I2
s(g1544
I42
g1545
Vinsert
p56858
I45
VStringLiteral: "\u005ctID VARCHAR(50)\u005cn"
p56859
tp56860
I1
s(g6956
I42
g6957
Vinsert
p56861
I42
VSimpleName: getSQLUpdateStatement
p56862
tp56863
I2
s(g54802
I42
g54803
Vinsert
p56864
I45
VStringLiteral: "StatementErrorCount"
p56865
tp56866
I1
s(g1958
I42
g1959
Vinsert
p56867
I45
VStringLiteral: "\u005ct\u005ct\u005ctBUFFER_POOL DEFAULT\u005cn"
p56868
tp56869
I6
s(g11390
I42
g11391
Vinsert
p56870
I42
VSimpleName: tableStats
p56871
tp56872
I2
s(g16648
I42
g16649
Vinsert
p56873
I27
VInfixExpression: ==
p56874
tp56875
I3
s(g9451
I42
g9452
Vinsert
p56876
I42
VSimpleName: remove
p56877
tp56878
I1
s(g15864
I42
g15865
Vinsert
p56879
I43
VSimpleType: String
p56880
tp56881
I2
s(g15220
I42
g15221
Vinsert
p56882
I42
VSimpleName: getUrl
p56883
tp56884
I1
s(g24216
I42
g24217
Vinsert
p56885
I42
VSimpleName: user
p56886
tp56887
I2
s(g6901
I42
g6902
Vinsert
p56888
I42
VSimpleName: visit
p56889
tp56890
I3
s(g4615
I42
g4616
Vinsert
p56891
I40
VQualifiedName: Token.BY
p56892
tp56893
I1
s(g17439
I42
g17440
Vinsert
p56894
I42
VSimpleName: getAndSet
p56895
tp56896
I2
s(g29136
I42
g29137
Vinsert
p56897
I42
VSimpleName: getText
p56898
tp56899
I1
s(g18863
I42
g18864
Vinsert
p56900
I45
VStringLiteral: ",   host.reason as reason"
p56901
tp56902
I1
s(g404
I42
g405
Vinsert
p56903
I45
VStringLiteral: "TABLESPACE example\u005cn"
p56904
tp56905
I1
s(g3518
I42
g3519
Vinsert
p56906
I43
VSimpleType: Map
p56907
tp56908
I4
s(g20248
I42
g20249
Vinsert
p56909
I42
VSimpleName: accept
p56910
tp56911
I1
s(g1085
I42
g1086
Vinsert
p56912
I43
VSimpleType: List
p56913
tp56914
I12
s(g7908
I42
g7909
Vinsert
p56915
I42
VSimpleName: DruidDataSource
p56916
tp56917
I1
s(g3490
I42
g3491
Vinsert
p56918
I42
VSimpleName: getTriggerEvents
p56919
tp56920
I1
s(g8990
I42
g8991
Vinsert
p56921
I42
VSimpleName: uriStat
p56922
tp56923
I2
s(g11325
I42
g11326
Vinsert
p56924
I39
VPrimitiveType: long
p56925
tp56926
I4
s(g21370
I42
g21371
Vinsert
p56927
I43
VSimpleType: DruidDataSource
p56928
tp56929
I1
s(g6760
I42
g6761
Vinsert
p56930
I25
VIfStatement
p56931
tp56932
I2
s(g24051
I42
g24052
Vinsert
p56933
I43
VSimpleType: SQLExpr
p56934
tp56935
I1
s(g36917
I42
g36918
Vinsert
p56936
I45
VStringLiteral: "ALTER TABLE clients"
p56937
tp56938
I2
s(g43804
I42
g43805
Vinsert
p56939
I27
VInfixExpression: ==
p56940
tp56941
I1
s(g22126
I42
g22127
Vinsert
p56942
I42
VSimpleName: listener
p56943
tp56944
I2
s(g7409
I42
g7410
Vinsert
p56945
I42
VSimpleName: test_false
p56946
tp56947
I1
s(g45377
I42
g45378
Vinsert
p56948
I52
VThisExpression
p56949
tp56950
I2
s(g2915
I42
g2916
Vinsert
p56951
I8
VBlock
p56952
tp56953
I10
s(g6961
I42
g6962
Vinsert
p56954
I42
VSimpleName: requestURI
p56955
tp56956
I1
s(g15490
I42
g15491
Vinsert
p56957
I21
VExpressionStatement
p56958
tp56959
I22
s(g4243
I42
g4244
Vinsert
p56960
I42
VSimpleName: x
p56961
tp56962
I2
s(g952
I42
g953
Vinsert
p56963
I40
VQualifiedName: other.method
p56964
tp56965
I1
s(g1007
I42
g1008
Vinsert
p56966
I32
VMethodInvocation
p56967
tp56968
I2
s(g14110
I42
g14111
Vinsert
p56969
I42
VSimpleName: clob
p56970
tp56971
I2
s(g33079
I42
g33080
Vinsert
p56972
I42
VSimpleName: setMaxOpenPreparedStatements
p56973
tp56974
I1
s(g5685
I42
g5686
Vinsert
p56975
I42
VSimpleName: SQLExpr
p56976
tp56977
I2
s(g211
I42
g212
Vinsert
p56978
I42
VSimpleName: SQLJoinTableSource
p56979
tp56980
I1
s(g1923
I42
g1924
Vinsert
p56981
I42
VSimpleName: add
p56982
tp56983
I1
s(g25599
I42
g25600
Vinsert
p56984
I42
VSimpleName: setRenameTo
p56985
tp56986
I2
s(g48353
I42
g48354
Vinsert
p56987
I42
VSimpleName: i
p56988
tp56989
I1
s(g5424
I42
g5425
Vinsert
p56990
I42
VSimpleName: WallConfig
p56991
tp56992
I3
s(g18278
I42
g18279
Vinsert
p56993
I43
VSimpleType: SQLServerSetStatement
p56994
tp56995
I1
s(g8129
I42
g8130
Vinsert
p56996
I58
VVariableDeclarationExpression
p56997
tp56998
I26
s(Vinsert
p56999
I42
VSimpleName: append
p57000
Vinsert
p57001
I42
VSimpleName: name
p57002
tp57003
I6
s(g4467
I42
g4468
Vinsert
p57004
I42
VSimpleName: SQLEvalVisitorUtils
p57005
tp57006
I20
s(g48336
I42
g48337
Vinsert
p57007
I45
VStringLiteral: "DENSE_RANK"
p57008
tp57009
I1
s(g9773
I42
g9774
Vinsert
p57010
I42
VSimpleName: SQLName
p57011
tp57012
I2
s(g627
I42
g628
Vinsert
p57013
I60
VVariableDeclarationStatement
p57014
tp57015
I16
s(g261
I42
g262
Vinsert
p57016
I43
VSimpleType: NotAllowCommentException
p57017
tp57018
I1
s(g46642
I42
g46643
Vinsert
p57019
I45
VStringLiteral: "REPLACE"
p57020
tp57021
I1
s(g1309
I42
g1310
Vinsert
p57022
I26
VImportDeclaration
p57023
tp57024
I1
s(g21765
I42
g21766
Vinsert
p57025
I42
VSimpleName: PoolableStatement
p57026
tp57027
I4
s(g13659
I42
g13660
Vinsert
p57028
I42
VSimpleName: String
p57029
tp57030
I9
s(g86
I42
g87
Vinsert
p57031
I43
VSimpleType: MySqlSetTransactionIsolationLevelStatement
p57032
tp57033
I1
s(g2150
I42
g2151
Vinsert
p57034
I42
VSimpleName: sql
p57035
tp57036
I12
s(g10874
I42
g10875
Vinsert
p57037
I43
VSimpleType: FileOutputStream
p57038
tp57039
I1
s(g3598
I42
g3599
Vinsert
p57040
I42
VSimpleName: clear
p57041
tp57042
I1
s(g10846
I42
g10847
Vinsert
p57043
I7
VAssignment: =
p57044
tp57045
I1
s(g27744
I42
g27745
Vinsert
p57046
I45
VStringLiteral: "\u005cn\u005ct\u005ct))"
p57047
tp57048
I1
s(g15753
I42
g15754
Vinsert
p57049
I42
VSimpleName: visit
p57050
tp57051
I1
s(g1324
I42
g1325
Vinsert
p57052
I21
VExpressionStatement
p57053
tp57054
I3
s(g3579
I42
g3580
Vinsert
p57055
I42
VSimpleName: x
p57056
tp57057
I1
s(g9529
I42
g9530
Vinsert
p57058
I14
VClassInstanceCreation
p57059
tp57060
I1
s(g6511
I42
g6512
Vinsert
p57061
I42
VSimpleName: binaryWhere
p57062
tp57063
I2
s(g10591
I42
g10592
Vinsert
p57064
I42
VSimpleName: rightRational
p57065
tp57066
I1
s(g11940
I42
g11941
Vinsert
p57067
I14
VClassInstanceCreation
p57068
tp57069
I3
s(g14457
I42
g14458
Vinsert
p57070
I42
VSimpleName: size
p57071
tp57072
I1
s(g3202
I42
g3203
Vinsert
p57073
I42
VSimpleName: hashCode
p57074
tp57075
I2
s(g12082
I42
g12083
Vinsert
p57076
I42
VSimpleName: SQLStatement
p57077
tp57078
I1
s(g5797
I42
g5798
Vinsert
p57079
I42
VSimpleName: item
p57080
tp57081
I1
s(g26873
I42
g26874
Vinsert
p57082
I42
VSimpleName: String
p57083
tp57084
I10
s(g31366
I42
g31367
Vinsert
p57085
I40
VQualifiedName: SQLBinaryOperator.IsNot
p57086
tp57087
I1
s(g3765
I42
g3766
Vinsert
p57088
I45
VStringLiteral: "\u005cn WHERE a.ds=20150819 and b.ds=20150819;"
p57089
tp57090
I1
s(g3982
I42
g3983
Vinsert
p57091
I42
VSimpleName: DataSourceHolder
p57092
tp57093
I2
s(g16471
I42
g16472
Vinsert
p57094
I45
VStringLiteral: "CREATE TABLE KTV.KTV_FUNCTION_ROLE_20151211 (\u005cn"
p57095
tp57096
I2
s(g3472
I42
g3473
Vinsert
p57097
I42
VSimpleName: SQLName
p57098
tp57099
I1
s(g13873
I42
g13874
Vinsert
p57100
I43
VSimpleType: SQLLimit
p57101
tp57102
I2
s(g18031
I42
g18032
Vinsert
p57103
I42
VSimpleName: functionStats
p57104
tp57105
I1
s(g12859
I42
g12860
Vinsert
p57106
I40
VQualifiedName: Token.SESSION
p57107
tp57108
I1
s(g2089
I42
g2090
Vinsert
p57109
I42
VSimpleName: test_false_1
p57110
tp57111
I1
s(Vinsert
p57112
I42
VSimpleName: assertTrue
p57113
Vinsert
p57114
I45
VStringLiteral: "_result"
p57115
tp57116
I1
s(g13901
I42
g13902
Vinsert
p57117
I42
VSimpleName: getDupCloseCount
p57118
tp57119
I1
s(Vinsert
p57120
I42
VSimpleName: assertEquals
p57121
Vinsert
p57122
I42
VSimpleName: EvalMethodTest_Char_1
p57123
tp57124
I1
s(g12427
I42
g12428
Vinsert
p57125
I42
VSimpleName: getExprParser
p57126
tp57127
I1
s(g4750
I42
g4751
Vinsert
p57128
I42
VSimpleName: name
p57129
tp57130
I8
s(g27630
I42
g27631
Vinsert
p57131
I42
VSimpleName: WallSQLException
p57132
tp57133
I2
s(g1953
I42
g1954
Vinsert
p57134
I42
VSimpleName: currentQueryTimeout
p57135
tp57136
I1
s(g7206
I42
g7207
Vinsert
p57137
I27
VInfixExpression: !=
p57138
tp57139
I1
s(g18445
I42
g18446
Vinsert
p57140
I8
VBlock
p57141
tp57142
I3
s(g4243
I42
g4244
Vinsert
p57143
I45
VStringLiteral: "IDENTITY ("
p57144
tp57145
I1
s(g3164
I42
g3165
Vinsert
p57146
I45
VStringLiteral: "<td class='td_lable' width='130'>MaxTimespanOccurTime</td>"
p57147
tp57148
I1
s(g366
I42
g367
Vinsert
p57149
I42
VSimpleName: addrs
p57150
tp57151
I1
s(g5394
I42
g5395
Vinsert
p57152
I59
VVariableDeclarationFragment
p57153
tp57154
I1
s(g15177
I42
g15178
Vinsert
p57155
I22
VFieldAccess
p57156
tp57157
I5
s(g5252
I42
g5253
Vinsert
p57158
I45
VStringLiteral: "\u005ct\u005ctvalues\u005cn"
p57159
tp57160
I1
s(g39248
I42
g39249
Vinsert
p57161
I42
VSimpleName: sp
p57162
tp57163
I2
s(g3533
I42
g3534
Vinsert
p57164
I33
VNullLiteral
p57165
tp57166
I14
s(g2019
I42
g2020
Vinsert
p57167
I43
VSimpleType: Date
p57168
tp57169
I2
s(Vinsert
p57170
I42
VSimpleName: getFirstQueryBlock
p57171
Vinsert
p57172
I42
VSimpleName: left
p57173
tp57174
I3
s(Vinsert
p57175
I42
VSimpleName: setParent
p57176
Vinsert
p57177
I42
VSimpleName: setLabel
p57178
tp57179
I1
s(g14790
I42
g14791
Vinsert
p57180
I42
VSimpleName: print0
p57181
tp57182
I1
s(g7141
I42
g7142
Vinsert
p57183
I7
VAssignment: =
p57184
tp57185
I1
s(g6503
I42
g6504
Vinsert
p57186
I42
VSimpleName: incrementUpdateCount
p57187
tp57188
I2
s(g13512
I42
g13513
Vinsert
p57189
I42
VSimpleName: statement
p57190
tp57191
I1
s(g16294
I42
g16295
Vinsert
p57192
I8
VBlock
p57193
tp57194
I10
s(g17283
I42
g17284
Vinsert
p57195
I83
VModifier: final
p57196
tp57197
I2
s(g670
I42
g671
Vinsert
p57198
I22
VFieldAccess
p57199
tp57200
I2
s(Vinsert
p57201
I42
VSimpleName: name
p57202
Vinsert
p57203
I42
VSimpleName: tok
p57204
tp57205
I5
s(g11940
I42
g11941
Vinsert
p57206
I42
VSimpleName: ServletContextEvent
p57207
tp57208
I1
s(g2281
I42
g2282
Vinsert
p57209
I43
VSimpleType: ActionDesc
p57210
tp57211
I1
s(g6460
I42
g6461
Vinsert
p57212
I45
VStringLiteral: "\u005ct\u005c"CONTROLFILE_INCLUDED\u005c", \u005cn"
p57213
tp57214
I1
s(g8155
I42
g8156
Vinsert
p57215
I42
VSimpleName: SQLExprTableSource
p57216
tp57217
I2
s(g5328
I42
g5329
Vinsert
p57218
I31
VMethodDeclaration
p57219
tp57220
I1
s(g8692
I42
g8693
Vinsert
p57221
I42
VSimpleName: stringVal
p57222
tp57223
I1
s(g3078
I42
g3079
Vinsert
p57224
I45
VStringLiteral: "true"
p57225
tp57226
I1
s(Vinsert
p57227
I42
VSimpleName: setParent
p57228
Vinsert
p57229
I42
VSimpleName: parameter
p57230
tp57231
I3
s(g4750
I42
g4751
Vinsert
p57232
I43
VSimpleType: TableSpaceOption
p57233
tp57234
I2
s(g11629
I42
g11630
Vinsert
p57235
I42
VSimpleName: String
p57236
tp57237
I1
s(g8499
I42
g8500
Vinsert
p57238
I42
VSimpleName: print
p57239
tp57240
I1
s(g43821
I42
g43822
Vinsert
p57241
I42
VSimpleName: startWith
p57242
tp57243
I1
s(g12726
I42
g12727
Vinsert
p57244
I42
VSimpleName: conn
p57245
tp57246
I3
s(Vinsert
p57247
I42
VSimpleName: visit
p57248
Vinsert
p57249
I42
VSimpleName: seedValue
p57250
tp57251
I1
s(g4178
I42
g4179
Vinsert
p57252
I59
VVariableDeclarationFragment
p57253
tp57254
I1
s(g1617
I42
g1618
Vinsert
p57255
I42
VSimpleName: setFetchDirection
p57256
tp57257
I1
s(g10864
I42
g10865
Vinsert
p57258
I42
VSimpleName: equals
p57259
tp57260
I1
s(g4630
I42
g4631
Vinsert
p57261
I42
VSimpleName: config
p57262
tp57263
I2
s(g13659
I42
g13660
Vinsert
p57264
I83
VModifier: public
p57265
tp57266
I9
s(g4160
I42
g4161
Vinsert
p57267
I78
VMarkerAnnotation
p57268
tp57269
I1
s(g16025
I42
g16026
Vinsert
p57270
I42
VSimpleName: updateCount
p57271
tp57272
I3
s(g2140
I42
g2141
Vinsert
p57273
I27
VInfixExpression: !=
p57274
tp57275
I4
s(g16630
I42
g16631
Vinsert
p57276
I42
VSimpleName: Exception
p57277
tp57278
I1
s(g21947
I42
g21948
Vinsert
p57279
I42
VSimpleName: on
p57280
tp57281
I3
s(g10874
I42
g10875
Vinsert
p57282
I54
VTryStatement
p57283
tp57284
I1
s(g3093
I42
g3094
Vinsert
p57285
I33
VNullLiteral
p57286
tp57287
I1
s(g21667
I42
g21668
Vinsert
p57288
I25
VIfStatement
p57289
tp57290
I2
s(g101
I42
g102
Vinsert
p57291
I42
VSimpleName: updateCount
p57292
tp57293
I1
s(g42018
I42
g42019
Vinsert
p57294
I45
VStringLiteral: "select coalesce(f1,f2) from dual"
p57295
tp57296
I1
s(g10846
I42
g10847
Vinsert
p57297
I42
VSimpleName: reader
p57298
tp57299
I1
s(g30105
I42
g30106
Vinsert
p57300
I32
VMethodInvocation
p57301
tp57302
I6
s(g8929
I42
g8930
Vinsert
p57303
I22
VFieldAccess
p57304
tp57305
I1
s(g18049
I42
g18050
Vinsert
p57306
I42
VSimpleName: updateClause
p57307
tp57308
I2
s(g10135
I42
g10136
Vinsert
p57309
I40
VQualifiedName: Token.ONLY
p57310
tp57311
I1
s(g2619
I42
g2620
Vinsert
p57312
I40
VQualifiedName: Token.DISTINCT
p57313
tp57314
I2
s(g37973
I42
g37974
Vinsert
p57315
I32
VMethodInvocation
p57316
tp57317
I70
s(g17082
I42
g17083
Vinsert
p57318
I42
VSimpleName: openSession
p57319
tp57320
I1
s(g5908
I42
g5909
Vinsert
p57321
I45
VStringLiteral: ", "
p57322
tp57323
I1
s(Vinsert
p57324
I42
VSimpleName: expr
p57325
Vinsert
p57326
I42
VSimpleName: queryExpr
p57327
tp57328
I1
s(g5979
I42
g5980
Vinsert
p57329
I32
VMethodInvocation
p57330
tp57331
I1
s(g17512
I42
g17513
Vinsert
p57332
I78
VMarkerAnnotation
p57333
tp57334
I1
s(g28118
I42
g28119
Vinsert
p57335
I42
VSimpleName: set
p57336
tp57337
I1
s(g17764
I42
g17765
Vinsert
p57338
I44
VSingleVariableDeclaration
p57339
tp57340
I3
s(Vinsert
p57341
I42
VSimpleName: fnv_64_lower
p57342
Vinsert
p57343
I31
VMethodDeclaration
p57344
tp57345
I2
s(Vinsert
p57346
I42
VSimpleName: nameEquals
p57347
Vinsert
p57348
I42
VSimpleName: owner
p57349
tp57350
I1
s(g25556
I42
g25557
Vinsert
p57351
I52
VThisExpression
p57352
tp57353
I2
s(g27943
I42
g27944
Vinsert
p57354
I45
VStringLiteral: "\u005ctBEFORE INSERT OR UPDATE salary job_id\u005cn"
p57355
tp57356
I1
s(g18871
I42
g18872
Vinsert
p57357
I42
VSimpleName: SQLOrderBy
p57358
tp57359
I2
s(g8692
I42
g8693
Vinsert
p57360
I42
VSimpleName: commentVal
p57361
tp57362
I1
s(g19258
I42
g19259
Vinsert
p57363
I42
VSimpleName: queryBlock
p57364
tp57365
I1
s(g31957
I42
g31958
Vinsert
p57366
I40
VQualifiedName: JdbcConstants.MYSQL
p57367
tp57368
I2
s(g19849
I42
g19850
Vinsert
p57369
I42
VSimpleName: stmt
p57370
tp57371
I2
s(g8974
I42
g8975
Vinsert
p57372
I42
VSimpleName: requestErrorCount
p57373
tp57374
I1
s(g47814
I42
g47815
Vinsert
p57375
I40
VQualifiedName: Token.LEAVE
p57376
tp57377
I1
s(g10031
I42
g10032
Vinsert
p57378
I25
VIfStatement
p57379
tp57380
I3
s(g3977
I42
g3978
Vinsert
p57381
I42
VSimpleName: callStmt
p57382
tp57383
I8
s(g3987
I42
g3988
Vinsert
p57384
I42
VSimpleName: b
p57385
tp57386
I1
s(g13089
I42
g13090
Vinsert
p57387
I43
VSimpleType: FilterEventAdapter
p57388
tp57389
I2
s(g20822
I42
g20823
Vinsert
p57390
I11
VCastExpression
p57391
tp57392
I1
s(g4381
I42
g4382
Vinsert
p57393
I42
VSimpleName: i
p57394
tp57395
I6
s(g6116
I42
g6117
Vinsert
p57396
I42
VSimpleName: connection
p57397
tp57398
I2
s(g8465
I42
g8466
Vinsert
p57399
I42
VSimpleName: getFirst
p57400
tp57401
I1
s(g16980
I42
g16981
Vinsert
p57402
I32
VMethodInvocation
p57403
tp57404
I9
s(g21212
I42
g21213
Vinsert
p57405
I42
VSimpleName: ValuesClause
p57406
tp57407
I3
s(g7787
I42
g7788
Vinsert
p57408
I48
VSuperMethodInvocation
p57409
tp57410
I1
s(g18187
I42
g18188
Vinsert
p57411
I43
VSimpleType: Exception
p57412
tp57413
I4
s(g46717
I42
g46718
Vinsert
p57414
I42
VSimpleName: i
p57415
tp57416
I4
s(g10824
I42
g10825
Vinsert
p57417
I43
VSimpleType: HBaseConnection
p57418
tp57419
I1
s(g12240
I42
g12241
Vinsert
p57420
I42
VSimpleName: Override
p57421
tp57422
I2
s(g14343
I42
g14344
Vinsert
p57423
I43
VSimpleType: Object
p57424
tp57425
I1
s(g21190
I42
g21191
Vinsert
p57426
I45
VStringLiteral: "RETURN NUMBER\u005cn"
p57427
tp57428
I1
s(g15899
I42
g15900
Vinsert
p57429
I42
VSimpleName: DruidPooledConnection
p57430
tp57431
I2
s(g13677
I42
g13678
Vinsert
p57432
I60
VVariableDeclarationStatement
p57433
tp57434
I2
s(g5002
I42
g5003
Vinsert
p57435
I42
VSimpleName: MonitorContext
p57436
tp57437
I1
s(g7163
I42
g7164
Vinsert
p57438
I40
VQualifiedName: FnvHash.Constants.SYSTIMESTAMP
p57439
tp57440
I1
s(g39953
I42
g39954
Vinsert
p57441
I45
VStringLiteral: ") b    Order by       product_id desc  ) a limit 25 offset (1-1)*20"
p57442
tp57443
I1
s(g3442
I42
g3443
Vinsert
p57444
I45
VStringLiteral: "start with employee_id = 100\u005cn"
p57445
tp57446
I2
s(g2895
I42
g2896
Vinsert
p57447
I21
VExpressionStatement
p57448
tp57449
I8
s(g4594
I42
g4595
Vinsert
p57450
I42
VSimpleName: queryTimeout
p57451
tp57452
I1
s(g7216
I42
g7217
Vinsert
p57453
I45
VStringLiteral: "10"
p57454
tp57455
I1
s(g24125
I42
g24126
Vinsert
p57456
I42
VSimpleName: clob
p57457
tp57458
I1
s(g12397
I42
g12398
Vinsert
p57459
I45
VStringLiteral: "\u005ct\u005ctOR A.STREET_AREA LIKE ('%' || ? || '%')\u005cn"
p57460
tp57461
I1
s(g2819
I42
g2820
Vinsert
p57462
I42
VSimpleName: MockPreparedStatementFactory
p57463
tp57464
I1
s(g37470
I42
g37471
Vinsert
p57465
I43
VSimpleType: ArrayList
p57466
tp57467
I1
s(g2150
I42
g2151
Vinsert
p57468
I42
VSimpleName: String
p57469
tp57470
I12
s(g6582
I42
g6583
Vinsert
p57471
I9
VBooleanLiteral: true
p57472
tp57473
I1
s(g2563
I42
g2564
Vinsert
p57474
I21
VExpressionStatement
p57475
tp57476
I2
s(g2672
I42
g2673
Vinsert
p57477
I42
VSimpleName: DEFAULT_FORMAT_OPTION
p57478
tp57479
I2
s(g10892
I42
g10893
Vinsert
p57480
I45
VStringLiteral: "\u005ct\u005ct\u005ctWHERE ITEM = I;\u005cn"
p57481
tp57482
I1
s(g361
I42
g362
Vinsert
p57483
I45
VStringLiteral: "CREATE TABLE `session` ("
p57484
tp57485
I1
s(g13493
I42
g13494
Vinsert
p57486
I44
VSingleVariableDeclaration
p57487
tp57488
I6
s(g8103
I42
g8104
Vinsert
p57489
I42
VSimpleName: dataSource
p57490
tp57491
I1
s(Vinsert
p57492
I42
VSimpleName: visit
p57493
Vinsert
p57494
I42
VSimpleName: withTies
p57495
tp57496
I1
s(g11667
I42
g11668
Vinsert
p57497
I32
VMethodInvocation
p57498
tp57499
I4
s(Vinsert
p57500
I42
VSimpleName: compareToIgnoreCase
p57501
Vinsert
p57502
I42
VSimpleName: _aggregateFunctions
p57503
tp57504
I1
s(g24649
I42
g24650
Vinsert
p57505
I45
VStringLiteral: ", "
p57506
tp57507
I1
s(g2289
I42
g2290
Vinsert
p57508
I42
VSimpleName: getResourceAsStream
p57509
tp57510
I1
s(g5356
I42
g5357
Vinsert
p57511
I27
VInfixExpression: ||
p57512
tp57513
I2
s(g17861
I42
g17862
Vinsert
p57514
I43
VSimpleType: JSONArray
p57515
tp57516
I1
s(g7211
I42
g7212
Vinsert
p57517
I42
VSimpleName: character
p57518
tp57519
I3
s(g4694
I42
g4695
Vinsert
p57520
I45
VStringLiteral: "\u005ctRETENTION\u005cn"
p57521
tp57522
I3
s(g11428
I42
g11429
Vinsert
p57523
I52
VThisExpression
p57524
tp57525
I2
s(g2935
I42
g2936
Vinsert
p57526
I39
VPrimitiveType: void
p57527
tp57528
I2
s(Vinsert
p57529
I42
VSimpleName: assertEquals
p57530
Vinsert
p57531
I42
VSimpleName: EvalMethodAsinTest
p57532
tp57533
I1
s(g2682
I42
g2683
Vinsert
p57534
I59
VVariableDeclarationFragment
p57535
tp57536
I9
s(g4750
I42
g4751
Vinsert
p57537
I59
VVariableDeclarationFragment
p57538
tp57539
I11
s(g10498
I42
g10499
Vinsert
p57540
I41
VReturnStatement
p57541
tp57542
I2
s(g2069
I42
g2070
Vinsert
p57543
I21
VExpressionStatement
p57544
tp57545
I1
s(g11960
I42
g11961
Vinsert
p57546
I42
VSimpleName: segementName
p57547
tp57548
I2
s(g181
I42
g182
Vinsert
p57549
I43
VSimpleType: MySqlCreateTableStatement
p57550
tp57551
I1
s(g3949
I42
g3950
Vinsert
p57552
I42
VSimpleName: SQLCharExpr
p57553
tp57554
I4
s(g9503
I42
g9504
Vinsert
p57555
I42
VSimpleName: WallProviderStatValue
p57556
tp57557
I2
s(g14234
I42
g14235
Vinsert
p57558
I8
VBlock
p57559
tp57560
I1
s(g1100
I42
g1101
Vinsert
p57561
I32
VMethodInvocation
p57562
tp57563
I1
s(g25306
I42
g25307
Vinsert
p57564
I42
VSimpleName: JdbcStatementStat
p57565
tp57566
I1
s(g52301
I42
g52302
Vinsert
p57567
I42
VSimpleName: SQLBinaryOperator
p57568
tp57569
I2
s(g37169
I42
g37170
Vinsert
p57570
I40
VQualifiedName: SQLSetStatement.Option
p57571
tp57572
I1
s(g18930
I42
g18931
Vinsert
p57573
I40
VQualifiedName: row.length
p57574
tp57575
I1
s(g12235
I42
g12236
Vinsert
p57576
I44
VSingleVariableDeclaration
p57577
tp57578
I1
s(g7908
I42
g7909
Vinsert
p57579
I42
VSimpleName: maxWaitMillis
p57580
tp57581
I1
s(g2997
I42
g2998
Vinsert
p57582
I60
VVariableDeclarationStatement
p57583
tp57584
I4
s(g1052
I42
g1053
Vinsert
p57585
I42
VSimpleName: PreparedStatementKey
p57586
tp57587
I1
s(g8001
I42
g8002
Vinsert
p57588
I42
VSimpleName: SQLPropertyExpr
p57589
tp57590
I1
s(g4834
I42
g4835
Vinsert
p57591
I43
VSimpleType: List
p57592
tp57593
I1
s(g37435
I42
g37436
Vinsert
p57594
I7
VAssignment: =
p57595
tp57596
I11
s(g41161
I42
g41162
Vinsert
p57597
I43
VSimpleType: StatFilter
p57598
tp57599
I2
s(g13331
I42
g13332
Vinsert
p57600
I42
VSimpleName: getPinGlobalTxToPhysicalConnection
p57601
tp57602
I1
s(g487
I42
g488
Vinsert
p57603
I43
VSimpleType: InterruptedException
p57604
tp57605
I1
s(g23506
I42
g23507
Vinsert
p57606
I45
VStringLiteral: "select id, name from t"
p57607
tp57608
I1
s(g27572
I42
g27573
Vinsert
p57609
I42
VSimpleName: Assert
p57610
tp57611
I1
s(Vinsert
p57612
I42
VSimpleName: token
p57613
Vinsert
p57614
I42
VSimpleName: exprRest
p57615
tp57616
I2
s(g10422
I42
g10423
Vinsert
p57617
I42
VSimpleName: test_updateObject_1
p57618
tp57619
I1
s(g19456
I42
g19457
Vinsert
p57620
I14
VClassInstanceCreation
p57621
tp57622
I20
s(g13061
I42
g13062
Vinsert
p57623
I42
VSimpleName: params
p57624
tp57625
I6
s(g12822
I42
g12823
Vinsert
p57626
I42
VSimpleName: ReentrantLock
p57627
tp57628
I1
s(g16123
I42
g16124
Vinsert
p57629
I31
VMethodDeclaration
p57630
tp57631
I1
s(g9243
I42
g9244
Vinsert
p57632
I42
VSimpleName: SQLLateralViewTableSource
p57633
tp57634
I2
s(g4409
I42
g4410
Vinsert
p57635
I42
VSimpleName: owner
p57636
tp57637
I1
s(g12055
I42
g12056
Vinsert
p57638
I59
VVariableDeclarationFragment
p57639
tp57640
I1
s(g49754
I42
g49755
Vinsert
p57641
I42
VSimpleName: param0
p57642
tp57643
I1
s(g18841
I42
g18842
Vinsert
p57644
I43
VSimpleType: SQLIfStatement.ElseIf
p57645
tp57646
I2
s(g17106
I42
g17107
Vinsert
p57647
I42
VSimpleName: properties
p57648
tp57649
I1
s(g29079
I42
g29080
Vinsert
p57650
I43
VSimpleType: SQLPropertyExpr
p57651
tp57652
I4
s(g17250
I42
g17251
Vinsert
p57653
I42
VSimpleName: token
p57654
tp57655
I34
s(g14909
I42
g14910
Vinsert
p57656
I42
VSimpleName: setMaxSize
p57657
tp57658
I1
s(g13617
I42
g13618
Vinsert
p57659
I42
VSimpleName: String
p57660
tp57661
I1
s(g15367
I42
g15368
Vinsert
p57662
I25
VIfStatement
p57663
tp57664
I3
s(g1888
I42
g1889
Vinsert
p57665
I21
VExpressionStatement
p57666
tp57667
I1
s(g10687
I42
g10688
Vinsert
p57668
I8
VBlock
p57669
tp57670
I1
s(g22663
I42
g22664
Vinsert
p57671
I42
VSimpleName: getExecuteCount
p57672
tp57673
I1
s(g381
I42
g382
Vinsert
p57674
I8
VBlock
p57675
tp57676
I1
s(g43102
I42
g43103
Vinsert
p57677
I45
VStringLiteral: "exchange_market_info"
p57678
tp57679
I2
s(g10190
I42
g10191
Vinsert
p57680
I42
VSimpleName: statMap
p57681
tp57682
I1
s(g41
I42
g42
Vinsert
p57683
I60
VVariableDeclarationStatement
p57684
tp57685
I3
s(g2253
I42
g2254
Vinsert
p57686
I43
VSimpleType: PrintStream
p57687
tp57688
I1
s(g3202
I42
g3203
Vinsert
p57689
I24
VForStatement
p57690
tp57691
I7
s(g56622
I42
g56623
Vinsert
p57692
I42
VSimpleName: getExpr
p57693
tp57694
I1
s(g7955
I42
g7956
Vinsert
p57695
I42
VSimpleName: Assert
p57696
tp57697
I1
s(g2268
I42
g2269
Vinsert
p57698
I45
VStringLiteral: "show create table "
p57699
tp57700
I1
s(g6622
I42
g6623
Vinsert
p57701
I32
VMethodInvocation
p57702
tp57703
I2
s(g53379
I42
g53380
Vinsert
p57704
I42
VSimpleName: SQLSelectQueryBlock
p57705
tp57706
I3
s(Vinsert
p57707
I42
VSimpleName: token
p57708
Vinsert
p57709
I42
VSimpleName: setLike
p57710
tp57711
I2
s(g27572
I42
g27573
Vinsert
p57712
I45
VStringLiteral: "www.5-nb.com"
p57713
tp57714
I1
s(g15018
I42
g15019
Vinsert
p57715
I21
VExpressionStatement
p57716
tp57717
I2
s(g1973
I42
g1974
Vinsert
p57718
I43
VSimpleType: SQLAlterTableAlterColumn
p57719
tp57720
I2
s(Vinsert
p57721
I42
VSimpleName: name
p57722
Vinsert
p57723
I40
VQualifiedName: Token.EQ
p57724
tp57725
I1
s(g12222
I42
g12223
Vinsert
p57726
I40
VQualifiedName: Token.IN
p57727
tp57728
I1
s(g3179
I42
g3180
Vinsert
p57729
I45
VStringLiteral: "META-INF/druid-filter-wall-permit-function-mysql.txt"
p57730
tp57731
I1
s(g4725
I42
g4726
Vinsert
p57732
I42
VSimpleName: j
p57733
tp57734
I2
s(g22126
I42
g22127
Vinsert
p57735
I42
VSimpleName: holder
p57736
tp57737
I1
s(g987
I42
g988
Vinsert
p57738
I42
VSimpleName: Exception
p57739
tp57740
I1
s(g17379
I42
g17380
Vinsert
p57741
I8
VBlock
p57742
tp57743
I1
s(Vinsert
p57744
I42
VSimpleName: put
p57745
Vinsert
p57746
I45
VStringLiteral: "NotEmptyWaitNanos"
p57747
tp57748
I1
s(g3528
I42
g3529
Vinsert
p57749
I42
VSimpleName: column
p57750
tp57751
I4
s(g708
I42
g709
Vinsert
p57752
I45
VStringLiteral: "select *"
p57753
tp57754
I4
s(g12278
I42
g12279
Vinsert
p57755
I42
VSimpleName: Assert
p57756
tp57757
I2
s(g9949
I42
g9950
Vinsert
p57758
I34
VNumberLiteral: 1
p57759
tp57760
I2
s(Vinsert
p57761
I42
VSimpleName: assertNotNull
p57762
Vinsert
p57763
I42
VSimpleName: rowInserted
p57764
tp57765
I1
s(g8677
I42
g8678
Vinsert
p57766
I39
VPrimitiveType: int
p57767
tp57768
I2
s(Vinsert
p57769
I42
VSimpleName: hasUnorderedLimit
p57770
Vinsert
p57771
I42
VSimpleName: test_true_subquery
p57772
tp57773
I1
s(g20359
I42
g20360
Vinsert
p57774
I42
VSimpleName: values
p57775
tp57776
I1
s(g2479
I42
g2480
Vinsert
p57777
I40
VQualifiedName: lexer.token
p57778
tp57779
I4
s(Vinsert
p57780
I42
VSimpleName: append
p57781
Vinsert
p57782
I42
VSimpleName: dropCount
p57783
tp57784
I3
s(g8588
I42
g8589
Vinsert
p57785
I42
VSimpleName: WallProvider
p57786
tp57787
I71
s(g14990
I42
g14991
Vinsert
p57788
I39
VPrimitiveType: int
p57789
tp57790
I2
s(g30732
I42
g30733
Vinsert
p57791
I42
VSimpleName: StringBuffer
p57792
tp57793
I2
s(g972
I42
g973
Vinsert
p57794
I45
VStringLiteral: "\u005ct\u005c"OBJECT_NAME\u005c", \u005cn"
p57795
tp57796
I1
s(g4098
I42
g4099
Vinsert
p57797
I42
VSimpleName: sql
p57798
tp57799
I34
s(g15345
I42
g15346
Vinsert
p57800
I42
VSimpleName: Throwable
p57801
tp57802
I1
s(g18648
I42
g18649
Vinsert
p57803
I66
VTextElement: This method will switch the logging implementation to Log4J if Log4J is available on the classpath. This is
p57804
tp57805
I1
s(g10626
I42
g10627
Vinsert
p57806
I34
VNumberLiteral: 0
p57807
tp57808
I1
s(g4941
I42
g4942
Vinsert
p57809
I8
VBlock
p57810
tp57811
I1
s(g24755
I42
g24756
Vinsert
p57812
I42
VSimpleName: setStorageClause
p57813
tp57814
I1
s(g6847
I42
g6848
Vinsert
p57815
I70
VEnhancedForStatement
p57816
tp57817
I1
s(g27680
I42
g27681
Vinsert
p57818
I9
VBooleanLiteral: true
p57819
tp57820
I1
s(g6503
I42
g6504
Vinsert
p57821
I42
VSimpleName: stat
p57822
tp57823
I7
s(g14160
I42
g14161
Vinsert
p57824
I43
VSimpleType: SQLException
p57825
tp57826
I1
s(g8277
I42
g8278
Vinsert
p57827
I43
VSimpleType: String
p57828
tp57829
I4
s(g6671
I42
g6672
Vinsert
p57830
I14
VClassInstanceCreation
p57831
tp57832
I2
s(g8914
I42
g8915
Vinsert
p57833
I42
VSimpleName: DruidDataSource
p57834
tp57835
I1
s(g19875
I42
g19876
Vinsert
p57836
I52
VThisExpression
p57837
tp57838
I2
s(g567
I42
g568
Vinsert
p57839
I8
VBlock
p57840
tp57841
I3
s(g27649
I42
g27650
Vinsert
p57842
I45
VStringLiteral: "\u005ctGROUP BY ID\u005cn"
p57843
tp57844
I1
s(g35330
I42
g35331
Vinsert
p57845
I42
VSimpleName: where
p57846
tp57847
I1
s(Vinsert
p57848
I42
VSimpleName: add
p57849
Vinsert
p57850
I42
VSimpleName: sqlList
p57851
tp57852
I3
s(g9722
I42
g9723
Vinsert
p57853
I32
VMethodInvocation
p57854
tp57855
I24
s(g23476
I42
g23477
Vinsert
p57856
I45
VStringLiteral: "FROM clu$\u005cn"
p57857
tp57858
I1
s(g4780
I42
g4781
Vinsert
p57859
I53
VThrowStatement
p57860
tp57861
I1
s(g27954
I42
g27955
Vinsert
p57862
I42
VSimpleName: String
p57863
tp57864
I3
s(g25586
I42
g25587
Vinsert
p57865
I42
VSimpleName: assertEquals
p57866
tp57867
I1
s(g16863
I42
g16864
Vinsert
p57868
I43
VSimpleType: SQLServerWallProvider
p57869
tp57870
I1
s(g13933
I42
g13934
Vinsert
p57871
I32
VMethodInvocation
p57872
tp57873
I1
s(g22913
I42
g22914
Vinsert
p57874
I42
VSimpleName: getLog
p57875
tp57876
I1
s(g19831
I42
g19832
Vinsert
p57877
I74
VParameterizedType: ArrayList<Object>
p57878
tp57879
I1
s(g16525
I42
g16526
Vinsert
p57880
I7
VAssignment: =
p57881
tp57882
I3
s(g15334
I42
g15335
Vinsert
p57883
I42
VSimpleName: SQLUnionQuery
p57884
tp57885
I1
s(g20051
I42
g20052
Vinsert
p57886
I11
VCastExpression
p57887
tp57888
I2
s(g19283
I42
g19284
Vinsert
p57889
I42
VSimpleName: assertNotNull
p57890
tp57891
I1
s(g11270
I42
g11271
Vinsert
p57892
I42
VSimpleName: dao_c3p0
p57893
tp57894
I2
s(g16985
I42
g16986
Vinsert
p57895
I42
VSimpleName: conn
p57896
tp57897
I2
s(g14139
I42
g14140
Vinsert
p57898
I42
VSimpleName: JdbcParameter
p57899
tp57900
I4
s(g39452
I42
g39453
Vinsert
p57901
I43
VSimpleType: OracleOutputVisitor
p57902
tp57903
I5
s(g6582
I42
g6583
Vinsert
p57904
I43
VSimpleType: SQLSelectStatement
p57905
tp57906
I1
s(g17564
I42
g17565
Vinsert
p57907
I18
VContinueStatement
p57908
tp57909
I4
s(g8142
I42
g8143
Vinsert
p57910
I42
VSimpleName: SQLStatement
p57911
tp57912
I7
s(g2263
I42
g2264
Vinsert
p57913
I52
VThisExpression
p57914
tp57915
I1
s(g3931
I42
g3932
Vinsert
p57916
I43
VSimpleType: SQLUtils.FormatOption
p57917
tp57918
I10
s(Vinsert
p57919
I42
VSimpleName: assertTrue
p57920
Vinsert
p57921
I42
VSimpleName: MySqlWallTest10
p57922
tp57923
I1
s(g22449
I42
g22450
Vinsert
p57924
I43
VSimpleType: Exception
p57925
tp57926
I1
s(g1140
I42
g1141
Vinsert
p57927
I42
VSimpleName: conn
p57928
tp57929
I4
s(g622
I42
g623
Vinsert
p57930
I40
VQualifiedName: Isolation.RR
p57931
tp57932
I1
s(g17575
I42
g17576
Vinsert
p57933
I42
VSimpleName: column
p57934
tp57935
I2
s(g51
I42
g52
Vinsert
p57936
I11
VCastExpression
p57937
tp57938
I1
s(g9709
I42
g9710
Vinsert
p57939
I42
VSimpleName: print0
p57940
tp57941
I1
s(g43028
I42
g43029
Vinsert
p57942
I45
VStringLiteral: "jdbc:mock:xxx_B"
p57943
tp57944
I1
s(g4745
I42
g4746
Vinsert
p57945
I42
VSimpleName: DruidPooledPreparedStatement
p57946
tp57947
I2
s(g11124
I42
g11125
Vinsert
p57948
I8
VBlock
p57949
tp57950
I1
s(g8653
I42
g8654
Vinsert
p57951
I42
VSimpleName: Override
p57952
tp57953
I1
s(g15161
I42
g15162
Vinsert
p57954
I40
VQualifiedName: Types.INTEGER
p57955
tp57956
I1
s(g14431
I42
g14432
Vinsert
p57957
I42
VSimpleName: normalize
p57958
tp57959
I2
s(Vinsert
p57960
I42
VSimpleName: println
p57961
Vinsert
p57962
I45
VStringLiteral: "{addContact:[{\u005c"address\u005c":\u005c"=\u005c\u005c\u005c\u005c\u005c\u005c\u005c\u005c\u005c\u005c\u005c'\u005c'\u005c\u005c&quot;);|]*{%0d%0a&lt;%00\u005c"}]}"
p57963
tp57964
I1
s(g28221
I42
g28222
Vinsert
p57965
I60
VVariableDeclarationStatement
p57966
tp57967
I1
s(g1360
I42
g1361
Vinsert
p57968
I27
VInfixExpression: >
p57969
tp57970
I4
s(g14522
I42
g14523
Vinsert
p57971
I45
VStringLiteral: "\u005ct\u005ctSELECT projects_seq.NEXTVAL\u005cn"
p57972
tp57973
I1
s(g14659
I42
g14660
Vinsert
p57974
I34
VNumberLiteral: 0
p57975
tp57976
I10
s(g3679
I42
g3680
Vinsert
p57977
I54
VTryStatement
p57978
tp57979
I1
s(g597
I42
g598
Vinsert
p57980
I83
VModifier: public
p57981
tp57982
I1
s(g1339
I42
g1340
Vinsert
p57983
I42
VSimpleName: target
p57984
tp57985
I3
s(g9446
I42
g9447
Vinsert
p57986
I60
VVariableDeclarationStatement
p57987
tp57988
I2
s(g3312
I42
g3313
Vinsert
p57989
I32
VMethodInvocation
p57990
tp57991
I2
s(g46523
I42
g46524
Vinsert
p57992
I21
VExpressionStatement
p57993
tp57994
I1
s(g14782
I42
g14783
Vinsert
p57995
I45
VStringLiteral: " FROM "
p57996
tp57997
I2
s(g8643
I42
g8644
Vinsert
p57998
I60
VVariableDeclarationStatement
p57999
tp58000
I1
s(g2755
I42
g2756
Vinsert
p58001
I45
VStringLiteral: " if (a=10) then\u005cn"
p58002
tp58003
I1
s(g14426
I42
g14427
Vinsert
p58004
I42
VSimpleName: Exception
p58005
tp58006
I1
s(g3704
I42
g3705
Vinsert
p58007
I42
VSimpleName: SQLBinaryOpExpr
p58008
tp58009
I1
s(g10074
I42
g10075
Vinsert
p58010
I42
VSimpleName: sql
p58011
tp58012
I1
s(g977
I42
g978
Vinsert
p58013
I27
VInfixExpression: ==
p58014
tp58015
I3
s(g12299
I42
g12300
Vinsert
p58016
I42
VSimpleName: parameters
p58017
tp58018
I2
s(g2925
I42
g2926
Vinsert
p58019
I27
VInfixExpression: !=
p58020
tp58021
I2
s(g4694
I42
g4695
Vinsert
p58022
I45
VStringLiteral: "\u005ct\u005ctFREELISTS 1\u005cn"
p58023
tp58024
I7
s(g4248
I42
g4249
Vinsert
p58025
I42
VSimpleName: deleteStatement
p58026
tp58027
I1
s(g16402
I42
g16403
Vinsert
p58028
I52
VThisExpression
p58029
tp58030
I1
s(g1090
I42
g1091
Vinsert
p58031
I43
VSimpleType: SQLDeclareItem
p58032
tp58033
I1
s(g11667
I42
g11668
Vinsert
p58034
I21
VExpressionStatement
p58035
tp58036
I2
s(Vinsert
p58037
I42
VSimpleName: parseStatementList
p58038
Vinsert
p58039
I43
VSimpleType: SQLServerStatementParser
p58040
tp58041
I49
s(g6046
I42
g6047
Vinsert
p58042
I58
VVariableDeclarationExpression
p58043
tp58044
I1
s(g1395
I42
g1396
Vinsert
p58045
I34
VNumberLiteral: 0
p58046
tp58047
I1
s(g2538
I42
g2539
Vinsert
p58048
I42
VSimpleName: FilterChain
p58049
tp58050
I1
s(g5384
I42
g5385
Vinsert
p58051
I39
VPrimitiveType: boolean
p58052
tp58053
I2
s(g8716
I42
g8717
Vinsert
p58054
I42
VSimpleName: put
p58055
tp58056
I1
s(g1339
I42
g1340
Vinsert
p58057
I52
VThisExpression
p58058
tp58059
I25
s(g8687
I42
g8688
Vinsert
p58060
I39
VPrimitiveType: void
p58061
tp58062
I1
s(g3345
I42
g3346
Vinsert
p58063
I52
VThisExpression
p58064
tp58065
I33
s(g3549
I42
g3550
Vinsert
p58066
I42
VSimpleName: PreparedStatementKey
p58067
tp58068
I1
s(g1501
I42
g1502
Vinsert
p58069
I42
VSimpleName: next
p58070
tp58071
I1
s(g8360
I42
g8361
Vinsert
p58072
I59
VVariableDeclarationFragment
p58073
tp58074
I2
s(g7822
I42
g7823
Vinsert
p58075
I42
VSimpleName: exprParser
p58076
tp58077
I4
s(g47044
I42
g47045
Vinsert
p58078
I45
VStringLiteral: "   ) ON COMMIT DELETE ROWS    "
p58079
tp58080
I1
s(g3569
I42
g3570
Vinsert
p58081
I42
VSimpleName: cloneTo
p58082
tp58083
I1
s(g1840
I42
g1841
Vinsert
p58084
I62
VInstanceofExpression
p58085
tp58086
I2
s(g33917
I42
g33918
Vinsert
p58087
I45
VStringLiteral: "SELECT *\u005cn"
p58088
tp58089
I2
s(g14809
I42
g14810
Vinsert
p58090
I42
VSimpleName: isMustParameterized
p58091
tp58092
I1
s(g15255
I42
g15256
Vinsert
p58093
I32
VMethodInvocation
p58094
tp58095
I4
s(g37074
I42
g37075
Vinsert
p58096
I45
VStringLiteral: "\u005c"ESCROW\u005c""
p58097
tp58098
I1
s(g21257
I42
g21258
Vinsert
p58099
I45
VStringLiteral: "         order by DCREATE desc)"
p58100
tp58101
I1
s(g5262
I42
g5263
Vinsert
p58102
I42
VSimpleName: executor
p58103
tp58104
I2
s(g10493
I42
g10494
Vinsert
p58105
I32
VMethodInvocation
p58106
tp58107
I2
s(g12159
I42
g12160
Vinsert
p58108
I42
VSimpleName: SpringStat
p58109
tp58110
I2
s(g31291
I42
g31292
Vinsert
p58111
I42
VSimpleName: x
p58112
tp58113
I1
s(g25594
I42
g25595
Vinsert
p58114
I22
VFieldAccess
p58115
tp58116
I1
s(g7063
I42
g7064
Vinsert
p58117
I21
VExpressionStatement
p58118
tp58119
I1
s(g14348
I42
g14349
Vinsert
p58120
I43
VSimpleType: SQLParserFeature
p58121
tp58122
I1
s(g4098
I42
g4099
Vinsert
p58123
I42
VSimpleName: String
p58124
tp58125
I9
s(g4170
I42
g4171
Vinsert
p58126
I43
VSimpleType: SQLIntegerExpr
p58127
tp58128
I1
s(g4263
I42
g4264
Vinsert
p58129
I42
VSimpleName: Exception
p58130
tp58131
I1
s(g20707
I42
g20708
Vinsert
p58132
I40
VQualifiedName: SQLBinaryOperator.Add
p58133
tp58134
I1
s(g9670
I42
g9671
Vinsert
p58135
I42
VSimpleName: parseStatementList
p58136
tp58137
I88
s(g2672
I42
g2673
Vinsert
p58138
I42
VSimpleName: OracleOutputVisitor
p58139
tp58140
I1
s(g31749
I42
g31750
Vinsert
p58141
I45
VStringLiteral: "orderBy : "
p58142
tp58143
I1
s(g25961
I42
g25962
Vinsert
p58144
I42
VSimpleName: SQLIdentifierExpr
p58145
tp58146
I1
s(g7720
I42
g7721
Vinsert
p58147
I32
VMethodInvocation
p58148
tp58149
I3
s(g30209
I42
g30210
Vinsert
p58150
I43
VSimpleType: OptionParseException
p58151
tp58152
I1
s(g1604
I42
g1605
Vinsert
p58153
I7
VAssignment: =
p58154
tp58155
I1
s(g36337
I42
g36338
Vinsert
p58156
I70
VEnhancedForStatement
p58157
tp58158
I1
s(g11910
I42
g11911
Vinsert
p58159
I42
VSimpleName: x
p58160
tp58161
I2
s(g17467
I42
g17468
Vinsert
p58162
I21
VExpressionStatement
p58163
tp58164
I6
s(g15345
I42
g15346
Vinsert
p58165
I8
VBlock
p58166
tp58167
I2
s(g20035
I42
g20036
Vinsert
p58168
I42
VSimpleName: String
p58169
tp58170
I1
s(g19139
I42
g19140
Vinsert
p58171
I41
VReturnStatement
p58172
tp58173
I1
s(g11231
I42
g11232
Vinsert
p58174
I42
VSimpleName: getOwner
p58175
tp58176
I1
s(g3078
I42
g3079
Vinsert
p58177
I45
VStringLiteral: "druid.testOnBorrow"
p58178
tp58179
I1
s(g1815
I42
g1816
Vinsert
p58180
I43
VSimpleType: OracleRunStatement
p58181
tp58182
I2
s(g3297
I42
g3298
Vinsert
p58183
I21
VExpressionStatement
p58184
tp58185
I11
s(g4630
I42
g4631
Vinsert
p58186
I42
VSimpleName: visitor
p58187
tp58188
I1
s(g12435
I42
g12436
Vinsert
p58189
I27
VInfixExpression: !=
p58190
tp58191
I1
s(g1665
I42
g1666
Vinsert
p58192
I45
VStringLiteral: "\u005ctFROM dual\u005cn"
p58193
tp58194
I2
s(g9838
I42
g9839
Vinsert
p58195
I32
VMethodInvocation
p58196
tp58197
I1
s(g977
I42
g978
Vinsert
p58198
I40
VQualifiedName: aggregateFunctions.length
p58199
tp58200
I2
s(g7537
I42
g7538
Vinsert
p58201
I43
VSimpleType: Reader
p58202
tp58203
I1
s(g1110
I42
g1111
Vinsert
p58204
I45
VStringLiteral: "\u005ctAND c1.contract_header_id = :headerid\u005cn"
p58205
tp58206
I1
s(g18300
I42
g18301
Vinsert
p58207
I40
VQualifiedName: SQLServerColumnDefinition.Identity
p58208
tp58209
I2
s(g76
I42
g77
Vinsert
p58210
I42
VSimpleName: SQLException
p58211
tp58212
I1
s(g7986
I42
g7987
Vinsert
p58213
I60
VVariableDeclarationStatement
p58214
tp58215
I3
s(g2388
I42
g2389
Vinsert
p58216
I43
VSimpleType: SQLLiteralExpr
p58217
tp58218
I2
s(g796
I42
g797
Vinsert
p58219
I42
VSimpleName: SQLException
p58220
tp58221
I2
s(g5854
I42
g5855
Vinsert
p58222
I7
VAssignment: =
p58223
tp58224
I1
s(g6421
I42
g6422
Vinsert
p58225
I40
VQualifiedName: FnvHash.Constants.NEXTVAL
p58226
tp58227
I1
s(g8399
I42
g8400
Vinsert
p58228
I42
VSimpleName: isValidateMySql
p58229
tp58230
I1
s(g8192
I42
g8193
Vinsert
p58231
I42
VSimpleName: SQLDropSequenceStatement
p58232
tp58233
I1
s(g5040
I42
g5041
Vinsert
p58234
I11
VCastExpression
p58235
tp58236
I1
s(Vinsert
p58237
I42
VSimpleName: equals
p58238
Vinsert
p58239
I40
VQualifiedName: com.alibaba.druid.sql.dialect.db2.parser.DB2StatementParser
p58240
tp58241
I1
s(g46741
I42
g46742
Vinsert
p58242
I42
VSimpleName: OracleExprParser
p58243
tp58244
I38
s(g52535
I42
g52536
Vinsert
p58245
I42
VSimpleName: prepareStatement
p58246
tp58247
I2
s(g11654
I42
g11655
Vinsert
p58248
I42
VSimpleName: name_lcase
p58249
tp58250
I1
s(g8233
I42
g8234
Vinsert
p58251
I52
VThisExpression
p58252
tp58253
I1
s(g11624
I42
g11625
Vinsert
p58254
I42
VSimpleName: SQLParameter
p58255
tp58256
I1
s(g11105
I42
g11106
Vinsert
p58257
I42
VSimpleName: test_odps
p58258
tp58259
I1
s(g1536
I42
g1537
Vinsert
p58260
I42
VSimpleName: Constructor
p58261
tp58262
I1
s(g55376
I42
g55377
Vinsert
p58263
I42
VSimpleName: setOrderBy
p58264
tp58265
I3
s(g24102
I42
g24103
Vinsert
p58266
I27
VInfixExpression: ==
p58267
tp58268
I1
s(g469
I42
g470
Vinsert
p58269
I27
VInfixExpression: &&
p58270
tp58271
I5
s(g3569
I42
g3570
Vinsert
p58272
I42
VSimpleName: OracleAnalytic
p58273
tp58274
I1
s(g3793
I42
g3794
Vinsert
p58275
I42
VSimpleName: DruidDataSource
p58276
tp58277
I2
s(g4263
I42
g4264
Vinsert
p58278
I54
VTryStatement
p58279
tp58280
I1
s(g10682
I42
g10683
Vinsert
p58281
I42
VSimpleName: stmt
p58282
tp58283
I1
s(g45377
I42
g45378
Vinsert
p58284
I83
VModifier: public
p58285
tp58286
I2
s(g4409
I42
g4410
Vinsert
p58287
I13
VCharacterLiteral: '@'
p58288
tp58289
I1
s(g6847
I42
g6848
Vinsert
p58290
I42
VSimpleName: List
p58291
tp58292
I1
s(g8449
I42
g8450
Vinsert
p58293
I32
VMethodInvocation
p58294
tp58295
I1
s(g10829
I42
g10830
Vinsert
p58296
I60
VVariableDeclarationStatement
p58297
tp58298
I1
s(g21499
I42
g21500
Vinsert
p58299
I42
VSimpleName: Is
p58300
tp58301
I1
s(g12480
I42
g12481
Vinsert
p58302
I36
VParenthesizedExpression
p58303
tp58304
I1
s(g9195
I42
g9196
Vinsert
p58305
I42
VSimpleName: parser
p58306
tp58307
I12
s(g8282
I42
g8283
Vinsert
p58308
I40
VQualifiedName: SQLBinaryOperator.Equality
p58309
tp58310
I1
s(g30065
I42
g30066
Vinsert
p58311
I42
VSimpleName: query
p58312
tp58313
I1
s(g26998
I42
g26999
Vinsert
p58314
I83
VModifier: static
p58315
tp58316
I2
s(g8142
I42
g8143
Vinsert
p58317
I21
VExpressionStatement
p58318
tp58319
I249
s(g35972
I42
g35973
Vinsert
p58320
I42
VSimpleName: getProperty
p58321
tp58322
I4
s(g41161
I42
g41162
Vinsert
p58323
I59
VVariableDeclarationFragment
p58324
tp58325
I3
s(g4263
I42
g4264
Vinsert
p58326
I42
VSimpleName: RuntimeException
p58327
tp58328
I1
s(g20914
I42
g20915
Vinsert
p58329
I42
VSimpleName: get
p58330
tp58331
I1
s(g30060
I42
g30061
Vinsert
p58332
I42
VSimpleName: size
p58333
tp58334
I2
s(g7399
I42
g7400
Vinsert
p58335
I27
VInfixExpression: <
p58336
tp58337
I1
s(g50511
I42
g50512
Vinsert
p58338
I42
VSimpleName: WallUtils
p58339
tp58340
I2
s(g15828
I42
g15829
Vinsert
p58341
I42
VSimpleName: isPrettyFormat
p58342
tp58343
I1
s(g9608
I42
g9609
Vinsert
p58344
I42
VSimpleName: publicKeyBytes
p58345
tp58346
I1
s(g10604
I42
g10605
Vinsert
p58347
I60
VVariableDeclarationStatement
p58348
tp58349
I5
s(g15456
I42
g15457
Vinsert
p58350
I31
VMethodDeclaration
p58351
tp58352
I2
s(g20411
I42
g20412
Vinsert
p58353
I42
VSimpleName: OracleIsSetExpr
p58354
tp58355
I2
s(g6771
I42
g6772
Vinsert
p58356
I42
VSimpleName: x
p58357
tp58358
I2
s(g53573
I42
g53574
Vinsert
p58359
I45
VStringLiteral: "\u005cn\u005ctCONSTRAINT PK_customfieldoption PRIMARY KEY (ID)"
p58360
tp58361
I1
s(g161
I42
g162
Vinsert
p58362
I42
VSimpleName: SQLDropProcedureStatement
p58363
tp58364
I1
s(g10797
I42
g10798
Vinsert
p58365
I40
VQualifiedName: ConditionType.SQLSTATE
p58366
tp58367
I1
s(g11659
I42
g11660
Vinsert
p58368
I45
VStringLiteral: "t9"
p58369
tp58370
I1
s(g256
I42
g257
Vinsert
p58371
I8
VBlock
p58372
tp58373
I1
s(g1903
I42
g1904
Vinsert
p58374
I42
VSimpleName: OracleBlockStatement
p58375
tp58376
I1
s(g5633
I42
g5634
Vinsert
p58377
I42
VSimpleName: LOG
p58378
tp58379
I14
s(g35034
I42
g35035
Vinsert
p58380
I25
VIfStatement
p58381
tp58382
I1
s(g1958
I42
g1959
Vinsert
p58383
I45
VStringLiteral: "\u005ct\u005ct\u005ctFLASH_CACHE DEFAULT\u005cn"
p58384
tp58385
I3
s(g30418
I42
g30419
Vinsert
p58386
I42
VSimpleName: Override
p58387
tp58388
I1
s(g25721
I42
g25722
Vinsert
p58389
I21
VExpressionStatement
p58390
tp58391
I4
s(g14397
I42
g14398
Vinsert
p58392
I45
VStringLiteral: "\u005ct\u005ctINITIAL 1048576\u005cn"
p58393
tp58394
I2
s(g2775
I42
g2776
Vinsert
p58395
I14
VClassInstanceCreation
p58396
tp58397
I2
s(g22986
I42
g22987
Vinsert
p58398
I42
VSimpleName: String
p58399
tp58400
I2
s(g361
I42
g362
Vinsert
p58401
I45
VStringLiteral: " `sess_id` varchar(128) NOT NULL,"
p58402
tp58403
I1
s(g6689
I42
g6690
Vinsert
p58404
I42
VSimpleName: properties
p58405
tp58406
I2
s(g11691
I42
g11692
Vinsert
p58407
I60
VVariableDeclarationStatement
p58408
tp58409
I14
s(g26160
I42
g26161
Vinsert
p58410
I42
VSimpleName: IllegalSQLObjectViolation
p58411
tp58412
I1
s(g22636
I42
g22637
Vinsert
p58413
I40
VQualifiedName: JdbcConstants.SQL_SERVER
p58414
tp58415
I2
s(g9137
I42
g9138
Vinsert
p58416
I42
VSimpleName: SQLSelectStatement
p58417
tp58418
I1
s(g25868
I42
g25869
Vinsert
p58419
I45
VStringLiteral: "\u005ctGROUP BY order_id\u005cn"
p58420
tp58421
I1
s(g29522
I42
g29523
Vinsert
p58422
I42
VSimpleName: ident
p58423
tp58424
I2
s(g6084
I42
g6085
Vinsert
p58425
I70
VEnhancedForStatement
p58426
tp58427
I2
s(g4060
I42
g4061
Vinsert
p58428
I13
VCharacterLiteral: '^'
p58429
tp58430
I1
s(g8752
I42
g8753
Vinsert
p58431
I42
VSimpleName: iterator
p58432
tp58433
I1
s(Vinsert
p58434
I42
VSimpleName: output
p58435
Vinsert
p58436
I42
VSimpleName: query
p58437
tp58438
I2
s(g336
I42
g337
Vinsert
p58439
I32
VMethodInvocation
p58440
tp58441
I21
s(g22636
I42
g22637
Vinsert
p58442
I42
VSimpleName: parseStatements
p58443
tp58444
I2
s(g8687
I42
g8688
Vinsert
p58445
I42
VSimpleName: dao
p58446
tp58447
I2
s(g2558
I42
g2559
Vinsert
p58448
I27
VInfixExpression: ==
p58449
tp58450
I1
s(g33452
I42
g33453
Vinsert
p58451
I42
VSimpleName: WallVisitorUtils
p58452
tp58453
I2
s(g12209
I42
g12210
Vinsert
p58454
I42
VSimpleName: Set
p58455
tp58456
I1
s(g241
I42
g242
Vinsert
p58457
I41
VReturnStatement
p58458
tp58459
I4
s(g5500
I42
g5501
Vinsert
p58460
I42
VSimpleName: SQLObject
p58461
tp58462
I2
s(g44918
I42
g44919
Vinsert
p58463
I45
VStringLiteral: "CREATE TABLE test (\u005cn"
p58464
tp58465
I1
s(g15412
I42
g15413
Vinsert
p58466
I45
VStringLiteral: "MIN_ROWS"
p58467
tp58468
I1
s(g977
I42
g978
Vinsert
p58469
I25
VIfStatement
p58470
tp58471
I3
s(g55102
I42
g55103
Vinsert
p58472
I34
VNumberLiteral: 5
p58473
tp58474
I1
s(g24043
I42
g24044
Vinsert
p58475
I27
VInfixExpression: *
p58476
tp58477
I3
s(g10412
I42
g10413
Vinsert
p58478
I21
VExpressionStatement
p58479
tp58480
I1
s(g17074
I42
g17075
Vinsert
p58481
I45
VStringLiteral: ") ENGINE = InnoDB AUTO_INCREMENT = 1769503 CHARSET = utf8mb4 COMMENT '10000000'"
p58482
tp58483
I1
s(g23657
I42
g23658
Vinsert
p58484
I45
VStringLiteral: "fields : "
p58485
tp58486
I1
s(g35545
I42
g35546
Vinsert
p58487
I42
VSimpleName: logType
p58488
tp58489
I2
s(g7991
I42
g7992
Vinsert
p58490
I42
VSimpleName: setUp
p58491
tp58492
I1
s(g957
I42
g958
Vinsert
p58493
I45
VStringLiteral: " SET DEFAULT "
p58494
tp58495
I1
s(g41927
I42
g41928
Vinsert
p58496
I25
VIfStatement
p58497
tp58498
I1
s(g7527
I42
g7528
Vinsert
p58499
I42
VSimpleName: notZeroLen
p58500
tp58501
I1
s(g10095
I42
g10096
Vinsert
p58502
I45
VStringLiteral: "blackListHitCount"
p58503
tp58504
I1
s(g1800
I42
g1801
Vinsert
p58505
I32
VMethodInvocation
p58506
tp58507
I4
s(g1481
I42
g1482
Vinsert
p58508
I43
VSimpleType: SQLException
p58509
tp58510
I1
s(g21778
I42
g21779
Vinsert
p58511
I44
VSingleVariableDeclaration
p58512
tp58513
I1
s(g9519
I42
g9520
Vinsert
p58514
I83
VModifier: public
p58515
tp58516
I1
s(Vinsert
p58517
I42
VSimpleName: endVisit
p58518
Vinsert
p58519
I42
VSimpleName: setClause
p58520
tp58521
I1
s(g17670
I42
g17671
Vinsert
p58522
I42
VSimpleName: i
p58523
tp58524
I3
s(g10655
I42
g10656
Vinsert
p58525
I42
VSimpleName: init
p58526
tp58527
I1
s(g25381
I42
g25382
Vinsert
p58528
I14
VClassInstanceCreation
p58529
tp58530
I1
s(g4344
I42
g4345
Vinsert
p58531
I45
VStringLiteral: "FIRST"
p58532
tp58533
I1
s(g14972
I42
g14973
Vinsert
p58534
I38
VPrefixExpression: -
p58535
tp58536
I1
s(g181
I42
g182
Vinsert
p58537
I42
VSimpleName: getStatement
p58538
tp58539
I1
s(g2634
I42
g2635
Vinsert
p58540
I33
VNullLiteral
p58541
tp58542
I3
s(g6
I42
g7
Vinsert
p58543
I37
VPostfixExpression: ++
p58544
tp58545
I1
s(g4755
I42
g4756
Vinsert
p58546
I21
VExpressionStatement
p58547
tp58548
I1
s(g4424
I42
g4425
Vinsert
p58549
I8
VBlock
p58550
tp58551
I2
s(g7927
I42
g7928
Vinsert
p58552
I22
VFieldAccess
p58553
tp58554
I4
s(g25675
I42
g25676
Vinsert
p58555
I25
VIfStatement
p58556
tp58557
I1
s(g6134
I42
g6135
Vinsert
p58558
I60
VVariableDeclarationStatement
p58559
tp58560
I2
s(g36213
I42
g36214
Vinsert
p58561
I45
VStringLiteral: "spring.datasource.druid.one"
p58562
tp58563
I1
s(g24641
I42
g24642
Vinsert
p58564
I42
VSimpleName: print
p58565
tp58566
I1
s(g1923
I42
g1924
Vinsert
p58567
I42
VSimpleName: target
p58568
tp58569
I1
s(g51669
I42
g51670
Vinsert
p58570
I43
VSimpleType: SQLInListExpr
p58571
tp58572
I1
s(g54415
I42
g54416
Vinsert
p58573
I42
VSimpleName: i
p58574
tp58575
I27
s(Vinsert
p58576
I42
VSimpleName: endVisit
p58577
Vinsert
p58578
I42
VSimpleName: over
p58579
tp58580
I1
s(g14809
I42
g14810
Vinsert
p58581
I25
VIfStatement
p58582
tp58583
I1
s(g12270
I42
g12271
Vinsert
p58584
I45
VStringLiteral: "\u005cnPARTITION BY RANGE (id)"
p58585
tp58586
I1
s(g4661
I42
g4662
Vinsert
p58587
I42
VSimpleName: MySqlUtils_1_builtin_dataTypes
p58588
tp58589
I1
s(g19691
I42
g19692
Vinsert
p58590
I40
VQualifiedName: Token.USE
p58591
tp58592
I1
s(g7310
I42
g7311
Vinsert
p58593
I26
VImportDeclaration
p58594
tp58595
I3
s(g26393
I42
g26394
Vinsert
p58596
I27
VInfixExpression: -
p58597
tp58598
I8
s(g56
I42
g57
Vinsert
p58599
I42
VSimpleName: lexer
p58600
tp58601
I1
s(g35248
I42
g35249
Vinsert
p58602
I42
VSimpleName: x
p58603
tp58604
I1
s(g42013
I42
g42014
Vinsert
p58605
I59
VVariableDeclarationFragment
p58606
tp58607
I1
s(g9041
I42
g9042
Vinsert
p58608
I42
VSimpleName: SQLAlterTableSetComment
p58609
tp58610
I1
s(g7522
I42
g7523
Vinsert
p58611
I9
VBooleanLiteral: false
p58612
tp58613
I2
s(g26244
I42
g26245
Vinsert
p58614
I42
VSimpleName: assertEquals
p58615
tp58616
I1
s(g2875
I42
g2876
Vinsert
p58617
I42
VSimpleName: ProxoolDataSource
p58618
tp58619
I4
s(g3770
I42
g3771
Vinsert
p58620
I11
VCastExpression
p58621
tp58622
I2
s(g6465
I42
g6466
Vinsert
p58623
I42
VSimpleName: partition
p58624
tp58625
I2
s(g25306
I42
g25307
Vinsert
p58626
I42
VSimpleName: statementStat
p58627
tp58628
I1
s(g8564
I42
g8565
Vinsert
p58629
I32
VMethodInvocation
p58630
tp58631
I12
s(g5211
I42
g5212
Vinsert
p58632
I45
VStringLiteral: "\u005cn\u005ctid int PRIMARY KEY, "
p58633
tp58634
I1
s(g43745
I42
g43746
Vinsert
p58635
I43
VSimpleType: MySqlUpdateStatement
p58636
tp58637
I2
s(g1002
I42
g1003
Vinsert
p58638
I42
VSimpleName: WallSqlFunctionStat
p58639
tp58640
I1
s(g2084
I42
g2085
Vinsert
p58641
I5
VArrayType: Object[]
p58642
tp58643
I1
s(g2115
I42
g2116
Vinsert
p58644
I59
VVariableDeclarationFragment
p58645
tp58646
I4
s(g8311
I42
g8312
Vinsert
p58647
I60
VVariableDeclarationStatement
p58648
tp58649
I1
s(g6103
I42
g6104
Vinsert
p58650
I42
VSimpleName: WallProvider
p58651
tp58652
I1
s(g17450
I42
g17451
Vinsert
p58653
I41
VReturnStatement
p58654
tp58655
I1
s(g10116
I42
g10117
Vinsert
p58656
I60
VVariableDeclarationStatement
p58657
tp58658
I1
s(g14754
I42
g14755
Vinsert
p58659
I21
VExpressionStatement
p58660
tp58661
I2
s(g7970
I42
g7971
Vinsert
p58662
I42
VSimpleName: config
p58663
tp58664
I1
s(g2702
I42
g2703
Vinsert
p58665
I32
VMethodInvocation
p58666
tp58667
I3
s(g7184
I42
g7185
Vinsert
p58668
I42
VSimpleName: WallConfig
p58669
tp58670
I7
s(g4399
I42
g4400
Vinsert
p58671
I8
VBlock
p58672
tp58673
I1
s(g5343
I42
g5344
Vinsert
p58674
I42
VSimpleName: enum1
p58675
tp58676
I1
s(g7927
I42
g7928
Vinsert
p58677
I42
VSimpleName: lexer
p58678
tp58679
I4
s(g12278
I42
g12279
Vinsert
p58680
I21
VExpressionStatement
p58681
tp58682
I2
s(g4381
I42
g4382
Vinsert
p58683
I37
VPostfixExpression: ++
p58684
tp58685
I1
s(g32628
I42
g32629
Vinsert
p58686
I42
VSimpleName: NullsFirst
p58687
tp58688
I2
s(g8306
I42
g8307
Vinsert
p58689
I43
VSimpleType: NoLoggingImpl
p58690
tp58691
I5
s(g16005
I42
g16006
Vinsert
p58692
I83
VModifier: public
p58693
tp58694
I1
s(g6495
I42
g6496
Vinsert
p58695
I53
VThrowStatement
p58696
tp58697
I1
s(g27239
I42
g27240
Vinsert
p58698
I42
VSimpleName: Assert
p58699
tp58700
I1
s(g11072
I42
g11073
Vinsert
p58701
I39
VPrimitiveType: int
p58702
tp58703
I1
s(g15359
I42
g15360
Vinsert
p58704
I32
VMethodInvocation
p58705
tp58706
I3
s(g41850
I42
g41851
Vinsert
p58707
I42
VSimpleName: String
p58708
tp58709
I1
s(Vinsert
p58710
I42
VSimpleName: assertEquals
p58711
Vinsert
p58712
I45
VStringLiteral: "\u005cn\u005ctREORGANIZE p0 INTO (PARTITION s0 VALUES LESS THAN (1960), PARTITION s1 VALUES LESS THAN (1970))"
p58713
tp58714
I1
s(g41745
I42
g41746
Vinsert
p58715
I42
VSimpleName: test_0
p58716
tp58717
I1
s(g25735
I42
g25736
Vinsert
p58718
I43
VSimpleType: MySqlShowCreateTableStatement
p58719
tp58720
I2
s(g12235
I42
g12236
Vinsert
p58721
I43
VSimpleType: IOException
p58722
tp58723
I1
s(g7131
I42
g7132
Vinsert
p58724
I42
VSimpleName: FnvHash
p58725
tp58726
I2
s(g1878
I42
g1879
Vinsert
p58727
I42
VSimpleName: SQLExpr
p58728
tp58729
I3
s(g33239
I42
g33240
Vinsert
p58730
I42
VSimpleName: query
p58731
tp58732
I1
s(g10571
I42
g10572
Vinsert
p58733
I42
VSimpleName: subString
p58734
tp58735
I1
s(g1584
I42
g1585
Vinsert
p58736
I59
VVariableDeclarationFragment
p58737
tp58738
I1
s(g27586
I42
g27587
Vinsert
p58739
I43
VSimpleType: ParserException
p58740
tp58741
I1
s(g25196
I42
g25197
Vinsert
p58742
I57
VTypeLiteral
p58743
tp58744
I1
s(g6244
I42
g6245
Vinsert
p58745
I41
VReturnStatement
p58746
tp58747
I9
s(g34510
I42
g34511
Vinsert
p58748
I42
VSimpleName: comment
p58749
tp58750
I1
s(g6577
I42
g6578
Vinsert
p58751
I45
VStringLiteral: "\u005ctAND ta -> 'taAge' ?| '{  \u005cn"
p58752
tp58753
I2
s(g13685
I42
g13686
Vinsert
p58754
I42
VSimpleName: length
p58755
tp58756
I1
s(g15314
I42
g15315
Vinsert
p58757
I42
VSimpleName: JdbcUtils
p58758
tp58759
I1
s(g35223
I42
g35224
Vinsert
p58760
I45
VStringLiteral: "SELECT 1"
p58761
tp58762
I1
s(g30808
I42
g30809
Vinsert
p58763
I43
VSimpleType: MySqlShowMasterLogsStatement
p58764
tp58765
I1
s(g8208
I42
g8209
Vinsert
p58766
I40
VQualifiedName: System.out
p58767
tp58768
I8
s(g2228
I42
g2229
Vinsert
p58769
I21
VExpressionStatement
p58770
tp58771
I1
s(g51
I42
g52
Vinsert
p58772
I42
VSimpleName: getClass
p58773
tp58774
I1
s(g18512
I42
g18513
Vinsert
p58775
I11
VCastExpression
p58776
tp58777
I4
s(g8564
I42
g8565
Vinsert
p58778
I42
VSimpleName: table
p58779
tp58780
I4
s(g9683
I42
g9684
Vinsert
p58781
I59
VVariableDeclarationFragment
p58782
tp58783
I4
s(Vinsert
p58784
I42
VSimpleName: clone
p58785
Vinsert
p58786
I42
VSimpleName: setOffset
p58787
tp58788
I1
s(g24247
I42
g24248
Vinsert
p58789
I42
VSimpleName: entity
p58790
tp58791
I2
s(g24686
I42
g24687
Vinsert
p58792
I42
VSimpleName: MutablePropertyValues
p58793
tp58794
I1
s(g3144
I42
g3145
Vinsert
p58795
I42
VSimpleName: print
p58796
tp58797
I4
s(g512
I42
g513
Vinsert
p58798
I42
VSimpleName: put
p58799
tp58800
I2
s(g13886
I42
g13887
Vinsert
p58801
I60
VVariableDeclarationStatement
p58802
tp58803
I4
s(Vinsert
p58804
I42
VSimpleName: getConnection
p58805
Vinsert
p58806
I42
VSimpleName: ConnectionsPanel
p58807
tp58808
I2
s(g11015
I42
g11016
Vinsert
p58809
I60
VVariableDeclarationStatement
p58810
tp58811
I2
s(Vinsert
p58812
I42
VSimpleName: setParent
p58813
Vinsert
p58814
I42
VSimpleName: when
p58815
tp58816
I3
s(g13659
I42
g13660
Vinsert
p58817
I32
VMethodInvocation
p58818
tp58819
I9
s(g5113
I42
g5114
Vinsert
p58820
I40
VQualifiedName: AsOfFlashbackQueryClause.Type.SCN
p58821
tp58822
I1
s(g3053
I42
g3054
Vinsert
p58823
I40
VQualifiedName: Token.ALL
p58824
tp58825
I1
s(g17777
I42
g17778
Vinsert
p58826
I43
VSimpleType: SQLAlterTableConvertCharSet
p58827
tp58828
I1
s(g10692
I42
g10693
Vinsert
p58829
I59
VVariableDeclarationFragment
p58830
tp58831
I5
s(g37888
I42
g37889
Vinsert
p58832
I42
VSimpleName: x
p58833
tp58834
I2
s(g54477
I42
g54478
Vinsert
p58835
I42
VSimpleName: expr
p58836
tp58837
I2
s(g35307
I42
g35308
Vinsert
p58838
I42
VSimpleName: lexer
p58839
tp58840
I1
s(g55094
I42
g55095
Vinsert
p58841
I83
VModifier: public
p58842
tp58843
I1
s(g41745
I42
g41746
Vinsert
p58844
I59
VVariableDeclarationFragment
p58845
tp58846
I1
s(g3159
I42
g3160
Vinsert
p58847
I42
VSimpleName: ResultSetProxy
p58848
tp58849
I1
s(g6308
I42
g6309
Vinsert
p58850
I42
VSimpleName: SQLDetailDialog
p58851
tp58852
I1
s(g19749
I42
g19750
Vinsert
p58853
I42
VSimpleName: PSQLException
p58854
tp58855
I2
s(g26818
I42
g26819
Vinsert
p58856
I42
VSimpleName: String
p58857
tp58858
I3
s(g587
I42
g588
Vinsert
p58859
I45
VStringLiteral: "select 2,null,'4225',null,'beijing','','1','','1223@123.com','beijing','booking','test',null "
p58860
tp58861
I1
s(g8643
I42
g8644
Vinsert
p58862
I32
VMethodInvocation
p58863
tp58864
I2
s(g18749
I42
g18750
Vinsert
p58865
I42
VSimpleName: SQLAlterTableDropConstraint
p58866
tp58867
I6
s(g28190
I42
g28191
Vinsert
p58868
I9
VBooleanLiteral: false
p58869
tp58870
I1
s(g3654
I42
g3655
Vinsert
p58871
I43
VSimpleType: OracleCreateTableStatement.OIDIndex
p58872
tp58873
I1
s(g36951
I42
g36952
Vinsert
p58874
I34
VNumberLiteral: 2
p58875
tp58876
I3
s(g4735
I42
g4736
Vinsert
p58877
I45
VStringLiteral: "\u005cnSELECT *"
p58878
tp58879
I1
s(g7797
I42
g7798
Vinsert
p58880
I43
VSimpleType: NotificationTraceEventListener
p58881
tp58882
I1
s(g1100
I42
g1101
Vinsert
p58883
I43
VSimpleType: DecryptException
p58884
tp58885
I1
s(g3472
I42
g3473
Vinsert
p58886
I42
VSimpleName: partition
p58887
tp58888
I1
s(g16831
I42
g16832
Vinsert
p58889
I42
VSimpleName: stmt
p58890
tp58891
I1
s(g37169
I42
g37170
Vinsert
p58892
I25
VIfStatement
p58893
tp58894
I3
s(g2662
I42
g2663
Vinsert
p58895
I42
VSimpleName: accept
p58896
tp58897
I1
s(g2104
I42
g2105
Vinsert
p58898
I43
VSimpleType: SQLExpr
p58899
tp58900
I1
s(g2388
I42
g2389
Vinsert
p58901
I42
VSimpleName: SQLLiteralExpr
p58902
tp58903
I2
s(g5097
I42
g5098
Vinsert
p58904
I42
VSimpleName: maxWait
p58905
tp58906
I1
s(g5787
I42
g5788
Vinsert
p58907
I42
VSimpleName: dataSource
p58908
tp58909
I2
s(g7840
I42
g7841
Vinsert
p58910
I33
VNullLiteral
p58911
tp58912
I1
s(g10808
I42
g10809
Vinsert
p58913
I34
VNumberLiteral: 2
p58914
tp58915
I1
s(g27142
I42
g27143
Vinsert
p58916
I45
VStringLiteral: "organization "
p58917
tp58918
I1
s(Vinsert
p58919
I42
VSimpleName: close
p58920
Vinsert
p58921
I45
VStringLiteral: "jdbc:mock:xxx"
p58922
tp58923
I2
s(g4404
I42
g4405
Vinsert
p58924
I59
VVariableDeclarationFragment
p58925
tp58926
I1
s(g542
I42
g543
Vinsert
p58927
I45
VStringLiteral: "\u005ct)\u005cn"
p58928
tp58929
I1
s(g16123
I42
g16124
Vinsert
p58930
I42
VSimpleName: HttpServletRequest
p58931
tp58932
I1
s(g14295
I42
g14296
Vinsert
p58933
I42
VSimpleName: accept
p58934
tp58935
I1
s(g43334
I42
g43335
Vinsert
p58936
I45
VStringLiteral: "DISABLE"
p58937
tp58938
I1
s(g20801
I42
g20802
Vinsert
p58939
I42
VSimpleName: info
p58940
tp58941
I1
s(g4391
I42
g4392
Vinsert
p58942
I8
VBlock
p58943
tp58944
I1
s(g10919
I42
g10920
Vinsert
p58945
I60
VVariableDeclarationStatement
p58946
tp58947
I1
s(g26581
I42
g26582
Vinsert
p58948
I42
VSimpleName: x
p58949
tp58950
I4
s(g41578
I42
g41579
Vinsert
p58951
I42
VSimpleName: getConnectCount
p58952
tp58953
I1
s(g57201
I42
g57202
Vinsert
p58954
I42
VSimpleName: IDENTIFIER
p58955
tp58956
I1
s(g587
I42
g588
Vinsert
p58957
I45
VStringLiteral: "    select EMAIL"
p58958
tp58959
I1
s(g4040
I42
g4041
Vinsert
p58960
I32
VMethodInvocation
p58961
tp58962
I1
s(g7855
I42
g7856
Vinsert
p58963
I42
VSimpleName: joinType
p58964
tp58965
I4
s(g9446
I42
g9447
Vinsert
p58966
I7
VAssignment: =
p58967
tp58968
I1
s(g25152
I42
g25153
Vinsert
p58969
I42
VSimpleName: Override
p58970
tp58971
I1
s(g19678
I42
g19679
Vinsert
p58972
I21
VExpressionStatement
p58973
tp58974
I1
s(g1471
I42
g1472
Vinsert
p58975
I83
VModifier: public
p58976
tp58977
I7
s(g1420
I42
g1421
Vinsert
p58978
I42
VSimpleName: SQLSelectQueryBlock
p58979
tp58980
I1
s(g5176
I42
g5177
Vinsert
p58981
I60
VVariableDeclarationStatement
p58982
tp58983
I2
s(Vinsert
p58984
I42
VSimpleName: assertNotNull
p58985
Vinsert
p58986
I42
VSimpleName: getBigDecimal
p58987
tp58988
I2
s(g19391
I42
g19392
Vinsert
p58989
I42
VSimpleName: SyntaxErrorViolation
p58990
tp58991
I3
s(g41896
I42
g41897
Vinsert
p58992
I42
VSimpleName: StringBuilder
p58993
tp58994
I34
s(g6212
I42
g6213
Vinsert
p58995
I42
VSimpleName: getActive
p58996
tp58997
I2
s(g28278
I42
g28279
Vinsert
p58998
I7
VAssignment: =
p58999
tp59000
I3
s(g13493
I42
g13494
Vinsert
p59001
I42
VSimpleName: visit
p59002
tp59003
I3
s(g20359
I42
g20360
Vinsert
p59004
I42
VSimpleName: item
p59005
tp59006
I1
s(g8734
I42
g8735
Vinsert
p59007
I40
VQualifiedName: Token.EXISTS
p59008
tp59009
I1
s(g6750
I42
g6751
Vinsert
p59010
I27
VInfixExpression: <
p59011
tp59012
I1
s(g19018
I42
g19019
Vinsert
p59013
I43
VSimpleType: SQLObject
p59014
tp59015
I2
s(Vinsert
p59016
I42
VSimpleName: getProperty
p59017
Vinsert
p59018
I44
VSingleVariableDeclaration
p59019
tp59020
I1
s(Vinsert
p59021
I42
VSimpleName: setParent
p59022
Vinsert
p59023
I42
VSimpleName: addPartition
p59024
tp59025
I12
s(g15204
I42
g15205
Vinsert
p59026
I42
VSimpleName: endVisit
p59027
tp59028
I2
s(g13938
I42
g13939
Vinsert
p59029
I60
VVariableDeclarationStatement
p59030
tp59031
I3
s(g6157
I42
g6158
Vinsert
p59032
I7
VAssignment: =
p59033
tp59034
I4
s(g1544
I42
g1545
Vinsert
p59035
I45
VStringLiteral: "\u005ctKEY VARCHAR(20),\u005cn"
p59036
tp59037
I1
s(g4684
I42
g4685
Vinsert
p59038
I8
VBlock
p59039
tp59040
I1
s(g11785
I42
g11786
Vinsert
p59041
I45
VStringLiteral: "/"
p59042
tp59043
I1
s(g27102
I42
g27103
Vinsert
p59044
I43
VSimpleType: Statement
p59045
tp59046
I2
s(g10262
I42
g10263
Vinsert
p59047
I42
VSimpleName: nextToken
p59048
tp59049
I1
s(g9158
I42
g9159
Vinsert
p59050
I43
VSimpleType: ReturnRowsClause
p59051
tp59052
I1
s(g6612
I42
g6613
Vinsert
p59053
I59
VVariableDeclarationFragment
p59054
tp59055
I1
s(g6328
I42
g6329
Vinsert
p59056
I53
VThrowStatement
p59057
tp59058
I1
s(g43952
I42
g43953
Vinsert
p59059
I45
VStringLiteral: "/*!cobar: select,4,ireport.dm_mdm_mem_prod_noeff_sdt0.admin_member_seq=45654723*/ select * from t"
p59060
tp59061
I1
s(g1780
I42
g1781
Vinsert
p59062
I70
VEnhancedForStatement
p59063
tp59064
I4
s(g23263
I42
g23264
Vinsert
p59065
I42
VSimpleName: DruidLobCreator
p59066
tp59067
I2
s(g16980
I42
g16981
Vinsert
p59068
I42
VSimpleName: AtomicLong
p59069
tp59070
I3
s(g11816
I42
g11817
Vinsert
p59071
I42
VSimpleName: Assert
p59072
tp59073
I10
s(g2604
I42
g2605
Vinsert
p59074
I42
VSimpleName: sql
p59075
tp59076
I1
s(g1329
I42
g1330
Vinsert
p59077
I42
VSimpleName: String
p59078
tp59079
I1
s(g6450
I42
g6451
Vinsert
p59080
I42
VSimpleName: Bytes
p59081
tp59082
I2
s(g22812
I42
g22813
Vinsert
p59083
I52
VThisExpression
p59084
tp59085
I9
s(g19179
I42
g19180
Vinsert
p59086
I44
VSingleVariableDeclaration
p59087
tp59088
I2
s(g4898
I42
g4899
Vinsert
p59089
I32
VMethodInvocation
p59090
tp59091
I3
s(g2760
I42
g2761
Vinsert
p59092
I44
VSingleVariableDeclaration
p59093
tp59094
I1
s(g7293
I42
g7294
Vinsert
p59095
I42
VSimpleName: assertNotNull
p59096
tp59097
I1
s(g45304
I42
g45305
Vinsert
p59098
I42
VSimpleName: JMException
p59099
tp59100
I1
s(g6722
I42
g6723
Vinsert
p59101
I42
VSimpleName: visitor
p59102
tp59103
I1
s(g2289
I42
g2290
Vinsert
p59104
I38
VPrefixExpression: -
p59105
tp59106
I1
s(g2314
I42
g2315
Vinsert
p59107
I42
VSimpleName: getUnresolveList
p59108
tp59109
I3
s(g11667
I42
g11668
Vinsert
p59110
I42
VSimpleName: getConnectionCount_Alive_1_3_Day
p59111
tp59112
I1
s(g24247
I42
g24248
Vinsert
p59113
I8
VBlock
p59114
tp59115
I3
s(g25594
I42
g25595
Vinsert
p59116
I42
VSimpleName: ExportParameterVisitor
p59117
tp59118
I3
s(g3760
I42
g3761
Vinsert
p59119
I45
VStringLiteral: "READ WRITE"
p59120
tp59121
I1
s(g19565
I42
g19566
Vinsert
p59122
I45
VStringLiteral: "show create table test1"
p59123
tp59124
I1
s(g4568
I42
g4569
Vinsert
p59125
I22
VFieldAccess
p59126
tp59127
I1
s(g2469
I42
g2470
Vinsert
p59128
I42
VSimpleName: visit
p59129
tp59130
I3
s(g9709
I42
g9710
Vinsert
p59131
I32
VMethodInvocation
p59132
tp59133
I5
s(g4339
I42
g4340
Vinsert
p59134
I42
VSimpleName: size
p59135
tp59136
I1
s(g8457
I42
g8458
Vinsert
p59137
I42
VSimpleName: HBQLVisitor
p59138
tp59139
I1
s(g2198
I42
g2199
Vinsert
p59140
I60
VVariableDeclarationStatement
p59141
tp59142
I1
s(g8425
I42
g8426
Vinsert
p59143
I21
VExpressionStatement
p59144
tp59145
I2
s(g14176
I42
g14177
Vinsert
p59146
I42
VSimpleName: print
p59147
tp59148
I1
s(g25196
I42
g25197
Vinsert
p59149
I45
VStringLiteral: "select ?"
p59150
tp59151
I1
s(Vinsert
p59152
I42
VSimpleName: put
p59153
Vinsert
p59154
I40
VQualifiedName: Ascii.instance
p59155
tp59156
I1
s(g19391
I42
g19392
Vinsert
p59157
I43
VSimpleType: SyntaxErrorViolation
p59158
tp59159
I3
s(g8969
I42
g8970
Vinsert
p59160
I42
VSimpleName: id
p59161
tp59162
I1
s(g21982
I42
g21983
Vinsert
p59163
I42
VSimpleName: ucase
p59164
tp59165
I1
s(g13017
I42
g13018
Vinsert
p59166
I42
VSimpleName: stmt3
p59167
tp59168
I1
s(g42877
I42
g42878
Vinsert
p59169
I83
VModifier: protected
p59170
tp59171
I3
s(g45304
I42
g45305
Vinsert
p59172
I42
VSimpleName: id
p59173
tp59174
I1
s(g1420
I42
g1421
Vinsert
p59175
I42
VSimpleName: query
p59176
tp59177
I1
s(g2329
I42
g2330
Vinsert
p59178
I59
VVariableDeclarationFragment
p59179
tp59180
I1
s(g4661
I42
g4662
Vinsert
p59181
I32
VMethodInvocation
p59182
tp59183
I2
s(g44253
I42
g44254
Vinsert
p59184
I42
VSimpleName: SQLNCharExpr
p59185
tp59186
I1
s(g3302
I42
g3303
Vinsert
p59187
I42
VSimpleName: getColumns
p59188
tp59189
I15
s(g5908
I42
g5909
Vinsert
p59190
I42
VSimpleName: i
p59191
tp59192
I1
s(Vinsert
p59193
I42
VSimpleName: endVisit
p59194
Vinsert
p59195
I42
VSimpleName: visit
p59196
tp59197
I18
s(g11649
I42
g11650
Vinsert
p59198
I42
VSimpleName: dataSource
p59199
tp59200
I2
s(g4462
I42
g4463
Vinsert
p59201
I45
VStringLiteral: "INSTR"
p59202
tp59203
I1
s(g12480
I42
g12481
Vinsert
p59204
I32
VMethodInvocation
p59205
tp59206
I1
s(g18672
I42
g18673
Vinsert
p59207
I62
VInstanceofExpression
p59208
tp59209
I2
s(g48916
I42
g48917
Vinsert
p59210
I42
VSimpleName: getLeft
p59211
tp59212
I1
s(g700
I42
g701
Vinsert
p59213
I9
VBooleanLiteral: true
p59214
tp59215
I1
s(g10169
I42
g10170
Vinsert
p59216
I43
VSimpleType: MySqlPartitioningDef
p59217
tp59218
I1
s(g10797
I42
g10798
Vinsert
p59219
I8
VBlock
p59220
tp59221
I1
s(g1236
I42
g1237
Vinsert
p59222
I41
VReturnStatement
p59223
tp59224
I1
s(g8648
I42
g8649
Vinsert
p59225
I60
VVariableDeclarationStatement
p59226
tp59227
I3
s(g37744
I42
g37745
Vinsert
p59228
I36
VParenthesizedExpression
p59229
tp59230
I1
s(g35402
I42
g35403
Vinsert
p59231
I14
VClassInstanceCreation
p59232
tp59233
I3
s(g11808
I42
g11809
Vinsert
p59234
I32
VMethodInvocation
p59235
tp59236
I31
s(g2104
I42
g2105
Vinsert
p59237
I42
VSimpleName: distributeBy
p59238
tp59239
I1
s(g9618
I42
g9619
Vinsert
p59240
I42
VSimpleName: stmt
p59241
tp59242
I161
s(g786
I42
g787
Vinsert
p59243
I21
VExpressionStatement
p59244
tp59245
I2
s(g28232
I42
g28233
Vinsert
p59246
I42
VSimpleName: SQLIdentifierExpr
p59247
tp59248
I1
s(g14160
I42
g14161
Vinsert
p59249
I42
VSimpleName: maxWaitMillis
p59250
tp59251
I1
s(Vinsert
p59252
I42
VSimpleName: length
p59253
Vinsert
p59254
I34
VNumberLiteral: 0x811c9dc5
p59255
tp59256
I2
s(g5404
I42
g5405
Vinsert
p59257
I42
VSimpleName: isFirstStmt
p59258
tp59259
I1
s(g15220
I42
g15221
Vinsert
p59260
I45
VStringLiteral: "Filters"
p59261
tp59262
I1
s(g20470
I42
g20471
Vinsert
p59263
I42
VSimpleName: FnvHash
p59264
tp59265
I3
s(g21534
I42
g21535
Vinsert
p59266
I42
VSimpleName: Connection
p59267
tp59268
I5
s(Vinsert
p59269
I42
VSimpleName: size
p59270
Vinsert
p59271
I45
VStringLiteral: "GROUPING SETS ("
p59272
tp59273
I1
s(g23288
I42
g23289
Vinsert
p59274
I42
VSimpleName: setCreateScheduler
p59275
tp59276
I1
s(g7547
I42
g7548
Vinsert
p59277
I45
VStringLiteral: "\u005ctc_time time,\u005cn"
p59278
tp59279
I2
s(g5287
I42
g5288
Vinsert
p59280
I31
VMethodDeclaration
p59281
tp59282
I266
s(g19344
I42
g19345
Vinsert
p59283
I42
VSimpleName: SQLInsertStatement
p59284
tp59285
I1
s(g16517
I42
g16518
Vinsert
p59286
I43
VSimpleType: PGExprParser
p59287
tp59288
I11
s(Vinsert
p59289
I42
VSimpleName: nextToken
p59290
Vinsert
p59291
I45
VStringLiteral: "FORCE"
p59292
tp59293
I2
s(g33917
I42
g33918
Vinsert
p59294
I45
VStringLiteral: "FROM t2\u005cn"
p59295
tp59296
I1
s(g1007
I42
g1008
Vinsert
p59297
I52
VThisExpression
p59298
tp59299
I1
s(g27620
I42
g27621
Vinsert
p59300
I59
VVariableDeclarationFragment
p59301
tp59302
I1
s(g10966
I42
g10967
Vinsert
p59303
I43
VSimpleType: DataSourceProperties
p59304
tp59305
I1
s(g56312
I42
g56313
Vinsert
p59306
I27
VInfixExpression: !=
p59307
tp59308
I1
s(g5148
I42
g5149
Vinsert
p59309
I42
VSimpleName: doInBackground
p59310
tp59311
I2
s(Vinsert
p59312
I42
VSimpleName: assertEquals
p59313
Vinsert
p59314
I42
VSimpleName: EvalMethodTest_lpad
p59315
tp59316
I1
s(g9696
I42
g9697
Vinsert
p59317
I42
VSimpleName: JarURLConnection
p59318
tp59319
I2
s(Vinsert
p59320
I42
VSimpleName: assertEquals
p59321
Vinsert
p59322
I42
VSimpleName: getValuesList
p59323
tp59324
I1
s(g15402
I42
g15403
Vinsert
p59325
I34
VNumberLiteral: 1
p59326
tp59327
I2
s(g12435
I42
g12436
Vinsert
p59328
I25
VIfStatement
p59329
tp59330
I1
s(g9158
I42
g9159
Vinsert
p59331
I43
VSimpleType: OracleIsSetExpr
p59332
tp59333
I2
s(Vinsert
p59334
I42
VSimpleName: createSchemaStatVisitor
p59335
Vinsert
p59336
I42
VSimpleName: parser
p59337
tp59338
I2
s(g2074
I42
g2075
Vinsert
p59339
I45
VStringLiteral: "RETURN"
p59340
tp59341
I1
s(Vinsert
p59342
I42
VSimpleName: equals
p59343
Vinsert
p59344
I42
VSimpleName: value
p59345
tp59346
I9
s(g59016
I42
g59017
Vinsert
p59347
I42
VSimpleName: key
p59348
tp59349
I1
s(Vinsert
p59350
I42
VSimpleName: setParent
p59351
Vinsert
p59352
I42
VSimpleName: println
p59353
tp59354
I1
s(Vinsert
p59355
I42
VSimpleName: containsColumn
p59356
Vinsert
p59357
I45
VStringLiteral: "port"
p59358
tp59359
I1
s(g15387
I42
g15388
Vinsert
p59360
I45
VStringLiteral: "not support : "
p59361
tp59362
I1
s(Vinsert
p59363
I42
VSimpleName: accept
p59364
Vinsert
p59365
I42
VSimpleName: value
p59366
tp59367
I2
s(g49846
I42
g49847
Vinsert
p59368
I42
VSimpleName: charValue
p59369
tp59370
I1
s(g5818
I42
g5819
Vinsert
p59371
I59
VVariableDeclarationFragment
p59372
tp59373
I1
s(g1415
I42
g1416
Vinsert
p59374
I21
VExpressionStatement
p59375
tp59376
I3
s(g7769
I42
g7770
Vinsert
p59377
I13
VCharacterLiteral: ' '
p59378
tp59379
I3
s(g16178
I42
g16179
Vinsert
p59380
I45
VStringLiteral: "\u005ctORDER BY task_id DESC\u005cn"
p59381
tp59382
I1
s(g8990
I42
g8991
Vinsert
p59383
I32
VMethodInvocation
p59384
tp59385
I3
s(g25834
I42
g25835
Vinsert
p59386
I59
VVariableDeclarationFragment
p59387
tp59388
I5
s(g2069
I42
g2070
Vinsert
p59389
I42
VSimpleName: context
p59390
tp59391
I3
s(g937
I42
g938
Vinsert
p59392
I43
VSimpleType: String
p59393
tp59394
I1
s(g1853
I42
g1854
Vinsert
p59395
I42
VSimpleName: x
p59396
tp59397
I2
s(g26818
I42
g26819
Vinsert
p59398
I33
VNullLiteral
p59399
tp59400
I6
s(g17526
I42
g17527
Vinsert
p59401
I42
VSimpleName: x
p59402
tp59403
I5
s(g6298
I42
g6299
Vinsert
p59404
I70
VEnhancedForStatement
p59405
tp59406
I1
s(g18445
I42
g18446
Vinsert
p59407
I42
VSimpleName: conn
p59408
tp59409
I2
s(g19035
I42
g19036
Vinsert
p59410
I59
VVariableDeclarationFragment
p59411
tp59412
I7
s(g4248
I42
g4249
Vinsert
p59413
I9
VBooleanLiteral: true
p59414
tp59415
I9
s(g4121
I42
g4122
Vinsert
p59416
I45
VStringLiteral: "\u005ctEND IF;\u005cn"
p59417
tp59418
I1
s(g19152
I42
g19153
Vinsert
p59419
I39
VPrimitiveType: long
p59420
tp59421
I6
s(g19880
I42
g19881
Vinsert
p59422
I42
VSimpleName: lexer
p59423
tp59424
I1
s(g11611
I42
g11612
Vinsert
p59425
I42
VSimpleName: String
p59426
tp59427
I10
s(g3159
I42
g3160
Vinsert
p59428
I43
VSimpleType: java.io.Reader
p59429
tp59430
I1
s(g376
I42
g377
Vinsert
p59431
I42
VSimpleName: stmtsA
p59432
tp59433
I1
s(g5995
I42
g5996
Vinsert
p59434
I42
VSimpleName: WallVisitorUtils
p59435
tp59436
I6
s(g41161
I42
g41162
Vinsert
p59437
I42
VSimpleName: String
p59438
tp59439
I2
s(g15610
I42
g15611
Vinsert
p59440
I42
VSimpleName: lexer
p59441
tp59442
I2
s(g15263
I42
g15264
Vinsert
p59443
I41
VReturnStatement
p59444
tp59445
I4
s(g30229
I42
g30230
Vinsert
p59446
I27
VInfixExpression: &&
p59447
tp59448
I1
s(g21020
I42
g21021
Vinsert
p59449
I45
VStringLiteral: "SELECT 0 bSomething"
p59450
tp59451
I1
s(g3035
I42
g3036
Vinsert
p59452
I45
VStringLiteral: " wrapped "
p59453
tp59454
I1
s(g24273
I42
g24274
Vinsert
p59455
I42
VSimpleName: visit
p59456
tp59457
I1
s(g20914
I42
g20915
Vinsert
p59458
I8
VBlock
p59459
tp59460
I1
s(g32188
I42
g32189
Vinsert
p59461
I42
VSimpleName: setKeyColumn
p59462
tp59463
I2
s(g18680
I42
g18681
Vinsert
p59464
I42
VSimpleName: columnName
p59465
tp59466
I2
s(g9722
I42
g9723
Vinsert
p59467
I21
VExpressionStatement
p59468
tp59469
I3
s(g4318
I42
g4319
Vinsert
p59470
I8
VBlock
p59471
tp59472
I7
s(g7868
I42
g7869
Vinsert
p59473
I42
VSimpleName: testExpr
p59474
tp59475
I2
s(g19678
I42
g19679
Vinsert
p59476
I43
VSimpleType: MockConnection
p59477
tp59478
I2
s(g11765
I42
g11766
Vinsert
p59479
I43
VSimpleType: Class
p59480
tp59481
I2
s(g2775
I42
g2776
Vinsert
p59482
I59
VVariableDeclarationFragment
p59483
tp59484
I1
s(g14452
I42
g14453
Vinsert
p59485
I8
VBlock
p59486
tp59487
I7
s(g16980
I42
g16981
Vinsert
p59488
I8
VBlock
p59489
tp59490
I9
s(g18224
I42
g18225
Vinsert
p59491
I83
VModifier: protected
p59492
tp59493
I1
s(g39953
I42
g39954
Vinsert
p59494
I45
VStringLiteral: "                   where admin_member_seq = 45654723"
p59495
tp59496
I1
s(g12278
I42
g12279
Vinsert
p59497
I32
VMethodInvocation
p59498
tp59499
I4
s(g38499
I42
g38500
Vinsert
p59500
I83
VModifier: public
p59501
tp59502
I3
s(g33656
I42
g33657
Vinsert
p59503
I11
VCastExpression
p59504
tp59505
I27
s(g12786
I42
g12787
Vinsert
p59506
I42
VSimpleName: targetSql
p59507
tp59508
I1
s(g1589
I42
g1590
Vinsert
p59509
I42
VSimpleName: identifierEquals
p59510
tp59511
I2
s(g48101
I42
g48102
Vinsert
p59512
I42
VSimpleName: isExceptionFatal
p59513
tp59514
I1
s(g16581
I42
g16582
Vinsert
p59515
I32
VMethodInvocation
p59516
tp59517
I1
s(g6192
I42
g6193
Vinsert
p59518
I42
VSimpleName: x
p59519
tp59520
I2
s(g2304
I42
g2305
Vinsert
p59521
I44
VSingleVariableDeclaration
p59522
tp59523
I5
s(g3007
I42
g3008
Vinsert
p59524
I43
VSimpleType: SQLIntegerExpr
p59525
tp59526
I1
s(g8350
I42
g8351
Vinsert
p59527
I7
VAssignment: =
p59528
tp59529
I11
s(g21458
I42
g21459
Vinsert
p59530
I21
VExpressionStatement
p59531
tp59532
I1
s(g13027
I42
g13028
Vinsert
p59533
I43
VSimpleType: Object
p59534
tp59535
I1
s(g32572
I42
g32573
Vinsert
p59536
I34
VNumberLiteral: 1
p59537
tp59538
I1
s(g2538
I42
g2539
Vinsert
p59539
I42
VSimpleName: statement
p59540
tp59541
I1
s(g21084
I42
g21085
Vinsert
p59542
I42
VSimpleName: XAResource
p59543
tp59544
I1
s(g35505
I42
g35506
Vinsert
p59545
I43
VSimpleType: SQLTableSource
p59546
tp59547
I1
s(g23045
I42
g23046
Vinsert
p59548
I43
VSimpleType: MySqlKillStatement
p59549
tp59550
I1
s(g15991
I42
g15992
Vinsert
p59551
I44
VSingleVariableDeclaration
p59552
tp59553
I17
s(g28273
I42
g28274
Vinsert
p59554
I27
VInfixExpression: +
p59555
tp59556
I69
s(g3997
I42
g3998
Vinsert
p59557
I42
VSimpleName: setOver
p59558
tp59559
I2
s(g16264
I42
g16265
Vinsert
p59560
I59
VVariableDeclarationFragment
p59561
tp59562
I4
s(g44134
I42
g44135
Vinsert
p59563
I42
VSimpleName: isRoot
p59564
tp59565
I2
s(g7477
I42
g7478
Vinsert
p59566
I25
VIfStatement
p59567
tp59568
I1
s(g16648
I42
g16649
Vinsert
p59569
I42
VSimpleName: SQLUtils
p59570
tp59571
I6
s(g12222
I42
g12223
Vinsert
p59572
I42
VSimpleName: lexer
p59573
tp59574
I2
s(g3780
I42
g3781
Vinsert
p59575
I83
VModifier: public
p59576
tp59577
I3
s(g20796
I42
g20797
Vinsert
p59578
I78
VMarkerAnnotation
p59579
tp59580
I1
s(g18005
I42
g18006
Vinsert
p59581
I45
VStringLiteral: "\u005cn/*!40101 SET character_set_client = utf8 */;"
p59582
tp59583
I1
s(g7955
I42
g7956
Vinsert
p59584
I32
VMethodInvocation
p59585
tp59586
I3
s(g7469
I42
g7470
Vinsert
p59587
I42
VSimpleName: userData
p59588
tp59589
I1
s(g7903
I42
g7904
Vinsert
p59590
I52
VThisExpression
p59591
tp59592
I1
s(g5974
I42
g5975
Vinsert
p59593
I32
VMethodInvocation
p59594
tp59595
I1
s(g8324
I42
g8325
Vinsert
p59596
I45
VStringLiteral: "\u005ct\u005ct\u005ctRECORDS DELIMITED BY NEWLINE\u005cn"
p59597
tp59598
I1
s(g39695
I42
g39696
Vinsert
p59599
I42
VSimpleName: List
p59600
tp59601
I1
s(g13336
I42
g13337
Vinsert
p59602
I42
VSimpleName: getCount_1000_2000_Millis
p59603
tp59604
I1
s(g5926
I42
g5927
Vinsert
p59605
I21
VExpressionStatement
p59606
tp59607
I1
s(g7697
I42
g7698
Vinsert
p59608
I45
VStringLiteral: "\u005ct\u005ctWHERE g.id = sg.link\u005cn"
p59609
tp59610
I1
s(g25950
I42
g25951
Vinsert
p59611
I42
VSimpleName: ClobProxy
p59612
tp59613
I1
s(g7942
I42
g7943
Vinsert
p59614
I42
VSimpleName: setRollBackOnFail
p59615
tp59616
I1
s(g44694
I42
g44695
Vinsert
p59617
I45
VStringLiteral: "salary"
p59618
tp59619
I1
s(g48201
I42
g48202
Vinsert
p59620
I42
VSimpleName: PoolableWrapper
p59621
tp59622
I1
s(g3724
I42
g3725
Vinsert
p59623
I45
VStringLiteral: "\u005ctBUFFER_POOL DEFAULT\u005cn"
p59624
tp59625
I1
s(g24051
I42
g24052
Vinsert
p59626
I43
VSimpleType: ArrayList
p59627
tp59628
I1
s(g42912
I42
g42913
Vinsert
p59629
I43
VSimpleType: OracleMultiInsertStatement.ConditionalInsertClause
p59630
tp59631
I2
s(g30457
I42
g30458
Vinsert
p59632
I45
VStringLiteral: "sub_part"
p59633
tp59634
I1
s(g301
I42
g302
Vinsert
p59635
I8
VBlock
p59636
tp59637
I82
s(g10784
I42
g10785
Vinsert
p59638
I42
VSimpleName: print
p59639
tp59640
I1
s(g32633
I42
g32634
Vinsert
p59641
I45
VStringLiteral: "CHANGE COLUMN "
p59642
tp59643
I1
s(g27840
I42
g27841
Vinsert
p59644
I42
VSimpleName: rs
p59645
tp59646
I2
s(g27070
I42
g27071
Vinsert
p59647
I42
VSimpleName: getDbType
p59648
tp59649
I1
s(g6791
I42
g6792
Vinsert
p59650
I21
VExpressionStatement
p59651
tp59652
I5
s(g24384
I42
g24385
Vinsert
p59653
I21
VExpressionStatement
p59654
tp59655
I2
s(Vinsert
p59656
I42
VSimpleName: assertNotNull
p59657
Vinsert
p59658
I42
VSimpleName: getTime
p59659
tp59660
I1
s(g7293
I42
g7294
Vinsert
p59661
I42
VSimpleName: test_setShort
p59662
tp59663
I1
s(g30294
I42
g30295
Vinsert
p59664
I34
VNumberLiteral: 6
p59665
tp59666
I1
s(g9041
I42
g9042
Vinsert
p59667
I43
VSimpleType: SQLAlterTableSetComment
p59668
tp59669
I1
s(g8006
I42
g8007
Vinsert
p59670
I13
VCharacterLiteral: '#'
p59671
tp59672
I1
s(g1617
I42
g1618
Vinsert
p59673
I42
VSimpleName: Override
p59674
tp59675
I1
s(g57112
I42
g57113
Vinsert
p59676
I45
VStringLiteral: "node"
p59677
tp59678
I1
s(g49683
I42
g49684
Vinsert
p59679
I42
VSimpleName: dataSource
p59680
tp59681
I1
s(g6
I42
g7
Vinsert
p59682
I27
VInfixExpression: <=
p59683
tp59684
I1
s(Vinsert
p59685
I42
VSimpleName: toSQLString
p59686
Vinsert
p59687
I45
VStringLiteral: "CREATE SEQUENCE \u005c"AO_4AEACD_WEBHOOK_DAO_ID_SEQ\u005c" START WITH 1 INCREMENT BY 1 NOMAXVALUE MINVALUE 1"
p59688
tp59689
I1
s(g3921
I42
g3922
Vinsert
p59690
I43
VSimpleType: SQLSelectQueryBlock
p59691
tp59692
I5
s(g57175
I42
g57176
Vinsert
p59693
I42
VSimpleName: label
p59694
tp59695
I3
s(g18672
I42
g18673
Vinsert
p59696
I42
VSimpleName: ResultSet
p59697
tp59698
I2
s(g6061
I42
g6062
Vinsert
p59699
I21
VExpressionStatement
p59700
tp59701
I4
s(g1100
I42
g1101
Vinsert
p59702
I42
VSimpleName: RsaDecrypter
p59703
tp59704
I2
s(g17221
I42
g17222
Vinsert
p59705
I42
VSimpleName: SQLPropertyExpr
p59706
tp59707
I2
s(g33444
I42
g33445
Vinsert
p59708
I60
VVariableDeclarationStatement
p59709
tp59710
I1
s(g13061
I42
g13062
Vinsert
p59711
I7
VAssignment: =
p59712
tp59713
I8
s(g4921
I42
g4922
Vinsert
p59714
I8
VBlock
p59715
tp59716
I8
s(g3598
I42
g3599
Vinsert
p59717
I7
VAssignment: =
p59718
tp59719
I1
s(g16512
I42
g16513
Vinsert
p59720
I42
VSimpleName: resource
p59721
tp59722
I1
s(g20680
I42
g20681
Vinsert
p59723
I42
VSimpleName: SQLName
p59724
tp59725
I1
s(g29718
I42
g29719
Vinsert
p59726
I45
VStringLiteral: "\u005cn\u005ct\u005c"UPDATED_AT\u005c" TIMESTAMP(6),"
p59727
tp59728
I2
s(g8449
I42
g8450
Vinsert
p59729
I58
VVariableDeclarationExpression
p59730
tp59731
I1
s(g19678
I42
g19679
Vinsert
p59732
I22
VFieldAccess
p59733
tp59734
I2
s(g2910
I42
g2911
Vinsert
p59735
I42
VSimpleName: List
p59736
tp59737
I7
s(g1375
I42
g1376
Vinsert
p59738
I25
VIfStatement
p59739
tp59740
I2
s(g34122
I42
g34123
Vinsert
p59741
I8
VBlock
p59742
tp59743
I6
s(g13166
I42
g13167
Vinsert
p59744
I25
VIfStatement
p59745
tp59746
I1
s(g14876
I42
g14877
Vinsert
p59747
I42
VSimpleName: sortBy
p59748
tp59749
I2
s(g28411
I42
g28412
Vinsert
p59750
I42
VSimpleName: MySqlShowVariantsStatement
p59751
tp59752
I2
s(g20893
I42
g20894
Vinsert
p59753
I42
VSimpleName: OracleSelectTableSource
p59754
tp59755
I1
s(g3063
I42
g3064
Vinsert
p59756
I42
VSimpleName: config
p59757
tp59758
I4
s(g51101
I42
g51102
Vinsert
p59759
I45
VStringLiteral: "update"
p59760
tp59761
I1
s(g29658
I42
g29659
Vinsert
p59762
I22
VFieldAccess
p59763
tp59764
I23
s(g24923
I42
g24924
Vinsert
p59765
I27
VInfixExpression: !=
p59766
tp59767
I2
s(g3027
I42
g3028
Vinsert
p59768
I45
VStringLiteral: "''"
p59769
tp59770
I1
s(g9345
I42
g9346
Vinsert
p59771
I42
VSimpleName: table
p59772
tp59773
I1
s(g3169
I42
g3170
Vinsert
p59774
I42
VSimpleName: reset
p59775
tp59776
I2
s(g9704
I42
g9705
Vinsert
p59777
I60
VVariableDeclarationStatement
p59778
tp59779
I1
s(g4765
I42
g4766
Vinsert
p59780
I39
VPrimitiveType: void
p59781
tp59782
I1
s(g5424
I42
g5425
Vinsert
p59783
I43
VSimpleType: DB2WallProvider
p59784
tp59785
I2
s(g17133
I42
g17134
Vinsert
p59786
I43
VSimpleType: Connection
p59787
tp59788
I1
s(g15571
I42
g15572
Vinsert
p59789
I45
VStringLiteral: "\u005cn\u005ctlname VARCHAR(30), "
p59790
tp59791
I1
s(g2538
I42
g2539
Vinsert
p59792
I44
VSingleVariableDeclaration
p59793
tp59794
I2
s(g9773
I42
g9774
Vinsert
p59795
I42
VSimpleName: SQLReplaceStatement
p59796
tp59797
I1
s(g9854
I42
g9855
Vinsert
p59798
I59
VVariableDeclarationFragment
p59799
tp59800
I1
s(g11606
I42
g11607
Vinsert
p59801
I42
VSimpleName: where
p59802
tp59803
I1
s(Vinsert
p59804
I42
VSimpleName: getMemoryMXBean
p59805
Vinsert
p59806
I42
VSimpleName: WebURIStat
p59807
tp59808
I1
s(g16060
I42
g16061
Vinsert
p59809
I42
VSimpleName: accept
p59810
tp59811
I1
s(g4589
I42
g4590
Vinsert
p59812
I42
VSimpleName: size
p59813
tp59814
I1
s(g22986
I42
g22987
Vinsert
p59815
I42
VSimpleName: DruidDataSource
p59816
tp59817
I1
s(g1198
I42
g1199
Vinsert
p59818
I32
VMethodInvocation
p59819
tp59820
I9
s(g3447
I42
g3448
Vinsert
p59821
I42
VSimpleName: isSupported
p59822
tp59823
I6
s(g2842
I42
g2843
Vinsert
p59824
I42
VSimpleName: visit
p59825
tp59826
I1
s(g3360
I42
g3361
Vinsert
p59827
I42
VSimpleName: assertTrue
p59828
tp59829
I4
s(g4880
I42
g4881
Vinsert
p59830
I21
VExpressionStatement
p59831
tp59832
I54
s(Vinsert
p59833
I42
VSimpleName: assertEquals
p59834
Vinsert
p59835
I45
VStringLiteral: "SELECT wm_concat(article_id) OVER ()"
p59836
tp59837
I1
s(g8480
I42
g8481
Vinsert
p59838
I22
VFieldAccess
p59839
tp59840
I1
s(g14722
I42
g14723
Vinsert
p59841
I42
VSimpleName: MBEAN_NAME
p59842
tp59843
I1
s(g20065
I42
g20066
Vinsert
p59844
I42
VSimpleName: SQLTableConstraint
p59845
tp59846
I1
s(g22364
I42
g22365
Vinsert
p59847
I42
VSimpleName: test_true
p59848
tp59849
I35
s(g806
I42
g807
Vinsert
p59850
I42
VSimpleName: String
p59851
tp59852
I2
s(g637
I42
g638
Vinsert
p59853
I45
VStringLiteral: " COLLATE "
p59854
tp59855
I1
s(g6134
I42
g6135
Vinsert
p59856
I43
VSimpleType: Violation
p59857
tp59858
I1
s(g7275
I42
g7276
Vinsert
p59859
I42
VSimpleName: testDB2
p59860
tp59861
I1
s(g2439
I42
g2440
Vinsert
p59862
I42
VSimpleName: getFieldCount
p59863
tp59864
I1
s(g286
I42
g287
Vinsert
p59865
I42
VSimpleName: sqlStat
p59866
tp59867
I1
s(g4165
I42
g4166
Vinsert
p59868
I45
VStringLiteral: "SELECT 'x' FROM DUAL"
p59869
tp59870
I1
s(g4674
I42
g4675
Vinsert
p59871
I42
VSimpleName: SQLCharExpr
p59872
tp59873
I1
s(g846
I42
g847
Vinsert
p59874
I21
VExpressionStatement
p59875
tp59876
I1
s(g17512
I42
g17513
Vinsert
p59877
I31
VMethodDeclaration
p59878
tp59879
I1
s(g1511
I42
g1512
Vinsert
p59880
I42
VSimpleName: getConnection
p59881
tp59882
I2
s(g15029
I42
g15030
Vinsert
p59883
I42
VSimpleName: integerValue
p59884
tp59885
I2
s(g27372
I42
g27373
Vinsert
p59886
I42
VSimpleName: print
p59887
tp59888
I3
s(g10412
I42
g10413
Vinsert
p59889
I25
VIfStatement
p59890
tp59891
I2
s(g1830
I42
g1831
Vinsert
p59892
I59
VVariableDeclarationFragment
p59893
tp59894
I5
s(g1715
I42
g1716
Vinsert
p59895
I8
VBlock
p59896
tp59897
I1
s(g16630
I42
g16631
Vinsert
p59898
I32
VMethodInvocation
p59899
tp59900
I5
s(g8974
I42
g8975
Vinsert
p59901
I43
VSimpleType: Throwable
p59902
tp59903
I1
s(g16581
I42
g16582
Vinsert
p59904
I27
VInfixExpression: >
p59905
tp59906
I1
s(g53793
I42
g53794
Vinsert
p59907
I42
VSimpleName: timestamp
p59908
tp59909
I1
s(g11816
I42
g11817
Vinsert
p59910
I45
VStringLiteral: "\u005ct, first_name\u005cn"
p59911
tp59912
I1
s(g3322
I42
g3323
Vinsert
p59913
I45
VStringLiteral: "\u005ctFOREIGN KEY (GNDM) REFERENCES XT_DM_GN (GNDM)\u005cn"
p59914
tp59915
I1
s(g2596
I42
g2597
Vinsert
p59916
I42
VSimpleName: setDefaultTransactionIsolation
p59917
tp59918
I1
s(g9286
I42
g9287
Vinsert
p59919
I42
VSimpleName: getResolvedColumn
p59920
tp59921
I2
s(g16359
I42
g16360
Vinsert
p59922
I42
VSimpleName: print0
p59923
tp59924
I1
s(g16745
I42
g16746
Vinsert
p59925
I42
VSimpleName: SQLException
p59926
tp59927
I1
s(g876
I42
g877
Vinsert
p59928
I21
VExpressionStatement
p59929
tp59930
I439
s(g8475
I42
g8476
Vinsert
p59931
I42
VSimpleName: quote
p59932
tp59933
I3
s(g27625
I42
g27626
Vinsert
p59934
I42
VSimpleName: hints
p59935
tp59936
I1
s(g54331
I42
g54332
Vinsert
p59937
I42
VSimpleName: resultSetIdSeed
p59938
tp59939
I2
s(Vinsert
p59940
I42
VSimpleName: visit
p59941
Vinsert
p59942
I42
VSimpleName: label
p59943
tp59944
I2
s(g14933
I42
g14934
Vinsert
p59945
I42
VSimpleName: MySqlASTVisitor
p59946
tp59947
I1
s(g2474
I42
g2475
Vinsert
p59948
I25
VIfStatement
p59949
tp59950
I1
s(g3724
I42
g3725
Vinsert
p59951
I42
VSimpleName: repository
p59952
tp59953
I14
s(g7527
I42
g7528
Vinsert
p59954
I10
VBreakStatement
p59955
tp59956
I1
s(g18065
I42
g18066
Vinsert
p59957
I21
VExpressionStatement
p59958
tp59959
I2
s(g7264
I42
g7265
Vinsert
p59960
I42
VSimpleName: getName
p59961
tp59962
I1
s(g42013
I42
g42014
Vinsert
p59963
I42
VSimpleName: chain
p59964
tp59965
I2
s(g16402
I42
g16403
Vinsert
p59966
I42
VSimpleName: SQLException
p59967
tp59968
I1
s(g4745
I42
g4746
Vinsert
p59969
I42
VSimpleName: Assert
p59970
tp59971
I1
s(g12844
I42
g12845
Vinsert
p59972
I42
VSimpleName: applyDropColumn
p59973
tp59974
I1
s(g35994
I42
g35995
Vinsert
p59975
I42
VSimpleName: SQLWithSubqueryClause
p59976
tp59977
I3
s(g11217
I42
g11218
Vinsert
p59978
I33
VNullLiteral
p59979
tp59980
I3
s(g45839
I42
g45840
Vinsert
p59981
I43
VSimpleType: OracleWallProvider
p59982
tp59983
I3
s(g13012
I42
g13013
Vinsert
p59984
I43
VSimpleType: OracleStatementParser
p59985
tp59986
I2
s(g38173
I42
g38174
Vinsert
p59987
I43
VSimpleType: com.mysql.jdbc.Connection
p59988
tp59989
I2
s(g4002
I42
g4003
Vinsert
p59990
I42
VSimpleName: preStmt
p59991
tp59992
I2
s(g40598
I42
g40599
Vinsert
p59993
I43
VSimpleType: Entity
p59994
tp59995
I1
s(g13525
I42
g13526
Vinsert
p59996
I42
VSimpleName: Override
p59997
tp59998
I2
s(g10016
I42
g10017
Vinsert
p59999
I42
VSimpleName: getUpdateClause
p60000
tp60001
I1
s(g5475
I42
g5476
Vinsert
p60002
I8
VBlock
p60003
tp60004
I1
s(g9209
I42
g9210
Vinsert
p60005
I42
VSimpleName: Exception
p60006
tp60007
I1
s(g4740
I42
g4741
Vinsert
p60008
I42
VSimpleName: HttpServletResponse
p60009
tp60010
I1
s(g24526
I42
g24527
Vinsert
p60011
I39
VPrimitiveType: void
p60012
tp60013
I1
s(g25586
I42
g25587
Vinsert
p60014
I42
VSimpleName: Fnv64_lower_test
p60015
tp60016
I1
s(g567
I42
g568
Vinsert
p60017
I27
VInfixExpression: <
p60018
tp60019
I3
s(g11420
I42
g11421
Vinsert
p60020
I32
VMethodInvocation
p60021
tp60022
I2
s(g1047
I42
g1048
Vinsert
p60023
I44
VSingleVariableDeclaration
p60024
tp60025
I1
s(g11286
I42
g11287
Vinsert
p60026
I42
VSimpleName: Override
p60027
tp60028
I3
s(g39356
I42
g39357
Vinsert
p60029
I42
VSimpleName: value
p60030
tp60031
I3
s(g256
I42
g257
Vinsert
p60032
I42
VSimpleName: isAll
p60033
tp60034
I1
s(g1968
I42
g1969
Vinsert
p60035
I42
VSimpleName: tableSource
p60036
tp60037
I1
s(g1690
I42
g1691
Vinsert
p60038
I42
VSimpleName: nextToken
p60039
tp60040
I1
s(g2314
I42
g2315
Vinsert
p60041
I42
VSimpleName: Override
p60042
tp60043
I3
s(g2742
I42
g2743
Vinsert
p60044
I42
VSimpleName: accept
p60045
tp60046
I2
s(g8833
I42
g8834
Vinsert
p60047
I7
VAssignment: |=
p60048
tp60049
I1
s(g42032
I42
g42033
Vinsert
p60050
I45
VStringLiteral: "\u005cn --c_3"
p60051
tp60052
I1
s(g22469
I42
g22470
Vinsert
p60053
I32
VMethodInvocation
p60054
tp60055
I10
s(g1090
I42
g1091
Vinsert
p60056
I52
VThisExpression
p60057
tp60058
I1
s(g4370
I42
g4371
Vinsert
p60059
I42
VSimpleName: x1
p60060
tp60061
I1
s(g1299
I42
g1300
Vinsert
p60062
I32
VMethodInvocation
p60063
tp60064
I4
s(g7868
I42
g7869
Vinsert
p60065
I42
VSimpleName: SQLExpr
p60066
tp60067
I5
s(g211
I42
g212
Vinsert
p60068
I42
VSimpleName: tableSource
p60069
tp60070
I1
s(g29567
I42
g29568
Vinsert
p60071
I42
VSimpleName: Connection
p60072
tp60073
I6
s(g8179
I42
g8180
Vinsert
p60074
I74
VParameterizedType: Map<String,Object>
p60075
tp60076
I1
s(g11649
I42
g11650
Vinsert
p60077
I43
VSimpleType: OracleExceptionSorter
p60078
tp60079
I2
s(g2444
I42
g2445
Vinsert
p60080
I43
VSimpleType: SQLIdentifierExpr
p60081
tp60082
I1
s(g12573
I42
g12574
Vinsert
p60083
I42
VSimpleName: clientImplWrapper
p60084
tp60085
I1
s(g40603
I42
g40604
Vinsert
p60086
I45
VStringLiteral: "GROUP BY to_char(CreateDate || ' ' || CAST(HourArgment AS VARCHAR) || ':00:00'::TIMESTAMP, 'YYYY-MM-DD HH24')"
p60087
tp60088
I1
s(g11930
I42
g11931
Vinsert
p60089
I83
VModifier: public
p60090
tp60091
I1
s(g9534
I42
g9535
Vinsert
p60092
I42
VSimpleName: PreparedStatementHolder
p60093
tp60094
I1
s(g15097
I42
g15098
Vinsert
p60095
I42
VSimpleName: test_system_user2
p60096
tp60097
I1
s(g4293
I42
g4294
Vinsert
p60098
I42
VSimpleName: error
p60099
tp60100
I1
s(Vinsert
p60101
I42
VSimpleName: setInitialSize
p60102
Vinsert
p60103
I42
VSimpleName: setTestWhileIdle
p60104
tp60105
I1
s(g8311
I42
g8312
Vinsert
p60106
I32
VMethodInvocation
p60107
tp60108
I1
s(g17007
I42
g17008
Vinsert
p60109
I60
VVariableDeclarationStatement
p60110
tp60111
I3
s(g3939
I42
g3940
Vinsert
p60112
I54
VTryStatement
p60113
tp60114
I13
s(g30322
I42
g30323
Vinsert
p60115
I42
VSimpleName: column
p60116
tp60117
I1
s(g2727
I42
g2728
Vinsert
p60118
I42
VSimpleName: name
p60119
tp60120
I1
s(g20486
I42
g20487
Vinsert
p60121
I42
VSimpleName: ArrayList
p60122
tp60123
I1
s(g31879
I42
g31880
Vinsert
p60124
I40
VQualifiedName: other.name
p60125
tp60126
I1
s(g49259
I42
g49260
Vinsert
p60127
I42
VSimpleName: clearWallTopStatementContext
p60128
tp60129
I2
s(g10222
I42
g10223
Vinsert
p60130
I42
VSimpleName: c
p60131
tp60132
I1
s(g13272
I42
g13273
Vinsert
p60133
I42
VSimpleName: isPrintPostSemi
p60134
tp60135
I1
s(g15345
I42
g15346
Vinsert
p60136
I54
VTryStatement
p60137
tp60138
I1
s(g18399
I42
g18400
Vinsert
p60139
I45
VStringLiteral: "select 1;select 1"
p60140
tp60141
I1
s(Vinsert
p60142
I42
VSimpleName: assertEquals
p60143
Vinsert
p60144
I42
VSimpleName: EvalMethodTest_substring_1
p60145
tp60146
I1
s(g8311
I42
g8312
Vinsert
p60147
I42
VSimpleName: nameHashCode64
p60148
tp60149
I1
s(g24495
I42
g24496
Vinsert
p60150
I42
VSimpleName: driverClass
p60151
tp60152
I2
s(g27644
I42
g27645
Vinsert
p60153
I43
VSimpleType: HMapping
p60154
tp60155
I1
s(g40231
I42
g40232
Vinsert
p60156
I42
VSimpleName: assertEquals
p60157
tp60158
I6
s(g44008
I42
g44009
Vinsert
p60159
I43
VSimpleType: RsaDecrypter
p60160
tp60161
I2
s(g36060
I42
g36061
Vinsert
p60162
I42
VSimpleName: SocketTimeoutException
p60163
tp60164
I1
s(g36594
I42
g36595
Vinsert
p60165
I42
VSimpleName: rightTableSource
p60166
tp60167
I1
s(g13437
I42
g13438
Vinsert
p60168
I45
VStringLiteral: "\u005ctAND supReg.supType = '0'"
p60169
tp60170
I1
s(g8179
I42
g8180
Vinsert
p60171
I42
VSimpleName: Object
p60172
tp60173
I1
s(g34855
I42
g34856
Vinsert
p60174
I42
VSimpleName: flag3
p60175
tp60176
I2
s(g1241
I42
g1242
Vinsert
p60177
I40
VQualifiedName: com.alibaba.druid.pool.DruidDataSource
p60178
tp60179
I1
s(g56999
I42
g57000
Vinsert
p60180
I42
VSimpleName: nameCount
p60181
tp60182
I1
s(g30229
I42
g30230
Vinsert
p60183
I42
VSimpleName: dataSource
p60184
tp60185
I1
s(g16985
I42
g16986
Vinsert
p60186
I43
VSimpleType: SQLException
p60187
tp60188
I2
s(g25381
I42
g25382
Vinsert
p60189
I42
VSimpleName: DruidDataSource
p60190
tp60191
I2
s(g17539
I42
g17540
Vinsert
p60192
I42
VSimpleName: text
p60193
tp60194
I27
s(g2982
I42
g2983
Vinsert
p60195
I33
VNullLiteral
p60196
tp60197
I1
s(g11469
I42
g11470
Vinsert
p60198
I42
VSimpleName: exprParser
p60199
tp60200
I1
s(g10736
I42
g10737
Vinsert
p60201
I43
VSimpleType: java.sql.Timestamp
p60202
tp60203
I1
s(g25417
I42
g25418
Vinsert
p60204
I43
VSimpleType: DruidDataSource
p60205
tp60206
I1
s(g9113
I42
g9114
Vinsert
p60207
I42
VSimpleName: getDataSourceHolder
p60208
tp60209
I1
s(g24051
I42
g24052
Vinsert
p60210
I42
VSimpleName: binaryExpr
p60211
tp60212
I1
s(g14484
I42
g14485
Vinsert
p60213
I43
VSimpleType: StringBuilder
p60214
tp60215
I13
s(g16447
I42
g16448
Vinsert
p60216
I21
VExpressionStatement
p60217
tp60218
I2
s(g14044
I42
g14045
Vinsert
p60219
I45
VStringLiteral: "FROM customers\u005cn"
p60220
tp60221
I1
s(g23839
I42
g23840
Vinsert
p60222
I43
VSimpleType: String
p60223
tp60224
I4
s(g7777
I42
g7778
Vinsert
p60225
I33
VNullLiteral
p60226
tp60227
I1
s(Vinsert
p60228
I42
VSimpleName: visit
p60229
Vinsert
p60230
I42
VSimpleName: hints
p60231
tp60232
I1
s(g8588
I42
g8589
Vinsert
p60233
I43
VSimpleType: Exception
p60234
tp60235
I70
s(g11428
I42
g11429
Vinsert
p60236
I83
VModifier: public
p60237
tp60238
I1
s(g8823
I42
g8824
Vinsert
p60239
I42
VSimpleName: setLong
p60240
tp60241
I1
s(g22826
I42
g22827
Vinsert
p60242
I42
VSimpleName: x
p60243
tp60244
I4
s(g13933
I42
g13934
Vinsert
p60245
I25
VIfStatement
p60246
tp60247
I2
s(g15702
I42
g15703
Vinsert
p60248
I42
VSimpleName: x
p60249
tp60250
I7
s(g33889
I42
g33890
Vinsert
p60251
I42
VSimpleName: SQLException
p60252
tp60253
I3
s(Vinsert
p60254
I42
VSimpleName: assertEquals
p60255
Vinsert
p60256
I42
VSimpleName: EvalMethodLeftTest
p60257
tp60258
I1
s(g23501
I42
g23502
Vinsert
p60259
I5
VArrayType: long[]
p60260
tp60261
I1
s(g9768
I42
g9769
Vinsert
p60262
I42
VSimpleName: MySqlForeignKey
p60263
tp60264
I1
s(g12661
I42
g12662
Vinsert
p60265
I42
VSimpleName: SQLCaseExpr
p60266
tp60267
I1
s(g2672
I42
g2673
Vinsert
p60268
I8
VBlock
p60269
tp60270
I3
s(g8919
I42
g8920
Vinsert
p60271
I42
VSimpleName: statementList
p60272
tp60273
I1
s(g34565
I42
g34566
Vinsert
p60274
I42
VSimpleName: test_format
p60275
tp60276
I1
s(g419
I42
g420
Vinsert
p60277
I42
VSimpleName: xaDataSource
p60278
tp60279
I1
s(g27630
I42
g27631
Vinsert
p60280
I43
VSimpleType: WallSQLException
p60281
tp60282
I2
s(Vinsert
p60283
I42
VSimpleName: parseStatement
p60284
Vinsert
p60285
I42
VSimpleName: st
p60286
tp60287
I1
s(g32633
I42
g32634
Vinsert
p60288
I43
VSimpleType: SQLAlterTableRenameColumn
p60289
tp60290
I2
s(g11803
I42
g11804
Vinsert
p60291
I43
VSimpleType: TeradataSelectQueryBlock
p60292
tp60293
I2
s(g18278
I42
g18279
Vinsert
p60294
I42
VSimpleName: item
p60295
tp60296
I1
s(g816
I42
g817
Vinsert
p60297
I42
VSimpleName: Assert
p60298
tp60299
I1
s(g25196
I42
g25197
Vinsert
p60300
I42
VSimpleName: unwrap
p60301
tp60302
I1
s(g6338
I42
g6339
Vinsert
p60303
I42
VSimpleName: getMasterUrl
p60304
tp60305
I1
s(g14702
I42
g14703
Vinsert
p60306
I43
VSimpleType: DruidDataSource
p60307
tp60308
I1
s(g8810
I42
g8811
Vinsert
p60309
I43
VSimpleType: SQLIdentifierExpr
p60310
tp60311
I1
s(g21025
I42
g21026
Vinsert
p60312
I43
VSimpleType: SQLDropTableStatement
p60313
tp60314
I1
s(g11524
I42
g11525
Vinsert
p60315
I22
VFieldAccess
p60316
tp60317
I2
s(g14917
I42
g14918
Vinsert
p60318
I45
VStringLiteral: "\u005ct\u005ctSELECT *\u005cn"
p60319
tp60320
I1
s(g44852
I42
g44853
Vinsert
p60321
I42
VSimpleName: fieldName
p60322
tp60323
I1
s(g17550
I42
g17551
Vinsert
p60324
I42
VSimpleName: Assert
p60325
tp60326
I1
s(g3775
I42
g3776
Vinsert
p60327
I42
VSimpleName: setEndExpr
p60328
tp60329
I1
s(g32847
I42
g32848
Vinsert
p60330
I31
VMethodDeclaration
p60331
tp60332
I32
s(g6694
I42
g6695
Vinsert
p60333
I42
VSimpleName: MySqlUpdateStatement
p60334
tp60335
I1
s(g26722
I42
g26723
Vinsert
p60336
I11
VCastExpression
p60337
tp60338
I1
s(g3977
I42
g3978
Vinsert
p60339
I42
VSimpleName: MockCallableStatement
p60340
tp60341
I4
s(Vinsert
p60342
I42
VSimpleName: assertTrue
p60343
Vinsert
p60344
I42
VSimpleName: setSchemaCheck
p60345
tp60346
I1
s(g914
I42
g915
Vinsert
p60347
I45
VStringLiteral: "CHECK PARTITION "
p60348
tp60349
I1
s(Vinsert
p60350
I42
VSimpleName: assertEquals
p60351
Vinsert
p60352
I45
VStringLiteral: "ALTER TABLE abc_dev.tdl_mytable_xx MERGE SMALLFILES;"
p60353
tp60354
I1
s(g10275
I42
g10276
Vinsert
p60355
I42
VSimpleName: withQuery
p60356
tp60357
I2
s(g12505
I42
g12506
Vinsert
p60358
I42
VSimpleName: ConcurrentMap
p60359
tp60360
I2
s(g10642
I42
g10643
Vinsert
p60361
I33
VNullLiteral
p60362
tp60363
I1
s(g21257
I42
g21258
Vinsert
p60364
I45
VStringLiteral: "                union"
p60365
tp60366
I1
s(Vinsert
p60367
I42
VSimpleName: name_hash_lower
p60368
Vinsert
p60369
I42
VSimpleName: alias_hash
p60370
tp60371
I1
s(g20248
I42
g20249
Vinsert
p60372
I52
VThisExpression
p60373
tp60374
I1
s(g4477
I42
g4478
Vinsert
p60375
I14
VClassInstanceCreation
p60376
tp60377
I1
s(g19077
I42
g19078
Vinsert
p60378
I25
VIfStatement
p60379
tp60380
I7
s(g1120
I42
g1121
Vinsert
p60381
I44
VSingleVariableDeclaration
p60382
tp60383
I1
s(g27630
I42
g27631
Vinsert
p60384
I42
VSimpleName: ex
p60385
tp60386
I2
s(g27615
I42
g27616
Vinsert
p60387
I45
VStringLiteral: "    and asq.sequence_owner = us.table_owner"
p60388
tp60389
I2
s(g1511
I42
g1512
Vinsert
p60390
I32
VMethodInvocation
p60391
tp60392
I24
s(g31352
I42
g31353
Vinsert
p60393
I43
VSimpleType: SQLEvalVisitor
p60394
tp60395
I1
s(g2880
I42
g2881
Vinsert
p60396
I45
VStringLiteral: "\u005cn\u005ctlocation_id NUMBER(4)"
p60397
tp60398
I1
s(g12854
I42
g12855
Vinsert
p60399
I42
VSimpleName: connection
p60400
tp60401
I1
s(g35114
I42
g35115
Vinsert
p60402
I9
VBooleanLiteral: false
p60403
tp60404
I1
s(g38081
I42
g38082
Vinsert
p60405
I42
VSimpleName: add
p60406
tp60407
I1
s(g4170
I42
g4171
Vinsert
p60408
I42
VSimpleName: SQLIntegerExpr
p60409
tp60410
I1
s(g5805
I42
g5806
Vinsert
p60411
I27
VInfixExpression: *
p60412
tp60413
I1
s(g3926
I42
g3927
Vinsert
p60414
I42
VSimpleName: error
p60415
tp60416
I2
s(g29440
I42
g29441
Vinsert
p60417
I42
VSimpleName: x
p60418
tp60419
I1
s(g5872
I42
g5873
Vinsert
p60420
I42
VSimpleName: queryBlock
p60421
tp60422
I3
s(g1589
I42
g1590
Vinsert
p60423
I42
VSimpleName: READ
p60424
tp60425
I1
s(g23854
I42
g23855
Vinsert
p60426
I60
VVariableDeclarationStatement
p60427
tp60428
I1
s(g17550
I42
g17551
Vinsert
p60429
I40
VQualifiedName: MethodType.M1
p60430
tp60431
I1
s(g20439
I42
g20440
Vinsert
p60432
I38
VPrefixExpression: ++
p60433
tp60434
I1
s(g5931
I42
g5932
Vinsert
p60435
I32
VMethodInvocation
p60436
tp60437
I4
s(g8090
I42
g8091
Vinsert
p60438
I21
VExpressionStatement
p60439
tp60440
I9
s(g19880
I42
g19881
Vinsert
p60441
I42
VSimpleName: dateExpr
p60442
tp60443
I1
s(g35545
I42
g35546
Vinsert
p60444
I45
VStringLiteral: "log4j"
p60445
tp60446
I1
s(g91
I42
g92
Vinsert
p60447
I27
VInfixExpression: -
p60448
tp60449
I1
s(g6323
I42
g6324
Vinsert
p60450
I39
VPrimitiveType: void
p60451
tp60452
I1
s(g15818
I42
g15819
Vinsert
p60453
I43
VSimpleType: List
p60454
tp60455
I1
s(g57744
I42
g57745
Vinsert
p60456
I42
VSimpleName: getNotEmptyWaitNanos
p60457
tp60458
I1
s(g876
I42
g877
Vinsert
p60459
I45
VStringLiteral: "\u005ctlink STRING,\u005cn"
p60460
tp60461
I1
s(g11686
I42
g11687
Vinsert
p60462
I45
VStringLiteral: "\u005cn\u005ctwarranty_period INTERVAL YEAR TO MONTH,"
p60463
tp60464
I2
s(Vinsert
p60465
I42
VSimpleName: parseStatementList
p60466
Vinsert
p60467
I43
VSimpleType: MySqlShowColumnsStatement
p60468
tp60469
I2
s(g28204
I42
g28205
Vinsert
p60470
I42
VSimpleName: createTable
p60471
tp60472
I1
s(g1491
I42
g1492
Vinsert
p60473
I43
VSimpleType: Advisor
p60474
tp60475
I1
s(g32847
I42
g32848
Vinsert
p60476
I21
VExpressionStatement
p60477
tp60478
I87
s(g21892
I42
g21893
Vinsert
p60479
I42
VSimpleName: Clob
p60480
tp60481
I1
s(g2099
I42
g2100
Vinsert
p60482
I45
VStringLiteral: "1"
p60483
tp60484
I1
s(g5490
I42
g5491
Vinsert
p60485
I45
VStringLiteral: "{ call INTERFACE_DATA_EXTRACTION.INVOICE_INFO(?,?,?)}"
p60486
tp60487
I1
s(g3664
I42
g3665
Vinsert
p60488
I21
VExpressionStatement
p60489
tp60490
I2
s(g10581
I42
g10582
Vinsert
p60491
I43
VSimpleType: Exception
p60492
tp60493
I2
s(g5931
I42
g5932
Vinsert
p60494
I25
VIfStatement
p60495
tp60496
I1
s(g23739
I42
g23740
Vinsert
p60497
I42
VSimpleName: statValue
p60498
tp60499
I1
s(g2795
I42
g2796
Vinsert
p60500
I14
VClassInstanceCreation
p60501
tp60502
I1
s(g20374
I42
g20375
Vinsert
p60503
I42
VSimpleName: Double
p60504
tp60505
I1
s(g13569
I42
g13570
Vinsert
p60506
I43
VSimpleType: MySqlUnionQuery
p60507
tp60508
I1
s(Vinsert
p60509
I42
VSimpleName: accept0
p60510
Vinsert
p60511
I42
VSimpleName: value
p60512
tp60513
I2
s(g18224
I42
g18225
Vinsert
p60514
I41
VReturnStatement
p60515
tp60516
I1
s(Vinsert
p60517
I42
VSimpleName: append
p60518
Vinsert
p60519
I42
VSimpleName: entrySet
p60520
tp60521
I1
s(g7650
I42
g7651
Vinsert
p60522
I9
VBooleanLiteral: false
p60523
tp60524
I1
s(g16479
I42
g16480
Vinsert
p60525
I42
VSimpleName: SQLUpdateStatement
p60526
tp60527
I2
s(g4088
I42
g4089
Vinsert
p60528
I54
VTryStatement
p60529
tp60530
I1
s(g33151
I42
g33152
Vinsert
p60531
I42
VSimpleName: variants
p60532
tp60533
I1
s(g24954
I42
g24955
Vinsert
p60534
I42
VSimpleName: SQLTableSource
p60535
tp60536
I1
s(g1271
I42
g1272
Vinsert
p60537
I42
VSimpleName: getRunningCount
p60538
tp60539
I1
s(g6781
I42
g6782
Vinsert
p60540
I42
VSimpleName: assertEquals
p60541
tp60542
I2
s(g10687
I42
g10688
Vinsert
p60543
I59
VVariableDeclarationFragment
p60544
tp60545
I1
s(Vinsert
p60546
I42
VSimpleName: createSchemaStatVisitor
p60547
Vinsert
p60548
I34
VNumberLiteral: 2
p60549
tp60550
I1
s(g9883
I42
g9884
Vinsert
p60551
I42
VSimpleName: cache
p60552
tp60553
I1
s(g28273
I42
g28274
Vinsert
p60554
I45
VStringLiteral: "Tables : "
p60555
tp60556
I60
s(Vinsert
p60557
I42
VSimpleName: nextToken
p60558
Vinsert
p60559
I43
VSimpleType: OracleStorageClause
p60560
tp60561
I1
s(g4495
I42
g4496
Vinsert
p60562
I34
VNumberLiteral: 25425
p60563
tp60564
I1
s(g39695
I42
g39696
Vinsert
p60565
I42
VSimpleName: hints
p60566
tp60567
I1
s(g34576
I42
g34577
Vinsert
p60568
I42
VSimpleName: SQLVariantRefExpr
p60569
tp60570
I1
s(g17408
I42
g17409
Vinsert
p60571
I42
VSimpleName: getYoungGC
p60572
tp60573
I1
s(g5320
I42
g5321
Vinsert
p60574
I42
VSimpleName: ReentrantLock
p60575
tp60576
I7
s(g26080
I42
g26081
Vinsert
p60577
I43
VSimpleType: TraceEvent
p60578
tp60579
I1
s(g12888
I42
g12889
Vinsert
p60580
I59
VVariableDeclarationFragment
p60581
tp60582
I387
s(g14680
I42
g14681
Vinsert
p60583
I40
VQualifiedName: SerializerFeature.UseISO8601DateFormat
p60584
tp60585
I1
s(g8849
I42
g8850
Vinsert
p60586
I39
VPrimitiveType: byte
p60587
tp60588
I1
s(g2829
I42
g2830
Vinsert
p60589
I59
VVariableDeclarationFragment
p60590
tp60591
I1
s(g11360
I42
g11361
Vinsert
p60592
I11
VCastExpression
p60593
tp60594
I1
s(g21746
I42
g21747
Vinsert
p60595
I16
VConditionalExpression
p60596
tp60597
I1
s(g43011
I42
g43012
Vinsert
p60598
I42
VSimpleName: SQLSelectQueryBlock
p60599
tp60600
I3
s(g40231
I42
g40232
Vinsert
p60601
I42
VSimpleName: getBrowserIE10Count
p60602
tp60603
I3
s(g19179
I42
g19180
Vinsert
p60604
I42
VSimpleName: str
p60605
tp60606
I2
s(g8841
I42
g8842
Vinsert
p60607
I42
VSimpleName: lexer
p60608
tp60609
I1
s(g24943
I42
g24944
Vinsert
p60610
I26
VImportDeclaration
p60611
tp60612
I2
s(g4414
I42
g4415
Vinsert
p60613
I52
VThisExpression
p60614
tp60615
I1
s(g14072
I42
g14073
Vinsert
p60616
I42
VSimpleName: WallVisitorUtils
p60617
tp60618
I3
s(g19626
I42
g19627
Vinsert
p60619
I45
VStringLiteral: "CREATE VIEW emp_view\u005cn"
p60620
tp60621
I1
s(g44242
I42
g44243
Vinsert
p60622
I42
VSimpleName: getValidationQuery
p60623
tp60624
I1
s(g10480
I42
g10481
Vinsert
p60625
I8
VBlock
p60626
tp60627
I3
s(g5574
I42
g5575
Vinsert
p60628
I42
VSimpleName: setPreferredTestQuery
p60629
tp60630
I1
s(g8075
I42
g8076
Vinsert
p60631
I42
VSimpleName: dblink
p60632
tp60633
I1
s(g5030
I42
g5031
Vinsert
p60634
I43
VSimpleType: SQLSelectOrderByItem
p60635
tp60636
I3
s(g43711
I42
g43712
Vinsert
p60637
I42
VSimpleName: rowCount
p60638
tp60639
I1
s(g17125
I42
g17126
Vinsert
p60640
I42
VSimpleName: initialize
p60641
tp60642
I1
s(g20947
I42
g20948
Vinsert
p60643
I42
VSimpleName: setMaxActive
p60644
tp60645
I1
s(g11649
I42
g11650
Vinsert
p60646
I21
VExpressionStatement
p60647
tp60648
I1
s(g1853
I42
g1854
Vinsert
p60649
I14
VClassInstanceCreation
p60650
tp60651
I2
s(g33374
I42
g33375
Vinsert
p60652
I45
VStringLiteral: "RETURN TickerTypeSetPIPELINED \u005cn"
p60653
tp60654
I1
s(g7512
I42
g7513
Vinsert
p60655
I32
VMethodInvocation
p60656
tp60657
I1
s(g17235
I42
g17236
Vinsert
p60658
I42
VSimpleName: sql
p60659
tp60660
I27
s(g3564
I42
g3565
Vinsert
p60661
I34
VNumberLiteral: 1
p60662
tp60663
I1
s(g14139
I42
g14140
Vinsert
p60664
I45
VStringLiteral: "select 1"
p60665
tp60666
I1
s(g12555
I42
g12556
Vinsert
p60667
I42
VSimpleName: stats
p60668
tp60669
I1
s(g2140
I42
g2141
Vinsert
p60670
I42
VSimpleName: parseFetchClause
p60671
tp60672
I1
s(g48954
I42
g48955
Vinsert
p60673
I42
VSimpleName: getFrom
p60674
tp60675
I2
s(g8298
I42
g8299
Vinsert
p60676
I27
VInfixExpression: !=
p60677
tp60678
I27
s(g31536
I42
g31537
Vinsert
p60679
I42
VSimpleName: getParentName
p60680
tp60681
I1
s(g9493
I42
g9494
Vinsert
p60682
I45
VStringLiteral: "employees"
p60683
tp60684
I2
s(g17665
I42
g17666
Vinsert
p60685
I42
VSimpleName: chain
p60686
tp60687
I3
s(g3826
I42
g3827
Vinsert
p60688
I59
VVariableDeclarationFragment
p60689
tp60690
I1
s(g17114
I42
g17115
Vinsert
p60691
I25
VIfStatement
p60692
tp60693
I3
s(g11973
I42
g11974
Vinsert
p60694
I45
VStringLiteral: " `Extent1`.`CreateTime`, "
p60695
tp60696
I1
s(g10650
I42
g10651
Vinsert
p60697
I42
VSimpleName: DESKeySpec
p60698
tp60699
I2
s(g6318
I42
g6319
Vinsert
p60700
I60
VVariableDeclarationStatement
p60701
tp60702
I1
s(g1810
I42
g1811
Vinsert
p60703
I45
VStringLiteral: "     END IF;\u005cn"
p60704
tp60705
I1
s(g26548
I42
g26549
Vinsert
p60706
I42
VSimpleName: length
p60707
tp60708
I1
s(g8796
I42
g8797
Vinsert
p60709
I42
VSimpleName: tableReference
p60710
tp60711
I2
s(g18680
I42
g18681
Vinsert
p60712
I44
VSingleVariableDeclaration
p60713
tp60714
I2
s(g5931
I42
g5932
Vinsert
p60715
I42
VSimpleName: print
p60716
tp60717
I1
s(g101
I42
g102
Vinsert
p60718
I42
VSimpleName: stmt
p60719
tp60720
I1
s(g1410
I42
g1411
Vinsert
p60721
I42
VSimpleName: field
p60722
tp60723
I1
s(g34576
I42
g34577
Vinsert
p60724
I42
VSimpleName: expr
p60725
tp60726
I2
s(g18031
I42
g18032
Vinsert
p60727
I14
VClassInstanceCreation
p60728
tp60729
I1
s(Vinsert
p60730
I42
VSimpleName: currentTimeMillis
p60731
Vinsert
p60732
I42
VSimpleName: transactionMillis
p60733
tp60734
I1
s(g37744
I42
g37745
Vinsert
p60735
I42
VSimpleName: expr
p60736
tp60737
I1
s(g10398
I42
g10399
Vinsert
p60738
I42
VSimpleName: explainToSQLObject
p60739
tp60740
I1
s(g1198
I42
g1199
Vinsert
p60741
I43
VSimpleType: SQLDataType
p60742
tp60743
I3
s(g1627
I42
g1628
Vinsert
p60744
I59
VVariableDeclarationFragment
p60745
tp60746
I6
s(g6684
I42
g6685
Vinsert
p60747
I33
VNullLiteral
p60748
tp60749
I4
s(g23849
I42
g23850
Vinsert
p60750
I39
VPrimitiveType: long
p60751
tp60752
I1
s(g2074
I42
g2075
Vinsert
p60753
I42
VSimpleName: stmt
p60754
tp60755
I1
s(g24987
I42
g24988
Vinsert
p60756
I34
VNumberLiteral: 0
p60757
tp60758
I1
s(g2925
I42
g2926
Vinsert
p60759
I21
VExpressionStatement
p60760
tp60761
I4
s(g15490
I42
g15491
Vinsert
p60762
I42
VSimpleName: latch
p60763
tp60764
I2
s(g30418
I42
g30419
Vinsert
p60765
I42
VSimpleName: metaData
p60766
tp60767
I2
s(g34122
I42
g34123
Vinsert
p60768
I32
VMethodInvocation
p60769
tp60770
I4
s(g2558
I42
g2559
Vinsert
p60771
I40
VQualifiedName: Token.PROCEDURE
p60772
tp60773
I1
s(g13228
I42
g13229
Vinsert
p60774
I14
VClassInstanceCreation
p60775
tp60776
I2
s(g30294
I42
g30295
Vinsert
p60777
I59
VVariableDeclarationFragment
p60778
tp60779
I5
s(g5176
I42
g5177
Vinsert
p60780
I42
VSimpleName: SQLName
p60781
tp60782
I2
s(g9843
I42
g9844
Vinsert
p60783
I45
VStringLiteral: "hbase.master"
p60784
tp60785
I1
s(g53804
I42
g53805
Vinsert
p60786
I45
VStringLiteral: "SECURITY"
p60787
tp60788
I1
s(g7131
I42
g7132
Vinsert
p60789
I42
VSimpleName: getBytes
p60790
tp60791
I1
s(g8833
I42
g8834
Vinsert
p60792
I2
VArrayAccess
p60793
tp60794
I2
s(g4946
I42
g4947
Vinsert
p60795
I42
VSimpleName: assertEquals
p60796
tp60797
I1
s(g21667
I42
g21668
Vinsert
p60798
I42
VSimpleName: WallVisitorUtils
p60799
tp60800
I1
s(g22757
I42
g22758
Vinsert
p60801
I39
VPrimitiveType: void
p60802
tp60803
I6
s(g15536
I42
g15537
Vinsert
p60804
I43
VSimpleType: String
p60805
tp60806
I1
s(g5310
I42
g5311
Vinsert
p60807
I42
VSimpleName: Object
p60808
tp60809
I2
s(g5429
I42
g5430
Vinsert
p60810
I42
VSimpleName: setParent
p60811
tp60812
I1
s(g16648
I42
g16649
Vinsert
p60813
I33
VNullLiteral
p60814
tp60815
I5
s(g14527
I42
g14528
Vinsert
p60816
I27
VInfixExpression: ||
p60817
tp60818
I1
s(g21375
I42
g21376
Vinsert
p60819
I9
VBooleanLiteral: false
p60820
tp60821
I2
s(g25328
I42
g25329
Vinsert
p60822
I42
VSimpleName: unwrap
p60823
tp60824
I1
s(g35379
I42
g35380
Vinsert
p60825
I42
VSimpleName: field
p60826
tp60827
I2
s(g27276
I42
g27277
Vinsert
p60828
I12
VCatchClause
p60829
tp60830
I10
s(g11187
I42
g11188
Vinsert
p60831
I23
VFieldDeclaration
p60832
tp60833
I2
s(g3893
I42
g3894
Vinsert
p60834
I7
VAssignment: =
p60835
tp60836
I2
s(g21598
I42
g21599
Vinsert
p60837
I44
VSingleVariableDeclaration
p60838
tp60839
I20
s(g3417
I42
g3418
Vinsert
p60840
I60
VVariableDeclarationStatement
p60841
tp60842
I4
s(g5520
I42
g5521
Vinsert
p60843
I42
VSimpleName: msgDigest
p60844
tp60845
I1
s(g26608
I42
g26609
Vinsert
p60846
I43
VSimpleType: SQLInsertStatement
p60847
tp60848
I1
s(g19456
I42
g19457
Vinsert
p60849
I40
VQualifiedName: JdbcUtils.HIVE
p60850
tp60851
I1
s(g26531
I42
g26532
Vinsert
p60852
I42
VSimpleName: stmt
p60853
tp60854
I6
s(g24987
I42
g24988
Vinsert
p60855
I9
VBooleanLiteral: false
p60856
tp60857
I1
s(g20707
I42
g20708
Vinsert
p60858
I42
VSimpleName: additiveRest
p60859
tp60860
I1
s(g18949
I42
g18950
Vinsert
p60861
I42
VSimpleName: Object
p60862
tp60863
I7
s(g49024
I42
g49025
Vinsert
p60864
I42
VSimpleName: Date
p60865
tp60866
I1
s(g4661
I42
g4662
Vinsert
p60867
I42
VSimpleName: Exception
p60868
tp60869
I1
s(g37204
I42
g37205
Vinsert
p60870
I42
VSimpleName: test_0
p60871
tp60872
I1
s(g14829
I42
g14830
Vinsert
p60873
I42
VSimpleName: SQLUtils
p60874
tp60875
I38
s(g11840
I42
g11841
Vinsert
p60876
I25
VIfStatement
p60877
tp60878
I2
s(g27974
I42
g27975
Vinsert
p60879
I42
VSimpleName: x
p60880
tp60881
I2
s(g7893
I42
g7894
Vinsert
p60882
I43
VSimpleType: String
p60883
tp60884
I21
s(g6354
I42
g6355
Vinsert
p60885
I42
VSimpleName: SQLExprTableSource
p60886
tp60887
I1
s(g8564
I42
g8565
Vinsert
p60888
I42
VSimpleName: on
p60889
tp60890
I1
s(Vinsert
p60891
I42
VSimpleName: assertEquals
p60892
Vinsert
p60893
I42
VSimpleName: getInitialSize
p60894
tp60895
I1
s(g4635
I42
g4636
Vinsert
p60896
I59
VVariableDeclarationFragment
p60897
tp60898
I1
s(g17704
I42
g17705
Vinsert
p60899
I42
VSimpleName: prop
p60900
tp60901
I2
s(g7063
I42
g7064
Vinsert
p60902
I42
VSimpleName: info
p60903
tp60904
I1
s(g7787
I42
g7788
Vinsert
p60905
I33
VNullLiteral
p60906
tp60907
I1
s(g4222
I42
g4223
Vinsert
p60908
I42
VSimpleName: DataSource
p60909
tp60910
I1
s(g9854
I42
g9855
Vinsert
p60911
I32
VMethodInvocation
p60912
tp60913
I6
s(Vinsert
p60914
I42
VSimpleName: createIfNotExists
p60915
Vinsert
p60916
I42
VSimpleName: dbType
p60917
tp60918
I2
s(g11217
I42
g11218
Vinsert
p60919
I32
VMethodInvocation
p60920
tp60921
I5
s(g10655
I42
g10656
Vinsert
p60922
I42
VSimpleName: await
p60923
tp60924
I1
s(g21020
I42
g21021
Vinsert
p60925
I32
VMethodInvocation
p60926
tp60927
I11
s(g36569
I42
g36570
Vinsert
p60928
I42
VSimpleName: lexer
p60929
tp60930
I2
s(g2992
I42
g2993
Vinsert
p60931
I41
VReturnStatement
p60932
tp60933
I6
s(g35893
I42
g35894
Vinsert
p60934
I42
VSimpleName: acceptIdentifier
p60935
tp60936
I1
s(g19128
I42
g19129
Vinsert
p60937
I45
VStringLiteral: "t"
p60938
tp60939
I1
s(g537
I42
g538
Vinsert
p60940
I45
VStringLiteral: "KILL QUERY "
p60941
tp60942
I1
s(g9704
I42
g9705
Vinsert
p60943
I42
VSimpleName: renderer
p60944
tp60945
I1
s(g3618
I42
g3619
Vinsert
p60946
I33
VNullLiteral
p60947
tp60948
I1
s(g18852
I42
g18853
Vinsert
p60949
I25
VIfStatement
p60950
tp60951
I1
s(g6727
I42
g6728
Vinsert
p60952
I42
VSimpleName: isRemovePatiting
p60953
tp60954
I1
s(g15490
I42
g15491
Vinsert
p60955
I54
VTryStatement
p60956
tp60957
I2
s(g42032
I42
g42033
Vinsert
p60958
I45
VStringLiteral: "\u005cnselect 3 from t3"
p60959
tp60960
I1
s(g10631
I42
g10632
Vinsert
p60961
I25
VIfStatement
p60962
tp60963
I1
s(g5320
I42
g5321
Vinsert
p60964
I59
VVariableDeclarationFragment
p60965
tp60966
I7
s(g8360
I42
g8361
Vinsert
p60967
I43
VSimpleType: SQLName
p60968
tp60969
I1
s(g14266
I42
g14267
Vinsert
p60970
I32
VMethodInvocation
p60971
tp60972
I1
s(g32771
I42
g32772
Vinsert
p60973
I21
VExpressionStatement
p60974
tp60975
I153
s(g932
I42
g933
Vinsert
p60976
I8
VBlock
p60977
tp60978
I1
s(g9758
I42
g9759
Vinsert
p60979
I42
VSimpleName: externalRejectLimit
p60980
tp60981
I3
s(g6676
I42
g6677
Vinsert
p60982
I60
VVariableDeclarationStatement
p60983
tp60984
I1
s(g16005
I42
g16006
Vinsert
p60985
I31
VMethodDeclaration
p60986
tp60987
I1
s(g22975
I42
g22976
Vinsert
p60988
I42
VSimpleName: filter
p60989
tp60990
I1
s(g39764
I42
g39765
Vinsert
p60991
I42
VSimpleName: getInfoCount
p60992
tp60993
I1
s(g27736
I42
g27737
Vinsert
p60994
I42
VSimpleName: getName
p60995
tp60996
I1
s(g695
I42
g696
Vinsert
p60997
I42
VSimpleName: HashMap
p60998
tp60999
I3
s(g6689
I42
g6690
Vinsert
p61000
I42
VSimpleName: getConfig
p61001
tp61002
I3
s(g12077
I42
g12078
Vinsert
p61003
I21
VExpressionStatement
p61004
tp61005
I1
s(g13027
I42
g13028
Vinsert
p61006
I42
VSimpleName: Object
p61007
tp61008
I1
s(g10433
I42
g10434
Vinsert
p61009
I25
VIfStatement
p61010
tp61011
I1
s(g3457
I42
g3458
Vinsert
p61012
I42
VSimpleName: subQuery
p61013
tp61014
I5
s(g5143
I42
g5144
Vinsert
p61015
I42
VSimpleName: ConnectionEvent
p61016
tp61017
I1
s(g13136
I42
g13137
Vinsert
p61018
I42
VSimpleName: parseTableSource
p61019
tp61020
I1
s(g2001
I42
g2002
Vinsert
p61021
I42
VSimpleName: sql
p61022
tp61023
I7
s(Vinsert
p61024
I42
VSimpleName: getClass
p61025
Vinsert
p61026
I42
VSimpleName: reset
p61027
tp61028
I2
s(g27625
I42
g27626
Vinsert
p61029
I42
VSimpleName: SQLCommentHint
p61030
tp61031
I2
s(g51370
I42
g51371
Vinsert
p61032
I42
VSimpleName: getValue
p61033
tp61034
I1
s(g25430
I42
g25431
Vinsert
p61035
I42
VSimpleName: putAttribute
p61036
tp61037
I1
s(g3977
I42
g3978
Vinsert
p61038
I62
VInstanceofExpression
p61039
tp61040
I5
s(g7756
I42
g7757
Vinsert
p61041
I42
VSimpleName: Collection
p61042
tp61043
I1
s(g6676
I42
g6677
Vinsert
p61044
I42
VSimpleName: SqlHolder
p61045
tp61046
I1
s(g32436
I42
g32437
Vinsert
p61047
I42
VSimpleName: addPartitionColumn
p61048
tp61049
I2
s(g18796
I42
g18797
Vinsert
p61050
I21
VExpressionStatement
p61051
tp61052
I2
s(g4298
I42
g4299
Vinsert
p61053
I21
VExpressionStatement
p61054
tp61055
I1
s(g2997
I42
g2998
Vinsert
p61056
I32
VMethodInvocation
p61057
tp61058
I11
s(g3248
I42
g3249
Vinsert
p61059
I42
VSimpleName: value
p61060
tp61061
I1
s(g3880
I42
g3881
Vinsert
p61062
I42
VSimpleName: thisObject
p61063
tp61064
I1
s(g3462
I42
g3463
Vinsert
p61065
I42
VSimpleName: Exception
p61066
tp61067
I1
s(g20193
I42
g20194
Vinsert
p61068
I42
VSimpleName: format
p61069
tp61070
I3
s(g2586
I42
g2587
Vinsert
p61071
I42
VSimpleName: PreparedStatementProxyImpl
p61072
tp61073
I6
s(g4288
I42
g4289
Vinsert
p61074
I32
VMethodInvocation
p61075
tp61076
I2
s(g7702
I42
g7703
Vinsert
p61077
I42
VSimpleName: visit
p61078
tp61079
I1
s(g7320
I42
g7321
Vinsert
p61080
I42
VSimpleName: conn
p61081
tp61082
I3
s(g20382
I42
g20383
Vinsert
p61083
I21
VExpressionStatement
p61084
tp61085
I1
s(g9150
I42
g9151
Vinsert
p61086
I42
VSimpleName: setProperty
p61087
tp61088
I1
s(g24211
I42
g24212
Vinsert
p61089
I45
VStringLiteral: "PARTITION BY ("
p61090
tp61091
I1
s(g49201
I42
g49202
Vinsert
p61092
I42
VSimpleName: getConfig
p61093
tp61094
I1
s(g1958
I42
g1959
Vinsert
p61095
I45
VStringLiteral: "\u005ct\u005ctCOMPRESS\u005cn"
p61096
tp61097
I1
s(g14630
I42
g14631
Vinsert
p61098
I83
VModifier: public
p61099
tp61100
I1
s(g1185
I42
g1186
Vinsert
p61101
I45
VStringLiteral: "PRIVILEGES"
p61102
tp61103
I1
s(Vinsert
p61104
I42
VSimpleName: assertFalse
p61105
Vinsert
p61106
I42
VSimpleName: setSelectHavingAlwayTrueCheck
p61107
tp61108
I1
s(g4308
I42
g4309
Vinsert
p61109
I34
VNumberLiteral: 0
p61110
tp61111
I1
s(g27355
I42
g27356
Vinsert
p61112
I42
VSimpleName: emptyMap
p61113
tp61114
I1
s(g12822
I42
g12823
Vinsert
p61115
I22
VFieldAccess
p61116
tp61117
I2
s(Vinsert
p61118
I42
VSimpleName: assertEquals
p61119
Vinsert
p61120
I27
VInfixExpression: <
p61121
tp61122
I1
s(g1193
I42
g1194
Vinsert
p61123
I9
VBooleanLiteral: false
p61124
tp61125
I1
s(g2662
I42
g2663
Vinsert
p61126
I21
VExpressionStatement
p61127
tp61128
I4
s(g14730
I42
g14731
Vinsert
p61129
I7
VAssignment: =
p61130
tp61131
I5
s(g642
I42
g643
Vinsert
p61132
I49
VSwitchCase
p61133
tp61134
I4
s(g9137
I42
g9138
Vinsert
p61135
I39
VPrimitiveType: boolean
p61136
tp61137
I1
s(g2780
I42
g2781
Vinsert
p61138
I42
VSimpleName: OracleSelectParser
p61139
tp61140
I1
s(Vinsert
p61141
I42
VSimpleName: accept
p61142
Vinsert
p61143
I42
VSimpleName: toSQLString
p61144
tp61145
I19
s(g15697
I42
g15698
Vinsert
p61146
I42
VSimpleName: getStartTransactionCount
p61147
tp61148
I1
s(Vinsert
p61149
I42
VSimpleName: expr
p61150
Vinsert
p61151
I43
VSimpleType: SQLAnyExpr
p61152
tp61153
I1
s(g2712
I42
g2713
Vinsert
p61154
I32
VMethodInvocation
p61155
tp61156
I140
s(g9753
I42
g9754
Vinsert
p61157
I43
VSimpleType: SQLPartitionValue
p61158
tp61159
I1
s(g23242
I42
g23243
Vinsert
p61160
I27
VInfixExpression: ||
p61161
tp61162
I2
s(Vinsert
p61163
I42
VSimpleName: toSQLString
p61164
Vinsert
p61165
I45
VStringLiteral: "\u005cn\u005ctdepartment_id,"
p61166
tp61167
I2
s(g10275
I42
g10276
Vinsert
p61168
I9
VBooleanLiteral: true
p61169
tp61170
I1
s(g13857
I42
g13858
Vinsert
p61171
I42
VSimpleName: functions
p61172
tp61173
I1
s(g35379
I42
g35380
Vinsert
p61174
I42
VSimpleName: Log
p61175
tp61176
I2
s(g7991
I42
g7992
Vinsert
p61177
I39
VPrimitiveType: void
p61178
tp61179
I1
s(g33126
I42
g33127
Vinsert
p61180
I34
VNumberLiteral: 100
p61181
tp61182
I2
s(g17951
I42
g17952
Vinsert
p61183
I42
VSimpleName: token
p61184
tp61185
I1
s(g517
I42
g518
Vinsert
p61186
I42
VSimpleName: Object
p61187
tp61188
I3
s(g14809
I42
g14810
Vinsert
p61189
I42
VSimpleName: visitor
p61190
tp61191
I1
s(g42114
I42
g42115
Vinsert
p61192
I42
VSimpleName: close
p61193
tp61194
I1
s(g21
I42
g22
Vinsert
p61195
I25
VIfStatement
p61196
tp61197
I3
s(g10257
I42
g10258
Vinsert
p61198
I42
VSimpleName: conn
p61199
tp61200
I12
s(g4972
I42
g4973
Vinsert
p61201
I45
VStringLiteral: "STORED"
p61202
tp61203
I1
s(g4318
I42
g4319
Vinsert
p61204
I52
VThisExpression
p61205
tp61206
I3
s(g12289
I42
g12290
Vinsert
p61207
I25
VIfStatement
p61208
tp61209
I1
s(g4775
I42
g4776
Vinsert
p61210
I42
VSimpleName: assertTrue
p61211
tp61212
I1
s(g3608
I42
g3609
Vinsert
p61213
I43
VSimpleType: ArrayList
p61214
tp61215
I1
s(g2173
I42
g2174
Vinsert
p61216
I42
VSimpleName: infoCount
p61217
tp61218
I2
s(g18815
I42
g18816
Vinsert
p61219
I43
VSimpleType: String
p61220
tp61221
I17
s(g2349
I42
g2350
Vinsert
p61222
I52
VThisExpression
p61223
tp61224
I1
s(g592
I42
g593
Vinsert
p61225
I8
VBlock
p61226
tp61227
I1
s(g7797
I42
g7798
Vinsert
p61228
I42
VSimpleName: isNotificationEnable
p61229
tp61230
I1
s(g28278
I42
g28279
Vinsert
p61231
I27
VInfixExpression: ==
p61232
tp61233
I6
s(g15456
I42
g15457
Vinsert
p61234
I42
VSimpleName: getDriverClassName
p61235
tp61236
I1
s(g11795
I42
g11796
Vinsert
p61237
I39
VPrimitiveType: int
p61238
tp61239
I2
s(g14597
I42
g14598
Vinsert
p61240
I27
VInfixExpression: !=
p61241
tp61242
I3
s(g1120
I42
g1121
Vinsert
p61243
I43
VSimpleType: MySqlShowErrorsStatement
p61244
tp61245
I1
s(g10829
I42
g10830
Vinsert
p61246
I43
VSimpleType: ArrayList
p61247
tp61248
I1
s(g16153
I42
g16154
Vinsert
p61249
I9
VBooleanLiteral: true
p61250
tp61251
I8
s(g4339
I42
g4340
Vinsert
p61252
I21
VExpressionStatement
p61253
tp61254
I4
s(g31696
I42
g31697
Vinsert
p61255
I45
VStringLiteral: ", collectTime datetime NOT NULL"
p61256
tp61257
I1
s(g8969
I42
g8970
Vinsert
p61258
I78
VMarkerAnnotation
p61259
tp61260
I1
s(g3631
I42
g3632
Vinsert
p61261
I42
VSimpleName: countFilter
p61262
tp61263
I1
s(Vinsert
p61264
I42
VSimpleName: getConnection
p61265
Vinsert
p61266
I45
VStringLiteral: "select * from t where id = 3 or id = 5 or id = 7"
p61267
tp61268
I1
s(g13911
I42
g13912
Vinsert
p61269
I25
VIfStatement
p61270
tp61271
I1
s(g23088
I42
g23089
Vinsert
p61272
I45
VStringLiteral: "druid.configKey"
p61273
tp61274
I1
s(Vinsert
p61275
I42
VSimpleName: evalExpr
p61276
Vinsert
p61277
I42
VSimpleName: tan
p61278
tp61279
I1
s(g487
I42
g488
Vinsert
p61280
I42
VSimpleName: args
p61281
tp61282
I1
s(g22046
I42
g22047
Vinsert
p61283
I42
VSimpleName: sql
p61284
tp61285
I1
s(g901
I42
g902
Vinsert
p61286
I42
VSimpleName: alias
p61287
tp61288
I2
s(g6465
I42
g6466
Vinsert
p61289
I42
VSimpleName: setPartition
p61290
tp61291
I1
s(g27239
I42
g27240
Vinsert
p61292
I42
VSimpleName: expect
p61293
tp61294
I1
s(g21765
I42
g21766
Vinsert
p61295
I36
VParenthesizedExpression
p61296
tp61297
I2
s(g5176
I42
g5177
Vinsert
p61298
I21
VExpressionStatement
p61299
tp61300
I4
s(g12758
I42
g12759
Vinsert
p61301
I34
VNumberLiteral: 13
p61302
tp61303
I1
s(g14834
I42
g14835
Vinsert
p61304
I36
VParenthesizedExpression
p61305
tp61306
I1
s(g3977
I42
g3978
Vinsert
p61307
I42
VSimpleName: getNativePreparedStatement
p61308
tp61309
I5
s(g12448
I42
g12449
Vinsert
p61310
I42
VSimpleName: parseWith
p61311
tp61312
I2
s(g2829
I42
g2830
Vinsert
p61313
I32
VMethodInvocation
p61314
tp61315
I1
s(g32069
I42
g32070
Vinsert
p61316
I42
VSimpleName: size
p61317
tp61318
I1
s(Vinsert
p61319
I42
VSimpleName: setWhere
p61320
Vinsert
p61321
I42
VSimpleName: into
p61322
tp61323
I1
s(g9415
I42
g9416
Vinsert
p61324
I11
VCastExpression
p61325
tp61326
I1
s(Vinsert
p61327
I42
VSimpleName: toSQLString
p61328
Vinsert
p61329
I45
VStringLiteral: "\u005ctLOGGING\u005cn"
p61330
tp61331
I6
s(g8129
I42
g8130
Vinsert
p61332
I24
VForStatement
p61333
tp61334
I26
s(g10011
I42
g10012
Vinsert
p61335
I42
VSimpleName: HBaseConnection
p61336
tp61337
I1
s(g4987
I42
g4988
Vinsert
p61338
I25
VIfStatement
p61339
tp61340
I1
s(g15177
I42
g15178
Vinsert
p61341
I43
VSimpleType: List
p61342
tp61343
I1
s(g11529
I42
g11530
Vinsert
p61344
I42
VSimpleName: TestUtil
p61345
tp61346
I1
s(g33079
I42
g33080
Vinsert
p61347
I39
VPrimitiveType: boolean
p61348
tp61349
I1
s(g3103
I42
g3104
Vinsert
p61350
I42
VSimpleName: stmt
p61351
tp61352
I24
s(g15397
I42
g15398
Vinsert
p61353
I43
VSimpleType: Reader
p61354
tp61355
I1
s(g6750
I42
g6751
Vinsert
p61356
I42
VSimpleName: parametersSize
p61357
tp61358
I1
s(g7206
I42
g7207
Vinsert
p61359
I42
VSimpleName: getUrlPattern
p61360
tp61361
I1
s(g5356
I42
g5357
Vinsert
p61362
I42
VSimpleName: statements
p61363
tp61364
I2
s(g5156
I42
g5157
Vinsert
p61365
I42
VSimpleName: nextToken
p61366
tp61367
I3
s(Vinsert
p61368
I42
VSimpleName: assertEquals
p61369
Vinsert
p61370
I42
VSimpleName: sqlList
p61371
tp61372
I2
s(g6
I42
g7
Vinsert
p61373
I58
VVariableDeclarationExpression
p61374
tp61375
I1
s(g4635
I42
g4636
Vinsert
p61376
I44
VSingleVariableDeclaration
p61377
tp61378
I3
s(g11555
I42
g11556
Vinsert
p61379
I42
VSimpleName: dataSource
p61380
tp61381
I15
s(g942
I42
g943
Vinsert
p61382
I45
VStringLiteral: "jdbc:mysql://100.69.167.129:3906/"
p61383
tp61384
I1
s(g17311
I42
g17312
Vinsert
p61385
I42
VSimpleName: setMaxConnectionsPerPartition
p61386
tp61387
I1
s(g487
I42
g488
Vinsert
p61388
I42
VSimpleName: String
p61389
tp61390
I1
s(g13022
I42
g13023
Vinsert
p61391
I40
VQualifiedName: ErrorCode.NONE_CONDITION
p61392
tp61393
I1
s(g6343
I42
g6344
Vinsert
p61394
I42
VSimpleName: config
p61395
tp61396
I4
s(g40603
I42
g40604
Vinsert
p61397
I45
VStringLiteral: "\u005ctAND cs.CreateDate >= to_date('2017-08-31 00:00:00', 'YYYY-MM-DD HH24:MI:SS')\u005cn"
p61398
tp61399
I1
s(Vinsert
p61400
I42
VSimpleName: incrementAndGet
p61401
Vinsert
p61402
I42
VSimpleName: connectionIdSeed
p61403
tp61404
I4
s(g4829
I42
g4830
Vinsert
p61405
I60
VVariableDeclarationStatement
p61406
tp61407
I4
s(g35452
I42
g35453
Vinsert
p61408
I33
VNullLiteral
p61409
tp61410
I1
s(g16551
I42
g16552
Vinsert
p61411
I42
VSimpleName: resetCountUpdater
p61412
tp61413
I1
s(g18863
I42
g18864
Vinsert
p61414
I45
VStringLiteral: ",   host.gmt_modify as gmtModify"
p61415
tp61416
I1
s(g6521
I42
g6522
Vinsert
p61417
I43
VSimpleType: OracleHint
p61418
tp61419
I1
s(g21276
I42
g21277
Vinsert
p61420
I42
VSimpleName: output
p61421
tp61422
I18
s(g7288
I42
g7289
Vinsert
p61423
I42
VSimpleName: getDataSourceStat
p61424
tp61425
I1
s(g18044
I42
g18045
Vinsert
p61426
I8
VBlock
p61427
tp61428
I2
s(g14517
I42
g14518
Vinsert
p61429
I8
VBlock
p61430
tp61431
I10
s(g33917
I42
g33918
Vinsert
p61432
I45
VStringLiteral: ")\u005cn"
p61433
tp61434
I2
s(g26548
I42
g26549
Vinsert
p61435
I39
VPrimitiveType: byte
p61436
tp61437
I1
s(g15766
I42
g15767
Vinsert
p61438
I25
VIfStatement
p61439
tp61440
I1
s(g6139
I42
g6140
Vinsert
p61441
I8
VBlock
p61442
tp61443
I17
s(Vinsert
p61444
I42
VSimpleName: getConnection
p61445
Vinsert
p61446
I42
VSimpleName: test_error_3
p61447
tp61448
I1
s(Vinsert
p61449
I42
VSimpleName: hashCode64
p61450
Vinsert
p61451
I42
VSimpleName: methodNameHashCod64
p61452
tp61453
I3
s(g9524
I42
g9525
Vinsert
p61454
I45
VStringLiteral: "\u005ct\u005ctfrom alimama_algo.fund_mlr_n_chicago_offline_click\u005cn"
p61455
tp61456
I1
s(g116
I42
g117
Vinsert
p61457
I42
VSimpleName: assertThat
p61458
tp61459
I1
s(g15687
I42
g15688
Vinsert
p61460
I42
VSimpleName: equals
p61461
tp61462
I2
s(g23657
I42
g23658
Vinsert
p61463
I40
VQualifiedName: System.out
p61464
tp61465
I2
s(g3598
I42
g3599
Vinsert
p61466
I42
VSimpleName: r
p61467
tp61468
I3
s(g38647
I42
g38648
Vinsert
p61469
I42
VSimpleName: result
p61470
tp61471
I1
s(g11965
I42
g11966
Vinsert
p61472
I42
VSimpleName: name
p61473
tp61474
I3
s(g19678
I42
g19679
Vinsert
p61475
I42
VSimpleName: MockConnection
p61476
tp61477
I2
s(g3233
I42
g3234
Vinsert
p61478
I42
VSimpleName: visitor
p61479
tp61480
I16
s(g41049
I42
g41050
Vinsert
p61481
I43
VSimpleType: String
p61482
tp61483
I2
s(g15894
I42
g15895
Vinsert
p61484
I43
VSimpleType: SQLStatement
p61485
tp61486
I1
s(g4538
I42
g4539
Vinsert
p61487
I42
VSimpleName: get
p61488
tp61489
I5
s(g29022
I42
g29023
Vinsert
p61490
I52
VThisExpression
p61491
tp61492
I29
s(g38850
I42
g38851
Vinsert
p61493
I42
VSimpleName: connectionIdSeed
p61494
tp61495
I1
s(g8583
I42
g8584
Vinsert
p61496
I31
VMethodDeclaration
p61497
tp61498
I1
s(g8929
I42
g8930
Vinsert
p61499
I42
VSimpleName: userAgent
p61500
tp61501
I3
s(g44999
I42
g45000
Vinsert
p61502
I42
VSimpleName: output
p61503
tp61504
I1
s(g16685
I42
g16686
Vinsert
p61505
I43
VSimpleType: DaemonThreadFactory
p61506
tp61507
I2
s(Vinsert
p61508
I42
VSimpleName: visit
p61509
Vinsert
p61510
I42
VSimpleName: ColumnStatisticClause
p61511
tp61512
I1
s(g26553
I42
g26554
Vinsert
p61513
I32
VMethodInvocation
p61514
tp61515
I3
s(g2223
I42
g2224
Vinsert
p61516
I42
VSimpleName: size
p61517
tp61518
I18
s(g10626
I42
g10627
Vinsert
p61519
I21
VExpressionStatement
p61520
tp61521
I2
s(g11686
I42
g11687
Vinsert
p61522
I45
VStringLiteral: "\u005cn\u005ctproduct_description VARCHAR2(2000),"
p61523
tp61524
I2
s(g947
I42
g948
Vinsert
p61525
I25
VIfStatement
p61526
tp61527
I3
s(g3370
I42
g3371
Vinsert
p61528
I27
VInfixExpression: !=
p61529
tp61530
I51
s(g14397
I42
g14398
Vinsert
p61531
I45
VStringLiteral: "\u005ctTABLESPACE \u005c"USERS\u005c"\u005cn"
p61532
tp61533
I1
s(g21413
I42
g21414
Vinsert
p61534
I42
VSimpleName: addFetchRowCount
p61535
tp61536
I1
s(g5699
I42
g5700
Vinsert
p61537
I60
VVariableDeclarationStatement
p61538
tp61539
I2
s(g7469
I42
g7470
Vinsert
p61540
I32
VMethodInvocation
p61541
tp61542
I1
s(g21025
I42
g21026
Vinsert
p61543
I42
VSimpleName: SQLDropTableStatement
p61544
tp61545
I1
s(g2885
I42
g2886
Vinsert
p61546
I40
VQualifiedName: Token.UPDATE
p61547
tp61548
I1
s(g2770
I42
g2771
Vinsert
p61549
I42
VSimpleName: nextToken
p61550
tp61551
I1
s(g2001
I42
g2002
Vinsert
p61552
I42
VSimpleName: checkValid
p61553
tp61554
I1
s(g6917
I42
g6918
Vinsert
p61555
I42
VSimpleName: assertNotNull
p61556
tp61557
I2
s(g9629
I42
g9630
Vinsert
p61558
I44
VSingleVariableDeclaration
p61559
tp61560
I4
s(Vinsert
p61561
I42
VSimpleName: token
p61562
Vinsert
p61563
I40
VQualifiedName: Token.KEY
p61564
tp61565
I1
s(g16479
I42
g16480
Vinsert
p61566
I42
VSimpleName: MappingEngine
p61567
tp61568
I2
s(g32956
I42
g32957
Vinsert
p61569
I45
VStringLiteral: "value"
p61570
tp61571
I2
s(g5351
I42
g5352
Vinsert
p61572
I60
VVariableDeclarationStatement
p61573
tp61574
I1
s(g19283
I42
g19284
Vinsert
p61575
I33
VNullLiteral
p61576
tp61577
I1
s(g8052
I42
g8053
Vinsert
p61578
I42
VSimpleName: token
p61579
tp61580
I1
s(g662
I42
g663
Vinsert
p61581
I32
VMethodInvocation
p61582
tp61583
I4
s(g246
I42
g247
Vinsert
p61584
I45
VStringLiteral: "PUBLIC"
p61585
tp61586
I1
s(g27355
I42
g27356
Vinsert
p61587
I21
VExpressionStatement
p61588
tp61589
I2
s(g14664
I42
g14665
Vinsert
p61590
I45
VStringLiteral: "\u005cn\u005ctdiv_name VARCHAR2(14),"
p61591
tp61592
I2
s(g6750
I42
g6751
Vinsert
p61593
I58
VVariableDeclarationExpression
p61594
tp61595
I1
s(g27985
I42
g27986
Vinsert
p61596
I42
VSimpleName: close
p61597
tp61598
I2
s(g3365
I42
g3366
Vinsert
p61599
I42
VSimpleName: raw
p61600
tp61601
I1
s(g25616
I42
g25617
Vinsert
p61602
I45
VStringLiteral: "\u005ct, TOTAL_CASH, NOT_CONFIRMED, PRE_RECEIVED, NOT_RECEIVED, CONTRACT_DATE\u005cn"
p61603
tp61604
I1
s(g657
I42
g658
Vinsert
p61605
I39
VPrimitiveType: void
p61606
tp61607
I1
s(g2039
I42
g2040
Vinsert
p61608
I44
VSingleVariableDeclaration
p61609
tp61610
I1
s(g18836
I42
g18837
Vinsert
p61611
I42
VSimpleName: getWebAppStat
p61612
tp61613
I1
s(g7356
I42
g7357
Vinsert
p61614
I42
VSimpleName: setEndTimeMillis
p61615
tp61616
I1
s(g14001
I42
g14002
Vinsert
p61617
I42
VSimpleName: getDataSourceHolder
p61618
tp61619
I1
s(g2084
I42
g2085
Vinsert
p61620
I43
VSimpleType: Method
p61621
tp61622
I1
s(g22038
I42
g22039
Vinsert
p61623
I45
VStringLiteral: "2.0"
p61624
tp61625
I1
s(g7955
I42
g7956
Vinsert
p61626
I42
VSimpleName: assertTrue
p61627
tp61628
I1
s(g5882
I42
g5883
Vinsert
p61629
I42
VSimpleName: mergeStatement
p61630
tp61631
I1
s(g4964
I42
g4965
Vinsert
p61632
I42
VSimpleName: holder
p61633
tp61634
I1
s(g25191
I42
g25192
Vinsert
p61635
I27
VInfixExpression: ||
p61636
tp61637
I1
s(g6562
I42
g6563
Vinsert
p61638
I34
VNumberLiteral: 0
p61639
tp61640
I5
s(g16643
I42
g16644
Vinsert
p61641
I42
VSimpleName: cacheValue
p61642
tp61643
I3
s(g3040
I42
g3041
Vinsert
p61644
I33
VNullLiteral
p61645
tp61646
I1
s(g4409
I42
g4410
Vinsert
p61647
I42
VSimpleName: SQLExpr
p61648
tp61649
I4
s(g22616
I42
g22617
Vinsert
p61650
I45
VStringLiteral: "VARRAY"
p61651
tp61652
I1
s(g23854
I42
g23855
Vinsert
p61653
I42
VSimpleName: conn
p61654
tp61655
I1
s(Vinsert
p61656
I42
VSimpleName: size
p61657
Vinsert
p61658
I45
VStringLiteral: "-+\u005cn"
p61659
tp61660
I1
s(Vinsert
p61661
I42
VSimpleName: getInstance
p61662
Vinsert
p61663
I42
VSimpleName: tearDown
p61664
tp61665
I1
s(g23859
I42
g23860
Vinsert
p61666
I25
VIfStatement
p61667
tp61668
I7
s(g2044
I42
g2045
Vinsert
p61669
I33
VNullLiteral
p61670
tp61671
I4
s(g13017
I42
g13018
Vinsert
p61672
I11
VCastExpression
p61673
tp61674
I2
s(g24211
I42
g24212
Vinsert
p61675
I42
VSimpleName: visit
p61676
tp61677
I1
s(g5908
I42
g5909
Vinsert
p61678
I42
VSimpleName: accept
p61679
tp61680
I1
s(g5787
I42
g5788
Vinsert
p61681
I42
VSimpleName: setProperty
p61682
tp61683
I1
s(Vinsert
p61684
I42
VSimpleName: addAndGet
p61685
Vinsert
p61686
I34
VNumberLiteral: 1000
p61687
tp61688
I2
s(g43716
I42
g43717
Vinsert
p61689
I42
VSimpleName: output
p61690
tp61691
I49
s(g23717
I42
g23718
Vinsert
p61692
I40
VQualifiedName: hashField.field
p61693
tp61694
I1
s(g836
I42
g837
Vinsert
p61695
I8
VBlock
p61696
tp61697
I17
s(g40231
I42
g40232
Vinsert
p61698
I32
VMethodInvocation
p61699
tp61700
I12
s(g13873
I42
g13874
Vinsert
p61701
I42
VSimpleName: offset
p61702
tp61703
I1
s(g37744
I42
g37745
Vinsert
p61704
I21
VExpressionStatement
p61705
tp61706
I1
s(g11585
I42
g11586
Vinsert
p61707
I42
VSimpleName: val
p61708
tp61709
I1
s(g28455
I42
g28456
Vinsert
p61710
I43
VSimpleType: SQLSubPartitionByHash
p61711
tp61712
I2
s(g7878
I42
g7879
Vinsert
p61713
I42
VSimpleName: storeIn
p61714
tp61715
I1
s(g8233
I42
g8234
Vinsert
p61716
I59
VVariableDeclarationFragment
p61717
tp61718
I1
s(g886
I42
g887
Vinsert
p61719
I59
VVariableDeclarationFragment
p61720
tp61721
I2
s(g52712
I42
g52713
Vinsert
p61722
I45
VStringLiteral: "  CLOSE cur2;\u005cn"
p61723
tp61724
I1
s(g52141
I42
g52142
Vinsert
p61725
I42
VSimpleName: rangeCounters
p61726
tp61727
I7
s(g811
I42
g812
Vinsert
p61728
I40
VQualifiedName: statValue.clobOpenCount
p61729
tp61730
I1
s(g18016
I42
g18017
Vinsert
p61731
I80
VMemberValuePair
p61732
tp61733
I1
s(g49735
I42
g49736
Vinsert
p61734
I43
VSimpleType: Integer
p61735
tp61736
I2
s(g2707
I42
g2708
Vinsert
p61737
I39
VPrimitiveType: void
p61738
tp61739
I1
s(g9634
I42
g9635
Vinsert
p61740
I42
VSimpleName: getWhere
p61741
tp61742
I1
s(g11067
I42
g11068
Vinsert
p61743
I36
VParenthesizedExpression
p61744
tp61745
I3
s(g2145
I42
g2146
Vinsert
p61746
I42
VSimpleName: id
p61747
tp61748
I1
s(g1898
I42
g1899
Vinsert
p61749
I42
VSimpleName: i
p61750
tp61751
I25
s(g6699
I42
g6700
Vinsert
p61752
I42
VSimpleName: test_false
p61753
tp61754
I2
s(Vinsert
p61755
I42
VSimpleName: append
p61756
Vinsert
p61757
I42
VSimpleName: SQLAllColumnExpr
p61758
tp61759
I1
s(Vinsert
p61760
I42
VSimpleName: setParent
p61761
Vinsert
p61762
I42
VSimpleName: subPartitionsCount
p61763
tp61764
I4
s(g6707
I42
g6708
Vinsert
p61765
I42
VSimpleName: length
p61766
tp61767
I1
s(g11691
I42
g11692
Vinsert
p61768
I42
VSimpleName: SQLSelectStatement
p61769
tp61770
I5
s(g17017
I42
g17018
Vinsert
p61771
I45
VStringLiteral: "test1"
p61772
tp61773
I1
s(g39452
I42
g39453
Vinsert
p61774
I42
VSimpleName: out
p61775
tp61776
I19
s(g23093
I42
g23094
Vinsert
p61777
I42
VSimpleName: ROW_EXCLUSIVE
p61778
tp61779
I1
s(g2852
I42
g2853
Vinsert
p61780
I42
VSimpleName: x
p61781
tp61782
I1
s(g7052
I42
g7053
Vinsert
p61783
I42
VSimpleName: column
p61784
tp61785
I1
s(g39640
I42
g39641
Vinsert
p61786
I45
VStringLiteral: "\u005cn\u005ctCHECK (name.first_name IS NOT NULL"
p61787
tp61788
I2
s(g5384
I42
g5385
Vinsert
p61789
I38
VPrefixExpression: !
p61790
tp61791
I2
s(g507
I42
g508
Vinsert
p61792
I16
VConditionalExpression
p61793
tp61794
I1
s(g251
I42
g252
Vinsert
p61795
I43
VSimpleType: SQLException
p61796
tp61797
I1
s(g12346
I42
g12347
Vinsert
p61798
I59
VVariableDeclarationFragment
p61799
tp61800
I1
s(g7293
I42
g7294
Vinsert
p61801
I31
VMethodDeclaration
p61802
tp61803
I1
s(Vinsert
p61804
I42
VSimpleName: setLeft
p61805
Vinsert
p61806
I41
VReturnStatement
p61807
tp61808
I1
s(g5079
I42
g5080
Vinsert
p61809
I34
VNumberLiteral: 10
p61810
tp61811
I3
s(g21561
I42
g21562
Vinsert
p61812
I42
VSimpleName: insertDataCount
p61813
tp61814
I1
s(g51
I42
g52
Vinsert
p61815
I42
VSimpleName: jdbcSqlStat
p61816
tp61817
I2
s(g449
I42
g450
Vinsert
p61818
I21
VExpressionStatement
p61819
tp61820
I114
s(g4121
I42
g4122
Vinsert
p61821
I45
VStringLiteral: "\u005ct\u005ctbonus := 50;\u005cn"
p61822
tp61823
I1
s(g5882
I42
g5883
Vinsert
p61824
I62
VInstanceofExpression
p61825
tp61826
I1
s(g21908
I42
g21909
Vinsert
p61827
I45
VStringLiteral: "\u005cn\u005ctlower_directory_name NVARCHAR(255),"
p61828
tp61829
I1
s(g53640
I42
g53641
Vinsert
p61830
I40
VQualifiedName: JdbcUtils.POSTGRESQL
p61831
tp61832
I1
s(Vinsert
p61833
I42
VSimpleName: assertTrue
p61834
Vinsert
p61835
I45
VStringLiteral: "select c.COLUMN_NAME, COLUMNPROPERTY(is_member(c.TABLE_SCHEMA + '.' + c.TABLE_NAME), c.COLUMN_NAME, 'IsIdentity') from INFORMATION_SCHEMA.KEY_COLUMN_USAGE c join INFORMATION_SCHEMA.TABLE_CONSTRAINTS p on p.CONSTRAINT_NAME = c.CONSTRAINT_NAME where c.TABLE_NAME = @p1 and c.TABLE_SCHEMA = @p2 and p.TABLE_SCHEMA = @p2 and p.CONSTRAINT_TYPE = 'PRIMARY KEY'"
p61836
tp61837
I1
s(g31568
I42
g31569
Vinsert
p61838
I42
VSimpleName: parameter
p61839
tp61840
I1
s(g13191
I42
g13192
Vinsert
p61841
I60
VVariableDeclarationStatement
p61842
tp61843
I3
s(g47573
I42
g47574
Vinsert
p61844
I42
VSimpleName: columnMapping
p61845
tp61846
I2
s(g20382
I42
g20383
Vinsert
p61847
I5
VArrayType: char[]
p61848
tp61849
I2
s(g3282
I42
g3283
Vinsert
p61850
I42
VSimpleName: print0
p61851
tp61852
I1
s(g23828
I42
g23829
Vinsert
p61853
I43
VSimpleType: AtomicLongFieldUpdater
p61854
tp61855
I5
s(g36564
I42
g36565
Vinsert
p61856
I42
VSimpleName: PGSchemaStatVisitor
p61857
tp61858
I1
s(g37973
I42
g37974
Vinsert
p61859
I43
VSimpleType: List
p61860
tp61861
I1
s(g7955
I42
g7956
Vinsert
p61862
I43
VSimpleType: NullExceptionSorter
p61863
tp61864
I1
s(g2258
I42
g2259
Vinsert
p61865
I42
VSimpleName: sqlStat
p61866
tp61867
I2
s(g17734
I42
g17735
Vinsert
p61868
I43
VSimpleType: Thread
p61869
tp61870
I2
s(g18445
I42
g18446
Vinsert
p61871
I21
VExpressionStatement
p61872
tp61873
I3
s(g11187
I42
g11188
Vinsert
p61874
I22
VFieldAccess
p61875
tp61876
I2
s(Vinsert
p61877
I42
VSimpleName: getValue
p61878
Vinsert
p61879
I27
VInfixExpression: ==
p61880
tp61881
I2
s(g5974
I42
g5975
Vinsert
p61882
I43
VSimpleType: Exception
p61883
tp61884
I1
s(g6822
I42
g6823
Vinsert
p61885
I42
VSimpleName: Reference
p61886
tp61887
I2
s(g1594
I42
g1595
Vinsert
p61888
I8
VBlock
p61889
tp61890
I1
s(g14876
I42
g14877
Vinsert
p61891
I40
VQualifiedName: Token.ASC
p61892
tp61893
I1
s(g12854
I42
g12855
Vinsert
p61894
I42
VSimpleName: XAException
p61895
tp61896
I1
s(g20559
I42
g20560
Vinsert
p61897
I25
VIfStatement
p61898
tp61899
I2
s(g24125
I42
g24126
Vinsert
p61900
I42
VSimpleName: NClob
p61901
tp61902
I1
s(g38836
I42
g38837
Vinsert
p61903
I40
VQualifiedName: JdbcConstants.POSTGRESQL
p61904
tp61905
I1
s(g7370
I42
g7371
Vinsert
p61906
I42
VSimpleName: query
p61907
tp61908
I1
s(g3649
I42
g3650
Vinsert
p61909
I42
VSimpleName: Token
p61910
tp61911
I2
s(g2125
I42
g2126
Vinsert
p61912
I42
VSimpleName: data
p61913
tp61914
I1
s(g6806
I42
g6807
Vinsert
p61915
I45
VStringLiteral: "jdbc:log4jdbc:oracle:"
p61916
tp61917
I1
s(g7280
I42
g7281
Vinsert
p61918
I42
VSimpleName: IllegalStateException
p61919
tp61920
I2
s(Vinsert
p61921
I42
VSimpleName: format
p61922
Vinsert
p61923
I45
VStringLiteral: "explain extended select * from foo"
p61924
tp61925
I1
s(Vinsert
p61926
I42
VSimpleName: setParent
p61927
Vinsert
p61928
I42
VSimpleName: setCount
p61929
tp61930
I1
s(g4134
I42
g4135
Vinsert
p61931
I42
VSimpleName: NetworkInterface
p61932
tp61933
I1
s(g11041
I42
g11042
Vinsert
p61934
I42
VSimpleName: ch
p61935
tp61936
I2
s(g52306
I42
g52307
Vinsert
p61937
I42
VSimpleName: List
p61938
tp61939
I1
s(g20259
I42
g20260
Vinsert
p61940
I40
VQualifiedName: SQLBinaryOperator.Multiply
p61941
tp61942
I1
s(g26143
I42
g26144
Vinsert
p61943
I42
VSimpleName: param
p61944
tp61945
I2
s(g10765
I42
g10766
Vinsert
p61946
I42
VSimpleName: lexer
p61947
tp61948
I1
s(g2609
I42
g2610
Vinsert
p61949
I21
VExpressionStatement
p61950
tp61951
I2
s(g15177
I42
g15178
Vinsert
p61952
I43
VSimpleType: WallProvider
p61953
tp61954
I1
s(g502
I42
g503
Vinsert
p61955
I7
VAssignment: =
p61956
tp61957
I1
s(g15392
I42
g15393
Vinsert
p61958
I43
VSimpleType: SQLSetStatement
p61959
tp61960
I2
s(g2359
I42
g2360
Vinsert
p61961
I42
VSimpleName: Override
p61962
tp61963
I1
s(g4040
I42
g4041
Vinsert
p61964
I43
VSimpleType: SQLBlockStatement
p61965
tp61966
I2
s(g106
I42
g107
Vinsert
p61967
I25
VIfStatement
p61968
tp61969
I1
s(g15367
I42
g15368
Vinsert
p61970
I42
VSimpleName: mysql5ConnectionClass
p61971
tp61972
I3
s(g18173
I42
g18174
Vinsert
p61973
I32
VMethodInvocation
p61974
tp61975
I2
s(g396
I42
g397
Vinsert
p61976
I42
VSimpleName: SQLExprHint
p61977
tp61978
I4
s(g1579
I42
g1580
Vinsert
p61979
I59
VVariableDeclarationFragment
p61980
tp61981
I5
s(g6051
I42
g6052
Vinsert
p61982
I25
VIfStatement
p61983
tp61984
I1
s(g6671
I42
g6672
Vinsert
p61985
I42
VSimpleName: getConfig
p61986
tp61987
I1
s(g11890
I42
g11891
Vinsert
p61988
I42
VSimpleName: comment
p61989
tp61990
I1
s(g4457
I42
g4458
Vinsert
p61991
I42
VSimpleName: getLastException
p61992
tp61993
I1
s(g34449
I42
g34450
Vinsert
p61994
I2
VArrayAccess
p61995
tp61996
I1
s(g27840
I42
g27841
Vinsert
p61997
I45
VStringLiteral: "1"
p61998
tp61999
I1
s(g9446
I42
g9447
Vinsert
p62000
I42
VSimpleName: pos
p62001
tp62002
I1
s(g33387
I42
g33388
Vinsert
p62003
I58
VVariableDeclarationExpression
p62004
tp62005
I1
s(g66
I42
g67
Vinsert
p62006
I42
VSimpleName: addUndoFile
p62007
tp62008
I1
s(g10105
I42
g10106
Vinsert
p62009
I43
VSimpleType: String
p62010
tp62011
I2
s(g21276
I42
g21277
Vinsert
p62012
I42
VSimpleName: getTables
p62013
tp62014
I2
s(g44198
I42
g44199
Vinsert
p62015
I43
VSimpleType: GroupingSetExpr
p62016
tp62017
I3
s(Vinsert
p62018
I42
VSimpleName: assertEquals
p62019
Vinsert
p62020
I42
VSimpleName: test_length
p62021
tp62022
I2
s(g5500
I42
g5501
Vinsert
p62023
I41
VReturnStatement
p62024
tp62025
I1
s(Vinsert
p62026
I42
VSimpleName: hasUnorderedLimit
p62027
Vinsert
p62028
I45
VStringLiteral: " select * from test t"
p62029
tp62030
I2
s(g4530
I42
g4531
Vinsert
p62031
I42
VSimpleName: sqlObject
p62032
tp62033
I12
s(g5419
I42
g5420
Vinsert
p62034
I42
VSimpleName: DruidDataSource
p62035
tp62036
I1
s(g17450
I42
g17451
Vinsert
p62037
I42
VSimpleName: toLowerCase
p62038
tp62039
I1
s(g34855
I42
g34856
Vinsert
p62040
I42
VSimpleName: ident
p62041
tp62042
I2
s(g15461
I42
g15462
Vinsert
p62043
I42
VSimpleName: item
p62044
tp62045
I8
s(Vinsert
p62046
I42
VSimpleName: output
p62047
Vinsert
p62048
I42
VSimpleName: dbLink
p62049
tp62050
I1
s(g27620
I42
g27621
Vinsert
p62051
I45
VStringLiteral: "create table b(\u005cn"
p62052
tp62053
I1
s(g7141
I42
g7142
Vinsert
p62054
I38
VPrefixExpression: ++
p62055
tp62056
I1
s(g21061
I42
g21062
Vinsert
p62057
I43
VSimpleType: JFrame
p62058
tp62059
I1
s(g24102
I42
g24103
Vinsert
p62060
I60
VVariableDeclarationStatement
p62061
tp62062
I1
s(g806
I42
g807
Vinsert
p62063
I8
VBlock
p62064
tp62065
I2
s(g6460
I42
g6461
Vinsert
p62066
I45
VStringLiteral: "\u005ct\u005c"KEEP_OPTIONS\u005c"\u005cn"
p62067
tp62068
I1
s(g261
I42
g262
Vinsert
p62069
I42
VSimpleName: NotAllowCommentException
p62070
tp62071
I1
s(g11624
I42
g11625
Vinsert
p62072
I42
VSimpleName: labelName
p62073
tp62074
I3
s(g50819
I42
g50820
Vinsert
p62075
I41
VReturnStatement
p62076
tp62077
I2
s(g13886
I42
g13887
Vinsert
p62078
I59
VVariableDeclarationFragment
p62079
tp62080
I4
s(g391
I42
g392
Vinsert
p62081
I25
VIfStatement
p62082
tp62083
I1
s(g9124
I42
g9125
Vinsert
p62084
I42
VSimpleName: x
p62085
tp62086
I6
s(g17683
I42
g17684
Vinsert
p62087
I42
VSimpleName: sql
p62088
tp62089
I12
s(g33079
I42
g33080
Vinsert
p62090
I41
VReturnStatement
p62091
tp62092
I1
s(g1145
I42
g1146
Vinsert
p62093
I32
VMethodInvocation
p62094
tp62095
I2
s(g11360
I42
g11361
Vinsert
p62096
I42
VSimpleName: insertStmt
p62097
tp62098
I2
s(g5394
I42
g5395
Vinsert
p62099
I42
VSimpleName: SQLOrderBy
p62100
tp62101
I2
s(g46523
I42
g46524
Vinsert
p62102
I42
VSimpleName: updateSQLXML
p62103
tp62104
I1
s(g6010
I42
g6011
Vinsert
p62105
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION s4,"
p62106
tp62107
I1
s(g6139
I42
g6140
Vinsert
p62108
I21
VExpressionStatement
p62109
tp62110
I16
s(g967
I42
g968
Vinsert
p62111
I27
VInfixExpression: <
p62112
tp62113
I1
s(g18270
I42
g18271
Vinsert
p62114
I42
VSimpleName: queryBlock
p62115
tp62116
I1
s(g987
I42
g988
Vinsert
p62117
I42
VSimpleName: Assert
p62118
tp62119
I1
s(g7176
I42
g7177
Vinsert
p62120
I42
VSimpleName: statemen
p62121
tp62122
I2
s(g15536
I42
g15537
Vinsert
p62123
I42
VSimpleName: sce
p62124
tp62125
I1
s(g41049
I42
g41050
Vinsert
p62126
I42
VSimpleName: toOracleString
p62127
tp62128
I4
s(g26463
I42
g26464
Vinsert
p62129
I45
VStringLiteral: "\u005cn\u005ctemployee_id NUMBER(4) PRIMARY KEY,"
p62130
tp62131
I2
s(Vinsert
p62132
I42
VSimpleName: toSQLString
p62133
Vinsert
p62134
I45
VStringLiteral: "\u005cn\u005ctpromo_id NUMBER(6)  CONSTRAINT promo_id_u UNIQUE,"
p62135
tp62136
I1
s(g156
I42
g157
Vinsert
p62137
I39
VPrimitiveType: void
p62138
tp62139
I2
s(g4007
I42
g4008
Vinsert
p62140
I42
VSimpleName: collate
p62141
tp62142
I3
s(g642
I42
g643
Vinsert
p62143
I42
VSimpleName: name
p62144
tp62145
I2
s(g36928
I42
g36929
Vinsert
p62146
I42
VSimpleName: isRemoved
p62147
tp62148
I1
s(g156
I42
g157
Vinsert
p62149
I8
VBlock
p62150
tp62151
I6
s(g30308
I42
g30309
Vinsert
p62152
I42
VSimpleName: MySqlSchemaStatVisitor
p62153
tp62154
I4
s(g321
I42
g322
Vinsert
p62155
I32
VMethodInvocation
p62156
tp62157
I9
s(g3841
I42
g3842
Vinsert
p62158
I42
VSimpleName: x
p62159
tp62160
I1
s(g17387
I42
g17388
Vinsert
p62161
I60
VVariableDeclarationStatement
p62162
tp62163
I3
s(g4437
I42
g4438
Vinsert
p62164
I42
VSimpleName: Properties
p62165
tp62166
I4
s(g15632
I42
g15633
Vinsert
p62167
I45
VStringLiteral: "\u005ct\u005ctSELECT commission_pct\u005cn"
p62168
tp62169
I1
s(g22826
I42
g22827
Vinsert
p62170
I27
VInfixExpression: !=
p62171
tp62172
I2
s(g5520
I42
g5521
Vinsert
p62173
I45
VStringLiteral: "MD5"
p62174
tp62175
I1
s(g3457
I42
g3458
Vinsert
p62176
I33
VNullLiteral
p62177
tp62178
I5
s(g3040
I42
g3041
Vinsert
p62179
I42
VSimpleName: key
p62180
tp62181
I1
s(g4898
I42
g4899
Vinsert
p62182
I18
VContinueStatement
p62183
tp62184
I1
s(g20124
I42
g20125
Vinsert
p62185
I42
VSimpleName: item
p62186
tp62187
I3
s(g11930
I42
g11931
Vinsert
p62188
I42
VSimpleName: SQLExprTableSource
p62189
tp62190
I1
s(g16745
I42
g16746
Vinsert
p62191
I60
VVariableDeclarationStatement
p62192
tp62193
I1
s(g11574
I42
g11575
Vinsert
p62194
I59
VVariableDeclarationFragment
p62195
tp62196
I2
s(g36083
I42
g36084
Vinsert
p62197
I42
VSimpleName: user
p62198
tp62199
I1
s(g2905
I42
g2906
Vinsert
p62200
I33
VNullLiteral
p62201
tp62202
I1
s(g13272
I42
g13273
Vinsert
p62203
I42
VSimpleName: printPostSemi
p62204
tp62205
I2
s(g39280
I42
g39281
Vinsert
p62206
I42
VSimpleName: TeradataAnalyticWindowing
p62207
tp62208
I1
s(g14421
I42
g14422
Vinsert
p62209
I42
VSimpleName: size
p62210
tp62211
I1
s(g11015
I42
g11016
Vinsert
p62212
I43
VSimpleType: MySqlSelectQueryBlock.Limit
p62213
tp62214
I1
s(g46482
I42
g46483
Vinsert
p62215
I42
VSimpleName: PoolableConnection
p62216
tp62217
I2
s(Vinsert
p62218
I42
VSimpleName: charAt
p62219
Vinsert
p62220
I42
VSimpleName: dbLink
p62221
tp62222
I1
s(g796
I42
g797
Vinsert
p62223
I21
VExpressionStatement
p62224
tp62225
I4
s(g256
I42
g257
Vinsert
p62226
I42
VSimpleName: all
p62227
tp62228
I1
s(g14244
I42
g14245
Vinsert
p62229
I42
VSimpleName: append
p62230
tp62231
I2
s(g5495
I42
g5496
Vinsert
p62232
I42
VSimpleName: ex
p62233
tp62234
I1
s(g2870
I42
g2871
Vinsert
p62235
I42
VSimpleName: visitor
p62236
tp62237
I6
s(g8391
I42
g8392
Vinsert
p62238
I32
VMethodInvocation
p62239
tp62240
I10
s(g3462
I42
g3463
Vinsert
p62241
I21
VExpressionStatement
p62242
tp62243
I1
s(g27620
I42
g27621
Vinsert
p62244
I45
VStringLiteral: ")"
p62245
tp62246
I2
s(g14274
I42
g14275
Vinsert
p62247
I8
VBlock
p62248
tp62249
I2
s(g11474
I42
g11475
Vinsert
p62250
I74
VParameterizedType: List<SQLStatement>
p62251
tp62252
I7
s(g17146
I42
g17147
Vinsert
p62253
I43
VSimpleType: Mode
p62254
tp62255
I2
s(g5161
I42
g5162
Vinsert
p62256
I45
VStringLiteral: "\u005cnWHERE name LIKE ?"
p62257
tp62258
I1
s(g3139
I42
g3140
Vinsert
p62259
I42
VSimpleName: eldest
p62260
tp62261
I1
s(g4178
I42
g4179
Vinsert
p62262
I42
VSimpleName: ConnectionHolder
p62263
tp62264
I1
s(g25409
I42
g25410
Vinsert
p62265
I45
VStringLiteral: "0x"
p62266
tp62267
I1
s(g331
I42
g332
Vinsert
p62268
I33
VNullLiteral
p62269
tp62270
I1
s(g5849
I42
g5850
Vinsert
p62271
I42
VSimpleName: millis
p62272
tp62273
I1
s(g1198
I42
g1199
Vinsert
p62274
I42
VSimpleName: dataType
p62275
tp62276
I3
s(g16975
I42
g16976
Vinsert
p62277
I42
VSimpleName: dataSources
p62278
tp62279
I2
s(g55295
I42
g55296
Vinsert
p62280
I42
VSimpleName: OracleStatementParser
p62281
tp62282
I2
s(g16375
I42
g16376
Vinsert
p62283
I21
VExpressionStatement
p62284
tp62285
I2
s(g2785
I42
g2786
Vinsert
p62286
I42
VSimpleName: Object
p62287
tp62288
I3
s(g20559
I42
g20560
Vinsert
p62289
I42
VSimpleName: concurrentMax
p62290
tp62291
I2
s(g6640
I42
g6641
Vinsert
p62292
I42
VSimpleName: setTestWhileIdle
p62293
tp62294
I1
s(g2115
I42
g2116
Vinsert
p62295
I8
VBlock
p62296
tp62297
I1
s(g18749
I42
g18750
Vinsert
p62298
I8
VBlock
p62299
tp62300
I1
s(g21746
I42
g21747
Vinsert
p62301
I21
VExpressionStatement
p62302
tp62303
I2
s(g11051
I42
g11052
Vinsert
p62304
I8
VBlock
p62305
tp62306
I1
s(g20975
I42
g20976
Vinsert
p62307
I42
VSimpleName: loadSqlList
p62308
tp62309
I1
s(g30842
I42
g30843
Vinsert
p62310
I43
VSimpleType: SQLPropertyExpr
p62311
tp62312
I6
s(g3618
I42
g3619
Vinsert
p62313
I25
VIfStatement
p62314
tp62315
I1
s(g15864
I42
g15865
Vinsert
p62316
I83
VModifier: public
p62317
tp62318
I1
s(g10660
I42
g10661
Vinsert
p62319
I45
VStringLiteral: "\u005ctINDEX name_idx(c_char, c_date)\u005cn"
p62320
tp62321
I1
s(g4243
I42
g4244
Vinsert
p62322
I8
VBlock
p62323
tp62324
I1
s(g12082
I42
g12083
Vinsert
p62325
I8
VBlock
p62326
tp62327
I1
s(g5995
I42
g5996
Vinsert
p62328
I40
VQualifiedName: Boolean.TRUE
p62329
tp62330
I5
s(g20975
I42
g20976
Vinsert
p62331
I42
VSimpleName: Object
p62332
tp62333
I1
s(g10087
I42
g10088
Vinsert
p62334
I42
VSimpleName: restart
p62335
tp62336
I1
s(g23501
I42
g23502
Vinsert
p62337
I42
VSimpleName: array
p62338
tp62339
I1
s(g5538
I42
g5539
Vinsert
p62340
I26
VImportDeclaration
p62341
tp62342
I2
s(g24333
I42
g24334
Vinsert
p62343
I45
VStringLiteral: "can'r find class in web container classLoader "
p62344
tp62345
I1
s(g11930
I42
g11931
Vinsert
p62346
I43
VSimpleType: SQLExprTableSource
p62347
tp62348
I1
s(g444
I42
g445
Vinsert
p62349
I44
VSingleVariableDeclaration
p62350
tp62351
I1
s(g2125
I42
g2126
Vinsert
p62352
I32
VMethodInvocation
p62353
tp62354
I3
s(g11940
I42
g11941
Vinsert
p62355
I44
VSingleVariableDeclaration
p62356
tp62357
I1
s(g48411
I42
g48412
Vinsert
p62358
I31
VMethodDeclaration
p62359
tp62360
I2
s(g1780
I42
g1781
Vinsert
p62361
I43
VSimpleType: Exception
p62362
tp62363
I1
s(Vinsert
p62364
I42
VSimpleName: parseStatementList
p62365
Vinsert
p62366
I42
VSimpleName: SQLStatementParser
p62367
tp62368
I4
s(g22774
I42
g22775
Vinsert
p62369
I31
VMethodDeclaration
p62370
tp62371
I1
s(g8038
I42
g8039
Vinsert
p62372
I42
VSimpleName: id
p62373
tp62374
I1
s(g40584
I42
g40585
Vinsert
p62375
I45
VStringLiteral: "B'"
p62376
tp62377
I1
s(g2009
I42
g2010
Vinsert
p62378
I42
VSimpleName: SQLCommentHint
p62379
tp62380
I1
s(g2982
I42
g2983
Vinsert
p62381
I40
VQualifiedName: x.chain
p62382
tp62383
I1
s(g18907
I42
g18908
Vinsert
p62384
I45
VStringLiteral: "        ADD COLUMN variation_value_1 DECIMAL(30, 20) NULL DEFAULT NULL,\u005cn"
p62385
tp62386
I1
s(g23501
I42
g23502
Vinsert
p62387
I21
VExpressionStatement
p62388
tp62389
I4
s(g4152
I42
g4153
Vinsert
p62390
I25
VIfStatement
p62391
tp62392
I10
s(g5854
I42
g5855
Vinsert
p62393
I40
VQualifiedName: Token.HINT
p62394
tp62395
I1
s(g20856
I42
g20857
Vinsert
p62396
I42
VSimpleName: parser
p62397
tp62398
I2
s(g18531
I42
g18532
Vinsert
p62399
I43
VSimpleType: SQLVariantRefExpr
p62400
tp62401
I2
s(g12768
I42
g12769
Vinsert
p62402
I45
VStringLiteral: "SELECT *\u005cn"
p62403
tp62404
I1
s(g15443
I42
g15444
Vinsert
p62405
I44
VSingleVariableDeclaration
p62406
tp62407
I1
s(g3360
I42
g3361
Vinsert
p62408
I42
VSimpleName: Assert
p62409
tp62410
I8
s(g836
I42
g837
Vinsert
p62411
I27
VInfixExpression: &&
p62412
tp62413
I1
s(g12573
I42
g12574
Vinsert
p62414
I42
VSimpleName: IbatisUtils
p62415
tp62416
I1
s(g1304
I42
g1305
Vinsert
p62417
I42
VSimpleName: String
p62418
tp62419
I1
s(Vinsert
p62420
I42
VSimpleName: asList
p62421
Vinsert
p62422
I40
VQualifiedName: java.util.List
p62423
tp62424
I1
s(g19875
I42
g19876
Vinsert
p62425
I42
VSimpleName: SQLExpr
p62426
tp62427
I3
s(g3103
I42
g3104
Vinsert
p62428
I59
VVariableDeclarationFragment
p62429
tp62430
I28
s(g15966
I42
g15967
Vinsert
p62431
I42
VSimpleName: execute
p62432
tp62433
I1
s(g13042
I42
g13043
Vinsert
p62434
I32
VMethodInvocation
p62435
tp62436
I3
s(g9534
I42
g9535
Vinsert
p62437
I8
VBlock
p62438
tp62439
I1
s(g24278
I42
g24279
Vinsert
p62440
I42
VSimpleName: PARAM_NAME_DENY
p62441
tp62442
I1
s(g256
I42
g257
Vinsert
p62443
I41
VReturnStatement
p62444
tp62445
I1
s(g38173
I42
g38174
Vinsert
p62446
I40
VQualifiedName: com.mysql.jdbc.Connection
p62447
tp62448
I2
s(g12133
I42
g12134
Vinsert
p62449
I42
VSimpleName: configFilter
p62450
tp62451
I1
s(g35402
I42
g35403
Vinsert
p62452
I40
VQualifiedName: x.denseRank
p62453
tp62454
I1
s(g532
I42
g533
Vinsert
p62455
I27
VInfixExpression: +
p62456
tp62457
I1
s(g16696
I42
g16697
Vinsert
p62458
I43
VSimpleType: MySqlStatementParser
p62459
tp62460
I32
s(g2770
I42
g2771
Vinsert
p62461
I42
VSimpleName: exprParser
p62462
tp62463
I1
s(g733
I42
g734
Vinsert
p62464
I42
VSimpleName: Thread
p62465
tp62466
I7
s(g9475
I42
g9476
Vinsert
p62467
I45
VStringLiteral: "\u005ctFLASH_CACHE DEFAULT\u005cn"
p62468
tp62469
I5
s(g2982
I42
g2983
Vinsert
p62470
I42
VSimpleName: x
p62471
tp62472
I1
s(g8360
I42
g8361
Vinsert
p62473
I42
VSimpleName: SQLName
p62474
tp62475
I1
s(g16831
I42
g16832
Vinsert
p62476
I32
VMethodInvocation
p62477
tp62478
I4
s(g11925
I42
g11926
Vinsert
p62479
I32
VMethodInvocation
p62480
tp62481
I2
s(g2029
I42
g2030
Vinsert
p62482
I14
VClassInstanceCreation
p62483
tp62484
I4
s(g12117
I42
g12118
Vinsert
p62485
I45
VStringLiteral: "COLLATE"
p62486
tp62487
I2
s(g1266
I42
g1267
Vinsert
p62488
I14
VClassInstanceCreation
p62489
tp62490
I4
s(g14155
I42
g14156
Vinsert
p62491
I43
VSimpleType: SQLException
p62492
tp62493
I1
s(g11732
I42
g11733
Vinsert
p62494
I34
VNumberLiteral: 1000
p62495
tp62496
I1
s(g15220
I42
g15221
Vinsert
p62497
I42
VSimpleName: getFilters
p62498
tp62499
I1
s(g4075
I42
g4076
Vinsert
p62500
I42
VSimpleName: annotation
p62501
tp62502
I1
s(g60914
I42
g60915
Vinsert
p62503
I22
VFieldAccess
p62504
tp62505
I2
s(g26526
I42
g26527
Vinsert
p62506
I60
VVariableDeclarationStatement
p62507
tp62508
I17
s(g29522
I42
g29523
Vinsert
p62509
I42
VSimpleName: resolve
p62510
tp62511
I1
s(g9103
I42
g9104
Vinsert
p62512
I42
VSimpleName: columnMetaData
p62513
tp62514
I2
s(g30364
I42
g30365
Vinsert
p62515
I45
VStringLiteral: "\u005cnfrom t "
p62516
tp62517
I1
s(g36179
I42
g36180
Vinsert
p62518
I39
VPrimitiveType: void
p62519
tp62520
I4
s(g2029
I42
g2030
Vinsert
p62521
I8
VBlock
p62522
tp62523
I14
s(g2578
I42
g2579
Vinsert
p62524
I43
VSimpleType: WrapperProxy
p62525
tp62526
I1
s(g2692
I42
g2693
Vinsert
p62527
I45
VStringLiteral: "nvarchar"
p62528
tp62529
I1
s(g14261
I42
g14262
Vinsert
p62530
I42
VSimpleName: JSONUtils
p62531
tp62532
I1
s(g2609
I42
g2610
Vinsert
p62533
I39
VPrimitiveType: void
p62534
tp62535
I1
s(g18581
I42
g18582
Vinsert
p62536
I83
VModifier: public
p62537
tp62538
I5
s(g5035
I42
g5036
Vinsert
p62539
I42
VSimpleName: assertSame
p62540
tp62541
I2
s(g748
I42
g749
Vinsert
p62542
I25
VIfStatement
p62543
tp62544
I1
s(g17926
I42
g17927
Vinsert
p62545
I43
VSimpleType: SQLSubqueryTableSource
p62546
tp62547
I1
s(g17125
I42
g17126
Vinsert
p62548
I52
VThisExpression
p62549
tp62550
I2
s(g2682
I42
g2683
Vinsert
p62551
I41
VReturnStatement
p62552
tp62553
I1
s(g18078
I42
g18079
Vinsert
p62554
I45
VStringLiteral: "\u005ctINSERT INTO hr_structure_temp\u005cn"
p62555
tp62556
I1
s(g30105
I42
g30106
Vinsert
p62557
I52
VThisExpression
p62558
tp62559
I1
s(g841
I42
g842
Vinsert
p62560
I42
VSimpleName: scanDigit
p62561
tp62562
I1
s(Vinsert
p62563
I42
VSimpleName: token
p62564
Vinsert
p62565
I74
VParameterizedType: List<OracleHint>
p62566
tp62567
I2
s(g11940
I42
g11941
Vinsert
p62568
I42
VSimpleName: contextInitialized
p62569
tp62570
I1
s(g7970
I42
g7971
Vinsert
p62571
I43
VSimpleType: SQLSetStatement
p62572
tp62573
I1
s(g4088
I42
g4089
Vinsert
p62574
I42
VSimpleName: resultSet
p62575
tp62576
I1
s(g23250
I42
g23251
Vinsert
p62577
I43
VSimpleType: SQLDropSequenceStatement
p62578
tp62579
I1
s(g7707
I42
g7708
Vinsert
p62580
I42
VSimpleName: stmt
p62581
tp62582
I2
s(g1284
I42
g1285
Vinsert
p62583
I45
VStringLiteral: "SELECT "
p62584
tp62585
I1
s(g18070
I42
g18071
Vinsert
p62586
I42
VSimpleName: Number
p62587
tp62588
I4
s(g26244
I42
g26245
Vinsert
p62589
I42
VSimpleName: getDataSourceStat
p62590
tp62591
I1
s(g33126
I42
g33127
Vinsert
p62592
I34
VNumberLiteral: 1000
p62593
tp62594
I5
s(g16696
I42
g16697
Vinsert
p62595
I42
VSimpleName: SQLStatement
p62596
tp62597
I16
s(g9446
I42
g9447
Vinsert
p62598
I42
VSimpleName: stringVal
p62599
tp62600
I2
s(g35026
I42
g35027
Vinsert
p62601
I43
VSimpleType: SQLStatementParser
p62602
tp62603
I1
s(g10116
I42
g10117
Vinsert
p62604
I43
VSimpleType: XAConnectionFactory
p62605
tp62606
I1
s(Vinsert
p62607
I42
VSimpleName: accept
p62608
Vinsert
p62609
I42
VSimpleName: MySqlExportParameterVisitor
p62610
tp62611
I1
s(g32771
I42
g32772
Vinsert
p62612
I42
VSimpleName: assertEquals
p62613
tp62614
I22
s(g6852
I42
g6853
Vinsert
p62615
I45
VStringLiteral: "IO"
p62616
tp62617
I1
s(g11845
I42
g11846
Vinsert
p62618
I45
VStringLiteral: "DISTINCT "
p62619
tp62620
I2
s(g40724
I42
g40725
Vinsert
p62621
I42
VSimpleName: getUser
p62622
tp62623
I1
s(g9415
I42
g9416
Vinsert
p62624
I36
VParenthesizedExpression
p62625
tp62626
I1
s(g796
I42
g797
Vinsert
p62627
I32
VMethodInvocation
p62628
tp62629
I5
s(g8583
I42
g8584
Vinsert
p62630
I39
VPrimitiveType: boolean
p62631
tp62632
I1
s(g3495
I42
g3496
Vinsert
p62633
I60
VVariableDeclarationStatement
p62634
tp62635
I4
s(g1840
I42
g1841
Vinsert
p62636
I42
VSimpleName: b
p62637
tp62638
I1
s(g23384
I42
g23385
Vinsert
p62639
I45
VStringLiteral: "druid.parameterized.shardingSupport"
p62640
tp62641
I1
s(g291
I42
g292
Vinsert
p62642
I42
VSimpleName: current
p62643
tp62644
I1
s(g11983
I42
g11984
Vinsert
p62645
I59
VVariableDeclarationFragment
p62646
tp62647
I22
s(g29128
I42
g29129
Vinsert
p62648
I40
VQualifiedName: JdbcConstants.SQL_SERVER
p62649
tp62650
I1
s(g3631
I42
g3632
Vinsert
p62651
I42
VSimpleName: ConcurrentMap
p62652
tp62653
I1
s(g10355
I42
g10356
Vinsert
p62654
I42
VSimpleName: test_select
p62655
tp62656
I4
s(g22294
I42
g22295
Vinsert
p62657
I42
VSimpleName: SQLJoinTableSource
p62658
tp62659
I2
s(g7482
I42
g7483
Vinsert
p62660
I42
VSimpleName: queryBlock
p62661
tp62662
I1
s(g5133
I42
g5134
Vinsert
p62663
I25
VIfStatement
p62664
tp62665
I1
s(g6257
I42
g6258
Vinsert
p62666
I32
VMethodInvocation
p62667
tp62668
I4
s(Vinsert
p62669
I42
VSimpleName: stringVal
p62670
Vinsert
p62671
I40
VQualifiedName: Token.LITERAL_ALIAS
p62672
tp62673
I2
s(g24649
I42
g24650
Vinsert
p62674
I8
VBlock
p62675
tp62676
I1
s(g5287
I42
g5288
Vinsert
p62677
I42
VSimpleName: visitor
p62678
tp62679
I518
s(g251
I42
g252
Vinsert
p62680
I32
VMethodInvocation
p62681
tp62682
I1
s(g748
I42
g749
Vinsert
p62683
I8
VBlock
p62684
tp62685
I2
s(g10031
I42
g10032
Vinsert
p62686
I36
VParenthesizedExpression
p62687
tp62688
I1
s(g13311
I42
g13312
Vinsert
p62689
I45
VStringLiteral: "\u005cn\u005ctquantity NUMBER"
p62690
tp62691
I2
s(g4538
I42
g4539
Vinsert
p62692
I43
VSimpleType: SchemaStatVisitor
p62693
tp62694
I32
s(g3073
I42
g3074
Vinsert
p62695
I7
VAssignment: =
p62696
tp62697
I6
s(g22658
I42
g22659
Vinsert
p62698
I45
VStringLiteral: "select *"
p62699
tp62700
I1
s(g7422
I42
g7423
Vinsert
p62701
I42
VSimpleName: stmt
p62702
tp62703
I1
s(g11629
I42
g11630
Vinsert
p62704
I43
VSimpleType: String
p62705
tp62706
I1
s(g9190
I42
g9191
Vinsert
p62707
I74
VParameterizedType: List<Object>
p62708
tp62709
I1
s(g1549
I42
g1550
Vinsert
p62710
I45
VStringLiteral: "SELECT *"
p62711
tp62712
I1
s(g8841
I42
g8842
Vinsert
p62713
I8
VBlock
p62714
tp62715
I1
s(g12235
I42
g12236
Vinsert
p62716
I43
VSimpleType: String
p62717
tp62718
I1
s(g4273
I42
g4274
Vinsert
p62719
I33
VNullLiteral
p62720
tp62721
I10
s(g1526
I42
g1527
Vinsert
p62722
I42
VSimpleName: PGIntervalExpr
p62723
tp62724
I4
s(g31505
I42
g31506
Vinsert
p62725
I42
VSimpleName: x
p62726
tp62727
I3
s(g26160
I42
g26161
Vinsert
p62728
I42
VSimpleName: add
p62729
tp62730
I1
s(g51643
I42
g51644
Vinsert
p62731
I40
VQualifiedName: Token.WHILE
p62732
tp62733
I1
s(g29718
I42
g29719
Vinsert
p62734
I45
VStringLiteral: "\u005cn\u005ct\u005c"CREATED_AT\u005c" TIMESTAMP(6),"
p62735
tp62736
I2
s(g2464
I42
g2465
Vinsert
p62737
I42
VSimpleName: config
p62738
tp62739
I1
s(g1120
I42
g1121
Vinsert
p62740
I25
VIfStatement
p62741
tp62742
I1
s(g41270
I42
g41271
Vinsert
p62743
I42
VSimpleName: informix
p62744
tp62745
I1
s(g8504
I42
g8505
Vinsert
p62746
I43
VSimpleType: SQLSelectListCache
p62747
tp62748
I1
s(g891
I42
g892
Vinsert
p62749
I44
VSingleVariableDeclaration
p62750
tp62751
I1
s(g50302
I42
g50303
Vinsert
p62752
I41
VReturnStatement
p62753
tp62754
I1
s(g3574
I42
g3575
Vinsert
p62755
I60
VVariableDeclarationStatement
p62756
tp62757
I15
s(g22423
I42
g22424
Vinsert
p62758
I42
VSimpleName: url_0
p62759
tp62760
I1
s(g5615
I42
g5616
Vinsert
p62761
I8
VBlock
p62762
tp62763
I1
s(g20806
I42
g20807
Vinsert
p62764
I42
VSimpleName: text
p62765
tp62766
I4
s(g4495
I42
g4496
Vinsert
p62767
I49
VSwitchCase
p62768
tp62769
I3
s(g2885
I42
g2886
Vinsert
p62770
I32
VMethodInvocation
p62771
tp62772
I4
s(g1953
I42
g1954
Vinsert
p62773
I8
VBlock
p62774
tp62775
I4
s(g1858
I42
g1859
Vinsert
p62776
I55
VTypeDeclaration
p62777
tp62778
I1
s(g806
I42
g807
Vinsert
p62779
I31
VMethodDeclaration
p62780
tp62781
I2
s(g27783
I42
g27784
Vinsert
p62782
I42
VSimpleName: println
p62783
tp62784
I11
s(g4770
I42
g4771
Vinsert
p62785
I59
VVariableDeclarationFragment
p62786
tp62787
I4
s(g25811
I42
g25812
Vinsert
p62788
I45
VStringLiteral: "GENERAL"
p62789
tp62790
I1
s(g7404
I42
g7405
Vinsert
p62791
I42
VSimpleName: param3Value
p62792
tp62793
I1
s(g12235
I42
g12236
Vinsert
p62794
I42
VSimpleName: String
p62795
tp62796
I1
s(g20215
I42
g20216
Vinsert
p62797
I40
VQualifiedName: Boolean.TRUE
p62798
tp62799
I1
s(g13612
I42
g13613
Vinsert
p62800
I43
VSimpleType: ArrayList
p62801
tp62802
I1
s(g2489
I42
g2490
Vinsert
p62803
I42
VSimpleName: DruidPlugin
p62804
tp62805
I2
s(g4760
I42
g4761
Vinsert
p62806
I42
VSimpleName: x
p62807
tp62808
I1
s(g6252
I42
g6253
Vinsert
p62809
I8
VBlock
p62810
tp62811
I1
s(g9195
I42
g9196
Vinsert
p62812
I60
VVariableDeclarationStatement
p62813
tp62814
I18
s(Vinsert
p62815
I42
VSimpleName: getUsing
p62816
Vinsert
p62817
I45
VStringLiteral: " AS "
p62818
tp62819
I1
s(g31385
I42
g31386
Vinsert
p62820
I42
VSimpleName: exception
p62821
tp62822
I2
s(g23154
I42
g23155
Vinsert
p62823
I43
VSimpleType: SQLExprTableSource
p62824
tp62825
I1
s(g5818
I42
g5819
Vinsert
p62826
I43
VSimpleType: Map
p62827
tp62828
I1
s(g577
I42
g578
Vinsert
p62829
I62
VInstanceofExpression
p62830
tp62831
I3
s(g2785
I42
g2786
Vinsert
p62832
I42
VSimpleName: obj
p62833
tp62834
I4
s(g4370
I42
g4371
Vinsert
p62835
I43
VSimpleType: SchemaRepository
p62836
tp62837
I1
s(g43038
I42
g43039
Vinsert
p62838
I43
VSimpleType: Column
p62839
tp62840
I1
s(g28278
I42
g28279
Vinsert
p62841
I21
VExpressionStatement
p62842
tp62843
I16
s(g16112
I42
g16113
Vinsert
p62844
I42
VSimpleName: currentThread
p62845
tp62846
I1
s(g2742
I42
g2743
Vinsert
p62847
I59
VVariableDeclarationFragment
p62848
tp62849
I1
s(g21155
I42
g21156
Vinsert
p62850
I21
VExpressionStatement
p62851
tp62852
I1
s(g8103
I42
g8104
Vinsert
p62853
I42
VSimpleName: size
p62854
tp62855
I1
s(g27800
I42
g27801
Vinsert
p62856
I34
VNumberLiteral: 0
p62857
tp62858
I7
s(g251
I42
g252
Vinsert
p62859
I43
VSimpleType: Object
p62860
tp62861
I1
s(g36928
I42
g36929
Vinsert
p62862
I42
VSimpleName: JdbcSqlStat
p62863
tp62864
I1
s(g6036
I42
g6037
Vinsert
p62865
I52
VThisExpression
p62866
tp62867
I1
s(g592
I42
g593
Vinsert
p62868
I42
VSimpleName: isUnique
p62869
tp62870
I1
s(Vinsert
p62871
I42
VSimpleName: close
p62872
Vinsert
p62873
I42
VSimpleName: createStatement
p62874
tp62875
I1
s(g7052
I42
g7053
Vinsert
p62876
I22
VFieldAccess
p62877
tp62878
I1
s(g5792
I42
g5793
Vinsert
p62879
I42
VSimpleName: x
p62880
tp62881
I4
s(g11492
I42
g11493
Vinsert
p62882
I21
VExpressionStatement
p62883
tp62884
I3
s(g8264
I42
g8265
Vinsert
p62885
I42
VSimpleName: x
p62886
tp62887
I25
s(g18031
I42
g18032
Vinsert
p62888
I42
VSimpleName: setSample
p62889
tp62890
I1
s(g23414
I42
g23415
Vinsert
p62891
I25
VIfStatement
p62892
tp62893
I5
s(Vinsert
p62894
I42
VSimpleName: setParent
p62895
Vinsert
p62896
I42
VSimpleName: setBlock
p62897
tp62898
I1
s(g28221
I42
g28222
Vinsert
p62899
I41
VReturnStatement
p62900
tp62901
I1
s(Vinsert
p62902
I42
VSimpleName: primary
p62903
Vinsert
p62904
I42
VSimpleName: acceptIdentifier
p62905
tp62906
I1
s(g5089
I42
g5090
Vinsert
p62907
I45
VStringLiteral: "  TABLESPACE \u005c"BISYNC1M\u005c" NOCOM"
p62908
tp62909
I1
s(g5704
I42
g5705
Vinsert
p62910
I42
VSimpleName: SQLSelect
p62911
tp62912
I2
s(g8475
I42
g8476
Vinsert
p62913
I42
VSimpleName: name2
p62914
tp62915
I1
s(g9195
I42
g9196
Vinsert
p62916
I43
VSimpleType: SQLStatementParser
p62917
tp62918
I13
s(g14290
I42
g14291
Vinsert
p62919
I83
VModifier: static
p62920
tp62921
I1
s(g11711
I42
g11712
Vinsert
p62922
I27
VInfixExpression: !=
p62923
tp62924
I1
s(g10966
I42
g10967
Vinsert
p62925
I43
VSimpleType: DataSource
p62926
tp62927
I1
s(g5343
I42
g5344
Vinsert
p62928
I43
VSimpleType: ColumnGroup
p62929
tp62930
I1
s(g6434
I42
g6435
Vinsert
p62931
I42
VSimpleName: MySqlSelectQueryBlock
p62932
tp62933
I2
s(g3598
I42
g3599
Vinsert
p62934
I42
VSimpleName: setSnapshotDate
p62935
tp62936
I1
s(g947
I42
g948
Vinsert
p62937
I42
VSimpleName: where
p62938
tp62939
I3
s(g31691
I42
g31692
Vinsert
p62940
I42
VSimpleName: getQuery
p62941
tp62942
I16
s(g12117
I42
g12118
Vinsert
p62943
I43
VSimpleType: MySqlCharExpr
p62944
tp62945
I2
s(g12864
I42
g12865
Vinsert
p62946
I27
VInfixExpression: >
p62947
tp62948
I1
s(Vinsert
p62949
I42
VSimpleName: toSQLString
p62950
Vinsert
p62951
I45
VStringLiteral: "\u005ctINITIAL 2097152\u005cn"
p62952
tp62953
I1
s(g3332
I42
g3333
Vinsert
p62954
I42
VSimpleName: entry
p62955
tp62956
I2
s(Vinsert
p62957
I42
VSimpleName: findColumn
p62958
Vinsert
p62959
I42
VSimpleName: left
p62960
tp62961
I2
s(g2543
I42
g2544
Vinsert
p62962
I27
VInfixExpression: ==
p62963
tp62964
I6
s(g36928
I42
g36929
Vinsert
p62965
I42
VSimpleName: sqlStat
p62966
tp62967
I2
s(g35771
I42
g35772
Vinsert
p62968
I42
VSimpleName: assertEquals
p62969
tp62970
I2
s(g13906
I42
g13907
Vinsert
p62971
I42
VSimpleName: connection
p62972
tp62973
I1
s(g4505
I42
g4506
Vinsert
p62974
I42
VSimpleName: getObjectType
p62975
tp62976
I1
s(g18648
I42
g18649
Vinsert
p62977
I42
VSimpleName: selectLog4JLogging
p62978
tp62979
I1
s(g22826
I42
g22827
Vinsert
p62980
I45
VStringLiteral: " character set "
p62981
tp62982
I1
s(g7807
I42
g7808
Vinsert
p62983
I83
VModifier: public
p62984
tp62985
I14
s(g5035
I42
g5036
Vinsert
p62986
I42
VSimpleName: parameterize
p62987
tp62988
I1
s(g2029
I42
g2030
Vinsert
p62989
I42
VSimpleName: token
p62990
tp62991
I1
s(g21908
I42
g21909
Vinsert
p62992
I45
VStringLiteral: "\u005cn\u005ctactive int,"
p62993
tp62994
I1
s(g37280
I42
g37281
Vinsert
p62995
I83
VModifier: public
p62996
tp62997
I1
s(g622
I42
g623
Vinsert
p62998
I42
VSimpleName: queryBlock
p62999
tp63000
I2
s(g4530
I42
g4531
Vinsert
p63001
I43
VSimpleType: SQLObject
p63002
tp63003
I7
s(g4538
I42
g4539
Vinsert
p63004
I42
VSimpleName: statementList
p63005
tp63006
I30
s(g18801
I42
g18802
Vinsert
p63007
I45
VStringLiteral: "x.sql.Connection"
p63008
tp63009
I1
s(g9137
I42
g9138
Vinsert
p63010
I42
VSimpleName: ast
p63011
tp63012
I1
s(g26385
I42
g26386
Vinsert
p63013
I42
VSimpleName: Assert
p63014
tp63015
I1
s(g18289
I42
g18290
Vinsert
p63016
I43
VSimpleType: Throwable
p63017
tp63018
I3
s(g10412
I42
g10413
Vinsert
p63019
I32
VMethodInvocation
p63020
tp63021
I4
s(g7487
I42
g7488
Vinsert
p63022
I26
VImportDeclaration
p63023
tp63024
I1
s(g15048
I42
g15049
Vinsert
p63025
I60
VVariableDeclarationStatement
p63026
tp63027
I2
s(g2120
I42
g2121
Vinsert
p63028
I40
VQualifiedName: DB2SelectQueryBlock.Isolation.RR
p63029
tp63030
I1
s(g896
I42
g897
Vinsert
p63031
I42
VSimpleName: getPassword
p63032
tp63033
I1
s(g18415
I42
g18416
Vinsert
p63034
I44
VSingleVariableDeclaration
p63035
tp63036
I3
s(g4630
I42
g4631
Vinsert
p63037
I59
VVariableDeclarationFragment
p63038
tp63039
I1
s(g26013
I42
g26014
Vinsert
p63040
I42
VSimpleName: ObjectName
p63041
tp63042
I1
s(g22020
I42
g22021
Vinsert
p63043
I14
VClassInstanceCreation
p63044
tp63045
I8
s(g17106
I42
g17107
Vinsert
p63046
I25
VIfStatement
p63047
tp63048
I1
s(g14790
I42
g14791
Vinsert
p63049
I45
VStringLiteral: "WHEN "
p63050
tp63051
I1
s(g19708
I42
g19709
Vinsert
p63052
I42
VSimpleName: SQLException
p63053
tp63054
I1
s(g22020
I42
g22021
Vinsert
p63055
I42
VSimpleName: MSSQLValidConnectionChecker
p63056
tp63057
I1
s(g5903
I42
g5904
Vinsert
p63058
I45
VStringLiteral: "ALL"
p63059
tp63060
I1
s(g11542
I42
g11543
Vinsert
p63061
I42
VSimpleName: getHintsSize
p63062
tp63063
I1
s(g19139
I42
g19140
Vinsert
p63064
I42
VSimpleName: getExecuteErrorCount
p63065
tp63066
I1
s(g29212
I42
g29213
Vinsert
p63067
I45
VStringLiteral: "\u005cn)"
p63068
tp63069
I4
s(g2273
I42
g2274
Vinsert
p63070
I42
VSimpleName: sorter
p63071
tp63072
I1
s(g23640
I42
g23641
Vinsert
p63073
I8
VBlock
p63074
tp63075
I3
s(g3233
I42
g3234
Vinsert
p63076
I59
VVariableDeclarationFragment
p63077
tp63078
I17
s(g11360
I42
g11361
Vinsert
p63079
I42
VSimpleName: stmt
p63080
tp63081
I1
s(g957
I42
g958
Vinsert
p63082
I16
VConditionalExpression
p63083
tp63084
I1
s(g24686
I42
g24687
Vinsert
p63085
I43
VSimpleType: RelaxedDataBinder
p63086
tp63087
I1
s(g3939
I42
g3940
Vinsert
p63088
I8
VBlock
p63089
tp63090
I40
s(g28204
I42
g28205
Vinsert
p63091
I40
VQualifiedName: FnvHash.Constants.VALIDPROC
p63092
tp63093
I1
s(g11803
I42
g11804
Vinsert
p63094
I42
VSimpleName: select
p63095
tp63096
I3
s(g6139
I42
g6140
Vinsert
p63097
I43
VSimpleType: String
p63098
tp63099
I24
s(g1918
I42
g1919
Vinsert
p63100
I42
VSimpleName: assignment
p63101
tp63102
I1
s(g9683
I42
g9684
Vinsert
p63103
I42
VSimpleName: MySqlSelectQueryBlock
p63104
tp63105
I4
s(g24051
I42
g24052
Vinsert
p63106
I42
VSimpleName: add
p63107
tp63108
I1
s(g12716
I42
g12717
Vinsert
p63109
I21
VExpressionStatement
p63110
tp63111
I2
s(g1554
I42
g1555
Vinsert
p63112
I52
VThisExpression
p63113
tp63114
I1
s(g11785
I42
g11786
Vinsert
p63115
I42
VSimpleName: ProfileEntryKey
p63116
tp63117
I1
s(g982
I42
g983
Vinsert
p63118
I42
VSimpleName: c4
p63119
tp63120
I1
s(g5709
I42
g5710
Vinsert
p63121
I42
VSimpleName: bogusPattern
p63122
tp63123
I1
s(g6760
I42
g6761
Vinsert
p63124
I27
VInfixExpression: !=
p63125
tp63126
I1
s(g7310
I42
g7311
Vinsert
p63127
I83
VModifier: final
p63128
tp63129
I3
s(g7417
I42
g7418
Vinsert
p63130
I42
VSimpleName: mergeEqual
p63131
tp63132
I1
s(g15029
I42
g15030
Vinsert
p63133
I59
VVariableDeclarationFragment
p63134
tp63135
I1
s(g11067
I42
g11068
Vinsert
p63136
I42
VSimpleName: setParent
p63137
tp63138
I1
s(Vinsert
p63139
I42
VSimpleName: values
p63140
Vinsert
p63141
I42
VSimpleName: oldsqlStatInfo
p63142
tp63143
I2
s(g6663
I42
g6664
Vinsert
p63144
I42
VSimpleName: SQLServerObjectReferenceExpr
p63145
tp63146
I1
s(g50302
I42
g50303
Vinsert
p63147
I43
VSimpleType: OdpsSelectParser
p63148
tp63149
I1
s(g34685
I42
g34686
Vinsert
p63150
I43
VSimpleType: GroupingSetExpr
p63151
tp63152
I2
s(g5903
I42
g5904
Vinsert
p63153
I21
VExpressionStatement
p63154
tp63155
I2
s(g18680
I42
g18681
Vinsert
p63156
I59
VVariableDeclarationFragment
p63157
tp63158
I2
s(g439
I42
g440
Vinsert
p63159
I42
VSimpleName: accept
p63160
tp63161
I1
s(g3584
I42
g3585
Vinsert
p63162
I42
VSimpleName: assertEquals
p63163
tp63164
I3
s(g23859
I42
g23860
Vinsert
p63165
I62
VInstanceofExpression
p63166
tp63167
I8
s(g13326
I42
g13327
Vinsert
p63168
I8
VBlock
p63169
tp63170
I5
s(g3709
I42
g3710
Vinsert
p63171
I42
VSimpleName: DruidDataSource
p63172
tp63173
I1
s(g121
I42
g122
Vinsert
p63174
I14
VClassInstanceCreation
p63175
tp63176
I1
s(g23891
I42
g23892
Vinsert
p63177
I42
VSimpleName: Exception
p63178
tp63179
I2
s(Vinsert
p63180
I42
VSimpleName: assertEquals
p63181
Vinsert
p63182
I45
VStringLiteral: "CREATE TABLE new_tbl LIKE orig_tbl"
p63183
tp63184
I1
s(g3297
I42
g3298
Vinsert
p63185
I42
VSimpleName: delta
p63186
tp63187
I7
s(g8564
I42
g8565
Vinsert
p63188
I42
VSimpleName: propertyExpr
p63189
tp63190
I4
s(g6712
I42
g6713
Vinsert
p63191
I59
VVariableDeclarationFragment
p63192
tp63193
I10
s(Vinsert
p63194
I42
VSimpleName: assertEquals
p63195
Vinsert
p63196
I45
VStringLiteral: "select case when f1 = 'aaa' then 1 when f1 = 'bbb' then 2 else 3 end from dual"
p63197
tp63198
I1
s(g16200
I42
g16201
Vinsert
p63199
I40
VQualifiedName: OracleMultiInsertStatement.InsertIntoClause
p63200
tp63201
I2
s(g16888
I42
g16889
Vinsert
p63202
I42
VSimpleName: endPos
p63203
tp63204
I1
s(g47814
I42
g47815
Vinsert
p63205
I45
VStringLiteral: "LEAVE"
p63206
tp63207
I1
s(g10687
I42
g10688
Vinsert
p63208
I42
VSimpleName: error
p63209
tp63210
I1
s(g3500
I42
g3501
Vinsert
p63211
I42
VSimpleName: sql
p63212
tp63213
I1
s(g3659
I42
g3660
Vinsert
p63214
I42
VSimpleName: lexer
p63215
tp63216
I2
s(g19344
I42
g19345
Vinsert
p63217
I43
VSimpleType: NotNullConstraint
p63218
tp63219
I1
s(g16728
I42
g16729
Vinsert
p63220
I40
VQualifiedName: SymbolTable.global
p63221
tp63222
I2
s(g33917
I42
g33918
Vinsert
p63223
I45
VStringLiteral: "\u005ctVIEW my_view2 (\u005cn"
p63224
tp63225
I1
s(g30201
I42
g30202
Vinsert
p63226
I42
VSimpleName: getPattern
p63227
tp63228
I2
s(g186
I42
g187
Vinsert
p63229
I42
VSimpleName: getContext
p63230
tp63231
I1
s(g18659
I42
g18660
Vinsert
p63232
I21
VExpressionStatement
p63233
tp63234
I4
s(g5297
I42
g5298
Vinsert
p63235
I27
VInfixExpression: &&
p63236
tp63237
I1
s(g622
I42
g623
Vinsert
p63238
I42
VSimpleName: setIsolation
p63239
tp63240
I1
s(g22913
I42
g22914
Vinsert
p63241
I42
VSimpleName: validConnectionCheckerClass
p63242
tp63243
I1
s(Vinsert
p63244
I42
VSimpleName: assertEquals
p63245
Vinsert
p63246
I42
VSimpleName: EvalMethodBitLengthTest
p63247
tp63248
I1
s(Vinsert
p63249
I42
VSimpleName: get
p63250
Vinsert
p63251
I42
VSimpleName: connectProperties
p63252
tp63253
I3
s(g1958
I42
g1959
Vinsert
p63254
I45
VStringLiteral: "\u005ct\u005ctTABLESPACE \u005c"RDP_DATA\u005c"\u005cn"
p63255
tp63256
I1
s(g17526
I42
g17527
Vinsert
p63257
I27
VInfixExpression: !=
p63258
tp63259
I3
s(g31505
I42
g31506
Vinsert
p63260
I41
VReturnStatement
p63261
tp63262
I1
s(g3083
I42
g3084
Vinsert
p63263
I42
VSimpleName: test_0
p63264
tp63265
I3
s(g25573
I42
g25574
Vinsert
p63266
I42
VSimpleName: getClass
p63267
tp63268
I1
s(g4630
I42
g4631
Vinsert
p63269
I43
VSimpleType: WallConfig
p63270
tp63271
I1
s(g6388
I42
g6389
Vinsert
p63272
I8
VBlock
p63273
tp63274
I6
s(g11745
I42
g11746
Vinsert
p63275
I43
VSimpleType: Blob
p63276
tp63277
I1
s(g10182
I42
g10183
Vinsert
p63278
I42
VSimpleName: visitor
p63279
tp63280
I2
s(g15153
I42
g15154
Vinsert
p63281
I43
VSimpleType: Exception
p63282
tp63283
I1
s(g26143
I42
g26144
Vinsert
p63284
I8
VBlock
p63285
tp63286
I6
s(Vinsert
p63287
I42
VSimpleName: getProxyFilters
p63288
Vinsert
p63289
I42
VSimpleName: setFilters
p63290
tp63291
I2
s(g116
I42
g117
Vinsert
p63292
I42
VSimpleName: test
p63293
tp63294
I1
s(g18531
I42
g18532
Vinsert
p63295
I42
VSimpleName: addSelectItem
p63296
tp63297
I2
s(g21084
I42
g21085
Vinsert
p63298
I42
VSimpleName: isSameRM
p63299
tp63300
I1
s(g3164
I42
g3165
Vinsert
p63301
I45
VStringLiteral: "<tr>"
p63302
tp63303
I2
s(g1415
I42
g1416
Vinsert
p63304
I33
VNullLiteral
p63305
tp63306
I1
s(g517
I42
g518
Vinsert
p63307
I44
VSingleVariableDeclaration
p63308
tp63309
I2
s(g21509
I42
g21510
Vinsert
p63310
I45
VStringLiteral: "ONLY "
p63311
tp63312
I1
s(g6089
I42
g6090
Vinsert
p63313
I11
VCastExpression
p63314
tp63315
I1
s(g8849
I42
g8850
Vinsert
p63316
I43
VSimpleType: String
p63317
tp63318
I2
s(g3159
I42
g3160
Vinsert
p63319
I42
VSimpleName: resultSet
p63320
tp63321
I1
s(g5040
I42
g5041
Vinsert
p63322
I60
VVariableDeclarationStatement
p63323
tp63324
I1
s(g3880
I42
g3881
Vinsert
p63325
I25
VIfStatement
p63326
tp63327
I1
s(g4669
I42
g4670
Vinsert
p63328
I25
VIfStatement
p63329
tp63330
I2
s(g14540
I42
g14541
Vinsert
p63331
I43
VSimpleType: FilterChainImpl
p63332
tp63333
I1
s(g36843
I42
g36844
Vinsert
p63334
I42
VSimpleName: getTables
p63335
tp63336
I37
s(g2578
I42
g2579
Vinsert
p63337
I42
VSimpleName: wrapper
p63338
tp63339
I3
s(g10355
I42
g10356
Vinsert
p63340
I83
VModifier: public
p63341
tp63342
I27
s(g3574
I42
g3575
Vinsert
p63343
I42
VSimpleName: String
p63344
tp63345
I15
s(g39280
I42
g39281
Vinsert
p63346
I33
VNullLiteral
p63347
tp63348
I2
s(g23793
I42
g23794
Vinsert
p63349
I45
VStringLiteral: "\u005cn\u005ctSUBPARTITION TEMPLATE ("
p63350
tp63351
I2
s(g6167
I42
g6168
Vinsert
p63352
I8
VBlock
p63353
tp63354
I2
s(g4248
I42
g4249
Vinsert
p63355
I40
VQualifiedName: Token.PARTITION
p63356
tp63357
I1
s(g26624
I42
g26625
Vinsert
p63358
I42
VSimpleName: x
p63359
tp63360
I1
s(g6134
I42
g6135
Vinsert
p63361
I42
VSimpleName: violation
p63362
tp63363
I1
s(g60914
I42
g60915
Vinsert
p63364
I21
VExpressionStatement
p63365
tp63366
I6
s(g20822
I42
g20823
Vinsert
p63367
I42
VSimpleName: uk
p63368
tp63369
I2
s(g30896
I42
g30897
Vinsert
p63370
I42
VSimpleName: SQLExprTableSource
p63371
tp63372
I1
s(g30429
I42
g30430
Vinsert
p63373
I40
VQualifiedName: Token.REPLACE
p63374
tp63375
I1
s(g46727
I42
g46728
Vinsert
p63376
I42
VSimpleName: statement
p63377
tp63378
I4
s(g21489
I42
g21490
Vinsert
p63379
I60
VVariableDeclarationStatement
p63380
tp63381
I1
s(g7751
I42
g7752
Vinsert
p63382
I42
VSimpleName: DruidDataSourceFactory
p63383
tp63384
I2
s(g21370
I42
g21371
Vinsert
p63385
I70
VEnhancedForStatement
p63386
tp63387
I2
s(g35545
I42
g35546
Vinsert
p63388
I45
VStringLiteral: "com.alibaba.druid.support.logging.Log4jImpl"
p63389
tp63390
I1
s(g4750
I42
g4751
Vinsert
p63391
I42
VSimpleName: TableSpaceOption
p63392
tp63393
I2
s(g937
I42
g938
Vinsert
p63394
I59
VVariableDeclarationFragment
p63395
tp63396
I2
s(g1675
I42
g1676
Vinsert
p63397
I24
VForStatement
p63398
tp63399
I1
s(g10480
I42
g10481
Vinsert
p63400
I42
VSimpleName: expr
p63401
tp63402
I1
s(g22020
I42
g22021
Vinsert
p63403
I43
VSimpleType: MockConnection
p63404
tp63405
I2
s(Vinsert
p63406
I42
VSimpleName: assertEquals
p63407
Vinsert
p63408
I34
VNumberLiteral: 2
p63409
tp63410
I11
s(g9939
I42
g9940
Vinsert
p63411
I24
VForStatement
p63412
tp63413
I1
s(g3821
I42
g3822
Vinsert
p63414
I43
VSimpleType: TableStat.Name
p63415
tp63416
I1
s(g13881
I42
g13882
Vinsert
p63417
I42
VSimpleName: print
p63418
tp63419
I1
s(g31696
I42
g31697
Vinsert
p63420
I8
VBlock
p63421
tp63422
I1
s(g25157
I42
g25158
Vinsert
p63423
I32
VMethodInvocation
p63424
tp63425
I2
s(g46013
I42
g46014
Vinsert
p63426
I58
VVariableDeclarationExpression
p63427
tp63428
I2
s(g10882
I42
g10883
Vinsert
p63429
I42
VSimpleName: iface
p63430
tp63431
I11
s(g22152
I42
g22153
Vinsert
p63432
I39
VPrimitiveType: long
p63433
tp63434
I2
s(g9251
I42
g9252
Vinsert
p63435
I83
VModifier: public
p63436
tp63437
I1
s(g15514
I42
g15515
Vinsert
p63438
I42
VSimpleName: VisitorFeature
p63439
tp63440
I2
s(g10498
I42
g10499
Vinsert
p63441
I33
VNullLiteral
p63442
tp63443
I2
s(g10449
I42
g10450
Vinsert
p63444
I43
VSimpleType: SQLIntegerExpr
p63445
tp63446
I5
s(g16710
I42
g16711
Vinsert
p63447
I49
VSwitchCase
p63448
tp63449
I6
s(g2639
I42
g2640
Vinsert
p63450
I21
VExpressionStatement
p63451
tp63452
I2
s(Vinsert
p63453
I42
VSimpleName: setValue
p63454
Vinsert
p63455
I42
VSimpleName: PGCidrExpr
p63456
tp63457
I4
s(g6503
I42
g6504
Vinsert
p63458
I32
VMethodInvocation
p63459
tp63460
I6
s(g2145
I42
g2146
Vinsert
p63461
I42
VSimpleName: Object
p63462
tp63463
I1
s(g206
I42
g207
Vinsert
p63464
I21
VExpressionStatement
p63465
tp63466
I1
s(g4579
I42
g4580
Vinsert
p63467
I42
VSimpleName: token
p63468
tp63469
I2
s(g3467
I42
g3468
Vinsert
p63470
I43
VSimpleType: SQLAssignItem
p63471
tp63472
I2
s(g512
I42
g513
Vinsert
p63473
I45
VStringLiteral: "LastErrorTime"
p63474
tp63475
I1
s(g8914
I42
g8915
Vinsert
p63476
I45
VStringLiteral: "jdbc:mock:x1"
p63477
tp63478
I1
s(g4178
I42
g4179
Vinsert
p63479
I2
VArrayAccess
p63480
tp63481
I1
s(g13720
I42
g13721
Vinsert
p63482
I42
VSimpleName: containsColumn
p63483
tp63484
I7
s(g45686
I42
g45687
Vinsert
p63485
I52
VThisExpression
p63486
tp63487
I3
s(g19656
I42
g19657
Vinsert
p63488
I42
VSimpleName: SQLSelectQuery
p63489
tp63490
I2
s(g22603
I42
g22604
Vinsert
p63491
I33
VNullLiteral
p63492
tp63493
I1
s(g7469
I42
g7470
Vinsert
p63494
I42
VSimpleName: dataSourceInfo
p63495
tp63496
I1
s(g6328
I42
g6329
Vinsert
p63497
I14
VClassInstanceCreation
p63498
tp63499
I1
s(g25422
I42
g25423
Vinsert
p63500
I40
VQualifiedName: Token.FOR
p63501
tp63502
I1
s(g24102
I42
g24103
Vinsert
p63503
I33
VNullLiteral
p63504
tp63505
I3
s(g2520
I42
g2521
Vinsert
p63506
I42
VSimpleName: work
p63507
tp63508
I7
s(Vinsert
p63509
I42
VSimpleName: accept
p63510
Vinsert
p63511
I42
VSimpleName: decrementIndent
p63512
tp63513
I1
s(g2413
I42
g2414
Vinsert
p63514
I42
VSimpleName: MySqlShowEventsStatement
p63515
tp63516
I1
s(g13933
I42
g13934
Vinsert
p63517
I36
VParenthesizedExpression
p63518
tp63519
I1
s(g1339
I42
g1340
Vinsert
p63520
I44
VSingleVariableDeclaration
p63521
tp63522
I23
s(g7736
I42
g7737
Vinsert
p63523
I42
VSimpleName: setRowPrefetch
p63524
tp63525
I1
s(g2372
I42
g2373
Vinsert
p63526
I42
VSimpleName: properties
p63527
tp63528
I1
s(g2609
I42
g2610
Vinsert
p63529
I43
VSimpleType: Exception
p63530
tp63531
I1
s(g321
I42
g322
Vinsert
p63532
I59
VVariableDeclarationFragment
p63533
tp63534
I6
s(g9608
I42
g9609
Vinsert
p63535
I42
VSimpleName: X509EncodedKeySpec
p63536
tp63537
I2
s(g20822
I42
g20823
Vinsert
p63538
I42
VSimpleName: setName
p63539
tp63540
I2
s(Vinsert
p63541
I42
VSimpleName: size
p63542
Vinsert
p63543
I42
VSimpleName: sessionStatMap
p63544
tp63545
I1
s(g6630
I42
g6631
Vinsert
p63546
I42
VSimpleName: SQLIdentifierExpr
p63547
tp63548
I1
s(g6607
I42
g6608
Vinsert
p63549
I42
VSimpleName: WallConfig
p63550
tp63551
I3
s(g311
I42
g312
Vinsert
p63552
I42
VSimpleName: conn
p63553
tp63554
I1
s(g4152
I42
g4153
Vinsert
p63555
I42
VSimpleName: name
p63556
tp63557
I8
s(g8057
I42
g8058
Vinsert
p63558
I42
VSimpleName: SQLDeleteStatement
p63559
tp63560
I1
s(g28640
I42
g28641
Vinsert
p63561
I42
VSimpleName: Assert
p63562
tp63563
I1
s(g13022
I42
g13023
Vinsert
p63564
I27
VInfixExpression: >
p63565
tp63566
I1
s(g7002
I42
g7003
Vinsert
p63567
I43
VSimpleType: String
p63568
tp63569
I2
s(g9773
I42
g9774
Vinsert
p63570
I60
VVariableDeclarationStatement
p63571
tp63572
I2
s(g9959
I42
g9960
Vinsert
p63573
I41
VReturnStatement
p63574
tp63575
I2
s(g19339
I42
g19340
Vinsert
p63576
I45
VStringLiteral: "AliOracle"
p63577
tp63578
I1
s(g23288
I42
g23289
Vinsert
p63579
I42
VSimpleName: scheduler
p63580
tp63581
I1
s(Vinsert
p63582
I42
VSimpleName: assertFalse
p63583
Vinsert
p63584
I42
VSimpleName: MySqlWallTest27
p63585
tp63586
I1
s(Vinsert
p63587
I42
VSimpleName: parseStatementList
p63588
Vinsert
p63589
I42
VSimpleName: SQLSelectStatement
p63590
tp63591
I48
s(g23725
I42
g23726
Vinsert
p63592
I42
VSimpleName: substring
p63593
tp63594
I1
s(g34396
I42
g34397
Vinsert
p63595
I42
VSimpleName: exprParser
p63596
tp63597
I17
s(g19618
I42
g19619
Vinsert
p63598
I42
VSimpleName: commit
p63599
tp63600
I1
s(g13517
I42
g13518
Vinsert
p63601
I42
VSimpleName: visitor
p63602
tp63603
I25
s(Vinsert
p63604
I42
VSimpleName: assertEquals
p63605
Vinsert
p63606
I42
VSimpleName: result_lcase
p63607
tp63608
I1
s(g404
I42
g405
Vinsert
p63609
I45
VStringLiteral: "REFRESH COMPLETE\u005cn"
p63610
tp63611
I1
s(g10082
I42
g10083
Vinsert
p63612
I32
VMethodInvocation
p63613
tp63614
I2
s(g8721
I42
g8722
Vinsert
p63615
I42
VSimpleName: add
p63616
tp63617
I1
s(g992
I42
g993
Vinsert
p63618
I42
VSimpleName: print
p63619
tp63620
I1
s(g5826
I42
g5827
Vinsert
p63621
I43
VSimpleType: SQLTableSource
p63622
tp63623
I2
s(g5724
I42
g5725
Vinsert
p63624
I21
VExpressionStatement
p63625
tp63626
I1
s(g16630
I42
g16631
Vinsert
p63627
I14
VClassInstanceCreation
p63628
tp63629
I2
s(g5661
I42
g5662
Vinsert
p63630
I21
VExpressionStatement
p63631
tp63632
I2
s(g10100
I42
g10101
Vinsert
p63633
I14
VClassInstanceCreation
p63634
tp63635
I1
s(g17146
I42
g17147
Vinsert
p63636
I44
VSingleVariableDeclaration
p63637
tp63638
I1
s(g2125
I42
g2126
Vinsert
p63639
I83
VModifier: public
p63640
tp63641
I1
s(g35793
I42
g35794
Vinsert
p63642
I45
VStringLiteral: "from sale_detail\u005cn"
p63643
tp63644
I1
s(g21084
I42
g21085
Vinsert
p63645
I42
VSimpleName: XAException
p63646
tp63647
I1
s(g8373
I42
g8374
Vinsert
p63648
I83
VModifier: public
p63649
tp63650
I2
s(g28072
I42
g28073
Vinsert
p63651
I42
VSimpleName: p
p63652
tp63653
I1
s(g7039
I42
g7040
Vinsert
p63654
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION ch_s,"
p63655
tp63656
I2
s(g25293
I42
g25294
Vinsert
p63657
I45
VStringLiteral: "abcdefg"
p63658
tp63659
I1
s(g4035
I42
g4036
Vinsert
p63660
I21
VExpressionStatement
p63661
tp63662
I1
s(g44811
I42
g44812
Vinsert
p63663
I43
VSimpleType: DruidDataSource
p63664
tp63665
I1
s(g5053
I42
g5054
Vinsert
p63666
I7
VAssignment: =
p63667
tp63668
I1
s(g38173
I42
g38174
Vinsert
p63669
I42
VSimpleName: Class
p63670
tp63671
I2
s(g16447
I42
g16448
Vinsert
p63672
I32
VMethodInvocation
p63673
tp63674
I1
s(Vinsert
p63675
I42
VSimpleName: getUnit
p63676
Vinsert
p63677
I16
VConditionalExpression
p63678
tp63679
I1
s(g8575
I42
g8576
Vinsert
p63680
I83
VModifier: public
p63681
tp63682
I2
s(g464
I42
g465
Vinsert
p63683
I33
VNullLiteral
p63684
tp63685
I1
s(g9340
I42
g9341
Vinsert
p63686
I43
VSimpleType: SQLConstraintImpl
p63687
tp63688
I1
s(g20806
I42
g20807
Vinsert
p63689
I45
VStringLiteral: "DOUBLE"
p63690
tp63691
I1
s(g26260
I42
g26261
Vinsert
p63692
I32
VMethodInvocation
p63693
tp63694
I10
s(g53297
I42
g53298
Vinsert
p63695
I42
VSimpleName: statementIdSeed
p63696
tp63697
I1
s(g4339
I42
g4340
Vinsert
p63698
I11
VCastExpression
p63699
tp63700
I1
s(g13789
I42
g13790
Vinsert
p63701
I40
VQualifiedName: Token.RPAREN
p63702
tp63703
I1
s(g41850
I42
g41851
Vinsert
p63704
I43
VSimpleType: WallSqlStat
p63705
tp63706
I1
s(g34622
I42
g34623
Vinsert
p63707
I42
VSimpleName: setJdbcUrl
p63708
tp63709
I1
s(g4139
I42
g4140
Vinsert
p63710
I42
VSimpleName: Clob
p63711
tp63712
I1
s(g14226
I42
g14227
Vinsert
p63713
I42
VSimpleName: print
p63714
tp63715
I1
s(g20010
I42
g20011
Vinsert
p63716
I42
VSimpleName: setSavepointId
p63717
tp63718
I1
s(g2423
I42
g2424
Vinsert
p63719
I42
VSimpleName: plainString
p63720
tp63721
I2
s(g3811
I42
g3812
Vinsert
p63722
I32
VMethodInvocation
p63723
tp63724
I3
s(g2059
I42
g2060
Vinsert
p63725
I42
VSimpleName: get
p63726
tp63727
I2
s(g12125
I42
g12126
Vinsert
p63728
I42
VSimpleName: JSONObject
p63729
tp63730
I1
s(g17660
I42
g17661
Vinsert
p63731
I45
VStringLiteral: " AS "
p63732
tp63733
I1
s(g34496
I42
g34497
Vinsert
p63734
I42
VSimpleName: getMethodName
p63735
tp63736
I1
s(g9428
I42
g9429
Vinsert
p63737
I40
VQualifiedName: com.alibaba.druid.sql.ast.expr.SQLHexExpr
p63738
tp63739
I2
s(g4867
I42
g4868
Vinsert
p63740
I60
VVariableDeclarationStatement
p63741
tp63742
I1
s(g8734
I42
g8735
Vinsert
p63743
I42
VSimpleName: nextToken
p63744
tp63745
I1
s(g12414
I42
g12415
Vinsert
p63746
I42
VSimpleName: initWallProvider
p63747
tp63748
I4
s(g38882
I42
g38883
Vinsert
p63749
I43
VSimpleType: SQLPropertyExpr
p63750
tp63751
I1
s(g15875
I42
g15876
Vinsert
p63752
I31
VMethodDeclaration
p63753
tp63754
I1
s(Vinsert
p63755
I42
VSimpleName: assertTrue
p63756
Vinsert
p63757
I42
VSimpleName: MySqlWallTest26
p63758
tp63759
I1
s(g32782
I42
g32783
Vinsert
p63760
I42
VSimpleName: HexBin
p63761
tp63762
I2
s(g30060
I42
g30061
Vinsert
p63763
I85
VDimension
p63764
tp63765
I1
s(g42013
I42
g42014
Vinsert
p63766
I42
VSimpleName: FilterChainImpl
p63767
tp63768
I2
s(g7787
I42
g7788
Vinsert
p63769
I21
VExpressionStatement
p63770
tp63771
I2
s(g26818
I42
g26819
Vinsert
p63772
I27
VInfixExpression: &&
p63773
tp63774
I1
s(g5414
I42
g5415
Vinsert
p63775
I42
VSimpleName: print0
p63776
tp63777
I1
s(g7141
I42
g7142
Vinsert
p63778
I27
VInfixExpression: <
p63779
tp63780
I1
s(g21084
I42
g21085
Vinsert
p63781
I39
VPrimitiveType: boolean
p63782
tp63783
I1
s(g5053
I42
g5054
Vinsert
p63784
I42
VSimpleName: Class
p63785
tp63786
I1
s(g24462
I42
g24463
Vinsert
p63787
I60
VVariableDeclarationStatement
p63788
tp63789
I1
s(g14551
I42
g14552
Vinsert
p63790
I32
VMethodInvocation
p63791
tp63792
I7
s(Vinsert
p63793
I42
VSimpleName: nextToken
p63794
Vinsert
p63795
I42
VSimpleName: TeradataLexer
p63796
tp63797
I1
s(g20933
I42
g20934
Vinsert
p63798
I42
VSimpleName: Override
p63799
tp63800
I1
s(g29207
I42
g29208
Vinsert
p63801
I45
VStringLiteral: ", ?, ?, ?, ?, ?\u005cn"
p63802
tp63803
I1
s(g26581
I42
g26582
Vinsert
p63804
I44
VSingleVariableDeclaration
p63805
tp63806
I2
s(g24310
I42
g24311
Vinsert
p63807
I45
VStringLiteral: "coditions : "
p63808
tp63809
I8
s(g51370
I42
g51371
Vinsert
p63810
I42
VSimpleName: eldest
p63811
tp63812
I1
s(g3806
I42
g3807
Vinsert
p63813
I42
VSimpleName: x
p63814
tp63815
I6
s(g5724
I42
g5725
Vinsert
p63816
I83
VModifier: public
p63817
tp63818
I1
s(g28185
I42
g28186
Vinsert
p63819
I57
VTypeLiteral
p63820
tp63821
I4
s(g15299
I42
g15300
Vinsert
p63822
I34
VNumberLiteral: 0
p63823
tp63824
I1
s(g6079
I42
g6080
Vinsert
p63825
I45
VStringLiteral: "\u005cn\u005ct)"
p63826
tp63827
I1
s(g21061
I42
g21062
Vinsert
p63828
I60
VVariableDeclarationStatement
p63829
tp63830
I1
s(g4472
I42
g4473
Vinsert
p63831
I42
VSimpleName: Exception
p63832
tp63833
I1
s(g14630
I42
g14631
Vinsert
p63834
I42
VSimpleName: SQLObject
p63835
tp63836
I1
s(g27586
I42
g27587
Vinsert
p63837
I42
VSimpleName: e
p63838
tp63839
I2
s(g6760
I42
g6761
Vinsert
p63840
I44
VSingleVariableDeclaration
p63841
tp63842
I1
s(g20548
I42
g20549
Vinsert
p63843
I59
VVariableDeclarationFragment
p63844
tp63845
I2
s(g454
I42
g455
Vinsert
p63846
I83
VModifier: public
p63847
tp63848
I1
s(g19152
I42
g19153
Vinsert
p63849
I60
VVariableDeclarationStatement
p63850
tp63851
I6
s(g10422
I42
g10423
Vinsert
p63852
I42
VSimpleName: Assert
p63853
tp63854
I2
s(g17926
I42
g17927
Vinsert
p63855
I25
VIfStatement
p63856
tp63857
I2
s(g8090
I42
g8091
Vinsert
p63858
I25
VIfStatement
p63859
tp63860
I4
s(g7083
I42
g7084
Vinsert
p63861
I32
VMethodInvocation
p63862
tp63863
I6
s(g21809
I42
g21810
Vinsert
p63864
I42
VSimpleName: config
p63865
tp63866
I1
s(g16638
I42
g16639
Vinsert
p63867
I43
VSimpleType: PGSelectParser
p63868
tp63869
I1
s(g15108
I42
g15109
Vinsert
p63870
I42
VSimpleName: Connection
p63871
tp63872
I1
s(g9891
I42
g9892
Vinsert
p63873
I42
VSimpleName: i
p63874
tp63875
I3
s(g36569
I42
g36570
Vinsert
p63876
I42
VSimpleName: token
p63877
tp63878
I1
s(g18496
I42
g18497
Vinsert
p63879
I42
VSimpleName: SQLGrantStatement
p63880
tp63881
I1
s(g1420
I42
g1421
Vinsert
p63882
I22
VFieldAccess
p63883
tp63884
I1
s(Vinsert
p63885
I42
VSimpleName: getOwner
p63886
Vinsert
p63887
I42
VSimpleName: x
p63888
tp63889
I4
s(g7063
I42
g7064
Vinsert
p63890
I42
VSimpleName: getExecuteCount
p63891
tp63892
I1
s(g25834
I42
g25835
Vinsert
p63893
I60
VVariableDeclarationStatement
p63894
tp63895
I5
s(g20374
I42
g20375
Vinsert
p63896
I42
VSimpleName: putAttribute
p63897
tp63898
I1
s(g18026
I42
g18027
Vinsert
p63899
I24
VForStatement
p63900
tp63901
I1
s(g23899
I42
g23900
Vinsert
p63902
I8
VBlock
p63903
tp63904
I1
s(g5079
I42
g5080
Vinsert
p63905
I83
VModifier: protected
p63906
tp63907
I21
s(g16046
I42
g16047
Vinsert
p63908
I42
VSimpleName: Assert
p63909
tp63910
I1
s(g11925
I42
g11926
Vinsert
p63911
I83
VModifier: public
p63912
tp63913
I2
s(g1299
I42
g1300
Vinsert
p63914
I42
VSimpleName: setInitialSize
p63915
tp63916
I1
s(g27234
I42
g27235
Vinsert
p63917
I42
VSimpleName: registry
p63918
tp63919
I2
s(g14834
I42
g14835
Vinsert
p63920
I42
VSimpleName: advice
p63921
tp63922
I2
s(g3641
I42
g3642
Vinsert
p63923
I42
VSimpleName: sqlStatMap
p63924
tp63925
I6
s(g10422
I42
g10423
Vinsert
p63926
I31
VMethodDeclaration
p63927
tp63928
I2
s(g10087
I42
g10088
Vinsert
p63929
I21
VExpressionStatement
p63930
tp63931
I4
s(g8306
I42
g8307
Vinsert
p63932
I7
VAssignment: =
p63933
tp63934
I2
s(g21039
I42
g21040
Vinsert
p63935
I42
VSimpleName: visit
p63936
tp63937
I2
s(Vinsert
p63938
I42
VSimpleName: getCursorName
p63939
Vinsert
p63940
I42
VSimpleName: MySqlCursorCloseStatement
p63941
tp63942
I1
s(g16501
I42
g16502
Vinsert
p63943
I42
VSimpleName: markChar
p63944
tp63945
I1
s(g48084
I42
g48085
Vinsert
p63946
I45
VStringLiteral: "\u005cn\u005ct\u005c"DASHBOARD_ID\u005c" NUMBER(38, 0) NOT NULL ENABLE,"
p63947
tp63948
I1
s(g8391
I42
g8392
Vinsert
p63949
I42
VSimpleName: assertEquals
p63950
tp63951
I5
s(g26244
I42
g26245
Vinsert
p63952
I42
VSimpleName: dataSource
p63953
tp63954
I1
s(g2334
I42
g2335
Vinsert
p63955
I45
VStringLiteral: "NotEmptyWaitMillis"
p63956
tp63957
I1
s(g5320
I42
g5321
Vinsert
p63958
I42
VSimpleName: lock
p63959
tp63960
I13
s(g14088
I42
g14089
Vinsert
p63961
I74
VParameterizedType: AtomicIntegerFieldUpdater<DruidAbstractDataSource>
p63962
tp63963
I1
s(g251
I42
g252
Vinsert
p63964
I60
VVariableDeclarationStatement
p63965
tp63966
I1
s(g3108
I42
g3109
Vinsert
p63967
I42
VSimpleName: conn
p63968
tp63969
I1
s(g6318
I42
g6319
Vinsert
p63970
I43
VSimpleType: StringWriter
p63971
tp63972
I1
s(g6139
I42
g6140
Vinsert
p63973
I42
VSimpleName: stmt
p63974
tp63975
I18
s(g3243
I42
g3244
Vinsert
p63976
I59
VVariableDeclarationFragment
p63977
tp63978
I5
s(g1780
I42
g1781
Vinsert
p63979
I39
VPrimitiveType: void
p63980
tp63981
I1
s(g5818
I42
g5819
Vinsert
p63982
I43
VSimpleType: String
p63983
tp63984
I1
s(g7469
I42
g7470
Vinsert
p63985
I11
VCastExpression
p63986
tp63987
I1
s(g846
I42
g847
Vinsert
p63988
I13
VCharacterLiteral: ')'
p63989
tp63990
I1
s(g1344
I42
g1345
Vinsert
p63991
I27
VInfixExpression: !=
p63992
tp63993
I1
s(g1339
I42
g1340
Vinsert
p63994
I83
VModifier: public
p63995
tp63996
I23
s(g4834
I42
g4835
Vinsert
p63997
I83
VModifier: public
p63998
tp63999
I1
s(g10338
I42
g10339
Vinsert
p64000
I42
VSimpleName: intervalExpr
p64001
tp64002
I1
s(g8298
I42
g8299
Vinsert
p64003
I52
VThisExpression
p64004
tp64005
I17
s(g15397
I42
g15398
Vinsert
p64006
I44
VSingleVariableDeclaration
p64007
tp64008
I1
s(g17146
I42
g17147
Vinsert
p64009
I42
VSimpleName: oldMode
p64010
tp64011
I1
s(g5877
I42
g5878
Vinsert
p64012
I25
VIfStatement
p64013
tp64014
I1
s(g13643
I42
g13644
Vinsert
p64015
I42
VSimpleName: ex
p64016
tp64017
I1
s(g28042
I42
g28043
Vinsert
p64018
I43
VSimpleType: String
p64019
tp64020
I6
s(g24923
I42
g24924
Vinsert
p64021
I25
VIfStatement
p64022
tp64023
I2
s(g5936
I42
g5937
Vinsert
p64024
I45
VStringLiteral: "\u005ct\u005ct) top)\u005cn"
p64025
tp64026
I1
s(g11745
I42
g11746
Vinsert
p64027
I33
VNullLiteral
p64028
tp64029
I2
s(g22807
I42
g22808
Vinsert
p64030
I52
VThisExpression
p64031
tp64032
I20
s(g1710
I42
g1711
Vinsert
p64033
I41
VReturnStatement
p64034
tp64035
I2
s(g13991
I42
g13992
Vinsert
p64036
I43
VSimpleType: T
p64037
tp64038
I2
s(g3554
I42
g3555
Vinsert
p64039
I9
VBooleanLiteral: true
p64040
tp64041
I1
s(g1559
I42
g1560
Vinsert
p64042
I14
VClassInstanceCreation
p64043
tp64044
I3
s(g9113
I42
g9114
Vinsert
p64045
I42
VSimpleName: dataSources
p64046
tp64047
I1
s(g49386
I42
g49387
Vinsert
p64048
I45
VStringLiteral: "alter table test1 drop column c_decimal;"
p64049
tp64050
I1
s(g3238
I42
g3239
Vinsert
p64051
I27
VInfixExpression: +
p64052
tp64053
I3
s(g7482
I42
g7483
Vinsert
p64054
I36
VParenthesizedExpression
p64055
tp64056
I2
s(g856
I42
g857
Vinsert
p64057
I8
VBlock
p64058
tp64059
I1
s(g7678
I42
g7679
Vinsert
p64060
I42
VSimpleName: out
p64061
tp64062
I1
s(g16967
I42
g16968
Vinsert
p64063
I44
VSingleVariableDeclaration
p64064
tp64065
I1
s(g2915
I42
g2916
Vinsert
p64066
I42
VSimpleName: must
p64067
tp64068
I1
s(g17146
I42
g17147
Vinsert
p64069
I42
VSimpleName: Mode
p64070
tp64071
I1
s(Vinsert
p64072
I42
VSimpleName: token
p64073
Vinsert
p64074
I42
VSimpleName: createTable
p64075
tp64076
I1
s(g2469
I42
g2470
Vinsert
p64077
I31
VMethodDeclaration
p64078
tp64079
I2
s(g16778
I42
g16779
Vinsert
p64080
I43
VSimpleType: MockDriver
p64081
tp64082
I2
s(g7527
I42
g7528
Vinsert
p64083
I27
VInfixExpression: !=
p64084
tp64085
I1
s(g31754
I42
g31755
Vinsert
p64086
I42
VSimpleName: SQLTableElement
p64087
tp64088
I1
s(g11511
I42
g11512
Vinsert
p64089
I42
VSimpleName: sql
p64090
tp64091
I1
s(g1825
I42
g1826
Vinsert
p64092
I9
VBooleanLiteral: true
p64093
tp64094
I1
s(g16696
I42
g16697
Vinsert
p64095
I42
VSimpleName: stmt
p64096
tp64097
I16
s(Vinsert
p64098
I42
VSimpleName: getClass
p64099
Vinsert
p64100
I43
VSimpleType: SQLServerASTVisitor
p64101
tp64102
I1
s(g5374
I42
g5375
Vinsert
p64103
I42
VSimpleName: print
p64104
tp64105
I1
s(g35430
I42
g35431
Vinsert
p64106
I40
VQualifiedName: Types.VARCHAR
p64107
tp64108
I1
s(g15087
I42
g15088
Vinsert
p64109
I42
VSimpleName: mbeanServer
p64110
tp64111
I2
s(g18871
I42
g18872
Vinsert
p64112
I42
VSimpleName: accept
p64113
tp64114
I2
s(g7817
I42
g7818
Vinsert
p64115
I43
VSimpleType: ResultSet
p64116
tp64117
I2
s(g4630
I42
g4631
Vinsert
p64118
I41
VReturnStatement
p64119
tp64120
I1
s(g6460
I42
g6461
Vinsert
p64121
I45
VStringLiteral: "SELECT db.db_key, db.db_id, bs.bs_key, bs.bs_recid AS recid, bs.bs_stamp AS stamp\u005cn"
p64122
tp64123
I1
s(g4253
I42
g4254
Vinsert
p64124
I42
VSimpleName: MapHandler
p64125
tp64126
I1
s(g14834
I42
g14835
Vinsert
p64127
I52
VThisExpression
p64128
tp64129
I2
s(g18113
I42
g18114
Vinsert
p64130
I42
VSimpleName: stmt
p64131
tp64132
I3
s(g27808
I42
g27809
Vinsert
p64133
I45
VStringLiteral: "\u005cn, f2 -- bbb"
p64134
tp64135
I1
s(g33452
I42
g33453
Vinsert
p64136
I59
VVariableDeclarationFragment
p64137
tp64138
I1
s(g12573
I42
g12574
Vinsert
p64139
I43
VSimpleType: List
p64140
tp64141
I1
s(g10105
I42
g10106
Vinsert
p64142
I42
VSimpleName: selectQueryBlock
p64143
tp64144
I2
s(Vinsert
p64145
I42
VSimpleName: assertEquals
p64146
Vinsert
p64147
I45
VStringLiteral: "\u005cn\u005ctCHECK PARTITION ALL"
p64148
tp64149
I1
s(g27407
I42
g27408
Vinsert
p64150
I42
VSimpleName: SQLIdentifierExpr
p64151
tp64152
I2
s(g5320
I42
g5321
Vinsert
p64153
I8
VBlock
p64154
tp64155
I10
s(g12671
I42
g12672
Vinsert
p64156
I42
VSimpleName: identifierEquals
p64157
tp64158
I1
s(g11566
I42
g11567
Vinsert
p64159
I27
VInfixExpression: ==
p64160
tp64161
I1
s(Vinsert
p64162
I42
VSimpleName: nextToken
p64163
Vinsert
p64164
I42
VSimpleName: constaintName
p64165
tp64166
I1
s(g19823
I42
g19824
Vinsert
p64167
I21
VExpressionStatement
p64168
tp64169
I3
s(g1213
I42
g1214
Vinsert
p64170
I42
VSimpleName: getResultSetHoldability
p64171
tp64172
I1
s(g17723
I42
g17724
Vinsert
p64173
I59
VVariableDeclarationFragment
p64174
tp64175
I3
s(g24462
I42
g24463
Vinsert
p64176
I43
VSimpleType: HBasePreparedStatement
p64177
tp64178
I1
s(g9446
I42
g9447
Vinsert
p64179
I59
VVariableDeclarationFragment
p64180
tp64181
I2
s(g8062
I42
g8063
Vinsert
p64182
I43
VSimpleType: Exception
p64183
tp64184
I1
s(g2977
I42
g2978
Vinsert
p64185
I45
VStringLiteral: "\u005ct)\u005cn"
p64186
tp64187
I1
s(g5538
I42
g5539
Vinsert
p64188
I32
VMethodInvocation
p64189
tp64190
I7
s(Vinsert
p64191
I42
VSimpleName: put
p64192
Vinsert
p64193
I40
VQualifiedName: Token.UNDO
p64194
tp64195
I2
s(g6005
I42
g6006
Vinsert
p64196
I42
VSimpleName: WallProvider
p64197
tp64198
I1
s(g7903
I42
g7904
Vinsert
p64199
I31
VMethodDeclaration
p64200
tp64201
I1
s(g41564
I42
g41565
Vinsert
p64202
I42
VSimpleName: getWhiteListHitCount
p64203
tp64204
I1
s(g4278
I42
g4279
Vinsert
p64205
I45
VStringLiteral: "| c_timestamp  | timestamp    | NO   |     | NULL                | on update CURRENT_TIMESTAMP |\u005cn"
p64206
tp64207
I1
s(g36815
I42
g36816
Vinsert
p64208
I45
VStringLiteral: "create view v1 as select * from v0; create view v0 as select * from t;"
p64209
tp64210
I1
s(g39119
I42
g39120
Vinsert
p64211
I43
VSimpleType: SQLServerParameter
p64212
tp64213
I1
s(g17334
I42
g17335
Vinsert
p64214
I42
VSimpleName: SQLException
p64215
tp64216
I5
s(g19456
I42
g19457
Vinsert
p64217
I42
VSimpleName: HiveStatementParser
p64218
tp64219
I1
s(g16153
I42
g16154
Vinsert
p64220
I42
VSimpleName: equalsIgoreOrder
p64221
tp64222
I1
s(g25868
I42
g25869
Vinsert
p64223
I45
VStringLiteral: "LEFT OUTER JOIN (\u005cn"
p64224
tp64225
I1
s(g9461
I42
g9462
Vinsert
p64226
I9
VBooleanLiteral: true
p64227
tp64228
I1
s(g1060
I42
g1061
Vinsert
p64229
I42
VSimpleName: methodName
p64230
tp64231
I2
s(g25616
I42
g25617
Vinsert
p64232
I45
VStringLiteral: "\u005ct, IS_DELETED, utl_raw.cast_to_raw(CONTRACT_PARTY) AS CONTRACT_PARTY, utl_raw.cast_to_raw(COMPANY_NAME) AS COMPANY_NAME, utl_raw.cast_to_raw(PRODUCT_TYPE) AS PRODUCT_TYPE, utl_raw.cast_to_raw(PERIOD) AS PERIOD\u005cn"
p64233
tp64234
I1
s(g116
I42
g117
Vinsert
p64235
I31
VMethodDeclaration
p64236
tp64237
I2
s(g60367
I42
g60368
Vinsert
p64238
I52
VThisExpression
p64239
tp64240
I1
s(g7121
I42
g7122
Vinsert
p64241
I42
VSimpleName: Map
p64242
tp64243
I5
s(g6005
I42
g6006
Vinsert
p64244
I42
VSimpleName: checkResult
p64245
tp64246
I7
s(g9838
I42
g9839
Vinsert
p64247
I14
VClassInstanceCreation
p64248
tp64249
I1
s(g5429
I42
g5430
Vinsert
p64250
I8
VBlock
p64251
tp64252
I2
s(g3007
I42
g3008
Vinsert
p64253
I42
VSimpleName: visit
p64254
tp64255
I1
s(g36028
I42
g36029
Vinsert
p64256
I42
VSimpleName: parseCrateTable
p64257
tp64258
I1
s(g2538
I42
g2539
Vinsert
p64259
I42
VSimpleName: PreparedStatementProxy
p64260
tp64261
I1
s(Vinsert
p64262
I42
VSimpleName: getColumns
p64263
Vinsert
p64264
I45
VStringLiteral: "search_graph"
p64265
tp64266
I1
s(g14311
I42
g14312
Vinsert
p64267
I42
VSimpleName: close
p64268
tp64269
I18
s(g947
I42
g948
Vinsert
p64270
I42
VSimpleName: x
p64271
tp64272
I4
s(g977
I42
g978
Vinsert
p64273
I32
VMethodInvocation
p64274
tp64275
I3
s(g16975
I42
g16976
Vinsert
p64276
I42
VSimpleName: MultiDataSourceConnection
p64277
tp64278
I1
s(g32833
I42
g32834
Vinsert
p64279
I32
VMethodInvocation
p64280
tp64281
I4
s(g8919
I42
g8920
Vinsert
p64282
I42
VSimpleName: add
p64283
tp64284
I1
s(g42262
I42
g42263
Vinsert
p64285
I42
VSimpleName: testEval_5
p64286
tp64287
I1
s(g27625
I42
g27626
Vinsert
p64288
I42
VSimpleName: h2
p64289
tp64290
I2
s(g924
I42
g925
Vinsert
p64291
I42
VSimpleName: removeConnectionEventListener
p64292
tp64293
I1
s(g2852
I42
g2853
Vinsert
p64294
I32
VMethodInvocation
p64295
tp64296
I1
s(g1868
I42
g1869
Vinsert
p64297
I27
VInfixExpression: !=
p64298
tp64299
I1
s(g19749
I42
g19750
Vinsert
p64300
I42
VSimpleName: PGExceptionSorter
p64301
tp64302
I1
s(g7612
I42
g7613
Vinsert
p64303
I42
VSimpleName: x
p64304
tp64305
I2
s(g4867
I42
g4868
Vinsert
p64306
I42
VSimpleName: iter
p64307
tp64308
I1
s(Vinsert
p64309
I42
VSimpleName: equals
p64310
Vinsert
p64311
I42
VSimpleName: sampleClause
p64312
tp64313
I1
s(g15263
I42
g15264
Vinsert
p64314
I83
VModifier: public
p64315
tp64316
I1
s(Vinsert
p64317
I42
VSimpleName: addBeforeComment
p64318
Vinsert
p64319
I42
VSimpleName: addBeforeComment
p64320
tp64321
I1
s(g15461
I42
g15462
Vinsert
p64322
I42
VSimpleName: item2
p64323
tp64324
I6
s(g8311
I42
g8312
Vinsert
p64325
I8
VBlock
p64326
tp64327
I1
s(g28772
I42
g28773
Vinsert
p64328
I21
VExpressionStatement
p64329
tp64330
I1
s(g4060
I42
g4061
Vinsert
p64331
I45
VStringLiteral: "evil hints"
p64332
tp64333
I1
s(g8687
I42
g8688
Vinsert
p64334
I44
VSingleVariableDeclaration
p64335
tp64336
I1
s(g10542
I42
g10543
Vinsert
p64337
I13
VCharacterLiteral: '\u005c''
p64338
tp64339
I1
s(g14754
I42
g14755
Vinsert
p64340
I42
VSimpleName: PGUtils
p64341
tp64342
I2
s(g64191
I42
g64192
Vinsert
p64343
I45
VStringLiteral: "UNDO"
p64344
tp64345
I2
s(g4452
I42
g4453
Vinsert
p64346
I42
VSimpleName: subSchemas
p64347
tp64348
I1
s(g33587
I42
g33588
Vinsert
p64349
I45
VStringLiteral: " WITH"
p64350
tp64351
I1
s(g19179
I42
g19180
Vinsert
p64352
I42
VSimpleName: hash
p64353
tp64354
I2
s(g3603
I42
g3604
Vinsert
p64355
I45
VStringLiteral: " ("
p64356
tp64357
I1
s(g1375
I42
g1376
Vinsert
p64358
I42
VSimpleName: String
p64359
tp64360
I1
s(g14790
I42
g14791
Vinsert
p64361
I45
VStringLiteral: "when "
p64362
tp64363
I1
s(g58434
I42
g58435
Vinsert
p64364
I42
VSimpleName: orderBy
p64365
tp64366
I1
s(Vinsert
p64367
I42
VSimpleName: assertFalse
p64368
Vinsert
p64369
I42
VSimpleName: MySqlWallTest5
p64370
tp64371
I1
s(g6539
I42
g6540
Vinsert
p64372
I45
VStringLiteral: "\u005cn\u005ctsalary NUMBER(7, 2),"
p64373
tp64374
I6
s(g2657
I42
g2658
Vinsert
p64375
I42
VSimpleName: HashSet
p64376
tp64377
I1
s(g18573
I42
g18574
Vinsert
p64378
I60
VVariableDeclarationStatement
p64379
tp64380
I1
s(g11930
I42
g11931
Vinsert
p64381
I32
VMethodInvocation
p64382
tp64383
I1
s(g3992
I42
g3993
Vinsert
p64384
I25
VIfStatement
p64385
tp64386
I1
s(g2099
I42
g2100
Vinsert
p64387
I34
VNumberLiteral: 1.0F
p64388
tp64389
I2
s(g35083
I42
g35084
Vinsert
p64390
I27
VInfixExpression: ==
p64391
tp64392
I112
s(g14583
I42
g14584
Vinsert
p64393
I43
VSimpleType: com.mysql.jdbc.Connection
p64394
tp64395
I1
s(g12523
I42
g12524
Vinsert
p64396
I42
VSimpleName: getWhere
p64397
tp64398
I2
s(g26143
I42
g26144
Vinsert
p64399
I21
VExpressionStatement
p64400
tp64401
I7
s(g41
I42
g42
Vinsert
p64402
I42
VSimpleName: parser
p64403
tp64404
I4
s(g5485
I42
g5486
Vinsert
p64405
I7
VAssignment: =
p64406
tp64407
I2
s(g25524
I42
g25525
Vinsert
p64408
I42
VSimpleName: add
p64409
tp64410
I1
s(g886
I42
g887
Vinsert
p64411
I45
VStringLiteral: "abcdef"
p64412
tp64413
I1
s(g9089
I42
g9090
Vinsert
p64414
I21
VExpressionStatement
p64415
tp64416
I4
s(g351
I42
g352
Vinsert
p64417
I27
VInfixExpression: +
p64418
tp64419
I24
s(g15899
I42
g15900
Vinsert
p64420
I42
VSimpleName: conn
p64421
tp64422
I1
s(g3302
I42
g3303
Vinsert
p64423
I42
VSimpleName: Column
p64424
tp64425
I10
s(g1415
I42
g1416
Vinsert
p64426
I27
VInfixExpression: !=
p64427
tp64428
I1
s(g2755
I42
g2756
Vinsert
p64429
I45
VStringLiteral: " else\u005cn"
p64430
tp64431
I1
s(g6592
I42
g6593
Vinsert
p64432
I42
VSimpleName: getColumns
p64433
tp64434
I1
s(g7720
I42
g7721
Vinsert
p64435
I43
VSimpleType: Integer
p64436
tp64437
I3
s(g5987
I42
g5988
Vinsert
p64438
I42
VSimpleName: MySqlCursorOpenStatement
p64439
tp64440
I2
s(g6635
I42
g6636
Vinsert
p64441
I54
VTryStatement
p64442
tp64443
I1
s(g8815
I42
g8816
Vinsert
p64444
I42
VSimpleName: isRemoved
p64445
tp64446
I1
s(g1145
I42
g1146
Vinsert
p64447
I43
VSimpleType: Log
p64448
tp64449
I1
s(g14072
I42
g14073
Vinsert
p64450
I42
VSimpleName: visit
p64451
tp64452
I3
s(g5615
I42
g5616
Vinsert
p64453
I31
VMethodDeclaration
p64454
tp64455
I1
s(g11297
I42
g11298
Vinsert
p64456
I42
VSimpleName: getOSAndroid41Count
p64457
tp64458
I1
s(Vinsert
p64459
I42
VSimpleName: clone
p64460
Vinsert
p64461
I42
VSimpleName: option
p64462
tp64463
I1
s(g6592
I42
g6593
Vinsert
p64464
I41
VReturnStatement
p64465
tp64466
I1
s(g17174
I42
g17175
Vinsert
p64467
I45
VStringLiteral: "\u005ctc1, \u005cn"
p64468
tp64469
I1
s(g45516
I42
g45517
Vinsert
p64470
I27
VInfixExpression: !=
p64471
tp64472
I2
s(g8006
I42
g8007
Vinsert
p64473
I39
VPrimitiveType: char
p64474
tp64475
I1
s(g12050
I42
g12051
Vinsert
p64476
I45
VStringLiteral: "\u005ct\u005ct\u005ct\u005ct\u005ctINNER JOIN menuTemp b ON a.parent_id = b.menu_id\u005cn"
p64477
tp64478
I1
s(g27954
I42
g27955
Vinsert
p64479
I41
VReturnStatement
p64480
tp64481
I2
s(g680
I42
g681
Vinsert
p64482
I42
VSimpleName: SpringMethodStat
p64483
tp64484
I1
s(g19486
I42
g19487
Vinsert
p64485
I45
VStringLiteral: "  customer_name varchar2(50) NOT NULL,\u005cn"
p64486
tp64487
I1
s(g14583
I42
g14584
Vinsert
p64488
I42
VSimpleName: oracleConn
p64489
tp64490
I2
s(g34576
I42
g34577
Vinsert
p64491
I45
VStringLiteral: "@"
p64492
tp64493
I1
s(g22449
I42
g22450
Vinsert
p64494
I42
VSimpleName: nextBoolean
p64495
tp64496
I1
s(g13326
I42
g13327
Vinsert
p64497
I42
VSimpleName: sqlSelect
p64498
tp64499
I1
s(g19645
I42
g19646
Vinsert
p64500
I41
VReturnStatement
p64501
tp64502
I1
s(g12768
I42
g12769
Vinsert
p64503
I42
VSimpleName: psql
p64504
tp64505
I1
s(g391
I42
g392
Vinsert
p64506
I83
VModifier: public
p64507
tp64508
I1
s(g547
I42
g548
Vinsert
p64509
I45
VStringLiteral: "WHERE (v.service_type IN ('gs', 'cgs', 'hkgs', 'twgs')\u005cn"
p64510
tp64511
I1
s(g38836
I42
g38837
Vinsert
p64512
I43
VSimpleType: StatFilter
p64513
tp64514
I1
s(g6622
I42
g6623
Vinsert
p64515
I42
VSimpleName: exprParser
p64516
tp64517
I1
s(g60914
I42
g60915
Vinsert
p64518
I42
VSimpleName: WallContext
p64519
tp64520
I4
s(g27660
I42
g27661
Vinsert
p64521
I42
VSimpleName: JPanel
p64522
tp64523
I1
s(g15761
I42
g15762
Vinsert
p64524
I42
VSimpleName: visit
p64525
tp64526
I2
s(g7594
I42
g7595
Vinsert
p64527
I32
VMethodInvocation
p64528
tp64529
I1
s(g8381
I42
g8382
Vinsert
p64530
I42
VSimpleName: x
p64531
tp64532
I1
s(g26998
I42
g26999
Vinsert
p64533
I42
VSimpleName: Log
p64534
tp64535
I2
s(g15263
I42
g15264
Vinsert
p64536
I42
VSimpleName: Integer
p64537
tp64538
I1
s(g14316
I42
g14317
Vinsert
p64539
I8
VBlock
p64540
tp64541
I2
s(g22905
I42
g22906
Vinsert
p64542
I42
VSimpleName: OracleIntervalExpr
p64543
tp64544
I1
s(g7315
I42
g7316
Vinsert
p64545
I43
VSimpleType: Number
p64546
tp64547
I1
s(g1938
I42
g1939
Vinsert
p64548
I34
VNumberLiteral: 1
p64549
tp64550
I280
s(g30184
I42
g30185
Vinsert
p64551
I59
VVariableDeclarationFragment
p64552
tp64553
I2
s(g3885
I42
g3886
Vinsert
p64554
I39
VPrimitiveType: void
p64555
tp64556
I105
s(g12050
I42
g12051
Vinsert
p64557
I45
VStringLiteral: "\u005ct\u005ct\u005ct)\u005cn"
p64558
tp64559
I1
s(g57112
I42
g57113
Vinsert
p64560
I42
VSimpleName: containsColumn
p64561
tp64562
I5
s(g27830
I42
g27831
Vinsert
p64563
I43
VSimpleType: MySqlExprParser
p64564
tp64565
I9
s(g12488
I42
g12489
Vinsert
p64566
I42
VSimpleName: SQLName
p64567
tp64568
I1
s(g876
I42
g877
Vinsert
p64569
I45
VStringLiteral: "\u005ctdatestamp STRING\u005cn"
p64570
tp64571
I1
s(g5475
I42
g5476
Vinsert
p64572
I21
VExpressionStatement
p64573
tp64574
I1
s(g4921
I42
g4922
Vinsert
p64575
I16
VConditionalExpression
p64576
tp64577
I1
s(g6313
I42
g6314
Vinsert
p64578
I42
VSimpleName: nextToken
p64579
tp64580
I1
s(g9446
I42
g9447
Vinsert
p64581
I32
VMethodInvocation
p64582
tp64583
I5
s(g22658
I42
g22659
Vinsert
p64584
I45
VStringLiteral: "\u005cn"
p64585
tp64586
I2
s(g1319
I42
g1320
Vinsert
p64587
I42
VSimpleName: System
p64588
tp64589
I1
s(g2880
I42
g2881
Vinsert
p64590
I45
VStringLiteral: "CREATE TABLE locations_demo ("
p64591
tp64592
I4
s(g22126
I42
g22127
Vinsert
p64593
I21
VExpressionStatement
p64594
tp64595
I1
s(g12006
I42
g12007
Vinsert
p64596
I42
VSimpleName: rtnValue
p64597
tp64598
I1
s(g1963
I42
g1964
Vinsert
p64599
I42
VSimpleName: simpleExpression
p64600
tp64601
I1
s(g1155
I42
g1156
Vinsert
p64602
I60
VVariableDeclarationStatement
p64603
tp64604
I1
s(g15828
I42
g15829
Vinsert
p64605
I42
VSimpleName: printlnComments
p64606
tp64607
I1
s(g2393
I42
g2394
Vinsert
p64608
I59
VVariableDeclarationFragment
p64609
tp64610
I2
s(g12480
I42
g12481
Vinsert
p64611
I42
VSimpleName: SQLName
p64612
tp64613
I2
s(g1261
I42
g1262
Vinsert
p64614
I43
VSimpleType: SQLUnionQuery
p64615
tp64616
I4
s(g25191
I42
g25192
Vinsert
p64617
I43
VSimpleType: MySqlShowStatement
p64618
tp64619
I1
s(g21822
I42
g21823
Vinsert
p64620
I45
VStringLiteral: "select user0_.id as id0_, user0_.email as email0_, "
p64621
tp64622
I1
s(g10736
I42
g10737
Vinsert
p64623
I42
VSimpleName: stmt
p64624
tp64625
I1
s(g19573
I42
g19574
Vinsert
p64626
I42
VSimpleName: dataSource
p64627
tp64628
I5
s(g14834
I42
g14835
Vinsert
p64629
I42
VSimpleName: BeanFactoryAware
p64630
tp64631
I2
s(g40459
I42
g40460
Vinsert
p64632
I42
VSimpleName: key
p64633
tp64634
I1
s(g10542
I42
g10543
Vinsert
p64635
I42
VSimpleName: identName
p64636
tp64637
I1
s(g4399
I42
g4400
Vinsert
p64638
I33
VNullLiteral
p64639
tp64640
I1
s(g8184
I42
g8185
Vinsert
p64641
I39
VPrimitiveType: int
p64642
tp64643
I1
s(g6036
I42
g6037
Vinsert
p64644
I21
VExpressionStatement
p64645
tp64646
I1
s(g3202
I42
g3203
Vinsert
p64647
I59
VVariableDeclarationFragment
p64648
tp64649
I29
s(g35877
I42
g35878
Vinsert
p64650
I13
VCharacterLiteral: ' '
p64651
tp64652
I1
s(g5409
I42
g5410
Vinsert
p64653
I42
VSimpleName: InputStream
p64654
tp64655
I4
s(g11649
I42
g11650
Vinsert
p64656
I45
VStringLiteral: "druid.oracle.fatalErrorCodes=1,2,3,a,"
p64657
tp64658
I1
s(g2034
I42
g2035
Vinsert
p64659
I43
VSimpleType: Throwable
p64660
tp64661
I1
s(g13061
I42
g13062
Vinsert
p64662
I21
VExpressionStatement
p64663
tp64664
I9
s(g19152
I42
g19153
Vinsert
p64665
I43
VSimpleType: AtomicLong
p64666
tp64667
I1
s(g37021
I42
g37022
Vinsert
p64668
I42
VSimpleName: ParserException
p64669
tp64670
I6
s(Vinsert
p64671
I42
VSimpleName: accept0
p64672
Vinsert
p64673
I42
VSimpleName: refColumns
p64674
tp64675
I2
s(g16581
I42
g16582
Vinsert
p64676
I7
VAssignment: =
p64677
tp64678
I1
s(g8233
I42
g8234
Vinsert
p64679
I22
VFieldAccess
p64680
tp64681
I1
s(g4926
I42
g4927
Vinsert
p64682
I42
VSimpleName: sqlEx
p64683
tp64684
I1
s(g19404
I42
g19405
Vinsert
p64685
I27
VInfixExpression: ==
p64686
tp64687
I1
s(g507
I42
g508
Vinsert
p64688
I59
VVariableDeclarationFragment
p64689
tp64690
I2
s(g17951
I42
g17952
Vinsert
p64691
I42
VSimpleName: lexer
p64692
tp64693
I2
s(g24211
I42
g24212
Vinsert
p64694
I21
VExpressionStatement
p64695
tp64696
I2
s(g20904
I42
g20905
Vinsert
p64697
I42
VSimpleName: conn
p64698
tp64699
I1
s(g42619
I42
g42620
Vinsert
p64700
I42
VSimpleName: SQLSelectOrderByItem
p64701
tp64702
I3
s(g2314
I42
g2315
Vinsert
p64703
I41
VReturnStatement
p64704
tp64705
I3
s(g7184
I42
g7185
Vinsert
p64706
I43
VSimpleType: WallConfig
p64707
tp64708
I6
s(g7206
I42
g7207
Vinsert
p64709
I43
VSimpleType: StatViewServlet
p64710
tp64711
I1
s(g22238
I42
g22239
Vinsert
p64712
I42
VSimpleName: DruidStatService
p64713
tp64714
I2
s(g36028
I42
g36029
Vinsert
p64715
I43
VSimpleType: HiveCreateTableStatement
p64716
tp64717
I2
s(g7975
I42
g7976
Vinsert
p64718
I42
VSimpleName: setAuthid
p64719
tp64720
I1
s(Vinsert
p64721
I42
VSimpleName: nextToken
p64722
Vinsert
p64723
I42
VSimpleName: getObjectType
p64724
tp64725
I1
s(g10257
I42
g10258
Vinsert
p64726
I45
VStringLiteral: "SELECT 1"
p64727
tp64728
I2
s(g1943
I42
g1944
Vinsert
p64729
I42
VSimpleName: SQLException
p64730
tp64731
I1
s(g1002
I42
g1003
Vinsert
p64732
I22
VFieldAccess
p64733
tp64734
I1
s(g4898
I42
g4899
Vinsert
p64735
I8
VBlock
p64736
tp64737
I1
s(g36992
I42
g36993
Vinsert
p64738
I8
VBlock
p64739
tp64740
I1
s(Vinsert
p64741
I42
VSimpleName: assertEquals
p64742
Vinsert
p64743
I42
VSimpleName: EvalMethodTest_insert
p64744
tp64745
I1
s(g21006
I42
g21007
Vinsert
p64746
I45
VStringLiteral: "\u005ctCOLLECTION_TIME VARCHAR(19)\u005cn"
p64747
tp64748
I1
s(g31257
I42
g31258
Vinsert
p64749
I42
VSimpleName: assertEquals
p64750
tp64751
I8
s(g6938
I42
g6939
Vinsert
p64752
I83
VModifier: final
p64753
tp64754
I1
s(g3714
I42
g3715
Vinsert
p64755
I42
VSimpleName: identifierEquals
p64756
tp64757
I2
s(g15255
I42
g15256
Vinsert
p64758
I42
VSimpleName: statusA
p64759
tp64760
I1
s(g7184
I42
g7185
Vinsert
p64761
I42
VSimpleName: properties
p64762
tp64763
I1
s(g25594
I42
g25595
Vinsert
p64764
I21
VExpressionStatement
p64765
tp64766
I2
s(g27615
I42
g27616
Vinsert
p64767
I45
VStringLiteral: "select sequence_name from all_sequences  "
p64768
tp64769
I2
s(g1090
I42
g1091
Vinsert
p64770
I32
VMethodInvocation
p64771
tp64772
I8
s(g8841
I42
g8842
Vinsert
p64773
I42
VSimpleName: accept
p64774
tp64775
I1
s(g4553
I42
g4554
Vinsert
p64776
I40
VQualifiedName: SQLCreateViewStatement.Column
p64777
tp64778
I1
s(g47437
I42
g47438
Vinsert
p64779
I45
VStringLiteral: "stat,wall"
p64780
tp64781
I1
s(g23045
I42
g23046
Vinsert
p64782
I42
VSimpleName: equals
p64783
tp64784
I1
s(g16484
I42
g16485
Vinsert
p64785
I27
VInfixExpression: !=
p64786
tp64787
I1
s(g26778
I42
g26779
Vinsert
p64788
I42
VSimpleName: columnName
p64789
tp64790
I1
s(g47750
I42
g47751
Vinsert
p64791
I42
VSimpleName: PGMacAddrExpr
p64792
tp64793
I2
s(g10355
I42
g10356
Vinsert
p64794
I31
VMethodDeclaration
p64795
tp64796
I27
s(g14348
I42
g14349
Vinsert
p64797
I42
VSimpleName: feature
p64798
tp64799
I1
s(g2304
I42
g2305
Vinsert
p64800
I25
VIfStatement
p64801
tp64802
I4
s(g36928
I42
g36929
Vinsert
p64803
I43
VSimpleType: JdbcSqlStat
p64804
tp64805
I1
s(g3083
I42
g3084
Vinsert
p64806
I21
VExpressionStatement
p64807
tp64808
I10
s(g12523
I42
g12524
Vinsert
p64809
I52
VThisExpression
p64810
tp64811
I1
s(g3714
I42
g3715
Vinsert
p64812
I8
VBlock
p64813
tp64814
I2
s(g34565
I42
g34566
Vinsert
p64815
I42
VSimpleName: TestCase
p64816
tp64817
I1
s(g8974
I42
g8975
Vinsert
p64818
I42
VSimpleName: getRequestErrorCount
p64819
tp64820
I1
s(g8011
I42
g8012
Vinsert
p64821
I34
VNumberLiteral: 800
p64822
tp64823
I1
s(g5574
I42
g5575
Vinsert
p64824
I42
VSimpleName: dataSource
p64825
tp64826
I5
s(g9327
I42
g9328
Vinsert
p64827
I33
VNullLiteral
p64828
tp64829
I1
s(g5931
I42
g5932
Vinsert
p64830
I27
VInfixExpression: !=
p64831
tp64832
I1
s(g38850
I42
g38851
Vinsert
p64833
I52
VThisExpression
p64834
tp64835
I9
s(g1090
I42
g1091
Vinsert
p64836
I42
VSimpleName: name
p64837
tp64838
I2
s(g6640
I42
g6641
Vinsert
p64839
I42
VSimpleName: setTestOnBorrow
p64840
tp64841
I1
s(g16447
I42
g16448
Vinsert
p64842
I27
VInfixExpression: !=
p64843
tp64844
I1
s(g20856
I42
g20857
Vinsert
p64845
I42
VSimpleName: dbType
p64846
tp64847
I1
s(Vinsert
p64848
I42
VSimpleName: createStatement
p64849
Vinsert
p64850
I42
VSimpleName: count
p64851
tp64852
I1
s(g32847
I42
g32848
Vinsert
p64853
I42
VSimpleName: buf
p64854
tp64855
I112
s(g16452
I42
g16453
Vinsert
p64856
I33
VNullLiteral
p64857
tp64858
I2
s(g6298
I42
g6299
Vinsert
p64859
I42
VSimpleName: computeTotalWeight
p64860
tp64861
I1
s(Vinsert
p64862
I42
VSimpleName: visit
p64863
Vinsert
p64864
I42
VSimpleName: column
p64865
tp64866
I1
s(Vinsert
p64867
I42
VSimpleName: toStatementList
p64868
Vinsert
p64869
I45
VStringLiteral: "create index index1 on t1(col1) comment 'test index' comment 'some test' using btree;"
p64870
tp64871
I1
s(g10846
I42
g10847
Vinsert
p64872
I21
VExpressionStatement
p64873
tp64874
I1
s(g12513
I42
g12514
Vinsert
p64875
I42
VSimpleName: passwordCallback
p64876
tp64877
I1
s(g26581
I42
g26582
Vinsert
p64878
I60
VVariableDeclarationStatement
p64879
tp64880
I1
s(g9608
I42
g9609
Vinsert
p64881
I42
VSimpleName: x509KeySpec
p64882
tp64883
I1
s(g1344
I42
g1345
Vinsert
p64884
I42
VSimpleName: browserChromeCount
p64885
tp64886
I1
s(g24686
I42
g24687
Vinsert
p64887
I42
VSimpleName: properties
p64888
tp64889
I2
s(g27822
I42
g27823
Vinsert
p64890
I21
VExpressionStatement
p64891
tp64892
I1
s(g2243
I42
g2244
Vinsert
p64893
I42
VSimpleName: equals
p64894
tp64895
I1
s(g15443
I42
g15444
Vinsert
p64896
I21
VExpressionStatement
p64897
tp64898
I1
s(g23761
I42
g23762
Vinsert
p64899
I21
VExpressionStatement
p64900
tp64901
I1
s(g221
I42
g222
Vinsert
p64902
I43
VSimpleType: ParserException
p64903
tp64904
I20
s(g28706
I42
g28707
Vinsert
p64905
I42
VSimpleName: option
p64906
tp64907
I2
s(g22782
I42
g22783
Vinsert
p64908
I42
VSimpleName: app
p64909
tp64910
I1
s(g8350
I42
g8351
Vinsert
p64911
I44
VSingleVariableDeclaration
p64912
tp64913
I18
s(g44887
I42
g44888
Vinsert
p64914
I83
VModifier: public
p64915
tp64916
I10
s(g17915
I42
g17916
Vinsert
p64917
I42
VSimpleName: row
p64918
tp64919
I1
s(g20486
I42
g20487
Vinsert
p64920
I43
VSimpleType: ArrayList
p64921
tp64922
I1
s(g6074
I42
g6075
Vinsert
p64923
I21
VExpressionStatement
p64924
tp64925
I2
s(Vinsert
p64926
I42
VSimpleName: assertEquals
p64927
Vinsert
p64928
I42
VSimpleName: close
p64929
tp64930
I15
s(g3826
I42
g3827
Vinsert
p64931
I43
VSimpleType: String
p64932
tp64933
I1
s(g801
I42
g802
Vinsert
p64934
I43
VSimpleType: String
p64935
tp64936
I1
s(g40136
I42
g40137
Vinsert
p64937
I42
VSimpleName: column
p64938
tp64939
I3
s(g18445
I42
g18446
Vinsert
p64940
I52
VThisExpression
p64941
tp64942
I1
s(g34423
I42
g34424
Vinsert
p64943
I42
VSimpleName: StringWriter
p64944
tp64945
I4
s(g5724
I42
g5725
Vinsert
p64946
I42
VSimpleName: CharsetParameter
p64947
tp64948
I2
s(g13607
I42
g13608
Vinsert
p64949
I42
VSimpleName: param
p64950
tp64951
I6
s(g6293
I42
g6294
Vinsert
p64952
I42
VSimpleName: column
p64953
tp64954
I1
s(g33452
I42
g33453
Vinsert
p64955
I8
VBlock
p64956
tp64957
I1
s(g690
I42
g691
Vinsert
p64958
I42
VSimpleName: druidDatasource
p64959
tp64960
I10
s(g2682
I42
g2683
Vinsert
p64961
I42
VSimpleName: SQLAlterTableItem
p64962
tp64963
I3
s(g7409
I42
g7410
Vinsert
p64964
I42
VSimpleName: dataSource
p64965
tp64966
I1
s(g10874
I42
g10875
Vinsert
p64967
I7
VAssignment: =
p64968
tp64969
I2
s(g7631
I42
g7632
Vinsert
p64970
I32
VMethodInvocation
p64971
tp64972
I4
s(g846
I42
g847
Vinsert
p64973
I59
VVariableDeclarationFragment
p64974
tp64975
I1
s(g9727
I42
g9728
Vinsert
p64976
I42
VSimpleName: statValue
p64977
tp64978
I2
s(g31366
I42
g31367
Vinsert
p64979
I42
VSimpleName: SQLBinaryOpExpr
p64980
tp64981
I1
s(g9267
I42
g9268
Vinsert
p64982
I42
VSimpleName: key
p64983
tp64984
I1
s(g60914
I42
g60915
Vinsert
p64985
I7
VAssignment: =
p64986
tp64987
I2
s(g25961
I42
g25962
Vinsert
p64988
I43
VSimpleType: SQLColumnDefinition
p64989
tp64990
I2
s(g20904
I42
g20905
Vinsert
p64991
I60
VVariableDeclarationStatement
p64992
tp64993
I1
s(Vinsert
p64994
I42
VSimpleName: println
p64995
Vinsert
p64996
I45
VStringLiteral: "WHERE projectId = ?"
p64997
tp64998
I1
s(g7469
I42
g7470
Vinsert
p64999
I21
VExpressionStatement
p65000
tp65001
I1
s(g32589
I42
g32590
Vinsert
p65002
I42
VSimpleName: elseIf
p65003
tp65004
I2
s(g8593
I42
g8594
Vinsert
p65005
I45
VStringLiteral: "com.alibaba.druid:type=JdbcStatManager"
p65006
tp65007
I1
s(g47192
I42
g47193
Vinsert
p65008
I42
VSimpleName: SQLStartTransactionStatement
p65009
tp65010
I1
s(g20500
I42
g20501
Vinsert
p65011
I42
VSimpleName: text
p65012
tp65013
I1
s(g15828
I42
g15829
Vinsert
p65014
I27
VInfixExpression: &&
p65015
tp65016
I1
s(g9475
I42
g9476
Vinsert
p65017
I45
VStringLiteral: "\u005ctBUFFER_POOL DEFAULT\u005cn"
p65018
tp65019
I12
s(g8350
I42
g8351
Vinsert
p65020
I42
VSimpleName: System
p65021
tp65022
I1
s(g3765
I42
g3766
Vinsert
p65023
I42
VSimpleName: String
p65024
tp65025
I8
s(g14072
I42
g14073
Vinsert
p65026
I21
VExpressionStatement
p65027
tp65028
I3
s(g3467
I42
g3468
Vinsert
p65029
I32
VMethodInvocation
p65030
tp65031
I1
s(g2780
I42
g2781
Vinsert
p65032
I43
VSimpleType: OracleSelectParser
p65033
tp65034
I1
s(g7898
I42
g7899
Vinsert
p65035
I42
VSimpleName: SQLSelectStatement
p65036
tp65037
I2
s(g15448
I42
g15449
Vinsert
p65038
I42
VSimpleName: setMaxActive
p65039
tp65040
I1
s(g25854
I42
g25855
Vinsert
p65041
I43
VSimpleType: Properties
p65042
tp65043
I2
s(g15702
I42
g15703
Vinsert
p65044
I42
VSimpleName: accept
p65045
tp65046
I3
s(g291
I42
g292
Vinsert
p65047
I33
VNullLiteral
p65048
tp65049
I1
s(g2682
I42
g2683
Vinsert
p65050
I34
VNumberLiteral: 0
p65051
tp65052
I4
s(g16075
I42
g16076
Vinsert
p65053
I42
VSimpleName: println
p65054
tp65055
I1
s(g17213
I42
g17214
Vinsert
p65056
I42
VSimpleName: AtomicLong
p65057
tp65058
I12
s(g4640
I42
g4641
Vinsert
p65059
I83
VModifier: public
p65060
tp65061
I1
s(g11585
I42
g11586
Vinsert
p65062
I42
VSimpleName: getReplaceCount
p65063
tp65064
I1
s(g9190
I42
g9191
Vinsert
p65065
I25
VIfStatement
p65066
tp65067
I1
s(g26174
I42
g26175
Vinsert
p65068
I42
VSimpleName: jdbcFetchRowCount
p65069
tp65070
I1
s(g4903
I42
g4904
Vinsert
p65071
I52
VThisExpression
p65072
tp65073
I2
s(g15108
I42
g15109
Vinsert
p65074
I42
VSimpleName: requestNumber
p65075
tp65076
I1
s(g7288
I42
g7289
Vinsert
p65077
I42
VSimpleName: dataSource
p65078
tp65079
I1
s(g9647
I42
g9648
Vinsert
p65080
I42
VSimpleName: ifNotExists
p65081
tp65082
I2
s(g8360
I42
g8361
Vinsert
p65083
I25
VIfStatement
p65084
tp65085
I1
s(g5374
I42
g5375
Vinsert
p65086
I40
VQualifiedName: SQLSetQuantifier.DISTINCT
p65087
tp65088
I1
s(g20796
I42
g20797
Vinsert
p65089
I83
VModifier: public
p65090
tp65091
I2
s(g25293
I42
g25294
Vinsert
p65092
I42
VSimpleName: like
p65093
tp65094
I1
s(g32847
I42
g32848
Vinsert
p65095
I32
VMethodInvocation
p65096
tp65097
I95
s(g9559
I42
g9560
Vinsert
p65098
I21
VExpressionStatement
p65099
tp65100
I2
s(g3806
I42
g3807
Vinsert
p65101
I32
VMethodInvocation
p65102
tp65103
I10
s(g1888
I42
g1889
Vinsert
p65104
I42
VSimpleName: updateTime
p65105
tp65106
I1
s(g4298
I42
g4299
Vinsert
p65107
I8
VBlock
p65108
tp65109
I1
s(g11105
I42
g11106
Vinsert
p65110
I31
VMethodDeclaration
p65111
tp65112
I72
s(g4859
I42
g4860
Vinsert
p65113
I42
VSimpleName: value
p65114
tp65115
I1
s(g5979
I42
g5980
Vinsert
p65116
I44
VSingleVariableDeclaration
p65117
tp65118
I2
s(g25152
I42
g25153
Vinsert
p65119
I54
VTryStatement
p65120
tp65121
I1
s(g1027
I42
g1028
Vinsert
p65122
I42
VSimpleName: ucase
p65123
tp65124
I1
s(g20564
I42
g20565
Vinsert
p65125
I44
VSingleVariableDeclaration
p65126
tp65127
I1
s(g15485
I42
g15486
Vinsert
p65128
I43
VSimpleType: UnsupportedOperationException
p65129
tp65130
I1
s(g48730
I42
g48731
Vinsert
p65131
I26
VImportDeclaration
p65132
tp65133
I1
s(g6689
I42
g6690
Vinsert
p65134
I42
VSimpleName: configFromProperties
p65135
tp65136
I1
s(g24206
I42
g24207
Vinsert
p65137
I45
VStringLiteral: "PARTITION BY HASH (COL) (\u005cn"
p65138
tp65139
I1
s(g12435
I42
g12436
Vinsert
p65140
I31
VMethodDeclaration
p65141
tp65142
I1
s(g2372
I42
g2373
Vinsert
p65143
I33
VNullLiteral
p65144
tp65145
I1
s(g25834
I42
g25835
Vinsert
p65146
I42
VSimpleName: FNVUtils
p65147
tp65148
I6
s(g8583
I42
g8584
Vinsert
p65149
I42
VSimpleName: isSlaveFail
p65150
tp65151
I1
s(g9475
I42
g9476
Vinsert
p65152
I45
VStringLiteral: "TABLESPACE \u005c"TBS_JWGZPT\u005c"\u005cn"
p65153
tp65154
I2
s(g3437
I42
g3438
Vinsert
p65155
I43
VSimpleType: DruidDataSource
p65156
tp65157
I3
s(g16264
I42
g16265
Vinsert
p65158
I60
VVariableDeclarationStatement
p65159
tp65160
I3
s(g25268
I42
g25269
Vinsert
p65161
I33
VNullLiteral
p65162
tp65163
I11
s(g27056
I42
g27057
Vinsert
p65164
I42
VSimpleName: SQLCharactorDataType
p65165
tp65166
I2
s(g25074
I42
g25075
Vinsert
p65167
I59
VVariableDeclarationFragment
p65168
tp65169
I1
s(g2188
I42
g2189
Vinsert
p65170
I42
VSimpleName: dataType
p65171
tp65172
I1
s(g4689
I42
g4690
Vinsert
p65173
I45
VStringLiteral: "\u005ct\u005ct\u005ct, P.COST_PRICE04, P.CONFIRM_ITEM_PARAM, P.CONFIRM_FLAG04, P.OLD_COST, P.LIST_PRICE\u005cn"
p65174
tp65175
I1
s(g12289
I42
g12290
Vinsert
p65176
I27
VInfixExpression: !=
p65177
tp65178
I1
s(g5538
I42
g5539
Vinsert
p65179
I42
VSimpleName: dataSource
p65180
tp65181
I1
s(g1670
I42
g1671
Vinsert
p65182
I8
VBlock
p65183
tp65184
I5
s(g11187
I42
g11188
Vinsert
p65185
I32
VMethodInvocation
p65186
tp65187
I2
s(g419
I42
g420
Vinsert
p65188
I25
VIfStatement
p65189
tp65190
I1
s(g2987
I42
g2988
Vinsert
p65191
I42
VSimpleName: b
p65192
tp65193
I1
s(g8142
I42
g8143
Vinsert
p65194
I42
VSimpleName: lexer
p65195
tp65196
I2
s(g507
I42
g508
Vinsert
p65197
I34
VNumberLiteral: 0
p65198
tp65199
I2
s(g15702
I42
g15703
Vinsert
p65200
I52
VThisExpression
p65201
tp65202
I3
s(g47044
I42
g47045
Vinsert
p65203
I45
VStringLiteral: "\u005ct\u005c"SOURCE_CODE\u005c" VARCHAR2(32) NOT NULL ENABLE, \u005cn"
p65204
tp65205
I1
s(g19315
I42
g19316
Vinsert
p65206
I42
VSimpleName: x
p65207
tp65208
I5
s(g11150
I42
g11151
Vinsert
p65209
I42
VSimpleName: expr
p65210
tp65211
I22
s(g25152
I42
g25153
Vinsert
p65212
I42
VSimpleName: SQLException
p65213
tp65214
I1
s(g9534
I42
g9535
Vinsert
p65215
I83
VModifier: private
p65216
tp65217
I1
s(g5538
I42
g5539
Vinsert
p65218
I45
VStringLiteral: "jdbc:mysql://localhost:3306/druid-monitor"
p65219
tp65220
I1
s(g8643
I42
g8644
Vinsert
p65221
I42
VSimpleName: lexer
p65222
tp65223
I1
s(g31452
I42
g31453
Vinsert
p65224
I40
VQualifiedName: Token.OF
p65225
tp65226
I2
s(g17387
I42
g17388
Vinsert
p65227
I42
VSimpleName: Column
p65228
tp65229
I2
s(g25125
I42
g25126
Vinsert
p65230
I14
VClassInstanceCreation
p65231
tp65232
I1
s(g45673
I42
g45674
Vinsert
p65233
I40
VQualifiedName: Token.OF
p65234
tp65235
I1
s(g7991
I42
g7992
Vinsert
p65236
I42
VSimpleName: WallConfig
p65237
tp65238
I1
s(g46870
I42
g46871
Vinsert
p65239
I45
VStringLiteral: "\u005cn\u005ctCONSTRAINT loc_id_pk PRIMARY KEY (location_id)"
p65240
tp65241
I2
s(g1604
I42
g1605
Vinsert
p65242
I42
VSimpleName: xid
p65243
tp65244
I1
s(g12573
I42
g12574
Vinsert
p65245
I60
VVariableDeclarationStatement
p65246
tp65247
I1
s(g366
I42
g367
Vinsert
p65248
I43
VSimpleType: String
p65249
tp65250
I8
s(g26160
I42
g26161
Vinsert
p65251
I42
VSimpleName: getValue
p65252
tp65253
I1
s(g5480
I42
g5481
Vinsert
p65254
I42
VSimpleName: dataSource
p65255
tp65256
I4
s(g6529
I42
g6530
Vinsert
p65257
I41
VReturnStatement
p65258
tp65259
I1
s(g1461
I42
g1462
Vinsert
p65260
I42
VSimpleName: setDbType
p65261
tp65262
I1
s(g2895
I42
g2896
Vinsert
p65263
I25
VIfStatement
p65264
tp65265
I1
s(g16123
I42
g16124
Vinsert
p65266
I8
VBlock
p65267
tp65268
I2
s(g23872
I42
g23873
Vinsert
p65269
I42
VSimpleName: SQLASTVisitor
p65270
tp65271
I56
s(Vinsert
p65272
I42
VSimpleName: assertEquals
p65273
Vinsert
p65274
I45
VStringLiteral: "SELECT DISTINCT type\u005cnFROM dbmis2_databases"
p65275
tp65276
I1
s(g1780
I42
g1781
Vinsert
p65277
I83
VModifier: protected
p65278
tp65279
I1
s(g18016
I42
g18017
Vinsert
p65280
I42
VSimpleName: required
p65281
tp65282
I1
s(g449
I42
g450
Vinsert
p65283
I32
VMethodInvocation
p65284
tp65285
I133
s(g9629
I42
g9630
Vinsert
p65286
I42
VSimpleName: isPermitSchema
p65287
tp65288
I1
s(g11420
I42
g11421
Vinsert
p65289
I42
VSimpleName: lexer
p65290
tp65291
I1
s(g20248
I42
g20249
Vinsert
p65292
I25
VIfStatement
p65293
tp65294
I1
s(g17467
I42
g17468
Vinsert
p65295
I42
VSimpleName: visitor
p65296
tp65297
I2
s(g10066
I42
g10067
Vinsert
p65298
I11
VCastExpression
p65299
tp65300
I8
s(g22774
I42
g22775
Vinsert
p65301
I39
VPrimitiveType: void
p65302
tp65303
I2
s(g27454
I42
g27455
Vinsert
p65304
I34
VNumberLiteral: 1
p65305
tp65306
I1
s(g35007
I42
g35008
Vinsert
p65307
I14
VClassInstanceCreation
p65308
tp65309
I1
s(g26998
I42
g26999
Vinsert
p65310
I42
VSimpleName: StringUtils
p65311
tp65312
I2
s(g901
I42
g902
Vinsert
p65313
I13
VCharacterLiteral: '`'
p65314
tp65315
I3
s(g7991
I42
g7992
Vinsert
p65316
I21
VExpressionStatement
p65317
tp65318
I2
s(g2800
I42
g2801
Vinsert
p65319
I45
VStringLiteral: "DESCRIBE "
p65320
tp65321
I1
s(g16375
I42
g16376
Vinsert
p65322
I27
VInfixExpression: !=
p65323
tp65324
I1
s(g7176
I42
g7177
Vinsert
p65325
I27
VInfixExpression: ==
p65326
tp65327
I1
s(g6909
I42
g6910
Vinsert
p65328
I11
VCastExpression
p65329
tp65330
I1
s(g32617
I42
g32618
Vinsert
p65331
I11
VCastExpression
p65332
tp65333
I1
s(g27840
I42
g27841
Vinsert
p65334
I32
VMethodInvocation
p65335
tp65336
I3
s(g891
I42
g892
Vinsert
p65337
I42
VSimpleName: ex
p65338
tp65339
I1
s(g23603
I42
g23604
Vinsert
p65340
I8
VBlock
p65341
tp65342
I7
s(Vinsert
p65343
I42
VSimpleName: getColumns
p65344
Vinsert
p65345
I42
VSimpleName: getColumns
p65346
tp65347
I8
s(g5510
I42
g5511
Vinsert
p65348
I42
VSimpleName: parameterize
p65349
tp65350
I1
s(g952
I42
g953
Vinsert
p65351
I25
VIfStatement
p65352
tp65353
I1
s(g11516
I42
g11517
Vinsert
p65354
I60
VVariableDeclarationStatement
p65355
tp65356
I5
s(g12209
I42
g12210
Vinsert
p65357
I25
VIfStatement
p65358
tp65359
I1
s(g512
I42
g513
Vinsert
p65360
I42
VSimpleName: dataSource
p65361
tp65362
I2
s(g16264
I42
g16265
Vinsert
p65363
I43
VSimpleType: Properties
p65364
tp65365
I4
s(g30607
I42
g30608
Vinsert
p65366
I45
VStringLiteral: "AGGREGATE\u005cn"
p65367
tp65368
I1
s(g1385
I42
g1386
Vinsert
p65369
I25
VIfStatement
p65370
tp65371
I2
s(g3949
I42
g3950
Vinsert
p65372
I42
VSimpleName: stmt
p65373
tp65374
I2
s(g3027
I42
g3028
Vinsert
p65375
I42
VSimpleName: params
p65376
tp65377
I1
s(g21913
I42
g21914
Vinsert
p65378
I59
VVariableDeclarationFragment
p65379
tp65380
I17
s(g31826
I42
g31827
Vinsert
p65381
I41
VReturnStatement
p65382
tp65383
I20
s(g17739
I42
g17740
Vinsert
p65384
I42
VSimpleName: ProxyClient
p65385
tp65386
I1
s(g7482
I42
g7483
Vinsert
p65387
I42
VSimpleName: selectItemHasAllColumn
p65388
tp65389
I1
s(g8863
I42
g8864
Vinsert
p65390
I45
VStringLiteral: "LOG"
p65391
tp65392
I6
s(g28885
I42
g28886
Vinsert
p65393
I42
VSimpleName: filter
p65394
tp65395
I1
s(g47581
I42
g47582
Vinsert
p65396
I9
VBooleanLiteral: false
p65397
tp65398
I4
s(g11542
I42
g11543
Vinsert
p65399
I42
VSimpleName: i
p65400
tp65401
I5
s(g13808
I42
g13809
Vinsert
p65402
I27
VInfixExpression: ==
p65403
tp65404
I1
s(Vinsert
p65405
I42
VSimpleName: expr
p65406
Vinsert
p65407
I42
VSimpleName: PGPolygonExpr
p65408
tp65409
I2
s(g4972
I42
g4973
Vinsert
p65410
I42
VSimpleName: column
p65411
tp65412
I1
s(g7607
I42
g7608
Vinsert
p65413
I45
VStringLiteral: "IPC"
p65414
tp65415
I1
s(g32738
I42
g32739
Vinsert
p65416
I43
VSimpleType: SQLListExpr
p65417
tp65418
I1
s(g49024
I42
g49025
Vinsert
p65419
I42
VSimpleName: JdbcUtils
p65420
tp65421
I1
s(g4313
I42
g4314
Vinsert
p65422
I43
VSimpleType: PreparedStatementProxy
p65423
tp65424
I2
s(g12435
I42
g12436
Vinsert
p65425
I83
VModifier: public
p65426
tp65427
I1
s(g2324
I42
g2325
Vinsert
p65428
I27
VInfixExpression: /
p65429
tp65430
I1
s(g14316
I42
g14317
Vinsert
p65431
I42
VSimpleName: nanoSpan
p65432
tp65433
I1
s(g10864
I42
g10865
Vinsert
p65434
I42
VSimpleName: dbType
p65435
tp65436
I2
s(g2489
I42
g2490
Vinsert
p65437
I83
VModifier: protected
p65438
tp65439
I1
s(g13968
I42
g13969
Vinsert
p65440
I42
VSimpleName: SQLIdentifierExpr
p65441
tp65442
I2
s(g33656
I42
g33657
Vinsert
p65443
I45
VStringLiteral: "not support visitor type : "
p65444
tp65445
I21
s(g3674
I42
g3675
Vinsert
p65446
I42
VSimpleName: cv
p65447
tp65448
I1
s(g11150
I42
g11151
Vinsert
p65449
I42
VSimpleName: SQLIdentifierExpr
p65450
tp65451
I39
s(g24273
I42
g24274
Vinsert
p65452
I42
VSimpleName: SQLPropertyExpr
p65453
tp65454
I1
s(g8179
I42
g8180
Vinsert
p65455
I42
VSimpleName: statData
p65456
tp65457
I1
s(g25409
I42
g25410
Vinsert
p65458
I27
VInfixExpression: %
p65459
tp65460
I1
s(g2722
I42
g2723
Vinsert
p65461
I60
VVariableDeclarationStatement
p65462
tp65463
I1
s(g439
I42
g440
Vinsert
p65464
I42
VSimpleName: charset
p65465
tp65466
I1
s(g2870
I42
g2871
Vinsert
p65467
I42
VSimpleName: tableSource
p65468
tp65469
I3
s(g22439
I42
g22440
Vinsert
p65470
I27
VInfixExpression: -
p65471
tp65472
I1
s(g6455
I42
g6456
Vinsert
p65473
I42
VSimpleName: IllegalArgumentException
p65474
tp65475
I1
s(g3243
I42
g3244
Vinsert
p65476
I60
VVariableDeclarationStatement
p65477
tp65478
I2
s(g7264
I42
g7265
Vinsert
p65479
I42
VSimpleName: varName
p65480
tp65481
I2
s(g22556
I42
g22557
Vinsert
p65482
I11
VCastExpression
p65483
tp65484
I1
s(g19565
I42
g19566
Vinsert
p65485
I45
VStringLiteral: "\u005ctKEY `k_c` (`c_int`),\u005cn"
p65486
tp65487
I2
s(g19924
I42
g19925
Vinsert
p65488
I42
VSimpleName: SQLDeleteBuilder
p65489
tp65490
I1
s(g14279
I42
g14280
Vinsert
p65491
I45
VStringLiteral: "\u005ctWHERE a.username IS NOT NULL\u005cn"
p65492
tp65493
I1
s(g53827
I42
g53828
Vinsert
p65494
I42
VSimpleName: token
p65495
tp65496
I3
s(g31563
I42
g31564
Vinsert
p65497
I34
VNumberLiteral: 0
p65498
tp65499
I3
s(g7275
I42
g7276
Vinsert
p65500
I43
VSimpleType: String
p65501
tp65502
I19
s(g43380
I42
g43381
Vinsert
p65503
I42
VSimpleName: parent
p65504
tp65505
I1
s(g4921
I42
g4922
Vinsert
p65506
I45
VStringLiteral: "ORDER SIBLINGS BY "
p65507
tp65508
I1
s(g37893
I42
g37894
Vinsert
p65509
I42
VSimpleName: getGroup
p65510
tp65511
I1
s(g13677
I42
g13678
Vinsert
p65512
I42
VSimpleName: SQLExprTableSource
p65513
tp65514
I4
s(g9461
I42
g9462
Vinsert
p65515
I42
VSimpleName: isSimpleConstExpr
p65516
tp65517
I1
s(g1617
I42
g1618
Vinsert
p65518
I43
VSimpleType: SQLException
p65519
tp65520
I1
s(g241
I42
g242
Vinsert
p65521
I36
VParenthesizedExpression
p65522
tp65523
I7
s(g35983
I42
g35984
Vinsert
p65524
I42
VSimpleName: SchemaObjectImpl
p65525
tp65526
I1
s(g12753
I42
g12754
Vinsert
p65527
I42
VSimpleName: acceptChild
p65528
tp65529
I113
s(g10066
I42
g10067
Vinsert
p65530
I32
VMethodInvocation
p65531
tp65532
I8
s(g4293
I42
g4294
Vinsert
p65533
I42
VSimpleName: Exception
p65534
tp65535
I1
s(g5564
I42
g5565
Vinsert
p65536
I42
VSimpleName: name
p65537
tp65538
I1
s(g15345
I42
g15346
Vinsert
p65539
I42
VSimpleName: InvocationTargetException
p65540
tp65541
I1
s(g7888
I42
g7889
Vinsert
p65542
I43
VSimpleType: SQLServerStatementParser
p65543
tp65544
I2
s(g16264
I42
g16265
Vinsert
p65545
I14
VClassInstanceCreation
p65546
tp65547
I3
s(g2334
I42
g2335
Vinsert
p65548
I45
VStringLiteral: "PoolingCount"
p65549
tp65550
I1
s(g36179
I42
g36180
Vinsert
p65551
I42
VSimpleName: SQLInsertStatement
p65552
tp65553
I2
s(g19152
I42
g19153
Vinsert
p65554
I42
VSimpleName: AtomicLong
p65555
tp65556
I1
s(g45516
I42
g45517
Vinsert
p65557
I41
VReturnStatement
p65558
tp65559
I5
s(g47497
I42
g47498
Vinsert
p65560
I42
VSimpleName: test_like
p65561
tp65562
I1
s(g13032
I42
g13033
Vinsert
p65563
I42
VSimpleName: addArgument
p65564
tp65565
I1
s(g13981
I42
g13982
Vinsert
p65566
I39
VPrimitiveType: int
p65567
tp65568
I1
s(g18841
I42
g18842
Vinsert
p65569
I42
VSimpleName: lexer
p65570
tp65571
I1
s(Vinsert
p65572
I42
VSimpleName: visit
p65573
Vinsert
p65574
I42
VSimpleName: SQLAssignItem
p65575
tp65576
I2
s(g26624
I42
g26625
Vinsert
p65577
I42
VSimpleName: getLimit
p65578
tp65579
I1
s(g26638
I42
g26639
Vinsert
p65580
I42
VSimpleName: partitions
p65581
tp65582
I3
s(g10752
I42
g10753
Vinsert
p65583
I42
VSimpleName: x
p65584
tp65585
I1
s(g23113
I42
g23114
Vinsert
p65586
I42
VSimpleName: holder
p65587
tp65588
I1
s(Vinsert
p65589
I42
VSimpleName: visit
p65590
Vinsert
p65591
I42
VSimpleName: cursor
p65592
tp65593
I1
s(g846
I42
g847
Vinsert
p65594
I43
VSimpleType: SQLName
p65595
tp65596
I1
s(g18601
I42
g18602
Vinsert
p65597
I42
VSimpleName: SQLIdentifierExpr
p65598
tp65599
I1
s(Vinsert
p65600
I42
VSimpleName: accept
p65601
Vinsert
p65602
I42
VSimpleName: with
p65603
tp65604
I4
s(g19383
I42
g19384
Vinsert
p65605
I42
VSimpleName: data1
p65606
tp65607
I2
s(g5615
I42
g5616
Vinsert
p65608
I83
VModifier: public
p65609
tp65610
I1
s(g31887
I42
g31888
Vinsert
p65611
I40
VQualifiedName: com.alibaba.druid.filter.FilterAdapter
p65612
tp65613
I1
s(g24531
I42
g24532
Vinsert
p65614
I59
VVariableDeclarationFragment
p65615
tp65616
I1
s(g10325
I42
g10326
Vinsert
p65617
I27
VInfixExpression: !=
p65618
tp65619
I14
s(g25683
I42
g25684
Vinsert
p65620
I40
VQualifiedName: Token.MERGE
p65621
tp65622
I1
s(g15500
I42
g15501
Vinsert
p65623
I76
VWildcardType: ?
p65624
tp65625
I2
s(g1710
I42
g1711
Vinsert
p65626
I42
VSimpleName: ManagementFactory
p65627
tp65628
I3
s(g4814
I42
g4815
Vinsert
p65629
I43
VSimpleType: String
p65630
tp65631
I2
s(g12299
I42
g12300
Vinsert
p65632
I44
VSingleVariableDeclaration
p65633
tp65634
I4
s(g8929
I42
g8930
Vinsert
p65635
I42
VSimpleName: WebRequestStat
p65636
tp65637
I2
s(g1420
I42
g1421
Vinsert
p65638
I43
VSimpleType: SQLSelectQueryBlock
p65639
tp65640
I1
s(g2870
I42
g2871
Vinsert
p65641
I42
VSimpleName: SQLTableSource
p65642
tp65643
I3
s(g106
I42
g107
Vinsert
p65644
I8
VBlock
p65645
tp65646
I1
s(g5123
I42
g5124
Vinsert
p65647
I2
VArrayAccess
p65648
tp65649
I1
s(g14266
I42
g14267
Vinsert
p65650
I25
VIfStatement
p65651
tp65652
I1
s(g26252
I42
g26253
Vinsert
p65653
I45
VStringLiteral: "CONCAT"
p65654
tp65655
I2
s(g17093
I42
g17094
Vinsert
p65656
I42
VSimpleName: returnJSONBasicStat
p65657
tp65658
I3
s(g1334
I42
g1335
Vinsert
p65659
I45
VStringLiteral: "\u005cn\u005ctDELETE_REASON_ NVARCHAR2(2000),"
p65660
tp65661
I2
s(g15294
I42
g15295
Vinsert
p65662
I42
VSimpleName: user
p65663
tp65664
I1
s(g4457
I42
g4458
Vinsert
p65665
I27
VInfixExpression: !=
p65666
tp65667
I1
s(g7450
I42
g7451
Vinsert
p65668
I42
VSimpleName: enumeration
p65669
tp65670
I2
s(g4694
I42
g4695
Vinsert
p65671
I45
VStringLiteral: "\u005ct\u005ctBUFFER_POOL DEFAULT\u005cn"
p65672
tp65673
I7
s(g10864
I42
g10865
Vinsert
p65674
I8
VBlock
p65675
tp65676
I2
s(g2634
I42
g2635
Vinsert
p65677
I9
VBooleanLiteral: false
p65678
tp65679
I1
s(g18796
I42
g18797
Vinsert
p65680
I70
VEnhancedForStatement
p65681
tp65682
I1
s(g10854
I42
g10855
Vinsert
p65683
I42
VSimpleName: param
p65684
tp65685
I1
s(g28321
I42
g28322
Vinsert
p65686
I43
VSimpleType: PoolableResultSet
p65687
tp65688
I2
s(g31887
I42
g31888
Vinsert
p65689
I42
VSimpleName: dataSource
p65690
tp65691
I2
s(g7986
I42
g7987
Vinsert
p65692
I40
VQualifiedName: Token.FOREIGN
p65693
tp65694
I2
s(g19278
I42
g19279
Vinsert
p65695
I32
VMethodInvocation
p65696
tp65697
I1
s(g1868
I42
g1869
Vinsert
p65698
I41
VReturnStatement
p65699
tp65700
I1
s(g5310
I42
g5311
Vinsert
p65701
I42
VSimpleName: SQLException
p65702
tp65703
I2
s(g2997
I42
g2998
Vinsert
p65704
I43
VSimpleType: SQLException
p65705
tp65706
I1
s(g15702
I42
g15703
Vinsert
p65707
I42
VSimpleName: decrementIndent
p65708
tp65709
I3
s(g21276
I42
g21277
Vinsert
p65710
I42
VSimpleName: assertEquals
p65711
tp65712
I10
s(g8179
I42
g8180
Vinsert
p65713
I59
VVariableDeclarationFragment
p65714
tp65715
I1
s(g14754
I42
g14755
Vinsert
p65716
I33
VNullLiteral
p65717
tp65718
I1
s(g22238
I42
g22239
Vinsert
p65719
I42
VSimpleName: test_getWallStatMap
p65720
tp65721
I1
s(g7807
I42
g7808
Vinsert
p65722
I40
VQualifiedName: java.util.List
p65723
tp65724
I14
s(g6252
I42
g6253
Vinsert
p65725
I44
VSingleVariableDeclaration
p65726
tp65727
I1
s(g12011
I42
g12012
Vinsert
p65728
I45
VStringLiteral: "("
p65729
tp65730
I1
s(g7893
I42
g7894
Vinsert
p65731
I32
VMethodInvocation
p65732
tp65733
I24
s(g3462
I42
g3463
Vinsert
p65734
I8
VBlock
p65735
tp65736
I1
s(g6031
I42
g6032
Vinsert
p65737
I25
VIfStatement
p65738
tp65739
I1
s(g5628
I42
g5629
Vinsert
p65740
I40
VQualifiedName: If.instance
p65741
tp65742
I1
s(g9345
I42
g9346
Vinsert
p65743
I42
VSimpleName: tables
p65744
tp65745
I1
s(g1309
I42
g1310
Vinsert
p65746
I45
VStringLiteral: "app_customer_license"
p65747
tp65748
I1
s(g6997
I42
g6998
Vinsert
p65749
I21
VExpressionStatement
p65750
tp65751
I3
s(g12661
I42
g12662
Vinsert
p65752
I42
VSimpleName: relationalRest
p65753
tp65754
I1
s(g8417
I42
g8418
Vinsert
p65755
I42
VSimpleName: columnHash
p65756
tp65757
I1
s(g7707
I42
g7708
Vinsert
p65758
I42
VSimpleName: lexer
p65759
tp65760
I1
s(g3992
I42
g3993
Vinsert
p65761
I62
VInstanceofExpression
p65762
tp65763
I1
s(g3134
I42
g3135
Vinsert
p65764
I42
VSimpleName: SQLUnaryExpr
p65765
tp65766
I1
s(g12985
I42
g12986
Vinsert
p65767
I42
VSimpleName: assertFalse
p65768
tp65769
I4
s(g17012
I42
g17013
Vinsert
p65770
I32
VMethodInvocation
p65771
tp65772
I5
s(g22494
I42
g22495
Vinsert
p65773
I42
VSimpleName: SQLCharExpr
p65774
tp65775
I1
s(g43329
I42
g43330
Vinsert
p65776
I34
VNumberLiteral: 10
p65777
tp65778
I1
s(g8603
I42
g8604
Vinsert
p65779
I42
VSimpleName: getPermitNames
p65780
tp65781
I2
s(g12448
I42
g12449
Vinsert
p65782
I52
VThisExpression
p65783
tp65784
I2
s(g17125
I42
g17126
Vinsert
p65785
I39
VPrimitiveType: void
p65786
tp65787
I2
s(g47519
I42
g47520
Vinsert
p65788
I43
VSimpleType: SQLAlterTableEnableConstraint
p65789
tp65790
I1
s(g23403
I42
g23404
Vinsert
p65791
I42
VSimpleName: param
p65792
tp65793
I4
s(g3297
I42
g3298
Vinsert
p65794
I39
VPrimitiveType: long
p65795
tp65796
I7
s(g11667
I42
g11668
Vinsert
p65797
I42
VSimpleName: put
p65798
tp65799
I2
s(g8350
I42
g8351
Vinsert
p65800
I45
VStringLiteral: "java.specification.version"
p65801
tp65802
I1
s(g1294
I42
g1295
Vinsert
p65803
I40
VQualifiedName: com.alibaba.druid.stat.JdbcStatManager
p65804
tp65805
I2
s(g10726
I42
g10727
Vinsert
p65806
I42
VSimpleName: conditionSql
p65807
tp65808
I3
s(Vinsert
p65809
I42
VSimpleName: clone
p65810
Vinsert
p65811
I40
VQualifiedName: x.expr
p65812
tp65813
I1
s(g5699
I42
g5700
Vinsert
p65814
I42
VSimpleName: nextToken
p65815
tp65816
I1
s(g18648
I42
g18649
Vinsert
p65817
I54
VTryStatement
p65818
tp65819
I1
s(g7224
I42
g7225
Vinsert
p65820
I42
VSimpleName: dataType
p65821
tp65822
I1
s(g3982
I42
g3983
Vinsert
p65823
I52
VThisExpression
p65824
tp65825
I1
s(g7565
I42
g7566
Vinsert
p65826
I42
VSimpleName: visit
p65827
tp65828
I2
s(g1923
I42
g1924
Vinsert
p65829
I8
VBlock
p65830
tp65831
I4
s(g37815
I42
g37816
Vinsert
p65832
I27
VInfixExpression: !=
p65833
tp65834
I2
s(g876
I42
g877
Vinsert
p65835
I45
VStringLiteral: "\u005ctcame_from STRING\u005cn"
p65836
tp65837
I1
s(g8360
I42
g8361
Vinsert
p65838
I27
VInfixExpression: !=
p65839
tp65840
I1
s(Vinsert
p65841
I42
VSimpleName: getLexer
p65842
Vinsert
p65843
I42
VSimpleName: SQLSelectParser
p65844
tp65845
I1
s(g8760
I42
g8761
Vinsert
p65846
I42
VSimpleName: countSelect
p65847
tp65848
I1
s(g26080
I42
g26081
Vinsert
p65849
I42
VSimpleName: Notification
p65850
tp65851
I2
s(g2243
I42
g2244
Vinsert
p65852
I25
VIfStatement
p65853
tp65854
I1
s(g12189
I42
g12190
Vinsert
p65855
I9
VBooleanLiteral: true
p65856
tp65857
I1
s(g5118
I42
g5119
Vinsert
p65858
I42
VSimpleName: String
p65859
tp65860
I1
s(g14034
I42
g14035
Vinsert
p65861
I45
VStringLiteral: "FROM b\u005cn"
p65862
tp65863
I1
s(g2294
I42
g2295
Vinsert
p65864
I42
VSimpleName: ucase
p65865
tp65866
I1
s(g51347
I42
g51348
Vinsert
p65867
I42
VSimpleName: rightResult
p65868
tp65869
I1
s(g8706
I42
g8707
Vinsert
p65870
I36
VParenthesizedExpression
p65871
tp65872
I3
s(g6288
I42
g6289
Vinsert
p65873
I42
VSimpleName: String
p65874
tp65875
I1
s(g2243
I42
g2244
Vinsert
p65876
I45
VStringLiteral: "false"
p65877
tp65878
I1
s(g4725
I42
g4726
Vinsert
p65879
I42
VSimpleName: Attribute
p65880
tp65881
I1
s(g7111
I42
g7112
Vinsert
p65882
I21
VExpressionStatement
p65883
tp65884
I3
s(g12523
I42
g12524
Vinsert
p65885
I32
VMethodInvocation
p65886
tp65887
I3
s(g6699
I42
g6700
Vinsert
p65888
I43
VSimpleType: Exception
p65889
tp65890
I2
s(g8298
I42
g8299
Vinsert
p65891
I22
VFieldAccess
p65892
tp65893
I11
s(g15602
I42
g15603
Vinsert
p65894
I42
VSimpleName: userSpec
p65895
tp65896
I1
s(g24247
I42
g24248
Vinsert
p65897
I31
VMethodDeclaration
p65898
tp65899
I3
s(Vinsert
p65900
I42
VSimpleName: accept
p65901
Vinsert
p65902
I38
VPrefixExpression: ++
p65903
tp65904
I2
s(g891
I42
g892
Vinsert
p65905
I45
VStringLiteral: "F2"
p65906
tp65907
I1
s(g24062
I42
g24063
Vinsert
p65908
I45
VStringLiteral: "\u005ct\u005ctTABLESPACE \u005c"APPINDX1M\u005c"\u005cn"
p65909
tp65910
I1
s(Vinsert
p65911
I42
VSimpleName: put
p65912
Vinsert
p65913
I45
VStringLiteral: "SELECT"
p65914
tp65915
I1
s(g11492
I42
g11493
Vinsert
p65916
I42
VSimpleName: id
p65917
tp65918
I2
s(g5936
I42
g5937
Vinsert
p65919
I45
VStringLiteral: "order by cnt desc\u005cn"
p65920
tp65921
I1
s(g8475
I42
g8476
Vinsert
p65922
I60
VVariableDeclarationStatement
p65923
tp65924
I7
s(g4602
I42
g4603
Vinsert
p65925
I42
VSimpleName: getOperator
p65926
tp65927
I1
s(g3841
I42
g3842
Vinsert
p65928
I42
VSimpleName: println
p65929
tp65930
I1
s(g15097
I42
g15098
Vinsert
p65931
I42
VSimpleName: assertFalse
p65932
tp65933
I6
s(Vinsert
p65934
I42
VSimpleName: countDown
p65935
Vinsert
p65936
I54
VTryStatement
p65937
tp65938
I5
s(g14933
I42
g14934
Vinsert
p65939
I43
VSimpleType: MySqlASTVisitor
p65940
tp65941
I1
s(Vinsert
p65942
I42
VSimpleName: getConnection
p65943
Vinsert
p65944
I45
VStringLiteral: "SELECT 1"
p65945
tp65946
I3
s(g23258
I42
g23259
Vinsert
p65947
I42
VSimpleName: assertEquals
p65948
tp65949
I1
s(g331
I42
g332
Vinsert
p65950
I42
VSimpleName: ucase
p65951
tp65952
I1
s(g21572
I42
g21573
Vinsert
p65953
I21
VExpressionStatement
p65954
tp65955
I3
s(g20840
I42
g20841
Vinsert
p65956
I25
VIfStatement
p65957
tp65958
I2
s(g55094
I42
g55095
Vinsert
p65959
I43
VSimpleType: SQLBooleanExpr
p65960
tp65961
I1
s(g6442
I42
g6443
Vinsert
p65962
I45
VStringLiteral: "    ) seller_nick using(buyer_nick) "
p65963
tp65964
I1
s(g9475
I42
g9476
Vinsert
p65965
I45
VStringLiteral: "\u005ctFREELISTS 1\u005cn"
p65966
tp65967
I12
s(g9796
I42
g9797
Vinsert
p65968
I46
VSuperConstructorInvocation
p65969
tp65970
I3
s(g5287
I42
g5288
Vinsert
p65971
I83
VModifier: public
p65972
tp65973
I164
s(g30294
I42
g30295
Vinsert
p65974
I42
VSimpleName: setInt
p65975
tp65976
I1
s(g3806
I42
g3807
Vinsert
p65977
I45
VStringLiteral: " FOR "
p65978
tp65979
I1
s(g16625
I42
g16626
Vinsert
p65980
I43
VSimpleType: Exception
p65981
tp65982
I2
s(g5123
I42
g5124
Vinsert
p65983
I42
VSimpleName: i
p65984
tp65985
I3
s(g33079
I42
g33080
Vinsert
p65986
I44
VSingleVariableDeclaration
p65987
tp65988
I1
s(g836
I42
g837
Vinsert
p65989
I27
VInfixExpression: !=
p65990
tp65991
I2
s(g1554
I42
g1555
Vinsert
p65992
I43
VSimpleType: Log4jImpl
p65993
tp65994
I2
s(g7697
I42
g7698
Vinsert
p65995
I45
VStringLiteral: "FROM search_graph;"
p65996
tp65997
I1
s(g8080
I42
g8081
Vinsert
p65998
I42
VSimpleName: params
p65999
tp66000
I1
s(g6455
I42
g6456
Vinsert
p66001
I7
VAssignment: =
p66002
tp66003
I1
s(g10169
I42
g10170
Vinsert
p66004
I45
VStringLiteral: "PARTITION "
p66005
tp66006
I1
s(g4303
I42
g4304
Vinsert
p66007
I45
VStringLiteral: "\u005ctEND;\u005cn"
p66008
tp66009
I3
s(g13493
I42
g13494
Vinsert
p66010
I42
VSimpleName: ParameterizedVisitor
p66011
tp66012
I3
s(g7201
I42
g7202
Vinsert
p66013
I52
VThisExpression
p66014
tp66015
I1
s(g23854
I42
g23855
Vinsert
p66016
I59
VVariableDeclarationFragment
p66017
tp66018
I1
s(g3467
I42
g3468
Vinsert
p66019
I27
VInfixExpression: !=
p66020
tp66021
I1
s(g11991
I42
g11992
Vinsert
p66022
I22
VFieldAccess
p66023
tp66024
I9
s(g24159
I42
g24160
Vinsert
p66025
I53
VThrowStatement
p66026
tp66027
I1
s(g12560
I42
g12561
Vinsert
p66028
I43
VSimpleType: IllegalSQLObjectViolation
p66029
tp66030
I1
s(g25125
I42
g25126
Vinsert
p66031
I42
VSimpleName: RsaDecrypter
p66032
tp66033
I2
s(g3287
I42
g3288
Vinsert
p66034
I43
VSimpleType: SQLException
p66035
tp66036
I1
s(g4964
I42
g4965
Vinsert
p66037
I43
VSimpleType: PoolableCallableStatement
p66038
tp66039
I1
s(g47573
I42
g47574
Vinsert
p66040
I59
VVariableDeclarationFragment
p66041
tp66042
I23
s(g2329
I42
g2330
Vinsert
p66043
I52
VThisExpression
p66044
tp66045
I1
s(g5328
I42
g5329
Vinsert
p66046
I39
VPrimitiveType: void
p66047
tp66048
I1
s(g21499
I42
g21500
Vinsert
p66049
I59
VVariableDeclarationFragment
p66050
tp66051
I1
s(Vinsert
p66052
I42
VSimpleName: asList
p66053
Vinsert
p66054
I42
VSimpleName: dataSource
p66055
tp66056
I1
s(g1304
I42
g1305
Vinsert
p66057
I21
VExpressionStatement
p66058
tp66059
I1
s(g9089
I42
g9090
Vinsert
p66060
I43
VSimpleType: Exception
p66061
tp66062
I1
s(g1160
I42
g1161
Vinsert
p66063
I43
VSimpleType: Long
p66064
tp66065
I1
s(g13264
I42
g13265
Vinsert
p66066
I45
VStringLiteral: "INITRANS"
p66067
tp66068
I1
s(g31177
I42
g31178
Vinsert
p66069
I52
VThisExpression
p66070
tp66071
I4
s(g24043
I42
g24044
Vinsert
p66072
I42
VSimpleName: setTimeBetweenEvictionRunsMillis
p66073
tp66074
I2
s(g1100
I42
g1101
Vinsert
p66075
I21
VExpressionStatement
p66076
tp66077
I1
s(Vinsert
p66078
I42
VSimpleName: setParent
p66079
Vinsert
p66080
I42
VSimpleName: argument
p66081
tp66082
I6
s(g29475
I42
g29476
Vinsert
p66083
I42
VSimpleName: builder
p66084
tp66085
I3
s(g9954
I42
g9955
Vinsert
p66086
I42
VSimpleName: statValue
p66087
tp66088
I2
s(Vinsert
p66089
I42
VSimpleName: assertEquals
p66090
Vinsert
p66091
I45
VStringLiteral: "\u005cn\u005ctTRUNCATE PARTITION p1"
p66092
tp66093
I1
s(g27586
I42
g27587
Vinsert
p66094
I42
VSimpleName: ParserException
p66095
tp66096
I1
s(g29767
I42
g29768
Vinsert
p66097
I43
VSimpleType: SQLArrayExpr
p66098
tp66099
I2
s(g1760
I42
g1761
Vinsert
p66100
I42
VSimpleName: lock
p66101
tp66102
I2
s(g30732
I42
g30733
Vinsert
p66103
I42
VSimpleName: buf
p66104
tp66105
I3
s(g3365
I42
g3366
Vinsert
p66106
I42
VSimpleName: Reader
p66107
tp66108
I1
s(g24542
I42
g24543
Vinsert
p66109
I42
VSimpleName: SQLSelectStatement
p66110
tp66111
I3
s(Vinsert
p66112
I42
VSimpleName: assertTrue
p66113
Vinsert
p66114
I45
VStringLiteral: "SELECT c from sbtest where id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 or id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0 and id=0"
p66115
tp66116
I1
s(g13437
I42
g13438
Vinsert
p66117
I45
VStringLiteral: "\u005ct) t ON t.regid = supReg.regid \u005cn"
p66118
tp66119
I1
s(g26581
I42
g26582
Vinsert
p66120
I8
VBlock
p66121
tp66122
I2
s(g55772
I42
g55773
Vinsert
p66123
I42
VSimpleName: assertNotNull
p66124
tp66125
I2
s(g25573
I42
g25574
Vinsert
p66126
I42
VSimpleName: Object
p66127
tp66128
I1
s(g9327
I42
g9328
Vinsert
p66129
I42
VSimpleName: IOException
p66130
tp66131
I1
s(g5946
I42
g5947
Vinsert
p66132
I42
VSimpleName: SQLException
p66133
tp66134
I1
s(g28493
I42
g28494
Vinsert
p66135
I42
VSimpleName: PGSchemaStatVisitor
p66136
tp66137
I8
s(g34790
I42
g34791
Vinsert
p66138
I27
VInfixExpression: &&
p66139
tp66140
I8
s(g1420
I42
g1421
Vinsert
p66141
I43
VSimpleType: SQLASTOutputVisitor
p66142
tp66143
I21
s(g10942
I42
g10943
Vinsert
p66144
I21
VExpressionStatement
p66145
tp66146
I2
s(g23744
I42
g23745
Vinsert
p66147
I45
VStringLiteral: "filename"
p66148
tp66149
I1
s(g16123
I42
g16124
Vinsert
p66150
I42
VSimpleName: session
p66151
tp66152
I2
s(g2930
I42
g2931
Vinsert
p66153
I21
VExpressionStatement
p66154
tp66155
I1
s(g18289
I42
g18290
Vinsert
p66156
I21
VExpressionStatement
p66157
tp66158
I8
s(g876
I42
g877
Vinsert
p66159
I45
VStringLiteral: "CLUSTERED BY (userid)\u005cn"
p66160
tp66161
I1
s(g7932
I42
g7933
Vinsert
p66162
I42
VSimpleName: d1
p66163
tp66164
I2
s(g11654
I42
g11655
Vinsert
p66165
I42
VSimpleName: x
p66166
tp66167
I2
s(g11996
I42
g11997
Vinsert
p66168
I42
VSimpleName: val
p66169
tp66170
I1
s(g23899
I42
g23900
Vinsert
p66171
I42
VSimpleName: getProperty
p66172
tp66173
I1
s(g17250
I42
g17251
Vinsert
p66174
I42
VSimpleName: OracleLexer
p66175
tp66176
I1
s(g16208
I42
g16209
Vinsert
p66177
I42
VSimpleName: setMaxIdle
p66178
tp66179
I1
s(g27830
I42
g27831
Vinsert
p66180
I42
VSimpleName: MySqlExprParser
p66181
tp66182
I13
s(g18404
I42
g18405
Vinsert
p66183
I45
VStringLiteral: "\u005ctMEMBER FUNCTION plus (x rational) RETURN rational\u005cn"
p66184
tp66185
I1
s(g24649
I42
g24650
Vinsert
p66186
I25
VIfStatement
p66187
tp66188
I1
s(Vinsert
p66189
I42
VSimpleName: token
p66190
Vinsert
p66191
I42
VSimpleName: tableName
p66192
tp66193
I4
s(g3093
I42
g3094
Vinsert
p66194
I42
VSimpleName: resultSet
p66195
tp66196
I4
s(g40866
I42
g40867
Vinsert
p66197
I43
VSimpleType: FactoryBean
p66198
tp66199
I1
s(g597
I42
g598
Vinsert
p66200
I42
VSimpleName: getInfoCount
p66201
tp66202
I1
s(g3584
I42
g3585
Vinsert
p66203
I42
VSimpleName: MockStatement
p66204
tp66205
I1
s(Vinsert
p66206
I42
VSimpleName: setParent
p66207
Vinsert
p66208
I42
VSimpleName: setFlashback
p66209
tp66210
I1
s(g7787
I42
g7788
Vinsert
p66211
I32
VMethodInvocation
p66212
tp66213
I1
s(g24043
I42
g24044
Vinsert
p66214
I42
VSimpleName: setMinEvictableIdleTimeMillis
p66215
tp66216
I2
s(g40269
I42
g40270
Vinsert
p66217
I42
VSimpleName: getTime
p66218
tp66219
I1
s(g5892
I42
g5893
Vinsert
p66220
I42
VSimpleName: MySqlLexer
p66221
tp66222
I1
s(g16123
I42
g16124
Vinsert
p66223
I42
VSimpleName: request
p66224
tp66225
I3
s(g18065
I42
g18066
Vinsert
p66226
I25
VIfStatement
p66227
tp66228
I1
s(g21577
I42
g21578
Vinsert
p66229
I42
VSimpleName: getInvokeCount
p66230
tp66231
I1
s(g1559
I42
g1560
Vinsert
p66232
I42
VSimpleName: dataTypes
p66233
tp66234
I2
s(g497
I42
g498
Vinsert
p66235
I33
VNullLiteral
p66236
tp66237
I2
s(g396
I42
g397
Vinsert
p66238
I42
VSimpleName: hintExpr
p66239
tp66240
I1
s(g10105
I42
g10106
Vinsert
p66241
I42
VSimpleName: SQLIdentifierExpr
p66242
tp66243
I2
s(g19984
I42
g19985
Vinsert
p66244
I27
VInfixExpression: <
p66245
tp66246
I1
s(g18054
I42
g18055
Vinsert
p66247
I45
VStringLiteral: "conditions : "
p66248
tp66249
I1
s(g8113
I42
g8114
Vinsert
p66250
I36
VParenthesizedExpression
p66251
tp66252
I1
s(g3452
I42
g3453
Vinsert
p66253
I42
VSimpleName: dataSource
p66254
tp66255
I9
s(g34863
I42
g34864
Vinsert
p66256
I41
VReturnStatement
p66257
tp66258
I2
s(g5699
I42
g5700
Vinsert
p66259
I42
VSimpleName: testExpr
p66260
tp66261
I1
s(g4898
I42
g4899
Vinsert
p66262
I27
VInfixExpression: ==
p66263
tp66264
I1
s(g1589
I42
g1590
Vinsert
p66265
I25
VIfStatement
p66266
tp66267
I1
s(g6521
I42
g6522
Vinsert
p66268
I42
VSimpleName: OracleHint
p66269
tp66270
I1
s(g5343
I42
g5344
Vinsert
p66271
I59
VVariableDeclarationFragment
p66272
tp66273
I1
s(Vinsert
p66274
I42
VSimpleName: setParent
p66275
Vinsert
p66276
I42
VSimpleName: setInitrans
p66277
tp66278
I1
s(g22294
I42
g22295
Vinsert
p66279
I42
VSimpleName: right
p66280
tp66281
I4
s(g59804
I42
g59805
Vinsert
p66282
I43
VSimpleType: WebURIStat
p66283
tp66284
I1
s(g25381
I42
g25382
Vinsert
p66285
I43
VSimpleType: DruidDataSource
p66286
tp66287
I2
s(g695
I42
g696
Vinsert
p66288
I43
VSimpleType: HashMap
p66289
tp66290
I3
s(g16792
I42
g16793
Vinsert
p66291
I42
VSimpleName: ColumnMetaData
p66292
tp66293
I2
s(g1075
I42
g1076
Vinsert
p66294
I42
VSimpleName: assertNotSame
p66295
tp66296
I1
s(g14303
I42
g14304
Vinsert
p66297
I42
VSimpleName: size
p66298
tp66299
I2
s(Vinsert
p66300
I42
VSimpleName: assertTrue
p66301
Vinsert
p66302
I42
VSimpleName: MySqlWallTest9
p66303
tp66304
I1
s(g4568
I42
g4569
Vinsert
p66305
I42
VSimpleName: item2
p66306
tp66307
I6
s(g14431
I42
g14432
Vinsert
p66308
I42
VSimpleName: tableName
p66309
tp66310
I5
s(g21572
I42
g21573
Vinsert
p66311
I42
VSimpleName: Override
p66312
tp66313
I1
s(g15188
I42
g15189
Vinsert
p66314
I42
VSimpleName: SQLUtils
p66315
tp66316
I138
s(g15793
I42
g15794
Vinsert
p66317
I43
VSimpleType: MySqlRenameTableStatement.Item
p66318
tp66319
I1
s(g48518
I42
g48519
Vinsert
p66320
I42
VSimpleName: DB2ASTVisitor
p66321
tp66322
I2
s(g14484
I42
g14485
Vinsert
p66323
I14
VClassInstanceCreation
p66324
tp66325
I381
s(g26260
I42
g26261
Vinsert
p66326
I42
VSimpleName: getLike
p66327
tp66328
I2
s(g5538
I42
g5539
Vinsert
p66329
I27
VInfixExpression: ||
p66330
tp66331
I2
s(g8067
I42
g8068
Vinsert
p66332
I42
VSimpleName: next
p66333
tp66334
I1
s(g9727
I42
g9728
Vinsert
p66335
I42
VSimpleName: reset
p66336
tp66337
I2
s(g39778
I42
g39779
Vinsert
p66338
I42
VSimpleName: SQLTableElement
p66339
tp66340
I1
s(g3898
I42
g3899
Vinsert
p66341
I43
VSimpleType: SQLSelectItem
p66342
tp66343
I1
s(g11885
I42
g11886
Vinsert
p66344
I45
VStringLiteral: "APPLY"
p66345
tp66346
I1
s(g40012
I42
g40013
Vinsert
p66347
I74
VParameterizedType: LinkedHashMap<String,Object>
p66348
tp66349
I10
s(g25381
I42
g25382
Vinsert
p66350
I43
VSimpleType: Exception
p66351
tp66352
I1
s(g33079
I42
g33080
Vinsert
p66353
I83
VModifier: public
p66354
tp66355
I1
s(g116
I42
g117
Vinsert
p66356
I83
VModifier: public
p66357
tp66358
I2
s(g15621
I42
g15622
Vinsert
p66359
I42
VSimpleName: VisitorFeature
p66360
tp66361
I2
s(g5859
I42
g5860
Vinsert
p66362
I33
VNullLiteral
p66363
tp66364
I1
s(g967
I42
g968
Vinsert
p66365
I34
VNumberLiteral: 0
p66366
tp66367
I3
s(g39953
I42
g39954
Vinsert
p66368
I42
VSimpleName: mergedSql
p66369
tp66370
I1
s(g23056
I42
g23057
Vinsert
p66371
I43
VSimpleType: MySqlStartTransactionStatement
p66372
tp66373
I2
s(g46106
I42
g46107
Vinsert
p66374
I42
VSimpleName: SQLAlterTableDisableKeys
p66375
tp66376
I2
s(g24730
I42
g24731
Vinsert
p66377
I42
VSimpleName: needRetry
p66378
tp66379
I1
s(g6961
I42
g6962
Vinsert
p66380
I42
VSimpleName: path
p66381
tp66382
I1
s(g25616
I42
g25617
Vinsert
p66383
I45
VStringLiteral: "SELECT ID, GMT_CREATE, utl_raw.cast_to_raw(CREATOR) AS CREATOR, GMT_MODIFIED, utl_raw.cast_to_raw(MODIFIER) AS MODIFIER\u005cn"
p66384
tp66385
I1
s(g17235
I42
g17236
Vinsert
p66386
I42
VSimpleName: SQLUtils
p66387
tp66388
I23
s(g4558
I42
g4559
Vinsert
p66389
I42
VSimpleName: now
p66390
tp66391
I1
s(g11920
I42
g11921
Vinsert
p66392
I42
VSimpleName: EnvironmentTestUtils
p66393
tp66394
I2
s(g31826
I42
g31827
Vinsert
p66395
I42
VSimpleName: target
p66396
tp66397
I2
s(Vinsert
p66398
I42
VSimpleName: token
p66399
Vinsert
p66400
I40
VQualifiedName: Token.IN
p66401
tp66402
I1
s(g11365
I42
g11366
Vinsert
p66403
I21
VExpressionStatement
p66404
tp66405
I1
s(g2930
I42
g2931
Vinsert
p66406
I45
VStringLiteral: " rely"
p66407
tp66408
I1
s(g23526
I42
g23527
Vinsert
p66409
I27
VInfixExpression: ==
p66410
tp66411
I1
s(g9307
I42
g9308
Vinsert
p66412
I42
VSimpleName: getKey
p66413
tp66414
I1
s(g3598
I42
g3599
Vinsert
p66415
I14
VClassInstanceCreation
p66416
tp66417
I1
s(g9456
I42
g9457
Vinsert
p66418
I43
VSimpleType: SQLPrimaryKey
p66419
tp66420
I1
s(g38882
I42
g38883
Vinsert
p66421
I40
VQualifiedName: Token.KEY
p66422
tp66423
I1
s(g4620
I42
g4621
Vinsert
p66424
I42
VSimpleName: treatExpr
p66425
tp66426
I1
s(g18173
I42
g18174
Vinsert
p66427
I7
VAssignment: =
p66428
tp66429
I1
s(g5974
I42
g5975
Vinsert
p66430
I42
VSimpleName: SQLException
p66431
tp66432
I1
s(g19810
I42
g19811
Vinsert
p66433
I45
VStringLiteral: "syntax error, illegal values clause"
p66434
tp66435
I1
s(g18680
I42
g18681
Vinsert
p66436
I52
VThisExpression
p66437
tp66438
I2
s(g4045
I42
g4046
Vinsert
p66439
I60
VVariableDeclarationStatement
p66440
tp66441
I1
s(g9420
I42
g9421
Vinsert
p66442
I39
VPrimitiveType: void
p66443
tp66444
I2
s(g33587
I42
g33588
Vinsert
p66445
I7
VAssignment: =
p66446
tp66447
I1
s(g5045
I42
g5046
Vinsert
p66448
I42
VSimpleName: visit
p66449
tp66450
I2
s(g1486
I42
g1487
Vinsert
p66451
I42
VSimpleName: Override
p66452
tp66453
I6
s(g1953
I42
g1954
Vinsert
p66454
I42
VSimpleName: seconds
p66455
tp66456
I2
s(g4472
I42
g4473
Vinsert
p66457
I42
VSimpleName: e
p66458
tp66459
I1
s(g9519
I42
g9520
Vinsert
p66460
I54
VTryStatement
p66461
tp66462
I1
s(g2697
I42
g2698
Vinsert
p66463
I42
VSimpleName: evalExpr
p66464
tp66465
I2
s(g7131
I42
g7132
Vinsert
p66466
I39
VPrimitiveType: byte
p66467
tp66468
I1
s(g14290
I42
g14291
Vinsert
p66469
I43
VSimpleType: AtomicInteger
p66470
tp66471
I1
s(g9919
I42
g9920
Vinsert
p66472
I59
VVariableDeclarationFragment
p66473
tp66474
I9
s(g1642
I42
g1643
Vinsert
p66475
I22
VFieldAccess
p66476
tp66477
I2
s(g13784
I42
g13785
Vinsert
p66478
I43
VSimpleType: Token
p66479
tp66480
I1
s(g6244
I42
g6245
Vinsert
p66481
I27
VInfixExpression: ==
p66482
tp66483
I6
s(Vinsert
p66484
I42
VSimpleName: println
p66485
Vinsert
p66486
I43
VSimpleType: OracleSchemaStatVisitor
p66487
tp66488
I44
s(g20529
I42
g20530
Vinsert
p66489
I33
VNullLiteral
p66490
tp66491
I2
s(g13957
I42
g13958
Vinsert
p66492
I44
VSingleVariableDeclaration
p66493
tp66494
I4
s(g3544
I42
g3545
Vinsert
p66495
I45
VStringLiteral: "and tt.ver <> 'all')\u005cn"
p66496
tp66497
I1
s(g23476
I42
g23477
Vinsert
p66498
I45
VStringLiteral: "SELECT ts#, file#, block#, cols\u005cn"
p66499
tp66500
I1
s(g3765
I42
g3766
Vinsert
p66501
I45
VStringLiteral: "\u005cn AS (tfs, control_word, ocr_word, control_type, cates)"
p66502
tp66503
I1
s(g10991
I42
g10992
Vinsert
p66504
I42
VSimpleName: windowing
p66505
tp66506
I2
s(g13181
I42
g13182
Vinsert
p66507
I43
VSimpleType: MySqlDropTableStatement
p66508
tp66509
I1
s(g42357
I42
g42358
Vinsert
p66510
I42
VSimpleName: getOperator
p66511
tp66512
I1
s(g5012
I42
g5013
Vinsert
p66513
I52
VThisExpression
p66514
tp66515
I2
s(g14517
I42
g14518
Vinsert
p66516
I42
VSimpleName: keyColumns
p66517
tp66518
I1
s(g9944
I42
g9945
Vinsert
p66519
I45
VStringLiteral: "\u005ctCONSTRAINT id_pk PRIMARY KEY (emp_id) RELY DIABLE NOVALIDATE\u005cn"
p66520
tp66521
I1
s(g13032
I42
g13033
Vinsert
p66522
I42
VSimpleName: keep
p66523
tp66524
I1
s(g32999
I42
g33000
Vinsert
p66525
I42
VSimpleName: toMySqlString
p66526
tp66527
I8
s(g15359
I42
g15360
Vinsert
p66528
I42
VSimpleName: put
p66529
tp66530
I1
s(g42563
I42
g42564
Vinsert
p66531
I45
VStringLiteral: "\u005cn\u005ctpromo_id NUMBER(6)"
p66532
tp66533
I1
s(g733
I42
g734
Vinsert
p66534
I31
VMethodDeclaration
p66535
tp66536
I7
s(Vinsert
p66537
I42
VSimpleName: getValue
p66538
Vinsert
p66539
I42
VSimpleName: getValue
p66540
tp66541
I4
s(g6434
I42
g6435
Vinsert
p66542
I40
VQualifiedName: JdbcConstants.ORACLE
p66543
tp66544
I5
s(g20893
I42
g20894
Vinsert
p66545
I43
VSimpleType: SQLTableSource
p66546
tp66547
I1
s(g3694
I42
g3695
Vinsert
p66548
I45
VStringLiteral: "\u005cn\u005ctPARTITION p1 VALUES LESS THAN (1000),"
p66549
tp66550
I1
s(g28358
I42
g28359
Vinsert
p66551
I42
VSimpleName: PGInetExpr
p66552
tp66553
I2
s(Vinsert
p66554
I42
VSimpleName: setParent
p66555
Vinsert
p66556
I43
VSimpleType: SQLTableElement
p66557
tp66558
I1
s(g46314
I42
g46315
Vinsert
p66559
I45
VStringLiteral: " AND NOT EXISTS (select m.id from project_measures m WHERE m.snapshot_id=s.id)"
p66560
tp66561
I1
s(g12844
I42
g12845
Vinsert
p66562
I25
VIfStatement
p66563
tp66564
I4
s(g14110
I42
g14111
Vinsert
p66565
I14
VClassInstanceCreation
p66566
tp66567
I2
s(g10066
I42
g10067
Vinsert
p66568
I43
VSimpleType: SQLPropertyExpr
p66569
tp66570
I16
s(g7612
I42
g7613
Vinsert
p66571
I45
VStringLiteral: "FOR READ ONLY"
p66572
tp66573
I1
s(g10459
I42
g10460
Vinsert
p66574
I42
VSimpleName: OracleSelectQueryBlock
p66575
tp66576
I3
s(g5762
I42
g5763
Vinsert
p66577
I43
VSimpleType: DruidAbstractDataSource
p66578
tp66579
I4
s(g11920
I42
g11921
Vinsert
p66580
I32
VMethodInvocation
p66581
tp66582
I2
s(g7216
I42
g7217
Vinsert
p66583
I32
VMethodInvocation
p66584
tp66585
I4
s(g647
I42
g648
Vinsert
p66586
I7
VAssignment: =
p66587
tp66588
I6
s(Vinsert
p66589
I42
VSimpleName: setExpr
p66590
Vinsert
p66591
I42
VSimpleName: SQLSelectOrderByItem
p66592
tp66593
I3
s(g22444
I42
g22445
Vinsert
p66594
I42
VSimpleName: getHints
p66595
tp66596
I2
s(g20933
I42
g20934
Vinsert
p66597
I83
VModifier: public
p66598
tp66599
I1
s(g3649
I42
g3650
Vinsert
p66600
I42
VSimpleName: token
p66601
tp66602
I2
s(g21458
I42
g21459
Vinsert
p66603
I42
VSimpleName: shutdownNow
p66604
tp66605
I1
s(g24067
I42
g24068
Vinsert
p66606
I42
VSimpleName: parameters
p66607
tp66608
I1
s(g4867
I42
g4868
Vinsert
p66609
I42
VSimpleName: JdbcSqlStat
p66610
tp66611
I1
s(g791
I42
g792
Vinsert
p66612
I58
VVariableDeclarationExpression
p66613
tp66614
I3
s(g15029
I42
g15030
Vinsert
p66615
I36
VParenthesizedExpression
p66616
tp66617
I1
s(g11020
I42
g11021
Vinsert
p66618
I34
VNumberLiteral: 0
p66619
tp66620
I1
s(g4520
I42
g4521
Vinsert
p66621
I49
VSwitchCase
p66622
tp66623
I1
s(g1705
I42
g1706
Vinsert
p66624
I60
VVariableDeclarationStatement
p66625
tp66626
I4
s(g4679
I42
g4680
Vinsert
p66627
I42
VSimpleName: dataSource
p66628
tp66629
I2
s(g1329
I42
g1330
Vinsert
p66630
I8
VBlock
p66631
tp66632
I1
s(g35972
I42
g35973
Vinsert
p66633
I42
VSimpleName: property
p66634
tp66635
I12
s(g6737
I42
g6738
Vinsert
p66636
I40
VQualifiedName: SQLParserFeature.OptimizedForParameterized
p66637
tp66638
I1
s(g522
I42
g523
Vinsert
p66639
I33
VNullLiteral
p66640
tp66641
I2
s(g21509
I42
g21510
Vinsert
p66642
I42
VSimpleName: accept
p66643
tp66644
I1
s(g1888
I42
g1889
Vinsert
p66645
I42
VSimpleName: SQLException
p66646
tp66647
I1
s(g11302
I42
g11303
Vinsert
p66648
I42
VSimpleName: TeradataOutputVisitor
p66649
tp66650
I1
s(g1339
I42
g1340
Vinsert
p66651
I43
VSimpleType: StringBuffer
p66652
tp66653
I23
s(g9743
I42
g9744
Vinsert
p66654
I42
VSimpleName: entry
p66655
tp66656
I2
s(g14985
I42
g14986
Vinsert
p66657
I32
VMethodInvocation
p66658
tp66659
I3
s(g12294
I42
g12295
Vinsert
p66660
I40
VQualifiedName: Level.INFO
p66661
tp66662
I1
s(g12055
I42
g12056
Vinsert
p66663
I27
VInfixExpression: !=
p66664
tp66665
I1
s(g16232
I42
g16233
Vinsert
p66666
I45
VStringLiteral: "ICqJa3yPr6e7z8GZpMH3J0Cx0uQ0B1JuysymdNDlzfTvb7QWsrLU4jGs3h8Mm49/L9nyO4Xh\u005cn"
p66667
tp66668
I1
s(g11320
I42
g11321
Vinsert
p66669
I42
VSimpleName: DruidLoaderUtils
p66670
tp66671
I2
s(g49146
I42
g49147
Vinsert
p66672
I45
VStringLiteral: "WHERE last_name = 'Smith';"
p66673
tp66674
I1
s(g5859
I42
g5860
Vinsert
p66675
I59
VVariableDeclarationFragment
p66676
tp66677
I1
s(g7417
I42
g7418
Vinsert
p66678
I8
VBlock
p66679
tp66680
I3
s(g2364
I42
g2365
Vinsert
p66681
I42
VSimpleName: base64ToByteArray
p66682
tp66683
I1
s(g20840
I42
g20841
Vinsert
p66684
I13
VCharacterLiteral: ' '
p66685
tp66686
I1
s(g13627
I42
g13628
Vinsert
p66687
I45
VStringLiteral: "create table t (f1 string comment \u005c"xxx\u005c")"
p66688
tp66689
I1
s(g26722
I42
g26723
Vinsert
p66690
I42
VSimpleName: statement
p66691
tp66692
I1
s(g81
I42
g82
Vinsert
p66693
I42
VSimpleName: itemB
p66694
tp66695
I1
s(g356
I42
g357
Vinsert
p66696
I42
VSimpleName: Assert
p66697
tp66698
I2
s(g22198
I42
g22199
Vinsert
p66699
I42
VSimpleName: parseHint
p66700
tp66701
I1
s(g14266
I42
g14267
Vinsert
p66702
I42
VSimpleName: stmt
p66703
tp66704
I1
s(g21551
I42
g21552
Vinsert
p66705
I8
VBlock
p66706
tp66707
I12
s(g13071
I42
g13072
Vinsert
p66708
I42
VSimpleName: stmtProxy
p66709
tp66710
I1
s(g2268
I42
g2269
Vinsert
p66711
I27
VInfixExpression: +
p66712
tp66713
I1
s(g19618
I42
g19619
Vinsert
p66714
I43
VSimpleType: WebURIStat
p66715
tp66716
I1
s(g10797
I42
g10798
Vinsert
p66717
I21
VExpressionStatement
p66718
tp66719
I2
s(g9873
I42
g9874
Vinsert
p66720
I42
VSimpleName: rs
p66721
tp66722
I1
s(g31257
I42
g31258
Vinsert
p66723
I42
VSimpleName: size
p66724
tp66725
I4
s(g4615
I42
g4616
Vinsert
p66726
I8
VBlock
p66727
tp66728
I1
s(g21499
I42
g21500
Vinsert
p66729
I42
VSimpleName: String
p66730
tp66731
I1
s(g47573
I42
g47574
Vinsert
p66732
I42
VSimpleName: HashMap
p66733
tp66734
I4
s(g8222
I42
g8223
Vinsert
p66735
I42
VSimpleName: write
p66736
tp66737
I2
s(g35007
I42
g35008
Vinsert
p66738
I42
VSimpleName: PreparedStatementKey
p66739
tp66740
I2
s(g29295
I42
g29296
Vinsert
p66741
I40
VQualifiedName: JdbcConstants.MYSQL
p66742
tp66743
I2
s(g7840
I42
g7841
Vinsert
p66744
I42
VSimpleName: OracleCursorExpr
p66745
tp66746
I2
s(g9838
I42
g9839
Vinsert
p66747
I42
VSimpleName: CheckOption
p66748
tp66749
I2
s(g116
I42
g117
Vinsert
p66750
I59
VVariableDeclarationFragment
p66751
tp66752
I1
s(g6901
I42
g6902
Vinsert
p66753
I32
VMethodInvocation
p66754
tp66755
I11
s(g64994
I42
g64995
Vinsert
p66756
I45
VStringLiteral: "FROM `tasks`\u005cn"
p66757
tp66758
I1
s(g3017
I42
g3018
Vinsert
p66759
I36
VParenthesizedExpression
p66760
tp66761
I1
s(g24043
I42
g24044
Vinsert
p66762
I34
VNumberLiteral: 300
p66763
tp66764
I1
s(g23414
I42
g23415
Vinsert
p66765
I33
VNullLiteral
p66766
tp66767
I1
s(g19307
I42
g19308
Vinsert
p66768
I8
VBlock
p66769
tp66770
I1
s(g226
I42
g227
Vinsert
p66771
I42
VSimpleName: updateDataCount_10000_more
p66772
tp66773
I1
s(g6822
I42
g6823
Vinsert
p66774
I43
VSimpleType: Reference
p66775
tp66776
I2
s(g20030
I42
g20031
Vinsert
p66777
I41
VReturnStatement
p66778
tp66779
I1
s(g2104
I42
g2105
Vinsert
p66780
I52
VThisExpression
p66781
tp66782
I1
s(g4890
I42
g4891
Vinsert
p66783
I42
VSimpleName: get
p66784
tp66785
I1
s(g61877
I42
g61878
Vinsert
p66786
I42
VSimpleName: getExecuteCount
p66787
tp66788
I1
s(g2732
I42
g2733
Vinsert
p66789
I42
VSimpleName: shardingSupport
p66790
tp66791
I2
s(g18871
I42
g18872
Vinsert
p66792
I42
VSimpleName: withinGroup
p66793
tp66794
I1
s(g15500
I42
g15501
Vinsert
p66795
I74
VParameterizedType: SwingWorker<?,?>
p66796
tp66797
I1
s(g1271
I42
g1272
Vinsert
p66798
I21
VExpressionStatement
p66799
tp66800
I1
s(g15097
I42
g15098
Vinsert
p66801
I31
VMethodDeclaration
p66802
tp66803
I19
s(g14026
I42
g14027
Vinsert
p66804
I43
VSimpleType: SQLIntegerExpr
p66805
tp66806
I1
s(g20914
I42
g20915
Vinsert
p66807
I42
VSimpleName: getParameterClassName
p66808
tp66809
I1
s(g16630
I42
g16631
Vinsert
p66810
I60
VVariableDeclarationStatement
p66811
tp66812
I1
s(g1898
I42
g1899
Vinsert
p66813
I59
VVariableDeclarationFragment
p66814
tp66815
I9
s(g7903
I42
g7904
Vinsert
p66816
I83
VModifier: public
p66817
tp66818
I1
s(g4308
I42
g4309
Vinsert
p66819
I24
VForStatement
p66820
tp66821
I1
s(g10550
I42
g10551
Vinsert
p66822
I42
VSimpleName: decrypter
p66823
tp66824
I6
s(g7158
I42
g7159
Vinsert
p66825
I42
VSimpleName: parameterIndex
p66826
tp66827
I1
s(g17301
I42
g17302
Vinsert
p66828
I52
VThisExpression
p66829
tp66830
I1
s(g7537
I42
g7538
Vinsert
p66831
I39
VPrimitiveType: long
p66832
tp66833
I1
s(g6597
I42
g6598
Vinsert
p66834
I32
VMethodInvocation
p66835
tp66836
I3
s(g3213
I42
g3214
Vinsert
p66837
I21
VExpressionStatement
p66838
tp66839
I35
s(g25138
I42
g25139
Vinsert
p66840
I45
VStringLiteral: "insert"
p66841
tp66842
I1
s(g5343
I42
g5344
Vinsert
p66843
I42
VSimpleName: columnGroups
p66844
tp66845
I2
s(g25125
I42
g25126
Vinsert
p66846
I32
VMethodInvocation
p66847
tp66848
I3
s(g36826
I42
g36827
Vinsert
p66849
I26
VImportDeclaration
p66850
tp66851
I4
s(g7512
I42
g7513
Vinsert
p66852
I42
VSimpleName: Assert
p66853
tp66854
I1
s(g2586
I42
g2587
Vinsert
p66855
I59
VVariableDeclarationFragment
p66856
tp66857
I3
s(g44390
I42
g44391
Vinsert
p66858
I43
VSimpleType: OracleSelectParser
p66859
tp66860
I2
s(g116
I42
g117
Vinsert
p66861
I32
VMethodInvocation
p66862
tp66863
I8
s(g43033
I42
g43034
Vinsert
p66864
I45
VStringLiteral: "ALTER TABLE db_manage.zcy_gpcatalog_node_t ADD INDEX index_code USING BTREE (code);"
p66865
tp66866
I1
s(g41603
I42
g41604
Vinsert
p66867
I45
VStringLiteral: "*                                    *"
p66868
tp66869
I2
s(g4520
I42
g4521
Vinsert
p66870
I9
VBooleanLiteral: false
p66871
tp66872
I1
s(g9251
I42
g9252
Vinsert
p66873
I31
VMethodDeclaration
p66874
tp66875
I1
s(g1385
I42
g1386
Vinsert
p66876
I45
VStringLiteral: "RESTRICT"
p66877
tp66878
I2
s(g22046
I42
g22047
Vinsert
p66879
I43
VSimpleType: MockResultSet
p66880
tp66881
I2
s(g7073
I42
g7074
Vinsert
p66882
I21
VExpressionStatement
p66883
tp66884
I4
s(g19618
I42
g19619
Vinsert
p66885
I42
VSimpleName: WebURIStat
p66886
tp66887
I2
s(g5844
I42
g5845
Vinsert
p66888
I11
VCastExpression
p66889
tp66890
I1
s(g3467
I42
g3468
Vinsert
p66891
I14
VClassInstanceCreation
p66892
tp66893
I1
s(g881
I42
g882
Vinsert
p66894
I42
VSimpleName: assertTrue
p66895
tp66896
I2
s(g29320
I42
g29321
Vinsert
p66897
I42
VSimpleName: expr
p66898
tp66899
I2
s(g22083
I42
g22084
Vinsert
p66900
I42
VSimpleName: StringBuilder
p66901
tp66902
I5
s(g728
I42
g729
Vinsert
p66903
I45
VStringLiteral: "parse error. detail message is :\u005cn"
p66904
tp66905
I1
s(g3202
I42
g3203
Vinsert
p66906
I39
VPrimitiveType: long
p66907
tp66908
I5
s(g2770
I42
g2771
Vinsert
p66909
I42
VSimpleName: lexer
p66910
tp66911
I1
s(g37973
I42
g37974
Vinsert
p66912
I24
VForStatement
p66913
tp66914
I1
s(g13952
I42
g13953
Vinsert
p66915
I83
VModifier: public
p66916
tp66917
I1
s(g39586
I42
g39587
Vinsert
p66918
I42
VSimpleName: getColumns
p66919
tp66920
I2
s(g8222
I42
g8223
Vinsert
p66921
I42
VSimpleName: toHexString
p66922
tp66923
I1
s(g6943
I42
g6944
Vinsert
p66924
I42
VSimpleName: closedThreadRef
p66925
tp66926
I2
s(g17125
I42
g17126
Vinsert
p66927
I39
VPrimitiveType: long
p66928
tp66929
I1
s(g39356
I42
g39357
Vinsert
p66930
I43
VSimpleType: ObjectName
p66931
tp66932
I1
s(g6257
I42
g6258
Vinsert
p66933
I42
VSimpleName: x
p66934
tp66935
I1
s(g3770
I42
g3771
Vinsert
p66936
I42
VSimpleName: Short
p66937
tp66938
I2
s(g8990
I42
g8991
Vinsert
p66939
I27
VInfixExpression: !=
p66940
tp66941
I1
s(g28138
I42
g28139
Vinsert
p66942
I42
VSimpleName: parseIndexHint
p66943
tp66944
I1
s(g39075
I42
g39076
Vinsert
p66945
I42
VSimpleName: setIndexName
p66946
tp66947
I1
s(g5859
I42
g5860
Vinsert
p66948
I43
VSimpleType: String
p66949
tp66950
I1
s(g8969
I42
g8970
Vinsert
p66951
I32
VMethodInvocation
p66952
tp66953
I1
s(g17539
I42
g17540
Vinsert
p66954
I8
VBlock
p66955
tp66956
I161
s(g7947
I42
g7948
Vinsert
p66957
I42
VSimpleName: visit
p66958
tp66959
I5
s(g26526
I42
g26527
Vinsert
p66960
I42
VSimpleName: get
p66961
tp66962
I17
s(g6116
I42
g6117
Vinsert
p66963
I43
VSimpleType: MultiDataSource
p66964
tp66965
I1
s(g40012
I42
g40013
Vinsert
p66966
I42
VSimpleName: Object
p66967
tp66968
I28
s(g96
I42
g97
Vinsert
p66969
I45
VStringLiteral: " OVER ("
p66970
tp66971
I1
s(g12776
I42
g12777
Vinsert
p66972
I8
VBlock
p66973
tp66974
I2
s(g9949
I42
g9950
Vinsert
p66975
I27
VInfixExpression: !=
p66976
tp66977
I2
s(g2398
I42
g2399
Vinsert
p66978
I59
VVariableDeclarationFragment
p66979
tp66980
I2
s(g2349
I42
g2350
Vinsert
p66981
I42
VSimpleName: x
p66982
tp66983
I2
s(g39586
I42
g39587
Vinsert
p66984
I42
VSimpleName: println
p66985
tp66986
I2
s(g52306
I42
g52307
Vinsert
p66987
I42
VSimpleName: SQLBlockStatement
p66988
tp66989
I1
s(g2910
I42
g2911
Vinsert
p66990
I42
VSimpleName: Override
p66991
tp66992
I7
s(g14844
I42
g14845
Vinsert
p66993
I40
VQualifiedName: Token.EQ
p66994
tp66995
I3
s(g12518
I42
g12519
Vinsert
p66996
I42
VSimpleName: i
p66997
tp66998
I5
s(g44586
I42
g44587
Vinsert
p66999
I45
VStringLiteral: "LastAccessTime"
p67000
tp67001
I1
s(g2870
I42
g2871
Vinsert
p67002
I8
VBlock
p67003
tp67004
I3
s(g346
I42
g347
Vinsert
p67005
I42
VSimpleName: dataSource
p67006
tp67007
I2
s(g10532
I42
g10533
Vinsert
p67008
I42
VSimpleName: violation
p67009
tp67010
I1
s(g997
I42
g998
Vinsert
p67011
I42
VSimpleName: i
p67012
tp67013
I4
s(g6557
I42
g6558
Vinsert
p67014
I42
VSimpleName: getRight
p67015
tp67016
I1
s(g6
I42
g7
Vinsert
p67017
I21
VExpressionStatement
p67018
tp67019
I1
s(g7678
I42
g7679
Vinsert
p67020
I44
VSingleVariableDeclaration
p67021
tp67022
I1
s(g14782
I42
g14783
Vinsert
p67023
I32
VMethodInvocation
p67024
tp67025
I14
s(g7245
I42
g7246
Vinsert
p67026
I27
VInfixExpression: ==
p67027
tp67028
I1
s(g4824
I42
g4825
Vinsert
p67029
I39
VPrimitiveType: void
p67030
tp67031
I1
s(g4050
I42
g4051
Vinsert
p67032
I45
VStringLiteral: "pipe row("
p67033
tp67034
I1
s(g34510
I42
g34511
Vinsert
p67035
I43
VSimpleType: SQLExpr
p67036
tp67037
I5
s(g10016
I42
g10017
Vinsert
p67038
I42
VSimpleName: updateSetItem
p67039
tp67040
I1
s(g3719
I42
g3720
Vinsert
p67041
I34
VNumberLiteral: 1
p67042
tp67043
I125
s(g5490
I42
g5491
Vinsert
p67044
I39
VPrimitiveType: void
p67045
tp67046
I1
s(g7777
I42
g7778
Vinsert
p67047
I7
VAssignment: =
p67048
tp67049
I1
s(g12235
I42
g12236
Vinsert
p67050
I41
VReturnStatement
p67051
tp67052
I1
s(g20822
I42
g20823
Vinsert
p67053
I43
VSimpleType: MySqlUnique
p67054
tp67055
I1
s(g66484
I42
g66485
Vinsert
p67056
I42
VSimpleName: OracleSchemaStatVisitor
p67057
tp67058
I44
s(g45686
I42
g45687
Vinsert
p67059
I27
VInfixExpression: ==
p67060
tp67061
I1
s(g40136
I42
g40137
Vinsert
p67062
I60
VVariableDeclarationStatement
p67063
tp67064
I4
s(g16556
I42
g16557
Vinsert
p67065
I42
VSimpleName: loadDriverClass
p67066
tp67067
I1
s(Vinsert
p67068
I42
VSimpleName: assertEquals
p67069
Vinsert
p67070
I45
VStringLiteral: "\u005cn\u005ctREPAIR PARTITION ALL"
p67071
tp67072
I1
s(g51295
I42
g51296
Vinsert
p67073
I42
VSimpleName: next
p67074
tp67075
I2
s(g31257
I42
g31258
Vinsert
p67076
I21
VExpressionStatement
p67077
tp67078
I8
s(g7404
I42
g7405
Vinsert
p67079
I42
VSimpleName: getAttributes
p67080
tp67081
I1
s(g2193
I42
g2194
Vinsert
p67082
I42
VSimpleName: conn
p67083
tp67084
I113
s(g38822
I42
g38823
Vinsert
p67085
I42
VSimpleName: sqlStmt
p67086
tp67087
I2
s(g13364
I42
g13365
Vinsert
p67088
I42
VSimpleName: incrementCachedPreparedStatementMissCount
p67089
tp67090
I1
s(g3495
I42
g3496
Vinsert
p67091
I40
VQualifiedName: lexer.token
p67092
tp67093
I1
s(g2940
I42
g2941
Vinsert
p67094
I43
VSimpleType: SQLObjectType
p67095
tp67096
I1
s(g7293
I42
g7294
Vinsert
p67097
I39
VPrimitiveType: void
p67098
tp67099
I1
s(g1501
I42
g1502
Vinsert
p67100
I42
VSimpleName: rs
p67101
tp67102
I1
s(g44300
I42
g44301
Vinsert
p67103
I45
VStringLiteral: "SELECT * FROM dbo.Customers AS c   \u005cn"
p67104
tp67105
I1
s(g10082
I42
g10083
Vinsert
p67106
I39
VPrimitiveType: void
p67107
tp67108
I1
s(g16145
I42
g16146
Vinsert
p67109
I52
VThisExpression
p67110
tp67111
I1
s(g3574
I42
g3575
Vinsert
p67112
I43
VSimpleType: Object
p67113
tp67114
I2
s(g10475
I42
g10476
Vinsert
p67115
I42
VSimpleName: Object
p67116
tp67117
I1
s(g552
I42
g553
Vinsert
p67118
I33
VNullLiteral
p67119
tp67120
I1
s(g758
I42
g759
Vinsert
p67121
I42
VSimpleName: SQLAlterTableDropConstraint
p67122
tp67123
I1
s(g1647
I42
g1648
Vinsert
p67124
I43
VSimpleType: List
p67125
tp67126
I1
s(g63509
I42
g63510
Vinsert
p67127
I42
VSimpleName: valueExpr
p67128
tp67129
I2
s(g1564
I42
g1565
Vinsert
p67130
I42
VSimpleName: accept
p67131
tp67132
I1
s(g40159
I42
g40160
Vinsert
p67133
I42
VSimpleName: out
p67134
tp67135
I3
s(g9929
I42
g9930
Vinsert
p67136
I45
VStringLiteral: ", actual "
p67137
tp67138
I2
s(g1271
I42
g1272
Vinsert
p67139
I34
VNumberLiteral: 0
p67140
tp67141
I2
s(g226
I42
g227
Vinsert
p67142
I85
VDimension
p67143
tp67144
I1
s(g9662
I42
g9663
Vinsert
p67145
I42
VSimpleName: OracleLabelStatement
p67146
tp67147
I1
s(g5460
I42
g5461
Vinsert
p67148
I42
VSimpleName: accept
p67149
tp67150
I1
s(g16213
I42
g16214
Vinsert
p67151
I42
VSimpleName: name
p67152
tp67153
I1
s(g5012
I42
g5013
Vinsert
p67154
I40
VQualifiedName: Token.COMMA
p67155
tp67156
I2
s(g21845
I42
g21846
Vinsert
p67157
I52
VThisExpression
p67158
tp67159
I2
s(g13818
I42
g13819
Vinsert
p67160
I42
VSimpleName: stmt
p67161
tp67162
I2
s(g5734
I42
g5735
Vinsert
p67163
I42
VSimpleName: dataSource
p67164
tp67165
I2
s(g16831
I42
g16832
Vinsert
p67166
I42
VSimpleName: nextToken
p67167
tp67168
I1
s(Vinsert
p67169
I42
VSimpleName: assertEquals
p67170
Vinsert
p67171
I42
VSimpleName: EvalMethodTest_lpad_1
p67172
tp67173
I1
s(g32129
I42
g32130
Vinsert
p67174
I42
VSimpleName: getDistributeBy
p67175
tp67176
I2
s(g4765
I42
g4766
Vinsert
p67177
I42
VSimpleName: CharTypes
p67178
tp67179
I1
s(g19749
I42
g19750
Vinsert
p67180
I42
VSimpleName: exSorter
p67181
tp67182
I1
s(g5757
I42
g5758
Vinsert
p67183
I52
VThisExpression
p67184
tp67185
I1
s(g29813
I42
g29814
Vinsert
p67186
I42
VSimpleName: i
p67187
tp67188
I3
s(g22206
I42
g22207
Vinsert
p67189
I5
VArrayType: Object[]
p67190
tp67191
I4
s(g63139
I42
g63140
Vinsert
p67192
I25
VIfStatement
p67193
tp67194
I1
s(g18300
I42
g18301
Vinsert
p67195
I40
VQualifiedName: Token.RPAREN
p67196
tp67197
I1
s(g758
I42
g759
Vinsert
p67198
I44
VSingleVariableDeclaration
p67199
tp67200
I3
s(g14316
I42
g14317
Vinsert
p67201
I39
VPrimitiveType: long
p67202
tp67203
I1
s(g9683
I42
g9684
Vinsert
p67204
I32
VMethodInvocation
p67205
tp67206
I10
s(g15263
I42
g15264
Vinsert
p67207
I11
VCastExpression
p67208
tp67209
I4
s(g23697
I42
g23698
Vinsert
p67210
I42
VSimpleName: first
p67211
tp67212
I1
s(g33239
I42
g33240
Vinsert
p67213
I25
VIfStatement
p67214
tp67215
I1
s(g3297
I42
g3298
Vinsert
p67216
I42
VSimpleName: updateCountUpdater
p67217
tp67218
I1
s(g5579
I42
g5580
Vinsert
p67219
I45
VStringLiteral: "-- Create server\u005cn"
p67220
tp67221
I1
s(g16224
I42
g16225
Vinsert
p67222
I40
VQualifiedName: TableStat.Column
p67223
tp67224
I3
s(g14088
I42
g14089
Vinsert
p67225
I59
VVariableDeclarationFragment
p67226
tp67227
I11
s(g29367
I42
g29368
Vinsert
p67228
I45
VStringLiteral: "\u005cn\u005ct\u005ctconnect by prior tbek_pk = tbek_parent"
p67229
tp67230
I1
s(g9456
I42
g9457
Vinsert
p67231
I52
VThisExpression
p67232
tp67233
I1
s(g306
I42
g307
Vinsert
p67234
I42
VSimpleName: parent
p67235
tp67236
I1
s(g537
I42
g538
Vinsert
p67237
I21
VExpressionStatement
p67238
tp67239
I2
s(g8990
I42
g8991
Vinsert
p67240
I42
VSimpleName: Profiler
p67241
tp67242
I1
s(g5356
I42
g5357
Vinsert
p67243
I42
VSimpleName: getMessage
p67244
tp67245
I1
s(g5297
I42
g5298
Vinsert
p67246
I42
VSimpleName: expr
p67247
tp67248
I2
s(g14426
I42
g14427
Vinsert
p67249
I59
VVariableDeclarationFragment
p67250
tp67251
I2
s(g60101
I42
g60102
Vinsert
p67252
I42
VSimpleName: setTestOnReturn
p67253
tp67254
I1
s(g15359
I42
g15360
Vinsert
p67255
I45
VStringLiteral: "jdbc:mock:xxx"
p67256
tp67257
I1
s(g24979
I42
g24980
Vinsert
p67258
I45
VStringLiteral: "StatementExecuteCount_20000_more_Millis"
p67259
tp67260
I1
s(g11915
I42
g11916
Vinsert
p67261
I60
VVariableDeclarationStatement
p67262
tp67263
I1
s(g733
I42
g734
Vinsert
p67264
I43
VSimpleType: Thread
p67265
tp67266
I5
s(Vinsert
p67267
I42
VSimpleName: setParent
p67268
Vinsert
p67269
I42
VSimpleName: setLike
p67270
tp67271
I2
s(g1218
I42
g1219
Vinsert
p67272
I42
VSimpleName: isSequence
p67273
tp67274
I1
s(g6343
I42
g6344
Vinsert
p67275
I60
VVariableDeclarationStatement
p67276
tp67277
I2
s(g28425
I42
g28426
Vinsert
p67278
I42
VSimpleName: tableElementList
p67279
tp67280
I1
s(g8742
I42
g8743
Vinsert
p67281
I42
VSimpleName: SQLUseStatement
p67282
tp67283
I1
s(g16888
I42
g16889
Vinsert
p67284
I34
VNumberLiteral: 1
p67285
tp67286
I1
s(g22647
I42
g22648
Vinsert
p67287
I45
VStringLiteral: "\u005ct, start_line, end_line\u005cn"
p67288
tp67289
I1
s(g17261
I42
g17262
Vinsert
p67290
I45
VStringLiteral: "ALGORITHM"
p67291
tp67292
I1
s(g21908
I42
g21909
Vinsert
p67293
I45
VStringLiteral: "\u005cn\u005ctlower_impl_class NVARCHAR(255),"
p67294
tp67295
I1
s(g2525
I42
g2526
Vinsert
p67296
I42
VSimpleName: statements
p67297
tp67298
I3
s(g4806
I42
g4807
Vinsert
p67299
I59
VVariableDeclarationFragment
p67300
tp67301
I5
s(g51370
I42
g51371
Vinsert
p67302
I42
VSimpleName: sqlStat
p67303
tp67304
I3
s(g4839
I42
g4840
Vinsert
p67305
I40
VQualifiedName: JdbcConstants.MYSQL
p67306
tp67307
I1
s(Vinsert
p67308
I42
VSimpleName: assertNotNull
p67309
Vinsert
p67310
I42
VSimpleName: getConnection
p67311
tp67312
I2
s(g7492
I42
g7493
Vinsert
p67313
I45
VStringLiteral: "ALTER TABLE trans"
p67314
tp67315
I2
s(g6557
I42
g6558
Vinsert
p67316
I32
VMethodInvocation
p67317
tp67318
I3
s(g31879
I42
g31880
Vinsert
p67319
I9
VBooleanLiteral: false
p67320
tp67321
I1
s(g16935
I42
g16936
Vinsert
p67322
I42
VSimpleName: WallProviderStatTimer
p67323
tp67324
I2
s(g15334
I42
g15335
Vinsert
p67325
I39
VPrimitiveType: boolean
p67326
tp67327
I1
s(g8282
I42
g8283
Vinsert
p67328
I43
VSimpleType: SQLBinaryOpExpr
p67329
tp67330
I1
s(g3659
I42
g3660
Vinsert
p67331
I42
VSimpleName: intVal
p67332
tp67333
I1
s(g141
I42
g142
Vinsert
p67334
I45
VStringLiteral: ", "
p67335
tp67336
I6
s(g6544
I42
g6545
Vinsert
p67337
I60
VVariableDeclarationStatement
p67338
tp67339
I9
s(g17439
I42
g17440
Vinsert
p67340
I34
VNumberLiteral: 0
p67341
tp67342
I3
s(g25339
I42
g25340
Vinsert
p67343
I42
VSimpleName: dbType
p67344
tp67345
I1
s(g14139
I42
g14140
Vinsert
p67346
I43
VSimpleType: Map
p67347
tp67348
I3
s(g6429
I42
g6430
Vinsert
p67349
I83
VModifier: public
p67350
tp67351
I1
s(g10021
I42
g10022
Vinsert
p67352
I21
VExpressionStatement
p67353
tp67354
I1
s(g311
I42
g312
Vinsert
p67355
I42
VSimpleName: txtTestOnBorrow
p67356
tp67357
I1
s(Vinsert
p67358
I42
VSimpleName: getExpr
p67359
Vinsert
p67360
I42
VSimpleName: PGFunctionTableSource
p67361
tp67362
I1
s(g34654
I42
g34655
Vinsert
p67363
I45
VStringLiteral: "\u005ct\u005ctAND b.paid_amount > 0\u005cn"
p67364
tp67365
I1
s(g3719
I42
g3720
Vinsert
p67366
I45
VStringLiteral: "from runoob_tbl\u005cn"
p67367
tp67368
I2
s(g19396
I42
g19397
Vinsert
p67369
I45
VStringLiteral: "\u005cn\u005ctWHERE project_id = ?"
p67370
tp67371
I1
s(g532
I42
g533
Vinsert
p67372
I21
VExpressionStatement
p67373
tp67374
I1
s(g23271
I42
g23272
Vinsert
p67375
I42
VSimpleName: hash_lower
p67376
tp67377
I4
s(g7527
I42
g7528
Vinsert
p67378
I42
VSimpleName: array
p67379
tp67380
I2
s(g10257
I42
g10258
Vinsert
p67381
I32
VMethodInvocation
p67382
tp67383
I32
s(g19924
I42
g19925
Vinsert
p67384
I60
VVariableDeclarationStatement
p67385
tp67386
I1
s(g13538
I42
g13539
Vinsert
p67387
I42
VSimpleName: JdbcDataSourceStat
p67388
tp67389
I3
s(g8547
I42
g8548
Vinsert
p67390
I42
VSimpleName: setMaxWait
p67391
tp67392
I1
s(g7908
I42
g7909
Vinsert
p67393
I8
VBlock
p67394
tp67395
I3
s(g29398
I42
g29399
Vinsert
p67396
I42
VSimpleName: accept
p67397
tp67398
I2
s(Vinsert
p67399
I42
VSimpleName: accept
p67400
Vinsert
p67401
I11
VCastExpression
p67402
tp67403
I2
s(g2647
I42
g2648
Vinsert
p67404
I42
VSimpleName: Exception
p67405
tp67406
I2
s(g31296
I42
g31297
Vinsert
p67407
I43
VSimpleType: OracleAnalyticWindowing
p67408
tp67409
I1
s(g15119
I42
g15120
Vinsert
p67410
I21
VExpressionStatement
p67411
tp67412
I3
s(g30398
I42
g30399
Vinsert
p67413
I22
VFieldAccess
p67414
tp67415
I3
s(g9410
I42
g9411
Vinsert
p67416
I42
VSimpleName: Exception
p67417
tp67418
I1
s(g25950
I42
g25951
Vinsert
p67419
I43
VSimpleType: ClobProxy
p67420
tp67421
I1
s(g20173
I42
g20174
Vinsert
p67422
I40
VQualifiedName: FnvHash.PRIME
p67423
tp67424
I1
s(g19396
I42
g19397
Vinsert
p67425
I42
VSimpleName: toOracleString
p67426
tp67427
I3
s(g39672
I42
g39673
Vinsert
p67428
I43
VSimpleType: TestCase
p67429
tp67430
I14
s(g4273
I42
g4274
Vinsert
p67431
I25
VIfStatement
p67432
tp67433
I15
s(g1294
I42
g1295
Vinsert
p67434
I42
VSimpleName: clear
p67435
tp67436
I2
s(g15702
I42
g15703
Vinsert
p67437
I27
VInfixExpression: !=
p67438
tp67439
I3
s(g5643
I42
g5644
Vinsert
p67440
I42
VSimpleName: fetchRowSize
p67441
tp67442
I1
s(g8677
I42
g8678
Vinsert
p67443
I3
VArrayCreation
p67444
tp67445
I1
s(g55094
I42
g55095
Vinsert
p67446
I31
VMethodDeclaration
p67447
tp67448
I1
s(g50497
I42
g50498
Vinsert
p67449
I45
VStringLiteral: "\u005cnhh string -- c_2"
p67450
tp67451
I1
s(g15087
I42
g15088
Vinsert
p67452
I42
VSimpleName: dataSource
p67453
tp67454
I2
s(g35785
I42
g35786
Vinsert
p67455
I42
VSimpleName: osName
p67456
tp67457
I2
s(g20342
I42
g20343
Vinsert
p67458
I45
VStringLiteral: "   and ps_perd_no <> 0 group by loan_no) shd on shd.loan_no=loan.loan_no\u005cn"
p67459
tp67460
I1
s(g19190
I42
g19191
Vinsert
p67461
I42
VSimpleName: assertNotNull
p67462
tp67463
I3
s(g8583
I42
g8584
Vinsert
p67464
I41
VReturnStatement
p67465
tp67466
I2
s(g18496
I42
g18497
Vinsert
p67467
I8
VBlock
p67468
tp67469
I1
s(g5262
I42
g5263
Vinsert
p67470
I25
VIfStatement
p67471
tp67472
I1
s(g24379
I42
g24380
Vinsert
p67473
I7
VAssignment: =
p67474
tp67475
I1
s(g10257
I42
g10258
Vinsert
p67476
I42
VSimpleName: rs
p67477
tp67478
I16
s(g18871
I42
g18872
Vinsert
p67479
I40
VQualifiedName: Token.LPAREN
p67480
tp67481
I1
s(g20320
I42
g20321
Vinsert
p67482
I42
VSimpleName: referencedTable
p67483
tp67484
I1
s(g25218
I42
g25219
Vinsert
p67485
I43
VSimpleType: StringBuffer
p67486
tp67487
I36
s(g1845
I42
g1846
Vinsert
p67488
I45
VStringLiteral: "\u005ctON ECC.GAPM_PROJECT_INFO_SYNC_IOA\u005cn"
p67489
tp67490
I1
s(g7903
I42
g7904
Vinsert
p67491
I32
VMethodInvocation
p67492
tp67493
I1
s(g12822
I42
g12823
Vinsert
p67494
I14
VClassInstanceCreation
p67495
tp67496
I1
s(g30896
I42
g30897
Vinsert
p67497
I43
VSimpleType: SQLExprTableSource
p67498
tp67499
I1
s(g13973
I42
g13974
Vinsert
p67500
I45
VStringLiteral: "RSA"
p67501
tp67502
I1
s(g17777
I42
g17778
Vinsert
p67503
I45
VStringLiteral: "CONVERT TO CHARACTER SET "
p67504
tp67505
I1
s(g22214
I42
g22215
Vinsert
p67506
I59
VVariableDeclarationFragment
p67507
tp67508
I5
s(g18863
I42
g18864
Vinsert
p67509
I45
VStringLiteral: ",   user.nick_name as nickName   "
p67510
tp67511
I1
s(g57201
I42
g57202
Vinsert
p67512
I50
VSwitchStatement
p67513
tp67514
I1
s(g14749
I42
g14750
Vinsert
p67515
I42
VSimpleName: addSelectItem
p67516
tp67517
I1
s(g7399
I42
g7400
Vinsert
p67518
I2
VArrayAccess
p67519
tp67520
I1
s(g3875
I42
g3876
Vinsert
p67521
I43
VSimpleType: WallContext
p67522
tp67523
I1
s(g26818
I42
g26819
Vinsert
p67524
I42
VSimpleName: getAliasMap
p67525
tp67526
I1
s(g891
I42
g892
Vinsert
p67527
I42
VSimpleName: SQLFeatureNotSupportedException
p67528
tp67529
I1
s(g537
I42
g538
Vinsert
p67530
I42
VSimpleName: x
p67531
tp67532
I2
s(g18453
I42
g18454
Vinsert
p67533
I42
VSimpleName: visitor
p67534
tp67535
I18
s(g9438
I42
g9439
Vinsert
p67536
I42
VSimpleName: recordDataType
p67537
tp67538
I1
s(g18801
I42
g18802
Vinsert
p67539
I42
VSimpleName: filter
p67540
tp67541
I2
s(g9503
I42
g9504
Vinsert
p67542
I43
VSimpleType: ArrayList
p67543
tp67544
I1
s(g48618
I42
g48619
Vinsert
p67545
I45
VStringLiteral: "INSERT"
p67546
tp67547
I3
s(g20835
I42
g20836
Vinsert
p67548
I42
VSimpleName: getHTable
p67549
tp67550
I1
s(g51370
I42
g51371
Vinsert
p67551
I42
VSimpleName: getRunningCount
p67552
tp67553
I1
s(g5666
I42
g5667
Vinsert
p67554
I42
VSimpleName: putIfAbsent
p67555
tp67556
I1
s(g12443
I42
g12444
Vinsert
p67557
I42
VSimpleName: x
p67558
tp67559
I6
s(g4160
I42
g4161
Vinsert
p67560
I42
VSimpleName: dataSource
p67561
tp67562
I2
s(g45175
I42
g45176
Vinsert
p67563
I24
VForStatement
p67564
tp67565
I1
s(g22444
I42
g22445
Vinsert
p67566
I42
VSimpleName: hints
p67567
tp67568
I6
s(g5384
I42
g5385
Vinsert
p67569
I42
VSimpleName: Override
p67570
tp67571
I2
s(g3457
I42
g3458
Vinsert
p67572
I42
VSimpleName: SQLAllExpr
p67573
tp67574
I2
s(g9778
I42
g9779
Vinsert
p67575
I32
VMethodInvocation
p67576
tp67577
I4
s(g12801
I42
g12802
Vinsert
p67578
I14
VClassInstanceCreation
p67579
tp67580
I1
s(g30105
I42
g30106
Vinsert
p67581
I45
VStringLiteral: "Global"
p67582
tp67583
I2
s(g2474
I42
g2475
Vinsert
p67584
I42
VSimpleName: accept
p67585
tp67586
I1
s(g14597
I42
g14598
Vinsert
p67587
I25
VIfStatement
p67588
tp67589
I6
s(g1193
I42
g1194
Vinsert
p67590
I7
VAssignment: =
p67591
tp67592
I1
s(g17580
I42
g17581
Vinsert
p67593
I43
VSimpleType: SQLExprTableSource
p67594
tp67595
I3
s(Vinsert
p67596
I42
VSimpleName: accept0
p67597
Vinsert
p67598
I34
VNumberLiteral: 1L
p67599
tp67600
I2
s(g10267
I42
g10268
Vinsert
p67601
I42
VSimpleName: getRawDriverClassName
p67602
tp67603
I1
s(g10604
I42
g10605
Vinsert
p67604
I42
VSimpleName: param0
p67605
tp67606
I7
s(g50302
I42
g50303
Vinsert
p67607
I42
VSimpleName: SQLSelectStatement
p67608
tp67609
I2
s(g2163
I42
g2164
Vinsert
p67610
I42
VSimpleName: visit
p67611
tp67612
I1
s(g18820
I42
g18821
Vinsert
p67613
I43
VSimpleType: DesDecrypter
p67614
tp67615
I2
s(g3908
I42
g3909
Vinsert
p67616
I8
VBlock
p67617
tp67618
I1
s(Vinsert
p67619
I42
VSimpleName: assertEquals
p67620
Vinsert
p67621
I45
VStringLiteral: "\u005cn\u005ctDISCARD PARTITION ALL"
p67622
tp67623
I1
s(g16556
I42
g16557
Vinsert
p67624
I42
VSimpleName: driverClassName
p67625
tp67626
I1
s(g39778
I42
g39779
Vinsert
p67627
I43
VSimpleType: SQLColumnDefinition
p67628
tp67629
I1
s(g1845
I42
g1846
Vinsert
p67630
I27
VInfixExpression: +
p67631
tp67632
I52
s(g17670
I42
g17671
Vinsert
p67633
I38
VPrefixExpression: ++
p67634
tp67635
I1
s(g32633
I42
g32634
Vinsert
p67636
I45
VStringLiteral: "change column "
p67637
tp67638
I1
s(g41850
I42
g41851
Vinsert
p67639
I42
VSimpleName: whiteSqlMaxSize
p67640
tp67641
I1
s(g7919
I42
g7920
Vinsert
p67642
I42
VSimpleName: insertStmt
p67643
tp67644
I6
s(g60342
I42
g60343
Vinsert
p67645
I9
VBooleanLiteral: false
p67646
tp67647
I1
s(g3078
I42
g3079
Vinsert
p67648
I42
VSimpleName: property
p67649
tp67650
I2
s(g33239
I42
g33240
Vinsert
p67651
I42
VSimpleName: select
p67652
tp67653
I2
s(g3345
I42
g3346
Vinsert
p67654
I43
VSimpleType: SQLASTVisitor
p67655
tp67656
I31
s(g5719
I42
g5720
Vinsert
p67657
I42
VSimpleName: sql
p67658
tp67659
I1
s(g35248
I42
g35249
Vinsert
p67660
I42
VSimpleName: globalPartitions
p67661
tp67662
I1
s(g39953
I42
g39954
Vinsert
p67663
I45
VStringLiteral: "                   noeff_days               "
p67664
tp67665
I1
s(g54331
I42
g54332
Vinsert
p67666
I34
VNumberLiteral: 50000
p67667
tp67668
I2
s(g15097
I42
g15098
Vinsert
p67669
I45
VStringLiteral: "SELECT id from T where 1=1 and 1!=1 union select user;"
p67670
tp67671
I1
s(g14361
I42
g14362
Vinsert
p67672
I42
VSimpleName: WallVisitorUtils
p67673
tp67674
I9
s(g9397
I42
g9398
Vinsert
p67675
I43
VSimpleType: SQLStatement
p67676
tp67677
I1
s(g16696
I42
g16697
Vinsert
p67678
I43
VSimpleType: SQLStatement
p67679
tp67680
I16
s(g14605
I42
g14606
Vinsert
p67681
I45
VStringLiteral: "druid.username"
p67682
tp67683
I1
s(g43829
I42
g43830
Vinsert
p67684
I42
VSimpleName: k2
p67685
tp67686
I2
s(g16888
I42
g16889
Vinsert
p67687
I32
VMethodInvocation
p67688
tp67689
I2
s(Vinsert
p67690
I42
VSimpleName: visit
p67691
Vinsert
p67692
I42
VSimpleName: OracleSelectForUpdate
p67693
tp67694
I1
s(g27736
I42
g27737
Vinsert
p67695
I21
VExpressionStatement
p67696
tp67697
I5
s(g9634
I42
g9635
Vinsert
p67698
I42
VSimpleName: newCondition
p67699
tp67700
I1
s(g9475
I42
g9476
Vinsert
p67701
I45
VStringLiteral: "\u005ctFREELIST GROUPS 1\u005cn"
p67702
tp67703
I12
s(g2469
I42
g2470
Vinsert
p67704
I42
VSimpleName: Override
p67705
tp67706
I1
s(g35597
I42
g35598
Vinsert
p67707
I42
VSimpleName: getDruidDataSourceInstances
p67708
tp67709
I1
s(g3355
I42
g3356
Vinsert
p67710
I60
VVariableDeclarationStatement
p67711
tp67712
I5
s(g4391
I42
g4392
Vinsert
p67713
I31
VMethodDeclaration
p67714
tp67715
I1
s(g10784
I42
g10785
Vinsert
p67716
I52
VThisExpression
p67717
tp67718
I1
s(g4689
I42
g4690
Vinsert
p67719
I45
VStringLiteral: "\u005ctLEFT JOIN (\u005cn"
p67720
tp67721
I1
s(g4674
I42
g4675
Vinsert
p67722
I34
VNumberLiteral: 2
p67723
tp67724
I1
s(g1022
I42
g1023
Vinsert
p67725
I8
VBlock
p67726
tp67727
I3
s(g1835
I42
g1836
Vinsert
p67728
I39
VPrimitiveType: boolean
p67729
tp67730
I1
s(g12359
I42
g12360
Vinsert
p67731
I43
VSimpleType: OracleSizeExpr
p67732
tp67733
I2
s(g8919
I42
g8920
Vinsert
p67734
I21
VExpressionStatement
p67735
tp67736
I1
s(g14447
I42
g14448
Vinsert
p67737
I27
VInfixExpression: &&
p67738
tp67739
I1
s(g2614
I42
g2615
Vinsert
p67740
I42
VSimpleName: column
p67741
tp67742
I5
s(g2712
I42
g2713
Vinsert
p67743
I62
VInstanceofExpression
p67744
tp67745
I7
s(g19618
I42
g19619
Vinsert
p67746
I78
VMarkerAnnotation
p67747
tp67748
I1
s(g26260
I42
g26261
Vinsert
p67749
I45
VStringLiteral: " LIKE "
p67750
tp67751
I2
s(g7908
I42
g7909
Vinsert
p67752
I43
VSimpleType: SQLException
p67753
tp67754
I2
s(g4538
I42
g4539
Vinsert
p67755
I42
VSimpleName: SQLStatement
p67756
tp67757
I5
s(g13084
I42
g13085
Vinsert
p67758
I42
VSimpleName: assertEquals
p67759
tp67760
I19
s(Vinsert
p67761
I42
VSimpleName: equalsIgnoreCase
p67762
Vinsert
p67763
I42
VSimpleName: from
p67764
tp67765
I1
s(g13152
I42
g13153
Vinsert
p67766
I42
VSimpleName: restartDataSource
p67767
tp67768
I2
s(g2049
I42
g2050
Vinsert
p67769
I45
VStringLiteral: "PCTUSED 40\u005cn"
p67770
tp67771
I8
s(g20811
I42
g20812
Vinsert
p67772
I42
VSimpleName: driverClassName
p67773
tp67774
I3
s(g11845
I42
g11846
Vinsert
p67775
I8
VBlock
p67776
tp67777
I1
s(g6270
I42
g6271
Vinsert
p67778
I43
VSimpleType: SQLPropertyExpr
p67779
tp67780
I1
s(g2029
I42
g2030
Vinsert
p67781
I45
VStringLiteral: "ON"
p67782
tp67783
I1
s(g45596
I42
g45597
Vinsert
p67784
I45
VStringLiteral: "fields : "
p67785
tp67786
I12
s(g18437
I42
g18438
Vinsert
p67787
I42
VSimpleName: dataSource
p67788
tp67789
I4
s(g13264
I42
g13265
Vinsert
p67790
I40
VQualifiedName: Token.INITRANS
p67791
tp67792
I1
s(g33687
I42
g33688
Vinsert
p67793
I42
VSimpleName: jdbcUrl
p67794
tp67795
I3
s(g8588
I42
g8589
Vinsert
p67796
I42
VSimpleName: Exception
p67797
tp67798
I70
s(g1251
I42
g1252
Vinsert
p67799
I44
VSingleVariableDeclaration
p67800
tp67801
I2
s(g6607
I42
g6608
Vinsert
p67802
I42
VSimpleName: config
p67803
tp67804
I5
s(g16099
I42
g16100
Vinsert
p67805
I42
VSimpleName: trim
p67806
tp67807
I1
s(g657
I42
g658
Vinsert
p67808
I42
VSimpleName: dataSource
p67809
tp67810
I1
s(g2444
I42
g2445
Vinsert
p67811
I14
VClassInstanceCreation
p67812
tp67813
I1
s(Vinsert
p67814
I42
VSimpleName: visit
p67815
Vinsert
p67816
I42
VSimpleName: conditionValue
p67817
tp67818
I1
s(g11611
I42
g11612
Vinsert
p67819
I43
VSimpleType: String
p67820
tp67821
I10
s(g21667
I42
g21668
Vinsert
p67822
I9
VBooleanLiteral: true
p67823
tp67824
I1
s(g652
I42
g653
Vinsert
p67825
I42
VSimpleName: WebAppStatUtils
p67826
tp67827
I1
s(g121
I42
g122
Vinsert
p67828
I59
VVariableDeclarationFragment
p67829
tp67830
I1
s(g13493
I42
g13494
Vinsert
p67831
I42
VSimpleName: x
p67832
tp67833
I3
s(g7091
I42
g7092
Vinsert
p67834
I43
VSimpleType: PreparedStatementProxyImpl
p67835
tp67836
I1
s(g642
I42
g643
Vinsert
p67837
I42
VSimpleName: stringVal
p67838
tp67839
I2
s(g1007
I42
g1008
Vinsert
p67840
I59
VVariableDeclarationFragment
p67841
tp67842
I1
s(g2268
I42
g2269
Vinsert
p67843
I32
VMethodInvocation
p67844
tp67845
I15
s(g18437
I42
g18438
Vinsert
p67846
I45
VStringLiteral: "circe"
p67847
tp67848
I1
s(g31920
I42
g31921
Vinsert
p67849
I38
VPrefixExpression: ++
p67850
tp67851
I11
s(g7777
I42
g7778
Vinsert
p67852
I52
VThisExpression
p67853
tp67854
I1
s(g23093
I42
g23094
Vinsert
p67855
I42
VSimpleName: SHARE_ROW_EXCLUSIVE
p67856
tp67857
I1
s(g16060
I42
g16061
Vinsert
p67858
I21
VExpressionStatement
p67859
tp67860
I1
s(g11930
I42
g11931
Vinsert
p67861
I43
VSimpleType: SQLName
p67862
tp67863
I1
s(g24954
I42
g24955
Vinsert
p67864
I60
VVariableDeclarationStatement
p67865
tp67866
I1
s(g12427
I42
g12428
Vinsert
p67867
I42
VSimpleName: SQLServerTop
p67868
tp67869
I1
s(g16402
I42
g16403
Vinsert
p67870
I22
VFieldAccess
p67871
tp67872
I1
s(g30842
I42
g30843
Vinsert
p67873
I32
VMethodInvocation
p67874
tp67875
I2
s(g39972
I42
g39973
Vinsert
p67876
I27
VInfixExpression: ||
p67877
tp67878
I5
s(g21244
I42
g21245
Vinsert
p67879
I32
VMethodInvocation
p67880
tp67881
I4
s(g20975
I42
g20976
Vinsert
p67882
I44
VSingleVariableDeclaration
p67883
tp67884
I1
s(g331
I42
g332
Vinsert
p67885
I16
VConditionalExpression
p67886
tp67887
I1
s(g5123
I42
g5124
Vinsert
p67888
I40
VQualifiedName: rangeValues.length
p67889
tp67890
I1
s(Vinsert
p67891
I42
VSimpleName: close
p67892
Vinsert
p67893
I42
VSimpleName: next
p67894
tp67895
I1
s(g39672
I42
g39673
Vinsert
p67896
I65
VTagElement: @see
p67897
tp67898
I11
s(g492
I42
g493
Vinsert
p67899
I21
VExpressionStatement
p67900
tp67901
I1
s(g6796
I42
g6797
Vinsert
p67902
I42
VSimpleName: count
p67903
tp67904
I1
s(g7787
I42
g7788
Vinsert
p67905
I42
VSimpleName: SQLForeignKeyConstraint
p67906
tp67907
I1
s(g36179
I42
g36180
Vinsert
p67908
I21
VExpressionStatement
p67909
tp67910
I4
s(g2084
I42
g2085
Vinsert
p67911
I54
VTryStatement
p67912
tp67913
I1
s(g4806
I42
g4807
Vinsert
p67914
I42
VSimpleName: function
p67915
tp67916
I1
s(g5926
I42
g5927
Vinsert
p67917
I42
VSimpleName: getType
p67918
tp67919
I1
s(g1180
I42
g1181
Vinsert
p67920
I39
VPrimitiveType: void
p67921
tp67922
I2
s(g43952
I42
g43953
Vinsert
p67923
I43
VSimpleType: Exception
p67924
tp67925
I1
s(g1140
I42
g1141
Vinsert
p67926
I21
VExpressionStatement
p67927
tp67928
I3
s(g25317
I42
g25318
Vinsert
p67929
I42
VSimpleName: parameters
p67930
tp67931
I7
s(g21039
I42
g21040
Vinsert
p67932
I42
VSimpleName: print
p67933
tp67934
I2
s(g9222
I42
g9223
Vinsert
p67935
I8
VBlock
p67936
tp67937
I1
s(g18836
I42
g18837
Vinsert
p67938
I42
VSimpleName: filterConfig
p67939
tp67940
I1
s(g27350
I42
g27351
Vinsert
p67941
I42
VSimpleName: SQLUtils
p67942
tp67943
I55
s(g65809
I42
g65810
Vinsert
p67944
I40
VQualifiedName: x.alias
p67945
tp67946
I1
s(g20796
I42
g20797
Vinsert
p67947
I43
VSimpleType: SQLException
p67948
tp67949
I1
s(g9732
I42
g9733
Vinsert
p67950
I27
VInfixExpression: ==
p67951
tp67952
I1
s(g14535
I42
g14536
Vinsert
p67953
I45
VStringLiteral: "\u005ct\u005ctAND outer.dbinc_key = dbinc_key\u005cn"
p67954
tp67955
I1
s(g7883
I42
g7884
Vinsert
p67956
I42
VSimpleName: error_code
p67957
tp67958
I1
s(g8956
I42
g8957
Vinsert
p67959
I60
VVariableDeclarationStatement
p67960
tp67961
I1
s(g2228
I42
g2229
Vinsert
p67962
I42
VSimpleName: print
p67963
tp67964
I1
s(g5564
I42
g5565
Vinsert
p67965
I42
VSimpleName: selectList
p67966
tp67967
I1
s(g59152
I42
g59153
Vinsert
p67968
I45
VStringLiteral: "concat"
p67969
tp67970
I1
s(g36213
I42
g36214
Vinsert
p67971
I42
VSimpleName: Primary
p67972
tp67973
I1
s(Vinsert
p67974
I42
VSimpleName: output
p67975
Vinsert
p67976
I42
VSimpleName: left
p67977
tp67978
I2
s(g13525
I42
g13526
Vinsert
p67979
I39
VPrimitiveType: boolean
p67980
tp67981
I3
s(g1705
I42
g1706
Vinsert
p67982
I42
VSimpleName: engine
p67983
tp67984
I4
s(g12488
I42
g12489
Vinsert
p67985
I70
VEnhancedForStatement
p67986
tp67987
I1
s(g14527
I42
g14528
Vinsert
p67988
I27
VInfixExpression: ==
p67989
tp67990
I1
s(g13493
I42
g13494
Vinsert
p67991
I43
VSimpleType: ParameterizedVisitor
p67992
tp67993
I3
s(g1511
I42
g1512
Vinsert
p67994
I43
VSimpleType: OracleConnection
p67995
tp67996
I3
s(g21643
I42
g21644
Vinsert
p67997
I39
VPrimitiveType: boolean
p67998
tp67999
I5
s(g4495
I42
g4496
Vinsert
p68000
I25
VIfStatement
p68001
tp68002
I6
s(g28278
I42
g28279
Vinsert
p68003
I42
VSimpleName: lexer
p68004
tp68005
I14
s(g10869
I42
g10870
Vinsert
p68006
I42
VSimpleName: autoCommit
p68007
tp68008
I4
s(g11765
I42
g11766
Vinsert
p68009
I43
VSimpleType: DruidDataSourceStatJNDIStatStrategy
p68010
tp68011
I1
s(g6354
I42
g6355
Vinsert
p68012
I43
VSimpleType: RuntimeException
p68013
tp68014
I1
s(g2925
I42
g2926
Vinsert
p68015
I42
VSimpleName: token
p68016
tp68017
I2
s(g13685
I42
g13686
Vinsert
p68018
I42
VSimpleName: filters
p68019
tp68020
I2
s(Vinsert
p68021
I42
VSimpleName: execute
p68022
Vinsert
p68023
I42
VSimpleName: chain
p68024
tp68025
I2
s(g30561
I42
g30562
Vinsert
p68026
I34
VNumberLiteral: 1001L
p68027
tp68028
I1
s(g6786
I42
g6787
Vinsert
p68029
I32
VMethodInvocation
p68030
tp68031
I8
s(g12050
I42
g12051
Vinsert
p68032
I45
VStringLiteral: "\u005ct\u005ct\u005ct\u005ctFROM itsm_system_menu\u005cn"
p68033
tp68034
I1
s(g42619
I42
g42620
Vinsert
p68035
I42
VSimpleName: parent
p68036
tp68037
I1
s(g21252
I42
g21253
Vinsert
p68038
I33
VNullLiteral
p68039
tp68040
I1
s(g11686
I42
g11687
Vinsert
p68041
I45
VStringLiteral: "\u005cn\u005ctlist_price NUMBER(8, 2),"
p68042
tp68043
I2
s(g16123
I42
g16124
Vinsert
p68044
I83
VModifier: public
p68045
tp68046
I1
s(g5409
I42
g5410
Vinsert
p68047
I7
VAssignment: =
p68048
tp68049
I8
s(g33839
I42
g33840
Vinsert
p68050
I42
VSimpleName: cond
p68051
tp68052
I2
s(g8778
I42
g8779
Vinsert
p68053
I40
VQualifiedName: Token.EOF
p68054
tp68055
I1
s(g9657
I42
g9658
Vinsert
p68056
I40
VQualifiedName: DruidDataSourceFactory.PROP_USERNAME
p68057
tp68058
I1
s(g5872
I42
g5873
Vinsert
p68059
I42
VSimpleName: select
p68060
tp68061
I4
s(g5069
I42
g5070
Vinsert
p68062
I43
VSimpleType: OracleInsertStatement
p68063
tp68064
I2
s(g67761
I42
g67762
Vinsert
p68065
I42
VSimpleName: alias
p68066
tp68067
I4
s(g20288
I42
g20289
Vinsert
p68068
I43
VSimpleType: MySqlDeclareStatement
p68069
tp68070
I1
s(g11686
I42
g11687
Vinsert
p68071
I45
VStringLiteral: "\u005cnPARTITION BY HASH (product_id) PARTITIONS 4"
p68072
tp68073
I2
s(g5638
I42
g5639
Vinsert
p68074
I42
VSimpleName: createChain
p68075
tp68076
I1
s(g53390
I42
g53391
Vinsert
p68077
I42
VSimpleName: select
p68078
tp68079
I7
s(g28507
I42
g28508
Vinsert
p68080
I42
VSimpleName: conn
p68081
tp68082
I1
s(g10542
I42
g10543
Vinsert
p68083
I27
VInfixExpression: +
p68084
tp68085
I10
s(g4273
I42
g4274
Vinsert
p68086
I8
VBlock
p68087
tp68088
I14
s(g10882
I42
g10883
Vinsert
p68089
I62
VInstanceofExpression
p68090
tp68091
I11
s(g11601
I42
g11602
Vinsert
p68092
I42
VSimpleName: pivot
p68093
tp68094
I1
s(g5520
I42
g5521
Vinsert
p68095
I44
VSingleVariableDeclaration
p68096
tp68097
I1
s(g2294
I42
g2295
Vinsert
p68098
I42
VSimpleName: x
p68099
tp68100
I9
s(g7275
I42
g7276
Vinsert
p68101
I39
VPrimitiveType: void
p68102
tp68103
I1
s(g15485
I42
g15486
Vinsert
p68104
I21
VExpressionStatement
p68105
tp68106
I8
s(g30364
I42
g30365
Vinsert
p68107
I45
VStringLiteral: "\u005cnwhere status = '20' -- comment xxx"
p68108
tp68109
I1
s(g16586
I42
g16587
Vinsert
p68110
I42
VSimpleName: findTableSourceWithColumn
p68111
tp68112
I3
s(g597
I42
g598
Vinsert
p68113
I31
VMethodDeclaration
p68114
tp68115
I1
s(g27056
I42
g27057
Vinsert
p68116
I42
VSimpleName: typeName
p68117
tp68118
I2
s(g15153
I42
g15154
Vinsert
p68119
I42
VSimpleName: WallConfig
p68120
tp68121
I2
s(g6236
I42
g6237
Vinsert
p68122
I42
VSimpleName: SQLAlterTableRenameColumn
p68123
tp68124
I1
s(g1883
I42
g1884
Vinsert
p68125
I44
VSingleVariableDeclaration
p68126
tp68127
I1
s(g806
I42
g807
Vinsert
p68128
I33
VNullLiteral
p68129
tp68130
I2
s(g16304
I42
g16305
Vinsert
p68131
I42
VSimpleName: print
p68132
tp68133
I18
s(g3659
I42
g3660
Vinsert
p68134
I40
VQualifiedName: Token.LITERAL_INT
p68135
tp68136
I1
s(g38850
I42
g38851
Vinsert
p68137
I22
VFieldAccess
p68138
tp68139
I9
s(g17082
I42
g17083
Vinsert
p68140
I42
VSimpleName: getDataSource
p68141
tp68142
I1
s(g487
I42
g488
Vinsert
p68143
I8
VBlock
p68144
tp68145
I1
s(g86
I42
g87
Vinsert
p68146
I31
VMethodDeclaration
p68147
tp68148
I1
s(g18021
I42
g18022
Vinsert
p68149
I44
VSingleVariableDeclaration
p68150
tp68151
I3
s(g42953
I42
g42954
Vinsert
p68152
I42
VSimpleName: acceptChild
p68153
tp68154
I1
s(g22025
I42
g22026
Vinsert
p68155
I42
VSimpleName: getLastErrorTimeMillis
p68156
tp68157
I1
s(g6516
I42
g6517
Vinsert
p68158
I14
VClassInstanceCreation
p68159
tp68160
I2
s(g19451
I42
g19452
Vinsert
p68161
I42
VSimpleName: session
p68162
tp68163
I2
s(g4625
I42
g4626
Vinsert
p68164
I42
VSimpleName: parseExplain
p68165
tp68166
I1
s(g6655
I42
g6656
Vinsert
p68167
I41
VReturnStatement
p68168
tp68169
I1
s(g2203
I42
g2204
Vinsert
p68170
I8
VBlock
p68171
tp68172
I1
s(g3760
I42
g3761
Vinsert
p68173
I42
VSimpleName: nextToken
p68174
tp68175
I1
s(g39356
I42
g39357
Vinsert
p68176
I83
VModifier: static
p68177
tp68178
I4
s(g947
I42
g948
Vinsert
p68179
I33
VNullLiteral
p68180
tp68181
I3
s(g59363
I42
g59364
Vinsert
p68182
I45
VStringLiteral: " "
p68183
tp68184
I1
s(g2372
I42
g2373
Vinsert
p68185
I21
VExpressionStatement
p68186
tp68187
I16
s(g7417
I42
g7418
Vinsert
p68188
I40
VQualifiedName: x.right
p68189
tp68190
I1
s(g1544
I42
g1545
Vinsert
p68191
I45
VStringLiteral: "\u005ctVALUE VARCHAR(400),\u005cn"
p68192
tp68193
I1
s(g1160
I42
g1161
Vinsert
p68194
I41
VReturnStatement
p68195
tp68196
I1
s(g26244
I42
g26245
Vinsert
p68197
I42
VSimpleName: Assert
p68198
tp68199
I1
s(g20320
I42
g20321
Vinsert
p68200
I7
VAssignment: =
p68201
tp68202
I1
s(g15402
I42
g15403
Vinsert
p68203
I42
VSimpleName: setMinIdle
p68204
tp68205
I2
s(g1647
I42
g1648
Vinsert
p68206
I59
VVariableDeclarationFragment
p68207
tp68208
I1
s(g17490
I42
g17491
Vinsert
p68209
I45
VStringLiteral: "\u005cn\u005ctPARTITION p0 VALUES LESS THAN (1991),"
p68210
tp68211
I1
s(g61684
I42
g61685
Vinsert
p68212
I42
VSimpleName: jdbcFetchRowCount
p68213
tp68214
I1
s(g8324
I42
g8325
Vinsert
p68215
I45
VStringLiteral: "\u005ct\u005ctLOCATION ('retl-table.cfg')\u005cn"
p68216
tp68217
I1
s(g22587
I42
g22588
Vinsert
p68218
I42
VSimpleName: conn
p68219
tp68220
I3
s(g4684
I42
g4685
Vinsert
p68221
I42
VSimpleName: lexer
p68222
tp68223
I1
s(g3053
I42
g3054
Vinsert
p68224
I42
VSimpleName: update
p68225
tp68226
I1
s(g8914
I42
g8915
Vinsert
p68227
I42
VSimpleName: dataSourceB
p68228
tp68229
I1
s(g1334
I42
g1335
Vinsert
p68230
I45
VStringLiteral: "\u005cn\u005ctUNIQUE (PROC_INST_ID_)"
p68231
tp68232
I2
s(g2009
I42
g2010
Vinsert
p68233
I42
VSimpleName: List
p68234
tp68235
I1
s(g3689
I42
g3690
Vinsert
p68236
I52
VThisExpression
p68237
tp68238
I2
s(g14026
I42
g14027
Vinsert
p68239
I83
VModifier: public
p68240
tp68241
I2
s(g1461
I42
g1462
Vinsert
p68242
I42
VSimpleName: setUrl
p68243
tp68244
I2
s(g14118
I42
g14119
Vinsert
p68245
I11
VCastExpression
p68246
tp68247
I2
s(g10016
I42
g10017
Vinsert
p68248
I42
VSimpleName: mergeStatement
p68249
tp68250
I1
s(g19451
I42
g19452
Vinsert
p68251
I42
VSimpleName: getAttribute
p68252
tp68253
I2
s(g10655
I42
g10656
Vinsert
p68254
I42
VSimpleName: filter
p68255
tp68256
I1
s(g8849
I42
g8850
Vinsert
p68257
I36
VParenthesizedExpression
p68258
tp68259
I1
s(g41660
I42
g41661
Vinsert
p68260
I41
VReturnStatement
p68261
tp68262
I1
s(g14749
I42
g14750
Vinsert
p68263
I42
VSimpleName: SQLIdentifierExpr
p68264
tp68265
I2
s(g4170
I42
g4171
Vinsert
p68266
I42
VSimpleName: countExpr
p68267
tp68268
I1
s(g5666
I42
g5667
Vinsert
p68269
I43
VSimpleType: DataSourceData
p68270
tp68271
I1
s(g29207
I42
g29208
Vinsert
p68272
I45
VStringLiteral: ", `status`, `type`, `sub_type`, `gmt_create`, `gmt_modified`\u005cn"
p68273
tp68274
I1
s(g977
I42
g978
Vinsert
p68275
I8
VBlock
p68276
tp68277
I3
s(g14266
I42
g14267
Vinsert
p68278
I42
VSimpleName: token
p68279
tp68280
I3
s(Vinsert
p68281
I42
VSimpleName: take
p68282
Vinsert
p68283
I45
VStringLiteral: "Take Thread"
p68284
tp68285
I1
s(g25924
I42
g25925
Vinsert
p68286
I42
VSimpleName: getFields
p68287
tp68288
I1
s(g4890
I42
g4891
Vinsert
p68289
I42
VSimpleName: ATTR_SQL_STAT
p68290
tp68291
I1
s(g5638
I42
g5639
Vinsert
p68292
I42
VSimpleName: SQLException
p68293
tp68294
I1
s(g5653
I42
g5654
Vinsert
p68295
I42
VSimpleName: modelRulesClause
p68296
tp68297
I1
s(g6755
I42
g6756
Vinsert
p68298
I21
VExpressionStatement
p68299
tp68300
I3
s(g3913
I42
g3914
Vinsert
p68301
I45
VStringLiteral: "OIDINDEX"
p68302
tp68303
I1
s(g6018
I42
g6019
Vinsert
p68304
I45
VStringLiteral: "connect by prior EmpId = MgrId"
p68305
tp68306
I1
s(g8765
I42
g8766
Vinsert
p68307
I42
VSimpleName: setSchemaCheck
p68308
tp68309
I1
s(Vinsert
p68310
I42
VSimpleName: token
p68311
Vinsert
p68312
I45
VStringLiteral: "TODO "
p68313
tp68314
I9
s(g19618
I42
g19619
Vinsert
p68315
I83
VModifier: public
p68316
tp68317
I1
s(g9629
I42
g9630
Vinsert
p68318
I42
VSimpleName: WallVisitorUtils
p68319
tp68320
I4
s(g3327
I42
g3328
Vinsert
p68321
I22
VFieldAccess
p68322
tp68323
I1
s(g7315
I42
g7316
Vinsert
p68324
I45
VStringLiteral: "Null CompositeData"
p68325
tp68326
I1
s(g3674
I42
g3675
Vinsert
p68327
I45
VStringLiteral: " SQLSTATE "
p68328
tp68329
I1
s(g14026
I42
g14027
Vinsert
p68330
I31
VMethodDeclaration
p68331
tp68332
I2
s(g2940
I42
g2941
Vinsert
p68333
I42
VSimpleName: SQLObjectType
p68334
tp68335
I1
s(g22406
I42
g22407
Vinsert
p68336
I34
VNumberLiteral: 2
p68337
tp68338
I7
s(g9332
I42
g9333
Vinsert
p68339
I59
VVariableDeclarationFragment
p68340
tp68341
I4
s(g26531
I42
g26532
Vinsert
p68342
I42
VSimpleName: selectStmt
p68343
tp68344
I4
s(g11827
I42
g11828
Vinsert
p68345
I42
VSimpleName: jdbcExecuteCount
p68346
tp68347
I1
s(Vinsert
p68348
I42
VSimpleName: add
p68349
Vinsert
p68350
I5
VArrayType: String[]
p68351
tp68352
I1
s(g4964
I42
g4965
Vinsert
p68353
I42
VSimpleName: initStatement
p68354
tp68355
I1
s(g16935
I42
g16936
Vinsert
p68356
I42
VSimpleName: timer
p68357
tp68358
I1
s(g9977
I42
g9978
Vinsert
p68359
I32
VMethodInvocation
p68360
tp68361
I25
s(g14118
I42
g14119
Vinsert
p68362
I42
VSimpleName: SQLIdentifierExpr
p68363
tp68364
I6
s(g48101
I42
g48102
Vinsert
p68365
I42
VSimpleName: sorter
p68366
tp68367
I1
s(g3554
I42
g3555
Vinsert
p68368
I21
VExpressionStatement
p68369
tp68370
I2
s(g29300
I42
g29301
Vinsert
p68371
I42
VSimpleName: groupBy
p68372
tp68373
I3
s(g8293
I42
g8294
Vinsert
p68374
I42
VSimpleName: setBeforeExistingAdvisors
p68375
tp68376
I1
s(g1612
I42
g1613
Vinsert
p68377
I27
VInfixExpression: *
p68378
tp68379
I1
s(g24216
I42
g24217
Vinsert
p68380
I42
VSimpleName: oracleStmt
p68381
tp68382
I1
s(g25097
I42
g25098
Vinsert
p68383
I42
VSimpleName: tableName
p68384
tp68385
I2
s(g11910
I42
g11911
Vinsert
p68386
I42
VSimpleName: getExpr
p68387
tp68388
I1
s(g62607
I42
g62608
Vinsert
p68389
I43
VSimpleType: MySqlExportParameterVisitor
p68390
tp68391
I1
s(g28764
I42
g28765
Vinsert
p68392
I42
VSimpleName: isInfoEnabled
p68393
tp68394
I1
s(g2707
I42
g2708
Vinsert
p68395
I42
VSimpleName: ReflectionUtils
p68396
tp68397
I1
s(g10846
I42
g10847
Vinsert
p68398
I42
VSimpleName: HttpURLConnection
p68399
tp68400
I1
s(g12082
I42
g12083
Vinsert
p68401
I52
VThisExpression
p68402
tp68403
I1
s(g19708
I42
g19709
Vinsert
p68404
I22
VFieldAccess
p68405
tp68406
I2
s(g13066
I42
g13067
Vinsert
p68407
I42
VSimpleName: stmt
p68408
tp68409
I4
s(g8282
I42
g8283
Vinsert
p68410
I32
VMethodInvocation
p68411
tp68412
I1
s(g10813
I42
g10814
Vinsert
p68413
I45
VStringLiteral: ", ?"
p68414
tp68415
I1
s(g6293
I42
g6294
Vinsert
p68416
I78
VMarkerAnnotation
p68417
tp68418
I1
s(g2533
I42
g2534
Vinsert
p68419
I36
VParenthesizedExpression
p68420
tp68421
I1
s(g1544
I42
g1545
Vinsert
p68422
I42
VSimpleName: statementList
p68423
tp68424
I36
s(g2525
I42
g2526
Vinsert
p68425
I42
VSimpleName: SQLStatement
p68426
tp68427
I6
s(g4278
I42
g4279
Vinsert
p68428
I45
VStringLiteral: "+--------------+--------------+------+-----+---------------------+-----------------------------+\u005cn"
p68429
tp68430
I1
s(g15345
I42
g15346
Vinsert
p68431
I42
VSimpleName: cause
p68432
tp68433
I1
s(g17074
I42
g17075
Vinsert
p68434
I45
VStringLiteral: "\u005ctPRIMARY KEY (`id`),\u005cn"
p68435
tp68436
I1
s(g1785
I42
g1786
Vinsert
p68437
I42
VSimpleName: JdbcStatManager
p68438
tp68439
I2
s(g20293
I42
g20294
Vinsert
p68440
I42
VSimpleName: table
p68441
tp68442
I2
s(g6338
I42
g6339
Vinsert
p68443
I33
VNullLiteral
p68444
tp68445
I3
s(g2717
I42
g2718
Vinsert
p68446
I43
VSimpleType: OracleSchemaStatVisitor
p68447
tp68448
I2
s(g5409
I42
g5410
Vinsert
p68449
I42
VSimpleName: configStream
p68450
tp68451
I2
s(g2084
I42
g2085
Vinsert
p68452
I85
VDimension
p68453
tp68454
I1
s(g39318
I42
g39319
Vinsert
p68455
I42
VSimpleName: SQLIdentifierExpr
p68456
tp68457
I2
s(g6475
I42
g6476
Vinsert
p68458
I83
VModifier: public
p68459
tp68460
I1
s(g16123
I42
g16124
Vinsert
p68461
I43
VSimpleType: HttpServletRequest
p68462
tp68463
I1
s(g9332
I42
g9333
Vinsert
p68464
I27
VInfixExpression: <=
p68465
tp68466
I1
s(g13272
I42
g13273
Vinsert
p68467
I39
VPrimitiveType: boolean
p68468
tp68469
I1
s(g1825
I42
g1826
Vinsert
p68470
I42
VSimpleName: dataSource
p68471
tp68472
I83
s(g26409
I42
g26410
Vinsert
p68473
I45
VStringLiteral: "\u005cnb.customer_id,"
p68474
tp68475
I1
s(g20100
I42
g20101
Vinsert
p68476
I43
VSimpleType: SQLTableSource
p68477
tp68478
I2
s(g6252
I42
g6253
Vinsert
p68479
I43
VSimpleType: SQLRollbackStatement
p68480
tp68481
I1
s(g34468
I42
g34469
Vinsert
p68482
I42
VSimpleName: currentTableLocal
p68483
tp68484
I3
s(g3709
I42
g3710
Vinsert
p68485
I60
VVariableDeclarationStatement
p68486
tp68487
I1
s(g381
I42
g382
Vinsert
p68488
I42
VSimpleName: modelClause
p68489
tp68490
I1
s(g6116
I42
g6117
Vinsert
p68491
I32
VMethodInvocation
p68492
tp68493
I1
s(Vinsert
p68494
I42
VSimpleName: nextToken
p68495
Vinsert
p68496
I40
VQualifiedName: SQLBinaryOperator.GreaterThan
p68497
tp68498
I1
s(g7642
I42
g7643
Vinsert
p68499
I59
VVariableDeclarationFragment
p68500
tp68501
I25
s(g11161
I42
g11162
Vinsert
p68502
I42
VSimpleName: parseAggregateExprRest
p68503
tp68504
I1
s(g20364
I42
g20365
Vinsert
p68505
I42
VSimpleName: providerC
p68506
tp68507
I2
s(g4750
I42
g4751
Vinsert
p68508
I27
VInfixExpression: !=
p68509
tp68510
I4
s(g5520
I42
g5521
Vinsert
p68511
I8
VBlock
p68512
tp68513
I1
s(g14801
I42
g14802
Vinsert
p68514
I42
VSimpleName: MysqlDeallocatePrepareStatement
p68515
tp68516
I2
s(g763
I42
g764
Vinsert
p68517
I40
VQualifiedName: Token.IS
p68518
tp68519
I1
s(g2707
I42
g2708
Vinsert
p68520
I74
VParameterizedType: Class<?>
p68521
tp68522
I1
s(g1511
I42
g1512
Vinsert
p68523
I42
VSimpleName: unwrapped
p68524
tp68525
I1
s(g14943
I42
g14944
Vinsert
p68526
I42
VSimpleName: test_resultSet_metadata
p68527
tp68528
I1
s(g9977
I42
g9978
Vinsert
p68529
I43
VSimpleType: Exception
p68530
tp68531
I12
s(g50779
I42
g50780
Vinsert
p68532
I42
VSimpleName: clause
p68533
tp68534
I1
s(g8381
I42
g8382
Vinsert
p68535
I42
VSimpleName: MySqlUpdateStatement
p68536
tp68537
I1
s(g8721
I42
g8722
Vinsert
p68538
I16
VConditionalExpression
p68539
tp68540
I3
s(g9878
I42
g9879
Vinsert
p68541
I22
VFieldAccess
p68542
tp68543
I2
s(g15986
I42
g15987
Vinsert
p68544
I44
VSingleVariableDeclaration
p68545
tp68546
I1
s(g196
I42
g197
Vinsert
p68547
I45
VStringLiteral: ") T2\u005cn"
p68548
tp68549
I1
s(g891
I42
g892
Vinsert
p68550
I32
VMethodInvocation
p68551
tp68552
I1
s(g4409
I42
g4410
Vinsert
p68553
I21
VExpressionStatement
p68554
tp68555
I1
s(g2329
I42
g2330
Vinsert
p68556
I21
VExpressionStatement
p68557
tp68558
I1
s(g2925
I42
g2926
Vinsert
p68559
I8
VBlock
p68560
tp68561
I4
s(g21572
I42
g21573
Vinsert
p68562
I31
VMethodDeclaration
p68563
tp68564
I1
s(g25573
I42
g25574
Vinsert
p68565
I42
VSimpleName: methodName
p68566
tp68567
I2
s(g15294
I42
g15295
Vinsert
p68568
I32
VMethodInvocation
p68569
tp68570
I3
s(g4080
I42
g4081
Vinsert
p68571
I40
VQualifiedName: Types.TIMESTAMP
p68572
tp68573
I1
s(g1943
I42
g1944
Vinsert
p68574
I43
VSimpleType: PoolablePreparedStatement
p68575
tp68576
I1
s(g8765
I42
g8766
Vinsert
p68577
I42
VSimpleName: getConfig
p68578
tp68579
I1
s(g19207
I42
g19208
Vinsert
p68580
I43
VSimpleType: OracleReturningClause
p68581
tp68582
I2
s(Vinsert
p68583
I42
VSimpleName: getTables
p68584
Vinsert
p68585
I40
VQualifiedName: JdbcConstants.ORACLE
p68586
tp68587
I3
s(g6328
I42
g6329
Vinsert
p68588
I42
VSimpleName: getContextPath
p68589
tp68590
I1
s(g8006
I42
g8007
Vinsert
p68591
I83
VModifier: private
p68592
tp68593
I1
s(g12822
I42
g12823
Vinsert
p68594
I21
VExpressionStatement
p68595
tp68596
I1
s(g66052
I42
g66053
Vinsert
p68597
I21
VExpressionStatement
p68598
tp68599
I1
s(g131
I42
g132
Vinsert
p68600
I21
VExpressionStatement
p68601
tp68602
I4
s(g11360
I42
g11361
Vinsert
p68603
I21
VExpressionStatement
p68604
tp68605
I3
s(g9949
I42
g9950
Vinsert
p68606
I27
VInfixExpression: &&
p68607
tp68608
I2
s(g10467
I42
g10468
Vinsert
p68609
I74
VParameterizedType: Map<String,Object>
p68610
tp68611
I3
s(g29658
I42
g29659
Vinsert
p68612
I60
VVariableDeclarationStatement
p68613
tp68614
I21
s(g6539
I42
g6540
Vinsert
p68615
I45
VStringLiteral: "\u005cn\u005ctjob_id VARCHAR2(9),"
p68616
tp68617
I6
s(g10116
I42
g10117
Vinsert
p68618
I7
VAssignment: =
p68619
tp68620
I1
s(g17665
I42
g17666
Vinsert
p68621
I42
VSimpleName: cal
p68622
tp68623
I1
s(g2130
I42
g2131
Vinsert
p68624
I43
VSimpleType: Calendar
p68625
tp68626
I1
s(g53379
I42
g53380
Vinsert
p68627
I42
VSimpleName: exprA
p68628
tp68629
I3
s(g39953
I42
g39954
Vinsert
p68630
I45
VStringLiteral: "                   from ireport.dm_mdm_mem_prod_noeff_sdt0"
p68631
tp68632
I1
s(g10082
I42
g10083
Vinsert
p68633
I83
VModifier: public
p68634
tp68635
I1
s(g7512
I42
g7513
Vinsert
p68636
I59
VVariableDeclarationFragment
p68637
tp68638
I1
s(g1544
I42
g1545
Vinsert
p68639
I42
VSimpleName: SQLStatement
p68640
tp68641
I52
s(g9883
I42
g9884
Vinsert
p68642
I8
VBlock
p68643
tp68644
I1
s(g21572
I42
g21573
Vinsert
p68645
I42
VSimpleName: dataType
p68646
tp68647
I1
s(g18270
I42
g18271
Vinsert
p68648
I45
VStringLiteral: "ESCAPED"
p68649
tp68650
I1
s(g10527
I42
g10528
Vinsert
p68651
I42
VSimpleName: tableReference
p68652
tp68653
I1
s(g14896
I42
g14897
Vinsert
p68654
I42
VSimpleName: visit
p68655
tp68656
I1
s(g26998
I42
g26999
Vinsert
p68657
I42
VSimpleName: LogFactory
p68658
tp68659
I2
s(g31463
I42
g31464
Vinsert
p68660
I42
VSimpleName: DruidDriver
p68661
tp68662
I2
s(g4890
I42
g4891
Vinsert
p68663
I54
VTryStatement
p68664
tp68665
I1
s(g6429
I42
g6430
Vinsert
p68666
I43
VSimpleType: SQLSelectGroupByClause
p68667
tp68668
I1
s(g16005
I42
g16006
Vinsert
p68669
I42
VSimpleName: String
p68670
tp68671
I1
s(g23913
I42
g23914
Vinsert
p68672
I32
VMethodInvocation
p68673
tp68674
I7
s(g21155
I42
g21156
Vinsert
p68675
I42
VSimpleName: isEqualTo
p68676
tp68677
I1
s(g3149
I42
g3150
Vinsert
p68678
I43
VSimpleType: SQLExpr
p68679
tp68680
I1
s(g56302
I42
g56303
Vinsert
p68681
I45
VStringLiteral: "\u005cn\u005ctPROFILE_PICTURE_URI VARCHAR(767),"
p68682
tp68683
I1
s(g12938
I42
g12939
Vinsert
p68684
I21
VExpressionStatement
p68685
tp68686
I2
s(g26613
I42
g26614
Vinsert
p68687
I42
VSimpleName: isResetEnable
p68688
tp68689
I1
s(g18187
I42
g18188
Vinsert
p68690
I21
VExpressionStatement
p68691
tp68692
I4
s(g1647
I42
g1648
Vinsert
p68693
I42
VSimpleName: List
p68694
tp68695
I1
s(g1193
I42
g1194
Vinsert
p68696
I33
VNullLiteral
p68697
tp68698
I1
s(g1536
I42
g1537
Vinsert
p68699
I8
VBlock
p68700
tp68701
I1
s(g16888
I42
g16889
Vinsert
p68702
I42
VSimpleName: lexer
p68703
tp68704
I3
s(g12555
I42
g12556
Vinsert
p68705
I43
VSimpleType: Map
p68706
tp68707
I1
s(g572
I42
g573
Vinsert
p68708
I42
VSimpleName: createTableStmt
p68709
tp68710
I2
s(g532
I42
g533
Vinsert
p68711
I42
VSimpleName: function
p68712
tp68713
I1
s(g16479
I42
g16480
Vinsert
p68714
I42
VSimpleName: setDataSource
p68715
tp68716
I2
s(g3322
I42
g3323
Vinsert
p68717
I45
VStringLiteral: ");\u005cn"
p68718
tp68719
I1
s(g8528
I42
g8529
Vinsert
p68720
I42
VSimpleName: getName
p68721
tp68722
I1
s(g1344
I42
g1345
Vinsert
p68723
I45
VStringLiteral: "Chrome"
p68724
tp68725
I1
s(g20811
I42
g20812
Vinsert
p68726
I12
VCatchClause
p68727
tp68728
I6
s(g1780
I42
g1781
Vinsert
p68729
I32
VMethodInvocation
p68730
tp68731
I7
s(g20548
I42
g20549
Vinsert
p68732
I11
VCastExpression
p68733
tp68734
I2
s(g37021
I42
g37022
Vinsert
p68735
I40
VQualifiedName: Token.IDENTIFIER
p68736
tp68737
I4
s(g25339
I42
g25340
Vinsert
p68738
I40
VQualifiedName: JdbcConstants.POSTGRESQL
p68739
tp68740
I1
s(g14765
I42
g14766
Vinsert
p68741
I43
VSimpleType: Filter
p68742
tp68743
I1
s(g27744
I42
g27745
Vinsert
p68744
I45
VStringLiteral: "SELECT COALESCE(("
p68745
tp68746
I1
s(Vinsert
p68747
I42
VSimpleName: nextToken
p68748
Vinsert
p68749
I45
VStringLiteral: "TO"
p68750
tp68751
I3
s(g1627
I42
g1628
Vinsert
p68752
I43
VSimpleType: String
p68753
tp68754
I6
s(g34347
I42
g34348
Vinsert
p68755
I42
VSimpleName: param0Value
p68756
tp68757
I2
s(g4015
I42
g4016
Vinsert
p68758
I42
VSimpleName: filters
p68759
tp68760
I1
s(g2935
I42
g2936
Vinsert
p68761
I42
VSimpleName: accept0
p68762
tp68763
I2
s(g7469
I42
g7470
Vinsert
p68764
I8
VBlock
p68765
tp68766
I1
s(g4263
I42
g4264
Vinsert
p68767
I14
VClassInstanceCreation
p68768
tp68769
I1
s(g23867
I42
g23868
Vinsert
p68770
I42
VSimpleName: using
p68771
tp68772
I3
s(g22009
I42
g22010
Vinsert
p68773
I42
VSimpleName: sql
p68774
tp68775
I15
s(g30670
I42
g30671
Vinsert
p68776
I40
VQualifiedName: Token.NONE
p68777
tp68778
I1
s(g25165
I42
g25166
Vinsert
p68779
I42
VSimpleName: getConnectionStat
p68780
tp68781
I1
s(g4283
I42
g4284
Vinsert
p68782
I60
VVariableDeclarationStatement
p68783
tp68784
I1
s(g5252
I42
g5253
Vinsert
p68785
I45
VStringLiteral: "\u005ct\u005ct\u005ct('4254cc14-1c83-4eaf-95ae-59438dd0cc17', '5fd20fa9-7659-4f8b-a4c2-2021a48317d8', now(),now(),null,null)"
p68786
tp68787
I1
s(Vinsert
p68788
I42
VSimpleName: equals
p68789
Vinsert
p68790
I40
VQualifiedName: other.name
p68791
tp68792
I3
s(g6359
I42
g6360
Vinsert
p68793
I21
VExpressionStatement
p68794
tp68795
I2
s(g21413
I42
g21414
Vinsert
p68796
I42
VSimpleName: Date
p68797
tp68798
I1
s(g37038
I42
g37039
Vinsert
p68799
I42
VSimpleName: classObject
p68800
tp68801
I2
s(g19355
I42
g19356
Vinsert
p68802
I40
VQualifiedName: com.alibaba.druid.sql.ast.expr.SQLQueryExpr
p68803
tp68804
I4
s(g4630
I42
g4631
Vinsert
p68805
I45
VStringLiteral: "delete none condition not allow"
p68806
tp68807
I1
s(g7346
I42
g7347
Vinsert
p68808
I42
VSimpleName: MySqlBinaryExpr
p68809
tp68810
I1
s(g28880
I42
g28881
Vinsert
p68811
I42
VSimpleName: alias
p68812
tp68813
I1
s(g11890
I42
g11891
Vinsert
p68814
I52
VThisExpression
p68815
tp68816
I4
s(g56
I42
g57
Vinsert
p68817
I9
VBooleanLiteral: true
p68818
tp68819
I1
s(g12911
I42
g12912
Vinsert
p68820
I34
VNumberLiteral: 1
p68821
tp68822
I1
s(g16402
I42
g16403
Vinsert
p68823
I42
VSimpleName: nextFilter
p68824
tp68825
I1
s(g36106
I42
g36107
Vinsert
p68826
I42
VSimpleName: filter
p68827
tp68828
I1
s(g176
I42
g177
Vinsert
p68829
I42
VSimpleName: print
p68830
tp68831
I4
s(Vinsert
p68832
I42
VSimpleName: visit
p68833
Vinsert
p68834
I42
VSimpleName: limit
p68835
tp68836
I10
s(g10702
I42
g10703
Vinsert
p68837
I42
VSimpleName: indexOf
p68838
tp68839
I1
s(g19905
I42
g19906
Vinsert
p68840
I42
VSimpleName: getInstance
p68841
tp68842
I1
s(g3243
I42
g3244
Vinsert
p68843
I42
VSimpleName: getParameter
p68844
tp68845
I1
s(g1352
I42
g1353
Vinsert
p68846
I27
VInfixExpression: >
p68847
tp68848
I1
s(g7797
I42
g7798
Vinsert
p68849
I32
VMethodInvocation
p68850
tp68851
I2
s(g6005
I42
g6006
Vinsert
p68852
I43
VSimpleType: SQLServerWallProvider
p68853
tp68854
I1
s(g24023
I42
g24024
Vinsert
p68855
I42
VSimpleName: print
p68856
tp68857
I1
s(g7417
I42
g7418
Vinsert
p68858
I42
VSimpleName: leftBinary
p68859
tp68860
I1
s(g17490
I42
g17491
Vinsert
p68861
I45
VStringLiteral: "\u005cn\u005ctPARTITION p2 VALUES LESS THAN (2001),"
p68862
tp68863
I1
s(g55767
I42
g55768
Vinsert
p68864
I42
VSimpleName: test_null
p68865
tp68866
I1
s(g28785
I42
g28786
Vinsert
p68867
I45
VStringLiteral: "\u005cn(N'Operator error', GETDATE())"
p68868
tp68869
I2
s(g23113
I42
g23114
Vinsert
p68870
I60
VVariableDeclarationStatement
p68871
tp68872
I1
s(g1334
I42
g1335
Vinsert
p68873
I45
VStringLiteral: "\u005cn\u005ctBUSINESS_KEY_ NVARCHAR2(255),"
p68874
tp68875
I2
s(g19818
I42
g19819
Vinsert
p68876
I34
VNumberLiteral: 5
p68877
tp68878
I1
s(g21667
I42
g21668
Vinsert
p68879
I7
VAssignment: =
p68880
tp68881
I1
s(g9924
I42
g9925
Vinsert
p68882
I42
VSimpleName: dataSource
p68883
tp68884
I2
s(g7542
I42
g7543
Vinsert
p68885
I44
VSingleVariableDeclaration
p68886
tp68887
I1
s(g30209
I42
g30210
Vinsert
p68888
I42
VSimpleName: id
p68889
tp68890
I1
s(g14044
I42
g14045
Vinsert
p68891
I45
VStringLiteral: "CREATE VIEW customer_ro (\u005cn"
p68892
tp68893
I1
s(Vinsert
p68894
I42
VSimpleName: getName
p68895
Vinsert
p68896
I42
VSimpleName: statementLogger
p68897
tp68898
I8
s(g30607
I42
g30608
Vinsert
p68899
I45
VStringLiteral: "CREATE OR REPLACE FUNCTION STRCAT (\u005cn"
p68900
tp68901
I1
s(g40401
I42
g40402
Vinsert
p68902
I45
VStringLiteral: "\u005ctMACHINE VARCHAR(50),\u005cn"
p68903
tp68904
I1
s(g19139
I42
g19140
Vinsert
p68905
I57
VTypeLiteral
p68906
tp68907
I1
s(g12019
I42
g12020
Vinsert
p68908
I83
VModifier: protected
p68909
tp68910
I1
s(g7320
I42
g7321
Vinsert
p68911
I43
VSimpleType: ConnectionProxy
p68912
tp68913
I2
s(g10953
I42
g10954
Vinsert
p68914
I42
VSimpleName: dbType
p68915
tp68916
I1
s(g1130
I42
g1131
Vinsert
p68917
I45
VStringLiteral: "GROUP BY t.calendar_year, p.prod_id;"
p68918
tp68919
I1
s(g9919
I42
g9920
Vinsert
p68920
I14
VClassInstanceCreation
p68921
tp68922
I6
s(g15766
I42
g15767
Vinsert
p68923
I42
VSimpleName: String
p68924
tp68925
I1
s(Vinsert
p68926
I42
VSimpleName: getParent
p68927
Vinsert
p68928
I42
VSimpleName: SQLSelectItem
p68929
tp68930
I6
s(g11790
I42
g11791
Vinsert
p68931
I21
VExpressionStatement
p68932
tp68933
I2
s(g57848
I42
g57849
Vinsert
p68934
I45
VStringLiteral: "select 123"
p68935
tp68936
I1
s(g3149
I42
g3150
Vinsert
p68937
I42
VSimpleName: right
p68938
tp68939
I1
s(Vinsert
p68940
I42
VSimpleName: currentThread
p68941
Vinsert
p68942
I83
VModifier: final
p68943
tp68944
I1
s(g7947
I42
g7948
Vinsert
p68945
I43
VSimpleType: SQLMethodInvokeExpr
p68946
tp68947
I5
s(g11880
I42
g11881
Vinsert
p68948
I45
VStringLiteral: "\u005cn("
p68949
tp68950
I6
s(g37280
I42
g37281
Vinsert
p68951
I8
VBlock
p68952
tp68953
I2
s(g6742
I42
g6743
Vinsert
p68954
I42
VSimpleName: name
p68955
tp68956
I2
s(g23899
I42
g23900
Vinsert
p68957
I32
VMethodInvocation
p68958
tp68959
I2
s(g18453
I42
g18454
Vinsert
p68960
I45
VStringLiteral: "escrow_trade"
p68961
tp68962
I1
s(g36748
I42
g36749
Vinsert
p68963
I42
VSimpleName: PGExtractExpr
p68964
tp68965
I2
s(g24247
I42
g24248
Vinsert
p68966
I42
VSimpleName: engine
p68967
tp68968
I6
s(g12985
I42
g12986
Vinsert
p68969
I42
VSimpleName: tearDown
p68970
tp68971
I1
s(g9964
I42
g9965
Vinsert
p68972
I43
VSimpleType: SQLExprTableSource
p68973
tp68974
I6
s(g29844
I42
g29845
Vinsert
p68975
I45
VStringLiteral: "ExceptionSorterClassName"
p68976
tp68977
I1
s(g21783
I42
g21784
Vinsert
p68978
I40
VQualifiedName: JdbcConstants.ORACLE
p68979
tp68980
I6
s(g21458
I42
g21459
Vinsert
p68981
I85
VDimension
p68982
tp68983
I1
s(g7991
I42
g7992
Vinsert
p68984
I8
VBlock
p68985
tp68986
I2
s(g1845
I42
g1846
Vinsert
p68987
I45
VStringLiteral: "BEGIN\u005cn"
p68988
tp68989
I4
s(Vinsert
p68990
I42
VSimpleName: token
p68991
Vinsert
p68992
I40
VQualifiedName: Token.RETURN
p68993
tp68994
I1
s(g50704
I42
g50705
Vinsert
p68995
I45
VStringLiteral: "DBA_HIST_SYSTEM_EVENT"
p68996
tp68997
I1
s(g15899
I42
g15900
Vinsert
p68998
I43
VSimpleType: DruidPooledConnection
p68999
tp69000
I1
s(g3623
I42
g3624
Vinsert
p69001
I45
VStringLiteral: "ContextPath"
p69002
tp69003
I1
s(g62815
I42
g62816
Vinsert
p69004
I27
VInfixExpression: >
p69005
tp69006
I1
s(g32628
I42
g32629
Vinsert
p69007
I31
VMethodDeclaration
p69008
tp69009
I8
s(g63139
I42
g63140
Vinsert
p69010
I42
VSimpleName: sqlStatInfoMap
p69011
tp69012
I1
s(g9944
I42
g9945
Vinsert
p69013
I45
VStringLiteral: "SELECT employee_id, last_name, email\u005cn"
p69014
tp69015
I1
s(g12299
I42
g12300
Vinsert
p69016
I43
VSimpleType: Entity
p69017
tp69018
I2
s(g1933
I42
g1934
Vinsert
p69019
I33
VNullLiteral
p69020
tp69021
I4
s(g10892
I42
g10893
Vinsert
p69022
I45
VStringLiteral: "\u005ct\u005ct\u005ctFROM (\u005cn"
p69023
tp69024
I1
s(g21577
I42
g21578
Vinsert
p69025
I34
VNumberLiteral: 0
p69026
tp69027
I3
s(g336
I42
g337
Vinsert
p69028
I8
VBlock
p69029
tp69030
I5
s(g16863
I42
g16864
Vinsert
p69031
I42
VSimpleName: provider
p69032
tp69033
I1
s(g20035
I42
g20036
Vinsert
p69034
I42
VSimpleName: WallConfig
p69035
tp69036
I2
s(g11590
I42
g11591
Vinsert
p69037
I42
VSimpleName: userId
p69038
tp69039
I4
s(g3679
I42
g3680
Vinsert
p69040
I39
VPrimitiveType: long
p69041
tp69042
I3
s(g43804
I42
g43805
Vinsert
p69043
I42
VSimpleName: getInstance
p69044
tp69045
I1
s(g2805
I42
g2806
Vinsert
p69046
I42
VSimpleName: String
p69047
tp69048
I1
s(g8823
I42
g8824
Vinsert
p69049
I42
VSimpleName: stmt
p69050
tp69051
I4
s(g301
I42
g302
Vinsert
p69052
I59
VVariableDeclarationFragment
p69053
tp69054
I73
s(g18209
I42
g18210
Vinsert
p69055
I42
VSimpleName: contentList
p69056
tp69057
I1
s(g30896
I42
g30897
Vinsert
p69058
I44
VSingleVariableDeclaration
p69059
tp69060
I1
s(g6084
I42
g6085
Vinsert
p69061
I42
VSimpleName: stats
p69062
tp69063
I4
s(g2785
I42
g2786
Vinsert
p69064
I42
VSimpleName: getClass
p69065
tp69066
I4
s(g6927
I42
g6928
Vinsert
p69067
I42
VSimpleName: text
p69068
tp69069
I1
s(g18815
I42
g18816
Vinsert
p69070
I33
VNullLiteral
p69071
tp69072
I8
s(Vinsert
p69073
I42
VSimpleName: getName
p69074
Vinsert
p69075
I40
VQualifiedName: SQLWithSubqueryClause.Entry
p69076
tp69077
I1
s(g45839
I42
g45840
Vinsert
p69078
I42
VSimpleName: OracleWallProvider
p69079
tp69080
I3
s(g14457
I42
g14458
Vinsert
p69081
I42
VSimpleName: statementList
p69082
tp69083
I7
s(g1564
I42
g1565
Vinsert
p69084
I42
VSimpleName: getSubQuery
p69085
tp69086
I1
s(g25834
I42
g25835
Vinsert
p69087
I42
VSimpleName: columnName
p69088
tp69089
I1
s(g14110
I42
g14111
Vinsert
p69090
I60
VVariableDeclarationStatement
p69091
tp69092
I2
s(g6455
I42
g6456
Vinsert
p69093
I33
VNullLiteral
p69094
tp69095
I1
s(g47573
I42
g47574
Vinsert
p69096
I43
VSimpleType: String
p69097
tp69098
I27
s(g40026
I42
g40027
Vinsert
p69099
I44
VSingleVariableDeclaration
p69100
tp69101
I1
s(g25165
I42
g25166
Vinsert
p69102
I45
VStringLiteral: "ConnectionConnectCount"
p69103
tp69104
I1
s(g2682
I42
g2683
Vinsert
p69105
I39
VPrimitiveType: int
p69106
tp69107
I2
s(g15367
I42
g15368
Vinsert
p69108
I45
VStringLiteral: "com.mysql.jdbc.Connection"
p69109
tp69110
I1
s(g6927
I42
g6928
Vinsert
p69111
I27
VInfixExpression: ==
p69112
tp69113
I4
s(g5762
I42
g5763
Vinsert
p69114
I42
VSimpleName: dataSource
p69115
tp69116
I4
s(g22636
I42
g22637
Vinsert
p69117
I59
VVariableDeclarationFragment
p69118
tp69119
I10
s(g39248
I42
g39249
Vinsert
p69120
I42
VSimpleName: subString
p69121
tp69122
I1
s(g30229
I42
g30230
Vinsert
p69123
I60
VVariableDeclarationStatement
p69124
tp69125
I1
s(g22439
I42
g22440
Vinsert
p69126
I42
VSimpleName: next_char
p69127
tp69128
I1
s(g54991
I42
g54992
Vinsert
p69129
I45
VStringLiteral: "\u005ctTABLESPACE \u005c"APPDATA1M\u005c"\u005cn"
p69130
tp69131
I1
s(Vinsert
p69132
I42
VSimpleName: name
p69133
Vinsert
p69134
I42
VSimpleName: table
p69135
tp69136
I1
s(g32833
I42
g32834
Vinsert
p69137
I25
VIfStatement
p69138
tp69139
I1
s(g41521
I42
g41522
Vinsert
p69140
I43
VSimpleType: MySqlOutputVisitor
p69141
tp69142
I1
s(g20288
I42
g20289
Vinsert
p69143
I42
VSimpleName: MySqlIfStatement
p69144
tp69145
I1
s(g60914
I42
g60915
Vinsert
p69146
I32
VMethodInvocation
p69147
tp69148
I4
s(g2634
I42
g2635
Vinsert
p69149
I59
VVariableDeclarationFragment
p69150
tp69151
I1
s(g25138
I42
g25139
Vinsert
p69152
I40
VQualifiedName: Insert.instance
p69153
tp69154
I1
s(g637
I42
g638
Vinsert
p69155
I8
VBlock
p69156
tp69157
I1
s(g6732
I42
g6733
Vinsert
p69158
I42
VSimpleName: addPartition
p69159
tp69160
I1
s(g16759
I42
g16760
Vinsert
p69161
I42
VSimpleName: print0
p69162
tp69163
I1
s(g40598
I42
g40599
Vinsert
p69164
I42
VSimpleName: addEntity
p69165
tp69166
I1
s(g5666
I42
g5667
Vinsert
p69167
I42
VSimpleName: dataSourceDataMap
p69168
tp69169
I2
s(g24206
I42
g24207
Vinsert
p69170
I45
VStringLiteral: "\u005ct\u005ctTABLESPACE HASH_TS01, \u005cn"
p69171
tp69172
I1
s(Vinsert
p69173
I42
VSimpleName: equals
p69174
Vinsert
p69175
I42
VSimpleName: getRowCount
p69176
tp69177
I1
s(Vinsert
p69178
I42
VSimpleName: equals
p69179
Vinsert
p69180
I42
VSimpleName: getConnection
p69181
tp69182
I1
s(Vinsert
p69183
I42
VSimpleName: visit
p69184
Vinsert
p69185
I42
VSimpleName: foreignKey
p69186
tp69187
I1
s(Vinsert
p69188
I42
VSimpleName: check
p69189
Vinsert
p69190
I43
VSimpleType: MySqlWallProvider
p69191
tp69192
I14
s(g14343
I42
g14344
Vinsert
p69193
I42
VSimpleName: i
p69194
tp69195
I3
s(g6786
I42
g6787
Vinsert
p69196
I42
VSimpleName: getColName
p69197
tp69198
I2
s(g8716
I42
g8717
Vinsert
p69199
I42
VSimpleName: histogram_0_1
p69200
tp69201
I1
s(g5007
I42
g5008
Vinsert
p69202
I42
VSimpleName: driver
p69203
tp69204
I2
s(g6577
I42
g6578
Vinsert
p69205
I45
VStringLiteral: "SELECT id, SUM(uv[1]) AS uv1, SUM(uv[2]) AS uv2\u005cn"
p69206
tp69207
I2
s(g20529
I42
g20530
Vinsert
p69208
I42
VSimpleName: catalog
p69209
tp69210
I1
s(g18836
I42
g18837
Vinsert
p69211
I32
VMethodInvocation
p69212
tp69213
I4
s(g4941
I42
g4942
Vinsert
p69214
I32
VMethodInvocation
p69215
tp69216
I1
s(g13911
I42
g13912
Vinsert
p69217
I27
VInfixExpression: !=
p69218
tp69219
I1
s(g3179
I42
g3180
Vinsert
p69220
I32
VMethodInvocation
p69221
tp69222
I11
s(g25834
I42
g25835
Vinsert
p69223
I39
VPrimitiveType: long
p69224
tp69225
I7
s(Vinsert
p69226
I42
VSimpleName: endVisit
p69227
Vinsert
p69228
I42
VSimpleName: cursorName
p69229
tp69230
I1
s(g9977
I42
g9978
Vinsert
p69231
I40
VQualifiedName: com.alibaba.druid.proxy.DruidDriver
p69232
tp69233
I12
s(g29718
I42
g29719
Vinsert
p69234
I45
VStringLiteral: "\u005cn\u005ct\u005c"LOGIN\u005c" VARCHAR2(100 BYTE),"
p69235
tp69236
I2
s(g1100
I42
g1101
Vinsert
p69237
I60
VVariableDeclarationStatement
p69238
tp69239
I1
s(g10869
I42
g10870
Vinsert
p69240
I42
VSimpleName: SQLException
p69241
tp69242
I2
s(g35248
I42
g35249
Vinsert
p69243
I43
VSimpleType: SQLPartitionBy
p69244
tp69245
I1
s(g63587
I42
g63588
Vinsert
p69246
I11
VCastExpression
p69247
tp69248
I41
s(g33126
I42
g33127
Vinsert
p69249
I42
VSimpleName: connectionHoldHistogram
p69250
tp69251
I1
s(g4765
I42
g4766
Vinsert
p69252
I44
VSingleVariableDeclaration
p69253
tp69254
I1
s(g3093
I42
g3094
Vinsert
p69255
I22
VFieldAccess
p69256
tp69257
I1
s(g19924
I42
g19925
Vinsert
p69258
I83
VModifier: public
p69259
tp69260
I1
s(g34518
I42
g34519
Vinsert
p69261
I43
VSimpleType: SQLAssignItem
p69262
tp69263
I1
s(Vinsert
p69264
I42
VSimpleName: endVisit
p69265
Vinsert
p69266
I42
VSimpleName: getPartitions
p69267
tp69268
I2
s(g54802
I42
g54803
Vinsert
p69269
I59
VVariableDeclarationFragment
p69270
tp69271
I1
s(g10859
I42
g10860
Vinsert
p69272
I45
VStringLiteral: "\u005cn f2 > 2 -- comment_4"
p69273
tp69274
I1
s(g10542
I42
g10543
Vinsert
p69275
I27
VInfixExpression: ==
p69276
tp69277
I9
s(g4926
I42
g4927
Vinsert
p69278
I44
VSingleVariableDeclaration
p69279
tp69280
I1
s(g497
I42
g498
Vinsert
p69281
I60
VVariableDeclarationStatement
p69282
tp69283
I1
s(g8669
I42
g8670
Vinsert
p69284
I42
VSimpleName: current
p69285
tp69286
I1
s(g987
I42
g988
Vinsert
p69287
I43
VSimpleType: Exception
p69288
tp69289
I1
s(g11890
I42
g11891
Vinsert
p69290
I21
VExpressionStatement
p69291
tp69292
I4
s(g7002
I42
g7003
Vinsert
p69293
I59
VVariableDeclarationFragment
p69294
tp69295
I4
s(g7422
I42
g7423
Vinsert
p69296
I41
VReturnStatement
p69297
tp69298
I1
s(g10581
I42
g10582
Vinsert
p69299
I45
VStringLiteral: "net.sourceforge.jtds.jdbc.Driver"
p69300
tp69301
I1
s(g2198
I42
g2199
Vinsert
p69302
I42
VSimpleName: conn
p69303
tp69304
I1
s(g3544
I42
g3545
Vinsert
p69305
I45
VStringLiteral: "\u005ct\u005ctt3.ver\u005cn"
p69306
tp69307
I1
s(g29440
I42
g29441
Vinsert
p69308
I42
VSimpleName: getType
p69309
tp69310
I1
s(g20643
I42
g20644
Vinsert
p69311
I42
VSimpleName: test_column_comment
p69312
tp69313
I10
s(g12077
I42
g12078
Vinsert
p69314
I39
VPrimitiveType: int
p69315
tp69316
I1
s(Vinsert
p69317
I42
VSimpleName: setParent
p69318
Vinsert
p69319
I42
VSimpleName: get
p69320
tp69321
I2
s(g8475
I42
g8476
Vinsert
p69322
I43
VSimpleType: SQLSelectQueryBlock
p69323
tp69324
I1
s(g7216
I42
g7217
Vinsert
p69325
I34
VNumberLiteral: 3L
p69326
tp69327
I1
s(g12822
I42
g12823
Vinsert
p69328
I32
VMethodInvocation
p69329
tp69330
I1
s(g14951
I42
g14952
Vinsert
p69331
I42
VSimpleName: SQLException
p69332
tp69333
I23
s(g36135
I42
g36136
Vinsert
p69334
I42
VSimpleName: SQLLiteralExpr
p69335
tp69336
I1
s(g24023
I42
g24024
Vinsert
p69337
I42
VSimpleName: size
p69338
tp69339
I1
s(g46870
I42
g46871
Vinsert
p69340
I45
VStringLiteral: "\u005cn\u005ctlocation_id NUMBER(4),"
p69341
tp69342
I2
s(g39119
I42
g39120
Vinsert
p69343
I42
VSimpleName: SQLServerParameter
p69344
tp69345
I1
s(g22603
I42
g22604
Vinsert
p69346
I42
VSimpleName: expr
p69347
tp69348
I2
s(g3659
I42
g3660
Vinsert
p69349
I43
VSimpleType: Integer
p69350
tp69351
I1
s(Vinsert
p69352
I42
VSimpleName: nextToken
p69353
Vinsert
p69354
I42
VSimpleName: getTableNames
p69355
tp69356
I1
s(g40603
I42
g40604
Vinsert
p69357
I45
VStringLiteral: "FROM analyzedata.StatTime cs\u005cn"
p69358
tp69359
I1
s(g1279
I42
g1280
Vinsert
p69360
I43
VSimpleType: CallableStatement
p69361
tp69362
I1
s(g6139
I42
g6140
Vinsert
p69363
I42
VSimpleName: String
p69364
tp69365
I23
s(g16213
I42
g16214
Vinsert
p69366
I42
VSimpleName: pid
p69367
tp69368
I1
s(g7835
I42
g7836
Vinsert
p69369
I74
VParameterizedType: List<Object>
p69370
tp69371
I2
s(g25422
I42
g25423
Vinsert
p69372
I32
VMethodInvocation
p69373
tp69374
I8
s(g19565
I42
g19566
Vinsert
p69375
I45
VStringLiteral: ") ENGINE = InnoDB AUTO_INCREMENT = 1769503 CHARSET = utf8mb4 COMMENT = '10000000'"
p69376
tp69377
I3
s(g6992
I42
g6993
Vinsert
p69378
I32
VMethodInvocation
p69379
tp69380
I3
s(g12397
I42
g12398
Vinsert
p69381
I45
VStringLiteral: "\u005ct\u005ctOR M.MERCHANT_NAME LIKE ('%' || ? || '%')\u005cn"
p69382
tp69383
I2
s(g5931
I42
g5932
Vinsert
p69384
I42
VSimpleName: getOutParameter
p69385
tp69386
I1
s(g22587
I42
g22588
Vinsert
p69387
I59
VVariableDeclarationFragment
p69388
tp69389
I2
s(g12159
I42
g12160
Vinsert
p69390
I32
VMethodInvocation
p69391
tp69392
I2
s(g6663
I42
g6664
Vinsert
p69393
I27
VInfixExpression: ||
p69394
tp69395
I1
s(g1569
I42
g1570
Vinsert
p69396
I42
VSimpleName: EvalConcatTest
p69397
tp69398
I1
s(g20888
I42
g20889
Vinsert
p69399
I83
VModifier: public
p69400
tp69401
I1
s(g41516
I42
g41517
Vinsert
p69402
I42
VSimpleName: Object
p69403
tp69404
I1
s(g23118
I42
g23119
Vinsert
p69405
I42
VSimpleName: setUp
p69406
tp69407
I2
s(g11187
I42
g11188
Vinsert
p69408
I59
VVariableDeclarationFragment
p69409
tp69410
I2
s(g675
I42
g676
Vinsert
p69411
I42
VSimpleName: close
p69412
tp69413
I1
s(Vinsert
p69414
I42
VSimpleName: add
p69415
Vinsert
p69416
I42
VSimpleName: setArray
p69417
tp69418
I1
s(g18016
I42
g18017
Vinsert
p69419
I9
VBooleanLiteral: false
p69420
tp69421
I3
s(g10757
I42
g10758
Vinsert
p69422
I42
VSimpleName: put
p69423
tp69424
I2
s(g4505
I42
g4506
Vinsert
p69425
I42
VSimpleName: name
p69426
tp69427
I1
s(g13196
I42
g13197
Vinsert
p69428
I42
VSimpleName: getActiveCount
p69429
tp69430
I1
s(g18429
I42
g18430
Vinsert
p69431
I34
VNumberLiteral: 0
p69432
tp69433
I3
s(g8075
I42
g8076
Vinsert
p69434
I42
VSimpleName: token
p69435
tp69436
I1
s(g12930
I42
g12931
Vinsert
p69437
I32
VMethodInvocation
p69438
tp69439
I9
s(g18496
I42
g18497
Vinsert
p69440
I27
VInfixExpression: ==
p69441
tp69442
I1
s(g8956
I42
g8957
Vinsert
p69443
I42
VSimpleName: sqlStat
p69444
tp69445
I2
s(g3063
I42
g3064
Vinsert
p69446
I59
VVariableDeclarationFragment
p69447
tp69448
I2
s(g919
I42
g920
Vinsert
p69449
I42
VSimpleName: SQLObject
p69450
tp69451
I4
s(g34738
I42
g34739
Vinsert
p69452
I45
VStringLiteral: "SELECT *\u005cn"
p69453
tp69454
I7
s(g38788
I42
g38789
Vinsert
p69455
I34
VNumberLiteral: 1
p69456
tp69457
I1
s(g6521
I42
g6522
Vinsert
p69458
I44
VSingleVariableDeclaration
p69459
tp69460
I1
s(g22658
I42
g22659
Vinsert
p69461
I45
VStringLiteral: "\u005cn--comment1 goes here"
p69462
tp69463
I1
s(g12849
I42
g12850
Vinsert
p69464
I7
VAssignment: =
p69465
tp69466
I1
s(g5714
I42
g5715
Vinsert
p69467
I45
VStringLiteral: "partition part2 values less than (to_date('2010-02-01','YYYY-MM-DD'))\u005cn"
p69468
tp69469
I1
s(g11827
I42
g11828
Vinsert
p69470
I83
VModifier: private
p69471
tp69472
I1
s(g10016
I42
g10017
Vinsert
p69473
I42
VSimpleName: SQLExpr
p69474
tp69475
I1
s(g8480
I42
g8481
Vinsert
p69476
I42
VSimpleName: exprParser
p69477
tp69478
I1
s(g16980
I42
g16981
Vinsert
p69479
I14
VClassInstanceCreation
p69480
tp69481
I4
s(g7288
I42
g7289
Vinsert
p69482
I42
VSimpleName: Assert
p69483
tp69484
I1
s(g7827
I42
g7828
Vinsert
p69485
I34
VNumberLiteral: 1
p69486
tp69487
I1
s(Vinsert
p69488
I42
VSimpleName: parseInt
p69489
Vinsert
p69490
I42
VSimpleName: reader
p69491
tp69492
I1
s(g6901
I42
g6902
Vinsert
p69493
I39
VPrimitiveType: boolean
p69494
tp69495
I2
s(g39778
I42
g39779
Vinsert
p69496
I59
VVariableDeclarationFragment
p69497
tp69498
I1
s(g336
I42
g337
Vinsert
p69499
I42
VSimpleName: getPartitions
p69500
tp69501
I1
s(g136
I42
g137
Vinsert
p69502
I44
VSingleVariableDeclaration
p69503
tp69504
I5
s(g1559
I42
g1560
Vinsert
p69505
I43
VSimpleType: HashSet
p69506
tp69507
I3
s(g12173
I42
g12174
Vinsert
p69508
I21
VExpressionStatement
p69509
tp69510
I2
s(g12555
I42
g12556
Vinsert
p69511
I42
VSimpleName: String
p69512
tp69513
I1
s(g19810
I42
g19811
Vinsert
p69514
I53
VThrowStatement
p69515
tp69516
I1
s(g17221
I42
g17222
Vinsert
p69517
I9
VBooleanLiteral: false
p69518
tp69519
I1
s(g32633
I42
g32634
Vinsert
p69520
I8
VBlock
p69521
tp69522
I4
s(g3513
I42
g3514
Vinsert
p69523
I42
VSimpleName: i
p69524
tp69525
I6
s(g24686
I42
g24687
Vinsert
p69526
I42
VSimpleName: result
p69527
tp69528
I1
s(g58237
I42
g58238
Vinsert
p69529
I42
VSimpleName: DB2StatementParser
p69530
tp69531
I1
s(g15359
I42
g15360
Vinsert
p69532
I40
VQualifiedName: DruidDataSourceFactory.PROP_INITCONNECTIONSQLS
p69533
tp69534
I1
s(Vinsert
p69535
I42
VSimpleName: nextToken
p69536
Vinsert
p69537
I40
VQualifiedName: Token.EXISTS
p69538
tp69539
I1
s(g657
I42
g658
Vinsert
p69540
I42
VSimpleName: test_fill_1
p69541
tp69542
I1
s(g33239
I42
g33240
Vinsert
p69543
I8
VBlock
p69544
tp69545
I1
s(g34622
I42
g34623
Vinsert
p69546
I42
VSimpleName: dataSource
p69547
tp69548
I4
s(g12024
I42
g12025
Vinsert
p69549
I74
VParameterizedType: List<ValuesClause>
p69550
tp69551
I1
s(g16863
I42
g16864
Vinsert
p69552
I42
VSimpleName: Exception
p69553
tp69554
I6
s(g17769
I42
g17770
Vinsert
p69555
I42
VSimpleName: startsWith
p69556
tp69557
I9
s(g9498
I42
g9499
Vinsert
p69558
I45
VStringLiteral: "'"
p69559
tp69560
I1
s(g53749
I42
g53750
Vinsert
p69561
I43
VSimpleType: PGValuesQuery
p69562
tp69563
I2
s(g13379
I42
g13380
Vinsert
p69564
I43
VSimpleType: OracleCreateSequenceStatement
p69565
tp69566
I2
s(g4323
I42
g4324
Vinsert
p69567
I43
VSimpleType: NullPointerException
p69568
tp69569
I1
s(g19369
I42
g19370
Vinsert
p69570
I45
VStringLiteral: " NOSORT"
p69571
tp69572
I1
s(g2614
I42
g2615
Vinsert
p69573
I42
VSimpleName: clone
p69574
tp69575
I9
s(g5399
I42
g5400
Vinsert
p69576
I42
VSimpleName: recycleCount
p69577
tp69578
I1
s(g12547
I42
g12548
Vinsert
p69579
I42
VSimpleName: PROP_PHY_TIMEOUT_MILLIS
p69580
tp69581
I1
s(Vinsert
p69582
I42
VSimpleName: setUppCase
p69583
Vinsert
p69584
I42
VSimpleName: PGOutputVisitor
p69585
tp69586
I1
s(g31371
I42
g31372
Vinsert
p69587
I43
VSimpleType: OracleAlterTableAddConstaint
p69588
tp69589
I1
s(Vinsert
p69590
I42
VSimpleName: equalsIgnoreCase
p69591
Vinsert
p69592
I45
VStringLiteral: "NAMES"
p69593
tp69594
I2
s(g2263
I42
g2264
Vinsert
p69595
I8
VBlock
p69596
tp69597
I1
s(g1193
I42
g1194
Vinsert
p69598
I42
VSimpleName: System
p69599
tp69600
I1
s(g2428
I42
g2429
Vinsert
p69601
I40
VQualifiedName: On.UPDATE
p69602
tp69603
I1
s(g11555
I42
g11556
Vinsert
p69604
I42
VSimpleName: setMinIdle
p69605
tp69606
I1
s(g7665
I42
g7666
Vinsert
p69607
I42
VSimpleName: xid
p69608
tp69609
I2
s(Vinsert
p69610
I42
VSimpleName: get
p69611
Vinsert
p69612
I40
VQualifiedName: JdbcConstants.MYSQL
p69613
tp69614
I1
s(g25975
I42
g25976
Vinsert
p69615
I45
VStringLiteral: " "
p69616
tp69617
I3
s(g6871
I42
g6872
Vinsert
p69618
I8
VBlock
p69619
tp69620
I2
s(g5500
I42
g5501
Vinsert
p69621
I42
VSimpleName: getChildren
p69622
tp69623
I1
s(g20173
I42
g20174
Vinsert
p69624
I8
VBlock
p69625
tp69626
I16
s(g25924
I42
g25925
Vinsert
p69627
I42
VSimpleName: fields
p69628
tp69629
I2
s(g10813
I42
g10814
Vinsert
p69630
I45
VStringLiteral: ")"
p69631
tp69632
I1
s(g14896
I42
g14897
Vinsert
p69633
I21
VExpressionStatement
p69634
tp69635
I1
s(g12090
I42
g12091
Vinsert
p69636
I42
VSimpleName: String
p69637
tp69638
I1
s(g20113
I42
g20114
Vinsert
p69639
I9
VBooleanLiteral: false
p69640
tp69641
I2
s(g26818
I42
g26819
Vinsert
p69642
I25
VIfStatement
p69643
tp69644
I7
s(g6134
I42
g6135
Vinsert
p69645
I34
VNumberLiteral: 0
p69646
tp69647
I1
s(g11231
I42
g11232
Vinsert
p69648
I42
VSimpleName: x
p69649
tp69650
I4
s(g11737
I42
g11738
Vinsert
p69651
I74
VParameterizedType: List<Map<String,Object>>
p69652
tp69653
I1
s(g9748
I42
g9749
Vinsert
p69654
I42
VSimpleName: print
p69655
tp69656
I1
s(g22449
I42
g22450
Vinsert
p69657
I42
VSimpleName: ThreadLocalRandom
p69658
tp69659
I2
s(g40994
I42
g40995
Vinsert
p69660
I34
VNumberLiteral: 0
p69661
tp69662
I2
s(g31257
I42
g31258
Vinsert
p69663
I32
VMethodInvocation
p69664
tp69665
I34
s(g6051
I42
g6052
Vinsert
p69666
I21
VExpressionStatement
p69667
tp69668
I1
s(g17012
I42
g17013
Vinsert
p69669
I25
VIfStatement
p69670
tp69671
I2
s(g9949
I42
g9950
Vinsert
p69672
I25
VIfStatement
p69673
tp69674
I2
s(g18404
I42
g18405
Vinsert
p69675
I45
VStringLiteral: "\u005ctgcd NUMBER := integer_operations.greatest_common_divisor(numerator, denominator);\u005cn"
p69676
tp69677
I1
s(g9055
I42
g9056
Vinsert
p69678
I42
VSimpleName: result
p69679
tp69680
I2
s(g16
I42
g17
Vinsert
p69681
I44
VSingleVariableDeclaration
p69682
tp69683
I11
s(Vinsert
p69684
I42
VSimpleName: countDown
p69685
Vinsert
p69686
I42
VSimpleName: t
p69687
tp69688
I1
s(g13071
I42
g13072
Vinsert
p69689
I42
VSimpleName: getId
p69690
tp69691
I2
s(Vinsert
p69692
I42
VSimpleName: parseStatementList
p69693
Vinsert
p69694
I42
VSimpleName: keepComments
p69695
tp69696
I1
s(Vinsert
p69697
I42
VSimpleName: println
p69698
Vinsert
p69699
I42
VSimpleName: parseStatementList
p69700
tp69701
I4
s(g18768
I42
g18769
Vinsert
p69702
I42
VSimpleName: getExpr
p69703
tp69704
I3
s(Vinsert
p69705
I42
VSimpleName: visit
p69706
Vinsert
p69707
I42
VSimpleName: searchClause
p69708
tp69709
I1
s(g30252
I42
g30253
Vinsert
p69710
I43
VSimpleType: Exception
p69711
tp69712
I2
s(g381
I42
g382
Vinsert
p69713
I21
VExpressionStatement
p69714
tp69715
I2
s(Vinsert
p69716
I42
VSimpleName: get
p69717
Vinsert
p69718
I42
VSimpleName: orderBy
p69719
tp69720
I1
s(g22214
I42
g22215
Vinsert
p69721
I45
VStringLiteral: "tddl5"
p69722
tp69723
I2
s(g3332
I42
g3333
Vinsert
p69724
I43
VSimpleType: Map.Entry
p69725
tp69726
I1
s(g10697
I42
g10698
Vinsert
p69727
I42
VSimpleName: getPermitObjects
p69728
tp69729
I2
s(g28795
I42
g28796
Vinsert
p69730
I45
VStringLiteral: "SELECT *"
p69731
tp69732
I1
s(g21450
I42
g21451
Vinsert
p69733
I42
VSimpleName: accept
p69734
tp69735
I1
s(g16696
I42
g16697
Vinsert
p69736
I32
VMethodInvocation
p69737
tp69738
I16
s(g32833
I42
g32834
Vinsert
p69739
I45
VStringLiteral: ", "
p69740
tp69741
I1
s(g8118
I42
g8119
Vinsert
p69742
I42
VSimpleName: PreparedStatementProxy
p69743
tp69744
I2
s(g351
I42
g352
Vinsert
p69745
I40
VQualifiedName: dataSource.timeBetweenEvictionRunsMillis
p69746
tp69747
I1
s(g12227
I42
g12228
Vinsert
p69748
I45
VStringLiteral: "REPLACE INTO mytable (`user_id`, `c_level`, `l_level`, `t_level`, `v_level`, `tag`)\u005cn"
p69749
tp69750
I1
s(Vinsert
p69751
I42
VSimpleName: put
p69752
Vinsert
p69753
I45
VStringLiteral: "JdbcFetchRowCount"
p69754
tp69755
I1
s(g7547
I42
g7548
Vinsert
p69756
I45
VStringLiteral: "\u005ctc_longblob longblob\u005cn"
p69757
tp69758
I2
s(g131
I42
g132
Vinsert
p69759
I60
VVariableDeclarationStatement
p69760
tp69761
I2
s(g10882
I42
g10883
Vinsert
p69762
I25
VIfStatement
p69763
tp69764
I12
s(g23886
I42
g23887
Vinsert
p69765
I22
VFieldAccess
p69766
tp69767
I9
s(g13022
I42
g13023
Vinsert
p69768
I43
VSimpleType: IllegalSQLObjectViolation
p69769
tp69770
I1
s(g34738
I42
g34739
Vinsert
p69771
I45
VStringLiteral: "FROM sc002.test;"
p69772
tp69773
I1
s(g17291
I42
g17292
Vinsert
p69774
I14
VClassInstanceCreation
p69775
tp69776
I1
s(g26265
I42
g26266
Vinsert
p69777
I40
VQualifiedName: com.alibaba.druid.sql.ast.statement.SQLCreateViewStatement
p69778
tp69779
I1
s(g5520
I42
g5521
Vinsert
p69780
I53
VThrowStatement
p69781
tp69782
I1
s(g3939
I42
g3940
Vinsert
p69783
I60
VVariableDeclarationStatement
p69784
tp69785
I13
s(g29604
I42
g29605
Vinsert
p69786
I42
VSimpleName: startFGC
p69787
tp69788
I1
s(g18278
I42
g18279
Vinsert
p69789
I59
VVariableDeclarationFragment
p69790
tp69791
I1
s(g36541
I42
g36542
Vinsert
p69792
I45
VStringLiteral: "\u005cnfrom user"
p69793
tp69794
I1
s(g5787
I42
g5788
Vinsert
p69795
I45
VStringLiteral: "druid.testWhileIdle"
p69796
tp69797
I1
s(g2829
I42
g2830
Vinsert
p69798
I39
VPrimitiveType: void
p69799
tp69800
I1
s(g18831
I42
g18832
Vinsert
p69801
I42
VSimpleName: value
p69802
tp69803
I2
s(g29839
I42
g29840
Vinsert
p69804
I9
VBooleanLiteral: false
p69805
tp69806
I1
s(g10726
I42
g10727
Vinsert
p69807
I44
VSingleVariableDeclaration
p69808
tp69809
I3
s(g65600
I42
g65601
Vinsert
p69810
I42
VSimpleName: SQLWithSubqueryClause
p69811
tp69812
I1
s(g4740
I42
g4741
Vinsert
p69813
I42
VSimpleName: datasource
p69814
tp69815
I2
s(g4964
I42
g4965
Vinsert
p69816
I52
VThisExpression
p69817
tp69818
I1
s(g45516
I42
g45517
Vinsert
p69819
I43
VSimpleType: SQLSelectQueryBlock
p69820
tp69821
I1
s(Vinsert
p69822
I42
VSimpleName: accept
p69823
Vinsert
p69824
I42
VSimpleName: List
p69825
tp69826
I1
s(g13066
I42
g13067
Vinsert
p69827
I32
VMethodInvocation
p69828
tp69829
I4
s(g12159
I42
g12160
Vinsert
p69830
I42
VSimpleName: methodStat
p69831
tp69832
I2
s(g3063
I42
g3064
Vinsert
p69833
I42
VSimpleName: test_true_11
p69834
tp69835
I1
s(Vinsert
p69836
I42
VSimpleName: setExpr
p69837
Vinsert
p69838
I42
VSimpleName: MySqlOrderingExpr
p69839
tp69840
I2
s(g23093
I42
g23094
Vinsert
p69841
I41
VReturnStatement
p69842
tp69843
I4
s(Vinsert
p69844
I42
VSimpleName: assertEquals
p69845
Vinsert
p69846
I42
VSimpleName: test_stat
p69847
tp69848
I1
s(g10467
I42
g10468
Vinsert
p69849
I43
VSimpleType: List
p69850
tp69851
I2
s(g2775
I42
g2776
Vinsert
p69852
I43
VSimpleType: Date
p69853
tp69854
I1
s(g15018
I42
g15019
Vinsert
p69855
I27
VInfixExpression: !=
p69856
tp69857
I1
s(g15294
I42
g15295
Vinsert
p69858
I42
VSimpleName: dataSource
p69859
tp69860
I3
s(g957
I42
g958
Vinsert
p69861
I42
VSimpleName: getDefaultExpr
p69862
tp69863
I1
s(g13166
I42
g13167
Vinsert
p69864
I21
VExpressionStatement
p69865
tp69866
I2
s(g14881
I42
g14882
Vinsert
p69867
I52
VThisExpression
p69868
tp69869
I1
s(g4370
I42
g4371
Vinsert
p69870
I42
VSimpleName: LogFactory
p69871
tp69872
I1
s(g5310
I42
g5311
Vinsert
p69873
I42
VSimpleName: sql
p69874
tp69875
I4
s(g11484
I42
g11485
Vinsert
p69876
I42
VSimpleName: setDatabase
p69877
tp69878
I3
s(g3302
I42
g3303
Vinsert
p69879
I45
VStringLiteral: "BUSINESS_ENTERPRISE_BUSIINFO"
p69880
tp69881
I1
s(g11464
I42
g11465
Vinsert
p69882
I45
VStringLiteral: " : "
p69883
tp69884
I1
s(g6236
I42
g6237
Vinsert
p69885
I42
VSimpleName: columnName
p69886
tp69887
I1
s(g32572
I42
g32573
Vinsert
p69888
I42
VSimpleName: get
p69889
tp69890
I7
s(g1536
I42
g1537
Vinsert
p69891
I43
VSimpleType: ConnectionImpl
p69892
tp69893
I2
s(g23031
I42
g23032
Vinsert
p69894
I42
VSimpleName: lock
p69895
tp69896
I1
s(g4080
I42
g4081
Vinsert
p69897
I41
VReturnStatement
p69898
tp69899
I1
s(g1953
I42
g1954
Vinsert
p69900
I42
VSimpleName: setQueryTimeout
p69901
tp69902
I1
s(g43952
I42
g43953
Vinsert
p69903
I42
VSimpleName: test_0
p69904
tp69905
I1
s(g1554
I42
g1555
Vinsert
p69906
I8
VBlock
p69907
tp69908
I4
s(g1284
I42
g1285
Vinsert
p69909
I32
VMethodInvocation
p69910
tp69911
I5
s(g24379
I42
g24380
Vinsert
p69912
I27
VInfixExpression: !=
p69913
tp69914
I1
s(g20782
I42
g20783
Vinsert
p69915
I42
VSimpleName: ArrayList
p69916
tp69917
I1
s(g27630
I42
g27631
Vinsert
p69918
I45
VStringLiteral: ""
p69919
tp69920
I4
s(g15097
I42
g15098
Vinsert
p69921
I42
VSimpleName: WallUtils
p69922
tp69923
I3
s(g20596
I42
g20597
Vinsert
p69924
I42
VSimpleName: identifierEquals
p69925
tp69926
I2
s(g25641
I42
g25642
Vinsert
p69927
I42
VSimpleName: clob_open
p69928
tp69929
I1
s(Vinsert
p69930
I42
VSimpleName: info
p69931
Vinsert
p69932
I45
VStringLiteral: "TODO. "
p69933
tp69934
I3
s(g6434
I42
g6435
Vinsert
p69935
I43
VSimpleType: OracleSelectQueryBlock
p69936
tp69937
I1
s(g4442
I42
g4443
Vinsert
p69938
I42
VSimpleName: getFullGC
p69939
tp69940
I1
s(g957
I42
g958
Vinsert
p69941
I32
VMethodInvocation
p69942
tp69943
I3
s(g1012
I42
g1013
Vinsert
p69944
I42
VSimpleName: tableObject
p69945
tp69946
I6
s(Vinsert
p69947
I42
VSimpleName: acceptChild
p69948
Vinsert
p69949
I42
VSimpleName: defaultExpr
p69950
tp69951
I1
s(g21499
I42
g21500
Vinsert
p69952
I45
VStringLiteral: "check get driverClassName"
p69953
tp69954
I1
s(g9360
I42
g9361
Vinsert
p69955
I42
VSimpleName: content
p69956
tp69957
I1
s(g9704
I42
g9705
Vinsert
p69958
I44
VSingleVariableDeclaration
p69959
tp69960
I1
s(g3184
I42
g3185
Vinsert
p69961
I40
VQualifiedName: ResultSet.CLOSE_CURSORS_AT_COMMIT
p69962
tp69963
I1
s(g12077
I42
g12078
Vinsert
p69964
I7
VAssignment: =
p69965
tp69966
I1
s(g20933
I42
g20934
Vinsert
p69967
I43
VSimpleType: MySqlRepeatStatement
p69968
tp69969
I1
s(g30636
I42
g30637
Vinsert
p69970
I42
VSimpleName: wrapper
p69971
tp69972
I1
s(g4040
I42
g4041
Vinsert
p69973
I43
VSimpleType: SQLParameter
p69974
tp69975
I1
s(g7996
I42
g7997
Vinsert
p69976
I42
VSimpleName: ucase
p69977
tp69978
I3
s(Vinsert
p69979
I42
VSimpleName: getName
p69980
Vinsert
p69981
I45
VStringLiteral: "CONSTRAINT "
p69982
tp69983
I6
s(g3724
I42
g3725
Vinsert
p69984
I45
VStringLiteral: "\u005ctFREELIST GROUPS 1\u005cn"
p69985
tp69986
I1
s(g40994
I42
g40995
Vinsert
p69987
I40
VQualifiedName: savepoints.length
p69988
tp69989
I1
s(g26826
I42
g26827
Vinsert
p69990
I42
VSimpleName: locate
p69991
tp69992
I2
s(g5200
I42
g5201
Vinsert
p69993
I42
VSimpleName: column
p69994
tp69995
I2
s(g914
I42
g915
Vinsert
p69996
I45
VStringLiteral: "check partition "
p69997
tp69998
I1
s(g891
I42
g892
Vinsert
p69999
I42
VSimpleName: registerOutParameter
p70000
tp70001
I1
s(Vinsert
p70002
I42
VSimpleName: assertEquals
p70003
Vinsert
p70004
I42
VSimpleName: EvalMethodAbsTest
p70005
tp70006
I1
s(g27315
I42
g27316
Vinsert
p70007
I42
VSimpleName: size
p70008
tp70009
I1
s(g1180
I42
g1181
Vinsert
p70010
I43
VSimpleType: User
p70011
tp70012
I2
s(g4908
I42
g4909
Vinsert
p70013
I42
VSimpleName: stmt
p70014
tp70015
I59
s(g8080
I42
g8081
Vinsert
p70016
I42
VSimpleName: accept
p70017
tp70018
I3
s(g50189
I42
g50190
Vinsert
p70019
I43
VSimpleType: PGSchemaStatVisitor
p70020
tp70021
I48
s(g37021
I42
g37022
Vinsert
p70022
I53
VThrowStatement
p70023
tp70024
I6
s(g6562
I42
g6563
Vinsert
p70025
I40
VQualifiedName: dataSources.length
p70026
tp70027
I1
s(g35631
I42
g35632
Vinsert
p70028
I42
VSimpleName: SQLException
p70029
tp70030
I6
s(g21856
I42
g21857
Vinsert
p70031
I42
VSimpleName: DruidDataSource
p70032
tp70033
I1
s(g7594
I42
g7595
Vinsert
p70034
I44
VSingleVariableDeclaration
p70035
tp70036
I1
s(g1352
I42
g1353
Vinsert
p70037
I34
VNumberLiteral: 0
p70038
tp70039
I1
s(g38764
I42
g38765
Vinsert
p70040
I40
VQualifiedName: Token.IDENTIFIER
p70041
tp70042
I1
s(g17683
I42
g17684
Vinsert
p70043
I42
VSimpleName: getFetchRowCount
p70044
tp70045
I1
s(g5729
I42
g5730
Vinsert
p70046
I21
VExpressionStatement
p70047
tp70048
I6
s(g19565
I42
g19566
Vinsert
p70049
I45
VStringLiteral: "\u005ctKEY name5_idx (c_bigint),\u005cn"
p70050
tp70051
I1
s(g4278
I42
g4279
Vinsert
p70052
I45
VStringLiteral: "| c_longblob   | longblob     | NO   |     | NULL                |                             |\u005cn"
p70053
tp70054
I1
s(g4088
I42
g4089
Vinsert
p70055
I42
VSimpleName: raw
p70056
tp70057
I1
s(g15637
I42
g15638
Vinsert
p70058
I14
VClassInstanceCreation
p70059
tp70060
I262
s(g8399
I42
g8400
Vinsert
p70061
I32
VMethodInvocation
p70062
tp70063
I2
s(g13483
I42
g13484
Vinsert
p70064
I42
VSimpleName: accept
p70065
tp70066
I2
s(g21572
I42
g21573
Vinsert
p70067
I39
VPrimitiveType: void
p70068
tp70069
I1
s(g10433
I42
g10434
Vinsert
p70070
I42
VSimpleName: get
p70071
tp70072
I1
s(g321
I42
g322
Vinsert
p70073
I42
VSimpleName: resource
p70074
tp70075
I3
s(g6557
I42
g6558
Vinsert
p70076
I42
VSimpleName: SQLPropertyExpr
p70077
tp70078
I1
s(g3618
I42
g3619
Vinsert
p70079
I43
VSimpleType: SQLException
p70080
tp70081
I1
s(g2423
I42
g2424
Vinsert
p70082
I42
VSimpleName: SecretKeySpec
p70083
tp70084
I2
s(Vinsert
p70085
I42
VSimpleName: hasUnorderedLimit
p70086
Vinsert
p70087
I42
VSimpleName: assertFalse
p70088
tp70089
I3
s(g58919
I42
g58920
Vinsert
p70090
I42
VSimpleName: setUrl
p70091
tp70092
I2
s(g20777
I42
g20778
Vinsert
p70093
I42
VSimpleName: SQLName
p70094
tp70095
I2
s(g622
I42
g623
Vinsert
p70096
I42
VSimpleName: identifierEquals
p70097
tp70098
I1
s(g602
I42
g603
Vinsert
p70099
I43
VSimpleType: DruidDataSource
p70100
tp70101
I12
s(g5002
I42
g5003
Vinsert
p70102
I76
VWildcardType: ?
p70103
tp70104
I1
s(g46717
I42
g46718
Vinsert
p70105
I2
VArrayAccess
p70106
tp70107
I1
s(g18606
I42
g18607
Vinsert
p70108
I42
VSimpleName: getTarget
p70109
tp70110
I1
s(g12354
I42
g12355
Vinsert
p70111
I27
VInfixExpression: &&
p70112
tp70113
I1
s(g972
I42
g973
Vinsert
p70114
I45
VStringLiteral: "\u005ct\u005c"OS_USER_NAME\u005c", \u005cn"
p70115
tp70116
I1
s(g3002
I42
g3003
Vinsert
p70117
I8
VBlock
p70118
tp70119
I2
s(g13191
I42
g13192
Vinsert
p70120
I43
VSimpleType: JdbcSqlStat
p70121
tp70122
I5
s(g11590
I42
g11591
Vinsert
p70123
I7
VAssignment: =
p70124
tp70125
I4
s(g3103
I42
g3104
Vinsert
p70126
I7
VAssignment: =
p70127
tp70128
I5
s(g64309
I42
g64310
Vinsert
p70129
I40
VQualifiedName: that.sampleClause
p70130
tp70131
I2
s(g35083
I42
g35084
Vinsert
p70132
I42
VSimpleName: nextToken
p70133
tp70134
I30
s(g11732
I42
g11733
Vinsert
p70135
I27
VInfixExpression: ==
p70136
tp70137
I1
s(g12888
I42
g12889
Vinsert
p70138
I43
VSimpleType: SQLColumnDefinition
p70139
tp70140
I2
s(g33239
I42
g33240
Vinsert
p70141
I32
VMethodInvocation
p70142
tp70143
I2
s(g13700
I42
g13701
Vinsert
p70144
I22
VFieldAccess
p70145
tp70146
I29
s(Vinsert
p70147
I42
VSimpleName: visit
p70148
Vinsert
p70149
I42
VSimpleName: MySqlUnique
p70150
tp70151
I1
s(g10475
I42
g10476
Vinsert
p70152
I31
VMethodDeclaration
p70153
tp70154
I2
s(g4404
I42
g4405
Vinsert
p70155
I42
VSimpleName: limit
p70156
tp70157
I1
s(g567
I42
g568
Vinsert
p70158
I21
VExpressionStatement
p70159
tp70160
I3
s(g19640
I42
g19641
Vinsert
p70161
I45
VStringLiteral: "initialSize"
p70162
tp70163
I1
s(g5615
I42
g5616
Vinsert
p70164
I42
VSimpleName: Exception
p70165
tp70166
I1
s(g44242
I42
g44243
Vinsert
p70167
I42
VSimpleName: length
p70168
tp70169
I1
s(g11469
I42
g11470
Vinsert
p70170
I14
VClassInstanceCreation
p70171
tp70172
I1
s(g33452
I42
g33453
Vinsert
p70173
I42
VSimpleName: isTopNoneFromSelect
p70174
tp70175
I1
s(g2829
I42
g2830
Vinsert
p70176
I42
VSimpleName: dataSource
p70177
tp70178
I1
s(g851
I42
g852
Vinsert
p70179
I27
VInfixExpression: ==
p70180
tp70181
I18
s(Vinsert
p70182
I42
VSimpleName: setOffset
p70183
Vinsert
p70184
I42
VSimpleName: SQLExpr
p70185
tp70186
I2
s(g39695
I42
g39696
Vinsert
p70187
I43
VSimpleType: List
p70188
tp70189
I1
s(g28795
I42
g28796
Vinsert
p70190
I45
VStringLiteral: "\u005cnWHERE MATCH (title, body) AGAINST ('database' IN NATURAL LANGUAGE MODE)"
p70191
tp70192
I1
s(g44340
I42
g44341
Vinsert
p70193
I34
VNumberLiteral: 1
p70194
tp70195
I1
s(g1022
I42
g1023
Vinsert
p70196
I33
VNullLiteral
p70197
tp70198
I1
s(g15119
I42
g15120
Vinsert
p70199
I52
VThisExpression
p70200
tp70201
I1
s(g16767
I42
g16768
Vinsert
p70202
I42
VSimpleName: groupBy
p70203
tp70204
I2
s(g2852
I42
g2853
Vinsert
p70205
I8
VBlock
p70206
tp70207
I1
s(g11453
I42
g11454
Vinsert
p70208
I32
VMethodInvocation
p70209
tp70210
I28
s(g4106
I42
g4107
Vinsert
p70211
I42
VSimpleName: i
p70212
tp70213
I3
s(g27853
I42
g27854
Vinsert
p70214
I42
VSimpleName: SQLTableSource
p70215
tp70216
I3
s(g8760
I42
g8761
Vinsert
p70217
I42
VSimpleName: countStmt
p70218
tp70219
I1
s(g5908
I42
g5909
Vinsert
p70220
I42
VSimpleName: getItems
p70221
tp70222
I1
s(g27572
I42
g27573
Vinsert
p70223
I42
VSimpleName: assertTrue
p70224
tp70225
I1
s(g12969
I42
g12970
Vinsert
p70226
I45
VStringLiteral: "?/?"
p70227
tp70228
I1
s(g9791
I42
g9792
Vinsert
p70229
I9
VBooleanLiteral: true
p70230
tp70231
I1
s(g5429
I42
g5430
Vinsert
p70232
I42
VSimpleName: on
p70233
tp70234
I1
s(g3528
I42
g3529
Vinsert
p70235
I8
VBlock
p70236
tp70237
I6
s(g161
I42
g162
Vinsert
p70238
I42
VSimpleName: parseDropProcedure
p70239
tp70240
I1
s(g25834
I42
g25835
Vinsert
p70241
I42
VSimpleName: hash
p70242
tp70243
I6
s(g17718
I42
g17719
Vinsert
p70244
I8
VBlock
p70245
tp70246
I1
s(g19043
I42
g19044
Vinsert
p70247
I42
VSimpleName: SQLStatement
p70248
tp70249
I1
s(g19924
I42
g19925
Vinsert
p70250
I59
VVariableDeclarationFragment
p70251
tp70252
I1
s(g17747
I42
g17748
Vinsert
p70253
I42
VSimpleName: SQLException
p70254
tp70255
I2
s(g3417
I42
g3418
Vinsert
p70256
I42
VSimpleName: Integer
p70257
tp70258
I11
s(g4253
I42
g4254
Vinsert
p70259
I42
VSimpleName: e
p70260
tp70261
I8
s(g11616
I42
g11617
Vinsert
p70262
I42
VSimpleName: a2
p70263
tp70264
I1
s(g18270
I42
g18271
Vinsert
p70265
I40
VQualifiedName: Token.BY
p70266
tp70267
I1
s(g18836
I42
g18837
Vinsert
p70268
I42
VSimpleName: assertSame
p70269
tp70270
I1
s(g5320
I42
g5321
Vinsert
p70271
I40
VQualifiedName: java.util.concurrent.locks.ReentrantLock
p70272
tp70273
I3
s(g24987
I42
g24988
Vinsert
p70274
I7
VAssignment: =
p70275
tp70276
I1
s(g5455
I42
g5456
Vinsert
p70277
I43
VSimpleType: ArrayList
p70278
tp70279
I2
s(g8716
I42
g8717
Vinsert
p70280
I42
VSimpleName: histogram_100000_1000000
p70281
tp70282
I1
s(g8924
I42
g8925
Vinsert
p70283
I27
VInfixExpression: !=
p70284
tp70285
I1
s(g64262
I42
g64263
Vinsert
p70286
I40
VQualifiedName: TableStat.Column
p70287
tp70288
I1
s(g8409
I42
g8410
Vinsert
p70289
I43
VSimpleType: SpringMethodInfo
p70290
tp70291
I1
s(g6323
I42
g6324
Vinsert
p70292
I42
VSimpleName: test_builtin
p70293
tp70294
I1
s(Vinsert
p70295
I42
VSimpleName: getTables
p70296
Vinsert
p70297
I43
VSimpleType: PGSchemaStatVisitor
p70298
tp70299
I1
s(g96
I42
g97
Vinsert
p70300
I43
VSimpleType: PGAnalytic
p70301
tp70302
I1
s(g30209
I42
g30210
Vinsert
p70303
I42
VSimpleName: NumberFormatException
p70304
tp70305
I1
s(g977
I42
g978
Vinsert
p70306
I59
VVariableDeclarationFragment
p70307
tp70308
I3
s(g11803
I42
g11804
Vinsert
p70309
I42
VSimpleName: queryBlock
p70310
tp70311
I5
s(g4780
I42
g4781
Vinsert
p70312
I25
VIfStatement
p70313
tp70314
I3
s(g18300
I42
g18301
Vinsert
p70315
I43
VSimpleType: SQLServerColumnDefinition.Identity
p70316
tp70317
I2
s(g3689
I42
g3690
Vinsert
p70318
I43
VSimpleType: JConsoleContext
p70319
tp70320
I1
s(g5320
I42
g5321
Vinsert
p70321
I43
VSimpleType: ReentrantLock
p70322
tp70323
I7
s(g4472
I42
g4473
Vinsert
p70324
I12
VCatchClause
p70325
tp70326
I1
s(g3123
I42
g3124
Vinsert
p70327
I42
VSimpleName: getName
p70328
tp70329
I1
s(g8778
I42
g8779
Vinsert
p70330
I42
VSimpleName: token
p70331
tp70332
I2
s(g3383
I42
g3384
Vinsert
p70333
I57
VTypeLiteral
p70334
tp70335
I1
s(g3432
I42
g3433
Vinsert
p70336
I42
VSimpleName: setTestOnBorrow
p70337
tp70338
I2
s(g14452
I42
g14453
Vinsert
p70339
I42
VSimpleName: sql
p70340
tp70341
I7
s(g7650
I42
g7651
Vinsert
p70342
I42
VSimpleName: Math
p70343
tp70344
I1
s(g3880
I42
g3881
Vinsert
p70345
I41
VReturnStatement
p70346
tp70347
I1
s(g14072
I42
g14073
Vinsert
p70348
I42
VSimpleName: Override
p70349
tp70350
I3
s(g21817
I42
g21818
Vinsert
p70351
I42
VSimpleName: PhoenixLexer
p70352
tp70353
I1
s(g10604
I42
g10605
Vinsert
p70354
I42
VSimpleName: Object
p70355
tp70356
I5
s(g7158
I42
g7159
Vinsert
p70357
I8
VBlock
p70358
tp70359
I1
s(g29367
I42
g29368
Vinsert
p70360
I45
VStringLiteral: "\u005cn\u005ct) e"
p70361
tp70362
I1
s(g63675
I42
g63676
Vinsert
p70363
I42
VSimpleName: print
p70364
tp70365
I1
s(Vinsert
p70366
I42
VSimpleName: visit
p70367
Vinsert
p70368
I42
VSimpleName: labelName
p70369
tp70370
I2
s(g10124
I42
g10125
Vinsert
p70371
I42
VSimpleName: poolableResultSet
p70372
tp70373
I2
s(g2339
I42
g2340
Vinsert
p70374
I42
VSimpleName: print0
p70375
tp70376
I1
s(g11511
I42
g11512
Vinsert
p70377
I42
VSimpleName: symbolTable
p70378
tp70379
I1
s(g3836
I42
g3837
Vinsert
p70380
I42
VSimpleName: columnIndex
p70381
tp70382
I1
s(g9629
I42
g9630
Vinsert
p70383
I83
VModifier: public
p70384
tp70385
I2
s(g63287
I42
g63288
Vinsert
p70386
I45
VStringLiteral: "stat"
p70387
tp70388
I2
s(g1370
I42
g1371
Vinsert
p70389
I42
VSimpleName: test_getInitStackTrace
p70390
tp70391
I1
s(Vinsert
p70392
I42
VSimpleName: toSQLString
p70393
Vinsert
p70394
I45
VStringLiteral: "TABLESPACE \u005c"SYSTEM\u005c"\u005cn"
p70395
tp70396
I1
s(g2213
I42
g2214
Vinsert
p70397
I33
VNullLiteral
p70398
tp70399
I1
s(g1400
I42
g1401
Vinsert
p70400
I45
VStringLiteral: " WITH ("
p70401
tp70402
I1
s(g28986
I42
g28987
Vinsert
p70403
I43
VSimpleType: OdpsInsert
p70404
tp70405
I1
s(g5661
I42
g5662
Vinsert
p70406
I42
VSimpleName: setOwner
p70407
tp70408
I1
s(g23839
I42
g23840
Vinsert
p70409
I42
VSimpleName: String
p70410
tp70411
I4
s(g42114
I42
g42115
Vinsert
p70412
I43
VSimpleType: PoolableStatement
p70413
tp70414
I2
s(g3967
I42
g3968
Vinsert
p70415
I42
VSimpleName: pos
p70416
tp70417
I1
s(g20124
I42
g20125
Vinsert
p70418
I42
VSimpleName: len
p70419
tp70420
I1
s(g3659
I42
g3660
Vinsert
p70421
I11
VCastExpression
p70422
tp70423
I1
s(g13569
I42
g13570
Vinsert
p70424
I8
VBlock
p70425
tp70426
I2
s(g59363
I42
g59364
Vinsert
p70427
I36
VParenthesizedExpression
p70428
tp70429
I1
s(g4956
I42
g4957
Vinsert
p70430
I40
VQualifiedName: Token.LPAREN
p70431
tp70432
I1
s(g37907
I42
g37908
Vinsert
p70433
I34
VNumberLiteral: 30
p70434
tp70435
I1
s(g35983
I42
g35984
Vinsert
p70436
I43
VSimpleType: SchemaObjectImpl
p70437
tp70438
I1
s(g9307
I42
g9308
Vinsert
p70439
I42
VSimpleName: entry
p70440
tp70441
I1
s(g1352
I42
g1353
Vinsert
p70442
I59
VVariableDeclarationFragment
p70443
tp70444
I1
s(g24633
I42
g24634
Vinsert
p70445
I42
VSimpleName: setKeep
p70446
tp70447
I1
s(g6121
I42
g6122
Vinsert
p70448
I42
VSimpleName: get
p70449
tp70450
I1
s(g8547
I42
g8548
Vinsert
p70451
I42
VSimpleName: properties
p70452
tp70453
I10
s(g12671
I42
g12672
Vinsert
p70454
I59
VVariableDeclarationFragment
p70455
tp70456
I1
s(g5148
I42
g5149
Vinsert
p70457
I43
VSimpleType: Object
p70458
tp70459
I1
s(g6663
I42
g6664
Vinsert
p70460
I44
VSingleVariableDeclaration
p70461
tp70462
I1
s(g2563
I42
g2564
Vinsert
p70463
I42
VSimpleName: name
p70464
tp70465
I1
s(g3159
I42
g3160
Vinsert
p70466
I43
VSimpleType: SQLException
p70467
tp70468
I2
s(g26581
I42
g26582
Vinsert
p70469
I42
VSimpleName: schemaName
p70470
tp70471
I1
s(g8386
I42
g8387
Vinsert
p70472
I42
VSimpleName: edges
p70473
tp70474
I1
s(g34294
I42
g34295
Vinsert
p70475
I45
VStringLiteral: "CREATE"
p70476
tp70477
I1
s(g27538
I42
g27539
Vinsert
p70478
I42
VSimpleName: SQLPartition
p70479
tp70480
I4
s(g4745
I42
g4746
Vinsert
p70481
I11
VCastExpression
p70482
tp70483
I1
s(g13981
I42
g13982
Vinsert
p70484
I61
VWhileStatement
p70485
tp70486
I1
s(g2418
I42
g2419
Vinsert
p70487
I42
VSimpleName: SQLCreateDatabaseStatement
p70488
tp70489
I2
s(g46797
I42
g46798
Vinsert
p70490
I21
VExpressionStatement
p70491
tp70492
I3
s(g24503
I42
g24504
Vinsert
p70493
I42
VSimpleName: statementPool
p70494
tp70495
I1
s(g469
I42
g470
Vinsert
p70496
I62
VInstanceofExpression
p70497
tp70498
I7
s(g7620
I42
g7621
Vinsert
p70499
I42
VSimpleName: print0
p70500
tp70501
I1
s(g4558
I42
g4559
Vinsert
p70502
I42
VSimpleName: Date
p70503
tp70504
I2
s(g23338
I42
g23339
Vinsert
p70505
I40
VQualifiedName: JdbcConstants.MYSQL
p70506
tp70507
I1
s(g11845
I42
g11846
Vinsert
p70508
I27
VInfixExpression: ==
p70509
tp70510
I3
s(Vinsert
p70511
I42
VSimpleName: visit
p70512
Vinsert
p70513
I34
VNumberLiteral: 0
p70514
tp70515
I1
s(g13588
I42
g13589
Vinsert
p70516
I31
VMethodDeclaration
p70517
tp70518
I2
s(g25882
I42
g25883
Vinsert
p70519
I42
VSimpleName: parameter
p70520
tp70521
I1
s(g30209
I42
g30210
Vinsert
p70522
I53
VThrowStatement
p70523
tp70524
I1
s(g65405
I42
g65406
Vinsert
p70525
I43
VSimpleType: PGPolygonExpr
p70526
tp70527
I2
s(g31041
I42
g31042
Vinsert
p70528
I41
VReturnStatement
p70529
tp70530
I4
s(g1095
I42
g1096
Vinsert
p70531
I42
VSimpleName: Object
p70532
tp70533
I18
s(g1544
I42
g1545
Vinsert
p70534
I43
VSimpleType: SQLStatement
p70535
tp70536
I52
s(g7052
I42
g7053
Vinsert
p70537
I42
VSimpleName: filterSize
p70538
tp70539
I1
s(g15495
I42
g15496
Vinsert
p70540
I43
VSimpleType: DruidDataSource
p70541
tp70542
I1
s(g68940
I42
g68941
Vinsert
p70543
I23
VFieldDeclaration
p70544
tp70545
I1
s(g517
I42
g518
Vinsert
p70546
I42
VSimpleName: item
p70547
tp70548
I1
s(g16354
I42
g16355
Vinsert
p70549
I42
VSimpleName: getMasterWeightRegionBegin
p70550
tp70551
I1
s(g27722
I42
g27723
Vinsert
p70552
I32
VMethodInvocation
p70553
tp70554
I3
s(g10417
I42
g10418
Vinsert
p70555
I43
VSimpleType: SQLInsertStatement
p70556
tp70557
I2
s(g32712
I42
g32713
Vinsert
p70558
I42
VSimpleName: fields
p70559
tp70560
I1
s(g5826
I42
g5827
Vinsert
p70561
I8
VBlock
p70562
tp70563
I3
s(g26013
I42
g26014
Vinsert
p70564
I43
VSimpleType: ObjectName
p70565
tp70566
I1
s(g14316
I42
g14317
Vinsert
p70567
I25
VIfStatement
p70568
tp70569
I1
s(g4780
I42
g4781
Vinsert
p70570
I43
VSimpleType: Exception
p70571
tp70572
I1
s(g4543
I42
g4544
Vinsert
p70573
I40
VQualifiedName: entry.hash
p70574
tp70575
I1
s(g28042
I42
g28043
Vinsert
p70576
I42
VSimpleName: String
p70577
tp70578
I6
s(g4684
I42
g4685
Vinsert
p70579
I42
VSimpleName: queryBlock
p70580
tp70581
I1
s(g40719
I42
g40720
Vinsert
p70582
I42
VSimpleName: expr
p70583
tp70584
I4
s(g15602
I42
g15603
Vinsert
p70585
I42
VSimpleName: expr2
p70586
tp70587
I1
s(g18815
I42
g18816
Vinsert
p70588
I42
VSimpleName: schema
p70589
tp70590
I1
s(g8873
I42
g8874
Vinsert
p70591
I40
VQualifiedName: Token.LPAREN
p70592
tp70593
I1
s(g31177
I42
g31178
Vinsert
p70594
I22
VFieldAccess
p70595
tp70596
I3
s(g5328
I42
g5329
Vinsert
p70597
I42
VSimpleName: connectedTimeNano
p70598
tp70599
I1
s(g31879
I42
g31880
Vinsert
p70600
I33
VNullLiteral
p70601
tp70602
I4
s(g5772
I42
g5773
Vinsert
p70603
I42
VSimpleName: Assert
p70604
tp70605
I1
s(g10454
I42
g10455
Vinsert
p70606
I42
VSimpleName: WallCheckResult
p70607
tp70608
I1
s(g11484
I42
g11485
Vinsert
p70609
I52
VThisExpression
p70610
tp70611
I4
s(g13277
I42
g13278
Vinsert
p70612
I42
VSimpleName: assignItem
p70613
tp70614
I2
s(g48178
I42
g48179
Vinsert
p70615
I43
VSimpleType: OracleExportParameterVisitor
p70616
tp70617
I1
s(g7320
I42
g7321
Vinsert
p70618
I32
VMethodInvocation
p70619
tp70620
I1
s(g3898
I42
g3899
Vinsert
p70621
I42
VSimpleName: x
p70622
tp70623
I1
s(g4134
I42
g4135
Vinsert
p70624
I42
VSimpleName: InetAddress
p70625
tp70626
I1
s(g5171
I42
g5172
Vinsert
p70627
I43
VSimpleType: SQLException
p70628
tp70629
I2
s(g2403
I42
g2404
Vinsert
p70630
I42
VSimpleName: SQLAlterTableAlterColumn
p70631
tp70632
I1
s(g11910
I42
g11911
Vinsert
p70633
I16
VConditionalExpression
p70634
tp70635
I1
s(g8365
I42
g8366
Vinsert
p70636
I54
VTryStatement
p70637
tp70638
I1
s(g1208
I42
g1209
Vinsert
p70639
I83
VModifier: public
p70640
tp70641
I1
s(g14765
I42
g14766
Vinsert
p70642
I42
VSimpleName: Filter
p70643
tp70644
I1
s(g6722
I42
g6723
Vinsert
p70645
I21
VExpressionStatement
p70646
tp70647
I14
s(Vinsert
p70648
I42
VSimpleName: getHints
p70649
Vinsert
p70650
I45
VStringLiteral: "/*+"
p70651
tp70652
I1
s(g5782
I42
g5783
Vinsert
p70653
I42
VSimpleName: SQLIdentifierExpr
p70654
tp70655
I1
s(g4160
I42
g4161
Vinsert
p70656
I42
VSimpleName: Override
p70657
tp70658
I1
s(g136
I42
g137
Vinsert
p70659
I42
VSimpleName: object
p70660
tp70661
I1
s(g36569
I42
g36570
Vinsert
p70662
I42
VSimpleName: join
p70663
tp70664
I1
s(g6612
I42
g6613
Vinsert
p70665
I42
VSimpleName: rsaPublicKey
p70666
tp70667
I2
s(g13099
I42
g13100
Vinsert
p70668
I43
VSimpleType: AtomicInteger
p70669
tp70670
I1
s(g4806
I42
g4807
Vinsert
p70671
I60
VVariableDeclarationStatement
p70672
tp70673
I3
s(g1594
I42
g1595
Vinsert
p70674
I21
VExpressionStatement
p70675
tp70676
I3
s(g24462
I42
g24463
Vinsert
p70677
I21
VExpressionStatement
p70678
tp70679
I1
s(g16367
I42
g16368
Vinsert
p70680
I45
VStringLiteral: "c1"
p70681
tp70682
I1
s(g24954
I42
g24955
Vinsert
p70683
I11
VCastExpression
p70684
tp70685
I1
s(g17902
I42
g17903
Vinsert
p70686
I42
VSimpleName: OracleCommitStatement
p70687
tp70688
I4
s(g2233
I42
g2234
Vinsert
p70689
I43
VSimpleType: OracleLockTableStatement
p70690
tp70691
I1
s(g9827
I42
g9828
Vinsert
p70692
I8
VBlock
p70693
tp70694
I1
s(g28698
I42
g28699
Vinsert
p70695
I25
VIfStatement
p70696
tp70697
I2
s(g10433
I42
g10434
Vinsert
p70698
I41
VReturnStatement
p70699
tp70700
I2
s(g1853
I42
g1854
Vinsert
p70701
I32
VMethodInvocation
p70702
tp70703
I3
s(g28698
I42
g28699
Vinsert
p70704
I21
VExpressionStatement
p70705
tp70706
I3
s(g13551
I42
g13552
Vinsert
p70707
I42
VSimpleName: keySet
p70708
tp70709
I2
s(g1765
I42
g1766
Vinsert
p70710
I40
VQualifiedName: System.out
p70711
tp70712
I9
s(Vinsert
p70713
I42
VSimpleName: assertEquals
p70714
Vinsert
p70715
I43
VSimpleType: PoolableWrapper
p70716
tp70717
I2
s(g1299
I42
g1300
Vinsert
p70718
I8
VBlock
p70719
tp70720
I2
s(g9294
I42
g9295
Vinsert
p70721
I43
VSimpleType: PGSQLStatementParser
p70722
tp70723
I7
s(g6046
I42
g6047
Vinsert
p70724
I42
VSimpleName: x
p70725
tp70726
I1
s(g37671
I42
g37672
Vinsert
p70727
I45
VStringLiteral: "id"
p70728
tp70729
I4
s(g7163
I42
g7164
Vinsert
p70730
I42
VSimpleName: SQLMethodInvokeExpr
p70731
tp70732
I1
s(g7986
I42
g7987
Vinsert
p70733
I52
VThisExpression
p70734
tp70735
I5
s(g17007
I42
g17008
Vinsert
p70736
I21
VExpressionStatement
p70737
tp70738
I8
s(g39248
I42
g39249
Vinsert
p70739
I32
VMethodInvocation
p70740
tp70741
I7
s(g30913
I42
g30914
Vinsert
p70742
I45
VStringLiteral: "\u005cn\u005ctoffice VARCHAR2(10)"
p70743
tp70744
I2
s(g6182
I42
g6183
Vinsert
p70745
I45
VStringLiteral: "SELECT account_no, name\u005cn"
p70746
tp70747
I1
s(g16107
I42
g16108
Vinsert
p70748
I42
VSimpleName: clone
p70749
tp70750
I1
s(g7310
I42
g7311
Vinsert
p70751
I23
VFieldDeclaration
p70752
tp70753
I3
s(g2044
I42
g2045
Vinsert
p70754
I42
VSimpleName: leftDataType
p70755
tp70756
I2
s(g21908
I42
g21909
Vinsert
p70757
I45
VStringLiteral: "\u005cn\u005ctdirectory_name NVARCHAR(255),"
p70758
tp70759
I1
s(g10011
I42
g10012
Vinsert
p70760
I42
VSimpleName: HTableInterface
p70761
tp70762
I1
s(g5959
I42
g5960
Vinsert
p70763
I42
VSimpleName: print
p70764
tp70765
I1
s(g11925
I42
g11926
Vinsert
p70766
I31
VMethodDeclaration
p70767
tp70768
I2
s(g4404
I42
g4405
Vinsert
p70769
I22
VFieldAccess
p70770
tp70771
I1
s(g15407
I42
g15408
Vinsert
p70772
I21
VExpressionStatement
p70773
tp70774
I2
s(g5200
I42
g5201
Vinsert
p70775
I32
VMethodInvocation
p70776
tp70777
I2
s(g251
I42
g252
Vinsert
p70778
I42
VSimpleName: Object
p70779
tp70780
I1
s(g27253
I42
g27254
Vinsert
p70781
I42
VSimpleName: assertEquals
p70782
tp70783
I2
s(g36895
I42
g36896
Vinsert
p70784
I36
VParenthesizedExpression
p70785
tp70786
I39
s(g63453
I42
g63454
Vinsert
p70787
I43
VSimpleType: PGCidrExpr
p70788
tp70789
I4
s(g11516
I42
g11517
Vinsert
p70790
I42
VSimpleName: assertTrue
p70791
tp70792
I2
s(g806
I42
g807
Vinsert
p70793
I43
VSimpleType: String
p70794
tp70795
I2
s(g9670
I42
g9671
Vinsert
p70796
I21
VExpressionStatement
p70797
tp70798
I733
s(g26385
I42
g26386
Vinsert
p70799
I45
VStringLiteral: "utf8"
p70800
tp70801
I1
s(g8627
I42
g8628
Vinsert
p70802
I60
VVariableDeclarationStatement
p70803
tp70804
I2
s(g25152
I42
g25153
Vinsert
p70805
I31
VMethodDeclaration
p70806
tp70807
I1
s(g5734
I42
g5735
Vinsert
p70808
I42
VSimpleName: sql
p70809
tp70810
I2
s(g9827
I42
g9828
Vinsert
p70811
I25
VIfStatement
p70812
tp70813
I1
s(g4834
I42
g4835
Vinsert
p70814
I42
VSimpleName: test
p70815
tp70816
I1
s(g9899
I42
g9900
Vinsert
p70817
I42
VSimpleName: pid
p70818
tp70819
I1
s(Vinsert
p70820
I42
VSimpleName: visit
p70821
Vinsert
p70822
I42
VSimpleName: expr
p70823
tp70824
I8
s(g19018
I42
g19019
Vinsert
p70825
I42
VSimpleName: SQLObject
p70826
tp70827
I2
s(g6901
I42
g6902
Vinsert
p70828
I42
VSimpleName: x
p70829
tp70830
I6
s(g30252
I42
g30253
Vinsert
p70831
I60
VVariableDeclarationStatement
p70832
tp70833
I2
s(g55772
I42
g55773
Vinsert
p70834
I40
VQualifiedName: java.sql.Connection
p70835
tp70836
I2
s(g4313
I42
g4314
Vinsert
p70837
I42
VSimpleName: sql
p70838
tp70839
I1
s(g106
I42
g107
Vinsert
p70840
I33
VNullLiteral
p70841
tp70842
I1
s(g20840
I42
g20841
Vinsert
p70843
I42
VSimpleName: x
p70844
tp70845
I8
s(g9634
I42
g9635
Vinsert
p70846
I42
VSimpleName: buildNewCondition
p70847
tp70848
I1
s(g40459
I42
g40460
Vinsert
p70849
I42
VSimpleName: equals
p70850
tp70851
I1
s(g4801
I42
g4802
Vinsert
p70852
I60
VVariableDeclarationStatement
p70853
tp70854
I12
s(g10195
I42
g10196
Vinsert
p70855
I45
VStringLiteral: "\u005cn\u005ctpromo_id NUMBER(6),"
p70856
tp70857
I2
s(g4745
I42
g4746
Vinsert
p70858
I60
VVariableDeclarationStatement
p70859
tp70860
I1
s(g444
I42
g445
Vinsert
p70861
I39
VPrimitiveType: boolean
p70862
tp70863
I1
s(g1145
I42
g1146
Vinsert
p70864
I83
VModifier: static
p70865
tp70866
I1
s(g16863
I42
g16864
Vinsert
p70867
I60
VVariableDeclarationStatement
p70868
tp70869
I1
s(g1390
I42
g1391
Vinsert
p70870
I42
VSimpleName: seed
p70871
tp70872
I2
s(g454
I42
g455
Vinsert
p70873
I39
VPrimitiveType: int
p70874
tp70875
I1
s(g41057
I42
g41058
Vinsert
p70876
I48
VSuperMethodInvocation
p70877
tp70878
I1
s(g3694
I42
g3695
Vinsert
p70879
I45
VStringLiteral: "\u005cnPARTITION BY RANGE (job_code)"
p70880
tp70881
I1
s(g4740
I42
g4741
Vinsert
p70882
I8
VBlock
p70883
tp70884
I1
s(g8098
I42
g8099
Vinsert
p70885
I42
VSimpleName: String
p70886
tp70887
I1
s(g24954
I42
g24955
Vinsert
p70888
I32
VMethodInvocation
p70889
tp70890
I1
s(g4885
I42
g4886
Vinsert
p70891
I42
VSimpleName: getPoolingPeakTime
p70892
tp70893
I1
s(g1145
I42
g1146
Vinsert
p70894
I42
VSimpleName: MockConnection
p70895
tp70896
I1
s(g11696
I42
g11697
Vinsert
p70897
I45
VStringLiteral: "FROM ktv_epm.ktv_eq_rprboarditem rbi\u005cn"
p70898
tp70899
I1
s(g856
I42
g857
Vinsert
p70900
I42
VSimpleName: setJmxOption
p70901
tp70902
I1
s(g20439
I42
g20440
Vinsert
p70903
I40
VQualifiedName: parameters.length
p70904
tp70905
I1
s(g3332
I42
g3333
Vinsert
p70906
I42
VSimpleName: JdbcSqlStat
p70907
tp70908
I1
s(g8075
I42
g8076
Vinsert
p70909
I27
VInfixExpression: &&
p70910
tp70911
I1
s(g13061
I42
g13062
Vinsert
p70912
I60
VVariableDeclarationStatement
p70913
tp70914
I3
s(g5310
I42
g5311
Vinsert
p70915
I42
VSimpleName: parameters
p70916
tp70917
I2
s(Vinsert
p70918
I42
VSimpleName: equals
p70919
Vinsert
p70920
I45
VStringLiteral: "druid.mysql.usePingMethod"
p70921
tp70922
I1
s(g13569
I42
g13570
Vinsert
p70923
I40
VQualifiedName: com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlUnionQuery
p70924
tp70925
I1
s(g637
I42
g638
Vinsert
p70926
I33
VNullLiteral
p70927
tp70928
I1
s(g27783
I42
g27784
Vinsert
p70929
I27
VInfixExpression: +
p70930
tp70931
I72
s(g12854
I42
g12855
Vinsert
p70932
I42
VSimpleName: forget
p70933
tp70934
I1
s(g7052
I42
g7053
Vinsert
p70935
I27
VInfixExpression: <
p70936
tp70937
I1
s(g16213
I42
g16214
Vinsert
p70938
I42
VSimpleName: String
p70939
tp70940
I3
s(g5475
I42
g5476
Vinsert
p70941
I42
VSimpleName: startNano
p70942
tp70943
I1
s(g8038
I42
g8039
Vinsert
p70944
I43
VSimpleType: Object
p70945
tp70946
I1
s(g13981
I42
g13982
Vinsert
p70947
I42
VSimpleName: EOF
p70948
tp70949
I1
s(g16630
I42
g16631
Vinsert
p70950
I43
VSimpleType: Exception
p70951
tp70952
I1
s(g13973
I42
g13974
Vinsert
p70953
I42
VSimpleName: assertEquals
p70954
tp70955
I1
s(g7184
I42
g7185
Vinsert
p70956
I32
VMethodInvocation
p70957
tp70958
I89
s(g28447
I42
g28448
Vinsert
p70959
I42
VSimpleName: tearDown
p70960
tp70961
I4
s(g181
I42
g182
Vinsert
p70962
I42
VSimpleName: clone
p70963
tp70964
I1
s(g60517
I42
g60518
Vinsert
p70965
I45
VStringLiteral: "\u005cn\u005ct\u005ct{reuseCount:"
p70966
tp70967
I1
s(g66274
I42
g66275
Vinsert
p70968
I42
VSimpleName: initrans
p70969
tp70970
I3
s(g59833
I42
g59834
Vinsert
p70971
I45
VStringLiteral: "\u005cnFROM t_nds_web_article"
p70972
tp70973
I1
s(g2163
I42
g2164
Vinsert
p70974
I48
VSuperMethodInvocation
p70975
tp70976
I1
s(g44887
I42
g44888
Vinsert
p70977
I74
VParameterizedType: List<SQLStatement>
p70978
tp70979
I2
s(g10074
I42
g10075
Vinsert
p70980
I32
VMethodInvocation
p70981
tp70982
I4
s(g18691
I42
g18692
Vinsert
p70983
I45
VStringLiteral: "SHARE"
p70984
tp70985
I1
s(g7394
I42
g7395
Vinsert
p70986
I42
VSimpleName: Assert
p70987
tp70988
I2
s(g469
I42
g470
Vinsert
p70989
I32
VMethodInvocation
p70990
tp70991
I20
s(g3689
I42
g3690
Vinsert
p70992
I21
VExpressionStatement
p70993
tp70994
I2
s(g9041
I42
g9042
Vinsert
p70995
I8
VBlock
p70996
tp70997
I4
s(g22444
I42
g22445
Vinsert
p70998
I42
VSimpleName: SQLCommentHint
p70999
tp71000
I2
s(g7908
I42
g7909
Vinsert
p71001
I60
VVariableDeclarationStatement
p71002
tp71003
I3
s(g2657
I42
g2658
Vinsert
p71004
I43
VSimpleType: String
p71005
tp71006
I4
s(g8873
I42
g8874
Vinsert
p71007
I8
VBlock
p71008
tp71009
I24
s(g6771
I42
g6772
Vinsert
p71010
I32
VMethodInvocation
p71011
tp71012
I4
s(g12854
I42
g12855
Vinsert
p71013
I43
VSimpleType: Xid
p71014
tp71015
I1
s(g31219
I42
g31220
Vinsert
p71016
I42
VSimpleName: size
p71017
tp71018
I1
s(g36179
I42
g36180
Vinsert
p71019
I42
VSimpleName: initWallTopStatementContext
p71020
tp71021
I2
s(g46471
I42
g46472
Vinsert
p71022
I42
VSimpleName: valuesList
p71023
tp71024
I2
s(g34565
I42
g34566
Vinsert
p71025
I83
VModifier: public
p71026
tp71027
I1
s(g9519
I42
g9520
Vinsert
p71028
I43
VSimpleType: Xid
p71029
tp71030
I1
s(g5277
I42
g5278
Vinsert
p71031
I33
VNullLiteral
p71032
tp71033
I2
s(g16985
I42
g16986
Vinsert
p71034
I43
VSimpleType: Connection
p71035
tp71036
I3
s(g17966
I42
g17967
Vinsert
p71037
I45
VStringLiteral: "\u005cn\u005ctPARTITION p2 VALUES LESS THAN (16),"
p71038
tp71039
I2
s(g24407
I42
g24408
Vinsert
p71040
I42
VSimpleName: i
p71041
tp71042
I2
s(g21551
I42
g21552
Vinsert
p71043
I43
VSimpleType: SQLDataType
p71044
tp71045
I9
s(g8438
I42
g8439
Vinsert
p71046
I74
VParameterizedType: List<MySqlPartitioningDef>
p71047
tp71048
I1
s(g26548
I42
g26549
Vinsert
p71049
I42
VSimpleName: password
p71050
tp71051
I1
s(g562
I42
g563
Vinsert
p71052
I43
VSimpleType: CompositeData
p71053
tp71054
I2
s(g23828
I42
g23829
Vinsert
p71055
I42
VSimpleName: AtomicLongFieldUpdater
p71056
tp71057
I10
s(g7542
I42
g7543
Vinsert
p71058
I32
VMethodInvocation
p71059
tp71060
I1
s(g45377
I42
g45378
Vinsert
p71061
I43
VSimpleType: SQLSelectGroupByClause
p71062
tp71063
I2
s(g11920
I42
g11921
Vinsert
p71064
I42
VSimpleName: context
p71065
tp71066
I1
s(g11259
I42
g11260
Vinsert
p71067
I16
VConditionalExpression
p71068
tp71069
I1
s(g492
I42
g493
Vinsert
p71070
I42
VSimpleName: holder
p71071
tp71072
I2
s(g6992
I42
g6993
Vinsert
p71073
I42
VSimpleName: setRunningCount
p71074
tp71075
I1
s(g15610
I42
g15611
Vinsert
p71076
I42
VSimpleName: nextToken
p71077
tp71078
I3
s(Vinsert
p71079
I42
VSimpleName: getHints
p71080
Vinsert
p71081
I27
VInfixExpression: !=
p71082
tp71083
I1
s(g23501
I42
g23502
Vinsert
p71084
I42
VSimpleName: Arrays
p71085
tp71086
I2
s(g1878
I42
g1879
Vinsert
p71087
I42
VSimpleName: expr1
p71088
tp71089
I1
s(g12278
I42
g12279
Vinsert
p71090
I42
VSimpleName: assertEquals
p71091
tp71092
I2
s(Vinsert
p71093
I42
VSimpleName: token
p71094
Vinsert
p71095
I42
VSimpleName: methodExpr
p71096
tp71097
I1
s(Vinsert
p71098
I42
VSimpleName: assertEquals
p71099
Vinsert
p71100
I45
VStringLiteral: "alter view view_name rename to new_view_name;"
p71101
tp71102
I1
s(g19115
I42
g19116
Vinsert
p71103
I43
VSimpleType: SQLBinaryOpExpr
p71104
tp71105
I2
s(g26548
I42
g26549
Vinsert
p71106
I5
VArrayType: byte[]
p71107
tp71108
I1
s(g3664
I42
g3665
Vinsert
p71109
I42
VSimpleName: getAsExpr
p71110
tp71111
I1
s(g14535
I42
g14536
Vinsert
p71112
I45
VStringLiteral: "\u005ct\u005ctAND scanned = 'YES'\u005cn"
p71113
tp71114
I1
s(g8113
I42
g8114
Vinsert
p71115
I59
VVariableDeclarationFragment
p71116
tp71117
I4
s(g1236
I42
g1237
Vinsert
p71118
I31
VMethodDeclaration
p71119
tp71120
I1
s(g3982
I42
g3983
Vinsert
p71121
I21
VExpressionStatement
p71122
tp71123
I1
s(g30772
I42
g30773
Vinsert
p71124
I40
VQualifiedName: PGWallProvider.DEFAULT_CONFIG_DIR
p71125
tp71126
I1
s(g7927
I42
g7928
Vinsert
p71127
I8
VBlock
p71128
tp71129
I2
s(g14597
I42
g14598
Vinsert
p71130
I42
VSimpleName: tableObject
p71131
tp71132
I2
s(g1150
I42
g1151
Vinsert
p71133
I27
VInfixExpression: ==
p71134
tp71135
I1
s(g18437
I42
g18438
Vinsert
p71136
I42
VSimpleName: driverClass
p71137
tp71138
I1
s(g22046
I42
g22047
Vinsert
p71139
I45
VStringLiteral: "SELECT 1"
p71140
tp71141
I1
s(g4505
I42
g4506
Vinsert
p71142
I21
VExpressionStatement
p71143
tp71144
I2
s(g15345
I42
g15346
Vinsert
p71145
I59
VVariableDeclarationFragment
p71146
tp71147
I1
s(g9878
I42
g9879
Vinsert
p71148
I40
VQualifiedName: type.name
p71149
tp71150
I1
s(g12024
I42
g12025
Vinsert
p71151
I42
VSimpleName: columnSize
p71152
tp71153
I1
s(g11910
I42
g11911
Vinsert
p71154
I45
VStringLiteral: " as "
p71155
tp71156
I1
s(g28706
I42
g28707
Vinsert
p71157
I42
VSimpleName: options
p71158
tp71159
I1
s(g7888
I42
g7889
Vinsert
p71160
I14
VClassInstanceCreation
p71161
tp71162
I3
s(g6607
I42
g6608
Vinsert
p71163
I43
VSimpleType: Exception
p71164
tp71165
I1
s(g8995
I42
g8996
Vinsert
p71166
I42
VSimpleName: MySqlShowCharacterSetStatement
p71167
tp71168
I1
s(g24206
I42
g24207
Vinsert
p71169
I45
VStringLiteral: "CREATE TABLE HASH_TABLE (\u005cn"
p71170
tp71171
I1
s(g5882
I42
g5883
Vinsert
p71172
I43
VSimpleType: SQLSubqueryTableSource
p71173
tp71174
I1
s(g4121
I42
g4122
Vinsert
p71175
I45
VStringLiteral: "\u005ctWHERE employee_id = emp_id;\u005cn"
p71176
tp71177
I1
s(g4921
I42
g4922
Vinsert
p71178
I42
VSimpleName: x
p71179
tp71180
I15
s(g3480
I42
g3481
Vinsert
p71181
I7
VAssignment: =
p71182
tp71183
I1
s(Vinsert
p71184
I42
VSimpleName: toStatementList
p71185
Vinsert
p71186
I45
VStringLiteral: "create tablespace tblsp1 add datafile 'tblsp_work1' use logfile group lg_1 initial_size = 4G engine MYISAM;"
p71187
tp71188
I1
s(g4579
I42
g4580
Vinsert
p71189
I27
VInfixExpression: ==
p71190
tp71191
I2
s(g3228
I42
g3229
Vinsert
p71192
I43
VSimpleType: SQLObject
p71193
tp71194
I2
s(g791
I42
g792
Vinsert
p71195
I42
VSimpleName: SQLObject
p71196
tp71197
I5
s(g18963
I42
g18964
Vinsert
p71198
I48
VSuperMethodInvocation
p71199
tp71200
I2
s(g12565
I42
g12566
Vinsert
p71201
I44
VSingleVariableDeclaration
p71202
tp71203
I2
s(g16484
I42
g16485
Vinsert
p71204
I34
VNumberLiteral: 0
p71205
tp71206
I2
s(g25594
I42
g25595
Vinsert
p71207
I32
VMethodInvocation
p71208
tp71209
I2
s(g29793
I42
g29794
Vinsert
p71210
I42
VSimpleName: clearContext
p71211
tp71212
I1
s(g15485
I42
g15486
Vinsert
p71213
I42
VSimpleName: UnsupportedOperationException
p71214
tp71215
I1
s(g18531
I42
g18532
Vinsert
p71216
I42
VSimpleName: SQLVariantRefExpr
p71217
tp71218
I2
s(g7883
I42
g7884
Vinsert
p71219
I42
VSimpleName: error_text
p71220
tp71221
I1
s(g20288
I42
g20289
Vinsert
p71222
I42
VSimpleName: MySqlDeclareStatement
p71223
tp71224
I1
s(g23640
I42
g23641
Vinsert
p71225
I42
VSimpleName: stmt
p71226
tp71227
I1
s(g763
I42
g764
Vinsert
p71228
I32
VMethodInvocation
p71229
tp71230
I4
s(g11808
I42
g11809
Vinsert
p71231
I45
VStringLiteral: "TYPE"
p71232
tp71233
I1
s(g15367
I42
g15368
Vinsert
p71234
I33
VNullLiteral
p71235
tp71236
I2
s(g11555
I42
g11556
Vinsert
p71237
I43
VSimpleType: DruidXADataSource
p71238
tp71239
I1
s(g34785
I42
g34786
Vinsert
p71240
I43
VSimpleType: SQLIntegerExpr
p71241
tp71242
I1
s(g2982
I42
g2983
Vinsert
p71243
I42
VSimpleName: transactionName
p71244
tp71245
I1
s(g24923
I42
g24924
Vinsert
p71246
I27
VInfixExpression: &&
p71247
tp71248
I2
s(g5520
I42
g5521
Vinsert
p71249
I43
VSimpleType: NoSuchAlgorithmException
p71250
tp71251
I1
s(g9683
I42
g9684
Vinsert
p71252
I42
VSimpleName: getQuery
p71253
tp71254
I4
s(g2489
I42
g2490
Vinsert
p71255
I78
VMarkerAnnotation
p71256
tp71257
I1
s(g8425
I42
g8426
Vinsert
p71258
I42
VSimpleName: visitor
p71259
tp71260
I1
s(Vinsert
p71261
I42
VSimpleName: assertEquals
p71262
Vinsert
p71263
I45
VStringLiteral: "Tables : "
p71264
tp71265
I1
s(g41
I42
g42
Vinsert
p71266
I21
VExpressionStatement
p71267
tp71268
I2
s(g33374
I42
g33375
Vinsert
p71269
I45
VStringLiteral: "USING StockPivotImpl;"
p71270
tp71271
I1
s(g24954
I42
g24955
Vinsert
p71272
I43
VSimpleType: SQLTableSource
p71273
tp71274
I1
s(g7697
I42
g7698
Vinsert
p71275
I45
VStringLiteral: "\u005ct\u005ctSELECT g.id, g.link, g.data, 1\u005cn"
p71276
tp71277
I1
s(g7432
I42
g7433
Vinsert
p71278
I42
VSimpleName: SuppressWarnings
p71279
tp71280
I1
s(g19323
I42
g19324
Vinsert
p71281
I42
VSimpleName: SQLPanel
p71282
tp71283
I2
s(Vinsert
p71284
I42
VSimpleName: assertEquals
p71285
Vinsert
p71286
I45
VStringLiteral: "create table t as select * from dual;"
p71287
tp71288
I1
s(g23557
I42
g23558
Vinsert
p71289
I42
VSimpleName: socketReadTimeout
p71290
tp71291
I1
s(g51966
I42
g51967
Vinsert
p71292
I42
VSimpleName: stmt
p71293
tp71294
I1
s(Vinsert
p71295
I42
VSimpleName: setParent
p71296
Vinsert
p71297
I42
VSimpleName: alias
p71298
tp71299
I2
s(g12985
I42
g12986
Vinsert
p71300
I48
VSuperMethodInvocation
p71301
tp71302
I1
s(g33463
I42
g33464
Vinsert
p71303
I43
VSimpleType: WebSessionStat
p71304
tp71305
I1
s(g14118
I42
g14119
Vinsert
p71306
I42
VSimpleName: left
p71307
tp71308
I2
s(g10087
I42
g10088
Vinsert
p71309
I42
VSimpleName: close
p71310
tp71311
I1
s(g8306
I42
g8307
Vinsert
p71312
I42
VSimpleName: noLoggingImpl
p71313
tp71314
I8
s(g1279
I42
g1280
Vinsert
p71315
I42
VSimpleName: poolableStatement
p71316
tp71317
I1
s(g34996
I42
g34997
Vinsert
p71318
I42
VSimpleName: idleTimeMillis
p71319
tp71320
I1
s(g4720
I42
g4721
Vinsert
p71321
I40
VQualifiedName: Token.ASC
p71322
tp71323
I1
s(g30105
I42
g30106
Vinsert
p71324
I33
VNullLiteral
p71325
tp71326
I1
s(g419
I42
g420
Vinsert
p71327
I43
VSimpleType: XAConnection
p71328
tp71329
I1
s(g3533
I42
g3534
Vinsert
p71330
I42
VSimpleName: indexIn
p71331
tp71332
I2
s(g10687
I42
g10688
Vinsert
p71333
I42
VSimpleName: Throwable
p71334
tp71335
I1
s(g2982
I42
g2983
Vinsert
p71336
I21
VExpressionStatement
p71337
tp71338
I2
s(g29966
I42
g29967
Vinsert
p71339
I42
VSimpleName: lexer
p71340
tp71341
I2
s(g3053
I42
g3054
Vinsert
p71342
I21
VExpressionStatement
p71343
tp71344
I3
s(g14886
I42
g14887
Vinsert
p71345
I45
VStringLiteral: "BEGIN\u005cn"
p71346
tp71347
I1
s(g10039
I42
g10040
Vinsert
p71348
I42
VSimpleName: JdbcTraceManagerTest
p71349
tp71350
I1
s(g15648
I42
g15649
Vinsert
p71351
I40
VQualifiedName: com.alibaba.druid.DruidRuntimeException
p71352
tp71353
I1
s(g4318
I42
g4319
Vinsert
p71354
I25
VIfStatement
p71355
tp71356
I4
s(g4563
I42
g4564
Vinsert
p71357
I42
VSimpleName: block
p71358
tp71359
I8
s(g4080
I42
g4081
Vinsert
p71360
I42
VSimpleName: toLong
p71361
tp71362
I1
s(g11474
I42
g11475
Vinsert
p71363
I42
VSimpleName: SQLStatement
p71364
tp71365
I7
s(g21499
I42
g21500
Vinsert
p71366
I42
VSimpleName: Assert
p71367
tp71368
I1
s(g3608
I42
g3609
Vinsert
p71369
I42
VSimpleName: SQLObject
p71370
tp71371
I1
s(g20564
I42
g20565
Vinsert
p71372
I40
VQualifiedName: Map.Entry
p71373
tp71374
I1
s(g15648
I42
g15649
Vinsert
p71375
I42
VSimpleName: SQLStatement
p71376
tp71377
I1
s(g18749
I42
g18750
Vinsert
p71378
I43
VSimpleType: SQLAlterTableDropConstraint
p71379
tp71380
I6
s(g3297
I42
g3298
Vinsert
p71381
I39
VPrimitiveType: void
p71382
tp71383
I9
s(g11506
I42
g11507
Vinsert
p71384
I43
VSimpleType: ServletHolder
p71385
tp71386
I1
s(g56312
I42
g56313
Vinsert
p71387
I45
VStringLiteral: " LINES"
p71388
tp71389
I1
s(Vinsert
p71390
I42
VSimpleName: equals
p71391
Vinsert
p71392
I42
VSimpleName: entryValue
p71393
tp71394
I1
s(g4684
I42
g4685
Vinsert
p71395
I42
VSimpleName: limit
p71396
tp71397
I1
s(g14353
I42
g14354
Vinsert
p71398
I8
VBlock
p71399
tp71400
I3
s(g11325
I42
g11326
Vinsert
p71401
I59
VVariableDeclarationFragment
p71402
tp71403
I3
s(g14212
I42
g14213
Vinsert
p71404
I41
VReturnStatement
p71405
tp71406
I1
s(g7996
I42
g7997
Vinsert
p71407
I45
VStringLiteral: "set "
p71408
tp71409
I1
s(g2586
I42
g2587
Vinsert
p71410
I34
VNumberLiteral: 0
p71411
tp71412
I3
s(g6622
I42
g6623
Vinsert
p71413
I45
VStringLiteral: "NOCHECK"
p71414
tp71415
I1
s(g12822
I42
g12823
Vinsert
p71416
I42
VSimpleName: notEmpty
p71417
tp71418
I1
s(g11765
I42
g11766
Vinsert
p71419
I74
VParameterizedType: Class<?>
p71420
tp71421
I2
s(g25317
I42
g25318
Vinsert
p71422
I42
VSimpleName: Object
p71423
tp71424
I8
s(g14239
I42
g14240
Vinsert
p71425
I42
VSimpleName: stmtList
p71426
tp71427
I1
s(g11307
I42
g11308
Vinsert
p71428
I74
VParameterizedType: ArrayList<SQLExpr>
p71429
tp71430
I1
s(g3816
I42
g3817
Vinsert
p71431
I52
VThisExpression
p71432
tp71433
I2
s(g25196
I42
g25197
Vinsert
p71434
I42
VSimpleName: myStmt
p71435
tp71436
I1
s(g51614
I42
g51615
Vinsert
p71437
I42
VSimpleName: ClassLoader
p71438
tp71439
I1
s(Vinsert
p71440
I42
VSimpleName: setMinIdle
p71441
Vinsert
p71442
I42
VSimpleName: init
p71443
tp71444
I1
s(g1266
I42
g1267
Vinsert
p71445
I42
VSimpleName: Column
p71446
tp71447
I1
s(g14155
I42
g14156
Vinsert
p71448
I43
VSimpleType: Savepoint
p71449
tp71450
I1
s(g1304
I42
g1305
Vinsert
p71451
I42
VSimpleName: loopStmt
p71452
tp71453
I2
s(g20210
I42
g20211
Vinsert
p71454
I42
VSimpleName: SensitiveParameters
p71455
tp71456
I2
s(g3500
I42
g3501
Vinsert
p71457
I52
VThisExpression
p71458
tp71459
I3
s(g7078
I42
g7079
Vinsert
p71460
I27
VInfixExpression: ==
p71461
tp71462
I1
s(g2158
I42
g2159
Vinsert
p71463
I40
VQualifiedName: Token.LPAREN
p71464
tp71465
I2
s(g4505
I42
g4506
Vinsert
p71466
I13
VCharacterLiteral: ' '
p71467
tp71468
I1
s(g2120
I42
g2121
Vinsert
p71469
I36
VParenthesizedExpression
p71470
tp71471
I1
s(g16975
I42
g16976
Vinsert
p71472
I42
VSimpleName: multiDataSourceConnection
p71473
tp71474
I1
s(g64926
I42
g64927
Vinsert
p71475
I42
VSimpleName: rs
p71476
tp71477
I1
s(g12354
I42
g12355
Vinsert
p71478
I42
VSimpleName: isPooled
p71479
tp71480
I1
s(g9743
I42
g9744
Vinsert
p71481
I43
VSimpleType: SQLWithSubqueryClause.Entry
p71482
tp71483
I1
s(g866
I42
g867
Vinsert
p71484
I34
VNumberLiteral: 1
p71485
tp71486
I2
s(g7903
I42
g7904
Vinsert
p71487
I42
VSimpleName: maxPoolSize
p71488
tp71489
I2
s(Vinsert
p71490
I42
VSimpleName: getLog
p71491
Vinsert
p71492
I40
VQualifiedName: com.alibaba.druid.proxy.DruidDriver
p71493
tp71494
I1
s(g1415
I42
g1416
Vinsert
p71495
I43
VSimpleType: ElseIf
p71496
tp71497
I2
s(g6650
I42
g6651
Vinsert
p71498
I59
VVariableDeclarationFragment
p71499
tp71500
I1
s(g10325
I42
g10326
Vinsert
p71501
I27
VInfixExpression: &&
p71502
tp71503
I9
s(g33452
I42
g33453
Vinsert
p71504
I42
VSimpleName: x
p71505
tp71506
I1
s(g1105
I42
g1106
Vinsert
p71507
I42
VSimpleName: lastActiveTimeMillis
p71508
tp71509
I1
s(g4178
I42
g4179
Vinsert
p71510
I42
VSimpleName: connection
p71511
tp71512
I2
s(g16447
I42
g16448
Vinsert
p71513
I7
VAssignment: =
p71514
tp71515
I1
s(g36486
I42
g36487
Vinsert
p71516
I42
VSimpleName: url
p71517
tp71518
I3
s(g13569
I42
g13570
Vinsert
p71519
I31
VMethodDeclaration
p71520
tp71521
I2
s(g14226
I42
g14227
Vinsert
p71522
I42
VSimpleName: ucase
p71523
tp71524
I1
s(g28007
I42
g28008
Vinsert
p71525
I42
VSimpleName: exceptionSorter
p71526
tp71527
I2
s(g11930
I42
g11931
Vinsert
p71528
I44
VSingleVariableDeclaration
p71529
tp71530
I1
s(g42563
I42
g42564
Vinsert
p71531
I45
VStringLiteral: "CREATE TABLE promotions_var1 ("
p71532
tp71533
I2
s(g7660
I42
g7661
Vinsert
p71534
I45
VStringLiteral: "\u005cn('a1', 'b1'),"
p71535
tp71536
I2
s(g14744
I42
g14745
Vinsert
p71537
I43
VSimpleType: SimpleDateFormat
p71538
tp71539
I6
s(g2992
I42
g2993
Vinsert
p71540
I42
VSimpleName: selectList
p71541
tp71542
I3
s(g20475
I42
g20476
Vinsert
p71543
I44
VSingleVariableDeclaration
p71544
tp71545
I5
s(g17213
I42
g17214
Vinsert
p71546
I42
VSimpleName: getBlobOpenCount
p71547
tp71548
I2
s(g3083
I42
g3084
Vinsert
p71549
I59
VVariableDeclarationFragment
p71550
tp71551
I6
s(g35307
I42
g35308
Vinsert
p71552
I27
VInfixExpression: !=
p71553
tp71554
I1
s(g34622
I42
g34623
Vinsert
p71555
I32
VMethodInvocation
p71556
tp71557
I4
s(g16232
I42
g16233
Vinsert
p71558
I45
VStringLiteral: "abcd\u005cn"
p71559
tp71560
I15
s(g30750
I42
g30751
Vinsert
p71561
I43
VSimpleType: MySqlShowKeysStatement
p71562
tp71563
I2
s(g28640
I42
g28641
Vinsert
p71564
I40
VQualifiedName: SQLBinaryOperator.BooleanOr
p71565
tp71566
I1
s(g3659
I42
g3660
Vinsert
p71567
I8
VBlock
p71568
tp71569
I1
s(g48287
I42
g48288
Vinsert
p71570
I43
VSimpleType: MySqlSchemaStatVisitor
p71571
tp71572
I20
s(g54415
I42
g54416
Vinsert
p71573
I42
VSimpleName: type
p71574
tp71575
I2
s(g3103
I42
g3104
Vinsert
p71576
I21
VExpressionStatement
p71577
tp71578
I6
s(g43116
I42
g43117
Vinsert
p71579
I42
VSimpleName: rtnValue
p71580
tp71581
I1
s(g15761
I42
g15762
Vinsert
p71582
I42
VSimpleName: printAndAccept
p71583
tp71584
I1
s(g8001
I42
g8002
Vinsert
p71585
I11
VCastExpression
p71586
tp71587
I1
s(g60914
I42
g60915
Vinsert
p71588
I52
VThisExpression
p71589
tp71590
I2
s(g1888
I42
g1889
Vinsert
p71591
I42
VSimpleName: columnLabel
p71592
tp71593
I1
s(g54802
I42
g54803
Vinsert
p71594
I60
VVariableDeclarationStatement
p71595
tp71596
I1
s(g1145
I42
g1146
Vinsert
p71597
I42
VSimpleName: Log
p71598
tp71599
I1
s(g10195
I42
g10196
Vinsert
p71600
I45
VStringLiteral: "\u005cn\u005ctCONSTRAINT promo_id_u UNIQUE (promo_id)"
p71601
tp71602
I2
s(g196
I42
g197
Vinsert
p71603
I45
VStringLiteral: "\u005ctUNION ALL\u005cn"
p71604
tp71605
I2
s(g5569
I42
g5570
Vinsert
p71606
I62
VInstanceofExpression
p71607
tp71608
I2
s(g1745
I42
g1746
Vinsert
p71609
I21
VExpressionStatement
p71610
tp71611
I1
s(g3954
I42
g3955
Vinsert
p71612
I42
VSimpleName: statemen
p71613
tp71614
I1
s(g5429
I42
g5430
Vinsert
p71615
I21
VExpressionStatement
p71616
tp71617
I2
s(g27372
I42
g27373
Vinsert
p71618
I13
VCharacterLiteral: ' '
p71619
tp71620
I1
s(g22193
I42
g22194
Vinsert
p71621
I43
VSimpleType: FilterChainImpl
p71622
tp71623
I1
s(g5908
I42
g5909
Vinsert
p71624
I52
VThisExpression
p71625
tp71626
I1
s(g9433
I42
g9434
Vinsert
p71627
I42
VSimpleName: timeBetweenEvictionRunsMillis
p71628
tp71629
I1
s(g14452
I42
g14453
Vinsert
p71630
I60
VVariableDeclarationStatement
p71631
tp71632
I14
s(g9312
I42
g9313
Vinsert
p71633
I38
VPrefixExpression: ++
p71634
tp71635
I8
s(g10398
I42
g10399
Vinsert
p71636
I22
VFieldAccess
p71637
tp71638
I1
s(g4273
I42
g4274
Vinsert
p71639
I43
VSimpleType: SQLException
p71640
tp71641
I5
s(g9195
I42
g9196
Vinsert
p71642
I43
VSimpleType: String
p71643
tp71644
I10
s(g36541
I42
g36542
Vinsert
p71645
I45
VStringLiteral: "\u005cn\u005ct, roles, register_date"
p71646
tp71647
I1
s(g43592
I42
g43593
Vinsert
p71648
I42
VSimpleName: setDatabase
p71649
tp71650
I1
s(g8282
I42
g8283
Vinsert
p71651
I42
VSimpleName: dbType
p71652
tp71653
I1
s(Vinsert
p71654
I42
VSimpleName: nextToken
p71655
Vinsert
p71656
I42
VSimpleName: setIndexType
p71657
tp71658
I1
s(g5465
I42
g5466
Vinsert
p71659
I43
VSimpleType: String
p71660
tp71661
I1
s(g8184
I42
g8185
Vinsert
p71662
I42
VSimpleName: sql
p71663
tp71664
I1
s(Vinsert
p71665
I42
VSimpleName: assertEquals
p71666
Vinsert
p71667
I45
VStringLiteral: "23 = 23"
p71668
tp71669
I1
s(g50042
I42
g50043
Vinsert
p71670
I42
VSimpleName: SQLParserUtils
p71671
tp71672
I10
s(g4538
I42
g4539
Vinsert
p71673
I42
VSimpleName: visitor
p71674
tp71675
I29
s(g3608
I42
g3609
Vinsert
p71676
I42
VSimpleName: ArrayList
p71677
tp71678
I1
s(g35114
I42
g35115
Vinsert
p71679
I42
VSimpleName: setInitialSize
p71680
tp71681
I1
s(g13071
I42
g13072
Vinsert
p71682
I7
VAssignment: =
p71683
tp71684
I1
s(g4278
I42
g4279
Vinsert
p71685
I45
VStringLiteral: "| c_time       | time         | NO   |     | NULL                |                             |\u005cn"
p71686
tp71687
I1
s(g3967
I42
g3968
Vinsert
p71688
I42
VSimpleName: nextFilter
p71689
tp71690
I1
s(g33687
I42
g33688
Vinsert
p71691
I42
VSimpleName: user
p71692
tp71693
I1
s(g3967
I42
g3968
Vinsert
p71694
I52
VThisExpression
p71695
tp71696
I1
s(g15029
I42
g15030
Vinsert
p71697
I43
VSimpleType: Long
p71698
tp71699
I2
s(g8475
I42
g8476
Vinsert
p71700
I43
VSimpleType: String
p71701
tp71702
I5
s(g35171
I42
g35172
Vinsert
p71703
I42
VSimpleName: checkParameterize
p71704
tp71705
I1
s(g19888
I42
g19889
Vinsert
p71706
I8
VBlock
p71707
tp71708
I1
s(g13564
I42
g13565
Vinsert
p71709
I42
VSimpleName: query
p71710
tp71711
I2
s(g21155
I42
g21156
Vinsert
p71712
I42
VSimpleName: dataSourceOne
p71713
tp71714
I2
s(g15804
I42
g15805
Vinsert
p71715
I42
VSimpleName: setInterval
p71716
tp71717
I1
s(g5979
I42
g5980
Vinsert
p71718
I33
VNullLiteral
p71719
tp71720
I1
s(g11067
I42
g11068
Vinsert
p71721
I42
VSimpleName: SQLCharExpr
p71722
tp71723
I8
s(g36748
I42
g36749
Vinsert
p71724
I43
VSimpleType: PGExtractExpr
p71725
tp71726
I2
s(g5384
I42
g5385
Vinsert
p71727
I78
VMarkerAnnotation
p71728
tp71729
I2
s(g9954
I42
g9955
Vinsert
p71730
I8
VBlock
p71731
tp71732
I1
s(g20715
I42
g20716
Vinsert
p71733
I45
VStringLiteral: "\u005ct, `region_fee_standard`, `region_fee_add`, `cell_fee`, `way_day`, `version`)\u005cn"
p71734
tp71735
I1
s(g6066
I42
g6067
Vinsert
p71736
I42
VSimpleName: DruidDataSource
p71737
tp71738
I1
s(Vinsert
p71739
I42
VSimpleName: assertFalse
p71740
Vinsert
p71741
I42
VSimpleName: ConstantArithmeticCheckTest
p71742
tp71743
I1
s(g2722
I42
g2723
Vinsert
p71744
I32
VMethodInvocation
p71745
tp71746
I6
s(g17387
I42
g17388
Vinsert
p71747
I32
VMethodInvocation
p71748
tp71749
I19
s(g69317
I42
g69318
Vinsert
p71750
I42
VSimpleName: i
p71751
tp71752
I2
s(g32875
I42
g32876
Vinsert
p71753
I74
VParameterizedType: Set<Object>
p71754
tp71755
I2
s(g6727
I42
g6728
Vinsert
p71756
I32
VMethodInvocation
p71757
tp71758
I3
s(g1
I42
g2
Vinsert
p71759
I42
VSimpleName: holder
p71760
tp71761
I3
s(g1241
I42
g1242
Vinsert
p71762
I42
VSimpleName: Set
p71763
tp71764
I1
s(g38499
I42
g38500
Vinsert
p71765
I7
VAssignment: =
p71766
tp71767
I6
s(g4178
I42
g4179
Vinsert
p71768
I42
VSimpleName: connections
p71769
tp71770
I1
s(g35021
I42
g35022
Vinsert
p71771
I42
VSimpleName: JdbcUtils
p71772
tp71773
I1
s(g8129
I42
g8130
Vinsert
p71774
I39
VPrimitiveType: int
p71775
tp71776
I40
s(g32761
I42
g32762
Vinsert
p71777
I42
VSimpleName: replaceAll
p71778
tp71779
I2
s(g48698
I42
g48699
Vinsert
p71780
I34
VNumberLiteral: 1
p71781
tp71782
I1
s(g1236
I42
g1237
Vinsert
p71783
I52
VThisExpression
p71784
tp71785
I2
s(g7835
I42
g7836
Vinsert
p71786
I42
VSimpleName: Object
p71787
tp71788
I2
s(g6663
I42
g6664
Vinsert
p71789
I42
VSimpleName: x
p71790
tp71791
I2
s(g2069
I42
g2070
Vinsert
p71792
I32
VMethodInvocation
p71793
tp71794
I2
s(g2268
I42
g2269
Vinsert
p71795
I33
VNullLiteral
p71796
tp71797
I1
s(g7746
I42
g7747
Vinsert
p71798
I42
VSimpleName: String
p71799
tp71800
I1
s(g6722
I42
g6723
Vinsert
p71801
I45
VStringLiteral: "CREATE OR REPLACE PROCEDURE proc_helloworld\u005cn"
p71802
tp71803
I1
s(g4495
I42
g4496
Vinsert
p71804
I42
VSimpleName: error_text
p71805
tp71806
I1
s(g3355
I42
g3356
Vinsert
p71807
I39
VPrimitiveType: byte
p71808
tp71809
I2
s(g28840
I42
g28841
Vinsert
p71810
I42
VSimpleName: ProfileEntryKey
p71811
tp71812
I1
s(g10631
I42
g10632
Vinsert
p71813
I42
VSimpleName: identifierEquals
p71814
tp71815
I1
s(g9559
I42
g9560
Vinsert
p71816
I32
VMethodInvocation
p71817
tp71818
I1
s(g9222
I42
g9223
Vinsert
p71819
I42
VSimpleName: selectItem
p71820
tp71821
I1
s(g2870
I42
g2871
Vinsert
p71822
I59
VVariableDeclarationFragment
p71823
tp71824
I3
s(g8969
I42
g8970
Vinsert
p71825
I45
VStringLiteral: "/user/{id}"
p71826
tp71827
I1
s(g25063
I42
g25064
Vinsert
p71828
I42
VSimpleName: expr
p71829
tp71830
I2
s(g68021
I42
g68022
Vinsert
p71831
I41
VReturnStatement
p71832
tp71833
I1
s(g7797
I42
g7798
Vinsert
p71834
I31
VMethodDeclaration
p71835
tp71836
I1
s(g16685
I42
g16686
Vinsert
p71837
I42
VSimpleName: DaemonThreadFactory
p71838
tp71839
I2
s(g4890
I42
g4891
Vinsert
p71840
I42
VSimpleName: statement
p71841
tp71842
I1
s(g27350
I42
g27351
Vinsert
p71843
I70
VEnhancedForStatement
p71844
tp71845
I53
s(g924
I42
g925
Vinsert
p71846
I42
VSimpleName: listener
p71847
tp71848
I2
s(g39280
I42
g39281
Vinsert
p71849
I40
VQualifiedName: TeradataAnalyticWindowing.Type.RANGE
p71850
tp71851
I1
s(g11187
I42
g11188
Vinsert
p71852
I42
VSimpleName: statement
p71853
tp71854
I2
s(Vinsert
p71855
I42
VSimpleName: assertEquals
p71856
Vinsert
p71857
I42
VSimpleName: EvalMethodPITest
p71858
tp71859
I1
s(g4409
I42
g4410
Vinsert
p71860
I42
VSimpleName: dbType
p71861
tp71862
I1
s(g1760
I42
g1761
Vinsert
p71863
I32
VMethodInvocation
p71864
tp71865
I2
s(g17660
I42
g17661
Vinsert
p71866
I8
VBlock
p71867
tp71868
I5
s(g2722
I42
g2723
Vinsert
p71869
I42
VSimpleName: context
p71870
tp71871
I1
s(g15407
I42
g15408
Vinsert
p71872
I42
VSimpleName: print0
p71873
tp71874
I1
s(g23384
I42
g23385
Vinsert
p71875
I45
VStringLiteral: "true"
p71876
tp71877
I4
s(g7970
I42
g7971
Vinsert
p71878
I42
VSimpleName: SQLSetStatement
p71879
tp71880
I1
s(g9891
I42
g9892
Vinsert
p71881
I38
VPrefixExpression: ++
p71882
tp71883
I1
s(g4015
I42
g4016
Vinsert
p71884
I83
VModifier: protected
p71885
tp71886
I1
s(g4339
I42
g4340
Vinsert
p71887
I42
VSimpleName: afterSemi
p71888
tp71889
I1
s(g7827
I42
g7828
Vinsert
p71890
I8
VBlock
p71891
tp71892
I1
s(g38410
I42
g38411
Vinsert
p71893
I42
VSimpleName: MySqlShowProcedureStatusStatement
p71894
tp71895
I1
s(g7091
I42
g7092
Vinsert
p71896
I42
VSimpleName: PreparedStatementProxyImpl
p71897
tp71898
I2
s(g8373
I42
g8374
Vinsert
p71899
I31
VMethodDeclaration
p71900
tp71901
I2
s(g19369
I42
g19370
Vinsert
p71902
I25
VIfStatement
p71903
tp71904
I1
s(Vinsert
p71905
I42
VSimpleName: getParameters
p71906
Vinsert
p71907
I36
VParenthesizedExpression
p71908
tp71909
I1
s(g914
I42
g915
Vinsert
p71910
I16
VConditionalExpression
p71911
tp71912
I3
s(g5882
I42
g5883
Vinsert
p71913
I25
VIfStatement
p71914
tp71915
I1
s(g4819
I42
g4820
Vinsert
p71916
I45
VStringLiteral: "\u005cn\u005ct\u005ctOR d.indkey[9] = a.attnum)"
p71917
tp71918
I1
s(g15514
I42
g15515
Vinsert
p71919
I8
VBlock
p71920
tp71921
I1
s(g29658
I42
g29659
Vinsert
p71922
I59
VVariableDeclarationFragment
p71923
tp71924
I27
s(Vinsert
p71925
I42
VSimpleName: visit
p71926
Vinsert
p71927
I34
VNumberLiteral: 1L
p71928
tp71929
I20
s(g7927
I42
g7928
Vinsert
p71930
I40
VQualifiedName: Token.PARTITION
p71931
tp71932
I1
s(g8365
I42
g8366
Vinsert
p71933
I14
VClassInstanceCreation
p71934
tp71935
I1
s(Vinsert
p71936
I42
VSimpleName: format
p71937
Vinsert
p71938
I45
VStringLiteral: "CREATE TABLE foo (fooid int, foosubid int, fooname text);"
p71939
tp71940
I1
s(g17777
I42
g17778
Vinsert
p71941
I45
VStringLiteral: "convert to character set "
p71942
tp71943
I1
s(g17261
I42
g17262
Vinsert
p71944
I42
VSimpleName: nextToken
p71945
tp71946
I1
s(g14844
I42
g14845
Vinsert
p71947
I45
VStringLiteral: "COMMENT"
p71948
tp71949
I1
s(g3123
I42
g3124
Vinsert
p71950
I7
VAssignment: =
p71951
tp71952
I2
s(Vinsert
p71953
I42
VSimpleName: setParent
p71954
Vinsert
p71955
I42
VSimpleName: setSubQuery
p71956
tp71957
I2
s(g7512
I42
g7513
Vinsert
p71958
I54
VTryStatement
p71959
tp71960
I1
s(g796
I42
g797
Vinsert
p71961
I60
VVariableDeclarationStatement
p71962
tp71963
I2
s(g40052
I42
g40053
Vinsert
p71964
I42
VSimpleName: value
p71965
tp71966
I1
s(Vinsert
p71967
I42
VSimpleName: get
p71968
Vinsert
p71969
I43
VSimpleType: CompositeData
p71970
tp71971
I1
s(g5564
I42
g5565
Vinsert
p71972
I43
VSimpleType: String
p71973
tp71974
I1
s(g7589
I42
g7590
Vinsert
p71975
I40
VQualifiedName: SQLSetQuantifier.DISTINCT
p71976
tp71977
I1
s(g1840
I42
g1841
Vinsert
p71978
I43
VSimpleType: BigDecimal
p71979
tp71980
I2
s(g17082
I42
g17083
Vinsert
p71981
I32
VMethodInvocation
p71982
tp71983
I1
s(g57960
I42
g57961
Vinsert
p71984
I42
VSimpleName: test_bug
p71985
tp71986
I1
s(g47192
I42
g47193
Vinsert
p71987
I43
VSimpleType: SQLStartTransactionStatement
p71988
tp71989
I1
s(g10731
I42
g10732
Vinsert
p71990
I42
VSimpleName: position
p71991
tp71992
I1
s(g5394
I42
g5395
Vinsert
p71993
I42
VSimpleName: token
p71994
tp71995
I1
s(g19435
I42
g19436
Vinsert
p71996
I42
VSimpleName: getRight
p71997
tp71998
I1
s(g6354
I42
g6355
Vinsert
p71999
I42
VSimpleName: tableSource
p72000
tp72001
I2
s(g35182
I42
g35183
Vinsert
p72002
I43
VSimpleType: MySqlRenameTableStatement.Item
p72003
tp72004
I4
s(g23913
I42
g23914
Vinsert
p72005
I42
VSimpleName: setInt
p72006
tp72007
I3
s(g7807
I42
g7808
Vinsert
p72008
I42
VSimpleName: Collections
p72009
tp72010
I18
s(g15166
I42
g15167
Vinsert
p72011
I42
VSimpleName: format
p72012
tp72013
I1
s(g8509
I42
g8510
Vinsert
p72014
I54
VTryStatement
p72015
tp72016
I1
s(g2489
I42
g2490
Vinsert
p72017
I41
VReturnStatement
p72018
tp72019
I1
s(g19077
I42
g19078
Vinsert
p72020
I42
VSimpleName: holder
p72021
tp72022
I19
s(g22929
I42
g22930
Vinsert
p72023
I40
VQualifiedName: Boolean.TRUE
p72024
tp72025
I1
s(g54477
I42
g54478
Vinsert
p72026
I36
VParenthesizedExpression
p72027
tp72028
I1
s(g5633
I42
g5634
Vinsert
p72029
I26
VImportDeclaration
p72030
tp72031
I1
s(g6202
I42
g6203
Vinsert
p72032
I39
VPrimitiveType: int
p72033
tp72034
I1
s(Vinsert
p72035
I42
VSimpleName: token
p72036
Vinsert
p72037
I40
VQualifiedName: Token.DISABLE
p72038
tp72039
I2
s(g21760
I42
g21761
Vinsert
p72040
I42
VSimpleName: clazz
p72041
tp72042
I2
s(g43166
I42
g43167
Vinsert
p72043
I42
VSimpleName: sql
p72044
tp72045
I1
s(g13981
I42
g13982
Vinsert
p72046
I42
VSimpleName: count
p72047
tp72048
I1
s(g22740
I42
g22741
Vinsert
p72049
I42
VSimpleName: names
p72050
tp72051
I1
s(g5724
I42
g5725
Vinsert
p72052
I42
VSimpleName: c
p72053
tp72054
I2
s(g9934
I42
g9935
Vinsert
p72055
I14
VClassInstanceCreation
p72056
tp72057
I7
s(g43380
I42
g43381
Vinsert
p72058
I27
VInfixExpression: ||
p72059
tp72060
I2
s(g41393
I42
g41394
Vinsert
p72061
I43
VSimpleType: SQLAggregateExpr
p72062
tp72063
I2
s(g52723
I42
g52724
Vinsert
p72064
I42
VSimpleName: StringBuilder
p72065
tp72066
I2
s(g21356
I42
g21357
Vinsert
p72067
I42
VSimpleName: SQLCastExpr
p72068
tp72069
I2
s(g101
I42
g102
Vinsert
p72070
I32
VMethodInvocation
p72071
tp72072
I2
s(g44768
I42
g44769
Vinsert
p72073
I42
VSimpleName: count
p72074
tp72075
I1
s(g1090
I42
g1091
Vinsert
p72076
I42
VSimpleName: SQLDeclareItem
p72077
tp72078
I1
s(g4635
I42
g4636
Vinsert
p72079
I8
VBlock
p72080
tp72081
I3
s(g18070
I42
g18071
Vinsert
p72082
I42
VSimpleName: number
p72083
tp72084
I8
s(Vinsert
p72085
I42
VSimpleName: assertTrue
p72086
Vinsert
p72087
I34
VNumberLiteral: 1001
p72088
tp72089
I1
s(g16447
I42
g16448
Vinsert
p72090
I42
VSimpleName: name
p72091
tp72092
I1
s(g5574
I42
g5575
Vinsert
p72093
I42
VSimpleName: getPreferredTestQuery
p72094
tp72095
I1
s(g13938
I42
g13939
Vinsert
p72096
I9
VBooleanLiteral: false
p72097
tp72098
I1
s(g5515
I42
g5516
Vinsert
p72099
I78
VMarkerAnnotation
p72100
tp72101
I2
s(g20411
I42
g20412
Vinsert
p72102
I25
VIfStatement
p72103
tp72104
I1
s(g11601
I42
g11602
Vinsert
p72105
I43
VSimpleType: OracleSelectJoin
p72106
tp72107
I1
s(g30105
I42
g30106
Vinsert
p72108
I42
VSimpleName: JdbcDataSourceStat
p72109
tp72110
I3
s(g7932
I42
g7933
Vinsert
p72111
I43
VSimpleType: String
p72112
tp72113
I3
s(g4188
I42
g4189
Vinsert
p72114
I83
VModifier: public
p72115
tp72116
I2
s(g26818
I42
g26819
Vinsert
p72117
I42
VSimpleName: x
p72118
tp72119
I9
s(g6655
I42
g6656
Vinsert
p72120
I53
VThrowStatement
p72121
tp72122
I1
s(g15828
I42
g15829
Vinsert
p72123
I42
VSimpleName: getWhere
p72124
tp72125
I5
s(g19708
I42
g19709
Vinsert
p72126
I43
VSimpleType: SQLException
p72127
tp72128
I1
s(g3113
I42
g3114
Vinsert
p72129
I45
VStringLiteral: ", "
p72130
tp72131
I1
s(g12977
I42
g12978
Vinsert
p72132
I45
VStringLiteral: "\u005cnLIMIT 10"
p72133
tp72134
I1
s(g26260
I42
g26261
Vinsert
p72135
I27
VInfixExpression: !=
p72136
tp72137
I3
s(g1226
I42
g1227
Vinsert
p72138
I40
VQualifiedName: Token.OPEN
p72139
tp72140
I1
s(g5128
I42
g5129
Vinsert
p72141
I45
VStringLiteral: "show columns from test3"
p72142
tp72143
I1
s(g11585
I42
g11586
Vinsert
p72144
I8
VBlock
p72145
tp72146
I2
s(g8627
I42
g8628
Vinsert
p72147
I74
VParameterizedType: List<SQLExpr>
p72148
tp72149
I1
s(g7007
I42
g7008
Vinsert
p72150
I25
VIfStatement
p72151
tp72152
I2
s(g7655
I42
g7656
Vinsert
p72153
I8
VBlock
p72154
tp72155
I1
s(g9854
I42
g9855
Vinsert
p72156
I13
VCharacterLiteral: ')'
p72157
tp72158
I1
s(g14139
I42
g14140
Vinsert
p72159
I42
VSimpleName: Integer
p72160
tp72161
I3
s(g13504
I42
g13505
Vinsert
p72162
I42
VSimpleName: SQLUtils
p72163
tp72164
I4
s(g8298
I42
g8299
Vinsert
p72165
I42
VSimpleName: addAll
p72166
tp72167
I1
s(g26613
I42
g26614
Vinsert
p72168
I42
VSimpleName: JSONDruidStatService
p72169
tp72170
I1
s(g38485
I42
g38486
Vinsert
p72171
I42
VSimpleName: storage
p72172
tp72173
I2
s(g59152
I42
g59153
Vinsert
p72174
I40
VQualifiedName: Concat.instance
p72175
tp72176
I1
s(g27943
I42
g27944
Vinsert
p72177
I45
VStringLiteral: "\u005ctWHEN new.job_id <> 'AD_VP'\u005cn"
p72178
tp72179
I1
s(g35026
I42
g35027
Vinsert
p72180
I42
VSimpleName: createParser
p72181
tp72182
I1
s(g6005
I42
g6006
Vinsert
p72183
I59
VVariableDeclarationFragment
p72184
tp72185
I22
s(Vinsert
p72186
I42
VSimpleName: append
p72187
Vinsert
p72188
I42
VSimpleName: expr
p72189
tp72190
I4
s(g2647
I42
g2648
Vinsert
p72191
I8
VBlock
p72192
tp72193
I2
s(g8480
I42
g8481
Vinsert
p72194
I42
VSimpleName: parsePrimaryKey
p72195
tp72196
I1
s(g24542
I42
g24543
Vinsert
p72197
I11
VCastExpression
p72198
tp72199
I4
s(g19139
I42
g19140
Vinsert
p72200
I83
VModifier: public
p72201
tp72202
I1
s(g1873
I42
g1874
Vinsert
p72203
I42
VSimpleName: item
p72204
tp72205
I1
s(g1790
I42
g1791
Vinsert
p72206
I42
VSimpleName: Clob
p72207
tp72208
I1
s(g9360
I42
g9361
Vinsert
p72209
I11
VCastExpression
p72210
tp72211
I1
s(g2383
I42
g2384
Vinsert
p72212
I42
VSimpleName: Assert
p72213
tp72214
I1
s(g25616
I42
g25617
Vinsert
p72215
I45
VStringLiteral: "\u005ct, utl_raw.cast_to_raw(OWNER_1) AS OWNER_1, AREA_ID_1, utl_raw.cast_to_raw(FIRST_OWNER) AS FIRST_OWNER, FIRST_AREA_ID, utl_raw.cast_to_raw(CONTRACT_ID) AS CONTRACT_ID\u005cn"
p72216
tp72217
I1
s(g15514
I42
g15515
Vinsert
p72218
I42
VSimpleName: feature
p72219
tp72220
I2
s(g23113
I42
g23114
Vinsert
p72221
I52
VThisExpression
p72222
tp72223
I1
s(g47003
I42
g47004
Vinsert
p72224
I45
VStringLiteral: "\u005cn\u005ctid INT, "
p72225
tp72226
I1
s(g7522
I42
g7523
Vinsert
p72227
I32
VMethodInvocation
p72228
tp72229
I3
s(g14279
I42
g14280
Vinsert
p72230
I45
VStringLiteral: "\u005ct\u005ctAND b.TYPE IN ('TX', 'TM')\u005cn"
p72231
tp72232
I1
s(g19043
I42
g19044
Vinsert
p72233
I42
VSimpleName: parseStatementList
p72234
tp72235
I1
s(g23854
I42
g23855
Vinsert
p72236
I42
VSimpleName: OracleConnection
p72237
tp72238
I2
s(g4318
I42
g4319
Vinsert
p72239
I27
VInfixExpression: !=
p72240
tp72241
I1
s(g20100
I42
g20101
Vinsert
p72242
I27
VInfixExpression: ==
p72243
tp72244
I1
s(g47568
I42
g47569
Vinsert
p72245
I42
VSimpleName: prepareStatement
p72246
tp72247
I7
s(g19841
I42
g19842
Vinsert
p72248
I42
VSimpleName: Exception
p72249
tp72250
I1
s(g3159
I42
g3160
Vinsert
p72251
I44
VSingleVariableDeclaration
p72252
tp72253
I2
s(g40110
I42
g40111
Vinsert
p72254
I13
VCharacterLiteral: '"'
p72255
tp72256
I2
s(g19339
I42
g19340
Vinsert
p72257
I23
VFieldDeclaration
p72258
tp72259
I1
s(g16620
I42
g16621
Vinsert
p72260
I45
VStringLiteral: "false"
p72261
tp72262
I1
s(g1968
I42
g1969
Vinsert
p72263
I42
VSimpleName: createSQLSelectParser
p72264
tp72265
I1
s(g16745
I42
g16746
Vinsert
p72266
I43
VSimpleType: SQLException
p72267
tp72268
I1
s(g14139
I42
g14140
Vinsert
p72269
I43
VSimpleType: JdbcParameter
p72270
tp72271
I4
s(g1790
I42
g1791
Vinsert
p72272
I42
VSimpleName: clob
p72273
tp72274
I1
s(Vinsert
p72275
I42
VSimpleName: prepareStatement
p72276
Vinsert
p72277
I43
VSimpleType: String
p72278
tp72279
I5
s(g12859
I42
g12860
Vinsert
p72280
I45
VStringLiteral: "SESSION"
p72281
tp72282
I1
s(g2829
I42
g2830
Vinsert
p72283
I42
VSimpleName: Exception
p72284
tp72285
I1
s(g31549
I42
g31550
Vinsert
p72286
I43
VSimpleType: OracleTimestampExpr
p72287
tp72288
I1
s(g23476
I42
g23477
Vinsert
p72289
I45
VStringLiteral: "\u005ct, pctused$, initrans, maxtrans, hashkeys, func\u005cn"
p72290
tp72291
I1
s(g40442
I42
g40443
Vinsert
p72292
I42
VSimpleName: getStartTransactionCount
p72293
tp72294
I1
s(g101
I42
g102
Vinsert
p72295
I7
VAssignment: =
p72296
tp72297
I1
s(g2469
I42
g2470
Vinsert
p72298
I83
VModifier: public
p72299
tp72300
I2
s(g19035
I42
g19036
Vinsert
p72301
I42
VSimpleName: WallUpdateCheckItem
p72302
tp72303
I2
s(g5864
I42
g5865
Vinsert
p72304
I42
VSimpleName: add
p72305
tp72306
I1
s(g44887
I42
g44888
Vinsert
p72307
I43
VSimpleType: SQLStatement
p72308
tp72309
I4
s(g1380
I42
g1381
Vinsert
p72310
I42
VSimpleName: database
p72311
tp72312
I1
s(g497
I42
g498
Vinsert
p72313
I42
VSimpleName: error
p72314
tp72315
I2
s(g17683
I42
g17684
Vinsert
p72316
I42
VSimpleName: String
p72317
tp72318
I12
s(g1160
I42
g1161
Vinsert
p72319
I42
VSimpleName: id
p72320
tp72321
I1
s(g29165
I42
g29166
Vinsert
p72322
I42
VSimpleName: ds
p72323
tp72324
I2
s(g2862
I42
g2863
Vinsert
p72325
I40
VQualifiedName: Token.WHERE
p72326
tp72327
I4
s(g25721
I42
g25722
Vinsert
p72328
I8
VBlock
p72329
tp72330
I4
s(g19115
I42
g19116
Vinsert
p72331
I36
VParenthesizedExpression
p72332
tp72333
I1
s(g17182
I42
g17183
Vinsert
p72334
I39
VPrimitiveType: boolean
p72335
tp72336
I12
s(g23403
I42
g23404
Vinsert
p72337
I42
VSimpleName: SQLServerParameter
p72338
tp72339
I2
s(g753
I42
g754
Vinsert
p72340
I42
VSimpleName: String
p72341
tp72342
I1
s(g65934
I42
g65935
Vinsert
p72343
I42
VSimpleName: latch
p72344
tp72345
I1
s(g4956
I42
g4957
Vinsert
p72346
I42
VSimpleName: extract
p72347
tp72348
I2
s(g52754
I42
g52755
Vinsert
p72349
I42
VSimpleName: SQLDataType
p72350
tp72351
I1
s(g12294
I42
g12295
Vinsert
p72352
I42
VSimpleName: log
p72353
tp72354
I1
s(g3312
I42
g3313
Vinsert
p72355
I42
VSimpleName: getBoolean
p72356
tp72357
I1
s(g4404
I42
g4405
Vinsert
p72358
I40
VQualifiedName: Token.LIMIT
p72359
tp72360
I1
s(g3383
I42
g3384
Vinsert
p72361
I11
VCastExpression
p72362
tp72363
I1
s(g26548
I42
g26549
Vinsert
p72364
I8
VBlock
p72365
tp72366
I1
s(g13823
I42
g13824
Vinsert
p72367
I42
VSimpleName: setParseValuesSize
p72368
tp72369
I1
s(g5429
I42
g5430
Vinsert
p72370
I39
VPrimitiveType: void
p72371
tp72372
I1
s(g2198
I42
g2199
Vinsert
p72373
I33
VNullLiteral
p72374
tp72375
I1
s(g547
I42
g548
Vinsert
p72376
I45
VStringLiteral: "\u005ctAND v.id = c.id"
p72377
tp72378
I1
s(g2324
I42
g2325
Vinsert
p72379
I34
VNumberLiteral: 1000
p72380
tp72381
I2
s(g26024
I42
g26025
Vinsert
p72382
I45
VStringLiteral: "\u005cn f1 > 0"
p72383
tp72384
I1
s(g3447
I42
g3448
Vinsert
p72385
I45
VStringLiteral: ", not false"
p72386
tp72387
I1
s(g39640
I42
g39641
Vinsert
p72388
I45
VStringLiteral: "\u005cn\u005ctage INTEGER,"
p72389
tp72390
I2
s(g45377
I42
g45378
Vinsert
p72391
I42
VSimpleName: SQLSelectGroupByClause
p72392
tp72393
I2
s(Vinsert
p72394
I42
VSimpleName: isValidateMySql
p72395
Vinsert
p72396
I45
VStringLiteral: "select 1 from mysql.user"
p72397
tp72398
I1
s(g5351
I42
g5352
Vinsert
p72399
I21
VExpressionStatement
p72400
tp72401
I1
s(g21276
I42
g21277
Vinsert
p72402
I42
VSimpleName: visitor
p72403
tp72404
I11
s(g2173
I42
g2174
Vinsert
p72405
I42
VSimpleName: log
p72406
tp72407
I1
s(g2702
I42
g2703
Vinsert
p72408
I42
VSimpleName: database
p72409
tp72410
I1
s(g15087
I42
g15088
Vinsert
p72411
I32
VMethodInvocation
p72412
tp72413
I3
s(g14896
I42
g14897
Vinsert
p72414
I43
VSimpleType: DB2SelectQueryBlock
p72415
tp72416
I1
s(g7206
I42
g7207
Vinsert
p72417
I21
VExpressionStatement
p72418
tp72419
I1
s(g1304
I42
g1305
Vinsert
p72420
I43
VSimpleType: String
p72421
tp72422
I1
s(g11474
I42
g11475
Vinsert
p72423
I42
VSimpleName: sql
p72424
tp72425
I6
s(g9350
I42
g9351
Vinsert
p72426
I42
VSimpleName: SQLName
p72427
tp72428
I2
s(g6
I42
g7
Vinsert
p72429
I42
VSimpleName: i
p72430
tp72431
I3
s(Vinsert
p72432
I42
VSimpleName: size
p72433
Vinsert
p72434
I42
VSimpleName: j
p72435
tp72436
I4
s(g3365
I42
g3366
Vinsert
p72437
I42
VSimpleName: Assert
p72438
tp72439
I1
s(g1720
I42
g1721
Vinsert
p72440
I42
VSimpleName: sql
p72441
tp72442
I3
s(g4615
I42
g4616
Vinsert
p72443
I40
VQualifiedName: Token.IDENTIFIED
p72444
tp72445
I1
s(g5633
I42
g5634
Vinsert
p72446
I44
VSingleVariableDeclaration
p72447
tp72448
I6
s(g10100
I42
g10101
Vinsert
p72449
I7
VAssignment: =
p72450
tp72451
I1
s(g39640
I42
g39641
Vinsert
p72452
I45
VStringLiteral: "\u005cn\u005ct\u005ctAND name.last_name IS NOT NULL)"
p72453
tp72454
I2
s(Vinsert
p72455
I42
VSimpleName: getName
p72456
Vinsert
p72457
I42
VSimpleName: columnName
p72458
tp72459
I3
s(g1652
I42
g1653
Vinsert
p72460
I42
VSimpleName: visit
p72461
tp72462
I1
s(g20675
I42
g20676
Vinsert
p72463
I42
VSimpleName: tableSpace
p72464
tp72465
I3
s(g17678
I42
g17679
Vinsert
p72466
I42
VSimpleName: Condition
p72467
tp72468
I1
s(Vinsert
p72469
I42
VSimpleName: assertEquals
p72470
Vinsert
p72471
I45
VStringLiteral: "\u005cn\u005ctCHECK PARTITION p1"
p72472
tp72473
I1
s(g16030
I42
g16031
Vinsert
p72474
I45
VStringLiteral: "delete from a1, a2 using (t1) as a1"
p72475
tp72476
I1
s(g18070
I42
g18071
Vinsert
p72477
I43
VSimpleType: Number
p72478
tp72479
I4
s(g13538
I42
g13539
Vinsert
p72480
I42
VSimpleName: assertEquals
p72481
tp72482
I4
s(g4178
I42
g4179
Vinsert
p72483
I60
VVariableDeclarationStatement
p72484
tp72485
I1
s(g38899
I42
g38900
Vinsert
p72486
I42
VSimpleName: initUnderlyHoldability
p72487
tp72488
I1
s(g16380
I42
g16381
Vinsert
p72489
I27
VInfixExpression: ==
p72490
tp72491
I1
s(g14765
I42
g14766
Vinsert
p72492
I43
VSimpleType: Scan
p72493
tp72494
I1
s(g51370
I42
g51371
Vinsert
p72495
I27
VInfixExpression: ||
p72496
tp72497
I1
s(g3169
I42
g3170
Vinsert
p72498
I11
VCastExpression
p72499
tp72500
I2
s(g15753
I42
g15754
Vinsert
p72501
I42
VSimpleName: SQLDataType
p72502
tp72503
I1
s(Vinsert
p72504
I42
VSimpleName: getSelect
p72505
Vinsert
p72506
I43
VSimpleType: SQLSelectStatement
p72507
tp72508
I3
s(g2049
I42
g2050
Vinsert
p72509
I45
VStringLiteral: "NOCOMPRESS\u005cn"
p72510
tp72511
I8
s(g11270
I42
g11271
Vinsert
p72512
I42
VSimpleName: dao_druid
p72513
tp72514
I1
s(Vinsert
p72515
I42
VSimpleName: expr
p72516
Vinsert
p72517
I43
VSimpleType: PGCircleExpr
p72518
tp72519
I2
s(g46203
I42
g46204
Vinsert
p72520
I42
VSimpleName: visitor
p72521
tp72522
I1
s(g4594
I42
g4595
Vinsert
p72523
I42
VSimpleName: stmt
p72524
tp72525
I2
s(g1027
I42
g1028
Vinsert
p72526
I32
VMethodInvocation
p72527
tp72528
I3
s(g1868
I42
g1869
Vinsert
p72529
I32
VMethodInvocation
p72530
tp72531
I2
s(g9312
I42
g9313
Vinsert
p72532
I42
VSimpleName: ch
p72533
tp72534
I8
s(g6061
I42
g6062
Vinsert
p72535
I25
VIfStatement
p72536
tp72537
I2
s(g48954
I42
g48955
Vinsert
p72538
I33
VNullLiteral
p72539
tp72540
I2
s(g7835
I42
g7836
Vinsert
p72541
I8
VBlock
p72542
tp72543
I2
s(g16091
I42
g16092
Vinsert
p72544
I42
VSimpleName: Boolean
p72545
tp72546
I3
s(g13311
I42
g13312
Vinsert
p72547
I45
VStringLiteral: "\u005cn\u005ctCONSTRAINT pk_od PRIMARY KEY (order_id, part_no),"
p72548
tp72549
I2
s(g1012
I42
g1013
Vinsert
p72550
I21
VExpressionStatement
p72551
tp72552
I6
s(g13933
I42
g13934
Vinsert
p72553
I60
VVariableDeclarationStatement
p72554
tp72555
I1
s(g6046
I42
g6047
Vinsert
p72556
I59
VVariableDeclarationFragment
p72557
tp72558
I1
s(g28392
I42
g28393
Vinsert
p72559
I42
VSimpleName: Exception
p72560
tp72561
I1
s(g27752
I42
g27753
Vinsert
p72562
I27
VInfixExpression: *
p72563
tp72564
I1
s(g30229
I42
g30230
Vinsert
p72565
I38
VPrefixExpression: !
p72566
tp72567
I2
s(g9017
I42
g9018
Vinsert
p72568
I62
VInstanceofExpression
p72569
tp72570
I1
s(g3189
I42
g3190
Vinsert
p72571
I42
VSimpleName: OracleGotoStatement
p72572
tp72573
I1
s(g3714
I42
g3715
Vinsert
p72574
I32
VMethodInvocation
p72575
tp72576
I11
s(g21450
I42
g21451
Vinsert
p72577
I42
VSimpleName: createTable
p72578
tp72579
I1
s(g69188
I42
g69189
Vinsert
p72580
I42
VSimpleName: MySqlWallProvider
p72581
tp72582
I14
s(g14680
I42
g14681
Vinsert
p72583
I42
VSimpleName: getInstance
p72584
tp72585
I1
s(g13685
I42
g13686
Vinsert
p72586
I42
VSimpleName: filterArray
p72587
tp72588
I1
s(g19924
I42
g19925
Vinsert
p72589
I31
VMethodDeclaration
p72590
tp72591
I1
s(g34423
I42
g34424
Vinsert
p72592
I42
VSimpleName: ex
p72593
tp72594
I2
s(g5277
I42
g5278
Vinsert
p72595
I52
VThisExpression
p72596
tp72597
I1
s(g40337
I42
g40338
Vinsert
p72598
I45
VStringLiteral: "INSERT INTO t (a, b)"
p72599
tp72600
I3
s(g31798
I42
g31799
Vinsert
p72601
I40
VQualifiedName: SQLEvalVisitor.EVAL_ERROR
p72602
tp72603
I7
s(g12573
I42
g12574
Vinsert
p72604
I42
VSimpleName: list
p72605
tp72606
I1
s(g10438
I42
g10439
Vinsert
p72607
I42
VSimpleName: String
p72608
tp72609
I4
s(g22206
I42
g22207
Vinsert
p72610
I42
VSimpleName: getObjectInternal
p72611
tp72612
I2
s(g13981
I42
g13982
Vinsert
p72613
I36
VParenthesizedExpression
p72614
tp72615
I1
s(g10824
I42
g10825
Vinsert
p72616
I42
VSimpleName: url
p72617
tp72618
I6
s(g1130
I42
g1131
Vinsert
p72619
I45
VStringLiteral: "REFRESH FAST ON COMMIT\u005cn"
p72620
tp72621
I1
s(g27459
I42
g27460
Vinsert
p72622
I42
VSimpleName: setProperty
p72623
tp72624
I1
s(g21686
I42
g21687
Vinsert
p72625
I39
VPrimitiveType: boolean
p72626
tp72627
I1
s(g6421
I42
g6422
Vinsert
p72628
I40
VQualifiedName: FnvHash.Constants.VALIDATE
p72629
tp72630
I1
s(g12518
I42
g12519
Vinsert
p72631
I40
VQualifiedName: keys.length
p72632
tp72633
I1
s(g16831
I42
g16832
Vinsert
p72634
I8
VBlock
p72635
tp72636
I1
s(g20548
I42
g20549
Vinsert
p72637
I43
VSimpleType: ConnectionImpl
p72638
tp72639
I2
s(g14829
I42
g14830
Vinsert
p72640
I42
VSimpleName: get
p72641
tp72642
I9
s(g7052
I42
g7053
Vinsert
p72643
I41
VReturnStatement
p72644
tp72645
I1
s(g7158
I42
g7159
Vinsert
p72646
I31
VMethodDeclaration
p72647
tp72648
I1
s(Vinsert
p72649
I42
VSimpleName: getConnection
p72650
Vinsert
p72651
I42
VSimpleName: LOOP_COUNT
p72652
tp72653
I1
s(Vinsert
p72654
I42
VSimpleName: createStatement
p72655
Vinsert
p72656
I42
VSimpleName: sqe
p72657
tp72658
I1
s(g1825
I42
g1826
Vinsert
p72659
I45
VStringLiteral: "onFatalError"
p72660
tp72661
I1
s(Vinsert
p72662
I42
VSimpleName: names
p72663
Vinsert
p72664
I36
VParenthesizedExpression
p72665
tp72666
I1
s(g8269
I42
g8270
Vinsert
p72667
I31
VMethodDeclaration
p72668
tp72669
I1
s(g12930
I42
g12931
Vinsert
p72670
I7
VAssignment: =
p72671
tp72672
I2
s(g10082
I42
g10083
Vinsert
p72673
I21
VExpressionStatement
p72674
tp72675
I1
s(g30855
I42
g30856
Vinsert
p72676
I43
VSimpleType: MySqlExceptionSorter
p72677
tp72678
I1
s(Vinsert
p72679
I42
VSimpleName: assertEquals
p72680
Vinsert
p72681
I42
VSimpleName: EvalMethodTest_locate_2
p72682
tp72683
I1
s(g8179
I42
g8180
Vinsert
p72684
I42
VSimpleName: String
p72685
tp72686
I1
s(Vinsert
p72687
I42
VSimpleName: nextToken
p72688
Vinsert
p72689
I43
VSimpleType: SQLCharExpr
p72690
tp72691
I2
s(g20715
I42
g20716
Vinsert
p72692
I45
VStringLiteral: "\u005ct, `f5`, `f6`, `f7`, `f8`, `f9`\u005cn"
p72693
tp72694
I1
s(g11187
I42
g11188
Vinsert
p72695
I52
VThisExpression
p72696
tp72697
I2
s(g23820
I42
g23821
Vinsert
p72698
I42
VSimpleName: getTime
p72699
tp72700
I2
s(g11915
I42
g11916
Vinsert
p72701
I43
VSimpleType: Exception
p72702
tp72703
I2
s(g16264
I42
g16265
Vinsert
p72704
I8
VBlock
p72705
tp72706
I2
s(g2228
I42
g2229
Vinsert
p72707
I32
VMethodInvocation
p72708
tp72709
I2
s(Vinsert
p72710
I42
VSimpleName: assertEquals
p72711
Vinsert
p72712
I42
VSimpleName: PoolableConnection
p72713
tp72714
I1
s(g12069
I42
g12070
Vinsert
p72715
I42
VSimpleName: setDbType
p72716
tp72717
I1
s(g24730
I42
g24731
Vinsert
p72718
I10
VBreakStatement
p72719
tp72720
I1
s(g8184
I42
g8185
Vinsert
p72721
I11
VCastExpression
p72722
tp72723
I1
s(g14372
I42
g14373
Vinsert
p72724
I27
VInfixExpression: !=
p72725
tp72726
I1
s(g12671
I42
g12672
Vinsert
p72727
I45
VStringLiteral: "SUBPARTITIONS"
p72728
tp72729
I1
s(g5564
I42
g5565
Vinsert
p72730
I43
VSimpleType: SQLSelectItem
p72731
tp72732
I1
s(g4391
I42
g4392
Vinsert
p72733
I42
VSimpleName: session
p72734
tp72735
I2
s(g14479
I42
g14480
Vinsert
p72736
I42
VSimpleName: UnsupportedOperationException
p72737
tp72738
I1
s(g4457
I42
g4458
Vinsert
p72739
I21
VExpressionStatement
p72740
tp72741
I1
s(g1695
I42
g1696
Vinsert
p72742
I9
VBooleanLiteral: false
p72743
tp72744
I2
s(g10480
I42
g10481
Vinsert
p72745
I27
VInfixExpression: !=
p72746
tp72747
I2
s(g5887
I42
g5888
Vinsert
p72748
I40
VQualifiedName: Token.LPAREN
p72749
tp72750
I1
s(g9786
I42
g9787
Vinsert
p72751
I42
VSimpleName: token
p72752
tp72753
I2
s(g7537
I42
g7538
Vinsert
p72754
I42
VSimpleName: length
p72755
tp72756
I1
s(g14155
I42
g14156
Vinsert
p72757
I60
VVariableDeclarationStatement
p72758
tp72759
I1
s(g18399
I42
g18400
Vinsert
p72760
I42
VSimpleName: assertFalse
p72761
tp72762
I1
s(g9190
I42
g9191
Vinsert
p72763
I42
VSimpleName: outParameters
p72764
tp72765
I2
s(g1047
I42
g1048
Vinsert
p72766
I42
VSimpleName: LoggerFactory
p72767
tp72768
I1
s(g30023
I42
g30024
Vinsert
p72769
I27
VInfixExpression: /
p72770
tp72771
I1
s(g22647
I42
g22648
Vinsert
p72772
I45
VStringLiteral: "\u005ct\u005c"ID\u005c" PRIMARY KEY,\u005cn"
p72773
tp72774
I1
s(g6927
I42
g6928
Vinsert
p72775
I34
VNumberLiteral: 1
p72776
tp72777
I1
s(g2198
I42
g2199
Vinsert
p72778
I43
VSimpleType: Exception
p72779
tp72780
I1
s(g5040
I42
g5041
Vinsert
p72781
I42
VSimpleName: MySqlLexer
p72782
tp72783
I2
s(g116
I42
g117
Vinsert
p72784
I42
VSimpleName: Test
p72785
tp72786
I1
s(g4885
I42
g4886
Vinsert
p72787
I42
VSimpleName: dataSource
p72788
tp72789
I2
s(g12776
I42
g12777
Vinsert
p72790
I25
VIfStatement
p72791
tp72792
I1
s(g43438
I42
g43439
Vinsert
p72793
I42
VSimpleName: statement
p72794
tp72795
I17
s(g6031
I42
g6032
Vinsert
p72796
I32
VMethodInvocation
p72797
tp72798
I4
s(g10140
I42
g10141
Vinsert
p72799
I45
VStringLiteral: " comment "
p72800
tp72801
I1
s(g28232
I42
g28233
Vinsert
p72802
I45
VStringLiteral: "NEWLINE"
p72803
tp72804
I1
s(g18437
I42
g18438
Vinsert
p72805
I21
VExpressionStatement
p72806
tp72807
I4
s(g11816
I42
g11817
Vinsert
p72808
I45
VStringLiteral: "\u005ct, salary\u005cn"
p72809
tp72810
I1
s(g9883
I42
g9884
Vinsert
p72811
I42
VSimpleName: procedureName
p72812
tp72813
I1
s(g5666
I42
g5667
Vinsert
p72814
I42
VSimpleName: getId
p72815
tp72816
I1
s(g5414
I42
g5415
Vinsert
p72817
I21
VExpressionStatement
p72818
tp72819
I5
s(g20084
I42
g20085
Vinsert
p72820
I42
VSimpleName: Token
p72821
tp72822
I1
s(g8360
I42
g8361
Vinsert
p72823
I42
VSimpleName: indexName
p72824
tp72825
I2
s(g8277
I42
g8278
Vinsert
p72826
I85
VDimension
p72827
tp72828
I4
s(g637
I42
g638
Vinsert
p72829
I42
VSimpleName: print
p72830
tp72831
I2
s(Vinsert
p72832
I42
VSimpleName: getColName
p72833
Vinsert
p72834
I42
VSimpleName: addColumn
p72835
tp72836
I1
s(g3261
I42
g3262
Vinsert
p72837
I42
VSimpleName: exprParser
p72838
tp72839
I1
s(g14055
I42
g14056
Vinsert
p72840
I22
VFieldAccess
p72841
tp72842
I1
s(g5864
I42
g5865
Vinsert
p72843
I40
VQualifiedName: Token.BY
p72844
tp72845
I1
s(g3093
I42
g3094
Vinsert
p72846
I8
VBlock
p72847
tp72848
I3
s(g3282
I42
g3283
Vinsert
p72849
I21
VExpressionStatement
p72850
tp72851
I2
s(g26213
I42
g26214
Vinsert
p72852
I42
VSimpleName: setLimitZeroAllow
p72853
tp72854
I2
s(g45377
I42
g45378
Vinsert
p72855
I42
VSimpleName: x
p72856
tp72857
I3
s(g40357
I42
g40358
Vinsert
p72858
I45
VStringLiteral: "error"
p72859
tp72860
I2
s(g15387
I42
g15388
Vinsert
p72861
I43
VSimpleType: Boolean
p72862
tp72863
I1
s(g21006
I42
g21007
Vinsert
p72864
I45
VStringLiteral: ");"
p72865
tp72866
I1
s(g19678
I42
g19679
Vinsert
p72867
I32
VMethodInvocation
p72868
tp72869
I1
s(g1825
I42
g1826
Vinsert
p72870
I43
VSimpleType: Connection
p72871
tp72872
I65
s(g131
I42
g132
Vinsert
p72873
I42
VSimpleName: groupBy
p72874
tp72875
I4
s(g4196
I42
g4197
Vinsert
p72876
I40
VQualifiedName: JdbcConstants.MARIADB
p72877
tp72878
I1
s(g26013
I42
g26014
Vinsert
p72879
I42
VSimpleName: objectName
p72880
tp72881
I3
s(Vinsert
p72882
I42
VSimpleName: setOffset
p72883
Vinsert
p72884
I22
VFieldAccess
p72885
tp72886
I1
s(g14640
I42
g14641
Vinsert
p72887
I59
VVariableDeclarationFragment
p72888
tp72889
I1
s(g6450
I42
g6451
Vinsert
p72890
I41
VReturnStatement
p72891
tp72892
I4
s(g6139
I42
g6140
Vinsert
p72893
I42
VSimpleName: visitor
p72894
tp72895
I17
s(g61118
I42
g61119
Vinsert
p72896
I24
VForStatement
p72897
tp72898
I1
s(g6429
I42
g6430
Vinsert
p72899
I42
VSimpleName: WallVisitorUtils
p72900
tp72901
I1
s(g13171
I42
g13172
Vinsert
p72902
I42
VSimpleName: Override
p72903
tp72904
I1
s(g13331
I42
g13332
Vinsert
p72905
I38
VPrefixExpression: !
p72906
tp72907
I1
s(g14540
I42
g14541
Vinsert
p72908
I39
VPrimitiveType: void
p72909
tp72910
I1
s(Vinsert
p72911
I42
VSimpleName: visit
p72912
Vinsert
p72913
I42
VSimpleName: notForReplication
p72914
tp72915
I1
s(g136
I42
g137
Vinsert
p72916
I59
VVariableDeclarationFragment
p72917
tp72918
I4
s(g23271
I42
g23272
Vinsert
p72919
I42
VSimpleName: c1
p72920
tp72921
I2
s(g21517
I42
g21518
Vinsert
p72922
I42
VSimpleName: accept
p72923
tp72924
I2
s(g2805
I42
g2806
Vinsert
p72925
I42
VSimpleName: DataSourceProxyImpl
p72926
tp72927
I1
s(g10692
I42
g10693
Vinsert
p72928
I42
VSimpleName: List
p72929
tp72930
I4
s(g62364
I42
g62365
Vinsert
p72931
I43
VSimpleType: SQLStatementParser
p72932
tp72933
I2
s(g8583
I42
g8584
Vinsert
p72934
I33
VNullLiteral
p72935
tp72936
I1
s(g6917
I42
g6918
Vinsert
p72937
I43
VSimpleType: PreparedStatementHolder
p72938
tp72939
I2
s(g9259
I42
g9260
Vinsert
p72940
I42
VSimpleName: Class
p72941
tp72942
I1
s(g806
I42
g807
Vinsert
p72943
I42
VSimpleName: getEntity
p72944
tp72945
I2
s(g1868
I42
g1869
Vinsert
p72946
I42
VSimpleName: getPreparedStatementFactory
p72947
tp72948
I1
s(g5709
I42
g5710
Vinsert
p72949
I42
VSimpleName: bogusSources
p72950
tp72951
I1
s(g15397
I42
g15398
Vinsert
p72952
I11
VCastExpression
p72953
tp72954
I1
s(g3243
I42
g3244
Vinsert
p72955
I42
VSimpleName: String
p72956
tp72957
I2
s(g44768
I42
g44769
Vinsert
p72958
I42
VSimpleName: queryBlock
p72959
tp72960
I1
s(g121
I42
g122
Vinsert
p72961
I42
VSimpleName: acceptIdentifier
p72962
tp72963
I1
s(g25573
I42
g25574
Vinsert
p72964
I42
VSimpleName: String
p72965
tp72966
I2
s(g6207
I42
g6208
Vinsert
p72967
I21
VExpressionStatement
p72968
tp72969
I1
s(Vinsert
p72970
I42
VSimpleName: getName
p72971
Vinsert
p72972
I45
VStringLiteral: "SYNONYM "
p72973
tp72974
I1
s(g70295
I42
g70296
Vinsert
p72975
I42
VSimpleName: PGSchemaStatVisitor
p72976
tp72977
I1
s(g11025
I42
g11026
Vinsert
p72978
I43
VSimpleType: SQLCheck
p72979
tp72980
I2
s(g16648
I42
g16649
Vinsert
p72981
I8
VBlock
p72982
tp72983
I12
s(g17114
I42
g17115
Vinsert
p72984
I33
VNullLiteral
p72985
tp72986
I6
s(g19242
I42
g19243
Vinsert
p72987
I42
VSimpleName: autoGeneratedKeys
p72988
tp72989
I1
s(g15334
I42
g15335
Vinsert
p72990
I42
VSimpleName: visit
p72991
tp72992
I1
s(g25868
I42
g25869
Vinsert
p72993
I45
VStringLiteral: "ON t1.order_id = t2.order_id\u005cn"
p72994
tp72995
I1
s(g12726
I42
g12727
Vinsert
p72996
I42
VSimpleName: dataSource
p72997
tp72998
I1
s(g3714
I42
g3715
Vinsert
p72999
I21
VExpressionStatement
p73000
tp73001
I6
s(g25074
I42
g25075
Vinsert
p73002
I60
VVariableDeclarationStatement
p73003
tp73004
I1
s(g52306
I42
g52307
Vinsert
p73005
I74
VParameterizedType: List<SQLStatement>
p73006
tp73007
I1
s(g21892
I42
g21893
Vinsert
p73008
I42
VSimpleName: next
p73009
tp73010
I1
s(g3370
I42
g3371
Vinsert
p73011
I42
VSimpleName: getClass
p73012
tp73013
I47
s(g5176
I42
g5177
Vinsert
p73014
I52
VThisExpression
p73015
tp73016
I2
s(g13022
I42
g13023
Vinsert
p73017
I42
VSimpleName: sql
p73018
tp73019
I1
s(g2024
I42
g2025
Vinsert
p73020
I42
VSimpleName: keys
p73021
tp73022
I1
s(g44811
I42
g44812
Vinsert
p73023
I83
VModifier: static
p73024
tp73025
I1
s(g5564
I42
g5565
Vinsert
p73026
I42
VSimpleName: String
p73027
tp73028
I1
s(g5505
I42
g5506
Vinsert
p73029
I42
VSimpleName: getInUseCount
p73030
tp73031
I1
s(g7712
I42
g7713
Vinsert
p73032
I40
VQualifiedName: TableStat.Name
p73033
tp73034
I2
s(g21662
I42
g21663
Vinsert
p73035
I42
VSimpleName: subPartitionTemplate
p73036
tp73037
I1
s(g10797
I42
g10798
Vinsert
p73038
I42
VSimpleName: print0
p73039
tp73040
I2
s(g24247
I42
g24248
Vinsert
p73041
I83
VModifier: public
p73042
tp73043
I3
s(g42486
I42
g42487
Vinsert
p73044
I42
VSimpleName: parameters
p73045
tp73046
I2
s(g997
I42
g998
Vinsert
p73047
I8
VBlock
p73048
tp73049
I1
s(g8706
I42
g8707
Vinsert
p73050
I40
VQualifiedName: Token.GROUP
p73051
tp73052
I1
s(g3913
I42
g3914
Vinsert
p73053
I40
VQualifiedName: OracleCreateTableStatement.OIDIndex
p73054
tp73055
I1
s(g11067
I42
g11068
Vinsert
p73056
I42
VSimpleName: literal
p73057
tp73058
I2
s(g37470
I42
g37471
Vinsert
p73059
I43
VSimpleType: SpringMethodStatValue
p73060
tp73061
I1
s(g24368
I42
g24369
Vinsert
p73062
I45
VStringLiteral: "instead of"
p73063
tp73064
I1
s(g23118
I42
g23119
Vinsert
p73065
I42
VSimpleName: getDataSourceList
p73066
tp73067
I2
s(g15495
I42
g15496
Vinsert
p73068
I42
VSimpleName: isInfoEnabled
p73069
tp73070
I1
s(g30429
I42
g30430
Vinsert
p73071
I42
VSimpleName: setOrReplace
p73072
tp73073
I1
s(g4283
I42
g4284
Vinsert
p73074
I32
VMethodInvocation
p73075
tp73076
I3
s(g14147
I42
g14148
Vinsert
p73077
I27
VInfixExpression: &&
p73078
tp73079
I2
s(g4829
I42
g4830
Vinsert
p73080
I42
VSimpleName: sql
p73081
tp73082
I1
s(g67399
I42
g67400
Vinsert
p73083
I42
VSimpleName: visit
p73084
tp73085
I4
s(g40208
I42
g40209
Vinsert
p73086
I42
VSimpleName: maxRows
p73087
tp73088
I3
s(g17665
I42
g17666
Vinsert
p73089
I42
VSimpleName: preparedStatement_setDate
p73090
tp73091
I1
s(g4323
I42
g4324
Vinsert
p73092
I42
VSimpleName: XAResource
p73093
tp73094
I2
s(g5597
I42
g5598
Vinsert
p73095
I59
VVariableDeclarationFragment
p73096
tp73097
I2
s(Vinsert
p73098
I42
VSimpleName: lock
p73099
Vinsert
p73100
I42
VSimpleName: staticLock
p73101
tp73102
I2
s(g35994
I42
g35995
Vinsert
p73103
I42
VSimpleName: setWith
p73104
tp73105
I3
s(g27822
I42
g27823
Vinsert
p73106
I52
VThisExpression
p73107
tp73108
I2
s(g444
I42
g445
Vinsert
p73109
I42
VSimpleName: constArithmetic
p73110
tp73111
I2
s(g909
I42
g910
Vinsert
p73112
I45
VStringLiteral: "\u005ctcount NUMBER, \u005cn"
p73113
tp73114
I1
s(g66589
I42
g66590
Vinsert
p73115
I43
VSimpleType: SQLSelectOrderByItem
p73116
tp73117
I3
s(g18187
I42
g18188
Vinsert
p73118
I42
VSimpleName: config
p73119
tp73120
I8
s(g28185
I42
g28186
Vinsert
p73121
I42
VSimpleName: DruidPooledPreparedStatement
p73122
tp73123
I1
s(g17764
I42
g17765
Vinsert
p73124
I42
VSimpleName: x
p73125
tp73126
I1
s(g2639
I42
g2640
Vinsert
p73127
I42
VSimpleName: map
p73128
tp73129
I2
s(g15029
I42
g15030
Vinsert
p73130
I42
VSimpleName: longVal
p73131
tp73132
I1
s(g27954
I42
g27955
Vinsert
p73133
I43
VSimpleType: ClassNotFoundException
p73134
tp73135
I1
s(g2130
I42
g2131
Vinsert
p73136
I42
VSimpleName: parameterName
p73137
tp73138
I1
s(g5333
I42
g5334
Vinsert
p73139
I40
VQualifiedName: Types.DOUBLE
p73140
tp73141
I1
s(g507
I42
g508
Vinsert
p73142
I27
VInfixExpression: <
p73143
tp73144
I1
s(g5200
I42
g5201
Vinsert
p73145
I34
VNumberLiteral: 0
p73146
tp73147
I1
s(g16471
I42
g16472
Vinsert
p73148
I45
VStringLiteral: "\u005ct\u005c"COUNT\u005c" VARCHAR(102)\u005cn"
p73149
tp73150
I2
s(g5343
I42
g5344
Vinsert
p73151
I60
VVariableDeclarationStatement
p73152
tp73153
I1
s(Vinsert
p73154
I42
VSimpleName: close
p73155
Vinsert
p73156
I42
VSimpleName: init
p73157
tp73158
I4
s(g11325
I42
g11326
Vinsert
p73159
I60
VVariableDeclarationStatement
p73160
tp73161
I3
s(g1360
I42
g1361
Vinsert
p73162
I34
VNumberLiteral: 2
p73163
tp73164
I4
s(g10971
I42
g10972
Vinsert
p73165
I42
VSimpleName: incrementClosedPreparedStatementCount
p73166
tp73167
I1
s(g28520
I42
g28521
Vinsert
p73168
I45
VStringLiteral: "jdbc:mock:ha2"
p73169
tp73170
I1
s(g25913
I42
g25914
Vinsert
p73171
I40
VQualifiedName: Token.CREATE
p73172
tp73173
I2
s(g14790
I42
g14791
Vinsert
p73174
I42
VSimpleName: ucase
p73175
tp73176
I1
s(g25975
I42
g25976
Vinsert
p73177
I42
VSimpleName: getHints
p73178
tp73179
I4
s(g1022
I42
g1023
Vinsert
p73180
I25
VIfStatement
p73181
tp73182
I1
s(g547
I42
g548
Vinsert
p73183
I45
VStringLiteral: "\u005ct, c.is_pass_av, c.keywords, c.provide_products, c.purchase_products, c.brand_name\u005cn"
p73184
tp73185
I1
s(g51840
I42
g51841
Vinsert
p73186
I42
VSimpleName: SQLPropertyExpr
p73187
tp73188
I1
s(g15334
I42
g15335
Vinsert
p73189
I44
VSingleVariableDeclaration
p73190
tp73191
I12
s(g20914
I42
g20915
Vinsert
p73192
I43
VSimpleType: SQLException
p73193
tp73194
I1
s(g8298
I42
g8299
Vinsert
p73195
I33
VNullLiteral
p73196
tp73197
I44
s(g13643
I42
g13644
Vinsert
p73198
I12
VCatchClause
p73199
tp73200
I1
s(g3027
I42
g3028
Vinsert
p73201
I42
VSimpleName: replace
p73202
tp73203
I1
s(g41
I42
g42
Vinsert
p73204
I39
VPrimitiveType: boolean
p73205
tp73206
I1
s(g2198
I42
g2199
Vinsert
p73207
I42
VSimpleName: dataSource
p73208
tp73209
I1
s(g14583
I42
g14584
Vinsert
p73210
I42
VSimpleName: SQLException
p73211
tp73212
I3
s(g46013
I42
g46014
Vinsert
p73213
I27
VInfixExpression: <
p73214
tp73215
I5
s(g45377
I42
g45378
Vinsert
p73216
I42
VSimpleName: visit
p73217
tp73218
I2
s(g3770
I42
g3771
Vinsert
p73219
I42
VSimpleName: Byte
p73220
tp73221
I2
s(Vinsert
p73222
I42
VSimpleName: endVisit
p73223
Vinsert
p73224
I42
VSimpleName: table
p73225
tp73226
I1
s(g18044
I42
g18045
Vinsert
p73227
I40
VQualifiedName: Token.BY
p73228
tp73229
I1
s(g37744
I42
g37745
Vinsert
p73230
I42
VSimpleName: column
p73231
tp73232
I2
s(g16281
I42
g16282
Vinsert
p73233
I42
VSimpleName: value
p73234
tp73235
I3
s(g34122
I42
g34123
Vinsert
p73236
I60
VVariableDeclarationStatement
p73237
tp73238
I2
s(g13823
I42
g13824
Vinsert
p73239
I21
VExpressionStatement
p73240
tp73241
I10
s(g9332
I42
g9333
Vinsert
p73242
I40
VQualifiedName: Integer.MIN_VALUE
p73243
tp73244
I1
s(g6061
I42
g6062
Vinsert
p73245
I8
VBlock
p73246
tp73247
I2
s(g13643
I42
g13644
Vinsert
p73248
I33
VNullLiteral
p73249
tp73250
I1
s(g2499
I42
g2500
Vinsert
p73251
I42
VSimpleName: isUnique
p73252
tp73253
I1
s(g6640
I42
g6641
Vinsert
p73254
I9
VBooleanLiteral: false
p73255
tp73256
I1
s(g12103
I42
g12104
Vinsert
p73257
I42
VSimpleName: getGroupBy
p73258
tp73259
I2
s(Vinsert
p73260
I42
VSimpleName: getConnection
p73261
Vinsert
p73262
I42
VSimpleName: setEnable
p73263
tp73264
I1
s(g17012
I42
g17013
Vinsert
p73265
I42
VSimpleName: String
p73266
tp73267
I1
s(g16935
I42
g16936
Vinsert
p73268
I7
VAssignment: =
p73269
tp73270
I2
s(g3287
I42
g3288
Vinsert
p73271
I42
VSimpleName: String
p73272
tp73273
I1
s(g7756
I42
g7757
Vinsert
p73274
I74
VParameterizedType: Collection<Schema>
p73275
tp73276
I1
s(g37349
I42
g37350
Vinsert
p73277
I42
VSimpleName: getIndex
p73278
tp73279
I1
s(g12911
I42
g12912
Vinsert
p73280
I42
VSimpleName: Assert
p73281
tp73282
I2
s(g4755
I42
g4756
Vinsert
p73283
I42
VSimpleName: SQLException
p73284
tp73285
I1
s(g11940
I42
g11941
Vinsert
p73286
I7
VAssignment: =
p73287
tp73288
I1
s(g2281
I42
g2282
Vinsert
p73289
I32
VMethodInvocation
p73290
tp73291
I4
s(g6562
I42
g6563
Vinsert
p73292
I39
VPrimitiveType: int
p73293
tp73294
I1
s(g2504
I42
g2505
Vinsert
p73295
I42
VSimpleName: x
p73296
tp73297
I2
s(g28185
I42
g28186
Vinsert
p73298
I43
VSimpleType: Exception
p73299
tp73300
I2
s(g20914
I42
g20915
Vinsert
p73301
I39
VPrimitiveType: int
p73302
tp73303
I1
s(g7131
I42
g7132
Vinsert
p73304
I5
VArrayType: byte[]
p73305
tp73306
I1
s(g52731
I42
g52732
Vinsert
p73307
I40
VQualifiedName: Token.CREATE
p73308
tp73309
I2
s(g27276
I42
g27277
Vinsert
p73310
I42
VSimpleName: Collections
p73311
tp73312
I1
s(g53410
I42
g53411
Vinsert
p73313
I42
VSimpleName: OracleToMySqlOutputVisitor
p73314
tp73315
I1
s(Vinsert
p73316
I42
VSimpleName: toPGString
p73317
Vinsert
p73318
I45
VStringLiteral: "WHERE gmt = #{time}::timestamp WITH TIME ZONE"
p73319
tp73320
I1
s(Vinsert
p73321
I42
VSimpleName: accept0
p73322
Vinsert
p73323
I42
VSimpleName: from
p73324
tp73325
I1
s(g21577
I42
g21578
Vinsert
p73326
I8
VBlock
p73327
tp73328
I2
s(g63675
I42
g63676
Vinsert
p73329
I42
VSimpleName: ucase
p73330
tp73331
I1
s(g6529
I42
g6530
Vinsert
p73332
I42
VSimpleName: Integer
p73333
tp73334
I1
s(g32782
I42
g32783
Vinsert
p73335
I26
VImportDeclaration
p73336
tp73337
I2
s(Vinsert
p73338
I42
VSimpleName: setParent
p73339
Vinsert
p73340
I42
VSimpleName: SQLColumnConstraint
p73341
tp73342
I1
s(g6587
I42
g6588
Vinsert
p73343
I42
VSimpleName: PGSetStatement
p73344
tp73345
I1
s(g13818
I42
g13819
Vinsert
p73346
I70
VEnhancedForStatement
p73347
tp73348
I4
s(g36486
I42
g36487
Vinsert
p73349
I45
VStringLiteral: "http://www.baidu.com/"
p73350
tp73351
I1
s(g4040
I42
g4041
Vinsert
p73352
I42
VSimpleName: SQLParameter
p73353
tp73354
I1
s(g52712
I42
g52713
Vinsert
p73355
I45
VStringLiteral: "  END LOOP;\u005cn"
p73356
tp73357
I1
s(g19139
I42
g19140
Vinsert
p73358
I42
VSimpleName: executeErrorCount
p73359
tp73360
I1
s(g8438
I42
g8439
Vinsert
p73361
I42
VSimpleName: partitions
p73362
tp73363
I1
s(g18445
I42
g18446
Vinsert
p73364
I36
VParenthesizedExpression
p73365
tp73366
I1
s(Vinsert
p73367
I42
VSimpleName: assertFalse
p73368
Vinsert
p73369
I45
VStringLiteral: "SELECT c from sbtest where id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0 or id=0"
p73370
tp73371
I1
s(g7893
I42
g7894
Vinsert
p73372
I42
VSimpleName: property
p73373
tp73374
I8
s(g14517
I42
g14518
Vinsert
p73375
I42
VSimpleName: element
p73376
tp73377
I1
s(g517
I42
g518
Vinsert
p73378
I25
VIfStatement
p73379
tp73380
I1
s(g7702
I42
g7703
Vinsert
p73381
I43
VSimpleType: SQLAlterTableAddPrimaryKey
p73382
tp73383
I1
s(g15263
I42
g15264
Vinsert
p73384
I43
VSimpleType: JdbcSqlStat
p73385
tp73386
I2
s(Vinsert
p73387
I42
VSimpleName: expr
p73388
Vinsert
p73389
I42
VSimpleName: exprB
p73390
tp73391
I2
s(g8113
I42
g8114
Vinsert
p73392
I60
VVariableDeclarationStatement
p73393
tp73394
I4
s(g22603
I42
g22604
Vinsert
p73395
I42
VSimpleName: alias
p73396
tp73397
I1
s(g3218
I42
g3219
Vinsert
p73398
I45
VStringLiteral: "null"
p73399
tp73400
I1
s(g16723
I42
g16724
Vinsert
p73401
I40
VQualifiedName: Token.ROW
p73402
tp73403
I1
s(g59334
I42
g59335
Vinsert
p73404
I42
VSimpleName: statVisitor
p73405
tp73406
I3
s(g11991
I42
g11992
Vinsert
p73407
I14
VClassInstanceCreation
p73408
tp73409
I9
s(g5954
I42
g5955
Vinsert
p73410
I42
VSimpleName: stmt
p73411
tp73412
I9
s(g36179
I42
g36180
Vinsert
p73413
I32
VMethodInvocation
p73414
tp73415
I4
s(g29604
I42
g29605
Vinsert
p73416
I27
VInfixExpression: -
p73417
tp73418
I1
s(g4490
I42
g4491
Vinsert
p73419
I14
VClassInstanceCreation
p73420
tp73421
I4
s(g6089
I42
g6090
Vinsert
p73422
I40
VQualifiedName: Statement.NO_GENERATED_KEYS
p73423
tp73424
I1
s(g22782
I42
g22783
Vinsert
p73425
I32
VMethodInvocation
p73426
tp73427
I3
s(Vinsert
p73428
I42
VSimpleName: visit
p73429
Vinsert
p73430
I42
VSimpleName: primaryKey
p73431
tp73432
I1
s(g7450
I42
g7451
Vinsert
p73433
I43
VSimpleType: TableColumn
p73434
tp73435
I1
s(g7751
I42
g7752
Vinsert
p73436
I43
VSimpleType: DruidDataSourceFactory
p73437
tp73438
I2
s(g28221
I42
g28222
Vinsert
p73439
I42
VSimpleName: conn
p73440
tp73441
I1
s(g4134
I42
g4135
Vinsert
p73442
I43
VSimpleType: Enumeration
p73443
tp73444
I1
s(g17564
I42
g17565
Vinsert
p73445
I42
VSimpleName: symbolTable
p73446
tp73447
I4
s(g1496
I42
g1497
Vinsert
p73448
I45
VStringLiteral: "SELECT * "
p73449
tp73450
I1
s(g5369
I42
g5370
Vinsert
p73451
I42
VSimpleName: UserSpecification
p73452
tp73453
I1
s(g72882
I42
g72883
Vinsert
p73454
I42
VSimpleName: exprParser
p73455
tp73456
I1
s(g11124
I42
g11125
Vinsert
p73457
I21
VExpressionStatement
p73458
tp73459
I1
s(g11983
I42
g11984
Vinsert
p73460
I42
VSimpleName: SQLStatement
p73461
tp73462
I10
s(g2982
I42
g2983
Vinsert
p73463
I8
VBlock
p73464
tp73465
I1
s(g14891
I42
g14892
Vinsert
p73466
I59
VVariableDeclarationFragment
p73467
tp73468
I4
s(g35631
I42
g35632
Vinsert
p73469
I27
VInfixExpression: +
p73470
tp73471
I3
s(g40651
I42
g40652
Vinsert
p73472
I42
VSimpleName: mockConn
p73473
tp73474
I1
s(g4620
I42
g4621
Vinsert
p73475
I42
VSimpleName: expr
p73476
tp73477
I1
s(g21778
I42
g21779
Vinsert
p73478
I42
VSimpleName: setCollectPeriodSeconds
p73479
tp73480
I1
s(g11654
I42
g11655
Vinsert
p73481
I45
VStringLiteral: " on update "
p73482
tp73483
I1
s(g10824
I42
g10825
Vinsert
p73484
I45
VStringLiteral: "jdbc:druid-hbase:"
p73485
tp73486
I1
s(g11667
I42
g11668
Vinsert
p73487
I45
VStringLiteral: "ConnectionCount_Alive_3_more_Day"
p73488
tp73489
I1
s(g2910
I42
g2911
Vinsert
p73490
I31
VMethodDeclaration
p73491
tp73492
I7
s(g39070
I42
g39071
Vinsert
p73493
I40
VQualifiedName: AggregateType.Sum
p73494
tp73495
I4
s(g19010
I42
g19011
Vinsert
p73496
I42
VSimpleName: isDefaultAutoCommit
p73497
tp73498
I1
s(g10953
I42
g10954
Vinsert
p73499
I42
VSimpleName: SQLParserUtils
p73500
tp73501
I1
s(g33656
I42
g33657
Vinsert
p73502
I42
VSimpleName: visitor
p73503
tp73504
I44
s(g9639
I42
g9640
Vinsert
p73505
I45
VStringLiteral: "\u005ct\u005ctDBMS_OUTPUT.PUT_LINE(SQLERRM);\u005cn"
p73506
tp73507
I1
s(g19736
I42
g19737
Vinsert
p73508
I42
VSimpleName: conn
p73509
tp73510
I2
s(g33739
I42
g33740
Vinsert
p73511
I25
VIfStatement
p73512
tp73513
I1
s(g226
I42
g227
Vinsert
p73514
I42
VSimpleName: updateDataCount_10_100
p73515
tp73516
I1
s(g7927
I42
g7928
Vinsert
p73517
I42
VSimpleName: accept
p73518
tp73519
I2
s(g26581
I42
g26582
Vinsert
p73520
I42
VSimpleName: SQLAlterViewStatement
p73521
tp73522
I1
s(g4941
I42
g4942
Vinsert
p73523
I42
VSimpleName: e
p73524
tp73525
I1
s(g13201
I42
g13202
Vinsert
p73526
I42
VSimpleName: beginExpr
p73527
tp73528
I1
s(g2359
I42
g2360
Vinsert
p73529
I83
VModifier: public
p73530
tp73531
I1
s(g29858
I42
g29859
Vinsert
p73532
I42
VSimpleName: WallTableStat
p73533
tp73534
I2
s(g1647
I42
g1648
Vinsert
p73535
I42
VSimpleName: vms
p73536
tp73537
I1
s(g15894
I42
g15895
Vinsert
p73538
I40
VQualifiedName: Token.SAVEPOINT
p73539
tp73540
I1
s(g3083
I42
g3084
Vinsert
p73541
I45
VStringLiteral: "SET autocommit=1"
p73542
tp73543
I1
s(g7822
I42
g7823
Vinsert
p73544
I42
VSimpleName: exprList
p73545
tp73546
I1
s(g55772
I42
g55773
Vinsert
p73547
I42
VSimpleName: Assert
p73548
tp73549
I6
s(g46717
I42
g46718
Vinsert
p73550
I37
VPostfixExpression: ++
p73551
tp73552
I1
s(g11484
I42
g11485
Vinsert
p73553
I21
VExpressionStatement
p73554
tp73555
I4
s(g4814
I42
g4815
Vinsert
p73556
I43
VSimpleType: SQLIdentifierExpr
p73557
tp73558
I2
s(g6717
I42
g6718
Vinsert
p73559
I42
VSimpleName: Exception
p73560
tp73561
I6
s(g6893
I42
g6894
Vinsert
p73562
I42
VSimpleName: setBitwise
p73563
tp73564
I1
s(g8716
I42
g8717
Vinsert
p73565
I42
VSimpleName: histogram_100_1000
p73566
tp73567
I1
s(g39729
I42
g39730
Vinsert
p73568
I42
VSimpleName: insertStmt
p73569
tp73570
I28
s(g36895
I42
g36896
Vinsert
p73571
I42
VSimpleName: name
p73572
tp73573
I5
s(Vinsert
p73574
I42
VSimpleName: add
p73575
Vinsert
p73576
I42
VSimpleName: table
p73577
tp73578
I2
s(g46203
I42
g46204
Vinsert
p73579
I42
VSimpleName: tenantTablePattern
p73580
tp73581
I3
s(g16080
I42
g16081
Vinsert
p73582
I27
VInfixExpression: +
p73583
tp73584
I3
s(g32589
I42
g32590
Vinsert
p73585
I40
VQualifiedName: SQLIfStatement.ElseIf
p73586
tp73587
I1
s(g1370
I42
g1371
Vinsert
p73588
I42
VSimpleName: stackTrace
p73589
tp73590
I1
s(g57201
I42
g57202
Vinsert
p73591
I27
VInfixExpression: +
p73592
tp73593
I3
s(g29966
I42
g29967
Vinsert
p73594
I40
VQualifiedName: Token.COMMA
p73595
tp73596
I2
s(g1365
I42
g1366
Vinsert
p73597
I42
VSimpleName: configLoader
p73598
tp73599
I1
s(g7031
I42
g7032
Vinsert
p73600
I22
VFieldAccess
p73601
tp73602
I1
s(g3383
I42
g3384
Vinsert
p73603
I42
VSimpleName: getClass
p73604
tp73605
I1
s(Vinsert
p73606
I42
VSimpleName: getText
p73607
Vinsert
p73608
I42
VSimpleName: item
p73609
tp73610
I2
s(g59152
I42
g59153
Vinsert
p73611
I45
VStringLiteral: "ascii"
p73612
tp73613
I1
s(g49245
I42
g49246
Vinsert
p73614
I42
VSimpleName: assign
p73615
tp73616
I1
s(g7131
I42
g7132
Vinsert
p73617
I60
VVariableDeclarationStatement
p73618
tp73619
I2
s(g13559
I42
g13560
Vinsert
p73620
I43
VSimpleType: Object
p73621
tp73622
I5
s(g1579
I42
g1580
Vinsert
p73623
I42
VSimpleName: names
p73624
tp73625
I2
s(g11072
I42
g11073
Vinsert
p73626
I34
VNumberLiteral: 1000
p73627
tp73628
I2
s(g21585
I42
g21586
Vinsert
p73629
I21
VExpressionStatement
p73630
tp73631
I25
s(g2765
I42
g2766
Vinsert
p73632
I85
VDimension
p73633
tp73634
I3
s(g7787
I42
g7788
Vinsert
p73635
I8
VBlock
p73636
tp73637
I2
s(g8238
I42
g8239
Vinsert
p73638
I42
VSimpleName: Exception
p73639
tp73640
I2
s(g8298
I42
g8299
Vinsert
p73641
I25
VIfStatement
p73642
tp73643
I32
s(g11464
I42
g11465
Vinsert
p73644
I42
VSimpleName: JLabel
p73645
tp73646
I2
s(g2707
I42
g2708
Vinsert
p73647
I42
VSimpleName: druidDataSourceStatManagerClass
p73648
tp73649
I1
s(g13239
I42
g13240
Vinsert
p73650
I43
VSimpleType: JdbcDataSourceStat
p73651
tp73652
I2
s(g1360
I42
g1361
Vinsert
p73653
I39
VPrimitiveType: char
p73654
tp73655
I15
s(g7184
I42
g7185
Vinsert
p73656
I14
VClassInstanceCreation
p73657
tp73658
I28
s(g35605
I42
g35606
Vinsert
p73659
I42
VSimpleName: setTable
p73660
tp73661
I2
s(g5913
I42
g5914
Vinsert
p73662
I42
VSimpleName: dropIndexCount
p73663
tp73664
I2
s(g3893
I42
g3894
Vinsert
p73665
I42
VSimpleName: ignore
p73666
tp73667
I1
s(g26722
I42
g26723
Vinsert
p73668
I42
VSimpleName: assertEquals
p73669
tp73670
I1
s(g14187
I42
g14188
Vinsert
p73671
I42
VSimpleName: getInfoCount
p73672
tp73673
I1
s(g7275
I42
g7276
Vinsert
p73674
I31
VMethodDeclaration
p73675
tp73676
I1
s(Vinsert
p73677
I42
VSimpleName: nextToken
p73678
Vinsert
p73679
I42
VSimpleName: setName
p73680
tp73681
I3
s(Vinsert
p73682
I42
VSimpleName: setParent
p73683
Vinsert
p73684
I42
VSimpleName: sqlExpr
p73685
tp73686
I3
s(g6791
I42
g6792
Vinsert
p73687
I42
VSimpleName: assertEquals
p73688
tp73689
I3
s(g22546
I42
g22547
Vinsert
p73690
I43
VSimpleType: SQLExprTableSource
p73691
tp73692
I1
s(g4709
I42
g4710
Vinsert
p73693
I9
VBooleanLiteral: true
p73694
tp73695
I3
s(g21084
I42
g21085
Vinsert
p73696
I44
VSingleVariableDeclaration
p73697
tp73698
I1
s(g12443
I42
g12444
Vinsert
p73699
I42
VSimpleName: using
p73700
tp73701
I3
s(g2130
I42
g2131
Vinsert
p73702
I43
VSimpleType: SQLException
p73703
tp73704
I1
s(g5282
I42
g5283
Vinsert
p73705
I45
VStringLiteral: "DELAY"
p73706
tp73707
I1
s(g10433
I42
g10434
Vinsert
p73708
I42
VSimpleName: entryKey
p73709
tp73710
I1
s(g7532
I42
g7533
Vinsert
p73711
I59
VVariableDeclarationFragment
p73712
tp73713
I1
s(g17628
I42
g17629
Vinsert
p73714
I28
VInitializer
p73715
tp73716
I1
s(g33722
I42
g33723
Vinsert
p73717
I27
VInfixExpression: *
p73718
tp73719
I1
s(g43716
I42
g43717
Vinsert
p73720
I42
VSimpleName: toSQLString
p73721
tp73722
I4
s(g9827
I42
g9828
Vinsert
p73723
I83
VModifier: public
p73724
tp73725
I1
s(g5882
I42
g5883
Vinsert
p73726
I32
VMethodInvocation
p73727
tp73728
I2
s(g1231
I42
g1232
Vinsert
p73729
I42
VSimpleName: JdbcUtils
p73730
tp73731
I1
s(g6338
I42
g6339
Vinsert
p73732
I42
VSimpleName: String
p73733
tp73734
I1
s(g63675
I42
g63676
Vinsert
p73735
I42
VSimpleName: print0
p73736
tp73737
I1
s(g434
I42
g435
Vinsert
p73738
I42
VSimpleName: limitSql
p73739
tp73740
I2
s(g5859
I42
g5860
Vinsert
p73741
I7
VAssignment: =
p73742
tp73743
I1
s(g35307
I42
g35308
Vinsert
p73744
I22
VFieldAccess
p73745
tp73746
I1
s(g1135
I42
g1136
Vinsert
p73747
I43
VSimpleType: ProfileEntryReqStat
p73748
tp73749
I1
s(g13061
I42
g13062
Vinsert
p73750
I42
VSimpleName: String
p73751
tp73752
I4
s(g3238
I42
g3239
Vinsert
p73753
I45
VStringLiteral: "fields : "
p73754
tp73755
I3
s(g28278
I42
g28279
Vinsert
p73756
I40
VQualifiedName: lexer.token
p73757
tp73758
I1
s(g8254
I42
g8255
Vinsert
p73759
I45
VStringLiteral: "\u005cn\u005ctPARTITION p0 VALUES LESS THAN (1990),"
p73760
tp73761
I1
s(g44768
I42
g44769
Vinsert
p73762
I42
VSimpleName: offset
p73763
tp73764
I1
s(g9539
I42
g9540
Vinsert
p73765
I42
VSimpleName: SQLSubqueryTableSource
p73766
tp73767
I11
s(Vinsert
p73768
I42
VSimpleName: assertEquals
p73769
Vinsert
p73770
I45
VStringLiteral: "\u005cnWHERE (c1, c2, c3) IN ((1, 2, 3), (4, 5, 6))"
p73771
tp73772
I1
s(g6534
I42
g6535
Vinsert
p73773
I42
VSimpleName: updateCountMax
p73774
tp73775
I2
s(g24012
I42
g24013
Vinsert
p73776
I42
VSimpleName: error
p73777
tp73778
I9
s(g1052
I42
g1053
Vinsert
p73779
I42
VSimpleName: k1
p73780
tp73781
I1
s(g13973
I42
g13974
Vinsert
p73782
I21
VExpressionStatement
p73783
tp73784
I2
s(g39961
I42
g39962
Vinsert
p73785
I42
VSimpleName: error
p73786
tp73787
I1
s(Vinsert
p73788
I42
VSimpleName: endVisit
p73789
Vinsert
p73790
I42
VSimpleName: groupBy
p73791
tp73792
I3
s(g33917
I42
g33918
Vinsert
p73793
I21
VExpressionStatement
p73794
tp73795
I21
s(g1002
I42
g1003
Vinsert
p73796
I43
VSimpleType: WallSqlFunctionStat
p73797
tp73798
I1
s(g60283
I42
g60284
Vinsert
p73799
I45
VStringLiteral: "select upper(*) from aa order by now()"
p73800
tp73801
I1
s(g8833
I42
g8834
Vinsert
p73802
I42
VSimpleName: text
p73803
tp73804
I5
s(g20439
I42
g20440
Vinsert
p73805
I24
VForStatement
p73806
tp73807
I1
s(g1165
I42
g1166
Vinsert
p73808
I42
VSimpleName: OracleSelectTableReference
p73809
tp73810
I1
s(g5831
I42
g5832
Vinsert
p73811
I32
VMethodInvocation
p73812
tp73813
I1
s(g27974
I42
g27975
Vinsert
p73814
I42
VSimpleName: getSelectList
p73815
tp73816
I1
s(g8937
I42
g8938
Vinsert
p73817
I45
VStringLiteral: "WHERE id = 3"
p73818
tp73819
I1
s(g9647
I42
g9648
Vinsert
p73820
I42
VSimpleName: parseAlterTableDropPartition
p73821
tp73822
I2
s(g23603
I42
g23604
Vinsert
p73823
I32
VMethodInvocation
p73824
tp73825
I5
s(g15255
I42
g15256
Vinsert
p73826
I42
VSimpleName: set
p73827
tp73828
I1
s(g2193
I42
g2194
Vinsert
p73829
I8
VBlock
p73830
tp73831
I6
s(g24669
I42
g24670
Vinsert
p73832
I42
VSimpleName: passwordCallbackClassName
p73833
tp73834
I1
s(g28138
I42
g28139
Vinsert
p73835
I42
VSimpleName: MySqlIgnoreIndexHint
p73836
tp73837
I2
s(g10493
I42
g10494
Vinsert
p73838
I8
VBlock
p73839
tp73840
I1
s(g1790
I42
g1791
Vinsert
p73841
I42
VSimpleName: rs
p73842
tp73843
I2
s(g2824
I42
g2825
Vinsert
p73844
I42
VSimpleName: Function
p73845
tp73846
I5
s(g7787
I42
g7788
Vinsert
p73847
I42
VSimpleName: x
p73848
tp73849
I3
s(Vinsert
p73850
I42
VSimpleName: reset
p73851
Vinsert
p73852
I43
VSimpleType: String
p73853
tp73854
I1
s(g10757
I42
g10758
Vinsert
p73855
I42
VSimpleName: getAbsolutePath
p73856
tp73857
I2
s(g45913
I42
g45914
Vinsert
p73858
I40
VQualifiedName: Token.ORDER
p73859
tp73860
I1
s(g6298
I42
g6299
Vinsert
p73861
I42
VSimpleName: DataSourceHolder
p73862
tp73863
I3
s(g9838
I42
g9839
Vinsert
p73864
I8
VBlock
p73865
tp73866
I1
s(g55281
I42
g55282
Vinsert
p73867
I42
VSimpleName: violations
p73868
tp73869
I2
s(g32508
I42
g32509
Vinsert
p73870
I45
VStringLiteral: "WAIT"
p73871
tp73872
I1
s(g2992
I42
g2993
Vinsert
p73873
I43
VSimpleType: List
p73874
tp73875
I3
s(g15029
I42
g15030
Vinsert
p73876
I60
VVariableDeclarationStatement
p73877
tp73878
I1
s(g4755
I42
g4756
Vinsert
p73879
I42
VSimpleName: RuntimeException
p73880
tp73881
I1
s(g2069
I42
g2070
Vinsert
p73882
I27
VInfixExpression: !=
p73883
tp73884
I1
s(g14295
I42
g14296
Vinsert
p73885
I42
VSimpleName: lexer
p73886
tp73887
I1
s(g10513
I42
g10514
Vinsert
p73888
I44
VSingleVariableDeclaration
p73889
tp73890
I5
s(g9259
I42
g9260
Vinsert
p73891
I76
VWildcardType: ?
p73892
tp73893
I1
s(g12833
I42
g12834
Vinsert
p73894
I45
VStringLiteral: "privateKey"
p73895
tp73896
I1
s(g25556
I42
g25557
Vinsert
p73897
I42
VSimpleName: connection_getMetaData
p73898
tp73899
I1
s(g35248
I42
g35249
Vinsert
p73900
I42
VSimpleName: SQLPartitionBy
p73901
tp73902
I1
s(g36992
I42
g36993
Vinsert
p73903
I42
VSimpleName: x
p73904
tp73905
I2
s(g8929
I42
g8930
Vinsert
p73906
I43
VSimpleType: WebRequestStat
p73907
tp73908
I1
s(g17512
I42
g17513
Vinsert
p73909
I42
VSimpleName: Override
p73910
tp73911
I1
s(g16046
I42
g16047
Vinsert
p73912
I42
VSimpleName: getSqlList
p73913
tp73914
I1
s(g33839
I42
g33840
Vinsert
p73915
I42
VSimpleName: getValues
p73916
tp73917
I1
s(g276
I42
g277
Vinsert
p73918
I42
VSimpleName: String
p73919
tp73920
I2
s(g33079
I42
g33080
Vinsert
p73921
I42
VSimpleName: sharePreparedStatements
p73922
tp73923
I2
s(g13303
I42
g13304
Vinsert
p73924
I42
VSimpleName: getNames
p73925
tp73926
I1
s(g25573
I42
g25574
Vinsert
p73927
I43
VSimpleType: String
p73928
tp73929
I2
s(g57341
I42
g57342
Vinsert
p73930
I83
VModifier: public
p73931
tp73932
I2
s(g24641
I42
g24642
Vinsert
p73933
I27
VInfixExpression: !=
p73934
tp73935
I1
s(g22647
I42
g22648
Vinsert
p73936
I45
VStringLiteral: "NOLOGGING\u005cn"
p73937
tp73938
I3
s(g19686
I42
g19687
Vinsert
p73939
I43
VSimpleType: Log
p73940
tp73941
I3
s(g16208
I42
g16209
Vinsert
p73942
I9
VBooleanLiteral: true
p73943
tp73944
I1
s(g7206
I42
g7207
Vinsert
p73945
I42
VSimpleName: StatViewServlet
p73946
tp73947
I1
s(g21892
I42
g21893
Vinsert
p73948
I42
VSimpleName: rs
p73949
tp73950
I2
s(g37973
I42
g37974
Vinsert
p73951
I42
VSimpleName: List
p73952
tp73953
I1
s(g2079
I42
g2080
Vinsert
p73954
I42
VSimpleName: statement
p73955
tp73956
I1
s(g13228
I42
g13229
Vinsert
p73957
I42
VSimpleName: output
p73958
tp73959
I2
s(g4217
I42
g4218
Vinsert
p73960
I43
VSimpleType: SQLExpr
p73961
tp73962
I6
s(g10626
I42
g10627
Vinsert
p73963
I32
VMethodInvocation
p73964
tp73965
I9
s(g10618
I42
g10619
Vinsert
p73966
I45
VStringLiteral: "perPageCount"
p73967
tp73968
I1
s(g50053
I42
g50054
Vinsert
p73969
I40
VQualifiedName: Token.HINT
p73970
tp73971
I1
s(g5954
I42
g5955
Vinsert
p73972
I42
VSimpleName: setDataSource
p73973
tp73974
I3
s(g627
I42
g628
Vinsert
p73975
I8
VBlock
p73976
tp73977
I24
s(Vinsert
p73978
I42
VSimpleName: assertTrue
p73979
Vinsert
p73980
I42
VSimpleName: MySqlWallTest13
p73981
tp73982
I1
s(g12480
I42
g12481
Vinsert
p73983
I27
VInfixExpression: ==
p73984
tp73985
I1
s(g9778
I42
g9779
Vinsert
p73986
I21
VExpressionStatement
p73987
tp73988
I3
s(g11991
I42
g11992
Vinsert
p73989
I52
VThisExpression
p73990
tp73991
I10
s(g57201
I42
g57202
Vinsert
p73992
I40
VQualifiedName: System.out
p73993
tp73994
I2
s(g55473
I42
g55474
Vinsert
p73995
I43
VSimpleType: SQLCaseExpr
p73996
tp73997
I1
s(g733
I42
g734
Vinsert
p73998
I32
VMethodInvocation
p73999
tp74000
I10
s(Vinsert
p74001
I42
VSimpleName: assertEquals
p74002
Vinsert
p74003
I45
VStringLiteral: "select * from t1 where f1 in ('1', '2', '3', '4', '5', '6', '7', '8', '9', '10')"
p74004
tp74005
I1
s(g13166
I42
g13167
Vinsert
p74006
I42
VSimpleName: x
p74007
tp74008
I2
s(g7655
I42
g7656
Vinsert
p74009
I52
VThisExpression
p74010
tp74011
I1
s(g5877
I42
g5878
Vinsert
p74012
I42
VSimpleName: properties
p74013
tp74014
I1
s(g17240
I42
g17241
Vinsert
p74015
I43
VSimpleType: SQLSelectQueryBlock
p74016
tp74017
I2
s(g41927
I42
g41928
Vinsert
p74018
I42
VSimpleName: identifierEquals
p74019
tp74020
I1
s(g652
I42
g653
Vinsert
p74021
I42
VSimpleName: Object
p74022
tp74023
I1
s(Vinsert
p74024
I42
VSimpleName: assertTrue
p74025
Vinsert
p74026
I42
VSimpleName: MySqlWallTest23
p74027
tp74028
I1
s(g7665
I42
g7666
Vinsert
p74029
I39
VPrimitiveType: byte
p74030
tp74031
I1
s(g44653
I42
g44654
Vinsert
p74032
I43
VSimpleType: MySqlShowTableStatusStatement
p74033
tp74034
I2
s(g16993
I42
g16994
Vinsert
p74035
I42
VSimpleName: MySqlShowProfileStatement
p74036
tp74037
I2
s(g27538
I42
g27539
Vinsert
p74038
I43
VSimpleType: SQLPartition
p74039
tp74040
I4
s(g2079
I42
g2080
Vinsert
p74041
I42
VSimpleName: SQLException
p74042
tp74043
I3
s(g25293
I42
g25294
Vinsert
p74044
I42
VSimpleName: test_single_0
p74045
tp74046
I1
s(g24125
I42
g24126
Vinsert
p74047
I43
VSimpleType: ClobProxyImpl
p74048
tp74049
I1
s(g17007
I42
g17008
Vinsert
p74050
I43
VSimpleType: SQLException
p74051
tp74052
I2
s(g10942
I42
g10943
Vinsert
p74053
I42
VSimpleName: x
p74054
tp74055
I2
s(g31798
I42
g31799
Vinsert
p74056
I41
VReturnStatement
p74057
tp74058
I9
s(g4258
I42
g4259
Vinsert
p74059
I8
VBlock
p74060
tp74061
I1
s(g4303
I42
g4304
Vinsert
p74062
I45
VStringLiteral: "\u005ct\u005ctELSE IF self.currentstr IS NULL THEN\u005cn"
p74063
tp74064
I1
s(g1007
I42
g1008
Vinsert
p74065
I43
VSimpleType: SQLColumnDefinition
p74066
tp74067
I1
s(Vinsert
p74068
I42
VSimpleName: createExprParser
p74069
Vinsert
p74070
I45
VStringLiteral: "varchar2(10000)"
p74071
tp74072
I1
s(g49981
I42
g49982
Vinsert
p74073
I42
VSimpleName: dataTypeName
p74074
tp74075
I3
s(g2992
I42
g2993
Vinsert
p74076
I33
VNullLiteral
p74077
tp74078
I6
s(g6750
I42
g6751
Vinsert
p74079
I34
VNumberLiteral: 0
p74080
tp74081
I6
s(g22774
I42
g22775
Vinsert
p74082
I42
VSimpleName: run
p74083
tp74084
I1
s(g9332
I42
g9333
Vinsert
p74085
I60
VVariableDeclarationStatement
p74086
tp74087
I4
s(g13891
I42
g13892
Vinsert
p74088
I40
VQualifiedName: s.next
p74089
tp74090
I1
s(g5777
I42
g5778
Vinsert
p74091
I42
VSimpleName: setTransactionName
p74092
tp74093
I1
s(g4088
I42
g4089
Vinsert
p74094
I59
VVariableDeclarationFragment
p74095
tp74096
I1
s(g1958
I42
g1959
Vinsert
p74097
I45
VStringLiteral: "\u005ct\u005ct)\u005cn"
p74098
tp74099
I7
s(g19315
I42
g19316
Vinsert
p74100
I32
VMethodInvocation
p74101
tp74102
I10
s(g32738
I42
g32739
Vinsert
p74103
I42
VSimpleName: listExpr
p74104
tp74105
I1
s(g2870
I42
g2871
Vinsert
p74106
I42
VSimpleName: stmt
p74107
tp74108
I3
s(g30398
I42
g30399
Vinsert
p74109
I42
VSimpleName: column
p74110
tp74111
I2
s(g20364
I42
g20365
Vinsert
p74112
I42
VSimpleName: addViolationEffectRowCount
p74113
tp74114
I3
s(g25328
I42
g25329
Vinsert
p74115
I42
VSimpleName: T
p74116
tp74117
I1
s(g522
I42
g523
Vinsert
p74118
I25
VIfStatement
p74119
tp74120
I2
s(g1627
I42
g1628
Vinsert
p74121
I42
VSimpleName: format
p74122
tp74123
I1
s(g37815
I42
g37816
Vinsert
p74124
I11
VCastExpression
p74125
tp74126
I1
s(g106
I42
g107
Vinsert
p74127
I27
VInfixExpression: !=
p74128
tp74129
I1
s(g26818
I42
g26819
Vinsert
p74130
I43
VSimpleType: String
p74131
tp74132
I1
s(g73098
I42
g73099
Vinsert
p74133
I83
VModifier: static
p74134
tp74135
I1
s(g1334
I42
g1335
Vinsert
p74136
I45
VStringLiteral: "\u005cn\u005ctSTART_ACT_ID_ NVARCHAR2(255),"
p74137
tp74138
I2
s(g8588
I42
g8589
Vinsert
p74139
I43
VSimpleType: WallProvider
p74140
tp74141
I70
s(g14457
I42
g14458
Vinsert
p74142
I27
VInfixExpression: >=
p74143
tp74144
I1
s(g15602
I42
g15603
Vinsert
p74145
I42
VSimpleName: setUser
p74146
tp74147
I1
s(g9838
I42
g9839
Vinsert
p74148
I27
VInfixExpression: !=
p74149
tp74150
I1
s(g8329
I42
g8330
Vinsert
p74151
I40
VQualifiedName: Token.COLUMN
p74152
tp74153
I1
s(g15108
I42
g15109
Vinsert
p74154
I42
VSimpleName: getConnection
p74155
tp74156
I1
s(g23689
I42
g23690
Vinsert
p74157
I42
VSimpleName: Exception
p74158
tp74159
I3
s(g11529
I42
g11530
Vinsert
p74160
I42
VSimpleName: countDown
p74161
tp74162
I1
s(g3821
I42
g3822
Vinsert
p74163
I42
VSimpleName: visitor
p74164
tp74165
I5
s(g3760
I42
g3761
Vinsert
p74166
I45
VStringLiteral: "ONLY"
p74167
tp74168
I1
s(g30341
I42
g30342
Vinsert
p74169
I33
VNullLiteral
p74170
tp74171
I2
s(g47181
I42
g47182
Vinsert
p74172
I22
VFieldAccess
p74173
tp74174
I2
s(g15392
I42
g15393
Vinsert
p74175
I42
VSimpleName: SQLSetStatement
p74176
tp74177
I2
s(g1466
I42
g1467
Vinsert
p74178
I42
VSimpleName: setOffset
p74179
tp74180
I1
s(g1105
I42
g1106
Vinsert
p74181
I42
VSimpleName: System
p74182
tp74183
I22
s(Vinsert
p74184
I42
VSimpleName: token
p74185
Vinsert
p74186
I42
VSimpleName: parseShow
p74187
tp74188
I1
s(g20500
I42
g20501
Vinsert
p74189
I34
VNumberLiteral: 1
p74190
tp74191
I1
s(g14680
I42
g14681
Vinsert
p74192
I42
VSimpleName: JdbcStatManager
p74193
tp74194
I1
s(g251
I42
g252
Vinsert
p74195
I42
VSimpleName: parameterName
p74196
tp74197
I1
s(g7288
I42
g7289
Vinsert
p74198
I42
VSimpleName: sql
p74199
tp74200
I1
s(g4313
I42
g4314
Vinsert
p74201
I8
VBlock
p74202
tp74203
I1
s(g3417
I42
g3418
Vinsert
p74204
I42
VSimpleName: bracketIndex
p74205
tp74206
I1
s(g3462
I42
g3463
Vinsert
p74207
I32
VMethodInvocation
p74208
tp74209
I1
s(g12024
I42
g12025
Vinsert
p74210
I43
VSimpleType: ValuesClause
p74211
tp74212
I1
s(Vinsert
p74213
I42
VSimpleName: equals
p74214
Vinsert
p74215
I40
VQualifiedName: other.left
p74216
tp74217
I1
s(g40584
I42
g40585
Vinsert
p74218
I43
VSimpleType: SQLBinaryExpr
p74219
tp74220
I1
s(g6212
I42
g6213
Vinsert
p74221
I32
VMethodInvocation
p74222
tp74223
I12
s(g2852
I42
g2853
Vinsert
p74224
I78
VMarkerAnnotation
p74225
tp74226
I1
s(g7996
I42
g7997
Vinsert
p74227
I16
VConditionalExpression
p74228
tp74229
I3
s(g6041
I42
g6042
Vinsert
p74230
I42
VSimpleName: config
p74231
tp74232
I10
s(g16525
I42
g16526
Vinsert
p74233
I42
VSimpleName: getMapping
p74234
tp74235
I2
s(g3083
I42
g3084
Vinsert
p74236
I83
VModifier: public
p74237
tp74238
I6
s(g50239
I42
g50240
Vinsert
p74239
I43
VSimpleType: SQLReleaseSavePointStatement
p74240
tp74241
I2
s(Vinsert
p74242
I42
VSimpleName: getConnection
p74243
Vinsert
p74244
I45
VStringLiteral: "select ?"
p74245
tp74246
I3
s(g15448
I42
g15449
Vinsert
p74247
I42
VSimpleName: setInitialSize
p74248
tp74249
I1
s(Vinsert
p74250
I42
VSimpleName: endVisit
p74251
Vinsert
p74252
I42
VSimpleName: columns
p74253
tp74254
I9
s(Vinsert
p74255
I42
VSimpleName: hashCode
p74256
Vinsert
p74257
I42
VSimpleName: operator
p74258
tp74259
I6
s(g17163
I42
g17164
Vinsert
p74260
I39
VPrimitiveType: boolean
p74261
tp74262
I1
s(g35812
I42
g35813
Vinsert
p74263
I42
VSimpleName: parseCreateTable
p74264
tp74265
I32
s(g7206
I42
g7207
Vinsert
p74266
I14
VClassInstanceCreation
p74267
tp74268
I1
s(g5709
I42
g5710
Vinsert
p74269
I42
VSimpleName: j
p74270
tp74271
I1
s(g5661
I42
g5662
Vinsert
p74272
I42
VSimpleName: param
p74273
tp74274
I1
s(g30575
I42
g30576
Vinsert
p74275
I83
VModifier: static
p74276
tp74277
I1
s(g11161
I42
g11162
Vinsert
p74278
I43
VSimpleType: SQLAggregateExpr
p74279
tp74280
I2
s(g9696
I42
g9697
Vinsert
p74281
I42
VSimpleName: getSimpleName
p74282
tp74283
I1
s(g72970
I42
g72971
Vinsert
p74284
I45
VStringLiteral: "public "
p74285
tp74286
I1
s(g866
I42
g867
Vinsert
p74287
I32
VMethodInvocation
p74288
tp74289
I3
s(g30607
I42
g30608
Vinsert
p74290
I45
VStringLiteral: "\u005ctinput varchar2\u005cn"
p74291
tp74292
I1
s(g16375
I42
g16376
Vinsert
p74293
I42
VSimpleName: printAndAccept
p74294
tp74295
I1
s(g3684
I42
g3685
Vinsert
p74296
I45
VStringLiteral: "SELECT `mtk_p_mg`.`id` AS `id`, `mtk_p_mg`.`gmt_create` AS `gmtCreate`, `mtk_p_mg`.`gmt_modified` AS `gmtModified`, `mtk_p_mg`.`target` AS `target`, `mtk_p_mg`.`msg_id` AS `msgId` , `mtk_p_mg`.`uuid` AS `uuid`, `mtk_p_mg`.`app_key` AS `appKey`, `mtk_p_mg`.`utdid` AS `utdid`, `mtk_p_mg`.`digest` AS `digest`, `mtk_p_mg`.`content` AS `content` , `mtk_p_mg`.`user_info` AS `userInfo`, `mtk_p_mg`.`status` AS `status`, `mtk_p_mg`.`mesg_status` AS `mesgStatus`, `mtk_p_mg`.`start_time` AS `startTime`, `mtk_p_mg`.`expired` AS `expired` , `mtk_p_mg`.`online` AS `online`, `mtk_p_mg`.`gmt_commit` AS `gmtCommit`, `mtk_p_mg`.`extra_info` AS `extraInfo`, `mtk_p_mg`.`auto_commit` AS `autoCommit`, `mtk_p_mg`.`task_id` AS `taskId` , `mtk_p_mg`.`msg_type` AS `msgType`, `mtk_p_mg`.`push_user_token` AS `pushUserToken`, `mtk_p_mg`.`tb_app_device_token` AS `tbAppDeviceToken`, `mtk_p_mg`.`sdk_version` AS `sdkVersion`, `mtk_p_mg`.`biz_ext_info` AS `bizExtInfo` FROM"
p74297
tp74298
I1
s(g15359
I42
g15360
Vinsert
p74299
I42
VSimpleName: DruidDataSource
p74300
tp74301
I1
s(g1476
I42
g1477
Vinsert
p74302
I8
VBlock
p74303
tp74304
I3
s(g1705
I42
g1706
Vinsert
p74305
I59
VVariableDeclarationFragment
p74306
tp74307
I4
s(g11706
I42
g11707
Vinsert
p74308
I42
VSimpleName: getMaxWaitThreadCount
p74309
tp74310
I1
s(g30913
I42
g30914
Vinsert
p74311
I45
VStringLiteral: "\u005cn\u005ctdiv_no NUMBER"
p74312
tp74313
I2
s(g22592
I42
g22593
Vinsert
p74314
I42
VSimpleName: OracleCreateTableStatement
p74315
tp74316
I1
s(g10061
I42
g10062
Vinsert
p74317
I33
VNullLiteral
p74318
tp74319
I1
s(g28840
I42
g28841
Vinsert
p74320
I43
VSimpleType: ProfileEntryKey
p74321
tp74322
I1
s(g6005
I42
g6006
Vinsert
p74323
I42
VSimpleName: config
p74324
tp74325
I4
s(g6220
I42
g6221
Vinsert
p74326
I45
VStringLiteral: "\u005cn\u005ctSTORAGE (INITIAL 65536 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)"
p74327
tp74328
I1
s(g7264
I42
g7265
Vinsert
p74329
I9
VBooleanLiteral: false
p74330
tp74331
I1
s(g13171
I42
g13172
Vinsert
p74332
I42
VSimpleName: getTableStat
p74333
tp74334
I1
s(g3233
I42
g3234
Vinsert
p74335
I74
VParameterizedType: ArrayList<Object>
p74336
tp74337
I16
s(g2074
I42
g2075
Vinsert
p74338
I60
VVariableDeclarationStatement
p74339
tp74340
I1
s(g20777
I42
g20778
Vinsert
p74341
I42
VSimpleName: columnName
p74342
tp74343
I1
s(g17718
I42
g17719
Vinsert
p74344
I42
VSimpleName: Exception
p74345
tp74346
I1
s(g66537
I42
g66538
Vinsert
p74347
I45
VStringLiteral: "="
p74348
tp74349
I1
s(g27234
I42
g27235
Vinsert
p74350
I59
VVariableDeclarationFragment
p74351
tp74352
I1
s(g2383
I42
g2384
Vinsert
p74353
I42
VSimpleName: setProperty
p74354
tp74355
I1
s(g12961
I42
g12962
Vinsert
p74356
I42
VSimpleName: beanInfo
p74357
tp74358
I1
s(g14044
I42
g14045
Vinsert
p74359
I45
VStringLiteral: "\u005ctname, \u005cn"
p74360
tp74361
I1
s(g49544
I42
g49545
Vinsert
p74362
I40
VQualifiedName: Token.QUESAMP
p74363
tp74364
I1
s(g6283
I42
g6284
Vinsert
p74365
I42
VSimpleName: getLowerName
p74366
tp74367
I1
s(g22001
I42
g22002
Vinsert
p74368
I9
VBooleanLiteral: true
p74369
tp74370
I1
s(g5434
I42
g5435
Vinsert
p74371
I42
VSimpleName: valueOf
p74372
tp74373
I1
s(g14316
I42
g14317
Vinsert
p74374
I42
VSimpleName: executeType
p74375
tp74376
I2
s(g5128
I42
g5129
Vinsert
p74377
I45
VStringLiteral: "| c_char       | char(10)     | NO   |     | NULL    |       |\u005cn"
p74378
tp74379
I1
s(Vinsert
p74380
I42
VSimpleName: visit
p74381
Vinsert
p74382
I42
VSimpleName: statementList
p74383
tp74384
I3
s(g8752
I42
g8753
Vinsert
p74385
I42
VSimpleName: WebSessionStat
p74386
tp74387
I1
s(g2115
I42
g2116
Vinsert
p74388
I25
VIfStatement
p74389
tp74390
I1
s(g47181
I42
g47182
Vinsert
p74391
I52
VThisExpression
p74392
tp74393
I2
s(g11041
I42
g11042
Vinsert
p74394
I39
VPrimitiveType: char
p74395
tp74396
I1
s(g14790
I42
g14791
Vinsert
p74397
I43
VSimpleType: SQLCaseStatement.Item
p74398
tp74399
I1
s(g13094
I42
g13095
Vinsert
p74400
I2
VArrayAccess
p74401
tp74402
I1
s(g10438
I42
g10439
Vinsert
p74403
I42
VSimpleName: parseStatementList
p74404
tp74405
I1
s(g40026
I42
g40027
Vinsert
p74406
I42
VSimpleName: close
p74407
tp74408
I1
s(g1150
I42
g1151
Vinsert
p74409
I40
VQualifiedName: Token.LITERAL_INT
p74410
tp74411
I1
s(g16099
I42
g16100
Vinsert
p74412
I34
VNumberLiteral: 0
p74413
tp74414
I1
s(g34790
I42
g34791
Vinsert
p74415
I42
VSimpleName: name
p74416
tp74417
I4
s(g51
I42
g52
Vinsert
p74418
I8
VBlock
p74419
tp74420
I2
s(g17235
I42
g17236
Vinsert
p74421
I42
VSimpleName: dbType
p74422
tp74423
I5
s(g2339
I42
g2340
Vinsert
p74424
I8
VBlock
p74425
tp74426
I1
s(g5854
I42
g5855
Vinsert
p74427
I22
VFieldAccess
p74428
tp74429
I2
s(g47129
I42
g47130
Vinsert
p74430
I42
VSimpleName: driverClass
p74431
tp74432
I1
s(g21084
I42
g21085
Vinsert
p74433
I41
VReturnStatement
p74434
tp74435
I1
s(g14535
I42
g14536
Vinsert
p74436
I45
VStringLiteral: "\u005ctFROM tb_002 bdf, tb_003 bs\u005cn"
p74437
tp74438
I1
s(g61656
I42
g61657
Vinsert
p74439
I42
VSimpleName: extra_len
p74440
tp74441
I1
s(g9992
I42
g9993
Vinsert
p74442
I42
VSimpleName: ENGINE
p74443
tp74444
I2
s(g18831
I42
g18832
Vinsert
p74445
I42
VSimpleName: Override
p74446
tp74447
I1
s(g3202
I42
g3203
Vinsert
p74448
I42
VSimpleName: basic
p74449
tp74450
I1
s(g3618
I42
g3619
Vinsert
p74451
I42
VSimpleName: SQLException
p74452
tp74453
I1
s(g12346
I42
g12347
Vinsert
p74454
I21
VExpressionStatement
p74455
tp74456
I1
s(g34122
I42
g34123
Vinsert
p74457
I14
VClassInstanceCreation
p74458
tp74459
I2
s(g21822
I42
g21823
Vinsert
p74460
I45
VStringLiteral: "from acct_user user0_ "
p74461
tp74462
I1
s(g28559
I42
g28560
Vinsert
p74463
I34
VNumberLiteral: 10
p74464
tp74465
I1
s(g17017
I42
g17018
Vinsert
p74466
I42
VSimpleName: Test
p74467
tp74468
I1
s(g30842
I42
g30843
Vinsert
p74469
I42
VSimpleName: propertyExpr
p74470
tp74471
I4
s(g15697
I42
g15698
Vinsert
p74472
I42
VSimpleName: put
p74473
tp74474
I2
s(g18573
I42
g18574
Vinsert
p74475
I21
VExpressionStatement
p74476
tp74477
I2
s(g21155
I42
g21156
Vinsert
p74478
I42
VSimpleName: assertThat
p74479
tp74480
I2
s(g6455
I42
g6456
Vinsert
p74481
I42
VSimpleName: logger
p74482
tp74483
I2
s(g16863
I42
g16864
Vinsert
p74484
I43
VSimpleType: WallProvider
p74485
tp74486
I1
s(g2624
I42
g2625
Vinsert
p74487
I42
VSimpleName: unionWarnnings
p74488
tp74489
I1
s(g24023
I42
g24024
Vinsert
p74490
I13
VCharacterLiteral: ' '
p74491
tp74492
I1
s(g6157
I42
g6158
Vinsert
p74493
I42
VSimpleName: type
p74494
tp74495
I4
s(g56219
I42
g56220
Vinsert
p74496
I45
VStringLiteral: "SET last_name = 'Anderson'\u005cn"
p74497
tp74498
I1
s(g13223
I42
g13224
Vinsert
p74499
I42
VSimpleName: String
p74500
tp74501
I1
s(g537
I42
g538
Vinsert
p74502
I32
VMethodInvocation
p74503
tp74504
I5
s(g23614
I42
g23615
Vinsert
p74505
I42
VSimpleName: toOracleString
p74506
tp74507
I3
s(g44134
I42
g44135
Vinsert
p74508
I42
VSimpleName: println
p74509
tp74510
I2
s(g7937
I42
g7938
Vinsert
p74511
I42
VSimpleName: TeradataOutputVisitor
p74512
tp74513
I1
s(g1953
I42
g1954
Vinsert
p74514
I21
VExpressionStatement
p74515
tp74516
I3
s(g632
I42
g633
Vinsert
p74517
I42
VSimpleName: cal
p74518
tp74519
I1
s(g11732
I42
g11733
Vinsert
p74520
I27
VInfixExpression: <
p74521
tp74522
I1
s(g12786
I42
g12787
Vinsert
p74523
I42
VSimpleName: expr
p74524
tp74525
I1
s(g7522
I42
g7523
Vinsert
p74526
I8
VBlock
p74527
tp74528
I4
s(g36
I42
g37
Vinsert
p74529
I42
VSimpleName: notTarget
p74530
tp74531
I2
s(g7620
I42
g7621
Vinsert
p74532
I45
VStringLiteral: " FOREIGN DATA WRAPPER "
p74533
tp74534
I1
s(g10320
I42
g10321
Vinsert
p74535
I83
VModifier: public
p74536
tp74537
I2
s(g2829
I42
g2830
Vinsert
p74538
I21
VExpressionStatement
p74539
tp74540
I1
s(g23640
I42
g23641
Vinsert
p74541
I32
VMethodInvocation
p74542
tp74543
I9
s(g8810
I42
g8811
Vinsert
p74544
I17
VConstructorInvocation
p74545
tp74546
I1
s(g31513
I42
g31514
Vinsert
p74547
I40
VQualifiedName: x.bracket
p74548
tp74549
I1
s(g226
I42
g227
Vinsert
p74550
I4
VArrayInitializer
p74551
tp74552
I1
s(g23481
I42
g23482
Vinsert
p74553
I21
VExpressionStatement
p74554
tp74555
I3
s(g1785
I42
g1786
Vinsert
p74556
I42
VSimpleName: sqlList
p74557
tp74558
I1
s(g12011
I42
g12012
Vinsert
p74559
I42
VSimpleName: println
p74560
tp74561
I2
s(g7547
I42
g7548
Vinsert
p74562
I45
VStringLiteral: "\u005ctc_timestamp timestamp,\u005cn"
p74563
tp74564
I2
s(g19736
I42
g19737
Vinsert
p74565
I21
VExpressionStatement
p74566
tp74567
I2
s(g22163
I42
g22164
Vinsert
p74568
I40
VQualifiedName: JdbcConstants.ELASTIC_SEARCH
p74569
tp74570
I1
s(g16927
I42
g16928
Vinsert
p74571
I21
VExpressionStatement
p74572
tp74573
I4
s(g26260
I42
g26261
Vinsert
p74574
I8
VBlock
p74575
tp74576
I3
s(g22538
I42
g22539
Vinsert
p74577
I43
VSimpleType: SQLAssignItem
p74578
tp74579
I1
s(g40110
I42
g40111
Vinsert
p74580
I27
VInfixExpression: +
p74581
tp74582
I2
s(g1193
I42
g1194
Vinsert
p74583
I21
VExpressionStatement
p74584
tp74585
I1
s(g3213
I42
g3214
Vinsert
p74586
I27
VInfixExpression: ==
p74587
tp74588
I2
s(g3327
I42
g3328
Vinsert
p74589
I27
VInfixExpression: ==
p74590
tp74591
I1
s(g14402
I42
g14403
Vinsert
p74592
I42
VSimpleName: startTimeMillis
p74593
tp74594
I1
s(g21244
I42
g21245
Vinsert
p74595
I42
VSimpleName: sql
p74596
tp74597
I2
s(g35597
I42
g35598
Vinsert
p74598
I42
VSimpleName: dataSources
p74599
tp74600
I2
s(g7002
I42
g7003
Vinsert
p74601
I42
VSimpleName: JdbcUtils
p74602
tp74603
I2
s(g7612
I42
g7613
Vinsert
p74604
I27
VInfixExpression: !=
p74605
tp74606
I1
s(g2915
I42
g2916
Vinsert
p74607
I45
VStringLiteral: "illegal alias. "
p74608
tp74609
I1
s(g627
I42
g628
Vinsert
p74610
I42
VSimpleName: strVal
p74611
tp74612
I2
s(g12753
I42
g12754
Vinsert
p74613
I42
VSimpleName: eventBody
p74614
tp74615
I1
s(g13032
I42
g13033
Vinsert
p74616
I21
VExpressionStatement
p74617
tp74618
I2
s(g28425
I42
g28426
Vinsert
p74619
I42
VSimpleName: element
p74620
tp74621
I2
s(g2948
I42
g2949
Vinsert
p74622
I42
VSimpleName: getArguments
p74623
tp74624
I1
s(g9873
I42
g9874
Vinsert
p74625
I43
VSimpleType: MockCallableStatement
p74626
tp74627
I1
s(g9006
I42
g9007
Vinsert
p74628
I42
VSimpleName: run
p74629
tp74630
I3
s(g8062
I42
g8063
Vinsert
p74631
I42
VSimpleName: stmt
p74632
tp74633
I1
s(g23113
I42
g23114
Vinsert
p74634
I38
VPrefixExpression: -
p74635
tp74636
I1
s(g20596
I42
g20597
Vinsert
p74637
I42
VSimpleName: stmt
p74638
tp74639
I2
s(g1425
I42
g1426
Vinsert
p74640
I8
VBlock
p74641
tp74642
I1
s(g901
I42
g902
Vinsert
p74643
I7
VAssignment: =
p74644
tp74645
I8
s(g12854
I42
g12855
Vinsert
p74646
I42
VSimpleName: xaConnection
p74647
tp74648
I1
s(g11765
I42
g11766
Vinsert
p74649
I42
VSimpleName: DruidDataSourceStatJNDIStatStrategy
p74650
tp74651
I1
s(g2203
I42
g2204
Vinsert
p74652
I27
VInfixExpression: !=
p74653
tp74654
I1
s(g542
I42
g543
Vinsert
p74655
I45
VStringLiteral: "\u005ct\u005ct'VerifyNick', \u005cn"
p74656
tp74657
I1
s(g71440
I42
g71441
Vinsert
p74658
I42
VSimpleName: getMinIdle
p74659
tp74660
I1
s(g1760
I42
g1761
Vinsert
p74661
I14
VClassInstanceCreation
p74662
tp74663
I1
s(Vinsert
p74664
I42
VSimpleName: visit
p74665
Vinsert
p74666
I42
VSimpleName: statement
p74667
tp74668
I2
s(g25014
I42
g25015
Vinsert
p74669
I45
VStringLiteral: "removeAbandonedTimeout"
p74670
tp74671
I1
s(g23934
I42
g23935
Vinsert
p74672
I32
VMethodInvocation
p74673
tp74674
I9
s(g21020
I42
g21021
Vinsert
p74675
I43
VSimpleType: String
p74676
tp74677
I16
s(g27736
I42
g27737
Vinsert
p74678
I27
VInfixExpression: >
p74679
tp74680
I1
s(g7594
I42
g7595
Vinsert
p74681
I42
VSimpleName: visitor
p74682
tp74683
I2
s(g6737
I42
g6738
Vinsert
p74684
I42
VSimpleName: psql1
p74685
tp74686
I1
s(g47573
I42
g47574
Vinsert
p74687
I14
VClassInstanceCreation
p74688
tp74689
I25
s(g6755
I42
g6756
Vinsert
p74690
I43
VSimpleType: StdScheduler
p74691
tp74692
I1
s(g4134
I42
g4135
Vinsert
p74693
I74
VParameterizedType: Enumeration<?>
p74694
tp74695
I1
s(g12029
I42
g12030
Vinsert
p74696
I44
VSingleVariableDeclaration
p74697
tp74698
I3
s(g12763
I42
g12764
Vinsert
p74699
I45
VStringLiteral: "jdbc:mock:xxx"
p74700
tp74701
I1
s(g11850
I42
g11851
Vinsert
p74702
I42
VSimpleName: pattIdxStart
p74703
tp74704
I1
s(g16192
I42
g16193
Vinsert
p74705
I42
VSimpleName: entrie
p74706
tp74707
I3
s(g35913
I42
g35914
Vinsert
p74708
I42
VSimpleName: setTime
p74709
tp74710
I2
s(g20529
I42
g20530
Vinsert
p74711
I42
VSimpleName: conn
p74712
tp74713
I2
s(g2299
I42
g2300
Vinsert
p74714
I42
VSimpleName: expr
p74715
tp74716
I35
s(g31754
I42
g31755
Vinsert
p74717
I43
VSimpleType: SQLTableElement
p74718
tp74719
I1
s(g1
I42
g2
Vinsert
p74720
I43
VSimpleType: PreparedStatementHolder
p74721
tp74722
I1
s(g23891
I42
g23892
Vinsert
p74723
I45
VStringLiteral: " AND alino = _gbk '2013110900031031001700thfund00163619'"
p74724
tp74725
I1
s(g24278
I42
g24279
Vinsert
p74726
I59
VVariableDeclarationFragment
p74727
tp74728
I6
s(g2359
I42
g2360
Vinsert
p74729
I42
VSimpleName: TabularData
p74730
tp74731
I1
s(g6293
I42
g6294
Vinsert
p74732
I43
VSimpleType: SQLException
p74733
tp74734
I1
s(g11492
I42
g11493
Vinsert
p74735
I32
VMethodInvocation
p74736
tp74737
I3
s(g46741
I42
g46742
Vinsert
p74738
I42
VSimpleName: binaryEpr
p74739
tp74740
I1
s(g12209
I42
g12210
Vinsert
p74741
I74
VParameterizedType: Set<String>
p74742
tp74743
I1
s(g15456
I42
g15457
Vinsert
p74744
I45
VStringLiteral: "jdbc:gbase:"
p74745
tp74746
I1
s(g5419
I42
g5420
Vinsert
p74747
I42
VSimpleName: env
p74748
tp74749
I1
s(g891
I42
g892
Vinsert
p74750
I42
VSimpleName: cstmt
p74751
tp74752
I2
s(g1120
I42
g1121
Vinsert
p74753
I8
VBlock
p74754
tp74755
I2
s(g20548
I42
g20549
Vinsert
p74756
I42
VSimpleName: connImpl
p74757
tp74758
I2
s(Vinsert
p74759
I42
VSimpleName: toMySqlString
p74760
Vinsert
p74761
I45
VStringLiteral: "SELECT s1\u005cnFROM t1\u005cnWHERE s1 IN (SELECT s1\u005cn\u005ctFROM t2)"
p74762
tp74763
I1
s(Vinsert
p74764
I42
VSimpleName: stringVal
p74765
Vinsert
p74766
I42
VSimpleName: mark
p74767
tp74768
I1
s(g17926
I42
g17927
Vinsert
p74769
I42
VSimpleName: from
p74770
tp74771
I1
s(g2702
I42
g2703
Vinsert
p74772
I42
VSimpleName: x
p74773
tp74774
I1
s(g12953
I42
g12954
Vinsert
p74775
I45
VStringLiteral: "REPEATABLE READ"
p74776
tp74777
I1
s(g3793
I42
g3794
Vinsert
p74778
I31
VMethodDeclaration
p74779
tp74780
I1
s(g4775
I42
g4776
Vinsert
p74781
I14
VClassInstanceCreation
p74782
tp74783
I1
s(Vinsert
p74784
I42
VSimpleName: length
p74785
Vinsert
p74786
I42
VSimpleName: entries
p74787
tp74788
I1
s(g9778
I42
g9779
Vinsert
p74789
I42
VSimpleName: add
p74790
tp74791
I1
s(g12397
I42
g12398
Vinsert
p74792
I45
VStringLiteral: "\u005ct\u005ctOR A.DETAILE LIKE ('%' || ? || '%')\u005cn"
p74793
tp74794
I1
s(g16625
I42
g16626
Vinsert
p74795
I42
VSimpleName: Exception
p74796
tp74797
I2
s(g14026
I42
g14027
Vinsert
p74798
I42
VSimpleName: rowCount
p74799
tp74800
I2
s(g10338
I42
g10339
Vinsert
p74801
I43
VSimpleType: SQLIntervalExpr
p74802
tp74803
I1
s(g26608
I42
g26609
Vinsert
p74804
I42
VSimpleName: visit
p74805
tp74806
I1
s(g11973
I42
g11974
Vinsert
p74807
I45
VStringLiteral: " `Extent1`.`UpdateTime`, "
p74808
tp74809
I1
s(g45686
I42
g45687
Vinsert
p74810
I22
VFieldAccess
p74811
tp74812
I3
s(g1589
I42
g1590
Vinsert
p74813
I45
VStringLiteral: "ONLY"
p74814
tp74815
I1
s(g5460
I42
g5461
Vinsert
p74816
I27
VInfixExpression: &&
p74817
tp74818
I1
s(g38777
I42
g38778
Vinsert
p74819
I43
VSimpleType: Entry
p74820
tp74821
I1
s(g206
I42
g207
Vinsert
p74822
I42
VSimpleName: driver
p74823
tp74824
I1
s(g11678
I42
g11679
Vinsert
p74825
I45
VStringLiteral: "DELAYED "
p74826
tp74827
I1
s(g8485
I42
g8486
Vinsert
p74828
I8
VBlock
p74829
tp74830
I10
s(g2079
I42
g2080
Vinsert
p74831
I53
VThrowStatement
p74832
tp74833
I1
s(g7712
I42
g7713
Vinsert
p74834
I42
VSimpleName: getColumns
p74835
tp74836
I2
s(g48411
I42
g48412
Vinsert
p74837
I44
VSingleVariableDeclaration
p74838
tp74839
I1
s(g15697
I42
g15698
Vinsert
p74840
I45
VStringLiteral: "CommitCount"
p74841
tp74842
I1
s(g8438
I42
g8439
Vinsert
p74843
I42
VSimpleName: List
p74844
tp74845
I1
s(g19115
I42
g19116
Vinsert
p74846
I8
VBlock
p74847
tp74848
I1
s(g597
I42
g598
Vinsert
p74849
I8
VBlock
p74850
tp74851
I2
s(g14484
I42
g14485
Vinsert
p74852
I42
VSimpleName: createParameterizedOutputVisitor
p74853
tp74854
I1
s(g6617
I42
g6618
Vinsert
p74855
I14
VClassInstanceCreation
p74856
tp74857
I2
s(g7310
I42
g7311
Vinsert
p74858
I43
VSimpleType: AtomicLong
p74859
tp74860
I18
s(g181
I42
g182
Vinsert
p74861
I42
VSimpleName: table
p74862
tp74863
I1
s(g18270
I42
g18271
Vinsert
p74864
I42
VSimpleName: identifierEquals
p74865
tp74866
I1
s(g3427
I42
g3428
Vinsert
p74867
I34
VNumberLiteral: 1
p74868
tp74869
I5
s(g2039
I42
g2040
Vinsert
p74870
I42
VSimpleName: getUrl
p74871
tp74872
I1
s(g32001
I42
g32002
Vinsert
p74873
I45
VStringLiteral: "where name like 'admin%' "
p74874
tp74875
I1
s(g25218
I42
g25219
Vinsert
p74876
I44
VSingleVariableDeclaration
p74877
tp74878
I37
s(g14155
I42
g14156
Vinsert
p74879
I42
VSimpleName: SQLException
p74880
tp74881
I1
s(Vinsert
p74882
I42
VSimpleName: add
p74883
Vinsert
p74884
I43
VSimpleType: MySqlShowDatabasesStatement
p74885
tp74886
I1
s(g65911
I42
g65912
Vinsert
p74887
I40
VQualifiedName: Token.SELECT
p74888
tp74889
I1
s(g3093
I42
g3094
Vinsert
p74890
I14
VClassInstanceCreation
p74891
tp74892
I1
s(g3926
I42
g3927
Vinsert
p74893
I42
VSimpleName: Throwable
p74894
tp74895
I2
s(g19486
I42
g19487
Vinsert
p74896
I45
VStringLiteral: "( customer_id number(10) NOT NULL,\u005cn"
p74897
tp74898
I1
s(g21190
I42
g21191
Vinsert
p74899
I45
VStringLiteral: "\u005ctacc_no IN NUMBER\u005cn"
p74900
tp74901
I1
s(g9137
I42
g9138
Vinsert
p74902
I42
VSimpleName: rewritten
p74903
tp74904
I1
s(g1329
I42
g1330
Vinsert
p74905
I31
VMethodDeclaration
p74906
tp74907
I1
s(g12082
I42
g12083
Vinsert
p74908
I32
VMethodInvocation
p74909
tp74910
I2
s(g4424
I42
g4425
Vinsert
p74911
I31
VMethodDeclaration
p74912
tp74913
I1
s(g4015
I42
g4016
Vinsert
p74914
I31
VMethodDeclaration
p74915
tp74916
I1
s(g18801
I42
g18802
Vinsert
p74917
I42
VSimpleName: getConnectionLoggerName
p74918
tp74919
I1
s(g1420
I42
g1421
Vinsert
p74920
I11
VCastExpression
p74921
tp74922
I1
s(g27954
I42
g27955
Vinsert
p74923
I42
VSimpleName: startsWith
p74924
tp74925
I1
s(g2992
I42
g2993
Vinsert
p74926
I32
VMethodInvocation
p74927
tp74928
I21
s(Vinsert
p74929
I42
VSimpleName: setConstraintName
p74930
Vinsert
p74931
I42
VSimpleName: nextToken
p74932
tp74933
I4
s(g27644
I42
g27645
Vinsert
p74934
I52
VThisExpression
p74935
tp74936
I1
s(Vinsert
p74937
I42
VSimpleName: setExpr
p74938
Vinsert
p74939
I43
VSimpleType: SQLUnaryExpr
p74940
tp74941
I2
s(g28042
I42
g28043
Vinsert
p74942
I42
VSimpleName: sql
p74943
tp74944
I2
s(g4740
I42
g4741
Vinsert
p74945
I42
VSimpleName: IOException
p74946
tp74947
I1
s(g8179
I42
g8180
Vinsert
p74948
I8
VBlock
p74949
tp74950
I1
s(g16359
I42
g16360
Vinsert
p74951
I42
VSimpleName: ucase
p74952
tp74953
I1
s(g38338
I42
g38339
Vinsert
p74954
I40
VQualifiedName: Token.INDEX
p74955
tp74956
I2
s(g24890
I42
g24891
Vinsert
p74957
I43
VSimpleType: SQLColumnCheck
p74958
tp74959
I1
s(g7512
I42
g7513
Vinsert
p74960
I33
VNullLiteral
p74961
tp74962
I1
s(g4035
I42
g4036
Vinsert
p74963
I42
VSimpleName: getUrl
p74964
tp74965
I1
s(g23913
I42
g23914
Vinsert
p74966
I34
VNumberLiteral: 1001
p74967
tp74968
I1
s(g19777
I42
g19778
Vinsert
p74969
I42
VSimpleName: queryBlock
p74970
tp74971
I2
s(Vinsert
p74972
I42
VSimpleName: endVisit
p74973
Vinsert
p74974
I42
VSimpleName: tableSources
p74975
tp74976
I2
s(g2019
I42
g2020
Vinsert
p74977
I62
VInstanceofExpression
p74978
tp74979
I1
s(Vinsert
p74980
I42
VSimpleName: visit
p74981
Vinsert
p74982
I42
VSimpleName: where
p74983
tp74984
I22
s(g18415
I42
g18416
Vinsert
p74985
I45
VStringLiteral: "LIST "
p74986
tp74987
I1
s(g61400
I42
g61401
Vinsert
p74988
I42
VSimpleName: generateConnectionId
p74989
tp74990
I1
s(g27234
I42
g27235
Vinsert
p74991
I42
VSimpleName: parserContext
p74992
tp74993
I2
s(g42762
I42
g42763
Vinsert
p74994
I42
VSimpleName: getAttribute
p74995
tp74996
I1
s(g5012
I42
g5013
Vinsert
p74997
I42
VSimpleName: lexer
p74998
tp74999
I2
s(g10846
I42
g10847
Vinsert
p75000
I43
VSimpleType: HttpURLConnection
p75001
tp75002
I1
s(Vinsert
p75003
I42
VSimpleName: put
p75004
Vinsert
p75005
I40
VQualifiedName: com.alibaba.druid.util.JMXUtils
p75006
tp75007
I1
s(g11795
I42
g11796
Vinsert
p75008
I60
VVariableDeclarationStatement
p75009
tp75010
I2
s(g12758
I42
g12759
Vinsert
p75011
I42
VSimpleName: setUrl
p75012
tp75013
I1
s(g19849
I42
g19850
Vinsert
p75014
I43
VSimpleType: SQLDropIndexStatement
p75015
tp75016
I2
s(g14316
I42
g14317
Vinsert
p75017
I32
VMethodInvocation
p75018
tp75019
I1
s(g18036
I42
g18037
Vinsert
p75020
I7
VAssignment: =
p75021
tp75022
I1
s(g18568
I42
g18569
Vinsert
p75023
I42
VSimpleName: getDataSourceList
p75024
tp75025
I1
s(g9103
I42
g9104
Vinsert
p75026
I43
VSimpleType: ColumnMetaData
p75027
tp75028
I1
s(g13622
I42
g13623
Vinsert
p75029
I42
VSimpleName: RETRY_COUNT
p75030
tp75031
I1
s(g23839
I42
g23840
Vinsert
p75032
I42
VSimpleName: getDeclaredMethod
p75033
tp75034
I1
s(g37260
I42
g37261
Vinsert
p75035
I42
VSimpleName: joinType
p75036
tp75037
I1
s(g24102
I42
g24103
Vinsert
p75038
I42
VSimpleName: ReflectionUtils
p75039
tp75040
I5
s(g17764
I42
g17765
Vinsert
p75041
I42
VSimpleName: isDeny
p75042
tp75043
I1
s(g942
I42
g943
Vinsert
p75044
I45
VStringLiteral: "pyson"
p75045
tp75046
I2
s(g3760
I42
g3761
Vinsert
p75047
I21
VExpressionStatement
p75048
tp75049
I2
s(g18573
I42
g18574
Vinsert
p75050
I42
VSimpleName: TableStat
p75051
tp75052
I1
s(g1740
I42
g1741
Vinsert
p75053
I45
VStringLiteral: "META-INF/druid-filter-wall-permit-schema-mysql-default.txt"
p75054
tp75055
I1
s(g13089
I42
g13090
Vinsert
p75056
I42
VSimpleName: filter
p75057
tp75058
I2
s(g17174
I42
g17175
Vinsert
p75059
I45
VStringLiteral: "\u005ctSQL SECURITY = invoker\u005cn"
p75060
tp75061
I1
s(g22551
I42
g22552
Vinsert
p75062
I45
VStringLiteral: "\u005ctCONSTRAINT idx_ALI_KTV_LEADS_AREA_FIX_TBD_PK0 PRIMARY KEY (ID)\u005cn"
p75063
tp75064
I1
s(g4709
I42
g4710
Vinsert
p75065
I42
VSimpleName: setRenameTableAllow
p75066
tp75067
I1
s(g12262
I42
g12263
Vinsert
p75068
I40
VQualifiedName: Token.CREATE
p75069
tp75070
I2
s(g19120
I42
g19121
Vinsert
p75071
I42
VSimpleName: filters
p75072
tp75073
I1
s(g11890
I42
g11891
Vinsert
p75074
I32
VMethodInvocation
p75075
tp75076
I8
s(g63938
I42
g63939
Vinsert
p75077
I43
VSimpleType: MySqlCursorCloseStatement
p75078
tp75079
I1
s(g20325
I42
g20326
Vinsert
p75080
I42
VSimpleName: jdbcExecuteErrorCount
p75081
tp75082
I2
s(g13938
I42
g13939
Vinsert
p75083
I42
VSimpleName: result
p75084
tp75085
I1
s(g9696
I42
g9697
Vinsert
p75086
I43
VSimpleType: VERSION
p75087
tp75088
I1
s(g8499
I42
g8500
Vinsert
p75089
I45
VStringLiteral: "LEAVE "
p75090
tp75091
I1
s(g2770
I42
g2771
Vinsert
p75092
I40
VQualifiedName: Token.LPAREN
p75093
tp75094
I1
s(g3332
I42
g3333
Vinsert
p75095
I42
VSimpleName: hasNext
p75096
tp75097
I2
s(g9171
I42
g9172
Vinsert
p75098
I9
VBooleanLiteral: true
p75099
tp75100
I3
s(g1385
I42
g1386
Vinsert
p75101
I32
VMethodInvocation
p75102
tp75103
I6
s(g1973
I42
g1974
Vinsert
p75104
I42
VSimpleName: SQLAlterTableAlterColumn
p75105
tp75106
I2
s(g12893
I42
g12894
Vinsert
p75107
I42
VSimpleName: equalsIgnoreCase
p75108
tp75109
I2
s(g21244
I42
g21245
Vinsert
p75110
I44
VSingleVariableDeclaration
p75111
tp75112
I2
s(g1241
I42
g1242
Vinsert
p75113
I32
VMethodInvocation
p75114
tp75115
I1
s(g1868
I42
g1869
Vinsert
p75116
I59
VVariableDeclarationFragment
p75117
tp75118
I1
s(g7746
I42
g7747
Vinsert
p75119
I42
VSimpleName: SQLObject
p75120
tp75121
I1
s(g27974
I42
g27975
Vinsert
p75122
I42
VSimpleName: printSelectList
p75123
tp75124
I1
s(g5995
I42
g5996
Vinsert
p75125
I42
VSimpleName: toSQLExpr
p75126
tp75127
I6
s(g8815
I42
g8816
Vinsert
p75128
I42
VSimpleName: sqlStat
p75129
tp75130
I2
s(g5409
I42
g5410
Vinsert
p75131
I33
VNullLiteral
p75132
tp75133
I7
s(g30636
I42
g30637
Vinsert
p75134
I42
VSimpleName: config
p75135
tp75136
I1
s(g1476
I42
g1477
Vinsert
p75137
I32
VMethodInvocation
p75138
tp75139
I4
s(g16517
I42
g16518
Vinsert
p75140
I43
VSimpleType: SQLBinaryExpr
p75141
tp75142
I2
s(Vinsert
p75143
I42
VSimpleName: assertEquals
p75144
Vinsert
p75145
I42
VSimpleName: getConditions
p75146
tp75147
I4
s(Vinsert
p75148
I42
VSimpleName: nextToken
p75149
Vinsert
p75150
I42
VSimpleName: startsWith
p75151
tp75152
I1
s(g15536
I42
g15537
Vinsert
p75153
I42
VSimpleName: getInstance
p75154
tp75155
I1
s(g4035
I42
g4036
Vinsert
p75156
I40
VQualifiedName: Connection.TRANSACTION_REPEATABLE_READ
p75157
tp75158
I1
s(g45304
I42
g45305
Vinsert
p75159
I43
VSimpleType: ObjectName
p75160
tp75161
I1
s(g30772
I42
g30773
Vinsert
p75162
I43
VSimpleType: String
p75163
tp75164
I5
s(g4263
I42
g4264
Vinsert
p75165
I42
VSimpleName: filter
p75166
tp75167
I1
s(g17835
I42
g17836
Vinsert
p75168
I45
VStringLiteral: "use huaianapp"
p75169
tp75170
I1
s(g14295
I42
g14296
Vinsert
p75171
I42
VSimpleName: groupBy
p75172
tp75173
I1
s(g47573
I42
g47574
Vinsert
p75174
I74
VParameterizedType: HashMap<String,String>
p75175
tp75176
I1
s(g3063
I42
g3064
Vinsert
p75177
I14
VClassInstanceCreation
p75178
tp75179
I2
s(g8233
I42
g8234
Vinsert
p75180
I43
VSimpleType: SQLUnique
p75181
tp75182
I1
s(g607
I42
g608
Vinsert
p75183
I42
VSimpleName: x
p75184
tp75185
I1
s(g37815
I42
g37816
Vinsert
p75186
I42
VSimpleName: tableSource
p75187
tp75188
I1
s(g21572
I42
g21573
Vinsert
p75189
I43
VSimpleType: SQLDataType
p75190
tp75191
I2
s(g6956
I42
g6957
Vinsert
p75192
I42
VSimpleName: update
p75193
tp75194
I2
s(g3664
I42
g3665
Vinsert
p75195
I8
VBlock
p75196
tp75197
I1
s(g36602
I42
g36603
Vinsert
p75198
I42
VSimpleName: list
p75199
tp75200
I1
s(g7264
I42
g7265
Vinsert
p75201
I25
VIfStatement
p75202
tp75203
I2
s(g5384
I42
g5385
Vinsert
p75204
I32
VMethodInvocation
p75205
tp75206
I2
s(g20046
I42
g20047
Vinsert
p75207
I43
VSimpleType: MySqlRenameTableStatement
p75208
tp75209
I1
s(g20733
I42
g20734
Vinsert
p75210
I45
VStringLiteral: "\u005cn -- comment_0"
p75211
tp75212
I1
s(g7121
I42
g7122
Vinsert
p75213
I42
VSimpleName: List
p75214
tp75215
I1
s(g6162
I42
g6163
Vinsert
p75216
I43
VSimpleType: SQLName
p75217
tp75218
I49
s(g10508
I42
g10509
Vinsert
p75219
I52
VThisExpression
p75220
tp75221
I1
s(g23476
I42
g23477
Vinsert
p75222
I45
VStringLiteral: "\u005ct, IFNULL(instances, 1)\u005cn"
p75223
tp75224
I1
s(g3012
I42
g3013
Vinsert
p75225
I8
VBlock
p75226
tp75227
I2
s(g5148
I42
g5149
Vinsert
p75228
I32
VMethodInvocation
p75229
tp75230
I2
s(g8752
I42
g8753
Vinsert
p75231
I32
VMethodInvocation
p75232
tp75233
I3
s(g1760
I42
g1761
Vinsert
p75234
I8
VBlock
p75235
tp75236
I2
s(g14055
I42
g14056
Vinsert
p75237
I42
VSimpleName: exprParser
p75238
tp75239
I1
s(g16935
I42
g16936
Vinsert
p75240
I52
VThisExpression
p75241
tp75242
I1
s(g22975
I42
g22976
Vinsert
p75243
I42
VSimpleName: getConnection
p75244
tp75245
I1
s(g44340
I42
g44341
Vinsert
p75246
I42
VSimpleName: execMySql
p75247
tp75248
I2
s(g48916
I42
g48917
Vinsert
p75249
I42
VSimpleName: param
p75250
tp75251
I3
s(g9456
I42
g9457
Vinsert
p75252
I32
VMethodInvocation
p75253
tp75254
I1
s(g4015
I42
g4016
Vinsert
p75255
I43
VSimpleType: SQLException
p75256
tp75257
I1
s(g9709
I42
g9710
Vinsert
p75258
I42
VSimpleName: x
p75259
tp75260
I2
s(g34685
I42
g34686
Vinsert
p75261
I42
VSimpleName: groupingSet
p75262
tp75263
I1
s(g2614
I42
g2615
Vinsert
p75264
I43
VSimpleType: SQLExpr
p75265
tp75266
I6
s(g1261
I42
g1262
Vinsert
p75267
I42
VSimpleName: x
p75268
tp75269
I1
s(g3775
I42
g3776
Vinsert
p75270
I42
VSimpleName: beginExpr
p75271
tp75272
I1
s(g2334
I42
g2335
Vinsert
p75273
I42
VSimpleName: getPoolingCount
p75274
tp75275
I1
s(g14605
I42
g14606
Vinsert
p75276
I59
VVariableDeclarationFragment
p75277
tp75278
I1
s(g2158
I42
g2159
Vinsert
p75279
I42
VSimpleName: fk
p75280
tp75281
I3
s(g74882
I42
g74883
Vinsert
p75282
I42
VSimpleName: MySqlShowDatabasesStatement
p75283
tp75284
I1
s(g13303
I42
g13304
Vinsert
p75285
I45
VStringLiteral: ", "
p75286
tp75287
I2
s(Vinsert
p75288
I42
VSimpleName: assertFalse
p75289
Vinsert
p75290
I45
VStringLiteral: "SELECT F1, F2 FROM ABC --test"
p75291
tp75292
I1
s(g61
I42
g62
Vinsert
p75293
I21
VExpressionStatement
p75294
tp75295
I1
s(g6791
I42
g6792
Vinsert
p75296
I42
VSimpleName: conn
p75297
tp75298
I1
s(g11910
I42
g11911
Vinsert
p75299
I21
VExpressionStatement
p75300
tp75301
I1
s(g17602
I42
g17603
Vinsert
p75302
I42
VSimpleName: output
p75303
tp75304
I4
s(g937
I42
g938
Vinsert
p75305
I42
VSimpleName: String
p75306
tp75307
I1
s(Vinsert
p75308
I42
VSimpleName: nextToken
p75309
Vinsert
p75310
I40
VQualifiedName: Token.INDEX
p75311
tp75312
I1
s(g14088
I42
g14089
Vinsert
p75313
I83
VModifier: protected
p75314
tp75315
I1
s(g26573
I42
g26574
Vinsert
p75316
I42
VSimpleName: DB2ValuesStatement
p75317
tp75318
I1
s(g7863
I42
g7864
Vinsert
p75319
I42
VSimpleName: partitionBy
p75320
tp75321
I2
s(g3770
I42
g3771
Vinsert
p75322
I42
VSimpleName: stmt
p75323
tp75324
I3
s(g2099
I42
g2100
Vinsert
p75325
I42
VSimpleName: assertEquals
p75326
tp75327
I1
s(g29475
I42
g29476
Vinsert
p75328
I45
VStringLiteral: "f2"
p75329
tp75330
I1
s(g2900
I42
g2901
Vinsert
p75331
I42
VSimpleName: element
p75332
tp75333
I1
s(g3103
I42
g3104
Vinsert
p75334
I42
VSimpleName: conn
p75335
tp75336
I22
s(g32738
I42
g32739
Vinsert
p75337
I42
VSimpleName: SQLListExpr
p75338
tp75339
I1
s(g10692
I42
g10693
Vinsert
p75340
I74
VParameterizedType: ArrayList<SQLObject>
p75341
tp75342
I4
s(g48916
I42
g48917
Vinsert
p75343
I42
VSimpleName: parameters
p75344
tp75345
I2
s(g1140
I42
g1141
Vinsert
p75346
I42
VSimpleName: afterExecute
p75347
tp75348
I1
s(g13700
I42
g13701
Vinsert
p75349
I52
VThisExpression
p75350
tp75351
I33
s(g6074
I42
g6075
Vinsert
p75352
I43
VSimpleType: SQLAlterTableDropColumnItem
p75353
tp75354
I2
s(g1022
I42
g1023
Vinsert
p75355
I21
VExpressionStatement
p75356
tp75357
I1
s(g15864
I42
g15865
Vinsert
p75358
I8
VBlock
p75359
tp75360
I2
s(g15823
I42
g15824
Vinsert
p75361
I32
VMethodInvocation
p75362
tp75363
I3
s(g55772
I42
g55773
Vinsert
p75364
I57
VTypeLiteral
p75365
tp75366
I2
s(g30541
I42
g30542
Vinsert
p75367
I42
VSimpleName: SQLDataType
p75368
tp75369
I1
s(g12547
I42
g12548
Vinsert
p75370
I83
VModifier: final
p75371
tp75372
I4
s(g552
I42
g553
Vinsert
p75373
I42
VSimpleName: getValues
p75374
tp75375
I1
s(g14749
I42
g14750
Vinsert
p75376
I45
VStringLiteral: "apply_goods_fee"
p75377
tp75378
I1
s(g16696
I42
g16697
Vinsert
p75379
I14
VClassInstanceCreation
p75380
tp75381
I16
s(g22826
I42
g22827
Vinsert
p75382
I21
VExpressionStatement
p75383
tp75384
I3
s(g19573
I42
g19574
Vinsert
p75385
I21
VExpressionStatement
p75386
tp75387
I4
s(g65600
I42
g65601
Vinsert
p75388
I42
VSimpleName: getWith
p75389
tp75390
I1
s(g8293
I42
g8294
Vinsert
p75391
I43
VSimpleType: StatAnnotationAdvisor
p75392
tp75393
I2
s(g23557
I42
g23558
Vinsert
p75394
I45
VStringLiteral: "Read timed out"
p75395
tp75396
I1
s(g7947
I42
g7948
Vinsert
p75397
I78
VMarkerAnnotation
p75398
tp75399
I5
s(g14635
I42
g14636
Vinsert
p75400
I74
VParameterizedType: Map.Entry<String,Entity>
p75401
tp75402
I1
s(g22538
I42
g22539
Vinsert
p75403
I42
VSimpleName: target
p75404
tp75405
I2
s(g33889
I42
g33890
Vinsert
p75406
I42
VSimpleName: errorCount
p75407
tp75408
I1
s(g72832
I42
g72833
Vinsert
p75409
I42
VSimpleName: table
p75410
tp75411
I2
s(g5685
I42
g5686
Vinsert
p75412
I42
VSimpleName: SQLUtils
p75413
tp75414
I1
s(g19777
I42
g19778
Vinsert
p75415
I43
VSimpleType: PGLimit
p75416
tp75417
I1
s(g5384
I42
g5385
Vinsert
p75418
I83
VModifier: public
p75419
tp75420
I2
s(g21908
I42
g21909
Vinsert
p75421
I45
VStringLiteral: "\u005cn\u005ctconstraint PK_cwd_directory primary key (ID)"
p75422
tp75423
I1
s(g11925
I42
g11926
Vinsert
p75424
I45
VStringLiteral: "logger can not be null"
p75425
tp75426
I1
s(g7320
I42
g7321
Vinsert
p75427
I7
VAssignment: =
p75428
tp75429
I1
s(g28204
I42
g28205
Vinsert
p75430
I42
VSimpleName: setDatabase
p75431
tp75432
I1
s(g1800
I42
g1801
Vinsert
p75433
I34
VNumberLiteral: 0
p75434
tp75435
I2
s(g44586
I42
g44587
Vinsert
p75436
I42
VSimpleName: getLastAccessTime
p75437
tp75438
I1
s(g15745
I42
g15746
Vinsert
p75439
I45
VStringLiteral: "usergroups"
p75440
tp75441
I1
s(g12812
I42
g12813
Vinsert
p75442
I42
VSimpleName: validConnectionCheckerClass
p75443
tp75444
I1
s(g4278
I42
g4279
Vinsert
p75445
I45
VStringLiteral: "| c_mediumtext | mediumtext   | NO   |     | NULL                |                             |\u005cn"
p75446
tp75447
I1
s(g40724
I42
g40725
Vinsert
p75448
I42
VSimpleName: accept
p75449
tp75450
I8
s(g31826
I42
g31827
Vinsert
p75451
I42
VSimpleName: arguments
p75452
tp75453
I2
s(g7965
I42
g7966
Vinsert
p75454
I42
VSimpleName: Object
p75455
tp75456
I1
s(g3714
I42
g3715
Vinsert
p75457
I45
VStringLiteral: "TODO STORAGE"
p75458
tp75459
I1
s(g14881
I42
g14882
Vinsert
p75460
I8
VBlock
p75461
tp75462
I1
s(g7477
I42
g7478
Vinsert
p75463
I33
VNullLiteral
p75464
tp75465
I2
s(g23891
I42
g23892
Vinsert
p75466
I43
VSimpleType: Exception
p75467
tp75468
I2
s(g7394
I42
g7395
Vinsert
p75469
I21
VExpressionStatement
p75470
tp75471
I1
s(Vinsert
p75472
I42
VSimpleName: parseDeleteStatement
p75473
Vinsert
p75474
I43
VSimpleType: MySqlStatementParser
p75475
tp75476
I2
s(g18192
I42
g18193
Vinsert
p75477
I52
VThisExpression
p75478
tp75479
I1
s(g51898
I42
g51899
Vinsert
p75480
I45
VStringLiteral: "WHERE job_id = 'PU_CLERK'\u005cn"
p75481
tp75482
I1
s(g7777
I42
g7778
Vinsert
p75483
I43
VSimpleType: String
p75484
tp75485
I1
s(g32833
I42
g32834
Vinsert
p75486
I27
VInfixExpression: !=
p75487
tp75488
I1
s(g56684
I42
g56685
Vinsert
p75489
I45
VStringLiteral: "{conn-"
p75490
tp75491
I1
s(g11041
I42
g11042
Vinsert
p75492
I21
VExpressionStatement
p75493
tp75494
I7
s(g6162
I42
g6163
Vinsert
p75495
I27
VInfixExpression: !=
p75496
tp75497
I183
s(g22163
I42
g22164
Vinsert
p75498
I42
VSimpleName: mergedSql
p75499
tp75500
I1
s(g6126
I42
g6127
Vinsert
p75501
I42
VSimpleName: getLockType
p75502
tp75503
I1
s(g20105
I42
g20106
Vinsert
p75504
I40
VQualifiedName: SQLObjectType.USER
p75505
tp75506
I1
s(g8914
I42
g8915
Vinsert
p75507
I42
VSimpleName: dataSourceHA
p75508
tp75509
I2
s(g341
I42
g342
Vinsert
p75510
I42
VSimpleName: class_MysqlIO
p75511
tp75512
I2
s(g11217
I42
g11218
Vinsert
p75513
I40
VQualifiedName: com.alibaba.druid.sql.ast.SQLDataType
p75514
tp75515
I2
s(g63675
I42
g63676
Vinsert
p75516
I13
VCharacterLiteral: ' '
p75517
tp75518
I1
s(g1785
I42
g1786
Vinsert
p75519
I42
VSimpleName: Object
p75520
tp75521
I2
s(g13952
I42
g13953
Vinsert
p75522
I42
VSimpleName: MySqlSelectQueryBlock
p75523
tp75524
I3
s(g10275
I42
g10276
Vinsert
p75525
I21
VExpressionStatement
p75526
tp75527
I1
s(g9158
I42
g9159
Vinsert
p75528
I42
VSimpleName: ReturnRowsClause
p75529
tp75530
I1
s(g3926
I42
g3927
Vinsert
p75531
I42
VSimpleName: test_types
p75532
tp75533
I1
s(g35007
I42
g35008
Vinsert
p75534
I45
VStringLiteral: "x3"
p75535
tp75536
I1
s(g31
I42
g32
Vinsert
p75537
I42
VSimpleName: put
p75538
tp75539
I2
s(g11930
I42
g11931
Vinsert
p75540
I42
VSimpleName: name
p75541
tp75542
I2
s(g2819
I42
g2820
Vinsert
p75543
I21
VExpressionStatement
p75544
tp75545
I1
s(Vinsert
p75546
I42
VSimpleName: assertTrue
p75547
Vinsert
p75548
I42
VSimpleName: TAEWallTest
p75549
tp75550
I1
s(g4849
I42
g4850
Vinsert
p75551
I3
VArrayCreation
p75552
tp75553
I1
s(g6655
I42
g6656
Vinsert
p75554
I8
VBlock
p75555
tp75556
I2
s(g5872
I42
g5873
Vinsert
p75557
I33
VNullLiteral
p75558
tp75559
I4
s(g562
I42
g563
Vinsert
p75560
I8
VBlock
p75561
tp75562
I12
s(g28347
I42
g28348
Vinsert
p75563
I42
VSimpleName: SQLIdentifierExpr
p75564
tp75565
I1
s(g12888
I42
g12889
Vinsert
p75566
I42
VSimpleName: i
p75567
tp75568
I8
s(g1785
I42
g1786
Vinsert
p75569
I42
VSimpleName: item
p75570
tp75571
I3
s(g351
I42
g352
Vinsert
p75572
I45
VStringLiteral: ", lastValidIdleMillis "
p75573
tp75574
I1
s(g38499
I42
g38500
Vinsert
p75575
I22
VFieldAccess
p75576
tp75577
I4
s(g18044
I42
g18045
Vinsert
p75578
I42
VSimpleName: token
p75579
tp75580
I1
s(g30113
I42
g30114
Vinsert
p75581
I8
VBlock
p75582
tp75583
I7
s(g10660
I42
g10661
Vinsert
p75584
I45
VStringLiteral: "\u005ct`c_datetime` datetime DEFAULT '0000-00-00 00:00:00' COMMENT 'datetime',\u005cn"
p75585
tp75586
I2
s(g2765
I42
g2766
Vinsert
p75587
I43
VSimpleType: String
p75588
tp75589
I3
s(g1903
I42
g1904
Vinsert
p75590
I43
VSimpleType: OracleBlockStatement
p75591
tp75592
I1
s(g12911
I42
g12912
Vinsert
p75593
I42
VSimpleName: i
p75594
tp75595
I1
s(g20470
I42
g20471
Vinsert
p75596
I42
VSimpleName: parameterizeHash
p75597
tp75598
I1
s(g9899
I42
g9900
Vinsert
p75599
I60
VVariableDeclarationStatement
p75600
tp75601
I1
s(g10919
I42
g10920
Vinsert
p75602
I21
VExpressionStatement
p75603
tp75604
I1
s(g15092
I42
g15093
Vinsert
p75605
I42
VSimpleName: out
p75606
tp75607
I1
s(g5818
I42
g5819
Vinsert
p75608
I42
VSimpleName: stat
p75609
tp75610
I1
s(g14839
I42
g14840
Vinsert
p75611
I42
VSimpleName: println
p75612
tp75613
I2
s(g1996
I42
g1997
Vinsert
p75614
I21
VExpressionStatement
p75615
tp75616
I6
s(g1002
I42
g1003
Vinsert
p75617
I44
VSingleVariableDeclaration
p75618
tp75619
I1
s(g21612
I42
g21613
Vinsert
p75620
I45
VStringLiteral: "5'CN'"
p75621
tp75622
I1
s(g2324
I42
g2325
Vinsert
p75623
I27
VInfixExpression: *
p75624
tp75625
I1
s(g20456
I42
g20457
Vinsert
p75626
I39
VPrimitiveType: void
p75627
tp75628
I2
s(g31219
I42
g31220
Vinsert
p75629
I42
VSimpleName: getSelectList
p75630
tp75631
I1
s(g8617
I42
g8618
Vinsert
p75632
I7
VAssignment: =
p75633
tp75634
I1
s(g23640
I42
g23641
Vinsert
p75635
I45
VStringLiteral: "EXPIRE"
p75636
tp75637
I1
s(g22469
I42
g22470
Vinsert
p75638
I21
VExpressionStatement
p75639
tp75640
I5
s(g25328
I42
g25329
Vinsert
p75641
I42
VSimpleName: iface
p75642
tp75643
I3
s(g4278
I42
g4279
Vinsert
p75644
I45
VStringLiteral: "| c_blob       | blob         | NO   |     | NULL                |                             |\u005cn"
p75645
tp75646
I1
s(g3002
I42
g3003
Vinsert
p75647
I33
VNullLiteral
p75648
tp75649
I1
s(g3432
I42
g3433
Vinsert
p75650
I42
VSimpleName: testWhileIdle
p75651
tp75652
I1
s(g18871
I42
g18872
Vinsert
p75653
I59
VVariableDeclarationFragment
p75654
tp75655
I2
s(g909
I42
g910
Vinsert
p75656
I45
VStringLiteral: "CREATE OR REPLACE TYPE histogram_entry_type AUTHID CURRENT_USER AS OBJECT (\u005cn"
p75657
tp75658
I1
s(g4780
I42
g4781
Vinsert
p75659
I42
VSimpleName: RuntimeException
p75660
tp75661
I1
s(g21020
I42
g21021
Vinsert
p75662
I42
VSimpleName: Exception
p75663
tp75664
I7
s(g1236
I42
g1237
Vinsert
p75665
I42
VSimpleName: getPhysicalConnectionUsedCount
p75666
tp75667
I1
s(g4370
I42
g4371
Vinsert
p75668
I59
VVariableDeclarationFragment
p75669
tp75670
I1
s(g1685
I42
g1686
Vinsert
p75671
I42
VSimpleName: activeConnections
p75672
tp75673
I1
s(g21375
I42
g21376
Vinsert
p75674
I45
VStringLiteral: "jdbc:wrap-jdbc:jdbc:mock:xxx"
p75675
tp75676
I1
s(g15443
I42
g15444
Vinsert
p75677
I43
VSimpleType: SQLServerSelect
p75678
tp75679
I1
s(Vinsert
p75680
I42
VSimpleName: parseStatementList
p75681
Vinsert
p75682
I42
VSimpleName: MySqlShowCreateProcedureStatement
p75683
tp75684
I2
s(g12034
I42
g12035
Vinsert
p75685
I52
VThisExpression
p75686
tp75687
I23
s(g18648
I42
g18649
Vinsert
p75688
I21
VExpressionStatement
p75689
tp75690
I1
s(g38430
I42
g38431
Vinsert
p75691
I42
VSimpleName: getOrderBy
p75692
tp75693
I1
s(g3631
I42
g3632
Vinsert
p75694
I43
VSimpleType: StatFilter
p75695
tp75696
I1
s(g4288
I42
g4289
Vinsert
p75697
I8
VBlock
p75698
tp75699
I2
s(g1923
I42
g1924
Vinsert
p75700
I42
VSimpleName: subList
p75701
tp75702
I1
s(g6750
I42
g6751
Vinsert
p75703
I42
VSimpleName: i
p75704
tp75705
I3
s(g1085
I42
g1086
Vinsert
p75706
I59
VVariableDeclarationFragment
p75707
tp75708
I35
s(g22538
I42
g22539
Vinsert
p75709
I42
VSimpleName: i
p75710
tp75711
I1
s(g1675
I42
g1676
Vinsert
p75712
I39
VPrimitiveType: int
p75713
tp75714
I1
s(g14749
I42
g14750
Vinsert
p75715
I42
VSimpleName: queryBlock
p75716
tp75717
I2
s(g2604
I42
g2605
Vinsert
p75718
I5
VArrayType: String[]
p75719
tp75720
I1
s(g12034
I42
g12035
Vinsert
p75721
I42
VSimpleName: clusteredBy
p75722
tp75723
I1
s(g59016
I42
g59017
Vinsert
p75724
I43
VSimpleType: Properties
p75725
tp75726
I1
s(g25417
I42
g25418
Vinsert
p75727
I9
VBooleanLiteral: false
p75728
tp75729
I7
s(g562
I42
g563
Vinsert
p75730
I42
VSimpleName: compositeData
p75731
tp75732
I1
s(g24206
I42
g24207
Vinsert
p75733
I45
VStringLiteral: "\u005ctINF VARCHAR2(100)\u005cn"
p75734
tp75735
I1
s(g8192
I42
g8193
Vinsert
p75736
I9
VBooleanLiteral: false
p75737
tp75738
I3
s(g3528
I42
g3529
Vinsert
p75739
I42
VSimpleName: SQLName
p75740
tp75741
I2
s(g2857
I42
g2858
Vinsert
p75742
I42
VSimpleName: setExceptionSorterClassName
p75743
tp75744
I1
s(g21845
I42
g21846
Vinsert
p75745
I42
VSimpleName: parseInt
p75746
tp75747
I1
s(g4183
I42
g4184
Vinsert
p75748
I45
VStringLiteral: "\u005ctEND LOOP outer_loop;\u005cn"
p75749
tp75750
I1
s(g30209
I42
g30210
Vinsert
p75751
I12
VCatchClause
p75752
tp75753
I1
s(g37785
I42
g37786
Vinsert
p75754
I45
VStringLiteral: "\u005ctFROM person_test"
p75755
tp75756
I1
s(g35330
I42
g35331
Vinsert
p75757
I42
VSimpleName: exportParameterVisitor
p75758
tp75759
I1
s(g6781
I42
g6782
Vinsert
p75760
I32
VMethodInvocation
p75761
tp75762
I4
s(g5310
I42
g5311
Vinsert
p75763
I43
VSimpleType: SQLException
p75764
tp75765
I2
s(g8692
I42
g8693
Vinsert
p75766
I21
VExpressionStatement
p75767
tp75768
I2
s(g17550
I42
g17551
Vinsert
p75769
I45
VStringLiteral: "c1"
p75770
tp75771
I1
s(g3623
I42
g3624
Vinsert
p75772
I42
VSimpleName: getRunningCount
p75773
tp75774
I1
s(g2218
I42
g2219
Vinsert
p75775
I40
VQualifiedName: rangeCounters.length
p75776
tp75777
I1
s(g30636
I42
g30637
Vinsert
p75778
I32
VMethodInvocation
p75779
tp75780
I3
s(g1160
I42
g1161
Vinsert
p75781
I32
VMethodInvocation
p75782
tp75783
I1
s(g15153
I42
g15154
Vinsert
p75784
I59
VVariableDeclarationFragment
p75785
tp75786
I1
s(g29658
I42
g29659
Vinsert
p75787
I42
VSimpleName: indexIn
p75788
tp75789
I1
s(g40651
I42
g40652
Vinsert
p75790
I42
VSimpleName: latch_0
p75791
tp75792
I1
s(g22636
I42
g22637
Vinsert
p75793
I43
VSimpleType: String
p75794
tp75795
I8
s(g14348
I42
g14349
Vinsert
p75796
I42
VSimpleName: state
p75797
tp75798
I1
s(g8796
I42
g8797
Vinsert
p75799
I43
VSimpleType: SQLTableSource
p75800
tp75801
I1
s(g2218
I42
g2219
Vinsert
p75802
I42
VSimpleName: sum
p75803
tp75804
I1
s(g6630
I42
g6631
Vinsert
p75805
I52
VThisExpression
p75806
tp75807
I2
s(g4263
I42
g4264
Vinsert
p75808
I43
VSimpleType: RuntimeException
p75809
tp75810
I1
s(Vinsert
p75811
I42
VSimpleName: createExprParser
p75812
Vinsert
p75813
I45
VStringLiteral: "sys_guid()"
p75814
tp75815
I1
s(g2543
I42
g2544
Vinsert
p75816
I34
VNumberLiteral: 0
p75817
tp75818
I4
s(g11737
I42
g11738
Vinsert
p75819
I43
VSimpleType: String
p75820
tp75821
I1
s(g1845
I42
g1846
Vinsert
p75822
I42
VSimpleName: assertEquals
p75823
tp75824
I74
s(g52306
I42
g52307
Vinsert
p75825
I11
VCastExpression
p75826
tp75827
I5
s(g11686
I42
g11687
Vinsert
p75828
I45
VStringLiteral: "\u005cn\u005ctcatalog_url VARCHAR2(50),"
p75829
tp75830
I2
s(g7461
I42
g7462
Vinsert
p75831
I42
VSimpleName: format
p75832
tp75833
I1
s(g40094
I42
g40095
Vinsert
p75834
I42
VSimpleName: update
p75835
tp75836
I1
s(g4273
I42
g4274
Vinsert
p75837
I42
VSimpleName: T
p75838
tp75839
I3
s(g24686
I42
g24687
Vinsert
p75840
I42
VSimpleName: RelaxedDataBinder
p75841
tp75842
I1
s(g20827
I42
g20828
Vinsert
p75843
I42
VSimpleName: f
p75844
tp75845
I2
s(g9854
I42
g9855
Vinsert
p75846
I43
VSimpleType: SQLSelectOrderByItem
p75847
tp75848
I1
s(g49441
I42
g49442
Vinsert
p75849
I42
VSimpleName: getConnectCount
p75850
tp75851
I1
s(g1715
I42
g1716
Vinsert
p75852
I42
VSimpleName: poolalbeConnection
p75853
tp75854
I2
s(g14790
I42
g14791
Vinsert
p75855
I42
VSimpleName: x
p75856
tp75857
I2
s(g13622
I42
g13623
Vinsert
p75858
I42
VSimpleName: Exception
p75859
tp75860
I2
s(g37815
I42
g37816
Vinsert
p75861
I43
VSimpleType: SQLExprTableSource
p75862
tp75863
I1
s(g1770
I42
g1771
Vinsert
p75864
I31
VMethodDeclaration
p75865
tp75866
I6
s(g6460
I42
g6461
Vinsert
p75867
I45
VStringLiteral: "\u005ct, bs.input_file_scan_only, decode(keep_options, 0, 'NO', 'YES') AS keep, keep_until, decode(keep_options, 256, 'LOGS', 512, 'NOLOGS', 1024, 'CONSISTENT', NULL) AS keep_options\u005cn"
p75868
tp75869
I1
s(g28221
I42
g28222
Vinsert
p75870
I32
VMethodInvocation
p75871
tp75872
I2
s(g1554
I42
g1555
Vinsert
p75873
I42
VSimpleName: log
p75874
tp75875
I1
s(g31549
I42
g31550
Vinsert
p75876
I7
VAssignment: =
p75877
tp75878
I28
s(g21212
I42
g21213
Vinsert
p75879
I43
VSimpleType: ValuesClause
p75880
tp75881
I2
s(g10846
I42
g10847
Vinsert
p75882
I33
VNullLiteral
p75883
tp75884
I1
s(g15359
I42
g15360
Vinsert
p75885
I7
VAssignment: =
p75886
tp75887
I2
s(g4165
I42
g4166
Vinsert
p75888
I42
VSimpleName: timeout
p75889
tp75890
I1
s(g5434
I42
g5435
Vinsert
p75891
I42
VSimpleName: JdbcParameterNull
p75892
tp75893
I2
s(g69317
I42
g69318
Vinsert
p75894
I42
VSimpleName: getStatements
p75895
tp75896
I1
s(g28840
I42
g28841
Vinsert
p75897
I42
VSimpleName: ProfileEntryStat
p75898
tp75899
I1
s(g647
I42
g648
Vinsert
p75900
I42
VSimpleName: SQLDeclareItem
p75901
tp75902
I1
s(g20359
I42
g20360
Vinsert
p75903
I42
VSimpleName: CompositeData
p75904
tp75905
I2
s(g31887
I42
g31888
Vinsert
p75906
I42
VSimpleName: FilterAdapter
p75907
tp75908
I1
s(g18796
I42
g18797
Vinsert
p75909
I42
VSimpleName: name
p75910
tp75911
I1
s(g2173
I42
g2174
Vinsert
p75912
I42
VSimpleName: isWarnEnabled
p75913
tp75914
I1
s(g861
I42
g862
Vinsert
p75915
I42
VSimpleName: SQLSelectQuery
p75916
tp75917
I1
s(g15392
I42
g15393
Vinsert
p75918
I21
VExpressionStatement
p75919
tp75920
I28
s(g10095
I42
g10096
Vinsert
p75921
I42
VSimpleName: getBlackListHitCount
p75922
tp75923
I1
s(g1022
I42
g1023
Vinsert
p75924
I7
VAssignment: =
p75925
tp75926
I1
s(g8277
I42
g8278
Vinsert
p75927
I42
VSimpleName: str
p75928
tp75929
I4
s(g60517
I42
g60518
Vinsert
p75930
I42
VSimpleName: entry
p75931
tp75932
I1
s(g8001
I42
g8002
Vinsert
p75933
I9
VBooleanLiteral: false
p75934
tp75935
I1
s(g28278
I42
g28279
Vinsert
p75936
I40
VQualifiedName: FnvHash.Constants.PACKAGE
p75937
tp75938
I1
s(g13079
I42
g13080
Vinsert
p75939
I42
VSimpleName: aliasMap
p75940
tp75941
I13
s(Vinsert
p75942
I42
VSimpleName: assertTrue
p75943
Vinsert
p75944
I45
VStringLiteral: "bsh"
p75945
tp75946
I1
s(g40866
I42
g40867
Vinsert
p75947
I42
VSimpleName: Override
p75948
tp75949
I1
s(g35248
I42
g35249
Vinsert
p75950
I59
VVariableDeclarationFragment
p75951
tp75952
I1
s(g17670
I42
g17671
Vinsert
p75953
I27
VInfixExpression: *
p75954
tp75955
I1
s(g13808
I42
g13809
Vinsert
p75956
I25
VIfStatement
p75957
tp75958
I1
s(g25868
I42
g25869
Vinsert
p75959
I45
VStringLiteral: "GROUP BY t1.member_id, \u005cn"
p75960
tp75961
I1
s(g1642
I42
g1643
Vinsert
p75962
I42
VSimpleName: assertThat
p75963
tp75964
I1
s(g25389
I42
g25390
Vinsert
p75965
I42
VSimpleName: Class
p75966
tp75967
I2
s(g12888
I42
g12889
Vinsert
p75968
I42
VSimpleName: getPartitionColumns
p75969
tp75970
I1
s(g6557
I42
g6558
Vinsert
p75971
I11
VCastExpression
p75972
tp75973
I1
s(g1579
I42
g1580
Vinsert
p75974
I60
VVariableDeclarationStatement
p75975
tp75976
I3
s(g47291
I42
g47292
Vinsert
p75977
I43
VSimpleType: SQLExpr
p75978
tp75979
I69
s(g6192
I42
g6193
Vinsert
p75980
I21
VExpressionStatement
p75981
tp75982
I6
s(g18399
I42
g18400
Vinsert
p75983
I32
VMethodInvocation
p75984
tp75985
I20
s(g15637
I42
g15638
Vinsert
p75986
I42
VSimpleName: sql
p75987
tp75988
I278
s(g8324
I42
g8325
Vinsert
p75989
I45
VStringLiteral: "ORGANIZATION EXTERNAL (\u005cn"
p75990
tp75991
I1
s(g18145
I42
g18146
Vinsert
p75992
I44
VSingleVariableDeclaration
p75993
tp75994
I1
s(g5105
I42
g5106
Vinsert
p75995
I42
VSimpleName: SQLListExpr
p75996
tp75997
I1
s(g20320
I42
g20321
Vinsert
p75998
I32
VMethodInvocation
p75999
tp76000
I1
s(g758
I42
g759
Vinsert
p76001
I42
VSimpleName: x
p76002
tp76003
I6
s(g7091
I42
g7092
Vinsert
p76004
I32
VMethodInvocation
p76005
tp76006
I2
s(g50042
I42
g50043
Vinsert
p76007
I42
VSimpleName: dbType
p76008
tp76009
I10
s(g6283
I42
g6284
Vinsert
p76010
I33
VNullLiteral
p76011
tp76012
I10
s(g26221
I42
g26222
Vinsert
p76013
I42
VSimpleName: setObjectName
p76014
tp76015
I1
s(g4740
I42
g4741
Vinsert
p76016
I38
VPrefixExpression: !
p76017
tp76018
I1
s(g38211
I42
g38212
Vinsert
p76019
I42
VSimpleName: SQLInListExpr
p76020
tp76021
I1
s(g10262
I42
g10263
Vinsert
p76022
I21
VExpressionStatement
p76023
tp76024
I4
s(g577
I42
g578
Vinsert
p76025
I43
VSimpleType: SQLMethodInvokeExpr
p76026
tp76027
I8
s(g3297
I42
g3298
Vinsert
p76028
I8
VBlock
p76029
tp76030
I10
s(g1115
I42
g1116
Vinsert
p76031
I43
VSimpleType: Option
p76032
tp76033
I3
s(g18938
I42
g18939
Vinsert
p76034
I42
VSimpleName: OracleSelectSubqueryTableSource
p76035
tp76036
I1
s(g1145
I42
g1146
Vinsert
p76037
I43
VSimpleType: MockConnection
p76038
tp76039
I1
s(g12961
I42
g12962
Vinsert
p76040
I45
VStringLiteral: "\u005cn\u005cnCREATE INDEX "
p76041
tp76042
I1
s(g18224
I42
g18225
Vinsert
p76043
I11
VCastExpression
p76044
tp76045
I3
s(g2319
I42
g2320
Vinsert
p76046
I27
VInfixExpression: <
p76047
tp76048
I2
s(g3704
I42
g3705
Vinsert
p76049
I14
VClassInstanceCreation
p76050
tp76051
I3
s(g5470
I42
g5471
Vinsert
p76052
I40
VQualifiedName: Token.IDENTIFIER
p76053
tp76054
I1
s(g2243
I42
g2244
Vinsert
p76055
I42
VSimpleName: property
p76056
tp76057
I1
s(g12346
I42
g12347
Vinsert
p76058
I60
VVariableDeclarationStatement
p76059
tp76060
I1
s(g15359
I42
g15360
Vinsert
p76061
I11
VCastExpression
p76062
tp76063
I1
s(g30429
I42
g30430
Vinsert
p76064
I9
VBooleanLiteral: true
p76065
tp76066
I1
s(g2228
I42
g2229
Vinsert
p76067
I83
VModifier: public
p76068
tp76069
I1
s(g23476
I42
g23477
Vinsert
p76070
I45
VStringLiteral: "\u005ct, extind, avgchn, IFNULL(degree, 1)\u005cn"
p76071
tp76072
I1
s(g932
I42
g933
Vinsert
p76073
I40
VQualifiedName: JdbcConstants.ORACLE
p76074
tp76075
I1
s(g4298
I42
g4299
Vinsert
p76076
I27
VInfixExpression: !=
p76077
tp76078
I2
s(g56219
I42
g56220
Vinsert
p76079
I45
VStringLiteral: "WHERE customer_id = 5000;"
p76080
tp76081
I1
s(g3816
I42
g3817
Vinsert
p76082
I42
VSimpleName: defaultHoldability
p76083
tp76084
I1
s(g16551
I42
g16552
Vinsert
p76085
I42
VSimpleName: denyCount
p76086
tp76087
I1
s(g1765
I42
g1766
Vinsert
p76088
I27
VInfixExpression: +
p76089
tp76090
I9
s(g14551
I42
g14552
Vinsert
p76091
I21
VExpressionStatement
p76092
tp76093
I4
s(g1536
I42
g1537
Vinsert
p76094
I57
VTypeLiteral
p76095
tp76096
I1
s(g5744
I42
g5745
Vinsert
p76097
I42
VSimpleName: SQLMethodInvokeExpr
p76098
tp76099
I6
s(g7955
I42
g7956
Vinsert
p76100
I33
VNullLiteral
p76101
tp76102
I1
s(g5709
I42
g5710
Vinsert
p76103
I32
VMethodInvocation
p76104
tp76105
I1
s(g21190
I42
g21191
Vinsert
p76106
I45
VStringLiteral: "\u005ctINTO acc_bal\u005cn"
p76107
tp76108
I1
s(g9475
I42
g9476
Vinsert
p76109
I45
VStringLiteral: "STORAGE (\u005cn"
p76110
tp76111
I12
s(g11790
I42
g11791
Vinsert
p76112
I33
VNullLiteral
p76113
tp76114
I2
s(g12573
I42
g12574
Vinsert
p76115
I42
VSimpleName: List
p76116
tp76117
I1
s(g60101
I42
g60102
Vinsert
p76118
I42
VSimpleName: dataSource
p76119
tp76120
I11
s(g18531
I42
g18532
Vinsert
p76121
I42
VSimpleName: select
p76122
tp76123
I2
s(g7631
I42
g7632
Vinsert
p76124
I42
VSimpleName: List
p76125
tp76126
I3
s(g13659
I42
g13660
Vinsert
p76127
I42
VSimpleName: test_mapping_createTable_oracle
p76128
tp76129
I3
s(g3457
I42
g3458
Vinsert
p76130
I14
VClassInstanceCreation
p76131
tp76132
I5
s(g7537
I42
g7538
Vinsert
p76133
I32
VMethodInvocation
p76134
tp76135
I2
s(g40052
I42
g40053
Vinsert
p76136
I59
VVariableDeclarationFragment
p76137
tp76138
I1
s(g23263
I42
g23264
Vinsert
p76139
I43
VSimpleType: DruidLobCreator
p76140
tp76141
I2
s(g3472
I42
g3473
Vinsert
p76142
I42
VSimpleName: ucase
p76143
tp76144
I1
s(g30418
I42
g30419
Vinsert
p76145
I31
VMethodDeclaration
p76146
tp76147
I1
s(g1456
I42
g1457
Vinsert
p76148
I59
VVariableDeclarationFragment
p76149
tp76150
I5
s(g15177
I42
g15178
Vinsert
p76151
I42
VSimpleName: providers
p76152
tp76153
I2
s(g10966
I42
g10967
Vinsert
p76154
I42
VSimpleName: dataSource
p76155
tp76156
I1
s(g3714
I42
g3715
Vinsert
p76157
I42
VSimpleName: stmt
p76158
tp76159
I4
s(g18763
I42
g18764
Vinsert
p76160
I42
VSimpleName: o2
p76161
tp76162
I2
s(g19741
I42
g19742
Vinsert
p76163
I14
VClassInstanceCreation
p76164
tp76165
I1
s(g6717
I42
g6718
Vinsert
p76166
I31
VMethodDeclaration
p76167
tp76168
I6
s(g21908
I42
g21909
Vinsert
p76169
I45
VStringLiteral: "\u005cn\u005ctdirectory_type NVARCHAR(60),"
p76170
tp76171
I1
s(g3360
I42
g3361
Vinsert
p76172
I42
VSimpleName: config
p76173
tp76174
I1
s(g21061
I42
g21062
Vinsert
p76175
I43
VSimpleType: DruidPanel
p76176
tp76177
I2
s(g5389
I42
g5390
Vinsert
p76178
I42
VSimpleName: init
p76179
tp76180
I1
s(g4834
I42
g4835
Vinsert
p76181
I42
VSimpleName: List
p76182
tp76183
I1
s(g5369
I42
g5370
Vinsert
p76184
I42
VSimpleName: Override
p76185
tp76186
I1
s(g12324
I42
g12325
Vinsert
p76187
I42
VSimpleName: MySqlShowVariantsStatement
p76188
tp76189
I1
s(Vinsert
p76190
I42
VSimpleName: assertEquals
p76191
Vinsert
p76192
I42
VSimpleName: getWhiteListHitCount
p76193
tp76194
I1
s(g6485
I42
g6486
Vinsert
p76195
I21
VExpressionStatement
p76196
tp76197
I1
s(g866
I42
g867
Vinsert
p76198
I42
VSimpleName: resultSet
p76199
tp76200
I2
s(g1665
I42
g1666
Vinsert
p76201
I45
VStringLiteral: "SET t2.start_time = to_date((\u005cn"
p76202
tp76203
I1
s(g6622
I42
g6623
Vinsert
p76204
I42
VSimpleName: check
p76205
tp76206
I1
s(g4204
I42
g4205
Vinsert
p76207
I45
VStringLiteral: "GROUP BY l_suppkey"
p76208
tp76209
I1
s(g1304
I42
g1305
Vinsert
p76210
I42
VSimpleName: MySqlLoopStatement
p76211
tp76212
I2
s(g3893
I42
g3894
Vinsert
p76213
I42
VSimpleName: using
p76214
tp76215
I1
s(g527
I42
g528
Vinsert
p76216
I45
VStringLiteral: "Socket closed"
p76217
tp76218
I1
s(g47974
I42
g47975
Vinsert
p76219
I45
VStringLiteral: "SELECT count(*) FROM T1, (SELECT DISTINCT parent_id AS parentId FROM T2 a1 WHERE FSEQ IN (?) AND NOT order_from = ? AND status IN (?) ) b WHERE ID = b.parentId AND GMT_CREATE >= to_date(?, ?) AND GMT_CREATE <= to_date(?, ?)"
p76220
tp76221
I1
s(g10710
I42
g10711
Vinsert
p76222
I45
VStringLiteral: "-sql"
p76223
tp76224
I1
s(g23293
I42
g23294
Vinsert
p76225
I42
VSimpleName: assertNotNull
p76226
tp76227
I16
s(g886
I42
g887
Vinsert
p76228
I42
VSimpleName: cipherText
p76229
tp76230
I1
s(g17301
I42
g17302
Vinsert
p76231
I25
VIfStatement
p76232
tp76233
I1
s(g46
I42
g47
Vinsert
p76234
I25
VIfStatement
p76235
tp76236
I16
s(g15761
I42
g15762
Vinsert
p76237
I42
VSimpleName: SQLOver
p76238
tp76239
I1
s(g5597
I42
g5598
Vinsert
p76240
I60
VVariableDeclarationStatement
p76241
tp76242
I2
s(g12397
I42
g12398
Vinsert
p76243
I45
VStringLiteral: "\u005ct\u005ctOR M.CERTIFICATE LIKE ('%' || ? || '%')\u005cn"
p76244
tp76245
I1
s(g25975
I42
g25976
Vinsert
p76246
I34
VNumberLiteral: 0
p76247
tp76248
I6
s(g2604
I42
g2605
Vinsert
p76249
I42
VSimpleName: chain
p76250
tp76251
I1
s(g11890
I42
g11891
Vinsert
p76252
I60
VVariableDeclarationStatement
p76253
tp76254
I4
s(g6684
I42
g6685
Vinsert
p76255
I43
VSimpleType: SQLExpr
p76256
tp76257
I4
s(g8324
I42
g8325
Vinsert
p76258
I45
VStringLiteral: "\u005ct\u005ctACCESS PARAMETERS (\u005cn"
p76259
tp76260
I1
s(g8593
I42
g8594
Vinsert
p76261
I43
VSimpleType: ObjectName
p76262
tp76263
I2
s(g5419
I42
g5420
Vinsert
p76264
I60
VVariableDeclarationStatement
p76265
tp76266
I2
s(g24542
I42
g24543
Vinsert
p76267
I43
VSimpleType: SQLSelectStatement
p76268
tp76269
I3
s(g5470
I42
g5471
Vinsert
p76270
I21
VExpressionStatement
p76271
tp76272
I1
s(g1115
I42
g1116
Vinsert
p76273
I42
VSimpleName: Option
p76274
tp76275
I4
s(g8588
I42
g8589
Vinsert
p76276
I43
VSimpleType: MySqlWallProvider
p76277
tp76278
I63
s(g4859
I42
g4860
Vinsert
p76279
I8
VBlock
p76280
tp76281
I2
s(g45882
I42
g45883
Vinsert
p76282
I43
VSimpleType: SQLNumberExpr
p76283
tp76284
I1
s(g15485
I42
g15486
Vinsert
p76285
I14
VClassInstanceCreation
p76286
tp76287
I2
s(g6806
I42
g6807
Vinsert
p76288
I45
VStringLiteral: "jdbc:log4jdbc:sqlserver:"
p76289
tp76290
I1
s(g30575
I42
g30576
Vinsert
p76291
I38
VPrefixExpression: !
p76292
tp76293
I1
s(Vinsert
p76294
I42
VSimpleName: assertTrue
p76295
Vinsert
p76296
I42
VSimpleName: testORACLE
p76297
tp76298
I1
s(g49146
I42
g49147
Vinsert
p76299
I27
VInfixExpression: +
p76300
tp76301
I2
s(g3396
I42
g3397
Vinsert
p76302
I45
VStringLiteral: "\u005ct)\u005cn"
p76303
tp76304
I1
s(g7996
I42
g7997
Vinsert
p76305
I45
VStringLiteral: "ignore "
p76306
tp76307
I1
s(g20975
I42
g20976
Vinsert
p76308
I74
VParameterizedType: Map<String,Object>
p76309
tp76310
I1
s(g3302
I42
g3303
Vinsert
p76311
I45
VStringLiteral: "IDENTITY"
p76312
tp76313
I1
s(g8778
I42
g8779
Vinsert
p76314
I42
VSimpleName: millis
p76315
tp76316
I5
s(g4002
I42
g4003
Vinsert
p76317
I43
VSimpleType: MockPreparedStatement
p76318
tp76319
I1
s(g5485
I42
g5486
Vinsert
p76320
I42
VSimpleName: x
p76321
tp76322
I1
s(g10292
I42
g10293
Vinsert
p76323
I42
VSimpleName: Configuration
p76324
tp76325
I1
s(g19278
I42
g19279
Vinsert
p76326
I14
VClassInstanceCreation
p76327
tp76328
I1
s(g11150
I42
g11151
Vinsert
p76329
I11
VCastExpression
p76330
tp76331
I28
s(g562
I42
g563
Vinsert
p76332
I32
VMethodInvocation
p76333
tp76334
I62
s(g33687
I42
g33688
Vinsert
p76335
I42
VSimpleName: setUrl
p76336
tp76337
I3
s(g18573
I42
g18574
Vinsert
p76338
I59
VVariableDeclarationFragment
p76339
tp76340
I1
s(g17670
I42
g17671
Vinsert
p76341
I27
VInfixExpression: <
p76342
tp76343
I1
s(g2525
I42
g2526
Vinsert
p76344
I44
VSingleVariableDeclaration
p76345
tp76346
I36
s(g9753
I42
g9754
Vinsert
p76347
I59
VVariableDeclarationFragment
p76348
tp76349
I1
s(g17174
I42
g17175
Vinsert
p76350
I45
VStringLiteral: "\u005ct_, \u005cn"
p76351
tp76352
I1
s(Vinsert
p76353
I42
VSimpleName: getConnection
p76354
Vinsert
p76355
I42
VSimpleName: test_txn
p76356
tp76357
I1
s(g12313
I42
g12314
Vinsert
p76358
I43
VSimpleType: PGCircleExpr
p76359
tp76360
I2
s(g3826
I42
g3827
Vinsert
p76361
I60
VVariableDeclarationStatement
p76362
tp76363
I1
s(g3287
I42
g3288
Vinsert
p76364
I42
VSimpleName: conn
p76365
tp76366
I2
s(g13551
I42
g13552
Vinsert
p76367
I3
VArrayCreation
p76368
tp76369
I1
s(g366
I42
g367
Vinsert
p76370
I8
VBlock
p76371
tp76372
I3
s(Vinsert
p76373
I42
VSimpleName: toPGString
p76374
Vinsert
p76375
I45
VStringLiteral: "CREATE TABLE test_site_data_select_111\u005cn"
p76376
tp76377
I1
s(g4880
I42
g4881
Vinsert
p76378
I42
VSimpleName: statementList
p76379
tp76380
I29
s(g27736
I42
g27737
Vinsert
p76381
I42
VSimpleName: toUpperCase
p76382
tp76383
I1
s(g15204
I42
g15205
Vinsert
p76384
I39
VPrimitiveType: void
p76385
tp76386
I2
s(g5455
I42
g5456
Vinsert
p76387
I43
VSimpleType: SQLUpdateSetItem
p76388
tp76389
I1
s(g26789
I42
g26790
Vinsert
p76390
I42
VSimpleName: parser
p76391
tp76392
I64
s(g27620
I42
g27621
Vinsert
p76393
I42
VSimpleName: String
p76394
tp76395
I1
s(Vinsert
p76396
I42
VSimpleName: visit
p76397
Vinsert
p76398
I42
VSimpleName: union
p76399
tp76400
I1
s(g1208
I42
g1209
Vinsert
p76401
I42
VSimpleName: String
p76402
tp76403
I2
s(g24649
I42
g24650
Vinsert
p76404
I34
VNumberLiteral: 0
p76405
tp76406
I1
s(g26174
I42
g26175
Vinsert
p76407
I42
VSimpleName: executeTimeNano
p76408
tp76409
I1
s(g49245
I42
g49246
Vinsert
p76410
I60
VVariableDeclarationStatement
p76411
tp76412
I2
s(g1943
I42
g1944
Vinsert
p76413
I43
VSimpleType: SQLException
p76414
tp76415
I1
s(g13800
I42
g13801
Vinsert
p76416
I42
VSimpleName: token
p76417
tp76418
I2
s(g27538
I42
g27539
Vinsert
p76419
I42
VSimpleName: partitions
p76420
tp76421
I1
s(g37907
I42
g37908
Vinsert
p76422
I42
VSimpleName: substring
p76423
tp76424
I1
s(g4283
I42
g4284
Vinsert
p76425
I42
VSimpleName: item
p76426
tp76427
I1
s(g33587
I42
g33588
Vinsert
p76428
I45
VStringLiteral: " MAX_QUERIES_PER_HOUR "
p76429
tp76430
I1
s(g42032
I42
g42033
Vinsert
p76431
I45
VStringLiteral: "\u005cn --c_2"
p76432
tp76433
I1
s(g16359
I42
g16360
Vinsert
p76434
I32
VMethodInvocation
p76435
tp76436
I9
s(g6655
I42
g6656
Vinsert
p76437
I32
VMethodInvocation
p76438
tp76439
I1
s(g5854
I42
g5855
Vinsert
p76440
I27
VInfixExpression: ==
p76441
tp76442
I1
s(g156
I42
g157
Vinsert
p76443
I24
VForStatement
p76444
tp76445
I2
s(g14072
I42
g14073
Vinsert
p76446
I43
VSimpleType: SQLUpdateStatement
p76447
tp76448
I2
s(g4679
I42
g4680
Vinsert
p76449
I42
VSimpleName: assertEquals
p76450
tp76451
I1
s(g20777
I42
g20778
Vinsert
p76452
I43
VSimpleType: SQLName
p76453
tp76454
I2
s(g18168
I42
g18169
Vinsert
p76455
I45
VStringLiteral: "OPTION"
p76456
tp76457
I1
s(g6197
I42
g6198
Vinsert
p76458
I42
VSimpleName: addSortedByItem
p76459
tp76460
I2
s(g7216
I42
g7217
Vinsert
p76461
I43
VSimpleType: ArrayList
p76462
tp76463
I1
s(g20046
I42
g20047
Vinsert
p76464
I42
VSimpleName: MySqlRenameTableStatement
p76465
tp76466
I1
s(g37063
I42
g37064
Vinsert
p76467
I42
VSimpleName: Blob
p76468
tp76469
I1
s(g8233
I42
g8234
Vinsert
p76470
I42
VSimpleName: exprParser
p76471
tp76472
I1
s(g6450
I42
g6451
Vinsert
p76473
I42
VSimpleName: columnName
p76474
tp76475
I2
s(g26143
I42
g26144
Vinsert
p76476
I11
VCastExpression
p76477
tp76478
I6
s(g11816
I42
g11817
Vinsert
p76479
I45
VStringLiteral: "\u005ct, department_id\u005cn"
p76480
tp76481
I1
s(g22587
I42
g22588
Vinsert
p76482
I42
VSimpleName: Connection
p76483
tp76484
I1
s(Vinsert
p76485
I42
VSimpleName: length
p76486
Vinsert
p76487
I45
VStringLiteral: "/"
p76488
tp76489
I1
s(g12443
I42
g12444
Vinsert
p76490
I21
VExpressionStatement
p76491
tp76492
I6
s(Vinsert
p76493
I42
VSimpleName: append
p76494
Vinsert
p76495
I42
VSimpleName: month
p76496
tp76497
I1
s(g3073
I42
g3074
Vinsert
p76498
I42
VSimpleName: hasComment
p76499
tp76500
I6
s(g25138
I42
g25139
Vinsert
p76501
I40
VQualifiedName: Char.instance
p76502
tp76503
I1
s(g11448
I42
g11449
Vinsert
p76504
I34
VNumberLiteral: 2
p76505
tp76506
I1
s(g40603
I42
g40604
Vinsert
p76507
I45
VStringLiteral: "SELECT to_char(CreateDate || ' ' || CAST(HourArgment AS VARCHAR) || ':00:00'::TIMESTAMP, 'YYYY-MM-DD HH24') AS \u005c"intoTime \u005c"\u005cn"
p76508
tp76509
I1
s(g3659
I42
g3660
Vinsert
p76510
I36
VParenthesizedExpression
p76511
tp76512
I1
s(g11072
I42
g11073
Vinsert
p76513
I32
VMethodInvocation
p76514
tp76515
I9
s(g14295
I42
g14296
Vinsert
p76516
I8
VBlock
p76517
tp76518
I1
s(g19736
I42
g19737
Vinsert
p76519
I42
VSimpleName: SQLFeatureNotSupportedException
p76520
tp76521
I1
s(g16648
I42
g16649
Vinsert
p76522
I25
VIfStatement
p76523
tp76524
I12
s(g7970
I42
g7971
Vinsert
p76525
I7
VAssignment: =
p76526
tp76527
I1
s(g21765
I42
g21766
Vinsert
p76528
I62
VInstanceofExpression
p76529
tp76530
I2
s(g6187
I42
g6188
Vinsert
p76531
I45
VStringLiteral: "\u005ct\u005c"GROUP_ID\u005c", \u005cn"
p76532
tp76533
I1
s(g1800
I42
g1801
Vinsert
p76534
I8
VBlock
p76535
tp76536
I5
s(g19404
I42
g19405
Vinsert
p76537
I42
VSimpleName: toString
p76538
tp76539
I1
s(g1256
I42
g1257
Vinsert
p76540
I42
VSimpleName: minPoolSize
p76541
tp76542
I1
s(g18289
I42
g18290
Vinsert
p76543
I42
VSimpleName: Throwable
p76544
tp76545
I3
s(g1319
I42
g1320
Vinsert
p76546
I42
VSimpleName: foot
p76547
tp76548
I2
s(g3816
I42
g3817
Vinsert
p76549
I22
VFieldAccess
p76550
tp76551
I2
s(g9722
I42
g9723
Vinsert
p76552
I42
VSimpleName: where
p76553
tp76554
I3
s(g7965
I42
g7966
Vinsert
p76555
I8
VBlock
p76556
tp76557
I1
s(g20215
I42
g20216
Vinsert
p76558
I27
VInfixExpression: &&
p76559
tp76560
I2
s(g5216
I42
g5217
Vinsert
p76561
I42
VSimpleName: String
p76562
tp76563
I1
s(Vinsert
p76564
I42
VSimpleName: assertEquals
p76565
Vinsert
p76566
I45
VStringLiteral: "\u005cn\u005ctIMPORT PARTITION p1"
p76567
tp76568
I1
s(g5515
I42
g5516
Vinsert
p76569
I43
VSimpleType: Runnable
p76570
tp76571
I1
s(g25868
I42
g25869
Vinsert
p76572
I45
VStringLiteral: "\u005ctt3.city_id"
p76573
tp76574
I1
s(g25328
I42
g25329
Vinsert
p76575
I74
VParameterizedType: Class<T>
p76576
tp76577
I1
s(g18938
I42
g18939
Vinsert
p76578
I11
VCastExpression
p76579
tp76580
I9
s(g46265
I42
g46266
Vinsert
p76581
I42
VSimpleName: parser
p76582
tp76583
I2
s(g1420
I42
g1421
Vinsert
p76584
I36
VParenthesizedExpression
p76585
tp76586
I1
s(g12184
I42
g12185
Vinsert
p76587
I42
VSimpleName: constraintName
p76588
tp76589
I1
s(g2900
I42
g2901
Vinsert
p76590
I42
VSimpleName: stackTrace
p76591
tp76592
I1
s(g43158
I42
g43159
Vinsert
p76593
I42
VSimpleName: token
p76594
tp76595
I2
s(g10006
I42
g10007
Vinsert
p76596
I42
VSimpleName: SQLEvalVisitor
p76597
tp76598
I1
s(g5648
I42
g5649
Vinsert
p76599
I21
VExpressionStatement
p76600
tp76601
I3
s(g241
I42
g242
Vinsert
p76602
I43
VSimpleType: SQLName
p76603
tp76604
I2
s(g14630
I42
g14631
Vinsert
p76605
I41
VReturnStatement
p76606
tp76607
I3
s(g3875
I42
g3876
Vinsert
p76608
I42
VSimpleName: contextLocal
p76609
tp76610
I1
s(g12103
I42
g12104
Vinsert
p76611
I42
VSimpleName: fomatSQL
p76612
tp76613
I2
s(g11880
I42
g11881
Vinsert
p76614
I45
VStringLiteral: "\u005cn\u005ctPARTITION east VALUES ('INDIA'), "
p76615
tp76616
I2
s(g6612
I42
g6613
Vinsert
p76617
I32
VMethodInvocation
p76618
tp76619
I1
s(g43724
I42
g43725
Vinsert
p76620
I42
VSimpleName: setParameters
p76621
tp76622
I1
s(g5926
I42
g5927
Vinsert
p76623
I33
VNullLiteral
p76624
tp76625
I1
s(g1198
I42
g1199
Vinsert
p76626
I59
VVariableDeclarationFragment
p76627
tp76628
I3
s(Vinsert
p76629
I42
VSimpleName: prepareStatement
p76630
Vinsert
p76631
I45
VStringLiteral: "UPDATE m_sql_const SET flag = 1, value2 = ? WHERE id = ?"
p76632
tp76633
I1
s(g3770
I42
g3771
Vinsert
p76634
I42
VSimpleName: paramIndex
p76635
tp76636
I2
s(g3987
I42
g3988
Vinsert
p76637
I42
VSimpleName: rightJoin
p76638
tp76639
I1
s(g1642
I42
g1643
Vinsert
p76640
I32
VMethodInvocation
p76641
tp76642
I3
s(g5734
I42
g5735
Vinsert
p76643
I59
VVariableDeclarationFragment
p76644
tp76645
I2
s(g4183
I42
g4184
Vinsert
p76646
I45
VStringLiteral: "\u005ct\u005ctEND LOOP inner_loop;\u005cn"
p76647
tp76648
I1
s(g15490
I42
g15491
Vinsert
p76649
I32
VMethodInvocation
p76650
tp76651
I29
s(g2997
I42
g2998
Vinsert
p76652
I31
VMethodDeclaration
p76653
tp76654
I1
s(g29718
I42
g29719
Vinsert
p76655
I45
VStringLiteral: "\u005cnPCTFREE 10"
p76656
tp76657
I5
s(g10919
I42
g10920
Vinsert
p76658
I42
VSimpleName: servletConfig
p76659
tp76660
I1
s(g40077
I42
g40078
Vinsert
p76661
I43
VSimpleType: ProfileEntryStatValue
p76662
tp76663
I2
s(g1466
I42
g1467
Vinsert
p76664
I45
VStringLiteral: "ROWS"
p76665
tp76666
I1
s(Vinsert
p76667
I42
VSimpleName: println
p76668
Vinsert
p76669
I42
VSimpleName: exec_test
p76670
tp76671
I3
s(g7417
I42
g7418
Vinsert
p76672
I42
VSimpleName: SQLBinaryOpExpr
p76673
tp76674
I1
s(g51966
I42
g51967
Vinsert
p76675
I48
VSuperMethodInvocation
p76676
tp76677
I1
s(g20559
I42
g20560
Vinsert
p76678
I32
VMethodInvocation
p76679
tp76680
I2
s(g5384
I42
g5385
Vinsert
p76681
I42
VSimpleName: x
p76682
tp76683
I2
s(g8974
I42
g8975
Vinsert
p76684
I42
VSimpleName: Throwable
p76685
tp76686
I1
s(g20439
I42
g20440
Vinsert
p76687
I59
VVariableDeclarationFragment
p76688
tp76689
I2
s(g14026
I42
g14027
Vinsert
p76690
I44
VSingleVariableDeclaration
p76691
tp76692
I3
s(g18383
I42
g18384
Vinsert
p76693
I42
VSimpleName: s
p76694
tp76695
I1
s(g14083
I42
g14084
Vinsert
p76696
I40
VQualifiedName: Connection.TRANSACTION_NONE
p76697
tp76698
I1
s(g886
I42
g887
Vinsert
p76699
I42
VSimpleName: plainText
p76700
tp76701
I1
s(g25756
I42
g25757
Vinsert
p76702
I43
VSimpleType: TableStat
p76703
tp76704
I2
s(g16346
I42
g16347
Vinsert
p76705
I42
VSimpleName: SQLCastExpr
p76706
tp76707
I1
s(Vinsert
p76708
I42
VSimpleName: evalExpr
p76709
Vinsert
p76710
I42
VSimpleName: log10
p76711
tp76712
I1
s(g5969
I42
g5970
Vinsert
p76713
I42
VSimpleName: dataSource
p76714
tp76715
I2
s(Vinsert
p76716
I42
VSimpleName: endVisit
p76717
Vinsert
p76718
I42
VSimpleName: items
p76719
tp76720
I3
s(g7450
I42
g7451
Vinsert
p76721
I42
VSimpleName: Enumeration
p76722
tp76723
I1
s(g10892
I42
g10893
Vinsert
p76724
I45
VStringLiteral: "\u005ct\u005ct\u005ct)\u005cn"
p76725
tp76726
I1
s(g3992
I42
g3993
Vinsert
p76727
I8
VBlock
p76728
tp76729
I1
s(g39942
I42
g39943
Vinsert
p76730
I42
VSimpleName: PGBoxExpr
p76731
tp76732
I1
s(g2054
I42
g2055
Vinsert
p76733
I42
VSimpleName: addUpdateCount
p76734
tp76735
I1
s(g11
I42
g12
Vinsert
p76736
I45
VStringLiteral: "show tables"
p76737
tp76738
I1
s(g39953
I42
g39954
Vinsert
p76739
I45
VStringLiteral: "          select   product_id,"
p76740
tp76741
I1
s(g2069
I42
g2070
Vinsert
p76742
I8
VBlock
p76743
tp76744
I1
s(g11197
I42
g11198
Vinsert
p76745
I40
VQualifiedName: TableStat.Relationship
p76746
tp76747
I1
s(g12029
I42
g12030
Vinsert
p76748
I42
VSimpleName: execute
p76749
tp76750
I3
s(g24686
I42
g24687
Vinsert
p76751
I52
VThisExpression
p76752
tp76753
I1
s(g1090
I42
g1091
Vinsert
p76754
I42
VSimpleName: value
p76755
tp76756
I1
s(g12227
I42
g12228
Vinsert
p76757
I27
VInfixExpression: +
p76758
tp76759
I3
s(g15500
I42
g15501
Vinsert
p76760
I45
VStringLiteral: "Druid"
p76761
tp76762
I1
s(g25125
I42
g25126
Vinsert
p76763
I42
VSimpleName: PublicKey
p76764
tp76765
I1
s(g14274
I42
g14275
Vinsert
p76766
I25
VIfStatement
p76767
tp76768
I1
s(g7612
I42
g7613
Vinsert
p76769
I42
VSimpleName: print
p76770
tp76771
I1
s(g1665
I42
g1666
Vinsert
p76772
I45
VStringLiteral: "), 'yyyy-mm-dd HH24:mi:ss')\u005cn"
p76773
tp76774
I1
s(g28190
I42
g28191
Vinsert
p76775
I21
VExpressionStatement
p76776
tp76777
I2
s(g1923
I42
g1924
Vinsert
p76778
I42
VSimpleName: SQLExpr
p76779
tp76780
I2
s(g29718
I42
g29719
Vinsert
p76781
I45
VStringLiteral: "\u005cnINITRANS 1"
p76782
tp76783
I5
s(g20769
I42
g20770
Vinsert
p76784
I74
VParameterizedType: ArrayList<Map<String,Object>>
p76785
tp76786
I3
s(g75680
I42
g75681
Vinsert
p76787
I43
VSimpleType: MySqlShowCreateProcedureStatement
p76788
tp76789
I2
s(g18749
I42
g18750
Vinsert
p76790
I40
VQualifiedName: Token.CONSTRAINT
p76791
tp76792
I1
s(g76190
I42
g76191
Vinsert
p76793
I42
VSimpleName: getWhiteList
p76794
tp76795
I1
s(g3452
I42
g3453
Vinsert
p76796
I43
VSimpleType: org.apache.tomcat.jdbc.pool.DataSource
p76797
tp76798
I2
s(g76667
I42
g76668
Vinsert
p76799
I45
VStringLiteral: "bvt/parser/oracle-8.txt"
p76800
tp76801
I1
s(g17507
I42
g17508
Vinsert
p76802
I42
VSimpleName: visit
p76803
tp76804
I1
s(g1385
I42
g1386
Vinsert
p76805
I42
VSimpleName: stmt
p76806
tp76807
I4
s(g30341
I42
g30342
Vinsert
p76808
I42
VSimpleName: whiteList
p76809
tp76810
I2
s(g10508
I42
g10509
Vinsert
p76811
I42
VSimpleName: nextFilter
p76812
tp76813
I1
s(g56999
I42
g57000
Vinsert
p76814
I45
VStringLiteral: ","
p76815
tp76816
I1
s(g10467
I42
g10468
Vinsert
p76817
I42
VSimpleName: Map
p76818
tp76819
I3
s(g14909
I42
g14910
Vinsert
p76820
I42
VSimpleName: maxSize
p76821
tp76822
I2
s(g13066
I42
g13067
Vinsert
p76823
I11
VCastExpression
p76824
tp76825
I1
s(g27355
I42
g27356
Vinsert
p76826
I42
VSimpleName: emptyList
p76827
tp76828
I1
s(g29483
I42
g29484
Vinsert
p76829
I42
VSimpleName: SQLSelectListCache
p76830
tp76831
I1
s(g3113
I42
g3114
Vinsert
p76832
I42
VSimpleName: println
p76833
tp76834
I2
s(g30808
I42
g30809
Vinsert
p76835
I42
VSimpleName: MySqlShowMasterLogsStatement
p76836
tp76837
I1
s(g20259
I42
g20260
Vinsert
p76838
I42
VSimpleName: op
p76839
tp76840
I2
s(g3012
I42
g3013
Vinsert
p76841
I27
VInfixExpression: ==
p76842
tp76843
I1
s(g23717
I42
g23718
Vinsert
p76844
I42
VSimpleName: Long
p76845
tp76846
I4
s(g1810
I42
g1811
Vinsert
p76847
I45
VStringLiteral: "     ELSIF V_COMPARE >= F_NLSSORT('?') AND V_COMPARE <= F_NLSSORT('?') THEN\u005cn"
p76848
tp76849
I1
s(g4217
I42
g4218
Vinsert
p76850
I42
VSimpleName: selectList
p76851
tp76852
I2
s(g15456
I42
g15457
Vinsert
p76853
I39
VPrimitiveType: void
p76854
tp76855
I2
s(g16831
I42
g16832
Vinsert
p76856
I42
VSimpleName: acceptIdentifier
p76857
tp76858
I1
s(g15334
I42
g15335
Vinsert
p76859
I42
VSimpleName: x
p76860
tp76861
I1
s(g19339
I42
g19340
Vinsert
p76862
I83
VModifier: static
p76863
tp76864
I1
s(g2930
I42
g2931
Vinsert
p76865
I42
VSimpleName: print0
p76866
tp76867
I1
s(g2930
I42
g2931
Vinsert
p76868
I42
VSimpleName: Boolean
p76869
tp76870
I1
s(g10021
I42
g10022
Vinsert
p76871
I27
VInfixExpression: +
p76872
tp76873
I1
s(g3679
I42
g3680
Vinsert
p76874
I42
VSimpleName: length
p76875
tp76876
I1
s(g6031
I42
g6032
Vinsert
p76877
I45
VStringLiteral: ")"
p76878
tp76879
I1
s(g9137
I42
g9138
Vinsert
p76880
I42
VSimpleName: StatementConverter
p76881
tp76882
I1
s(g5007
I42
g5008
Vinsert
p76883
I32
VMethodInvocation
p76884
tp76885
I2
s(g12864
I42
g12865
Vinsert
p76886
I42
VSimpleName: length
p76887
tp76888
I1
s(g4248
I42
g4249
Vinsert
p76889
I8
VBlock
p76890
tp76891
I149
s(g9773
I42
g9774
Vinsert
p76892
I59
VVariableDeclarationFragment
p76893
tp76894
I2
s(g1339
I42
g1340
Vinsert
p76895
I39
VPrimitiveType: void
p76896
tp76897
I23
s(g13957
I42
g13958
Vinsert
p76898
I42
VSimpleName: Arrays
p76899
tp76900
I1
s(g3709
I42
g3710
Vinsert
p76901
I42
VSimpleName: dataSources
p76902
tp76903
I1
s(g3544
I42
g3545
Vinsert
p76904
I45
VStringLiteral: "where not (tt.os = 'all'\u005cn"
p76905
tp76906
I1
s(g7158
I42
g7159
Vinsert
p76907
I42
VSimpleName: ResultSetMetaData
p76908
tp76909
I1
s(g41161
I42
g41162
Vinsert
p76910
I42
VSimpleName: StatFilter
p76911
tp76912
I2
s(g8788
I42
g8789
Vinsert
p76913
I42
VSimpleName: createResolveVisitor
p76914
tp76915
I1
s(g3495
I42
g3496
Vinsert
p76916
I42
VSimpleName: SQLSelect
p76917
tp76918
I1
s(g901
I42
g902
Vinsert
p76919
I13
VCharacterLiteral: '"'
p76920
tp76921
I1
s(g20411
I42
g20412
Vinsert
p76922
I14
VClassInstanceCreation
p76923
tp76924
I1
s(Vinsert
p76925
I42
VSimpleName: put
p76926
Vinsert
p76927
I42
VSimpleName: info
p76928
tp76929
I5
s(g47604
I42
g47605
Vinsert
p76930
I45
VStringLiteral: "ADD STATISTIC tbl_shop COLUMN_SUM shop_name"
p76931
tp76932
I1
s(g6354
I42
g6355
Vinsert
p76933
I60
VVariableDeclarationStatement
p76934
tp76935
I18
s(g7141
I42
g7142
Vinsert
p76936
I21
VExpressionStatement
p76937
tp76938
I1
s(g18930
I42
g18931
Vinsert
p76939
I42
VSimpleName: i
p76940
tp76941
I3
s(g14279
I42
g14280
Vinsert
p76942
I45
VStringLiteral: "\u005ct\u005ct, a.ROW_WAIT_ROW#, b.TYPE\u005cn"
p76943
tp76944
I1
s(g73338
I42
g73339
Vinsert
p76945
I43
VSimpleType: SQLColumnConstraint
p76946
tp76947
I1
s(g17550
I42
g17551
Vinsert
p76948
I42
VSimpleName: assertFalse
p76949
tp76950
I1
s(g8752
I42
g8753
Vinsert
p76951
I43
VSimpleType: WebSessionStat
p76952
tp76953
I1
s(g12222
I42
g12223
Vinsert
p76954
I8
VBlock
p76955
tp76956
I1
s(g876
I42
g877
Vinsert
p76957
I45
VStringLiteral: "PARTITIONED BY (\u005cn"
p76958
tp76959
I1
s(g19539
I42
g19540
Vinsert
p76960
I42
VSimpleName: getFactoring
p76961
tp76962
I1
s(g21908
I42
g21909
Vinsert
p76963
I45
VStringLiteral: "\u005cn\u005ctimpl_class NVARCHAR(255),"
p76964
tp76965
I1
s(g1715
I42
g1716
Vinsert
p76966
I39
VPrimitiveType: boolean
p76967
tp76968
I1
s(g10116
I42
g10117
Vinsert
p76969
I42
VSimpleName: getTransactionManager
p76970
tp76971
I1
s(g1236
I42
g1237
Vinsert
p76972
I42
VSimpleName: getCreateNanoSpan
p76973
tp76974
I1
s(g1948
I42
g1949
Vinsert
p76975
I43
VSimpleType: String
p76976
tp76977
I1
s(g14933
I42
g14934
Vinsert
p76978
I42
VSimpleName: toString
p76979
tp76980
I1
s(g4437
I42
g4438
Vinsert
p76981
I43
VSimpleType: Properties
p76982
tp76983
I4
s(g40077
I42
g40078
Vinsert
p76984
I42
VSimpleName: ProfileEntryStatValue
p76985
tp76986
I2
s(g8075
I42
g8076
Vinsert
p76987
I21
VExpressionStatement
p76988
tp76989
I1
s(g71
I42
g72
Vinsert
p76990
I7
VAssignment: =
p76991
tp76992
I1
s(g3549
I42
g3550
Vinsert
p76993
I42
VSimpleName: Entry
p76994
tp76995
I1
s(g18270
I42
g18271
Vinsert
p76996
I42
VSimpleName: nextToken
p76997
tp76998
I1
s(g13543
I42
g13544
Vinsert
p76999
I45
VStringLiteral: "WHERE i.contract_header_id = ?"
p77000
tp77001
I1
s(g4661
I42
g4662
Vinsert
p77002
I39
VPrimitiveType: void
p77003
tp77004
I1
s(g11996
I42
g11997
Vinsert
p77005
I42
VSimpleName: EVAL_VALUE
p77006
tp77007
I1
s(g40735
I42
g40736
Vinsert
p77008
I43
VSimpleType: OracleDbLinkExpr
p77009
tp77010
I1
s(g2364
I42
g2365
Vinsert
p77011
I59
VVariableDeclarationFragment
p77012
tp77013
I2
s(g34000
I42
g34001
Vinsert
p77014
I42
VSimpleName: expr
p77015
tp77016
I31
s(g7121
I42
g7122
Vinsert
p77017
I42
VSimpleName: sqlList
p77018
tp77019
I1
s(g40520
I42
g40521
Vinsert
p77020
I43
VSimpleType: SQLInsertStatement
p77021
tp77022
I16
s(g22193
I42
g22194
Vinsert
p77023
I60
VVariableDeclarationStatement
p77024
tp77025
I1
s(g786
I42
g787
Vinsert
p77026
I42
VSimpleName: log
p77027
tp77028
I2
s(g11542
I42
g11543
Vinsert
p77029
I27
VInfixExpression: <
p77030
tp77031
I2
s(g1868
I42
g1869
Vinsert
p77032
I8
VBlock
p77033
tp77034
I1
s(g1943
I42
g1944
Vinsert
p77035
I8
VBlock
p77036
tp77037
I1
s(g1319
I42
g1320
Vinsert
p77038
I83
VModifier: static
p77039
tp77040
I1
s(g51643
I42
g51644
Vinsert
p77041
I42
VSimpleName: parseLoop
p77042
tp77043
I1
s(g29658
I42
g29659
Vinsert
p77044
I52
VThisExpression
p77045
tp77046
I25
s(g241
I42
g242
Vinsert
p77047
I11
VCastExpression
p77048
tp77049
I10
s(g18021
I42
g18022
Vinsert
p77050
I42
VSimpleName: accept0
p77051
tp77052
I1
s(g37280
I42
g37281
Vinsert
p77053
I42
VSimpleName: map
p77054
tp77055
I1
s(g5128
I42
g5129
Vinsert
p77056
I45
VStringLiteral: "| c_varchar    | varchar(10)  | NO   |     | NULL    |       |\u005cn"
p77057
tp77058
I1
s(g60101
I42
g60102
Vinsert
p77059
I9
VBooleanLiteral: false
p77060
tp77061
I3
s(Vinsert
p77062
I42
VSimpleName: setParent
p77063
Vinsert
p77064
I42
VSimpleName: setFileBlockSize
p77065
tp77066
I1
s(g10874
I42
g10875
Vinsert
p77067
I59
VVariableDeclarationFragment
p77068
tp77069
I1
s(g2880
I42
g2881
Vinsert
p77070
I45
VStringLiteral: "\u005cn\u005ctstreet_address VARCHAR2(40),"
p77071
tp77072
I4
s(g2223
I42
g2224
Vinsert
p77073
I40
VQualifiedName: Token.END
p77074
tp77075
I1
s(g9768
I42
g9769
Vinsert
p77076
I43
VSimpleType: MySqlForeignKey
p77077
tp77078
I1
s(g700
I42
g701
Vinsert
p77079
I42
VSimpleName: containsKey
p77080
tp77081
I1
s(g32617
I42
g32618
Vinsert
p77082
I42
VSimpleName: Driver
p77083
tp77084
I1
s(g29367
I42
g29368
Vinsert
p77085
I42
VSimpleName: result
p77086
tp77087
I51
s(g25422
I42
g25423
Vinsert
p77088
I21
VExpressionStatement
p77089
tp77090
I6
s(g37888
I42
g37889
Vinsert
p77091
I42
VSimpleName: getParameters
p77092
tp77093
I1
s(g7288
I42
g7289
Vinsert
p77094
I42
VSimpleName: assertEquals
p77095
tp77096
I1
s(g18278
I42
g18279
Vinsert
p77097
I43
VSimpleType: SQLAssignItem
p77098
tp77099
I1
s(g9433
I42
g9434
Vinsert
p77100
I42
VSimpleName: destroyScheduler
p77101
tp77102
I1
s(g7078
I42
g7079
Vinsert
p77103
I45
VStringLiteral: ")"
p77104
tp77105
I1
s(g62563
I42
g62564
Vinsert
p77106
I43
VSimpleType: OracleHint
p77107
tp77108
I2
s(g34239
I42
g34240
Vinsert
p77109
I42
VSimpleName: OdpsASTVisitor
p77110
tp77111
I20
s(g18632
I42
g18633
Vinsert
p77112
I40
VQualifiedName: com.alibaba.druid.sql.dialect.mysql.ast.expr.MySqlCharExpr
p77113
tp77114
I1
s(g17291
I42
g17292
Vinsert
p77115
I42
VSimpleName: x
p77116
tp77117
I1
s(g738
I42
g739
Vinsert
p77118
I74
VParameterizedType: HashMap<String,String>
p77119
tp77120
I1
s(g32934
I42
g32935
Vinsert
p77121
I42
VSimpleName: parser
p77122
tp77123
I5
s(g25882
I42
g25883
Vinsert
p77124
I83
VModifier: public
p77125
tp77126
I1
s(g27372
I42
g27373
Vinsert
p77127
I36
VParenthesizedExpression
p77128
tp77129
I8
s(g23026
I42
g23027
Vinsert
p77130
I43
VSimpleType: HBQLStatementParser
p77131
tp77132
I1
s(g34654
I42
g34655
Vinsert
p77133
I45
VStringLiteral: "\u005ct\u005ctAND CAST(b.paid_date AS varchar(10)) >= '2016-01-01'\u005cn"
p77134
tp77135
I1
s(g2568
I42
g2569
Vinsert
p77136
I42
VSimpleName: parseOptions
p77137
tp77138
I1
s(g7063
I42
g7064
Vinsert
p77139
I60
VVariableDeclarationStatement
p77140
tp77141
I1
s(Vinsert
p77142
I42
VSimpleName: visit
p77143
Vinsert
p77144
I42
VSimpleName: host
p77145
tp77146
I1
s(g53297
I42
g53298
Vinsert
p77147
I43
VSimpleType: AtomicInteger
p77148
tp77149
I2
s(g680
I42
g681
Vinsert
p77150
I42
VSimpleName: size
p77151
tp77152
I2
s(g11935
I42
g11936
Vinsert
p77153
I42
VSimpleName: x
p77154
tp77155
I2
s(g6771
I42
g6772
Vinsert
p77156
I25
VIfStatement
p77157
tp77158
I1
s(g16192
I42
g16193
Vinsert
p77159
I42
VSimpleName: addEntry
p77160
tp77161
I1
s(g12671
I42
g12672
Vinsert
p77162
I32
VMethodInvocation
p77163
tp77164
I1
s(g36541
I42
g36542
Vinsert
p77165
I40
VQualifiedName: com.alibaba.druid.sql.SQLUtils
p77166
tp77167
I1
s(g5409
I42
g5410
Vinsert
p77168
I59
VVariableDeclarationFragment
p77169
tp77170
I13
s(g61684
I42
g61685
Vinsert
p77171
I42
VSimpleName: addJdbcFetchRowCount
p77172
tp77173
I1
s(g16685
I42
g16686
Vinsert
p77174
I42
VSimpleName: run
p77175
tp77176
I1
s(g17718
I42
g17719
Vinsert
p77177
I60
VVariableDeclarationStatement
p77178
tp77179
I3
s(g10174
I42
g10175
Vinsert
p77180
I42
VSimpleName: isPermitTable
p77181
tp77182
I1
s(g20888
I42
g20889
Vinsert
p77183
I8
VBlock
p77184
tp77185
I2
s(g3261
I42
g3262
Vinsert
p77186
I42
VSimpleName: insertStatement
p77187
tp77188
I1
s(g19278
I42
g19279
Vinsert
p77189
I27
VInfixExpression: !=
p77190
tp77191
I1
s(g2464
I42
g2465
Vinsert
p77192
I42
VSimpleName: FrameworkConfig
p77193
tp77194
I1
s(g6252
I42
g6253
Vinsert
p77195
I25
VIfStatement
p77196
tp77197
I1
s(g11585
I42
g11586
Vinsert
p77198
I45
VStringLiteral: "replaceCount"
p77199
tp77200
I1
s(g1075
I42
g1076
Vinsert
p77201
I42
VSimpleName: pooledStmt1
p77202
tp77203
I1
s(g1491
I42
g1492
Vinsert
p77204
I42
VSimpleName: DruidStatProperties
p77205
tp77206
I1
s(g52754
I42
g52755
Vinsert
p77207
I42
VSimpleName: dataType
p77208
tp77209
I2
s(g12639
I42
g12640
Vinsert
p77210
I32
VMethodInvocation
p77211
tp77212
I41
s(g7827
I42
g7828
Vinsert
p77213
I42
VSimpleName: driver
p77214
tp77215
I2
s(g14540
I42
g14541
Vinsert
p77216
I60
VVariableDeclarationStatement
p77217
tp77218
I1
s(g3603
I42
g3604
Vinsert
p77219
I42
VSimpleName: printAndAccept
p77220
tp77221
I4
s(g5429
I42
g5430
Vinsert
p77222
I33
VNullLiteral
p77223
tp77224
I1
s(g587
I42
g588
Vinsert
p77225
I45
VStringLiteral: "    where WEB_USER_ID=2 and EMAIL='1223@123.com'"
p77226
tp77227
I1
s(g25125
I42
g25126
Vinsert
p77228
I43
VSimpleType: RsaDecrypter
p77229
tp77230
I2
s(g5584
I42
g5585
Vinsert
p77231
I27
VInfixExpression: ==
p77232
tp77233
I1
s(g9428
I42
g9429
Vinsert
p77234
I83
VModifier: public
p77235
tp77236
I9
s(g11464
I42
g11465
Vinsert
p77237
I42
VSimpleName: fieldName
p77238
tp77239
I1
s(g4217
I42
g4218
Vinsert
p77240
I59
VVariableDeclarationFragment
p77241
tp77242
I11
s(g1448
I42
g1449
Vinsert
p77243
I42
VSimpleName: measureColumn
p77244
tp77245
I2
s(g5744
I42
g5745
Vinsert
p77246
I32
VMethodInvocation
p77247
tp77248
I36
s(g4669
I42
g4670
Vinsert
p77249
I33
VNullLiteral
p77250
tp77251
I3
s(g2702
I42
g2703
Vinsert
p77252
I21
VExpressionStatement
p77253
tp77254
I1
s(g13032
I42
g13033
Vinsert
p77255
I8
VBlock
p77256
tp77257
I1
s(g5409
I42
g5410
Vinsert
p77258
I21
VExpressionStatement
p77259
tp77260
I10
s(g12262
I42
g12263
Vinsert
p77261
I45
VStringLiteral: "SYNONYM"
p77262
tp77263
I1
s(g9934
I42
g9935
Vinsert
p77264
I43
VSimpleType: SQLName
p77265
tp77266
I3
s(g4404
I42
g4405
Vinsert
p77267
I42
VSimpleName: lexer
p77268
tp77269
I1
s(g9629
I42
g9630
Vinsert
p77270
I31
VMethodDeclaration
p77271
tp77272
I2
s(g13311
I42
g13312
Vinsert
p77273
I45
VStringLiteral: "CREATE TABLE order_detail ("
p77274
tp77275
I2
s(g58237
I42
g58238
Vinsert
p77276
I43
VSimpleType: DB2StatementParser
p77277
tp77278
I1
s(g9519
I42
g9520
Vinsert
p77279
I42
VSimpleName: Xid
p77280
tp77281
I1
s(g3500
I42
g3501
Vinsert
p77282
I44
VSingleVariableDeclaration
p77283
tp77284
I1
s(g5859
I42
g5860
Vinsert
p77285
I42
VSimpleName: matcher
p77286
tp77287
I2
s(g2515
I42
g2516
Vinsert
p77288
I43
VSimpleType: String
p77289
tp77290
I2
s(g9488
I42
g9489
Vinsert
p77291
I42
VSimpleName: DruidPooledConnection
p77292
tp77293
I4
s(g15018
I42
g15019
Vinsert
p77294
I42
VSimpleName: print
p77295
tp77296
I2
s(g3401
I42
g3402
Vinsert
p77297
I42
VSimpleName: accept
p77298
tp77299
I1
s(g7527
I42
g7528
Vinsert
p77300
I21
VExpressionStatement
p77301
tp77302
I2
s(g8298
I42
g8299
Vinsert
p77303
I32
VMethodInvocation
p77304
tp77305
I157
s(g45304
I42
g45305
Vinsert
p77306
I14
VClassInstanceCreation
p77307
tp77308
I1
s(g14072
I42
g14073
Vinsert
p77309
I44
VSingleVariableDeclaration
p77310
tp77311
I3
s(g10016
I42
g10017
Vinsert
p77312
I60
VVariableDeclarationStatement
p77313
tp77314
I4
s(g20100
I42
g20101
Vinsert
p77315
I42
VSimpleName: SQLTableSource
p77316
tp77317
I2
s(g3271
I42
g3272
Vinsert
p77318
I34
VNumberLiteral: 5
p77319
tp77320
I1
s(Vinsert
p77321
I42
VSimpleName: add
p77322
Vinsert
p77323
I42
VSimpleName: statementName
p77324
tp77325
I1
s(g12270
I42
g12271
Vinsert
p77326
I45
VStringLiteral: "\u005cn\u005ctPARTITION p1 VALUES LESS THAN (1),"
p77327
tp77328
I1
s(g11161
I42
g11162
Vinsert
p77329
I42
VSimpleName: AGGREGATE_FUNCTIONS
p77330
tp77331
I1
s(g36442
I42
g36443
Vinsert
p77332
I43
VSimpleType: OracleDatetimeExpr
p77333
tp77334
I1
s(g2019
I42
g2020
Vinsert
p77335
I36
VParenthesizedExpression
p77336
tp77337
I1
s(g11307
I42
g11308
Vinsert
p77338
I43
VSimpleType: List
p77339
tp77340
I1
s(g14896
I42
g14897
Vinsert
p77341
I42
VSimpleName: DB2SelectQueryBlock
p77342
tp77343
I1
s(g37169
I42
g37170
Vinsert
p77344
I42
VSimpleName: printSet
p77345
tp77346
I1
s(g36005
I42
g36006
Vinsert
p77347
I33
VNullLiteral
p77348
tp77349
I1
s(g11281
I42
g11282
Vinsert
p77350
I42
VSimpleName: SQLHint
p77351
tp77352
I4
s(g4391
I42
g4392
Vinsert
p77353
I42
VSimpleName: startTransaction
p77354
tp77355
I1
s(g10571
I42
g10572
Vinsert
p77356
I59
VVariableDeclarationFragment
p77357
tp77358
I11
s(g13437
I42
g13438
Vinsert
p77359
I45
VStringLiteral: "\u005ct\u005ctFROM sup_task st\u005cn"
p77360
tp77361
I1
s(g9137
I42
g9138
Vinsert
p77362
I43
VSimpleType: SQLSelectStatement
p77363
tp77364
I1
s(g296
I42
g297
Vinsert
p77365
I42
VSimpleName: SQLNullExpr
p77366
tp77367
I3
s(g9899
I42
g9900
Vinsert
p77368
I43
VSimpleType: Option
p77369
tp77370
I1
s(g5287
I42
g5288
Vinsert
p77371
I42
VSimpleName: accept0
p77372
tp77373
I240
s(g9670
I42
g9671
Vinsert
p77374
I59
VVariableDeclarationFragment
p77375
tp77376
I267
s(g31
I42
g32
Vinsert
p77377
I33
VNullLiteral
p77378
tp77379
I2
s(g8075
I42
g8076
Vinsert
p77380
I62
VInstanceofExpression
p77381
tp77382
I1
s(g39564
I42
g39565
Vinsert
p77383
I40
VQualifiedName: SQLUtils.DEFAULT_LCASE_FORMAT_OPTION
p77384
tp77385
I19
s(g4563
I42
g4564
Vinsert
p77386
I38
VPrefixExpression: -
p77387
tp77388
I1
s(g21845
I42
g21846
Vinsert
p77389
I42
VSimpleName: value
p77390
tp77391
I1
s(g8293
I42
g8294
Vinsert
p77392
I42
VSimpleName: druidStatInterceptor
p77393
tp77394
I1
s(g19307
I42
g19308
Vinsert
p77395
I32
VMethodInvocation
p77396
tp77397
I3
s(g12661
I42
g12662
Vinsert
p77398
I43
VSimpleType: SQLCaseExpr
p77399
tp77400
I1
s(g967
I42
g968
Vinsert
p77401
I40
VQualifiedName: fields.length
p77402
tp77403
I1
s(g1943
I42
g1944
Vinsert
p77404
I42
VSimpleName: clearDefines
p77405
tp77406
I1
s(g5579
I42
g5580
Vinsert
p77407
I45
VStringLiteral: "-- http://dev.mysql.com/doc/refman/5.6/en/create-server.html\u005cn"
p77408
tp77409
I1
s(g20540
I42
g20541
Vinsert
p77410
I42
VSimpleName: createStatement
p77411
tp77412
I1
s(g17146
I42
g17147
Vinsert
p77413
I42
VSimpleName: mode
p77414
tp77415
I2
s(g10765
I42
g10766
Vinsert
p77416
I8
VBlock
p77417
tp77418
I2
s(g8588
I42
g8589
Vinsert
p77419
I60
VVariableDeclarationStatement
p77420
tp77421
I70
s(g19043
I42
g19044
Vinsert
p77422
I34
VNumberLiteral: 0
p77423
tp77424
I2
s(g23717
I42
g23718
Vinsert
p77425
I54
VTryStatement
p77426
tp77427
I1
s(g32771
I42
g32772
Vinsert
p77428
I32
VMethodInvocation
p77429
tp77430
I270
s(g8752
I42
g8753
Vinsert
p77431
I43
VSimpleType: String
p77432
tp77433
I1
s(Vinsert
p77434
I42
VSimpleName: assertTrue
p77435
Vinsert
p77436
I42
VSimpleName: MySqlWallTest18
p77437
tp77438
I1
s(g15514
I42
g15515
Vinsert
p77439
I41
VReturnStatement
p77440
tp77441
I1
s(g11124
I42
g11125
Vinsert
p77442
I43
VSimpleType: SQLSelect
p77443
tp77444
I1
s(g2089
I42
g2090
Vinsert
p77445
I45
VStringLiteral: "select * from t where NOT(UNHEX(HEX(FNAME)) != FNAME)"
p77446
tp77447
I1
s(g10438
I42
g10439
Vinsert
p77448
I21
VExpressionStatement
p77449
tp77450
I1
s(g13957
I42
g13958
Vinsert
p77451
I74
VParameterizedType: Map.Entry<String,Token>
p77452
tp77453
I1
s(g8381
I42
g8382
Vinsert
p77454
I27
VInfixExpression: !=
p77455
tp77456
I1
s(g1888
I42
g1889
Vinsert
p77457
I43
VSimpleType: java.sql.Time
p77458
tp77459
I1
s(g5297
I42
g5298
Vinsert
p77460
I25
VIfStatement
p77461
tp77462
I2
s(g37435
I42
g37436
Vinsert
p77463
I62
VInstanceofExpression
p77464
tp77465
I6
s(g6712
I42
g6713
Vinsert
p77466
I60
VVariableDeclarationStatement
p77467
tp77468
I7
s(g3997
I42
g3998
Vinsert
p77469
I42
VSimpleName: aggregateExpr
p77470
tp77471
I2
s(g43962
I42
g43963
Vinsert
p77472
I42
VSimpleName: setStatement
p77473
tp77474
I1
s(g7565
I42
g7566
Vinsert
p77475
I39
VPrimitiveType: boolean
p77476
tp77477
I2
s(g69844
I42
g69845
Vinsert
p77478
I42
VSimpleName: JdbcConnectionStat
p77479
tp77480
I2
s(g9028
I42
g9029
Vinsert
p77481
I32
VMethodInvocation
p77482
tp77483
I4
s(g3083
I42
g3084
Vinsert
p77484
I43
VSimpleType: String
p77485
tp77486
I6
s(g11335
I42
g11336
Vinsert
p77487
I45
VStringLiteral: " OR 1 = 1"
p77488
tp77489
I1
s(g12768
I42
g12769
Vinsert
p77490
I45
VStringLiteral: "WHERE id = ?"
p77491
tp77492
I1
s(g4334
I42
g4335
Vinsert
p77493
I27
VInfixExpression: &&
p77494
tp77495
I1
s(g7594
I42
g7595
Vinsert
p77496
I42
VSimpleName: SchemaResolveVisitor
p77497
tp77498
I1
s(g8438
I42
g8439
Vinsert
p77499
I42
VSimpleName: getPartitionCount
p77500
tp77501
I1
s(g60557
I42
g60558
Vinsert
p77502
I45
VStringLiteral: "INITIAL"
p77503
tp77504
I1
s(g14274
I42
g14275
Vinsert
p77505
I42
VSimpleName: file
p77506
tp77507
I2
s(g26548
I42
g26549
Vinsert
p77508
I42
VSimpleName: Base64
p77509
tp77510
I1
s(g25409
I42
g25410
Vinsert
p77511
I42
VSimpleName: dbType
p77512
tp77513
I1
s(g2847
I42
g2848
Vinsert
p77514
I42
VSimpleName: getParent
p77515
tp77516
I1
s(g3238
I42
g3239
Vinsert
p77517
I40
VQualifiedName: System.out
p77518
tp77519
I3
s(g8716
I42
g8717
Vinsert
p77520
I42
VSimpleName: histogram_1_10
p77521
tp77522
I1
s(g18773
I42
g18774
Vinsert
p77523
I11
VCastExpression
p77524
tp77525
I3
s(g8449
I42
g8450
Vinsert
p77526
I42
VSimpleName: i
p77527
tp77528
I3
s(g18173
I42
g18174
Vinsert
p77529
I8
VBlock
p77530
tp77531
I1
s(Vinsert
p77532
I42
VSimpleName: primary
p77533
Vinsert
p77534
I40
VQualifiedName: Token.FIRST
p77535
tp77536
I1
s(g16005
I42
g16006
Vinsert
p77537
I42
VSimpleName: keySet
p77538
tp77539
I1
s(g4839
I42
g4840
Vinsert
p77540
I43
VSimpleType: SQLUpdateBuilder
p77541
tp77542
I1
s(g22986
I42
g22987
Vinsert
p77543
I74
VParameterizedType: ConcurrentHashMap<String,DruidDataSource>
p77544
tp77545
I1
s(g9949
I42
g9950
Vinsert
p77546
I42
VSimpleName: dataType
p77547
tp77548
I4
s(g69178
I42
g69179
Vinsert
p77549
I42
VSimpleName: unwrap
p77550
tp77551
I1
s(g2403
I42
g2404
Vinsert
p77552
I60
VVariableDeclarationStatement
p77553
tp77554
I1
s(g8863
I42
g8864
Vinsert
p77555
I57
VTypeLiteral
p77556
tp77557
I6
s(g21257
I42
g21258
Vinsert
p77558
I45
VStringLiteral: "                select Distinct t.cunit_code"
p77559
tp77560
I1
s(Vinsert
p77561
I42
VSimpleName: get
p77562
Vinsert
p77563
I74
VParameterizedType: Map<String,String>
p77564
tp77565
I1
s(g19686
I42
g19687
Vinsert
p77566
I40
VQualifiedName: com.alibaba.druid.logging.Log
p77567
tp77568
I3
s(g9410
I42
g9411
Vinsert
p77569
I60
VVariableDeclarationStatement
p77570
tp77571
I1
s(g967
I42
g968
Vinsert
p77572
I38
VPrefixExpression: ++
p77573
tp77574
I1
s(g8449
I42
g8450
Vinsert
p77575
I8
VBlock
p77576
tp77577
I1
s(g44694
I42
g44695
Vinsert
p77578
I42
VSimpleName: SQLBinaryOpExpr
p77579
tp77580
I2
s(g24211
I42
g24212
Vinsert
p77581
I44
VSingleVariableDeclaration
p77582
tp77583
I1
s(g18209
I42
g18210
Vinsert
p77584
I74
VParameterizedType: Map<String,Object>
p77585
tp77586
I1
s(g12977
I42
g12978
Vinsert
p77587
I45
VStringLiteral: "\u005cnORDER BY SUM(c2)"
p77588
tp77589
I1
s(g18278
I42
g18279
Vinsert
p77590
I42
VSimpleName: SQLServerSetStatement
p77591
tp77592
I1
s(g29430
I42
g29431
Vinsert
p77593
I43
VSimpleType: ClassLoader
p77594
tp77595
I2
s(g3218
I42
g3219
Vinsert
p77596
I45
VStringLiteral: "NULL"
p77597
tp77598
I1
s(g58037
I42
g58038
Vinsert
p77599
I42
VSimpleName: SQLServerStatementParser
p77600
tp77601
I88
s(g1845
I42
g1846
Vinsert
p77602
I45
VStringLiteral: "END;"
p77603
tp77604
I7
s(g27708
I42
g27709
Vinsert
p77605
I42
VSimpleName: Exception
p77606
tp77607
I2
s(g11506
I42
g11507
Vinsert
p77608
I42
VSimpleName: clazz
p77609
tp77610
I1
s(g1617
I42
g1618
Vinsert
p77611
I83
VModifier: public
p77612
tp77613
I1
s(g44300
I42
g44301
Vinsert
p77614
I27
VInfixExpression: +
p77615
tp77616
I2
s(g17082
I42
g17083
Vinsert
p77617
I83
VModifier: public
p77618
tp77619
I1
s(g40579
I42
g40580
Vinsert
p77620
I40
VQualifiedName: Token.TRUNCATE
p77621
tp77622
I1
s(g6167
I42
g6168
Vinsert
p77623
I25
VIfStatement
p77624
tp77625
I2
s(g10006
I42
g10007
Vinsert
p77626
I43
VSimpleType: SQLEvalVisitor
p77627
tp77628
I1
s(g4689
I42
g4690
Vinsert
p77629
I45
VStringLiteral: "\u005ct\u005ctSELECT ITEM.CONTRACT_MODULE_ID AS CONTRACT_MODULE_ID, ITEM.INVENTORY_ITEM_ID, ITEM.CONTRACT_ITEM_ID, SYS_ITEM.DESCRIPTION, SYS_ITEM.ATTRIBUTE1\u005cn"
p77630
tp77631
I1
s(g1150
I42
g1151
Vinsert
p77632
I42
VSimpleName: token
p77633
tp77634
I1
s(g12791
I42
g12792
Vinsert
p77635
I42
VSimpleName: printAndAccept
p77636
tp77637
I1
s(g23501
I42
g23502
Vinsert
p77638
I83
VModifier: static
p77639
tp77640
I1
s(g5012
I42
g5013
Vinsert
p77641
I32
VMethodInvocation
p77642
tp77643
I4
s(g14985
I42
g14986
Vinsert
p77644
I42
VSimpleName: useLocalSessionState
p77645
tp77646
I2
s(g8030
I42
g8031
Vinsert
p77647
I31
VMethodDeclaration
p77648
tp77649
I1
s(g5643
I42
g5644
Vinsert
p77650
I60
VVariableDeclarationStatement
p77651
tp77652
I2
s(g9150
I42
g9151
Vinsert
p77653
I21
VExpressionStatement
p77654
tp77655
I1
s(g3788
I42
g3789
Vinsert
p77656
I42
VSimpleName: name
p77657
tp77658
I1
s(g17739
I42
g17740
Vinsert
p77659
I42
VSimpleName: userName
p77660
tp77661
I1
s(g4467
I42
g4468
Vinsert
p77662
I41
VReturnStatement
p77663
tp77664
I35
s(g12611
I42
g12612
Vinsert
p77665
I42
VSimpleName: minIdle
p77666
tp77667
I1
s(g14980
I42
g14981
Vinsert
p77668
I42
VSimpleName: PoolableResultSet
p77669
tp77670
I1
s(g2760
I42
g2761
Vinsert
p77671
I42
VSimpleName: print
p77672
tp77673
I1
s(g24542
I42
g24543
Vinsert
p77674
I59
VVariableDeclarationFragment
p77675
tp77676
I24
s(g3528
I42
g3529
Vinsert
p77677
I70
VEnhancedForStatement
p77678
tp77679
I2
s(g1883
I42
g1884
Vinsert
p77680
I32
VMethodInvocation
p77681
tp77682
I1
s(g9190
I42
g9191
Vinsert
p77683
I42
VSimpleName: visitor
p77684
tp77685
I1
s(g22924
I42
g22925
Vinsert
p77686
I42
VSimpleName: PGCidrExpr
p77687
tp77688
I2
s(g22975
I42
g22976
Vinsert
p77689
I42
VSimpleName: conn
p77690
tp77691
I1
s(g29207
I42
g29208
Vinsert
p77692
I45
VStringLiteral: ", ?, ?)\u005cn"
p77693
tp77694
I1
s(g6786
I42
g6787
Vinsert
p77695
I25
VIfStatement
p77696
tp77697
I2
s(g15745
I42
g15746
Vinsert
p77698
I42
VSimpleName: contains
p77699
tp77700
I1
s(g11015
I42
g11016
Vinsert
p77701
I8
VBlock
p77702
tp77703
I4
s(g68021
I42
g68022
Vinsert
p77704
I42
VSimpleName: createChain
p77705
tp77706
I1
s(g20893
I42
g20894
Vinsert
p77707
I43
VSimpleType: OracleSelectTableSource
p77708
tp77709
I1
s(g48201
I42
g48202
Vinsert
p77710
I21
VExpressionStatement
p77711
tp77712
I1
s(g11365
I42
g11366
Vinsert
p77713
I42
VSimpleName: x
p77714
tp77715
I2
s(g71093
I42
g71094
Vinsert
p77716
I42
VSimpleName: putAttribute
p77717
tp77718
I1
s(g6265
I42
g6266
Vinsert
p77719
I42
VSimpleName: Override
p77720
tp77721
I3
s(g29475
I42
g29476
Vinsert
p77722
I32
VMethodInvocation
p77723
tp77724
I4
s(g25756
I42
g25757
Vinsert
p77725
I42
VSimpleName: tableStats
p77726
tp77727
I2
s(g2682
I42
g2683
Vinsert
p77728
I60
VVariableDeclarationStatement
p77729
tp77730
I5
s(g66189
I42
g66190
Vinsert
p77731
I42
VSimpleName: deleteStatement
p77732
tp77733
I2
s(g1760
I42
g1761
Vinsert
p77734
I40
VQualifiedName: TimeUnit.MILLISECONDS
p77735
tp77736
I1
s(Vinsert
p77737
I42
VSimpleName: assertEquals
p77738
Vinsert
p77739
I45
VStringLiteral: "\u005cn\u005ctREORGANIZE s0, s1, p1, p2, p3 INTO (PARTITION m0 VALUES LESS THAN (1980), PARTITION m1 VALUES LESS THAN (2000))"
p77740
tp77741
I1
s(g26553
I42
g26554
Vinsert
p77742
I42
VSimpleName: visit
p77743
tp77744
I1
s(g57960
I42
g57961
Vinsert
p77745
I42
VSimpleName: jsonStrz
p77746
tp77747
I1
s(g12427
I42
g12428
Vinsert
p77748
I59
VVariableDeclarationFragment
p77749
tp77750
I1
s(g8886
I42
g8887
Vinsert
p77751
I21
VExpressionStatement
p77752
tp77753
I2
s(g21244
I42
g21245
Vinsert
p77754
I43
VSimpleType: SQLException
p77755
tp77756
I2
s(g7631
I42
g7632
Vinsert
p77757
I42
VSimpleName: Object
p77758
tp77759
I1
s(g444
I42
g445
Vinsert
p77760
I22
VFieldAccess
p77761
tp77762
I1
s(g11376
I42
g11377
Vinsert
p77763
I39
VPrimitiveType: boolean
p77764
tp77765
I3
s(g3073
I42
g3074
Vinsert
p77766
I42
VSimpleName: lexer
p77767
tp77768
I18
s(g17777
I42
g17778
Vinsert
p77769
I42
VSimpleName: SQLAlterTableConvertCharSet
p77770
tp77771
I1
s(g35026
I42
g35027
Vinsert
p77772
I42
VSimpleName: SQLStatementParser
p77773
tp77774
I1
s(g5648
I42
g5649
Vinsert
p77775
I32
VMethodInvocation
p77776
tp77777
I5
s(g2682
I42
g2683
Vinsert
p77778
I43
VSimpleType: SQLAlterTableItem
p77779
tp77780
I3
s(g15443
I42
g15444
Vinsert
p77781
I39
VPrimitiveType: boolean
p77782
tp77783
I1
s(g24379
I42
g24380
Vinsert
p77784
I42
VSimpleName: sqlSecurity
p77785
tp77786
I1
s(g612
I42
g613
Vinsert
p77787
I43
VSimpleType: WallSqlTableStat
p77788
tp77789
I1
s(g9129
I42
g9130
Vinsert
p77790
I43
VSimpleType: SQLDefaultExpr
p77791
tp77792
I2
s(g3202
I42
g3203
Vinsert
p77793
I34
VNumberLiteral: 0
p77794
tp77795
I9
s(g3544
I42
g3545
Vinsert
p77796
I45
VStringLiteral: "\u005ct\u005ctwhere dt = '${lastday}'\u005cn"
p77797
tp77798
I1
s(g952
I42
g953
Vinsert
p77799
I42
VSimpleName: method
p77800
tp77801
I1
s(g8622
I42
g8623
Vinsert
p77802
I42
VSimpleName: startsWith
p77803
tp77804
I2
s(g1968
I42
g1969
Vinsert
p77805
I59
VVariableDeclarationFragment
p77806
tp77807
I2
s(g1198
I42
g1199
Vinsert
p77808
I42
VSimpleName: createExprParser
p77809
tp77810
I3
s(g5772
I42
g5773
Vinsert
p77811
I57
VTypeLiteral
p77812
tp77813
I1
s(g4308
I42
g4309
Vinsert
p77814
I42
VSimpleName: Utils
p77815
tp77816
I1
s(g10105
I42
g10106
Vinsert
p77817
I42
VSimpleName: String
p77818
tp77819
I3
s(g9217
I42
g9218
Vinsert
p77820
I42
VSimpleName: setTable
p77821
tp77822
I1
s(g4867
I42
g4868
Vinsert
p77823
I59
VVariableDeclarationFragment
p77824
tp77825
I1
s(g12354
I42
g12355
Vinsert
p77826
I42
VSimpleName: clearResultSet
p77827
tp77828
I1
s(g10513
I42
g10514
Vinsert
p77829
I43
VSimpleType: SQLSelect
p77830
tp77831
I2
s(g18680
I42
g18681
Vinsert
p77832
I85
VDimension
p77833
tp77834
I2
s(g22469
I42
g22470
Vinsert
p77835
I42
VSimpleName: SQLException
p77836
tp77837
I3
s(Vinsert
p77838
I42
VSimpleName: length
p77839
Vinsert
p77840
I42
VSimpleName: param
p77841
tp77842
I4
s(g29059
I42
g29060
Vinsert
p77843
I42
VSimpleName: SQLNumberExpr
p77844
tp77845
I3
s(g12055
I42
g12056
Vinsert
p77846
I42
VSimpleName: x
p77847
tp77848
I2
s(g2692
I42
g2693
Vinsert
p77849
I45
VStringLiteral: "nchar"
p77850
tp77851
I1
s(g5714
I42
g5715
Vinsert
p77852
I45
VStringLiteral: ") "
p77853
tp77854
I1
s(g53930
I42
g53931
Vinsert
p77855
I45
VStringLiteral: "PCTFREE 5\u005cn"
p77856
tp77857
I1
s(g6597
I42
g6598
Vinsert
p77858
I42
VSimpleName: path
p77859
tp77860
I1
s(g11978
I42
g11979
Vinsert
p77861
I42
VSimpleName: queryBlock
p77862
tp77863
I1
s(g5872
I42
g5873
Vinsert
p77864
I60
VVariableDeclarationStatement
p77865
tp77866
I2
s(g4775
I42
g4776
Vinsert
p77867
I42
VSimpleName: dataSource
p77868
tp77869
I2
s(g12184
I42
g12185
Vinsert
p77870
I42
VSimpleName: fk
p77871
tp77872
I1
s(g33444
I42
g33445
Vinsert
p77873
I42
VSimpleName: getValueExpr
p77874
tp77875
I1
s(g29207
I42
g29208
Vinsert
p77876
I45
VStringLiteral: ", `attribute`, `attribute_cc`, `sync_version`, `ex1`, `ex2`\u005cn"
p77877
tp77878
I1
s(g1027
I42
g1028
Vinsert
p77879
I45
VStringLiteral: "MINEXTENTS "
p77880
tp77881
I1
s(g952
I42
g953
Vinsert
p77882
I42
VSimpleName: getName
p77883
tp77884
I2
s(g18429
I42
g18430
Vinsert
p77885
I42
VSimpleName: valuesList
p77886
tp77887
I2
s(g34622
I42
g34623
Vinsert
p77888
I45
VStringLiteral: "jdbc:mock:xxx"
p77889
tp77890
I1
s(g36992
I42
g36993
Vinsert
p77891
I33
VNullLiteral
p77892
tp77893
I1
s(g11110
I42
g11111
Vinsert
p77894
I42
VSimpleName: noCopy
p77895
tp77896
I1
s(g14093
I42
g14094
Vinsert
p77897
I42
VSimpleName: getDataSourceStat
p77898
tp77899
I1
s(g9150
I42
g9151
Vinsert
p77900
I32
VMethodInvocation
p77901
tp77902
I2
s(g23481
I42
g23482
Vinsert
p77903
I42
VSimpleName: afterExecute
p77904
tp77905
I2
s(g18796
I42
g18797
Vinsert
p77906
I42
VSimpleName: x
p77907
tp77908
I1
s(g15687
I42
g15688
Vinsert
p77909
I42
VSimpleName: right
p77910
tp77911
I2
s(g35007
I42
g35008
Vinsert
p77912
I40
VQualifiedName: MethodType.M1
p77913
tp77914
I2
s(g16
I42
g17
Vinsert
p77915
I42
VSimpleName: SQLTableSource
p77916
tp77917
I1
s(g40401
I42
g40402
Vinsert
p77918
I45
VStringLiteral: "\u005ctCOMMENTS VARCHAR(100),\u005cn"
p77919
tp77920
I1
s(g891
I42
g892
Vinsert
p77921
I21
VExpressionStatement
p77922
tp77923
I1
s(g5161
I42
g5162
Vinsert
p77924
I45
VStringLiteral: "\u005cnFROM user"
p77925
tp77926
I1
s(g3282
I42
g3283
Vinsert
p77927
I42
VSimpleName: x
p77928
tp77929
I1
s(g1730
I42
g1731
Vinsert
p77930
I40
VQualifiedName: Token.COMMA
p77931
tp77932
I2
s(g29212
I42
g29213
Vinsert
p77933
I42
VSimpleName: SQLServerSchemaStatVisitor
p77934
tp77935
I10
s(g2364
I42
g2365
Vinsert
p77936
I85
VDimension
p77937
tp77938
I2
s(g26789
I42
g26790
Vinsert
p77939
I42
VSimpleName: stmtList
p77940
tp77941
I26
s(g2857
I42
g2858
Vinsert
p77942
I42
VSimpleName: setDefaultAutoCommit
p77943
tp77944
I1
s(g6966
I42
g6967
Vinsert
p77945
I61
VWhileStatement
p77946
tp77947
I2
s(g28042
I42
g28043
Vinsert
p77948
I27
VInfixExpression: +
p77949
tp77950
I1
s(g6293
I42
g6294
Vinsert
p77951
I43
VSimpleType: String
p77952
tp77953
I1
s(g1360
I42
g1361
Vinsert
p77954
I22
VFieldAccess
p77955
tp77956
I3
s(g56833
I42
g56834
Vinsert
p77957
I42
VSimpleName: statVisitor
p77958
tp77959
I2
s(g30336
I42
g30337
Vinsert
p77960
I57
VTypeLiteral
p77961
tp77962
I1
s(g30541
I42
g30542
Vinsert
p77963
I43
VSimpleType: SQLExpr
p77964
tp77965
I2
s(g10262
I42
g10263
Vinsert
p77966
I42
VSimpleName: lexer
p77967
tp77968
I1
s(g21876
I42
g21877
Vinsert
p77969
I43
VSimpleType: SQLException
p77970
tp77971
I1
s(g861
I42
g862
Vinsert
p77972
I42
VSimpleName: right
p77973
tp77974
I1
s(g13071
I42
g13072
Vinsert
p77975
I45
VStringLiteral: "stmt enter cache"
p77976
tp77977
I1
s(g15188
I42
g15189
Vinsert
p77978
I43
VSimpleType: SQLSelectQueryBlock
p77979
tp77980
I1
s(g55583
I42
g55584
Vinsert
p77981
I45
VStringLiteral: "LINK"
p77982
tp77983
I1
s(Vinsert
p77984
I42
VSimpleName: assertEquals
p77985
Vinsert
p77986
I45
VStringLiteral: "len('44') > 0"
p77987
tp77988
I1
s(g59193
I42
g59194
Vinsert
p77989
I25
VIfStatement
p77990
tp77991
I8
s(g22364
I42
g22365
Vinsert
p77992
I39
VPrimitiveType: void
p77993
tp77994
I35
s(g17133
I42
g17134
Vinsert
p77995
I60
VVariableDeclarationStatement
p77996
tp77997
I1
s(g23954
I42
g23955
Vinsert
p77998
I42
VSimpleName: getSqlMapClient
p77999
tp78000
I2
s(g7908
I42
g7909
Vinsert
p78001
I42
VSimpleName: DruidPooledConnection
p78002
tp78003
I2
s(g68940
I42
g68941
Vinsert
p78004
I83
VModifier: private
p78005
tp78006
I1
s(g12906
I42
g12907
Vinsert
p78007
I42
VSimpleName: addStringReadLength
p78008
tp78009
I1
s(g2203
I42
g2204
Vinsert
p78010
I42
VSimpleName: print
p78011
tp78012
I1
s(g18773
I42
g18774
Vinsert
p78013
I42
VSimpleName: update
p78014
tp78015
I2
s(g25675
I42
g25676
Vinsert
p78016
I21
VExpressionStatement
p78017
tp78018
I1
s(g4814
I42
g4815
Vinsert
p78019
I42
VSimpleName: SQLIdentifierExpr
p78020
tp78021
I2
s(g1448
I42
g1449
Vinsert
p78022
I42
VSimpleName: result
p78023
tp78024
I40
s(g12661
I42
g12662
Vinsert
p78025
I48
VSuperMethodInvocation
p78026
tp78027
I3
s(g5724
I42
g5725
Vinsert
p78028
I59
VVariableDeclarationFragment
p78029
tp78030
I1
s(g622
I42
g623
Vinsert
p78031
I8
VBlock
p78032
tp78033
I2
s(g33739
I42
g33740
Vinsert
p78034
I41
VReturnStatement
p78035
tp78036
I1
s(g7712
I42
g7713
Vinsert
p78037
I42
VSimpleName: visitor
p78038
tp78039
I4
s(g8365
I42
g8366
Vinsert
p78040
I21
VExpressionStatement
p78041
tp78042
I1
s(g27620
I42
g27621
Vinsert
p78043
I27
VInfixExpression: +
p78044
tp78045
I1
s(g13311
I42
g13312
Vinsert
p78046
I45
VStringLiteral: "\u005cn\u005ct\u005ctCONSTRAINT check_cost CHECK (cost > 0)"
p78047
tp78048
I2
s(g9028
I42
g9029
Vinsert
p78049
I42
VSimpleName: print
p78050
tp78051
I1
s(g652
I42
g653
Vinsert
p78052
I43
VSimpleType: List
p78053
tp78054
I1
s(g3355
I42
g3356
Vinsert
p78055
I42
VSimpleName: qualifier
p78056
tp78057
I2
s(g7547
I42
g7548
Vinsert
p78058
I45
VStringLiteral: "\u005ctc_datetime datetime,\u005cn"
p78059
tp78060
I2
s(g5792
I42
g5793
Vinsert
p78061
I43
VSimpleType: SQLExpr
p78062
tp78063
I1
s(g33889
I42
g33890
Vinsert
p78064
I42
VSimpleName: StatementProxy
p78065
tp78066
I1
s(g38081
I42
g38082
Vinsert
p78067
I42
VSimpleName: left
p78068
tp78069
I1
s(g12448
I42
g12449
Vinsert
p78070
I42
VSimpleName: alias
p78071
tp78072
I4
s(g24067
I42
g24068
Vinsert
p78073
I42
VSimpleName: parameter
p78074
tp78075
I2
s(g5515
I42
g5516
Vinsert
p78076
I31
VMethodDeclaration
p78077
tp78078
I2
s(g18145
I42
g18146
Vinsert
p78079
I42
VSimpleName: PreparedStatementProxy
p78080
tp78081
I1
s(g1750
I42
g1751
Vinsert
p78082
I42
VSimpleName: buf
p78083
tp78084
I3
s(g6380
I42
g6381
Vinsert
p78085
I74
VParameterizedType: ArrayList<SQLStatement>
p78086
tp78087
I1
s(g1700
I42
g1701
Vinsert
p78088
I43
VSimpleType: Exception
p78089
tp78090
I1
s(g6592
I42
g6593
Vinsert
p78091
I42
VSimpleName: HMappingColumn
p78092
tp78093
I2
s(g4050
I42
g4051
Vinsert
p78094
I16
VConditionalExpression
p78095
tp78096
I2
s(g17764
I42
g17765
Vinsert
p78097
I42
VSimpleName: getName
p78098
tp78099
I1
s(g18173
I42
g18174
Vinsert
p78100
I45
VStringLiteral: "java.lang:type=GarbageCollector,name=Copy"
p78101
tp78102
I2
s(g12930
I42
g12931
Vinsert
p78103
I8
VBlock
p78104
tp78105
I3
s(g6622
I42
g6623
Vinsert
p78106
I45
VStringLiteral: "ADD"
p78107
tp78108
I1
s(g6293
I42
g6294
Vinsert
p78109
I42
VSimpleName: String
p78110
tp78111
I1
s(g13957
I42
g13958
Vinsert
p78112
I43
VSimpleType: String
p78113
tp78114
I4
s(g10508
I42
g10509
Vinsert
p78115
I42
VSimpleName: pos
p78116
tp78117
I1
s(g622
I42
g623
Vinsert
p78118
I45
VStringLiteral: "RS"
p78119
tp78120
I1
s(g4313
I42
g4314
Vinsert
p78121
I11
VCastExpression
p78122
tp78123
I1
s(g21696
I42
g21697
Vinsert
p78124
I45
VStringLiteral: "t1"
p78125
tp78126
I1
s(Vinsert
p78127
I42
VSimpleName: isValidateMySql
p78128
Vinsert
p78129
I45
VStringLiteral: "SELECT a.* FROM vote_info a where FID = ? AND 1=1"
p78130
tp78131
I1
s(g38410
I42
g38411
Vinsert
p78132
I44
VSingleVariableDeclaration
p78133
tp78134
I1
s(g31544
I42
g31545
Vinsert
p78135
I42
VSimpleName: setTableSource
p78136
tp78137
I1
s(g49623
I42
g49624
Vinsert
p78138
I42
VSimpleName: unwrap
p78139
tp78140
I1
s(g7868
I42
g7869
Vinsert
p78141
I42
VSimpleName: queryBlock
p78142
tp78143
I1
s(g27615
I42
g27616
Vinsert
p78144
I45
VStringLiteral: "   from all_synonyms us, all_sequences asq"
p78145
tp78146
I2
s(g15632
I42
g15633
Vinsert
p78147
I45
VStringLiteral: "\u005ct\u005ct\u005ctRAISE no_comm;\u005cn"
p78148
tp78149
I1
s(g6712
I42
g6713
Vinsert
p78150
I42
VSimpleName: binaryOpWhere
p78151
tp78152
I2
s(g6134
I42
g6135
Vinsert
p78153
I42
VSimpleName: Violation
p78154
tp78155
I1
s(g16248
I42
g16249
Vinsert
p78156
I42
VSimpleName: SQLCharExpr
p78157
tp78158
I2
s(g13968
I42
g13969
Vinsert
p78159
I43
VSimpleType: SQLIdentifierExpr
p78160
tp78161
I2
s(g18749
I42
g18750
Vinsert
p78162
I42
VSimpleName: lexer
p78163
tp78164
I5
s(g26638
I42
g26639
Vinsert
p78165
I42
VSimpleName: equalsIgnoreCase
p78166
tp78167
I1
s(g11182
I42
g11183
Vinsert
p78168
I42
VSimpleName: newUpdater
p78169
tp78170
I1
s(g4248
I42
g4249
Vinsert
p78171
I42
VSimpleName: setForceAllPartitions
p78172
tp78173
I1
s(g2372
I42
g2373
Vinsert
p78174
I42
VSimpleName: String
p78175
tp78176
I1
s(g42619
I42
g42620
Vinsert
p78177
I42
VSimpleName: orderByItem
p78178
tp78179
I2
s(g35026
I42
g35027
Vinsert
p78180
I9
VBooleanLiteral: true
p78181
tp78182
I1
s(g6597
I42
g6598
Vinsert
p78183
I59
VVariableDeclarationFragment
p78184
tp78185
I1
s(g16479
I42
g16480
Vinsert
p78186
I42
VSimpleName: stmt
p78187
tp78188
I4
s(g806
I42
g807
Vinsert
p78189
I42
VSimpleName: Entity
p78190
tp78191
I2
s(g42357
I42
g42358
Vinsert
p78192
I42
VSimpleName: ConnectByRoot
p78193
tp78194
I1
s(g39926
I42
g39927
Vinsert
p78195
I42
VSimpleName: setCache
p78196
tp78197
I1
s(g54991
I42
g54992
Vinsert
p78198
I45
VStringLiteral: "\u005ct\u005ctINITIAL 4194304\u005cn"
p78199
tp78200
I2
s(g24531
I42
g24532
Vinsert
p78201
I42
VSimpleName: columnName
p78202
tp78203
I1
s(g20470
I42
g20471
Vinsert
p78204
I42
VSimpleName: ParameterizedOutputVisitorUtils
p78205
tp78206
I1
s(g19152
I42
g19153
Vinsert
p78207
I42
VSimpleName: memoryEnd
p78208
tp78209
I6
s(g25152
I42
g25153
Vinsert
p78210
I42
VSimpleName: close
p78211
tp78212
I1
s(g9827
I42
g9828
Vinsert
p78213
I42
VSimpleName: SQLKeep
p78214
tp78215
I1
s(Vinsert
p78216
I42
VSimpleName: getTables
p78217
Vinsert
p78218
I42
VSimpleName: SQLServerSchemaStatVisitor
p78219
tp78220
I1
s(g16294
I42
g16295
Vinsert
p78221
I43
VSimpleType: SQLJoinTableSource
p78222
tp78223
I2
s(g20215
I42
g20216
Vinsert
p78224
I32
VMethodInvocation
p78225
tp78226
I7
s(g5979
I42
g5980
Vinsert
p78227
I21
VExpressionStatement
p78228
tp78229
I1
s(g6270
I42
g6271
Vinsert
p78230
I11
VCastExpression
p78231
tp78232
I2
s(g2563
I42
g2564
Vinsert
p78233
I52
VThisExpression
p78234
tp78235
I1
s(g2253
I42
g2254
Vinsert
p78236
I42
VSimpleName: out
p78237
tp78238
I4
s(g38410
I42
g38411
Vinsert
p78239
I42
VSimpleName: visit
p78240
tp78241
I1
s(g27355
I42
g27356
Vinsert
p78242
I42
VSimpleName: functionStats
p78243
tp78244
I1
s(g4188
I42
g4189
Vinsert
p78245
I42
VSimpleName: List
p78246
tp78247
I2
s(g6354
I42
g6355
Vinsert
p78248
I59
VVariableDeclarationFragment
p78249
tp78250
I18
s(g728
I42
g729
Vinsert
p78251
I42
VSimpleName: Throwable
p78252
tp78253
I1
s(g20559
I42
g20560
Vinsert
p78254
I59
VVariableDeclarationFragment
p78255
tp78256
I1
s(g71440
I42
g71441
Vinsert
p78257
I42
VSimpleName: Assert
p78258
tp78259
I1
s(g23614
I42
g23615
Vinsert
p78260
I42
VSimpleName: result
p78261
tp78262
I4
s(g18531
I42
g18532
Vinsert
p78263
I32
VMethodInvocation
p78264
tp78265
I6
s(g5638
I42
g5639
Vinsert
p78266
I32
VMethodInvocation
p78267
tp78268
I2
s(g3949
I42
g3950
Vinsert
p78269
I42
VSimpleName: insertStmt
p78270
tp78271
I2
s(g10438
I42
g10439
Vinsert
p78272
I42
VSimpleName: get
p78273
tp78274
I1
s(g11398
I42
g11399
Vinsert
p78275
I42
VSimpleName: OracleLexer
p78276
tp78277
I1
s(g5455
I42
g5456
Vinsert
p78278
I42
VSimpleName: onConflictUpdateSetItems
p78279
tp78280
I2
s(g2604
I42
g2605
Vinsert
p78281
I85
VDimension
p78282
tp78283
I1
s(g5161
I42
g5162
Vinsert
p78284
I45
VStringLiteral: "SELECT id, login_name, name, password, salt"
p78285
tp78286
I1
s(g8475
I42
g8476
Vinsert
p78287
I11
VCastExpression
p78288
tp78289
I1
s(g2218
I42
g2219
Vinsert
p78290
I2
VArrayAccess
p78291
tp78292
I6
s(g5643
I42
g5644
Vinsert
p78293
I32
VMethodInvocation
p78294
tp78295
I1
s(g1027
I42
g1028
Vinsert
p78296
I45
VStringLiteral: "minextents "
p78297
tp78298
I1
s(g8449
I42
g8450
Vinsert
p78299
I27
VInfixExpression: <
p78300
tp78301
I1
s(g7450
I42
g7451
Vinsert
p78302
I43
VSimpleType: Enumeration
p78303
tp78304
I1
s(g35330
I42
g35331
Vinsert
p78305
I42
VSimpleName: createExportParameterVisitor
p78306
tp78307
I1
s(g69535
I42
g69536
Vinsert
p78308
I45
VStringLiteral: "RESTRICT"
p78309
tp78310
I1
s(g7888
I42
g7889
Vinsert
p78311
I59
VVariableDeclarationFragment
p78312
tp78313
I3
s(g9103
I42
g9104
Vinsert
p78314
I27
VInfixExpression: !=
p78315
tp78316
I1
s(g23761
I42
g23762
Vinsert
p78317
I42
VSimpleName: config_callback
p78318
tp78319
I1
s(g25556
I42
g25557
Vinsert
p78320
I22
VFieldAccess
p78321
tp78322
I2
s(g13228
I42
g13229
Vinsert
p78323
I42
VSimpleName: SQLASTOutputVisitor
p78324
tp78325
I1
s(g18841
I42
g18842
Vinsert
p78326
I60
VVariableDeclarationStatement
p78327
tp78328
I1
s(g22115
I42
g22116
Vinsert
p78329
I9
VBooleanLiteral: true
p78330
tp78331
I1
s(g2819
I42
g2820
Vinsert
p78332
I22
VFieldAccess
p78333
tp78334
I1
s(g7517
I42
g7518
Vinsert
p78335
I21
VExpressionStatement
p78336
tp78337
I2
s(g6630
I42
g6631
Vinsert
p78338
I42
VSimpleName: tableName
p78339
tp78340
I1
s(g10467
I42
g10468
Vinsert
p78341
I43
VSimpleType: Object
p78342
tp78343
I5
s(g1060
I42
g1061
Vinsert
p78344
I42
VSimpleName: h
p78345
tp78346
I2
s(g13933
I42
g13934
Vinsert
p78347
I43
VSimpleType: OracleExprParser
p78348
tp78349
I1
s(g1002
I42
g1003
Vinsert
p78350
I7
VAssignment: +=
p78351
tp78352
I1
s(g2408
I42
g2409
Vinsert
p78353
I11
VCastExpression
p78354
tp78355
I2
s(g24915
I42
g24916
Vinsert
p78356
I42
VSimpleName: close
p78357
tp78358
I19
s(g9843
I42
g9844
Vinsert
p78359
I45
VStringLiteral: "10.20.153.63:60000"
p78360
tp78361
I1
s(g60891
I42
g60892
Vinsert
p78362
I42
VSimpleName: getCreateCount
p78363
tp78364
I2
s(g49163
I42
g49164
Vinsert
p78365
I42
VSimpleName: createTransactionId
p78366
tp78367
I1
s(g11737
I42
g11738
Vinsert
p78368
I43
VSimpleType: List
p78369
tp78370
I1
s(g27315
I42
g27316
Vinsert
p78371
I42
VSimpleName: get
p78372
tp78373
I1
s(g5892
I42
g5893
Vinsert
p78374
I42
VSimpleName: lexer
p78375
tp78376
I2
s(g14583
I42
g14584
Vinsert
p78377
I40
VQualifiedName: com.mysql.jdbc.Connection
p78378
tp78379
I1
s(g256
I42
g257
Vinsert
p78380
I32
VMethodInvocation
p78381
tp78382
I2
s(g1770
I42
g1771
Vinsert
p78383
I42
VSimpleName: setTenantColumn
p78384
tp78385
I6
s(g13981
I42
g13982
Vinsert
p78386
I27
VInfixExpression: !=
p78387
tp78388
I1
s(Vinsert
p78389
I42
VSimpleName: token
p78390
Vinsert
p78391
I40
VQualifiedName: Token.TO
p78392
tp78393
I1
s(g12480
I42
g12481
Vinsert
p78394
I41
VReturnStatement
p78395
tp78396
I1
s(g6786
I42
g6787
Vinsert
p78397
I8
VBlock
p78398
tp78399
I2
s(g10174
I42
g10175
Vinsert
p78400
I42
VSimpleName: getConfig
p78401
tp78402
I1
s(g801
I42
g802
Vinsert
p78403
I32
VMethodInvocation
p78404
tp78405
I2
s(Vinsert
p78406
I42
VSimpleName: get
p78407
Vinsert
p78408
I42
VSimpleName: e
p78409
tp78410
I1
s(g27276
I42
g27277
Vinsert
p78411
I21
VExpressionStatement
p78412
tp78413
I25
s(g6051
I42
g6052
Vinsert
p78414
I42
VSimpleName: getOffset
p78415
tp78416
I1
s(g61118
I42
g61119
Vinsert
p78417
I58
VVariableDeclarationExpression
p78418
tp78419
I1
s(g13823
I42
g13824
Vinsert
p78420
I42
VSimpleName: List
p78421
tp78422
I84
s(g5480
I42
g5481
Vinsert
p78423
I42
VSimpleName: init
p78424
tp78425
I1
s(g71905
I42
g71906
Vinsert
p78426
I42
VSimpleName: incrementReplaceCunt
p78427
tp78428
I1
s(g68348
I42
g68349
Vinsert
p78429
I74
VParameterizedType: ArrayList<String[]>
p78430
tp78431
I1
s(g256
I42
g257
Vinsert
p78432
I59
VVariableDeclarationFragment
p78433
tp78434
I1
s(g8648
I42
g8649
Vinsert
p78435
I74
VParameterizedType: Class<?>
p78436
tp78437
I2
s(g3732
I42
g3733
Vinsert
p78438
I42
VSimpleName: toSQLExpr
p78439
tp78440
I1
s(g5638
I42
g5639
Vinsert
p78441
I78
VMarkerAnnotation
p78442
tp78443
I1
s(g11474
I42
g11475
Vinsert
p78444
I42
VSimpleName: String
p78445
tp78446
I4
s(g5128
I42
g5129
Vinsert
p78447
I45
VStringLiteral: "+--------------+--------------+------+-----+---------+-------+\u005cn"
p78448
tp78449
I1
s(g8721
I42
g8722
Vinsert
p78450
I42
VSimpleName: i
p78451
tp78452
I2
s(g54802
I42
g54803
Vinsert
p78453
I42
VSimpleName: Throwable
p78454
tp78455
I1
s(g35171
I42
g35172
Vinsert
p78456
I42
VSimpleName: ParameterizedOutputVisitorUtils
p78457
tp78458
I1
s(g21
I42
g22
Vinsert
p78459
I27
VInfixExpression: ==
p78460
tp78461
I3
s(g18044
I42
g18045
Vinsert
p78462
I42
VSimpleName: nextToken
p78463
tp78464
I1
s(g2596
I42
g2597
Vinsert
p78465
I42
VSimpleName: setInitialSize
p78466
tp78467
I1
s(g42032
I42
g42033
Vinsert
p78468
I45
VStringLiteral: "\u005cn --c_0"
p78469
tp78470
I1
s(g69751
I42
g69752
Vinsert
p78471
I42
VSimpleName: getJdbcUpdateCount
p78472
tp78473
I1
s(g4409
I42
g4410
Vinsert
p78474
I38
VPrefixExpression: -
p78475
tp78476
I1
s(g6689
I42
g6690
Vinsert
p78477
I45
VStringLiteral: "druid.wall.updateCheckColumns"
p78478
tp78479
I1
s(g1948
I42
g1949
Vinsert
p78480
I60
VVariableDeclarationStatement
p78481
tp78482
I1
s(g17093
I42
g17094
Vinsert
p78483
I43
VSimpleType: Map
p78484
tp78485
I3
s(g16240
I42
g16241
Vinsert
p78486
I45
VStringLiteral: "\u005ctPCTTHRESHOLD 10"
p78487
tp78488
I1
s(g6847
I42
g6848
Vinsert
p78489
I42
VSimpleName: stmtList
p78490
tp78491
I2
s(g6429
I42
g6430
Vinsert
p78492
I32
VMethodInvocation
p78493
tp78494
I1
s(g19766
I42
g19767
Vinsert
p78495
I42
VSimpleName: startTrans
p78496
tp78497
I1
s(g4075
I42
g4076
Vinsert
p78498
I42
VSimpleName: FieldInfo
p78499
tp78500
I2
s(g52991
I42
g52992
Vinsert
p78501
I42
VSimpleName: match
p78502
tp78503
I5
s(g15986
I42
g15987
Vinsert
p78504
I27
VInfixExpression: ==
p78505
tp78506
I1
s(g7868
I42
g7869
Vinsert
p78507
I42
VSimpleName: getSelectList
p78508
tp78509
I1
s(g32594
I42
g32595
Vinsert
p78510
I45
VStringLiteral: " PARTITION ("
p78511
tp78512
I1
s(g19810
I42
g19811
Vinsert
p78513
I40
VQualifiedName: Token.LPAREN
p78514
tp78515
I1
s(g16581
I42
g16582
Vinsert
p78516
I42
VSimpleName: cursorIndex
p78517
tp78518
I3
s(g11001
I42
g11002
Vinsert
p78519
I42
VSimpleName: argumentName
p78520
tp78521
I1
s(g9230
I42
g9231
Vinsert
p78522
I40
VQualifiedName: x.not
p78523
tp78524
I1
s(g10066
I42
g10067
Vinsert
p78525
I62
VInstanceofExpression
p78526
tp78527
I8
s(g48201
I42
g48202
Vinsert
p78528
I43
VSimpleType: Wrapper
p78529
tp78530
I1
s(g12938
I42
g12939
Vinsert
p78531
I42
VSimpleName: returning
p78532
tp78533
I1
s(g20124
I42
g20125
Vinsert
p78534
I9
VBooleanLiteral: false
p78535
tp78536
I1
s(g11474
I42
g11475
Vinsert
p78537
I43
VSimpleType: SQLStatement
p78538
tp78539
I7
s(g5475
I42
g5476
Vinsert
p78540
I42
VSimpleName: response
p78541
tp78542
I1
s(g25961
I42
g25962
Vinsert
p78543
I42
VSimpleName: SQLColumnDefinition
p78544
tp78545
I2
s(g70182
I42
g70183
Vinsert
p78546
I42
VSimpleName: SQLLimit
p78547
tp78548
I1
s(g7903
I42
g7904
Vinsert
p78549
I39
VPrimitiveType: int
p78550
tp78551
I1
s(g3345
I42
g3346
Vinsert
p78552
I32
VMethodInvocation
p78553
tp78554
I34
s(g1958
I42
g1959
Vinsert
p78555
I45
VStringLiteral: "\u005ct\u005ctMAXTRANS 255\u005cn"
p78556
tp78557
I6
s(g34622
I42
g34623
Vinsert
p78558
I21
VExpressionStatement
p78559
tp78560
I2
s(g15514
I42
g15515
Vinsert
p78561
I42
VSimpleName: state
p78562
tp78563
I1
s(g4709
I42
g4710
Vinsert
p78564
I42
VSimpleName: WallConfig
p78565
tp78566
I8
s(g59355
I42
g59356
Vinsert
p78567
I45
VStringLiteral: "console_stb_ipstatus"
p78568
tp78569
I1
s(g18768
I42
g18769
Vinsert
p78570
I41
VReturnStatement
p78571
tp78572
I3
s(g2074
I42
g2075
Vinsert
p78573
I40
VQualifiedName: Token.RPAREN
p78574
tp78575
I1
s(g6871
I42
g6872
Vinsert
p78576
I16
VConditionalExpression
p78577
tp78578
I1
s(g7245
I42
g7246
Vinsert
p78579
I42
VSimpleName: PreparedStatementHolder
p78580
tp78581
I1
s(g13483
I42
g13484
Vinsert
p78582
I42
VSimpleName: exprList
p78583
tp78584
I2
s(g5767
I42
g5768
Vinsert
p78585
I83
VModifier: private
p78586
tp78587
I1
s(g13429
I42
g13430
Vinsert
p78588
I42
VSimpleName: SQLCommentHint
p78589
tp78590
I4
s(g1180
I42
g1181
Vinsert
p78591
I42
VSimpleName: user
p78592
tp78593
I2
s(g15443
I42
g15444
Vinsert
p78594
I42
VSimpleName: x
p78595
tp78596
I3
s(g30732
I42
g30733
Vinsert
p78597
I14
VClassInstanceCreation
p78598
tp78599
I2
s(g27649
I42
g27650
Vinsert
p78600
I45
VStringLiteral: "\u005ctSELECT ID, COUNT(*)\u005cn"
p78601
tp78602
I1
s(g20259
I42
g20260
Vinsert
p78603
I27
VInfixExpression: &&
p78604
tp78605
I5
s(g38410
I42
g38411
Vinsert
p78606
I45
VStringLiteral: "SHOW PROCEDURE STATUS"
p78607
tp78608
I1
s(g10687
I42
g10688
Vinsert
p78609
I14
VClassInstanceCreation
p78610
tp78611
I1
s(g28042
I42
g28043
Vinsert
p78612
I45
VStringLiteral: "   FOR hr.locations;create table hr.locations(fid varchar(200));"
p78613
tp78614
I1
s(g11940
I42
g11941
Vinsert
p78615
I42
VSimpleName: MonitorClient
p78616
tp78617
I1
s(g301
I42
g302
Vinsert
p78618
I45
VStringLiteral: " where  v.u_id in (select id from U where wx_b = 1)\u005cn"
p78619
tp78620
I1
s(g8282
I42
g8283
Vinsert
p78621
I42
VSimpleName: exprParser
p78622
tp78623
I1
s(g11051
I42
g11052
Vinsert
p78624
I32
VMethodInvocation
p78625
tp78626
I4
s(g29367
I42
g29368
Vinsert
p78627
I45
VStringLiteral: "\u005cn\u005ctfrom ("
p78628
tp78629
I1
s(Vinsert
p78630
I42
VSimpleName: assertTrue
p78631
Vinsert
p78632
I45
VStringLiteral: "SELECT 'Server[@Name=' + quotename(CAST(serverproperty(N'Servername') AS sysname),'''') + ']' + '/Collation[@Name=' + quotename(cl.name,'''') + ']' AS [Urn], cl.name AS [Name], CAST(COLLATIONPROPERTY(name, 'CodePage') AS int) AS [CodePage], CAST(COLLATIONPROPERTY(name, 'LCID') AS int) AS [LocaleID], CAST(COLLATIONPROPERTY(name, 'ComparisonStyle') AS int) AS [ComparisonStyle], cl.description AS [Description], CAST(COLLATIONPROPERTY(name, 'Version') AS int) AS [CollationVersion] FROM sys.fn_helpcollations() cl ORDER BY [Name] ASC"
p78633
tp78634
I1
s(g5123
I42
g5124
Vinsert
p78635
I42
VSimpleName: rangeValues
p78636
tp78637
I1
s(g4563
I42
g4564
Vinsert
p78638
I42
VSimpleName: getStatementList
p78639
tp78640
I2
s(g22551
I42
g22552
Vinsert
p78641
I45
VStringLiteral: "\u005ctID VARCHAR(200) NOT NULL,\u005cn"
p78642
tp78643
I1
s(g44594
I42
g44595
Vinsert
p78644
I52
VThisExpression
p78645
tp78646
I1
s(g6671
I42
g6672
Vinsert
p78647
I42
VSimpleName: IllegalSQLObjectViolation
p78648
tp78649
I2
s(g6364
I42
g6365
Vinsert
p78650
I42
VSimpleName: driverClass
p78651
tp78652
I1
s(g26374
I42
g26375
Vinsert
p78653
I40
VQualifiedName: OracleIntervalType.DAY
p78654
tp78655
I1
s(g4093
I42
g4094
Vinsert
p78656
I42
VSimpleName: Assert
p78657
tp78658
I2
s(g23983
I42
g23984
Vinsert
p78659
I45
VStringLiteral: "\u005ctSUPPLEMENTAL LOG DATA (FOREIGHN KEY) COLUMNS\u005cn"
p78660
tp78661
I1
s(g567
I42
g568
Vinsert
p78662
I34
VNumberLiteral: 10
p78663
tp78664
I3
s(g20320
I42
g20321
Vinsert
p78665
I22
VFieldAccess
p78666
tp78667
I1
s(g18930
I42
g18931
Vinsert
p78668
I7
VAssignment: =
p78669
tp78670
I1
s(g12555
I42
g12556
Vinsert
p78671
I42
VSimpleName: Map
p78672
tp78673
I1
s(Vinsert
p78674
I42
VSimpleName: getCursorName
p78675
Vinsert
p78676
I43
VSimpleType: OracleFetchStatement
p78677
tp78678
I1
s(g4065
I42
g4066
Vinsert
p78679
I42
VSimpleName: useLocalSessionState
p78680
tp78681
I2
s(g8643
I42
g8644
Vinsert
p78682
I42
VSimpleName: stmt
p78683
tp78684
I1
s(g2925
I42
g2926
Vinsert
p78685
I13
VCharacterLiteral: '\u005c''
p78686
tp78687
I2
s(Vinsert
p78688
I42
VSimpleName: toLowerCase
p78689
Vinsert
p78690
I42
VSimpleName: MySqlIntervalUnit
p78691
tp78692
I1
s(g14324
I42
g14325
Vinsert
p78693
I34
VNumberLiteral: 1
p78694
tp78695
I8
s(g291
I42
g292
Vinsert
p78696
I59
VVariableDeclarationFragment
p78697
tp78698
I1
s(g11297
I42
g11298
Vinsert
p78699
I21
VExpressionStatement
p78700
tp78701
I4
s(g4035
I42
g4036
Vinsert
p78702
I32
VMethodInvocation
p78703
tp78704
I5
s(g9070
I42
g9071
Vinsert
p78705
I42
VSimpleName: PGLineSegmentsExpr
p78706
tp78707
I2
s(Vinsert
p78708
I42
VSimpleName: toSQLString
p78709
Vinsert
p78710
I45
VStringLiteral: "CREATE SEQUENCE \u005c"GJS_ZIXUN\u005c".\u005c"FINANCE_EXPLAIN_ID_GENERATOR\u005c" NOORDER"
p78711
tp78712
I1
s(g5882
I42
g5883
Vinsert
p78713
I42
VSimpleName: into
p78714
tp78715
I3
s(Vinsert
p78716
I42
VSimpleName: expr
p78717
Vinsert
p78718
I43
VSimpleType: MySqlExtractExpr
p78719
tp78720
I1
s(g68926
I42
g68927
Vinsert
p78721
I43
VSimpleType: SQLSelectItem
p78722
tp78723
I6
s(g39695
I42
g39696
Vinsert
p78724
I42
VSimpleName: OracleHint
p78725
tp78726
I1
s(g10174
I42
g10175
Vinsert
p78727
I42
VSimpleName: getViolations
p78728
tp78729
I1
s(g2742
I42
g2743
Vinsert
p78730
I32
VMethodInvocation
p78731
tp78732
I7
s(g141
I42
g142
Vinsert
p78733
I8
VBlock
p78734
tp78735
I94
s(g11479
I42
g11480
Vinsert
p78736
I42
VSimpleName: clone
p78737
tp78738
I1
s(g7655
I42
g7656
Vinsert
p78739
I44
VSingleVariableDeclaration
p78740
tp78741
I1
s(g10257
I42
g10258
Vinsert
p78742
I59
VVariableDeclarationFragment
p78743
tp78744
I21
s(g7461
I42
g7462
Vinsert
p78745
I42
VSimpleName: option
p78746
tp78747
I3
s(g3564
I42
g3565
Vinsert
p78748
I42
VSimpleName: dataSource
p78749
tp78750
I3
s(g7201
I42
g7202
Vinsert
p78751
I27
VInfixExpression: !=
p78752
tp78753
I1
s(g9397
I42
g9398
Vinsert
p78754
I42
VSimpleName: SQLStatement
p78755
tp78756
I1
s(g73606
I42
g73607
Vinsert
p78757
I27
VInfixExpression: >
p78758
tp78759
I1
s(g1105
I42
g1106
Vinsert
p78760
I42
VSimpleName: idleMillis
p78761
tp78762
I1
s(g9084
I42
g9085
Vinsert
p78763
I42
VSimpleName: key
p78764
tp78765
I3
s(g301
I42
g302
Vinsert
p78766
I42
VSimpleName: String
p78767
tp78768
I21
s(g2609
I42
g2610
Vinsert
p78769
I42
VSimpleName: Assert
p78770
tp78771
I1
s(g12844
I42
g12845
Vinsert
p78772
I42
VSimpleName: SQLUnique
p78773
tp78774
I1
s(g7552
I42
g7553
Vinsert
p78775
I34
VNumberLiteral: 1000
p78776
tp78777
I1
s(g1943
I42
g1944
Vinsert
p78778
I42
VSimpleName: raw
p78779
tp78780
I1
s(g14187
I42
g14188
Vinsert
p78781
I42
VSimpleName: Override
p78782
tp78783
I1
s(g20733
I42
g20734
Vinsert
p78784
I45
VStringLiteral: "\u005cn -- comment_1"
p78785
tp78786
I1
s(g7996
I42
g7997
Vinsert
p78787
I45
VStringLiteral: "low_priority "
p78788
tp78789
I1
s(g14917
I42
g14918
Vinsert
p78790
I45
VStringLiteral: "\u005ct\u005ct\u005ctOR (b.cp_code IS NULL\u005cn"
p78791
tp78792
I1
s(g5959
I42
g5960
Vinsert
p78793
I42
VSimpleName: SQLExplainStatement
p78794
tp78795
I1
s(g26873
I42
g26874
Vinsert
p78796
I59
VVariableDeclarationFragment
p78797
tp78798
I10
s(g2183
I42
g2184
Vinsert
p78799
I39
VPrimitiveType: int
p78800
tp78801
I3
s(g507
I42
g508
Vinsert
p78802
I21
VExpressionStatement
p78803
tp78804
I2
s(g821
I42
g822
Vinsert
p78805
I21
VExpressionStatement
p78806
tp78807
I1
s(g50247
I42
g50248
Vinsert
p78808
I43
VSimpleType: OracleCreateProcedureStatement
p78809
tp78810
I1
s(g6172
I42
g6173
Vinsert
p78811
I43
VSimpleType: OracleASTVisitor
p78812
tp78813
I1
s(g58576
I42
g58577
Vinsert
p78814
I42
VSimpleName: arguments
p78815
tp78816
I2
s(g60101
I42
g60102
Vinsert
p78817
I42
VSimpleName: setTestOnBorrow
p78818
tp78819
I1
s(g27234
I42
g27235
Vinsert
p78820
I25
VIfStatement
p78821
tp78822
I1
s(g22152
I42
g22153
Vinsert
p78823
I39
VPrimitiveType: byte
p78824
tp78825
I11
s(g19618
I42
g19619
Vinsert
p78826
I31
VMethodDeclaration
p78827
tp78828
I1
s(g33687
I42
g33688
Vinsert
p78829
I42
VSimpleName: setUsername
p78830
tp78831
I1
s(g11585
I42
g11586
Vinsert
p78832
I42
VSimpleName: stat
p78833
tp78834
I1
s(g21025
I42
g21026
Vinsert
p78835
I40
VQualifiedName: com.alibaba.druid.sql.ast.statement.SQLDropTableStatement
p78836
tp78837
I1
s(g3360
I42
g3361
Vinsert
p78838
I21
VExpressionStatement
p78839
tp78840
I8
s(g1835
I42
g1836
Vinsert
p78841
I59
VVariableDeclarationFragment
p78842
tp78843
I1
s(g9243
I42
g9244
Vinsert
p78844
I42
VSimpleName: setAlias
p78845
tp78846
I1
s(g15823
I42
g15824
Vinsert
p78847
I21
VExpressionStatement
p78848
tp78849
I3
s(g391
I42
g392
Vinsert
p78850
I32
VMethodInvocation
p78851
tp78852
I2
s(Vinsert
p78853
I42
VSimpleName: toSQLString
p78854
Vinsert
p78855
I45
VStringLiteral: "\u005ctINITIAL 65536\u005cn"
p78856
tp78857
I6
s(g7919
I42
g7920
Vinsert
p78858
I34
VNumberLiteral: 6
p78859
tp78860
I1
s(g47129
I42
g47130
Vinsert
p78861
I45
VStringLiteral: "com.mysql.jdbc.Driver"
p78862
tp78863
I1
s(g5877
I42
g5878
Vinsert
p78864
I42
VSimpleName: getInteger
p78865
tp78866
I1
s(g23210
I42
g23211
Vinsert
p78867
I45
VStringLiteral: "\u005cn JOIN fund_base_cv_ad_auction_ocr_pv_tfs_ocr b ON a.tfs = b.tfs"
p78868
tp78869
I1
s(g424
I42
g425
Vinsert
p78870
I83
VModifier: public
p78871
tp78872
I10
s(g331
I42
g332
Vinsert
p78873
I8
VBlock
p78874
tp78875
I1
s(g1790
I42
g1791
Vinsert
p78876
I42
VSimpleName: SQLException
p78877
tp78878
I1
s(g11286
I42
g11287
Vinsert
p78879
I41
VReturnStatement
p78880
tp78881
I3
s(g6480
I42
g6481
Vinsert
p78882
I27
VInfixExpression: >
p78883
tp78884
I3
s(g17301
I42
g17302
Vinsert
p78885
I42
VSimpleName: identifierEquals
p78886
tp78887
I2
s(g20382
I42
g20383
Vinsert
p78888
I85
VDimension
p78889
tp78890
I2
s(g49403
I42
g49404
Vinsert
p78891
I43
VSimpleType: MySqlShowRelayLogEventsStatement
p78892
tp78893
I2
s(g10642
I42
g10643
Vinsert
p78894
I32
VMethodInvocation
p78895
tp78896
I1
s(g11634
I42
g11635
Vinsert
p78897
I59
VVariableDeclarationFragment
p78898
tp78899
I1
s(Vinsert
p78900
I42
VSimpleName: parse
p78901
Vinsert
p78902
I42
VSimpleName: result
p78903
tp78904
I2
s(g19139
I42
g19140
Vinsert
p78905
I45
VStringLiteral: "executeErrorCount"
p78906
tp78907
I1
s(g12346
I42
g12347
Vinsert
p78908
I54
VTryStatement
p78909
tp78910
I1
s(g21244
I42
g21245
Vinsert
p78911
I43
VSimpleType: String
p78912
tp78913
I4
s(g16354
I42
g16355
Vinsert
p78914
I39
VPrimitiveType: int
p78915
tp78916
I2
s(g16868
I42
g16869
Vinsert
p78917
I43
VSimpleType: SQLException
p78918
tp78919
I3
s(g7547
I42
g7548
Vinsert
p78920
I45
VStringLiteral: "\u005ctc_text text,\u005cn"
p78921
tp78922
I2
s(g6318
I42
g6319
Vinsert
p78923
I43
VSimpleType: MySqlExportParameterVisitor
p78924
tp78925
I2
s(g15299
I42
g15300
Vinsert
p78926
I58
VVariableDeclarationExpression
p78927
tp78928
I1
s(g1370
I42
g1371
Vinsert
p78929
I83
VModifier: public
p78930
tp78931
I1
s(g14605
I42
g14606
Vinsert
p78932
I42
VSimpleName: String
p78933
tp78934
I1
s(g18270
I42
g18271
Vinsert
p78935
I21
VExpressionStatement
p78936
tp78937
I3
s(g8373
I42
g8374
Vinsert
p78938
I9
VBooleanLiteral: false
p78939
tp78940
I2
s(g17007
I42
g17008
Vinsert
p78941
I42
VSimpleName: dataSource
p78942
tp78943
I8
s(g32799
I42
g32800
Vinsert
p78944
I42
VSimpleName: incrementConnectionCloseCount
p78945
tp78946
I1
s(g6650
I42
g6651
Vinsert
p78947
I32
VMethodInvocation
p78948
tp78949
I2
s(g12209
I42
g12210
Vinsert
p78950
I32
VMethodInvocation
p78951
tp78952
I1
s(g3549
I42
g3550
Vinsert
p78953
I42
VSimpleName: PreparedStatementHolder
p78954
tp78955
I1
s(g11420
I42
g11421
Vinsert
p78956
I59
VVariableDeclarationFragment
p78957
tp78958
I1
s(g23934
I42
g23935
Vinsert
p78959
I42
VSimpleName: getRelationships
p78960
tp78961
I3
s(g32567
I42
g32568
Vinsert
p78962
I45
VStringLiteral: "SHOW CREATE PROCEDURE "
p78963
tp78964
I1
s(g86
I42
g87
Vinsert
p78965
I8
VBlock
p78966
tp78967
I1
s(g11601
I42
g11602
Vinsert
p78968
I33
VNullLiteral
p78969
tp78970
I1
s(g2765
I42
g2766
Vinsert
p78971
I42
VSimpleName: String
p78972
tp78973
I3
s(Vinsert
p78974
I42
VSimpleName: assertEquals
p78975
Vinsert
p78976
I42
VSimpleName: MockConnection
p78977
tp78978
I2
s(g21499
I42
g21500
Vinsert
p78979
I32
VMethodInvocation
p78980
tp78981
I3
s(g2992
I42
g2993
Vinsert
p78982
I42
VSimpleName: SQLSelectItem
p78983
tp78984
I5
s(Vinsert
p78985
I42
VSimpleName: setExpr
p78986
Vinsert
p78987
I42
VSimpleName: SQLFlashbackExpr
p78988
tp78989
I1
s(g13196
I42
g13197
Vinsert
p78990
I39
VPrimitiveType: long
p78991
tp78992
I1
s(Vinsert
p78993
I42
VSimpleName: clone
p78994
Vinsert
p78995
I42
VSimpleName: column
p78996
tp78997
I12
s(g50808
I42
g50809
Vinsert
p78998
I42
VSimpleName: print
p78999
tp79000
I3
s(g5936
I42
g5937
Vinsert
p79001
I45
VStringLiteral: "\u005ct\u005ct\u005ctorder by cnt desc\u005cn"
p79002
tp79003
I1
s(g3282
I42
g3283
Vinsert
p79004
I16
VConditionalExpression
p79005
tp79006
I1
s(g836
I42
g837
Vinsert
p79007
I42
VSimpleName: ucase
p79008
tp79009
I1
s(g14088
I42
g14089
Vinsert
p79010
I42
VSimpleName: AtomicIntegerFieldUpdater
p79011
tp79012
I6
s(g24278
I42
g24279
Vinsert
p79013
I42
VSimpleName: String
p79014
tp79015
I9
s(Vinsert
p79016
I42
VSimpleName: output
p79017
Vinsert
p79018
I42
VSimpleName: expr
p79019
tp79020
I6
s(g21315
I42
g21316
Vinsert
p79021
I43
VSimpleType: OracleSelect
p79022
tp79023
I1
s(g14744
I42
g14745
Vinsert
p79024
I33
VNullLiteral
p79025
tp79026
I2
s(g14110
I42
g14111
Vinsert
p79027
I43
VSimpleType: FilterChainImpl
p79028
tp79029
I2
s(g8264
I42
g8265
Vinsert
p79030
I43
VSimpleType: SQLColumnDefinition
p79031
tp79032
I4
s(g20210
I42
g20211
Vinsert
p79033
I42
VSimpleName: decrypt
p79034
tp79035
I1
s(g3939
I42
g3940
Vinsert
p79036
I59
VVariableDeclarationFragment
p79037
tp79038
I13
s(g24125
I42
g24126
Vinsert
p79039
I42
VSimpleName: dataSource
p79040
tp79041
I1
s(g6450
I42
g6451
Vinsert
p79042
I27
VInfixExpression: ==
p79043
tp79044
I2
s(g35083
I42
g35084
Vinsert
p79045
I42
VSimpleName: integerValue
p79046
tp79047
I1
s(g16335
I42
g16336
Vinsert
p79048
I27
VInfixExpression: %
p79049
tp79050
I1
s(g7702
I42
g7703
Vinsert
p79051
I8
VBlock
p79052
tp79053
I1
s(g25950
I42
g25951
Vinsert
p79054
I45
VStringLiteral: "1"
p79055
tp79056
I2
s(g4204
I42
g4205
Vinsert
p79057
I45
VStringLiteral: "FROM lineitem\u005cn"
p79058
tp79059
I1
s(g29741
I42
g29742
Vinsert
p79060
I42
VSimpleName: constaints
p79061
tp79062
I1
s(g4263
I42
g4264
Vinsert
p79063
I60
VVariableDeclarationStatement
p79064
tp79065
I1
s(g16080
I42
g16081
Vinsert
p79066
I43
VSimpleType: IllegalArgumentException
p79067
tp79068
I3
s(g4898
I42
g4899
Vinsert
p79069
I25
VIfStatement
p79070
tp79071
I1
s(g20796
I42
g20797
Vinsert
p79072
I42
VSimpleName: Override
p79073
tp79074
I1
s(g8995
I42
g8996
Vinsert
p79075
I40
VQualifiedName: Token.LIKE
p79076
tp79077
I1
s(g3564
I42
g3565
Vinsert
p79078
I42
VSimpleName: driver
p79079
tp79080
I1
s(g19163
I42
g19164
Vinsert
p79081
I44
VSingleVariableDeclaration
p79082
tp79083
I1
s(g5343
I42
g5344
Vinsert
p79084
I41
VReturnStatement
p79085
tp79086
I1
s(g10493
I42
g10494
Vinsert
p79087
I42
VSimpleName: SQLException
p79088
tp79089
I1
s(g18173
I42
g18174
Vinsert
p79090
I21
VExpressionStatement
p79091
tp79092
I1
s(g361
I42
g362
Vinsert
p79093
I45
VStringLiteral: " PRIMARY KEY(`sess_id`),"
p79094
tp79095
I1
s(g41161
I42
g41162
Vinsert
p79096
I42
VSimpleName: filter
p79097
tp79098
I4
s(g14630
I42
g14631
Vinsert
p79099
I42
VSimpleName: emptyList
p79100
tp79101
I1
s(g54363
I42
g54364
Vinsert
p79102
I45
VStringLiteral: "select id as 39dd"
p79103
tp79104
I1
s(g27142
I42
g27143
Vinsert
p79105
I42
VSimpleName: ucase
p79106
tp79107
I7
s(g1685
I42
g1686
Vinsert
p79108
I42
VSimpleName: connectingCount
p79109
tp79110
I2
s(g7547
I42
g7548
Vinsert
p79111
I45
VStringLiteral: "\u005ctc_mediumtext mediumtext,\u005cn"
p79112
tp79113
I2
s(g48295
I42
g48296
Vinsert
p79114
I42
VSimpleName: PGBoxExpr
p79115
tp79116
I2
s(g14088
I42
g14089
Vinsert
p79117
I43
VSimpleType: AtomicIntegerFieldUpdater
p79118
tp79119
I3
s(g26244
I42
g26245
Vinsert
p79120
I42
VSimpleName: sqlStat
p79121
tp79122
I2
s(g29483
I42
g29484
Vinsert
p79123
I83
VModifier: public
p79124
tp79125
I2
s(g1873
I42
g1874
Vinsert
p79126
I42
VSimpleName: identifierEquals
p79127
tp79128
I1
s(g20564
I42
g20565
Vinsert
p79129
I33
VNullLiteral
p79130
tp79131
I1
s(g4704
I42
g4705
Vinsert
p79132
I42
VSimpleName: put
p79133
tp79134
I2
s(g15387
I42
g15388
Vinsert
p79135
I42
VSimpleName: SQLBooleanExpr
p79136
tp79137
I1
s(g27700
I42
g27701
Vinsert
p79138
I45
VStringLiteral: "ALTER TABLE test_lifecycle"
p79139
tp79140
I1
s(g26873
I42
g26874
Vinsert
p79141
I42
VSimpleName: jdbcUrl
p79142
tp79143
I4
s(g52095
I42
g52096
Vinsert
p79144
I43
VSimpleType: Error
p79145
tp79146
I1
s(g23839
I42
g23840
Vinsert
p79147
I32
VMethodInvocation
p79148
tp79149
I15
s(g11259
I42
g11260
Vinsert
p79150
I34
VNumberLiteral: 0
p79151
tp79152
I3
s(g16060
I42
g16061
Vinsert
p79153
I25
VIfStatement
p79154
tp79155
I1
s(g8969
I42
g8970
Vinsert
p79156
I44
VSingleVariableDeclaration
p79157
tp79158
I1
s(g10039
I42
g10040
Vinsert
p79159
I83
VModifier: public
p79160
tp79161
I6
s(g22826
I42
g22827
Vinsert
p79162
I42
VSimpleName: getCharacterSet
p79163
tp79164
I1
s(g17066
I42
g17067
Vinsert
p79165
I8
VBlock
p79166
tp79167
I2
s(Vinsert
p79168
I42
VSimpleName: accept0
p79169
Vinsert
p79170
I42
VSimpleName: condition
p79171
tp79172
I1
s(g44719
I42
g44720
Vinsert
p79173
I42
VSimpleName: url
p79174
tp79175
I4
s(g14426
I42
g14427
Vinsert
p79176
I32
VMethodInvocation
p79177
tp79178
I3
s(Vinsert
p79179
I42
VSimpleName: setParent
p79180
Vinsert
p79181
I42
VSimpleName: invalidateGlobalIndexes
p79182
tp79183
I2
s(g10016
I42
g10017
Vinsert
p79184
I43
VSimpleType: SQLExpr
p79185
tp79186
I1
s(g33687
I42
g33688
Vinsert
p79187
I42
VSimpleName: password
p79188
tp79189
I1
s(g1476
I42
g1477
Vinsert
p79190
I21
VExpressionStatement
p79191
tp79192
I4
s(g4834
I42
g4835
Vinsert
p79193
I74
VParameterizedType: List<Filter>
p79194
tp79195
I1
s(g9639
I42
g9640
Vinsert
p79196
I45
VStringLiteral: "\u005ctRETURN RESULT;\u005cn"
p79197
tp79198
I1
s(g22894
I42
g22895
Vinsert
p79199
I43
VSimpleType: ResultSetProxy
p79200
tp79201
I2
s(g18938
I42
g18939
Vinsert
p79202
I43
VSimpleType: OracleSelectSubqueryTableSource
p79203
tp79204
I1
s(g4442
I42
g4443
Vinsert
p79205
I59
VVariableDeclarationFragment
p79206
tp79207
I1
s(g17066
I42
g17067
Vinsert
p79208
I32
VMethodInvocation
p79209
tp79210
I2
s(g33627
I42
g33628
Vinsert
p79211
I43
VSimpleType: SQLVariantRefExpr
p79212
tp79213
I1
s(g8360
I42
g8361
Vinsert
p79214
I8
VBlock
p79215
tp79216
I1
s(g597
I42
g598
Vinsert
p79217
I42
VSimpleName: isWarnEnabled
p79218
tp79219
I1
s(g46013
I42
g46014
Vinsert
p79220
I42
VSimpleName: sb
p79221
tp79222
I1
s(g50511
I42
g50512
Vinsert
p79223
I45
VStringLiteral: "SELECT @@GLOBAL.sql_mode"
p79224
tp79225
I1
s(g6375
I42
g6376
Vinsert
p79226
I39
VPrimitiveType: int
p79227
tp79228
I1
s(g6612
I42
g6613
Vinsert
p79229
I42
VSimpleName: spec
p79230
tp79231
I1
s(g63587
I42
g63588
Vinsert
p79232
I43
VSimpleType: SQLSelectStatement
p79233
tp79234
I48
s(g10869
I42
g10870
Vinsert
p79235
I43
VSimpleType: SQLException
p79236
tp79237
I2
s(g5762
I42
g5763
Vinsert
p79238
I42
VSimpleName: dupCloseLogEnable
p79239
tp79240
I1
s(g5320
I42
g5321
Vinsert
p79241
I21
VExpressionStatement
p79242
tp79243
I9
s(g34738
I42
g34739
Vinsert
p79244
I42
VSimpleName: assertEquals
p79245
tp79246
I10
s(g627
I42
g628
Vinsert
p79247
I42
VSimpleName: String
p79248
tp79249
I13
s(g24730
I42
g24731
Vinsert
p79250
I9
VBooleanLiteral: true
p79251
tp79252
I2
s(g25157
I42
g25158
Vinsert
p79253
I44
VSingleVariableDeclaration
p79254
tp79255
I2
s(g27722
I42
g27723
Vinsert
p79256
I42
VSimpleName: stmt
p79257
tp79258
I4
s(g801
I42
g802
Vinsert
p79259
I59
VVariableDeclarationFragment
p79260
tp79261
I1
s(g35882
I42
g35883
Vinsert
p79262
I21
VExpressionStatement
p79263
tp79264
I1
s(g1559
I42
g1560
Vinsert
p79265
I42
VSimpleName: Utils
p79266
tp79267
I3
s(g10159
I42
g10160
Vinsert
p79268
I7
VAssignment: =
p79269
tp79270
I1
s(g33776
I42
g33777
Vinsert
p79271
I27
VInfixExpression: +
p79272
tp79273
I1
s(g10829
I42
g10830
Vinsert
p79274
I42
VSimpleName: st
p79275
tp79276
I1
s(g670
I42
g671
Vinsert
p79277
I42
VSimpleName: url
p79278
tp79279
I1
s(g3724
I42
g3725
Vinsert
p79280
I45
VStringLiteral: "\u005ctPCTINCREASE 0\u005cn"
p79281
tp79282
I1
s(g32202
I42
g32203
Vinsert
p79283
I45
VStringLiteral: "\u005ct, admincode, x, y, zipcode, name\u005cn"
p79284
tp79285
I1
s(g7245
I42
g7246
Vinsert
p79286
I43
VSimpleType: SQLException
p79287
tp79288
I1
s(g18016
I42
g18017
Vinsert
p79289
I83
VModifier: public
p79290
tp79291
I9
s(g1334
I42
g1335
Vinsert
p79292
I45
VStringLiteral: "\u005cn\u005ctPRIMARY KEY (ID_),"
p79293
tp79294
I2
s(g2349
I42
g2350
Vinsert
p79295
I42
VSimpleName: printComment
p79296
tp79297
I1
s(g5022
I42
g5023
Vinsert
p79298
I45
VStringLiteral: "\u005cn\u005ct\u005ct\u005ct\u005ctFROM t4"
p79299
tp79300
I1
s(g6470
I42
g6471
Vinsert
p79301
I43
VSimpleType: Entity
p79302
tp79303
I4
s(g21876
I42
g21877
Vinsert
p79304
I14
VClassInstanceCreation
p79305
tp79306
I1
s(g9397
I42
g9398
Vinsert
p79307
I42
VSimpleName: parseFetch
p79308
tp79309
I1
s(g28885
I42
g28886
Vinsert
p79310
I43
VSimpleType: CompareOp
p79311
tp79312
I1
s(g3528
I42
g3529
Vinsert
p79313
I27
VInfixExpression: ==
p79314
tp79315
I2
s(g19708
I42
g19709
Vinsert
p79316
I8
VBlock
p79317
tp79318
I2
s(g3218
I42
g3219
Vinsert
p79319
I13
VCharacterLiteral: '\u005c''
p79320
tp79321
I2
s(g2977
I42
g2978
Vinsert
p79322
I45
VStringLiteral: "\u005ctAS\u005cn"
p79323
tp79324
I1
s(g13612
I42
g13613
Vinsert
p79325
I74
VParameterizedType: ArrayList<PoolablePreparedStatement>
p79326
tp79327
I1
s(g18768
I42
g18769
Vinsert
p79328
I11
VCastExpression
p79329
tp79330
I3
s(g39992
I42
g39993
Vinsert
p79331
I42
VSimpleName: handleEndTransaction
p79332
tp79333
I1
s(g6607
I42
g6608
Vinsert
p79334
I42
VSimpleName: setUp
p79335
tp79336
I1
s(g17379
I42
g17380
Vinsert
p79337
I22
VFieldAccess
p79338
tp79339
I2
s(g12299
I42
g12300
Vinsert
p79340
I43
VSimpleType: List
p79341
tp79342
I2
s(g9564
I42
g9565
Vinsert
p79343
I42
VSimpleName: SQLBinaryExpr
p79344
tp79345
I2
s(g1279
I42
g1280
Vinsert
p79346
I21
VExpressionStatement
p79347
tp79348
I2
s(g19144
I42
g19145
Vinsert
p79349
I36
VParenthesizedExpression
p79350
tp79351
I3
s(g3554
I42
g3555
Vinsert
p79352
I42
VSimpleName: SQLUtils
p79353
tp79354
I1
s(g14829
I42
g14830
Vinsert
p79355
I42
VSimpleName: result
p79356
tp79357
I1
s(g70648
I42
g70649
Vinsert
p79358
I42
VSimpleName: select
p79359
tp79360
I2
s(g2652
I42
g2653
Vinsert
p79361
I24
VForStatement
p79362
tp79363
I4
s(g9041
I42
g9042
Vinsert
p79364
I42
VSimpleName: visit
p79365
tp79366
I1
s(g38882
I42
g38883
Vinsert
p79367
I45
VStringLiteral: "KEY"
p79368
tp79369
I2
s(g34000
I42
g34001
Vinsert
p79370
I42
VSimpleName: values
p79371
tp79372
I6
s(g6442
I42
g6443
Vinsert
p79373
I45
VStringLiteral: "inner join ("
p79374
tp79375
I1
s(g1612
I42
g1613
Vinsert
p79376
I42
VSimpleName: Boolean
p79377
tp79378
I1
s(Vinsert
p79379
I42
VSimpleName: count
p79380
Vinsert
p79381
I45
VStringLiteral: "select type, count(*) from t group by type"
p79382
tp79383
I1
s(g22802
I42
g22803
Vinsert
p79384
I45
VStringLiteral: " QUERY REWRITE,"
p79385
tp79386
I1
s(Vinsert
p79387
I42
VSimpleName: assertEquals
p79388
Vinsert
p79389
I45
VStringLiteral: "coditions : "
p79390
tp79391
I1
s(g19010
I42
g19011
Vinsert
p79392
I42
VSimpleName: dataMap
p79393
tp79394
I4
s(g47957
I42
g47958
Vinsert
p79395
I42
VSimpleName: jdbcResultSetOpenCount
p79396
tp79397
I2
s(g52754
I42
g52755
Vinsert
p79398
I42
VSimpleName: parseDataTypeRest
p79399
tp79400
I1
s(g23327
I42
g23328
Vinsert
p79401
I42
VSimpleName: getBigDecimal
p79402
tp79403
I1
s(g2543
I42
g2544
Vinsert
p79404
I32
VMethodInvocation
p79405
tp79406
I17
s(g2469
I42
g2470
Vinsert
p79407
I44
VSingleVariableDeclaration
p79408
tp79409
I4
s(g6162
I42
g6163
Vinsert
p79410
I42
VSimpleName: setForcePartition
p79411
tp79412
I3
s(g34721
I42
g34722
Vinsert
p79413
I45
VStringLiteral: "FROM CUSTOMER\u005cn"
p79414
tp79415
I1
s(g13933
I42
g13934
Vinsert
p79416
I42
VSimpleName: OracleExprParser
p79417
tp79418
I1
s(g3806
I42
g3807
Vinsert
p79419
I33
VNullLiteral
p79420
tp79421
I2
s(g5328
I42
g5329
Vinsert
p79422
I27
VInfixExpression: <=
p79423
tp79424
I1
s(g9539
I42
g9540
Vinsert
p79425
I36
VParenthesizedExpression
p79426
tp79427
I5
s(g64459
I42
g64460
Vinsert
p79428
I42
VSimpleName: name2
p79429
tp79430
I1
s(g1501
I42
g1502
Vinsert
p79431
I42
VSimpleName: Object
p79432
tp79433
I1
s(g7542
I42
g7543
Vinsert
p79434
I42
VSimpleName: SQLException
p79435
tp79436
I2
s(g7542
I42
g7543
Vinsert
p79437
I42
VSimpleName: PreparedStatementHolder
p79438
tp79439
I1
s(g15536
I42
g15537
Vinsert
p79440
I60
VVariableDeclarationStatement
p79441
tp79442
I1
s(g20173
I42
g20174
Vinsert
p79443
I7
VAssignment: =
p79444
tp79445
I8
s(g15220
I42
g15221
Vinsert
p79446
I4
VArrayInitializer
p79447
tp79448
I3
s(g106
I42
g107
Vinsert
p79449
I32
VMethodInvocation
p79450
tp79451
I4
s(g9977
I42
g9978
Vinsert
p79452
I83
VModifier: protected
p79453
tp79454
I12
s(g15621
I42
g15622
Vinsert
p79455
I42
VSimpleName: ucase
p79456
tp79457
I1
s(g20888
I42
g20889
Vinsert
p79458
I42
VSimpleName: getKeepAliveCheckCountAndReset
p79459
tp79460
I1
s(g10480
I42
g10481
Vinsert
p79461
I36
VParenthesizedExpression
p79462
tp79463
I1
s(g4745
I42
g4746
Vinsert
p79464
I32
VMethodInvocation
p79465
tp79466
I1
s(g6252
I42
g6253
Vinsert
p79467
I42
VSimpleName: x
p79468
tp79469
I2
s(g30294
I42
g30295
Vinsert
p79470
I34
VNumberLiteral: 1
p79471
tp79472
I2
s(g10338
I42
g10339
Vinsert
p79473
I42
VSimpleName: expr
p79474
tp79475
I2
s(g781
I42
g782
Vinsert
p79476
I11
VCastExpression
p79477
tp79478
I1
s(g15818
I42
g15819
Vinsert
p79479
I42
VSimpleName: uriStatDataList
p79480
tp79481
I1
s(g7031
I42
g7032
Vinsert
p79482
I42
VSimpleName: setNestedTable
p79483
tp79484
I1
s(g36028
I42
g36029
Vinsert
p79485
I48
VSuperMethodInvocation
p79486
tp79487
I1
s(g19278
I42
g19279
Vinsert
p79488
I42
VSimpleName: SQLSequenceExpr
p79489
tp79490
I2
s(g8465
I42
g8466
Vinsert
p79491
I32
VMethodInvocation
p79492
tp79493
I4
s(g9222
I42
g9223
Vinsert
p79494
I42
VSimpleName: getAfterCommentsDirect
p79495
tp79496
I1
s(g29003
I42
g29004
Vinsert
p79497
I42
VSimpleName: lastResultSetError
p79498
tp79499
I2
s(g6236
I42
g6237
Vinsert
p79500
I43
VSimpleType: SQLAlterTableRenameColumn
p79501
tp79502
I1
s(g54879
I42
g54880
Vinsert
p79503
I43
VSimpleType: OracleExtractExpr
p79504
tp79505
I1
s(g15823
I42
g15824
Vinsert
p79506
I43
VSimpleType: SQLName
p79507
tp79508
I1
s(g14697
I42
g14698
Vinsert
p79509
I42
VSimpleName: Assert
p79510
tp79511
I2
s(g5338
I42
g5339
Vinsert
p79512
I42
VSimpleName: SQLSelectQueryBlock
p79513
tp79514
I2
s(g19875
I42
g19876
Vinsert
p79515
I41
VReturnStatement
p79516
tp79517
I1
s(g18113
I42
g18114
Vinsert
p79518
I32
VMethodInvocation
p79519
tp79520
I15
s(g25868
I42
g25869
Vinsert
p79521
I45
VStringLiteral: "ON t1.region_id = t3.region_id\u005cn"
p79522
tp79523
I1
s(g3243
I42
g3244
Vinsert
p79524
I42
VSimpleName: PARAM_NAME_USERNAME
p79525
tp79526
I1
s(g5844
I42
g5845
Vinsert
p79527
I36
VParenthesizedExpression
p79528
tp79529
I1
s(g967
I42
g968
Vinsert
p79530
I40
VQualifiedName: System.out
p79531
tp79532
I10
s(g50239
I42
g50240
Vinsert
p79533
I45
VStringLiteral: "RELEASE SAVEPOINT "
p79534
tp79535
I2
s(g4849
I42
g4850
Vinsert
p79536
I5
VArrayType: int[]
p79537
tp79538
I1
s(g27644
I42
g27645
Vinsert
p79539
I31
VMethodDeclaration
p79540
tp79541
I1
s(g27208
I42
g27209
Vinsert
p79542
I14
VClassInstanceCreation
p79543
tp79544
I1
s(g5328
I42
g5329
Vinsert
p79545
I83
VModifier: public
p79546
tp79547
I1
s(g1770
I42
g1771
Vinsert
p79548
I8
VBlock
p79549
tp79550
I6
s(g821
I42
g822
Vinsert
p79551
I11
VCastExpression
p79552
tp79553
I1
s(g34790
I42
g34791
Vinsert
p79554
I27
VInfixExpression: !=
p79555
tp79556
I10
s(g29718
I42
g29719
Vinsert
p79557
I45
VStringLiteral: "\u005cn\u005ctUSING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE \u005c"USERS\u005c" ENABLE"
p79558
tp79559
I5
s(g49623
I42
g49624
Vinsert
p79560
I42
VSimpleName: poolableConn
p79561
tp79562
I1
s(g39926
I42
g39927
Vinsert
p79563
I42
VSimpleName: Boolean
p79564
tp79565
I1
s(g2319
I42
g2320
Vinsert
p79566
I21
VExpressionStatement
p79567
tp79568
I6
s(g1745
I42
g1746
Vinsert
p79569
I42
VSimpleName: getAttribute
p79570
tp79571
I1
s(g28880
I42
g28881
Vinsert
p79572
I42
VSimpleName: getExpr
p79573
tp79574
I1
s(g18496
I42
g18497
Vinsert
p79575
I42
VSimpleName: x
p79576
tp79577
I4
s(g33619
I42
g33620
Vinsert
p79578
I40
VQualifiedName: Token.SELECT
p79579
tp79580
I1
s(Vinsert
p79581
I42
VSimpleName: visit
p79582
Vinsert
p79583
I42
VSimpleName: deleteWhere
p79584
tp79585
I2
s(g6207
I42
g6208
Vinsert
p79586
I8
VBlock
p79587
tp79588
I1
s(g2727
I42
g2728
Vinsert
p79589
I21
VExpressionStatement
p79590
tp79591
I1
s(g6539
I42
g6540
Vinsert
p79592
I45
VStringLiteral: "\u005cn\u005cthire_date DATE,"
p79593
tp79594
I4
s(g32833
I42
g32834
Vinsert
p79595
I42
VSimpleName: getTableNames
p79596
tp79597
I1
s(g2140
I42
g2141
Vinsert
p79598
I21
VExpressionStatement
p79599
tp79600
I10
s(g14187
I42
g14188
Vinsert
p79601
I31
VMethodDeclaration
p79602
tp79603
I1
s(g1120
I42
g1121
Vinsert
p79604
I31
VMethodDeclaration
p79605
tp79606
I1
s(g24384
I42
g24385
Vinsert
p79607
I42
VSimpleName: Assert
p79608
tp79609
I2
s(g27620
I42
g27621
Vinsert
p79610
I45
VStringLiteral: "CONSTRAINT PRIMARY_WORKTASK PRIMARY KEY (WORKITEMID)\u005cn"
p79611
tp79612
I2
s(g5485
I42
g5486
Vinsert
p79613
I8
VBlock
p79614
tp79615
I1
s(g7532
I42
g7533
Vinsert
p79616
I14
VClassInstanceCreation
p79617
tp79618
I1
s(g957
I42
g958
Vinsert
p79619
I42
VSimpleName: x
p79620
tp79621
I2
s(g29440
I42
g29441
Vinsert
p79622
I59
VVariableDeclarationFragment
p79623
tp79624
I1
s(g14212
I42
g14213
Vinsert
p79625
I57
VTypeLiteral
p79626
tp79627
I1
s(g9150
I42
g9151
Vinsert
p79628
I42
VSimpleName: System
p79629
tp79630
I2
s(g32188
I42
g32189
Vinsert
p79631
I44
VSingleVariableDeclaration
p79632
tp79633
I2
s(g7578
I42
g7579
Vinsert
p79634
I42
VSimpleName: SQLExpr
p79635
tp79636
I1
s(g366
I42
g367
Vinsert
p79637
I21
VExpressionStatement
p79638
tp79639
I3
s(g18113
I42
g18114
Vinsert
p79640
I11
VCastExpression
p79641
tp79642
I2
s(g5200
I42
g5201
Vinsert
p79643
I27
VInfixExpression: ==
p79644
tp79645
I1
s(g2383
I42
g2384
Vinsert
p79646
I7
VAssignment: =
p79647
tp79648
I1
s(g4490
I42
g4491
Vinsert
p79649
I42
VSimpleName: MySqlSelectQueryBlock
p79650
tp79651
I4
s(g10498
I42
g10499
Vinsert
p79652
I14
VClassInstanceCreation
p79653
tp79654
I1
s(g39151
I42
g39152
Vinsert
p79655
I42
VSimpleName: tableElementList
p79656
tp79657
I1
s(g11420
I42
g11421
Vinsert
p79658
I11
VCastExpression
p79659
tp79660
I1
s(g7532
I42
g7533
Vinsert
p79661
I42
VSimpleName: dialog
p79662
tp79663
I2
s(g15823
I42
g15824
Vinsert
p79664
I44
VSingleVariableDeclaration
p79665
tp79666
I1
s(g9722
I42
g9723
Vinsert
p79667
I42
VSimpleName: SQLBinaryOpExpr
p79668
tp79669
I18
s(g10039
I42
g10040
Vinsert
p79670
I21
VExpressionStatement
p79671
tp79672
I17
s(g21424
I42
g21425
Vinsert
p79673
I42
VSimpleName: subViewName
p79674
tp79675
I1
s(g8052
I42
g8053
Vinsert
p79676
I25
VIfStatement
p79677
tp79678
I1
s(g5333
I42
g5334
Vinsert
p79679
I42
VSimpleName: getTypeName
p79680
tp79681
I3
s(g36658
I42
g36659
Vinsert
p79682
I42
VSimpleName: SqlServerOutputVisitor
p79683
tp79684
I1
s(g13483
I42
g13484
Vinsert
p79685
I40
VQualifiedName: Token.RPAREN
p79686
tp79687
I2
s(g30945
I42
g30946
Vinsert
p79688
I42
VSimpleName: setStrictSyntaxCheck
p79689
tp79690
I1
s(g20596
I42
g20597
Vinsert
p79691
I42
VSimpleName: nextToken
p79692
tp79693
I2
s(g1251
I42
g1252
Vinsert
p79694
I43
VSimpleType: Object
p79695
tp79696
I2
s(g8583
I42
g8584
Vinsert
p79697
I27
VInfixExpression: ==
p79698
tp79699
I1
s(g3103
I42
g3104
Vinsert
p79700
I8
VBlock
p79701
tp79702
I11
s(g24943
I42
g24944
Vinsert
p79703
I42
VSimpleName: incrementDeleteCount
p79704
tp79705
I1
s(g4065
I42
g4066
Vinsert
p79706
I42
VSimpleName: isUseLocalSessionState
p79707
tp79708
I1
s(g2393
I42
g2394
Vinsert
p79709
I58
VVariableDeclarationExpression
p79710
tp79711
I1
s(g7777
I42
g7778
Vinsert
p79712
I42
VSimpleName: url
p79713
tp79714
I1
s(g6460
I42
g6461
Vinsert
p79715
I45
VStringLiteral: "FROM db, bs\u005cn"
p79716
tp79717
I1
s(g3913
I42
g3914
Vinsert
p79718
I27
VInfixExpression: !=
p79719
tp79720
I13
s(Vinsert
p79721
I42
VSimpleName: toStatementList
p79722
Vinsert
p79723
I45
VStringLiteral: "create database super default character set utf8 collate = utf8_bin character set utf8 collate utf8_bin;"
p79724
tp79725
I1
s(g3088
I42
g3089
Vinsert
p79726
I43
VSimpleType: Put
p79727
tp79728
I1
s(g1923
I42
g1924
Vinsert
p79729
I33
VNullLiteral
p79730
tp79731
I1
s(g54368
I42
g54369
Vinsert
p79732
I42
VSimpleName: sign
p79733
tp79734
I1
s(g16648
I42
g16649
Vinsert
p79735
I42
VSimpleName: alias
p79736
tp79737
I4
s(g2388
I42
g2389
Vinsert
p79738
I42
VSimpleName: binaryA
p79739
tp79740
I4
s(g8142
I42
g8143
Vinsert
p79741
I42
VSimpleName: stmt
p79742
tp79743
I12
s(g9949
I42
g9950
Vinsert
p79744
I43
VSimpleType: OracleFunctionDataType
p79745
tp79746
I4
s(g7542
I42
g7543
Vinsert
p79747
I42
VSimpleName: dataSource
p79748
tp79749
I1
s(g1236
I42
g1237
Vinsert
p79750
I22
VFieldAccess
p79751
tp79752
I2
s(g11816
I42
g11817
Vinsert
p79753
I45
VStringLiteral: "\u005ct, sum(salary) over (partition by department_id order by last_name, \u005cn"
p79754
tp79755
I1
s(g3233
I42
g3234
Vinsert
p79756
I43
VSimpleType: Object
p79757
tp79758
I32
s(g8001
I42
g8002
Vinsert
p79759
I41
VReturnStatement
p79760
tp79761
I1
s(g10953
I42
g10954
Vinsert
p79762
I42
VSimpleName: SQLSelectQueryBlock
p79763
tp79764
I1
s(g2895
I42
g2896
Vinsert
p79765
I42
VSimpleName: lexer
p79766
tp79767
I3
s(g7986
I42
g7987
Vinsert
p79768
I43
VSimpleType: MysqlForeignKey
p79769
tp79770
I2
s(g424
I42
g425
Vinsert
p79771
I42
VSimpleName: addSortedByItem
p79772
tp79773
I1
s(g17534
I42
g17535
Vinsert
p79774
I42
VSimpleName: holer
p79775
tp79776
I1
s(g6288
I42
g6289
Vinsert
p79777
I42
VSimpleName: ManagementFactory
p79778
tp79779
I1
s(g23476
I42
g23477
Vinsert
p79780
I45
VStringLiteral: "\u005ct, IFNULL(flags, 0)\u005cn"
p79781
tp79782
I1
s(g16375
I42
g16376
Vinsert
p79783
I45
VStringLiteral: ", "
p79784
tp79785
I1
s(Vinsert
p79786
I42
VSimpleName: append
p79787
Vinsert
p79788
I42
VSimpleName: milliSecond
p79789
tp79790
I1
s(g18672
I42
g18673
Vinsert
p79791
I42
VSimpleName: obj
p79792
tp79793
I4
s(g3885
I42
g3886
Vinsert
p79794
I42
VSimpleName: test_0
p79795
tp79796
I4
s(g15345
I42
g15346
Vinsert
p79797
I43
VSimpleType: Throwable
p79798
tp79799
I1
s(g4399
I42
g4400
Vinsert
p79800
I42
VSimpleName: getReferenceOn
p79801
tp79802
I1
s(g34000
I42
g34001
Vinsert
p79803
I45
VStringLiteral: "?"
p79804
tp79805
I1
s(g18415
I42
g18416
Vinsert
p79806
I42
VSimpleName: visit
p79807
tp79808
I3
s(g37711
I42
g37712
Vinsert
p79809
I42
VSimpleName: startWith
p79810
tp79811
I1
s(g10459
I42
g10460
Vinsert
p79812
I62
VInstanceofExpression
p79813
tp79814
I1
s(g12480
I42
g12481
Vinsert
p79815
I52
VThisExpression
p79816
tp79817
I2
s(g4780
I42
g4781
Vinsert
p79818
I14
VClassInstanceCreation
p79819
tp79820
I1
s(g6323
I42
g6324
Vinsert
p79821
I31
VMethodDeclaration
p79822
tp79823
I1
s(g11978
I42
g11979
Vinsert
p79824
I42
VSimpleName: MySqlSelectQueryBlock
p79825
tp79826
I2
s(g21876
I42
g21877
Vinsert
p79827
I34
VNumberLiteral: 10
p79828
tp79829
I1
s(g43158
I42
g43159
Vinsert
p79830
I25
VIfStatement
p79831
tp79832
I1
s(g27620
I42
g27621
Vinsert
p79833
I45
VStringLiteral: " WORKITEMID VARCHAR(40) NOT NULL,\u005cn"
p79834
tp79835
I1
s(g10262
I42
g10263
Vinsert
p79836
I40
VQualifiedName: Token.EXISTS
p79837
tp79838
I1
s(g8171
I42
g8172
Vinsert
p79839
I43
VSimpleType: SQLAlterTableAlterColumn
p79840
tp79841
I1
s(g58784
I42
g58785
Vinsert
p79842
I42
VSimpleName: offset
p79843
tp79844
I2
s(g6031
I42
g6032
Vinsert
p79845
I42
VSimpleName: x
p79846
tp79847
I2
s(g13437
I42
g13438
Vinsert
p79848
I45
VStringLiteral: "\u005ct, supReg.analysed, supReg.feedbackWay, t.note, COUNT(DISTINCT supReg.regId) OVER () AS TOTALCOUNT\u005cn"
p79849
tp79850
I1
s(g10655
I42
g10656
Vinsert
p79851
I8
VBlock
p79852
tp79853
I1
s(g21458
I42
g21459
Vinsert
p79854
I42
VSimpleName: Object
p79855
tp79856
I1
s(g30429
I42
g30430
Vinsert
p79857
I40
VQualifiedName: Token.FUNCTION
p79858
tp79859
I1
s(g1680
I42
g1681
Vinsert
p79860
I31
VMethodDeclaration
p79861
tp79862
I5
s(g29928
I42
g29929
Vinsert
p79863
I43
VSimpleType: MySqlShowProcedureStatusStatement
p79864
tp79865
I2
s(g2609
I42
g2610
Vinsert
p79866
I42
VSimpleName: test_dupCloseLogEnable
p79867
tp79868
I1
s(g44694
I42
g44695
Vinsert
p79869
I43
VSimpleType: SQLBinaryOpExpr
p79870
tp79871
I2
s(g34738
I42
g34739
Vinsert
p79872
I45
VStringLiteral: "CREATE TABLE sc001.test STORE AS parquet\u005cn"
p79873
tp79874
I1
s(g6909
I42
g6910
Vinsert
p79875
I42
VSimpleName: getPreparedStatementHolder
p79876
tp79877
I4
s(g6622
I42
g6623
Vinsert
p79878
I52
VThisExpression
p79879
tp79880
I1
s(g11983
I42
g11984
Vinsert
p79881
I83
VModifier: final
p79882
tp79883
I2
s(g5389
I42
g5390
Vinsert
p79884
I52
VThisExpression
p79885
tp79886
I2
s(g28185
I42
g28186
Vinsert
p79887
I42
VSimpleName: Exception
p79888
tp79889
I2
s(g2054
I42
g2055
Vinsert
p79890
I42
VSimpleName: updateCount
p79891
tp79892
I2
s(g11585
I42
g11586
Vinsert
p79893
I59
VVariableDeclarationFragment
p79894
tp79895
I1
s(g4288
I42
g4289
Vinsert
p79896
I42
VSimpleName: algorithm
p79897
tp79898
I6
s(g542
I42
g543
Vinsert
p79899
I45
VStringLiteral: "\u005ct\u005ct'preCheckMobile', \u005cn"
p79900
tp79901
I1
s(g25279
I42
g25280
Vinsert
p79902
I45
VStringLiteral: "d\u005cn"
p79903
tp79904
I1
s(g9924
I42
g9925
Vinsert
p79905
I42
VSimpleName: JdbcStatContext
p79906
tp79907
I8
s(g8430
I42
g8431
Vinsert
p79908
I45
VStringLiteral: "alter table sale_detail drop if not exists partition (sale_date='201312', region='hangzhou');"
p79909
tp79910
I1
s(g6051
I42
g6052
Vinsert
p79911
I8
VBlock
p79912
tp79913
I1
s(g6318
I42
g6319
Vinsert
p79914
I42
VSimpleName: v
p79915
tp79916
I2
s(g3007
I42
g3008
Vinsert
p79917
I42
VSimpleName: SQLIntegerExpr
p79918
tp79919
I1
s(g1160
I42
g1161
Vinsert
p79920
I8
VBlock
p79921
tp79922
I1
s(g8886
I42
g8887
Vinsert
p79923
I42
VSimpleName: put
p79924
tp79925
I2
s(g2712
I42
g2713
Vinsert
p79926
I40
VQualifiedName: JdbcConstants.MYSQL
p79927
tp79928
I6
s(g7007
I42
g7008
Vinsert
p79929
I42
VSimpleName: getMockConnection
p79930
tp79931
I1
s(g8360
I42
g8361
Vinsert
p79932
I60
VVariableDeclarationStatement
p79933
tp79934
I2
s(g51898
I42
g51899
Vinsert
p79935
I45
VStringLiteral: "CREATE VIEW clerk\u005cn"
p79936
tp79937
I1
s(g15092
I42
g15093
Vinsert
p79938
I42
VSimpleName: size
p79939
tp79940
I7
s(g5394
I42
g5395
Vinsert
p79941
I40
VQualifiedName: Token.ORDER
p79942
tp79943
I1
s(g3618
I42
g3619
Vinsert
p79944
I8
VBlock
p79945
tp79946
I2
s(g226
I42
g227
Vinsert
p79947
I3
VArrayCreation
p79948
tp79949
I1
s(g612
I42
g613
Vinsert
p79950
I44
VSingleVariableDeclaration
p79951
tp79952
I1
s(g40231
I42
g40232
Vinsert
p79953
I42
VSimpleName: stat
p79954
tp79955
I6
s(g44887
I42
g44888
Vinsert
p79956
I42
VSimpleName: parseStatementListDialect
p79957
tp79958
I2
s(g30842
I42
g30843
Vinsert
p79959
I60
VVariableDeclarationStatement
p79960
tp79961
I2
s(g6396
I42
g6397
Vinsert
p79962
I21
VExpressionStatement
p79963
tp79964
I1
s(g4824
I42
g4825
Vinsert
p79965
I59
VVariableDeclarationFragment
p79966
tp79967
I1
s(g9732
I42
g9733
Vinsert
p79968
I83
VModifier: public
p79969
tp79970
I1
s(g14226
I42
g14227
Vinsert
p79971
I16
VConditionalExpression
p79972
tp79973
I1
s(g28204
I42
g28205
Vinsert
p79974
I42
VSimpleName: exprParser
p79975
tp79976
I14
s(g9914
I42
g9915
Vinsert
p79977
I25
VIfStatement
p79978
tp79979
I6
s(g16525
I42
g16526
Vinsert
p79980
I42
VSimpleName: column
p79981
tp79982
I1
s(g26179
I42
g26180
Vinsert
p79983
I42
VSimpleName: setTable
p79984
tp79985
I2
s(g14324
I42
g14325
Vinsert
p79986
I42
VSimpleName: SQLColumnDefinition
p79987
tp79988
I2
s(g5148
I42
g5149
Vinsert
p79989
I8
VBlock
p79990
tp79991
I1
s(g14234
I42
g14235
Vinsert
p79992
I42
VSimpleName: length
p79993
tp79994
I1
s(g1299
I42
g1300
Vinsert
p79995
I42
VSimpleName: datasource
p79996
tp79997
I2
s(Vinsert
p79998
I42
VSimpleName: getUsing
p79999
Vinsert
p80000
I45
VStringLiteral: "USING "
p80001
tp80002
I2
s(g18491
I42
g18492
Vinsert
p80003
I45
VStringLiteral: "'a' RLIKE '^[a-d]'"
p80004
tp80005
I1
s(g21375
I42
g21376
Vinsert
p80006
I42
VSimpleName: setTestOnReturn
p80007
tp80008
I1
s(g1918
I42
g1919
Vinsert
p80009
I42
VSimpleName: duplicateKeyUpdate
p80010
tp80011
I1
s(g5470
I42
g5471
Vinsert
p80012
I40
VQualifiedName: JdbcConstants.ORACLE
p80013
tp80014
I1
s(g16715
I42
g16716
Vinsert
p80015
I42
VSimpleName: OracleValidConnectionChecker
p80016
tp80017
I1
s(g16359
I42
g16360
Vinsert
p80018
I45
VStringLiteral: " with password = "
p80019
tp80020
I1
s(g6074
I42
g6075
Vinsert
p80021
I8
VBlock
p80022
tp80023
I2
s(g3732
I42
g3733
Vinsert
p80024
I42
VSimpleName: Assert
p80025
tp80026
I1
s(g2253
I42
g2254
Vinsert
p80027
I42
VSimpleName: getPrintStream
p80028
tp80029
I1
s(g23839
I42
g23840
Vinsert
p80030
I43
VSimpleType: DruidPooledConnection
p80031
tp80032
I1
s(g9089
I42
g9090
Vinsert
p80033
I42
VSimpleName: test_log4jdbc_es_1
p80034
tp80035
I1
s(g19404
I42
g19405
Vinsert
p80036
I42
VSimpleName: Long
p80037
tp80038
I1
s(g1085
I42
g1086
Vinsert
p80039
I42
VSimpleName: List
p80040
tp80041
I14
s(g28392
I42
g28393
Vinsert
p80042
I42
VSimpleName: plainText
p80043
tp80044
I1
s(g4898
I42
g4899
Vinsert
p80045
I42
VSimpleName: lexer
p80046
tp80047
I2
s(g4308
I42
g4309
Vinsert
p80048
I32
VMethodInvocation
p80049
tp80050
I1
s(g19207
I42
g19208
Vinsert
p80051
I42
VSimpleName: parseReturningClause
p80052
tp80053
I1
s(g7665
I42
g7666
Vinsert
p80054
I42
VSimpleName: gtrid
p80055
tp80056
I1
s(g14026
I42
g14027
Vinsert
p80057
I42
VSimpleName: setOffset
p80058
tp80059
I1
s(g786
I42
g787
Vinsert
p80060
I39
VPrimitiveType: void
p80061
tp80062
I2
s(g4116
I42
g4117
Vinsert
p80063
I45
VStringLiteral: "= "
p80064
tp80065
I1
s(g11634
I42
g11635
Vinsert
p80066
I42
VSimpleName: JdbcSqlStat
p80067
tp80068
I2
s(g4323
I42
g4324
Vinsert
p80069
I42
VSimpleName: xaResources
p80070
tp80071
I1
s(g602
I42
g603
Vinsert
p80072
I42
VSimpleName: setUp
p80073
tp80074
I3
s(g10498
I42
g10499
Vinsert
p80075
I42
VSimpleName: ResultSetMetaDataProxyImpl
p80076
tp80077
I1
s(g23526
I42
g23527
Vinsert
p80078
I33
VNullLiteral
p80079
tp80080
I2
s(g9791
I42
g9792
Vinsert
p80081
I42
VSimpleName: Integer
p80082
tp80083
I1
s(g6655
I42
g6656
Vinsert
p80084
I42
VSimpleName: conn
p80085
tp80086
I2
s(g5200
I42
g5201
Vinsert
p80087
I42
VSimpleName: setBackground
p80088
tp80089
I1
s(g21295
I42
g21296
Vinsert
p80090
I43
VSimpleType: OraclePriorExpr
p80091
tp80092
I1
s(g3154
I42
g3155
Vinsert
p80093
I42
VSimpleName: condition
p80094
tp80095
I3
s(g28764
I42
g28765
Vinsert
p80096
I42
VSimpleName: errorCount
p80097
tp80098
I1
s(g14829
I42
g14830
Vinsert
p80099
I60
VVariableDeclarationStatement
p80100
tp80101
I18
s(g11529
I42
g11530
Vinsert
p80102
I42
VSimpleName: startFullGC
p80103
tp80104
I1
s(g11634
I42
g11635
Vinsert
p80105
I42
VSimpleName: DruidStatServiceUtils
p80106
tp80107
I1
s(g2324
I42
g2325
Vinsert
p80108
I42
VSimpleName: millis
p80109
tp80110
I2
s(g301
I42
g302
Vinsert
p80111
I45
VStringLiteral: "  from V v\u005cn"
p80112
tp80113
I1
s(g2819
I42
g2820
Vinsert
p80114
I8
VBlock
p80115
tp80116
I2
s(g2992
I42
g2993
Vinsert
p80117
I59
VVariableDeclarationFragment
p80118
tp80119
I7
s(g23793
I42
g23794
Vinsert
p80120
I45
VStringLiteral: "\u005cn\u005ctPARTITION p2 VALUES LESS THAN (2500),"
p80121
tp80122
I2
s(g14083
I42
g14084
Vinsert
p80123
I42
VSimpleName: wrapper
p80124
tp80125
I4
s(g4303
I42
g4304
Vinsert
p80126
I45
VStringLiteral: "\u005ct\u005ctRETURN ODCIConst.Success;\u005cn"
p80127
tp80128
I1
s(g16728
I42
g16729
Vinsert
p80129
I42
VSimpleName: stringVal
p80130
tp80131
I5
s(g2915
I42
g2916
Vinsert
p80132
I40
VQualifiedName: Token.WHERE
p80133
tp80134
I1
s(g34055
I42
g34056
Vinsert
p80135
I42
VSimpleName: parseAlter
p80136
tp80137
I2
s(g61149
I42
g61150
Vinsert
p80138
I42
VSimpleName: SQLAnyExpr
p80139
tp80140
I1
s(g50053
I42
g50054
Vinsert
p80141
I42
VSimpleName: parseHints
p80142
tp80143
I6
s(g27660
I42
g27661
Vinsert
p80144
I42
VSimpleName: sheet
p80145
tp80146
I1
s(g5022
I42
g5023
Vinsert
p80147
I45
VStringLiteral: "\u005cn\u005ct\u005ct\u005ct\u005ctFROM (SELECT *"
p80148
tp80149
I1
s(g3931
I42
g3932
Vinsert
p80150
I59
VVariableDeclarationFragment
p80151
tp80152
I6
s(g16294
I42
g16295
Vinsert
p80153
I42
VSimpleName: left
p80154
tp80155
I5
s(g8891
I42
g8892
Vinsert
p80156
I42
VSimpleName: i
p80157
tp80158
I10
s(g1863
I42
g1864
Vinsert
p80159
I42
VSimpleName: putContext
p80160
tp80161
I1
s(g1830
I42
g1831
Vinsert
p80162
I60
VVariableDeclarationStatement
p80163
tp80164
I3
s(g34000
I42
g34001
Vinsert
p80165
I14
VClassInstanceCreation
p80166
tp80167
I12
s(g3679
I42
g3680
Vinsert
p80168
I8
VBlock
p80169
tp80170
I5
s(g62815
I42
g62816
Vinsert
p80171
I42
VSimpleName: getAlias
p80172
tp80173
I1
s(g196
I42
g197
Vinsert
p80174
I45
VStringLiteral: "\u005ctWHERE MKTG_PLAN_LVL2_ID <> MKTG_PLAN_LVL4_ID\u005cn"
p80175
tp80176
I1
s(g4399
I42
g4400
Vinsert
p80177
I42
VSimpleName: x
p80178
tp80179
I2
s(g19708
I42
g19709
Vinsert
p80180
I27
VInfixExpression: !=
p80181
tp80182
I1
s(g9919
I42
g9920
Vinsert
p80183
I42
VSimpleName: MySqlSelectParser
p80184
tp80185
I2
s(g64848
I42
g64849
Vinsert
p80186
I45
VStringLiteral: "SELECT id, value FROM m_sql_const"
p80187
tp80188
I1
s(g7375
I42
g7376
Vinsert
p80189
I43
VSimpleType: Statement
p80190
tp80191
I1
s(g4370
I42
g4371
Vinsert
p80192
I43
VSimpleType: SQLCreateTableStatement
p80193
tp80194
I2
s(g2837
I42
g2838
Vinsert
p80195
I42
VSimpleName: genKeyPair
p80196
tp80197
I1
s(g9544
I42
g9545
Vinsert
p80198
I45
VStringLiteral: "ORDER BY cq.created_at ASC, cq.id ASC"
p80199
tp80200
I1
s(g2115
I42
g2116
Vinsert
p80201
I27
VInfixExpression: !=
p80202
tp80203
I1
s(g6755
I42
g6756
Vinsert
p80204
I32
VMethodInvocation
p80205
tp80206
I9
s(g11479
I42
g11480
Vinsert
p80207
I42
VSimpleName: columns
p80208
tp80209
I4
s(g1090
I42
g1091
Vinsert
p80210
I42
VSimpleName: SQLDeclareStatement
p80211
tp80212
I1
s(g3243
I42
g3244
Vinsert
p80213
I43
VSimpleType: String
p80214
tp80215
I2
s(g522
I42
g523
Vinsert
p80216
I42
VSimpleName: SQLCurrentOfCursorExpr
p80217
tp80218
I2
s(g32782
I42
g32783
Vinsert
p80219
I83
VModifier: public
p80220
tp80221
I2
s(g15761
I42
g15762
Vinsert
p80222
I44
VSingleVariableDeclaration
p80223
tp80224
I2
s(g3271
I42
g3272
Vinsert
p80225
I42
VSimpleName: getViolationCount
p80226
tp80227
I1
s(g4452
I42
g4453
Vinsert
p80228
I32
VMethodInvocation
p80229
tp80230
I6
s(g1279
I42
g1280
Vinsert
p80231
I9
VBooleanLiteral: false
p80232
tp80233
I1
s(g6359
I42
g6360
Vinsert
p80234
I42
VSimpleName: getCharsetExpr
p80235
tp80236
I1
s(g3213
I42
g3214
Vinsert
p80237
I42
VSimpleName: expr
p80238
tp80239
I23
s(g15823
I42
g15824
Vinsert
p80240
I83
VModifier: public
p80241
tp80242
I2
s(g31402
I42
g31403
Vinsert
p80243
I45
VStringLiteral: "SELECT COUNT(*)\u005cn"
p80244
tp80245
I1
s(g9307
I42
g9308
Vinsert
p80246
I42
VSimpleName: WallTableStat
p80247
tp80248
I5
s(g26404
I42
g26405
Vinsert
p80249
I42
VSimpleName: getObject
p80250
tp80251
I1
s(g40673
I42
g40674
Vinsert
p80252
I42
VSimpleName: parameterMap
p80253
tp80254
I2
s(g4669
I42
g4670
Vinsert
p80255
I27
VInfixExpression: ==
p80256
tp80257
I1
s(Vinsert
p80258
I42
VSimpleName: visit
p80259
Vinsert
p80260
I43
VSimpleType: SQLInListExpr
p80261
tp80262
I1
s(g47511
I42
g47512
Vinsert
p80263
I45
VStringLiteral: "CONNECT_BY_ROOT"
p80264
tp80265
I1
s(g26553
I42
g26554
Vinsert
p80266
I42
VSimpleName: x
p80267
tp80268
I2
s(g18648
I42
g18649
Vinsert
p80269
I32
VMethodInvocation
p80270
tp80271
I1
s(g5277
I42
g5278
Vinsert
p80272
I42
VSimpleName: s
p80273
tp80274
I1
s(g19841
I42
g19842
Vinsert
p80275
I42
VSimpleName: System
p80276
tp80277
I2
s(g13191
I42
g13192
Vinsert
p80278
I42
VSimpleName: PreparedStatement
p80279
tp80280
I3
s(g8062
I42
g8063
Vinsert
p80281
I21
VExpressionStatement
p80282
tp80283
I3
s(g3579
I42
g3580
Vinsert
p80284
I32
VMethodInvocation
p80285
tp80286
I2
s(g18113
I42
g18114
Vinsert
p80287
I42
VSimpleName: OracleCreateSynonymStatement
p80288
tp80289
I2
s(g16648
I42
g16649
Vinsert
p80290
I44
VSingleVariableDeclaration
p80291
tp80292
I4
s(g13201
I42
g13202
Vinsert
p80293
I25
VIfStatement
p80294
tp80295
I1
s(g846
I42
g847
Vinsert
p80296
I42
VSimpleName: printAndAccept
p80297
tp80298
I1
s(g31934
I42
g31935
Vinsert
p80299
I42
VSimpleName: content
p80300
tp80301
I2
s(Vinsert
p80302
I42
VSimpleName: visit
p80303
Vinsert
p80304
I42
VSimpleName: OracleOutputVisitor
p80305
tp80306
I1
s(g15875
I42
g15876
Vinsert
p80307
I44
VSingleVariableDeclaration
p80308
tp80309
I1
s(g9529
I42
g9530
Vinsert
p80310
I43
VSimpleType: WallProvider
p80311
tp80312
I1
s(g9456
I42
g9457
Vinsert
p80313
I22
VFieldAccess
p80314
tp80315
I1
s(g25157
I42
g25158
Vinsert
p80316
I43
VSimpleType: GenericServlet
p80317
tp80318
I2
s(g25556
I42
g25557
Vinsert
p80319
I41
VReturnStatement
p80320
tp80321
I5
s(g17699
I42
g17700
Vinsert
p80322
I43
VSimpleType: HiveOutputVisitor
p80323
tp80324
I2
s(g22126
I42
g22127
Vinsert
p80325
I8
VBlock
p80326
tp80327
I1
s(g7527
I42
g7528
Vinsert
p80328
I8
VBlock
p80329
tp80330
I3
s(g14985
I42
g14986
Vinsert
p80331
I42
VSimpleName: level
p80332
tp80333
I1
s(g42013
I42
g42014
Vinsert
p80334
I42
VSimpleName: rs
p80335
tp80336
I1
s(g31798
I42
g31799
Vinsert
p80337
I42
VSimpleName: size
p80338
tp80339
I7
s(g695
I42
g696
Vinsert
p80340
I59
VVariableDeclarationFragment
p80341
tp80342
I3
s(g1304
I42
g1305
Vinsert
p80343
I43
VSimpleType: MySqlLoopStatement
p80344
tp80345
I2
s(g3159
I42
g3160
Vinsert
p80346
I42
VSimpleName: SQLException
p80347
tp80348
I2
s(g39672
I42
g39673
Vinsert
p80349
I42
VSimpleName: TestCase
p80350
tp80351
I14
s(g6671
I42
g6672
Vinsert
p80352
I43
VSimpleType: IllegalSQLObjectViolation
p80353
tp80354
I2
s(g10433
I42
g10434
Vinsert
p80355
I21
VExpressionStatement
p80356
tp80357
I4
s(g37280
I42
g37281
Vinsert
p80358
I42
VSimpleName: initialize
p80359
tp80360
I1
s(g21489
I42
g21490
Vinsert
p80361
I33
VNullLiteral
p80362
tp80363
I5
s(g25417
I42
g25418
Vinsert
p80364
I45
VStringLiteral: "jdbc:mock:xxx"
p80365
tp80366
I1
s(g6617
I42
g6618
Vinsert
p80367
I42
VSimpleName: getKeywords
p80368
tp80369
I2
s(g17066
I42
g17067
Vinsert
p80370
I27
VInfixExpression: <
p80371
tp80372
I2
s(g26521
I42
g26522
Vinsert
p80373
I45
VStringLiteral: ".+\u005c\u005c[[0-9]+\u005c\u005c]"
p80374
tp80375
I1
s(g25751
I42
g25752
Vinsert
p80376
I60
VVariableDeclarationStatement
p80377
tp80378
I2
s(g11428
I42
g11429
Vinsert
p80379
I42
VSimpleName: savePoint
p80380
tp80381
I1
s(Vinsert
p80382
I42
VSimpleName: get
p80383
Vinsert
p80384
I42
VSimpleName: SQLDropViewStatement
p80385
tp80386
I2
s(g71905
I42
g71906
Vinsert
p80387
I42
VSimpleName: print
p80388
tp80389
I3
s(g14055
I42
g14056
Vinsert
p80390
I42
VSimpleName: renameColumn
p80391
tp80392
I2
s(g15255
I42
g15256
Vinsert
p80393
I42
VSimpleName: close
p80394
tp80395
I2
s(g3760
I42
g3761
Vinsert
p80396
I42
VSimpleName: setLevel
p80397
tp80398
I1
s(g2504
I42
g2505
Vinsert
p80399
I42
VSimpleName: ucase
p80400
tp80401
I1
s(g4098
I42
g4099
Vinsert
p80402
I43
VSimpleType: String
p80403
tp80404
I8
s(g45377
I42
g45378
Vinsert
p80405
I21
VExpressionStatement
p80406
tp80407
I1
s(g1080
I42
g1081
Vinsert
p80408
I45
VStringLiteral: "CREATE TABLE IF NOT EXISTS test_site_data_select_111\u005cn"
p80409
tp80410
I1
s(g2494
I42
g2495
Vinsert
p80411
I42
VSimpleName: SQLCreateTableStatement
p80412
tp80413
I1
s(g1695
I42
g1696
Vinsert
p80414
I42
VSimpleName: dataSourceHA
p80415
tp80416
I3
s(g40994
I42
g40995
Vinsert
p80417
I27
VInfixExpression: <
p80418
tp80419
I2
s(Vinsert
p80420
I42
VSimpleName: incrementAndGet
p80421
Vinsert
p80422
I42
VSimpleName: reusePreparedStatement
p80423
tp80424
I2
s(g12854
I42
g12855
Vinsert
p80425
I32
VMethodInvocation
p80426
tp80427
I2
s(g6663
I42
g6664
Vinsert
p80428
I32
VMethodInvocation
p80429
tp80430
I3
s(g1160
I42
g1161
Vinsert
p80431
I83
VModifier: public
p80432
tp80433
I1
s(g14790
I42
g14791
Vinsert
p80434
I21
VExpressionStatement
p80435
tp80436
I2
s(g5813
I42
g5814
Vinsert
p80437
I43
VSimpleType: SQLServerObjectReferenceExpr
p80438
tp80439
I1
s(g5216
I42
g5217
Vinsert
p80440
I21
VExpressionStatement
p80441
tp80442
I2
s(g55125
I42
g55126
Vinsert
p80443
I43
VSimpleType: SQLCharExpr
p80444
tp80445
I2
s(g17704
I42
g17705
Vinsert
p80446
I42
VSimpleName: getProperty
p80447
tp80448
I2
s(g4635
I42
g4636
Vinsert
p80449
I42
VSimpleName: columnName
p80450
tp80451
I1
s(g7325
I42
g7326
Vinsert
p80452
I43
VSimpleType: SQLExprHint
p80453
tp80454
I2
s(g5772
I42
g5773
Vinsert
p80455
I42
VSimpleName: getName
p80456
tp80457
I1
s(g13395
I42
g13396
Vinsert
p80458
I32
VMethodInvocation
p80459
tp80460
I1
s(g20564
I42
g20565
Vinsert
p80461
I42
VSimpleName: visitor
p80462
tp80463
I1
s(Vinsert
p80464
I42
VSimpleName: assertEquals
p80465
Vinsert
p80466
I42
VSimpleName: EvalMethodTest_instr_1
p80467
tp80468
I1
s(g9397
I42
g9398
Vinsert
p80469
I18
VContinueStatement
p80470
tp80471
I1
s(g22046
I42
g22047
Vinsert
p80472
I42
VSimpleName: MockResultSet
p80473
tp80474
I2
s(g22198
I42
g22199
Vinsert
p80475
I8
VBlock
p80476
tp80477
I1
s(g36179
I42
g36180
Vinsert
p80478
I42
VSimpleName: x
p80479
tp80480
I4
s(g6041
I42
g6042
Vinsert
p80481
I39
VPrimitiveType: void
p80482
tp80483
I5
s(g1241
I42
g1242
Vinsert
p80484
I60
VVariableDeclarationStatement
p80485
tp80486
I1
s(g9678
I42
g9679
Vinsert
p80487
I42
VSimpleName: sql2
p80488
tp80489
I1
s(g21686
I42
g21687
Vinsert
p80490
I42
VSimpleName: isSlaveWritable
p80491
tp80492
I1
s(g728
I42
g729
Vinsert
p80493
I27
VInfixExpression: +
p80494
tp80495
I1
s(g7751
I42
g7752
Vinsert
p80496
I42
VSimpleName: Assert
p80497
tp80498
I1
s(g15193
I42
g15194
Vinsert
p80499
I43
VSimpleType: Number
p80500
tp80501
I1
s(g5460
I42
g5461
Vinsert
p80502
I42
VSimpleName: size
p80503
tp80504
I1
s(g6592
I42
g6593
Vinsert
p80505
I74
VParameterizedType: Collection<HMappingColumn>
p80506
tp80507
I1
s(g11629
I42
g11630
Vinsert
p80508
I42
VSimpleName: Exception
p80509
tp80510
I1
s(g12822
I42
g12823
Vinsert
p80511
I43
VSimpleType: ReentrantLock
p80512
tp80513
I1
s(g5328
I42
g5329
Vinsert
p80514
I8
VBlock
p80515
tp80516
I2
s(g19315
I42
g19316
Vinsert
p80517
I27
VInfixExpression: >
p80518
tp80519
I1
s(g22538
I42
g22539
Vinsert
p80520
I42
VSimpleName: get
p80521
tp80522
I1
s(g6061
I42
g6062
Vinsert
p80523
I32
VMethodInvocation
p80524
tp80525
I8
s(g13818
I42
g13819
Vinsert
p80526
I43
VSimpleType: SQLCreateProcedureStatement
p80527
tp80528
I1
s(g27757
I42
g27758
Vinsert
p80529
I42
VSimpleName: filter
p80530
tp80531
I2
s(g487
I42
g488
Vinsert
p80532
I32
VMethodInvocation
p80533
tp80534
I1
s(g11850
I42
g11851
Vinsert
p80535
I27
VInfixExpression: <=
p80536
tp80537
I1
s(g6354
I42
g6355
Vinsert
p80538
I27
VInfixExpression: ==
p80539
tp80540
I57
s(g5959
I42
g5960
Vinsert
p80541
I42
VSimpleName: x
p80542
tp80543
I2
s(g24333
I42
g24334
Vinsert
p80544
I42
VSimpleName: error
p80545
tp80546
I1
s(g11360
I42
g11361
Vinsert
p80547
I34
VNumberLiteral: 1
p80548
tp80549
I1
s(g5171
I42
g5172
Vinsert
p80550
I42
VSimpleName: error
p80551
tp80552
I7
s(g32069
I42
g32070
Vinsert
p80553
I14
VClassInstanceCreation
p80554
tp80555
I1
s(g31291
I42
g31292
Vinsert
p80556
I42
VSimpleName: incrementIndent
p80557
tp80558
I1
s(g6607
I42
g6608
Vinsert
p80559
I59
VVariableDeclarationFragment
p80560
tp80561
I2
s(g37907
I42
g37908
Vinsert
p80562
I42
VSimpleName: arround
p80563
tp80564
I1
s(g28392
I42
g28393
Vinsert
p80565
I43
VSimpleType: Exception
p80566
tp80567
I1
s(g24211
I42
g24212
Vinsert
p80568
I42
VSimpleName: printAndAccept
p80569
tp80570
I1
s(g21982
I42
g21983
Vinsert
p80571
I42
VSimpleName: SQLDateExpr
p80572
tp80573
I1
s(Vinsert
p80574
I42
VSimpleName: token
p80575
Vinsert
p80576
I42
VSimpleName: setMaxtrans
p80577
tp80578
I1
s(g29212
I42
g29213
Vinsert
p80579
I45
VStringLiteral: "\u005cn\u005ctCONSTRAINT PK_cwd_directory PRIMARY KEY (ID)"
p80580
tp80581
I1
s(g17966
I42
g17967
Vinsert
p80582
I45
VStringLiteral: "\u005cnPARTITION BY RANGE (store_id)"
p80583
tp80584
I2
s(g28347
I42
g28348
Vinsert
p80585
I22
VFieldAccess
p80586
tp80587
I1
s(g492
I42
g493
Vinsert
p80588
I42
VSimpleName: ex
p80589
tp80590
I1
s(g39992
I42
g39993
Vinsert
p80591
I42
VSimpleName: transactionInfo
p80592
tp80593
I1
s(g23258
I42
g23259
Vinsert
p80594
I42
VSimpleName: parser
p80595
tp80596
I1
s(g8721
I42
g8722
Vinsert
p80597
I27
VInfixExpression: !=
p80598
tp80599
I2
s(g31211
I42
g31212
Vinsert
p80600
I42
VSimpleName: returning
p80601
tp80602
I2
s(g26393
I42
g26394
Vinsert
p80603
I42
VSimpleName: startHintSp
p80604
tp80605
I8
s(g10338
I42
g10339
Vinsert
p80606
I7
VAssignment: =
p80607
tp80608
I1
s(g13316
I42
g13317
Vinsert
p80609
I42
VSimpleName: deleteStatement
p80610
tp80611
I1
s(g13643
I42
g13644
Vinsert
p80612
I21
VExpressionStatement
p80613
tp80614
I1
s(g68940
I42
g68941
Vinsert
p80615
I42
VSimpleName: closed
p80616
tp80617
I1
s(g11816
I42
g11817
Vinsert
p80618
I45
VStringLiteral: "\u005ct, hire_date\u005cn"
p80619
tp80620
I1
s(g1370
I42
g1371
Vinsert
p80621
I43
VSimpleType: String
p80622
tp80623
I1
s(g3312
I42
g3313
Vinsert
p80624
I8
VBlock
p80625
tp80626
I1
s(g1760
I42
g1761
Vinsert
p80627
I7
VAssignment: =
p80628
tp80629
I4
s(g5854
I42
g5855
Vinsert
p80630
I42
VSimpleName: hints
p80631
tp80632
I2
s(g8030
I42
g8031
Vinsert
p80633
I43
VSimpleType: String
p80634
tp80635
I1
s(g8108
I42
g8109
Vinsert
p80636
I33
VNullLiteral
p80637
tp80638
I36
s(g13857
I42
g13858
Vinsert
p80639
I42
VSimpleName: statMap
p80640
tp80641
I2
s(g22198
I42
g22199
Vinsert
p80642
I59
VVariableDeclarationFragment
p80643
tp80644
I1
s(g1002
I42
g1003
Vinsert
p80645
I32
VMethodInvocation
p80646
tp80647
I1
s(g14361
I42
g14362
Vinsert
p80648
I41
VReturnStatement
p80649
tp80650
I8
s(g1329
I42
g1330
Vinsert
p80651
I42
VSimpleName: sql
p80652
tp80653
I1
s(g3931
I42
g3932
Vinsert
p80654
I21
VExpressionStatement
p80655
tp80656
I5
s(g937
I42
g938
Vinsert
p80657
I85
VDimension
p80658
tp80659
I2
s(g8810
I42
g8811
Vinsert
p80660
I52
VThisExpression
p80661
tp80662
I6
s(g35597
I42
g35598
Vinsert
p80663
I43
VSimpleType: DruidDataSource
p80664
tp80665
I1
s(g52636
I42
g52637
Vinsert
p80666
I45
VStringLiteral: "IN "
p80667
tp80668
I1
s(g5954
I42
g5955
Vinsert
p80669
I59
VVariableDeclarationFragment
p80670
tp80671
I3
s(g12262
I42
g12263
Vinsert
p80672
I42
VSimpleName: markChar
p80673
tp80674
I3
s(g19412
I42
g19413
Vinsert
p80675
I45
VStringLiteral: "\u005cn"
p80676
tp80677
I1
s(g20769
I42
g20770
Vinsert
p80678
I43
VSimpleType: Map
p80679
tp80680
I3
s(g1765
I42
g1766
Vinsert
p80681
I45
VStringLiteral: "coditions : "
p80682
tp80683
I4
s(g60101
I42
g60102
Vinsert
p80684
I32
VMethodInvocation
p80685
tp80686
I7
s(g30418
I42
g30419
Vinsert
p80687
I41
VReturnStatement
p80688
tp80689
I1
s(g1617
I42
g1618
Vinsert
p80690
I39
VPrimitiveType: int
p80691
tp80692
I1
s(g17395
I42
g17396
Vinsert
p80693
I45
VStringLiteral: "SELECT 1"
p80694
tp80695
I1
s(g7850
I42
g7851
Vinsert
p80696
I40
VQualifiedName: Token.OUT
p80697
tp80698
I1
s(g56999
I42
g57000
Vinsert
p80699
I42
VSimpleName: sql
p80700
tp80701
I3
s(g16153
I42
g16154
Vinsert
p80702
I42
VSimpleName: item
p80703
tp80704
I2
s(g20051
I42
g20052
Vinsert
p80705
I42
VSimpleName: visit
p80706
tp80707
I2
s(Vinsert
p80708
I42
VSimpleName: endVisit
p80709
Vinsert
p80710
I42
VSimpleName: pivotIn
p80711
tp80712
I1
s(g8627
I42
g8628
Vinsert
p80713
I42
VSimpleName: List
p80714
tp80715
I1
s(g4106
I42
g4107
Vinsert
p80716
I27
VInfixExpression: *
p80717
tp80718
I1
s(g1256
I42
g1257
Vinsert
p80719
I42
VSimpleName: driverClass
p80720
tp80721
I1
s(g13873
I42
g13874
Vinsert
p80722
I44
VSingleVariableDeclaration
p80723
tp80724
I1
s(g7927
I42
g7928
Vinsert
p80725
I52
VThisExpression
p80726
tp80727
I5
s(g23991
I42
g23992
Vinsert
p80728
I8
VBlock
p80729
tp80730
I3
s(g49163
I42
g49164
Vinsert
p80731
I78
VMarkerAnnotation
p80732
tp80733
I1
s(g5661
I42
g5662
Vinsert
p80734
I44
VSingleVariableDeclaration
p80735
tp80736
I1
s(g21413
I42
g21414
Vinsert
p80737
I42
VSimpleName: fetchRowCount
p80738
tp80739
I1
s(g11270
I42
g11271
Vinsert
p80740
I25
VIfStatement
p80741
tp80742
I2
s(g5724
I42
g5725
Vinsert
p80743
I42
VSimpleName: testQ
p80744
tp80745
I1
s(g7712
I42
g7713
Vinsert
p80746
I21
VExpressionStatement
p80747
tp80748
I3
s(g1456
I42
g1457
Vinsert
p80749
I42
VSimpleName: forName
p80750
tp80751
I1
s(g17133
I42
g17134
Vinsert
p80752
I27
VInfixExpression: <
p80753
tp80754
I1
s(g286
I42
g287
Vinsert
p80755
I25
VIfStatement
p80756
tp80757
I2
s(g2997
I42
g2998
Vinsert
p80758
I42
VSimpleName: checkState
p80759
tp80760
I1
s(g33029
I42
g33030
Vinsert
p80761
I42
VSimpleName: setTestWhileIdle
p80762
tp80763
I2
s(g3093
I42
g3094
Vinsert
p80764
I42
VSimpleName: FilterChainImpl
p80765
tp80766
I1
s(g21113
I42
g21114
Vinsert
p80767
I40
VQualifiedName: Token.UPDATE
p80768
tp80769
I1
s(g6157
I42
g6158
Vinsert
p80770
I42
VSimpleName: x
p80771
tp80772
I31
s(g41850
I42
g41851
Vinsert
p80773
I42
VSimpleName: blackSqlMaxSize
p80774
tp80775
I1
s(g2281
I42
g2282
Vinsert
p80776
I42
VSimpleName: ActionDesc
p80777
tp80778
I1
s(g9286
I42
g9287
Vinsert
p80779
I42
VSimpleName: identExpr
p80780
tp80781
I2
s(g69414
I42
g69415
Vinsert
p80782
I42
VSimpleName: Array
p80783
tp80784
I1
s(g20559
I42
g20560
Vinsert
p80785
I8
VBlock
p80786
tp80787
I1
s(g18016
I42
g18017
Vinsert
p80788
I47
VSuperFieldAccess
p80789
tp80790
I1
s(Vinsert
p80791
I42
VSimpleName: visit
p80792
Vinsert
p80793
I42
VSimpleName: cursorName
p80794
tp80795
I2
s(g14110
I42
g14111
Vinsert
p80796
I43
VSimpleType: Clob
p80797
tp80798
I4
s(g19018
I42
g19019
Vinsert
p80799
I14
VClassInstanceCreation
p80800
tp80801
I29
s(g18173
I42
g18174
Vinsert
p80802
I42
VSimpleName: mbeanServer
p80803
tp80804
I2
s(g40337
I42
g40338
Vinsert
p80805
I42
VSimpleName: formatSql
p80806
tp80807
I7
s(g241
I42
g242
Vinsert
p80808
I33
VNullLiteral
p80809
tp80810
I4
s(g25191
I42
g25192
Vinsert
p80811
I43
VSimpleType: SQLSelectStatement
p80812
tp80813
I1
s(g35402
I42
g35403
Vinsert
p80814
I42
VSimpleName: SQLKeep
p80815
tp80816
I1
s(g4725
I42
g4726
Vinsert
p80817
I11
VCastExpression
p80818
tp80819
I1
s(g962
I42
g963
Vinsert
p80820
I42
VSimpleName: SQLException
p80821
tp80822
I1
s(g33004
I42
g33005
Vinsert
p80823
I42
VSimpleName: executeCountUpdater
p80824
tp80825
I2
s(g9639
I42
g9640
Vinsert
p80826
I45
VStringLiteral: "\u005ctWHEN OTHERS THEN\u005cn"
p80827
tp80828
I1
s(g2596
I42
g2597
Vinsert
p80829
I21
VExpressionStatement
p80830
tp80831
I3
s(g5505
I42
g5506
Vinsert
p80832
I42
VSimpleName: stmt1
p80833
tp80834
I1
s(g7756
I42
g7757
Vinsert
p80835
I31
VMethodDeclaration
p80836
tp80837
I1
s(g13551
I42
g13552
Vinsert
p80838
I42
VSimpleName: toArray
p80839
tp80840
I1
s(g695
I42
g696
Vinsert
p80841
I42
VSimpleName: String
p80842
tp80843
I3
s(g12555
I42
g12556
Vinsert
p80844
I32
VMethodInvocation
p80845
tp80846
I1
s(g16759
I42
g16760
Vinsert
p80847
I42
VSimpleName: i
p80848
tp80849
I3
s(g6000
I42
g6001
Vinsert
p80850
I42
VSimpleName: bytes
p80851
tp80852
I1
s(g8090
I42
g8091
Vinsert
p80853
I42
VSimpleName: organization
p80854
tp80855
I2
s(g68021
I42
g68022
Vinsert
p80856
I22
VFieldAccess
p80857
tp80858
I1
s(g14279
I42
g14280
Vinsert
p80859
I45
VStringLiteral: "FROM TB_001, (\u005cn"
p80860
tp80861
I1
s(g3636
I42
g3637
Vinsert
p80862
I27
VInfixExpression: +
p80863
tp80864
I70
s(g42912
I42
g42913
Vinsert
p80865
I40
VQualifiedName: OracleMultiInsertStatement.ConditionalInsertClause
p80866
tp80867
I2
s(g5762
I42
g5763
Vinsert
p80868
I8
VBlock
p80869
tp80870
I9
s(g4424
I42
g4425
Vinsert
p80871
I42
VSimpleName: error
p80872
tp80873
I1
s(g8022
I42
g8023
Vinsert
p80874
I42
VSimpleName: names
p80875
tp80876
I1
s(g952
I42
g953
Vinsert
p80877
I40
VQualifiedName: other.instanceClass
p80878
tp80879
I1
s(g11845
I42
g11846
Vinsert
p80880
I42
VSimpleName: print0
p80881
tp80882
I1
s(g20914
I42
g20915
Vinsert
p80883
I44
VSingleVariableDeclaration
p80884
tp80885
I1
s(g1284
I42
g1285
Vinsert
p80886
I42
VSimpleName: size
p80887
tp80888
I1
s(g9089
I42
g9090
Vinsert
p80889
I39
VPrimitiveType: void
p80890
tp80891
I1
s(g3266
I42
g3267
Vinsert
p80892
I39
VPrimitiveType: long
p80893
tp80894
I19
s(g675
I42
g676
Vinsert
p80895
I42
VSimpleName: getSqlStat
p80896
tp80897
I1
s(g11915
I42
g11916
Vinsert
p80898
I42
VSimpleName: error
p80899
tp80900
I1
s(g4645
I42
g4646
Vinsert
p80901
I42
VSimpleName: webStat
p80902
tp80903
I10
s(Vinsert
p80904
I42
VSimpleName: assertNotNull
p80905
Vinsert
p80906
I42
VSimpleName: getNString
p80907
tp80908
I1
s(g1007
I42
g1008
Vinsert
p80909
I42
VSimpleName: lexer
p80910
tp80911
I1
s(g2657
I42
g2658
Vinsert
p80912
I42
VSimpleName: mapping
p80913
tp80914
I1
s(g39248
I42
g39249
Vinsert
p80915
I42
VSimpleName: text
p80916
tp80917
I1
s(g10953
I42
g10954
Vinsert
p80918
I59
VVariableDeclarationFragment
p80919
tp80920
I1
s(g25556
I42
g25557
Vinsert
p80921
I38
VPrefixExpression: !
p80922
tp80923
I3
s(g19128
I42
g19129
Vinsert
p80924
I42
VSimpleName: getProvider
p80925
tp80926
I1
s(g26244
I42
g26245
Vinsert
p80927
I32
VMethodInvocation
p80928
tp80929
I4
s(g9595
I42
g9596
Vinsert
p80930
I83
VModifier: public
p80931
tp80932
I1
s(g2682
I42
g2683
Vinsert
p80933
I42
VSimpleName: applyCount
p80934
tp80935
I1
s(g5615
I42
g5616
Vinsert
p80936
I43
VSimpleType: Exception
p80937
tp80938
I1
s(g9230
I42
g9231
Vinsert
p80939
I42
VSimpleName: not
p80940
tp80941
I1
s(g4770
I42
g4771
Vinsert
p80942
I32
VMethodInvocation
p80943
tp80944
I16
s(g7176
I42
g7177
Vinsert
p80945
I36
VParenthesizedExpression
p80946
tp80947
I1
s(g3202
I42
g3203
Vinsert
p80948
I42
VSimpleName: key
p80949
tp80950
I2
s(g2533
I42
g2534
Vinsert
p80951
I27
VInfixExpression: *
p80952
tp80953
I1
s(g6717
I42
g6718
Vinsert
p80954
I8
VBlock
p80955
tp80956
I7
s(g14891
I42
g14892
Vinsert
p80957
I42
VSimpleName: name
p80958
tp80959
I2
s(g1968
I42
g1969
Vinsert
p80960
I42
VSimpleName: nextToken
p80961
tp80962
I2
s(Vinsert
p80963
I42
VSimpleName: assertFalse
p80964
Vinsert
p80965
I45
VStringLiteral: "SELECT name, '******' password, createTime from user where length(name) = 999999.9 or ascii(substring((database()),1,1))=127"
p80966
tp80967
I1
s(g9944
I42
g9945
Vinsert
p80968
I45
VStringLiteral: "FROM employees;"
p80969
tp80970
I1
s(g1329
I42
g1330
Vinsert
p80971
I59
VVariableDeclarationFragment
p80972
tp80973
I1
s(g8075
I42
g8076
Vinsert
p80974
I40
VQualifiedName: Token.BANG
p80975
tp80976
I1
s(g3618
I42
g3619
Vinsert
p80977
I41
VReturnStatement
p80978
tp80979
I1
s(g72515
I42
g72516
Vinsert
p80980
I42
VSimpleName: PGCircleExpr
p80981
tp80982
I2
s(g51614
I42
g51615
Vinsert
p80983
I43
VSimpleType: ClassLoader
p80984
tp80985
I1
s(g10626
I42
g10627
Vinsert
p80986
I43
VSimpleType: EncodingConvertFilter
p80987
tp80988
I1
s(g38956
I42
g38957
Vinsert
p80989
I42
VSimpleName: EVAL_EXPR
p80990
tp80991
I1
s(g3544
I42
g3545
Vinsert
p80992
I45
VStringLiteral: "\u005ct) t1\u005cn"
p80993
tp80994
I1
s(g16264
I42
g16265
Vinsert
p80995
I21
VExpressionStatement
p80996
tp80997
I3
s(g27493
I42
g27494
Vinsert
p80998
I42
VSimpleName: print
p80999
tp81000
I3
s(g37973
I42
g37974
Vinsert
p81001
I42
VSimpleName: targetList
p81002
tp81003
I1
s(g5538
I42
g5539
Vinsert
p81004
I21
VExpressionStatement
p81005
tp81006
I1
s(g1395
I42
g1396
Vinsert
p81007
I42
VSimpleName: leftResult
p81008
tp81009
I2
s(g891
I42
g892
Vinsert
p81010
I40
VQualifiedName: Types.DECIMAL
p81011
tp81012
I1
s(g8480
I42
g8481
Vinsert
p81013
I14
VClassInstanceCreation
p81014
tp81015
I1
s(g9696
I42
g9697
Vinsert
p81016
I32
VMethodInvocation
p81017
tp81018
I3
s(Vinsert
p81019
I42
VSimpleName: name
p81020
Vinsert
p81021
I42
VSimpleName: inherits
p81022
tp81023
I1
s(g10576
I42
g10577
Vinsert
p81024
I40
VQualifiedName: Token.DESC
p81025
tp81026
I1
s(g657
I42
g658
Vinsert
p81027
I8
VBlock
p81028
tp81029
I1
s(g391
I42
g392
Vinsert
p81030
I8
VBlock
p81031
tp81032
I1
s(g16985
I42
g16986
Vinsert
p81033
I42
VSimpleName: SQLException
p81034
tp81035
I2
s(g24954
I42
g24955
Vinsert
p81036
I59
VVariableDeclarationFragment
p81037
tp81038
I2
s(g9883
I42
g9884
Vinsert
p81039
I40
VQualifiedName: x.calcFoundRows
p81040
tp81041
I1
s(g44779
I42
g44780
Vinsert
p81042
I42
VSimpleName: append
p81043
tp81044
I4
s(g61760
I42
g61761
Vinsert
p81045
I43
VSimpleType: SQLPartitionValue
p81046
tp81047
I3
s(g71905
I42
g71906
Vinsert
p81048
I13
VCharacterLiteral: '?'
p81049
tp81050
I1
s(g1511
I42
g1512
Vinsert
p81051
I42
VSimpleName: OracleConnection
p81052
tp81053
I3
s(g1193
I42
g1194
Vinsert
p81054
I42
VSimpleName: getProperties
p81055
tp81056
I1
s(g1579
I42
g1580
Vinsert
p81057
I8
VBlock
p81058
tp81059
I25
s(g8103
I42
g8104
Vinsert
p81060
I32
VMethodInvocation
p81061
tp81062
I2
s(g3442
I42
g3443
Vinsert
p81063
I45
VStringLiteral: "order siblings by last_name"
p81064
tp81065
I2
s(g517
I42
g518
Vinsert
p81066
I8
VBlock
p81067
tp81068
I3
s(g4409
I42
g4410
Vinsert
p81069
I7
VAssignment: =
p81070
tp81071
I1
s(g2624
I42
g2625
Vinsert
p81072
I27
VInfixExpression: ==
p81073
tp81074
I1
s(g3533
I42
g3534
Vinsert
p81075
I45
VStringLiteral: "INDEX IN "
p81076
tp81077
I1
s(g547
I42
g548
Vinsert
p81078
I45
VStringLiteral: "\u005ct\u005ctAND v.stage = 'new_order')\u005cn"
p81079
tp81080
I1
s(g12555
I42
g12556
Vinsert
p81081
I42
VSimpleName: stat
p81082
tp81083
I1
s(g7052
I42
g7053
Vinsert
p81084
I42
VSimpleName: SQLException
p81085
tp81086
I1
s(g3327
I42
g3328
Vinsert
p81087
I42
VSimpleName: queryExpr
p81088
tp81089
I1
s(g10195
I42
g10196
Vinsert
p81090
I45
VStringLiteral: "\u005cn\u005ctSTORAGE (INITIAL 8M)"
p81091
tp81092
I2
s(g10257
I42
g10258
Vinsert
p81093
I42
VSimpleName: stmt
p81094
tp81095
I26
s(g652
I42
g653
Vinsert
p81096
I42
VSimpleName: String
p81097
tp81098
I1
s(g7893
I42
g7894
Vinsert
p81099
I42
VSimpleName: error
p81100
tp81101
I2
s(g4806
I42
g4807
Vinsert
p81102
I43
VSimpleType: String
p81103
tp81104
I3
s(g1266
I42
g1267
Vinsert
p81105
I45
VStringLiteral: "t3"
p81106
tp81107
I1
s(g17467
I42
g17468
Vinsert
p81108
I42
VSimpleName: getReferencedTableName
p81109
tp81110
I1
s(g8677
I42
g8678
Vinsert
p81111
I42
VSimpleName: writer
p81112
tp81113
I1
s(g9753
I42
g9754
Vinsert
p81114
I42
VSimpleName: parsePartitionValues
p81115
tp81116
I1
s(g69947
I42
g69948
Vinsert
p81117
I42
VSimpleName: constaints
p81118
tp81119
I1
s(g2672
I42
g2673
Vinsert
p81120
I27
VInfixExpression: ==
p81121
tp81122
I2
s(g28640
I42
g28641
Vinsert
p81123
I42
VSimpleName: assertEquals
p81124
tp81125
I1
s(g20382
I42
g20383
Vinsert
p81126
I42
VSimpleName: chars
p81127
tp81128
I1
s(g4579
I42
g4580
Vinsert
p81129
I22
VFieldAccess
p81130
tp81131
I5
s(g10859
I42
g10860
Vinsert
p81132
I45
VStringLiteral: "select * from t where f0 > 0 -- comment_0"
p81133
tp81134
I1
s(g10736
I42
g10737
Vinsert
p81135
I43
VSimpleType: java.sql.Time
p81136
tp81137
I1
s(g25616
I42
g25617
Vinsert
p81138
I45
VStringLiteral: "\u005ct\u005c"CONTRACT_SERIAL\u005c", \u005cn"
p81139
tp81140
I1
s(g5089
I42
g5090
Vinsert
p81141
I45
VStringLiteral: "  PCTFREE 0 PCTUSED 40 INITRANS 1 MAXTRANS 255 \u005cn"
p81142
tp81143
I1
s(g18648
I42
g18649
Vinsert
p81144
I8
VBlock
p81145
tp81146
I2
s(g7136
I42
g7137
Vinsert
p81147
I42
VSimpleName: setSearchClause
p81148
tp81149
I1
s(g4273
I42
g4274
Vinsert
p81150
I32
VMethodInvocation
p81151
tp81152
I8
s(g1110
I42
g1111
Vinsert
p81153
I45
VStringLiteral: "\u005ctAND c1.layer = 4\u005cn"
p81154
tp81155
I1
s(g47568
I42
g47569
Vinsert
p81156
I27
VInfixExpression: +
p81157
tp81158
I1
s(g26080
I42
g26081
Vinsert
p81159
I42
VSimpleName: event
p81160
tp81161
I2
s(g9397
I42
g9398
Vinsert
p81162
I25
VIfStatement
p81163
tp81164
I1
s(g19916
I42
g19917
Vinsert
p81165
I42
VSimpleName: stmtDropIdx
p81166
tp81167
I1
s(g23603
I42
g23604
Vinsert
p81168
I42
VSimpleName: engine
p81169
tp81170
I6
s(g31568
I42
g31569
Vinsert
p81171
I42
VSimpleName: values
p81172
tp81173
I2
s(g13823
I42
g13824
Vinsert
p81174
I34
VNumberLiteral: 3
p81175
tp81176
I1
s(g26608
I42
g26609
Vinsert
p81177
I42
VSimpleName: OracleInsertStatement
p81178
tp81179
I1
s(g10655
I42
g10656
Vinsert
p81180
I42
VSimpleName: count
p81181
tp81182
I1
s(g1481
I42
g1482
Vinsert
p81183
I21
VExpressionStatement
p81184
tp81185
I1
s(g3880
I42
g3881
Vinsert
p81186
I8
VBlock
p81187
tp81188
I1
s(g5538
I42
g5539
Vinsert
p81189
I42
VSimpleName: setUrl
p81190
tp81191
I1
s(g11915
I42
g11916
Vinsert
p81192
I33
VNullLiteral
p81193
tp81194
I1
s(g5772
I42
g5773
Vinsert
p81195
I42
VSimpleName: equals
p81196
tp81197
I1
s(g346
I42
g347
Vinsert
p81198
I32
VMethodInvocation
p81199
tp81200
I4
s(Vinsert
p81201
I42
VSimpleName: assertEquals
p81202
Vinsert
p81203
I40
VQualifiedName: JdbcUtils.SQL_SERVER
p81204
tp81205
I1
s(g695
I42
g696
Vinsert
p81206
I42
VSimpleName: Token
p81207
tp81208
I6
s(g2824
I42
g2825
Vinsert
p81209
I42
VSimpleName: Override
p81210
tp81211
I6
s(g9060
I42
g9061
Vinsert
p81212
I42
VSimpleName: name
p81213
tp81214
I28
s(g31385
I42
g31386
Vinsert
p81215
I43
VSimpleType: String
p81216
tp81217
I4
s(g23793
I42
g23794
Vinsert
p81218
I45
VStringLiteral: "\u005cn\u005ct)"
p81219
tp81220
I2
s(g15188
I42
g15189
Vinsert
p81221
I42
VSimpleName: SQLSelectQueryBlock
p81222
tp81223
I1
s(g36
I42
g37
Vinsert
p81224
I27
VInfixExpression: ||
p81225
tp81226
I1
s(g19302
I42
g19303
Vinsert
p81227
I45
VStringLiteral: "\u005ct\u005ctPCTFREE 10\u005cn"
p81228
tp81229
I2
s(g8760
I42
g8761
Vinsert
p81230
I42
VSimpleName: countSelectQuery
p81231
tp81232
I1
s(g15823
I42
g15824
Vinsert
p81233
I39
VPrimitiveType: void
p81234
tp81235
I2
s(g12227
I42
g12228
Vinsert
p81236
I21
VExpressionStatement
p81237
tp81238
I1
s(g27372
I42
g27373
Vinsert
p81239
I42
VSimpleName: SQLIntegerExpr
p81240
tp81241
I4
s(g1948
I42
g1949
Vinsert
p81242
I43
VSimpleType: SQLIdentifierExpr
p81243
tp81244
I2
s(g2001
I42
g2002
Vinsert
p81245
I42
VSimpleName: result
p81246
tp81247
I3
s(Vinsert
p81248
I42
VSimpleName: assertEquals
p81249
Vinsert
p81250
I42
VSimpleName: EvalMethodTest_substring
p81251
tp81252
I1
s(g8956
I42
g8957
Vinsert
p81253
I59
VVariableDeclarationFragment
p81254
tp81255
I1
s(g26722
I42
g26723
Vinsert
p81256
I42
VSimpleName: setList
p81257
tp81258
I2
s(g23113
I42
g23114
Vinsert
p81259
I21
VExpressionStatement
p81260
tp81261
I1
s(g3345
I42
g3346
Vinsert
p81262
I39
VPrimitiveType: void
p81263
tp81264
I31
s(g4885
I42
g4886
Vinsert
p81265
I33
VNullLiteral
p81266
tp81267
I4
s(g77561
I42
g77562
Vinsert
p81268
I42
VSimpleName: incrementSelectCount
p81269
tp81270
I1
s(g11585
I42
g11586
Vinsert
p81271
I60
VVariableDeclarationStatement
p81272
tp81273
I1
s(g35733
I42
g35734
Vinsert
p81274
I42
VSimpleName: provider
p81275
tp81276
I25
s(g4936
I42
g4937
Vinsert
p81277
I42
VSimpleName: expr
p81278
tp81279
I4
s(g15864
I42
g15865
Vinsert
p81280
I32
VMethodInvocation
p81281
tp81282
I2
s(g20165
I42
g20166
Vinsert
p81283
I41
VReturnStatement
p81284
tp81285
I4
s(g49544
I42
g49545
Vinsert
p81286
I42
VSimpleName: bitXorRest
p81287
tp81288
I2
s(g2982
I42
g2983
Vinsert
p81289
I7
VAssignment: =
p81290
tp81291
I2
s(g2687
I42
g2688
Vinsert
p81292
I42
VSimpleName: connections
p81293
tp81294
I1
s(g5782
I42
g5783
Vinsert
p81295
I42
VSimpleName: getOwner
p81296
tp81297
I1
s(g7111
I42
g7112
Vinsert
p81298
I27
VInfixExpression: !=
p81299
tp81300
I2
s(g8833
I42
g8834
Vinsert
p81301
I34
VNumberLiteral: 1L
p81302
tp81303
I1
s(g9554
I42
g9555
Vinsert
p81304
I42
VSimpleName: osWindows8Count
p81305
tp81306
I1
s(g3248
I42
g3249
Vinsert
p81307
I43
VSimpleType: String
p81308
tp81309
I4
s(g32656
I42
g32657
Vinsert
p81310
I43
VSimpleType: OracleDatetimeExpr
p81311
tp81312
I2
s(g57341
I42
g57342
Vinsert
p81313
I39
VPrimitiveType: long
p81314
tp81315
I6
s(g12716
I42
g12717
Vinsert
p81316
I42
VSimpleName: getDataSource
p81317
tp81318
I1
s(g15894
I42
g15895
Vinsert
p81319
I42
VSimpleName: SQLStatement
p81320
tp81321
I1
s(g9639
I42
g9640
Vinsert
p81322
I45
VStringLiteral: "\u005ct\u005ct\u005ctCLOSE VALUECURSOR;\u005cn"
p81323
tp81324
I1
s(g8542
I42
g8543
Vinsert
p81325
I42
VSimpleName: rightValue
p81326
tp81327
I2
s(g14128
I42
g14129
Vinsert
p81328
I42
VSimpleName: precision
p81329
tp81330
I3
s(g1279
I42
g1280
Vinsert
p81331
I32
VMethodInvocation
p81332
tp81333
I2
s(g5053
I42
g5054
Vinsert
p81334
I59
VVariableDeclarationFragment
p81335
tp81336
I3
s(g9475
I42
g9476
Vinsert
p81337
I45
VStringLiteral: "\u005ctCELL_FLASH_CACHE DEFAULT\u005cn"
p81338
tp81339
I5
s(g15456
I42
g15457
Vinsert
p81340
I42
VSimpleName: test_kingbase
p81341
tp81342
I1
s(g2525
I42
g2526
Vinsert
p81343
I59
VVariableDeclarationFragment
p81344
tp81345
I39
s(g7163
I42
g7164
Vinsert
p81346
I43
VSimpleType: SQLMethodInvokeExpr
p81347
tp81348
I1
s(g6562
I42
g6563
Vinsert
p81349
I27
VInfixExpression: <
p81350
tp81351
I1
s(g271
I42
g272
Vinsert
p81352
I42
VSimpleName: test_eval_then
p81353
tp81354
I1
s(g46896
I42
g46897
Vinsert
p81355
I13
VCharacterLiteral: '"'
p81356
tp81357
I2
s(g5133
I42
g5134
Vinsert
p81358
I33
VNullLiteral
p81359
tp81360
I1
s(g17334
I42
g17335
Vinsert
p81361
I43
VSimpleType: SQLException
p81362
tp81363
I3
s(g22126
I42
g22127
Vinsert
p81364
I42
VSimpleName: syncClose
p81365
tp81366
I1
s(g36437
I42
g36438
Vinsert
p81367
I42
VSimpleName: param0
p81368
tp81369
I4
s(g12189
I42
g12190
Vinsert
p81370
I42
VSimpleName: startsWith
p81371
tp81372
I1
s(g26592
I42
g26593
Vinsert
p81373
I42
VSimpleName: resetStat
p81374
tp81375
I1
s(g7707
I42
g7708
Vinsert
p81376
I14
VClassInstanceCreation
p81377
tp81378
I1
s(Vinsert
p81379
I42
VSimpleName: add
p81380
Vinsert
p81381
I42
VSimpleName: itemCloned
p81382
tp81383
I2
s(g6917
I42
g6918
Vinsert
p81384
I42
VSimpleName: stmtHolder
p81385
tp81386
I4
s(g25165
I42
g25166
Vinsert
p81387
I32
VMethodInvocation
p81388
tp81389
I4
s(g43028
I42
g43029
Vinsert
p81390
I43
VSimpleType: StatFilter
p81391
tp81392
I6
s(g20434
I42
g20435
Vinsert
p81393
I45
VStringLiteral: "SELECT XX.*, ROWNUM AS RN"
p81394
tp81395
I2
s(g14551
I42
g14552
Vinsert
p81396
I42
VSimpleName: to
p81397
tp81398
I1
s(g34186
I42
g34187
Vinsert
p81399
I45
VStringLiteral: "system_user"
p81400
tp81401
I1
s(g29367
I42
g29368
Vinsert
p81402
I45
VStringLiteral: "\u005cn\u005ct\u005ctfrom acduser.vw_kreis_code"
p81403
tp81404
I1
s(g9982
I42
g9983
Vinsert
p81405
I45
VStringLiteral: "      RETURNING sal INTO :2';\u005cn"
p81406
tp81407
I1
s(Vinsert
p81408
I42
VSimpleName: hashCode
p81409
Vinsert
p81410
I42
VSimpleName: orderBy
p81411
tp81412
I2
s(g7404
I42
g7405
Vinsert
p81413
I42
VSimpleName: param2
p81414
tp81415
I2
s(g3664
I42
g3665
Vinsert
p81416
I45
VStringLiteral: " as ("
p81417
tp81418
I1
s(g30336
I42
g30337
Vinsert
p81419
I42
VSimpleName: ProfileEntryStat
p81420
tp81421
I1
s(g19539
I42
g19540
Vinsert
p81422
I42
VSimpleName: originalTable
p81423
tp81424
I2
s(g1506
I42
g1507
Vinsert
p81425
I7
VAssignment: =
p81426
tp81427
I1
s(g5724
I42
g5725
Vinsert
p81428
I8
VBlock
p81429
tp81430
I1
s(g657
I42
g658
Vinsert
p81431
I59
VVariableDeclarationFragment
p81432
tp81433
I1
s(g17395
I42
g17396
Vinsert
p81434
I42
VSimpleName: dataSource
p81435
tp81436
I4
s(g1007
I42
g1008
Vinsert
p81437
I42
VSimpleName: parseColumn
p81438
tp81439
I1
s(g38822
I42
g38823
Vinsert
p81440
I42
VSimpleName: dataSource
p81441
tp81442
I2
s(g6852
I42
g6853
Vinsert
p81443
I32
VMethodInvocation
p81444
tp81445
I7
s(g12679
I42
g12680
Vinsert
p81446
I42
VSimpleName: filterConfigList
p81447
tp81448
I2
s(g14083
I42
g14084
Vinsert
p81449
I21
VExpressionStatement
p81450
tp81451
I3
s(g2248
I42
g2249
Vinsert
p81452
I42
VSimpleName: String
p81453
tp81454
I2
s(g3841
I42
g3842
Vinsert
p81455
I43
VSimpleType: SQLStatement
p81456
tp81457
I1
s(g49245
I42
g49246
Vinsert
p81458
I43
VSimpleType: SQLAssignItem
p81459
tp81460
I1
s(g28138
I42
g28139
Vinsert
p81461
I32
VMethodInvocation
p81462
tp81463
I22
s(g4391
I42
g4392
Vinsert
p81464
I43
VSimpleType: SQLException
p81465
tp81466
I1
s(g49869
I42
g49870
Vinsert
p81467
I43
VSimpleType: SQLSelectStatement
p81468
tp81469
I2
s(g10398
I42
g10399
Vinsert
p81470
I52
VThisExpression
p81471
tp81472
I1
s(g10966
I42
g10967
Vinsert
p81473
I44
VSingleVariableDeclaration
p81474
tp81475
I1
s(g4806
I42
g4807
Vinsert
p81476
I42
VSimpleName: String
p81477
tp81478
I3
s(g12488
I42
g12489
Vinsert
p81479
I21
VExpressionStatement
p81480
tp81481
I1
s(g2223
I42
g2224
Vinsert
p81482
I27
VInfixExpression: !=
p81483
tp81484
I6
s(g5554
I42
g5555
Vinsert
p81485
I42
VSimpleName: InputStreamReader
p81486
tp81487
I1
s(g11376
I42
g11377
Vinsert
p81488
I42
VSimpleName: skipComment
p81489
tp81490
I1
s(g2120
I42
g2121
Vinsert
p81491
I42
VSimpleName: queryBlock
p81492
tp81493
I1
s(g40012
I42
g40013
Vinsert
p81494
I42
VSimpleName: data
p81495
tp81496
I12
s(g7631
I42
g7632
Vinsert
p81497
I42
VSimpleName: TabledDataPrinter
p81498
tp81499
I2
s(g2150
I42
g2151
Vinsert
p81500
I43
VSimpleType: String
p81501
tp81502
I8
s(g25125
I42
g25126
Vinsert
p81503
I43
VSimpleType: PublicKey
p81504
tp81505
I1
s(g18270
I42
g18271
Vinsert
p81506
I42
VSimpleName: lexer
p81507
tp81508
I1
s(g49759
I42
g49760
Vinsert
p81509
I45
VStringLiteral: "PARTITION BY KEY ("
p81510
tp81511
I2
s(g1933
I42
g1934
Vinsert
p81512
I8
VBlock
p81513
tp81514
I3
s(g11915
I42
g11916
Vinsert
p81515
I42
VSimpleName: test_error
p81516
tp81517
I1
s(g71
I42
g72
Vinsert
p81518
I25
VIfStatement
p81519
tp81520
I1
s(g7960
I42
g7961
Vinsert
p81521
I42
VSimpleName: column
p81522
tp81523
I2
s(g3841
I42
g3842
Vinsert
p81524
I42
VSimpleName: i
p81525
tp81526
I1
s(g39586
I42
g39587
Vinsert
p81527
I45
VStringLiteral: "fields : "
p81528
tp81529
I2
s(g9137
I42
g9138
Vinsert
p81530
I60
VVariableDeclarationStatement
p81531
tp81532
I1
s(g18773
I42
g18774
Vinsert
p81533
I42
VSimpleName: SQLUpdateStatement
p81534
tp81535
I3
s(g13331
I42
g13332
Vinsert
p81536
I59
VVariableDeclarationFragment
p81537
tp81538
I1
s(g35379
I42
g35380
Vinsert
p81539
I42
VSimpleName: LOG
p81540
tp81541
I1
s(g266
I42
g267
Vinsert
p81542
I42
VSimpleName: tenantCallBack
p81543
tp81544
I1
s(g76
I42
g77
Vinsert
p81545
I60
VVariableDeclarationStatement
p81546
tp81547
I1
s(g37490
I42
g37491
Vinsert
p81548
I42
VSimpleName: temp
p81549
tp81550
I1
s(g14651
I42
g14652
Vinsert
p81551
I42
VSimpleName: isConnectionLogEnabled
p81552
tp81553
I1
s(g14829
I42
g14830
Vinsert
p81554
I42
VSimpleName: String
p81555
tp81556
I18
s(g48178
I42
g48179
Vinsert
p81557
I42
VSimpleName: OracleExportParameterVisitor
p81558
tp81559
I1
s(g24051
I42
g24052
Vinsert
p81560
I42
VSimpleName: ArrayList
p81561
tp81562
I1
s(g34654
I42
g34655
Vinsert
p81563
I45
VStringLiteral: "\u005ct\u005ctAND CAST(b.paid_date AS varchar(10)) <= '2017-06-30'\u005cn"
p81564
tp81565
I1
s(g10892
I42
g10893
Vinsert
p81566
I45
VStringLiteral: "\u005ct\u005ctIF I <= T_COUNT THEN\u005cn"
p81567
tp81568
I1
s(g11067
I42
g11068
Vinsert
p81569
I11
VCastExpression
p81570
tp81571
I3
s(g8692
I42
g8693
Vinsert
p81572
I27
VInfixExpression: !=
p81573
tp81574
I3
s(g12475
I42
g12476
Vinsert
p81575
I21
VExpressionStatement
p81576
tp81577
I2
s(g19984
I42
g19985
Vinsert
p81578
I25
VIfStatement
p81579
tp81580
I1
s(g18801
I42
g18802
Vinsert
p81581
I42
VSimpleName: Assert
p81582
tp81583
I2
s(g5554
I42
g5555
Vinsert
p81584
I14
VClassInstanceCreation
p81585
tp81586
I1
s(g8796
I42
g8797
Vinsert
p81587
I42
VSimpleName: SQLTableSource
p81588
tp81589
I1
s(g5216
I42
g5217
Vinsert
p81590
I27
VInfixExpression: !=
p81591
tp81592
I1
s(Vinsert
p81593
I42
VSimpleName: currentThread
p81594
Vinsert
p81595
I42
VSimpleName: is
p81596
tp81597
I5
s(g1496
I42
g1497
Vinsert
p81598
I42
VSimpleName: udf
p81599
tp81600
I8
s(g41896
I42
g41897
Vinsert
p81601
I43
VSimpleType: StringBuilder
p81602
tp81603
I34
s(g61760
I42
g61761
Vinsert
p81604
I42
VSimpleName: getValues
p81605
tp81606
I1
s(g10682
I42
g10683
Vinsert
p81607
I42
VSimpleName: SQLCreateTableStatement
p81608
tp81609
I7
s(g55356
I42
g55357
Vinsert
p81610
I42
VSimpleName: PagerUtils
p81611
tp81612
I2
s(g17718
I42
g17719
Vinsert
p81613
I45
VStringLiteral: "DROP TABLE a PURGE ;"
p81614
tp81615
I1
s(Vinsert
p81616
I42
VSimpleName: endVisit
p81617
Vinsert
p81618
I42
VSimpleName: statements
p81619
tp81620
I3
s(g76485
I42
g76486
Vinsert
p81621
I42
VSimpleName: dir
p81622
tp81623
I4
s(g6126
I42
g6127
Vinsert
p81624
I21
VExpressionStatement
p81625
tp81626
I4
s(Vinsert
p81627
I42
VSimpleName: append
p81628
Vinsert
p81629
I13
VCharacterLiteral: '\u005c''
p81630
tp81631
I2
s(g40052
I42
g40053
Vinsert
p81632
I42
VSimpleName: SQLIdentifierExpr
p81633
tp81634
I1
s(g17266
I42
g17267
Vinsert
p81635
I43
VSimpleType: SQLObject
p81636
tp81637
I1
s(g2775
I42
g2776
Vinsert
p81638
I42
VSimpleName: Date
p81639
tp81640
I1
s(g8264
I42
g8265
Vinsert
p81641
I42
VSimpleName: SQLColumnDefinition
p81642
tp81643
I4
s(g34565
I42
g34566
Vinsert
p81644
I42
VSimpleName: formattedSql
p81645
tp81646
I2
s(g24125
I42
g24126
Vinsert
p81647
I11
VCastExpression
p81648
tp81649
I1
s(g16335
I42
g16336
Vinsert
p81650
I42
VSimpleName: println
p81651
tp81652
I1
s(g5859
I42
g5860
Vinsert
p81653
I42
VSimpleName: validIps
p81654
tp81655
I1
s(g8001
I42
g8002
Vinsert
p81656
I43
VSimpleType: SQLPropertyExpr
p81657
tp81658
I1
s(Vinsert
p81659
I42
VSimpleName: visit
p81660
Vinsert
p81661
I42
VSimpleName: aliases
p81662
tp81663
I1
s(g19573
I42
g19574
Vinsert
p81664
I34
VNumberLiteral: 20
p81665
tp81666
I1
s(g18399
I42
g18400
Vinsert
p81667
I42
VSimpleName: stmt
p81668
tp81669
I6
s(g6635
I42
g6636
Vinsert
p81670
I42
VSimpleName: filePath
p81671
tp81672
I1
s(g1710
I42
g1711
Vinsert
p81673
I42
VSimpleName: FactoryBean
p81674
tp81675
I2
s(g14782
I42
g14783
Vinsert
p81676
I8
VBlock
p81677
tp81678
I4
s(g23481
I42
g23482
Vinsert
p81679
I42
VSimpleName: conn
p81680
tp81681
I4
s(g9934
I42
g9935
Vinsert
p81682
I42
VSimpleName: name_0
p81683
tp81684
I1
s(g6192
I42
g6193
Vinsert
p81685
I42
VSimpleName: item
p81686
tp81687
I1
s(g20288
I42
g20289
Vinsert
p81688
I42
VSimpleName: MySqlBlockStatement
p81689
tp81690
I1
s(g51669
I42
g51670
Vinsert
p81691
I1
VAnonymousClassDeclaration
p81692
tp81693
I1
s(g22038
I42
g22039
Vinsert
p81694
I42
VSimpleName: evalExpr
p81695
tp81696
I6
s(g8166
I42
g8167
Vinsert
p81697
I42
VSimpleName: i
p81698
tp81699
I2
s(g42032
I42
g42033
Vinsert
p81700
I45
VStringLiteral: "\u005cn --c_1"
p81701
tp81702
I1
s(g3821
I42
g3822
Vinsert
p81703
I45
VStringLiteral: "fattable"
p81704
tp81705
I1
s(g61400
I42
g61401
Vinsert
p81706
I34
VNumberLiteral: 1000L
p81707
tp81708
I1
s(g3613
I42
g3614
Vinsert
p81709
I23
VFieldDeclaration
p81710
tp81711
I1
s(g6298
I42
g6299
Vinsert
p81712
I42
VSimpleName: multiDataSource
p81713
tp81714
I1
s(Vinsert
p81715
I42
VSimpleName: size
p81716
Vinsert
p81717
I42
VSimpleName: statDataList
p81718
tp81719
I1
s(g429
I42
g430
Vinsert
p81720
I8
VBlock
p81721
tp81722
I2
s(g31536
I42
g31537
Vinsert
p81723
I42
VSimpleName: getName
p81724
tp81725
I2
s(g31879
I42
g31880
Vinsert
p81726
I38
VPrefixExpression: !
p81727
tp81728
I1
s(g13868
I42
g13869
Vinsert
p81729
I42
VSimpleName: getData
p81730
tp81731
I1
s(g8810
I42
g8811
Vinsert
p81732
I42
VSimpleName: String
p81733
tp81734
I2
s(g30825
I42
g30826
Vinsert
p81735
I45
VStringLiteral: "INSERT INTO departments"
p81736
tp81737
I5
s(g26553
I42
g26554
Vinsert
p81738
I21
VExpressionStatement
p81739
tp81740
I2
s(g30507
I42
g30508
Vinsert
p81741
I42
VSimpleName: cloneTo
p81742
tp81743
I1
s(g69414
I42
g69415
Vinsert
p81744
I43
VSimpleType: Array
p81745
tp81746
I1
s(g11696
I42
g11697
Vinsert
p81747
I45
VStringLiteral: "\u005ctAND rsi.e_rprsendid = ?\u005cn"
p81748
tp81749
I1
s(g26374
I42
g26375
Vinsert
p81750
I7
VAssignment: =
p81751
tp81752
I15
s(g12435
I42
g12436
Vinsert
p81753
I78
VMarkerAnnotation
p81754
tp81755
I1
s(g1574
I42
g1575
Vinsert
p81756
I42
VSimpleName: SQLUtils
p81757
tp81758
I43
s(g547
I42
g548
Vinsert
p81759
I45
VStringLiteral: "\u005ct, c.zip, c.logo_file, c.email, c.brief_profile, c.domain_id\u005cn"
p81760
tp81761
I1
s(g25450
I42
g25451
Vinsert
p81762
I42
VSimpleName: stat
p81763
tp81764
I18
s(g26789
I42
g26790
Vinsert
p81765
I11
VCastExpression
p81766
tp81767
I26
s(g67399
I42
g67400
Vinsert
p81768
I43
VSimpleType: SQLBinaryOpExpr
p81769
tp81770
I2
s(g18512
I42
g18513
Vinsert
p81771
I42
VSimpleName: table
p81772
tp81773
I2
s(g4500
I42
g4501
Vinsert
p81774
I45
VStringLiteral: "select * from t where id  = (3 + 5 - 2 - 1)"
p81775
tp81776
I1
s(g9670
I42
g9671
Vinsert
p81777
I42
VSimpleName: statementList
p81778
tp81779
I183
s(g60730
I42
g60731
Vinsert
p81780
I42
VSimpleName: DruidAbstractDataSource
p81781
tp81782
I1
s(Vinsert
p81783
I42
VSimpleName: add
p81784
Vinsert
p81785
I42
VSimpleName: tableSource
p81786
tp81787
I3
s(g3760
I42
g3761
Vinsert
p81788
I32
VMethodInvocation
p81789
tp81790
I3
s(g321
I42
g322
Vinsert
p81791
I42
VSimpleName: path
p81792
tp81793
I3
s(g29003
I42
g29004
Vinsert
p81794
I45
VStringLiteral: "ResultSetLastErrorMessage"
p81795
tp81796
I1
s(g1425
I42
g1426
Vinsert
p81797
I52
VThisExpression
p81798
tp81799
I1
s(g1241
I42
g1242
Vinsert
p81800
I83
VModifier: final
p81801
tp81802
I1
s(g18036
I42
g18037
Vinsert
p81803
I40
VQualifiedName: CompareOp.LESS_OR_EQUAL
p81804
tp81805
I1
s(g23793
I42
g23794
Vinsert
p81806
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION east VALUES ('CHINA', 'JAPAN', 'INDIA', 'THAILAND'),"
p81807
tp81808
I2
s(g23640
I42
g23641
Vinsert
p81809
I21
VExpressionStatement
p81810
tp81811
I6
s(g35083
I42
g35084
Vinsert
p81812
I42
VSimpleName: setAlgorithm
p81813
tp81814
I1
s(g11566
I42
g11567
Vinsert
p81815
I33
VNullLiteral
p81816
tp81817
I1
s(g11840
I42
g11841
Vinsert
p81818
I27
VInfixExpression: <
p81819
tp81820
I1
s(g3027
I42
g3028
Vinsert
p81821
I43
VSimpleType: JSONArray
p81822
tp81823
I1
s(g23414
I42
g23415
Vinsert
p81824
I42
VSimpleName: notOp
p81825
tp81826
I1
s(g12090
I42
g12091
Vinsert
p81827
I59
VVariableDeclarationFragment
p81828
tp81829
I1
s(g1430
I42
g1431
Vinsert
p81830
I42
VSimpleName: Lexer
p81831
tp81832
I1
s(g336
I42
g337
Vinsert
p81833
I42
VSimpleName: item
p81834
tp81835
I1
s(g68940
I42
g68941
Vinsert
p81836
I9
VBooleanLiteral: false
p81837
tp81838
I1
s(g7665
I42
g7666
Vinsert
p81839
I59
VVariableDeclarationFragment
p81840
tp81841
I1
s(g6927
I42
g6928
Vinsert
p81842
I8
VBlock
p81843
tp81844
I7
s(g6577
I42
g6578
Vinsert
p81845
I45
VStringLiteral: "                         }'\u005cn"
p81846
tp81847
I2
s(g9773
I42
g9774
Vinsert
p81848
I42
VSimpleName: exprParser
p81849
tp81850
I2
s(g11925
I42
g11926
Vinsert
p81851
I52
VThisExpression
p81852
tp81853
I1
s(g43028
I42
g43029
Vinsert
p81854
I42
VSimpleName: dataSourceA
p81855
tp81856
I1
s(g2024
I42
g2025
Vinsert
p81857
I42
VSimpleName: size
p81858
tp81859
I1
s(g13424
I42
g13425
Vinsert
p81860
I59
VVariableDeclarationFragment
p81861
tp81862
I1
s(g37536
I42
g37537
Vinsert
p81863
I42
VSimpleName: createExprParser
p81864
tp81865
I1
s(g11281
I42
g11282
Vinsert
p81866
I42
VSimpleName: hint
p81867
tp81868
I4
s(g12034
I42
g12035
Vinsert
p81869
I32
VMethodInvocation
p81870
tp81871
I16
s(g13326
I42
g13327
Vinsert
p81872
I43
VSimpleType: SQLSelect
p81873
tp81874
I4
s(g6396
I42
g6397
Vinsert
p81875
I22
VFieldAccess
p81876
tp81877
I1
s(g45482
I42
g45483
Vinsert
p81878
I42
VSimpleName: PGWallTest
p81879
tp81880
I1
s(g2634
I42
g2635
Vinsert
p81881
I25
VIfStatement
p81882
tp81883
I2
s(g1198
I42
g1199
Vinsert
p81884
I42
VSimpleName: sql
p81885
tp81886
I3
s(g32188
I42
g32189
Vinsert
p81887
I39
VPrimitiveType: void
p81888
tp81889
I2
s(g4770
I42
g4771
Vinsert
p81890
I60
VVariableDeclarationStatement
p81891
tp81892
I4
s(g5097
I42
g5098
Vinsert
p81893
I42
VSimpleName: setMaxIdle
p81894
tp81895
I1
s(g35034
I42
g35035
Vinsert
p81896
I27
VInfixExpression: !=
p81897
tp81898
I1
s(g17915
I42
g17916
Vinsert
p81899
I2
VArrayAccess
p81900
tp81901
I1
s(g20215
I42
g20216
Vinsert
p81902
I33
VNullLiteral
p81903
tp81904
I4
s(g9380
I42
g9381
Vinsert
p81905
I42
VSimpleName: setProxyFilters
p81906
tp81907
I1
s(g10892
I42
g10893
Vinsert
p81908
I45
VStringLiteral: "\u005ctRETURN T_STR;\u005cn"
p81909
tp81910
I1
s(g675
I42
g676
Vinsert
p81911
I42
VSimpleName: getDataSourceStat
p81912
tp81913
I1
s(g2388
I42
g2389
Vinsert
p81914
I27
VInfixExpression: ||
p81915
tp81916
I2
s(g81379
I42
g81380
Vinsert
p81917
I40
VQualifiedName: x.constraints
p81918
tp81919
I1
s(Vinsert
p81920
I42
VSimpleName: toSQLString
p81921
Vinsert
p81922
I45
VStringLiteral: "DROP SEQUENCE oe.customers_seq"
p81923
tp81924
I1
s(g39635
I42
g39636
Vinsert
p81925
I42
VSimpleName: filter
p81926
tp81927
I1
s(g23154
I42
g23155
Vinsert
p81928
I42
VSimpleName: SQLExprTableSource
p81929
tp81930
I1
s(g2795
I42
g2796
Vinsert
p81931
I42
VSimpleName: BufferedReader
p81932
tp81933
I1
s(g7542
I42
g7543
Vinsert
p81934
I83
VModifier: private
p81935
tp81936
I1
s(g30896
I42
g30897
Vinsert
p81937
I42
VSimpleName: visit
p81938
tp81939
I1
s(g5002
I42
g5003
Vinsert
p81940
I42
VSimpleName: paramIndex
p81941
tp81942
I1
s(g67267
I42
g67268
Vinsert
p81943
I42
VSimpleName: like
p81944
tp81945
I6
s(g6909
I42
g6910
Vinsert
p81946
I42
VSimpleName: stmt_1_B
p81947
tp81948
I1
s(g8547
I42
g8548
Vinsert
p81949
I14
VClassInstanceCreation
p81950
tp81951
I3
s(g11611
I42
g11612
Vinsert
p81952
I45
VStringLiteral: "\u005ct, name\u005cn"
p81953
tp81954
I1
s(g1589
I42
g1590
Vinsert
p81955
I42
VSimpleName: stmt
p81956
tp81957
I1
s(g34186
I42
g34187
Vinsert
p81958
I27
VInfixExpression: !=
p81959
tp81960
I11
s(Vinsert
p81961
I42
VSimpleName: assertEquals
p81962
Vinsert
p81963
I42
VSimpleName: stmtList
p81964
tp81965
I91
s(g30001
I42
g30002
Vinsert
p81966
I43
VSimpleType: SQLAlterTableItem
p81967
tp81968
I1
s(g11182
I42
g11183
Vinsert
p81969
I39
VPrimitiveType: long
p81970
tp81971
I4
s(g20364
I42
g20365
Vinsert
p81972
I34
VNumberLiteral: 12
p81973
tp81974
I1
s(g7288
I42
g7289
Vinsert
p81975
I59
VVariableDeclarationFragment
p81976
tp81977
I1
s(g11649
I42
g11650
Vinsert
p81978
I42
VSimpleName: setConnectionProperties
p81979
tp81980
I1
s(g5195
I42
g5196
Vinsert
p81981
I42
VSimpleName: output
p81982
tp81983
I1
s(g3618
I42
g3619
Vinsert
p81984
I83
VModifier: public
p81985
tp81986
I1
s(g20626
I42
g20627
Vinsert
p81987
I41
VReturnStatement
p81988
tp81989
I2
s(g7835
I42
g7836
Vinsert
p81990
I32
VMethodInvocation
p81991
tp81992
I2
s(g17082
I42
g17083
Vinsert
p81993
I59
VVariableDeclarationFragment
p81994
tp81995
I1
s(g4339
I42
g4340
Vinsert
p81996
I7
VAssignment: =
p81997
tp81998
I1
s(g816
I42
g817
Vinsert
p81999
I42
VSimpleName: dataSource
p82000
tp82001
I2
s(g23113
I42
g23114
Vinsert
p82002
I42
VSimpleName: getRowPrefetch
p82003
tp82004
I1
s(Vinsert
p82005
I42
VSimpleName: token
p82006
Vinsert
p82007
I43
VSimpleType: PGSelectStatement
p82008
tp82009
I1
s(g7023
I42
g7024
Vinsert
p82010
I52
VThisExpression
p82011
tp82012
I4
s(g7893
I42
g7894
Vinsert
p82013
I21
VExpressionStatement
p82014
tp82015
I8
s(g5216
I42
g5217
Vinsert
p82016
I43
VSimpleType: String
p82017
tp82018
I1
s(g6727
I42
g6728
Vinsert
p82019
I8
VBlock
p82020
tp82021
I1
s(g12029
I42
g12030
Vinsert
p82022
I42
VSimpleName: sqlExec
p82023
tp82024
I3
s(g7224
I42
g7225
Vinsert
p82025
I42
VSimpleName: getName
p82026
tp82027
I1
s(g15621
I42
g15622
Vinsert
p82028
I42
VSimpleName: config
p82029
tp82030
I2
s(g3002
I42
g3003
Vinsert
p82031
I39
VPrimitiveType: void
p82032
tp82033
I1
s(g15514
I42
g15515
Vinsert
p82034
I44
VSingleVariableDeclaration
p82035
tp82036
I1
s(g11930
I42
g11931
Vinsert
p82037
I31
VMethodDeclaration
p82038
tp82039
I1
s(g7111
I42
g7112
Vinsert
p82040
I42
VSimpleName: repository
p82041
tp82042
I2
s(g11542
I42
g11543
Vinsert
p82043
I38
VPrefixExpression: ++
p82044
tp82045
I2
s(g10784
I42
g10785
Vinsert
p82046
I42
VSimpleName: i
p82047
tp82048
I1
s(g33280
I42
g33281
Vinsert
p82049
I42
VSimpleName: expr
p82050
tp82051
I2
s(g43829
I42
g43830
Vinsert
p82052
I42
VSimpleName: equals
p82053
tp82054
I2
s(Vinsert
p82055
I42
VSimpleName: getDbType
p82056
Vinsert
p82057
I42
VSimpleName: test_log4jdbc_mysql
p82058
tp82059
I1
s(g24750
I42
g24751
Vinsert
p82060
I42
VSimpleName: alias
p82061
tp82062
I3
s(g29398
I42
g29399
Vinsert
p82063
I42
VSimpleName: stmt
p82064
tp82065
I1
s(g11307
I42
g11308
Vinsert
p82066
I42
VSimpleName: threadIds
p82067
tp82068
I1
s(g7686
I42
g7687
Vinsert
p82069
I42
VSimpleName: hashCode
p82070
tp82071
I1
s(g8052
I42
g8053
Vinsert
p82072
I40
VQualifiedName: ParameterType.IN
p82073
tp82074
I1
s(g2672
I42
g2673
Vinsert
p82075
I33
VNullLiteral
p82076
tp82077
I4
s(Vinsert
p82078
I42
VSimpleName: add
p82079
Vinsert
p82080
I42
VSimpleName: getExpr
p82081
tp82082
I1
s(g39778
I42
g39779
Vinsert
p82083
I42
VSimpleName: column
p82084
tp82085
I1
s(g3271
I42
g3272
Vinsert
p82086
I42
VSimpleName: assertEquals
p82087
tp82088
I2
s(g14876
I42
g14877
Vinsert
p82089
I42
VSimpleName: lexer
p82090
tp82091
I3
s(g7631
I42
g7632
Vinsert
p82092
I42
VSimpleName: Map
p82093
tp82094
I1
s(g10087
I42
g10088
Vinsert
p82095
I32
VMethodInvocation
p82096
tp82097
I5
s(g10140
I42
g10141
Vinsert
p82098
I45
VStringLiteral: " COMMENT "
p82099
tp82100
I1
s(g9017
I42
g9018
Vinsert
p82101
I7
VAssignment: =
p82102
tp82103
I2
s(g41161
I42
g41162
Vinsert
p82104
I14
VClassInstanceCreation
p82105
tp82106
I2
s(g10874
I42
g10875
Vinsert
p82107
I42
VSimpleName: tmp
p82108
tp82109
I1
s(g2930
I42
g2931
Vinsert
p82110
I8
VBlock
p82111
tp82112
I1
s(g2900
I42
g2901
Vinsert
p82113
I38
VPrefixExpression: ++
p82114
tp82115
I1
s(g21667
I42
g21668
Vinsert
p82116
I42
VSimpleName: getConfig
p82117
tp82118
I1
s(g8386
I42
g8387
Vinsert
p82119
I42
VSimpleName: containsKey
p82120
tp82121
I1
s(g1973
I42
g1974
Vinsert
p82122
I42
VSimpleName: token
p82123
tp82124
I2
s(g15392
I42
g15393
Vinsert
p82125
I42
VSimpleName: parseAssignItems
p82126
tp82127
I1
s(g12397
I42
g12398
Vinsert
p82128
I45
VStringLiteral: ") TMP_PAGE\u005cn"
p82129
tp82130
I1
s(g9899
I42
g9900
Vinsert
p82131
I59
VVariableDeclarationFragment
p82132
tp82133
I2
s(g7712
I42
g7713
Vinsert
p82134
I42
VSimpleName: getTables
p82135
tp82136
I2
s(g26260
I42
g26261
Vinsert
p82137
I42
VSimpleName: x
p82138
tp82139
I6
s(g22115
I42
g22116
Vinsert
p82140
I34
VNumberLiteral: 10
p82141
tp82142
I1
s(g9748
I42
g9749
Vinsert
p82143
I27
VInfixExpression: !=
p82144
tp82145
I1
s(g14697
I42
g14698
Vinsert
p82146
I45
VStringLiteral: "3"
p82147
tp82148
I2
s(g20835
I42
g20836
Vinsert
p82149
I43
VSimpleType: HTableInterface
p82150
tp82151
I1
s(g4134
I42
g4135
Vinsert
p82152
I42
VSimpleName: Enumeration
p82153
tp82154
I1
s(g15097
I42
g15098
Vinsert
p82155
I39
VPrimitiveType: void
p82156
tp82157
I21
s(g1579
I42
g1580
Vinsert
p82158
I42
VSimpleName: n
p82159
tp82160
I3
s(g2609
I42
g2610
Vinsert
p82161
I42
VSimpleName: isDupCloseLogEnable
p82162
tp82163
I1
s(g13559
I42
g13560
Vinsert
p82164
I42
VSimpleName: Deprecated
p82165
tp82166
I1
s(g26143
I42
g26144
Vinsert
p82167
I43
VSimpleType: SQLHexExpr
p82168
tp82169
I2
s(g9103
I42
g9104
Vinsert
p82170
I14
VClassInstanceCreation
p82171
tp82172
I1
s(g11601
I42
g11602
Vinsert
p82173
I42
VSimpleName: x
p82174
tp82175
I2
s(g14985
I42
g14986
Vinsert
p82176
I59
VVariableDeclarationFragment
p82177
tp82178
I1
s(g5510
I42
g5511
Vinsert
p82179
I45
VStringLiteral: "INSERT INTO qrtz_JOB_DETAILS (SCHED_NAME, JOB_NAME, JOB_GROUP, DESCRIPTION, JOB_CLASS_NAME, IS_DURABLE, IS_NONCONCURRENT, IS_UPDATE_DATA, REQUESTS_RECOVERY, JOB_DATA)  VALUES('DefaultQuartzScheduler', 'taobao.item.recommend.delete_368815794_2_35391685928', 'tasks', null, 'cn.agooo.job.TasksJob', 0, 0, 0, 0, x
p82180
tp82181
I1
s(g11601
I42
g11602
Vinsert
p82182
I14
VClassInstanceCreation
p82183
tp82184
I1
s(g73768
I42
g73769
Vinsert
p82185
I45
VStringLiteral: "\u005cnFROM t1"
p82186
tp82187
I3
s(g16046
I42
g16047
Vinsert
p82188
I42
VSimpleName: size
p82189
tp82190
I1
s(g1065
I42
g1066
Vinsert
p82191
I39
VPrimitiveType: boolean
p82192
tp82193
I1
s(g3719
I42
g3720
Vinsert
p82194
I45
VStringLiteral: "where runoob_id = 3;"
p82195
tp82196
I2
s(g1314
I42
g1315
Vinsert
p82197
I7
VAssignment: =
p82198
tp82199
I1
s(g10438
I42
g10439
Vinsert
p82200
I42
VSimpleName: output
p82201
tp82202
I1
s(g7955
I42
g7956
Vinsert
p82203
I21
VExpressionStatement
p82204
tp82205
I2
s(g4404
I42
g4405
Vinsert
p82206
I42
VSimpleName: SQLLimit
p82207
tp82208
I1
s(g14452
I42
g14453
Vinsert
p82209
I59
VVariableDeclarationFragment
p82210
tp82211
I14
s(g11920
I42
g11921
Vinsert
p82212
I42
VSimpleName: PREFIX
p82213
tp82214
I2
s(g18723
I42
g18724
Vinsert
p82215
I42
VSimpleName: assertEquals
p82216
tp82217
I1
s(g3467
I42
g3468
Vinsert
p82218
I59
VVariableDeclarationFragment
p82219
tp82220
I1
s(Vinsert
p82221
I42
VSimpleName: setParent
p82222
Vinsert
p82223
I42
VSimpleName: setName
p82224
tp82225
I14
s(g25868
I42
g25869
Vinsert
p82226
I45
VStringLiteral: "\u005ctFROM d_prov_city_district\u005cn"
p82227
tp82228
I1
s(g13079
I42
g13080
Vinsert
p82229
I33
VNullLiteral
p82230
tp82231
I13
s(g2842
I42
g2843
Vinsert
p82232
I59
VVariableDeclarationFragment
p82233
tp82234
I1
s(g18632
I42
g18633
Vinsert
p82235
I43
VSimpleType: MySqlCharExpr
p82236
tp82237
I1
s(g33839
I42
g33840
Vinsert
p82238
I27
VInfixExpression: +
p82239
tp82240
I64
s(g27757
I42
g27758
Vinsert
p82241
I21
VExpressionStatement
p82242
tp82243
I1
s(g20486
I42
g20487
Vinsert
p82244
I74
VParameterizedType: ArrayList<DataSourceInfo>
p82245
tp82246
I1
s(g19179
I42
g19180
Vinsert
p82247
I42
VSimpleName: strings
p82248
tp82249
I2
s(g29767
I42
g29768
Vinsert
p82250
I42
VSimpleName: SQLArrayExpr
p82251
tp82252
I2
s(g1923
I42
g1924
Vinsert
p82253
I32
VMethodInvocation
p82254
tp82255
I5
s(g2639
I42
g2640
Vinsert
p82256
I45
VStringLiteral: "Count_5_10"
p82257
tp82258
I1
s(g14147
I42
g14148
Vinsert
p82259
I42
VSimpleName: parent
p82260
tp82261
I2
s(g36179
I42
g36180
Vinsert
p82262
I78
VMarkerAnnotation
p82263
tp82264
I4
s(g11297
I42
g11298
Vinsert
p82265
I42
VSimpleName: userAgent
p82266
tp82267
I1
s(g37815
I42
g37816
Vinsert
p82268
I42
VSimpleName: SQLExprTableSource
p82269
tp82270
I1
s(g2785
I42
g2786
Vinsert
p82271
I42
VSimpleName: webStat
p82272
tp82273
I2
s(Vinsert
p82274
I42
VSimpleName: assertFalse
p82275
Vinsert
p82276
I45
VStringLiteral: "select cid,title,id,img,fan from duoduo_mall where cid = cid and 1=1 order by sort desc limit 17 "
p82277
tp82278
I1
s(g987
I42
g988
Vinsert
p82279
I83
VModifier: public
p82280
tp82281
I1
s(g2702
I42
g2703
Vinsert
p82282
I43
VSimpleType: SQLName
p82283
tp82284
I1
s(Vinsert
p82285
I42
VSimpleName: assertEquals
p82286
Vinsert
p82287
I45
VStringLiteral: "\u005cn\u005ctCOALESCE PARTITION 6"
p82288
tp82289
I1
s(g8575
I42
g8576
Vinsert
p82290
I31
VMethodDeclaration
p82291
tp82292
I1
s(g24686
I42
g24687
Vinsert
p82293
I32
VMethodInvocation
p82294
tp82295
I3
s(g26080
I42
g26081
Vinsert
p82296
I59
VVariableDeclarationFragment
p82297
tp82298
I1
s(g6893
I42
g6894
Vinsert
p82299
I21
VExpressionStatement
p82300
tp82301
I1
s(g3457
I42
g3458
Vinsert
p82302
I43
VSimpleType: SQLAllExpr
p82303
tp82304
I2
s(g25834
I42
g25835
Vinsert
p82305
I8
VBlock
p82306
tp82307
I8
s(g15029
I42
g15030
Vinsert
p82308
I8
VBlock
p82309
tp82310
I1
s(g9629
I42
g9630
Vinsert
p82311
I21
VExpressionStatement
p82312
tp82313
I4
s(g1080
I42
g1081
Vinsert
p82314
I45
VStringLiteral: "FROM postman_trace_info_one\u005cn"
p82315
tp82316
I2
s(g2104
I42
g2105
Vinsert
p82317
I42
VSimpleName: accept
p82318
tp82319
I1
s(g10808
I42
g10809
Vinsert
p82320
I34
VNumberLiteral: 10
p82321
tp82322
I1
s(g11940
I42
g11941
Vinsert
p82323
I42
VSimpleName: client
p82324
tp82325
I2
s(g7542
I42
g7543
Vinsert
p82326
I42
VSimpleName: closeStatement
p82327
tp82328
I1
s(g1918
I42
g1919
Vinsert
p82329
I42
VSimpleName: SQLBinaryOpExpr
p82330
tp82331
I2
s(g38836
I42
g38837
Vinsert
p82332
I42
VSimpleName: StatFilter
p82333
tp82334
I1
s(g9267
I42
g9268
Vinsert
p82335
I59
VVariableDeclarationFragment
p82336
tp82337
I2
s(g14316
I42
g14317
Vinsert
p82338
I21
VExpressionStatement
p82339
tp82340
I1
s(g39618
I42
g39619
Vinsert
p82341
I42
VSimpleName: getForXmlOptions
p82342
tp82343
I1
s(g1705
I42
g1706
Vinsert
p82344
I27
VInfixExpression: ==
p82345
tp82346
I4
s(g20382
I42
g20383
Vinsert
p82347
I59
VVariableDeclarationFragment
p82348
tp82349
I1
s(g1840
I42
g1841
Vinsert
p82350
I42
VSimpleName: a
p82351
tp82352
I2
s(g19307
I42
g19308
Vinsert
p82353
I21
VExpressionStatement
p82354
tp82355
I1
s(g38777
I42
g38778
Vinsert
p82356
I42
VSimpleName: setReturningStatement
p82357
tp82358
I1
s(g18187
I42
g18188
Vinsert
p82359
I8
VBlock
p82360
tp82361
I4
s(g13957
I42
g13958
Vinsert
p82362
I40
VQualifiedName: Map.Entry
p82363
tp82364
I5
s(g4278
I42
g4279
Vinsert
p82365
I45
VStringLiteral: "| c_bigint     | bigint(20)   | NO   |     | NULL                |                             |\u005cn"
p82366
tp82367
I1
s(g13764
I42
g13765
Vinsert
p82368
I42
VSimpleName: e
p82369
tp82370
I2
s(g71079
I42
g71080
Vinsert
p82371
I27
VInfixExpression: &&
p82372
tp82373
I1
s(g17824
I42
g17825
Vinsert
p82374
I42
VSimpleName: setDbType
p82375
tp82376
I2
s(g14839
I42
g14840
Vinsert
p82377
I42
VSimpleName: out
p82378
tp82379
I1
s(g8038
I42
g8039
Vinsert
p82380
I43
VSimpleType: SQLException
p82381
tp82382
I1
s(g12262
I42
g12263
Vinsert
p82383
I42
VSimpleName: parseCreateDbLink
p82384
tp82385
I1
s(g5744
I42
g5745
Vinsert
p82386
I42
VSimpleName: String
p82387
tp82388
I12
s(g42528
I42
g42529
Vinsert
p82389
I42
VSimpleName: EvalMethodTest_Elt
p82390
tp82391
I1
s(g14730
I42
g14731
Vinsert
p82392
I42
VSimpleName: IOException
p82393
tp82394
I1
s(g10576
I42
g10577
Vinsert
p82395
I42
VSimpleName: equals
p82396
tp82397
I1
s(g5757
I42
g5758
Vinsert
p82398
I11
VCastExpression
p82399
tp82400
I1
s(g19283
I42
g19284
Vinsert
p82401
I60
VVariableDeclarationStatement
p82402
tp82403
I1
s(g37907
I42
g37908
Vinsert
p82404
I34
VNumberLiteral: 5
p82405
tp82406
I1
s(g16046
I42
g16047
Vinsert
p82407
I42
VSimpleName: assertEquals
p82408
tp82409
I1
s(g40533
I42
g40534
Vinsert
p82410
I42
VSimpleName: getExpr
p82411
tp82412
I1
s(g4640
I42
g4641
Vinsert
p82413
I42
VSimpleName: test_setBytes
p82414
tp82415
I1
s(g256
I42
g257
Vinsert
p82416
I42
VSimpleName: parent
p82417
tp82418
I2
s(g4640
I42
g4641
Vinsert
p82419
I42
VSimpleName: stmt
p82420
tp82421
I1
s(g38899
I42
g38900
Vinsert
p82422
I43
VSimpleType: DruidConnectionHolder
p82423
tp82424
I1
s(g3949
I42
g3950
Vinsert
p82425
I43
VSimpleType: SQLInsertStatement
p82426
tp82427
I2
s(g6529
I42
g6530
Vinsert
p82428
I8
VBlock
p82429
tp82430
I1
s(g35374
I42
g35375
Vinsert
p82431
I42
VSimpleName: p
p82432
tp82433
I8
s(g10571
I42
g10572
Vinsert
p82434
I33
VNullLiteral
p82435
tp82436
I5
s(g48698
I42
g48699
Vinsert
p82437
I42
VSimpleName: a
p82438
tp82439
I1
s(g52301
I42
g52302
Vinsert
p82440
I42
VSimpleName: op
p82441
tp82442
I2
s(g10412
I42
g10413
Vinsert
p82443
I52
VThisExpression
p82444
tp82445
I1
s(g10061
I42
g10062
Vinsert
p82446
I42
VSimpleName: env
p82447
tp82448
I1
s(g13891
I42
g13892
Vinsert
p82449
I42
VSimpleName: s
p82450
tp82451
I2
s(g31887
I42
g31888
Vinsert
p82452
I26
VImportDeclaration
p82453
tp82454
I1
s(g469
I42
g470
Vinsert
p82455
I27
VInfixExpression: ==
p82456
tp82457
I4
s(g7655
I42
g7656
Vinsert
p82458
I22
VFieldAccess
p82459
tp82460
I1
s(g1506
I42
g1507
Vinsert
p82461
I40
VQualifiedName: x.not
p82462
tp82463
I1
s(g37577
I42
g37578
Vinsert
p82464
I40
VQualifiedName: com.alibaba.druid.sql.dialect.phoenix.parser.PhoenixStatementParser
p82465
tp82466
I1
s(g49163
I42
g49164
Vinsert
p82467
I42
VSimpleName: Override
p82468
tp82469
I1
s(g231
I42
g232
Vinsert
p82470
I42
VSimpleName: setUpdateClause
p82471
tp82472
I1
s(g7310
I42
g7311
Vinsert
p82473
I83
VModifier: private
p82474
tp82475
I2
s(g12586
I42
g12587
Vinsert
p82476
I43
VSimpleType: SQLStatement
p82477
tp82478
I7
s(g10752
I42
g10753
Vinsert
p82479
I45
VStringLiteral: "WITH "
p82480
tp82481
I1
s(g7052
I42
g7053
Vinsert
p82482
I8
VBlock
p82483
tp82484
I2
s(g5826
I42
g5827
Vinsert
p82485
I42
VSimpleName: tableSource
p82486
tp82487
I2
s(g4824
I42
g4825
Vinsert
p82488
I78
VMarkerAnnotation
p82489
tp82490
I1
s(g17106
I42
g17107
Vinsert
p82491
I21
VExpressionStatement
p82492
tp82493
I1
s(g8350
I42
g8351
Vinsert
p82494
I45
VStringLiteral: "1.6"
p82495
tp82496
I1
s(g10887
I42
g10888
Vinsert
p82497
I42
VSimpleName: exprParser
p82498
tp82499
I1
s(g13986
I42
g13987
Vinsert
p82500
I42
VSimpleName: OracleBinaryDoubleExpr
p82501
tp82502
I1
s(g47931
I42
g47932
Vinsert
p82503
I42
VSimpleName: MySqlShowProcedureStatusStatement
p82504
tp82505
I2
s(g11161
I42
g11162
Vinsert
p82506
I42
VSimpleName: aggregateExpr
p82507
tp82508
I1
s(g15766
I42
g15767
Vinsert
p82509
I42
VSimpleName: Connection
p82510
tp82511
I1
s(g690
I42
g691
Vinsert
p82512
I42
VSimpleName: getWallStatMap
p82513
tp82514
I1
s(g21551
I42
g21552
Vinsert
p82515
I43
VSimpleType: String
p82516
tp82517
I9
s(g43952
I42
g43953
Vinsert
p82518
I83
VModifier: public
p82519
tp82520
I1
s(g3826
I42
g3827
Vinsert
p82521
I42
VSimpleName: getClass
p82522
tp82523
I1
s(g3149
I42
g3150
Vinsert
p82524
I44
VSingleVariableDeclaration
p82525
tp82526
I2
s(Vinsert
p82527
I42
VSimpleName: evalExpr
p82528
Vinsert
p82529
I42
VSimpleName: sqrt
p82530
tp82531
I1
s(g1948
I42
g1949
Vinsert
p82532
I59
VVariableDeclarationFragment
p82533
tp82534
I1
s(g1853
I42
g1854
Vinsert
p82535
I36
VParenthesizedExpression
p82536
tp82537
I1
s(g1770
I42
g1771
Vinsert
p82538
I43
VSimpleType: Exception
p82539
tp82540
I6
s(g25381
I42
g25382
Vinsert
p82541
I60
VVariableDeclarationStatement
p82542
tp82543
I1
s(g2444
I42
g2445
Vinsert
p82544
I40
VQualifiedName: Token.BETWEEN
p82545
tp82546
I1
s(g3528
I42
g3529
Vinsert
p82547
I39
VPrimitiveType: long
p82548
tp82549
I1
s(g14212
I42
g14213
Vinsert
p82550
I42
VSimpleName: webStat
p82551
tp82552
I2
s(g8391
I42
g8392
Vinsert
p82553
I27
VInfixExpression: +
p82554
tp82555
I5
s(g31568
I42
g31569
Vinsert
p82556
I7
VAssignment: =
p82557
tp82558
I22
s(g10846
I42
g10847
Vinsert
p82559
I42
VSimpleName: Reader
p82560
tp82561
I1
s(g3821
I42
g3822
Vinsert
p82562
I42
VSimpleName: assertTrue
p82563
tp82564
I1
s(g748
I42
g749
Vinsert
p82565
I32
VMethodInvocation
p82566
tp82567
I2
s(g20888
I42
g20889
Vinsert
p82568
I42
VSimpleName: getKeepAliveCheckCount
p82569
tp82570
I1
s(g5128
I42
g5129
Vinsert
p82571
I45
VStringLiteral: "| c_mediumtext | mediumtext   | NO   |     | NULL    |       |\u005cn"
p82572
tp82573
I1
s(g38094
I42
g38095
Vinsert
p82574
I42
VSimpleName: lexer
p82575
tp82576
I1
s(g14839
I42
g14840
Vinsert
p82577
I45
VStringLiteral: "</td></tr>"
p82578
tp82579
I1
s(g5079
I42
g5080
Vinsert
p82580
I43
VSimpleType: Exception
p82581
tp82582
I21
s(g5643
I42
g5644
Vinsert
p82583
I42
VSimpleName: conn
p82584
tp82585
I1
s(g3857
I42
g3858
Vinsert
p82586
I83
VModifier: public
p82587
tp82588
I3
s(g7047
I42
g7048
Vinsert
p82589
I45
VStringLiteral: "tid"
p82590
tp82591
I1
s(g5118
I42
g5119
Vinsert
p82592
I43
VSimpleType: String
p82593
tp82594
I1
s(Vinsert
p82595
I42
VSimpleName: assertEquals
p82596
Vinsert
p82597
I42
VSimpleName: EvalMethodModTest
p82598
tp82599
I1
s(g6380
I42
g6381
Vinsert
p82600
I42
VSimpleName: ArrayList
p82601
tp82602
I1
s(g14431
I42
g14432
Vinsert
p82603
I21
VExpressionStatement
p82604
tp82605
I3
s(g5638
I42
g5639
Vinsert
p82606
I39
VPrimitiveType: boolean
p82607
tp82608
I1
s(g12734
I42
g12735
Vinsert
p82609
I9
VBooleanLiteral: false
p82610
tp82611
I3
s(g22802
I42
g22803
Vinsert
p82612
I45
VStringLiteral: " ALTER ANY MATERIALIZED VIEW,"
p82613
tp82614
I1
s(g32069
I42
g32070
Vinsert
p82615
I42
VSimpleName: DruidDataSource
p82616
tp82617
I1
s(g15761
I42
g15762
Vinsert
p82618
I43
VSimpleType: SQLOver
p82619
tp82620
I1
s(g5305
I42
g5306
Vinsert
p82621
I42
VSimpleName: readAndResetComments
p82622
tp82623
I3
s(g3913
I42
g3914
Vinsert
p82624
I45
VStringLiteral: "oidindex"
p82625
tp82626
I1
s(g11737
I42
g11738
Vinsert
p82627
I42
VSimpleName: Object
p82628
tp82629
I1
s(g24125
I42
g24126
Vinsert
p82630
I14
VClassInstanceCreation
p82631
tp82632
I1
s(g2805
I42
g2806
Vinsert
p82633
I83
VModifier: final
p82634
tp82635
I1
s(g1705
I42
g1706
Vinsert
p82636
I42
VSimpleName: entity
p82637
tp82638
I4
s(g31803
I42
g31804
Vinsert
p82639
I43
VSimpleType: MySqlShowProcessListStatement
p82640
tp82641
I2
s(g4936
I42
g4937
Vinsert
p82642
I32
VMethodInvocation
p82643
tp82644
I4
s(g11915
I42
g11916
Vinsert
p82645
I32
VMethodInvocation
p82646
tp82647
I7
s(g6270
I42
g6271
Vinsert
p82648
I42
VSimpleName: expr
p82649
tp82650
I1
s(g4674
I42
g4675
Vinsert
p82651
I62
VInstanceofExpression
p82652
tp82653
I1
s(g17007
I42
g17008
Vinsert
p82654
I14
VClassInstanceCreation
p82655
tp82656
I5
s(g6
I42
g7
Vinsert
p82657
I32
VMethodInvocation
p82658
tp82659
I1
s(g5826
I42
g5827
Vinsert
p82660
I21
VExpressionStatement
p82661
tp82662
I4
s(g46314
I42
g46315
Vinsert
p82663
I45
VStringLiteral: " AND islast=0"
p82664
tp82665
I1
s(g16586
I42
g16587
Vinsert
p82666
I31
VMethodDeclaration
p82667
tp82668
I3
s(g4992
I42
g4993
Vinsert
p82669
I34
VNumberLiteral: 0
p82670
tp82671
I3
s(g652
I42
g653
Vinsert
p82672
I43
VSimpleType: String
p82673
tp82674
I1
s(g34000
I42
g34001
Vinsert
p82675
I7
VAssignment: =
p82676
tp82677
I7
s(g4538
I42
g4539
Vinsert
p82678
I42
VSimpleName: SQLUtils
p82679
tp82680
I36
s(g15848
I42
g15849
Vinsert
p82681
I45
VStringLiteral: "\u005ctEND REPEAT;\u005cn"
p82682
tp82683
I1
s(g972
I42
g973
Vinsert
p82684
I45
VStringLiteral: "(\u005cn"
p82685
tp82686
I2
s(g3223
I42
g3224
Vinsert
p82687
I42
VSimpleName: attributes
p82688
tp82689
I1
s(g15304
I42
g15305
Vinsert
p82690
I43
VSimpleType: DB2OutputVisitor
p82691
tp82692
I1
s(g1579
I42
g1580
Vinsert
p82693
I42
VSimpleName: tempN
p82694
tp82695
I1
s(g1589
I42
g1590
Vinsert
p82696
I42
VSimpleName: lexer
p82697
tp82698
I1
s(g11041
I42
g11042
Vinsert
p82699
I42
VSimpleName: nextChar
p82700
tp82701
I1
s(g35733
I42
g35734
Vinsert
p82702
I42
VSimpleName: WallProvider
p82703
tp82704
I22
s(g27372
I42
g27373
Vinsert
p82705
I21
VExpressionStatement
p82706
tp82707
I7
s(g2935
I42
g2936
Vinsert
p82708
I43
VSimpleType: OdpsASTVisitor
p82709
tp82710
I2
s(g23899
I42
g23900
Vinsert
p82711
I42
VSimpleName: properties
p82712
tp82713
I1
s(g7158
I42
g7159
Vinsert
p82714
I78
VMarkerAnnotation
p82715
tp82716
I1
s(g21876
I42
g21877
Vinsert
p82717
I42
VSimpleName: getMajorVersion
p82718
tp82719
I1
s(g27861
I42
g27862
Vinsert
p82720
I24
VForStatement
p82721
tp82722
I1
s(g5414
I42
g5415
Vinsert
p82723
I45
VStringLiteral: "delete "
p82724
tp82725
I1
s(g22033
I42
g22034
Vinsert
p82726
I43
VSimpleType: WebSessionStat
p82727
tp82728
I3
s(g13445
I42
g13446
Vinsert
p82729
I44
VSingleVariableDeclaration
p82730
tp82731
I1
s(g66189
I42
g66190
Vinsert
p82732
I42
VSimpleName: setTableName
p82733
tp82734
I2
s(g21147
I42
g21148
Vinsert
p82735
I42
VSimpleName: i
p82736
tp82737
I4
s(Vinsert
p82738
I42
VSimpleName: getOperator
p82739
Vinsert
p82740
I42
VSimpleName: getRight
p82741
tp82742
I1
s(Vinsert
p82743
I42
VSimpleName: setParent
p82744
Vinsert
p82745
I42
VSimpleName: sqlSecurity
p82746
tp82747
I6
s(g18308
I42
g18309
Vinsert
p82748
I42
VSimpleName: isEmpty
p82749
tp82750
I2
s(g14212
I42
g14213
Vinsert
p82751
I8
VBlock
p82752
tp82753
I1
s(g5017
I42
g5018
Vinsert
p82754
I42
VSimpleName: dao
p82755
tp82756
I2
s(g2727
I42
g2728
Vinsert
p82757
I42
VSimpleName: constraintName
p82758
tp82759
I1
s(g10292
I42
g10293
Vinsert
p82760
I42
VSimpleName: connectProperties
p82761
tp82762
I2
s(g31291
I42
g31292
Vinsert
p82763
I45
VStringLiteral: "lateral view "
p82764
tp82765
I1
s(g27783
I42
g27784
Vinsert
p82766
I42
VSimpleName: getColumns
p82767
tp82768
I7
s(g20226
I42
g20227
Vinsert
p82769
I42
VSimpleName: isInsertAllow
p82770
tp82771
I2
s(g1978
I42
g1979
Vinsert
p82772
I33
VNullLiteral
p82773
tp82774
I2
s(g11795
I42
g11796
Vinsert
p82775
I42
VSimpleName: errorCode
p82776
tp82777
I2
s(g3880
I42
g3881
Vinsert
p82778
I42
VSimpleName: getMethod
p82779
tp82780
I1
s(g4490
I42
g4491
Vinsert
p82781
I60
VVariableDeclarationStatement
p82782
tp82783
I5
s(g9992
I42
g9993
Vinsert
p82784
I42
VSimpleName: IGNORE
p82785
tp82786
I1
s(g21845
I42
g21846
Vinsert
p82787
I59
VVariableDeclarationFragment
p82788
tp82789
I1
s(g2885
I42
g2886
Vinsert
p82790
I40
VQualifiedName: lexer.token
p82791
tp82792
I2
s(g9243
I42
g9244
Vinsert
p82793
I21
VExpressionStatement
p82794
tp82795
I7
s(g33444
I42
g33445
Vinsert
p82796
I42
VSimpleName: SQLDataType
p82797
tp82798
I1
s(g48513
I42
g48514
Vinsert
p82799
I42
VSimpleName: stmtListSize
p82800
tp82801
I1
s(g12791
I42
g12792
Vinsert
p82802
I42
VSimpleName: getUsing
p82803
tp82804
I3
s(g982
I42
g983
Vinsert
p82805
I42
VSimpleName: c5
p82806
tp82807
I1
s(g8956
I42
g8957
Vinsert
p82808
I42
VSimpleName: WallSqlStat
p82809
tp82810
I1
s(g1246
I42
g1247
Vinsert
p82811
I45
VStringLiteral: "NOVALIDATE"
p82812
tp82813
I1
s(g17408
I42
g17409
Vinsert
p82814
I42
VSimpleName: startFullGC
p82815
tp82816
I1
s(g12753
I42
g12754
Vinsert
p82817
I42
VSimpleName: visitor
p82818
tp82819
I205
s(g14782
I42
g14783
Vinsert
p82820
I21
VExpressionStatement
p82821
tp82822
I8
s(g10467
I42
g10468
Vinsert
p82823
I42
VSimpleName: List
p82824
tp82825
I2
s(g1938
I42
g1939
Vinsert
p82826
I42
VSimpleName: OracleSchemaStatVisitor
p82827
tp82828
I305
s(g1923
I42
g1924
Vinsert
p82829
I21
VExpressionStatement
p82830
tp82831
I1
s(g68747
I42
g68748
Vinsert
p82832
I45
VStringLiteral: "SAVEPOINT"
p82833
tp82834
I2
s(g4490
I42
g4491
Vinsert
p82835
I59
VVariableDeclarationFragment
p82836
tp82837
I5
s(g9982
I42
g9983
Vinsert
p82838
I45
VStringLiteral: "\u005ctsql_stmt := 'UPDATE emp SET sal = 2000 WHERE empno = :1\u005cn"
p82839
tp82840
I1
s(g5505
I42
g5506
Vinsert
p82841
I42
VSimpleName: assertEquals
p82842
tp82843
I2
s(g13720
I42
g13721
Vinsert
p82844
I32
VMethodInvocation
p82845
tp82846
I40
s(g13617
I42
g13618
Vinsert
p82847
I42
VSimpleName: WallCheckResult
p82848
tp82849
I1
s(Vinsert
p82850
I42
VSimpleName: getConnection
p82851
Vinsert
p82852
I42
VSimpleName: reset
p82853
tp82854
I1
s(g11930
I42
g11931
Vinsert
p82855
I42
VSimpleName: SQLName
p82856
tp82857
I1
s(g9732
I42
g9733
Vinsert
p82858
I42
VSimpleName: slave
p82859
tp82860
I2
s(Vinsert
p82861
I42
VSimpleName: assertTrue
p82862
Vinsert
p82863
I45
VStringLiteral: "col2"
p82864
tp82865
I2
s(g10710
I42
g10711
Vinsert
p82866
I42
VSimpleName: Option
p82867
tp82868
I1
s(g15536
I42
g15537
Vinsert
p82869
I42
VSimpleName: String
p82870
tp82871
I1
s(g487
I42
g488
Vinsert
p82872
I21
VExpressionStatement
p82873
tp82874
I1
s(g69535
I42
g69536
Vinsert
p82875
I42
VSimpleName: setIfExists
p82876
tp82877
I1
s(g55772
I42
g55773
Vinsert
p82878
I42
VSimpleName: unwrap
p82879
tp82880
I2
s(g16145
I42
g16146
Vinsert
p82881
I25
VIfStatement
p82882
tp82883
I3
s(g49683
I42
g49684
Vinsert
p82884
I42
VSimpleName: setDefaultTransactionIsolation
p82885
tp82886
I1
s(g72455
I42
g72456
Vinsert
p82887
I42
VSimpleName: identExpr
p82888
tp82889
I10
s(g39635
I42
g39636
Vinsert
p82890
I42
VSimpleName: assertFalse
p82891
tp82892
I1
s(g19573
I42
g19574
Vinsert
p82893
I32
VMethodInvocation
p82894
tp82895
I7
s(g37169
I42
g37170
Vinsert
p82896
I42
VSimpleName: option
p82897
tp82898
I6
s(g2568
I42
g2569
Vinsert
p82899
I21
VExpressionStatement
p82900
tp82901
I2
s(g166
I42
g167
Vinsert
p82902
I42
VSimpleName: providerB
p82903
tp82904
I1
s(g6103
I42
g6104
Vinsert
p82905
I42
VSimpleName: OracleWallProvider
p82906
tp82907
I1
s(g42013
I42
g42014
Vinsert
p82908
I32
VMethodInvocation
p82909
tp82910
I1
s(g5964
I42
g5965
Vinsert
p82911
I42
VSimpleName: DruidDataSource
p82912
tp82913
I1
s(g2168
I42
g2169
Vinsert
p82914
I45
VStringLiteral: " FIRST "
p82915
tp82916
I1
s(g17652
I42
g17653
Vinsert
p82917
I42
VSimpleName: SQLAlterTableStatement
p82918
tp82919
I2
s(g932
I42
g933
Vinsert
p82920
I42
VSimpleName: SchemaRepository
p82921
tp82922
I1
s(g42013
I42
g42014
Vinsert
p82923
I42
VSimpleName: dataSource
p82924
tp82925
I1
s(Vinsert
p82926
I42
VSimpleName: prepareStatement
p82927
Vinsert
p82928
I42
VSimpleName: stmt
p82929
tp82930
I21
s(g8179
I42
g8180
Vinsert
p82931
I60
VVariableDeclarationStatement
p82932
tp82933
I1
s(g6333
I42
g6334
Vinsert
p82934
I42
VSimpleName: getType
p82935
tp82936
I3
s(g914
I42
g915
Vinsert
p82937
I42
VSimpleName: x
p82938
tp82939
I9
s(g1627
I42
g1628
Vinsert
p82940
I42
VSimpleName: Exception
p82941
tp82942
I2
s(g41850
I42
g41851
Vinsert
p82943
I42
VSimpleName: hashSet
p82944
tp82945
I1
s(g196
I42
g197
Vinsert
p82946
I45
VStringLiteral: "\u005ctSELECT DISTINCT MKTG_PLAN_LVL3_ID AS PID, MKTG_PLAN_LVL4_ID AS SCENE_ID\u005cn"
p82947
tp82948
I1
s(g19018
I42
g19019
Vinsert
p82949
I42
VSimpleName: List
p82950
tp82951
I2
s(Vinsert
p82952
I42
VSimpleName: size
p82953
Vinsert
p82954
I42
VSimpleName: partitions
p82955
tp82956
I2
s(g12726
I42
g12727
Vinsert
p82957
I32
VMethodInvocation
p82958
tp82959
I4
s(g33506
I42
g33507
Vinsert
p82960
I42
VSimpleName: PROP_INIT
p82961
tp82962
I2
s(g10503
I42
g10504
Vinsert
p82963
I43
VSimpleType: SQLAlterTableDropColumnItem
p82964
tp82965
I2
s(g18437
I42
g18438
Vinsert
p82966
I14
VClassInstanceCreation
p82967
tp82968
I2
s(g18531
I42
g18532
Vinsert
p82969
I42
VSimpleName: queryBlock
p82970
tp82971
I2
s(g2930
I42
g2931
Vinsert
p82972
I42
VSimpleName: validate
p82973
tp82974
I1
s(g18300
I42
g18301
Vinsert
p82975
I42
VSimpleName: identity
p82976
tp82977
I2
s(g53430
I42
g53431
Vinsert
p82978
I42
VSimpleName: test_1
p82979
tp82980
I1
s(g16630
I42
g16631
Vinsert
p82981
I42
VSimpleName: StatFilter
p82982
tp82983
I2
s(g8090
I42
g8091
Vinsert
p82984
I43
VSimpleType: OracleCreateTableStatement.Organization
p82985
tp82986
I1
s(g8425
I42
g8426
Vinsert
p82987
I42
VSimpleName: assertEquals
p82988
tp82989
I1
s(g23258
I42
g23259
Vinsert
p82990
I42
VSimpleName: Assert
p82991
tp82992
I1
s(g11649
I42
g11650
Vinsert
p82993
I11
VCastExpression
p82994
tp82995
I1
s(g11067
I42
g11068
Vinsert
p82996
I43
VSimpleType: SQLCharExpr
p82997
tp82998
I7
s(g1511
I42
g1512
Vinsert
p82999
I21
VExpressionStatement
p83000
tp83001
I5
s(g9307
I42
g9308
Vinsert
p83002
I42
VSimpleName: tableName
p83003
tp83004
I1
s(g29596
I42
g29597
Vinsert
p83005
I9
VBooleanLiteral: false
p83006
tp83007
I1
s(g6830
I42
g6831
Vinsert
p83008
I45
VStringLiteral: "LIMIT ?, ?"
p83009
tp83010
I1
s(g77838
I42
g77839
Vinsert
p83011
I42
VSimpleName: trim
p83012
tp83013
I1
s(g26244
I42
g26245
Vinsert
p83014
I59
VVariableDeclarationFragment
p83015
tp83016
I1
s(g30855
I42
g30856
Vinsert
p83017
I45
VStringLiteral: "informix"
p83018
tp83019
I1
s(g6328
I42
g6329
Vinsert
p83020
I43
VSimpleType: NoSuchMethodError
p83021
tp83022
I1
s(g42357
I42
g42358
Vinsert
p83023
I42
VSimpleName: Prior
p83024
tp83025
I1
s(g17575
I42
g17576
Vinsert
p83026
I27
VInfixExpression: &&
p83027
tp83028
I1
s(g9410
I42
g9411
Vinsert
p83029
I59
VVariableDeclarationFragment
p83030
tp83031
I1
s(g34608
I42
g34609
Vinsert
p83032
I43
VSimpleType: SQLServerProvider
p83033
tp83034
I2
s(g1617
I42
g1618
Vinsert
p83035
I32
VMethodInvocation
p83036
tp83037
I2
s(g4844
I42
g4845
Vinsert
p83038
I42
VSimpleName: OracleDataTypeIntervalDay
p83039
tp83040
I1
s(g7409
I42
g7410
Vinsert
p83041
I42
VSimpleName: assertTrue
p83042
tp83043
I1
s(g5022
I42
g5023
Vinsert
p83044
I45
VStringLiteral: "\u005cn\u005ct\u005ct\u005ct\u005ct\u005ctFROM t5"
p83045
tp83046
I1
s(g2930
I42
g2931
Vinsert
p83047
I32
VMethodInvocation
p83048
tp83049
I2
s(g16005
I42
g16006
Vinsert
p83050
I43
VSimpleType: String
p83051
tp83052
I1
s(g13891
I42
g13892
Vinsert
p83053
I7
VAssignment: =
p83054
tp83055
I1
s(g46523
I42
g46524
Vinsert
p83056
I39
VPrimitiveType: void
p83057
tp83058
I1
s(g18796
I42
g18797
Vinsert
p83059
I44
VSingleVariableDeclaration
p83060
tp83061
I1
s(g6893
I42
g6894
Vinsert
p83062
I42
VSimpleName: bitwise
p83063
tp83064
I3
s(g4442
I42
g4443
Vinsert
p83065
I39
VPrimitiveType: long
p83066
tp83067
I1
s(g14353
I42
g14354
Vinsert
p83068
I43
VSimpleType: SybaseExceptionSorter
p83069
tp83070
I2
s(g821
I42
g822
Vinsert
p83071
I8
VBlock
p83072
tp83073
I2
s(g41913
I42
g41914
Vinsert
p83074
I42
VSimpleName: commentCallBack
p83075
tp83076
I1
s(g6303
I42
g6304
Vinsert
p83077
I42
VSimpleName: reverse
p83078
tp83079
I1
s(g1589
I42
g1590
Vinsert
p83080
I42
VSimpleName: nextToken
p83081
tp83082
I1
s(Vinsert
p83083
I42
VSimpleName: visit
p83084
Vinsert
p83085
I42
VSimpleName: purge
p83086
tp83087
I1
s(g587
I42
g588
Vinsert
p83088
I45
VStringLiteral: "where not exists   ("
p83089
tp83090
I1
s(g21598
I42
g21599
Vinsert
p83091
I39
VPrimitiveType: void
p83092
tp83093
I9
s(g15864
I42
g15865
Vinsert
p83094
I43
VSimpleType: Exception
p83095
tp83096
I1
s(g733
I42
g734
Vinsert
p83097
I83
VModifier: public
p83098
tp83099
I7
s(g4308
I42
g4309
Vinsert
p83100
I27
VInfixExpression: <
p83101
tp83102
I1
s(g5515
I42
g5516
Vinsert
p83103
I14
VClassInstanceCreation
p83104
tp83105
I1
s(g31257
I42
g31258
Vinsert
p83106
I42
VSimpleName: visitor
p83107
tp83108
I16
s(g487
I42
g488
Vinsert
p83109
I5
VArrayType: String[]
p83110
tp83111
I1
s(g6622
I42
g6623
Vinsert
p83112
I59
VVariableDeclarationFragment
p83113
tp83114
I1
s(g35793
I42
g35794
Vinsert
p83115
I45
VStringLiteral: "insert overwrite table sale_detail_multi partition (sale_date='2011', region='china' )\u005cn"
p83116
tp83117
I1
s(g26531
I42
g26532
Vinsert
p83118
I43
VSimpleType: SQLSelect
p83119
tp83120
I4
s(g326
I42
g327
Vinsert
p83121
I45
VStringLiteral: "    AND sample_column_table_schema = 'SC_PRODUCT_03'\u005cn"
p83122
tp83123
I1
s(g13813
I42
g13814
Vinsert
p83124
I42
VSimpleName: valueOf
p83125
tp83126
I1
s(g11492
I42
g11493
Vinsert
p83127
I42
VSimpleName: clientImplWrapper
p83128
tp83129
I3
s(g2120
I42
g2121
Vinsert
p83130
I21
VExpressionStatement
p83131
tp83132
I6
s(g14754
I42
g14755
Vinsert
p83133
I59
VVariableDeclarationFragment
p83134
tp83135
I1
s(g23872
I42
g23873
Vinsert
p83136
I42
VSimpleName: Override
p83137
tp83138
I156
s(g28107
I42
g28108
Vinsert
p83139
I45
VStringLiteral: "Error : "
p83140
tp83141
I1
s(g26526
I42
g26527
Vinsert
p83142
I42
VSimpleName: parser
p83143
tp83144
I34
s(Vinsert
p83145
I42
VSimpleName: output
p83146
Vinsert
p83147
I42
VSimpleName: column
p83148
tp83149
I1
s(g34829
I42
g34830
Vinsert
p83150
I42
VSimpleName: startTimeMillis
p83151
tp83152
I1
s(g1574
I42
g1575
Vinsert
p83153
I34
VNumberLiteral: 1
p83154
tp83155
I35
s(g54524
I42
g54525
Vinsert
p83156
I42
VSimpleName: expr
p83157
tp83158
I2
s(g20840
I42
g20841
Vinsert
p83159
I42
VSimpleName: name
p83160
tp83161
I1
s(g13569
I42
g13570
Vinsert
p83162
I44
VSingleVariableDeclaration
p83163
tp83164
I2
s(g10074
I42
g10075
Vinsert
p83165
I42
VSimpleName: rs
p83166
tp83167
I3
s(g11691
I42
g11692
Vinsert
p83168
I59
VVariableDeclarationFragment
p83169
tp83170
I17
s(g25578
I42
g25579
Vinsert
p83171
I42
VSimpleName: getPhysicalConnectErrorCount
p83172
tp83173
I2
s(g29554
I42
g29555
Vinsert
p83174
I45
VStringLiteral: "varying"
p83175
tp83176
I1
s(g6771
I42
g6772
Vinsert
p83177
I33
VNullLiteral
p83178
tp83179
I1
s(g3579
I42
g3580
Vinsert
p83180
I25
VIfStatement
p83181
tp83182
I2
s(g9524
I42
g9525
Vinsert
p83183
I45
VStringLiteral: "\u005ctwhere UT.ad_clk > 0\u005cn"
p83184
tp83185
I1
s(g30541
I42
g30542
Vinsert
p83186
I43
VSimpleType: SQLDataType
p83187
tp83188
I1
s(g8409
I42
g8410
Vinsert
p83189
I60
VVariableDeclarationStatement
p83190
tp83191
I1
s(Vinsert
p83192
I42
VSimpleName: getConnection
p83193
Vinsert
p83194
I45
VStringLiteral: "select * from t where id = "
p83195
tp83196
I1
s(g3608
I42
g3609
Vinsert
p83197
I42
VSimpleName: object
p83198
tp83199
I1
s(g2614
I42
g2615
Vinsert
p83200
I42
VSimpleName: x
p83201
tp83202
I17
s(g9158
I42
g9159
Vinsert
p83203
I42
VSimpleName: OracleIsSetExpr
p83204
tp83205
I2
s(g4689
I42
g4690
Vinsert
p83206
I45
VStringLiteral: "\u005ct\u005ctAND S.SITE_ID = M.SITE_ID\u005cn"
p83207
tp83208
I1
s(g21284
I42
g21285
Vinsert
p83209
I42
VSimpleName: classLoader
p83210
tp83211
I1
s(g12671
I42
g12672
Vinsert
p83212
I42
VSimpleName: SQLNumberExpr
p83213
tp83214
I2
s(g28138
I42
g28139
Vinsert
p83215
I21
VExpressionStatement
p83216
tp83217
I6
s(g37973
I42
g37974
Vinsert
p83218
I42
VSimpleName: SQLExpr
p83219
tp83220
I9
s(g4253
I42
g4254
Vinsert
p83221
I43
VSimpleType: Exception
p83222
tp83223
I2
s(g30229
I42
g30230
Vinsert
p83224
I25
VIfStatement
p83225
tp83226
I1
s(g5384
I42
g5385
Vinsert
p83227
I31
VMethodDeclaration
p83228
tp83229
I2
s(g8547
I42
g8548
Vinsert
p83230
I32
VMethodInvocation
p83231
tp83232
I13
s(g3213
I42
g3214
Vinsert
p83233
I44
VSingleVariableDeclaration
p83234
tp83235
I6
s(g45596
I42
g45597
Vinsert
p83236
I42
VSimpleName: getTables
p83237
tp83238
I37
s(g15621
I42
g15622
Vinsert
p83239
I52
VThisExpression
p83240
tp83241
I3
s(g2712
I42
g2713
Vinsert
p83242
I27
VInfixExpression: &&
p83243
tp83244
I22
s(g1390
I42
g1391
Vinsert
p83245
I39
VPrimitiveType: int
p83246
tp83247
I4
s(g10687
I42
g10688
Vinsert
p83248
I43
VSimpleType: Throwable
p83249
tp83250
I1
s(g876
I42
g877
Vinsert
p83251
I40
VQualifiedName: System.out
p83252
tp83253
I284
s(g29658
I42
g29659
Vinsert
p83254
I42
VSimpleName: exprParser
p83255
tp83256
I26
s(g60517
I42
g60518
Vinsert
p83257
I42
VSimpleName: getMap
p83258
tp83259
I1
s(g2193
I42
g2194
Vinsert
p83260
I33
VNullLiteral
p83261
tp83262
I4
s(g2439
I42
g2440
Vinsert
p83263
I31
VMethodDeclaration
p83264
tp83265
I8
s(g5351
I42
g5352
Vinsert
p83266
I32
VMethodInvocation
p83267
tp83268
I1
s(g34988
I42
g34989
Vinsert
p83269
I42
VSimpleName: mark_bp
p83270
tp83271
I1
s(g20564
I42
g20565
Vinsert
p83272
I42
VSimpleName: entry
p83273
tp83274
I1
s(g22469
I42
g22470
Vinsert
p83275
I33
VNullLiteral
p83276
tp83277
I2
s(g2504
I42
g2505
Vinsert
p83278
I33
VNullLiteral
p83279
tp83280
I1
s(g14226
I42
g14227
Vinsert
p83281
I32
VMethodInvocation
p83282
tp83283
I3
s(g2079
I42
g2080
Vinsert
p83284
I44
VSingleVariableDeclaration
p83285
tp83286
I1
s(g33889
I42
g33890
Vinsert
p83287
I43
VSimpleType: SQLException
p83288
tp83289
I2
s(g17012
I42
g17013
Vinsert
p83290
I42
VSimpleName: ServletContext
p83291
tp83292
I1
s(g33382
I42
g33383
Vinsert
p83293
I40
VQualifiedName: lexer.token
p83294
tp83295
I1
s(g29627
I42
g29628
Vinsert
p83296
I43
VSimpleType: SQLExpr
p83297
tp83298
I1
s(g38899
I42
g38900
Vinsert
p83299
I57
VTypeLiteral
p83300
tp83301
I2
s(g5979
I42
g5980
Vinsert
p83302
I9
VBooleanLiteral: false
p83303
tp83304
I3
s(g6084
I42
g6085
Vinsert
p83305
I32
VMethodInvocation
p83306
tp83307
I4
s(g21845
I42
g21846
Vinsert
p83308
I42
VSimpleName: property
p83309
tp83310
I1
s(g33018
I42
g33019
Vinsert
p83311
I42
VSimpleName: select
p83312
tp83313
I1
s(g14274
I42
g14275
Vinsert
p83314
I44
VSingleVariableDeclaration
p83315
tp83316
I1
s(g4704
I42
g4705
Vinsert
p83317
I42
VSimpleName: comments
p83318
tp83319
I2
s(g30023
I42
g30024
Vinsert
p83320
I36
VParenthesizedExpression
p83321
tp83322
I1
s(g16525
I42
g16526
Vinsert
p83323
I42
VSimpleName: HMappingDefaultImpl
p83324
tp83325
I3
s(g32567
I42
g32568
Vinsert
p83326
I42
VSimpleName: MySqlShowCreateProcedureStatement
p83327
tp83328
I1
s(g27974
I42
g27975
Vinsert
p83329
I21
VExpressionStatement
p83330
tp83331
I2
s(g4645
I42
g4646
Vinsert
p83332
I42
VSimpleName: getURIStatData
p83333
tp83334
I1
s(g3569
I42
g3570
Vinsert
p83335
I33
VNullLiteral
p83336
tp83337
I1
s(g13588
I42
g13589
Vinsert
p83338
I83
VModifier: public
p83339
tp83340
I4
s(g7991
I42
g7992
Vinsert
p83341
I43
VSimpleType: Exception
p83342
tp83343
I1
s(g1456
I42
g1457
Vinsert
p83344
I42
VSimpleName: Class
p83345
tp83346
I3
s(g8711
I42
g8712
Vinsert
p83347
I40
VQualifiedName: JdbcConstants.ORACLE
p83348
tp83349
I1
s(g28455
I42
g28456
Vinsert
p83350
I42
VSimpleName: byHash
p83351
tp83352
I1
s(g14234
I42
g14235
Vinsert
p83353
I42
VSimpleName: String
p83354
tp83355
I1
s(g14026
I42
g14027
Vinsert
p83356
I42
VSimpleName: offset
p83357
tp83358
I4
s(g21276
I42
g21277
Vinsert
p83359
I34
VNumberLiteral: 2
p83360
tp83361
I2
s(g1755
I42
g1756
Vinsert
p83362
I42
VSimpleName: accept
p83363
tp83364
I161
s(g1627
I42
g1628
Vinsert
p83365
I42
VSimpleName: SQLUtils
p83366
tp83367
I4
s(g45703
I42
g45704
Vinsert
p83368
I42
VSimpleName: condition
p83369
tp83370
I1
s(g9028
I42
g9029
Vinsert
p83371
I27
VInfixExpression: !=
p83372
tp83373
I1
s(g1996
I42
g1997
Vinsert
p83374
I45
VStringLiteral: "VALUES "
p83375
tp83376
I1
s(g8499
I42
g8500
Vinsert
p83377
I42
VSimpleName: visit
p83378
tp83379
I1
s(g2935
I42
g2936
Vinsert
p83380
I42
VSimpleName: OdpsASTVisitor
p83381
tp83382
I2
s(g8711
I42
g8712
Vinsert
p83383
I42
VSimpleName: block
p83384
tp83385
I2
s(g14829
I42
g14830
Vinsert
p83386
I43
VSimpleType: String
p83387
tp83388
I18
s(g53827
I42
g53828
Vinsert
p83389
I40
VQualifiedName: Token.LITERAL_ALIAS
p83390
tp83391
I1
s(g4134
I42
g4135
Vinsert
p83392
I42
VSimpleName: getLocalIPAddress
p83393
tp83394
I1
s(g41819
I42
g41820
Vinsert
p83395
I42
VSimpleName: OracleMethodInvokeStatement
p83396
tp83397
I1
s(g2099
I42
g2100
Vinsert
p83398
I32
VMethodInvocation
p83399
tp83400
I3
s(g14540
I42
g14541
Vinsert
p83401
I42
VSimpleName: FilterChainImpl
p83402
tp83403
I1
s(g7756
I42
g7757
Vinsert
p83404
I43
VSimpleType: Collection
p83405
tp83406
I1
s(g5369
I42
g5370
Vinsert
p83407
I31
VMethodDeclaration
p83408
tp83409
I1
s(g8449
I42
g8450
Vinsert
p83410
I42
VSimpleName: Character
p83411
tp83412
I1
s(g4093
I42
g4094
Vinsert
p83413
I42
VSimpleName: getUrl
p83414
tp83415
I1
s(g28455
I42
g28456
Vinsert
p83416
I42
VSimpleName: expr
p83417
tp83418
I15
s(g3997
I42
g3998
Vinsert
p83419
I42
VSimpleName: SQLOver
p83420
tp83421
I4
s(g23557
I42
g23558
Vinsert
p83422
I42
VSimpleName: cause
p83423
tp83424
I2
s(g11110
I42
g11111
Vinsert
p83425
I7
VAssignment: =
p83426
tp83427
I2
s(g1110
I42
g1111
Vinsert
p83428
I45
VStringLiteral: "LEFT JOIN erp_zte.zte_kx_osg3_items kx ON osg.osg_item_id = kx.osg_item_id , tcp_cpr.con_sites sites, tcp_cpr.system_bom b4\u005cn"
p83429
tp83430
I1
s(g20888
I42
g20889
Vinsert
p83431
I42
VSimpleName: get
p83432
tp83433
I1
s(g33090
I42
g33091
Vinsert
p83434
I42
VSimpleName: JdbcUtilsTest2
p83435
tp83436
I1
s(g7736
I42
g7737
Vinsert
p83437
I8
VBlock
p83438
tp83439
I1
s(g10467
I42
g10468
Vinsert
p83440
I42
VSimpleName: result
p83441
tp83442
I1
s(g106
I42
g107
Vinsert
p83443
I42
VSimpleName: print
p83444
tp83445
I1
s(g43804
I42
g43805
Vinsert
p83446
I42
VSimpleName: getStatContext
p83447
tp83448
I1
s(g1647
I42
g1648
Vinsert
p83449
I8
VBlock
p83450
tp83451
I1
s(g487
I42
g488
Vinsert
p83452
I42
VSimpleName: SpringApplication
p83453
tp83454
I1
s(g5831
I42
g5832
Vinsert
p83455
I7
VAssignment: =
p83456
tp83457
I2
s(g5579
I42
g5580
Vinsert
p83458
I45
VStringLiteral: "OPTIONS (USER 'Remote', HOST '192.168.1.106', DATABASE 'test');"
p83459
tp83460
I1
s(g51
I42
g52
Vinsert
p83461
I43
VSimpleType: JdbcSqlStat
p83462
tp83463
I2
s(g34705
I42
g34706
Vinsert
p83464
I42
VSimpleName: decimalValue
p83465
tp83466
I2
s(g5729
I42
g5730
Vinsert
p83467
I52
VThisExpression
p83468
tp83469
I2
s(g13873
I42
g13874
Vinsert
p83470
I39
VPrimitiveType: int
p83471
tp83472
I1
s(g2647
I42
g2648
Vinsert
p83473
I43
VSimpleType: String
p83474
tp83475
I7
s(g6298
I42
g6299
Vinsert
p83476
I34
VNumberLiteral: 0
p83477
tp83478
I1
s(g1279
I42
g1280
Vinsert
p83479
I42
VSimpleName: rtnVal
p83480
tp83481
I1
s(g19461
I42
g19462
Vinsert
p83482
I42
VSimpleName: OdpsShowPartitionsStmt
p83483
tp83484
I1
s(g29604
I42
g29605
Vinsert
p83485
I42
VSimpleName: ygc
p83486
tp83487
I1
s(g25430
I42
g25431
Vinsert
p83488
I45
VStringLiteral: "LEADING"
p83489
tp83490
I1
s(g10702
I42
g10703
Vinsert
p83491
I42
VSimpleName: source
p83492
tp83493
I1
s(Vinsert
p83494
I42
VSimpleName: assertEquals
p83495
Vinsert
p83496
I42
VSimpleName: EvalMethodTest_mid
p83497
tp83498
I1
s(g11915
I42
g11916
Vinsert
p83499
I8
VBlock
p83500
tp83501
I2
s(g33387
I42
g33388
Vinsert
p83502
I42
VSimpleName: incrementIndent
p83503
tp83504
I2
s(g17106
I42
g17107
Vinsert
p83505
I8
VBlock
p83506
tp83507
I1
s(g2925
I42
g2926
Vinsert
p83508
I42
VSimpleName: ch
p83509
tp83510
I2
s(g10159
I42
g10160
Vinsert
p83511
I34
VNumberLiteral: 0
p83512
tp83513
I1
s(g6771
I42
g6772
Vinsert
p83514
I8
VBlock
p83515
tp83516
I1
s(g11910
I42
g11911
Vinsert
p83517
I42
VSimpleName: accept
p83518
tp83519
I1
s(g13789
I42
g13790
Vinsert
p83520
I42
VSimpleName: integerValue
p83521
tp83522
I1
s(g5772
I42
g5773
Vinsert
p83523
I42
VSimpleName: B
p83524
tp83525
I1
s(g15485
I42
g15486
Vinsert
p83526
I43
VSimpleType: SQLException
p83527
tp83528
I1
s(g28138
I42
g28139
Vinsert
p83529
I42
VSimpleName: tableSource
p83530
tp83531
I1
s(g12822
I42
g12823
Vinsert
p83532
I52
VThisExpression
p83533
tp83534
I2
s(g9873
I42
g9874
Vinsert
p83535
I42
VSimpleName: unwrap
p83536
tp83537
I1
s(g23899
I42
g23900
Vinsert
p83538
I7
VAssignment: =
p83539
tp83540
I1
s(g6359
I42
g6360
Vinsert
p83541
I33
VNullLiteral
p83542
tp83543
I2
s(g871
I42
g872
Vinsert
p83544
I42
VSimpleName: MySqlBlockStatement
p83545
tp83546
I2
s(g33452
I42
g33453
Vinsert
p83547
I32
VMethodInvocation
p83548
tp83549
I2
s(g7163
I42
g7164
Vinsert
p83550
I27
VInfixExpression: ==
p83551
tp83552
I1
s(g38173
I42
g38174
Vinsert
p83553
I42
VSimpleName: forName
p83554
tp83555
I2
s(g2228
I42
g2229
Vinsert
p83556
I42
VSimpleName: x
p83557
tp83558
I2
s(g5128
I42
g5129
Vinsert
p83559
I45
VStringLiteral: "| c_time       | time         | NO   |     | NULL    |       |\u005cn"
p83560
tp83561
I1
s(g7932
I42
g7933
Vinsert
p83562
I59
VVariableDeclarationFragment
p83563
tp83564
I6
s(g1933
I42
g1934
Vinsert
p83565
I83
VModifier: public
p83566
tp83567
I2
s(g56684
I42
g56685
Vinsert
p83568
I42
VSimpleName: append
p83569
tp83570
I2
s(g126
I42
g127
Vinsert
p83571
I27
VInfixExpression: ==
p83572
tp83573
I1
s(g17747
I42
g17748
Vinsert
p83574
I42
VSimpleName: errorHolder
p83575
tp83576
I1
s(g11566
I42
g11567
Vinsert
p83577
I41
VReturnStatement
p83578
tp83579
I1
s(g9286
I42
g9287
Vinsert
p83580
I42
VSimpleName: expr
p83581
tp83582
I1
s(g5719
I42
g5720
Vinsert
p83583
I43
VSimpleType: String
p83584
tp83585
I1
s(g10808
I42
g10809
Vinsert
p83586
I39
VPrimitiveType: int
p83587
tp83588
I4
s(g7073
I42
g7074
Vinsert
p83589
I42
VSimpleName: driver
p83590
tp83591
I1
s(g1130
I42
g1131
Vinsert
p83592
I45
VStringLiteral: "BUILD IMMEDIATE\u005cn"
p83593
tp83594
I2
s(g30418
I42
g30419
Vinsert
p83595
I78
VMarkerAnnotation
p83596
tp83597
I1
s(g59016
I42
g59017
Vinsert
p83598
I42
VSimpleName: Properties
p83599
tp83600
I1
s(g42748
I42
g42749
Vinsert
p83601
I42
VSimpleName: fk
p83602
tp83603
I1
s(g5156
I42
g5157
Vinsert
p83604
I32
VMethodInvocation
p83605
tp83606
I7
s(g19323
I42
g19324
Vinsert
p83607
I42
VSimpleName: connectionsPanel
p83608
tp83609
I2
s(g17106
I42
g17107
Vinsert
p83610
I42
VSimpleName: equals
p83611
tp83612
I1
s(g25207
I42
g25208
Vinsert
p83613
I40
VQualifiedName: JdbcConstants.MYSQL
p83614
tp83615
I2
s(g75472
I42
g75473
Vinsert
p83616
I42
VSimpleName: MySqlStatementParser
p83617
tp83618
I2
s(g4987
I42
g4988
Vinsert
p83619
I42
VSimpleName: comment
p83620
tp83621
I1
s(g6046
I42
g6047
Vinsert
p83622
I32
VMethodInvocation
p83623
tp83624
I3
s(g5470
I42
g5471
Vinsert
p83625
I8
VBlock
p83626
tp83627
I1
s(g1511
I42
g1512
Vinsert
p83628
I59
VVariableDeclarationFragment
p83629
tp83630
I5
s(Vinsert
p83631
I42
VSimpleName: println
p83632
Vinsert
p83633
I42
VSimpleName: statemen
p83634
tp83635
I56
s(g68348
I42
g68349
Vinsert
p83636
I42
VSimpleName: printContents
p83637
tp83638
I2
s(g19823
I42
g19824
Vinsert
p83639
I42
VSimpleName: testOnReturn
p83640
tp83641
I1
s(g57780
I42
g57781
Vinsert
p83642
I7
VAssignment: =
p83643
tp83644
I1
s(g10757
I42
g10758
Vinsert
p83645
I40
VQualifiedName: ConfigFilter.CONFIG_FILE
p83646
tp83647
I2
s(g11727
I42
g11728
Vinsert
p83648
I42
VSimpleName: getSessionStat
p83649
tp83650
I1
s(g6750
I42
g6751
Vinsert
p83651
I42
VSimpleName: paramMap
p83652
tp83653
I1
s(g82743
I42
g82744
Vinsert
p83654
I42
VSimpleName: setSqlSecurity
p83655
tp83656
I2
s(g28118
I42
g28119
Vinsert
p83657
I42
VSimpleName: originalTable
p83658
tp83659
I1
s(g6956
I42
g6957
Vinsert
p83660
I42
VSimpleName: columnExpr
p83661
tp83662
I1
s(Vinsert
p83663
I42
VSimpleName: output
p83664
Vinsert
p83665
I42
VSimpleName: select
p83666
tp83667
I2
s(g7158
I42
g7159
Vinsert
p83668
I42
VSimpleName: SQLException
p83669
tp83670
I1
s(g14876
I42
g14877
Vinsert
p83671
I43
VSimpleType: SQLSelectOrderByItem
p83672
tp83673
I1
s(g3811
I42
g3812
Vinsert
p83674
I42
VSimpleName: isEndOfCommit
p83675
tp83676
I1
s(g25152
I42
g25153
Vinsert
p83677
I43
VSimpleType: SQLException
p83678
tp83679
I1
s(g27649
I42
g27650
Vinsert
p83680
I45
VStringLiteral: "FROM (\u005cn"
p83681
tp83682
I1
s(g1420
I42
g1421
Vinsert
p83683
I32
VMethodInvocation
p83684
tp83685
I21
s(Vinsert
p83686
I42
VSimpleName: visit
p83687
Vinsert
p83688
I42
VSimpleName: threadId
p83689
tp83690
I4
s(g34347
I42
g34348
Vinsert
p83691
I40
VQualifiedName: SQLEvalVisitor.EVAL_ERROR
p83692
tp83693
I1
s(g13808
I42
g13809
Vinsert
p83694
I9
VBooleanLiteral: false
p83695
tp83696
I1
s(g3518
I42
g3519
Vinsert
p83697
I74
VParameterizedType: Map<String,String>
p83698
tp83699
I2
s(g16715
I42
g16716
Vinsert
p83700
I43
VSimpleType: OracleValidConnectionChecker
p83701
tp83702
I1
s(g37888
I42
g37889
Vinsert
p83703
I34
VNumberLiteral: 0
p83704
tp83705
I1
s(g31224
I42
g31225
Vinsert
p83706
I42
VSimpleName: query
p83707
tp83708
I1
s(g20369
I42
g20370
Vinsert
p83709
I45
VStringLiteral: "IGNORE "
p83710
tp83711
I1
s(g5648
I42
g5649
Vinsert
p83712
I22
VFieldAccess
p83713
tp83714
I1
s(g14026
I42
g14027
Vinsert
p83715
I39
VPrimitiveType: void
p83716
tp83717
I1
s(g1299
I42
g1300
Vinsert
p83718
I33
VNullLiteral
p83719
tp83720
I1
s(g11469
I42
g11470
Vinsert
p83721
I60
VVariableDeclarationStatement
p83722
tp83723
I1
s(g49683
I42
g49684
Vinsert
p83724
I42
VSimpleName: UNKNOWN_TRANSACTIONISOLATION
p83725
tp83726
I1
s(g10066
I42
g10067
Vinsert
p83727
I42
VSimpleName: SQLPropertyExpr
p83728
tp83729
I16
s(g34785
I42
g34786
Vinsert
p83730
I42
VSimpleName: SQLMethodInvokeExpr
p83731
tp83732
I1
s(g5515
I42
g5516
Vinsert
p83733
I1
VAnonymousClassDeclaration
p83734
tp83735
I1
s(g43273
I42
g43274
Vinsert
p83736
I42
VSimpleName: toString
p83737
tp83738
I2
s(g19736
I42
g19737
Vinsert
p83739
I42
VSimpleName: ex
p83740
tp83741
I1
s(g1110
I42
g1111
Vinsert
p83742
I45
VStringLiteral: "\u005ctAND sites.site_id IN (71242000)\u005cn"
p83743
tp83744
I1
s(g82005
I42
g82006
Vinsert
p83745
I42
VSimpleName: createSQLSelectParser
p83746
tp83747
I1
s(g1923
I42
g1924
Vinsert
p83748
I44
VSingleVariableDeclaration
p83749
tp83750
I2
s(g67891
I42
g67892
Vinsert
p83751
I42
VSimpleName: rs
p83752
tp83753
I4
s(g40269
I42
g40270
Vinsert
p83754
I42
VSimpleName: getCreatedTime
p83755
tp83756
I1
s(g26990
I42
g26991
Vinsert
p83757
I43
VSimpleType: PGASTVisitorAdapter
p83758
tp83759
I1
s(g6197
I42
g6198
Vinsert
p83760
I59
VVariableDeclarationFragment
p83761
tp83762
I32
s(Vinsert
p83763
I42
VSimpleName: append
p83764
Vinsert
p83765
I42
VSimpleName: days
p83766
tp83767
I2
s(g8475
I42
g8476
Vinsert
p83768
I42
VSimpleName: getFrom
p83769
tp83770
I1
s(g20035
I42
g20036
Vinsert
p83771
I42
VSimpleName: config
p83772
tp83773
I2
s(g8062
I42
g8063
Vinsert
p83774
I83
VModifier: public
p83775
tp83776
I1
s(g4515
I42
g4516
Vinsert
p83777
I45
VStringLiteral: "\u005cn\u005ctPRIMARY KEY (\u005c"ID\u005c") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE \u005c"USERS\u005c" ENABLE"
p83778
tp83779
I1
s(g16948
I42
g16949
Vinsert
p83780
I42
VSimpleName: isCaseSensitive
p83781
tp83782
I1
s(g6893
I42
g6894
Vinsert
p83783
I52
VThisExpression
p83784
tp83785
I1
s(g4829
I42
g4830
Vinsert
p83786
I42
VSimpleName: String
p83787
tp83788
I1
s(g10061
I42
g10062
Vinsert
p83789
I8
VBlock
p83790
tp83791
I2
s(g464
I42
g465
Vinsert
p83792
I42
VSimpleName: x
p83793
tp83794
I2
s(g46797
I42
g46798
Vinsert
p83795
I42
VSimpleName: stmtHolder
p83796
tp83797
I2
s(g33374
I42
g33375
Vinsert
p83798
I45
VStringLiteral: ")\u005cn"
p83799
tp83800
I14
s(g37280
I42
g37281
Vinsert
p83801
I44
VSingleVariableDeclaration
p83802
tp83803
I1
s(g4898
I42
g4899
Vinsert
p83804
I40
VQualifiedName: Token.NOCACHE
p83805
tp83806
I1
s(g21746
I42
g21747
Vinsert
p83807
I45
VStringLiteral: "deallocate prepare "
p83808
tp83809
I1
s(g5528
I42
g5529
Vinsert
p83810
I42
VSimpleName: WallContext
p83811
tp83812
I2
s(g17628
I42
g17629
Vinsert
p83813
I21
VExpressionStatement
p83814
tp83815
I3
s(g10493
I42
g10494
Vinsert
p83816
I42
VSimpleName: conn
p83817
tp83818
I2
s(g21198
I42
g21199
Vinsert
p83819
I42
VSimpleName: ParameterizedOutputVisitorUtils
p83820
tp83821
I2
s(g16091
I42
g16092
Vinsert
p83822
I42
VSimpleName: sql
p83823
tp83824
I1
s(g13538
I42
g13539
Vinsert
p83825
I42
VSimpleName: Assert
p83826
tp83827
I6
s(g7063
I42
g7064
Vinsert
p83828
I32
VMethodInvocation
p83829
tp83830
I2
s(g15648
I42
g15649
Vinsert
p83831
I42
VSimpleName: stmtList
p83832
tp83833
I1
s(g12346
I42
g12347
Vinsert
p83834
I8
VBlock
p83835
tp83836
I2
s(g60367
I42
g60368
Vinsert
p83837
I41
VReturnStatement
p83838
tp83839
I1
s(g27985
I42
g27986
Vinsert
p83840
I42
VSimpleName: JdbcUtils
p83841
tp83842
I2
s(g3144
I42
g3145
Vinsert
p83843
I8
VBlock
p83844
tp83845
I2
s(g17250
I42
g17251
Vinsert
p83846
I42
VSimpleName: sql
p83847
tp83848
I2
s(g14972
I42
g14973
Vinsert
p83849
I27
VInfixExpression: !=
p83850
tp83851
I1
s(g6971
I42
g6972
Vinsert
p83852
I34
VNumberLiteral: 10
p83853
tp83854
I2
s(g2354
I42
g2355
Vinsert
p83855
I45
VStringLiteral: "\u005ctEND LOOP;\u005cn"
p83856
tp83857
I1
s(g9569
I42
g9570
Vinsert
p83858
I32
VMethodInvocation
p83859
tp83860
I1
s(g24379
I42
g24380
Vinsert
p83861
I42
VSimpleName: definer
p83862
tp83863
I1
s(g46727
I42
g46728
Vinsert
p83864
I42
VSimpleName: statementList
p83865
tp83866
I4
s(g9678
I42
g9679
Vinsert
p83867
I42
VSimpleName: dataSource2
p83868
tp83869
I1
s(g15864
I42
g15865
Vinsert
p83870
I60
VVariableDeclarationStatement
p83871
tp83872
I2
s(g15367
I42
g15368
Vinsert
p83873
I27
VInfixExpression: !=
p83874
tp83875
I2
s(g12565
I42
g12566
Vinsert
p83876
I41
VReturnStatement
p83877
tp83878
I13
s(g1670
I42
g1671
Vinsert
p83879
I42
VSimpleName: getRight
p83880
tp83881
I3
s(g59342
I42
g59343
Vinsert
p83882
I40
VQualifiedName: other.value
p83883
tp83884
I2
s(g15010
I42
g15011
Vinsert
p83885
I9
VBooleanLiteral: false
p83886
tp83887
I1
s(g5485
I42
g5486
Vinsert
p83888
I42
VSimpleName: tablespace
p83889
tp83890
I1
s(g16767
I42
g16768
Vinsert
p83891
I42
VSimpleName: exprObj
p83892
tp83893
I1
s(g11973
I42
g11974
Vinsert
p83894
I45
VStringLiteral: " AND ((`Extent1`.`Zone`) = (CASE WHEN (1 IS  NULL) THEN (1)  ELSE (1) END))"
p83895
tp83896
I1
s(g11973
I42
g11974
Vinsert
p83897
I45
VStringLiteral: " `Extent1`.`BankAccountName`, "
p83898
tp83899
I1
s(g28840
I42
g28841
Vinsert
p83900
I43
VSimpleType: Object
p83901
tp83902
I1
s(g10784
I42
g10785
Vinsert
p83903
I27
VInfixExpression: !=
p83904
tp83905
I1
s(g18627
I42
g18628
Vinsert
p83906
I45
VStringLiteral: "\u005cnrename to partition(sale_date='201313', region='hangzhou');"
p83907
tp83908
I1
s(g4755
I42
g4756
Vinsert
p83909
I27
VInfixExpression: ==
p83910
tp83911
I1
s(g8833
I42
g8834
Vinsert
p83912
I21
VExpressionStatement
p83913
tp83914
I12
s(g6079
I42
g6080
Vinsert
p83915
I45
VStringLiteral: "\u005cn\u005ct\u005ctFROM acduser.vw_kreis_code"
p83916
tp83917
I1
s(g9028
I42
g9029
Vinsert
p83918
I33
VNullLiteral
p83919
tp83920
I1
s(g6202
I42
g6203
Vinsert
p83921
I27
VInfixExpression: >
p83922
tp83923
I1
s(g1996
I42
g1997
Vinsert
p83924
I45
VStringLiteral: "values "
p83925
tp83926
I1
s(g13201
I42
g13202
Vinsert
p83927
I7
VAssignment: =
p83928
tp83929
I1
s(g7991
I42
g7992
Vinsert
p83930
I14
VClassInstanceCreation
p83931
tp83932
I2
s(g34980
I42
g34981
Vinsert
p83933
I42
VSimpleName: value2
p83934
tp83935
I1
s(g62669
I42
g62670
Vinsert
p83936
I13
VCharacterLiteral: '"'
p83937
tp83938
I1
s(g464
I42
g465
Vinsert
p83939
I8
VBlock
p83940
tp83941
I1
s(g20801
I42
g20802
Vinsert
p83942
I43
VSimpleType: String
p83943
tp83944
I1
s(g1390
I42
g1391
Vinsert
p83945
I25
VIfStatement
p83946
tp83947
I2
s(g8648
I42
g8649
Vinsert
p83948
I42
VSimpleName: getMajorVersion
p83949
tp83950
I1
s(g16380
I42
g16381
Vinsert
p83951
I45
VStringLiteral: "unknown"
p83952
tp83953
I1
s(g2780
I42
g2781
Vinsert
p83954
I42
VSimpleName: SQLSelect
p83955
tp83956
I1
s(g6791
I42
g6792
Vinsert
p83957
I42
VSimpleName: close
p83958
tp83959
I2
s(g13483
I42
g13484
Vinsert
p83960
I42
VSimpleName: item
p83961
tp83962
I2
s(g26385
I42
g26386
Vinsert
p83963
I42
VSimpleName: MySqlSchemaStatVisitor
p83964
tp83965
I1
s(g10190
I42
g10191
Vinsert
p83966
I42
VSimpleName: dataSource
p83967
tp83968
I1
s(g40994
I42
g40995
Vinsert
p83969
I38
VPrefixExpression: ++
p83970
tp83971
I2
s(g4298
I42
g4299
Vinsert
p83972
I42
VSimpleName: print
p83973
tp83974
I1
s(g5839
I42
g5840
Vinsert
p83975
I45
VStringLiteral: "druid.useGloalDataSourceStat"
p83976
tp83977
I1
s(g2662
I42
g2663
Vinsert
p83978
I42
VSimpleName: acceptIdentifier
p83979
tp83980
I1
s(g68348
I42
g68349
Vinsert
p83981
I85
VDimension
p83982
tp83983
I2
s(g9634
I42
g9635
Vinsert
p83984
I42
VSimpleName: left
p83985
tp83986
I1
s(g55462
I42
g55463
Vinsert
p83987
I42
VSimpleName: PGShowStatement
p83988
tp83989
I1
s(g2173
I42
g2174
Vinsert
p83990
I34
VNumberLiteral: 0
p83991
tp83992
I1
s(g23113
I42
g23114
Vinsert
p83993
I8
VBlock
p83994
tp83995
I1
s(g37785
I42
g37786
Vinsert
p83996
I45
VStringLiteral: "MERGE INTO person KEY (id)\u005cn"
p83997
tp83998
I1
s(g18852
I42
g18853
Vinsert
p83999
I42
VSimpleName: SQLException
p84000
tp84001
I2
s(g18091
I42
g18092
Vinsert
p84002
I42
VSimpleName: getRelationships
p84003
tp84004
I2
s(g26252
I42
g26253
Vinsert
p84005
I45
VStringLiteral: "CONTINUE"
p84006
tp84007
I5
s(g8583
I42
g8584
Vinsert
p84008
I83
VModifier: public
p84009
tp84010
I1
s(g9982
I42
g9983
Vinsert
p84011
I45
VStringLiteral: "\u005ctEXECUTE IMMEDIATE sql_stmt USING emp_id RETURNNING INTO salary;\u005cn"
p84012
tp84013
I1
s(g30113
I42
g30114
Vinsert
p84014
I42
VSimpleName: identifierEquals
p84015
tp84016
I1
s(g6503
I42
g6504
Vinsert
p84017
I10
VBreakStatement
p84018
tp84019
I2
s(g2383
I42
g2384
Vinsert
p84020
I14
VClassInstanceCreation
p84021
tp84022
I1
s(g64098
I42
g64099
Vinsert
p84023
I42
VSimpleName: SQLServerASTVisitor
p84024
tp84025
I1
s(g4404
I42
g4405
Vinsert
p84026
I43
VSimpleType: SQLLimit
p84027
tp84028
I1
s(g20486
I42
g20487
Vinsert
p84029
I42
VSimpleName: dataSourceStatList
p84030
tp84031
I1
s(g16145
I42
g16146
Vinsert
p84032
I8
VBlock
p84033
tp84034
I13
s(g5012
I42
g5013
Vinsert
p84035
I42
VSimpleName: nextToken
p84036
tp84037
I1
s(g5787
I42
g5788
Vinsert
p84038
I45
VStringLiteral: "true"
p84039
tp84040
I1
s(g20564
I42
g20565
Vinsert
p84041
I42
VSimpleName: Entity
p84042
tp84043
I1
s(g30670
I42
g30671
Vinsert
p84044
I40
VQualifiedName: Token.KEEP
p84045
tp84046
I1
s(g53640
I42
g53641
Vinsert
p84047
I42
VSimpleName: MySqlLexer
p84048
tp84049
I1
s(g19307
I42
g19308
Vinsert
p84050
I42
VSimpleName: isIgnoreDeleteTriggers
p84051
tp84052
I1
s(g10996
I42
g10997
Vinsert
p84053
I42
VSimpleName: setMaxLimit
p84054
tp84055
I2
s(g22616
I42
g22617
Vinsert
p84056
I42
VSimpleName: getStatements
p84057
tp84058
I1
s(g10454
I42
g10455
Vinsert
p84059
I7
VAssignment: =
p84060
tp84061
I3
s(g12133
I42
g12134
Vinsert
p84062
I42
VSimpleName: add
p84063
tp84064
I1
s(Vinsert
p84065
I42
VSimpleName: getConnection
p84066
Vinsert
p84067
I34
VNumberLiteral: 3
p84068
tp84069
I2
s(g38956
I42
g38957
Vinsert
p84070
I42
VSimpleName: equals
p84071
tp84072
I1
s(g1506
I42
g1507
Vinsert
p84073
I42
VSimpleName: SQLExistsExpr
p84074
tp84075
I1
s(Vinsert
p84076
I42
VSimpleName: visit
p84077
Vinsert
p84078
I42
VSimpleName: count
p84079
tp84080
I1
s(g33452
I42
g33453
Vinsert
p84081
I42
VSimpleName: isTop
p84082
tp84083
I3
s(g20529
I42
g20530
Vinsert
p84084
I25
VIfStatement
p84085
tp84086
I1
s(Vinsert
p84087
I42
VSimpleName: assertFalse
p84088
Vinsert
p84089
I42
VSimpleName: MySqlWallTest4
p84090
tp84091
I1
s(g11286
I42
g11287
Vinsert
p84092
I78
VMarkerAnnotation
p84093
tp84094
I3
s(g28534
I42
g28535
Vinsert
p84095
I42
VSimpleName: orderBy
p84096
tp84097
I1
s(g45457
I42
g45458
Vinsert
p84098
I45
VStringLiteral: "\u005ct\u005ct\u005ctINITIAL 1048576\u005cn"
p84099
tp84100
I2
s(g13957
I42
g13958
Vinsert
p84101
I42
VSimpleName: String
p84102
tp84103
I5
s(g10829
I42
g10830
Vinsert
p84104
I42
VSimpleName: tokens
p84105
tp84106
I1
s(g15848
I42
g15849
Vinsert
p84107
I45
VStringLiteral: "\u005ctSELECT *\u005cn"
p84108
tp84109
I1
s(g11537
I42
g11538
Vinsert
p84110
I42
VSimpleName: getExpr
p84111
tp84112
I1
s(g7746
I42
g7747
Vinsert
p84113
I42
VSimpleName: privilege
p84114
tp84115
I2
s(g9195
I42
g9196
Vinsert
p84116
I40
VQualifiedName: JdbcConstants.ORACLE
p84117
tp84118
I1
s(g2982
I42
g2983
Vinsert
p84119
I25
VIfStatement
p84120
tp84121
I1
s(g17291
I42
g17292
Vinsert
p84122
I52
VThisExpression
p84123
tp84124
I4
s(g20769
I42
g20770
Vinsert
p84125
I74
VParameterizedType: Map<String,Object>
p84126
tp84127
I3
s(g71967
I42
g71968
Vinsert
p84128
I42
VSimpleName: CompositeData
p84129
tp84130
I1
s(g23476
I42
g23477
Vinsert
p84131
I45
VStringLiteral: "WHERE obj# = '633'"
p84132
tp84133
I1
s(g11910
I42
g11911
Vinsert
p84134
I42
VSimpleName: ucase
p84135
tp84136
I1
s(g6495
I42
g6496
Vinsert
p84137
I42
VSimpleName: parameterIndex
p84138
tp84139
I1
s(g32799
I42
g32800
Vinsert
p84140
I42
VSimpleName: connectionCloseCount
p84141
tp84142
I2
s(g45731
I42
g45732
Vinsert
p84143
I40
VQualifiedName: Token.EXCEPTIONS
p84144
tp84145
I1
s(g42013
I42
g42014
Vinsert
p84146
I60
VVariableDeclarationStatement
p84147
tp84148
I1
s(g32617
I42
g32618
Vinsert
p84149
I42
VSimpleName: newInstance
p84150
tp84151
I1
s(g16888
I42
g16889
Vinsert
p84152
I39
VPrimitiveType: int
p84153
tp84154
I1
s(g1898
I42
g1899
Vinsert
p84155
I49
VSwitchCase
p84156
tp84157
I1
s(g14972
I42
g14973
Vinsert
p84158
I45
VStringLiteral: "--"
p84159
tp84160
I1
s(g27331
I42
g27332
Vinsert
p84161
I42
VSimpleName: StringUtils
p84162
tp84163
I2
s(g1660
I42
g1661
Vinsert
p84164
I42
VSimpleName: Object
p84165
tp84166
I1
s(g5012
I42
g5013
Vinsert
p84167
I42
VSimpleName: expr
p84168
tp84169
I2
s(g36992
I42
g36993
Vinsert
p84170
I42
VSimpleName: println
p84171
tp84172
I1
s(g12849
I42
g12850
Vinsert
p84173
I62
VInstanceofExpression
p84174
tp84175
I1
s(g11925
I42
g11926
Vinsert
p84176
I42
VSimpleName: logger
p84177
tp84178
I3
s(g22556
I42
g22557
Vinsert
p84179
I42
VSimpleName: entryKey
p84180
tp84181
I2
s(g18192
I42
g18193
Vinsert
p84182
I42
VSimpleName: checkOpen
p84183
tp84184
I1
s(g5964
I42
g5965
Vinsert
p84185
I42
VSimpleName: objectName
p84186
tp84187
I1
s(g34785
I42
g34786
Vinsert
p84188
I42
VSimpleName: current_timestamp
p84189
tp84190
I2
s(g5959
I42
g5960
Vinsert
p84191
I42
VSimpleName: println
p84192
tp84193
I1
s(g7612
I42
g7613
Vinsert
p84194
I8
VBlock
p84195
tp84196
I1
s(g22126
I42
g22127
Vinsert
p84197
I44
VSingleVariableDeclaration
p84198
tp84199
I1
s(g1589
I42
g1590
Vinsert
p84200
I8
VBlock
p84201
tp84202
I2
s(g25014
I42
g25015
Vinsert
p84203
I45
VStringLiteral: "true"
p84204
tp84205
I1
s(g3480
I42
g3481
Vinsert
p84206
I52
VThisExpression
p84207
tp84208
I2
s(g37744
I42
g37745
Vinsert
p84209
I32
VMethodInvocation
p84210
tp84211
I2
s(g16653
I42
g16654
Vinsert
p84212
I45
VStringLiteral: "MODE"
p84213
tp84214
I1
s(g1
I42
g2
Vinsert
p84215
I22
VFieldAccess
p84216
tp84217
I1
s(g6901
I42
g6902
Vinsert
p84218
I44
VSingleVariableDeclaration
p84219
tp84220
I3
s(g13437
I42
g13438
Vinsert
p84221
I45
VStringLiteral: "WHERE supReg.status IN (2, 3, 4)\u005cn"
p84222
tp84223
I1
s(g22115
I42
g22116
Vinsert
p84224
I42
VSimpleName: setRemoveAbandoned
p84225
tp84226
I1
s(g9539
I42
g9540
Vinsert
p84227
I42
VSimpleName: resolvedTableSource
p84228
tp84229
I4
s(g10262
I42
g10263
Vinsert
p84230
I42
VSimpleName: createTable
p84231
tp84232
I1
s(g34000
I42
g34001
Vinsert
p84233
I43
VSimpleType: SQLVariantRefExpr
p84234
tp84235
I1
s(g35631
I42
g35632
Vinsert
p84236
I42
VSimpleName: IllegalAccessException
p84237
tp84238
I2
s(g53804
I42
g53805
Vinsert
p84239
I42
VSimpleName: acceptIdentifier
p84240
tp84241
I1
s(g10257
I42
g10258
Vinsert
p84242
I60
VVariableDeclarationStatement
p84243
tp84244
I18
s(g13957
I42
g13958
Vinsert
p84245
I42
VSimpleName: sort
p84246
tp84247
I1
s(g20084
I42
g20085
Vinsert
p84248
I52
VThisExpression
p84249
tp84250
I1
s(g21593
I42
g21594
Vinsert
p84251
I42
VSimpleName: tmp
p84252
tp84253
I1
s(g13740
I42
g13741
Vinsert
p84254
I45
VStringLiteral: "sqlite"
p84255
tp84256
I1
s(g37470
I42
g37471
Vinsert
p84257
I42
VSimpleName: ArrayList
p84258
tp84259
I1
s(g22163
I42
g22164
Vinsert
p84260
I43
VSimpleType: MergeStatFilter
p84261
tp84262
I1
s(g9959
I42
g9960
Vinsert
p84263
I8
VBlock
p84264
tp84265
I4
s(g3243
I42
g3244
Vinsert
p84266
I42
VSimpleName: usernameParam
p84267
tp84268
I1
s(g17951
I42
g17952
Vinsert
p84269
I42
VSimpleName: PGArrayExpr
p84270
tp84271
I2
s(g5328
I42
g5329
Vinsert
p84272
I42
VSimpleName: setConnectedTimeNano
p84273
tp84274
I1
s(g10087
I42
g10088
Vinsert
p84275
I42
VSimpleName: lock
p84276
tp84277
I2
s(g42953
I42
g42954
Vinsert
p84278
I42
VSimpleName: value
p84279
tp84280
I1
s(g28698
I42
g28699
Vinsert
p84281
I42
VSimpleName: clone
p84282
tp84283
I1
s(g12427
I42
g12428
Vinsert
p84284
I43
VSimpleType: SQLServerTop
p84285
tp84286
I1
s(Vinsert
p84287
I42
VSimpleName: parseStatements
p84288
Vinsert
p84289
I45
VStringLiteral: "update t set a=1,b=2 where a > 1"
p84290
tp84291
I1
s(g5987
I42
g5988
Vinsert
p84292
I42
VSimpleName: stmt
p84293
tp84294
I2
s(g12077
I42
g12078
Vinsert
p84295
I52
VThisExpression
p84296
tp84297
I1
s(g6786
I42
g6787
Vinsert
p84298
I42
VSimpleName: print
p84299
tp84300
I1
s(g695
I42
g696
Vinsert
p84301
I43
VSimpleType: String
p84302
tp84303
I3
s(g6455
I42
g6456
Vinsert
p84304
I42
VSimpleName: statValue
p84305
tp84306
I1
s(g11654
I42
g11655
Vinsert
p84307
I42
VSimpleName: print0
p84308
tp84309
I1
s(g4819
I42
g4820
Vinsert
p84310
I45
VStringLiteral: "\u005cn\u005ct\u005ctOR d.indkey[2] = a.attnum"
p84311
tp84312
I1
s(g6529
I42
g6530
Vinsert
p84313
I83
VModifier: public
p84314
tp84315
I1
s(g4080
I42
g4081
Vinsert
p84316
I42
VSimpleName: Bytes
p84317
tp84318
I2
s(g27620
I42
g27621
Vinsert
p84319
I42
VSimpleName: sql_2
p84320
tp84321
I1
s(g40052
I42
g40053
Vinsert
p84322
I60
VVariableDeclarationStatement
p84323
tp84324
I1
s(g12082
I42
g12083
Vinsert
p84325
I42
VSimpleName: markChar
p84326
tp84327
I1
s(g4160
I42
g4161
Vinsert
p84328
I8
VBlock
p84329
tp84330
I2
s(g3801
I42
g3802
Vinsert
p84331
I42
VSimpleName: PGLexer
p84332
tp84333
I2
s(Vinsert
p84334
I42
VSimpleName: println
p84335
Vinsert
p84336
I45
VStringLiteral: "test"
p84337
tp84338
I1
s(g15429
I42
g15430
Vinsert
p84339
I45
VStringLiteral: "department_id"
p84340
tp84341
I1
s(g5287
I42
g5288
Vinsert
p84342
I42
VSimpleName: database
p84343
tp84344
I4
s(g361
I42
g362
Vinsert
p84345
I45
VStringLiteral: " `ip` varchar(40) NOT NULL,"
p84346
tp84347
I1
s(g7965
I42
g7966
Vinsert
p84348
I60
VVariableDeclarationStatement
p84349
tp84350
I1
s(g18672
I42
g18673
Vinsert
p84351
I11
VCastExpression
p84352
tp84353
I1
s(g6630
I42
g6631
Vinsert
p84354
I43
VSimpleType: OracleSelectTableReference
p84355
tp84356
I1
s(g27954
I42
g27955
Vinsert
p84357
I45
VStringLiteral: "java"
p84358
tp84359
I1
s(g6630
I42
g6631
Vinsert
p84360
I7
VAssignment: =
p84361
tp84362
I2
s(g597
I42
g598
Vinsert
p84363
I42
VSimpleName: Override
p84364
tp84365
I1
s(g66078
I42
g66079
Vinsert
p84366
I42
VSimpleName: addArgument
p84367
tp84368
I2
s(g20933
I42
g20934
Vinsert
p84369
I78
VMarkerAnnotation
p84370
tp84371
I1
s(g1218
I42
g1219
Vinsert
p84372
I41
VReturnStatement
p84373
tp84374
I3
s(g33267
I42
g33268
Vinsert
p84375
I45
VStringLiteral: "FROM t\u005cn"
p84376
tp84377
I2
s(g16868
I42
g16869
Vinsert
p84378
I42
VSimpleName: getConnection
p84379
tp84380
I9
s(g76485
I42
g76486
Vinsert
p84381
I42
VSimpleName: endsWith
p84382
tp84383
I1
s(g1425
I42
g1426
Vinsert
p84384
I39
VPrimitiveType: void
p84385
tp84386
I1
s(g24923
I42
g24924
Vinsert
p84387
I27
VInfixExpression: ||
p84388
tp84389
I2
s(g2662
I42
g2663
Vinsert
p84390
I45
VStringLiteral: "TRIGGERS"
p84391
tp84392
I1
s(g5133
I42
g5134
Vinsert
p84393
I42
VSimpleName: context
p84394
tp84395
I1
s(g2388
I42
g2389
Vinsert
p84396
I9
VBooleanLiteral: false
p84397
tp84398
I2
s(g25616
I42
g25617
Vinsert
p84399
I45
VStringLiteral: "\u005ct, JOIN, OVER, CONTRACT_TERM, CONTRACT_CASH, EXEC_CASH\u005cn"
p84400
tp84401
I1
s(g11516
I42
g11517
Vinsert
p84402
I42
VSimpleName: sql
p84403
tp84404
I5
s(g12817
I42
g12818
Vinsert
p84405
I42
VSimpleName: MySqlBooleanExpr
p84406
tp84407
I1
s(g27315
I42
g27316
Vinsert
p84408
I22
VFieldAccess
p84409
tp84410
I1
s(g26868
I42
g26869
Vinsert
p84411
I42
VSimpleName: Override
p84412
tp84413
I2
s(g3035
I42
g3036
Vinsert
p84414
I42
VSimpleName: wrappedSource
p84415
tp84416
I1
s(Vinsert
p84417
I42
VSimpleName: accept
p84418
Vinsert
p84419
I42
VSimpleName: getParameters
p84420
tp84421
I5
s(g18531
I42
g18532
Vinsert
p84422
I45
VStringLiteral: "@@session"
p84423
tp84424
I2
s(g31934
I42
g31935
Vinsert
p84425
I43
VSimpleType: Integer
p84426
tp84427
I4
s(g16112
I42
g16113
Vinsert
p84428
I42
VSimpleName: Thread
p84429
tp84430
I1
s(g7163
I42
g7164
Vinsert
p84431
I42
VSimpleName: setWithTimeZone
p84432
tp84433
I1
s(g2538
I42
g2539
Vinsert
p84434
I42
VSimpleName: SQLException
p84435
tp84436
I1
s(g9420
I42
g9421
Vinsert
p84437
I42
VSimpleName: SQLIdentifierExpr
p84438
tp84439
I1
s(g17507
I42
g17508
Vinsert
p84440
I42
VSimpleName: print
p84441
tp84442
I1
s(g43542
I42
g43543
Vinsert
p84443
I42
VSimpleName: setOffset
p84444
tp84445
I2
s(g48815
I42
g48816
Vinsert
p84446
I45
VStringLiteral: "\u005cn(8002, 'Juan', 'Fernandez', 'juanf@example.com', NULL"
p84447
tp84448
I2
s(g27350
I42
g27351
Vinsert
p84449
I40
VQualifiedName: JdbcConstants.MYSQL
p84450
tp84451
I7
s(g3992
I42
g3993
Vinsert
p84452
I43
VSimpleType: SQLUseStatement
p84453
tp84454
I1
s(g7542
I42
g7543
Vinsert
p84455
I39
VPrimitiveType: void
p84456
tp84457
I1
s(g10682
I42
g10683
Vinsert
p84458
I25
VIfStatement
p84459
tp84460
I6
s(g14426
I42
g14427
Vinsert
p84461
I43
VSimpleType: Exception
p84462
tp84463
I1
s(g27757
I42
g27758
Vinsert
p84464
I60
VVariableDeclarationStatement
p84465
tp84466
I1
s(g23603
I42
g23604
Vinsert
p84467
I41
VReturnStatement
p84468
tp84469
I6
s(g13079
I42
g13080
Vinsert
p84470
I42
VSimpleName: table
p84471
tp84472
I1
s(g49649
I42
g49650
Vinsert
p84473
I42
VSimpleName: aliasLocal
p84474
tp84475
I1
s(g25961
I42
g25962
Vinsert
p84476
I60
VVariableDeclarationStatement
p84477
tp84478
I4
s(g14497
I42
g14498
Vinsert
p84479
I42
VSimpleName: cachedPreparedStatementMissCount
p84480
tp84481
I1
s(g22937
I42
g22938
Vinsert
p84482
I45
VStringLiteral: "  UNIQUE KEY `uk_a` (`c_varchar`,`c_mediumint`),\u005cn"
p84483
tp84484
I1
s(g9939
I42
g9940
Vinsert
p84485
I27
VInfixExpression: <
p84486
tp84487
I1
s(g29398
I42
g29399
Vinsert
p84488
I40
VQualifiedName: Token.BY
p84489
tp84490
I1
s(g1461
I42
g1462
Vinsert
p84491
I45
VStringLiteral: "mysql"
p84492
tp84493
I1
s(g8022
I42
g8023
Vinsert
p84494
I42
VSimpleName: item
p84495
tp84496
I2
s(g26826
I42
g26827
Vinsert
p84497
I45
VStringLiteral: "LOCATE"
p84498
tp84499
I1
s(g4780
I42
g4781
Vinsert
p84500
I42
VSimpleName: clazz
p84501
tp84502
I1
s(g18078
I42
g18079
Vinsert
p84503
I45
VStringLiteral: "\u005ctVALUES (:NEW.com_code, :NEW.CODE, :NEW.NAME, :NEW.status, :NEW.sjcode\u005cn"
p84504
tp84505
I1
s(g20564
I42
g20565
Vinsert
p84506
I43
VSimpleType: Entity
p84507
tp84508
I1
s(g1241
I42
g1242
Vinsert
p84509
I40
VQualifiedName: java.util.Set
p84510
tp84511
I1
s(g6074
I42
g6075
Vinsert
p84512
I40
VQualifiedName: Token.IDENTIFIER
p84513
tp84514
I1
s(g11790
I42
g11791
Vinsert
p84515
I27
VInfixExpression: ==
p84516
tp84517
I1
s(g12711
I42
g12712
Vinsert
p84518
I42
VSimpleName: JdbcSqlStat
p84519
tp84520
I1
s(g25298
I42
g25299
Vinsert
p84521
I42
VSimpleName: index
p84522
tp84523
I2
s(g4258
I42
g4259
Vinsert
p84524
I21
VExpressionStatement
p84525
tp84526
I1
s(g86
I42
g87
Vinsert
p84527
I83
VModifier: public
p84528
tp84529
I1
s(g11983
I42
g11984
Vinsert
p84530
I42
VSimpleName: parseStatement
p84531
tp84532
I2
s(g10626
I42
g10627
Vinsert
p84533
I57
VTypeLiteral
p84534
tp84535
I1
s(g12888
I42
g12889
Vinsert
p84536
I42
VSimpleName: get
p84537
tp84538
I10
s(g32001
I42
g32002
Vinsert
p84539
I45
VStringLiteral: "SELECT name, '******' password, createTime from user "
p84540
tp84541
I1
s(g10558
I42
g10559
Vinsert
p84542
I42
VSimpleName: length
p84543
tp84544
I7
s(g48698
I42
g48699
Vinsert
p84545
I42
VSimpleName: bI
p84546
tp84547
I2
s(g11325
I42
g11326
Vinsert
p84548
I42
VSimpleName: sql
p84549
tp84550
I1
s(g2905
I42
g2906
Vinsert
p84551
I8
VBlock
p84552
tp84553
I2
s(g2135
I42
g2136
Vinsert
p84554
I42
VSimpleName: index
p84555
tp84556
I2
s(g17311
I42
g17312
Vinsert
p84557
I42
VSimpleName: setJdbcUrl
p84558
tp84559
I1
s(g44390
I42
g44391
Vinsert
p84560
I43
VSimpleType: OracleSelectQueryBlock
p84561
tp84562
I4
s(g45377
I42
g45378
Vinsert
p84563
I42
VSimpleName: WallVisitorUtils
p84564
tp84565
I1
s(g14917
I42
g14918
Vinsert
p84566
I45
VStringLiteral: "\u005ct\u005ctWHERE type IN (?)\u005cn"
p84567
tp84568
I1
s(g4661
I42
g4662
Vinsert
p84569
I31
VMethodDeclaration
p84570
tp84571
I1
s(g23739
I42
g23740
Vinsert
p84572
I7
VAssignment: =
p84573
tp84574
I2
s(g58784
I42
g58785
Vinsert
p84575
I42
VSimpleName: SQLLimit
p84576
tp84577
I1
s(g6018
I42
g6019
Vinsert
p84578
I45
VStringLiteral: "start with MgrId is null\u005cn"
p84579
tp84580
I1
s(Vinsert
p84581
I42
VSimpleName: add
p84582
Vinsert
p84583
I42
VSimpleName: on
p84584
tp84585
I1
s(g7068
I42
g7069
Vinsert
p84586
I43
VSimpleType: SQLIdentifierExpr
p84587
tp84588
I2
s(g35672
I42
g35673
Vinsert
p84589
I42
VSimpleName: addDeleteDataCount
p84590
tp84591
I1
s(g4121
I42
g4122
Vinsert
p84592
I45
VStringLiteral: "\u005ctDBMS_OUTPUT.PUT_LINE('bonus = ' || bonus);\u005cn"
p84593
tp84594
I1
s(g4283
I42
g4284
Vinsert
p84595
I22
VFieldAccess
p84596
tp84597
I1
s(g16447
I42
g16448
Vinsert
p84598
I25
VIfStatement
p84599
tp84600
I1
s(g5058
I42
g5059
Vinsert
p84601
I42
VSimpleName: getConnectionCount_Alive_12_24_Hours
p84602
tp84603
I1
s(Vinsert
p84604
I42
VSimpleName: loadFromFile
p84605
Vinsert
p84606
I42
VSimpleName: tables
p84607
tp84608
I2
s(g24273
I42
g24274
Vinsert
p84609
I42
VSimpleName: visitor
p84610
tp84611
I1
s(g24211
I42
g24212
Vinsert
p84612
I42
VSimpleName: print
p84613
tp84614
I1
s(g2624
I42
g2625
Vinsert
p84615
I39
VPrimitiveType: void
p84616
tp84617
I1
s(g30229
I42
g30230
Vinsert
p84618
I39
VPrimitiveType: boolean
p84619
tp84620
I1
s(g24954
I42
g24955
Vinsert
p84621
I42
VSimpleName: queryBlock
p84622
tp84623
I2
s(g27708
I42
g27709
Vinsert
p84624
I39
VPrimitiveType: void
p84625
tp84626
I2
s(g16556
I42
g16557
Vinsert
p84627
I42
VSimpleName: Class
p84628
tp84629
I1
s(g2770
I42
g2771
Vinsert
p84630
I42
VSimpleName: exprList
p84631
tp84632
I1
s(g14917
I42
g14918
Vinsert
p84633
I45
VStringLiteral: "\u005ctOR b.cp_code IS NULL"
p84634
tp84635
I1
s(g11453
I42
g11454
Vinsert
p84636
I42
VSimpleName: tableStat
p84637
tp84638
I12
s(g24579
I42
g24580
Vinsert
p84639
I42
VSimpleName: incrementAlterCount
p84640
tp84641
I1
s(g27423
I42
g27424
Vinsert
p84642
I40
VQualifiedName: JdbcConstants.ORACLE
p84643
tp84644
I1
s(g2857
I42
g2858
Vinsert
p84645
I32
VMethodInvocation
p84646
tp84647
I5
s(g14891
I42
g14892
Vinsert
p84648
I42
VSimpleName: String
p84649
tp84650
I2
s(g1953
I42
g1954
Vinsert
p84651
I48
VSuperMethodInvocation
p84652
tp84653
I1
s(g18836
I42
g18837
Vinsert
p84654
I42
VSimpleName: filter
p84655
tp84656
I2
s(g10174
I42
g10175
Vinsert
p84657
I42
VSimpleName: config
p84658
tp84659
I2
s(g2910
I42
g2911
Vinsert
p84660
I78
VMarkerAnnotation
p84661
tp84662
I7
s(g40231
I42
g40232
Vinsert
p84663
I42
VSimpleName: Assert
p84664
tp84665
I6
s(g12082
I42
g12083
Vinsert
p84666
I59
VVariableDeclarationFragment
p84667
tp84668
I1
s(g10454
I42
g10455
Vinsert
p84669
I42
VSimpleName: String
p84670
tp84671
I1
s(g2609
I42
g2610
Vinsert
p84672
I42
VSimpleName: Exception
p84673
tp84674
I1
s(g14886
I42
g14887
Vinsert
p84675
I45
VStringLiteral: "EXCEPTION\u005cn"
p84676
tp84677
I1
s(g13079
I42
g13080
Vinsert
p84678
I25
VIfStatement
p84679
tp84680
I15
s(g16145
I42
g16146
Vinsert
p84681
I42
VSimpleName: executeErrorLast
p84682
tp84683
I2
s(g3027
I42
g3028
Vinsert
p84684
I60
VVariableDeclarationStatement
p84685
tp84686
I1
s(g146
I42
g147
Vinsert
p84687
I42
VSimpleName: offsetQueryBlock
p84688
tp84689
I1
s(Vinsert
p84690
I42
VSimpleName: endVisit
p84691
Vinsert
p84692
I42
VSimpleName: subQuery
p84693
tp84694
I1
s(g2444
I42
g2445
Vinsert
p84695
I45
VStringLiteral: "VERSIONS"
p84696
tp84697
I1
s(g2961
I42
g2962
Vinsert
p84698
I42
VSimpleName: test_getCursorName
p84699
tp84700
I1
s(g2372
I42
g2373
Vinsert
p84701
I59
VVariableDeclarationFragment
p84702
tp84703
I1
s(g25721
I42
g25722
Vinsert
p84704
I42
VSimpleName: handleSleep
p84705
tp84706
I2
s(g1948
I42
g1949
Vinsert
p84707
I36
VParenthesizedExpression
p84708
tp84709
I1
s(g3370
I42
g3371
Vinsert
p84710
I33
VNullLiteral
p84711
tp84712
I58
s(g47049
I42
g47050
Vinsert
p84713
I43
VSimpleType: WallUpdateCheckItem
p84714
tp84715
I5
s(g30636
I42
g30637
Vinsert
p84716
I42
VSimpleName: isWrapperFor
p84717
tp84718
I1
s(g8499
I42
g8500
Vinsert
p84719
I44
VSingleVariableDeclaration
p84720
tp84721
I1
s(g7356
I42
g7357
Vinsert
p84722
I42
VSimpleName: transactionThresholdMillis
p84723
tp84724
I1
s(g10310
I42
g10311
Vinsert
p84725
I42
VSimpleName: methodInvoke
p84726
tp84727
I1
s(g37744
I42
g37745
Vinsert
p84728
I43
VSimpleType: MySqlSQLColumnDefinition
p84729
tp84730
I2
s(g21356
I42
g21357
Vinsert
p84731
I7
VAssignment: =
p84732
tp84733
I1
s(g15875
I42
g15876
Vinsert
p84734
I39
VPrimitiveType: boolean
p84735
tp84736
I1
s(g16145
I42
g16146
Vinsert
p84737
I21
VExpressionStatement
p84738
tp84739
I2
s(g8399
I42
g8400
Vinsert
p84740
I42
VSimpleName: assertFalse
p84741
tp84742
I1
s(g386
I42
g387
Vinsert
p84743
I42
VSimpleName: JSON
p84744
tp84745
I1
s(g26260
I42
g26261
Vinsert
p84746
I33
VNullLiteral
p84747
tp84748
I2
s(g5053
I42
g5054
Vinsert
p84749
I42
VSimpleName: method
p84750
tp84751
I2
s(g1120
I42
g1121
Vinsert
p84752
I42
VSimpleName: Override
p84753
tp84754
I1
s(g11629
I42
g11630
Vinsert
p84755
I42
VSimpleName: exceptionSorters
p84756
tp84757
I1
s(g7091
I42
g7092
Vinsert
p84758
I14
VClassInstanceCreation
p84759
tp84760
I1
s(g66554
I42
g66555
Vinsert
p84761
I42
VSimpleName: SQLTableElement
p84762
tp84763
I1
s(g386
I42
g387
Vinsert
p84764
I42
VSimpleName: HashMap
p84765
tp84766
I1
s(g8528
I42
g8529
Vinsert
p84767
I42
VSimpleName: getSimpleName
p84768
tp84769
I1
s(g6293
I42
g6294
Vinsert
p84770
I39
VPrimitiveType: int
p84771
tp84772
I1
s(g2586
I42
g2587
Vinsert
p84773
I60
VVariableDeclarationStatement
p84774
tp84775
I3
s(g2178
I42
g2179
Vinsert
p84776
I33
VNullLiteral
p84777
tp84778
I7
s(g2852
I42
g2853
Vinsert
p84779
I42
VSimpleName: visit
p84780
tp84781
I1
s(g9312
I42
g9313
Vinsert
p84782
I27
VInfixExpression: <
p84783
tp84784
I10
s(Vinsert
p84785
I42
VSimpleName: get
p84786
Vinsert
p84787
I42
VSimpleName: Assert
p84788
tp84789
I3
s(g2344
I42
g2345
Vinsert
p84790
I42
VSimpleName: arg
p84791
tp84792
I2
s(g9827
I42
g9828
Vinsert
p84793
I27
VInfixExpression: ==
p84794
tp84795
I1
s(g10953
I42
g10954
Vinsert
p84796
I40
VQualifiedName: Token.SELECT
p84797
tp84798
I1
s(g4093
I42
g4094
Vinsert
p84799
I42
VSimpleName: dataSource
p84800
tp84801
I2
s(g43952
I42
g43953
Vinsert
p84802
I39
VPrimitiveType: void
p84803
tp84804
I1
s(g1145
I42
g1146
Vinsert
p84805
I8
VBlock
p84806
tp84807
I1
s(g2459
I42
g2460
Vinsert
p84808
I42
VSimpleName: ucase
p84809
tp84810
I7
s(g6333
I42
g6334
Vinsert
p84811
I42
VSimpleName: print0
p84812
tp84813
I1
s(g14072
I42
g14073
Vinsert
p84814
I42
VSimpleName: SQLUpdateStatement
p84815
tp84816
I2
s(g6283
I42
g6284
Vinsert
p84817
I42
VSimpleName: String
p84818
tp84819
I13
s(g9670
I42
g9671
Vinsert
p84820
I42
VSimpleName: SQLStatement
p84821
tp84822
I108
s(g5351
I42
g5352
Vinsert
p84823
I59
VVariableDeclarationFragment
p84824
tp84825
I1
s(g1873
I42
g1874
Vinsert
p84826
I40
VQualifiedName: Token.TRUE
p84827
tp84828
I1
s(g7477
I42
g7478
Vinsert
p84829
I60
VVariableDeclarationStatement
p84830
tp84831
I1
s(g13017
I42
g13018
Vinsert
p84832
I42
VSimpleName: MySqlStatementParser
p84833
tp84834
I15
s(g1017
I42
g1018
Vinsert
p84835
I42
VSimpleName: w2
p84836
tp84837
I1
s(g3775
I42
g3776
Vinsert
p84838
I17
VConstructorInvocation
p84839
tp84840
I1
s(g4834
I42
g4835
Vinsert
p84841
I32
VMethodInvocation
p84842
tp84843
I17
s(g10752
I42
g10753
Vinsert
p84844
I21
VExpressionStatement
p84845
tp84846
I3
s(Vinsert
p84847
I42
VSimpleName: loadResource
p84848
Vinsert
p84849
I45
VStringLiteral: "META-INF/druid-filter-wall-permit-object-oracle.txt"
p84850
tp84851
I1
s(g7707
I42
g7708
Vinsert
p84852
I59
VVariableDeclarationFragment
p84853
tp84854
I1
s(g2652
I42
g2653
Vinsert
p84855
I42
VSimpleName: add
p84856
tp84857
I1
s(g3836
I42
g3837
Vinsert
p84858
I59
VVariableDeclarationFragment
p84859
tp84860
I1
s(g30229
I42
g30230
Vinsert
p84861
I42
VSimpleName: poolPreparedStatements
p84862
tp84863
I1
s(g10485
I42
g10486
Vinsert
p84864
I40
VQualifiedName: Token.ORDER
p84865
tp84866
I1
s(g5045
I42
g5046
Vinsert
p84867
I78
VMarkerAnnotation
p84868
tp84869
I1
s(g3770
I42
g3771
Vinsert
p84870
I43
VSimpleType: Short
p84871
tp84872
I2
s(g52025
I42
g52026
Vinsert
p84873
I42
VSimpleName: SYS_PROP_CONFIG_ENCRYPTED_PASSWORD
p84874
tp84875
I1
s(g507
I42
g508
Vinsert
p84876
I34
VNumberLiteral: 1
p84877
tp84878
I1
s(g1375
I42
g1376
Vinsert
p84879
I43
VSimpleType: String
p84880
tp84881
I1
s(g35877
I42
g35878
Vinsert
p84882
I42
VSimpleName: print
p84883
tp84884
I2
s(g5946
I42
g5947
Vinsert
p84885
I43
VSimpleType: T
p84886
tp84887
I1
s(Vinsert
p84888
I42
VSimpleName: clone
p84889
Vinsert
p84890
I42
VSimpleName: SQLSubPartitionByRange
p84891
tp84892
I1
s(g22913
I42
g22914
Vinsert
p84893
I57
VTypeLiteral
p84894
tp84895
I1
s(g22474
I42
g22475
Vinsert
p84896
I42
VSimpleName: isLogViolation
p84897
tp84898
I1
s(g15777
I42
g15778
Vinsert
p84899
I42
VSimpleName: parent
p84900
tp84901
I1
s(g19152
I42
g19153
Vinsert
p84902
I14
VClassInstanceCreation
p84903
tp84904
I6
s(g8863
I42
g8864
Vinsert
p84905
I21
VExpressionStatement
p84906
tp84907
I6
s(g30060
I42
g30061
Vinsert
p84908
I39
VPrimitiveType: char
p84909
tp84910
I1
s(g4584
I42
g4585
Vinsert
p84911
I42
VSimpleName: e
p84912
tp84913
I2
s(g13617
I42
g13618
Vinsert
p84914
I32
VMethodInvocation
p84915
tp84916
I1
s(g4303
I42
g4304
Vinsert
p84917
I45
VStringLiteral: "\u005ct\u005ct\u005ctself.currentstr := self.currentstr;\u005cn"
p84918
tp84919
I1
s(g7797
I42
g7798
Vinsert
p84920
I8
VBlock
p84921
tp84922
I2
s(g14160
I42
g14161
Vinsert
p84923
I44
VSingleVariableDeclaration
p84924
tp84925
I2
s(g30094
I42
g30095
Vinsert
p84926
I40
VQualifiedName: Token.EOF
p84927
tp84928
I2
s(g16948
I42
g16949
Vinsert
p84929
I21
VExpressionStatement
p84930
tp84931
I3
s(g7487
I42
g7488
Vinsert
p84932
I40
VQualifiedName: com.alibaba.druid.sql.ast.statement.SQLInsertStatement.ValuesClause
p84933
tp84934
I1
s(g17785
I42
g17786
Vinsert
p84935
I27
VInfixExpression: ||
p84936
tp84937
I2
s(g17926
I42
g17927
Vinsert
p84938
I42
VSimpleName: select
p84939
tp84940
I36
s(g14026
I42
g14027
Vinsert
p84941
I42
VSimpleName: SQLIntegerExpr
p84942
tp84943
I1
s(g13061
I42
g13062
Vinsert
p84944
I32
VMethodInvocation
p84945
tp84946
I10
s(g9727
I42
g9728
Vinsert
p84947
I39
VPrimitiveType: boolean
p84948
tp84949
I2
s(Vinsert
p84950
I42
VSimpleName: visit
p84951
Vinsert
p84952
I42
VSimpleName: target
p84953
tp84954
I1
s(g30418
I42
g30419
Vinsert
p84955
I32
VMethodInvocation
p84956
tp84957
I2
s(g2961
I42
g2962
Vinsert
p84958
I31
VMethodDeclaration
p84959
tp84960
I1
s(g20411
I42
g20412
Vinsert
p84961
I43
VSimpleType: OracleIsSetExpr
p84962
tp84963
I2
s(g35545
I42
g35546
Vinsert
p84964
I42
VSimpleName: tryImplementation
p84965
tp84966
I1
s(g26998
I42
g26999
Vinsert
p84967
I59
VVariableDeclarationFragment
p84968
tp84969
I2
s(g8833
I42
g8834
Vinsert
p84970
I27
VInfixExpression: -
p84971
tp84972
I3
s(g29475
I42
g29476
Vinsert
p84973
I21
VExpressionStatement
p84974
tp84975
I2
s(g12930
I42
g12931
Vinsert
p84976
I43
VSimpleType: SQLOrderBy
p84977
tp84978
I3
s(g7158
I42
g7159
Vinsert
p84979
I41
VReturnStatement
p84980
tp84981
I1
s(g10626
I42
g10627
Vinsert
p84982
I42
VSimpleName: dataSource
p84983
tp84984
I3
s(g8627
I42
g8628
Vinsert
p84985
I43
VSimpleType: SQLExpr
p84986
tp84987
I1
s(g23126
I42
g23127
Vinsert
p84988
I42
VSimpleName: seqExpr
p84989
tp84990
I2
s(g12443
I42
g12444
Vinsert
p84991
I8
VBlock
p84992
tp84993
I3
s(g2697
I42
g2698
Vinsert
p84994
I42
VSimpleName: Assert
p84995
tp84996
I16
s(g2795
I42
g2796
Vinsert
p84997
I8
VBlock
p84998
tp84999
I1
s(g25422
I42
g25423
Vinsert
p85000
I42
VSimpleName: OdpsShowGrantsStmt
p85001
tp85002
I1
s(g15153
I42
g15154
Vinsert
p85003
I60
VVariableDeclarationStatement
p85004
tp85005
I1
s(g51966
I42
g51967
Vinsert
p85006
I42
VSimpleName: printStackTrace
p85007
tp85008
I1
s(g13042
I42
g13043
Vinsert
p85009
I40
VQualifiedName: op.priority
p85010
tp85011
I1
s(g1675
I42
g1676
Vinsert
p85012
I34
VNumberLiteral: 0
p85013
tp85014
I1
s(g5424
I42
g5425
Vinsert
p85015
I41
VReturnStatement
p85016
tp85017
I3
s(g1647
I42
g1648
Vinsert
p85018
I42
VSimpleName: VirtualMachine
p85019
tp85020
I1
s(g21643
I42
g21644
Vinsert
p85021
I42
VSimpleName: visit
p85022
tp85023
I6
s(g31203
I42
g31204
Vinsert
p85024
I45
VStringLiteral: "ConnectionAliveMillisMax"
p85025
tp85026
I1
s(g10919
I42
g10920
Vinsert
p85027
I43
VSimpleType: MockHttpServletRequest
p85028
tp85029
I2
s(g17387
I42
g17388
Vinsert
p85030
I43
VSimpleType: Column
p85031
tp85032
I2
s(g20439
I42
g20440
Vinsert
p85033
I34
VNumberLiteral: 0
p85034
tp85035
I1
s(g9243
I42
g9244
Vinsert
p85036
I33
VNullLiteral
p85037
tp85038
I4
s(g3559
I42
g3560
Vinsert
p85039
I42
VSimpleName: equals
p85040
tp85041
I1
s(g11428
I42
g11429
Vinsert
p85042
I39
VPrimitiveType: void
p85043
tp85044
I1
s(g15166
I42
g15167
Vinsert
p85045
I42
VSimpleName: option
p85046
tp85047
I1
s(g51614
I42
g51615
Vinsert
p85048
I42
VSimpleName: loadClass
p85049
tp85050
I1
s(g31887
I42
g31888
Vinsert
p85051
I43
VSimpleType: FilterAdapter
p85052
tp85053
I1
s(g4293
I42
g4294
Vinsert
p85054
I83
VModifier: public
p85055
tp85056
I1
s(g15443
I42
g15444
Vinsert
p85057
I48
VSuperMethodInvocation
p85058
tp85059
I1
s(g206
I42
g207
Vinsert
p85060
I8
VBlock
p85061
tp85062
I1
s(g9954
I42
g9955
Vinsert
p85063
I39
VPrimitiveType: boolean
p85064
tp85065
I1
s(g8264
I42
g8265
Vinsert
p85066
I42
VSimpleName: columns
p85067
tp85068
I10
s(g29488
I42
g29489
Vinsert
p85069
I42
VSimpleName: sessionId
p85070
tp85071
I1
s(g9235
I42
g9236
Vinsert
p85072
I42
VSimpleName: dataMap
p85073
tp85074
I2
s(g12711
I42
g12712
Vinsert
p85075
I45
VStringLiteral: ""
p85076
tp85077
I3
s(g6847
I42
g6848
Vinsert
p85078
I43
VSimpleType: SQLStatement
p85079
tp85080
I2
s(g44779
I42
g44780
Vinsert
p85081
I42
VSimpleName: beginExpr
p85082
tp85083
I1
s(g1299
I42
g1300
Vinsert
p85084
I25
VIfStatement
p85085
tp85086
I1
s(g361
I42
g362
Vinsert
p85087
I45
VStringLiteral: " `created` datetime NOT NULL DEFAULT '1000-01-01 00:00:00',"
p85088
tp85089
I1
s(g5320
I42
g5321
Vinsert
p85090
I83
VModifier: private
p85091
tp85092
I3
s(g20259
I42
g20260
Vinsert
p85093
I40
VQualifiedName: SQLBinaryOperator.Add
p85094
tp85095
I1
s(g8863
I42
g8864
Vinsert
p85096
I32
VMethodInvocation
p85097
tp85098
I12
s(g11072
I42
g11073
Vinsert
p85099
I38
VPrefixExpression: ++
p85100
tp85101
I1
s(g47044
I42
g47045
Vinsert
p85102
I45
VStringLiteral: "\u005ct\u005c"IS_FROM_MEMBER\u005c" CHAR(1) NOT NULL ENABLE, \u005cn"
p85103
tp85104
I1
s(g7176
I42
g7177
Vinsert
p85105
I42
VSimpleName: PGSelectStatement
p85106
tp85107
I3
s(g10702
I42
g10703
Vinsert
p85108
I42
VSimpleName: pattern
p85109
tp85110
I2
s(g11453
I42
g11454
Vinsert
p85111
I21
VExpressionStatement
p85112
tp85113
I10
s(g32712
I42
g32713
Vinsert
p85114
I42
VSimpleName: field
p85115
tp85116
I1
s(Vinsert
p85117
I42
VSimpleName: assertNotNull
p85118
Vinsert
p85119
I42
VSimpleName: getObject
p85120
tp85121
I1
s(g2707
I42
g2708
Vinsert
p85122
I43
VSimpleType: Class
p85123
tp85124
I1
s(g82926
I42
g82927
Vinsert
p85125
I42
VSimpleName: dataSource
p85126
tp85127
I49
s(g1042
I42
g1043
Vinsert
p85128
I32
VMethodInvocation
p85129
tp85130
I12
s(g13084
I42
g13085
Vinsert
p85131
I42
VSimpleName: SQLUtils
p85132
tp85133
I23
s(g3544
I42
g3545
Vinsert
p85134
I45
VStringLiteral: "group by tt.os, \u005cn"
p85135
tp85136
I1
s(g22986
I42
g22987
Vinsert
p85137
I41
VReturnStatement
p85138
tp85139
I1
s(g18963
I42
g18964
Vinsert
p85140
I42
VSimpleName: HiveASTVisitor
p85141
tp85142
I1
s(g20288
I42
g20289
Vinsert
p85143
I43
VSimpleType: MySqlBlockStatement
p85144
tp85145
I1
s(g15793
I42
g15794
Vinsert
p85146
I83
VModifier: public
p85147
tp85148
I1
s(g8208
I42
g8209
Vinsert
p85149
I45
VStringLiteral: "fields : "
p85150
tp85151
I3
s(g27752
I42
g27753
Vinsert
p85152
I42
VSimpleName: b
p85153
tp85154
I1
s(g8796
I42
g8797
Vinsert
p85155
I42
VSimpleName: lexer
p85156
tp85157
I1
s(g7769
I42
g7770
Vinsert
p85158
I42
VSimpleName: getString
p85159
tp85160
I1
s(g53297
I42
g53298
Vinsert
p85161
I42
VSimpleName: connectionIdSeed
p85162
tp85163
I2
s(g7802
I42
g7803
Vinsert
p85164
I43
VSimpleType: PreparedStatement
p85165
tp85166
I58
s(g424
I42
g425
Vinsert
p85167
I41
VReturnStatement
p85168
tp85169
I6
s(g14659
I42
g14660
Vinsert
p85170
I42
VSimpleName: get
p85171
tp85172
I5
s(g10550
I42
g10551
Vinsert
p85173
I43
VSimpleType: AesDecrypter
p85174
tp85175
I2
s(g32771
I42
g32772
Vinsert
p85176
I34
VNumberLiteral: 1
p85177
tp85178
I10
s(g83192
I42
g83193
Vinsert
p85179
I27
VInfixExpression: +
p85180
tp85181
I1
s(g3098
I42
g3099
Vinsert
p85182
I14
VClassInstanceCreation
p85183
tp85184
I56
s(g55376
I42
g55377
Vinsert
p85185
I42
VSimpleName: orderBy
p85186
tp85187
I9
s(g19035
I42
g19036
Vinsert
p85188
I43
VSimpleType: List
p85189
tp85190
I2
s(g41008
I42
g41009
Vinsert
p85191
I43
VSimpleType: OdpsListStmt
p85192
tp85193
I2
s(g7039
I42
g7040
Vinsert
p85194
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITIONS 4"
p85195
tp85196
I2
s(g7908
I42
g7909
Vinsert
p85197
I32
VMethodInvocation
p85198
tp85199
I4
s(g121
I42
g122
Vinsert
p85200
I42
VSimpleName: SQLCallStatement
p85201
tp85202
I2
s(g8011
I42
g8012
Vinsert
p85203
I59
VVariableDeclarationFragment
p85204
tp85205
I2
s(g9137
I42
g9138
Vinsert
p85206
I59
VVariableDeclarationFragment
p85207
tp85208
I2
s(g3659
I42
g3660
Vinsert
p85209
I39
VPrimitiveType: int
p85210
tp85211
I1
s(g9954
I42
g9955
Vinsert
p85212
I60
VVariableDeclarationStatement
p85213
tp85214
I1
s(g5864
I42
g5865
Vinsert
p85215
I43
VSimpleType: OracleOrderByItem
p85216
tp85217
I1
s(g7450
I42
g7451
Vinsert
p85218
I42
VSimpleName: TableColumn
p85219
tp85220
I1
s(g43334
I42
g43335
Vinsert
p85221
I40
VQualifiedName: Token.DISABLE
p85222
tp85223
I1
s(g19369
I42
g19370
Vinsert
p85224
I21
VExpressionStatement
p85225
tp85226
I1
s(g16402
I42
g16403
Vinsert
p85227
I27
VInfixExpression: <
p85228
tp85229
I1
s(g24007
I42
g24008
Vinsert
p85230
I42
VSimpleName: singletonList
p85231
tp85232
I1
s(g30418
I42
g30419
Vinsert
p85233
I42
VSimpleName: getMaxRowSize
p85234
tp85235
I1
s(g9428
I42
g9429
Vinsert
p85236
I31
VMethodDeclaration
p85237
tp85238
I9
s(g31291
I42
g31292
Vinsert
p85239
I42
VSimpleName: print0
p85240
tp85241
I1
s(g11910
I42
g11911
Vinsert
p85242
I42
VSimpleName: print0
p85243
tp85244
I1
s(g13152
I42
g13153
Vinsert
p85245
I43
VSimpleType: String
p85246
tp85247
I2
s(g9124
I42
g9125
Vinsert
p85248
I27
VInfixExpression: >=
p85249
tp85250
I4
s(g26843
I42
g26844
Vinsert
p85251
I42
VSimpleName: ArrayList
p85252
tp85253
I1
s(g53660
I42
g53661
Vinsert
p85254
I42
VSimpleName: testCount
p85255
tp85256
I2
s(g1007
I42
g1008
Vinsert
p85257
I42
VSimpleName: SQLColumnDefinition
p85258
tp85259
I1
s(g3184
I42
g3185
Vinsert
p85260
I42
VSimpleName: MockStatement
p85261
tp85262
I2
s(g19144
I42
g19145
Vinsert
p85263
I42
VSimpleName: query
p85264
tp85265
I5
s(g28698
I42
g28699
Vinsert
p85266
I42
VSimpleName: setName
p85267
tp85268
I1
s(g29300
I42
g29301
Vinsert
p85269
I42
VSimpleName: SQLSelectGroupByClause
p85270
tp85271
I1
s(g23093
I42
g23094
Vinsert
p85272
I49
VSwitchCase
p85273
tp85274
I4
s(g6630
I42
g6631
Vinsert
p85275
I43
VSimpleType: SQLIdentifierExpr
p85276
tp85277
I1
s(g23113
I42
g23114
Vinsert
p85278
I42
VSimpleName: defaultRowPretch
p85279
tp85280
I1
s(g7315
I42
g7316
Vinsert
p85281
I42
VSimpleName: Number
p85282
tp85283
I1
s(g18278
I42
g18279
Vinsert
p85284
I60
VVariableDeclarationStatement
p85285
tp85286
I1
s(g4160
I42
g4161
Vinsert
p85287
I42
VSimpleName: getLockQueueLength
p85288
tp85289
I1
s(g3083
I42
g3084
Vinsert
p85290
I42
VSimpleName: sql
p85291
tp85292
I6
s(g16948
I42
g16949
Vinsert
p85293
I34
VNumberLiteral: 1
p85294
tp85295
I2
s(g937
I42
g938
Vinsert
p85296
I11
VCastExpression
p85297
tp85298
I1
s(g10100
I42
g10101
Vinsert
p85299
I42
VSimpleName: conn
p85300
tp85301
I2
s(g5574
I42
g5575
Vinsert
p85302
I42
VSimpleName: setProxyFilters
p85303
tp85304
I1
s(g16778
I42
g16779
Vinsert
p85305
I42
VSimpleName: MockDriver
p85306
tp85307
I2
s(g22538
I42
g22539
Vinsert
p85308
I32
VMethodInvocation
p85309
tp85310
I4
s(g9608
I42
g9609
Vinsert
p85311
I42
VSimpleName: KeyFactory
p85312
tp85313
I2
s(g1943
I42
g1944
Vinsert
p85314
I60
VVariableDeclarationStatement
p85315
tp85316
I1
s(g4982
I42
g4983
Vinsert
p85317
I45
VStringLiteral: " NO_WAIT"
p85318
tp85319
I1
s(g1564
I42
g1565
Vinsert
p85320
I8
VBlock
p85321
tp85322
I2
s(g6187
I42
g6188
Vinsert
p85323
I45
VStringLiteral: "\u005ct\u005c"GMT_MODIFIED\u005c"\u005cn"
p85324
tp85325
I1
s(g14597
I42
g14598
Vinsert
p85326
I43
VSimpleType: SQLStatement
p85327
tp85328
I2
s(g1853
I42
g1854
Vinsert
p85329
I21
VExpressionStatement
p85330
tp85331
I2
s(g1226
I42
g1227
Vinsert
p85332
I45
VStringLiteral: "OPEN"
p85333
tp85334
I1
s(g3631
I42
g3632
Vinsert
p85335
I43
VSimpleType: Long
p85336
tp85337
I1
s(g587
I42
g588
Vinsert
p85338
I45
VStringLiteral: "    from T01_CHECKIN_CUSTOMER"
p85339
tp85340
I1
s(g10475
I42
g10476
Vinsert
p85341
I83
VModifier: public
p85342
tp85343
I2
s(g311
I42
g312
Vinsert
p85344
I42
VSimpleName: txtUrl
p85345
tp85346
I1
s(g5877
I42
g5878
Vinsert
p85347
I27
VInfixExpression: >
p85348
tp85349
I1
s(g439
I42
g440
Vinsert
p85350
I43
VSimpleType: String
p85351
tp85352
I1
s(g18044
I42
g18045
Vinsert
p85353
I40
VQualifiedName: Token.LPAREN
p85354
tp85355
I1
s(g62871
I42
g62872
Vinsert
p85356
I42
VSimpleName: createTableSql
p85357
tp85358
I1
s(g43957
I42
g43958
Vinsert
p85359
I42
VSimpleName: columnsTerminatedBy
p85360
tp85361
I1
s(g38309
I42
g38310
Vinsert
p85362
I41
VReturnStatement
p85363
tp85364
I1
s(g2372
I42
g2373
Vinsert
p85365
I42
VSimpleName: getProperty
p85366
tp85367
I1
s(g21770
I42
g21771
Vinsert
p85368
I45
VStringLiteral: "[Ad_Wait_Stop_Time] varchar(255) NULL,\u005cn"
p85369
tp85370
I1
s(g37280
I42
g37281
Vinsert
p85371
I40
VQualifiedName: com.alibaba.druid.pool.DruidDataSourceFactory
p85372
tp85373
I1
s(g16980
I42
g16981
Vinsert
p85374
I43
VSimpleType: AtomicLong
p85375
tp85376
I2
s(Vinsert
p85377
I42
VSimpleName: charAt
p85378
Vinsert
p85379
I42
VSimpleName: pattern
p85380
tp85381
I1
s(g18723
I42
g18724
Vinsert
p85382
I42
VSimpleName: text
p85383
tp85384
I1
s(g4212
I42
g4213
Vinsert
p85385
I42
VSimpleName: PGInetExpr
p85386
tp85387
I2
s(g2915
I42
g2916
Vinsert
p85388
I43
VSimpleType: ParserException
p85389
tp85390
I4
s(g31920
I42
g31921
Vinsert
p85391
I27
VInfixExpression: <
p85392
tp85393
I11
s(g17379
I42
g17380
Vinsert
p85394
I7
VAssignment: =
p85395
tp85396
I1
s(g15602
I42
g15603
Vinsert
p85397
I43
VSimpleType: SQLIdentifierExpr
p85398
tp85399
I1
s(g6293
I42
g6294
Vinsert
p85400
I42
VSimpleName: Override
p85401
tp85402
I1
s(g29966
I42
g29967
Vinsert
p85403
I27
VInfixExpression: ==
p85404
tp85405
I2
s(g13223
I42
g13224
Vinsert
p85406
I54
VTryStatement
p85407
tp85408
I1
s(g16153
I42
g16154
Vinsert
p85409
I43
VSimpleType: SQLBinaryOpExpr
p85410
tp85411
I1
s(g15456
I42
g15457
Vinsert
p85412
I42
VSimpleName: Exception
p85413
tp85414
I2
s(g29718
I42
g29719
Vinsert
p85415
I45
VStringLiteral: "\u005cnTABLESPACE \u005c"USERS\u005c""
p85416
tp85417
I5
s(g6727
I42
g6728
Vinsert
p85418
I42
VSimpleName: x
p85419
tp85420
I1
s(g25773
I42
g25774
Vinsert
p85421
I40
VQualifiedName: Token.FOR
p85422
tp85423
I1
s(g27680
I42
g27681
Vinsert
p85424
I33
VNullLiteral
p85425
tp85426
I9
s(g10195
I42
g10196
Vinsert
p85427
I45
VStringLiteral: "\u005cn\u005ctpromo_name VARCHAR2(20),"
p85428
tp85429
I4
s(g29345
I42
g29346
Vinsert
p85430
I39
VPrimitiveType: int
p85431
tp85432
I1
s(g9420
I42
g9421
Vinsert
p85433
I45
VStringLiteral: "a"
p85434
tp85435
I2
s(g469
I42
g470
Vinsert
p85436
I40
VQualifiedName: FnvHash.Constants.LEVEL
p85437
tp85438
I1
s(g11691
I42
g11692
Vinsert
p85439
I33
VNullLiteral
p85440
tp85441
I1
s(g5148
I42
g5149
Vinsert
p85442
I42
VSimpleName: JConsoleContext
p85443
tp85444
I1
s(g4437
I42
g4438
Vinsert
p85445
I42
VSimpleName: dataSource
p85446
tp85447
I5
s(g73338
I42
g73339
Vinsert
p85448
I42
VSimpleName: addConstraint
p85449
tp85450
I1
s(g25381
I42
g25382
Vinsert
p85451
I59
VVariableDeclarationFragment
p85452
tp85453
I1
s(g6236
I42
g6237
Vinsert
p85454
I42
VSimpleName: setTo
p85455
tp85456
I1
s(g5569
I42
g5570
Vinsert
p85457
I42
VSimpleName: ExportParameterVisitor
p85458
tp85459
I2
s(g15188
I42
g15189
Vinsert
p85460
I22
VFieldAccess
p85461
tp85462
I1
s(g11474
I42
g11475
Vinsert
p85463
I42
VSimpleName: List
p85464
tp85465
I7
s(g4075
I42
g4076
Vinsert
p85466
I43
VSimpleType: FieldInfo
p85467
tp85468
I2
s(g13512
I42
g13513
Vinsert
p85469
I42
VSimpleName: test_0
p85470
tp85471
I1
s(g8030
I42
g8031
Vinsert
p85472
I44
VSingleVariableDeclaration
p85473
tp85474
I1
s(g28411
I42
g28412
Vinsert
p85475
I42
VSimpleName: show
p85476
tp85477
I16
s(g50845
I42
g50846
Vinsert
p85478
I42
VSimpleName: getParameters
p85479
tp85480
I1
s(g4278
I42
g4279
Vinsert
p85481
I45
VStringLiteral: "| c_text       | text         | NO   |     | NULL                |                             |\u005cn"
p85482
tp85483
I1
s(g8108
I42
g8109
Vinsert
p85484
I42
VSimpleName: name
p85485
tp85486
I7
s(g2044
I42
g2045
Vinsert
p85487
I27
VInfixExpression: !=
p85488
tp85489
I2
s(g34449
I42
g34450
Vinsert
p85490
I42
VSimpleName: row
p85491
tp85492
I1
s(g6617
I42
g6618
Vinsert
p85493
I42
VSimpleName: list
p85494
tp85495
I2
s(g753
I42
g754
Vinsert
p85496
I43
VSimpleType: Map
p85497
tp85498
I1
s(g47049
I42
g47050
Vinsert
p85499
I42
VSimpleName: WallUpdateCheckItem
p85500
tp85501
I5
s(g16715
I42
g16716
Vinsert
p85502
I42
VSimpleName: validConnectionChecker
p85503
tp85504
I1
s(g60350
I42
g60351
Vinsert
p85505
I42
VSimpleName: test_touch
p85506
tp85507
I1
s(g24211
I42
g24212
Vinsert
p85508
I42
VSimpleName: QueryPartitionClause
p85509
tp85510
I1
s(g2009
I42
g2010
Vinsert
p85511
I60
VVariableDeclarationStatement
p85512
tp85513
I1
s(g64721
I42
g64722
Vinsert
p85514
I33
VNullLiteral
p85515
tp85516
I1
s(g8863
I42
g8864
Vinsert
p85517
I60
VVariableDeclarationStatement
p85518
tp85519
I6
s(g4584
I42
g4585
Vinsert
p85520
I42
VSimpleName: x
p85521
tp85522
I1
s(g2961
I42
g2962
Vinsert
p85523
I43
VSimpleType: Exception
p85524
tp85525
I1
s(Vinsert
p85526
I42
VSimpleName: evalExpr
p85527
Vinsert
p85528
I42
VSimpleName: test_byte_1
p85529
tp85530
I1
s(g22206
I42
g22207
Vinsert
p85531
I85
VDimension
p85532
tp85533
I4
s(g24923
I42
g24924
Vinsert
p85534
I42
VSimpleName: getWallTopStatementContext
p85535
tp85536
I2
s(g10082
I42
g10083
Vinsert
p85537
I42
VSimpleName: test_permitTable
p85538
tp85539
I1
s(g5597
I42
g5598
Vinsert
p85540
I42
VSimpleName: alias
p85541
tp85542
I2
s(g67308
I42
g67309
Vinsert
p85543
I42
VSimpleName: dataSource
p85544
tp85545
I2
s(g8222
I42
g8223
Vinsert
p85546
I8
VBlock
p85547
tp85548
I1
s(g19396
I42
g19397
Vinsert
p85549
I45
VStringLiteral: "\u005cn\u005ctFROM audit_url_log"
p85550
tp85551
I1
s(g9722
I42
g9723
Vinsert
p85552
I11
VCastExpression
p85553
tp85554
I8
s(g2014
I42
g2015
Vinsert
p85555
I33
VNullLiteral
p85556
tp85557
I16
s(g26990
I42
g26991
Vinsert
p85558
I42
VSimpleName: FetchClause
p85559
tp85560
I1
s(g997
I42
g998
Vinsert
p85561
I21
VExpressionStatement
p85562
tp85563
I1
s(g18801
I42
g18802
Vinsert
p85564
I45
VStringLiteral: "x.sql.Statement"
p85565
tp85566
I1
s(g17387
I42
g17388
Vinsert
p85567
I59
VVariableDeclarationFragment
p85568
tp85569
I3
s(g15818
I42
g15819
Vinsert
p85570
I43
VSimpleType: Map
p85571
tp85572
I1
s(g25298
I42
g25299
Vinsert
p85573
I54
VTryStatement
p85574
tp85575
I10
s(g861
I42
g862
Vinsert
p85576
I40
VQualifiedName: SQLUnionOperator.MINUS
p85577
tp85578
I1
s(g20470
I42
g20471
Vinsert
p85579
I33
VNullLiteral
p85580
tp85581
I2
s(g2115
I42
g2116
Vinsert
p85582
I43
VSimpleType: SQLSubPartitionByList
p85583
tp85584
I2
s(Vinsert
p85585
I42
VSimpleName: getConnection
p85586
Vinsert
p85587
I42
VSimpleName: test_executeUpdate
p85588
tp85589
I1
s(g64072
I42
g64073
Vinsert
p85590
I45
VStringLiteral: "syntax error"
p85591
tp85592
I1
s(g36179
I42
g36180
Vinsert
p85593
I43
VSimpleType: SQLInsertStatement
p85594
tp85595
I2
s(g44536
I42
g44537
Vinsert
p85596
I45
VStringLiteral: "LIMIT 10"
p85597
tp85598
I1
s(g64262
I42
g64263
Vinsert
p85599
I43
VSimpleType: TableStat.Column
p85600
tp85601
I1
s(g2925
I42
g2926
Vinsert
p85602
I42
VSimpleName: LITERAL_CHARS
p85603
tp85604
I2
s(g3875
I42
g3876
Vinsert
p85605
I42
VSimpleName: WallContext
p85606
tp85607
I1
s(g2120
I42
g2121
Vinsert
p85608
I43
VSimpleType: DB2SelectQueryBlock
p85609
tp85610
I1
s(g5351
I42
g5352
Vinsert
p85611
I14
VClassInstanceCreation
p85612
tp85613
I1
s(g5959
I42
g5960
Vinsert
p85614
I43
VSimpleType: SQLExplainStatement
p85615
tp85616
I1
s(g5460
I42
g5461
Vinsert
p85617
I52
VThisExpression
p85618
tp85619
I2
s(g21332
I42
g21333
Vinsert
p85620
I43
VSimpleType: SQLOrderingSpecification
p85621
tp85622
I1
s(g18415
I42
g18416
Vinsert
p85623
I42
VSimpleName: OdpsListStmt
p85624
tp85625
I1
s(g61368
I42
g61369
Vinsert
p85626
I42
VSimpleName: sqlStat
p85627
tp85628
I1
s(g71
I42
g72
Vinsert
p85629
I62
VInstanceofExpression
p85630
tp85631
I1
s(g10882
I42
g10883
Vinsert
p85632
I57
VTypeLiteral
p85633
tp85634
I11
s(g2049
I42
g2050
Vinsert
p85635
I45
VStringLiteral: "TABLESPACE \u005c"USERS\u005c"\u005cn"
p85636
tp85637
I2
s(g2009
I42
g2010
Vinsert
p85638
I40
VQualifiedName: com.alibaba.druid.sql.ast.SQLCommentHint
p85639
tp85640
I1
s(g811
I42
g812
Vinsert
p85641
I40
VQualifiedName: statValue.connectionHoldTimeHistogram
p85642
tp85643
I1
s(g52306
I42
g52307
Vinsert
p85644
I43
VSimpleType: List
p85645
tp85646
I1
s(g18930
I42
g18931
Vinsert
p85647
I2
VArrayAccess
p85648
tp85649
I1
s(g6997
I42
g6998
Vinsert
p85650
I42
VSimpleName: add
p85651
tp85652
I1
s(g24526
I42
g24527
Vinsert
p85653
I83
VModifier: private
p85654
tp85655
I1
s(g4070
I42
g4071
Vinsert
p85656
I42
VSimpleName: getExecuteErrorLast
p85657
tp85658
I1
s(g4936
I42
g4937
Vinsert
p85659
I52
VThisExpression
p85660
tp85661
I3
s(g5320
I42
g5321
Vinsert
p85662
I42
VSimpleName: Lock
p85663
tp85664
I4
s(g19283
I42
g19284
Vinsert
p85665
I42
VSimpleName: SQLException
p85666
tp85667
I1
s(g5685
I42
g5686
Vinsert
p85668
I14
VClassInstanceCreation
p85669
tp85670
I1
s(g131
I42
g132
Vinsert
p85671
I42
VSimpleName: SQLSelectGroupByClause
p85672
tp85673
I4
s(g9503
I42
g9504
Vinsert
p85674
I42
VSimpleName: dataSource
p85675
tp85676
I2
s(g1868
I42
g1869
Vinsert
p85677
I42
VSimpleName: preparedStatementFactory
p85678
tp85679
I3
s(g10252
I42
g10253
Vinsert
p85680
I42
VSimpleName: items
p85681
tp85682
I5
s(g758
I42
g759
Vinsert
p85683
I42
VSimpleName: print
p85684
tp85685
I3
s(g5045
I42
g5046
Vinsert
p85686
I31
VMethodDeclaration
p85687
tp85688
I1
s(g15263
I42
g15264
Vinsert
p85689
I43
VSimpleType: Integer
p85690
tp85691
I1
s(g18300
I42
g18301
Vinsert
p85692
I21
VExpressionStatement
p85693
tp85694
I2
s(g21900
I42
g21901
Vinsert
p85695
I21
VExpressionStatement
p85696
tp85697
I3
s(g9732
I42
g9733
Vinsert
p85698
I42
VSimpleName: value
p85699
tp85700
I1
s(g8891
I42
g8892
Vinsert
p85701
I32
VMethodInvocation
p85702
tp85703
I2
s(g27620
I42
g27621
Vinsert
p85704
I32
VMethodInvocation
p85705
tp85706
I4
s(g60465
I42
g60466
Vinsert
p85707
I42
VSimpleName: MySqlShowColumnsStatement
p85708
tp85709
I2
s(Vinsert
p85710
I42
VSimpleName: nextToken
p85711
Vinsert
p85712
I40
VQualifiedName: Token.DOT
p85713
tp85714
I1
s(g25241
I42
g25242
Vinsert
p85715
I42
VSimpleName: object
p85716
tp85717
I2
s(g30060
I42
g30061
Vinsert
p85718
I27
VInfixExpression: +
p85719
tp85720
I1
s(g1261
I42
g1262
Vinsert
p85721
I42
VSimpleName: left
p85722
tp85723
I1
s(g33079
I42
g33080
Vinsert
p85724
I39
VPrimitiveType: void
p85725
tp85726
I1
s(g11197
I42
g11198
Vinsert
p85727
I70
VEnhancedForStatement
p85728
tp85729
I9
s(g2168
I42
g2169
Vinsert
p85730
I25
VIfStatement
p85731
tp85732
I1
s(g47519
I42
g47520
Vinsert
p85733
I45
VStringLiteral: "ENABLE CONSTRAINT "
p85734
tp85735
I1
s(Vinsert
p85736
I42
VSimpleName: size
p85737
Vinsert
p85738
I42
VSimpleName: assertTrue
p85739
tp85740
I1
s(g106
I42
g107
Vinsert
p85741
I42
VSimpleName: getPtcfree
p85742
tp85743
I1
s(g32188
I42
g32189
Vinsert
p85744
I42
VSimpleName: HMappingColumn
p85745
tp85746
I2
s(g32934
I42
g32935
Vinsert
p85747
I11
VCastExpression
p85748
tp85749
I1
s(g9397
I42
g9398
Vinsert
p85750
I42
VSimpleName: lexer
p85751
tp85752
I1
s(g35021
I42
g35022
Vinsert
p85753
I42
VSimpleName: url
p85754
tp85755
I2
s(g41824
I42
g41825
Vinsert
p85756
I42
VSimpleName: sqlTemplate
p85757
tp85758
I1
s(g68583
I42
g68584
Vinsert
p85759
I42
VSimpleName: createSchemaStatVisitor
p85760
tp85761
I3
s(g24184
I42
g24185
Vinsert
p85762
I42
VSimpleName: dataSource
p85763
tp85764
I2
s(g19018
I42
g19019
Vinsert
p85765
I8
VBlock
p85766
tp85767
I106
s(g18648
I42
g18649
Vinsert
p85768
I83
VModifier: synchronized
p85769
tp85770
I1
s(g12143
I42
g12144
Vinsert
p85771
I42
VSimpleName: jdbcUpdateCount
p85772
tp85773
I1
s(g4370
I42
g4371
Vinsert
p85774
I32
VMethodInvocation
p85775
tp85776
I36
s(Vinsert
p85777
I42
VSimpleName: expr
p85778
Vinsert
p85779
I42
VSimpleName: PGExtractExpr
p85780
tp85781
I2
s(g14744
I42
g14745
Vinsert
p85782
I14
VClassInstanceCreation
p85783
tp85784
I3
s(g5262
I42
g5263
Vinsert
p85785
I8
VBlock
p85786
tp85787
I1
s(g8062
I42
g8063
Vinsert
p85788
I8
VBlock
p85789
tp85790
I3
s(g6354
I42
g6355
Vinsert
p85791
I45
VStringLiteral: "println error"
p85792
tp85793
I1
s(g17012
I42
g17013
Vinsert
p85794
I42
VSimpleName: getContextPath
p85795
tp85796
I1
s(g16630
I42
g16631
Vinsert
p85797
I42
VSimpleName: test_dbType_error
p85798
tp85799
I1
s(g30575
I42
g30576
Vinsert
p85800
I43
VSimpleType: SQLExpr
p85801
tp85802
I1
s(g23991
I42
g23992
Vinsert
p85803
I42
VSimpleName: x
p85804
tp85805
I1
s(g4035
I42
g4036
Vinsert
p85806
I42
VSimpleName: Assert
p85807
tp85808
I2
s(g947
I42
g948
Vinsert
p85809
I42
VSimpleName: setTableSource
p85810
tp85811
I1
s(g3704
I42
g3705
Vinsert
p85812
I43
VSimpleType: SQLBinaryOpExpr
p85813
tp85814
I1
s(g3452
I42
g3453
Vinsert
p85815
I42
VSimpleName: setMaxIdle
p85816
tp85817
I1
s(g9243
I42
g9244
Vinsert
p85818
I42
VSimpleName: tableSource
p85819
tp85820
I6
s(g1536
I42
g1537
Vinsert
p85821
I60
VVariableDeclarationStatement
p85822
tp85823
I1
s(Vinsert
p85824
I42
VSimpleName: endVisit
p85825
Vinsert
p85826
I42
VSimpleName: select
p85827
tp85828
I1
s(g4941
I42
g4942
Vinsert
p85829
I45
VStringLiteral: "Unable to enlist connection the transaction"
p85830
tp85831
I1
s(g5515
I42
g5516
Vinsert
p85832
I8
VBlock
p85833
tp85834
I3
s(g17114
I42
g17115
Vinsert
p85835
I42
VSimpleName: id
p85836
tp85837
I3
s(g1476
I42
g1477
Vinsert
p85838
I52
VThisExpression
p85839
tp85840
I3
s(g17507
I42
g17508
Vinsert
p85841
I44
VSingleVariableDeclaration
p85842
tp85843
I1
s(g68940
I42
g68941
Vinsert
p85844
I42
VSimpleName: ownerThread
p85845
tp85846
I2
s(g7932
I42
g7933
Vinsert
p85847
I42
VSimpleName: getDate
p85848
tp85849
I2
s(g4982
I42
g4983
Vinsert
p85850
I45
VStringLiteral: " no_wait"
p85851
tp85852
I1
s(g8783
I42
g8784
Vinsert
p85853
I43
VSimpleType: SQLAllColumnExpr
p85854
tp85855
I3
s(g15818
I42
g15819
Vinsert
p85856
I42
VSimpleName: Map
p85857
tp85858
I1
s(g424
I42
g425
Vinsert
p85859
I31
VMethodDeclaration
p85860
tp85861
I6
s(g25165
I42
g25166
Vinsert
p85862
I33
VNullLiteral
p85863
tp85864
I1
s(g15387
I42
g15388
Vinsert
p85865
I42
VSimpleName: obj
p85866
tp85867
I107
s(g3618
I42
g3619
Vinsert
p85868
I32
VMethodInvocation
p85869
tp85870
I1
s(g2168
I42
g2169
Vinsert
p85871
I45
VStringLiteral: " FIRST"
p85872
tp85873
I1
s(g26553
I42
g26554
Vinsert
p85874
I39
VPrimitiveType: boolean
p85875
tp85876
I1
s(g21244
I42
g21245
Vinsert
p85877
I42
VSimpleName: String
p85878
tp85879
I4
s(g42762
I42
g42763
Vinsert
p85880
I43
VSimpleType: Property
p85881
tp85882
I1
s(g25524
I42
g25525
Vinsert
p85883
I42
VSimpleName: valuesList
p85884
tp85885
I3
s(g27276
I42
g27277
Vinsert
p85886
I42
VSimpleName: setConnectionInitSqls
p85887
tp85888
I1
s(g2349
I42
g2350
Vinsert
p85889
I13
VCharacterLiteral: ' '
p85890
tp85891
I1
s(g12518
I42
g12519
Vinsert
p85892
I42
VSimpleName: map
p85893
tp85894
I1
s(g14484
I42
g14485
Vinsert
p85895
I42
VSimpleName: buf
p85896
tp85897
I5
s(g5628
I42
g5629
Vinsert
p85898
I40
VQualifiedName: Isnull.instance
p85899
tp85900
I1
s(g21632
I42
g21633
Vinsert
p85901
I42
VSimpleName: print0
p85902
tp85903
I6
s(g4584
I42
g4585
Vinsert
p85904
I21
VExpressionStatement
p85905
tp85906
I6
s(g2130
I42
g2131
Vinsert
p85907
I42
VSimpleName: cal
p85908
tp85909
I1
s(g12523
I42
g12524
Vinsert
p85910
I27
VInfixExpression: !=
p85911
tp85912
I1
s(g51347
I42
g51348
Vinsert
p85913
I40
VQualifiedName: Boolean.TRUE
p85914
tp85915
I2
s(g48916
I42
g48917
Vinsert
p85916
I42
VSimpleName: Collection
p85917
tp85918
I1
s(g2568
I42
g2569
Vinsert
p85919
I45
VStringLiteral: "-sql"
p85920
tp85921
I1
s(g12930
I42
g12931
Vinsert
p85922
I21
VExpressionStatement
p85923
tp85924
I2
s(g50661
I42
g50662
Vinsert
p85925
I42
VSimpleName: setTestOnBorrow
p85926
tp85927
I1
s(g10267
I42
g10268
Vinsert
p85928
I7
VAssignment: =
p85929
tp85930
I2
s(g22193
I42
g22194
Vinsert
p85931
I42
VSimpleName: recycleFilterChain
p85932
tp85933
I1
s(g18601
I42
g18602
Vinsert
p85934
I42
VSimpleName: withQuery
p85935
tp85936
I1
s(g23899
I42
g23900
Vinsert
p85937
I42
VSimpleName: dataSource
p85938
tp85939
I1
s(g6343
I42
g6344
Vinsert
p85940
I8
VBlock
p85941
tp85942
I2
s(g9446
I42
g9447
Vinsert
p85943
I42
VSimpleName: charAt
p85944
tp85945
I1
s(g3554
I42
g3555
Vinsert
p85946
I42
VSimpleName: setParameterized
p85947
tp85948
I1
s(g3218
I42
g3219
Vinsert
p85949
I42
VSimpleName: text2
p85950
tp85951
I1
s(g11001
I42
g11002
Vinsert
p85952
I42
VSimpleName: OracleArgumentExpr
p85953
tp85954
I1
s(g4755
I42
g4756
Vinsert
p85955
I32
VMethodInvocation
p85956
tp85957
I1
s(g9683
I42
g9684
Vinsert
p85958
I21
VExpressionStatement
p85959
tp85960
I6
s(g7986
I42
g7987
Vinsert
p85961
I42
VSimpleName: token
p85962
tp85963
I2
s(g11890
I42
g11891
Vinsert
p85964
I42
VSimpleName: exprParser
p85965
tp85966
I5
s(g10882
I42
g10883
Vinsert
p85967
I43
VSimpleType: CallableStatementProxy
p85968
tp85969
I2
s(g20782
I42
g20783
Vinsert
p85970
I14
VClassInstanceCreation
p85971
tp85972
I2
s(g15334
I42
g15335
Vinsert
p85973
I1
VAnonymousClassDeclaration
p85974
tp85975
I1
s(g12844
I42
g12845
Vinsert
p85976
I43
VSimpleType: SQLUnique
p85977
tp85978
I1
s(g5661
I42
g5662
Vinsert
p85979
I42
VSimpleName: owner
p85980
tp85981
I1
s(g1481
I42
g1482
Vinsert
p85982
I33
VNullLiteral
p85983
tp85984
I1
s(g12488
I42
g12489
Vinsert
p85985
I8
VBlock
p85986
tp85987
I1
s(g27315
I42
g27316
Vinsert
p85988
I42
VSimpleName: Connection
p85989
tp85990
I1
s(g13061
I42
g13062
Vinsert
p85991
I45
VStringLiteral: "\u005ctAND (`buyer_resource`.`AVAILABLE_COUNT` IS ?)\u005cn"
p85992
tp85993
I1
s(g56684
I42
g56685
Vinsert
p85994
I43
VSimpleType: StringBuffer
p85995
tp85996
I1
s(g10438
I42
g10439
Vinsert
p85997
I43
VSimpleType: String
p85998
tp85999
I4
s(g5685
I42
g5686
Vinsert
p86000
I42
VSimpleName: newCondition
p86001
tp86002
I1
s(g7807
I42
g7808
Vinsert
p86003
I41
VReturnStatement
p86004
tp86005
I16
s(g20975
I42
g20976
Vinsert
p86006
I43
VSimpleType: String
p86007
tp86008
I1
s(g6212
I42
g6213
Vinsert
p86009
I42
VSimpleName: Override
p86010
tp86011
I2
s(g6212
I42
g6213
Vinsert
p86012
I42
VSimpleName: getDataSource
p86013
tp86014
I2
s(g9934
I42
g9935
Vinsert
p86015
I45
VStringLiteral: "`a`"
p86016
tp86017
I1
s(g3409
I42
g3410
Vinsert
p86018
I42
VSimpleName: statValue
p86019
tp86020
I2
s(g6707
I42
g6708
Vinsert
p86021
I43
VSimpleType: StringBuilder
p86022
tp86023
I2
s(g40673
I42
g40674
Vinsert
p86024
I42
VSimpleName: statement
p86025
tp86026
I3
s(g19043
I42
g19044
Vinsert
p86027
I42
VSimpleName: statementList
p86028
tp86029
I2
s(g181
I42
g182
Vinsert
p86030
I42
VSimpleName: stmtCloned
p86031
tp86032
I2
s(g13166
I42
g13167
Vinsert
p86033
I33
VNullLiteral
p86034
tp86035
I1
s(g27355
I42
g27356
Vinsert
p86036
I32
VMethodInvocation
p86037
tp86038
I3
s(g9150
I42
g9151
Vinsert
p86039
I43
VSimpleType: Exception
p86040
tp86041
I1
s(g85777
I42
g85778
Vinsert
p86042
I43
VSimpleType: PGExtractExpr
p86043
tp86044
I2
s(g1294
I42
g1295
Vinsert
p86045
I42
VSimpleName: DruidDriver
p86046
tp86047
I2
s(g7201
I42
g7202
Vinsert
p86048
I8
VBlock
p86049
tp86050
I3
s(g19565
I42
g19566
Vinsert
p86051
I45
VStringLiteral: "\u005ct`c_text` text COMMENT 'text',\u005cn"
p86052
tp86053
I3
s(g4457
I42
g4458
Vinsert
p86054
I42
VSimpleName: put
p86055
tp86056
I2
s(g9778
I42
g9779
Vinsert
p86057
I42
VSimpleName: item
p86058
tp86059
I1
s(g5053
I42
g5054
Vinsert
p86060
I45
VStringLiteral: "com.mysql.jdbc.Util"
p86061
tp86062
I1
s(Vinsert
p86063
I42
VSimpleName: endVisit
p86064
Vinsert
p86065
I42
VSimpleName: getTable
p86066
tp86067
I1
s(g2940
I42
g2941
Vinsert
p86068
I7
VAssignment: =
p86069
tp86070
I1
s(g7201
I42
g7202
Vinsert
p86071
I22
VFieldAccess
p86072
tp86073
I1
s(g542
I42
g543
Vinsert
p86074
I45
VStringLiteral: "\u005ct\u005ct'VerifyMobile', \u005cn"
p86075
tp86076
I1
s(g3631
I42
g3632
Vinsert
p86077
I32
VMethodInvocation
p86078
tp86079
I1
s(g13617
I42
g13618
Vinsert
p86080
I42
VSimpleName: resultSql
p86081
tp86082
I1
s(g7547
I42
g7548
Vinsert
p86083
I45
VStringLiteral: ")"
p86084
tp86085
I2
s(g49441
I42
g49442
Vinsert
p86086
I42
VSimpleName: JdbcStatManager
p86087
tp86088
I1
s(g40136
I42
g40137
Vinsert
p86089
I42
VSimpleName: SQLExpr
p86090
tp86091
I1
s(g26409
I42
g26410
Vinsert
p86092
I45
VStringLiteral: "\u005cnfrom shop a join sale_detail b"
p86093
tp86094
I1
s(g9727
I42
g9728
Vinsert
p86095
I14
VClassInstanceCreation
p86096
tp86097
I2
s(g3108
I42
g3109
Vinsert
p86098
I42
VSimpleName: result
p86099
tp86100
I1
s(g2504
I42
g2505
Vinsert
p86101
I21
VExpressionStatement
p86102
tp86103
I2
s(g4941
I42
g4942
Vinsert
p86104
I12
VCatchClause
p86105
tp86106
I1
s(g3836
I42
g3837
Vinsert
p86107
I11
VCastExpression
p86108
tp86109
I1
s(g63938
I42
g63939
Vinsert
p86110
I45
VStringLiteral: "CLOSE "
p86111
tp86112
I1
s(g6893
I42
g6894
Vinsert
p86113
I8
VBlock
p86114
tp86115
I1
s(g4080
I42
g4081
Vinsert
p86116
I14
VClassInstanceCreation
p86117
tp86118
I2
s(g23154
I42
g23155
Vinsert
p86119
I42
VSimpleName: getParent
p86120
tp86121
I2
s(g4204
I42
g4205
Vinsert
p86122
I45
VStringLiteral: "\u005ctAND l_shipdate < DATE '1993-01-01' + INTERVAL '3' MONTH\u005cn"
p86123
tp86124
I1
s(g4579
I42
g4580
Vinsert
p86125
I52
VThisExpression
p86126
tp86127
I6
s(Vinsert
p86128
I42
VSimpleName: evalExpr
p86129
Vinsert
p86130
I42
VSimpleName: log
p86131
tp86132
I1
s(g13066
I42
g13067
Vinsert
p86133
I60
VVariableDeclarationStatement
p86134
tp86135
I2
s(g2925
I42
g2926
Vinsert
p86136
I10
VBreakStatement
p86137
tp86138
I2
s(g5792
I42
g5793
Vinsert
p86139
I45
VStringLiteral: "ALTER USER"
p86140
tp86141
I1
s(g20725
I42
g20726
Vinsert
p86142
I42
VSimpleName: sql
p86143
tp86144
I4
s(g78853
I42
g78854
Vinsert
p86145
I45
VStringLiteral: "COMPRESS\u005cn"
p86146
tp86147
I3
s(g286
I42
g287
Vinsert
p86148
I59
VVariableDeclarationFragment
p86149
tp86150
I1
s(g2489
I42
g2490
Vinsert
p86151
I32
VMethodInvocation
p86152
tp86153
I2
s(g32766
I42
g32767
Vinsert
p86154
I42
VSimpleName: config
p86155
tp86156
I1
s(g40678
I42
g40679
Vinsert
p86157
I42
VSimpleName: MySqlWallTest3
p86158
tp86159
I1
s(g7702
I42
g7703
Vinsert
p86160
I44
VSingleVariableDeclaration
p86161
tp86162
I1
s(g2875
I42
g2876
Vinsert
p86163
I42
VSimpleName: f_test_proxool
p86164
tp86165
I2
s(g11150
I42
g11151
Vinsert
p86166
I41
VReturnStatement
p86167
tp86168
I5
s(g46203
I42
g46204
Vinsert
p86169
I42
VSimpleName: getConfig
p86170
tp86171
I1
s(g2213
I42
g2214
Vinsert
p86172
I25
VIfStatement
p86173
tp86174
I1
s(g19777
I42
g19778
Vinsert
p86175
I42
VSimpleName: setLimit
p86176
tp86177
I1
s(g12758
I42
g12759
Vinsert
p86178
I42
VSimpleName: dataSource
p86179
tp86180
I3
s(g14123
I42
g14124
Vinsert
p86181
I42
VSimpleName: equalsIgnoreCase
p86182
tp86183
I1
s(g12019
I42
g12020
Vinsert
p86184
I39
VPrimitiveType: void
p86185
tp86186
I1
s(g8067
I42
g8068
Vinsert
p86187
I42
VSimpleName: scanner
p86188
tp86189
I1
s(g16723
I42
g16724
Vinsert
p86190
I45
VStringLiteral: "PIPE"
p86191
tp86192
I1
s(g11511
I42
g11512
Vinsert
p86193
I42
VSimpleName: hash
p86194
tp86195
I1
s(g36992
I42
g36993
Vinsert
p86196
I42
VSimpleName: incrementIndent
p86197
tp86198
I1
s(g15299
I42
g15300
Vinsert
p86199
I39
VPrimitiveType: int
p86200
tp86201
I1
s(g16178
I42
g16179
Vinsert
p86202
I45
VStringLiteral: "WHERE task_id IN (SELECT task_id AS b\u005cn"
p86203
tp86204
I1
s(g25152
I42
g25153
Vinsert
p86205
I78
VMarkerAnnotation
p86206
tp86207
I1
s(g23088
I42
g23089
Vinsert
p86208
I42
VSimpleName: SYS_PROP_CONFIG_KEY
p86209
tp86210
I1
s(Vinsert
p86211
I42
VSimpleName: visit
p86212
Vinsert
p86213
I42
VSimpleName: timeZone
p86214
tp86215
I1
s(g3674
I42
g3675
Vinsert
p86216
I42
VSimpleName: ucase
p86217
tp86218
I1
s(g1660
I42
g1661
Vinsert
p86219
I44
VSingleVariableDeclaration
p86220
tp86221
I1
s(g32494
I42
g32495
Vinsert
p86222
I43
VSimpleType: PGPointExpr
p86223
tp86224
I2
s(g25573
I42
g25574
Vinsert
p86225
I42
VSimpleName: obj
p86226
tp86227
I2
s(g13677
I42
g13678
Vinsert
p86228
I42
VSimpleName: leftExprTableSource
p86229
tp86230
I1
s(g1564
I42
g1565
Vinsert
p86231
I32
VMethodInvocation
p86232
tp86233
I6
s(g25961
I42
g25962
Vinsert
p86234
I32
VMethodInvocation
p86235
tp86236
I11
s(g2977
I42
g2978
Vinsert
p86237
I45
VStringLiteral: "WITH\u005cn"
p86238
tp86239
I1
s(g5757
I42
g5758
Vinsert
p86240
I21
VExpressionStatement
p86241
tp86242
I3
s(g4921
I42
g4922
Vinsert
p86243
I42
VSimpleName: isSibings
p86244
tp86245
I1
s(g27722
I42
g27723
Vinsert
p86246
I42
VSimpleName: setResultSetConcurrency
p86247
tp86248
I1
s(g26080
I42
g26081
Vinsert
p86249
I42
VSimpleName: TraceEvent
p86250
tp86251
I1
s(g13622
I42
g13623
Vinsert
p86252
I42
VSimpleName: ex
p86253
tp86254
I4
s(g2034
I42
g2035
Vinsert
p86255
I5
VArrayType: Object[]
p86256
tp86257
I1
s(g7002
I42
g7003
Vinsert
p86258
I42
VSimpleName: String
p86259
tp86260
I2
s(g28221
I42
g28222
Vinsert
p86261
I42
VSimpleName: oracleConn
p86262
tp86263
I2
s(g5974
I42
g5975
Vinsert
p86264
I53
VThrowStatement
p86265
tp86266
I1
s(g733
I42
g734
Vinsert
p86267
I1
VAnonymousClassDeclaration
p86268
tp86269
I7
s(g11072
I42
g11073
Vinsert
p86270
I34
VNumberLiteral: 0
p86271
tp86272
I1
s(g20065
I42
g20066
Vinsert
p86273
I43
VSimpleType: SQLTableConstraint
p86274
tp86275
I1
s(g5859
I42
g5860
Vinsert
p86276
I21
VExpressionStatement
p86277
tp86278
I1
s(g2449
I42
g2450
Vinsert
p86279
I42
VSimpleName: SQLPartitionByHash
p86280
tp86281
I2
s(g11585
I42
g11586
Vinsert
p86282
I42
VSimpleName: replaceCount
p86283
tp86284
I1
s(g25624
I42
g25625
Vinsert
p86285
I42
VSimpleName: user
p86286
tp86287
I10
s(g65934
I42
g65935
Vinsert
p86288
I42
VSimpleName: thread
p86289
tp86290
I4
s(g24384
I42
g24385
Vinsert
p86291
I42
VSimpleName: assertEquals
p86292
tp86293
I2
s(g25422
I42
g25423
Vinsert
p86294
I42
VSimpleName: stmt
p86295
tp86296
I2
s(g14951
I42
g14952
Vinsert
p86297
I43
VSimpleType: SQLException
p86298
tp86299
I23
s(g7996
I42
g7997
Vinsert
p86300
I42
VSimpleName: x
p86301
tp86302
I29
s(g42520
I42
g42521
Vinsert
p86303
I42
VSimpleName: cos
p86304
tp86305
I1
s(g9554
I42
g9555
Vinsert
p86306
I52
VThisExpression
p86307
tp86308
I1
s(g49579
I42
g49580
Vinsert
p86309
I40
VQualifiedName: JdbcConstants.MYSQL
p86310
tp86311
I4
s(g8399
I42
g8400
Vinsert
p86312
I45
VStringLiteral: "select @@version_compile_os"
p86313
tp86314
I1
s(g11727
I42
g11728
Vinsert
p86315
I42
VSimpleName: sessionId
p86316
tp86317
I2
s(g11935
I42
g11936
Vinsert
p86318
I42
VSimpleName: clone
p86319
tp86320
I1
s(g5892
I42
g5893
Vinsert
p86321
I42
VSimpleName: Lexer
p86322
tp86323
I1
s(g2069
I42
g2070
Vinsert
p86324
I25
VIfStatement
p86325
tp86326
I1
s(g728
I42
g729
Vinsert
p86327
I46
VSuperConstructorInvocation
p86328
tp86329
I1
s(g5450
I42
g5451
Vinsert
p86330
I2
VArrayAccess
p86331
tp86332
I1
s(g7792
I42
g7793
Vinsert
p86333
I31
VMethodDeclaration
p86334
tp86335
I1
s(g10438
I42
g10439
Vinsert
p86336
I32
VMethodInvocation
p86337
tp86338
I5
s(g2408
I42
g2409
Vinsert
p86339
I39
VPrimitiveType: int
p86340
tp86341
I2
s(g22214
I42
g22215
Vinsert
p86342
I43
VSimpleType: String
p86343
tp86344
I3
s(g652
I42
g653
Vinsert
p86345
I74
VParameterizedType: List<Map<String,Object>>
p86346
tp86347
I1
s(g9150
I42
g9151
Vinsert
p86348
I39
VPrimitiveType: void
p86349
tp86350
I1
s(g6036
I42
g6037
Vinsert
p86351
I42
VSimpleName: isInMemoryMetadata
p86352
tp86353
I1
s(g10195
I42
g10196
Vinsert
p86354
I45
VStringLiteral: "\u005cn\u005ctpromo_category VARCHAR2(15),"
p86355
tp86356
I4
s(g12653
I42
g12654
Vinsert
p86357
I42
VSimpleName: MySqlBinlogStatement
p86358
tp86359
I2
s(g13504
I42
g13505
Vinsert
p86360
I60
VVariableDeclarationStatement
p86361
tp86362
I5
s(g32617
I42
g32618
Vinsert
p86363
I43
VSimpleType: Driver
p86364
tp86365
I1
s(g26393
I42
g26394
Vinsert
p86366
I42
VSimpleName: stringVal
p86367
tp86368
I4
s(g5515
I42
g5516
Vinsert
p86369
I42
VSimpleName: run
p86370
tp86371
I1
s(g22538
I42
g22539
Vinsert
p86372
I42
VSimpleName: item
p86373
tp86374
I1
s(g31366
I42
g31367
Vinsert
p86375
I45
VStringLiteral: "A"
p86376
tp86377
I1
s(g10581
I42
g10582
Vinsert
p86378
I39
VPrimitiveType: void
p86379
tp86380
I2
s(g1145
I42
g1146
Vinsert
p86381
I25
VIfStatement
p86382
tp86383
I1
s(g901
I42
g902
Vinsert
p86384
I21
VExpressionStatement
p86385
tp86386
I8
s(g14039
I42
g14040
Vinsert
p86387
I54
VTryStatement
p86388
tp86389
I4
s(g5964
I42
g5965
Vinsert
p86390
I43
VSimpleType: ObjectName
p86391
tp86392
I2
s(g18145
I42
g18146
Vinsert
p86393
I21
VExpressionStatement
p86394
tp86395
I1
s(g2895
I42
g2896
Vinsert
p86396
I32
VMethodInvocation
p86397
tp86398
I10
s(g6645
I42
g6646
Vinsert
p86399
I42
VSimpleName: SchemaStatVisitor
p86400
tp86401
I16
s(g12138
I42
g12139
Vinsert
p86402
I45
VStringLiteral: "FROM invoice\u005cn"
p86403
tp86404
I1
s(g547
I42
g548
Vinsert
p86405
I45
VStringLiteral: "FROM tb_001 v, tb_002 c\u005cn"
p86406
tp86407
I1
s(g3495
I42
g3496
Vinsert
p86408
I52
VThisExpression
p86409
tp86410
I4
s(g15991
I42
g15992
Vinsert
p86411
I43
VSimpleType: SQLParameter
p86412
tp86413
I2
s(g2805
I42
g2806
Vinsert
p86414
I60
VVariableDeclarationStatement
p86415
tp86416
I1
s(g40598
I42
g40599
Vinsert
p86417
I42
VSimpleName: entity
p86418
tp86419
I1
s(g3467
I42
g3468
Vinsert
p86420
I33
VNullLiteral
p86421
tp86422
I1
s(g20806
I42
g20807
Vinsert
p86423
I45
VStringLiteral: "TINYINT"
p86424
tp86425
I1
s(g3144
I42
g3145
Vinsert
p86426
I32
VMethodInvocation
p86427
tp86428
I8
s(g38499
I42
g38500
Vinsert
p86429
I39
VPrimitiveType: void
p86430
tp86431
I6
s(g12019
I42
g12020
Vinsert
p86432
I42
VSimpleName: initCheck
p86433
tp86434
I2
s(g14155
I42
g14156
Vinsert
p86435
I32
VMethodInvocation
p86436
tp86437
I1
s(Vinsert
p86438
I42
VSimpleName: append
p86439
Vinsert
p86440
I42
VSimpleName: not
p86441
tp86442
I1
s(g1100
I42
g1101
Vinsert
p86443
I42
VSimpleName: decrypter
p86444
tp86445
I2
s(g2515
I42
g2516
Vinsert
p86446
I59
VVariableDeclarationFragment
p86447
tp86448
I2
s(g4579
I42
g4580
Vinsert
p86449
I42
VSimpleName: isForUpdate
p86450
tp86451
I1
s(g38788
I42
g38789
Vinsert
p86452
I45
VStringLiteral: "relationShip : "
p86453
tp86454
I1
s(g17652
I42
g17653
Vinsert
p86455
I39
VPrimitiveType: boolean
p86456
tp86457
I12
s(g10687
I42
g10688
Vinsert
p86458
I21
VExpressionStatement
p86459
tp86460
I1
s(g8914
I42
g8915
Vinsert
p86461
I43
VSimpleType: HADataSource
p86462
tp86463
I1
s(g2049
I42
g2050
Vinsert
p86464
I45
VStringLiteral: "PCTFREE 10\u005cn"
p86465
tp86466
I6
s(g3149
I42
g3150
Vinsert
p86467
I42
VSimpleName: condition
p86468
tp86469
I1
s(g2173
I42
g2174
Vinsert
p86470
I39
VPrimitiveType: boolean
p86471
tp86472
I1
s(g17526
I42
g17527
Vinsert
p86473
I42
VSimpleName: getLimit
p86474
tp86475
I1
s(g7039
I42
g7040
Vinsert
p86476
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION ch_p,"
p86477
tp86478
I2
s(g10262
I42
g10263
Vinsert
p86479
I40
VQualifiedName: Token.NOT
p86480
tp86481
I1
s(g52783
I42
g52784
Vinsert
p86482
I40
VQualifiedName: Boolean.FALSE
p86483
tp86484
I1
s(g1271
I42
g1272
Vinsert
p86485
I27
VInfixExpression: ==
p86486
tp86487
I2
s(g733
I42
g734
Vinsert
p86488
I42
VSimpleName: startLatch
p86489
tp86490
I8
s(g34294
I42
g34295
Vinsert
p86491
I45
VStringLiteral: "create table"
p86492
tp86493
I1
s(g8306
I42
g8307
Vinsert
p86494
I8
VBlock
p86495
tp86496
I3
s(g24699
I42
g24700
Vinsert
p86497
I42
VSimpleName: set
p86498
tp86499
I1
s(g1835
I42
g1836
Vinsert
p86500
I25
VIfStatement
p86501
tp86502
I1
s(g19302
I42
g19303
Vinsert
p86503
I45
VStringLiteral: "\u005ct\u005ctTABLESPACE \u005c"APPDATA1M\u005c"\u005cn"
p86504
tp86505
I1
s(g14295
I42
g14296
Vinsert
p86506
I45
VStringLiteral: "ROLLUP"
p86507
tp86508
I1
s(g24085
I42
g24086
Vinsert
p86509
I45
VStringLiteral: "User.insert"
p86510
tp86511
I2
s(Vinsert
p86512
I42
VSimpleName: nextToken
p86513
Vinsert
p86514
I40
VQualifiedName: Token.ALTER
p86515
tp86516
I2
s(g25811
I42
g25812
Vinsert
p86517
I42
VSimpleName: acceptIdentifier
p86518
tp86519
I4
s(g71093
I42
g71094
Vinsert
p86520
I45
VStringLiteral: "trim_option"
p86521
tp86522
I1
s(g18192
I42
g18193
Vinsert
p86523
I42
VSimpleName: resultSet
p86524
tp86525
I2
s(g2130
I42
g2131
Vinsert
p86526
I42
VSimpleName: SQLException
p86527
tp86528
I1
s(g18049
I42
g18050
Vinsert
p86529
I40
VQualifiedName: Token.WHERE
p86530
tp86531
I2
s(Vinsert
p86532
I42
VSimpleName: assertEquals
p86533
Vinsert
p86534
I45
VStringLiteral: "\u005cn\u005ctOPTIMIZE PARTITION ALL"
p86535
tp86536
I1
s(g8868
I42
g8869
Vinsert
p86537
I42
VSimpleName: String
p86538
tp86539
I3
s(g4283
I42
g4284
Vinsert
p86540
I8
VBlock
p86541
tp86542
I1
s(g7537
I42
g7538
Vinsert
p86543
I21
VExpressionStatement
p86544
tp86545
I1
s(g11484
I42
g11485
Vinsert
p86546
I42
VSimpleName: SQLName
p86547
tp86548
I4
s(g1012
I42
g1013
Vinsert
p86549
I27
VInfixExpression: !=
p86550
tp86551
I3
s(Vinsert
p86552
I42
VSimpleName: visit
p86553
Vinsert
p86554
I43
VSimpleType: SQLBinaryOpExpr
p86555
tp86556
I1
s(Vinsert
p86557
I42
VSimpleName: append
p86558
Vinsert
p86559
I42
VSimpleName: where
p86560
tp86561
I2
s(g42013
I42
g42014
Vinsert
p86562
I41
VReturnStatement
p86563
tp86564
I1
s(g14316
I42
g14317
Vinsert
p86565
I27
VInfixExpression: !=
p86566
tp86567
I1
s(g68021
I42
g68022
Vinsert
p86568
I42
VSimpleName: statement
p86569
tp86570
I1
s(g6343
I42
g6344
Vinsert
p86571
I42
VSimpleName: Exception
p86572
tp86573
I2
s(g6722
I42
g6723
Vinsert
p86574
I45
VStringLiteral: "\u005ctDBMS_OUTPUT.put_line('Hello World!');\u005cn"
p86575
tp86576
I1
s(g9456
I42
g9457
Vinsert
p86577
I42
VSimpleName: primaryKey
p86578
tp86579
I1
s(g27572
I42
g27573
Vinsert
p86580
I45
VStringLiteral: ", not true"
p86581
tp86582
I1
s(g33018
I42
g33019
Vinsert
p86583
I42
VSimpleName: getWhere
p86584
tp86585
I1
s(g69264
I42
g69265
Vinsert
p86586
I42
VSimpleName: partitionCount
p86587
tp86588
I5
s(g72432
I42
g72433
Vinsert
p86589
I42
VSimpleName: comments
p86590
tp86591
I6
s(g2289
I42
g2290
Vinsert
p86592
I34
VNumberLiteral: 1
p86593
tp86594
I1
s(g7947
I42
g7948
Vinsert
p86595
I83
VModifier: public
p86596
tp86597
I5
s(g7532
I42
g7533
Vinsert
p86598
I21
VExpressionStatement
p86599
tp86600
I2
s(g9603
I42
g9604
Vinsert
p86601
I42
VSimpleName: incrementIndent
p86602
tp86603
I1
s(g10864
I42
g10865
Vinsert
p86604
I42
VSimpleName: String
p86605
tp86606
I1
s(g32761
I42
g32762
Vinsert
p86607
I45
VStringLiteral: "'"
p86608
tp86609
I1
s(g9934
I42
g9935
Vinsert
p86610
I42
VSimpleName: SQLColumnDefinition
p86611
tp86612
I1
s(g28559
I42
g28560
Vinsert
p86613
I42
VSimpleName: val
p86614
tp86615
I1
s(g23761
I42
g23762
Vinsert
p86616
I43
VSimpleType: WallConfig
p86617
tp86618
I3
s(g10779
I42
g10780
Vinsert
p86619
I42
VSimpleName: cloneTo
p86620
tp86621
I1
s(g24526
I42
g24527
Vinsert
p86622
I42
VSimpleName: WallContext
p86623
tp86624
I2
s(g8891
I42
g8892
Vinsert
p86625
I34
VNumberLiteral: 10
p86626
tp86627
I2
s(g17793
I42
g17794
Vinsert
p86628
I42
VSimpleName: root
p86629
tp86630
I1
s(g7201
I42
g7202
Vinsert
p86631
I54
VTryStatement
p86632
tp86633
I1
s(g7807
I42
g7808
Vinsert
p86634
I78
VMarkerAnnotation
p86635
tp86636
I12
s(g13973
I42
g13974
Vinsert
p86637
I42
VSimpleName: getDecrypter
p86638
tp86639
I1
s(g9652
I42
g9653
Vinsert
p86640
I21
VExpressionStatement
p86641
tp86642
I1
s(g6005
I42
g6006
Vinsert
p86643
I42
VSimpleName: SQLServerWallProvider
p86644
tp86645
I1
s(g1888
I42
g1889
Vinsert
p86646
I42
VSimpleName: rs
p86647
tp86648
I1
s(g2140
I42
g2141
Vinsert
p86649
I32
VMethodInvocation
p86650
tp86651
I11
s(g25074
I42
g25075
Vinsert
p86652
I42
VSimpleName: ownerName
p86653
tp86654
I1
s(g26526
I42
g26527
Vinsert
p86655
I42
VSimpleName: SQLStatement
p86656
tp86657
I17
s(g13818
I42
g13819
Vinsert
p86658
I44
VSingleVariableDeclaration
p86659
tp86660
I8
s(g1279
I42
g1280
Vinsert
p86661
I42
VSimpleName: addTrace
p86662
tp86663
I1
s(g6577
I42
g6578
Vinsert
p86664
I45
VStringLiteral: "FROM xxxxx\u005cn"
p86665
tp86666
I2
s(g38094
I42
g38095
Vinsert
p86667
I42
VSimpleName: nextToken
p86668
tp86669
I1
s(g30209
I42
g30210
Vinsert
p86670
I42
VSimpleName: e
p86671
tp86672
I1
s(g2543
I42
g2544
Vinsert
p86673
I21
VExpressionStatement
p86674
tp86675
I7
s(g50302
I42
g50303
Vinsert
p86676
I42
VSimpleName: OdpsSelectParser
p86677
tp86678
I2
s(g45686
I42
g45687
Vinsert
p86679
I25
VIfStatement
p86680
tp86681
I1
s(g78216
I42
g78217
Vinsert
p86682
I43
VSimpleType: SQLServerSchemaStatVisitor
p86683
tp86684
I1
s(g8409
I42
g8410
Vinsert
p86685
I52
VThisExpression
p86686
tp86687
I1
s(g5053
I42
g5054
Vinsert
p86688
I60
VVariableDeclarationStatement
p86689
tp86690
I3
s(g18801
I42
g18802
Vinsert
p86691
I42
VSimpleName: assertEquals
p86692
tp86693
I2
s(g20540
I42
g20541
Vinsert
p86694
I43
VSimpleType: MockConnection
p86695
tp86696
I1
s(g11696
I42
g11697
Vinsert
p86697
I45
VStringLiteral: "WHERE rbi.rma_id > ?\u005cn"
p86698
tp86699
I1
s(Vinsert
p86700
I42
VSimpleName: append
p86701
Vinsert
p86702
I34
VNumberLiteral: 10000
p86703
tp86704
I1
s(g30209
I42
g30210
Vinsert
p86705
I42
VSimpleName: OptionParseException
p86706
tp86707
I1
s(g38309
I42
g38310
Vinsert
p86708
I9
VBooleanLiteral: true
p86709
tp86710
I1
s(g16888
I42
g16889
Vinsert
p86711
I59
VVariableDeclarationFragment
p86712
tp86713
I1
s(g18680
I42
g18681
Vinsert
p86714
I43
VSimpleType: String
p86715
tp86716
I2
s(g14110
I42
g14111
Vinsert
p86717
I42
VSimpleName: Clob
p86718
tp86719
I4
s(g47957
I42
g47958
Vinsert
p86720
I42
VSimpleName: incrementJdbcResultSetOpenCount
p86721
tp86722
I1
s(g9791
I42
g9792
Vinsert
p86723
I74
VParameterizedType: LinkedHashMap<Integer,Object>
p86724
tp86725
I1
s(g5941
I42
g5942
Vinsert
p86726
I42
VSimpleName: writer
p86727
tp86728
I3
s(Vinsert
p86729
I42
VSimpleName: parseStatements
p86730
Vinsert
p86731
I45
VStringLiteral: "select c1 from t1 t where t.c2=1 and (t.c3=1 or t.c3=5)"
p86732
tp86733
I1
s(g38258
I42
g38259
Vinsert
p86734
I42
VSimpleName: setLastError
p86735
tp86736
I1
s(g22364
I42
g22365
Vinsert
p86737
I45
VStringLiteral: "alter index idx_t1 rebuild"
p86738
tp86739
I1
s(g8687
I42
g8688
Vinsert
p86740
I32
VMethodInvocation
p86741
tp86742
I1
s(g9524
I42
g9525
Vinsert
p86743
I45
VStringLiteral: "\u005ct\u005ct\u005ctand mm = 0\u005cn"
p86744
tp86745
I1
s(g1425
I42
g1426
Vinsert
p86746
I44
VSingleVariableDeclaration
p86747
tp86748
I1
s(g53593
I42
g53594
Vinsert
p86749
I43
VSimpleType: SQLRollbackStatement
p86750
tp86751
I2
s(g47437
I42
g47438
Vinsert
p86752
I45
VStringLiteral: "mysql"
p86753
tp86754
I1
s(g16240
I42
g16241
Vinsert
p86755
I45
VStringLiteral: "\u005ctTABLESPACE \u005c"ZEUS_IND\u005c"\u005cn"
p86756
tp86757
I1
s(g3327
I42
g3328
Vinsert
p86758
I43
VSimpleType: SQLQueryExpr
p86759
tp86760
I1
s(g3788
I42
g3789
Vinsert
p86761
I32
VMethodInvocation
p86762
tp86763
I5
s(g3282
I42
g3283
Vinsert
p86764
I8
VBlock
p86765
tp86766
I1
s(g9909
I42
g9910
Vinsert
p86767
I34
VNumberLiteral: 0
p86768
tp86769
I139
s(g1700
I42
g1701
Vinsert
p86770
I42
VSimpleName: config
p86771
tp86772
I2
s(g9608
I42
g9609
Vinsert
p86773
I42
VSimpleName: keyFactory
p86774
tp86775
I1
s(g40231
I42
g40232
Vinsert
p86776
I21
VExpressionStatement
p86777
tp86778
I6
s(g19115
I42
g19116
Vinsert
p86779
I9
VBooleanLiteral: false
p86780
tp86781
I1
s(g2890
I42
g2891
Vinsert
p86782
I74
VParameterizedType: List<Object>
p86783
tp86784
I1
s(g8052
I42
g8053
Vinsert
p86785
I42
VSimpleName: setParamType
p86786
tp86787
I1
s(g9704
I42
g9705
Vinsert
p86788
I42
VSimpleName: comp
p86789
tp86790
I1
s(g2001
I42
g2002
Vinsert
p86791
I42
VSimpleName: assertTrue
p86792
tp86793
I1
s(g1544
I42
g1545
Vinsert
p86794
I45
VStringLiteral: ")"
p86795
tp86796
I3
s(g8052
I42
g8053
Vinsert
p86797
I42
VSimpleName: lexer
p86798
tp86799
I1
s(g22826
I42
g22827
Vinsert
p86800
I42
VSimpleName: print0
p86801
tp86802
I2
s(g12911
I42
g12912
Vinsert
p86803
I27
VInfixExpression: +
p86804
tp86805
I1
s(g20092
I42
g20093
Vinsert
p86806
I42
VSimpleName: getValidConnectionCheckerClassName
p86807
tp86808
I1
s(g2852
I42
g2853
Vinsert
p86809
I43
VSimpleType: InsertIntoClause
p86810
tp86811
I1
s(g16256
I42
g16257
Vinsert
p86812
I42
VSimpleName: PGPolygonExpr
p86813
tp86814
I1
s(g16359
I42
g16360
Vinsert
p86815
I42
VSimpleName: passoword
p86816
tp86817
I1
s(g18907
I42
g18908
Vinsert
p86818
I45
VStringLiteral: "        ADD COLUMN variation_value_4 DECIMAL(30, 20) NULL DEFAULT NULL,\u005cn"
p86819
tp86820
I1
s(g1501
I42
g1502
Vinsert
p86821
I43
VSimpleType: Object
p86822
tp86823
I1
s(g45596
I42
g45597
Vinsert
p86824
I42
VSimpleName: visitor
p86825
tp86826
I355
s(g7827
I42
g7828
Vinsert
p86827
I25
VIfStatement
p86828
tp86829
I1
s(g20715
I42
g20716
Vinsert
p86830
I45
VStringLiteral: "\u005ct, `destination`, `start_standard`, `start_fee`, `add_standard`, `add_fee`\u005cn"
p86831
tp86832
I1
s(g17408
I42
g17409
Vinsert
p86833
I42
VSimpleName: String
p86834
tp86835
I1
s(Vinsert
p86836
I42
VSimpleName: assertEquals
p86837
Vinsert
p86838
I42
VSimpleName: EvalMethodTest_substring_4
p86839
tp86840
I1
s(g5528
I42
g5529
Vinsert
p86841
I33
VNullLiteral
p86842
tp86843
I1
s(g4258
I42
g4259
Vinsert
p86844
I42
VSimpleName: visitor
p86845
tp86846
I1
s(g5485
I42
g5486
Vinsert
p86847
I21
VExpressionStatement
p86848
tp86849
I2
s(g20288
I42
g20289
Vinsert
p86850
I72
VEnumConstantDeclaration
p86851
tp86852
I2
s(g15991
I42
g15992
Vinsert
p86853
I27
VInfixExpression: ==
p86854
tp86855
I3
s(g16980
I42
g16981
Vinsert
p86856
I42
VSimpleName: metaDataIdSeed
p86857
tp86858
I2
s(g6
I42
g7
Vinsert
p86859
I24
VForStatement
p86860
tp86861
I1
s(Vinsert
p86862
I42
VSimpleName: putAll
p86863
Vinsert
p86864
I42
VSimpleName: map
p86865
tp86866
I4
s(g5475
I42
g5476
Vinsert
p86867
I42
VSimpleName: nanoSpan
p86868
tp86869
I1
s(g3073
I42
g3074
Vinsert
p86870
I8
VBlock
p86871
tp86872
I6
s(g1360
I42
g1361
Vinsert
p86873
I25
VIfStatement
p86874
tp86875
I4
s(g28795
I42
g28796
Vinsert
p86876
I42
VSimpleName: text
p86877
tp86878
I1
s(g27630
I42
g27631
Vinsert
p86879
I43
VSimpleType: RuntimeException
p86880
tp86881
I1
s(g3724
I42
g3725
Vinsert
p86882
I32
VMethodInvocation
p86883
tp86884
I14
s(g16630
I42
g16631
Vinsert
p86885
I21
VExpressionStatement
p86886
tp86887
I5
s(g17125
I42
g17126
Vinsert
p86888
I31
VMethodDeclaration
p86889
tp86890
I2
s(g22364
I42
g22365
Vinsert
p86891
I43
VSimpleType: Exception
p86892
tp86893
I67
s(g20486
I42
g20487
Vinsert
p86894
I59
VVariableDeclarationFragment
p86895
tp86896
I2
s(g36951
I42
g36952
Vinsert
p86897
I33
VNullLiteral
p86898
tp86899
I10
s(g62018
I42
g62019
Vinsert
p86900
I42
VSimpleName: EvalMethodInstrTest
p86901
tp86902
I1
s(g9743
I42
g9744
Vinsert
p86903
I40
VQualifiedName: SQLWithSubqueryClause.Entry
p86904
tp86905
I1
s(g23414
I42
g23415
Vinsert
p86906
I49
VSwitchCase
p86907
tp86908
I1
s(g14442
I42
g14443
Vinsert
p86909
I42
VSimpleName: from
p86910
tp86911
I2
s(g21370
I42
g21371
Vinsert
p86912
I42
VSimpleName: DruidDataSource
p86913
tp86914
I1
s(g12505
I42
g12506
Vinsert
p86915
I43
VSimpleType: ConcurrentMap
p86916
tp86917
I2
s(g16075
I42
g16076
Vinsert
p86918
I42
VSimpleName: i
p86919
tp86920
I1
s(g7947
I42
g7948
Vinsert
p86921
I39
VPrimitiveType: boolean
p86922
tp86923
I5
s(g5877
I42
g5878
Vinsert
p86924
I27
VInfixExpression: &&
p86925
tp86926
I1
s(g4357
I42
g4358
Vinsert
p86927
I43
VSimpleType: PGArrayExpr
p86928
tp86929
I1
s(g7083
I42
g7084
Vinsert
p86930
I42
VSimpleName: quoteTable
p86931
tp86932
I1
s(g13991
I42
g13992
Vinsert
p86933
I43
VSimpleType: PrivilegedAction
p86934
tp86935
I1
s(g7002
I42
g7003
Vinsert
p86936
I42
VSimpleName: getConnection
p86937
tp86938
I2
s(g1968
I42
g1969
Vinsert
p86939
I21
VExpressionStatement
p86940
tp86941
I2
s(g48730
I42
g48731
Vinsert
p86942
I74
VParameterizedType: Map<String,Object>
p86943
tp86944
I1
s(g13191
I42
g13192
Vinsert
p86945
I32
VMethodInvocation
p86946
tp86947
I20
s(g8564
I42
g8565
Vinsert
p86948
I42
VSimpleName: SQLPropertyExpr
p86949
tp86950
I9
s(g11649
I42
g11650
Vinsert
p86951
I42
VSimpleName: OracleExceptionSorter
p86952
tp86953
I2
s(g12758
I42
g12759
Vinsert
p86954
I42
VSimpleName: getProxyFilters
p86955
tp86956
I1
s(g27331
I42
g27332
Vinsert
p86957
I42
VSimpleName: stat
p86958
tp86959
I1
s(g4755
I42
g4756
Vinsert
p86960
I42
VSimpleName: filter
p86961
tp86962
I1
s(g3579
I42
g3580
Vinsert
p86963
I21
VExpressionStatement
p86964
tp86965
I2
s(g10021
I42
g10022
Vinsert
p86966
I42
VSimpleName: HandlerList
p86967
tp86968
I2
s(g9251
I42
g9252
Vinsert
p86969
I42
VSimpleName: match
p86970
tp86971
I1
s(g70182
I42
g70183
Vinsert
p86972
I43
VSimpleType: SQLExpr
p86973
tp86974
I2
s(g1175
I42
g1176
Vinsert
p86975
I42
VSimpleName: tok
p86976
tp86977
I2
s(g8692
I42
g8693
Vinsert
p86978
I7
VAssignment: =
p86979
tp86980
I2
s(g18005
I42
g18006
Vinsert
p86981
I45
VStringLiteral: "\u005cn/*!40101 SET @saved_cs_client     = @@character_set_client */;"
p86982
tp86983
I1
s(g37074
I42
g37075
Vinsert
p86984
I45
VStringLiteral: "\u005c"HT_TASK_TRADE_HISTORY_NEW\u005c""
p86985
tp86986
I1
s(g26531
I42
g26532
Vinsert
p86987
I42
VSimpleName: SQLSelect
p86988
tp86989
I4
s(g4339
I42
g4340
Vinsert
p86990
I34
VNumberLiteral: 0
p86991
tp86992
I2
s(g63139
I42
g63140
Vinsert
p86993
I27
VInfixExpression: !=
p86994
tp86995
I1
s(g30737
I42
g30738
Vinsert
p86996
I41
VReturnStatement
p86997
tp86998
I6
s(g5677
I42
g5678
Vinsert
p86999
I78
VMarkerAnnotation
p87000
tp87001
I3
s(g11574
I42
g11575
Vinsert
p87002
I40
VQualifiedName: Token.LBRACKET
p87003
tp87004
I1
s(g3780
I42
g3781
Vinsert
p87005
I43
VSimpleType: JdbcTemplate
p87006
tp87007
I1
s(g7578
I42
g7579
Vinsert
p87008
I42
VSimpleName: where
p87009
tp87010
I1
s(g2987
I42
g2988
Vinsert
p87011
I42
VSimpleName: SQLName
p87012
tp87013
I4
s(g10731
I42
g10732
Vinsert
p87014
I42
VSimpleName: getCharacterStream
p87015
tp87016
I1
s(g37490
I42
g37491
Vinsert
p87017
I42
VSimpleName: limit
p87018
tp87019
I1
s(g16620
I42
g16621
Vinsert
p87020
I42
VSimpleName: statementLogEnabled
p87021
tp87022
I1
s(g11634
I42
g11635
Vinsert
p87023
I8
VBlock
p87024
tp87025
I1
s(g7678
I42
g7679
Vinsert
p87026
I8
VBlock
p87027
tp87028
I2
s(g11516
I42
g11517
Vinsert
p87029
I42
VSimpleName: PagerUtils
p87030
tp87031
I5
s(g1208
I42
g1209
Vinsert
p87032
I42
VSimpleName: Exception
p87033
tp87034
I1
s(g31
I42
g32
Vinsert
p87035
I42
VSimpleName: aliasMap
p87036
tp87037
I1
s(Vinsert
p87038
I42
VSimpleName: token
p87039
Vinsert
p87040
I40
VQualifiedName: Token.AS
p87041
tp87042
I2
s(g7502
I42
g7503
Vinsert
p87043
I42
VSimpleName: filter
p87044
tp87045
I2
s(g5394
I42
g5395
Vinsert
p87046
I43
VSimpleType: SQLOrderBy
p87047
tp87048
I2
s(g14635
I42
g14636
Vinsert
p87049
I43
VSimpleType: Entity
p87050
tp87051
I1
s(g29488
I42
g29489
Vinsert
p87052
I43
VSimpleType: WebSessionStat
p87053
tp87054
I1
s(g2842
I42
g2843
Vinsert
p87055
I42
VSimpleName: SQLExprTableSource
p87056
tp87057
I1
s(g9959
I42
g9960
Vinsert
p87058
I43
VSimpleType: Environment
p87059
tp87060
I2
s(g14088
I42
g14089
Vinsert
p87061
I34
VNumberLiteral: 0
p87062
tp87063
I1
s(g9493
I42
g9494
Vinsert
p87064
I40
VQualifiedName: System.out
p87065
tp87066
I2
s(g34790
I42
g34791
Vinsert
p87067
I27
VInfixExpression: >
p87068
tp87069
I10
s(g6722
I42
g6723
Vinsert
p87070
I45
VStringLiteral: "END;"
p87071
tp87072
I1
s(g36106
I42
g36107
Vinsert
p87073
I43
VSimpleType: ConfigFilter
p87074
tp87075
I2
s(g13906
I42
g13907
Vinsert
p87076
I42
VSimpleName: attributes
p87077
tp87078
I1
s(g8425
I42
g8426
Vinsert
p87079
I42
VSimpleName: tableStat
p87080
tp87081
I3
s(g7893
I42
g7894
Vinsert
p87082
I42
VSimpleName: e
p87083
tp87084
I2
s(g17428
I42
g17429
Vinsert
p87085
I59
VVariableDeclarationFragment
p87086
tp87087
I4
s(g982
I42
g983
Vinsert
p87088
I13
VCharacterLiteral: 'R'
p87089
tp87090
I1
s(g11330
I42
g11331
Vinsert
p87091
I42
VSimpleName: javaCallSpec
p87092
tp87093
I1
s(g32633
I42
g32634
Vinsert
p87094
I42
VSimpleName: SQLAlterTableRenameColumn
p87095
tp87096
I2
s(g1125
I42
g1126
Vinsert
p87097
I27
VInfixExpression: !=
p87098
tp87099
I1
s(g40719
I42
g40720
Vinsert
p87100
I42
VSimpleName: SQLBinaryOpExpr
p87101
tp87102
I3
s(g17098
I42
g17099
Vinsert
p87103
I42
VSimpleName: resultSetTrace
p87104
tp87105
I6
s(g6655
I42
g6656
Vinsert
p87106
I25
VIfStatement
p87107
tp87108
I1
s(g10368
I42
g10369
Vinsert
p87109
I42
VSimpleName: stackTrace
p87110
tp87111
I1
s(g24067
I42
g24068
Vinsert
p87112
I42
VSimpleName: PGParameter
p87113
tp87114
I2
s(g8373
I42
g8374
Vinsert
p87115
I39
VPrimitiveType: void
p87116
tp87117
I2
s(g3093
I42
g3094
Vinsert
p87118
I52
VThisExpression
p87119
tp87120
I1
s(g63287
I42
g63288
Vinsert
p87121
I11
VCastExpression
p87122
tp87123
I2
s(g1370
I42
g1371
Vinsert
p87124
I8
VBlock
p87125
tp87126
I1
s(g4490
I42
g4491
Vinsert
p87127
I43
VSimpleType: MySqlSelectQueryBlock
p87128
tp87129
I4
s(g4152
I42
g4153
Vinsert
p87130
I42
VSimpleName: realName
p87131
tp87132
I2
s(g19144
I42
g19145
Vinsert
p87133
I62
VInstanceofExpression
p87134
tp87135
I3
s(g19404
I42
g19405
Vinsert
p87136
I42
VSimpleName: type
p87137
tp87138
I1
s(g13784
I42
g13785
Vinsert
p87139
I83
VModifier: final
p87140
tp87141
I1
s(g71440
I42
g71441
Vinsert
p87142
I34
VNumberLiteral: 0
p87143
tp87144
I1
s(g1496
I42
g1497
Vinsert
p87145
I27
VInfixExpression: +
p87146
tp87147
I2
s(g6
I42
g7
Vinsert
p87148
I34
VNumberLiteral: 1
p87149
tp87150
I1
s(g2364
I42
g2365
Vinsert
p87151
I32
VMethodInvocation
p87152
tp87153
I2
s(g38499
I42
g38500
Vinsert
p87154
I31
VMethodDeclaration
p87155
tp87156
I4
s(g20856
I42
g20857
Vinsert
p87157
I42
VSimpleName: updateSetItem
p87158
tp87159
I1
s(g30732
I42
g30733
Vinsert
p87160
I43
VSimpleType: StringBuffer
p87161
tp87162
I2
s(g19043
I42
g19044
Vinsert
p87163
I43
VSimpleType: SQLStatement
p87164
tp87165
I1
s(g33627
I42
g33628
Vinsert
p87166
I42
VSimpleName: variantIndex
p87167
tp87168
I1
s(g9222
I42
g9223
Vinsert
p87169
I42
VSimpleName: println
p87170
tp87171
I1
s(g3228
I42
g3229
Vinsert
p87172
I41
VReturnStatement
p87173
tp87174
I2
s(g1481
I42
g1482
Vinsert
p87175
I8
VBlock
p87176
tp87177
I2
s(g60557
I42
g60558
Vinsert
p87178
I42
VSimpleName: OracleStorageClause
p87179
tp87180
I1
s(g3078
I42
g3079
Vinsert
p87181
I52
VThisExpression
p87182
tp87183
I1
s(g69930
I42
g69931
Vinsert
p87184
I45
VStringLiteral: "syntax error, expect ')', "
p87185
tp87186
I1
s(g20325
I42
g20326
Vinsert
p87187
I42
VSimpleName: executeCount
p87188
tp87189
I1
s(g9838
I42
g9839
Vinsert
p87190
I59
VVariableDeclarationFragment
p87191
tp87192
I1
s(g8863
I42
g8864
Vinsert
p87193
I40
VQualifiedName: com.alibaba.druid.support.logging.Log
p87194
tp87195
I6
s(g15255
I42
g15256
Vinsert
p87196
I42
VSimpleName: conn
p87197
tp87198
I1
s(g2263
I42
g2264
Vinsert
p87199
I42
VSimpleName: count
p87200
tp87201
I3
s(g31680
I42
g31681
Vinsert
p87202
I42
VSimpleName: column2
p87203
tp87204
I2
s(g41071
I42
g41072
Vinsert
p87205
I45
VStringLiteral: " ON hr.employees TO oe"
p87206
tp87207
I1
s(g35223
I42
g35224
Vinsert
p87208
I42
VSimpleName: setValidationQuery
p87209
tp87210
I1
s(g919
I42
g920
Vinsert
p87211
I42
VSimpleName: setDbType
p87212
tp87213
I1
s(g12443
I42
g12444
Vinsert
p87214
I42
VSimpleName: clone
p87215
tp87216
I3
s(g48815
I42
g48816
Vinsert
p87217
I45
VStringLiteral: "\u005cn\u005ct, 20)"
p87218
tp87219
I2
s(g2563
I42
g2564
Vinsert
p87220
I42
VSimpleName: setFirstColumn
p87221
tp87222
I1
s(g12901
I42
g12902
Vinsert
p87223
I45
VStringLiteral: "OSAndroid42Count"
p87224
tp87225
I1
s(g39248
I42
g39249
Vinsert
p87226
I42
VSimpleName: charAt
p87227
tp87228
I3
s(g4065
I42
g4066
Vinsert
p87229
I42
VSimpleName: getDataSource
p87230
tp87231
I1
s(g2563
I42
g2564
Vinsert
p87232
I22
VFieldAccess
p87233
tp87234
I1
s(g81
I42
g82
Vinsert
p87235
I36
VParenthesizedExpression
p87236
tp87237
I1
s(g25868
I42
g25869
Vinsert
p87238
I45
VStringLiteral: "\u005ctSELECT region_id, lvl2region_id AS city_id\u005cn"
p87239
tp87240
I1
s(g15334
I42
g15335
Vinsert
p87241
I8
VBlock
p87242
tp87243
I20
s(g33280
I42
g33281
Vinsert
p87244
I42
VSimpleName: SQLExpr
p87245
tp87246
I1
s(g8381
I42
g8382
Vinsert
p87247
I33
VNullLiteral
p87248
tp87249
I1
s(Vinsert
p87250
I42
VSimpleName: execute
p87251
Vinsert
p87252
I45
VStringLiteral: "DROP TABLE T"
p87253
tp87254
I1
s(g2563
I42
g2564
Vinsert
p87255
I42
VSimpleName: exprParser
p87256
tp87257
I1
s(g35913
I42
g35914
Vinsert
p87258
I32
VMethodInvocation
p87259
tp87260
I3
s(g17066
I42
g17067
Vinsert
p87261
I24
VForStatement
p87262
tp87263
I1
s(g11453
I42
g11454
Vinsert
p87264
I42
VSimpleName: TableStat
p87265
tp87266
I7
s(g26624
I42
g26625
Vinsert
p87267
I43
VSimpleType: Limit
p87268
tp87269
I2
s(g22740
I42
g22741
Vinsert
p87270
I42
VSimpleName: getColumns
p87271
tp87272
I3
s(g18404
I42
g18405
Vinsert
p87273
I45
VStringLiteral: "\u005ctr rational := rational_operations.make_rational(numerator * x.denominator + x.numerator * denominator, denominator * x.denominator);\u005cn"
p87274
tp87275
I1
s(g6587
I42
g6588
Vinsert
p87276
I42
VSimpleName: print0
p87277
tp87278
I1
s(g9017
I42
g9018
Vinsert
p87279
I8
VBlock
p87280
tp87281
I17
s(g6257
I42
g6258
Vinsert
p87282
I21
VExpressionStatement
p87283
tp87284
I3
s(g69930
I42
g69931
Vinsert
p87285
I45
VStringLiteral: "syntax error, illegal charset. "
p87286
tp87287
I1
s(g15010
I42
g15011
Vinsert
p87288
I52
VThisExpression
p87289
tp87290
I3
s(g30986
I42
g30987
Vinsert
p87291
I45
VStringLiteral: "0"
p87292
tp87293
I4
s(g7532
I42
g7533
Vinsert
p87294
I43
VSimpleType: SQLDetailDialog
p87295
tp87296
I1
s(g45225
I42
g45226
Vinsert
p87297
I42
VSimpleName: acceptChild
p87298
tp87299
I3
s(g3826
I42
g3827
Vinsert
p87300
I8
VBlock
p87301
tp87302
I2
s(g8192
I42
g8193
Vinsert
p87303
I42
VSimpleName: parseDropSequece
p87304
tp87305
I1
s(g45377
I42
g45378
Vinsert
p87306
I42
VSimpleName: checkHaving
p87307
tp87308
I1
s(g1943
I42
g1944
Vinsert
p87309
I32
VMethodInvocation
p87310
tp87311
I1
s(g13891
I42
g13892
Vinsert
p87312
I33
VNullLiteral
p87313
tp87314
I1
s(g7712
I42
g7713
Vinsert
p87315
I42
VSimpleName: Assert
p87316
tp87317
I2
s(g12560
I42
g12561
Vinsert
p87318
I42
VSimpleName: IllegalSQLObjectViolation
p87319
tp87320
I1
s(g14680
I42
g14681
Vinsert
p87321
I42
VSimpleName: getSqlList
p87322
tp87323
I1
s(g9456
I42
g9457
Vinsert
p87324
I59
VVariableDeclarationFragment
p87325
tp87326
I1
s(g47003
I42
g47004
Vinsert
p87327
I45
VStringLiteral: "\u005cnPARTITION BY HASH (id) PARTITIONS 2"
p87328
tp87329
I1
s(g57500
I42
g57501
Vinsert
p87330
I40
VQualifiedName: _aggregateFunctions.length
p87331
tp87332
I1
s(g63793
I42
g63794
Vinsert
p87333
I43
VSimpleType: TeradataLexer
p87334
tp87335
I1
s(g1883
I42
g1884
Vinsert
p87336
I83
VModifier: public
p87337
tp87338
I1
s(g4801
I42
g4802
Vinsert
p87339
I42
VSimpleName: conn
p87340
tp87341
I6
s(g24531
I42
g24532
Vinsert
p87342
I43
VSimpleType: SQLTableSource
p87343
tp87344
I1
s(g20904
I42
g20905
Vinsert
p87345
I42
VSimpleName: stmt
p87346
tp87347
I1
s(g32471
I42
g32472
Vinsert
p87348
I27
VInfixExpression: +
p87349
tp87350
I16
s(g16224
I42
g16225
Vinsert
p87351
I43
VSimpleType: TableStat.Column
p87352
tp87353
I3
s(g3302
I42
g3303
Vinsert
p87354
I43
VSimpleType: Column
p87355
tp87356
I10
s(g27298
I42
g27299
Vinsert
p87357
I45
VStringLiteral: "SHARE"
p87358
tp87359
I1
s(g6074
I42
g6075
Vinsert
p87360
I60
VVariableDeclarationStatement
p87361
tp87362
I2
s(g6622
I42
g6623
Vinsert
p87363
I22
VFieldAccess
p87364
tp87365
I1
s(g18773
I42
g18774
Vinsert
p87366
I43
VSimpleType: SQLUpdateStatement
p87367
tp87368
I2
s(g6742
I42
g6743
Vinsert
p87369
I32
VMethodInvocation
p87370
tp87371
I11
s(g9878
I42
g9879
Vinsert
p87372
I43
VSimpleType: SQLOrderingSpecification
p87373
tp87374
I1
s(g5166
I42
g5167
Vinsert
p87375
I43
VSimpleType: MySqlWallProvider
p87376
tp87377
I3
s(g8391
I42
g8392
Vinsert
p87378
I83
VModifier: public
p87379
tp87380
I5
s(g72394
I42
g72395
Vinsert
p87381
I45
VStringLiteral: "select 15,'version'"
p87382
tp87383
I1
s(g6786
I42
g6787
Vinsert
p87384
I42
VSimpleName: x
p87385
tp87386
I4
s(g1012
I42
g1013
Vinsert
p87387
I33
VNullLiteral
p87388
tp87389
I3
s(g2890
I42
g2891
Vinsert
p87390
I42
VSimpleName: rows
p87391
tp87392
I1
s(g16294
I42
g16295
Vinsert
p87393
I43
VSimpleType: SQLTableSource
p87394
tp87395
I3
s(g12901
I42
g12902
Vinsert
p87396
I42
VSimpleName: getOSAndroid42Count
p87397
tp87398
I1
s(g2568
I42
g2569
Vinsert
p87399
I42
VSimpleName: cmdArray
p87400
tp87401
I1
s(g34262
I42
g34263
Vinsert
p87402
I42
VSimpleName: test_limit
p87403
tp87404
I1
s(g5247
I42
g5248
Vinsert
p87405
I45
VStringLiteral: "remove statistic tbl_shop column_sum shop_name;"
p87406
tp87407
I1
s(g72970
I42
g72971
Vinsert
p87408
I45
VStringLiteral: "PUBLIC "
p87409
tp87410
I2
s(g4674
I42
g4675
Vinsert
p87411
I34
VNumberLiteral: 1
p87412
tp87413
I1
s(g10368
I42
g10369
Vinsert
p87414
I70
VEnhancedForStatement
p87415
tp87416
I1
s(g4243
I42
g4244
Vinsert
p87417
I21
VExpressionStatement
p87418
tp87419
I2
s(g23809
I42
g23810
Vinsert
p87420
I42
VSimpleName: test_distribute_by
p87421
tp87422
I4
s(g39075
I42
g39076
Vinsert
p87423
I42
VSimpleName: indexName
p87424
tp87425
I2
s(g17082
I42
g17083
Vinsert
p87426
I42
VSimpleName: client
p87427
tp87428
I2
s(g68021
I42
g68022
Vinsert
p87429
I42
VSimpleName: getFilterSize
p87430
tp87431
I1
s(g3689
I42
g3690
Vinsert
p87432
I42
VSimpleName: DataSourcePanel
p87433
tp87434
I1
s(g5148
I42
g5149
Vinsert
p87435
I42
VSimpleName: Exception
p87436
tp87437
I1
s(g718
I42
g719
Vinsert
p87438
I74
VParameterizedType: List<SQLStatement>
p87439
tp87440
I1
s(g15919
I42
g15920
Vinsert
p87441
I42
VSimpleName: exprParser
p87442
tp87443
I1
s(g4404
I42
g4405
Vinsert
p87444
I8
VBlock
p87445
tp87446
I1
s(g39715
I42
g39716
Vinsert
p87447
I43
VSimpleType: SQLDataType
p87448
tp87449
I2
s(g2568
I42
g2569
Vinsert
p87450
I4
VArrayInitializer
p87451
tp87452
I1
s(g1491
I42
g1492
Vinsert
p87453
I43
VSimpleType: DruidStatProperties
p87454
tp87455
I1
s(g14348
I42
g14349
Vinsert
p87456
I39
VPrimitiveType: boolean
p87457
tp87458
I1
s(g9524
I42
g9525
Vinsert
p87459
I45
VStringLiteral: "\u005ct) CLK\u005cn"
p87460
tp87461
I1
s(Vinsert
p87462
I42
VSimpleName: visit
p87463
Vinsert
p87464
I42
VSimpleName: values
p87465
tp87466
I2
s(g20320
I42
g20321
Vinsert
p87467
I25
VIfStatement
p87468
tp87469
I1
s(g22579
I42
g22580
Vinsert
p87470
I42
VSimpleName: close
p87471
tp87472
I1
s(g5148
I42
g5149
Vinsert
p87473
I43
VSimpleType: Exception
p87474
tp87475
I1
s(Vinsert
p87476
I42
VSimpleName: assertTrue
p87477
Vinsert
p87478
I42
VSimpleName: MySqlWallTest16
p87479
tp87480
I1
s(g5216
I42
g5217
Vinsert
p87481
I33
VNullLiteral
p87482
tp87483
I2
s(g116
I42
g117
Vinsert
p87484
I21
VExpressionStatement
p87485
tp87486
I2
s(g1579
I42
g1580
Vinsert
p87487
I27
VInfixExpression: &&
p87488
tp87489
I2
s(g9033
I42
g9034
Vinsert
p87490
I27
VInfixExpression: ==
p87491
tp87492
I1
s(g454
I42
g455
Vinsert
p87493
I42
VSimpleName: hash
p87494
tp87495
I2
s(g10021
I42
g10022
Vinsert
p87496
I42
VSimpleName: servletPatternPrefix
p87497
tp87498
I1
s(g9350
I42
g9351
Vinsert
p87499
I42
VSimpleName: name_hash_lower
p87500
tp87501
I2
s(g11197
I42
g11198
Vinsert
p87502
I42
VSimpleName: relationships
p87503
tp87504
I2
s(g18796
I42
g18797
Vinsert
p87505
I43
VSimpleType: SQLExpr
p87506
tp87507
I1
s(g1213
I42
g1214
Vinsert
p87508
I40
VQualifiedName: ResultSet.CONCUR_UPDATABLE
p87509
tp87510
I1
s(g18086
I42
g18087
Vinsert
p87511
I42
VSimpleName: function
p87512
tp87513
I1
s(g1584
I42
g1585
Vinsert
p87514
I60
VVariableDeclarationStatement
p87515
tp87516
I1
s(g6103
I42
g6104
Vinsert
p87517
I43
VSimpleType: WallProvider
p87518
tp87519
I1
s(g10087
I42
g10088
Vinsert
p87520
I8
VBlock
p87521
tp87522
I3
s(g4070
I42
g4071
Vinsert
p87523
I42
VSimpleName: getExecuteMillisMax
p87524
tp87525
I1
s(g3053
I42
g3054
Vinsert
p87526
I8
VBlock
p87527
tp87528
I1
s(g26531
I42
g26532
Vinsert
p87529
I42
VSimpleName: select
p87530
tp87531
I5
s(g66206
I42
g66207
Vinsert
p87532
I42
VSimpleName: flashback
p87533
tp87534
I3
s(g6192
I42
g6193
Vinsert
p87535
I70
VEnhancedForStatement
p87536
tp87537
I1
s(g27757
I42
g27758
Vinsert
p87538
I42
VSimpleName: WallFilter
p87539
tp87540
I2
s(g7855
I42
g7856
Vinsert
p87541
I16
VConditionalExpression
p87542
tp87543
I5
s(g1461
I42
g1462
Vinsert
p87544
I45
VStringLiteral: "mergeStat"
p87545
tp87546
I1
s(g13906
I42
g13907
Vinsert
p87547
I42
VSimpleName: TransactionInfo
p87548
tp87549
I1
s(g3793
I42
g3794
Vinsert
p87550
I42
VSimpleName: getDataSources
p87551
tp87552
I1
s(g69590
I42
g69591
Vinsert
p87553
I42
VSimpleName: token
p87554
tp87555
I1
s(g16792
I42
g16793
Vinsert
p87556
I42
VSimpleName: getColumns
p87557
tp87558
I1
s(Vinsert
p87559
I42
VSimpleName: isValidateMySql
p87560
Vinsert
p87561
I45
VStringLiteral: "select 14,13,12,11,10,@@version_compile_os,8,7,6,5,4,3,2,1"
p87562
tp87563
I1
s(g2852
I42
g2853
Vinsert
p87564
I41
VReturnStatement
p87565
tp87566
I1
s(Vinsert
p87567
I42
VSimpleName: getDbType
p87568
Vinsert
p87569
I45
VStringLiteral: "jdbc:cobar://localhost:8066/test"
p87570
tp87571
I1
s(g31696
I42
g31697
Vinsert
p87572
I57
VTypeLiteral
p87573
tp87574
I1
s(g3631
I42
g3632
Vinsert
p87575
I40
VQualifiedName: JdbcConnectionStat.Entry
p87576
tp87577
I1
s(g4323
I42
g4324
Vinsert
p87578
I42
VSimpleName: xaResource
p87579
tp87580
I1
s(g47382
I42
g47383
Vinsert
p87581
I42
VSimpleName: TeradataASTVisitor
p87582
tp87583
I2
s(g20434
I42
g20435
Vinsert
p87584
I45
VStringLiteral: "\u005cn\u005ct) XX"
p87585
tp87586
I2
s(g8399
I42
g8400
Vinsert
p87587
I43
VSimpleType: Exception
p87588
tp87589
I1
s(g11516
I42
g11517
Vinsert
p87590
I42
VSimpleName: Exception
p87591
tp87592
I5
s(g14139
I42
g14140
Vinsert
p87593
I42
VSimpleName: paramMap
p87594
tp87595
I1
s(g27840
I42
g27841
Vinsert
p87596
I21
VExpressionStatement
p87597
tp87598
I3
s(g15894
I42
g15895
Vinsert
p87599
I83
VModifier: public
p87600
tp87601
I5
s(g4941
I42
g4942
Vinsert
p87602
I11
VCastExpression
p87603
tp87604
I1
s(g7642
I42
g7643
Vinsert
p87605
I42
VSimpleName: SQLMethodInvokeExpr
p87606
tp87607
I8
s(g1652
I42
g1653
Vinsert
p87608
I39
VPrimitiveType: boolean
p87609
tp87610
I1
s(g42013
I42
g42014
Vinsert
p87611
I34
VNumberLiteral: 0
p87612
tp87613
I1
s(g1420
I42
g1421
Vinsert
p87614
I60
VVariableDeclarationStatement
p87615
tp87616
I39
s(g19128
I42
g19129
Vinsert
p87617
I42
VSimpleName: getUpdateDataCount
p87618
tp87619
I1
s(g4538
I42
g4539
Vinsert
p87620
I42
VSimpleName: SchemaStatVisitor
p87621
tp87622
I32
s(g13643
I42
g13644
Vinsert
p87623
I54
VTryStatement
p87624
tp87625
I1
s(g11925
I42
g11926
Vinsert
p87626
I8
VBlock
p87627
tp87628
I2
s(g25430
I42
g25431
Vinsert
p87629
I45
VStringLiteral: "BOTH"
p87630
tp87631
I1
s(g3223
I42
g3224
Vinsert
p87632
I21
VExpressionStatement
p87633
tp87634
I1
s(g44887
I42
g44888
Vinsert
p87635
I42
VSimpleName: SQLStatement
p87636
tp87637
I4
s(g6323
I42
g6324
Vinsert
p87638
I21
VExpressionStatement
p87639
tp87640
I1
s(g12742
I42
g12743
Vinsert
p87641
I11
VCastExpression
p87642
tp87643
I2
s(g56684
I42
g56685
Vinsert
p87644
I42
VSimpleName: buf
p87645
tp87646
I2
s(g572
I42
g573
Vinsert
p87647
I59
VVariableDeclarationFragment
p87648
tp87649
I6
s(g8030
I42
g8031
Vinsert
p87650
I45
VStringLiteral: "/permit-object-default.txt"
p87651
tp87652
I1
s(g32112
I42
g32113
Vinsert
p87653
I42
VSimpleName: parseSelect
p87654
tp87655
I1
s(g27736
I42
g27737
Vinsert
p87656
I42
VSimpleName: x
p87657
tp87658
I7
s(g10631
I42
g10632
Vinsert
p87659
I8
VBlock
p87660
tp87661
I2
s(g4594
I42
g4595
Vinsert
p87662
I33
VNullLiteral
p87663
tp87664
I1
s(g1256
I42
g1257
Vinsert
p87665
I21
VExpressionStatement
p87666
tp87667
I3
s(g16479
I42
g16480
Vinsert
p87668
I43
VSimpleType: SQLUpdateStatement
p87669
tp87670
I2
s(g11706
I42
g11707
Vinsert
p87671
I32
VMethodInvocation
p87672
tp87673
I2
s(g2188
I42
g2189
Vinsert
p87674
I43
VSimpleType: SQLDataType
p87675
tp87676
I1
s(Vinsert
p87677
I42
VSimpleName: append
p87678
Vinsert
p87679
I42
VSimpleName: secondsFraction
p87680
tp87681
I2
s(g17066
I42
g17067
Vinsert
p87682
I58
VVariableDeclarationExpression
p87683
tp87684
I1
s(g1953
I42
g1954
Vinsert
p87685
I42
VSimpleName: stmt
p87686
tp87687
I2
s(g19741
I42
g19742
Vinsert
p87688
I60
VVariableDeclarationStatement
p87689
tp87690
I1
s(g6460
I42
g6461
Vinsert
p87691
I45
VStringLiteral: "\u005ct\u005c"INPUT_FILE_SCAN_ONLY\u005c", \u005cn"
p87692
tp87693
I1
s(g3750
I42
g3751
Vinsert
p87694
I45
VStringLiteral: "XXX"
p87695
tp87696
I1
s(g15456
I42
g15457
Vinsert
p87697
I42
VSimpleName: assertEquals
p87698
tp87699
I1
s(g18667
I42
g18668
Vinsert
p87700
I43
VSimpleType: MySqlShowCreateProcedureStatement
p87701
tp87702
I2
s(g221
I42
g222
Vinsert
p87703
I42
VSimpleName: ParserException
p87704
tp87705
I21
s(g16335
I42
g16336
Vinsert
p87706
I34
VNumberLiteral: 0
p87707
tp87708
I1
s(g6712
I42
g6713
Vinsert
p87709
I42
VSimpleName: SQLBinaryOpExpr
p87710
tp87711
I13
s(g9914
I42
g9915
Vinsert
p87712
I42
VSimpleName: maxEvictableIdleTimeMillis
p87713
tp87714
I2
s(g7007
I42
g7008
Vinsert
p87715
I42
VSimpleName: conn
p87716
tp87717
I3
s(g50302
I42
g50303
Vinsert
p87718
I42
VSimpleName: selectParser
p87719
tp87720
I6
s(g5797
I42
g5798
Vinsert
p87721
I42
VSimpleName: methodName
p87722
tp87723
I2
s(g5623
I42
g5624
Vinsert
p87724
I42
VSimpleName: wr
p87725
tp87726
I1
s(g5818
I42
g5819
Vinsert
p87727
I42
VSimpleName: String
p87728
tp87729
I1
s(g26985
I42
g26986
Vinsert
p87730
I42
VSimpleName: assertStatements
p87731
tp87732
I1
s(g42032
I42
g42033
Vinsert
p87733
I45
VStringLiteral: "select 1 from t1"
p87734
tp87735
I1
s(g13659
I42
g13660
Vinsert
p87736
I39
VPrimitiveType: void
p87737
tp87738
I9
s(g5826
I42
g5827
Vinsert
p87739
I42
VSimpleName: accept
p87740
tp87741
I1
s(g21686
I42
g21687
Vinsert
p87742
I33
VNullLiteral
p87743
tp87744
I1
s(g7996
I42
g7997
Vinsert
p87745
I45
VStringLiteral: "LOW_PRIORITY "
p87746
tp87747
I1
s(g3714
I42
g3715
Vinsert
p87748
I43
VSimpleType: ParserException
p87749
tp87750
I1
s(Vinsert
p87751
I42
VSimpleName: visit
p87752
Vinsert
p87753
I42
VSimpleName: SQLPrimaryKey
p87754
tp87755
I1
s(g13981
I42
g13982
Vinsert
p87756
I7
VAssignment: =
p87757
tp87758
I1
s(g12024
I42
g12025
Vinsert
p87759
I42
VSimpleName: parseValueClause
p87760
tp87761
I1
s(g4765
I42
g4766
Vinsert
p87762
I42
VSimpleName: curIndex
p87763
tp87764
I1
s(g7542
I42
g7543
Vinsert
p87765
I31
VMethodDeclaration
p87766
tp87767
I1
s(g6755
I42
g6756
Vinsert
p87768
I48
VSuperMethodInvocation
p87769
tp87770
I1
s(g9709
I42
g9710
Vinsert
p87771
I45
VStringLiteral: ", "
p87772
tp87773
I1
s(g15263
I42
g15264
Vinsert
p87774
I42
VSimpleName: getSqlStatById
p87775
tp87776
I1
s(Vinsert
p87777
I42
VSimpleName: output
p87778
Vinsert
p87779
I42
VSimpleName: unit
p87780
tp87781
I2
s(g12969
I42
g12970
Vinsert
p87782
I42
VSimpleName: test_float_zero
p87783
tp87784
I1
s(g20342
I42
g20343
Vinsert
p87785
I45
VStringLiteral: "   and ps_od_ind = 'Y'\u005cn"
p87786
tp87787
I1
s(g14891
I42
g14892
Vinsert
p87788
I22
VFieldAccess
p87789
tp87790
I3
s(g6265
I42
g6266
Vinsert
p87791
I42
VSimpleName: SQLUnique
p87792
tp87793
I1
s(g59193
I42
g59194
Vinsert
p87794
I42
VSimpleName: expr
p87795
tp87796
I9
s(g3098
I42
g3099
Vinsert
p87797
I43
VSimpleType: MySqlWallProvider
p87798
tp87799
I32
s(g26722
I42
g26723
Vinsert
p87800
I43
VSimpleType: OracleUpdateSetListClause
p87801
tp87802
I1
s(g30636
I42
g30637
Vinsert
p87803
I42
VSimpleName: ispPivileged
p87804
tp87805
I1
s(g25573
I42
g25574
Vinsert
p87806
I41
VReturnStatement
p87807
tp87808
I1
s(g7346
I42
g7347
Vinsert
p87809
I42
VSimpleName: binaryString
p87810
tp87811
I1
s(g27620
I42
g27621
Vinsert
p87812
I60
VVariableDeclarationStatement
p87813
tp87814
I1
s(g17387
I42
g17388
Vinsert
p87815
I42
VSimpleName: MySqlSchemaStatVisitor
p87816
tp87817
I2
s(g14881
I42
g14882
Vinsert
p87818
I39
VPrimitiveType: long
p87819
tp87820
I1
s(g2104
I42
g2105
Vinsert
p87821
I42
VSimpleName: SQLExpr
p87822
tp87823
I1
s(g8721
I42
g8722
Vinsert
p87824
I33
VNullLiteral
p87825
tp87826
I2
s(g7986
I42
g7987
Vinsert
p87827
I32
VMethodInvocation
p87828
tp87829
I15
s(g18930
I42
g18931
Vinsert
p87830
I42
VSimpleName: row
p87831
tp87832
I1
s(g8293
I42
g8294
Vinsert
p87833
I60
VVariableDeclarationStatement
p87834
tp87835
I1
s(g13504
I42
g13505
Vinsert
p87836
I42
VSimpleName: Exception
p87837
tp87838
I1
s(g5699
I42
g5700
Vinsert
p87839
I43
VSimpleType: SQLCaseStatement.Item
p87840
tp87841
I2
s(g19836
I42
g19837
Vinsert
p87842
I45
VStringLiteral: "SELECT * FROM m_sql_const"
p87843
tp87844
I1
s(g8823
I42
g8824
Vinsert
p87845
I21
VExpressionStatement
p87846
tp87847
I4
s(g15793
I42
g15794
Vinsert
p87848
I40
VQualifiedName: MySqlRenameTableStatement.Item
p87849
tp87850
I1
s(g36895
I42
g36896
Vinsert
p87851
I34
VNumberLiteral: 31
p87852
tp87853
I4
s(g3312
I42
g3313
Vinsert
p87854
I33
VNullLiteral
p87855
tp87856
I1
s(g17467
I42
g17468
Vinsert
p87857
I42
VSimpleName: acceptChild
p87858
tp87859
I2
s(g30491
I42
g30492
Vinsert
p87860
I42
VSimpleName: ORACLE
p87861
tp87862
I1
s(g1405
I42
g1406
Vinsert
p87863
I34
VNumberLiteral: 1
p87864
tp87865
I2
s(g14244
I42
g14245
Vinsert
p87866
I42
VSimpleName: sql
p87867
tp87868
I1
s(g47797
I42
g47798
Vinsert
p87869
I42
VSimpleName: comments
p87870
tp87871
I2
s(g3058
I42
g3059
Vinsert
p87872
I45
VStringLiteral: "\u005cnBEGIN"
p87873
tp87874
I2
s(g22579
I42
g22580
Vinsert
p87875
I42
VSimpleName: socket
p87876
tp87877
I1
s(g1125
I42
g1126
Vinsert
p87878
I7
VAssignment: =
p87879
tp87880
I1
s(Vinsert
p87881
I42
VSimpleName: assertEquals
p87882
Vinsert
p87883
I42
VSimpleName: test_BigInteger
p87884
tp87885
I3
s(g27493
I42
g27494
Vinsert
p87886
I42
VSimpleName: getArguments
p87887
tp87888
I2
s(g13488
I42
g13489
Vinsert
p87889
I45
VStringLiteral: "admin"
p87890
tp87891
I2
s(g31385
I42
g31386
Vinsert
p87892
I42
VSimpleName: String
p87893
tp87894
I4
s(g18065
I42
g18066
Vinsert
p87895
I9
VBooleanLiteral: true
p87896
tp87897
I2
s(g16863
I42
g16864
Vinsert
p87898
I8
VBlock
p87899
tp87900
I6
s(g6557
I42
g6558
Vinsert
p87901
I42
VSimpleName: rightJoin
p87902
tp87903
I1
s(g10174
I42
g10175
Vinsert
p87904
I43
VSimpleType: ArrayList
p87905
tp87906
I1
s(g39280
I42
g39281
Vinsert
p87907
I27
VInfixExpression: !=
p87908
tp87909
I1
s(Vinsert
p87910
I42
VSimpleName: add
p87911
Vinsert
p87912
I42
VSimpleName: database
p87913
tp87914
I1
s(g2339
I42
g2340
Vinsert
p87915
I45
VStringLiteral: "for xml "
p87916
tp87917
I1
s(g24407
I42
g24408
Vinsert
p87918
I27
VInfixExpression: !=
p87919
tp87920
I3
s(g12586
I42
g12587
Vinsert
p87921
I42
VSimpleName: SQLStatement
p87922
tp87923
I7
s(g18648
I42
g18649
Vinsert
p87924
I83
VModifier: public
p87925
tp87926
I1
s(g22294
I42
g22295
Vinsert
p87927
I43
VSimpleType: SQLJoinTableSource
p87928
tp87929
I1
s(g17428
I42
g17429
Vinsert
p87930
I42
VSimpleName: table
p87931
tp87932
I1
s(g7720
I42
g7721
Vinsert
p87933
I43
VSimpleType: String
p87934
tp87935
I3
s(g3631
I42
g3632
Vinsert
p87936
I60
VVariableDeclarationStatement
p87937
tp87938
I1
s(g1642
I42
g1643
Vinsert
p87939
I42
VSimpleName: PREFIX
p87940
tp87941
I1
s(g9652
I42
g9653
Vinsert
p87942
I32
VMethodInvocation
p87943
tp87944
I3
s(g9670
I42
g9671
Vinsert
p87945
I43
VSimpleType: SQLStatement
p87946
tp87947
I108
s(g2504
I42
g2505
Vinsert
p87948
I45
VStringLiteral: " min_rows "
p87949
tp87950
I1
s(g7835
I42
g7836
Vinsert
p87951
I43
VSimpleType: Object
p87952
tp87953
I2
s(g23031
I42
g23032
Vinsert
p87954
I42
VSimpleName: set
p87955
tp87956
I1
s(g21489
I42
g21490
Vinsert
p87957
I42
VSimpleName: OraclePreparedStatement
p87958
tp87959
I1
s(Vinsert
p87960
I42
VSimpleName: equals
p87961
Vinsert
p87962
I42
VSimpleName: logSlowSql
p87963
tp87964
I1
s(g24755
I42
g24756
Vinsert
p87965
I42
VSimpleName: storageClause
p87966
tp87967
I3
s(g1110
I42
g1111
Vinsert
p87968
I45
VStringLiteral: "\u005ctAND c1.enabled_flag = 'Y'\u005cn"
p87969
tp87970
I1
s(g42520
I42
g42521
Vinsert
p87971
I42
VSimpleName: test_reverse
p87972
tp87973
I8
s(g1612
I42
g1613
Vinsert
p87974
I36
VParenthesizedExpression
p87975
tp87976
I1
s(g19708
I42
g19709
Vinsert
p87977
I33
VNullLiteral
p87978
tp87979
I2
s(g4495
I42
g4496
Vinsert
p87980
I41
VReturnStatement
p87981
tp87982
I4
s(g680
I42
g681
Vinsert
p87983
I42
VSimpleName: methodStat
p87984
tp87985
I1
s(g1208
I42
g1209
Vinsert
p87986
I31
VMethodDeclaration
p87987
tp87988
I1
s(g16178
I42
g16179
Vinsert
p87989
I45
VStringLiteral: "FROM mod_period_time\u005cn"
p87990
tp87991
I1
s(g17250
I42
g17251
Vinsert
p87992
I43
VSimpleType: Token
p87993
tp87994
I2
s(g6961
I42
g6962
Vinsert
p87995
I42
VSimpleName: contextPath
p87996
tp87997
I1
s(g2324
I42
g2325
Vinsert
p87998
I42
VSimpleName: statement
p87999
tp88000
I1
s(g41850
I42
g41851
Vinsert
p88001
I42
VSimpleName: whiteMergedList
p88002
tp88003
I1
s(g4630
I42
g4631
Vinsert
p88004
I32
VMethodInvocation
p88005
tp88006
I2
s(g6557
I42
g6558
Vinsert
p88007
I43
VSimpleType: SQLPropertyExpr
p88008
tp88009
I1
s(g1612
I42
g1613
Vinsert
p88010
I27
VInfixExpression: +
p88011
tp88012
I1
s(g71
I42
g72
Vinsert
p88013
I42
VSimpleName: owner
p88014
tp88015
I2
s(g23913
I42
g23914
Vinsert
p88016
I42
VSimpleName: proxy
p88017
tp88018
I3
s(g2029
I42
g2030
Vinsert
p88019
I42
VSimpleName: stmt
p88020
tp88021
I1
s(g4829
I42
g4830
Vinsert
p88022
I43
VSimpleType: String
p88023
tp88024
I1
s(g14234
I42
g14235
Vinsert
p88025
I42
VSimpleName: createChain
p88026
tp88027
I1
s(g6871
I42
g6872
Vinsert
p88028
I42
VSimpleName: SQLName
p88029
tp88030
I1
s(g321
I42
g322
Vinsert
p88031
I42
VSimpleName: String
p88032
tp88033
I3
s(g18031
I42
g18032
Vinsert
p88034
I32
VMethodInvocation
p88035
tp88036
I11
s(g8006
I42
g8007
Vinsert
p88037
I42
VSimpleName: isIdentifierChar
p88038
tp88039
I1
s(g7356
I42
g7357
Vinsert
p88040
I39
VPrimitiveType: long
p88041
tp88042
I1
s(g15068
I42
g15069
Vinsert
p88043
I45
VStringLiteral: "hex"
p88044
tp88045
I1
s(g11808
I42
g11809
Vinsert
p88046
I14
VClassInstanceCreation
p88047
tp88048
I11
s(g25961
I42
g25962
Vinsert
p88049
I21
VExpressionStatement
p88050
tp88051
I3
s(g15412
I42
g15413
Vinsert
p88052
I42
VSimpleName: maxRows
p88053
tp88054
I1
s(g30842
I42
g30843
Vinsert
p88055
I42
VSimpleName: SQLPropertyExpr
p88056
tp88057
I6
s(g32628
I42
g32629
Vinsert
p88058
I72
VEnumConstantDeclaration
p88059
tp88060
I2
s(g13311
I42
g13312
Vinsert
p88061
I45
VStringLiteral: "\u005cn\u005ctcost NUMBER"
p88062
tp88063
I2
s(g14110
I42
g14111
Vinsert
p88064
I42
VSimpleName: dataSource
p88065
tp88066
I2
s(g3447
I42
g3448
Vinsert
p88067
I42
VSimpleName: System
p88068
tp88069
I1
s(g21020
I42
g21021
Vinsert
p88070
I42
VSimpleName: sql
p88071
tp88072
I6
s(g7409
I42
g7410
Vinsert
p88073
I39
VPrimitiveType: void
p88074
tp88075
I2
s(g16123
I42
g16124
Vinsert
p88076
I44
VSingleVariableDeclaration
p88077
tp88078
I1
s(g17602
I42
g17603
Vinsert
p88079
I42
VSimpleName: stmtList
p88080
tp88081
I4
s(Vinsert
p88082
I42
VSimpleName: isEmpty
p88083
Vinsert
p88084
I42
VSimpleName: MYSQL
p88085
tp88086
I1
s(g26675
I42
g26676
Vinsert
p88087
I42
VSimpleName: String
p88088
tp88089
I1
s(g31402
I42
g31403
Vinsert
p88090
I45
VStringLiteral: "FROM t3;"
p88091
tp88092
I1
s(g1544
I42
g1545
Vinsert
p88093
I42
VSimpleName: SQLUtils
p88094
tp88095
I82
s(g33239
I42
g33240
Vinsert
p88096
I43
VSimpleType: SQLSelectQueryBlock
p88097
tp88098
I2
s(g10493
I42
g10494
Vinsert
p88099
I43
VSimpleType: OracleConnection
p88100
tp88101
I1
s(g8914
I42
g8915
Vinsert
p88102
I42
VSimpleName: setUrl
p88103
tp88104
I1
s(g11529
I42
g11530
Vinsert
p88105
I42
VSimpleName: endLatch
p88106
tp88107
I1
s(g20113
I42
g20114
Vinsert
p88108
I21
VExpressionStatement
p88109
tp88110
I6
s(g15153
I42
g15154
Vinsert
p88111
I8
VBlock
p88112
tp88113
I1
s(g3139
I42
g3140
Vinsert
p88114
I42
VSimpleName: removeEldestEntry
p88115
tp88116
I1
s(g13538
I42
g13539
Vinsert
p88117
I33
VNullLiteral
p88118
tp88119
I3
s(g21127
I42
g21128
Vinsert
p88120
I42
VSimpleName: setString
p88121
tp88122
I1
s(g18399
I42
g18400
Vinsert
p88123
I42
VSimpleName: getResultSet
p88124
tp88125
I1
s(g2697
I42
g2698
Vinsert
p88126
I9
VBooleanLiteral: true
p88127
tp88128
I3
s(g71093
I42
g71094
Vinsert
p88129
I42
VSimpleName: stringVal
p88130
tp88131
I4
s(g18606
I42
g18607
Vinsert
p88132
I42
VSimpleName: x
p88133
tp88134
I2
s(g3027
I42
g3028
Vinsert
p88135
I45
VStringLiteral: "\u005c""
p88136
tp88137
I1
s(g6244
I42
g6245
Vinsert
p88138
I33
VNullLiteral
p88139
tp88140
I10
s(g12985
I42
g12986
Vinsert
p88141
I43
VSimpleType: Exception
p88142
tp88143
I2
s(g657
I42
g658
Vinsert
p88144
I34
VNumberLiteral: 3
p88145
tp88146
I1
s(g439
I42
g440
Vinsert
p88147
I42
VSimpleName: String
p88148
tp88149
I1
s(g12082
I42
g12083
Vinsert
p88150
I42
VSimpleName: lexer
p88151
tp88152
I1
s(g8886
I42
g8887
Vinsert
p88153
I32
VMethodInvocation
p88154
tp88155
I4
s(g4134
I42
g4135
Vinsert
p88156
I59
VVariableDeclarationFragment
p88157
tp88158
I1
s(g4553
I42
g4554
Vinsert
p88159
I42
VSimpleName: setExpr
p88160
tp88161
I1
s(g29430
I42
g29431
Vinsert
p88162
I42
VSimpleName: current
p88163
tp88164
I1
s(g7903
I42
g7904
Vinsert
p88165
I42
VSimpleName: SQLException
p88166
tp88167
I1
s(g101
I42
g102
Vinsert
p88168
I42
VSimpleName: createStatement
p88169
tp88170
I1
s(g9786
I42
g9787
Vinsert
p88171
I41
VReturnStatement
p88172
tp88173
I2
s(g1878
I42
g1879
Vinsert
p88174
I40
VQualifiedName: JdbcConstants.ALIYUN_ADS
p88175
tp88176
I1
s(g8687
I42
g8688
Vinsert
p88177
I42
VSimpleName: doTran1
p88178
tp88179
I1
s(g11649
I42
g11650
Vinsert
p88180
I60
VVariableDeclarationStatement
p88181
tp88182
I1
s(g10971
I42
g10972
Vinsert
p88183
I42
VSimpleName: preparedStatementCount
p88184
tp88185
I1
s(g5597
I42
g5598
Vinsert
p88186
I42
VSimpleName: select
p88187
tp88188
I2
s(g3732
I42
g3733
Vinsert
p88189
I42
VSimpleName: WallVisitorUtils
p88190
tp88191
I2
s(g43033
I42
g43034
Vinsert
p88192
I42
VSimpleName: formatedSql
p88193
tp88194
I3
s(g11624
I42
g11625
Vinsert
p88195
I43
VSimpleType: List
p88196
tp88197
I5
s(g12050
I42
g12051
Vinsert
p88198
I45
VStringLiteral: "\u005ct\u005ct\u005ct\u005ctFROM itsm_system_menu a\u005cn"
p88199
tp88200
I1
s(g17098
I42
g17099
Vinsert
p88201
I43
VSimpleType: ResultSet
p88202
tp88203
I2
s(g63139
I42
g63140
Vinsert
p88204
I33
VNullLiteral
p88205
tp88206
I2
s(g15648
I42
g15649
Vinsert
p88207
I26
VImportDeclaration
p88208
tp88209
I1
s(g366
I42
g367
Vinsert
p88210
I70
VEnhancedForStatement
p88211
tp88212
I1
s(g2158
I42
g2159
Vinsert
p88213
I14
VClassInstanceCreation
p88214
tp88215
I2
s(g25868
I42
g25869
Vinsert
p88216
I45
VStringLiteral: ") t2\u005cn"
p88217
tp88218
I1
s(g331
I42
g332
Vinsert
p88219
I32
VMethodInvocation
p88220
tp88221
I3
s(g4926
I42
g4927
Vinsert
p88222
I43
VSimpleType: ConnectionEvent
p88223
tp88224
I1
s(g8956
I42
g8957
Vinsert
p88225
I43
VSimpleType: WallCheckResult
p88226
tp88227
I1
s(g856
I42
g857
Vinsert
p88228
I32
VMethodInvocation
p88229
tp88230
I1
s(g31892
I42
g31893
Vinsert
p88231
I21
VExpressionStatement
p88232
tp88233
I4
s(g12011
I42
g12012
Vinsert
p88234
I42
VSimpleName: incrementIndent
p88235
tp88236
I1
s(g13017
I42
g13018
Vinsert
p88237
I42
VSimpleName: statment3
p88238
tp88239
I1
s(g537
I42
g538
Vinsert
p88240
I42
VSimpleName: print
p88241
tp88242
I1
s(g31649
I42
g31650
Vinsert
p88243
I42
VSimpleName: getCount_5_10_minutes
p88244
tp88245
I1
s(g14640
I42
g14641
Vinsert
p88246
I8
VBlock
p88247
tp88248
I1
s(g1496
I42
g1497
Vinsert
p88249
I42
VSimpleName: String
p88250
tp88251
I9
s(g73788
I42
g73789
Vinsert
p88252
I42
VSimpleName: orderBy
p88253
tp88254
I5
s(g18005
I42
g18006
Vinsert
p88255
I45
VStringLiteral: " `id` bigint(20) unsigned NOT NULL, "
p88256
tp88257
I1
s(g7769
I42
g7770
Vinsert
p88258
I42
VSimpleName: print
p88259
tp88260
I7
s(Vinsert
p88261
I42
VSimpleName: toSQLString
p88262
Vinsert
p88263
I45
VStringLiteral: "GRANT INHERIT PRIVILEGES ON USER sh TO hr"
p88264
tp88265
I1
s(g53379
I42
g53380
Vinsert
p88266
I42
VSimpleName: exprB
p88267
tp88268
I3
s(g18224
I42
g18225
Vinsert
p88269
I42
VSimpleName: SQLException
p88270
tp88271
I2
s(Vinsert
p88272
I42
VSimpleName: toSQLString
p88273
Vinsert
p88274
I45
VStringLiteral: "\u005cn\u005ctlocation_id NUMBER(4)  CONSTRAINT loc_id_pk PRIMARY KEY,"
p88275
tp88276
I1
s(g2281
I42
g2282
Vinsert
p88277
I8
VBlock
p88278
tp88279
I3
s(g7642
I42
g7643
Vinsert
p88280
I42
VSimpleName: nvl
p88281
tp88282
I1
s(g2543
I42
g2544
Vinsert
p88283
I27
VInfixExpression: &&
p88284
tp88285
I1
s(g657
I42
g658
Vinsert
p88286
I60
VVariableDeclarationStatement
p88287
tp88288
I1
s(g72970
I42
g72971
Vinsert
p88289
I45
VStringLiteral: "synonym "
p88290
tp88291
I1
s(g6893
I42
g6894
Vinsert
p88292
I7
VAssignment: =
p88293
tp88294
I1
s(g256
I42
g257
Vinsert
p88295
I60
VVariableDeclarationStatement
p88296
tp88297
I1
s(g8788
I42
g8789
Vinsert
p88298
I43
VSimpleType: SchemaResolveVisitor
p88299
tp88300
I1
s(g29483
I42
g29484
Vinsert
p88301
I42
VSimpleName: exprParser
p88302
tp88303
I5
s(g6742
I42
g6743
Vinsert
p88304
I33
VNullLiteral
p88305
tp88306
I4
s(g49846
I42
g49847
Vinsert
p88307
I45
VStringLiteral: "b"
p88308
tp88309
I1
s(g25868
I42
g25869
Vinsert
p88310
I45
VStringLiteral: "\u005ctOR t2.order_id IS NOT NULL\u005cn"
p88311
tp88312
I1
s(g146
I42
g147
Vinsert
p88313
I43
VSimpleType: SQLServerSelectQueryBlock
p88314
tp88315
I2
s(Vinsert
p88316
I42
VSimpleName: getDatabase
p88317
Vinsert
p88318
I43
VSimpleType: SQLServerUseStatement
p88319
tp88320
I1
s(g6364
I42
g6365
Vinsert
p88321
I42
VSimpleName: dataSource
p88322
tp88323
I3
s(g3500
I42
g3501
Vinsert
p88324
I42
VSimpleName: out
p88325
tp88326
I1
s(g8203
I42
g8204
Vinsert
p88327
I42
VSimpleName: parseCreateSequence
p88328
tp88329
I1
s(g6074
I42
g6075
Vinsert
p88330
I42
VSimpleName: item
p88331
tp88332
I2
s(g657
I42
g658
Vinsert
p88333
I42
VSimpleName: Exception
p88334
tp88335
I1
s(g15387
I42
g15388
Vinsert
p88336
I42
VSimpleName: Boolean
p88337
tp88338
I1
s(g31474
I42
g31475
Vinsert
p88339
I42
VSimpleName: getClobOpenCount
p88340
tp88341
I2
s(g22126
I42
g22127
Vinsert
p88342
I42
VSimpleName: ConnectionEventListener
p88343
tp88344
I1
s(g20914
I42
g20915
Vinsert
p88345
I41
VReturnStatement
p88346
tp88347
I1
s(g21913
I42
g21914
Vinsert
p88348
I43
VSimpleType: Number
p88349
tp88350
I1
s(g41270
I42
g41271
Vinsert
p88351
I42
VSimpleName: offset
p88352
tp88353
I2
s(g13677
I42
g13678
Vinsert
p88354
I27
VInfixExpression: !=
p88355
tp88356
I1
s(g3083
I42
g3084
Vinsert
p88357
I43
VSimpleType: Exception
p88358
tp88359
I6
s(g64721
I42
g64722
Vinsert
p88360
I27
VInfixExpression: &&
p88361
tp88362
I1
s(g14484
I42
g14485
Vinsert
p88363
I42
VSimpleName: preStmt
p88364
tp88365
I1
s(g6562
I42
g6563
Vinsert
p88366
I58
VVariableDeclarationExpression
p88367
tp88368
I1
s(g35402
I42
g35403
Vinsert
p88369
I42
VSimpleName: denseRank
p88370
tp88371
I1
s(g419
I42
g420
Vinsert
p88372
I8
VBlock
p88373
tp88374
I1
s(g106
I42
g107
Vinsert
p88375
I42
VSimpleName: x
p88376
tp88377
I2
s(g17093
I42
g17094
Vinsert
p88378
I42
VSimpleName: String
p88379
tp88380
I3
s(g8282
I42
g8283
Vinsert
p88381
I42
VSimpleName: identExpr
p88382
tp88383
I1
s(g46523
I42
g46524
Vinsert
p88384
I42
VSimpleName: getPhysicalColumn
p88385
tp88386
I4
s(g8964
I42
g8965
Vinsert
p88387
I27
VInfixExpression: >
p88388
tp88389
I1
s(g35248
I42
g35249
Vinsert
p88390
I42
VSimpleName: List
p88391
tp88392
I1
s(g2403
I42
g2404
Vinsert
p88393
I43
VSimpleType: SQLAlterTableAlterColumn
p88394
tp88395
I1
s(g3184
I42
g3185
Vinsert
p88396
I57
VTypeLiteral
p88397
tp88398
I2
s(g2596
I42
g2597
Vinsert
p88399
I42
VSimpleName: setDefaultReadOnly
p88400
tp88401
I1
s(g1145
I42
g1146
Vinsert
p88402
I42
VSimpleName: LOG
p88403
tp88404
I2
s(g7532
I42
g7533
Vinsert
p88405
I42
VSimpleName: setVisible
p88406
tp88407
I1
s(g2104
I42
g2105
Vinsert
p88408
I21
VExpressionStatement
p88409
tp88410
I2
s(g9033
I42
g9034
Vinsert
p88411
I27
VInfixExpression: !=
p88412
tp88413
I1
s(g7216
I42
g7217
Vinsert
p88414
I43
VSimpleType: Object
p88415
tp88416
I2
s(g18691
I42
g18692
Vinsert
p88417
I27
VInfixExpression: ||
p88418
tp88419
I1
s(g9768
I42
g9769
Vinsert
p88420
I39
VPrimitiveType: void
p88421
tp88422
I1
s(g14622
I42
g14623
Vinsert
p88423
I42
VSimpleName: histogram_0_1_Updater
p88424
tp88425
I1
s(g3012
I42
g3013
Vinsert
p88426
I52
VThisExpression
p88427
tp88428
I1
s(g2178
I42
g2179
Vinsert
p88429
I22
VFieldAccess
p88430
tp88431
I14
s(g22386
I42
g22387
Vinsert
p88432
I42
VSimpleName: MySqlShowEventsStatement
p88433
tp88434
I2
s(g41057
I42
g41058
Vinsert
p88435
I42
VSimpleName: test01
p88436
tp88437
I1
s(g3770
I42
g3771
Vinsert
p88438
I32
VMethodInvocation
p88439
tp88440
I4
s(g7702
I42
g7703
Vinsert
p88441
I42
VSimpleName: print
p88442
tp88443
I1
s(g52775
I42
g52776
Vinsert
p88444
I45
VStringLiteral: " select * from test t with (nolock)"
p88445
tp88446
I1
s(g6607
I42
g6608
Vinsert
p88447
I39
VPrimitiveType: void
p88448
tp88449
I1
s(g26252
I42
g26253
Vinsert
p88450
I40
VQualifiedName: Token.CONTINUE
p88451
tp88452
I5
s(g2173
I42
g2174
Vinsert
p88453
I41
VReturnStatement
p88454
tp88455
I1
s(g19307
I42
g19308
Vinsert
p88456
I16
VConditionalExpression
p88457
tp88458
I1
s(g36179
I42
g36180
Vinsert
p88459
I8
VBlock
p88460
tp88461
I4
s(g13685
I42
g13686
Vinsert
p88462
I8
VBlock
p88463
tp88464
I1
s(g18224
I42
g18225
Vinsert
p88465
I8
VBlock
p88466
tp88467
I5
s(Vinsert
p88468
I42
VSimpleName: getColumns
p88469
Vinsert
p88470
I34
VNumberLiteral: 2
p88471
tp88472
I1
s(g70713
I42
g70714
Vinsert
p88473
I42
VSimpleName: PoolableWrapper
p88474
tp88475
I2
s(g18512
I42
g18513
Vinsert
p88476
I60
VVariableDeclarationStatement
p88477
tp88478
I2
s(g37021
I42
g37022
Vinsert
p88479
I45
VStringLiteral: "Syntax error"
p88480
tp88481
I1
s(g28118
I42
g28119
Vinsert
p88482
I42
VSimpleName: currentTableLocal
p88483
tp88484
I1
s(g836
I42
g837
Vinsert
p88485
I38
VPrefixExpression: !
p88486
tp88487
I2
s(g16213
I42
g16214
Vinsert
p88488
I5
VArrayType: String[]
p88489
tp88490
I1
s(Vinsert
p88491
I42
VSimpleName: assertEquals
p88492
Vinsert
p88493
I45
VStringLiteral: "SELECT user_id,user_flag,cat1_id,wireless_client_type,alipay_num,last_buy_time,md5,my_udf_001('t_datax_odps2ots_resource_tcif_dmp_user_topup_d',md5) AS datax_pt FROM mytable_001 WHERE ds='20150819'  DISTRIBUTE BY cast (datax_pt as BIGINT) SORT BY md5,user_id,user_flag,cat1_id,wireless_client_type"
p88494
tp88495
I1
s(g7678
I42
g7679
Vinsert
p88496
I43
VSimpleType: SQLASTOutputVisitor
p88497
tp88498
I1
s(g19841
I42
g19842
Vinsert
p88499
I43
VSimpleType: Exception
p88500
tp88501
I1
s(g5364
I42
g5365
Vinsert
p88502
I42
VSimpleName: OracleASTVisitor
p88503
tp88504
I63
s(g8504
I42
g8505
Vinsert
p88505
I43
VSimpleType: SQLExprParser
p88506
tp88507
I1
s(g9891
I42
g9892
Vinsert
p88508
I42
VSimpleName: parameterIndex
p88509
tp88510
I4
s(g16178
I42
g16179
Vinsert
p88511
I45
VStringLiteral: "\u005ctFROM mod_period_time\u005cn"
p88512
tp88513
I1
s(g18551
I42
g18552
Vinsert
p88514
I42
VSimpleName: tableName
p88515
tp88516
I1
s(g6707
I42
g6708
Vinsert
p88517
I24
VForStatement
p88518
tp88519
I2
s(g14896
I42
g14897
Vinsert
p88520
I31
VMethodDeclaration
p88521
tp88522
I1
s(g10731
I42
g10732
Vinsert
p88523
I42
VSimpleName: readClob
p88524
tp88525
I3
s(g3202
I42
g3203
Vinsert
p88526
I58
VVariableDeclarationExpression
p88527
tp88528
I7
s(g11790
I42
g11791
Vinsert
p88529
I42
VSimpleName: mbeanServer
p88530
tp88531
I1
s(g3679
I42
g3680
Vinsert
p88532
I27
VInfixExpression: >
p88533
tp88534
I1
s(g37973
I42
g37974
Vinsert
p88535
I8
VBlock
p88536
tp88537
I8
s(g1745
I42
g1746
Vinsert
p88538
I42
VSimpleName: _eq
p88539
tp88540
I1
s(g9524
I42
g9525
Vinsert
p88541
I45
VStringLiteral: "group by bucket_id;"
p88542
tp88543
I1
s(g6992
I42
g6993
Vinsert
p88544
I42
VSimpleName: getRunningCount
p88545
tp88546
I1
s(g12938
I42
g12939
Vinsert
p88547
I42
VSimpleName: errorLogging
p88548
tp88549
I1
s(g9778
I42
g9779
Vinsert
p88550
I42
VSimpleName: setParent
p88551
tp88552
I1
s(g9949
I42
g9950
Vinsert
p88553
I32
VMethodInvocation
p88554
tp88555
I2
s(g23113
I42
g23114
Vinsert
p88556
I42
VSimpleName: OracleUtils
p88557
tp88558
I1
s(g3472
I42
g3473
Vinsert
p88559
I43
VSimpleType: SQLName
p88560
tp88561
I1
s(g4088
I42
g4089
Vinsert
p88562
I42
VSimpleName: error
p88563
tp88564
I1
s(g21572
I42
g21573
Vinsert
p88565
I44
VSingleVariableDeclaration
p88566
tp88567
I1
s(g34868
I42
g34869
Vinsert
p88568
I45
VStringLiteral: "REPLACE"
p88569
tp88570
I1
s(Vinsert
p88571
I42
VSimpleName: setLockType
p88572
Vinsert
p88573
I25
VIfStatement
p88574
tp88575
I1
s(g13881
I42
g13882
Vinsert
p88576
I59
VVariableDeclarationFragment
p88577
tp88578
I1
s(g7111
I42
g7112
Vinsert
p88579
I8
VBlock
p88580
tp88581
I10
s(g6074
I42
g6075
Vinsert
p88582
I42
VSimpleName: token
p88583
tp88584
I1
s(g952
I42
g953
Vinsert
p88585
I32
VMethodInvocation
p88586
tp88587
I4
s(g34622
I42
g34623
Vinsert
p88588
I42
VSimpleName: setLogWriter
p88589
tp88590
I1
s(g16985
I42
g16986
Vinsert
p88591
I42
VSimpleName: Connection
p88592
tp88593
I3
s(g17997
I42
g17998
Vinsert
p88594
I43
VSimpleType: List
p88595
tp88596
I1
s(g8142
I42
g8143
Vinsert
p88597
I40
VQualifiedName: FnvHash.Constants.MERGE
p88598
tp88599
I1
s(g30742
I42
g30743
Vinsert
p88600
I42
VSimpleName: PGTypeCastExpr
p88601
tp88602
I2
s(g6607
I42
g6608
Vinsert
p88603
I14
VClassInstanceCreation
p88604
tp88605
I2
s(g67358
I42
g67359
Vinsert
p88606
I43
VSimpleType: PGFunctionTableSource
p88607
tp88608
I1
s(g21257
I42
g21258
Vinsert
p88609
I45
VStringLiteral: "                  from bas_unit t, bas_area us"
p88610
tp88611
I1
s(g3243
I42
g3244
Vinsert
p88612
I42
VSimpleName: passwordParam
p88613
tp88614
I1
s(g68021
I42
g68022
Vinsert
p88615
I34
VNumberLiteral: 0
p88616
tp88617
I1
s(g5012
I42
g5013
Vinsert
p88618
I27
VInfixExpression: !=
p88619
tp88620
I2
s(g26252
I42
g26253
Vinsert
p88621
I42
VSimpleName: map
p88622
tp88623
I109
s(g2364
I42
g2365
Vinsert
p88624
I60
VVariableDeclarationStatement
p88625
tp88626
I1
s(g2281
I42
g2282
Vinsert
p88627
I25
VIfStatement
p88628
tp88629
I1
s(g34738
I42
g34739
Vinsert
p88630
I40
VQualifiedName: JdbcConstants.HIVE
p88631
tp88632
I1
s(g15594
I42
g15595
Vinsert
p88633
I42
VSimpleName: provider
p88634
tp88635
I4
s(g10320
I42
g10321
Vinsert
p88636
I42
VSimpleName: loadDefault
p88637
tp88638
I2
s(g9639
I42
g9640
Vinsert
p88639
I45
VStringLiteral: "\u005ct\u005ctIF VALUECURSOR % ISOPEN THEN\u005cn"
p88640
tp88641
I1
s(g40052
I42
g40053
Vinsert
p88642
I36
VParenthesizedExpression
p88643
tp88644
I1
s(Vinsert
p88645
I42
VSimpleName: println
p88646
Vinsert
p88647
I40
VQualifiedName: JdbcConstants.ORACLE
p88648
tp88649
I12
s(g24278
I42
g24279
Vinsert
p88650
I42
VSimpleName: getInitParameter
p88651
tp88652
I1
s(g4515
I42
g4516
Vinsert
p88653
I45
VStringLiteral: "CREATE TABLE \u005c"SONAR\u005c".\u005c"AUTHORS\u005c" ("
p88654
tp88655
I1
s(g11067
I42
g11068
Vinsert
p88656
I32
VMethodInvocation
p88657
tp88658
I11
s(g24904
I42
g24905
Vinsert
p88659
I45
VStringLiteral: "EXECUTE"
p88660
tp88661
I1
s(g16648
I42
g16649
Vinsert
p88662
I32
VMethodInvocation
p88663
tp88664
I9
s(g20777
I42
g20778
Vinsert
p88665
I42
VSimpleName: applyDropColumn
p88666
tp88667
I1
s(g14361
I42
g14362
Vinsert
p88668
I83
VModifier: public
p88669
tp88670
I9
s(g5277
I42
g5278
Vinsert
p88671
I27
VInfixExpression: !=
p88672
tp88673
I2
s(g9222
I42
g9223
Vinsert
p88674
I25
VIfStatement
p88675
tp88676
I2
s(g10275
I42
g10276
Vinsert
p88677
I32
VMethodInvocation
p88678
tp88679
I3
s(g7445
I42
g7446
Vinsert
p88680
I42
VSimpleName: rowData
p88681
tp88682
I10
s(g71
I42
g72
Vinsert
p88683
I43
VSimpleType: SQLPropertyExpr
p88684
tp88685
I2
s(g2712
I42
g2713
Vinsert
p88686
I42
VSimpleName: dbType
p88687
tp88688
I26
s(g34122
I42
g34123
Vinsert
p88689
I42
VSimpleName: decrypter
p88690
tp88691
I4
s(g12854
I42
g12855
Vinsert
p88692
I44
VSingleVariableDeclaration
p88693
tp88694
I1
s(g29295
I42
g29296
Vinsert
p88695
I42
VSimpleName: dbType
p88696
tp88697
I2
s(g30896
I42
g30897
Vinsert
p88698
I42
VSimpleName: options
p88699
tp88700
I2
s(g10498
I42
g10499
Vinsert
p88701
I25
VIfStatement
p88702
tp88703
I1
s(g9222
I42
g9223
Vinsert
p88704
I33
VNullLiteral
p88705
tp88706
I1
s(g70918
I42
g70919
Vinsert
p88707
I42
VSimpleName: setUsePingMethod
p88708
tp88709
I1
s(g78674
I42
g78675
Vinsert
p88710
I42
VSimpleName: OracleFetchStatement
p88711
tp88712
I1
s(Vinsert
p88713
I42
VSimpleName: assertEquals
p88714
Vinsert
p88715
I45
VStringLiteral: "select split(val, ',')[1] from dual"
p88716
tp88717
I1
s(g16402
I42
g16403
Vinsert
p88718
I42
VSimpleName: pos
p88719
tp88720
I1
s(g7552
I42
g7553
Vinsert
p88721
I34
VNumberLiteral: 300
p88722
tp88723
I1
s(g1491
I42
g1492
Vinsert
p88724
I43
VSimpleType: RegexpMethodPointcutAdvisor
p88725
tp88726
I1
s(g5022
I42
g5023
Vinsert
p88727
I45
VStringLiteral: "\u005cn\u005ct\u005ct\u005ct))"
p88728
tp88729
I1
s(g4867
I42
g4868
Vinsert
p88730
I42
VSimpleName: getValue
p88731
tp88732
I1
s(g4839
I42
g4840
Vinsert
p88733
I8
VBlock
p88734
tp88735
I1
s(g76493
I42
g76494
Vinsert
p88736
I13
VCharacterLiteral: '-'
p88737
tp88738
I1
s(g74937
I42
g74938
Vinsert
p88739
I42
VSimpleName: SQLUnaryExpr
p88740
tp88741
I2
s(g1405
I42
g1406
Vinsert
p88742
I42
VSimpleName: wasNull
p88743
tp88744
I1
s(g43158
I42
g43159
Vinsert
p88745
I40
VQualifiedName: Token.LIMIT
p88746
tp88747
I2
s(g2115
I42
g2116
Vinsert
p88748
I32
VMethodInvocation
p88749
tp88750
I9
s(g4111
I42
g4112
Vinsert
p88751
I42
VSimpleName: indexTo
p88752
tp88753
I2
s(g4075
I42
g4076
Vinsert
p88754
I43
VSimpleType: ArrayList
p88755
tp88756
I1
s(g36569
I42
g36570
Vinsert
p88757
I42
VSimpleName: nextToken
p88758
tp88759
I1
s(g78974
I42
g78975
Vinsert
p88760
I43
VSimpleType: MockConnection
p88761
tp88762
I2
s(g14891
I42
g14892
Vinsert
p88763
I42
VSimpleName: msg
p88764
tp88765
I1
s(Vinsert
p88766
I42
VSimpleName: expr
p88767
Vinsert
p88768
I42
VSimpleName: OracleCursorExpr
p88769
tp88770
I1
s(g10044
I42
g10045
Vinsert
p88771
I42
VSimpleName: Override
p88772
tp88773
I2
s(g7280
I42
g7281
Vinsert
p88774
I43
VSimpleType: IllegalStateException
p88775
tp88776
I2
s(g41564
I42
g41565
Vinsert
p88777
I42
VSimpleName: provider
p88778
tp88779
I2
s(g65343
I42
g65344
Vinsert
p88780
I42
VSimpleName: assertTrue
p88781
tp88782
I6
s(g5839
I42
g5840
Vinsert
p88783
I45
VStringLiteral: "mysql"
p88784
tp88785
I1
s(g65343
I42
g65344
Vinsert
p88786
I42
VSimpleName: Assert
p88787
tp88788
I14
s(g5310
I42
g5311
Vinsert
p88789
I44
VSingleVariableDeclaration
p88790
tp88791
I2
s(g14839
I42
g14840
Vinsert
p88792
I45
VStringLiteral: "<tr><td>LogicConnectCount</td><td>"
p88793
tp88794
I1
s(g9461
I42
g9462
Vinsert
p88795
I42
VSimpleName: where
p88796
tp88797
I3
s(g15456
I42
g15457
Vinsert
p88798
I8
VBlock
p88799
tp88800
I2
s(g1825
I42
g1826
Vinsert
p88801
I8
VBlock
p88802
tp88803
I85
s(g9748
I42
g9749
Vinsert
p88804
I45
VStringLiteral: " ROWS"
p88805
tp88806
I1
s(g12299
I42
g12300
Vinsert
p88807
I42
VSimpleName: Object
p88808
tp88809
I2
s(g19656
I42
g19657
Vinsert
p88810
I43
VSimpleType: SQLSelectQuery
p88811
tp88812
I2
s(g23242
I42
g23243
Vinsert
p88813
I8
VBlock
p88814
tp88815
I5
s(g12671
I42
g12672
Vinsert
p88816
I8
VBlock
p88817
tp88818
I1
s(g376
I42
g377
Vinsert
p88819
I42
VSimpleName: stmtsB
p88820
tp88821
I1
s(g1559
I42
g1560
Vinsert
p88822
I42
VSimpleName: String
p88823
tp88824
I3
s(g35379
I42
g35380
Vinsert
p88825
I42
VSimpleName: setAccessible
p88826
tp88827
I1
s(g2543
I42
g2544
Vinsert
p88828
I33
VNullLiteral
p88829
tp88830
I3
s(g61368
I42
g61369
Vinsert
p88831
I45
VStringLiteral: "RunningCount"
p88832
tp88833
I1
s(g632
I42
g633
Vinsert
p88834
I43
VSimpleType: java.sql.Time
p88835
tp88836
I1
s(g17082
I42
g17083
Vinsert
p88837
I60
VVariableDeclarationStatement
p88838
tp88839
I1
s(g25125
I42
g25126
Vinsert
p88840
I60
VVariableDeclarationStatement
p88841
tp88842
I2
s(g35430
I42
g35431
Vinsert
p88843
I45
VStringLiteral: "select ?"
p88844
tp88845
I1
s(g5882
I42
g5883
Vinsert
p88846
I42
VSimpleName: SQLTableSource
p88847
tp88848
I1
s(g12209
I42
g12210
Vinsert
p88849
I42
VSimpleName: getProviderWhiteList
p88850
tp88851
I1
s(Vinsert
p88852
I42
VSimpleName: assertNotNull
p88853
Vinsert
p88854
I42
VSimpleName: assertNotNull
p88855
tp88856
I1
s(g12090
I42
g12091
Vinsert
p88857
I44
VSingleVariableDeclaration
p88858
tp88859
I1
s(g27102
I42
g27103
Vinsert
p88860
I43
VSimpleType: StatementProxy
p88861
tp88862
I2
s(g4152
I42
g4153
Vinsert
p88863
I8
VBlock
p88864
tp88865
I14
s(g10953
I42
g10954
Vinsert
p88866
I42
VSimpleName: createSelectQueryBlock
p88867
tp88868
I1
s(g9569
I42
g9570
Vinsert
p88869
I38
VPrefixExpression: !
p88870
tp88871
I1
s(Vinsert
p88872
I42
VSimpleName: count
p88873
Vinsert
p88874
I45
VStringLiteral: "select distinct a.col1,a.col2 from test a"
p88875
tp88876
I1
s(g9456
I42
g9457
Vinsert
p88877
I42
VSimpleName: exprParser
p88878
tp88879
I1
s(g341
I42
g342
Vinsert
p88880
I25
VIfStatement
p88881
tp88882
I4
s(g2629
I42
g2630
Vinsert
p88883
I42
VSimpleName: x_b
p88884
tp88885
I1
s(g12435
I42
g12436
Vinsert
p88886
I39
VPrimitiveType: boolean
p88887
tp88888
I1
s(g10692
I42
g10693
Vinsert
p88889
I43
VSimpleType: ArrayList
p88890
tp88891
I4
s(g46642
I42
g46643
Vinsert
p88892
I42
VSimpleName: acceptIdentifier
p88893
tp88894
I1
s(g5216
I42
g5217
Vinsert
p88895
I42
VSimpleName: remoteAddressHeader
p88896
tp88897
I1
s(g796
I42
g797
Vinsert
p88898
I42
VSimpleName: unwrap
p88899
tp88900
I2
s(g46523
I42
g46524
Vinsert
p88901
I32
VMethodInvocation
p88902
tp88903
I5
s(g39695
I42
g39696
Vinsert
p88904
I42
VSimpleName: parseHints
p88905
tp88906
I1
s(g111
I42
g112
Vinsert
p88907
I45
VStringLiteral: "STATS_PERSISTENT"
p88908
tp88909
I1
s(g1790
I42
g1791
Vinsert
p88910
I39
VPrimitiveType: int
p88911
tp88912
I1
s(g29488
I42
g29489
Vinsert
p88913
I42
VSimpleName: sessionStatMap
p88914
tp88915
I1
s(g10897
I42
g10898
Vinsert
p88916
I34
VNumberLiteral: 1
p88917
tp88918
I2
s(g14072
I42
g14073
Vinsert
p88919
I42
VSimpleName: x
p88920
tp88921
I3
s(g2910
I42
g2911
Vinsert
p88922
I43
VSimpleType: List
p88923
tp88924
I7
s(g14176
I42
g14177
Vinsert
p88925
I45
VStringLiteral: "\u005c"SYS\u005c".SYS_TEMP_0FD9D66FD_93E068F3"
p88926
tp88927
I1
s(g63885
I42
g63886
Vinsert
p88928
I36
VParenthesizedExpression
p88929
tp88930
I3
s(g15043
I42
g15044
Vinsert
p88931
I42
VSimpleName: traceEnable
p88932
tp88933
I2
s(g3490
I42
g3491
Vinsert
p88934
I42
VSimpleName: add
p88935
tp88936
I8
s(g28777
I42
g28778
Vinsert
p88937
I42
VSimpleName: conn_7
p88938
tp88939
I1
s(g11869
I42
g11870
Vinsert
p88940
I34
VNumberLiteral: 0
p88941
tp88942
I2
s(g12488
I42
g12489
Vinsert
p88943
I43
VSimpleType: SQLName
p88944
tp88945
I1
s(g25097
I42
g25098
Vinsert
p88946
I42
VSimpleName: Utils
p88947
tp88948
I2
s(g6760
I42
g6761
Vinsert
p88949
I33
VNullLiteral
p88950
tp88951
I1
s(g4890
I42
g4891
Vinsert
p88952
I59
VVariableDeclarationFragment
p88953
tp88954
I1
s(g7678
I42
g7679
Vinsert
p88955
I42
VSimpleName: createMappingVisitor
p88956
tp88957
I1
s(g4926
I42
g4927
Vinsert
p88958
I42
VSimpleName: holder
p88959
tp88960
I1
s(g3345
I42
g3346
Vinsert
p88961
I31
VMethodDeclaration
p88962
tp88963
I31
s(g9763
I42
g9764
Vinsert
p88964
I43
VSimpleType: OdpsStatementParser
p88965
tp88966
I14
s(g13881
I42
g13882
Vinsert
p88967
I13
VCharacterLiteral: ';'
p88968
tp88969
I1
s(g29686
I42
g29687
Vinsert
p88970
I42
VSimpleName: from
p88971
tp88972
I8
s(g20411
I42
g20412
Vinsert
p88973
I27
VInfixExpression: !=
p88974
tp88975
I1
s(g15475
I42
g15476
Vinsert
p88976
I40
VQualifiedName: Token.UNIQUE
p88977
tp88978
I1
s(g51375
I42
g51376
Vinsert
p88979
I38
VPrefixExpression: !
p88980
tp88981
I4
s(g1996
I42
g1997
Vinsert
p88982
I8
VBlock
p88983
tp88984
I2
s(g13223
I42
g13224
Vinsert
p88985
I44
VSingleVariableDeclaration
p88986
tp88987
I1
s(g12159
I42
g12160
Vinsert
p88988
I41
VReturnStatement
p88989
tp88990
I1
s(g8166
I42
g8167
Vinsert
p88991
I2
VArrayAccess
p88992
tp88993
I2
s(g10882
I42
g10883
Vinsert
p88994
I27
VInfixExpression: ==
p88995
tp88996
I11
s(g12930
I42
g12931
Vinsert
p88997
I42
VSimpleName: orderBy
p88998
tp88999
I6
s(g41578
I42
g41579
Vinsert
p89000
I42
VSimpleName: connectCount
p89001
tp89002
I1
s(g59334
I42
g59335
Vinsert
p89003
I42
VSimpleName: parseStatementList
p89004
tp89005
I2
s(g16715
I42
g16716
Vinsert
p89006
I45
VStringLiteral: "oracle"
p89007
tp89008
I1
s(g28221
I42
g28222
Vinsert
p89009
I59
VVariableDeclarationFragment
p89010
tp89011
I1
s(g4152
I42
g4153
Vinsert
p89012
I42
VSimpleName: start
p89013
tp89014
I6
s(g11935
I42
g11936
Vinsert
p89015
I8
VBlock
p89016
tp89017
I1
s(g21856
I42
g21857
Vinsert
p89018
I42
VSimpleName: assertNotNull
p89019
tp89020
I2
s(Vinsert
p89021
I42
VSimpleName: token
p89022
Vinsert
p89023
I40
VQualifiedName: Token.DROP
p89024
tp89025
I1
s(g3704
I42
g3705
Vinsert
p89026
I42
VSimpleName: getWhere
p89027
tp89028
I1
s(g896
I42
g897
Vinsert
p89029
I33
VNullLiteral
p89030
tp89031
I1
s(g7650
I42
g7651
Vinsert
p89032
I27
VInfixExpression: <
p89033
tp89034
I1
s(g9944
I42
g9945
Vinsert
p89035
I45
VStringLiteral: "\u005ctemp_id, \u005cn"
p89036
tp89037
I1
s(g23414
I42
g23415
Vinsert
p89038
I14
VClassInstanceCreation
p89039
tp89040
I2
s(g2489
I42
g2490
Vinsert
p89041
I42
VSimpleName: doInBackground
p89042
tp89043
I1
s(g69610
I42
g69611
Vinsert
p89044
I42
VSimpleName: statemen
p89045
tp89046
I24
s(g1400
I42
g1401
Vinsert
p89047
I42
VSimpleName: printAndAccept
p89048
tp89049
I2
s(g9652
I42
g9653
Vinsert
p89050
I42
VSimpleName: getUrlPattern
p89051
tp89052
I2
s(g5465
I42
g5466
Vinsert
p89053
I42
VSimpleName: sql
p89054
tp89055
I1
s(g22647
I42
g22648
Vinsert
p89056
I45
VStringLiteral: "\u005cthash,\u005cn"
p89057
tp89058
I1
s(g3898
I42
g3899
Vinsert
p89059
I25
VIfStatement
p89060
tp89061
I1
s(g21572
I42
g21573
Vinsert
p89062
I78
VMarkerAnnotation
p89063
tp89064
I1
s(g13152
I42
g13153
Vinsert
p89065
I42
VSimpleName: name
p89066
tp89067
I2
s(g19461
I42
g19462
Vinsert
p89068
I42
VSimpleName: print
p89069
tp89070
I1
s(g25389
I42
g25390
Vinsert
p89071
I43
VSimpleType: Class
p89072
tp89073
I2
s(g18773
I42
g18774
Vinsert
p89074
I25
VIfStatement
p89075
tp89076
I7
s(g79998
I42
g79999
Vinsert
p89077
I33
VNullLiteral
p89078
tp89079
I2
s(g2558
I42
g2559
Vinsert
p89080
I8
VBlock
p89081
tp89082
I1
s(g1047
I42
g1048
Vinsert
p89083
I42
VSimpleName: log
p89084
tp89085
I1
s(Vinsert
p89086
I42
VSimpleName: setParent
p89087
Vinsert
p89088
I42
VSimpleName: owner
p89089
tp89090
I3
s(g19708
I42
g19709
Vinsert
p89091
I42
VSimpleName: executeHandler
p89092
tp89093
I3
s(g251
I42
g252
Vinsert
p89094
I8
VBlock
p89095
tp89096
I1
s(g1996
I42
g1997
Vinsert
p89097
I42
VSimpleName: x
p89098
tp89099
I4
s(g32350
I42
g32351
Vinsert
p89100
I27
VInfixExpression: ==
p89101
tp89102
I1
s(g15490
I42
g15491
Vinsert
p89103
I31
VMethodDeclaration
p89104
tp89105
I14
s(g9924
I42
g9925
Vinsert
p89106
I45
VStringLiteral: "stat,trace"
p89107
tp89108
I1
s(g16447
I42
g16448
Vinsert
p89109
I42
VSimpleName: owner
p89110
tp89111
I1
s(g5653
I42
g5654
Vinsert
p89112
I43
VSimpleType: ModelRulesClause
p89113
tp89114
I2
s(g13042
I42
g13043
Vinsert
p89115
I42
VSimpleName: rightOp
p89116
tp89117
I2
s(Vinsert
p89118
I42
VSimpleName: equals
p89119
Vinsert
p89120
I27
VInfixExpression: ==
p89121
tp89122
I15
s(g5974
I42
g5975
Vinsert
p89123
I42
VSimpleName: Exception
p89124
tp89125
I1
s(Vinsert
p89126
I42
VSimpleName: evalExpr
p89127
Vinsert
p89128
I42
VSimpleName: pow
p89129
tp89130
I1
s(g11745
I42
g11746
Vinsert
p89131
I34
VNumberLiteral: 1
p89132
tp89133
I2
s(g2961
I42
g2962
Vinsert
p89134
I42
VSimpleName: resultSet
p89135
tp89136
I1
s(g156
I42
g157
Vinsert
p89137
I31
VMethodDeclaration
p89138
tp89139
I2
s(g17997
I42
g17998
Vinsert
p89140
I42
VSimpleName: List
p89141
tp89142
I2
s(g18763
I42
g18764
Vinsert
p89143
I42
VSimpleName: V
p89144
tp89145
I1
s(g5936
I42
g5937
Vinsert
p89146
I45
VStringLiteral: "\u005ct\u005ct\u005ctfrom mock_app.adl_mock_v_fct\u005cn"
p89147
tp89148
I1
s(g9017
I42
g9018
Vinsert
p89149
I36
VParenthesizedExpression
p89150
tp89151
I2
s(g49201
I42
g49202
Vinsert
p89152
I45
VStringLiteral: "SELECT * FROM `information_schema`.`columns` WHERE TABLE_NAME='aaaa' AND TABLE_SCHEMA='xxxx'"
p89153
tp89154
I1
s(g25063
I42
g25064
Vinsert
p89155
I42
VSimpleName: exprParser
p89156
tp89157
I2
s(g3012
I42
g3013
Vinsert
p89158
I42
VSimpleName: token
p89159
tp89160
I1
s(g5805
I42
g5806
Vinsert
p89161
I34
VNumberLiteral: 1
p89162
tp89163
I1
s(g25756
I42
g25757
Vinsert
p89164
I42
VSimpleName: TableStat
p89165
tp89166
I2
s(Vinsert
p89167
I42
VSimpleName: assertEquals
p89168
Vinsert
p89169
I45
VStringLiteral: "select * from t --abc"
p89170
tp89171
I1
s(g8030
I42
g8031
Vinsert
p89172
I83
VModifier: public
p89173
tp89174
I1
s(g30808
I42
g30809
Vinsert
p89175
I42
VSimpleName: MySqlSetTransactionIsolationLevelStatement
p89176
tp89177
I1
s(g20475
I42
g20476
Vinsert
p89178
I39
VPrimitiveType: void
p89179
tp89180
I5
s(g78389
I42
g78390
Vinsert
p89181
I45
VStringLiteral: "SECOND"
p89182
tp89183
I1
s(g31219
I42
g31220
Vinsert
p89184
I42
VSimpleName: firstItem
p89185
tp89186
I1
s(g444
I42
g445
Vinsert
p89187
I32
VMethodInvocation
p89188
tp89189
I1
s(g39729
I42
g39730
Vinsert
p89190
I42
VSimpleName: MySqlInsertStatement
p89191
tp89192
I33
s(g896
I42
g897
Vinsert
p89193
I8
VBlock
p89194
tp89195
I1
s(g12796
I42
g12797
Vinsert
p89196
I42
VSimpleName: assertTrue
p89197
tp89198
I1
s(g37577
I42
g37578
Vinsert
p89199
I42
VSimpleName: PhoenixStatementParser
p89200
tp89201
I1
s(g733
I42
g734
Vinsert
p89202
I42
VSimpleName: thread
p89203
tp89204
I4
s(g17550
I42
g17551
Vinsert
p89205
I34
VNumberLiteral: 101
p89206
tp89207
I1
s(g4424
I42
g4425
Vinsert
p89208
I32
VMethodInvocation
p89209
tp89210
I3
s(g6126
I42
g6127
Vinsert
p89211
I33
VNullLiteral
p89212
tp89213
I1
s(g13857
I42
g13858
Vinsert
p89214
I43
VSimpleType: Map
p89215
tp89216
I1
s(g10252
I42
g10253
Vinsert
p89217
I42
VSimpleName: getItems
p89218
tp89219
I2
s(g9919
I42
g9920
Vinsert
p89220
I42
VSimpleName: SQLSelect
p89221
tp89222
I4
s(g6089
I42
g6090
Vinsert
p89223
I42
VSimpleName: executeUpdate
p89224
tp89225
I1
s(g17408
I42
g17409
Vinsert
p89226
I42
VSimpleName: name
p89227
tp89228
I1
s(g4780
I42
g4781
Vinsert
p89229
I44
VSingleVariableDeclaration
p89230
tp89231
I1
s(g12488
I42
g12489
Vinsert
p89232
I42
VSimpleName: names
p89233
tp89234
I3
s(g13784
I42
g13785
Vinsert
p89235
I50
VSwitchStatement
p89236
tp89237
I1
s(g26463
I42
g26464
Vinsert
p89238
I45
VStringLiteral: "\u005cn\u005ctdepartment_id NUMBER(2),"
p89239
tp89240
I2
s(g919
I42
g920
Vinsert
p89241
I42
VSimpleName: dbType
p89242
tp89243
I4
s(g50661
I42
g50662
Vinsert
p89244
I45
VStringLiteral: "jdbc:mock:xxx"
p89245
tp89246
I1
s(g23761
I42
g23762
Vinsert
p89247
I59
VVariableDeclarationFragment
p89248
tp89249
I1
s(g5079
I42
g5080
Vinsert
p89250
I39
VPrimitiveType: void
p89251
tp89252
I27
s(g11790
I42
g11791
Vinsert
p89253
I7
VAssignment: =
p89254
tp89255
I2
s(g16046
I42
g16047
Vinsert
p89256
I42
VSimpleName: getInstance
p89257
tp89258
I1
s(g24216
I42
g24217
Vinsert
p89259
I42
VSimpleName: password
p89260
tp89261
I2
s(g2049
I42
g2050
Vinsert
p89262
I45
VStringLiteral: "LOGGING\u005cn"
p89263
tp89264
I9
s(g20782
I42
g20783
Vinsert
p89265
I42
VSimpleName: SQLName
p89266
tp89267
I2
s(g7280
I42
g7281
Vinsert
p89268
I42
VSimpleName: UnsupportedEncodingException
p89269
tp89270
I1
s(g12069
I42
g12070
Vinsert
p89271
I40
VQualifiedName: JdbcConstants.HIVE
p89272
tp89273
I1
s(g2454
I42
g2455
Vinsert
p89274
I14
VClassInstanceCreation
p89275
tp89276
I5
s(g4674
I42
g4675
Vinsert
p89277
I45
VStringLiteral: "TO_CHAR"
p89278
tp89279
I1
s(g10550
I42
g10551
Vinsert
p89280
I59
VVariableDeclarationFragment
p89281
tp89282
I6
s(g18399
I42
g18400
Vinsert
p89283
I42
VSimpleName: rs
p89284
tp89285
I9
s(g11376
I42
g11377
Vinsert
p89286
I43
VSimpleType: MySqlLexer
p89287
tp89288
I2
s(g13569
I42
g13570
Vinsert
p89289
I42
VSimpleName: visit
p89290
tp89291
I2
s(g5007
I42
g5008
Vinsert
p89292
I27
VInfixExpression: !=
p89293
tp89294
I1
s(g48353
I42
g48354
Vinsert
p89295
I13
VCharacterLiteral: ' '
p89296
tp89297
I1
s(g5818
I42
g5819
Vinsert
p89298
I42
VSimpleName: Map
p89299
tp89300
I1
s(g43273
I42
g43274
Vinsert
p89301
I42
VSimpleName: typeName
p89302
tp89303
I1
s(g1660
I42
g1661
Vinsert
p89304
I43
VSimpleType: TargetSource
p89305
tp89306
I1
s(g26531
I42
g26532
Vinsert
p89307
I42
VSimpleName: SQLSelectStatement
p89308
tp89309
I4
s(g4684
I42
g4685
Vinsert
p89310
I21
VExpressionStatement
p89311
tp89312
I2
s(g1120
I42
g1121
Vinsert
p89313
I83
VModifier: public
p89314
tp89315
I1
s(g22538
I42
g22539
Vinsert
p89316
I43
VSimpleType: SQLExpr
p89317
tp89318
I1
s(g15087
I42
g15088
Vinsert
p89319
I42
VSimpleName: registerMBean
p89320
tp89321
I1
s(g39280
I42
g39281
Vinsert
p89322
I42
VSimpleName: windowing
p89323
tp89324
I2
s(g31402
I42
g31403
Vinsert
p89325
I42
VSimpleName: accept
p89326
tp89327
I6
s(g14829
I42
g14830
Vinsert
p89328
I42
VSimpleName: stmt
p89329
tp89330
I10
s(g66537
I42
g66538
Vinsert
p89331
I42
VSimpleName: assign
p89332
tp89333
I2
s(g31887
I42
g31888
Vinsert
p89334
I1
VAnonymousClassDeclaration
p89335
tp89336
I1
s(g5831
I42
g5832
Vinsert
p89337
I21
VExpressionStatement
p89338
tp89339
I2
s(g10586
I42
g10587
Vinsert
p89340
I42
VSimpleName: close
p89341
tp89342
I1
s(g78974
I42
g78975
Vinsert
p89343
I42
VSimpleName: wrapper
p89344
tp89345
I2
s(g24184
I42
g24185
Vinsert
p89346
I42
VSimpleName: DruidDataSource
p89347
tp89348
I2
s(g43028
I42
g43029
Vinsert
p89349
I42
VSimpleName: filter
p89350
tp89351
I3
s(g211
I42
g212
Vinsert
p89352
I40
VQualifiedName: join.right
p89353
tp89354
I1
s(g76667
I42
g76668
Vinsert
p89355
I45
VStringLiteral: "bvt/parser/oracle-7.txt"
p89356
tp89357
I1
s(g23717
I42
g23718
Vinsert
p89358
I42
VSimpleName: list
p89359
tp89360
I1
s(g1256
I42
g1257
Vinsert
p89361
I42
VSimpleName: maxPoolSize
p89362
tp89363
I1
s(g2238
I42
g2239
Vinsert
p89364
I42
VSimpleName: getName
p89365
tp89366
I1
s(g52306
I42
g52307
Vinsert
p89367
I43
VSimpleType: SQLBlockStatement
p89368
tp89369
I1
s(g156
I42
g157
Vinsert
p89370
I83
VModifier: public
p89371
tp89372
I2
s(g11529
I42
g11530
Vinsert
p89373
I42
VSimpleName: getFullGC
p89374
tp89375
I1
s(g15692
I42
g15693
Vinsert
p89376
I42
VSimpleName: ThreadLocal
p89377
tp89378
I1
s(g69751
I42
g69752
Vinsert
p89379
I45
VStringLiteral: "JdbcUpdateCount"
p89380
tp89381
I1
s(g4849
I42
g4850
Vinsert
p89382
I85
VDimension
p89383
tp89384
I1
s(g5079
I42
g5080
Vinsert
p89385
I42
VSimpleName: setMaxActive
p89386
tp89387
I1
s(g11790
I42
g11791
Vinsert
p89388
I25
VIfStatement
p89389
tp89390
I1
s(g17261
I42
g17262
Vinsert
p89391
I40
VQualifiedName: Token.EQ
p89392
tp89393
I5
s(g20486
I42
g20487
Vinsert
p89394
I43
VSimpleType: DataSourceInfo
p89395
tp89396
I1
s(g19888
I42
g19889
Vinsert
p89397
I33
VNullLiteral
p89398
tp89399
I1
s(g25268
I42
g25269
Vinsert
p89400
I42
VSimpleName: addSelectItem
p89401
tp89402
I1
s(g1491
I42
g1492
Vinsert
p89403
I42
VSimpleName: Advisor
p89404
tp89405
I1
s(g16778
I42
g16779
Vinsert
p89406
I42
VSimpleName: dataSource
p89407
tp89408
I2
s(g4370
I42
g4371
Vinsert
p89409
I42
VSimpleName: SchemaRepository
p89410
tp89411
I1
s(g23045
I42
g23046
Vinsert
p89412
I42
VSimpleName: Override
p89413
tp89414
I1
s(g23414
I42
g23415
Vinsert
p89415
I40
VQualifiedName: SQLBinaryOperator.Is
p89416
tp89417
I1
s(g37285
I42
g37286
Vinsert
p89418
I42
VSimpleName: columnExpr
p89419
tp89420
I1
s(g16060
I42
g16061
Vinsert
p89421
I45
VStringLiteral: " MAXVALUE "
p89422
tp89423
I1
s(g6750
I42
g6751
Vinsert
p89424
I39
VPrimitiveType: int
p89425
tp89426
I1
s(g25293
I42
g25294
Vinsert
p89427
I45
VStringLiteral: "%g"
p89428
tp89429
I1
s(Vinsert
p89430
I42
VSimpleName: get
p89431
Vinsert
p89432
I40
VQualifiedName: JdbcConstants.HIVE
p89433
tp89434
I2
s(g28698
I42
g28699
Vinsert
p89435
I42
VSimpleName: values
p89436
tp89437
I3
s(g34785
I42
g34786
Vinsert
p89438
I43
VSimpleType: SQLMethodInvokeExpr
p89439
tp89440
I1
s(g37074
I42
g37075
Vinsert
p89441
I45
VStringLiteral: "ESCROW"
p89442
tp89443
I1
s(g17652
I42
g17653
Vinsert
p89444
I42
VSimpleName: visit
p89445
tp89446
I14
s(g7817
I42
g7818
Vinsert
p89447
I43
VSimpleType: ResultSetProxy
p89448
tp89449
I2
s(g15010
I42
g15011
Vinsert
p89450
I34
VNumberLiteral: 0
p89451
tp89452
I1
s(g14274
I42
g14275
Vinsert
p89453
I70
VEnhancedForStatement
p89454
tp89455
I1
s(g4730
I42
g4731
Vinsert
p89456
I40
VQualifiedName: ParameterType.IN
p89457
tp89458
I1
s(g891
I42
g892
Vinsert
p89459
I8
VBlock
p89460
tp89461
I2
s(g7399
I42
g7400
Vinsert
p89462
I38
VPrefixExpression: ++
p89463
tp89464
I1
s(g23242
I42
g23243
Vinsert
p89465
I42
VSimpleName: getOperator
p89466
tp89467
I1
s(g25493
I42
g25494
Vinsert
p89468
I42
VSimpleName: list
p89469
tp89470
I5
s(g4106
I42
g4107
Vinsert
p89471
I34
VNumberLiteral: 1000
p89472
tp89473
I1
s(g386
I42
g387
Vinsert
p89474
I42
VSimpleName: jsonString
p89475
tp89476
I1
s(g14447
I42
g14448
Vinsert
p89477
I27
VInfixExpression: !=
p89478
tp89479
I2
s(g1554
I42
g1555
Vinsert
p89480
I36
VParenthesizedExpression
p89481
tp89482
I1
s(g19964
I42
g19965
Vinsert
p89483
I40
VQualifiedName: Token.IDENTIFIER
p89484
tp89485
I1
s(g9827
I42
g9828
Vinsert
p89486
I78
VMarkerAnnotation
p89487
tp89488
I1
s(g2504
I42
g2505
Vinsert
p89489
I42
VSimpleName: getMinRows
p89490
tp89491
I1
s(g73338
I42
g73339
Vinsert
p89492
I42
VSimpleName: constraint
p89493
tp89494
I4
s(g3770
I42
g3771
Vinsert
p89495
I25
VIfStatement
p89496
tp89497
I2
s(g26548
I42
g26549
Vinsert
p89498
I85
VDimension
p89499
tp89500
I1
s(g10412
I42
g10413
Vinsert
p89501
I27
VInfixExpression: >
p89502
tp89503
I1
s(g1309
I42
g1310
Vinsert
p89504
I40
VQualifiedName: com.alibaba.druid.stat.TableStat.Column
p89505
tp89506
I1
s(g49683
I42
g49684
Vinsert
p89507
I45
VStringLiteral: "using default value of database driver"
p89508
tp89509
I1
s(g30184
I42
g30185
Vinsert
p89510
I27
VInfixExpression: >
p89511
tp89512
I2
s(g7346
I42
g7347
Vinsert
p89513
I42
VSimpleName: primaryRest
p89514
tp89515
I1
s(g12985
I42
g12986
Vinsert
p89516
I39
VPrimitiveType: void
p89517
tp89518
I2
s(g4844
I42
g4845
Vinsert
p89519
I42
VSimpleName: arg
p89520
tp89521
I2
s(g9827
I42
g9828
Vinsert
p89522
I32
VMethodInvocation
p89523
tp89524
I1
s(g16620
I42
g16621
Vinsert
p89525
I9
VBooleanLiteral: false
p89526
tp89527
I2
s(g19369
I42
g19370
Vinsert
p89528
I8
VBlock
p89529
tp89530
I1
s(g4253
I42
g4254
Vinsert
p89531
I12
VCatchClause
p89532
tp89533
I2
s(g14829
I42
g14830
Vinsert
p89534
I32
VMethodInvocation
p89535
tp89536
I66
s(g22177
I42
g22178
Vinsert
p89537
I42
VSimpleName: Set
p89538
tp89539
I1
s(g1375
I42
g1376
Vinsert
p89540
I41
VReturnStatement
p89541
tp89542
I1
s(g3409
I42
g3410
Vinsert
p89543
I42
VSimpleName: reset
p89544
tp89545
I3
s(Vinsert
p89546
I42
VSimpleName: assertFalse
p89547
Vinsert
p89548
I42
VSimpleName: MySqlWallTest31
p89549
tp89550
I1
s(g9992
I42
g9993
Vinsert
p89551
I42
VSimpleName: COLLATE2
p89552
tp89553
I3
s(g20173
I42
g20174
Vinsert
p89554
I42
VSimpleName: FnvHash
p89555
tp89556
I1
s(g7201
I42
g7202
Vinsert
p89557
I42
VSimpleName: whiteMergedList
p89558
tp89559
I2
s(g8293
I42
g8294
Vinsert
p89560
I14
VClassInstanceCreation
p89561
tp89562
I1
s(g8113
I42
g8114
Vinsert
p89563
I42
VSimpleName: SQLName
p89564
tp89565
I1
s(g3579
I42
g3580
Vinsert
p89566
I27
VInfixExpression: !=
p89567
tp89568
I1
s(g6516
I42
g6517
Vinsert
p89569
I42
VSimpleName: JdbcSqlStat
p89570
tp89571
I2
s(g43592
I42
g43593
Vinsert
p89572
I42
VSimpleName: SQLName
p89573
tp89574
I5
s(Vinsert
p89575
I42
VSimpleName: token
p89576
Vinsert
p89577
I42
VSimpleName: parseStatementList
p89578
tp89579
I1
s(g40110
I42
g40111
Vinsert
p89580
I42
VSimpleName: OraclePriorExpr
p89581
tp89582
I1
s(g17240
I42
g17241
Vinsert
p89583
I11
VCastExpression
p89584
tp89585
I1
s(g4258
I42
g4259
Vinsert
p89586
I42
VSimpleName: String
p89587
tp89588
I2
s(g2228
I42
g2229
Vinsert
p89589
I42
VSimpleName: MySqlUserName
p89590
tp89591
I1
s(g16402
I42
g16403
Vinsert
p89592
I32
VMethodInvocation
p89593
tp89594
I5
s(g70085
I42
g70086
Vinsert
p89595
I45
VStringLiteral: "select * from (select * from test t order by id desc) z limit 100"
p89596
tp89597
I1
s(g16556
I42
g16557
Vinsert
p89598
I42
VSimpleName: JdbcUtils
p89599
tp89600
I1
s(g51669
I42
g51670
Vinsert
p89601
I42
VSimpleName: out
p89602
tp89603
I1
s(g11649
I42
g11650
Vinsert
p89604
I42
VSimpleName: sorter
p89605
tp89606
I1
s(g4992
I42
g4993
Vinsert
p89607
I34
VNumberLiteral: 10
p89608
tp89609
I1
s(g19010
I42
g19011
Vinsert
p89610
I45
VStringLiteral: "DefaultAutoCommit"
p89611
tp89612
I1
s(g9033
I42
g9034
Vinsert
p89613
I25
VIfStatement
p89614
tp89615
I1
s(Vinsert
p89616
I42
VSimpleName: assertEquals
p89617
Vinsert
p89618
I42
VSimpleName: EvalMethodTest_substring_2
p89619
tp89620
I1
s(Vinsert
p89621
I42
VSimpleName: toMySqlString
p89622
Vinsert
p89623
I40
VQualifiedName: SQLUtils.DEFAULT_LCASE_FORMAT_OPTION
p89624
tp89625
I2
s(g27276
I42
g27277
Vinsert
p89626
I8
VBlock
p89627
tp89628
I29
s(g9732
I42
g9733
Vinsert
p89629
I31
VMethodDeclaration
p89630
tp89631
I1
s(g13911
I42
g13912
Vinsert
p89632
I59
VVariableDeclarationFragment
p89633
tp89634
I1
s(g6046
I42
g6047
Vinsert
p89635
I21
VExpressionStatement
p89636
tp89637
I1
s(g15793
I42
g15794
Vinsert
p89638
I31
VMethodDeclaration
p89639
tp89640
I1
s(g987
I42
g988
Vinsert
p89641
I32
VMethodInvocation
p89642
tp89643
I2
s(g221
I42
g222
Vinsert
p89644
I45
VStringLiteral: "syntax error, expect READ or WRITE, actual "
p89645
tp89646
I1
s(g2624
I42
g2625
Vinsert
p89647
I32
VMethodInvocation
p89648
tp89649
I3
s(g23828
I42
g23829
Vinsert
p89650
I42
VSimpleName: denyCountUpdater
p89651
tp89652
I1
s(g256
I42
g257
Vinsert
p89653
I42
VSimpleName: x
p89654
tp89655
I1
s(g69844
I42
g69845
Vinsert
p89656
I43
VSimpleType: JdbcConnectionStat
p89657
tp89658
I2
s(g6640
I42
g6641
Vinsert
p89659
I42
VSimpleName: setValidationQuery
p89660
tp89661
I1
s(g7158
I42
g7159
Vinsert
p89662
I42
VSimpleName: x
p89663
tp89664
I1
s(g4152
I42
g4153
Vinsert
p89665
I27
VInfixExpression: <
p89666
tp89667
I2
s(g70085
I42
g70086
Vinsert
p89668
I42
VSimpleName: test_true_subquery_2
p89669
tp89670
I1
s(g53793
I42
g53794
Vinsert
p89671
I43
VSimpleType: SQLTimestampExpr
p89672
tp89673
I1
s(g27708
I42
g27709
Vinsert
p89674
I42
VSimpleName: TestCase
p89675
tp89676
I1
s(g13627
I42
g13628
Vinsert
p89677
I45
VStringLiteral: "\u005cn\u005ctf1 string COMMENT 'xxx'"
p89678
tp89679
I1
s(g1160
I42
g1161
Vinsert
p89680
I42
VSimpleName: User
p89681
tp89682
I1
s(g1810
I42
g1811
Vinsert
p89683
I45
VStringLiteral: "    RETURN V_RETURN;\u005cn"
p89684
tp89685
I1
s(Vinsert
p89686
I42
VSimpleName: add
p89687
Vinsert
p89688
I42
VSimpleName: row
p89689
tp89690
I2
s(g62563
I42
g62564
Vinsert
p89691
I42
VSimpleName: OracleHint
p89692
tp89693
I2
s(g40012
I42
g40013
Vinsert
p89694
I42
VSimpleName: LinkedHashMap
p89695
tp89696
I11
s(g11601
I42
g11602
Vinsert
p89697
I42
VSimpleName: OracleSelectJoin
p89698
tp89699
I1
s(g5818
I42
g5819
Vinsert
p89700
I74
VParameterizedType: Map<String,Object>
p89701
tp89702
I1
s(g18214
I42
g18215
Vinsert
p89703
I43
VSimpleType: Method
p89704
tp89705
I17
s(g38499
I42
g38500
Vinsert
p89706
I34
VNumberLiteral: 0
p89707
tp89708
I5
s(g26393
I42
g26394
Vinsert
p89709
I42
VSimpleName: sp
p89710
tp89711
I4
s(g1730
I42
g1731
Vinsert
p89712
I40
VQualifiedName: Token.OR
p89713
tp89714
I1
s(g5610
I42
g5611
Vinsert
p89715
I27
VInfixExpression: ==
p89716
tp89717
I1
s(g16402
I42
g16403
Vinsert
p89718
I25
VIfStatement
p89719
tp89720
I1
s(g8238
I42
g8239
Vinsert
p89721
I42
VSimpleName: WebAppStat
p89722
tp89723
I4
s(g23854
I42
g23855
Vinsert
p89724
I42
VSimpleName: oracleConn
p89725
tp89726
I2
s(g5450
I42
g5451
Vinsert
p89727
I42
VSimpleName: Thread
p89728
tp89729
I2
s(g3574
I42
g3575
Vinsert
p89730
I42
VSimpleName: ParameterizedOutputVisitorUtils
p89731
tp89732
I11
s(g5333
I42
g5334
Vinsert
p89733
I21
VExpressionStatement
p89734
tp89735
I3
s(g26348
I42
g26349
Vinsert
p89736
I40
VQualifiedName: Token.LBRACE
p89737
tp89738
I1
s(g5460
I42
g5461
Vinsert
p89739
I42
VSimpleName: element
p89740
tp89741
I1
s(g52723
I42
g52724
Vinsert
p89742
I43
VSimpleType: StringBuilder
p89743
tp89744
I2
s(g5597
I42
g5598
Vinsert
p89745
I40
VQualifiedName: Token.IDENTIFIER
p89746
tp89747
I2
s(g25241
I42
g25242
Vinsert
p89748
I27
VInfixExpression: !=
p89749
tp89750
I1
s(g11
I42
g12
Vinsert
p89751
I45
VStringLiteral: "test4\u005cn"
p89752
tp89753
I1
s(g63180
I42
g63181
Vinsert
p89754
I42
VSimpleName: toMySqlString
p89755
tp89756
I24
s(g13395
I42
g13396
Vinsert
p89757
I41
VReturnStatement
p89758
tp89759
I1
s(g11585
I42
g11586
Vinsert
p89760
I39
VPrimitiveType: long
p89761
tp89762
I2
s(g16075
I42
g16076
Vinsert
p89763
I42
VSimpleName: get
p89764
tp89765
I1
s(g64926
I42
g64927
Vinsert
p89766
I42
VSimpleName: conn
p89767
tp89768
I9
s(g18145
I42
g18146
Vinsert
p89769
I8
VBlock
p89770
tp89771
I3
s(g5633
I42
g5634
Vinsert
p89772
I42
VSimpleName: e
p89773
tp89774
I8
s(g8765
I42
g8766
Vinsert
p89775
I27
VInfixExpression: +
p89776
tp89777
I3
s(g21572
I42
g21573
Vinsert
p89778
I8
VBlock
p89779
tp89780
I1
s(g2647
I42
g2648
Vinsert
p89781
I32
VMethodInvocation
p89782
tp89783
I7
s(g4075
I42
g4076
Vinsert
p89784
I42
VSimpleName: ArrayList
p89785
tp89786
I1
s(g23242
I42
g23243
Vinsert
p89787
I42
VSimpleName: left
p89788
tp89789
I2
s(g18831
I42
g18832
Vinsert
p89790
I42
VSimpleName: resultset_hiddenColumn
p89791
tp89792
I1
s(g3574
I42
g3575
Vinsert
p89793
I42
VSimpleName: psql
p89794
tp89795
I7
s(g14517
I42
g14518
Vinsert
p89796
I43
VSimpleType: SQLUniqueConstraint
p89797
tp89798
I2
s(g55281
I42
g55282
Vinsert
p89799
I43
VSimpleType: SQLBinaryOpExpr
p89800
tp89801
I2
s(g15818
I42
g15819
Vinsert
p89802
I74
VParameterizedType: List<Map<String,Object>>
p89803
tp89804
I1
s(g5979
I42
g5980
Vinsert
p89805
I42
VSimpleName: option
p89806
tp89807
I1
s(g19369
I42
g19370
Vinsert
p89808
I32
VMethodInvocation
p89809
tp89810
I3
s(g18429
I42
g18430
Vinsert
p89811
I31
VMethodDeclaration
p89812
tp89813
I8
s(g2558
I42
g2559
Vinsert
p89814
I42
VSimpleName: SQLCreateProcedureStatement
p89815
tp89816
I1
s(g10736
I42
g10737
Vinsert
p89817
I40
VQualifiedName: java.sql.Timestamp
p89818
tp89819
I1
s(g12565
I42
g12566
Vinsert
p89820
I42
VSimpleName: SQLException
p89821
tp89822
I2
s(g13933
I42
g13934
Vinsert
p89823
I42
VSimpleName: lexer
p89824
tp89825
I1
s(g9084
I42
g9085
Vinsert
p89826
I42
VSimpleName: PreparedStatementHolder
p89827
tp89828
I3
s(g386
I42
g387
Vinsert
p89829
I43
VSimpleType: Object
p89830
tp89831
I2
s(g7083
I42
g7084
Vinsert
p89832
I42
VSimpleName: hash_lower
p89833
tp89834
I1
s(g10039
I42
g10040
Vinsert
p89835
I42
VSimpleName: Exception
p89836
tp89837
I6
s(g6612
I42
g6613
Vinsert
p89838
I60
VVariableDeclarationStatement
p89839
tp89840
I1
s(g4339
I42
g4340
Vinsert
p89841
I32
VMethodInvocation
p89842
tp89843
I9
s(g10953
I42
g10954
Vinsert
p89844
I42
VSimpleName: accept
p89845
tp89846
I1
s(g24216
I42
g24217
Vinsert
p89847
I42
VSimpleName: OraclePreparedStatement
p89848
tp89849
I1
s(g4735
I42
g4736
Vinsert
p89850
I45
VStringLiteral: "select * from t1; ;select * from t2;"
p89851
tp89852
I1
s(g3345
I42
g3346
Vinsert
p89853
I42
VSimpleName: accept0
p89854
tp89855
I31
s(g8233
I42
g8234
Vinsert
p89856
I60
VVariableDeclarationStatement
p89857
tp89858
I1
s(g6288
I42
g6289
Vinsert
p89859
I45
VStringLiteral: "java.runtime.version"
p89860
tp89861
I1
s(g11051
I42
g11052
Vinsert
p89862
I25
VIfStatement
p89863
tp89864
I1
s(g16
I42
g17
Vinsert
p89865
I31
VMethodDeclaration
p89866
tp89867
I4
s(g21876
I42
g21877
Vinsert
p89868
I27
VInfixExpression: +
p89869
tp89870
I1
s(g7126
I42
g7127
Vinsert
p89871
I42
VSimpleName: binaryLeft
p89872
tp89873
I2
s(g2319
I42
g2320
Vinsert
p89874
I32
VMethodInvocation
p89875
tp89876
I5
s(g1544
I42
g1545
Vinsert
p89877
I45
VStringLiteral: "\u005ctTYPE VARCHAR(20),\u005cn"
p89878
tp89879
I1
s(g1425
I42
g1426
Vinsert
p89880
I42
VSimpleName: setTenantColumn
p89881
tp89882
I1
s(g68021
I42
g68022
Vinsert
p89883
I27
VInfixExpression: ==
p89884
tp89885
I1
s(g3679
I42
g3680
Vinsert
p89886
I33
VNullLiteral
p89887
tp89888
I2
s(g4594
I42
g4595
Vinsert
p89889
I42
VSimpleName: seconds
p89890
tp89891
I1
s(g6116
I42
g6117
Vinsert
p89892
I42
VSimpleName: String
p89893
tp89894
I1
s(g45731
I42
g45732
Vinsert
p89895
I42
VSimpleName: parseUnique
p89896
tp89897
I1
s(g20893
I42
g20894
Vinsert
p89898
I42
VSimpleName: tableSource
p89899
tp89900
I2
s(g13099
I42
g13100
Vinsert
p89901
I42
VSimpleName: requestNumber
p89902
tp89903
I1
s(g12159
I42
g12160
Vinsert
p89904
I43
VSimpleType: SpringStat
p89905
tp89906
I2
s(g16759
I42
g16760
Vinsert
p89907
I45
VStringLiteral: ", "
p89908
tp89909
I1
s(g4824
I42
g4825
Vinsert
p89910
I42
VSimpleName: Override
p89911
tp89912
I1
s(g2885
I42
g2886
Vinsert
p89913
I25
VIfStatement
p89914
tp89915
I2
s(g35330
I42
g35331
Vinsert
p89916
I42
VSimpleName: ExportParameterVisitor
p89917
tp89918
I1
s(g4015
I42
g4016
Vinsert
p89919
I39
VPrimitiveType: void
p89920
tp89921
I1
s(g32782
I42
g32783
Vinsert
p89922
I43
VSimpleType: SQLExprImpl
p89923
tp89924
I2
s(g7751
I42
g7752
Vinsert
p89925
I14
VClassInstanceCreation
p89926
tp89927
I1
s(g44536
I42
g44537
Vinsert
p89928
I45
VStringLiteral: "WHERE RID = ? "
p89929
tp89930
I1
s(g11978
I42
g11979
Vinsert
p89931
I43
VSimpleType: MySqlSelectQueryBlock
p89932
tp89933
I2
s(g9397
I42
g9398
Vinsert
p89934
I52
VThisExpression
p89935
tp89936
I1
s(g5414
I42
g5415
Vinsert
p89937
I33
VNullLiteral
p89938
tp89939
I1
s(g27234
I42
g27235
Vinsert
p89940
I21
VExpressionStatement
p89941
tp89942
I1
s(g11150
I42
g11151
Vinsert
p89943
I42
VSimpleName: ident
p89944
tp89945
I14
s(g5030
I42
g5031
Vinsert
p89946
I42
VSimpleName: ArrayList
p89947
tp89948
I1
s(g20113
I42
g20114
Vinsert
p89949
I43
VSimpleType: OracleInsertStatement
p89950
tp89951
I4
s(g9791
I42
g9792
Vinsert
p89952
I34
VNumberLiteral: 100
p89953
tp89954
I1
s(g821
I42
g822
Vinsert
p89955
I25
VIfStatement
p89956
tp89957
I1
s(g5877
I42
g5878
Vinsert
p89958
I33
VNullLiteral
p89959
tp89960
I1
s(g36179
I42
g36180
Vinsert
p89961
I42
VSimpleName: Override
p89962
tp89963
I4
s(g21020
I42
g21021
Vinsert
p89964
I42
VSimpleName: String
p89965
tp89966
I16
s(g4679
I42
g4680
Vinsert
p89967
I34
VNumberLiteral: 0
p89968
tp89969
I1
s(g4844
I42
g4845
Vinsert
p89970
I42
VSimpleName: cloneTo
p89971
tp89972
I1
s(g4248
I42
g4249
Vinsert
p89973
I32
VMethodInvocation
p89974
tp89975
I350
s(g10513
I42
g10514
Vinsert
p89976
I22
VFieldAccess
p89977
tp89978
I5
s(g35248
I42
g35249
Vinsert
p89979
I43
VSimpleType: List
p89980
tp89981
I1
s(g14093
I42
g14094
Vinsert
p89982
I42
VSimpleName: assertNull
p89983
tp89984
I1
s(g18214
I42
g18215
Vinsert
p89985
I42
VSimpleName: Method
p89986
tp89987
I17
s(g18852
I42
g18853
Vinsert
p89988
I41
VReturnStatement
p89989
tp89990
I1
s(g1815
I42
g1816
Vinsert
p89991
I8
VBlock
p89992
tp89993
I24
s(g35913
I42
g35914
Vinsert
p89994
I34
VNumberLiteral: 1
p89995
tp89996
I2
s(g12055
I42
g12056
Vinsert
p89997
I8
VBlock
p89998
tp89999
I1
s(g4834
I42
g4835
Vinsert
p90000
I59
VVariableDeclarationFragment
p90001
tp90002
I4
s(g19640
I42
g19641
Vinsert
p90003
I45
VStringLiteral: "1"
p90004
tp90005
I1
s(g80382
I42
g80383
Vinsert
p90006
I43
VSimpleType: SQLDropViewStatement
p90007
tp90008
I2
s(g4926
I42
g4927
Vinsert
p90009
I42
VSimpleName: event
p90010
tp90011
I1
s(g17450
I42
g17451
Vinsert
p90012
I31
VMethodDeclaration
p90013
tp90014
I1
s(g4568
I42
g4569
Vinsert
p90015
I42
VSimpleName: selectList
p90016
tp90017
I1
s(g9883
I42
g9884
Vinsert
p90018
I25
VIfStatement
p90019
tp90020
I1
s(g79016
I42
g79017
Vinsert
p90021
I42
VSimpleName: targetList
p90022
tp90023
I1
s(g23844
I42
g23845
Vinsert
p90024
I9
VBooleanLiteral: false
p90025
tp90026
I3
s(g2253
I42
g2254
Vinsert
p90027
I60
VVariableDeclarationStatement
p90028
tp90029
I1
s(g21345
I42
g21346
Vinsert
p90030
I42
VSimpleName: c1
p90031
tp90032
I1
s(g7532
I42
g7533
Vinsert
p90033
I32
VMethodInvocation
p90034
tp90035
I2
s(g1165
I42
g1166
Vinsert
p90036
I42
VSimpleName: tableReference
p90037
tp90038
I3
s(g55751
I42
g55752
Vinsert
p90039
I42
VSimpleName: mergeCount
p90040
tp90041
I2
s(Vinsert
p90042
I42
VSimpleName: getNumber
p90043
Vinsert
p90044
I41
VReturnStatement
p90045
tp90046
I1
s(g22975
I42
g22976
Vinsert
p90047
I42
VSimpleName: TestFilter
p90048
tp90049
I2
s(g22126
I42
g22127
Vinsert
p90050
I32
VMethodInvocation
p90051
tp90052
I3
s(g52306
I42
g52307
Vinsert
p90053
I42
VSimpleName: statementList
p90054
tp90055
I1
s(g2742
I42
g2743
Vinsert
p90056
I42
VSimpleName: x
p90057
tp90058
I3
s(g12173
I42
g12174
Vinsert
p90059
I7
VAssignment: =
p90060
tp90061
I2
s(g34662
I42
g34663
Vinsert
p90062
I45
VStringLiteral: "SELECT *\u005cn"
p90063
tp90064
I1
s(g2398
I42
g2399
Vinsert
p90065
I42
VSimpleName: sql
p90066
tp90067
I1
s(g11885
I42
g11886
Vinsert
p90068
I42
VSimpleName: joinType
p90069
tp90070
I1
s(g11015
I42
g11016
Vinsert
p90071
I59
VVariableDeclarationFragment
p90072
tp90073
I2
s(g10824
I42
g10825
Vinsert
p90074
I42
VSimpleName: info
p90075
tp90076
I1
s(g1491
I42
g1492
Vinsert
p90077
I42
VSimpleName: properties
p90078
tp90079
I2
s(g507
I42
g508
Vinsert
p90080
I42
VSimpleName: defaultQueryTimeout
p90081
tp90082
I2
s(g4313
I42
g4314
Vinsert
p90083
I36
VParenthesizedExpression
p90084
tp90085
I1
s(g1375
I42
g1376
Vinsert
p90086
I62
VInstanceofExpression
p90087
tp90088
I1
s(g46
I42
g47
Vinsert
p90089
I42
VSimpleName: x
p90090
tp90091
I23
s(g10044
I42
g10045
Vinsert
p90092
I39
VPrimitiveType: boolean
p90093
tp90094
I2
s(g3098
I42
g3099
Vinsert
p90095
I45
VStringLiteral: "optimize table table1"
p90096
tp90097
I1
s(g52535
I42
g52536
Vinsert
p90098
I43
VSimpleType: oracle.jdbc.OraclePreparedStatement
p90099
tp90100
I2
s(g60517
I42
g60518
Vinsert
p90101
I42
VSimpleName: pool
p90102
tp90103
I1
s(g35248
I42
g35249
Vinsert
p90104
I74
VParameterizedType: List<SQLPartitionBy>
p90105
tp90106
I1
s(g13928
I42
g13929
Vinsert
p90107
I11
VCastExpression
p90108
tp90109
I1
s(g4780
I42
g4781
Vinsert
p90110
I42
VSimpleName: Exception
p90111
tp90112
I1
s(g18300
I42
g18301
Vinsert
p90113
I14
VClassInstanceCreation
p90114
tp90115
I1
s(g19741
I42
g19742
Vinsert
p90116
I59
VVariableDeclarationFragment
p90117
tp90118
I1
s(g20215
I42
g20216
Vinsert
p90119
I42
VSimpleName: setHasSessionBefore
p90120
tp90121
I1
s(g21908
I42
g21909
Vinsert
p90122
I45
VStringLiteral: "\u005cn\u005ctdescription NVARCHAR(255),"
p90123
tp90124
I1
s(g16005
I42
g16006
Vinsert
p90125
I42
VSimpleName: addReadOnlyTable
p90126
tp90127
I1
s(g12938
I42
g12939
Vinsert
p90128
I42
VSimpleName: setReturning
p90129
tp90130
I1
s(g6126
I42
g6127
Vinsert
p90131
I42
VSimpleName: x
p90132
tp90133
I4
s(Vinsert
p90134
I42
VSimpleName: nextToken
p90135
Vinsert
p90136
I40
VQualifiedName: Token.POUNDGT
p90137
tp90138
I1
s(g87250
I42
g87251
Vinsert
p90139
I20
VEmptyStatement
p90140
tp90141
I1
s(g82850
I42
g82851
Vinsert
p90142
I42
VSimpleName: test_stat
p90143
tp90144
I1
s(g17734
I42
g17735
Vinsert
p90145
I27
VInfixExpression: +
p90146
tp90147
I1
s(g602
I42
g603
Vinsert
p90148
I7
VAssignment: =
p90149
tp90150
I6
s(g25573
I42
g25574
Vinsert
p90151
I44
VSingleVariableDeclaration
p90152
tp90153
I2
s(g12953
I42
g12954
Vinsert
p90154
I42
VSimpleName: setLevel
p90155
tp90156
I1
s(g14605
I42
g14606
Vinsert
p90157
I21
VExpressionStatement
p90158
tp90159
I4
s(g9934
I42
g9935
Vinsert
p90160
I42
VSimpleName: SQLName
p90161
tp90162
I3
s(g997
I42
g998
Vinsert
p90163
I42
VSimpleName: items
p90164
tp90165
I1
s(g1032
I42
g1033
Vinsert
p90166
I45
VStringLiteral: "NO SQL"
p90167
tp90168
I1
s(g3649
I42
g3650
Vinsert
p90169
I50
VSwitchStatement
p90170
tp90171
I2
s(g13720
I42
g13721
Vinsert
p90172
I42
VSimpleName: assertTrue
p90173
tp90174
I17
s(g6139
I42
g6140
Vinsert
p90175
I42
VSimpleName: accept
p90176
tp90177
I15
s(g16289
I42
g16290
Vinsert
p90178
I45
VStringLiteral: "jdbc:mock:xx"
p90179
tp90180
I2
s(g18659
I42
g18660
Vinsert
p90181
I34
VNumberLiteral: 101
p90182
tp90183
I1
s(g6051
I42
g6052
Vinsert
p90184
I45
VStringLiteral: "LIMIT "
p90185
tp90186
I1
s(g2880
I42
g2881
Vinsert
p90187
I45
VStringLiteral: "\u005cn\u005ctpostal_code VARCHAR2(12),"
p90188
tp90189
I4
s(g30636
I42
g30637
Vinsert
p90190
I42
VSimpleName: iface
p90191
tp90192
I1
s(g13873
I42
g13874
Vinsert
p90193
I32
VMethodInvocation
p90194
tp90195
I6
s(g16501
I42
g16502
Vinsert
p90196
I40
VQualifiedName: FnvHash.Constants.TYPE
p90197
tp90198
I1
s(g7947
I42
g7948
Vinsert
p90199
I42
VSimpleName: SQLMethodInvokeExpr
p90200
tp90201
I5
s(g1047
I42
g1048
Vinsert
p90202
I11
VCastExpression
p90203
tp90204
I2
s(g48336
I42
g48337
Vinsert
p90205
I40
VQualifiedName: Token.LPAREN
p90206
tp90207
I6
s(g7370
I42
g7371
Vinsert
p90208
I42
VSimpleName: SQLObject
p90209
tp90210
I1
s(g7512
I42
g7513
Vinsert
p90211
I42
VSimpleName: stmt
p90212
tp90213
I1
s(g11808
I42
g11809
Vinsert
p90214
I42
VSimpleName: dbType
p90215
tp90216
I4
s(g2324
I42
g2325
Vinsert
p90217
I45
VStringLiteral: " milliseconds)"
p90218
tp90219
I1
s(g1251
I42
g1252
Vinsert
p90220
I42
VSimpleName: aValue
p90221
tp90222
I1
s(g2732
I42
g2733
Vinsert
p90223
I42
VSimpleName: name
p90224
tp90225
I1
s(g37744
I42
g37745
Vinsert
p90226
I62
VInstanceofExpression
p90227
tp90228
I1
s(g14088
I42
g14089
Vinsert
p90229
I23
VFieldDeclaration
p90230
tp90231
I9
s(g34988
I42
g34989
Vinsert
p90232
I42
VSimpleName: bp
p90233
tp90234
I2
s(g72275
I42
g72276
Vinsert
p90235
I45
VStringLiteral: "select 'x'"
p90236
tp90237
I4
s(g34565
I42
g34566
Vinsert
p90238
I43
VSimpleType: Exception
p90239
tp90240
I1
s(g5719
I42
g5720
Vinsert
p90241
I42
VSimpleName: sqlObject
p90242
tp90243
I1
s(g20888
I42
g20889
Vinsert
p90244
I41
VReturnStatement
p90245
tp90246
I2
s(g21746
I42
g21747
Vinsert
p90247
I43
VSimpleType: MysqlDeallocatePrepareStatement
p90248
tp90249
I1
s(g15204
I42
g15205
Vinsert
p90250
I43
VSimpleType: SQLUpdateStatement
p90251
tp90252
I1
s(g3780
I42
g3781
Vinsert
p90253
I42
VSimpleName: Test
p90254
tp90255
I1
s(g5040
I42
g5041
Vinsert
p90256
I21
VExpressionStatement
p90257
tp90258
I1
s(g1715
I42
g1716
Vinsert
p90259
I32
VMethodInvocation
p90260
tp90261
I3
s(g22975
I42
g22976
Vinsert
p90262
I42
VSimpleName: close
p90263
tp90264
I1
s(g2168
I42
g2169
Vinsert
p90265
I42
VSimpleName: x
p90266
tp90267
I1
s(g24923
I42
g24924
Vinsert
p90268
I33
VNullLiteral
p90269
tp90270
I2
s(g61319
I42
g61320
Vinsert
p90271
I42
VSimpleName: setInto
p90272
tp90273
I1
s(g3447
I42
g3448
Vinsert
p90274
I45
VStringLiteral: "/opt/mytest"
p90275
tp90276
I1
s(g16447
I42
g16448
Vinsert
p90277
I42
VSimpleName: propertyExpr
p90278
tp90279
I1
s(g21276
I42
g21277
Vinsert
p90280
I8
VBlock
p90281
tp90282
I15
s(g22033
I42
g22034
Vinsert
p90283
I45
VStringLiteral: "requestIntervalHistogram_1000000_10000000"
p90284
tp90285
I1
s(g16213
I42
g16214
Vinsert
p90286
I42
VSimpleName: split
p90287
tp90288
I1
s(g276
I42
g277
Vinsert
p90289
I43
VSimpleType: String
p90290
tp90291
I2
s(g14160
I42
g14161
Vinsert
p90292
I43
VSimpleType: DruidDataSource
p90293
tp90294
I1
s(g502
I42
g503
Vinsert
p90295
I42
VSimpleName: SQLExprParser
p90296
tp90297
I2
s(g1579
I42
g1580
Vinsert
p90298
I42
VSimpleName: String
p90299
tp90300
I7
s(g10784
I42
g10785
Vinsert
p90301
I25
VIfStatement
p90302
tp90303
I1
s(g5849
I42
g5850
Vinsert
p90304
I27
VInfixExpression: !=
p90305
tp90306
I1
s(g2125
I42
g2126
Vinsert
p90307
I21
VExpressionStatement
p90308
tp90309
I1
s(g49163
I42
g49164
Vinsert
p90310
I42
VSimpleName: transactionIdSeed
p90311
tp90312
I2
s(g81
I42
g82
Vinsert
p90313
I8
VBlock
p90314
tp90315
I1
s(g17734
I42
g17735
Vinsert
p90316
I60
VVariableDeclarationStatement
p90317
tp90318
I4
s(g14881
I42
g14882
Vinsert
p90319
I60
VVariableDeclarationStatement
p90320
tp90321
I1
s(g13569
I42
g13570
Vinsert
p90322
I42
VSimpleName: Override
p90323
tp90324
I2
s(g2634
I42
g2635
Vinsert
p90325
I8
VBlock
p90326
tp90327
I3
s(g30252
I42
g30253
Vinsert
p90328
I42
VSimpleName: Exception
p90329
tp90330
I2
s(g16728
I42
g16729
Vinsert
p90331
I42
VSimpleName: mark
p90332
tp90333
I1
s(g2548
I42
g2549
Vinsert
p90334
I43
VSimpleType: SQLDeleteStatement
p90335
tp90336
I1
s(g2094
I42
g2095
Vinsert
p90337
I32
VMethodInvocation
p90338
tp90339
I8
s(g542
I42
g543
Vinsert
p90340
I42
VSimpleName: SQLUtils
p90341
tp90342
I18
s(g13181
I42
g13182
Vinsert
p90343
I42
VSimpleName: MySqlDropTableStatement
p90344
tp90345
I1
s(g4704
I42
g4705
Vinsert
p90346
I27
VInfixExpression: ==
p90347
tp90348
I2
s(g40057
I42
g40058
Vinsert
p90349
I42
VSimpleName: tableName
p90350
tp90351
I3
s(g49245
I42
g49246
Vinsert
p90352
I42
VSimpleName: SQLAssignItem
p90353
tp90354
I1
s(g8924
I42
g8925
Vinsert
p90355
I83
VModifier: public
p90356
tp90357
I1
s(g3898
I42
g3899
Vinsert
p90358
I42
VSimpleName: visitor
p90359
tp90360
I1
s(g5974
I42
g5975
Vinsert
p90361
I54
VTryStatement
p90362
tp90363
I1
s(g20248
I42
g20249
Vinsert
p90364
I45
VStringLiteral: "LOCK TABLES "
p90365
tp90366
I1
s(g43028
I42
g43029
Vinsert
p90367
I42
VSimpleName: setUrl
p90368
tp90369
I2
s(g25218
I42
g25219
Vinsert
p90370
I42
VSimpleName: item
p90371
tp90372
I3
s(g2135
I42
g2136
Vinsert
p90373
I42
VSimpleName: tmp
p90374
tp90375
I2
s(g25306
I42
g25307
Vinsert
p90376
I83
VModifier: final
p90377
tp90378
I1
s(g17199
I42
g17200
Vinsert
p90379
I42
VSimpleName: tagetString
p90380
tp90381
I2
s(g2413
I42
g2414
Vinsert
p90382
I21
VExpressionStatement
p90383
tp90384
I1
s(g16581
I42
g16582
Vinsert
p90385
I42
VSimpleName: moreRows
p90386
tp90387
I1
s(g10467
I42
g10468
Vinsert
p90388
I74
VParameterizedType: List<Map<String,Object>>
p90389
tp90390
I2
s(g24206
I42
g24207
Vinsert
p90391
I45
VStringLiteral: "\u005ctPARTITION PART02\u005cn"
p90392
tp90393
I1
s(g1825
I42
g1826
Vinsert
p90394
I32
VMethodInvocation
p90395
tp90396
I127
s(g14160
I42
g14161
Vinsert
p90397
I8
VBlock
p90398
tp90399
I1
s(g1991
I42
g1992
Vinsert
p90400
I42
VSimpleName: isInfoEnabled
p90401
tp90402
I3
s(g71079
I42
g71080
Vinsert
p90403
I25
VIfStatement
p90404
tp90405
I1
s(g18289
I42
g18290
Vinsert
p90406
I42
VSimpleName: s
p90407
tp90408
I3
s(g748
I42
g749
Vinsert
p90409
I60
VVariableDeclarationStatement
p90410
tp90411
I1
s(g26526
I42
g26527
Vinsert
p90412
I32
VMethodInvocation
p90413
tp90414
I52
s(g22587
I42
g22588
Vinsert
p90415
I43
VSimpleType: Connection
p90416
tp90417
I1
s(g10438
I42
g10439
Vinsert
p90418
I59
VVariableDeclarationFragment
p90419
tp90420
I1
s(g8098
I42
g8099
Vinsert
p90421
I33
VNullLiteral
p90422
tp90423
I1
s(g50497
I42
g50498
Vinsert
p90424
I45
VStringLiteral: "create table t1 (f0 bigint) partitioned by ("
p90425
tp90426
I1
s(g4121
I42
g4122
Vinsert
p90427
I45
VStringLiteral: "\u005ctSET salary = salary + bonus\u005cn"
p90428
tp90429
I1
s(g33239
I42
g33240
Vinsert
p90430
I36
VParenthesizedExpression
p90431
tp90432
I1
s(g13685
I42
g13686
Vinsert
p90433
I34
VNumberLiteral: 0
p90434
tp90435
I1
s(g2178
I42
g2179
Vinsert
p90436
I54
VTryStatement
p90437
tp90438
I1
s(g7903
I42
g7904
Vinsert
p90439
I41
VReturnStatement
p90440
tp90441
I1
s(g6429
I42
g6430
Vinsert
p90442
I42
VSimpleName: visit
p90443
tp90444
I1
s(g4152
I42
g4153
Vinsert
p90445
I59
VVariableDeclarationFragment
p90446
tp90447
I8
s(g52513
I42
g52514
Vinsert
p90448
I43
VSimpleType: SQLServerInsertStatement
p90449
tp90450
I4
s(g1785
I42
g1786
Vinsert
p90451
I42
VSimpleName: getSqlList
p90452
tp90453
I1
s(g16696
I42
g16697
Vinsert
p90454
I60
VVariableDeclarationStatement
p90455
tp90456
I16
s(g2140
I42
g2141
Vinsert
p90457
I42
VSimpleName: queryBlock
p90458
tp90459
I2
s(g52667
I42
g52668
Vinsert
p90460
I42
VSimpleName: originColumn
p90461
tp90462
I3
s(g19115
I42
g19116
Vinsert
p90463
I42
VSimpleName: condition
p90464
tp90465
I2
s(g1466
I42
g1467
Vinsert
p90466
I42
VSimpleName: select
p90467
tp90468
I2
s(g13504
I42
g13505
Vinsert
p90469
I45
VStringLiteral: "select * from t_xiaoxi where rowid in(select rid from (select rownum rn,rid from(select rowid rid,cid from t_xiaoxi  order by cid desc) where rownum<10000) where rn>9980) order by cid desc;"
p90470
tp90471
I1
s(g12480
I42
g12481
Vinsert
p90472
I22
VFieldAccess
p90473
tp90474
I1
s(g1380
I42
g1381
Vinsert
p90475
I59
VVariableDeclarationFragment
p90476
tp90477
I4
s(g10039
I42
g10040
Vinsert
p90478
I43
VSimpleType: TestCase
p90479
tp90480
I3
s(g106
I42
g107
Vinsert
p90481
I21
VExpressionStatement
p90482
tp90483
I2
s(g8350
I42
g8351
Vinsert
p90484
I42
VSimpleName: getProperty
p90485
tp90486
I2
s(g7432
I42
g7433
Vinsert
p90487
I79
VSingleMemberAnnotation
p90488
tp90489
I1
s(g22009
I42
g22010
Vinsert
p90490
I42
VSimpleName: SQLExprParser
p90491
tp90492
I9
s(g15621
I42
g15622
Vinsert
p90493
I22
VFieldAccess
p90494
tp90495
I3
s(g7898
I42
g7899
Vinsert
p90496
I43
VSimpleType: Exception
p90497
tp90498
I2
s(g32107
I42
g32108
Vinsert
p90499
I42
VSimpleName: statement
p90500
tp90501
I3
s(g914
I42
g915
Vinsert
p90502
I42
VSimpleName: print0
p90503
tp90504
I3
s(g17956
I42
g17957
Vinsert
p90505
I42
VSimpleName: System
p90506
tp90507
I9
s(g8350
I42
g8351
Vinsert
p90508
I42
VSimpleName: JVM_16
p90509
tp90510
I1
s(g3992
I42
g3993
Vinsert
p90511
I42
VSimpleName: x
p90512
tp90513
I1
s(g20961
I42
g20962
Vinsert
p90514
I42
VSimpleName: aliasLocal
p90515
tp90516
I2
s(g7002
I42
g7003
Vinsert
p90517
I42
VSimpleName: Connection
p90518
tp90519
I2
s(g27320
I42
g27321
Vinsert
p90520
I43
VSimpleType: MySqlShowIndexesStatement
p90521
tp90522
I2
s(g16367
I42
g16368
Vinsert
p90523
I43
VSimpleType: PreparedStatementPool
p90524
tp90525
I2
s(g10493
I42
g10494
Vinsert
p90526
I21
VExpressionStatement
p90527
tp90528
I1
s(g25586
I42
g25587
Vinsert
p90529
I43
VSimpleType: TestCase
p90530
tp90531
I1
s(g22538
I42
g22539
Vinsert
p90532
I60
VVariableDeclarationStatement
p90533
tp90534
I2
s(g7578
I42
g7579
Vinsert
p90535
I42
VSimpleName: toSQL
p90536
tp90537
I1
s(g2019
I42
g2020
Vinsert
p90538
I40
VQualifiedName: Boolean.TRUE
p90539
tp90540
I1
s(g4730
I42
g4731
Vinsert
p90541
I45
VStringLiteral: "IN "
p90542
tp90543
I1
s(g14839
I42
g14840
Vinsert
p90544
I21
VExpressionStatement
p90545
tp90546
I3
s(g10195
I42
g10196
Vinsert
p90547
I45
VStringLiteral: "CREATE TABLE promotions_var2 ("
p90548
tp90549
I2
s(g48101
I42
g48102
Vinsert
p90550
I43
VSimpleType: SQLException
p90551
tp90552
I1
s(g886
I42
g887
Vinsert
p90553
I42
VSimpleName: Exception
p90554
tp90555
I1
s(g8293
I42
g8294
Vinsert
p90556
I42
VSimpleName: advisor
p90557
tp90558
I2
s(g8823
I42
g8824
Vinsert
p90559
I34
VNumberLiteral: 1L
p90560
tp90561
I1
s(g1878
I42
g1879
Vinsert
p90562
I42
VSimpleName: expr2
p90563
tp90564
I1
s(g50845
I42
g50846
Vinsert
p90565
I40
VQualifiedName: Token.RPAREN
p90566
tp90567
I1
s(g4867
I42
g4868
Vinsert
p90568
I27
VInfixExpression: >=
p90569
tp90570
I1
s(g8687
I42
g8688
Vinsert
p90571
I54
VTryStatement
p90572
tp90573
I1
s(g11983
I42
g11984
Vinsert
p90574
I42
VSimpleName: parser
p90575
tp90576
I22
s(g1710
I42
g1711
Vinsert
p90577
I42
VSimpleName: Exception
p90578
tp90579
I2
s(g1594
I42
g1595
Vinsert
p90580
I42
VSimpleName: ucase
p90581
tp90582
I1
s(g5643
I42
g5644
Vinsert
p90583
I42
VSimpleName: OracleConnection
p90584
tp90585
I2
s(g19035
I42
g19036
Vinsert
p90586
I42
VSimpleName: wallUpdateCheckItems
p90587
tp90588
I1
s(g90042
I42
g90043
Vinsert
p90589
I42
VSimpleName: sqlObject
p90590
tp90591
I3
s(g27985
I42
g27986
Vinsert
p90592
I42
VSimpleName: reader
p90593
tp90594
I2
s(g3233
I42
g3234
Vinsert
p90595
I42
VSimpleName: parameters
p90596
tp90597
I16
s(g43930
I42
g43931
Vinsert
p90598
I14
VClassInstanceCreation
p90599
tp90600
I18
s(g47568
I42
g47569
Vinsert
p90601
I45
VStringLiteral: "select "
p90602
tp90603
I1
s(g31505
I42
g31506
Vinsert
p90604
I25
VIfStatement
p90605
tp90606
I1
s(g444
I42
g445
Vinsert
p90607
I52
VThisExpression
p90608
tp90609
I1
s(g3608
I42
g3609
Vinsert
p90610
I33
VNullLiteral
p90611
tp90612
I3
s(g19686
I42
g19687
Vinsert
p90613
I83
VModifier: static
p90614
tp90615
I3
s(g13445
I42
g13446
Vinsert
p90616
I42
VSimpleName: resultMetaData
p90617
tp90618
I1
s(g44887
I42
g44888
Vinsert
p90619
I43
VSimpleType: List
p90620
tp90621
I6
s(g6187
I42
g6188
Vinsert
p90622
I45
VStringLiteral: "SELECT id, GROUP_ID, IND_BY_ALL, IND_BY_GROUP, OWNER_MEMBER_ID\u005cn"
p90623
tp90624
I1
s(g22423
I42
g22424
Vinsert
p90625
I42
VSimpleName: Properties
p90626
tp90627
I1
s(g9475
I42
g9476
Vinsert
p90628
I45
VStringLiteral: "\u005ctMINEXTENTS 1\u005cn"
p90629
tp90630
I2
s(Vinsert
p90631
I42
VSimpleName: setParent
p90632
Vinsert
p90633
I42
VSimpleName: setEngine
p90634
tp90635
I1
s(g15697
I42
g15698
Vinsert
p90636
I32
VMethodInvocation
p90637
tp90638
I4
s(g5729
I42
g5730
Vinsert
p90639
I42
VSimpleName: constraint
p90640
tp90641
I3
s(g932
I42
g933
Vinsert
p90642
I83
VModifier: public
p90643
tp90644
I1
s(g356
I42
g357
Vinsert
p90645
I42
VSimpleName: assertEquals
p90646
tp90647
I2
s(g17114
I42
g17115
Vinsert
p90648
I42
VSimpleName: DruidDataSource
p90649
tp90650
I3
s(g16935
I42
g16936
Vinsert
p90651
I43
VSimpleType: WallProviderStatTimer
p90652
tp90653
I1
s(g11915
I42
g11916
Vinsert
p90654
I21
VExpressionStatement
p90655
tp90656
I7
s(g1448
I42
g1449
Vinsert
p90657
I27
VInfixExpression: !=
p90658
tp90659
I7
s(g1660
I42
g1661
Vinsert
p90660
I42
VSimpleName: specificInterceptors
p90661
tp90662
I1
s(g10874
I42
g10875
Vinsert
p90663
I42
VSimpleName: FileOutputStream
p90664
tp90665
I1
s(g38173
I42
g38174
Vinsert
p90666
I42
VSimpleName: DriverManager
p90667
tp90668
I7
s(g14397
I42
g14398
Vinsert
p90669
I45
VStringLiteral: "LOB (\u005c"C\u005c") STORE AS (\u005cn"
p90670
tp90671
I1
s(g27239
I42
g27240
Vinsert
p90672
I42
VSimpleName: TestUtils
p90673
tp90674
I1
s(g700
I42
g701
Vinsert
p90675
I45
VStringLiteral: "cacheServerConfiguration"
p90676
tp90677
I1
s(g2459
I42
g2460
Vinsert
p90678
I8
VBlock
p90679
tp90680
I58
s(g84785
I42
g84786
Vinsert
p90681
I42
VSimpleName: assertEquals
p90682
tp90683
I3
s(g13857
I42
g13858
Vinsert
p90684
I74
VParameterizedType: Map<String,Object>
p90685
tp90686
I1
s(g9327
I42
g9328
Vinsert
p90687
I41
VReturnStatement
p90688
tp90689
I1
s(g8324
I42
g8325
Vinsert
p90690
I45
VStringLiteral: "\u005ct\u005c"TEMP_TABLE_NAME\u005c" VARCHAR2(50)\u005cn"
p90691
tp90692
I1
s(g1660
I42
g1661
Vinsert
p90693
I42
VSimpleName: TargetSource
p90694
tp90695
I1
s(g1085
I42
g1086
Vinsert
p90696
I42
VSimpleName: ArrayList
p90697
tp90698
I41
s(g7751
I42
g7752
Vinsert
p90699
I21
VExpressionStatement
p90700
tp90701
I1
s(g371
I42
g372
Vinsert
p90702
I45
VStringLiteral: "FROM TEST\u005cn"
p90703
tp90704
I1
s(g21061
I42
g21062
Vinsert
p90705
I21
VExpressionStatement
p90706
tp90707
I1
s(g7665
I42
g7666
Vinsert
p90708
I32
VMethodInvocation
p90709
tp90710
I1
s(g31920
I42
g31921
Vinsert
p90711
I42
VSimpleName: i
p90712
tp90713
I35
s(g71
I42
g72
Vinsert
p90714
I42
VSimpleName: ownerName
p90715
tp90716
I1
s(g12082
I42
g12083
Vinsert
p90717
I60
VVariableDeclarationStatement
p90718
tp90719
I1
s(g31549
I42
g31550
Vinsert
p90720
I42
VSimpleName: sql_c
p90721
tp90722
I26
s(g4204
I42
g4205
Vinsert
p90723
I45
VStringLiteral: "CREATE VIEW revenue0\u005cn"
p90724
tp90725
I1
s(g13424
I42
g13425
Vinsert
p90726
I8
VBlock
p90727
tp90728
I1
s(g4178
I42
g4179
Vinsert
p90729
I43
VSimpleType: ConnectionHolder
p90730
tp90731
I1
s(g15886
I42
g15887
Vinsert
p90732
I42
VSimpleName: keyName
p90733
tp90734
I1
s(g11067
I42
g11068
Vinsert
p90735
I52
VThisExpression
p90736
tp90737
I1
s(g4391
I42
g4392
Vinsert
p90738
I83
VModifier: public
p90739
tp90740
I1
s(g9982
I42
g9983
Vinsert
p90741
I42
VSimpleName: stmtList
p90742
tp90743
I9
s(g37888
I42
g37889
Vinsert
p90744
I42
VSimpleName: size
p90745
tp90746
I1
s(g30636
I42
g30637
Vinsert
p90747
I42
VSimpleName: isAllowDoPrivileged
p90748
tp90749
I1
s(g9678
I42
g9679
Vinsert
p90750
I42
VSimpleName: String
p90751
tp90752
I6
s(g8311
I42
g8312
Vinsert
p90753
I43
VSimpleType: SQLMethodInvokeExpr
p90754
tp90755
I1
s(g23899
I42
g23900
Vinsert
p90756
I25
VIfStatement
p90757
tp90758
I1
s(g3826
I42
g3827
Vinsert
p90759
I43
VSimpleType: URL
p90760
tp90761
I1
s(g5510
I42
g5511
Vinsert
p90762
I7
VAssignment: =
p90763
tp90764
I1
s(g20030
I42
g20031
Vinsert
p90765
I42
VSimpleName: clazz
p90766
tp90767
I2
s(g37088
I42
g37089
Vinsert
p90768
I43
VSimpleType: SQLAlterTableDisableConstraint
p90769
tp90770
I1
s(g7256
I42
g7257
Vinsert
p90771
I42
VSimpleName: dataSource
p90772
tp90773
I7
s(g46106
I42
g46107
Vinsert
p90774
I45
VStringLiteral: "KEYS"
p90775
tp90776
I1
s(g1012
I42
g1013
Vinsert
p90777
I42
VSimpleName: exprTableSource
p90778
tp90779
I4
s(g14212
I42
g14213
Vinsert
p90780
I42
VSimpleName: getClass
p90781
tp90782
I1
s(g4399
I42
g4400
Vinsert
p90783
I45
VStringLiteral: " ON "
p90784
tp90785
I1
s(g8113
I42
g8114
Vinsert
p90786
I43
VSimpleType: SQLName
p90787
tp90788
I1
s(g9103
I42
g9104
Vinsert
p90789
I59
VVariableDeclarationFragment
p90790
tp90791
I1
s(g46523
I42
g46524
Vinsert
p90792
I42
VSimpleName: scaleOrLength
p90793
tp90794
I1
s(g2339
I42
g2340
Vinsert
p90795
I42
VSimpleName: println
p90796
tp90797
I1
s(g12435
I42
g12436
Vinsert
p90798
I42
VSimpleName: Override
p90799
tp90800
I1
s(g2198
I42
g2199
Vinsert
p90801
I42
VSimpleName: Exception
p90802
tp90803
I1
s(g4485
I42
g4486
Vinsert
p90804
I42
VSimpleName: validproc
p90805
tp90806
I4
s(g7782
I42
g7783
Vinsert
p90807
I42
VSimpleName: setConnectBy
p90808
tp90809
I1
s(g8841
I42
g8842
Vinsert
p90810
I42
VSimpleName: groupBy
p90811
tp90812
I1
s(g4589
I42
g4590
Vinsert
p90813
I21
VExpressionStatement
p90814
tp90815
I27
s(g4238
I42
g4239
Vinsert
p90816
I39
VPrimitiveType: void
p90817
tp90818
I1
s(g12671
I42
g12672
Vinsert
p90819
I60
VVariableDeclarationStatement
p90820
tp90821
I1
s(g542
I42
g543
Vinsert
p90822
I45
VStringLiteral: "\u005ctvalue5"
p90823
tp90824
I1
s(g12666
I42
g12667
Vinsert
p90825
I40
VQualifiedName: e.next
p90826
tp90827
I2
s(g7264
I42
g7265
Vinsert
p90828
I42
VSimpleName: x
p90829
tp90830
I1
s(g8360
I42
g8361
Vinsert
p90831
I42
VSimpleName: hasConstaint
p90832
tp90833
I1
s(g36895
I42
g36896
Vinsert
p90834
I42
VSimpleName: withTimeZone
p90835
tp90836
I1
s(g41850
I42
g41851
Vinsert
p90837
I42
VSimpleName: blackMergedList
p90838
tp90839
I1
s(g28698
I42
g28699
Vinsert
p90840
I32
VMethodInvocation
p90841
tp90842
I5
s(g9639
I42
g9640
Vinsert
p90843
I45
VStringLiteral: "\u005ct\u005ctCLOSE VALUECURSOR;\u005cn"
p90844
tp90845
I1
s(g19456
I42
g19457
Vinsert
p90846
I43
VSimpleType: HiveStatementParser
p90847
tp90848
I1
s(g14540
I42
g14541
Vinsert
p90849
I42
VSimpleName: insertRow
p90850
tp90851
I1
s(g13740
I42
g13741
Vinsert
p90852
I45
VStringLiteral: "ingres"
p90853
tp90854
I1
s(g21892
I42
g21893
Vinsert
p90855
I34
VNumberLiteral: 1
p90856
tp90857
I1
s(g652
I42
g653
Vinsert
p90858
I74
VParameterizedType: Map<String,Object>
p90859
tp90860
I1
s(g4814
I42
g4815
Vinsert
p90861
I42
VSimpleName: tableName
p90862
tp90863
I2
s(g10859
I42
g10860
Vinsert
p90864
I45
VStringLiteral: "\u005cn f1 > 1 -- comment_2"
p90865
tp90866
I1
s(g13881
I42
g13882
Vinsert
p90867
I45
VStringLiteral: ";"
p90868
tp90869
I1
s(g19383
I42
g19384
Vinsert
p90870
I42
VSimpleName: data2
p90871
tp90872
I1
s(g25675
I42
g25676
Vinsert
p90873
I33
VNullLiteral
p90874
tp90875
I2
s(g19278
I42
g19279
Vinsert
p90876
I59
VVariableDeclarationFragment
p90877
tp90878
I1
s(g6485
I42
g6486
Vinsert
p90879
I42
VSimpleName: Object
p90880
tp90881
I2
s(g2408
I42
g2409
Vinsert
p90882
I42
VSimpleName: setConnectErrorCount
p90883
tp90884
I1
s(g11420
I42
g11421
Vinsert
p90885
I42
VSimpleName: token
p90886
tp90887
I1
s(g1953
I42
g1954
Vinsert
p90888
I42
VSimpleName: defaultMaxFieldSize
p90889
tp90890
I1
s(g2193
I42
g2194
Vinsert
p90891
I42
VSimpleName: getConnection
p90892
tp90893
I51
s(g16745
I42
g16746
Vinsert
p90894
I54
VTryStatement
p90895
tp90896
I1
s(Vinsert
p90897
I42
VSimpleName: setParent
p90898
Vinsert
p90899
I42
VSimpleName: setAt
p90900
tp90901
I1
s(g12082
I42
g12083
Vinsert
p90902
I42
VSimpleName: reset
p90903
tp90904
I1
s(g9345
I42
g9346
Vinsert
p90905
I45
VStringLiteral: "name"
p90906
tp90907
I1
s(g8721
I42
g8722
Vinsert
p90908
I42
VSimpleName: jdbcParam
p90909
tp90910
I3
s(g291
I42
g292
Vinsert
p90911
I32
VMethodInvocation
p90912
tp90913
I2
s(g21025
I42
g21026
Vinsert
p90914
I26
VImportDeclaration
p90915
tp90916
I1
s(g11217
I42
g11218
Vinsert
p90917
I42
VSimpleName: resolvedColumn
p90918
tp90919
I4
s(g48513
I42
g48514
Vinsert
p90920
I42
VSimpleName: strVal
p90921
tp90922
I1
s(g1564
I42
g1565
Vinsert
p90923
I21
VExpressionStatement
p90924
tp90925
I3
s(g8006
I42
g8007
Vinsert
p90926
I32
VMethodInvocation
p90927
tp90928
I1
s(g19152
I42
g19153
Vinsert
p90929
I42
VSimpleName: ManagementFactory
p90930
tp90931
I6
s(g18065
I42
g18066
Vinsert
p90932
I32
VMethodInvocation
p90933
tp90934
I2
s(g25328
I42
g25329
Vinsert
p90935
I43
VSimpleType: Class
p90936
tp90937
I1
s(g2525
I42
g2526
Vinsert
p90938
I42
VSimpleName: body
p90939
tp90940
I1
s(g10966
I42
g10967
Vinsert
p90941
I32
VMethodInvocation
p90942
tp90943
I3
s(g30252
I42
g30253
Vinsert
p90944
I43
VSimpleType: HttpServer
p90945
tp90946
I4
s(g4339
I42
g4340
Vinsert
p90947
I36
VParenthesizedExpression
p90948
tp90949
I1
s(Vinsert
p90950
I42
VSimpleName: assertEquals
p90951
Vinsert
p90952
I45
VStringLiteral: "CREATE TABLE customer (a INT, b CHAR (20), INDEX (a));"
p90953
tp90954
I1
s(g8001
I42
g8002
Vinsert
p90955
I42
VSimpleName: expr
p90956
tp90957
I1
s(g3528
I42
g3529
Vinsert
p90958
I42
VSimpleName: columnNameHash
p90959
tp90960
I1
s(g29858
I42
g29859
Vinsert
p90961
I83
VModifier: final
p90962
tp90963
I5
s(g81379
I42
g81380
Vinsert
p90964
I42
VSimpleName: SQLColumnConstraint
p90965
tp90966
I1
s(g17507
I42
g17508
Vinsert
p90967
I42
VSimpleName: SQLAlterTableAddForeignKey
p90968
tp90969
I1
s(g8849
I42
g8850
Vinsert
p90970
I60
VVariableDeclarationStatement
p90971
tp90972
I3
s(g4890
I42
g4891
Vinsert
p90973
I5
VArrayType: int[]
p90974
tp90975
I1
s(g1329
I42
g1330
Vinsert
p90976
I60
VVariableDeclarationStatement
p90977
tp90978
I1
s(g9519
I42
g9520
Vinsert
p90979
I39
VPrimitiveType: int
p90980
tp90981
I1
s(g26854
I42
g26855
Vinsert
p90982
I42
VSimpleName: SQLInSubQueryExpr
p90983
tp90984
I1
s(g3467
I42
g3468
Vinsert
p90985
I42
VSimpleName: SQLAssignItem
p90986
tp90987
I2
s(g1584
I42
g1585
Vinsert
p90988
I52
VThisExpression
p90989
tp90990
I1
s(g11376
I42
g11377
Vinsert
p90991
I42
VSimpleName: keepComments
p90992
tp90993
I5
s(g29398
I42
g29399
Vinsert
p90994
I42
VSimpleName: exprParser
p90995
tp90996
I1
s(g13808
I42
g13809
Vinsert
p90997
I43
VSimpleType: String
p90998
tp90999
I2
s(g871
I42
g872
Vinsert
p91000
I42
VSimpleName: accept
p91001
tp91002
I1
s(g72662
I42
g72663
Vinsert
p91003
I42
VSimpleName: token
p91004
tp91005
I1
s(g15864
I42
g15865
Vinsert
p91006
I42
VSimpleName: Utils
p91007
tp91008
I1
s(g2014
I42
g2015
Vinsert
p91009
I42
VSimpleName: SQLCastExpr
p91010
tp91011
I2
s(g24649
I42
g24650
Vinsert
p91012
I42
VSimpleName: printAndAccept
p91013
tp91014
I1
s(g19369
I42
g19370
Vinsert
p91015
I45
VStringLiteral: " sort"
p91016
tp91017
I1
s(g5176
I42
g5177
Vinsert
p91018
I42
VSimpleName: exprParser
p91019
tp91020
I2
s(g2755
I42
g2756
Vinsert
p91021
I45
VStringLiteral: " end if;\u005cn"
p91022
tp91023
I1
s(g21593
I42
g21594
Vinsert
p91024
I37
VPostfixExpression: ++
p91025
tp91026
I1
s(g30437
I42
g30438
Vinsert
p91027
I40
VQualifiedName: Token.DOT
p91028
tp91029
I1
s(g1294
I42
g1295
Vinsert
p91030
I40
VQualifiedName: org.junit.Assert
p91031
tp91032
I2
s(g4308
I42
g4309
Vinsert
p91033
I38
VPrefixExpression: ++
p91034
tp91035
I1
s(g226
I42
g227
Vinsert
p91036
I5
VArrayType: long[]
p91037
tp91038
I1
s(g18044
I42
g18045
Vinsert
p91039
I32
VMethodInvocation
p91040
tp91041
I6
s(g28007
I42
g28008
Vinsert
p91042
I43
VSimpleType: String
p91043
tp91044
I2
s(g15193
I42
g15194
Vinsert
p91045
I39
VPrimitiveType: char
p91046
tp91047
I2
s(g51840
I42
g51841
Vinsert
p91048
I45
VStringLiteral: "t"
p91049
tp91050
I1
s(g6732
I42
g6733
Vinsert
p91051
I42
VSimpleName: partitionName
p91052
tp91053
I1
s(g57769
I42
g57770
Vinsert
p91054
I45
VStringLiteral: "select * from(select * from test t limit 3) x"
p91055
tp91056
I1
s(Vinsert
p91057
I42
VSimpleName: getName
p91058
Vinsert
p91059
I42
VSimpleName: OracleASTVisitor
p91060
tp91061
I1
s(g7712
I42
g7713
Vinsert
p91062
I14
VClassInstanceCreation
p91063
tp91064
I3
s(g32782
I42
g32783
Vinsert
p91065
I32
VMethodInvocation
p91066
tp91067
I2
s(g3780
I42
g3781
Vinsert
p91068
I42
VSimpleName: JdbcTemplate
p91069
tp91070
I1
s(g126
I42
g127
Vinsert
p91071
I43
VSimpleType: DruidDriver
p91072
tp91073
I1
s(g1700
I42
g1701
Vinsert
p91074
I42
VSimpleName: WallConfig
p91075
tp91076
I2
s(g12029
I42
g12030
Vinsert
p91077
I42
VSimpleName: SQLExecutor
p91078
tp91079
I3
s(g27644
I42
g27645
Vinsert
p91080
I41
VReturnStatement
p91081
tp91082
I1
s(g24462
I42
g24463
Vinsert
p91083
I59
VVariableDeclarationFragment
p91084
tp91085
I1
s(g14343
I42
g14344
Vinsert
p91086
I59
VVariableDeclarationFragment
p91087
tp91088
I1
s(g1968
I42
g1969
Vinsert
p91089
I43
VSimpleType: SQLTableSource
p91090
tp91091
I2
s(g16888
I42
g16889
Vinsert
p91092
I60
VVariableDeclarationStatement
p91093
tp91094
I1
s(g15392
I42
g15393
Vinsert
p91095
I42
VSimpleName: getDbType
p91096
tp91097
I1
s(g35733
I42
g35734
Vinsert
p91098
I42
VSimpleName: initWallProvider
p91099
tp91100
I3
s(g8222
I42
g8223
Vinsert
p91101
I42
VSimpleName: Integer
p91102
tp91103
I1
s(g44340
I42
g44341
Vinsert
p91104
I42
VSimpleName: i
p91105
tp91106
I9
s(Vinsert
p91107
I42
VSimpleName: computeHashCode64
p91108
Vinsert
p91109
I21
VExpressionStatement
p91110
tp91111
I1
s(g57201
I42
g57202
Vinsert
p91112
I42
VSimpleName: println
p91113
tp91114
I3
s(g8340
I42
g8341
Vinsert
p91115
I60
VVariableDeclarationStatement
p91116
tp91117
I3
s(g1130
I42
g1131
Vinsert
p91118
I45
VStringLiteral: "WHERE t.time_id = s.time_id\u005cn"
p91119
tp91120
I1
s(g25834
I42
g25835
Vinsert
p91121
I32
VMethodInvocation
p91122
tp91123
I8
s(g8542
I42
g8543
Vinsert
p91124
I39
VPrimitiveType: boolean
p91125
tp91126
I1
s(Vinsert
p91127
I42
VSimpleName: endVisit
p91128
Vinsert
p91129
I42
VSimpleName: windowing
p91130
tp91131
I1
s(g801
I42
g802
Vinsert
p91132
I42
VSimpleName: sql
p91133
tp91134
I1
s(g9838
I42
g9839
Vinsert
p91135
I21
VExpressionStatement
p91136
tp91137
I1
s(g24368
I42
g24369
Vinsert
p91138
I45
VStringLiteral: "trigger "
p91139
tp91140
I1
s(g2329
I42
g2330
Vinsert
p91141
I33
VNullLiteral
p91142
tp91143
I1
s(g2885
I42
g2886
Vinsert
p91144
I40
VQualifiedName: Token.DELETE
p91145
tp91146
I1
s(g2069
I42
g2070
Vinsert
p91147
I42
VSimpleName: WallContext
p91148
tp91149
I2
s(g5864
I42
g5865
Vinsert
p91150
I42
VSimpleName: getItems
p91151
tp91152
I1
s(g18145
I42
g18146
Vinsert
p91153
I42
VSimpleName: SQLException
p91154
tp91155
I1
s(g64459
I42
g64460
Vinsert
p91156
I42
VSimpleName: indexList
p91157
tp91158
I1
s(g24247
I42
g24248
Vinsert
p91159
I41
VReturnStatement
p91160
tp91161
I4
s(g9456
I42
g9457
Vinsert
p91162
I42
VSimpleName: MySqlExprParser
p91163
tp91164
I1
s(g612
I42
g613
Vinsert
p91165
I39
VPrimitiveType: void
p91166
tp91167
I1
s(g3248
I42
g3249
Vinsert
p91168
I41
VReturnStatement
p91169
tp91170
I2
s(g25586
I42
g25587
Vinsert
p91171
I42
VSimpleName: TestCase
p91172
tp91173
I1
s(g14749
I42
g14750
Vinsert
p91174
I14
VClassInstanceCreation
p91175
tp91176
I2
s(g1888
I42
g1889
Vinsert
p91177
I43
VSimpleType: String
p91178
tp91179
I1
s(g35785
I42
g35786
Vinsert
p91180
I45
VStringLiteral: "os.name"
p91181
tp91182
I1
s(g51898
I42
g51899
Vinsert
p91183
I45
VStringLiteral: "\u005ctOR job_id = 'SH_CLERK'\u005cn"
p91184
tp91185
I1
s(g8752
I42
g8753
Vinsert
p91186
I40
VQualifiedName: Map.Entry
p91187
tp91188
I1
s(g16460
I42
g16461
Vinsert
p91189
I42
VSimpleName: sql
p91190
tp91191
I2
s(g30636
I42
g30637
Vinsert
p91192
I41
VReturnStatement
p91193
tp91194
I1
s(g17007
I42
g17008
Vinsert
p91195
I59
VVariableDeclarationFragment
p91196
tp91197
I3
s(g9529
I42
g9530
Vinsert
p91198
I42
VSimpleName: WallProvider
p91199
tp91200
I1
s(g2489
I42
g2490
Vinsert
p91201
I42
VSimpleName: Exception
p91202
tp91203
I1
s(g67974
I42
g67975
Vinsert
p91204
I42
VSimpleName: operator
p91205
tp91206
I1
s(g1564
I42
g1565
Vinsert
p91207
I52
VThisExpression
p91208
tp91209
I1
s(g7807
I42
g7808
Vinsert
p91210
I40
VQualifiedName: java.util.Collections
p91211
tp91212
I9
s(g2324
I42
g2325
Vinsert
p91213
I59
VVariableDeclarationFragment
p91214
tp91215
I1
s(g25913
I42
g25914
Vinsert
p91216
I42
VSimpleName: markBp
p91217
tp91218
I1
s(g7394
I42
g7395
Vinsert
p91219
I42
VSimpleName: sorter
p91220
tp91221
I2
s(g15899
I42
g15900
Vinsert
p91222
I42
VSimpleName: dataSource
p91223
tp91224
I1
s(g32594
I42
g32595
Vinsert
p91225
I42
VSimpleName: getPartitionSize
p91226
tp91227
I1
s(g5734
I42
g5735
Vinsert
p91228
I42
VSimpleName: PreparedStatement
p91229
tp91230
I2
s(Vinsert
p91231
I42
VSimpleName: assertEquals
p91232
Vinsert
p91233
I45
VStringLiteral: "\u005cndrop view if exists mytables;"
p91234
tp91235
I1
s(g31385
I42
g31386
Vinsert
p91236
I41
VReturnStatement
p91237
tp91238
I3
s(g1314
I42
g1315
Vinsert
p91239
I9
VBooleanLiteral: false
p91240
tp91241
I1
s(g24649
I42
g24650
Vinsert
p91242
I42
VSimpleName: x
p91243
tp91244
I1
s(Vinsert
p91245
I42
VSimpleName: getConditions
p91246
Vinsert
p91247
I42
VSimpleName: Assert
p91248
tp91249
I2
s(g9949
I42
g9950
Vinsert
p91250
I62
VInstanceofExpression
p91251
tp91252
I2
s(g8011
I42
g8012
Vinsert
p91253
I34
VNumberLiteral: 600
p91254
tp91255
I1
s(g44694
I42
g44695
Vinsert
p91256
I42
VSimpleName: item
p91257
tp91258
I1
s(g10011
I42
g10012
Vinsert
p91259
I43
VSimpleType: HTableInterface
p91260
tp91261
I1
s(g26581
I42
g26582
Vinsert
p91262
I39
VPrimitiveType: boolean
p91263
tp91264
I2
s(g7678
I42
g7679
Vinsert
p91265
I41
VReturnStatement
p91266
tp91267
I1
s(g23534
I42
g23535
Vinsert
p91268
I42
VSimpleName: setMaxEvictableIdleTimeMillis
p91269
tp91270
I1
s(g48815
I42
g48816
Vinsert
p91271
I45
VStringLiteral: "\u005cn\u005ct, TO_DATE('04-OCT-1992', 'DD-MON-YYYY'), 'SH_CLERK', 3000, NULL, 121"
p91272
tp91273
I2
s(g52759
I42
g52760
Vinsert
p91274
I40
VQualifiedName: JdbcConstants.MYSQL
p91275
tp91276
I12
s(g21370
I42
g21371
Vinsert
p91277
I42
VSimpleName: getDruidDataSourceInstances
p91278
tp91279
I1
s(g14754
I42
g14755
Vinsert
p91280
I8
VBlock
p91281
tp91282
I1
s(g24051
I42
g24052
Vinsert
p91283
I21
VExpressionStatement
p91284
tp91285
I8
s(g1032
I42
g1033
Vinsert
p91286
I45
VStringLiteral: "no sql"
p91287
tp91288
I1
s(g69751
I42
g69752
Vinsert
p91289
I42
VSimpleName: getJdbcFetchRowCount
p91290
tp91291
I1
s(g12354
I42
g12355
Vinsert
p91292
I21
VExpressionStatement
p91293
tp91294
I2
s(g14348
I42
g14349
Vinsert
p91295
I8
VBlock
p91296
tp91297
I1
s(g34716
I42
g34717
Vinsert
p91298
I42
VSimpleName: pos2
p91299
tp91300
I1
s(g6313
I42
g6314
Vinsert
p91301
I42
VSimpleName: accept
p91302
tp91303
I1
s(g69836
I42
g69837
Vinsert
p91304
I43
VSimpleType: MySqlOrderingExpr
p91305
tp91306
I2
s(g15480
I42
g15481
Vinsert
p91307
I42
VSimpleName: Log4JLogger
p91308
tp91309
I2
s(g3908
I42
g3909
Vinsert
p91310
I25
VIfStatement
p91311
tp91312
I1
s(g20559
I42
g20560
Vinsert
p91313
I60
VVariableDeclarationStatement
p91314
tp91315
I1
s(g12849
I42
g12850
Vinsert
p91316
I11
VCastExpression
p91317
tp91318
I1
s(g13326
I42
g13327
Vinsert
p91319
I42
VSimpleName: SQLInsertStatement
p91320
tp91321
I2
s(g4931
I42
g4932
Vinsert
p91322
I21
VExpressionStatement
p91323
tp91324
I3
s(g9909
I42
g9910
Vinsert
p91325
I59
VVariableDeclarationFragment
p91326
tp91327
I115
s(g23031
I42
g23032
Vinsert
p91328
I42
VSimpleName: requestCount
p91329
tp91330
I1
s(g786
I42
g787
Vinsert
p91331
I42
VSimpleName: debug
p91332
tp91333
I1
s(g2647
I42
g2648
Vinsert
p91334
I42
VSimpleName: String
p91335
tp91336
I11
s(g20240
I42
g20241
Vinsert
p91337
I42
VSimpleName: IllegalArgumentException
p91338
tp91339
I1
s(g5429
I42
g5430
Vinsert
p91340
I32
VMethodInvocation
p91341
tp91342
I2
s(g24750
I42
g24751
Vinsert
p91343
I42
VSimpleName: aliases
p91344
tp91345
I1
s(g19369
I42
g19370
Vinsert
p91346
I42
VSimpleName: x
p91347
tp91348
I1
s(g3213
I42
g3214
Vinsert
p91349
I25
VIfStatement
p91350
tp91351
I19
s(g14551
I42
g14552
Vinsert
p91352
I27
VInfixExpression: !=
p91353
tp91354
I1
s(g19984
I42
g19985
Vinsert
p91355
I42
VSimpleName: decimalA
p91356
tp91357
I1
s(g10618
I42
g10619
Vinsert
p91358
I43
VSimpleType: Integer
p91359
tp91360
I1
s(g419
I42
g420
Vinsert
p91361
I60
VVariableDeclarationStatement
p91362
tp91363
I1
s(g5465
I42
g5466
Vinsert
p91364
I42
VSimpleName: check
p91365
tp91366
I1
s(g7264
I42
g7265
Vinsert
p91367
I8
VBlock
p91368
tp91369
I1
s(g4088
I42
g4089
Vinsert
p91370
I42
VSimpleName: SQLException
p91371
tp91372
I1
s(g7023
I42
g7024
Vinsert
p91373
I45
VStringLiteral: "druid.name"
p91374
tp91375
I1
s(g4334
I42
g4335
Vinsert
p91376
I27
VInfixExpression: -
p91377
tp91378
I1
s(g16625
I42
g16626
Vinsert
p91379
I42
VSimpleName: db
p91380
tp91381
I1
s(g14917
I42
g14918
Vinsert
p91382
I45
VStringLiteral: "\u005ct\u005ctFROM ts_polygon\u005cn"
p91383
tp91384
I1
s(g11
I42
g12
Vinsert
p91385
I27
VInfixExpression: +
p91386
tp91387
I1
s(g10398
I42
g10399
Vinsert
p91388
I42
VSimpleName: sql
p91389
tp91390
I1
s(g16232
I42
g16233
Vinsert
p91391
I45
VStringLiteral: "8\u005cn"
p91392
tp91393
I1
s(g977
I42
g978
Vinsert
p91394
I2
VArrayAccess
p91395
tp91396
I3
s(g5987
I42
g5988
Vinsert
p91397
I60
VVariableDeclarationStatement
p91398
tp91399
I1
s(g901
I42
g902
Vinsert
p91400
I36
VParenthesizedExpression
p91401
tp91402
I3
s(g7131
I42
g7132
Vinsert
p91403
I32
VMethodInvocation
p91404
tp91405
I3
s(g18573
I42
g18574
Vinsert
p91406
I42
VSimpleName: ident
p91407
tp91408
I2
s(g4951
I42
g4952
Vinsert
p91409
I43
VSimpleType: OracleSchemaStatVisitor
p91410
tp91411
I4
s(g30341
I42
g30342
Vinsert
p91412
I25
VIfStatement
p91413
tp91414
I1
s(g14829
I42
g14830
Vinsert
p91415
I59
VVariableDeclarationFragment
p91416
tp91417
I21
s(g88766
I42
g88767
Vinsert
p91418
I43
VSimpleType: OracleCursorExpr
p91419
tp91420
I1
s(g9317
I42
g9318
Vinsert
p91421
I27
VInfixExpression: !=
p91422
tp91423
I1
s(g23983
I42
g23984
Vinsert
p91424
I45
VStringLiteral: "\u005ctSUPPLEMENTAL LOG GROUP \u005c"GGS_15754\u005c" (\u005c"GROUP_NAME\u005c", \u005c"GROUP_KEY\u005c", \u005c"LOG_CMPLT_CSN\u005c", \u005c"LOG_CMPLT_XIDS_SEQ\u005c") ALWAYS,\u005cn"
p91425
tp91426
I1
s(g73850
I42
g73851
Vinsert
p91427
I42
VSimpleName: String
p91428
tp91429
I1
s(g20904
I42
g20905
Vinsert
p91430
I42
VSimpleName: dataSourceStatValue
p91431
tp91432
I1
s(g4903
I42
g4904
Vinsert
p91433
I42
VSimpleName: isOracle
p91434
tp91435
I1
s(g21845
I42
g21846
Vinsert
p91436
I60
VVariableDeclarationStatement
p91437
tp91438
I1
s(g7126
I42
g7127
Vinsert
p91439
I42
VSimpleName: groupList
p91440
tp91441
I1
s(g6956
I42
g6957
Vinsert
p91442
I42
VSimpleName: SQLUtils
p91443
tp91444
I3
s(g7206
I42
g7207
Vinsert
p91445
I42
VSimpleName: registrationBean
p91446
tp91447
I1
s(g23327
I42
g23328
Vinsert
p91448
I39
VPrimitiveType: double
p91449
tp91450
I1
s(g18049
I42
g18050
Vinsert
p91451
I42
VSimpleName: accept
p91452
tp91453
I2
s(g89621
I42
g89622
Vinsert
p91454
I45
VStringLiteral: "execute s using @version, @increment"
p91455
tp91456
I1
s(g5946
I42
g5947
Vinsert
p91457
I42
VSimpleName: Class
p91458
tp91459
I1
s(g12125
I42
g12126
Vinsert
p91460
I42
VSimpleName: errorMessage
p91461
tp91462
I1
s(g6157
I42
g6158
Vinsert
p91463
I59
VVariableDeclarationFragment
p91464
tp91465
I18
s(g22046
I42
g22047
Vinsert
p91466
I42
VSimpleName: stmt
p91467
tp91468
I1
s(g3893
I42
g3894
Vinsert
p91469
I42
VSimpleName: quick
p91470
tp91471
I1
s(g24102
I42
g24103
Vinsert
p91472
I59
VVariableDeclarationFragment
p91473
tp91474
I1
s(g26998
I42
g26999
Vinsert
p91475
I43
VSimpleType: StringUtils
p91476
tp91477
I2
s(g42994
I42
g42995
Vinsert
p91478
I45
VStringLiteral: "create definer = current_user event if not exists someevent on schedule at current_timestamp + interval 30 minute\u005cn"
p91479
tp91480
I1
s(g17174
I42
g17175
Vinsert
p91481
I45
VStringLiteral: "\u005ctINNER JOIN t1 ON t1.col1 = tt1.col1;"
p91482
tp91483
I1
s(g14155
I42
g14156
Vinsert
p91484
I43
VSimpleType: String
p91485
tp91486
I1
s(g3982
I42
g3983
Vinsert
p91487
I42
VSimpleName: setSlave
p91488
tp91489
I1
s(g80302
I42
g80303
Vinsert
p91490
I43
VSimpleType: OracleOutputVisitor
p91491
tp91492
I1
s(g34496
I42
g34497
Vinsert
p91493
I42
VSimpleName: print
p91494
tp91495
I1
s(g10475
I42
g10476
Vinsert
p91496
I42
VSimpleName: webAppStat
p91497
tp91498
I2
s(g40357
I42
g40358
Vinsert
p91499
I42
VSimpleName: getContext
p91500
tp91501
I2
s(g21746
I42
g21747
Vinsert
p91502
I42
VSimpleName: print0
p91503
tp91504
I1
s(g11555
I42
g11556
Vinsert
p91505
I45
VStringLiteral: "jdbc:h2:mem:test;"
p91506
tp91507
I1
s(g1536
I42
g1537
Vinsert
p91508
I42
VSimpleName: Exception
p91509
tp91510
I1
s(g33534
I42
g33535
Vinsert
p91511
I42
VSimpleName: key
p91512
tp91513
I1
s(g2178
I42
g2179
Vinsert
p91514
I36
VParenthesizedExpression
p91515
tp91516
I2
s(g30105
I42
g30106
Vinsert
p91517
I14
VClassInstanceCreation
p91518
tp91519
I1
s(g51988
I42
g51989
Vinsert
p91520
I42
VSimpleName: rollbackOnFail
p91521
tp91522
I1
s(g26300
I42
g26301
Vinsert
p91523
I42
VSimpleName: Map
p91524
tp91525
I5
s(g14026
I42
g14027
Vinsert
p91526
I21
VExpressionStatement
p91527
tp91528
I8
s(g13022
I42
g13023
Vinsert
p91529
I42
VSimpleName: context
p91530
tp91531
I1
s(g2697
I42
g2698
Vinsert
p91532
I42
VSimpleName: SQLEvalVisitorUtils
p91533
tp91534
I31
s(g261
I42
g262
Vinsert
p91535
I42
VSimpleName: commentDeniedStat
p91536
tp91537
I1
s(g29928
I42
g29929
Vinsert
p91538
I45
VStringLiteral: "STATUS"
p91539
tp91540
I1
s(g37470
I42
g37471
Vinsert
p91541
I43
VSimpleType: Set
p91542
tp91543
I1
s(g25279
I42
g25280
Vinsert
p91544
I45
VStringLiteral: "c4 ae\u005cn"
p91545
tp91546
I1
s(g49735
I42
g49736
Vinsert
p91547
I42
VSimpleName: methodName
p91548
tp91549
I2
s(g27070
I42
g27071
Vinsert
p91550
I7
VAssignment: =
p91551
tp91552
I3
s(g24649
I42
g24650
Vinsert
p91553
I13
VCharacterLiteral: ' '
p91554
tp91555
I1
s(g22449
I42
g22450
Vinsert
p91556
I42
VSimpleName: current
p91557
tp91558
I1
s(g28042
I42
g28043
Vinsert
p91559
I42
VSimpleName: sortedSql
p91560
tp91561
I2
s(g74759
I42
g74760
Vinsert
p91562
I42
VSimpleName: Assert
p91563
tp91564
I4
s(g2586
I42
g2587
Vinsert
p91565
I32
VMethodInvocation
p91566
tp91567
I3
s(g29475
I42
g29476
Vinsert
p91568
I42
VSimpleName: select
p91569
tp91570
I1
s(g816
I42
g817
Vinsert
p91571
I42
VSimpleName: size
p91572
tp91573
I1
s(g1289
I42
g1290
Vinsert
p91574
I42
VSimpleName: Object
p91575
tp91576
I2
s(Vinsert
p91577
I42
VSimpleName: getConnection
p91578
Vinsert
p91579
I42
VSimpleName: test_prepare4
p91580
tp91581
I1
s(g41927
I42
g41928
Vinsert
p91582
I52
VThisExpression
p91583
tp91584
I1
s(g8001
I42
g8002
Vinsert
p91585
I32
VMethodInvocation
p91586
tp91587
I1
s(g5012
I42
g5013
Vinsert
p91588
I8
VBlock
p91589
tp91590
I2
s(g1953
I42
g1954
Vinsert
p91591
I32
VMethodInvocation
p91592
tp91593
I2
s(g7878
I42
g7879
Vinsert
p91594
I42
VSimpleName: ranges
p91595
tp91596
I1
s(g27744
I42
g27745
Vinsert
p91597
I45
VStringLiteral: "\u005cn\u005ct\u005ctFROM mytable_01"
p91598
tp91599
I1
s(g2795
I42
g2796
Vinsert
p91600
I43
VSimpleType: InputStreamReader
p91601
tp91602
I1
s(g28840
I42
g28841
Vinsert
p91603
I74
VParameterizedType: Map.Entry<ProfileEntryKey,ProfileEntryStat>
p91604
tp91605
I1
s(g17291
I42
g17292
Vinsert
p91606
I42
VSimpleName: getViolations
p91607
tp91608
I1
s(g1481
I42
g1482
Vinsert
p91609
I42
VSimpleName: assertNotNull
p91610
tp91611
I1
s(g65600
I42
g65601
Vinsert
p91612
I43
VSimpleType: SQLWithSubqueryClause
p91613
tp91614
I1
s(g43729
I42
g43730
Vinsert
p91615
I42
VSimpleName: setDatabase
p91616
tp91617
I1
s(g16452
I42
g16453
Vinsert
p91618
I27
VInfixExpression: ==
p91619
tp91620
I1
s(g13968
I42
g13969
Vinsert
p91621
I42
VSimpleName: table
p91622
tp91623
I4
s(g38410
I42
g38411
Vinsert
p91624
I43
VSimpleType: MySqlShowProcedureStatusStatement
p91625
tp91626
I1
s(g4165
I42
g4166
Vinsert
p91627
I27
VInfixExpression: ||
p91628
tp91629
I2
s(g5002
I42
g5003
Vinsert
p91630
I42
VSimpleName: ctx
p91631
tp91632
I3
s(g8449
I42
g8450
Vinsert
p91633
I37
VPostfixExpression: ++
p91634
tp91635
I1
s(g30229
I42
g30230
Vinsert
p91636
I8
VBlock
p91637
tp91638
I1
s(g10892
I42
g10893
Vinsert
p91639
I45
VStringLiteral: "\u005ct\u005ct\u005ctINTO T_STR\u005cn"
p91640
tp91641
I1
s(g13066
I42
g13067
Vinsert
p91642
I59
VVariableDeclarationFragment
p91643
tp91644
I2
s(g12435
I42
g12436
Vinsert
p91645
I8
VBlock
p91646
tp91647
I1
s(g17221
I42
g17222
Vinsert
p91648
I32
VMethodInvocation
p91649
tp91650
I1
s(g17739
I42
g17740
Vinsert
p91651
I42
VSimpleName: getCacheKey
p91652
tp91653
I1
s(g3528
I42
g3529
Vinsert
p91654
I42
VSimpleName: columns
p91655
tp91656
I2
s(g38672
I42
g38673
Vinsert
p91657
I42
VSimpleName: JdbcUtils
p91658
tp91659
I4
s(g41745
I42
g41746
Vinsert
p91660
I60
VVariableDeclarationStatement
p91661
tp91662
I1
s(g42627
I42
g42628
Vinsert
p91663
I45
VStringLiteral: "SELECT * FROM t_user"
p91664
tp91665
I1
s(g2403
I42
g2404
Vinsert
p91666
I42
VSimpleName: columnDef
p91667
tp91668
I1
s(g15495
I42
g15496
Vinsert
p91669
I42
VSimpleName: impl
p91670
tp91671
I3
s(g4188
I42
g4189
Vinsert
p91672
I42
VSimpleName: getChildren
p91673
tp91674
I2
s(g86552
I42
g86553
Vinsert
p91675
I42
VSimpleName: SQLBinaryOpExpr
p91676
tp91677
I1
s(g11611
I42
g11612
Vinsert
p91678
I27
VInfixExpression: +
p91679
tp91680
I12
s(g31257
I42
g31258
Vinsert
p91681
I34
VNumberLiteral: 2
p91682
tp91683
I1
s(Vinsert
p91684
I42
VSimpleName: visit
p91685
Vinsert
p91686
I42
VSimpleName: OraclePLSQLCommitStatement
p91687
tp91688
I1
s(g6871
I42
g6872
Vinsert
p91689
I59
VVariableDeclarationFragment
p91690
tp91691
I1
s(g10006
I42
g10007
Vinsert
p91692
I42
VSimpleName: SQLNullExpr
p91693
tp91694
I1
s(g33739
I42
g33740
Vinsert
p91695
I42
VSimpleName: getDataSource
p91696
tp91697
I1
s(g6917
I42
g6918
Vinsert
p91698
I21
VExpressionStatement
p91699
tp91700
I4
s(g9603
I42
g9604
Vinsert
p91701
I42
VSimpleName: printlnAndAccept
p91702
tp91703
I1
s(g24184
I42
g24185
Vinsert
p91704
I11
VCastExpression
p91705
tp91706
I1
s(g176
I42
g177
Vinsert
p91707
I42
VSimpleName: decrementIndent
p91708
tp91709
I1
s(g23093
I42
g23094
Vinsert
p91710
I45
VStringLiteral: "SHARE UPDATE"
p91711
tp91712
I1
s(g1410
I42
g1411
Vinsert
p91713
I40
VQualifiedName: x.field
p91714
tp91715
I1
s(g8796
I42
g8797
Vinsert
p91716
I42
VSimpleName: parseTableSourceRest
p91717
tp91718
I1
s(g1208
I42
g1209
Vinsert
p91719
I39
VPrimitiveType: void
p91720
tp91721
I1
s(g31291
I42
g31292
Vinsert
p91722
I45
VStringLiteral: "LATERAL VIEW "
p91723
tp91724
I1
s(g9103
I42
g9104
Vinsert
p91725
I42
VSimpleName: ColumnMetaData
p91726
tp91727
I1
s(g4381
I42
g4382
Vinsert
p91728
I27
VInfixExpression: <
p91729
tp91730
I2
s(g10710
I42
g10711
Vinsert
p91731
I42
VSimpleName: parseOptions
p91732
tp91733
I1
s(g7280
I42
g7281
Vinsert
p91734
I45
VStringLiteral: "UTF-8"
p91735
tp91736
I1
s(g12888
I42
g12889
Vinsert
p91737
I42
VSimpleName: SQLColumnDefinition
p91738
tp91739
I2
s(Vinsert
p91740
I42
VSimpleName: assertTrue
p91741
Vinsert
p91742
I45
VStringLiteral: "SELECT * FROM `my_crons` WHERE 1 OR nextrun = '0' "
p91743
tp91744
I1
s(g7216
I42
g7217
Vinsert
p91745
I21
VExpressionStatement
p91746
tp91747
I1
s(g8038
I42
g8039
Vinsert
p91748
I42
VSimpleName: getLocalSqlMapSessionWrapper
p91749
tp91750
I1
s(g1496
I42
g1497
Vinsert
p91751
I32
VMethodInvocation
p91752
tp91753
I8
s(g10508
I42
g10509
Vinsert
p91754
I27
VInfixExpression: <
p91755
tp91756
I1
s(g5792
I42
g5793
Vinsert
p91757
I42
VSimpleName: SQLExpr
p91758
tp91759
I1
s(g5597
I42
g5598
Vinsert
p91760
I42
VSimpleName: stmt
p91761
tp91762
I2
s(g2413
I42
g2414
Vinsert
p91763
I45
VStringLiteral: "SHOW EVENTS"
p91764
tp91765
I1
s(g13050
I42
g13051
Vinsert
p91766
I27
VInfixExpression: ==
p91767
tp91768
I1
s(g4170
I42
g4171
Vinsert
p91769
I14
VClassInstanceCreation
p91770
tp91771
I1
s(g2459
I42
g2460
Vinsert
p91772
I42
VSimpleName: print0
p91773
tp91774
I6
s(g6000
I42
g6001
Vinsert
p91775
I42
VSimpleName: SQLException
p91776
tp91777
I1
s(g6671
I42
g6672
Vinsert
p91778
I45
VStringLiteral: "hint not allow"
p91779
tp91780
I1
s(g24923
I42
g24924
Vinsert
p91781
I42
VSimpleName: WallVisitorUtils
p91782
tp91783
I2
s(g1208
I42
g1209
Vinsert
p91784
I43
VSimpleType: Exception
p91785
tp91786
I1
s(g10252
I42
g10253
Vinsert
p91787
I27
VInfixExpression: -
p91788
tp91789
I8
s(g21696
I42
g21697
Vinsert
p91790
I42
VSimpleName: getName
p91791
tp91792
I9
s(g18016
I42
g18017
Vinsert
p91793
I42
VSimpleName: configFilter
p91794
tp91795
I1
s(g3027
I42
g3028
Vinsert
p91796
I42
VSimpleName: replaceAll
p91797
tp91798
I1
s(g7665
I42
g7666
Vinsert
p91799
I43
VSimpleType: Xid
p91800
tp91801
I1
s(g8142
I42
g8143
Vinsert
p91802
I32
VMethodInvocation
p91803
tp91804
I281
s(g1070
I42
g1071
Vinsert
p91805
I42
VSimpleName: test_wall
p91806
tp91807
I1
s(g8277
I42
g8278
Vinsert
p91808
I42
VSimpleName: String
p91809
tp91810
I4
s(g3213
I42
g3214
Vinsert
p91811
I8
VBlock
p91812
tp91813
I29
s(g9647
I42
g9648
Vinsert
p91814
I83
VModifier: protected
p91815
tp91816
I2
s(g2905
I42
g2906
Vinsert
p91817
I42
VSimpleName: close
p91818
tp91819
I1
s(g2198
I42
g2199
Vinsert
p91820
I59
VVariableDeclarationFragment
p91821
tp91822
I1
s(g23501
I42
g23502
Vinsert
p91823
I28
VInitializer
p91824
tp91825
I1
s(g68926
I42
g68927
Vinsert
p91826
I42
VSimpleName: selectItem
p91827
tp91828
I2
s(g42149
I42
g42150
Vinsert
p91829
I43
VSimpleType: SQLName
p91830
tp91831
I2
s(g2925
I42
g2926
Vinsert
p91832
I32
VMethodInvocation
p91833
tp91834
I2
s(g1236
I42
g1237
Vinsert
p91835
I39
VPrimitiveType: long
p91836
tp91837
I1
s(g17066
I42
g17067
Vinsert
p91838
I59
VVariableDeclarationFragment
p91839
tp91840
I2
s(g14782
I42
g14783
Vinsert
p91841
I33
VNullLiteral
p91842
tp91843
I2
s(g4890
I42
g4891
Vinsert
p91844
I8
VBlock
p91845
tp91846
I1
s(g24649
I42
g24650
Vinsert
p91847
I42
VSimpleName: size
p91848
tp91849
I1
s(g4116
I42
g4117
Vinsert
p91850
I25
VIfStatement
p91851
tp91852
I1
s(g16980
I42
g16981
Vinsert
p91853
I59
VVariableDeclarationFragment
p91854
tp91855
I6
s(g75148
I42
g75149
Vinsert
p91856
I45
VStringLiteral: "B"
p91857
tp91858
I1
s(g4424
I42
g4425
Vinsert
p91859
I83
VModifier: public
p91860
tp91861
I1
s(g30842
I42
g30843
Vinsert
p91862
I42
VSimpleName: parent
p91863
tp91864
I3
s(g2558
I42
g2559
Vinsert
p91865
I43
VSimpleType: SQLCreateProcedureStatement
p91866
tp91867
I1
s(g5328
I42
g5329
Vinsert
p91868
I52
VThisExpression
p91869
tp91870
I1
s(g27680
I42
g27681
Vinsert
p91871
I25
VIfStatement
p91872
tp91873
I16
s(g28400
I42
g28401
Vinsert
p91874
I27
VInfixExpression: *
p91875
tp91876
I1
s(g14630
I42
g14631
Vinsert
p91877
I42
VSimpleName: toString
p91878
tp91879
I2
s(g16479
I42
g16480
Vinsert
p91880
I39
VPrimitiveType: void
p91881
tp91882
I2
s(g28840
I42
g28841
Vinsert
p91883
I43
VSimpleType: ProfileEntryStat
p91884
tp91885
I1
s(g10752
I42
g10753
Vinsert
p91886
I33
VNullLiteral
p91887
tp91888
I1
s(g82861
I42
g82862
Vinsert
p91889
I45
VStringLiteral: "tk"
p91890
tp91891
I2
s(g28520
I42
g28521
Vinsert
p91892
I42
VSimpleName: dataSourceB
p91893
tp91894
I3
s(g24943
I42
g24944
Vinsert
p91895
I40
VQualifiedName: com.alibaba.druid.stat.TableStat.Column
p91896
tp91897
I1
s(g8770
I42
g8771
Vinsert
p91898
I42
VSimpleName: ErrorFilter
p91899
tp91900
I1
s(g13504
I42
g13505
Vinsert
p91901
I42
VSimpleName: mysqlSql
p91902
tp91903
I4
s(g26521
I42
g26522
Vinsert
p91904
I42
VSimpleName: key
p91905
tp91906
I1
s(g1647
I42
g1648
Vinsert
p91907
I42
VSimpleName: Integer
p91908
tp91909
I1
s(g22364
I42
g22365
Vinsert
p91910
I42
VSimpleName: Exception
p91911
tp91912
I68
s(g6475
I42
g6476
Vinsert
p91913
I43
VSimpleType: Exception
p91914
tp91915
I1
s(g17983
I42
g17984
Vinsert
p91916
I42
VSimpleName: setFilters
p91917
tp91918
I2
s(g12117
I42
g12118
Vinsert
p91919
I42
VSimpleName: charset
p91920
tp91921
I1
s(g3417
I42
g3418
Vinsert
p91922
I27
VInfixExpression: +
p91923
tp91924
I1
s(g1978
I42
g1979
Vinsert
p91925
I41
VReturnStatement
p91926
tp91927
I2
s(g42262
I42
g42263
Vinsert
p91928
I45
VStringLiteral: "? * 11"
p91929
tp91930
I1
s(g492
I42
g493
Vinsert
p91931
I22
VFieldAccess
p91932
tp91933
I2
s(g33534
I42
g33535
Vinsert
p91934
I42
VSimpleName: accept
p91935
tp91936
I1
s(g5045
I42
g5046
Vinsert
p91937
I43
VSimpleType: SQLBooleanExpr
p91938
tp91939
I1
s(g5105
I42
g5106
Vinsert
p91940
I42
VSimpleName: printAndAccept
p91941
tp91942
I1
s(g13517
I42
g13518
Vinsert
p91943
I42
VSimpleName: getTables
p91944
tp91945
I10
s(Vinsert
p91946
I42
VSimpleName: parseStatements
p91947
Vinsert
p91948
I45
VStringLiteral: "set identity_insert tb_coupon OFF"
p91949
tp91950
I1
s(g18113
I42
g18114
Vinsert
p91951
I42
VSimpleName: object
p91952
tp91953
I1
s(g836
I42
g837
Vinsert
p91954
I32
VMethodInvocation
p91955
tp91956
I30
s(g68021
I42
g68022
Vinsert
p91957
I52
VThisExpression
p91958
tp91959
I1
s(g3365
I42
g3366
Vinsert
p91960
I42
VSimpleName: param1
p91961
tp91962
I1
s(g71440
I42
g71441
Vinsert
p91963
I42
VSimpleName: assertEquals
p91964
tp91965
I1
s(g3149
I42
g3150
Vinsert
p91966
I42
VSimpleName: SQLExpr
p91967
tp91968
I1
s(g2842
I42
g2843
Vinsert
p91969
I42
VSimpleName: SQLWithSubqueryClause
p91970
tp91971
I1
s(g6485
I42
g6486
Vinsert
p91972
I7
VAssignment: =
p91973
tp91974
I1
s(g13001
I42
g13002
Vinsert
p91975
I41
VReturnStatement
p91976
tp91977
I3
s(g84334
I42
g84335
Vinsert
p91978
I45
VStringLiteral: "id"
p91979
tp91980
I1
s(g9345
I42
g9346
Vinsert
p91981
I42
VSimpleName: HTableDescriptor
p91982
tp91983
I1
s(g53827
I42
g53828
Vinsert
p91984
I40
VQualifiedName: Token.LITERAL_CHARS
p91985
tp91986
I1
s(g27840
I42
g27841
Vinsert
p91987
I42
VSimpleName: getBlobAsBinaryStream
p91988
tp91989
I1
s(g13326
I42
g13327
Vinsert
p91990
I60
VVariableDeclarationStatement
p91991
tp91992
I19
s(g5936
I42
g5937
Vinsert
p91993
I45
VStringLiteral: "\u005ct\u005ct\u005ctgroup by prov\u005cn"
p91994
tp91995
I1
s(g7602
I42
g7603
Vinsert
p91996
I43
VSimpleType: SQLUnionQuery
p91997
tp91998
I2
s(g25586
I42
g25587
Vinsert
p91999
I43
VSimpleType: Exception
p92000
tp92001
I1
s(g11935
I42
g11936
Vinsert
p92002
I25
VIfStatement
p92003
tp92004
I1
s(g11335
I42
g11336
Vinsert
p92005
I38
VPrefixExpression: ++
p92006
tp92007
I2
s(g55017
I42
g55018
Vinsert
p92008
I43
VSimpleType: PGASTVisitor
p92009
tp92010
I23
s(g6212
I42
g6213
Vinsert
p92011
I31
VMethodDeclaration
p92012
tp92013
I2
s(g21667
I42
g21668
Vinsert
p92014
I42
VSimpleName: form
p92015
tp92016
I1
s(g326
I42
g327
Vinsert
p92017
I45
VStringLiteral: "    AND sample_column_table_name = 'product_0096'\u005cn"
p92018
tp92019
I1
s(g20306
I42
g20307
Vinsert
p92020
I44
VSingleVariableDeclaration
p92021
tp92022
I1
s(g31127
I42
g31128
Vinsert
p92023
I42
VSimpleName: SQLDropTableSpaceStatement
p92024
tp92025
I2
s(g7932
I42
g7933
Vinsert
p92026
I34
VNumberLiteral: 1
p92027
tp92028
I2
s(g21908
I42
g21909
Vinsert
p92029
I45
VStringLiteral: "\u005cn\u005ctupdated_date DATETIME,"
p92030
tp92031
I1
s(g15899
I42
g15900
Vinsert
p92032
I42
VSimpleName: Assert
p92033
tp92034
I1
s(g15193
I42
g15194
Vinsert
p92035
I42
VSimpleName: firstResult
p92036
tp92037
I1
s(g2125
I42
g2126
Vinsert
p92038
I43
VSimpleType: ProfileStat
p92039
tp92040
I1
s(g23031
I42
g23032
Vinsert
p92041
I42
VSimpleName: sessionStatMap
p92042
tp92043
I1
s(g7121
I42
g7122
Vinsert
p92044
I42
VSimpleName: Object
p92045
tp92046
I9
s(g612
I42
g613
Vinsert
p92047
I8
VBlock
p92048
tp92049
I2
s(g13094
I42
g13095
Vinsert
p92050
I42
VSimpleName: i
p92051
tp92052
I3
s(g5166
I42
g5167
Vinsert
p92053
I42
VSimpleName: assertTrue
p92054
tp92055
I6
s(g28190
I42
g28191
Vinsert
p92056
I42
VSimpleName: assertEquals
p92057
tp92058
I2
s(g8011
I42
g8012
Vinsert
p92059
I42
VSimpleName: h
p92060
tp92061
I1
s(g24012
I42
g24013
Vinsert
p92062
I42
VSimpleName: ex
p92063
tp92064
I6
s(g992
I42
g993
Vinsert
p92065
I42
VSimpleName: println
p92066
tp92067
I1
s(g27644
I42
g27645
Vinsert
p92068
I22
VFieldAccess
p92069
tp92070
I1
s(g14361
I42
g14362
Vinsert
p92071
I44
VSingleVariableDeclaration
p92072
tp92073
I9
s(g11182
I42
g11183
Vinsert
p92074
I42
VSimpleName: WallSqlStat
p92075
tp92076
I1
s(g404
I42
g405
Vinsert
p92077
I45
VStringLiteral: "FROM times t, sales s, customers c\u005cn"
p92078
tp92079
I1
s(g10710
I42
g10711
Vinsert
p92080
I45
VStringLiteral: "200"
p92081
tp92082
I1
s(g6927
I42
g6928
Vinsert
p92083
I42
VSimpleName: stringVal
p92084
tp92085
I1
s(g19875
I42
g19876
Vinsert
p92086
I43
VSimpleType: SQLExpr
p92087
tp92088
I3
s(g22538
I42
g22539
Vinsert
p92089
I42
VSimpleName: SQLExpr
p92090
tp92091
I1
s(g26608
I42
g26609
Vinsert
p92092
I11
VCastExpression
p92093
tp92094
I1
s(Vinsert
p92095
I42
VSimpleName: accept0
p92096
Vinsert
p92097
I42
VSimpleName: toFactionalSecondsPrecision
p92098
tp92099
I1
s(g276
I42
g277
Vinsert
p92100
I45
VStringLiteral: "\u005cnSELECT n"
p92101
tp92102
I1
s(g14765
I42
g14766
Vinsert
p92103
I25
VIfStatement
p92104
tp92105
I1
s(g20856
I42
g20857
Vinsert
p92106
I42
VSimpleName: sql
p92107
tp92108
I1
s(g6557
I42
g6558
Vinsert
p92109
I42
VSimpleName: on_ab_binaryOpExpr
p92110
tp92111
I1
s(g27757
I42
g27758
Vinsert
p92112
I43
VSimpleType: WallConfig
p92113
tp92114
I1
s(g28138
I42
g28139
Vinsert
p92115
I14
VClassInstanceCreation
p92116
tp92117
I1
s(g27752
I42
g27753
Vinsert
p92118
I27
VInfixExpression: <
p92119
tp92120
I1
s(g9195
I42
g9196
Vinsert
p92121
I42
VSimpleName: SQLParserUtils
p92122
tp92123
I13
s(g4391
I42
g4392
Vinsert
p92124
I21
VExpressionStatement
p92125
tp92126
I2
s(g19924
I42
g19925
Vinsert
p92127
I42
VSimpleName: TestCase
p92128
tp92129
I1
s(g21982
I42
g21983
Vinsert
p92130
I8
VBlock
p92131
tp92132
I2
s(g10581
I42
g10582
Vinsert
p92133
I7
VAssignment: =
p92134
tp92135
I1
s(g2125
I42
g2126
Vinsert
p92136
I45
VStringLiteral: "Profiles"
p92137
tp92138
I1
s(g20947
I42
g20948
Vinsert
p92139
I45
VStringLiteral: "jdbc:mock:config-3"
p92140
tp92141
I1
s(g9778
I42
g9779
Vinsert
p92142
I42
VSimpleName: item2
p92143
tp92144
I1
s(g11616
I42
g11617
Vinsert
p92145
I43
VSimpleType: SQLExpr
p92146
tp92147
I25
s(Vinsert
p92148
I42
VSimpleName: evalExpr
p92149
Vinsert
p92150
I42
VSimpleName: test_byte
p92151
tp92152
I1
s(g8062
I42
g8063
Vinsert
p92153
I39
VPrimitiveType: void
p92154
tp92155
I1
s(g13032
I42
g13033
Vinsert
p92156
I25
VIfStatement
p92157
tp92158
I1
s(g49024
I42
g49025
Vinsert
p92159
I42
VSimpleName: toString
p92160
tp92161
I1
s(g7650
I42
g7651
Vinsert
p92162
I42
VSimpleName: getCause
p92163
tp92164
I1
s(g5882
I42
g5883
Vinsert
p92165
I42
VSimpleName: getInto
p92166
tp92167
I1
s(g7176
I42
g7177
Vinsert
p92168
I42
VSimpleName: assertTrue
p92169
tp92170
I1
s(g206
I42
g207
Vinsert
p92171
I27
VInfixExpression: !=
p92172
tp92173
I1
s(g87567
I42
g87568
Vinsert
p92174
I42
VSimpleName: testGetDbType
p92175
tp92176
I1
s(g321
I42
g322
Vinsert
p92177
I60
VVariableDeclarationStatement
p92178
tp92179
I3
s(g19315
I42
g19316
Vinsert
p92180
I42
VSimpleName: SQLStatement
p92181
tp92182
I2
s(g88316
I42
g88317
Vinsert
p92183
I42
VSimpleName: SQLServerUseStatement
p92184
tp92185
I1
s(g40994
I42
g40995
Vinsert
p92186
I43
VSimpleType: Statement
p92187
tp92188
I15
s(Vinsert
p92189
I42
VSimpleName: toSQLString
p92190
Vinsert
p92191
I45
VStringLiteral: "CREATE SEQUENCE \u005c"GJS_ZIXUN\u005c".\u005c"FINANCE_EXPLAIN_ID_GENERATOR\u005c" ORDER"
p92192
tp92193
I1
s(g18289
I42
g18290
Vinsert
p92194
I42
VSimpleName: String
p92195
tp92196
I3
s(g36951
I42
g36952
Vinsert
p92197
I42
VSimpleName: paramSize
p92198
tp92199
I2
s(g12427
I42
g12428
Vinsert
p92200
I42
VSimpleName: accept
p92201
tp92202
I1
s(g2228
I42
g2229
Vinsert
p92203
I39
VPrimitiveType: boolean
p92204
tp92205
I1
s(g26393
I42
g26394
Vinsert
p92206
I42
VSimpleName: np
p92207
tp92208
I4
s(g6495
I42
g6496
Vinsert
p92209
I42
VSimpleName: parameters
p92210
tp92211
I1
s(g76
I42
g77
Vinsert
p92212
I42
VSimpleName: app
p92213
tp92214
I2
s(g7532
I42
g7533
Vinsert
p92215
I42
VSimpleName: SQLDetailDialog
p92216
tp92217
I1
s(g3732
I42
g3733
Vinsert
p92218
I42
VSimpleName: SQLUtils
p92219
tp92220
I1
s(g5310
I42
g5311
Vinsert
p92221
I42
VSimpleName: String
p92222
tp92223
I1
s(g50756
I42
g50757
Vinsert
p92224
I42
VSimpleName: setTarget
p92225
tp92226
I1
s(g16778
I42
g16779
Vinsert
p92227
I31
VMethodDeclaration
p92228
tp92229
I2
s(g4620
I42
g4621
Vinsert
p92230
I42
VSimpleName: accept
p92231
tp92232
I1
s(g8052
I42
g8053
Vinsert
p92233
I27
VInfixExpression: ==
p92234
tp92235
I1
s(g19278
I42
g19279
Vinsert
p92236
I21
VExpressionStatement
p92237
tp92238
I1
s(g14290
I42
g14291
Vinsert
p92239
I42
VSimpleName: AtomicInteger
p92240
tp92241
I1
s(g16123
I42
g16124
Vinsert
p92242
I60
VVariableDeclarationStatement
p92243
tp92244
I3
s(g11187
I42
g11188
Vinsert
p92245
I42
VSimpleName: sqlStat
p92246
tp92247
I4
s(g78716
I42
g78717
Vinsert
p92248
I42
VSimpleName: MySqlExtractExpr
p92249
tp92250
I1
s(g13331
I42
g13332
Vinsert
p92251
I42
VSimpleName: Util
p92252
tp92253
I1
s(g9060
I42
g9061
Vinsert
p92254
I8
VBlock
p92255
tp92256
I22
s(g12262
I42
g12263
Vinsert
p92257
I41
VReturnStatement
p92258
tp92259
I1
s(g9089
I42
g9090
Vinsert
p92260
I83
VModifier: public
p92261
tp92262
I1
s(g19435
I42
g19436
Vinsert
p92263
I42
VSimpleName: transformOracleToPostgresql
p92264
tp92265
I1
s(g8340
I42
g8341
Vinsert
p92266
I42
VSimpleName: input
p92267
tp92268
I2
s(g1908
I42
g1909
Vinsert
p92269
I42
VSimpleName: test_reverse
p92270
tp92271
I1
s(g6244
I42
g6245
Vinsert
p92272
I25
VIfStatement
p92273
tp92274
I4
s(g5818
I42
g5819
Vinsert
p92275
I42
VSimpleName: Object
p92276
tp92277
I1
s(g32069
I42
g32070
Vinsert
p92278
I21
VExpressionStatement
p92279
tp92280
I3
s(g7517
I42
g7518
Vinsert
p92281
I42
VSimpleName: print
p92282
tp92283
I2
s(g2961
I42
g2962
Vinsert
p92284
I42
VSimpleName: Assert
p92285
tp92286
I1
s(g17550
I42
g17551
Vinsert
p92287
I45
VStringLiteral: "select 'a'"
p92288
tp92289
I1
s(g32188
I42
g32189
Vinsert
p92290
I41
VReturnStatement
p92291
tp92292
I2
s(g8796
I42
g8797
Vinsert
p92293
I27
VInfixExpression: &&
p92294
tp92295
I1
s(g20811
I42
g20812
Vinsert
p92296
I43
VSimpleType: IllegalAccessException
p92297
tp92298
I2
s(g24368
I42
g24369
Vinsert
p92299
I42
VSimpleName: triggerTypeName
p92300
tp92301
I3
s(g836
I42
g837
Vinsert
p92302
I42
VSimpleName: print0
p92303
tp92304
I1
s(g12786
I42
g12787
Vinsert
p92305
I42
VSimpleName: SQLExpr
p92306
tp92307
I1
s(g17439
I42
g17440
Vinsert
p92308
I52
VThisExpression
p92309
tp92310
I2
s(g2992
I42
g2993
Vinsert
p92311
I43
VSimpleType: SQLSelectItem
p92312
tp92313
I5
s(g64072
I42
g64073
Vinsert
p92314
I40
VQualifiedName: SQLCreateTableStatement.Type.GLOBAL_TEMPORARY
p92315
tp92316
I1
s(g5615
I42
g5616
Vinsert
p92317
I32
VMethodInvocation
p92318
tp92319
I2
s(g10174
I42
g10175
Vinsert
p92320
I31
VMethodDeclaration
p92321
tp92322
I1
s(g1430
I42
g1431
Vinsert
p92323
I43
VSimpleType: Lexer
p92324
tp92325
I1
s(g20564
I42
g20565
Vinsert
p92326
I43
VSimpleType: String
p92327
tp92328
I1
s(g7898
I42
g7899
Vinsert
p92329
I11
VCastExpression
p92330
tp92331
I1
s(g17926
I42
g17927
Vinsert
p92332
I42
VSimpleName: getSelect
p92333
tp92334
I3
s(g7807
I42
g7808
Vinsert
p92335
I42
VSimpleName: getChildren
p92336
tp92337
I14
s(g2905
I42
g2906
Vinsert
p92338
I60
VVariableDeclarationStatement
p92339
tp92340
I1
s(g12716
I42
g12717
Vinsert
p92341
I42
VSimpleName: incrementStartTransactionCount
p92342
tp92343
I1
s(g5979
I42
g5980
Vinsert
p92344
I42
VSimpleName: visitor
p92345
tp92346
I1
s(g10660
I42
g10661
Vinsert
p92347
I45
VStringLiteral: "\u005ct`c_varchar` varchar(10) DEFAULT 'hello' COMMENT 'varchar',\u005cn"
p92348
tp92349
I2
s(g1559
I42
g1560
Vinsert
p92350
I42
VSimpleName: HashSet
p92351
tp92352
I3
s(g2178
I42
g2179
Vinsert
p92353
I25
VIfStatement
p92354
tp92355
I21
s(g1360
I42
g1361
Vinsert
p92356
I32
VMethodInvocation
p92357
tp92358
I26
s(g2548
I42
g2549
Vinsert
p92359
I42
VSimpleName: delete
p92360
tp92361
I1
s(g1755
I42
g1756
Vinsert
p92362
I43
VSimpleType: SchemaStatVisitor
p92363
tp92364
I2
s(g2910
I42
g2911
Vinsert
p92365
I32
VMethodInvocation
p92366
tp92367
I8
s(g13042
I42
g13043
Vinsert
p92368
I40
VQualifiedName: rightOp.priority
p92369
tp92370
I1
s(g14744
I42
g14745
Vinsert
p92371
I45
VStringLiteral: "yyyy-MM-dd HH:mm:ss"
p92372
tp92373
I3
s(g9267
I42
g9268
Vinsert
p92374
I21
VExpressionStatement
p92375
tp92376
I1
s(g3332
I42
g3333
Vinsert
p92377
I40
VQualifiedName: Map.Entry
p92378
tp92379
I1
s(g12542
I42
g12543
Vinsert
p92380
I43
VSimpleType: PGLineSegmentsExpr
p92381
tp92382
I2
s(g924
I42
g925
Vinsert
p92383
I42
VSimpleName: ConnectionEventListener
p92384
tp92385
I1
s(g11880
I42
g11881
Vinsert
p92386
I45
VStringLiteral: "\u005cn\u005ctcust_last_name VARCHAR2(20),"
p92387
tp92388
I2
s(g17747
I42
g17748
Vinsert
p92389
I74
VParameterizedType: AtomicReference<SQLException>
p92390
tp92391
I2
s(g13191
I42
g13192
Vinsert
p92392
I42
VSimpleName: conn
p92393
tp92394
I3
s(Vinsert
p92395
I42
VSimpleName: setParent
p92396
Vinsert
p92397
I42
VSimpleName: setDropDataFile
p92398
tp92399
I1
s(g6139
I42
g6140
Vinsert
p92400
I42
VSimpleName: text
p92401
tp92402
I15
s(g6587
I42
g6588
Vinsert
p92403
I32
VMethodInvocation
p92404
tp92405
I21
s(g1750
I42
g1751
Vinsert
p92406
I8
VBlock
p92407
tp92408
I2
s(g8113
I42
g8114
Vinsert
p92409
I43
VSimpleType: WallContext
p92410
tp92411
I2
s(g3885
I42
g3886
Vinsert
p92412
I42
VSimpleName: Exception
p92413
tp92414
I119
s(g5035
I42
g5036
Vinsert
p92415
I21
VExpressionStatement
p92416
tp92417
I2
s(g19810
I42
g19811
Vinsert
p92418
I43
VSimpleType: ParserException
p92419
tp92420
I1
s(g4160
I42
g4161
Vinsert
p92421
I39
VPrimitiveType: int
p92422
tp92423
I1
s(g19831
I42
g19832
Vinsert
p92424
I42
VSimpleName: List
p92425
tp92426
I6
s(g341
I42
g342
Vinsert
p92427
I38
VPrefixExpression: !
p92428
tp92429
I1
s(g2543
I42
g2544
Vinsert
p92430
I7
VAssignment: =
p92431
tp92432
I6
s(g1125
I42
g1126
Vinsert
p92433
I22
VFieldAccess
p92434
tp92435
I2
s(g7158
I42
g7159
Vinsert
p92436
I42
VSimpleName: getMetaData
p92437
tp92438
I1
s(g34055
I42
g34056
Vinsert
p92439
I40
VQualifiedName: Token.ALTER
p92440
tp92441
I2
s(g8964
I42
g8965
Vinsert
p92442
I42
VSimpleName: s
p92443
tp92444
I2
s(g23872
I42
g23873
Vinsert
p92445
I78
VMarkerAnnotation
p92446
tp92447
I156
s(g8886
I42
g8887
Vinsert
p92448
I45
VStringLiteral: "JdbcCommitCount"
p92449
tp92450
I1
s(g1420
I42
g1421
Vinsert
p92451
I42
VSimpleName: visitor
p92452
tp92453
I20
s(g16606
I42
g16607
Vinsert
p92454
I33
VNullLiteral
p92455
tp92456
I1
s(g846
I42
g847
Vinsert
p92457
I60
VVariableDeclarationStatement
p92458
tp92459
I1
s(g1380
I42
g1381
Vinsert
p92460
I42
VSimpleName: name
p92461
tp92462
I1
s(g2393
I42
g2394
Vinsert
p92463
I39
VPrimitiveType: int
p92464
tp92465
I1
s(g9569
I42
g9570
Vinsert
p92466
I12
VCatchClause
p92467
tp92468
I1
s(g14605
I42
g14606
Vinsert
p92469
I42
VSimpleName: properties
p92470
tp92471
I1
s(g14421
I42
g14422
Vinsert
p92472
I45
VStringLiteral: "com.alibaba.druid.filter.stat.StatFilter"
p92473
tp92474
I1
s(g34716
I42
g34717
Vinsert
p92475
I34
VNumberLiteral: 1
p92476
tp92477
I5
s(g10275
I42
g10276
Vinsert
p92478
I43
VSimpleType: PGWithQuery
p92479
tp92480
I1
s(g13622
I42
g13623
Vinsert
p92481
I10
VBreakStatement
p92482
tp92483
I1
s(g49024
I42
g49025
Vinsert
p92484
I42
VSimpleName: connecttimeMillis
p92485
tp92486
I1
s(g1800
I42
g1801
Vinsert
p92487
I27
VInfixExpression: <=
p92488
tp92489
I2
s(g15068
I42
g15069
Vinsert
p92490
I42
VSimpleName: equalsIgnoreCase
p92491
tp92492
I2
s(g14722
I42
g14723
Vinsert
p92493
I59
VVariableDeclarationFragment
p92494
tp92495
I1
s(Vinsert
p92496
I42
VSimpleName: check
p92497
Vinsert
p92498
I42
VSimpleName: config_callback
p92499
tp92500
I5
s(Vinsert
p92501
I42
VSimpleName: visit
p92502
Vinsert
p92503
I42
VSimpleName: ref
p92504
tp92505
I1
s(g23934
I42
g23935
Vinsert
p92506
I21
VExpressionStatement
p92507
tp92508
I3
s(g51728
I42
g51729
Vinsert
p92509
I42
VSimpleName: cachedPreparedStatementDeleteCount
p92510
tp92511
I2
s(g25152
I42
g25153
Vinsert
p92512
I21
VExpressionStatement
p92513
tp92514
I1
s(g27350
I42
g27351
Vinsert
p92515
I42
VSimpleName: statement
p92516
tp92517
I66
s(g7777
I42
g7778
Vinsert
p92518
I22
VFieldAccess
p92519
tp92520
I1
s(g6830
I42
g6831
Vinsert
p92521
I45
VStringLiteral: "FROM t\u005cn"
p92522
tp92523
I1
s(g45360
I42
g45361
Vinsert
p92524
I33
VNullLiteral
p92525
tp92526
I1
s(g11403
I42
g11404
Vinsert
p92527
I42
VSimpleName: pattern
p92528
tp92529
I1
s(g9529
I42
g9530
Vinsert
p92530
I42
VSimpleName: provider
p92531
tp92532
I2
s(g8184
I42
g8185
Vinsert
p92533
I42
VSimpleName: info
p92534
tp92535
I3
s(g15485
I42
g15486
Vinsert
p92536
I44
VSingleVariableDeclaration
p92537
tp92538
I1
s(g7712
I42
g7713
Vinsert
p92539
I32
VMethodInvocation
p92540
tp92541
I11
s(g2034
I42
g2035
Vinsert
p92542
I42
VSimpleName: Object
p92543
tp92544
I1
s(g886
I42
g887
Vinsert
p92545
I42
VSimpleName: ConfigTools
p92546
tp92547
I1
s(Vinsert
p92548
I42
VSimpleName: assertEquals
p92549
Vinsert
p92550
I42
VSimpleName: show
p92551
tp92552
I4
s(g11659
I42
g11660
Vinsert
p92553
I42
VSimpleName: stmtList
p92554
tp92555
I1
s(g1110
I42
g1111
Vinsert
p92556
I45
VStringLiteral: "\u005ctAND sites.contract_header_id = :headerid\u005cn"
p92557
tp92558
I1
s(g3574
I42
g3575
Vinsert
p92559
I32
VMethodInvocation
p92560
tp92561
I14
s(g7947
I42
g7948
Vinsert
p92562
I32
VMethodInvocation
p92563
tp92564
I5
s(g12209
I42
g12210
Vinsert
p92565
I33
VNullLiteral
p92566
tp92567
I1
s(g567
I42
g568
Vinsert
p92568
I58
VVariableDeclarationExpression
p92569
tp92570
I3
s(g37973
I42
g37974
Vinsert
p92571
I52
VThisExpression
p92572
tp92573
I13
s(g866
I42
g867
Vinsert
p92574
I21
VExpressionStatement
p92575
tp92576
I2
s(g9433
I42
g9434
Vinsert
p92577
I34
VNumberLiteral: 0
p92578
tp92579
I1
s(g2479
I42
g2480
Vinsert
p92580
I40
VQualifiedName: Token.IF
p92581
tp92582
I1
s(g136
I42
g137
Vinsert
p92583
I34
VNumberLiteral: 0
p92584
tp92585
I2
s(g14279
I42
g14280
Vinsert
p92586
I45
VStringLiteral: "\u005ct\u005ctAND a.row_wait_obj# <> -1\u005cn"
p92587
tp92588
I1
s(g4635
I42
g4636
Vinsert
p92589
I43
VSimpleType: SQLName
p92590
tp92591
I1
s(g3513
I42
g3514
Vinsert
p92592
I27
VInfixExpression: <
p92593
tp92594
I2
s(g2969
I42
g2970
Vinsert
p92595
I42
VSimpleName: TeradataIntervalUnit
p92596
tp92597
I1
s(g9959
I42
g9960
Vinsert
p92598
I78
VMarkerAnnotation
p92599
tp92600
I2
s(g22587
I42
g22588
Vinsert
p92601
I42
VSimpleName: stmt
p92602
tp92603
I3
s(g3780
I42
g3781
Vinsert
p92604
I83
VModifier: private
p92605
tp92606
I1
s(g3213
I42
g3214
Vinsert
p92607
I32
VMethodInvocation
p92608
tp92609
I34
s(g20806
I42
g20807
Vinsert
p92610
I45
VStringLiteral: "BIGINT"
p92611
tp92612
I1
s(g1830
I42
g1831
Vinsert
p92613
I42
VSimpleName: dataSource
p92614
tp92615
I1
s(Vinsert
p92616
I42
VSimpleName: setParent
p92617
Vinsert
p92618
I42
VSimpleName: cluster
p92619
tp92620
I3
s(g1559
I42
g1560
Vinsert
p92621
I33
VNullLiteral
p92622
tp92623
I3
s(g3327
I42
g3328
Vinsert
p92624
I42
VSimpleName: SQLQueryExpr
p92625
tp92626
I1
s(g7736
I42
g7737
Vinsert
p92627
I21
VExpressionStatement
p92628
tp92629
I2
s(g16354
I42
g16355
Vinsert
p92630
I42
VSimpleName: getWeightRegionBegin
p92631
tp92632
I1
s(g32069
I42
g32070
Vinsert
p92633
I42
VSimpleName: dataSource
p92634
tp92635
I3
s(g7184
I42
g7185
Vinsert
p92636
I42
VSimpleName: config
p92637
tp92638
I16
s(g27660
I42
g27661
Vinsert
p92639
I43
VSimpleType: JPanel
p92640
tp92641
I1
s(g4313
I42
g4314
Vinsert
p92642
I25
VIfStatement
p92643
tp92644
I1
s(g11691
I42
g11692
Vinsert
p92645
I42
VSimpleName: stmt
p92646
tp92647
I2
s(g1564
I42
g1565
Vinsert
p92648
I27
VInfixExpression: ==
p92649
tp92650
I3
s(g12901
I42
g12902
Vinsert
p92651
I45
VStringLiteral: "OSAndroid43Count"
p92652
tp92653
I1
s(g7631
I42
g7632
Vinsert
p92654
I42
VSimpleName: String
p92655
tp92656
I1
s(g31549
I42
g31550
Vinsert
p92657
I42
VSimpleName: exprC
p92658
tp92659
I26
s(g20288
I42
g20289
Vinsert
p92660
I57
VTypeLiteral
p92661
tp92662
I5
s(g3063
I42
g3064
Vinsert
p92663
I21
VExpressionStatement
p92664
tp92665
I2
s(g5429
I42
g5430
Vinsert
p92666
I42
VSimpleName: setOn
p92667
tp92668
I1
s(g4801
I42
g4802
Vinsert
p92669
I42
VSimpleName: Connection
p92670
tp92671
I6
s(g6727
I42
g6728
Vinsert
p92672
I16
VConditionalExpression
p92673
tp92674
I1
s(g836
I42
g837
Vinsert
p92675
I45
VStringLiteral: "FULLTEXT"
p92676
tp92677
I1
s(g35007
I42
g35008
Vinsert
p92678
I42
VSimpleName: k3
p92679
tp92680
I1
s(g5757
I42
g5758
Vinsert
p92681
I42
VSimpleName: parseStatement
p92682
tp92683
I1
s(g14026
I42
g14027
Vinsert
p92684
I52
VThisExpression
p92685
tp92686
I5
s(g11297
I42
g11298
Vinsert
p92687
I52
VThisExpression
p92688
tp92689
I1
s(g40357
I42
g40358
Vinsert
p92690
I52
VThisExpression
p92691
tp92692
I2
s(g1612
I42
g1613
Vinsert
p92693
I22
VFieldAccess
p92694
tp92695
I1
s(g51101
I42
g51102
Vinsert
p92696
I45
VStringLiteral: "insert"
p92697
tp92698
I2
s(g14226
I42
g14227
Vinsert
p92699
I42
VSimpleName: getSequence
p92700
tp92701
I1
s(g2977
I42
g2978
Vinsert
p92702
I45
VStringLiteral: "\u005ct\u005ctSELECT unnest(ARRAY[4275]) AS gdid, unnest(ARRAY[1]) AS gdnumber\u005cn"
p92703
tp92704
I1
s(g5079
I42
g5080
Vinsert
p92705
I42
VSimpleName: dataSource
p92706
tp92707
I31
s(g4144
I42
g4145
Vinsert
p92708
I11
VCastExpression
p92709
tp92710
I1
s(g15692
I42
g15693
Vinsert
p92711
I43
VSimpleType: ThreadLocal
p92712
tp92713
I1
s(g19018
I42
g19019
Vinsert
p92714
I83
VModifier: public
p92715
tp92716
I2
s(g9033
I42
g9034
Vinsert
p92717
I40
VQualifiedName: Token.ORDER
p92718
tp92719
I1
s(g16178
I42
g16179
Vinsert
p92720
I45
VStringLiteral: "\u005ctLIMIT 1)"
p92721
tp92722
I1
s(g8409
I42
g8410
Vinsert
p92723
I22
VFieldAccess
p92724
tp92725
I1
s(g14765
I42
g14766
Vinsert
p92726
I32
VMethodInvocation
p92727
tp92728
I1
s(g6592
I42
g6593
Vinsert
p92729
I42
VSimpleName: String
p92730
tp92731
I1
s(g1845
I42
g1846
Vinsert
p92732
I42
VSimpleName: Assert
p92733
tp92734
I49
s(g18031
I42
g18032
Vinsert
p92735
I42
VSimpleName: WallSqlStat
p92736
tp92737
I1
s(g24379
I42
g24380
Vinsert
p92738
I42
VSimpleName: clone
p92739
tp92740
I1
s(g8062
I42
g8063
Vinsert
p92741
I42
VSimpleName: assertNotNull
p92742
tp92743
I1
s(Vinsert
p92744
I42
VSimpleName: assertEquals
p92745
Vinsert
p92746
I45
VStringLiteral: "\u005cn\u005ctTRUNCATE PARTITION ALL"
p92747
tp92748
I1
s(g5515
I42
g5516
Vinsert
p92749
I42
VSimpleName: Runnable
p92750
tp92751
I1
s(g7702
I42
g7703
Vinsert
p92752
I39
VPrimitiveType: boolean
p92753
tp92754
I1
s(g11845
I42
g11846
Vinsert
p92755
I25
VIfStatement
p92756
tp92757
I3
s(g1090
I42
g1091
Vinsert
p92758
I44
VSingleVariableDeclaration
p92759
tp92760
I3
s(g47049
I42
g47050
Vinsert
p92761
I74
VParameterizedType: ArrayList<WallUpdateCheckItem>
p92762
tp92763
I5
s(g14187
I42
g14188
Vinsert
p92764
I8
VBlock
p92765
tp92766
I2
s(g5633
I42
g5634
Vinsert
p92767
I43
VSimpleType: SQLFeatureNotSupportedException
p92768
tp92769
I1
s(g26581
I42
g26582
Vinsert
p92770
I43
VSimpleType: SQLAlterViewStatement
p92771
tp92772
I1
s(g17387
I42
g17388
Vinsert
p92773
I43
VSimpleType: MySqlSchemaStatVisitor
p92774
tp92775
I2
s(g26553
I42
g26554
Vinsert
p92776
I42
VSimpleName: SQLDropIndexStatement
p92777
tp92778
I1
s(g4313
I42
g4314
Vinsert
p92779
I62
VInstanceofExpression
p92780
tp92781
I1
s(g19396
I42
g19397
Vinsert
p92782
I45
VStringLiteral: "\u005cn\u005ct\u005ctAND to_char(begin_time, 'yyyy-MM-dd') >= ?"
p92783
tp92784
I1
s(g4829
I42
g4830
Vinsert
p92785
I42
VSimpleName: assertTrue
p92786
tp92787
I2
s(g8038
I42
g8039
Vinsert
p92788
I42
VSimpleName: SQLException
p92789
tp92790
I2
s(g47573
I42
g47574
Vinsert
p92791
I43
VSimpleType: HashMap
p92792
tp92793
I4
s(g6084
I42
g6085
Vinsert
p92794
I42
VSimpleName: Object
p92795
tp92796
I4
s(g16927
I42
g16928
Vinsert
p92797
I32
VMethodInvocation
p92798
tp92799
I6
s(g10571
I42
g10572
Vinsert
p92800
I42
VSimpleName: src
p92801
tp92802
I2
s(g20933
I42
g20934
Vinsert
p92803
I42
VSimpleName: visit
p92804
tp92805
I1
s(g738
I42
g739
Vinsert
p92806
I42
VSimpleName: set
p92807
tp92808
I1
s(g4735
I42
g4736
Vinsert
p92809
I45
VStringLiteral: "SELECT *"
p92810
tp92811
I1
s(g31366
I42
g31367
Vinsert
p92812
I42
VSimpleName: rightExpr
p92813
tp92814
I1
s(g10513
I42
g10514
Vinsert
p92815
I42
VSimpleName: select
p92816
tp92817
I6
s(g3760
I42
g3761
Vinsert
p92818
I42
VSimpleName: lexer
p92819
tp92820
I1
s(g3213
I42
g3214
Vinsert
p92821
I22
VFieldAccess
p92822
tp92823
I4
s(Vinsert
p92824
I42
VSimpleName: visit
p92825
Vinsert
p92826
I42
VSimpleName: type
p92827
tp92828
I3
s(g26603
I42
g26604
Vinsert
p92829
I34
VNumberLiteral: 5
p92830
tp92831
I1
s(g37470
I42
g37471
Vinsert
p92832
I42
VSimpleName: Set
p92833
tp92834
I1
s(g6607
I42
g6608
Vinsert
p92835
I43
VSimpleType: WallConfig
p92836
tp92837
I3
s(g4152
I42
g4153
Vinsert
p92838
I42
VSimpleName: end
p92839
tp92840
I1
s(g3564
I42
g3565
Vinsert
p92841
I42
VSimpleName: setInitialPoolSize
p92842
tp92843
I1
s(g37285
I42
g37286
Vinsert
p92844
I38
VPrefixExpression: ++
p92845
tp92846
I1
s(g37716
I42
g37717
Vinsert
p92847
I42
VSimpleName: setTimestamp
p92848
tp92849
I1
s(Vinsert
p92850
I42
VSimpleName: assertEquals
p92851
Vinsert
p92852
I42
VSimpleName: EvalMethodReverseTest
p92853
tp92854
I1
s(g54071
I42
g54072
Vinsert
p92855
I43
VSimpleType: SQLSomeExpr
p92856
tp92857
I2
s(g36213
I42
g36214
Vinsert
p92858
I79
VSingleMemberAnnotation
p92859
tp92860
I1
s(g14160
I42
g14161
Vinsert
p92861
I42
VSimpleName: DruidPooledConnection
p92862
tp92863
I1
s(g40651
I42
g40652
Vinsert
p92864
I42
VSimpleName: dataSource
p92865
tp92866
I3
s(g1617
I42
g1618
Vinsert
p92867
I78
VMarkerAnnotation
p92868
tp92869
I1
s(g26143
I42
g26144
Vinsert
p92870
I42
VSimpleName: SQLHexExpr
p92871
tp92872
I2
s(g22423
I42
g22424
Vinsert
p92873
I43
VSimpleType: Properties
p92874
tp92875
I1
s(g7469
I42
g7470
Vinsert
p92876
I42
VSimpleName: mainSplit
p92877
tp92878
I1
s(g29398
I42
g29399
Vinsert
p92879
I42
VSimpleName: names
p92880
tp92881
I1
s(g5831
I42
g5832
Vinsert
p92882
I33
VNullLiteral
p92883
tp92884
I2
s(g6592
I42
g6593
Vinsert
p92885
I42
VSimpleName: Collections
p92886
tp92887
I1
s(g13622
I42
g13623
Vinsert
p92888
I38
VPrefixExpression: ++
p92889
tp92890
I1
s(g21332
I42
g21333
Vinsert
p92891
I42
VSimpleName: item
p92892
tp92893
I2
s(g63509
I42
g63510
Vinsert
p92894
I42
VSimpleName: incrementIndent
p92895
tp92896
I1
s(g16335
I42
g16336
Vinsert
p92897
I42
VSimpleName: i
p92898
tp92899
I1
s(g5872
I42
g5873
Vinsert
p92900
I25
VIfStatement
p92901
tp92902
I5
s(g10558
I42
g10559
Vinsert
p92903
I42
VSimpleName: end
p92904
tp92905
I2
s(g2198
I42
g2199
Vinsert
p92906
I42
VSimpleName: error
p92907
tp92908
I1
s(Vinsert
p92909
I42
VSimpleName: assertTrue
p92910
Vinsert
p92911
I45
VStringLiteral: "select min(id) from wx_interact where activityid=1008 group by true_name,mobile having rand()<1"
p92912
tp92913
I1
s(g15334
I42
g15335
Vinsert
p92914
I42
VSimpleName: DB2ASTVisitorAdapter
p92915
tp92916
I1
s(g23056
I42
g23057
Vinsert
p92917
I42
VSimpleName: MySqlStartTransactionStatement
p92918
tp92919
I2
s(g454
I42
g455
Vinsert
p92920
I83
VModifier: final
p92921
tp92922
I1
s(g16107
I42
g16108
Vinsert
p92923
I25
VIfStatement
p92924
tp92925
I1
s(g4538
I42
g4539
Vinsert
p92926
I32
VMethodInvocation
p92927
tp92928
I95
s(g5762
I42
g5763
Vinsert
p92929
I42
VSimpleName: error
p92930
tp92931
I1
s(g61
I42
g62
Vinsert
p92932
I43
VSimpleType: IPRange
p92933
tp92934
I2
s(g39547
I42
g39548
Vinsert
p92935
I42
VSimpleName: from
p92936
tp92937
I5
s(g58804
I42
g58805
Vinsert
p92938
I43
VSimpleType: ConnectionsPanel
p92939
tp92940
I2
s(g1370
I42
g1371
Vinsert
p92941
I42
VSimpleName: String
p92942
tp92943
I1
s(g8716
I42
g8717
Vinsert
p92944
I42
VSimpleName: data
p92945
tp92946
I1
s(g11270
I42
g11271
Vinsert
p92947
I42
VSimpleName: NutDao
p92948
tp92949
I1
s(g22126
I42
g22127
Vinsert
p92950
I41
VReturnStatement
p92951
tp92952
I1
s(g25721
I42
g25722
Vinsert
p92953
I25
VIfStatement
p92954
tp92955
I2
s(g291
I42
g292
Vinsert
p92956
I43
VSimpleType: WallContext
p92957
tp92958
I1
s(g29435
I42
g29436
Vinsert
p92959
I43
VSimpleType: NClobProxy
p92960
tp92961
I1
s(g26901
I42
g26902
Vinsert
p92962
I42
VSimpleName: write
p92963
tp92964
I1
s(g35248
I42
g35249
Vinsert
p92965
I42
VSimpleName: print
p92966
tp92967
I1
s(g20975
I42
g20976
Vinsert
p92968
I42
VSimpleName: String
p92969
tp92970
I1
s(g17915
I42
g17916
Vinsert
p92971
I42
VSimpleName: expr
p92972
tp92973
I2
s(g13891
I42
g13892
Vinsert
p92974
I32
VMethodInvocation
p92975
tp92976
I2
s(g11469
I42
g11470
Vinsert
p92977
I42
VSimpleName: PGCurrentOfExpr
p92978
tp92979
I1
s(g25675
I42
g25676
Vinsert
p92980
I43
VSimpleType: SQLException
p92981
tp92982
I1
s(g8937
I42
g8938
Vinsert
p92983
I45
VStringLiteral: "DELETE FROM t\u005cn"
p92984
tp92985
I1
s(g10919
I42
g10920
Vinsert
p92986
I42
VSimpleName: request
p92987
tp92988
I2
s(g23045
I42
g23046
Vinsert
p92989
I40
VQualifiedName: MySqlKillStatement.Type.CONNECTION
p92990
tp92991
I1
s(g6046
I42
g6047
Vinsert
p92992
I42
VSimpleName: i
p92993
tp92994
I2
s(g6470
I42
g6471
Vinsert
p92995
I9
VBooleanLiteral: true
p92996
tp92997
I2
s(g13483
I42
g13484
Vinsert
p92998
I42
VSimpleName: SQLListExpr
p92999
tp93000
I2
s(g622
I42
g623
Vinsert
p93001
I25
VIfStatement
p93002
tp93003
I1
s(g914
I42
g915
Vinsert
p93004
I42
VSimpleName: printlnAndAccept
p93005
tp93006
I2
s(g2029
I42
g2030
Vinsert
p93007
I43
VSimpleType: SQLIdentifierExpr
p93008
tp93009
I1
s(g8006
I42
g8007
Vinsert
p93010
I44
VSingleVariableDeclaration
p93011
tp93012
I1
s(g17266
I42
g17267
Vinsert
p93013
I40
VQualifiedName: Boolean.TRUE
p93014
tp93015
I6
s(g14361
I42
g14362
Vinsert
p93016
I9
VBooleanLiteral: true
p93017
tp93018
I3
s(g13881
I42
g13882
Vinsert
p93019
I42
VSimpleName: println
p93020
tp93021
I1
s(g6727
I42
g6728
Vinsert
p93022
I42
VSimpleName: print0
p93023
tp93024
I1
s(g15397
I42
g15398
Vinsert
p93025
I54
VTryStatement
p93026
tp93027
I1
s(Vinsert
p93028
I42
VSimpleName: await
p93029
Vinsert
p93030
I42
VSimpleName: i
p93031
tp93032
I3
s(g55806
I42
g55807
Vinsert
p93033
I42
VSimpleName: setAutoCommit
p93034
tp93035
I2
s(g25868
I42
g25869
Vinsert
p93036
I45
VStringLiteral: ") t3\u005cn"
p93037
tp93038
I1
s(g69173
I42
g69174
Vinsert
p93039
I42
VSimpleName: limit
p93040
tp93041
I2
s(g1289
I42
g1290
Vinsert
p93042
I42
VSimpleName: SQLException
p93043
tp93044
I3
s(g14316
I42
g14317
Vinsert
p93045
I42
VSimpleName: executeAndResultHoldTimeHistogram
p93046
tp93047
I1
s(g19686
I42
g19687
Vinsert
p93048
I40
VQualifiedName: com.alibaba.druid.logging.LogFactory
p93049
tp93050
I3
s(g3422
I42
g3423
Vinsert
p93051
I42
VSimpleName: size
p93052
tp93053
I4
s(g2299
I42
g2300
Vinsert
p93054
I44
VSingleVariableDeclaration
p93055
tp93056
I10
s(g18049
I42
g18050
Vinsert
p93057
I42
VSimpleName: token
p93058
tp93059
I2
s(g4867
I42
g4868
Vinsert
p93060
I42
VSimpleName: next
p93061
tp93062
I1
s(g18667
I42
g18668
Vinsert
p93063
I42
VSimpleName: nextToken
p93064
tp93065
I1
s(g1963
I42
g1964
Vinsert
p93066
I21
VExpressionStatement
p93067
tp93068
I2
s(Vinsert
p93069
I42
VSimpleName: getContextClassLoader
p93070
Vinsert
p93071
I45
VStringLiteral: "bvt/parser/antlr_grammers_v4_plsql/examples/"
p93072
tp93073
I1
s(g9163
I42
g9164
Vinsert
p93074
I33
VNullLiteral
p93075
tp93076
I4
s(Vinsert
p93077
I42
VSimpleName: getConnection
p93078
Vinsert
p93079
I45
VStringLiteral: "ccbuauto"
p93080
tp93081
I1
s(g632
I42
g633
Vinsert
p93082
I8
VBlock
p93083
tp93084
I1
s(Vinsert
p93085
I42
VSimpleName: size
p93086
Vinsert
p93087
I45
VStringLiteral: "delete force partition 'pt001' car_tt\u005cn"
p93088
tp93089
I1
s(g12082
I42
g12083
Vinsert
p93090
I40
VQualifiedName: Token.CREATE
p93091
tp93092
I1
s(Vinsert
p93093
I42
VSimpleName: setParent
p93094
Vinsert
p93095
I42
VSimpleName: setUser
p93096
tp93097
I3
s(g10459
I42
g10460
Vinsert
p93098
I43
VSimpleType: OracleSelectQueryBlock
p93099
tp93100
I2
s(g1390
I42
g1391
Vinsert
p93101
I42
VSimpleName: init
p93102
tp93103
I2
s(Vinsert
p93104
I42
VSimpleName: add
p93105
Vinsert
p93106
I42
VSimpleName: filterItem
p93107
tp93108
I1
s(g19018
I42
g19019
Vinsert
p93109
I53
VThrowStatement
p93110
tp93111
I28
s(g866
I42
g867
Vinsert
p93112
I42
VSimpleName: getLong
p93113
tp93114
I1
s(g7068
I42
g7069
Vinsert
p93115
I11
VCastExpression
p93116
tp93117
I2
s(g1765
I42
g1766
Vinsert
p93118
I32
VMethodInvocation
p93119
tp93120
I22
s(g3012
I42
g3013
Vinsert
p93121
I40
VQualifiedName: Token.BEGIN
p93122
tp93123
I1
s(g12721
I42
g12722
Vinsert
p93124
I42
VSimpleName: nextToken
p93125
tp93126
I9
s(g6388
I42
g6389
Vinsert
p93127
I34
VNumberLiteral: 1000
p93128
tp93129
I2
s(g21900
I42
g21901
Vinsert
p93130
I42
VSimpleName: partitions
p93131
tp93132
I2
s(g20215
I42
g20216
Vinsert
p93133
I21
VExpressionStatement
p93134
tp93135
I2
s(g21947
I42
g21948
Vinsert
p93136
I43
VSimpleType: SQLExprTableSource
p93137
tp93138
I10
s(g15018
I42
g15019
Vinsert
p93139
I42
VSimpleName: isSubPartition
p93140
tp93141
I1
s(g25207
I42
g25208
Vinsert
p93142
I42
VSimpleName: parseStatements
p93143
tp93144
I3
s(g43380
I42
g43381
Vinsert
p93145
I27
VInfixExpression: ==
p93146
tp93147
I10
s(g4263
I42
g4264
Vinsert
p93148
I43
VSimpleType: Exception
p93149
tp93150
I1
s(g15119
I42
g15120
Vinsert
p93151
I32
VMethodInvocation
p93152
tp93153
I7
s(g13084
I42
g13085
Vinsert
p93154
I27
VInfixExpression: +
p93155
tp93156
I19
s(g700
I42
g701
Vinsert
p93157
I42
VSimpleName: cacheServerConfigurationSet
p93158
tp93159
I1
s(g8233
I42
g8234
Vinsert
p93160
I40
VQualifiedName: Token.UNIQUE
p93161
tp93162
I1
s(g7947
I42
g7948
Vinsert
p93163
I42
VSimpleName: ExportParameterVisitorUtils
p93164
tp93165
I5
s(g557
I42
g558
Vinsert
p93166
I45
VStringLiteral: "\u005cnWHERE RN > 10"
p93167
tp93168
I1
s(g32617
I42
g32618
Vinsert
p93169
I42
VSimpleName: Connection
p93170
tp93171
I2
s(g22281
I42
g22282
Vinsert
p93172
I42
VSimpleName: driverClass
p93173
tp93174
I2
s(g7807
I42
g7808
Vinsert
p93175
I8
VBlock
p93176
tp93177
I16
s(g7840
I42
g7841
Vinsert
p93178
I42
VSimpleName: x
p93179
tp93180
I2
s(g13808
I42
g13809
Vinsert
p93181
I8
VBlock
p93182
tp93183
I3
s(g391
I42
g392
Vinsert
p93184
I42
VSimpleName: x
p93185
tp93186
I2
s(g6207
I42
g6208
Vinsert
p93187
I32
VMethodInvocation
p93188
tp93189
I4
s(g40357
I42
g40358
Vinsert
p93190
I42
VSimpleName: error
p93191
tp93192
I1
s(g23392
I42
g23393
Vinsert
p93193
I42
VSimpleName: ObjectName
p93194
tp93195
I1
s(g23899
I42
g23900
Vinsert
p93196
I27
VInfixExpression: !=
p93197
tp93198
I1
s(g1448
I42
g1449
Vinsert
p93199
I59
VVariableDeclarationFragment
p93200
tp93201
I3
s(g7547
I42
g7548
Vinsert
p93202
I45
VStringLiteral: "\u005ctc_bigint bigint(20),\u005cn"
p93203
tp93204
I2
s(g26613
I42
g26614
Vinsert
p93205
I42
VSimpleName: getInstance
p93206
tp93207
I1
s(g16696
I42
g16697
Vinsert
p93208
I42
VSimpleName: MySqlStatementParser
p93209
tp93210
I32
s(g24959
I42
g24960
Vinsert
p93211
I42
VSimpleName: isPoolPreparedStatements
p93212
tp93213
I3
s(g3159
I42
g3160
Vinsert
p93214
I39
VPrimitiveType: int
p93215
tp93216
I1
s(g4313
I42
g4314
Vinsert
p93217
I21
VExpressionStatement
p93218
tp93219
I1
s(g5252
I42
g5253
Vinsert
p93220
I27
VInfixExpression: +
p93221
tp93222
I1
s(g26531
I42
g26532
Vinsert
p93223
I60
VVariableDeclarationStatement
p93224
tp93225
I9
s(g4510
I42
g4511
Vinsert
p93226
I42
VSimpleName: exprC
p93227
tp93228
I1
s(g9704
I42
g9705
Vinsert
p93229
I42
VSimpleName: getSize
p93230
tp93231
I1
s(g9089
I42
g9090
Vinsert
p93232
I8
VBlock
p93233
tp93234
I8
s(g6956
I42
g6957
Vinsert
p93235
I8
VBlock
p93236
tp93237
I3
s(g53215
I42
g53216
Vinsert
p93238
I42
VSimpleName: setLimit
p93239
tp93240
I1
s(g39159
I42
g39160
Vinsert
p93241
I42
VSimpleName: add
p93242
tp93243
I1
s(g13957
I42
g13958
Vinsert
p93244
I32
VMethodInvocation
p93245
tp93246
I8
s(g32766
I42
g32767
Vinsert
p93247
I9
VBooleanLiteral: true
p93248
tp93249
I1
s(g30184
I42
g30185
Vinsert
p93250
I42
VSimpleName: limit
p93251
tp93252
I10
s(g4775
I42
g4776
Vinsert
p93253
I42
VSimpleName: Assert
p93254
tp93255
I1
s(g10747
I42
g10748
Vinsert
p93256
I34
VNumberLiteral: 10
p93257
tp93258
I1
s(g4594
I42
g4595
Vinsert
p93259
I22
VFieldAccess
p93260
tp93261
I1
s(g24526
I42
g24527
Vinsert
p93262
I42
VSimpleName: setWallContext
p93263
tp93264
I1
s(g25524
I42
g25525
Vinsert
p93265
I42
VSimpleName: size
p93266
tp93267
I1
s(g13659
I42
g13660
Vinsert
p93268
I42
VSimpleName: result
p93269
tp93270
I18
s(g826
I42
g827
Vinsert
p93271
I45
VStringLiteral: "IF"
p93272
tp93273
I1
s(g10485
I42
g10486
Vinsert
p93274
I25
VIfStatement
p93275
tp93276
I2
s(g34396
I42
g34397
Vinsert
p93277
I42
VSimpleName: parseSelectOrderByItem
p93278
tp93279
I1
s(g16927
I42
g16928
Vinsert
p93280
I42
VSimpleName: nextValue
p93281
tp93282
I2
s(g14266
I42
g14267
Vinsert
p93283
I21
VExpressionStatement
p93284
tp93285
I2
s(g7293
I42
g7294
Vinsert
p93286
I42
VSimpleName: Exception
p93287
tp93288
I1
s(g48406
I42
g48407
Vinsert
p93289
I45
VStringLiteral: "select 1, 2, 3 from t where id  = ? union select * from t"
p93290
tp93291
I1
s(g9488
I42
g9489
Vinsert
p93292
I43
VSimpleType: DruidPooledConnection
p93293
tp93294
I4
s(g13084
I42
g13085
Vinsert
p93295
I42
VSimpleName: stmt
p93296
tp93297
I4
s(g22807
I42
g22808
Vinsert
p93298
I42
VSimpleName: DruidDataSourceBuilder
p93299
tp93300
I1
s(g3467
I42
g3468
Vinsert
p93301
I8
VBlock
p93302
tp93303
I1
s(g9017
I42
g9018
Vinsert
p93304
I43
VSimpleType: SQLValuableExpr
p93305
tp93306
I2
s(g1481
I42
g1482
Vinsert
p93307
I42
VSimpleName: Assert
p93308
tp93309
I1
s(g36801
I42
g36802
Vinsert
p93310
I42
VSimpleName: setOf
p93311
tp93312
I1
s(g6871
I42
g6872
Vinsert
p93313
I42
VSimpleName: print0
p93314
tp93315
I1
s(g6909
I42
g6910
Vinsert
p93316
I42
VSimpleName: DruidPooledPreparedStatement
p93317
tp93318
I1
s(g20035
I42
g20036
Vinsert
p93319
I14
VClassInstanceCreation
p93320
tp93321
I1
s(g27680
I42
g27681
Vinsert
p93322
I41
VReturnStatement
p93323
tp93324
I6
s(g3103
I42
g3104
Vinsert
p93325
I32
VMethodInvocation
p93326
tp93327
I26
s(g9217
I42
g9218
Vinsert
p93328
I42
VSimpleName: exprParser
p93329
tp93330
I1
s(g10846
I42
g10847
Vinsert
p93331
I43
VSimpleType: Reader
p93332
tp93333
I1
s(g2120
I42
g2121
Vinsert
p93334
I27
VInfixExpression: &&
p93335
tp93336
I1
s(g2717
I42
g2718
Vinsert
p93337
I42
VSimpleName: size
p93338
tp93339
I1
s(g66554
I42
g66555
Vinsert
p93340
I42
VSimpleName: addColumn
p93341
tp93342
I11
s(g10571
I42
g10572
Vinsert
p93343
I42
VSimpleName: indexFrom
p93344
tp93345
I1
s(g2339
I42
g2340
Vinsert
p93346
I32
VMethodInvocation
p93347
tp93348
I4
s(g2223
I42
g2224
Vinsert
p93349
I27
VInfixExpression: >
p93350
tp93351
I4
s(g9428
I42
g9429
Vinsert
p93352
I25
VIfStatement
p93353
tp93354
I9
s(g6557
I42
g6558
Vinsert
p93355
I59
VVariableDeclarationFragment
p93356
tp93357
I1
s(g7903
I42
g7904
Vinsert
p93358
I44
VSingleVariableDeclaration
p93359
tp93360
I1
s(g14540
I42
g14541
Vinsert
p93361
I42
VSimpleName: value
p93362
tp93363
I1
s(g13933
I42
g13934
Vinsert
p93364
I59
VVariableDeclarationFragment
p93365
tp93366
I1
s(g26179
I42
g26180
Vinsert
p93367
I42
VSimpleName: table
p93368
tp93369
I4
s(g146
I42
g147
Vinsert
p93370
I21
VExpressionStatement
p93371
tp93372
I1
s(g9524
I42
g9525
Vinsert
p93373
I45
VStringLiteral: "\u005ct\u005ctor CLK.clk > 0\u005cn"
p93374
tp93375
I1
s(g27482
I42
g27483
Vinsert
p93376
I42
VSimpleName: print
p93377
tp93378
I2
s(g32847
I42
g32848
Vinsert
p93379
I42
VSimpleName: append
p93380
tp93381
I20
s(g11124
I42
g11125
Vinsert
p93382
I32
VMethodInvocation
p93383
tp93384
I1
s(g2329
I42
g2330
Vinsert
p93385
I42
VSimpleName: Boolean
p93386
tp93387
I1
s(g41516
I42
g41517
Vinsert
p93388
I42
VSimpleName: value
p93389
tp93390
I1
s(g6650
I42
g6651
Vinsert
p93391
I25
VIfStatement
p93392
tp93393
I2
s(g1135
I42
g1136
Vinsert
p93394
I21
VExpressionStatement
p93395
tp93396
I2
s(g3579
I42
g3580
Vinsert
p93397
I42
VSimpleName: print
p93398
tp93399
I1
s(g2795
I42
g2796
Vinsert
p93400
I43
VSimpleType: BufferedReader
p93401
tp93402
I1
s(g1968
I42
g1969
Vinsert
p93403
I8
VBlock
p93404
tp93405
I2
s(g7970
I42
g7971
Vinsert
p93406
I8
VBlock
p93407
tp93408
I1
s(Vinsert
p93409
I42
VSimpleName: getUser
p93410
Vinsert
p93411
I45
VStringLiteral: "USER "
p93412
tp93413
I1
s(g10275
I42
g10276
Vinsert
p93414
I42
VSimpleName: PGWithQuery
p93415
tp93416
I1
s(g856
I42
g857
Vinsert
p93417
I22
VFieldAccess
p93418
tp93419
I1
s(g196
I42
g197
Vinsert
p93420
I45
VStringLiteral: "\u005ctWHERE MKTG_PLAN_LVL3_ID <> MKTG_PLAN_LVL4_ID\u005cn"
p93421
tp93422
I1
s(g21061
I42
g21062
Vinsert
p93423
I42
VSimpleName: frame
p93424
tp93425
I1
s(g5734
I42
g5735
Vinsert
p93426
I42
VSimpleName: prepareStatement
p93427
tp93428
I2
s(g22025
I42
g22026
Vinsert
p93429
I42
VSimpleName: lastErrorTimeMillis
p93430
tp93431
I1
s(g73850
I42
g73851
Vinsert
p93432
I42
VSimpleName: mark
p93433
tp93434
I1
s(g2662
I42
g2663
Vinsert
p93435
I42
VSimpleName: lexer
p93436
tp93437
I1
s(g11330
I42
g11331
Vinsert
p93438
I41
VReturnStatement
p93439
tp93440
I2
s(g10454
I42
g10455
Vinsert
p93441
I42
VSimpleName: violations
p93442
tp93443
I1
s(g7807
I42
g7808
Vinsert
p93444
I31
VMethodDeclaration
p93445
tp93446
I14
s(g3554
I42
g3555
Vinsert
p93447
I42
VSimpleName: out
p93448
tp93449
I1
s(g20010
I42
g20011
Vinsert
p93450
I42
VSimpleName: setSavepointName
p93451
tp93452
I1
s(g10864
I42
g10865
Vinsert
p93453
I41
VReturnStatement
p93454
tp93455
I1
s(g9017
I42
g9018
Vinsert
p93456
I42
VSimpleName: sqlObject
p93457
tp93458
I2
s(g7678
I42
g7679
Vinsert
p93459
I32
VMethodInvocation
p93460
tp93461
I1
s(Vinsert
p93462
I42
VSimpleName: endVisit
p93463
Vinsert
p93464
I42
VSimpleName: condition
p93465
tp93466
I2
s(g21572
I42
g21573
Vinsert
p93467
I42
VSimpleName: returnDataType
p93468
tp93469
I2
s(g6742
I42
g6743
Vinsert
p93470
I21
VExpressionStatement
p93471
tp93472
I11
s(g982
I42
g983
Vinsert
p93473
I13
VCharacterLiteral: 'T'
p93474
tp93475
I1
s(g80258
I42
g80259
Vinsert
p93476
I42
VSimpleName: SQLInListExpr
p93477
tp93478
I1
s(g9108
I42
g9109
Vinsert
p93479
I42
VSimpleName: OracleUnique
p93480
tp93481
I2
s(g8504
I42
g8505
Vinsert
p93482
I42
VSimpleName: SQLSelectListCache
p93483
tp93484
I1
s(g12726
I42
g12727
Vinsert
p93485
I42
VSimpleName: getMetaData
p93486
tp93487
I1
s(g23899
I42
g23900
Vinsert
p93488
I33
VNullLiteral
p93489
tp93490
I1
s(g1750
I42
g1751
Vinsert
p93491
I39
VPrimitiveType: void
p93492
tp93493
I2
s(g66052
I42
g66053
Vinsert
p93494
I42
VSimpleName: execute
p93495
tp93496
I1
s(g24159
I42
g24160
Vinsert
p93497
I14
VClassInstanceCreation
p93498
tp93499
I2
s(g4419
I42
g4420
Vinsert
p93500
I43
VSimpleType: MySqlExceptionSorter
p93501
tp93502
I4
s(g1352
I42
g1353
Vinsert
p93503
I8
VBlock
p93504
tp93505
I1
s(g19984
I42
g19985
Vinsert
p93506
I42
VSimpleName: scale
p93507
tp93508
I2
s(g24542
I42
g24543
Vinsert
p93509
I21
VExpressionStatement
p93510
tp93511
I52
s(g7817
I42
g7818
Vinsert
p93512
I42
VSimpleName: ResultSetProxy
p93513
tp93514
I2
s(g11072
I42
g11073
Vinsert
p93515
I42
VSimpleName: provider
p93516
tp93517
I9
s(g14244
I42
g14245
Vinsert
p93518
I45
VStringLiteral: "runningCount "
p93519
tp93520
I1
s(g9195
I42
g9196
Vinsert
p93521
I42
VSimpleName: String
p93522
tp93523
I10
s(g12781
I42
g12782
Vinsert
p93524
I42
VSimpleName: getYoungGCTime
p93525
tp93526
I1
s(g2469
I42
g2470
Vinsert
p93527
I42
VSimpleName: OdpsSetLabelStatement
p93528
tp93529
I1
s(g6927
I42
g6928
Vinsert
p93530
I7
VAssignment: =
p93531
tp93532
I4
s(Vinsert
p93533
I42
VSimpleName: assertEquals
p93534
Vinsert
p93535
I42
VSimpleName: test_byte_1
p93536
tp93537
I3
s(g4679
I42
g4680
Vinsert
p93538
I42
VSimpleName: Assert
p93539
tp93540
I1
s(g786
I42
g787
Vinsert
p93541
I43
VSimpleType: String
p93542
tp93543
I2
s(g8969
I42
g8970
Vinsert
p93544
I43
VSimpleType: Long
p93545
tp93546
I1
s(g1471
I42
g1472
Vinsert
p93547
I8
VBlock
p93548
tp93549
I12
s(g11795
I42
g11796
Vinsert
p93550
I32
VMethodInvocation
p93551
tp93552
I3
s(g15753
I42
g15754
Vinsert
p93553
I42
VSimpleName: v
p93554
tp93555
I1
s(g1825
I42
g1826
Vinsert
p93556
I59
VVariableDeclarationFragment
p93557
tp93558
I93
s(g4303
I42
g4304
Vinsert
p93559
I45
VStringLiteral: "\u005ct\u005ctELSE\u005cn"
p93560
tp93561
I3
s(g346
I42
g347
Vinsert
p93562
I42
VSimpleName: put
p93563
tp93564
I2
s(g6699
I42
g6700
Vinsert
p93565
I42
VSimpleName: WallConfig
p93566
tp93567
I4
s(g8593
I42
g8594
Vinsert
p93568
I42
VSimpleName: file
p93569
tp93570
I1
s(g20559
I42
g20560
Vinsert
p93571
I27
VInfixExpression: >
p93572
tp93573
I1
s(Vinsert
p93574
I42
VSimpleName: getProperty
p93575
Vinsert
p93576
I45
VStringLiteral: "illegal property 'druid.minEvictableIdleTimeMillis'"
p93577
tp93578
I1
s(g26592
I42
g26593
Vinsert
p93579
I42
VSimpleName: Assert
p93580
tp93581
I1
s(g19924
I42
g19925
Vinsert
p93582
I42
VSimpleName: Exception
p93583
tp93584
I1
s(g15621
I42
g15622
Vinsert
p93585
I40
VQualifiedName: VisitorFeature.OutputPrettyFormat
p93586
tp93587
I1
s(g6328
I42
g6329
Vinsert
p93588
I41
VReturnStatement
p93589
tp93590
I1
s(g17564
I42
g17565
Vinsert
p93591
I42
VSimpleName: buf
p93592
tp93593
I4
s(g3457
I42
g3458
Vinsert
p93594
I27
VInfixExpression: !=
p93595
tp93596
I5
s(g12235
I42
g12236
Vinsert
p93597
I42
VSimpleName: IOException
p93598
tp93599
I1
s(g18031
I42
g18032
Vinsert
p93600
I42
VSimpleName: sql
p93601
tp93602
I1
s(g7131
I42
g7132
Vinsert
p93603
I85
VDimension
p93604
tp93605
I1
s(g25157
I42
g25158
Vinsert
p93606
I42
VSimpleName: String
p93607
tp93608
I4
s(g44779
I42
g44780
Vinsert
p93609
I45
VStringLiteral: " NOT BETWEEN "
p93610
tp93611
I1
s(g3500
I42
g3501
Vinsert
p93612
I21
VExpressionStatement
p93613
tp93614
I1
s(g3179
I42
g3180
Vinsert
p93615
I22
VFieldAccess
p93616
tp93617
I10
s(g9113
I42
g9114
Vinsert
p93618
I43
VSimpleType: DataSourceHolder
p93619
tp93620
I1
s(g12173
I42
g12174
Vinsert
p93621
I40
VQualifiedName: ErrorCode.UPDATE_NOT_ALLOW
p93622
tp93623
I1
s(g11711
I42
g11712
Vinsert
p93624
I27
VInfixExpression: &&
p93625
tp93626
I1
s(g11745
I42
g11746
Vinsert
p93627
I21
VExpressionStatement
p93628
tp93629
I2
s(g7131
I42
g7132
Vinsert
p93630
I42
VSimpleName: bytes
p93631
tp93632
I1
s(g5623
I42
g5624
Vinsert
p93633
I27
VInfixExpression: !=
p93634
tp93635
I1
s(g9222
I42
g9223
Vinsert
p93636
I7
VAssignment: =
p93637
tp93638
I1
s(g9704
I42
g9705
Vinsert
p93639
I43
VSimpleType: Dimension
p93640
tp93641
I1
s(g63139
I42
g63140
Vinsert
p93642
I21
VExpressionStatement
p93643
tp93644
I1
s(g24278
I42
g24279
Vinsert
p93645
I33
VNullLiteral
p93646
tp93647
I5
s(g9914
I42
g9915
Vinsert
p93648
I27
VInfixExpression: <
p93649
tp93650
I1
s(g11365
I42
g11366
Vinsert
p93651
I16
VConditionalExpression
p93652
tp93653
I1
s(g11880
I42
g11881
Vinsert
p93654
I45
VStringLiteral: "\u005cn\u005ctPARTITION rest VALUES (DEFAULT)"
p93655
tp93656
I2
s(g19179
I42
g19180
Vinsert
p93657
I40
VQualifiedName: AGGREGATE_FUNCTIONS_CODES.length
p93658
tp93659
I2
s(g2977
I42
g2978
Vinsert
p93660
I45
VStringLiteral: "SET gd_number = gd_number - gdnumber\u005cn"
p93661
tp93662
I1
s(g4293
I42
g4294
Vinsert
p93663
I42
VSimpleName: resultSet
p93664
tp93665
I1
s(g20540
I42
g20541
Vinsert
p93666
I42
VSimpleName: MockConnection
p93667
tp93668
I1
s(g695
I42
g696
Vinsert
p93669
I21
VExpressionStatement
p93670
tp93671
I3
s(g41049
I42
g41050
Vinsert
p93672
I42
VSimpleName: String
p93673
tp93674
I2
s(g9929
I42
g9930
Vinsert
p93675
I45
VStringLiteral: "syntax error, expect "
p93676
tp93677
I2
s(g2079
I42
g2080
Vinsert
p93678
I42
VSimpleName: dataSource
p93679
tp93680
I10
s(g9670
I42
g9671
Vinsert
p93681
I42
VSimpleName: statemen
p93682
tp93683
I43
s(g12864
I42
g12865
Vinsert
p93684
I34
VNumberLiteral: 0
p93685
tp93686
I1
s(g5292
I42
g5293
Vinsert
p93687
I45
VStringLiteral: "MERGE INTO CUSTOMER KEY (ID)\u005cn"
p93688
tp93689
I1
s(g7052
I42
g7053
Vinsert
p93690
I43
VSimpleType: SQLException
p93691
tp93692
I1
s(g11046
I42
g11047
Vinsert
p93693
I43
VSimpleType: UnsupportedOperationException
p93694
tp93695
I1
s(g35237
I42
g35238
Vinsert
p93696
I42
VSimpleName: Filter
p93697
tp93698
I3
s(g19831
I42
g19832
Vinsert
p93699
I74
VParameterizedType: List<Object>
p93700
tp93701
I1
s(g15082
I42
g15083
Vinsert
p93702
I42
VSimpleName: setEndTimeMillis
p93703
tp93704
I2
s(Vinsert
p93705
I42
VSimpleName: append
p93706
Vinsert
p93707
I42
VSimpleName: items
p93708
tp93709
I1
s(g26393
I42
g26394
Vinsert
p93710
I34
VNumberLiteral: 2
p93711
tp93712
I4
s(g29475
I42
g29476
Vinsert
p93713
I45
VStringLiteral: "f3 F3"
p93714
tp93715
I1
s(g3447
I42
g3448
Vinsert
p93716
I45
VStringLiteral: "The value is "
p93717
tp93718
I2
s(g1883
I42
g1884
Vinsert
p93719
I39
VPrimitiveType: boolean
p93720
tp93721
I1
s(g8617
I42
g8618
Vinsert
p93722
I42
VSimpleName: getLeft
p93723
tp93724
I1
s(g32771
I42
g32772
Vinsert
p93725
I43
VSimpleType: MySqlSchemaStatVisitor
p93726
tp93727
I20
s(g55376
I42
g55377
Vinsert
p93728
I43
VSimpleType: SQLOrderBy
p93729
tp93730
I5
s(g10438
I42
g10439
Vinsert
p93731
I42
VSimpleName: SQLUtils
p93732
tp93733
I4
s(g5615
I42
g5616
Vinsert
p93734
I42
VSimpleName: dataSource
p93735
tp93736
I2
s(g48698
I42
g48699
Vinsert
p93737
I42
VSimpleName: b
p93738
tp93739
I1
s(g4404
I42
g4405
Vinsert
p93740
I60
VVariableDeclarationStatement
p93741
tp93742
I1
s(g8841
I42
g8842
Vinsert
p93743
I40
VQualifiedName: Token.LPAREN
p93744
tp93745
I1
s(g18930
I42
g18931
Vinsert
p93746
I21
VExpressionStatement
p93747
tp93748
I1
s(g5964
I42
g5965
Vinsert
p93749
I42
VSimpleName: ObjectName
p93750
tp93751
I2
s(g381
I42
g382
Vinsert
p93752
I42
VSimpleName: x
p93753
tp93754
I2
s(g32188
I42
g32189
Vinsert
p93755
I42
VSimpleName: keyColumn
p93756
tp93757
I6
s(g3134
I42
g3135
Vinsert
p93758
I40
VQualifiedName: SQLUnaryOperator.Plus
p93759
tp93760
I1
s(g13911
I42
g13912
Vinsert
p93761
I8
VBlock
p93762
tp93763
I1
s(g2494
I42
g2495
Vinsert
p93764
I42
VSimpleName: createStmtList
p93765
tp93766
I1
s(g40136
I42
g40137
Vinsert
p93767
I43
VSimpleType: SQLExpr
p93768
tp93769
I1
s(Vinsert
p93770
I42
VSimpleName: toSQLString
p93771
Vinsert
p93772
I45
VStringLiteral: "CREATE SEQUENCE \u005c"GJS_ZIXUN\u005c".\u005c"FINANCE_EXPLAIN_ID_GENERATOR\u005c" CACHE 2"
p93773
tp93774
I1
s(g12427
I42
g12428
Vinsert
p93775
I21
VExpressionStatement
p93776
tp93777
I1
s(g464
I42
g465
Vinsert
p93778
I32
VMethodInvocation
p93779
tp93780
I3
s(g13968
I42
g13969
Vinsert
p93781
I42
VSimpleName: aliasMap
p93782
tp93783
I9
s(g18355
I42
g18356
Vinsert
p93784
I42
VSimpleName: setCursorName
p93785
tp93786
I1
s(g8355
I42
g8356
Vinsert
p93787
I43
VSimpleType: MTable
p93788
tp93789
I1
s(g3694
I42
g3695
Vinsert
p93790
I45
VStringLiteral: "\u005cn\u005ctPARTITION p2 VALUES LESS THAN (10000)"
p93791
tp93792
I1
s(g24278
I42
g24279
Vinsert
p93793
I42
VSimpleName: param
p93794
tp93795
I3
s(g18680
I42
g18681
Vinsert
p93796
I39
VPrimitiveType: byte
p93797
tp93798
I2
s(g40159
I42
g40160
Vinsert
p93799
I42
VSimpleName: dbType
p93800
tp93801
I1
s(g11732
I42
g11733
Vinsert
p93802
I25
VIfStatement
p93803
tp93804
I1
s(g28185
I42
g28186
Vinsert
p93805
I42
VSimpleName: getLog
p93806
tp93807
I4
s(g10829
I42
g10830
Vinsert
p93808
I42
VSimpleName: List
p93809
tp93810
I1
s(g7073
I42
g7074
Vinsert
p93811
I42
VSimpleName: dataSource
p93812
tp93813
I3
s(g27423
I42
g27424
Vinsert
p93814
I42
VSimpleName: parent
p93815
tp93816
I1
s(g34662
I42
g34663
Vinsert
p93817
I45
VStringLiteral: "FROM xxx"
p93818
tp93819
I1
s(g4630
I42
g4631
Vinsert
p93820
I42
VSimpleName: WallConfig
p93821
tp93822
I1
s(g1853
I42
g1854
Vinsert
p93823
I11
VCastExpression
p93824
tp93825
I1
s(g56751
I42
g56752
Vinsert
p93826
I42
VSimpleName: OracleDbLinkExpr
p93827
tp93828
I1
s(g4183
I42
g4184
Vinsert
p93829
I45
VStringLiteral: "\u005ct\u005ct\u005ctEXIT outer_loop WHEN i * j > 15;\u005cn"
p93830
tp93831
I1
s(g17564
I42
g17565
Vinsert
p93832
I22
VFieldAccess
p93833
tp93834
I4
s(g2163
I42
g2164
Vinsert
p93835
I43
VSimpleType: MySqlUpdateStatement
p93836
tp93837
I1
s(g39318
I42
g39319
Vinsert
p93838
I42
VSimpleName: privilege
p93839
tp93840
I2
s(g6732
I42
g6733
Vinsert
p93841
I42
VSimpleName: physicalTableName
p93842
tp93843
I1
s(g12938
I42
g12939
Vinsert
p93844
I32
VMethodInvocation
p93845
tp93846
I3
s(g32572
I42
g32573
Vinsert
p93847
I42
VSimpleName: size
p93848
tp93849
I1
s(g12796
I42
g12797
Vinsert
p93850
I60
VVariableDeclarationStatement
p93851
tp93852
I1
s(g52659
I42
g52660
Vinsert
p93853
I42
VSimpleName: OracleConnection
p93854
tp93855
I1
s(g26722
I42
g26723
Vinsert
p93856
I42
VSimpleName: Assert
p93857
tp93858
I1
s(g15188
I42
g15189
Vinsert
p93859
I11
VCastExpression
p93860
tp93861
I1
s(g30491
I42
g30492
Vinsert
p93862
I42
VSimpleName: MYSQL
p93863
tp93864
I1
s(g6516
I42
g6517
Vinsert
p93865
I43
VSimpleType: JdbcSqlStat
p93866
tp93867
I1
s(g11850
I42
g11851
Vinsert
p93868
I42
VSimpleName: pattIdxEnd
p93869
tp93870
I1
s(g1795
I42
g1796
Vinsert
p93871
I42
VSimpleName: JdbcParameterDecimal
p93872
tp93873
I1
s(g28072
I42
g28073
Vinsert
p93874
I43
VSimpleType: SQLParameter
p93875
tp93876
I1
s(g23761
I42
g23762
Vinsert
p93877
I42
VSimpleName: WallConfig
p93878
tp93879
I3
s(g27290
I42
g27291
Vinsert
p93880
I42
VSimpleName: endLabel
p93881
tp93882
I3
s(g1080
I42
g1081
Vinsert
p93883
I45
VStringLiteral: "WHERE lng > 0\u005cn"
p93884
tp93885
I2
s(g3574
I42
g3575
Vinsert
p93886
I42
VSimpleName: params
p93887
tp93888
I1
s(g5574
I42
g5575
Vinsert
p93889
I32
VMethodInvocation
p93890
tp93891
I4
s(Vinsert
p93892
I42
VSimpleName: assertEquals
p93893
Vinsert
p93894
I45
VStringLiteral: "\u005cn\u005ctREMOVE PARTITIONING"
p93895
tp93896
I1
s(g51898
I42
g51899
Vinsert
p93897
I45
VStringLiteral: "\u005ctOR job_id = 'ST_CLERK'\u005cn"
p93898
tp93899
I1
s(g439
I42
g440
Vinsert
p93900
I32
VMethodInvocation
p93901
tp93902
I3
s(g351
I42
g352
Vinsert
p93903
I45
VStringLiteral: ", poolingCount "
p93904
tp93905
I1
s(g4121
I42
g4122
Vinsert
p93906
I45
VStringLiteral: "\u005ctUPDATE employees\u005cn"
p93907
tp93908
I1
s(g5864
I42
g5865
Vinsert
p93909
I42
VSimpleName: createExprParser
p93910
tp93911
I1
s(g29440
I42
g29441
Vinsert
p93912
I40
VQualifiedName: SQLCommentStatement.Type
p93913
tp93914
I1
s(g23603
I42
g23604
Vinsert
p93915
I83
VModifier: public
p93916
tp93917
I3
s(g45505
I42
g45506
Vinsert
p93918
I43
VSimpleType: SQLQueryExpr
p93919
tp93920
I2
s(g36594
I42
g36595
Vinsert
p93921
I43
VSimpleType: SQLExprTableSource
p93922
tp93923
I2
s(g932
I42
g933
Vinsert
p93924
I14
VClassInstanceCreation
p93925
tp93926
I1
s(g6202
I42
g6203
Vinsert
p93927
I34
VNumberLiteral: 0
p93928
tp93929
I1
s(g36337
I42
g36338
Vinsert
p93930
I42
VSimpleName: parameterStr
p93931
tp93932
I2
s(g81715
I42
g81716
Vinsert
p93933
I42
VSimpleName: stats
p93934
tp93935
I1
s(g7942
I42
g7943
Vinsert
p93936
I42
VSimpleName: update
p93937
tp93938
I1
s(g1052
I42
g1053
Vinsert
p93939
I45
VStringLiteral: "x2"
p93940
tp93941
I1
s(g1594
I42
g1595
Vinsert
p93942
I16
VConditionalExpression
p93943
tp93944
I1
s(g2857
I42
g2858
Vinsert
p93945
I42
VSimpleName: setTestWhileIdle
p93946
tp93947
I1
s(g3636
I42
g3637
Vinsert
p93948
I32
VMethodInvocation
p93949
tp93950
I207
s(g15407
I42
g15408
Vinsert
p93951
I42
VSimpleName: SQLAlterTableDropKey
p93952
tp93953
I1
s(g58812
I42
g58813
Vinsert
p93954
I42
VSimpleName: setWhen
p93955
tp93956
I1
s(g25675
I42
g25676
Vinsert
p93957
I32
VMethodInvocation
p93958
tp93959
I2
s(g60101
I42
g60102
Vinsert
p93960
I21
VExpressionStatement
p93961
tp93962
I7
s(Vinsert
p93963
I42
VSimpleName: endVisit
p93964
Vinsert
p93965
I42
VSimpleName: hints
p93966
tp93967
I2
s(g522
I42
g523
Vinsert
p93968
I59
VVariableDeclarationFragment
p93969
tp93970
I2
s(g11915
I42
g11916
Vinsert
p93971
I59
VVariableDeclarationFragment
p93972
tp93973
I1
s(g4699
I42
g4700
Vinsert
p93974
I42
VSimpleName: accept
p93975
tp93976
I26
s(g2847
I42
g2848
Vinsert
p93977
I32
VMethodInvocation
p93978
tp93979
I7
s(g9827
I42
g9828
Vinsert
p93980
I44
VSingleVariableDeclaration
p93981
tp93982
I1
s(g5379
I42
g5380
Vinsert
p93983
I42
VSimpleName: SQLASTVisitor
p93984
tp93985
I2
s(g10475
I42
g10476
Vinsert
p93986
I39
VPrimitiveType: boolean
p93987
tp93988
I2
s(g13201
I42
g13202
Vinsert
p93989
I27
VInfixExpression: !=
p93990
tp93991
I1
s(g14535
I42
g14536
Vinsert
p93992
I45
VStringLiteral: "\u005ctWHERE bdf.bs_key = bs.bs_key\u005cn"
p93993
tp93994
I1
s(g5638
I42
g5639
Vinsert
p93995
I41
VReturnStatement
p93996
tp93997
I1
s(g10039
I42
g10040
Vinsert
p93998
I42
VSimpleName: test_instance
p93999
tp94000
I1
s(g10174
I42
g10175
Vinsert
p94001
I43
VSimpleType: Violation
p94002
tp94003
I1
s(g19736
I42
g19737
Vinsert
p94004
I44
VSingleVariableDeclaration
p94005
tp94006
I1
s(g8833
I42
g8834
Vinsert
p94007
I27
VInfixExpression: <<
p94008
tp94009
I1
s(g29493
I42
g29494
Vinsert
p94010
I42
VSimpleName: PGWallProvider
p94011
tp94012
I2
s(g34423
I42
g34424
Vinsert
p94013
I43
VSimpleType: Throwable
p94014
tp94015
I2
s(g16826
I42
g16827
Vinsert
p94016
I42
VSimpleName: buf
p94017
tp94018
I2
s(g8238
I42
g8239
Vinsert
p94019
I43
VSimpleType: WebAppStat
p94020
tp94021
I4
s(g9977
I42
g9978
Vinsert
p94022
I21
VExpressionStatement
p94023
tp94024
I12
s(g2459
I42
g2460
Vinsert
p94025
I45
VStringLiteral: "create or replace type "
p94026
tp94027
I1
s(Vinsert
p94028
I42
VSimpleName: output
p94029
Vinsert
p94030
I42
VSimpleName: forUpdate
p94031
tp94032
I1
s(g4829
I42
g4830
Vinsert
p94033
I42
VSimpleName: initWallProvider
p94034
tp94035
I1
s(g3233
I42
g3234
Vinsert
p94036
I21
VExpressionStatement
p94037
tp94038
I17
s(g51614
I42
g51615
Vinsert
p94039
I42
VSimpleName: classLoader
p94040
tp94041
I2
s(g22587
I42
g22588
Vinsert
p94042
I60
VVariableDeclarationStatement
p94043
tp94044
I2
s(g5597
I42
g5598
Vinsert
p94045
I32
VMethodInvocation
p94046
tp94047
I2
s(g17369
I42
g17370
Vinsert
p94048
I45
VStringLiteral: "\u005cndrop table if exists mytables;"
p94049
tp94050
I1
s(g15610
I42
g15611
Vinsert
p94051
I8
VBlock
p94052
tp94053
I2
s(g29022
I42
g29023
Vinsert
p94054
I42
VSimpleName: top
p94055
tp94056
I1
s(g22587
I42
g22588
Vinsert
p94057
I42
VSimpleName: CallableStatement
p94058
tp94059
I1
s(g29658
I42
g29659
Vinsert
p94060
I40
VQualifiedName: Token.IN
p94061
tp94062
I4
s(g4824
I42
g4825
Vinsert
p94063
I42
VSimpleName: JSONObject
p94064
tp94065
I1
s(g33239
I42
g33240
Vinsert
p94066
I42
VSimpleName: SQLSelectQueryBlock
p94067
tp94068
I2
s(g5564
I42
g5565
Vinsert
p94069
I42
VSimpleName: SQLSelectItem
p94070
tp94071
I1
s(g12117
I42
g12118
Vinsert
p94072
I42
VSimpleName: MySqlCharExpr
p94073
tp94074
I2
s(g17408
I42
g17409
Vinsert
p94075
I32
VMethodInvocation
p94076
tp94077
I2
s(g8373
I42
g8374
Vinsert
p94078
I42
VSimpleName: SQLServerInsertStatement
p94079
tp94080
I2
s(g35034
I42
g35035
Vinsert
p94081
I8
VBlock
p94082
tp94083
I1
s(g13981
I42
g13982
Vinsert
p94084
I60
VVariableDeclarationStatement
p94085
tp94086
I3
s(g51898
I42
g51899
Vinsert
p94087
I45
VStringLiteral: "SELECT employee_id, last_name, department_id, job_id\u005cn"
p94088
tp94089
I1
s(g8480
I42
g8481
Vinsert
p94090
I32
VMethodInvocation
p94091
tp94092
I1
s(g3770
I42
g3771
Vinsert
p94093
I21
VExpressionStatement
p94094
tp94095
I4
s(g6699
I42
g6700
Vinsert
p94096
I42
VSimpleName: Exception
p94097
tp94098
I2
s(g11940
I42
g11941
Vinsert
p94099
I43
VSimpleType: MonitorClient
p94100
tp94101
I1
s(g266
I42
g267
Vinsert
p94102
I7
VAssignment: =
p94103
tp94104
I4
s(g23210
I42
g23211
Vinsert
p94105
I45
VStringLiteral: "SELECT fund_base_cv_creative_ocr_judge_control_words_1422189630695(a.tfs, b.ocr_text, a.cates)"
p94106
tp94107
I1
s(g4452
I42
g4453
Vinsert
p94108
I83
VModifier: public
p94109
tp94110
I1
s(g25578
I42
g25579
Vinsert
p94111
I42
VSimpleName: getPhysicalConnectCount
p94112
tp94113
I1
s(g10267
I42
g10268
Vinsert
p94114
I42
VSimpleName: jdbcUrl
p94115
tp94116
I1
s(g20707
I42
g20708
Vinsert
p94117
I43
VSimpleType: SQLBinaryOpExpr
p94118
tp94119
I2
s(g1309
I42
g1310
Vinsert
p94120
I45
VStringLiteral: "version"
p94121
tp94122
I1
s(g15443
I42
g15444
Vinsert
p94123
I42
VSimpleName: visit
p94124
tp94125
I2
s(g39729
I42
g39730
Vinsert
p94126
I43
VSimpleType: MySqlInsertStatement
p94127
tp94128
I30
s(g30945
I42
g30946
Vinsert
p94129
I9
VBooleanLiteral: true
p94130
tp94131
I1
s(g10174
I42
g10175
Vinsert
p94132
I52
VThisExpression
p94133
tp94134
I1
s(g25751
I42
g25752
Vinsert
p94135
I22
VFieldAccess
p94136
tp94137
I2
s(g4268
I42
g4269
Vinsert
p94138
I42
VSimpleName: x
p94139
tp94140
I2
s(g15048
I42
g15049
Vinsert
p94141
I59
VVariableDeclarationFragment
p94142
tp94143
I2
s(g3704
I42
g3705
Vinsert
p94144
I42
VSimpleName: setWhere
p94145
tp94146
I1
s(g9451
I42
g9452
Vinsert
p94147
I42
VSimpleName: connections
p94148
tp94149
I2
s(g7552
I42
g7553
Vinsert
p94150
I9
VBooleanLiteral: true
p94151
tp94152
I1
s(g10498
I42
g10499
Vinsert
p94153
I43
VSimpleType: ResultSetMetaDataProxyImpl
p94154
tp94155
I1
s(g3179
I42
g3180
Vinsert
p94156
I45
VStringLiteral: "META-INF/druid-filter-wall-permit-schema-mysql.txt"
p94157
tp94158
I1
s(g48698
I42
g48699
Vinsert
p94159
I27
VInfixExpression: -
p94160
tp94161
I1
s(g27974
I42
g27975
Vinsert
p94162
I45
VStringLiteral: "OUTPUT "
p94163
tp94164
I1
s(g25014
I42
g25015
Vinsert
p94165
I45
VStringLiteral: "logAbandoned"
p94166
tp94167
I1
s(g24479
I42
g24480
Vinsert
p94168
I45
VStringLiteral: "SELECT id, name, gender, salary FROM test_user where id = 3 or id = ?"
p94169
tp94170
I1
s(g32107
I42
g32108
Vinsert
p94171
I32
VMethodInvocation
p94172
tp94173
I18
s(g4765
I42
g4766
Vinsert
p94174
I43
VSimpleType: SQLSyntaxErrorException
p94175
tp94176
I1
s(g6450
I42
g6451
Vinsert
p94177
I34
VNumberLiteral: 0
p94178
tp94179
I2
s(g2084
I42
g2085
Vinsert
p94180
I8
VBlock
p94181
tp94182
I2
s(g19461
I42
g19462
Vinsert
p94183
I42
VSimpleName: x
p94184
tp94185
I5
s(g497
I42
g498
Vinsert
p94186
I42
VSimpleName: Assert
p94187
tp94188
I1
s(g7031
I42
g7032
Vinsert
p94189
I42
VSimpleName: nestedTable
p94190
tp94191
I3
s(g2925
I42
g2926
Vinsert
p94192
I7
VAssignment: =
p94193
tp94194
I2
s(g43121
I42
g43122
Vinsert
p94195
I45
VStringLiteral: "alter table myp.table2 drop if exists  partition(ds=20161209) \u005cn"
p94196
tp94197
I1
s(g8752
I42
g8753
Vinsert
p94198
I61
VWhileStatement
p94199
tp94200
I1
s(Vinsert
p94201
I42
VSimpleName: endVisit
p94202
Vinsert
p94203
I42
VSimpleName: procedureArgumentList
p94204
tp94205
I1
s(g7527
I42
g7528
Vinsert
p94206
I42
VSimpleName: i
p94207
tp94208
I1
s(g13933
I42
g13934
Vinsert
p94209
I40
VQualifiedName: Token.STORAGE
p94210
tp94211
I1
s(g60914
I42
g60915
Vinsert
p94212
I42
VSimpleName: config
p94213
tp94214
I2
s(g20904
I42
g20905
Vinsert
p94215
I43
VSimpleType: DruidDataSourceStatValue
p94216
tp94217
I1
s(g39356
I42
g39357
Vinsert
p94218
I39
VPrimitiveType: boolean
p94219
tp94220
I1
s(g17240
I42
g17241
Vinsert
p94221
I42
VSimpleName: queryBlock
p94222
tp94223
I2
s(g2243
I42
g2244
Vinsert
p94224
I8
VBlock
p94225
tp94226
I2
s(g19888
I42
g19889
Vinsert
p94227
I42
VSimpleName: x
p94228
tp94229
I2
s(g1007
I42
g1008
Vinsert
p94230
I42
VSimpleName: stmt
p94231
tp94232
I1
s(g652
I42
g653
Vinsert
p94233
I60
VVariableDeclarationStatement
p94234
tp94235
I1
s(g32436
I42
g32437
Vinsert
p94236
I42
VSimpleName: SQLColumnDefinition
p94237
tp94238
I3
s(g39356
I42
g39357
Vinsert
p94239
I42
VSimpleName: isRegisterToSystemProperty
p94240
tp94241
I1
s(g7158
I42
g7159
Vinsert
p94242
I83
VModifier: public
p94243
tp94244
I1
s(g8179
I42
g8180
Vinsert
p94245
I32
VMethodInvocation
p94246
tp94247
I1
s(g3022
I42
g3023
Vinsert
p94248
I7
VAssignment: =
p94249
tp94250
I1
s(g5369
I42
g5370
Vinsert
p94251
I44
VSingleVariableDeclaration
p94252
tp94253
I1
s(g9977
I42
g9978
Vinsert
p94254
I31
VMethodDeclaration
p94255
tp94256
I12
s(Vinsert
p94257
I42
VSimpleName: parameterize
p94258
Vinsert
p94259
I45
VStringLiteral: "/* 72582af814768580067726386d39b6/0// */ select id,uid from mytable"
p94260
tp94261
I1
s(Vinsert
p94262
I42
VSimpleName: get
p94263
Vinsert
p94264
I42
VSimpleName: statement
p94265
tp94266
I11
s(g10493
I42
g10494
Vinsert
p94267
I60
VVariableDeclarationStatement
p94268
tp94269
I1
s(g1617
I42
g1618
Vinsert
p94270
I42
VSimpleName: SQLException
p94271
tp94272
I1
s(g1554
I42
g1555
Vinsert
p94273
I32
VMethodInvocation
p94274
tp94275
I6
s(g12586
I42
g12587
Vinsert
p94276
I42
VSimpleName: lexer
p94277
tp94278
I8
s(g25165
I42
g25166
Vinsert
p94279
I42
VSimpleName: map
p94280
tp94281
I2
s(g9065
I42
g9066
Vinsert
p94282
I42
VSimpleName: unaryExpr
p94283
tp94284
I1
s(g3365
I42
g3366
Vinsert
p94285
I42
VSimpleName: read
p94286
tp94287
I1
s(g3401
I42
g3402
Vinsert
p94288
I42
VSimpleName: visitor
p94289
tp94290
I1
s(g286
I42
g287
Vinsert
p94291
I27
VInfixExpression: ==
p94292
tp94293
I2
s(g9954
I42
g9955
Vinsert
p94294
I21
VExpressionStatement
p94295
tp94296
I1
s(g7655
I42
g7656
Vinsert
p94297
I7
VAssignment: =
p94298
tp94299
I1
s(g7477
I42
g7478
Vinsert
p94300
I54
VTryStatement
p94301
tp94302
I1
s(g8001
I42
g8002
Vinsert
p94303
I42
VSimpleName: SQLTableSource
p94304
tp94305
I1
s(g12611
I42
g12612
Vinsert
p94306
I45
VStringLiteral: "minIdle greater than maxActive, "
p94307
tp94308
I1
s(g39729
I42
g39730
Vinsert
p94309
I11
VCastExpression
p94310
tp94311
I38
s(g10159
I42
g10160
Vinsert
p94312
I21
VExpressionStatement
p94313
tp94314
I1
s(g72035
I42
g72036
Vinsert
p94315
I40
VQualifiedName: Token.ENABLE
p94316
tp94317
I2
s(g29483
I42
g29484
Vinsert
p94318
I46
VSuperConstructorInvocation
p94319
tp94320
I2
s(g19888
I42
g19889
Vinsert
p94321
I21
VExpressionStatement
p94322
tp94323
I2
s(g46106
I42
g46107
Vinsert
p94324
I42
VSimpleName: acceptIdentifier
p94325
tp94326
I1
s(g5831
I42
g5832
Vinsert
p94327
I25
VIfStatement
p94328
tp94329
I1
s(g8937
I42
g8938
Vinsert
p94330
I42
VSimpleName: toString
p94331
tp94332
I3
s(g5351
I42
g5352
Vinsert
p94333
I42
VSimpleName: adapter
p94334
tp94335
I2
s(g17769
I42
g17770
Vinsert
p94336
I41
VReturnStatement
p94337
tp94338
I14
s(g14839
I42
g14840
Vinsert
p94339
I45
VStringLiteral: "<tr><td>LogicCloseCount</td><td>"
p94340
tp94341
I1
s(g6917
I42
g6918
Vinsert
p94342
I42
VSimpleName: assertEquals
p94343
tp94344
I2
s(g38258
I42
g38259
Vinsert
p94345
I42
VSimpleName: lastErrorClass
p94346
tp94347
I1
s(g1032
I42
g1033
Vinsert
p94348
I32
VMethodInvocation
p94349
tp94350
I3
s(g326
I42
g327
Vinsert
p94351
I45
VStringLiteral: "    SELECT id FROM sample_columns col \u005cn"
p94352
tp94353
I1
s(g73154
I42
g73155
Vinsert
p94354
I9
VBooleanLiteral: false
p94355
tp94356
I1
s(g12523
I42
g12524
Vinsert
p94357
I25
VIfStatement
p94358
tp94359
I1
s(g13066
I42
g13067
Vinsert
p94360
I40
VQualifiedName: Token.CREATE
p94361
tp94362
I1
s(g997
I42
g998
Vinsert
p94363
I42
VSimpleName: Histogram
p94364
tp94365
I1
s(g7893
I42
g7894
Vinsert
p94366
I42
VSimpleName: String
p94367
tp94368
I21
s(g5262
I42
g5263
Vinsert
p94369
I62
VInstanceofExpression
p94370
tp94371
I1
s(g88571
I42
g88572
Vinsert
p94372
I42
VSimpleName: identifierEquals
p94373
tp94374
I1
s(g5605
I42
g5606
Vinsert
p94375
I45
VStringLiteral: "jdbc:oracle:thin:@10.20.144.80:1521:orcl"
p94376
tp94377
I1
s(g3793
I42
g3794
Vinsert
p94378
I43
VSimpleType: List
p94379
tp94380
I1
s(g16248
I42
g16249
Vinsert
p94381
I36
VParenthesizedExpression
p94382
tp94383
I6
s(g25961
I42
g25962
Vinsert
p94384
I42
VSimpleName: setResolvedTableSource
p94385
tp94386
I1
s(g3103
I42
g3104
Vinsert
p94387
I42
VSimpleName: rs
p94388
tp94389
I4
s(g20248
I42
g20249
Vinsert
p94390
I42
VSimpleName: getTableSource
p94391
tp94392
I1
s(g9055
I42
g9056
Vinsert
p94393
I43
VSimpleType: Object
p94394
tp94395
I3
s(g48513
I42
g48514
Vinsert
p94396
I43
VSimpleType: String
p94397
tp94398
I8
s(g27830
I42
g27831
Vinsert
p94399
I42
VSimpleName: MySqlBinaryExpr
p94400
tp94401
I1
s(g487
I42
g488
Vinsert
p94402
I42
VSimpleName: main
p94403
tp94404
I1
s(g13868
I42
g13869
Vinsert
p94405
I42
VSimpleName: sqlStatValue
p94406
tp94407
I1
s(g1390
I42
g1391
Vinsert
p94408
I42
VSimpleName: value
p94409
tp94410
I2
s(g61926
I42
g61927
Vinsert
p94411
I42
VSimpleName: count
p94412
tp94413
I3
s(g3223
I42
g3224
Vinsert
p94414
I45
VStringLiteral: "OLTP"
p94415
tp94416
I1
s(g12742
I42
g12743
Vinsert
p94417
I43
VSimpleType: MySqlCreateTableStatement
p94418
tp94419
I1
s(g3500
I42
g3501
Vinsert
p94420
I8
VBlock
p94421
tp94422
I1
s(g23854
I42
g23855
Vinsert
p94423
I57
VTypeLiteral
p94424
tp94425
I1
s(g16145
I42
g16146
Vinsert
p94426
I42
VSimpleName: sqlHash
p94427
tp94428
I2
s(g18044
I42
g18045
Vinsert
p94429
I21
VExpressionStatement
p94430
tp94431
I5
s(g14790
I42
g14791
Vinsert
p94432
I32
VMethodInvocation
p94433
tp94434
I3
s(g45377
I42
g45378
Vinsert
p94435
I39
VPrimitiveType: boolean
p94436
tp94437
I2
s(g23913
I42
g23914
Vinsert
p94438
I34
VNumberLiteral: 1000
p94439
tp94440
I1
s(g26592
I42
g26593
Vinsert
p94441
I42
VSimpleName: assertEquals
p94442
tp94443
I1
s(g20596
I42
g20597
Vinsert
p94444
I45
VStringLiteral: "FULLTEXT"
p94445
tp94446
I1
s(g1913
I42
g1914
Vinsert
p94447
I18
VContinueStatement
p94448
tp94449
I1
s(g13569
I42
g13570
Vinsert
p94450
I83
VModifier: public
p94451
tp94452
I2
s(g15899
I42
g15900
Vinsert
p94453
I42
VSimpleName: getConnection
p94454
tp94455
I1
s(Vinsert
p94456
I42
VSimpleName: setParent
p94457
Vinsert
p94458
I42
VSimpleName: c2
p94459
tp94460
I4
s(g3457
I42
g3458
Vinsert
p94461
I59
VVariableDeclarationFragment
p94462
tp94463
I4
s(g20909
I42
g20910
Vinsert
p94464
I45
VStringLiteral: " WITH TIME ZONE "
p94465
tp94466
I1
s(g12159
I42
g12160
Vinsert
p94467
I27
VInfixExpression: ==
p94468
tp94469
I1
s(g86512
I42
g86513
Vinsert
p94470
I40
VQualifiedName: Token.SESSION
p94471
tp94472
I2
s(g30855
I42
g30856
Vinsert
p94473
I42
VSimpleName: MySqlExceptionSorter
p94474
tp94475
I1
s(g30541
I42
g30542
Vinsert
p94476
I42
VSimpleName: SQLExpr
p94477
tp94478
I2
s(g29793
I42
g29794
Vinsert
p94479
I8
VBlock
p94480
tp94481
I3
s(g25422
I42
g25423
Vinsert
p94482
I42
VSimpleName: token
p94483
tp94484
I1
s(g57721
I42
g57722
Vinsert
p94485
I42
VSimpleName: definer
p94486
tp94487
I1
s(g13445
I42
g13446
Vinsert
p94488
I42
VSimpleName: selectQueryBlock
p94489
tp94490
I1
s(g20411
I42
g20412
Vinsert
p94491
I21
VExpressionStatement
p94492
tp94493
I1
s(g181
I42
g182
Vinsert
p94494
I60
VVariableDeclarationStatement
p94495
tp94496
I8
s(g63249
I42
g63250
Vinsert
p94497
I42
VSimpleName: Properties
p94498
tp94499
I1
s(g4457
I42
g4458
Vinsert
p94500
I42
VSimpleName: getStatementStat
p94501
tp94502
I2
s(g18507
I42
g18508
Vinsert
p94503
I78
VMarkerAnnotation
p94504
tp94505
I7
s(g24542
I42
g24543
Vinsert
p94506
I42
VSimpleName: stmt
p94507
tp94508
I2
s(g9235
I42
g9236
Vinsert
p94509
I42
VSimpleName: getLoginTimeout
p94510
tp94511
I1
s(g2829
I42
g2830
Vinsert
p94512
I83
VModifier: public
p94513
tp94514
I1
s(g26873
I42
g26874
Vinsert
p94515
I60
VVariableDeclarationStatement
p94516
tp94517
I9
s(g26901
I42
g26902
Vinsert
p94518
I42
VSimpleName: IOUtils
p94519
tp94520
I1
s(g26789
I42
g26790
Vinsert
p94521
I42
VSimpleName: result
p94522
tp94523
I1
s(Vinsert
p94524
I42
VSimpleName: endVisit
p94525
Vinsert
p94526
I42
VSimpleName: dataType
p94527
tp94528
I1
s(g30913
I42
g30914
Vinsert
p94529
I45
VStringLiteral: "\u005cn\u005ct\u005ctCONSTRAINT check_divname CHECK (div_name = UPPER(div_name)) DISABLE,"
p94530
tp94531
I2
s(g78127
I42
g78128
Vinsert
p94532
I42
VSimpleName: test_false_2
p94533
tp94534
I1
s(g51370
I42
g51371
Vinsert
p94535
I27
VInfixExpression: >
p94536
tp94537
I2
s(g3287
I42
g3288
Vinsert
p94538
I42
VSimpleName: sql
p94539
tp94540
I4
s(g2732
I42
g2733
Vinsert
p94541
I43
VSimpleType: SQLPropertyExpr
p94542
tp94543
I1
s(g14266
I42
g14267
Vinsert
p94544
I40
VQualifiedName: Token.ROW
p94545
tp94546
I1
s(g8238
I42
g8239
Vinsert
p94547
I32
VMethodInvocation
p94548
tp94549
I2
s(g6852
I42
g6853
Vinsert
p94550
I8
VBlock
p94551
tp94552
I2
s(g53660
I42
g53661
Vinsert
p94553
I42
VSimpleName: evictList
p94554
tp94555
I1
s(g4908
I42
g4909
Vinsert
p94556
I42
VSimpleName: statementList
p94557
tp94558
I164
s(g7031
I42
g7032
Vinsert
p94559
I42
VSimpleName: SQLExpr
p94560
tp94561
I1
s(g1617
I42
g1618
Vinsert
p94562
I42
VSimpleName: direction
p94563
tp94564
I1
s(g20113
I42
g20114
Vinsert
p94565
I14
VClassInstanceCreation
p94566
tp94567
I3
s(g22551
I42
g22552
Vinsert
p94568
I45
VStringLiteral: "\u005ctTYPE VARCHAR(200),\u005cn"
p94569
tp94570
I1
s(g26548
I42
g26549
Vinsert
p94571
I59
VVariableDeclarationFragment
p94572
tp94573
I1
s(g7527
I42
g7528
Vinsert
p94574
I7
VAssignment: =
p94575
tp94576
I2
s(g43273
I42
g43274
Vinsert
p94577
I42
VSimpleName: typeExpr
p94578
tp94579
I1
s(g30060
I42
g30061
Vinsert
p94580
I27
VInfixExpression: <
p94581
tp94582
I1
s(g22038
I42
g22039
Vinsert
p94583
I34
VNumberLiteral: 6.0f
p94584
tp94585
I1
s(g36106
I42
g36107
Vinsert
p94586
I14
VClassInstanceCreation
p94587
tp94588
I1
s(g439
I42
g440
Vinsert
p94589
I42
VSimpleName: stmt
p94590
tp94591
I1
s(g8324
I42
g8325
Vinsert
p94592
I45
VStringLiteral: "\u005ct\u005c"PRI_KEY\u005c" VARCHAR2(50),\u005cn"
p94593
tp94594
I1
s(g17133
I42
g17134
Vinsert
p94595
I42
VSimpleName: i
p94596
tp94597
I2
s(g3654
I42
g3655
Vinsert
p94598
I42
VSimpleName: oidIndex
p94599
tp94600
I1
s(g13147
I42
g13148
Vinsert
p94601
I43
VSimpleType: WallProvider
p94602
tp94603
I18
s(g32833
I42
g32834
Vinsert
p94604
I45
VStringLiteral: "ONLY "
p94605
tp94606
I1
s(g56359
I42
g56360
Vinsert
p94607
I27
VInfixExpression: +
p94608
tp94609
I2
s(g46314
I42
g46315
Vinsert
p94610
I45
VStringLiteral: " and s.qualifier IN ('TRK', 'BRC')"
p94611
tp94612
I1
s(g14967
I42
g14968
Vinsert
p94613
I42
VSimpleName: setIndexType
p94614
tp94615
I1
s(g39926
I42
g39927
Vinsert
p94616
I43
VSimpleType: Boolean
p94617
tp94618
I1
s(g9103
I42
g9104
Vinsert
p94619
I42
VSimpleName: getAlias
p94620
tp94621
I1
s(g29042
I42
g29043
Vinsert
p94622
I23
VFieldDeclaration
p94623
tp94624
I1
s(g14896
I42
g14897
Vinsert
p94625
I78
VMarkerAnnotation
p94626
tp94627
I1
s(g6192
I42
g6193
Vinsert
p94628
I42
VSimpleName: SQLCaseExpr
p94629
tp94630
I1
s(g22469
I42
g22470
Vinsert
p94631
I34
VNumberLiteral: 0
p94632
tp94633
I2
s(g3806
I42
g3807
Vinsert
p94634
I25
VIfStatement
p94635
tp94636
I2
s(g28698
I42
g28699
Vinsert
p94637
I42
VSimpleName: name
p94638
tp94639
I1
s(g12993
I42
g12994
Vinsert
p94640
I42
VSimpleName: setPassword
p94641
tp94642
I1
s(g13677
I42
g13678
Vinsert
p94643
I27
VInfixExpression: &&
p94644
tp94645
I1
s(g9182
I42
g9183
Vinsert
p94646
I42
VSimpleName: SQLTableSource
p94647
tp94648
I1
s(g2707
I42
g2708
Vinsert
p94649
I45
VStringLiteral: "unchecked"
p94650
tp94651
I1
s(g44694
I42
g44695
Vinsert
p94652
I42
VSimpleName: column
p94653
tp94654
I1
s(g18606
I42
g18607
Vinsert
p94655
I42
VSimpleName: accept
p94656
tp94657
I1
s(g3108
I42
g3109
Vinsert
p94658
I11
VCastExpression
p94659
tp94660
I1
s(g14765
I42
g14766
Vinsert
p94661
I42
VSimpleName: Scan
p94662
tp94663
I1
s(g14517
I42
g14518
Vinsert
p94664
I7
VAssignment: =
p94665
tp94666
I1
s(g34576
I42
g34577
Vinsert
p94667
I43
VSimpleType: SQLVariantRefExpr
p94668
tp94669
I1
s(g5538
I42
g5539
Vinsert
p94670
I40
VQualifiedName: com.alibaba.druid.wall.WallSqlStatValue
p94671
tp94672
I1
s(g27722
I42
g27723
Vinsert
p94673
I42
VSimpleName: setResultSetType
p94674
tp94675
I1
s(g14452
I42
g14453
Vinsert
p94676
I32
VMethodInvocation
p94677
tp94678
I7
s(g3654
I42
g3655
Vinsert
p94679
I40
VQualifiedName: OracleCreateTableStatement.OIDIndex
p94680
tp94681
I1
s(g2997
I42
g2998
Vinsert
p94682
I42
VSimpleName: SQLException
p94683
tp94684
I1
s(g8311
I42
g8312
Vinsert
p94685
I42
VSimpleName: transformOracleToPostgresql
p94686
tp94687
I1
s(g15153
I42
g15154
Vinsert
p94688
I43
VSimpleType: WallConfig
p94689
tp94690
I2
s(g11524
I42
g11525
Vinsert
p94691
I42
VSimpleName: exprParser
p94692
tp94693
I2
s(g34785
I42
g34786
Vinsert
p94694
I42
VSimpleName: addParameter
p94695
tp94696
I3
s(g796
I42
g797
Vinsert
p94697
I59
VVariableDeclarationFragment
p94698
tp94699
I2
s(g24959
I42
g24960
Vinsert
p94700
I42
VSimpleName: holder
p94701
tp94702
I3
s(g21593
I42
g21594
Vinsert
p94703
I34
VNumberLiteral: 3
p94704
tp94705
I1
s(g10642
I42
g10643
Vinsert
p94706
I40
VQualifiedName: b.next
p94707
tp94708
I1
s(g1125
I42
g1126
Vinsert
p94709
I33
VNullLiteral
p94710
tp94711
I2
s(g424
I42
g425
Vinsert
p94712
I42
VSimpleName: SQLSelectOrderByItem
p94713
tp94714
I6
s(g1868
I42
g1869
Vinsert
p94715
I25
VIfStatement
p94716
tp94717
I1
s(g25328
I42
g25329
Vinsert
p94718
I27
VInfixExpression: ||
p94719
tp94720
I1
s(g16289
I42
g16290
Vinsert
p94721
I43
VSimpleType: DruidDataSource
p94722
tp94723
I4
s(g723
I42
g724
Vinsert
p94724
I43
VSimpleType: DruidPooledPreparedStatement
p94725
tp94726
I1
s(g16581
I42
g16582
Vinsert
p94727
I42
VSimpleName: fetchRowCount
p94728
tp94729
I2
s(g69073
I42
g69074
Vinsert
p94730
I43
VSimpleType: SQLWithSubqueryClause.Entry
p94731
tp94732
I1
s(g3093
I42
g3094
Vinsert
p94733
I7
VAssignment: =
p94734
tp94735
I1
s(g306
I42
g307
Vinsert
p94736
I45
VStringLiteral: "RESULT_CACHE"
p94737
tp94738
I1
s(g19916
I42
g19917
Vinsert
p94739
I42
VSimpleName: SQLAlterTableStatement
p94740
tp94741
I1
s(g19120
I42
g19121
Vinsert
p94742
I42
VSimpleName: Integer
p94743
tp94744
I1
s(g632
I42
g633
Vinsert
p94745
I44
VSingleVariableDeclaration
p94746
tp94747
I2
s(g12050
I42
g12051
Vinsert
p94748
I45
VStringLiteral: "\u005ct);"
p94749
tp94750
I1
s(g68894
I42
g68895
Vinsert
p94751
I42
VSimpleName: statementLoggerName
p94752
tp94753
I2
s(g8716
I42
g8717
Vinsert
p94754
I21
VExpressionStatement
p94755
tp94756
I1
s(g11691
I42
g11692
Vinsert
p94757
I42
VSimpleName: selectStmt
p94758
tp94759
I5
s(g801
I42
g802
Vinsert
p94760
I42
VSimpleName: sqlStat
p94761
tp94762
I2
s(g1065
I42
g1066
Vinsert
p94763
I42
VSimpleName: firstResult
p94764
tp94765
I1
s(g6061
I42
g6062
Vinsert
p94766
I33
VNullLiteral
p94767
tp94768
I2
s(g6597
I42
g6598
Vinsert
p94769
I42
VSimpleName: File
p94770
tp94771
I3
s(g13764
I42
g13765
Vinsert
p94772
I42
VSimpleName: printStackTrace
p94773
tp94774
I1
s(g33656
I42
g33657
Vinsert
p94775
I43
VSimpleType: MySqlASTVisitor
p94776
tp94777
I17
s(g3063
I42
g3064
Vinsert
p94778
I43
VSimpleType: WallConfig
p94779
tp94780
I4
s(g5584
I42
g5585
Vinsert
p94781
I36
VParenthesizedExpression
p94782
tp94783
I1
s(g55789
I42
g55790
Vinsert
p94784
I37
VPostfixExpression: ++
p94785
tp94786
I7
s(g38081
I42
g38082
Vinsert
p94787
I42
VSimpleName: groupList
p94788
tp94789
I2
s(g28221
I42
g28222
Vinsert
p94790
I42
VSimpleName: unwrap
p94791
tp94792
I1
s(g17066
I42
g17067
Vinsert
p94793
I42
VSimpleName: dataSourceStat
p94794
tp94795
I1
s(g13022
I42
g13023
Vinsert
p94796
I45
VStringLiteral: "update none condition"
p94797
tp94798
I1
s(g35114
I42
g35115
Vinsert
p94799
I42
VSimpleName: setMaxActive
p94800
tp94801
I1
s(g2790
I42
g2791
Vinsert
p94802
I33
VNullLiteral
p94803
tp94804
I15
s(g82005
I42
g82006
Vinsert
p94805
I42
VSimpleName: PGSelectStatement
p94806
tp94807
I1
s(g30113
I42
g30114
Vinsert
p94808
I9
VBooleanLiteral: true
p94809
tp94810
I1
s(Vinsert
p94811
I42
VSimpleName: accept0
p94812
Vinsert
p94813
I42
VSimpleName: nullable
p94814
tp94815
I1
s(g19766
I42
g19767
Vinsert
p94816
I42
VSimpleName: SQLStartTransactionStatement
p94817
tp94818
I2
s(g8277
I42
g8278
Vinsert
p94819
I59
VVariableDeclarationFragment
p94820
tp94821
I5
s(g10752
I42
g10753
Vinsert
p94822
I42
VSimpleName: println
p94823
tp94824
I1
s(g18773
I42
g18774
Vinsert
p94825
I42
VSimpleName: parent
p94826
tp94827
I2
s(g15299
I42
g15300
Vinsert
p94828
I24
VForStatement
p94829
tp94830
I1
s(g20975
I42
g20976
Vinsert
p94831
I41
VReturnStatement
p94832
tp94833
I1
s(g47657
I42
g47658
Vinsert
p94834
I42
VSimpleName: prop
p94835
tp94836
I1
s(g9549
I42
g9550
Vinsert
p94837
I45
VStringLiteral: "ALTER TABLE members"
p94838
tp94839
I3
s(g276
I42
g277
Vinsert
p94840
I60
VVariableDeclarationStatement
p94841
tp94842
I2
s(g25675
I42
g25676
Vinsert
p94843
I27
VInfixExpression: !=
p94844
tp94845
I1
s(g12488
I42
g12489
Vinsert
p94846
I42
VSimpleName: exprParser
p94847
tp94848
I1
s(g3401
I42
g3402
Vinsert
p94849
I40
VQualifiedName: holder.ast
p94850
tp94851
I1
s(g38836
I42
g38837
Vinsert
p94852
I42
VSimpleName: setDbType
p94853
tp94854
I1
s(g16075
I42
g16076
Vinsert
p94855
I25
VIfStatement
p94856
tp94857
I4
s(g9182
I42
g9183
Vinsert
p94858
I42
VSimpleName: udpateStatement
p94859
tp94860
I1
s(g4370
I42
g4371
Vinsert
p94861
I42
VSimpleName: getLog
p94862
tp94863
I1
s(g35021
I42
g35022
Vinsert
p94864
I42
VSimpleName: getDriverClassName
p94865
tp94866
I1
s(g8742
I42
g8743
Vinsert
p94867
I42
VSimpleName: accept
p94868
tp94869
I1
s(g11469
I42
g11470
Vinsert
p94870
I43
VSimpleType: PGCurrentOfExpr
p94871
tp94872
I1
s(g61163
I42
g61164
Vinsert
p94873
I45
VStringLiteral: "\u005cn\u005ctCONSTRAINT fk_deptno FOREIGN KEY (department_id) REFERENCES departments (department_id)"
p94874
tp94875
I2
s(g10438
I42
g10439
Vinsert
p94876
I34
VNumberLiteral: 0
p94877
tp94878
I1
s(g17764
I42
g17765
Vinsert
p94879
I42
VSimpleName: varName
p94880
tp94881
I2
s(g17467
I42
g17468
Vinsert
p94882
I32
VMethodInvocation
p94883
tp94884
I10
s(g31892
I42
g31893
Vinsert
p94885
I45
VStringLiteral: "OUTFILE"
p94886
tp94887
I1
s(g8692
I42
g8693
Vinsert
p94888
I42
VSimpleName: bufPos
p94889
tp94890
I2
s(g19223
I42
g19224
Vinsert
p94891
I42
VSimpleName: wallConditionContextLocal
p94892
tp94893
I3
s(g9190
I42
g9191
Vinsert
p94894
I33
VNullLiteral
p94895
tp94896
I1
s(g12565
I42
g12566
Vinsert
p94897
I43
VSimpleType: SQLException
p94898
tp94899
I2
s(g39778
I42
g39779
Vinsert
p94900
I43
VSimpleType: SQLTableElement
p94901
tp94902
I1
s(g2198
I42
g2199
Vinsert
p94903
I21
VExpressionStatement
p94904
tp94905
I1
s(g37744
I42
g37745
Vinsert
p94906
I11
VCastExpression
p94907
tp94908
I1
s(g7678
I42
g7679
Vinsert
p94909
I42
VSimpleName: createOutputVisitor
p94910
tp94911
I1
s(g40105
I42
g40106
Vinsert
p94912
I43
VSimpleType: WallProvider
p94913
tp94914
I27
s(g552
I42
g553
Vinsert
p94915
I42
VSimpleName: ShardingRuntimeException
p94916
tp94917
I1
s(g10808
I42
g10809
Vinsert
p94918
I38
VPrefixExpression: ++
p94919
tp94920
I5
s(g459
I42
g460
Vinsert
p94921
I45
VStringLiteral: "\u005cn\u005ctproduct_no integer,"
p94922
tp94923
I1
s(g29207
I42
g29208
Vinsert
p94924
I45
VStringLiteral: ", `seller_id`, `ext_status`)\u005cn"
p94925
tp94926
I1
s(g11516
I42
g11517
Vinsert
p94927
I59
VVariableDeclarationFragment
p94928
tp94929
I5
s(g3287
I42
g3288
Vinsert
p94930
I42
VSimpleName: execute
p94931
tp94932
I2
s(g13593
I42
g13594
Vinsert
p94933
I42
VSimpleName: getRemoveAbandonedTimeout
p94934
tp94935
I1
s(g18573
I42
g18574
Vinsert
p94936
I32
VMethodInvocation
p94937
tp94938
I3
s(g9433
I42
g9434
Vinsert
p94939
I25
VIfStatement
p94940
tp94941
I2
s(Vinsert
p94942
I42
VSimpleName: endVisit
p94943
Vinsert
p94944
I42
VSimpleName: forUpdate
p94945
tp94946
I1
s(g7502
I42
g7503
Vinsert
p94947
I42
VSimpleName: FakeLogger
p94948
tp94949
I2
s(g6323
I42
g6324
Vinsert
p94950
I32
VMethodInvocation
p94951
tp94952
I2
s(g20210
I42
g20211
Vinsert
p94953
I42
VSimpleName: DecryptException
p94954
tp94955
I1
s(g14597
I42
g14598
Vinsert
p94956
I33
VNullLiteral
p94957
tp94958
I6
s(g81
I42
g82
Vinsert
p94959
I11
VCastExpression
p94960
tp94961
I1
s(g1390
I42
g1391
Vinsert
p94962
I27
VInfixExpression: ==
p94963
tp94964
I2
s(g62949
I42
g62950
Vinsert
p94965
I45
VStringLiteral: "TABLESPACE \u005c"RDP_DATA\u005c"\u005cn"
p94966
tp94967
I1
s(g10660
I42
g10661
Vinsert
p94968
I45
VStringLiteral: "\u005ct`c_time` time DEFAULT NULL COMMENT 'time',\u005cn"
p94969
tp94970
I2
s(g10542
I42
g10543
Vinsert
p94971
I42
VSimpleName: token
p94972
tp94973
I15
s(g2824
I42
g2825
Vinsert
p94974
I83
VModifier: public
p94975
tp94976
I26
s(g12209
I42
g12210
Vinsert
p94977
I8
VBlock
p94978
tp94979
I2
s(g22046
I42
g22047
Vinsert
p94980
I42
VSimpleName: rs
p94981
tp94982
I1
s(g40357
I42
g40358
Vinsert
p94983
I42
VSimpleName: get
p94984
tp94985
I1
s(g9299
I42
g9300
Vinsert
p94986
I9
VBooleanLiteral: true
p94987
tp94988
I1
s(g26739
I42
g26740
Vinsert
p94989
I42
VSimpleName: sb
p94990
tp94991
I1
s(g7409
I42
g7410
Vinsert
p94992
I42
VSimpleName: System
p94993
tp94994
I2
s(g24102
I42
g24103
Vinsert
p94995
I42
VSimpleName: id
p94996
tp94997
I2
s(g6089
I42
g6090
Vinsert
p94998
I42
VSimpleName: PoolableStatement
p94999
tp95000
I1
s(g5133
I42
g5134
Vinsert
p95001
I42
VSimpleName: stmt
p95002
tp95003
I1
s(g8499
I42
g8500
Vinsert
p95004
I42
VSimpleName: MySqlLeaveStatement
p95005
tp95006
I1
s(g20382
I42
g20383
Vinsert
p95007
I8
VBlock
p95008
tp95009
I1
s(g20548
I42
g20549
Vinsert
p95010
I42
VSimpleName: connection
p95011
tp95012
I3
s(g20084
I42
g20085
Vinsert
p95013
I42
VSimpleName: lastToken
p95014
tp95015
I1
s(g13685
I42
g13686
Vinsert
p95016
I5
VArrayType: String[]
p95017
tp95018
I1
s(g17082
I42
g17083
Vinsert
p95019
I31
VMethodDeclaration
p95020
tp95021
I1
s(g16359
I42
g16360
Vinsert
p95022
I52
VThisExpression
p95023
tp95024
I2
s(g1085
I42
g1086
Vinsert
p95025
I14
VClassInstanceCreation
p95026
tp95027
I50
s(g94201
I42
g94202
Vinsert
p95028
I42
VSimpleName: into
p95029
tp95030
I3
s(g3312
I42
g3313
Vinsert
p95031
I42
VSimpleName: value
p95032
tp95033
I2
s(g7375
I42
g7376
Vinsert
p95034
I45
VStringLiteral: "select 1"
p95035
tp95036
I1
s(g4152
I42
g4153
Vinsert
p95037
I42
VSimpleName: postfixed_cnt
p95038
tp95039
I1
s(g23640
I42
g23641
Vinsert
p95040
I45
VStringLiteral: "PASSWORD"
p95041
tp95042
I1
s(g25074
I42
g25075
Vinsert
p95043
I42
VSimpleName: SQLColumnDefinition
p95044
tp95045
I1
s(g13551
I42
g13552
Vinsert
p95046
I42
VSimpleName: rowType
p95047
tp95048
I2
s(g4467
I42
g4468
Vinsert
p95049
I42
VSimpleName: visit
p95050
tp95051
I34
s(g3297
I42
g3298
Vinsert
p95052
I44
VSingleVariableDeclaration
p95053
tp95054
I9
s(g24273
I42
g24274
Vinsert
p95055
I11
VCastExpression
p95056
tp95057
I4
s(g31887
I42
g31888
Vinsert
p95058
I42
VSimpleName: add
p95059
tp95060
I1
s(g38956
I42
g38957
Vinsert
p95061
I42
VSimpleName: rightEvalExpr
p95062
tp95063
I1
s(g16517
I42
g16518
Vinsert
p95064
I42
VSimpleName: PGExprParser
p95065
tp95066
I11
s(g92616
I42
g92617
Vinsert
p95067
I42
VSimpleName: setCluster
p95068
tp95069
I1
s(g196
I42
g197
Vinsert
p95070
I45
VStringLiteral: "\u005ctSELECT DISTINCT MKTG_PLAN_LVL2_ID AS PID, MKTG_PLAN_LVL4_ID AS SCENE_ID\u005cn"
p95071
tp95072
I1
s(g15485
I42
g15486
Vinsert
p95073
I42
VSimpleName: SQLException
p95074
tp95075
I1
s(g35597
I42
g35598
Vinsert
p95076
I70
VEnhancedForStatement
p95077
tp95078
I1
s(g7351
I42
g7352
Vinsert
p95079
I45
VStringLiteral: "\u005cn\u005ct\u005ctSUBPARTITION s0,"
p95080
tp95081
I1
s(g131
I42
g132
Vinsert
p95082
I43
VSimpleType: SQLSelectGroupByClause
p95083
tp95084
I4
s(g35026
I42
g35027
Vinsert
p95085
I42
VSimpleName: sql
p95086
tp95087
I1
s(g9854
I42
g9855
Vinsert
p95088
I42
VSimpleName: print
p95089
tp95090
I1
s(g1612
I42
g1613
Vinsert
p95091
I52
VThisExpression
p95092
tp95093
I1
s(Vinsert
p95094
I42
VSimpleName: getTables
p95095
Vinsert
p95096
I42
VSimpleName: statemen
p95097
tp95098
I16
s(g5105
I42
g5106
Vinsert
p95099
I45
VStringLiteral: "("
p95100
tp95101
I1
s(g17816
I42
g17817
Vinsert
p95102
I40
VQualifiedName: Token.EOF
p95103
tp95104
I6
s(g5195
I42
g5196
Vinsert
p95105
I43
VSimpleType: SQLServerOutput
p95106
tp95107
I1
s(Vinsert
p95108
I42
VSimpleName: next
p95109
Vinsert
p95110
I42
VSimpleName: test_updateArray
p95111
tp95112
I1
s(g1012
I42
g1013
Vinsert
p95113
I42
VSimpleName: findTable
p95114
tp95115
I2
s(g2543
I42
g2544
Vinsert
p95116
I42
VSimpleName: name
p95117
tp95118
I3
s(g40662
I42
g40663
Vinsert
p95119
I43
VSimpleType: PGAnalytic
p95120
tp95121
I1
s(g23839
I42
g23840
Vinsert
p95122
I42
VSimpleName: method
p95123
tp95124
I5
s(g1100
I42
g1101
Vinsert
p95125
I8
VBlock
p95126
tp95127
I1
s(g19656
I42
g19657
Vinsert
p95128
I42
VSimpleName: parent
p95129
tp95130
I1
s(g38625
I42
g38626
Vinsert
p95131
I40
VQualifiedName: Token.COLONCOLON
p95132
tp95133
I1
s(g62026
I42
g62027
Vinsert
p95134
I42
VSimpleName: test_false_1
p95135
tp95136
I2
s(Vinsert
p95137
I42
VSimpleName: token
p95138
Vinsert
p95139
I45
VStringLiteral: "STORAGE"
p95140
tp95141
I1
s(g1231
I42
g1232
Vinsert
p95142
I31
VMethodDeclaration
p95143
tp95144
I1
s(g12786
I42
g12787
Vinsert
p95145
I42
VSimpleName: decodeExpr
p95146
tp95147
I1
s(g2198
I42
g2199
Vinsert
p95148
I42
VSimpleName: close
p95149
tp95150
I1
s(g20320
I42
g20321
Vinsert
p95151
I33
VNullLiteral
p95152
tp95153
I2
s(g20113
I42
g20114
Vinsert
p95154
I42
VSimpleName: parseInsert0
p95155
tp95156
I3
s(g1090
I42
g1091
Vinsert
p95157
I43
VSimpleType: SQLExpr
p95158
tp95159
I3
s(g6852
I42
g6853
Vinsert
p95160
I45
VStringLiteral: "TIME"
p95161
tp95162
I1
s(g27752
I42
g27753
Vinsert
p95163
I42
VSimpleName: i
p95164
tp95165
I3
s(g12639
I42
g12640
Vinsert
p95166
I45
VStringLiteral: "jFn+eZm4jgDcTLTEzfmIVtPDRNhYCY3xhPo7vJeS8M1AvP+4xh9+uO35XsRIsRl1PTFVrGwg\u005cn"
p95167
tp95168
I1
s(g16948
I42
g16949
Vinsert
p95169
I42
VSimpleName: meta
p95170
tp95171
I3
s(g2800
I42
g2801
Vinsert
p95172
I42
VSimpleName: MySqlDescribeStatement
p95173
tp95174
I2
s(g22807
I42
g22808
Vinsert
p95175
I42
VSimpleName: properties
p95176
tp95177
I7
s(g381
I42
g382
Vinsert
p95178
I42
VSimpleName: getHints
p95179
tp95180
I1
s(g50845
I42
g50846
Vinsert
p95181
I42
VSimpleName: exprList
p95182
tp95183
I1
s(g16620
I42
g16621
Vinsert
p95184
I42
VSimpleName: prop
p95185
tp95186
I2
s(g18680
I42
g18681
Vinsert
p95187
I8
VBlock
p95188
tp95189
I2
s(g8030
I42
g8031
Vinsert
p95190
I42
VSimpleName: loadExtend
p95191
tp95192
I1
s(g7422
I42
g7423
Vinsert
p95193
I42
VSimpleName: MockPreparedStatement
p95194
tp95195
I1
s(g8810
I42
g8811
Vinsert
p95196
I44
VSingleVariableDeclaration
p95197
tp95198
I5
s(g13906
I42
g13907
Vinsert
p95199
I42
VSimpleName: transactionId
p95200
tp95201
I1
s(g31798
I42
g31799
Vinsert
p95202
I34
VNumberLiteral: 1
p95203
tp95204
I6
s(g4370
I42
g4371
Vinsert
p95205
I57
VTypeLiteral
p95206
tp95207
I1
s(g3641
I42
g3642
Vinsert
p95208
I42
VSimpleName: executeErrorCount
p95209
tp95210
I3
s(g17174
I42
g17175
Vinsert
p95211
I45
VStringLiteral: "FROM (t1 tt1, t2 tt2)\u005cn"
p95212
tp95213
I1
s(g8001
I42
g8002
Vinsert
p95214
I60
VVariableDeclarationStatement
p95215
tp95216
I1
s(g12716
I42
g12717
Vinsert
p95217
I42
VSimpleName: dataSource
p95218
tp95219
I3
s(g4885
I42
g4886
Vinsert
p95220
I32
VMethodInvocation
p95221
tp95222
I4
s(g17106
I42
g17107
Vinsert
p95223
I52
VThisExpression
p95224
tp95225
I1
s(g632
I42
g633
Vinsert
p95226
I42
VSimpleName: SQLException
p95227
tp95228
I1
s(g39075
I42
g39076
Vinsert
p95229
I42
VSimpleName: name
p95230
tp95231
I1
s(g1360
I42
g1361
Vinsert
p95232
I42
VSimpleName: len
p95233
tp95234
I4
s(g13873
I42
g13874
Vinsert
p95235
I42
VSimpleName: SQLLimit
p95236
tp95237
I2
s(g89575
I42
g89576
Vinsert
p95238
I42
VSimpleName: getStatements
p95239
tp95240
I1
s(g13196
I42
g13197
Vinsert
p95241
I42
VSimpleName: maxPoolSize
p95242
tp95243
I2
s(g7965
I42
g7966
Vinsert
p95244
I42
VSimpleName: SQLSelectQueryBlock
p95245
tp95246
I1
s(g3040
I42
g3041
Vinsert
p95247
I25
VIfStatement
p95248
tp95249
I1
s(g3093
I42
g3094
Vinsert
p95250
I32
VMethodInvocation
p95251
tp95252
I13
s(g6455
I42
g6456
Vinsert
p95253
I53
VThrowStatement
p95254
tp95255
I1
s(g2019
I42
g2020
Vinsert
p95256
I42
VSimpleName: Date
p95257
tp95258
I2
s(Vinsert
p95259
I42
VSimpleName: getItems
p95260
Vinsert
p95261
I42
VSimpleName: getName
p95262
tp95263
I1
s(g18749
I42
g18750
Vinsert
p95264
I60
VVariableDeclarationStatement
p95265
tp95266
I5
s(g1410
I42
g1411
Vinsert
p95267
I14
VClassInstanceCreation
p95268
tp95269
I1
s(Vinsert
p95270
I42
VSimpleName: warn
p95271
Vinsert
p95272
I42
VSimpleName: driverHasPingMethod
p95273
tp95274
I1
s(g19339
I42
g19340
Vinsert
p95275
I83
VModifier: private
p95276
tp95277
I1
s(g4584
I42
g4585
Vinsert
p95278
I42
VSimpleName: tableElementList
p95279
tp95280
I2
s(g38777
I42
g38778
Vinsert
p95281
I39
VPrimitiveType: void
p95282
tp95283
I1
s(g266
I42
g267
Vinsert
p95284
I42
VSimpleName: tableName
p95285
tp95286
I1
s(g2795
I42
g2796
Vinsert
p95287
I59
VVariableDeclarationFragment
p95288
tp95289
I1
s(g932
I42
g933
Vinsert
p95290
I31
VMethodDeclaration
p95291
tp95292
I1
s(g11542
I42
g11543
Vinsert
p95293
I42
VSimpleName: x
p95294
tp95295
I10
s(g30847
I42
g30848
Vinsert
p95296
I62
VInstanceofExpression
p95297
tp95298
I1
s(g15558
I42
g15559
Vinsert
p95299
I42
VSimpleName: OracleDateExpr
p95300
tp95301
I3
s(g17291
I42
g17292
Vinsert
p95302
I42
VSimpleName: getSchema
p95303
tp95304
I1
s(g13032
I42
g13033
Vinsert
p95305
I42
VSimpleName: clone
p95306
tp95307
I1
s(g29604
I42
g29605
Vinsert
p95308
I42
VSimpleName: getYoungGCTime
p95309
tp95310
I1
s(g16107
I42
g16108
Vinsert
p95311
I33
VNullLiteral
p95312
tp95313
I1
s(g13612
I42
g13613
Vinsert
p95314
I42
VSimpleName: ArrayList
p95315
tp95316
I1
s(g37349
I42
g37350
Vinsert
p95317
I42
VSimpleName: index
p95318
tp95319
I2
s(g11270
I42
g11271
Vinsert
p95320
I38
VPrefixExpression: !
p95321
tp95322
I1
s(g35733
I42
g35734
Vinsert
p95323
I45
VStringLiteral: "select * from dede_admin where id=1 order by if((ascii(substr(user(),1,1))>95),1,2);"
p95324
tp95325
I1
s(g12427
I42
g12428
Vinsert
p95326
I60
VVariableDeclarationStatement
p95327
tp95328
I1
s(g22587
I42
g22588
Vinsert
p95329
I42
VSimpleName: getConnection
p95330
tp95331
I1
s(g19077
I42
g19078
Vinsert
p95332
I22
VFieldAccess
p95333
tp95334
I2
s(g2319
I42
g2320
Vinsert
p95335
I38
VPrefixExpression: ++
p95336
tp95337
I2
s(g15823
I42
g15824
Vinsert
p95338
I42
VSimpleName: SQLName
p95339
tp95340
I1
s(g9564
I42
g9565
Vinsert
p95341
I43
VSimpleType: SQLBinaryExpr
p95342
tp95343
I2
s(g552
I42
g553
Vinsert
p95344
I42
VSimpleName: String
p95345
tp95346
I1
s(g8417
I42
g8418
Vinsert
p95347
I42
VSimpleName: from
p95348
tp95349
I1
s(g23526
I42
g23527
Vinsert
p95350
I42
VSimpleName: resultSet
p95351
tp95352
I1
s(g43852
I42
g43853
Vinsert
p95353
I45
VStringLiteral: "DROP SESSION"
p95354
tp95355
I1
s(g1125
I42
g1126
Vinsert
p95356
I52
VThisExpression
p95357
tp95358
I2
s(g7121
I42
g7122
Vinsert
p95359
I43
VSimpleType: Map
p95360
tp95361
I5
s(g8222
I42
g8223
Vinsert
p95362
I32
VMethodInvocation
p95363
tp95364
I3
s(g42486
I42
g42487
Vinsert
p95365
I42
VSimpleName: delete
p95366
tp95367
I2
s(g1100
I42
g1101
Vinsert
p95368
I59
VVariableDeclarationFragment
p95369
tp95370
I1
s(g11124
I42
g11125
Vinsert
p95371
I42
VSimpleName: dbType
p95372
tp95373
I2
s(g4755
I42
g4756
Vinsert
p95374
I34
VNumberLiteral: 2
p95375
tp95376
I1
s(g2079
I42
g2080
Vinsert
p95377
I8
VBlock
p95378
tp95379
I4
s(g8386
I42
g8387
Vinsert
p95380
I42
VSimpleName: normalize
p95381
tp95382
I1
s(g3495
I42
g3496
Vinsert
p95383
I59
VVariableDeclarationFragment
p95384
tp95385
I4
s(g8184
I42
g8185
Vinsert
p95386
I21
VExpressionStatement
p95387
tp95388
I2
s(g18399
I42
g18400
Vinsert
p95389
I21
VExpressionStatement
p95390
tp95391
I8
s(g3383
I42
g3384
Vinsert
p95392
I8
VBlock
p95393
tp95394
I1
s(g15048
I42
g15049
Vinsert
p95395
I85
VDimension
p95396
tp95397
I1
s(g14886
I42
g14887
Vinsert
p95398
I45
VStringLiteral: "\u005ct\u005ctIF SQLCODE != -2289 THEN\u005cn"
p95399
tp95400
I1
s(g9345
I42
g9346
Vinsert
p95401
I42
VSimpleName: columnName
p95402
tp95403
I1
s(Vinsert
p95404
I42
VSimpleName: exprList
p95405
Vinsert
p95406
I45
VStringLiteral: "USING"
p95407
tp95408
I1
s(g18065
I42
g18066
Vinsert
p95409
I42
VSimpleName: visitor
p95410
tp95411
I2
s(g81019
I42
g81020
Vinsert
p95412
I40
VQualifiedName: Token.LPAREN
p95413
tp95414
I3
s(g7840
I42
g7841
Vinsert
p95415
I59
VVariableDeclarationFragment
p95416
tp95417
I2
s(g2173
I42
g2174
Vinsert
p95418
I37
VPostfixExpression: ++
p95419
tp95420
I1
s(g23526
I42
g23527
Vinsert
p95421
I42
VSimpleName: nclob
p95422
tp95423
I2
s(g7552
I42
g7553
Vinsert
p95424
I34
VNumberLiteral: 10
p95425
tp95426
I1
s(g31505
I42
g31506
Vinsert
p95427
I43
VSimpleType: Clob
p95428
tp95429
I1
s(Vinsert
p95430
I42
VSimpleName: info
p95431
Vinsert
p95432
I40
VQualifiedName: Level.INFO
p95433
tp95434
I1
s(g16460
I42
g16461
Vinsert
p95435
I42
VSimpleName: table
p95436
tp95437
I1
s(g18187
I42
g18188
Vinsert
p95438
I43
VSimpleType: WallConfig
p95439
tp95440
I8
s(g3467
I42
g3468
Vinsert
p95441
I42
VSimpleName: target
p95442
tp95443
I1
s(g409
I42
g410
Vinsert
p95444
I83
VModifier: public
p95445
tp95446
I2
s(g20298
I42
g20299
Vinsert
p95447
I42
VSimpleName: methodName
p95448
tp95449
I1
s(g7547
I42
g7548
Vinsert
p95450
I45
VStringLiteral: "\u005ctc_char char(10),\u005cn"
p95451
tp95452
I2
s(g14765
I42
g14766
Vinsert
p95453
I42
VSimpleName: setFilter
p95454
tp95455
I1
s(g61
I42
g62
Vinsert
p95456
I14
VClassInstanceCreation
p95457
tp95458
I1
s(g2403
I42
g2404
Vinsert
p95459
I22
VFieldAccess
p95460
tp95461
I1
s(g11920
I42
g11921
Vinsert
p95462
I27
VInfixExpression: +
p95463
tp95464
I1
s(g5485
I42
g5486
Vinsert
p95465
I25
VIfStatement
p95466
tp95467
I1
s(g4243
I42
g4244
Vinsert
p95468
I42
VSimpleName: print0
p95469
tp95470
I1
s(g12776
I42
g12777
Vinsert
p95471
I42
VSimpleName: SQLTruncateStatement
p95472
tp95473
I1
s(g11110
I42
g11111
Vinsert
p95474
I40
VQualifiedName: x.noCopy
p95475
tp95476
I1
s(g7335
I42
g7336
Vinsert
p95477
I42
VSimpleName: incrementAndGet
p95478
tp95479
I1
s(g1815
I42
g1816
Vinsert
p95480
I42
VSimpleName: visit
p95481
tp95482
I14
s(g38094
I42
g38095
Vinsert
p95483
I40
VQualifiedName: Token.EQ
p95484
tp95485
I1
s(g29483
I42
g29484
Vinsert
p95486
I8
VBlock
p95487
tp95488
I3
s(g14985
I42
g14986
Vinsert
p95489
I25
VIfStatement
p95490
tp95491
I2
s(g33917
I42
g33918
Vinsert
p95492
I27
VInfixExpression: +
p95493
tp95494
I10
s(g14244
I42
g14245
Vinsert
p95495
I42
VSimpleName: i
p95496
tp95497
I1
s(g6635
I42
g6636
Vinsert
p95498
I40
VQualifiedName: ConfigFilter.SYS_PROP_CONFIG_FILE
p95499
tp95500
I1
s(g7650
I42
g7651
Vinsert
p95501
I8
VBlock
p95502
tp95503
I1
s(g2682
I42
g2683
Vinsert
p95504
I44
VSingleVariableDeclaration
p95505
tp95506
I6
s(g52306
I42
g52307
Vinsert
p95507
I36
VParenthesizedExpression
p95508
tp95509
I2
s(g11732
I42
g11733
Vinsert
p95510
I32
VMethodInvocation
p95511
tp95512
I6
s(g81379
I42
g81380
Vinsert
p95513
I43
VSimpleType: SQLColumnConstraint
p95514
tp95515
I1
s(g16153
I42
g16154
Vinsert
p95516
I27
VInfixExpression: ||
p95517
tp95518
I10
s(g7450
I42
g7451
Vinsert
p95519
I42
VSimpleName: header
p95520
tp95521
I1
s(g45377
I42
g45378
Vinsert
p95522
I32
VMethodInvocation
p95523
tp95524
I4
s(g21913
I42
g21914
Vinsert
p95525
I60
VVariableDeclarationStatement
p95526
tp95527
I11
s(g42563
I42
g42564
Vinsert
p95528
I45
VStringLiteral: "\u005cn\u005ct\u005ctCONSTRAINT promo_id_u UNIQUE,"
p95529
tp95530
I1
s(g18031
I42
g18032
Vinsert
p95531
I42
VSimpleName: newStat
p95532
tp95533
I1
s(g50563
I42
g50564
Vinsert
p95534
I42
VSimpleName: SQLAlterTableEnableConstraint
p95535
tp95536
I2
s(g10655
I42
g10656
Vinsert
p95537
I34
VNumberLiteral: 0
p95538
tp95539
I1
s(g23313
I42
g23314
Vinsert
p95540
I45
VStringLiteral: "\u005ct\u005ctNOCOMPRESS\u005cn"
p95541
tp95542
I4
s(g3202
I42
g3203
Vinsert
p95543
I39
VPrimitiveType: int
p95544
tp95545
I12
s(g28720
I42
g28721
Vinsert
p95546
I42
VSimpleName: updater
p95547
tp95548
I2
s(g14402
I42
g14403
Vinsert
p95549
I42
VSimpleName: Long
p95550
tp95551
I2
s(g31754
I42
g31755
Vinsert
p95552
I42
VSimpleName: e2
p95553
tp95554
I2
s(g76667
I42
g76668
Vinsert
p95555
I45
VStringLiteral: "bvt/parser/oracle-10.txt"
p95556
tp95557
I1
s(g22551
I42
g22552
Vinsert
p95558
I45
VStringLiteral: "CREATE TABLE KTV.ALI_KTV_LEADS_AREA_FIX_TBD (\u005cn"
p95559
tp95560
I1
s(g31696
I42
g31697
Vinsert
p95561
I42
VSimpleName: getFieldType
p95562
tp95563
I1
s(g5485
I42
g5486
Vinsert
p95564
I42
VSimpleName: logging
p95565
tp95566
I1
s(g9791
I42
g9792
Vinsert
p95567
I43
VSimpleType: Integer
p95568
tp95569
I1
s(g5615
I42
g5616
Vinsert
p95570
I34
VNumberLiteral: 123
p95571
tp95572
I1
s(g41184
I42
g41185
Vinsert
p95573
I40
VQualifiedName: com.mysql.jdbc.Connection
p95574
tp95575
I2
s(g7919
I42
g7920
Vinsert
p95576
I42
VSimpleName: MySqlInsertStatement
p95577
tp95578
I4
s(g9595
I42
g9596
Vinsert
p95579
I42
VSimpleName: restartDataSource
p95580
tp95581
I1
s(g9171
I42
g9172
Vinsert
p95582
I42
VSimpleName: paren
p95583
tp95584
I3
s(g2604
I42
g2605
Vinsert
p95585
I44
VSingleVariableDeclaration
p95586
tp95587
I1
s(g21577
I42
g21578
Vinsert
p95588
I18
VContinueStatement
p95589
tp95590
I2
s(g612
I42
g613
Vinsert
p95591
I60
VVariableDeclarationStatement
p95592
tp95593
I1
s(g2747
I42
g2748
Vinsert
p95594
I42
VSimpleName: getComment
p95595
tp95596
I3
s(g47797
I42
g47798
Vinsert
p95597
I74
VParameterizedType: List<String>
p95598
tp95599
I2
s(g53749
I42
g53750
Vinsert
p95600
I42
VSimpleName: PGValuesQuery
p95601
tp95602
I2
s(g18437
I42
g18438
Vinsert
p95603
I42
VSimpleName: password
p95604
tp95605
I1
s(g6084
I42
g6085
Vinsert
p95606
I43
VSimpleType: Object
p95607
tp95608
I2
s(g15177
I42
g15178
Vinsert
p95609
I21
VExpressionStatement
p95610
tp95611
I10
s(g3903
I42
g3904
Vinsert
p95612
I11
VCastExpression
p95613
tp95614
I1
s(g22802
I42
g22803
Vinsert
p95615
I45
VStringLiteral: "GRANT CREATE ANY MATERIALIZED VIEW,"
p95616
tp95617
I1
s(g39695
I42
g39696
Vinsert
p95618
I39
VPrimitiveType: void
p95619
tp95620
I1
s(g13643
I42
g13644
Vinsert
p95621
I42
VSimpleName: sessionValue
p95622
tp95623
I1
s(g12475
I42
g12476
Vinsert
p95624
I42
VSimpleName: toString
p95625
tp95626
I1
s(g25157
I42
g25158
Vinsert
p95627
I42
VSimpleName: servlet
p95628
tp95629
I4
s(g4898
I42
g4899
Vinsert
p95630
I42
VSimpleName: token
p95631
tp95632
I1
s(g7756
I42
g7757
Vinsert
p95633
I41
VReturnStatement
p95634
tp95635
I2
s(g15153
I42
g15154
Vinsert
p95636
I21
VExpressionStatement
p95637
tp95638
I1
s(g5389
I42
g5390
Vinsert
p95639
I27
VInfixExpression: ||
p95640
tp95641
I1
s(g9786
I42
g9787
Vinsert
p95642
I42
VSimpleName: lexer
p95643
tp95644
I3
s(g547
I42
g548
Vinsert
p95645
I45
VStringLiteral: "\u005ct, c.promotion_value, c.owner_member_id, c.owner_seq, c.employees_count, c.annual_revenue\u005cn"
p95646
tp95647
I1
s(g3865
I42
g3866
Vinsert
p95648
I42
VSimpleName: createCount
p95649
tp95650
I4
s(g9773
I42
g9774
Vinsert
p95651
I42
VSimpleName: stmt
p95652
tp95653
I2
s(g24686
I42
g24687
Vinsert
p95654
I14
VClassInstanceCreation
p95655
tp95656
I2
s(g957
I42
g958
Vinsert
p95657
I21
VExpressionStatement
p95658
tp95659
I2
s(g9108
I42
g9109
Vinsert
p95660
I43
VSimpleType: OracleUnique
p95661
tp95662
I1
s(g3564
I42
g3565
Vinsert
p95663
I45
VStringLiteral: "jdbc:mock:xxx"
p95664
tp95665
I1
s(Vinsert
p95666
I42
VSimpleName: assertEquals
p95667
Vinsert
p95668
I45
VStringLiteral: "\u005cn\u005ctenable lifecycle;"
p95669
tp95670
I1
s(g40077
I42
g40078
Vinsert
p95671
I44
VSingleVariableDeclaration
p95672
tp95673
I1
s(Vinsert
p95674
I42
VSimpleName: getClass
p95675
Vinsert
p95676
I42
VSimpleName: getName
p95677
tp95678
I1
s(g7855
I42
g7856
Vinsert
p95679
I38
VPrefixExpression: !
p95680
tp95681
I19
s(g12346
I42
g12347
Vinsert
p95682
I42
VSimpleName: dataSource
p95683
tp95684
I1
s(g5409
I42
g5410
Vinsert
p95685
I54
VTryStatement
p95686
tp95687
I5
s(g5394
I42
g5395
Vinsert
p95688
I60
VVariableDeclarationStatement
p95689
tp95690
I1
s(g4253
I42
g4254
Vinsert
p95691
I32
VMethodInvocation
p95692
tp95693
I8
s(g6046
I42
g6047
Vinsert
p95694
I27
VInfixExpression: <
p95695
tp95696
I1
s(g1405
I42
g1406
Vinsert
p95697
I21
VExpressionStatement
p95698
tp95699
I3
s(g38836
I42
g38837
Vinsert
p95700
I9
VBooleanLiteral: true
p95701
tp95702
I6
s(g75003
I42
g75004
Vinsert
p95703
I42
VSimpleName: getLastError
p95704
tp95705
I1
s(g7756
I42
g7757
Vinsert
p95706
I32
VMethodInvocation
p95707
tp95708
I3
s(g1456
I42
g1457
Vinsert
p95709
I42
VSimpleName: statLogger
p95710
tp95711
I1
s(g46048
I42
g46049
Vinsert
p95712
I43
VSimpleType: MySqlShowPrivilegesStatement
p95713
tp95714
I2
s(g1868
I42
g1869
Vinsert
p95715
I42
VSimpleName: MockPreparedStatementFactory
p95716
tp95717
I1
s(g5460
I42
g5461
Vinsert
p95718
I13
VCharacterLiteral: ','
p95719
tp95720
I1
s(g18763
I42
g18764
Vinsert
p95721
I42
VSimpleName: o1
p95722
tp95723
I2
s(g32847
I42
g32848
Vinsert
p95724
I42
VSimpleName: output
p95725
tp95726
I36
s(g5262
I42
g5263
Vinsert
p95727
I42
VSimpleName: statement
p95728
tp95729
I1
s(g55462
I42
g55463
Vinsert
p95730
I45
VStringLiteral: "SHOW "
p95731
tp95732
I1
s(g5485
I42
g5486
Vinsert
p95733
I40
VQualifiedName: x.logging
p95734
tp95735
I1
s(g331
I42
g332
Vinsert
p95736
I42
VSimpleName: print0
p95737
tp95738
I1
s(g111
I42
g112
Vinsert
p95739
I40
VQualifiedName: Token.EQ
p95740
tp95741
I2
s(g11678
I42
g11679
Vinsert
p95742
I42
VSimpleName: isHighPriority
p95743
tp95744
I1
s(g27276
I42
g27277
Vinsert
p95745
I42
VSimpleName: tokenizer
p95746
tp95747
I1
s(g24102
I42
g24103
Vinsert
p95748
I7
VAssignment: =
p95749
tp95750
I1
s(g16375
I42
g16376
Vinsert
p95751
I45
VStringLiteral: ")"
p95752
tp95753
I1
s(Vinsert
p95754
I42
VSimpleName: assertSame
p95755
Vinsert
p95756
I45
VStringLiteral: "SELECT TOP 10 ID FROM dbo.jiraissue WHERE PROJECT IN (?) ORDER BY UPDATED DESC"
p95757
tp95758
I1
s(g59021
I42
g59022
Vinsert
p95759
I42
VSimpleName: partition
p95760
tp95761
I39
s(g43724
I42
g43725
Vinsert
p95762
I42
VSimpleName: setParameterizedMergeInList
p95763
tp95764
I1
s(g4859
I42
g4860
Vinsert
p95765
I70
VEnhancedForStatement
p95766
tp95767
I1
s(g6126
I42
g6127
Vinsert
p95768
I32
VMethodInvocation
p95769
tp95770
I8
s(g1710
I42
g1711
Vinsert
p95771
I42
VSimpleName: MBeanServerFactoryBean
p95772
tp95773
I2
s(g32875
I42
g32876
Vinsert
p95774
I42
VSimpleName: webAppStats
p95775
tp95776
I1
s(g16005
I42
g16006
Vinsert
p95777
I42
VSimpleName: readOnlyTables
p95778
tp95779
I1
s(g20035
I42
g20036
Vinsert
p95780
I42
VSimpleName: sql
p95781
tp95782
I1
s(g45225
I42
g45226
Vinsert
p95783
I42
VSimpleName: SQLASTVisitor
p95784
tp95785
I1
s(g52379
I42
g52380
Vinsert
p95786
I42
VSimpleName: TeradataSchemaStatVisitor
p95787
tp95788
I1
s(Vinsert
p95789
I42
VSimpleName: clone
p95790
Vinsert
p95791
I42
VSimpleName: item1
p95792
tp95793
I2
s(g20320
I42
g20321
Vinsert
p95794
I41
VReturnStatement
p95795
tp95796
I1
s(g12901
I42
g12902
Vinsert
p95797
I32
VMethodInvocation
p95798
tp95799
I4
s(g28640
I42
g28641
Vinsert
p95800
I21
VExpressionStatement
p95801
tp95802
I7
s(g11691
I42
g11692
Vinsert
p95803
I27
VInfixExpression: !=
p95804
tp95805
I1
s(g602
I42
g603
Vinsert
p95806
I42
VSimpleName: DruidDataSource
p95807
tp95808
I12
s(g10618
I42
g10619
Vinsert
p95809
I42
VSimpleName: getParameter
p95810
tp95811
I1
s(g6617
I42
g6618
Vinsert
p95812
I40
VQualifiedName: Keywords.DEFAULT_KEYWORDS
p95813
tp95814
I1
s(g1370
I42
g1371
Vinsert
p95815
I60
VVariableDeclarationStatement
p95816
tp95817
I1
s(g5666
I42
g5667
Vinsert
p95818
I42
VSimpleName: data
p95819
tp95820
I1
s(g5859
I42
g5860
Vinsert
p95821
I32
VMethodInvocation
p95822
tp95823
I1
s(g612
I42
g613
Vinsert
p95824
I42
VSimpleName: val
p95825
tp95826
I1
s(g3724
I42
g3725
Vinsert
p95827
I45
VStringLiteral: "\u005ctNEXT 1048576\u005cn"
p95828
tp95829
I1
s(g4238
I42
g4239
Vinsert
p95830
I42
VSimpleName: cursorName
p95831
tp95832
I4
s(g9909
I42
g9910
Vinsert
p95833
I43
VSimpleType: SQLStatement
p95834
tp95835
I58
s(g27708
I42
g27709
Vinsert
p95836
I8
VBlock
p95837
tp95838
I3
s(g9618
I42
g9619
Vinsert
p95839
I42
VSimpleName: MySqlStatementParser
p95840
tp95841
I230
s(g1825
I42
g1826
Vinsert
p95842
I42
VSimpleName: conn
p95843
tp95844
I79
s(g43329
I42
g43330
Vinsert
p95845
I34
VNumberLiteral: 1
p95846
tp95847
I1
s(g9709
I42
g9710
Vinsert
p95848
I42
VSimpleName: getFactionalSecondsPrecision
p95849
tp95850
I1
s(g16321
I42
g16322
Vinsert
p95851
I42
VSimpleName: Integer
p95852
tp95853
I2
s(g18523
I42
g18524
Vinsert
p95854
I42
VSimpleName: getNumBusyConnectionsDefaultUser
p95855
tp95856
I1
s(g29858
I42
g29859
Vinsert
p95857
I42
VSimpleName: deleteDataCount_1000_10000_Updater
p95858
tp95859
I1
s(g3312
I42
g3313
Vinsert
p95860
I52
VThisExpression
p95861
tp95862
I1
s(g17769
I42
g17770
Vinsert
p95863
I40
VQualifiedName: JdbcConstants.PHOENIX_DRIVER
p95864
tp95865
I1
s(g25961
I42
g25962
Vinsert
p95866
I43
VSimpleType: SQLIdentifierExpr
p95867
tp95868
I1
s(g14891
I42
g14892
Vinsert
p95869
I27
VInfixExpression: !=
p95870
tp95871
I4
s(g10953
I42
g10954
Vinsert
p95872
I21
VExpressionStatement
p95873
tp95874
I2
s(g26252
I42
g26253
Vinsert
p95875
I42
VSimpleName: put
p95876
tp95877
I80
s(g29483
I42
g29484
Vinsert
p95878
I31
VMethodDeclaration
p95879
tp95880
I2
s(g9060
I42
g9061
Vinsert
p95881
I7
VAssignment: =
p95882
tp95883
I11
s(g7432
I42
g7433
Vinsert
p95884
I45
VStringLiteral: "unchecked"
p95885
tp95886
I1
s(g10710
I42
g10711
Vinsert
p95887
I45
VStringLiteral: "5"
p95888
tp95889
I1
s(g30772
I42
g30773
Vinsert
p95890
I42
VSimpleName: String
p95891
tp95892
I5
s(g2393
I42
g2394
Vinsert
p95893
I42
VSimpleName: print
p95894
tp95895
I2
s(g11659
I42
g11660
Vinsert
p95896
I42
VSimpleName: SQLCreateTableStatement
p95897
tp95898
I3
s(g7594
I42
g7595
Vinsert
p95899
I42
VSimpleName: SQLIfStatement
p95900
tp95901
I1
s(g5946
I42
g5947
Vinsert
p95902
I43
VSimpleType: Class
p95903
tp95904
I1
s(g15594
I42
g15595
Vinsert
p95905
I32
VMethodInvocation
p95906
tp95907
I1
s(g17182
I42
g17183
Vinsert
p95908
I42
VSimpleName: print
p95909
tp95910
I5
s(g3664
I42
g3665
Vinsert
p95911
I32
VMethodInvocation
p95912
tp95913
I3
s(g31402
I42
g31403
Vinsert
p95914
I45
VStringLiteral: "\u005ctVIEW my_view3\u005cn"
p95915
tp95916
I1
s(g71079
I42
g71080
Vinsert
p95917
I33
VNullLiteral
p95918
tp95919
I1
s(g11365
I42
g11366
Vinsert
p95920
I8
VBlock
p95921
tp95922
I1
s(g2248
I42
g2249
Vinsert
p95923
I42
VSimpleName: SQLIdentifierExpr
p95924
tp95925
I1
s(g10159
I42
g10160
Vinsert
p95926
I42
VSimpleName: getValue
p95927
tp95928
I2
s(g9033
I42
g9034
Vinsert
p95929
I33
VNullLiteral
p95930
tp95931
I1
s(g7256
I42
g7257
Vinsert
p95932
I43
VSimpleType: Connection
p95933
tp95934
I5
s(g16123
I42
g16124
Vinsert
p95935
I32
VMethodInvocation
p95936
tp95937
I2
s(g15490
I42
g15491
Vinsert
p95938
I39
VPrimitiveType: void
p95939
tp95940
I11
s(g507
I42
g508
Vinsert
p95941
I42
VSimpleName: validationQueryTimeout
p95942
tp95943
I2
s(g10996
I42
g10997
Vinsert
p95944
I45
VStringLiteral: "SELECT TOP 10 serviceTag AS \u005c"\u7f16\u53f7\u005c", ip AS \u005c"IP\u5730\u5740\u005c"\u005cnFROM device"
p95945
tp95946
I2
s(g2393
I42
g2394
Vinsert
p95947
I34
VNumberLiteral: 0
p95948
tp95949
I1
s(g64262
I42
g64263
Vinsert
p95950
I45
VStringLiteral: "depth"
p95951
tp95952
I1
s(g10631
I42
g10632
Vinsert
p95953
I42
VSimpleName: token
p95954
tp95955
I1
s(g20975
I42
g20976
Vinsert
p95956
I42
VSimpleName: dao
p95957
tp95958
I1
s(g5470
I42
g5471
Vinsert
p95959
I42
VSimpleName: lexer
p95960
tp95961
I1
s(g8254
I42
g8255
Vinsert
p95962
I45
VStringLiteral: "\u005cn\u005ctPARTITION p1 VALUES LESS THAN (2000),"
p95963
tp95964
I2
s(g14917
I42
g14918
Vinsert
p95965
I45
VStringLiteral: "\u005ct) p\u005cn"
p95966
tp95967
I1
s(g47849
I42
g47850
Vinsert
p95968
I42
VSimpleName: DB2OutputVisitor
p95969
tp95970
I3
s(g23849
I42
g23850
Vinsert
p95971
I83
VModifier: public
p95972
tp95973
I1
s(g5007
I42
g5008
Vinsert
p95974
I33
VNullLiteral
p95975
tp95976
I1
s(g3058
I42
g3059
Vinsert
p95977
I45
VStringLiteral: "\u005cn\u005ctBEFORE INSERT"
p95978
tp95979
I2
s(g1933
I42
g1934
Vinsert
p95980
I43
VSimpleType: Exception
p95981
tp95982
I1
s(g2672
I42
g2673
Vinsert
p95983
I42
VSimpleName: visitor
p95984
tp95985
I5
s(g20293
I42
g20294
Vinsert
p95986
I52
VThisExpression
p95987
tp95988
I2
s(g8381
I42
g8382
Vinsert
p95989
I25
VIfStatement
p95990
tp95991
I1
s(g3709
I42
g3710
Vinsert
p95992
I43
VSimpleType: DruidDataSource
p95993
tp95994
I1
s(g13551
I42
g13552
Vinsert
p95995
I5
VArrayType: String[]
p95996
tp95997
I1
s(g743
I42
g744
Vinsert
p95998
I42
VSimpleName: JdbcSqlStat
p95999
tp96000
I3
s(g36135
I42
g36136
Vinsert
p96001
I13
VCharacterLiteral: '('
p96002
tp96003
I1
s(g10961
I42
g10962
Vinsert
p96004
I42
VSimpleName: toDB2String
p96005
tp96006
I4
s(g6252
I42
g6253
Vinsert
p96007
I39
VPrimitiveType: boolean
p96008
tp96009
I1
s(g9142
I42
g9143
Vinsert
p96010
I42
VSimpleName: setInitialSize
p96011
tp96012
I1
s(g69979
I42
g69980
Vinsert
p96013
I45
VStringLiteral: "constraint "
p96014
tp96015
I1
s(g9773
I42
g9774
Vinsert
p96016
I42
VSimpleName: tableName
p96017
tp96018
I2
s(g9878
I42
g9879
Vinsert
p96019
I40
VQualifiedName: type.name_lcase
p96020
tp96021
I1
s(g1888
I42
g1889
Vinsert
p96022
I42
VSimpleName: x
p96023
tp96024
I1
s(g9683
I42
g9684
Vinsert
p96025
I42
VSimpleName: Assert
p96026
tp96027
I6
s(g17163
I42
g17164
Vinsert
p96028
I42
VSimpleName: counter
p96029
tp96030
I2
s(g69590
I42
g69591
Vinsert
p96031
I40
VQualifiedName: Token.EOF
p96032
tp96033
I1
s(g22009
I42
g22010
Vinsert
p96034
I11
VCastExpression
p96035
tp96036
I41
s(g35631
I42
g35632
Vinsert
p96037
I53
VThrowStatement
p96038
tp96039
I2
s(g5002
I42
g5003
Vinsert
p96040
I42
VSimpleName: setParam
p96041
tp96042
I1
s(g14118
I42
g14119
Vinsert
p96043
I62
VInstanceofExpression
p96044
tp96045
I3
s(g5022
I42
g5023
Vinsert
p96046
I45
VStringLiteral: "\u005cn\u005ct\u005ct\u005ct\u005ct)"
p96047
tp96048
I1
s(g728
I42
g729
Vinsert
p96049
I42
VSimpleName: ex
p96050
tp96051
I4
s(g1903
I42
g1904
Vinsert
p96052
I42
VSimpleName: print
p96053
tp96054
I1
s(g42762
I42
g42763
Vinsert
p96055
I45
VStringLiteral: "mapping.entity"
p96056
tp96057
I1
s(g542
I42
g543
Vinsert
p96058
I45
VStringLiteral: "\u005ct\u005ct'VerifyEmail'\u005cn"
p96059
tp96060
I1
s(g11920
I42
g11921
Vinsert
p96061
I45
VStringLiteral: "minEvictableIdleTimeMillis=12345"
p96062
tp96063
I1
s.