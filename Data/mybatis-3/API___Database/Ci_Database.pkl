(dp0
(Vinsert
p1
I43
VSimpleType: CustomCollection
p2
tp3
I1
s(Vinsert
p4
I42
VSimpleName: isAggressiveLazyLoading
p5
tp6
I1
s(Vinsert
p7
I34
VNumberLiteral: 100L
p8
tp9
I1
s(Vinsert
p10
I42
VSimpleName: NoTypeHandlerInterfaceEnum
p11
tp12
I1
s(Vinsert
p13
I42
VSimpleName: ParameterExpressionParser
p14
tp15
I4
s(Vinsert
p16
I43
VSimpleType: CollectionWrapper
p17
tp18
I1
s(Vinsert
p19
I42
VSimpleName: keyGenerator
p20
tp21
I2
s(Vinsert
p22
I43
VSimpleType: Level2Mapper
p23
tp24
I2
s(Vinsert
p25
I42
VSimpleName: MYBATIS_MAPPER_DOCTYPE
p26
tp27
I1
s(Vinsert
p28
I42
VSimpleName: sqlSessionFactory
p29
tp30
I81
s(Vinsert
p31
I42
VSimpleName: StaticMethodSqlProviderMapper
p32
tp33
I2
s(Vinsert
p34
I42
VSimpleName: resource
p35
tp36
I9
s(Vinsert
p37
I42
VSimpleName: isStatic
p38
tp39
I1
s(Vinsert
p40
I45
VStringLiteral: "tv"
p41
tp42
I1
s(Vinsert
p43
I42
VSimpleName: Cursor
p44
tp45
I1
s(Vinsert
p46
I43
VSimpleType: UnpooledDataSourceFactory
p47
tp48
I1
s(Vinsert
p49
I42
VSimpleName: WRITE_REPLACE_METHOD
p50
tp51
I1
s(Vinsert
p52
I45
VStringLiteral: "jdbc:mysql://127.0.0.1/test"
p53
tp54
I1
s(Vinsert
p55
I42
VSimpleName: findForClass
p56
tp57
I3
s(Vinsert
p58
I45
VStringLiteral: "#{item}"
p59
tp60
I1
s(Vinsert
p61
I27
VInfixExpression: +
p62
tp63
I30
s(Vinsert
p64
I43
VSimpleType: PendingRelation
p65
tp66
I1
s(Vinsert
p67
I42
VSimpleName: expect
p68
tp69
I7
s(Vinsert
p70
I42
VSimpleName: Account
p71
tp72
I2
s(Vinsert
p73
I42
VSimpleName: sqlAnnotationTypes
p74
tp75
I2
s(Vinsert
p76
I42
VSimpleName: LinkedList
p77
tp78
I1
s(Vinsert
p79
I43
VSimpleType: Throwable
p80
tp81
I5
s(Vinsert
p82
I42
VSimpleName: prepareSelectOneAuthorMappedStatement
p83
tp84
I1
s(Vinsert
p85
I42
VSimpleName: testAnnotatedInsertTable2WithSelectKeyWithKeyObject
p86
tp87
I1
s(Vinsert
p88
I42
VSimpleName: isAnnotationPresent
p89
tp90
I1
s(Vinsert
p91
I40
VQualifiedName: org.apache.ibatis.mapping.ParameterMode
p92
tp93
I1
s(Vinsert
p94
I42
VSimpleName: hasMessageEndingWith
p95
tp96
I1
s(Vinsert
p97
I42
VSimpleName: parseScriptNode
p98
tp99
I2
s(Vinsert
p100
I42
VSimpleName: Byte
p101
tp102
I2
s(Vinsert
p103
I42
VSimpleName: println
p104
tp105
I2
s(Vinsert
p106
I43
VSimpleType: Properties
p107
tp108
I12
s(Vinsert
p109
I43
VSimpleType: PostLite
p110
tp111
I1
s(Vinsert
p112
I42
VSimpleName: getConnection
p113
tp114
I21
s(Vinsert
p115
I42
VSimpleName: config
p116
tp117
I13
s(Vinsert
p118
I83
VModifier: protected
p119
tp120
I10
s(Vinsert
p121
I42
VSimpleName: BeanWithWriteReplace
p122
tp123
I2
s(Vinsert
p124
I42
VSimpleName: openSession
p125
tp126
I78
s(Vinsert
p127
I42
VSimpleName: hasSimpleProperties
p128
tp129
I3
s(Vinsert
p130
I42
VSimpleName: resolveClass
p131
tp132
I5
s(Vinsert
p133
I42
VSimpleName: Node
p134
tp135
I4
s(Vinsert
p136
I45
VStringLiteral: "${a:b}"
p137
tp138
I2
s(Vinsert
p139
I42
VSimpleName: statementType
p140
tp141
I2
s(Vinsert
p142
I42
VSimpleName: UUID
p143
tp144
I1
s(Vinsert
p145
I42
VSimpleName: parameterize
p146
tp147
I1
s(Vinsert
p148
I42
VSimpleName: localSqlSession
p149
tp150
I3
s(Vinsert
p151
I42
VSimpleName: mapper
p152
tp153
I78
s(Vinsert
p154
I42
VSimpleName: when
p155
tp156
I77
s(Vinsert
p157
I42
VSimpleName: isMemberClass
p158
tp159
I1
s(Vinsert
p160
I42
VSimpleName: isCaseSensitive
p161
tp162
I2
s(Vinsert
p163
I42
VSimpleName: permissions
p164
tp165
I1
s(Vinsert
p166
I43
VSimpleType: ResultSetWrapper
p167
tp168
I1
s(Vinsert
p169
I42
VSimpleName: expression
p170
tp171
I9
s(Vinsert
p172
I42
VSimpleName: clearLocalCache
p173
tp174
I1
s(Vinsert
p175
I42
VSimpleName: escapeProcessing
p176
tp177
I3
s(Vinsert
p178
I42
VSimpleName: Product
p179
tp180
I3
s(Vinsert
p181
I42
VSimpleName: sqlNode
p182
tp183
I5
s(Vinsert
p184
I42
VSimpleName: rowKey
p185
tp186
I5
s(Vinsert
p187
I42
VSimpleName: ResultMap
p188
tp189
I4
s(Vinsert
p190
I43
VSimpleType: BindingException
p191
tp192
I3
s(Vinsert
p193
I42
VSimpleName: queryCursor
p194
tp195
I4
s(Vinsert
p196
I42
VSimpleName: dbReader
p197
tp198
I2
s(Vinsert
p199
I42
VSimpleName: user
p200
tp201
I20
s(Vinsert
p202
I74
VParameterizedType: Map<String,String>
p203
tp204
I2
s(Vinsert
p205
I42
VSimpleName: s
p206
tp207
I14
s(Vinsert
p208
I45
VStringLiteral: "Trying to set a 1 to 1 child element twice  for '"
p209
tp210
I1
s(Vinsert
p211
I42
VSimpleName: SerialStatusHolder
p212
tp213
I1
s(Vinsert
p214
I42
VSimpleName: isClosed
p215
tp216
I1
s(Vinsert
p217
I43
VSimpleType: ScriptRunner
p218
tp219
I38
s(Vinsert
p220
I42
VSimpleName: offset
p221
tp222
I4
s(Vinsert
p223
I42
VSimpleName: columnCount
p224
tp225
I1
s(Vinsert
p226
I42
VSimpleName: selectPet
p227
tp228
I1
s(Vinsert
p229
I42
VSimpleName: getUserWithPhoneNumber
p230
tp231
I1
s(Vinsert
p232
I43
VSimpleType: Collection
p233
tp234
I8
s(Vinsert
p235
I42
VSimpleName: getJavaType
p236
tp237
I1
s(Vinsert
p238
I42
VSimpleName: remove
p239
tp240
I5
s(Vinsert
p241
I43
VSimpleType: StatementHandler
p242
tp243
I1
s(Vinsert
p244
I34
VNumberLiteral: 6
p245
tp246
I1
s(Vinsert
p247
I42
VSimpleName: args
p248
tp249
I6
s(Vinsert
p250
I43
VSimpleType: Result
p251
tp252
I1
s(Vinsert
p253
I42
VSimpleName: email
p254
tp255
I2
s(Vinsert
p256
I42
VSimpleName: getTodoItems
p257
tp258
I1
s(Vinsert
p259
I42
VSimpleName: newObject
p260
tp261
I1
s(Vinsert
p262
I42
VSimpleName: ClassNotFoundException
p263
tp264
I6
s(Vinsert
p265
I42
VSimpleName: sqlSession2
p266
tp267
I3
s(Vinsert
p268
I40
VQualifiedName: java.sql.ResultSet
p269
tp270
I1
s(Vinsert
p271
I42
VSimpleName: getComments
p272
tp273
I2
s(Vinsert
p274
I42
VSimpleName: resolveCacheRef
p275
tp276
I1
s(Vinsert
p277
I45
VStringLiteral: "null is not a valid Language Driver"
p278
tp279
I1
s(Vinsert
p280
I42
VSimpleName: split
p281
tp282
I2
s(Vinsert
p283
I42
VSimpleName: MARKER
p284
tp285
I1
s(Vinsert
p286
I42
VSimpleName: Assert
p287
tp288
I46
s(Vinsert
p289
I43
VSimpleType: Pattern
p290
tp291
I3
s(Vinsert
p292
I42
VSimpleName: getBindings
p293
tp294
I3
s(Vinsert
p295
I42
VSimpleName: isSafeRowBoundsEnabled
p296
tp297
I1
s(Vinsert
p298
I42
VSimpleName: value
p299
tp300
I37
s(Vinsert
p301
I42
VSimpleName: TypeHandler
p302
tp303
I14
s(Vinsert
p304
I42
VSimpleName: isTraceEnabled
p305
tp306
I4
s(Vinsert
p307
I43
VSimpleType: java.sql.ResultSet
p308
tp309
I1
s(Vinsert
p310
I42
VSimpleName: forCode
p311
tp312
I1
s(Vinsert
p313
I42
VSimpleName: isEqualTo
p314
tp315
I23
s(Vinsert
p316
I42
VSimpleName: getObject
p317
tp318
I5
s(Vinsert
p319
I43
VSimpleType: Class
p320
tp321
I47
s(Vinsert
p322
I42
VSimpleName: setStopOnError
p323
tp324
I1
s(Vinsert
p325
I42
VSimpleName: u2
p326
tp327
I2
s(Vinsert
p328
I42
VSimpleName: readLock
p329
tp330
I2
s(Vinsert
p331
I42
VSimpleName: getMappedColumnNames
p332
tp333
I2
s(Vinsert
p334
I42
VSimpleName: setPersonId
p335
tp336
I1
s(Vinsert
p337
I42
VSimpleName: ids
p338
tp339
I1
s(Vinsert
p340
I42
VSimpleName: bestFriend
p341
tp342
I2
s(Vinsert
p343
I42
VSimpleName: registerByInstance
p344
tp345
I1
s(Vinsert
p346
I42
VSimpleName: XMLConfigBuilder
p347
tp348
I2
s(Vinsert
p349
I42
VSimpleName: wrapException
p350
tp351
I5
s(Vinsert
p352
I40
VQualifiedName: Types.BLOB
p353
tp354
I1
s(Vinsert
p355
I42
VSimpleName: ExceptionUtil
p356
tp357
I1
s(Vinsert
p358
I79
VSingleMemberAnnotation
p359
tp360
I2
s(Vinsert
p361
I42
VSimpleName: keySet
p362
tp363
I5
s(Vinsert
p364
I42
VSimpleName: getClasses
p365
tp366
I1
s(Vinsert
p367
I11
VCastExpression
p368
tp369
I75
s(Vinsert
p370
I42
VSimpleName: URI
p371
tp372
I1
s(Vinsert
p373
I42
VSimpleName: toUpperCase
p374
tp375
I5
s(Vinsert
p376
I42
VSimpleName: requiredStandardTypeNames
p377
tp378
I1
s(Vinsert
p379
I74
VParameterizedType: Binome<ChildBean,ChildBean>
p380
tp381
I1
s(Vinsert
p382
I42
VSimpleName: argTypes
p383
tp384
I3
s(Vinsert
p385
I42
VSimpleName: thenReturn
p386
tp387
I35
s(Vinsert
p388
I42
VSimpleName: parameterTypes
p389
tp390
I3
s(Vinsert
p391
I42
VSimpleName: dateAndTimeApiExists
p392
tp393
I1
s(Vinsert
p394
I42
VSimpleName: Boolean
p395
tp396
I3
s(Vinsert
p397
I42
VSimpleName: setLong
p398
tp399
I1
s(Vinsert
p400
I42
VSimpleName: PackageMapper
p401
tp402
I1
s(Vinsert
p403
I42
VSimpleName: isAnonymousClass
p404
tp405
I1
s(Vinsert
p406
I65
VTagElement: @see
p407
tp408
I1
s(Vinsert
p409
I42
VSimpleName: path
p410
tp411
I2
s(Vinsert
p412
I45
VStringLiteral: "select * from users where id in ("
p413
tp414
I1
s(Vinsert
p415
I42
VSimpleName: Collections
p416
tp417
I2
s(Vinsert
p418
I43
VSimpleType: Cursor
p419
tp420
I1
s(Vinsert
p421
I42
VSimpleName: shouldCallNullOnMappedProperty
p422
tp423
I2
s(Vinsert
p424
I42
VSimpleName: selectKeyAnnotation
p425
tp426
I2
s(Vinsert
p427
I18
VContinueStatement
p428
tp429
I1
s(Vinsert
p430
I42
VSimpleName: TypeAliasRegistry
p431
tp432
I2
s(Vinsert
p433
I45
VStringLiteral: "<script>"
p434
tp435
I1
s(Vinsert
p436
I42
VSimpleName: copyExternalResource
p437
tp438
I1
s(Vinsert
p439
I61
VWhileStatement
p440
tp441
I7
s(Vinsert
p442
I42
VSimpleName: myResultHandler
p443
tp444
I1
s(Vinsert
p445
I42
VSimpleName: compare
p446
tp447
I1
s(Vinsert
p448
I42
VSimpleName: noMatchingConstructorArgName
p449
tp450
I1
s(Vinsert
p451
I45
VStringLiteral: "' not found in SqlProvider '"
p452
tp453
I1
s(Vinsert
p454
I45
VStringLiteral: "' in "
p455
tp456
I1
s(Vinsert
p457
I42
VSimpleName: customConfiguredTemplate
p458
tp459
I1
s(Vinsert
p460
I42
VSimpleName: ImmutablePOJOMapper
p461
tp462
I1
s(Vinsert
p463
I42
VSimpleName: byteArray
p464
tp465
I1
s(Vinsert
p466
I42
VSimpleName: getClass
p467
tp468
I34
s(Vinsert
p469
I43
VSimpleType: IntegerTypeHandler
p470
tp471
I2
s(Vinsert
p472
I42
VSimpleName: BuilderException
p473
tp474
I9
s(Vinsert
p475
I42
VSimpleName: cache
p476
tp477
I11
s(Vinsert
p478
I43
VSimpleType: ResultFlag
p479
tp480
I1
s(Vinsert
p481
I43
VSimpleType: AutoMappingBehavior
p482
tp483
I1
s(Vinsert
p484
I42
VSimpleName: none
p485
tp486
I2
s(Vinsert
p487
I40
VQualifiedName: org.apache.ibatis.annotations.ResultType
p488
tp489
I1
s(Vinsert
p490
I42
VSimpleName: nodeToHandle
p491
tp492
I4
s(Vinsert
p493
I34
VNumberLiteral: 2000
p494
tp495
I1
s(Vinsert
p496
I42
VSimpleName: Short
p497
tp498
I3
s(Vinsert
p499
I42
VSimpleName: constructorMapping
p500
tp501
I2
s(Vinsert
p502
I43
VSimpleType: StringReader
p503
tp504
I1
s(Vinsert
p505
I43
VSimpleType: NoSuchElementException
p506
tp507
I1
s(Vinsert
p508
I42
VSimpleName: requiredDatabaseId
p509
tp510
I5
s(Vinsert
p511
I42
VSimpleName: stringTokenizer
p512
tp513
I1
s(Vinsert
p514
I45
VStringLiteral: "item"
p515
tp516
I1
s(Vinsert
p517
I74
VParameterizedType: ResolverUtil<Class>
p518
tp519
I1
s(Vinsert
p520
I42
VSimpleName: SqlNode
p521
tp522
I5
s(Vinsert
p523
I42
VSimpleName: resultColumnCache
p524
tp525
I11
s(Vinsert
p526
I45
VStringLiteral: "org/apache/ibatis/submitted/includes/CreateDB.sql"
p527
tp528
I1
s(Vinsert
p529
I43
VSimpleType: Reader
p530
tp531
I10
s(Vinsert
p532
I42
VSimpleName: getUniqueParamIndex
p533
tp534
I1
s(Vinsert
p535
I42
VSimpleName: nestedResultMapId
p536
tp537
I1
s(Vinsert
p538
I42
VSimpleName: argumentNames
p539
tp540
I1
s(Vinsert
p541
I40
VQualifiedName: org.apache.ibatis.logging.slf4j.Slf4jImpl
p542
tp543
I1
s(Vinsert
p544
I42
VSimpleName: isDynamic
p545
tp546
I1
s(Vinsert
p547
I42
VSimpleName: providerMethod
p548
tp549
I3
s(Vinsert
p550
I42
VSimpleName: shouldNotApplyTypeHandlerToParamMapXml
p551
tp552
I1
s(Vinsert
p553
I45
VStringLiteral: "org/apache/ibatis/builder/AuthorMapper.xml"
p554
tp555
I1
s(Vinsert
p556
I42
VSimpleName: mapEntry
p557
tp558
I3
s(Vinsert
p559
I43
VSimpleType: RawSqlSource
p560
tp561
I2
s(Vinsert
p562
I43
VSimpleType: ClassNotFoundException
p563
tp564
I6
s(Vinsert
p565
I40
VQualifiedName: ResultLoaderMap.LoadPair
p566
tp567
I1
s(Vinsert
p568
I42
VSimpleName: selectAllNoFlush
p569
tp570
I1
s(Vinsert
p571
I42
VSimpleName: actualArgNames
p572
tp573
I1
s(Vinsert
p574
I42
VSimpleName: ComplexImmutableAuthor
p575
tp576
I1
s(Vinsert
p577
I42
VSimpleName: DefaultObjectWrapperFactory
p578
tp579
I1
s(Vinsert
p580
I45
VStringLiteral: "true"
p581
tp582
I2
s(Vinsert
p583
I45
VStringLiteral: "${\u005c\u005c}"
p584
tp585
I2
s(Vinsert
p586
I43
VSimpleType: MapParam
p587
tp588
I3
s(Vinsert
p589
I42
VSimpleName: incompleteResultMaps
p590
tp591
I2
s(Vinsert
p592
I40
VQualifiedName: JdbcType.CURSOR
p593
tp594
I1
s(Vinsert
p595
I42
VSimpleName: unlockMissedEntries
p596
tp597
I1
s(Vinsert
p598
I43
VSimpleType: TypeReference
p599
tp600
I2
s(Vinsert
p601
I39
VPrimitiveType: long
p602
tp603
I2
s(Vinsert
p604
I43
VSimpleType: FileOutputStream
p605
tp606
I2
s(Vinsert
p607
I42
VSimpleName: setId
p608
tp609
I7
s(Vinsert
p610
I42
VSimpleName: sql
p611
tp612
I14
s(Vinsert
p613
I42
VSimpleName: getPassword
p614
tp615
I1
s(Vinsert
p616
I42
VSimpleName: time
p617
tp618
I2
s(Vinsert
p619
I42
VSimpleName: getReturnType
p620
tp621
I5
s(Vinsert
p622
I42
VSimpleName: resultMaps
p623
tp624
I2
s(Vinsert
p625
I42
VSimpleName: getBoundSql
p626
tp627
I9
s(Vinsert
p628
I66
VTextElement:  the name of the package from which to start scanning for
p629
tp630
I1
s(Vinsert
p631
I45
VStringLiteral: "org/apache/ibatis/submitted/missing_id_property/CreateDB.sql"
p632
tp633
I1
s(Vinsert
p634
I42
VSimpleName: last
p635
tp636
I1
s(Vinsert
p637
I74
VParameterizedType: Map.Entry<Object,Object>
p638
tp639
I2
s(Vinsert
p640
I42
VSimpleName: RawSqlSource
p641
tp642
I2
s(Vinsert
p643
I42
VSimpleName: Property
p644
tp645
I1
s(Vinsert
p646
I42
VSimpleName: getCoAuthor
p647
tp648
I1
s(Vinsert
p649
I42
VSimpleName: IbatisConfig
p650
tp651
I1
s(Vinsert
p652
I42
VSimpleName: keyColumnName
p653
tp654
I4
s(Vinsert
p655
I76
VWildcardType: ? extends VFS
p656
tp657
I1
s(Vinsert
p658
I42
VSimpleName: setter2
p659
tp660
I1
s(Vinsert
p661
I42
VSimpleName: parentAsClass
p662
tp663
I1
s(Vinsert
p664
I57
VTypeLiteral
p665
tp666
I94
s(Vinsert
p667
I42
VSimpleName: runner
p668
tp669
I100
s(Vinsert
p670
I43
VSimpleType: ExecutorException
p671
tp672
I4
s(Vinsert
p673
I42
VSimpleName: setDefaultFetchSize
p674
tp675
I1
s(Vinsert
p676
I42
VSimpleName: SqlSessionFactoryBuilder
p677
tp678
I10
s(Vinsert
p679
I42
VSimpleName: arrayComponentType
p680
tp681
I2
s(Vinsert
p682
I42
VSimpleName: getOriginalObject
p683
tp684
I2
s(Vinsert
p685
I42
VSimpleName: findProperty
p686
tp687
I1
s(Vinsert
p688
I42
VSimpleName: getAutoMappingUnknownColumnBehavior
p689
tp690
I4
s(Vinsert
p691
I42
VSimpleName: wasNull
p692
tp693
I28
s(Vinsert
p694
I14
VClassInstanceCreation
p695
tp696
I194
s(Vinsert
p697
I74
VParameterizedType: Class<? extends Class>
p698
tp699
I1
s(Vinsert
p700
I42
VSimpleName: ifSqlNodes
p701
tp702
I1
s(Vinsert
p703
I42
VSimpleName: shouldThrowErrorWhenBothResultMapAndNestedSelectAreSet
p704
tp705
I1
s(Vinsert
p706
I42
VSimpleName: queryStack
p707
tp708
I8
s(Vinsert
p709
I42
VSimpleName: getClob
p710
tp711
I5
s(Vinsert
p712
I42
VSimpleName: getIncompleteMethods
p713
tp714
I1
s(Vinsert
p715
I42
VSimpleName: aMethodToCall
p716
tp717
I1
s(Vinsert
p718
I42
VSimpleName: getBio
p719
tp720
I1
s(Vinsert
p721
I42
VSimpleName: Param
p722
tp723
I1
s(Vinsert
p724
I42
VSimpleName: threadName
p725
tp726
I1
s(Vinsert
p727
I42
VSimpleName: ByteArrayUtils
p728
tp729
I2
s(Vinsert
p730
I42
VSimpleName: isAssignableFrom
p731
tp732
I12
s(Vinsert
p733
I45
VStringLiteral: "sel_string_string"
p734
tp735
I1
s(Vinsert
p736
I43
VSimpleType: JarInputStream
p737
tp738
I1
s(Vinsert
p739
I74
VParameterizedType: List<ParameterMapping>
p740
tp741
I1
s(Vinsert
p742
I45
VStringLiteral: "collection"
p743
tp744
I1
s(Vinsert
p745
I65
VTagElement: @param
p746
tp747
I3
s(Vinsert
p748
I66
VTextElement:  an instance of 
p749
tp750
I1
s(Vinsert
p751
I42
VSimpleName: returnType
p752
tp753
I4
s(Vinsert
p754
I45
VStringLiteral: "id"
p755
tp756
I4
s(Vinsert
p757
I42
VSimpleName: getGenericType
p758
tp759
I1
s(Vinsert
p760
I42
VSimpleName: index
p761
tp762
I3
s(Vinsert
p763
I42
VSimpleName: List
p764
tp765
I69
s(Vinsert
p766
I42
VSimpleName: CountryMapper
p767
tp768
I4
s(Vinsert
p769
I42
VSimpleName: LEFT_OUTER_JOIN
p770
tp771
I2
s(Vinsert
p772
I40
VQualifiedName: Map.Entry
p773
tp774
I3
s(Vinsert
p775
I45
VStringLiteral: "org.apache.ibatis.submitted.include_property.Mapper.selectPropertyInAttribute"
p776
tp777
I1
s(Vinsert
p778
I45
VStringLiteral: "from field"
p779
tp780
I1
s(Vinsert
p781
I42
VSimpleName: parents
p782
tp783
I1
s(Vinsert
p784
I42
VSimpleName: UPDATE
p785
tp786
I1
s(Vinsert
p787
I42
VSimpleName: find
p788
tp789
I3
s(Vinsert
p790
I45
VStringLiteral: "."
p791
tp792
I2
s(Vinsert
p793
I43
VSimpleType: Map.Entry
p794
tp795
I3
s(Vinsert
p796
I42
VSimpleName: Slf4jImpl
p797
tp798
I1
s(Vinsert
p799
I42
VSimpleName: getShippingAddress
p800
tp801
I2
s(Vinsert
p802
I42
VSimpleName: factoryMethod
p803
tp804
I1
s(Vinsert
p805
I42
VSimpleName: cars
p806
tp807
I2
s(Vinsert
p808
I39
VPrimitiveType: int
p809
tp810
I62
s(Vinsert
p811
I42
VSimpleName: objectCache
p812
tp813
I1
s(Vinsert
p814
I40
VQualifiedName: CacheKey.NULL_CACHE_KEY
p815
tp816
I1
s(Vinsert
p817
I43
VSimpleType: TextSqlNode
p818
tp819
I4
s(Vinsert
p820
I42
VSimpleName: newInstance
p821
tp822
I14
s(Vinsert
p823
I42
VSimpleName: replace
p824
tp825
I5
s(Vinsert
p826
I42
VSimpleName: JavassistProxyFactory
p827
tp828
I2
s(Vinsert
p829
I42
VSimpleName: cls
p830
tp831
I1
s(Vinsert
p832
I42
VSimpleName: getUsersByNameUsingMap
p833
tp834
I1
s(Vinsert
p835
I42
VSimpleName: getVfsImpl
p836
tp837
I1
s(Vinsert
p838
I45
VStringLiteral: "getUpdateCount"
p839
tp840
I1
s(Vinsert
p841
I45
VStringLiteral: "${key}"
p842
tp843
I3
s(Vinsert
p844
I43
VSimpleType: OrderDetail
p845
tp846
I2
s(Vinsert
p847
I45
VStringLiteral: "development"
p848
tp849
I2
s(Vinsert
p850
I42
VSimpleName: shouldGetNullResultFromResultSet
p851
tp852
I2
s(Vinsert
p853
I42
VSimpleName: getDate
p854
tp855
I8
s(Vinsert
p856
I42
VSimpleName: getKeyColumnNames
p857
tp858
I1
s(Vinsert
p859
I42
VSimpleName: timeToLiveOfQuery
p860
tp861
I3
s(Vinsert
p862
I42
VSimpleName: blobRecord
p863
tp864
I1
s(Vinsert
p865
I42
VSimpleName: param1
p866
tp867
I1
s(Vinsert
p868
I42
VSimpleName: INTO_VALUES
p869
tp870
I1
s(Vinsert
p871
I42
VSimpleName: getTime
p872
tp873
I8
s(Vinsert
p874
I42
VSimpleName: Clob
p875
tp876
I2
s(Vinsert
p877
I29
VJavadoc
p878
tp879
I1
s(Vinsert
p880
I42
VSimpleName: metaObject
p881
tp882
I2
s(Vinsert
p883
I42
VSimpleName: shouldResolveSelectList
p884
tp885
I1
s(Vinsert
p886
I42
VSimpleName: next
p887
tp888
I8
s(Vinsert
p889
I40
VQualifiedName: org.slf4j.MarkerFactory
p890
tp891
I1
s(Vinsert
p892
I34
VNumberLiteral: 1
p893
tp894
I65
s(Vinsert
p895
I42
VSimpleName: sqlTimestamp
p896
tp897
I1
s(Vinsert
p898
I74
VParameterizedType: ArrayList<User>
p899
tp900
I1
s(Vinsert
p901
I42
VSimpleName: loader
p902
tp903
I2
s(Vinsert
p904
I42
VSimpleName: defaultResultHandler
p905
tp906
I1
s(Vinsert
p907
I42
VSimpleName: ancestorColumnPrefix
p908
tp909
I1
s(Vinsert
p910
I42
VSimpleName: getLanguageRegistry
p911
tp912
I4
s(Vinsert
p913
I42
VSimpleName: firstPrincipalPermission
p914
tp915
I1
s(Vinsert
p916
I42
VSimpleName: Lang
p917
tp918
I1
s(Vinsert
p919
I45
VStringLiteral: "Cannot convert "
p920
tp921
I1
s(Vinsert
p922
I43
VSimpleType: ManagedTransaction
p923
tp924
I1
s(Vinsert
p925
I42
VSimpleName: prefixList
p926
tp927
I1
s(Vinsert
p928
I42
VSimpleName: o
p929
tp930
I17
s(Vinsert
p931
I42
VSimpleName: paramNames
p932
tp933
I1
s(Vinsert
p934
I42
VSimpleName: read
p935
tp936
I1
s(Vinsert
p937
I42
VSimpleName: IntBoolMapEntry
p938
tp939
I2
s(Vinsert
p940
I42
VSimpleName: getLazy1
p941
tp942
I1
s(Vinsert
p943
I42
VSimpleName: StatementType
p944
tp945
I1
s(Vinsert
p946
I45
VStringLiteral: "hsql"
p947
tp948
I1
s(Vinsert
p949
I42
VSimpleName: people
p950
tp951
I1
s(Vinsert
p952
I42
VSimpleName: spMapper
p953
tp954
I9
s(Vinsert
p955
I42
VSimpleName: configurationObject
p956
tp957
I1
s(Vinsert
p958
I45
VStringLiteral: "array"
p959
tp960
I1
s(Vinsert
p961
I45
VStringLiteral: "California Valley Quail"
p962
tp963
I1
s(Vinsert
p964
I45
VStringLiteral: "select * from person"
p965
tp966
I1
s(Vinsert
p967
I45
VStringLiteral: "</script>"
p968
tp969
I1
s(Vinsert
p970
I42
VSimpleName: bytes
p971
tp972
I1
s(Vinsert
p973
I42
VSimpleName: IllegalArgumentException
p974
tp975
I1
s(Vinsert
p976
I42
VSimpleName: Before
p977
tp978
I1
s(Vinsert
p979
I42
VSimpleName: targetType
p980
tp981
I1
s(Vinsert
p982
I42
VSimpleName: setUp
p983
tp984
I2
s(Vinsert
p985
I45
VStringLiteral: "WEAK"
p986
tp987
I1
s(Vinsert
p988
I42
VSimpleName: SQL
p989
tp990
I4
s(Vinsert
p991
I42
VSimpleName: useLog4J2Logging
p992
tp993
I1
s(Vinsert
p994
I42
VSimpleName: langClass
p995
tp996
I2
s(Vinsert
p997
I45
VStringLiteral: "'org.apache.ibatis.submitted.named_constructor_args.User'"
p998
tp999
I1
s(Vinsert
p1000
I33
VNullLiteral
p1001
tp1002
I181
s(Vinsert
p1003
I42
VSimpleName: cast
p1004
tp1005
I1
s(Vinsert
p1006
I74
VParameterizedType: CustomCollection<Object>
p1007
tp1008
I1
s(Vinsert
p1009
I74
VParameterizedType: MapperProxy<T>
p1010
tp1011
I1
s(Vinsert
p1012
I42
VSimpleName: children
p1013
tp1014
I5
s(Vinsert
p1015
I43
VSimpleType: Type
p1016
tp1017
I5
s(Vinsert
p1018
I45
VStringLiteral: "FAILURE"
p1019
tp1020
I1
s(Vinsert
p1021
I42
VSimpleName: setFetchSize
p1022
tp1023
I1
s(Vinsert
p1024
I43
VSimpleType: MyDate
p1025
tp1026
I1
s(Vinsert
p1027
I43
VSimpleType: InputStreamReader
p1028
tp1029
I1
s(Vinsert
p1030
I43
VSimpleType: Item
p1031
tp1032
I1
s(Vinsert
p1033
I42
VSimpleName: registerAlias
p1034
tp1035
I13
s(Vinsert
p1036
I42
VSimpleName: createTempFile
p1037
tp1038
I1
s(Vinsert
p1039
I42
VSimpleName: getPersonType
p1040
tp1041
I1
s(Vinsert
p1042
I42
VSimpleName: parsePendingMethods
p1043
tp1044
I1
s(Vinsert
p1045
I42
VSimpleName: delimitedStringtoArray
p1046
tp1047
I2
s(Vinsert
p1048
I42
VSimpleName: isInstanceOf
p1049
tp1050
I4
s(Vinsert
p1051
I42
VSimpleName: selectAuthorLinkedHashMap
p1052
tp1053
I1
s(Vinsert
p1054
I42
VSimpleName: hasMessageStartingWith
p1055
tp1056
I2
s(Vinsert
p1057
I42
VSimpleName: skipUntil
p1058
tp1059
I1
s(Vinsert
p1060
I27
VInfixExpression: >
p1061
tp1062
I7
s(Vinsert
p1063
I42
VSimpleName: V
p1064
tp1065
I1
s(Vinsert
p1066
I42
VSimpleName: assertSame
p1067
tp1068
I4
s(Vinsert
p1069
I43
VSimpleType: XNode
p1070
tp1071
I9
s(Vinsert
p1072
I74
VParameterizedType: TypeHandler<byte[]>
p1073
tp1074
I1
s(Vinsert
p1075
I42
VSimpleName: getNamesAndItems
p1076
tp1077
I1
s(Vinsert
p1078
I42
VSimpleName: interceptor
p1079
tp1080
I1
s(Vinsert
p1081
I42
VSimpleName: getSql
p1082
tp1083
I2
s(Vinsert
p1084
I42
VSimpleName: expected
p1085
tp1086
I4
s(Vinsert
p1087
I42
VSimpleName: lang
p1088
tp1089
I5
s(Vinsert
p1090
I45
VStringLiteral: "org/apache/ibatis/submitted/stringlist/CreateDB.sql"
p1091
tp1092
I1
s(Vinsert
p1093
I42
VSimpleName: getSqlFragments
p1094
tp1095
I2
s(Vinsert
p1096
I42
VSimpleName: parentIsNew
p1097
tp1098
I1
s(Vinsert
p1099
I13
VCharacterLiteral: '\u005c\u005c'
p1100
tp1101
I2
s(Vinsert
p1102
I42
VSimpleName: BaseBuilder
p1103
tp1104
I2
s(Vinsert
p1105
I43
VSimpleType: ExpressionEvaluator
p1106
tp1107
I1
s(Vinsert
p1108
I42
VSimpleName: RowBounds
p1109
tp1110
I5
s(Vinsert
p1111
I45
VStringLiteral: "value1"
p1112
tp1113
I1
s(Vinsert
p1114
I40
VQualifiedName: org.apache.ibatis.mapping.StatementType
p1115
tp1116
I1
s(Vinsert
p1117
I42
VSimpleName: NULL_META_OBJECT
p1118
tp1119
I1
s(Vinsert
p1120
I42
VSimpleName: GenericArrayType
p1121
tp1122
I1
s(Vinsert
p1123
I43
VSimpleType: Method
p1124
tp1125
I11
s(Vinsert
p1126
I42
VSimpleName: getDeclaredField
p1127
tp1128
I1
s(Vinsert
p1129
I45
VStringLiteral: ", jdbcType="
p1130
tp1131
I1
s(Vinsert
p1132
I74
VParameterizedType: List<UnMappedColumAutoMapping>
p1133
tp1134
I1
s(Vinsert
p1135
I42
VSimpleName: template
p1136
tp1137
I4
s(Vinsert
p1138
I42
VSimpleName: templatePath
p1139
tp1140
I2
s(Vinsert
p1141
I42
VSimpleName: createDefaultContext
p1142
tp1143
I1
s(Vinsert
p1144
I42
VSimpleName: WildcardType
p1145
tp1146
I3
s(Vinsert
p1147
I42
VSimpleName: OMIT
p1148
tp1149
I2
s(Vinsert
p1150
I74
VParameterizedType: Iterator<ResultMapping>
p1151
tp1152
I1
s(Vinsert
p1153
I42
VSimpleName: getLogger
p1154
tp1155
I3
s(Vinsert
p1156
I42
VSimpleName: OR
p1157
tp1158
I1
s(Vinsert
p1159
I43
VSimpleType: org.apache.ibatis.logging.stdout.StdOutImpl
p1160
tp1161
I1
s(Vinsert
p1162
I42
VSimpleName: DataSource
p1163
tp1164
I2
s(Vinsert
p1165
I42
VSimpleName: setPoolTimeToWait
p1166
tp1167
I1
s(Vinsert
p1168
I42
VSimpleName: actual
p1169
tp1170
I1
s(Vinsert
p1171
I42
VSimpleName: loadPair
p1172
tp1173
I1
s(Vinsert
p1174
I42
VSimpleName: SimpleStatementHandler
p1175
tp1176
I2
s(Vinsert
p1177
I42
VSimpleName: flushCacheIfRequired
p1178
tp1179
I1
s(Vinsert
p1180
I42
VSimpleName: array2
p1181
tp1182
I1
s(Vinsert
p1183
I42
VSimpleName: selectFromVariable
p1184
tp1185
I1
s(Vinsert
p1186
I42
VSimpleName: BoundSql
p1187
tp1188
I11
s(Vinsert
p1189
I43
VSimpleType: java.sql.Date
p1190
tp1191
I1
s(Vinsert
p1192
I42
VSimpleName: testNestedDynamicValue
p1193
tp1194
I1
s(Vinsert
p1195
I42
VSimpleName: extractNamespace
p1196
tp1197
I1
s(Vinsert
p1198
I43
VSimpleType: PropertyTokenizer
p1199
tp1200
I2
s(Vinsert
p1201
I42
VSimpleName: setUseActualParamName
p1202
tp1203
I1
s(Vinsert
p1204
I42
VSimpleName: getDefaultListResultHandlerType
p1205
tp1206
I1
s(Vinsert
p1207
I66
VTextElement:  net.sourceforge.stripes
p1208
tp1209
I1
s(Vinsert
p1210
I2
VArrayAccess
p1211
tp1212
I17
s(Vinsert
p1213
I45
VStringLiteral: "org/apache/ibatis/submitted/usesjava8/postgres_genkeys/CreateDB.sql"
p1214
tp1215
I1
s(Vinsert
p1216
I42
VSimpleName: ancestorCache
p1217
tp1218
I2
s(Vinsert
p1219
I40
VQualifiedName: myResultHandler.children
p1220
tp1221
I1
s(Vinsert
p1222
I42
VSimpleName: register
p1223
tp1224
I13
s(Vinsert
p1225
I42
VSimpleName: tf
p1226
tp1227
I1
s(Vinsert
p1228
I42
VSimpleName: createDeserializationProxy
p1229
tp1230
I4
s(Vinsert
p1231
I42
VSimpleName: resolverUtil
p1232
tp1233
I5
s(Vinsert
p1234
I43
VSimpleType: Mapper
p1235
tp1236
I29
s(Vinsert
p1237
I42
VSimpleName: param
p1238
tp1239
I3
s(Vinsert
p1240
I42
VSimpleName: ParameterizedType
p1241
tp1242
I12
s(Vinsert
p1243
I42
VSimpleName: elements
p1244
tp1245
I1
s(Vinsert
p1246
I42
VSimpleName: cleanedString
p1247
tp1248
I2
s(Vinsert
p1249
I42
VSimpleName: postgres
p1250
tp1251
I1
s(Vinsert
p1252
I42
VSimpleName: d
p1253
tp1254
I1
s(Vinsert
p1255
I42
VSimpleName: rsw
p1256
tp1257
I6
s(Vinsert
p1258
I42
VSimpleName: brand
p1259
tp1260
I2
s(Vinsert
p1261
I42
VSimpleName: mapperProxy
p1262
tp1263
I1
s(Vinsert
p1264
I43
VSimpleType: Entry
p1265
tp1266
I3
s(Vinsert
p1267
I42
VSimpleName: ArrayUtil
p1268
tp1269
I1
s(Vinsert
p1270
I45
VStringLiteral: "key1"
p1271
tp1272
I1
s(Vinsert
p1273
I40
VQualifiedName: org.apache.ibatis.session.AutoMappingUnknownColumnBehavior
p1274
tp1275
I1
s(Vinsert
p1276
I42
VSimpleName: many
p1277
tp1278
I3
s(Vinsert
p1279
I42
VSimpleName: destFile
p1280
tp1281
I2
s(Vinsert
p1282
I42
VSimpleName: UnknownTypeHandler
p1283
tp1284
I1
s(Vinsert
p1285
I74
VParameterizedType: Collection<TypeHandler<?>>
p1286
tp1287
I1
s(Vinsert
p1288
I42
VSimpleName: getSuperclassTypeParameter
p1289
tp1290
I1
s(Vinsert
p1291
I45
VStringLiteral: "CA"
p1292
tp1293
I1
s(Vinsert
p1294
I42
VSimpleName: getType
p1295
tp1296
I2
s(Vinsert
p1297
I42
VSimpleName: ownerType
p1298
tp1299
I1
s(Vinsert
p1300
I43
VSimpleType: LinkedHashMap
p1301
tp1302
I1
s(Vinsert
p1303
I42
VSimpleName: add
p1304
tp1305
I27
s(Vinsert
p1306
I42
VSimpleName: pairs
p1307
tp1308
I2
s(Vinsert
p1309
I42
VSimpleName: criteria
p1310
tp1311
I2
s(Vinsert
p1312
I43
VSimpleType: LocalDateTypeHandler
p1313
tp1314
I1
s(Vinsert
p1315
I42
VSimpleName: getMessage
p1316
tp1317
I6
s(Vinsert
p1318
I42
VSimpleName: Date
p1319
tp1320
I5
s(Vinsert
p1321
I43
VSimpleType: ObjectOutputStream
p1322
tp1323
I4
s(Vinsert
p1324
I42
VSimpleName: addAll
p1325
tp1326
I4
s(Vinsert
p1327
I42
VSimpleName: putAll
p1328
tp1329
I1
s(Vinsert
p1330
I74
VParameterizedType: List<Map<String,Object>>
p1331
tp1332
I3
s(Vinsert
p1333
I42
VSimpleName: fixFor903UpdateJoins
p1334
tp1335
I1
s(Vinsert
p1336
I42
VSimpleName: statement
p1337
tp1338
I15
s(Vinsert
p1339
I42
VSimpleName: classCacheEnabled
p1340
tp1341
I1
s(Vinsert
p1342
I40
VQualifiedName: mappedStatement.statementLog
p1343
tp1344
I1
s(Vinsert
p1345
I43
VSimpleType: org.apache.ibatis.logging.jdk14.Jdk14LoggingImpl
p1346
tp1347
I1
s(Vinsert
p1348
I42
VSimpleName: insertTable2
p1349
tp1350
I1
s(Vinsert
p1351
I42
VSimpleName: MapperMethod
p1352
tp1353
I3
s(Vinsert
p1354
I42
VSimpleName: constructorArgNames
p1355
tp1356
I1
s(Vinsert
p1357
I39
VPrimitiveType: byte
p1358
tp1359
I5
s(Vinsert
p1360
I42
VSimpleName: MYBATIS_CONFIG_URL
p1361
tp1362
I1
s(Vinsert
p1363
I43
VSimpleType: SQLException
p1364
tp1365
I71
s(Vinsert
p1366
I42
VSimpleName: toInclude
p1367
tp1368
I1
s(Vinsert
p1369
I43
VSimpleType: BeanWithWriteReplace
p1370
tp1371
I1
s(Vinsert
p1372
I42
VSimpleName: applyPropertyValueWhenCustomizeDefaultValueSeparator
p1373
tp1374
I1
s(Vinsert
p1375
I40
VQualifiedName: PropertyParser.KEY_ENABLE_DEFAULT_VALUE
p1376
tp1377
I1
s(Vinsert
p1378
I5
VArrayType: int[]
p1379
tp1380
I2
s(Vinsert
p1381
I42
VSimpleName: handleRowValues
p1382
tp1383
I1
s(Vinsert
p1384
I42
VSimpleName: getResultList
p1385
tp1386
I2
s(Vinsert
p1387
I42
VSimpleName: candidate
p1388
tp1389
I4
s(Vinsert
p1390
I43
VSimpleType: ObjectFactory
p1391
tp1392
I1
s(Vinsert
p1393
I42
VSimpleName: targetContents
p1394
tp1395
I1
s(Vinsert
p1396
I42
VSimpleName: isLazy
p1397
tp1398
I3
s(Vinsert
p1399
I42
VSimpleName: basePath
p1400
tp1401
I2
s(Vinsert
p1402
I42
VSimpleName: JPETSTORE_PROPERTIES
p1403
tp1404
I2
s(Vinsert
p1405
I42
VSimpleName: reflectorFactory
p1406
tp1407
I9
s(Vinsert
p1408
I42
VSimpleName: variables
p1409
tp1410
I3
s(Vinsert
p1411
I42
VSimpleName: extractObjectFromList
p1412
tp1413
I1
s(Vinsert
p1414
I42
VSimpleName: getLogPrefix
p1415
tp1416
I1
s(Vinsert
p1417
I42
VSimpleName: Jdk14LoggingImpl
p1418
tp1419
I2
s(Vinsert
p1420
I42
VSimpleName: getNamesAnnotatedLowHighWithXMLResultMap
p1421
tp1422
I1
s(Vinsert
p1423
I42
VSimpleName: setColumn
p1424
tp1425
I1
s(Vinsert
p1426
I42
VSimpleName: metaParameter
p1427
tp1428
I1
s(Vinsert
p1429
I42
VSimpleName: ping
p1430
tp1431
I1
s(Vinsert
p1432
I42
VSimpleName: method
p1433
tp1434
I35
s(Vinsert
p1435
I42
VSimpleName: getParameters
p1436
tp1437
I1
s(Vinsert
p1438
I34
VNumberLiteral: 500
p1439
tp1440
I1
s(Vinsert
p1441
I43
VSimpleType: ResolverUtil
p1442
tp1443
I3
s(Vinsert
p1444
I45
VStringLiteral: "SUCCESS"
p1445
tp1446
I1
s(Vinsert
p1447
I42
VSimpleName: shouldFailForDuplicatedPropertyNames
p1448
tp1449
I1
s(Vinsert
p1450
I42
VSimpleName: methodCache
p1451
tp1452
I2
s(Vinsert
p1453
I43
VSimpleType: JavassistProxyFactory
p1454
tp1455
I2
s(Vinsert
p1456
I43
VSimpleType: Timestamp
p1457
tp1458
I5
s(Vinsert
p1459
I45
VStringLiteral: "${skipped} variable"
p1460
tp1461
I1
s(Vinsert
p1462
I42
VSimpleName: object
p1463
tp1464
I7
s(Vinsert
p1465
I45
VStringLiteral: "selectCalculator"
p1466
tp1467
I1
s(Vinsert
p1468
I43
VSimpleType: BaseBuilder
p1469
tp1470
I1
s(Vinsert
p1471
I45
VStringLiteral: "uu"
p1472
tp1473
I1
s(Vinsert
p1474
I40
VQualifiedName: MyEnum.ONE
p1475
tp1476
I1
s(Vinsert
p1477
I43
VSimpleType: Array
p1478
tp1479
I2
s(Vinsert
p1480
I42
VSimpleName: isSimpleType
p1481
tp1482
I1
s(Vinsert
p1483
I42
VSimpleName: canLoad
p1484
tp1485
I1
s(Vinsert
p1486
I42
VSimpleName: Array
p1487
tp1488
I4
s(Vinsert
p1489
I45
VStringLiteral: "java.util.LinkedHashMap"
p1490
tp1491
I1
s(Vinsert
p1492
I42
VSimpleName: getPermissions
p1493
tp1494
I1
s(Vinsert
p1495
I42
VSimpleName: setAdditionalParameter
p1496
tp1497
I2
s(Vinsert
p1498
I42
VSimpleName: defaultFetchSize
p1499
tp1500
I2
s(Vinsert
p1501
I42
VSimpleName: shouldFindAllPostLitesWithNestedResultMap
p1502
tp1503
I1
s(Vinsert
p1504
I42
VSimpleName: reflector
p1505
tp1506
I4
s(Vinsert
p1507
I42
VSimpleName: getUserById
p1508
tp1509
I1
s(Vinsert
p1510
I40
VQualifiedName: testClass.myInteger
p1511
tp1512
I1
s(Vinsert
p1513
I42
VSimpleName: typeHandlerClassName
p1514
tp1515
I1
s(Vinsert
p1516
I74
VParameterizedType: List<?>
p1517
tp1518
I5
s(Vinsert
p1519
I42
VSimpleName: JOIN
p1520
tp1521
I1
s(Vinsert
p1522
I42
VSimpleName: typeHandlerPackage
p1523
tp1524
I1
s(Vinsert
p1525
I42
VSimpleName: VelocityContext
p1526
tp1527
I1
s(Vinsert
p1528
I42
VSimpleName: record
p1529
tp1530
I3
s(Vinsert
p1531
I42
VSimpleName: name
p1532
tp1533
I32
s(Vinsert
p1534
I43
VSimpleType: MappedStatement
p1535
tp1536
I4
s(Vinsert
p1537
I42
VSimpleName: expectedException
p1538
tp1539
I8
s(Vinsert
p1540
I42
VSimpleName: valueOf
p1541
tp1542
I15
s(Vinsert
p1543
I43
VSimpleType: Order
p1544
tp1545
I2
s(Vinsert
p1546
I42
VSimpleName: setTheProp
p1547
tp1548
I1
s(Vinsert
p1549
I42
VSimpleName: DEFAULT_OBJECT_WRAPPER_FACTORY
p1550
tp1551
I1
s(Vinsert
p1552
I42
VSimpleName: shouldIgnoreLeadingAndTrailingSpaces
p1553
tp1554
I1
s(Vinsert
p1555
I43
VSimpleType: PrintWriter
p1556
tp1557
I3
s(Vinsert
p1558
I42
VSimpleName: Post
p1559
tp1560
I1
s(Vinsert
p1561
I32
VMethodInvocation
p1562
tp1563
I2037
s(Vinsert
p1564
I42
VSimpleName: getTimeout
p1565
tp1566
I3
s(Vinsert
p1567
I43
VSimpleType: User
p1568
tp1569
I27
s(Vinsert
p1570
I43
VSimpleType: AuthorMapper
p1571
tp1572
I5
s(Vinsert
p1573
I42
VSimpleName: parameterMap
p1574
tp1575
I4
s(Vinsert
p1576
I66
VTextElement:  current mapped statement
p1577
tp1578
I1
s(Vinsert
p1579
I42
VSimpleName: getConfiguration
p1580
tp1581
I17
s(Vinsert
p1582
I42
VSimpleName: getFirstName
p1583
tp1584
I1
s(Vinsert
p1585
I42
VSimpleName: MyDate
p1586
tp1587
I1
s(Vinsert
p1588
I42
VSimpleName: resultMapAnnotation
p1589
tp1590
I2
s(Vinsert
p1591
I42
VSimpleName: getCurrentIndex
p1592
tp1593
I1
s(Vinsert
p1594
I42
VSimpleName: ResultLoaderMap
p1595
tp1596
I2
s(Vinsert
p1597
I42
VSimpleName: BlogLite
p1598
tp1599
I1
s(Vinsert
p1600
I5
VArrayType: E[]
p1601
tp1602
I6
s(Vinsert
p1603
I3
VArrayCreation
p1604
tp1605
I11
s(Vinsert
p1606
I74
VParameterizedType: Collection<Object>
p1607
tp1608
I3
s(Vinsert
p1609
I42
VSimpleName: TodoLists
p1610
tp1611
I1
s(Vinsert
p1612
I42
VSimpleName: firstPrincipal
p1613
tp1614
I1
s(Vinsert
p1615
I42
VSimpleName: fetchNextUsingRowBound
p1616
tp1617
I1
s(Vinsert
p1618
I42
VSimpleName: shouldUseLog4J2
p1619
tp1620
I1
s(Vinsert
p1621
I42
VSimpleName: users
p1622
tp1623
I10
s(Vinsert
p1624
I42
VSimpleName: Result
p1625
tp1626
I1
s(Vinsert
p1627
I42
VSimpleName: test
p1628
tp1629
I4
s(Vinsert
p1630
I42
VSimpleName: pc
p1631
tp1632
I1
s(Vinsert
p1633
I42
VSimpleName: soleHandler
p1634
tp1635
I1
s(Vinsert
p1636
I43
VSimpleType: HashMap
p1637
tp1638
I11
s(Vinsert
p1639
I42
VSimpleName: Item
p1640
tp1641
I1
s(Vinsert
p1642
I42
VSimpleName: SELECT
p1643
tp1644
I1
s(Vinsert
p1645
I42
VSimpleName: setEnvironment
p1646
tp1647
I2
s(Vinsert
p1648
I42
VSimpleName: languageDriverClass
p1649
tp1650
I1
s(Vinsert
p1651
I42
VSimpleName: InsertMapper
p1652
tp1653
I1
s(Vinsert
p1654
I34
VNumberLiteral: 100d
p1655
tp1656
I1
s(Vinsert
p1657
I42
VSimpleName: selectPosts
p1658
tp1659
I1
s(Vinsert
p1660
I42
VSimpleName: replacePlaceholder
p1661
tp1662
I2
s(Vinsert
p1663
I42
VSimpleName: FileOutputStream
p1664
tp1665
I2
s(Vinsert
p1666
I34
VNumberLiteral: 1970
p1667
tp1668
I1
s(Vinsert
p1669
I42
VSimpleName: open
p1670
tp1671
I1
s(Vinsert
p1672
I42
VSimpleName: ExpressionEvaluator
p1673
tp1674
I1
s(Vinsert
p1675
I42
VSimpleName: jdbc3KeyGenerator
p1676
tp1677
I2
s(Vinsert
p1678
I42
VSimpleName: PersonMapper
p1679
tp1680
I8
s(Vinsert
p1681
I42
VSimpleName: ex
p1682
tp1683
I4
s(Vinsert
p1684
I42
VSimpleName: getNestedResultMapId
p1685
tp1686
I2
s(Vinsert
p1687
I42
VSimpleName: readResolve
p1688
tp1689
I1
s(Vinsert
p1690
I42
VSimpleName: getDeclaredMethod
p1691
tp1692
I2
s(Vinsert
p1693
I42
VSimpleName: Principal
p1694
tp1695
I1
s(Vinsert
p1696
I42
VSimpleName: getOwner
p1697
tp1698
I1
s(Vinsert
p1699
I45
VStringLiteral: "STDOUT_LOGGING"
p1700
tp1701
I1
s(Vinsert
p1702
I45
VStringLiteral: "unused"
p1703
tp1704
I1
s(Vinsert
p1705
I40
VQualifiedName: resultLoader.mappedStatement
p1706
tp1707
I1
s(Vinsert
p1708
I42
VSimpleName: parameter
p1709
tp1710
I19
s(Vinsert
p1711
I42
VSimpleName: dao
p1712
tp1713
I1
s(Vinsert
p1714
I42
VSimpleName: MarkerFactory
p1715
tp1716
I1
s(Vinsert
p1717
I42
VSimpleName: lastPeriod
p1718
tp1719
I1
s(Vinsert
p1720
I43
VSimpleType: DefaultResultHandler
p1721
tp1722
I3
s(Vinsert
p1723
I42
VSimpleName: getDeclaredFields
p1724
tp1725
I1
s(Vinsert
p1726
I42
VSimpleName: configuration
p1727
tp1728
I67
s(Vinsert
p1729
I42
VSimpleName: UnpooledDataSourceFactory
p1730
tp1731
I1
s(Vinsert
p1732
I42
VSimpleName: matcher
p1733
tp1734
I1
s(Vinsert
p1735
I42
VSimpleName: setId1
p1736
tp1737
I1
s(Vinsert
p1738
I45
VStringLiteral: "org/apache/ibatis/submitted/multipleresultsetswithassociation/CreateDB3.sql"
p1739
tp1740
I1
s(Vinsert
p1741
I42
VSimpleName: placeholderContext
p1742
tp1743
I2
s(Vinsert
p1744
I42
VSimpleName: size
p1745
tp1746
I39
s(Vinsert
p1747
I43
VSimpleType: UnMappedColumAutoMapping
p1748
tp1749
I1
s(Vinsert
p1750
I42
VSimpleName: convertToObjectArray
p1751
tp1752
I2
s(Vinsert
p1753
I74
VParameterizedType: List<PostLite>
p1754
tp1755
I1
s(Vinsert
p1756
I42
VSimpleName: ResultSetWrapper
p1757
tp1758
I1
s(Vinsert
p1759
I42
VSimpleName: buf
p1760
tp1761
I1
s(Vinsert
p1762
I42
VSimpleName: warning
p1763
tp1764
I1
s(Vinsert
p1765
I42
VSimpleName: createSqlSource
p1766
tp1767
I3
s(Vinsert
p1768
I42
VSimpleName: isEnum
p1769
tp1770
I1
s(Vinsert
p1771
I42
VSimpleName: CachingExecutor
p1772
tp1773
I1
s(Vinsert
p1774
I42
VSimpleName: Binome
p1775
tp1776
I1
s(Vinsert
p1777
I42
VSimpleName: selectOne
p1778
tp1779
I3
s(Vinsert
p1780
I42
VSimpleName: IfSqlNode
p1781
tp1782
I2
s(Vinsert
p1783
I42
VSimpleName: item
p1784
tp1785
I2
s(Vinsert
p1786
I42
VSimpleName: typeHandlerAlias
p1787
tp1788
I1
s(Vinsert
p1789
I42
VSimpleName: load
p1790
tp1791
I2
s(Vinsert
p1792
I42
VSimpleName: getField
p1793
tp1794
I1
s(Vinsert
p1795
I42
VSimpleName: sqlMapper
p1796
tp1797
I7
s(Vinsert
p1798
I42
VSimpleName: setPoolMaximumIdleConnections
p1799
tp1800
I1
s(Vinsert
p1801
I42
VSimpleName: assertNull
p1802
tp1803
I2
s(Vinsert
p1804
I42
VSimpleName: argType
p1805
tp1806
I1
s(Vinsert
p1807
I42
VSimpleName: argValues
p1808
tp1809
I2
s(Vinsert
p1810
I42
VSimpleName: Reader
p1811
tp1812
I11
s(Vinsert
p1813
I42
VSimpleName: firstMethod
p1814
tp1815
I1
s(Vinsert
p1816
I40
VQualifiedName: org.apache.ibatis.reflection.ReflectorFactory
p1817
tp1818
I1
s(Vinsert
p1819
I43
VSimpleType: FileInputStream
p1820
tp1821
I1
s(Vinsert
p1822
I42
VSimpleName: reset
p1823
tp1824
I1
s(Vinsert
p1825
I42
VSimpleName: parts
p1826
tp1827
I1
s(Vinsert
p1828
I42
VSimpleName: listIterator
p1829
tp1830
I1
s(Vinsert
p1831
I34
VNumberLiteral: 5
p1832
tp1833
I4
s(Vinsert
p1834
I42
VSimpleName: unwrapThrowable
p1835
tp1836
I4
s(Vinsert
p1837
I42
VSimpleName: createDynamicSqlSource
p1838
tp1839
I1
s(Vinsert
p1840
I42
VSimpleName: builder
p1841
tp1842
I9
s(Vinsert
p1843
I34
VNumberLiteral: 10000
p1844
tp1845
I2
s(Vinsert
p1846
I42
VSimpleName: hasStatement
p1847
tp1848
I1
s(Vinsert
p1849
I42
VSimpleName: author2
p1850
tp1851
I4
s(Vinsert
p1852
I42
VSimpleName: sqlSession1
p1853
tp1854
I3
s(Vinsert
p1855
I45
VStringLiteral: "Failed cache initialization for '"
p1856
tp1857
I1
s(Vinsert
p1858
I43
VSimpleType: ByteArrayOutputStream
p1859
tp1860
I1
s(Vinsert
p1861
I43
VSimpleType: ResultMapResolver
p1862
tp1863
I1
s(Vinsert
p1864
I42
VSimpleName: isEmpty
p1865
tp1866
I9
s(Vinsert
p1867
I45
VStringLiteral: "Expected exception to be thrown due to statement that does not exist."
p1868
tp1869
I1
s(Vinsert
p1870
I42
VSimpleName: setDefaultDriverClass
p1871
tp1872
I1
s(Vinsert
p1873
I42
VSimpleName: home
p1874
tp1875
I2
s(Vinsert
p1876
I42
VSimpleName: contents
p1877
tp1878
I3
s(Vinsert
p1879
I42
VSimpleName: incompleteStatements
p1880
tp1881
I1
s(Vinsert
p1882
I42
VSimpleName: shouldGetOneUser
p1883
tp1884
I1
s(Vinsert
p1885
I43
VSimpleType: SQLWarning
p1886
tp1887
I1
s(Vinsert
p1888
I42
VSimpleName: ByteArrayOutputStream
p1889
tp1890
I1
s(Vinsert
p1891
I43
VSimpleType: DepartmentMapper
p1892
tp1893
I1
s(Vinsert
p1894
I42
VSimpleName: resultMapping
p1895
tp1896
I6
s(Vinsert
p1897
I42
VSimpleName: getInjectionFilter
p1898
tp1899
I2
s(Vinsert
p1900
I45
VStringLiteral: "org.apache.ibatis.mapping.ResultSetType.bbb"
p1901
tp1902
I1
s(Vinsert
p1903
I42
VSimpleName: person1
p1904
tp1905
I2
s(Vinsert
p1906
I42
VSimpleName: configurationFactory
p1907
tp1908
I1
s(Vinsert
p1909
I45
VStringLiteral: "Flintstone"
p1910
tp1911
I1
s(Vinsert
p1912
I45
VStringLiteral: " FROM INFORMATION_SCHEMA.SYSTEM_USERS"
p1913
tp1914
I1
s(Vinsert
p1915
I40
VQualifiedName: Integer.TYPE
p1916
tp1917
I1
s(Vinsert
p1918
I43
VSimpleType: Iterator
p1919
tp1920
I1
s(Vinsert
p1921
I42
VSimpleName: isNull
p1922
tp1923
I3
s(Vinsert
p1924
I45
VStringLiteral: "org/apache/ibatis/submitted/associationtype/CreateDB.sql"
p1925
tp1926
I1
s(Vinsert
p1927
I42
VSimpleName: getVariables
p1928
tp1929
I1
s(Vinsert
p1930
I42
VSimpleName: DeferredLoad
p1931
tp1932
I1
s(Vinsert
p1933
I42
VSimpleName: array
p1934
tp1935
I7
s(Vinsert
p1936
I42
VSimpleName: productMapper
p1937
tp1938
I1
s(Vinsert
p1939
I42
VSimpleName: getProxyFactory
p1940
tp1941
I1
s(Vinsert
p1942
I42
VSimpleName: will
p1943
tp1944
I1
s(Vinsert
p1945
I42
VSimpleName: newProxyFactory
p1946
tp1947
I1
s(Vinsert
p1948
I42
VSimpleName: property
p1949
tp1950
I13
s(Vinsert
p1951
I42
VSimpleName: getMap
p1952
tp1953
I1
s(Vinsert
p1954
I42
VSimpleName: setAccessible
p1955
tp1956
I1
s(Vinsert
p1957
I43
VSimpleType: Serializable
p1958
tp1959
I1
s(Vinsert
p1960
I42
VSimpleName: findOneUsingConstructor
p1961
tp1962
I1
s(Vinsert
p1963
I42
VSimpleName: mapperClasses
p1964
tp1965
I1
s(Vinsert
p1966
I42
VSimpleName: checking
p1967
tp1968
I2
s(Vinsert
p1969
I45
VStringLiteral: "prop"
p1970
tp1971
I3
s(Vinsert
p1972
I42
VSimpleName: ResultObjectProxy
p1973
tp1974
I5
s(Vinsert
p1975
I42
VSimpleName: attributes
p1976
tp1977
I2
s(Vinsert
p1978
I45
VStringLiteral: " to "
p1979
tp1980
I1
s(Vinsert
p1981
I42
VSimpleName: parent
p1982
tp1983
I7
s(Vinsert
p1984
I40
VQualifiedName: ResultMapping.Builder
p1985
tp1986
I2
s(Vinsert
p1987
I42
VSimpleName: refName
p1988
tp1989
I1
s(Vinsert
p1990
I42
VSimpleName: PersistenceException
p1991
tp1992
I4
s(Vinsert
p1993
I45
VStringLiteral: "org/apache/ibatis/submitted/multipleiterates/CreateDB.sql"
p1994
tp1995
I1
s(Vinsert
p1996
I42
VSimpleName: invoke
p1997
tp1998
I6
s(Vinsert
p1999
I66
VTextElement: Logger
p2000
tp2001
I1
s(Vinsert
p2002
I74
VParameterizedType: Entry<String,String>
p2003
tp2004
I2
s(Vinsert
p2005
I42
VSimpleName: attr
p2006
tp2007
I2
s(Vinsert
p2008
I42
VSimpleName: getInt
p2009
tp2010
I8
s(Vinsert
p2011
I27
VInfixExpression: ==
p2012
tp2013
I51
s(Vinsert
p2014
I45
VStringLiteral: "No setter found for the keyProperty '"
p2015
tp2016
I1
s(Vinsert
p2017
I42
VSimpleName: selectBlogByIdUsingConstructor
p2018
tp2019
I1
s(Vinsert
p2020
I9
VBooleanLiteral: true
p2021
tp2022
I19
s(Vinsert
p2023
I42
VSimpleName: callback
p2024
tp2025
I1
s(Vinsert
p2026
I58
VVariableDeclarationExpression
p2027
tp2028
I10
s(Vinsert
p2029
I42
VSimpleName: isUseActualParamName
p2030
tp2031
I1
s(Vinsert
p2032
I45
VStringLiteral: "FIFO"
p2033
tp2034
I1
s(Vinsert
p2035
I42
VSimpleName: keyColumnNames
p2036
tp2037
I1
s(Vinsert
p2038
I42
VSimpleName: mapperProxyFactory
p2039
tp2040
I2
s(Vinsert
p2041
I42
VSimpleName: manager
p2042
tp2043
I5
s(Vinsert
p2044
I45
VStringLiteral: "   or\u005ct ID = ?  "
p2045
tp2046
I1
s(Vinsert
p2047
I42
VSimpleName: resultType
p2048
tp2049
I6
s(Vinsert
p2050
I42
VSimpleName: MapperProxy
p2051
tp2052
I1
s(Vinsert
p2053
I42
VSimpleName: T
p2054
tp2055
I11
s(Vinsert
p2056
I42
VSimpleName: writeLock
p2057
tp2058
I1
s(Vinsert
p2059
I42
VSimpleName: selectBlogsWithAutors
p2060
tp2061
I1
s(Vinsert
p2062
I42
VSimpleName: defaultCharset
p2063
tp2064
I1
s(Vinsert
p2065
I42
VSimpleName: column
p2066
tp2067
I3
s(Vinsert
p2068
I42
VSimpleName: startsWith
p2069
tp2070
I4
s(Vinsert
p2071
I42
VSimpleName: lazyLoadTriggerMethods
p2072
tp2073
I1
s(Vinsert
p2074
I42
VSimpleName: AutoConstructorMapper
p2075
tp2076
I1
s(Vinsert
p2077
I42
VSimpleName: resultSet
p2078
tp2079
I1
s(Vinsert
p2080
I42
VSimpleName: rollback
p2081
tp2082
I1
s(Vinsert
p2083
I42
VSimpleName: javaType
p2084
tp2085
I5
s(Vinsert
p2086
I42
VSimpleName: OgnlCache
p2087
tp2088
I2
s(Vinsert
p2089
I43
VSimpleType: NodeList
p2090
tp2091
I1
s(Vinsert
p2092
I42
VSimpleName: K
p2093
tp2094
I1
s(Vinsert
p2095
I42
VSimpleName: fill
p2096
tp2097
I1
s(Vinsert
p2098
I42
VSimpleName: key1
p2099
tp2100
I1
s(Vinsert
p2101
I39
VPrimitiveType: double
p2102
tp2103
I1
s(Vinsert
p2104
I42
VSimpleName: PropertyTokenizer
p2105
tp2106
I2
s(Vinsert
p2107
I42
VSimpleName: testLoadLazyDeserialize
p2108
tp2109
I1
s(Vinsert
p2110
I40
VQualifiedName: ResultFlag.ASSOCIATION
p2111
tp2112
I1
s(Vinsert
p2113
I40
VQualifiedName: Jdk.parameterExists
p2114
tp2115
I1
s(Vinsert
p2116
I42
VSimpleName: getFlags
p2117
tp2118
I1
s(Vinsert
p2119
I42
VSimpleName: ResultColumnCache
p2120
tp2121
I4
s(Vinsert
p2122
I42
VSimpleName: typeCode
p2123
tp2124
I1
s(Vinsert
p2125
I42
VSimpleName: getAnnotation
p2126
tp2127
I6
s(Vinsert
p2128
I43
VSimpleType: Cache
p2129
tp2130
I2
s(Vinsert
p2131
I42
VSimpleName: isLoggable
p2132
tp2133
I1
s(Vinsert
p2134
I45
VStringLiteral: "org/apache/ibatis/logging/mybatis-config.xml"
p2135
tp2136
I1
s(Vinsert
p2137
I42
VSimpleName: getMessageFactory
p2138
tp2139
I1
s(Vinsert
p2140
I42
VSimpleName: getNString
p2141
tp2142
I1
s(Vinsert
p2143
I43
VSimpleType: ObjectStreamException
p2144
tp2145
I1
s(Vinsert
p2146
I42
VSimpleName: fromString
p2147
tp2148
I1
s(Vinsert
p2149
I42
VSimpleName: exactReturnType
p2150
tp2151
I1
s(Vinsert
p2152
I42
VSimpleName: forClass
p2153
tp2154
I3
s(Vinsert
p2155
I43
VSimpleType: Constructor
p2156
tp2157
I4
s(Vinsert
p2158
I42
VSimpleName: userBean
p2159
tp2160
I4
s(Vinsert
p2161
I43
VSimpleType: KeyBean
p2162
tp2163
I1
s(Vinsert
p2164
I42
VSimpleName: driverClassLoader
p2165
tp2166
I1
s(Vinsert
p2167
I43
VSimpleType: Author
p2168
tp2169
I9
s(Vinsert
p2170
I42
VSimpleName: columnNames
p2171
tp2172
I2
s(Vinsert
p2173
I42
VSimpleName: getLocalCacheScope
p2174
tp2175
I1
s(Vinsert
p2176
I74
VParameterizedType: List<Object>
p2177
tp2178
I6
s(Vinsert
p2179
I42
VSimpleName: mapKey
p2180
tp2181
I3
s(Vinsert
p2182
I43
VSimpleType: BlogLite
p2183
tp2184
I1
s(Vinsert
p2185
I42
VSimpleName: testShouldFlushLocalSessionCacheOnQuery
p2186
tp2187
I1
s(Vinsert
p2188
I16
VConditionalExpression
p2189
tp2190
I21
s(Vinsert
p2191
I42
VSimpleName: blogs
p2192
tp2193
I7
s(Vinsert
p2194
I42
VSimpleName: addResource
p2195
tp2196
I2
s(Vinsert
p2197
I42
VSimpleName: PostLite
p2198
tp2199
I1
s(Vinsert
p2200
I42
VSimpleName: parse
p2201
tp2202
I15
s(Vinsert
p2203
I43
VSimpleType: PackageMapper
p2204
tp2205
I1
s(Vinsert
p2206
I42
VSimpleName: SuppressWarnings
p2207
tp2208
I2
s(Vinsert
p2209
I45
VStringLiteral: "com.mysql.jdbc.Driver"
p2210
tp2211
I1
s(Vinsert
p2212
I42
VSimpleName: setPoolMaximumCheckoutTime
p2213
tp2214
I1
s(Vinsert
p2215
I42
VSimpleName: newXNode
p2216
tp2217
I3
s(Vinsert
p2218
I42
VSimpleName: propertiesMap
p2219
tp2220
I1
s(Vinsert
p2221
I42
VSimpleName: keyColumn
p2222
tp2223
I3
s(Vinsert
p2224
I42
VSimpleName: Enum
p2225
tp2226
I1
s(Vinsert
p2227
I42
VSimpleName: getPosts
p2228
tp2229
I3
s(Vinsert
p2230
I74
VParameterizedType: List<TodoLists>
p2231
tp2232
I1
s(Vinsert
p2233
I42
VSimpleName: getIndexedName
p2234
tp2235
I1
s(Vinsert
p2236
I42
VSimpleName: langTypeClass
p2237
tp2238
I4
s(Vinsert
p2239
I42
VSimpleName: result
p2240
tp2241
I32
s(Vinsert
p2242
I9
VBooleanLiteral: false
p2243
tp2244
I16
s(Vinsert
p2245
I43
VSimpleType: MultiDbMapper
p2246
tp2247
I4
s(Vinsert
p2248
I45
VStringLiteral: "/employee/birth_date/year"
p2249
tp2250
I1
s(Vinsert
p2251
I42
VSimpleName: statementParameterMap
p2252
tp2253
I2
s(Vinsert
p2254
I42
VSimpleName: isPrimitive
p2255
tp2256
I4
s(Vinsert
p2257
I42
VSimpleName: Permission
p2258
tp2259
I1
s(Vinsert
p2260
I42
VSimpleName: parser
p2261
tp2262
I7
s(Vinsert
p2263
I42
VSimpleName: getBrakes
p2264
tp2265
I1
s(Vinsert
p2266
I42
VSimpleName: nestedQuery
p2267
tp2268
I1
s(Vinsert
p2269
I42
VSimpleName: assertTrue
p2270
tp2271
I16
s(Vinsert
p2272
I42
VSimpleName: thatObj
p2273
tp2274
I1
s(Vinsert
p2275
I42
VSimpleName: getGroups
p2276
tp2277
I1
s(Vinsert
p2278
I42
VSimpleName: error
p2279
tp2280
I8
s(Vinsert
p2281
I42
VSimpleName: actualTypeArguments
p2282
tp2283
I1
s(Vinsert
p2284
I42
VSimpleName: Mapper
p2285
tp2286
I29
s(Vinsert
p2287
I65
VTagElement
p2288
tp2289
I1
s(Vinsert
p2290
I45
VStringLiteral: "column"
p2291
tp2292
I11
s(Vinsert
p2293
I42
VSimpleName: statementBuilder
p2294
tp2295
I1
s(Vinsert
p2296
I42
VSimpleName: getActualTypeArguments
p2297
tp2298
I4
s(Vinsert
p2299
I45
VStringLiteral: "Expression test: ${name.indexOf('v')} / ${name in {'Bob', 'Steve'\u005c\u005c} ? 'yes' : 'no'}."
p2300
tp2301
I1
s(Vinsert
p2302
I42
VSimpleName: Closeable
p2303
tp2304
I1
s(Vinsert
p2305
I42
VSimpleName: paramIdx1
p2306
tp2307
I1
s(Vinsert
p2308
I42
VSimpleName: Resources
p2309
tp2310
I44
s(Vinsert
p2311
I42
VSimpleName: loaderMap
p2312
tp2313
I1
s(Vinsert
p2314
I42
VSimpleName: entries
p2315
tp2316
I1
s(Vinsert
p2317
I42
VSimpleName: getLog
p2318
tp2319
I12
s(Vinsert
p2320
I42
VSimpleName: expectedConnectionTypeCode
p2321
tp2322
I1
s(Vinsert
p2323
I45
VStringLiteral: "Unknown type "
p2324
tp2325
I1
s(Vinsert
p2326
I42
VSimpleName: deferLoad
p2327
tp2328
I1
s(Vinsert
p2329
I42
VSimpleName: getJdbcTypeForNull
p2330
tp2331
I1
s(Vinsert
p2332
I42
VSimpleName: st
p2333
tp2334
I1
s(Vinsert
p2335
I45
VStringLiteral: "MyBatis Migrations %s%n"
p2336
tp2337
I1
s(Vinsert
p2338
I43
VSimpleType: Results
p2339
tp2340
I1
s(Vinsert
p2341
I42
VSimpleName: getNameId
p2342
tp2343
I1
s(Vinsert
p2344
I42
VSimpleName: getSubString
p2345
tp2346
I1
s(Vinsert
p2347
I42
VSimpleName: ALL_TYPE_HANDLERS_MAP
p2348
tp2349
I2
s(Vinsert
p2350
I42
VSimpleName: blocking
p2351
tp2352
I1
s(Vinsert
p2353
I42
VSimpleName: isSameAs
p2354
tp2355
I1
s(Vinsert
p2356
I43
VSimpleType: ScriptingException
p2357
tp2358
I1
s(Vinsert
p2359
I42
VSimpleName: typeHandler
p2360
tp2361
I8
s(Vinsert
p2362
I42
VSimpleName: getMetaData
p2363
tp2364
I1
s(Vinsert
p2365
I74
VParameterizedType: Class<? extends VFS>
p2366
tp2367
I1
s(Vinsert
p2368
I42
VSimpleName: content
p2369
tp2370
I3
s(Vinsert
p2371
I42
VSimpleName: primitiveToWrappers
p2372
tp2373
I1
s(Vinsert
p2374
I43
VSimpleType: MetaClass
p2375
tp2376
I2
s(Vinsert
p2377
I45
VStringLiteral: "9999"
p2378
tp2379
I1
s(Vinsert
p2380
I34
VNumberLiteral: 999
p2381
tp2382
I2
s(Vinsert
p2383
I42
VSimpleName: setExecutorWrapper
p2384
tp2385
I1
s(Vinsert
p2386
I42
VSimpleName: methodToProperty
p2387
tp2388
I2
s(Vinsert
p2389
I42
VSimpleName: bind
p2390
tp2391
I1
s(Vinsert
p2392
I42
VSimpleName: getNullableResult
p2393
tp2394
I18
s(Vinsert
p2395
I42
VSimpleName: interceptsAnnotation
p2396
tp2397
I1
s(Vinsert
p2398
I42
VSimpleName: getColumnNames
p2399
tp2400
I3
s(Vinsert
p2401
I28
VInitializer
p2402
tp2403
I5
s(Vinsert
p2404
I42
VSimpleName: getResultMaps
p2405
tp2406
I2
s(Vinsert
p2407
I42
VSimpleName: cs
p2408
tp2409
I2
s(Vinsert
p2410
I42
VSimpleName: getUsersFromList
p2411
tp2412
I1
s(Vinsert
p2413
I42
VSimpleName: fqcn
p2414
tp2415
I1
s(Vinsert
p2416
I42
VSimpleName: instance
p2417
tp2418
I4
s(Vinsert
p2419
I42
VSimpleName: map3Entry
p2420
tp2421
I1
s(Vinsert
p2422
I42
VSimpleName: flushCache
p2423
tp2424
I1
s(Vinsert
p2425
I45
VStringLiteral: "Valentina"
p2426
tp2427
I1
s(Vinsert
p2428
I42
VSimpleName: prop
p2429
tp2430
I2
s(Vinsert
p2431
I42
VSimpleName: sqlDate
p2432
tp2433
I1
s(Vinsert
p2434
I42
VSimpleName: NestedBeanMapEntry
p2435
tp2436
I2
s(Vinsert
p2437
I42
VSimpleName: flushStatements
p2438
tp2439
I3
s(Vinsert
p2440
I74
VParameterizedType: List<Blog>
p2441
tp2442
I2
s(Vinsert
p2443
I45
VStringLiteral: "Error creating SqlSource for SqlProvider.  Cause: java.lang.NoSuchMethodException: java.lang.Object.type()"
p2444
tp2445
I1
s(Vinsert
p2446
I42
VSimpleName: ResultContext
p2447
tp2448
I5
s(Vinsert
p2449
I38
VPrefixExpression: -
p2450
tp2451
I1
s(Vinsert
p2452
I42
VSimpleName: CollectionWrapper
p2453
tp2454
I1
s(Vinsert
p2455
I42
VSimpleName: ResultFlag
p2456
tp2457
I1
s(Vinsert
p2458
I43
VSimpleType: ResultLoaderMap.LoadPair
p2459
tp2460
I1
s(Vinsert
p2461
I42
VSimpleName: Builder
p2462
tp2463
I1
s(Vinsert
p2464
I42
VSimpleName: y
p2465
tp2466
I1
s(Vinsert
p2467
I42
VSimpleName: File
p2468
tp2469
I3
s(Vinsert
p2470
I42
VSimpleName: statementId
p2471
tp2472
I4
s(Vinsert
p2473
I74
VParameterizedType: Constructor<? extends Log>
p2474
tp2475
I1
s(Vinsert
p2476
I45
VStringLiteral: "package"
p2477
tp2478
I1
s(Vinsert
p2479
I42
VSimpleName: getParameterTypes
p2480
tp2481
I1
s(Vinsert
p2482
I42
VSimpleName: containsKey
p2483
tp2484
I8
s(Vinsert
p2485
I42
VSimpleName: DynamicContext
p2486
tp2487
I10
s(Vinsert
p2488
I42
VSimpleName: fout
p2489
tp2490
I1
s(Vinsert
p2491
I42
VSimpleName: getChannel
p2492
tp2493
I1
s(Vinsert
p2494
I45
VStringLiteral: "LRU"
p2495
tp2496
I1
s(Vinsert
p2497
I42
VSimpleName: getCurrentNamespace
p2498
tp2499
I2
s(Vinsert
p2500
I43
VSimpleType: Alias
p2501
tp2502
I2
s(Vinsert
p2503
I42
VSimpleName: CharSequence
p2504
tp2505
I1
s(Vinsert
p2506
I42
VSimpleName: getColumnClassName
p2507
tp2508
I3
s(Vinsert
p2509
I34
VNumberLiteral: 0
p2510
tp2511
I37
s(Vinsert
p2512
I42
VSimpleName: before
p2513
tp2514
I3
s(Vinsert
p2515
I42
VSimpleName: inputStream
p2516
tp2517
I8
s(Vinsert
p2518
I42
VSimpleName: getSimpleName
p2519
tp2520
I1
s(Vinsert
p2521
I42
VSimpleName: createCacheKey
p2522
tp2523
I1
s(Vinsert
p2524
I42
VSimpleName: Log
p2525
tp2526
I9
s(Vinsert
p2527
I66
VTextElement:  that will be used to filter classes
p2528
tp2529
I1
s(Vinsert
p2530
I42
VSimpleName: append
p2531
tp2532
I34
s(Vinsert
p2533
I43
VSimpleType: ObjectStreamClass
p2534
tp2535
I1
s(Vinsert
p2536
I42
VSimpleName: selectList
p2537
tp2538
I16
s(Vinsert
p2539
I45
VStringLiteral: "[noSuchConstructorArg]"
p2540
tp2541
I1
s(Vinsert
p2542
I45
VStringLiteral: "PersonItemPair("
p2543
tp2544
I1
s(Vinsert
p2545
I42
VSimpleName: dataSource
p2546
tp2547
I11
s(Vinsert
p2548
I42
VSimpleName: selectById
p2549
tp2550
I2
s(Vinsert
p2551
I42
VSimpleName: resolveReturnType
p2552
tp2553
I1
s(Vinsert
p2554
I70
VEnhancedForStatement
p2555
tp2556
I26
s(Vinsert
p2557
I43
VSimpleType: ImmutablePOJOMapper
p2558
tp2559
I1
s(Vinsert
p2560
I42
VSimpleName: n
p2561
tp2562
I1
s(Vinsert
p2563
I42
VSimpleName: store
p2564
tp2565
I1
s(Vinsert
p2566
I42
VSimpleName: baos
p2567
tp2568
I1
s(Vinsert
p2569
I42
VSimpleName: principalPermissions
p2570
tp2571
I3
s(Vinsert
p2572
I42
VSimpleName: Marker
p2573
tp2574
I1
s(Vinsert
p2575
I42
VSimpleName: closeToken
p2576
tp2577
I2
s(Vinsert
p2578
I42
VSimpleName: getNodeType
p2579
tp2580
I1
s(Vinsert
p2581
I42
VSimpleName: work
p2582
tp2583
I1
s(Vinsert
p2584
I68
VMethodRef
p2585
tp2586
I2
s(Vinsert
p2587
I42
VSimpleName: execute
p2588
tp2589
I3
s(Vinsert
p2590
I40
VQualifiedName: Section.NEWS
p2591
tp2592
I1
s(Vinsert
p2593
I74
VParameterizedType: ArrayList<SqlNode>
p2594
tp2595
I1
s(Vinsert
p2596
I40
VQualifiedName: mappedStatement.configuration
p2597
tp2598
I1
s(Vinsert
p2599
I42
VSimpleName: printStream
p2600
tp2601
I4
s(Vinsert
p2602
I40
VQualifiedName: keyProperties.length
p2603
tp2604
I1
s(Vinsert
p2605
I45
VStringLiteral: "foo"
p2606
tp2607
I2
s(Vinsert
p2608
I42
VSimpleName: updateCount
p2609
tp2610
I1
s(Vinsert
p2611
I42
VSimpleName: length
p2612
tp2613
I16
s(Vinsert
p2614
I42
VSimpleName: setCallback
p2615
tp2616
I1
s(Vinsert
p2617
I42
VSimpleName: extendedResultMappingsIter
p2618
tp2619
I1
s(Vinsert
p2620
I42
VSimpleName: LanguageDriver
p2621
tp2622
I2
s(Vinsert
p2623
I42
VSimpleName: BeforeClass
p2624
tp2625
I1
s(Vinsert
p2626
I42
VSimpleName: selectAuthor
p2627
tp2628
I2
s(Vinsert
p2629
I43
VSimpleType: NestedBeanMapEntry
p2630
tp2631
I1
s(Vinsert
p2632
I43
VSimpleType: Field
p2633
tp2634
I6
s(Vinsert
p2635
I74
VParameterizedType: List<SqlNode>
p2636
tp2637
I1
s(Vinsert
p2638
I42
VSimpleName: typeName
p2639
tp2640
I1
s(Vinsert
p2641
I42
VSimpleName: isReference
p2642
tp2643
I1
s(Vinsert
p2644
I42
VSimpleName: metaData
p2645
tp2646
I2
s(Vinsert
p2647
I42
VSimpleName: classForName
p2648
tp2649
I5
s(Vinsert
p2650
I45
VStringLiteral: "Book1"
p2651
tp2652
I1
s(Vinsert
p2653
I42
VSimpleName: books
p2654
tp2655
I3
s(Vinsert
p2656
I45
VStringLiteral: "org.apache.ibatis.submitted.column_prefix.MapperAutoMapping.selectBrandWithProducts"
p2657
tp2658
I1
s(Vinsert
p2659
I42
VSimpleName: lastIndexOf
p2660
tp2661
I3
s(Vinsert
p2662
I42
VSimpleName: getMethod
p2663
tp2664
I7
s(Vinsert
p2665
I42
VSimpleName: Types
p2666
tp2667
I1
s(Vinsert
p2668
I42
VSimpleName: answer
p2669
tp2670
I14
s(Vinsert
p2671
I42
VSimpleName: compile
p2672
tp2673
I2
s(Vinsert
p2674
I45
VStringLiteral: "class"
p2675
tp2676
I1
s(Vinsert
p2677
I42
VSimpleName: preparedStatement
p2678
tp2679
I1
s(Vinsert
p2680
I12
VCatchClause
p2681
tp2682
I14
s(Vinsert
p2683
I45
VStringLiteral: "domain.blog.mappers.AuthorMapper.selectAllAuthors"
p2684
tp2685
I1
s(Vinsert
p2686
I45
VStringLiteral: "closeConnection"
p2687
tp2688
I1
s(Vinsert
p2689
I65
VTagElement: @link
p2690
tp2691
I1
s(Vinsert
p2692
I42
VSimpleName: ErrorContext
p2693
tp2694
I1
s(Vinsert
p2695
I42
VSimpleName: shouldResolveGenericMethodGetterType
p2696
tp2697
I1
s(Vinsert
p2698
I45
VStringLiteral: "707070656505050302797979792923232303"
p2699
tp2700
I1
s(Vinsert
p2701
I42
VSimpleName: th
p2702
tp2703
I1
s(Vinsert
p2704
I42
VSimpleName: warn
p2705
tp2706
I2
s(Vinsert
p2707
I42
VSimpleName: processBatch
p2708
tp2709
I1
s(Vinsert
p2710
I42
VSimpleName: setInt
p2711
tp2712
I2
s(Vinsert
p2713
I40
VQualifiedName: that.id
p2714
tp2715
I1
s(Vinsert
p2716
I42
VSimpleName: Exception
p2717
tp2718
I55
s(Vinsert
p2719
I42
VSimpleName: shouldUseSpecifiedId
p2720
tp2721
I2
s(Vinsert
p2722
I45
VStringLiteral: "org/apache/ibatis/submitted/javassist/CreateDB.sql"
p2723
tp2724
I1
s(Vinsert
p2725
I42
VSimpleName: setLastName
p2726
tp2727
I3
s(Vinsert
p2728
I45
VStringLiteral: "c"
p2729
tp2730
I1
s(Vinsert
p2731
I42
VSimpleName: LinkedHashMap
p2732
tp2733
I1
s(Vinsert
p2734
I42
VSimpleName: cached
p2735
tp2736
I1
s(Vinsert
p2737
I43
VSimpleType: Thread
p2738
tp2739
I1
s(Vinsert
p2740
I42
VSimpleName: lazyLoader
p2741
tp2742
I1
s(Vinsert
p2743
I42
VSimpleName: props
p2744
tp2745
I14
s(Vinsert
p2746
I43
VSimpleType: BigInteger
p2747
tp2748
I3
s(Vinsert
p2749
I42
VSimpleName: annotationBuilder
p2750
tp2751
I2
s(Vinsert
p2752
I74
VParameterizedType: Collection<E>
p2753
tp2754
I1
s(Vinsert
p2755
I45
VStringLiteral: "("
p2756
tp2757
I1
s(Vinsert
p2758
I42
VSimpleName: primitiveType
p2759
tp2760
I1
s(Vinsert
p2761
I42
VSimpleName: closeable
p2762
tp2763
I3
s(Vinsert
p2764
I43
VSimpleType: Clob
p2765
tp2766
I2
s(Vinsert
p2767
I42
VSimpleName: removeCRs
p2768
tp2769
I3
s(Vinsert
p2770
I42
VSimpleName: ReflectorFactory
p2771
tp2772
I5
s(Vinsert
p2773
I42
VSimpleName: discriminatedResultMap
p2774
tp2775
I1
s(Vinsert
p2776
I40
VQualifiedName: java.util.Arrays
p2777
tp2778
I2
s(Vinsert
p2779
I42
VSimpleName: StatementUtil
p2780
tp2781
I1
s(Vinsert
p2782
I43
VSimpleType: TypeAliasRegistry
p2783
tp2784
I2
s(Vinsert
p2785
I42
VSimpleName: start
p2786
tp2787
I4
s(Vinsert
p2788
I5
VArrayType: short[]
p2789
tp2790
I1
s(Vinsert
p2791
I42
VSimpleName: Throwable
p2792
tp2793
I5
s(Vinsert
p2794
I43
VSimpleType: Configuration
p2795
tp2796
I24
s(Vinsert
p2797
I42
VSimpleName: setErrorLogWriter
p2798
tp2799
I17
s(Vinsert
p2800
I66
VTextElement:  Current context used for replace variables in new variables values
p2801
tp2802
I1
s(Vinsert
p2803
I73
VTypeParameter
p2804
tp2805
I1
s(Vinsert
p2806
I42
VSimpleName: readLine
p2807
tp2808
I1
s(Vinsert
p2809
I45
VStringLiteral: "Error creating SqlSource for SqlProvider. ProviderContext found multiple in SqlProvider method ("
p2810
tp2811
I1
s(Vinsert
p2812
I45
VStringLiteral: "SOFT"
p2813
tp2814
I1
s(Vinsert
p2815
I42
VSimpleName: trim
p2816
tp2817
I6
s(Vinsert
p2818
I42
VSimpleName: selectBlogUsingConstructorWithResultMap
p2819
tp2820
I1
s(Vinsert
p2821
I43
VSimpleType: UnpooledDataSource
p2822
tp2823
I3
s(Vinsert
p2824
I42
VSimpleName: dataSourceProperties
p2825
tp2826
I1
s(Vinsert
p2827
I42
VSimpleName: EnumTypeHandler
p2828
tp2829
I2
s(Vinsert
p2830
I43
VSimpleType: StringWriter
p2831
tp2832
I2
s(Vinsert
p2833
I42
VSimpleName: usersCursor
p2834
tp2835
I2
s(Vinsert
p2836
I42
VSimpleName: currentNamespace
p2837
tp2838
I1
s(Vinsert
p2839
I42
VSimpleName: MappedStatement
p2840
tp2841
I5
s(Vinsert
p2842
I42
VSimpleName: INTO_COLUMNS
p2843
tp2844
I1
s(Vinsert
p2845
I42
VSimpleName: customCache
p2846
tp2847
I3
s(Vinsert
p2848
I42
VSimpleName: selectByIdNoFlush
p2849
tp2850
I1
s(Vinsert
p2851
I42
VSimpleName: JdbcType
p2852
tp2853
I3
s(Vinsert
p2854
I40
VQualifiedName: java.io.ByteArrayInputStream
p2855
tp2856
I1
s(Vinsert
p2857
I42
VSimpleName: ObjectOutputStream
p2858
tp2859
I4
s(Vinsert
p2860
I40
VQualifiedName: resultMapping.column
p2861
tp2862
I2
s(Vinsert
p2863
I42
VSimpleName: bindings
p2864
tp2865
I1
s(Vinsert
p2866
I42
VSimpleName: rowBoundsIndex
p2867
tp2868
I1
s(Vinsert
p2869
I42
VSimpleName: sb
p2870
tp2871
I16
s(Vinsert
p2872
I42
VSimpleName: paramCount
p2873
tp2874
I1
s(Vinsert
p2875
I42
VSimpleName: expressionCache
p2876
tp2877
I2
s(Vinsert
p2878
I45
VStringLiteral: "==>  Preparing: "
p2879
tp2880
I1
s(Vinsert
p2881
I42
VSimpleName: Level2Mapper
p2882
tp2883
I2
s(Vinsert
p2884
I43
VSimpleType: ResultLoaderMap
p2885
tp2886
I2
s(Vinsert
p2887
I42
VSimpleName: meta
p2888
tp2889
I1
s(Vinsert
p2890
I43
VSimpleType: T
p2891
tp2892
I9
s(Vinsert
p2893
I66
VTextElement: classes, e.g. 
p2894
tp2895
I1
s(Vinsert
p2896
I42
VSimpleName: getUserWithPets_Inline
p2897
tp2898
I1
s(Vinsert
p2899
I74
VParameterizedType: HashMap<Class<?>,TypeHandler<?>>
p2900
tp2901
I1
s(Vinsert
p2902
I43
VSimpleType: Property
p2903
tp2904
I1
s(Vinsert
p2905
I42
VSimpleName: Field
p2906
tp2907
I6
s(Vinsert
p2908
I43
VSimpleType: K
p2909
tp2910
I1
s(Vinsert
p2911
I42
VSimpleName: Author
p2912
tp2913
I10
s(Vinsert
p2914
I40
VQualifiedName: org.apache.ibatis.logging.stdout.StdOutImpl
p2915
tp2916
I2
s(Vinsert
p2917
I43
VSimpleType: Date
p2918
tp2919
I4
s(Vinsert
p2920
I42
VSimpleName: getConstantId
p2921
tp2922
I1
s(Vinsert
p2923
I42
VSimpleName: Name
p2924
tp2925
I17
s(Vinsert
p2926
I42
VSimpleName: toBigInteger
p2927
tp2928
I1
s(Vinsert
p2929
I42
VSimpleName: posts
p2930
tp2931
I6
s(Vinsert
p2932
I42
VSimpleName: field
p2933
tp2934
I13
s(Vinsert
p2935
I42
VSimpleName: setEntityResolver
p2936
tp2937
I1
s(Vinsert
p2938
I45
VStringLiteral: "Rub%"
p2939
tp2940
I1
s(Vinsert
p2941
I74
VParameterizedType: List<BatchResult>
p2942
tp2943
I1
s(Vinsert
p2944
I42
VSimpleName: mappedResults
p2945
tp2946
I1
s(Vinsert
p2947
I45
VStringLiteral: "org/apache/ibatis/submitted/simplelistparameter/CreateDB.sql"
p2948
tp2949
I1
s(Vinsert
p2950
I45
VStringLiteral: "selectBlogByIdUsingConstructor"
p2951
tp2952
I1
s(Vinsert
p2953
I43
VSimpleType: TransactionalCache
p2954
tp2955
I1
s(Vinsert
p2956
I85
VDimension
p2957
tp2958
I34
s(Vinsert
p2959
I42
VSimpleName: collection
p2960
tp2961
I4
s(Vinsert
p2962
I43
VSimpleType: Statement
p2963
tp2964
I3
s(Vinsert
p2965
I42
VSimpleName: query
p2966
tp2967
I3
s(Vinsert
p2968
I42
VSimpleName: acceptsURL
p2969
tp2970
I2
s(Vinsert
p2971
I42
VSimpleName: firstResource
p2972
tp2973
I2
s(Vinsert
p2974
I42
VSimpleName: selectWithNonEmptyList_noCollectionId
p2975
tp2976
I1
s(Vinsert
p2977
I42
VSimpleName: dataSourceFactory
p2978
tp2979
I1
s(Vinsert
p2980
I42
VSimpleName: getBlob
p2981
tp2982
I5
s(Vinsert
p2983
I42
VSimpleName: ancestorObject
p2984
tp2985
I1
s(Vinsert
p2986
I42
VSimpleName: NoLoggingImpl
p2987
tp2988
I1
s(Vinsert
p2989
I43
VSimpleType: PluginException
p2990
tp2991
I1
s(Vinsert
p2992
I42
VSimpleName: constructors
p2993
tp2994
I3
s(Vinsert
p2995
I42
VSimpleName: Person
p2996
tp2997
I12
s(Vinsert
p2998
I45
VStringLiteral: "'org.apache.ibatis.submitted.named_constructor_args.InvalidNamedConstructorArgsTest$NoMatchingConstructorMapper.select-void'"
p2999
tp3000
I1
s(Vinsert
p3001
I42
VSimpleName: classes
p3002
tp3003
I2
s(Vinsert
p3004
I42
VSimpleName: unmodifiableSortedMap
p3005
tp3006
I1
s(Vinsert
p3007
I42
VSimpleName: is
p3008
tp3009
I11
s(Vinsert
p3010
I42
VSimpleName: CallableStatement
p3011
tp3012
I2
s(Vinsert
p3013
I45
VStringLiteral: "Production"
p3014
tp3015
I1
s(Vinsert
p3016
I42
VSimpleName: Intercepts
p3017
tp3018
I1
s(Vinsert
p3019
I42
VSimpleName: ScriptingException
p3020
tp3021
I1
s(Vinsert
p3022
I42
VSimpleName: autoMapping
p3023
tp3024
I1
s(Vinsert
p3025
I42
VSimpleName: typeHandlerClass
p3026
tp3027
I1
s(Vinsert
p3028
I43
VSimpleType: CachingExecutor
p3029
tp3030
I1
s(Vinsert
p3031
I42
VSimpleName: MetaClass
p3032
tp3033
I4
s(Vinsert
p3034
I43
VSimpleType: DateTypeHandler
p3035
tp3036
I1
s(Vinsert
p3037
I42
VSimpleName: SQLException
p3038
tp3039
I74
s(Vinsert
p3040
I42
VSimpleName: def
p3041
tp3042
I1
s(Vinsert
p3043
I42
VSimpleName: declaredProperties
p3044
tp3045
I3
s(Vinsert
p3046
I42
VSimpleName: resultTypeClass
p3047
tp3048
I1
s(Vinsert
p3049
I45
VStringLiteral: "org/apache/ibatis/submitted/missingcolumn/CreateDB.sql"
p3050
tp3051
I1
s(Vinsert
p3052
I43
VSimpleType: PersistenceException
p3053
tp3054
I4
s(Vinsert
p3055
I43
VSimpleType: Types
p3056
tp3057
I1
s(Vinsert
p3058
I42
VSimpleName: superclass
p3059
tp3060
I2
s(Vinsert
p3061
I42
VSimpleName: VelocitySqlSource
p3062
tp3063
I1
s(Vinsert
p3064
I43
VSimpleType: SqlSession
p3065
tp3066
I44
s(Vinsert
p3067
I45
VStringLiteral: "SELECT "
p3068
tp3069
I1
s(Vinsert
p3070
I42
VSimpleName: element
p3071
tp3072
I4
s(Vinsert
p3073
I42
VSimpleName: upperFirst
p3074
tp3075
I1
s(Vinsert
p3076
I42
VSimpleName: ExceptionFactory
p3077
tp3078
I4
s(Vinsert
p3079
I42
VSimpleName: MetaObject
p3080
tp3081
I7
s(Vinsert
p3082
I42
VSimpleName: FROM
p3083
tp3084
I1
s(Vinsert
p3085
I42
VSimpleName: factory
p3086
tp3087
I6
s(Vinsert
p3088
I43
VSimpleType: StringStringMapEntry
p3089
tp3090
I2
s(Vinsert
p3091
I42
VSimpleName: serialize
p3092
tp3093
I1
s(Vinsert
p3094
I78
VMarkerAnnotation
p3095
tp3096
I61
s(Vinsert
p3097
I42
VSimpleName: getResultWithResultSetAndColumnNameThrowsException
p3098
tp3099
I1
s(Vinsert
p3100
I43
VSimpleType: DynamicContext
p3101
tp3102
I10
s(Vinsert
p3103
I42
VSimpleName: runScript
p3104
tp3105
I26
s(Vinsert
p3106
I42
VSimpleName: DepartmentMapper
p3107
tp3108
I1
s(Vinsert
p3109
I40
VQualifiedName: org.apache.ibatis.logging.jdk14.Jdk14LoggingImpl
p3110
tp3111
I1
s(Vinsert
p3112
I42
VSimpleName: variablesContext
p3113
tp3114
I2
s(Vinsert
p3115
I42
VSimpleName: hasGetter
p3116
tp3117
I4
s(Vinsert
p3118
I42
VSimpleName: binome
p3119
tp3120
I1
s(Vinsert
p3121
I42
VSimpleName: testResultsOnlyForNaming
p3122
tp3123
I1
s(Vinsert
p3124
I42
VSimpleName: entriesToAddOnCommit
p3125
tp3126
I1
s(Vinsert
p3127
I45
VStringLiteral: "   or\u005cn ID = ?  "
p3128
tp3129
I1
s(Vinsert
p3130
I42
VSimpleName: hasTypeHandler
p3131
tp3132
I1
s(Vinsert
p3133
I83
VModifier: public
p3134
tp3135
I118
s(Vinsert
p3136
I42
VSimpleName: convertArgsToSqlCommandParam
p3137
tp3138
I1
s(Vinsert
p3139
I42
VSimpleName: getEnumAttribute
p3140
tp3141
I1
s(Vinsert
p3142
I42
VSimpleName: resultMappings
p3143
tp3144
I2
s(Vinsert
p3145
I42
VSimpleName: getObjectWrapperFactory
p3146
tp3147
I1
s(Vinsert
p3148
I42
VSimpleName: Address
p3149
tp3150
I2
s(Vinsert
p3151
I42
VSimpleName: logger
p3152
tp3153
I2
s(Vinsert
p3154
I43
VSimpleType: AutoConstructorMapper
p3155
tp3156
I1
s(Vinsert
p3157
I42
VSimpleName: cachedParameter
p3158
tp3159
I1
s(Vinsert
p3160
I42
VSimpleName: Alias
p3161
tp3162
I2
s(Vinsert
p3163
I42
VSimpleName: createPooledDataSource
p3164
tp3165
I2
s(Vinsert
p3166
I42
VSimpleName: substring
p3167
tp3168
I3
s(Vinsert
p3169
I42
VSimpleName: jdbcType
p3170
tp3171
I5
s(Vinsert
p3172
I42
VSimpleName: isSafeResultHandlerEnabled
p3173
tp3174
I1
s(Vinsert
p3175
I42
VSimpleName: metaResult
p3176
tp3177
I3
s(Vinsert
p3178
I42
VSimpleName: getMapperMethod
p3179
tp3180
I1
s(Vinsert
p3181
I42
VSimpleName: ResultMapping
p3182
tp3183
I6
s(Vinsert
p3184
I43
VSimpleType: UnknownTypeHandler
p3185
tp3186
I1
s(Vinsert
p3187
I42
VSimpleName: executor
p3188
tp3189
I4
s(Vinsert
p3190
I45
VStringLiteral: "******"
p3191
tp3192
I1
s(Vinsert
p3193
I42
VSimpleName: getAuthor
p3194
tp3195
I7
s(Vinsert
p3196
I42
VSimpleName: ObjectStreamClass
p3197
tp3198
I1
s(Vinsert
p3199
I13
VCharacterLiteral: ','
p3200
tp3201
I1
s(Vinsert
p3202
I42
VSimpleName: toArray
p3203
tp3204
I4
s(Vinsert
p3205
I43
VSimpleType: CallableStatement
p3206
tp3207
I2
s(Vinsert
p3208
I45
VStringLiteral: "User4"
p3209
tp3210
I2
s(Vinsert
p3211
I42
VSimpleName: handler
p3212
tp3213
I13
s(Vinsert
p3214
I42
VSimpleName: executeWithResultHandler
p3215
tp3216
I1
s(Vinsert
p3217
I27
VInfixExpression: -
p3218
tp3219
I6
s(Vinsert
p3220
I42
VSimpleName: values
p3221
tp3222
I4
s(Vinsert
p3223
I42
VSimpleName: AuthorMapper
p3224
tp3225
I5
s(Vinsert
p3226
I42
VSimpleName: getCanonicalPath
p3227
tp3228
I1
s(Vinsert
p3229
I42
VSimpleName: mapperMethod
p3230
tp3231
I1
s(Vinsert
p3232
I45
VStringLiteral: "' was found in mapping #{"
p3233
tp3234
I1
s(Vinsert
p3235
I42
VSimpleName: BigDecimal
p3236
tp3237
I2
s(Vinsert
p3238
I42
VSimpleName: objectWrapper
p3239
tp3240
I1
s(Vinsert
p3241
I42
VSimpleName: Thread
p3242
tp3243
I1
s(Vinsert
p3244
I42
VSimpleName: Integer
p3245
tp3246
I22
s(Vinsert
p3247
I42
VSimpleName: session
p3248
tp3249
I60
s(Vinsert
p3250
I42
VSimpleName: ChildBean
p3251
tp3252
I2
s(Vinsert
p3253
I42
VSimpleName: getItems
p3254
tp3255
I2
s(Vinsert
p3256
I43
VSimpleType: MapperMethod
p3257
tp3258
I2
s(Vinsert
p3259
I42
VSimpleName: Proxy
p3260
tp3261
I1
s(Vinsert
p3262
I45
VStringLiteral: "Missing type parameter."
p3263
tp3264
I1
s(Vinsert
p3265
I42
VSimpleName: mock
p3266
tp3267
I4
s(Vinsert
p3268
I42
VSimpleName: defaultThreadPool
p3269
tp3270
I1
s(Vinsert
p3271
I42
VSimpleName: esc
p3272
tp3273
I1
s(Vinsert
p3274
I45
VStringLiteral: "TABLE_A"
p3275
tp3276
I1
s(Vinsert
p3277
I42
VSimpleName: declaredClass
p3278
tp3279
I2
s(Vinsert
p3280
I4
VArrayInitializer
p3281
tp3282
I10
s(Vinsert
p3283
I42
VSimpleName: resultMapId
p3284
tp3285
I4
s(Vinsert
p3286
I42
VSimpleName: isCached
p3287
tp3288
I1
s(Vinsert
p3289
I42
VSimpleName: nestedResultOrdered
p3290
tp3291
I1
s(Vinsert
p3292
I42
VSimpleName: isFalse
p3293
tp3294
I1
s(Vinsert
p3295
I5
VArrayType: char[]
p3296
tp3297
I2
s(Vinsert
p3298
I42
VSimpleName: getConstructor
p3299
tp3300
I1
s(Vinsert
p3301
I45
VStringLiteral: "person must not be null"
p3302
tp3303
I1
s(Vinsert
p3304
I42
VSimpleName: exit
p3305
tp3306
I1
s(Vinsert
p3307
I42
VSimpleName: applyIncludes
p3308
tp3309
I1
s(Vinsert
p3310
I42
VSimpleName: destination
p3311
tp3312
I2
s(Vinsert
p3313
I42
VSimpleName: findAll
p3314
tp3315
I2
s(Vinsert
p3316
I42
VSimpleName: declaresConstructor
p3317
tp3318
I1
s(Vinsert
p3319
I42
VSimpleName: Map
p3320
tp3321
I18
s(Vinsert
p3322
I42
VSimpleName: printf
p3323
tp3324
I2
s(Vinsert
p3325
I45
VStringLiteral: "ParameterizedTypeImpl [rawType="
p3326
tp3327
I1
s(Vinsert
p3328
I43
VSimpleType: Annotation
p3329
tp3330
I1
s(Vinsert
p3331
I42
VSimpleName: getDouble
p3332
tp3333
I2
s(Vinsert
p3334
I42
VSimpleName: System
p3335
tp3336
I4
s(Vinsert
p3337
I42
VSimpleName: providerMethodName
p3338
tp3339
I1
s(Vinsert
p3340
I42
VSimpleName: getTimestamp
p3341
tp3342
I12
s(Vinsert
p3343
I43
VSimpleType: XMLConfigBuilder
p3344
tp3345
I2
s(Vinsert
p3346
I42
VSimpleName: scriptFile
p3347
tp3348
I1
s(Vinsert
p3349
I40
VQualifiedName: JdbcType.NULL
p3350
tp3351
I1
s(Vinsert
p3352
I42
VSimpleName: ds
p3353
tp3354
I7
s(Vinsert
p3355
I42
VSimpleName: getDeclaringClass
p3356
tp3357
I7
s(Vinsert
p3358
I42
VSimpleName: removeAll
p3359
tp3360
I1
s(Vinsert
p3361
I42
VSimpleName: getName
p3362
tp3363
I32
s(Vinsert
p3364
I42
VSimpleName: getMapperInterface
p3365
tp3366
I1
s(Vinsert
p3367
I45
VStringLiteral: "myInteger didn't match expected"
p3368
tp3369
I1
s(Vinsert
p3370
I45
VStringLiteral: "phone"
p3371
tp3372
I1
s(Vinsert
p3373
I42
VSimpleName: ProductDAO
p3374
tp3375
I1
s(Vinsert
p3376
I42
VSimpleName: blobMapper
p3377
tp3378
I1
s(Vinsert
p3379
I45
VStringLiteral: "org/apache/ibatis/submitted/usesjava8/default_method/CreateDB.sql"
p3380
tp3381
I1
s(Vinsert
p3382
I42
VSimpleName: setFrom
p3383
tp3384
I1
s(Vinsert
p3385
I45
VStringLiteral: "Expression based parameters are not supported yet"
p3386
tp3387
I1
s(Vinsert
p3388
I42
VSimpleName: PreparedStatement
p3389
tp3390
I2
s(Vinsert
p3391
I42
VSimpleName: u
p3392
tp3393
I1
s(Vinsert
p3394
I24
VForStatement
p3395
tp3396
I9
s(Vinsert
p3397
I42
VSimpleName: getKeyProperties
p3398
tp3399
I1
s(Vinsert
p3400
I42
VSimpleName: person
p3401
tp3402
I18
s(Vinsert
p3403
I5
VArrayType: long[]
p3404
tp3405
I1
s(Vinsert
p3406
I42
VSimpleName: isBridge
p3407
tp3408
I1
s(Vinsert
p3409
I42
VSimpleName: getNode
p3410
tp3411
I2
s(Vinsert
p3412
I45
VStringLiteral: "CGLIB"
p3413
tp3414
I1
s(Vinsert
p3415
I42
VSimpleName: columnPrefixBuilder
p3416
tp3417
I2
s(Vinsert
p3418
I42
VSimpleName: queryTimeout
p3419
tp3420
I3
s(Vinsert
p3421
I43
VSimpleType: SupportClasses.CustomObjectFactory
p3422
tp3423
I1
s(Vinsert
p3424
I42
VSimpleName: registerCursor
p3425
tp3426
I1
s(Vinsert
p3427
I42
VSimpleName: batchResult
p3428
tp3429
I3
s(Vinsert
p3430
I42
VSimpleName: parameterObject
p3431
tp3432
I7
s(Vinsert
p3433
I42
VSimpleName: SqlSessionManager
p3434
tp3435
I2
s(Vinsert
p3436
I45
VStringLiteral: "id DESC"
p3437
tp3438
I1
s(Vinsert
p3439
I42
VSimpleName: LogFactory
p3440
tp3441
I10
s(Vinsert
p3442
I42
VSimpleName: toByteArray
p3443
tp3444
I1
s(Vinsert
p3445
I45
VStringLiteral: "should return results,no errors throw"
p3446
tp3447
I1
s(Vinsert
p3448
I34
VNumberLiteral: 4
p3449
tp3450
I7
s(Vinsert
p3451
I42
VSimpleName: Cache
p3452
tp3453
I2
s(Vinsert
p3454
I42
VSimpleName: getStringValue
p3455
tp3456
I1
s(Vinsert
p3457
I45
VStringLiteral: "Parameter '"
p3458
tp3459
I3
s(Vinsert
p3460
I42
VSimpleName: addLoadedResource
p3461
tp3462
I1
s(Vinsert
p3463
I45
VStringLiteral: "org/apache/ibatis/submitted/permissions/CreateDB.sql"
p3464
tp3465
I1
s(Vinsert
p3466
I42
VSimpleName: OBJECT_TYPE_HANDLER
p3467
tp3468
I1
s(Vinsert
p3469
I74
VParameterizedType: Map<String,Object>
p3470
tp3471
I4
s(Vinsert
p3472
I42
VSimpleName: targetObject
p3473
tp3474
I1
s(Vinsert
p3475
I45
VStringLiteral: ","
p3476
tp3477
I3
s(Vinsert
p3478
I48
VSuperMethodInvocation
p3479
tp3480
I4
s(Vinsert
p3481
I40
VQualifiedName: org.apache.ibatis.logging.LogFactory
p3482
tp3483
I2
s(Vinsert
p3484
I42
VSimpleName: IntegerTypeHandler
p3485
tp3486
I2
s(Vinsert
p3487
I42
VSimpleName: proxyFactory
p3488
tp3489
I4
s(Vinsert
p3490
I42
VSimpleName: nestedQueryParameterObject
p3491
tp3492
I1
s(Vinsert
p3493
I43
VSimpleType: OgnlException
p3494
tp3495
I2
s(Vinsert
p3496
I42
VSimpleName: ExternalResources
p3497
tp3498
I1
s(Vinsert
p3499
I43
VSimpleType: File
p3500
tp3501
I3
s(Vinsert
p3502
I45
VStringLiteral: "root"
p3503
tp3504
I1
s(Vinsert
p3505
I45
VStringLiteral: "name like #{name} || '%'"
p3506
tp3507
I1
s(Vinsert
p3508
I42
VSimpleName: anyString
p3509
tp3510
I1
s(Vinsert
p3511
I42
VSimpleName: isCollection
p3512
tp3513
I3
s(Vinsert
p3514
I43
VSimpleType: WildcardType
p3515
tp3516
I3
s(Vinsert
p3517
I45
VStringLiteral: "27613"
p3518
tp3519
I1
s(Vinsert
p3520
I45
VStringLiteral: "POOLED"
p3521
tp3522
I1
s(Vinsert
p3523
I42
VSimpleName: mode
p3524
tp3525
I1
s(Vinsert
p3526
I42
VSimpleName: command
p3527
tp3528
I4
s(Vinsert
p3529
I42
VSimpleName: JdbcTransactionFactory
p3530
tp3531
I3
s(Vinsert
p3532
I65
VTagElement: @author
p3533
tp3534
I1
s(Vinsert
p3535
I42
VSimpleName: shouldPrintParameters
p3536
tp3537
I1
s(Vinsert
p3538
I42
VSimpleName: upperColumnName
p3539
tp3540
I1
s(Vinsert
p3541
I43
VSimpleType: Binome
p3542
tp3543
I1
s(Vinsert
p3544
I42
VSimpleName: setFirstFirstName
p3545
tp3546
I1
s(Vinsert
p3547
I42
VSimpleName: setNodeValue
p3548
tp3549
I1
s(Vinsert
p3550
I74
VParameterizedType: ArrayList<Object>
p3551
tp3552
I1
s(Vinsert
p3553
I42
VSimpleName: Iterator
p3554
tp3555
I1
s(Vinsert
p3556
I42
VSimpleName: getFather
p3557
tp3558
I1
s(Vinsert
p3559
I45
VStringLiteral: "test"
p3560
tp3561
I3
s(Vinsert
p3562
I42
VSimpleName: ResultSetMetaData
p3563
tp3564
I2
s(Vinsert
p3565
I40
VQualifiedName: org.apache.ibatis.mapping.ParameterMapping
p3566
tp3567
I1
s(Vinsert
p3568
I42
VSimpleName: applyAll
p3569
tp3570
I1
s(Vinsert
p3571
I42
VSimpleName: getMappedProperties
p3572
tp3573
I1
s(Vinsert
p3574
I42
VSimpleName: getChildNodes
p3575
tp3576
I2
s(Vinsert
p3577
I42
VSimpleName: SPMapper
p3578
tp3579
I7
s(Vinsert
p3580
I60
VVariableDeclarationStatement
p3581
tp3582
I425
s(Vinsert
p3583
I42
VSimpleName: detail
p3584
tp3585
I1
s(Vinsert
p3586
I45
VStringLiteral: "User3"
p3587
tp3588
I1
s(Vinsert
p3589
I42
VSimpleName: propertyKey
p3590
tp3591
I2
s(Vinsert
p3592
I42
VSimpleName: jdbcHandlerMap
p3593
tp3594
I5
s(Vinsert
p3595
I42
VSimpleName: getResource
p3596
tp3597
I1
s(Vinsert
p3598
I42
VSimpleName: personMapper
p3599
tp3600
I7
s(Vinsert
p3601
I74
VParameterizedType: List<E>
p3602
tp3603
I1
s(Vinsert
p3604
I43
VSimpleType: Set
p3605
tp3606
I2
s(Vinsert
p3607
I43
VSimpleType: Product
p3608
tp3609
I3
s(Vinsert
p3610
I42
VSimpleName: getParentWithComplex
p3611
tp3612
I1
s(Vinsert
p3613
I42
VSimpleName: genericParamName
p3614
tp3615
I1
s(Vinsert
p3616
I42
VSimpleName: assertIsSatisfied
p3617
tp3618
I2
s(Vinsert
p3619
I42
VSimpleName: shouldNotOverwriteCollectionOnNestedQuery
p3620
tp3621
I1
s(Vinsert
p3622
I42
VSimpleName: isResourceLoaded
p3623
tp3624
I3
s(Vinsert
p3625
I43
VSimpleType: XMLDynamicLanguageDriver
p3626
tp3627
I1
s(Vinsert
p3628
I45
VStringLiteral: "param1"
p3629
tp3630
I1
s(Vinsert
p3631
I42
VSimpleName: Set
p3632
tp3633
I3
s(Vinsert
p3634
I42
VSimpleName: a
p3635
tp3636
I2
s(Vinsert
p3637
I45
VStringLiteral: "Should be specified either value() and namespace() attribute in the @CacheNamespaceRef"
p3638
tp3639
I1
s(Vinsert
p3640
I42
VSimpleName: publicId
p3641
tp3642
I2
s(Vinsert
p3643
I42
VSimpleName: setDefaultEnumTypeHandler
p3644
tp3645
I1
s(Vinsert
p3646
I42
VSimpleName: isNestedResultOrdered
p3647
tp3648
I1
s(Vinsert
p3649
I22
VFieldAccess
p3650
tp3651
I44
s(Vinsert
p3652
I42
VSimpleName: Character
p3653
tp3654
I1
s(Vinsert
p3655
I42
VSimpleName: address
p3656
tp3657
I1
s(Vinsert
p3658
I42
VSimpleName: prime
p3659
tp3660
I2
s(Vinsert
p3661
I43
VSimpleType: RowBounds
p3662
tp3663
I5
s(Vinsert
p3664
I42
VSimpleName: deserialize
p3665
tp3666
I1
s(Vinsert
p3667
I45
VStringLiteral: "When type handler for interface is not exist, apply default enum type handler."
p3668
tp3669
I1
s(Vinsert
p3670
I42
VSimpleName: incompleteMethods
p3671
tp3672
I2
s(Vinsert
p3673
I42
VSimpleName: ms
p3674
tp3675
I12
s(Vinsert
p3676
I43
VSimpleType: ArrayList
p3677
tp3678
I5
s(Vinsert
p3679
I43
VSimpleType: Person
p3680
tp3681
I12
s(Vinsert
p3682
I42
VSimpleName: shouldGetResultFromResultSetByPosition
p3683
tp3684
I3
s(Vinsert
p3685
I42
VSimpleName: notNullColumns
p3686
tp3687
I1
s(Vinsert
p3688
I43
VSimpleType: ParameterizedType
p3689
tp3690
I11
s(Vinsert
p3691
I42
VSimpleName: getBlog
p3692
tp3693
I1
s(Vinsert
p3694
I43
VSimpleType: SPMapper
p3695
tp3696
I7
s(Vinsert
p3697
I42
VSimpleName: unmodifiableList
p3698
tp3699
I2
s(Vinsert
p3700
I42
VSimpleName: throwWarning
p3701
tp3702
I3
s(Vinsert
p3703
I42
VSimpleName: useCache
p3704
tp3705
I1
s(Vinsert
p3706
I42
VSimpleName: getPrincipals
p3707
tp3708
I1
s(Vinsert
p3709
I42
VSimpleName: getChildrenAsProperties
p3710
tp3711
I1
s(Vinsert
p3712
I42
VSimpleName: setQueryTimeout
p3713
tp3714
I2
s(Vinsert
p3715
I42
VSimpleName: PrintWriter
p3716
tp3717
I3
s(Vinsert
p3718
I42
VSimpleName: available
p3719
tp3720
I2
s(Vinsert
p3721
I43
VSimpleType: Map
p3722
tp3723
I18
s(Vinsert
p3724
I43
VSimpleType: CacheKey
p3725
tp3726
I5
s(Vinsert
p3727
I42
VSimpleName: PrivateLanguageDriver
p3728
tp3729
I1
s(Vinsert
p3730
I45
VStringLiteral: "P.FULL_NAME"
p3731
tp3732
I1
s(Vinsert
p3733
I43
VSimpleType: Environment
p3734
tp3735
I4
s(Vinsert
p3736
I42
VSimpleName: LocalDateTypeHandler
p3737
tp3738
I1
s(Vinsert
p3739
I42
VSimpleName: Log4jImpl
p3740
tp3741
I1
s(Vinsert
p3742
I42
VSimpleName: conn
p3743
tp3744
I65
s(Vinsert
p3745
I5
VArrayType: Object[]
p3746
tp3747
I4
s(Vinsert
p3748
I42
VSimpleName: classNames
p3749
tp3750
I3
s(Vinsert
p3751
I42
VSimpleName: src
p3752
tp3753
I2
s(Vinsert
p3754
I45
VStringLiteral: "P.ID"
p3755
tp3756
I1
s(Vinsert
p3757
I42
VSimpleName: addParameterObject
p3758
tp3759
I2
s(Vinsert
p3760
I42
VSimpleName: String
p3761
tp3762
I200
s(Vinsert
p3763
I74
VParameterizedType: List<OrderDetail>
p3764
tp3765
I1
s(Vinsert
p3766
I42
VSimpleName: Reflector
p3767
tp3768
I6
s(Vinsert
p3769
I42
VSimpleName: transactionFactory
p3770
tp3771
I2
s(Vinsert
p3772
I42
VSimpleName: After
p3773
tp3774
I1
s(Vinsert
p3775
I42
VSimpleName: entrySet
p3776
tp3777
I7
s(Vinsert
p3778
I42
VSimpleName: rowCount
p3779
tp3780
I1
s(Vinsert
p3781
I27
VInfixExpression: ||
p3782
tp3783
I12
s(Vinsert
p3784
I42
VSimpleName: resultSets
p3785
tp3786
I2
s(Vinsert
p3787
I42
VSimpleName: that
p3788
tp3789
I1
s(Vinsert
p3790
I42
VSimpleName: c
p3791
tp3792
I5
s(Vinsert
p3793
I42
VSimpleName: Method
p3794
tp3795
I11
s(Vinsert
p3796
I42
VSimpleName: evaluateBoolean
p3797
tp3798
I2
s(Vinsert
p3799
I42
VSimpleName: getDeclaredConstructors
p3800
tp3801
I1
s(Vinsert
p3802
I43
VSimpleType: PooledDataSource
p3803
tp3804
I2
s(Vinsert
p3805
I43
VSimpleType: ChildBean
p3806
tp3807
I2
s(Vinsert
p3808
I42
VSimpleName: userMapper
p3809
tp3810
I1
s(Vinsert
p3811
I42
VSimpleName: RoundingMode
p3812
tp3813
I1
s(Vinsert
p3814
I42
VSimpleName: getFloat
p3815
tp3816
I2
s(Vinsert
p3817
I42
VSimpleName: delete
p3818
tp3819
I1
s(Vinsert
p3820
I42
VSimpleName: Object
p3821
tp3822
I80
s(Vinsert
p3823
I42
VSimpleName: testWithNonEmptyList_noCollectionId
p3824
tp3825
I1
s(Vinsert
p3826
I42
VSimpleName: rootSqlNode
p3827
tp3828
I3
s(Vinsert
p3829
I42
VSimpleName: getAddresses
p3830
tp3831
I1
s(Vinsert
p3832
I45
VStringLiteral: "order"
p3833
tp3834
I2
s(Vinsert
p3835
I43
VSimpleType: SqlSessionFactoryBuilder
p3836
tp3837
I10
s(Vinsert
p3838
I42
VSimpleName: modifier
p3839
tp3840
I1
s(Vinsert
p3841
I42
VSimpleName: Serializable
p3842
tp3843
I1
s(Vinsert
p3844
I25
VIfStatement
p3845
tp3846
I175
s(Vinsert
p3847
I43
VSimpleType: BuilderException
p3848
tp3849
I9
s(Vinsert
p3850
I42
VSimpleName: mapResultHandler
p3851
tp3852
I3
s(Vinsert
p3853
I74
VParameterizedType: Map.Entry<String,String>
p3854
tp3855
I1
s(Vinsert
p3856
I45
VStringLiteral: "select userid from account where userid = 'j2ee';"
p3857
tp3858
I2
s(Vinsert
p3859
I42
VSimpleName: parameterExists
p3860
tp3861
I1
s(Vinsert
p3862
I42
VSimpleName: hasForeignColumn
p3863
tp3864
I1
s(Vinsert
p3865
I42
VSimpleName: mappedStatementBuilder
p3866
tp3867
I2
s(Vinsert
p3868
I42
VSimpleName: getUrl
p3869
tp3870
I2
s(Vinsert
p3871
I43
VSimpleType: SimpleStatementHandler
p3872
tp3873
I2
s(Vinsert
p3874
I42
VSimpleName: selectBlogUsingConstructorWithResultMapCollection
p3875
tp3876
I1
s(Vinsert
p3877
I42
VSimpleName: sb2
p3878
tp3879
I1
s(Vinsert
p3880
I42
VSimpleName: expectMessage
p3881
tp3882
I4
s(Vinsert
p3883
I42
VSimpleName: getFirstResultSet
p3884
tp3885
I1
s(Vinsert
p3886
I34
VNumberLiteral: 1L
p3887
tp3888
I1
s(Vinsert
p3889
I42
VSimpleName: getReflectorFactory
p3890
tp3891
I7
s(Vinsert
p3892
I40
VQualifiedName: Person.PersonType.PERSON
p3893
tp3894
I2
s(Vinsert
p3895
I42
VSimpleName: getPropertyNames
p3896
tp3897
I1
s(Vinsert
p3898
I42
VSimpleName: propertyMapping
p3899
tp3900
I1
s(Vinsert
p3901
I45
VStringLiteral: "We should have failed since calling iterator several times is not allowed"
p3902
tp3903
I1
s(Vinsert
p3904
I42
VSimpleName: getCache
p3905
tp3906
I1
s(Vinsert
p3907
I42
VSimpleName: setEmailaddress
p3908
tp3909
I1
s(Vinsert
p3910
I42
VSimpleName: shouldGetResultNullFromResultSetByPosition
p3911
tp3912
I6
s(Vinsert
p3913
I42
VSimpleName: authors
p3914
tp3915
I5
s(Vinsert
p3916
I42
VSimpleName: pet
p3917
tp3918
I2
s(Vinsert
p3919
I43
VSimpleType: ResultContext
p3920
tp3921
I5
s(Vinsert
p3922
I45
VStringLiteral: "key 1"
p3923
tp3924
I1
s(Vinsert
p3925
I42
VSimpleName: isTrue
p3926
tp3927
I1
s(Vinsert
p3928
I42
VSimpleName: getReadWriteLock
p3929
tp3930
I2
s(Vinsert
p3931
I42
VSimpleName: getUsersMap2
p3932
tp3933
I1
s(Vinsert
p3934
I45
VStringLiteral: "org/apache/ibatis/submitted/primitive_array/CreateDB.sql"
p3935
tp3936
I1
s(Vinsert
p3937
I42
VSimpleName: DateTypeHandler
p3938
tp3939
I1
s(Vinsert
p3940
I45
VStringLiteral: "Jim Business"
p3941
tp3942
I1
s(Vinsert
p3943
I45
VStringLiteral: "P.FIRST_NAME like ?"
p3944
tp3945
I1
s(Vinsert
p3946
I38
VPrefixExpression: !
p3947
tp3948
I35
s(Vinsert
p3949
I45
VStringLiteral: "str"
p3950
tp3951
I2
s(Vinsert
p3952
I42
VSimpleName: in
p3953
tp3954
I13
s(Vinsert
p3955
I42
VSimpleName: merge
p3956
tp3957
I1
s(Vinsert
p3958
I43
VSimpleType: Boolean
p3959
tp3960
I2
s(Vinsert
p3961
I42
VSimpleName: demoTypeHandlerForSuperInterface
p3962
tp3963
I1
s(Vinsert
p3964
I42
VSimpleName: sw
p3965
tp3966
I2
s(Vinsert
p3967
I42
VSimpleName: toReader
p3968
tp3969
I1
s(Vinsert
p3970
I74
VParameterizedType: List<Name>
p3971
tp3972
I7
s(Vinsert
p3973
I42
VSimpleName: getAddress
p3974
tp3975
I1
s(Vinsert
p3976
I42
VSimpleName: insert2
p3977
tp3978
I1
s(Vinsert
p3979
I42
VSimpleName: indexOf
p3980
tp3981
I2
s(Vinsert
p3982
I42
VSimpleName: url
p3983
tp3984
I2
s(Vinsert
p3985
I42
VSimpleName: shouldRemoveIndexVariableInTheContext
p3986
tp3987
I1
s(Vinsert
p3988
I42
VSimpleName: setLazyLoadingEnabled
p3989
tp3990
I1
s(Vinsert
p3991
I42
VSimpleName: selectBlog
p3992
tp3993
I5
s(Vinsert
p3994
I42
VSimpleName: sqlTime
p3995
tp3996
I1
s(Vinsert
p3997
I42
VSimpleName: DeserializedObjectProxy
p3998
tp3999
I1
s(Vinsert
p4000
I5
VArrayType: Parameter[]
p4001
tp4002
I1
s(Vinsert
p4003
I42
VSimpleName: shouldSelectAllComplexAuthors
p4004
tp4005
I1
s(Vinsert
p4006
I42
VSimpleName: DefaultMapResultHandler
p4007
tp4008
I1
s(Vinsert
p4009
I42
VSimpleName: getAListOfMaps
p4010
tp4011
I1
s(Vinsert
p4012
I45
VStringLiteral: ")"
p4013
tp4014
I2
s(Vinsert
p4015
I43
VSimpleType: ResultMap
p4016
tp4017
I4
s(Vinsert
p4018
I42
VSimpleName: annotation
p4019
tp4020
I2
s(Vinsert
p4021
I42
VSimpleName: proxy
p4022
tp4023
I6
s(Vinsert
p4024
I42
VSimpleName: driver
p4025
tp4026
I5
s(Vinsert
p4027
I42
VSimpleName: rs
p4028
tp4029
I168
s(Vinsert
p4030
I42
VSimpleName: MethodResolver
p4031
tp4032
I3
s(Vinsert
p4033
I42
VSimpleName: isAccessible
p4034
tp4035
I1
s(Vinsert
p4036
I42
VSimpleName: argValue
p4037
tp4038
I1
s(Vinsert
p4039
I40
VQualifiedName: resultMap.constructorResultMappings
p4040
tp4041
I1
s(Vinsert
p4042
I45
VStringLiteral: "PERPETUAL"
p4043
tp4044
I1
s(Vinsert
p4045
I42
VSimpleName: Properties
p4046
tp4047
I10
s(Vinsert
p4048
I43
VSimpleType: XMLScriptBuilder
p4049
tp4050
I2
s(Vinsert
p4051
I42
VSimpleName: StringBuilder
p4052
tp4053
I18
s(Vinsert
p4054
I65
VTagElement: @since
p4055
tp4056
I2
s(Vinsert
p4057
I42
VSimpleName: getReverseTypeHandler
p4058
tp4059
I1
s(Vinsert
p4060
I42
VSimpleName: myObjectOutputStream
p4061
tp4062
I2
s(Vinsert
p4063
I43
VSimpleType: Jdk14LoggingImpl
p4064
tp4065
I1
s(Vinsert
p4066
I42
VSimpleName: selectBlogsAsMapById
p4067
tp4068
I3
s(Vinsert
p4069
I42
VSimpleName: strKey
p4070
tp4071
I1
s(Vinsert
p4072
I43
VSimpleType: List
p4073
tp4074
I60
s(Vinsert
p4075
I42
VSimpleName: getOrderDetailsWithHeadersAnnotationBased
p4076
tp4077
I1
s(Vinsert
p4078
I42
VSimpleName: MultiDbMapper
p4079
tp4080
I4
s(Vinsert
p4081
I34
VNumberLiteral: 3
p4082
tp4083
I13
s(Vinsert
p4084
I43
VSimpleType: XMLMapperEntityResolver
p4085
tp4086
I1
s(Vinsert
p4087
I74
VParameterizedType: Map<K,V>
p4088
tp4089
I1
s(Vinsert
p4090
I42
VSimpleName: isResultOrdered
p4091
tp4092
I1
s(Vinsert
p4093
I42
VSimpleName: ObjectStreamException
p4094
tp4095
I1
s(Vinsert
p4096
I42
VSimpleName: blogMapper
p4097
tp4098
I2
s(Vinsert
p4099
I42
VSimpleName: getResourceAsStream
p4100
tp4101
I3
s(Vinsert
p4102
I42
VSimpleName: getResultMap
p4103
tp4104
I1
s(Vinsert
p4105
I40
VQualifiedName: Types.CLOB
p4106
tp4107
I1
s(Vinsert
p4108
I42
VSimpleName: blog
p4109
tp4110
I16
s(Vinsert
p4111
I42
VSimpleName: actualParamNames
p4112
tp4113
I3
s(Vinsert
p4114
I42
VSimpleName: ExecutorService
p4115
tp4116
I1
s(Vinsert
p4117
I43
VSimpleType: SQL
p4118
tp4119
I4
s(Vinsert
p4120
I42
VSimpleName: getNameOnlyMapped
p4121
tp4122
I1
s(Vinsert
p4123
I42
VSimpleName: declaringClass
p4124
tp4125
I3
s(Vinsert
p4126
I42
VSimpleName: enhancer
p4127
tp4128
I3
s(Vinsert
p4129
I42
VSimpleName: lazy
p4130
tp4131
I2
s(Vinsert
p4132
I42
VSimpleName: mockery
p4133
tp4134
I4
s(Vinsert
p4135
I42
VSimpleName: cacheKey
p4136
tp4137
I4
s(Vinsert
p4138
I42
VSimpleName: hasWrapperFor
p4139
tp4140
I1
s(Vinsert
p4141
I42
VSimpleName: wrapperType
p4142
tp4143
I1
s(Vinsert
p4144
I42
VSimpleName: shouldFailIfMultipleHandlerMappedToAType
p4145
tp4146
I1
s(Vinsert
p4147
I42
VSimpleName: nestedResultMap
p4148
tp4149
I1
s(Vinsert
p4150
I42
VSimpleName: BlobRecord
p4151
tp4152
I2
s(Vinsert
p4153
I42
VSimpleName: getGenericSuperclass
p4154
tp4155
I2
s(Vinsert
p4156
I42
VSimpleName: jar
p4157
tp4158
I1
s(Vinsert
p4159
I76
VWildcardType: ? extends Class
p4160
tp4161
I1
s(Vinsert
p4162
I43
VSimpleType: Integer
p4163
tp4164
I17
s(Vinsert
p4165
I42
VSimpleName: type
p4166
tp4167
I29
s(Vinsert
p4168
I74
VParameterizedType: Constructor<?>
p4169
tp4170
I3
s(Vinsert
p4171
I42
VSimpleName: testShouldNotFlushLocalSessionCacheOnQueryForList
p4172
tp4173
I1
s(Vinsert
p4174
I42
VSimpleName: select
p4175
tp4176
I6
s(Vinsert
p4177
I42
VSimpleName: included
p4178
tp4179
I1
s(Vinsert
p4180
I54
VTryStatement
p4181
tp4182
I72
s(Vinsert
p4183
I40
VQualifiedName: AutoMappingUnknownColumnBehavior.NONE
p4184
tp4185
I1
s(Vinsert
p4186
I45
VStringLiteral: " #{u:VARCHAR,typeHandler=org.apache.ibatis.type.StringTypeHandler}"
p4187
tp4188
I1
s(Vinsert
p4189
I42
VSimpleName: resourceMap
p4190
tp4191
I1
s(Vinsert
p4192
I43
VSimpleType: IOException
p4193
tp4194
I8
s(Vinsert
p4195
I42
VSimpleName: multipleResults
p4196
tp4197
I1
s(Vinsert
p4198
I45
VStringLiteral: "The specified class '"
p4199
tp4200
I1
s(Vinsert
p4201
I74
VParameterizedType: List<Person>
p4202
tp4203
I4
s(Vinsert
p4204
I42
VSimpleName: KeyBean
p4205
tp4206
I1
s(Vinsert
p4207
I42
VSimpleName: mapParam
p4208
tp4209
I2
s(Vinsert
p4210
I74
VParameterizedType: Map<Integer,Blog>
p4211
tp4212
I2
s(Vinsert
p4213
I42
VSimpleName: clear
p4214
tp4215
I5
s(Vinsert
p4216
I42
VSimpleName: fakeHandler
p4217
tp4218
I2
s(Vinsert
p4219
I45
VStringLiteral: "Genre1"
p4220
tp4221
I1
s(Vinsert
p4222
I43
VSimpleType: IllegalStateException
p4223
tp4224
I2
s(Vinsert
p4225
I42
VSimpleName: ResultSet
p4226
tp4227
I38
s(Vinsert
p4228
I42
VSimpleName: Bean
p4229
tp4230
I2
s(Vinsert
p4231
I43
VSimpleType: EnumTypeHandler
p4232
tp4233
I2
s(Vinsert
p4234
I43
VSimpleType: ResultSet
p4235
tp4236
I31
s(Vinsert
p4237
I43
VSimpleType: CacheException
p4238
tp4239
I1
s(Vinsert
p4240
I40
VQualifiedName: java.io.ByteArrayOutputStream
p4241
tp4242
I1
s(Vinsert
p4243
I45
VStringLiteral: "unchecked"
p4244
tp4245
I1
s(Vinsert
p4246
I42
VSimpleName: transferFrom
p4247
tp4248
I1
s(Vinsert
p4249
I42
VSimpleName: assistant
p4250
tp4251
I2
s(Vinsert
p4252
I42
VSimpleName: runReaderScript
p4253
tp4254
I1
s(Vinsert
p4255
I42
VSimpleName: PreparedStatementLogger
p4256
tp4257
I1
s(Vinsert
p4258
I40
VQualifiedName: System.out
p4259
tp4260
I1
s(Vinsert
p4261
I42
VSimpleName: entry
p4262
tp4263
I2
s(Vinsert
p4264
I42
VSimpleName: Select
p4265
tp4266
I2
s(Vinsert
p4267
I43
VSimpleType: TodoLists
p4268
tp4269
I1
s(Vinsert
p4270
I42
VSimpleName: INSERT_INTO
p4271
tp4272
I1
s(Vinsert
p4273
I42
VSimpleName: columnValue
p4274
tp4275
I3
s(Vinsert
p4276
I45
VStringLiteral: "cbegin@somewhere.com"
p4277
tp4278
I1
s(Vinsert
p4279
I42
VSimpleName: getMapKey
p4280
tp4281
I1
s(Vinsert
p4282
I45
VStringLiteral: "' for query id '"
p4283
tp4284
I1
s(Vinsert
p4285
I42
VSimpleName: FileNotFoundException
p4286
tp4287
I1
s(Vinsert
p4288
I36
VParenthesizedExpression
p4289
tp4290
I31
s(Vinsert
p4291
I43
VSimpleType: Bean
p4292
tp4293
I1
s(Vinsert
p4294
I45
VStringLiteral: "VENDOR"
p4295
tp4296
I1
s(Vinsert
p4297
I42
VSimpleName: metaClass
p4298
tp4299
I1
s(Vinsert
p4300
I42
VSimpleName: StdOutImpl
p4301
tp4302
I1
s(Vinsert
p4303
I42
VSimpleName: getOffset
p4304
tp4305
I1
s(Vinsert
p4306
I42
VSimpleName: commandName
p4307
tp4308
I2
s(Vinsert
p4309
I42
VSimpleName: parms
p4310
tp4311
I8
s(Vinsert
p4312
I52
VThisExpression
p4313
tp4314
I47
s(Vinsert
p4315
I40
VQualifiedName: System.err
p4316
tp4317
I3
s(Vinsert
p4318
I42
VSimpleName: getColumnType
p4319
tp4320
I1
s(Vinsert
p4321
I45
VStringLiteral: ", ownerType="
p4322
tp4323
I1
s(Vinsert
p4324
I42
VSimpleName: evalNode
p4325
tp4326
I1
s(Vinsert
p4327
I42
VSimpleName: isInterface
p4328
tp4329
I3
s(Vinsert
p4330
I45
VStringLiteral: "fred1"
p4331
tp4332
I1
s(Vinsert
p4333
I42
VSimpleName: isCallSettersOnNulls
p4334
tp4335
I3
s(Vinsert
p4336
I42
VSimpleName: getMappedStatement
p4337
tp4338
I7
s(Vinsert
p4339
I43
VSimpleType: Permission
p4340
tp4341
I1
s(Vinsert
p4342
I42
VSimpleName: reflectorMap
p4343
tp4344
I1
s(Vinsert
p4345
I42
VSimpleName: adder3
p4346
tp4347
I1
s(Vinsert
p4348
I42
VSimpleName: testShouldNotAllowMappedStatementsWithDots
p4349
tp4350
I1
s(Vinsert
p4351
I42
VSimpleName: fail
p4352
tp4353
I9
s(Vinsert
p4354
I42
VSimpleName: setName
p4355
tp4356
I8
s(Vinsert
p4357
I42
VSimpleName: Arrays
p4358
tp4359
I8
s(Vinsert
p4360
I42
VSimpleName: User
p4361
tp4362
I27
s(Vinsert
p4363
I45
VStringLiteral: "org.apache.ibatis.submitted.camel.doSelectMap"
p4364
tp4365
I1
s(Vinsert
p4366
I45
VStringLiteral: "databaseId"
p4367
tp4368
I2
s(Vinsert
p4369
I42
VSimpleName: ExecutorTestHelper
p4370
tp4371
I1
s(Vinsert
p4372
I42
VSimpleName: fetchNextObjectFromDatabase
p4373
tp4374
I1
s(Vinsert
p4375
I42
VSimpleName: findParamAnnotation
p4376
tp4377
I1
s(Vinsert
p4378
I42
VSimpleName: typeHandlerMap
p4379
tp4380
I1
s(Vinsert
p4381
I42
VSimpleName: user1
p4382
tp4383
I5
s(Vinsert
p4384
I42
VSimpleName: registry
p4385
tp4386
I5
s(Vinsert
p4387
I42
VSimpleName: hasSetter
p4388
tp4389
I2
s(Vinsert
p4390
I42
VSimpleName: mappedStatement
p4391
tp4392
I8
s(Vinsert
p4393
I45
VStringLiteral: "org/apache/ibatis/submitted/sqlprovider/CreateDB.sql"
p4394
tp4395
I1
s(Vinsert
p4396
I42
VSimpleName: getResult
p4397
tp4398
I19
s(Vinsert
p4399
I42
VSimpleName: hasNext
p4400
tp4401
I4
s(Vinsert
p4402
I42
VSimpleName: StringStringMapEntry
p4403
tp4404
I3
s(Vinsert
p4405
I42
VSimpleName: SQL_DATE
p4406
tp4407
I1
s(Vinsert
p4408
I42
VSimpleName: iterator
p4409
tp4410
I8
s(Vinsert
p4411
I74
VParameterizedType: HashSet<String>
p4412
tp4413
I3
s(Vinsert
p4414
I42
VSimpleName: resolve
p4415
tp4416
I3
s(Vinsert
p4417
I42
VSimpleName: defaultListResultHandlerType
p4418
tp4419
I2
s(Vinsert
p4420
I42
VSimpleName: anyNotNullColumnIsNotNull
p4421
tp4422
I1
s(Vinsert
p4423
I42
VSimpleName: databaseName
p4424
tp4425
I3
s(Vinsert
p4426
I42
VSimpleName: rmId
p4427
tp4428
I1
s(Vinsert
p4429
I43
VSimpleType: ParameterExpression
p4430
tp4431
I1
s(Vinsert
p4432
I42
VSimpleName: HashMap
p4433
tp4434
I11
s(Vinsert
p4435
I42
VSimpleName: params
p4436
tp4437
I6
s(Vinsert
p4438
I42
VSimpleName: then
p4439
tp4440
I4
s(Vinsert
p4441
I42
VSimpleName: EncodingMapper
p4442
tp4443
I1
s(Vinsert
p4444
I83
VModifier: final
p4445
tp4446
I66
s(Vinsert
p4447
I42
VSimpleName: getCanonicalName
p4448
tp4449
I1
s(Vinsert
p4450
I42
VSimpleName: insert
p4451
tp4452
I3
s(Vinsert
p4453
I45
VStringLiteral: "Error fetching next object from database at the DefaultCursor."
p4454
tp4455
I1
s(Vinsert
p4456
I42
VSimpleName: lookupValue
p4457
tp4458
I1
s(Vinsert
p4459
I40
VQualifiedName: org.junit.Assert
p4460
tp4461
I1
s(Vinsert
p4462
I45
VStringLiteral: "clone"
p4463
tp4464
I1
s(Vinsert
p4465
I83
VModifier: static
p4466
tp4467
I15
s(Vinsert
p4468
I42
VSimpleName: toString
p4469
tp4470
I17
s(Vinsert
p4471
I42
VSimpleName: PooledDataSource
p4472
tp4473
I2
s(Vinsert
p4474
I42
VSimpleName: never
p4475
tp4476
I1
s(Vinsert
p4477
I45
VStringLiteral: "http://mybatis.org/dtd/mybatis-3-config.dtd"
p4478
tp4479
I1
s(Vinsert
p4480
I42
VSimpleName: close
p4481
tp4482
I176
s(Vinsert
p4483
I42
VSimpleName: constructorArgTypes
p4484
tp4485
I11
s(Vinsert
p4486
I45
VStringLiteral: "Fli%"
p4487
tp4488
I2
s(Vinsert
p4489
I42
VSimpleName: parameterizedType
p4490
tp4491
I3
s(Vinsert
p4492
I42
VSimpleName: original
p4493
tp4494
I1
s(Vinsert
p4495
I42
VSimpleName: Connection
p4496
tp4497
I25
s(Vinsert
p4498
I42
VSimpleName: getStatementParameterMap
p4499
tp4500
I1
s(Vinsert
p4501
I42
VSimpleName: contains
p4502
tp4503
I5
s(Vinsert
p4504
I45
VStringLiteral: "org/apache/ibatis/submitted/autodiscover/MapperConfig.xml"
p4505
tp4506
I1
s(Vinsert
p4507
I42
VSimpleName: Deprecated
p4508
tp4509
I1
s(Vinsert
p4510
I42
VSimpleName: extendedResultMappings
p4511
tp4512
I3
s(Vinsert
p4513
I37
VPostfixExpression: ++
p4514
tp4515
I11
s(Vinsert
p4516
I74
VParameterizedType: HashMap<String,Object>
p4517
tp4518
I4
s(Vinsert
p4519
I42
VSimpleName: objectFactory
p4520
tp4521
I9
s(Vinsert
p4522
I42
VSimpleName: parameterObjects
p4523
tp4524
I1
s(Vinsert
p4525
I42
VSimpleName: PropertyParser
p4526
tp4527
I3
s(Vinsert
p4528
I43
VSimpleType: ProductMapper
p4529
tp4530
I1
s(Vinsert
p4531
I42
VSimpleName: buffer
p4532
tp4533
I1
s(Vinsert
p4534
I13
VCharacterLiteral: '\u005c''
p4535
tp4536
I1
s(Vinsert
p4537
I42
VSimpleName: writeObject
p4538
tp4539
I2
s(Vinsert
p4540
I43
VSimpleType: BigDecimal
p4541
tp4542
I1
s(Vinsert
p4543
I43
VSimpleType: BatchResult
p4544
tp4545
I2
s(Vinsert
p4546
I45
VStringLiteral: "finalize"
p4547
tp4548
I1
s(Vinsert
p4549
I42
VSimpleName: unpooledDataSourceFactory
p4550
tp4551
I1
s(Vinsert
p4552
I45
VStringLiteral: "user name, attr1=val1, attr2=val2, attr3=val3"
p4553
tp4554
I1
s(Vinsert
p4555
I42
VSimpleName: unmodifiableMap
p4556
tp4557
I1
s(Vinsert
p4558
I43
VSimpleType: LanguageDriver
p4559
tp4560
I2
s(Vinsert
p4561
I13
VCharacterLiteral: 'a'
p4562
tp4563
I1
s(Vinsert
p4564
I42
VSimpleName: Time
p4565
tp4566
I3
s(Vinsert
p4567
I42
VSimpleName: setDefaultMapResultHandlerType
p4568
tp4569
I1
s(Vinsert
p4570
I42
VSimpleName: rows
p4571
tp4572
I3
s(Vinsert
p4573
I43
VSimpleType: ExecutorService
p4574
tp4575
I1
s(Vinsert
p4576
I42
VSimpleName: flushInterval
p4577
tp4578
I2
s(Vinsert
p4579
I42
VSimpleName: addIncompleteResultMap
p4580
tp4581
I1
s(Vinsert
p4582
I42
VSimpleName: getArray
p4583
tp4584
I3
s(Vinsert
p4585
I43
VSimpleType: Closeable
p4586
tp4587
I1
s(Vinsert
p4588
I42
VSimpleName: output
p4589
tp4590
I2
s(Vinsert
p4591
I42
VSimpleName: update
p4592
tp4593
I5
s(Vinsert
p4594
I45
VStringLiteral: "barney"
p4595
tp4596
I3
s(Vinsert
p4597
I42
VSimpleName: providerType
p4598
tp4599
I2
s(Vinsert
p4600
I42
VSimpleName: len
p4601
tp4602
I1
s(Vinsert
p4603
I42
VSimpleName: invalidJdbcTypeOptUsingExpression
p4604
tp4605
I1
s(Vinsert
p4606
I42
VSimpleName: InvocationTargetException
p4607
tp4608
I2
s(Vinsert
p4609
I42
VSimpleName: StringWriter
p4610
tp4611
I2
s(Vinsert
p4612
I42
VSimpleName: addIncompleteMethod
p4613
tp4614
I1
s(Vinsert
p4615
I42
VSimpleName: rt
p4616
tp4617
I1
s(Vinsert
p4618
I42
VSimpleName: inheritedVariablesContext
p4619
tp4620
I1
s(Vinsert
p4621
I43
VSimpleType: Blog
p4622
tp4623
I8
s(Vinsert
p4624
I42
VSimpleName: columnIndex
p4625
tp4626
I29
s(Vinsert
p4627
I7
VAssignment: =
p4628
tp4629
I122
s(Vinsert
p4630
I66
VTextElement:  Kazuki Shimizu
p4631
tp4632
I1
s(Vinsert
p4633
I42
VSimpleName: getStateBird
p4634
tp4635
I1
s(Vinsert
p4636
I42
VSimpleName: isMapUnderscoreToCamelCase
p4637
tp4638
I2
s(Vinsert
p4639
I42
VSimpleName: Blog
p4640
tp4641
I8
s(Vinsert
p4642
I42
VSimpleName: aPreloadAttribute
p4643
tp4644
I1
s(Vinsert
p4645
I42
VSimpleName: Float
p4646
tp4647
I1
s(Vinsert
p4648
I42
VSimpleName: setProperty
p4649
tp4650
I6
s(Vinsert
p4651
I42
VSimpleName: names
p4652
tp4653
I8
s(Vinsert
p4654
I42
VSimpleName: HAVING
p4655
tp4656
I1
s(Vinsert
p4657
I42
VSimpleName: returnsMany
p4658
tp4659
I1
s(Vinsert
p4660
I42
VSimpleName: TransactionalCache
p4661
tp4662
I1
s(Vinsert
p4663
I74
VParameterizedType: Class<? extends TypeHandler>
p4664
tp4665
I1
s(Vinsert
p4666
I42
VSimpleName: orderDetails
p4667
tp4668
I1
s(Vinsert
p4669
I42
VSimpleName: Statement
p4670
tp4671
I3
s(Vinsert
p4672
I42
VSimpleName: getResultObject
p4673
tp4674
I5
s(Vinsert
p4675
I43
VSimpleType: ComplexImmutableAuthor
p4676
tp4677
I1
s(Vinsert
p4678
I45
VStringLiteral: "JDK_LOGGING"
p4679
tp4680
I1
s(Vinsert
p4681
I42
VSimpleName: myblob
p4682
tp4683
I1
s(Vinsert
p4684
I74
VParameterizedType: Collection<Class<?>>
p4685
tp4686
I1
s(Vinsert
p4687
I43
VSimpleType: Calculator
p4688
tp4689
I1
s(Vinsert
p4690
I42
VSimpleName: columnPrefix
p4691
tp4692
I11
s(Vinsert
p4693
I42
VSimpleName: shouldFailForWrongNamespace
p4694
tp4695
I1
s(Vinsert
p4696
I42
VSimpleName: langDriver
p4697
tp4698
I2
s(Vinsert
p4699
I42
VSimpleName: addMapper
p4700
tp4701
I6
s(Vinsert
p4702
I42
VSimpleName: conjunction
p4703
tp4704
I1
s(Vinsert
p4705
I42
VSimpleName: metaParameters
p4706
tp4707
I2
s(Vinsert
p4708
I42
VSimpleName: resolveFieldType
p4709
tp4710
I3
s(Vinsert
p4711
I42
VSimpleName: getReputation
p4712
tp4713
I1
s(Vinsert
p4714
I42
VSimpleName: flushPendingEntries
p4715
tp4716
I1
s(Vinsert
p4717
I42
VSimpleName: hasMoreElements
p4718
tp4719
I1
s(Vinsert
p4720
I42
VSimpleName: getDataSource
p4721
tp4722
I1
s(Vinsert
p4723
I45
VStringLiteral: ", javaType="
p4724
tp4725
I1
s(Vinsert
p4726
I42
VSimpleName: NoTypeHandlerInterface
p4727
tp4728
I1
s(Vinsert
p4729
I42
VSimpleName: DefaultResultContext
p4730
tp4731
I1
s(Vinsert
p4732
I42
VSimpleName: setProperties
p4733
tp4734
I1
s(Vinsert
p4735
I43
VSimpleType: Parameter
p4736
tp4737
I3
s(Vinsert
p4738
I45
VStringLiteral: "Ba"
p4739
tp4740
I1
s(Vinsert
p4741
I42
VSimpleName: getColumn
p4742
tp4743
I1
s(Vinsert
p4744
I45
VStringLiteral: "org.apache.ibatis.submitted.deferload_common_property.ChildMapper.selectAll"
p4745
tp4746
I1
s(Vinsert
p4747
I45
VStringLiteral: "User2"
p4748
tp4749
I3
s(Vinsert
p4750
I42
VSimpleName: child
p4751
tp4752
I10
s(Vinsert
p4753
I42
VSimpleName: parentRowKey
p4754
tp4755
I1
s(Vinsert
p4756
I43
VSimpleType: ResultMapping.Builder
p4757
tp4758
I2
s(Vinsert
p4759
I42
VSimpleName: selectXmlWithMapperAndSqlSymbols
p4760
tp4761
I1
s(Vinsert
p4762
I42
VSimpleName: addLoader
p4763
tp4764
I1
s(Vinsert
p4765
I43
VSimpleType: ReflectorFactory
p4766
tp4767
I5
s(Vinsert
p4768
I42
VSimpleName: setProxyFactory
p4769
tp4770
I1
s(Vinsert
p4771
I42
VSimpleName: createProxy
p4772
tp4773
I5
s(Vinsert
p4774
I42
VSimpleName: reverseMap
p4775
tp4776
I3
s(Vinsert
p4777
I42
VSimpleName: trimmedLine
p4778
tp4779
I1
s(Vinsert
p4780
I42
VSimpleName: getValue
p4781
tp4782
I6
s(Vinsert
p4783
I42
VSimpleName: OgnlException
p4784
tp4785
I2
s(Vinsert
p4786
I42
VSimpleName: verify
p4787
tp4788
I1
s(Vinsert
p4789
I43
VSimpleType: DynSqlMapper
p4790
tp4791
I1
s(Vinsert
p4792
I34
VNumberLiteral: 100f
p4793
tp4794
I1
s(Vinsert
p4795
I42
VSimpleName: getDeclaredConstructor
p4796
tp4797
I1
s(Vinsert
p4798
I42
VSimpleName: resultHandler
p4799
tp4800
I1
s(Vinsert
p4801
I40
VQualifiedName: org.apache.ibatis.logging.jdbc.ConnectionLogger
p4802
tp4803
I1
s(Vinsert
p4804
I45
VStringLiteral: "Smith"
p4805
tp4806
I1
s(Vinsert
p4807
I42
VSimpleName: jdbcTypes
p4808
tp4809
I1
s(Vinsert
p4810
I8
VBlock
p4811
tp4812
I650
s(Vinsert
p4813
I43
VSimpleType: Enhancer
p4814
tp4815
I2
s(Vinsert
p4816
I42
VSimpleName: handleResult
p4817
tp4818
I1
s(Vinsert
p4819
I43
VSimpleType: E
p4820
tp4821
I11
s(Vinsert
p4822
I42
VSimpleName: evaluator
p4823
tp4824
I2
s(Vinsert
p4825
I42
VSimpleName: getAutoMappingBehavior
p4826
tp4827
I2
s(Vinsert
p4828
I42
VSimpleName: getActualParamName
p4829
tp4830
I1
s(Vinsert
p4831
I34
VNumberLiteral: 1000
p4832
tp4833
I1
s(Vinsert
p4834
I42
VSimpleName: account
p4835
tp4836
I1
s(Vinsert
p4837
I43
VSimpleType: Character
p4838
tp4839
I1
s(Vinsert
p4840
I76
VWildcardType: ?
p4841
tp4842
I73
s(Vinsert
p4843
I42
VSimpleName: PluginException
p4844
tp4845
I1
s(Vinsert
p4846
I42
VSimpleName: getSuperclass
p4847
tp4848
I1
s(Vinsert
p4849
I42
VSimpleName: key
p4850
tp4851
I20
s(Vinsert
p4852
I42
VSimpleName: connectionLogger
p4853
tp4854
I1
s(Vinsert
p4855
I45
VStringLiteral: "#{uuu.u}, #{u.id}, #{ u,typeHandler=org.apache.ibatis.type.StringTypeHandler},"
p4856
tp4857
I1
s(Vinsert
p4858
I42
VSimpleName: DefaultReflectorFactory
p4859
tp4860
I4
s(Vinsert
p4861
I43
VSimpleType: PreparedStatement
p4862
tp4863
I2
s(Vinsert
p4864
I45
VStringLiteral: "org/apache/ibatis/submitted/finelazyloading/CreateDB.sql"
p4865
tp4866
I1
s(Vinsert
p4867
I43
VSimpleType: Connection
p4868
tp4869
I25
s(Vinsert
p4870
I43
VSimpleType: ResultColumnCache
p4871
tp4872
I4
s(Vinsert
p4873
I42
VSimpleName: clearCache
p4874
tp4875
I1
s(Vinsert
p4876
I5
VArrayType: byte[]
p4877
tp4878
I4
s(Vinsert
p4879
I42
VSimpleName: team
p4880
tp4881
I1
s(Vinsert
p4882
I40
VQualifiedName: org.apache.ibatis.logging.nologging.NoLoggingImpl
p4883
tp4884
I1
s(Vinsert
p4885
I45
VStringLiteral: "UNPOOLED"
p4886
tp4887
I1
s(Vinsert
p4888
I42
VSimpleName: shouldWorkWithAPropertyNamedValue
p4889
tp4890
I1
s(Vinsert
p4891
I42
VSimpleName: XMLScriptBuilder
p4892
tp4893
I2
s(Vinsert
p4894
I42
VSimpleName: parameterMappings
p4895
tp4896
I1
s(Vinsert
p4897
I40
VQualifiedName: SupportClasses.CustomObjectFactory
p4898
tp4899
I1
s(Vinsert
p4900
I42
VSimpleName: getMoreResults
p4901
tp4902
I1
s(Vinsert
p4903
I42
VSimpleName: order
p4904
tp4905
I1
s(Vinsert
p4906
I42
VSimpleName: resultExtractor
p4907
tp4908
I1
s(Vinsert
p4909
I40
VQualifiedName: parameterTypes.length
p4910
tp4911
I1
s(Vinsert
p4912
I40
VQualifiedName: mappedStatement.lang
p4913
tp4914
I1
s(Vinsert
p4915
I42
VSimpleName: SQL_TIME
p4916
tp4917
I2
s(Vinsert
p4918
I42
VSimpleName: uniqueNumber
p4919
tp4920
I2
s(Vinsert
p4921
I42
VSimpleName: getUpdateCount
p4922
tp4923
I2
s(Vinsert
p4924
I42
VSimpleName: hasResultHandler
p4925
tp4926
I1
s(Vinsert
p4927
I42
VSimpleName: ResultHandler
p4928
tp4929
I1
s(Vinsert
p4930
I42
VSimpleName: getKeyGenerator
p4931
tp4932
I1
s(Vinsert
p4933
I43
VSimpleType: IllegalArgumentException
p4934
tp4935
I1
s(Vinsert
p4936
I42
VSimpleName: delegate
p4937
tp4938
I9
s(Vinsert
p4939
I42
VSimpleName: getBoolean
p4940
tp4941
I2
s(Vinsert
p4942
I43
VSimpleType: AnnotatedMapper
p4943
tp4944
I3
s(Vinsert
p4945
I43
VSimpleType: InputStream
p4946
tp4947
I4
s(Vinsert
p4948
I42
VSimpleName: ProductId
p4949
tp4950
I5
s(Vinsert
p4951
I42
VSimpleName: LocalDateTimeTypeHandler
p4952
tp4953
I1
s(Vinsert
p4954
I42
VSimpleName: apply
p4955
tp4956
I6
s(Vinsert
p4957
I42
VSimpleName: product
p4958
tp4959
I2
s(Vinsert
p4960
I42
VSimpleName: forName
p4961
tp4962
I1
s(Vinsert
p4963
I42
VSimpleName: nestedQueryCacheObject
p4964
tp4965
I2
s(Vinsert
p4966
I43
VSimpleType: Exception
p4967
tp4968
I52
s(Vinsert
p4969
I42
VSimpleName: resultMapResolver
p4970
tp4971
I1
s(Vinsert
p4972
I42
VSimpleName: alias
p4973
tp4974
I3
s(Vinsert
p4975
I42
VSimpleName: fields
p4976
tp4977
I1
s(Vinsert
p4978
I74
VParameterizedType: List<User>
p4979
tp4980
I2
s(Vinsert
p4981
I45
VStringLiteral: "(id.toString()),name=value"
p4982
tp4983
I1
s(Vinsert
p4984
I42
VSimpleName: rm
p4985
tp4986
I1
s(Vinsert
p4987
I42
VSimpleName: shouldUseNew31Names
p4988
tp4989
I1
s(Vinsert
p4990
I42
VSimpleName: forObject
p4991
tp4992
I3
s(Vinsert
p4993
I39
VPrimitiveType: char
p4994
tp4995
I3
s(Vinsert
p4996
I42
VSimpleName: appendSql
p4997
tp4998
I2
s(Vinsert
p4999
I42
VSimpleName: Executors
p5000
tp5001
I1
s(Vinsert
p5002
I42
VSimpleName: wildcard
p5003
tp5004
I1
s(Vinsert
p5005
I1
VAnonymousClassDeclaration
p5006
tp5007
I6
s(Vinsert
p5008
I42
VSimpleName: get
p5009
tp5010
I49
s(Vinsert
p5011
I42
VSimpleName: CglibProxyFactory
p5012
tp5013
I2
s(Vinsert
p5014
I42
VSimpleName: m
p5015
tp5016
I3
s(Vinsert
p5017
I42
VSimpleName: evalLong
p5018
tp5019
I1
s(Vinsert
p5020
I5
VArrayType: Type[]
p5021
tp5022
I2
s(Vinsert
p5023
I42
VSimpleName: invalidOldJdbcTypeFormat
p5024
tp5025
I1
s(Vinsert
p5026
I45
VStringLiteral: "org/apache/ibatis/submitted/encoding/EncodingConfig.xml"
p5027
tp5028
I1
s(Vinsert
p5029
I43
VSimpleType: Log
p5030
tp5031
I8
s(Vinsert
p5032
I74
VParameterizedType: ResolverUtil<Class<?>>
p5033
tp5034
I1
s(Vinsert
p5035
I43
VSimpleType: Name
p5036
tp5037
I17
s(Vinsert
p5038
I42
VSimpleName: setFirstName
p5039
tp5040
I2
s(Vinsert
p5041
I42
VSimpleName: containsLogicalDelete
p5042
tp5043
I1
s(Vinsert
p5044
I42
VSimpleName: getTransactionalCache
p5045
tp5046
I1
s(Vinsert
p5047
I44
VSingleVariableDeclaration
p5048
tp5049
I256
s(Vinsert
p5050
I42
VSimpleName: readObject
p5051
tp5052
I2
s(Vinsert
p5053
I43
VSimpleType: GenericArrayType
p5054
tp5055
I1
s(Vinsert
p5056
I42
VSimpleName: typeAliasRegistry
p5057
tp5058
I4
s(Vinsert
p5059
I42
VSimpleName: getString
p5060
tp5061
I10
s(Vinsert
p5062
I42
VSimpleName: CustomCollection
p5063
tp5064
I1
s(Vinsert
p5065
I45
VStringLiteral: "org/apache/ibatis/submitted/refid_resolution/ExternalMapperConfig.xml"
p5066
tp5067
I1
s(Vinsert
p5068
I42
VSimpleName: VFS
p5069
tp5070
I2
s(Vinsert
p5071
I42
VSimpleName: addImplClass
p5072
tp5073
I1
s(Vinsert
p5074
I45
VStringLiteral: "users"
p5075
tp5076
I1
s(Vinsert
p5077
I45
VStringLiteral: "Error resolving ResultSetType. Cause: java.lang.IllegalArgumentException: No enum"
p5078
tp5079
I1
s(Vinsert
p5080
I45
VStringLiteral: "No @Intercepts annotation was found in interceptor "
p5081
tp5082
I1
s(Vinsert
p5083
I42
VSimpleName: ArrayList
p5084
tp5085
I6
s(Vinsert
p5086
I43
VSimpleType: Post
p5087
tp5088
I1
s(Vinsert
p5089
I42
VSimpleName: DeserializationProxyImpl
p5090
tp5091
I1
s(Vinsert
p5092
I42
VSimpleName: myByteArrayOutputStream
p5093
tp5094
I1
s(Vinsert
p5095
I41
VReturnStatement
p5096
tp5097
I121
s(Vinsert
p5098
I42
VSimpleName: fetchSize
p5099
tp5100
I1
s(Vinsert
p5101
I5
VArrayType: String[]
p5102
tp5103
I2
s(Vinsert
p5104
I45
VStringLiteral: "There is no getter for property named 'idd' in 'class org.apache.ibatis.submitted.foreach.User'"
p5105
tp5106
I1
s(Vinsert
p5107
I42
VSimpleName: buildAllStatements
p5108
tp5109
I1
s(Vinsert
p5110
I42
VSimpleName: InputStreamReader
p5111
tp5112
I1
s(Vinsert
p5113
I42
VSimpleName: defaultValue
p5114
tp5115
I3
s(Vinsert
p5116
I42
VSimpleName: root
p5117
tp5118
I1
s(Vinsert
p5119
I27
VInfixExpression: <
p5120
tp5121
I18
s(Vinsert
p5122
I42
VSimpleName: IllegalStateException
p5123
tp5124
I3
s(Vinsert
p5125
I42
VSimpleName: getDriver
p5126
tp5127
I1
s(Vinsert
p5128
I42
VSimpleName: shouldDescribePrimitiveArrayParameter
p5129
tp5130
I1
s(Vinsert
p5131
I42
VSimpleName: ps
p5132
tp5133
I6
s(Vinsert
p5134
I42
VSimpleName: threads
p5135
tp5136
I2
s(Vinsert
p5137
I66
VTextElement:  3.2.2
p5138
tp5139
I1
s(Vinsert
p5140
I42
VSimpleName: getChild
p5141
tp5142
I1
s(Vinsert
p5143
I42
VSimpleName: id
p5144
tp5145
I15
s(Vinsert
p5146
I43
VSimpleType: ResultType
p5147
tp5148
I1
s(Vinsert
p5149
I42
VSimpleName: getStringAttribute
p5150
tp5151
I30
s(Vinsert
p5152
I45
VStringLiteral: ", actualTypeArguments="
p5153
tp5154
I1
s(Vinsert
p5155
I42
VSimpleName: WHERE
p5156
tp5157
I1
s(Vinsert
p5158
I42
VSimpleName: instanceOf
p5159
tp5160
I1
s(Vinsert
p5161
I42
VSimpleName: packageName
p5162
tp5163
I2
s(Vinsert
p5164
I42
VSimpleName: currentIndex
p5165
tp5166
I1
s(Vinsert
p5167
I42
VSimpleName: selectVelocityWithMapper
p5168
tp5169
I1
s(Vinsert
p5170
I42
VSimpleName: cacheRefNamespace
p5171
tp5172
I2
s(Vinsert
p5173
I43
VSimpleType: FileNotFoundException
p5174
tp5175
I1
s(Vinsert
p5176
I43
VSimpleType: ResultSetMetaData
p5177
tp5178
I2
s(Vinsert
p5179
I42
VSimpleName: nextResultObject
p5180
tp5181
I1
s(Vinsert
p5182
I42
VSimpleName: genericSuperclass
p5183
tp5184
I1
s(Vinsert
p5185
I42
VSimpleName: javaTypeReference
p5186
tp5187
I2
s(Vinsert
p5188
I76
VWildcardType: ? extends Log
p5189
tp5190
I1
s(Vinsert
p5191
I42
VSimpleName: getNamesAndItemsLinkedById
p5192
tp5193
I1
s(Vinsert
p5194
I42
VSimpleName: iter
p5195
tp5196
I6
s(Vinsert
p5197
I40
VQualifiedName: org.apache.ibatis.logging.Log
p5198
tp5199
I1
s(Vinsert
p5200
I42
VSimpleName: stmt
p5201
tp5202
I7
s(Vinsert
p5203
I45
VStringLiteral: "association"
p5204
tp5205
I1
s(Vinsert
p5206
I42
VSimpleName: previous
p5207
tp5208
I4
s(Vinsert
p5209
I42
VSimpleName: selectAllAuthorsVector
p5210
tp5211
I1
s(Vinsert
p5212
I42
VSimpleName: base
p5213
tp5214
I3
s(Vinsert
p5215
I10
VBreakStatement
p5216
tp5217
I3
s(Vinsert
p5218
I42
VSimpleName: equals
p5219
tp5220
I39
s(Vinsert
p5221
I42
VSimpleName: metaMap
p5222
tp5223
I3
s(Vinsert
p5224
I42
VSimpleName: resultMap
p5225
tp5226
I10
s(Vinsert
p5227
I42
VSimpleName: hasMessage
p5228
tp5229
I5
s(Vinsert
p5230
I42
VSimpleName: keyProperties
p5231
tp5232
I3
s(Vinsert
p5233
I43
VSimpleType: ParameterMapping
p5234
tp5235
I1
s(Vinsert
p5236
I42
VSimpleName: newPlaceholderContext
p5237
tp5238
I1
s(Vinsert
p5239
I45
VStringLiteral: "Database element may provide a database id or a provider, but not both."
p5240
tp5241
I1
s(Vinsert
p5242
I74
VParameterizedType: List<PendingRelation>
p5243
tp5244
I1
s(Vinsert
p5245
I42
VSimpleName: environment
p5246
tp5247
I4
s(Vinsert
p5248
I42
VSimpleName: getContacts
p5249
tp5250
I1
s(Vinsert
p5251
I42
VSimpleName: propertyType
p5252
tp5253
I4
s(Vinsert
p5254
I43
VSimpleType: BoundBlogMapper
p5255
tp5256
I8
s(Vinsert
p5257
I43
VSimpleType: DeferredLoad
p5258
tp5259
I1
s(Vinsert
p5260
I42
VSimpleName: row
p5261
tp5262
I2
s(Vinsert
p5263
I42
VSimpleName: resultObject
p5264
tp5265
I4
s(Vinsert
p5266
I42
VSimpleName: charAt
p5267
tp5268
I2
s(Vinsert
p5269
I42
VSimpleName: setSuperclass
p5270
tp5271
I1
s(Vinsert
p5272
I42
VSimpleName: foreignColumn
p5273
tp5274
I3
s(Vinsert
p5275
I45
VStringLiteral: ""
p5276
tp5277
I4
s(Vinsert
p5278
I42
VSimpleName: setAddend1
p5279
tp5280
I1
s(Vinsert
p5281
I42
VSimpleName: doAction
p5282
tp5283
I1
s(Vinsert
p5284
I43
VSimpleType: BlobRecord
p5285
tp5286
I2
s(Vinsert
p5287
I42
VSimpleName: getMappingTypeHandler
p5288
tp5289
I1
s(Vinsert
p5290
I42
VSimpleName: Configuration
p5291
tp5292
I27
s(Vinsert
p5293
I42
VSimpleName: applyClose
p5294
tp5295
I1
s(Vinsert
p5296
I42
VSimpleName: b
p5297
tp5298
I3
s(Vinsert
p5299
I42
VSimpleName: Calculator
p5300
tp5301
I1
s(Vinsert
p5302
I42
VSimpleName: pendingRelations
p5303
tp5304
I1
s(Vinsert
p5305
I43
VSimpleType: JdbcType
p5306
tp5307
I3
s(Vinsert
p5308
I42
VSimpleName: returnTypeParameter
p5309
tp5310
I5
s(Vinsert
p5311
I45
VStringLiteral: "u"
p5312
tp5313
I1
s(Vinsert
p5314
I42
VSimpleName: getNameOnly
p5315
tp5316
I1
s(Vinsert
p5317
I42
VSimpleName: getUser
p5318
tp5319
I1
s(Vinsert
p5320
I42
VSimpleName: getCharset
p5321
tp5322
I1
s(Vinsert
p5323
I45
VStringLiteral: "select * from users "
p5324
tp5325
I1
s(Vinsert
p5326
I42
VSimpleName: mixedContents
p5327
tp5328
I2
s(Vinsert
p5329
I65
VTagElement: @code
p5330
tp5331
I1
s(Vinsert
p5332
I42
VSimpleName: secondPermission
p5333
tp5334
I1
s(Vinsert
p5335
I42
VSimpleName: InputStream
p5336
tp5337
I5
s(Vinsert
p5338
I42
VSimpleName: getResourceAsReader
p5339
tp5340
I38
s(Vinsert
p5341
I42
VSimpleName: executable
p5342
tp5343
I1
s(Vinsert
p5344
I42
VSimpleName: employee
p5345
tp5346
I1
s(Vinsert
p5347
I43
VSimpleType: Reflector
p5348
tp5349
I5
s(Vinsert
p5350
I42
VSimpleName: selectXmlWithMapper
p5351
tp5352
I1
s(Vinsert
p5353
I42
VSimpleName: getResultMapId
p5354
tp5355
I1
s(Vinsert
p5356
I42
VSimpleName: aliasAnnotation
p5357
tp5358
I1
s(Vinsert
p5359
I42
VSimpleName: getStatementType
p5360
tp5361
I1
s(Vinsert
p5362
I42
VSimpleName: aClass
p5363
tp5364
I1
s(Vinsert
p5365
I34
VNumberLiteral: 100
p5366
tp5367
I3
s(Vinsert
p5368
I42
VSimpleName: newMetaObject
p5369
tp5370
I5
s(Vinsert
p5371
I42
VSimpleName: setBestFriend
p5372
tp5373
I1
s(Vinsert
p5374
I42
VSimpleName: getModifiers
p5375
tp5376
I1
s(Vinsert
p5377
I43
VSimpleType: VFS
p5378
tp5379
I1
s(Vinsert
p5380
I43
VSimpleType: Node
p5381
tp5382
I4
s(Vinsert
p5383
I74
VParameterizedType: Map<Integer,Object>
p5384
tp5385
I2
s(Vinsert
p5386
I42
VSimpleName: selectThing
p5387
tp5388
I1
s(Vinsert
p5389
I42
VSimpleName: TYPE_HANDLER_MAP
p5390
tp5391
I3
s(Vinsert
p5392
I42
VSimpleName: unloadedProperties
p5393
tp5394
I8
s(Vinsert
p5395
I34
VNumberLiteral: 2l
p5396
tp5397
I1
s(Vinsert
p5398
I45
VStringLiteral: "]"
p5399
tp5400
I1
s(Vinsert
p5401
I42
VSimpleName: vfsImpl
p5402
tp5403
I2
s(Vinsert
p5404
I42
VSimpleName: properties
p5405
tp5406
I16
s(Vinsert
p5407
I42
VSimpleName: suffixList
p5408
tp5409
I1
s(Vinsert
p5410
I42
VSimpleName: shouldCommitAnUnUsedSqlSession
p5411
tp5412
I1
s(Vinsert
p5413
I43
VSimpleType: ResultHandler
p5414
tp5415
I1
s(Vinsert
p5416
I45
VStringLiteral: " with spaces "
p5417
tp5418
I1
s(Vinsert
p5419
I45
VStringLiteral: "org/apache/ibatis/submitted/refid_resolution/MapperConfig.xml"
p5420
tp5421
I1
s(Vinsert
p5422
I42
VSimpleName: methodName
p5423
tp5424
I2
s(Vinsert
p5425
I42
VSimpleName: shouldFailWithAMissingColumnInNetstedSelect
p5426
tp5427
I2
s(Vinsert
p5428
I43
VSimpleType: VelocityContext
p5429
tp5430
I1
s(Vinsert
p5431
I42
VSimpleName: right
p5432
tp5433
I2
s(Vinsert
p5434
I45
VStringLiteral: "false"
p5435
tp5436
I2
s(Vinsert
p5437
I42
VSimpleName: useCamelCaseMapping
p5438
tp5439
I2
s(Vinsert
p5440
I42
VSimpleName: JakartaCommonsLoggingImpl
p5441
tp5442
I1
s(Vinsert
p5443
I43
VSimpleType: EncodingMapper
p5444
tp5445
I1
s(Vinsert
p5446
I42
VSimpleName: getInterfaces
p5447
tp5448
I1
s(Vinsert
p5449
I42
VSimpleName: testEmptyNamespace
p5450
tp5451
I1
s(Vinsert
p5452
I42
VSimpleName: RuntimeException
p5453
tp5454
I1
s(Vinsert
p5455
I43
VSimpleType: MapperProxy
p5456
tp5457
I1
s(Vinsert
p5458
I42
VSimpleName: shouldFailForBothOneAndMany
p5459
tp5460
I1
s(Vinsert
p5461
I42
VSimpleName: FINALIZE_METHOD
p5462
tp5463
I2
s(Vinsert
p5464
I42
VSimpleName: MapParam
p5465
tp5466
I3
s(Vinsert
p5467
I42
VSimpleName: getWarnings
p5468
tp5469
I1
s(Vinsert
p5470
I42
VSimpleName: typeNames
p5471
tp5472
I1
s(Vinsert
p5473
I42
VSimpleName: selectMap
p5474
tp5475
I3
s(Vinsert
p5476
I43
VSimpleType: Principal
p5477
tp5478
I1
s(Vinsert
p5479
I42
VSimpleName: NodeList
p5480
tp5481
I1
s(Vinsert
p5482
I42
VSimpleName: source
p5483
tp5484
I14
s(Vinsert
p5485
I43
VSimpleType: BoundAuthorMapper
p5486
tp5487
I2
s(Vinsert
p5488
I43
VSimpleType: PrivateLanguageDriver
p5489
tp5490
I1
s(Vinsert
p5491
I45
VStringLiteral: "author should not be null"
p5492
tp5493
I1
s(Vinsert
p5494
I42
VSimpleName: authorMapper
p5495
tp5496
I1
s(Vinsert
p5497
I42
VSimpleName: ProductMapper
p5498
tp5499
I1
s(Vinsert
p5500
I42
VSimpleName: FileInputStream
p5501
tp5502
I1
s(Vinsert
p5503
I74
VParameterizedType: Set<Class<? extends Class>>
p5504
tp5505
I1
s(Vinsert
p5506
I43
VSimpleType: DefaultMapResultHandler
p5507
tp5508
I1
s(Vinsert
p5509
I40
VQualifiedName: resultMap.mappedProperties
p5510
tp5511
I1
s(Vinsert
p5512
I42
VSimpleName: userList
p5513
tp5514
I1
s(Vinsert
p5515
I40
VQualifiedName: java.lang.reflect.Array
p5516
tp5517
I2
s(Vinsert
p5518
I42
VSimpleName: VariableTokenHandler
p5519
tp5520
I1
s(Vinsert
p5521
I42
VSimpleName: getTypeHandlers
p5522
tp5523
I1
s(Vinsert
p5524
I42
VSimpleName: typeHandlerRegistry
p5525
tp5526
I7
s(Vinsert
p5527
I42
VSimpleName: nestedQueryId
p5528
tp5529
I4
s(Vinsert
p5530
I43
VSimpleType: DefaultReflectorFactory
p5531
tp5532
I4
s(Vinsert
p5533
I42
VSimpleName: countTokens
p5534
tp5535
I1
s(Vinsert
p5536
I42
VSimpleName: setZip
p5537
tp5538
I1
s(Vinsert
p5539
I42
VSimpleName: oneColumns
p5540
tp5541
I2
s(Vinsert
p5542
I23
VFieldDeclaration
p5543
tp5544
I15
s(Vinsert
p5545
I42
VSimpleName: ObjB
p5546
tp5547
I2
s(Vinsert
p5548
I42
VSimpleName: getUsersByNameWithParamName
p5549
tp5550
I1
s(Vinsert
p5551
I42
VSimpleName: Long
p5552
tp5553
I4
s(Vinsert
p5554
I42
VSimpleName: shouldExtractSet
p5555
tp5556
I1
s(Vinsert
p5557
I42
VSimpleName: getShort
p5558
tp5559
I2
s(Vinsert
p5560
I42
VSimpleName: keyGen
p5561
tp5562
I1
s(Vinsert
p5563
I42
VSimpleName: throwables
p5564
tp5565
I1
s(Vinsert
p5566
I43
VSimpleType: InsertMapper
p5567
tp5568
I1
s(Vinsert
p5569
I42
VSimpleName: Entry
p5570
tp5571
I3
s(Vinsert
p5572
I42
VSimpleName: HashSet
p5573
tp5574
I3
s(Vinsert
p5575
I42
VSimpleName: constructorArgs
p5576
tp5577
I15
s(Vinsert
p5578
I42
VSimpleName: JarInputStream
p5579
tp5580
I1
s(Vinsert
p5581
I74
VParameterizedType: List<List<?>>
p5582
tp5583
I2
s(Vinsert
p5584
I42
VSimpleName: shouldGetResultNullFromResultSetByName
p5585
tp5586
I2
s(Vinsert
p5587
I62
VInstanceofExpression
p5588
tp5589
I8
s(Vinsert
p5590
I42
VSimpleName: Type
p5591
tp5592
I7
s(Vinsert
p5593
I42
VSimpleName: StatementHandler
p5594
tp5595
I1
s(Vinsert
p5596
I42
VSimpleName: getTypeHandlerRegistry
p5597
tp5598
I2
s(Vinsert
p5599
I42
VSimpleName: metaCache
p5600
tp5601
I1
s(Vinsert
p5602
I43
VSimpleType: ObjB
p5603
tp5604
I2
s(Vinsert
p5605
I69
VMethodRefParameter
p5606
tp5607
I1
s(Vinsert
p5608
I42
VSimpleName: getTypeHandler
p5609
tp5610
I7
s(Vinsert
p5611
I43
VSimpleType: VelocitySqlSource
p5612
tp5613
I1
s(Vinsert
p5614
I42
VSimpleName: getBooks
p5615
tp5616
I1
s(Vinsert
p5617
I42
VSimpleName: getter1
p5618
tp5619
I1
s(Vinsert
p5620
I34
VNumberLiteral: 2
p5621
tp5622
I36
s(Vinsert
p5623
I42
VSimpleName: closeConnectionProperty
p5624
tp5625
I1
s(Vinsert
p5626
I42
VSimpleName: assertThat
p5627
tp5628
I14
s(Vinsert
p5629
I42
VSimpleName: Timestamp
p5630
tp5631
I6
s(Vinsert
p5632
I42
VSimpleName: ORDER_BY
p5633
tp5634
I3
s(Vinsert
p5635
I42
VSimpleName: ExecutorException
p5636
tp5637
I4
s(Vinsert
p5638
I42
VSimpleName: getTitle
p5639
tp5640
I2
s(Vinsert
p5641
I42
VSimpleName: initialize
p5642
tp5643
I1
s(Vinsert
p5644
I42
VSimpleName: databaseId
p5645
tp5646
I14
s(Vinsert
p5647
I43
VSimpleType: TypeHandler
p5648
tp5649
I13
s(Vinsert
p5650
I43
VSimpleType: BoundSql
p5651
tp5652
I10
s(Vinsert
p5653
I42
VSimpleName: unmodifiableCollection
p5654
tp5655
I2
s(Vinsert
p5656
I42
VSimpleName: selectCursor
p5657
tp5658
I2
s(Vinsert
p5659
I42
VSimpleName: refType
p5660
tp5661
I1
s(Vinsert
p5662
I43
VSimpleType: StaticMethodSqlProviderMapper
p5663
tp5664
I1
s(Vinsert
p5665
I74
VParameterizedType: List<Map<Integer,Object>>
p5666
tp5667
I1
s(Vinsert
p5668
I42
VSimpleName: data
p5669
tp5670
I4
s(Vinsert
p5671
I42
VSimpleName: shouldBeAbleToRegisterAliasWithNullType
p5672
tp5673
I1
s(Vinsert
p5674
I42
VSimpleName: Pattern
p5675
tp5676
I4
s(Vinsert
p5677
I42
VSimpleName: getDoubleValue
p5678
tp5679
I1
s(Vinsert
p5680
I31
VMethodDeclaration
p5681
tp5682
I78
s(Vinsert
p5683
I45
VStringLiteral: "uuuu"
p5684
tp5685
I1
s(Vinsert
p5686
I42
VSimpleName: getMappers
p5687
tp5688
I1
s(Vinsert
p5689
I27
VInfixExpression: *
p5690
tp5691
I3
s(Vinsert
p5692
I42
VSimpleName: applyCurrentNamespace
p5693
tp5694
I2
s(Vinsert
p5695
I42
VSimpleName: assembleConnectionTypeCode
p5696
tp5697
I1
s(Vinsert
p5698
I39
VPrimitiveType: void
p5699
tp5700
I110
s(Vinsert
p5701
I42
VSimpleName: mapperPackage
p5702
tp5703
I1
s(Vinsert
p5704
I42
VSimpleName: myArguments
p5705
tp5706
I1
s(Vinsert
p5707
I42
VSimpleName: insertAuthor
p5708
tp5709
I1
s(Vinsert
p5710
I42
VSimpleName: firstPost
p5711
tp5712
I3
s(Vinsert
p5713
I42
VSimpleName: StringReader
p5714
tp5715
I1
s(Vinsert
p5716
I42
VSimpleName: failure
p5717
tp5718
I1
s(Vinsert
p5719
I42
VSimpleName: knownMappers
p5720
tp5721
I2
s(Vinsert
p5722
I42
VSimpleName: isReturnInstanceForEmptyRow
p5723
tp5724
I1
s(Vinsert
p5725
I42
VSimpleName: BindingException
p5726
tp5727
I3
s(Vinsert
p5728
I42
VSimpleName: input
p5729
tp5730
I1
s(Vinsert
p5731
I45
VStringLiteral: "derby"
p5732
tp5733
I1
s(Vinsert
p5734
I42
VSimpleName: builderAssistant
p5735
tp5736
I5
s(Vinsert
p5737
I42
VSimpleName: getMarker
p5738
tp5739
I1
s(Vinsert
p5740
I42
VSimpleName: commit
p5741
tp5742
I3
s(Vinsert
p5743
I42
VSimpleName: BoundBlogMapper
p5744
tp5745
I8
s(Vinsert
p5746
I42
VSimpleName: ResolverUtil
p5747
tp5748
I3
s(Vinsert
p5749
I42
VSimpleName: getSqlSession
p5750
tp5751
I1
s(Vinsert
p5752
I42
VSimpleName: NAME_TYPE
p5753
tp5754
I1
s(Vinsert
p5755
I27
VInfixExpression: !=
p5756
tp5757
I79
s(Vinsert
p5758
I42
VSimpleName: end
p5759
tp5760
I3
s(Vinsert
p5761
I42
VSimpleName: assertArrayEquals
p5762
tp5763
I1
s(Vinsert
p5764
I45
VStringLiteral: "name"
p5765
tp5766
I2
s(Vinsert
p5767
I45
VStringLiteral: "Hiya"
p5768
tp5769
I2
s(Vinsert
p5770
I42
VSimpleName: clob
p5771
tp5772
I4
s(Vinsert
p5773
I42
VSimpleName: resultSetTypeEnum
p5774
tp5775
I1
s(Vinsert
p5776
I39
VPrimitiveType: boolean
p5777
tp5778
I18
s(Vinsert
p5779
I42
VSimpleName: injectionFilter
p5780
tp5781
I2
s(Vinsert
p5782
I42
VSimpleName: getTransactionFactory
p5783
tp5784
I1
s(Vinsert
p5785
I42
VSimpleName: resulSet
p5786
tp5787
I1
s(Vinsert
p5788
I45
VStringLiteral: "We should have failed since we call next() when hasNext() returned false"
p5789
tp5790
I1
s(Vinsert
p5791
I42
VSimpleName: insertIdentity
p5792
tp5793
I2
s(Vinsert
p5794
I42
VSimpleName: parameterType
p5795
tp5796
I4
s(Vinsert
p5797
I45
VStringLiteral: ", nestedResultMapId='"
p5798
tp5799
I1
s(Vinsert
p5800
I42
VSimpleName: textSqlNode
p5801
tp5802
I2
s(Vinsert
p5803
I74
VParameterizedType: HashMap<String,XNode>
p5804
tp5805
I1
s(Vinsert
p5806
I42
VSimpleName: getColumnCount
p5807
tp5808
I2
s(Vinsert
p5809
I42
VSimpleName: byteValue
p5810
tp5811
I1
s(Vinsert
p5812
I42
VSimpleName: lock
p5813
tp5814
I1
s(Vinsert
p5815
I42
VSimpleName: deleteCharAt
p5816
tp5817
I1
s(Vinsert
p5818
I42
VSimpleName: replaceAll
p5819
tp5820
I1
s(Vinsert
p5821
I42
VSimpleName: applyTransactionTimeout
p5822
tp5823
I3
s(Vinsert
p5824
I42
VSimpleName: connection
p5825
tp5826
I11
s(Vinsert
p5827
I42
VSimpleName: databaseNameEntry
p5828
tp5829
I2
s(Vinsert
p5830
I42
VSimpleName: Is
p5831
tp5832
I4
s(Vinsert
p5833
I42
VSimpleName: TooManyResultsException
p5834
tp5835
I1
s(Vinsert
p5836
I42
VSimpleName: joins
p5837
tp5838
I1
s(Vinsert
p5839
I45
VStringLiteral: "param"
p5840
tp5841
I1
s(Vinsert
p5842
I74
VParameterizedType: ArrayList<ResultMapping>
p5843
tp5844
I1
s(Vinsert
p5845
I42
VSimpleName: parseStatementNode
p5846
tp5847
I1
s(Vinsert
p5848
I42
VSimpleName: fieldType
p5849
tp5850
I3
s(Vinsert
p5851
I42
VSimpleName: getDefaultScriptingLanuageInstance
p5852
tp5853
I1
s(Vinsert
p5854
I59
VVariableDeclarationFragment
p5855
tp5856
I609
s(Vinsert
p5857
I42
VSimpleName: getTinynumber
p5858
tp5859
I1
s(Vinsert
p5860
I43
VSimpleType: MetaObject
p5861
tp5862
I3
s(Vinsert
p5863
I42
VSimpleName: setPoolPingEnabled
p5864
tp5865
I1
s(Vinsert
p5866
I42
VSimpleName: BLOB_TYPES
p5867
tp5868
I3
s(Vinsert
p5869
I45
VStringLiteral: "-//mybatis.org//DTD Mapper 3.0//EN"
p5870
tp5871
I1
s(Vinsert
p5872
I43
VSimpleType: Jdbc3KeyGenerator
p5873
tp5874
I4
s(Vinsert
p5875
I42
VSimpleName: pet2
p5876
tp5877
I1
s(Vinsert
p5878
I42
VSimpleName: parentAutoMapping
p5879
tp5880
I5
s(Vinsert
p5881
I40
VQualifiedName: java.util.List
p5882
tp5883
I2
s(Vinsert
p5884
I43
VSimpleType: Child
p5885
tp5886
I1
s(Vinsert
p5887
I42
VSimpleName: getAttributes
p5888
tp5889
I1
s(Vinsert
p5890
I45
VStringLiteral: "' not found. Available parameters are "
p5891
tp5892
I3
s(Vinsert
p5893
I40
VQualifiedName: org.slf4j.Marker
p5894
tp5895
I1
s(Vinsert
p5896
I42
VSimpleName: results
p5897
tp5898
I7
s(Vinsert
p5899
I42
VSimpleName: getRawType
p5900
tp5901
I7
s(Vinsert
p5902
I42
VSimpleName: getAutoCommit
p5903
tp5904
I1
s(Vinsert
p5905
I45
VStringLiteral: "Closing JDBC Connection ["
p5906
tp5907
I1
s(Vinsert
p5908
I45
VStringLiteral: "org/apache/ibatis/submitted/blobtest/MapperConfig.xml"
p5909
tp5910
I1
s(Vinsert
p5911
I42
VSimpleName: setInjectionFilter
p5912
tp5913
I1
s(Vinsert
p5914
I42
VSimpleName: setLastUsedTimestamp
p5915
tp5916
I1
s(Vinsert
p5917
I42
VSimpleName: ProxyFactory
p5918
tp5919
I1
s(Vinsert
p5920
I42
VSimpleName: autoMappingsCache
p5921
tp5922
I1
s(Vinsert
p5923
I42
VSimpleName: node
p5924
tp5925
I4
s(Vinsert
p5926
I42
VSimpleName: owns
p5927
tp5928
I1
s(Vinsert
p5929
I42
VSimpleName: hashCode
p5930
tp5931
I5
s(Vinsert
p5932
I40
VQualifiedName: Node.ELEMENT_NODE
p5933
tp5934
I1
s(Vinsert
p5935
I34
VNumberLiteral: 3l
p5936
tp5937
I1
s(Vinsert
p5938
I42
VSimpleName: keyProperty
p5939
tp5940
I3
s(Vinsert
p5941
I42
VSimpleName: multiResultsWithUpdate
p5942
tp5943
I1
s(Vinsert
p5944
I42
VSimpleName: currentThread
p5945
tp5946
I1
s(Vinsert
p5947
I42
VSimpleName: moreHandler
p5948
tp5949
I1
s(Vinsert
p5950
I42
VSimpleName: getPropertyResultMappings
p5951
tp5952
I1
s(Vinsert
p5953
I42
VSimpleName: wrapConnection
p5954
tp5955
I1
s(Vinsert
p5956
I45
VStringLiteral: "target/address.ser"
p5957
tp5958
I1
s(Vinsert
p5959
I42
VSimpleName: Enhancer
p5960
tp5961
I2
s(Vinsert
p5962
I42
VSimpleName: i
p5963
tp5964
I53
s(Vinsert
p5965
I42
VSimpleName: sqlSession
p5966
tp5967
I124
s(Vinsert
p5968
I42
VSimpleName: desc
p5969
tp5970
I1
s(Vinsert
p5971
I42
VSimpleName: BatchResult
p5972
tp5973
I2
s(Vinsert
p5974
I42
VSimpleName: parametersEmulation
p5975
tp5976
I2
s(Vinsert
p5977
I42
VSimpleName: StatementLogger
p5978
tp5979
I1
s(Vinsert
p5980
I43
VSimpleType: TooManyResultsException
p5981
tp5982
I1
s(Vinsert
p5983
I43
VSimpleType: RuntimeException
p5984
tp5985
I1
s(Vinsert
p5986
I42
VSimpleName: getDoubleWrapperValue
p5987
tp5988
I1
s(Vinsert
p5989
I42
VSimpleName: parseExpression
p5990
tp5991
I2
s(Vinsert
p5992
I45
VStringLiteral: "resultSet"
p5993
tp5994
I1
s(Vinsert
p5995
I42
VSimpleName: flags
p5996
tp5997
I3
s(Vinsert
p5998
I42
VSimpleName: getSmallnumber
p5999
tp6000
I1
s(Vinsert
p6001
I42
VSimpleName: extractRowBounds
p6002
tp6003
I1
s(Vinsert
p6004
I45
VStringLiteral: "Christian"
p6005
tp6006
I1
s(Vinsert
p6007
I42
VSimpleName: tearDown
p6008
tp6009
I1
s(Vinsert
p6010
I42
VSimpleName: getDefaultFetchSize
p6011
tp6012
I1
s(Vinsert
p6013
I43
VSimpleType: Time
p6014
tp6015
I2
s(Vinsert
p6016
I42
VSimpleName: stop
p6017
tp6018
I1
s(Vinsert
p6019
I42
VSimpleName: Constructor
p6020
tp6021
I4
s(Vinsert
p6022
I45
VStringLiteral: "Hello"
p6023
tp6024
I2
s(Vinsert
p6025
I43
VSimpleType: V
p6026
tp6027
I1
s(Vinsert
p6028
I42
VSimpleName: selectRangeBlogsAsMapById
p6029
tp6030
I1
s(Vinsert
p6031
I34
VNumberLiteral: 10.01
p6032
tp6033
I1
s(Vinsert
p6034
I42
VSimpleName: mapperSet
p6035
tp6036
I1
s(Vinsert
p6037
I42
VSimpleName: testLazyLoadWithFirstAncestor
p6038
tp6039
I1
s(Vinsert
p6040
I42
VSimpleName: ParameterExpression
p6041
tp6042
I1
s(Vinsert
p6043
I42
VSimpleName: rsmd
p6044
tp6045
I8
s(Vinsert
p6046
I42
VSimpleName: isClearLocalCacheAfterEachStatement
p6047
tp6048
I1
s(Vinsert
p6049
I42
VSimpleName: badFile
p6050
tp6051
I1
s(Vinsert
p6052
I45
VStringLiteral: "Type "
p6053
tp6054
I1
s(Vinsert
p6055
I45
VStringLiteral: "Fred"
p6056
tp6057
I1
s(Vinsert
p6058
I42
VSimpleName: plsqlMode
p6059
tp6060
I1
s(Vinsert
p6061
I42
VSimpleName: componentType
p6062
tp6063
I3
s(Vinsert
p6064
I42
VSimpleName: parseStatement
p6065
tp6066
I1
s(Vinsert
p6067
I74
VParameterizedType: ArrayList<Integer>
p6068
tp6069
I2
s(Vinsert
p6070
I42
VSimpleName: handlerSet
p6071
tp6072
I1
s(Vinsert
p6073
I42
VSimpleName: synchronizedMap
p6074
tp6075
I1
s(Vinsert
p6076
I45
VStringLiteral: "alsofred@fred.com"
p6077
tp6078
I1
s(Vinsert
p6079
I42
VSimpleName: rawType
p6080
tp6081
I5
s(Vinsert
p6082
I42
VSimpleName: getDefaultStatementTimeout
p6083
tp6084
I2
s(Vinsert
p6085
I42
VSimpleName: left
p6086
tp6087
I2
s(Vinsert
p6088
I76
VWildcardType: ? extends TypeHandler
p6089
tp6090
I2
s(Vinsert
p6091
I42
VSimpleName: additionalParameters
p6092
tp6093
I1
s(Vinsert
p6094
I42
VSimpleName: Modifier
p6095
tp6096
I2
s(Vinsert
p6097
I42
VSimpleName: fileInputStream
p6098
tp6099
I3
s(Vinsert
p6100
I42
VSimpleName: getProperty
p6101
tp6102
I32
s(Vinsert
p6103
I42
VSimpleName: useCacheRef
p6104
tp6105
I1
s(Vinsert
p6106
I42
VSimpleName: getDatabaseId
p6107
tp6108
I7
s(Vinsert
p6109
I42
VSimpleName: getUserXML
p6110
tp6111
I1
s(Vinsert
p6112
I42
VSimpleName: childs
p6113
tp6114
I1
s(Vinsert
p6115
I42
VSimpleName: metaParam
p6116
tp6117
I3
s(Vinsert
p6118
I42
VSimpleName: getUsername
p6119
tp6120
I1
s(Vinsert
p6121
I42
VSimpleName: timestamp
p6122
tp6123
I4
s(Vinsert
p6124
I43
VSimpleType: MethodResolver
p6125
tp6126
I3
s(Vinsert
p6127
I45
VStringLiteral: "Something..."
p6128
tp6129
I1
s(Vinsert
p6130
I74
VParameterizedType: Entry<JdbcType,TypeHandler<?>>
p6131
tp6132
I1
s(Vinsert
p6133
I74
VParameterizedType: HashMap<String,String>
p6134
tp6135
I4
s(Vinsert
p6136
I40
VQualifiedName: org.apache.ibatis.reflection.wrapper.ObjectWrapperFactory
p6137
tp6138
I1
s(Vinsert
p6139
I42
VSimpleName: setPublicId
p6140
tp6141
I1
s(Vinsert
p6142
I43
VSimpleType: CountryMapper
p6143
tp6144
I3
s(Vinsert
p6145
I42
VSimpleName: parameterMetaObject
p6146
tp6147
I2
s(Vinsert
p6148
I42
VSimpleName: getNamesAndItemsLinkedAnnotationBased
p6149
tp6150
I1
s(Vinsert
p6151
I42
VSimpleName: selectBlogsWithAutorAndPostsEagerly
p6152
tp6153
I1
s(Vinsert
p6154
I42
VSimpleName: assertEquals
p6155
tp6156
I89
s(Vinsert
p6157
I42
VSimpleName: buildStatementFromContext
p6158
tp6159
I1
s(Vinsert
p6160
I45
VStringLiteral: "org.apache.ibatis.submitted.dynsql.selectLike"
p6161
tp6162
I1
s(Vinsert
p6163
I42
VSimpleName: getParameterObject
p6164
tp6165
I1
s(Vinsert
p6166
I45
VStringLiteral: "j2ee\u005ct"
p6167
tp6168
I1
s(Vinsert
p6169
I42
VSimpleName: shouldGetResultFromResultSet
p6170
tp6171
I1
s(Vinsert
p6172
I42
VSimpleName: keya
p6173
tp6174
I2
s(Vinsert
p6175
I42
VSimpleName: assertFalse
p6176
tp6177
I4
s(Vinsert
p6178
I42
VSimpleName: executeStatement
p6179
tp6180
I1
s(Vinsert
p6181
I42
VSimpleName: getBytes
p6182
tp6183
I5
s(Vinsert
p6184
I42
VSimpleName: getNamesAndItemsLinked
p6185
tp6186
I1
s(Vinsert
p6187
I42
VSimpleName: resulSets
p6188
tp6189
I1
s(Vinsert
p6190
I42
VSimpleName: statementLog
p6191
tp6192
I6
s(Vinsert
p6193
I43
VSimpleType: Address
p6194
tp6195
I2
s(Vinsert
p6196
I42
VSimpleName: partialObject
p6197
tp6198
I4
s(Vinsert
p6199
I43
VSimpleType: ResultMapping
p6200
tp6201
I6
s(Vinsert
p6202
I42
VSimpleName: Ignore
p6203
tp6204
I1
s(Vinsert
p6205
I42
VSimpleName: Order
p6206
tp6207
I2
s(Vinsert
p6208
I42
VSimpleName: shouldBuildCustomizedConfiguration
p6209
tp6210
I1
s(Vinsert
p6211
I42
VSimpleName: one
p6212
tp6213
I4
s(Vinsert
p6214
I42
VSimpleName: singletonList
p6215
tp6216
I1
s(Vinsert
p6217
I42
VSimpleName: getLength
p6218
tp6219
I5
s(Vinsert
p6220
I27
VInfixExpression: &&
p6221
tp6222
I27
s(Vinsert
p6223
I42
VSimpleName: addMappedStatement
p6224
tp6225
I2
s(Vinsert
p6226
I40
VQualifiedName: Level.FINER
p6227
tp6228
I1
s(Vinsert
p6229
I42
VSimpleName: selectAllProducts
p6230
tp6231
I1
s(Vinsert
p6232
I42
VSimpleName: setObject
p6233
tp6234
I1
s(Vinsert
p6235
I42
VSimpleName: reader
p6236
tp6237
I72
s(Vinsert
p6238
I42
VSimpleName: cursor
p6239
tp6240
I2
s(Vinsert
p6241
I42
VSimpleName: testNotNullColumnWithoutChildrenWithRefResultMap
p6242
tp6243
I1
s(Vinsert
p6244
I42
VSimpleName: javaTypeClass
p6245
tp6246
I1
s(Vinsert
p6247
I42
VSimpleName: resolvedComponentType
p6248
tp6249
I1
s(Vinsert
p6250
I42
VSimpleName: rowBounds
p6251
tp6252
I10
s(Vinsert
p6253
I42
VSimpleName: sqlSessionProxy
p6254
tp6255
I3
s(Vinsert
p6256
I45
VStringLiteral: "}.  Valid properties are "
p6257
tp6258
I1
s(Vinsert
p6259
I42
VSimpleName: orders
p6260
tp6261
I3
s(Vinsert
p6262
I42
VSimpleName: selectAsMap
p6263
tp6264
I1
s(Vinsert
p6265
I43
VSimpleType: PersonMapper
p6266
tp6267
I8
s(Vinsert
p6268
I42
VSimpleName: specifyTransactionTimeout
p6269
tp6270
I1
s(Vinsert
p6271
I42
VSimpleName: UnMappedColumAutoMapping
p6272
tp6273
I1
s(Vinsert
p6274
I42
VSimpleName: getGeneratedName
p6275
tp6276
I1
s(Vinsert
p6277
I42
VSimpleName: bigint
p6278
tp6279
I1
s(Vinsert
p6280
I42
VSimpleName: shouldUseSlf4j
p6281
tp6282
I1
s(Vinsert
p6283
I42
VSimpleName: columnName
p6284
tp6285
I24
s(Vinsert
p6286
I42
VSimpleName: Results
p6287
tp6288
I1
s(Vinsert
p6289
I42
VSimpleName: DynSqlMapper
p6290
tp6291
I1
s(Vinsert
p6292
I42
VSimpleName: emptyList
p6293
tp6294
I4
s(Vinsert
p6295
I42
VSimpleName: insertNameAnnotated
p6296
tp6297
I1
s(Vinsert
p6298
I45
VStringLiteral: "org/apache/ibatis/submitted/multiple_resultsets/mybatis-config.xml"
p6299
tp6300
I1
s(Vinsert
p6301
I42
VSimpleName: shouldFindAllMutablePostLites
p6302
tp6303
I1
s(Vinsert
p6304
I40
VQualifiedName: Locale.ENGLISH
p6305
tp6306
I2
s(Vinsert
p6307
I42
VSimpleName: min
p6308
tp6309
I1
s(Vinsert
p6310
I42
VSimpleName: shouldFailWithTooManyResultsException
p6311
tp6312
I1
s(Vinsert
p6313
I42
VSimpleName: cachedMapperMethod
p6314
tp6315
I1
s(Vinsert
p6316
I42
VSimpleName: ResultType
p6317
tp6318
I1
s(Vinsert
p6319
I43
VSimpleType: IntBoolMapEntry
p6320
tp6321
I1
s(Vinsert
p6322
I42
VSimpleName: arg
p6323
tp6324
I4
s(Vinsert
p6325
I74
VParameterizedType: Class<?>
p6326
tp6327
I36
s(Vinsert
p6328
I45
VStringLiteral: "USERID\u005ct"
p6329
tp6330
I1
s(Vinsert
p6331
I42
VSimpleName: getColumnPrefix
p6332
tp6333
I1
s(Vinsert
p6334
I42
VSimpleName: beanWithWriteReplace
p6335
tp6336
I1
s(Vinsert
p6337
I45
VStringLiteral: "Poitras"
p6338
tp6339
I1
s(Vinsert
p6340
I42
VSimpleName: log
p6341
tp6342
I34
s(Vinsert
p6343
I42
VSimpleName: Environment
p6344
tp6345
I4
s(Vinsert
p6346
I42
VSimpleName: debug
p6347
tp6348
I3
s(Vinsert
p6349
I42
VSimpleName: configReader
p6350
tp6351
I12
s(Vinsert
p6352
I74
VParameterizedType: TypeHandler<?>
p6353
tp6354
I6
s(Vinsert
p6355
I42
VSimpleName: mappedColumnNames
p6356
tp6357
I3
s(Vinsert
p6358
I42
VSimpleName: getByte
p6359
tp6360
I2
s(Vinsert
p6361
I43
VSimpleType: Short
p6362
tp6363
I1
s(Vinsert
p6364
I42
VSimpleName: ExpectedException
p6365
tp6366
I2
s(Vinsert
p6367
I42
VSimpleName: javaTypeClassName
p6368
tp6369
I1
s(Vinsert
p6370
I42
VSimpleName: relations
p6371
tp6372
I1
s(Vinsert
p6373
I42
VSimpleName: BaseStatementHandler
p6374
tp6375
I2
s(Vinsert
p6376
I42
VSimpleName: p
p6377
tp6378
I2
s(Vinsert
p6379
I66
VTextElement:  3.4.0
p6380
tp6381
I1
s(Vinsert
p6382
I42
VSimpleName: line
p6383
tp6384
I2
s(Vinsert
p6385
I42
VSimpleName: addResultMap
p6386
tp6387
I1
s(Vinsert
p6388
I42
VSimpleName: StudentConstructor
p6389
tp6390
I1
s(Vinsert
p6391
I42
VSimpleName: openConnection
p6392
tp6393
I2
s(Vinsert
p6394
I42
VSimpleName: boundSql
p6395
tp6396
I15
s(Vinsert
p6397
I42
VSimpleName: SqlSession
p6398
tp6399
I68
s(Vinsert
p6400
I45
VStringLiteral: "value 1"
p6401
tp6402
I1
s(Vinsert
p6403
I45
VStringLiteral: "' is not assignable to '"
p6404
tp6405
I1
s(Vinsert
p6406
I42
VSimpleName: subElements
p6407
tp6408
I2
s(Vinsert
p6409
I42
VSimpleName: author
p6410
tp6411
I5
s(Vinsert
p6412
I42
VSimpleName: departmentMapper
p6413
tp6414
I1
s(Vinsert
p6415
I42
VSimpleName: getMappedResults
p6416
tp6417
I1
s(Vinsert
p6418
I42
VSimpleName: namespace
p6419
tp6420
I1
s(Vinsert
p6421
I42
VSimpleName: useSlf4jLogging
p6422
tp6423
I1
s(Vinsert
p6424
I42
VSimpleName: ScriptRunner
p6425
tp6426
I57
s(Vinsert
p6427
I42
VSimpleName: shouldInsertInCommonWithSelectKey
p6428
tp6429
I1
s(Vinsert
p6430
I42
VSimpleName: iface
p6431
tp6432
I1
s(Vinsert
p6433
I42
VSimpleName: statementLogger
p6434
tp6435
I1
s(Vinsert
p6436
I42
VSimpleName: getResultSet
p6437
tp6438
I3
s(Vinsert
p6439
I42
VSimpleName: XNode
p6440
tp6441
I9
s(Vinsert
p6442
I45
VStringLiteral: "John"
p6443
tp6444
I1
s(Vinsert
p6445
I42
VSimpleName: setLogWriter
p6446
tp6447
I42
s(Vinsert
p6448
I42
VSimpleName: leftOuterJoin
p6449
tp6450
I1
s(Vinsert
p6451
I42
VSimpleName: AfterClass
p6452
tp6453
I1
s(Vinsert
p6454
I42
VSimpleName: getGenericComponentType
p6455
tp6456
I1
s(Vinsert
p6457
I43
VSimpleType: URI
p6458
tp6459
I1
s(Vinsert
p6460
I42
VSimpleName: getBounds
p6461
tp6462
I1
s(Vinsert
p6463
I42
VSimpleName: DefaultResultHandler
p6464
tp6465
I3
s(Vinsert
p6466
I42
VSimpleName: gc
p6467
tp6468
I1
s(Vinsert
p6469
I43
VSimpleType: LocalDate
p6470
tp6471
I1
s(Vinsert
p6472
I74
VParameterizedType: LinkedHashMap<String,Object>
p6473
tp6474
I1
s(Vinsert
p6475
I43
VSimpleType: DefaultResultContext
p6476
tp6477
I1
s(Vinsert
p6478
I43
VSimpleType: JdbcTransactionFactory
p6479
tp6480
I3
s(Vinsert
p6481
I42
VSimpleName: isDebugEnabled
p6482
tp6483
I20
s(Vinsert
p6484
I42
VSimpleName: paramIndex
p6485
tp6486
I2
s(Vinsert
p6487
I42
VSimpleName: getObjectFactory
p6488
tp6489
I3
s(Vinsert
p6490
I42
VSimpleName: getGetterType
p6491
tp6492
I2
s(Vinsert
p6493
I42
VSimpleName: testBlockingCache
p6494
tp6495
I1
s(Vinsert
p6496
I42
VSimpleName: asList
p6497
tp6498
I4
s(Vinsert
p6499
I45
VStringLiteral: "select userid from account where userid = 'j2ee'\u005cn\u005cnUSERID\u005ct\u005cnj2ee\u005ct\u005cn"
p6500
tp6501
I1
s(Vinsert
p6502
I42
VSimpleName: ParameterMap
p6503
tp6504
I1
s(Vinsert
p6505
I42
VSimpleName: getFld1
p6506
tp6507
I1
s(Vinsert
p6508
I40
VQualifiedName: java.sql.Date
p6509
tp6510
I1
s(Vinsert
p6511
I42
VSimpleName: getComponentType
p6512
tp6513
I1
s(Vinsert
p6514
I40
VQualifiedName: LocalCacheScope.STATEMENT
p6515
tp6516
I1
s(Vinsert
p6517
I45
VStringLiteral: "invalid column"
p6518
tp6519
I1
s(Vinsert
p6520
I42
VSimpleName: shouldFailSelectOneAuthorUsingMapperClassWithTwoResultHandlers
p6521
tp6522
I1
s(Vinsert
p6523
I42
VSimpleName: getLong
p6524
tp6525
I3
s(Vinsert
p6526
I45
VStringLiteral: "line.separator"
p6527
tp6528
I3
s(Vinsert
p6529
I42
VSimpleName: products
p6530
tp6531
I1
s(Vinsert
p6532
I42
VSimpleName: list
p6533
tp6534
I22
s(Vinsert
p6535
I42
VSimpleName: doThrow
p6536
tp6537
I1
s(Vinsert
p6538
I74
VParameterizedType: List<Node>
p6539
tp6540
I1
s(Vinsert
p6541
I42
VSimpleName: setLength
p6542
tp6543
I1
s(Vinsert
p6544
I42
VSimpleName: blob
p6545
tp6546
I4
s(Vinsert
p6547
I42
VSimpleName: firstNewRowValue
p6548
tp6549
I1
s(Vinsert
p6550
I42
VSimpleName: newFixedThreadPool
p6551
tp6552
I1
s(Vinsert
p6553
I42
VSimpleName: closeConnection
p6554
tp6555
I1
s(Vinsert
p6556
I43
VSimpleType: StatementType
p6557
tp6558
I1
s(Vinsert
p6559
I34
VNumberLiteral: 22
p6560
tp6561
I1
s(Vinsert
p6562
I45
VStringLiteral: "org.apache.ibatis.submitted.velocity.selectNames"
p6563
tp6564
I1
s(Vinsert
p6565
I42
VSimpleName: date
p6566
tp6567
I2
s(Vinsert
p6568
I42
VSimpleName: getenv
p6569
tp6570
I1
s(Vinsert
p6571
I43
VSimpleType: SqlNode
p6572
tp6573
I5
s(Vinsert
p6574
I42
VSimpleName: OrderDetail
p6575
tp6576
I2
s(Vinsert
p6577
I43
VSimpleType: Long
p6578
tp6579
I2
s(Vinsert
p6580
I42
VSimpleName: pm
p6581
tp6582
I7
s(Vinsert
p6583
I42
VSimpleName: script
p6584
tp6585
I7
s(Vinsert
p6586
I42
VSimpleName: ResultMapResolver
p6587
tp6588
I1
s(Vinsert
p6589
I42
VSimpleName: winner
p6590
tp6591
I2
s(Vinsert
p6592
I42
VSimpleName: newProxyInstance
p6593
tp6594
I1
s(Vinsert
p6595
I42
VSimpleName: Collection
p6596
tp6597
I8
s(Vinsert
p6598
I45
VStringLiteral: "jar:file:/PATH_TO/mysql-connector-java-5.1.25.jar!/"
p6599
tp6600
I1
s(Vinsert
p6601
I42
VSimpleName: loadCompleted
p6602
tp6603
I2
s(Vinsert
p6604
I45
VStringLiteral: "someone"
p6605
tp6606
I1
s(Vinsert
p6607
I42
VSimpleName: metaCachedParameter
p6608
tp6609
I1
s(Vinsert
p6610
I42
VSimpleName: shouldNotGetClass
p6611
tp6612
I1
s(Vinsert
p6613
I42
VSimpleName: scriptPath
p6614
tp6615
I2
s(Vinsert
p6616
I42
VSimpleName: migrationsHome
p6617
tp6618
I2
s(Vinsert
p6619
I42
VSimpleName: isFinal
p6620
tp6621
I2
s(Vinsert
p6622
I42
VSimpleName: XMLMapperEntityResolver
p6623
tp6624
I1
s(Vinsert
p6625
I42
VSimpleName: ambiguousStatement
p6626
tp6627
I1
s(Vinsert
p6628
I42
VSimpleName: nestedBoundSql
p6629
tp6630
I1
s(Vinsert
p6631
I42
VSimpleName: getAbsolutePath
p6632
tp6633
I1
s(Vinsert
p6634
I42
VSimpleName: numColums
p6635
tp6636
I2
s(Vinsert
p6637
I42
VSimpleName: Test
p6638
tp6639
I61
s(Vinsert
p6640
I42
VSimpleName: cacheDomain
p6641
tp6642
I2
s(Vinsert
p6643
I42
VSimpleName: context
p6644
tp6645
I47
s(Vinsert
p6646
I42
VSimpleName: moreBlogs
p6647
tp6648
I2
s(Vinsert
p6649
I42
VSimpleName: regex
p6650
tp6651
I1
s(Vinsert
p6652
I42
VSimpleName: checkInjection
p6653
tp6654
I1
s(Vinsert
p6655
I42
VSimpleName: XMLDynamicLanguageDriver
p6656
tp6657
I1
s(Vinsert
p6658
I74
VParameterizedType: List<ComplexImmutableAuthor>
p6659
tp6660
I1
s(Vinsert
p6661
I45
VStringLiteral: "phone.home"
p6662
tp6663
I1
s(Vinsert
p6664
I42
VSimpleName: AnnotatedMapper
p6665
tp6666
I3
s(Vinsert
p6667
I42
VSimpleName: now
p6668
tp6669
I1
s(Vinsert
p6670
I42
VSimpleName: shouldHandleZeroParameters
p6671
tp6672
I1
s(Vinsert
p6673
I74
VParameterizedType: Map<Method,MapperMethod>
p6674
tp6675
I1
s(Vinsert
p6676
I43
VSimpleType: Marker
p6677
tp6678
I1
s(Vinsert
p6679
I45
VStringLiteral: "Error creating SqlSource for SqlProvider. Method '"
p6680
tp6681
I1
s(Vinsert
p6682
I42
VSimpleName: build
p6683
tp6684
I19
s(Vinsert
p6685
I45
VStringLiteral: "A typeHandler element may only specify a handler or a package, but not both."
p6686
tp6687
I1
s(Vinsert
p6688
I43
VSimpleType: DataSource
p6689
tp6690
I2
s(Vinsert
p6691
I42
VSimpleName: clazz
p6692
tp6693
I17
s(Vinsert
p6694
I42
VSimpleName: methods
p6695
tp6696
I1
s(Vinsert
p6697
I42
VSimpleName: getBigDecimal
p6698
tp6699
I4
s(Vinsert
p6700
I42
VSimpleName: UnpooledDataSource
p6701
tp6702
I3
s(Vinsert
p6703
I42
VSimpleName: getSession
p6704
tp6705
I1
s(Vinsert
p6706
I42
VSimpleName: incompleteCacheRefs
p6707
tp6708
I2
s(Vinsert
p6709
I42
VSimpleName: AutoMappingBehavior
p6710
tp6711
I1
s(Vinsert
p6712
I42
VSimpleName: charset
p6713
tp6714
I1
s(Vinsert
p6715
I42
VSimpleName: TextSqlNode
p6716
tp6717
I5
s(Vinsert
p6718
I43
VSimpleType: InvocationTargetException
p6719
tp6720
I2
s(Vinsert
p6721
I42
VSimpleName: exception
p6722
tp6723
I3
s(Vinsert
p6724
I45
VStringLiteral: ", nestedQueryId='"
p6725
tp6726
I1
s(Vinsert
p6727
I42
VSimpleName: setAutoCommit
p6728
tp6729
I1
s(Vinsert
p6730
I43
VSimpleType: DefaultObjectWrapperFactory
p6731
tp6732
I1
s(Vinsert
p6733
I42
VSimpleName: TEMPLATE_PREFIX
p6734
tp6735
I1
s(Vinsert
p6736
I43
VSimpleType: SerialStatusHolder
p6737
tp6738
I1
s(Vinsert
p6739
I45
VStringLiteral: "Cannot get Configuration as configuration factory was not set."
p6740
tp6741
I1
s(Vinsert
p6742
I42
VSimpleName: annotatedSubject
p6743
tp6744
I1
s(Vinsert
p6745
I45
VStringLiteral: "blog author"
p6746
tp6747
I1
s(Vinsert
p6748
I45
VStringLiteral: "Author1"
p6749
tp6750
I1
s(Vinsert
p6751
I43
VSimpleType: BaseStatementHandler
p6752
tp6753
I2
s(Vinsert
p6754
I42
VSimpleName: hasMessageContaining
p6755
tp6756
I4
s(Vinsert
p6757
I43
VSimpleType: CglibProxyFactory
p6758
tp6759
I2
s(Vinsert
p6760
I42
VSimpleName: PendingRelation
p6761
tp6762
I1
s(Vinsert
p6763
I45
VStringLiteral: "WHERE id in ("
p6764
tp6765
I1
s(Vinsert
p6766
I40
VQualifiedName: java.util.Map
p6767
tp6768
I1
s(Vinsert
p6769
I42
VSimpleName: getId
p6770
tp6771
I23
s(Vinsert
p6772
I45
VStringLiteral: "OMIT"
p6773
tp6774
I1
s(Vinsert
p6775
I43
VSimpleType: String
p6776
tp6777
I186
s(Vinsert
p6778
I42
VSimpleName: getMethodCache
p6779
tp6780
I1
s(Vinsert
p6781
I45
VStringLiteral: "AFTER"
p6782
tp6783
I1
s(Vinsert
p6784
I45
VStringLiteral: "User1"
p6785
tp6786
I3
s(Vinsert
p6787
I42
VSimpleName: setAddend2
p6788
tp6789
I1
s(Vinsert
p6790
I51
VSynchronizedStatement
p6791
tp6792
I2
s(Vinsert
p6793
I42
VSimpleName: assertNotSame
p6794
tp6795
I1
s(Vinsert
p6796
I42
VSimpleName: user2
p6797
tp6798
I1
s(Vinsert
p6799
I42
VSimpleName: setString
p6800
tp6801
I1
s(Vinsert
p6802
I42
VSimpleName: getBinaryStream
p6803
tp6804
I1
s(Vinsert
p6805
I34
VNumberLiteral: 9.01
p6806
tp6807
I1
s(Vinsert
p6808
I42
VSimpleName: e
p6809
tp6810
I25
s(Vinsert
p6811
I42
VSimpleName: TypeReference
p6812
tp6813
I2
s(Vinsert
p6814
I43
VSimpleType: Object
p6815
tp6816
I72
s(Vinsert
p6817
I42
VSimpleName: knownValue
p6818
tp6819
I1
s(Vinsert
p6820
I43
VSimpleType: CharSequence
p6821
tp6822
I1
s(Vinsert
p6823
I42
VSimpleName: mappedTypeFound
p6824
tp6825
I1
s(Vinsert
p6826
I42
VSimpleName: setValue
p6827
tp6828
I7
s(Vinsert
p6829
I43
VSimpleType: RoundingMode
p6830
tp6831
I1
s(Vinsert
p6832
I42
VSimpleName: getStringBody
p6833
tp6834
I2
s(Vinsert
p6835
I42
VSimpleName: fullContext
p6836
tp6837
I1
s(Vinsert
p6838
I42
VSimpleName: target
p6839
tp6840
I4
s(Vinsert
p6841
I34
VNumberLiteral: 0.0d
p6842
tp6843
I1
s(Vinsert
p6844
I42
VSimpleName: shouldFailOnDuplicatedId
p6845
tp6846
I1
s(Vinsert
p6847
I42
VSimpleName: trace
p6848
tp6849
I10
s(Vinsert
p6850
I43
VSimpleType: LocalDateTimeTypeHandler
p6851
tp6852
I1
s(Vinsert
p6853
I42
VSimpleName: shouldThrowExceptionIfNoMatchingStatementFound
p6854
tp6855
I1
s(Vinsert
p6856
I42
VSimpleName: Child
p6857
tp6858
I1
s(Vinsert
p6859
I42
VSimpleName: shouldGetAUser
p6860
tp6861
I2
s(Vinsert
p6862
I42
VSimpleName: NoSuchElementException
p6863
tp6864
I1
s(Vinsert
p6865
I45
VStringLiteral: "org.postgresql.Driver"
p6866
tp6867
I2
s(Vinsert
p6868
I42
VSimpleName: getNames
p6869
tp6870
I1
s(Vinsert
p6871
I42
VSimpleName: assertNotNull
p6872
tp6873
I13
s(Vinsert
p6874
I42
VSimpleName: unsortedRowHandlerElements
p6875
tp6876
I1
s(Vinsert
p6877
I42
VSimpleName: getStatementIdWithNameSpace
p6878
tp6879
I1
s(Vinsert
p6880
I40
VQualifiedName: Types.BINARY
p6881
tp6882
I1
s(Vinsert
p6883
I74
VParameterizedType: List<ResultFlag>
p6884
tp6885
I1
s(Vinsert
p6886
I42
VSimpleName: indexedName
p6887
tp6888
I1
s(Vinsert
p6889
I42
VSimpleName: newStatementHandler
p6890
tp6891
I1
s(Vinsert
p6892
I42
VSimpleName: oneArgumentAndProviderContext
p6893
tp6894
I1
s(Vinsert
p6895
I42
VSimpleName: getDefaultMapResultHandlerType
p6896
tp6897
I1
s(Vinsert
p6898
I42
VSimpleName: getComplexWithParamAttributes
p6899
tp6900
I1
s(Vinsert
p6901
I42
VSimpleName: Jdbc3KeyGenerator
p6902
tp6903
I4
s(Vinsert
p6904
I42
VSimpleName: Class
p6905
tp6906
I57
s(Vinsert
p6907
I74
VParameterizedType: TypeReference<T>
p6908
tp6909
I1
s(Vinsert
p6910
I42
VSimpleName: sort
p6911
tp6912
I1
s(Vinsert
p6913
I45
VStringLiteral: "Nested lazy loaded result property '"
p6914
tp6915
I1
s(Vinsert
p6916
I42
VSimpleName: constructor
p6917
tp6918
I6
s(Vinsert
p6919
I74
VParameterizedType: Collection<MethodResolver>
p6920
tp6921
I1
s(Vinsert
p6922
I40
VQualifiedName: Void.TYPE
p6923
tp6924
I1
s(Vinsert
p6925
I74
VParameterizedType: List<String>
p6926
tp6927
I4
s(Vinsert
p6928
I42
VSimpleName: setEscapeProcessing
p6929
tp6930
I2
s(Vinsert
p6931
I42
VSimpleName: map
p6932
tp6933
I21
s(Vinsert
p6934
I42
VSimpleName: deferredLoad
p6935
tp6936
I2
s(Vinsert
p6937
I42
VSimpleName: Override
p6938
tp6939
I13
s(Vinsert
p6940
I40
VQualifiedName: java.util.Properties
p6941
tp6942
I1
s(Vinsert
p6943
I43
VSimpleType: SqlSessionManager
p6944
tp6945
I2
s(Vinsert
p6946
I42
VSimpleName: upperColumnPrefix
p6947
tp6948
I1
s(Vinsert
p6949
I42
VSimpleName: parentStatementName
p6950
tp6951
I1
s(Vinsert
p6952
I42
VSimpleName: environmentProperties
p6953
tp6954
I1
s(Vinsert
p6955
I42
VSimpleName: TypeParameterResolver
p6956
tp6957
I3
s(Vinsert
p6958
I74
VParameterizedType: ArrayList<String>
p6959
tp6960
I2
s(Vinsert
p6961
I42
VSimpleName: getNestedQueryId
p6962
tp6963
I3
s(Vinsert
p6964
I42
VSimpleName: getChildren
p6965
tp6966
I2
s(Vinsert
p6967
I42
VSimpleName: ObjectInput
p6968
tp6969
I2
s(Vinsert
p6970
I42
VSimpleName: getNamesAndItemsAnnotatedWithXMLResultMapArray
p6971
tp6972
I1
s(Vinsert
p6973
I42
VSimpleName: IOException
p6974
tp6975
I8
s(Vinsert
p6976
I42
VSimpleName: loadCustomVfs
p6977
tp6978
I1
s(Vinsert
p6979
I42
VSimpleName: getMapper
p6980
tp6981
I63
s(Vinsert
p6982
I42
VSimpleName: returnValue
p6983
tp6984
I3
s(Vinsert
p6985
I43
VSimpleType: Account
p6986
tp6987
I2
s(Vinsert
p6988
I42
VSimpleName: getBooleanAttribute
p6989
tp6990
I2
s(Vinsert
p6991
I42
VSimpleName: text
p6992
tp6993
I3
s(Vinsert
p6994
I42
VSimpleName: closeSession
p6995
tp6996
I1
s(Vinsert
p6997
I42
VSimpleName: ParameterMapping
p6998
tp6999
I1
s(Vinsert
p7000
I83
VModifier: private
p7001
tp7002
I23
s(Vinsert
p7003
I45
VStringLiteral: "cbegin"
p7004
tp7005
I1
s(Vinsert
p7006
I42
VSimpleName: getMapperRegistry
p7007
tp7008
I2
s(Vinsert
p7009
I74
VParameterizedType: List<ResultMap>
p7010
tp7011
I1
s(Vinsert
p7012
I42
VSimpleName: SQLWarning
p7013
tp7014
I1
s(Vinsert
p7015
I43
VSimpleType: NoTypeHandlerInterfaceEnum
p7016
tp7017
I1
s(Vinsert
p7018
I42
VSimpleName: toFile
p7019
tp7020
I1
s(Vinsert
p7021
I42
VSimpleName: put
p7022
tp7023
I27
s(Vinsert
p7024
I42
VSimpleName: Double
p7025
tp7026
I1
s(Vinsert
p7027
I42
VSimpleName: resetMocks
p7028
tp7029
I1
s(Vinsert
p7030
I42
VSimpleName: toInputStream
p7031
tp7032
I1
s(Vinsert
p7033
I42
VSimpleName: firstPermission
p7034
tp7035
I1
s(Vinsert
p7036
I42
VSimpleName: getAutoMapping
p7037
tp7038
I1
s(Vinsert
p7039
I45
VStringLiteral: "--template="
p7040
tp7041
I1
s(Vinsert
p7042
I42
VSimpleName: E
p7043
tp7044
I10
s(Vinsert
p7045
I45
VStringLiteral: "User"
p7046
tp7047
I1
s(Vinsert
p7048
I42
VSimpleName: bufferStatementNodes
p7049
tp7050
I1
s(Vinsert
p7051
I42
VSimpleName: Parameter
p7052
tp7053
I3
s(Vinsert
p7054
I40
VQualifiedName: java.lang.reflect.Modifier
p7055
tp7056
I1
s(Vinsert
p7057
I45
VStringLiteral: "Expected script runner to fail due to the usage of invalid delimiter."
p7058
tp7059
I1
s(Vinsert
p7060
I53
VThrowStatement
p7061
tp7062
I22
s(Vinsert
p7063
I45
VStringLiteral: "org.apache.ibatis.submitted.velocity.Mapper.selectXml"
p7064
tp7065
I1
s(Vinsert
p7066
I42
VSimpleName: CacheKey
p7067
tp7068
I6
s(Vinsert
p7069
I42
VSimpleName: ManagedTransaction
p7070
tp7071
I1
s(Vinsert
p7072
I43
VSimpleType: Blob
p7073
tp7074
I2
s(Vinsert
p7075
I42
VSimpleName: testWithComplex3
p7076
tp7077
I1
s(Vinsert
p7078
I42
VSimpleName: evalShort
p7079
tp7080
I2
s(Vinsert
p7081
I42
VSimpleName: Blob
p7082
tp7083
I2
s(Vinsert
p7084
I42
VSimpleName: LocalDate
p7085
tp7086
I1
s(Vinsert
p7087
I42
VSimpleName: hasRowBounds
p7088
tp7089
I1
s(Vinsert
p7090
I42
VSimpleName: resultHandlerIndex
p7091
tp7092
I2
s(Vinsert
p7093
I42
VSimpleName: getSubElements
p7094
tp7095
I1
s(Vinsert
p7096
I43
VSimpleType: ProductId
p7097
tp7098
I4
s(Vinsert
p7099
I42
VSimpleName: removeObject
p7100
tp7101
I2
s(Vinsert
p7102
I42
VSimpleName: getPets
p7103
tp7104
I4
s(Vinsert
p7105
I74
VParameterizedType: List<Product>
p7106
tp7107
I1
s(Vinsert
p7108
I45
VStringLiteral: "oneArgumentAndProviderContext 100"
p7109
tp7110
I1
s(Vinsert
p7111
I42
VSimpleName: TYPE_HANDLER
p7112
tp7113
I7
s(Vinsert
p7114
I42
VSimpleName: BigInteger
p7115
tp7116
I5
s(Vinsert
p7117
I39
VPrimitiveType: short
p7118
tp7119
I3
s(Vinsert
p7120
I42
VSimpleName: sqlBuffer
p7121
tp7122
I2
s(Vinsert
p7123
I43
VSimpleType: StringBuilder
p7124
tp7125
I16
s(Vinsert
p7126
I21
VExpressionStatement
p7127
tp7128
I677
s(Vinsert
p7129
I43
VSimpleType: HashSet
p7130
tp7131
I3
s(Vinsert
p7132
I42
VSimpleName: CacheException
p7133
tp7134
I1
s(Vinsert
p7135
I26
VImportDeclaration
p7136
tp7137
I17
s(Vinsert
p7138
I42
VSimpleName: serialVersionUID
p7139
tp7140
I1
s(Vinsert
p7141
I42
VSimpleName: isInjectionFilterEnabled
p7142
tp7143
I2
s(Vinsert
p7144
I42
VSimpleName: noErrorThrowOut
p7145
tp7146
I1
s(Vinsert
p7147
I42
VSimpleName: Annotation
p7148
tp7149
I1
s(Vinsert
p7150
I42
VSimpleName: hasDefaultConstructor
p7151
tp7152
I2
s(Vinsert
p7153
I5
VArrayType: Field[]
p7154
tp7155
I1
s(Vinsert
p7156
I42
VSimpleName: BoundAuthorMapper
p7157
tp7158
I2
s(Vinsert
p7159
I42
VSimpleName: mapperClass
p7160
tp7161
I2
s(Vinsert
p7162
I42
VSimpleName: databaseNames
p7163
tp7164
I2
s(Vinsert
p7165
I42
VSimpleName: transactionTimeout
p7166
tp7167
I7
s(Vinsert
p7168
I42
VSimpleName: procedures
p7169
tp7170
I1
s.