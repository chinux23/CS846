(dp0
(Vinsert
p1
I43
VSimpleType: FuzzyKeyMemoryCache
p2
tp3
I1
s(Vinsert
p4
I43
VSimpleType: FrameLayout
p5
tp6
I4
s(Vinsert
p7
I42
VSimpleName: r
p8
tp9
I4
s(Vinsert
p10
I42
VSimpleName: FAST
p11
tp12
I1
s(Vinsert
p13
I40
VQualifiedName: configuration.displayImageThreadFactory
p14
tp15
I1
s(Vinsert
p16
I42
VSimpleName: setLoggingEnabled
p17
tp18
I2
s(Vinsert
p19
I42
VSimpleName: onBoundsChange
p20
tp21
I2
s(Vinsert
p22
I42
VSimpleName: URL
p23
tp24
I4
s(Vinsert
p25
I42
VSimpleName: ALLOWED_URI_CHARS
p26
tp27
I2
s(Vinsert
p28
I5
VArrayType: File[]
p29
tp30
I2
s(Vinsert
p31
I22
VFieldAccess
p32
tp33
I18
s(Vinsert
p34
I27
VInfixExpression: ||
p35
tp36
I12
s(Vinsert
p37
I42
VSimpleName: getStubImage
p38
tp39
I1
s(Vinsert
p40
I45
VStringLiteral: "assets://folder/1.png"
p41
tp42
I1
s(Vinsert
p43
I42
VSimpleName: getContentLength
p44
tp45
I1
s(Vinsert
p46
I42
VSimpleName: reference
p47
tp48
I2
s(Vinsert
p49
I45
VStringLiteral: "Task was interrupted [%s]"
p50
tp51
I1
s(Vinsert
p52
I42
VSimpleName: gridView
p53
tp54
I1
s(Vinsert
p55
I43
VSimpleType: ImageGridFragment
p56
tp57
I1
s(Vinsert
p58
I43
VSimpleType: ArrayList
p59
tp60
I2
s(Vinsert
p61
I45
VStringLiteral: "Pre-processor returned null [%s]"
p62
tp63
I1
s(Vinsert
p64
I42
VSimpleName: CENTER_INSIDE
p65
tp66
I1
s(Vinsert
p67
I74
VParameterizedType: Reference<V>
p68
tp69
I2
s(Vinsert
p70
I42
VSimpleName: viewHeight
p71
tp72
I2
s(Vinsert
p73
I42
VSimpleName: savedInstanceState
p74
tp75
I1
s(Vinsert
p76
I42
VSimpleName: computeMinImageSampleSize
p77
tp78
I2
s(Vinsert
p79
I42
VSimpleName: appCacheDir
p80
tp81
I4
s(Vinsert
p82
I42
VSimpleName: appWidgetId
p83
tp84
I1
s(Vinsert
p85
I42
VSimpleName: height
p86
tp87
I5
s(Vinsert
p88
I42
VSimpleName: cacheMaxFileCount
p89
tp90
I3
s(Vinsert
p91
I42
VSimpleName: setShader
p92
tp93
I2
s(Vinsert
p94
I42
VSimpleName: IoUtils
p95
tp96
I4
s(Vinsert
p97
I42
VSimpleName: builder
p98
tp99
I2
s(Vinsert
p100
I42
VSimpleName: newCachedThreadPool
p101
tp102
I2
s(Vinsert
p103
I27
VInfixExpression: +
p104
tp105
I7
s(Vinsert
p106
I42
VSimpleName: available
p107
tp108
I2
s(Vinsert
p109
I66
VTextElement: Creates default implementation of task distributor 
p110
tp111
I1
s(Vinsert
p112
I42
VSimpleName: loadingDelayOnFling
p113
tp114
I1
s(Vinsert
p115
I42
VSimpleName: displayer
p116
tp117
I1
s(Vinsert
p118
I43
VSimpleType: ByteArrayOutputStream
p119
tp120
I2
s(Vinsert
p121
I42
VSimpleName: isEmpty
p122
tp123
I4
s(Vinsert
p124
I42
VSimpleName: outState
p125
tp126
I6
s(Vinsert
p127
I42
VSimpleName: ImageListFragment
p128
tp129
I1
s(Vinsert
p130
I42
VSimpleName: View
p131
tp132
I6
s(Vinsert
p133
I42
VSimpleName: paint
p134
tp135
I4
s(Vinsert
p136
I43
VSimpleType: RadialGradient
p137
tp138
I4
s(Vinsert
p139
I42
VSimpleName: conn
p140
tp141
I7
s(Vinsert
p142
I42
VSimpleName: shouldShowImageResOnLoading
p143
tp144
I1
s(Vinsert
p145
I8
VBlock
p146
tp147
I231
s(Vinsert
p148
I34
VNumberLiteral: 0L
p149
tp150
I1
s(Vinsert
p151
I42
VSimpleName: getTransformationMatrix
p152
tp153
I1
s(Vinsert
p154
I42
VSimpleName: String
p155
tp156
I64
s(Vinsert
p157
I66
VTextElement: Already running tasks are not paused.
p158
tp159
I1
s(Vinsert
p160
I43
VSimpleType: LayoutInflater
p161
tp162
I2
s(Vinsert
p163
I42
VSimpleName: cachedFile
p164
tp165
I3
s(Vinsert
p166
I42
VSimpleName: AtomicInteger
p167
tp168
I3
s(Vinsert
p169
I42
VSimpleName: getParentFile
p170
tp171
I2
s(Vinsert
p172
I42
VSimpleName: ImageAware
p173
tp174
I1
s(Vinsert
p175
I42
VSimpleName: FrameLayout
p176
tp177
I4
s(Vinsert
p178
I42
VSimpleName: computeImageSampleSize
p179
tp180
I2
s(Vinsert
p181
I42
VSimpleName: decodingInfo
p182
tp183
I5
s(Vinsert
p184
I42
VSimpleName: bitmap
p185
tp186
I14
s(Vinsert
p187
I42
VSimpleName: finish
p188
tp189
I1
s(Vinsert
p190
I42
VSimpleName: HttpResponse
p191
tp192
I1
s(Vinsert
p193
I42
VSimpleName: DisplayMetrics
p194
tp195
I1
s(Vinsert
p196
I42
VSimpleName: entrySet
p197
tp198
I2
s(Vinsert
p199
I40
VQualifiedName: configuration.discCache
p200
tp201
I3
s(Vinsert
p202
I42
VSimpleName: crop
p203
tp204
I1
s(Vinsert
p205
I42
VSimpleName: config
p206
tp207
I6
s(Vinsert
p208
I42
VSimpleName: makeMeasureSpec
p209
tp210
I2
s(Vinsert
p211
I45
VStringLiteral: "Can't set a drawable into view. You should call ImageLoader on UI thread for it."
p212
tp213
I1
s(Vinsert
p214
I83
VModifier: protected
p215
tp216
I7
s(Vinsert
p217
I42
VSimpleName: getMemoryCacheKey
p218
tp219
I1
s(Vinsert
p220
I40
VQualifiedName: holder.progressBar
p221
tp222
I2
s(Vinsert
p223
I42
VSimpleName: preferExternal
p224
tp225
I4
s(Vinsert
p226
I42
VSimpleName: MemoryCacheKeyUtil
p227
tp228
I3
s(Vinsert
p229
I42
VSimpleName: files
p230
tp231
I2
s(Vinsert
p232
I43
VSimpleType: BitmapShader
p233
tp234
I1
s(Vinsert
p235
I42
VSimpleName: MARKER
p236
tp237
I1
s(Vinsert
p238
I42
VSimpleName: equalsIgnoreCase
p239
tp240
I1
s(Vinsert
p241
I42
VSimpleName: cxt
p242
tp243
I2
s(Vinsert
p244
I42
VSimpleName: setPriority
p245
tp246
I2
s(Vinsert
p247
I42
VSimpleName: delete
p248
tp249
I2
s(Vinsert
p250
I42
VSimpleName: getFile
p251
tp252
I1
s(Vinsert
p253
I42
VSimpleName: keyToFileName
p254
tp255
I2
s(Vinsert
p256
I42
VSimpleName: DefaultConfigurationFactory
p257
tp258
I4
s(Vinsert
p259
I23
VFieldDeclaration
p260
tp261
I10
s(Vinsert
p262
I34
VNumberLiteral: 1
p263
tp264
I2
s(Vinsert
p265
I42
VSimpleName: dataDir
p266
tp267
I1
s(Vinsert
p268
I42
VSimpleName: IllegalArgumentException
p269
tp270
I3
s(Vinsert
p271
I43
VSimpleType: ViewGroup
p272
tp273
I1
s(Vinsert
p274
I42
VSimpleName: total
p275
tp276
I4
s(Vinsert
p277
I25
VIfStatement
p278
tp279
I90
s(Vinsert
p280
I40
VQualifiedName: s.scheme
p281
tp282
I1
s(Vinsert
p283
I42
VSimpleName: getBitmapConfig
p284
tp285
I1
s(Vinsert
p286
I49
VSwitchCase
p287
tp288
I14
s(Vinsert
p289
I42
VSimpleName: maxHeight
p290
tp291
I1
s(Vinsert
p292
I42
VSimpleName: onSaveInstanceState
p293
tp294
I3
s(Vinsert
p295
I42
VSimpleName: Entry
p296
tp297
I2
s(Vinsert
p298
I43
VSimpleType: V
p299
tp300
I7
s(Vinsert
p301
I42
VSimpleName: WARNING_OVERLAP_MEMORY_CACHE
p302
tp303
I1
s(Vinsert
p304
I42
VSimpleName: UnsupportedOperationException
p305
tp306
I4
s(Vinsert
p307
I42
VSimpleName: inflater
p308
tp309
I8
s(Vinsert
p310
I42
VSimpleName: maxWidthField
p311
tp312
I1
s(Vinsert
p313
I40
VQualifiedName: heavyImages.length
p314
tp315
I1
s(Vinsert
p316
I42
VSimpleName: urls
p317
tp318
I2
s(Vinsert
p319
I42
VSimpleName: smartOptions
p320
tp321
I2
s(Vinsert
p322
I27
VInfixExpression: ==
p323
tp324
I18
s(Vinsert
p325
I42
VSimpleName: getDecodingType
p326
tp327
I1
s(Vinsert
p328
I42
VSimpleName: onLoadingStarted
p329
tp330
I1
s(Vinsert
p331
I9
VBooleanLiteral: true
p332
tp333
I8
s(Vinsert
p334
I62
VInstanceofExpression
p335
tp336
I3
s(Vinsert
p337
I42
VSimpleName: getPreProcessor
p338
tp339
I1
s(Vinsert
p340
I42
VSimpleName: makeText
p341
tp342
I1
s(Vinsert
p343
I40
VQualifiedName: configuration.slowNetworkDownloader
p344
tp345
I1
s(Vinsert
p346
I69
VMethodRefParameter
p347
tp348
I3
s(Vinsert
p349
I42
VSimpleName: targetSize
p350
tp351
I7
s(Vinsert
p352
I43
VSimpleType: Menu
p353
tp354
I1
s(Vinsert
p355
I42
VSimpleName: keys
p356
tp357
I2
s(Vinsert
p358
I42
VSimpleName: count
p359
tp360
I3
s(Vinsert
p361
I42
VSimpleName: getMapSize
p362
tp363
I1
s(Vinsert
p364
I42
VSimpleName: margin
p365
tp366
I5
s(Vinsert
p367
I40
VQualifiedName: configuration.diskCache
p368
tp369
I1
s(Vinsert
p370
I42
VSimpleName: getStream
p371
tp372
I3
s(Vinsert
p373
I34
VNumberLiteral: 2
p374
tp375
I1
s(Vinsert
p376
I42
VSimpleName: MAX_REDIRECT_COUNT
p377
tp378
I1
s(Vinsert
p379
I42
VSimpleName: s
p380
tp381
I2
s(Vinsert
p382
I42
VSimpleName: imageAware
p383
tp384
I2
s(Vinsert
p385
I40
VQualifiedName: android.view.animation.AnimationUtils
p386
tp387
I1
s(Vinsert
p388
I34
VNumberLiteral: 250
p389
tp390
I2
s(Vinsert
p391
I40
VQualifiedName: R.string.ac_name_image_list
p392
tp393
I1
s(Vinsert
p394
I42
VSimpleName: belongsTo
p395
tp396
I1
s(Vinsert
p397
I40
VQualifiedName: StrictMode.ThreadPolicy.Builder
p398
tp399
I1
s(Vinsert
p400
I42
VSimpleName: set
p401
tp402
I3
s(Vinsert
p403
I42
VSimpleName: offset
p404
tp405
I1
s(Vinsert
p406
I42
VSimpleName: startsWith
p407
tp408
I2
s(Vinsert
p409
I42
VSimpleName: ProcessAndDisplayImageTask
p410
tp411
I1
s(Vinsert
p412
I42
VSimpleName: setImageBitmap
p413
tp414
I4
s(Vinsert
p415
I40
VQualifiedName: configuration.handleOutOfMemory
p416
tp417
I1
s(Vinsert
p418
I38
VPrefixExpression: !
p419
tp420
I14
s(Vinsert
p421
I43
VSimpleType: FailReason
p422
tp423
I4
s(Vinsert
p424
I34
VNumberLiteral: 70
p425
tp426
I1
s(Vinsert
p427
I66
VTextElement:  destroy ImageLoader
p428
tp429
I1
s(Vinsert
p430
I42
VSimpleName: message
p431
tp432
I4
s(Vinsert
p433
I43
VSimpleType: ViewScaleType
p434
tp435
I3
s(Vinsert
p436
I42
VSimpleName: loadAnimation
p437
tp438
I2
s(Vinsert
p439
I42
VSimpleName: reset
p440
tp441
I4
s(Vinsert
p442
I42
VSimpleName: in
p443
tp444
I6
s(Vinsert
p445
I42
VSimpleName: LOG_LOAD_IMAGE_FROM_MEMORY_CACHE
p446
tp447
I1
s(Vinsert
p448
I42
VSimpleName: process
p449
tp450
I2
s(Vinsert
p451
I42
VSimpleName: optionsWithFakeDisplayer
p452
tp453
I3
s(Vinsert
p454
I42
VSimpleName: args
p455
tp456
I2
s(Vinsert
p457
I40
VQualifiedName: imageLoadingInfo.targetSize
p458
tp459
I2
s(Vinsert
p460
I45
VStringLiteral: "@#&=*+-_.,:!?()/~'%"
p461
tp462
I2
s(Vinsert
p463
I42
VSimpleName: BUFFER_SIZE
p464
tp465
I1
s(Vinsert
p466
I42
VSimpleName: K
p467
tp468
I4
s(Vinsert
p469
I40
VQualifiedName: imageLoadingInfo.uri
p470
tp471
I1
s(Vinsert
p472
I31
VMethodDeclaration
p473
tp474
I32
s(Vinsert
p475
I42
VSimpleName: curCacheSize
p476
tp477
I2
s(Vinsert
p478
I42
VSimpleName: httpConnectTimeout
p479
tp480
I1
s(Vinsert
p481
I43
VSimpleType: AtomicInteger
p482
tp483
I3
s(Vinsert
p484
I42
VSimpleName: buf
p485
tp486
I4
s(Vinsert
p487
I42
VSimpleName: PROTOCOL_FTP
p488
tp489
I1
s(Vinsert
p490
I40
VQualifiedName: Build.VERSION.SDK_INT
p491
tp492
I2
s(Vinsert
p493
I42
VSimpleName: PhotoToLoad
p494
tp495
I1
s(Vinsert
p496
I74
VParameterizedType: ArrayList<Bitmap>
p497
tp498
I1
s(Vinsert
p499
I39
VPrimitiveType: void
p500
tp501
I25
s(Vinsert
p502
I42
VSimpleName: softMap
p503
tp504
I3
s(Vinsert
p505
I42
VSimpleName: InterruptedException
p506
tp507
I1
s(Vinsert
p508
I42
VSimpleName: BitmapDrawable
p509
tp510
I2
s(Vinsert
p511
I40
VQualifiedName: Build.VERSION_CODES.GINGERBREAD
p512
tp513
I1
s(Vinsert
p514
I42
VSimpleName: url
p515
tp516
I4
s(Vinsert
p517
I42
VSimpleName: setVisibility
p518
tp519
I2
s(Vinsert
p520
I42
VSimpleName: networkDenied
p521
tp522
I1
s(Vinsert
p523
I42
VSimpleName: FIT_END
p524
tp525
I1
s(Vinsert
p526
I43
VSimpleType: Options
p527
tp528
I2
s(Vinsert
p529
I40
VQualifiedName: entry.currentEditor
p530
tp531
I2
s(Vinsert
p532
I42
VSimpleName: viewRef
p533
tp534
I1
s(Vinsert
p535
I42
VSimpleName: displayedImages
p536
tp537
I1
s(Vinsert
p538
I42
VSimpleName: fieldName
p539
tp540
I2
s(Vinsert
p541
I42
VSimpleName: initExecutorsIfNeed
p542
tp543
I1
s(Vinsert
p544
I42
VSimpleName: pager
p545
tp546
I2
s(Vinsert
p547
I34
VNumberLiteral: 10
p548
tp549
I1
s(Vinsert
p550
I42
VSimpleName: recycle
p551
tp552
I1
s(Vinsert
p553
I42
VSimpleName: Executor
p554
tp555
I2
s(Vinsert
p556
I43
VSimpleType: Request.Builder
p557
tp558
I1
s(Vinsert
p559
I42
VSimpleName: onLoadingCancelled
p560
tp561
I1
s(Vinsert
p562
I42
VSimpleName: widthScale
p563
tp564
I2
s(Vinsert
p565
I42
VSimpleName: abort
p566
tp567
I1
s(Vinsert
p568
I42
VSimpleName: isRecycled
p569
tp570
I1
s(Vinsert
p571
I42
VSimpleName: decodeFile
p572
tp573
I1
s(Vinsert
p574
I43
VSimpleType: ContentResolver
p575
tp576
I2
s(Vinsert
p577
I42
VSimpleName: value
p578
tp579
I19
s(Vinsert
p580
I27
VInfixExpression: !=
p581
tp582
I26
s(Vinsert
p583
I42
VSimpleName: imageViewRef
p584
tp585
I3
s(Vinsert
p586
I42
VSimpleName: photoToLoadQueue
p587
tp588
I1
s(Vinsert
p589
I42
VSimpleName: listView
p590
tp591
I1
s(Vinsert
p592
I42
VSimpleName: image
p593
tp594
I1
s(Vinsert
p595
I42
VSimpleName: rootView
p596
tp597
I5
s(Vinsert
p598
I43
VSimpleType: ImageSize
p599
tp600
I7
s(Vinsert
p601
I42
VSimpleName: LOG_INIT_CONFIG
p602
tp603
I1
s(Vinsert
p604
I40
VQualifiedName: last.item
p605
tp606
I1
s(Vinsert
p607
I42
VSimpleName: imageViewWasReused
p608
tp609
I2
s(Vinsert
p610
I42
VSimpleName: openStream
p611
tp612
I2
s(Vinsert
p613
I42
VSimpleName: encodedUri
p614
tp615
I2
s(Vinsert
p616
I42
VSimpleName: createFileNameGenerator
p617
tp618
I2
s(Vinsert
p619
I42
VSimpleName: isShutdown
p620
tp621
I5
s(Vinsert
p622
I42
VSimpleName: measure
p623
tp624
I1
s(Vinsert
p625
I39
VPrimitiveType: boolean
p626
tp627
I22
s(Vinsert
p628
I42
VSimpleName: imageLoadingExecutor
p629
tp630
I1
s(Vinsert
p631
I42
VSimpleName: hashCode
p632
tp633
I1
s(Vinsert
p634
I42
VSimpleName: onBytesCopied
p635
tp636
I1
s(Vinsert
p637
I42
VSimpleName: ERROR_NO_IMAGE_STREAM
p638
tp639
I2
s(Vinsert
p640
I40
VQualifiedName: configuration.loggingEnabled
p641
tp642
I2
s(Vinsert
p643
I42
VSimpleName: taskDistributor
p644
tp645
I5
s(Vinsert
p646
I74
VParameterizedType: Iterator<PhotoToLoad>
p647
tp648
I1
s(Vinsert
p649
I42
VSimpleName: DiscCacheAware
p650
tp651
I1
s(Vinsert
p652
I42
VSimpleName: mkdir
p653
tp654
I1
s(Vinsert
p655
I40
VQualifiedName: Config.DEVELOPER_MODE
p656
tp657
I1
s(Vinsert
p658
I42
VSimpleName: srcHeight
p659
tp660
I1
s(Vinsert
p661
I42
VSimpleName: maxAge
p662
tp663
I1
s(Vinsert
p664
I42
VSimpleName: getCacheDir
p665
tp666
I2
s(Vinsert
p667
I42
VSimpleName: DisplayImageOptions
p668
tp669
I7
s(Vinsert
p670
I42
VSimpleName: wrap
p671
tp672
I1
s(Vinsert
p673
I42
VSimpleName: WARNING_POST_PROCESSOR_NULL
p674
tp675
I1
s(Vinsert
p676
I42
VSimpleName: ArrayList
p677
tp678
I2
s(Vinsert
p679
I42
VSimpleName: ImageAdapter
p680
tp681
I2
s(Vinsert
p682
I42
VSimpleName: lock
p683
tp684
I4
s(Vinsert
p685
I42
VSimpleName: stream
p686
tp687
I4
s(Vinsert
p688
I40
VQualifiedName: ImageGridFragment.INDEX
p689
tp690
I1
s(Vinsert
p691
I42
VSimpleName: LOG_WAITING
p692
tp693
I1
s(Vinsert
p694
I43
VSimpleType: UnsupportedOperationException
p695
tp696
I2
s(Vinsert
p697
I45
VStringLiteral: "Out Of Memory error"
p698
tp699
I1
s(Vinsert
p700
I66
VTextElement:  Context.getCacheDir()
p701
tp702
I2
s(Vinsert
p703
I42
VSimpleName: pagerPosition
p704
tp705
I1
s(Vinsert
p706
I42
VSimpleName: getSystemService
p707
tp708
I2
s(Vinsert
p709
I42
VSimpleName: mostLongUsedFile
p710
tp711
I1
s(Vinsert
p712
I42
VSimpleName: journalWriter
p713
tp714
I2
s(Vinsert
p715
I43
VSimpleType: HttpGet
p716
tp717
I4
s(Vinsert
p718
I42
VSimpleName: RectF
p719
tp720
I1
s(Vinsert
p721
I42
VSimpleName: putInt
p722
tp723
I2
s(Vinsert
p724
I42
VSimpleName: anim
p725
tp726
I2
s(Vinsert
p727
I42
VSimpleName: edit
p728
tp729
I1
s(Vinsert
p730
I42
VSimpleName: result
p731
tp732
I5
s(Vinsert
p733
I42
VSimpleName: Bitmap
p734
tp735
I26
s(Vinsert
p736
I9
VBooleanLiteral: false
p737
tp738
I6
s(Vinsert
p739
I42
VSimpleName: Override
p740
tp741
I27
s(Vinsert
p742
I42
VSimpleName: considerExifParams
p743
tp744
I3
s(Vinsert
p745
I45
VStringLiteral: "ImageView context must be of Activity type"
p746
tp747
I1
s(Vinsert
p748
I42
VSimpleName: pos
p749
tp750
I2
s(Vinsert
p751
I43
VSimpleType: AbsListView
p752
tp753
I1
s(Vinsert
p754
I42
VSimpleName: decodeOptions
p755
tp756
I1
s(Vinsert
p757
I59
VVariableDeclarationFragment
p758
tp759
I168
s(Vinsert
p760
I40
VQualifiedName: Bitmap.Config.RGB_565
p761
tp762
I1
s(Vinsert
p763
I42
VSimpleName: ViewScaleType
p764
tp765
I4
s(Vinsert
p766
I42
VSimpleName: getStreamFromOtherSource
p767
tp768
I2
s(Vinsert
p769
I24
VForStatement
p770
tp771
I1
s(Vinsert
p772
I42
VSimpleName: URLConnection
p773
tp774
I1
s(Vinsert
p775
I40
VQualifiedName: R.id.image
p776
tp777
I1
s(Vinsert
p778
I42
VSimpleName: createSimple
p779
tp780
I2
s(Vinsert
p781
I42
VSimpleName: bos
p782
tp783
I3
s(Vinsert
p784
I42
VSimpleName: ImageLoaderConfiguration
p785
tp786
I2
s(Vinsert
p787
I40
VQualifiedName: FailReason.OUT_OF_MEMORY
p788
tp789
I1
s(Vinsert
p790
I42
VSimpleName: loadingDates
p791
tp792
I3
s(Vinsert
p793
I34
VNumberLiteral: 3
p794
tp795
I1
s(Vinsert
p796
I40
VQualifiedName: engine.configuration.loggingEnabled
p797
tp798
I1
s(Vinsert
p799
I42
VSimpleName: getRoundedCornerBitmap
p800
tp801
I1
s(Vinsert
p802
I42
VSimpleName: clearDiskCache
p803
tp804
I1
s(Vinsert
p805
I42
VSimpleName: transformedBmp
p806
tp807
I1
s(Vinsert
p808
I65
VTagElement
p809
tp810
I4
s(Vinsert
p811
I66
VTextElement: ; can be null
p812
tp813
I1
s(Vinsert
p814
I42
VSimpleName: findViewById
p815
tp816
I2
s(Vinsert
p817
I42
VSimpleName: getResources
p818
tp819
I2
s(Vinsert
p820
I42
VSimpleName: FuzzyKeyCache
p821
tp822
I1
s(Vinsert
p823
I42
VSimpleName: addAndGet
p824
tp825
I1
s(Vinsert
p826
I42
VSimpleName: leastUsedValue
p827
tp828
I1
s(Vinsert
p829
I66
VTextElement:  if passed <b>imageAware</b> is null
p830
tp831
I1
s(Vinsert
p832
I42
VSimpleName: getImageScaleType
p833
tp834
I1
s(Vinsert
p835
I42
VSimpleName: decodeStream
p836
tp837
I1
s(Vinsert
p838
I42
VSimpleName: Intent
p839
tp840
I9
s(Vinsert
p841
I43
VSimpleType: ReentrantLock
p842
tp843
I1
s(Vinsert
p844
I42
VSimpleName: bmpRef
p845
tp846
I3
s(Vinsert
p847
I42
VSimpleName: onLoadingFailed
p848
tp849
I2
s(Vinsert
p850
I42
VSimpleName: setReserveCacheDir
p851
tp852
I1
s(Vinsert
p853
I42
VSimpleName: LOG_CACHE_IMAGE_ON_DISC
p854
tp855
I1
s(Vinsert
p856
I40
VQualifiedName: View.MeasureSpec.EXACTLY
p857
tp858
I2
s(Vinsert
p859
I43
VSimpleType: HashCodeFileNameGenerator
p860
tp861
I1
s(Vinsert
p862
I43
VSimpleType: ImageAware
p863
tp864
I1
s(Vinsert
p865
I42
VSimpleName: RemoteViews
p866
tp867
I2
s(Vinsert
p868
I42
VSimpleName: isLargeHeap
p869
tp870
I1
s(Vinsert
p871
I42
VSimpleName: ExecutorService
p872
tp873
I2
s(Vinsert
p874
I42
VSimpleName: lastUsage
p875
tp876
I2
s(Vinsert
p877
I42
VSimpleName: getContentResolver
p878
tp879
I2
s(Vinsert
p880
I43
VSimpleType: ImageDecodingInfo
p881
tp882
I3
s(Vinsert
p883
I43
VSimpleType: Bitmap
p884
tp885
I21
s(Vinsert
p886
I42
VSimpleName: cacheOnDisc
p887
tp888
I2
s(Vinsert
p889
I42
VSimpleName: imageUrl
p890
tp891
I13
s(Vinsert
p892
I45
VStringLiteral: "ImageAware should wrap ImageView. ImageViewAware is expected."
p893
tp894
I1
s(Vinsert
p895
I42
VSimpleName: memoryCacheKey
p896
tp897
I16
s(Vinsert
p898
I42
VSimpleName: cache
p899
tp900
I6
s(Vinsert
p901
I66
VTextElement:  if 
p902
tp903
I1
s(Vinsert
p904
I42
VSimpleName: isConsiderExifParams
p905
tp906
I2
s(Vinsert
p907
I42
VSimpleName: Runnable
p908
tp909
I2
s(Vinsert
p910
I45
VStringLiteral: "Display image in ImageView [%s]"
p911
tp912
I2
s(Vinsert
p913
I42
VSimpleName: EXACT
p914
tp915
I1
s(Vinsert
p916
I42
VSimpleName: sizeLimit
p917
tp918
I6
s(Vinsert
p919
I43
VSimpleType: RemoteViews
p920
tp921
I2
s(Vinsert
p922
I43
VSimpleType: SimpleImageActivity
p923
tp924
I1
s(Vinsert
p925
I42
VSimpleName: cacheKeyForImageView
p926
tp927
I1
s(Vinsert
p928
I51
VSynchronizedStatement
p929
tp930
I6
s(Vinsert
p931
I42
VSimpleName: shouldConsiderExifParams
p932
tp933
I1
s(Vinsert
p934
I40
VQualifiedName: options.inJustDecodeBounds
p935
tp936
I1
s(Vinsert
p937
I42
VSimpleName: engine
p938
tp939
I3
s(Vinsert
p940
I42
VSimpleName: md5
p941
tp942
I1
s(Vinsert
p943
I42
VSimpleName: i
p944
tp945
I7
s(Vinsert
p946
I40
VQualifiedName: imageLoadingInfo.imageView
p947
tp948
I1
s(Vinsert
p949
I40
VQualifiedName: args.length
p950
tp951
I1
s(Vinsert
p952
I42
VSimpleName: failReason
p953
tp954
I2
s(Vinsert
p955
I42
VSimpleName: listener
p956
tp957
I8
s(Vinsert
p958
I34
VNumberLiteral: 8192
p959
tp960
I1
s(Vinsert
p961
I43
VSimpleType: Request
p962
tp963
I1
s(Vinsert
p964
I40
VQualifiedName: configuration.threadPoolSize
p965
tp966
I1
s(Vinsert
p967
I42
VSimpleName: drawable
p968
tp969
I3
s(Vinsert
p970
I42
VSimpleName: bitmapdata
p971
tp972
I1
s(Vinsert
p973
I42
VSimpleName: cloneFrom
p974
tp975
I4
s(Vinsert
p976
I66
VTextElement: - otherwise.
p977
tp978
I1
s(Vinsert
p979
I42
VSimpleName: mark
p980
tp981
I5
s(Vinsert
p982
I42
VSimpleName: ComplexImageActivity
p983
tp984
I1
s(Vinsert
p985
I40
VQualifiedName: Extra.IMAGES
p986
tp987
I1
s(Vinsert
p988
I42
VSimpleName: connectTo
p989
tp990
I1
s(Vinsert
p991
I42
VSimpleName: skip
p992
tp993
I1
s(Vinsert
p994
I42
VSimpleName: FlushedInputStream
p995
tp996
I1
s(Vinsert
p997
I40
VQualifiedName: ExifInterface.ORIENTATION_ROTATE_270
p998
tp999
I1
s(Vinsert
p1000
I43
VSimpleType: Executor
p1001
tp1002
I2
s(Vinsert
p1003
I42
VSimpleName: limit
p1004
tp1005
I1
s(Vinsert
p1006
I66
VTextElement: 3) Get <b>maxHeight</b>.
p1007
tp1008
I1
s(Vinsert
p1009
I42
VSimpleName: getScaleType
p1010
tp1011
I2
s(Vinsert
p1012
I54
VTryStatement
p1013
tp1014
I19
s(Vinsert
p1015
I66
VTextElement:  @throws UnsupportedOperationException if image URI has unsupported
p1016
tp1017
I1
s(Vinsert
p1018
I42
VSimpleName: cacheSize
p1019
tp1020
I9
s(Vinsert
p1021
I42
VSimpleName: memoryCacheSize
p1022
tp1023
I2
s(Vinsert
p1024
I42
VSimpleName: ByteArrayOutputStream
p1025
tp1026
I2
s(Vinsert
p1027
I45
VStringLiteral: "mMaxHeight"
p1028
tp1029
I2
s(Vinsert
p1030
I36
VParenthesizedExpression
p1031
tp1032
I15
s(Vinsert
p1033
I42
VSimpleName: os
p1034
tp1035
I1
s(Vinsert
p1036
I42
VSimpleName: createFuzzyKeyComparator
p1037
tp1038
I2
s(Vinsert
p1039
I43
VSimpleType: IOException
p1040
tp1041
I24
s(Vinsert
p1042
I40
VQualifiedName: OnScrollListener.SCROLL_STATE_IDLE
p1043
tp1044
I1
s(Vinsert
p1045
I42
VSimpleName: currentCacheKey
p1046
tp1047
I1
s(Vinsert
p1048
I42
VSimpleName: PROTOCOL_HTTPS
p1049
tp1050
I1
s(Vinsert
p1051
I42
VSimpleName: currentTimeMillis
p1052
tp1053
I3
s(Vinsert
p1054
I66
VTextElement:  method wasn't called before
p1055
tp1056
I2
s(Vinsert
p1057
I40
VQualifiedName: displayMetrics.widthPixels
p1058
tp1059
I1
s(Vinsert
p1060
I42
VSimpleName: stop
p1061
tp1062
I5
s(Vinsert
p1063
I42
VSimpleName: detectAll
p1064
tp1065
I1
s(Vinsert
p1066
I42
VSimpleName: clear
p1067
tp1068
I4
s(Vinsert
p1069
I34
VNumberLiteral: 300
p1070
tp1071
I1
s(Vinsert
p1072
I42
VSimpleName: Object
p1073
tp1074
I9
s(Vinsert
p1075
I66
VTextElement:  event if it doesn't.
p1076
tp1077
I1
s(Vinsert
p1078
I43
VSimpleType: CopyListener
p1079
tp1080
I1
s(Vinsert
p1081
I42
VSimpleName: readOnError
p1082
tp1083
I3
s(Vinsert
p1084
I42
VSimpleName: intent
p1085
tp1086
I10
s(Vinsert
p1087
I42
VSimpleName: discCacheFileNameGenerator
p1088
tp1089
I1
s(Vinsert
p1090
I42
VSimpleName: TAG
p1091
tp1092
I1
s(Vinsert
p1093
I66
VTextElement:    null-ok; Reserve directory for file caching. It's used when the primary directory isn't available.
p1094
tp1095
I1
s(Vinsert
p1096
I42
VSimpleName: bw
p1097
tp1098
I1
s(Vinsert
p1099
I42
VSimpleName: srcSize
p1100
tp1101
I3
s(Vinsert
p1102
I39
VPrimitiveType: long
p1103
tp1104
I8
s(Vinsert
p1105
I43
VSimpleType: FileOutputStream
p1106
tp1107
I2
s(Vinsert
p1108
I40
VQualifiedName: imageLoadingInfo.options
p1109
tp1110
I3
s(Vinsert
p1111
I42
VSimpleName: ReentrantLock
p1112
tp1113
I1
s(Vinsert
p1114
I42
VSimpleName: shouldShowBitmapForEmptyUri
p1115
tp1116
I1
s(Vinsert
p1117
I42
VSimpleName: getResponseCode
p1118
tp1119
I2
s(Vinsert
p1120
I42
VSimpleName: tmpFile
p1121
tp1122
I1
s(Vinsert
p1123
I42
VSimpleName: myLooper
p1124
tp1125
I2
s(Vinsert
p1126
I42
VSimpleName: defineHandler
p1127
tp1128
I1
s(Vinsert
p1129
I43
VSimpleType: InterruptedException
p1130
tp1131
I1
s(Vinsert
p1132
I42
VSimpleName: File
p1133
tp1134
I27
s(Vinsert
p1135
I66
VTextElement:  callback was fired with
p1136
tp1137
I2
s(Vinsert
p1138
I43
VSimpleType: HttpURLConnection
p1139
tp1140
I2
s(Vinsert
p1141
I42
VSimpleName: extra
p1142
tp1143
I7
s(Vinsert
p1144
I42
VSimpleName: toEvict
p1145
tp1146
I1
s(Vinsert
p1147
I42
VSimpleName: DiskLruCache
p1148
tp1149
I1
s(Vinsert
p1150
I42
VSimpleName: editor
p1151
tp1152
I5
s(Vinsert
p1153
I42
VSimpleName: entry
p1154
tp1155
I3
s(Vinsert
p1156
I42
VSimpleName: containsKey
p1157
tp1158
I1
s(Vinsert
p1159
I42
VSimpleName: last
p1160
tp1161
I1
s(Vinsert
p1162
I42
VSimpleName: executorForCachedImages
p1163
tp1164
I1
s(Vinsert
p1165
I42
VSimpleName: MemoryCacheUtil
p1166
tp1167
I1
s(Vinsert
p1168
I42
VSimpleName: Arrays
p1169
tp1170
I2
s(Vinsert
p1171
I66
VTextElement:  ImageView
p1172
tp1173
I1
s(Vinsert
p1174
I42
VSimpleName: openContactPhotoInputStream
p1175
tp1176
I1
s(Vinsert
p1177
I42
VSimpleName: externalListener
p1178
tp1179
I1
s(Vinsert
p1180
I42
VSimpleName: options
p1181
tp1182
I29
s(Vinsert
p1183
I42
VSimpleName: putExtra
p1184
tp1185
I5
s(Vinsert
p1186
I42
VSimpleName: imageUrl1
p1187
tp1188
I1
s(Vinsert
p1189
I11
VCastExpression
p1190
tp1191
I18
s(Vinsert
p1192
I42
VSimpleName: getBitmapForEmptyUri
p1193
tp1194
I1
s(Vinsert
p1195
I65
VTagElement: @throws
p1196
tp1197
I2
s(Vinsert
p1198
I42
VSimpleName: pauseOnFling
p1199
tp1200
I1
s(Vinsert
p1201
I34
VNumberLiteral: 0
p1202
tp1203
I18
s(Vinsert
p1204
I42
VSimpleName: putSuccesfully
p1205
tp1206
I1
s(Vinsert
p1207
I42
VSimpleName: writer
p1208
tp1209
I4
s(Vinsert
p1210
I74
VParameterizedType: Reference<Bitmap>
p1211
tp1212
I1
s(Vinsert
p1213
I42
VSimpleName: inputStream
p1214
tp1215
I2
s(Vinsert
p1216
I42
VSimpleName: discCache
p1217
tp1218
I4
s(Vinsert
p1219
I43
VSimpleType: ImagePagerActivity
p1220
tp1221
I2
s(Vinsert
p1222
I57
VTypeLiteral
p1223
tp1224
I7
s(Vinsert
p1225
I43
VSimpleType: Uri
p1226
tp1227
I1
s(Vinsert
p1228
I42
VSimpleName: append
p1229
tp1230
I2
s(Vinsert
p1231
I42
VSimpleName: onCreate
p1232
tp1233
I2
s(Vinsert
p1234
I42
VSimpleName: URI
p1235
tp1236
I3
s(Vinsert
p1237
I40
VQualifiedName: android.widget.ImageView
p1238
tp1239
I1
s(Vinsert
p1240
I43
VSimpleType: MenuItem
p1241
tp1242
I2
s(Vinsert
p1243
I52
VThisExpression
p1244
tp1245
I29
s(Vinsert
p1246
I42
VSimpleName: cancelDisplayTask
p1247
tp1248
I2
s(Vinsert
p1249
I42
VSimpleName: getImageViewFieldValue
p1250
tp1251
I1
s(Vinsert
p1252
I40
VQualifiedName: com.nostra13.universalimageloader.core.download.ImageDownloader
p1253
tp1254
I1
s(Vinsert
p1255
I42
VSimpleName: BufferedInputStream
p1256
tp1257
I2
s(Vinsert
p1258
I43
VSimpleType: Builder
p1259
tp1260
I6
s(Vinsert
p1261
I42
VSimpleName: removed
p1262
tp1263
I2
s(Vinsert
p1264
I42
VSimpleName: getSize
p1265
tp1266
I4
s(Vinsert
p1267
I42
VSimpleName: SimpleImageActivity
p1268
tp1269
I1
s(Vinsert
p1270
I42
VSimpleName: pause
p1271
tp1272
I2
s(Vinsert
p1273
I43
VSimpleType: OnScrollSmartOptions
p1274
tp1275
I3
s(Vinsert
p1276
I42
VSimpleName: convertView
p1277
tp1278
I1
s(Vinsert
p1279
I42
VSimpleName: flingOptions
p1280
tp1281
I2
s(Vinsert
p1282
I42
VSimpleName: n
p1283
tp1284
I1
s(Vinsert
p1285
I14
VClassInstanceCreation
p1286
tp1287
I61
s(Vinsert
p1288
I42
VSimpleName: memClass
p1289
tp1290
I2
s(Vinsert
p1291
I42
VSimpleName: discCacheDirPath
p1292
tp1293
I1
s(Vinsert
p1294
I42
VSimpleName: getInstance
p1295
tp1296
I8
s(Vinsert
p1297
I42
VSimpleName: FuzzyKeyMemoryCache
p1298
tp1299
I1
s(Vinsert
p1300
I42
VSimpleName: copied
p1301
tp1302
I1
s(Vinsert
p1303
I42
VSimpleName: getPackageName
p1304
tp1305
I4
s(Vinsert
p1306
I42
VSimpleName: Editor
p1307
tp1308
I4
s(Vinsert
p1309
I42
VSimpleName: handleSlowNetwork
p1310
tp1311
I2
s(Vinsert
p1312
I43
VSimpleType: Matrix
p1313
tp1314
I2
s(Vinsert
p1315
I42
VSimpleName: DEFAULT_BUFFER_SIZE
p1316
tp1317
I2
s(Vinsert
p1318
I42
VSimpleName: buffer
p1319
tp1320
I3
s(Vinsert
p1321
I42
VSimpleName: imageUrls
p1322
tp1323
I3
s(Vinsert
p1324
I42
VSimpleName: unlock
p1325
tp1326
I1
s(Vinsert
p1327
I43
VSimpleType: Context
p1328
tp1329
I4
s(Vinsert
p1330
I40
VQualifiedName: Request.Builder
p1331
tp1332
I1
s(Vinsert
p1333
I42
VSimpleName: resetViewBeforeLoading
p1334
tp1335
I1
s(Vinsert
p1336
I42
VSimpleName: isConsistent
p1337
tp1338
I2
s(Vinsert
p1339
I43
VSimpleType: ExecutorService
p1340
tp1341
I2
s(Vinsert
p1342
I43
VSimpleType: Closeable
p1343
tp1344
I1
s(Vinsert
p1345
I68
VMethodRef
p1346
tp1347
I9
s(Vinsert
p1348
I42
VSimpleName: WARN_CANT_SET_BITMAP
p1349
tp1350
I1
s(Vinsert
p1351
I43
VSimpleType: ContentLengthInputStream
p1352
tp1353
I3
s(Vinsert
p1354
I42
VSimpleName: execute
p1355
tp1356
I2
s(Vinsert
p1357
I65
VTagElement: @param
p1358
tp1359
I1
s(Vinsert
p1360
I42
VSimpleName: INDIVIDUAL_DIR_NAME
p1361
tp1362
I1
s(Vinsert
p1363
I50
VSwitchStatement
p1364
tp1365
I6
s(Vinsert
p1366
I42
VSimpleName: getScheme
p1367
tp1368
I4
s(Vinsert
p1369
I42
VSimpleName: CopyListener
p1370
tp1371
I1
s(Vinsert
p1372
I42
VSimpleName: wrappedDownloader
p1373
tp1374
I2
s(Vinsert
p1375
I42
VSimpleName: res
p1376
tp1377
I7
s(Vinsert
p1378
I27
VInfixExpression: >=
p1379
tp1380
I2
s(Vinsert
p1381
I42
VSimpleName: HttpGet
p1382
tp1383
I4
s(Vinsert
p1384
I42
VSimpleName: uriLocks
p1385
tp1386
I2
s(Vinsert
p1387
I42
VSimpleName: f
p1388
tp1389
I1
s(Vinsert
p1390
I42
VSimpleName: getApplicationContext
p1391
tp1392
I3
s(Vinsert
p1393
I43
VSimpleType: Iterator
p1394
tp1395
I2
s(Vinsert
p1396
I42
VSimpleName: inflate
p1397
tp1398
I5
s(Vinsert
p1399
I42
VSimpleName: loadingDelayOnScroll
p1400
tp1401
I1
s(Vinsert
p1402
I40
VQualifiedName: java.util.concurrent.Executors
p1403
tp1404
I1
s(Vinsert
p1405
I43
VSimpleType: ActivityManager
p1406
tp1407
I2
s(Vinsert
p1408
I42
VSimpleName: hasNext
p1409
tp1410
I1
s(Vinsert
p1411
I42
VSimpleName: ImageLoader
p1412
tp1413
I3
s(Vinsert
p1414
I42
VSimpleName: centerX
p1415
tp1416
I2
s(Vinsert
p1417
I42
VSimpleName: imageLoadingInfo
p1418
tp1419
I3
s(Vinsert
p1420
I42
VSimpleName: length
p1421
tp1422
I5
s(Vinsert
p1423
I42
VSimpleName: getBytes
p1424
tp1425
I1
s(Vinsert
p1426
I40
VQualifiedName: Map.Entry
p1427
tp1428
I1
s(Vinsert
p1429
I42
VSimpleName: Log
p1430
tp1431
I11
s(Vinsert
p1432
I42
VSimpleName: scheme
p1433
tp1434
I2
s(Vinsert
p1435
I42
VSimpleName: ERROR_IMAGEVIEW_CONTEXT
p1436
tp1437
I1
s(Vinsert
p1438
I42
VSimpleName: Context
p1439
tp1440
I5
s(Vinsert
p1441
I74
VParameterizedType: ArrayList<String>
p1442
tp1443
I1
s(Vinsert
p1444
I40
VQualifiedName: android.util.Log
p1445
tp1446
I1
s(Vinsert
p1447
I42
VSimpleName: CENTER
p1448
tp1449
I1
s(Vinsert
p1450
I42
VSimpleName: FailReason
p1451
tp1452
I6
s(Vinsert
p1453
I43
VSimpleType: Map.Entry
p1454
tp1455
I1
s(Vinsert
p1456
I42
VSimpleName: ofUri
p1457
tp1458
I1
s(Vinsert
p1459
I42
VSimpleName: resume
p1460
tp1461
I1
s(Vinsert
p1462
I42
VSimpleName: downloadImage
p1463
tp1464
I1
s(Vinsert
p1465
I42
VSimpleName: valueSize
p1466
tp1467
I4
s(Vinsert
p1468
I66
VTextElement:  Rounded pixels of corner
p1469
tp1470
I1
s(Vinsert
p1471
I40
VQualifiedName: FailReason.NETWORK_DENIED
p1472
tp1473
I1
s(Vinsert
p1474
I42
VSimpleName: bufferSize
p1475
tp1476
I1
s(Vinsert
p1477
I39
VPrimitiveType: int
p1478
tp1479
I45
s(Vinsert
p1480
I42
VSimpleName: getMenuInflater
p1481
tp1482
I1
s(Vinsert
p1483
I83
VModifier: final
p1484
tp1485
I26
s(Vinsert
p1486
I74
VParameterizedType: FuzzyKeyCache<String,Bitmap>
p1487
tp1488
I1
s(Vinsert
p1489
I27
VInfixExpression: &&
p1490
tp1491
I9
s(Vinsert
p1492
I66
VTextElement: Pause ImageLoader. All new "load&display" tasks won't be executed until ImageLoader is 
p1493
tp1494
I1
s(Vinsert
p1495
I42
VSimpleName: UNKNOWN
p1496
tp1497
I1
s(Vinsert
p1498
I42
VSimpleName: ImageDecoder
p1499
tp1500
I3
s(Vinsert
p1501
I42
VSimpleName: viewScaleType
p1502
tp1503
I4
s(Vinsert
p1504
I42
VSimpleName: createTaskDistributor
p1505
tp1506
I1
s(Vinsert
p1507
I42
VSimpleName: memoryCache
p1508
tp1509
I5
s(Vinsert
p1510
I42
VSimpleName: reader
p1511
tp1512
I2
s(Vinsert
p1513
I42
VSimpleName: checkTaskIsNotActual
p1514
tp1515
I1
s(Vinsert
p1516
I40
VQualifiedName: params.height
p1517
tp1518
I2
s(Vinsert
p1519
I43
VSimpleType: DiscCacheAware
p1520
tp1521
I1
s(Vinsert
p1522
I42
VSimpleName: discCacheFileCount
p1523
tp1524
I3
s(Vinsert
p1525
I42
VSimpleName: WARNING_DISC_CACHE_ALREADY_SET
p1526
tp1527
I1
s(Vinsert
p1528
I42
VSimpleName: setAnimation
p1529
tp1530
I1
s(Vinsert
p1531
I83
VModifier: static
p1532
tp1533
I17
s(Vinsert
p1534
I40
VQualifiedName: decodeOptions.inPreferredConfig
p1535
tp1536
I1
s(Vinsert
p1537
I42
VSimpleName: toString
p1538
tp1539
I6
s(Vinsert
p1540
I42
VSimpleName: progressListener
p1541
tp1542
I2
s(Vinsert
p1543
I42
VSimpleName: usageCount
p1544
tp1545
I2
s(Vinsert
p1546
I42
VSimpleName: specialOptions
p1547
tp1548
I1
s(Vinsert
p1549
I40
VQualifiedName: Shader.TileMode.CLAMP
p1550
tp1551
I6
s(Vinsert
p1552
I65
VTagElement: @link
p1553
tp1554
I9
s(Vinsert
p1555
I66
VTextElement: scheme(protocol)
p1556
tp1557
I1
s(Vinsert
p1558
I42
VSimpleName: reserveCacheDir
p1559
tp1560
I11
s(Vinsert
p1561
I66
VTextElement: This method is called only if image URI has unsupported scheme. Throws 
p1562
tp1563
I1
s(Vinsert
p1564
I42
VSimpleName: firstDisplay
p1565
tp1566
I1
s(Vinsert
p1567
I42
VSimpleName: close
p1568
tp1569
I11
s(Vinsert
p1570
I45
VStringLiteral: "Can't set a bitmap into view. You should call ImageLoader on UI thread for it."
p1571
tp1572
I1
s(Vinsert
p1573
I66
VTextElement:  for which display task will be cancelled
p1574
tp1575
I2
s(Vinsert
p1576
I42
VSimpleName: maxImageWidthForMemoryCache
p1577
tp1578
I1
s(Vinsert
p1579
I42
VSimpleName: FileNameGenerator
p1580
tp1581
I4
s(Vinsert
p1582
I42
VSimpleName: Scheme
p1583
tp1584
I3
s(Vinsert
p1585
I42
VSimpleName: HttpURLConnection
p1586
tp1587
I2
s(Vinsert
p1588
I42
VSimpleName: holder
p1589
tp1590
I1
s(Vinsert
p1591
I42
VSimpleName: format
p1592
tp1593
I7
s(Vinsert
p1594
I42
VSimpleName: setAccessible
p1595
tp1596
I3
s(Vinsert
p1597
I42
VSimpleName: response
p1598
tp1599
I1
s(Vinsert
p1600
I42
VSimpleName: shouldPostProcess
p1601
tp1602
I3
s(Vinsert
p1603
I42
VSimpleName: decode
p1604
tp1605
I2
s(Vinsert
p1606
I42
VSimpleName: contains
p1607
tp1608
I1
s(Vinsert
p1609
I42
VSimpleName: Exception
p1610
tp1611
I2
s(Vinsert
p1612
I29
VJavadoc
p1613
tp1614
I1
s(Vinsert
p1615
I74
VParameterizedType: Map.Entry<String,Entry>
p1616
tp1617
I1
s(Vinsert
p1618
I42
VSimpleName: getLayoutInflater
p1619
tp1620
I1
s(Vinsert
p1621
I42
VSimpleName: imageUri
p1622
tp1623
I27
s(Vinsert
p1624
I42
VSimpleName: encode
p1625
tp1626
I4
s(Vinsert
p1627
I42
VSimpleName: cachedImageLoadingExecutor
p1628
tp1629
I3
s(Vinsert
p1630
I42
VSimpleName: slowNetwork
p1631
tp1632
I1
s(Vinsert
p1633
I42
VSimpleName: MEDIA_MOUNTED
p1634
tp1635
I1
s(Vinsert
p1636
I42
VSimpleName: bytesSkipped
p1637
tp1638
I1
s(Vinsert
p1639
I42
VSimpleName: min
p1640
tp1641
I2
s(Vinsert
p1642
I42
VSimpleName: redirectCount
p1643
tp1644
I1
s(Vinsert
p1645
I42
VSimpleName: cacheDir
p1646
tp1647
I17
s(Vinsert
p1648
I27
VInfixExpression: <=
p1649
tp1650
I4
s(Vinsert
p1651
I42
VSimpleName: discCacheSize
p1652
tp1653
I1
s(Vinsert
p1654
I42
VSimpleName: taskExecutor
p1655
tp1656
I3
s(Vinsert
p1657
I42
VSimpleName: createReserveDiscCache
p1658
tp1659
I1
s(Vinsert
p1660
I42
VSimpleName: shutdownNow
p1661
tp1662
I1
s(Vinsert
p1663
I42
VSimpleName: fireProgressEvent
p1664
tp1665
I1
s(Vinsert
p1666
I42
VSimpleName: destroy
p1667
tp1668
I1
s(Vinsert
p1669
I42
VSimpleName: cached
p1670
tp1671
I3
s(Vinsert
p1672
I40
VQualifiedName: configuration.customExecutor
p1673
tp1674
I1
s(Vinsert
p1675
I43
VSimpleType: Thread
p1676
tp1677
I3
s(Vinsert
p1678
I42
VSimpleName: add
p1679
tp1680
I1
s(Vinsert
p1681
I27
VInfixExpression: /
p1682
tp1683
I3
s(Vinsert
p1684
I42
VSimpleName: getExtraForListener
p1685
tp1686
I3
s(Vinsert
p1687
I42
VSimpleName: loadedImage
p1688
tp1689
I2
s(Vinsert
p1690
I43
VSimpleType: BigInteger
p1691
tp1692
I2
s(Vinsert
p1693
I42
VSimpleName: cornerRadius
p1694
tp1695
I2
s(Vinsert
p1696
I45
VStringLiteral: "Unknown error"
p1697
tp1698
I1
s(Vinsert
p1699
I42
VSimpleName: denyNetworkDownloads
p1700
tp1701
I3
s(Vinsert
p1702
I42
VSimpleName: postSkew
p1703
tp1704
I1
s(Vinsert
p1705
I42
VSimpleName: bi
p1706
tp1707
I1
s(Vinsert
p1708
I42
VSimpleName: maxBitmapSize
p1709
tp1710
I2
s(Vinsert
p1711
I42
VSimpleName: post
p1712
tp1713
I2
s(Vinsert
p1714
I42
VSimpleName: log
p1715
tp1716
I5
s(Vinsert
p1717
I42
VSimpleName: setText
p1718
tp1719
I1
s(Vinsert
p1720
I43
VSimpleType: SecurityManager
p1721
tp1722
I1
s(Vinsert
p1723
I34
VNumberLiteral: 30
p1724
tp1725
I2
s(Vinsert
p1726
I42
VSimpleName: BitmapFactory
p1727
tp1728
I1
s(Vinsert
p1729
I42
VSimpleName: imageFile
p1730
tp1731
I11
s(Vinsert
p1732
I42
VSimpleName: closeable
p1733
tp1734
I2
s(Vinsert
p1735
I42
VSimpleName: read
p1736
tp1737
I8
s(Vinsert
p1738
I42
VSimpleName: UnlimitedDiscCache
p1739
tp1740
I1
s(Vinsert
p1741
I42
VSimpleName: ImageDecodingInfo
p1742
tp1743
I4
s(Vinsert
p1744
I42
VSimpleName: createDefault
p1745
tp1746
I12
s(Vinsert
p1747
I43
VSimpleType: ImageLoaderConfiguration
p1748
tp1749
I1
s(Vinsert
p1750
I42
VSimpleName: start
p1751
tp1752
I3
s(Vinsert
p1753
I42
VSimpleName: token
p1754
tp1755
I1
s(Vinsert
p1756
I42
VSimpleName: output
p1757
tp1758
I1
s(Vinsert
p1759
I42
VSimpleName: imageSize
p1760
tp1761
I3
s(Vinsert
p1762
I42
VSimpleName: putBoolean
p1763
tp1764
I1
s(Vinsert
p1765
I42
VSimpleName: compress
p1766
tp1767
I3
s(Vinsert
p1768
I42
VSimpleName: StorageUtils
p1769
tp1770
I6
s(Vinsert
p1771
I42
VSimpleName: loggingEnabled
p1772
tp1773
I4
s(Vinsert
p1774
I70
VEnhancedForStatement
p1775
tp1776
I4
s(Vinsert
p1777
I45
VStringLiteral: "uil-images"
p1778
tp1779
I1
s(Vinsert
p1780
I43
VSimpleType: HttpResponse
p1781
tp1782
I1
s(Vinsert
p1783
I39
VPrimitiveType: float
p1784
tp1785
I3
s(Vinsert
p1786
I40
VQualifiedName: configuration.processorForDiscCache
p1787
tp1788
I2
s(Vinsert
p1789
I42
VSimpleName: ImageSizeUtils
p1790
tp1791
I3
s(Vinsert
p1792
I42
VSimpleName: bytes
p1793
tp1794
I3
s(Vinsert
p1795
I42
VSimpleName: getDrawable
p1796
tp1797
I3
s(Vinsert
p1798
I42
VSimpleName: isDelayBeforeLoading
p1799
tp1800
I1
s(Vinsert
p1801
I42
VSimpleName: uri
p1802
tp1803
I7
s(Vinsert
p1804
I42
VSimpleName: LOG_GET_IMAGE_FROM_MEMORY_CACHE_AFTER_WAITING
p1805
tp1806
I1
s(Vinsert
p1807
I43
VSimpleType: FuzzyKeyCache
p1808
tp1809
I1
s(Vinsert
p1810
I42
VSimpleName: getWidth
p1811
tp1812
I13
s(Vinsert
p1813
I42
VSimpleName: Request
p1814
tp1815
I1
s(Vinsert
p1816
I42
VSimpleName: getSimpleName
p1817
tp1818
I1
s(Vinsert
p1819
I43
VSimpleType: ImageLoaderConfiguration.Builder
p1820
tp1821
I1
s(Vinsert
p1822
I43
VSimpleType: DisplayImageOptions.Builder
p1823
tp1824
I5
s(Vinsert
p1825
I33
VNullLiteral
p1826
tp1827
I49
s(Vinsert
p1828
I42
VSimpleName: isResetViewBeforeLoading
p1829
tp1830
I1
s(Vinsert
p1831
I43
VSimpleType: FileNameGenerator
p1832
tp1833
I1
s(Vinsert
p1834
I42
VSimpleName: maxHeightField
p1835
tp1836
I2
s(Vinsert
p1837
I42
VSimpleName: getStreamFromAssets
p1838
tp1839
I1
s(Vinsert
p1840
I7
VAssignment: =
p1841
tp1842
I81
s(Vinsert
p1843
I42
VSimpleName: openConnection
p1844
tp1845
I1
s(Vinsert
p1846
I42
VSimpleName: subsampledBitmap
p1847
tp1848
I1
s(Vinsert
p1849
I42
VSimpleName: LOG_CACHE_IMAGE_IN_MEMORY
p1850
tp1851
I1
s(Vinsert
p1852
I42
VSimpleName: imageDownloader
p1853
tp1854
I5
s(Vinsert
p1855
I42
VSimpleName: BitmapShader
p1856
tp1857
I1
s(Vinsert
p1858
I40
VQualifiedName: imageLoadingInfo.memoryCacheKey
p1859
tp1860
I2
s(Vinsert
p1861
I42
VSimpleName: imageDecoder
p1862
tp1863
I1
s(Vinsert
p1864
I45
VStringLiteral: "content://com.android.contacts/"
p1865
tp1866
I1
s(Vinsert
p1867
I42
VSimpleName: protocol
p1868
tp1869
I2
s(Vinsert
p1870
I66
VTextElement:  for network downloads; <b>false</b>
p1871
tp1872
I1
s(Vinsert
p1873
I43
VSimpleType: URI
p1874
tp1875
I3
s(Vinsert
p1876
I42
VSimpleName: bounds
p1877
tp1878
I2
s(Vinsert
p1879
I40
VQualifiedName: Constants.IMAGE_LOADER_TAG_KEY
p1880
tp1881
I1
s(Vinsert
p1882
I42
VSimpleName: getContactPhotoStream
p1883
tp1884
I1
s(Vinsert
p1885
I42
VSimpleName: ActivityManager
p1886
tp1887
I2
s(Vinsert
p1888
I42
VSimpleName: position
p1889
tp1890
I2
s(Vinsert
p1891
I42
VSimpleName: defineTargetSizeForView
p1892
tp1893
I1
s(Vinsert
p1894
I40
VQualifiedName: android.provider.ContactsContract
p1895
tp1896
I1
s(Vinsert
p1897
I42
VSimpleName: generateKey
p1898
tp1899
I2
s(Vinsert
p1900
I42
VSimpleName: titleRes
p1901
tp1902
I1
s(Vinsert
p1903
I42
VSimpleName: PROTOCOL_HTTP
p1904
tp1905
I1
s(Vinsert
p1906
I42
VSimpleName: TO_STRING_PATTERN
p1907
tp1908
I1
s(Vinsert
p1909
I42
VSimpleName: createMemoryCache
p1910
tp1911
I1
s(Vinsert
p1912
I42
VSimpleName: imageLayout
p1913
tp1914
I2
s(Vinsert
p1915
I43
VSimpleType: OutOfMemoryError
p1916
tp1917
I4
s(Vinsert
p1918
I42
VSimpleName: display
p1919
tp1920
I2
s(Vinsert
p1921
I42
VSimpleName: transformMatrix
p1922
tp1923
I1
s(Vinsert
p1924
I42
VSimpleName: encodedUrl
p1925
tp1926
I1
s(Vinsert
p1927
I27
VInfixExpression: >
p1928
tp1929
I6
s(Vinsert
p1930
I42
VSimpleName: V
p1931
tp1932
I7
s(Vinsert
p1933
I40
VQualifiedName: Build.VERSION_CODES.ECLAIR
p1934
tp1935
I1
s(Vinsert
p1936
I42
VSimpleName: isSyncLoading
p1937
tp1938
I6
s(Vinsert
p1939
I42
VSimpleName: getStreamFromFile
p1940
tp1941
I1
s(Vinsert
p1942
I43
VSimpleType: Runnable
p1943
tp1944
I1
s(Vinsert
p1945
I42
VSimpleName: displayOptions
p1946
tp1947
I3
s(Vinsert
p1948
I66
VTextElement: .<br />
p1949
tp1950
I1
s(Vinsert
p1951
I42
VSimpleName: individualDir
p1952
tp1953
I2
s(Vinsert
p1954
I42
VSimpleName: checkCallingOrSelfPermission
p1955
tp1956
I1
s(Vinsert
p1957
I42
VSimpleName: bRation
p1958
tp1959
I1
s(Vinsert
p1960
I34
VNumberLiteral: 590
p1961
tp1962
I2
s(Vinsert
p1963
I66
VTextElement:  resumed
p1964
tp1965
I1
s(Vinsert
p1966
I43
VSimpleType: PhotoToLoad
p1967
tp1968
I1
s(Vinsert
p1969
I43
VSimpleType: ImageDownloader
p1970
tp1971
I2
s(Vinsert
p1972
I43
VSimpleType: RectF
p1973
tp1974
I1
s(Vinsert
p1975
I43
VSimpleType: ViewHolder
p1976
tp1977
I1
s(Vinsert
p1978
I42
VSimpleName: threadPriority
p1979
tp1980
I3
s(Vinsert
p1981
I42
VSimpleName: w
p1982
tp1983
I14
s(Vinsert
p1984
I42
VSimpleName: decodeImageStream
p1985
tp1986
I1
s(Vinsert
p1987
I43
VSimpleType: ComplexImageActivity
p1988
tp1989
I1
s(Vinsert
p1990
I42
VSimpleName: getPauseLock
p1991
tp1992
I1
s(Vinsert
p1993
I43
VSimpleType: Bundle
p1994
tp1995
I4
s(Vinsert
p1996
I42
VSimpleName: wait
p1997
tp1998
I1
s(Vinsert
p1999
I66
VTextElement: 1) Get the actual drawn <b>getHeight()</b> of the View<br />
p2000
tp2001
I1
s(Vinsert
p2002
I42
VSimpleName: imageOnLoading
p2003
tp2004
I1
s(Vinsert
p2005
I40
VQualifiedName: com.nostra13.universalimageloader.core.assist.ContentLengthInputStream
p2006
tp2007
I1
s(Vinsert
p2008
I42
VSimpleName: initEmptyFiledsWithDefaultValues
p2009
tp2010
I1
s(Vinsert
p2011
I74
VParameterizedType: Entry<V,Long>
p2012
tp2013
I1
s(Vinsert
p2014
I42
VSimpleName: freedSize
p2015
tp2016
I1
s(Vinsert
p2017
I42
VSimpleName: targetImageSize
p2018
tp2019
I2
s(Vinsert
p2020
I43
VSimpleType: K
p2021
tp2022
I3
s(Vinsert
p2023
I42
VSimpleName: cancelDisplayTaskFor
p2024
tp2025
I1
s(Vinsert
p2026
I42
VSimpleName: asList
p2027
tp2028
I2
s(Vinsert
p2029
I42
VSimpleName: imageView
p2030
tp2031
I23
s(Vinsert
p2032
I40
VQualifiedName: configuration.reserveDiscCache
p2033
tp2034
I1
s(Vinsert
p2035
I42
VSimpleName: getDeclaredField
p2036
tp2037
I1
s(Vinsert
p2038
I42
VSimpleName: heavyImages
p2039
tp2040
I1
s(Vinsert
p2041
I42
VSimpleName: Resources
p2042
tp2043
I2
s(Vinsert
p2044
I42
VSimpleName: Menu
p2045
tp2046
I1
s(Vinsert
p2047
I42
VSimpleName: httpRequest
p2048
tp2049
I2
s(Vinsert
p2050
I42
VSimpleName: StrictMode
p2051
tp2052
I1
s(Vinsert
p2053
I66
VTextElement: Clears cache directory 
p2054
tp2055
I1
s(Vinsert
p2056
I34
VNumberLiteral: 5000
p2057
tp2058
I1
s(Vinsert
p2059
I43
VSimpleType: MarkableInputStream
p2060
tp2061
I1
s(Vinsert
p2062
I42
VSimpleName: Handler
p2063
tp2064
I4
s(Vinsert
p2065
I42
VSimpleName: getDisplayer
p2066
tp2067
I4
s(Vinsert
p2068
I40
VQualifiedName: DisplayImageOptions.Builder
p2069
tp2070
I5
s(Vinsert
p2071
I42
VSimpleName: field
p2072
tp2073
I1
s(Vinsert
p2074
I61
VWhileStatement
p2075
tp2076
I7
s(Vinsert
p2077
I42
VSimpleName: maxCacheSize
p2078
tp2079
I1
s(Vinsert
p2080
I42
VSimpleName: BufferedOutputStream
p2081
tp2082
I1
s(Vinsert
p2083
I42
VSimpleName: AnimationUtils
p2084
tp2085
I2
s(Vinsert
p2086
I42
VSimpleName: maxFileCount
p2087
tp2088
I1
s(Vinsert
p2089
I42
VSimpleName: getExternalStorageState
p2090
tp2091
I2
s(Vinsert
p2092
I66
VTextElement:  method.
p2093
tp2094
I1
s(Vinsert
p2095
I42
VSimpleName: POWER_OF_2
p2096
tp2097
I1
s(Vinsert
p2098
I43
VSimpleType: Handler
p2099
tp2100
I5
s(Vinsert
p2101
I42
VSimpleName: srcWidth
p2102
tp2103
I3
s(Vinsert
p2104
I40
VQualifiedName: FailReason.IO_ERROR
p2105
tp2106
I1
s(Vinsert
p2107
I42
VSimpleName: OutOfMemoryError
p2108
tp2109
I4
s(Vinsert
p2110
I43
VSimpleType: BitmapDrawable
p2111
tp2112
I2
s(Vinsert
p2113
I42
VSimpleName: uriScheme
p2114
tp2115
I1
s(Vinsert
p2116
I43
VSimpleType: Scheme
p2117
tp2118
I2
s(Vinsert
p2119
I85
VDimension
p2120
tp2121
I9
s(Vinsert
p2122
I45
VStringLiteral: "No stream for image [%s]"
p2123
tp2124
I2
s(Vinsert
p2125
I42
VSimpleName: bh
p2126
tp2127
I1
s(Vinsert
p2128
I74
VParameterizedType: Iterator<K>
p2129
tp2130
I1
s(Vinsert
p2131
I42
VSimpleName: mkdirs
p2132
tp2133
I1
s(Vinsert
p2134
I42
VSimpleName: getHandler
p2135
tp2136
I1
s(Vinsert
p2137
I40
VQualifiedName: LayoutParams.WRAP_CONTENT
p2138
tp2139
I1
s(Vinsert
p2140
I42
VSimpleName: newFixedThreadPool
p2141
tp2142
I2
s(Vinsert
p2143
I40
VQualifiedName: View.MeasureSpec
p2144
tp2145
I2
s(Vinsert
p2146
I42
VSimpleName: write
p2147
tp2148
I4
s(Vinsert
p2149
I34
VNumberLiteral: 65536
p2150
tp2151
I1
s(Vinsert
p2152
I42
VSimpleName: getSecurityManager
p2153
tp2154
I1
s(Vinsert
p2155
I42
VSimpleName: CROP
p2156
tp2157
I1
s(Vinsert
p2158
I42
VSimpleName: getCacheDirectory
p2159
tp2160
I6
s(Vinsert
p2161
I34
VNumberLiteral: 1024
p2162
tp2163
I4
s(Vinsert
p2164
I42
VSimpleName: saveImageOnDisc
p2165
tp2166
I1
s(Vinsert
p2167
I42
VSimpleName: interrupted
p2168
tp2169
I1
s(Vinsert
p2170
I42
VSimpleName: HashCodeFileNameGenerator
p2171
tp2172
I1
s(Vinsert
p2173
I43
VSimpleType: BufferedInputStream
p2174
tp2175
I2
s(Vinsert
p2176
I42
VSimpleName: closeSilently
p2177
tp2178
I4
s(Vinsert
p2179
I42
VSimpleName: removeLast
p2180
tp2181
I1
s(Vinsert
p2182
I45
VStringLiteral: "Cannot reset"
p2183
tp2184
I1
s(Vinsert
p2185
I42
VSimpleName: shaderMatrix
p2186
tp2187
I2
s(Vinsert
p2188
I40
VQualifiedName: ImageLoaderConfiguration.Builder
p2189
tp2190
I1
s(Vinsert
p2191
I40
VQualifiedName: imageLoadingInfo.loadFromUriLock
p2192
tp2193
I1
s(Vinsert
p2194
I27
VInfixExpression: &
p2195
tp2196
I1
s(Vinsert
p2197
I42
VSimpleName: createExecutor
p2198
tp2199
I1
s(Vinsert
p2200
I42
VSimpleName: TextUtils
p2201
tp2202
I1
s(Vinsert
p2203
I42
VSimpleName: handler
p2204
tp2205
I7
s(Vinsert
p2206
I42
VSimpleName: is
p2207
tp2208
I8
s(Vinsert
p2209
I42
VSimpleName: AnimationDrawable
p2210
tp2211
I2
s(Vinsert
p2212
I45
VStringLiteral: "uil-pool-"
p2213
tp2214
I1
s(Vinsert
p2215
I42
VSimpleName: onCreateOptionsMenu
p2216
tp2217
I1
s(Vinsert
p2218
I42
VSimpleName: ImageLoadingProgressListener
p2219
tp2220
I1
s(Vinsert
p2221
I42
VSimpleName: removedValue
p2222
tp2223
I1
s(Vinsert
p2224
I42
VSimpleName: getRuntime
p2225
tp2226
I1
s(Vinsert
p2227
I40
VQualifiedName: configuration.customExecutorForCachedImages
p2228
tp2229
I2
s(Vinsert
p2230
I42
VSimpleName: d
p2231
tp2232
I12
s(Vinsert
p2233
I42
VSimpleName: key
p2234
tp2235
I14
s(Vinsert
p2236
I43
VSimpleType: ImageGalleryActivity
p2237
tp2238
I1
s(Vinsert
p2239
I43
VSimpleType: Entry
p2240
tp2241
I2
s(Vinsert
p2242
I42
VSimpleName: Math
p2243
tp2244
I4
s(Vinsert
p2245
I42
VSimpleName: submit
p2246
tp2247
I2
s(Vinsert
p2248
I42
VSimpleName: bitmapConfig
p2249
tp2250
I2
s(Vinsert
p2251
I40
VQualifiedName: ImageScaleType.EXACT
p2252
tp2253
I1
s(Vinsert
p2254
I42
VSimpleName: AbsListView
p2255
tp2256
I1
s(Vinsert
p2257
I42
VSimpleName: width
p2258
tp2259
I5
s(Vinsert
p2260
I42
VSimpleName: savedSuccessfully
p2261
tp2262
I2
s(Vinsert
p2263
I42
VSimpleName: mRect
p2264
tp2265
I2
s(Vinsert
p2266
I42
VSimpleName: fireCallback
p2267
tp2268
I1
s(Vinsert
p2269
I42
VSimpleName: request
p2270
tp2271
I1
s(Vinsert
p2272
I43
VSimpleType: Editor
p2273
tp2274
I4
s(Vinsert
p2275
I42
VSimpleName: attempt
p2276
tp2277
I1
s(Vinsert
p2278
I42
VSimpleName: getAbsolutePath
p2279
tp2280
I2
s(Vinsert
p2281
I5
VArrayType: byte[]
p2282
tp2283
I4
s(Vinsert
p2284
I42
VSimpleName: createBitmap
p2285
tp2286
I2
s(Vinsert
p2287
I42
VSimpleName: sync
p2288
tp2289
I2
s(Vinsert
p2290
I42
VSimpleName: values
p2291
tp2292
I2
s(Vinsert
p2293
I42
VSimpleName: getIndividualCacheDirectory
p2294
tp2295
I2
s(Vinsert
p2296
I42
VSimpleName: context
p2297
tp2298
I15
s(Vinsert
p2299
I42
VSimpleName: getType
p2300
tp2301
I1
s(Vinsert
p2302
I42
VSimpleName: PROTOCOL_DRAWABLE
p2303
tp2304
I1
s(Vinsert
p2305
I40
VQualifiedName: DiskLruCache.Editor
p2306
tp2307
I1
s(Vinsert
p2308
I42
VSimpleName: ContentResolver
p2309
tp2310
I2
s(Vinsert
p2311
I42
VSimpleName: MATRIX
p2312
tp2313
I1
s(Vinsert
p2314
I42
VSimpleName: key2
p2315
tp2316
I1
s(Vinsert
p2317
I42
VSimpleName: getStreamFromContent
p2318
tp2319
I1
s(Vinsert
p2320
I78
VMarkerAnnotation
p2321
tp2322
I27
s(Vinsert
p2323
I40
VQualifiedName: configuration.defaultDisplayImageOptions
p2324
tp2325
I2
s(Vinsert
p2326
I42
VSimpleName: MIN_NORMAL_CACHE_SIZE
p2327
tp2328
I2
s(Vinsert
p2329
I42
VSimpleName: markSupported
p2330
tp2331
I3
s(Vinsert
p2332
I42
VSimpleName: saved
p2333
tp2334
I2
s(Vinsert
p2335
I42
VSimpleName: downloadSizedImage
p2336
tp2337
I1
s(Vinsert
p2338
I42
VSimpleName: addAll
p2339
tp2340
I3
s(Vinsert
p2341
I42
VSimpleName: LOG_TASK_INTERRUPTED
p2342
tp2343
I1
s(Vinsert
p2344
I42
VSimpleName: key1
p2345
tp2346
I2
s(Vinsert
p2347
I42
VSimpleName: imageInfo
p2348
tp2349
I1
s(Vinsert
p2350
I58
VVariableDeclarationExpression
p2351
tp2352
I1
s(Vinsert
p2353
I83
VModifier: public
p2354
tp2355
I37
s(Vinsert
p2356
I42
VSimpleName: getApplicationInfo
p2357
tp2358
I1
s(Vinsert
p2359
I42
VSimpleName: discCacheDir
p2360
tp2361
I1
s(Vinsert
p2362
I39
VPrimitiveType: byte
p2363
tp2364
I6
s(Vinsert
p2365
I40
VQualifiedName: lightImages.length
p2366
tp2367
I1
s(Vinsert
p2368
I43
VSimpleType: IllegalArgumentException
p2369
tp2370
I1
s(Vinsert
p2371
I42
VSimpleName: abs
p2372
tp2373
I1
s(Vinsert
p2374
I40
VQualifiedName: ImageLoader.TAG
p2375
tp2376
I2
s(Vinsert
p2377
I42
VSimpleName: toURL
p2378
tp2379
I2
s(Vinsert
p2380
I40
VQualifiedName: imageLoadingInfo.url
p2381
tp2382
I1
s(Vinsert
p2383
I42
VSimpleName: exists
p2384
tp2385
I12
s(Vinsert
p2386
I42
VSimpleName: t
p2387
tp2388
I2
s(Vinsert
p2389
I40
VQualifiedName: configuration.resources
p2390
tp2391
I3
s(Vinsert
p2392
I42
VSimpleName: maxWidth
p2393
tp2394
I1
s(Vinsert
p2395
I42
VSimpleName: ImageSize
p2396
tp2397
I8
s(Vinsert
p2398
I42
VSimpleName: Reference
p2399
tp2400
I3
s(Vinsert
p2401
I40
VQualifiedName: imageLoadingInfo.listener
p2402
tp2403
I1
s(Vinsert
p2404
I66
VTextElement:  at first.
p2405
tp2406
I1
s(Vinsert
p2407
I42
VSimpleName: build
p2408
tp2409
I23
s(Vinsert
p2410
I43
VSimpleType: Animation
p2411
tp2412
I2
s(Vinsert
p2413
I43
VSimpleType: InputStream
p2414
tp2415
I7
s(Vinsert
p2416
I42
VSimpleName: substring
p2417
tp2418
I1
s(Vinsert
p2419
I42
VSimpleName: LOG_POSTPROCESS_IMAGE
p2420
tp2421
I1
s(Vinsert
p2422
I34
VNumberLiteral: 16
p2423
tp2424
I1
s(Vinsert
p2425
I43
VSimpleType: DisplayImageOptions
p2426
tp2427
I7
s(Vinsert
p2428
I42
VSimpleName: ViewHolder
p2429
tp2430
I1
s(Vinsert
p2431
I42
VSimpleName: hardCache
p2432
tp2433
I5
s(Vinsert
p2434
I42
VSimpleName: mView
p2435
tp2436
I2
s(Vinsert
p2437
I42
VSimpleName: photoToLoad
p2438
tp2439
I1
s(Vinsert
p2440
I42
VSimpleName: MEMORY_SAVING
p2441
tp2442
I1
s(Vinsert
p2443
I42
VSimpleName: Looper
p2444
tp2445
I1
s(Vinsert
p2446
I42
VSimpleName: readlimit
p2447
tp2448
I4
s(Vinsert
p2449
I43
VSimpleType: Exception
p2450
tp2451
I1
s(Vinsert
p2452
I43
VSimpleType: ImageLoadingProgressListener
p2453
tp2454
I1
s(Vinsert
p2455
I45
VStringLiteral: "/data/data/"
p2456
tp2457
I2
s(Vinsert
p2458
I42
VSimpleName: decoder
p2459
tp2460
I9
s(Vinsert
p2461
I40
VQualifiedName: android.graphics.drawable.AnimationDrawable
p2462
tp2463
I1
s(Vinsert
p2464
I42
VSimpleName: ImageLoadingListener
p2465
tp2466
I1
s(Vinsert
p2467
I7
VAssignment: +=
p2468
tp2469
I1
s(Vinsert
p2470
I42
VSimpleName: getStreamFromNetwork
p2471
tp2472
I1
s(Vinsert
p2473
I42
VSimpleName: L
p2474
tp2475
I19
s(Vinsert
p2476
I42
VSimpleName: startActivity
p2477
tp2478
I1
s(Vinsert
p2479
I42
VSimpleName: usingCounts
p2480
tp2481
I1
s(Vinsert
p2482
I42
VSimpleName: from
p2483
tp2484
I6
s(Vinsert
p2485
I43
VSimpleType: ProcessAndDisplayImageTask
p2486
tp2487
I1
s(Vinsert
p2488
I42
VSimpleName: Executors
p2489
tp2490
I3
s(Vinsert
p2491
I42
VSimpleName: container
p2492
tp2493
I2
s(Vinsert
p2494
I42
VSimpleName: InputStream
p2495
tp2496
I8
s(Vinsert
p2497
I1
VAnonymousClassDeclaration
p2498
tp2499
I3
s(Vinsert
p2500
I42
VSimpleName: get
p2501
tp2502
I19
s(Vinsert
p2503
I34
VNumberLiteral: 500
p2504
tp2505
I4
s(Vinsert
p2506
I42
VSimpleName: setDither
p2507
tp2508
I1
s(Vinsert
p2509
I42
VSimpleName: listFiles
p2510
tp2511
I3
s(Vinsert
p2512
I7
VAssignment: -=
p2513
tp2514
I1
s(Vinsert
p2515
I38
VPrefixExpression: -
p2516
tp2517
I1
s(Vinsert
p2518
I40
VQualifiedName: configuration.memoryCache
p2519
tp2520
I1
s(Vinsert
p2521
I44
VSingleVariableDeclaration
p2522
tp2523
I111
s(Vinsert
p2524
I42
VSimpleName: MenuItem
p2525
tp2526
I2
s(Vinsert
p2527
I42
VSimpleName: getItemId
p2528
tp2529
I2
s(Vinsert
p2530
I42
VSimpleName: getDiscCache
p2531
tp2532
I1
s(Vinsert
p2533
I42
VSimpleName: isTaskNotActual
p2534
tp2535
I1
s(Vinsert
p2536
I42
VSimpleName: fireImageLoadingFailedEvent
p2537
tp2538
I1
s(Vinsert
p2539
I42
VSimpleName: Uri
p2540
tp2541
I3
s(Vinsert
p2542
I43
VSimpleType: Resources
p2543
tp2544
I1
s(Vinsert
p2545
I43
VSimpleType: View
p2546
tp2547
I5
s(Vinsert
p2548
I42
VSimpleName: Thread
p2549
tp2550
I3
s(Vinsert
p2551
I42
VSimpleName: Integer
p2552
tp2553
I1
s(Vinsert
p2554
I42
VSimpleName: getWrappedView
p2555
tp2556
I6
s(Vinsert
p2557
I42
VSimpleName: ImageDownloader
p2558
tp2559
I3
s(Vinsert
p2560
I40
VQualifiedName: R.layout.fr_image_pager
p2561
tp2562
I1
s(Vinsert
p2563
I42
VSimpleName: cacheMaxSize
p2564
tp2565
I1
s(Vinsert
p2566
I42
VSimpleName: targetFile
p2567
tp2568
I2
s(Vinsert
p2569
I42
VSimpleName: networkDeniedDownloader
p2570
tp2571
I1
s(Vinsert
p2572
I42
VSimpleName: DEFAULT_HTTP_CONNECT_TIMEOUT
p2573
tp2574
I1
s(Vinsert
p2575
I42
VSimpleName: MIN_NORMAL_CACHE_SIZE_IN_MB
p2576
tp2577
I1
s(Vinsert
p2578
I43
VSimpleType: String
p2579
tp2580
I52
s(Vinsert
p2581
I42
VSimpleName: bmp
p2582
tp2583
I10
s(Vinsert
p2584
I42
VSimpleName: ContentLengthInputStream
p2585
tp2586
I3
s(Vinsert
p2587
I42
VSimpleName: savePosition
p2588
tp2589
I1
s(Vinsert
p2590
I43
VSimpleType: BufferedOutputStream
p2591
tp2592
I1
s(Vinsert
p2593
I42
VSimpleName: it
p2594
tp2595
I3
s(Vinsert
p2596
I42
VSimpleName: Closeable
p2597
tp2598
I1
s(Vinsert
p2599
I43
VSimpleType: DiskLruCache.Editor
p2600
tp2601
I1
s(Vinsert
p2602
I42
VSimpleName: buffer_size
p2603
tp2604
I1
s(Vinsert
p2605
I43
VSimpleType: DisplayMetrics
p2606
tp2607
I1
s(Vinsert
p2608
I42
VSimpleName: Bundle
p2609
tp2610
I4
s(Vinsert
p2611
I42
VSimpleName: Runtime
p2612
tp2613
I1
s(Vinsert
p2614
I42
VSimpleName: e
p2615
tp2616
I27
s(Vinsert
p2617
I42
VSimpleName: scrollState
p2618
tp2619
I2
s(Vinsert
p2620
I42
VSimpleName: FileOutputStream
p2621
tp2622
I2
s(Vinsert
p2623
I42
VSimpleName: LOG_DISPLAY_IMAGE_IN_IMAGEVIEW
p2624
tp2625
I2
s(Vinsert
p2626
I42
VSimpleName: lastUsageDates
p2627
tp2628
I3
s(Vinsert
p2629
I42
VSimpleName: permission
p2630
tp2631
I1
s(Vinsert
p2632
I42
VSimpleName: defineImageSizeAndRotation
p2633
tp2634
I1
s(Vinsert
p2635
I42
VSimpleName: createForListView
p2636
tp2637
I1
s(Vinsert
p2638
I67
VMemberRef
p2639
tp2640
I3
s(Vinsert
p2641
I66
VTextElement: Submits task to execution pool 
p2642
tp2643
I1
s(Vinsert
p2644
I28
VInitializer
p2645
tp2646
I1
s(Vinsert
p2647
I42
VSimpleName: createImageDecoder
p2648
tp2649
I1
s(Vinsert
p2650
I42
VSimpleName: loaded
p2651
tp2652
I5
s(Vinsert
p2653
I42
VSimpleName: toLowerCase
p2654
tp2655
I2
s(Vinsert
p2656
I42
VSimpleName: Environment
p2657
tp2658
I2
s(Vinsert
p2659
I43
VSimpleType: Reference
p2660
tp2661
I3
s(Vinsert
p2662
I42
VSimpleName: menu
p2663
tp2664
I1
s(Vinsert
p2665
I42
VSimpleName: setImageResource
p2666
tp2667
I2
s(Vinsert
p2668
I41
VReturnStatement
p2669
tp2670
I33
s(Vinsert
p2671
I43
VSimpleType: ImageDecoder
p2672
tp2673
I1
s(Vinsert
p2674
I45
VStringLiteral: "data"
p2675
tp2676
I1
s(Vinsert
p2677
I42
VSimpleName: totalBytesSkipped
p2678
tp2679
I2
s(Vinsert
p2680
I42
VSimpleName: filePath
p2681
tp2682
I2
s(Vinsert
p2683
I42
VSimpleName: MarkableInputStream
p2684
tp2685
I1
s(Vinsert
p2686
I42
VSimpleName: System
p2687
tp2688
I5
s(Vinsert
p2689
I42
VSimpleName: taskExecutorForCachedImages
p2690
tp2691
I4
s(Vinsert
p2692
I42
VSimpleName: task
p2693
tp2694
I1
s(Vinsert
p2695
I42
VSimpleName: valueOf
p2696
tp2697
I4
s(Vinsert
p2698
I42
VSimpleName: Long
p2699
tp2700
I3
s(Vinsert
p2701
I42
VSimpleName: powerOf2Scale
p2702
tp2703
I1
s(Vinsert
p2704
I43
VSimpleType: URL
p2705
tp2706
I3
s(Vinsert
p2707
I27
VInfixExpression: <
p2708
tp2709
I6
s(Vinsert
p2710
I42
VSimpleName: IllegalStateException
p2711
tp2712
I1
s(Vinsert
p2713
I66
VTextElement:  by
p2714
tp2715
I1
s(Vinsert
p2716
I32
VMethodInvocation
p2717
tp2718
I446
s(Vinsert
p2719
I42
VSimpleName: currentTime
p2720
tp2721
I1
s(Vinsert
p2722
I42
VSimpleName: lruCache
p2723
tp2724
I1
s(Vinsert
p2725
I42
VSimpleName: LayoutInflater
p2726
tp2727
I4
s(Vinsert
p2728
I42
VSimpleName: getPostProcessor
p2729
tp2730
I1
s(Vinsert
p2731
I42
VSimpleName: Options
p2732
tp2733
I2
s(Vinsert
p2734
I42
VSimpleName: setConnectTimeout
p2735
tp2736
I1
s(Vinsert
p2737
I42
VSimpleName: run
p2738
tp2739
I5
s(Vinsert
p2740
I42
VSimpleName: getExtraForDownloader
p2741
tp2742
I2
s(Vinsert
p2743
I42
VSimpleName: imageStream
p2744
tp2745
I15
s(Vinsert
p2746
I42
VSimpleName: mBitmapRect
p2747
tp2748
I1
s(Vinsert
p2749
I16
VConditionalExpression
p2750
tp2751
I6
s(Vinsert
p2752
I42
VSimpleName: PROTOCOL_ASSETS
p2753
tp2754
I1
s(Vinsert
p2755
I42
VSimpleName: queue
p2756
tp2757
I2
s(Vinsert
p2758
I42
VSimpleName: isTaskInterrupted
p2759
tp2760
I1
s(Vinsert
p2761
I42
VSimpleName: responseBody
p2762
tp2763
I2
s(Vinsert
p2764
I42
VSimpleName: shouldContinue
p2765
tp2766
I1
s(Vinsert
p2767
I42
VSimpleName: INVALID_READ_SIZE
p2768
tp2769
I3
s(Vinsert
p2770
I42
VSimpleName: CONTENT_CONTACTS_URI_PREFIX
p2771
tp2772
I1
s(Vinsert
p2773
I40
VQualifiedName: R.anim.fade_in
p2774
tp2775
I1
s(Vinsert
p2776
I42
VSimpleName: view
p2777
tp2778
I5
s(Vinsert
p2779
I42
VSimpleName: ImageGalleryActivity
p2780
tp2781
I1
s(Vinsert
p2782
I74
VParameterizedType: FuzzyKeyMemoryCache<String,Bitmap>
p2783
tp2784
I1
s(Vinsert
p2785
I42
VSimpleName: Animation
p2786
tp2787
I2
s(Vinsert
p2788
I40
VQualifiedName: configuration.downloader
p2789
tp2790
I2
s(Vinsert
p2791
I34
VNumberLiteral: 270
p2792
tp2793
I1
s(Vinsert
p2794
I42
VSimpleName: setRectToRect
p2795
tp2796
I1
s(Vinsert
p2797
I42
VSimpleName: scaleType
p2798
tp2799
I6
s(Vinsert
p2800
I40
VQualifiedName: com.nostra13.universalimageloader.core.assist.OnScrollSmartOptions
p2801
tp2802
I1
s(Vinsert
p2803
I42
VSimpleName: decodeWithOOMHandling
p2804
tp2805
I1
s(Vinsert
p2806
I42
VSimpleName: current
p2807
tp2808
I2
s(Vinsert
p2809
I42
VSimpleName: valueSizes
p2810
tp2811
I1
s(Vinsert
p2812
I42
VSimpleName: flush
p2813
tp2814
I1
s(Vinsert
p2815
I66
VTextElement: DisplayImageOptions.extraForDownloader(Object)
p2816
tp2817
I1
s(Vinsert
p2818
I42
VSimpleName: tag
p2819
tp2820
I1
s(Vinsert
p2821
I42
VSimpleName: BigInteger
p2822
tp2823
I2
s(Vinsert
p2824
I3
VArrayCreation
p2825
tp2826
I3
s(Vinsert
p2827
I42
VSimpleName: Builder
p2828
tp2829
I6
s(Vinsert
p2830
I42
VSimpleName: calculateCacheSizeAndFillUsageMap
p2831
tp2832
I1
s(Vinsert
p2833
I42
VSimpleName: IOException
p2834
tp2835
I24
s(Vinsert
p2836
I42
VSimpleName: readAndCloseStream
p2837
tp2838
I2
s(Vinsert
p2839
I42
VSimpleName: scale
p2840
tp2841
I1
s(Vinsert
p2842
I42
VSimpleName: Toast
p2843
tp2844
I1
s(Vinsert
p2845
I42
VSimpleName: ViewGroup
p2846
tp2847
I1
s(Vinsert
p2848
I42
VSimpleName: toByteArray
p2849
tp2850
I1
s(Vinsert
p2851
I42
VSimpleName: RadialGradient
p2852
tp2853
I4
s(Vinsert
p2854
I42
VSimpleName: remove
p2855
tp2856
I15
s(Vinsert
p2857
I42
VSimpleName: fileName
p2858
tp2859
I1
s(Vinsert
p2860
I42
VSimpleName: generate
p2861
tp2862
I2
s(Vinsert
p2863
I42
VSimpleName: OnScrollSmartOptions
p2864
tp2865
I4
s(Vinsert
p2866
I42
VSimpleName: contentLength
p2867
tp2868
I2
s(Vinsert
p2869
I42
VSimpleName: createTaskExecutor
p2870
tp2871
I3
s(Vinsert
p2872
I42
VSimpleName: imageResOnLoading
p2873
tp2874
I1
s(Vinsert
p2875
I83
VModifier: private
p2876
tp2877
I10
s(Vinsert
p2878
I42
VSimpleName: rotation
p2879
tp2880
I1
s(Vinsert
p2881
I10
VBreakStatement
p2882
tp2883
I7
s(Vinsert
p2884
I42
VSimpleName: createThreadFactory
p2885
tp2886
I1
s(Vinsert
p2887
I42
VSimpleName: file
p2888
tp2889
I3
s(Vinsert
p2890
I42
VSimpleName: getRowBytes
p2891
tp2892
I2
s(Vinsert
p2893
I43
VSimpleType: StrictMode.ThreadPolicy.Builder
p2894
tp2895
I1
s(Vinsert
p2896
I42
VSimpleName: MAX_NORMAL_CACHE_SIZE
p2897
tp2898
I2
s(Vinsert
p2899
I42
VSimpleName: httpClient
p2900
tp2901
I1
s(Vinsert
p2902
I42
VSimpleName: equals
p2903
tp2904
I6
s(Vinsert
p2905
I42
VSimpleName: SecurityManager
p2906
tp2907
I1
s(Vinsert
p2908
I42
VSimpleName: writeDebugLogs
p2909
tp2910
I1
s(Vinsert
p2911
I12
VCatchClause
p2912
tp2913
I11
s(Vinsert
p2914
I43
VSimpleType: AnimationDrawable
p2915
tp2916
I2
s(Vinsert
p2917
I45
VStringLiteral: "%sx%s"
p2918
tp2919
I1
s(Vinsert
p2920
I42
VSimpleName: cacheDirPath
p2921
tp2922
I2
s(Vinsert
p2923
I42
VSimpleName: ImageGridFragment
p2924
tp2925
I1
s(Vinsert
p2926
I42
VSimpleName: vignette
p2927
tp2928
I2
s(Vinsert
p2929
I42
VSimpleName: put
p2930
tp2931
I9
s(Vinsert
p2932
I17
VConstructorInvocation
p2933
tp2934
I3
s(Vinsert
p2935
I42
VSimpleName: roundBitmap
p2936
tp2937
I1
s(Vinsert
p2938
I48
VSuperMethodInvocation
p2939
tp2940
I9
s(Vinsert
p2941
I66
VTextElement:  returns null).
p2942
tp2943
I2
s(Vinsert
p2944
I42
VSimpleName: gc
p2945
tp2946
I1
s(Vinsert
p2947
I43
VSimpleType: ImageView
p2948
tp2949
I9
s(Vinsert
p2950
I42
VSimpleName: displayMetrics
p2951
tp2952
I2
s(Vinsert
p2953
I43
VSimpleType: Object
p2954
tp2955
I7
s(Vinsert
p2956
I42
VSimpleName: getHeight
p2957
tp2958
I7
s(Vinsert
p2959
I42
VSimpleName: open
p2960
tp2961
I1
s(Vinsert
p2962
I42
VSimpleName: individualCacheDir
p2963
tp2964
I5
s(Vinsert
p2965
I42
VSimpleName: createReserveDiscCacheDir
p2966
tp2967
I1
s(Vinsert
p2968
I40
VQualifiedName: CompressFormat.PNG
p2969
tp2970
I1
s(Vinsert
p2971
I42
VSimpleName: getMaxImageSize
p2972
tp2973
I1
s(Vinsert
p2974
I43
VSimpleType: File
p2975
tp2976
I26
s(Vinsert
p2977
I42
VSimpleName: onOptionsItemSelected
p2978
tp2979
I2
s(Vinsert
p2980
I42
VSimpleName: checkImageViewRef
p2981
tp2982
I1
s(Vinsert
p2983
I42
VSimpleName: isSlowNetwork
p2984
tp2985
I2
s(Vinsert
p2986
I42
VSimpleName: onLoadingComplete
p2987
tp2988
I3
s(Vinsert
p2989
I42
VSimpleName: getHeaderField
p2990
tp2991
I1
s(Vinsert
p2992
I53
VThrowStatement
p2993
tp2994
I4
s(Vinsert
p2995
I45
VStringLiteral: "ftp"
p2996
tp2997
I1
s(Vinsert
p2998
I43
VSimpleType: URLConnection
p2999
tp3000
I1
s(Vinsert
p3001
I42
VSimpleName: copyStream
p3002
tp3003
I1
s(Vinsert
p3004
I42
VSimpleName: Rect
p3005
tp3006
I1
s(Vinsert
p3007
I42
VSimpleName: lruEntries
p3008
tp3009
I1
s(Vinsert
p3010
I42
VSimpleName: fileNameGenerator
p3011
tp3012
I3
s(Vinsert
p3013
I42
VSimpleName: layout
p3014
tp3015
I1
s(Vinsert
p3016
I42
VSimpleName: max
p3017
tp3018
I1
s(Vinsert
p3019
I42
VSimpleName: paused
p3020
tp3021
I1
s(Vinsert
p3022
I42
VSimpleName: setOnScrollListener
p3023
tp3024
I2
s(Vinsert
p3025
I42
VSimpleName: Matrix
p3026
tp3027
I2
s(Vinsert
p3028
I45
VStringLiteral: "android.permission.WRITE_EXTERNAL_STORAGE"
p3029
tp3030
I1
s(Vinsert
p3031
I42
VSimpleName: lastModified
p3032
tp3033
I1
s(Vinsert
p3034
I42
VSimpleName: init
p3035
tp3036
I1
s(Vinsert
p3037
I42
VSimpleName: ImageView
p3038
tp3039
I11
s(Vinsert
p3040
I42
VSimpleName: ImagePagerActivity
p3041
tp3042
I3
s(Vinsert
p3043
I42
VSimpleName: getTag
p3044
tp3045
I1
s(Vinsert
p3046
I42
VSimpleName: configuration
p3047
tp3048
I1
s(Vinsert
p3049
I43
VSimpleType: Long
p3050
tp3051
I2
s(Vinsert
p3052
I42
VSimpleName: showStubImage
p3053
tp3054
I1
s(Vinsert
p3055
I42
VSimpleName: cachedFiles
p3056
tp3057
I1
s(Vinsert
p3058
I42
VSimpleName: views
p3059
tp3060
I1
s(Vinsert
p3061
I66
VTextElement: 2) Get <b>layout_height</b>. If it hasn't exact value then go to step #3.<br />
p3062
tp3063
I1
s(Vinsert
p3064
I66
VTextElement: default.
p3065
tp3066
I1
s(Vinsert
p3067
I42
VSimpleName: removeNext
p3068
tp3069
I1
s(Vinsert
p3070
I60
VVariableDeclarationStatement
p3071
tp3072
I118
s(Vinsert
p3073
I43
VSimpleType: Intent
p3074
tp3075
I8
s(Vinsert
p3076
I42
VSimpleName: size
p3077
tp3078
I2
s(Vinsert
p3079
I42
VSimpleName: NETWORK_DENIED
p3080
tp3081
I2
s(Vinsert
p3082
I42
VSimpleName: map
p3083
tp3084
I1
s(Vinsert
p3085
I42
VSimpleName: floor
p3086
tp3087
I1
s(Vinsert
p3088
I42
VSimpleName: setThreadPolicy
p3089
tp3090
I1
s(Vinsert
p3091
I42
VSimpleName: getMD5
p3092
tp3093
I1
s(Vinsert
p3094
I42
VSimpleName: fromImageView
p3095
tp3096
I2
s(Vinsert
p3097
I66
VTextElement: 2) Get <b>layout_height</b>
p3098
tp3099
I1
s(Vinsert
p3100
I42
VSimpleName: customListener
p3101
tp3102
I1
s(Vinsert
p3103
I21
VExpressionStatement
p3104
tp3105
I215
s(Vinsert
p3106
I42
VSimpleName: getDisplayMetrics
p3107
tp3108
I1
s(Vinsert
p3109
I40
VQualifiedName: android.content.Context
p3110
tp3111
I1
s(Vinsert
p3112
I34
VNumberLiteral: 100
p3113
tp3114
I1
s(Vinsert
p3115
I26
VImportDeclaration
p3116
tp3117
I2
s(Vinsert
p3118
I42
VSimpleName: Iterator
p3119
tp3120
I2
s(Vinsert
p3121
I42
VSimpleName: snapshot
p3122
tp3123
I4
s(Vinsert
p3124
I42
VSimpleName: item
p3125
tp3126
I4
s(Vinsert
p3127
I42
VSimpleName: LOG_PROCESS_IMAGE_BEFORE_CACHE_ON_DISC
p3128
tp3129
I1
s(Vinsert
p3130
I27
VInfixExpression: *
p3131
tp3132
I4
s.